;-- section..plt:
;-- .plt:
0x000018a0      ff352a752100   push qword [0x00218dd0]                 ; [12] -r-x section size 992 named .plt
0x000018a6      ff252c752100   jmp qword [0x00218dd8]                  ; [0x218dd8:8]=0
0x000018ac      0f1f4000       nop dword [rax]
;-- imp.__ctype_toupper_loc:
0x000018b0      ff252a752100   jmp qword [reloc.__ctype_toupper_loc]   ; [0x218de0:8]=0x18b6
0x000018b6      6800000000     push 0
0x000018bb      e9e0ffffff     jmp sym..plt
;-- imp.__uflow:
0x000018c0      ff2522752100   jmp qword [reloc.__uflow]               ; [0x218de8:8]=0x18c6
0x000018c6      6801000000     push 1
0x000018cb      e9d0ffffff     jmp sym..plt
;-- imp.free:
0x000018d0      ff251a752100   jmp qword [reloc.free]                  ; [0x218df0:8]=0x18d6
0x000018d6      6802000000     push 2
0x000018db      e9c0ffffff     jmp sym..plt
;-- imp.abort:
0x000018e0      ff2512752100   jmp qword [reloc.abort]                 ; [0x218df8:8]=0x18e6
0x000018e6      6803000000     push 3
0x000018eb      e9b0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x000018f0      ff250a752100   jmp qword [reloc.__errno_location]      ; [0x218e00:8]=0x18f6
0x000018f6      6804000000     push 4
0x000018fb      e9a0ffffff     jmp sym..plt
;-- imp.strncmp:
0x00001900      ff2502752100   jmp qword [reloc.strncmp]               ; [0x218e08:8]=0x1906
0x00001906      6805000000     push 5
0x0000190b      e990ffffff     jmp sym..plt
;-- imp._exit:
0x00001910      ff25fa742100   jmp qword [reloc._exit]                 ; [0x218e10:8]=0x1916
0x00001916      6806000000     push 6
0x0000191b      e980ffffff     jmp sym..plt
;-- imp.strcpy:
0x00001920      ff25f2742100   jmp qword [reloc.strcpy]                ; [0x218e18:8]=0x1926 ; "&\x19"
0x00001926      6807000000     push 7
0x0000192b      e970ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001930      ff25ea742100   jmp qword [reloc.__fpending]            ; [0x218e20:8]=0x1936 ; "6\x19"
0x00001936      6808000000     push 8
0x0000193b      e960ffffff     jmp sym..plt
;-- imp.clearerr_unlocked:
0x00001940      ff25e2742100   jmp qword [reloc.clearerr_unlocked]     ; [0x218e28:8]=0x1946 ; "F\x19"
0x00001946      6809000000     push 9
0x0000194b      e950ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001950      ff25da742100   jmp qword [reloc.textdomain]            ; [0x218e30:8]=0x1956 ; "V\x19"
0x00001956      680a000000     push 0xa
0x0000195b      e940ffffff     jmp sym..plt
;-- imp.__strtol_internal:
0x00001960      ff25d2742100   jmp qword [reloc.__strtol_internal]     ; [0x218e38:8]=0x1966 ; "f\x19"
0x00001966      680b000000     push 0xb
0x0000196b      e930ffffff     jmp sym..plt
;-- imp.iswctype:
0x00001970      ff25ca742100   jmp qword [reloc.iswctype]              ; [0x218e40:8]=0x1976 ; "v\x19"
0x00001976      680c000000     push 0xc
0x0000197b      e920ffffff     jmp sym..plt
;-- imp.fclose:
0x00001980      ff25c2742100   jmp qword [reloc.fclose]                ; [0x218e48:8]=0x1986
0x00001986      680d000000     push 0xd
0x0000198b      e910ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001990      ff25ba742100   jmp qword [reloc.bindtextdomain]        ; [0x218e50:8]=0x1996
0x00001996      680e000000     push 0xe
0x0000199b      e900ffffff     jmp sym..plt
;-- imp.stpcpy:
0x000019a0      ff25b2742100   jmp qword [reloc.stpcpy]                ; [0x218e58:8]=0x19a6
0x000019a6      680f000000     push 0xf
0x000019ab      e9f0feffff     jmp sym..plt
;-- imp.dcgettext:
0x000019b0      ff25aa742100   jmp qword [reloc.dcgettext]             ; [0x218e60:8]=0x19b6
0x000019b6      6810000000     push 0x10
0x000019bb      e9e0feffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x000019c0      ff25a2742100   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x218e68:8]=0x19c6
0x000019c6      6811000000     push 0x11
0x000019cb      e9d0feffff     jmp sym..plt
;-- imp.strlen:
0x000019d0      ff259a742100   jmp qword [reloc.strlen]                ; [0x218e70:8]=0x19d6
0x000019d6      6812000000     push 0x12
0x000019db      e9c0feffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x000019e0      ff2592742100   jmp qword [reloc.__stack_chk_fail]      ; [0x218e78:8]=0x19e6
0x000019e6      6813000000     push 0x13
0x000019eb      e9b0feffff     jmp sym..plt
;-- imp.getopt_long:
0x000019f0      ff258a742100   jmp qword [reloc.getopt_long]           ; [0x218e80:8]=0x19f6
0x000019f6      6814000000     push 0x14
0x000019fb      e9a0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001a00      ff2582742100   jmp qword [reloc.mbrtowc]               ; [0x218e88:8]=0x1a06
0x00001a06      6815000000     push 0x15
0x00001a0b      e990feffff     jmp sym..plt
;-- imp.strchr:
0x00001a10      ff257a742100   jmp qword [reloc.strchr]                ; [0x218e90:8]=0x1a16
0x00001a16      6816000000     push 0x16
0x00001a1b      e980feffff     jmp sym..plt
;-- imp.__overflow:
0x00001a20      ff2572742100   jmp qword [reloc.__overflow]            ; [0x218e98:8]=0x1a26 ; "&\x1a"
0x00001a26      6817000000     push 0x17
0x00001a2b      e970feffff     jmp sym..plt
;-- imp.strrchr:
0x00001a30      ff256a742100   jmp qword [reloc.strrchr]               ; [0x218ea0:8]=0x1a36 ; "6\x1a"
0x00001a36      6818000000     push 0x18
0x00001a3b      e960feffff     jmp sym..plt
;-- imp.lseek:
0x00001a40      ff2562742100   jmp qword [reloc.lseek]                 ; [0x218ea8:8]=0x1a46 ; "F\x1a"
0x00001a46      6819000000     push 0x19
0x00001a4b      e950feffff     jmp sym..plt
;-- imp.__assert_fail:
0x00001a50      ff255a742100   jmp qword [reloc.__assert_fail]         ; [0x218eb0:8]=0x1a56 ; "V\x1a"
0x00001a56      681a000000     push 0x1a
0x00001a5b      e940feffff     jmp sym..plt
;-- imp.memset:
0x00001a60      ff2552742100   jmp qword [reloc.memset]                ; [0x218eb8:8]=0x1a66 ; "f\x1a"
0x00001a66      681b000000     push 0x1b
0x00001a6b      e930feffff     jmp sym..plt
;-- imp.posix_fadvise:
0x00001a70      ff254a742100   jmp qword [reloc.posix_fadvise]         ; [0x218ec0:8]=0x1a76 ; "v\x1a"
0x00001a76      681c000000     push 0x1c
0x00001a7b      e920feffff     jmp sym..plt
;-- imp.memcmp:
0x00001a80      ff2542742100   jmp qword [reloc.memcmp]                ; [0x218ec8:8]=0x1a86
0x00001a86      681d000000     push 0x1d
0x00001a8b      e910feffff     jmp sym..plt
;-- imp.wctype:
0x00001a90      ff253a742100   jmp qword [reloc.wctype]                ; [0x218ed0:8]=0x1a96
0x00001a96      681e000000     push 0x1e
0x00001a9b      e900feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001aa0      ff2532742100   jmp qword [reloc.fputs_unlocked]        ; [0x218ed8:8]=0x1aa6
0x00001aa6      681f000000     push 0x1f
0x00001aab      e9f0fdffff     jmp sym..plt
;-- imp.calloc:
0x00001ab0      ff252a742100   jmp qword [reloc.calloc]                ; [0x218ee0:8]=0x1ab6
0x00001ab6      6820000000     push 0x20                               ; "@"
0x00001abb      e9e0fdffff     jmp sym..plt
;-- imp.strcmp:
0x00001ac0      ff2522742100   jmp qword [reloc.strcmp]                ; [0x218ee8:8]=0x1ac6
0x00001ac6      6821000000     push 0x21                               ; '!'
0x00001acb      e9d0fdffff     jmp sym..plt
;-- imp.memcpy:
0x00001ad0      ff251a742100   jmp qword [reloc.memcpy]                ; [0x218ef0:8]=0x1ad6
0x00001ad6      6822000000     push 0x22                               ; '"'
0x00001adb      e9c0fdffff     jmp sym..plt
;-- imp.fileno:
0x00001ae0      ff2512742100   jmp qword [reloc.fileno]                ; [0x218ef8:8]=0x1ae6
0x00001ae6      6823000000     push 0x23                               ; '#'
0x00001aeb      e9b0fdffff     jmp sym..plt
;-- imp.iswalnum:
0x00001af0      ff250a742100   jmp qword [reloc.iswalnum]              ; [0x218f00:8]=0x1af6
0x00001af6      6824000000     push 0x24                               ; '$'
0x00001afb      e9a0fdffff     jmp sym..plt
;-- imp.malloc:
0x00001b00      ff2502742100   jmp qword [reloc.malloc]                ; [0x218f08:8]=0x1b06
0x00001b06      6825000000     push 0x25                               ; '%'
0x00001b0b      e990fdffff     jmp sym..plt
;-- imp.wcrtomb:
0x00001b10      ff25fa732100   jmp qword [reloc.wcrtomb]               ; [0x218f10:8]=0x1b16
0x00001b16      6826000000     push 0x26                               ; '&'
0x00001b1b      e980fdffff     jmp sym..plt
;-- imp.fflush:
0x00001b20      ff25f2732100   jmp qword [reloc.fflush]                ; [0x218f18:8]=0x1b26 ; "&\x1b"
0x00001b26      6827000000     push 0x27                               ; '''
0x00001b2b      e970fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001b30      ff25ea732100   jmp qword [reloc.nl_langinfo]           ; [0x218f20:8]=0x1b36 ; "6\x1b"
0x00001b36      6828000000     push 0x28                               ; '('
0x00001b3b      e960fdffff     jmp sym..plt
;-- imp.__freading:
0x00001b40      ff25e2732100   jmp qword [reloc.__freading]            ; [0x218f28:8]=0x1b46 ; "F\x1b"
0x00001b46      6829000000     push 0x29                               ; ')'
0x00001b4b      e950fdffff     jmp sym..plt
;-- imp.fwrite_unlocked:
0x00001b50      ff25da732100   jmp qword [reloc.fwrite_unlocked]       ; [0x218f30:8]=0x1b56 ; "V\x1b"
0x00001b56      682a000000     push 0x2a                               ; '*'
0x00001b5b      e940fdffff     jmp sym..plt
;-- imp.realloc:
0x00001b60      ff25d2732100   jmp qword [reloc.realloc]               ; [0x218f38:8]=0x1b66 ; "f\x1b"
0x00001b66      682b000000     push 0x2b                               ; '+'
0x00001b6b      e930fdffff     jmp sym..plt
;-- imp.setlocale:
0x00001b70      ff25ca732100   jmp qword [reloc.setlocale]             ; [0x218f40:8]=0x1b76 ; "v\x1b"
0x00001b76      682c000000     push 0x2c                               ; ','
0x00001b7b      e920fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001b80      ff25c2732100   jmp qword [reloc.__printf_chk]          ; [0x218f48:8]=0x1b86
0x00001b86      682d000000     push 0x2d                               ; '-'
0x00001b8b      e910fdffff     jmp sym..plt
;-- imp.btowc:
0x00001b90      ff25ba732100   jmp qword [reloc.btowc]                 ; [0x218f50:8]=0x1b96
0x00001b96      682e000000     push 0x2e                               ; '.'
0x00001b9b      e900fdffff     jmp sym..plt
;-- imp.memmove:
0x00001ba0      ff25b2732100   jmp qword [reloc.memmove]               ; [0x218f58:8]=0x1ba6
0x00001ba6      682f000000     push 0x2f                               ; '/'
0x00001bab      e9f0fcffff     jmp sym..plt
;-- imp.error:
0x00001bb0      ff25aa732100   jmp qword [reloc.error]                 ; [0x218f60:8]=0x1bb6
0x00001bb6      6830000000     push 0x30                               ; '0'
0x00001bbb      e9e0fcffff     jmp sym..plt
;-- imp.fseeko:
0x00001bc0      ff25a2732100   jmp qword [reloc.fseeko]                ; [0x218f68:8]=0x1bc6
0x00001bc6      6831000000     push 0x31                               ; '1'
0x00001bcb      e9d0fcffff     jmp sym..plt
;-- imp.fopen:
0x00001bd0      ff259a732100   jmp qword [reloc.fopen]                 ; [0x218f70:8]=0x1bd6
0x00001bd6      6832000000     push 0x32                               ; '2'
0x00001bdb      e9c0fcffff     jmp sym..plt
;-- imp.towlower:
0x00001be0      ff2592732100   jmp qword [reloc.towlower]              ; [0x218f78:8]=0x1be6
0x00001be6      6833000000     push 0x33                               ; '3'
0x00001beb      e9b0fcffff     jmp sym..plt
;-- imp.towupper:
0x00001bf0      ff258a732100   jmp qword [reloc.towupper]              ; [0x218f80:8]=0x1bf6
0x00001bf6      6834000000     push 0x34                               ; '4'
0x00001bfb      e9a0fcffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001c00      ff2582732100   jmp qword [reloc.__cxa_atexit]          ; [0x218f88:8]=0x1c06
0x00001c06      6835000000     push 0x35                               ; '5'
0x00001c0b      e990fcffff     jmp sym..plt
;-- imp.exit:
0x00001c10      ff257a732100   jmp qword [reloc.exit]                  ; [0x218f90:8]=0x1c16
0x00001c16      6836000000     push 0x36                               ; '6'
0x00001c1b      e980fcffff     jmp sym..plt
;-- imp.fwrite:
0x00001c20      ff2572732100   jmp qword [reloc.fwrite]                ; [0x218f98:8]=0x1c26 ; "&\x1c"
0x00001c26      6837000000     push 0x37                               ; '7'
0x00001c2b      e970fcffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001c30      ff256a732100   jmp qword [reloc.__fprintf_chk]         ; [0x218fa0:8]=0x1c36 ; "6\x1c"
0x00001c36      6838000000     push 0x38                               ; '8'
0x00001c3b      e960fcffff     jmp sym..plt
;-- imp.mbsinit:
0x00001c40      ff2562732100   jmp qword [reloc.mbsinit]               ; [0x218fa8:8]=0x1c46 ; "F\x1c"
0x00001c46      6839000000     push 0x39                               ; '9'
0x00001c4b      e950fcffff     jmp sym..plt
;-- imp.iswprint:
0x00001c50      ff255a732100   jmp qword [reloc.iswprint]              ; [0x218fb0:8]=0x1c56 ; "V\x1c"
0x00001c56      683a000000     push 0x3a                               ; ':'
0x00001c5b      e940fcffff     jmp sym..plt
;-- imp.__ctype_tolower_loc:
0x00001c60      ff2552732100   jmp qword [reloc.__ctype_tolower_loc]   ; [0x218fb8:8]=0x1c66 ; "f\x1c"
0x00001c66      683b000000     push 0x3b                               ; ';'
0x00001c6b      e930fcffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00001c70      ff254a732100   jmp qword [reloc.__ctype_b_loc]         ; [0x218fc0:8]=0x1c76 ; "v\x1c"
0x00001c76      683c000000     push 0x3c                               ; '<'
0x00001c7b      e920fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001c80      .qword 0x90660021736225ff                              ; [13] -r-x section size 8 named .plt.got
0x00001c88      0000           add byte [rax], al
0x00001c8a      0000           add byte [rax], al
0x00001c8c      0000           add byte [rax], al
0x00001c8e      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x00001c90      4157           push r15                                ; [14] -r-x section size 75518 named .text
0x00001c92      4156           push r14
0x00001c94      4c8d3db53101.  lea r15, obj.FORMAT_RIGHT_NOLZ          ; 0x14e50 ; "%*ld%s"
0x00001c9b      4155           push r13
0x00001c9d      4154           push r12
0x00001c9f      4c8d350c2801.  lea r14, [0x000144b2]                   ; "ln"
0x00001ca6      55             push rbp
0x00001ca7      53             push rbx
0x00001ca8      89fd           mov ebp, edi
0x00001caa      4889f3         mov rbx, rsi
0x00001cad      4c8d250c6d21.  lea r12, obj.longopts                   ; 0x2189c0
0x00001cb4      41bd01000000   mov r13d, 1
0x00001cba      4883ec18       sub rsp, 0x18
0x00001cbe      488b3e         mov rdi, qword [rsi]
0x00001cc1      e86a130000     call sym.set_program_name
0x00001cc6      488d35e02801.  lea rsi, [0x000145ad]
0x00001ccd      bf06000000     mov edi, 6
0x00001cd2      e899feffff     call sym.imp.setlocale
0x00001cd7      488d35812701.  lea rsi, str.usr_local_share_locale     ; 0x1445f ; "/usr/local/share/locale"
0x00001cde      488d3d512701.  lea rdi, [0x00014436]                   ; "coreutils"
0x00001ce5      e8a6fcffff     call sym.imp.bindtextdomain
0x00001cea      488d3d452701.  lea rdi, [0x00014436]                   ; "coreutils"
0x00001cf1      e85afcffff     call sym.imp.textdomain
0x00001cf6      488d3d031100.  lea rdi, sym.close_stdout               ; 0x2e00 ; "USH\x83\xec\bH\x8b=\xdbb!"
0x00001cfd      e87e260100     call sym.atexit
0x00001d02      c6053f742100.  mov byte [obj.have_read_stdin], 0       ; [0x219148:1]=0
0x00001d09      0f1f80000000.  nop dword [rax]
0x00001d10      488d15c22701.  lea rdx, str.h:b:f:v:i:pl:s:w:n:d:      ; 0x144d9 ; "h:b:f:v:i:pl:s:w:n:d:"
0x00001d17      4531c0         xor r8d, r8d
0x00001d1a      4c89e1         mov rcx, r12
0x00001d1d      4889de         mov rsi, rbx
0x00001d20      89ef           mov edi, ebp
0x00001d22      e8c9fcffff     call sym.imp.getopt_long
0x00001d27      83f8ff         cmp eax, 0xffffffff
0x00001d2a      0f84a0030000   je 0x20d0
0x00001d30      83f869         cmp eax, 0x69
0x00001d33      0f843f020000   je 0x1f78
0x00001d39      7e35           jle 0x1d70
0x00001d3b      83f870         cmp eax, 0x70
0x00001d3e      0f84fc000000   je 0x1e40
0x00001d44      7e62           jle 0x1da8
0x00001d46      83f876         cmp eax, 0x76
0x00001d49      0f84d9010000   je 0x1f28
0x00001d4f      83f877         cmp eax, 0x77
0x00001d52      0f8488010000   je 0x1ee0
0x00001d58      83f873         cmp eax, 0x73
0x00001d5b      0f845f020000   je 0x1fc0
0x00001d61      4531ed         xor r13d, r13d
0x00001d64      ebaa           jmp 0x1d10
0x00001d66      662e0f1f8400.  nop word cs:[rax + rax]
0x00001d70      83f862         cmp eax, 0x62
0x00001d73      0f845f020000   je 0x1fd8
0x00001d79      7e75           jle 0x1df0
0x00001d7b      83f866         cmp eax, 0x66
0x00001d7e      0f8414010000   je 0x1e98
0x00001d84      83f868         cmp eax, 0x68
0x00001d87      0f84c3000000   je 0x1e50
0x00001d8d      83f864         cmp eax, 0x64
0x00001d90      75cf           jne 0x1d61
0x00001d92      488b05677321.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x219100:8]=0
0x00001d99      488905a07221.  mov qword [obj.section_del], rax        ; [0x219040:8]=0x14e38 obj.DEFAULT_SECTION_DELIMITERS ; "8N\x01"
0x00001da0      e96bffffff     jmp 0x1d10
0x00001da5      0f1f00         nop dword [rax]
0x00001da8      83f86c         cmp eax, 0x6c
0x00001dab      0f8487020000   je 0x2038
0x00001db1      83f86e         cmp eax, 0x6e
0x00001db4      75ab           jne 0x1d61
0x00001db6      488b15437321.  mov rdx, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x219100:8]=0
0x00001dbd      b903000000     mov ecx, 3
0x00001dc2      4c89f7         mov rdi, r14
0x00001dc5      4889d6         mov rsi, rdx
0x00001dc8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001dca      0f97c0         seta al
0x00001dcd      1c00           sbb al, 0
0x00001dcf      84c0           test al, al
0x00001dd1      0f85a8020000   jne 0x207f
0x00001dd7      488d05623001.  lea rax, obj.FORMAT_LEFT                ; 0x14e40 ; "%-*ld%s"
0x00001dde      488905537221.  mov qword [obj.lineno_format], rax      ; [0x219038:8]=0x14e50 obj.FORMAT_RIGHT_NOLZ ; "PN\x01"
0x00001de5      e926ffffff     jmp 0x1d10
0x00001dea      660f1f440000   nop word [rax + rax]
0x00001df0      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x00001df5      0f8586040000   jne 0x2281
0x00001dfb      4883ec08       sub rsp, 8
0x00001dff      488b3de27221.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2190e8:8]=0
0x00001e06      488b0d5b7221.  mov rcx, qword [obj.Version]            ; [0x219068:8]=0x14e57 str.8.31 ; "WN\x01"
0x00001e0d      6a00           push 0
0x00001e0f      4c8d0da52601.  lea r9, str.David_MacKenzie             ; 0x144bb ; "David MacKenzie"
0x00001e16      4c8d05ae2601.  lea r8, str.Scott_Bartram               ; 0x144cb ; "Scott Bartram"
0x00001e1d      488d150e2601.  lea rdx, str.GNU_coreutils              ; 0x14432 ; "GNU coreutils"
0x00001e24      488d358e2501.  lea rsi, [0x000143b9]                   ; "nl"
0x00001e2b      31c0           xor eax, eax
0x00001e2d      e8ee330000     call sym.version_etc
0x00001e32      31ff           xor edi, edi
0x00001e34      e8d7fdffff     call sym.imp.exit
0x00001e39      0f1f80000000.  nop dword [rax]
0x00001e40      c605d9712100.  mov byte [obj.reset_numbers], 0         ; [0x219020:1]=1
0x00001e47      e9c4feffff     jmp 0x1d10
0x00001e4c      0f1f4000       nop dword [rax]
0x00001e50      488d15697421.  lea rdx, obj.header_fastmap             ; 0x2192c0
0x00001e57      488d35a27621.  lea rsi, obj.header_regex               ; 0x219500
0x00001e5e      488d3df37121.  lea rdi, obj.header_type                ; 0x219058
0x00001e65      e8b6050000     call sym.build_type_arg
0x00001e6a      84c0           test al, al
0x00001e6c      0f859efeffff   jne 0x1d10
0x00001e72      488b3d877221.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x219100:8]=0
0x00001e79      e8c22e0000     call sym.quote
0x00001e7e      ba05000000     mov edx, 5
0x00001e83      4989c5         mov r13, rax
0x00001e86      488d35c32e01.  lea rsi, str.invalid_header_numbering_style:__s ; 0x14d50 ; "invalid header numbering style: %s"
0x00001e8d      e983010000     jmp 0x2015
0x00001e92      660f1f440000   nop word [rax + rax]
0x00001e98      488d15217321.  lea rdx, obj.footer_fastmap             ; 0x2191c0
0x00001e9f      488d351a7621.  lea rsi, obj.footer_regex               ; 0x2194c0
0x00001ea6      488d3da37121.  lea rdi, obj.footer_type                ; 0x219050
0x00001ead      e86e050000     call sym.build_type_arg
0x00001eb2      84c0           test al, al
0x00001eb4      0f8556feffff   jne 0x1d10
0x00001eba      488b3d3f7221.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x219100:8]=0
0x00001ec1      e87a2e0000     call sym.quote
0x00001ec6      ba05000000     mov edx, 5
0x00001ecb      4989c5         mov r13, rax
0x00001ece      488d35cb2e01.  lea rsi, str.invalid_footer_numbering_style:__s ; 0x14da0 ; "invalid footer numbering style: %s"
0x00001ed5      e93b010000     jmp 0x2015
0x00001eda      660f1f440000   nop word [rax + rax]
0x00001ee0      488d35092f01.  lea rsi, str.invalid_line_number_field_width ; 0x14df0 ; "invalid line number field width"
0x00001ee7      ba05000000     mov edx, 5
0x00001eec      31ff           xor edi, edi
0x00001eee      e8bdfaffff     call sym.imp.dcgettext
0x00001ef3      488b3d067221.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x219100:8]=0
0x00001efa      488d0dac2601.  lea rcx, [0x000145ad]
0x00001f01      4989c0         mov r8, rax
0x00001f04      4531c9         xor r9d, r9d
0x00001f07      baffffff7f     mov edx, 0x7fffffff
0x00001f0c      be01000000     mov esi, 1
0x00001f11      e81a380000     call sym.xdectoimax
0x00001f16      8905f4702100   mov dword [obj.lineno_width], eax       ; [0x219010:4]=6
0x00001f1c      e9effdffff     jmp 0x1d10
0x00001f21      0f1f80000000.  nop dword [rax]
0x00001f28      488d35482501.  lea rsi, str.invalid_starting_line_number ; 0x14477 ; "invalid starting line number"
0x00001f2f      ba05000000     mov edx, 5
0x00001f34      31ff           xor edi, edi
0x00001f36      e875faffff     call sym.imp.dcgettext
0x00001f3b      488b3dbe7121.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x219100:8]=0
0x00001f42      488d0d642601.  lea rcx, [0x000145ad]
0x00001f49      4989c0         mov r8, rax
0x00001f4c      4531c9         xor r9d, r9d
0x00001f4f      48baffffffff.  movabs rdx, 0x7fffffffffffffff          ; 9223372036854775807
0x00001f59      48be00000000.  movabs rsi, 0x8000000000000000
0x00001f63      e8c8370000     call sym.xdectoimax
0x00001f68      488905c17021.  mov qword [obj.starting_line_number], rax ; [0x219030:8]=1
0x00001f6f      e99cfdffff     jmp 0x1d10
0x00001f74      0f1f4000       nop dword [rax]
0x00001f78      488d35152501.  lea rsi, str.invalid_line_number_increment ; 0x14494 ; "invalid line number increment"
0x00001f7f      ba05000000     mov edx, 5
0x00001f84      31ff           xor edi, edi
0x00001f86      e825faffff     call sym.imp.dcgettext
0x00001f8b      488b3d6e7121.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x219100:8]=0
0x00001f92      488d0d142601.  lea rcx, [0x000145ad]
0x00001f99      4989c0         mov r8, rax
0x00001f9c      4531c9         xor r9d, r9d
0x00001f9f      48baffffffff.  movabs rdx, 0x7fffffffffffffff          ; 9223372036854775807
0x00001fa9      be01000000     mov esi, 1
0x00001fae      e87d370000     call sym.xdectoimax
0x00001fb3      4889056e7021.  mov qword [obj.page_incr], rax          ; [0x219028:8]=1
0x00001fba      e951fdffff     jmp 0x1d10
0x00001fbf      90             nop
0x00001fc0      488b05397121.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x219100:8]=0
0x00001fc7      4889057a7021.  mov qword [obj.separator_str], rax      ; [0x219048:8]=0x145ac
0x00001fce      e93dfdffff     jmp 0x1d10
0x00001fd3      0f1f440000     nop dword [rax + rax]
0x00001fd8      488d15e17321.  lea rdx, obj.body_fastmap               ; 0x2193c0
0x00001fdf      488d355a7521.  lea rsi, obj.body_regex                 ; 0x219540
0x00001fe6      488d3d737021.  lea rdi, obj.body_type                  ; 0x219060
0x00001fed      e82e040000     call sym.build_type_arg
0x00001ff2      84c0           test al, al
0x00001ff4      0f8516fdffff   jne 0x1d10
0x00001ffa      488b3dff7021.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x219100:8]=0
0x00002001      e83a2d0000     call sym.quote
0x00002006      488d356b2d01.  lea rsi, str.invalid_body_numbering_style:__s ; 0x14d78 ; "invalid body numbering style: %s"
0x0000200d      4989c5         mov r13, rax
0x00002010      ba05000000     mov edx, 5
0x00002015      31ff           xor edi, edi
0x00002017      e894f9ffff     call sym.imp.dcgettext
0x0000201c      4c89e9         mov rcx, r13
0x0000201f      4889c2         mov rdx, rax
0x00002022      31f6           xor esi, esi
0x00002024      31ff           xor edi, edi
0x00002026      31c0           xor eax, eax
0x00002028      4531ed         xor r13d, r13d
0x0000202b      e880fbffff     call sym.imp.error
0x00002030      e9dbfcffff     jmp 0x1d10
0x00002035      0f1f00         nop dword [rax]
0x00002038      488d35892d01.  lea rsi, str.invalid_line_number_of_blank_lines ; 0x14dc8 ; "invalid line number of blank lines"
0x0000203f      ba05000000     mov edx, 5
0x00002044      31ff           xor edi, edi
0x00002046      e865f9ffff     call sym.imp.dcgettext
0x0000204b      488b3dae7021.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x219100:8]=0
0x00002052      488d0d542501.  lea rcx, [0x000145ad]
0x00002059      4989c0         mov r8, rax
0x0000205c      4531c9         xor r9d, r9d
0x0000205f      48baffffffff.  movabs rdx, 0x7fffffffffffffff          ; 9223372036854775807
0x00002069      be01000000     mov esi, 1
0x0000206e      e8bd360000     call sym.xdectoimax
0x00002073      4889059e6f21.  mov qword [obj.blank_join], rax         ; [0x219018:8]=1
0x0000207a      e991fcffff     jmp 0x1d10
0x0000207f      488d352f2401.  lea rsi, [0x000144b5]                   ; "rn"
0x00002086      4889d7         mov rdi, rdx
0x00002089      48891424       mov qword [rsp], rdx
0x0000208d      e82efaffff     call sym.imp.strcmp
0x00002092      85c0           test eax, eax
0x00002094      488b1424       mov rdx, qword [rsp]
0x00002098      0f84f5010000   je 0x2293
0x0000209e      488d35132401.  lea rsi, [0x000144b8]                   ; "rz"
0x000020a5      4889d7         mov rdi, rdx
0x000020a8      48891424       mov qword [rsp], rdx
0x000020ac      e80ffaffff     call sym.imp.strcmp
0x000020b1      85c0           test eax, eax
0x000020b3      488b1424       mov rdx, qword [rsp]
0x000020b7      0f850d020000   jne 0x22ca
0x000020bd      488d05842d01.  lea rax, obj.FORMAT_RIGHT_LZ            ; 0x14e48 ; "%0*ld%s"
0x000020c4      4889056d6f21.  mov qword [obj.lineno_format], rax      ; [0x219038:8]=0x14e50 obj.FORMAT_RIGHT_NOLZ ; "PN\x01"
0x000020cb      e940fcffff     jmp 0x1d10
0x000020d0      4584ed         test r13b, r13b
0x000020d3      0f8421020000   je 0x22fa
0x000020d9      488b3d606f21.  mov rdi, qword [obj.section_del]        ; [0x219040:8]=0x14e38 obj.DEFAULT_SECTION_DELIMITERS ; "8N\x01"
0x000020e0      4983c8ff       or r8, 0xffffffffffffffff
0x000020e4      31d2           xor edx, edx
0x000020e6      4c89c1         mov rcx, r8
0x000020e9      4c89442408     mov qword [rsp + 8], r8
0x000020ee      89d0           mov eax, edx
0x000020f0      881424         mov byte [rsp], dl
0x000020f3      f2ae           repne scasb al, byte [rdi]
0x000020f5      48f7d1         not rcx
0x000020f8      4e8d2401       lea r12, [rcx + r8]
0x000020fc      4989ce         mov r14, rcx
0x000020ff      4b8d3c64       lea rdi, [r12 + r12*2]
0x00002103      48893d8e7021.  mov qword [obj.header_del_len], rdi     ; [0x219198:8]=0
0x0000210a      4883c701       add rdi, 1
0x0000210e      e86d320000     call sym.xmalloc
0x00002113      4c8b3d266f21.  mov r15, qword [obj.section_del]        ; [0x219040:8]=0x14e38 obj.DEFAULT_SECTION_DELIMITERS ; "8N\x01"
0x0000211a      4889c7         mov rdi, rax
0x0000211d      4889057c7021.  mov qword [obj.header_del], rax         ; [0x2191a0:8]=0
0x00002124      4c89fe         mov rsi, r15
0x00002127      e874f8ffff     call sym.imp.stpcpy
0x0000212c      4c89fe         mov rsi, r15
0x0000212f      4889c7         mov rdi, rax
0x00002132      e869f8ffff     call sym.imp.stpcpy
0x00002137      4c89fe         mov rsi, r15
0x0000213a      4889c7         mov rdi, rax
0x0000213d      e8def7ffff     call sym.imp.strcpy
0x00002142      4b8d3c24       lea rdi, [r12 + r12]
0x00002146      48893d3b7021.  mov qword [obj.body_del_len], rdi       ; [0x219188:8]=0
0x0000214d      4883c701       add rdi, 1
0x00002151      e82a320000     call sym.xmalloc
0x00002156      4c8b3de36e21.  mov r15, qword [obj.section_del]        ; [0x219040:8]=0x14e38 obj.DEFAULT_SECTION_DELIMITERS ; "8N\x01"
0x0000215d      4889c7         mov rdi, rax
0x00002160      488905297021.  mov qword [obj.body_del], rax           ; [0x219190:8]=0
0x00002167      4c89fe         mov rsi, r15
0x0000216a      e831f8ffff     call sym.imp.stpcpy
0x0000216f      4c89fe         mov rsi, r15
0x00002172      4889c7         mov rdi, rax
0x00002175      e8a6f7ffff     call sym.imp.strcpy
0x0000217a      4c89f7         mov rdi, r14
0x0000217d      4c8925f46f21.  mov qword [obj.footer_del_len], r12     ; [0x219178:8]=0
0x00002184      e8f7310000     call sym.xmalloc
0x00002189      488b35b06e21.  mov rsi, qword [obj.section_del]        ; [0x219040:8]=0x14e38 obj.DEFAULT_SECTION_DELIMITERS ; "8N\x01"
0x00002190      4889c7         mov rdi, rax
0x00002193      488905e66f21.  mov qword [obj.footer_del], rax         ; [0x219180:8]=0
0x0000219a      e881f7ffff     call sym.imp.strcpy
0x0000219f      488d3dba6f21.  lea rdi, obj.line_buf                   ; 0x219160
0x000021a6      e8450d0000     call sym.initbuffer
0x000021ab      0fb61424       movzx edx, byte [rsp]
0x000021af      4c8b442408     mov r8, qword [rsp + 8]
0x000021b4      488b3d8d6e21.  mov rdi, qword [obj.separator_str]      ; [0x219048:8]=0x145ac
0x000021bb      4c89c1         mov rcx, r8
0x000021be      89d0           mov eax, edx
0x000021c0      f2ae           repne scasb al, byte [rdi]
0x000021c2      486305476e21.  movsxd rax, dword [obj.lineno_width]    ; [0x219010:4]=6
0x000021c9      4989cc         mov r12, rcx
0x000021cc      49f7d4         not r12
0x000021cf      4983ec01       sub r12, 1
0x000021d3      498d7c0401     lea rdi, [r12 + rax + 1]
0x000021d8      e8a3310000     call sym.xmalloc
0x000021dd      4889c1         mov rcx, rax
0x000021e0      488905716f21.  mov qword [obj.print_no_line_fmt], rax  ; [0x219158:8]=0
0x000021e7      486305226e21.  movsxd rax, dword [obj.lineno_width]    ; [0x219010:4]=6
0x000021ee      be20000000     mov esi, 0x20                           ; "@"
0x000021f3      4889cf         mov rdi, rcx
0x000021f6      4901c4         add r12, rax
0x000021f9      4c89e2         mov rdx, r12
0x000021fc      e85ff8ffff     call sym.imp.memset
0x00002201      42c6042000     mov byte [rax + r12], 0
0x00002206      488b05236e21.  mov rax, qword [obj.starting_line_number] ; [0x219030:8]=1
0x0000220d      4889053c6f21.  mov qword [obj.line_no], rax            ; [0x219150:8]=0
0x00002214      488b05456e21.  mov rax, qword [obj.body_type]          ; [0x219060:8]=0x1458b
0x0000221b      4889055e7321.  mov qword [obj.current_type], rax       ; [0x219580:8]=0
0x00002222      488d05177321.  lea rax, obj.body_regex                 ; 0x219540
0x00002229      488905786f21.  mov qword [obj.current_regex], rax      ; [0x2191a8:8]=0
0x00002230      8b05c26e2100   mov eax, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2190f8:4]=0
0x00002236      39e8           cmp eax, ebp
0x00002238      0f84a8000000   je 0x22e6
0x0000223e      7d21           jge 0x2261
0x00002240      4898           cdqe
0x00002242      488b3cc3       mov rdi, qword [rbx + rax*8]
0x00002246      e815030000     call sym.nl_file
0x0000224b      4121c5         and r13d, eax
0x0000224e      8b05a46e2100   mov eax, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2190f8:4]=0
0x00002254      83c001         add eax, 1
0x00002257      39e8           cmp eax, ebp
0x00002259      8905996e2100   mov dword [obj.optind], eax             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2190f8:4]=0
0x0000225f      7cdf           jl 0x2240
0x00002261      803de06e2100.  cmp byte [obj.have_read_stdin], 0       ; [0x219148:1]=0
0x00002268      7535           jne 0x229f
0x0000226a      4883c418       add rsp, 0x18
0x0000226e      4183f501       xor r13d, 1
0x00002272      5b             pop rbx
0x00002273      410fb6c5       movzx eax, r13b
0x00002277      5d             pop rbp
0x00002278      415c           pop r12
0x0000227a      415d           pop r13
0x0000227c      415e           pop r14
0x0000227e      415f           pop r15
0x00002280      c3             ret
0x00002281      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x00002286      0f85d5faffff   jne 0x1d61
0x0000228c      31ff           xor edi, edi
0x0000228e      e8dd060000     call sym.usage
0x00002293      4c893d9e6d21.  mov qword [obj.lineno_format], r15      ; [0x219038:8]=0x14e50 obj.FORMAT_RIGHT_NOLZ ; "PN\x01"
0x0000229a      e971faffff     jmp 0x1d10
0x0000229f      488b3d4a6e21.  mov rdi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x2190f0:8]=0
0x000022a6      e8753b0000     call sym.rpl_fclose
0x000022ab      83c001         add eax, 1
0x000022ae      75ba           jne 0x226a
0x000022b0      e83bf6ffff     call sym.imp.__errno_location
0x000022b5      8b30           mov esi, dword [rax]
0x000022b7      488d15f42b01.  lea rdx, [0x00014eb2]                   ; "-"
0x000022be      bf01000000     mov edi, 1
0x000022c3      31c0           xor eax, eax
0x000022c5      e8e6f8ffff     call sym.imp.error
0x000022ca      4889d7         mov rdi, rdx
0x000022cd      e86e2a0000     call sym.quote
0x000022d2      ba05000000     mov edx, 5
0x000022d7      4989c5         mov r13, rax
0x000022da      488d352f2b01.  lea rsi, str.invalid_line_numbering_format:__s ; 0x14e10 ; "invalid line numbering format: %s"
0x000022e1      e92ffdffff     jmp 0x2015
0x000022e6      488d3dc52b01.  lea rdi, [0x00014eb2]                   ; "-"
0x000022ed      e86e020000     call sym.nl_file
0x000022f2      4189c5         mov r13d, eax
0x000022f5      e967ffffff     jmp 0x2261
0x000022fa      bf01000000     mov edi, 1
0x000022ff      e86c060000     call sym.usage
0x00002304      662e0f1f8400.  nop word cs:[rax + rax]
0x0000230e      6690           nop
;-- entry0:
;-- _start:
;-- rip:
0x00002310      31ed           xor ebp, ebp
0x00002312      4989d1         mov r9, rdx
0x00002315      5e             pop rsi
0x00002316      4889e2         mov rdx, rsp
0x00002319      4883e4f0       and rsp, 0xfffffffffffffff0
0x0000231d      50             push rax
0x0000231e      54             push rsp
0x0000231f      4c8d054a2001.  lea r8, sym.__libc_csu_fini             ; 0x14370
0x00002326      488d0dd31f01.  lea rcx, sym.__libc_csu_init            ; 0x14300 ; "AWAVI\x89\xd7AUATL\x8d%\x9eF "
0x0000232d      488d3d5cf9ff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1c90 ; "AWAVL\x8d=\xb51\x01"
0x00002334      ff15966c2100   call qword [reloc.__libc_start_main]    ; [0x218fd0:8]=0
0x0000233a      f4             hlt
0x0000233b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00002340      488d3d996d21.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2190e0
0x00002347      55             push rbp
0x00002348      488d05916d21.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2190e0
0x0000234f      4839f8         cmp rax, rdi
0x00002352      4889e5         mov rbp, rsp
0x00002355      7419           je 0x2370
0x00002357      488b056a6c21.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x218fc8:8]=0
0x0000235e      4885c0         test rax, rax
0x00002361      740d           je 0x2370
0x00002363      5d             pop rbp
0x00002364      ffe0           jmp rax
0x00002366      662e0f1f8400.  nop word cs:[rax + rax]
0x00002370      5d             pop rbp
0x00002371      c3             ret
0x00002372      0f1f4000       nop dword [rax]
0x00002376      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00002380      488d3d596d21.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2190e0
0x00002387      488d35526d21.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2190e0
0x0000238e      55             push rbp
0x0000238f      4829fe         sub rsi, rdi
0x00002392      4889e5         mov rbp, rsp
0x00002395      48c1fe03       sar rsi, 3
0x00002399      4889f0         mov rax, rsi
0x0000239c      48c1e83f       shr rax, 0x3f
0x000023a0      4801c6         add rsi, rax
0x000023a3      48d1fe         sar rsi, 1
0x000023a6      7418           je 0x23c0
0x000023a8      488b05316c21.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x218fe0:8]=0
0x000023af      4885c0         test rax, rax
0x000023b2      740c           je 0x23c0
0x000023b4      5d             pop rbp
0x000023b5      ffe0           jmp rax
0x000023b7      660f1f840000.  nop word [rax + rax]
0x000023c0      5d             pop rbp
0x000023c1      c3             ret
0x000023c2      0f1f4000       nop dword [rax]
0x000023c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x000023d0      803d516d2100.  cmp byte [obj.completed.7697], 0        ; [0x219128:1]=0
0x000023d7      752f           jne 0x2408
0x000023d9      48833d076c21.  cmp qword [reloc.__cxa_finalize], 0     ; [0x218fe8:8]=0
0x000023e1      55             push rbp
0x000023e2      4889e5         mov rbp, rsp
0x000023e5      740c           je 0x23f3
0x000023e7      488b3d1a6c21.  mov rdi, qword [obj.__dso_handle]       ; [0x219008:8]=0x219008 obj.__dso_handle
0x000023ee      e88df8ffff     call sym..plt.got
0x000023f3      e848ffffff     call sym.deregister_tm_clones
0x000023f8      c605296d2100.  mov byte [obj.completed.7697], 1        ; [0x219128:1]=0
0x000023ff      5d             pop rbp
0x00002400      c3             ret
0x00002401      0f1f80000000.  nop dword [rax]
0x00002408      f3c3           ret
0x0000240a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00002410      55             push rbp
0x00002411      4889e5         mov rbp, rsp
0x00002414      5d             pop rbp
0x00002415      e966ffffff     jmp sym.register_tm_clones
0x0000241a      660f1f440000   nop word [rax + rax]
;-- build_type_arg:
0x00002420      488b0dd96c21.  mov rcx, qword [obj.optarg]             ; /src:243 ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x219100:8]=0
0x00002427      0fb601         movzx eax, byte [rcx]
0x0000242a      3c6e           cmp al, 0x6e
0x0000242c      0f8482000000   je 0x24b4
0x00002432      7e7c           jle 0x24b0
0x00002434      3c70           cmp al, 0x70
0x00002436      7570           jne 0x24a8
0x00002438      55             push rbp
0x00002439      488d4101       lea rax, [rcx + 1]                      ; /src:255
0x0000243d      53             push rbx                                ; /src:243
0x0000243e      4889f3         mov rbx, rsi
0x00002441      4883ec08       sub rsp, 8
0x00002445      488905b46c21.  mov qword [obj.optarg], rax             ; /src:255 ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x219100:8]=0
0x0000244c      48890f         mov qword [rdi], rcx
0x0000244f      488b2daa6c21.  mov rbp, qword [obj.optarg]             ; /src:262 ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x219100:8]=0
0x00002456      48c706000000.  mov qword [rsi], 0                      ; /src:256
0x0000245d      48895620       mov qword [rsi + 0x20], rdx             ; /src:258
0x00002461      48c746080000.  mov qword [rsi + 8], 0                  ; /src:257
0x00002469      48c746280000.  mov qword [rsi + 0x28], 0               ; /src:259
0x00002471      48c7055c7221.  mov qword [obj.rpl_re_syntax_options], 0x2c6 ; /src:260 ; [0x2196d8:8]=0
0x0000247c      4889ef         mov rdi, rbp                            ; /src:262
0x0000247f      e84cf5ffff     call sym.imp.strlen
0x00002484      4889da         mov rdx, rbx
0x00002487      4889c6         mov rsi, rax
0x0000248a      4889ef         mov rdi, rbp
0x0000248d      e8fe120100     call sym.rpl_re_compile_pattern
0x00002492      4885c0         test rax, rax                           ; /src:263
0x00002495      7526           jne 0x24bd
0x00002497      4883c408       add rsp, 8                              ; /src:271
0x0000249b      b801000000     mov eax, 1                              ; /src:245
0x000024a0      5b             pop rbx                                 ; /src:271
0x000024a1      5d             pop rbp
0x000024a2      c3             ret
0x000024a3      0f1f440000     nop dword [rax + rax]
0x000024a8      3c74           cmp al, 0x74                            ; /src:247
0x000024aa      7408           je 0x24b4
0x000024ac      31c0           xor eax, eax                            ; /src:267
0x000024ae      c3             ret                                     ; /src:271
0x000024af      90             nop
0x000024b0      3c61           cmp al, 0x61                            ; /src:247
0x000024b2      75f8           jne 0x24ac
0x000024b4      48890f         mov qword [rdi], rcx                    ; /src:252
0x000024b7      b801000000     mov eax, 1                              ; /src:245
0x000024bc      c3             ret                                     ; /src:253
0x000024bd      488d15a82901.  lea rdx, [0x00014e6c]                   ; /src:264 ; "%s"
0x000024c4      4889c1         mov rcx, rax
0x000024c7      31f6           xor esi, esi
0x000024c9      bf01000000     mov edi, 1
0x000024ce      31c0           xor eax, eax
0x000024d0      e8dbf6ffff     call sym.imp.error
0x000024d5      90             nop
0x000024d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- print_lineno:
0x000024e0      4883ec08       sub rsp, 8                              ; /src:277
0x000024e4      8b15266b2100   mov edx, dword [obj.lineno_width]       ; /coreutils-8.31/lib:104 ; [0x219010:4]=6
0x000024ea      4c8b05576b21.  mov r8, qword [obj.separator_str]       ; [0x219048:8]=0x145ac
0x000024f1      488b0d586c21.  mov rcx, qword [obj.line_no]            ; [0x219150:8]=0
0x000024f8      488b35396b21.  mov rsi, qword [obj.lineno_format]      ; [0x219038:8]=0x14e50 obj.FORMAT_RIGHT_NOLZ ; "PN\x01"
0x000024ff      31c0           xor eax, eax
0x00002501      bf01000000     mov edi, 1
0x00002506      e875f6ffff     call sym.imp.__printf_chk
0x0000250b      488b053e6c21.  mov rax, qword [obj.line_no]            ; /src:282 ; [0x219150:8]=0
0x00002512      488b150f6b21.  mov rdx, qword [obj.page_incr]          ; [0x219028:8]=1
0x00002519      4801c2         add rdx, rax
0x0000251c      4839d0         cmp rax, rdx                            ; /src:283
0x0000251f      7f0c           jg 0x252d
0x00002521      488915286c21.  mov qword [obj.line_no], rdx            ; /src:285 ; [0x219150:8]=0
0x00002528      4883c408       add rsp, 8                              ; /src:286
0x0000252c      c3             ret
0x0000252d      488d35701e01.  lea rsi, str.line_number_overflow       ; /src:284 ; 0x143a4 ; "line number overflow"
0x00002534      ba05000000     mov edx, 5
0x00002539      31ff           xor edi, edi
0x0000253b      e870f4ffff     call sym.imp.dcgettext
0x00002540      31f6           xor esi, esi
0x00002542      4889c2         mov rdx, rax
0x00002545      bf01000000     mov edi, 1
0x0000254a      31c0           xor eax, eax
0x0000254c      e85ff6ffff     call sym.imp.error
0x00002551      0f1f440000     nop dword [rax + rax]
0x00002556      662e0f1f8400.  nop word cs:[rax + rax]
;-- nl_file:
0x00002560      4157           push r15                                ; /src:426
0x00002562      4156           push r14
0x00002564      4889fe         mov rsi, rdi
0x00002567      4155           push r13
0x00002569      4154           push r12
0x0000256b      b902000000     mov ecx, 2                              ; /src:429
0x00002570      55             push rbp                                ; /src:426
0x00002571      53             push rbx
0x00002572      4883ec18       sub rsp, 0x18
0x00002576      48897c2408     mov qword [rsp + 8], rdi
0x0000257b      488d3d302901.  lea rdi, [0x00014eb2]                   ; /src:429 ; "-"
0x00002582      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002584      0f97c0         seta al
0x00002587      1c00           sbb al, 0
0x00002589      84c0           test al, al
0x0000258b      0f854f030000   jne 0x28e0
0x00002591      488b1d586b21.  mov rbx, qword [obj.stdin]              ; /src:432 ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x2190f0:8]=0
0x00002598      c605a96b2100.  mov byte [obj.have_read_stdin], 1       ; /src:431 ; [0x219148:1]=0
0x0000259f      488d2dba6b21.  lea rbp, obj.line_buf                   ; /src:401 ; 0x219160
0x000025a6      4c8d25136f21.  lea r12, obj.footer_regex               ; /src:318 ; 0x2194c0
0x000025ad      be02000000     mov esi, 2
0x000025b2      4889df         mov rdi, rbx
0x000025b5      e806090000     call sym.fadvise
0x000025ba      660f1f440000   nop word [rax + rax]
0x000025c0      4889de         mov rsi, rbx
0x000025c3      4889ef         mov rdi, rbp
0x000025c6      e8450a0000     call sym.readlinebuffer
0x000025cb      4885c0         test rax, rax
0x000025ce      0f84d2000000   je 0x26a6
0x000025d4      4c8b358d6b21.  mov r14, qword [0x00219168]             ; [0x219168:8]=0
0x000025db      4d8d7eff       lea r15, [r14 - 1]
0x000025df      4983ff01       cmp r15, 1
0x000025e3      0f8617010000   jbe 0x2700
0x000025e9      488b05506a21.  mov rax, qword [obj.section_del]        ; [0x219040:8]=0x14e38 obj.DEFAULT_SECTION_DELIMITERS ; "8N\x01"
0x000025f0      4c8b2d796b21.  mov r13, qword [0x00219170]             ; [0x219170:8]=0
0x000025f7      0fb700         movzx eax, word [rax]
0x000025fa      6641394500     cmp word [r13], ax
0x000025ff      0f85fb000000   jne 0x2700
0x00002605      4c3b3d8c6b21.  cmp r15, qword [obj.header_del_len]     ; [0x219198:8]=0
0x0000260c      0f844e010000   je 0x2760
0x00002612      4c3b3d6f6b21.  cmp r15, qword [obj.body_del_len]       ; [0x219188:8]=0
0x00002619      0f8491010000   je 0x27b0
0x0000261f      4c3b3d526b21.  cmp r15, qword [obj.footer_del_len]     ; [0x219178:8]=0
0x00002626      0f85d4000000   jne 0x2700
0x0000262c      488b354d6b21.  mov rsi, qword [obj.footer_del]         ; [0x219180:8]=0
0x00002633      4c89fa         mov rdx, r15
0x00002636      4c89ef         mov rdi, r13
0x00002639      e842f4ffff     call sym.imp.memcmp
0x0000263e      85c0           test eax, eax
0x00002640      0f85ba000000   jne 0x2700
0x00002646      803dd3692100.  cmp byte [obj.reset_numbers], 0         ; [0x219020:1]=1
0x0000264d      488b05fc6921.  mov rax, qword [obj.footer_type]        ; [0x219050:8]=0x144b3
0x00002654      4c89254d6b21.  mov qword [obj.current_regex], r12      ; [0x2191a8:8]=0
0x0000265b      4889051e6f21.  mov qword [obj.current_type], rax       ; [0x219580:8]=0
0x00002662      740e           je 0x2672
0x00002664      488b05c56921.  mov rax, qword [obj.starting_line_number] ; [0x219030:8]=1
0x0000266b      488905de6a21.  mov qword [obj.line_no], rax            ; [0x219150:8]=0
0x00002672      488b3d6f6a21.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2190e8:8]=0
0x00002679      488b4728       mov rax, qword [rdi + 0x28]
0x0000267d      483b4730       cmp rax, qword [rdi + 0x30]
0x00002681      0f83d1010000   jae 0x2858                              ; /src:264
0x00002687      488d5001       lea rdx, [rax + 1]
0x0000268b      4889de         mov rsi, rbx
0x0000268e      48895728       mov qword [rdi + 0x28], rdx
0x00002692      c6000a         mov byte [rax], 0xa
0x00002695      4889ef         mov rdi, rbp
0x00002698      e873090000     call sym.readlinebuffer
0x0000269d      4885c0         test rax, rax
0x000026a0      0f852effffff   jne 0x25d4
0x000026a6      f60320         test byte [rbx], 0x20
0x000026a9      0f854e020000   jne 0x28fd
0x000026af      488b742408     mov rsi, qword [rsp + 8]
0x000026b4      488d3df72701.  lea rdi, [0x00014eb2]                   ; "-"
0x000026bb      b902000000     mov ecx, 2
0x000026c0      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000026c2      4889df         mov rdi, rbx
0x000026c5      0f97c0         seta al
0x000026c8      1c00           sbb al, 0
0x000026ca      84c0           test al, al
0x000026cc      0f84f0010000   je 0x28c2
0x000026d2      e849370000     call sym.rpl_fclose                     ; /src:237
0x000026d7      89c2           mov edx, eax
0x000026d9      b801000000     mov eax, 1
0x000026de      83faff         cmp edx, 0xffffffff                     ; /src:257
0x000026e1      0f8416020000   je 0x28fd
0x000026e7      4883c418       add rsp, 0x18
0x000026eb      5b             pop rbx
0x000026ec      5d             pop rbp
0x000026ed      415c           pop r12
0x000026ef      415d           pop r13
0x000026f1      415e           pop r14
0x000026f3      415f           pop r15
0x000026f5      c3             ret
0x000026f6      662e0f1f8400.  nop word cs:[rax + rax]
0x00002700      488b05796e21.  mov rax, qword [obj.current_type]       ; [0x219580:8]=0
0x00002707      0fb600         movzx eax, byte [rax]
0x0000270a      3c6e           cmp al, 0x6e
0x0000270c      0f8420010000   je 0x2832                               ; /src:261
0x00002712      0f8e58010000   jle 0x2870
0x00002718      3c70           cmp al, 0x70
0x0000271a      0f84e0000000   je 0x2800
0x00002720      3c74           cmp al, 0x74
0x00002722      7516           jne 0x273a
0x00002724      4983fe01       cmp r14, 1
0x00002728      0f8604010000   jbe 0x2832
0x0000272e      e8adfdffff     call sym.print_lineno
0x00002733      4c8b352e6a21.  mov r14, qword [0x00219168]             ; [0x219168:8]=0
0x0000273a      488b0da76921.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2190e8:8]=0
0x00002741      488b3d286a21.  mov rdi, qword [0x00219170]             ; [0x219170:8]=0
0x00002748      4c89f2         mov rdx, r14
0x0000274b      be01000000     mov esi, 1
0x00002750      e8fbf3ffff     call sym.imp.fwrite_unlocked
0x00002755      e966feffff     jmp 0x25c0                              ; /src:-27
0x0000275a      660f1f440000   nop word [rax + rax]                    ; /src:-29
0x00002760      488b35396a21.  mov rsi, qword [obj.header_del]         ; [0x2191a0:8]=0
0x00002767      4c89fa         mov rdx, r15
0x0000276a      4c89ef         mov rdi, r13
0x0000276d      e80ef3ffff     call sym.imp.memcmp
0x00002772      85c0           test eax, eax
0x00002774      0f8598feffff   jne 0x2612
0x0000277a      488b05d76821.  mov rax, qword [obj.header_type]        ; [0x219058:8]=0x144b3
0x00002781      803d98682100.  cmp byte [obj.reset_numbers], 0         ; [0x219020:1]=1
0x00002788      488905f16d21.  mov qword [obj.current_type], rax       ; [0x219580:8]=0
0x0000278f      488d056a6d21.  lea rax, obj.header_regex               ; 0x219500
0x00002796      4889050b6a21.  mov qword [obj.current_regex], rax      ; [0x2191a8:8]=0
0x0000279d      0f84cffeffff   je 0x2672
0x000027a3      e9bcfeffff     jmp 0x2664
0x000027a8      0f1f84000000.  nop dword [rax + rax]
0x000027b0      488b35d96921.  mov rsi, qword [obj.body_del]           ; [0x219190:8]=0
0x000027b7      4c89fa         mov rdx, r15
0x000027ba      4c89ef         mov rdi, r13
0x000027bd      e8bef2ffff     call sym.imp.memcmp
0x000027c2      85c0           test eax, eax
0x000027c4      0f8555feffff   jne 0x261f
0x000027ca      488b058f6821.  mov rax, qword [obj.body_type]          ; [0x219060:8]=0x1458b
0x000027d1      803d48682100.  cmp byte [obj.reset_numbers], 0         ; [0x219020:1]=1
0x000027d8      488905a16d21.  mov qword [obj.current_type], rax       ; [0x219580:8]=0
0x000027df      488d055a6d21.  lea rax, obj.body_regex                 ; 0x219540
0x000027e6      488905bb6921.  mov qword [obj.current_regex], rax      ; [0x2191a8:8]=0
0x000027ed      0f8571feffff   jne 0x2664
0x000027f3      e97afeffff     jmp 0x2672
0x000027f8      0f1f84000000.  nop dword [rax + rax]
0x00002800      488b35696921.  mov rsi, qword [0x00219170]             ; [0x219170:8]=0
0x00002807      488b3d9a6921.  mov rdi, qword [obj.current_regex]      ; [0x2191a8:8]=0
0x0000280e      4531c9         xor r9d, r9d
0x00002811      31c9           xor ecx, ecx
0x00002813      4d89f8         mov r8, r15
0x00002816      4c89fa         mov rdx, r15
0x00002819      e812190100     call sym.rpl_re_search
0x0000281e      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00002822      0f8414010000   je 0x293c
0x00002828      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000282c      0f85fcfeffff   jne 0x272e
0x00002832      488b35af6821.  mov rsi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2190e8:8]=0
0x00002839      488b3d186921.  mov rdi, qword [obj.print_no_line_fmt]  ; [0x219158:8]=0
0x00002840      e85bf2ffff     call sym.imp.fputs_unlocked
0x00002845      4c8b351c6921.  mov r14, qword [0x00219168]             ; [0x219168:8]=0
0x0000284c      e9e9feffff     jmp 0x273a
0x00002851      0f1f80000000.  nop dword [rax]
0x00002858      be0a000000     mov esi, 0xa
0x0000285d      e8bef1ffff     call sym.imp.__overflow
0x00002862      e959fdffff     jmp 0x25c0
0x00002867      660f1f840000.  nop word [rax + rax]
0x00002870      3c61           cmp al, 0x61
0x00002872      0f85c2feffff   jne 0x273a
0x00002878      488b05996721.  mov rax, qword [obj.blank_join]         ; [0x219018:8]=1
0x0000287f      4883f801       cmp rax, 1
0x00002883      0f8ea5feffff   jle 0x272e
0x00002889      4983fe01       cmp r14, 1
0x0000288d      7717           ja 0x28a6
0x0000288f      488b0daa6821.  mov rcx, qword [obj.blank_lines.7093]   ; [0x219140:8]=0
0x00002896      488d5101       lea rdx, [rcx + 1]
0x0000289a      4839d0         cmp rax, rdx                            ; /src:-124
0x0000289d      4889159c6821.  mov qword [obj.blank_lines.7093], rdx   ; [0x219140:8]=0
0x000028a4      758c           jne 0x2832
0x000028a6      e835fcffff     call sym.print_lineno
0x000028ab      48c7058a6821.  mov qword [obj.blank_lines.7093], 0     ; [0x219140:8]=0
0x000028b6      4c8b35ab6821.  mov r14, qword [0x00219168]             ; [0x219168:8]=0
0x000028bd      e978feffff     jmp 0x273a
0x000028c2      e879f0ffff     call sym.imp.clearerr_unlocked
0x000028c7      4883c418       add rsp, 0x18
0x000028cb      b801000000     mov eax, 1
0x000028d0      5b             pop rbx
0x000028d1      5d             pop rbp
0x000028d2      415c           pop r12
0x000028d4      415d           pop r13
0x000028d6      415e           pop r14
0x000028d8      415f           pop r15
0x000028da      c3             ret
0x000028db      0f1f440000     nop dword [rax + rax]
0x000028e0      488b7c2408     mov rdi, qword [rsp + 8]
0x000028e5      488d35a61b01.  lea rsi, [0x00014492]                   ; "r"
0x000028ec      e8dff2ffff     call sym.imp.fopen
0x000028f1      4885c0         test rax, rax
0x000028f4      4889c3         mov rbx, rax
0x000028f7      0f85a2fcffff   jne 0x259f
0x000028fd      488b542408     mov rdx, qword [rsp + 8]
0x00002902      be03000000     mov esi, 3
0x00002907      31ff           xor edi, edi
0x00002909      e862220000     call sym.quotearg_n_style_colon         ; /src:-115
0x0000290e      4889c3         mov rbx, rax
0x00002911      e8daefffff     call sym.imp.__errno_location
0x00002916      8b30           mov esi, dword [rax]
0x00002918      488d154d2501.  lea rdx, [0x00014e6c]                   ; "%s"
0x0000291f      4889d9         mov rcx, rbx
0x00002922      31c0           xor eax, eax
0x00002924      31ff           xor edi, edi
0x00002926      e885f2ffff     call sym.imp.error
0x0000292b      4883c418       add rsp, 0x18
0x0000292f      31c0           xor eax, eax
0x00002931      5b             pop rbx
0x00002932      5d             pop rbp
0x00002933      415c           pop r12
0x00002935      415d           pop r13
0x00002937      415e           pop r14
0x00002939      415f           pop r15
0x0000293b      c3             ret
0x0000293c      488d356d1c01.  lea rsi, str.error_in_regular_expression_search ; 0x145b0 ; "error in regular expression search"
0x00002943      ba05000000     mov edx, 5
0x00002948      31ff           xor edi, edi
0x0000294a      e861f0ffff     call sym.imp.dcgettext
0x0000294f      4889c3         mov rbx, rax
0x00002952      e899efffff     call sym.imp.__errno_location
0x00002957      8b30           mov esi, dword [rax]
0x00002959      4889da         mov rdx, rbx
0x0000295c      bf01000000     mov edi, 1
0x00002961      31c0           xor eax, eax
0x00002963      e848f2ffff     call sym.imp.error
0x00002968      0f1f84000000.  nop dword [rax + rax]
;-- usage:
0x00002970      4155           push r13
0x00002972      4154           push r12
0x00002974      ba05000000     mov edx, 5
0x00002979      55             push rbp
0x0000297a      53             push rbx                                ; ../coreutils-8.31/src/.c:316
0x0000297b      89fd           mov ebp, edi
0x0000297d      4881ec880000.  sub rsp, 0x88                           ; ../coreutils-8.31/src/.c:305
0x00002984      488b1d0d6c21.  mov rbx, qword [obj.program_name]       ; [0x219598:8]=0
0x0000298b      64488b042528.  mov rax, qword fs:[0x28]
0x00002994      4889442478     mov qword [rsp + 0x78], rax
0x00002999      31c0           xor eax, eax
0x0000299b      85ff           test edi, edi
0x0000299d      742e           je 0x29cd
0x0000299f      488d35321c01.  lea rsi, str.Try___s___help__for_more_information. ; 0x145d8 ; "Try '%s --help' for more information.\n"
0x000029a6      31ff           xor edi, edi
0x000029a8      e803f0ffff     call sym.imp.dcgettext
0x000029ad      488b3d6c6721.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x219120:8]=0
0x000029b4      4889c2         mov rdx, rax
0x000029b7      4889d9         mov rcx, rbx
0x000029ba      be01000000     mov esi, 1
0x000029bf      31c0           xor eax, eax
0x000029c1      e86af2ffff     call sym.imp.__fprintf_chk
0x000029c6      89ef           mov edi, ebp
0x000029c8      e843f2ffff     call sym.imp.exit
0x000029cd      488d352c1c01.  lea rsi, str.Usage:__s__OPTION_...__FILE_... ; 0x14600 ; "Usage: %s [OPTION]... [FILE]...\n"
0x000029d4      31ff           xor edi, edi
0x000029d6      e8d5efffff     call sym.imp.dcgettext
0x000029db      4889da         mov rdx, rbx
0x000029de      4889c6         mov rsi, rax
0x000029e1      bf01000000     mov edi, 1
0x000029e6      31c0           xor eax, eax
0x000029e8      e893f1ffff     call sym.imp.__printf_chk
0x000029ed      488b1df46621.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2190e8:8]=0
0x000029f4      488d352d1c01.  lea rsi, str.Write_each_FILE_to_standard_output__with_line_numbers_added. ; 0x14628 ; "Write each FILE to standard output, with line numbers added.\n"
0x000029fb      ba05000000     mov edx, 5
0x00002a00      31ff           xor edi, edi
0x00002a02      e8a9efffff     call sym.imp.dcgettext
0x00002a07      4889de         mov rsi, rbx
0x00002a0a      4889c7         mov rdi, rax
0x00002a0d      e88ef0ffff     call sym.imp.fputs_unlocked
0x00002a12      488b1dcf6621.  mov rbx, qword [obj.stdout]             ; ../coreutils-8.31/src/.c:324 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2190e8:8]=0
0x00002a19      488d35481c01.  lea rsi, str.With_no_FILE__or_when_FILE_is____read_standard_input. ; 0x14668 ; "\nWith no FILE, or when FILE is -, read standard input.\n"
0x00002a20      ba05000000     mov edx, 5                              ; ../coreutils-8.31/src/.c:321
0x00002a25      31ff           xor edi, edi
0x00002a27      e884efffff     call sym.imp.dcgettext
0x00002a2c      4889de         mov rsi, rbx
0x00002a2f      4889c7         mov rdi, rax
0x00002a32      e869f0ffff     call sym.imp.fputs_unlocked
0x00002a37      488b1daa6621.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2190e8:8]=0
0x00002a3e      488d355b1c01.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0x146a0 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x00002a45      ba05000000     mov edx, 5
0x00002a4a      31ff           xor edi, edi
0x00002a4c      e85fefffff     call sym.imp.dcgettext
0x00002a51      4889de         mov rsi, rbx
0x00002a54      4889c7         mov rdi, rax
0x00002a57      e844f0ffff     call sym.imp.fputs_unlocked             ; ../coreutils-8.31/src/.c:329
0x00002a5c      488b1d856621.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2190e8:8]=0
0x00002a63      488d35861c01.  lea rsi, str.b____body_numbering_STYLE______use_STYLE_for_numbering_body_lines_____d____section_delimiter_CC______use_CC_for_logical_page_delimiters_____f____footer_numbering_STYLE____use_STYLE_for_numbering_footer_lines ; 0x146f0 ; "  -b, --body-numbering=STYLE      use STYLE for numbering body lines\n  -d, --section-delimiter=CC      use CC for logical page delimiters\n  -f, --footer-numbering=STYLE    use STYLE for numbering footer lines\n"
0x00002a6a      ba05000000     mov edx, 5
0x00002a6f      31ff           xor edi, edi
0x00002a71      e83aefffff     call sym.imp.dcgettext
0x00002a76      4889de         mov rsi, rbx
0x00002a79      4889c7         mov rdi, rax
0x00002a7c      e81ff0ffff     call sym.imp.fputs_unlocked
0x00002a81      488b1d606621.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2190e8:8]=0
0x00002a88      488d35391d01.  lea rsi, str.h____header_numbering_STYLE____use_STYLE_for_numbering_header_lines_____i____line_increment_NUMBER_____line_number_increment_at_each_line_____l____join_blank_lines_NUMBER___group_of_NUMBER_empty_lines_counted_as_one_____n____number_format_FORMAT______insert_line_numbers_according_to_FORMAT_____p____no_renumber_______________do_not_reset_line_numbers_for_each_section_____s____number_separator_STRING___add_STRING_after__possible__line_number ; 0x147c8 ; "  -h, --header-numbering=STYLE    use STYLE for numbering header lines\n  -i, --line-increment=NUMBER     line number increment at each line\n  -l, --join-blank-lines=NUMBER   group of NUMBER empty lines counted as one\n  -n, --number-format=FORMAT      insert line numbers according to FORMAT\n  -p, --no-renumber               do not reset line numbers for each section\n  -s, --number-separator=STRING   add STRING after (possible) line number\n"
0x00002a8f      ba05000000     mov edx, 5
0x00002a94      31ff           xor edi, edi
0x00002a96      e815efffff     call sym.imp.dcgettext
0x00002a9b      4889de         mov rsi, rbx
0x00002a9e      4889c7         mov rdi, rax
0x00002aa1      e8faefffff     call sym.imp.fputs_unlocked
0x00002aa6      488b1d3b6621.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2190e8:8]=0
0x00002aad      488d35d41e01.  lea rsi, str.v____starting_line_number_NUMBER__first_line_number_for_each_section_____w____number_width_NUMBER_______use_NUMBER_columns_for_line_numbers ; 0x14988 ; "  -v, --starting-line-number=NUMBER  first line number for each section\n  -w, --number-width=NUMBER       use NUMBER columns for line numbers\n"
0x00002ab4      ba05000000     mov edx, 5
0x00002ab9      31ff           xor edi, edi
0x00002abb      e8f0eeffff     call sym.imp.dcgettext
0x00002ac0      4889de         mov rsi, rbx
0x00002ac3      4889c7         mov rdi, rax
0x00002ac6      e8d5efffff     call sym.imp.fputs_unlocked
0x00002acb      488b1d166621.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2190e8:8]=0
0x00002ad2      488d353f1f01.  lea rsi, str.help_____display_this_help_and_exit ; 0x14a18 ; "      --help     display this help and exit\n"
0x00002ad9      ba05000000     mov edx, 5
0x00002ade      31ff           xor edi, edi
0x00002ae0      e8cbeeffff     call sym.imp.dcgettext
0x00002ae5      4889de         mov rsi, rbx
0x00002ae8      4889c7         mov rdi, rax
0x00002aeb      e8b0efffff     call sym.imp.fputs_unlocked
0x00002af0      488b1df16521.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2190e8:8]=0
0x00002af7      488d354a1f01.  lea rsi, str.version__output_version_information_and_exit ; 0x14a48 ; "      --version  output version information and exit\n"
0x00002afe      ba05000000     mov edx, 5
0x00002b03      31ff           xor edi, edi
0x00002b05      e8a6eeffff     call sym.imp.dcgettext
0x00002b0a      4889de         mov rsi, rbx
0x00002b0d      4889c7         mov rdi, rax
0x00002b10      e88befffff     call sym.imp.fputs_unlocked
0x00002b15      488b1dcc6521.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2190e8:8]=0
0x00002b1c      488d355d1f01.  lea rsi, str.Default_options_are:__bt__d___:___fn__hn__i1__l1__n_rn___s_TAB___v1__w6____CC_are_two_delimiter_characters_used_to_construct_logical_page_delimiters___a_missing_second_character_implies__:_. ; 0x14a80 ; "\nDefault options are: -bt -d'\:' -fn -hn -i1 -l1 -n'rn' -s<TAB> -v1 -w6\n\nCC are two delimiter characters used to construct logical page delimiters;\na missing second character implies ':'.\n"
0x00002b23      ba05000000     mov edx, 5
0x00002b28      31ff           xor edi, edi
0x00002b2a      e881eeffff     call sym.imp.dcgettext
0x00002b2f      4889de         mov rsi, rbx
0x00002b32      4889c7         mov rdi, rax
0x00002b35      e866efffff     call sym.imp.fputs_unlocked             ; ../coreutils-8.31/src/.c:338
0x00002b3a      488b1da76521.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2190e8:8]=0
0x00002b41      488d35f81f01.  lea rsi, str.STYLE_is_one_of:______a______number_all_lines____t______number_only_nonempty_lines____n______number_no_lines____pBRE___number_only_lines_that_contain_a_match_for_the_basic_regular___________expression__BRE ; 0x14b40 ; "\nSTYLE is one of:\n\n  a      number all lines\n  t      number only nonempty lines\n  n      number no lines\n  pBRE   number only lines that contain a match for the basic regular\n         expression, BRE\n"
0x00002b48      ba05000000     mov edx, 5
0x00002b4d      31ff           xor edi, edi
0x00002b4f      e85ceeffff     call sym.imp.dcgettext
0x00002b54      4889de         mov rsi, rbx
0x00002b57      4889c7         mov rdi, rax
0x00002b5a      e841efffff     call sym.imp.fputs_unlocked
0x00002b5f      488b1d826521.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2190e8:8]=0
0x00002b66      488d35a32001.  lea rsi, str.FORMAT_is_one_of:______ln_____left_justified__no_leading_zeros____rn_____right_justified__no_leading_zeros____rz_____right_justified__leading_zeros ; 0x14c10 ; "\nFORMAT is one of:\n\n  ln     left justified, no leading zeros\n  rn     right justified, no leading zeros\n  rz     right justified, leading zeros\n\n"
0x00002b6d      ba05000000     mov edx, 5
0x00002b72      31ff           xor edi, edi
0x00002b74      e837eeffff     call sym.imp.dcgettext
0x00002b79      4889de         mov rsi, rbx
0x00002b7c      4889c7         mov rdi, rax
0x00002b7f      488d1d331801.  lea rbx, [0x000143b9]                   ; ../coreutils-8.31/src/.c:335 ; "nl"
0x00002b86      e815efffff     call sym.imp.fputs_unlocked
0x00002b8b      488d052a1801.  lea rax, [0x000143bc]                   ; "["
0x00002b92      488d0d641801.  lea rcx, str.sha256sum                  ; 0x143fd ; "sha256sum"
0x00002b99      48c744246000.  mov qword [rsp + 0x60], 0
0x00002ba2      48c744246800.  mov qword [rsp + 0x68], 0
0x00002bab      4889e2         mov rdx, rsp
0x00002bae      48890424       mov qword [rsp], rax
0x00002bb2      488d05051801.  lea rax, [0x000143be]                   ; "test invocation"
0x00002bb9      48894c2430     mov qword [rsp + 0x30], rcx
0x00002bbe      488d0d421801.  lea rcx, str.sha384sum                  ; 0x14407 ; "sha384sum"
0x00002bc5      4889442408     mov qword [rsp + 8], rax
0x00002bca      488d05651801.  lea rax, [0x00014436]                   ; "coreutils"
0x00002bd1      48894c2440     mov qword [rsp + 0x40], rcx
0x00002bd6      488d0d341801.  lea rcx, str.sha512sum                  ; 0x14411 ; "sha512sum"
0x00002bdd      4889442410     mov qword [rsp + 0x10], rax
0x00002be2      488d05e51701.  lea rax, [0x000143ce]                   ; "Multi-call invocation"
0x00002be9      48894c2450     mov qword [rsp + 0x50], rcx
0x00002bee      4889442418     mov qword [rsp + 0x18], rax
0x00002bf3      488d05ea1701.  lea rax, str.sha224sum                  ; 0x143e4 ; "sha224sum"
0x00002bfa      4889442420     mov qword [rsp + 0x20], rax
0x00002bff      488d05e81701.  lea rax, str.sha2_utilities             ; 0x143ee ; "sha2 utilities"
0x00002c06      4889442428     mov qword [rsp + 0x28], rax
0x00002c0b      4889442438     mov qword [rsp + 0x38], rax
0x00002c10      4889442448     mov qword [rsp + 0x48], rax
0x00002c15      4889442458     mov qword [rsp + 0x58], rax
0x00002c1a      660f1f440000   nop word [rax + rax]
0x00002c20      4883c210       add rdx, 0x10
0x00002c24      488b3a         mov rdi, qword [rdx]
0x00002c27      4885ff         test rdi, rdi
0x00002c2a      7413           je 0x2c3f
0x00002c2c      b903000000     mov ecx, 3
0x00002c31      4889de         mov rsi, rbx
0x00002c34      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002c36      0f97c0         seta al
0x00002c39      1c00           sbb al, 0
0x00002c3b      84c0           test al, al
0x00002c3d      75e1           jne 0x2c20
0x00002c3f      4c8b6208       mov r12, qword [rdx + 8]
0x00002c43      31ff           xor edi, edi
0x00002c45      ba05000000     mov edx, 5
0x00002c4a      488d35ca1701.  lea rsi, str.s_online_help:___s         ; 0x1441b ; "\n%s online help: <%s>\n"
0x00002c51      4d85e4         test r12, r12
0x00002c54      0f84c1000000   je 0x2d1b
0x00002c5a      e851edffff     call sym.imp.dcgettext
0x00002c5f      488d0d422001.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x14ca8 ; "https://www.gnu.org/software/coreutils/"
0x00002c66      488d15c51701.  lea rdx, str.GNU_coreutils              ; 0x14432 ; "GNU coreutils"
0x00002c6d      4889c6         mov rsi, rax
0x00002c70      bf01000000     mov edi, 1
0x00002c75      31c0           xor eax, eax
0x00002c77      e804efffff     call sym.imp.__printf_chk
0x00002c7c      31f6           xor esi, esi
0x00002c7e      bf05000000     mov edi, 5
0x00002c83      e8e8eeffff     call sym.imp.setlocale
0x00002c88      4885c0         test rax, rax
0x00002c8b      741c           je 0x2ca9
0x00002c8d      488d35ac1701.  lea rsi, [0x00014440]                   ; "en_"
0x00002c94      ba03000000     mov edx, 3
0x00002c99      4889c7         mov rdi, rax
0x00002c9c      e85fecffff     call sym.imp.strncmp
0x00002ca1      85c0           test eax, eax
0x00002ca3      0f8507010000   jne 0x2db0
0x00002ca9      488d35941701.  lea rsi, str.Full_documentation___s_s   ; 0x14444 ; "Full documentation <%s%s>\n"
0x00002cb0      31ff           xor edi, edi
0x00002cb2      ba05000000     mov edx, 5
0x00002cb7      e8f4ecffff     call sym.imp.dcgettext
0x00002cbc      488d0df61601.  lea rcx, [0x000143b9]                   ; "nl"
0x00002cc3      488d15de1f01.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x14ca8 ; "https://www.gnu.org/software/coreutils/"
0x00002cca      4889c6         mov rsi, rax
0x00002ccd      bf01000000     mov edi, 1
0x00002cd2      31c0           xor eax, eax
0x00002cd4      e8a7eeffff     call sym.imp.__printf_chk
0x00002cd9      4939dc         cmp r12, rbx
0x00002cdc      488d0df51601.  lea rcx, [0x000143d8]                   ; " invocation"
0x00002ce3      488d1dc31801.  lea rbx, [0x000145ad]
0x00002cea      480f44d9       cmove rbx, rcx
0x00002cee      488d35232001.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x14d18 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00002cf5      31ff           xor edi, edi
0x00002cf7      ba05000000     mov edx, 5
0x00002cfc      e8afecffff     call sym.imp.dcgettext
0x00002d01      4889d9         mov rcx, rbx
0x00002d04      4889c6         mov rsi, rax
0x00002d07      4c89e2         mov rdx, r12
0x00002d0a      bf01000000     mov edi, 1
0x00002d0f      31c0           xor eax, eax
0x00002d11      e86aeeffff     call sym.imp.__printf_chk
0x00002d16      e9abfcffff     jmp 0x29c6
0x00002d1b      e890ecffff     call sym.imp.dcgettext
0x00002d20      488d0d811f01.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x14ca8 ; "https://www.gnu.org/software/coreutils/"
0x00002d27      488d15041701.  lea rdx, str.GNU_coreutils              ; 0x14432 ; "GNU coreutils"
0x00002d2e      4889c6         mov rsi, rax
0x00002d31      bf01000000     mov edi, 1
0x00002d36      31c0           xor eax, eax
0x00002d38      e843eeffff     call sym.imp.__printf_chk
0x00002d3d      31f6           xor esi, esi
0x00002d3f      bf05000000     mov edi, 5
0x00002d44      e827eeffff     call sym.imp.setlocale
0x00002d49      4885c0         test rax, rax
0x00002d4c      7418           je 0x2d66
0x00002d4e      488d35eb1601.  lea rsi, [0x00014440]                   ; "en_"
0x00002d55      ba03000000     mov edx, 3
0x00002d5a      4889c7         mov rdi, rax
0x00002d5d      e89eebffff     call sym.imp.strncmp
0x00002d62      85c0           test eax, eax
0x00002d64      7543           jne 0x2da9
0x00002d66      488d35d71601.  lea rsi, str.Full_documentation___s_s   ; 0x14444 ; "Full documentation <%s%s>\n"
0x00002d6d      ba05000000     mov edx, 5
0x00002d72      31ff           xor edi, edi
0x00002d74      4c8d253e1601.  lea r12, [0x000143b9]                   ; "nl"
0x00002d7b      488d1d561601.  lea rbx, [0x000143d8]                   ; " invocation"
0x00002d82      e829ecffff     call sym.imp.dcgettext
0x00002d87      488d0d2b1601.  lea rcx, [0x000143b9]                   ; "nl"
0x00002d8e      488d15131f01.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x14ca8 ; "https://www.gnu.org/software/coreutils/"
0x00002d95      4889c6         mov rsi, rax
0x00002d98      bf01000000     mov edi, 1
0x00002d9d      31c0           xor eax, eax
0x00002d9f      e8dcedffff     call sym.imp.__printf_chk
0x00002da4      e945ffffff     jmp 0x2cee
0x00002da9      4c8d25091601.  lea r12, [0x000143b9]                   ; "nl"
0x00002db0      4c8b2d316321.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2190e8:8]=0
0x00002db7      488d35121f01.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x14cd0 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x00002dbe      31ff           xor edi, edi
0x00002dc0      ba05000000     mov edx, 5
0x00002dc5      e8e6ebffff     call sym.imp.dcgettext
0x00002dca      4c89ee         mov rsi, r13
0x00002dcd      4889c7         mov rdi, rax
0x00002dd0      e8cbecffff     call sym.imp.fputs_unlocked
0x00002dd5      e9cffeffff     jmp 0x2ca9
0x00002dda      660f1f440000   nop word [rax + rax]
;-- close_stdout_set_file_name:
0x00002de0      48893da96721.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x219590:8]=0
0x00002de7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00002de8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00002df0      40883d916721.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x219588:1]=0
0x00002df7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00002df8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00002e00      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00002e01      53             push rbx
0x00002e02      4883ec08       sub rsp, 8
0x00002e06      488b3ddb6221.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2190e8:8]=0
0x00002e0d      e8ce130100     call sym.close_stream
0x00002e12      85c0           test eax, eax
0x00002e14      7416           je 0x2e2c
0x00002e16      e8d5eaffff     call sym.imp.__errno_location
0x00002e1b      803d66672100.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x219588:1]=0
0x00002e22      4889c3         mov rbx, rax
0x00002e25      741c           je 0x2e43
0x00002e27      833820         cmp dword [rax], 0x20
0x00002e2a      7517           jne 0x2e43
0x00002e2c      488b3ded6221.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x219120:8]=0
0x00002e33      e8a8130100     call sym.close_stream
0x00002e38      85c0           test eax, eax
0x00002e3a      7546           jne 0x2e82
0x00002e3c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00002e40      5b             pop rbx
0x00002e41      5d             pop rbp
0x00002e42      c3             ret
0x00002e43      488d35122001.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x14e5c ; "write error"
0x00002e4a      31ff           xor edi, edi
0x00002e4c      ba05000000     mov edx, 5
0x00002e51      e85aebffff     call sym.imp.dcgettext
0x00002e56      488b3d336721.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x219590:8]=0
0x00002e5d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00002e60      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00002e63      7428           je 0x2e8d
0x00002e65      e8d61c0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x00002e6a      8b33           mov esi, dword [rbx]
0x00002e6c      488d15f51f01.  lea rdx, str.s:__s                      ; 0x14e68 ; "%s: %s"
0x00002e73      4889c1         mov rcx, rax
0x00002e76      4989e8         mov r8, rbp
0x00002e79      31ff           xor edi, edi
0x00002e7b      31c0           xor eax, eax
0x00002e7d      e82eedffff     call sym.imp.error
0x00002e82      8b3de8612100   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x219070:4]=1
0x00002e88      e883eaffff     call sym.imp._exit
0x00002e8d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x00002e8f      488d15d61f01.  lea rdx, [0x00014e6c]                   ; "%s"
0x00002e96      4889c1         mov rcx, rax
0x00002e99      31ff           xor edi, edi
0x00002e9b      31c0           xor eax, eax
0x00002e9d      e80eedffff     call sym.imp.error
0x00002ea2      ebde           jmp 0x2e82
0x00002ea4      662e0f1f8400.  nop word cs:[rax + rax]
0x00002eae      6690           nop
;-- fdadvise:
0x00002eb0      e9bbebffff     jmp sym.imp.posix_fadvise               ; ../coreutils-8.31/lib/fadvise.c:32
0x00002eb5      90             nop
0x00002eb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- fadvise:
0x00002ec0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fadvise.c:40
0x00002ec3      741b           je 0x2ee0
0x00002ec5      53             push rbx
0x00002ec6      89f3           mov ebx, esi
0x00002ec8      e813ecffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fadvise.c:42
0x00002ecd      89d9           mov ecx, ebx                            ; ../coreutils-8.31/lib/fadvise.c:34
0x00002ecf      31d2           xor edx, edx
0x00002ed1      31f6           xor esi, esi
0x00002ed3      5b             pop rbx                                 ; ../coreutils-8.31/lib/fadvise.c:43
0x00002ed4      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fadvise.c:34
0x00002ed6      e995ebffff     jmp sym.imp.posix_fadvise
0x00002edb      0f1f440000     nop dword [rax + rax]
0x00002ee0      f3c3           ret
0x00002ee2      662e0f1f8400.  nop word cs:[rax + rax]
0x00002eec      0f1f4000       nop dword [rax]
;-- initbuffer:
0x00002ef0      660fefc0       pxor xmm0, xmm0                         ; ../coreutils-8.31/lib/linebuffer.c:38
0x00002ef4      48c747100000.  mov qword [rdi + 0x10], 0
0x00002efc      0f1107         movups xmmword [rdi], xmm0
0x00002eff      c3             ret                                     ; ../coreutils-8.31/lib/linebuffer.c:40
;-- readlinebuffer_delim:
0x00002f00      4157           push r15                                ; ../coreutils-8.31/lib/linebuffer.c:61
0x00002f02      4156           push r14
0x00002f04      4155           push r13
0x00002f06      4154           push r12
0x00002f08      55             push rbp
0x00002f09      53             push rbx
0x00002f0a      4883ec18       sub rsp, 0x18
0x00002f0e      4c8b6f10       mov r13, qword [rdi + 0x10]             ; ../coreutils-8.31/lib/linebuffer.c:63
0x00002f12      4c8b07         mov r8, qword [rdi]                     ; ../coreutils-8.31/lib/linebuffer.c:65
0x00002f15      4d01e8         add r8, r13
0x00002f18      f60610         test byte [rsi], 0x10                   ; ../coreutils-8.31/lib/linebuffer.c:67
0x00002f1b      0f85cf000000   jne 0x2ff0
0x00002f21      4989fe         mov r14, rdi
0x00002f24      4889f5         mov rbp, rsi
0x00002f27      4c89eb         mov rbx, r13
0x00002f2a      440fbefa       movsx r15d, dl
0x00002f2e      eb0b           jmp 0x2f3b
0x00002f30      4539fc         cmp r12d, r15d                          ; ../coreutils-8.31/lib/linebuffer.c:91
0x00002f33      488d5e01       lea rbx, [rsi + 1]                      ; ../coreutils-8.31/lib/linebuffer.c:89
0x00002f37      880e           mov byte [rsi], cl
0x00002f39      745b           je 0x2f96                               ; ../coreutils-8.31/lib/linebuffer.c:91
0x00002f3b      488b4d08       mov rcx, qword [rbp + 8]                ; stdio.h:65   return _IO_getc_unlocked (__fp);
0x00002f3f      483b4d10       cmp rcx, qword [rbp + 0x10]
0x00002f43      736b           jae 0x2fb0
0x00002f45      488d4101       lea rax, [rcx + 1]
0x00002f49      48894508       mov qword [rbp + 8], rax
0x00002f4d      440fb621       movzx r12d, byte [rcx]
0x00002f51      4489e1         mov ecx, r12d
0x00002f54      4c39c3         cmp rbx, r8                             ; ../coreutils-8.31/lib/linebuffer.c:81
0x00002f57      4889de         mov rsi, rbx
0x00002f5a      75d4           jne 0x2f30
0x00002f5c      498b1e         mov rbx, qword [r14]                    ; ../coreutils-8.31/lib/linebuffer.c:83
0x00002f5f      4c89f6         mov rsi, r14                            ; ../coreutils-8.31/lib/linebuffer.c:84
0x00002f62      4c89ef         mov rdi, r13
0x00002f65      8854240f       mov byte [rsp + 0xf], dl
0x00002f69      880c24         mov byte [rsp], cl
0x00002f6c      e86f250000     call sym.x2realloc
0x00002f71      4d8b06         mov r8, qword [r14]                     ; ../coreutils-8.31/lib/linebuffer.c:87
0x00002f74      0fb60c24       movzx ecx, byte [rsp]
0x00002f78      488d3418       lea rsi, [rax + rbx]                    ; ../coreutils-8.31/lib/linebuffer.c:85
0x00002f7c      49894610       mov qword [r14 + 0x10], rax             ; ../coreutils-8.31/lib/linebuffer.c:86
0x00002f80      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/linebuffer.c:84
0x00002f83      0fb654240f     movzx edx, byte [rsp + 0xf]             ; ../coreutils-8.31/lib/linebuffer.c:87
0x00002f88      488d5e01       lea rbx, [rsi + 1]                      ; ../coreutils-8.31/lib/linebuffer.c:89
0x00002f8c      4901c0         add r8, rax                             ; ../coreutils-8.31/lib/linebuffer.c:87
0x00002f8f      4539fc         cmp r12d, r15d                          ; ../coreutils-8.31/lib/linebuffer.c:91
0x00002f92      880e           mov byte [rsi], cl                      ; ../coreutils-8.31/lib/linebuffer.c:89
0x00002f94      75a5           jne 0x2f3b                              ; ../coreutils-8.31/lib/linebuffer.c:91
0x00002f96      4c29eb         sub rbx, r13                            ; ../coreutils-8.31/lib/linebuffer.c:93
0x00002f99      4c89f0         mov rax, r14                            ; ../coreutils-8.31/lib/linebuffer.c:94
0x00002f9c      49895e08       mov qword [r14 + 8], rbx                ; ../coreutils-8.31/lib/linebuffer.c:93
0x00002fa0      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/linebuffer.c:95
0x00002fa4      5b             pop rbx
0x00002fa5      5d             pop rbp
0x00002fa6      415c           pop r12
0x00002fa8      415d           pop r13
0x00002faa      415e           pop r14
0x00002fac      415f           pop r15
0x00002fae      c3             ret
0x00002faf      90             nop
0x00002fb0      4889ef         mov rdi, rbp                            ; stdio.h:65   return _IO_getc_unlocked (__fp);
0x00002fb3      8854240f       mov byte [rsp + 0xf], dl
0x00002fb7      4c890424       mov qword [rsp], r8
0x00002fbb      e800e9ffff     call sym.imp.__uflow
0x00002fc0      83f8ff         cmp eax, 0xffffffff                     ; ../coreutils-8.31/lib/linebuffer.c:73
0x00002fc3      4189c4         mov r12d, eax                           ; stdio.h:65   return _IO_getc_unlocked (__fp);
0x00002fc6      4c8b0424       mov r8, qword [rsp]                     ; ../coreutils-8.31/lib/linebuffer.c:73
0x00002fca      0fb654240f     movzx edx, byte [rsp + 0xf]
0x00002fcf      7530           jne 0x3001
0x00002fd1      4939dd         cmp r13, rbx                            ; ../coreutils-8.31/lib/linebuffer.c:75
0x00002fd4      741a           je 0x2ff0
0x00002fd6      f6450020       test byte [rbp], 0x20
0x00002fda      7514           jne 0x2ff0
0x00002fdc      3853ff         cmp byte [rbx - 1], dl                  ; ../coreutils-8.31/lib/linebuffer.c:77
0x00002fdf      74b5           je 0x2f96
0x00002fe1      4589fc         mov r12d, r15d                          ; ../coreutils-8.31/lib/linebuffer.c:79
0x00002fe4      89d1           mov ecx, edx
0x00002fe6      e969ffffff     jmp 0x2f54
0x00002feb      0f1f440000     nop dword [rax + rax]
0x00002ff0      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/linebuffer.c:95
0x00002ff4      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/linebuffer.c:68
0x00002ff6      5b             pop rbx                                 ; ../coreutils-8.31/lib/linebuffer.c:95
0x00002ff7      5d             pop rbp
0x00002ff8      415c           pop r12
0x00002ffa      415d           pop r13
0x00002ffc      415e           pop r14
0x00002ffe      415f           pop r15
0x00003000      c3             ret
0x00003001      89c1           mov ecx, eax
0x00003003      e94cffffff     jmp 0x2f54
0x00003008      0f1f84000000.  nop dword [rax + rax]
;-- readlinebuffer:
0x00003010      ba0a000000     mov edx, 0xa                            ; ../coreutils-8.31/lib/linebuffer.c:44
0x00003015      e9e6feffff     jmp sym.readlinebuffer_delim
0x0000301a      660f1f440000   nop word [rax + rax]
;-- freebuffer:
0x00003020      488b7f10       mov rdi, qword [rdi + 0x10]             ; ../coreutils-8.31/lib/linebuffer.c:101
0x00003024      e9a7e8ffff     jmp sym.imp.free
0x00003029      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/linebuffer.c:102
;-- set_program_name:
0x00003030      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00003033      53             push rbx
0x00003034      7477           je 0x30ad                               ; ../coreutils-8.31/lib/progname.c:51
0x00003036      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x0000303b      4889fb         mov rbx, rdi
0x0000303e      e8ede9ffff     call sym.imp.strrchr
0x00003043      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00003046      7455           je 0x309d
0x00003048      4c8d4001       lea r8, [rax + 1]
0x0000304c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x0000304f      4829da         sub rdx, rbx
0x00003052      4883fa06       cmp rdx, 6
0x00003056      7e45           jle 0x309d
0x00003058      488d70fa       lea rsi, [rax - 6]
0x0000305c      488d3d451e01.  lea rdi, str..libs                      ; 0x14ea8 ; "/.libs/"
0x00003063      b907000000     mov ecx, 7
0x00003068      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000306a      0f97c2         seta dl
0x0000306d      80da00         sbb dl, 0
0x00003070      84d2           test dl, dl
0x00003072      7529           jne 0x309d
0x00003074      488d3d351e01.  lea rdi, [0x00014eb0]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x0000307b      b903000000     mov ecx, 3
0x00003080      4c89c6         mov rsi, r8
0x00003083      4c89c3         mov rbx, r8
0x00003086      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00003088      0f97c2         seta dl
0x0000308b      80da00         sbb dl, 0
0x0000308e      84d2           test dl, dl
0x00003090      750b           jne 0x309d
0x00003092      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00003096      48891d436021.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x2190e0:8]=0
0x0000309d      48891df46421.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x219598:8]=0
0x000030a4      48891d5d6021.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x219108:8]=0
0x000030ab      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x000030ac      c3             ret
0x000030ad      488b0d6c6021.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x219120:8]=0
0x000030b4      488d3db51d01.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x14e70 ; "A NULL argv[0] was passed through an exec system call.\n"
0x000030bb      ba37000000     mov edx, 0x37                           ; '7'
0x000030c0      be01000000     mov esi, 1
0x000030c5      e856ebffff     call sym.imp.fwrite
0x000030ca      e811e8ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x000030cf      90             nop
;-- gettext_quote.part.1:
0x000030d0      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x000030d1      53             push rbx
0x000030d2      4889fd         mov rbp, rdi
0x000030d5      89f3           mov ebx, esi
0x000030d7      4883ec08       sub rsp, 8
0x000030db      e8e0110100     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x000030e0      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x000030e3      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000030e6      80fa55         cmp dl, 0x55
0x000030e9      7475           je 0x3160
0x000030eb      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x000030ee      7420           je 0x3110
0x000030f0      488d05cc1d01.  lea rax, str.l______l                   ; 0x14ec3 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000030f7      488d15c71d01.  lea rdx, [0x00014ec5]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000030fe      83fb09         cmp ebx, 9
0x00003101      480f45c2       cmovne rax, rdx
0x00003105      4883c408       add rsp, 8
0x00003109      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x0000310a      5d             pop rbp
0x0000310b      c3             ret
0x0000310c      0f1f4000       nop dword [rax]
0x00003110      0fb65001       movzx edx, byte [rax + 1]
0x00003114      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003117      80fa42         cmp dl, 0x42
0x0000311a      75d4           jne 0x30f0
0x0000311c      80780231       cmp byte [rax + 2], 0x31
0x00003120      75ce           jne 0x30f0
0x00003122      80780338       cmp byte [rax + 3], 0x38
0x00003126      75c8           jne 0x30f0
0x00003128      80780430       cmp byte [rax + 4], 0x30
0x0000312c      75c2           jne 0x30f0
0x0000312e      80780533       cmp byte [rax + 5], 0x33
0x00003132      75bc           jne 0x30f0
0x00003134      80780630       cmp byte [rax + 6], 0x30
0x00003138      75b6           jne 0x30f0
0x0000313a      80780700       cmp byte [rax + 7], 0
0x0000313e      75b0           jne 0x30f0
0x00003140      807d0060       cmp byte [rbp], 0x60
0x00003144      488d05711d01.  lea rax, [0x00014ebc]
0x0000314b      488d156e1d01.  lea rdx, [0x00014ec0]
0x00003152      480f45c2       cmovne rax, rdx
0x00003156      4883c408       add rsp, 8
0x0000315a      5b             pop rbx
0x0000315b      5d             pop rbp
0x0000315c      c3             ret
0x0000315d      0f1f00         nop dword [rax]
0x00003160      0fb65001       movzx edx, byte [rax + 1]
0x00003164      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003167      80fa54         cmp dl, 0x54
0x0000316a      7584           jne 0x30f0
0x0000316c      0fb65002       movzx edx, byte [rax + 2]
0x00003170      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003173      80fa46         cmp dl, 0x46
0x00003176      0f8574ffffff   jne 0x30f0
0x0000317c      8078032d       cmp byte [rax + 3], 0x2d
0x00003180      0f856affffff   jne 0x30f0
0x00003186      80780438       cmp byte [rax + 4], 0x38
0x0000318a      0f8560ffffff   jne 0x30f0
0x00003190      80780500       cmp byte [rax + 5], 0
0x00003194      0f8556ffffff   jne 0x30f0
0x0000319a      807d0060       cmp byte [rbp], 0x60
0x0000319e      488d050f1d01.  lea rax, [0x00014eb4]                   ; "\u2018"
0x000031a5      488d150c1d01.  lea rdx, [0x00014eb8]                   ; "\u2019"
0x000031ac      480f45c2       cmovne rax, rdx
0x000031b0      4883c408       add rsp, 8
0x000031b4      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x000031b5      5d             pop rbp
0x000031b6      c3             ret
0x000031b7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x000031c0      4157           push r15
0x000031c2      4156           push r14
0x000031c4      4589c7         mov r15d, r8d
0x000031c7      4155           push r13
0x000031c9      4154           push r12
0x000031cb      4989fe         mov r14, rdi
0x000031ce      55             push rbp
0x000031cf      53             push rbx
0x000031d0      4489cb         mov ebx, r9d
0x000031d3      4989f5         mov r13, rsi
0x000031d6      4889cd         mov rbp, rcx
0x000031d9      83e302         and ebx, 2
0x000031dc      4881ecb80000.  sub rsp, 0xb8
0x000031e3      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x000031eb      4889542410     mov qword [rsp + 0x10], rdx
0x000031f0      4489442408     mov dword [rsp + 8], r8d
0x000031f5      44894c2478     mov dword [rsp + 0x78], r9d
0x000031fa      4889442420     mov qword [rsp + 0x20], rax
0x000031ff      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00003207      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x0000320c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00003214      4889442460     mov qword [rsp + 0x60], rax
0x00003219      64488b042528.  mov rax, qword fs:[0x28]
0x00003222      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000322a      31c0           xor eax, eax
0x0000322c      e88fe7ffff     call sym.imp.__ctype_get_mb_cur_max
0x00003231      4183ff0a       cmp r15d, 0xa
0x00003235      4889442458     mov qword [rsp + 0x58], rax
0x0000323a      0f87af110000   ja 0x43ef
0x00003240      488d0dd91c01.  lea rcx, [0x00014f20]
0x00003247      4489fa         mov edx, r15d
0x0000324a      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000324e      4801c8         add rax, rcx
0x00003251      ffe0           jmp rax
0x00003253      c644240e01     mov byte [rsp + 0xe], 1
0x00003258      c644247c00     mov byte [rsp + 0x7c], 0
0x0000325d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00003260      48c744245000.  mov qword [rsp + 0x50], 0
0x00003269      c644240f01     mov byte [rsp + 0xf], 1
0x0000326e      c644240d00     mov byte [rsp + 0xd], 0
0x00003273      488d054b1c01.  lea rax, [0x00014ec5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000327a      48c744241801.  mov qword [rsp + 0x18], 1
0x00003283      4531ff         xor r15d, r15d
0x00003286      c74424080200.  mov dword [rsp + 8], 2
0x0000328e      4889442448     mov qword [rsp + 0x48], rax
0x00003293      4531db         xor r11d, r11d
0x00003296      4889e8         mov rax, rbp
0x00003299      4589e0         mov r8d, r12d
0x0000329c      4c89dd         mov rbp, r11
0x0000329f      4989c3         mov r11, rax
0x000032a2      660f1f440000   nop word [rax + rax]
0x000032a8      4939eb         cmp r11, rbp
0x000032ab      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x000032af      4983fbff       cmp r11, 0xffffffffffffffff
0x000032b3      750d           jne 0x32c2
0x000032b5      488b442410     mov rax, qword [rsp + 0x10]
0x000032ba      803c2800       cmp byte [rax + rbp], 0
0x000032be      410f95c4       setne r12b
0x000032c2      4584e4         test r12b, r12b
0x000032c5      0f8455060000   je 0x3920
0x000032cb      837c240802     cmp dword [rsp + 8], 2
0x000032d0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000032d5      4c8d0c2f       lea r9, [rdi + rbp]
0x000032d9      0f95c0         setne al
0x000032dc      2244240d       and al, byte [rsp + 0xd]
0x000032e0      4189c2         mov r10d, eax
0x000032e3      0f84a7000000   je 0x3390
0x000032e9      488b442418     mov rax, qword [rsp + 0x18]
0x000032ee      4885c0         test rax, rax
0x000032f1      0f8429040000   je 0x3720
0x000032f7      4983fbff       cmp r11, 0xffffffffffffffff
0x000032fb      488d5c0500     lea rbx, [rbp + rax]
0x00003300      752e           jne 0x3330
0x00003302      4883f801       cmp rax, 1
0x00003306      7628           jbe 0x3330
0x00003308      4488442438     mov byte [rsp + 0x38], r8b
0x0000330d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00003312      4c894c2428     mov qword [rsp + 0x28], r9
0x00003317      e8b4e6ffff     call sym.imp.strlen
0x0000331c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00003322      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00003328      4989c3         mov r11, rax
0x0000332b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00003330      4c39db         cmp rbx, r11
0x00003333      4488542428     mov byte [rsp + 0x28], r10b
0x00003338      0f87b2050000   ja 0x38f0
0x0000333e      488b542418     mov rdx, qword [rsp + 0x18]
0x00003343      488b742448     mov rsi, qword [rsp + 0x48]
0x00003348      4c89cf         mov rdi, r9
0x0000334b      4c895c2440     mov qword [rsp + 0x40], r11
0x00003350      4488442438     mov byte [rsp + 0x38], r8b
0x00003355      4c894c2430     mov qword [rsp + 0x30], r9
0x0000335a      e821e7ffff     call sym.imp.memcmp
0x0000335f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00003361      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003366      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x0000336c      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00003371      0f8579050000   jne 0x38f0
0x00003377      807c240f00     cmp byte [rsp + 0xf], 0
0x0000337c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003382      0f857d0f0000   jne 0x4305
0x00003388      0f1f84000000.  nop dword [rax + rax]
0x00003390      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00003394      80fb7e         cmp bl, 0x7e
0x00003397      0f871b030000   ja 0x36b8
0x0000339d      488d0da81b01.  lea rcx, [0x00014f4c]
0x000033a4      0fb6d3         movzx edx, bl
0x000033a7      48630491       movsxd rax, dword [rcx + rdx*4]
0x000033ab      4801c8         add rax, rcx
0x000033ae      ffe0           jmp rax
0x000033b0      4531d2         xor r10d, r10d
0x000033b3      4983fb01       cmp r11, 1
0x000033b7      0f95c0         setne al
0x000033ba      4983fbff       cmp r11, 0xffffffffffffffff
0x000033be      750c           jne 0x33cc
0x000033c0      488b442410     mov rax, qword [rsp + 0x10]
0x000033c5      80780100       cmp byte [rax + 1], 0
0x000033c9      0f95c0         setne al
0x000033cc      837c240802     cmp dword [rsp + 8], 2
0x000033d1      0f94c2         sete dl
0x000033d4      84c0           test al, al
0x000033d6      0f844c020000   je 0x3628
0x000033dc      4531e4         xor r12d, r12d
0x000033df      31c0           xor eax, eax
0x000033e1      0f1f80000000.  nop dword [rax]
0x000033e8      807c240d01     cmp byte [rsp + 0xd], 1
0x000033ed      0f850f010000   jne 0x3502
0x000033f3      84d2           test dl, dl
0x000033f5      0f8507010000   jne 0x3502
0x000033fb      488b742420     mov rsi, qword [rsp + 0x20]
0x00003400      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00003403      7414           je 0x3419
0x00003405      89da           mov edx, ebx
0x00003407      c0ea05         shr dl, 5
0x0000340a      0fb6d2         movzx edx, dl
0x0000340d      8b1496         mov edx, dword [rsi + rdx*4]
0x00003410      0fa3da         bt edx, ebx
0x00003413      0f824a010000   jb 0x3563
0x00003419      4584d2         test r10b, r10b
0x0000341c      0f8541010000   jne 0x3563
0x00003422      83f001         xor eax, 1
0x00003425      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00003429      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x0000342c      84c0           test al, al
0x0000342e      7420           je 0x3450                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00003430      4d39fd         cmp r13, r15
0x00003433      7605           jbe 0x343a
0x00003435      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000343a      498d4701       lea rax, [r15 + 1]
0x0000343e      4939c5         cmp r13, rax
0x00003441      7606           jbe 0x3449
0x00003443      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003449      4983c702       add r15, 2
0x0000344d      4531c0         xor r8d, r8d
0x00003450      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00003453      7304           jae 0x3459                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00003455      43881c3e       mov byte [r14 + r15], bl
0x00003459      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x0000345e      4983c701       add r15, 1
0x00003462      b800000000     mov eax, 0
0x00003467      4584e4         test r12b, r12b
0x0000346a      0f44f8         cmove edi, eax
0x0000346d      40887c240e     mov byte [rsp + 0xe], dil
0x00003472      e931feffff     jmp 0x32a8
0x00003477      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00003480      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00003483      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00003487      83f802         cmp eax, 2
0x0000348a      0f84b8050000   je 0x3a48
0x00003490      83f805         cmp eax, 5
0x00003493      0f846f050000   je 0x3a08
0x00003499      83f802         cmp eax, 2
0x0000349c      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000034a1      0f94c2         sete dl
0x000034a4      4531e4         xor r12d, r12d
0x000034a7      31c0           xor eax, eax
0x000034a9      e93affffff     jmp 0x33e8
0x000034ae      6690           nop
0x000034b0      4531d2         xor r10d, r10d
0x000034b3      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x000034b8      0f8402050000   je 0x39c0
0x000034be      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x000034c3      31d2           xor edx, edx
0x000034c5      31c0           xor eax, eax
0x000034c7      bb27000000     mov ebx, 0x27                           ; '''
0x000034cc      e917ffffff     jmp 0x33e8
0x000034d1      0f1f80000000.  nop dword [rax]
0x000034d8      ba09000000     mov edx, 9
0x000034dd      bb74000000     mov ebx, 0x74                           ; 't'
0x000034e2      837c240802     cmp dword [rsp + 8], 2
0x000034e7      0f94c0         sete al
0x000034ea      2244240f       and al, byte [rsp + 0xf]
0x000034ee      0f854a010000   jne 0x363e
0x000034f4      807c240d00     cmp byte [rsp + 0xd], 0
0x000034f9      7565           jne 0x3560
0x000034fb      89d3           mov ebx, edx
0x000034fd      4531e4         xor r12d, r12d
0x00003500      31c0           xor eax, eax
0x00003502      807c240f00     cmp byte [rsp + 0xf], 0
0x00003507      0f85eefeffff   jne 0x33fb
0x0000350d      e907ffffff     jmp 0x3419                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00003512      660f1f440000   nop word [rax + rax]
0x00003518      ba08000000     mov edx, 8
0x0000351d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003522      ebd0           jmp 0x34f4
0x00003524      0f1f4000       nop dword [rax]
0x00003528      837c240802     cmp dword [rsp + 8], 2
0x0000352d      0f84cd030000   je 0x3900
0x00003533      807c240d00     cmp byte [rsp + 0xd], 0
0x00003538      0f8412020000   je 0x3750
0x0000353e      807c240f00     cmp byte [rsp + 0xf], 0
0x00003543      0f8407020000   je 0x3750
0x00003549      48837c241800   cmp qword [rsp + 0x18], 0
0x0000354f      0f85b6030000   jne 0x390b
0x00003555      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000355a      660f1f440000   nop word [rax + rax]
0x00003560      4531e4         xor r12d, r12d
0x00003563      837c240802     cmp dword [rsp + 8], 2
0x00003568      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x0000356b      807c240f00     cmp byte [rsp + 0xf], 0
0x00003570      89d0           mov eax, edx
0x00003572      0f8550080000   jne 0x3dc8
0x00003578      4489c0         mov eax, r8d
0x0000357b      83f001         xor eax, 1
0x0000357e      20d0           and al, dl
0x00003580      742f           je 0x35b1
0x00003582      4d39fd         cmp r13, r15
0x00003585      7605           jbe 0x358c
0x00003587      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000358c      498d5701       lea rdx, [r15 + 1]
0x00003590      4939d5         cmp r13, rdx
0x00003593      7606           jbe 0x359b
0x00003595      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000359b      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x0000359f      4939d5         cmp r13, rdx
0x000035a2      7606           jbe 0x35aa
0x000035a4      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000035aa      4983c703       add r15, 3
0x000035ae      4189c0         mov r8d, eax
0x000035b1      4d39fd         cmp r13, r15
0x000035b4      7605           jbe 0x35bb
0x000035b6      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000035bb      4983c701       add r15, 1
0x000035bf      4883c501       add rbp, 1
0x000035c3      e988feffff     jmp 0x3450
0x000035c8      0f1f84000000.  nop dword [rax + rax]
0x000035d0      807c240d00     cmp byte [rsp + 0xd], 0
0x000035d5      0f85c8010000   jne 0x37a3
0x000035db      31d2           xor edx, edx
0x000035dd      f644247801     test byte [rsp + 0x78], 1
0x000035e2      0f8413ffffff   je 0x34fb
0x000035e8      4883c501       add rbp, 1
0x000035ec      e9b7fcffff     jmp 0x32a8
0x000035f1      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x000035f8      837c240802     cmp dword [rsp + 8], 2
0x000035fd      0f94c2         sete dl
0x00003600      31c0           xor eax, eax
0x00003602      e9e1fdffff     jmp 0x33e8
0x00003607      660f1f840000.  nop word [rax + rax]
0x00003610      ba07000000     mov edx, 7
0x00003615      bb61000000     mov ebx, 0x61                           ; 'a'
0x0000361a      e9d5feffff     jmp 0x34f4
0x0000361f      90             nop
0x00003620      837c240802     cmp dword [rsp + 8], 2
0x00003625      0f94c2         sete dl
0x00003628      4885ed         test rbp, rbp
0x0000362b      0f85abfdffff   jne 0x33dc
0x00003631      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003636      20d0           and al, dl
0x00003638      0f84aafdffff   je 0x33e8
0x0000363e      4c89dd         mov rbp, r11
0x00003641      c74424080200.  mov dword [rsp + 8], 2
0x00003649      e9fb060000     jmp 0x3d49
0x0000364e      6690           nop
0x00003650      837c240802     cmp dword [rsp + 8], 2
0x00003655      0f94c2         sete dl
0x00003658      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x0000365b      ebd4           jmp 0x3631
0x0000365d      0f1f00         nop dword [rax]
0x00003660      837c240802     cmp dword [rsp + 8], 2
0x00003665      bb20000000     mov ebx, 0x20                           ; "@"
0x0000366a      0f94c2         sete dl
0x0000366d      ebc2           jmp 0x3631
0x0000366f      90             nop
0x00003670      ba0d000000     mov edx, 0xd
0x00003675      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000367a      e963feffff     jmp 0x34e2
0x0000367f      90             nop
0x00003680      ba0c000000     mov edx, 0xc
0x00003685      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000368a      e965feffff     jmp 0x34f4
0x0000368f      90             nop
0x00003690      ba0b000000     mov edx, 0xb
0x00003695      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000369a      e955feffff     jmp 0x34f4
0x0000369f      90             nop
0x000036a0      ba0a000000     mov edx, 0xa
0x000036a5      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x000036aa      e933feffff     jmp 0x34e2
0x000036af      90             nop
0x000036b0      4531d2         xor r10d, r10d
0x000036b3      0f1f440000     nop dword [rax + rax]
0x000036b8      48837c245801   cmp qword [rsp + 0x58], 1
0x000036be      0f85a4030000   jne 0x3a68
0x000036c4      4c895c2438     mov qword [rsp + 0x38], r11
0x000036c9      4488442430     mov byte [rsp + 0x30], r8b
0x000036ce      4488542428     mov byte [rsp + 0x28], r10b
0x000036d3      e898e5ffff     call sym.imp.__ctype_b_loc
0x000036d8      488b08         mov rcx, qword [rax]
0x000036db      0fb6d3         movzx edx, bl
0x000036de      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x000036e4      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x000036ea      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x000036ef      bf01000000     mov edi, 1
0x000036f4      0fb70451       movzx eax, word [rcx + rdx*2]
0x000036f8      66250040       and ax, 0x4000                          ; "D$|"
0x000036fc      410f95c4       setne r12b
0x00003700      0f94c0         sete al
0x00003703      2244240d       and al, byte [rsp + 0xd]
0x00003707      84c0           test al, al
0x00003709      0f8592090000   jne 0x40a1
0x0000370f      837c240802     cmp dword [rsp + 8], 2
0x00003714      0f94c2         sete dl
0x00003717      e9ccfcffff     jmp 0x33e8
0x0000371c      0f1f4000       nop dword [rax]
0x00003720      410fb619       movzx ebx, byte [r9]
0x00003724      80fb7e         cmp bl, 0x7e
0x00003727      7787           ja 0x36b0
0x00003729      488d0d181a01.  lea rcx, [0x00015148]
0x00003730      0fb6d3         movzx edx, bl
0x00003733      48630491       movsxd rax, dword [rcx + rdx*4]
0x00003737      4801c8         add rax, rcx
0x0000373a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x0000373c      0f1f4000       nop dword [rax]
0x00003740      4531d2         xor r10d, r10d
0x00003743      807c240d00     cmp byte [rsp + 0xd], 0
0x00003748      0f85f0fdffff   jne 0x353e
0x0000374e      6690           nop
0x00003750      ba5c000000     mov edx, 0x5c                           ; '\'
0x00003755      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000375a      e995fdffff     jmp 0x34f4
0x0000375f      90             nop
0x00003760      ba0c000000     mov edx, 0xc
0x00003765      4531d2         xor r10d, r10d
0x00003768      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000376d      e982fdffff     jmp 0x34f4
0x00003772      660f1f440000   nop word [rax + rax]
0x00003778      ba0a000000     mov edx, 0xa
0x0000377d      4531d2         xor r10d, r10d
0x00003780      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00003785      e958fdffff     jmp 0x34e2
0x0000378a      660f1f440000   nop word [rax + rax]
0x00003790      bb61000000     mov ebx, 0x61                           ; 'a'
0x00003795      e9c6fdffff     jmp 0x3560
0x0000379a      660f1f440000   nop word [rax + rax]
0x000037a0      4531d2         xor r10d, r10d
0x000037a3      837c240802     cmp dword [rsp + 8], 2
0x000037a8      0f94c2         sete dl
0x000037ab      807c240f00     cmp byte [rsp + 0xf], 0
0x000037b0      0f85940b0000   jne 0x434a
0x000037b6      4489c0         mov eax, r8d
0x000037b9      4c89f9         mov rcx, r15
0x000037bc      83f001         xor eax, 1
0x000037bf      20d0           and al, dl
0x000037c1      742d           je 0x37f0
0x000037c3      4d39fd         cmp r13, r15
0x000037c6      7605           jbe 0x37cd
0x000037c8      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000037cd      498d4f01       lea rcx, [r15 + 1]
0x000037d1      4939cd         cmp r13, rcx
0x000037d4      7606           jbe 0x37dc
0x000037d6      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000037dc      498d4f02       lea rcx, [r15 + 2]
0x000037e0      4939cd         cmp r13, rcx
0x000037e3      0f8730060000   ja 0x3e19
0x000037e9      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x000037ed      4189c0         mov r8d, eax
0x000037f0      4939cd         cmp r13, rcx
0x000037f3      7605           jbe 0x37fa
0x000037f5      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000037fa      837c240802     cmp dword [rsp + 8], 2
0x000037ff      4c8d7901       lea r15, [rcx + 1]
0x00003803      0f8400060000   je 0x3e09
0x00003809      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000380d      4c39d8         cmp rax, r11
0x00003810      7319           jae 0x382b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00003812      488b442410     mov rax, qword [rsp + 0x10]
0x00003817      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x0000381c      88442428       mov byte [rsp + 0x28], al
0x00003820      83e830         sub eax, 0x30
0x00003823      3c09           cmp al, 9
0x00003825      0f862e080000   jbe 0x4059
0x0000382b      4489e0         mov eax, r12d
0x0000382e      bb30000000     mov ebx, 0x30                           ; '0'
0x00003833      4531e4         xor r12d, r12d
0x00003836      e9adfbffff     jmp 0x33e8                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x0000383b      0f1f440000     nop dword [rax + rax]
0x00003840      837c240802     cmp dword [rsp + 8], 2
0x00003845      4589d4         mov r12d, r10d
0x00003848      0f94c2         sete dl
0x0000384b      4531d2         xor r10d, r10d
0x0000384e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003850      e993fbffff     jmp 0x33e8                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00003855      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003858      837c240802     cmp dword [rsp + 8], 2
0x0000385d      0f94c2         sete dl
0x00003860      4531d2         xor r10d, r10d
0x00003863      e9c0fdffff     jmp 0x3628
0x00003868      0f1f84000000.  nop dword [rax + rax]
0x00003870      837c240802     cmp dword [rsp + 8], 2
0x00003875      0f94c2         sete dl
0x00003878      4531d2         xor r10d, r10d
0x0000387b      4531e4         xor r12d, r12d
0x0000387e      e9aefdffff     jmp 0x3631
0x00003883      0f1f440000     nop dword [rax + rax]
0x00003888      837c240802     cmp dword [rsp + 8], 2
0x0000388d      4589d4         mov r12d, r10d
0x00003890      bb20000000     mov ebx, 0x20                           ; "@"
0x00003895      0f94c2         sete dl
0x00003898      4531d2         xor r10d, r10d
0x0000389b      e991fdffff     jmp 0x3631
0x000038a0      ba0d000000     mov edx, 0xd
0x000038a5      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x000038a8      bb72000000     mov ebx, 0x72                           ; 'r'
0x000038ad      e930fcffff     jmp 0x34e2
0x000038b2      660f1f440000   nop word [rax + rax]
0x000038b8      bb76000000     mov ebx, 0x76                           ; 'v'
0x000038bd      e99efcffff     jmp 0x3560
0x000038c2      660f1f440000   nop word [rax + rax]
0x000038c8      ba09000000     mov edx, 9
0x000038cd      4531d2         xor r10d, r10d
0x000038d0      bb74000000     mov ebx, 0x74                           ; 't'
0x000038d5      e908fcffff     jmp 0x34e2
0x000038da      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x000038e0      bb62000000     mov ebx, 0x62                           ; 'b'
0x000038e5      e976fcffff     jmp 0x3560
0x000038ea      660f1f440000   nop word [rax + rax]
0x000038f0      4531d2         xor r10d, r10d
0x000038f3      e998faffff     jmp 0x3390
0x000038f8      0f1f84000000.  nop dword [rax + rax]
0x00003900      807c240f00     cmp byte [rsp + 0xf], 0
0x00003905      0f8565090000   jne 0x4270
0x0000390b      4883c501       add rbp, 1
0x0000390f      4489c0         mov eax, r8d
0x00003912      4531e4         xor r12d, r12d
0x00003915      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000391a      e90dfbffff     jmp 0x342c
0x0000391f      90             nop
0x00003920      837c240802     cmp dword [rsp + 8], 2
0x00003925      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000392a      4589c4         mov r12d, r8d
0x0000392d      4c89dd         mov rbp, r11
0x00003930      0f94c2         sete dl
0x00003933      89d8           mov eax, ebx
0x00003935      4d85ff         test r15, r15
0x00003938      0f94c1         sete cl
0x0000393b      21d0           and eax, edx
0x0000393d      20c8           and al, cl
0x0000393f      0f85610a0000   jne 0x43a6                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00003945      89d8           mov eax, ebx
0x00003947      83f001         xor eax, 1
0x0000394a      20c2           and dl, al
0x0000394c      0f846a090000   je 0x42bc
0x00003952      807c247c00     cmp byte [rsp + 0x7c], 0
0x00003957      0f845d090000   je 0x42ba
0x0000395d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00003962      0f85f5090000   jne 0x435d
0x00003968      4d85ed         test r13, r13
0x0000396b      0f94c0         sete al
0x0000396e      48837c245000   cmp qword [rsp + 0x50], 0
0x00003974      0f95c2         setne dl
0x00003977      20d0           and al, dl
0x00003979      0f841d0a0000   je 0x439c
0x0000397f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003984      488d1d3a1501.  lea rbx, [0x00014ec5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000398b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x0000398f      c74424080200.  mov dword [rsp + 8], 2
0x00003997      41bf01000000   mov r15d, 1
0x0000399d      48c744241801.  mov qword [rsp + 0x18], 1
0x000039a6      c644240f00     mov byte [rsp + 0xf], 0
0x000039ab      48895c2448     mov qword [rsp + 0x48], rbx
0x000039b0      8844247c       mov byte [rsp + 0x7c], al
0x000039b4      e9daf8ffff     jmp 0x3293
0x000039b9      0f1f80000000.  nop dword [rax]
0x000039c0      807c240f00     cmp byte [rsp + 0xf], 0
0x000039c5      0f85a5080000   jne 0x4270
0x000039cb      4d85ed         test r13, r13
0x000039ce      0f84fc030000   je 0x3dd0                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x000039d4      31d2           xor edx, edx
0x000039d6      48837c245000   cmp qword [rsp + 0x50], 0
0x000039dc      0f85ee030000   jne 0x3dd0                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x000039e2      4c896c2450     mov qword [rsp + 0x50], r13
0x000039e7      4983c703       add r15, 3
0x000039eb      31c0           xor eax, eax
0x000039ed      448864247c     mov byte [rsp + 0x7c], r12b
0x000039f2      4531c0         xor r8d, r8d
0x000039f5      4989d5         mov r13, rdx
0x000039f8      bb27000000     mov ebx, 0x27                           ; '''
0x000039fd      e917faffff     jmp 0x3419
0x00003a02      660f1f440000   nop word [rax + rax]
0x00003a08      f644247804     test byte [rsp + 0x78], 4
0x00003a0d      7421           je 0x3a30
0x00003a0f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00003a13      4c39d9         cmp rcx, r11
0x00003a16      7318           jae 0x3a30
0x00003a18      488b442410     mov rax, qword [rsp + 0x10]
0x00003a1d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00003a22      0f848a070000   je 0x41b2
0x00003a28      0f1f84000000.  nop dword [rax + rax]
0x00003a30      31d2           xor edx, edx
0x00003a32      4531e4         xor r12d, r12d
0x00003a35      31c0           xor eax, eax
0x00003a37      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003a3c      e9a7f9ffff     jmp 0x33e8
0x00003a41      0f1f80000000.  nop dword [rax]
0x00003a48      807c240f00     cmp byte [rsp + 0xf], 0
0x00003a4d      0f851d080000   jne 0x4270
0x00003a53      4531e4         xor r12d, r12d
0x00003a56      31c0           xor eax, eax
0x00003a58      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003a5d      e9b7f9ffff     jmp 0x3419                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00003a62      660f1f440000   nop word [rax + rax]
0x00003a68      488d8424a000.  lea rax, [rsp + 0xa0]
0x00003a70      4983fbff       cmp r11, 0xffffffffffffffff
0x00003a74      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00003a80      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00003a85      752d           jne 0x3ab4
0x00003a87      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003a8c      4488442440     mov byte [rsp + 0x40], r8b
0x00003a91      4488542438     mov byte [rsp + 0x38], r10b
0x00003a96      4c894c2430     mov qword [rsp + 0x30], r9
0x00003a9b      e830dfffff     call sym.imp.strlen
0x00003aa0      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00003aa6      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x00003aac      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x00003aaf      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003ab4      488d84249c00.  lea rax, [rsp + 0x9c]
0x00003abc      31c9           xor ecx, ecx
0x00003abe      885c247e       mov byte [rsp + 0x7e], bl
0x00003ac2      448844247d     mov byte [rsp + 0x7d], r8b
0x00003ac7      4889cb         mov rbx, rcx
0x00003aca      4c898c248800.  mov qword [rsp + 0x88], r9
0x00003ad2      4889442438     mov qword [rsp + 0x38], rax
0x00003ad7      448854247f     mov byte [rsp + 0x7f], r10b
0x00003adc      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00003ae4      4c89742440     mov qword [rsp + 0x40], r14
0x00003ae9      4c896c2470     mov qword [rsp + 0x70], r13
0x00003aee      4c895c2430     mov qword [rsp + 0x30], r11
0x00003af3      488b442410     mov rax, qword [rsp + 0x10]
0x00003af8      4c8d741d00     lea r14, [rbp + rbx]
0x00003afd      488b542430     mov rdx, qword [rsp + 0x30]
0x00003b02      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00003b07      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00003b0c      4e8d2c30       lea r13, [rax + r14]
0x00003b10      4c29f2         sub rdx, r14
0x00003b13      4c89ee         mov rsi, r13
0x00003b16      e825240000     call sym.rpl_mbrtowc
0x00003b1b      4885c0         test rax, rax
0x00003b1e      4989c7         mov r15, rax
0x00003b21      744e           je 0x3b71
0x00003b23      4883f8ff       cmp rax, 0xffffffffffffffff
0x00003b27      0f8418060000   je 0x4145
0x00003b2d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00003b31      0f849a050000   je 0x40d1
0x00003b37      837c240802     cmp dword [rsp + 8], 2
0x00003b3c      0f94c0         sete al
0x00003b3f      2244240f       and al, byte [rsp + 0xf]
0x00003b43      0f8597010000   jne 0x3ce0
0x00003b49      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00003b50      e8fbe0ffff     call sym.imp.iswprint
0x00003b55      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00003b5a      85c0           test eax, eax
0x00003b5c      b800000000     mov eax, 0
0x00003b61      440f44e0       cmove r12d, eax
0x00003b65      4c01fb         add rbx, r15
0x00003b68      e8d3e0ffff     call sym.imp.mbsinit
0x00003b6d      85c0           test eax, eax
0x00003b6f      7482           je 0x3af3
0x00003b71      4489e2         mov edx, r12d
0x00003b74      4889df         mov rdi, rbx
0x00003b77      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003b7d      83f201         xor edx, 1
0x00003b80      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003b85      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00003b8b      2254240d       and dl, byte [rsp + 0xd]
0x00003b8f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003b97      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003b9c      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003ba1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003ba6      4883ff01       cmp rdi, 1
0x00003baa      0f86fb050000   jbe 0x41ab
0x00003bb0      4889f9         mov rcx, rdi
0x00003bb3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00003bb5      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x00003bbb      4801e9         add rcx, rbp
0x00003bbe      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003bc3      e9b6000000     jmp 0x3c7e
0x00003bc8      0f1f84000000.  nop dword [rax + rax]
0x00003bd0      837c240802     cmp dword [rsp + 8], 2
0x00003bd5      0f94c0         sete al
0x00003bd8      4584c9         test r9b, r9b
0x00003bdb      0f85af040000   jne 0x4090
0x00003be1      4489c6         mov esi, r8d
0x00003be4      83f601         xor esi, 1
0x00003be7      4020f0         and al, sil
0x00003bea      742f           je 0x3c1b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x00003bec      4d39fd         cmp r13, r15
0x00003bef      7605           jbe 0x3bf6
0x00003bf1      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003bf6      498d7701       lea rsi, [r15 + 1]
0x00003bfa      4939f5         cmp r13, rsi
0x00003bfd      7606           jbe 0x3c05                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x00003bff      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00003c05      498d7702       lea rsi, [r15 + 2]
0x00003c09      4939f5         cmp r13, rsi
0x00003c0c      7606           jbe 0x3c14
0x00003c0e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003c14      4983c703       add r15, 3
0x00003c18      4189c0         mov r8d, eax
0x00003c1b      4d39fd         cmp r13, r15
0x00003c1e      7605           jbe 0x3c25
0x00003c20      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003c25      498d4701       lea rax, [r15 + 1]
0x00003c29      4939c5         cmp r13, rax
0x00003c2c      760d           jbe 0x3c3b
0x00003c2e      89d8           mov eax, ebx
0x00003c30      c0e806         shr al, 6
0x00003c33      83c030         add eax, 0x30
0x00003c36      4388443e01     mov byte [r14 + r15 + 1], al
0x00003c3b      498d4702       lea rax, [r15 + 2]
0x00003c3f      4939c5         cmp r13, rax
0x00003c42      7610           jbe 0x3c54
0x00003c44      89d8           mov eax, ebx
0x00003c46      c0e803         shr al, 3
0x00003c49      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x00003c4c      83c030         add eax, 0x30
0x00003c4f      4388443e02     mov byte [r14 + r15 + 2], al
0x00003c54      83e307         and ebx, 7
0x00003c57      4883c501       add rbp, 1
0x00003c5b      4983c703       add r15, 3
0x00003c5f      83c330         add ebx, 0x30
0x00003c62      4839cd         cmp rbp, rcx
0x00003c65      0f83e5f7ffff   jae 0x3450
0x00003c6b      89d6           mov esi, edx
0x00003c6d      4d39fd         cmp r13, r15
0x00003c70      7604           jbe 0x3c76
0x00003c72      43881c3e       mov byte [r14 + r15], bl
0x00003c76      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00003c7a      4983c701       add r15, 1
0x00003c7e      84d2           test dl, dl
0x00003c80      0f854affffff   jne 0x3bd0
0x00003c86      89f0           mov eax, esi
0x00003c88      83f001         xor eax, 1
0x00003c8b      4421c0         and eax, r8d
0x00003c8e      4584d2         test r10b, r10b
0x00003c91      740e           je 0x3ca1
0x00003c93      4d39fd         cmp r13, r15
0x00003c96      7605           jbe 0x3c9d
0x00003c98      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003c9d      4983c701       add r15, 1
0x00003ca1      4883c501       add rbp, 1
0x00003ca5      4839cd         cmp rbp, rcx
0x00003ca8      0f837ef7ffff   jae 0x342c
0x00003cae      84c0           test al, al
0x00003cb0      0f84f8030000   je 0x40ae
0x00003cb6      4d39fd         cmp r13, r15
0x00003cb9      7605           jbe 0x3cc0
0x00003cbb      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003cc0      498d4701       lea rax, [r15 + 1]
0x00003cc4      4939c5         cmp r13, rax
0x00003cc7      7606           jbe 0x3ccf
0x00003cc9      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003ccf      4983c702       add r15, 2
0x00003cd3      4531d2         xor r10d, r10d
0x00003cd6      4531c0         xor r8d, r8d
0x00003cd9      eb92           jmp 0x3c6d
0x00003cdb      0f1f440000     nop dword [rax + rax]
0x00003ce0      4983ff01       cmp r15, 1
0x00003ce4      0f845ffeffff   je 0x3b49
0x00003cea      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003cef      4a8d0c3f       lea rcx, [rdi + r15]
0x00003cf3      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00003cf8      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00003cfc      eb0f           jmp 0x3d0d
0x00003cfe      6690           nop
0x00003d00      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00003d04      4939d0         cmp r8, rdx
0x00003d07      0f843cfeffff   je 0x3b49
0x00003d0d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00003d10      83e95b         sub ecx, 0x5b
0x00003d13      80f921         cmp cl, 0x21
0x00003d16      77e8           ja 0x3d00                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00003d18      be01000000     mov esi, 1
0x00003d1d      48d3e6         shl rsi, cl
0x00003d20      4889f1         mov rcx, rsi
0x00003d23      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x00003d2d      4885f1         test rcx, rsi
0x00003d30      74ce           je 0x3d00
0x00003d32      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003d37      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003d3c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00003d41      c74424080200.  mov dword [rsp + 8], 2
0x00003d49      807c240d00     cmp byte [rsp + 0xd], 0
0x00003d4e      7410           je 0x3d60
0x00003d50      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00003d52      b804000000     mov eax, 4
0x00003d57      0f44442408     cmove eax, dword [rsp + 8]
0x00003d5c      89442408       mov dword [rsp + 8], eax
0x00003d60      4883ec08       sub rsp, 8
0x00003d64      4889e9         mov rcx, rbp
0x00003d67      4c89ee         mov rsi, r13
0x00003d6a      ff742468       push qword [rsp + 0x68]
0x00003d6e      ff742478       push qword [rsp + 0x78]
0x00003d72      4c89f7         mov rdi, r14
0x00003d75      6a00           push 0
0x00003d77      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00003d7f      448b442428     mov r8d, dword [rsp + 0x28]
0x00003d84      488b542430     mov rdx, qword [rsp + 0x30]
0x00003d89      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x00003d8d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00003d92      4883c420       add rsp, 0x20
0x00003d96      4989c7         mov r15, rax
0x00003d99      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00003da1      6448331c2528.  xor rbx, qword fs:[0x28]
0x00003daa      4c89f8         mov rax, r15
0x00003dad      0f8500060000   jne 0x43b3
0x00003db3      4881c4b80000.  add rsp, 0xb8
0x00003dba      5b             pop rbx
0x00003dbb      5d             pop rbp
0x00003dbc      415c           pop r12
0x00003dbe      415d           pop r13
0x00003dc0      415e           pop r14
0x00003dc2      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00003dc4      c3             ret
0x00003dc5      0f1f00         nop dword [rax]
0x00003dc8      4c89dd         mov rbp, r11
0x00003dcb      e979ffffff     jmp 0x3d49
0x00003dd0      4d39fd         cmp r13, r15
0x00003dd3      7605           jbe 0x3dda
0x00003dd5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003dda      498d4701       lea rax, [r15 + 1]
0x00003dde      4939c5         cmp r13, rax
0x00003de1      7606           jbe 0x3de9
0x00003de3      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00003de9      498d4702       lea rax, [r15 + 2]
0x00003ded      4939c5         cmp r13, rax
0x00003df0      0f86ec050000   jbe 0x43e2
0x00003df6      4c89ea         mov rdx, r13
0x00003df9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003dff      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003e04      e9d9fbffff     jmp 0x39e2
0x00003e09      4489e0         mov eax, r12d
0x00003e0c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00003e11      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00003e14      e900f6ffff     jmp 0x3419                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00003e19      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003e1f      e9c5f9ffff     jmp 0x37e9
0x00003e24      85db           test ebx, ebx
0x00003e26      0f8527f4ffff   jne 0x3253
0x00003e2c      c644240d01     mov byte [rsp + 0xd], 1
0x00003e31      4d85ed         test r13, r13
0x00003e34      0f8590050000   jne 0x43ca
0x00003e3a      488d05841001.  lea rax, [0x00014ec5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003e41      48c744245000.  mov qword [rsp + 0x50], 0
0x00003e4a      c644240e01     mov byte [rsp + 0xe], 1
0x00003e4f      c644247c00     mov byte [rsp + 0x7c], 0
0x00003e54      4531e4         xor r12d, r12d
0x00003e57      c644240f00     mov byte [rsp + 0xf], 0
0x00003e5c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003e65      4889442448     mov qword [rsp + 0x48], rax
0x00003e6a      41bf01000000   mov r15d, 1
0x00003e70      c74424080200.  mov dword [rsp + 8], 2
0x00003e78      e916f4ffff     jmp 0x3293                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x00003e7d      0f1f00         nop dword [rax]
0x00003e80      85db           test ebx, ebx
0x00003e82      0f85f5030000   jne 0x427d
0x00003e88      4d85ed         test r13, r13
0x00003e8b      0f8425020000   je 0x40b6
0x00003e91      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00003e95      c644240e01     mov byte [rsp + 0xe], 1
0x00003e9a      4531e4         xor r12d, r12d
0x00003e9d      c644247c00     mov byte [rsp + 0x7c], 0
0x00003ea2      48c744245000.  mov qword [rsp + 0x50], 0
0x00003eab      488d05111001.  lea rax, str.l______l                   ; 0x14ec3 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003eb2      c644240f00     mov byte [rsp + 0xf], 0
0x00003eb7      c644240d01     mov byte [rsp + 0xd], 1
0x00003ebc      48c744241801.  mov qword [rsp + 0x18], 1
0x00003ec5      41bf01000000   mov r15d, 1
0x00003ecb      4889442448     mov qword [rsp + 0x48], rax
0x00003ed0      e9bef3ffff     jmp 0x3293
0x00003ed5      488d05e70f01.  lea rax, str.l______l                   ; 0x14ec3 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003edc      c644240e01     mov byte [rsp + 0xe], 1
0x00003ee1      c644247c00     mov byte [rsp + 0x7c], 0
0x00003ee6      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00003ee9      48c744245000.  mov qword [rsp + 0x50], 0
0x00003ef2      c644240f01     mov byte [rsp + 0xf], 1
0x00003ef7      c644240d01     mov byte [rsp + 0xd], 1
0x00003efc      48c744241801.  mov qword [rsp + 0x18], 1
0x00003f05      4531ff         xor r15d, r15d
0x00003f08      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x00003f0d      c74424080500.  mov dword [rsp + 8], 5
0x00003f15      e979f3ffff     jmp 0x3293
0x00003f1a      c644240e01     mov byte [rsp + 0xe], 1
0x00003f1f      c644247c00     mov byte [rsp + 0x7c], 0
0x00003f24      4531e4         xor r12d, r12d
0x00003f27      48c744245000.  mov qword [rsp + 0x50], 0
0x00003f30      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00003f35      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00003f38      c644240d01     mov byte [rsp + 0xd], 1
0x00003f3d      48c744241800.  mov qword [rsp + 0x18], 0
0x00003f46      48c744244800.  mov qword [rsp + 0x48], 0
0x00003f4f      e93ff3ffff     jmp 0x3293
0x00003f54      837c24080a     cmp dword [rsp + 8], 0xa
0x00003f59      7456           je 0x3fb1
0x00003f5b      488d35650f01.  lea rsi, [0x00014ec7]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00003f62      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00003f64      ba05000000     mov edx, 5
0x00003f69      e842daffff     call sym.imp.dcgettext
0x00003f6e      4889c1         mov rcx, rax
0x00003f71      4889442468     mov qword [rsp + 0x68], rax
0x00003f76      488d054a0f01.  lea rax, [0x00014ec7]                   ; "`"
0x00003f7d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00003f80      0f8498030000   je 0x431e
0x00003f86      488d35380f01.  lea rsi, [0x00014ec5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003f8d      31ff           xor edi, edi
0x00003f8f      ba05000000     mov edx, 5
0x00003f94      e817daffff     call sym.imp.dcgettext
0x00003f99      4889c1         mov rcx, rax
0x00003f9c      4889442460     mov qword [rsp + 0x60], rax
0x00003fa1      488d051d0f01.  lea rax, [0x00014ec5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003fa8      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x00003fab      0f8483030000   je 0x4334
0x00003fb1      4531ff         xor r15d, r15d
0x00003fb4      85db           test ebx, ebx
0x00003fb6      0f84c1010000   je 0x417d
0x00003fbc      85db           test ebx, ebx
0x00003fbe      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00003fc3      0f9544240f     setne byte [rsp + 0xf]
0x00003fc8      4531e4         xor r12d, r12d
0x00003fcb      4889df         mov rdi, rbx
0x00003fce      e8fdd9ffff     call sym.imp.strlen
0x00003fd3      48895c2448     mov qword [rsp + 0x48], rbx
0x00003fd8      4889442418     mov qword [rsp + 0x18], rax
0x00003fdd      c644240e01     mov byte [rsp + 0xe], 1
0x00003fe2      c644247c00     mov byte [rsp + 0x7c], 0
0x00003fe7      48c744245000.  mov qword [rsp + 0x50], 0
0x00003ff0      c644240d01     mov byte [rsp + 0xd], 1
0x00003ff5      e999f2ffff     jmp 0x3293
0x00003ffa      c644240e01     mov byte [rsp + 0xe], 1
0x00003fff      c644247c00     mov byte [rsp + 0x7c], 0
0x00004004      4531e4         xor r12d, r12d
0x00004007      48c744245000.  mov qword [rsp + 0x50], 0
0x00004010      c644240f00     mov byte [rsp + 0xf], 0
0x00004015      4531ff         xor r15d, r15d
0x00004018      c644240d00     mov byte [rsp + 0xd], 0
0x0000401d      48c744241800.  mov qword [rsp + 0x18], 0
0x00004026      48c744244800.  mov qword [rsp + 0x48], 0
0x0000402f      e95ff2ffff     jmp 0x3293
0x00004034      c644240e01     mov byte [rsp + 0xe], 1
0x00004039      c644247c00     mov byte [rsp + 0x7c], 0
0x0000403e      4531e4         xor r12d, r12d
0x00004041      48c744245000.  mov qword [rsp + 0x50], 0
0x0000404a      c644240f01     mov byte [rsp + 0xf], 1
0x0000404f      c644240d01     mov byte [rsp + 0xd], 1
0x00004054      e91af2ffff     jmp 0x3273
0x00004059      4d39fd         cmp r13, r15
0x0000405c      7605           jbe 0x4063
0x0000405e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00004063      488d4102       lea rax, [rcx + 2]
0x00004067      4939c5         cmp r13, rax
0x0000406a      7606           jbe 0x4072
0x0000406c      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00004072      4489e0         mov eax, r12d
0x00004075      4c8d7903       lea r15, [rcx + 3]
0x00004079      4531e4         xor r12d, r12d
0x0000407c      bb30000000     mov ebx, 0x30                           ; '0'
0x00004081      e962f3ffff     jmp 0x33e8
0x00004086      662e0f1f8400.  nop word cs:[rax + rax]
0x00004090      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00004095      4c89dd         mov rbp, r11
0x00004098      885c240d       mov byte [rsp + 0xd], bl
0x0000409c      e9a8fcffff     jmp 0x3d49
0x000040a1      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000040a6      4531e4         xor r12d, r12d
0x000040a9      e902fbffff     jmp 0x3bb0
0x000040ae      4531d2         xor r10d, r10d
0x000040b1      e9b7fbffff     jmp 0x3c6d
0x000040b6      48c744245000.  mov qword [rsp + 0x50], 0
0x000040bf      c644240e01     mov byte [rsp + 0xe], 1
0x000040c4      4531e4         xor r12d, r12d
0x000040c7      c644247c00     mov byte [rsp + 0x7c], 0
0x000040cc      e9dafdffff     jmp 0x3eab
0x000040d1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000040d6      4c89f6         mov rsi, r14
0x000040d9      4c89e9         mov rcx, r13
0x000040dc      4889d8         mov rax, rbx
0x000040df      4889df         mov rdi, rbx
0x000040e2      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000040e8      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000040ed      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x000040f5      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x000040f8      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000040fe      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004106      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000410b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00004110      7326           jae 0x4138
0x00004112      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00004115      7510           jne 0x4127
0x00004117      eb1f           jmp 0x4138
0x00004119      0f1f80000000.  nop dword [rax]
0x00004120      41803c0100     cmp byte [r9 + rax], 0
0x00004125      740e           je 0x4135
0x00004127      4883c001       add rax, 1
0x0000412b      488d540500     lea rdx, [rbp + rax]
0x00004130      4939d3         cmp r11, rdx
0x00004133      77eb           ja 0x4120
0x00004135      4889c7         mov rdi, rax
0x00004138      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000413d      4531e4         xor r12d, r12d
0x00004140      e961faffff     jmp 0x3ba6
0x00004145      4889df         mov rdi, rbx
0x00004148      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000414e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00004153      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00004159      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004161      4531e4         xor r12d, r12d
0x00004164      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004169      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000416e      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00004173      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00004178      e929faffff     jmp 0x3ba6
0x0000417d      488b542468     mov rdx, qword [rsp + 0x68]
0x00004182      0fb602         movzx eax, byte [rdx]
0x00004185      84c0           test al, al
0x00004187      0f842ffeffff   je 0x3fbc
0x0000418d      0f1f00         nop dword [rax]
0x00004190      4d39fd         cmp r13, r15
0x00004193      7604           jbe 0x4199
0x00004195      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00004199      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x0000419d      420fb6043a     movzx eax, byte [rdx + r15]
0x000041a2      84c0           test al, al
0x000041a4      75ea           jne 0x4190
0x000041a6      e911feffff     jmp 0x3fbc
0x000041ab      89d0           mov eax, edx
0x000041ad      e955f5ffff     jmp 0x3707
0x000041b2      0fb61c08       movzx ebx, byte [rax + rcx]
0x000041b6      80fb3e         cmp bl, 0x3e
0x000041b9      0f8771f8ffff   ja 0x3a30
0x000041bf      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x000041c9      480fa3d8       bt rax, rbx
0x000041cd      0f835df8ffff   jae 0x3a30
0x000041d3      807c240f00     cmp byte [rsp + 0xf], 0
0x000041d8      0f85e4010000   jne 0x43c2                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x000041de      4d39fd         cmp r13, r15
0x000041e1      7605           jbe 0x41e8
0x000041e3      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x000041e8      498d4701       lea rax, [r15 + 1]
0x000041ec      4939c5         cmp r13, rax
0x000041ef      7606           jbe 0x41f7
0x000041f1      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x000041f7      498d4702       lea rax, [r15 + 2]
0x000041fb      4939c5         cmp r13, rax
0x000041fe      7606           jbe 0x4206
0x00004200      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00004206      498d4703       lea rax, [r15 + 3]
0x0000420a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x0000420d      7606           jbe 0x4215
0x0000420f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00004215      4983c704       add r15, 4
0x00004219      31d2           xor edx, edx
0x0000421b      4531e4         xor r12d, r12d
0x0000421e      31c0           xor eax, eax
0x00004220      4889cd         mov rbp, rcx
0x00004223      e9c0f1ffff     jmp 0x33e8
0x00004228      85db           test ebx, ebx
0x0000422a      0f8488010000   je 0x43b8
0x00004230      488d058e0c01.  lea rax, [0x00014ec5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004237      c644240e01     mov byte [rsp + 0xe], 1
0x0000423c      c644247c00     mov byte [rsp + 0x7c], 0
0x00004241      4531e4         xor r12d, r12d
0x00004244      48c744245000.  mov qword [rsp + 0x50], 0
0x0000424d      c644240f01     mov byte [rsp + 0xf], 1
0x00004252      c644240d00     mov byte [rsp + 0xd], 0
0x00004257      48c744241801.  mov qword [rsp + 0x18], 1
0x00004260      4531ff         xor r15d, r15d
0x00004263      4889442448     mov qword [rsp + 0x48], rax
0x00004268      e926f0ffff     jmp 0x3293
0x0000426d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00004270      4c89dd         mov rbp, r11
0x00004273      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00004278      e9ccfaffff     jmp 0x3d49
0x0000427d      488d053f0c01.  lea rax, str.l______l                   ; 0x14ec3 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004284      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00004289      c644247c00     mov byte [rsp + 0x7c], 0
0x0000428e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00004291      48c744245000.  mov qword [rsp + 0x50], 0
0x0000429a      c644240f01     mov byte [rsp + 0xf], 1
0x0000429f      c644240d01     mov byte [rsp + 0xd], 1
0x000042a4      48c744241801.  mov qword [rsp + 0x18], 1
0x000042ad      4531ff         xor r15d, r15d
0x000042b0      4889442448     mov qword [rsp + 0x48], rax
0x000042b5      e9d9efffff     jmp 0x3293
0x000042ba      89d0           mov eax, edx
0x000042bc      488b5c2448     mov rbx, qword [rsp + 0x48]
0x000042c1      4885db         test rbx, rbx
0x000042c4      742c           je 0x42f2
0x000042c6      84c0           test al, al
0x000042c8      7428           je 0x42f2
0x000042ca      0fb60b         movzx ecx, byte [rbx]
0x000042cd      4889d8         mov rax, rbx
0x000042d0      84c9           test cl, cl
0x000042d2      741e           je 0x42f2
0x000042d4      4c89fa         mov rdx, r15
0x000042d7      4c29f8         sub rax, r15
0x000042da      4939d5         cmp r13, rdx
0x000042dd      7604           jbe 0x42e3
0x000042df      41880c16       mov byte [r14 + rdx], cl
0x000042e3      4883c201       add rdx, 1
0x000042e7      0fb60c10       movzx ecx, byte [rax + rdx]
0x000042eb      84c9           test cl, cl
0x000042ed      75eb           jne 0x42da
0x000042ef      4989d7         mov r15, rdx
0x000042f2      4d39fd         cmp r13, r15
0x000042f5      0f869efaffff   jbe 0x3d99
0x000042fb      43c6043e00     mov byte [r14 + r15], 0
0x00004300      e994faffff     jmp 0x3d99
0x00004305      837c240802     cmp dword [rsp + 8], 2
0x0000430a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000430f      4c89dd         mov rbp, r11
0x00004312      0f94c0         sete al
0x00004315      885c240d       mov byte [rsp + 0xd], bl
0x00004319      e92bfaffff     jmp 0x3d49
0x0000431e      8b742408       mov esi, dword [rsp + 8]
0x00004322      4889cf         mov rdi, rcx
0x00004325      e8a6edffff     call sym.gettext_quote.part.1
0x0000432a      4889442468     mov qword [rsp + 0x68], rax
0x0000432f      e952fcffff     jmp 0x3f86
0x00004334      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00004338      4889cf         mov rdi, rcx
0x0000433b      e890edffff     call sym.gettext_quote.part.1
0x00004340      4889442460     mov qword [rsp + 0x60], rax
0x00004345      e967fcffff     jmp 0x3fb1
0x0000434a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000434f      4c89dd         mov rbp, r11
0x00004352      89d0           mov eax, edx
0x00004354      885c240d       mov byte [rsp + 0xd], bl
0x00004358      e9ecf9ffff     jmp 0x3d49
0x0000435d      4883ec08       sub rsp, 8
0x00004361      41b805000000   mov r8d, 5
0x00004367      4c89d9         mov rcx, r11
0x0000436a      ff742468       push qword [rsp + 0x68]
0x0000436e      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00004372      4c89f7         mov rdi, r14
0x00004375      ff742438       push qword [rsp + 0x38]
0x00004379      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00004381      488b542430     mov rdx, qword [rsp + 0x30]
0x00004386      488b742470     mov rsi, qword [rsp + 0x70]
0x0000438b      e830eeffff     call sym.quotearg_buffer_restyled
0x00004390      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00004394      4989c7         mov r15, rax
0x00004397      e9fdf9ffff     jmp 0x3d99
0x0000439c      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x000043a1      e916ffffff     jmp 0x42bc
0x000043a6      c74424080200.  mov dword [rsp + 8], 2
0x000043ae      e996f9ffff     jmp 0x3d49
0x000043b3      e828d6ffff     call sym.imp.__stack_chk_fail
0x000043b8      c644240d00     mov byte [rsp + 0xd], 0
0x000043bd      e96ffaffff     jmp 0x3e31
0x000043c2      4c89dd         mov rbp, r11
0x000043c5      e996f9ffff     jmp 0x3d60
0x000043ca      c644240e01     mov byte [rsp + 0xe], 1
0x000043cf      31c0           xor eax, eax
0x000043d1      4531e4         xor r12d, r12d
0x000043d4      48c744245000.  mov qword [rsp + 0x50], 0
0x000043dd      e9a2f5ffff     jmp 0x3984
0x000043e2      4c89ea         mov rdx, r13
0x000043e5      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000043ea      e9f3f5ffff     jmp 0x39e2
0x000043ef      e8ecd4ffff     call sym.imp.abort
0x000043f4      6690           nop
0x000043f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00004400      4157           push r15
0x00004402      4156           push r14
0x00004404      4c63ff         movsxd r15, edi
0x00004407      4155           push r13
0x00004409      4154           push r12
0x0000440b      4989d6         mov r14, rdx
0x0000440e      55             push rbp
0x0000440f      53             push rbx
0x00004410      4889cd         mov rbp, rcx
0x00004413      4883ec28       sub rsp, 0x28
0x00004417      4889742408     mov qword [rsp + 8], rsi
0x0000441c      e8cfd4ffff     call sym.imp.__errno_location
0x00004421      4989c5         mov r13, rax
0x00004424      8b00           mov eax, dword [rax]
0x00004426      4585ff         test r15d, r15d
0x00004429      488b1d904c21.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x2190c0:8]=0x2190d0 obj.slotvec0
0x00004430      89442418       mov dword [rsp + 0x18], eax
0x00004434      0f8867010000   js 0x45a1
0x0000443a      44393d774c21.  cmp dword [obj.nslots], r15d            ; [0x2190b8:4]=1
0x00004441      7f62           jg 0x44a5
0x00004443      4181ffffffff.  cmp r15d, 0x7fffffff
0x0000444a      0f8456010000   je 0x45a6
0x00004450      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004454      488d05754c21.  lea rax, obj.slotvec0                   ; 0x2190d0
0x0000445b      4963f4         movsxd rsi, r12d
0x0000445e      48c1e604       shl rsi, 4
0x00004462      4839c3         cmp rbx, rax
0x00004465      0f8415010000   je 0x4580
0x0000446b      4889df         mov rdi, rbx
0x0000446e      e86d0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00004473      4889c3         mov rbx, rax
0x00004476      488905434c21.  mov qword [obj.slotvec], rax            ; [0x2190c0:8]=0x2190d0 obj.slotvec0
0x0000447d      48633d344c21.  movsxd rdi, dword [obj.nslots]          ; [0x2190b8:4]=1
0x00004484      4489e2         mov edx, r12d
0x00004487      31f6           xor esi, esi
0x00004489      29fa           sub edx, edi
0x0000448b      48c1e704       shl rdi, 4
0x0000448f      4863d2         movsxd rdx, edx
0x00004492      4801df         add rdi, rbx
0x00004495      48c1e204       shl rdx, 4
0x00004499      e8c2d5ffff     call sym.imp.memset
0x0000449e      448925134c21.  mov dword [obj.nslots], r12d            ; [0x2190b8:4]=1
0x000044a5      8b4504         mov eax, dword [rbp + 4]
0x000044a8      49c1e704       shl r15, 4
0x000044ac      4883ec08       sub rsp, 8
0x000044b0      4c01fb         add rbx, r15
0x000044b3      4c8d7d08       lea r15, [rbp + 8]
0x000044b7      448b4500       mov r8d, dword [rbp]
0x000044bb      4c8b1b         mov r11, qword [rbx]
0x000044be      4c8b6308       mov r12, qword [rbx + 8]
0x000044c2      4c89f1         mov rcx, r14
0x000044c5      83c801         or eax, 1
0x000044c8      89442424       mov dword [rsp + 0x24], eax
0x000044cc      ff7530         push qword [rbp + 0x30]
0x000044cf      4189c1         mov r9d, eax
0x000044d2      ff7528         push qword [rbp + 0x28]
0x000044d5      4157           push r15
0x000044d7      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x000044da      488b542428     mov rdx, qword [rsp + 0x28]
0x000044df      4c89e7         mov rdi, r12
0x000044e2      4c895c2430     mov qword [rsp + 0x30], r11
0x000044e7      e8d4ecffff     call sym.quotearg_buffer_restyled
0x000044ec      4883c420       add rsp, 0x20
0x000044f0      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x000044f5      4939c3         cmp r11, rax
0x000044f8      7767           ja 0x4561
0x000044fa      488d7001       lea rsi, [rax + 1]
0x000044fe      488d059b5021.  lea rax, obj.slot0                      ; 0x2195a0
0x00004505      4939c4         cmp r12, rax
0x00004508      488933         mov qword [rbx], rsi
0x0000450b      7412           je 0x451f
0x0000450d      4c89e7         mov rdi, r12
0x00004510      4889742410     mov qword [rsp + 0x10], rsi
0x00004515      e8b6d3ffff     call sym.imp.free
0x0000451a      488b742410     mov rsi, qword [rsp + 0x10]
0x0000451f      4889f7         mov rdi, rsi
0x00004522      4889742410     mov qword [rsp + 0x10], rsi
0x00004527      e8540e0000     call sym.xmalloc
0x0000452c      4883ec08       sub rsp, 8
0x00004530      48894308       mov qword [rbx + 8], rax
0x00004534      448b4500       mov r8d, dword [rbp]
0x00004538      ff7530         push qword [rbp + 0x30]
0x0000453b      ff7528         push qword [rbp + 0x28]
0x0000453e      4c89f1         mov rcx, r14
0x00004541      4157           push r15
0x00004543      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00004548      4889c7         mov rdi, rax
0x0000454b      488b542428     mov rdx, qword [rsp + 0x28]
0x00004550      488b742430     mov rsi, qword [rsp + 0x30]
0x00004555      4989c4         mov r12, rax
0x00004558      e863ecffff     call sym.quotearg_buffer_restyled
0x0000455d      4883c420       add rsp, 0x20
0x00004561      8b442418       mov eax, dword [rsp + 0x18]
0x00004565      41894500       mov dword [r13], eax
0x00004569      4883c428       add rsp, 0x28
0x0000456d      4c89e0         mov rax, r12
0x00004570      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00004571      5d             pop rbp
0x00004572      415c           pop r12
0x00004574      415d           pop r13
0x00004576      415e           pop r14
0x00004578      415f           pop r15
0x0000457a      c3             ret
0x0000457b      0f1f440000     nop dword [rax + rax]
0x00004580      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00004582      e8590e0000     call sym.xrealloc
0x00004587      660f6f05414b.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x0000458f      4889c3         mov rbx, rax
0x00004592      488905274b21.  mov qword [obj.slotvec], rax            ; [0x2190c0:8]=0x2190d0 obj.slotvec0
0x00004599      0f1100         movups xmmword [rax], xmm0
0x0000459c      e9dcfeffff     jmp 0x447d
0x000045a1      e83ad3ffff     call sym.imp.abort
0x000045a6      e825100000     call sym.xalloc_die
0x000045ab      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x000045b0      4154           push r12
0x000045b2      55             push rbp
0x000045b3      53             push rbx
0x000045b4      4889fb         mov rbx, rdi
0x000045b7      e834d3ffff     call sym.imp.__errno_location
0x000045bc      448b20         mov r12d, dword [rax]
0x000045bf      4889c5         mov rbp, rax
0x000045c2      488d05d75021.  lea rax, obj.default_quoting_options    ; 0x2196a0
0x000045c9      4885db         test rbx, rbx
0x000045cc      be38000000     mov esi, 0x38                           ; '8'
0x000045d1      480f44d8       cmove rbx, rax
0x000045d5      4889df         mov rdi, rbx
0x000045d8      e8a30f0000     call sym.xmemdup
0x000045dd      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x000045e1      5b             pop rbx
0x000045e2      5d             pop rbp
0x000045e3      415c           pop r12
0x000045e5      c3             ret
0x000045e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x000045f0      488d05a95021.  lea rax, obj.default_quoting_options    ; 0x2196a0
0x000045f7      4885ff         test rdi, rdi
0x000045fa      480f44f8       cmove rdi, rax
0x000045fe      8b07           mov eax, dword [rdi]
0x00004600      c3             ret
0x00004601      0f1f440000     nop dword [rax + rax]
0x00004606      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00004610      488d05895021.  lea rax, obj.default_quoting_options    ; 0x2196a0
0x00004617      4885ff         test rdi, rdi
0x0000461a      480f44f8       cmove rdi, rax
0x0000461e      8937           mov dword [rdi], esi
0x00004620      c3             ret
0x00004621      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00004626      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00004630      488d05695021.  lea rax, obj.default_quoting_options    ; 0x2196a0
0x00004637      4885ff         test rdi, rdi
0x0000463a      89f1           mov ecx, esi
0x0000463c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00004640      89f0           mov eax, esi
0x00004642      83e11f         and ecx, 0x1f
0x00004645      c0e805         shr al, 5
0x00004648      0fb6c0         movzx eax, al
0x0000464b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00004650      8b37           mov esi, dword [rdi]
0x00004652      89f0           mov eax, esi
0x00004654      d3e8           shr eax, cl
0x00004656      31c2           xor edx, eax
0x00004658      83e001         and eax, 1
0x0000465b      83e201         and edx, 1
0x0000465e      d3e2           shl edx, cl
0x00004660      31f2           xor edx, esi
0x00004662      8917           mov dword [rdi], edx
0x00004664      c3             ret
0x00004665      90             nop
0x00004666      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00004670      488d05295021.  lea rax, obj.default_quoting_options    ; 0x2196a0
0x00004677      4885ff         test rdi, rdi
0x0000467a      480f44f8       cmove rdi, rax
0x0000467e      8b4704         mov eax, dword [rdi + 4]
0x00004681      897704         mov dword [rdi + 4], esi
0x00004684      c3             ret
0x00004685      90             nop
0x00004686      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00004690      488d05095021.  lea rax, obj.default_quoting_options    ; 0x2196a0
0x00004697      4885ff         test rdi, rdi
0x0000469a      480f44f8       cmove rdi, rax
0x0000469e      4885f6         test rsi, rsi
0x000046a1      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x000046a7      740e           je 0x46b7
0x000046a9      4885d2         test rdx, rdx
0x000046ac      7409           je 0x46b7
0x000046ae      48897728       mov qword [rdi + 0x28], rsi
0x000046b2      48895730       mov qword [rdi + 0x30], rdx
0x000046b6      c3             ret
0x000046b7      4883ec08       sub rsp, 8
0x000046bb      e820d2ffff     call sym.imp.abort
;-- quotearg_buffer:
0x000046c0      4157           push r15
0x000046c2      4156           push r14
0x000046c4      488d05d54f21.  lea rax, obj.default_quoting_options    ; 0x2196a0
0x000046cb      4155           push r13
0x000046cd      4154           push r12
0x000046cf      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x000046d2      55             push rbp
0x000046d3      53             push rbx
0x000046d4      4c89c3         mov rbx, r8
0x000046d7      4989f6         mov r14, rsi
0x000046da      4989d7         mov r15, rdx
0x000046dd      4883ec18       sub rsp, 0x18
0x000046e1      4d85c0         test r8, r8
0x000046e4      480f44d8       cmove rbx, rax
0x000046e8      48894c2408     mov qword [rsp + 8], rcx
0x000046ed      e8fed1ffff     call sym.imp.__errno_location
0x000046f2      448b20         mov r12d, dword [rax]
0x000046f5      4889c5         mov rbp, rax
0x000046f8      488d4308       lea rax, [rbx + 8]
0x000046fc      4883ec08       sub rsp, 8
0x00004700      448b4b04       mov r9d, dword [rbx + 4]
0x00004704      ff7330         push qword [rbx + 0x30]
0x00004707      448b03         mov r8d, dword [rbx]
0x0000470a      ff7328         push qword [rbx + 0x28]
0x0000470d      4c89fa         mov rdx, r15
0x00004710      50             push rax
0x00004711      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00004716      4c89f6         mov rsi, r14
0x00004719      4c89ef         mov rdi, r13
0x0000471c      e89feaffff     call sym.quotearg_buffer_restyled
0x00004721      44896500       mov dword [rbp], r12d
0x00004725      4883c438       add rsp, 0x38
0x00004729      5b             pop rbx
0x0000472a      5d             pop rbp
0x0000472b      415c           pop r12
0x0000472d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000472f      415e           pop r14
0x00004731      415f           pop r15
0x00004733      c3             ret
0x00004734      6690           nop
0x00004736      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00004740      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00004742      4156           push r14
0x00004744      488d05554f21.  lea rax, obj.default_quoting_options    ; 0x2196a0
0x0000474b      4155           push r13
0x0000474d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x0000474f      4989d4         mov r12, rdx
0x00004752      55             push rbp
0x00004753      53             push rbx
0x00004754      4889cb         mov rbx, rcx
0x00004757      4989fe         mov r14, rdi
0x0000475a      4989f7         mov r15, rsi
0x0000475d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00004761      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00004764      480f44d8       cmove rbx, rax
0x00004768      31ed           xor ebp, ebp
0x0000476a      e881d1ffff     call sym.imp.__errno_location
0x0000476f      4d85e4         test r12, r12
0x00004772      4989c5         mov r13, rax
0x00004775      8b00           mov eax, dword [rax]
0x00004777      400f94c5       sete bpl
0x0000477b      0b6b04         or ebp, dword [rbx + 4]
0x0000477e      4c8d5308       lea r10, [rbx + 8]
0x00004782      4883ec08       sub rsp, 8
0x00004786      448b03         mov r8d, dword [rbx]
0x00004789      4c89f9         mov rcx, r15
0x0000478c      89442414       mov dword [rsp + 0x14], eax
0x00004790      ff7330         push qword [rbx + 0x30]
0x00004793      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00004796      ff7328         push qword [rbx + 0x28]
0x00004799      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x0000479b      31f6           xor esi, esi
0x0000479d      4189e9         mov r9d, ebp
0x000047a0      31ff           xor edi, edi
0x000047a2      4c89542440     mov qword [rsp + 0x40], r10
0x000047a7      e814eaffff     call sym.quotearg_buffer_restyled
0x000047ac      488d7001       lea rsi, [rax + 1]
0x000047b0      4889442448     mov qword [rsp + 0x48], rax
0x000047b5      4883c420       add rsp, 0x20
0x000047b9      4889f7         mov rdi, rsi
0x000047bc      4889742418     mov qword [rsp + 0x18], rsi
0x000047c1      e8ba0b0000     call sym.xmalloc
0x000047c6      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x000047cb      4883ec08       sub rsp, 8
0x000047cf      ff7330         push qword [rbx + 0x30]
0x000047d2      ff7328         push qword [rbx + 0x28]
0x000047d5      4c8b542438     mov r10, qword [rsp + 0x38]
0x000047da      4189e9         mov r9d, ebp
0x000047dd      448b03         mov r8d, dword [rbx]
0x000047e0      4c89f9         mov rcx, r15
0x000047e3      4c89f2         mov rdx, r14
0x000047e6      4889c7         mov rdi, rax
0x000047e9      4152           push r10
0x000047eb      488b742438     mov rsi, qword [rsp + 0x38]
0x000047f0      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x000047f5      8b44242c       mov eax, dword [rsp + 0x2c]
0x000047f9      4883c420       add rsp, 0x20
0x000047fd      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00004800      41894500       mov dword [r13], eax
0x00004804      7409           je 0x480f
0x00004806      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000480b      4d891c24       mov qword [r12], r11
0x0000480f      488b442410     mov rax, qword [rsp + 0x10]
0x00004814      4883c438       add rsp, 0x38
0x00004818      5b             pop rbx
0x00004819      5d             pop rbp
0x0000481a      415c           pop r12
0x0000481c      415d           pop r13
0x0000481e      415e           pop r14
0x00004820      415f           pop r15
0x00004822      c3             ret
0x00004823      0f1f00         nop dword [rax]
0x00004826      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00004830      4889d1         mov rcx, rdx
0x00004833      31d2           xor edx, edx
0x00004835      e906ffffff     jmp sym.quotearg_alloc_mem
0x0000483a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00004840      8b0572482100   mov eax, dword [obj.nslots]             ; [0x2190b8:4]=1
0x00004846      4154           push r12
0x00004848      4c8b25714821.  mov r12, qword [obj.slotvec]            ; [0x2190c0:8]=0x2190d0 obj.slotvec0
0x0000484f      55             push rbp
0x00004850      53             push rbx
0x00004851      83f801         cmp eax, 1
0x00004854      7e2b           jle 0x4881                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00004856      83e802         sub eax, 2
0x00004859      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x0000485e      48c1e004       shl rax, 4
0x00004862      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00004867      660f1f840000.  nop word [rax + rax]
0x00004870      488b3b         mov rdi, qword [rbx]
0x00004873      4883c310       add rbx, 0x10
0x00004877      e854d0ffff     call sym.imp.free
0x0000487c      4839eb         cmp rbx, rbp
0x0000487f      75ef           jne 0x4870
0x00004881      498b7c2408     mov rdi, qword [r12 + 8]
0x00004886      488d1d134d21.  lea rbx, obj.slot0                      ; 0x2195a0
0x0000488d      4839df         cmp rdi, rbx
0x00004890      7417           je 0x48a9
0x00004892      e839d0ffff     call sym.imp.free
0x00004897      48c7052e4821.  mov qword [obj.slotvec0], 0x100         ; [0x2190d0:8]=256
0x000048a2      48891d2f4821.  mov qword [0x002190d8], rbx             ; [0x2190d8:8]=0x2195a0 obj.slot0
0x000048a9      488d1d204821.  lea rbx, obj.slotvec0                   ; 0x2190d0
0x000048b0      4939dc         cmp r12, rbx
0x000048b3      740f           je 0x48c4
0x000048b5      4c89e7         mov rdi, r12
0x000048b8      e813d0ffff     call sym.imp.free
0x000048bd      48891dfc4721.  mov qword [obj.slotvec], rbx            ; [0x2190c0:8]=0x2190d0 obj.slotvec0
0x000048c4      5b             pop rbx
0x000048c5      c705e9472100.  mov dword [obj.nslots], 1               ; [0x2190b8:4]=1
0x000048cf      5d             pop rbp
0x000048d0      415c           pop r12
0x000048d2      c3             ret
0x000048d3      0f1f00         nop dword [rax]
0x000048d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x000048e0      488d0db94d21.  lea rcx, obj.default_quoting_options    ; 0x2196a0
0x000048e7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000048ee      e90dfbffff     jmp sym.quotearg_n_options
0x000048f3      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x000048f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00004900      488d0d994d21.  lea rcx, obj.default_quoting_options    ; 0x2196a0
0x00004907      e9f4faffff     jmp sym.quotearg_n_options
0x0000490c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00004910      488d0d894d21.  lea rcx, obj.default_quoting_options    ; 0x2196a0
0x00004917      4889fe         mov rsi, rdi
0x0000491a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004921      31ff           xor edi, edi
0x00004923      e9d8faffff     jmp sym.quotearg_n_options
0x00004928      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00004930      488d0d694d21.  lea rcx, obj.default_quoting_options    ; 0x2196a0
0x00004937      4889f2         mov rdx, rsi
0x0000493a      4889fe         mov rsi, rdi
0x0000493d      31ff           xor edi, edi
0x0000493f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00004944      6690           nop
0x00004946      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00004950      4883ec48       sub rsp, 0x48
0x00004954      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00004957      64488b142528.  mov rdx, qword fs:[0x28]
0x00004960      4889542438     mov qword [rsp + 0x38], rdx
0x00004965      31d2           xor edx, edx
0x00004967      83fe0a         cmp esi, 0xa
0x0000496a      7468           je 0x49d4
0x0000496c      893424         mov dword [rsp], esi
0x0000496f      4889e1         mov rcx, rsp
0x00004972      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004979      4889c6         mov rsi, rax
0x0000497c      48c744240400.  mov qword [rsp + 4], 0
0x00004985      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000498e      48c744241400.  mov qword [rsp + 0x14], 0
0x00004997      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000049a0      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x000049a9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000049b2      c74424340000.  mov dword [rsp + 0x34], 0
0x000049ba      e841faffff     call sym.quotearg_n_options
0x000049bf      488b4c2438     mov rcx, qword [rsp + 0x38]
0x000049c4      6448330c2528.  xor rcx, qword fs:[0x28]
0x000049cd      750a           jne 0x49d9                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x000049cf      4883c448       add rsp, 0x48
0x000049d3      c3             ret
0x000049d4      e807cfffff     call sym.imp.abort
0x000049d9      e802d0ffff     call sym.imp.__stack_chk_fail
0x000049de      6690           nop
;-- quotearg_n_style_mem:
0x000049e0      4883ec48       sub rsp, 0x48
0x000049e4      4889d0         mov rax, rdx
0x000049e7      4889ca         mov rdx, rcx
0x000049ea      64488b0c2528.  mov rcx, qword fs:[0x28]
0x000049f3      48894c2438     mov qword [rsp + 0x38], rcx
0x000049f8      31c9           xor ecx, ecx
0x000049fa      83fe0a         cmp esi, 0xa
0x000049fd      7461           je 0x4a60
0x000049ff      893424         mov dword [rsp], esi
0x00004a02      4889e1         mov rcx, rsp
0x00004a05      4889c6         mov rsi, rax
0x00004a08      48c744240400.  mov qword [rsp + 4], 0
0x00004a11      48c744240c00.  mov qword [rsp + 0xc], 0
0x00004a1a      48c744241400.  mov qword [rsp + 0x14], 0
0x00004a23      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004a2c      48c744242400.  mov qword [rsp + 0x24], 0
0x00004a35      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004a3e      c74424340000.  mov dword [rsp + 0x34], 0
0x00004a46      e8b5f9ffff     call sym.quotearg_n_options
0x00004a4b      488b542438     mov rdx, qword [rsp + 0x38]
0x00004a50      644833142528.  xor rdx, qword fs:[0x28]
0x00004a59      750a           jne 0x4a65
0x00004a5b      4883c448       add rsp, 0x48
0x00004a5f      c3             ret
0x00004a60      e87bceffff     call sym.imp.abort
0x00004a65      e876cfffff     call sym.imp.__stack_chk_fail
0x00004a6a      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00004a70      4889f2         mov rdx, rsi
0x00004a73      89fe           mov esi, edi
0x00004a75      31ff           xor edi, edi
0x00004a77      e9d4feffff     jmp sym.quotearg_n_style
0x00004a7c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00004a80      4889d1         mov rcx, rdx
0x00004a83      4889f2         mov rdx, rsi
0x00004a86      89fe           mov esi, edi
0x00004a88      31ff           xor edi, edi
0x00004a8a      e951ffffff     jmp sym.quotearg_n_style_mem
0x00004a8f      90             nop
;-- quotearg_char_mem:
0x00004a90      4883ec48       sub rsp, 0x48
0x00004a94      89d1           mov ecx, edx
0x00004a96      64488b042528.  mov rax, qword fs:[0x28]
0x00004a9f      4889442438     mov qword [rsp + 0x38], rax
0x00004aa4      31c0           xor eax, eax
0x00004aa6      488b05234c21.  mov rax, qword [0x002196d0]             ; [0x2196d0:8]=0
0x00004aad      4989e0         mov r8, rsp
0x00004ab0      83e11f         and ecx, 0x1f
0x00004ab3      660f6f05e54b.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00004abb      4889442430     mov qword [rsp + 0x30], rax
0x00004ac0      89d0           mov eax, edx
0x00004ac2      0f290424       movaps xmmword [rsp], xmm0
0x00004ac6      c0e805         shr al, 5
0x00004ac9      0fb6c0         movzx eax, al
0x00004acc      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00004ad1      660f6f05d74b.  movdqa xmm0, xmmword [0x002196b0]
0x00004ad9      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00004ade      660f6f05da4b.  movdqa xmm0, xmmword [0x002196c0]
0x00004ae6      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00004aeb      418b11         mov edx, dword [r9]
0x00004aee      89d0           mov eax, edx
0x00004af0      d3e8           shr eax, cl
0x00004af2      f7d0           not eax
0x00004af4      83e001         and eax, 1
0x00004af7      d3e0           shl eax, cl
0x00004af9      4c89c1         mov rcx, r8
0x00004afc      31d0           xor eax, edx
0x00004afe      4889f2         mov rdx, rsi
0x00004b01      4889fe         mov rsi, rdi
0x00004b04      418901         mov dword [r9], eax
0x00004b07      31ff           xor edi, edi
0x00004b09      e8f2f8ffff     call sym.quotearg_n_options
0x00004b0e      488b742438     mov rsi, qword [rsp + 0x38]
0x00004b13      644833342528.  xor rsi, qword fs:[0x28]
0x00004b1c      7505           jne 0x4b23
0x00004b1e      4883c448       add rsp, 0x48
0x00004b22      c3             ret
0x00004b23      e8b8ceffff     call sym.imp.__stack_chk_fail
0x00004b28      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00004b30      400fbed6       movsx edx, sil
0x00004b34      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00004b3b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00004b40      ba3a000000     mov edx, 0x3a                           ; ':'
0x00004b45      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00004b4c      e93fffffff     jmp sym.quotearg_char_mem
0x00004b51      0f1f440000     nop dword [rax + rax]
0x00004b56      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00004b60      ba3a000000     mov edx, 0x3a                           ; ':'
0x00004b65      e926ffffff     jmp sym.quotearg_char_mem
0x00004b6a      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00004b70      4883ec48       sub rsp, 0x48
0x00004b74      4889d0         mov rax, rdx
0x00004b77      64488b142528.  mov rdx, qword fs:[0x28]
0x00004b80      4889542438     mov qword [rsp + 0x38], rdx
0x00004b85      31d2           xor edx, edx
0x00004b87      83fe0a         cmp esi, 0xa
0x00004b8a      7468           je 0x4bf4
0x00004b8c      893424         mov dword [rsp], esi
0x00004b8f      4889e1         mov rcx, rsp
0x00004b92      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004b99      4889c6         mov rsi, rax
0x00004b9c      48c744240400.  mov qword [rsp + 4], 0
0x00004ba5      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x00004bae      48c744241400.  mov qword [rsp + 0x14], 0
0x00004bb7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004bc0      48c744242400.  mov qword [rsp + 0x24], 0
0x00004bc9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004bd2      c74424340000.  mov dword [rsp + 0x34], 0
0x00004bda      e821f8ffff     call sym.quotearg_n_options
0x00004bdf      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004be4      6448330c2528.  xor rcx, qword fs:[0x28]
0x00004bed      750a           jne 0x4bf9
0x00004bef      4883c448       add rsp, 0x48
0x00004bf3      c3             ret
0x00004bf4      e8e7ccffff     call sym.imp.abort
0x00004bf9      e8e2cdffff     call sym.imp.__stack_chk_fail
0x00004bfe      6690           nop
;-- quotearg_n_custom_mem:
0x00004c00      4883ec48       sub rsp, 0x48
0x00004c04      4989c9         mov r9, rcx
0x00004c07      488b0dc24a21.  mov rcx, qword [0x002196d0]             ; [0x2196d0:8]=0
0x00004c0e      660f6f058a4a.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00004c16      64488b042528.  mov rax, qword fs:[0x28]
0x00004c1f      4889442438     mov qword [rsp + 0x38], rax
0x00004c24      31c0           xor eax, eax
0x00004c26      0f290424       movaps xmmword [rsp], xmm0
0x00004c2a      4885f6         test rsi, rsi
0x00004c2d      48894c2430     mov qword [rsp + 0x30], rcx
0x00004c32      c704240a0000.  mov dword [rsp], 0xa
0x00004c39      660f6f056f4a.  movdqa xmm0, xmmword [0x002196b0]
0x00004c41      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00004c46      660f6f05724a.  movdqa xmm0, xmmword [0x002196c0]
0x00004c4e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00004c53      7432           je 0x4c87
0x00004c55      4885d2         test rdx, rdx
0x00004c58      742d           je 0x4c87
0x00004c5a      4889742428     mov qword [rsp + 0x28], rsi
0x00004c5f      4889542430     mov qword [rsp + 0x30], rdx
0x00004c64      4889e1         mov rcx, rsp
0x00004c67      4c89c2         mov rdx, r8
0x00004c6a      4c89ce         mov rsi, r9
0x00004c6d      e88ef7ffff     call sym.quotearg_n_options
0x00004c72      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00004c77      6448333c2528.  xor rdi, qword fs:[0x28]
0x00004c80      750a           jne 0x4c8c
0x00004c82      4883c448       add rsp, 0x48
0x00004c86      c3             ret
0x00004c87      e854ccffff     call sym.imp.abort
0x00004c8c      e84fcdffff     call sym.imp.__stack_chk_fail
0x00004c91      0f1f440000     nop dword [rax + rax]
0x00004c96      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00004ca0      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00004ca7      e954ffffff     jmp sym.quotearg_n_custom_mem
0x00004cac      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00004cb0      4889d1         mov rcx, rdx
0x00004cb3      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00004cba      4889f2         mov rdx, rsi
0x00004cbd      4889fe         mov rsi, rdi
0x00004cc0      31ff           xor edi, edi
0x00004cc2      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00004cc7      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00004cd0      4989c8         mov r8, rcx
0x00004cd3      4889d1         mov rcx, rdx
0x00004cd6      4889f2         mov rdx, rsi
0x00004cd9      4889fe         mov rsi, rdi
0x00004cdc      31ff           xor edi, edi
0x00004cde      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00004ce3      0f1f00         nop dword [rax]
0x00004ce6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00004cf0      488d0d894321.  lea rcx, obj.quote_quoting_options      ; 0x219080
0x00004cf7      e904f7ffff     jmp sym.quotearg_n_options
0x00004cfc      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00004d00      488d0d794321.  lea rcx, obj.quote_quoting_options      ; 0x219080
0x00004d07      4889f2         mov rdx, rsi
0x00004d0a      4889fe         mov rsi, rdi
0x00004d0d      31ff           xor edi, edi
0x00004d0f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00004d14      6690           nop
0x00004d16      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00004d20      488d0d594321.  lea rcx, obj.quote_quoting_options      ; 0x219080
0x00004d27      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004d2e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00004d33      0f1f00         nop dword [rax]
0x00004d36      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00004d40      488d0d394321.  lea rcx, obj.quote_quoting_options      ; 0x219080
0x00004d47      4889fe         mov rsi, rdi
0x00004d4a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004d51      31ff           xor edi, edi
0x00004d53      e9a8f6ffff     jmp sym.quotearg_n_options
0x00004d58      0f1f84000000.  nop dword [rax + rax]
;-- version_etc_arn:
0x00004d60      4157           push r15
0x00004d62      4156           push r14
0x00004d64      4155           push r13
0x00004d66      4154           push r12
0x00004d68      4d89cc         mov r12, r9
0x00004d6b      55             push rbp
0x00004d6c      53             push rbx
0x00004d6d      4889fd         mov rbp, rdi
0x00004d70      4c89c3         mov rbx, r8
0x00004d73      4883ec28       sub rsp, 0x28
0x00004d77      4885f6         test rsi, rsi
0x00004d7a      0f8418010000   je 0x4e98
0x00004d80      4989d0         mov r8, rdx
0x00004d83      488d15fe0501.  lea rdx, [0x00015388]                   ; "%s (%s) %s\n"
0x00004d8a      4989c9         mov r9, rcx
0x00004d8d      31c0           xor eax, eax
0x00004d8f      4889f1         mov rcx, rsi
0x00004d92      be01000000     mov esi, 1
0x00004d97      e894ceffff     call sym.imp.__fprintf_chk
0x00004d9c      488d35f80501.  lea rsi, [0x0001539b]                   ; "(C)"
0x00004da3      31ff           xor edi, edi
0x00004da5      ba05000000     mov edx, 5
0x00004daa      e801ccffff     call sym.imp.dcgettext
0x00004daf      488d150a0901.  lea rdx, obj.version_etc_copyright      ; 0x156c0 ; "Copyright %s %d Free Software Foundation, Inc."
0x00004db6      4889c1         mov rcx, rax
0x00004db9      41b8e3070000   mov r8d, 0x7e3
0x00004dbf      be01000000     mov esi, 1
0x00004dc4      4889ef         mov rdi, rbp
0x00004dc7      31c0           xor eax, eax
0x00004dc9      e862ceffff     call sym.imp.__fprintf_chk
0x00004dce      488d35530601.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x15428 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00004dd5      31ff           xor edi, edi
0x00004dd7      ba05000000     mov edx, 5
0x00004ddc      e8cfcbffff     call sym.imp.dcgettext
0x00004de1      4889ee         mov rsi, rbp
0x00004de4      4889c7         mov rdi, rax
0x00004de7      e8b4ccffff     call sym.imp.fputs_unlocked
0x00004dec      4983fc09       cmp r12, 9
0x00004df0      0f873a030000   ja 0x5130
0x00004df6      488d15870801.  lea rdx, [0x00015684]
0x00004dfd      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00004e01      4801d0         add rax, rdx
0x00004e04      ffe0           jmp rax
0x00004e06      662e0f1f8400.  nop word cs:[rax + rax]
0x00004e10      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004e14      488b4310       mov rax, qword [rbx + 0x10]
0x00004e18      488d35790701.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x15598 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x00004e1f      4c8b4308       mov r8, qword [rbx + 8]
0x00004e23      ba05000000     mov edx, 5
0x00004e28      31ff           xor edi, edi
0x00004e2a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004e2e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004e32      4c894c2410     mov qword [rsp + 0x10], r9
0x00004e37      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004e3b      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004e3f      48890424       mov qword [rsp], rax
0x00004e43      4c89442408     mov qword [rsp + 8], r8
0x00004e48      488b1b         mov rbx, qword [rbx]
0x00004e4b      e860cbffff     call sym.imp.dcgettext
0x00004e50      4883ec08       sub rsp, 8
0x00004e54      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00004e59      4889c2         mov rdx, rax
0x00004e5c      4889d9         mov rcx, rbx
0x00004e5f      be01000000     mov esi, 1
0x00004e64      4889ef         mov rdi, rbp
0x00004e67      31c0           xor eax, eax
0x00004e69      4151           push r9
0x00004e6b      4155           push r13
0x00004e6d      4154           push r12
0x00004e6f      4157           push r15
0x00004e71      4156           push r14
0x00004e73      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00004e78      4c8b442438     mov r8, qword [rsp + 0x38]
0x00004e7d      e8aecdffff     call sym.imp.__fprintf_chk
0x00004e82      4883c430       add rsp, 0x30
0x00004e86      4883c428       add rsp, 0x28
0x00004e8a      5b             pop rbx
0x00004e8b      5d             pop rbp
0x00004e8c      415c           pop r12
0x00004e8e      415d           pop r13
0x00004e90      415e           pop r14
0x00004e92      415f           pop r15
0x00004e94      c3             ret
0x00004e95      0f1f00         nop dword [rax]
0x00004e98      4989c8         mov r8, rcx
0x00004e9b      4889d1         mov rcx, rdx
0x00004e9e      488d15ef0401.  lea rdx, str.s__s                       ; 0x15394 ; "%s %s\n"
0x00004ea5      be01000000     mov esi, 1
0x00004eaa      31c0           xor eax, eax
0x00004eac      e87fcdffff     call sym.imp.__fprintf_chk
0x00004eb1      e9e6feffff     jmp 0x4d9c
0x00004eb6      662e0f1f8400.  nop word cs:[rax + rax]
0x00004ec0      4c8b5340       mov r10, qword [rbx + 0x40]
0x00004ec4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004ec8      488d35f90601.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x155c8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x00004ecf      488b4310       mov rax, qword [rbx + 0x10]
0x00004ed3      4c8b4308       mov r8, qword [rbx + 8]
0x00004ed7      ba05000000     mov edx, 5
0x00004edc      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004ee0      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004ee4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004ee8      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004eec      488b1b         mov rbx, qword [rbx]
0x00004eef      4c89542418     mov qword [rsp + 0x18], r10
0x00004ef4      4c894c2410     mov qword [rsp + 0x10], r9
0x00004ef9      48890424       mov qword [rsp], rax
0x00004efd      4c89442408     mov qword [rsp + 8], r8
0x00004f02      31ff           xor edi, edi
0x00004f04      e8a7caffff     call sym.imp.dcgettext
0x00004f09      4c8b542418     mov r10, qword [rsp + 0x18]
0x00004f0e      4152           push r10
0x00004f10      e93fffffff     jmp 0x4e54
0x00004f15      0f1f00         nop dword [rax]
0x00004f18      488b1b         mov rbx, qword [rbx]
0x00004f1b      488d357d0401.  lea rsi, str.Written_by__s.             ; 0x1539f ; "Written by %s.\n"
0x00004f22      ba05000000     mov edx, 5
0x00004f27      31ff           xor edi, edi
0x00004f29      e882caffff     call sym.imp.dcgettext
0x00004f2e      4883c428       add rsp, 0x28
0x00004f32      4889d9         mov rcx, rbx
0x00004f35      4889ef         mov rdi, rbp
0x00004f38      5b             pop rbx
0x00004f39      5d             pop rbp
0x00004f3a      415c           pop r12
0x00004f3c      415d           pop r13
0x00004f3e      415e           pop r14
0x00004f40      415f           pop r15
0x00004f42      4889c2         mov rdx, rax
0x00004f45      be01000000     mov esi, 1
0x00004f4a      31c0           xor eax, eax
0x00004f4c      e9dfccffff     jmp sym.imp.__fprintf_chk
0x00004f51      0f1f80000000.  nop dword [rax]
0x00004f58      4c8b6308       mov r12, qword [rbx + 8]
0x00004f5c      488d354c0401.  lea rsi, str.Written_by__s_and__s.      ; 0x153af ; "Written by %s and %s.\n"
0x00004f63      488b1b         mov rbx, qword [rbx]
0x00004f66      ba05000000     mov edx, 5
0x00004f6b      31ff           xor edi, edi
0x00004f6d      e83ecaffff     call sym.imp.dcgettext
0x00004f72      4883c428       add rsp, 0x28
0x00004f76      4d89e0         mov r8, r12
0x00004f79      4889d9         mov rcx, rbx
0x00004f7c      4889ef         mov rdi, rbp
0x00004f7f      4889c2         mov rdx, rax
0x00004f82      be01000000     mov esi, 1
0x00004f87      5b             pop rbx
0x00004f88      5d             pop rbp
0x00004f89      415c           pop r12
0x00004f8b      415d           pop r13
0x00004f8d      415e           pop r14
0x00004f8f      415f           pop r15
0x00004f91      31c0           xor eax, eax
0x00004f93      e998ccffff     jmp sym.imp.__fprintf_chk
0x00004f98      0f1f84000000.  nop dword [rax + rax]
0x00004fa0      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004fa4      4c8b6308       mov r12, qword [rbx + 8]
0x00004fa8      488d35170401.  lea rsi, str.Written_by__s___s__and__s. ; 0x153c6 ; "Written by %s, %s, and %s.\n"
0x00004faf      488b1b         mov rbx, qword [rbx]
0x00004fb2      ba05000000     mov edx, 5
0x00004fb7      31ff           xor edi, edi
0x00004fb9      e8f2c9ffff     call sym.imp.dcgettext
0x00004fbe      4883c428       add rsp, 0x28
0x00004fc2      4d89e9         mov r9, r13
0x00004fc5      4d89e0         mov r8, r12
0x00004fc8      4889d9         mov rcx, rbx
0x00004fcb      4889ef         mov rdi, rbp
0x00004fce      4889c2         mov rdx, rax
0x00004fd1      5b             pop rbx
0x00004fd2      5d             pop rbp
0x00004fd3      415c           pop r12
0x00004fd5      415d           pop r13
0x00004fd7      415e           pop r14
0x00004fd9      415f           pop r15
0x00004fdb      be01000000     mov esi, 1
0x00004fe0      31c0           xor eax, eax
0x00004fe2      e949ccffff     jmp sym.imp.__fprintf_chk
0x00004fe7      660f1f840000.  nop word [rax + rax]
0x00004ff0      488d35010501.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x154f8 ; "Written by %s, %s, %s,\nand %s.\n"
0x00004ff7      ba05000000     mov edx, 5
0x00004ffc      31ff           xor edi, edi
0x00004ffe      4c8b7318       mov r14, qword [rbx + 0x18]
0x00005002      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005006      4c8b6308       mov r12, qword [rbx + 8]
0x0000500a      488b1b         mov rbx, qword [rbx]
0x0000500d      e89ec9ffff     call sym.imp.dcgettext
0x00005012      4883ec08       sub rsp, 8
0x00005016      4156           push r14
0x00005018      4889c2         mov rdx, rax
0x0000501b      4d89e9         mov r9, r13
0x0000501e      4d89e0         mov r8, r12
0x00005021      4889d9         mov rcx, rbx
0x00005024      4889ef         mov rdi, rbp
0x00005027      be01000000     mov esi, 1
0x0000502c      31c0           xor eax, eax
0x0000502e      e8fdcbffff     call sym.imp.__fprintf_chk
0x00005033      58             pop rax
0x00005034      5a             pop rdx
0x00005035      4883c428       add rsp, 0x28
0x00005039      5b             pop rbx
0x0000503a      5d             pop rbp
0x0000503b      415c           pop r12
0x0000503d      415d           pop r13
0x0000503f      415e           pop r14
0x00005041      415f           pop r15
0x00005043      c3             ret
0x00005044      0f1f4000       nop dword [rax]
0x00005048      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000504c      488d35c50401.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x15518 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00005053      ba05000000     mov edx, 5
0x00005058      31ff           xor edi, edi
0x0000505a      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000505e      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005062      4c8b6308       mov r12, qword [rbx + 8]
0x00005066      488b1b         mov rbx, qword [rbx]
0x00005069      e842c9ffff     call sym.imp.dcgettext
0x0000506e      4157           push r15
0x00005070      eba4           jmp 0x5016
0x00005072      660f1f440000   nop word [rax + rax]
0x00005078      4c8b4308       mov r8, qword [rbx + 8]
0x0000507c      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005080      488d35b90401.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x15540 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00005087      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000508b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000508f      ba05000000     mov edx, 5
0x00005094      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005098      31ff           xor edi, edi
0x0000509a      488b1b         mov rbx, qword [rbx]
0x0000509d      4c890424       mov qword [rsp], r8
0x000050a1      e80ac9ffff     call sym.imp.dcgettext
0x000050a6      4883ec08       sub rsp, 8
0x000050aa      4d89e9         mov r9, r13
0x000050ad      4154           push r12
0x000050af      4157           push r15
0x000050b1      4156           push r14
0x000050b3      4c8b442420     mov r8, qword [rsp + 0x20]
0x000050b8      4889d9         mov rcx, rbx
0x000050bb      4889c2         mov rdx, rax
0x000050be      4889ef         mov rdi, rbp
0x000050c1      be01000000     mov esi, 1
0x000050c6      31c0           xor eax, eax
0x000050c8      e863cbffff     call sym.imp.__fprintf_chk
0x000050cd      4883c420       add rsp, 0x20
0x000050d1      4883c428       add rsp, 0x28
0x000050d5      5b             pop rbx
0x000050d6      5d             pop rbp
0x000050d7      415c           pop r12
0x000050d9      415d           pop r13
0x000050db      415e           pop r14
0x000050dd      415f           pop r15
0x000050df      c3             ret
0x000050e0      4c8b4b10       mov r9, qword [rbx + 0x10]
0x000050e4      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000050e8      488d35790401.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x15568 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x000050ef      4c8b6328       mov r12, qword [rbx + 0x28]
0x000050f3      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000050f7      ba05000000     mov edx, 5
0x000050fc      4c8b7318       mov r14, qword [rbx + 0x18]
0x00005100      4c8b4308       mov r8, qword [rbx + 8]
0x00005104      31ff           xor edi, edi
0x00005106      4c894c2408     mov qword [rsp + 8], r9
0x0000510b      488b1b         mov rbx, qword [rbx]
0x0000510e      4c890424       mov qword [rsp], r8
0x00005112      e899c8ffff     call sym.imp.dcgettext
0x00005117      4155           push r13
0x00005119      4154           push r12
0x0000511b      4157           push r15
0x0000511d      4156           push r14
0x0000511f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00005124      eb8d           jmp 0x50b3
0x00005126      662e0f1f8400.  nop word cs:[rax + rax]
0x00005130      4c8b5340       mov r10, qword [rbx + 0x40]
0x00005134      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00005138      ba05000000     mov edx, 5
0x0000513d      488b4310       mov rax, qword [rbx + 0x10]
0x00005141      4c8b4308       mov r8, qword [rbx + 8]
0x00005145      488d35b40401.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x15600 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x0000514c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00005150      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005154      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005158      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000515c      4c89542418     mov qword [rsp + 0x18], r10
0x00005161      4c894c2410     mov qword [rsp + 0x10], r9
0x00005166      48890424       mov qword [rsp], rax
0x0000516a      4c89442408     mov qword [rsp + 8], r8
0x0000516f      488b1b         mov rbx, qword [rbx]
0x00005172      e98bfdffff     jmp 0x4f02
0x00005177      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00005180      4531c9         xor r9d, r9d
0x00005183      49833800       cmp qword [r8], 0
0x00005187      7412           je 0x519b
0x00005189      0f1f80000000.  nop dword [rax]
0x00005190      4983c101       add r9, 1
0x00005194      4b833cc800     cmp qword [r8 + r9*8], 0
0x00005199      75f5           jne 0x5190
0x0000519b      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x000051a0      4883ec68       sub rsp, 0x68
0x000051a4      4d89c2         mov r10, r8
0x000051a7      4531c9         xor r9d, r9d
0x000051aa      64488b042528.  mov rax, qword fs:[0x28]
0x000051b3      4889442458     mov qword [rsp + 0x58], rax
0x000051b8      31c0           xor eax, eax
0x000051ba      4989e0         mov r8, rsp
0x000051bd      0f1f00         nop dword [rax]
0x000051c0      418b02         mov eax, dword [r10]
0x000051c3      83f82f         cmp eax, 0x2f
0x000051c6      7742           ja 0x520a
0x000051c8      4189c3         mov r11d, eax
0x000051cb      4d035a10       add r11, qword [r10 + 0x10]
0x000051cf      83c008         add eax, 8
0x000051d2      418902         mov dword [r10], eax
0x000051d5      498b03         mov rax, qword [r11]
0x000051d8      4885c0         test rax, rax
0x000051db      4b8904c8       mov qword [r8 + r9*8], rax
0x000051df      740a           je 0x51eb
0x000051e1      4983c101       add r9, 1
0x000051e5      4983f90a       cmp r9, 0xa
0x000051e9      75d5           jne 0x51c0
0x000051eb      e870fbffff     call sym.version_etc_arn
0x000051f0      488b442458     mov rax, qword [rsp + 0x58]
0x000051f5      644833042528.  xor rax, qword fs:[0x28]
0x000051fe      7505           jne 0x5205
0x00005200      4883c468       add rsp, 0x68
0x00005204      c3             ret
0x00005205      e8d6c7ffff     call sym.imp.__stack_chk_fail
0x0000520a      4d8b5a08       mov r11, qword [r10 + 8]
0x0000520e      498d4308       lea rax, [r11 + 8]
0x00005212      49894208       mov qword [r10 + 8], rax
0x00005216      ebbd           jmp 0x51d5
0x00005218      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00005220      55             push rbp
0x00005221      53             push rbx
0x00005222      41ba20000000   mov r10d, 0x20                          ; "@"
0x00005228      4531db         xor r11d, r11d
0x0000522b      4881ecb80000.  sub rsp, 0xb8
0x00005232      64488b042528.  mov rax, qword fs:[0x28]
0x0000523b      4889442478     mov qword [rsp + 0x78], rax
0x00005240      31c0           xor eax, eax
0x00005242      488d8424d000.  lea rax, [rsp + 0xd0]
0x0000524a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00005252      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x0000525a      4c8d442420     lea r8, [rsp + 0x20]
0x0000525f      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00005267      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x0000526f      4889442410     mov qword [rsp + 0x10], rax
0x00005274      488d84248000.  lea rax, [rsp + 0x80]
0x0000527c      4531c9         xor r9d, r9d
0x0000527f      4889442418     mov qword [rsp + 0x18], rax
0x00005284      4889c5         mov rbp, rax
0x00005287      660f1f840000.  nop word [rax + rax]
0x00005290      4183fa2f       cmp r10d, 0x2f
0x00005294      7756           ja 0x52ec
0x00005296      4489d0         mov eax, r10d
0x00005299      41bb01000000   mov r11d, 1
0x0000529f      4183c208       add r10d, 8
0x000052a3      4801e8         add rax, rbp
0x000052a6      488b00         mov rax, qword [rax]
0x000052a9      4885c0         test rax, rax
0x000052ac      4b8904c8       mov qword [r8 + r9*8], rax
0x000052b0      740a           je 0x52bc
0x000052b2      4983c101       add r9, 1
0x000052b6      4983f90a       cmp r9, 0xa
0x000052ba      75d4           jne 0x5290
0x000052bc      4584db         test r11b, r11b
0x000052bf      7524           jne 0x52e5
0x000052c1      e89afaffff     call sym.version_etc_arn
0x000052c6      488b442478     mov rax, qword [rsp + 0x78]
0x000052cb      644833042528.  xor rax, qword fs:[0x28]
0x000052d4      750a           jne 0x52e0
0x000052d6      4881c4b80000.  add rsp, 0xb8
0x000052dd      5b             pop rbx
0x000052de      5d             pop rbp
0x000052df      c3             ret
0x000052e0      e8fbc6ffff     call sym.imp.__stack_chk_fail
0x000052e5      4489542408     mov dword [rsp + 8], r10d
0x000052ea      ebd5           jmp 0x52c1
0x000052ec      4889d8         mov rax, rbx
0x000052ef      4883c308       add rbx, 8
0x000052f3      ebb1           jmp 0x52a6
0x000052f5      90             nop
0x000052f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00005300      53             push rbx
0x00005301      488d35da0001.  lea rsi, str.Report_bugs_to:__s         ; 0x153e2 ; "\nReport bugs to: %s\n"
0x00005308      ba05000000     mov edx, 5
0x0000530d      31ff           xor edi, edi
0x0000530f      e89cc6ffff     call sym.imp.dcgettext
0x00005314      488d15dc0001.  lea rdx, str.bug_coreutils_gnu.org      ; 0x153f7 ; "bug-coreutils@gnu.org"
0x0000531b      4889c6         mov rsi, rax
0x0000531e      bf01000000     mov edi, 1
0x00005323      31c0           xor eax, eax
0x00005325      e856c8ffff     call sym.imp.__printf_chk
0x0000532a      488d35dc0001.  lea rsi, str.s_home_page:___s           ; 0x1540d ; "%s home page: <%s>\n"
0x00005331      ba05000000     mov edx, 5
0x00005336      31ff           xor edi, edi
0x00005338      e873c6ffff     call sym.imp.dcgettext
0x0000533d      488d0d64f900.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x14ca8 ; "https://www.gnu.org/software/coreutils/"
0x00005344      488d15e7f000.  lea rdx, str.GNU_coreutils              ; 0x14432 ; "GNU coreutils"
0x0000534b      4889c6         mov rsi, rax
0x0000534e      bf01000000     mov edi, 1
0x00005353      31c0           xor eax, eax
0x00005355      e826c8ffff     call sym.imp.__printf_chk
0x0000535a      488b1d873d21.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2190e8:8]=0
0x00005361      488d35d80201.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x15640 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00005368      31ff           xor edi, edi
0x0000536a      ba05000000     mov edx, 5
0x0000536f      e83cc6ffff     call sym.imp.dcgettext
0x00005374      4889de         mov rsi, rbx
0x00005377      4889c7         mov rdi, rax
0x0000537a      5b             pop rbx
0x0000537b      e920c7ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00005380      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00005381      4889fb         mov rbx, rdi
0x00005384      e877c7ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00005389      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x0000538c      7505           jne 0x5393
0x0000538e      4885db         test rbx, rbx
0x00005391      7502           jne 0x5395
0x00005393      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00005394      c3             ret
0x00005395      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x0000539a      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x000053a0      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x000053a3      48f7e6         mul rsi
0x000053a6      4889c7         mov rdi, rax
0x000053a9      0f90c0         seto al
0x000053ac      4885ff         test rdi, rdi
0x000053af      780a           js 0x53bb
0x000053b1      0fb6c0         movzx eax, al
0x000053b4      4885c0         test rax, rax
0x000053b7      7502           jne 0x53bb
0x000053b9      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x000053bb      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x000053bf      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x000053c4      6690           nop
0x000053c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x000053d0      ebae           jmp sym.xmalloc
0x000053d2      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x000053d6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x000053e0      4885f6         test rsi, rsi
0x000053e3      53             push rbx
0x000053e4      4889f3         mov rbx, rsi
0x000053e7      7505           jne 0x53ee
0x000053e9      4885ff         test rdi, rdi
0x000053ec      751a           jne 0x5408
0x000053ee      4889de         mov rsi, rbx
0x000053f1      e86ac7ffff     call sym.imp.realloc
0x000053f6      4885c0         test rax, rax
0x000053f9      7505           jne 0x5400
0x000053fb      4885db         test rbx, rbx
0x000053fe      7511           jne 0x5411                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00005400      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00005401      c3             ret
0x00005402      660f1f440000   nop word [rax + rax]
0x00005408      e8c3c4ffff     call sym.imp.free
0x0000540d      31c0           xor eax, eax
0x0000540f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00005410      c3             ret
0x00005411      e8ba010000     call sym.xalloc_die
0x00005416      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00005420      4889f0         mov rax, rsi
0x00005423      48f7e2         mul rdx
0x00005426      4889c6         mov rsi, rax
0x00005429      0f90c0         seto al
0x0000542c      4885f6         test rsi, rsi
0x0000542f      780a           js 0x543b
0x00005431      0fb6c0         movzx eax, al
0x00005434      4885c0         test rax, rax
0x00005437      7502           jne 0x543b
0x00005439      eba5           jmp sym.xrealloc
0x0000543b      4883ec08       sub rsp, 8
0x0000543f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00005444      6690           nop
0x00005446      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00005450      4885ff         test rdi, rdi
0x00005453      4989d1         mov r9, rdx
0x00005456      488b0e         mov rcx, qword [rsi]
0x00005459      7435           je 0x5490
0x0000545b      31d2           xor edx, edx
0x0000545d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00005467      49f7f1         div r9
0x0000546a      4839c8         cmp rax, rcx
0x0000546d      763c           jbe 0x54ab
0x0000546f      4889c8         mov rax, rcx
0x00005472      48d1e8         shr rax, 1
0x00005475      488d4c0801     lea rcx, [rax + rcx + 1]
0x0000547a      48890e         mov qword [rsi], rcx
0x0000547d      490fafc9       imul rcx, r9
0x00005481      4889ce         mov rsi, rcx
0x00005484      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00005489      0f1f80000000.  nop dword [rax]
0x00005490      4885c9         test rcx, rcx
0x00005493      7423           je 0x54b8
0x00005495      4889c8         mov rax, rcx
0x00005498      49f7e1         mul r9
0x0000549b      0f90c2         seto dl
0x0000549e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x000054a1      0fb6d2         movzx edx, dl
0x000054a4      7805           js 0x54ab
0x000054a6      4885d2         test rdx, rdx
0x000054a9      74cf           je 0x547a
0x000054ab      4883ec08       sub rsp, 8
0x000054af      e81c010000     call sym.xalloc_die
0x000054b4      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x000054b8      31d2           xor edx, edx
0x000054ba      b880000000     mov eax, 0x80
0x000054bf      4531c0         xor r8d, r8d
0x000054c2      49f7f1         div r9
0x000054c5      4885c0         test rax, rax
0x000054c8      410f94c0       sete r8b
0x000054cc      498d0c00       lea rcx, [r8 + rax]
0x000054d0      ebc3           jmp 0x5495
0x000054d2      0f1f4000       nop dword [rax]
0x000054d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x000054e0      4885ff         test rdi, rdi
0x000054e3      488b06         mov rax, qword [rsi]
0x000054e6      7428           je 0x5510
0x000054e8      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x000054f2      4839d0         cmp rax, rdx
0x000054f5      772a           ja 0x5521
0x000054f7      4889c2         mov rdx, rax
0x000054fa      48d1ea         shr rdx, 1
0x000054fd      488d440201     lea rax, [rdx + rax + 1]
0x00005502      488906         mov qword [rsi], rax
0x00005505      4889c6         mov rsi, rax
0x00005508      e9d3feffff     jmp sym.xrealloc
0x0000550d      0f1f00         nop dword [rax]
0x00005510      4885c0         test rax, rax
0x00005513      ba80000000     mov edx, 0x80
0x00005518      480f44c2       cmove rax, rdx
0x0000551c      4885c0         test rax, rax
0x0000551f      79e1           jns 0x5502
0x00005521      4883ec08       sub rsp, 8
0x00005525      e8a6000000     call sym.xalloc_die
0x0000552a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00005530      53             push rbx
0x00005531      4889fb         mov rbx, rdi
0x00005534      e847feffff     call sym.xmalloc
0x00005539      4889da         mov rdx, rbx
0x0000553c      31f6           xor esi, esi
0x0000553e      4889c7         mov rdi, rax
0x00005541      5b             pop rbx
0x00005542      e919c5ffff     jmp sym.imp.memset
0x00005547      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00005550      4889f8         mov rax, rdi
0x00005553      4883ec08       sub rsp, 8
0x00005557      48f7e6         mul rsi
0x0000555a      0f90c2         seto dl
0x0000555d      4885c0         test rax, rax
0x00005560      7817           js 0x5579
0x00005562      0fb6d2         movzx edx, dl
0x00005565      4885d2         test rdx, rdx
0x00005568      750f           jne 0x5579
0x0000556a      e841c5ffff     call sym.imp.calloc
0x0000556f      4885c0         test rax, rax
0x00005572      7405           je 0x5579
0x00005574      4883c408       add rsp, 8
0x00005578      c3             ret
0x00005579      e852000000     call sym.xalloc_die
0x0000557e      6690           nop
;-- xmemdup:
0x00005580      55             push rbp
0x00005581      53             push rbx
0x00005582      4889fd         mov rbp, rdi
0x00005585      4889f7         mov rdi, rsi
0x00005588      4889f3         mov rbx, rsi
0x0000558b      4883ec08       sub rsp, 8
0x0000558f      e8ecfdffff     call sym.xmalloc
0x00005594      4883c408       add rsp, 8
0x00005598      4889da         mov rdx, rbx
0x0000559b      4889ee         mov rsi, rbp
0x0000559e      5b             pop rbx
0x0000559f      5d             pop rbp
0x000055a0      4889c7         mov rdi, rax
0x000055a3      e928c5ffff     jmp sym.imp.memcpy
0x000055a8      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x000055b0      53             push rbx
0x000055b1      4889fb         mov rbx, rdi
0x000055b4      e817c4ffff     call sym.imp.strlen
0x000055b9      4889df         mov rdi, rbx
0x000055bc      488d7001       lea rsi, [rax + 1]
0x000055c0      5b             pop rbx
0x000055c1      ebbd           jmp sym.xmemdup
0x000055c3      662e0f1f8400.  nop word cs:[rax + rax]
0x000055cd      0f1f00         nop dword [rax]
;-- xalloc_die:
0x000055d0      488d35180101.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x156ef ; "memory exhausted"
0x000055d7      4883ec08       sub rsp, 8
0x000055db      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x000055e0      31ff           xor edi, edi
0x000055e2      e8c9c3ffff     call sym.imp.dcgettext
0x000055e7      8b3d833a2100   mov edi, dword [obj.exit_failure]       ; [0x219070:4]=1
0x000055ed      488d1578f800.  lea rdx, [0x00014e6c]                   ; "%s"
0x000055f4      4889c1         mov rcx, rax
0x000055f7      31f6           xor esi, esi
0x000055f9      31c0           xor eax, eax
0x000055fb      e8b0c5ffff     call sym.imp.error
0x00005600      e8dbc2ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00005605      662e0f1f8400.  nop word cs:[rax + rax]
0x0000560f      90             nop
;-- xnumtoimax:
0x00005610      4157           push r15                                ; ../coreutils-8.31/lib/xdectoint.c:38
0x00005612      4156           push r14
0x00005614      4989cf         mov r15, rcx
0x00005617      4155           push r13
0x00005619      4154           push r12
0x0000561b      4989d6         mov r14, rdx
0x0000561e      55             push rbp
0x0000561f      53             push rbx
0x00005620      89f2           mov edx, esi                            ; ../coreutils-8.31/lib/xdectoint.c:42
0x00005622      31f6           xor esi, esi
0x00005624      4989fc         mov r12, rdi                            ; ../coreutils-8.31/lib/xdectoint.c:38
0x00005627      4d89cd         mov r13, r9
0x0000562a      4883ec18       sub rsp, 0x18
0x0000562e      4889e1         mov rcx, rsp                            ; ../coreutils-8.31/lib/xdectoint.c:42
0x00005631      8b5c2450       mov ebx, dword [rsp + 0x50]             ; ../coreutils-8.31/lib/xdectoint.c:38
0x00005635      64488b042528.  mov rax, qword fs:[0x28]
0x0000563e      4889442408     mov qword [rsp + 8], rax
0x00005643      31c0           xor eax, eax
0x00005645      e816010000     call sym.xstrtoimax                     ; ../coreutils-8.31/lib/xdectoint.c:42
0x0000564a      85c0           test eax, eax                           ; ../coreutils-8.31/lib/xdectoint.c:44
0x0000564c      0f858e000000   jne 0x56e0
0x00005652      488b2c24       mov rbp, qword [rsp]                    ; ../coreutils-8.31/lib/xdectoint.c:46
0x00005656      4c39f5         cmp rbp, r14
0x00005659      7c05           jl 0x5660
0x0000565b      4c39fd         cmp rbp, r15
0x0000565e      7e56           jle 0x56b6
0x00005660      e88bc2ffff     call sym.imp.__errno_location
0x00005665      4881fdffffff.  cmp rbp, 0x3fffffff                     ; ../coreutils-8.31/lib/xdectoint.c:51
0x0000566c      4989c6         mov r14, rax
0x0000566f      0f8e8b000000   jle 0x5700
0x00005675      41c7064b0000.  mov dword [r14], 0x4b                   ; ../coreutils-8.31/lib/xdectoint.c:62 ; 'K'
                                                                       ; [0x4b:4]=0
0x0000567c      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/xdectoint.c:69
0x0000567f      e8bcf6ffff     call sym.quote
0x00005684      418b36         mov esi, dword [r14]
0x00005687      4989c0         mov r8, rax
0x0000568a      b800000000     mov eax, 0
0x0000568f      488d15d2f700.  lea rdx, str.s:__s                      ; 0x14e68 ; "%s: %s"
0x00005696      4c89e9         mov rcx, r13
0x00005699      83fe16         cmp esi, 0x16
0x0000569c      0f44f0         cmove esi, eax
0x0000569f      85db           test ebx, ebx
0x000056a1      b801000000     mov eax, 1
0x000056a6      0f44d8         cmove ebx, eax
0x000056a9      31c0           xor eax, eax
0x000056ab      89df           mov edi, ebx
0x000056ad      e8fec4ffff     call sym.imp.error
0x000056b2      488b2c24       mov rbp, qword [rsp]
0x000056b6      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/xdectoint.c:74
0x000056bb      644833142528.  xor rdx, qword fs:[0x28]
0x000056c4      4889e8         mov rax, rbp
0x000056c7      7553           jne 0x571c
0x000056c9      4883c418       add rsp, 0x18
0x000056cd      5b             pop rbx
0x000056ce      5d             pop rbp
0x000056cf      415c           pop r12
0x000056d1      415d           pop r13
0x000056d3      415e           pop r14
0x000056d5      415f           pop r15
0x000056d7      c3             ret
0x000056d8      0f1f84000000.  nop dword [rax + rax]
0x000056e0      89c5           mov ebp, eax
0x000056e2      e809c2ffff     call sym.imp.__errno_location
0x000056e7      83fd01         cmp ebp, 1                              ; ../coreutils-8.31/lib/xdectoint.c:61
0x000056ea      4989c6         mov r14, rax
0x000056ed      7486           je 0x5675
0x000056ef      83fd03         cmp ebp, 3                              ; ../coreutils-8.31/lib/xdectoint.c:63
0x000056f2      7588           jne 0x567c
0x000056f4      c70000000000   mov dword [rax], 0                      ; ../coreutils-8.31/lib/xdectoint.c:64
0x000056fa      eb80           jmp 0x567c
0x000056fc      0f1f4000       nop dword [rax]
0x00005700      4881fdffffff.  cmp rbp, 0xffffffffbfffffff             ; ../coreutils-8.31/lib/xdectoint.c:55
0x00005707      b822000000     mov eax, 0x22                           ; '"'
0x0000570c      ba4b000000     mov edx, 0x4b                           ; 'K'
0x00005711      0f4ec2         cmovle eax, edx
0x00005714      418906         mov dword [r14], eax
0x00005717      e960ffffff     jmp 0x567c
0x0000571c      e8bfc2ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/xdectoint.c:74
0x00005721      0f1f440000     nop dword [rax + rax]
0x00005726      662e0f1f8400.  nop word cs:[rax + rax]
;-- xdectoimax:
0x00005730      4883ec10       sub rsp, 0x10                           ; ../coreutils-8.31/lib/xdectoint.c:84
0x00005734      4151           push r9                                 ; ../coreutils-8.31/lib/xdectoint.c:85
0x00005736      4d89c1         mov r9, r8
0x00005739      4989c8         mov r8, rcx
0x0000573c      4889d1         mov rcx, rdx
0x0000573f      4889f2         mov rdx, rsi
0x00005742      be0a000000     mov esi, 0xa
0x00005747      e8c4feffff     call sym.xnumtoimax
0x0000574c      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/xdectoint.c:86
0x00005750      c3             ret
0x00005751      662e0f1f8400.  nop word cs:[rax + rax]
0x0000575b      0f1f440000     nop dword [rax + rax]
;-- xstrtoimax:
0x00005760      4157           push r15
0x00005762      4156           push r14
0x00005764      4155           push r13
0x00005766      4154           push r12
0x00005768      55             push rbp
0x00005769      53             push rbx
0x0000576a      4883ec28       sub rsp, 0x28
0x0000576e      64488b042528.  mov rax, qword fs:[0x28]
0x00005777      4889442418     mov qword [rsp + 0x18], rax
0x0000577c      31c0           xor eax, eax
0x0000577e      83fa24         cmp edx, 0x24
0x00005781      0f8768060000   ja 0x5def
0x00005787      488d442410     lea rax, [rsp + 0x10]
0x0000578c      4885f6         test rsi, rsi
0x0000578f      4889f3         mov rbx, rsi
0x00005792      4989fc         mov r12, rdi
0x00005795      89d5           mov ebp, edx
0x00005797      4989ce         mov r14, rcx
0x0000579a      480f44d8       cmove rbx, rax
0x0000579e      4d89c7         mov r15, r8
0x000057a1      e84ac1ffff     call sym.imp.__errno_location
0x000057a6      31c9           xor ecx, ecx
0x000057a8      89ea           mov edx, ebp
0x000057aa      c70000000000   mov dword [rax], 0
0x000057b0      4889de         mov rsi, rbx
0x000057b3      4c89e7         mov rdi, r12
0x000057b6      4989c5         mov r13, rax
0x000057b9      e8a2c1ffff     call sym.imp.__strtol_internal
0x000057be      488b0b         mov rcx, qword [rbx]
0x000057c1      4889c5         mov rbp, rax
0x000057c4      4c39e1         cmp rcx, r12
0x000057c7      745f           je 0x5828
0x000057c9      418b4500       mov eax, dword [r13]
0x000057cd      85c0           test eax, eax
0x000057cf      753f           jne 0x5810
0x000057d1      4531e4         xor r12d, r12d
0x000057d4      4d85ff         test r15, r15
0x000057d7      740d           je 0x57e6
0x000057d9      440fb629       movzx r13d, byte [rcx]
0x000057dd      4584ed         test r13b, r13b
0x000057e0      0f857d000000   jne 0x5863
0x000057e6      49892e         mov qword [r14], rbp
0x000057e9      488b7c2418     mov rdi, qword [rsp + 0x18]
0x000057ee      6448333c2528.  xor rdi, qword fs:[0x28]
0x000057f7      4489e0         mov eax, r12d
0x000057fa      0f850e060000   jne 0x5e0e
0x00005800      4883c428       add rsp, 0x28
0x00005804      5b             pop rbx
0x00005805      5d             pop rbp
0x00005806      415c           pop r12
0x00005808      415d           pop r13
0x0000580a      415e           pop r14
0x0000580c      415f           pop r15
0x0000580e      c3             ret
0x0000580f      90             nop
0x00005810      83f822         cmp eax, 0x22
0x00005813      41bc04000000   mov r12d, 4
0x00005819      75ce           jne 0x57e9
0x0000581b      41bc01000000   mov r12d, 1
0x00005821      ebb1           jmp 0x57d4
0x00005823      0f1f440000     nop dword [rax + rax]
0x00005828      4d85ff         test r15, r15
0x0000582b      0f848f040000   je 0x5cc0
0x00005831      440fb629       movzx r13d, byte [rcx]
0x00005835      48894c2408     mov qword [rsp + 8], rcx
0x0000583a      41bc04000000   mov r12d, 4
0x00005840      4584ed         test r13b, r13b
0x00005843      74a4           je 0x57e9
0x00005845      410fbef5       movsx esi, r13b
0x00005849      4c89ff         mov rdi, r15
0x0000584c      e8bfc1ffff     call sym.imp.strchr
0x00005851      4885c0         test rax, rax
0x00005854      488b4c2408     mov rcx, qword [rsp + 8]
0x00005859      748e           je 0x57e9
0x0000585b      bd01000000     mov ebp, 1
0x00005860      4531e4         xor r12d, r12d
0x00005863      410fbef5       movsx esi, r13b
0x00005867      4c89ff         mov rdi, r15
0x0000586a      48894c2408     mov qword [rsp + 8], rcx
0x0000586f      e89cc1ffff     call sym.imp.strchr
0x00005874      4885c0         test rax, rax
0x00005877      488b4c2408     mov rcx, qword [rsp + 8]
0x0000587c      745a           je 0x58d8
0x0000587e      418d45bb       lea eax, [r13 - 0x45]
0x00005882      3c2f           cmp al, 0x2f
0x00005884      7762           ja 0x58e8
0x00005886      48ba45893000.  movabs rdx, 0x814400308945
0x00005890      480fa3c2       bt rdx, rax
0x00005894      7352           jae 0x58e8
0x00005896      be30000000     mov esi, 0x30                           ; '0'
0x0000589b      4c89ff         mov rdi, r15
0x0000589e      48894c2408     mov qword [rsp + 8], rcx
0x000058a3      e868c1ffff     call sym.imp.strchr
0x000058a8      4885c0         test rax, rax
0x000058ab      488b4c2408     mov rcx, qword [rsp + 8]
0x000058b0      7436           je 0x58e8
0x000058b2      0fb64101       movzx eax, byte [rcx + 1]
0x000058b6      3c44           cmp al, 0x44
0x000058b8      740c           je 0x58c6
0x000058ba      3c69           cmp al, 0x69
0x000058bc      0f84e6040000   je 0x5da8
0x000058c2      3c42           cmp al, 0x42
0x000058c4      7522           jne 0x58e8
0x000058c6      bf02000000     mov edi, 2
0x000058cb      b8e8030000     mov eax, 0x3e8
0x000058d0      eb20           jmp 0x58f2
0x000058d2      660f1f440000   nop word [rax + rax]
0x000058d8      49892e         mov qword [r14], rbp
0x000058db      4183cc02       or r12d, 2
0x000058df      e905ffffff     jmp 0x57e9
0x000058e4      0f1f4000       nop dword [rax]
0x000058e8      bf01000000     mov edi, 1
0x000058ed      b800040000     mov eax, 0x400
0x000058f2      4183ed42       sub r13d, 0x42
0x000058f6      4180fd35       cmp r13b, 0x35
0x000058fa      77dc           ja 0x58d8
0x000058fc      488d3545fe00.  lea rsi, [0x00015748]
0x00005903      450fb6ed       movzx r13d, r13b
0x00005907      4a6314ae       movsxd rdx, dword [rsi + r13*4]
0x0000590b      4801f2         add rdx, rsi
0x0000590e      ffe2           jmp rdx
0x00005910      49b800000000.  movabs r8, 0x8000000000000000
0x0000591a      4863f0         movsxd rsi, eax
0x0000591d      4c89c0         mov rax, r8
0x00005920      4899           cqo
0x00005922      48f7fe         idiv rsi
0x00005925      4839c5         cmp rbp, rax
0x00005928      4989c1         mov r9, rax
0x0000592b      0f8ca4040000   jl 0x5dd5
0x00005931      49baffffffff.  movabs r10, 0x7fffffffffffffff          ; 9223372036854775807
0x0000593b      4c89d0         mov rax, r10
0x0000593e      4899           cqo
0x00005940      48f7fe         idiv rsi
0x00005943      4839c5         cmp rbp, rax
0x00005946      0f8f96040000   jg 0x5de2
0x0000594c      480fafee       imul rbp, rsi
0x00005950      4939e9         cmp r9, rbp
0x00005953      0f8f7c040000   jg 0x5dd5
0x00005959      4839e8         cmp rax, rbp
0x0000595c      0f8c80040000   jl 0x5de2
0x00005962      480fafee       imul rbp, rsi
0x00005966      31c0           xor eax, eax
0x00005968      4109c4         or r12d, eax
0x0000596b      0f1f440000     nop dword [rax + rax]
0x00005970      4863c7         movsxd rax, edi
0x00005973      4801c1         add rcx, rax
0x00005976      4489e0         mov eax, r12d
0x00005979      83c802         or eax, 2
0x0000597c      48890b         mov qword [rbx], rcx
0x0000597f      803900         cmp byte [rcx], 0
0x00005982      440f45e0       cmovne r12d, eax
0x00005986      e95bfeffff     jmp 0x57e6
0x0000598b      0f1f440000     nop dword [rax + rax]
0x00005990      48b800000000.  movabs rax, 0xc000000000000000
0x0000599a      4839c5         cmp rbp, rax
0x0000599d      0f8c2d030000   jl 0x5cd0
0x000059a3      48b8ffffffff.  movabs rax, 0x3fffffffffffffff          ; 4611686018427387903
0x000059ad      4839c5         cmp rbp, rax
0x000059b0      0f8fda030000   jg 0x5d90
0x000059b6      4801ed         add rbp, rbp
0x000059b9      ebb5           jmp 0x5970
0x000059bb      0f1f440000     nop dword [rax + rax]
0x000059c0      48b800000000.  movabs rax, 0xffc0000000000000
0x000059ca      4839c5         cmp rbp, rax
0x000059cd      0f8cfd020000   jl 0x5cd0
0x000059d3      48b8ffffffff.  movabs rax, 0x3fffffffffffff            ; 18014398509481983
0x000059dd      4839c5         cmp rbp, rax
0x000059e0      0f8faa030000   jg 0x5d90
0x000059e6      48c1e509       shl rbp, 9
0x000059ea      eb84           jmp 0x5970
0x000059ec      0f1f4000       nop dword [rax]
0x000059f0      4863f0         movsxd rsi, eax
0x000059f3      48b800000000.  movabs rax, 0x8000000000000000
0x000059fd      41b807000000   mov r8d, 7
0x00005a03      4899           cqo
0x00005a05      4531db         xor r11d, r11d
0x00005a08      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x00005a12      48f7fe         idiv rsi
0x00005a15      4989c2         mov r10, rax
0x00005a18      eb25           jmp 0x5a3f
0x00005a1a      660f1f440000   nop word [rax + rax]
0x00005a20      4c89c8         mov rax, r9
0x00005a23      4899           cqo
0x00005a25      48f7fe         idiv rsi
0x00005a28      4839e8         cmp rax, rbp
0x00005a2b      0f8ce7020000   jl 0x5d18
0x00005a31      480fafee       imul rbp, rsi
0x00005a35      4183e801       sub r8d, 1
0x00005a39      0f8421010000   je 0x5b60
0x00005a3f      4939ea         cmp r10, rbp
0x00005a42      7edc           jle 0x5a20
0x00005a44      41bb01000000   mov r11d, 1
0x00005a4a      48bd00000000.  movabs rbp, 0x8000000000000000
0x00005a54      ebdf           jmp 0x5a35
0x00005a56      662e0f1f8400.  nop word cs:[rax + rax]
0x00005a60      4863f0         movsxd rsi, eax
0x00005a63      48b800000000.  movabs rax, 0x8000000000000000
0x00005a6d      41b808000000   mov r8d, 8
0x00005a73      4899           cqo
0x00005a75      4531db         xor r11d, r11d
0x00005a78      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x00005a82      48f7fe         idiv rsi
0x00005a85      4989c2         mov r10, rax
0x00005a88      eb25           jmp 0x5aaf
0x00005a8a      660f1f440000   nop word [rax + rax]
0x00005a90      4c89c8         mov rax, r9
0x00005a93      4899           cqo
0x00005a95      48f7fe         idiv rsi
0x00005a98      4839e8         cmp rax, rbp
0x00005a9b      0f8c47020000   jl 0x5ce8
0x00005aa1      480fafee       imul rbp, rsi
0x00005aa5      4183e801       sub r8d, 1
0x00005aa9      0f84b1000000   je 0x5b60
0x00005aaf      4939ea         cmp r10, rbp
0x00005ab2      7edc           jle 0x5a90
0x00005ab4      41bb01000000   mov r11d, 1
0x00005aba      48bd00000000.  movabs rbp, 0x8000000000000000
0x00005ac4      ebdf           jmp 0x5aa5
0x00005ac6      662e0f1f8400.  nop word cs:[rax + rax]
0x00005ad0      49b800000000.  movabs r8, 0x8000000000000000
0x00005ada      4863f0         movsxd rsi, eax
0x00005add      4c89c0         mov rax, r8
0x00005ae0      4899           cqo
0x00005ae2      48f7fe         idiv rsi
0x00005ae5      4839c5         cmp rbp, rax
0x00005ae8      0f8ce2010000   jl 0x5cd0
0x00005aee      4983e801       sub r8, 1
0x00005af2      4c89c0         mov rax, r8
0x00005af5      4899           cqo
0x00005af7      48f7fe         idiv rsi
0x00005afa      4839c5         cmp rbp, rax
0x00005afd      0f8f8d020000   jg 0x5d90
0x00005b03      480fafee       imul rbp, rsi
0x00005b07      e964feffff     jmp 0x5970
0x00005b0c      0f1f4000       nop dword [rax]
0x00005b10      4863f0         movsxd rsi, eax
0x00005b13      48b800000000.  movabs rax, 0x8000000000000000
0x00005b1d      41b803000000   mov r8d, 3
0x00005b23      4899           cqo
0x00005b25      4531db         xor r11d, r11d
0x00005b28      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x00005b32      48f7fe         idiv rsi
0x00005b35      4989c2         mov r10, rax
0x00005b38      4939ea         cmp r10, rbp
0x00005b3b      0f8fef010000   jg 0x5d30
0x00005b41      4c89c8         mov rax, r9
0x00005b44      4899           cqo
0x00005b46      48f7fe         idiv rsi
0x00005b49      4839e8         cmp rax, rbp
0x00005b4c      0f8c6e020000   jl 0x5dc0
0x00005b52      480fafee       imul rbp, rsi
0x00005b56      4183e801       sub r8d, 1
0x00005b5a      75dc           jne 0x5b38
0x00005b5c      0f1f4000       nop dword [rax]
0x00005b60      4509dc         or r12d, r11d
0x00005b63      e908feffff     jmp 0x5970
0x00005b68      0f1f84000000.  nop dword [rax + rax]
0x00005b70      4863f0         movsxd rsi, eax
0x00005b73      48b800000000.  movabs rax, 0x8000000000000000
0x00005b7d      41b806000000   mov r8d, 6
0x00005b83      4899           cqo
0x00005b85      4531db         xor r11d, r11d
0x00005b88      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x00005b92      48f7fe         idiv rsi
0x00005b95      4989c2         mov r10, rax
0x00005b98      eb21           jmp 0x5bbb
0x00005b9a      660f1f440000   nop word [rax + rax]
0x00005ba0      4c89c8         mov rax, r9
0x00005ba3      4899           cqo
0x00005ba5      48f7fe         idiv rsi
0x00005ba8      4839e8         cmp rax, rbp
0x00005bab      0f8c97010000   jl 0x5d48
0x00005bb1      480fafee       imul rbp, rsi
0x00005bb5      4183e801       sub r8d, 1
0x00005bb9      74a5           je 0x5b60
0x00005bbb      4939ea         cmp r10, rbp
0x00005bbe      7ee0           jle 0x5ba0
0x00005bc0      41bb01000000   mov r11d, 1
0x00005bc6      48bd00000000.  movabs rbp, 0x8000000000000000
0x00005bd0      ebe3           jmp 0x5bb5
0x00005bd2      660f1f440000   nop word [rax + rax]
0x00005bd8      4863f0         movsxd rsi, eax
0x00005bdb      48b800000000.  movabs rax, 0x8000000000000000
0x00005be5      41b805000000   mov r8d, 5
0x00005beb      4899           cqo
0x00005bed      4531db         xor r11d, r11d
0x00005bf0      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x00005bfa      48f7fe         idiv rsi
0x00005bfd      4989c2         mov r10, rax
0x00005c00      eb25           jmp 0x5c27
0x00005c02      660f1f440000   nop word [rax + rax]
0x00005c08      4c89c8         mov rax, r9
0x00005c0b      4899           cqo
0x00005c0d      48f7fe         idiv rsi
0x00005c10      4839e8         cmp rax, rbp
0x00005c13      0f8c47010000   jl 0x5d60
0x00005c19      480fafee       imul rbp, rsi
0x00005c1d      4183e801       sub r8d, 1
0x00005c21      0f8439ffffff   je 0x5b60
0x00005c27      4939ea         cmp r10, rbp
0x00005c2a      7edc           jle 0x5c08
0x00005c2c      41bb01000000   mov r11d, 1
0x00005c32      48bd00000000.  movabs rbp, 0x8000000000000000
0x00005c3c      ebdf           jmp 0x5c1d
0x00005c3e      6690           nop
0x00005c40      48b800000000.  movabs rax, 0xffe0000000000000
0x00005c4a      4839c5         cmp rbp, rax
0x00005c4d      0f8c7d000000   jl 0x5cd0
0x00005c53      48b8ffffffff.  movabs rax, 0x1fffffffffffff            ; 9007199254740991
0x00005c5d      4839c5         cmp rbp, rax
0x00005c60      0f8f2a010000   jg 0x5d90
0x00005c66      48c1e50a       shl rbp, 0xa
0x00005c6a      e901fdffff     jmp 0x5970
0x00005c6f      90             nop
0x00005c70      4863f0         movsxd rsi, eax
0x00005c73      48b800000000.  movabs rax, 0x8000000000000000
0x00005c7d      41b804000000   mov r8d, 4
0x00005c83      4899           cqo
0x00005c85      4531db         xor r11d, r11d
0x00005c88      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x00005c92      48f7fe         idiv rsi
0x00005c95      4989c2         mov r10, rax
0x00005c98      4939ea         cmp r10, rbp
0x00005c9b      7f63           jg 0x5d00
0x00005c9d      4c89c8         mov rax, r9
0x00005ca0      4899           cqo
0x00005ca2      48f7fe         idiv rsi
0x00005ca5      4839e8         cmp rax, rbp
0x00005ca8      0f8cca000000   jl 0x5d78
0x00005cae      480fafee       imul rbp, rsi
0x00005cb2      4183e801       sub r8d, 1
0x00005cb6      75e0           jne 0x5c98
0x00005cb8      e9a3feffff     jmp 0x5b60
0x00005cbd      0f1f00         nop dword [rax]
0x00005cc0      41bc04000000   mov r12d, 4
0x00005cc6      e91efbffff     jmp 0x57e9
0x00005ccb      0f1f440000     nop dword [rax + rax]
0x00005cd0      41bc01000000   mov r12d, 1
0x00005cd6      48bd00000000.  movabs rbp, 0x8000000000000000
0x00005ce0      e98bfcffff     jmp 0x5970
0x00005ce5      0f1f00         nop dword [rax]
0x00005ce8      41bb01000000   mov r11d, 1
0x00005cee      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x00005cf8      e9a8fdffff     jmp 0x5aa5
0x00005cfd      0f1f00         nop dword [rax]
0x00005d00      41bb01000000   mov r11d, 1
0x00005d06      48bd00000000.  movabs rbp, 0x8000000000000000
0x00005d10      eba0           jmp 0x5cb2
0x00005d12      660f1f440000   nop word [rax + rax]
0x00005d18      41bb01000000   mov r11d, 1
0x00005d1e      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x00005d28      e908fdffff     jmp 0x5a35
0x00005d2d      0f1f00         nop dword [rax]
0x00005d30      41bb01000000   mov r11d, 1
0x00005d36      48bd00000000.  movabs rbp, 0x8000000000000000
0x00005d40      e911feffff     jmp 0x5b56
0x00005d45      0f1f00         nop dword [rax]
0x00005d48      41bb01000000   mov r11d, 1
0x00005d4e      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x00005d58      e958feffff     jmp 0x5bb5
0x00005d5d      0f1f00         nop dword [rax]
0x00005d60      41bb01000000   mov r11d, 1
0x00005d66      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x00005d70      e9a8feffff     jmp 0x5c1d
0x00005d75      0f1f00         nop dword [rax]
0x00005d78      41bb01000000   mov r11d, 1
0x00005d7e      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x00005d88      e925ffffff     jmp 0x5cb2
0x00005d8d      0f1f00         nop dword [rax]
0x00005d90      41bc01000000   mov r12d, 1
0x00005d96      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x00005da0      e9cbfbffff     jmp 0x5970
0x00005da5      0f1f00         nop dword [rax]
0x00005da8      31ff           xor edi, edi
0x00005daa      80790242       cmp byte [rcx + 2], 0x42
0x00005dae      b800040000     mov eax, 0x400
0x00005db3      400f94c7       sete dil
0x00005db7      8d7c3f01       lea edi, [rdi + rdi + 1]
0x00005dbb      e932fbffff     jmp 0x58f2
0x00005dc0      41bb01000000   mov r11d, 1
0x00005dc6      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x00005dd0      e981fdffff     jmp 0x5b56
0x00005dd5      b801000000     mov eax, 1
0x00005dda      4c89c5         mov rbp, r8
0x00005ddd      e986fbffff     jmp 0x5968
0x00005de2      b801000000     mov eax, 1
0x00005de7      4c89d5         mov rbp, r10
0x00005dea      e979fbffff     jmp 0x5968
0x00005def      488d0d2afa00.  lea rcx, obj.__PRETTY_FUNCTION__.4162   ; 0x15820 ; "xstrtoimax"
0x00005df6      488d3503f900.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0x15700 ; "../coreutils-8.31/lib/xstrtol.c"
0x00005dfd      488d3d1cf900.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0x15720 ; "0 <= strtol_base && strtol_base <= 36"
0x00005e04      ba54000000     mov edx, 0x54                           ; 'T'
0x00005e09      e842bcffff     call sym.imp.__assert_fail
0x00005e0e      e8cdbbffff     call sym.imp.__stack_chk_fail
0x00005e13      662e0f1f8400.  nop word cs:[rax + rax]
0x00005e1d      0f1f00         nop dword [rax]
;-- rpl_fclose:
0x00005e20      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00005e22      55             push rbp
0x00005e23      53             push rbx
0x00005e24      4889fb         mov rbx, rdi
0x00005e27      e8b4bcffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x00005e2c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x00005e2e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00005e31      7854           js 0x5e87                               ; ../coreutils-8.31/lib/fclose.c:66
0x00005e33      e808bdffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00005e38      85c0           test eax, eax
0x00005e3a      752c           jne 0x5e68
0x00005e3c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x00005e3f      e85c000000     call sym.rpl_fflush
0x00005e44      85c0           test eax, eax
0x00005e46      743c           je 0x5e84
0x00005e48      e8a3baffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x00005e4d      448b20         mov r12d, dword [rax]
0x00005e50      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00005e53      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00005e56      e825bbffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x00005e5b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x00005e5e      7530           jne 0x5e90
0x00005e60      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00005e61      5d             pop rbp
0x00005e62      415c           pop r12
0x00005e64      c3             ret
0x00005e65      0f1f00         nop dword [rax]
0x00005e68      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x00005e6b      e870bcffff     call sym.imp.fileno
0x00005e70      31f6           xor esi, esi
0x00005e72      ba01000000     mov edx, 1
0x00005e77      89c7           mov edi, eax
0x00005e79      e8c2bbffff     call sym.imp.lseek
0x00005e7e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005e82      75b8           jne 0x5e3c
0x00005e84      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00005e87      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00005e88      5d             pop rbp
0x00005e89      415c           pop r12
0x00005e8b      e9f0baffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00005e90      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00005e94      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00005e99      ebc5           jmp 0x5e60
0x00005e9b      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x00005ea0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00005ea3      53             push rbx
0x00005ea4      4889fb         mov rbx, rdi
0x00005ea7      7411           je 0x5eba                               ; ../coreutils-8.31/lib/fflush.c:150
0x00005ea9      e892bcffff     call sym.imp.__freading
0x00005eae      85c0           test eax, eax
0x00005eb0      7408           je 0x5eba
0x00005eb2      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00005eb8      750e           jne 0x5ec8
0x00005eba      4889df         mov rdi, rbx
0x00005ebd      5b             pop rbx
0x00005ebe      e95dbcffff     jmp sym.imp.fflush
0x00005ec3      0f1f440000     nop dword [rax + rax]
0x00005ec8      4889df         mov rdi, rbx
0x00005ecb      ba01000000     mov edx, 1
0x00005ed0      31f6           xor esi, esi
0x00005ed2      e809000000     call sym.rpl_fseeko
0x00005ed7      4889df         mov rdi, rbx
0x00005eda      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x00005edb      e940bcffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00005ee0      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00005ee4      48394710       cmp qword [rdi + 0x10], rax
0x00005ee8      7406           je 0x5ef0                               ; ../coreutils-8.31/lib/fseeko.c:32
0x00005eea      e9d1bcffff     jmp sym.imp.fseeko
0x00005eef      90             nop
0x00005ef0      488b4720       mov rax, qword [rdi + 0x20]
0x00005ef4      48394728       cmp qword [rdi + 0x28], rax
0x00005ef8      75f0           jne 0x5eea                              ; ../coreutils-8.31/lib/fseeko.c:33
0x00005efa      48837f4800     cmp qword [rdi + 0x48], 0
0x00005eff      75e9           jne 0x5eea                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00005f01      4154           push r12
0x00005f03      55             push rbp
0x00005f04      4189d4         mov r12d, edx
0x00005f07      53             push rbx
0x00005f08      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x00005f0b      4889fb         mov rbx, rdi
0x00005f0e      e8cdbbffff     call sym.imp.fileno
0x00005f13      4489e2         mov edx, r12d
0x00005f16      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00005f19      89c7           mov edi, eax
0x00005f1b      e820bbffff     call sym.imp.lseek
0x00005f20      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005f24      740c           je 0x5f32
0x00005f26      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00005f29      488983900000.  mov qword [rbx + 0x90], rax
0x00005f30      31c0           xor eax, eax
0x00005f32      5b             pop rbx
0x00005f33      5d             pop rbp
0x00005f34      415c           pop r12
0x00005f36      c3             ret
0x00005f37      660f1f840000.  nop word [rax + rax]
;-- rpl_mbrtowc:
0x00005f40      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00005f42      4154           push r12
0x00005f44      4989f5         mov r13, rsi
0x00005f47      55             push rbp
0x00005f48      53             push rbx
0x00005f49      4889fb         mov rbx, rdi
0x00005f4c      4989d4         mov r12, rdx
0x00005f4f      4883ec18       sub rsp, 0x18
0x00005f53      64488b042528.  mov rax, qword fs:[0x28]
0x00005f5c      4889442408     mov qword [rsp + 8], rax
0x00005f61      31c0           xor eax, eax
0x00005f63      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00005f68      4885ff         test rdi, rdi
0x00005f6b      480f44d8       cmove rbx, rax
0x00005f6f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00005f72      e889baffff     call sym.imp.mbrtowc
0x00005f77      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00005f7b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00005f7e      7620           jbe 0x5fa0                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00005f80      4d85e4         test r12, r12
0x00005f83      741b           je 0x5fa0
0x00005f85      31ff           xor edi, edi
0x00005f87      e8d4e20000     call sym.hard_locale
0x00005f8c      84c0           test al, al
0x00005f8e      7510           jne 0x5fa0
0x00005f90      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00005f95      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x00005f9a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00005f9c      0f1f4000       nop dword [rax]
0x00005fa0      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00005fa5      644833142528.  xor rdx, qword fs:[0x28]
0x00005fae      4889e8         mov rax, rbp
0x00005fb1      750b           jne 0x5fbe
0x00005fb3      4883c418       add rsp, 0x18
0x00005fb7      5b             pop rbx
0x00005fb8      5d             pop rbp
0x00005fb9      415c           pop r12
0x00005fbb      415d           pop r13
0x00005fbd      c3             ret
0x00005fbe      e81dbaffff     call sym.imp.__stack_chk_fail
0x00005fc3      662e0f1f8400.  nop word cs:[rax + rax]
0x00005fcd      0f1f00         nop dword [rax]
;-- peek_token_bracket:
0x00005fd0      488b4648       mov rax, qword [rsi + 0x48]             ; ../coreutils-8.31/lib/regcomp.c:2026
0x00005fd4      48394668       cmp qword [rsi + 0x68], rax
0x00005fd8      7e56           jle 0x6030
0x00005fda      4c8b4608       mov r8, qword [rsi + 8]                 ; ../coreutils-8.31/lib/regcomp.c:2033
0x00005fde      83be90000000.  cmp dword [rsi + 0x90], 1               ; ../coreutils-8.31/lib/regcomp.c:2037
0x00005fe5      410fb60c00     movzx ecx, byte [r8 + rax]              ; ../coreutils-8.31/lib/regcomp.c:2033
0x00005fea      880f           mov byte [rdi], cl                      ; ../coreutils-8.31/lib/regcomp.c:2034
0x00005fec      7e15           jle 0x6003                              ; ../coreutils-8.31/lib/regcomp.c:2037
0x00005fee      483b4630       cmp rax, qword [rsi + 0x30]
0x00005ff2      740f           je 0x6003
0x00005ff4      4c8b4e10       mov r9, qword [rsi + 0x10]              ; ../coreutils-8.31/lib/regcomp.c:2038
0x00005ff8      41833c81ff     cmp dword [r9 + rax*4], 0xffffffff
0x00005ffd      0f847c000000   je 0x607f
0x00006003      80f95c         cmp cl, 0x5c                            ; ../coreutils-8.31/lib/regcomp.c:2045
0x00006006      7468           je 0x6070
0x00006008      80f95b         cmp cl, 0x5b                            ; ../coreutils-8.31/lib/regcomp.c:2056
0x0000600b      7433           je 0x6040
0x0000600d      80f95d         cmp cl, 0x5d                            ; ../coreutils-8.31/lib/regcomp.c:2091
0x00006010      0f849a000000   je 0x60b0
0x00006016      80f95e         cmp cl, 0x5e
0x00006019      0f8481000000   je 0x60a0
0x0000601f      80f92d         cmp cl, 0x2d
0x00006022      755b           jne 0x607f
0x00006024      c6470816       mov byte [rdi + 8], 0x16                ; ../coreutils-8.31/lib/regcomp.c:2094 ; [0x16:1]=0
0x00006028      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regcomp.c:2105
0x0000602d      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2095
0x0000602e      6690           nop
0x00006030      c6470802       mov byte [rdi + 8], 2                   ; ../coreutils-8.31/lib/regcomp.c:2030
0x00006034      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/regcomp.c:2031
0x00006036      c3             ret
0x00006037      660f1f840000.  nop word [rax + rax]
0x00006040      488d4801       lea rcx, [rax + 1]                      ; ../coreutils-8.31/lib/regcomp.c:2060
0x00006044      483b4e58       cmp rcx, qword [rsi + 0x58]
0x00006048      7d46           jge 0x6090
0x0000604a      410fb6440001   movzx eax, byte [r8 + rax + 1]          ; ../coreutils-8.31/lib/regcomp.c:2061
0x00006050      3c3a           cmp al, 0x3a                            ; ../coreutils-8.31/lib/regcomp.c:2066
0x00006052      8807           mov byte [rdi], al                      ; ../coreutils-8.31/lib/regcomp.c:2064
0x00006054      0f8496000000   je 0x60f0                               ; ../coreutils-8.31/lib/regcomp.c:2066
0x0000605a      3c3d           cmp al, 0x3d
0x0000605c      0f847e000000   je 0x60e0
0x00006062      3c2e           cmp al, 0x2e
0x00006064      752a           jne 0x6090
0x00006066      c647081a       mov byte [rdi + 8], 0x1a                ; ../coreutils-8.31/lib/regcomp.c:2069 ; [0x1a:1]=0
0x0000606a      b802000000     mov eax, 2                              ; ../coreutils-8.31/lib/regcomp.c:2065
0x0000606f      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2070
0x00006070      83e201         and edx, 1                              ; ../coreutils-8.31/lib/regcomp.c:2045
0x00006073      740a           je 0x607f
0x00006075      488d5001       lea rdx, [rax + 1]                      ; ../coreutils-8.31/lib/regcomp.c:2046
0x00006079      483b5658       cmp rdx, qword [rsi + 0x58]
0x0000607d      7c41           jl 0x60c0
0x0000607f      c6470801       mov byte [rdi + 8], 1                   ; ../coreutils-8.31/lib/regcomp.c:2103
0x00006083      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regcomp.c:2105
0x00006088      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2106
0x00006089      0f1f80000000.  nop dword [rax]
0x00006090      c6470801       mov byte [rdi + 8], 1                   ; ../coreutils-8.31/lib/regcomp.c:2084
0x00006094      c6075b         mov byte [rdi], 0x5b                    ; ../coreutils-8.31/lib/regcomp.c:2085 ; '['
                                                                       ; [0x5b:1]=0
0x00006097      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regcomp.c:2086
0x0000609c      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2087
0x0000609d      0f1f00         nop dword [rax]
0x000060a0      c6470819       mov byte [rdi + 8], 0x19                ; ../coreutils-8.31/lib/regcomp.c:2100 ; [0x19:1]=35
0x000060a4      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regcomp.c:2105
0x000060a9      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2101
0x000060aa      660f1f440000   nop word [rax + rax]
0x000060b0      c6470815       mov byte [rdi + 8], 0x15                ; ../coreutils-8.31/lib/regcomp.c:2097 ; [0x15:1]=0
0x000060b4      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regcomp.c:2105
0x000060b9      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2098
0x000060ba      660f1f440000   nop word [rax + rax]
0x000060c0      48895648       mov qword [rsi + 0x48], rdx             ; ../coreutils-8.31/lib/regcomp.c:2050
0x000060c4      410fb6440001   movzx eax, byte [r8 + rax + 1]          ; ../coreutils-8.31/lib/regcomp.c:2051
0x000060ca      c6470801       mov byte [rdi + 8], 1                   ; ../coreutils-8.31/lib/regcomp.c:2053
0x000060ce      8807           mov byte [rdi], al                      ; ../coreutils-8.31/lib/regcomp.c:2052
0x000060d0      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regcomp.c:2054
0x000060d5      c3             ret
0x000060d6      662e0f1f8400.  nop word cs:[rax + rax]
0x000060e0      c647081c       mov byte [rdi + 8], 0x1c                ; ../coreutils-8.31/lib/regcomp.c:2073 ; [0x1c:1]=0
0x000060e4      b802000000     mov eax, 2                              ; ../coreutils-8.31/lib/regcomp.c:2065
0x000060e9      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2074
0x000060ea      660f1f440000   nop word [rax + rax]
0x000060f0      83e204         and edx, 4                              ; ../coreutils-8.31/lib/regcomp.c:2077
0x000060f3      749b           je 0x6090
0x000060f5      c647081e       mov byte [rdi + 8], 0x1e                ; ../coreutils-8.31/lib/regcomp.c:2079 ; [0x1e:1]=0
0x000060f9      b802000000     mov eax, 2                              ; ../coreutils-8.31/lib/regcomp.c:2065
0x000060fe      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2080
0x000060ff      90             nop
;-- mark_opt_subexp:
0x00006100      807e3011       cmp byte [rsi + 0x30], 0x11             ; ../coreutils-8.31/lib/regcomp.c:3858
0x00006104      740a           je 0x6110
0x00006106      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/regcomp.c:3864
0x00006108      c3             ret
0x00006109      0f1f80000000.  nop dword [rax]
0x00006110      483b7e28       cmp rdi, qword [rsi + 0x28]             ; ../coreutils-8.31/lib/regcomp.c:3860
0x00006114      75f0           jne 0x6106
0x00006116      804e3208       or byte [rsi + 0x32], 8                 ; ../coreutils-8.31/lib/regcomp.c:3861
0x0000611a      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/regcomp.c:3864
0x0000611c      c3             ret
0x0000611d      0f1f00         nop dword [rax]
;-- check_dst_limits_calc_pos_1:
0x00006120      4157           push r15                                ; ../coreutils-8.31/lib/regexec.c:1905
0x00006122      4156           push r14
0x00006124      4989d1         mov r9, rdx
0x00006127      4155           push r13
0x00006129      4154           push r12
0x0000612b      488d1449       lea rdx, [rcx + rcx*2]                  ; ../coreutils-8.31/lib/regexec.c:1907
0x0000612f      55             push rbp                                ; ../coreutils-8.31/lib/regexec.c:1905
0x00006130      53             push rbx
0x00006131      4189f7         mov r15d, esi
0x00006134      4883ec48       sub rsp, 0x48
0x00006138      4c8bb7980000.  mov r14, qword [rdi + 0x98]             ; ../coreutils-8.31/lib/regexec.c:1906
0x0000613f      48893c24       mov qword [rsp], rdi                    ; ../coreutils-8.31/lib/regexec.c:1905
0x00006143      498b4630       mov rax, qword [r14 + 0x30]             ; ../coreutils-8.31/lib/regexec.c:1907
0x00006147      4c8d24d0       lea r12, [rax + rdx*8]
0x0000614b      49837c240800   cmp qword [r12 + 8], 0                  ; ../coreutils-8.31/lib/regexec.c:1912
0x00006151      0f8e8e010000   jle 0x62e5
0x00006157      4b8d0480       lea rax, [r8 + r8*4]                    ; ../coreutils-8.31/lib/regexec.c:1920
0x0000615b      4989cb         mov r11, rcx
0x0000615e      4489c9         mov ecx, r9d
0x00006161      4d89c2         mov r10, r8
0x00006164      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/regexec.c:1912
0x00006166      89742420       mov dword [rsp + 0x20], esi             ; ../coreutils-8.31/lib/regexec.c:1971
0x0000616a      48c1e003       shl rax, 3                              ; ../coreutils-8.31/lib/regexec.c:1920
0x0000616e      4d89cf         mov r15, r9                             ; ../coreutils-8.31/lib/regexec.c:1971
0x00006171      4c895c2410     mov qword [rsp + 0x10], r11
0x00006176      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/regexec.c:1920
0x0000617b      b801000000     mov eax, 1
0x00006180      48d3e0         shl rax, cl
0x00006183      4889442418     mov qword [rsp + 0x18], rax
0x00006188      f7d0           not eax                                 ; ../coreutils-8.31/lib/regexec.c:1959
0x0000618a      6689442426     mov word [rsp + 0x26], ax
0x0000618f      89f0           mov eax, esi                            ; ../coreutils-8.31/lib/regexec.c:1966
0x00006191      83e001         and eax, 1
0x00006194      8944240c       mov dword [rsp + 0xc], eax
0x00006198      89f0           mov eax, esi                            ; ../coreutils-8.31/lib/regexec.c:1971
0x0000619a      83e002         and eax, 2
0x0000619d      89442408       mov dword [rsp + 8], eax
0x000061a1      eb22           jmp 0x61c5
0x000061a3      0f1f440000     nop dword [rax + rax]
0x000061a8      80fa09         cmp dl, 9                               ; ../coreutils-8.31/lib/regexec.c:1915
0x000061ab      0f844f010000   je 0x6300
0x000061b1      80fa04         cmp dl, 4
0x000061b4      7452           je 0x6208
0x000061b6      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/regexec.c:1912
0x000061ba      49395c2408     cmp qword [r12 + 8], rbx
0x000061bf      0f8e1b010000   jle 0x62e0
0x000061c5      498b442410     mov rax, qword [r12 + 0x10]             ; ../coreutils-8.31/lib/regexec.c:1914
0x000061ca      488b2cd8       mov rbp, qword [rax + rbx*8]
0x000061ce      4889e8         mov rax, rbp                            ; ../coreutils-8.31/lib/regexec.c:1915
0x000061d1      48c1e004       shl rax, 4
0x000061d5      490306         add rax, qword [r14]
0x000061d8      0fb65008       movzx edx, byte [rax + 8]
0x000061dc      80fa08         cmp dl, 8
0x000061df      75c7           jne 0x61a8
0x000061e1      8b4c240c       mov ecx, dword [rsp + 0xc]              ; ../coreutils-8.31/lib/regexec.c:1966
0x000061e5      85c9           test ecx, ecx
0x000061e7      74cd           je 0x61b6
0x000061e9      4c3938         cmp qword [rax], r15
0x000061ec      75c8           jne 0x61b6
0x000061ee      4883c448       add rsp, 0x48                           ; ../coreutils-8.31/lib/regexec.c:1981
0x000061f2      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/regexec.c:1953 ; -1
0x000061f7      5b             pop rbx                                 ; ../coreutils-8.31/lib/regexec.c:1981
0x000061f8      5d             pop rbp
0x000061f9      415c           pop r12
0x000061fb      415d           pop r13
0x000061fd      415e           pop r14
0x000061ff      415f           pop r15
0x00006201      c3             ret
0x00006202      660f1f440000   nop word [rax + rax]
0x00006208      4983faff       cmp r10, 0xffffffffffffffff             ; ../coreutils-8.31/lib/regexec.c:1918
0x0000620c      74a8           je 0x61b6
0x0000620e      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/regexec.c:1920
0x00006212      4c8b6c2428     mov r13, qword [rsp + 0x28]
0x00006217      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/regexec.c:1940
0x0000621a      4c89642430     mov qword [rsp + 0x30], r12
0x0000621f      48895c2438     mov qword [rsp + 0x38], rbx
0x00006224      4d89d4         mov r12, r10
0x00006227      4c03a8d80000.  add r13, qword [rax + 0xd8]             ; ../coreutils-8.31/lib/regexec.c:1920
0x0000622e      488d446d00     lea rax, [rbp + rbp*2]                  ; ../coreutils-8.31/lib/regexec.c:1940
0x00006233      4c89f5         mov rbp, r14
0x00006236      4989fe         mov r14, rdi
0x00006239      48c1e003       shl rax, 3
0x0000623d      4889c3         mov rbx, rax
0x00006240      4d397500       cmp qword [r13], r14                    ; ../coreutils-8.31/lib/regexec.c:1926
0x00006244      756a           jne 0x62b0
0x00006246      4983ff3f       cmp r15, 0x3f                           ; ../coreutils-8.31/lib/regexec.c:1929
0x0000624a      7f0c           jg 0x6258
0x0000624c      410fb74522     movzx eax, word [r13 + 0x22]            ; ../coreutils-8.31/lib/regexec.c:1930
0x00006251      4885442418     test qword [rsp + 0x18], rax
0x00006256      7458           je 0x62b0
0x00006258      488b4528       mov rax, qword [rbp + 0x28]             ; ../coreutils-8.31/lib/regexec.c:1940
0x0000625c      488b441810     mov rax, qword [rax + rbx + 0x10]
0x00006261      488b08         mov rcx, qword [rax]
0x00006264      48394c2410     cmp qword [rsp + 0x10], rcx             ; ../coreutils-8.31/lib/regexec.c:1941
0x00006269      0f84c1000000   je 0x6330
0x0000626f      8b742420       mov esi, dword [rsp + 0x20]             ; ../coreutils-8.31/lib/regexec.c:1949
0x00006273      488b3c24       mov rdi, qword [rsp]
0x00006277      4d89e0         mov r8, r12
0x0000627a      4c89fa         mov rdx, r15
0x0000627d      e89efeffff     call sym.check_dst_limits_calc_pos_1
0x00006282      83f8ff         cmp eax, 0xffffffff                     ; ../coreutils-8.31/lib/regexec.c:1952
0x00006285      0f8463ffffff   je 0x61ee
0x0000628b      85c0           test eax, eax                           ; ../coreutils-8.31/lib/regexec.c:1954
0x0000628d      7508           jne 0x6297
0x0000628f      8b742408       mov esi, dword [rsp + 8]
0x00006293      85f6           test esi, esi
0x00006295      757e           jne 0x6315
0x00006297      4983ff3f       cmp r15, 0x3f                           ; ../coreutils-8.31/lib/regexec.c:1957
0x0000629b      7f13           jg 0x62b0
0x0000629d      0fb7442426     movzx eax, word [rsp + 0x26]            ; ../coreutils-8.31/lib/regexec.c:1959
0x000062a2      6641214522     and word [r13 + 0x22], ax
0x000062a7      660f1f840000.  nop word [rax + rax]
0x000062b0      4983c528       add r13, 0x28                           ; ../coreutils-8.31/lib/regexec.c:1961
0x000062b4      41807df800     cmp byte [r13 - 8], 0
0x000062b9      7585           jne 0x6240
0x000062bb      488b5c2438     mov rbx, qword [rsp + 0x38]
0x000062c0      4d89e2         mov r10, r12
0x000062c3      4c8b642430     mov r12, qword [rsp + 0x30]
0x000062c8      4989ee         mov r14, rbp
0x000062cb      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/regexec.c:1912
0x000062cf      49395c2408     cmp qword [r12 + 8], rbx                ; ../coreutils-8.31/lib/regexec.c:1852
0x000062d4      0f8febfeffff   jg 0x61c5
0x000062da      660f1f440000   nop word [rax + rax]
0x000062e0      448b7c2420     mov r15d, dword [rsp + 0x20]
0x000062e5      4883c448       add rsp, 0x48
0x000062e9      4489f8         mov eax, r15d
0x000062ec      5b             pop rbx
0x000062ed      d1f8           sar eax, 1
0x000062ef      5d             pop rbp
0x000062f0      415c           pop r12
0x000062f2      415d           pop r13                                 ; ../coreutils-8.31/lib/regexec.c:1843
0x000062f4      415e           pop r14
0x000062f6      415f           pop r15
0x000062f8      c3             ret
0x000062f9      0f1f80000000.  nop dword [rax]
0x00006300      8b542408       mov edx, dword [rsp + 8]
0x00006304      85d2           test edx, edx
0x00006306      0f84aafeffff   je 0x61b6
0x0000630c      4c3938         cmp qword [rax], r15
0x0000630f      0f85a1feffff   jne 0x61b6
0x00006315      4883c448       add rsp, 0x48
0x00006319      31c0           xor eax, eax
0x0000631b      5b             pop rbx
0x0000631c      5d             pop rbp
0x0000631d      415c           pop r12
0x0000631f      415d           pop r13
0x00006321      415e           pop r14                                 ; ../coreutils-8.31/lib/regexec.c:1815
0x00006323      415f           pop r15
0x00006325      c3             ret
0x00006326      662e0f1f8400.  nop word cs:[rax + rax]
0x00006330      448b7c2420     mov r15d, dword [rsp + 0x20]
0x00006335      4883c448       add rsp, 0x48
0x00006339      5b             pop rbx
0x0000633a      5d             pop rbp
0x0000633b      4489f8         mov eax, r15d
0x0000633e      83e001         and eax, 1
0x00006341      415c           pop r12
0x00006343      f7d8           neg eax
0x00006345      415d           pop r13                                 ; ../coreutils-8.31/lib/regexec.c:1864
0x00006347      415e           pop r14
0x00006349      415f           pop r15
0x0000634b      c3             ret
0x0000634c      0f1f4000       nop dword [rax]
;-- check_dst_limits_calc_pos:
0x00006350      488b87d80000.  mov rax, qword [rdi + 0xd8]
0x00006357      488d34b6       lea rsi, [rsi + rsi*4]                  ; ../coreutils-8.31/lib/regexec.c:1871
0x0000635b      488d04f0       lea rax, [rax + rsi*8]
0x0000635f      4c8b5010       mov r10, qword [rax + 0x10]
0x00006363      4d39c2         cmp r10, r8                             ; ../coreutils-8.31/lib/regexec.c:1872
0x00006366      7f48           jg 0x63b0
0x00006368      488b4018       mov rax, qword [rax + 0x18]             ; ../coreutils-8.31/lib/regexec.c:1874
0x0000636c      4c39c0         cmp rax, r8
0x0000636f      7c1f           jl 0x6390                               ; ../coreutils-8.31/lib/regexec.c:1879
0x00006371      31f6           xor esi, esi
0x00006373      4d39c2         cmp r10, r8
0x00006376      400f94c6       sete sil                                ; ../coreutils-8.31/lib/regexec.c:1868
0x0000637a      83ce02         or esi, 2
0x0000637d      4c39c0         cmp rax, r8
0x00006380      7423           je 0x63a5
0x00006382      31c0           xor eax, eax
0x00006384      4d39c2         cmp r10, r8
0x00006387      7417           je 0x63a0
0x00006389      f3c3           ret
0x0000638b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/regexec.c:1877
0x00006390      b801000000     mov eax, 1
0x00006395      c3             ret
0x00006396      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/regexec.c:1865
0x000063a0      be01000000     mov esi, 1
0x000063a5      4d89c8         mov r8, r9
0x000063a8      e973fdffff     jmp sym.check_dst_limits_calc_pos_1
0x000063ad      0f1f00         nop dword [rax]
0x000063b0      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/regcomp.c:1100 ; -1
0x000063b5      c3             ret
0x000063b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- postorder:
0x000063c0      4154           push r12
0x000063c2      4989f4         mov r12, rsi                            ; ../coreutils-8.31/lib/regcomp.c:1107
0x000063c5      55             push rbp
0x000063c6      4889d5         mov rbp, rdx
0x000063c9      53             push rbx
0x000063ca      4889fb         mov rbx, rdi
0x000063cd      eb04           jmp 0x63d3
0x000063cf      90             nop
0x000063d0      4889c3         mov rbx, rax
0x000063d3      488b4308       mov rax, qword [rbx + 8]
0x000063d7      4885c0         test rax, rax
0x000063da      75f4           jne 0x63d0
0x000063dc      488b4310       mov rax, qword [rbx + 0x10]
0x000063e0      4885c0         test rax, rax
0x000063e3      75eb           jne 0x63d0
0x000063e5      4889de         mov rsi, rbx
0x000063e8      4889ef         mov rdi, rbp
0x000063eb      41ffd4         call r12
0x000063ee      85c0           test eax, eax
0x000063f0      7534           jne 0x6426
0x000063f2      660f1f440000   nop word [rax + rax]
0x000063f8      488b13         mov rdx, qword [rbx]
0x000063fb      4885d2         test rdx, rdx
0x000063fe      7426           je 0x6426
0x00006400      488b4210       mov rax, qword [rdx + 0x10]
0x00006404      4839d8         cmp rax, rbx
0x00006407      4889d3         mov rbx, rdx
0x0000640a      400f94c6       sete sil
0x0000640e      4885c0         test rax, rax
0x00006411      0f94c1         sete cl
0x00006414      4008ce         or sil, cl
0x00006417      74b7           je 0x63d0
0x00006419      4889de         mov rsi, rbx
0x0000641c      4889ef         mov rdi, rbp
0x0000641f      41ffd4         call r12
0x00006422      85c0           test eax, eax
0x00006424      74d2           je 0x63f8
0x00006426      5b             pop rbx
0x00006427      5d             pop rbp
0x00006428      415c           pop r12
0x0000642a      c3             ret
0x0000642b      0f1f440000     nop dword [rax + rax]
;-- preorder:
0x00006430      4154           push r12
0x00006432      4989f4         mov r12, rsi                            ; ../coreutils-8.31/lib/regcomp.c:1138
0x00006435      55             push rbp
0x00006436      4889d5         mov rbp, rdx                            ; ../coreutils-8.31/lib/regcomp.c:1142
0x00006439      53             push rbx
0x0000643a      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/regcomp.c:1146
0x0000643d      eb04           jmp 0x6443
0x0000643f      90             nop
0x00006440      4889d3         mov rbx, rdx
0x00006443      4889de         mov rsi, rbx
0x00006446      4889ef         mov rdi, rbp
0x00006449      41ffd4         call r12                                ; ../coreutils-8.31/lib/regcomp.c:1147
0x0000644c      85c0           test eax, eax
0x0000644e      752c           jne 0x647c
0x00006450      488b5308       mov rdx, qword [rbx + 8]
0x00006454      31c9           xor ecx, ecx
0x00006456      4885d2         test rdx, rdx
0x00006459      75e5           jne 0x6440
0x0000645b      eb06           jmp 0x6463
0x0000645d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/regcomp.c:1151
0x00006460      4889d3         mov rbx, rdx
0x00006463      488b5310       mov rdx, qword [rbx + 0x10]
0x00006467      4839ca         cmp rdx, rcx
0x0000646a      7405           je 0x6471
0x0000646c      4885d2         test rdx, rdx
0x0000646f      75cf           jne 0x6440
0x00006471      488b13         mov rdx, qword [rbx]
0x00006474      4889d9         mov rcx, rbx
0x00006477      4885d2         test rdx, rdx
0x0000647a      75e4           jne 0x6460
0x0000647c      5b             pop rbx
0x0000647d      5d             pop rbp
0x0000647e      415c           pop r12
0x00006480      c3             ret
0x00006481      0f1f440000     nop dword [rax + rax]
0x00006486      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_string_realloc_buffers:
0x00006490      55             push rbp
0x00006491      53             push rbx
0x00006492      4889f5         mov rbp, rsi
0x00006495      4889fb         mov rbx, rdi
0x00006498      4883ec08       sub rsp, 8
0x0000649c      83bf90000000.  cmp dword [rdi + 0x90], 1
0x000064a3      7e48           jle 0x64ed
0x000064a5      48b8ffffffff.  movabs rax, 0x1fffffffffffffff          ; 2305843009213693951
0x000064af      4839c6         cmp rsi, rax
0x000064b2      776c           ja 0x6520
0x000064b4      488b7f10       mov rdi, qword [rdi + 0x10]             ; ../coreutils-8.31/lib/regex_internal.c:28
0x000064b8      488d34b50000.  lea rsi, [rsi*4]                        ; ../coreutils-8.31/lib/regex_internal.c:29
0x000064c0      e89bb6ffff     call sym.imp.realloc
0x000064c5      4885c0         test rax, rax
0x000064c8      7456           je 0x6520
0x000064ca      488b7b18       mov rdi, qword [rbx + 0x18]             ; ../coreutils-8.31/lib/regex_internal.c:32
0x000064ce      48894310       mov qword [rbx + 0x10], rax
0x000064d2      4885ff         test rdi, rdi
0x000064d5      7416           je 0x64ed
0x000064d7      488d34ed0000.  lea rsi, [rbp*8]
0x000064df      e87cb6ffff     call sym.imp.realloc
0x000064e4      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/regex_internal.c:47
0x000064e7      7437           je 0x6520
0x000064e9      48894318       mov qword [rbx + 0x18], rax
0x000064ed      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x000064f4      7512           jne 0x6508
0x000064f6      48896b40       mov qword [rbx + 0x40], rbp
0x000064fa      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/regex_internal.c:42
0x000064fe      31c0           xor eax, eax
0x00006500      5b             pop rbx
0x00006501      5d             pop rbp
0x00006502      c3             ret
0x00006503      0f1f440000     nop dword [rax + rax]
0x00006508      488b7b08       mov rdi, qword [rbx + 8]
0x0000650c      4889ee         mov rsi, rbp
0x0000650f      e84cb6ffff     call sym.imp.realloc                    ; ../coreutils-8.31/lib/regex_internal.c:48
0x00006514      4885c0         test rax, rax
0x00006517      7407           je 0x6520
0x00006519      48894308       mov qword [rbx + 8], rax
0x0000651d      ebd7           jmp 0x64f6
0x0000651f      90             nop
0x00006520      4883c408       add rsp, 8
0x00006524      b80c000000     mov eax, 0xc
0x00006529      5b             pop rbx
0x0000652a      5d             pop rbp
0x0000652b      c3             ret
0x0000652c      0f1f4000       nop dword [rax]
;-- re_node_set_insert_last:
0x00006530      55             push rbp
0x00006531      53             push rbx
0x00006532      4889f5         mov rbp, rsi
0x00006535      4889fb         mov rbx, rdi
0x00006538      4883ec08       sub rsp, 8
0x0000653c      488b7708       mov rsi, qword [rdi + 8]
0x00006540      483937         cmp qword [rdi], rsi                    ; ../coreutils-8.31/lib/regex_internal.c:1224
0x00006543      488b4710       mov rax, qword [rdi + 0x10]
0x00006547      741f           je 0x6568
0x00006549      488d5601       lea rdx, [rsi + 1]
0x0000654d      48895308       mov qword [rbx + 8], rdx
0x00006551      48892cf0       mov qword [rax + rsi*8], rbp
0x00006555      b801000000     mov eax, 1
0x0000655a      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/regex_internal.c:1214
0x0000655e      5b             pop rbx
0x0000655f      5d             pop rbp
0x00006560      c3             ret
0x00006561      0f1f80000000.  nop dword [rax]
0x00006568      4883c601       add rsi, 1
0x0000656c      488d1436       lea rdx, [rsi + rsi]
0x00006570      48c1e604       shl rsi, 4
0x00006574      488917         mov qword [rdi], rdx
0x00006577      4889c7         mov rdi, rax
0x0000657a      e8e1b5ffff     call sym.imp.realloc
0x0000657f      4885c0         test rax, rax
0x00006582      740c           je 0x6590
0x00006584      48894310       mov qword [rbx + 0x10], rax
0x00006588      488b7308       mov rsi, qword [rbx + 8]
0x0000658c      ebbb           jmp 0x6549
0x0000658e      6690           nop
0x00006590      31c0           xor eax, eax
0x00006592      ebc6           jmp 0x655a                              ; ../coreutils-8.31/lib/regex_internal.c:1160
0x00006594      6690           nop
0x00006596      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_node_set_insert:
0x000065a0      55             push rbp
0x000065a1      53             push rbx
0x000065a2      4889f5         mov rbp, rsi
0x000065a5      4889fb         mov rbx, rdi
0x000065a8      4883ec08       sub rsp, 8
0x000065ac      488b17         mov rdx, qword [rdi]
0x000065af      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/regex_internal.c:1168
0x000065b2      7424           je 0x65d8
0x000065b4      488b7708       mov rsi, qword [rdi + 8]                ; ../coreutils-8.31/lib/regex_internal.c:1200
0x000065b8      488b4710       mov rax, qword [rdi + 0x10]
0x000065bc      4885f6         test rsi, rsi
0x000065bf      754f           jne 0x6610
0x000065c1      488928         mov qword [rax], rbp
0x000065c4      4883470801     add qword [rdi + 8], 1
0x000065c9      b801000000     mov eax, 1
0x000065ce      4883c408       add rsp, 8
0x000065d2      5b             pop rbx
0x000065d3      5d             pop rbp
0x000065d4      c3             ret
0x000065d5      0f1f00         nop dword [rax]
0x000065d8      48c707010000.  mov qword [rdi], 1
0x000065df      48c747080100.  mov qword [rdi + 8], 1
0x000065e7      bf08000000     mov edi, 8
0x000065ec      e80fb5ffff     call sym.imp.malloc
0x000065f1      4885c0         test rax, rax
0x000065f4      48894310       mov qword [rbx + 0x10], rax
0x000065f8      0f848a000000   je 0x6688
0x000065fe      488928         mov qword [rax], rbp
0x00006601      4883c408       add rsp, 8
0x00006605      b801000000     mov eax, 1
0x0000660a      5b             pop rbx
0x0000660b      5d             pop rbp
0x0000660c      c3             ret                                     ; ../coreutils-8.31/lib/regex_internal.c:1187
0x0000660d      0f1f00         nop dword [rax]
0x00006610      4839f2         cmp rdx, rsi
0x00006613      0f8487000000   je 0x66a0
0x00006619      483928         cmp qword [rax], rbp
0x0000661c      488d14f50000.  lea rdx, [rsi*8]
0x00006624      7e3a           jle 0x6660
0x00006626      4885f6         test rsi, rsi
0x00006629      7e18           jle 0x6643                              ; ../coreutils-8.31/lib/regex_internal.c:1197
0x0000662b      4801c2         add rdx, rax
0x0000662e      6690           nop
0x00006630      488b4af8       mov rcx, qword [rdx - 8]
0x00006634      4883ea08       sub rdx, 8
0x00006638      48894a08       mov qword [rdx + 8], rcx
0x0000663c      4839d0         cmp rax, rdx
0x0000663f      75ef           jne 0x6630
0x00006641      31d2           xor edx, edx
0x00006643      48892c10       mov qword [rax + rdx], rbp
0x00006647      b801000000     mov eax, 1
0x0000664c      4883430801     add qword [rbx + 8], 1
0x00006651      e978ffffff     jmp 0x65ce
0x00006656      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/regex_internal.c:1193
0x00006660      488b4c10f8     mov rcx, qword [rax + rdx - 8]
0x00006665      4839cd         cmp rbp, rcx
0x00006668      7dd9           jge 0x6643
0x0000666a      660f1f440000   nop word [rax + rax]
0x00006670      48890c10       mov qword [rax + rdx], rcx
0x00006674      4883ea08       sub rdx, 8
0x00006678      488b4c10f8     mov rcx, qword [rax + rdx - 8]
0x0000667d      4839e9         cmp rcx, rbp
0x00006680      7fee           jg 0x6670
0x00006682      ebbf           jmp 0x6643
0x00006684      0f1f4000       nop dword [rax]
0x00006688      48c743080000.  mov qword [rbx + 8], 0
0x00006690      48c703000000.  mov qword [rbx], 0
0x00006697      e932ffffff     jmp 0x65ce
0x0000669c      0f1f4000       nop dword [rax]
0x000066a0      488d1436       lea rdx, [rsi + rsi]
0x000066a4      48c1e604       shl rsi, 4
0x000066a8      488917         mov qword [rdi], rdx
0x000066ab      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/regex_internal.c:1178
0x000066ae      e8adb4ffff     call sym.imp.realloc
0x000066b3      4885c0         test rax, rax
0x000066b6      740d           je 0x66c5                               ; ../coreutils-8.31/lib/regex_internal.c:1446
0x000066b8      48894310       mov qword [rbx + 0x10], rax
0x000066bc      488b7308       mov rsi, qword [rbx + 8]
0x000066c0      e954ffffff     jmp 0x6619
0x000066c5      31c0           xor eax, eax
0x000066c7      e902ffffff     jmp 0x65ce
0x000066cc      0f1f4000       nop dword [rax]
;-- register_state:
0x000066d0      4156           push r14
0x000066d2      4155           push r13
0x000066d4      4989fe         mov r14, rdi
0x000066d7      4154           push r12
0x000066d9      55             push rbp
0x000066da      4989d4         mov r12, rdx                            ; ../coreutils-8.31/lib/regex_internal.c:849
0x000066dd      53             push rbx
0x000066de      488b5e10       mov rbx, qword [rsi + 0x10]
0x000066e2      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/regex_internal.c:847
0x000066e5      488916         mov qword [rsi], rdx
0x000066e8      48c746280000.  mov qword [rsi + 0x28], 0
0x000066f0      4c8d6e20       lea r13, [rsi + 0x20]
0x000066f4      488d3cdd0000.  lea rdi, [rbx*8]                        ; ../coreutils-8.31/lib/regex_internal.c:1455
0x000066fc      48895e20       mov qword [rsi + 0x20], rbx
0x00006700      e8fbb3ffff     call sym.imp.malloc
0x00006705      4885c0         test rax, rax
0x00006708      48894530       mov qword [rbp + 0x30], rax
0x0000670c      7440           je 0x674e
0x0000670e      4885db         test rbx, rbx
0x00006711      7e4d           jle 0x6760
0x00006713      31db           xor ebx, ebx
0x00006715      eb13           jmp 0x672a
0x00006717      660f1f840000.  nop word [rax + rax]
0x00006720      4883c301       add rbx, 1
0x00006724      48395d10       cmp qword [rbp + 0x10], rbx
0x00006728      7e36           jle 0x6760                              ; ../coreutils-8.31/lib/regex_internal.c:1459
0x0000672a      488b4518       mov rax, qword [rbp + 0x18]
0x0000672e      488b34d8       mov rsi, qword [rax + rbx*8]
0x00006732      4889f0         mov rax, rsi
0x00006735      48c1e004       shl rax, 4                              ; ../coreutils-8.31/lib/regex_internal.c:1454
0x00006739      490306         add rax, qword [r14]
0x0000673c      f6400808       test byte [rax + 8], 8
0x00006740      75de           jne 0x6720
0x00006742      4c89ef         mov rdi, r13
0x00006745      e8e6fdffff     call sym.re_node_set_insert_last
0x0000674a      84c0           test al, al
0x0000674c      75d2           jne 0x6720
0x0000674e      5b             pop rbx
0x0000674f      b80c000000     mov eax, 0xc
0x00006754      5d             pop rbp
0x00006755      415c           pop r12
0x00006757      415d           pop r13
0x00006759      415e           pop r14                                 ; ../coreutils-8.31/lib/regex_internal.c:1464
0x0000675b      c3             ret
0x0000675c      0f1f4000       nop dword [rax]
0x00006760      4d23a6880000.  and r12, qword [r14 + 0x88]
0x00006767      498b4640       mov rax, qword [r14 + 0x40]
0x0000676b      4b8d1464       lea rdx, [r12 + r12*2]
0x0000676f      488d1cd0       lea rbx, [rax + rdx*8]
0x00006773      488b13         mov rdx, qword [rbx]                    ; ../coreutils-8.31/lib/regex_internal.c:1476
0x00006776      48395308       cmp qword [rbx + 8], rdx
0x0000677a      488b4310       mov rax, qword [rbx + 0x10]
0x0000677e      488d7201       lea rsi, [rdx + 1]
0x00006782      7e12           jle 0x6796
0x00006784      488933         mov qword [rbx], rsi
0x00006787      48892cd0       mov qword [rax + rdx*8], rbp
0x0000678b      31c0           xor eax, eax
0x0000678d      5b             pop rbx
0x0000678e      5d             pop rbp
0x0000678f      415c           pop r12
0x00006791      415d           pop r13
0x00006793      415e           pop r14
0x00006795      c3             ret
0x00006796      4c8d2436       lea r12, [rsi + rsi]
0x0000679a      4889c7         mov rdi, rax
0x0000679d      48c1e604       shl rsi, 4
0x000067a1      e8bab3ffff     call sym.imp.realloc
0x000067a6      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/regex_internal.c:411
0x000067a9      74a3           je 0x674e
0x000067ab      488b13         mov rdx, qword [rbx]
0x000067ae      48894310       mov qword [rbx + 0x10], rax
0x000067b2      4c896308       mov qword [rbx + 8], r12
0x000067b6      488d7201       lea rsi, [rdx + 1]
0x000067ba      ebc8           jmp 0x6784                              ; ../coreutils-8.31/lib/regex_internal.c:415
0x000067bc      0f1f4000       nop dword [rax]
;-- build_upper_buffer:
0x000067c0      4154           push r12
0x000067c2      4c8b6758       mov r12, qword [rdi + 0x58]
0x000067c6      4c396740       cmp qword [rdi + 0x40], r12
0x000067ca      55             push rbp
0x000067cb      4889fd         mov rbp, rdi
0x000067ce      4c0f4e6740     cmovle r12, qword [rdi + 0x40]          ; ../coreutils-8.31/lib/regex_internal.c:417
0x000067d3      53             push rbx
0x000067d4      488b5f30       mov rbx, qword [rdi + 0x30]
0x000067d8      4939dc         cmp r12, rbx
0x000067db      7e38           jle 0x6815
0x000067dd      e8ceb0ffff     call sym.imp.__ctype_toupper_loc        ; ../coreutils-8.31/lib/regex_internal.c:418
0x000067e2      660f1f440000   nop word [rax + rax]
0x000067e8      488b5500       mov rdx, qword [rbp]                    ; ../coreutils-8.31/lib/regex_internal.c:420
0x000067ec      488b4d78       mov rcx, qword [rbp + 0x78]
0x000067f0      4801da         add rdx, rbx
0x000067f3      48035528       add rdx, qword [rbp + 0x28]
0x000067f7      4885c9         test rcx, rcx
0x000067fa      0fb612         movzx edx, byte [rdx]
0x000067fd      7529           jne 0x6828
0x000067ff      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/regex_internal.c:423
0x00006802      488b4d08       mov rcx, qword [rbp + 8]
0x00006806      8b1496         mov edx, dword [rsi + rdx*4]
0x00006809      881419         mov byte [rcx + rbx], dl
0x0000680c      4883c301       add rbx, 1
0x00006810      4939dc         cmp r12, rbx
0x00006813      75d3           jne 0x67e8
0x00006815      48895d30       mov qword [rbp + 0x30], rbx
0x00006819      48895d38       mov qword [rbp + 0x38], rbx
0x0000681d      5b             pop rbx
0x0000681e      5d             pop rbp
0x0000681f      415c           pop r12
0x00006821      c3             ret
0x00006822      660f1f440000   nop word [rax + rax]
0x00006828      0fb61411       movzx edx, byte [rcx + rdx]
0x0000682c      ebd1           jmp 0x67ff
0x0000682e      6690           nop
;-- build_wcs_buffer:
0x00006830      4157           push r15
0x00006832      4156           push r14
0x00006834      4155           push r13
0x00006836      4154           push r12
0x00006838      55             push rbp
0x00006839      53             push rbx
0x0000683a      4889fb         mov rbx, rdi
0x0000683d      4883ec68       sub rsp, 0x68
0x00006841      4c8b6758       mov r12, qword [rdi + 0x58]
0x00006845      488b6f30       mov rbp, qword [rdi + 0x30]
0x00006849      64488b042528.  mov rax, qword fs:[0x28]
0x00006852      4889442458     mov qword [rsp + 0x58], rax
0x00006857      31c0           xor eax, eax
0x00006859      4c396740       cmp qword [rdi + 0x40], r12
0x0000685d      4c0f4e6740     cmovle r12, qword [rdi + 0x40]
0x00006862      4939ec         cmp r12, rbp                            ; ../coreutils-8.31/lib/regex_internal.c:103
0x00006865      0f8e89000000   jle 0x68f4                              ; ../coreutils-8.31/lib/regex_internal.c:104
0x0000686b      4c8d7720       lea r14, [rdi + 0x20]
0x0000686f      4c8d6c240c     lea r13, [rsp + 0xc]
0x00006874      0f1f4000       nop dword [rax]
0x00006878      488b7b78       mov rdi, qword [rbx + 0x78]
0x0000687c      4c89e2         mov rdx, r12
0x0000687f      4c8b7b20       mov r15, qword [rbx + 0x20]             ; ../coreutils-8.31/lib/regex_internal.c:119
0x00006883      4829ea         sub rdx, rbp
0x00006886      4885ff         test rdi, rdi
0x00006889      0f85e1000000   jne 0x6970
0x0000688f      488b7328       mov rsi, qword [rbx + 0x28]
0x00006893      4801ee         add rsi, rbp
0x00006896      480333         add rsi, qword [rbx]
0x00006899      4c89f1         mov rcx, r14
0x0000689c      4c89ef         mov rdi, r13
0x0000689f      e89cf6ffff     call sym.rpl_mbrtowc
0x000068a4      488d50ff       lea rdx, [rax - 1]
0x000068a8      4883fafd       cmp rdx, 0xfffffffffffffffd
0x000068ac      0f878e000000   ja 0x6940
0x000068b2      4883f8fe       cmp rax, 0xfffffffffffffffe
0x000068b6      8b54240c       mov edx, dword [rsp + 0xc]
0x000068ba      7474           je 0x6930
0x000068bc      488b4b10       mov rcx, qword [rbx + 0x10]
0x000068c0      488d7501       lea rsi, [rbp + 1]
0x000068c4      488d3cad0000.  lea rdi, [rbp*4]
0x000068cc      8914a9         mov dword [rcx + rbp*4], edx
0x000068cf      4801c5         add rbp, rax
0x000068d2      4839ee         cmp rsi, rbp
0x000068d5      7d49           jge 0x6920                              ; ../coreutils-8.31/lib/regex_internal.c:98
0x000068d7      488d543904     lea rdx, [rcx + rdi + 4]
0x000068dc      488d04a9       lea rax, [rcx + rbp*4]
0x000068e0      c702ffffffff   mov dword [rdx], 0xffffffff             ; [0xffffffff:4]=-1 ; -1
0x000068e6      4883c204       add rdx, 4
0x000068ea      4839d0         cmp rax, rdx
0x000068ed      75f1           jne 0x68e0
0x000068ef      4c39e5         cmp rbp, r12
0x000068f2      7c84           jl 0x6878
0x000068f4      488b442458     mov rax, qword [rsp + 0x58]
0x000068f9      644833042528.  xor rax, qword fs:[0x28]
0x00006902      48896b30       mov qword [rbx + 0x30], rbp
0x00006906      48896b38       mov qword [rbx + 0x38], rbp             ; ../coreutils-8.31/lib/regex_internal.c:141
0x0000690a      0f85de000000   jne 0x69ee
0x00006910      4883c468       add rsp, 0x68
0x00006914      5b             pop rbx
0x00006915      5d             pop rbp
0x00006916      415c           pop r12                                 ; ../coreutils-8.31/lib/regex_internal.c:120
0x00006918      415d           pop r13
0x0000691a      415e           pop r14
0x0000691c      415f           pop r15
0x0000691e      c3             ret
0x0000691f      90             nop
0x00006920      4889f5         mov rbp, rsi
0x00006923      4c39e5         cmp rbp, r12
0x00006926      0f8c4cffffff   jl 0x6878                               ; ../coreutils-8.31/lib/regex_internal.c:126
0x0000692c      ebc6           jmp 0x68f4
0x0000692e      6690           nop
0x00006930      488b4358       mov rax, qword [rbx + 0x58]
0x00006934      48394340       cmp qword [rbx + 0x40], rax             ; ../coreutils-8.31/lib/regex_internal.c:127
0x00006938      0f8c9a000000   jl 0x69d8
0x0000693e      6690           nop
0x00006940      488b03         mov rax, qword [rbx]
0x00006943      488b4b78       mov rcx, qword [rbx + 0x78]
0x00006947      4801e8         add rax, rbp
0x0000694a      48034328       add rax, qword [rbx + 0x28]
0x0000694e      4885c9         test rcx, rcx
0x00006951      0fb610         movzx edx, byte [rax]
0x00006954      8954240c       mov dword [rsp + 0xc], edx
0x00006958      0f8583000000   jne 0x69e1
0x0000695e      4c897b20       mov qword [rbx + 0x20], r15
0x00006962      b801000000     mov eax, 1
0x00006967      e950ffffff     jmp 0x68bc
0x0000696c      0f1f4000       nop dword [rax]
0x00006970      8b8b90000000   mov ecx, dword [rbx + 0x90]
0x00006976      31c0           xor eax, eax
0x00006978      488d742410     lea rsi, [rsp + 0x10]
0x0000697d      85c9           test ecx, ecx
0x0000697f      7f20           jg 0x69a1
0x00006981      e913ffffff     jmp 0x6899
0x00006986      662e0f1f8400.  nop word cs:[rax + rax]
0x00006990      4883c001       add rax, 1
0x00006994      4839c2         cmp rdx, rax                            ; ../coreutils-8.31/lib/regex_internal.c:113
0x00006997      0f84fcfeffff   je 0x6899
0x0000699d      488b7b78       mov rdi, qword [rbx + 0x78]
0x000069a1      488b0b         mov rcx, qword [rbx]
0x000069a4      4801e9         add rcx, rbp
0x000069a7      4801c1         add rcx, rax
0x000069aa      48034b28       add rcx, qword [rbx + 0x28]
0x000069ae      0fb609         movzx ecx, byte [rcx]
0x000069b1      0fb60c0f       movzx ecx, byte [rdi + rcx]
0x000069b5      488b7b08       mov rdi, qword [rbx + 8]
0x000069b9      4801ef         add rdi, rbp
0x000069bc      880c07         mov byte [rdi + rax], cl
0x000069bf      880c06         mov byte [rsi + rax], cl
0x000069c2      8d4801         lea ecx, [rax + 1]
0x000069c5      3b8b90000000   cmp ecx, dword [rbx + 0x90]
0x000069cb      7cc3           jl 0x6990
0x000069cd      e9c7feffff     jmp 0x6899
0x000069d2      660f1f440000   nop word [rax + rax]
0x000069d8      4c897b20       mov qword [rbx + 0x20], r15
0x000069dc      e913ffffff     jmp 0x68f4
0x000069e1      0fb61411       movzx edx, byte [rcx + rdx]
0x000069e5      8954240c       mov dword [rsp + 0xc], edx
0x000069e9      e970ffffff     jmp 0x695e
0x000069ee      e8edafffff     call sym.imp.__stack_chk_fail
0x000069f3      0f1f00         nop dword [rax]
0x000069f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- build_wcs_upper_buffer:
0x00006a00      4157           push r15
0x00006a02      4156           push r14                                ; ../coreutils-8.31/lib/regex_internal.c:154
0x00006a04      4989fe         mov r14, rdi
0x00006a07      4155           push r13
0x00006a09      4154           push r12
0x00006a0b      55             push rbp
0x00006a0c      53             push rbx
0x00006a0d      4881eca80000.  sub rsp, 0xa8
0x00006a14      488b5f58       mov rbx, qword [rdi + 0x58]
0x00006a18      4c8b7f30       mov r15, qword [rdi + 0x30]
0x00006a1c      64488b042528.  mov rax, qword fs:[0x28]
0x00006a25      488984249800.  mov qword [rsp + 0x98], rax
0x00006a2d      31c0           xor eax, eax
0x00006a2f      48395f40       cmp qword [rdi + 0x40], rbx             ; ../coreutils-8.31/lib/regex_internal.c:114
0x00006a33      480f4e5f40     cmovle rbx, qword [rdi + 0x40]          ; ../coreutils-8.31/lib/regex_internal.c:105
0x00006a38      80bf8a000000.  cmp byte [rdi + 0x8a], 0
0x00006a3f      750b           jne 0x6a4c
0x00006a41      48837f7800     cmp qword [rdi + 0x78], 0
0x00006a46      0f8484010000   je 0x6bd0
0x00006a4c      4d8b6e38       mov r13, qword [r14 + 0x38]
0x00006a50      4939df         cmp r15, rbx
0x00006a53      7c3b           jl 0x6a90
0x00006a55      4d897e30       mov qword [r14 + 0x30], r15
0x00006a59      4d896e38       mov qword [r14 + 0x38], r13
0x00006a5d      31c0           xor eax, eax
0x00006a5f      488b8c249800.  mov rcx, qword [rsp + 0x98]
0x00006a67      6448330c2528.  xor rcx, qword fs:[0x28]
0x00006a70      0f8584050000   jne 0x6ffa
0x00006a76      4881c4a80000.  add rsp, 0xa8
0x00006a7d      5b             pop rbx
0x00006a7e      5d             pop rbp
0x00006a7f      415c           pop r12
0x00006a81      415d           pop r13
0x00006a83      415e           pop r14
0x00006a85      415f           pop r15
0x00006a87      c3             ret
0x00006a88      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/regex_internal.c:-9
0x00006a90      498d4620       lea rax, [r14 + 0x20]
0x00006a94      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/regex_internal.c:-8
0x00006a99      4889d8         mov rax, rbx
0x00006a9c      4c29f8         sub rax, r15
0x00006a9f      4889442410     mov qword [rsp + 0x10], rax
0x00006aa4      488d442444     lea rax, [rsp + 0x44]
0x00006aa9      4889442420     mov qword [rsp + 0x20], rax             ; ../coreutils-8.31/lib/regex_internal.c:5
0x00006aae      498b5678       mov rdx, qword [r14 + 0x78]
0x00006ab2      498b4620       mov rax, qword [r14 + 0x20]
0x00006ab6      4885d2         test rdx, rdx
0x00006ab9      4889442448     mov qword [rsp + 0x48], rax
0x00006abe      0f8505030000   jne 0x6dc9
0x00006ac4      498b6e28       mov rbp, qword [r14 + 0x28]
0x00006ac8      4c01ed         add rbp, r13
0x00006acb      49032e         add rbp, qword [r14]
0x00006ace      48896c2418     mov qword [rsp + 0x18], rbp
0x00006ad3      488b4c2408     mov rcx, qword [rsp + 8]
0x00006ad8      488b542410     mov rdx, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/regex_internal.c:8
0x00006add      488b742418     mov rsi, qword [rsp + 0x18]
0x00006ae2      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00006ae7      e854f4ffff     call sym.rpl_mbrtowc                    ; ../coreutils-8.31/lib/regex_internal.c:9
0x00006aec      4889c5         mov rbp, rax
0x00006aef      488d40ff       lea rax, [rax - 1]
0x00006af3      4883f8fc       cmp rax, 0xfffffffffffffffc
0x00006af7      4889442420     mov qword [rsp + 0x20], rax
0x00006afc      0f8737030000   ja 0x6e39
0x00006b02      8b542444       mov edx, dword [rsp + 0x44]
0x00006b06      89d7           mov edi, edx
0x00006b08      89542410       mov dword [rsp + 0x10], edx
0x00006b0c      e8dfb0ffff     call sym.imp.towupper
0x00006b11      8b542410       mov edx, dword [rsp + 0x10]
0x00006b15      4189c4         mov r12d, eax
0x00006b18      4c897c2408     mov qword [rsp + 8], r15
0x00006b1d      39c2           cmp edx, eax
0x00006b1f      0f84fb020000   je 0x6e20
0x00006b25      488d4c2450     lea rcx, [rsp + 0x50]                   ; ../coreutils-8.31/lib/regex_internal.c:15
0x00006b2a      488d542448     lea rdx, [rsp + 0x48]
0x00006b2f      89c6           mov esi, eax
0x00006b31      4889cf         mov rdi, rcx
0x00006b34      48894c2410     mov qword [rsp + 0x10], rcx
0x00006b39      e8d2afffff     call sym.imp.wcrtomb
0x00006b3e      4839c5         cmp rbp, rax
0x00006b41      4989c3         mov r11, rax
0x00006b44      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00006b49      0f8587030000   jne 0x6ed6
0x00006b4f      498b7e08       mov rdi, qword [r14 + 8]
0x00006b53      4889ea         mov rdx, rbp
0x00006b56      4889ce         mov rsi, rcx
0x00006b59      4c01ff         add rdi, r15
0x00006b5c      e86fafffff     call sym.imp.memcpy                     ; ../coreutils-8.31/lib/regex_internal.c:70
0x00006b61      4180be8c0000.  cmp byte [r14 + 0x8c], 0
0x00006b69      4a8d442d00     lea rax, [rbp + r13]
0x00006b6e      0f8531030000   jne 0x6ea5                              ; ../coreutils-8.31/lib/regex_internal.c:74
0x00006b74      4983c701       add r15, 1
0x00006b78      488b742408     mov rsi, qword [rsp + 8]
0x00006b7d      498b5610       mov rdx, qword [r14 + 0x10]
0x00006b81      498d4c2fff     lea rcx, [r15 + rbp - 1]
0x00006b86      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/regex_internal.c:75
0x00006b89      4939cf         cmp r15, rcx
0x00006b8c      488d04b50000.  lea rax, [rsi*4]
0x00006b94      448924b2       mov dword [rdx + rsi*4], r12d
0x00006b98      0f8db2feffff   jge 0x6a50
0x00006b9e      488d440204     lea rax, [rdx + rax + 4]
0x00006ba3      488d148a       lea rdx, [rdx + rcx*4]
0x00006ba7      660f1f840000.  nop word [rax + rax]
0x00006bb0      c700ffffffff   mov dword [rax], 0xffffffff             ; [0xffffffff:4]=-1 ; -1
0x00006bb6      4883c004       add rax, 4
0x00006bba      4839c2         cmp rdx, rax
0x00006bbd      75f1           jne 0x6bb0
0x00006bbf      4989cf         mov r15, rcx
0x00006bc2      e989feffff     jmp 0x6a50
0x00006bc7      660f1f840000.  nop word [rax + rax]
0x00006bd0      80bf8c000000.  cmp byte [rdi + 0x8c], 0
0x00006bd7      0f856ffeffff   jne 0x6a4c
0x00006bdd      4939df         cmp r15, rbx
0x00006be0      0f8d92010000   jge 0x6d78
0x00006be6      488d4720       lea rax, [rdi + 0x20]                   ; ../coreutils-8.31/lib/regex_internal.c:-81
0x00006bea      4889442408     mov qword [rsp + 8], rax
0x00006bef      488d442444     lea rax, [rsp + 0x44]
0x00006bf4      4889442430     mov qword [rsp + 0x30], rax
0x00006bf9      488d442448     lea rax, [rsp + 0x48]
0x00006bfe      4889442438     mov qword [rsp + 0x38], rax             ; ../coreutils-8.31/lib/regex_internal.c:-80
0x00006c03      488d442450     lea rax, [rsp + 0x50]
0x00006c08      4889442428     mov qword [rsp + 0x28], rax
0x00006c0d      0f1f00         nop dword [rax]
0x00006c10      498b6e28       mov rbp, qword [r14 + 0x28]             ; ../coreutils-8.31/lib/regex_internal.c:-67
0x00006c14      4d89fd         mov r13, r15                            ; ../coreutils-8.31/lib/regex_internal.c:-66
0x00006c17      4c01fd         add rbp, r15
0x00006c1a      49032e         add rbp, qword [r14]
0x00006c1d      440fb66500     movzx r12d, byte [rbp]
0x00006c22      41f6c480       test r12b, 0x80
0x00006c26      7512           jne 0x6c3a
0x00006c28      488b7c2408     mov rdi, qword [rsp + 8]
0x00006c2d      e80eb0ffff     call sym.imp.mbsinit
0x00006c32      85c0           test eax, eax
0x00006c34      0f85ee000000   jne 0x6d28
0x00006c3a      498b4620       mov rax, qword [r14 + 0x20]
0x00006c3e      488b7c2430     mov rdi, qword [rsp + 0x30]             ; ../coreutils-8.31/lib/regex_internal.c:-63
0x00006c43      4889da         mov rdx, rbx
0x00006c46      488b4c2408     mov rcx, qword [rsp + 8]
0x00006c4b      4c29fa         sub rdx, r15
0x00006c4e      4889ee         mov rsi, rbp
0x00006c51      4889542410     mov qword [rsp + 0x10], rdx
0x00006c56      4889442448     mov qword [rsp + 0x48], rax
0x00006c5b      48897c2420     mov qword [rsp + 0x20], rdi             ; ../coreutils-8.31/lib/regex_internal.c:-60
0x00006c60      e8dbf2ffff     call sym.rpl_mbrtowc
0x00006c65      4889c5         mov rbp, rax
0x00006c68      488d40ff       lea rax, [rax - 1]
0x00006c6c      4883f8fc       cmp rax, 0xfffffffffffffffc
0x00006c70      0f87e2000000   ja 0x6d58
0x00006c76      8b542444       mov edx, dword [rsp + 0x44]
0x00006c7a      89d7           mov edi, edx
0x00006c7c      89542418       mov dword [rsp + 0x18], edx             ; wchar2.h:-182
0x00006c80      e86bafffff     call sym.imp.towupper                   ; string_fortified.h:-479
0x00006c85      8b542418       mov edx, dword [rsp + 0x18]
0x00006c89      4189c4         mov r12d, eax
0x00006c8c      39c2           cmp edx, eax
0x00006c8e      7478           je 0x6d08
0x00006c90      488b542438     mov rdx, qword [rsp + 0x38]             ; ../coreutils-8.31/lib/regex_internal.c:-172
0x00006c95      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00006c9a      89c6           mov esi, eax
0x00006c9c      e86faeffff     call sym.imp.wcrtomb
0x00006ca1      4839c5         cmp rbp, rax
0x00006ca4      0f856e010000   jne 0x6e18
0x00006caa      498b7e08       mov rdi, qword [r14 + 8]
0x00006cae      488b742428     mov rsi, qword [rsp + 0x28]
0x00006cb3      4889ea         mov rdx, rbp
0x00006cb6      4c01ff         add rdi, r15
0x00006cb9      e812aeffff     call sym.imp.memcpy
0x00006cbe      4983c701       add r15, 1
0x00006cc2      498b5610       mov rdx, qword [r14 + 0x10]
0x00006cc6      4a8d04ad0000.  lea rax, [r13*4]
0x00006cce      498d4c2fff     lea rcx, [r15 + rbp - 1]
0x00006cd3      4939cf         cmp r15, rcx
0x00006cd6      468924aa       mov dword [rdx + r13*4], r12d
0x00006cda      7d1e           jge 0x6cfa                              ; ../coreutils-8.31/lib/regex_internal.c:-173
0x00006cdc      488d440204     lea rax, [rdx + rax + 4]
0x00006ce1      488d148a       lea rdx, [rdx + rcx*4]
0x00006ce5      0f1f00         nop dword [rax]
0x00006ce8      c700ffffffff   mov dword [rax], 0xffffffff             ; [0xffffffff:4]=-1 ; -1
0x00006cee      4883c004       add rax, 4                              ; string_fortified.h:-479
0x00006cf2      4839c2         cmp rdx, rax
0x00006cf5      75f1           jne 0x6ce8
0x00006cf7      4989cf         mov r15, rcx
0x00006cfa      4c39fb         cmp rbx, r15                            ; ../coreutils-8.31/lib/regex_internal.c:-204
0x00006cfd      0f8f0dffffff   jg 0x6c10
0x00006d03      eb73           jmp 0x6d78
0x00006d05      0f1f00         nop dword [rax]
0x00006d08      498b7628       mov rsi, qword [r14 + 0x28]
0x00006d0c      498b7e08       mov rdi, qword [r14 + 8]
0x00006d10      4889ea         mov rdx, rbp
0x00006d13      4c01fe         add rsi, r15
0x00006d16      490336         add rsi, qword [r14]
0x00006d19      4c01ff         add rdi, r15
0x00006d1c      e8afadffff     call sym.imp.memcpy
0x00006d21      eb9b           jmp 0x6cbe
0x00006d23      0f1f440000     nop dword [rax + rax]
0x00006d28      e883abffff     call sym.imp.__ctype_toupper_loc
0x00006d2d      488b00         mov rax, qword [rax]
0x00006d30      498b5608       mov rdx, qword [r14 + 8]                ; ../coreutils-8.31/lib/regex_internal.c:-166
0x00006d34      428b04a0       mov eax, dword [rax + r12*4]
0x00006d38      4288043a       mov byte [rdx + r15], al
0x00006d3c      498b5608       mov rdx, qword [r14 + 8]
0x00006d40      498b4610       mov rax, qword [r14 + 0x10]
0x00006d44      420fb6143a     movzx edx, byte [rdx + r15]
0x00006d49      428914b8       mov dword [rax + r15*4], edx
0x00006d4d      4983c701       add r15, 1
0x00006d51      eba7           jmp 0x6cfa
0x00006d53      0f1f440000     nop dword [rax + rax]
0x00006d58      4883f8fd       cmp rax, 0xfffffffffffffffd
0x00006d5c      7532           jne 0x6d90
0x00006d5e      498b4658       mov rax, qword [r14 + 0x58]
0x00006d62      49394640       cmp qword [r14 + 0x40], rax             ; ../coreutils-8.31/lib/regex_internal.c:-162
0x00006d66      7d28           jge 0x6d90
0x00006d68      488b442448     mov rax, qword [rsp + 0x48]
0x00006d6d      49894620       mov qword [r14 + 0x20], rax
0x00006d71      0f1f80000000.  nop dword [rax]
0x00006d78      4d897e30       mov qword [r14 + 0x30], r15
0x00006d7c      4d897e38       mov qword [r14 + 0x38], r15
0x00006d80      31c0           xor eax, eax
0x00006d82      e9d8fcffff     jmp 0x6a5f
0x00006d87      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/regex_internal.c:-158
0x00006d90      498b06         mov rax, qword [r14]
0x00006d93      498b5608       mov rdx, qword [r14 + 8]
0x00006d97      4c01f8         add rax, r15
0x00006d9a      49034628       add rax, qword [r14 + 0x28]
0x00006d9e      0fb600         movzx eax, byte [rax]
0x00006da1      4288043a       mov byte [rdx + r15], al
0x00006da5      498b5610       mov rdx, qword [r14 + 0x10]
0x00006da9      4983c701       add r15, 1
0x00006dad      4883fdff       cmp rbp, 0xffffffffffffffff
0x00006db1      428904aa       mov dword [rdx + r13*4], eax
0x00006db5      0f853fffffff   jne 0x6cfa
0x00006dbb      488b442448     mov rax, qword [rsp + 0x48]
0x00006dc0      49894620       mov qword [r14 + 0x20], rax
0x00006dc4      e931ffffff     jmp 0x6cfa
0x00006dc9      418b86900000.  mov eax, dword [r14 + 0x90]
0x00006dd0      85c0           test eax, eax                           ; ../coreutils-8.31/lib/regex_internal.c:-132
0x00006dd2      0f8e18020000   jle 0x6ff0
0x00006dd8      498b7e28       mov rdi, qword [r14 + 0x28]
0x00006ddc      448d58ff       lea r11d, [rax - 1]
0x00006de0      488d4c2450     lea rcx, [rsp + 0x50]
0x00006de5      31c0           xor eax, eax
0x00006de7      4c01ef         add rdi, r13
0x00006dea      49033e         add rdi, qword [r14]                    ; ../coreutils-8.31/lib/regex_internal.c:-178
0x00006ded      eb0b           jmp 0x6dfa
0x00006def      4883c001       add rax, 1
0x00006df3      4839442410     cmp qword [rsp + 0x10], rax
0x00006df8      7411           je 0x6e0b
0x00006dfa      0fb63407       movzx esi, byte [rdi + rax]
0x00006dfe      4939c3         cmp r11, rax
0x00006e01      0fb63432       movzx esi, byte [rdx + rsi]
0x00006e05      40883401       mov byte [rcx + rax], sil
0x00006e09      75e4           jne 0x6def
0x00006e0b      48894c2418     mov qword [rsp + 0x18], rcx
0x00006e10      e9befcffff     jmp 0x6ad3
0x00006e15      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/regex_internal.c:-175
0x00006e18      4d89fd         mov r13, r15                            ; ../coreutils-8.31/lib/regex_internal.c:-173
0x00006e1b      e98efcffff     jmp 0x6aae
0x00006e20      498b7e08       mov rdi, qword [r14 + 8]
0x00006e24      488b742418     mov rsi, qword [rsp + 0x18]
0x00006e29      4889ea         mov rdx, rbp
0x00006e2c      4c01ff         add rdi, r15
0x00006e2f      e89cacffff     call sym.imp.memcpy                     ; ../coreutils-8.31/lib/regex_internal.c:-171
0x00006e34      e928fdffff     jmp 0x6b61
0x00006e39      48837c2420fd   cmp qword [rsp + 0x20], 0xfffffffffffffffd
0x00006e3f      750a           jne 0x6e4b
0x00006e41      498b4658       mov rax, qword [r14 + 0x58]
0x00006e45      49394640       cmp qword [r14 + 0x40], rax
0x00006e49      7c7d           jl 0x6ec8
0x00006e4b      498b06         mov rax, qword [r14]
0x00006e4e      498b5678       mov rdx, qword [r14 + 0x78]
0x00006e52      4c01e8         add rax, r13
0x00006e55      49034628       add rax, qword [r14 + 0x28]
0x00006e59      4885d2         test rdx, rdx
0x00006e5c      0fb600         movzx eax, byte [rax]
0x00006e5f      0f85a7010000   jne 0x700c
0x00006e65      498b5608       mov rdx, qword [r14 + 8]
0x00006e69      4c89f9         mov rcx, r15
0x00006e6c      4288043a       mov byte [rdx + r15], al
0x00006e70      4180be8c0000.  cmp byte [r14 + 0x8c], 0
0x00006e78      0f8581010000   jne 0x6fff
0x00006e7e      498b5610       mov rdx, qword [r14 + 0x10]
0x00006e82      4983c501       add r13, 1
0x00006e86      4983c701       add r15, 1
0x00006e8a      4883fdff       cmp rbp, 0xffffffffffffffff
0x00006e8e      89048a         mov dword [rdx + rcx*4], eax
0x00006e91      0f85b9fbffff   jne 0x6a50
0x00006e97      488b442448     mov rax, qword [rsp + 0x48]
0x00006e9c      49894620       mov qword [r14 + 0x20], rax
0x00006ea0      e9abfbffff     jmp 0x6a50                              ; ../coreutils-8.31/lib/regex_internal.c:-240
0x00006ea5      498b5618       mov rdx, qword [r14 + 0x18]
0x00006ea9      4c89f9         mov rcx, r15
0x00006eac      4d89ea         mov r10, r13
0x00006eaf      4c29e9         sub rcx, r13
0x00006eb2      488d14ca       lea rdx, [rdx + rcx*8]
0x00006eb6      4e8914d2       mov qword [rdx + r10*8], r10
0x00006eba      4983c201       add r10, 1
0x00006ebe      4c39d0         cmp rax, r10
0x00006ec1      75f3           jne 0x6eb6
0x00006ec3      e9acfcffff     jmp 0x6b74
0x00006ec8      488b442448     mov rax, qword [rsp + 0x48]
0x00006ecd      49894620       mov qword [r14 + 0x20], rax
0x00006ed1      e97ffbffff     jmp 0x6a55
0x00006ed6      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006eda      0f8440ffffff   je 0x6e20
0x00006ee0      4a8d0438       lea rax, [rax + r15]
0x00006ee4      4889c6         mov rsi, rax
0x00006ee7      4889442408     mov qword [rsp + 8], rax
0x00006eec      498b4640       mov rax, qword [r14 + 0x40]             ; ../coreutils-8.31/lib/regex_internal.c:-219
0x00006ef0      4839c6         cmp rsi, rax
0x00006ef3      77d3           ja 0x6ec8
0x00006ef5      49837e1800     cmp qword [r14 + 0x18], 0
0x00006efa      0f84b8000000   je 0x6fb8
0x00006f00      4180be8c0000.  cmp byte [r14 + 0x8c], 0
0x00006f08      7520           jne 0x6f2a
0x00006f0a      4d85ff         test r15, r15
0x00006f0d      7413           je 0x6f22
0x00006f0f      498b5618       mov rdx, qword [r14 + 0x18]             ; ../coreutils-8.31/lib/regex_internal.c:-213
0x00006f13      31c0           xor eax, eax
0x00006f15      488904c2       mov qword [rdx + rax*8], rax
0x00006f19      4883c001       add rax, 1
0x00006f1d      4c39f8         cmp rax, r15
0x00006f20      75f3           jne 0x6f15                              ; ../coreutils-8.31/lib/regex_internal.c:-215
0x00006f22      41c6868c0000.  mov byte [r14 + 0x8c], 1
0x00006f2a      498b7e08       mov rdi, qword [r14 + 8]                ; ../coreutils-8.31/lib/regex_internal.c:-213
0x00006f2e      4889ce         mov rsi, rcx
0x00006f31      4c89da         mov rdx, r11                            ; ../coreutils-8.31/lib/regex_internal.c:-210
0x00006f34      4c895c2410     mov qword [rsp + 0x10], r11
0x00006f39      4c01ff         add rdi, r15
0x00006f3c      e88fabffff     call sym.imp.memcpy
0x00006f41      498b4610       mov rax, qword [r14 + 0x10]
0x00006f45      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00006f4a      4a8d0cb8       lea rcx, [rax + r15*4]
0x00006f4e      498b4618       mov rax, qword [r14 + 0x18]
0x00006f52      4983fb01       cmp r11, 1
0x00006f56      448921         mov dword [rcx], r12d
0x00006f59      4a8d34f8       lea rsi, [rax + r15*8]
0x00006f5d      4c892e         mov qword [rsi], r13
0x00006f60      7628           jbe 0x6f8a
0x00006f62      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regex_internal.c:-207
0x00006f67      488b542420     mov rdx, qword [rsp + 0x20]
0x00006f6c      4839e8         cmp rax, rbp                            ; ../coreutils-8.31/lib/regex_internal.c:-204
0x00006f6f      480f42d0       cmovb rdx, rax
0x00006f73      4c01ea         add rdx, r13
0x00006f76      488914c6       mov qword [rsi + rax*8], rdx
0x00006f7a      c70481ffffff.  mov dword [rcx + rax*4], 0xffffffff     ; ../coreutils-8.31/lib/regex_internal.c:-201 ; [0xffffffff:4]=-1 ; -1
0x00006f81      4883c001       add rax, 1
0x00006f85      4c39d8         cmp rax, r11
0x00006f88      75dd           jne 0x6f67
0x00006f8a      498b5e58       mov rbx, qword [r14 + 0x58]
0x00006f8e      4929eb         sub r11, rbp
0x00006f91      4c01db         add rbx, r11
0x00006f94      4d3b6e60       cmp r13, qword [r14 + 0x60]
0x00006f98      49895e58       mov qword [r14 + 0x58], rbx
0x00006f9c      7d04           jge 0x6fa2                              ; ../coreutils-8.31/lib/regex_internal.c:-228
0x00006f9e      4d015e68       add qword [r14 + 0x68], r11
0x00006fa2      49395e40       cmp qword [r14 + 0x40], rbx
0x00006fa6      4c8b7c2408     mov r15, qword [rsp + 8]
0x00006fab      490f4e5e40     cmovle rbx, qword [r14 + 0x40]
0x00006fb0      4901ed         add r13, rbp                            ; ../coreutils-8.31/lib/regex_internal.c:-225
0x00006fb3      e998faffff     jmp 0x6a50
0x00006fb8      488d3cc50000.  lea rdi, [rax*8]
0x00006fc0      48894c2418     mov qword [rsp + 0x18], rcx
0x00006fc5      4c895c2410     mov qword [rsp + 0x10], r11
0x00006fca      e831abffff     call sym.imp.malloc
0x00006fcf      4885c0         test rax, rax
0x00006fd2      49894618       mov qword [r14 + 0x18], rax
0x00006fd6      4c8b5c2410     mov r11, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/regexec.c:3290
0x00006fdb      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00006fe0      0f851affffff   jne 0x6f00
0x00006fe6      b80c000000     mov eax, 0xc                            ; ../coreutils-8.31/lib/regexec.c:3295
0x00006feb      e96ffaffff     jmp 0x6a5f
0x00006ff0      488d4c2450     lea rcx, [rsp + 0x50]
0x00006ff5      e911feffff     jmp 0x6e0b
0x00006ffa      e8e1a9ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/regexec.c:3300
0x00006fff      498b5618       mov rdx, qword [r14 + 0x18]
0x00007003      4e892cfa       mov qword [rdx + r15*8], r13
0x00007007      e972feffff     jmp 0x6e7e
0x0000700c      0fb60402       movzx eax, byte [rdx + rax]
0x00007010      e950feffff     jmp 0x6e65
0x00007015      90             nop
0x00007016      662e0f1f8400.  nop word cs:[rax + rax]
;-- extend_buffers:
0x00007020      55             push rbp
0x00007021      53             push rbx
0x00007022      48bafeffffff.  movabs rdx, 0xffffffffffffffe           ; 1152921504606846974
0x0000702c      4883ec08       sub rsp, 8
0x00007030      488b4740       mov rax, qword [rdi + 0x40]
0x00007034      4839d0         cmp rax, rdx
0x00007037      0f870b010000   ja 0x7148
0x0000703d      488b5758       mov rdx, qword [rdi + 0x58]
0x00007041      4801c0         add rax, rax
0x00007044      4863f6         movsxd rsi, esi
0x00007047      4889fb         mov rbx, rdi
0x0000704a      4839d0         cmp rax, rdx                            ; ../coreutils-8.31/lib/regexec.c:3320
0x0000704d      480f4fc2       cmovg rax, rdx
0x00007051      4839f0         cmp rax, rsi
0x00007054      480f4df0       cmovge rsi, rax
0x00007058      e833f4ffff     call sym.re_string_realloc_buffers
0x0000705d      85c0           test eax, eax
0x0000705f      89c5           mov ebp, eax                            ; ../coreutils-8.31/lib/regexec.c:3323
0x00007061      0f85b6000000   jne 0x711d
0x00007067      488bbbb80000.  mov rdi, qword [rbx + 0xb8]
0x0000706e      4885ff         test rdi, rdi
0x00007071      7421           je 0x7094
0x00007073      488b4340       mov rax, qword [rbx + 0x40]
0x00007077      488d34c50800.  lea rsi, [rax*8 + 8]
0x0000707f      e8dcaaffff     call sym.imp.realloc
0x00007084      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/regex_internal.c:-209
0x00007087      0f84bb000000   je 0x7148
0x0000708d      488983b80000.  mov qword [rbx + 0xb8], rax
0x00007094      80bb88000000.  cmp byte [rbx + 0x88], 0
0x0000709b      8b8390000000   mov eax, dword [rbx + 0x90]
0x000070a1      741d           je 0x70c0
0x000070a3      83f801         cmp eax, 1
0x000070a6      4889df         mov rdi, rbx
0x000070a9      0f8eb1000000   jle 0x7160
0x000070af      4883c408       add rsp, 8
0x000070b3      5b             pop rbx
0x000070b4      5d             pop rbp                                 ; ../coreutils-8.31/lib/regex_internal.c:-204
0x000070b5      e946f9ffff     jmp sym.build_wcs_upper_buffer
0x000070ba      660f1f440000   nop word [rax + rax]
0x000070c0      83f801         cmp eax, 1
0x000070c3      7f6b           jg 0x7130
0x000070c5      488b4b78       mov rcx, qword [rbx + 0x78]
0x000070c9      4885c9         test rcx, rcx
0x000070cc      744f           je 0x711d
0x000070ce      488b7358       mov rsi, qword [rbx + 0x58]
0x000070d2      48397340       cmp qword [rbx + 0x40], rsi
0x000070d6      480f4e7340     cmovle rsi, qword [rbx + 0x40]
0x000070db      488b4330       mov rax, qword [rbx + 0x30]
0x000070df      4839c6         cmp rsi, rax
0x000070e2      7f10           jg 0x70f4
0x000070e4      eb2f           jmp 0x7115
0x000070e6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/regexec.c:3337
0x000070f0      488b4b78       mov rcx, qword [rbx + 0x78]
0x000070f4      488b13         mov rdx, qword [rbx]
0x000070f7      4801c2         add rdx, rax
0x000070fa      48035328       add rdx, qword [rbx + 0x28]
0x000070fe      0fb612         movzx edx, byte [rdx]                   ; ../coreutils-8.31/lib/regexec.c:3297
0x00007101      0fb60c11       movzx ecx, byte [rcx + rdx]
0x00007105      488b5308       mov rdx, qword [rbx + 8]
0x00007109      880c02         mov byte [rdx + rax], cl
0x0000710c      4883c001       add rax, 1
0x00007110      4839c6         cmp rsi, rax
0x00007113      75db           jne 0x70f0
0x00007115      48894330       mov qword [rbx + 0x30], rax
0x00007119      48894338       mov qword [rbx + 0x38], rax
0x0000711d      4883c408       add rsp, 8
0x00007121      89e8           mov eax, ebp
0x00007123      5b             pop rbx
0x00007124      5d             pop rbp
0x00007125      c3             ret
0x00007126      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/regexec.c:925
0x00007130      4889df         mov rdi, rbx
0x00007133      e8f8f6ffff     call sym.build_wcs_buffer
0x00007138      4883c408       add rsp, 8
0x0000713c      89e8           mov eax, ebp
0x0000713e      5b             pop rbx
0x0000713f      5d             pop rbp
0x00007140      c3             ret                                     ; ../coreutils-8.31/lib/regexec.c:929
0x00007141      0f1f80000000.  nop dword [rax]
0x00007148      bd0c000000     mov ebp, 0xc
0x0000714d      4883c408       add rsp, 8
0x00007151      89e8           mov eax, ebp                            ; ../coreutils-8.31/lib/regexec.c:935
0x00007153      5b             pop rbx
0x00007154      5d             pop rbp
0x00007155      c3             ret                                     ; ../coreutils-8.31/lib/regexec.c:939
0x00007156      662e0f1f8400.  nop word cs:[rax + rax]
0x00007160      e85bf6ffff     call sym.build_upper_buffer
0x00007165      4883c408       add rsp, 8
0x00007169      89e8           mov eax, ebp
0x0000716b      5b             pop rbx
0x0000716c      5d             pop rbp
0x0000716d      c3             ret
0x0000716e      6690           nop
;-- clean_state_log_if_needed:
0x00007170      4154           push r12
0x00007172      55             push rbp
0x00007173      4889f5         mov rbp, rsi
0x00007176      53             push rbx
0x00007177      488b4740       mov rax, qword [rdi + 0x40]
0x0000717b      4889fb         mov rbx, rdi
0x0000717e      4c8ba7c00000.  mov r12, qword [rdi + 0xc0]
0x00007185      4839f0         cmp rax, rsi
0x00007188      7f26           jg 0x71b0
0x0000718a      483b4758       cmp rax, qword [rdi + 0x58]
0x0000718e      7d20           jge 0x71b0
0x00007190      8d7501         lea esi, [rbp + 1]                      ; string_fortified.h:-698
0x00007193      4889df         mov rdi, rbx
0x00007196      e885feffff     call sym.extend_buffers
0x0000719b      85c0           test eax, eax
0x0000719d      7507           jne 0x71a6
0x0000719f      4939ec         cmp r12, rbp
0x000071a2      7c2c           jl 0x71d0
0x000071a4      31c0           xor eax, eax
0x000071a6      5b             pop rbx
0x000071a7      5d             pop rbp
0x000071a8      415c           pop r12
0x000071aa      c3             ret
0x000071ab      0f1f440000     nop dword [rax + rax]
0x000071b0      488b4330       mov rax, qword [rbx + 0x30]
0x000071b4      4839e8         cmp rax, rbp
0x000071b7      7fe6           jg 0x719f                               ; ../coreutils-8.31/lib/regcomp.c:3021
0x000071b9      483b4358       cmp rax, qword [rbx + 0x58]
0x000071bd      7de0           jge 0x719f
0x000071bf      8d7501         lea esi, [rbp + 1]
0x000071c2      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/regcomp.c:3027
0x000071c5      e856feffff     call sym.extend_buffers
0x000071ca      85c0           test eax, eax
0x000071cc      74d1           je 0x719f
0x000071ce      ebd6           jmp 0x71a6
0x000071d0      488b83b80000.  mov rax, qword [rbx + 0xb8]
0x000071d7      4889ea         mov rdx, rbp
0x000071da      31f6           xor esi, esi
0x000071dc      4c29e2         sub rdx, r12
0x000071df      48c1e203       shl rdx, 3
0x000071e3      4a8d7ce008     lea rdi, [rax + r12*8 + 8]
0x000071e8      e873a8ffff     call sym.imp.memset
0x000071ed      4889abc00000.  mov qword [rbx + 0xc0], rbp
0x000071f4      ebae           jmp 0x71a4
0x000071f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- free_charset:
0x00007200      53             push rbx
0x00007201      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/regcomp.c:2974
0x00007204      488b3f         mov rdi, qword [rdi]
0x00007207      e8c4a6ffff     call sym.imp.free
0x0000720c      488b7b08       mov rdi, qword [rbx + 8]
0x00007210      e8bba6ffff     call sym.imp.free
0x00007215      488b7b10       mov rdi, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/regcomp.c:2986
0x00007219      e8b2a6ffff     call sym.imp.free                       ; ../coreutils-8.31/lib/regcomp.c:2987
0x0000721e      488b7b18       mov rdi, qword [rbx + 0x18]             ; ../coreutils-8.31/lib/regcomp.c:2989
0x00007222      e8a9a6ffff     call sym.imp.free
0x00007227      4889df         mov rdi, rbx
0x0000722a      5b             pop rbx
0x0000722b      e9a0a6ffff     jmp sym.imp.free
;-- free_token:
0x00007230      8b4708         mov eax, dword [rdi + 8]
0x00007233      25ff000400     and eax, 0x400ff
0x00007238      83f806         cmp eax, 6
0x0000723b      7413           je 0x7250
0x0000723d      83f803         cmp eax, 3
0x00007240      7406           je 0x7248
0x00007242      f3c3           ret
0x00007244      0f1f4000       nop dword [rax]
0x00007248      488b3f         mov rdi, qword [rdi]
0x0000724b      e980a6ffff     jmp sym.imp.free
0x00007250      488b3f         mov rdi, qword [rdi]
0x00007253      ebab           jmp sym.free_charset
0x00007255      90             nop
0x00007256      662e0f1f8400.  nop word cs:[rax + rax]
;-- free_tree:
0x00007260      488d7e28       lea rdi, [rsi + 0x28]
0x00007264      4883ec08       sub rsp, 8
0x00007268      e8c3ffffff     call sym.free_token
0x0000726d      31c0           xor eax, eax
0x0000726f      4883c408       add rsp, 8
0x00007273      c3             ret
0x00007274      6690           nop                                     ; ../coreutils-8.31/lib/regex_internal.c:551
0x00007276      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_dfa_add_node:
0x00007280      4157           push r15
0x00007282      4156           push r14
0x00007284      4989f6         mov r14, rsi
0x00007287      4155           push r13                                ; ../coreutils-8.31/lib/regex_internal.c:554
0x00007289      4154           push r12
0x0000728b      55             push rbp
0x0000728c      53             push rbx
0x0000728d      4889fb         mov rbx, rdi
0x00007290      4883ec18       sub rsp, 0x18
0x00007294      488b7710       mov rsi, qword [rdi + 0x10]
0x00007298      488b6f08       mov rbp, qword [rdi + 8]
0x0000729c      4839ee         cmp rsi, rbp
0x0000729f      0f83ab000000   jae 0x7350
0x000072a5      4c8b6718       mov r12, qword [rdi + 0x18]
0x000072a9      488b6f28       mov rbp, qword [rdi + 0x28]
0x000072ad      4889f0         mov rax, rsi
0x000072b0      89d1           mov ecx, edx
0x000072b2      48c1e004       shl rax, 4
0x000072b6      480303         add rax, qword [rbx]
0x000072b9      81e1ff00fcff   and ecx, 0xfffc00ff
0x000072bf      48895008       mov qword [rax + 8], rdx
0x000072c3      894808         mov dword [rax + 8], ecx
0x000072c6      31c9           xor ecx, ecx                            ; ../coreutils-8.31/lib/regex_internal.c:559
0x000072c8      80fa06         cmp dl, 6
0x000072cb      4c8930         mov qword [rax], r14
0x000072ce      0f94c1         sete cl
0x000072d1      80fa05         cmp dl, 5
0x000072d4      750c           jne 0x72e2
0x000072d6      31c9           xor ecx, ecx                            ; string_fortified.h:-828
0x000072d8      83bbb4000000.  cmp dword [rbx + 0xb4], 1
0x000072df      0f9fc1         setg cl
0x000072e2      0fb6500a       movzx edx, byte [rax + 0xa]
0x000072e6      c1e104         shl ecx, 4
0x000072e9      660fefc0       pxor xmm0, xmm0
0x000072ed      83e2ef         and edx, 0xffffffef                     ; ../coreutils-8.31/lib/regex_internal.c:561 ; 4294967279
0x000072f0      09ca           or edx, ecx
0x000072f2      88500a         mov byte [rax + 0xa], dl
0x000072f5      49c704f4ffff.  mov qword [r12 + rsi*8], 0xffffffffffffffff
0x000072fd      488b4310       mov rax, qword [rbx + 0x10]
0x00007301      488d0440       lea rax, [rax + rax*2]                  ; ../coreutils-8.31/lib/regex_internal.c:514
0x00007305      488d44c500     lea rax, [rbp + rax*8]
0x0000730a      0f1100         movups xmmword [rax], xmm0
0x0000730d      48c740100000.  mov qword [rax + 0x10], 0
0x00007315      488b4310       mov rax, qword [rbx + 0x10]
0x00007319      488d1440       lea rdx, [rax + rax*2]                  ; ../coreutils-8.31/lib/regex_internal.c:527
0x0000731d      488b4330       mov rax, qword [rbx + 0x30]
0x00007321      488d04d0       lea rax, [rax + rdx*8]
0x00007325      0f1100         movups xmmword [rax], xmm0
0x00007328      48c740100000.  mov qword [rax + 0x10], 0
0x00007330      488b4310       mov rax, qword [rbx + 0x10]
0x00007334      488d5001       lea rdx, [rax + 1]
0x00007338      48895310       mov qword [rbx + 0x10], rdx
0x0000733c      4883c418       add rsp, 0x18
0x00007340      5b             pop rbx                                 ; ../coreutils-8.31/lib/regex_internal.c:531
0x00007341      5d             pop rbp
0x00007342      415c           pop r12
0x00007344      415d           pop r13
0x00007346      415e           pop r14
0x00007348      415f           pop r15
0x0000734a      c3             ret
0x0000734b      0f1f440000     nop dword [rax + rax]
0x00007350      4c8d6c2d00     lea r13, [rbp + rbp]
0x00007355      48b8aaaaaaaa.  movabs rax, 0xaaaaaaaaaaaaaaa
0x0000735f      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/regex_internal.c:532
0x00007362      0f87da000000   ja 0x7442
0x00007368      488b3f         mov rdi, qword [rdi]
0x0000736b      4889ee         mov rsi, rbp
0x0000736e      4889542408     mov qword [rsp + 8], rdx
0x00007373      48c1e605       shl rsi, 5
0x00007377      e8e4a7ffff     call sym.imp.realloc
0x0000737c      4885c0         test rax, rax
0x0000737f      0f84bd000000   je 0x7442
0x00007385      4989ef         mov r15, rbp
0x00007388      488b7b18       mov rdi, qword [rbx + 0x18]
0x0000738c      488903         mov qword [rbx], rax
0x0000738f      49c1e704       shl r15, 4
0x00007393      4c89fe         mov rsi, r15
0x00007396      e8c5a7ffff     call sym.imp.realloc
0x0000739b      488b7b20       mov rdi, qword [rbx + 0x20]
0x0000739f      4c89fe         mov rsi, r15
0x000073a2      4d8d7cad00     lea r15, [r13 + rbp*4]
0x000073a7      4989c4         mov r12, rax
0x000073aa      49c1e703       shl r15, 3
0x000073ae      e8ada7ffff     call sym.imp.realloc
0x000073b3      488b7b28       mov rdi, qword [rbx + 0x28]
0x000073b7      4c89fe         mov rsi, r15
0x000073ba      48890424       mov qword [rsp], rax
0x000073be      e89da7ffff     call sym.imp.realloc
0x000073c3      488b7b30       mov rdi, qword [rbx + 0x30]
0x000073c7      4c89fe         mov rsi, r15
0x000073ca      4889c5         mov rbp, rax
0x000073cd      e88ea7ffff     call sym.imp.realloc
0x000073d2      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/regex_internal.c:539
0x000073d5      488b0c24       mov rcx, qword [rsp]
0x000073d9      7435           je 0x7410
0x000073db      4885c9         test rcx, rcx
0x000073de      7430           je 0x7410                               ; ../coreutils-8.31/lib/regex_internal.c:540
0x000073e0      4885ed         test rbp, rbp
0x000073e3      742b           je 0x7410
0x000073e5      4885c0         test rax, rax
0x000073e8      488b542408     mov rdx, qword [rsp + 8]
0x000073ed      7421           je 0x7410
0x000073ef      4c896318       mov qword [rbx + 0x18], r12
0x000073f3      48894b20       mov qword [rbx + 0x20], rcx             ; ../coreutils-8.31/lib/regex_internal.c:542
0x000073f7      48896b28       mov qword [rbx + 0x28], rbp
0x000073fb      48894330       mov qword [rbx + 0x30], rax
0x000073ff      4c896b08       mov qword [rbx + 8], r13
0x00007403      488b7310       mov rsi, qword [rbx + 0x10]
0x00007407      e9a1feffff     jmp 0x72ad
0x0000740c      0f1f4000       nop dword [rax]
0x00007410      4c89e7         mov rdi, r12
0x00007413      4889442408     mov qword [rsp + 8], rax
0x00007418      48890c24       mov qword [rsp], rcx
0x0000741c      e8afa4ffff     call sym.imp.free
0x00007421      488b0c24       mov rcx, qword [rsp]
0x00007425      4889cf         mov rdi, rcx
0x00007428      e8a3a4ffff     call sym.imp.free
0x0000742d      4889ef         mov rdi, rbp
0x00007430      e89ba4ffff     call sym.imp.free
0x00007435      488b442408     mov rax, qword [rsp + 8]
0x0000743a      4889c7         mov rdi, rax
0x0000743d      e88ea4ffff     call sym.imp.free
0x00007442      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00007449      e9eefeffff     jmp 0x733c
0x0000744e      6690           nop
;-- duplicate_node:
0x00007450      4155           push r13
0x00007452      4154           push r12
0x00007454      4989f5         mov r13, rsi
0x00007457      55             push rbp
0x00007458      53             push rbx
0x00007459      49c1e504       shl r13, 4
0x0000745d      4889f5         mov rbp, rsi
0x00007460      4189d4         mov r12d, edx
0x00007463      4889fb         mov rbx, rdi
0x00007466      4883ec08       sub rsp, 8
0x0000746a      488b07         mov rax, qword [rdi]
0x0000746d      4a8b3428       mov rsi, qword [rax + r13]
0x00007471      4a8b542808     mov rdx, qword [rax + r13 + 8]
0x00007476      e805feffff     call sym.re_dfa_add_node
0x0000747b      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000747f      7463           je 0x74e4
0x00007481      4489e7         mov edi, r12d
0x00007484      4c8b03         mov r8, qword [rbx]
0x00007487      4889c6         mov rsi, rax
0x0000748a      6681e7ff03     and di, 0x3ff
0x0000748f      48c1e604       shl rsi, 4
0x00007493      89f9           mov ecx, edi
0x00007495      81e1ff030000   and ecx, 0x3ff                          ; ../coreutils-8.31/lib/regcomp.c:726
0x0000749b      4c01c6         add rsi, r8
0x0000749e      c1e108         shl ecx, 8
0x000074a1      89ca           mov edx, ecx                            ; ../coreutils-8.31/lib/regcomp.c:590
0x000074a3      8b4e08         mov ecx, dword [rsi + 8]
0x000074a6      81e1ff00fcff   and ecx, 0xfffc00ff
0x000074ac      09d1           or ecx, edx
0x000074ae      894e08         mov dword [rsi + 8], ecx
0x000074b1      438b542808     mov edx, dword [r8 + r13 + 8]
0x000074b6      81e1ff00fcff   and ecx, 0xfffc00ff
0x000074bc      c1ea08         shr edx, 8
0x000074bf      09fa           or edx, edi
0x000074c1      81e2ff030000   and edx, 0x3ff
0x000074c7      c1e208         shl edx, 8
0x000074ca      09ca           or edx, ecx
0x000074cc      89d1           mov ecx, edx
0x000074ce      895608         mov dword [rsi + 8], edx
0x000074d1      c1e910         shr ecx, 0x10
0x000074d4      89ca           mov edx, ecx
0x000074d6      83ca04         or edx, 4
0x000074d9      88560a         mov byte [rsi + 0xa], dl
0x000074dc      488b5320       mov rdx, qword [rbx + 0x20]
0x000074e0      48892cc2       mov qword [rdx + rax*8], rbp
0x000074e4      4883c408       add rsp, 8
0x000074e8      5b             pop rbx
0x000074e9      5d             pop rbp
0x000074ea      415c           pop r12
0x000074ec      415d           pop r13
0x000074ee      c3             ret
0x000074ef      90             nop
;-- duplicate_node_closure:
0x000074f0      4157           push r15
0x000074f2      4156           push r14
0x000074f4      4989f1         mov r9, rsi
0x000074f7      4155           push r13
0x000074f9      4154           push r12
0x000074fb      4989fe         mov r14, rdi
0x000074fe      55             push rbp
0x000074ff      53             push rbx
0x00007500      4989d5         mov r13, rdx
0x00007503      4489c5         mov ebp, r8d
0x00007506      4883ec18       sub rsp, 0x18
0x0000750a      48894c2408     mov qword [rsp + 8], rcx
0x0000750f      4d8b06         mov r8, qword [r14]
0x00007512      4c89c8         mov rax, r9
0x00007515      498b7e28       mov rdi, qword [r14 + 0x28]
0x00007519      48c1e004       shl rax, 4
0x0000751d      4d89ec         mov r12, r13
0x00007520      4c01c0         add rax, r8
0x00007523      80780804       cmp byte [rax + 8], 4
0x00007527      0f84b3010000   je 0x76e0
0x0000752d      4f8d2449       lea r12, [r9 + r9*2]
0x00007531      49c1e403       shl r12, 3
0x00007535      4a8d3427       lea rsi, [rdi + r12]
0x00007539      488b4e08       mov rcx, qword [rsi + 8]
0x0000753d      4885c9         test rcx, rcx
0x00007540      0f84f3010000   je 0x7739
0x00007546      4b8d5c6d00     lea rbx, [r13 + r13*2]
0x0000754b      488b7610       mov rsi, qword [rsi + 0x10]
0x0000754f      48c1e303       shl rbx, 3
0x00007553      4801df         add rdi, rbx
0x00007556      4883f901       cmp rcx, 1
0x0000755a      4c8b3e         mov r15, qword [rsi]
0x0000755d      48c747080000.  mov qword [rdi + 8], 0
0x00007565      0f8415010000   je 0x7680
0x0000756b      498b5610       mov rdx, qword [r14 + 0x10]
0x0000756f      488d72ff       lea rsi, [rdx - 1]
0x00007573      4889f0         mov rax, rsi
0x00007576      48c1e004       shl rax, 4
0x0000757a      4c01c0         add rax, r8
0x0000757d      f6400a04       test byte [rax + 0xa], 4
0x00007581      0f84a9000000   je 0x7630
0x00007587      4885f6         test rsi, rsi
0x0000758a      0f8ea0000000   jle 0x7630
0x00007590      48c1e204       shl rdx, 4
0x00007594      4929c0         sub r8, rax
0x00007597      498b4e20       mov rcx, qword [r14 + 0x20]
0x0000759b      4d8d4410e0     lea r8, [r8 + rdx - 0x20]
0x000075a0      eb18           jmp 0x75ba
0x000075a2      660f1f440000   nop word [rax + rax]
0x000075a8      4c01c0         add rax, r8
0x000075ab      4883ee01       sub rsi, 1
0x000075af      f6400a04       test byte [rax + 0xa], 4
0x000075b3      747b           je 0x7630
0x000075b5      4885f6         test rsi, rsi
0x000075b8      7e76           jle 0x7630
0x000075ba      4c393cf1       cmp qword [rcx + rsi*8], r15
0x000075be      75e8           jne 0x75a8
0x000075c0      8b5008         mov edx, dword [rax + 8]
0x000075c3      c1ea08         shr edx, 8
0x000075c6      81e2ff030000   and edx, 0x3ff
0x000075cc      39d5           cmp ebp, edx
0x000075ce      75d8           jne 0x75a8
0x000075d0      e8cbefffff     call sym.re_node_set_insert
0x000075d5      84c0           test al, al
0x000075d7      7442           je 0x761b
0x000075d9      498b4628       mov rax, qword [r14 + 0x28]
0x000075dd      89ea           mov edx, ebp
0x000075df      4c89f7         mov rdi, r14
0x000075e2      4a8b442010     mov rax, qword [rax + r12 + 0x10]
0x000075e7      4c8b4808       mov r9, qword [rax + 8]
0x000075eb      4c89ce         mov rsi, r9
0x000075ee      4c890c24       mov qword [rsp], r9
0x000075f2      e859feffff     call sym.duplicate_node
0x000075f7      4883f8ff       cmp rax, 0xffffffffffffffff
0x000075fb      4989c5         mov r13, rax
0x000075fe      741b           je 0x761b
0x00007600      49035e28       add rbx, qword [r14 + 0x28]
0x00007604      4c89ee         mov rsi, r13
0x00007607      4889df         mov rdi, rbx
0x0000760a      e891efffff     call sym.re_node_set_insert
0x0000760f      84c0           test al, al
0x00007611      4c8b0c24       mov r9, qword [rsp]
0x00007615      0f85f4feffff   jne 0x750f
0x0000761b      b80c000000     mov eax, 0xc
0x00007620      4883c418       add rsp, 0x18
0x00007624      5b             pop rbx
0x00007625      5d             pop rbp
0x00007626      415c           pop r12
0x00007628      415d           pop r13
0x0000762a      415e           pop r14
0x0000762c      415f           pop r15
0x0000762e      c3             ret
0x0000762f      90             nop
0x00007630      89ea           mov edx, ebp
0x00007632      4c89fe         mov rsi, r15
0x00007635      4c89f7         mov rdi, r14
0x00007638      e813feffff     call sym.duplicate_node
0x0000763d      4883f8ff       cmp rax, 0xffffffffffffffff
0x00007641      4989c5         mov r13, rax
0x00007644      74d5           je 0x761b
0x00007646      498b7e28       mov rdi, qword [r14 + 0x28]
0x0000764a      4c89ee         mov rsi, r13
0x0000764d      4801df         add rdi, rbx
0x00007650      e84befffff     call sym.re_node_set_insert
0x00007655      84c0           test al, al
0x00007657      74c2           je 0x761b
0x00007659      488b4c2408     mov rcx, qword [rsp + 8]
0x0000765e      4189e8         mov r8d, ebp
0x00007661      4c89ea         mov rdx, r13
0x00007664      4c89fe         mov rsi, r15
0x00007667      4c89f7         mov rdi, r14
0x0000766a      e881feffff     call sym.duplicate_node_closure
0x0000766f      85c0           test eax, eax
0x00007671      0f8462ffffff   je 0x75d9
0x00007677      eba7           jmp 0x7620
0x00007679      0f1f80000000.  nop dword [rax]
0x00007680      4c3b4c2408     cmp r9, qword [rsp + 8]
0x00007685      7509           jne 0x7690
0x00007687      4d39e9         cmp r9, r13
0x0000768a      0f85bc000000   jne 0x774c
0x00007690      8b4008         mov eax, dword [rax + 8]
0x00007693      4c89fe         mov rsi, r15
0x00007696      4c89f7         mov rdi, r14
0x00007699      c1e808         shr eax, 8
0x0000769c      25ff030000     and eax, 0x3ff
0x000076a1      09c5           or ebp, eax
0x000076a3      89ea           mov edx, ebp
0x000076a5      e8a6fdffff     call sym.duplicate_node
0x000076aa      4883f8ff       cmp rax, 0xffffffffffffffff
0x000076ae      4989c5         mov r13, rax
0x000076b1      0f8464ffffff   je 0x761b
0x000076b7      49035e28       add rbx, qword [r14 + 0x28]
0x000076bb      4889c6         mov rsi, rax
0x000076be      4889df         mov rdi, rbx
0x000076c1      e8daeeffff     call sym.re_node_set_insert
0x000076c6      84c0           test al, al
0x000076c8      0f844dffffff   je 0x761b
0x000076ce      4d89f9         mov r9, r15
0x000076d1      e939feffff     jmp 0x750f
0x000076d6      662e0f1f8400.  nop word cs:[rax + rax]
0x000076e0      498b4618       mov rax, qword [r14 + 0x18]
0x000076e4      4b8d5c6d00     lea rbx, [r13 + r13*2]
0x000076e9      4e8d3ccd0000.  lea r15, [r9*8]
0x000076f1      89ea           mov edx, ebp
0x000076f3      48c1e303       shl rbx, 3
0x000076f7      4e8b0cc8       mov r9, qword [rax + r9*8]
0x000076fb      48c7441f0800.  mov qword [rdi + rbx + 8], 0
0x00007704      4c89f7         mov rdi, r14
0x00007707      4c89ce         mov rsi, r9
0x0000770a      4c890c24       mov qword [rsp], r9
0x0000770e      e83dfdffff     call sym.duplicate_node
0x00007713      4883f8ff       cmp rax, 0xffffffffffffffff
0x00007717      4989c5         mov r13, rax
0x0000771a      4c8b0c24       mov r9, qword [rsp]
0x0000771e      0f84f7feffff   je 0x761b
0x00007724      498b4618       mov rax, qword [r14 + 0x18]
0x00007728      4c890c24       mov qword [rsp], r9
0x0000772c      4a8b0c38       mov rcx, qword [rax + r15]
0x00007730      4a890ce0       mov qword [rax + r12*8], rcx
0x00007734      e9c7feffff     jmp 0x7600
0x00007739      498b4618       mov rax, qword [r14 + 0x18]
0x0000773d      4a8b0cc8       mov rcx, qword [rax + r9*8]
0x00007741      4a890ce8       mov qword [rax + r13*8], rcx
0x00007745      31c0           xor eax, eax
0x00007747      e9d4feffff     jmp 0x7620
0x0000774c      4c89fe         mov rsi, r15
0x0000774f      e84ceeffff     call sym.re_node_set_insert
0x00007754      89c2           mov edx, eax
0x00007756      31c0           xor eax, eax
0x00007758      84d2           test dl, dl
0x0000775a      0f85c0feffff   jne 0x7620
0x00007760      e9b6feffff     jmp 0x761b
0x00007765      90             nop
0x00007766      662e0f1f8400.  nop word cs:[rax + rax]
;-- free_state:
0x00007770      53             push rbx
0x00007771      4889fb         mov rbx, rdi
0x00007774      488b7f30       mov rdi, qword [rdi + 0x30]
0x00007778      e853a1ffff     call sym.imp.free
0x0000777d      488b7b48       mov rdi, qword [rbx + 0x48]
0x00007781      e84aa1ffff     call sym.imp.free
0x00007786      488b4350       mov rax, qword [rbx + 0x50]
0x0000778a      488d5308       lea rdx, [rbx + 8]
0x0000778e      4839d0         cmp rax, rdx
0x00007791      7412           je 0x77a5
0x00007793      488b7810       mov rdi, qword [rax + 0x10]
0x00007797      e834a1ffff     call sym.imp.free
0x0000779c      488b7b50       mov rdi, qword [rbx + 0x50]
0x000077a0      e82ba1ffff     call sym.imp.free
0x000077a5      488b7b18       mov rdi, qword [rbx + 0x18]
0x000077a9      e822a1ffff     call sym.imp.free
0x000077ae      488b7b60       mov rdi, qword [rbx + 0x60]
0x000077b2      e819a1ffff     call sym.imp.free
0x000077b7      488b7b58       mov rdi, qword [rbx + 0x58]
0x000077bb      e810a1ffff     call sym.imp.free
0x000077c0      4889df         mov rdi, rbx
0x000077c3      5b             pop rbx
0x000077c4      e907a1ffff     jmp sym.imp.free
0x000077c9      0f1f80000000.  nop dword [rax]
;-- re_string_destruct:
0x000077d0      53             push rbx
0x000077d1      4889fb         mov rbx, rdi
0x000077d4      488b7f10       mov rdi, qword [rdi + 0x10]
0x000077d8      e8f3a0ffff     call sym.imp.free
0x000077dd      488b7b18       mov rdi, qword [rbx + 0x18]
0x000077e1      e8eaa0ffff     call sym.imp.free
0x000077e6      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x000077ed      7509           jne 0x77f8
0x000077ef      5b             pop rbx
0x000077f0      c3             ret
0x000077f1      0f1f80000000.  nop dword [rax]
0x000077f8      488b7b08       mov rdi, qword [rbx + 8]
0x000077fc      5b             pop rbx
0x000077fd      e9cea0ffff     jmp sym.imp.free
0x00007802      0f1f4000       nop dword [rax]
0x00007806      662e0f1f8400.  nop word cs:[rax + rax]
;-- free_dfa_content:
0x00007810      4156           push r14
0x00007812      4155           push r13
0x00007814      4154           push r12
0x00007816      4989fc         mov r12, rdi
0x00007819      55             push rbp
0x0000781a      53             push rbx
0x0000781b      488b3f         mov rdi, qword [rdi]
0x0000781e      4885ff         test rdi, rdi
0x00007821      742b           je 0x784e
0x00007823      49837c241000   cmp qword [r12 + 0x10], 0
0x00007829      7423           je 0x784e
0x0000782b      31db           xor ebx, ebx
0x0000782d      eb05           jmp 0x7834
0x0000782f      90             nop
0x00007830      498b3c24       mov rdi, qword [r12]
0x00007834      4889d8         mov rax, rbx
0x00007837      4883c301       add rbx, 1
0x0000783b      48c1e004       shl rax, 4
0x0000783f      4801c7         add rdi, rax
0x00007842      e8e9f9ffff     call sym.free_token
0x00007847      49395c2410     cmp qword [r12 + 0x10], rbx
0x0000784c      77e2           ja 0x7830
0x0000784e      498b7c2418     mov rdi, qword [r12 + 0x18]
0x00007853      e878a0ffff     call sym.imp.free
0x00007858      49837c241000   cmp qword [r12 + 0x10], 0
0x0000785e      7453           je 0x78b3
0x00007860      31db           xor ebx, ebx
0x00007862      31ed           xor ebp, ebp
0x00007864      0f1f4000       nop dword [rax]
0x00007868      498b442430     mov rax, qword [r12 + 0x30]
0x0000786d      4885c0         test rax, rax
0x00007870      740a           je 0x787c
0x00007872      488b7c1810     mov rdi, qword [rax + rbx + 0x10]
0x00007877      e854a0ffff     call sym.imp.free
0x0000787c      498b442438     mov rax, qword [r12 + 0x38]
0x00007881      4885c0         test rax, rax
0x00007884      740a           je 0x7890
0x00007886      488b7c1810     mov rdi, qword [rax + rbx + 0x10]
0x0000788b      e840a0ffff     call sym.imp.free
0x00007890      498b442428     mov rax, qword [r12 + 0x28]
0x00007895      4885c0         test rax, rax
0x00007898      740a           je 0x78a4
0x0000789a      488b7c1810     mov rdi, qword [rax + rbx + 0x10]
0x0000789f      e82ca0ffff     call sym.imp.free
0x000078a4      4883c501       add rbp, 1
0x000078a8      4883c318       add rbx, 0x18
0x000078ac      49396c2410     cmp qword [r12 + 0x10], rbp
0x000078b1      77b5           ja 0x7868
0x000078b3      498b7c2428     mov rdi, qword [r12 + 0x28]
0x000078b8      e813a0ffff     call sym.imp.free
0x000078bd      498b7c2430     mov rdi, qword [r12 + 0x30]
0x000078c2      e809a0ffff     call sym.imp.free
0x000078c7      498b7c2438     mov rdi, qword [r12 + 0x38]
0x000078cc      e8ff9fffff     call sym.imp.free
0x000078d1      498b3c24       mov rdi, qword [r12]
0x000078d5      e8f69fffff     call sym.imp.free
0x000078da      498b7c2440     mov rdi, qword [r12 + 0x40]
0x000078df      4885ff         test rdi, rdi
0x000078e2      7453           je 0x7937
0x000078e4      4531f6         xor r14d, r14d
0x000078e7      4531ed         xor r13d, r13d
0x000078ea      660f1f440000   nop word [rax + rax]
0x000078f0      4a8d2c37       lea rbp, [rdi + r14]
0x000078f4      48837d0000     cmp qword [rbp], 0
0x000078f9      7e1c           jle 0x7917
0x000078fb      31db           xor ebx, ebx
0x000078fd      0f1f00         nop dword [rax]
0x00007900      488b4510       mov rax, qword [rbp + 0x10]
0x00007904      488b3cd8       mov rdi, qword [rax + rbx*8]
0x00007908      4883c301       add rbx, 1
0x0000790c      e85ffeffff     call sym.free_state
0x00007911      48395d00       cmp qword [rbp], rbx
0x00007915      7fe9           jg 0x7900
0x00007917      488b7d10       mov rdi, qword [rbp + 0x10]
0x0000791b      4983c501       add r13, 1
0x0000791f      4983c618       add r14, 0x18
0x00007923      e8a89fffff     call sym.imp.free
0x00007928      4d39ac248800.  cmp qword [r12 + 0x88], r13
0x00007930      498b7c2440     mov rdi, qword [r12 + 0x40]
0x00007935      73b9           jae 0x78f0
0x00007937      e8949fffff     call sym.imp.free
0x0000793c      498b7c2478     mov rdi, qword [r12 + 0x78]
0x00007941      488d0518e500.  lea rax, obj.utf8_sb_map                ; 0x15e60
0x00007948      4839c7         cmp rdi, rax
0x0000794b      7405           je 0x7952
0x0000794d      e87e9fffff     call sym.imp.free
0x00007952      498bbc24e000.  mov rdi, qword [r12 + 0xe0]
0x0000795a      e8719fffff     call sym.imp.free
0x0000795f      5b             pop rbx
0x00007960      4c89e7         mov rdi, r12
0x00007963      5d             pop rbp
0x00007964      415c           pop r12
0x00007966      415d           pop r13
0x00007968      415e           pop r14
0x0000796a      e9619fffff     jmp sym.imp.free
0x0000796f      90             nop
;-- match_ctx_clean:
0x00007970      4156           push r14
0x00007972      4155           push r13
0x00007974      4989fe         mov r14, rdi
0x00007977      4154           push r12
0x00007979      55             push rbp
0x0000797a      53             push rbx
0x0000797b      4883bfe80000.  cmp qword [rdi + 0xe8], 0
0x00007983      0f8e80000000   jle 0x7a09
0x00007989      4531ed         xor r13d, r13d
0x0000798c      0f1f4000       nop dword [rax]
0x00007990      498b86f80000.  mov rax, qword [r14 + 0xf8]
0x00007997      4e8b24e8       mov r12, qword [rax + r13*8]
0x0000799b      49837c242000   cmp qword [r12 + 0x20], 0
0x000079a1      7e2a           jle 0x79cd
0x000079a3      31db           xor ebx, ebx
0x000079a5      0f1f00         nop dword [rax]
0x000079a8      498b442428     mov rax, qword [r12 + 0x28]
0x000079ad      488b2cd8       mov rbp, qword [rax + rbx*8]
0x000079b1      4883c301       add rbx, 1
0x000079b5      488b7d20       mov rdi, qword [rbp + 0x20]
0x000079b9      e8129fffff     call sym.imp.free
0x000079be      4889ef         mov rdi, rbp
0x000079c1      e80a9fffff     call sym.imp.free
0x000079c6      49395c2420     cmp qword [r12 + 0x20], rbx
0x000079cb      7fdb           jg 0x79a8
0x000079cd      498b7c2428     mov rdi, qword [r12 + 0x28]
0x000079d2      e8f99effff     call sym.imp.free
0x000079d7      498b442410     mov rax, qword [r12 + 0x10]
0x000079dc      4885c0         test rax, rax
0x000079df      7413           je 0x79f4
0x000079e1      488b7810       mov rdi, qword [rax + 0x10]
0x000079e5      e8e69effff     call sym.imp.free
0x000079ea      498b7c2410     mov rdi, qword [r12 + 0x10]
0x000079ef      e8dc9effff     call sym.imp.free
0x000079f4      4c89e7         mov rdi, r12
0x000079f7      4983c501       add r13, 1
0x000079fb      e8d09effff     call sym.imp.free
0x00007a00      4d39aee80000.  cmp qword [r14 + 0xe8], r13
0x00007a07      7f87           jg 0x7990
0x00007a09      5b             pop rbx
0x00007a0a      49c786e80000.  mov qword [r14 + 0xe8], 0
0x00007a15      49c786c80000.  mov qword [r14 + 0xc8], 0
0x00007a20      5d             pop rbp
0x00007a21      415c           pop r12
0x00007a23      415d           pop r13
0x00007a25      415e           pop r14
0x00007a27      c3             ret
0x00007a28      0f1f84000000.  nop dword [rax + rax]
;-- re_string_char_size_at.part.0:
0x00007a30      488b4f30       mov rcx, qword [rdi + 0x30]
0x00007a34      488d4601       lea rax, [rsi + 1]
0x00007a38      4839c8         cmp rax, rcx
0x00007a3b      7d3b           jge 0x7a78
0x00007a3d      488b5710       mov rdx, qword [rdi + 0x10]
0x00007a41      488d3c850000.  lea rdi, [rax*4]
0x00007a49      833c82ff       cmp dword [rdx + rax*4], 0xffffffff
0x00007a4d      7529           jne 0x7a78
0x00007a4f      4829f1         sub rcx, rsi
0x00007a52      488d743afc     lea rsi, [rdx + rdi - 4]
0x00007a57      ba02000000     mov edx, 2
0x00007a5c      eb0d           jmp 0x7a6b
0x00007a5e      6690           nop
0x00007a60      4883c201       add rdx, 1
0x00007a64      837c96fcff     cmp dword [rsi + rdx*4 - 4], 0xffffffff
0x00007a69      7512           jne 0x7a7d
0x00007a6b      4839ca         cmp rdx, rcx
0x00007a6e      89d0           mov eax, edx
0x00007a70      75ee           jne 0x7a60
0x00007a72      f3c3           ret
0x00007a74      0f1f4000       nop dword [rax]
0x00007a78      b801000000     mov eax, 1
0x00007a7d      f3c3           ret
0x00007a7f      90             nop
;-- re_node_set_compare.part.2:
0x00007a80      488b5708       mov rdx, qword [rdi + 8]
0x00007a84      31c0           xor eax, eax
0x00007a86      483b5608       cmp rdx, qword [rsi + 8]
0x00007a8a      7404           je 0x7a90
0x00007a8c      f3c3           ret
0x00007a8e      6690           nop
0x00007a90      488d42ff       lea rax, [rdx - 1]
0x00007a94      488d14c50000.  lea rdx, [rax*8]
0x00007a9c      eb1f           jmp 0x7abd
0x00007a9e      6690           nop
0x00007aa0      488b4f10       mov rcx, qword [rdi + 0x10]
0x00007aa4      4c8b0411       mov r8, qword [rcx + rdx]
0x00007aa8      488b4e10       mov rcx, qword [rsi + 0x10]
0x00007aac      488b0c11       mov rcx, qword [rcx + rdx]
0x00007ab0      4883ea08       sub rdx, 8
0x00007ab4      4939c8         cmp r8, rcx
0x00007ab7      7517           jne 0x7ad0
0x00007ab9      4883e801       sub rax, 1
0x00007abd      4885c0         test rax, rax
0x00007ac0      79de           jns 0x7aa0
0x00007ac2      b801000000     mov eax, 1
0x00007ac7      c3             ret
0x00007ac8      0f1f84000000.  nop dword [rax + rax]
0x00007ad0      31c0           xor eax, eax
0x00007ad2      c3             ret
0x00007ad3      0f1f00         nop dword [rax]
0x00007ad6      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_node_set_contains.isra.3:
0x00007ae0      31c0           xor eax, eax
0x00007ae2      4885ff         test rdi, rdi
0x00007ae5      7e3e           jle 0x7b25
0x00007ae7      4c8b06         mov r8, qword [rsi]
0x00007aea      4883ef01       sub rdi, 1
0x00007aee      31f6           xor esi, esi
0x00007af0      4839fe         cmp rsi, rdi
0x00007af3      7328           jae 0x7b1d
0x00007af5      488d0c3e       lea rcx, [rsi + rdi]
0x00007af9      48d1e9         shr rcx, 1
0x00007afc      493b14c8       cmp rdx, qword [r8 + rcx*8]
0x00007b00      7e16           jle 0x7b18
0x00007b02      eb2c           jmp 0x7b30
0x00007b04      0f1f4000       nop dword [rax]
0x00007b08      488d040e       lea rax, [rsi + rcx]
0x00007b0c      48d1e8         shr rax, 1
0x00007b0f      493914c0       cmp qword [r8 + rax*8], rdx
0x00007b13      7c2b           jl 0x7b40
0x00007b15      4889c1         mov rcx, rax
0x00007b18      4839ce         cmp rsi, rcx
0x00007b1b      72eb           jb 0x7b08
0x00007b1d      31c0           xor eax, eax
0x00007b1f      493b14f0       cmp rdx, qword [r8 + rsi*8]
0x00007b23      742b           je 0x7b50
0x00007b25      f3c3           ret
0x00007b27      660f1f840000.  nop word [rax + rax]
0x00007b30      4889c8         mov rax, rcx
0x00007b33      4889f9         mov rcx, rdi
0x00007b36      662e0f1f8400.  nop word cs:[rax + rax]
0x00007b40      488d7001       lea rsi, [rax + 1]
0x00007b44      4889cf         mov rdi, rcx
0x00007b47      eba7           jmp 0x7af0
0x00007b49      0f1f80000000.  nop dword [rax]
0x00007b50      488d4601       lea rax, [rsi + 1]
0x00007b54      c3             ret
0x00007b55      90             nop
0x00007b56      662e0f1f8400.  nop word cs:[rax + rax]
;-- check_arrival_expand_ecl_sub:
0x00007b60      4157           push r15
0x00007b62      4156           push r14
0x00007b64      4c8d7610       lea r14, [rsi + 0x10]
0x00007b68      4155           push r13
0x00007b6a      4154           push r12
0x00007b6c      4989cf         mov r15, rcx
0x00007b6f      55             push rbp
0x00007b70      53             push rbx
0x00007b71      4989fc         mov r12, rdi
0x00007b74      4889f5         mov rbp, rsi
0x00007b77      4889d3         mov rbx, rdx
0x00007b7a      4589c5         mov r13d, r8d
0x00007b7d      4883ec08       sub rsp, 8
0x00007b81      488b7d08       mov rdi, qword [rbp + 8]
0x00007b85      4889da         mov rdx, rbx
0x00007b88      4c89f6         mov rsi, r14
0x00007b8b      e850ffffff     call sym.re_node_set_contains.isra.3
0x00007b90      4885c0         test rax, rax
0x00007b93      756b           jne 0x7c00
0x00007b95      4889d8         mov rax, rbx
0x00007b98      48c1e004       shl rax, 4
0x00007b9c      49030424       add rax, qword [r12]
0x00007ba0      0fb65008       movzx edx, byte [rax + 8]
0x00007ba4      4439ea         cmp edx, r13d
0x00007ba7      7505           jne 0x7bae
0x00007ba9      4c3938         cmp qword [rax], r15
0x00007bac      743a           je 0x7be8
0x00007bae      4889de         mov rsi, rbx
0x00007bb1      4889ef         mov rdi, rbp
0x00007bb4      e8e7e9ffff     call sym.re_node_set_insert
0x00007bb9      84c0           test al, al
0x00007bbb      745b           je 0x7c18
0x00007bbd      488d1c5b       lea rbx, [rbx + rbx*2]
0x00007bc1      498b542428     mov rdx, qword [r12 + 0x28]
0x00007bc6      48c1e303       shl rbx, 3
0x00007bca      4801da         add rdx, rbx
0x00007bcd      488b4208       mov rax, qword [rdx + 8]
0x00007bd1      4885c0         test rax, rax
0x00007bd4      742a           je 0x7c00
0x00007bd6      4883f802       cmp rax, 2
0x00007bda      488b5210       mov rdx, qword [rdx + 0x10]
0x00007bde      7450           je 0x7c30
0x00007be0      488b1a         mov rbx, qword [rdx]
0x00007be3      eb9c           jmp 0x7b81
0x00007be5      0f1f00         nop dword [rax]
0x00007be8      4183fd09       cmp r13d, 9
0x00007bec      7512           jne 0x7c00
0x00007bee      4889de         mov rsi, rbx
0x00007bf1      4889ef         mov rdi, rbp
0x00007bf4      e8a7e9ffff     call sym.re_node_set_insert
0x00007bf9      84c0           test al, al
0x00007bfb      741b           je 0x7c18
0x00007bfd      0f1f00         nop dword [rax]
0x00007c00      31c0           xor eax, eax
0x00007c02      4883c408       add rsp, 8
0x00007c06      5b             pop rbx
0x00007c07      5d             pop rbp
0x00007c08      415c           pop r12
0x00007c0a      415d           pop r13
0x00007c0c      415e           pop r14
0x00007c0e      415f           pop r15
0x00007c10      c3             ret
0x00007c11      0f1f80000000.  nop dword [rax]
0x00007c18      4883c408       add rsp, 8
0x00007c1c      b80c000000     mov eax, 0xc
0x00007c21      5b             pop rbx
0x00007c22      5d             pop rbp
0x00007c23      415c           pop r12
0x00007c25      415d           pop r13
0x00007c27      415e           pop r14
0x00007c29      415f           pop r15
0x00007c2b      c3             ret
0x00007c2c      0f1f4000       nop dword [rax]
0x00007c30      488b5208       mov rdx, qword [rdx + 8]
0x00007c34      4589e8         mov r8d, r13d
0x00007c37      4c89f9         mov rcx, r15
0x00007c3a      4889ee         mov rsi, rbp
0x00007c3d      4c89e7         mov rdi, r12
0x00007c40      e81bffffff     call sym.check_arrival_expand_ecl_sub
0x00007c45      85c0           test eax, eax
0x00007c47      75b9           jne 0x7c02
0x00007c49      498b442428     mov rax, qword [r12 + 0x28]
0x00007c4e      488b541810     mov rdx, qword [rax + rbx + 0x10]
0x00007c53      eb8b           jmp 0x7be0
0x00007c55      90             nop
0x00007c56      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_node_set_remove_at.isra.4.part.5:
0x00007c60      488b07         mov rax, qword [rdi]
0x00007c63      4839d0         cmp rax, rdx
0x00007c66      7e2a           jle 0x7c92
0x00007c68      4883e801       sub rax, 1
0x00007c6c      4839c2         cmp rdx, rax
0x00007c6f      488907         mov qword [rdi], rax
0x00007c72      7d1e           jge 0x7c92
0x00007c74      488b06         mov rax, qword [rsi]
0x00007c77      660f1f840000.  nop word [rax + rax]
0x00007c80      488b4cd008     mov rcx, qword [rax + rdx*8 + 8]
0x00007c85      48890cd0       mov qword [rax + rdx*8], rcx
0x00007c89      4883c201       add rdx, 1
0x00007c8d      483b17         cmp rdx, qword [rdi]
0x00007c90      7cee           jl 0x7c80
0x00007c92      f3c3           ret
0x00007c94      6690           nop
0x00007c96      662e0f1f8400.  nop word cs:[rax + rax]
;-- optimize_subexps:
0x00007ca0      0fb64630       movzx eax, byte [rsi + 0x30]
0x00007ca4      3c04           cmp al, 4
0x00007ca6      7458           je 0x7d00
0x00007ca8      3c11           cmp al, 0x11
0x00007caa      7404           je 0x7cb0
0x00007cac      31c0           xor eax, eax
0x00007cae      c3             ret
0x00007caf      90             nop
0x00007cb0      488b4608       mov rax, qword [rsi + 8]
0x00007cb4      4885c0         test rax, rax
0x00007cb7      74f3           je 0x7cac
0x00007cb9      80783011       cmp byte [rax + 0x30], 0x11
0x00007cbd      75ed           jne 0x7cac
0x00007cbf      488b4828       mov rcx, qword [rax + 0x28]
0x00007cc3      488b4008       mov rax, qword [rax + 8]
0x00007cc7      4885c0         test rax, rax
0x00007cca      48894608       mov qword [rsi + 8], rax
0x00007cce      7403           je 0x7cd3
0x00007cd0      488930         mov qword [rax], rsi
0x00007cd3      488b87e00000.  mov rax, qword [rdi + 0xe0]
0x00007cda      488b5628       mov rdx, qword [rsi + 0x28]
0x00007cde      4883f93f       cmp rcx, 0x3f
0x00007ce2      488b14d0       mov rdx, qword [rax + rdx*8]
0x00007ce6      488914c8       mov qword [rax + rcx*8], rdx
0x00007cea      7fc0           jg 0x7cac
0x00007cec      48c7c0feffff.  mov rax, 0xfffffffffffffffe
0x00007cf3      48d3c0         rol rax, cl
0x00007cf6      482187a00000.  and qword [rdi + 0xa0], rax
0x00007cfd      ebad           jmp 0x7cac
0x00007cff      90             nop
0x00007d00      488b87e00000.  mov rax, qword [rdi + 0xe0]
0x00007d07      4885c0         test rax, rax
0x00007d0a      74a0           je 0x7cac
0x00007d0c      48635628       movsxd rdx, dword [rsi + 0x28]
0x00007d10      488b0cd0       mov rcx, qword [rax + rdx*8]
0x00007d14      b801000000     mov eax, 1
0x00007d19      d3e0           shl eax, cl
0x00007d1b      48894e28       mov qword [rsi + 0x28], rcx
0x00007d1f      4898           cdqe
0x00007d21      480987a00000.  or qword [rdi + 0xa0], rax
0x00007d28      31c0           xor eax, eax
0x00007d2a      c3             ret
0x00007d2b      0f1f440000     nop dword [rax + rax]
;-- calc_next:
0x00007d30      0fb64630       movzx eax, byte [rsi + 0x30]
0x00007d34      488b5608       mov rdx, qword [rsi + 8]
0x00007d38      3c0b           cmp al, 0xb
0x00007d3a      7444           je 0x7d80
0x00007d3c      3c10           cmp al, 0x10
0x00007d3e      7428           je 0x7d68
0x00007d40      4885d2         test rdx, rdx
0x00007d43      7408           je 0x7d4d
0x00007d45      488b4620       mov rax, qword [rsi + 0x20]
0x00007d49      48894220       mov qword [rdx + 0x20], rax
0x00007d4d      488b4610       mov rax, qword [rsi + 0x10]
0x00007d51      4885c0         test rax, rax
0x00007d54      7408           je 0x7d5e
0x00007d56      488b5620       mov rdx, qword [rsi + 0x20]
0x00007d5a      48895020       mov qword [rax + 0x20], rdx
0x00007d5e      31c0           xor eax, eax
0x00007d60      c3             ret
0x00007d61      0f1f80000000.  nop dword [rax]
0x00007d68      488b4610       mov rax, qword [rsi + 0x10]
0x00007d6c      488b4818       mov rcx, qword [rax + 0x18]
0x00007d70      48894a20       mov qword [rdx + 0x20], rcx
0x00007d74      488b5620       mov rdx, qword [rsi + 0x20]
0x00007d78      48895020       mov qword [rax + 0x20], rdx
0x00007d7c      31c0           xor eax, eax
0x00007d7e      c3             ret
0x00007d7f      90             nop
0x00007d80      48897220       mov qword [rdx + 0x20], rsi
0x00007d84      31c0           xor eax, eax
0x00007d86      c3             ret
0x00007d87      660f1f840000.  nop word [rax + rax]
;-- check_dst_limits.isra.13:
0x00007d90      4157           push r15
0x00007d92      4156           push r14
0x00007d94      4155           push r13
0x00007d96      4154           push r12
0x00007d98      55             push rbp
0x00007d99      53             push rbx
0x00007d9a      31db           xor ebx, ebx
0x00007d9c      4883ec48       sub rsp, 0x48
0x00007da0      488b87980000.  mov rax, qword [rdi + 0x98]
0x00007da7      4c8bbfc80000.  mov r15, qword [rdi + 0xc8]
0x00007dae      4c8ba4248000.  mov r12, qword [rsp + 0x80]
0x00007db6      4889442408     mov qword [rsp + 8], rax
0x00007dbb      4c89fd         mov rbp, r15
0x00007dbe      4839eb         cmp rbx, rbp
0x00007dc1      7d58           jge 0x7e1b
0x00007dc3      488d042b       lea rax, [rbx + rbp]
0x00007dc7      4c8bafd80000.  mov r13, qword [rdi + 0xd8]
0x00007dce      4989c2         mov r10, rax
0x00007dd1      49c1ea3f       shr r10, 0x3f
0x00007dd5      4901c2         add r10, rax
0x00007dd8      49d1fa         sar r10, 1
0x00007ddb      4b8d0492       lea rax, [r10 + r10*4]
0x00007ddf      4d3b44c508     cmp r8, qword [r13 + rax*8 + 8]
0x00007de4      7e30           jle 0x7e16
0x00007de6      e995010000     jmp 0x7f80
0x00007deb      0f1f440000     nop dword [rax + rax]
0x00007df0      4e8d1c13       lea r11, [rbx + r10]
0x00007df4      4c89d8         mov rax, r11
0x00007df7      48c1e83f       shr rax, 0x3f
0x00007dfb      4c01d8         add rax, r11
0x00007dfe      48d1f8         sar rax, 1
0x00007e01      4c8d1c80       lea r11, [rax + rax*4]
0x00007e05      4989c6         mov r14, rax
0x00007e08      4f3944dd08     cmp qword [r13 + r11*8 + 8], r8
0x00007e0d      0f8c7d010000   jl 0x7f90
0x00007e13      4989c2         mov r10, rax
0x00007e16      4c39d3         cmp rbx, r10
0x00007e19      7cd5           jl 0x7df0
0x00007e1b      4939df         cmp r15, rbx
0x00007e1e      0f8e9c010000   jle 0x7fc0
0x00007e24      4c8b9fd80000.  mov r11, qword [rdi + 0xd8]
0x00007e2b      488d049b       lea rax, [rbx + rbx*4]
0x00007e2f      498d04c3       lea rax, [r11 + rax*8]
0x00007e33      4c3b4008       cmp r8, qword [rax + 8]
0x00007e37      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00007e3e      480f45d8       cmovne rbx, rax
0x00007e42      4c89f8         mov rax, r15
0x00007e45      31ed           xor ebp, ebp
0x00007e47      4839c5         cmp rbp, rax
0x00007e4a      7d58           jge 0x7ea4
0x00007e4c      4c8d5c0500     lea r11, [rbp + rax]
0x00007e51      4d89da         mov r10, r11
0x00007e54      49c1ea3f       shr r10, 0x3f
0x00007e58      4d01da         add r10, r11
0x00007e5b      4c8b9fd80000.  mov r11, qword [rdi + 0xd8]
0x00007e62      49d1fa         sar r10, 1
0x00007e65      4f8d2c92       lea r13, [r10 + r10*4]
0x00007e69      4f3b64eb08     cmp r12, qword [r11 + r13*8 + 8]
0x00007e6e      7e2f           jle 0x7e9f
0x00007e70      e92b010000     jmp 0x7fa0
0x00007e75      0f1f00         nop dword [rax]
0x00007e78      4e8d6c1500     lea r13, [rbp + r10]
0x00007e7d      4c89e8         mov rax, r13
0x00007e80      48c1e83f       shr rax, 0x3f
0x00007e84      4c01e8         add rax, r13
0x00007e87      48d1f8         sar rax, 1
0x00007e8a      4c8d2c80       lea r13, [rax + rax*4]
0x00007e8e      4989c6         mov r14, rax
0x00007e91      4f3964eb08     cmp qword [r11 + r13*8 + 8], r12
0x00007e96      0f8c14010000   jl 0x7fb0
0x00007e9c      4989c2         mov r10, rax
0x00007e9f      4c39d5         cmp rbp, r10
0x00007ea2      7cd4           jl 0x7e78
0x00007ea4      4939ef         cmp r15, rbp
0x00007ea7      0f8e23010000   jle 0x7fd0
0x00007ead      4c8b97d80000.  mov r10, qword [rdi + 0xd8]
0x00007eb4      488d44ad00     lea rax, [rbp + rbp*4]
0x00007eb9      498d04c2       lea rax, [r10 + rax*8]
0x00007ebd      4c3b6008       cmp r12, qword [rax + 8]
0x00007ec1      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00007ec8      480f45e8       cmovne rbp, rax
0x00007ecc      48833e00       cmp qword [rsi], 0
0x00007ed0      0f8e1c010000   jle 0x7ff2
0x00007ed6      48896c2430     mov qword [rsp + 0x30], rbp
0x00007edb      4c894c2420     mov qword [rsp + 0x20], r9
0x00007ee0      4989fd         mov r13, rdi
0x00007ee3      4c89442418     mov qword [rsp + 0x18], r8
0x00007ee8      48894c2410     mov qword [rsp + 0x10], rcx
0x00007eed      4531f6         xor r14d, r14d
0x00007ef0      4889742438     mov qword [rsp + 0x38], rsi
0x00007ef5      48895c2428     mov qword [rsp + 0x28], rbx
0x00007efa      4889d5         mov rbp, rdx
0x00007efd      4d89e7         mov r15, r12
0x00007f00      488b4500       mov rax, qword [rbp]
0x00007f04      498b95d80000.  mov rdx, qword [r13 + 0xd8]
0x00007f0b      4c89ef         mov rdi, r13
0x00007f0e      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00007f13      4c8b442418     mov r8, qword [rsp + 0x18]
0x00007f18      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00007f1d      4a8b34f0       mov rsi, qword [rax + r14*8]
0x00007f21      488d04b6       lea rax, [rsi + rsi*4]
0x00007f25      488d04c2       lea rax, [rdx + rax*8]
0x00007f29      488b542408     mov rdx, qword [rsp + 8]
0x00007f2e      488b00         mov rax, qword [rax]
0x00007f31      48c1e004       shl rax, 4
0x00007f35      480302         add rax, qword [rdx]
0x00007f38      4c8b20         mov r12, qword [rax]
0x00007f3b      4c89e2         mov rdx, r12
0x00007f3e      e80de4ffff     call sym.check_dst_limits_calc_pos
0x00007f43      89c3           mov ebx, eax
0x00007f45      488b4500       mov rax, qword [rbp]
0x00007f49      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00007f4e      488b4c2420     mov rcx, qword [rsp + 0x20]
0x00007f53      4d89f8         mov r8, r15
0x00007f56      4c89e2         mov rdx, r12
0x00007f59      4c89ef         mov rdi, r13
0x00007f5c      4a8b34f0       mov rsi, qword [rax + r14*8]
0x00007f60      e8ebe3ffff     call sym.check_dst_limits_calc_pos
0x00007f65      39c3           cmp ebx, eax
0x00007f67      7477           je 0x7fe0
0x00007f69      b801000000     mov eax, 1
0x00007f6e      4883c448       add rsp, 0x48
0x00007f72      5b             pop rbx
0x00007f73      5d             pop rbp
0x00007f74      415c           pop r12
0x00007f76      415d           pop r13
0x00007f78      415e           pop r14
0x00007f7a      415f           pop r15
0x00007f7c      c3             ret
0x00007f7d      0f1f00         nop dword [rax]
0x00007f80      4d89d6         mov r14, r10
0x00007f83      4989ea         mov r10, rbp
0x00007f86      662e0f1f8400.  nop word cs:[rax + rax]
0x00007f90      498d5e01       lea rbx, [r14 + 1]
0x00007f94      4c89d5         mov rbp, r10
0x00007f97      e922feffff     jmp 0x7dbe
0x00007f9c      0f1f4000       nop dword [rax]
0x00007fa0      4d89d6         mov r14, r10
0x00007fa3      4989c2         mov r10, rax
0x00007fa6      662e0f1f8400.  nop word cs:[rax + rax]
0x00007fb0      498d6e01       lea rbp, [r14 + 1]
0x00007fb4      4c89d0         mov rax, r10
0x00007fb7      e98bfeffff     jmp 0x7e47
0x00007fbc      0f1f4000       nop dword [rax]
0x00007fc0      48c7c3ffffff.  mov rbx, 0xffffffffffffffff
0x00007fc7      e976feffff     jmp 0x7e42
0x00007fcc      0f1f4000       nop dword [rax]
0x00007fd0      48c7c5ffffff.  mov rbp, 0xffffffffffffffff
0x00007fd7      e9f0feffff     jmp 0x7ecc
0x00007fdc      0f1f4000       nop dword [rax]
0x00007fe0      488b442438     mov rax, qword [rsp + 0x38]
0x00007fe5      4983c601       add r14, 1
0x00007fe9      4c3b30         cmp r14, qword [rax]
0x00007fec      0f8c0effffff   jl 0x7f00
0x00007ff2      31c0           xor eax, eax
0x00007ff4      e975ffffff     jmp 0x7f6e
0x00007ff9      0f1f80000000.  nop dword [rax]
;-- re_node_set_merge:
0x00008000      4885f6         test rsi, rsi
0x00008003      0f84ef000000   je 0x80f8
0x00008009      488b5608       mov rdx, qword [rsi + 8]
0x0000800d      4885d2         test rdx, rdx
0x00008010      0f84e2000000   je 0x80f8
0x00008016      4154           push r12
0x00008018      55             push rbp
0x00008019      4989f4         mov r12, rsi
0x0000801c      53             push rbx
0x0000801d      488b4708       mov rax, qword [rdi + 8]
0x00008021      4889fb         mov rbx, rdi
0x00008024      488b37         mov rsi, qword [rdi]
0x00008027      488d0c50       lea rcx, [rax + rdx*2]
0x0000802b      4839ce         cmp rsi, rcx
0x0000802e      0f8c44010000   jl 0x8178
0x00008034      4885c0         test rax, rax
0x00008037      0f8473010000   je 0x81b0
0x0000803d      488d2c50       lea rbp, [rax + rdx*2]
0x00008041      4883ea01       sub rdx, 1
0x00008045      4883e801       sub rax, 1
0x00008049      4889d7         mov rdi, rdx
0x0000804c      48f7d7         not rdi
0x0000804f      4885ff         test rdi, rdi
0x00008052      793c           jns 0x8090
0x00008054      4885c0         test rax, rax
0x00008057      7837           js 0x8090
0x00008059      488b4b10       mov rcx, qword [rbx + 0x10]
0x0000805d      498b742410     mov rsi, qword [r12 + 0x10]
0x00008062      488b34d6       mov rsi, qword [rsi + rdx*8]
0x00008066      483934c1       cmp qword [rcx + rax*8], rsi
0x0000806a      0f8490000000   je 0x8100
0x00008070      0f8da2000000   jge 0x8118
0x00008076      4883ea01       sub rdx, 1
0x0000807a      4883ed01       sub rbp, 1
0x0000807e      4889d7         mov rdi, rdx
0x00008081      488934e9       mov qword [rcx + rbp*8], rsi
0x00008085      48f7d7         not rdi
0x00008088      4885ff         test rdi, rdi
0x0000808b      78c7           js 0x8054
0x0000808d      0f1f00         nop dword [rax]
0x00008090      4885d2         test rdx, rdx
0x00008093      0f898f000000   jns 0x8128
0x00008099      488b4b08       mov rcx, qword [rbx + 8]
0x0000809d      498b442408     mov rax, qword [r12 + 8]
0x000080a2      4c8d4441ff     lea r8, [rcx + rax*2 - 1]
0x000080a7      4c89c2         mov rdx, r8
0x000080aa      4829ea         sub rdx, rbp
0x000080ad      4883c201       add rdx, 1
0x000080b1      7437           je 0x80ea
0x000080b3      488b7b10       mov rdi, qword [rbx + 0x10]
0x000080b7      488d41ff       lea rax, [rcx - 1]
0x000080bb      4801d1         add rcx, rdx
0x000080be      48894b08       mov qword [rbx + 8], rcx
0x000080c2      660f1f440000   nop word [rax + rax]
0x000080c8      4a8b34c7       mov rsi, qword [rdi + r8*8]
0x000080cc      488b0cc7       mov rcx, qword [rdi + rax*8]
0x000080d0      4c8d0c10       lea r9, [rax + rdx]
0x000080d4      4e8d0ccf       lea r9, [rdi + r9*8]
0x000080d8      4839ce         cmp rsi, rcx
0x000080db      7e73           jle 0x8150
0x000080dd      4983e801       sub r8, 1
0x000080e1      4883ea01       sub rdx, 1
0x000080e5      498931         mov qword [r9], rsi
0x000080e8      75de           jne 0x80c8
0x000080ea      31c0           xor eax, eax
0x000080ec      5b             pop rbx
0x000080ed      5d             pop rbp
0x000080ee      415c           pop r12
0x000080f0      c3             ret
0x000080f1      0f1f80000000.  nop dword [rax]
0x000080f8      31c0           xor eax, eax
0x000080fa      c3             ret
0x000080fb      0f1f440000     nop dword [rax + rax]
0x00008100      4883ea01       sub rdx, 1
0x00008104      4883e801       sub rax, 1
0x00008108      4889d7         mov rdi, rdx
0x0000810b      48f7d7         not rdi
0x0000810e      e93cffffff     jmp 0x804f
0x00008113      0f1f440000     nop dword [rax + rax]
0x00008118      4883e801       sub rax, 1
0x0000811c      e92effffff     jmp 0x804f
0x00008121      0f1f80000000.  nop dword [rax]
0x00008128      488b4310       mov rax, qword [rbx + 0x10]
0x0000812c      4883c201       add rdx, 1
0x00008130      498b742410     mov rsi, qword [r12 + 0x10]
0x00008135      4829d5         sub rbp, rdx
0x00008138      48c1e203       shl rdx, 3
0x0000813c      488d3ce8       lea rdi, [rax + rbp*8]
0x00008140      e88b99ffff     call sym.imp.memcpy
0x00008145      e94fffffff     jmp 0x8099
0x0000814a      660f1f440000   nop word [rax + rax]
0x00008150      4883e801       sub rax, 1
0x00008154      498909         mov qword [r9], rcx
0x00008157      0f896bffffff   jns 0x80c8
0x0000815d      488d34ef       lea rsi, [rdi + rbp*8]
0x00008161      48c1e203       shl rdx, 3
0x00008165      e86699ffff     call sym.imp.memcpy
0x0000816a      31c0           xor eax, eax
0x0000816c      e97bffffff     jmp 0x80ec
0x00008171      0f1f80000000.  nop dword [rax]
0x00008178      4801f2         add rdx, rsi
0x0000817b      488b7f10       mov rdi, qword [rdi + 0x10]
0x0000817f      488d2c12       lea rbp, [rdx + rdx]
0x00008183      48c1e204       shl rdx, 4
0x00008187      4889d6         mov rsi, rdx
0x0000818a      e8d199ffff     call sym.imp.realloc
0x0000818f      4885c0         test rax, rax
0x00008192      7440           je 0x81d4
0x00008194      48894310       mov qword [rbx + 0x10], rax
0x00008198      48892b         mov qword [rbx], rbp
0x0000819b      488b4308       mov rax, qword [rbx + 8]
0x0000819f      498b542408     mov rdx, qword [r12 + 8]
0x000081a4      e98bfeffff     jmp 0x8034
0x000081a9      0f1f80000000.  nop dword [rax]
0x000081b0      48895308       mov qword [rbx + 8], rdx
0x000081b4      498b442408     mov rax, qword [r12 + 8]
0x000081b9      488b7b10       mov rdi, qword [rbx + 0x10]
0x000081bd      498b742410     mov rsi, qword [r12 + 0x10]
0x000081c2      488d14c50000.  lea rdx, [rax*8]
0x000081ca      e80199ffff     call sym.imp.memcpy
0x000081cf      e916ffffff     jmp 0x80ea
0x000081d4      b80c000000     mov eax, 0xc
0x000081d9      e90effffff     jmp 0x80ec
0x000081de      6690           nop
;-- calc_eclosure_iter:
0x000081e0      4157           push r15
0x000081e2      4156           push r14
0x000081e4      4989f7         mov r15, rsi
0x000081e7      4155           push r13
0x000081e9      4154           push r12
0x000081eb      55             push rbp
0x000081ec      53             push rbx
0x000081ed      488d1c52       lea rbx, [rdx + rdx*2]
0x000081f1      4889d5         mov rbp, rdx
0x000081f4      4883ec68       sub rsp, 0x68
0x000081f8      4c8b6628       mov r12, qword [rsi + 0x28]
0x000081fc      48c1e303       shl rbx, 3
0x00008200      64488b042528.  mov rax, qword fs:[0x28]
0x00008209      4889442458     mov qword [rsp + 0x58], rax
0x0000820e      31c0           xor eax, eax
0x00008210      48897c2410     mov qword [rsp + 0x10], rdi
0x00008215      894c241c       mov dword [rsp + 0x1c], ecx
0x00008219      4901dc         add r12, rbx
0x0000821c      498b442408     mov rax, qword [r12 + 8]
0x00008221      48c744242800.  mov qword [rsp + 0x28], 0
0x0000822a      488d7801       lea rdi, [rax + 1]
0x0000822e      48897c2420     mov qword [rsp + 0x20], rdi
0x00008233      48c1e703       shl rdi, 3
0x00008237      e8c498ffff     call sym.imp.malloc
0x0000823c      4885c0         test rax, rax
0x0000823f      4889442430     mov qword [rsp + 0x30], rax
0x00008244      0f8436020000   je 0x8480
0x0000824a      498b4730       mov rax, qword [r15 + 0x30]
0x0000824e      498b17         mov rdx, qword [r15]
0x00008251      4989ed         mov r13, rbp
0x00008254      49c1e504       shl r13, 4
0x00008258      48c7441808ff.  mov qword [rax + rbx + 8], 0xffffffffffffffff
0x00008261      4a8d042a       lea rax, [rdx + r13]
0x00008265      448b4008       mov r8d, dword [rax + 8]
0x00008269      41f7c000ff03.  test r8d, 0x3ff00
0x00008270      0f859a010000   jne 0x8410
0x00008276      f6400808       test byte [rax + 8], 8
0x0000827a      0f84c0000000   je 0x8340
0x00008280      498b7728       mov rsi, qword [r15 + 0x28]
0x00008284      488d041e       lea rax, [rsi + rbx]
0x00008288      4883780800     cmp qword [rax + 8], 0
0x0000828d      0f8ead000000   jle 0x8340
0x00008293      488d542420     lea rdx, [rsp + 0x20]
0x00008298      c644241b00     mov byte [rsp + 0x1b], 0
0x0000829d      4531f6         xor r14d, r14d
0x000082a0      4c8d642440     lea r12, [rsp + 0x40]
0x000082a5      4889542408     mov qword [rsp + 8], rdx
0x000082aa      eb1a           jmp 0x82c6
0x000082ac      0f1f4000       nop dword [rax]
0x000082b0      498b7728       mov rsi, qword [r15 + 0x28]
0x000082b4      4983c601       add r14, 1
0x000082b8      488d041e       lea rax, [rsi + rbx]
0x000082bc      4c397008       cmp qword [rax + 8], r14
0x000082c0      0f8e01010000   jle 0x83c7
0x000082c6      488b4010       mov rax, qword [rax + 0x10]
0x000082ca      4a8b14f0       mov rdx, qword [rax + r14*8]
0x000082ce      498b4730       mov rax, qword [r15 + 0x30]
0x000082d2      4c8d0452       lea r8, [rdx + rdx*2]
0x000082d6      4e8d2cc50000.  lea r13, [r8*8]
0x000082de      4c01e8         add rax, r13
0x000082e1      488b4808       mov rcx, qword [rax + 8]
0x000082e5      4883f9ff       cmp rcx, 0xffffffffffffffff
0x000082e9      0f84c1000000   je 0x83b0
0x000082ef      4885c9         test rcx, rcx
0x000082f2      0f8470010000   je 0x8468
0x000082f8      f30f6f00       movdqu xmm0, xmmword [rax]
0x000082fc      0f29442440     movaps xmmword [rsp + 0x40], xmm0
0x00008301      488b4010       mov rax, qword [rax + 0x10]
0x00008305      4889442450     mov qword [rsp + 0x50], rax
0x0000830a      488b7c2408     mov rdi, qword [rsp + 8]
0x0000830f      4c89e6         mov rsi, r12
0x00008312      e8e9fcffff     call sym.re_node_set_merge
0x00008317      85c0           test eax, eax
0x00008319      756b           jne 0x8386
0x0000831b      498b4730       mov rax, qword [r15 + 0x30]
0x0000831f      4a837c280800   cmp qword [rax + r13 + 8], 0
0x00008325      7589           jne 0x82b0
0x00008327      488b7c2450     mov rdi, qword [rsp + 0x50]
0x0000832c      e89f95ffff     call sym.imp.free
0x00008331      c644241b01     mov byte [rsp + 0x1b], 1
0x00008336      e975ffffff     jmp 0x82b0
0x0000833b      0f1f440000     nop dword [rax + rax]
0x00008340      488d7c2420     lea rdi, [rsp + 0x20]
0x00008345      4889ee         mov rsi, rbp
0x00008348      e853e2ffff     call sym.re_node_set_insert
0x0000834d      84c0           test al, al
0x0000834f      0f842b010000   je 0x8480
0x00008355      498b4730       mov rax, qword [r15 + 0x30]
0x00008359      660f6f442420   movdqa xmm0, xmmword [rsp + 0x20]
0x0000835f      0f110418       movups xmmword [rax + rbx], xmm0
0x00008363      488b542430     mov rdx, qword [rsp + 0x30]
0x00008368      4889541810     mov qword [rax + rbx + 0x10], rdx
0x0000836d      488b5c2410     mov rbx, qword [rsp + 0x10]
0x00008372      488b442430     mov rax, qword [rsp + 0x30]
0x00008377      660f6f442420   movdqa xmm0, xmmword [rsp + 0x20]
0x0000837d      0f2903         movaps xmmword [rbx], xmm0
0x00008380      48894310       mov qword [rbx + 0x10], rax
0x00008384      31c0           xor eax, eax
0x00008386      488b742458     mov rsi, qword [rsp + 0x58]
0x0000838b      644833342528.  xor rsi, qword fs:[0x28]
0x00008394      0f85f0000000   jne 0x848a
0x0000839a      4883c468       add rsp, 0x68
0x0000839e      5b             pop rbx
0x0000839f      5d             pop rbp
0x000083a0      415c           pop r12
0x000083a2      415d           pop r13
0x000083a4      415e           pop r14
0x000083a6      415f           pop r15
0x000083a8      c3             ret
0x000083a9      0f1f80000000.  nop dword [rax]
0x000083b0      488d041e       lea rax, [rsi + rbx]
0x000083b4      4983c601       add r14, 1
0x000083b8      c644241b01     mov byte [rsp + 0x1b], 1
0x000083bd      4c397008       cmp qword [rax + 8], r14
0x000083c1      0f8ffffeffff   jg 0x82c6
0x000083c7      488d7c2420     lea rdi, [rsp + 0x20]
0x000083cc      4889ee         mov rsi, rbp
0x000083cf      e8cce1ffff     call sym.re_node_set_insert
0x000083d4      84c0           test al, al
0x000083d6      0f84a4000000   je 0x8480
0x000083dc      807c241c01     cmp byte [rsp + 0x1c], 1
0x000083e1      498b4730       mov rax, qword [r15 + 0x30]
0x000083e5      488d1418       lea rdx, [rax + rbx]
0x000083e9      0f846affffff   je 0x8359
0x000083ef      807c241b00     cmp byte [rsp + 0x1b], 0
0x000083f4      0f845fffffff   je 0x8359
0x000083fa      48c742080000.  mov qword [rdx + 8], 0
0x00008402      e966ffffff     jmp 0x836d
0x00008407      660f1f840000.  nop word [rax + rax]
0x00008410      49837c240800   cmp qword [r12 + 8], 0
0x00008416      0f8424ffffff   je 0x8340
0x0000841c      498b4c2410     mov rcx, qword [r12 + 0x10]
0x00008421      488b09         mov rcx, qword [rcx]
0x00008424      48c1e104       shl rcx, 4
0x00008428      f6440a0a04     test byte [rdx + rcx + 0xa], 4
0x0000842d      0f8543feffff   jne 0x8276
0x00008433      41c1e808       shr r8d, 8
0x00008437      4889e9         mov rcx, rbp
0x0000843a      4889ea         mov rdx, rbp
0x0000843d      4181e0ff0300.  and r8d, 0x3ff
0x00008444      4889ee         mov rsi, rbp
0x00008447      4c89ff         mov rdi, r15
0x0000844a      e8a1f0ffff     call sym.duplicate_node_closure
0x0000844f      85c0           test eax, eax
0x00008451      0f852fffffff   jne 0x8386
0x00008457      498b07         mov rax, qword [r15]
0x0000845a      4c01e8         add rax, r13
0x0000845d      e914feffff     jmp 0x8276
0x00008462      660f1f440000   nop word [rax + rax]
0x00008468      4c89fe         mov rsi, r15
0x0000846b      4c89e7         mov rdi, r12
0x0000846e      e86dfdffff     call sym.calc_eclosure_iter
0x00008473      85c0           test eax, eax
0x00008475      0f848ffeffff   je 0x830a
0x0000847b      e906ffffff     jmp 0x8386
0x00008480      b80c000000     mov eax, 0xc
0x00008485      e9fcfeffff     jmp 0x8386
0x0000848a      e85195ffff     call sym.imp.__stack_chk_fail
0x0000848f      90             nop
;-- check_arrival_expand_ecl:
0x00008490      4157           push r15
0x00008492      4156           push r14
0x00008494      4989fe         mov r14, rdi
0x00008497      4155           push r13
0x00008499      4154           push r12
0x0000849b      4989f7         mov r15, rsi
0x0000849e      55             push rbp
0x0000849f      53             push rbx
0x000084a0      4889d5         mov rbp, rdx
0x000084a3      89cb           mov ebx, ecx
0x000084a5      4883ec38       sub rsp, 0x38
0x000084a9      4c8b6608       mov r12, qword [rsi + 8]
0x000084ad      64488b042528.  mov rax, qword fs:[0x28]
0x000084b6      4889442428     mov qword [rsp + 0x28], rax
0x000084bb      31c0           xor eax, eax
0x000084bd      48c744241800.  mov qword [rsp + 0x18], 0
0x000084c6      4a8d3ce50000.  lea rdi, [r12*8]
0x000084ce      4c89642410     mov qword [rsp + 0x10], r12
0x000084d3      e82896ffff     call sym.imp.malloc
0x000084d8      4885c0         test rax, rax
0x000084db      4889442420     mov qword [rsp + 0x20], rax
0x000084e0      0f84f7000000   je 0x85dd
0x000084e6      4d85e4         test r12, r12
0x000084e9      0f8e8c000000   jle 0x857b
0x000084ef      4c8d642410     lea r12, [rsp + 0x10]
0x000084f4      4531ed         xor r13d, r13d
0x000084f7      660f1f840000.  nop word [rax + rax]
0x00008500      498b4710       mov rax, qword [r15 + 0x10]
0x00008504      4a8b14e8       mov rdx, qword [rax + r13*8]
0x00008508      498b4630       mov rax, qword [r14 + 0x30]
0x0000850c      488d0c52       lea rcx, [rdx + rdx*2]
0x00008510      488d34c8       lea rsi, [rax + rcx*8]
0x00008514      4c8b4608       mov r8, qword [rsi + 8]
0x00008518      4d85c0         test r8, r8
0x0000851b      0f8e7f000000   jle 0x85a0
0x00008521      4c8b5610       mov r10, qword [rsi + 0x10]
0x00008525      4d8b0e         mov r9, qword [r14]
0x00008528      31c9           xor ecx, ecx
0x0000852a      eb0d           jmp 0x8539
0x0000852c      0f1f4000       nop dword [rax]
0x00008530      4883c101       add rcx, 1
0x00008534      4939c8         cmp r8, rcx
0x00008537      7467           je 0x85a0
0x00008539      498b3cca       mov rdi, qword [r10 + rcx*8]
0x0000853d      4889f8         mov rax, rdi
0x00008540      48c1e004       shl rax, 4
0x00008544      4c01c8         add rax, r9
0x00008547      440fb65808     movzx r11d, byte [rax + 8]
0x0000854c      4439db         cmp ebx, r11d
0x0000854f      75df           jne 0x8530
0x00008551      483b28         cmp rbp, qword [rax]
0x00008554      75da           jne 0x8530
0x00008556      4883ffff       cmp rdi, 0xffffffffffffffff
0x0000855a      7444           je 0x85a0
0x0000855c      4189d8         mov r8d, ebx
0x0000855f      4889e9         mov rcx, rbp
0x00008562      4c89e6         mov rsi, r12
0x00008565      4c89f7         mov rdi, r14
0x00008568      e8f3f5ffff     call sym.check_arrival_expand_ecl_sub
0x0000856d      85c0           test eax, eax
0x0000856f      753b           jne 0x85ac
0x00008571      4983c501       add r13, 1
0x00008575      4d396f08       cmp qword [r15 + 8], r13
0x00008579      7f85           jg 0x8500
0x0000857b      498b7f10       mov rdi, qword [r15 + 0x10]
0x0000857f      e84c93ffff     call sym.imp.free
0x00008584      488b442420     mov rax, qword [rsp + 0x20]
0x00008589      660f6f442410   movdqa xmm0, xmmword [rsp + 0x10]
0x0000858f      49894710       mov qword [r15 + 0x10], rax
0x00008593      31c0           xor eax, eax
0x00008595      410f2907       movaps xmmword [r15], xmm0
0x00008599      eb23           jmp 0x85be
0x0000859b      0f1f440000     nop dword [rax + rax]
0x000085a0      4c89e7         mov rdi, r12
0x000085a3      e858faffff     call sym.re_node_set_merge
0x000085a8      85c0           test eax, eax
0x000085aa      74c5           je 0x8571
0x000085ac      488b7c2420     mov rdi, qword [rsp + 0x20]
0x000085b1      8944240c       mov dword [rsp + 0xc], eax
0x000085b5      e81693ffff     call sym.imp.free
0x000085ba      8b44240c       mov eax, dword [rsp + 0xc]
0x000085be      488b542428     mov rdx, qword [rsp + 0x28]
0x000085c3      644833142528.  xor rdx, qword fs:[0x28]
0x000085cc      7516           jne 0x85e4
0x000085ce      4883c438       add rsp, 0x38
0x000085d2      5b             pop rbx
0x000085d3      5d             pop rbp
0x000085d4      415c           pop r12
0x000085d6      415d           pop r13
0x000085d8      415e           pop r14
0x000085da      415f           pop r15
0x000085dc      c3             ret
0x000085dd      b80c000000     mov eax, 0xc
0x000085e2      ebda           jmp 0x85be
0x000085e4      e8f793ffff     call sym.imp.__stack_chk_fail
0x000085e9      0f1f80000000.  nop dword [rax]
;-- re_node_set_add_intersect:
0x000085f0      4c8b4e08       mov r9, qword [rsi + 8]
0x000085f4      31c0           xor eax, eax
0x000085f6      4d85c9         test r9, r9
0x000085f9      0f84b9000000   je 0x86b8
0x000085ff      4c8b5a08       mov r11, qword [rdx + 8]
0x00008603      4d85db         test r11, r11
0x00008606      0f84ac000000   je 0x86b8
0x0000860c      4155           push r13
0x0000860e      4154           push r12
0x00008610      4b8d0419       lea rax, [r9 + r11]
0x00008614      55             push rbp
0x00008615      53             push rbx
0x00008616      4989d4         mov r12, rdx
0x00008619      4889fb         mov rbx, rdi
0x0000861c      4889f5         mov rbp, rsi
0x0000861f      4883ec08       sub rsp, 8
0x00008623      488b4f08       mov rcx, qword [rdi + 8]
0x00008627      4c8b2f         mov r13, qword [rdi]
0x0000862a      488b7f10       mov rdi, qword [rdi + 0x10]
0x0000862e      488d1408       lea rdx, [rax + rcx]
0x00008632      4c39ea         cmp rdx, r13
0x00008635      0f8f25010000   jg 0x8760
0x0000863b      4a8d3409       lea rsi, [rcx + r9]
0x0000863f      4c8b6d10       mov r13, qword [rbp + 0x10]
0x00008643      498b542410     mov rdx, qword [r12 + 0x10]
0x00008648      4983e901       sub r9, 1
0x0000864c      4883e901       sub rcx, 1
0x00008650      4c01de         add rsi, r11
0x00008653      4983eb01       sub r11, 1
0x00008657      4b8b44cd00     mov rax, qword [r13 + r9*8]
0x0000865c      4e8b04da       mov r8, qword [rdx + r11*8]
0x00008660      4c39c0         cmp rax, r8
0x00008663      7411           je 0x8676
0x00008665      7d59           jge 0x86c0
0x00008667      4983eb01       sub r11, 1
0x0000866b      7863           js 0x86d0
0x0000866d      4e8b04da       mov r8, qword [rdx + r11*8]
0x00008671      4c39c0         cmp rax, r8
0x00008674      75ef           jne 0x8665
0x00008676      4885c9         test rcx, rcx
0x00008679      790f           jns 0x868a
0x0000867b      eb1b           jmp 0x8698
0x0000867d      0f1f00         nop dword [rax]
0x00008680      4883e901       sub rcx, 1
0x00008684      4883f9ff       cmp rcx, 0xffffffffffffffff
0x00008688      740e           je 0x8698
0x0000868a      4c8b14cf       mov r10, qword [rdi + rcx*8]
0x0000868e      4d39c2         cmp r10, r8
0x00008691      7fed           jg 0x8680
0x00008693      4d39c2         cmp r10, r8
0x00008696      7408           je 0x86a0
0x00008698      4883ee01       sub rsi, 1
0x0000869c      4c8904f7       mov qword [rdi + rsi*8], r8
0x000086a0      4983e901       sub r9, 1
0x000086a4      782a           js 0x86d0
0x000086a6      4983eb01       sub r11, 1
0x000086aa      7824           js 0x86d0
0x000086ac      4b8b44cd00     mov rax, qword [r13 + r9*8]
0x000086b1      ebba           jmp 0x866d
0x000086b3      0f1f440000     nop dword [rax + rax]
0x000086b8      f3c3           ret
0x000086ba      660f1f440000   nop word [rax + rax]
0x000086c0      4983e901       sub r9, 1
0x000086c4      780a           js 0x86d0
0x000086c6      4b8b44cd00     mov rax, qword [r13 + r9*8]
0x000086cb      eb93           jmp 0x8660
0x000086cd      0f1f00         nop dword [rax]
0x000086d0      488b4b08       mov rcx, qword [rbx + 8]
0x000086d4      488b5508       mov rdx, qword [rbp + 8]
0x000086d8      4801ca         add rdx, rcx
0x000086db      4903542408     add rdx, qword [r12 + 8]
0x000086e0      488d41ff       lea rax, [rcx - 1]
0x000086e4      4c8d4aff       lea r9, [rdx - 1]
0x000086e8      4829f2         sub rdx, rsi
0x000086eb      4801d1         add rcx, rdx
0x000086ee      4885d2         test rdx, rdx
0x000086f1      48894b08       mov qword [rbx + 8], rcx
0x000086f5      7e46           jle 0x873d
0x000086f7      4885c0         test rax, rax
0x000086fa      7841           js 0x873d
0x000086fc      0f1f4000       nop dword [rax]
0x00008700      4e8b04cf       mov r8, qword [rdi + r9*8]
0x00008704      488b0cc7       mov rcx, qword [rdi + rax*8]
0x00008708      4c8d1410       lea r10, [rax + rdx]
0x0000870c      4e8d14d7       lea r10, [rdi + r10*8]
0x00008710      4939c8         cmp r8, rcx
0x00008713      7e1b           jle 0x8730
0x00008715      4983e901       sub r9, 1
0x00008719      4883ea01       sub rdx, 1
0x0000871d      4d8902         mov qword [r10], r8
0x00008720      75de           jne 0x8700
0x00008722      31d2           xor edx, edx
0x00008724      eb1b           jmp 0x8741
0x00008726      662e0f1f8400.  nop word cs:[rax + rax]
0x00008730      4883e801       sub rax, 1
0x00008734      49890a         mov qword [r10], rcx
0x00008737      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000873b      75c3           jne 0x8700
0x0000873d      48c1e203       shl rdx, 3
0x00008741      488d34f7       lea rsi, [rdi + rsi*8]
0x00008745      e88693ffff     call sym.imp.memcpy
0x0000874a      31c0           xor eax, eax
0x0000874c      4883c408       add rsp, 8
0x00008750      5b             pop rbx
0x00008751      5d             pop rbp
0x00008752      415c           pop r12
0x00008754      415d           pop r13
0x00008756      c3             ret
0x00008757      660f1f840000.  nop word [rax + rax]
0x00008760      4901c5         add r13, rax
0x00008763      4a8d34ed0000.  lea rsi, [r13*8]
0x0000876b      e8f093ffff     call sym.imp.realloc
0x00008770      4885c0         test rax, rax
0x00008773      4889c7         mov rdi, rax
0x00008776      7419           je 0x8791
0x00008778      48894310       mov qword [rbx + 0x10], rax
0x0000877c      4c892b         mov qword [rbx], r13
0x0000877f      488b4b08       mov rcx, qword [rbx + 8]
0x00008783      4c8b4d08       mov r9, qword [rbp + 8]
0x00008787      4d8b5c2408     mov r11, qword [r12 + 8]
0x0000878c      e9aafeffff     jmp 0x863b
0x00008791      b80c000000     mov eax, 0xc
0x00008796      ebb4           jmp 0x874c
0x00008798      0f1f84000000.  nop dword [rax + rax]
;-- create_token_tree.isra.16:
0x000087a0      53             push rbx
0x000087a1      4889fb         mov rbx, rdi
0x000087a4      4883ec20       sub rsp, 0x20
0x000087a8      8b06           mov eax, dword [rsi]
0x000087aa      83f80f         cmp eax, 0xf
0x000087ad      7479           je 0x8828
0x000087af      4c63c8         movsxd r9, eax
0x000087b2      448d5001       lea r10d, [rax + 1]
0x000087b6      488b3f         mov rdi, qword [rdi]
0x000087b9      4c89c8         mov rax, r9
0x000087bc      48c1e006       shl rax, 6
0x000087c0      4883c008       add rax, 8
0x000087c4      49c1e106       shl r9, 6
0x000087c8      448916         mov dword [rsi], r10d
0x000087cb      4801f8         add rax, rdi
0x000087ce      4a8d340f       lea rsi, [rdi + r9]
0x000087d2      48c746080000.  mov qword [rsi + 8], 0
0x000087da      48895610       mov qword [rsi + 0x10], rdx
0x000087de      488d7e20       lea rdi, [rsi + 0x20]
0x000087e2      48894e18       mov qword [rsi + 0x18], rcx
0x000087e6      f3410f6f00     movdqu xmm0, xmmword [r8]
0x000087eb      0f114630       movups xmmword [rsi + 0x30], xmm0
0x000087ef      80671af3       and byte [rdi + 0x1a], 0xf3             ; [0xf3:1]=0
0x000087f3      4885d2         test rdx, rdx
0x000087f6      48c746200000.  mov qword [rsi + 0x20], 0
0x000087fe      48c746280000.  mov qword [rsi + 0x28], 0
0x00008806      48c74640ffff.  mov qword [rsi + 0x40], 0xffffffffffffffff
0x0000880e      7403           je 0x8813
0x00008810      488902         mov qword [rdx], rax
0x00008813      4885c9         test rcx, rcx
0x00008816      7403           je 0x881b
0x00008818      488901         mov qword [rcx], rax
0x0000881b      4883c420       add rsp, 0x20
0x0000881f      5b             pop rbx
0x00008820      c3             ret
0x00008821      0f1f80000000.  nop dword [rax]
0x00008828      bfc8030000     mov edi, 0x3c8
0x0000882d      4c89442418     mov qword [rsp + 0x18], r8
0x00008832      48894c2410     mov qword [rsp + 0x10], rcx
0x00008837      4889542408     mov qword [rsp + 8], rdx
0x0000883c      48893424       mov qword [rsp], rsi
0x00008840      e8bb92ffff     call sym.imp.malloc
0x00008845      4885c0         test rax, rax
0x00008848      4889c7         mov rdi, rax
0x0000884b      742f           je 0x887c
0x0000884d      488b03         mov rax, qword [rbx]
0x00008850      41ba01000000   mov r10d, 1
0x00008856      48893b         mov qword [rbx], rdi
0x00008859      4531c9         xor r9d, r9d
0x0000885c      4c8b442418     mov r8, qword [rsp + 0x18]
0x00008861      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00008866      488b542408     mov rdx, qword [rsp + 8]
0x0000886b      488b3424       mov rsi, qword [rsp]
0x0000886f      488907         mov qword [rdi], rax
0x00008872      b808000000     mov eax, 8
0x00008877      e948ffffff     jmp 0x87c4
0x0000887c      31c0           xor eax, eax
0x0000887e      eb9b           jmp 0x881b
;-- duplicate_tree:
0x00008880      4156           push r14
0x00008882      4155           push r13
0x00008884      4c8d6e70       lea r13, [rsi + 0x70]
0x00008888      4154           push r12
0x0000888a      55             push rbp
0x0000888b      4c8da6800000.  lea r12, [rsi + 0x80]
0x00008892      53             push rbx
0x00008893      4889fb         mov rbx, rdi
0x00008896      4883ec10       sub rsp, 0x10
0x0000889a      488b2f         mov rbp, qword [rdi]
0x0000889d      64488b042528.  mov rax, qword fs:[0x28]
0x000088a6      4889442408     mov qword [rsp + 8], rax
0x000088ab      31c0           xor eax, eax
0x000088ad      4989e6         mov r14, rsp
0x000088b0      4c8d4328       lea r8, [rbx + 0x28]
0x000088b4      31c9           xor ecx, ecx
0x000088b6      31d2           xor edx, edx
0x000088b8      4c89e6         mov rsi, r12
0x000088bb      4c89ef         mov rdi, r13
0x000088be      e8ddfeffff     call sym.create_token_tree.isra.16
0x000088c3      4885c0         test rax, rax
0x000088c6      498906         mov qword [r14], rax
0x000088c9      7451           je 0x891c
0x000088cb      488928         mov qword [rax], rbp
0x000088ce      498b2e         mov rbp, qword [r14]
0x000088d1      804d3204       or byte [rbp + 0x32], 4
0x000088d5      488b4308       mov rax, qword [rbx + 8]
0x000088d9      4885c0         test rax, rax
0x000088dc      7412           je 0x88f0
0x000088de      4c8d7508       lea r14, [rbp + 8]
0x000088e2      4889c3         mov rbx, rax
0x000088e5      ebc9           jmp 0x88b0
0x000088e7      660f1f840000.  nop word [rax + rax]
0x000088f0      31d2           xor edx, edx
0x000088f2      eb07           jmp 0x88fb
0x000088f4      0f1f4000       nop dword [rax]
0x000088f8      4889c3         mov rbx, rax
0x000088fb      488b4310       mov rax, qword [rbx + 0x10]
0x000088ff      4885c0         test rax, rax
0x00008902      7405           je 0x8909
0x00008904      4839d0         cmp rax, rdx
0x00008907      7537           jne 0x8940
0x00008909      488b03         mov rax, qword [rbx]
0x0000890c      488b6d00       mov rbp, qword [rbp]
0x00008910      4889da         mov rdx, rbx
0x00008913      4885c0         test rax, rax
0x00008916      75e0           jne 0x88f8
0x00008918      488b0424       mov rax, qword [rsp]
0x0000891c      488b4c2408     mov rcx, qword [rsp + 8]
0x00008921      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000892a      7520           jne 0x894c
0x0000892c      4883c410       add rsp, 0x10
0x00008930      5b             pop rbx
0x00008931      5d             pop rbp
0x00008932      415c           pop r12
0x00008934      415d           pop r13
0x00008936      415e           pop r14
0x00008938      c3             ret
0x00008939      0f1f80000000.  nop dword [rax]
0x00008940      4c8d7510       lea r14, [rbp + 0x10]
0x00008944      4889c3         mov rbx, rax
0x00008947      e964ffffff     jmp 0x88b0
0x0000894c      e88f90ffff     call sym.imp.__stack_chk_fail
0x00008951      0f1f440000     nop dword [rax + rax]
0x00008956      662e0f1f8400.  nop word cs:[rax + rax]
;-- lower_subexp:
0x00008960      4157           push r15
0x00008962      4156           push r14
0x00008964      4155           push r13
0x00008966      4154           push r12
0x00008968      4989d5         mov r13, rdx
0x0000896b      55             push rbp
0x0000896c      53             push rbx
0x0000896d      4883ec48       sub rsp, 0x48
0x00008971      488b1e         mov rbx, qword [rsi]
0x00008974      488b6a08       mov rbp, qword [rdx + 8]
0x00008978      64488b042528.  mov rax, qword fs:[0x28]
0x00008981      4889442438     mov qword [rsp + 0x38], rax
0x00008986      31c0           xor eax, eax
0x00008988      f6463810       test byte [rsi + 0x38], 0x10
0x0000898c      48897c2418     mov qword [rsp + 0x18], rdi
0x00008991      0f8471010000   je 0x8b08
0x00008997      4885ed         test rbp, rbp
0x0000899a      7474           je 0x8a10
0x0000899c      488b4228       mov rax, qword [rdx + 0x28]
0x000089a0      4883f83f       cmp rax, 0x3f
0x000089a4      0f8f33010000   jg 0x8add
0x000089aa      488b93a00000.  mov rdx, qword [rbx + 0xa0]
0x000089b1      480fa3c2       bt rdx, rax
0x000089b5      0f8322010000   jae 0x8add
0x000089bb      488d4370       lea rax, [rbx + 0x70]
0x000089bf      4c8d742420     lea r14, [rsp + 0x20]
0x000089c4      4883eb80       sub rbx, 0xffffffffffffff80
0x000089c8      31c9           xor ecx, ecx
0x000089ca      31d2           xor edx, edx
0x000089cc      4889de         mov rsi, rbx
0x000089cf      4989c7         mov r15, rax
0x000089d2      4d89f0         mov r8, r14
0x000089d5      4889c7         mov rdi, rax
0x000089d8      c644242808     mov byte [rsp + 0x28], 8
0x000089dd      4889442408     mov qword [rsp + 8], rax
0x000089e2      e8b9fdffff     call sym.create_token_tree.isra.16
0x000089e7      4c89ff         mov rdi, r15
0x000089ea      4d89f0         mov r8, r14
0x000089ed      31c9           xor ecx, ecx
0x000089ef      31d2           xor edx, edx
0x000089f1      4889de         mov rsi, rbx
0x000089f4      4989c4         mov r12, rax
0x000089f7      c644242809     mov byte [rsp + 0x28], 9
0x000089fc      e89ffdffff     call sym.create_token_tree.isra.16
0x00008a01      4989c7         mov r15, rax
0x00008a04      e954010000     jmp 0x8b5d
0x00008a09      0f1f80000000.  nop dword [rax]
0x00008a10      488d4370       lea rax, [rbx + 0x70]
0x00008a14      4c8d742420     lea r14, [rsp + 0x20]
0x00008a19      4883eb80       sub rbx, 0xffffffffffffff80
0x00008a1d      31c9           xor ecx, ecx
0x00008a1f      31d2           xor edx, edx
0x00008a21      4889de         mov rsi, rbx
0x00008a24      4989c7         mov r15, rax
0x00008a27      4d89f0         mov r8, r14
0x00008a2a      4889c7         mov rdi, rax
0x00008a2d      c644242808     mov byte [rsp + 0x28], 8
0x00008a32      4889442408     mov qword [rsp + 8], rax
0x00008a37      e864fdffff     call sym.create_token_tree.isra.16
0x00008a3c      4c89ff         mov rdi, r15
0x00008a3f      4d89f0         mov r8, r14
0x00008a42      31c9           xor ecx, ecx
0x00008a44      31d2           xor edx, edx
0x00008a46      4889de         mov rsi, rbx
0x00008a49      4989c4         mov r12, rax
0x00008a4c      c644242809     mov byte [rsp + 0x28], 9
0x00008a51      e84afdffff     call sym.create_token_tree.isra.16
0x00008a56      4989c3         mov r11, rax
0x00008a59      4989c7         mov r15, rax
0x00008a5c      488b7c2408     mov rdi, qword [rsp + 8]
0x00008a61      4d89f0         mov r8, r14
0x00008a64      4c89d9         mov rcx, r11
0x00008a67      4c89e2         mov rdx, r12
0x00008a6a      4889de         mov rsi, rbx
0x00008a6d      c644242810     mov byte [rsp + 0x28], 0x10             ; [0x10:1]=3
0x00008a72      4c895c2410     mov qword [rsp + 0x10], r11
0x00008a77      e824fdffff     call sym.create_token_tree.isra.16
0x00008a7c      4885c0         test rax, rax
0x00008a7f      4889c5         mov rbp, rax
0x00008a82      0f84f8000000   je 0x8b80
0x00008a88      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00008a8d      4d85db         test r11, r11
0x00008a90      0f84ea000000   je 0x8b80
0x00008a96      4d85e4         test r12, r12
0x00008a99      0f84e1000000   je 0x8b80
0x00008a9f      4d85ff         test r15, r15
0x00008aa2      0f84d8000000   je 0x8b80
0x00008aa8      498b4528       mov rax, qword [r13 + 0x28]
0x00008aac      49894728       mov qword [r15 + 0x28], rax
0x00008ab0      4989442428     mov qword [r12 + 0x28], rax
0x00008ab5      410fb64532     movzx eax, byte [r13 + 0x32]
0x00008aba      410fb65732     movzx edx, byte [r15 + 0x32]
0x00008abf      83e008         and eax, 8
0x00008ac2      83e2f7         and edx, 0xfffffff7                     ; 4294967287
0x00008ac5      89c1           mov ecx, eax
0x00008ac7      09ca           or edx, ecx
0x00008ac9      41885732       mov byte [r15 + 0x32], dl
0x00008acd      410fb6442432   movzx eax, byte [r12 + 0x32]
0x00008ad3      83e0f7         and eax, 0xfffffff7                     ; 4294967287
0x00008ad6      09c8           or eax, ecx
0x00008ad8      4188442432     mov byte [r12 + 0x32], al
0x00008add      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00008ae2      6448333c2528.  xor rdi, qword fs:[0x28]
0x00008aeb      4889e8         mov rax, rbp
0x00008aee      0f859e000000   jne 0x8b92
0x00008af4      4883c448       add rsp, 0x48
0x00008af8      5b             pop rbx
0x00008af9      5d             pop rbp
0x00008afa      415c           pop r12
0x00008afc      415d           pop r13
0x00008afe      415e           pop r14
0x00008b00      415f           pop r15
0x00008b02      c3             ret
0x00008b03      0f1f440000     nop dword [rax + rax]
0x00008b08      488d4370       lea rax, [rbx + 0x70]
0x00008b0c      4c8d742420     lea r14, [rsp + 0x20]
0x00008b11      4883eb80       sub rbx, 0xffffffffffffff80
0x00008b15      31c9           xor ecx, ecx
0x00008b17      31d2           xor edx, edx
0x00008b19      4889de         mov rsi, rbx
0x00008b1c      4989c7         mov r15, rax
0x00008b1f      4d89f0         mov r8, r14
0x00008b22      4889c7         mov rdi, rax
0x00008b25      c644242808     mov byte [rsp + 0x28], 8
0x00008b2a      4889442408     mov qword [rsp + 8], rax
0x00008b2f      e86cfcffff     call sym.create_token_tree.isra.16
0x00008b34      31c9           xor ecx, ecx
0x00008b36      31d2           xor edx, edx
0x00008b38      4c89ff         mov rdi, r15
0x00008b3b      4d89f0         mov r8, r14
0x00008b3e      4889de         mov rsi, rbx
0x00008b41      4989c4         mov r12, rax
0x00008b44      c644242809     mov byte [rsp + 0x28], 9
0x00008b49      e852fcffff     call sym.create_token_tree.isra.16
0x00008b4e      4885ed         test rbp, rbp
0x00008b51      4989c7         mov r15, rax
0x00008b54      4989c3         mov r11, rax
0x00008b57      0f84fffeffff   je 0x8a5c
0x00008b5d      488b7c2408     mov rdi, qword [rsp + 8]
0x00008b62      4d89f0         mov r8, r14
0x00008b65      4c89f9         mov rcx, r15
0x00008b68      4889ea         mov rdx, rbp
0x00008b6b      4889de         mov rsi, rbx
0x00008b6e      c644242810     mov byte [rsp + 0x28], 0x10             ; [0x10:1]=3
0x00008b73      e828fcffff     call sym.create_token_tree.isra.16
0x00008b78      4989c3         mov r11, rax
0x00008b7b      e9dcfeffff     jmp 0x8a5c
0x00008b80      488b442418     mov rax, qword [rsp + 0x18]
0x00008b85      31ed           xor ebp, ebp
0x00008b87      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x00008b8d      e94bffffff     jmp 0x8add
0x00008b92      e8498effff     call sym.imp.__stack_chk_fail
0x00008b97      660f1f840000.  nop word [rax + rax]
;-- lower_subexps:
0x00008ba0      55             push rbp
0x00008ba1      53             push rbx
0x00008ba2      4889fd         mov rbp, rdi
0x00008ba5      4889f3         mov rbx, rsi
0x00008ba8      4883ec18       sub rsp, 0x18
0x00008bac      488b5608       mov rdx, qword [rsi + 8]
0x00008bb0      64488b042528.  mov rax, qword fs:[0x28]
0x00008bb9      4889442408     mov qword [rsp + 8], rax
0x00008bbe      31c0           xor eax, eax
0x00008bc0      c74424040000.  mov dword [rsp + 4], 0
0x00008bc8      4885d2         test rdx, rdx
0x00008bcb      7406           je 0x8bd3
0x00008bcd      807a3011       cmp byte [rdx + 0x30], 0x11
0x00008bd1      744d           je 0x8c20
0x00008bd3      488b5310       mov rdx, qword [rbx + 0x10]
0x00008bd7      4885d2         test rdx, rdx
0x00008bda      7406           je 0x8be2
0x00008bdc      807a3011       cmp byte [rdx + 0x30], 0x11
0x00008be0      741e           je 0x8c00
0x00008be2      488b4c2408     mov rcx, qword [rsp + 8]
0x00008be7      6448330c2528.  xor rcx, qword fs:[0x28]
0x00008bf0      8b442404       mov eax, dword [rsp + 4]
0x00008bf4      7545           jne 0x8c3b
0x00008bf6      4883c418       add rsp, 0x18
0x00008bfa      5b             pop rbx
0x00008bfb      5d             pop rbp
0x00008bfc      c3             ret
0x00008bfd      0f1f00         nop dword [rax]
0x00008c00      488d7c2404     lea rdi, [rsp + 4]
0x00008c05      4889ee         mov rsi, rbp
0x00008c08      e853fdffff     call sym.lower_subexp
0x00008c0d      4885c0         test rax, rax
0x00008c10      48894310       mov qword [rbx + 0x10], rax
0x00008c14      74cc           je 0x8be2
0x00008c16      488918         mov qword [rax], rbx
0x00008c19      ebc7           jmp 0x8be2
0x00008c1b      0f1f440000     nop dword [rax + rax]
0x00008c20      488d7c2404     lea rdi, [rsp + 4]
0x00008c25      4889ee         mov rsi, rbp
0x00008c28      e833fdffff     call sym.lower_subexp
0x00008c2d      4885c0         test rax, rax
0x00008c30      48894308       mov qword [rbx + 8], rax
0x00008c34      749d           je 0x8bd3
0x00008c36      488918         mov qword [rax], rbx
0x00008c39      eb98           jmp 0x8bd3
0x00008c3b      e8a08dffff     call sym.imp.__stack_chk_fail
;-- re_node_set_init_copy:
0x00008c40      4154           push r12
0x00008c42      55             push rbp
0x00008c43      53             push rbx
0x00008c44      488b4608       mov rax, qword [rsi + 8]
0x00008c48      48894708       mov qword [rdi + 8], rax
0x00008c4c      4c8b6608       mov r12, qword [rsi + 8]
0x00008c50      4d85e4         test r12, r12
0x00008c53      7e3b           jle 0x8c90
0x00008c55      4889fb         mov rbx, rdi
0x00008c58      488907         mov qword [rdi], rax
0x00008c5b      488d3cc50000.  lea rdi, [rax*8]
0x00008c63      4889f5         mov rbp, rsi
0x00008c66      e8958effff     call sym.imp.malloc
0x00008c6b      4885c0         test rax, rax
0x00008c6e      48894310       mov qword [rbx + 0x10], rax
0x00008c72      743c           je 0x8cb0
0x00008c74      488b7510       mov rsi, qword [rbp + 0x10]
0x00008c78      4a8d14e50000.  lea rdx, [r12*8]
0x00008c80      4889c7         mov rdi, rax
0x00008c83      e8488effff     call sym.imp.memcpy
0x00008c88      31c0           xor eax, eax
0x00008c8a      5b             pop rbx
0x00008c8b      5d             pop rbp
0x00008c8c      415c           pop r12
0x00008c8e      c3             ret
0x00008c8f      90             nop
0x00008c90      660fefc0       pxor xmm0, xmm0
0x00008c94      48c747100000.  mov qword [rdi + 0x10], 0
0x00008c9c      31c0           xor eax, eax
0x00008c9e      0f1107         movups xmmword [rdi], xmm0
0x00008ca1      5b             pop rbx
0x00008ca2      5d             pop rbp
0x00008ca3      415c           pop r12
0x00008ca5      c3             ret
0x00008ca6      662e0f1f8400.  nop word cs:[rax + rax]
0x00008cb0      48c743080000.  mov qword [rbx + 8], 0
0x00008cb8      48c703000000.  mov qword [rbx], 0
0x00008cbf      b80c000000     mov eax, 0xc
0x00008cc4      ebc4           jmp 0x8c8a
0x00008cc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_node_set_init_union:
0x00008cd0      4885f6         test rsi, rsi
0x00008cd3      4156           push r14
0x00008cd5      4155           push r13
0x00008cd7      4154           push r12
0x00008cd9      55             push rbp
0x00008cda      53             push rbx
0x00008cdb      0f84a4000000   je 0x8d85
0x00008ce1      4885d2         test rdx, rdx
0x00008ce4      4c8b6e08       mov r13, qword [rsi + 8]
0x00008ce8      0f8492000000   je 0x8d80
0x00008cee      4d85ed         test r13, r13
0x00008cf1      0f8e89000000   jle 0x8d80
0x00008cf7      4c8b7208       mov r14, qword [rdx + 8]
0x00008cfb      4d85f6         test r14, r14
0x00008cfe      0f8eaf000000   jle 0x8db3
0x00008d04      4989fc         mov r12, rdi
0x00008d07      4b8d7c3500     lea rdi, [r13 + r14]
0x00008d0c      4889d3         mov rbx, rdx
0x00008d0f      4889f5         mov rbp, rsi
0x00008d12      49893c24       mov qword [r12], rdi
0x00008d16      48c1e703       shl rdi, 3
0x00008d1a      e8e18dffff     call sym.imp.malloc
0x00008d1f      4885c0         test rax, rax
0x00008d22      4989442410     mov qword [r12 + 0x10], rax
0x00008d27      0f84eb000000   je 0x8e18
0x00008d2d      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00008d31      4c8b4510       mov r8, qword [rbp + 0x10]
0x00008d35      31db           xor ebx, ebx
0x00008d37      31c9           xor ecx, ecx
0x00008d39      31f6           xor esi, esi
0x00008d3b      eb21           jmp 0x8d5e
0x00008d3d      0f1f00         nop dword [rax]
0x00008d40      400f94c7       sete dil
0x00008d44      488954d8f8     mov qword [rax + rbx*8 - 8], rdx
0x00008d49      4883c601       add rsi, 1
0x00008d4d      400fb6ff       movzx edi, dil
0x00008d51      4801f9         add rcx, rdi
0x00008d54      4939f5         cmp r13, rsi
0x00008d57      7e67           jle 0x8dc0
0x00008d59      4939ce         cmp r14, rcx
0x00008d5c      7e7a           jle 0x8dd8
0x00008d5e      498b14f0       mov rdx, qword [r8 + rsi*8]
0x00008d62      498b3cc9       mov rdi, qword [r9 + rcx*8]
0x00008d66      4883c301       add rbx, 1
0x00008d6a      4839fa         cmp rdx, rdi
0x00008d6d      7ed1           jle 0x8d40
0x00008d6f      4883c101       add rcx, 1
0x00008d73      48897cd8f8     mov qword [rax + rbx*8 - 8], rdi
0x00008d78      ebda           jmp 0x8d54
0x00008d7a      660f1f440000   nop word [rax + rax]
0x00008d80      4d85ed         test r13, r13
0x00008d83      7f2e           jg 0x8db3
0x00008d85      4885d2         test rdx, rdx
0x00008d88      7407           je 0x8d91
0x00008d8a      48837a0800     cmp qword [rdx + 8], 0
0x00008d8f      7f1f           jg 0x8db0
0x00008d91      660fefc0       pxor xmm0, xmm0
0x00008d95      48c747100000.  mov qword [rdi + 0x10], 0
0x00008d9d      31c0           xor eax, eax
0x00008d9f      0f2907         movaps xmmword [rdi], xmm0
0x00008da2      5b             pop rbx
0x00008da3      5d             pop rbp
0x00008da4      415c           pop r12
0x00008da6      415d           pop r13
0x00008da8      415e           pop r14
0x00008daa      c3             ret
0x00008dab      0f1f440000     nop dword [rax + rax]
0x00008db0      4889d6         mov rsi, rdx
0x00008db3      5b             pop rbx
0x00008db4      5d             pop rbp
0x00008db5      415c           pop r12
0x00008db7      415d           pop r13
0x00008db9      415e           pop r14
0x00008dbb      e980feffff     jmp sym.re_node_set_init_copy
0x00008dc0      4939ce         cmp r14, rcx
0x00008dc3      7f33           jg 0x8df8
0x00008dc5      49895c2408     mov qword [r12 + 8], rbx
0x00008dca      31c0           xor eax, eax
0x00008dcc      5b             pop rbx
0x00008dcd      5d             pop rbp
0x00008dce      415c           pop r12
0x00008dd0      415d           pop r13
0x00008dd2      415e           pop r14
0x00008dd4      c3             ret
0x00008dd5      0f1f00         nop dword [rax]
0x00008dd8      4929f5         sub r13, rsi
0x00008ddb      488d3cd8       lea rdi, [rax + rbx*8]
0x00008ddf      498d34f0       lea rsi, [r8 + rsi*8]
0x00008de3      4a8d14ed0000.  lea rdx, [r13*8]
0x00008deb      4c01eb         add rbx, r13
0x00008dee      e8dd8cffff     call sym.imp.memcpy
0x00008df3      ebd0           jmp 0x8dc5
0x00008df5      0f1f00         nop dword [rax]
0x00008df8      4929ce         sub r14, rcx
0x00008dfb      488d3cd8       lea rdi, [rax + rbx*8]
0x00008dff      498d34c9       lea rsi, [r9 + rcx*8]
0x00008e03      4a8d14f50000.  lea rdx, [r14*8]
0x00008e0b      4c01f3         add rbx, r14
0x00008e0e      e8bd8cffff     call sym.imp.memcpy
0x00008e13      ebb0           jmp 0x8dc5
0x00008e15      0f1f00         nop dword [rax]
0x00008e18      b80c000000     mov eax, 0xc
0x00008e1d      e980ffffff     jmp 0x8da2
0x00008e22      0f1f4000       nop dword [rax]
0x00008e26      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_acquire_state_context:
0x00008e30      4157           push r15
0x00008e32      4156           push r14
0x00008e34      4155           push r13
0x00008e36      4154           push r12
0x00008e38      55             push rbp
0x00008e39      53             push rbx
0x00008e3a      4883ec28       sub rsp, 0x28
0x00008e3e      4c8b5208       mov r10, qword [rdx + 8]
0x00008e42      4d85d2         test r10, r10
0x00008e45      0f8484020000   je 0x90cf
0x00008e4b      4189c8         mov r8d, ecx
0x00008e4e      4d85d2         test r10, r10
0x00008e51      4f8d2410       lea r12, [r8 + r10]
0x00008e55      7e15           jle 0x8e6c
0x00008e57      488b4210       mov rax, qword [rdx + 0x10]
0x00008e5b      4e8d14d0       lea r10, [rax + r10*8]
0x00008e5f      90             nop
0x00008e60      4c0320         add r12, qword [rax]
0x00008e63      4883c008       add rax, 8
0x00008e67      4939c2         cmp r10, rax
0x00008e6a      75f4           jne 0x8e60
0x00008e6c      488b86880000.  mov rax, qword [rsi + 0x88]
0x00008e73      4889d5         mov rbp, rdx
0x00008e76      894c2404       mov dword [rsp + 4], ecx
0x00008e7a      4989f5         mov r13, rsi
0x00008e7d      48897c2418     mov qword [rsp + 0x18], rdi
0x00008e82      4c21e0         and rax, r12
0x00008e85      488d1440       lea rdx, [rax + rax*2]
0x00008e89      488b4640       mov rax, qword [rsi + 0x40]
0x00008e8d      488d04d0       lea rax, [rax + rdx*8]
0x00008e91      4c8b18         mov r11, qword [rax]
0x00008e94      4d85db         test r11, r11
0x00008e97      7e57           jle 0x8ef0
0x00008e99      488b5810       mov rbx, qword [rax + 0x10]
0x00008e9d      4531d2         xor r10d, r10d
0x00008ea0      4189c9         mov r9d, ecx
0x00008ea3      eb0c           jmp 0x8eb1
0x00008ea5      0f1f00         nop dword [rax]
0x00008ea8      4983c201       add r10, 1
0x00008eac      4d39da         cmp r10, r11
0x00008eaf      743f           je 0x8ef0
0x00008eb1      4e8b34d3       mov r14, qword [rbx + r10*8]
0x00008eb5      4d3926         cmp qword [r14], r12
0x00008eb8      75ee           jne 0x8ea8
0x00008eba      410fb64668     movzx eax, byte [r14 + 0x68]
0x00008ebf      83e00f         and eax, 0xf
0x00008ec2      4439c8         cmp eax, r9d
0x00008ec5      75e1           jne 0x8ea8
0x00008ec7      498b7e50       mov rdi, qword [r14 + 0x50]
0x00008ecb      4885ff         test rdi, rdi
0x00008ece      74d8           je 0x8ea8
0x00008ed0      4889ee         mov rsi, rbp
0x00008ed3      e8a8ebffff     call sym.re_node_set_compare.part.2
0x00008ed8      84c0           test al, al
0x00008eda      74cc           je 0x8ea8
0x00008edc      4883c428       add rsp, 0x28
0x00008ee0      4c89f0         mov rax, r14
0x00008ee3      5b             pop rbx
0x00008ee4      5d             pop rbp
0x00008ee5      415c           pop r12
0x00008ee7      415d           pop r13
0x00008ee9      415e           pop r14
0x00008eeb      415f           pop r15
0x00008eed      c3             ret
0x00008eee      6690           nop
0x00008ef0      be01000000     mov esi, 1
0x00008ef5      bf70000000     mov edi, 0x70                           ; 'p'
0x00008efa      e8b18bffff     call sym.imp.calloc
0x00008eff      4885c0         test rax, rax
0x00008f02      4989c6         mov r14, rax
0x00008f05      0f843b010000   je 0x9046
0x00008f0b      488d4008       lea rax, [rax + 8]
0x00008f0f      4889ee         mov rsi, rbp
0x00008f12      4889c7         mov rdi, rax
0x00008f15      4889c3         mov rbx, rax
0x00008f18      e823fdffff     call sym.re_node_set_init_copy
0x00008f1d      85c0           test eax, eax
0x00008f1f      0f85b8010000   jne 0x90dd
0x00008f25      410fb64668     movzx eax, byte [r14 + 0x68]
0x00008f2a      0fb6542404     movzx edx, byte [rsp + 4]
0x00008f2f      49895e50       mov qword [r14 + 0x50], rbx
0x00008f33      83e20f         and edx, 0xf
0x00008f36      83e0f0         and eax, 0xfffffff0                     ; 4294967280
0x00008f39      09d0           or eax, edx
0x00008f3b      48837d0800     cmp qword [rbp + 8], 0
0x00008f40      41884668       mov byte [r14 + 0x68], al
0x00008f44      0f8ede000000   jle 0x9028
0x00008f4a      498d4e18       lea rcx, [r14 + 0x18]
0x00008f4e      4531ff         xor r15d, r15d
0x00008f51      4c89642410     mov qword [rsp + 0x10], r12
0x00008f56      4531d2         xor r10d, r10d
0x00008f59      4d89ec         mov r12, r13
0x00008f5c      4d89fd         mov r13, r15
0x00008f5f      48894c2408     mov qword [rsp + 8], rcx
0x00008f64      4989df         mov r15, rbx
0x00008f67      660f1f840000.  nop word [rax + rax]
0x00008f70      488b4510       mov rax, qword [rbp + 0x10]
0x00008f74      4a8b04e8       mov rax, qword [rax + r13*8]
0x00008f78      48c1e004       shl rax, 4
0x00008f7c      49030424       add rax, qword [r12]
0x00008f80      0fb67008       movzx esi, byte [rax + 8]
0x00008f84      8b5808         mov ebx, dword [rax + 8]
0x00008f87      c1eb08         shr ebx, 8
0x00008f8a      6681e3ff03     and bx, 0x3ff
0x00008f8f      83fe01         cmp esi, 1
0x00008f92      0fb7fb         movzx edi, bx
0x00008f95      7504           jne 0x8f9b
0x00008f97      85ff           test edi, edi
0x00008f99      7477           je 0x9012
0x00008f9b      410fb65668     movzx edx, byte [r14 + 0x68]
0x00008fa0      0fb6400a       movzx eax, byte [rax + 0xa]
0x00008fa4      4189d1         mov r9d, edx
0x00008fa7      c0e804         shr al, 4
0x00008faa      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00008fad      41c0e905       shr r9b, 5
0x00008fb1      4409c8         or eax, r9d
0x00008fb4      83e001         and eax, 1
0x00008fb7      c1e005         shl eax, 5
0x00008fba      09d0           or eax, edx
0x00008fbc      83fe02         cmp esi, 2
0x00008fbf      41884668       mov byte [r14 + 0x68], al
0x00008fc3      0f84c7000000   je 0x9090
0x00008fc9      83fe04         cmp esi, 4
0x00008fcc      7507           jne 0x8fd5
0x00008fce      83c840         or eax, 0x40                            ; segment.PHDR
0x00008fd1      41884668       mov byte [r14 + 0x68], al
0x00008fd5      85ff           test edi, edi
0x00008fd7      7439           je 0x9012
0x00008fd9      4d3b7e50       cmp r15, qword [r14 + 0x50]
0x00008fdd      0f84bd000000   je 0x90a0
0x00008fe3      f6c301         test bl, 1
0x00008fe6      7478           je 0x9060
0x00008fe8      f644240401     test byte [rsp + 4], 1
0x00008fed      7409           je 0x8ff8
0x00008fef      f6c302         test bl, 2
0x00008ff2      7478           je 0x906c
0x00008ff4      0f1f4000       nop dword [rax]
0x00008ff8      4c89ea         mov rdx, r13
0x00008ffb      4c29d2         sub rdx, r10
0x00008ffe      780e           js 0x900e
0x00009000      488b742408     mov rsi, qword [rsp + 8]
0x00009005      498d7e10       lea rdi, [r14 + 0x10]
0x00009009      e852ecffff     call sym.re_node_set_remove_at.isra.4.part.5
0x0000900e      4983c201       add r10, 1
0x00009012      4983c501       add r13, 1
0x00009016      4c3b6d08       cmp r13, qword [rbp + 8]
0x0000901a      0f8c50ffffff   jl 0x8f70
0x00009020      4d89e5         mov r13, r12
0x00009023      4c8b642410     mov r12, qword [rsp + 0x10]
0x00009028      4c89e2         mov rdx, r12
0x0000902b      4c89f6         mov rsi, r14
0x0000902e      4c89ef         mov rdi, r13
0x00009031      e89ad6ffff     call sym.register_state
0x00009036      85c0           test eax, eax
0x00009038      0f849efeffff   je 0x8edc
0x0000903e      4c89f7         mov rdi, r14
0x00009041      e82ae7ffff     call sym.free_state
0x00009046      488b442418     mov rax, qword [rsp + 0x18]
0x0000904b      4531f6         xor r14d, r14d
0x0000904e      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x00009054      e983feffff     jmp 0x8edc
0x00009059      0f1f80000000.  nop dword [rax]
0x00009060      f6c302         test bl, 2
0x00009063      7407           je 0x906c
0x00009065      f644240401     test byte [rsp + 4], 1
0x0000906a      758c           jne 0x8ff8
0x0000906c      f6c310         test bl, 0x10
0x0000906f      7407           je 0x9078
0x00009071      f644240402     test byte [rsp + 4], 2
0x00009076      7480           je 0x8ff8
0x00009078      83e340         and ebx, 0x40                           ; segment.PHDR
0x0000907b      7495           je 0x9012
0x0000907d      f644240404     test byte [rsp + 4], 4
0x00009082      758e           jne 0x9012
0x00009084      e96fffffff     jmp 0x8ff8
0x00009089      0f1f80000000.  nop dword [rax]
0x00009090      83c810         or eax, 0x10
0x00009093      41884668       mov byte [r14 + 0x68], al
0x00009097      e939ffffff     jmp 0x8fd5
0x0000909c      0f1f4000       nop dword [rax]
0x000090a0      bf18000000     mov edi, 0x18
0x000090a5      e8568affff     call sym.imp.malloc
0x000090aa      4885c0         test rax, rax
0x000090ad      49894650       mov qword [r14 + 0x50], rax
0x000090b1      748b           je 0x903e
0x000090b3      4889ee         mov rsi, rbp
0x000090b6      4889c7         mov rdi, rax
0x000090b9      e882fbffff     call sym.re_node_set_init_copy
0x000090be      85c0           test eax, eax
0x000090c0      7584           jne 0x9046
0x000090c2      41804e6880     or byte [r14 + 0x68], 0x80              ; [0x80:1]=56
0x000090c7      4531d2         xor r10d, r10d
0x000090ca      e914ffffff     jmp 0x8fe3
0x000090cf      c70700000000   mov dword [rdi], 0
0x000090d5      4531f6         xor r14d, r14d
0x000090d8      e9fffdffff     jmp 0x8edc
0x000090dd      4c89f7         mov rdi, r14
0x000090e0      e8eb87ffff     call sym.imp.free
0x000090e5      e95cffffff     jmp 0x9046
0x000090ea      660f1f440000   nop word [rax + rax]
;-- re_acquire_state:
0x000090f0      4157           push r15
0x000090f2      4156           push r14
0x000090f4      4155           push r13
0x000090f6      4154           push r12
0x000090f8      55             push rbp
0x000090f9      53             push rbx
0x000090fa      4883ec08       sub rsp, 8
0x000090fe      488b6a08       mov rbp, qword [rdx + 8]
0x00009102      4885ed         test rbp, rbp
0x00009105      0f84d5010000   je 0x92e0
0x0000910b      4885ed         test rbp, rbp
0x0000910e      7e1c           jle 0x912c
0x00009110      488b4210       mov rax, qword [rdx + 0x10]
0x00009114      488d0ce8       lea rcx, [rax + rbp*8]
0x00009118      0f1f84000000.  nop dword [rax + rax]
0x00009120      480328         add rbp, qword [rax]
0x00009123      4883c008       add rax, 8
0x00009127      4839c1         cmp rcx, rax
0x0000912a      75f4           jne 0x9120
0x0000912c      488b86880000.  mov rax, qword [rsi + 0x88]
0x00009133      4989d6         mov r14, rdx
0x00009136      4989f4         mov r12, rsi
0x00009139      4989fd         mov r13, rdi
0x0000913c      4821e8         and rax, rbp
0x0000913f      488d1440       lea rdx, [rax + rax*2]
0x00009143      488b4640       mov rax, qword [rsi + 0x40]
0x00009147      488d04d0       lea rax, [rax + rdx*8]
0x0000914b      4c8b10         mov r10, qword [rax]
0x0000914e      4d85d2         test r10, r10
0x00009151      7e33           jle 0x9186
0x00009153      4c8b5810       mov r11, qword [rax + 0x10]
0x00009157      4531c9         xor r9d, r9d
0x0000915a      660f1f440000   nop word [rax + rax]
0x00009160      4b8b1ccb       mov rbx, qword [r11 + r9*8]
0x00009164      48392b         cmp qword [rbx], rbp
0x00009167      7514           jne 0x917d
0x00009169      488d7b08       lea rdi, [rbx + 8]
0x0000916d      4c89f6         mov rsi, r14
0x00009170      e80be9ffff     call sym.re_node_set_compare.part.2
0x00009175      84c0           test al, al
0x00009177      0f8502010000   jne 0x927f
0x0000917d      4983c101       add r9, 1
0x00009181      4d39ca         cmp r10, r9
0x00009184      75da           jne 0x9160
0x00009186      be01000000     mov esi, 1
0x0000918b      bf70000000     mov edi, 0x70                           ; 'p'
0x00009190      e81b89ffff     call sym.imp.calloc
0x00009195      4885c0         test rax, rax
0x00009198      4889c3         mov rbx, rax
0x0000919b      0f8427010000   je 0x92c8
0x000091a1      4c8d7808       lea r15, [rax + 8]
0x000091a5      4c89f6         mov rsi, r14
0x000091a8      4c89ff         mov rdi, r15
0x000091ab      e890faffff     call sym.re_node_set_init_copy
0x000091b0      85c0           test eax, eax
0x000091b2      0f8508010000   jne 0x92c0
0x000091b8      498b4608       mov rax, qword [r14 + 8]
0x000091bc      4c897b50       mov qword [rbx + 0x50], r15
0x000091c0      4885c0         test rax, rax
0x000091c3      0f8ea4000000   jle 0x926d
0x000091c9      498b7610       mov rsi, qword [r14 + 0x10]
0x000091cd      4d8b0424       mov r8, qword [r12]
0x000091d1      4c8d0cc6       lea r9, [rsi + rax*8]
0x000091d5      eb4d           jmp 0x9224
0x000091d7      660f1f840000.  nop word [rax + rax]
0x000091e0      0fb64b68       movzx ecx, byte [rbx + 0x68]
0x000091e4      0fb6500a       movzx edx, byte [rax + 0xa]
0x000091e8      4189ca         mov r10d, ecx
0x000091eb      c0ea04         shr dl, 4
0x000091ee      83e1df         and ecx, 0xffffffdf                     ; 4294967263
0x000091f1      41c0ea05       shr r10b, 5
0x000091f5      4409d2         or edx, r10d
0x000091f8      83e201         and edx, 1
0x000091fb      c1e205         shl edx, 5
0x000091fe      09ca           or edx, ecx
0x00009200      83ff02         cmp edi, 2
0x00009203      885368         mov byte [rbx + 0x68], dl
0x00009206      0f848c000000   je 0x9298
0x0000920c      83ff04         cmp edi, 4
0x0000920f      0f8593000000   jne 0x92a8
0x00009215      83ca40         or edx, 0x40                            ; segment.PHDR
0x00009218      885368         mov byte [rbx + 0x68], dl
0x0000921b      4883c608       add rsi, 8
0x0000921f      4939f1         cmp r9, rsi
0x00009222      7449           je 0x926d
0x00009224      488b06         mov rax, qword [rsi]
0x00009227      48c1e004       shl rax, 4
0x0000922b      4c01c0         add rax, r8
0x0000922e      0fb67808       movzx edi, byte [rax + 8]
0x00009232      83ff01         cmp edi, 1
0x00009235      75a9           jne 0x91e0
0x00009237      f7400800ff03.  test dword [rax + 8], 0x3ff00
0x0000923e      74db           je 0x921b
0x00009240      0fb65368       movzx edx, byte [rbx + 0x68]
0x00009244      0fb6400a       movzx eax, byte [rax + 0xa]
0x00009248      89d1           mov ecx, edx
0x0000924a      c0e804         shr al, 4
0x0000924d      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00009250      c0e905         shr cl, 5
0x00009253      09c8           or eax, ecx
0x00009255      83e001         and eax, 1
0x00009258      c1e005         shl eax, 5
0x0000925b      09d0           or eax, edx
0x0000925d      884368         mov byte [rbx + 0x68], al
0x00009260      4883c608       add rsi, 8
0x00009264      804b6880       or byte [rbx + 0x68], 0x80              ; [0x80:1]=56
0x00009268      4939f1         cmp r9, rsi
0x0000926b      75b7           jne 0x9224
0x0000926d      4889ea         mov rdx, rbp
0x00009270      4889de         mov rsi, rbx
0x00009273      4c89e7         mov rdi, r12
0x00009276      e855d4ffff     call sym.register_state
0x0000927b      85c0           test eax, eax
0x0000927d      7555           jne 0x92d4
0x0000927f      4883c408       add rsp, 8
0x00009283      4889d8         mov rax, rbx
0x00009286      5b             pop rbx
0x00009287      5d             pop rbp
0x00009288      415c           pop r12
0x0000928a      415d           pop r13
0x0000928c      415e           pop r14
0x0000928e      415f           pop r15
0x00009290      c3             ret
0x00009291      0f1f80000000.  nop dword [rax]
0x00009298      83ca10         or edx, 0x10
0x0000929b      885368         mov byte [rbx + 0x68], dl
0x0000929e      e978ffffff     jmp 0x921b
0x000092a3      0f1f440000     nop dword [rax + rax]
0x000092a8      83ff0c         cmp edi, 0xc
0x000092ab      74b3           je 0x9260
0x000092ad      f7400800ff03.  test dword [rax + 8], 0x3ff00
0x000092b4      0f8461ffffff   je 0x921b
0x000092ba      eba4           jmp 0x9260
0x000092bc      0f1f4000       nop dword [rax]
0x000092c0      4889df         mov rdi, rbx
0x000092c3      e80886ffff     call sym.imp.free
0x000092c8      41c745000c00.  mov dword [r13], 0xc                    ; [0xc:4]=0
0x000092d0      31db           xor ebx, ebx
0x000092d2      ebab           jmp 0x927f
0x000092d4      4889df         mov rdi, rbx
0x000092d7      e894e4ffff     call sym.free_state
0x000092dc      ebea           jmp 0x92c8
0x000092de      6690           nop
0x000092e0      c70700000000   mov dword [rdi], 0
0x000092e6      31db           xor ebx, ebx
0x000092e8      eb95           jmp 0x927f
0x000092ea      660f1f440000   nop word [rax + rax]
;-- merge_state_array:
0x000092f0      4157           push r15
0x000092f2      4156           push r14
0x000092f4      4155           push r13
0x000092f6      4154           push r12
0x000092f8      55             push rbp
0x000092f9      53             push rbx
0x000092fa      4883ec48       sub rsp, 0x48
0x000092fe      64488b042528.  mov rax, qword fs:[0x28]
0x00009307      4889442438     mov qword [rsp + 0x38], rax
0x0000930c      31c0           xor eax, eax
0x0000930e      4885c9         test rcx, rcx
0x00009311      0f8e8f000000   jle 0x93a6
0x00009317      488d44241c     lea rax, [rsp + 0x1c]
0x0000931c      4989fe         mov r14, rdi
0x0000931f      4889f3         mov rbx, rsi
0x00009322      4989d4         mov r12, rdx
0x00009325      4889cd         mov rbp, rcx
0x00009328      4531ff         xor r15d, r15d
0x0000932b      4c8d6c2420     lea r13, [rsp + 0x20]
0x00009330      4889442408     mov qword [rsp + 8], rax
0x00009335      eb55           jmp 0x938c
0x00009337      660f1f840000.  nop word [rax + rax]
0x00009340      4885d2         test rdx, rdx
0x00009343      743e           je 0x9383
0x00009345      4883c208       add rdx, 8
0x00009349      4883c608       add rsi, 8
0x0000934d      4c89ef         mov rdi, r13
0x00009350      e87bf9ffff     call sym.re_node_set_init_union
0x00009355      85c0           test eax, eax
0x00009357      8944241c       mov dword [rsp + 0x1c], eax
0x0000935b      754b           jne 0x93a8
0x0000935d      488b7c2408     mov rdi, qword [rsp + 8]
0x00009362      4c89ea         mov rdx, r13
0x00009365      4c89f6         mov rsi, r14
0x00009368      e883fdffff     call sym.re_acquire_state
0x0000936d      488b7c2430     mov rdi, qword [rsp + 0x30]
0x00009372      4a8904fb       mov qword [rbx + r15*8], rax
0x00009376      e85585ffff     call sym.imp.free
0x0000937b      8b44241c       mov eax, dword [rsp + 0x1c]
0x0000937f      85c0           test eax, eax
0x00009381      7525           jne 0x93a8
0x00009383      4983c701       add r15, 1
0x00009387      4c39fd         cmp rbp, r15
0x0000938a      741a           je 0x93a6
0x0000938c      4a8b34fb       mov rsi, qword [rbx + r15*8]
0x00009390      4b8b14fc       mov rdx, qword [r12 + r15*8]
0x00009394      4885f6         test rsi, rsi
0x00009397      75a7           jne 0x9340
0x00009399      4a8914fb       mov qword [rbx + r15*8], rdx
0x0000939d      4983c701       add r15, 1
0x000093a1      4c39fd         cmp rbp, r15
0x000093a4      75e6           jne 0x938c
0x000093a6      31c0           xor eax, eax
0x000093a8      488b4c2438     mov rcx, qword [rsp + 0x38]
0x000093ad      6448330c2528.  xor rcx, qword fs:[0x28]
0x000093b6      750f           jne 0x93c7
0x000093b8      4883c448       add rsp, 0x48
0x000093bc      5b             pop rbx
0x000093bd      5d             pop rbp
0x000093be      415c           pop r12
0x000093c0      415d           pop r13
0x000093c2      415e           pop r14
0x000093c4      415f           pop r15
0x000093c6      c3             ret
0x000093c7      e81486ffff     call sym.imp.__stack_chk_fail
0x000093cc      0f1f4000       nop dword [rax]
;-- expand_bkref_cache:
0x000093d0      4157           push r15
0x000093d2      4156           push r14
0x000093d4      4155           push r13
0x000093d6      4154           push r12
0x000093d8      4989d4         mov r12, rdx
0x000093db      55             push rbp
0x000093dc      53             push rbx
0x000093dd      4889fb         mov rbx, rdi
0x000093e0      4889f5         mov rbp, rsi
0x000093e3      31f6           xor esi, esi
0x000093e5      4883ec78       sub rsp, 0x78
0x000093e9      488bbfc80000.  mov rdi, qword [rdi + 0xc8]
0x000093f0      64488b042528.  mov rax, qword fs:[0x28]
0x000093f9      4889442468     mov qword [rsp + 0x68], rax
0x000093fe      31c0           xor eax, eax
0x00009400      48894c2420     mov qword [rsp + 0x20], rcx
0x00009405      448944242c     mov dword [rsp + 0x2c], r8d
0x0000940a      4889fa         mov rdx, rdi
0x0000940d      4839d6         cmp rsi, rdx
0x00009410      7d55           jge 0x9467
0x00009412      488d0416       lea rax, [rsi + rdx]
0x00009416      4c8b83d80000.  mov r8, qword [rbx + 0xd8]
0x0000941d      4889c1         mov rcx, rax
0x00009420      48c1e93f       shr rcx, 0x3f
0x00009424      4801c1         add rcx, rax
0x00009427      48d1f9         sar rcx, 1
0x0000942a      488d0489       lea rax, [rcx + rcx*4]
0x0000942e      4d3b64c008     cmp r12, qword [r8 + rax*8 + 8]
0x00009433      7e2d           jle 0x9462
0x00009435      e97e000000     jmp 0x94b8
0x0000943a      660f1f440000   nop word [rax + rax]
0x00009440      488d140e       lea rdx, [rsi + rcx]
0x00009444      4889d0         mov rax, rdx
0x00009447      48c1e83f       shr rax, 0x3f
0x0000944b      4801d0         add rax, rdx
0x0000944e      48d1f8         sar rax, 1
0x00009451      488d1480       lea rdx, [rax + rax*4]
0x00009455      4989c1         mov r9, rax
0x00009458      4d3b64d008     cmp r12, qword [r8 + rdx*8 + 8]
0x0000945d      7f61           jg 0x94c0
0x0000945f      4889c1         mov rcx, rax
0x00009462      4839ce         cmp rsi, rcx
0x00009465      7cd9           jl 0x9440
0x00009467      4839f7         cmp rdi, rsi
0x0000946a      7e21           jle 0x948d
0x0000946c      488b8bd80000.  mov rcx, qword [rbx + 0xd8]
0x00009473      488d04b6       lea rax, [rsi + rsi*4]
0x00009477      48c1e003       shl rax, 3
0x0000947b      4c39640108     cmp qword [rcx + rax + 8], r12
0x00009480      4889442430     mov qword [rsp + 0x30], rax
0x00009485      7506           jne 0x948d
0x00009487      4883feff       cmp rsi, 0xffffffffffffffff
0x0000948b      7543           jne 0x94d0
0x0000948d      31c0           xor eax, eax
0x0000948f      488b5c2468     mov rbx, qword [rsp + 0x68]
0x00009494      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000949d      0f85c6020000   jne 0x9769
0x000094a3      4883c478       add rsp, 0x78
0x000094a7      5b             pop rbx
0x000094a8      5d             pop rbp
0x000094a9      415c           pop r12
0x000094ab      415d           pop r13
0x000094ad      415e           pop r14
0x000094af      415f           pop r15
0x000094b1      c3             ret
0x000094b2      660f1f440000   nop word [rax + rax]
0x000094b8      4989c9         mov r9, rcx
0x000094bb      4889d1         mov rcx, rdx
0x000094be      6690           nop
0x000094c0      498d7101       lea rsi, [r9 + 1]
0x000094c4      4889ca         mov rdx, rcx
0x000094c7      e941ffffff     jmp 0x940d
0x000094cc      0f1f4000       nop dword [rax]
0x000094d0      488d4510       lea rax, [rbp + 0x10]
0x000094d4      4c8bab980000.  mov r13, qword [rbx + 0x98]
0x000094db      48890424       mov qword [rsp], rax
0x000094df      488d44244c     lea rax, [rsp + 0x4c]
0x000094e4      4889442438     mov qword [rsp + 0x38], rax
0x000094e9      488d442450     lea rax, [rsp + 0x50]
0x000094ee      4889442410     mov qword [rsp + 0x10], rax
0x000094f3      488b442430     mov rax, qword [rsp + 0x30]
0x000094f8      4c8d3c01       lea r15, [rcx + rax]
0x000094fc      e9d7000000     jmp 0x95d8
0x00009501      0f1f80000000.  nop dword [rax]
0x00009508      498b4518       mov rax, qword [r13 + 0x18]
0x0000950c      4a8b0cd0       mov rcx, qword [rax + r10*8]
0x00009510      4c8b93b80000.  mov r10, qword [rbx + 0xb8]
0x00009517      4a8d04f50000.  lea rax, [r14*8]
0x0000951f      4889442418     mov qword [rsp + 0x18], rax
0x00009524      4901c2         add r10, rax
0x00009527      48894c2408     mov qword [rsp + 8], rcx
0x0000952c      4d8b0a         mov r9, qword [r10]
0x0000952f      4d85c9         test r9, r9
0x00009532      0f8488010000   je 0x96c0
0x00009538      498b7910       mov rdi, qword [r9 + 0x10]
0x0000953c      498d7118       lea rsi, [r9 + 0x18]
0x00009540      4889ca         mov rdx, rcx
0x00009543      e898e5ffff     call sym.re_node_set_contains.isra.3
0x00009548      4885c0         test rax, rax
0x0000954b      757c           jne 0x95c9
0x0000954d      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00009552      498d7108       lea rsi, [r9 + 8]
0x00009556      e8e5f6ffff     call sym.re_node_set_init_copy
0x0000955b      488b742408     mov rsi, qword [rsp + 8]
0x00009560      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00009565      8944244c       mov dword [rsp + 0x4c], eax
0x00009569      e832d0ffff     call sym.re_node_set_insert
0x0000956e      8b54244c       mov edx, dword [rsp + 0x4c]
0x00009572      85d2           test edx, edx
0x00009574      0f859c010000   jne 0x9716
0x0000957a      3c01           cmp al, 1
0x0000957c      0f8594010000   jne 0x9716
0x00009582      4c8b542418     mov r10, qword [rsp + 0x18]
0x00009587      4c0393b80000.  add r10, qword [rbx + 0xb8]
0x0000958e      488b542410     mov rdx, qword [rsp + 0x10]
0x00009593      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00009598      4c89ee         mov rsi, r13
0x0000959b      4c89542408     mov qword [rsp + 8], r10
0x000095a0      e84bfbffff     call sym.re_acquire_state
0x000095a5      4c8b542408     mov r10, qword [rsp + 8]
0x000095aa      488b7c2460     mov rdi, qword [rsp + 0x60]
0x000095af      498902         mov qword [r10], rax
0x000095b2      e81983ffff     call sym.imp.free
0x000095b7      488b83b80000.  mov rax, qword [rbx + 0xb8]
0x000095be      4a833cf000     cmp qword [rax + r14*8], 0
0x000095c3      0f843c010000   je 0x9705
0x000095c9      4983c728       add r15, 0x28
0x000095cd      41807ff800     cmp byte [r15 - 8], 0
0x000095d2      0f84b5feffff   je 0x948d
0x000095d8      4d8b17         mov r10, qword [r15]
0x000095db      4c8b4d08       mov r9, qword [rbp + 8]
0x000095df      488b3424       mov rsi, qword [rsp]
0x000095e3      4c89d2         mov rdx, r10
0x000095e6      4c89cf         mov rdi, r9
0x000095e9      e8f2e4ffff     call sym.re_node_set_contains.isra.3
0x000095ee      4885c0         test rax, rax
0x000095f1      74d6           je 0x95c9
0x000095f3      4d8b4718       mov r8, qword [r15 + 0x18]
0x000095f7      4d01e0         add r8, r12
0x000095fa      4d89c6         mov r14, r8
0x000095fd      4d2b7710       sub r14, qword [r15 + 0x10]
0x00009601      4d39f4         cmp r12, r14
0x00009604      0f85fefeffff   jne 0x9508
0x0000960a      498b4d28       mov rcx, qword [r13 + 0x28]
0x0000960e      4b8d0452       lea rax, [r10 + r10*2]
0x00009612      488b3424       mov rsi, qword [rsp]
0x00009616      4c89cf         mov rdi, r9
0x00009619      488d04c1       lea rax, [rcx + rax*8]
0x0000961d      488b4010       mov rax, qword [rax + 0x10]
0x00009621      4c8b30         mov r14, qword [rax]
0x00009624      4c89f2         mov rdx, r14
0x00009627      e8b4e4ffff     call sym.re_node_set_contains.isra.3
0x0000962c      4885c0         test rax, rax
0x0000962f      7598           jne 0x95c9
0x00009631      bf08000000     mov edi, 8
0x00009636      48c744245001.  mov qword [rsp + 0x50], 1
0x0000963f      48c744245801.  mov qword [rsp + 0x58], 1
0x00009648      e8b384ffff     call sym.imp.malloc
0x0000964d      4885c0         test rax, rax
0x00009650      4889442460     mov qword [rsp + 0x60], rax
0x00009655      0f84f2000000   je 0x974d
0x0000965b      4c8930         mov qword [rax], r14
0x0000965e      31c0           xor eax, eax
0x00009660      4c8b7c2410     mov r15, qword [rsp + 0x10]
0x00009665      488b542420     mov rdx, qword [rsp + 0x20]
0x0000966a      4c89ef         mov rdi, r13
0x0000966d      8b4c242c       mov ecx, dword [rsp + 0x2c]
0x00009671      8944244c       mov dword [rsp + 0x4c], eax
0x00009675      4c89fe         mov rsi, r15
0x00009678      e813eeffff     call sym.check_arrival_expand_ecl
0x0000967d      4c89fe         mov rsi, r15
0x00009680      4889ef         mov rdi, rbp
0x00009683      4189c6         mov r14d, eax
0x00009686      e875e9ffff     call sym.re_node_set_merge
0x0000968b      488b7c2460     mov rdi, qword [rsp + 0x60]
0x00009690      4189c7         mov r15d, eax
0x00009693      e83882ffff     call sym.imp.free
0x00009698      8b44244c       mov eax, dword [rsp + 0x4c]
0x0000969c      4489f2         mov edx, r14d
0x0000969f      4409fa         or edx, r15d
0x000096a2      09c2           or edx, eax
0x000096a4      0f858c000000   jne 0x9736
0x000096aa      488b8bd80000.  mov rcx, qword [rbx + 0xd8]
0x000096b1      e93dfeffff     jmp 0x94f3
0x000096b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000096c0      bf08000000     mov edi, 8
0x000096c5      4c89542418     mov qword [rsp + 0x18], r10
0x000096ca      48c744245001.  mov qword [rsp + 0x50], 1
0x000096d3      48c744245801.  mov qword [rsp + 0x58], 1
0x000096dc      e81f84ffff     call sym.imp.malloc
0x000096e1      4885c0         test rax, rax
0x000096e4      4889442460     mov qword [rsp + 0x60], rax
0x000096e9      7441           je 0x972c
0x000096eb      488b7c2408     mov rdi, qword [rsp + 8]
0x000096f0      c744244c0000.  mov dword [rsp + 0x4c], 0
0x000096f8      4c8b542418     mov r10, qword [rsp + 0x18]
0x000096fd      488938         mov qword [rax], rdi
0x00009700      e989feffff     jmp 0x958e
0x00009705      8b44244c       mov eax, dword [rsp + 0x4c]
0x00009709      85c0           test eax, eax
0x0000970b      0f84b8feffff   je 0x95c9
0x00009711      e979fdffff     jmp 0x948f
0x00009716      488b7c2460     mov rdi, qword [rsp + 0x60]
0x0000971b      e8b081ffff     call sym.imp.free
0x00009720      8b44244c       mov eax, dword [rsp + 0x4c]
0x00009724      85c0           test eax, eax
0x00009726      0f8563fdffff   jne 0x948f
0x0000972c      b80c000000     mov eax, 0xc
0x00009731      e959fdffff     jmp 0x948f
0x00009736      85c0           test eax, eax
0x00009738      0f8551fdffff   jne 0x948f
0x0000973e      4585f6         test r14d, r14d
0x00009741      4489f0         mov eax, r14d
0x00009744      410f44c7       cmove eax, r15d
0x00009748      e942fdffff     jmp 0x948f
0x0000974d      48c744245800.  mov qword [rsp + 0x58], 0
0x00009756      48c744245000.  mov qword [rsp + 0x50], 0
0x0000975f      b80c000000     mov eax, 0xc
0x00009764      e9f7feffff     jmp 0x9660
0x00009769      e87282ffff     call sym.imp.__stack_chk_fail
0x0000976e      6690           nop
;-- check_subexp_matching_top.isra.18:
0x00009770      4157           push r15
0x00009772      4156           push r14
0x00009774      4155           push r13
0x00009776      4154           push r12
0x00009778      55             push rbp
0x00009779      53             push rbx
0x0000977a      4883ec28       sub rsp, 0x28
0x0000977e      48833e00       cmp qword [rsi], 0
0x00009782      4c8baf980000.  mov r13, qword [rdi + 0x98]
0x00009789      0f8ec1000000   jle 0x9850
0x0000978f      4989d6         mov r14, rdx
0x00009792      4989f4         mov r12, rsi
0x00009795      4989ff         mov r15, rdi
0x00009798      31db           xor ebx, ebx
0x0000979a      eb12           jmp 0x97ae
0x0000979c      0f1f4000       nop dword [rax]
0x000097a0      4883c301       add rbx, 1
0x000097a4      493b1c24       cmp rbx, qword [r12]
0x000097a8      0f8da2000000   jge 0x9850
0x000097ae      498b06         mov rax, qword [r14]
0x000097b1      488b2cd8       mov rbp, qword [rax + rbx*8]
0x000097b5      4889e8         mov rax, rbp
0x000097b8      48c1e004       shl rax, 4
0x000097bc      49034500       add rax, qword [r13]
0x000097c0      80780808       cmp byte [rax + 8], 8
0x000097c4      75da           jne 0x97a0
0x000097c6      488b00         mov rax, qword [rax]
0x000097c9      4883f83f       cmp rax, 0x3f
0x000097cd      7fd1           jg 0x97a0
0x000097cf      498bb5a00000.  mov rsi, qword [r13 + 0xa0]
0x000097d6      480fa3c6       bt rsi, rax
0x000097da      73c4           jae 0x97a0
0x000097dc      4d8b87e80000.  mov r8, qword [r15 + 0xe8]
0x000097e3      4d3b87f00000.  cmp r8, qword [r15 + 0xf0]
0x000097ea      4d8b8ff80000.  mov r9, qword [r15 + 0xf8]
0x000097f1      7475           je 0x9868
0x000097f3      be30000000     mov esi, 0x30                           ; '0'
0x000097f8      bf01000000     mov edi, 1
0x000097fd      4c894c2410     mov qword [rsp + 0x10], r9
0x00009802      4c89442408     mov qword [rsp + 8], r8
0x00009807      48894c2418     mov qword [rsp + 0x18], rcx
0x0000980c      e89f82ffff     call sym.imp.calloc
0x00009811      4c8b442408     mov r8, qword [rsp + 8]
0x00009816      4c8b4c2410     mov r9, qword [rsp + 0x10]
0x0000981b      4885c0         test rax, rax
0x0000981e      4b8904c1       mov qword [r9 + r8*8], rax
0x00009822      743d           je 0x9861
0x00009824      4983c001       add r8, 1
0x00009828      4883c301       add rbx, 1
0x0000982c      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00009831      4d8987e80000.  mov qword [r15 + 0xe8], r8
0x00009838      493b1c24       cmp rbx, qword [r12]
0x0000983c      48896808       mov qword [rax + 8], rbp
0x00009840      488908         mov qword [rax], rcx
0x00009843      0f8c65ffffff   jl 0x97ae
0x00009849      0f1f80000000.  nop dword [rax]
0x00009850      31c0           xor eax, eax
0x00009852      4883c428       add rsp, 0x28
0x00009856      5b             pop rbx
0x00009857      5d             pop rbp
0x00009858      415c           pop r12
0x0000985a      415d           pop r13
0x0000985c      415e           pop r14
0x0000985e      415f           pop r15
0x00009860      c3             ret
0x00009861      b80c000000     mov eax, 0xc
0x00009866      ebea           jmp 0x9852
0x00009868      4b8d0400       lea rax, [r8 + r8]
0x0000986c      4c89c6         mov rsi, r8
0x0000986f      4c89cf         mov rdi, r9
0x00009872      48c1e604       shl rsi, 4
0x00009876      48894c2408     mov qword [rsp + 8], rcx
0x0000987b      4889442410     mov qword [rsp + 0x10], rax
0x00009880      e8db82ffff     call sym.imp.realloc
0x00009885      4885c0         test rax, rax
0x00009888      4989c1         mov r9, rax
0x0000988b      488b4c2408     mov rcx, qword [rsp + 8]
0x00009890      74cf           je 0x9861
0x00009892      498987f80000.  mov qword [r15 + 0xf8], rax
0x00009899      488b442410     mov rax, qword [rsp + 0x10]
0x0000989e      4d8b87e80000.  mov r8, qword [r15 + 0xe8]
0x000098a5      498987f00000.  mov qword [r15 + 0xf0], rax
0x000098ac      e942ffffff     jmp 0x97f3
0x000098b1      0f1f440000     nop dword [rax + rax]
0x000098b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_string_context_at:
0x000098c0      55             push rbp
0x000098c1      53             push rbx
0x000098c2      4889fd         mov rbp, rdi
0x000098c5      4883ec08       sub rsp, 8
0x000098c9      4885f6         test rsi, rsi
0x000098cc      7852           js 0x9920
0x000098ce      48397758       cmp qword [rdi + 0x58], rsi
0x000098d2      0f84a0000000   je 0x9978
0x000098d8      83bf90000000.  cmp dword [rdi + 0x90], 1
0x000098df      7e4f           jle 0x9930
0x000098e1      488b4710       mov rax, qword [rdi + 0x10]
0x000098e5      eb13           jmp 0x98fa
0x000098e7      660f1f840000.  nop word [rax + rax]
0x000098f0      4883ee01       sub rsi, 1
0x000098f4      4883feff       cmp rsi, 0xffffffffffffffff
0x000098f8      7426           je 0x9920
0x000098fa      8b1cb0         mov ebx, dword [rax + rsi*4]
0x000098fd      83fbff         cmp ebx, 0xffffffff
0x00009900      74ee           je 0x98f0
0x00009902      80bd8e000000.  cmp byte [rbp + 0x8e], 0
0x00009909      757d           jne 0x9988
0x0000990b      31c0           xor eax, eax
0x0000990d      83fb0a         cmp ebx, 0xa
0x00009910      744a           je 0x995c
0x00009912      4883c408       add rsp, 8
0x00009916      5b             pop rbx
0x00009917      5d             pop rbp
0x00009918      c3             ret
0x00009919      0f1f80000000.  nop dword [rax]
0x00009920      8b4570         mov eax, dword [rbp + 0x70]
0x00009923      4883c408       add rsp, 8
0x00009927      5b             pop rbx
0x00009928      5d             pop rbp
0x00009929      c3             ret
0x0000992a      660f1f440000   nop word [rax + rax]
0x00009930      488b4708       mov rax, qword [rdi + 8]
0x00009934      488b8f800000.  mov rcx, qword [rdi + 0x80]
0x0000993b      0fb60430       movzx eax, byte [rax + rsi]
0x0000993f      4889c2         mov rdx, rax
0x00009942      48c1f806       sar rax, 6
0x00009946      488b0cc1       mov rcx, qword [rcx + rax*8]
0x0000994a      b801000000     mov eax, 1
0x0000994f      480fa3d1       bt rcx, rdx
0x00009953      72bd           jb 0x9912
0x00009955      31c0           xor eax, eax
0x00009957      80fa0a         cmp dl, 0xa
0x0000995a      75b6           jne 0x9912
0x0000995c      31c0           xor eax, eax
0x0000995e      80bd8d000000.  cmp byte [rbp + 0x8d], 0
0x00009965      0f95c0         setne al
0x00009968      4883c408       add rsp, 8
0x0000996c      01c0           add eax, eax
0x0000996e      5b             pop rbx
0x0000996f      5d             pop rbp
0x00009970      c3             ret
0x00009971      0f1f80000000.  nop dword [rax]
0x00009978      83e202         and edx, 2
0x0000997b      83fa01         cmp edx, 1
0x0000997e      19c0           sbb eax, eax
0x00009980      83e002         and eax, 2
0x00009983      83c008         add eax, 8
0x00009986      eb8a           jmp 0x9912
0x00009988      89df           mov edi, ebx
0x0000998a      e86181ffff     call sym.imp.iswalnum
0x0000998f      85c0           test eax, eax
0x00009991      7509           jne 0x999c
0x00009993      83fb5f         cmp ebx, 0x5f
0x00009996      0f856fffffff   jne 0x990b
0x0000999c      b801000000     mov eax, 1
0x000099a1      e96cffffff     jmp 0x9912
0x000099a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- check_node_accept:
0x000099b0      488b4708       mov rax, qword [rdi + 8]
0x000099b4      0fb60c10       movzx ecx, byte [rax + rdx]
0x000099b8      0fb64608       movzx eax, byte [rsi + 8]
0x000099bc      3c03           cmp al, 3
0x000099be      0f84b4000000   je 0x9a78
0x000099c4      0f8696000000   jbe 0x9a60
0x000099ca      3c05           cmp al, 5
0x000099cc      7412           je 0x99e0
0x000099ce      3c07           cmp al, 7
0x000099d0      0f859a000000   jne 0x9a70
0x000099d6      31c0           xor eax, eax
0x000099d8      84c9           test cl, cl
0x000099da      0f888a000000   js 0x9a6a
0x000099e0      80f90a         cmp cl, 0xa
0x000099e3      0f84bf000000   je 0x9aa8
0x000099e9      84c9           test cl, cl
0x000099eb      7513           jne 0x9a00
0x000099ed      488b8f980000.  mov rcx, qword [rdi + 0x98]
0x000099f4      31c0           xor eax, eax
0x000099f6      f681d8000000.  test byte [rcx + 0xd8], 0x80
0x000099fd      756b           jne 0x9a6a
0x000099ff      90             nop
0x00009a00      53             push rbx
0x00009a01      8b5e08         mov ebx, dword [rsi + 8]
0x00009a04      b801000000     mov eax, 1
0x00009a09      f7c300ff0300   test ebx, 0x3ff00
0x00009a0f      744b           je 0x9a5c
0x00009a11      4889d6         mov rsi, rdx
0x00009a14      8b97a0000000   mov edx, dword [rdi + 0xa0]
0x00009a1a      c1eb08         shr ebx, 8
0x00009a1d      e89efeffff     call sym.re_string_context_at
0x00009a22      89d9           mov ecx, ebx
0x00009a24      89c2           mov edx, eax
0x00009a26      6681e1ff03     and cx, 0x3ff
0x00009a2b      f6c304         test bl, 4
0x00009a2e      7468           je 0x9a98
0x00009a30      31c0           xor eax, eax
0x00009a32      f6c201         test dl, 1
0x00009a35      7425           je 0x9a5c
0x00009a37      83e308         and ebx, 8
0x00009a3a      7520           jne 0x9a5c
0x00009a3c      f6c120         test cl, 0x20                           ; "@"
0x00009a3f      7407           je 0x9a48
0x00009a41      31c0           xor eax, eax
0x00009a43      f6c202         test dl, 2
0x00009a46      7414           je 0x9a5c
0x00009a48      c1ea03         shr edx, 3
0x00009a4b      b801000000     mov eax, 1
0x00009a50      83e201         and edx, 1
0x00009a53      81e180000000   and ecx, 0x80
0x00009a59      0f45c2         cmovne eax, edx
0x00009a5c      5b             pop rbx
0x00009a5d      c3             ret
0x00009a5e      6690           nop
0x00009a60      3c01           cmp al, 1
0x00009a62      750c           jne 0x9a70
0x00009a64      31c0           xor eax, eax
0x00009a66      380e           cmp byte [rsi], cl
0x00009a68      7496           je 0x9a00
0x00009a6a      f3c3           ret
0x00009a6c      0f1f4000       nop dword [rax]
0x00009a70      31c0           xor eax, eax
0x00009a72      c3             ret
0x00009a73      0f1f440000     nop dword [rax + rax]
0x00009a78      4c8b06         mov r8, qword [rsi]
0x00009a7b      0fb6c1         movzx eax, cl
0x00009a7e      48c1f806       sar rax, 6
0x00009a82      4d8b04c0       mov r8, qword [r8 + rax*8]
0x00009a86      31c0           xor eax, eax
0x00009a88      490fa3c8       bt r8, rcx
0x00009a8c      0f826effffff   jb 0x9a00
0x00009a92      f3c3           ret
0x00009a94      0f1f4000       nop dword [rax]
0x00009a98      83e308         and ebx, 8
0x00009a9b      749f           je 0x9a3c
0x00009a9d      a801           test al, 1
0x00009a9f      749b           je 0x9a3c
0x00009aa1      31c0           xor eax, eax
0x00009aa3      5b             pop rbx
0x00009aa4      c3             ret
0x00009aa5      0f1f00         nop dword [rax]
0x00009aa8      488b8f980000.  mov rcx, qword [rdi + 0x98]
0x00009aaf      31c0           xor eax, eax
0x00009ab1      f681d8000000.  test byte [rcx + 0xd8], 0x40
0x00009ab8      0f8542ffffff   jne 0x9a00
0x00009abe      f3c3           ret
;-- check_halt_state_context.isra.20:
0x00009ac0      4154           push r12
0x00009ac2      4989d4         mov r12, rdx
0x00009ac5      55             push rbp
0x00009ac6      53             push rbx
0x00009ac7      8b97a0000000   mov edx, dword [rdi + 0xa0]
0x00009acd      4889f3         mov rbx, rsi
0x00009ad0      4889ce         mov rsi, rcx
0x00009ad3      4889fd         mov rbp, rdi
0x00009ad6      e8e5fdffff     call sym.re_string_context_at
0x00009adb      4885db         test rbx, rbx
0x00009ade      0f8ea4000000   jle 0x9b88
0x00009ae4      488b95980000.  mov rdx, qword [rbp + 0x98]
0x00009aeb      4189c3         mov r11d, eax
0x00009aee      89c5           mov ebp, eax
0x00009af0      83e001         and eax, 1
0x00009af3      4d8b0c24       mov r9, qword [r12]
0x00009af7      31f6           xor esi, esi
0x00009af9      83e508         and ebp, 8
0x00009afc      4183e302       and r11d, 2
0x00009b00      4189c2         mov r10d, eax
0x00009b03      4c8b02         mov r8, qword [rdx]
0x00009b06      eb11           jmp 0x9b19
0x00009b08      0f1f84000000.  nop dword [rax + rax]
0x00009b10      4883c601       add rsi, 1
0x00009b14      4839de         cmp rsi, rbx
0x00009b17      746f           je 0x9b88
0x00009b19      498b04f1       mov rax, qword [r9 + rsi*8]
0x00009b1d      4889c2         mov rdx, rax
0x00009b20      48c1e204       shl rdx, 4
0x00009b24      4c01c2         add rdx, r8
0x00009b27      8b4a08         mov ecx, dword [rdx + 8]
0x00009b2a      c1e908         shr ecx, 8
0x00009b2d      89cf           mov edi, ecx
0x00009b2f      6681e7ff03     and di, 0x3ff
0x00009b34      807a0802       cmp byte [rdx + 8], 2
0x00009b38      75d6           jne 0x9b10
0x00009b3a      6685ff         test di, di
0x00009b3d      7426           je 0x9b65
0x00009b3f      f6c104         test cl, 4
0x00009b42      742c           je 0x9b70
0x00009b44      4585d2         test r10d, r10d
0x00009b47      74c7           je 0x9b10
0x00009b49      83e108         and ecx, 8
0x00009b4c      75c2           jne 0x9b10
0x00009b4e      40f6c720       test dil, 0x20                          ; "@"
0x00009b52      7405           je 0x9b59
0x00009b54      4585db         test r11d, r11d
0x00009b57      74b7           je 0x9b10
0x00009b59      81e780000000   and edi, 0x80
0x00009b5f      7404           je 0x9b65
0x00009b61      85ed           test ebp, ebp
0x00009b63      74ab           je 0x9b10
0x00009b65      5b             pop rbx
0x00009b66      5d             pop rbp
0x00009b67      415c           pop r12
0x00009b69      c3             ret
0x00009b6a      660f1f440000   nop word [rax + rax]
0x00009b70      83e108         and ecx, 8
0x00009b73      74d9           je 0x9b4e
0x00009b75      4585d2         test r10d, r10d
0x00009b78      7596           jne 0x9b10
0x00009b7a      40f6c720       test dil, 0x20                          ; "@"
0x00009b7e      74d9           je 0x9b59
0x00009b80      ebd2           jmp 0x9b54
0x00009b82      660f1f440000   nop word [rax + rax]
0x00009b88      5b             pop rbx
0x00009b89      31c0           xor eax, eax
0x00009b8b      5d             pop rbp
0x00009b8c      415c           pop r12
0x00009b8e      c3             ret
0x00009b8f      90             nop
;-- re_string_reconstruct:
0x00009b90      4157           push r15
0x00009b92      4156           push r14
0x00009b94      4989f7         mov r15, rsi
0x00009b97      4155           push r13
0x00009b99      4154           push r12
0x00009b9b      4189d2         mov r10d, edx
0x00009b9e      55             push rbp
0x00009b9f      53             push rbx
0x00009ba0      4889f5         mov rbp, rsi
0x00009ba3      4889fb         mov rbx, rdi
0x00009ba6      4883ec48       sub rsp, 0x48
0x00009baa      64488b042528.  mov rax, qword fs:[0x28]
0x00009bb3      4889442438     mov qword [rsp + 0x38], rax
0x00009bb8      31c0           xor eax, eax
0x00009bba      488b4728       mov rax, qword [rdi + 0x28]
0x00009bbe      4829c5         sub rbp, rax
0x00009bc1      4839f0         cmp rax, rsi
0x00009bc4      7e60           jle 0x9c26
0x00009bc6      83bf90000000.  cmp dword [rdi + 0x90], 1
0x00009bcd      0f8f2d010000   jg 0x9d00
0x00009bd3      488b4350       mov rax, qword [rbx + 0x50]
0x00009bd7      48c743300000.  mov qword [rbx + 0x30], 0
0x00009bdf      4c89fd         mov rbp, r15
0x00009be2      48c743280000.  mov qword [rbx + 0x28], 0
0x00009bea      48c743380000.  mov qword [rbx + 0x38], 0
0x00009bf2      c6838c000000.  mov byte [rbx + 0x8c], 0
0x00009bf9      48894358       mov qword [rbx + 0x58], rax
0x00009bfd      488b4360       mov rax, qword [rbx + 0x60]
0x00009c01      48894368       mov qword [rbx + 0x68], rax
0x00009c05      4489d0         mov eax, r10d
0x00009c08      83e001         and eax, 1
0x00009c0b      83f801         cmp eax, 1
0x00009c0e      19c0           sbb eax, eax
0x00009c10      83e002         and eax, 2
0x00009c13      83c004         add eax, 4
0x00009c16      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x00009c1d      894370         mov dword [rbx + 0x70], eax
0x00009c20      0f84ca000000   je 0x9cf0
0x00009c26      4885ed         test rbp, rbp
0x00009c29      7463           je 0x9c8e
0x00009c2b      488b4338       mov rax, qword [rbx + 0x38]
0x00009c2f      0fb6938c0000.  movzx edx, byte [rbx + 0x8c]
0x00009c36      4c8b4330       mov r8, qword [rbx + 0x30]
0x00009c3a      4839e8         cmp rax, rbp
0x00009c3d      0f8e1d010000   jle 0x9d60
0x00009c43      84d2           test dl, dl
0x00009c45      0f850d020000   jne 0x9e58
0x00009c4b      488d75ff       lea rsi, [rbp - 1]
0x00009c4f      4489d2         mov edx, r10d
0x00009c52      4889df         mov rdi, rbx
0x00009c55      4c890424       mov qword [rsp], r8
0x00009c59      e862fcffff     call sym.re_string_context_at
0x00009c5e      4c8b0424       mov r8, qword [rsp]
0x00009c62      894370         mov dword [rbx + 0x70], eax
0x00009c65      4929e8         sub r8, rbp
0x00009c68      83bb90000000.  cmp dword [rbx + 0x90], 1
0x00009c6f      0f8f9b000000   jg 0x9d10
0x00009c75      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x00009c7c      0f859e030000   jne 0xa020
0x00009c82      48296b38       sub qword [rbx + 0x38], rbp
0x00009c86      4c894330       mov qword [rbx + 0x30], r8
0x00009c8a      48016b08       add qword [rbx + 8], rbp
0x00009c8e      488b4358       mov rax, qword [rbx + 0x58]
0x00009c92      48296b68       sub qword [rbx + 0x68], rbp
0x00009c96      4c897b28       mov qword [rbx + 0x28], r15
0x00009c9a      4829e8         sub rax, rbp
0x00009c9d      83bb90000000.  cmp dword [rbx + 0x90], 1
0x00009ca4      48894358       mov qword [rbx + 0x58], rax
0x00009ca8      0f8e9a000000   jle 0x9d48
0x00009cae      80bb88000000.  cmp byte [rbx + 0x88], 0
0x00009cb5      4889df         mov rdi, rbx
0x00009cb8      747e           je 0x9d38
0x00009cba      e841cdffff     call sym.build_wcs_upper_buffer
0x00009cbf      85c0           test eax, eax
0x00009cc1      750a           jne 0x9ccd
0x00009cc3      48c743480000.  mov qword [rbx + 0x48], 0
0x00009ccb      31c0           xor eax, eax
0x00009ccd      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00009cd2      6448330c2528.  xor rcx, qword fs:[0x28]
0x00009cdb      0f8549060000   jne 0xa32a
0x00009ce1      4883c448       add rsp, 0x48
0x00009ce5      5b             pop rbx
0x00009ce6      5d             pop rbp
0x00009ce7      415c           pop r12
0x00009ce9      415d           pop r13
0x00009ceb      415e           pop r14
0x00009ced      415f           pop r15
0x00009cef      c3             ret
0x00009cf0      488b03         mov rax, qword [rbx]
0x00009cf3      48894308       mov qword [rbx + 8], rax
0x00009cf7      e92affffff     jmp 0x9c26
0x00009cfc      0f1f4000       nop dword [rax]
0x00009d00      48c747200000.  mov qword [rdi + 0x20], 0
0x00009d08      e9c6feffff     jmp 0x9bd3
0x00009d0d      0f1f00         nop dword [rax]
0x00009d10      488b7b10       mov rdi, qword [rbx + 0x10]
0x00009d14      4a8d14850000.  lea rdx, [r8*4]
0x00009d1c      488d34af       lea rsi, [rdi + rbp*4]
0x00009d20      e87b7effff     call sym.imp.memmove
0x00009d25      4c8b4330       mov r8, qword [rbx + 0x30]
0x00009d29      4929e8         sub r8, rbp
0x00009d2c      e944ffffff     jmp 0x9c75
0x00009d31      0f1f80000000.  nop dword [rax]
0x00009d38      e8f3caffff     call sym.build_wcs_buffer
0x00009d3d      e981ffffff     jmp 0x9cc3
0x00009d42      660f1f440000   nop word [rax + rax]
0x00009d48      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x00009d4f      0f85ab030000   jne 0xa100
0x00009d55      48894330       mov qword [rbx + 0x30], rax
0x00009d59      e965ffffff     jmp 0x9cc3
0x00009d5e      6690           nop
0x00009d60      84d2           test dl, dl
0x00009d62      0f85a5040000   jne 0xa20d
0x00009d68      486393900000.  movsxd rdx, dword [rbx + 0x90]
0x00009d6f      48c743300000.  mov qword [rbx + 0x30], 0
0x00009d77      4c8b5b28       mov r11, qword [rbx + 0x28]
0x00009d7b      83fa01         cmp edx, 1
0x00009d7e      0f8ee4030000   jle 0xa168
0x00009d84      80bb89000000.  cmp byte [rbx + 0x89], 0
0x00009d8b      0f85b7020000   jne 0xa048
0x00009d91      4d8d3403       lea r14, [r11 + rax]
0x00009d95      4d39f7         cmp r15, r14
0x00009d98      0f8e41040000   jle 0xa1df
0x00009d9e      488d4320       lea rax, [rbx + 0x20]
0x00009da2      4c8d6c2424     lea r13, [rsp + 0x24]
0x00009da7      4889442410     mov qword [rsp + 0x10], rax
0x00009dac      0f1f4000       nop dword [rax]
0x00009db0      4c8b6350       mov r12, qword [rbx + 0x50]
0x00009db4      488b33         mov rsi, qword [rbx]
0x00009db7      4c89ef         mov rdi, r13
0x00009dba      488b4320       mov rax, qword [rbx + 0x20]
0x00009dbe      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00009dc3      448954240c     mov dword [rsp + 0xc], r10d
0x00009dc8      4c890424       mov qword [rsp], r8
0x00009dcc      4d29f4         sub r12, r14
0x00009dcf      4c01f6         add rsi, r14
0x00009dd2      4c89e2         mov rdx, r12
0x00009dd5      4889442418     mov qword [rsp + 0x18], rax
0x00009dda      e861c1ffff     call sym.rpl_mbrtowc
0x00009ddf      488d48ff       lea rcx, [rax - 1]
0x00009de3      8b542424       mov edx, dword [rsp + 0x24]
0x00009de7      4c8b0424       mov r8, qword [rsp]
0x00009deb      448b54240c     mov r10d, dword [rsp + 0xc]
0x00009df0      4883f9fc       cmp rcx, 0xfffffffffffffffc
0x00009df4      0f873b040000   ja 0xa235
0x00009dfa      4901c6         add r14, rax
0x00009dfd      4d39f7         cmp r15, r14
0x00009e00      7fae           jg 0x9db0
0x00009e02      4d29fe         sub r14, r15
0x00009e05      83faff         cmp edx, 0xffffffff
0x00009e08      4d89f4         mov r12, r14
0x00009e0b      4c897330       mov qword [rbx + 0x30], r14
0x00009e0f      0f84d4030000   je 0xa1e9
0x00009e15      80bb8e000000.  cmp byte [rbx + 0x8e], 0
0x00009e1c      0f8567040000   jne 0xa289
0x00009e22      31c0           xor eax, eax
0x00009e24      83fa0a         cmp edx, 0xa
0x00009e27      750e           jne 0x9e37
0x00009e29      31c0           xor eax, eax
0x00009e2b      80bb8d000000.  cmp byte [rbx + 0x8d], 0
0x00009e32      0f95c0         setne al
0x00009e35      01c0           add eax, eax
0x00009e37      894370         mov dword [rbx + 0x70], eax
0x00009e3a      4983fc00       cmp r12, 0
0x00009e3e      0f8516040000   jne 0xa25a
0x00009e44      0fb6838b0000.  movzx eax, byte [rbx + 0x8b]
0x00009e4b      4c896338       mov qword [rbx + 0x38], r12
0x00009e4f      e9b8010000     jmp 0xa00c
0x00009e54      0f1f4000       nop dword [rax]
0x00009e58      4c8b7318       mov r14, qword [rbx + 0x18]
0x00009e5c      4c89c1         mov rcx, r8
0x00009e5f      31f6           xor esi, esi
0x00009e61      eb10           jmp 0x9e73
0x00009e63      0f1f440000     nop dword [rax + rax]
0x00009e68      7d39           jge 0x9ea3
0x00009e6a      488d7001       lea rsi, [rax + 1]
0x00009e6e      4839ce         cmp rsi, rcx
0x00009e71      7d25           jge 0x9e98
0x00009e73      488d140e       lea rdx, [rsi + rcx]
0x00009e77      4889d0         mov rax, rdx
0x00009e7a      48c1e83f       shr rax, 0x3f
0x00009e7e      4801d0         add rax, rdx
0x00009e81      48d1f8         sar rax, 1
0x00009e84      498b14c6       mov rdx, qword [r14 + rax*8]
0x00009e88      4989c4         mov r12, rax
0x00009e8b      4839ea         cmp rdx, rbp
0x00009e8e      7ed8           jle 0x9e68
0x00009e90      4889c1         mov rcx, rax
0x00009e93      ebd9           jmp 0x9e6e
0x00009e95      0f1f00         nop dword [rax]
0x00009e98      4c8d6001       lea r12, [rax + 1]
0x00009e9c      4839ea         cmp rdx, rbp
0x00009e9f      4c0f4de0       cmovge r12, rax
0x00009ea3      4d8d6c24ff     lea r13, [r12 - 1]
0x00009ea8      4489d2         mov edx, r10d
0x00009eab      4889df         mov rdi, rbx
0x00009eae      4c890424       mov qword [rsp], r8
0x00009eb2      4c89ee         mov rsi, r13
0x00009eb5      e806faffff     call sym.re_string_context_at
0x00009eba      4c39e5         cmp rbp, r12
0x00009ebd      894370         mov dword [rbx + 0x70], eax
0x00009ec0      4c8b0424       mov r8, qword [rsp]
0x00009ec4      0f857e000000   jne 0x9f48
0x00009eca      4c39c5         cmp rbp, r8
0x00009ecd      7d79           jge 0x9f48
0x00009ecf      4b392ce6       cmp qword [r14 + r12*8], rbp
0x00009ed3      7573           jne 0x9f48
0x00009ed5      488b7b10       mov rdi, qword [rbx + 0x10]
0x00009ed9      4929e8         sub r8, rbp
0x00009edc      4a8d14850000.  lea rdx, [r8*4]
0x00009ee4      488d34af       lea rsi, [rdi + rbp*4]
0x00009ee8      e8b37cffff     call sym.imp.memmove
0x00009eed      488b7b08       mov rdi, qword [rbx + 8]
0x00009ef1      488b5330       mov rdx, qword [rbx + 0x30]
0x00009ef5      488d342f       lea rsi, [rdi + rbp]
0x00009ef9      4829ea         sub rdx, rbp
0x00009efc      e89f7cffff     call sym.imp.memmove
0x00009f01      488b4330       mov rax, qword [rbx + 0x30]
0x00009f05      48296b38       sub qword [rbx + 0x38], rbp
0x00009f09      4829e8         sub rax, rbp
0x00009f0c      4885c0         test rax, rax
0x00009f0f      48894330       mov qword [rbx + 0x30], rax
0x00009f13      7e23           jle 0x9f38
0x00009f15      488b4b18       mov rcx, qword [rbx + 0x18]
0x00009f19      31c0           xor eax, eax
0x00009f1b      488d34e9       lea rsi, [rcx + rbp*8]
0x00009f1f      90             nop
0x00009f20      488b14c6       mov rdx, qword [rsi + rax*8]
0x00009f24      4829ea         sub rdx, rbp
0x00009f27      488914c1       mov qword [rcx + rax*8], rdx
0x00009f2b      4883c001       add rax, 1
0x00009f2f      48394330       cmp qword [rbx + 0x30], rax
0x00009f33      7feb           jg 0x9f20
0x00009f35      0f1f00         nop dword [rax]
0x00009f38      0fb6838b0000.  movzx eax, byte [rbx + 0x8b]
0x00009f3f      e9c8000000     jmp 0xa00c
0x00009f44      0f1f4000       nop dword [rax]
0x00009f48      488b4350       mov rax, qword [rbx + 0x50]
0x00009f4c      c6838c000000.  mov byte [rbx + 0x8c], 0
0x00009f53      4801e8         add rax, rbp
0x00009f56      4c29f8         sub rax, r15
0x00009f59      48894358       mov qword [rbx + 0x58], rax
0x00009f5d      488b4360       mov rax, qword [rbx + 0x60]
0x00009f61      4801e8         add rax, rbp
0x00009f64      4c29f8         sub rax, r15
0x00009f67      4d85e4         test r12, r12
0x00009f6a      48894368       mov qword [rbx + 0x68], rax
0x00009f6e      7e23           jle 0x9f93
0x00009f70      4b396ce6f8     cmp qword [r14 + r12*8 - 8], rbp
0x00009f75      7414           je 0x9f8b
0x00009f77      eb1a           jmp 0x9f93
0x00009f79      0f1f80000000.  nop dword [rax]
0x00009f80      4b396ceef8     cmp qword [r14 + r13*8 - 8], rbp
0x00009f85      750c           jne 0x9f93
0x00009f87      4983ed01       sub r13, 1
0x00009f8b      4d85ed         test r13, r13
0x00009f8e      4d89ec         mov r12, r13
0x00009f91      75ed           jne 0x9f80
0x00009f93      4d39c4         cmp r12, r8
0x00009f96      0f8d2c020000   jge 0xa1c8
0x00009f9c      488b4310       mov rax, qword [rbx + 0x10]
0x00009fa0      eb13           jmp 0x9fb5
0x00009fa2      660f1f440000   nop word [rax + rax]
0x00009fa8      4983c401       add r12, 1
0x00009fac      4d39c4         cmp r12, r8
0x00009faf      0f841b020000   je 0xa1d0
0x00009fb5      42833ca0ff     cmp dword [rax + r12*4], 0xffffffff
0x00009fba      74ec           je 0x9fa8
0x00009fbc      4b8b14e6       mov rdx, qword [r14 + r12*8]
0x00009fc0      4829ea         sub rdx, rbp
0x00009fc3      4883fa00       cmp rdx, 0
0x00009fc7      48895330       mov qword [rbx + 0x30], rdx
0x00009fcb      7434           je 0xa001
0x00009fcd      7e20           jle 0x9fef
0x00009fcf      488b4310       mov rax, qword [rbx + 0x10]
0x00009fd3      488d0c90       lea rcx, [rax + rdx*4]
0x00009fd7      660f1f840000.  nop word [rax + rax]
0x00009fe0      c700ffffffff   mov dword [rax], 0xffffffff             ; [0xffffffff:4]=-1 ; -1
0x00009fe6      4883c004       add rax, 4
0x00009fea      4839c1         cmp rcx, rax
0x00009fed      75f1           jne 0x9fe0
0x00009fef      488b7b08       mov rdi, qword [rbx + 8]
0x00009ff3      beff000000     mov esi, 0xff
0x00009ff8      e8637affff     call sym.imp.memset
0x00009ffd      488b5330       mov rdx, qword [rbx + 0x30]
0x0000a001      0fb6838b0000.  movzx eax, byte [rbx + 0x8b]
0x0000a008      48895338       mov qword [rbx + 0x38], rdx
0x0000a00c      84c0           test al, al
0x0000a00e      0f8476fcffff   je 0x9c8a
0x0000a014      e975fcffff     jmp 0x9c8e
0x0000a019      0f1f80000000.  nop dword [rax]
0x0000a020      488b7b08       mov rdi, qword [rbx + 8]
0x0000a024      4c89c2         mov rdx, r8
0x0000a027      488d342f       lea rsi, [rdi + rbp]
0x0000a02b      e8707bffff     call sym.imp.memmove
0x0000a030      0fb6838b0000.  movzx eax, byte [rbx + 0x8b]
0x0000a037      48296b30       sub qword [rbx + 0x30], rbp
0x0000a03b      48296b38       sub qword [rbx + 0x38], rbp
0x0000a03f      ebcb           jmp 0xa00c
0x0000a041      0f1f80000000.  nop dword [rax]
0x0000a048      488b0b         mov rcx, qword [rbx]
0x0000a04b      4889ef         mov rdi, rbp
0x0000a04e      4829d7         sub rdi, rdx
0x0000a051      4889fa         mov rdx, rdi
0x0000a054      4e8d2419       lea r12, [rcx + r11]
0x0000a058      4c01e2         add rdx, r12
0x0000a05b      498d742cff     lea rsi, [r12 + rbp - 1]
0x0000a060      4839d1         cmp rcx, rdx
0x0000a063      480f42ca       cmovb rcx, rdx
0x0000a067      4839f1         cmp rcx, rsi
0x0000a06a      7619           jbe 0xa085
0x0000a06c      e920fdffff     jmp 0x9d91
0x0000a071      0f1f80000000.  nop dword [rax]
0x0000a078      4883ee01       sub rsi, 1
0x0000a07c      4839f1         cmp rcx, rsi
0x0000a07f      0f870cfdffff   ja 0x9d91
0x0000a085      0fb616         movzx edx, byte [rsi]
0x0000a088      83e2c0         and edx, 0xffffffc0                     ; 4294967232
0x0000a08b      80fa80         cmp dl, 0x80
0x0000a08e      74e8           je 0xa078
0x0000a090      488b5358       mov rdx, qword [rbx + 0x58]
0x0000a094      488b4b78       mov rcx, qword [rbx + 0x78]
0x0000a098      4989f6         mov r14, rsi
0x0000a09b      4c01e2         add rdx, r12
0x0000a09e      4829f2         sub rdx, rsi
0x0000a0a1      4885c9         test rcx, rcx
0x0000a0a4      0f8548020000   jne 0xa2f2
0x0000a0aa      4c8d6c2424     lea r13, [rsp + 0x24]
0x0000a0af      4901ec         add r12, rbp
0x0000a0b2      488d4c2428     lea rcx, [rsp + 0x28]
0x0000a0b7      4d29f4         sub r12, r14
0x0000a0ba      448954240c     mov dword [rsp + 0xc], r10d
0x0000a0bf      4c890424       mov qword [rsp], r8
0x0000a0c3      4c89ef         mov rdi, r13
0x0000a0c6      48c744242800.  mov qword [rsp + 0x28], 0
0x0000a0cf      e86cbeffff     call sym.rpl_mbrtowc
0x0000a0d4      4939c4         cmp r12, rax
0x0000a0d7      4c8b0424       mov r8, qword [rsp]
0x0000a0db      448b54240c     mov r10d, dword [rsp + 0xc]
0x0000a0e0      770a           ja 0xa0ec
0x0000a0e2      4883f8fd       cmp rax, 0xfffffffffffffffd
0x0000a0e6      0f86c5010000   jbe 0xa2b1
0x0000a0ec      4c8b5b28       mov r11, qword [rbx + 0x28]
0x0000a0f0      488b4338       mov rax, qword [rbx + 0x38]
0x0000a0f4      e998fcffff     jmp 0x9d91
0x0000a0f9      0f1f80000000.  nop dword [rax]
0x0000a100      80bb88000000.  cmp byte [rbx + 0x88], 0
0x0000a107      0f85f3000000   jne 0xa200
0x0000a10d      488b4b78       mov rcx, qword [rbx + 0x78]
0x0000a111      4885c9         test rcx, rcx
0x0000a114      0f84a9fbffff   je 0x9cc3
0x0000a11a      48394340       cmp qword [rbx + 0x40], rax
0x0000a11e      488b5330       mov rdx, qword [rbx + 0x30]
0x0000a122      480f4e4340     cmovle rax, qword [rbx + 0x40]
0x0000a127      4839d0         cmp rax, rdx
0x0000a12a      7f0c           jg 0xa138
0x0000a12c      eb2a           jmp 0xa158
0x0000a12e      6690           nop
0x0000a130      4c8b7b28       mov r15, qword [rbx + 0x28]
0x0000a134      488b4b78       mov rcx, qword [rbx + 0x78]
0x0000a138      488b33         mov rsi, qword [rbx]
0x0000a13b      4801d6         add rsi, rdx
0x0000a13e      420fb6343e     movzx esi, byte [rsi + r15]
0x0000a143      0fb63431       movzx esi, byte [rcx + rsi]
0x0000a147      488b4b08       mov rcx, qword [rbx + 8]
0x0000a14b      40883411       mov byte [rcx + rdx], sil
0x0000a14f      4883c201       add rdx, 1
0x0000a153      4839d0         cmp rax, rdx
0x0000a156      75d8           jne 0xa130
0x0000a158      48895330       mov qword [rbx + 0x30], rdx
0x0000a15c      48895338       mov qword [rbx + 0x38], rdx
0x0000a160      e95efbffff     jmp 0x9cc3
0x0000a165      0f1f00         nop dword [rax]
0x0000a168      488b03         mov rax, qword [rbx]
0x0000a16b      488b5378       mov rdx, qword [rbx + 0x78]
0x0000a16f      4801e8         add rax, rbp
0x0000a172      4885d2         test rdx, rdx
0x0000a175      410fb64403ff   movzx eax, byte [r11 + rax - 1]
0x0000a17b      48c743380000.  mov qword [rbx + 0x38], 0
0x0000a183      7404           je 0xa189
0x0000a185      0fb60402       movzx eax, byte [rdx + rax]
0x0000a189      488b8b800000.  mov rcx, qword [rbx + 0x80]
0x0000a190      0fb6d0         movzx edx, al
0x0000a193      48c1fa06       sar rdx, 6
0x0000a197      488b0cd1       mov rcx, qword [rcx + rdx*8]
0x0000a19b      ba01000000     mov edx, 1
0x0000a1a0      480fa3c1       bt rcx, rax
0x0000a1a4      721a           jb 0xa1c0
0x0000a1a6      31d2           xor edx, edx
0x0000a1a8      3c0a           cmp al, 0xa
0x0000a1aa      7514           jne 0xa1c0
0x0000a1ac      31d2           xor edx, edx
0x0000a1ae      80bb8d000000.  cmp byte [rbx + 0x8d], 0
0x0000a1b5      0f95c2         setne dl
0x0000a1b8      01d2           add edx, edx
0x0000a1ba      660f1f440000   nop word [rax + rax]
0x0000a1c0      895370         mov dword [rbx + 0x70], edx
0x0000a1c3      e970fdffff     jmp 0x9f38
0x0000a1c8      0f85eefdffff   jne 0x9fbc
0x0000a1ce      6690           nop
0x0000a1d0      48c743300000.  mov qword [rbx + 0x30], 0
0x0000a1d8      31d2           xor edx, edx
0x0000a1da      e922feffff     jmp 0xa001
0x0000a1df      4d29fe         sub r14, r15
0x0000a1e2      4d89f4         mov r12, r14
0x0000a1e5      4c897330       mov qword [rbx + 0x30], r14
0x0000a1e9      498d70ff       lea rsi, [r8 - 1]
0x0000a1ed      4489d2         mov edx, r10d
0x0000a1f0      4889df         mov rdi, rbx
0x0000a1f3      e8c8f6ffff     call sym.re_string_context_at
0x0000a1f8      894370         mov dword [rbx + 0x70], eax
0x0000a1fb      e93afcffff     jmp 0x9e3a
0x0000a200      4889df         mov rdi, rbx
0x0000a203      e8b8c5ffff     call sym.build_upper_buffer
0x0000a208      e9b6faffff     jmp 0x9cc3
0x0000a20d      488b5350       mov rdx, qword [rbx + 0x50]
0x0000a211      c6838c000000.  mov byte [rbx + 0x8c], 0
0x0000a218      4801ea         add rdx, rbp
0x0000a21b      4c29fa         sub rdx, r15
0x0000a21e      48895358       mov qword [rbx + 0x58], rdx
0x0000a222      488b5360       mov rdx, qword [rbx + 0x60]
0x0000a226      4801ea         add rdx, rbp
0x0000a229      4c29fa         sub rdx, r15
0x0000a22c      48895368       mov qword [rbx + 0x68], rdx
0x0000a230      e933fbffff     jmp 0x9d68
0x0000a235      4885c0         test rax, rax
0x0000a238      7473           je 0xa2ad
0x0000a23a      4d85e4         test r12, r12
0x0000a23d      746e           je 0xa2ad
0x0000a23f      488b03         mov rax, qword [rbx]
0x0000a242      420fb61430     movzx edx, byte [rax + r14]
0x0000a247      488b442418     mov rax, qword [rsp + 0x18]
0x0000a24c      48894320       mov qword [rbx + 0x20], rax
0x0000a250      b801000000     mov eax, 1
0x0000a255      e9a0fbffff     jmp 0x9dfa
0x0000a25a      7e1b           jle 0xa277
0x0000a25c      488b4310       mov rax, qword [rbx + 0x10]
0x0000a260      4a8d14a0       lea rdx, [rax + r12*4]
0x0000a264      0f1f4000       nop dword [rax]
0x0000a268      c700ffffffff   mov dword [rax], 0xffffffff             ; [0xffffffff:4]=-1 ; -1
0x0000a26e      4883c004       add rax, 4
0x0000a272      4839c2         cmp rdx, rax
0x0000a275      75f1           jne 0xa268
0x0000a277      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x0000a27e      7558           jne 0xa2d8
0x0000a280      4c896338       mov qword [rbx + 0x38], r12
0x0000a284      e901faffff     jmp 0x9c8a
0x0000a289      89d7           mov edi, edx
0x0000a28b      891424         mov dword [rsp], edx
0x0000a28e      e85d78ffff     call sym.imp.iswalnum
0x0000a293      85c0           test eax, eax
0x0000a295      750c           jne 0xa2a3
0x0000a297      8b1424         mov edx, dword [rsp]
0x0000a29a      83fa5f         cmp edx, 0x5f
0x0000a29d      0f857ffbffff   jne 0x9e22
0x0000a2a3      b801000000     mov eax, 1
0x0000a2a8      e98afbffff     jmp 0x9e37
0x0000a2ad      31d2           xor edx, edx
0x0000a2af      eb96           jmp 0xa247
0x0000a2b1      8b542424       mov edx, dword [rsp + 0x24]
0x0000a2b5      4c29e0         sub rax, r12
0x0000a2b8      48c743200000.  mov qword [rbx + 0x20], 0
0x0000a2c0      4989c4         mov r12, rax
0x0000a2c3      48894330       mov qword [rbx + 0x30], rax
0x0000a2c7      83faff         cmp edx, 0xffffffff
0x0000a2ca      0f8545fbffff   jne 0x9e15
0x0000a2d0      e917feffff     jmp 0xa0ec
0x0000a2d5      0f1f00         nop dword [rax]
0x0000a2d8      488b7b08       mov rdi, qword [rbx + 8]
0x0000a2dc      4c89e2         mov rdx, r12
0x0000a2df      beff000000     mov esi, 0xff
0x0000a2e4      e87777ffff     call sym.imp.memset
0x0000a2e9      4c8b6330       mov r12, qword [rbx + 0x30]
0x0000a2ed      e952fbffff     jmp 0x9e44
0x0000a2f2      4883fa06       cmp rdx, 6
0x0000a2f6      bf06000000     mov edi, 6
0x0000a2fb      4c8d5c2432     lea r11, [rsp + 0x32]
0x0000a300      480f4efa       cmovle rdi, rdx
0x0000a304      83ef01         sub edi, 1
0x0000a307      85ff           test edi, edi
0x0000a309      4863c7         movsxd rax, edi
0x0000a30c      7814           js 0xa322
0x0000a30e      0fb63c06       movzx edi, byte [rsi + rax]
0x0000a312      0fb63c39       movzx edi, byte [rcx + rdi]
0x0000a316      41883c03       mov byte [r11 + rax], dil
0x0000a31a      4883e801       sub rax, 1
0x0000a31e      85c0           test eax, eax
0x0000a320      79ec           jns 0xa30e
0x0000a322      4c89de         mov rsi, r11
0x0000a325      e980fdffff     jmp 0xa0aa
0x0000a32a      e8b176ffff     call sym.imp.__stack_chk_fail
0x0000a32f      90             nop
;-- sub_epsilon_src_nodes:
0x0000a330      4157           push r15
0x0000a332      4156           push r14
0x0000a334      4989d6         mov r14, rdx
0x0000a337      4155           push r13
0x0000a339      4154           push r12
0x0000a33b      488d1476       lea rdx, [rsi + rsi*2]
0x0000a33f      55             push rbp
0x0000a340      53             push rbx
0x0000a341      660fefc0       pxor xmm0, xmm0
0x0000a345      4883ec48       sub rsp, 0x48
0x0000a349      64488b042528.  mov rax, qword fs:[0x28]
0x0000a352      4889442438     mov qword [rsp + 0x38], rax
0x0000a357      31c0           xor eax, eax
0x0000a359      488b4738       mov rax, qword [rdi + 0x38]
0x0000a35d      48c744243000.  mov qword [rsp + 0x30], 0
0x0000a366      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000a36b      48894c2410     mov qword [rsp + 0x10], rcx
0x0000a370      488d2cd0       lea rbp, [rax + rdx*8]
0x0000a374      4c8b5508       mov r10, qword [rbp + 8]
0x0000a378      4d85d2         test r10, r10
0x0000a37b      0f8ee1010000   jle 0xa562
0x0000a381      488d442420     lea rax, [rsp + 0x20]
0x0000a386      4989fc         mov r12, rdi
0x0000a389      4989f5         mov r13, rsi
0x0000a38c      31db           xor ebx, ebx
0x0000a38e      4889442418     mov qword [rsp + 0x18], rax
0x0000a393      eb58           jmp 0xa3ed
0x0000a395      0f1f00         nop dword [rax]
0x0000a398      4885c0         test rax, rax
0x0000a39b      0f85d7000000   jne 0xa478
0x0000a3a1      498b7e08       mov rdi, qword [r14 + 8]
0x0000a3a5      498d7610       lea rsi, [r14 + 0x10]
0x0000a3a9      4c89c2         mov rdx, r8
0x0000a3ac      e82fd7ffff     call sym.re_node_set_contains.isra.3
0x0000a3b1      4885c0         test rax, rax
0x0000a3b4      0f84be000000   je 0xa478
0x0000a3ba      498b542438     mov rdx, qword [r12 + 0x38]
0x0000a3bf      488b742410     mov rsi, qword [rsp + 0x10]
0x0000a3c4      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000a3c9      4c01ca         add rdx, r9
0x0000a3cc      e81fe2ffff     call sym.re_node_set_add_intersect
0x0000a3d1      85c0           test eax, eax
0x0000a3d3      0f8577010000   jne 0xa550
0x0000a3d9      4c8b5508       mov r10, qword [rbp + 8]
0x0000a3dd      0f1f00         nop dword [rax]
0x0000a3e0      4883c301       add rbx, 1
0x0000a3e4      4939da         cmp r10, rbx
0x0000a3e7      0f8ed3000000   jle 0xa4c0
0x0000a3ed      488b4510       mov rax, qword [rbp + 0x10]
0x0000a3f1      488b04d8       mov rax, qword [rax + rbx*8]
0x0000a3f5      4939c5         cmp r13, rax
0x0000a3f8      74e6           je 0xa3e0
0x0000a3fa      4889c2         mov rdx, rax
0x0000a3fd      48c1e204       shl rdx, 4
0x0000a401      49031424       add rdx, qword [r12]
0x0000a405      f6420808       test byte [rdx + 8], 8
0x0000a409      74d5           je 0xa3e0
0x0000a40b      4c8d0c40       lea r9, [rax + rax*2]
0x0000a40f      498b4c2428     mov rcx, qword [r12 + 0x28]
0x0000a414      4c8d5d10       lea r11, [rbp + 0x10]
0x0000a418      4c89d7         mov rdi, r10
0x0000a41b      49c1e103       shl r9, 3
0x0000a41f      4c89de         mov rsi, r11
0x0000a422      4c01c9         add rcx, r9
0x0000a425      4c8b7910       mov r15, qword [rcx + 0x10]
0x0000a429      48894c2408     mov qword [rsp + 8], rcx
0x0000a42e      4d8b07         mov r8, qword [r15]
0x0000a431      4c89c2         mov rdx, r8
0x0000a434      4c890424       mov qword [rsp], r8
0x0000a438      e8a3d6ffff     call sym.re_node_set_contains.isra.3
0x0000a43d      488b4c2408     mov rcx, qword [rsp + 8]
0x0000a442      4c8b0424       mov r8, qword [rsp]
0x0000a446      4883790801     cmp qword [rcx + 8], 1
0x0000a44b      0f8f47ffffff   jg 0xa398
0x0000a451      4885c0         test rax, rax
0x0000a454      758a           jne 0xa3e0
0x0000a456      498b7e08       mov rdi, qword [r14 + 8]
0x0000a45a      498d7610       lea rsi, [r14 + 0x10]
0x0000a45e      4c89c2         mov rdx, r8
0x0000a461      e87ad6ffff     call sym.re_node_set_contains.isra.3
0x0000a466      4885c0         test rax, rax
0x0000a469      0f854bffffff   jne 0xa3ba
0x0000a46f      e96cffffff     jmp 0xa3e0
0x0000a474      0f1f4000       nop dword [rax]
0x0000a478      4d8b7f08       mov r15, qword [r15 + 8]
0x0000a47c      4d85ff         test r15, r15
0x0000a47f      0f8e5bffffff   jle 0xa3e0
0x0000a485      4c89fa         mov rdx, r15
0x0000a488      4c89de         mov rsi, r11
0x0000a48b      4c89d7         mov rdi, r10
0x0000a48e      e84dd6ffff     call sym.re_node_set_contains.isra.3
0x0000a493      4885c0         test rax, rax
0x0000a496      0f8544ffffff   jne 0xa3e0
0x0000a49c      498b7e08       mov rdi, qword [r14 + 8]
0x0000a4a0      498d7610       lea rsi, [r14 + 0x10]
0x0000a4a4      e837d6ffff     call sym.re_node_set_contains.isra.3
0x0000a4a9      4885c0         test rax, rax
0x0000a4ac      0f842effffff   je 0xa3e0
0x0000a4b2      e903ffffff     jmp 0xa3ba
0x0000a4b7      660f1f840000.  nop word [rax + rax]
0x0000a4c0      4531c9         xor r9d, r9d
0x0000a4c3      4d85d2         test r10, r10
0x0000a4c6      4c8d5c2430     lea r11, [rsp + 0x30]
0x0000a4cb      7e4f           jle 0xa51c
0x0000a4cd      0f1f00         nop dword [rax]
0x0000a4d0      488b4510       mov rax, qword [rbp + 0x10]
0x0000a4d4      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000a4d9      4c89de         mov rsi, r11
0x0000a4dc      4e8b14c8       mov r10, qword [rax + r9*8]
0x0000a4e0      4c89d2         mov rdx, r10
0x0000a4e3      e8f8d5ffff     call sym.re_node_set_contains.isra.3
0x0000a4e8      4885c0         test rax, rax
0x0000a4eb      7525           jne 0xa512
0x0000a4ed      498d5e10       lea rbx, [r14 + 0x10]
0x0000a4f1      498b7e08       mov rdi, qword [r14 + 8]
0x0000a4f5      4889de         mov rsi, rbx
0x0000a4f8      e8e3d5ffff     call sym.re_node_set_contains.isra.3
0x0000a4fd      4883e801       sub rax, 1
0x0000a501      4889c2         mov rdx, rax
0x0000a504      780c           js 0xa512
0x0000a506      498d7e08       lea rdi, [r14 + 8]
0x0000a50a      4889de         mov rsi, rbx
0x0000a50d      e84ed7ffff     call sym.re_node_set_remove_at.isra.4.part.5
0x0000a512      4983c101       add r9, 1
0x0000a516      4c394d08       cmp qword [rbp + 8], r9
0x0000a51a      7fb4           jg 0xa4d0
0x0000a51c      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000a521      e8aa73ffff     call sym.imp.free
0x0000a526      31c0           xor eax, eax
0x0000a528      488b742438     mov rsi, qword [rsp + 0x38]
0x0000a52d      644833342528.  xor rsi, qword fs:[0x28]
0x0000a536      752e           jne 0xa566
0x0000a538      4883c448       add rsp, 0x48
0x0000a53c      5b             pop rbx
0x0000a53d      5d             pop rbp
0x0000a53e      415c           pop r12
0x0000a540      415d           pop r13
0x0000a542      415e           pop r14
0x0000a544      415f           pop r15
0x0000a546      c3             ret
0x0000a547      660f1f840000.  nop word [rax + rax]
0x0000a550      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000a555      890424         mov dword [rsp], eax
0x0000a558      e87373ffff     call sym.imp.free
0x0000a55d      8b0424         mov eax, dword [rsp]
0x0000a560      ebc6           jmp 0xa528
0x0000a562      31ff           xor edi, edi
0x0000a564      ebbb           jmp 0xa521
0x0000a566      e87574ffff     call sym.imp.__stack_chk_fail
0x0000a56b      0f1f440000     nop dword [rax + rax]
;-- build_trtable:
0x0000a570      4157           push r15
0x0000a572      4156           push r14
0x0000a574      4989ff         mov r15, rdi
0x0000a577      4155           push r13
0x0000a579      4154           push r12
0x0000a57b      bf00380000     mov edi, 0x3800
0x0000a580      55             push rbp
0x0000a581      53             push rbx
0x0000a582      4881ec080100.  sub rsp, 0x108
0x0000a589      64488b042528.  mov rax, qword fs:[0x28]
0x0000a592      48898424f800.  mov qword [rsp + 0xf8], rax
0x0000a59a      31c0           xor eax, eax
0x0000a59c      4889742408     mov qword [rsp + 8], rsi
0x0000a5a1      e85a75ffff     call sym.imp.malloc
0x0000a5a6      4885c0         test rax, rax
0x0000a5a9      4889442418     mov qword [rsp + 0x18], rax
0x0000a5ae      0f84cc030000   je 0xa980
0x0000a5b4      488b442418     mov rax, qword [rsp + 0x18]
0x0000a5b9      660fefc0       pxor xmm0, xmm0
0x0000a5bd      488d98001800.  lea rbx, [rax + 0x1800]
0x0000a5c4      488b442408     mov rax, qword [rsp + 8]
0x0000a5c9      0f2984249000.  movaps xmmword [rsp + 0x90], xmm0
0x0000a5d1      48895c2440     mov qword [rsp + 0x40], rbx
0x0000a5d6      0f298424a000.  movaps xmmword [rsp + 0xa0], xmm0
0x0000a5de      4883781000     cmp qword [rax + 0x10], 0
0x0000a5e3      48c740580000.  mov qword [rax + 0x58], 0
0x0000a5eb      48c740600000.  mov qword [rax + 0x60], 0
0x0000a5f3      0f8e710a0000   jle 0xb06a
0x0000a5f9      4c897c2430     mov qword [rsp + 0x30], r15
0x0000a5fe      31ed           xor ebp, ebp
0x0000a600      48c744241000.  mov qword [rsp + 0x10], 0
0x0000a609      4989df         mov r15, rbx
0x0000a60c      488b5c2410     mov rbx, qword [rsp + 0x10]
0x0000a611      488d04dd0000.  lea rax, [rbx*8]
0x0000a619      4889442420     mov qword [rsp + 0x20], rax
0x0000a61e      488b442408     mov rax, qword [rsp + 8]
0x0000a623      488b4018       mov rax, qword [rax + 0x18]
0x0000a627      4c8b2cd8       mov r13, qword [rax + rbx*8]
0x0000a62b      488b442430     mov rax, qword [rsp + 0x30]
0x0000a630      49c1e504       shl r13, 4
0x0000a634      4c0328         add r13, qword [rax]
0x0000a637      450fb67508     movzx r14d, byte [r13 + 8]
0x0000a63c      418b4508       mov eax, dword [r13 + 8]
0x0000a640      c1e808         shr eax, 8
0x0000a643      6625ff03       and ax, 0x3ff
0x0000a647      4183fe01       cmp r14d, 1
0x0000a64b      0f845f030000   je 0xa9b0
0x0000a651      4183fe03       cmp r14d, 3
0x0000a655      0f84c5070000   je 0xae20
0x0000a65b      4183fe05       cmp r14d, 5
0x0000a65f      0f847b060000   je 0xace0
0x0000a665      4183fe07       cmp r14d, 7
0x0000a669      0f84da070000   je 0xae49
0x0000a66f      488b5c2408     mov rbx, qword [rsp + 8]
0x0000a674      488344241001   add qword [rsp + 0x10], 1
0x0000a67a      488b442410     mov rax, qword [rsp + 0x10]
0x0000a67f      483b4310       cmp rax, qword [rbx + 0x10]
0x0000a683      7c87           jl 0xa60c
0x0000a685      4885ed         test rbp, rbp
0x0000a688      4c8b7c2430     mov r15, qword [rsp + 0x30]
0x0000a68d      0f8e560a0000   jle 0xb0e9
0x0000a693      488d5d01       lea rbx, [rbp + 1]
0x0000a697      48c744247800.  mov qword [rsp + 0x78], 0
0x0000a6a0      48895c2470     mov qword [rsp + 0x70], rbx
0x0000a6a5      48c1e303       shl rbx, 3
0x0000a6a9      4889df         mov rdi, rbx
0x0000a6ac      e84f74ffff     call sym.imp.malloc
0x0000a6b1      4885c0         test rax, rax
0x0000a6b4      4989c4         mov r12, rax
0x0000a6b7      488984248000.  mov qword [rsp + 0x80], rax
0x0000a6bf      0f84fa070000   je 0xaebf
0x0000a6c5      48b855a8aaaa.  movabs rax, 0xaaaaaaaaaaaa855
0x0000a6cf      c744246c0000.  mov dword [rsp + 0x6c], 0
0x0000a6d7      4839c5         cmp rbp, rax
0x0000a6da      0f8fdf070000   jg 0xaebf
0x0000a6e0      488d446d00     lea rax, [rbp + rbp*2]
0x0000a6e5      48c1e003       shl rax, 3
0x0000a6e9      4889c7         mov rdi, rax
0x0000a6ec      4889442458     mov qword [rsp + 0x58], rax
0x0000a6f1      e80a74ffff     call sym.imp.malloc
0x0000a6f6      4885c0         test rax, rax
0x0000a6f9      4889442410     mov qword [rsp + 0x10], rax
0x0000a6fe      0f84bb070000   je 0xaebf
0x0000a704      488b442410     mov rax, qword [rsp + 0x10]
0x0000a709      4883eb08       sub rbx, 8
0x0000a70d      4c8b642440     mov r12, qword [rsp + 0x40]
0x0000a712      660fefc0       pxor xmm0, xmm0
0x0000a716      4c8d742470     lea r14, [rsp + 0x70]
0x0000a71b      48896c2420     mov qword [rsp + 0x20], rbp
0x0000a720      c644244f00     mov byte [rsp + 0x4f], 0
0x0000a725      4c89fd         mov rbp, r15
0x0000a728      4801d8         add rax, rbx
0x0000a72b      4c89642450     mov qword [rsp + 0x50], r12
0x0000a730      4801c3         add rbx, rax
0x0000a733      4889442430     mov qword [rsp + 0x30], rax
0x0000a738      488b442418     mov rax, qword [rsp + 0x18]
0x0000a73d      0f298424d000.  movaps xmmword [rsp + 0xd0], xmm0
0x0000a745      48895c2438     mov qword [rsp + 0x38], rbx
0x0000a74a      31db           xor ebx, ebx
0x0000a74c      4c8d6808       lea r13, [rax + 8]
0x0000a750      488d44246c     lea rax, [rsp + 0x6c]
0x0000a755      0f298424e000.  movaps xmmword [rsp + 0xe0], xmm0
0x0000a75d      4889442428     mov qword [rsp + 0x28], rax
0x0000a762      48c744247800.  mov qword [rsp + 0x78], 0
0x0000a76b      49837d0000     cmp qword [r13], 0
0x0000a770      7e46           jle 0xa7b8
0x0000a772      4531ff         xor r15d, r15d
0x0000a775      0f1f00         nop dword [rax]
0x0000a778      498b4508       mov rax, qword [r13 + 8]
0x0000a77c      4a8b14f8       mov rdx, qword [rax + r15*8]
0x0000a780      488b4518       mov rax, qword [rbp + 0x18]
0x0000a784      488b04d0       mov rax, qword [rax + rdx*8]
0x0000a788      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000a78c      7420           je 0xa7ae
0x0000a78e      488d1440       lea rdx, [rax + rax*2]
0x0000a792      488b4530       mov rax, qword [rbp + 0x30]
0x0000a796      4c89f7         mov rdi, r14
0x0000a799      488d34d0       lea rsi, [rax + rdx*8]
0x0000a79d      e85ed8ffff     call sym.re_node_set_merge
0x0000a7a2      85c0           test eax, eax
0x0000a7a4      8944246c       mov dword [rsp + 0x6c], eax
0x0000a7a8      0f85fa060000   jne 0xaea8
0x0000a7ae      4983c701       add r15, 1
0x0000a7b2      4d397d00       cmp qword [r13], r15
0x0000a7b6      7fc0           jg 0xa778
0x0000a7b8      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000a7bd      31c9           xor ecx, ecx
0x0000a7bf      4889ee         mov rsi, rbp
0x0000a7c2      4c89f2         mov rdx, r14
0x0000a7c5      e866e6ffff     call sym.re_acquire_state_context
0x0000a7ca      488b742410     mov rsi, qword [rsp + 0x10]
0x0000a7cf      4885c0         test rax, rax
0x0000a7d2      488904de       mov qword [rsi + rbx*8], rax
0x0000a7d6      0f84ac070000   je 0xaf88
0x0000a7dc      80786800       cmp byte [rax + 0x68], 0
0x0000a7e0      0f881a070000   js 0xaf00
0x0000a7e6      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000a7eb      488b742438     mov rsi, qword [rsp + 0x38]
0x0000a7f0      488904df       mov qword [rdi + rbx*8], rax
0x0000a7f4      488b442410     mov rax, qword [rsp + 0x10]
0x0000a7f9      488b04d8       mov rax, qword [rax + rbx*8]
0x0000a7fd      488904de       mov qword [rsi + rbx*8], rax
0x0000a801      488d9424d000.  lea rdx, [rsp + 0xd0]
0x0000a809      31c0           xor eax, eax
0x0000a80b      488b0c02       mov rcx, qword [rdx + rax]
0x0000a80f      490b0c04       or rcx, qword [r12 + rax]
0x0000a813      48890c02       mov qword [rdx + rax], rcx
0x0000a817      4883c008       add rax, 8
0x0000a81b      4883f820       cmp rax, 0x20                           ; "@"
0x0000a81f      75ea           jne 0xa80b
0x0000a821      4883c301       add rbx, 1
0x0000a825      4983c518       add r13, 0x18
0x0000a829      4983c420       add r12, 0x20                           ; "@"
0x0000a82d      483b5c2420     cmp rbx, qword [rsp + 0x20]
0x0000a832      0f852affffff   jne 0xa762
0x0000a838      807c244f00     cmp byte [rsp + 0x4f], 0
0x0000a83d      4989ef         mov r15, rbp
0x0000a840      488b6c2420     mov rbp, qword [rsp + 0x20]
0x0000a845      4889542420     mov qword [rsp + 0x20], rdx
0x0000a84a      0f8549070000   jne 0xaf99
0x0000a850      be00010000     mov esi, 0x100
0x0000a855      bf08000000     mov edi, 8
0x0000a85a      e85172ffff     call sym.imp.calloc
0x0000a85f      4989c3         mov r11, rax
0x0000a862      488b442408     mov rax, qword [rsp + 8]
0x0000a867      4d85db         test r11, r11
0x0000a86a      4c895858       mov qword [rax + 0x58], r11
0x0000a86e      0f8439060000   je 0xaead
0x0000a874      488b5c2440     mov rbx, qword [rsp + 0x40]
0x0000a879      4c8b642410     mov r12, qword [rsp + 0x10]
0x0000a87e      4531c9         xor r9d, r9d
0x0000a881      4c8b6c2430     mov r13, qword [rsp + 0x30]
0x0000a886      488b542420     mov rdx, qword [rsp + 0x20]
0x0000a88b      4883c320       add rbx, 0x20                           ; "@"
0x0000a88f      4a8b040a       mov rax, qword [rdx + r9]
0x0000a893      4885c0         test rax, rax
0x0000a896      742c           je 0xa8c4
0x0000a898      4c89ce         mov rsi, r9
0x0000a89b      b901000000     mov ecx, 1
0x0000a8a0      48c1e606       shl rsi, 6
0x0000a8a4      4c01de         add rsi, r11
0x0000a8a7      660f1f840000.  nop word [rax + rax]
0x0000a8b0      a801           test al, 1
0x0000a8b2      0f8560070000   jne 0xb018
0x0000a8b8      4801c9         add rcx, rcx
0x0000a8bb      4883c608       add rsi, 8
0x0000a8bf      48d1e8         shr rax, 1
0x0000a8c2      75ec           jne 0xa8b0
0x0000a8c4      4983c108       add r9, 8
0x0000a8c8      4983f920       cmp r9, 0x20                            ; "@"
0x0000a8cc      75c1           jne 0xa88f
0x0000a8ce      f68424d10000.  test byte [rsp + 0xd1], 4
0x0000a8d6      743a           je 0xa912
0x0000a8d8      31c0           xor eax, eax
0x0000a8da      488b542450     mov rdx, qword [rsp + 0x50]
0x0000a8df      eb0d           jmp 0xa8ee
0x0000a8e1      4883c001       add rax, 1
0x0000a8e5      4883c220       add rdx, 0x20                           ; "@"
0x0000a8e9      4839e8         cmp rax, rbp
0x0000a8ec      7424           je 0xa912
0x0000a8ee      48f702000400.  test qword [rdx], 0x400
0x0000a8f5      74ea           je 0xa8e1
0x0000a8f7      488b5c2438     mov rbx, qword [rsp + 0x38]
0x0000a8fc      807c244f00     cmp byte [rsp + 0x4f], 0
0x0000a901      488b04c3       mov rax, qword [rbx + rax*8]
0x0000a905      49894350       mov qword [r11 + 0x50], rax
0x0000a909      7407           je 0xa912
0x0000a90b      498983500800.  mov qword [r11 + 0x850], rax
0x0000a912      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000a917      e8b46fffff     call sym.imp.free
0x0000a91c      488bbc248000.  mov rdi, qword [rsp + 0x80]
0x0000a924      e8a76fffff     call sym.imp.free
0x0000a929      488b442418     mov rax, qword [rsp + 0x18]
0x0000a92e      488b5c2458     mov rbx, qword [rsp + 0x58]
0x0000a933      488d6810       lea rbp, [rax + 0x10]
0x0000a937      4801eb         add rbx, rbp
0x0000a93a      488b7d00       mov rdi, qword [rbp]
0x0000a93e      4883c518       add rbp, 0x18
0x0000a942      e8896fffff     call sym.imp.free
0x0000a947      4839eb         cmp rbx, rbp
0x0000a94a      75ee           jne 0xa93a
0x0000a94c      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000a951      e87a6fffff     call sym.imp.free
0x0000a956      b801000000     mov eax, 1
0x0000a95b      eb25           jmp 0xa982
0x0000a95d      4885ed         test rbp, rbp
0x0000a960      48c743080000.  mov qword [rbx + 8], 0
0x0000a968      48c703000000.  mov qword [rbx], 0
0x0000a96f      0f852b030000   jne 0xaca0
0x0000a975      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000a97a      e8516fffff     call sym.imp.free
0x0000a97f      90             nop
0x0000a980      31c0           xor eax, eax
0x0000a982      488b9c24f800.  mov rbx, qword [rsp + 0xf8]
0x0000a98a      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000a993      0f854b070000   jne 0xb0e4
0x0000a999      4881c4080100.  add rsp, 0x108
0x0000a9a0      5b             pop rbx
0x0000a9a1      5d             pop rbp
0x0000a9a2      415c           pop r12
0x0000a9a4      415d           pop r13
0x0000a9a6      415e           pop r14
0x0000a9a8      415f           pop r15
0x0000a9aa      c3             ret
0x0000a9ab      0f1f440000     nop dword [rax + rax]
0x0000a9b0      410fb64d00     movzx ecx, byte [r13]
0x0000a9b5      4c8da4249000.  lea r12, [rsp + 0x90]
0x0000a9bd      bf01000000     mov edi, 1
0x0000a9c2      4889ca         mov rdx, rcx
0x0000a9c5      83e13f         and ecx, 0x3f
0x0000a9c8      48c1ea03       shr rdx, 3
0x0000a9cc      48d3e7         shl rdi, cl
0x0000a9cf      83e218         and edx, 0x18
0x0000a9d2      49093c14       or qword [r12 + rdx], rdi
0x0000a9d6      6685c0         test ax, ax
0x0000a9d9      0f84c1000000   je 0xaaa0
0x0000a9df      a820           test al, 0x20                           ; "@"
0x0000a9e1      0f8569030000   jne 0xad50
0x0000a9e7      a880           test al, 0x80
0x0000a9e9      0f8595020000   jne 0xac84
0x0000a9ef      a804           test al, 4
0x0000a9f1      7452           je 0xaa45
0x0000a9f3      4183fe01       cmp r14d, 1
0x0000a9f7      0f84d8030000   je 0xadd5
0x0000a9fd      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000aa02      4183b8b40000.  cmp dword [r8 + 0xb4], 1
0x0000aa0a      0f8e52040000   jle 0xae62
0x0000aa10      498b7878       mov rdi, qword [r8 + 0x78]
0x0000aa14      31f6           xor esi, esi
0x0000aa16      31c9           xor ecx, ecx
0x0000aa18      488b14cf       mov rdx, qword [rdi + rcx*8]
0x0000aa1c      48f7d2         not rdx
0x0000aa1f      490b94c8b800.  or rdx, qword [r8 + rcx*8 + 0xb8]
0x0000aa27      492314cc       and rdx, qword [r12 + rcx*8]
0x0000aa2b      498914cc       mov qword [r12 + rcx*8], rdx
0x0000aa2f      4883c101       add rcx, 1
0x0000aa33      4809d6         or rsi, rdx
0x0000aa36      4883f904       cmp rcx, 4
0x0000aa3a      75dc           jne 0xaa18
0x0000aa3c      4885f6         test rsi, rsi
0x0000aa3f      0f842afcffff   je 0xa66f
0x0000aa45      a808           test al, 8
0x0000aa47      7457           je 0xaaa0
0x0000aa49      4183fe01       cmp r14d, 1
0x0000aa4d      0f842e030000   je 0xad81
0x0000aa53      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000aa58      83bfb4000000.  cmp dword [rdi + 0xb4], 1
0x0000aa5f      0f8e39030000   jle 0xad9e
0x0000aa65      488b7778       mov rsi, qword [rdi + 0x78]
0x0000aa69      31c9           xor ecx, ecx
0x0000aa6b      31d2           xor edx, edx
0x0000aa6d      488b84d7b800.  mov rax, qword [rdi + rdx*8 + 0xb8]
0x0000aa75      482304d6       and rax, qword [rsi + rdx*8]
0x0000aa79      48f7d0         not rax
0x0000aa7c      492304d4       and rax, qword [r12 + rdx*8]
0x0000aa80      498904d4       mov qword [r12 + rdx*8], rax
0x0000aa84      4883c201       add rdx, 1
0x0000aa88      4809c1         or rcx, rax
0x0000aa8b      4883fa04       cmp rdx, 4
0x0000aa8f      75dc           jne 0xaa6d
0x0000aa91      4885c9         test rcx, rcx
0x0000aa94      0f84d5fbffff   je 0xa66f
0x0000aa9a      660f1f440000   nop word [rax + rax]
0x0000aaa0      31db           xor ebx, ebx
0x0000aaa2      4885ed         test rbp, rbp
0x0000aaa5      0f8e60010000   jle 0xac0b
0x0000aaab      4c896c2428     mov qword [rsp + 0x28], r13
0x0000aab0      4d89fd         mov r13, r15
0x0000aab3      0f1f440000     nop dword [rax + rax]
0x0000aab8      4989da         mov r10, rbx
0x0000aabb      49c1e205       shl r10, 5
0x0000aabf      4183fe01       cmp r14d, 1
0x0000aac3      7523           jne 0xaae8
0x0000aac5      488b442428     mov rax, qword [rsp + 0x28]
0x0000aaca      0fb610         movzx edx, byte [rax]
0x0000aacd      4889d0         mov rax, rdx
0x0000aad0      48c1e803       shr rax, 3
0x0000aad4      83e018         and eax, 0x18
0x0000aad7      4c01e8         add rax, r13
0x0000aada      4a8b0410       mov rax, qword [rax + r10]
0x0000aade      480fa3d0       bt rax, rdx
0x0000aae2      0f8313010000   jae 0xabfb
0x0000aae8      4b8d7c1500     lea rdi, [r13 + r10]
0x0000aaed      488db424b000.  lea rsi, [rsp + 0xb0]
0x0000aaf5      31c9           xor ecx, ecx
0x0000aaf7      31c0           xor eax, eax
0x0000aaf9      498b14c4       mov rdx, qword [r12 + rax*8]
0x0000aafd      482314c7       and rdx, qword [rdi + rax*8]
0x0000ab01      488914c6       mov qword [rsi + rax*8], rdx
0x0000ab05      4883c001       add rax, 1
0x0000ab09      4809d1         or rcx, rdx
0x0000ab0c      4883f804       cmp rax, 4
0x0000ab10      75e7           jne 0xaaf9
0x0000ab12      4885c9         test rcx, rcx
0x0000ab15      0f84e0000000   je 0xabfb
0x0000ab1b      4c8d9c24d000.  lea r11, [rsp + 0xd0]
0x0000ab23      4531ff         xor r15d, r15d
0x0000ab26      4531c9         xor r9d, r9d
0x0000ab29      31c9           xor ecx, ecx
0x0000ab2b      498b34cc       mov rsi, qword [r12 + rcx*8]
0x0000ab2f      488b04cf       mov rax, qword [rdi + rcx*8]
0x0000ab33      4889f2         mov rdx, rsi
0x0000ab36      48f7d2         not rdx
0x0000ab39      4821c2         and rdx, rax
0x0000ab3c      48f7d0         not rax
0x0000ab3f      4821f0         and rax, rsi
0x0000ab42      498914cb       mov qword [r11 + rcx*8], rdx
0x0000ab46      4909d1         or r9, rdx
0x0000ab49      498904cc       mov qword [r12 + rcx*8], rax
0x0000ab4d      4883c101       add rcx, 1
0x0000ab51      4909c7         or r15, rax
0x0000ab54      4883f904       cmp rcx, 4
0x0000ab58      75d1           jne 0xab2b
0x0000ab5a      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000ab5f      488d045b       lea rax, [rbx + rbx*2]
0x0000ab63      4d85c9         test r9, r9
0x0000ab66      488d14c7       lea rdx, [rdi + rax*8]
0x0000ab6a      7468           je 0xabd4
0x0000ab6c      4889e8         mov rax, rbp
0x0000ab6f      660f6f8424d0.  movdqa xmm0, xmmword [rsp + 0xd0]
0x0000ab78      48c1e005       shl rax, 5
0x0000ab7c      4889d6         mov rsi, rdx
0x0000ab7f      4889542438     mov qword [rsp + 0x38], rdx
0x0000ab84      4c01e8         add rax, r13
0x0000ab87      0f1100         movups xmmword [rax], xmm0
0x0000ab8a      660f6f8424e0.  movdqa xmm0, xmmword [rsp + 0xe0]
0x0000ab93      0f114010       movups xmmword [rax + 0x10], xmm0
0x0000ab97      488d446d00     lea rax, [rbp + rbp*2]
0x0000ab9c      488d3cc7       lea rdi, [rdi + rax*8]
0x0000aba0      660f6f8424b0.  movdqa xmm0, xmmword [rsp + 0xb0]
0x0000aba9      430f11441500   movups xmmword [r13 + r10], xmm0
0x0000abaf      660f6f8424c0.  movdqa xmm0, xmmword [rsp + 0xc0]
0x0000abb8      430f11441510   movups xmmword [r13 + r10 + 0x10], xmm0
0x0000abbe      e87de0ffff     call sym.re_node_set_init_copy
0x0000abc3      85c0           test eax, eax
0x0000abc5      0f85d5000000   jne 0xaca0
0x0000abcb      488b542438     mov rdx, qword [rsp + 0x38]
0x0000abd0      4883c501       add rbp, 1
0x0000abd4      488b442408     mov rax, qword [rsp + 8]
0x0000abd9      488b742420     mov rsi, qword [rsp + 0x20]
0x0000abde      4889d7         mov rdi, rdx
0x0000abe1      488b4018       mov rax, qword [rax + 0x18]
0x0000abe5      488b3430       mov rsi, qword [rax + rsi]
0x0000abe9      e8b2b9ffff     call sym.re_node_set_insert
0x0000abee      84c0           test al, al
0x0000abf0      0f84aa000000   je 0xaca0
0x0000abf6      4d85ff         test r15, r15
0x0000abf9      740d           je 0xac08
0x0000abfb      4883c301       add rbx, 1
0x0000abff      4839eb         cmp rbx, rbp
0x0000ac02      0f8cb0feffff   jl 0xaab8
0x0000ac08      4d89ef         mov r15, r13
0x0000ac0b      4839dd         cmp rbp, rbx
0x0000ac0e      0f855bfaffff   jne 0xa66f
0x0000ac14      4889e8         mov rax, rbp
0x0000ac17      660f6f842490.  movdqa xmm0, xmmword [rsp + 0x90]
0x0000ac20      48c1e005       shl rax, 5
0x0000ac24      488b5c2420     mov rbx, qword [rsp + 0x20]
0x0000ac29      bf08000000     mov edi, 8
0x0000ac2e      4c01f8         add rax, r15
0x0000ac31      0f1100         movups xmmword [rax], xmm0
0x0000ac34      660f6f8424a0.  movdqa xmm0, xmmword [rsp + 0xa0]
0x0000ac3d      0f114010       movups xmmword [rax + 0x10], xmm0
0x0000ac41      488b442408     mov rax, qword [rsp + 8]
0x0000ac46      488b4018       mov rax, qword [rax + 0x18]
0x0000ac4a      4c8b2c18       mov r13, qword [rax + rbx]
0x0000ac4e      488b5c2418     mov rbx, qword [rsp + 0x18]
0x0000ac53      488d446d00     lea rax, [rbp + rbp*2]
0x0000ac58      488d1cc3       lea rbx, [rbx + rax*8]
0x0000ac5c      48c703010000.  mov qword [rbx], 1
0x0000ac63      48c743080100.  mov qword [rbx + 8], 1
0x0000ac6b      e8906effff     call sym.imp.malloc
0x0000ac70      4885c0         test rax, rax
0x0000ac73      48894310       mov qword [rbx + 0x10], rax
0x0000ac77      0f84e0fcffff   je 0xa95d
0x0000ac7d      4c8928         mov qword [rax], r13
0x0000ac80      4883c501       add rbp, 1
0x0000ac84      660fefc0       pxor xmm0, xmm0
0x0000ac88      410f290424     movaps xmmword [r12], xmm0
0x0000ac8d      410f29442410   movaps xmmword [r12 + 0x10], xmm0
0x0000ac93      e9d7f9ffff     jmp 0xa66f
0x0000ac98      0f1f84000000.  nop dword [rax + rax]
0x0000aca0      488b442418     mov rax, qword [rsp + 0x18]
0x0000aca5      488d5810       lea rbx, [rax + 0x10]
0x0000aca9      488d446d00     lea rax, [rbp + rbp*2]
0x0000acae      488d2cc3       lea rbp, [rbx + rax*8]
0x0000acb2      660f1f440000   nop word [rax + rax]
0x0000acb8      488b3b         mov rdi, qword [rbx]
0x0000acbb      4883c318       add rbx, 0x18
0x0000acbf      e80c6cffff     call sym.imp.free
0x0000acc4      4839dd         cmp rbp, rbx
0x0000acc7      75ef           jne 0xacb8
0x0000acc9      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000acce      e8fd6bffff     call sym.imp.free
0x0000acd3      e9a8fcffff     jmp 0xa980
0x0000acd8      0f1f84000000.  nop dword [rax + rax]
0x0000ace0      488b742430     mov rsi, qword [rsp + 0x30]
0x0000ace5      83beb4000000.  cmp dword [rsi + 0xb4], 1
0x0000acec      0f8e03010000   jle 0xadf5
0x0000acf2      488b7678       mov rsi, qword [rsi + 0x78]
0x0000acf6      4c8da4249000.  lea r12, [rsp + 0x90]
0x0000acfe      31d2           xor edx, edx
0x0000ad00      498b0c14       mov rcx, qword [r12 + rdx]
0x0000ad04      480b0c16       or rcx, qword [rsi + rdx]
0x0000ad08      49890c14       mov qword [r12 + rdx], rcx
0x0000ad0c      4883c208       add rdx, 8
0x0000ad10      4883fa20       cmp rdx, 0x20                           ; "@"
0x0000ad14      75ea           jne 0xad00
0x0000ad16      488b5c2430     mov rbx, qword [rsp + 0x30]
0x0000ad1b      488b93d80000.  mov rdx, qword [rbx + 0xd8]
0x0000ad22      f6c240         test dl, 0x40                           ; segment.PHDR
0x0000ad25      750c           jne 0xad33
0x0000ad27      4881a4249000.  and qword [rsp + 0x90], 0xfffffffffffffbff
0x0000ad33      81e280000000   and edx, 0x80
0x0000ad39      0f8497fcffff   je 0xa9d6
0x0000ad3f      4883a4249000.  and qword [rsp + 0x90], 0xfffffffffffffffe
0x0000ad48      e989fcffff     jmp 0xa9d6
0x0000ad4d      0f1f00         nop dword [rax]
0x0000ad50      488b94249000.  mov rdx, qword [rsp + 0x90]
0x0000ad58      660fefc0       pxor xmm0, xmm0
0x0000ad5c      80e604         and dh, 4
0x0000ad5f      410f290424     movaps xmmword [r12], xmm0
0x0000ad64      410f29442410   movaps xmmword [r12 + 0x10], xmm0
0x0000ad6a      0f84fff8ffff   je 0xa66f
0x0000ad70      48c784249000.  mov qword [rsp + 0x90], 0x400           ; [0x400:8]=0x1200000267
0x0000ad7c      e966fcffff     jmp 0xa9e7
0x0000ad81      41f6450a40     test byte [r13 + 0xa], 0x40
0x0000ad86      0f85f8feffff   jne 0xac84
0x0000ad8c      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000ad91      83bfb4000000.  cmp dword [rdi + 0xb4], 1
0x0000ad98      0f8fc7fcffff   jg 0xaa65
0x0000ad9e      488b742430     mov rsi, qword [rsp + 0x30]
0x0000ada3      31c9           xor ecx, ecx
0x0000ada5      31d2           xor edx, edx
0x0000ada7      488b84d6b800.  mov rax, qword [rsi + rdx*8 + 0xb8]
0x0000adaf      48f7d0         not rax
0x0000adb2      492304d4       and rax, qword [r12 + rdx*8]
0x0000adb6      498904d4       mov qword [r12 + rdx*8], rax
0x0000adba      4883c201       add rdx, 1
0x0000adbe      4809c1         or rcx, rax
0x0000adc1      4883fa04       cmp rdx, 4
0x0000adc5      75e0           jne 0xada7
0x0000adc7      4885c9         test rcx, rcx
0x0000adca      0f85d0fcffff   jne 0xaaa0
0x0000add0      e99af8ffff     jmp 0xa66f
0x0000add5      41f6450a40     test byte [r13 + 0xa], 0x40
0x0000adda      0f84a4feffff   je 0xac84
0x0000ade0      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000ade5      4183b8b40000.  cmp dword [r8 + 0xb4], 1
0x0000aded      0f8f1dfcffff   jg 0xaa10
0x0000adf3      eb6d           jmp 0xae62
0x0000adf5      660f76c0       pcmpeqd xmm0, xmm0
0x0000adf9      4c8da4249000.  lea r12, [rsp + 0x90]
0x0000ae01      0f2984249000.  movaps xmmword [rsp + 0x90], xmm0
0x0000ae09      0f298424a000.  movaps xmmword [rsp + 0xa0], xmm0
0x0000ae11      e900ffffff     jmp 0xad16
0x0000ae16      662e0f1f8400.  nop word cs:[rax + rax]
0x0000ae20      498b7500       mov rsi, qword [r13]
0x0000ae24      4c8da4249000.  lea r12, [rsp + 0x90]
0x0000ae2c      31d2           xor edx, edx
0x0000ae2e      498b0c14       mov rcx, qword [r12 + rdx]
0x0000ae32      480b0c16       or rcx, qword [rsi + rdx]
0x0000ae36      49890c14       mov qword [r12 + rdx], rcx
0x0000ae3a      4883c208       add rdx, 8
0x0000ae3e      4883fa20       cmp rdx, 0x20                           ; "@"
0x0000ae42      75ea           jne 0xae2e
0x0000ae44      e98dfbffff     jmp 0xa9d6
0x0000ae49      660f76c0       pcmpeqd xmm0, xmm0
0x0000ae4d      4c8da4249000.  lea r12, [rsp + 0x90]
0x0000ae55      0f2984249000.  movaps xmmword [rsp + 0x90], xmm0
0x0000ae5d      e9b4feffff     jmp 0xad16
0x0000ae62      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000ae67      31f6           xor esi, esi
0x0000ae69      31d2           xor edx, edx
0x0000ae6b      498b0cd4       mov rcx, qword [r12 + rdx*8]
0x0000ae6f      48238cd7b800.  and rcx, qword [rdi + rdx*8 + 0xb8]
0x0000ae77      49890cd4       mov qword [r12 + rdx*8], rcx
0x0000ae7b      4883c201       add rdx, 1
0x0000ae7f      4809ce         or rsi, rcx
0x0000ae82      4883fa04       cmp rdx, 4
0x0000ae86      75e3           jne 0xae6b
0x0000ae88      4885f6         test rsi, rsi
0x0000ae8b      0f85b4fbffff   jne 0xaa45
0x0000ae91      e9d9f7ffff     jmp 0xa66f
0x0000ae96      8b54246c       mov edx, dword [rsp + 0x6c]
0x0000ae9a      85d2           test edx, edx
0x0000ae9c      0f8485000000   je 0xaf27
0x0000aea2      660f1f440000   nop word [rax + rax]
0x0000aea8      488b6c2420     mov rbp, qword [rsp + 0x20]
0x0000aead      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000aeb2      e8196affff     call sym.imp.free
0x0000aeb7      4c8ba4248000.  mov r12, qword [rsp + 0x80]
0x0000aebf      4c89e7         mov rdi, r12
0x0000aec2      e8096affff     call sym.imp.free
0x0000aec7      488b442418     mov rax, qword [rsp + 0x18]
0x0000aecc      488d5810       lea rbx, [rax + 0x10]
0x0000aed0      488d446d00     lea rax, [rbp + rbp*2]
0x0000aed5      488d2cc3       lea rbp, [rbx + rax*8]
0x0000aed9      0f1f80000000.  nop dword [rax]
0x0000aee0      488b3b         mov rdi, qword [rbx]
0x0000aee3      4883c318       add rbx, 0x18
0x0000aee7      e8e469ffff     call sym.imp.free
0x0000aeec      4839dd         cmp rbp, rbx
0x0000aeef      75ef           jne 0xaee0
0x0000aef1      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000aef6      e8d569ffff     call sym.imp.free
0x0000aefb      e980faffff     jmp 0xa980
0x0000af00      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000af05      b901000000     mov ecx, 1
0x0000af0a      4c89f2         mov rdx, r14
0x0000af0d      4889ee         mov rsi, rbp
0x0000af10      e81bdfffff     call sym.re_acquire_state_context
0x0000af15      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000af1a      4885c0         test rax, rax
0x0000af1d      488904df       mov qword [rdi + rbx*8], rax
0x0000af21      0f846fffffff   je 0xae96
0x0000af27      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000af2c      483b04df       cmp rax, qword [rdi + rbx*8]
0x0000af30      7419           je 0xaf4b
0x0000af32      0fb67c244f     movzx edi, byte [rsp + 0x4f]
0x0000af37      83bdb4000000.  cmp dword [rbp + 0xb4], 2
0x0000af3e      b801000000     mov eax, 1
0x0000af43      0f4df8         cmovge edi, eax
0x0000af46      40887c244f     mov byte [rsp + 0x4f], dil
0x0000af4b      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000af50      4889ee         mov rsi, rbp
0x0000af53      b902000000     mov ecx, 2
0x0000af58      4c89f2         mov rdx, r14
0x0000af5b      e8d0deffff     call sym.re_acquire_state_context
0x0000af60      488b742438     mov rsi, qword [rsp + 0x38]
0x0000af65      4885c0         test rax, rax
0x0000af68      488904de       mov qword [rsi + rbx*8], rax
0x0000af6c      0f858ff8ffff   jne 0xa801
0x0000af72      8b44246c       mov eax, dword [rsp + 0x6c]
0x0000af76      85c0           test eax, eax
0x0000af78      0f8483f8ffff   je 0xa801
0x0000af7e      e925ffffff     jmp 0xaea8
0x0000af83      0f1f440000     nop dword [rax + rax]
0x0000af88      8b4c246c       mov ecx, dword [rsp + 0x6c]
0x0000af8c      85c9           test ecx, ecx
0x0000af8e      0f8448f8ffff   je 0xa7dc
0x0000af94      e90fffffff     jmp 0xaea8
0x0000af99      be00020000     mov esi, 0x200
0x0000af9e      bf08000000     mov edi, 8
0x0000afa3      e8086bffff     call sym.imp.calloc
0x0000afa8      4989c3         mov r11, rax
0x0000afab      488b442408     mov rax, qword [rsp + 8]
0x0000afb0      4d85db         test r11, r11
0x0000afb3      4c895860       mov qword [rax + 0x60], r11
0x0000afb7      0f84f0feffff   je 0xaead
0x0000afbd      4c8b6c2440     mov r13, qword [rsp + 0x40]
0x0000afc2      4c8b542410     mov r10, qword [rsp + 0x10]
0x0000afc7      4d89dc         mov r12, r11
0x0000afca      4c8b742430     mov r14, qword [rsp + 0x30]
0x0000afcf      488b542420     mov rdx, qword [rsp + 0x20]
0x0000afd4      31db           xor ebx, ebx
0x0000afd6      4983c520       add r13, 0x20                           ; "@"
0x0000afda      488b041a       mov rax, qword [rdx + rbx]
0x0000afde      4885c0         test rax, rax
0x0000afe1      741c           je 0xafff
0x0000afe3      4c89e6         mov rsi, r12
0x0000afe6      b901000000     mov ecx, 1
0x0000afeb      a801           test al, 1
0x0000afed      0f85a9000000   jne 0xb09c
0x0000aff3      4801c9         add rcx, rcx
0x0000aff6      4883c608       add rsi, 8
0x0000affa      48d1e8         shr rax, 1
0x0000affd      75ec           jne 0xafeb
0x0000afff      4883c308       add rbx, 8
0x0000b003      4981c4000200.  add r12, 0x200
0x0000b00a      4883fb20       cmp rbx, 0x20                           ; "@"
0x0000b00e      75ca           jne 0xafda
0x0000b010      e9b9f8ffff     jmp 0xa8ce
0x0000b015      0f1f00         nop dword [rax]
0x0000b018      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000b01d      4a858c0f0018.  test qword [rdi + r9 + 0x1800], rcx
0x0000b025      7570           jne 0xb097
0x0000b027      4a8d3c0b       lea rdi, [rbx + r9]
0x0000b02b      4531c0         xor r8d, r8d
0x0000b02e      6690           nop
0x0000b030      4c8b17         mov r10, qword [rdi]
0x0000b033      4983c001       add r8, 1
0x0000b037      4883c720       add rdi, 0x20                           ; "@"
0x0000b03b      4921ca         and r10, rcx
0x0000b03e      4d85d2         test r10, r10
0x0000b041      74ed           je 0xb030
0x0000b043      49c1e003       shl r8, 3
0x0000b047      4b858c0fb800.  test qword [r15 + r9 + 0xb8], rcx
0x0000b04f      740d           je 0xb05e
0x0000b051      4b8b7c0500     mov rdi, qword [r13 + r8]
0x0000b056      48893e         mov qword [rsi], rdi
0x0000b059      e95af8ffff     jmp 0xa8b8
0x0000b05e      4b8b3c04       mov rdi, qword [r12 + r8]
0x0000b062      48893e         mov qword [rsi], rdi
0x0000b065      e94ef8ffff     jmp 0xa8b8
0x0000b06a      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000b06f      e85c68ffff     call sym.imp.free
0x0000b074      be00010000     mov esi, 0x100
0x0000b079      bf08000000     mov edi, 8
0x0000b07e      e82d6affff     call sym.imp.calloc
0x0000b083      488b5c2408     mov rbx, qword [rsp + 8]
0x0000b088      4885c0         test rax, rax
0x0000b08b      48894358       mov qword [rbx + 0x58], rax
0x0000b08f      0f95c0         setne al
0x0000b092      e9ebf8ffff     jmp 0xa982
0x0000b097      4531c0         xor r8d, r8d
0x0000b09a      ebab           jmp 0xb047
0x0000b09c      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000b0a1      48858c1f0018.  test qword [rdi + rbx + 0x1800], rcx
0x0000b0a9      7535           jne 0xb0e0
0x0000b0ab      4d8d4c1d00     lea r9, [r13 + rbx]
0x0000b0b0      4531c0         xor r8d, r8d
0x0000b0b3      4d8b39         mov r15, qword [r9]
0x0000b0b6      4983c001       add r8, 1
0x0000b0ba      4983c120       add r9, 0x20                            ; "@"
0x0000b0be      4c89c7         mov rdi, r8
0x0000b0c1      4921cf         and r15, rcx
0x0000b0c4      4d85ff         test r15, r15
0x0000b0c7      74ea           je 0xb0b3
0x0000b0c9      4d8b04fa       mov r8, qword [r10 + rdi*8]
0x0000b0cd      4c8906         mov qword [rsi], r8
0x0000b0d0      498b3cfe       mov rdi, qword [r14 + rdi*8]
0x0000b0d4      4889be000800.  mov qword [rsi + 0x800], rdi
0x0000b0db      e913ffffff     jmp 0xaff3
0x0000b0e0      31ff           xor edi, edi
0x0000b0e2      ebe5           jmp 0xb0c9
0x0000b0e4      e8f768ffff     call sym.imp.__stack_chk_fail
0x0000b0e9      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000b0ee      e8dd67ffff     call sym.imp.free
0x0000b0f3      4885ed         test rbp, rbp
0x0000b0f6      0f8584f8ffff   jne 0xa980
0x0000b0fc      e973ffffff     jmp 0xb074
0x0000b101      0f1f440000     nop dword [rax + rax]
0x0000b106      662e0f1f8400.  nop word cs:[rax + rax]
;-- calc_first:
0x0000b110      807e3010       cmp byte [rsi + 0x30], 0x10
0x0000b114      7462           je 0xb178
0x0000b116      55             push rbp
0x0000b117      53             push rbx
0x0000b118      4889f3         mov rbx, rsi
0x0000b11b      4889fd         mov rbp, rdi
0x0000b11e      4883ec08       sub rsp, 8
0x0000b122      48897318       mov qword [rbx + 0x18], rsi
0x0000b126      488b5330       mov rdx, qword [rbx + 0x30]
0x0000b12a      488b7628       mov rsi, qword [rsi + 0x28]
0x0000b12e      e84dc1ffff     call sym.re_dfa_add_node
0x0000b133      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000b137      4889c2         mov rdx, rax
0x0000b13a      48894338       mov qword [rbx + 0x38], rax
0x0000b13e      7450           je 0xb190
0x0000b140      31c0           xor eax, eax
0x0000b142      807b300c       cmp byte [rbx + 0x30], 0xc
0x0000b146      7524           jne 0xb16c
0x0000b148      8b4b28         mov ecx, dword [rbx + 0x28]
0x0000b14b      48c1e204       shl rdx, 4
0x0000b14f      48035500       add rdx, qword [rbp]
0x0000b153      81e1ff030000   and ecx, 0x3ff
0x0000b159      c1e108         shl ecx, 8
0x0000b15c      89ce           mov esi, ecx
0x0000b15e      8b4a08         mov ecx, dword [rdx + 8]
0x0000b161      81e1ff00fcff   and ecx, 0xfffc00ff
0x0000b167      09f1           or ecx, esi
0x0000b169      894a08         mov dword [rdx + 8], ecx
0x0000b16c      4883c408       add rsp, 8
0x0000b170      5b             pop rbx
0x0000b171      5d             pop rbp
0x0000b172      c3             ret
0x0000b173      0f1f440000     nop dword [rax + rax]
0x0000b178      488b4608       mov rax, qword [rsi + 8]
0x0000b17c      488b5018       mov rdx, qword [rax + 0x18]
0x0000b180      488b4038       mov rax, qword [rax + 0x38]
0x0000b184      48895618       mov qword [rsi + 0x18], rdx
0x0000b188      48894638       mov qword [rsi + 0x38], rax
0x0000b18c      31c0           xor eax, eax
0x0000b18e      c3             ret
0x0000b18f      90             nop
0x0000b190      b80c000000     mov eax, 0xc
0x0000b195      ebd5           jmp 0xb16c
0x0000b197      660f1f840000.  nop word [rax + rax]
;-- free_fail_stack_return.part.24:
0x0000b1a0      4154           push r12
0x0000b1a2      55             push rbp
0x0000b1a3      4889fd         mov rbp, rdi
0x0000b1a6      53             push rbx
0x0000b1a7      48833f00       cmp qword [rdi], 0
0x0000b1ab      7e35           jle 0xb1e2
0x0000b1ad      31db           xor ebx, ebx
0x0000b1af      4531e4         xor r12d, r12d
0x0000b1b2      660f1f440000   nop word [rax + rax]
0x0000b1b8      488b4510       mov rax, qword [rbp + 0x10]
0x0000b1bc      4983c401       add r12, 1
0x0000b1c0      488b7c1828     mov rdi, qword [rax + rbx + 0x28]
0x0000b1c5      e80667ffff     call sym.imp.free
0x0000b1ca      488b4510       mov rax, qword [rbp + 0x10]
0x0000b1ce      488b7c1810     mov rdi, qword [rax + rbx + 0x10]
0x0000b1d3      4883c330       add rbx, 0x30
0x0000b1d7      e8f466ffff     call sym.imp.free
0x0000b1dc      4c3b6500       cmp r12, qword [rbp]
0x0000b1e0      7cd6           jl 0xb1b8
0x0000b1e2      5b             pop rbx
0x0000b1e3      488b7d10       mov rdi, qword [rbp + 0x10]
0x0000b1e7      5d             pop rbp
0x0000b1e8      415c           pop r12
0x0000b1ea      e9e166ffff     jmp sym.imp.free
0x0000b1ef      90             nop
;-- pop_fail_stack.isra.25:
0x0000b1f0      4154           push r12
0x0000b1f2      55             push rbp
0x0000b1f3      53             push rbx
0x0000b1f4      488b07         mov rax, qword [rdi]
0x0000b1f7      4883e801       sub rax, 1
0x0000b1fb      4885c0         test rax, rax
0x0000b1fe      488907         mov qword [rdi], rax
0x0000b201      7862           js 0xb265
0x0000b203      488d1c40       lea rbx, [rax + rax*2]
0x0000b207      488b06         mov rax, qword [rsi]
0x0000b20a      4989f4         mov r12, rsi
0x0000b20d      48c1e104       shl rcx, 4
0x0000b211      4c89cd         mov rbp, r9
0x0000b214      4c89c7         mov rdi, r8
0x0000b217      48c1e304       shl rbx, 4
0x0000b21b      4801d8         add rax, rbx
0x0000b21e      488b30         mov rsi, qword [rax]
0x0000b221      488932         mov qword [rdx], rsi
0x0000b224      488b7010       mov rsi, qword [rax + 0x10]
0x0000b228      4889ca         mov rdx, rcx
0x0000b22b      e8a068ffff     call sym.imp.memcpy
0x0000b230      488b7d10       mov rdi, qword [rbp + 0x10]
0x0000b234      e89766ffff     call sym.imp.free
0x0000b239      498b0424       mov rax, qword [r12]
0x0000b23d      488b7c1810     mov rdi, qword [rax + rbx + 0x10]
0x0000b242      e88966ffff     call sym.imp.free
0x0000b247      49031c24       add rbx, qword [r12]
0x0000b24b      f30f6f4318     movdqu xmm0, xmmword [rbx + 0x18]
0x0000b250      0f294500       movaps xmmword [rbp], xmm0
0x0000b254      488b4328       mov rax, qword [rbx + 0x28]
0x0000b258      48894510       mov qword [rbp + 0x10], rax
0x0000b25c      488b4308       mov rax, qword [rbx + 8]
0x0000b260      5b             pop rbx
0x0000b261      5d             pop rbp
0x0000b262      415c           pop r12
0x0000b264      c3             ret
0x0000b265      488d0d94ab00.  lea rcx, obj.__PRETTY_FUNCTION__.8040   ; 0x15e00 ; "pop_fail_stack"
0x0000b26c      488d35bda500.  lea rsi, str..._coreutils_8.31_lib_regexec.c ; 0x15830 ; "../coreutils-8.31/lib/regexec.c"
0x0000b273      488d3d1ea600.  lea rdi, str.num____0                   ; 0x15898 ; "num >= 0"
0x0000b27a      ba55050000     mov edx, 0x555
0x0000b27f      e8cc67ffff     call sym.imp.__assert_fail
0x0000b284      6690           nop
0x0000b286      662e0f1f8400.  nop word cs:[rax + rax]
;-- build_equiv_class.isra.27:
;-- build_collating_symbol.isra.28:
0x0000b290      55             push rbp
0x0000b291      53             push rbx
0x0000b292      4889fd         mov rbp, rdi
0x0000b295      4889f7         mov rdi, rsi
0x0000b298      4889f3         mov rbx, rsi
0x0000b29b      4883ec08       sub rsp, 8
0x0000b29f      e82c67ffff     call sym.imp.strlen
0x0000b2a4      4883f801       cmp rax, 1
0x0000b2a8      7526           jne 0xb2d0
0x0000b2aa      0fb60b         movzx ecx, byte [rbx]
0x0000b2ad      4889ca         mov rdx, rcx
0x0000b2b0      83e13f         and ecx, 0x3f
0x0000b2b3      48c1ea03       shr rdx, 3
0x0000b2b7      48d3e0         shl rax, cl
0x0000b2ba      83e218         and edx, 0x18
0x0000b2bd      4809441500     or qword [rbp + rdx], rax
0x0000b2c2      4883c408       add rsp, 8
0x0000b2c6      31c0           xor eax, eax
0x0000b2c8      5b             pop rbx
0x0000b2c9      5d             pop rbp
0x0000b2ca      c3             ret
0x0000b2cb      0f1f440000     nop dword [rax + rax]
0x0000b2d0      4883c408       add rsp, 8
0x0000b2d4      b803000000     mov eax, 3
0x0000b2d9      5b             pop rbx
0x0000b2da      5d             pop rbp
0x0000b2db      c3             ret
0x0000b2dc      0f1f4000       nop dword [rax]
;-- build_charclass.isra.29:
0x0000b2e0      4156           push r14
0x0000b2e2      4155           push r13
0x0000b2e4      4989cd         mov r13, rcx
0x0000b2e7      4154           push r12
0x0000b2e9      55             push rbp
0x0000b2ea      4d89cc         mov r12, r9
0x0000b2ed      53             push rbx
0x0000b2ee      4889fd         mov rbp, rdi
0x0000b2f1      4889f3         mov rbx, rsi
0x0000b2f4      4883ec10       sub rsp, 0x10
0x0000b2f8      48f744244000.  test qword [rsp + 0x40], 0x400000
0x0000b301      7425           je 0xb328
0x0000b303      488d3d9da500.  lea rdi, str.upper                      ; 0x158a7 ; "upper"
0x0000b30a      b906000000     mov ecx, 6
0x0000b30f      4c89ce         mov rsi, r9
0x0000b312      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000b314      0f97c0         seta al
0x0000b317      1c00           sbb al, 0
0x0000b319      84c0           test al, al
0x0000b31b      0f85f5000000   jne 0xb416
0x0000b321      4c8d2579a500.  lea r12, str.alpha                      ; 0x158a1 ; "alpha"
0x0000b328      498b4d00       mov rcx, qword [r13]
0x0000b32c      493908         cmp qword [r8], rcx
0x0000b32f      488b02         mov rax, qword [rdx]
0x0000b332      0f8411010000   je 0xb449
0x0000b338      488d5101       lea rdx, [rcx + 1]
0x0000b33c      4c89e7         mov rdi, r12
0x0000b33f      49895500       mov qword [r13], rdx
0x0000b343      4c8d2cc8       lea r13, [rax + rcx*8]
0x0000b347      e84467ffff     call sym.imp.wctype
0x0000b34c      488d3d60a500.  lea rdi, str.alnum                      ; 0x158b3 ; "alnum"
0x0000b353      49894500       mov qword [r13], rax
0x0000b357      b906000000     mov ecx, 6
0x0000b35c      4c89e6         mov rsi, r12
0x0000b35f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000b361      0f97c0         seta al
0x0000b364      1c00           sbb al, 0
0x0000b366      84c0           test al, al
0x0000b368      746e           je 0xb3d8
0x0000b36a      488d3d48a500.  lea rdi, str.cntrl                      ; 0x158b9 ; "cntrl"
0x0000b371      b906000000     mov ecx, 6
0x0000b376      4c89e6         mov rsi, r12
0x0000b379      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000b37b      0f97c0         seta al
0x0000b37e      1c00           sbb al, 0
0x0000b380      84c0           test al, al
0x0000b382      0f8500010000   jne 0xb488
0x0000b388      e8e368ffff     call sym.imp.__ctype_b_loc
0x0000b38d      31c9           xor ecx, ecx
0x0000b38f      4885ed         test rbp, rbp
0x0000b392      488b10         mov rdx, qword [rax]
0x0000b395      bf01000000     mov edi, 1
0x0000b39a      0f85ba020000   jne 0xb65a
0x0000b3a0      f6044a02       test byte [rdx + rcx*2], 2
0x0000b3a4      7411           je 0xb3b7
0x0000b3a6      4889c8         mov rax, rcx
0x0000b3a9      4889fe         mov rsi, rdi
0x0000b3ac      48c1f806       sar rax, 6
0x0000b3b0      48d3e6         shl rsi, cl
0x0000b3b3      480934c3       or qword [rbx + rax*8], rsi
0x0000b3b7      4883c101       add rcx, 1
0x0000b3bb      4881f9000100.  cmp rcx, 0x100
0x0000b3c2      75dc           jne 0xb3a0
0x0000b3c4      31c0           xor eax, eax
0x0000b3c6      4883c410       add rsp, 0x10
0x0000b3ca      5b             pop rbx
0x0000b3cb      5d             pop rbp
0x0000b3cc      415c           pop r12
0x0000b3ce      415d           pop r13
0x0000b3d0      415e           pop r14
0x0000b3d2      c3             ret
0x0000b3d3      0f1f440000     nop dword [rax + rax]
0x0000b3d8      e89368ffff     call sym.imp.__ctype_b_loc
0x0000b3dd      31c9           xor ecx, ecx
0x0000b3df      4885ed         test rbp, rbp
0x0000b3e2      488b10         mov rdx, qword [rax]
0x0000b3e5      bf01000000     mov edi, 1
0x0000b3ea      0f85ea010000   jne 0xb5da
0x0000b3f0      f6044a08       test byte [rdx + rcx*2], 8
0x0000b3f4      7411           je 0xb407
0x0000b3f6      4889c8         mov rax, rcx
0x0000b3f9      4889fe         mov rsi, rdi
0x0000b3fc      48c1f806       sar rax, 6
0x0000b400      48d3e6         shl rsi, cl
0x0000b403      480934c3       or qword [rbx + rax*8], rsi
0x0000b407      4883c101       add rcx, 1
0x0000b40b      4881f9000100.  cmp rcx, 0x100
0x0000b412      75dc           jne 0xb3f0
0x0000b414      ebae           jmp 0xb3c4
0x0000b416      488d3d90a400.  lea rdi, str.lower                      ; 0x158ad ; "lower"
0x0000b41d      b906000000     mov ecx, 6
0x0000b422      4c89ce         mov rsi, r9
0x0000b425      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000b427      498b4d00       mov rcx, qword [r13]
0x0000b42b      0f97c0         seta al
0x0000b42e      1c00           sbb al, 0
0x0000b430      84c0           test al, al
0x0000b432      488d0568a400.  lea rax, str.alpha                      ; 0x158a1 ; "alpha"
0x0000b439      4c0f44e0       cmove r12, rax
0x0000b43d      493908         cmp qword [r8], rcx
0x0000b440      488b02         mov rax, qword [rdx]
0x0000b443      0f85effeffff   jne 0xb338
0x0000b449      4c8d740901     lea r14, [rcx + rcx + 1]
0x0000b44e      4889c7         mov rdi, rax
0x0000b451      4c89442408     mov qword [rsp + 8], r8
0x0000b456      48891424       mov qword [rsp], rdx
0x0000b45a      4a8d34f50000.  lea rsi, [r14*8]
0x0000b462      e8f966ffff     call sym.imp.realloc
0x0000b467      4885c0         test rax, rax
0x0000b46a      0f8418030000   je 0xb788
0x0000b470      488b1424       mov rdx, qword [rsp]
0x0000b474      4c8b442408     mov r8, qword [rsp + 8]
0x0000b479      488902         mov qword [rdx], rax
0x0000b47c      4d8930         mov qword [r8], r14
0x0000b47f      498b4d00       mov rcx, qword [r13]
0x0000b483      e9b0feffff     jmp 0xb338
0x0000b488      488d3d1ea400.  lea rdi, str.lower                      ; 0x158ad ; "lower"
0x0000b48f      b906000000     mov ecx, 6
0x0000b494      4c89e6         mov rsi, r12
0x0000b497      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000b499      0f97c0         seta al
0x0000b49c      1c00           sbb al, 0
0x0000b49e      84c0           test al, al
0x0000b4a0      7468           je 0xb50a
0x0000b4a2      488d3d16a400.  lea rdi, str.space                      ; 0x158bf ; "space"
0x0000b4a9      b906000000     mov ecx, 6
0x0000b4ae      4c89e6         mov rsi, r12
0x0000b4b1      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000b4b3      0f97c0         seta al
0x0000b4b6      1c00           sbb al, 0
0x0000b4b8      84c0           test al, al
0x0000b4ba      0f8592000000   jne 0xb552
0x0000b4c0      e8ab67ffff     call sym.imp.__ctype_b_loc
0x0000b4c5      31c9           xor ecx, ecx
0x0000b4c7      4885ed         test rbp, rbp
0x0000b4ca      488b10         mov rdx, qword [rax]
0x0000b4cd      bf01000000     mov edi, 1
0x0000b4d2      0f8556030000   jne 0xb82e
0x0000b4d8      0f1f84000000.  nop dword [rax + rax]
0x0000b4e0      f6444a0120     test byte [rdx + rcx*2 + 1], 0x20
0x0000b4e5      7411           je 0xb4f8
0x0000b4e7      4889c8         mov rax, rcx
0x0000b4ea      4889fe         mov rsi, rdi
0x0000b4ed      48c1f806       sar rax, 6
0x0000b4f1      48d3e6         shl rsi, cl
0x0000b4f4      480934c3       or qword [rbx + rax*8], rsi
0x0000b4f8      4883c101       add rcx, 1
0x0000b4fc      4881f9000100.  cmp rcx, 0x100
0x0000b503      75db           jne 0xb4e0
0x0000b505      e9bafeffff     jmp 0xb3c4
0x0000b50a      e86167ffff     call sym.imp.__ctype_b_loc
0x0000b50f      31c9           xor ecx, ecx
0x0000b511      4885ed         test rbp, rbp
0x0000b514      488b10         mov rdx, qword [rax]
0x0000b517      bf01000000     mov edi, 1
0x0000b51c      0f85d0010000   jne 0xb6f2
0x0000b522      660f1f440000   nop word [rax + rax]
0x0000b528      f6444a0102     test byte [rdx + rcx*2 + 1], 2
0x0000b52d      7411           je 0xb540
0x0000b52f      4889c8         mov rax, rcx
0x0000b532      4889fe         mov rsi, rdi
0x0000b535      48c1f806       sar rax, 6
0x0000b539      48d3e6         shl rsi, cl
0x0000b53c      480934c3       or qword [rbx + rax*8], rsi
0x0000b540      4883c101       add rcx, 1
0x0000b544      4881f9000100.  cmp rcx, 0x100
0x0000b54b      75db           jne 0xb528
0x0000b54d      e972feffff     jmp 0xb3c4
0x0000b552      488d3d48a300.  lea rdi, str.alpha                      ; 0x158a1 ; "alpha"
0x0000b559      b906000000     mov ecx, 6
0x0000b55e      4c89e6         mov rsi, r12
0x0000b561      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000b563      0f97c0         seta al
0x0000b566      1c00           sbb al, 0
0x0000b568      84c0           test al, al
0x0000b56a      0f84a3000000   je 0xb613
0x0000b570      488d3d67a300.  lea rdi, [0x000158de]                   ; "digit"
0x0000b577      b906000000     mov ecx, 6
0x0000b57c      4c89e6         mov rsi, r12
0x0000b57f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000b581      0f97c0         seta al
0x0000b584      1c00           sbb al, 0
0x0000b586      84c0           test al, al
0x0000b588      0f8505010000   jne 0xb693
0x0000b58e      e8dd66ffff     call sym.imp.__ctype_b_loc
0x0000b593      31c9           xor ecx, ecx
0x0000b595      4885ed         test rbp, rbp
0x0000b598      488b10         mov rdx, qword [rax]
0x0000b59b      bf01000000     mov edi, 1
0x0000b5a0      0f85a4040000   jne 0xba4a
0x0000b5a6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000b5b0      f6444a0108     test byte [rdx + rcx*2 + 1], 8
0x0000b5b5      7411           je 0xb5c8
0x0000b5b7      4889c8         mov rax, rcx
0x0000b5ba      4889fe         mov rsi, rdi
0x0000b5bd      48c1f806       sar rax, 6
0x0000b5c1      48d3e6         shl rsi, cl
0x0000b5c4      480934c3       or qword [rbx + rax*8], rsi
0x0000b5c8      4883c101       add rcx, 1
0x0000b5cc      4881f9000100.  cmp rcx, 0x100
0x0000b5d3      75db           jne 0xb5b0
0x0000b5d5      e9eafdffff     jmp 0xb3c4
0x0000b5da      31c0           xor eax, eax
0x0000b5dc      0f1f4000       nop dword [rax]
0x0000b5e0      f6044208       test byte [rdx + rax*2], 8
0x0000b5e4      741c           je 0xb602
0x0000b5e6      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000b5eb      4989fa         mov r10, rdi
0x0000b5ee      4889ce         mov rsi, rcx
0x0000b5f1      83e13f         and ecx, 0x3f
0x0000b5f4      48c1ee03       shr rsi, 3
0x0000b5f8      49d3e2         shl r10, cl
0x0000b5fb      83e618         and esi, 0x18
0x0000b5fe      4c091433       or qword [rbx + rsi], r10
0x0000b602      4883c001       add rax, 1
0x0000b606      483d00010000   cmp rax, 0x100
0x0000b60c      75d2           jne 0xb5e0
0x0000b60e      e9b1fdffff     jmp 0xb3c4
0x0000b613      e85866ffff     call sym.imp.__ctype_b_loc
0x0000b618      31c9           xor ecx, ecx
0x0000b61a      4885ed         test rbp, rbp
0x0000b61d      488b10         mov rdx, qword [rax]
0x0000b620      bf01000000     mov edi, 1
0x0000b625      0f85cd010000   jne 0xb7f8
0x0000b62b      0f1f440000     nop dword [rax + rax]
0x0000b630      f6444a0104     test byte [rdx + rcx*2 + 1], 4
0x0000b635      7411           je 0xb648
0x0000b637      4889c8         mov rax, rcx
0x0000b63a      4889fe         mov rsi, rdi
0x0000b63d      48c1f806       sar rax, 6
0x0000b641      48d3e6         shl rsi, cl
0x0000b644      480934c3       or qword [rbx + rax*8], rsi
0x0000b648      4883c101       add rcx, 1
0x0000b64c      4881f9000100.  cmp rcx, 0x100
0x0000b653      75db           jne 0xb630
0x0000b655      e96afdffff     jmp 0xb3c4
0x0000b65a      31c0           xor eax, eax
0x0000b65c      0f1f4000       nop dword [rax]
0x0000b660      f6044202       test byte [rdx + rax*2], 2
0x0000b664      741c           je 0xb682
0x0000b666      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000b66b      4989fb         mov r11, rdi
0x0000b66e      4889ce         mov rsi, rcx
0x0000b671      83e13f         and ecx, 0x3f
0x0000b674      48c1ee03       shr rsi, 3
0x0000b678      49d3e3         shl r11, cl
0x0000b67b      83e618         and esi, 0x18
0x0000b67e      4c091c33       or qword [rbx + rsi], r11
0x0000b682      4883c001       add rax, 1
0x0000b686      483d00010000   cmp rax, 0x100
0x0000b68c      75d2           jne 0xb660
0x0000b68e      e931fdffff     jmp 0xb3c4
0x0000b693      488d3d2ba200.  lea rdi, str.print                      ; 0x158c5 ; "print"
0x0000b69a      b906000000     mov ecx, 6
0x0000b69f      4c89e6         mov rsi, r12
0x0000b6a2      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000b6a4      0f97c0         seta al
0x0000b6a7      1c00           sbb al, 0
0x0000b6a9      84c0           test al, al
0x0000b6ab      757f           jne 0xb72c
0x0000b6ad      e8be65ffff     call sym.imp.__ctype_b_loc
0x0000b6b2      31c9           xor ecx, ecx
0x0000b6b4      4885ed         test rbp, rbp
0x0000b6b7      488b10         mov rdx, qword [rax]
0x0000b6ba      bf01000000     mov edi, 1
0x0000b6bf      0f85f2030000   jne 0xbab7
0x0000b6c5      0f1f00         nop dword [rax]
0x0000b6c8      f6444a0140     test byte [rdx + rcx*2 + 1], 0x40
0x0000b6cd      7411           je 0xb6e0
0x0000b6cf      4889c8         mov rax, rcx
0x0000b6d2      4889fe         mov rsi, rdi
0x0000b6d5      48c1f806       sar rax, 6
0x0000b6d9      48d3e6         shl rsi, cl
0x0000b6dc      480934c3       or qword [rbx + rax*8], rsi
0x0000b6e0      4883c101       add rcx, 1
0x0000b6e4      4881f9000100.  cmp rcx, 0x100
0x0000b6eb      75db           jne 0xb6c8
0x0000b6ed      e9d2fcffff     jmp 0xb3c4
0x0000b6f2      31c0           xor eax, eax
0x0000b6f4      0f1f4000       nop dword [rax]
0x0000b6f8      f644420102     test byte [rdx + rax*2 + 1], 2
0x0000b6fd      741c           je 0xb71b
0x0000b6ff      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000b704      4989fe         mov r14, rdi
0x0000b707      4889ce         mov rsi, rcx
0x0000b70a      83e13f         and ecx, 0x3f
0x0000b70d      48c1ee03       shr rsi, 3
0x0000b711      49d3e6         shl r14, cl
0x0000b714      83e618         and esi, 0x18
0x0000b717      4c093433       or qword [rbx + rsi], r14
0x0000b71b      4883c001       add rax, 1
0x0000b71f      483d00010000   cmp rax, 0x100
0x0000b725      75d1           jne 0xb6f8
0x0000b727      e998fcffff     jmp 0xb3c4
0x0000b72c      488d3d74a100.  lea rdi, str.upper                      ; 0x158a7 ; "upper"
0x0000b733      b906000000     mov ecx, 6
0x0000b738      4c89e6         mov rsi, r12
0x0000b73b      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000b73d      0f97c0         seta al
0x0000b740      1c00           sbb al, 0
0x0000b742      84c0           test al, al
0x0000b744      754c           jne 0xb792
0x0000b746      e82565ffff     call sym.imp.__ctype_b_loc
0x0000b74b      31c9           xor ecx, ecx
0x0000b74d      4885ed         test rbp, rbp
0x0000b750      488b00         mov rax, qword [rax]
0x0000b753      bf01000000     mov edi, 1
0x0000b758      0f8522030000   jne 0xba80
0x0000b75e      f644480101     test byte [rax + rcx*2 + 1], 1
0x0000b763      7411           je 0xb776
0x0000b765      4889ca         mov rdx, rcx
0x0000b768      4889fe         mov rsi, rdi
0x0000b76b      48c1fa06       sar rdx, 6
0x0000b76f      48d3e6         shl rsi, cl
0x0000b772      480934d3       or qword [rbx + rdx*8], rsi
0x0000b776      4883c101       add rcx, 1
0x0000b77a      4881f9000100.  cmp rcx, 0x100
0x0000b781      75db           jne 0xb75e
0x0000b783      e93cfcffff     jmp 0xb3c4
0x0000b788      b80c000000     mov eax, 0xc
0x0000b78d      e934fcffff     jmp 0xb3c6
0x0000b792      488d3d32a100.  lea rdi, str.blank                      ; 0x158cb ; "blank"
0x0000b799      b906000000     mov ecx, 6
0x0000b79e      4c89e6         mov rsi, r12
0x0000b7a1      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000b7a3      0f97c0         seta al
0x0000b7a6      1c00           sbb al, 0
0x0000b7a8      84c0           test al, al
0x0000b7aa      0f85ee000000   jne 0xb89e
0x0000b7b0      e8bb64ffff     call sym.imp.__ctype_b_loc
0x0000b7b5      31c9           xor ecx, ecx
0x0000b7b7      4885ed         test rbp, rbp
0x0000b7ba      488b10         mov rdx, qword [rax]
0x0000b7bd      be01000000     mov esi, 1
0x0000b7c2      0f859c000000   jne 0xb864
0x0000b7c8      f6044a01       test byte [rdx + rcx*2], 1
0x0000b7cc      7411           je 0xb7df
0x0000b7ce      4889c8         mov rax, rcx
0x0000b7d1      4889f7         mov rdi, rsi
0x0000b7d4      48c1f806       sar rax, 6
0x0000b7d8      48d3e7         shl rdi, cl
0x0000b7db      48093cc3       or qword [rbx + rax*8], rdi
0x0000b7df      4883c101       add rcx, 1
0x0000b7e3      4881f9000100.  cmp rcx, 0x100
0x0000b7ea      75dc           jne 0xb7c8
0x0000b7ec      e9d3fbffff     jmp 0xb3c4
0x0000b7f1      0f1f80000000.  nop dword [rax]
0x0000b7f8      31c0           xor eax, eax
0x0000b7fa      f644420104     test byte [rdx + rax*2 + 1], 4
0x0000b7ff      741c           je 0xb81d
0x0000b801      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000b806      4989f9         mov r9, rdi
0x0000b809      4889ce         mov rsi, rcx
0x0000b80c      83e13f         and ecx, 0x3f
0x0000b80f      48c1ee03       shr rsi, 3
0x0000b813      49d3e1         shl r9, cl
0x0000b816      83e618         and esi, 0x18
0x0000b819      4c090c33       or qword [rbx + rsi], r9
0x0000b81d      4883c001       add rax, 1
0x0000b821      483d00010000   cmp rax, 0x100
0x0000b827      75d1           jne 0xb7fa
0x0000b829      e996fbffff     jmp 0xb3c4
0x0000b82e      31c0           xor eax, eax
0x0000b830      f644420120     test byte [rdx + rax*2 + 1], 0x20
0x0000b835      741c           je 0xb853
0x0000b837      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000b83c      4989f9         mov r9, rdi
0x0000b83f      4889ce         mov rsi, rcx
0x0000b842      83e13f         and ecx, 0x3f
0x0000b845      48c1ee03       shr rsi, 3
0x0000b849      49d3e1         shl r9, cl
0x0000b84c      83e618         and esi, 0x18
0x0000b84f      4c090c33       or qword [rbx + rsi], r9
0x0000b853      4883c001       add rax, 1
0x0000b857      483d00010000   cmp rax, 0x100
0x0000b85d      75d1           jne 0xb830
0x0000b85f      e960fbffff     jmp 0xb3c4
0x0000b864      31c0           xor eax, eax
0x0000b866      bf01000000     mov edi, 1
0x0000b86b      f6044201       test byte [rdx + rax*2], 1
0x0000b86f      741c           je 0xb88d
0x0000b871      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000b876      4989fe         mov r14, rdi
0x0000b879      4889ce         mov rsi, rcx
0x0000b87c      83e13f         and ecx, 0x3f
0x0000b87f      48c1ee03       shr rsi, 3
0x0000b883      49d3e6         shl r14, cl
0x0000b886      83e618         and esi, 0x18
0x0000b889      4c093433       or qword [rbx + rsi], r14
0x0000b88d      4883c001       add rax, 1
0x0000b891      483d00010000   cmp rax, 0x100
0x0000b897      75d2           jne 0xb86b
0x0000b899      e926fbffff     jmp 0xb3c4
0x0000b89e      488d352ca000.  lea rsi, str.graph                      ; 0x158d1 ; "graph"
0x0000b8a5      4c89e7         mov rdi, r12
0x0000b8a8      e81362ffff     call sym.imp.strcmp
0x0000b8ad      85c0           test eax, eax
0x0000b8af      7579           jne 0xb92a
0x0000b8b1      e8ba63ffff     call sym.imp.__ctype_b_loc
0x0000b8b6      31c9           xor ecx, ecx
0x0000b8b8      4885ed         test rbp, rbp
0x0000b8bb      488b30         mov rsi, qword [rax]
0x0000b8be      ba01000000     mov edx, 1
0x0000b8c3      752a           jne 0xb8ef
0x0000b8c5      66833c4e00     cmp word [rsi + rcx*2], 0
0x0000b8ca      7911           jns 0xb8dd
0x0000b8cc      4889c8         mov rax, rcx
0x0000b8cf      4889d7         mov rdi, rdx
0x0000b8d2      48c1f806       sar rax, 6
0x0000b8d6      48d3e7         shl rdi, cl
0x0000b8d9      48093cc3       or qword [rbx + rax*8], rdi
0x0000b8dd      4883c101       add rcx, 1
0x0000b8e1      4881f9000100.  cmp rcx, 0x100
0x0000b8e8      75db           jne 0xb8c5
0x0000b8ea      e9d5faffff     jmp 0xb3c4
0x0000b8ef      31c0           xor eax, eax
0x0000b8f1      bf01000000     mov edi, 1
0x0000b8f6      66833c4600     cmp word [rsi + rax*2], 0
0x0000b8fb      791c           jns 0xb919
0x0000b8fd      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000b902      4989f9         mov r9, rdi
0x0000b905      4889ca         mov rdx, rcx
0x0000b908      83e13f         and ecx, 0x3f
0x0000b90b      48c1ea03       shr rdx, 3
0x0000b90f      49d3e1         shl r9, cl
0x0000b912      83e218         and edx, 0x18
0x0000b915      4c090c13       or qword [rbx + rdx], r9
0x0000b919      4883c001       add rax, 1
0x0000b91d      483d00010000   cmp rax, 0x100
0x0000b923      75d1           jne 0xb8f6
0x0000b925      e99afaffff     jmp 0xb3c4
0x0000b92a      488d35a69f00.  lea rsi, str.punct                      ; 0x158d7 ; "punct"
0x0000b931      4c89e7         mov rdi, r12
0x0000b934      e88761ffff     call sym.imp.strcmp
0x0000b939      85c0           test eax, eax
0x0000b93b      7577           jne 0xb9b4
0x0000b93d      e82e63ffff     call sym.imp.__ctype_b_loc
0x0000b942      31c9           xor ecx, ecx
0x0000b944      4885ed         test rbp, rbp
0x0000b947      488b30         mov rsi, qword [rax]
0x0000b94a      ba01000000     mov edx, 1
0x0000b94f      7529           jne 0xb97a
0x0000b951      f6044e04       test byte [rsi + rcx*2], 4
0x0000b955      7411           je 0xb968
0x0000b957      4889c8         mov rax, rcx
0x0000b95a      4889d7         mov rdi, rdx
0x0000b95d      48c1f806       sar rax, 6
0x0000b961      48d3e7         shl rdi, cl
0x0000b964      48093cc3       or qword [rbx + rax*8], rdi
0x0000b968      4883c101       add rcx, 1
0x0000b96c      4881f9000100.  cmp rcx, 0x100
0x0000b973      75dc           jne 0xb951
0x0000b975      e94afaffff     jmp 0xb3c4
0x0000b97a      31c0           xor eax, eax
0x0000b97c      bf01000000     mov edi, 1
0x0000b981      f6044604       test byte [rsi + rax*2], 4
0x0000b985      741c           je 0xb9a3
0x0000b987      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000b98c      4989fe         mov r14, rdi
0x0000b98f      4889ca         mov rdx, rcx
0x0000b992      83e13f         and ecx, 0x3f
0x0000b995      48c1ea03       shr rdx, 3
0x0000b999      49d3e6         shl r14, cl
0x0000b99c      83e218         and edx, 0x18
0x0000b99f      4c093413       or qword [rbx + rdx], r14
0x0000b9a3      4883c001       add rax, 1
0x0000b9a7      483d00010000   cmp rax, 0x100
0x0000b9ad      75d2           jne 0xb981
0x0000b9af      e910faffff     jmp 0xb3c4
0x0000b9b4      488d35229f00.  lea rsi, str.xdigit                     ; 0x158dd ; "xdigit"
0x0000b9bb      4c89e7         mov rdi, r12
0x0000b9be      e8fd60ffff     call sym.imp.strcmp
0x0000b9c3      85c0           test eax, eax
0x0000b9c5      7579           jne 0xba40
0x0000b9c7      e8a462ffff     call sym.imp.__ctype_b_loc
0x0000b9cc      31c9           xor ecx, ecx
0x0000b9ce      4885ed         test rbp, rbp
0x0000b9d1      488b30         mov rsi, qword [rax]
0x0000b9d4      ba01000000     mov edx, 1
0x0000b9d9      752a           jne 0xba05
0x0000b9db      f6444e0110     test byte [rsi + rcx*2 + 1], 0x10
0x0000b9e0      7411           je 0xb9f3
0x0000b9e2      4889c8         mov rax, rcx
0x0000b9e5      4889d7         mov rdi, rdx
0x0000b9e8      48c1f806       sar rax, 6
0x0000b9ec      48d3e7         shl rdi, cl
0x0000b9ef      48093cc3       or qword [rbx + rax*8], rdi
0x0000b9f3      4883c101       add rcx, 1
0x0000b9f7      4881f9000100.  cmp rcx, 0x100
0x0000b9fe      75db           jne 0xb9db
0x0000ba00      e9bff9ffff     jmp 0xb3c4
0x0000ba05      31c0           xor eax, eax
0x0000ba07      bf01000000     mov edi, 1
0x0000ba0c      f644460110     test byte [rsi + rax*2 + 1], 0x10
0x0000ba11      741c           je 0xba2f
0x0000ba13      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000ba18      4989f9         mov r9, rdi
0x0000ba1b      4889ca         mov rdx, rcx
0x0000ba1e      83e13f         and ecx, 0x3f
0x0000ba21      48c1ea03       shr rdx, 3
0x0000ba25      49d3e1         shl r9, cl
0x0000ba28      83e218         and edx, 0x18
0x0000ba2b      4c090c13       or qword [rbx + rdx], r9
0x0000ba2f      4883c001       add rax, 1
0x0000ba33      483d00010000   cmp rax, 0x100
0x0000ba39      75d1           jne 0xba0c
0x0000ba3b      e984f9ffff     jmp 0xb3c4
0x0000ba40      b804000000     mov eax, 4
0x0000ba45      e97cf9ffff     jmp 0xb3c6
0x0000ba4a      31c0           xor eax, eax
0x0000ba4c      f644420108     test byte [rdx + rax*2 + 1], 8
0x0000ba51      741c           je 0xba6f
0x0000ba53      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000ba58      4989fe         mov r14, rdi
0x0000ba5b      4889ce         mov rsi, rcx
0x0000ba5e      83e13f         and ecx, 0x3f
0x0000ba61      48c1ee03       shr rsi, 3
0x0000ba65      49d3e6         shl r14, cl
0x0000ba68      83e618         and esi, 0x18
0x0000ba6b      4c093433       or qword [rbx + rsi], r14
0x0000ba6f      4883c001       add rax, 1
0x0000ba73      483d00010000   cmp rax, 0x100
0x0000ba79      75d1           jne 0xba4c
0x0000ba7b      e944f9ffff     jmp 0xb3c4
0x0000ba80      31d2           xor edx, edx
0x0000ba82      f644500101     test byte [rax + rdx*2 + 1], 1
0x0000ba87      741c           je 0xbaa5
0x0000ba89      0fb64c1500     movzx ecx, byte [rbp + rdx]
0x0000ba8e      4989f9         mov r9, rdi
0x0000ba91      4889ce         mov rsi, rcx
0x0000ba94      83e13f         and ecx, 0x3f
0x0000ba97      48c1ee03       shr rsi, 3
0x0000ba9b      49d3e1         shl r9, cl
0x0000ba9e      83e618         and esi, 0x18
0x0000baa1      4c090c33       or qword [rbx + rsi], r9
0x0000baa5      4883c201       add rdx, 1
0x0000baa9      4881fa000100.  cmp rdx, 0x100
0x0000bab0      75d0           jne 0xba82
0x0000bab2      e90df9ffff     jmp 0xb3c4
0x0000bab7      31c0           xor eax, eax
0x0000bab9      f644420140     test byte [rdx + rax*2 + 1], 0x40
0x0000babe      741c           je 0xbadc
0x0000bac0      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000bac5      4989fe         mov r14, rdi
0x0000bac8      4889ce         mov rsi, rcx
0x0000bacb      83e13f         and ecx, 0x3f
0x0000bace      48c1ee03       shr rsi, 3
0x0000bad2      49d3e6         shl r14, cl
0x0000bad5      83e618         and esi, 0x18
0x0000bad8      4c093433       or qword [rbx + rsi], r14
0x0000badc      4883c001       add rax, 1
0x0000bae0      483d00010000   cmp rax, 0x100
0x0000bae6      75d1           jne 0xbab9
0x0000bae8      e9d7f8ffff     jmp 0xb3c4
0x0000baed      0f1f00         nop dword [rax]
;-- build_charclass_op:
0x0000baf0      4157           push r15
0x0000baf2      4156           push r14
0x0000baf4      4989d6         mov r14, rdx
0x0000baf7      4155           push r13
0x0000baf9      4154           push r12
0x0000bafb      4989cd         mov r13, rcx
0x0000bafe      55             push rbp
0x0000baff      53             push rbx
0x0000bb00      4889fd         mov rbp, rdi
0x0000bb03      bf20000000     mov edi, 0x20                           ; "@"
0x0000bb08      4589c4         mov r12d, r8d
0x0000bb0b      4883ec58       sub rsp, 0x58
0x0000bb0f      48893424       mov qword [rsp], rsi
0x0000bb13      be01000000     mov esi, 1
0x0000bb18      4c894c2408     mov qword [rsp + 8], r9
0x0000bb1d      64488b042528.  mov rax, qword fs:[0x28]
0x0000bb26      4889442448     mov qword [rsp + 0x48], rax
0x0000bb2b      31c0           xor eax, eax
0x0000bb2d      48c744241800.  mov qword [rsp + 0x18], 0
0x0000bb36      e8755fffff     call sym.imp.calloc
0x0000bb3b      4885c0         test rax, rax
0x0000bb3e      0f84bc010000   je 0xbd00
0x0000bb44      be01000000     mov esi, 1
0x0000bb49      bf50000000     mov edi, 0x50                           ; 'P'
0x0000bb4e      4889c3         mov rbx, rax
0x0000bb51      e85a5fffff     call sym.imp.calloc
0x0000bb56      4885c0         test rax, rax
0x0000bb59      4989c7         mov r15, rax
0x0000bb5c      0f84ae010000   je 0xbd10
0x0000bb62      0fb64020       movzx eax, byte [rax + 0x20]
0x0000bb66      4883ec08       sub rsp, 8
0x0000bb6a      4489e2         mov edx, r12d
0x0000bb6d      6a00           push 0
0x0000bb6f      83e201         and edx, 1
0x0000bb72      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000bb77      498d4f48       lea rcx, [r15 + 0x48]
0x0000bb7b      4d89f1         mov r9, r14
0x0000bb7e      4889de         mov rsi, rbx
0x0000bb81      4c8d442428     lea r8, [rsp + 0x28]
0x0000bb86      83e0fe         and eax, 0xfffffffe                     ; 4294967294
0x0000bb89      09d0           or eax, edx
0x0000bb8b      498d5718       lea rdx, [r15 + 0x18]
0x0000bb8f      41884720       mov byte [r15 + 0x20], al
0x0000bb93      e848f7ffff     call sym.build_charclass.isra.29
0x0000bb98      85c0           test eax, eax
0x0000bb9a      5a             pop rdx
0x0000bb9b      59             pop rcx
0x0000bb9c      0f858e010000   jne 0xbd30
0x0000bba2      490fbe4d00     movsx rcx, byte [r13]
0x0000bba7      be01000000     mov esi, 1
0x0000bbac      84c9           test cl, cl
0x0000bbae      743a           je 0xbbea
0x0000bbb0      488d413f       lea rax, [rcx + 0x3f]
0x0000bbb4      4885c9         test rcx, rcx
0x0000bbb7      4889ca         mov rdx, rcx
0x0000bbba      480f49c1       cmovns rax, rcx
0x0000bbbe      48c1fa3f       sar rdx, 0x3f
0x0000bbc2      4983c501       add r13, 1
0x0000bbc6      48c1ea3a       shr rdx, 0x3a
0x0000bbca      48c1f806       sar rax, 6
0x0000bbce      4801d1         add rcx, rdx
0x0000bbd1      83e13f         and ecx, 0x3f
0x0000bbd4      4829d1         sub rcx, rdx
0x0000bbd7      4889f2         mov rdx, rsi
0x0000bbda      48d3e2         shl rdx, cl
0x0000bbdd      490fbe4d00     movsx rcx, byte [r13]
0x0000bbe2      480914c3       or qword [rbx + rax*8], rdx
0x0000bbe6      84c9           test cl, cl
0x0000bbe8      75c6           jne 0xbbb0
0x0000bbea      4584e4         test r12b, r12b
0x0000bbed      7413           je 0xbc02
0x0000bbef      488d5320       lea rdx, [rbx + 0x20]
0x0000bbf3      4889d8         mov rax, rbx
0x0000bbf6      48f710         not qword [rax]
0x0000bbf9      4883c008       add rax, 8
0x0000bbfd      4839c2         cmp rdx, rax
0x0000bc00      75f4           jne 0xbbf6
0x0000bc02      83bdb4000000.  cmp dword [rbp + 0xb4], 1
0x0000bc09      7e18           jle 0xbc23
0x0000bc0b      488b4d78       mov rcx, qword [rbp + 0x78]
0x0000bc0f      31c0           xor eax, eax
0x0000bc11      488b1401       mov rdx, qword [rcx + rax]
0x0000bc15      48211403       and qword [rbx + rax], rdx
0x0000bc19      4883c008       add rax, 8
0x0000bc1d      4883f820       cmp rax, 0x20                           ; "@"
0x0000bc21      75ee           jne 0xbc11
0x0000bc23      4c8d4c2420     lea r9, [rsp + 0x20]
0x0000bc28      4c8d6570       lea r12, [rbp + 0x70]
0x0000bc2c      4c8dad800000.  lea r13, [rbp + 0x80]
0x0000bc33      31c9           xor ecx, ecx
0x0000bc35      31d2           xor edx, edx
0x0000bc37      c644242803     mov byte [rsp + 0x28], 3
0x0000bc3c      4d89c8         mov r8, r9
0x0000bc3f      4c89ee         mov rsi, r13
0x0000bc42      4c89e7         mov rdi, r12
0x0000bc45      48895c2420     mov qword [rsp + 0x20], rbx
0x0000bc4a      4c890c24       mov qword [rsp], r9
0x0000bc4e      e84dcbffff     call sym.create_token_tree.isra.16
0x0000bc53      4885c0         test rax, rax
0x0000bc56      4989c6         mov r14, rax
0x0000bc59      0f8491000000   je 0xbcf0
0x0000bc5f      83bdb4000000.  cmp dword [rbp + 0xb4], 1
0x0000bc66      7e78           jle 0xbce0
0x0000bc68      808db0000000.  or byte [rbp + 0xb0], 2
0x0000bc6f      4c8b0c24       mov r9, qword [rsp]
0x0000bc73      31c9           xor ecx, ecx
0x0000bc75      31d2           xor edx, edx
0x0000bc77      4c89ee         mov rsi, r13
0x0000bc7a      4c89e7         mov rdi, r12
0x0000bc7d      c644242806     mov byte [rsp + 0x28], 6
0x0000bc82      4c897c2420     mov qword [rsp + 0x20], r15
0x0000bc87      4d89c8         mov r8, r9
0x0000bc8a      e811cbffff     call sym.create_token_tree.isra.16
0x0000bc8f      4885c0         test rax, rax
0x0000bc92      745c           je 0xbcf0
0x0000bc94      4c8d442430     lea r8, [rsp + 0x30]
0x0000bc99      4c89f2         mov rdx, r14
0x0000bc9c      4889c1         mov rcx, rax
0x0000bc9f      4c89ee         mov rsi, r13
0x0000bca2      4c89e7         mov rdi, r12
0x0000bca5      c64424380a     mov byte [rsp + 0x38], 0xa
0x0000bcaa      e8f1caffff     call sym.create_token_tree.isra.16
0x0000bcaf      4989c6         mov r14, rax
0x0000bcb2      488b7c2448     mov rdi, qword [rsp + 0x48]
0x0000bcb7      6448333c2528.  xor rdi, qword fs:[0x28]
0x0000bcc0      4c89f0         mov rax, r14
0x0000bcc3      0f858c000000   jne 0xbd55
0x0000bcc9      4883c458       add rsp, 0x58
0x0000bccd      5b             pop rbx
0x0000bcce      5d             pop rbp
0x0000bccf      415c           pop r12
0x0000bcd1      415d           pop r13
0x0000bcd3      415e           pop r14
0x0000bcd5      415f           pop r15
0x0000bcd7      c3             ret
0x0000bcd8      0f1f84000000.  nop dword [rax + rax]
0x0000bce0      4c89ff         mov rdi, r15
0x0000bce3      e818b5ffff     call sym.free_charset
0x0000bce8      ebc8           jmp 0xbcb2
0x0000bcea      660f1f440000   nop word [rax + rax]
0x0000bcf0      4889df         mov rdi, rbx
0x0000bcf3      e8d85bffff     call sym.imp.free
0x0000bcf8      4c89ff         mov rdi, r15
0x0000bcfb      e800b5ffff     call sym.free_charset
0x0000bd00      488b442408     mov rax, qword [rsp + 8]
0x0000bd05      4531f6         xor r14d, r14d
0x0000bd08      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0000bd0e      eba2           jmp 0xbcb2
0x0000bd10      4889df         mov rdi, rbx
0x0000bd13      4531f6         xor r14d, r14d
0x0000bd16      e8b55bffff     call sym.imp.free
0x0000bd1b      488b442408     mov rax, qword [rsp + 8]
0x0000bd20      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0000bd26      eb8a           jmp 0xbcb2
0x0000bd28      0f1f84000000.  nop dword [rax + rax]
0x0000bd30      4889df         mov rdi, rbx
0x0000bd33      890424         mov dword [rsp], eax
0x0000bd36      4531f6         xor r14d, r14d
0x0000bd39      e8925bffff     call sym.imp.free
0x0000bd3e      4c89ff         mov rdi, r15
0x0000bd41      e8bab4ffff     call sym.free_charset
0x0000bd46      488b7c2408     mov rdi, qword [rsp + 8]
0x0000bd4b      8b0424         mov eax, dword [rsp]
0x0000bd4e      8907           mov dword [rdi], eax
0x0000bd50      e95dffffff     jmp 0xbcb2
0x0000bd55      e8865cffff     call sym.imp.__stack_chk_fail
0x0000bd5a      660f1f440000   nop word [rax + rax]
;-- re_compile_fastmap_iter.isra.30:
0x0000bd60      4157           push r15
0x0000bd62      4156           push r14
0x0000bd64      4889f8         mov rax, rdi
0x0000bd67      4155           push r13
0x0000bd69      4154           push r12
0x0000bd6b      55             push rbp
0x0000bd6c      53             push rbx
0x0000bd6d      31db           xor ebx, ebx
0x0000bd6f      4889cd         mov rbp, rcx
0x0000bd72      4881ec780100.  sub rsp, 0x178
0x0000bd79      488b00         mov rax, qword [rax]
0x0000bd7c      48897c2430     mov qword [rsp + 0x30], rdi
0x0000bd81      4889742420     mov qword [rsp + 0x20], rsi
0x0000bd86      64488b3c2528.  mov rdi, qword fs:[0x28]
0x0000bd8f      4889bc246801.  mov qword [rsp + 0x168], rdi
0x0000bd97      31ff           xor edi, edi
0x0000bd99      83b8b4000000.  cmp dword [rax + 0xb4], 1
0x0000bda0      4889542428     mov qword [rsp + 0x28], rdx
0x0000bda5      4889442408     mov qword [rsp + 8], rax
0x0000bdaa      7517           jne 0xbdc3
0x0000bdac      488b442430     mov rax, qword [rsp + 0x30]
0x0000bdb1      488b4018       mov rax, qword [rax + 0x18]
0x0000bdb5      4889c3         mov rbx, rax
0x0000bdb8      48890424       mov qword [rsp], rax
0x0000bdbc      48c1eb16       shr rbx, 0x16
0x0000bdc0      83e301         and ebx, 1
0x0000bdc3      488b442420     mov rax, qword [rsp + 0x20]
0x0000bdc8      48833800       cmp qword [rax], 0
0x0000bdcc      0f8e0b040000   jle 0xc1dd
0x0000bdd2      488d442458     lea rax, [rsp + 0x58]
0x0000bdd7      48c704240000.  mov qword [rsp], 0
0x0000bddf      4889442440     mov qword [rsp + 0x40], rax
0x0000bde4      488d442454     lea rax, [rsp + 0x54]
0x0000bde9      4889442448     mov qword [rsp + 0x48], rax
0x0000bdee      488d442460     lea rax, [rsp + 0x60]
0x0000bdf3      4889442438     mov qword [rsp + 0x38], rax
0x0000bdf8      eb44           jmp 0xbe3e
0x0000bdfa      660f1f440000   nop word [rax + rax]
0x0000be00      83f803         cmp eax, 3
0x0000be03      0f84ed020000   je 0xc0f6
0x0000be09      83f806         cmp eax, 6
0x0000be0c      0f8486010000   je 0xbf98
0x0000be12      83e2fd         and edx, 0xfffffffd                     ; 4294967293
0x0000be15      80fa05         cmp dl, 5
0x0000be18      0f84f6030000   je 0xc214
0x0000be1e      83f802         cmp eax, 2
0x0000be21      0f844d030000   je 0xc174
0x0000be27      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0000be2c      4883042401     add qword [rsp], 1
0x0000be31      488b0424       mov rax, qword [rsp]
0x0000be35      483b07         cmp rax, qword [rdi]
0x0000be38      0f8d9f030000   jge 0xc1dd
0x0000be3e      488b442428     mov rax, qword [rsp + 0x28]
0x0000be43      488b3c24       mov rdi, qword [rsp]
0x0000be47      488b00         mov rax, qword [rax]
0x0000be4a      4c8b24f8       mov r12, qword [rax + rdi*8]
0x0000be4e      488b442408     mov rax, qword [rsp + 8]
0x0000be53      488b08         mov rcx, qword [rax]
0x0000be56      4c89e0         mov rax, r12
0x0000be59      48c1e004       shl rax, 4
0x0000be5d      4889442410     mov qword [rsp + 0x10], rax
0x0000be62      488d3401       lea rsi, [rcx + rax]
0x0000be66      0fb64608       movzx eax, byte [rsi + 8]
0x0000be6a      83f801         cmp eax, 1
0x0000be6d      89c2           mov edx, eax
0x0000be6f      758f           jne 0xbe00
0x0000be71      440fb62e       movzx r13d, byte [rsi]
0x0000be75      85db           test ebx, ebx
0x0000be77      42c6442d0001   mov byte [rbp + r13], 1
0x0000be7d      7411           je 0xbe90
0x0000be7f      e8dc5dffff     call sym.imp.__ctype_tolower_loc
0x0000be84      488b00         mov rax, qword [rax]
0x0000be87      4a6304a8       movsxd rax, dword [rax + r13*4]
0x0000be8b      c644050001     mov byte [rbp + rax], 1
0x0000be90      488b442430     mov rax, qword [rsp + 0x30]
0x0000be95      f6401a40       test byte [rax + 0x1a], 0x40
0x0000be99      748c           je 0xbe27
0x0000be9b      488b742408     mov rsi, qword [rsp + 8]
0x0000bea0      83beb4000000.  cmp dword [rsi + 0xb4], 1
0x0000bea7      0f8e7affffff   jle 0xbe27
0x0000bead      488b06         mov rax, qword [rsi]
0x0000beb0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000beb5      0fb61438       movzx edx, byte [rax + rdi]
0x0000beb9      88542460       mov byte [rsp + 0x60], dl
0x0000bebd      498d542401     lea rdx, [r12 + 1]
0x0000bec2      48395610       cmp qword [rsi + 0x10], rdx
0x0000bec6      0f863a030000   jbe 0xc206
0x0000becc      488d4c3810     lea rcx, [rax + rdi + 0x10]
0x0000bed1      8b4108         mov eax, dword [rcx + 8]
0x0000bed4      25ff002000     and eax, 0x2000ff
0x0000bed9      3d01002000     cmp eax, 0x200001
0x0000bede      0f8522030000   jne 0xc206
0x0000bee4      4883c720       add rdi, 0x20                           ; "@"
0x0000bee8      4989fd         mov r13, rdi
0x0000beeb      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000bef0      488d4701       lea rax, [rdi + 1]
0x0000bef4      eb25           jmp 0xbf1b
0x0000bef6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000bf00      488b0e         mov rcx, qword [rsi]
0x0000bf03      4c01e9         add rcx, r13
0x0000bf06      4983c510       add r13, 0x10
0x0000bf0a      8b5108         mov edx, dword [rcx + 8]
0x0000bf0d      81e2ff002000   and edx, 0x2000ff
0x0000bf13      81fa01002000   cmp edx, 0x200001
0x0000bf19      7519           jne 0xbf34
0x0000bf1b      0fb611         movzx edx, byte [rcx]
0x0000bf1e      4883c001       add rax, 1
0x0000bf22      8850ff         mov byte [rax - 1], dl
0x0000bf25      4889c2         mov rdx, rax
0x0000bf28      4829fa         sub rdx, rdi
0x0000bf2b      4c01e2         add rdx, r12
0x0000bf2e      48395610       cmp qword [rsi + 0x10], rdx
0x0000bf32      77cc           ja 0xbf00
0x0000bf34      488b742438     mov rsi, qword [rsp + 0x38]
0x0000bf39      488b4c2440     mov rcx, qword [rsp + 0x40]
0x0000bf3e      488b7c2448     mov rdi, qword [rsp + 0x48]
0x0000bf43      4829f0         sub rax, rsi
0x0000bf46      48c701000000.  mov qword [rcx], 0
0x0000bf4d      4989c4         mov r12, rax
0x0000bf50      4889c2         mov rdx, rax
0x0000bf53      e8e89fffff     call sym.rpl_mbrtowc
0x0000bf58      4939c4         cmp r12, rax
0x0000bf5b      0f85c6feffff   jne 0xbe27
0x0000bf61      8b7c2454       mov edi, dword [rsp + 0x54]
0x0000bf65      e8765cffff     call sym.imp.towlower
0x0000bf6a      488b542440     mov rdx, qword [rsp + 0x40]
0x0000bf6f      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000bf74      89c6           mov esi, eax
0x0000bf76      e8955bffff     call sym.imp.wcrtomb
0x0000bf7b      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000bf7f      0f84a2feffff   je 0xbe27
0x0000bf85      0fb6442460     movzx eax, byte [rsp + 0x60]
0x0000bf8a      c644050001     mov byte [rbp + rax], 1
0x0000bf8f      e993feffff     jmp 0xbe27
0x0000bf94      0f1f4000       nop dword [rax]
0x0000bf98      488b442408     mov rax, qword [rsp + 8]
0x0000bf9d      4c8b26         mov r12, qword [rsi]
0x0000bfa0      83b8b4000000.  cmp dword [rax + 0xb4], 1
0x0000bfa7      7e24           jle 0xbfcd
0x0000bfa9      49837c244800   cmp qword [r12 + 0x48], 0
0x0000bfaf      0f85fa000000   jne 0xc0af
0x0000bfb5      41f644242001   test byte [r12 + 0x20], 1
0x0000bfbb      0f85ee000000   jne 0xc0af
0x0000bfc1      49837c244000   cmp qword [r12 + 0x40], 0
0x0000bfc7      0f85e2000000   jne 0xc0af
0x0000bfcd      4531ed         xor r13d, r13d
0x0000bfd0      49837c242800   cmp qword [r12 + 0x28], 0
0x0000bfd6      0f8e4bfeffff   jle 0xbe27
0x0000bfdc      4d89e7         mov r15, r12
0x0000bfdf      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000bfe4      4989ec         mov r12, rbp
0x0000bfe7      4c89ed         mov rbp, r13
0x0000bfea      4189dd         mov r13d, ebx
0x0000bfed      eb0e           jmp 0xbffd
0x0000bfef      4883c501       add rbp, 1
0x0000bff3      493b6f28       cmp rbp, qword [r15 + 0x28]
0x0000bff7      0f8da7000000   jge 0xc0a4
0x0000bffd      49c706000000.  mov qword [r14], 0
0x0000c004      498b07         mov rax, qword [r15]
0x0000c007      4c89f2         mov rdx, r14
0x0000c00a      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000c00f      488d1cad0000.  lea rbx, [rbp*4]
0x0000c017      8b34a8         mov esi, dword [rax + rbp*4]
0x0000c01a      e8f15affff     call sym.imp.wcrtomb
0x0000c01f      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000c023      742a           je 0xc04f
0x0000c025      0fb6542460     movzx edx, byte [rsp + 0x60]
0x0000c02a      4585ed         test r13d, r13d
0x0000c02d      41c6041401     mov byte [r12 + rdx], 1
0x0000c032      4889542410     mov qword [rsp + 0x10], rdx
0x0000c037      7416           je 0xc04f
0x0000c039      e8225cffff     call sym.imp.__ctype_tolower_loc
0x0000c03e      488b542410     mov rdx, qword [rsp + 0x10]
0x0000c043      488b00         mov rax, qword [rax]
0x0000c046      48630490       movsxd rax, dword [rax + rdx*4]
0x0000c04a      41c6040401     mov byte [r12 + rax], 1
0x0000c04f      488b442430     mov rax, qword [rsp + 0x30]
0x0000c054      f6401a40       test byte [rax + 0x1a], 0x40
0x0000c058      7495           je 0xbfef
0x0000c05a      488b442408     mov rax, qword [rsp + 8]
0x0000c05f      83b8b4000000.  cmp dword [rax + 0xb4], 1
0x0000c066      7e87           jle 0xbfef
0x0000c068      498b07         mov rax, qword [r15]
0x0000c06b      8b3c18         mov edi, dword [rax + rbx]
0x0000c06e      e86d5bffff     call sym.imp.towlower
0x0000c073      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000c078      4c89f2         mov rdx, r14
0x0000c07b      89c6           mov esi, eax
0x0000c07d      e88e5affff     call sym.imp.wcrtomb
0x0000c082      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000c086      0f8463ffffff   je 0xbfef
0x0000c08c      0fb6442460     movzx eax, byte [rsp + 0x60]
0x0000c091      4883c501       add rbp, 1
0x0000c095      41c6040401     mov byte [r12 + rax], 1
0x0000c09a      493b6f28       cmp rbp, qword [r15 + 0x28]
0x0000c09e      0f8c59ffffff   jl 0xbffd
0x0000c0a4      4489eb         mov ebx, r13d
0x0000c0a7      4c89e5         mov rbp, r12
0x0000c0aa      e978fdffff     jmp 0xbe27
0x0000c0af      4c8b642440     mov r12, qword [rsp + 0x40]
0x0000c0b4      4c8b6c2448     mov r13, qword [rsp + 0x48]
0x0000c0b9      c644245400     mov byte [rsp + 0x54], 0
0x0000c0be      6690           nop
0x0000c0c0      31ff           xor edi, edi
0x0000c0c2      49c704240000.  mov qword [r12], 0
0x0000c0ca      4c89e1         mov rcx, r12
0x0000c0cd      ba01000000     mov edx, 1
0x0000c0d2      4c89ee         mov rsi, r13
0x0000c0d5      e8669effff     call sym.rpl_mbrtowc
0x0000c0da      4883f8fe       cmp rax, 0xfffffffffffffffe
0x0000c0de      750a           jne 0xc0ea
0x0000c0e0      0fb6442454     movzx eax, byte [rsp + 0x54]
0x0000c0e5      c644050001     mov byte [rbp + rax], 1
0x0000c0ea      8044245401     add byte [rsp + 0x54], 1
0x0000c0ef      75cf           jne 0xc0c0
0x0000c0f1      e931fdffff     jmp 0xbe27
0x0000c0f6      4989ed         mov r13, rbp
0x0000c0f9      4531e4         xor r12d, r12d
0x0000c0fc      48c744241800.  mov qword [rsp + 0x18], 0
0x0000c105      488b442410     mov rax, qword [rsp + 0x10]
0x0000c10a      488b742418     mov rsi, qword [rsp + 0x18]
0x0000c10f      4531f6         xor r14d, r14d
0x0000c112      488b0401       mov rax, qword [rcx + rax]
0x0000c116      4c8b3c30       mov r15, qword [rax + rsi]
0x0000c11a      660f1f440000   nop word [rax + rax]
0x0000c120      4d0fa3f7       bt r15, r14
0x0000c124      731f           jae 0xc145
0x0000c126      85db           test ebx, ebx
0x0000c128      43c644350001   mov byte [r13 + r14], 1
0x0000c12e      7415           je 0xc145
0x0000c130      e82b5bffff     call sym.imp.__ctype_tolower_loc
0x0000c135      488b00         mov rax, qword [rax]
0x0000c138      4b8d1434       lea rdx, [r12 + r14]
0x0000c13c      48630490       movsxd rax, dword [rax + rdx*4]
0x0000c140      c644050001     mov byte [rbp + rax], 1
0x0000c145      4983c601       add r14, 1
0x0000c149      4983fe40       cmp r14, 0x40                           ; segment.PHDR
0x0000c14d      75d1           jne 0xc120
0x0000c14f      4983c440       add r12, 0x40                           ; segment.PHDR
0x0000c153      488344241808   add qword [rsp + 0x18], 8
0x0000c159      4983c540       add r13, 0x40                           ; segment.PHDR
0x0000c15d      4981fc000100.  cmp r12, 0x100
0x0000c164      0f84bdfcffff   je 0xbe27
0x0000c16a      488b442408     mov rax, qword [rsp + 8]
0x0000c16f      488b08         mov rcx, qword [rax]
0x0000c172      eb91           jmp 0xc105
0x0000c174      660f6f05249f.  movdqa xmm0, xmmword [0x000160a0]
0x0000c17c      0f114500       movups xmmword [rbp], xmm0
0x0000c180      0f114510       movups xmmword [rbp + 0x10], xmm0
0x0000c184      0f114520       movups xmmword [rbp + 0x20], xmm0
0x0000c188      0f114530       movups xmmword [rbp + 0x30], xmm0
0x0000c18c      0f114540       movups xmmword [rbp + 0x40], xmm0
0x0000c190      0f114550       movups xmmword [rbp + 0x50], xmm0
0x0000c194      0f114560       movups xmmword [rbp + 0x60], xmm0
0x0000c198      0f114570       movups xmmword [rbp + 0x70], xmm0
0x0000c19c      0f1185800000.  movups xmmword [rbp + 0x80], xmm0
0x0000c1a3      0f1185900000.  movups xmmword [rbp + 0x90], xmm0
0x0000c1aa      0f1185a00000.  movups xmmword [rbp + 0xa0], xmm0
0x0000c1b1      0f1185b00000.  movups xmmword [rbp + 0xb0], xmm0
0x0000c1b8      0f1185c00000.  movups xmmword [rbp + 0xc0], xmm0
0x0000c1bf      0f1185d00000.  movups xmmword [rbp + 0xd0], xmm0
0x0000c1c6      0f1185e00000.  movups xmmword [rbp + 0xe0], xmm0
0x0000c1cd      0f1185f00000.  movups xmmword [rbp + 0xf0], xmm0
0x0000c1d4      488b442430     mov rax, qword [rsp + 0x30]
0x0000c1d9      80483801       or byte [rax + 0x38], 1
0x0000c1dd      488b84246801.  mov rax, qword [rsp + 0x168]
0x0000c1e5      644833042528.  xor rax, qword fs:[0x28]
0x0000c1ee      0f858e000000   jne 0xc282
0x0000c1f4      4881c4780100.  add rsp, 0x178
0x0000c1fb      5b             pop rbx
0x0000c1fc      5d             pop rbp
0x0000c1fd      415c           pop r12
0x0000c1ff      415d           pop r13
0x0000c201      415e           pop r14
0x0000c203      415f           pop r15
0x0000c205      c3             ret
0x0000c206      488b442438     mov rax, qword [rsp + 0x38]
0x0000c20b      4883c001       add rax, 1
0x0000c20f      e920fdffff     jmp 0xbf34
0x0000c214      660f6f05849e.  movdqa xmm0, xmmword [0x000160a0]
0x0000c21c      83f802         cmp eax, 2
0x0000c21f      0f114500       movups xmmword [rbp], xmm0
0x0000c223      0f114510       movups xmmword [rbp + 0x10], xmm0
0x0000c227      0f114520       movups xmmword [rbp + 0x20], xmm0
0x0000c22b      0f114530       movups xmmword [rbp + 0x30], xmm0
0x0000c22f      0f114540       movups xmmword [rbp + 0x40], xmm0
0x0000c233      0f114550       movups xmmword [rbp + 0x50], xmm0
0x0000c237      0f114560       movups xmmword [rbp + 0x60], xmm0
0x0000c23b      0f114570       movups xmmword [rbp + 0x70], xmm0
0x0000c23f      0f1185800000.  movups xmmword [rbp + 0x80], xmm0
0x0000c246      0f1185900000.  movups xmmword [rbp + 0x90], xmm0
0x0000c24d      0f1185a00000.  movups xmmword [rbp + 0xa0], xmm0
0x0000c254      0f1185b00000.  movups xmmword [rbp + 0xb0], xmm0
0x0000c25b      0f1185c00000.  movups xmmword [rbp + 0xc0], xmm0
0x0000c262      0f1185d00000.  movups xmmword [rbp + 0xd0], xmm0
0x0000c269      0f1185e00000.  movups xmmword [rbp + 0xe0], xmm0
0x0000c270      0f1185f00000.  movups xmmword [rbp + 0xf0], xmm0
0x0000c277      0f8560ffffff   jne 0xc1dd
0x0000c27d      e952ffffff     jmp 0xc1d4
0x0000c282      e85957ffff     call sym.imp.__stack_chk_fail
0x0000c287      660f1f840000.  nop word [rax + rax]
;-- check_node_accept_bytes.isra.31:
0x0000c290      48c1e204       shl rdx, 4
0x0000c294      4155           push r13
0x0000c296      4154           push r12
0x0000c298      4c8d0c17       lea r9, [rdi + rdx]
0x0000c29c      55             push rbp
0x0000c29d      53             push rbx
0x0000c29e      4883ec08       sub rsp, 8
0x0000c2a2      450fb65908     movzx r11d, byte [r9 + 8]
0x0000c2a7      4180fb07       cmp r11b, 7
0x0000c2ab      0f840f010000   je 0xc3c0
0x0000c2b1      83b990000000.  cmp dword [rcx + 0x90], 1
0x0000c2b8      0f84c2000000   je 0xc380
0x0000c2be      4889f3         mov rbx, rsi
0x0000c2c1      4889cf         mov rdi, rcx
0x0000c2c4      4c89c6         mov rsi, r8
0x0000c2c7      4989ca         mov r10, rcx
0x0000c2ca      e861b7ffff     call sym.re_string_char_size_at.part.0
0x0000c2cf      4180fb05       cmp r11b, 5
0x0000c2d3      89c5           mov ebp, eax
0x0000c2d5      0f84b5000000   je 0xc390
0x0000c2db      4180fb06       cmp r11b, 6
0x0000c2df      0f859b000000   jne 0xc380
0x0000c2e5      83f801         cmp eax, 1
0x0000c2e8      0f8e92000000   jle 0xc380
0x0000c2ee      4d8b29         mov r13, qword [r9]
0x0000c2f1      498b7540       mov rsi, qword [r13 + 0x40]
0x0000c2f5      498b5528       mov rdx, qword [r13 + 0x28]
0x0000c2f9      4885f6         test rsi, rsi
0x0000c2fc      750b           jne 0xc309
0x0000c2fe      49837d4800     cmp qword [r13 + 0x48], 0
0x0000c303      0f84ef000000   je 0xc3f8
0x0000c309      498b4210       mov rax, qword [r10 + 0x10]
0x0000c30d      4885d2         test rdx, rdx
0x0000c310      468b2480       mov r12d, dword [rax + r8*4]
0x0000c314      7e21           jle 0xc337
0x0000c316      498b4d00       mov rcx, qword [r13]
0x0000c31a      443b21         cmp r12d, dword [rcx]
0x0000c31d      7453           je 0xc372
0x0000c31f      31c0           xor eax, eax
0x0000c321      eb0b           jmp 0xc32e
0x0000c323      0f1f440000     nop dword [rax + rax]
0x0000c328      443b2481       cmp r12d, dword [rcx + rax*4]
0x0000c32c      7444           je 0xc372
0x0000c32e      4883c001       add rax, 1
0x0000c332      4839d0         cmp rax, rdx
0x0000c335      75f1           jne 0xc328
0x0000c337      498b4548       mov rax, qword [r13 + 0x48]
0x0000c33b      4885c0         test rax, rax
0x0000c33e      0f8ed8000000   jle 0xc41c
0x0000c344      31db           xor ebx, ebx
0x0000c346      eb16           jmp 0xc35e
0x0000c348      0f1f84000000.  nop dword [rax + rax]
0x0000c350      4883c301       add rbx, 1
0x0000c354      493b5d48       cmp rbx, qword [r13 + 0x48]
0x0000c358      0f8dba000000   jge 0xc418
0x0000c35e      498b4518       mov rax, qword [r13 + 0x18]
0x0000c362      4489e7         mov edi, r12d
0x0000c365      488b34d8       mov rsi, qword [rax + rbx*8]
0x0000c369      e80256ffff     call sym.imp.iswctype
0x0000c36e      85c0           test eax, eax
0x0000c370      74de           je 0xc350
0x0000c372      41f6452001     test byte [r13 + 0x20], 1
0x0000c377      7409           je 0xc382
0x0000c379      0f1f80000000.  nop dword [rax]
0x0000c380      31ed           xor ebp, ebp
0x0000c382      4883c408       add rsp, 8
0x0000c386      89e8           mov eax, ebp
0x0000c388      5b             pop rbx
0x0000c389      5d             pop rbp
0x0000c38a      415c           pop r12
0x0000c38c      415d           pop r13
0x0000c38e      c3             ret
0x0000c38f      90             nop
0x0000c390      83f801         cmp eax, 1
0x0000c393      7eeb           jle 0xc380
0x0000c395      488b03         mov rax, qword [rbx]
0x0000c398      a840           test al, 0x40                           ; segment.PHDR
0x0000c39a      7414           je 0xc3b0
0x0000c39c      a880           test al, 0x80
0x0000c39e      74e2           je 0xc382
0x0000c3a0      498b4208       mov rax, qword [r10 + 8]
0x0000c3a4      42803c0000     cmp byte [rax + r8], 0
0x0000c3a9      74d5           je 0xc380
0x0000c3ab      ebd5           jmp 0xc382
0x0000c3ad      0f1f00         nop dword [rax]
0x0000c3b0      498b5208       mov rdx, qword [r10 + 8]
0x0000c3b4      42803c020a     cmp byte [rdx + r8], 0xa
0x0000c3b9      75e1           jne 0xc39c
0x0000c3bb      ebc3           jmp 0xc380
0x0000c3bd      0f1f00         nop dword [rax]
0x0000c3c0      488b5108       mov rdx, qword [rcx + 8]
0x0000c3c4      4a8d3402       lea rsi, [rdx + r8]
0x0000c3c8      0fb606         movzx eax, byte [rsi]
0x0000c3cb      3cc1           cmp al, 0xc1
0x0000c3cd      76b1           jbe 0xc380
0x0000c3cf      488b4958       mov rcx, qword [rcx + 0x58]
0x0000c3d3      498d7801       lea rdi, [r8 + 1]
0x0000c3d7      4839cf         cmp rdi, rcx
0x0000c3da      7da4           jge 0xc380
0x0000c3dc      3cdf           cmp al, 0xdf
0x0000c3de      420fb6540201   movzx edx, byte [rdx + r8 + 1]
0x0000c3e4      7768           ja 0xc44e
0x0000c3e6      83c280         add edx, 0xffffff80
0x0000c3e9      bd02000000     mov ebp, 2
0x0000c3ee      80fa3f         cmp dl, 0x3f
0x0000c3f1      778d           ja 0xc380
0x0000c3f3      eb8d           jmp 0xc382
0x0000c3f5      0f1f00         nop dword [rax]
0x0000c3f8      4885d2         test rdx, rdx
0x0000c3fb      0f8508ffffff   jne 0xc309
0x0000c401      41f6452001     test byte [r13 + 0x20], 1
0x0000c406      0f8576ffffff   jne 0xc382
0x0000c40c      e96fffffff     jmp 0xc380
0x0000c411      0f1f80000000.  nop dword [rax]
0x0000c418      498b7540       mov rsi, qword [r13 + 0x40]
0x0000c41c      4885f6         test rsi, rsi
0x0000c41f      7ee0           jle 0xc401
0x0000c421      498b5508       mov rdx, qword [r13 + 8]
0x0000c425      31c0           xor eax, eax
0x0000c427      eb10           jmp 0xc439
0x0000c429      0f1f80000000.  nop dword [rax]
0x0000c430      4883c001       add rax, 1
0x0000c434      4839f0         cmp rax, rsi
0x0000c437      74c8           je 0xc401
0x0000c439      443b2482       cmp r12d, dword [rdx + rax*4]
0x0000c43d      7cf1           jl 0xc430
0x0000c43f      498b4d10       mov rcx, qword [r13 + 0x10]
0x0000c443      443b2481       cmp r12d, dword [rcx + rax*4]
0x0000c447      7fe7           jg 0xc430
0x0000c449      e924ffffff     jmp 0xc372
0x0000c44e      3cef           cmp al, 0xef
0x0000c450      7746           ja 0xc498
0x0000c452      3ce0           cmp al, 0xe0
0x0000c454      7509           jne 0xc45f
0x0000c456      80fa9f         cmp dl, 0x9f
0x0000c459      0f8621ffffff   jbe 0xc380
0x0000c45f      bd03000000     mov ebp, 3
0x0000c464      4863fd         movsxd rdi, ebp
0x0000c467      4901f8         add r8, rdi
0x0000c46a      4c39c1         cmp rcx, r8
0x0000c46d      0f8c0dffffff   jl 0xc380
0x0000c473      b801000000     mov eax, 1
0x0000c478      eb0d           jmp 0xc487
0x0000c47a      4883c001       add rax, 1
0x0000c47e      4839c7         cmp rdi, rax
0x0000c481      0f8efbfeffff   jle 0xc382
0x0000c487      0fb61c06       movzx ebx, byte [rsi + rax]
0x0000c48b      8d5380         lea edx, [rbx - 0x80]
0x0000c48e      80fa3f         cmp dl, 0x3f
0x0000c491      76e7           jbe 0xc47a
0x0000c493      e9e8feffff     jmp 0xc380
0x0000c498      3cf7           cmp al, 0xf7
0x0000c49a      7714           ja 0xc4b0
0x0000c49c      3cf0           cmp al, 0xf0
0x0000c49e      7509           jne 0xc4a9
0x0000c4a0      80fa8f         cmp dl, 0x8f
0x0000c4a3      0f86d7feffff   jbe 0xc380
0x0000c4a9      bd04000000     mov ebp, 4
0x0000c4ae      ebb4           jmp 0xc464
0x0000c4b0      3cfb           cmp al, 0xfb
0x0000c4b2      7714           ja 0xc4c8
0x0000c4b4      3cf8           cmp al, 0xf8
0x0000c4b6      7509           jne 0xc4c1
0x0000c4b8      80fa87         cmp dl, 0x87
0x0000c4bb      0f86bffeffff   jbe 0xc380
0x0000c4c1      bd05000000     mov ebp, 5
0x0000c4c6      eb9c           jmp 0xc464
0x0000c4c8      3cfd           cmp al, 0xfd
0x0000c4ca      0f87b0feffff   ja 0xc380
0x0000c4d0      3cfc           cmp al, 0xfc
0x0000c4d2      7509           jne 0xc4dd
0x0000c4d4      80fa83         cmp dl, 0x83
0x0000c4d7      0f86a3feffff   jbe 0xc380
0x0000c4dd      bd06000000     mov ebp, 6
0x0000c4e2      eb80           jmp 0xc464
0x0000c4e4      6690           nop
0x0000c4e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- check_arrival:
0x0000c4f0      4157           push r15
0x0000c4f2      4156           push r14
0x0000c4f4      4989ff         mov r15, rdi
0x0000c4f7      4155           push r13
0x0000c4f9      4154           push r12
0x0000c4fb      55             push rbp
0x0000c4fc      53             push rbx
0x0000c4fd      4889cd         mov rbp, rcx
0x0000c500      4889d3         mov rbx, rdx
0x0000c503      4881ecd80000.  sub rsp, 0xd8
0x0000c50a      488b8f980000.  mov rcx, qword [rdi + 0x98]
0x0000c511      4c8b6e08       mov r13, qword [rsi + 8]
0x0000c515      64488b042528.  mov rax, qword fs:[0x28]
0x0000c51e      48898424c800.  mov qword [rsp + 0xc8], rax
0x0000c526      31c0           xor eax, eax
0x0000c528      4889d0         mov rax, rdx
0x0000c52b      4889742460     mov qword [rsp + 0x60], rsi
0x0000c530      4c89442478     mov qword [rsp + 0x78], r8
0x0000c535      48c1e004       shl rax, 4
0x0000c539      480301         add rax, qword [rcx]
0x0000c53c      4c894c2440     mov qword [rsp + 0x40], r9
0x0000c541      48894c2430     mov qword [rsp + 0x30], rcx
0x0000c546      c78424880000.  mov dword [rsp + 0x88], 0
0x0000c551      488b00         mov rax, qword [rax]
0x0000c554      4889442448     mov qword [rsp + 0x48], rax
0x0000c559      486387e00000.  movsxd rax, dword [rdi + 0xe0]
0x0000c560      4c01c8         add rax, r9
0x0000c563      4c39e8         cmp rax, r13
0x0000c566      0f8d1a060000   jge 0xcb86
0x0000c56c      488b442460     mov rax, qword [rsp + 0x60]
0x0000c571      498b97b80000.  mov rdx, qword [r15 + 0xb8]
0x0000c578      498b4f48       mov rcx, qword [r15 + 0x48]
0x0000c57c      4c8b20         mov r12, qword [rax]
0x0000c57f      4c8b7010       mov r14, qword [rax + 0x10]
0x0000c583      4889542468     mov qword [rsp + 0x68], rdx
0x0000c588      48894c2470     mov qword [rsp + 0x70], rcx
0x0000c58d      418b97a00000.  mov edx, dword [r15 + 0xa0]
0x0000c594      4d85e4         test r12, r12
0x0000c597      4d89b7b80000.  mov qword [r15 + 0xb8], r14
0x0000c59e      0f84dc030000   je 0xc980
0x0000c5a4      498d7424ff     lea rsi, [r12 - 1]
0x0000c5a9      4d896748       mov qword [r15 + 0x48], r12
0x0000c5ad      4c89ff         mov rdi, r15
0x0000c5b0      e80bd3ffff     call sym.re_string_context_at
0x0000c5b5      4939ec         cmp r12, rbp
0x0000c5b8      4189c5         mov r13d, eax
0x0000c5bb      0f84d2030000   je 0xc993
0x0000c5c1      4b8b2ce6       mov rbp, qword [r14 + r12*8]
0x0000c5c5      4885ed         test rbp, rbp
0x0000c5c8      740a           je 0xc5d4
0x0000c5ca      f6456840       test byte [rbp + 0x68], 0x40
0x0000c5ce      0f851c050000   jne 0xcaf0
0x0000c5d4      660fefc0       pxor xmm0, xmm0
0x0000c5d8      48c78424a000.  mov qword [rsp + 0xa0], 0
0x0000c5e4      0f2984249000.  movaps xmmword [rsp + 0x90], xmm0
0x0000c5ec      4c3b642440     cmp r12, qword [rsp + 0x40]
0x0000c5f1      0f8d21030000   jge 0xc918
0x0000c5f7      418b8fe00000.  mov ecx, dword [r15 + 0xe0]
0x0000c5fe      85c9           test ecx, ecx
0x0000c600      0f8812030000   js 0xc918
0x0000c606      488d9c249000.  lea rbx, [rsp + 0x90]
0x0000c60e      4a8d04e50800.  lea rax, [r12*8 + 8]
0x0000c616      4c892424       mov qword [rsp], r12
0x0000c61a      48c744242000.  mov qword [rsp + 0x20], 0
0x0000c623      48895c2408     mov qword [rsp + 8], rbx
0x0000c628      488d9c24b000.  lea rbx, [rsp + 0xb0]
0x0000c630      4889442410     mov qword [rsp + 0x10], rax
0x0000c635      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x0000c63c      48895c2418     mov qword [rsp + 0x18], rbx
0x0000c641      488d9c248c00.  lea rbx, [rsp + 0x8c]
0x0000c649      48895c2458     mov qword [rsp + 0x58], rbx
0x0000c64e      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0000c653      48c784249800.  mov qword [rsp + 0x98], 0
0x0000c65f      488b3408       mov rsi, qword [rax + rcx]
0x0000c663      4885f6         test rsi, rsi
0x0000c666      0f84bc030000   je 0xca28
0x0000c66c      488b7c2408     mov rdi, qword [rsp + 8]
0x0000c671      4883c608       add rsi, 8
0x0000c675      e886b9ffff     call sym.re_node_set_merge
0x0000c67a      85c0           test eax, eax
0x0000c67c      898424880000.  mov dword [rsp + 0x88], eax
0x0000c683      0f85d7030000   jne 0xca60
0x0000c689      4885ed         test rbp, rbp
0x0000c68c      0f84a6010000   je 0xc838
0x0000c692      48837d2800     cmp qword [rbp + 0x28], 0
0x0000c697      488b442418     mov rax, qword [rsp + 0x18]
0x0000c69c      660fefc0       pxor xmm0, xmm0
0x0000c6a0      4d8ba7980000.  mov r12, qword [r15 + 0x98]
0x0000c6a7      c784248c0000.  mov dword [rsp + 0x8c], 0
0x0000c6b2      48c740100000.  mov qword [rax + 0x10], 0
0x0000c6ba      0f2900         movaps xmmword [rax], xmm0
0x0000c6bd      0f8e2d050000   jle 0xcbf0
0x0000c6c3      498d8424d800.  lea rax, [r12 + 0xd8]
0x0000c6cb      31db           xor ebx, ebx
0x0000c6cd      4889442428     mov qword [rsp + 0x28], rax
0x0000c6d2      eb45           jmp 0xc719
0x0000c6d4      0f1f4000       nop dword [rax]
0x0000c6d8      488b1424       mov rdx, qword [rsp]
0x0000c6dc      4c89ff         mov rdi, r15
0x0000c6df      e8ccd2ffff     call sym.check_node_accept
0x0000c6e4      84c0           test al, al
0x0000c6e6      7423           je 0xc70b
0x0000c6e8      4e8d2cf50000.  lea r13, [r14*8]
0x0000c6f0      498b442418     mov rax, qword [r12 + 0x18]
0x0000c6f5      488b7c2408     mov rdi, qword [rsp + 8]
0x0000c6fa      4a8b3428       mov rsi, qword [rax + r13]
0x0000c6fe      e89d9effff     call sym.re_node_set_insert
0x0000c703      84c0           test al, al
0x0000c705      0f843d030000   je 0xca48
0x0000c70b      4883c301       add rbx, 1
0x0000c70f      483b5d28       cmp rbx, qword [rbp + 0x28]
0x0000c713      0f8d87030000   jge 0xcaa0
0x0000c719      488b4530       mov rax, qword [rbp + 0x30]
0x0000c71d      498b3c24       mov rdi, qword [r12]
0x0000c721      4c8b34d8       mov r14, qword [rax + rbx*8]
0x0000c725      4d89f5         mov r13, r14
0x0000c728      49c1e504       shl r13, 4
0x0000c72c      4a8d342f       lea rsi, [rdi + r13]
0x0000c730      f6460a10       test byte [rsi + 0xa], 0x10
0x0000c734      74a2           je 0xc6d8
0x0000c736      4c8b0424       mov r8, qword [rsp]
0x0000c73a      488b742428     mov rsi, qword [rsp + 0x28]
0x0000c73f      4c89f9         mov rcx, r15
0x0000c742      4c89f2         mov rdx, r14
0x0000c745      e846fbffff     call sym.check_node_accept_bytes.isra.31
0x0000c74a      83f801         cmp eax, 1
0x0000c74d      0f8ebd020000   jle 0xca10
0x0000c753      4898           cdqe
0x0000c755      48030424       add rax, qword [rsp]
0x0000c759      498b542418     mov rdx, qword [r12 + 0x18]
0x0000c75e      4e8d2cf50000.  lea r13, [r14*8]
0x0000c766      4a8b14f2       mov rdx, qword [rdx + r14*8]
0x0000c76a      4889c1         mov rcx, rax
0x0000c76d      4889442438     mov qword [rsp + 0x38], rax
0x0000c772      4c8d34c50000.  lea r14, [rax*8]
0x0000c77a      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x0000c781      488b34c8       mov rsi, qword [rax + rcx*8]
0x0000c785      48c78424b800.  mov qword [rsp + 0xb8], 0
0x0000c791      4885f6         test rsi, rsi
0x0000c794      7423           je 0xc7b9
0x0000c796      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000c79b      4883c608       add rsi, 8
0x0000c79f      4889542450     mov qword [rsp + 0x50], rdx
0x0000c7a4      e857b8ffff     call sym.re_node_set_merge
0x0000c7a9      85c0           test eax, eax
0x0000c7ab      8984248c0000.  mov dword [rsp + 0x8c], eax
0x0000c7b2      488b542450     mov rdx, qword [rsp + 0x50]
0x0000c7b7      7557           jne 0xc810
0x0000c7b9      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000c7be      4889d6         mov rsi, rdx
0x0000c7c1      e8da9dffff     call sym.re_node_set_insert
0x0000c7c6      84c0           test al, al
0x0000c7c8      0f847a020000   je 0xca48
0x0000c7ce      4d03b7b80000.  add r14, qword [r15 + 0xb8]
0x0000c7d5      488b542418     mov rdx, qword [rsp + 0x18]
0x0000c7da      4c89e6         mov rsi, r12
0x0000c7dd      488b7c2458     mov rdi, qword [rsp + 0x58]
0x0000c7e2      e809c9ffff     call sym.re_acquire_state
0x0000c7e7      488b542438     mov rdx, qword [rsp + 0x38]
0x0000c7ec      498906         mov qword [r14], rax
0x0000c7ef      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x0000c7f6      48833cd000     cmp qword [rax + rdx*8], 0
0x0000c7fb      0f85effeffff   jne 0xc6f0
0x0000c801      8b94248c0000.  mov edx, dword [rsp + 0x8c]
0x0000c808      85d2           test edx, edx
0x0000c80a      0f84e0feffff   je 0xc6f0
0x0000c810      488bbc24c000.  mov rdi, qword [rsp + 0xc0]
0x0000c818      e8b350ffff     call sym.imp.free
0x0000c81d      8b84248c0000.  mov eax, dword [rsp + 0x8c]
0x0000c824      85c0           test eax, eax
0x0000c826      898424880000.  mov dword [rsp + 0x88], eax
0x0000c82d      0f852d020000   jne 0xca60
0x0000c833      0f1f440000     nop dword [rax + rax]
0x0000c838      488b0424       mov rax, qword [rsp]
0x0000c83c      4883bc249800.  cmp qword [rsp + 0x98], 0
0x0000c845      488d5801       lea rbx, [rax + 1]
0x0000c849      4989dc         mov r12, rbx
0x0000c84c      7456           je 0xc8a4
0x0000c84e      8b8c24100100.  mov ecx, dword [rsp + 0x110]
0x0000c855      488b542448     mov rdx, qword [rsp + 0x48]
0x0000c85a      488b742408     mov rsi, qword [rsp + 8]
0x0000c85f      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000c864      e827bcffff     call sym.check_arrival_expand_ecl
0x0000c869      85c0           test eax, eax
0x0000c86b      898424880000.  mov dword [rsp + 0x88], eax
0x0000c872      0f85e8010000   jne 0xca60
0x0000c878      448b84241001.  mov r8d, dword [rsp + 0x110]
0x0000c880      488b4c2448     mov rcx, qword [rsp + 0x48]
0x0000c885      4889da         mov rdx, rbx
0x0000c888      488b742408     mov rsi, qword [rsp + 8]
0x0000c88d      4c89ff         mov rdi, r15
0x0000c890      e83bcbffff     call sym.expand_bkref_cache
0x0000c895      85c0           test eax, eax
0x0000c897      898424880000.  mov dword [rsp + 0x88], eax
0x0000c89e      0f85bc010000   jne 0xca60
0x0000c8a4      418b97a00000.  mov edx, dword [r15 + 0xa0]
0x0000c8ab      488b3424       mov rsi, qword [rsp]
0x0000c8af      4c89ff         mov rdi, r15
0x0000c8b2      e809d0ffff     call sym.re_string_context_at
0x0000c8b7      488b542408     mov rdx, qword [rsp + 8]
0x0000c8bc      488b742430     mov rsi, qword [rsp + 0x30]
0x0000c8c1      488dbc248800.  lea rdi, [rsp + 0x88]
0x0000c8c9      89c1           mov ecx, eax
0x0000c8cb      e860c5ffff     call sym.re_acquire_state_context
0x0000c8d0      4885c0         test rax, rax
0x0000c8d3      4889c5         mov rbp, rax
0x0000c8d6      0f84e4010000   je 0xcac0
0x0000c8dc      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x0000c8e3      488b542410     mov rdx, qword [rsp + 0x10]
0x0000c8e8      48c744242000.  mov qword [rsp + 0x20], 0
0x0000c8f1      48892c10       mov qword [rax + rdx], rbp
0x0000c8f5      48395c2440     cmp qword [rsp + 0x40], rbx
0x0000c8fa      7e1c           jle 0xc918
0x0000c8fc      496397e00000.  movsxd rdx, dword [r15 + 0xe0]
0x0000c903      488344241008   add qword [rsp + 0x10], 8
0x0000c909      483b542420     cmp rdx, qword [rsp + 0x20]
0x0000c90e      48891c24       mov qword [rsp], rbx
0x0000c912      0f8d36fdffff   jge 0xc64e
0x0000c918      488bbc24a000.  mov rdi, qword [rsp + 0xa0]
0x0000c920      e8ab4fffff     call sym.imp.free
0x0000c925      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x0000c92c      488b5c2440     mov rbx, qword [rsp + 0x40]
0x0000c931      488b04d8       mov rax, qword [rax + rbx*8]
0x0000c935      4885c0         test rax, rax
0x0000c938      0f84d7020000   je 0xcc15
0x0000c93e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x0000c943      488b542478     mov rdx, qword [rsp + 0x78]
0x0000c948      488d7018       lea rsi, [rax + 0x18]
0x0000c94c      4c8923         mov qword [rbx], r12
0x0000c94f      488b5c2468     mov rbx, qword [rsp + 0x68]
0x0000c954      49899fb80000.  mov qword [r15 + 0xb8], rbx
0x0000c95b      488b5c2470     mov rbx, qword [rsp + 0x70]
0x0000c960      49895f48       mov qword [r15 + 0x48], rbx
0x0000c964      488b7810       mov rdi, qword [rax + 0x10]
0x0000c968      e873b1ffff     call sym.re_node_set_contains.isra.3
0x0000c96d      4885c0         test rax, rax
0x0000c970      0f94c0         sete al
0x0000c973      0fb6c0         movzx eax, al
0x0000c976      e9f9000000     jmp 0xca74
0x0000c97b      0f1f440000     nop dword [rax + rax]
0x0000c980      488d75ff       lea rsi, [rbp - 1]
0x0000c984      49896f48       mov qword [r15 + 0x48], rbp
0x0000c988      4c89ff         mov rdi, r15
0x0000c98b      e830cfffff     call sym.re_string_context_at
0x0000c990      4189c5         mov r13d, eax
0x0000c993      bf08000000     mov edi, 8
0x0000c998      48c784249000.  mov qword [rsp + 0x90], 1
0x0000c9a4      48c784249800.  mov qword [rsp + 0x98], 1
0x0000c9b0      e84b51ffff     call sym.imp.malloc
0x0000c9b5      4885c0         test rax, rax
0x0000c9b8      48898424a000.  mov qword [rsp + 0xa0], rax
0x0000c9c0      0f8445020000   je 0xcc0b
0x0000c9c6      488918         mov qword [rax], rbx
0x0000c9c9      8b8c24100100.  mov ecx, dword [rsp + 0x110]
0x0000c9d0      488d9c249000.  lea rbx, [rsp + 0x90]
0x0000c9d8      488b542448     mov rdx, qword [rsp + 0x48]
0x0000c9dd      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000c9e2      4989ec         mov r12, rbp
0x0000c9e5      4889de         mov rsi, rbx
0x0000c9e8      c78424880000.  mov dword [rsp + 0x88], 0
0x0000c9f3      e898baffff     call sym.check_arrival_expand_ecl
0x0000c9f8      85c0           test eax, eax
0x0000c9fa      898424880000.  mov dword [rsp + 0x88], eax
0x0000ca01      0f8416010000   je 0xcb1d
0x0000ca07      eb57           jmp 0xca60
0x0000ca09      0f1f80000000.  nop dword [rax]
0x0000ca10      85c0           test eax, eax
0x0000ca12      0f85d0fcffff   jne 0xc6e8
0x0000ca18      498b3424       mov rsi, qword [r12]
0x0000ca1c      4c01ee         add rsi, r13
0x0000ca1f      e9b4fcffff     jmp 0xc6d8
0x0000ca24      0f1f4000       nop dword [rax]
0x0000ca28      4885ed         test rbp, rbp
0x0000ca2b      0f8561fcffff   jne 0xc692
0x0000ca31      488b0424       mov rax, qword [rsp]
0x0000ca35      488d5801       lea rbx, [rax + 1]
0x0000ca39      4989dc         mov r12, rbx
0x0000ca3c      e963feffff     jmp 0xc8a4
0x0000ca41      0f1f80000000.  nop dword [rax]
0x0000ca48      488bbc24c000.  mov rdi, qword [rsp + 0xc0]
0x0000ca50      e87b4effff     call sym.imp.free
0x0000ca55      c78424880000.  mov dword [rsp + 0x88], 0xc             ; [0xc:4]=0
0x0000ca60      488bbc24a000.  mov rdi, qword [rsp + 0xa0]
0x0000ca68      e8634effff     call sym.imp.free
0x0000ca6d      8b8424880000.  mov eax, dword [rsp + 0x88]
0x0000ca74      488b9c24c800.  mov rbx, qword [rsp + 0xc8]
0x0000ca7c      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000ca85      0f85b1010000   jne 0xcc3c
0x0000ca8b      4881c4d80000.  add rsp, 0xd8
0x0000ca92      5b             pop rbx
0x0000ca93      5d             pop rbp
0x0000ca94      415c           pop r12
0x0000ca96      415d           pop r13
0x0000ca98      415e           pop r14
0x0000ca9a      415f           pop r15
0x0000ca9c      c3             ret
0x0000ca9d      0f1f00         nop dword [rax]
0x0000caa0      488bbc24c000.  mov rdi, qword [rsp + 0xc0]
0x0000caa8      e8234effff     call sym.imp.free
0x0000caad      c78424880000.  mov dword [rsp + 0x88], 0
0x0000cab8      e97bfdffff     jmp 0xc838
0x0000cabd      0f1f00         nop dword [rax]
0x0000cac0      8b8424880000.  mov eax, dword [rsp + 0x88]
0x0000cac7      85c0           test eax, eax
0x0000cac9      7595           jne 0xca60
0x0000cacb      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x0000cad2      488b542410     mov rdx, qword [rsp + 0x10]
0x0000cad7      488344242001   add qword [rsp + 0x20], 1
0x0000cadd      48c704100000.  mov qword [rax + rdx], 0
0x0000cae5      e90bfeffff     jmp 0xc8f5
0x0000caea      660f1f440000   nop word [rax + rax]
0x0000caf0      488d9c249000.  lea rbx, [rsp + 0x90]
0x0000caf8      488d7508       lea rsi, [rbp + 8]
0x0000cafc      4889df         mov rdi, rbx
0x0000caff      e83cc1ffff     call sym.re_node_set_init_copy
0x0000cb04      85c0           test eax, eax
0x0000cb06      898424880000.  mov dword [rsp + 0x88], eax
0x0000cb0d      0f8561ffffff   jne 0xca74
0x0000cb13      f6456840       test byte [rbp + 0x68], 0x40
0x0000cb17      0f84cffaffff   je 0xc5ec
0x0000cb1d      4883bc249800.  cmp qword [rsp + 0x98], 0
0x0000cb26      742a           je 0xcb52
0x0000cb28      448b84241001.  mov r8d, dword [rsp + 0x110]
0x0000cb30      488b4c2448     mov rcx, qword [rsp + 0x48]
0x0000cb35      4c89e2         mov rdx, r12
0x0000cb38      4889de         mov rsi, rbx
0x0000cb3b      4c89ff         mov rdi, r15
0x0000cb3e      e88dc8ffff     call sym.expand_bkref_cache
0x0000cb43      85c0           test eax, eax
0x0000cb45      898424880000.  mov dword [rsp + 0x88], eax
0x0000cb4c      0f850effffff   jne 0xca60
0x0000cb52      488b742430     mov rsi, qword [rsp + 0x30]
0x0000cb57      488dbc248800.  lea rdi, [rsp + 0x88]
0x0000cb5f      4489e9         mov ecx, r13d
0x0000cb62      4889da         mov rdx, rbx
0x0000cb65      e8c6c2ffff     call sym.re_acquire_state_context
0x0000cb6a      4885c0         test rax, rax
0x0000cb6d      4889c5         mov rbp, rax
0x0000cb70      0f8481000000   je 0xcbf7
0x0000cb76      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x0000cb7d      4a892ce0       mov qword [rax + r12*8], rbp
0x0000cb81      e966faffff     jmp 0xc5ec
0x0000cb86      4c8d6001       lea r12, [rax + 1]
0x0000cb8a      48b8ffffffff.  movabs rax, 0x7fffffffffffffff          ; 9223372036854775807
0x0000cb94      4c29e8         sub rax, r13
0x0000cb97      4c39e0         cmp rax, r12
0x0000cb9a      7c6f           jl 0xcc0b
0x0000cb9c      4f8d742500     lea r14, [r13 + r12]
0x0000cba1      48b8ffffffff.  movabs rax, 0x1fffffffffffffff          ; 2305843009213693951
0x0000cbab      4939c6         cmp r14, rax
0x0000cbae      775b           ja 0xcc0b
0x0000cbb0      488b442460     mov rax, qword [rsp + 0x60]
0x0000cbb5      4a8d34f50000.  lea rsi, [r14*8]
0x0000cbbd      488b7810       mov rdi, qword [rax + 0x10]
0x0000cbc1      e89a4fffff     call sym.imp.realloc
0x0000cbc6      4885c0         test rax, rax
0x0000cbc9      7440           je 0xcc0b
0x0000cbcb      488b4c2460     mov rcx, qword [rsp + 0x60]
0x0000cbd0      4a8d14e50000.  lea rdx, [r12*8]
0x0000cbd8      4a8d3ce8       lea rdi, [rax + r13*8]
0x0000cbdc      31f6           xor esi, esi
0x0000cbde      48894110       mov qword [rcx + 0x10], rax
0x0000cbe2      4c897108       mov qword [rcx + 8], r14
0x0000cbe6      e8754effff     call sym.imp.memset
0x0000cbeb      e97cf9ffff     jmp 0xc56c
0x0000cbf0      31ff           xor edi, edi
0x0000cbf2      e9b1feffff     jmp 0xcaa8
0x0000cbf7      8bb424880000.  mov esi, dword [rsp + 0x88]
0x0000cbfe      85f6           test esi, esi
0x0000cc00      0f8470ffffff   je 0xcb76
0x0000cc06      e955feffff     jmp 0xca60
0x0000cc0b      b80c000000     mov eax, 0xc
0x0000cc10      e95ffeffff     jmp 0xca74
0x0000cc15      488b442460     mov rax, qword [rsp + 0x60]
0x0000cc1a      4c8920         mov qword [rax], r12
0x0000cc1d      488b442468     mov rax, qword [rsp + 0x68]
0x0000cc22      498987b80000.  mov qword [r15 + 0xb8], rax
0x0000cc29      488b442470     mov rax, qword [rsp + 0x70]
0x0000cc2e      49894748       mov qword [r15 + 0x48], rax
0x0000cc32      b801000000     mov eax, 1
0x0000cc37      e938feffff     jmp 0xca74
0x0000cc3c      e89f4dffff     call sym.imp.__stack_chk_fail
0x0000cc41      0f1f440000     nop dword [rax + rax]
0x0000cc46      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_regs:
0x0000cc50      55             push rbp
0x0000cc51      4889e5         mov rbp, rsp
0x0000cc54      4157           push r15
0x0000cc56      4156           push r14
0x0000cc58      4155           push r13
0x0000cc5a      4154           push r12
0x0000cc5c      4989cd         mov r13, rcx
0x0000cc5f      53             push rbx
0x0000cc60      4989f4         mov r12, rsi
0x0000cc63      4881ecb80000.  sub rsp, 0xb8
0x0000cc6a      48899568ffff.  mov qword [rbp - 0x98], rdx
0x0000cc71      48c745b00000.  mov qword [rbp - 0x50], 0
0x0000cc79      64488b042528.  mov rax, qword fs:[0x28]
0x0000cc82      488945c8       mov qword [rbp - 0x38], rax
0x0000cc86      31c0           xor eax, eax
0x0000cc88      488b07         mov rax, qword [rdi]
0x0000cc8b      4584c0         test r8b, r8b
0x0000cc8e      48c745b80200.  mov qword [rbp - 0x48], 2
0x0000cc96      48c745c00000.  mov qword [rbp - 0x40], 0
0x0000cc9e      48898570ffff.  mov qword [rbp - 0x90], rax
0x0000cca5      0f84a2070000   je 0xd44d
0x0000ccab      bf60000000     mov edi, 0x60                           ; '`'
0x0000ccb0      e84b4effff     call sym.imp.malloc
0x0000ccb5      488d4db0       lea rcx, [rbp - 0x50]
0x0000ccb9      4885c0         test rax, rax
0x0000ccbc      488945c0       mov qword [rbp - 0x40], rax
0x0000ccc0      48898d78ffff.  mov qword [rbp - 0x88], rcx
0x0000ccc7      0f841f070000   je 0xd3ec
0x0000cccd      488b8570ffff.  mov rax, qword [rbp - 0x90]
0x0000ccd4      660fefc0       pxor xmm0, xmm0
0x0000ccd8      48c745a00000.  mov qword [rbp - 0x60], 0
0x0000cce0      488b98900000.  mov rbx, qword [rax + 0x90]
0x0000cce7      488b8568ffff.  mov rax, qword [rbp - 0x98]
0x0000ccee      0f294590       movaps xmmword [rbp - 0x70], xmm0
0x0000ccf2      48c1e004       shl rax, 4
0x0000ccf6      483dbf0f0000   cmp rax, 0xfbf
0x0000ccfc      48898548ffff.  mov qword [rbp - 0xb8], rax
0x0000cd03      0f87ed060000   ja 0xd3f6
0x0000cd09      4883c010       add rax, 0x10
0x0000cd0d      c68537ffffff.  mov byte [rbp - 0xc9], 0
0x0000cd14      4829c4         sub rsp, rax
0x0000cd17      488d44240f     lea rax, [rsp + 0xf]
0x0000cd1c      4883e0f0       and rax, 0xfffffffffffffff0
0x0000cd20      48898540ffff.  mov qword [rbp - 0xc0], rax
0x0000cd27      488b9548ffff.  mov rdx, qword [rbp - 0xb8]
0x0000cd2e      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x0000cd35      4c89ee         mov rsi, r13
0x0000cd38      e8934dffff     call sym.imp.memcpy
0x0000cd3d      488d4590       lea rax, [rbp - 0x70]
0x0000cd41      498b4d00       mov rcx, qword [r13]
0x0000cd45      48898558ffff.  mov qword [rbp - 0xa8], rax
0x0000cd4c      4883c010       add rax, 0x10
0x0000cd50      48894d88       mov qword [rbp - 0x78], rcx
0x0000cd54      48898538ffff.  mov qword [rbp - 0xc8], rax
0x0000cd5b      488d4588       lea rax, [rbp - 0x78]
0x0000cd5f      48898550ffff.  mov qword [rbp - 0xb0], rax
0x0000cd66      e9de000000     jmp 0xce49
0x0000cd6b      0f1f440000     nop dword [rax + rax]
0x0000cd70      83fe09         cmp esi, 9
0x0000cd73      0f84e7010000   je 0xcf60
0x0000cd79      4839c8         cmp rax, rcx
0x0000cd7c      750e           jne 0xcd8c
0x0000cd7e      49399c24b000.  cmp qword [r12 + 0xb0], rbx
0x0000cd86      0f84d4030000   je 0xd160
0x0000cd8c      4d8bb4249800.  mov r14, qword [r12 + 0x98]
0x0000cd94      498b3e         mov rdi, qword [r14]
0x0000cd97      4a8d340f       lea rsi, [rdi + r9]
0x0000cd9b      0fb64608       movzx eax, byte [rsi + 8]
0x0000cd9f      a808           test al, 8
0x0000cda1      0f8509010000   jne 0xceb0
0x0000cda7      f6460a10       test byte [rsi + 0xa], 0x10
0x0000cdab      0f85ff010000   jne 0xcfb0
0x0000cdb1      3c04           cmp al, 4
0x0000cdb3      0f8437020000   je 0xcff0
0x0000cdb9      488b4d88       mov rcx, qword [rbp - 0x78]
0x0000cdbd      4889ca         mov rdx, rcx
0x0000cdc0      4c89e7         mov rdi, r12
0x0000cdc3      48898d60ffff.  mov qword [rbp - 0xa0], rcx
0x0000cdca      e8e1cbffff     call sym.check_node_accept
0x0000cdcf      84c0           test al, al
0x0000cdd1      488b8d60ffff.  mov rcx, qword [rbp - 0xa0]
0x0000cdd8      0f844a040000   je 0xd228
0x0000cdde      498b4618       mov rax, qword [r14 + 0x18]
0x0000cde2      488d5101       lea rdx, [rcx + 1]
0x0000cde6      4a8b1cf8       mov rbx, qword [rax + r15*8]
0x0000cdea      4883bd78ffff.  cmp qword [rbp - 0x88], 0
0x0000cdf2      48895588       mov qword [rbp - 0x78], rdx
0x0000cdf6      743c           je 0xce34
0x0000cdf8      493b9424a800.  cmp rdx, qword [r12 + 0xa8]
0x0000ce00      0f8f30040000   jg 0xd236
0x0000ce06      498b8424b800.  mov rax, qword [r12 + 0xb8]
0x0000ce0e      488b04d0       mov rax, qword [rax + rdx*8]
0x0000ce12      4885c0         test rax, rax
0x0000ce15      0f841b040000   je 0xd236
0x0000ce1b      488b7810       mov rdi, qword [rax + 0x10]
0x0000ce1f      488d7018       lea rsi, [rax + 0x18]
0x0000ce23      4889da         mov rdx, rbx
0x0000ce26      e8b5acffff     call sym.re_node_set_contains.isra.3
0x0000ce2b      4885c0         test rax, rax
0x0000ce2e      0f8402040000   je 0xd236
0x0000ce34      48c745980000.  mov qword [rbp - 0x68], 0
0x0000ce3c      4885db         test rbx, rbx
0x0000ce3f      0f88d5030000   js 0xd21a
0x0000ce45      488b4d88       mov rcx, qword [rbp - 0x78]
0x0000ce49      498b4508       mov rax, qword [r13 + 8]
0x0000ce4d      4839c8         cmp rax, rcx
0x0000ce50      0f8cea040000   jl 0xd340
0x0000ce56      488bbd70ffff.  mov rdi, qword [rbp - 0x90]
0x0000ce5d      4989d9         mov r9, rbx
0x0000ce60      4989df         mov r15, rbx
0x0000ce63      49c1e104       shl r9, 4
0x0000ce67      488b17         mov rdx, qword [rdi]
0x0000ce6a      4c01ca         add rdx, r9
0x0000ce6d      0fb67208       movzx esi, byte [rdx + 8]
0x0000ce71      83fe08         cmp esi, 8
0x0000ce74      0f85f6feffff   jne 0xcd70
0x0000ce7a      488b12         mov rdx, qword [rdx]
0x0000ce7d      4883c201       add rdx, 1
0x0000ce81      48399568ffff.  cmp qword [rbp - 0x98], rdx
0x0000ce88      0f8eebfeffff   jle 0xcd79
0x0000ce8e      48c1e204       shl rdx, 4
0x0000ce92      4c01ea         add rdx, r13
0x0000ce95      48c74208ffff.  mov qword [rdx + 8], 0xffffffffffffffff
0x0000ce9d      48890a         mov qword [rdx], rcx
0x0000cea0      498b4508       mov rax, qword [r13 + 8]
0x0000cea4      e9d0feffff     jmp 0xcd79
0x0000cea9      0f1f80000000.  nop dword [rax]
0x0000ceb0      498b8424b800.  mov rax, qword [r12 + 0xb8]
0x0000ceb8      488b5588       mov rdx, qword [rbp - 0x78]
0x0000cebc      4889de         mov rsi, rbx
0x0000cebf      488bbd58ffff.  mov rdi, qword [rbp - 0xa8]
0x0000cec6      4c8b0cd0       mov r9, qword [rax + rdx*8]
0x0000ceca      498b4628       mov rax, qword [r14 + 0x28]
0x0000cece      488d145b       lea rdx, [rbx + rbx*2]
0x0000ced2      4c898d60ffff.  mov qword [rbp - 0xa0], r9
0x0000ced9      4c8d3cd0       lea r15, [rax + rdx*8]
0x0000cedd      e8be96ffff     call sym.re_node_set_insert
0x0000cee2      84c0           test al, al
0x0000cee4      4c8b8d60ffff.  mov r9, qword [rbp - 0xa0]
0x0000ceeb      0f84d7040000   je 0xd3c8
0x0000cef1      4d8b5708       mov r10, qword [r15 + 8]
0x0000cef5      4d85d2         test r10, r10
0x0000cef8      0f8e2a030000   jle 0xd228
0x0000cefe      4d8b7f10       mov r15, qword [r15 + 0x10]
0x0000cf02      4d8b5910       mov r11, qword [r9 + 0x10]
0x0000cf06      4d8d7118       lea r14, [r9 + 0x18]
0x0000cf0a      48c7c3ffffff.  mov rbx, 0xffffffffffffffff
0x0000cf11      4531c9         xor r9d, r9d
0x0000cf14      4c89a560ffff.  mov qword [rbp - 0xa0], r12
0x0000cf1b      0f1f440000     nop dword [rax + rax]
0x0000cf20      4f8b24cf       mov r12, qword [r15 + r9*8]
0x0000cf24      4c89f6         mov rsi, r14
0x0000cf27      4c89df         mov rdi, r11
0x0000cf2a      4c89e2         mov rdx, r12
0x0000cf2d      e8aeabffff     call sym.re_node_set_contains.isra.3
0x0000cf32      4885c0         test rax, rax
0x0000cf35      740d           je 0xcf44
0x0000cf37      4883fbff       cmp rbx, 0xffffffffffffffff
0x0000cf3b      0f854f010000   jne 0xd090
0x0000cf41      4c89e3         mov rbx, r12
0x0000cf44      4983c101       add r9, 1
0x0000cf48      4d39ca         cmp r10, r9
0x0000cf4b      75d3           jne 0xcf20
0x0000cf4d      4c8ba560ffff.  mov r12, qword [rbp - 0xa0]
0x0000cf54      e9e3feffff     jmp 0xce3c
0x0000cf59      0f1f80000000.  nop dword [rax]
0x0000cf60      488b3a         mov rdi, qword [rdx]
0x0000cf63      488d7701       lea rsi, [rdi + 1]
0x0000cf67      4839b568ffff.  cmp qword [rbp - 0x98], rsi
0x0000cf6e      0f8e05feffff   jle 0xcd79
0x0000cf74      48c1e604       shl rsi, 4
0x0000cf78      498d443500     lea rax, [r13 + rsi]
0x0000cf7d      483908         cmp qword [rax], rcx
0x0000cf80      0f8c7a030000   jl 0xd300
0x0000cf86      f6420a08       test byte [rdx + 0xa], 8
0x0000cf8a      7412           je 0xcf9e
0x0000cf8c      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x0000cf93      48833c37ff     cmp qword [rdi + rsi], 0xffffffffffffffff
0x0000cf98      0f85ed030000   jne 0xd38b
0x0000cf9e      48894808       mov qword [rax + 8], rcx
0x0000cfa2      498b4508       mov rax, qword [r13 + 8]
0x0000cfa6      e9cefdffff     jmp 0xcd79
0x0000cfab      0f1f440000     nop dword [rax + rax]
0x0000cfb0      4c8b4588       mov r8, qword [rbp - 0x78]
0x0000cfb4      498db6d80000.  lea rsi, [r14 + 0xd8]
0x0000cfbb      4c89e1         mov rcx, r12
0x0000cfbe      4889da         mov rdx, rbx
0x0000cfc1      4c898d60ffff.  mov qword [rbp - 0xa0], r9
0x0000cfc8      e8c3f2ffff     call sym.check_node_accept_bytes.isra.31
0x0000cfcd      4863c8         movsxd rcx, eax
0x0000cfd0      4885c9         test rcx, rcx
0x0000cfd3      0f85f8010000   jne 0xd1d1
0x0000cfd9      4c8b8d60ffff.  mov r9, qword [rbp - 0xa0]
0x0000cfe0      498b36         mov rsi, qword [r14]
0x0000cfe3      488b4d88       mov rcx, qword [rbp - 0x78]
0x0000cfe7      4c01ce         add rsi, r9
0x0000cfea      e9cefdffff     jmp 0xcdbd
0x0000cfef      90             nop
0x0000cff0      488b06         mov rax, qword [rsi]
0x0000cff3      4883c001       add rax, 1
0x0000cff7      48c1e004       shl rax, 4
0x0000cffb      4c01e8         add rax, r13
0x0000cffe      488b5008       mov rdx, qword [rax + 8]
0x0000d002      488b38         mov rdi, qword [rax]
0x0000d005      4889d1         mov rcx, rdx
0x0000d008      4829f9         sub rcx, rdi
0x0000d00b      4883bd78ffff.  cmp qword [rbp - 0x88], 0
0x0000d013      0f84af010000   je 0xd1c8
0x0000d019      4883ffff       cmp rdi, 0xffffffffffffffff
0x0000d01d      0f8413020000   je 0xd236
0x0000d023      4883faff       cmp rdx, 0xffffffffffffffff
0x0000d027      0f8409020000   je 0xd236
0x0000d02d      4885c9         test rcx, rcx
0x0000d030      0f844a020000   je 0xd280
0x0000d036      4c8b7d88       mov r15, qword [rbp - 0x78]
0x0000d03a      498b542430     mov rdx, qword [r12 + 0x30]
0x0000d03f      498b442408     mov rax, qword [r12 + 8]
0x0000d044      4c29fa         sub rdx, r15
0x0000d047      4839d1         cmp rcx, rdx
0x0000d04a      0f8fe6010000   jg 0xd236
0x0000d050      4a8d3438       lea rsi, [rax + r15]
0x0000d054      4801c7         add rdi, rax
0x0000d057      4889ca         mov rdx, rcx
0x0000d05a      48898d60ffff.  mov qword [rbp - 0xa0], rcx
0x0000d061      e81a4affff     call sym.imp.memcmp
0x0000d066      85c0           test eax, eax
0x0000d068      488b8d60ffff.  mov rcx, qword [rbp - 0xa0]
0x0000d06f      0f85c1010000   jne 0xd236
0x0000d075      498b4618       mov rax, qword [r14 + 0x18]
0x0000d079      498d140f       lea rdx, [r15 + rcx]
0x0000d07d      488b1cd8       mov rbx, qword [rax + rbx*8]
0x0000d081      e964fdffff     jmp 0xcdea
0x0000d086      662e0f1f8400.  nop word cs:[rax + rax]
0x0000d090      488bb538ffff.  mov rsi, qword [rbp - 0xc8]
0x0000d097      488b7d98       mov rdi, qword [rbp - 0x68]
0x0000d09b      4889da         mov rdx, rbx
0x0000d09e      4d89e6         mov r14, r12
0x0000d0a1      4c8ba560ffff.  mov r12, qword [rbp - 0xa0]
0x0000d0a8      e833aaffff     call sym.re_node_set_contains.isra.3
0x0000d0ad      4885c0         test rax, rax
0x0000d0b0      0f85ba010000   jne 0xd270
0x0000d0b6      488b8d78ffff.  mov rcx, qword [rbp - 0x88]
0x0000d0bd      4885c9         test rcx, rcx
0x0000d0c0      0f8476fdffff   je 0xce3c
0x0000d0c6      4c8b39         mov r15, qword [rcx]
0x0000d0c9      488b5588       mov rdx, qword [rbp - 0x78]
0x0000d0cd      498d4701       lea rax, [r15 + 1]
0x0000d0d1      483b4108       cmp rax, qword [rcx + 8]
0x0000d0d5      488901         mov qword [rcx], rax
0x0000d0d8      0f847f030000   je 0xd45d
0x0000d0de      488b4110       mov rax, qword [rcx + 0x10]
0x0000d0e2      4f8d3c7f       lea r15, [r15 + r15*2]
0x0000d0e6      49c1e704       shl r15, 4
0x0000d0ea      4901c7         add r15, rax
0x0000d0ed      4d897708       mov qword [r15 + 8], r14
0x0000d0f1      4c8bb548ffff.  mov r14, qword [rbp - 0xb8]
0x0000d0f8      498917         mov qword [r15], rdx
0x0000d0fb      4c89f7         mov rdi, r14
0x0000d0fe      e8fd49ffff     call sym.imp.malloc
0x0000d103      4885c0         test rax, rax
0x0000d106      49894710       mov qword [r15 + 0x10], rax
0x0000d10a      7426           je 0xd132
0x0000d10c      4c89f2         mov rdx, r14
0x0000d10f      4c89ee         mov rsi, r13
0x0000d112      4889c7         mov rdi, rax
0x0000d115      e8b649ffff     call sym.imp.memcpy
0x0000d11a      488bb558ffff.  mov rsi, qword [rbp - 0xa8]
0x0000d121      498d7f18       lea rdi, [r15 + 0x18]
0x0000d125      e816bbffff     call sym.re_node_set_init_copy
0x0000d12a      85c0           test eax, eax
0x0000d12c      0f840afdffff   je 0xce3c
0x0000d132      488b7da0       mov rdi, qword [rbp - 0x60]
0x0000d136      e89547ffff     call sym.imp.free
0x0000d13b      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x0000d142      0f8593030000   jne 0xd4db
0x0000d148      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x0000d14f      e84ce0ffff     call sym.free_fail_stack_return.part.24
0x0000d154      b80c000000     mov eax, 0xc
0x0000d159      e90b020000     jmp 0xd369
0x0000d15e      6690           nop
0x0000d160      4883bd78ffff.  cmp qword [rbp - 0x88], 0
0x0000d168      0f842e030000   je 0xd49c
0x0000d16e      488b8d68ffff.  mov rcx, qword [rbp - 0x98]
0x0000d175      4885c9         test rcx, rcx
0x0000d178      7420           je 0xd19a
0x0000d17a      4c89e8         mov rax, r13
0x0000d17d      31d2           xor edx, edx
0x0000d17f      90             nop
0x0000d180      48833800       cmp qword [rax], 0
0x0000d184      7807           js 0xd18d
0x0000d186      48837808ff     cmp qword [rax + 8], 0xffffffffffffffff
0x0000d18b      7453           je 0xd1e0
0x0000d18d      4883c201       add rdx, 1
0x0000d191      4883c010       add rax, 0x10
0x0000d195      4839d1         cmp rcx, rdx
0x0000d198      75e6           jne 0xd180
0x0000d19a      488b7da0       mov rdi, qword [rbp - 0x60]
0x0000d19e      e82d47ffff     call sym.imp.free
0x0000d1a3      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x0000d1aa      0f8574030000   jne 0xd524
0x0000d1b0      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x0000d1b7      e8e4dfffff     call sym.free_fail_stack_return.part.24
0x0000d1bc      31c0           xor eax, eax
0x0000d1be      e9a6010000     jmp 0xd369
0x0000d1c3      0f1f440000     nop dword [rax + rax]
0x0000d1c8      4885c9         test rcx, rcx
0x0000d1cb      0f84af000000   je 0xd280
0x0000d1d1      4c8b7d88       mov r15, qword [rbp - 0x78]
0x0000d1d5      e99bfeffff     jmp 0xd075
0x0000d1da      660f1f440000   nop word [rax + rax]
0x0000d1e0      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x0000d1e7      4c8b8d58ffff.  mov r9, qword [rbp - 0xa8]
0x0000d1ee      4d89e8         mov r8, r13
0x0000d1f1      488b8d68ffff.  mov rcx, qword [rbp - 0x98]
0x0000d1f8      488b9550ffff.  mov rdx, qword [rbp - 0xb0]
0x0000d1ff      488d7710       lea rsi, [rdi + 0x10]
0x0000d203      e8e8dfffff     call sym.pop_fail_stack.isra.25
0x0000d208      4989c1         mov r9, rax
0x0000d20b      4889c3         mov rbx, rax
0x0000d20e      4989c7         mov r15, rax
0x0000d211      49c1e104       shl r9, 4
0x0000d215      e972fbffff     jmp 0xcd8c
0x0000d21a      4883fbfe       cmp rbx, 0xfffffffffffffffe
0x0000d21e      0f84a4010000   je 0xd3c8
0x0000d224      0f1f4000       nop dword [rax]
0x0000d228      4883bd78ffff.  cmp qword [rbp - 0x88], 0
0x0000d230      0f84b6020000   je 0xd4ec
0x0000d236      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x0000d23d      488b8d68ffff.  mov rcx, qword [rbp - 0x98]
0x0000d244      488d5588       lea rdx, [rbp - 0x78]
0x0000d248      4c8b8d58ffff.  mov r9, qword [rbp - 0xa8]
0x0000d24f      4d89e8         mov r8, r13
0x0000d252      488d7710       lea rsi, [rdi + 0x10]
0x0000d256      e895dfffff     call sym.pop_fail_stack.isra.25
0x0000d25b      488b4d88       mov rcx, qword [rbp - 0x78]
0x0000d25f      4889c3         mov rbx, rax
0x0000d262      e9f4faffff     jmp 0xcd5b
0x0000d267      660f1f840000.  nop word [rax + rax]
0x0000d270      4c89f3         mov rbx, r14
0x0000d273      e9c4fbffff     jmp 0xce3c
0x0000d278      0f1f84000000.  nop dword [rax + rax]
0x0000d280      488bbd58ffff.  mov rdi, qword [rbp - 0xa8]
0x0000d287      4889de         mov rsi, rbx
0x0000d28a      4c898d60ffff.  mov qword [rbp - 0xa0], r9
0x0000d291      e80a93ffff     call sym.re_node_set_insert
0x0000d296      84c0           test al, al
0x0000d298      0f842a010000   je 0xd3c8
0x0000d29e      498b5628       mov rdx, qword [r14 + 0x28]
0x0000d2a2      488d045b       lea rax, [rbx + rbx*2]
0x0000d2a6      488b4d88       mov rcx, qword [rbp - 0x78]
0x0000d2aa      488d04c2       lea rax, [rdx + rax*8]
0x0000d2ae      48898d28ffff.  mov qword [rbp - 0xd8], rcx
0x0000d2b5      488b4010       mov rax, qword [rax + 0x10]
0x0000d2b9      488b18         mov rbx, qword [rax]
0x0000d2bc      498b8424b800.  mov rax, qword [r12 + 0xb8]
0x0000d2c4      488b04c8       mov rax, qword [rax + rcx*8]
0x0000d2c8      4889da         mov rdx, rbx
0x0000d2cb      488b7810       mov rdi, qword [rax + 0x10]
0x0000d2cf      488d7018       lea rsi, [rax + 0x18]
0x0000d2d3      e808a8ffff     call sym.re_node_set_contains.isra.3
0x0000d2d8      4885c0         test rax, rax
0x0000d2db      0f855bfbffff   jne 0xce3c
0x0000d2e1      4c8b8d60ffff.  mov r9, qword [rbp - 0xa0]
0x0000d2e8      498b36         mov rsi, qword [r14]
0x0000d2eb      488b8d28ffff.  mov rcx, qword [rbp - 0xd8]
0x0000d2f2      4c01ce         add rsi, r9
0x0000d2f5      e9c3faffff     jmp 0xcdbd
0x0000d2fa      660f1f440000   nop word [rax + rax]
0x0000d300      488b9548ffff.  mov rdx, qword [rbp - 0xb8]
0x0000d307      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x0000d30e      4c89ee         mov rsi, r13
0x0000d311      48894808       mov qword [rax + 8], rcx
0x0000d315      4c898d28ffff.  mov qword [rbp - 0xd8], r9
0x0000d31c      48898d60ffff.  mov qword [rbp - 0xa0], rcx
0x0000d323      e8a847ffff     call sym.imp.memcpy
0x0000d328      498b4508       mov rax, qword [r13 + 8]
0x0000d32c      488b8d60ffff.  mov rcx, qword [rbp - 0xa0]
0x0000d333      4c8b8d28ffff.  mov r9, qword [rbp - 0xd8]
0x0000d33a      e93afaffff     jmp 0xcd79
0x0000d33f      90             nop
0x0000d340      488b7da0       mov rdi, qword [rbp - 0x60]
0x0000d344      e88745ffff     call sym.imp.free
0x0000d349      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x0000d350      0f85d6000000   jne 0xd42c
0x0000d356      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x0000d35d      4885ff         test rdi, rdi
0x0000d360      7405           je 0xd367
0x0000d362      e839deffff     call sym.free_fail_stack_return.part.24
0x0000d367      31c0           xor eax, eax
0x0000d369      488b5dc8       mov rbx, qword [rbp - 0x38]
0x0000d36d      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000d376      0f85b9010000   jne 0xd535
0x0000d37c      488d65d8       lea rsp, [rbp - 0x28]
0x0000d380      5b             pop rbx
0x0000d381      415c           pop r12
0x0000d383      415d           pop r13
0x0000d385      415e           pop r14
0x0000d387      415f           pop r15
0x0000d389      5d             pop rbp
0x0000d38a      c3             ret
0x0000d38b      488b9548ffff.  mov rdx, qword [rbp - 0xb8]
0x0000d392      4889fe         mov rsi, rdi
0x0000d395      4c89ef         mov rdi, r13
0x0000d398      48898d28ffff.  mov qword [rbp - 0xd8], rcx
0x0000d39f      4c898d60ffff.  mov qword [rbp - 0xa0], r9
0x0000d3a6      e82547ffff     call sym.imp.memcpy
0x0000d3ab      498b4508       mov rax, qword [r13 + 8]
0x0000d3af      4c8b8d60ffff.  mov r9, qword [rbp - 0xa0]
0x0000d3b6      488b8d28ffff.  mov rcx, qword [rbp - 0xd8]
0x0000d3bd      e9b7f9ffff     jmp 0xcd79
0x0000d3c2      660f1f440000   nop word [rax + rax]
0x0000d3c8      488b7da0       mov rdi, qword [rbp - 0x60]
0x0000d3cc      e8ff44ffff     call sym.imp.free
0x0000d3d1      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x0000d3d8      0f85fd000000   jne 0xd4db
0x0000d3de      4883bd78ffff.  cmp qword [rbp - 0x88], 0
0x0000d3e6      0f855cfdffff   jne 0xd148
0x0000d3ec      b80c000000     mov eax, 0xc
0x0000d3f1      e973ffffff     jmp 0xd369
0x0000d3f6      488bbd48ffff.  mov rdi, qword [rbp - 0xb8]
0x0000d3fd      e8fe46ffff     call sym.imp.malloc
0x0000d402      4885c0         test rax, rax
0x0000d405      48898540ffff.  mov qword [rbp - 0xc0], rax
0x0000d40c      c68537ffffff.  mov byte [rbp - 0xc9], 1
0x0000d413      0f850ef9ffff   jne 0xcd27
0x0000d419      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x0000d420      4885ff         test rdi, rdi
0x0000d423      74c7           je 0xd3ec
0x0000d425      e876ddffff     call sym.free_fail_stack_return.part.24
0x0000d42a      ebc0           jmp 0xd3ec
0x0000d42c      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x0000d433      e89844ffff     call sym.imp.free
0x0000d438      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x0000d43f      4885ff         test rdi, rdi
0x0000d442      0f851affffff   jne 0xd362
0x0000d448      e91affffff     jmp 0xd367
0x0000d44d      48c78578ffff.  mov qword [rbp - 0x88], 0
0x0000d458      e970f8ffff     jmp 0xcccd
0x0000d45d      488d3440       lea rsi, [rax + rax*2]
0x0000d461      488b8578ffff.  mov rax, qword [rbp - 0x88]
0x0000d468      48899560ffff.  mov qword [rbp - 0xa0], rdx
0x0000d46f      48c1e605       shl rsi, 5
0x0000d473      488b7810       mov rdi, qword [rax + 0x10]
0x0000d477      e8e446ffff     call sym.imp.realloc
0x0000d47c      4885c0         test rax, rax
0x0000d47f      7444           je 0xd4c5
0x0000d481      488b8d78ffff.  mov rcx, qword [rbp - 0x88]
0x0000d488      488b9560ffff.  mov rdx, qword [rbp - 0xa0]
0x0000d48f      48d16108       shl qword [rcx + 8], 1
0x0000d493      48894110       mov qword [rcx + 0x10], rax
0x0000d497      e946fcffff     jmp 0xd0e2
0x0000d49c      488b7da0       mov rdi, qword [rbp - 0x60]
0x0000d4a0      e82b44ffff     call sym.imp.free
0x0000d4a5      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x0000d4ac      0f84b5feffff   je 0xd367
0x0000d4b2      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x0000d4b9      e81244ffff     call sym.imp.free
0x0000d4be      31c0           xor eax, eax
0x0000d4c0      e9a4feffff     jmp 0xd369
0x0000d4c5      488b7da0       mov rdi, qword [rbp - 0x60]
0x0000d4c9      e80244ffff     call sym.imp.free
0x0000d4ce      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x0000d4d5      0f846dfcffff   je 0xd148
0x0000d4db      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x0000d4e2      e8e943ffff     call sym.imp.free
0x0000d4e7      e9f2feffff     jmp 0xd3de
0x0000d4ec      488b7da0       mov rdi, qword [rbp - 0x60]
0x0000d4f0      e8db43ffff     call sym.imp.free
0x0000d4f5      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x0000d4fc      b801000000     mov eax, 1
0x0000d501      0f8462feffff   je 0xd369
0x0000d507      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x0000d50e      898578ffffff   mov dword [rbp - 0x88], eax
0x0000d514      e8b743ffff     call sym.imp.free
0x0000d519      8b8578ffffff   mov eax, dword [rbp - 0x88]
0x0000d51f      e945feffff     jmp 0xd369
0x0000d524      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x0000d52b      e8a043ffff     call sym.imp.free
0x0000d530      e97bfcffff     jmp 0xd1b0
0x0000d535      e8a644ffff     call sym.imp.__stack_chk_fail
0x0000d53a      660f1f440000   nop word [rax + rax]
;-- get_subexp_sub.isra.32:
0x0000d540      4157           push r15
0x0000d542      4156           push r14
0x0000d544      4989ce         mov r14, rcx
0x0000d547      4155           push r13
0x0000d549      4154           push r12
0x0000d54b      4989f5         mov r13, rsi
0x0000d54e      55             push rbp
0x0000d54f      53             push rbx
0x0000d550      488d7210       lea rsi, [rdx + 0x10]
0x0000d554      4889d5         mov rbp, rdx
0x0000d557      4d89c1         mov r9, r8
0x0000d55a      4d89c4         mov r12, r8
0x0000d55d      4883ec20       sub rsp, 0x20
0x0000d561      488b4a08       mov rcx, qword [rdx + 8]
0x0000d565      4d89f0         mov r8, r14
0x0000d568      6a08           push 8
0x0000d56a      488b12         mov rdx, qword [rdx]
0x0000d56d      4889fb         mov rbx, rdi
0x0000d570      e87befffff     call sym.check_arrival
0x0000d575      85c0           test eax, eax
0x0000d577      5a             pop rdx
0x0000d578      59             pop rcx
0x0000d579      7415           je 0xd590
0x0000d57b      4883c418       add rsp, 0x18
0x0000d57f      5b             pop rbx
0x0000d580      5d             pop rbp
0x0000d581      415c           pop r12
0x0000d583      415d           pop r13
0x0000d585      415e           pop r14
0x0000d587      415f           pop r15
0x0000d589      c3             ret
0x0000d58a      660f1f440000   nop word [rax + rax]
0x0000d590      488b83c80000.  mov rax, qword [rbx + 0xc8]
0x0000d597      488b93d00000.  mov rdx, qword [rbx + 0xd0]
0x0000d59e      4c8b7d08       mov r15, qword [rbp + 8]
0x0000d5a2      498b4d00       mov rcx, qword [r13]
0x0000d5a6      488bbbd80000.  mov rdi, qword [rbx + 0xd8]
0x0000d5ad      4839d0         cmp rax, rdx
0x0000d5b0      4c89fe         mov rsi, r15
0x0000d5b3      0f8d97000000   jge 0xd650
0x0000d5b9      488d1480       lea rdx, [rax + rax*4]
0x0000d5bd      48c1e203       shl rdx, 3
0x0000d5c1      4885c0         test rax, rax
0x0000d5c4      7e0b           jle 0xd5d1
0x0000d5c6      4c8d4417d8     lea r8, [rdi + rdx - 0x28]
0x0000d5cb      4d3b6008       cmp r12, qword [r8 + 8]
0x0000d5cf      746f           je 0xd640
0x0000d5d1      4801d7         add rdi, rdx
0x0000d5d4      31d2           xor edx, edx
0x0000d5d6      4939cf         cmp r15, rcx
0x0000d5d9      0f94c2         sete dl
0x0000d5dc      4883c001       add rax, 1
0x0000d5e0      4c8937         mov qword [rdi], r14
0x0000d5e3      f7da           neg edx
0x0000d5e5      4c896708       mov qword [rdi + 8], r12
0x0000d5e9      48894f10       mov qword [rdi + 0x10], rcx
0x0000d5ed      66895722       mov word [rdi + 0x22], dx
0x0000d5f1      4c897f18       mov qword [rdi + 0x18], r15
0x0000d5f5      488983c80000.  mov qword [rbx + 0xc8], rax
0x0000d5fc      c6472000       mov byte [rdi + 0x20], 0
0x0000d600      4c89f8         mov rax, r15
0x0000d603      486393e00000.  movsxd rdx, dword [rbx + 0xe0]
0x0000d60a      4829c8         sub rax, rcx
0x0000d60d      4839c2         cmp rdx, rax
0x0000d610      7d0a           jge 0xd61c
0x0000d612      4129cf         sub r15d, ecx
0x0000d615      4489bbe00000.  mov dword [rbx + 0xe0], r15d
0x0000d61c      4c01e6         add rsi, r12
0x0000d61f      492b7500       sub rsi, qword [r13]
0x0000d623      4883c418       add rsp, 0x18
0x0000d627      4889df         mov rdi, rbx
0x0000d62a      5b             pop rbx
0x0000d62b      5d             pop rbp
0x0000d62c      415c           pop r12
0x0000d62e      415d           pop r13
0x0000d630      415e           pop r14
0x0000d632      415f           pop r15
0x0000d634      e9379bffff     jmp sym.clean_state_log_if_needed
0x0000d639      0f1f80000000.  nop dword [rax]
0x0000d640      41c6402001     mov byte [r8 + 0x20], 1
0x0000d645      eb8a           jmp 0xd5d1
0x0000d647      660f1f840000.  nop word [rax + rax]
0x0000d650      488d3492       lea rsi, [rdx + rdx*4]
0x0000d654      48894c2408     mov qword [rsp + 8], rcx
0x0000d659      48c1e604       shl rsi, 4
0x0000d65d      e8fe44ffff     call sym.imp.realloc
0x0000d662      4885c0         test rax, rax
0x0000d665      488b4c2408     mov rcx, qword [rsp + 8]
0x0000d66a      7454           je 0xd6c0
0x0000d66c      488bb3c80000.  mov rsi, qword [rbx + 0xc8]
0x0000d673      488b93d00000.  mov rdx, qword [rbx + 0xd0]
0x0000d67a      488983d80000.  mov qword [rbx + 0xd8], rax
0x0000d681      48894c2408     mov qword [rsp + 8], rcx
0x0000d686      488d34b6       lea rsi, [rsi + rsi*4]
0x0000d68a      488d1492       lea rdx, [rdx + rdx*4]
0x0000d68e      488d3cf0       lea rdi, [rax + rsi*8]
0x0000d692      48c1e203       shl rdx, 3
0x0000d696      31f6           xor esi, esi
0x0000d698      e8c343ffff     call sym.imp.memset
0x0000d69d      48d1a3d00000.  shl qword [rbx + 0xd0], 1
0x0000d6a4      488b83c80000.  mov rax, qword [rbx + 0xc8]
0x0000d6ab      488bbbd80000.  mov rdi, qword [rbx + 0xd8]
0x0000d6b2      488b7508       mov rsi, qword [rbp + 8]
0x0000d6b6      488b4c2408     mov rcx, qword [rsp + 8]
0x0000d6bb      e9f9feffff     jmp 0xd5b9
0x0000d6c0      488bbbd80000.  mov rdi, qword [rbx + 0xd8]
0x0000d6c7      e80442ffff     call sym.imp.free
0x0000d6cc      b80c000000     mov eax, 0xc
0x0000d6d1      e9a5feffff     jmp 0xd57b
0x0000d6d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- transit_state_bkref.isra.34:
0x0000d6e0      4157           push r15
0x0000d6e2      4156           push r14
0x0000d6e4      4155           push r13
0x0000d6e6      4154           push r12
0x0000d6e8      55             push rbp
0x0000d6e9      53             push rbx
0x0000d6ea      4881ecb80000.  sub rsp, 0xb8
0x0000d6f1      4c8b7f48       mov r15, qword [rdi + 0x48]
0x0000d6f5      64488b042528.  mov rax, qword fs:[0x28]
0x0000d6fe      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000d706      31c0           xor eax, eax
0x0000d708      48833e00       cmp qword [rsi], 0
0x0000d70c      488b87980000.  mov rax, qword [rdi + 0x98]
0x0000d713      4889742448     mov qword [rsp + 0x48], rsi
0x0000d718      4889542440     mov qword [rsp + 0x40], rdx
0x0000d71d      4889442438     mov qword [rsp + 0x38], rax
0x0000d722      0f8e28030000   jle 0xda50
0x0000d728      4a8d04fd0000.  lea rax, [r15*8]
0x0000d730      4989fe         mov r14, rdi
0x0000d733      48c704240000.  mov qword [rsp], 0
0x0000d73b      4c897c2408     mov qword [rsp + 8], r15
0x0000d740      4889442460     mov qword [rsp + 0x60], rax
0x0000d745      488d84249000.  lea rax, [rsp + 0x90]
0x0000d74d      4889442468     mov qword [rsp + 0x68], rax
0x0000d752      488d84248c00.  lea rax, [rsp + 0x8c]
0x0000d75a      4889442478     mov qword [rsp + 0x78], rax
0x0000d75f      eb46           jmp 0xd7a7
0x0000d761      0f1f80000000.  nop dword [rax]
0x0000d768      a801           test al, 1
0x0000d76a      7424           je 0xd790
0x0000d76c      83e208         and edx, 8
0x0000d76f      751f           jne 0xd790
0x0000d771      f6c120         test cl, 0x20                           ; "@"
0x0000d774      7404           je 0xd77a
0x0000d776      a802           test al, 2
0x0000d778      7416           je 0xd790
0x0000d77a      81e180000000   and ecx, 0x80
0x0000d780      0f849a000000   je 0xd820
0x0000d786      a808           test al, 8
0x0000d788      0f8592000000   jne 0xd820
0x0000d78e      6690           nop
0x0000d790      488b7c2448     mov rdi, qword [rsp + 0x48]
0x0000d795      4883042401     add qword [rsp], 1
0x0000d79a      488b0424       mov rax, qword [rsp]
0x0000d79e      483b07         cmp rax, qword [rdi]
0x0000d7a1      0f8da9020000   jge 0xda50
0x0000d7a7      488b442440     mov rax, qword [rsp + 0x40]
0x0000d7ac      488b3c24       mov rdi, qword [rsp]
0x0000d7b0      488b00         mov rax, qword [rax]
0x0000d7b3      4c8b2cf8       mov r13, qword [rax + rdi*8]
0x0000d7b7      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000d7bc      488b07         mov rax, qword [rdi]
0x0000d7bf      4c89eb         mov rbx, r13
0x0000d7c2      48c1e304       shl rbx, 4
0x0000d7c6      4801d8         add rax, rbx
0x0000d7c9      80780804       cmp byte [rax + 8], 4
0x0000d7cd      75c1           jne 0xd790
0x0000d7cf      8b6808         mov ebp, dword [rax + 8]
0x0000d7d2      f7c500ff0300   test ebp, 0x3ff00
0x0000d7d8      7446           je 0xd820
0x0000d7da      418b96a00000.  mov edx, dword [r14 + 0xa0]
0x0000d7e1      488b742408     mov rsi, qword [rsp + 8]
0x0000d7e6      4c89f7         mov rdi, r14
0x0000d7e9      e8d2c0ffff     call sym.re_string_context_at
0x0000d7ee      89ea           mov edx, ebp
0x0000d7f0      c1ea08         shr edx, 8
0x0000d7f3      89d1           mov ecx, edx
0x0000d7f5      6681e1ff03     and cx, 0x3ff
0x0000d7fa      f6c204         test dl, 4
0x0000d7fd      0f8565ffffff   jne 0xd768
0x0000d803      83e208         and edx, 8
0x0000d806      0f8465ffffff   je 0xd771
0x0000d80c      a801           test al, 1
0x0000d80e      0f845dffffff   je 0xd771
0x0000d814      e977ffffff     jmp 0xd790
0x0000d819      0f1f80000000.  nop dword [rax]
0x0000d820      498bbec80000.  mov rdi, qword [r14 + 0xc8]
0x0000d827      498b86980000.  mov rax, qword [r14 + 0x98]
0x0000d82e      31c9           xor ecx, ecx
0x0000d830      4d8b5608       mov r10, qword [r14 + 8]
0x0000d834      4c8b4c2408     mov r9, qword [rsp + 8]
0x0000d839      48897c2470     mov qword [rsp + 0x70], rdi
0x0000d83e      4889442450     mov qword [rsp + 0x50], rax
0x0000d843      4839f9         cmp rcx, rdi
0x0000d846      7d53           jge 0xd89b
0x0000d848      488d0439       lea rax, [rcx + rdi]
0x0000d84c      4d8b9ed80000.  mov r11, qword [r14 + 0xd8]
0x0000d853      4889c6         mov rsi, rax
0x0000d856      48c1ee3f       shr rsi, 0x3f
0x0000d85a      4801c6         add rsi, rax
0x0000d85d      48d1fe         sar rsi, 1
0x0000d860      488d04b6       lea rax, [rsi + rsi*4]
0x0000d864      4d3b4cc308     cmp r9, qword [r11 + rax*8 + 8]
0x0000d869      7e2b           jle 0xd896
0x0000d86b      e9c8010000     jmp 0xda38
0x0000d870      488d140e       lea rdx, [rsi + rcx]
0x0000d874      4889d0         mov rax, rdx
0x0000d877      48c1e83f       shr rax, 0x3f
0x0000d87b      4801d0         add rax, rdx
0x0000d87e      48d1f8         sar rax, 1
0x0000d881      488d1480       lea rdx, [rax + rax*4]
0x0000d885      4989c0         mov r8, rax
0x0000d888      4d3b4cd308     cmp r9, qword [r11 + rdx*8 + 8]
0x0000d88d      0f8fad010000   jg 0xda40
0x0000d893      4889c6         mov rsi, rax
0x0000d896      4839ce         cmp rsi, rcx
0x0000d899      7fd5           jg 0xd870
0x0000d89b      48394c2470     cmp qword [rsp + 0x70], rcx
0x0000d8a0      7e24           jle 0xd8c6
0x0000d8a2      498b96d80000.  mov rdx, qword [r14 + 0xd8]
0x0000d8a9      488d0489       lea rax, [rcx + rcx*4]
0x0000d8ad      488b7c2408     mov rdi, qword [rsp + 8]
0x0000d8b2      488d04c2       lea rax, [rdx + rax*8]
0x0000d8b6      48397808       cmp qword [rax + 8], rdi
0x0000d8ba      750a           jne 0xd8c6
0x0000d8bc      4883f9ff       cmp rcx, 0xffffffffffffffff
0x0000d8c0      0f85d0010000   jne 0xda96
0x0000d8c6      488b442450     mov rax, qword [rsp + 0x50]
0x0000d8cb      4983bee80000.  cmp qword [r14 + 0xe8], 0
0x0000d8d3      488b10         mov rdx, qword [rax]
0x0000d8d6      488b041a       mov rax, qword [rdx + rbx]
0x0000d8da      4889442458     mov qword [rsp + 0x58], rax
0x0000d8df      0f8eb6010000   jle 0xda9b
0x0000d8e5      4c896c2430     mov qword [rsp + 0x30], r13
0x0000d8ea      48c744242800.  mov qword [rsp + 0x28], 0
0x0000d8f3      4d89d5         mov r13, r10
0x0000d8f6      498b86f80000.  mov rax, qword [r14 + 0xf8]
0x0000d8fd      488b5c2428     mov rbx, qword [rsp + 0x28]
0x0000d902      488b7c2458     mov rdi, qword [rsp + 0x58]
0x0000d907      488b1cd8       mov rbx, qword [rax + rbx*8]
0x0000d90b      488b4308       mov rax, qword [rbx + 8]
0x0000d90f      48c1e004       shl rax, 4
0x0000d913      483b3c02       cmp rdi, qword [rdx + rax]
0x0000d917      7427           je 0xd940
0x0000d919      488344242801   add qword [rsp + 0x28], 1
0x0000d91f      488b442428     mov rax, qword [rsp + 0x28]
0x0000d924      493b86e80000.  cmp rax, qword [r14 + 0xe8]
0x0000d92b      0f8d70060000   jge 0xdfa1
0x0000d931      488b442450     mov rax, qword [rsp + 0x50]
0x0000d936      488b10         mov rdx, qword [rax]
0x0000d939      ebbb           jmp 0xd8f6
0x0000d93b      0f1f440000     nop dword [rax + rax]
0x0000d940      48837b2000     cmp qword [rbx + 0x20], 0
0x0000d945      4c8b1b         mov r11, qword [rbx]
0x0000d948      0f8e64060000   jle 0xdfb2
0x0000d94e      488b4c2408     mov rcx, qword [rsp + 8]
0x0000d953      4d89e8         mov r8, r13
0x0000d956      31ed           xor ebp, ebp
0x0000d958      4989dd         mov r13, rbx
0x0000d95b      4889cb         mov rbx, rcx
0x0000d95e      eb6c           jmp 0xd9cc
0x0000d960      4b8d3418       lea rsi, [r8 + r11]
0x0000d964      498d3c18       lea rdi, [r8 + rbx]
0x0000d968      4c894c2420     mov qword [rsp + 0x20], r9
0x0000d96d      4c895c2418     mov qword [rsp + 0x18], r11
0x0000d972      4c89442410     mov qword [rsp + 0x10], r8
0x0000d977      e80441ffff     call sym.imp.memcmp
0x0000d97c      85c0           test eax, eax
0x0000d97e      4c8b442410     mov r8, qword [rsp + 0x10]
0x0000d983      4c8b5c2418     mov r11, qword [rsp + 0x18]
0x0000d988      4c8b4c2420     mov r9, qword [rsp + 0x20]
0x0000d98d      0f85c5040000   jne 0xde58
0x0000d993      4c8b442408     mov r8, qword [rsp + 8]
0x0000d998      488b4c2430     mov rcx, qword [rsp + 0x30]
0x0000d99d      4c89ca         mov rdx, r9
0x0000d9a0      4c89ee         mov rsi, r13
0x0000d9a3      4c89f7         mov rdi, r14
0x0000d9a6      e895fbffff     call sym.get_subexp_sub.isra.32
0x0000d9ab      83f801         cmp eax, 1
0x0000d9ae      4d8b4608       mov r8, qword [r14 + 8]
0x0000d9b2      0f87a0000000   ja 0xda58
0x0000d9b8      4883c501       add rbp, 1
0x0000d9bc      493b6d20       cmp rbp, qword [r13 + 0x20]
0x0000d9c0      4d89fb         mov r11, r15
0x0000d9c3      4c89e3         mov rbx, r12
0x0000d9c6      0f8dac020000   jge 0xdc78
0x0000d9cc      498b4528       mov rax, qword [r13 + 0x28]
0x0000d9d0      4c8b0ce8       mov r9, qword [rax + rbp*8]
0x0000d9d4      4d8b7908       mov r15, qword [r9 + 8]
0x0000d9d8      4c89fa         mov rdx, r15
0x0000d9db      4c29da         sub rdx, r11
0x0000d9de      4885d2         test rdx, rdx
0x0000d9e1      4c8d241a       lea r12, [rdx + rbx]
0x0000d9e5      7eac           jle 0xd993
0x0000d9e7      4d396630       cmp qword [r14 + 0x30], r12
0x0000d9eb      0f8d6fffffff   jge 0xd960
0x0000d9f1      4d396658       cmp qword [r14 + 0x58], r12
0x0000d9f5      4889542418     mov qword [rsp + 0x18], rdx
0x0000d9fa      4c894c2410     mov qword [rsp + 0x10], r9
0x0000d9ff      0f8c53040000   jl 0xde58
0x0000da05      4c89e6         mov rsi, r12
0x0000da08      4c89f7         mov rdi, r14
0x0000da0b      4c895c2420     mov qword [rsp + 0x20], r11
0x0000da10      e85b97ffff     call sym.clean_state_log_if_needed
0x0000da15      85c0           test eax, eax
0x0000da17      753f           jne 0xda58
0x0000da19      4d8b4608       mov r8, qword [r14 + 8]
0x0000da1d      488b542418     mov rdx, qword [rsp + 0x18]
0x0000da22      4c8b4c2410     mov r9, qword [rsp + 0x10]
0x0000da27      4c8b5c2420     mov r11, qword [rsp + 0x20]
0x0000da2c      e92fffffff     jmp 0xd960
0x0000da31      0f1f80000000.  nop dword [rax]
0x0000da38      4989f0         mov r8, rsi
0x0000da3b      4889fe         mov rsi, rdi
0x0000da3e      6690           nop
0x0000da40      498d4801       lea rcx, [r8 + 1]
0x0000da44      4889f7         mov rdi, rsi
0x0000da47      e9f7fdffff     jmp 0xd843
0x0000da4c      0f1f4000       nop dword [rax]
0x0000da50      31c0           xor eax, eax
0x0000da52      660f1f440000   nop word [rax + rax]
0x0000da58      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x0000da60      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000da69      0f854d050000   jne 0xdfbc
0x0000da6f      4881c4b80000.  add rsp, 0xb8
0x0000da76      5b             pop rbx
0x0000da77      5d             pop rbp
0x0000da78      415c           pop r12
0x0000da7a      415d           pop r13
0x0000da7c      415e           pop r14
0x0000da7e      415f           pop r15
0x0000da80      c3             ret
0x0000da81      0f1f80000000.  nop dword [rax]
0x0000da88      4883c028       add rax, 0x28
0x0000da8c      8078f800       cmp byte [rax - 8], 0
0x0000da90      0f8430feffff   je 0xd8c6
0x0000da96      4c3b28         cmp r13, qword [rax]
0x0000da99      75ed           jne 0xda88
0x0000da9b      488b442470     mov rax, qword [rsp + 0x70]
0x0000daa0      4839442470     cmp qword [rsp + 0x70], rax
0x0000daa5      c784248c0000.  mov dword [rsp + 0x8c], 0
0x0000dab0      0f8ddafcffff   jge 0xd790
0x0000dab6      4a8d04ed0000.  lea rax, [r13*8]
0x0000dabe      4c8b642470     mov r12, qword [rsp + 0x70]
0x0000dac3      488b6c2438     mov rbp, qword [rsp + 0x38]
0x0000dac8      4889442450     mov qword [rsp + 0x50], rax
0x0000dacd      4b8d446d00     lea rax, [r13 + r13*2]
0x0000dad2      4f8d04a4       lea r8, [r12 + r12*4]
0x0000dad6      48c1e003       shl rax, 3
0x0000dada      4889442458     mov qword [rsp + 0x58], rax
0x0000dadf      4e8d3cc50000.  lea r15, [r8*8]
0x0000dae7      e931010000     jmp 0xdc1d
0x0000daec      0f1f4000       nop dword [rax]
0x0000daf0      488b4d28       mov rcx, qword [rbp + 0x28]
0x0000daf4      488b7c2458     mov rdi, qword [rsp + 0x58]
0x0000daf9      488b4c3910     mov rcx, qword [rcx + rdi + 0x10]
0x0000dafe      488b09         mov rcx, qword [rcx]
0x0000db01      488d0c49       lea rcx, [rcx + rcx*2]
0x0000db05      488d0cca       lea rcx, [rdx + rcx*8]
0x0000db09      48894c2418     mov qword [rsp + 0x18], rcx
0x0000db0e      48035c2408     add rbx, qword [rsp + 8]
0x0000db13      418b96a00000.  mov edx, dword [r14 + 0xa0]
0x0000db1a      4c89f7         mov rdi, r14
0x0000db1d      4829c3         sub rbx, rax
0x0000db20      488d73ff       lea rsi, [rbx - 1]
0x0000db24      e897bdffff     call sym.re_string_context_at
0x0000db29      488b742460     mov rsi, qword [rsp + 0x60]
0x0000db2e      89c1           mov ecx, eax
0x0000db30      498b86b80000.  mov rax, qword [r14 + 0xb8]
0x0000db37      4c8d14dd0000.  lea r10, [rbx*8]
0x0000db3f      48c744241000.  mov qword [rsp + 0x10], 0
0x0000db48      4e8d1c10       lea r11, [rax + r10]
0x0000db4c      488b0430       mov rax, qword [rax + rsi]
0x0000db50      498b13         mov rdx, qword [r11]
0x0000db53      4885c0         test rax, rax
0x0000db56      7409           je 0xdb61
0x0000db58      488b4010       mov rax, qword [rax + 0x10]
0x0000db5c      4889442410     mov qword [rsp + 0x10], rax
0x0000db61      4885d2         test rdx, rdx
0x0000db64      0f8416030000   je 0xde80
0x0000db6a      488b7250       mov rsi, qword [rdx + 0x50]
0x0000db6e      488b7c2468     mov rdi, qword [rsp + 0x68]
0x0000db73      488b542418     mov rdx, qword [rsp + 0x18]
0x0000db78      4c89542430     mov qword [rsp + 0x30], r10
0x0000db7d      894c2428       mov dword [rsp + 0x28], ecx
0x0000db81      e84ab1ffff     call sym.re_node_set_init_union
0x0000db86      85c0           test eax, eax
0x0000db88      8984248c0000.  mov dword [rsp + 0x8c], eax
0x0000db8f      8b4c2428       mov ecx, dword [rsp + 0x28]
0x0000db93      4c8b542430     mov r10, qword [rsp + 0x30]
0x0000db98      0f858a030000   jne 0xdf28
0x0000db9e      4d0396b80000.  add r10, qword [r14 + 0xb8]
0x0000dba5      488b542468     mov rdx, qword [rsp + 0x68]
0x0000dbaa      4889ee         mov rsi, rbp
0x0000dbad      488b7c2478     mov rdi, qword [rsp + 0x78]
0x0000dbb2      4c89542428     mov qword [rsp + 0x28], r10
0x0000dbb7      e874b2ffff     call sym.re_acquire_state_context
0x0000dbbc      4c8b542428     mov r10, qword [rsp + 0x28]
0x0000dbc1      488bbc24a000.  mov rdi, qword [rsp + 0xa0]
0x0000dbc9      498902         mov qword [r10], rax
0x0000dbcc      e8ff3cffff     call sym.imp.free
0x0000dbd1      498b96b80000.  mov rdx, qword [r14 + 0xb8]
0x0000dbd8      48833cda00     cmp qword [rdx + rbx*8], 0
0x0000dbdd      0f84ce020000   je 0xdeb1
0x0000dbe3      48837c242000   cmp qword [rsp + 0x20], 0
0x0000dbe9      751d           jne 0xdc08
0x0000dbeb      488b442460     mov rax, qword [rsp + 0x60]
0x0000dbf0      488b5c2410     mov rbx, qword [rsp + 0x10]
0x0000dbf5      488b0402       mov rax, qword [rdx + rax]
0x0000dbf9      48395810       cmp qword [rax + 0x10], rbx
0x0000dbfd      0f8fc5020000   jg 0xdec8
0x0000dc03      0f1f440000     nop dword [rax + rax]
0x0000dc08      4983c401       add r12, 1
0x0000dc0c      4983c728       add r15, 0x28
0x0000dc10      4d3ba6c80000.  cmp r12, qword [r14 + 0xc8]
0x0000dc17      0f8d73fbffff   jge 0xd790
0x0000dc1d      498b86d80000.  mov rax, qword [r14 + 0xd8]
0x0000dc24      4c01f8         add rax, r15
0x0000dc27      4c3b28         cmp r13, qword [rax]
0x0000dc2a      75dc           jne 0xdc08
0x0000dc2c      488b7c2408     mov rdi, qword [rsp + 8]
0x0000dc31      483b7808       cmp rdi, qword [rax + 8]
0x0000dc35      75d1           jne 0xdc08
0x0000dc37      488b5818       mov rbx, qword [rax + 0x18]
0x0000dc3b      488b4010       mov rax, qword [rax + 0x10]
0x0000dc3f      488b5530       mov rdx, qword [rbp + 0x30]
0x0000dc43      4889d9         mov rcx, rbx
0x0000dc46      4829c1         sub rcx, rax
0x0000dc49      48894c2420     mov qword [rsp + 0x20], rcx
0x0000dc4e      0f849cfeffff   je 0xdaf0
0x0000dc54      488b4d18       mov rcx, qword [rbp + 0x18]
0x0000dc58      488b7c2450     mov rdi, qword [rsp + 0x50]
0x0000dc5d      488b0c39       mov rcx, qword [rcx + rdi]
0x0000dc61      488d0c49       lea rcx, [rcx + rcx*2]
0x0000dc65      488d0cca       lea rcx, [rdx + rcx*8]
0x0000dc69      48894c2418     mov qword [rsp + 0x18], rcx
0x0000dc6e      e99bfeffff     jmp 0xdb0e
0x0000dc73      0f1f440000     nop dword [rax + rax]
0x0000dc78      4c89eb         mov rbx, r13
0x0000dc7b      4d89c5         mov r13, r8
0x0000dc7e      4d8d5f01       lea r11, [r15 + 1]
0x0000dc82      4c395c2408     cmp qword [rsp + 8], r11
0x0000dc87      0f8c8cfcffff   jl 0xd919
0x0000dc8d      4c89e0         mov rax, r12
0x0000dc90      4e8d3cdd0000.  lea r15, [r11*8]
0x0000dc98      4989dc         mov r12, rbx
0x0000dc9b      4c89db         mov rbx, r11
0x0000dc9e      4d89eb         mov r11, r13
0x0000dca1      4989c5         mov r13, rax
0x0000dca4      0f1f4000       nop dword [rax]
0x0000dca8      4889d8         mov rax, rbx
0x0000dcab      492b0424       sub rax, qword [r12]
0x0000dcaf      4885c0         test rax, rax
0x0000dcb2      7e21           jle 0xdcd5
0x0000dcb4      4d396e30       cmp qword [r14 + 0x30], r13
0x0000dcb8      0f8e83020000   jle 0xdf41
0x0000dcbe      410fb64c1bff   movzx ecx, byte [r11 + rbx - 1]
0x0000dcc4      498d4501       lea rax, [r13 + 1]
0x0000dcc8      43380c2b       cmp byte [r11 + r13], cl
0x0000dccc      0f8530010000   jne 0xde02
0x0000dcd2      4989c5         mov r13, rax
0x0000dcd5      498b86b80000.  mov rax, qword [r14 + 0xb8]
0x0000dcdc      4a8b0438       mov rax, qword [rax + r15]
0x0000dce0      4885c0         test rax, rax
0x0000dce3      0f8406010000   je 0xddef
0x0000dce9      488b4810       mov rcx, qword [rax + 0x10]
0x0000dced      4885c9         test rcx, rcx
0x0000dcf0      0f8ef9000000   jle 0xddef
0x0000dcf6      488b7818       mov rdi, qword [rax + 0x18]
0x0000dcfa      488b442450     mov rax, qword [rsp + 0x50]
0x0000dcff      31d2           xor edx, edx
0x0000dd01      4c8b442458     mov r8, qword [rsp + 0x58]
0x0000dd06      488b30         mov rsi, qword [rax]
0x0000dd09      eb12           jmp 0xdd1d
0x0000dd0b      0f1f440000     nop dword [rax + rax]
0x0000dd10      4883c201       add rdx, 1
0x0000dd14      4839d1         cmp rcx, rdx
0x0000dd17      0f84d2000000   je 0xddef
0x0000dd1d      488b2cd7       mov rbp, qword [rdi + rdx*8]
0x0000dd21      4889e8         mov rax, rbp
0x0000dd24      48c1e004       shl rax, 4
0x0000dd28      4801f0         add rax, rsi
0x0000dd2b      80780809       cmp byte [rax + 8], 9
0x0000dd2f      75df           jne 0xdd10
0x0000dd31      4c3b00         cmp r8, qword [rax]
0x0000dd34      75da           jne 0xdd10
0x0000dd36      4883fdff       cmp rbp, 0xffffffffffffffff
0x0000dd3a      0f84af000000   je 0xddef
0x0000dd40      498b742410     mov rsi, qword [r12 + 0x10]
0x0000dd45      498b0c24       mov rcx, qword [r12]
0x0000dd49      4885f6         test rsi, rsi
0x0000dd4c      0f84be000000   je 0xde10
0x0000dd52      4c895c2410     mov qword [rsp + 0x10], r11
0x0000dd57      498b542408     mov rdx, qword [r12 + 8]
0x0000dd5c      4883ec08       sub rsp, 8
0x0000dd60      6a09           push 9
0x0000dd62      4989d9         mov r9, rbx
0x0000dd65      4989e8         mov r8, rbp
0x0000dd68      4c89f7         mov rdi, r14
0x0000dd6b      e880e7ffff     call sym.check_arrival
0x0000dd70      5a             pop rdx
0x0000dd71      83f801         cmp eax, 1
0x0000dd74      59             pop rcx
0x0000dd75      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x0000dd7a      7473           je 0xddef
0x0000dd7c      85c0           test eax, eax
0x0000dd7e      0f85d4fcffff   jne 0xda58
0x0000dd84      498b442420     mov rax, qword [r12 + 0x20]
0x0000dd89      493b442418     cmp rax, qword [r12 + 0x18]
0x0000dd8e      0f84d4010000   je 0xdf68
0x0000dd94      be28000000     mov esi, 0x28                           ; '('
0x0000dd99      bf01000000     mov edi, 1
0x0000dd9e      e80d3dffff     call sym.imp.calloc
0x0000dda3      4885c0         test rax, rax
0x0000dda6      0f849d000000   je 0xde49
0x0000ddac      498b542420     mov rdx, qword [r12 + 0x20]
0x0000ddb1      498b4c2428     mov rcx, qword [r12 + 0x28]
0x0000ddb6      4c89e6         mov rsi, r12
0x0000ddb9      4c8b442408     mov r8, qword [rsp + 8]
0x0000ddbe      4c89f7         mov rdi, r14
0x0000ddc1      488904d1       mov qword [rcx + rdx*8], rax
0x0000ddc5      488b4c2430     mov rcx, qword [rsp + 0x30]
0x0000ddca      4883c201       add rdx, 1
0x0000ddce      488928         mov qword [rax], rbp
0x0000ddd1      48895808       mov qword [rax + 8], rbx
0x0000ddd5      4989542420     mov qword [r12 + 0x20], rdx
0x0000ddda      4889c2         mov rdx, rax
0x0000dddd      e85ef7ffff     call sym.get_subexp_sub.isra.32
0x0000dde2      83f801         cmp eax, 1
0x0000dde5      4d8b5e08       mov r11, qword [r14 + 8]
0x0000dde9      0f8769fcffff   ja 0xda58
0x0000ddef      4883c301       add rbx, 1
0x0000ddf3      4983c708       add r15, 8
0x0000ddf7      48395c2408     cmp qword [rsp + 8], rbx
0x0000ddfc      0f8da6feffff   jge 0xdca8
0x0000de02      4d89dd         mov r13, r11
0x0000de05      e90ffbffff     jmp 0xd919
0x0000de0a      660f1f440000   nop word [rax + rax]
0x0000de10      4889de         mov rsi, rbx
0x0000de13      bf18000000     mov edi, 0x18
0x0000de18      4c895c2418     mov qword [rsp + 0x18], r11
0x0000de1d      4829ce         sub rsi, rcx
0x0000de20      48894c2410     mov qword [rsp + 0x10], rcx
0x0000de25      4883c601       add rsi, 1
0x0000de29      e8823cffff     call sym.imp.calloc
0x0000de2e      4885c0         test rax, rax
0x0000de31      4889c6         mov rsi, rax
0x0000de34      4989442410     mov qword [r12 + 0x10], rax
0x0000de39      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0000de3e      4c8b5c2418     mov r11, qword [rsp + 0x18]
0x0000de43      0f8509ffffff   jne 0xdd52
0x0000de49      b80c000000     mov eax, 0xc
0x0000de4e      e905fcffff     jmp 0xda58
0x0000de53      0f1f440000     nop dword [rax + rax]
0x0000de58      4889d9         mov rcx, rbx
0x0000de5b      4c89eb         mov rbx, r13
0x0000de5e      4d89c5         mov r13, r8
0x0000de61      48396b20       cmp qword [rbx + 0x20], rbp
0x0000de65      0f8faefaffff   jg 0xd919
0x0000de6b      4885ed         test rbp, rbp
0x0000de6e      4989cc         mov r12, rcx
0x0000de71      0f840bfeffff   je 0xdc82
0x0000de77      4d89df         mov r15, r11
0x0000de7a      e9fffdffff     jmp 0xdc7e
0x0000de7f      90             nop
0x0000de80      488b542418     mov rdx, qword [rsp + 0x18]
0x0000de85      488b7c2478     mov rdi, qword [rsp + 0x78]
0x0000de8a      4889ee         mov rsi, rbp
0x0000de8d      4c895c2428     mov qword [rsp + 0x28], r11
0x0000de92      e899afffff     call sym.re_acquire_state_context
0x0000de97      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000de9c      498b96b80000.  mov rdx, qword [r14 + 0xb8]
0x0000dea3      498903         mov qword [r11], rax
0x0000dea6      48833cda00     cmp qword [rdx + rbx*8], 0
0x0000deab      0f8532fdffff   jne 0xdbe3
0x0000deb1      8b84248c0000.  mov eax, dword [rsp + 0x8c]
0x0000deb8      85c0           test eax, eax
0x0000deba      0f8423fdffff   je 0xdbe3
0x0000dec0      e993fbffff     jmp 0xda58
0x0000dec5      0f1f00         nop dword [rax]
0x0000dec8      488b442418     mov rax, qword [rsp + 0x18]
0x0000decd      488b4c2408     mov rcx, qword [rsp + 8]
0x0000ded2      4c89f7         mov rdi, r14
0x0000ded5      4c8d4010       lea r8, [rax + 0x10]
0x0000ded9      488d5808       lea rbx, [rax + 8]
0x0000dedd      4c89c2         mov rdx, r8
0x0000dee0      4889de         mov rsi, rbx
0x0000dee3      4c89442410     mov qword [rsp + 0x10], r8
0x0000dee8      e883b8ffff     call sym.check_subexp_matching_top.isra.18
0x0000deed      85c0           test eax, eax
0x0000deef      8984248c0000.  mov dword [rsp + 0x8c], eax
0x0000def6      0f855cfbffff   jne 0xda58
0x0000defc      4c8b442410     mov r8, qword [rsp + 0x10]
0x0000df01      4889de         mov rsi, rbx
0x0000df04      4c89f7         mov rdi, r14
0x0000df07      4c89c2         mov rdx, r8
0x0000df0a      e8d1f7ffff     call sym.transit_state_bkref.isra.34
0x0000df0f      85c0           test eax, eax
0x0000df11      8984248c0000.  mov dword [rsp + 0x8c], eax
0x0000df18      0f84eafcffff   je 0xdc08
0x0000df1e      e935fbffff     jmp 0xda58
0x0000df23      0f1f440000     nop dword [rax + rax]
0x0000df28      488bbc24a000.  mov rdi, qword [rsp + 0xa0]
0x0000df30      e89b39ffff     call sym.imp.free
0x0000df35      8b84248c0000.  mov eax, dword [rsp + 0x8c]
0x0000df3c      e917fbffff     jmp 0xda58
0x0000df41      4d396e58       cmp qword [r14 + 0x58], r13
0x0000df45      0f8eb7feffff   jle 0xde02
0x0000df4b      418d7501       lea esi, [r13 + 1]
0x0000df4f      4c89f7         mov rdi, r14
0x0000df52      e8c990ffff     call sym.extend_buffers
0x0000df57      85c0           test eax, eax
0x0000df59      0f85f9faffff   jne 0xda58
0x0000df5f      4d8b5e08       mov r11, qword [r14 + 8]
0x0000df63      e956fdffff     jmp 0xdcbe
0x0000df68      488d540001     lea rdx, [rax + rax + 1]
0x0000df6d      498b7c2428     mov rdi, qword [r12 + 0x28]
0x0000df72      488d34d50000.  lea rsi, [rdx*8]
0x0000df7a      4889542410     mov qword [rsp + 0x10], rdx
0x0000df7f      e8dc3bffff     call sym.imp.realloc
0x0000df84      4885c0         test rax, rax
0x0000df87      0f84bcfeffff   je 0xde49
0x0000df8d      488b542410     mov rdx, qword [rsp + 0x10]
0x0000df92      4989442428     mov qword [r12 + 0x28], rax
0x0000df97      4989542418     mov qword [r12 + 0x18], rdx
0x0000df9c      e9f3fdffff     jmp 0xdd94
0x0000dfa1      4c8b6c2430     mov r13, qword [rsp + 0x30]
0x0000dfa6      498b86c80000.  mov rax, qword [r14 + 0xc8]
0x0000dfad      e9eefaffff     jmp 0xdaa0
0x0000dfb2      4c8b642408     mov r12, qword [rsp + 8]
0x0000dfb7      e9c6fcffff     jmp 0xdc82
0x0000dfbc      e81f3affff     call sym.imp.__stack_chk_fail
0x0000dfc1      0f1f440000     nop dword [rax + rax]
0x0000dfc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- merge_state_with_log:
0x0000dfd0      4157           push r15
0x0000dfd2      4156           push r14
0x0000dfd4      4155           push r13
0x0000dfd6      4154           push r12
0x0000dfd8      4989fd         mov r13, rdi
0x0000dfdb      55             push rbp
0x0000dfdc      53             push rbx
0x0000dfdd      4889f3         mov rbx, rsi
0x0000dfe0      4883ec38       sub rsp, 0x38
0x0000dfe4      4c8b6648       mov r12, qword [rsi + 0x48]
0x0000dfe8      4c8bb6b80000.  mov r14, qword [rsi + 0xb8]
0x0000dfef      64488b042528.  mov rax, qword fs:[0x28]
0x0000dff8      4889442428     mov qword [rsp + 0x28], rax
0x0000dffd      31c0           xor eax, eax
0x0000dfff      4c8bbe980000.  mov r15, qword [rsi + 0x98]
0x0000e006      4a8d2ce50000.  lea rbp, [r12*8]
0x0000e00e      4901ee         add r14, rbp
0x0000e011      4c39a6c00000.  cmp qword [rsi + 0xc0], r12
0x0000e018      7d46           jge 0xe060
0x0000e01a      498916         mov qword [r14], rdx
0x0000e01d      4889d5         mov rbp, rdx
0x0000e020      4c89a6c00000.  mov qword [rsi + 0xc0], r12
0x0000e027      4983bf980000.  cmp qword [r15 + 0x98], 0
0x0000e02f      0f8523010000   jne 0xe158
0x0000e035      488b4c2428     mov rcx, qword [rsp + 0x28]
0x0000e03a      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000e043      4889e8         mov rax, rbp
0x0000e046      0f856b010000   jne 0xe1b7
0x0000e04c      4883c438       add rsp, 0x38
0x0000e050      5b             pop rbx
0x0000e051      5d             pop rbp
0x0000e052      415c           pop r12
0x0000e054      415d           pop r13
0x0000e056      415e           pop r14
0x0000e058      415f           pop r15
0x0000e05a      c3             ret
0x0000e05b      0f1f440000     nop dword [rax + rax]
0x0000e060      498b06         mov rax, qword [r14]
0x0000e063      4885c0         test rax, rax
0x0000e066      0f84dc000000   je 0xe148
0x0000e06c      4885d2         test rdx, rdx
0x0000e06f      488b4050       mov rax, qword [rax + 0x50]
0x0000e073      0f8487000000   je 0xe100
0x0000e079      4c8b7250       mov r14, qword [rdx + 0x50]
0x0000e07d      488d7c2410     lea rdi, [rsp + 0x10]
0x0000e082      4889c2         mov rdx, rax
0x0000e085      48893c24       mov qword [rsp], rdi
0x0000e089      4c89f6         mov rsi, r14
0x0000e08c      e83facffff     call sym.re_node_set_init_union
0x0000e091      85c0           test eax, eax
0x0000e093      41894500       mov dword [r13], eax
0x0000e097      0f8513010000   jne 0xe1b0
0x0000e09d      488b4348       mov rax, qword [rbx + 0x48]
0x0000e0a1      8b93a0000000   mov edx, dword [rbx + 0xa0]
0x0000e0a7      4889df         mov rdi, rbx
0x0000e0aa      488d70ff       lea rsi, [rax - 1]
0x0000e0ae      e80db8ffff     call sym.re_string_context_at
0x0000e0b3      4c8b83b80000.  mov r8, qword [rbx + 0xb8]
0x0000e0ba      488b1424       mov rdx, qword [rsp]
0x0000e0be      89c1           mov ecx, eax
0x0000e0c0      4c89fe         mov rsi, r15
0x0000e0c3      4c89ef         mov rdi, r13
0x0000e0c6      4901e8         add r8, rbp
0x0000e0c9      4c89442408     mov qword [rsp + 8], r8
0x0000e0ce      e85dadffff     call sym.re_acquire_state_context
0x0000e0d3      4c8b442408     mov r8, qword [rsp + 8]
0x0000e0d8      4d85f6         test r14, r14
0x0000e0db      4889c5         mov rbp, rax
0x0000e0de      498900         mov qword [r8], rax
0x0000e0e1      0f8440ffffff   je 0xe027
0x0000e0e7      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0000e0ec      e8df37ffff     call sym.imp.free
0x0000e0f1      e931ffffff     jmp 0xe027
0x0000e0f6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000e100      f30f6f00       movdqu xmm0, xmmword [rax]
0x0000e104      4889df         mov rdi, rbx
0x0000e107      8b96a0000000   mov edx, dword [rsi + 0xa0]
0x0000e10d      498d7424ff     lea rsi, [r12 - 1]
0x0000e112      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000e117      488b4010       mov rax, qword [rax + 0x10]
0x0000e11b      4889442420     mov qword [rsp + 0x20], rax
0x0000e120      e89bb7ffff     call sym.re_string_context_at
0x0000e125      488d542410     lea rdx, [rsp + 0x10]
0x0000e12a      89c1           mov ecx, eax
0x0000e12c      4c89fe         mov rsi, r15
0x0000e12f      4c89ef         mov rdi, r13
0x0000e132      e8f9acffff     call sym.re_acquire_state_context
0x0000e137      4889c5         mov rbp, rax
0x0000e13a      498906         mov qword [r14], rax
0x0000e13d      e9e5feffff     jmp 0xe027
0x0000e142      660f1f440000   nop word [rax + rax]
0x0000e148      498916         mov qword [r14], rdx
0x0000e14b      4889d5         mov rbp, rdx
0x0000e14e      e9d4feffff     jmp 0xe027
0x0000e153      0f1f440000     nop dword [rax + rax]
0x0000e158      4885ed         test rbp, rbp
0x0000e15b      7453           je 0xe1b0
0x0000e15d      4c8d7510       lea r14, [rbp + 0x10]
0x0000e161      4c8d7d18       lea r15, [rbp + 0x18]
0x0000e165      4c89e1         mov rcx, r12
0x0000e168      4889df         mov rdi, rbx
0x0000e16b      4c89fa         mov rdx, r15
0x0000e16e      4c89f6         mov rsi, r14
0x0000e171      e8fab5ffff     call sym.check_subexp_matching_top.isra.18
0x0000e176      85c0           test eax, eax
0x0000e178      41894500       mov dword [r13], eax
0x0000e17c      7532           jne 0xe1b0
0x0000e17e      f6456840       test byte [rbp + 0x68], 0x40
0x0000e182      0f84adfeffff   je 0xe035
0x0000e188      4c89fa         mov rdx, r15
0x0000e18b      4c89f6         mov rsi, r14
0x0000e18e      4889df         mov rdi, rbx
0x0000e191      e84af5ffff     call sym.transit_state_bkref.isra.34
0x0000e196      85c0           test eax, eax
0x0000e198      41894500       mov dword [r13], eax
0x0000e19c      7512           jne 0xe1b0
0x0000e19e      488b83b80000.  mov rax, qword [rbx + 0xb8]
0x0000e1a5      4a8b2ce0       mov rbp, qword [rax + r12*8]
0x0000e1a9      e987feffff     jmp 0xe035
0x0000e1ae      6690           nop
0x0000e1b0      31ed           xor ebp, ebp
0x0000e1b2      e97efeffff     jmp 0xe035
0x0000e1b7      e82438ffff     call sym.imp.__stack_chk_fail
0x0000e1bc      0f1f4000       nop dword [rax]
;-- sift_states_backward:
0x0000e1c0      4157           push r15
0x0000e1c2      4156           push r14
0x0000e1c4      4989fe         mov r14, rdi
0x0000e1c7      4155           push r13
0x0000e1c9      4154           push r12
0x0000e1cb      4989f5         mov r13, rsi
0x0000e1ce      55             push rbp
0x0000e1cf      53             push rbx
0x0000e1d0      4883ec68       sub rsp, 0x68
0x0000e1d4      4c8b7e18       mov r15, qword [rsi + 0x18]
0x0000e1d8      488b5e10       mov rbx, qword [rsi + 0x10]
0x0000e1dc      48893c24       mov qword [rsp], rdi
0x0000e1e0      bf08000000     mov edi, 8
0x0000e1e5      48c744244001.  mov qword [rsp + 0x40], 1
0x0000e1ee      64488b042528.  mov rax, qword fs:[0x28]
0x0000e1f7      4889442458     mov qword [rsp + 0x58], rax
0x0000e1fc      31c0           xor eax, eax
0x0000e1fe      48c744244801.  mov qword [rsp + 0x48], 1
0x0000e207      e8f438ffff     call sym.imp.malloc
0x0000e20c      4885c0         test rax, rax
0x0000e20f      4889442450     mov qword [rsp + 0x50], rax
0x0000e214      0f84da020000   je 0xe4f4
0x0000e21a      488d4c2440     lea rcx, [rsp + 0x40]
0x0000e21f      488918         mov qword [rax], rbx
0x0000e222      4c89fa         mov rdx, r15
0x0000e225      4c89ee         mov rsi, r13
0x0000e228      4c89f7         mov rdi, r14
0x0000e22b      48894c2410     mov qword [rsp + 0x10], rcx
0x0000e230      e8fb190000     call sym.update_cur_sifted_state
0x0000e235      85c0           test eax, eax
0x0000e237      0f8588020000   jne 0xe4c5
0x0000e23d      4a8d04fd0000.  lea rax, [r15*8]
0x0000e245      4d85ff         test r15, r15
0x0000e248      c744242c0000.  mov dword [rsp + 0x2c], 0
0x0000e250      4889442408     mov qword [rsp + 8], rax
0x0000e255      498d4530       lea rax, [r13 + 0x30]
0x0000e259      4889442438     mov qword [rsp + 0x38], rax
0x0000e25e      0f8e03020000   jle 0xe467
0x0000e264      498b7d00       mov rdi, qword [r13]
0x0000e268      488b442408     mov rax, qword [rsp + 8]
0x0000e26d      48833c0700     cmp qword [rdi + rax], 0
0x0000e272      0f8410020000   je 0xe488
0x0000e278      488b0424       mov rax, qword [rsp]
0x0000e27c      c744242c0000.  mov dword [rsp + 0x2c], 0
0x0000e284      8b4c242c       mov ecx, dword [rsp + 0x2c]
0x0000e288      3988e0000000   cmp dword [rax + 0xe0], ecx
0x0000e28e      0f8c0d020000   jl 0xe4a1
0x0000e294      488b1c24       mov rbx, qword [rsp]
0x0000e298      488b7c2408     mov rdi, qword [rsp + 8]
0x0000e29d      4983ef01       sub r15, 1
0x0000e2a1      48c744244800.  mov qword [rsp + 0x48], 0
0x0000e2aa      488b83b80000.  mov rax, qword [rbx + 0xb8]
0x0000e2b1      4c8b6438f8     mov r12, qword [rax + rdi - 8]
0x0000e2b6      4d85e4         test r12, r12
0x0000e2b9      0f8481010000   je 0xe440
0x0000e2bf      49837c242800   cmp qword [r12 + 0x28], 0
0x0000e2c5      4c8bb3980000.  mov r14, qword [rbx + 0x98]
0x0000e2cc      0f8e6e010000   jle 0xe440
0x0000e2d2      31db           xor ebx, ebx
0x0000e2d4      e9a2000000     jmp 0xe37b
0x0000e2d9      0f1f80000000.  nop dword [rax]
0x0000e2e0      488b3c24       mov rdi, qword [rsp]
0x0000e2e4      4c89fa         mov rdx, r15
0x0000e2e7      e8c4b6ffff     call sym.check_node_accept
0x0000e2ec      84c0           test al, al
0x0000e2ee      747c           je 0xe36c
0x0000e2f0      498b4500       mov rax, qword [r13]
0x0000e2f4      488b4c2408     mov rcx, qword [rsp + 8]
0x0000e2f9      488b0408       mov rax, qword [rax + rcx]
0x0000e2fd      4885c0         test rax, rax
0x0000e300      746a           je 0xe36c
0x0000e302      498b5618       mov rdx, qword [r14 + 0x18]
0x0000e306      488b7810       mov rdi, qword [rax + 0x10]
0x0000e30a      488d7018       lea rsi, [rax + 0x18]
0x0000e30e      488b14ea       mov rdx, qword [rdx + rbp*8]
0x0000e312      e8c997ffff     call sym.re_node_set_contains.isra.3
0x0000e317      4885c0         test rax, rax
0x0000e31a      7450           je 0xe36c
0x0000e31c      41ba01000000   mov r10d, 1
0x0000e322      49837d2800     cmp qword [r13 + 0x28], 0
0x0000e327      742e           je 0xe357
0x0000e329      498b4618       mov rax, qword [r14 + 0x18]
0x0000e32d      4883ec08       sub rsp, 8
0x0000e331      498d7528       lea rsi, [r13 + 0x28]
0x0000e335      4f8d043a       lea r8, [r10 + r15]
0x0000e339      4989e9         mov r9, rbp
0x0000e33c      488b0ce8       mov rcx, qword [rax + rbp*8]
0x0000e340      4157           push r15
0x0000e342      488b542448     mov rdx, qword [rsp + 0x48]
0x0000e347      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000e34c      e83f9affff     call sym.check_dst_limits.isra.13
0x0000e351      84c0           test al, al
0x0000e353      5a             pop rdx
0x0000e354      59             pop rcx
0x0000e355      7515           jne 0xe36c
0x0000e357      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000e35c      4889ee         mov rsi, rbp
0x0000e35f      e83c82ffff     call sym.re_node_set_insert
0x0000e364      84c0           test al, al
0x0000e366      0f8454010000   je 0xe4c0
0x0000e36c      4883c301       add rbx, 1
0x0000e370      493b5c2428     cmp rbx, qword [r12 + 0x28]
0x0000e375      0f8dc5000000   jge 0xe440
0x0000e37b      498b442430     mov rax, qword [r12 + 0x30]
0x0000e380      498b36         mov rsi, qword [r14]
0x0000e383      488b2cd8       mov rbp, qword [rax + rbx*8]
0x0000e387      4989e9         mov r9, rbp
0x0000e38a      49c1e104       shl r9, 4
0x0000e38e      4c01ce         add rsi, r9
0x0000e391      f6460a10       test byte [rsi + 0xa], 0x10
0x0000e395      0f8445ffffff   je 0xe2e0
0x0000e39b      488b0c24       mov rcx, qword [rsp]
0x0000e39f      498b4518       mov rax, qword [r13 + 0x18]
0x0000e3a3      4d89f8         mov r8, r15
0x0000e3a6      4889ea         mov rdx, rbp
0x0000e3a9      4c894c2418     mov qword [rsp + 0x18], r9
0x0000e3ae      4c8b99980000.  mov r11, qword [rcx + 0x98]
0x0000e3b5      4889442420     mov qword [rsp + 0x20], rax
0x0000e3ba      498b3b         mov rdi, qword [r11]
0x0000e3bd      498db3d80000.  lea rsi, [r11 + 0xd8]
0x0000e3c4      4c895c2430     mov qword [rsp + 0x30], r11
0x0000e3c9      e8c2deffff     call sym.check_node_accept_bytes.isra.31
0x0000e3ce      4c63d0         movsxd r10, eax
0x0000e3d1      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x0000e3d6      4183fa00       cmp r10d, 0
0x0000e3da      0f8e90000000   jle 0xe470
0x0000e3e0      4963c2         movsxd rax, r10d
0x0000e3e3      4c01f8         add rax, r15
0x0000e3e6      4839442420     cmp qword [rsp + 0x20], rax
0x0000e3eb      0f8c31ffffff   jl 0xe322
0x0000e3f1      498b5500       mov rdx, qword [r13]
0x0000e3f5      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x0000e3fa      488b04c2       mov rax, qword [rdx + rax*8]
0x0000e3fe      4885c0         test rax, rax
0x0000e401      7473           je 0xe476
0x0000e403      498b5318       mov rdx, qword [r11 + 0x18]
0x0000e407      488b7810       mov rdi, qword [rax + 0x10]
0x0000e40b      488d7018       lea rsi, [rax + 0x18]
0x0000e40f      4c894c2418     mov qword [rsp + 0x18], r9
0x0000e414      488b14ea       mov rdx, qword [rdx + rbp*8]
0x0000e418      e8c396ffff     call sym.re_node_set_contains.isra.3
0x0000e41d      4885c0         test rax, rax
0x0000e420      0f85fcfeffff   jne 0xe322
0x0000e426      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x0000e42b      498b36         mov rsi, qword [r14]
0x0000e42e      4c01ce         add rsi, r9
0x0000e431      e9aafeffff     jmp 0xe2e0
0x0000e436      662e0f1f8400.  nop word cs:[rax + rax]
0x0000e440      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0000e445      488b3c24       mov rdi, qword [rsp]
0x0000e449      4c89fa         mov rdx, r15
0x0000e44c      4c89ee         mov rsi, r13
0x0000e44f      e8dc170000     call sym.update_cur_sifted_state
0x0000e454      85c0           test eax, eax
0x0000e456      756d           jne 0xe4c5
0x0000e458      48836c240808   sub qword [rsp + 8], 8
0x0000e45e      4d85ff         test r15, r15
0x0000e461      0f85fdfdffff   jne 0xe264
0x0000e467      31c0           xor eax, eax
0x0000e469      eb5a           jmp 0xe4c5
0x0000e46b      0f1f440000     nop dword [rax + rax]
0x0000e470      0f85acfeffff   jne 0xe322
0x0000e476      498b36         mov rsi, qword [r14]
0x0000e479      4c01ce         add rsi, r9
0x0000e47c      e95ffeffff     jmp 0xe2e0
0x0000e481      0f1f80000000.  nop dword [rax]
0x0000e488      488b0424       mov rax, qword [rsp]
0x0000e48c      8344242c01     add dword [rsp + 0x2c], 1
0x0000e491      8b4c242c       mov ecx, dword [rsp + 0x2c]
0x0000e495      3988e0000000   cmp dword [rax + 0xe0], ecx
0x0000e49b      0f8df3fdffff   jge 0xe294
0x0000e4a1      488b542408     mov rdx, qword [rsp + 8]
0x0000e4a6      31f6           xor esi, esi
0x0000e4a8      e8b335ffff     call sym.imp.memset
0x0000e4ad      488b7c2450     mov rdi, qword [rsp + 0x50]
0x0000e4b2      e81934ffff     call sym.imp.free
0x0000e4b7      31c0           xor eax, eax
0x0000e4b9      eb1a           jmp 0xe4d5
0x0000e4bb      0f1f440000     nop dword [rax + rax]
0x0000e4c0      b80c000000     mov eax, 0xc
0x0000e4c5      488b7c2450     mov rdi, qword [rsp + 0x50]
0x0000e4ca      890424         mov dword [rsp], eax
0x0000e4cd      e8fe33ffff     call sym.imp.free
0x0000e4d2      8b0424         mov eax, dword [rsp]
0x0000e4d5      488b542458     mov rdx, qword [rsp + 0x58]
0x0000e4da      644833142528.  xor rdx, qword fs:[0x28]
0x0000e4e3      7516           jne 0xe4fb
0x0000e4e5      4883c468       add rsp, 0x68
0x0000e4e9      5b             pop rbx
0x0000e4ea      5d             pop rbp
0x0000e4eb      415c           pop r12
0x0000e4ed      415d           pop r13
0x0000e4ef      415e           pop r14
0x0000e4f1      415f           pop r15
0x0000e4f3      c3             ret
0x0000e4f4      b80c000000     mov eax, 0xc
0x0000e4f9      ebda           jmp 0xe4d5
0x0000e4fb      e8e034ffff     call sym.imp.__stack_chk_fail
;-- re_search_internal:
0x0000e500      4157           push r15
0x0000e502      4156           push r14
0x0000e504      4155           push r13
0x0000e506      4154           push r12
0x0000e508      4d89cd         mov r13, r9
0x0000e50b      55             push rbp
0x0000e50c      53             push rbx
0x0000e50d      4889cd         mov rbp, rcx
0x0000e510      b920000000     mov ecx, 0x20                           ; "@"
0x0000e515      4d89c4         mov r12, r8
0x0000e518      4881ec380200.  sub rsp, sym..interp
0x0000e51f      488b1f         mov rbx, qword [rdi]
0x0000e522      488b84247802.  mov rax, qword [rsp + 0x278]
0x0000e52a      48897c2448     mov qword [rsp + 0x48], rdi
0x0000e52f      4889742478     mov qword [rsp + 0x78], rsi
0x0000e534      4889fe         mov rsi, rdi
0x0000e537      488dbc242001.  lea rdi, [rsp + 0x120]
0x0000e53f      488994248800.  mov qword [rsp + 0x88], rdx
0x0000e547      48895c2438     mov qword [rsp + 0x38], rbx
0x0000e54c      48898424b800.  mov qword [rsp + 0xb8], rax
0x0000e554      48893c24       mov qword [rsp], rdi
0x0000e558      64488b042528.  mov rax, qword fs:[0x28]
0x0000e561      488984242802.  mov qword [rsp + 0x228], rax
0x0000e569      31c0           xor eax, eax
0x0000e56b      f348ab         rep stosq qword [rdi], rax
0x0000e56e      488b7e20       mov rdi, qword [rsi + 0x20]
0x0000e572      48899c24b801.  mov qword [rsp + 0x1b8], rbx
0x0000e57a      4885ff         test rdi, rdi
0x0000e57d      48897c2468     mov qword [rsp + 0x68], rdi
0x0000e582      7422           je 0xe5a6
0x0000e584      0fb65638       movzx edx, byte [rsi + 0x38]
0x0000e588      f6c208         test dl, 8
0x0000e58b      0f848f040000   je 0xea20
0x0000e591      4c39c5         cmp rbp, r8
0x0000e594      0f8486040000   je 0xea20
0x0000e59a      83e201         and edx, 1
0x0000e59d      480f44c7       cmove rax, rdi
0x0000e5a1      4889442468     mov qword [rsp + 0x68], rax
0x0000e5a6      488b442448     mov rax, qword [rsp + 0x48]
0x0000e5ab      48c784249800.  mov qword [rsp + 0x98], 0
0x0000e5b7      488b4030       mov rax, qword [rax + 0x30]
0x0000e5bb      483b84247002.  cmp rax, qword [rsp + 0x270]
0x0000e5c3      731f           jae 0xe5e4
0x0000e5c5      488b8c247002.  mov rcx, qword [rsp + 0x270]
0x0000e5cd      488d51ff       lea rdx, [rcx - 1]
0x0000e5d1      4829c2         sub rdx, rax
0x0000e5d4      482994247002.  sub qword [rsp + 0x270], rdx
0x0000e5dc      488994249800.  mov qword [rsp + 0x98], rdx
0x0000e5e4      488b742448     mov rsi, qword [rsp + 0x48]
0x0000e5e9      48837e1000     cmp qword [rsi + 0x10], 0
0x0000e5ee      0f848c0e0000   je 0xf480
0x0000e5f4      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000e5f9      488b4748       mov rax, qword [rdi + 0x48]
0x0000e5fd      4885c0         test rax, rax
0x0000e600      0f847a0e0000   je 0xf480
0x0000e606      488b5750       mov rdx, qword [rdi + 0x50]
0x0000e60a      4885d2         test rdx, rdx
0x0000e60d      0f846d0e0000   je 0xf480
0x0000e613      488b4f58       mov rcx, qword [rdi + 0x58]
0x0000e617      4885c9         test rcx, rcx
0x0000e61a      0f84600e0000   je 0xf480
0x0000e620      48837f6000     cmp qword [rdi + 0x60], 0
0x0000e625      0f84550e0000   je 0xf480
0x0000e62b      4883781000     cmp qword [rax + 0x10], 0
0x0000e630      7536           jne 0xe668
0x0000e632      48837a1000     cmp qword [rdx + 0x10], 0
0x0000e637      752f           jne 0xe668
0x0000e639      4883791000     cmp qword [rcx + 0x10], 0
0x0000e63e      7406           je 0xe646
0x0000e640      807e3800       cmp byte [rsi + 0x38], 0
0x0000e644      7822           js 0xe668
0x0000e646      4885ed         test rbp, rbp
0x0000e649      7411           je 0xe65c
0x0000e64b      4d85e4         test r12, r12
0x0000e64e      c744245c0100.  mov dword [rsp + 0x5c], 1
0x0000e656      0f851d0a0000   jne 0xf079
0x0000e65c      4531e4         xor r12d, r12d
0x0000e65f      31ed           xor ebp, ebp
0x0000e661      0f1f80000000.  nop dword [rax]
0x0000e668      4883bc247002.  cmp qword [rsp + 0x270], 0
0x0000e671      c74424580100.  mov dword [rsp + 0x58], 1
0x0000e679      0f8481030000   je 0xea00
0x0000e67f      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0000e684      488b442448     mov rax, qword [rsp + 0x48]
0x0000e689      488bbc248800.  mov rdi, qword [rsp + 0x88]
0x0000e691      498b7310       mov rsi, qword [r11 + 0x10]
0x0000e695      488b5828       mov rbx, qword [rax + 0x28]
0x0000e699      418b93b40000.  mov edx, dword [r11 + 0xb4]
0x0000e6a0      488b4018       mov rax, qword [rax + 0x18]
0x0000e6a4      4889bc247801.  mov qword [rsp + 0x178], rdi
0x0000e6ac      4889bc247001.  mov qword [rsp + 0x170], rdi
0x0000e6b4      4889742408     mov qword [rsp + 8], rsi
0x0000e6b9      488d7601       lea rsi, [rsi + 1]
0x0000e6bd      48899c24b000.  mov qword [rsp + 0xb0], rbx
0x0000e6c5      4863ca         movsxd rcx, edx
0x0000e6c8      48c1e816       shr rax, 0x16
0x0000e6cc      48899c249801.  mov qword [rsp + 0x198], rbx
0x0000e6d4      83e001         and eax, 1
0x0000e6d7      4839ce         cmp rsi, rcx
0x0000e6da      899424b00100.  mov dword [rsp + 0x1b0], edx
0x0000e6e1      480f4cf1       cmovl rsi, rcx
0x0000e6e5      488d4f01       lea rcx, [rdi + 1]
0x0000e6e9      888424a80100.  mov byte [rsp + 0x1a8], al
0x0000e6f0      4889bc248801.  mov qword [rsp + 0x188], rdi
0x0000e6f8      4889bc248001.  mov qword [rsp + 0x180], rdi
0x0000e700      4839ce         cmp rsi, rcx
0x0000e703      488b3c24       mov rdi, qword [rsp]
0x0000e707      480f4ff1       cmovg rsi, rcx
0x0000e70b      4885db         test rbx, rbx
0x0000e70e      488b4c2478     mov rcx, qword [rsp + 0x78]
0x0000e713      0f95c3         setne bl
0x0000e716      09d8           or eax, ebx
0x0000e718      888424ab0100.  mov byte [rsp + 0x1ab], al
0x0000e71f      410fb683b000.  movzx eax, byte [r11 + 0xb0]
0x0000e727      48898c242001.  mov qword [rsp + 0x120], rcx
0x0000e72f      89c2           mov edx, eax
0x0000e731      c0e803         shr al, 3
0x0000e734      c0ea02         shr dl, 2
0x0000e737      83e001         and eax, 1
0x0000e73a      83e201         and edx, 1
0x0000e73d      888424aa0100.  mov byte [rsp + 0x1aa], al
0x0000e744      889424a90100.  mov byte [rsp + 0x1a9], dl
0x0000e74b      e8407dffff     call sym.re_string_realloc_buffers
0x0000e750      85c0           test eax, eax
0x0000e752      8944245c       mov dword [rsp + 0x5c], eax
0x0000e756      0f85f4080000   jne 0xf050
0x0000e75c      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000e761      488d87b80000.  lea rax, [rdi + 0xb8]
0x0000e768      48898424a001.  mov qword [rsp + 0x1a0], rax
0x0000e770      0fb687b00000.  movzx eax, byte [rdi + 0xb0]
0x0000e777      88442408       mov byte [rsp + 8], al
0x0000e77b      c0e804         shr al, 4
0x0000e77e      83e001         and eax, 1
0x0000e781      80bc24ab0100.  cmp byte [rsp + 0x1ab], 0
0x0000e789      888424ae0100.  mov byte [rsp + 0x1ae], al
0x0000e790      7523           jne 0xe7b5
0x0000e792      488b742438     mov rsi, qword [rsp + 0x38]
0x0000e797      488b442478     mov rax, qword [rsp + 0x78]
0x0000e79c      83beb4000000.  cmp dword [rsi + 0xb4], 1
0x0000e7a3      488984242801.  mov qword [rsp + 0x128], rax
0x0000e7ab      488b84248800.  mov rax, qword [rsp + 0x88]
0x0000e7b3      7e02           jle 0xe7b7
0x0000e7b5      31c0           xor eax, eax
0x0000e7b7      488984245001.  mov qword [rsp + 0x150], rax
0x0000e7bf      488984245801.  mov qword [rsp + 0x158], rax
0x0000e7c7      488b442448     mov rax, qword [rsp + 0x48]
0x0000e7cc      4c89ac248801.  mov qword [rsp + 0x188], r13
0x0000e7d4      4c89ac248001.  mov qword [rsp + 0x180], r13
0x0000e7dc      0fb64038       movzx eax, byte [rax + 0x38]
0x0000e7e0      88442408       mov byte [rsp + 8], al
0x0000e7e4      c0e807         shr al, 7
0x0000e7e7      888424ad0100.  mov byte [rsp + 0x1ad], al
0x0000e7ee      488b442438     mov rax, qword [rsp + 0x38]
0x0000e7f3      4c8bb0980000.  mov r14, qword [rax + 0x98]
0x0000e7fa      8b8424800200.  mov eax, dword [rsp + 0x280]
0x0000e801      48c78424c801.  mov qword [rsp + 0x1c8], 0xffffffffffffffff
0x0000e80d      4f8d2c36       lea r13, [r14 + r14]
0x0000e811      898424c00100.  mov dword [rsp + 0x1c0], eax
0x0000e818      4d85ed         test r13, r13
0x0000e81b      7e52           jle 0xe86f
0x0000e81d      48b866666666.  movabs rax, 0x666666666666666
0x0000e827      4939c5         cmp r13, rax
0x0000e82a      0f8f400d0000   jg 0xf570
0x0000e830      4b8d7cf500     lea rdi, [r13 + r14*8]
0x0000e835      48c1e703       shl rdi, 3
0x0000e839      e8c232ffff     call sym.imp.malloc
0x0000e83e      4c89f7         mov rdi, r14
0x0000e841      4989c7         mov r15, rax
0x0000e844      48898424f801.  mov qword [rsp + 0x1f8], rax
0x0000e84c      48c1e704       shl rdi, 4
0x0000e850      e8ab32ffff     call sym.imp.malloc
0x0000e855      4885c0         test rax, rax
0x0000e858      488984241802.  mov qword [rsp + 0x218], rax
0x0000e860      0f840a0d0000   je 0xf570
0x0000e866      4d85ff         test r15, r15
0x0000e869      0f84010d0000   je 0xf570
0x0000e86f      4883bc247002.  cmp qword [rsp + 0x270], 1
0x0000e878      4c89ac24f001.  mov qword [rsp + 0x1f0], r13
0x0000e880      c78424000200.  mov dword [rsp + 0x200], 1
0x0000e88b      4c89ac241002.  mov qword [rsp + 0x210], r13
0x0000e893      0f861f110000   jbe 0xf9b8
0x0000e899      488b84246001.  mov rax, qword [rsp + 0x160]
0x0000e8a1      48bafeffffff.  movabs rdx, 0x1ffffffffffffffe          ; 2305843009213693950
0x0000e8ab      4839d0         cmp rax, rdx
0x0000e8ae      0f87bc0c0000   ja 0xf570
0x0000e8b4      488d3cc50800.  lea rdi, [rax*8 + 8]
0x0000e8bc      e83f32ffff     call sym.imp.malloc
0x0000e8c1      4885c0         test rax, rax
0x0000e8c4      4889c7         mov rdi, rax
0x0000e8c7      48898424d801.  mov qword [rsp + 0x1d8], rax
0x0000e8cf      0f84eb0c0000   je 0xf5c0
0x0000e8d5      8b8424800200.  mov eax, dword [rsp + 0x280]
0x0000e8dc      4889ac24d800.  mov qword [rsp + 0xd8], rbp
0x0000e8e4      83e001         and eax, 1
0x0000e8e7      83f801         cmp eax, 1
0x0000e8ea      19c0           sbb eax, eax
0x0000e8ec      83e002         and eax, 2
0x0000e8ef      83c004         add eax, 4
0x0000e8f2      898424900100.  mov dword [rsp + 0x190], eax
0x0000e8f9      31c0           xor eax, eax
0x0000e8fb      4c39e5         cmp rbp, r12
0x0000e8fe      0f9ec0         setle al
0x0000e901      8d4400ff       lea eax, [rax + rax - 1]
0x0000e905      898424ac0000.  mov dword [rsp + 0xac], eax
0x0000e90c      4c89e0         mov rax, r12
0x0000e90f      480f4ec5       cmovle rax, rbp
0x0000e913      488984249000.  mov qword [rsp + 0x90], rax
0x0000e91b      4c89e0         mov rax, r12
0x0000e91e      480f4dc5       cmovge rax, rbp
0x0000e922      48837c246800   cmp qword [rsp + 0x68], 0
0x0000e928      4889442470     mov qword [rsp + 0x70], rax
0x0000e92d      488b442438     mov rax, qword [rsp + 0x38]
0x0000e932      8bb0b4000000   mov esi, dword [rax + 0xb4]
0x0000e938      b808000000     mov eax, 8
0x0000e93d      89b424c80000.  mov dword [rsp + 0xc8], esi
0x0000e944      7439           je 0xe97f
0x0000e946      83fe01         cmp esi, 1
0x0000e949      b904000000     mov ecx, 4
0x0000e94e      741e           je 0xe96e
0x0000e950      488b442448     mov rax, qword [rsp + 0x48]
0x0000e955      f6401a40       test byte [rax + 0x1a], 0x40
0x0000e959      0f857f0d0000   jne 0xf6de
0x0000e95f      4883bc24b000.  cmp qword [rsp + 0xb0], 0
0x0000e968      0f85700d0000   jne 0xf6de
0x0000e96e      31d2           xor edx, edx
0x0000e970      4c39e5         cmp rbp, r12
0x0000e973      0fb6c3         movzx eax, bl
0x0000e976      0f9ec2         setle dl
0x0000e979      09c8           or eax, ecx
0x0000e97b      01d2           add edx, edx
0x0000e97d      09d0           or eax, edx
0x0000e97f      483b6c2470     cmp rbp, qword [rsp + 0x70]
0x0000e984      0f9fc1         setg cl
0x0000e987      483bac249000.  cmp rbp, qword [rsp + 0x90]
0x0000e98f      0f9cc2         setl dl
0x0000e992      08d1           or cl, dl
0x0000e994      0f85cf0a0000   jne 0xf469
0x0000e99a      488d8c24d800.  lea rcx, [rsp + 0xd8]
0x0000e9a2      4c39e5         cmp rbp, r12
0x0000e9a5      ba00000000     mov edx, 0
0x0000e9aa      480f4ed1       cmovle rdx, rcx
0x0000e9ae      4885d2         test rdx, rdx
0x0000e9b1      48899424c000.  mov qword [rsp + 0xc0], rdx
0x0000e9b9      0f958424cf00.  setne byte [rsp + 0xcf]
0x0000e9c1      83e804         sub eax, 4
0x0000e9c4      898424a80000.  mov dword [rsp + 0xa8], eax
0x0000e9cb      488d8424d000.  lea rax, [rsp + 0xd0]
0x0000e9d3      4889442428     mov qword [rsp + 0x28], rax
0x0000e9d8      8b8424a80000.  mov eax, dword [rsp + 0xa8]
0x0000e9df      83f804         cmp eax, 4
0x0000e9e2      0f87e50b0000   ja 0xf5cd
0x0000e9e8      488d0d916f00.  lea rcx, [0x00015980]
0x0000e9ef      48630481       movsxd rax, dword [rcx + rax*4]
0x0000e9f3      4801c8         add rax, rcx
0x0000e9f6      ffe0           jmp rax
0x0000e9f8      0f1f84000000.  nop dword [rax + rax]
0x0000ea00      488b442438     mov rax, qword [rsp + 0x38]
0x0000ea05      4883b8980000.  cmp qword [rax + 0x98], 0
0x0000ea0d      0f95c0         setne al
0x0000ea10      0fb6c0         movzx eax, al
0x0000ea13      89442458       mov dword [rsp + 0x58], eax
0x0000ea17      e963fcffff     jmp 0xe67f
0x0000ea1c      0f1f4000       nop dword [rax]
0x0000ea20      48c744246800.  mov qword [rsp + 0x68], 0
0x0000ea29      e978fbffff     jmp 0xe5a6
0x0000ea2e      48396c2470     cmp qword [rsp + 0x70], rbp
0x0000ea33      7e5a           jle 0xea8f
0x0000ea35      488b442478     mov rax, qword [rsp + 0x78]
0x0000ea3a      488b7c2468     mov rdi, qword [rsp + 0x68]
0x0000ea3f      0fb61428       movzx edx, byte [rax + rbp]
0x0000ea43      488d4501       lea rax, [rbp + 1]
0x0000ea47      803c1700       cmp byte [rdi + rdx], 0
0x0000ea4b      0f8587000000   jne 0xead8
0x0000ea51      488b742468     mov rsi, qword [rsp + 0x68]
0x0000ea56      488b4c2470     mov rcx, qword [rsp + 0x70]
0x0000ea5b      488b7c2478     mov rdi, qword [rsp + 0x78]
0x0000ea60      eb18           jmp 0xea7a
0x0000ea62      660f1f440000   nop word [rax + rax]
0x0000ea68      0fb61407       movzx edx, byte [rdi + rax]
0x0000ea6c      488d4001       lea rax, [rax + 1]
0x0000ea70      803c1600       cmp byte [rsi + rdx], 0
0x0000ea74      0f8597110000   jne 0xfc11
0x0000ea7a      4839c1         cmp rcx, rax
0x0000ea7d      4889c5         mov rbp, rax
0x0000ea80      75e6           jne 0xea68
0x0000ea82      488b442470     mov rax, qword [rsp + 0x70]
0x0000ea87      48898424d800.  mov qword [rsp + 0xd8], rax
0x0000ea8f      48396c2470     cmp qword [rsp + 0x70], rbp
0x0000ea94      7542           jne 0xead8
0x0000ea96      31c0           xor eax, eax
0x0000ea98      488b742470     mov rsi, qword [rsp + 0x70]
0x0000ea9d      4839b4248800.  cmp qword [rsp + 0x88], rsi
0x0000eaa5      7e09           jle 0xeab0
0x0000eaa7      488b442478     mov rax, qword [rsp + 0x78]
0x0000eaac      0fb60430       movzx eax, byte [rax + rsi]
0x0000eab0      488bb424b000.  mov rsi, qword [rsp + 0xb0]
0x0000eab8      4885f6         test rsi, rsi
0x0000eabb      7404           je 0xeac1
0x0000eabd      0fb60406       movzx eax, byte [rsi + rax]
0x0000eac1      488b7c2468     mov rdi, qword [rsp + 0x68]
0x0000eac6      803c0700       cmp byte [rdi + rax], 0
0x0000eaca      0f8499090000   je 0xf469
0x0000ead0      488b6c2470     mov rbp, qword [rsp + 0x70]
0x0000ead5      0f1f00         nop dword [rax]
0x0000ead8      8b9424800200.  mov edx, dword [rsp + 0x280]
0x0000eadf      488b3c24       mov rdi, qword [rsp]
0x0000eae3      4889ee         mov rsi, rbp
0x0000eae6      e8a5b0ffff     call sym.re_string_reconstruct
0x0000eaeb      85c0           test eax, eax
0x0000eaed      8944245c       mov dword [rsp + 0x5c], eax
0x0000eaf1      0f8559050000   jne 0xf050
0x0000eaf7      83bc24c80000.  cmp dword [rsp + 0xc8], 1
0x0000eaff      741c           je 0xeb1d
0x0000eb01      4883bc245001.  cmp qword [rsp + 0x150], 0
0x0000eb0a      7411           je 0xeb1d
0x0000eb0c      488b84243001.  mov rax, qword [rsp + 0x130]
0x0000eb14      8338ff         cmp dword [rax], 0xffffffff
0x0000eb17      0f8424090000   je 0xf441
0x0000eb1d      488b9c24b801.  mov rbx, qword [rsp + 0x1b8]
0x0000eb25      0fb6442458     movzx eax, byte [rsp + 0x58]
0x0000eb2a      c78424000200.  mov dword [rsp + 0x200], 0
0x0000eb35      48c78424e801.  mov qword [rsp + 0x1e8], 0
0x0000eb41      48c78424e001.  mov qword [rsp + 0x1e0], 0
0x0000eb4d      c78424d00000.  mov dword [rsp + 0xd0], 0
0x0000eb58      4c8b7348       mov r14, qword [rbx + 0x48]
0x0000eb5c      83e001         and eax, 1
0x0000eb5f      888424ce0000.  mov byte [rsp + 0xce], al
0x0000eb66      488b84246801.  mov rax, qword [rsp + 0x168]
0x0000eb6e      41807e6800     cmp byte [r14 + 0x68], 0
0x0000eb73      4889442408     mov qword [rsp + 8], rax
0x0000eb78      0f8872090000   js 0xf4f0
0x0000eb7e      488b8424d801.  mov rax, qword [rsp + 0x1d8]
0x0000eb86      4885c0         test rax, rax
0x0000eb89      7417           je 0xeba2
0x0000eb8b      4883bb980000.  cmp qword [rbx + 0x98], 0
0x0000eb93      488b7c2408     mov rdi, qword [rsp + 8]
0x0000eb98      4c8934f8       mov qword [rax + rdi*8], r14
0x0000eb9c      0f85e90e0000   jne 0xfa8b
0x0000eba2      0fb68424cf00.  movzx eax, byte [rsp + 0xcf]
0x0000ebaa      88442418       mov byte [rsp + 0x18], al
0x0000ebae      410fb64668     movzx eax, byte [r14 + 0x68]
0x0000ebb3      a810           test al, 0x10
0x0000ebb5      48c7442420ff.  mov qword [rsp + 0x20], 0xffffffffffffffff
0x0000ebbe      48c744243000.  mov qword [rsp + 0x30], 0
0x0000ebc7      0f85830e0000   jne 0xfa50
0x0000ebcd      488b8424c000.  mov rax, qword [rsp + 0xc0]
0x0000ebd5      4c8b84246801.  mov r8, qword [rsp + 0x168]
0x0000ebdd      4889442450     mov qword [rsp + 0x50], rax
0x0000ebe2      488d8424e000.  lea rax, [rsp + 0xe0]
0x0000ebea      4889442460     mov qword [rsp + 0x60], rax
0x0000ebef      488d8424d400.  lea rax, [rsp + 0xd4]
0x0000ebf7      488984248000.  mov qword [rsp + 0x80], rax
0x0000ebff      eb5b           jmp 0xec5c
0x0000ec01      0f1f80000000.  nop dword [rax]
0x0000ec08      4d39ee         cmp r14, r13
0x0000ec0b      4c8b84246801.  mov r8, qword [rsp + 0x168]
0x0000ec13      0f94c0         sete al
0x0000ec16      20442418       and byte [rsp + 0x18], al
0x0000ec1a      410fb64568     movzx eax, byte [r13 + 0x68]
0x0000ec1f      480f445c2408   cmove rbx, qword [rsp + 8]
0x0000ec25      a810           test al, 0x10
0x0000ec27      48895c2408     mov qword [rsp + 8], rbx
0x0000ec2c      742b           je 0xec59
0x0000ec2e      84c0           test al, al
0x0000ec30      0f88ba040000   js 0xf0f0
0x0000ec36      8b442458       mov eax, dword [rsp + 0x58]
0x0000ec3a      4c89442420     mov qword [rsp + 0x20], r8
0x0000ec3f      85c0           test eax, eax
0x0000ec41      0f841f010000   je 0xed66
0x0000ec47      48c744243001.  mov qword [rsp + 0x30], 1
0x0000ec50      48c744245000.  mov qword [rsp + 0x50], 0
0x0000ec59      4d89ee         mov r14, r13
0x0000ec5c      4c3984248801.  cmp qword [rsp + 0x188], r8
0x0000ec64      0f8eea000000   jle 0xed54
0x0000ec6a      488b84246001.  mov rax, qword [rsp + 0x160]
0x0000ec72      498d5801       lea rbx, [r8 + 1]
0x0000ec76      4839c3         cmp rbx, rax
0x0000ec79      0f8da1040000   jge 0xf120
0x0000ec7f      488b84245001.  mov rax, qword [rsp + 0x150]
0x0000ec87      4839c3         cmp rbx, rax
0x0000ec8a      0f8d80070000   jge 0xf410
0x0000ec90      41f6466820     test byte [r14 + 0x68], 0x20
0x0000ec95      0f85c5040000   jne 0xf160
0x0000ec9b      498d4001       lea rax, [r8 + 1]
0x0000ec9f      488984246801.  mov qword [rsp + 0x168], rax
0x0000eca7      488b84242801.  mov rax, qword [rsp + 0x128]
0x0000ecaf      460fb62c00     movzx r13d, byte [rax + r8]
0x0000ecb4      498b4658       mov rax, qword [r14 + 0x58]
0x0000ecb8      4885c0         test rax, rax
0x0000ecbb      0f840f070000   je 0xf3d0
0x0000ecc1      4e8b2ce8       mov r13, qword [rax + r13*8]
0x0000ecc5      4883bc24d801.  cmp qword [rsp + 0x1d8], 0
0x0000ecce      7414           je 0xece4
0x0000ecd0      488b3424       mov rsi, qword [rsp]
0x0000ecd4      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000ecd9      4c89ea         mov rdx, r13
0x0000ecdc      e8eff2ffff     call sym.merge_state_with_log
0x0000ece1      4989c5         mov r13, rax
0x0000ece4      4d85ed         test r13, r13
0x0000ece7      0f851bffffff   jne 0xec08
0x0000eced      8b8c24d00000.  mov ecx, dword [rsp + 0xd0]
0x0000ecf4      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x0000ecfc      85c9           test ecx, ecx
0x0000ecfe      0f85bc080000   jne 0xf5c0
0x0000ed04      4885ff         test rdi, rdi
0x0000ed07      744b           je 0xed54
0x0000ed09      0fb68424ce00.  movzx eax, byte [rsp + 0xce]
0x0000ed11      83f001         xor eax, 1
0x0000ed14      84442430       test byte [rsp + 0x30], al
0x0000ed18      753a           jne 0xed54
0x0000ed1a      488bb424e001.  mov rsi, qword [rsp + 0x1e0]
0x0000ed22      488b84246801.  mov rax, qword [rsp + 0x168]
0x0000ed2a      31c9           xor ecx, ecx
0x0000ed2c      eb15           jmp 0xed43
0x0000ed2e      6690           nop
0x0000ed30      48833cd700     cmp qword [rdi + rdx*8], 0
0x0000ed35      4889d0         mov rax, rdx
0x0000ed38      b901000000     mov ecx, 1
0x0000ed3d      0f856d030000   jne 0xf0b0
0x0000ed43      488d5001       lea rdx, [rax + 1]
0x0000ed47      4839d6         cmp rsi, rdx
0x0000ed4a      7de4           jge 0xed30
0x0000ed4c      84c9           test cl, cl
0x0000ed4e      0f85ca0e0000   jne 0xfc1e
0x0000ed54      488b442450     mov rax, qword [rsp + 0x50]
0x0000ed59      4885c0         test rax, rax
0x0000ed5c      7408           je 0xed66
0x0000ed5e      488b7c2408     mov rdi, qword [rsp + 8]
0x0000ed63      480138         add qword [rax], rdi
0x0000ed66      488b442420     mov rax, qword [rsp + 0x20]
0x0000ed6b      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000ed6f      0f84bb060000   je 0xf430
0x0000ed75      4883f8fe       cmp rax, 0xfffffffffffffffe
0x0000ed79      0f84f1070000   je 0xf570
0x0000ed7f      488b442420     mov rax, qword [rsp + 0x20]
0x0000ed84      48898424c801.  mov qword [rsp + 0x1c8], rax
0x0000ed8c      488b442448     mov rax, qword [rsp + 0x48]
0x0000ed91      f6403810       test byte [rax + 0x38], 0x10
0x0000ed95      0f85b5070000   jne 0xf550
0x0000ed9b      4883bc247002.  cmp qword [rsp + 0x270], 1
0x0000eda4      0f86f2080000   jbe 0xf69c
0x0000edaa      488b4c2420     mov rcx, qword [rsp + 0x20]
0x0000edaf      488b9c24d801.  mov rbx, qword [rsp + 0x1d8]
0x0000edb7      488b3c24       mov rdi, qword [rsp]
0x0000edbb      488b04cb       mov rax, qword [rbx + rcx*8]
0x0000edbf      488b7010       mov rsi, qword [rax + 0x10]
0x0000edc3      488d5018       lea rdx, [rax + 0x18]
0x0000edc7      e8f4acffff     call sym.check_halt_state_context.isra.20
0x0000edcc      4989c5         mov r13, rax
0x0000edcf      48898424d001.  mov qword [rsp + 0x1d0], rax
0x0000edd7      488b442438     mov rax, qword [rsp + 0x38]
0x0000eddc      f680b0000000.  test byte [rax + 0xb0], 1
0x0000ede3      751b           jne 0xee00
0x0000ede5      488b442438     mov rax, qword [rsp + 0x38]
0x0000edea      4883b8980000.  cmp qword [rax + 0x98], 0
0x0000edf2      0f8494090000   je 0xf78c
0x0000edf8      4c8bac24d001.  mov r13, qword [rsp + 0x1d0]
0x0000ee00      48befeffffff.  movabs rsi, 0x1ffffffffffffffe          ; 2305843009213693950
0x0000ee0a      4839742420     cmp qword [rsp + 0x20], rsi
0x0000ee0f      4c8bbc24b801.  mov r15, qword [rsp + 0x1b8]
0x0000ee17      0f875e0c0000   ja 0xfa7b
0x0000ee1d      488b442420     mov rax, qword [rsp + 0x20]
0x0000ee22      4883c001       add rax, 1
0x0000ee26      488d1cc50000.  lea rbx, [rax*8]
0x0000ee2e      4889442408     mov qword [rsp + 8], rax
0x0000ee33      4889df         mov rdi, rbx
0x0000ee36      e8c52cffff     call sym.imp.malloc
0x0000ee3b      4885c0         test rax, rax
0x0000ee3e      4989c4         mov r12, rax
0x0000ee41      0f8429070000   je 0xf570
0x0000ee47      4983bf980000.  cmp qword [r15 + 0x98], 0
0x0000ee4f      0f8490080000   je 0xf6e5
0x0000ee55      4889df         mov rdi, rbx
0x0000ee58      e8a32cffff     call sym.imp.malloc
0x0000ee5d      4885c0         test rax, rax
0x0000ee60      4889c5         mov rbp, rax
0x0000ee63      0f84ff060000   je 0xf568
0x0000ee69      4c8b742420     mov r14, qword [rsp + 0x20]
0x0000ee6e      488d9c24e000.  lea rbx, [rsp + 0xe0]
0x0000ee76      4c897c2410     mov qword [rsp + 0x10], r15
0x0000ee7b      4889442418     mov qword [rsp + 0x18], rax
0x0000ee80      488b442408     mov rax, qword [rsp + 8]
0x0000ee85      31f6           xor esi, esi
0x0000ee87      4889ef         mov rdi, rbp
0x0000ee8a      488d14c50000.  lea rdx, [rax*8]
0x0000ee92      e8c92bffff     call sym.imp.memset
0x0000ee97      660fefc0       pxor xmm0, xmm0
0x0000ee9b      4c89a424e000.  mov qword [rsp + 0xe0], r12
0x0000eea3      4889ac24e800.  mov qword [rsp + 0xe8], rbp
0x0000eeab      4c89ac24f000.  mov qword [rsp + 0xf0], r13
0x0000eeb3      4889de         mov rsi, rbx
0x0000eeb6      4c89b424f800.  mov qword [rsp + 0xf8], r14
0x0000eebe      488b3c24       mov rdi, qword [rsp]
0x0000eec2      0f294320       movaps xmmword [rbx + 0x20], xmm0
0x0000eec6      48c743300000.  mov qword [rbx + 0x30], 0
0x0000eece      e8edf2ffff     call sym.sift_states_backward
0x0000eed3      488bbc241001.  mov rdi, qword [rsp + 0x110]
0x0000eedb      4189c7         mov r15d, eax
0x0000eede      e8ed29ffff     call sym.imp.free
0x0000eee3      4585ff         test r15d, r15d
0x0000eee6      0f85180c0000   jne 0xfb04
0x0000eeec      49833c2400     cmp qword [r12], 0
0x0000eef1      0f856c0c0000   jne 0xfb63
0x0000eef7      48837d0000     cmp qword [rbp], 0
0x0000eefc      0f85610c0000   jne 0xfb63
0x0000ef02      488b9424d801.  mov rdx, qword [rsp + 0x1d8]
0x0000ef0a      660f1f440000   nop word [rax + rax]
0x0000ef10      4983ee01       sub r14, 1
0x0000ef14      4983feff       cmp r14, 0xffffffffffffffff
0x0000ef18      0f84bd0a0000   je 0xf9db
0x0000ef1e      4a8b04f2       mov rax, qword [rdx + r14*8]
0x0000ef22      4885c0         test rax, rax
0x0000ef25      74e9           je 0xef10
0x0000ef27      f6406810       test byte [rax + 0x68], 0x10
0x0000ef2b      74e3           je 0xef10
0x0000ef2d      488b7010       mov rsi, qword [rax + 0x10]
0x0000ef31      488b3c24       mov rdi, qword [rsp]
0x0000ef35      488d5018       lea rdx, [rax + 0x18]
0x0000ef39      4c89f1         mov rcx, r14
0x0000ef3c      e87fabffff     call sym.check_halt_state_context.isra.20
0x0000ef41      4989c5         mov r13, rax
0x0000ef44      498d4601       lea rax, [r14 + 1]
0x0000ef48      4889442408     mov qword [rsp + 8], rax
0x0000ef4d      e92effffff     jmp 0xee80
0x0000ef52      48396c2470     cmp qword [rsp + 0x70], rbp
0x0000ef57      0f8e32fbffff   jle 0xea8f
0x0000ef5d      488b442478     mov rax, qword [rsp + 0x78]
0x0000ef62      488bbc24b000.  mov rdi, qword [rsp + 0xb0]
0x0000ef6a      488b742468     mov rsi, qword [rsp + 0x68]
0x0000ef6f      0fb60428       movzx eax, byte [rax + rbp]
0x0000ef73      0fb61407       movzx edx, byte [rdi + rax]
0x0000ef77      488d4501       lea rax, [rbp + 1]
0x0000ef7b      803c1600       cmp byte [rsi + rdx], 0
0x0000ef7f      0f8553fbffff   jne 0xead8
0x0000ef85      488b742468     mov rsi, qword [rsp + 0x68]
0x0000ef8a      488bbc24b000.  mov rdi, qword [rsp + 0xb0]
0x0000ef92      488b4c2470     mov rcx, qword [rsp + 0x70]
0x0000ef97      4c8b442478     mov r8, qword [rsp + 0x78]
0x0000ef9c      eb19           jmp 0xefb7
0x0000ef9e      6690           nop
0x0000efa0      410fb60400     movzx eax, byte [r8 + rax]
0x0000efa5      0fb61407       movzx edx, byte [rdi + rax]
0x0000efa9      488d4501       lea rax, [rbp + 1]
0x0000efad      803c1600       cmp byte [rsi + rdx], 0
0x0000efb1      0f855a0c0000   jne 0xfc11
0x0000efb7      4839c1         cmp rcx, rax
0x0000efba      4889c5         mov rbp, rax
0x0000efbd      75e1           jne 0xefa0
0x0000efbf      e9befaffff     jmp 0xea82
0x0000efc4      4839ac249000.  cmp qword [rsp + 0x90], rbp
0x0000efcc      0f8f97040000   jg 0xf469
0x0000efd2      31c9           xor ecx, ecx
0x0000efd4      4889e8         mov rax, rbp
0x0000efd7      488b7c2468     mov rdi, qword [rsp + 0x68]
0x0000efdc      488bb424b000.  mov rsi, qword [rsp + 0xb0]
0x0000efe4      4c8b8c249000.  mov r9, qword [rsp + 0x90]
0x0000efec      4c8b542478     mov r10, qword [rsp + 0x78]
0x0000eff1      4c8b84248800.  mov r8, qword [rsp + 0x88]
0x0000eff9      eb17           jmp 0xf012
0x0000effb      0f1f440000     nop dword [rax + rax]
0x0000f000      4883e801       sub rax, 1
0x0000f004      b901000000     mov ecx, 1
0x0000f009      4c39c8         cmp rax, r9
0x0000f00c      0f8cde090000   jl 0xf9f0
0x0000f012      31d2           xor edx, edx
0x0000f014      4939c0         cmp r8, rax
0x0000f017      7e05           jle 0xf01e
0x0000f019      410fb61402     movzx edx, byte [r10 + rax]
0x0000f01e      4885f6         test rsi, rsi
0x0000f021      7404           je 0xf027
0x0000f023      0fb61416       movzx edx, byte [rsi + rdx]
0x0000f027      803c1700       cmp byte [rdi + rdx], 0
0x0000f02b      74d3           je 0xf000
0x0000f02d      84c9           test cl, cl
0x0000f02f      0f84a3faffff   je 0xead8
0x0000f035      48898424d800.  mov qword [rsp + 0xd8], rax
0x0000f03d      4889c5         mov rbp, rax
0x0000f040      e993faffff     jmp 0xead8
0x0000f045      0f1f00         nop dword [rax]
0x0000f048      8944245c       mov dword [rsp + 0x5c], eax
0x0000f04c      0f1f4000       nop dword [rax]
0x0000f050      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x0000f058      e87328ffff     call sym.imp.free
0x0000f05d      488b442438     mov rax, qword [rsp + 0x38]
0x0000f062      4883b8980000.  cmp qword [rax + 0x98], 0
0x0000f06a      0f8520090000   jne 0xf990
0x0000f070      488b3c24       mov rdi, qword [rsp]
0x0000f074      e85787ffff     call sym.re_string_destruct
0x0000f079      488bb4242802.  mov rsi, qword [rsp + 0x228]
0x0000f081      644833342528.  xor rsi, qword fs:[0x28]
0x0000f08a      8b44245c       mov eax, dword [rsp + 0x5c]
0x0000f08e      0f85970b0000   jne 0xfc2b
0x0000f094      4881c4380200.  add rsp, sym..interp
0x0000f09b      5b             pop rbx
0x0000f09c      5d             pop rbp
0x0000f09d      415c           pop r12
0x0000f09f      415d           pop r13
0x0000f0a1      415e           pop r14
0x0000f0a3      415f           pop r15
0x0000f0a5      c3             ret
0x0000f0a6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000f0b0      488b3424       mov rsi, qword [rsp]
0x0000f0b4      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000f0b9      488994246801.  mov qword [rsp + 0x168], rdx
0x0000f0c1      31d2           xor edx, edx
0x0000f0c3      e808efffff     call sym.merge_state_with_log
0x0000f0c8      8b9424d00000.  mov edx, dword [rsp + 0xd0]
0x0000f0cf      85d2           test edx, edx
0x0000f0d1      0f8536090000   jne 0xfa0d
0x0000f0d7      4885c0         test rax, rax
0x0000f0da      0f8540090000   jne 0xfa20
0x0000f0e0      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x0000f0e8      e92dfcffff     jmp 0xed1a
0x0000f0ed      0f1f00         nop dword [rax]
0x0000f0f0      498b7510       mov rsi, qword [r13 + 0x10]
0x0000f0f4      488b3c24       mov rdi, qword [rsp]
0x0000f0f8      498d5518       lea rdx, [r13 + 0x18]
0x0000f0fc      4c89c1         mov rcx, r8
0x0000f0ff      4c89442410     mov qword [rsp + 0x10], r8
0x0000f104      e8b7a9ffff     call sym.check_halt_state_context.isra.20
0x0000f109      4885c0         test rax, rax
0x0000f10c      4c8b442410     mov r8, qword [rsp + 0x10]
0x0000f111      0f8442fbffff   je 0xec59
0x0000f117      e91afbffff     jmp 0xec36
0x0000f11c      0f1f4000       nop dword [rax]
0x0000f120      483b84247801.  cmp rax, qword [rsp + 0x178]
0x0000f128      0f8d51fbffff   jge 0xec7f
0x0000f12e      488b3c24       mov rdi, qword [rsp]
0x0000f132      8d7301         lea esi, [rbx + 1]
0x0000f135      e8e67effff     call sym.extend_buffers
0x0000f13a      85c0           test eax, eax
0x0000f13c      898424d00000.  mov dword [rsp + 0xd0], eax
0x0000f143      0f85df080000   jne 0xfa28
0x0000f149      41f6466820     test byte [r14 + 0x68], 0x20
0x0000f14e      4c8b84246801.  mov r8, qword [rsp + 0x168]
0x0000f156      0f843ffbffff   je 0xec9b
0x0000f15c      0f1f4000       nop dword [rax]
0x0000f160      49837e1000     cmp qword [r14 + 0x10], 0
0x0000f165      4c8bac24b801.  mov r13, qword [rsp + 0x1b8]
0x0000f16d      0f8e28030000   jle 0xf49b
0x0000f173      498d85d80000.  lea rax, [r13 + 0xd8]
0x0000f17a      4531e4         xor r12d, r12d
0x0000f17d      48899c24a000.  mov qword [rsp + 0xa0], rbx
0x0000f185      4c89e3         mov rbx, r12
0x0000f188      4d89c4         mov r12, r8
0x0000f18b      4889442440     mov qword [rsp + 0x40], rax
0x0000f190      e953010000     jmp 0xf2e8
0x0000f195      0f1f00         nop dword [rax]
0x0000f198      a801           test al, 1
0x0000f19a      0f843a010000   je 0xf2da
0x0000f1a0      83e108         and ecx, 8
0x0000f1a3      0f8531010000   jne 0xf2da
0x0000f1a9      f6c220         test dl, 0x20                           ; "@"
0x0000f1ac      7408           je 0xf1b6
0x0000f1ae      a802           test al, 2
0x0000f1b0      0f8424010000   je 0xf2da
0x0000f1b6      81e280000000   and edx, 0x80
0x0000f1bc      7412           je 0xf1d0
0x0000f1be      a808           test al, 8
0x0000f1c0      0f8414010000   je 0xf2da
0x0000f1c6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000f1d0      488b0c24       mov rcx, qword [rsp]
0x0000f1d4      488b742440     mov rsi, qword [rsp + 0x40]
0x0000f1d9      4d89e0         mov r8, r12
0x0000f1dc      4c89fa         mov rdx, r15
0x0000f1df      4889ef         mov rdi, rbp
0x0000f1e2      e8a9d0ffff     call sym.check_node_accept_bytes.isra.31
0x0000f1e7      85c0           test eax, eax
0x0000f1e9      0f84e3000000   je 0xf2d2
0x0000f1ef      4863e8         movsxd rbp, eax
0x0000f1f2      4803ac246801.  add rbp, qword [rsp + 0x168]
0x0000f1fa      398424000200.  cmp dword [rsp + 0x200], eax
0x0000f201      0f4d84240002.  cmovge eax, dword [rsp + 0x200]
0x0000f209      488b3c24       mov rdi, qword [rsp]
0x0000f20d      4889ee         mov rsi, rbp
0x0000f210      898424000200.  mov dword [rsp + 0x200], eax
0x0000f217      e8547fffff     call sym.clean_state_log_if_needed
0x0000f21c      85c0           test eax, eax
0x0000f21e      898424d40000.  mov dword [rsp + 0xd4], eax
0x0000f225      0f8595020000   jne 0xf4c0
0x0000f22b      498b4518       mov rax, qword [r13 + 0x18]
0x0000f22f      4c8d24ed0000.  lea r12, [rbp*8]
0x0000f237      4a8b04f8       mov rax, qword [rax + r15*8]
0x0000f23b      4c8bbc24d801.  mov r15, qword [rsp + 0x1d8]
0x0000f243      488d1440       lea rdx, [rax + rax*2]
0x0000f247      498b4530       mov rax, qword [r13 + 0x30]
0x0000f24b      4d01e7         add r15, r12
0x0000f24e      488d14d0       lea rdx, [rax + rdx*8]
0x0000f252      498b07         mov rax, qword [r15]
0x0000f255      4885c0         test rax, rax
0x0000f258      0f84fa000000   je 0xf358
0x0000f25e      488b7050       mov rsi, qword [rax + 0x50]
0x0000f262      488b7c2460     mov rdi, qword [rsp + 0x60]
0x0000f267      e8649affff     call sym.re_node_set_init_union
0x0000f26c      85c0           test eax, eax
0x0000f26e      898424d40000.  mov dword [rsp + 0xd4], eax
0x0000f275      0f8545020000   jne 0xf4c0
0x0000f27b      8b9424c00100.  mov edx, dword [rsp + 0x1c0]
0x0000f282      488b3c24       mov rdi, qword [rsp]
0x0000f286      488d75ff       lea rsi, [rbp - 1]
0x0000f28a      e831a6ffff     call sym.re_string_context_at
0x0000f28f      488b542460     mov rdx, qword [rsp + 0x60]
0x0000f294      488bbc248000.  mov rdi, qword [rsp + 0x80]
0x0000f29c      89c1           mov ecx, eax
0x0000f29e      4c03a424d801.  add r12, qword [rsp + 0x1d8]
0x0000f2a6      4c89ee         mov rsi, r13
0x0000f2a9      e8829bffff     call sym.re_acquire_state_context
0x0000f2ae      488bbc24f000.  mov rdi, qword [rsp + 0xf0]
0x0000f2b6      49890424       mov qword [r12], rax
0x0000f2ba      e81126ffff     call sym.imp.free
0x0000f2bf      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x0000f2c7      48833cef00     cmp qword [rdi + rbp*8], 0
0x0000f2cc      0f84df000000   je 0xf3b1
0x0000f2d2      4c8ba4246801.  mov r12, qword [rsp + 0x168]
0x0000f2da      4883c301       add rbx, 1
0x0000f2de      493b5e10       cmp rbx, qword [r14 + 0x10]
0x0000f2e2      0f8da8010000   jge 0xf490
0x0000f2e8      498b4618       mov rax, qword [r14 + 0x18]
0x0000f2ec      498b6d00       mov rbp, qword [r13]
0x0000f2f0      4c8b3cd8       mov r15, qword [rax + rbx*8]
0x0000f2f4      4c89f8         mov rax, r15
0x0000f2f7      48c1e004       shl rax, 4
0x0000f2fb      4801e8         add rax, rbp
0x0000f2fe      f6400a10       test byte [rax + 0xa], 0x10
0x0000f302      74d6           je 0xf2da
0x0000f304      8b4808         mov ecx, dword [rax + 8]
0x0000f307      f7c100ff0300   test ecx, 0x3ff00
0x0000f30d      894c2410       mov dword [rsp + 0x10], ecx
0x0000f311      0f84b9feffff   je 0xf1d0
0x0000f317      8b9424c00100.  mov edx, dword [rsp + 0x1c0]
0x0000f31e      488b3c24       mov rdi, qword [rsp]
0x0000f322      4c89e6         mov rsi, r12
0x0000f325      e896a5ffff     call sym.re_string_context_at
0x0000f32a      8b4c2410       mov ecx, dword [rsp + 0x10]
0x0000f32e      c1e908         shr ecx, 8
0x0000f331      89ca           mov edx, ecx
0x0000f333      6681e2ff03     and dx, 0x3ff
0x0000f338      f6c104         test cl, 4
0x0000f33b      0f8557feffff   jne 0xf198
0x0000f341      83e108         and ecx, 8
0x0000f344      0f845ffeffff   je 0xf1a9
0x0000f34a      a801           test al, 1
0x0000f34c      0f8457feffff   je 0xf1a9
0x0000f352      eb86           jmp 0xf2da
0x0000f354      0f1f4000       nop dword [rax]
0x0000f358      f30f6f02       movdqu xmm0, xmmword [rdx]
0x0000f35c      488d75ff       lea rsi, [rbp - 1]
0x0000f360      488b3c24       mov rdi, qword [rsp]
0x0000f364      0f298424e000.  movaps xmmword [rsp + 0xe0], xmm0
0x0000f36c      488b4210       mov rax, qword [rdx + 0x10]
0x0000f370      8b9424c00100.  mov edx, dword [rsp + 0x1c0]
0x0000f377      48898424f000.  mov qword [rsp + 0xf0], rax
0x0000f37f      e83ca5ffff     call sym.re_string_context_at
0x0000f384      488bbc248000.  mov rdi, qword [rsp + 0x80]
0x0000f38c      488b542460     mov rdx, qword [rsp + 0x60]
0x0000f391      89c1           mov ecx, eax
0x0000f393      4c89ee         mov rsi, r13
0x0000f396      e8959affff     call sym.re_acquire_state_context
0x0000f39b      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x0000f3a3      498907         mov qword [r15], rax
0x0000f3a6      48833cef00     cmp qword [rdi + rbp*8], 0
0x0000f3ab      0f8521ffffff   jne 0xf2d2
0x0000f3b1      8b8424d40000.  mov eax, dword [rsp + 0xd4]
0x0000f3b8      85c0           test eax, eax
0x0000f3ba      0f8412ffffff   je 0xf2d2
0x0000f3c0      488b9c24a000.  mov rbx, qword [rsp + 0xa0]
0x0000f3c8      e903010000     jmp 0xf4d0
0x0000f3cd      0f1f00         nop dword [rax]
0x0000f3d0      498b6e60       mov rbp, qword [r14 + 0x60]
0x0000f3d4      4885ed         test rbp, rbp
0x0000f3d7      0f84a8010000   je 0xf585
0x0000f3dd      488b84246801.  mov rax, qword [rsp + 0x168]
0x0000f3e5      8b9424c00100.  mov edx, dword [rsp + 0x1c0]
0x0000f3ec      488b3c24       mov rdi, qword [rsp]
0x0000f3f0      488d70ff       lea rsi, [rax - 1]
0x0000f3f4      e8c7a4ffff     call sym.re_string_context_at
0x0000f3f9      a801           test al, 1
0x0000f3fb      0f84af000000   je 0xf4b0
0x0000f401      4e8baced0008.  mov r13, qword [rbp + r13*8 + 0x800]
0x0000f409      e9b7f8ffff     jmp 0xecc5
0x0000f40e      6690           nop
0x0000f410      483b84247801.  cmp rax, qword [rsp + 0x178]
0x0000f418      0f8d72f8ffff   jge 0xec90
0x0000f41e      e90bfdffff     jmp 0xf12e
0x0000f423      4c89e7         mov rdi, r12
0x0000f426      e8a524ffff     call sym.imp.free
0x0000f42b      0f1f440000     nop dword [rax + rax]
0x0000f430      488b3c24       mov rdi, qword [rsp]
0x0000f434      e83785ffff     call sym.match_ctx_clean
0x0000f439      488bac24d800.  mov rbp, qword [rsp + 0xd8]
0x0000f441      48638424ac00.  movsxd rax, dword [rsp + 0xac]
0x0000f449      4801c5         add rbp, rax
0x0000f44c      483bac249000.  cmp rbp, qword [rsp + 0x90]
0x0000f454      4889ac24d800.  mov qword [rsp + 0xd8], rbp
0x0000f45c      7c0b           jl 0xf469
0x0000f45e      483b6c2470     cmp rbp, qword [rsp + 0x70]
0x0000f463      0f8e6ff5ffff   jle 0xe9d8
0x0000f469      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x0000f471      c744245c0100.  mov dword [rsp + 0x5c], 1
0x0000f479      e9dafbffff     jmp 0xf058
0x0000f47e      6690           nop
0x0000f480      c744245c0100.  mov dword [rsp + 0x5c], 1
0x0000f488      e9ecfbffff     jmp 0xf079
0x0000f48d      0f1f00         nop dword [rax]
0x0000f490      488b9c24a000.  mov rbx, qword [rsp + 0xa0]
0x0000f498      4d89e0         mov r8, r12
0x0000f49b      c78424d00000.  mov dword [rsp + 0xd0], 0
0x0000f4a6      e9f0f7ffff     jmp 0xec9b
0x0000f4ab      0f1f440000     nop dword [rax + rax]
0x0000f4b0      4e8b6ced00     mov r13, qword [rbp + r13*8]
0x0000f4b5      e90bf8ffff     jmp 0xecc5
0x0000f4ba      660f1f440000   nop word [rax + rax]
0x0000f4c0      488b9c24a000.  mov rbx, qword [rsp + 0xa0]
0x0000f4c8      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x0000f4d0      4885ff         test rdi, rdi
0x0000f4d3      898424d00000.  mov dword [rsp + 0xd0], eax
0x0000f4da      0f84e0000000   je 0xf5c0
0x0000f4e0      4531ed         xor r13d, r13d
0x0000f4e3      e9e8f7ffff     jmp 0xecd0
0x0000f4e8      0f1f84000000.  nop dword [rax + rax]
0x0000f4f0      8b9424c00100.  mov edx, dword [rsp + 0x1c0]
0x0000f4f7      488b3c24       mov rdi, qword [rsp]
0x0000f4fb      488d70ff       lea rsi, [rax - 1]
0x0000f4ff      e8bca3ffff     call sym.re_string_context_at
0x0000f504      a801           test al, 1
0x0000f506      0f8469010000   je 0xf675
0x0000f50c      4c8b7350       mov r14, qword [rbx + 0x50]
0x0000f510      4d85f6         test r14, r14
0x0000f513      0f8565f6ffff   jne 0xeb7e
0x0000f519      8b8424d00000.  mov eax, dword [rsp + 0xd0]
0x0000f520      83f80c         cmp eax, 0xc
0x0000f523      8944245c       mov dword [rsp + 0x5c], eax
0x0000f527      0f8423fbffff   je 0xf050
0x0000f52d      488d0ddc6800.  lea rcx, obj.__PRETTY_FUNCTION__.7972   ; 0x15e10 ; "check_matching"
0x0000f534      488d35f56200.  lea rsi, str..._coreutils_8.31_lib_regexec.c ; 0x15830 ; "../coreutils-8.31/lib/regexec.c"
0x0000f53b      488d3da26300.  lea rdi, str.err____REG_ESPACE          ; 0x158e4 ; "err == REG_ESPACE"
0x0000f542      ba35040000     mov edx, 0x435
0x0000f547      e80425ffff     call sym.imp.__assert_fail
0x0000f54c      0f1f4000       nop dword [rax]
0x0000f550      488b442438     mov rax, qword [rsp + 0x38]
0x0000f555      4883b8980000.  cmp qword [rax + 0x98], 0
0x0000f55d      0f8429020000   je 0xf78c
0x0000f563      e947010000     jmp 0xf6af
0x0000f568      4c89e7         mov rdi, r12
0x0000f56b      e86023ffff     call sym.imp.free
0x0000f570      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x0000f578      c744245c0c00.  mov dword [rsp + 0x5c], 0xc             ; [0xc:4]=0
0x0000f580      e9d3faffff     jmp 0xf058
0x0000f585      488bbc24b801.  mov rdi, qword [rsp + 0x1b8]
0x0000f58d      4c89f6         mov rsi, r14
0x0000f590      e8dbafffff     call sym.build_trtable
0x0000f595      84c0           test al, al
0x0000f597      0f8517f7ffff   jne 0xecb4
0x0000f59d      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x0000f5a5      c78424d00000.  mov dword [rsp + 0xd0], 0xc             ; [0xc:4]=0
0x0000f5b0      4885ff         test rdi, rdi
0x0000f5b3      0f8527ffffff   jne 0xf4e0
0x0000f5b9      0f1f80000000.  nop dword [rax]
0x0000f5c0      c744245c0c00.  mov dword [rsp + 0x5c], 0xc             ; [0xc:4]=0
0x0000f5c8      e98bfaffff     jmp 0xf058
0x0000f5cd      488b5c2468     mov rbx, qword [rsp + 0x68]
0x0000f5d2      448bac24ac00.  mov r13d, dword [rsp + 0xac]
0x0000f5da      4c8bb4249000.  mov r14, qword [rsp + 0x90]
0x0000f5e2      4c8b7c2470     mov r15, qword [rsp + 0x70]
0x0000f5e7      4c8ba4248800.  mov r12, qword [rsp + 0x88]
0x0000f5ef      eb47           jmp 0xf638
0x0000f5f1      0f1f80000000.  nop dword [rax]
0x0000f5f8      4939ec         cmp r12, rbp
0x0000f5fb      4889d8         mov rax, rbx
0x0000f5fe      7e0f           jle 0xf60f
0x0000f600      488b84242801.  mov rax, qword [rsp + 0x128]
0x0000f608      0fb60410       movzx eax, byte [rax + rdx]
0x0000f60c      4801d8         add rax, rbx
0x0000f60f      803800         cmp byte [rax], 0
0x0000f612      0f85c0f4ffff   jne 0xead8
0x0000f618      4963c5         movsxd rax, r13d
0x0000f61b      4801c5         add rbp, rax
0x0000f61e      4c39f5         cmp rbp, r14
0x0000f621      4889ac24d800.  mov qword [rsp + 0xd8], rbp
0x0000f629      0f8c3afeffff   jl 0xf469
0x0000f62f      4c39fd         cmp rbp, r15
0x0000f632      0f8f31feffff   jg 0xf469
0x0000f638      4889ea         mov rdx, rbp
0x0000f63b      482b94244801.  sub rdx, qword [rsp + 0x148]
0x0000f643      483994245801.  cmp qword [rsp + 0x158], rdx
0x0000f64b      77ab           ja 0xf5f8
0x0000f64d      8b9424800200.  mov edx, dword [rsp + 0x280]
0x0000f654      488b3c24       mov rdi, qword [rsp]
0x0000f658      4889ee         mov rsi, rbp
0x0000f65b      e830a5ffff     call sym.re_string_reconstruct
0x0000f660      85c0           test eax, eax
0x0000f662      0f85e0f9ffff   jne 0xf048
0x0000f668      4889ea         mov rdx, rbp
0x0000f66b      482b94244801.  sub rdx, qword [rsp + 0x148]
0x0000f673      eb83           jmp 0xf5f8
0x0000f675      85c0           test eax, eax
0x0000f677      0f8401f5ffff   je 0xeb7e
0x0000f67d      89c2           mov edx, eax
0x0000f67f      83e206         and edx, 6
0x0000f682      83fa06         cmp edx, 6
0x0000f685      0f8464040000   je 0xfaef
0x0000f68b      a802           test al, 2
0x0000f68d      0f84ad040000   je 0xfb40
0x0000f693      4c8b7358       mov r14, qword [rbx + 0x58]
0x0000f697      e974feffff     jmp 0xf510
0x0000f69c      488b442438     mov rax, qword [rsp + 0x38]
0x0000f6a1      4883b8980000.  cmp qword [rax + 0x98], 0
0x0000f6a9      0f84dd000000   je 0xf78c
0x0000f6af      488b4c2420     mov rcx, qword [rsp + 0x20]
0x0000f6b4      488b9c24d801.  mov rbx, qword [rsp + 0x1d8]
0x0000f6bc      488b3c24       mov rdi, qword [rsp]
0x0000f6c0      488b04cb       mov rax, qword [rbx + rcx*8]
0x0000f6c4      488b7010       mov rsi, qword [rax + 0x10]
0x0000f6c8      488d5018       lea rdx, [rax + 0x18]
0x0000f6cc      e8efa3ffff     call sym.check_halt_state_context.isra.20
0x0000f6d1      48898424d001.  mov qword [rsp + 0x1d0], rax
0x0000f6d9      e91af7ffff     jmp 0xedf8
0x0000f6de      31c9           xor ecx, ecx
0x0000f6e0      e989f2ffff     jmp 0xe96e
0x0000f6e5      660fefc0       pxor xmm0, xmm0
0x0000f6e9      48898424e000.  mov qword [rsp + 0xe0], rax
0x0000f6f1      488b3c24       mov rdi, qword [rsp]
0x0000f6f5      488b442420     mov rax, qword [rsp + 0x20]
0x0000f6fa      488d9c24e000.  lea rbx, [rsp + 0xe0]
0x0000f702      48c78424e800.  mov qword [rsp + 0xe8], 0
0x0000f70e      4c89ac24f000.  mov qword [rsp + 0xf0], r13
0x0000f716      4889de         mov rsi, rbx
0x0000f719      48c784241001.  mov qword [rsp + 0x110], 0
0x0000f725      0f2984240001.  movaps xmmword [rsp + 0x100], xmm0
0x0000f72d      48898424f800.  mov qword [rsp + 0xf8], rax
0x0000f735      e886eaffff     call sym.sift_states_backward
0x0000f73a      488bbc241001.  mov rdi, qword [rsp + 0x110]
0x0000f742      89442408       mov dword [rsp + 8], eax
0x0000f746      e88521ffff     call sym.imp.free
0x0000f74b      8b442408       mov eax, dword [rsp + 8]
0x0000f74f      85c0           test eax, eax
0x0000f751      0f8541040000   jne 0xfb98
0x0000f757      49833c2400     cmp qword [r12], 0
0x0000f75c      0f84c1fcffff   je 0xf423
0x0000f762      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x0000f76a      e86121ffff     call sym.imp.free
0x0000f76f      488b442420     mov rax, qword [rsp + 0x20]
0x0000f774      4c89a424d801.  mov qword [rsp + 0x1d8], r12
0x0000f77c      4c89ac24d001.  mov qword [rsp + 0x1d0], r13
0x0000f784      48898424c801.  mov qword [rsp + 0x1c8], rax
0x0000f78c      4883bc247002.  cmp qword [rsp + 0x270], 0
0x0000f795      0f84b5f8ffff   je 0xf050
0x0000f79b      4883bc247002.  cmp qword [rsp + 0x270], 1
0x0000f7a4      0f841e040000   je 0xfbc8
0x0000f7aa      488bb424b800.  mov rsi, qword [rsp + 0xb8]
0x0000f7b2      488b8c247002.  mov rcx, qword [rsp + 0x270]
0x0000f7ba      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000f7c1      48c1e104       shl rcx, 4
0x0000f7c5      488d4610       lea rax, [rsi + 0x10]
0x0000f7c9      4801f1         add rcx, rsi
0x0000f7cc      48895008       mov qword [rax + 8], rdx
0x0000f7d0      488910         mov qword [rax], rdx
0x0000f7d3      4883c010       add rax, 0x10
0x0000f7d7      4839c1         cmp rcx, rax
0x0000f7da      75f0           jne 0xf7cc
0x0000f7dc      488bbc24b800.  mov rdi, qword [rsp + 0xb8]
0x0000f7e4      488b8424c801.  mov rax, qword [rsp + 0x1c8]
0x0000f7ec      48894708       mov qword [rdi + 8], rax
0x0000f7f0      488b442448     mov rax, qword [rsp + 0x48]
0x0000f7f5      48c707000000.  mov qword [rdi], 0
0x0000f7fc      f6403810       test byte [rax + 0x38], 0x10
0x0000f800      0f85dd030000   jne 0xfbe3
0x0000f806      4883bc247002.  cmp qword [rsp + 0x270], 1
0x0000f80f      0f84ce030000   je 0xfbe3
0x0000f815      488b442438     mov rax, qword [rsp + 0x38]
0x0000f81a      4531c0         xor r8d, r8d
0x0000f81d      f680b0000000.  test byte [rax + 0xb0], 1
0x0000f824      740f           je 0xf835
0x0000f826      4531c0         xor r8d, r8d
0x0000f829      4883b8980000.  cmp qword [rax + 0x98], 0
0x0000f831      410f9fc0       setg r8b
0x0000f835      488b9c24b800.  mov rbx, qword [rsp + 0xb8]
0x0000f83d      488b94247002.  mov rdx, qword [rsp + 0x270]
0x0000f845      488b3424       mov rsi, qword [rsp]
0x0000f849      488b7c2448     mov rdi, qword [rsp + 0x48]
0x0000f84e      4889d9         mov rcx, rbx
0x0000f851      e8fad3ffff     call sym.set_regs
0x0000f856      85c0           test eax, eax
0x0000f858      0f85cf020000   jne 0xfb2d
0x0000f85e      488b03         mov rax, qword [rbx]
0x0000f861      440fb69c24ac.  movzx r11d, byte [rsp + 0x1ac]
0x0000f86a      4c8b94245001.  mov r10, qword [rsp + 0x150]
0x0000f872      31c9           xor ecx, ecx
0x0000f874      4c8b8c243801.  mov r9, qword [rsp + 0x138]
0x0000f87c      4c8b84245801.  mov r8, qword [rsp + 0x158]
0x0000f884      488bbc24d800.  mov rdi, qword [rsp + 0xd8]
0x0000f88c      488b9424b800.  mov rdx, qword [rsp + 0xb8]
0x0000f894      eb03           jmp 0xf899
0x0000f896      488b02         mov rax, qword [rdx]
0x0000f899      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000f89d      741a           je 0xf8b9
0x0000f89f      4584db         test r11b, r11b
0x0000f8a2      488b7208       mov rsi, qword [rdx + 8]
0x0000f8a6      0f853e030000   jne 0xfbea
0x0000f8ac      4801f8         add rax, rdi
0x0000f8af      4801fe         add rsi, rdi
0x0000f8b2      488902         mov qword [rdx], rax
0x0000f8b5      48897208       mov qword [rdx + 8], rsi
0x0000f8b9      4883c101       add rcx, 1
0x0000f8bd      4883c210       add rdx, 0x10
0x0000f8c1      483b8c247002.  cmp rcx, qword [rsp + 0x270]
0x0000f8c9      75cb           jne 0xf896
0x0000f8cb      4883bc249800.  cmp qword [rsp + 0x98], 0
0x0000f8d4      7e3f           jle 0xf915
0x0000f8d6      488b94249800.  mov rdx, qword [rsp + 0x98]
0x0000f8de      488bbc24b800.  mov rdi, qword [rsp + 0xb8]
0x0000f8e6      4889c8         mov rax, rcx
0x0000f8e9      48c1e004       shl rax, 4
0x0000f8ed      4801ca         add rdx, rcx
0x0000f8f0      488d440708     lea rax, [rdi + rax + 8]
0x0000f8f5      48c1e204       shl rdx, 4
0x0000f8f9      488d741708     lea rsi, [rdi + rdx + 8]
0x0000f8fe      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000f905      488950f8       mov qword [rax - 8], rdx
0x0000f909      488910         mov qword [rax], rdx
0x0000f90c      4883c010       add rax, 0x10
0x0000f910      4839c6         cmp rsi, rax
0x0000f913      75f0           jne 0xf905
0x0000f915      488b442438     mov rax, qword [rsp + 0x38]
0x0000f91a      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x0000f922      4c8b88e00000.  mov r9, qword [rax + 0xe0]
0x0000f929      4d85c9         test r9, r9
0x0000f92c      0f8426f7ffff   je 0xf058
0x0000f932      4c8b9424b800.  mov r10, qword [rsp + 0xb8]
0x0000f93a      4531c0         xor r8d, r8d
0x0000f93d      498d5210       lea rdx, [r10 + 0x10]
0x0000f941      eb36           jmp 0xf979
0x0000f943      498b44f1f8     mov rax, qword [r9 + rsi*8 - 8]
0x0000f948      4c39c0         cmp rax, r8
0x0000f94b      7425           je 0xf972
0x0000f94d      4883c001       add rax, 1
0x0000f951      48c1e004       shl rax, 4
0x0000f955      498b0402       mov rax, qword [r10 + rax]
0x0000f959      488902         mov qword [rdx], rax
0x0000f95c      498b44f1f8     mov rax, qword [r9 + rsi*8 - 8]
0x0000f961      4883c001       add rax, 1
0x0000f965      48c1e004       shl rax, 4
0x0000f969      498b440208     mov rax, qword [r10 + rax + 8]
0x0000f96e      48894208       mov qword [rdx + 8], rax
0x0000f972      4883c210       add rdx, 0x10
0x0000f976      4989f0         mov r8, rsi
0x0000f979      498d7001       lea rsi, [r8 + 1]
0x0000f97d      4839ce         cmp rsi, rcx
0x0000f980      75c1           jne 0xf943
0x0000f982      e9d1f6ffff     jmp 0xf058
0x0000f987      660f1f840000.  nop word [rax + rax]
0x0000f990      488b3c24       mov rdi, qword [rsp]
0x0000f994      e8d77fffff     call sym.match_ctx_clean
0x0000f999      488bbc241802.  mov rdi, qword [rsp + 0x218]
0x0000f9a1      e82a1fffff     call sym.imp.free
0x0000f9a6      488bbc24f801.  mov rdi, qword [rsp + 0x1f8]
0x0000f9ae      e81d1fffff     call sym.imp.free
0x0000f9b3      e9b8f6ffff     jmp 0xf070
0x0000f9b8      488b442438     mov rax, qword [rsp + 0x38]
0x0000f9bd      f680b0000000.  test byte [rax + 0xb0], 2
0x0000f9c4      0f85cfeeffff   jne 0xe899
0x0000f9ca      48c78424d801.  mov qword [rsp + 0x1d8], 0
0x0000f9d6      e9faeeffff     jmp 0xe8d5
0x0000f9db      4c89e7         mov rdi, r12
0x0000f9de      e8ed1effff     call sym.imp.free
0x0000f9e3      4889ef         mov rdi, rbp
0x0000f9e6      e8e51effff     call sym.imp.free
0x0000f9eb      e940faffff     jmp 0xf430
0x0000f9f0      48898424d800.  mov qword [rsp + 0xd8], rax
0x0000f9f8      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x0000fa00      c744245c0100.  mov dword [rsp + 0x5c], 1
0x0000fa08      e94bf6ffff     jmp 0xf058
0x0000fa0d      4885c0         test rax, rax
0x0000fa10      4989c5         mov r13, rax
0x0000fa13      0f85eff1ffff   jne 0xec08
0x0000fa19      e936f3ffff     jmp 0xed54
0x0000fa1e      6690           nop
0x0000fa20      4989c5         mov r13, rax
0x0000fa23      e9e0f1ffff     jmp 0xec08
0x0000fa28      83f80c         cmp eax, 0xc
0x0000fa2b      0f843ffbffff   je 0xf570
0x0000fa31      488d0dd86300.  lea rcx, obj.__PRETTY_FUNCTION__.7972   ; 0x15e10 ; "check_matching"
0x0000fa38      488d35f15d00.  lea rsi, str..._coreutils_8.31_lib_regexec.c ; 0x15830 ; "../coreutils-8.31/lib/regexec.c"
0x0000fa3f      488d3d9e5e00.  lea rdi, str.err____REG_ESPACE          ; 0x158e4 ; "err == REG_ESPACE"
0x0000fa46      ba6c040000     mov edx, 0x46c
0x0000fa4b      e80020ffff     call sym.imp.__assert_fail
0x0000fa50      41807e6800     cmp byte [r14 + 0x68], 0
0x0000fa55      786f           js 0xfac6
0x0000fa57      8b742458       mov esi, dword [rsp + 0x58]
0x0000fa5b      488b442408     mov rax, qword [rsp + 8]
0x0000fa60      85f6           test esi, esi
0x0000fa62      4889442420     mov qword [rsp + 0x20], rax
0x0000fa67      0f84f9f2ffff   je 0xed66
0x0000fa6d      48c744243001.  mov qword [rsp + 0x30], 1
0x0000fa76      e952f1ffff     jmp 0xebcd
0x0000fa7b      4889df         mov rdi, rbx
0x0000fa7e      c744245c0c00.  mov dword [rsp + 0x5c], 0xc             ; [0xc:4]=0
0x0000fa86      e9cdf5ffff     jmp 0xf058
0x0000fa8b      498d5e10       lea rbx, [r14 + 0x10]
0x0000fa8f      498d6e18       lea rbp, [r14 + 0x18]
0x0000fa93      488b3c24       mov rdi, qword [rsp]
0x0000fa97      31c9           xor ecx, ecx
0x0000fa99      4889ea         mov rdx, rbp
0x0000fa9c      4889de         mov rsi, rbx
0x0000fa9f      e8cc9cffff     call sym.check_subexp_matching_top.isra.18
0x0000faa4      85c0           test eax, eax
0x0000faa6      898424d00000.  mov dword [rsp + 0xd0], eax
0x0000faad      7549           jne 0xfaf8
0x0000faaf      410fb64668     movzx eax, byte [r14 + 0x68]
0x0000fab4      a840           test al, 0x40                           ; segment.PHDR
0x0000fab6      0f85e4000000   jne 0xfba0
0x0000fabc      c644241800     mov byte [rsp + 0x18], 0
0x0000fac1      e9edf0ffff     jmp 0xebb3
0x0000fac6      498b7610       mov rsi, qword [r14 + 0x10]
0x0000faca      488b4c2408     mov rcx, qword [rsp + 8]
0x0000facf      498d5618       lea rdx, [r14 + 0x18]
0x0000fad3      488b3c24       mov rdi, qword [rsp]
0x0000fad7      e8e49fffff     call sym.check_halt_state_context.isra.20
0x0000fadc      4885c0         test rax, rax
0x0000fadf      4889442430     mov qword [rsp + 0x30], rax
0x0000fae4      0f84e3f0ffff   je 0xebcd
0x0000faea      e968ffffff     jmp 0xfa57
0x0000faef      4c8b7360       mov r14, qword [rbx + 0x60]
0x0000faf3      e918faffff     jmp 0xf510
0x0000faf8      4898           cdqe
0x0000fafa      4889442420     mov qword [rsp + 0x20], rax
0x0000faff      e962f2ffff     jmp 0xed66
0x0000fb04      4c8b742418     mov r14, qword [rsp + 0x18]
0x0000fb09      4489f8         mov eax, r15d
0x0000fb0c      4c89e7         mov rdi, r12
0x0000fb0f      89442408       mov dword [rsp + 8], eax
0x0000fb13      e8b81dffff     call sym.imp.free
0x0000fb18      4c89f7         mov rdi, r14
0x0000fb1b      e8b01dffff     call sym.imp.free
0x0000fb20      8b442408       mov eax, dword [rsp + 8]
0x0000fb24      83f801         cmp eax, 1
0x0000fb27      0f8403f9ffff   je 0xf430
0x0000fb2d      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x0000fb35      8944245c       mov dword [rsp + 0x5c], eax
0x0000fb39      e91af5ffff     jmp 0xf058
0x0000fb3e      6690           nop
0x0000fb40      a804           test al, 4
0x0000fb42      0f8436f0ffff   je 0xeb7e
0x0000fb48      498b5650       mov rdx, qword [r14 + 0x50]
0x0000fb4c      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000fb51      89c1           mov ecx, eax
0x0000fb53      4889de         mov rsi, rbx
0x0000fb56      e8d592ffff     call sym.re_acquire_state_context
0x0000fb5b      4989c6         mov r14, rax
0x0000fb5e      e9adf9ffff     jmp 0xf510
0x0000fb63      4c8b7c2410     mov r15, qword [rsp + 0x10]
0x0000fb68      488b4c2408     mov rcx, qword [rsp + 8]
0x0000fb6d      4889ea         mov rdx, rbp
0x0000fb70      4c89e6         mov rsi, r12
0x0000fb73      4c89742420     mov qword [rsp + 0x20], r14
0x0000fb78      4c89ff         mov rdi, r15
0x0000fb7b      e87097ffff     call sym.merge_state_array
0x0000fb80      4889ef         mov rdi, rbp
0x0000fb83      89442408       mov dword [rsp + 8], eax
0x0000fb87      e8441dffff     call sym.imp.free
0x0000fb8c      8b442408       mov eax, dword [rsp + 8]
0x0000fb90      85c0           test eax, eax
0x0000fb92      0f84cafbffff   je 0xf762
0x0000fb98      4531f6         xor r14d, r14d
0x0000fb9b      e96cffffff     jmp 0xfb0c
0x0000fba0      488b3c24       mov rdi, qword [rsp]
0x0000fba4      4889ea         mov rdx, rbp
0x0000fba7      4889de         mov rsi, rbx
0x0000fbaa      e831dbffff     call sym.transit_state_bkref.isra.34
0x0000fbaf      85c0           test eax, eax
0x0000fbb1      898424d00000.  mov dword [rsp + 0xd0], eax
0x0000fbb8      0f853affffff   jne 0xfaf8
0x0000fbbe      410fb64668     movzx eax, byte [r14 + 0x68]
0x0000fbc3      e9f4feffff     jmp 0xfabc
0x0000fbc8      488bb424b800.  mov rsi, qword [rsp + 0xb8]
0x0000fbd0      488b8424c801.  mov rax, qword [rsp + 0x1c8]
0x0000fbd8      48c706000000.  mov qword [rsi], 0
0x0000fbdf      48894608       mov qword [rsi + 8], rax
0x0000fbe3      31c0           xor eax, eax
0x0000fbe5      e977fcffff     jmp 0xf861
0x0000fbea      4939c2         cmp r10, rax
0x0000fbed      741d           je 0xfc0c
0x0000fbef      498b04c1       mov rax, qword [r9 + rax*8]
0x0000fbf3      4939f2         cmp r10, rsi
0x0000fbf6      488902         mov qword [rdx], rax
0x0000fbf9      7409           je 0xfc04
0x0000fbfb      498b34f1       mov rsi, qword [r9 + rsi*8]
0x0000fbff      e9a8fcffff     jmp 0xf8ac
0x0000fc04      4c89c6         mov rsi, r8
0x0000fc07      e9a0fcffff     jmp 0xf8ac
0x0000fc0c      4c89c0         mov rax, r8
0x0000fc0f      ebe2           jmp 0xfbf3
0x0000fc11      4889ac24d800.  mov qword [rsp + 0xd8], rbp
0x0000fc19      e9baeeffff     jmp 0xead8
0x0000fc1e      488984246801.  mov qword [rsp + 0x168], rax
0x0000fc26      e929f1ffff     jmp 0xed54
0x0000fc2b      e8b01dffff     call sym.imp.__stack_chk_fail
;-- update_cur_sifted_state:
0x0000fc30      4157           push r15
0x0000fc32      4156           push r14
0x0000fc34      4889f8         mov rax, rdi
0x0000fc37      4155           push r13
0x0000fc39      4154           push r12
0x0000fc3b      4989f5         mov r13, rsi
0x0000fc3e      55             push rbp
0x0000fc3f      53             push rbx
0x0000fc40      4889d5         mov rbp, rdx
0x0000fc43      4889cb         mov rbx, rcx
0x0000fc46      488d0cd50000.  lea rcx, [rdx*8]
0x0000fc4e      4881eca80000.  sub rsp, 0xa8
0x0000fc55      4c8ba0980000.  mov r12, qword [rax + 0x98]
0x0000fc5c      488b80b80000.  mov rax, qword [rax + 0xb8]
0x0000fc63      48897c2408     mov qword [rsp + 8], rdi
0x0000fc68      48894c2418     mov qword [rsp + 0x18], rcx
0x0000fc6d      64488b3c2528.  mov rdi, qword fs:[0x28]
0x0000fc76      4889bc249800.  mov qword [rsp + 0x98], rdi
0x0000fc7e      31ff           xor edi, edi
0x0000fc80      488b14d0       mov rdx, qword [rax + rdx*8]
0x0000fc84      c744245c0000.  mov dword [rsp + 0x5c], 0
0x0000fc8c      488b4b08       mov rcx, qword [rbx + 8]
0x0000fc90      4885d2         test rdx, rdx
0x0000fc93      0f844f020000   je 0xfee8
0x0000fc99      488d7a08       lea rdi, [rdx + 8]
0x0000fc9d      4885c9         test rcx, rcx
0x0000fca0      48897c2410     mov qword [rsp + 0x10], rdi
0x0000fca5      7551           jne 0xfcf8
0x0000fca7      488b16         mov rdx, qword [rsi]
0x0000fcaa      48c704ea0000.  mov qword [rdx + rbp*8], 0
0x0000fcb2      488b14e8       mov rdx, qword [rax + rbp*8]
0x0000fcb6      31c0           xor eax, eax
0x0000fcb8      f6426840       test byte [rdx + 0x68], 0x40
0x0000fcbc      0f85dd000000   jne 0xfd9f
0x0000fcc2      660f1f440000   nop word [rax + rax]
0x0000fcc8      488bbc249800.  mov rdi, qword [rsp + 0x98]
0x0000fcd0      6448333c2528.  xor rdi, qword fs:[0x28]
0x0000fcd9      0f859c070000   jne 0x1047b
0x0000fcdf      4881c4a80000.  add rsp, 0xa8
0x0000fce6      5b             pop rbx
0x0000fce7      5d             pop rbp
0x0000fce8      415c           pop r12
0x0000fcea      415d           pop r13
0x0000fcec      415e           pop r14
0x0000fcee      415f           pop r15
0x0000fcf0      c3             ret
0x0000fcf1      0f1f80000000.  nop dword [rax]
0x0000fcf8      488d7c2460     lea rdi, [rsp + 0x60]
0x0000fcfd      4889da         mov rdx, rbx
0x0000fd00      4c89e6         mov rsi, r12
0x0000fd03      c74424600000.  mov dword [rsp + 0x60], 0
0x0000fd0b      e8e093ffff     call sym.re_acquire_state
0x0000fd10      4889c2         mov rdx, rax
0x0000fd13      8b442460       mov eax, dword [rsp + 0x60]
0x0000fd17      85c0           test eax, eax
0x0000fd19      75ad           jne 0xfcc8
0x0000fd1b      4c8b7a38       mov r15, qword [rdx + 0x38]
0x0000fd1f      4c8d7238       lea r14, [rdx + 0x38]
0x0000fd23      4d85ff         test r15, r15
0x0000fd26      0f8404020000   je 0xff30
0x0000fd2c      488b742410     mov rsi, qword [rsp + 0x10]
0x0000fd31      4c89f2         mov rdx, r14
0x0000fd34      4889df         mov rdi, rbx
0x0000fd37      e8b488ffff     call sym.re_node_set_add_intersect
0x0000fd3c      85c0           test eax, eax
0x0000fd3e      8944245c       mov dword [rsp + 0x5c], eax
0x0000fd42      7584           jne 0xfcc8
0x0000fd44      49837d2800     cmp qword [r13 + 0x28], 0
0x0000fd49      0f8571020000   jne 0xffc0
0x0000fd4f      4c8b742418     mov r14, qword [rsp + 0x18]
0x0000fd54      4d037500       add r14, qword [r13]
0x0000fd58      488d7c245c     lea rdi, [rsp + 0x5c]
0x0000fd5d      4889da         mov rdx, rbx
0x0000fd60      4c89e6         mov rsi, r12
0x0000fd63      e88893ffff     call sym.re_acquire_state
0x0000fd68      498906         mov qword [r14], rax
0x0000fd6b      8b44245c       mov eax, dword [rsp + 0x5c]
0x0000fd6f      85c0           test eax, eax
0x0000fd71      0f8551ffffff   jne 0xfcc8
0x0000fd77      48837c241000   cmp qword [rsp + 0x10], 0
0x0000fd7d      0f8445ffffff   je 0xfcc8
0x0000fd83      488b442408     mov rax, qword [rsp + 8]
0x0000fd88      488b80b80000.  mov rax, qword [rax + 0xb8]
0x0000fd8f      488b14e8       mov rdx, qword [rax + rbp*8]
0x0000fd93      31c0           xor eax, eax
0x0000fd95      f6426840       test byte [rdx + 0x68], 0x40
0x0000fd99      0f8429ffffff   je 0xfcc8
0x0000fd9f      488b442408     mov rax, qword [rsp + 8]
0x0000fda4      31db           xor ebx, ebx
0x0000fda6      488bb0c80000.  mov rsi, qword [rax + 0xc8]
0x0000fdad      4889f2         mov rdx, rsi
0x0000fdb0      4839d3         cmp rbx, rdx
0x0000fdb3      7d5e           jge 0xfe13
0x0000fdb5      488d0413       lea rax, [rbx + rdx]
0x0000fdb9      4889c1         mov rcx, rax
0x0000fdbc      48c1e93f       shr rcx, 0x3f
0x0000fdc0      4801c1         add rcx, rax
0x0000fdc3      488b442408     mov rax, qword [rsp + 8]
0x0000fdc8      48d1f9         sar rcx, 1
0x0000fdcb      488bb8d80000.  mov rdi, qword [rax + 0xd8]
0x0000fdd2      488d0489       lea rax, [rcx + rcx*4]
0x0000fdd6      483b6cc708     cmp rbp, qword [rdi + rax*8 + 8]
0x0000fddb      7e31           jle 0xfe0e
0x0000fddd      e935010000     jmp 0xff17
0x0000fde2      660f1f440000   nop word [rax + rax]
0x0000fde8      488d140b       lea rdx, [rbx + rcx]
0x0000fdec      4889d0         mov rax, rdx
0x0000fdef      48c1e83f       shr rax, 0x3f
0x0000fdf3      4801d0         add rax, rdx
0x0000fdf6      48d1f8         sar rax, 1
0x0000fdf9      488d1480       lea rdx, [rax + rax*4]
0x0000fdfd      4989c0         mov r8, rax
0x0000fe00      483b6cd708     cmp rbp, qword [rdi + rdx*8 + 8]
0x0000fe05      0f8f15010000   jg 0xff20
0x0000fe0b      4889c1         mov rcx, rax
0x0000fe0e      4839cb         cmp rbx, rcx
0x0000fe11      7cd5           jl 0xfde8
0x0000fe13      4839de         cmp rsi, rbx
0x0000fe16      0f8ef4000000   jle 0xff10
0x0000fe1c      488d049b       lea rax, [rbx + rbx*4]
0x0000fe20      488d34c50000.  lea rsi, [rax*8]
0x0000fe28      488b442408     mov rax, qword [rsp + 8]
0x0000fe2d      4889742440     mov qword [rsp + 0x40], rsi
0x0000fe32      488b80d80000.  mov rax, qword [rax + 0xd8]
0x0000fe39      483b6c3008     cmp rbp, qword [rax + rsi + 8]
0x0000fe3e      0f85cc000000   jne 0xff10
0x0000fe44      4883fbff       cmp rbx, 0xffffffffffffffff
0x0000fe48      0f84c2000000   je 0xff10
0x0000fe4e      488b442408     mov rax, qword [rsp + 8]
0x0000fe53      48c744246000.  mov qword [rsp + 0x60], 0
0x0000fe5c      4c8ba0980000.  mov r12, qword [rax + 0x98]
0x0000fe63      488b442410     mov rax, qword [rsp + 0x10]
0x0000fe68      4883780800     cmp qword [rax + 8], 0
0x0000fe6d      0f8e9d000000   jle 0xff10
0x0000fe73      488d442460     lea rax, [rsp + 0x60]
0x0000fe78      48c744242000.  mov qword [rsp + 0x20], 0
0x0000fe81      48895c2448     mov qword [rsp + 0x48], rbx
0x0000fe86      4d89ef         mov r15, r13
0x0000fe89      4889442438     mov qword [rsp + 0x38], rax
0x0000fe8e      eb22           jmp 0xfeb2
0x0000fe90      3c04           cmp al, 4
0x0000fe92      0f8480030000   je 0x10218
0x0000fe98      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0000fe9d      488344242001   add qword [rsp + 0x20], 1
0x0000fea3      488b442420     mov rax, qword [rsp + 0x20]
0x0000fea8      483b4108       cmp rax, qword [rcx + 8]
0x0000feac      0f8db9050000   jge 0x1046b
0x0000feb2      488b442410     mov rax, qword [rsp + 0x10]
0x0000feb7      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0000febc      488b4010       mov rax, qword [rax + 0x10]
0x0000fec0      4c8b34f8       mov r14, qword [rax + rdi*8]
0x0000fec4      4c89f0         mov rax, r14
0x0000fec7      48c1e004       shl rax, 4
0x0000fecb      49030424       add rax, qword [r12]
0x0000fecf      4d3b7710       cmp r14, qword [r15 + 0x10]
0x0000fed3      0fb64008       movzx eax, byte [rax + 8]
0x0000fed7      75b7           jne 0xfe90
0x0000fed9      493b6f18       cmp rbp, qword [r15 + 0x18]
0x0000fedd      75b1           jne 0xfe90
0x0000fedf      ebb7           jmp 0xfe98
0x0000fee1      0f1f80000000.  nop dword [rax]
0x0000fee8      4c8d34ed0000.  lea r14, [rbp*8]
0x0000fef0      4c0336         add r14, qword [rsi]
0x0000fef3      4885c9         test rcx, rcx
0x0000fef6      0f85b4000000   jne 0xffb0
0x0000fefc      49c706000000.  mov qword [r14], 0
0x0000ff03      31c0           xor eax, eax
0x0000ff05      e9befdffff     jmp 0xfcc8
0x0000ff0a      660f1f440000   nop word [rax + rax]
0x0000ff10      31c0           xor eax, eax
0x0000ff12      e9b1fdffff     jmp 0xfcc8
0x0000ff17      4989c8         mov r8, rcx
0x0000ff1a      4889d1         mov rcx, rdx
0x0000ff1d      0f1f00         nop dword [rax]
0x0000ff20      498d5801       lea rbx, [r8 + 1]
0x0000ff24      4889ca         mov rdx, rcx
0x0000ff27      e984feffff     jmp 0xfdb0
0x0000ff2c      0f1f4000       nop dword [rax]
0x0000ff30      488b7b08       mov rdi, qword [rbx + 8]
0x0000ff34      48c742400000.  mov qword [rdx + 0x40], 0
0x0000ff3c      4889542420     mov qword [rsp + 0x20], rdx
0x0000ff41      48897a38       mov qword [rdx + 0x38], rdi
0x0000ff45      48c1e703       shl rdi, 3
0x0000ff49      e8b21bffff     call sym.imp.malloc
0x0000ff4e      488b542420     mov rdx, qword [rsp + 0x20]
0x0000ff53      4885c0         test rax, rax
0x0000ff56      48894248       mov qword [rdx + 0x48], rax
0x0000ff5a      7447           je 0xffa3
0x0000ff5c      48837b0800     cmp qword [rbx + 8], 0
0x0000ff61      c74424600000.  mov dword [rsp + 0x60], 0
0x0000ff69      7f13           jg 0xff7e
0x0000ff6b      e9bcfdffff     jmp 0xfd2c
0x0000ff70      4983c701       add r15, 1
0x0000ff74      4c3b7b08       cmp r15, qword [rbx + 8]
0x0000ff78      0f8daefdffff   jge 0xfd2c
0x0000ff7e      488b4310       mov rax, qword [rbx + 0x10]
0x0000ff82      4c89f7         mov rdi, r14
0x0000ff85      4a8b04f8       mov rax, qword [rax + r15*8]
0x0000ff89      488d1440       lea rdx, [rax + rax*2]
0x0000ff8d      498b442438     mov rax, qword [r12 + 0x38]
0x0000ff92      488d34d0       lea rsi, [rax + rdx*8]
0x0000ff96      e86580ffff     call sym.re_node_set_merge
0x0000ff9b      85c0           test eax, eax
0x0000ff9d      89442460       mov dword [rsp + 0x60], eax
0x0000ffa1      74cd           je 0xff70
0x0000ffa3      b80c000000     mov eax, 0xc
0x0000ffa8      e91bfdffff     jmp 0xfcc8
0x0000ffad      0f1f00         nop dword [rax]
0x0000ffb0      48c744241000.  mov qword [rsp + 0x10], 0
0x0000ffb9      e99afdffff     jmp 0xfd58
0x0000ffbe      6690           nop
0x0000ffc0      488b442408     mov rax, qword [rsp + 8]
0x0000ffc5      488b80d80000.  mov rax, qword [rax + 0xd8]
0x0000ffcc      4889442420     mov qword [rsp + 0x20], rax
0x0000ffd1      0f8ed4000000   jle 0x100ab
0x0000ffd7      4531ff         xor r15d, r15d
0x0000ffda      660f1f440000   nop word [rax + rax]
0x0000ffe0      498b4530       mov rax, qword [r13 + 0x30]
0x0000ffe4      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0000ffe9      4a8b04f8       mov rax, qword [rax + r15*8]
0x0000ffed      488d0480       lea rax, [rax + rax*4]
0x0000fff1      488d14c7       lea rdx, [rdi + rax*8]
0x0000fff5      483b6a10       cmp rbp, qword [rdx + 0x10]
0x0000fff9      0f8e9e000000   jle 0x1009d
0x0000ffff      483b6a08       cmp rbp, qword [rdx + 8]
0x00010003      0f8f94000000   jg 0x1009d
0x00010009      488b0a         mov rcx, qword [rdx]
0x0001000c      498b0424       mov rax, qword [r12]
0x00010010      488b7308       mov rsi, qword [rbx + 8]
0x00010014      48c1e104       shl rcx, 4
0x00010018      483b6a18       cmp rbp, qword [rdx + 0x18]
0x0001001c      4c8b0408       mov r8, qword [rax + rcx]
0x00010020      0f849a000000   je 0x100c0
0x00010026      4531f6         xor r14d, r14d
0x00010029      4885f6         test rsi, rsi
0x0001002c      7e6f           jle 0x1009d
0x0001002e      48896c2428     mov qword [rsp + 0x28], rbp
0x00010033      4c89c5         mov rbp, r8
0x00010036      eb16           jmp 0x1004e
0x00010038      0f1f84000000.  nop dword [rax + rax]
0x00010040      4983c601       add r14, 1
0x00010044      4c3b7308       cmp r14, qword [rbx + 8]
0x00010048      7d4e           jge 0x10098
0x0001004a      498b0424       mov rax, qword [r12]
0x0001004e      488b5310       mov rdx, qword [rbx + 0x10]
0x00010052      4a8b34f2       mov rsi, qword [rdx + r14*8]
0x00010056      4889f2         mov rdx, rsi
0x00010059      48c1e204       shl rdx, 4
0x0001005d      4801d0         add rax, rdx
0x00010060      0fb65008       movzx edx, byte [rax + 8]
0x00010064      83ea08         sub edx, 8
0x00010067      83fa01         cmp edx, 1
0x0001006a      77d4           ja 0x10040
0x0001006c      483b28         cmp rbp, qword [rax]
0x0001006f      75cf           jne 0x10040
0x00010071      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00010076      4889da         mov rdx, rbx
0x00010079      4c89e7         mov rdi, r12
0x0001007c      e8afa2ffff     call sym.sub_epsilon_src_nodes
0x00010081      85c0           test eax, eax
0x00010083      0f853ffcffff   jne 0xfcc8
0x00010089      4983c601       add r14, 1
0x0001008d      4c3b7308       cmp r14, qword [rbx + 8]
0x00010091      7cb7           jl 0x1004a
0x00010093      0f1f440000     nop dword [rax + rax]
0x00010098      488b6c2428     mov rbp, qword [rsp + 0x28]
0x0001009d      4983c701       add r15, 1
0x000100a1      4d3b7d28       cmp r15, qword [r13 + 0x28]
0x000100a5      0f8c35ffffff   jl 0xffe0
0x000100ab      c744245c0000.  mov dword [rsp + 0x5c], 0
0x000100b3      e997fcffff     jmp 0xfd4f
0x000100b8      0f1f84000000.  nop dword [rax + rax]
0x000100c0      4885f6         test rsi, rsi
0x000100c3      7ed8           jle 0x1009d
0x000100c5      4c8b5310       mov r10, qword [rbx + 0x10]
0x000100c9      49c7c1ffffff.  mov r9, 0xffffffffffffffff
0x000100d0      4d8d1cf2       lea r11, [r10 + rsi*8]
0x000100d4      4c89d1         mov rcx, r10
0x000100d7      4c89ce         mov rsi, r9
0x000100da      eb1a           jmp 0x100f6
0x000100dc      0f1f4000       nop dword [rax]
0x000100e0      4183fe09       cmp r14d, 9
0x000100e4      7507           jne 0x100ed
0x000100e6      4c3b02         cmp r8, qword [rdx]
0x000100e9      4c0f44cf       cmove r9, rdi
0x000100ed      4883c108       add rcx, 8
0x000100f1      4939cb         cmp r11, rcx
0x000100f4      7428           je 0x1011e
0x000100f6      488b39         mov rdi, qword [rcx]
0x000100f9      4889fa         mov rdx, rdi
0x000100fc      48c1e204       shl rdx, 4
0x00010100      4801c2         add rdx, rax
0x00010103      440fb67208     movzx r14d, byte [rdx + 8]
0x00010108      4183fe08       cmp r14d, 8
0x0001010c      75d2           jne 0x100e0
0x0001010e      4c3b02         cmp r8, qword [rdx]
0x00010111      480f44f7       cmove rsi, rdi
0x00010115      4883c108       add rcx, 8
0x00010119      4939cb         cmp r11, rcx
0x0001011c      75d8           jne 0x100f6
0x0001011e      4885f6         test rsi, rsi
0x00010121      4d89ce         mov r14, r9
0x00010124      4c894c2428     mov qword [rsp + 0x28], r9
0x00010129      0f88c1000000   js 0x101f0
0x0001012f      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00010134      4889da         mov rdx, rbx
0x00010137      4c89e7         mov rdi, r12
0x0001013a      e8f1a1ffff     call sym.sub_epsilon_src_nodes
0x0001013f      85c0           test eax, eax
0x00010141      0f8581fbffff   jne 0xfcc8
0x00010147      4d85f6         test r14, r14
0x0001014a      0f884dffffff   js 0x1009d
0x00010150      48837b0800     cmp qword [rbx + 8], 0
0x00010155      0f8e42ffffff   jle 0x1009d
0x0001015b      4c8b5310       mov r10, qword [rbx + 0x10]
0x0001015f      4531f6         xor r14d, r14d
0x00010162      48896c2430     mov qword [rsp + 0x30], rbp
0x00010167      4c89f5         mov rbp, r14
0x0001016a      4c8b742428     mov r14, qword [rsp + 0x28]
0x0001016f      eb19           jmp 0x1018a
0x00010171      0f1f80000000.  nop dword [rax]
0x00010178      4883c501       add rbp, 1
0x0001017c      483b6b08       cmp rbp, qword [rbx + 8]
0x00010180      0f8d82000000   jge 0x10208
0x00010186      4c8b5310       mov r10, qword [rbx + 0x10]
0x0001018a      4d8b14ea       mov r10, qword [r10 + rbp*8]
0x0001018e      498b442438     mov rax, qword [r12 + 0x38]
0x00010193      4c89f2         mov rdx, r14
0x00010196      4f8d0c52       lea r9, [r10 + r10*2]
0x0001019a      49c1e103       shl r9, 3
0x0001019e      4c01c8         add rax, r9
0x000101a1      488b7808       mov rdi, qword [rax + 8]
0x000101a5      488d7010       lea rsi, [rax + 0x10]
0x000101a9      e83279ffff     call sym.re_node_set_contains.isra.3
0x000101ae      4885c0         test rax, rax
0x000101b1      75c5           jne 0x10178
0x000101b3      4d034c2430     add r9, qword [r12 + 0x30]
0x000101b8      498b7908       mov rdi, qword [r9 + 8]
0x000101bc      498d7110       lea rsi, [r9 + 0x10]
0x000101c0      e81b79ffff     call sym.re_node_set_contains.isra.3
0x000101c5      4885c0         test rax, rax
0x000101c8      75ae           jne 0x10178
0x000101ca      488b4c2410     mov rcx, qword [rsp + 0x10]
0x000101cf      4889da         mov rdx, rbx
0x000101d2      4c89d6         mov rsi, r10
0x000101d5      4c89e7         mov rdi, r12
0x000101d8      e853a1ffff     call sym.sub_epsilon_src_nodes
0x000101dd      85c0           test eax, eax
0x000101df      0f85e3faffff   jne 0xfcc8
0x000101e5      4883ed01       sub rbp, 1
0x000101e9      eb8d           jmp 0x10178
0x000101eb      0f1f440000     nop dword [rax + rax]
0x000101f0      48837c242800   cmp qword [rsp + 0x28], 0
0x000101f6      0f8963ffffff   jns 0x1015f
0x000101fc      e99cfeffff     jmp 0x1009d
0x00010201      0f1f80000000.  nop dword [rax]
0x00010208      488b6c2430     mov rbp, qword [rsp + 0x30]
0x0001020d      e98bfeffff     jmp 0x1009d
0x00010212      660f1f440000   nop word [rax + rax]
0x00010218      488b442408     mov rax, qword [rsp + 8]
0x0001021d      4c8b6c2440     mov r13, qword [rsp + 0x40]
0x00010222      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00010227      4c03a8d80000.  add r13, qword [rax + 0xd8]
0x0001022e      4b8d0476       lea rax, [r14 + r14*2]
0x00010232      48c1e003       shl rax, 3
0x00010236      4889442430     mov qword [rsp + 0x30], rax
0x0001023b      4a8d04f50000.  lea rax, [r14*8]
0x00010243      4889442428     mov qword [rsp + 0x28], rax
0x00010248      4c89f8         mov rax, r15
0x0001024b      4d89ef         mov r15, r13
0x0001024e      4989dd         mov r13, rbx
0x00010251      4889c3         mov rbx, rax
0x00010254      e965010000     jmp 0x103be
0x00010259      0f1f80000000.  nop dword [rax]
0x00010260      498b4718       mov rax, qword [r15 + 0x18]
0x00010264      492b4710       sub rax, qword [r15 + 0x10]
0x00010268      4885c0         test rax, rax
0x0001026b      4c8d4c0500     lea r9, [rbp + rax]
0x00010270      0f845a010000   je 0x103d0
0x00010276      498b442418     mov rax, qword [r12 + 0x18]
0x0001027b      488b742428     mov rsi, qword [rsp + 0x28]
0x00010280      4c8b1430       mov r10, qword [rax + rsi]
0x00010284      4c3b4b18       cmp r9, qword [rbx + 0x18]
0x00010288      0f8f39010000   jg 0x103c7
0x0001028e      488b03         mov rax, qword [rbx]
0x00010291      4a8b04c8       mov rax, qword [rax + r9*8]
0x00010295      4885c0         test rax, rax
0x00010298      0f8429010000   je 0x103c7
0x0001029e      488b7810       mov rdi, qword [rax + 0x10]
0x000102a2      488d7018       lea rsi, [rax + 0x18]
0x000102a6      4c89d2         mov rdx, r10
0x000102a9      e83278ffff     call sym.re_node_set_contains.isra.3
0x000102ae      4885c0         test rax, rax
0x000102b1      0f8410010000   je 0x103c7
0x000102b7      4883ec08       sub rsp, 8
0x000102bb      488d5330       lea rdx, [rbx + 0x30]
0x000102bf      488d7328       lea rsi, [rbx + 0x28]
0x000102c3      4151           push r9
0x000102c5      488b7c2418     mov rdi, qword [rsp + 0x18]
0x000102ca      4c89f1         mov rcx, r14
0x000102cd      4d89d1         mov r9, r10
0x000102d0      4989e8         mov r8, rbp
0x000102d3      e8b87affff     call sym.check_dst_limits.isra.13
0x000102d8      84c0           test al, al
0x000102da      5a             pop rdx
0x000102db      59             pop rcx
0x000102dc      0f85e5000000   jne 0x103c7
0x000102e2      48837c246000   cmp qword [rsp + 0x60], 0
0x000102e8      0f840a010000   je 0x103f8
0x000102ee      488b442438     mov rax, qword [rsp + 0x38]
0x000102f3      4c89ee         mov rsi, r13
0x000102f6      4c89742470     mov qword [rsp + 0x70], r14
0x000102fb      48896c2478     mov qword [rsp + 0x78], rbp
0x00010300      488d7820       lea rdi, [rax + 0x20]
0x00010304      e89762ffff     call sym.re_node_set_insert
0x00010309      84c0           test al, al
0x0001030b      0f8453010000   je 0x10464
0x00010311      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00010316      488b442460     mov rax, qword [rsp + 0x60]
0x0001031b      488b742438     mov rsi, qword [rsp + 0x38]
0x00010320      4c8b3c38       mov r15, qword [rax + rdi]
0x00010324      488b7c2408     mov rdi, qword [rsp + 8]
0x00010329      e892deffff     call sym.sift_states_backward
0x0001032e      85c0           test eax, eax
0x00010330      0f8508010000   jne 0x1043e
0x00010336      488b7308       mov rsi, qword [rbx + 8]
0x0001033a      488b542460     mov rdx, qword [rsp + 0x60]
0x0001033f      4885f6         test rsi, rsi
0x00010342      7419           je 0x1035d
0x00010344      488d4d01       lea rcx, [rbp + 1]
0x00010348      4c89e7         mov rdi, r12
0x0001034b      e8a08fffff     call sym.merge_state_array
0x00010350      85c0           test eax, eax
0x00010352      0f85e6000000   jne 0x1043e
0x00010358      488b542460     mov rdx, qword [rsp + 0x60]
0x0001035d      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x00010362      488b442418     mov rax, qword [rsp + 0x18]
0x00010367      488bbc248800.  mov rdi, qword [rsp + 0x88]
0x0001036f      4d8d4b30       lea r9, [r11 + 0x30]
0x00010373      4c893c02       mov qword [rdx + rax], r15
0x00010377      4c89ea         mov rdx, r13
0x0001037a      4c89ce         mov rsi, r9
0x0001037d      e85e77ffff     call sym.re_node_set_contains.isra.3
0x00010382      4883e801       sub rax, 1
0x00010386      4889c2         mov rdx, rax
0x00010389      780c           js 0x10397
0x0001038b      498d7b28       lea rdi, [r11 + 0x28]
0x0001038f      4c89ce         mov rsi, r9
0x00010392      e8c978ffff     call sym.re_node_set_remove_at.isra.4.part.5
0x00010397      488b4c2408     mov rcx, qword [rsp + 8]
0x0001039c      4b8d44ad00     lea rax, [r13 + r13*4]
0x000103a1      488b91d80000.  mov rdx, qword [rcx + 0xd8]
0x000103a8      488d04c2       lea rax, [rdx + rax*8]
0x000103ac      0f1f4000       nop dword [rax]
0x000103b0      4983c501       add r13, 1
0x000103b4      80782000       cmp byte [rax + 0x20], 0
0x000103b8      4c8d7828       lea r15, [rax + 0x28]
0x000103bc      7432           je 0x103f0
0x000103be      4d3b37         cmp r14, qword [r15]
0x000103c1      0f8499feffff   je 0x10260
0x000103c7      4c89f8         mov rax, r15
0x000103ca      ebe4           jmp 0x103b0
0x000103cc      0f1f4000       nop dword [rax]
0x000103d0      498b442428     mov rax, qword [r12 + 0x28]
0x000103d5      488b7c2430     mov rdi, qword [rsp + 0x30]
0x000103da      488b443810     mov rax, qword [rax + rdi + 0x10]
0x000103df      4c8b10         mov r10, qword [rax]
0x000103e2      e99dfeffff     jmp 0x10284
0x000103e7      660f1f840000.  nop word [rax + rax]
0x000103f0      4989df         mov r15, rbx
0x000103f3      e9a0faffff     jmp 0xfe98
0x000103f8      488b4330       mov rax, qword [rbx + 0x30]
0x000103fc      488d7320       lea rsi, [rbx + 0x20]
0x00010400      660f6f03       movdqa xmm0, xmmword [rbx]
0x00010404      488984249000.  mov qword [rsp + 0x90], rax
0x0001040c      488b442438     mov rax, qword [rsp + 0x38]
0x00010411      0f29442460     movaps xmmword [rsp + 0x60], xmm0
0x00010416      488d7820       lea rdi, [rax + 0x20]
0x0001041a      660f6f4310     movdqa xmm0, xmmword [rbx + 0x10]
0x0001041f      0f29442470     movaps xmmword [rsp + 0x70], xmm0
0x00010424      660f6f4320     movdqa xmm0, xmmword [rbx + 0x20]
0x00010429      0f2984248000.  movaps xmmword [rsp + 0x80], xmm0
0x00010431      e80a88ffff     call sym.re_node_set_init_copy
0x00010436      85c0           test eax, eax
0x00010438      0f84b0feffff   je 0x102ee
0x0001043e      48837c246000   cmp qword [rsp + 0x60], 0
0x00010444      0f847ef8ffff   je 0xfcc8
0x0001044a      488bbc249000.  mov rdi, qword [rsp + 0x90]
0x00010452      89442408       mov dword [rsp + 8], eax
0x00010456      e87514ffff     call sym.imp.free
0x0001045b      8b442408       mov eax, dword [rsp + 8]
0x0001045f      e964f8ffff     jmp 0xfcc8
0x00010464      b80c000000     mov eax, 0xc
0x00010469      ebd3           jmp 0x1043e
0x0001046b      48837c246000   cmp qword [rsp + 0x60], 0
0x00010471      0f8499faffff   je 0xff10
0x00010477      31c0           xor eax, eax
0x00010479      ebcf           jmp 0x1044a
0x0001047b      e86015ffff     call sym.imp.__stack_chk_fail
;-- parse_bracket_element.constprop.37:
0x00010480      4156           push r14
0x00010482      4155           push r13
0x00010484      4989f2         mov r10, rsi
0x00010487      4154           push r12
0x00010489      55             push rbp
0x0001048a      4c63d9         movsxd r11, ecx
0x0001048d      53             push rbx
0x0001048e      4889d5         mov rbp, rdx
0x00010491      4889fb         mov rbx, rdi
0x00010494      4883ec20       sub rsp, 0x20
0x00010498      4c8b6648       mov r12, qword [rsi + 0x48]
0x0001049c      64488b042528.  mov rax, qword fs:[0x28]
0x000104a5      4889442418     mov qword [rsp + 0x18], rax
0x000104aa      31c0           xor eax, eax
0x000104ac      83be90000000.  cmp dword [rsi + 0x90], 1
0x000104b3      7453           je 0x10508
0x000104b5      4c89e6         mov rsi, r12
0x000104b8      4c89d7         mov rdi, r10
0x000104bb      e87075ffff     call sym.re_string_char_size_at.part.0
0x000104c0      83f801         cmp eax, 1
0x000104c3      7e43           jle 0x10508
0x000104c5      498b5210       mov rdx, qword [r10 + 0x10]
0x000104c9      4898           cdqe
0x000104cb      c70301000000   mov dword [rbx], 1
0x000104d1      4c01e0         add rax, r12
0x000104d4      428b14a2       mov edx, dword [rdx + r12*4]
0x000104d8      895308         mov dword [rbx + 8], edx
0x000104db      49894248       mov qword [r10 + 0x48], rax
0x000104df      31c0           xor eax, eax
0x000104e1      488b4c2418     mov rcx, qword [rsp + 0x18]
0x000104e6      6448330c2528.  xor rcx, qword fs:[0x28]
0x000104ef      0f85e3010000   jne 0x106d8
0x000104f5      4883c420       add rsp, 0x20
0x000104f9      5b             pop rbx
0x000104fa      5d             pop rbp
0x000104fb      415c           pop r12
0x000104fd      415d           pop r13
0x000104ff      415e           pop r14
0x00010501      c3             ret
0x00010502      660f1f440000   nop word [rax + rax]
0x00010508      0fb64508       movzx eax, byte [rbp + 8]
0x0001050c      4d01e3         add r11, r12
0x0001050f      4d895a48       mov qword [r10 + 0x48], r11
0x00010513      89c2           mov edx, eax
0x00010515      83e2fb         and edx, 0xfffffffb                     ; 4294967291
0x00010518      80fa1a         cmp dl, 0x1a
0x0001051b      7423           je 0x10540
0x0001051d      3c1c           cmp al, 0x1c
0x0001051f      741f           je 0x10540
0x00010521      3c16           cmp al, 0x16
0x00010523      7509           jne 0x1052e
0x00010525      4584c9         test r9b, r9b
0x00010528      0f8444010000   je 0x10672
0x0001052e      0fb64500       movzx eax, byte [rbp]
0x00010532      c70300000000   mov dword [rbx], 0
0x00010538      884308         mov byte [rbx + 8], al
0x0001053b      31c0           xor eax, eax
0x0001053d      eba2           jmp 0x104e1
0x0001053f      90             nop
0x00010540      4d8b6268       mov r12, qword [r10 + 0x68]
0x00010544      4d39e3         cmp r11, r12
0x00010547      0f8d1b010000   jge 0x10668
0x0001054d      440fb66d00     movzx r13d, byte [rbp]
0x00010552      4531c0         xor r8d, r8d
0x00010555      eb2b           jmp 0x10582
0x00010557      660f1f840000.  nop word [rax + rax]
0x00010560      488b4308       mov rax, qword [rbx + 8]
0x00010564      46880c00       mov byte [rax + r8], r9b
0x00010568      4983c001       add r8, 1
0x0001056c      4983f820       cmp r8, 0x20                            ; "@"
0x00010570      0f84f2000000   je 0x10668
0x00010576      0fb64508       movzx eax, byte [rbp + 8]
0x0001057a      4d8b5a48       mov r11, qword [r10 + 0x48]
0x0001057e      4d8b6268       mov r12, qword [r10 + 0x68]
0x00010582      3c1e           cmp al, 0x1e
0x00010584      4d63f0         movsxd r14, r8d
0x00010587      7467           je 0x105f0
0x00010589      498b5208       mov rdx, qword [r10 + 8]
0x0001058d      498d4301       lea rax, [r11 + 1]
0x00010591      49894248       mov qword [r10 + 0x48], rax
0x00010595      460fb60c1a     movzx r9d, byte [rdx + r11]
0x0001059a      4c39e0         cmp rax, r12
0x0001059d      0f8dc5000000   jge 0x10668
0x000105a3      4538cd         cmp r13b, r9b
0x000105a6      75b8           jne 0x10560
0x000105a8      498b5208       mov rdx, qword [r10 + 8]
0x000105ac      803c025d       cmp byte [rdx + rax], 0x5d
0x000105b0      75ae           jne 0x10560
0x000105b2      4883c001       add rax, 1
0x000105b6      49894248       mov qword [r10 + 0x48], rax
0x000105ba      488b4308       mov rax, qword [rbx + 8]
0x000105be      42c6043000     mov byte [rax + r14], 0
0x000105c3      0fb64508       movzx eax, byte [rbp + 8]
0x000105c7      3c1c           cmp al, 0x1c
0x000105c9      0f84fc000000   je 0x106cb
0x000105cf      3c1e           cmp al, 0x1e
0x000105d1      0f84e7000000   je 0x106be
0x000105d7      3c1a           cmp al, 0x1a
0x000105d9      0f84d2000000   je 0x106b1
0x000105df      31c0           xor eax, eax
0x000105e1      e9fbfeffff     jmp 0x104e1
0x000105e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000105f0      4180ba8b0000.  cmp byte [r10 + 0x8b], 0
0x000105f8      748f           je 0x10589
0x000105fa      4180ba8c0000.  cmp byte [r10 + 0x8c], 0
0x00010602      0f8490000000   je 0x10698
0x00010608      4d3b5a30       cmp r11, qword [r10 + 0x30]
0x0001060c      740f           je 0x1061d
0x0001060e      498b4210       mov rax, qword [r10 + 0x10]
0x00010612      42833c98ff     cmp dword [rax + r11*4], 0xffffffff
0x00010617      0f846cffffff   je 0x10589
0x0001061d      498b4218       mov rax, qword [r10 + 0x18]
0x00010621      4a8b04d8       mov rax, qword [rax + r11*8]
0x00010625      490302         add rax, qword [r10]
0x00010628      49034228       add rax, qword [r10 + 0x28]
0x0001062c      440fb608       movzx r9d, byte [rax]
0x00010630      41f6c180       test r9b, 0x80
0x00010634      0f854fffffff   jne 0x10589
0x0001063a      4183ba900000.  cmp dword [r10 + 0x90], 1
0x00010642      b801000000     mov eax, 1
0x00010647      740d           je 0x10656
0x00010649      4c89de         mov rsi, r11
0x0001064c      4c89d7         mov rdi, r10
0x0001064f      e8dc73ffff     call sym.re_string_char_size_at.part.0
0x00010654      4898           cdqe
0x00010656      4c01d8         add rax, r11
0x00010659      49894248       mov qword [r10 + 0x48], rax
0x0001065d      e938ffffff     jmp 0x1059a
0x00010662      660f1f440000   nop word [rax + rax]
0x00010668      b807000000     mov eax, 7
0x0001066d      e96ffeffff     jmp 0x104e1
0x00010672      4889e7         mov rdi, rsp
0x00010675      4c89c2         mov rdx, r8
0x00010678      4c89d6         mov rsi, r10
0x0001067b      e85059ffff     call sym.peek_token_bracket
0x00010680      807c240815     cmp byte [rsp + 8], 0x15
0x00010685      b80b000000     mov eax, 0xb
0x0001068a      0f849efeffff   je 0x1052e
0x00010690      e94cfeffff     jmp 0x104e1
0x00010695      0f1f00         nop dword [rax]
0x00010698      498d4301       lea rax, [r11 + 1]
0x0001069c      4d031a         add r11, qword [r10]
0x0001069f      498b5228       mov rdx, qword [r10 + 0x28]
0x000106a3      49894248       mov qword [r10 + 0x48], rax
0x000106a7      450fb60c13     movzx r9d, byte [r11 + rdx]
0x000106ac      e9e9feffff     jmp 0x1059a
0x000106b1      c70303000000   mov dword [rbx], 3
0x000106b7      31c0           xor eax, eax
0x000106b9      e923feffff     jmp 0x104e1
0x000106be      c70304000000   mov dword [rbx], 4
0x000106c4      31c0           xor eax, eax
0x000106c6      e916feffff     jmp 0x104e1
0x000106cb      c70302000000   mov dword [rbx], 2
0x000106d1      31c0           xor eax, eax
0x000106d3      e909feffff     jmp 0x104e1
0x000106d8      e80313ffff     call sym.imp.__stack_chk_fail
0x000106dd      0f1f00         nop dword [rax]
;-- peek_token:
0x000106e0      4157           push r15
0x000106e2      4156           push r14
0x000106e4      4155           push r13
0x000106e6      4154           push r12
0x000106e8      55             push rbp
0x000106e9      53             push rbx
0x000106ea      4889fd         mov rbp, rdi
0x000106ed      4883ec38       sub rsp, 0x38
0x000106f1      4c8b7648       mov r14, qword [rsi + 0x48]
0x000106f5      64488b042528.  mov rax, qword fs:[0x28]
0x000106fe      4889442428     mov qword [rsp + 0x28], rax
0x00010703      31c0           xor eax, eax
0x00010705      4c397668       cmp qword [rsi + 0x68], r14
0x00010709      0f8e91000000   jle 0x107a0
0x0001070f      440fb66f0a     movzx r13d, byte [rdi + 0xa]
0x00010714      4989d7         mov r15, rdx
0x00010717      488b5608       mov rdx, qword [rsi + 8]
0x0001071b      4889f3         mov rbx, rsi
0x0001071e      460fb62432     movzx r12d, byte [rdx + r14]
0x00010723      4183e59f       and r13d, 0xffffff9f                    ; 4294967199
0x00010727      44886f0a       mov byte [rdi + 0xa], r13b
0x0001072b      8b8690000000   mov eax, dword [rsi + 0x90]
0x00010731      448827         mov byte [rdi], r12b
0x00010734      83f801         cmp eax, 1
0x00010737      0f8e93000000   jle 0x107d0
0x0001073d      4c3b7630       cmp r14, qword [rsi + 0x30]
0x00010741      0f8499010000   je 0x108e0
0x00010747      488b4e10       mov rcx, qword [rsi + 0x10]
0x0001074b      428b0cb1       mov ecx, dword [rcx + r14*4]
0x0001074f      83f9ff         cmp ecx, 0xffffffff
0x00010752      0f84d8000000   je 0x10830
0x00010758      4180fc5c       cmp r12b, 0x5c
0x0001075c      0f84ee000000   je 0x10850
0x00010762      c6470801       mov byte [rdi + 8], 1
0x00010766      89cf           mov edi, ecx
0x00010768      4889542408     mov qword [rsp + 8], rdx
0x0001076d      890c24         mov dword [rsp], ecx
0x00010770      e87b13ffff     call sym.imp.iswalnum
0x00010775      8b0c24         mov ecx, dword [rsp]
0x00010778      85c0           test eax, eax
0x0001077a      0f95c0         setne al
0x0001077d      83f95f         cmp ecx, 0x5f
0x00010780      0f94c1         sete cl
0x00010783      09c8           or eax, ecx
0x00010785      c1e006         shl eax, 6
0x00010788      4109c5         or r13d, eax
0x0001078b      44886d0a       mov byte [rbp + 0xa], r13b
0x0001078f      488b542408     mov rdx, qword [rsp + 8]
0x00010794      eb76           jmp 0x1080c
0x00010796      662e0f1f8400.  nop word cs:[rax + rax]
0x000107a0      c6470802       mov byte [rdi + 8], 2
0x000107a4      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000107a9      6448333c2528.  xor rdi, qword fs:[0x28]
0x000107b2      0f8520060000   jne 0x10dd8
0x000107b8      4883c438       add rsp, 0x38
0x000107bc      5b             pop rbx
0x000107bd      5d             pop rbp
0x000107be      415c           pop r12
0x000107c0      415d           pop r13
0x000107c2      415e           pop r14
0x000107c4      415f           pop r15
0x000107c6      c3             ret
0x000107c7      660f1f840000.  nop word [rax + rax]
0x000107d0      4180fc5c       cmp r12b, 0x5c
0x000107d4      747a           je 0x10850
0x000107d6      c6450801       mov byte [rbp + 8], 1
0x000107da      48891424       mov qword [rsp], rdx
0x000107de      e88d14ffff     call sym.imp.__ctype_b_loc
0x000107e3      488b30         mov rsi, qword [rax]
0x000107e6      410fb6cc       movzx ecx, r12b
0x000107ea      0fb7044e       movzx eax, word [rsi + rcx*2]
0x000107ee      66c1e803       shr ax, 3
0x000107f2      83e001         and eax, 1
0x000107f5      4180fc5f       cmp r12b, 0x5f
0x000107f9      0f94c1         sete cl
0x000107fc      09c8           or eax, ecx
0x000107fe      c1e006         shl eax, 6
0x00010801      4109c5         or r13d, eax
0x00010804      44886d0a       mov byte [rbp + 0xa], r13b
0x00010808      488b1424       mov rdx, qword [rsp]
0x0001080c      4183ec0a       sub r12d, 0xa
0x00010810      4180fc73       cmp r12b, 0x73
0x00010814      0f8732010000   ja 0x1094c
0x0001081a      488d0d735100.  lea rcx, [0x00015994]
0x00010821      450fb6e4       movzx r12d, r12b
0x00010825      4a6304a1       movsxd rax, dword [rcx + r12*4]
0x00010829      4801c8         add rax, rcx
0x0001082c      ffe0           jmp rax
0x0001082e      6690           nop
0x00010830      4183cd20       or r13d, 0x20                           ; "@"
0x00010834      c6470801       mov byte [rdi + 8], 1
0x00010838      b801000000     mov eax, 1
0x0001083d      44886f0a       mov byte [rdi + 0xa], r13b
0x00010841      e95effffff     jmp 0x107a4
0x00010846      662e0f1f8400.  nop word cs:[rax + rax]
0x00010850      498d7601       lea rsi, [r14 + 1]
0x00010854      483b7358       cmp rsi, qword [rbx + 0x58]
0x00010858      0f8da2000000   jge 0x10900
0x0001085e      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x00010865      0f8585040000   jne 0x10cf0
0x0001086b      420fb67c3201   movzx edi, byte [rdx + r14 + 1]
0x00010871      4189fc         mov r12d, edi
0x00010874      897c2408       mov dword [rsp + 8], edi
0x00010878      83f801         cmp eax, 1
0x0001087b      44886500       mov byte [rbp], r12b
0x0001087f      c6450801       mov byte [rbp + 8], 1
0x00010883      0f8e47040000   jle 0x10cd0
0x00010889      488b4310       mov rax, qword [rbx + 0x10]
0x0001088d      448b04b0       mov r8d, dword [rax + rsi*4]
0x00010891      4489c7         mov edi, r8d
0x00010894      44890424       mov dword [rsp], r8d
0x00010898      e85312ffff     call sym.imp.iswalnum
0x0001089d      448b0424       mov r8d, dword [rsp]
0x000108a1      85c0           test eax, eax
0x000108a3      0f95c0         setne al
0x000108a6      4183f85f       cmp r8d, 0x5f
0x000108aa      0f94c2         sete dl
0x000108ad      418d4c24d9     lea ecx, [r12 - 0x27]
0x000108b2      09d0           or eax, edx
0x000108b4      c1e006         shl eax, 6
0x000108b7      4109c5         or r13d, eax
0x000108ba      80f956         cmp cl, 0x56
0x000108bd      44886d0a       mov byte [rbp + 0xa], r13b
0x000108c1      0f87fe030000   ja 0x10cc5
0x000108c7      488d15965200.  lea rdx, [0x00015b64]
0x000108ce      0fb6c9         movzx ecx, cl
0x000108d1      4863048a       movsxd rax, dword [rdx + rcx*4]
0x000108d5      4801d0         add rax, rdx
0x000108d8      ffe0           jmp rax
0x000108da      660f1f440000   nop word [rax + rax]
0x000108e0      4180fc5c       cmp r12b, 0x5c
0x000108e4      0f8466ffffff   je 0x10850
0x000108ea      488b4310       mov rax, qword [rbx + 0x10]
0x000108ee      c6450801       mov byte [rbp + 8], 1
0x000108f2      428b0cb0       mov ecx, dword [rax + r14*4]
0x000108f6      e96bfeffff     jmp 0x10766
0x000108fb      0f1f440000     nop dword [rax + rax]
0x00010900      c6450824       mov byte [rbp + 8], 0x24                ; '$'
0x00010904      b801000000     mov eax, 1
0x00010909      e996feffff     jmp 0x107a4
0x0001090e      6690           nop
0x00010910      4181e7001200.  and r15d, 0x1200
0x00010917      b801000000     mov eax, 1
0x0001091c      4981ff001200.  cmp r15, 0x1200
0x00010923      0f857bfeffff   jne 0x107a4
0x00010929      c6450818       mov byte [rbp + 8], 0x18
0x0001092d      e972feffff     jmp 0x107a4
0x00010932      660f1f440000   nop word [rax + rax]
0x00010938      4181e7008400.  and r15d, 0x8400
0x0001093f      4981ff008000.  cmp r15, sym.re_node_set_merge          ; 0x8000 ; "H\x85\xf6\x0f\x84\xef"
0x00010946      0f84d6000000   je 0x10a22
0x0001094c      b801000000     mov eax, 1
0x00010951      e94efeffff     jmp 0x107a4
0x00010956      662e0f1f8400.  nop word cs:[rax + rax]
0x00010960      4181e7001200.  and r15d, 0x1200
0x00010967      b801000000     mov eax, 1
0x0001096c      4981ff001200.  cmp r15, 0x1200
0x00010973      0f852bfeffff   jne 0x107a4
0x00010979      c6450817       mov byte [rbp + 8], 0x17
0x0001097d      e922feffff     jmp 0x107a4
0x00010982      660f1f440000   nop word [rax + rax]
0x00010988      41f7c7080080.  test r15d, 0x800008
0x0001098f      7509           jne 0x1099a
0x00010991      4d85f6         test r14, r14
0x00010994      0f85c0030000   jne 0x10d5a
0x0001099a      c645080c       mov byte [rbp + 8], 0xc
0x0001099e      c74500100000.  mov dword [rbp], 0x10
0x000109a5      b801000000     mov eax, 1
0x000109aa      e9f5fdffff     jmp 0x107a4
0x000109af      90             nop
0x000109b0      c6450814       mov byte [rbp + 8], 0x14
0x000109b4      b801000000     mov eax, 1
0x000109b9      e9e6fdffff     jmp 0x107a4
0x000109be      6690           nop
0x000109c0      41f7c7020400.  test r15d, 0x402
0x000109c7      b801000000     mov eax, 1
0x000109cc      0f85d2fdffff   jne 0x107a4
0x000109d2      c6450813       mov byte [rbp + 8], 0x13
0x000109d6      e9c9fdffff     jmp 0x107a4
0x000109db      0f1f440000     nop dword [rax + rax]
0x000109e0      c6450805       mov byte [rbp + 8], 5
0x000109e4      b801000000     mov eax, 1
0x000109e9      e9b6fdffff     jmp 0x107a4
0x000109ee      6690           nop
0x000109f0      41f7c7020400.  test r15d, 0x402
0x000109f7      b801000000     mov eax, 1
0x000109fc      0f85a2fdffff   jne 0x107a4
0x00010a02      c6450812       mov byte [rbp + 8], 0x12
0x00010a06      e999fdffff     jmp 0x107a4
0x00010a0b      0f1f440000     nop dword [rax + rax]
0x00010a10      41f7c7000800.  test r15d, 0x800
0x00010a17      b801000000     mov eax, 1
0x00010a1c      0f8482fdffff   je 0x107a4
0x00010a22      c645080a       mov byte [rbp + 8], 0xa
0x00010a26      b801000000     mov eax, 1
0x00010a2b      e974fdffff     jmp 0x107a4
0x00010a30      c645080b       mov byte [rbp + 8], 0xb
0x00010a34      b801000000     mov eax, 1
0x00010a39      e966fdffff     jmp 0x107a4
0x00010a3e      6690           nop
0x00010a40      41f7c7002000.  test r15d, 0x2000
0x00010a47      b801000000     mov eax, 1
0x00010a4c      0f8452fdffff   je 0x107a4
0x00010a52      c6450809       mov byte [rbp + 8], 9
0x00010a56      e949fdffff     jmp 0x107a4
0x00010a5b      0f1f440000     nop dword [rax + rax]
0x00010a60      41f7c7002000.  test r15d, 0x2000
0x00010a67      b801000000     mov eax, 1
0x00010a6c      0f8432fdffff   je 0x107a4
0x00010a72      c6450808       mov byte [rbp + 8], 8
0x00010a76      e929fdffff     jmp 0x107a4
0x00010a7b      0f1f440000     nop dword [rax + rax]
0x00010a80      41f6c708       test r15b, 8
0x00010a84      750e           jne 0x10a94
0x00010a86      4983c601       add r14, 1
0x00010a8a      4c3b7358       cmp r14, qword [rbx + 0x58]
0x00010a8e      0f85f7020000   jne 0x10d8b
0x00010a94      c645080c       mov byte [rbp + 8], 0xc
0x00010a98      c74500200000.  mov dword [rbp], 0x20                   ; "@"
0x00010a9f      b801000000     mov eax, 1
0x00010aa4      e9fbfcffff     jmp 0x107a4
0x00010aa9      41f7c7008400.  test r15d, 0x8400
0x00010ab0      b802000000     mov eax, 2
0x00010ab5      0f85e9fcffff   jne 0x107a4
0x00010abb      c645080a       mov byte [rbp + 8], 0xa
0x00010abf      e9e0fcffff     jmp 0x107a4
0x00010ac4      4181e7001200.  and r15d, 0x1200
0x00010acb      b802000000     mov eax, 2
0x00010ad0      4981ff000200.  cmp r15, 0x200
0x00010ad7      0f85c7fcffff   jne 0x107a4
0x00010add      e997feffff     jmp 0x10979
0x00010ae2      41f7c7000008.  test r15d, 0x80000
0x00010ae9      b802000000     mov eax, 2
0x00010aee      0f85b0fcffff   jne 0x107a4
0x00010af4      c6450820       mov byte [rbp + 8], 0x20                ; "@"
0x00010af8      e9a7fcffff     jmp 0x107a4
0x00010afd      41f7c7000008.  test r15d, 0x80000
0x00010b04      b802000000     mov eax, 2
0x00010b09      0f8595fcffff   jne 0x107a4
0x00010b0f      c6450822       mov byte [rbp + 8], 0x22                ; '"'
0x00010b13      e98cfcffff     jmp 0x107a4
0x00010b18      4181e7001200.  and r15d, 0x1200
0x00010b1f      b802000000     mov eax, 2
0x00010b24      4981ff000200.  cmp r15, 0x200
0x00010b2b      0f8573fcffff   jne 0x107a4
0x00010b31      e9f3fdffff     jmp 0x10929
0x00010b36      41f7c7000008.  test r15d, 0x80000
0x00010b3d      b802000000     mov eax, 2
0x00010b42      0f855cfcffff   jne 0x107a4
0x00010b48      c645080c       mov byte [rbp + 8], 0xc
0x00010b4c      c74500000100.  mov dword [rbp], obj.__frame_dummy_init_array_entry ; 0x100
0x00010b53      e94cfcffff     jmp 0x107a4
0x00010b58      41f7c7000008.  test r15d, 0x80000
0x00010b5f      b802000000     mov eax, 2
0x00010b64      0f853afcffff   jne 0x107a4
0x00010b6a      c645080c       mov byte [rbp + 8], 0xc
0x00010b6e      c74500400000.  mov dword [rbp], 0x40                   ; segment.PHDR
0x00010b75      e92afcffff     jmp 0x107a4
0x00010b7a      41f7c7000008.  test r15d, 0x80000
0x00010b81      b802000000     mov eax, 2
0x00010b86      0f8518fcffff   jne 0x107a4
0x00010b8c      c6450821       mov byte [rbp + 8], 0x21                ; '!'
0x00010b90      e90ffcffff     jmp 0x107a4
0x00010b95      41f7c7000008.  test r15d, 0x80000
0x00010b9c      b802000000     mov eax, 2
0x00010ba1      0f85fdfbffff   jne 0x107a4
0x00010ba7      c6450823       mov byte [rbp + 8], 0x23                ; '#'
0x00010bab      e9f4fbffff     jmp 0x107a4
0x00010bb0      41f7c7000008.  test r15d, 0x80000
0x00010bb7      b802000000     mov eax, 2
0x00010bbc      0f85e2fbffff   jne 0x107a4
0x00010bc2      c645080c       mov byte [rbp + 8], 0xc
0x00010bc6      c74500000200.  mov dword [rbp], 0x200
0x00010bcd      e9d2fbffff     jmp 0x107a4
0x00010bd2      4181e7020400.  and r15d, 0x402
0x00010bd9      b802000000     mov eax, 2
0x00010bde      4983ff02       cmp r15, 2
0x00010be2      0f85bcfbffff   jne 0x107a4
0x00010be8      e9e5fdffff     jmp 0x109d2
0x00010bed      41f7c7000008.  test r15d, 0x80000
0x00010bf4      b802000000     mov eax, 2
0x00010bf9      0f85a5fbffff   jne 0x107a4
0x00010bff      c645080c       mov byte [rbp + 8], 0xc
0x00010c03      c74500090000.  mov dword [rbp], 9
0x00010c0a      e995fbffff     jmp 0x107a4
0x00010c0f      41f7c7000008.  test r15d, 0x80000
0x00010c16      b802000000     mov eax, 2
0x00010c1b      0f8583fbffff   jne 0x107a4
0x00010c21      c645080c       mov byte [rbp + 8], 0xc
0x00010c25      c74500060000.  mov dword [rbp], 6
0x00010c2c      e973fbffff     jmp 0x107a4
0x00010c31      41f7c7004000.  test r15d, 0x4000                       ; "D$|"
0x00010c38      b802000000     mov eax, 2
0x00010c3d      0f8561fbffff   jne 0x107a4
0x00010c43      8b542408       mov edx, dword [rsp + 8]
0x00010c47      c6450804       mov byte [rbp + 8], 4
0x00010c4b      83ea31         sub edx, 0x31
0x00010c4e      4863d2         movsxd rdx, edx
0x00010c51      48895500       mov qword [rbp], rdx
0x00010c55      e94afbffff     jmp 0x107a4
0x00010c5a      4181e7020400.  and r15d, 0x402
0x00010c61      b802000000     mov eax, 2
0x00010c66      4983ff02       cmp r15, 2
0x00010c6a      0f8534fbffff   jne 0x107a4
0x00010c70      e98dfdffff     jmp 0x10a02
0x00010c75      41f7c7002000.  test r15d, 0x2000
0x00010c7c      b802000000     mov eax, 2
0x00010c81      0f851dfbffff   jne 0x107a4
0x00010c87      e9c6fdffff     jmp 0x10a52
0x00010c8c      41f7c7002000.  test r15d, 0x2000
0x00010c93      b802000000     mov eax, 2
0x00010c98      0f8506fbffff   jne 0x107a4
0x00010c9e      e9cffdffff     jmp 0x10a72
0x00010ca3      41f7c7000008.  test r15d, 0x80000
0x00010caa      b802000000     mov eax, 2
0x00010caf      0f85effaffff   jne 0x107a4
0x00010cb5      c645080c       mov byte [rbp + 8], 0xc
0x00010cb9      c74500800000.  mov dword [rbp], 0x80
0x00010cc0      e9dffaffff     jmp 0x107a4
0x00010cc5      b802000000     mov eax, 2
0x00010cca      e9d5faffff     jmp 0x107a4
0x00010ccf      90             nop
0x00010cd0      e89b0fffff     call sym.imp.__ctype_b_loc
0x00010cd5      488b30         mov rsi, qword [rax]
0x00010cd8      410fb6d4       movzx edx, r12b
0x00010cdc      0fb70456       movzx eax, word [rsi + rdx*2]
0x00010ce0      66c1e803       shr ax, 3
0x00010ce4      83e001         and eax, 1
0x00010ce7      4180fc5f       cmp r12b, 0x5f
0x00010ceb      e9bafbffff     jmp 0x108aa
0x00010cf0      83f801         cmp eax, 1
0x00010cf3      7e2f           jle 0x10d24
0x00010cf5      488b4b10       mov rcx, qword [rbx + 0x10]
0x00010cf9      488d3cb50000.  lea rdi, [rsi*4]
0x00010d01      448b04b1       mov r8d, dword [rcx + rsi*4]
0x00010d05      4183f8ff       cmp r8d, 0xffffffff
0x00010d09      0f84b0000000   je 0x10dbf
0x00010d0f      4d8d4e02       lea r9, [r14 + 2]
0x00010d13      4c394b30       cmp qword [rbx + 0x30], r9
0x00010d17      740b           je 0x10d24
0x00010d19      837c3904ff     cmp dword [rcx + rdi + 4], 0xffffffff
0x00010d1e      0f849b000000   je 0x10dbf
0x00010d24      80bb8c000000.  cmp byte [rbx + 0x8c], 0
0x00010d2b      488b0b         mov rcx, qword [rbx]
0x00010d2e      488b7b28       mov rdi, qword [rbx + 0x28]
0x00010d32      7444           je 0x10d78
0x00010d34      4c8b4318       mov r8, qword [rbx + 0x18]
0x00010d38      4801f9         add rcx, rdi
0x00010d3b      49030cf0       add rcx, qword [r8 + rsi*8]
0x00010d3f      0fb639         movzx edi, byte [rcx]
0x00010d42      4189fc         mov r12d, edi
0x00010d45      897c2408       mov dword [rsp + 8], edi
0x00010d49      81e780000000   and edi, 0x80
0x00010d4f      0f8516fbffff   jne 0x1086b
0x00010d55      e91efbffff     jmp 0x10878
0x00010d5a      42807c32ff0a   cmp byte [rdx + r14 - 1], 0xa
0x00010d60      0f85e6fbffff   jne 0x1094c
0x00010d66      41f7c7000800.  test r15d, 0x800
0x00010d6d      0f84d9fbffff   je 0x1094c
0x00010d73      e922fcffff     jmp 0x1099a
0x00010d78      4801f1         add rcx, rsi
0x00010d7b      0fb63c39       movzx edi, byte [rcx + rdi]
0x00010d7f      4189fc         mov r12d, edi
0x00010d82      897c2408       mov dword [rsp + 8], edi
0x00010d86      e9edfaffff     jmp 0x10878
0x00010d8b      488d7c2410     lea rdi, [rsp + 0x10]
0x00010d90      4c89fa         mov rdx, r15
0x00010d93      4c897348       mov qword [rbx + 0x48], r14
0x00010d97      4889de         mov rsi, rbx
0x00010d9a      e841f9ffff     call sym.peek_token
0x00010d9f      0fb6442418     movzx eax, byte [rsp + 0x18]
0x00010da4      48836b4801     sub qword [rbx + 0x48], 1
0x00010da9      8d50f7         lea edx, [rax - 9]
0x00010dac      b801000000     mov eax, 1
0x00010db1      80fa01         cmp dl, 1
0x00010db4      0f87eaf9ffff   ja 0x107a4
0x00010dba      e9d5fcffff     jmp 0x10a94
0x00010dbf      420fb6443201   movzx eax, byte [rdx + r14 + 1]
0x00010dc5      c6450801       mov byte [rbp + 8], 1
0x00010dc9      4189c4         mov r12d, eax
0x00010dcc      884500         mov byte [rbp], al
0x00010dcf      89442408       mov dword [rsp + 8], eax
0x00010dd3      e9b9faffff     jmp 0x10891
0x00010dd8      e8030cffff     call sym.imp.__stack_chk_fail
0x00010ddd      0f1f00         nop dword [rax]
;-- fetch_number:
0x00010de0      4156           push r14
0x00010de2      4989fe         mov r14, rdi
0x00010de5      4155           push r13
0x00010de7      4989f5         mov r13, rsi
0x00010dea      4154           push r12
0x00010dec      49c7c4feffff.  mov r12, 0xfffffffffffffffe
0x00010df3      55             push rbp
0x00010df4      4889d5         mov rbp, rdx
0x00010df7      53             push rbx
0x00010df8      48c7c3ffffff.  mov rbx, 0xffffffffffffffff
0x00010dff      90             nop
0x00010e00      4889ea         mov rdx, rbp
0x00010e03      4c89f6         mov rsi, r14
0x00010e06      4c89ef         mov rdi, r13
0x00010e09      e8d2f8ffff     call sym.peek_token
0x00010e0e      4898           cdqe
0x00010e10      49014648       add qword [r14 + 0x48], rax
0x00010e14      410fb64508     movzx eax, byte [r13 + 8]
0x00010e19      410fb65500     movzx edx, byte [r13]
0x00010e1e      3c02           cmp al, 2
0x00010e20      744e           je 0x10e70
0x00010e22      3c18           cmp al, 0x18
0x00010e24      7451           je 0x10e77
0x00010e26      80fa2c         cmp dl, 0x2c
0x00010e29      744c           je 0x10e77
0x00010e2b      3c01           cmp al, 1
0x00010e2d      7409           je 0x10e38
0x00010e2f      4c89e3         mov rbx, r12
0x00010e32      ebcc           jmp 0x10e00
0x00010e34      0f1f4000       nop dword [rax]
0x00010e38      8d42d0         lea eax, [rdx - 0x30]
0x00010e3b      3c09           cmp al, 9
0x00010e3d      77f0           ja 0x10e2f
0x00010e3f      4883fbfe       cmp rbx, 0xfffffffffffffffe
0x00010e43      74ea           je 0x10e2f
0x00010e45      4883fbff       cmp rbx, 0xffffffffffffffff
0x00010e49      743d           je 0x10e88
0x00010e4b      488d049b       lea rax, [rbx + rbx*4]
0x00010e4f      488d1c42       lea rbx, [rdx + rax*2]
0x00010e53      b830800000     mov eax, 0x8030
0x00010e58      4881fb308000.  cmp rbx, 0x8030
0x00010e5f      480f4fd8       cmovg rbx, rax
0x00010e63      4883eb30       sub rbx, 0x30
0x00010e67      eb97           jmp 0x10e00
0x00010e69      0f1f80000000.  nop dword [rax]
0x00010e70      48c7c3feffff.  mov rbx, 0xfffffffffffffffe
0x00010e77      4889d8         mov rax, rbx
0x00010e7a      5b             pop rbx
0x00010e7b      5d             pop rbp
0x00010e7c      415c           pop r12
0x00010e7e      415d           pop r13
0x00010e80      415e           pop r14
0x00010e82      c3             ret
0x00010e83      0f1f440000     nop dword [rax + rax]
0x00010e88      0fb6da         movzx ebx, dl
0x00010e8b      83eb30         sub ebx, 0x30
0x00010e8e      4863db         movsxd rbx, ebx
0x00010e91      e96affffff     jmp 0x10e00
0x00010e96      662e0f1f8400.  nop word cs:[rax + rax]
;-- parse_expression:
0x00010ea0      4157           push r15
0x00010ea2      4156           push r14
0x00010ea4      4155           push r13
0x00010ea6      4154           push r12
0x00010ea8      55             push rbp
0x00010ea9      53             push rbx
0x00010eaa      4881ec280100.  sub rsp, 0x128
0x00010eb1      48894c2420     mov qword [rsp + 0x20], rcx
0x00010eb6      0fb64a08       movzx ecx, byte [rdx + 8]
0x00010eba      64488b042528.  mov rax, qword fs:[0x28]
0x00010ec3      488984241801.  mov qword [rsp + 0x118], rax
0x00010ecb      31c0           xor eax, eax
0x00010ecd      488b06         mov rax, qword [rsi]
0x00010ed0      4889542418     mov qword [rsp + 0x18], rdx
0x00010ed5      4c894c2440     mov qword [rsp + 0x40], r9
0x00010eda      80f924         cmp cl, 0x24
0x00010edd      4889442410     mov qword [rsp + 0x10], rax
0x00010ee2      0f87b8000000   ja 0x10fa0
0x00010ee8      4889f5         mov rbp, rsi
0x00010eeb      488d35ce4d00.  lea rsi, [0x00015cc0]
0x00010ef2      0fb6d1         movzx edx, cl
0x00010ef5      4989fe         mov r14, rdi
0x00010ef8      48630496       movsxd rax, dword [rsi + rdx*4]
0x00010efc      4801f0         add rax, rsi
0x00010eff      ffe0           jmp rax
0x00010f01      488b5d30       mov rbx, qword [rbp + 0x30]
0x00010f05      4c8b7c2420     mov r15, qword [rsp + 0x20]
0x00010f0a      4889fe         mov rsi, rdi
0x00010f0d      4c8b6c2418     mov r13, qword [rsp + 0x18]
0x00010f12      4c890424       mov qword [rsp], r8
0x00010f16      488d4301       lea rax, [rbx + 1]
0x00010f1a      4c89fa         mov rdx, r15
0x00010f1d      4881ca000080.  or rdx, 0x800000
0x00010f24      4c89ef         mov rdi, r13
0x00010f27      48894530       mov qword [rbp + 0x30], rax
0x00010f2b      e8b0f7ffff     call sym.peek_token
0x00010f30      4898           cdqe
0x00010f32      49014648       add qword [r14 + 0x48], rax
0x00010f36      31c0           xor eax, eax
0x00010f38      41807d0809     cmp byte [r13 + 8], 9
0x00010f3d      4c89ea         mov rdx, r13
0x00010f40      0f84fa0a0000   je 0x11a40
0x00010f46      4c8b6c2440     mov r13, qword [rsp + 0x40]
0x00010f4b      4c8b0424       mov r8, qword [rsp]
0x00010f4f      4c89f9         mov rcx, r15
0x00010f52      4889ee         mov rsi, rbp
0x00010f55      4c89f7         mov rdi, r14
0x00010f58      4983c001       add r8, 1
0x00010f5c      4d89e9         mov r9, r13
0x00010f5f      e8ac150000     call sym.parse_reg_exp
0x00010f64      458b5d00       mov r11d, dword [r13]
0x00010f68      4585db         test r11d, r11d
0x00010f6b      7533           jne 0x10fa0
0x00010f6d      488b542418     mov rdx, qword [rsp + 0x18]
0x00010f72      807a0809       cmp byte [rdx + 8], 9
0x00010f76      0f84c40a0000   je 0x11a40
0x00010f7c      4885c0         test rax, rax
0x00010f7f      7411           je 0x10f92
0x00010f81      488d35d862ff.  lea rsi, sym.free_tree                  ; 0x7260 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x00010f88      31d2           xor edx, edx
0x00010f8a      4889c7         mov rdi, rax
0x00010f8d      e82e54ffff     call sym.postorder
0x00010f92      488b442440     mov rax, qword [rsp + 0x40]
0x00010f97      c70008000000   mov dword [rax], 8
0x00010f9d      0f1f00         nop dword [rax]
0x00010fa0      48c744242800.  mov qword [rsp + 0x28], 0
0x00010fa9      0f1f80000000.  nop dword [rax]
0x00010fb0      488bbc241801.  mov rdi, qword [rsp + 0x118]
0x00010fb8      6448333c2528.  xor rdi, qword fs:[0x28]
0x00010fc1      488b442428     mov rax, qword [rsp + 0x28]
0x00010fc6      0f8572130000   jne 0x1233e
0x00010fcc      4881c4280100.  add rsp, 0x128
0x00010fd3      5b             pop rbx
0x00010fd4      5d             pop rbp
0x00010fd5      415c           pop r12
0x00010fd7      415d           pop r13
0x00010fd9      415e           pop r14
0x00010fdb      415f           pop r15
0x00010fdd      c3             ret
0x00010fde      48f744242000.  test qword [rsp + 0x20], 0x1000000
0x00010fe7      0f8550020000   jne 0x1123d
0x00010fed      488b442420     mov rax, qword [rsp + 0x20]
0x00010ff2      a820           test al, 0x20                           ; "@"
0x00010ff4      0f8543020000   jne 0x1123d
0x00010ffa      a810           test al, 0x10
0x00010ffc      0f85630e0000   jne 0x11e65
0x00011002      80f909         cmp cl, 9
0x00011005      0f840d0a0000   je 0x11a18
0x0001100b      488b442410     mov rax, qword [rsp + 0x10]
0x00011010      4c8b442418     mov r8, qword [rsp + 0x18]
0x00011015      31c9           xor ecx, ecx
0x00011017      31d2           xor edx, edx
0x00011019      488db0800000.  lea rsi, [rax + 0x80]
0x00011020      488d7870       lea rdi, [rax + 0x70]
0x00011024      41c6400801     mov byte [r8 + 8], 1
0x00011029      e87277ffff     call sym.create_token_tree.isra.16
0x0001102e      4885c0         test rax, rax
0x00011031      4889442428     mov qword [rsp + 0x28], rax
0x00011036      0f84cc090000   je 0x11a08
0x0001103c      488b5c2418     mov rbx, qword [rsp + 0x18]
0x00011041      488b542420     mov rdx, qword [rsp + 0x20]
0x00011046      4c89f6         mov rsi, r14
0x00011049      4c8dbc24c000.  lea r15, [rsp + 0xc0]
0x00011051      4889df         mov rdi, rbx
0x00011054      e887f6ffff     call sym.peek_token
0x00011059      4898           cdqe
0x0001105b      49014648       add qword [r14 + 0x48], rax
0x0001105f      0fb64308       movzx eax, byte [rbx + 8]
0x00011063      0f1f440000     nop dword [rax + rax]
0x00011068      3c17           cmp al, 0x17
0x0001106a      0f8740ffffff   ja 0x10fb0
0x00011070      3c12           cmp al, 0x12
0x00011072      b900088c00     mov ecx, 0x8c0800
0x00011077      0f94c3         sete bl
0x0001107a      480fa3c1       bt rcx, rax
0x0001107e      0f832cffffff   jae 0x10fb0
0x00011084      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00011089      3c17           cmp al, 0x17
0x0001108b      498b6e48       mov rbp, qword [r14 + 0x48]
0x0001108f      660f6f01       movdqa xmm0, xmmword [rcx]
0x00011093      0f841f030000   je 0x113b8
0x00011099      3c13           cmp al, 0x13
0x0001109b      0fb6db         movzx ebx, bl
0x0001109e      0f84ac020000   je 0x11350
0x000110a4      488b542420     mov rdx, qword [rsp + 0x20]
0x000110a9      488b7c2418     mov rdi, qword [rsp + 0x18]
0x000110ae      4c89f6         mov rsi, r14
0x000110b1      e82af6ffff     call sym.peek_token
0x000110b6      4898           cdqe
0x000110b8      49014648       add qword [r14 + 0x48], rax
0x000110bc      48837c242800   cmp qword [rsp + 0x28], 0
0x000110c2      0f8488030000   je 0x11450
0x000110c8      48c70424ffff.  mov qword [rsp], 0xffffffffffffffff
0x000110d0      4885db         test rbx, rbx
0x000110d3      488b6c2428     mov rbp, qword [rsp + 0x28]
0x000110d8      48c744243000.  mov qword [rsp + 0x30], 0
0x000110e1      0f8f79010000   jg 0x11260
0x000110e7      807d3011       cmp byte [rbp + 0x30], 0x11
0x000110eb      0f843f030000   je 0x11430
0x000110f1      48833c24ff     cmp qword [rsp], 0xffffffffffffffff
0x000110f6      4889ea         mov rdx, rbp
0x000110f9      4d89f8         mov r8, r15
0x000110fc      0f94c0         sete al
0x000110ff      31c9           xor ecx, ecx
0x00011101      83c00a         add eax, 0xa
0x00011104      888424c80000.  mov byte [rsp + 0xc8], al
0x0001110b      488b442410     mov rax, qword [rsp + 0x10]
0x00011110      4c8d6070       lea r12, [rax + 0x70]
0x00011114      4c8da8800000.  lea r13, [rax + 0x80]
0x0001111b      4c89e7         mov rdi, r12
0x0001111e      4c89ee         mov rsi, r13
0x00011121      e87a76ffff     call sym.create_token_tree.isra.16
0x00011126      4885c0         test rax, rax
0x00011129      4889c2         mov rdx, rax
0x0001112c      0f84ee010000   je 0x11320
0x00011132      4883c302       add rbx, 2
0x00011136      483b1c24       cmp rbx, qword [rsp]
0x0001113a      7f7f           jg 0x111bb
0x0001113c      4c89742448     mov qword [rsp + 0x48], r14
0x00011141      4989c6         mov r14, rax
0x00011144      488b742410     mov rsi, qword [rsp + 0x10]
0x00011149      4889ef         mov rdi, rbp
0x0001114c      e82f77ffff     call sym.duplicate_tree
0x00011151      4d89f8         mov r8, r15
0x00011154      4889c5         mov rbp, rax
0x00011157      4889c1         mov rcx, rax
0x0001115a      4c89f2         mov rdx, r14
0x0001115d      4c89ee         mov rsi, r13
0x00011160      4c89e7         mov rdi, r12
0x00011163      c68424c80000.  mov byte [rsp + 0xc8], 0x10             ; [0x10:1]=3
0x0001116b      e83076ffff     call sym.create_token_tree.isra.16
0x00011170      4885ed         test rbp, rbp
0x00011173      0f84a7010000   je 0x11320
0x00011179      4885c0         test rax, rax
0x0001117c      0f849e010000   je 0x11320
0x00011182      31c9           xor ecx, ecx
0x00011184      4d89f8         mov r8, r15
0x00011187      4889c2         mov rdx, rax
0x0001118a      4c89ee         mov rsi, r13
0x0001118d      4c89e7         mov rdi, r12
0x00011190      c68424c80000.  mov byte [rsp + 0xc8], 0xa
0x00011198      e80376ffff     call sym.create_token_tree.isra.16
0x0001119d      4885c0         test rax, rax
0x000111a0      4989c6         mov r14, rax
0x000111a3      0f8477010000   je 0x11320
0x000111a9      4883c301       add rbx, 1
0x000111ad      483b1c24       cmp rbx, qword [rsp]
0x000111b1      7e91           jle 0x11144
0x000111b3      4c8b742448     mov r14, qword [rsp + 0x48]
0x000111b8      4889c2         mov rdx, rax
0x000111bb      488b442430     mov rax, qword [rsp + 0x30]
0x000111c0      4885c0         test rax, rax
0x000111c3      0f84a7020000   je 0x11470
0x000111c9      4889d1         mov rcx, rdx
0x000111cc      4d89f8         mov r8, r15
0x000111cf      4889c2         mov rdx, rax
0x000111d2      4c89ee         mov rsi, r13
0x000111d5      4c89e7         mov rdi, r12
0x000111d8      c68424c80000.  mov byte [rsp + 0xc8], 0x10             ; [0x10:1]=3
0x000111e0      e8bb75ffff     call sym.create_token_tree.isra.16
0x000111e5      488b7c2440     mov rdi, qword [rsp + 0x40]
0x000111ea      8b17           mov edx, dword [rdi]
0x000111ec      85d2           test edx, edx
0x000111ee      7409           je 0x111f9
0x000111f0      4885c0         test rax, rax
0x000111f3      0f8452030000   je 0x1154b
0x000111f9      4889442428     mov qword [rsp + 0x28], rax
0x000111fe      48f744242000.  test qword [rsp + 0x20], 0x1000000
0x00011207      488b442418     mov rax, qword [rsp + 0x18]
0x0001120c      0fb64008       movzx eax, byte [rax + 8]
0x00011210      0f8452feffff   je 0x11068
0x00011216      3c0b           cmp al, 0xb
0x00011218      7408           je 0x11222
0x0001121a      3c17           cmp al, 0x17
0x0001121c      0f8546feffff   jne 0x11068
0x00011222      488b442428     mov rax, qword [rsp + 0x28]
0x00011227      4885c0         test rax, rax
0x0001122a      7411           je 0x1123d
0x0001122c      488d352d60ff.  lea rsi, sym.free_tree                  ; 0x7260 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x00011233      31d2           xor edx, edx
0x00011235      4889c7         mov rdi, rax
0x00011238      e88351ffff     call sym.postorder
0x0001123d      488b442440     mov rax, qword [rsp + 0x40]
0x00011242      48c744242800.  mov qword [rsp + 0x28], 0
0x0001124b      c7000d000000   mov dword [rax], 0xd                    ; [0xd:4]=0x3000000
0x00011251      e95afdffff     jmp 0x10fb0
0x00011256      662e0f1f8400.  nop word cs:[rax + rax]
0x00011260      4883fb01       cmp rbx, 1
0x00011264      0f8432080000   je 0x11a9c
0x0001126a      488b442410     mov rax, qword [rsp + 0x10]
0x0001126f      4989ed         mov r13, rbp
0x00011272      4c89742448     mov qword [rsp + 0x48], r14
0x00011277      4c8da0800000.  lea r12, [rax + 0x80]
0x0001127e      488d7870       lea rdi, [rax + 0x70]
0x00011282      4889e8         mov rax, rbp
0x00011285      4989c6         mov r14, rax
0x00011288      bd02000000     mov ebp, 2
0x0001128d      4c89e6         mov rsi, r12
0x00011290      48897c2430     mov qword [rsp + 0x30], rdi
0x00011295      4d89ec         mov r12, r13
0x00011298      4989dd         mov r13, rbx
0x0001129b      4889f3         mov rbx, rsi
0x0001129e      6690           nop
0x000112a0      488b742410     mov rsi, qword [rsp + 0x10]
0x000112a5      4c89e7         mov rdi, r12
0x000112a8      e8d375ffff     call sym.duplicate_tree
0x000112ad      488b7c2430     mov rdi, qword [rsp + 0x30]
0x000112b2      4989c4         mov r12, rax
0x000112b5      4c89f2         mov rdx, r14
0x000112b8      4d89f8         mov r8, r15
0x000112bb      4889c1         mov rcx, rax
0x000112be      4889de         mov rsi, rbx
0x000112c1      c68424c80000.  mov byte [rsp + 0xc8], 0x10             ; [0x10:1]=3
0x000112c9      e8d274ffff     call sym.create_token_tree.isra.16
0x000112ce      4d85e4         test r12, r12
0x000112d1      4989c6         mov r14, rax
0x000112d4      744a           je 0x11320
0x000112d6      4885c0         test rax, rax
0x000112d9      7445           je 0x11320
0x000112db      4883c501       add rbp, 1
0x000112df      4c39ed         cmp rbp, r13
0x000112e2      7ebc           jle 0x112a0
0x000112e4      4c8b742448     mov r14, qword [rsp + 0x48]
0x000112e9      4c89eb         mov rbx, r13
0x000112ec      4889442430     mov qword [rsp + 0x30], rax
0x000112f1      4d89e5         mov r13, r12
0x000112f4      48391c24       cmp qword [rsp], rbx
0x000112f8      0f8466010000   je 0x11464
0x000112fe      488b742410     mov rsi, qword [rsp + 0x10]
0x00011303      4c89ef         mov rdi, r13
0x00011306      e87575ffff     call sym.duplicate_tree
0x0001130b      4885c0         test rax, rax
0x0001130e      4889c5         mov rbp, rax
0x00011311      0f85d0fdffff   jne 0x110e7
0x00011317      660f1f840000.  nop word [rax + rax]
0x00011320      488b442440     mov rax, qword [rsp + 0x40]
0x00011325      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0001132b      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00011330      488d35295fff.  lea rsi, sym.free_tree                  ; 0x7260 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x00011337      31d2           xor edx, edx
0x00011339      e88250ffff     call sym.postorder
0x0001133e      48c744242800.  mov qword [rsp + 0x28], 0
0x00011347      e964fcffff     jmp 0x10fb0
0x0001134c      0f1f4000       nop dword [rax]
0x00011350      48c704240100.  mov qword [rsp], 1
0x00011358      488b542420     mov rdx, qword [rsp + 0x20]
0x0001135d      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00011362      4c89f6         mov rsi, r14
0x00011365      e876f3ffff     call sym.peek_token
0x0001136a      4898           cdqe
0x0001136c      49014648       add qword [r14 + 0x48], rax
0x00011370      48837c242800   cmp qword [rsp + 0x28], 0
0x00011376      0f84d4000000   je 0x11450
0x0001137c      488b0424       mov rax, qword [rsp]
0x00011380      4809d8         or rax, rbx
0x00011383      0f8547fdffff   jne 0x110d0
0x00011389      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0001138e      488d35cb5eff.  lea rsi, sym.free_tree                  ; 0x7260 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x00011395      31d2           xor edx, edx
0x00011397      e82450ffff     call sym.postorder
0x0001139c      488b442440     mov rax, qword [rsp + 0x40]
0x000113a1      8b30           mov esi, dword [rax]
0x000113a3      85f6           test esi, esi
0x000113a5      7584           jne 0x1132b
0x000113a7      48c744242800.  mov qword [rsp + 0x28], 0
0x000113b0      e949feffff     jmp 0x111fe
0x000113b5      0f1f00         nop dword [rax]
0x000113b8      488b542420     mov rdx, qword [rsp + 0x20]
0x000113bd      4889ce         mov rsi, rcx
0x000113c0      4c89f7         mov rdi, r14
0x000113c3      0f290424       movaps xmmword [rsp], xmm0
0x000113c7      e814faffff     call sym.fetch_number
0x000113cc      4883f8ff       cmp rax, 0xffffffffffffffff
0x000113d0      4889c3         mov rbx, rax
0x000113d3      660f6f0424     movdqa xmm0, xmmword [rsp]
0x000113d8      0f84a2000000   je 0x11480
0x000113de      4883f8fe       cmp rax, 0xfffffffffffffffe
0x000113e2      7419           je 0x113fd
0x000113e4      488b442418     mov rax, qword [rsp + 0x18]
0x000113e9      0fb64008       movzx eax, byte [rax + 8]
0x000113ed      3c18           cmp al, 0x18
0x000113ef      0f841b010000   je 0x11510
0x000113f5      3c01           cmp al, 1
0x000113f7      0f8426010000   je 0x11523
0x000113fd      48f744242000.  test qword [rsp + 0x20], 0x200000
0x00011406      0f84370f0000   je 0x12343
0x0001140c      488b442418     mov rax, qword [rsp + 0x18]
0x00011411      49896e48       mov qword [r14 + 0x48], rbp
0x00011415      0f2900         movaps xmmword [rax], xmm0
0x00011418      c6400801       mov byte [rax + 8], 1
0x0001141c      488b442428     mov rax, qword [rsp + 0x28]
0x00011421      e9bffdffff     jmp 0x111e5
0x00011426      662e0f1f8400.  nop word cs:[rax + rax]
0x00011430      488b5528       mov rdx, qword [rbp + 0x28]
0x00011434      488d35c54cff.  lea rsi, sym.mark_opt_subexp            ; 0x6100
0x0001143b      4889ef         mov rdi, rbp
0x0001143e      e87d4fffff     call sym.postorder
0x00011443      e9a9fcffff     jmp 0x110f1
0x00011448      0f1f84000000.  nop dword [rax + rax]
0x00011450      488b442440     mov rax, qword [rsp + 0x40]
0x00011455      8b08           mov ecx, dword [rax]
0x00011457      85c9           test ecx, ecx
0x00011459      0f8448ffffff   je 0x113a7
0x0001145f      e93cfbffff     jmp 0x10fa0
0x00011464      488b542430     mov rdx, qword [rsp + 0x30]
0x00011469      0f1f80000000.  nop dword [rax]
0x00011470      4889542428     mov qword [rsp + 0x28], rdx
0x00011475      e984fdffff     jmp 0x111fe
0x0001147a      660f1f440000   nop word [rax + rax]
0x00011480      488b442418     mov rax, qword [rsp + 0x18]
0x00011485      80780801       cmp byte [rax + 8], 1
0x00011489      0f85b1000000   jne 0x11540
0x0001148f      488b442418     mov rax, qword [rsp + 0x18]
0x00011494      80382c         cmp byte [rax], 0x2c
0x00011497      0f85a3000000   jne 0x11540
0x0001149d      31db           xor ebx, ebx
0x0001149f      488b542420     mov rdx, qword [rsp + 0x20]
0x000114a4      488b742418     mov rsi, qword [rsp + 0x18]
0x000114a9      4c89f7         mov rdi, r14
0x000114ac      0f29442430     movaps xmmword [rsp + 0x30], xmm0
0x000114b1      e82af9ffff     call sym.fetch_number
0x000114b6      4883f8fe       cmp rax, 0xfffffffffffffffe
0x000114ba      48890424       mov qword [rsp], rax
0x000114be      660f6f442430   movdqa xmm0, xmmword [rsp + 0x30]
0x000114c4      0f8433ffffff   je 0x113fd
0x000114ca      488b0424       mov rax, qword [rsp]
0x000114ce      4883f8ff       cmp rax, 0xffffffffffffffff
0x000114d2      7405           je 0x114d9
0x000114d4      4839d8         cmp rax, rbx
0x000114d7      7c67           jl 0x11540
0x000114d9      488b442418     mov rax, qword [rsp + 0x18]
0x000114de      80780818       cmp byte [rax + 8], 0x18
0x000114e2      755c           jne 0x11540
0x000114e4      48833c24ff     cmp qword [rsp], 0xffffffffffffffff
0x000114e9      7529           jne 0x11514
0x000114eb      31c0           xor eax, eax
0x000114ed      4881fbff7f00.  cmp rbx, 0x7fff
0x000114f4      0f9fc0         setg al
0x000114f7      4885c0         test rax, rax
0x000114fa      0f8458feffff   je 0x11358
0x00011500      488b442440     mov rax, qword [rsp + 0x40]
0x00011505      c7000f000000   mov dword [rax], 0xf                    ; [0xf:4]=0x3e000300
0x0001150b      eb3e           jmp 0x1154b
0x0001150d      0f1f00         nop dword [rax]
0x00011510      48891c24       mov qword [rsp], rbx
0x00011514      31c0           xor eax, eax
0x00011516      48813c24ff7f.  cmp qword [rsp], 0x7fff
0x0001151e      0f9fc0         setg al
0x00011521      ebd4           jmp 0x114f7
0x00011523      488b442418     mov rax, qword [rsp + 0x18]
0x00011528      80382c         cmp byte [rax], 0x2c
0x0001152b      0f846effffff   je 0x1149f
0x00011531      48f744242000.  test qword [rsp + 0x20], 0x200000
0x0001153a      0f85ccfeffff   jne 0x1140c
0x00011540      488b442440     mov rax, qword [rsp + 0x40]
0x00011545      c7000a000000   mov dword [rax], 0xa
0x0001154b      48837c242800   cmp qword [rsp + 0x28], 0
0x00011551      0f85d4fdffff   jne 0x1132b
0x00011557      e944faffff     jmp 0x10fa0
0x0001155c      0f1f4000       nop dword [rax]
0x00011560      488b442418     mov rax, qword [rsp + 0x18]
0x00011565      8b28           mov ebp, dword [rax]
0x00011567      f7c50f030000   test ebp, 0x30f
0x0001156d      7462           je 0x115d1
0x0001156f      488b442410     mov rax, qword [rsp + 0x10]
0x00011574      0fb680b00000.  movzx eax, byte [rax + 0xb0]
0x0001157b      a810           test al, 0x10
0x0001157d      7552           jne 0x115d1
0x0001157f      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00011584      83c810         or eax, 0x10
0x00011587      a808           test al, 8
0x00011589      8887b0000000   mov byte [rdi + 0xb0], al
0x0001158f      0f85fe0b0000   jne 0x12193
0x00011595      48ba00000000.  movabs rdx, 0x3ff000000000000           ; 287948901175001088
0x0001159f      a804           test al, 4
0x000115a1      488997b80000.  mov qword [rdi + 0xb8], rdx
0x000115a8      48bafeffff87.  movabs rdx, 0x7fffffe87fffffe
0x000115b2      488997c00000.  mov qword [rdi + 0xc0], rdx
0x000115b9      0f84590b0000   je 0x12118
0x000115bf      660fefc0       pxor xmm0, xmm0
0x000115c3      488b442418     mov rax, qword [rsp + 0x18]
0x000115c8      0f1187c80000.  movups xmmword [rdi + 0xc8], xmm0
0x000115cf      8b28           mov ebp, dword [rax]
0x000115d1      488b442410     mov rax, qword [rsp + 0x10]
0x000115d6      488d5870       lea rbx, [rax + 0x70]
0x000115da      4c8da0800000.  lea r12, [rax + 0x80]
0x000115e1      8d8500ffffff   lea eax, [rbp - 0x100]
0x000115e7      a9fffeffff     test eax, 0xfffffeff                    ; 4294967039
0x000115ec      0f8568060000   jne 0x11c5a
0x000115f2      81fd00010000   cmp ebp, 0x100
0x000115f8      4c8b7c2418     mov r15, qword [rsp + 0x18]
0x000115fd      0f842f060000   je 0x11c32
0x00011603      41c707050000.  mov dword [r15], 5
0x0001160a      4d89f8         mov r8, r15
0x0001160d      31c9           xor ecx, ecx
0x0001160f      31d2           xor edx, edx
0x00011611      4c89e6         mov rsi, r12
0x00011614      4889df         mov rdi, rbx
0x00011617      e88471ffff     call sym.create_token_tree.isra.16
0x0001161c      41c7070a0000.  mov dword [r15], 0xa
0x00011623      4889c5         mov rbp, rax
0x00011626      4c8b442418     mov r8, qword [rsp + 0x18]
0x0001162b      31c9           xor ecx, ecx
0x0001162d      31d2           xor edx, edx
0x0001162f      4c89e6         mov rsi, r12
0x00011632      4889df         mov rdi, rbx
0x00011635      e86671ffff     call sym.create_token_tree.isra.16
0x0001163a      4c8d8424c000.  lea r8, [rsp + 0xc0]
0x00011642      4889ea         mov rdx, rbp
0x00011645      4889df         mov rdi, rbx
0x00011648      4889c1         mov rcx, rax
0x0001164b      4c89e6         mov rsi, r12
0x0001164e      4989c5         mov r13, rax
0x00011651      c68424c80000.  mov byte [rsp + 0xc8], 0xa
0x00011659      e84271ffff     call sym.create_token_tree.isra.16
0x0001165e      4885ed         test rbp, rbp
0x00011661      4889c7         mov rdi, rax
0x00011664      4889442428     mov qword [rsp + 0x28], rax
0x00011669      0f94c2         sete dl
0x0001166c      4d85ed         test r13, r13
0x0001166f      0f94c0         sete al
0x00011672      08c2           or dl, al
0x00011674      0f858e030000   jne 0x11a08
0x0001167a      4885ff         test rdi, rdi
0x0001167d      0f8485030000   je 0x11a08
0x00011683      488b542420     mov rdx, qword [rsp + 0x20]
0x00011688      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0001168d      4c89f6         mov rsi, r14
0x00011690      e84bf0ffff     call sym.peek_token
0x00011695      4898           cdqe
0x00011697      49014648       add qword [r14 + 0x48], rax
0x0001169b      e910f9ffff     jmp 0x10fb0
0x000116a0      be01000000     mov esi, 1
0x000116a5      bf20000000     mov edi, 0x20                           ; "@"
0x000116aa      48c784249800.  mov qword [rsp + 0x98], 0
0x000116b6      e8f503ffff     call sym.imp.calloc
0x000116bb      be01000000     mov esi, 1
0x000116c0      4989c4         mov r12, rax
0x000116c3      bf50000000     mov edi, 0x50                           ; 'P'
0x000116c8      e8e303ffff     call sym.imp.calloc
0x000116cd      4d85e4         test r12, r12
0x000116d0      4989c5         mov r13, rax
0x000116d3      0f94c2         sete dl
0x000116d6      4885c0         test rax, rax
0x000116d9      0f94c0         sete al
0x000116dc      08c2           or dl, al
0x000116de      0f85d5070000   jne 0x11eb9
0x000116e4      4c8b542418     mov r10, qword [rsp + 0x18]
0x000116e9      488b542420     mov rdx, qword [rsp + 0x20]
0x000116ee      4c89f6         mov rsi, r14
0x000116f1      4c89d7         mov rdi, r10
0x000116f4      e8d748ffff     call sym.peek_token_bracket
0x000116f9      4863d8         movsxd rbx, eax
0x000116fc      410fb64208     movzx eax, byte [r10 + 8]
0x00011701      3c02           cmp al, 2
0x00011703      0f84a0070000   je 0x11ea9
0x00011709      3c19           cmp al, 0x19
0x0001170b      c644245700     mov byte [rsp + 0x57], 0
0x00011710      0f84c4040000   je 0x11bda
0x00011716      3c15           cmp al, 0x15
0x00011718      0f8406050000   je 0x11c24
0x0001171e      488d8424d000.  lea rax, [rsp + 0xd0]
0x00011726      4c8b7c2418     mov r15, qword [rsp + 0x18]
0x0001172b      488d2d224600.  lea rbp, [0x00015d54]
0x00011732      48c744244800.  mov qword [rsp + 0x48], 0
0x0001173b      41b901000000   mov r9d, 1
0x00011741      48c744243000.  mov qword [rsp + 0x30], 0
0x0001174a      4889442428     mov qword [rsp + 0x28], rax
0x0001174f      488d8424a000.  lea rax, [rsp + 0xa0]
0x00011757      48890424       mov qword [rsp], rax
0x0001175b      488d84249800.  lea rax, [rsp + 0x98]
0x00011763      4889442458     mov qword [rsp + 0x58], rax
0x00011768      488d8424c000.  lea rax, [rsp + 0xc0]
0x00011770      4889442460     mov qword [rsp + 0x60], rax
0x00011775      488d8424f000.  lea rax, [rsp + 0xf0]
0x0001177d      4889442468     mov qword [rsp + 0x68], rax
0x00011782      488b442428     mov rax, qword [rsp + 0x28]
0x00011787      4c8b442420     mov r8, qword [rsp + 0x20]
0x0001178c      4183e101       and r9d, 1
0x00011790      488b3c24       mov rdi, qword [rsp]
0x00011794      89d9           mov ecx, ebx
0x00011796      4c89fa         mov rdx, r15
0x00011799      4c89f6         mov rsi, r14
0x0001179c      c78424a00000.  mov dword [rsp + 0xa0], 3
0x000117a7      48898424a800.  mov qword [rsp + 0xa8], rax
0x000117af      e8ccecffff     call sym.parse_bracket_element.constprop.37
0x000117b4      85c0           test eax, eax
0x000117b6      0f85df040000   jne 0x11c9b
0x000117bc      488b542420     mov rdx, qword [rsp + 0x20]
0x000117c1      4c89f6         mov rsi, r14
0x000117c4      4c89ff         mov rdi, r15
0x000117c7      e80448ffff     call sym.peek_token_bracket
0x000117cc      4863d8         movsxd rbx, eax
0x000117cf      8b8424a00000.  mov eax, dword [rsp + 0xa0]
0x000117d6      8d50fe         lea edx, [rax - 2]
0x000117d9      83e2fd         and edx, 0xfffffffd                     ; 4294967293
0x000117dc      7417           je 0x117f5
0x000117de      410fb65708     movzx edx, byte [r15 + 8]
0x000117e3      80fa02         cmp dl, 2
0x000117e6      0f8495040000   je 0x11c81
0x000117ec      80fa16         cmp dl, 0x16
0x000117ef      0f84b2040000   je 0x11ca7
0x000117f5      83f804         cmp eax, 4
0x000117f8      0f879c090000   ja 0x1219a
0x000117fe      4863448500     movsxd rax, dword [rbp + rax*4]
0x00011803      4801e8         add rax, rbp
0x00011806      ffe0           jmp rax
0x00011808      488b5c2440     mov rbx, qword [rsp + 0x40]
0x0001180d      80f923         cmp cl, 0x23
0x00011810      488b7778       mov rsi, qword [rdi + 0x78]
0x00011814      410f94c0       sete r8b
0x00011818      488d0d8e2d00.  lea rcx, [0x000145ad]
0x0001181f      488d15994000.  lea rdx, str.space                      ; 0x158bf ; "space"
0x00011826      450fb6c0       movzx r8d, r8b
0x0001182a      4989d9         mov r9, rbx
0x0001182d      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00011832      e8b9a2ffff     call sym.build_charclass_op
0x00011837      8b3b           mov edi, dword [rbx]
0x00011839      4889442428     mov qword [rsp + 0x28], rax
0x0001183e      85ff           test edi, edi
0x00011840      0f84f6f7ffff   je 0x1103c
0x00011846      4885c0         test rax, rax
0x00011849      0f85edf7ffff   jne 0x1103c
0x0001184f      e94cf7ffff     jmp 0x10fa0
0x00011854      0f1f4000       nop dword [rax]
0x00011858      488b5c2440     mov rbx, qword [rsp + 0x40]
0x0001185d      80f921         cmp cl, 0x21
0x00011860      488b7778       mov rsi, qword [rdi + 0x78]
0x00011864      410f94c0       sete r8b
0x00011868      488d0dd32b00.  lea rcx, [0x00014442]                   ; "_"
0x0001186f      488d153d4000.  lea rdx, str.alnum                      ; 0x158b3 ; "alnum"
0x00011876      450fb6c0       movzx r8d, r8b
0x0001187a      4989d9         mov r9, rbx
0x0001187d      ebae           jmp 0x1182d
0x0001187f      488b442418     mov rax, qword [rsp + 0x18]
0x00011884      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00011889      488b08         mov rcx, qword [rax]
0x0001188c      b801000000     mov eax, 1
0x00011891      d3e0           shl eax, cl
0x00011893      4898           cdqe
0x00011895      488587a80000.  test qword [rdi + 0xa8], rax
0x0001189c      0f842c060000   je 0x11ece
0x000118a2      488b5c2410     mov rbx, qword [rsp + 0x10]
0x000118a7      4c8b442418     mov r8, qword [rsp + 0x18]
0x000118ac      31c9           xor ecx, ecx
0x000118ae      31d2           xor edx, edx
0x000118b0      480983a00000.  or qword [rbx + 0xa0], rax
0x000118b7      488db3800000.  lea rsi, [rbx + 0x80]
0x000118be      488d7b70       lea rdi, [rbx + 0x70]
0x000118c2      e8d96effff     call sym.create_token_tree.isra.16
0x000118c7      4885c0         test rax, rax
0x000118ca      4889442428     mov qword [rsp + 0x28], rax
0x000118cf      0f8433010000   je 0x11a08
0x000118d5      488383980000.  add qword [rbx + 0x98], 1
0x000118dd      808bb0000000.  or byte [rbx + 0xb0], 2
0x000118e4      e953f7ffff     jmp 0x1103c
0x000118e9      488b5c2410     mov rbx, qword [rsp + 0x10]
0x000118ee      4c8b442418     mov r8, qword [rsp + 0x18]
0x000118f3      31c9           xor ecx, ecx
0x000118f5      31d2           xor edx, edx
0x000118f7      488db3800000.  lea rsi, [rbx + 0x80]
0x000118fe      488d7b70       lea rdi, [rbx + 0x70]
0x00011902      e8996effff     call sym.create_token_tree.isra.16
0x00011907      4885c0         test rax, rax
0x0001190a      4889442428     mov qword [rsp + 0x28], rax
0x0001190f      0f84f3000000   je 0x11a08
0x00011915      83bbb4000000.  cmp dword [rbx + 0xb4], 1
0x0001191c      0f8e1af7ffff   jle 0x1103c
0x00011922      808bb0000000.  or byte [rbx + 0xb0], 2
0x00011929      e90ef7ffff     jmp 0x1103c
0x0001192e      488b442410     mov rax, qword [rsp + 0x10]
0x00011933      4c8b442418     mov r8, qword [rsp + 0x18]
0x00011938      31c9           xor ecx, ecx
0x0001193a      31d2           xor edx, edx
0x0001193c      488d5870       lea rbx, [rax + 0x70]
0x00011940      488da8800000.  lea rbp, [rax + 0x80]
0x00011947      4889df         mov rdi, rbx
0x0001194a      4889ee         mov rsi, rbp
0x0001194d      e84e6effff     call sym.create_token_tree.isra.16
0x00011952      4885c0         test rax, rax
0x00011955      4889442428     mov qword [rsp + 0x28], rax
0x0001195a      0f84a8000000   je 0x11a08
0x00011960      488b442410     mov rax, qword [rsp + 0x10]
0x00011965      4c8da424c000.  lea r12, [rsp + 0xc0]
0x0001196d      4c8b7c2428     mov r15, qword [rsp + 0x28]
0x00011972      83b8b4000000.  cmp dword [rax + 0xb4], 1
0x00011979      0f8ebdf6ffff   jle 0x1103c
0x0001197f      498b4648       mov rax, qword [r14 + 0x48]
0x00011983      49394668       cmp qword [r14 + 0x68], rax
0x00011987      0f8e04030000   jle 0x11c91
0x0001198d      493b4630       cmp rax, qword [r14 + 0x30]
0x00011991      0f84fa020000   je 0x11c91
0x00011997      498b5610       mov rdx, qword [r14 + 0x10]
0x0001199b      833c82ff       cmp dword [rdx + rax*4], 0xffffffff
0x0001199f      0f85ec020000   jne 0x11c91
0x000119a5      4c8b6c2418     mov r13, qword [rsp + 0x18]
0x000119aa      488b542420     mov rdx, qword [rsp + 0x20]
0x000119af      4c89f6         mov rsi, r14
0x000119b2      4c89ef         mov rdi, r13
0x000119b5      e826edffff     call sym.peek_token
0x000119ba      4898           cdqe
0x000119bc      49014648       add qword [r14 + 0x48], rax
0x000119c0      4d89e8         mov r8, r13
0x000119c3      31c9           xor ecx, ecx
0x000119c5      31d2           xor edx, edx
0x000119c7      4889ee         mov rsi, rbp
0x000119ca      4889df         mov rdi, rbx
0x000119cd      e8ce6dffff     call sym.create_token_tree.isra.16
0x000119d2      4c89fa         mov rdx, r15
0x000119d5      4989c5         mov r13, rax
0x000119d8      4d89e0         mov r8, r12
0x000119db      4889c1         mov rcx, rax
0x000119de      4889ee         mov rsi, rbp
0x000119e1      4889df         mov rdi, rbx
0x000119e4      c68424c80000.  mov byte [rsp + 0xc8], 0x10             ; [0x10:1]=3
0x000119ec      e8af6dffff     call sym.create_token_tree.isra.16
0x000119f1      4d85ed         test r13, r13
0x000119f4      4989c7         mov r15, rax
0x000119f7      0f94c2         sete dl
0x000119fa      4885c0         test rax, rax
0x000119fd      0f94c0         sete al
0x00011a00      08c2           or dl, al
0x00011a02      0f8477ffffff   je 0x1197f
0x00011a08      488b442440     mov rax, qword [rsp + 0x40]
0x00011a0d      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x00011a13      e988f5ffff     jmp 0x10fa0
0x00011a18      48f744242000.  test qword [rsp + 0x20], 0x20000
0x00011a21      0f85e4f5ffff   jne 0x1100b
0x00011a27      488b442440     mov rax, qword [rsp + 0x40]
0x00011a2c      48c744242800.  mov qword [rsp + 0x28], 0
0x00011a35      c70010000000   mov dword [rax], 0x10                   ; [0x10:4]=0x3e0003
0x00011a3b      e970f5ffff     jmp 0x10fb0
0x00011a40      4883fb08       cmp rbx, 8
0x00011a44      7665           jbe 0x11aab
0x00011a46      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00011a4b      4c8d8424c000.  lea r8, [rsp + 0xc0]
0x00011a53      31c9           xor ecx, ecx
0x00011a55      4889c2         mov rdx, rax
0x00011a58      c68424c80000.  mov byte [rsp + 0xc8], 0x11             ; [0x11:1]=0
0x00011a60      488db7800000.  lea rsi, [rdi + 0x80]
0x00011a67      4883c770       add rdi, 0x70
0x00011a6b      e8306dffff     call sym.create_token_tree.isra.16
0x00011a70      4885c0         test rax, rax
0x00011a73      4889442428     mov qword [rsp + 0x28], rax
0x00011a78      748e           je 0x11a08
0x00011a7a      48895828       mov qword [rax + 0x28], rbx
0x00011a7e      e9b9f5ffff     jmp 0x1103c
0x00011a83      488b442440     mov rax, qword [rsp + 0x40]
0x00011a88      48c744242800.  mov qword [rsp + 0x28], 0
0x00011a91      c70005000000   mov dword [rax], 5
0x00011a97      e914f5ffff     jmp 0x10fb0
0x00011a9c      4c8b6c2428     mov r13, qword [rsp + 0x28]
0x00011aa1      4c896c2430     mov qword [rsp + 0x30], r13
0x00011aa6      e949f8ffff     jmp 0x112f4
0x00011aab      488b742410     mov rsi, qword [rsp + 0x10]
0x00011ab0      ba01000000     mov edx, 1
0x00011ab5      89d9           mov ecx, ebx
0x00011ab7      d3e2           shl edx, cl
0x00011ab9      4863d2         movsxd rdx, edx
0x00011abc      480996a80000.  or qword [rsi + 0xa8], rdx
0x00011ac3      eb81           jmp 0x11a46
0x00011ac5      488bb424a800.  mov rsi, qword [rsp + 0xa8]
0x00011acd      4c89e7         mov rdi, r12
0x00011ad0      e8bb97ffff     call sym.build_equiv_class.isra.27
0x00011ad5      488b542440     mov rdx, qword [rsp + 0x40]
0x00011ada      85c0           test eax, eax
0x00011adc      8902           mov dword [rdx], eax
0x00011ade      7538           jne 0x11b18
0x00011ae0      410fb64708     movzx eax, byte [r15 + 8]
0x00011ae5      3c02           cmp al, 2
0x00011ae7      0f8494010000   je 0x11c81
0x00011aed      3c15           cmp al, 0x15
0x00011aef      0f840d040000   je 0x11f02
0x00011af5      4531c9         xor r9d, r9d
0x00011af8      e985fcffff     jmp 0x11782
0x00011afd      488bb424a800.  mov rsi, qword [rsp + 0xa8]
0x00011b05      4c89e7         mov rdi, r12
0x00011b08      e88397ffff     call sym.build_equiv_class.isra.27
0x00011b0d      488b542440     mov rdx, qword [rsp + 0x40]
0x00011b12      85c0           test eax, eax
0x00011b14      8902           mov dword [rdx], eax
0x00011b16      74c8           je 0x11ae0
0x00011b18      4c89e7         mov rdi, r12
0x00011b1b      e8b0fdfeff     call sym.imp.free
0x00011b20      4c89ef         mov rdi, r13
0x00011b23      e8d856ffff     call sym.free_charset
0x00011b28      488b442440     mov rax, qword [rsp + 0x40]
0x00011b2d      448b00         mov r8d, dword [rax]
0x00011b30      4585c0         test r8d, r8d
0x00011b33      0f8567f4ffff   jne 0x10fa0
0x00011b39      48c744242800.  mov qword [rsp + 0x28], 0
0x00011b42      e9f5f4ffff     jmp 0x1103c
0x00011b47      498b5528       mov rdx, qword [r13 + 0x28]
0x00011b4b      483b542430     cmp rdx, qword [rsp + 0x30]
0x00011b50      498b4500       mov rax, qword [r13]
0x00011b54      0f84f4040000   je 0x1204e
0x00011b5a      488d4a01       lea rcx, [rdx + 1]
0x00011b5e      49894d28       mov qword [r13 + 0x28], rcx
0x00011b62      8b8c24a80000.  mov ecx, dword [rsp + 0xa8]
0x00011b69      890c90         mov dword [rax + rdx*4], ecx
0x00011b6c      e96fffffff     jmp 0x11ae0
0x00011b71      0fb69424a800.  movzx edx, byte [rsp + 0xa8]
0x00011b79      be01000000     mov esi, 1
0x00011b7e      4889d0         mov rax, rdx
0x00011b81      83e23f         and edx, 0x3f
0x00011b84      48c1e803       shr rax, 3
0x00011b88      89d1           mov ecx, edx
0x00011b8a      83e018         and eax, 0x18
0x00011b8d      48d3e6         shl rsi, cl
0x00011b90      49093404       or qword [r12 + rax], rsi
0x00011b94      e947ffffff     jmp 0x11ae0
0x00011b99      4883ec08       sub rsp, 8
0x00011b9d      498b7e78       mov rdi, qword [r14 + 0x78]
0x00011ba1      498d5518       lea rdx, [r13 + 0x18]
0x00011ba5      ff742428       push qword [rsp + 0x28]
0x00011ba9      4c8b8c24b800.  mov r9, qword [rsp + 0xb8]
0x00011bb1      498d4d48       lea rcx, [r13 + 0x48]
0x00011bb5      4c8b442468     mov r8, qword [rsp + 0x68]
0x00011bba      4c89e6         mov rsi, r12
0x00011bbd      e81e97ffff     call sym.build_charclass.isra.29
0x00011bc2      488b542450     mov rdx, qword [rsp + 0x50]
0x00011bc7      85c0           test eax, eax
0x00011bc9      8902           mov dword [rdx], eax
0x00011bcb      4159           pop r9
0x00011bcd      415a           pop r10
0x00011bcf      0f840bffffff   je 0x11ae0
0x00011bd5      e93effffff     jmp 0x11b18
0x00011bda      41804d2001     or byte [r13 + 0x20], 1
0x00011bdf      48f744242000.  test qword [rsp + 0x20], 0x100
0x00011be8      7408           je 0x11bf2
0x00011bea      49810c240004.  or qword [r12], 0x400                   ; [0x400:8]=0x1200000267
0x00011bf2      49015e48       add qword [r14 + 0x48], rbx
0x00011bf6      4c8b5c2418     mov r11, qword [rsp + 0x18]
0x00011bfb      4c89f6         mov rsi, r14
0x00011bfe      488b542420     mov rdx, qword [rsp + 0x20]
0x00011c03      4c89df         mov rdi, r11
0x00011c06      e8c543ffff     call sym.peek_token_bracket
0x00011c0b      89c3           mov ebx, eax
0x00011c0d      410fb64308     movzx eax, byte [r11 + 8]
0x00011c12      3c02           cmp al, 2
0x00011c14      0f848f020000   je 0x11ea9
0x00011c1a      c644245701     mov byte [rsp + 0x57], 1
0x00011c1f      e9f2faffff     jmp 0x11716
0x00011c24      488b442418     mov rax, qword [rsp + 0x18]
0x00011c29      c6400801       mov byte [rax + 8], 1
0x00011c2d      e9ecfaffff     jmp 0x1171e
0x00011c32      41c707060000.  mov dword [r15], 6
0x00011c39      4d89f8         mov r8, r15
0x00011c3c      31c9           xor ecx, ecx
0x00011c3e      31d2           xor edx, edx
0x00011c40      4c89e6         mov rsi, r12
0x00011c43      4889df         mov rdi, rbx
0x00011c46      e8556bffff     call sym.create_token_tree.isra.16
0x00011c4b      41c707090000.  mov dword [r15], 9
0x00011c52      4889c5         mov rbp, rax
0x00011c55      e9ccf9ffff     jmp 0x11626
0x00011c5a      4c8b442418     mov r8, qword [rsp + 0x18]
0x00011c5f      31c9           xor ecx, ecx
0x00011c61      31d2           xor edx, edx
0x00011c63      4c89e6         mov rsi, r12
0x00011c66      4889df         mov rdi, rbx
0x00011c69      e8326bffff     call sym.create_token_tree.isra.16
0x00011c6e      4885c0         test rax, rax
0x00011c71      4889442428     mov qword [rsp + 0x28], rax
0x00011c76      0f8507faffff   jne 0x11683
0x00011c7c      e987fdffff     jmp 0x11a08
0x00011c81      488b442440     mov rax, qword [rsp + 0x40]
0x00011c86      c70007000000   mov dword [rax], 7
0x00011c8c      e987feffff     jmp 0x11b18
0x00011c91      4c897c2428     mov qword [rsp + 0x28], r15
0x00011c96      e9a1f3ffff     jmp 0x1103c
0x00011c9b      488b542440     mov rdx, qword [rsp + 0x40]
0x00011ca0      8902           mov dword [rdx], eax
0x00011ca2      e971feffff     jmp 0x11b18
0x00011ca7      4863c3         movsxd rax, ebx
0x00011caa      4c8b5c2420     mov r11, qword [rsp + 0x20]
0x00011caf      49014648       add qword [r14 + 0x48], rax
0x00011cb3      4c8b542460     mov r10, qword [rsp + 0x60]
0x00011cb8      4c89da         mov rdx, r11
0x00011cbb      4c89d7         mov rdi, r10
0x00011cbe      e80d43ffff     call sym.peek_token_bracket
0x00011cc3      0fb69424c800.  movzx edx, byte [rsp + 0xc8]
0x00011ccb      80fa02         cmp dl, 2
0x00011cce      74b1           je 0x11c81
0x00011cd0      80fa15         cmp dl, 0x15
0x00011cd3      0f840e020000   je 0x11ee7
0x00011cd9      488b542468     mov rdx, qword [rsp + 0x68]
0x00011cde      488dbc24b000.  lea rdi, [rsp + 0xb0]
0x00011ce6      41b901000000   mov r9d, 1
0x00011cec      4d89d8         mov r8, r11
0x00011cef      89c1           mov ecx, eax
0x00011cf1      c78424b00000.  mov dword [rsp + 0xb0], 3
0x00011cfc      48899424b800.  mov qword [rsp + 0xb8], rdx
0x00011d04      4c89d2         mov rdx, r10
0x00011d07      e874e7ffff     call sym.parse_bracket_element.constprop.37
0x00011d0c      85c0           test eax, eax
0x00011d0e      758b           jne 0x11c9b
0x00011d10      488b542420     mov rdx, qword [rsp + 0x20]
0x00011d15      4c89f6         mov rsi, r14
0x00011d18      4c89ff         mov rdi, r15
0x00011d1b      e8b042ffff     call sym.peek_token_bracket
0x00011d20      4863d8         movsxd rbx, eax
0x00011d23      488b442410     mov rax, qword [rsp + 0x10]
0x00011d28      8bb424a00000.  mov esi, dword [rsp + 0xa0]
0x00011d2f      41b900000000   mov r9d, 0
0x00011d35      83b8b4000000.  cmp dword [rax + 0xb4], 1
0x00011d3c      8d46fe         lea eax, [rsi - 2]
0x00011d3f      4d0f4fcd       cmovg r9, r13
0x00011d43      83e0fd         and eax, 0xfffffffd                     ; 4294967293
0x00011d46      0f846d040000   je 0x121b9
0x00011d4c      448b9424b000.  mov r10d, dword [rsp + 0xb0]
0x00011d54      418d42fe       lea eax, [r10 - 2]
0x00011d58      83e0fd         and eax, 0xfffffffd                     ; 4294967293
0x00011d5b      0f8458040000   je 0x121b9
0x00011d61      83fe03         cmp esi, 3
0x00011d64      410f94c3       sete r11b
0x00011d68      0f848f040000   je 0x121fd
0x00011d6e      4183fa03       cmp r10d, 3
0x00011d72      0f8451040000   je 0x121c9
0x00011d78      85f6           test esi, esi
0x00011d7a      0f8569030000   jne 0x120e9
0x00011d80      0fb69424a800.  movzx edx, byte [rsp + 0xa8]
0x00011d88      4585d2         test r10d, r10d
0x00011d8b      0f853c030000   jne 0x120cd
0x00011d91      440fb68424b8.  movzx r8d, byte [rsp + 0xb8]
0x00011d9a      85f6           test esi, esi
0x00011d9c      0f84e4020000   je 0x12086
0x00011da2      4584db         test r11b, r11b
0x00011da5      0f85db020000   jne 0x12086
0x00011dab      4d85c9         test r9, r9
0x00011dae      8b9424a80000.  mov edx, dword [rsp + 0xa8]
0x00011db5      741d           je 0x11dd4
0x00011db7      4489c7         mov edi, r8d
0x00011dba      89542478       mov dword [rsp + 0x78], edx
0x00011dbe      4c894c2470     mov qword [rsp + 0x70], r9
0x00011dc3      e8c8fdfeff     call sym.imp.btowc
0x00011dc8      4c8b4c2470     mov r9, qword [rsp + 0x70]
0x00011dcd      8b542478       mov edx, dword [rsp + 0x78]
0x00011dd1      4189c0         mov r8d, eax
0x00011dd4      83faff         cmp edx, 0xffffffff
0x00011dd7      0f8410040000   je 0x121ed
0x00011ddd      4183f8ff       cmp r8d, 0xffffffff
0x00011de1      0f8406040000   je 0x121ed
0x00011de7      48f744242000.  test qword [rsp + 0x20], 0x10000
0x00011df0      7409           je 0x11dfb
0x00011df2      4139d0         cmp r8d, edx
0x00011df5      0f82be030000   jb 0x121b9
0x00011dfb      4d85c9         test r9, r9
0x00011dfe      7426           je 0x11e26
0x00011e00      498b4140       mov rax, qword [r9 + 0x40]
0x00011e04      483b442448     cmp rax, qword [rsp + 0x48]
0x00011e09      498b4908       mov rcx, qword [r9 + 8]
0x00011e0d      0f8410040000   je 0x12223
0x00011e13      891481         mov dword [rcx + rax*4], edx
0x00011e16      498b4910       mov rcx, qword [r9 + 0x10]
0x00011e1a      488d7001       lea rsi, [rax + 1]
0x00011e1e      49897140       mov qword [r9 + 0x40], rsi
0x00011e22      44890481       mov dword [rcx + rax*4], r8d
0x00011e26      31c0           xor eax, eax
0x00011e28      bf01000000     mov edi, 1
0x00011e2d      39c2           cmp edx, eax
0x00011e2f      89c1           mov ecx, eax
0x00011e31      7716           ja 0x11e49
0x00011e33      4139c0         cmp r8d, eax
0x00011e36      7211           jb 0x11e49
0x00011e38      4889c6         mov rsi, rax
0x00011e3b      4989fb         mov r11, rdi
0x00011e3e      48c1fe06       sar rsi, 6
0x00011e42      49d3e3         shl r11, cl
0x00011e45      4d091cf4       or qword [r12 + rsi*8], r11
0x00011e49      4883c001       add rax, 1
0x00011e4d      483d00010000   cmp rax, 0x100
0x00011e53      75d8           jne 0x11e2d
0x00011e55      488b442440     mov rax, qword [rsp + 0x40]
0x00011e5a      c70000000000   mov dword [rax], 0
0x00011e60      e97bfcffff     jmp 0x11ae0
0x00011e65      488b5c2418     mov rbx, qword [rsp + 0x18]
0x00011e6a      4889c2         mov rdx, rax
0x00011e6d      4c89f6         mov rsi, r14
0x00011e70      4c890424       mov qword [rsp], r8
0x00011e74      4989c7         mov r15, rax
0x00011e77      4889df         mov rdi, rbx
0x00011e7a      e861e8ffff     call sym.peek_token
0x00011e7f      4898           cdqe
0x00011e81      49014648       add qword [r14 + 0x48], rax
0x00011e85      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x00011e8a      4c8b0424       mov r8, qword [rsp]
0x00011e8e      4c89f9         mov rcx, r15
0x00011e91      4889da         mov rdx, rbx
0x00011e94      4889ee         mov rsi, rbp
0x00011e97      4c89f7         mov rdi, r14
0x00011e9a      e801f0ffff     call sym.parse_expression
0x00011e9f      4889442428     mov qword [rsp + 0x28], rax
0x00011ea4      e907f1ffff     jmp 0x10fb0
0x00011ea9      488b442440     mov rax, qword [rsp + 0x40]
0x00011eae      c70002000000   mov dword [rax], 2
0x00011eb4      e95ffcffff     jmp 0x11b18
0x00011eb9      4c89e7         mov rdi, r12
0x00011ebc      e80ffafeff     call sym.imp.free
0x00011ec1      4c89ef         mov rdi, r13
0x00011ec4      e807fafeff     call sym.imp.free
0x00011ec9      e93afbffff     jmp 0x11a08
0x00011ece      488b442440     mov rax, qword [rsp + 0x40]
0x00011ed3      48c744242800.  mov qword [rsp + 0x28], 0
0x00011edc      c70006000000   mov dword [rax], 6
0x00011ee2      e9c9f0ffff     jmp 0x10fb0
0x00011ee7      89d8           mov eax, ebx
0x00011ee9      f7d8           neg eax
0x00011eeb      4898           cdqe
0x00011eed      49014648       add qword [r14 + 0x48], rax
0x00011ef1      41c6470801     mov byte [r15 + 8], 1
0x00011ef6      8b8424a00000.  mov eax, dword [rsp + 0xa0]
0x00011efd      e9f3f8ffff     jmp 0x117f5
0x00011f02      49015e48       add qword [r14 + 0x48], rbx
0x00011f06      807c245700     cmp byte [rsp + 0x57], 0
0x00011f0b      7414           je 0x11f21
0x00011f0d      498d542420     lea rdx, [r12 + 0x20]
0x00011f12      4c89e0         mov rax, r12
0x00011f15      48f710         not qword [rax]
0x00011f18      4883c008       add rax, 8
0x00011f1c      4839c2         cmp rdx, rax
0x00011f1f      75f4           jne 0x11f15
0x00011f21      488b442410     mov rax, qword [rsp + 0x10]
0x00011f26      8b90b4000000   mov edx, dword [rax + 0xb4]
0x00011f2c      83fa01         cmp edx, 1
0x00011f2f      7e18           jle 0x11f49
0x00011f31      488b4878       mov rcx, qword [rax + 0x78]
0x00011f35      31c0           xor eax, eax
0x00011f37      488b3401       mov rsi, qword [rcx + rax]
0x00011f3b      49213404       and qword [r12 + rax], rsi
0x00011f3f      4883c008       add rax, 8
0x00011f43      4883f820       cmp rax, 0x20                           ; "@"
0x00011f47      75ee           jne 0x11f37
0x00011f49      49837d2800     cmp qword [r13 + 0x28], 0
0x00011f4e      0f8584000000   jne 0x11fd8
0x00011f54      49837d3000     cmp qword [r13 + 0x30], 0
0x00011f59      757d           jne 0x11fd8
0x00011f5b      49837d3800     cmp qword [r13 + 0x38], 0
0x00011f60      7576           jne 0x11fd8
0x00011f62      49837d4000     cmp qword [r13 + 0x40], 0
0x00011f67      756f           jne 0x11fd8
0x00011f69      83ea01         sub edx, 1
0x00011f6c      7e0e           jle 0x11f7c
0x00011f6e      49837d4800     cmp qword [r13 + 0x48], 0
0x00011f73      7563           jne 0x11fd8
0x00011f75      41f6452001     test byte [r13 + 0x20], 1
0x00011f7a      755c           jne 0x11fd8
0x00011f7c      4c89ef         mov rdi, r13
0x00011f7f      e87c52ffff     call sym.free_charset
0x00011f84      488b442410     mov rax, qword [rsp + 0x10]
0x00011f89      4c8d8424b000.  lea r8, [rsp + 0xb0]
0x00011f91      31c9           xor ecx, ecx
0x00011f93      31d2           xor edx, edx
0x00011f95      c68424b80000.  mov byte [rsp + 0xb8], 3
0x00011f9d      4c89a424b000.  mov qword [rsp + 0xb0], r12
0x00011fa5      488db0800000.  lea rsi, [rax + 0x80]
0x00011fac      488d7870       lea rdi, [rax + 0x70]
0x00011fb0      e8eb67ffff     call sym.create_token_tree.isra.16
0x00011fb5      4885c0         test rax, rax
0x00011fb8      4889442428     mov qword [rsp + 0x28], rax
0x00011fbd      0f8579f0ffff   jne 0x1103c
0x00011fc3      488b442440     mov rax, qword [rsp + 0x40]
0x00011fc8      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x00011fce      e945fbffff     jmp 0x11b18
0x00011fd3      0f1f440000     nop dword [rax + rax]
0x00011fd8      488b442410     mov rax, qword [rsp + 0x10]
0x00011fdd      4c8dbc24b000.  lea r15, [rsp + 0xb0]
0x00011fe5      31d2           xor edx, edx
0x00011fe7      31c9           xor ecx, ecx
0x00011fe9      4d89f8         mov r8, r15
0x00011fec      8088b0000000.  or byte [rax + 0xb0], 2
0x00011ff3      488d5870       lea rbx, [rax + 0x70]
0x00011ff7      488da8800000.  lea rbp, [rax + 0x80]
0x00011ffe      c68424b80000.  mov byte [rsp + 0xb8], 6
0x00012006      4c89ac24b000.  mov qword [rsp + 0xb0], r13
0x0001200e      4889df         mov rdi, rbx
0x00012011      4889ee         mov rsi, rbp
0x00012014      e88767ffff     call sym.create_token_tree.isra.16
0x00012019      4889c7         mov rdi, rax
0x0001201c      4889442428     mov qword [rsp + 0x28], rax
0x00012021      498d542420     lea rdx, [r12 + 0x20]
0x00012026      4885ff         test rdi, rdi
0x00012029      4c89e0         mov rax, r12
0x0001202c      7495           je 0x11fc3
0x0001202e      48833800       cmp qword [rax], 0
0x00012032      0f85a5020000   jne 0x122dd
0x00012038      4883c008       add rax, 8
0x0001203c      4839c2         cmp rdx, rax
0x0001203f      75ed           jne 0x1202e
0x00012041      4c89e7         mov rdi, r12
0x00012044      e887f8feff     call sym.imp.free
0x00012049      e9eeefffff     jmp 0x1103c
0x0001204e      488b542430     mov rdx, qword [rsp + 0x30]
0x00012053      488d7c1201     lea rdi, [rdx + rdx + 1]
0x00012058      488d34bd0000.  lea rsi, [rdi*4]
0x00012060      48897c2430     mov qword [rsp + 0x30], rdi
0x00012065      4889c7         mov rdi, rax
0x00012068      e8f3fafeff     call sym.imp.realloc
0x0001206d      4885c0         test rax, rax
0x00012070      0f844dffffff   je 0x11fc3
0x00012076      49894500       mov qword [r13], rax
0x0001207a      498b5528       mov rdx, qword [r13 + 0x28]
0x0001207e      e9d7faffff     jmp 0x11b5a
0x00012083      4531c0         xor r8d, r8d
0x00012086      4d85c9         test r9, r9
0x00012089      7479           je 0x12104
0x0001208b      89d7           mov edi, edx
0x0001208d      4489442478     mov dword [rsp + 0x78], r8d
0x00012092      4c894c2470     mov qword [rsp + 0x70], r9
0x00012097      e8f4fafeff     call sym.imp.btowc
0x0001209c      89c2           mov edx, eax
0x0001209e      8b8424b00000.  mov eax, dword [rsp + 0xb0]
0x000120a5      4c8b4c2470     mov r9, qword [rsp + 0x70]
0x000120aa      448b442478     mov r8d, dword [rsp + 0x78]
0x000120af      83f803         cmp eax, 3
0x000120b2      0f84fffcffff   je 0x11db7
0x000120b8      85c0           test eax, eax
0x000120ba      0f84f7fcffff   je 0x11db7
0x000120c0      448b8424b800.  mov r8d, dword [rsp + 0xb8]
0x000120c8      e907fdffff     jmp 0x11dd4
0x000120cd      4183fa03       cmp r10d, 3
0x000120d1      0f848b020000   je 0x12362
0x000120d7      85f6           test esi, esi
0x000120d9      74a8           je 0x12083
0x000120db      4584db         test r11b, r11b
0x000120de      75a3           jne 0x12083
0x000120e0      8b9424a80000.  mov edx, dword [rsp + 0xa8]
0x000120e7      ebd7           jmp 0x120c0
0x000120e9      31d2           xor edx, edx
0x000120eb      83fe03         cmp esi, 3
0x000120ee      0f8594fcffff   jne 0x11d88
0x000120f4      488b8424a800.  mov rax, qword [rsp + 0xa8]
0x000120fc      0fb610         movzx edx, byte [rax]
0x000120ff      e984fcffff     jmp 0x11d88
0x00012104      4585d2         test r10d, r10d
0x00012107      0f84dafcffff   je 0x11de7
0x0001210d      4183fa03       cmp r10d, 3
0x00012111      75ad           jne 0x120c0
0x00012113      e9cffcffff     jmp 0x11de7
0x00012118      bb80000000     mov ebx, 0x80
0x0001211d      41bc02000000   mov r12d, 2
0x00012123      e848fbfeff     call sym.imp.__ctype_b_loc
0x00012128      4863d3         movsxd rdx, ebx
0x0001212b      4d63cc         movsxd r9, r12d
0x0001212e      41b801000000   mov r8d, 1
0x00012134      4801d2         add rdx, rdx
0x00012137      480310         add rdx, qword [rax]
0x0001213a      488b442410     mov rax, qword [rsp + 0x10]
0x0001213f      4a8d3cc8       lea rdi, [rax + r9*8]
0x00012143      31c0           xor eax, eax
0x00012145      eb1b           jmp 0x12162
0x00012147      660f1f840000.  nop word [rax + rax]
0x00012150      8d3403         lea esi, [rbx + rax]
0x00012153      83fe5f         cmp esi, 0x5f
0x00012156      7412           je 0x1216a
0x00012158      4883c001       add rax, 1
0x0001215c      4883f840       cmp rax, 0x40                           ; segment.PHDR
0x00012160      7417           je 0x12179
0x00012162      f6044208       test byte [rdx + rax*2], 8
0x00012166      89c1           mov ecx, eax
0x00012168      74e6           je 0x12150
0x0001216a      4c89c6         mov rsi, r8
0x0001216d      48d3e6         shl rsi, cl
0x00012170      4809b7b80000.  or qword [rdi + 0xb8], rsi
0x00012177      ebdf           jmp 0x12158
0x00012179      4983c101       add r9, 1
0x0001217d      83c340         add ebx, 0x40                           ; segment.PHDR
0x00012180      4883ea80       sub rdx, 0xffffffffffffff80
0x00012184      4883c708       add rdi, 8
0x00012188      4183f903       cmp r9d, 3
0x0001218c      7eb5           jle 0x12143
0x0001218e      e93ef4ffff     jmp 0x115d1
0x00012193      31db           xor ebx, ebx
0x00012195      4531e4         xor r12d, r12d
0x00012198      eb89           jmp 0x12123
0x0001219a      488d0d8f3c00.  lea rcx, obj.__PRETTY_FUNCTION__.7327   ; 0x15e30 ; "parse_bracket_exp"
0x000121a1      488d35a83600.  lea rsi, str..._coreutils_8.31_lib_regcomp.c ; 0x15850 ; "../coreutils-8.31/lib/regcomp.c"
0x000121a8      488d3df03600.  lea rdi, [0x0001589f]                   ; "0"
0x000121af      baed0c0000     mov edx, 0xced
0x000121b4      e897f8feff     call sym.imp.__assert_fail
0x000121b9      488b442440     mov rax, qword [rsp + 0x40]
0x000121be      c7000b000000   mov dword [rax], 0xb                    ; [0xb:4]=0
0x000121c4      e94ff9ffff     jmp 0x11b18
0x000121c9      488bbc24b800.  mov rdi, qword [rsp + 0xb8]
0x000121d1      31c0           xor eax, eax
0x000121d3      4883c9ff       or rcx, 0xffffffffffffffff
0x000121d7      f2ae           repne scasb al, byte [rdi]
0x000121d9      4889c8         mov rax, rcx
0x000121dc      48f7d0         not rax
0x000121df      4883e801       sub rax, 1
0x000121e3      4883f801       cmp rax, 1
0x000121e7      0f868bfbffff   jbe 0x11d78
0x000121ed      488b442440     mov rax, qword [rsp + 0x40]
0x000121f2      c70003000000   mov dword [rax], 3
0x000121f8      e91bf9ffff     jmp 0x11b18
0x000121fd      488bbc24a800.  mov rdi, qword [rsp + 0xa8]
0x00012205      31c0           xor eax, eax
0x00012207      4883c9ff       or rcx, 0xffffffffffffffff
0x0001220b      f2ae           repne scasb al, byte [rdi]
0x0001220d      4889c8         mov rax, rcx
0x00012210      48f7d0         not rax
0x00012213      4883e801       sub rax, 1
0x00012217      4883f801       cmp rax, 1
0x0001221b      0f864dfbffff   jbe 0x11d6e
0x00012221      ebca           jmp 0x121ed
0x00012223      488b442448     mov rax, qword [rsp + 0x48]
0x00012228      4889cf         mov rdi, rcx
0x0001222b      448984248c00.  mov dword [rsp + 0x8c], r8d
0x00012233      899424880000.  mov dword [rsp + 0x88], edx
0x0001223a      4c894c2470     mov qword [rsp + 0x70], r9
0x0001223f      4801c0         add rax, rax
0x00012242      4883c001       add rax, 1
0x00012246      4c8d14850000.  lea r10, [rax*4]
0x0001224e      4889442448     mov qword [rsp + 0x48], rax
0x00012253      4c89d6         mov rsi, r10
0x00012256      4c8994248000.  mov qword [rsp + 0x80], r10
0x0001225e      e8fdf8feff     call sym.imp.realloc
0x00012263      4c8b4c2470     mov r9, qword [rsp + 0x70]
0x00012268      4c8b94248000.  mov r10, qword [rsp + 0x80]
0x00012270      4889442478     mov qword [rsp + 0x78], rax
0x00012275      498b7910       mov rdi, qword [r9 + 0x10]
0x00012279      4c89d6         mov rsi, r10
0x0001227c      e8dff8feff     call sym.imp.realloc
0x00012281      488b4c2478     mov rcx, qword [rsp + 0x78]
0x00012286      4885c9         test rcx, rcx
0x00012289      742a           je 0x122b5
0x0001228b      4885c0         test rax, rax
0x0001228e      4c8b4c2470     mov r9, qword [rsp + 0x70]
0x00012293      8b9424880000.  mov edx, dword [rsp + 0x88]
0x0001229a      448b84248c00.  mov r8d, dword [rsp + 0x8c]
0x000122a2      7411           je 0x122b5
0x000122a4      49894110       mov qword [r9 + 0x10], rax
0x000122a8      49894908       mov qword [r9 + 8], rcx
0x000122ac      498b4140       mov rax, qword [r9 + 0x40]
0x000122b0      e95efbffff     jmp 0x11e13
0x000122b5      4889cf         mov rdi, rcx
0x000122b8      48890424       mov qword [rsp], rax
0x000122bc      e80ff6feff     call sym.imp.free
0x000122c1      488b0424       mov rax, qword [rsp]
0x000122c5      4889c7         mov rdi, rax
0x000122c8      e803f6feff     call sym.imp.free
0x000122cd      488b442440     mov rax, qword [rsp + 0x40]
0x000122d2      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x000122d8      e93bf8ffff     jmp 0x11b18
0x000122dd      31c9           xor ecx, ecx
0x000122df      31d2           xor edx, edx
0x000122e1      4d89f8         mov r8, r15
0x000122e4      4889ee         mov rsi, rbp
0x000122e7      4889df         mov rdi, rbx
0x000122ea      c68424b80000.  mov byte [rsp + 0xb8], 3
0x000122f2      4c89a424b000.  mov qword [rsp + 0xb0], r12
0x000122fa      e8a164ffff     call sym.create_token_tree.isra.16
0x000122ff      4885c0         test rax, rax
0x00012302      0f84bbfcffff   je 0x11fc3
0x00012308      488b4c2428     mov rcx, qword [rsp + 0x28]
0x0001230d      4c8d8424c000.  lea r8, [rsp + 0xc0]
0x00012315      4889c2         mov rdx, rax
0x00012318      4889ee         mov rsi, rbp
0x0001231b      4889df         mov rdi, rbx
0x0001231e      c68424c80000.  mov byte [rsp + 0xc8], 0xa
0x00012326      e87564ffff     call sym.create_token_tree.isra.16
0x0001232b      4885c0         test rax, rax
0x0001232e      4889442428     mov qword [rsp + 0x28], rax
0x00012333      0f8503edffff   jne 0x1103c
0x00012339      e985fcffff     jmp 0x11fc3
0x0001233e      e89df6feff     call sym.imp.__stack_chk_fail
0x00012343      488b442418     mov rax, qword [rsp + 0x18]
0x00012348      80780802       cmp byte [rax + 8], 2
0x0001234c      0f85eef1ffff   jne 0x11540
0x00012352      488b442440     mov rax, qword [rsp + 0x40]
0x00012357      c70009000000   mov dword [rax], 9
0x0001235d      e9e9f1ffff     jmp 0x1154b
0x00012362      488b8424b800.  mov rax, qword [rsp + 0xb8]
0x0001236a      440fb600       movzx r8d, byte [rax]
0x0001236e      e927faffff     jmp 0x11d9a
0x00012373      0f1f00         nop dword [rax]
0x00012376      662e0f1f8400.  nop word cs:[rax + rax]
;-- parse_branch:
0x00012380      4157           push r15
0x00012382      4156           push r14
0x00012384      4989cf         mov r15, rcx
0x00012387      4155           push r13
0x00012389      4154           push r12
0x0001238b      4989f5         mov r13, rsi
0x0001238e      55             push rbp
0x0001238f      53             push rbx
0x00012390      4c89cb         mov rbx, r9
0x00012393      4889d5         mov rbp, rdx
0x00012396      4d89c4         mov r12, r8
0x00012399      4883ec48       sub rsp, 0x48
0x0001239d      64488b042528.  mov rax, qword fs:[0x28]
0x000123a6      4889442438     mov qword [rsp + 0x38], rax
0x000123ab      31c0           xor eax, eax
0x000123ad      488b06         mov rax, qword [rsi]
0x000123b0      48893c24       mov qword [rsp], rdi
0x000123b4      4889442410     mov qword [rsp + 0x10], rax
0x000123b9      e8e2eaffff     call sym.parse_expression
0x000123be      8b13           mov edx, dword [rbx]
0x000123c0      4989c6         mov r14, rax
0x000123c3      85d2           test edx, edx
0x000123c5      7409           je 0x123d0
0x000123c7      4885c0         test rax, rax
0x000123ca      0f84fa000000   je 0x124ca
0x000123d0      488d442420     lea rax, [rsp + 0x20]
0x000123d5      4889442418     mov qword [rsp + 0x18], rax
0x000123da      660f1f440000   nop word [rax + rax]
0x000123e0      0fb64508       movzx eax, byte [rbp + 8]
0x000123e4      89c2           mov edx, eax
0x000123e6      83e2f7         and edx, 0xfffffff7                     ; 4294967287
0x000123e9      80fa02         cmp dl, 2
0x000123ec      0f848e000000   je 0x12480
0x000123f2      3c09           cmp al, 9
0x000123f4      7509           jne 0x123ff
0x000123f6      4d85e4         test r12, r12
0x000123f9      0f8581000000   jne 0x12480
0x000123ff      488b3c24       mov rdi, qword [rsp]
0x00012403      4989d9         mov r9, rbx
0x00012406      4d89e0         mov r8, r12
0x00012409      4c89f9         mov rcx, r15
0x0001240c      4889ea         mov rdx, rbp
0x0001240f      4c89ee         mov rsi, r13
0x00012412      e889eaffff     call sym.parse_expression
0x00012417      4989c1         mov r9, rax
0x0001241a      8b03           mov eax, dword [rbx]
0x0001241c      85c0           test eax, eax
0x0001241e      7409           je 0x12429
0x00012420      4d85c9         test r9, r9
0x00012423      0f848b000000   je 0x124b4
0x00012429      4d85f6         test r14, r14
0x0001242c      747a           je 0x124a8
0x0001242e      4d85c9         test r9, r9
0x00012431      7475           je 0x124a8
0x00012433      488b442410     mov rax, qword [rsp + 0x10]
0x00012438      4c8b442418     mov r8, qword [rsp + 0x18]
0x0001243d      4c89c9         mov rcx, r9
0x00012440      4c89f2         mov rdx, r14
0x00012443      4c894c2408     mov qword [rsp + 8], r9
0x00012448      c644242810     mov byte [rsp + 0x28], 0x10             ; [0x10:1]=3
0x0001244d      488db0800000.  lea rsi, [rax + 0x80]
0x00012454      488d7870       lea rdi, [rax + 0x70]
0x00012458      e84363ffff     call sym.create_token_tree.isra.16
0x0001245d      4885c0         test rax, rax
0x00012460      4c8b4c2408     mov r9, qword [rsp + 8]
0x00012465      7469           je 0x124d0
0x00012467      4989c6         mov r14, rax
0x0001246a      0fb64508       movzx eax, byte [rbp + 8]
0x0001246e      89c2           mov edx, eax
0x00012470      83e2f7         and edx, 0xfffffff7                     ; 4294967287
0x00012473      80fa02         cmp dl, 2
0x00012476      0f8576ffffff   jne 0x123f2
0x0001247c      0f1f4000       nop dword [rax]
0x00012480      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00012485      6448330c2528.  xor rcx, qword fs:[0x28]
0x0001248e      4c89f0         mov rax, r14
0x00012491      756a           jne 0x124fd
0x00012493      4883c448       add rsp, 0x48
0x00012497      5b             pop rbx
0x00012498      5d             pop rbp
0x00012499      415c           pop r12
0x0001249b      415d           pop r13
0x0001249d      415e           pop r14
0x0001249f      415f           pop r15
0x000124a1      c3             ret
0x000124a2      660f1f440000   nop word [rax + rax]
0x000124a8      4d85f6         test r14, r14
0x000124ab      4d0f44f1       cmove r14, r9
0x000124af      e92cffffff     jmp 0x123e0
0x000124b4      4d85f6         test r14, r14
0x000124b7      7411           je 0x124ca
0x000124b9      488d35a04dff.  lea rsi, sym.free_tree                  ; 0x7260 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x000124c0      31d2           xor edx, edx
0x000124c2      4c89f7         mov rdi, r14
0x000124c5      e8f63effff     call sym.postorder
0x000124ca      4531f6         xor r14d, r14d
0x000124cd      ebb1           jmp 0x12480
0x000124cf      90             nop
0x000124d0      488d35894dff.  lea rsi, sym.free_tree                  ; 0x7260 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x000124d7      4c89cf         mov rdi, r9
0x000124da      31d2           xor edx, edx
0x000124dc      e8df3effff     call sym.postorder
0x000124e1      488d35784dff.  lea rsi, sym.free_tree                  ; 0x7260 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x000124e8      4c89f7         mov rdi, r14
0x000124eb      31d2           xor edx, edx
0x000124ed      4531f6         xor r14d, r14d
0x000124f0      e8cb3effff     call sym.postorder
0x000124f5      c7030c000000   mov dword [rbx], 0xc                    ; [0xc:4]=0
0x000124fb      eb83           jmp 0x12480
0x000124fd      e8def4feff     call sym.imp.__stack_chk_fail
0x00012502      0f1f4000       nop dword [rax]
0x00012506      662e0f1f8400.  nop word cs:[rax + rax]
;-- parse_reg_exp:
0x00012510      4157           push r15
0x00012512      4156           push r14
0x00012514      4989ce         mov r14, rcx
0x00012517      4155           push r13
0x00012519      4154           push r12
0x0001251b      4d89cd         mov r13, r9
0x0001251e      55             push rbp
0x0001251f      53             push rbx
0x00012520      4889d5         mov rbp, rdx
0x00012523      4989fc         mov r12, rdi
0x00012526      4883ec58       sub rsp, 0x58
0x0001252a      488b1e         mov rbx, qword [rsi]
0x0001252d      64488b042528.  mov rax, qword fs:[0x28]
0x00012536      4889442448     mov qword [rsp + 0x48], rax
0x0001253b      31c0           xor eax, eax
0x0001253d      4889742428     mov qword [rsp + 0x28], rsi
0x00012542      4c89442410     mov qword [rsp + 0x10], r8
0x00012547      488b83a80000.  mov rax, qword [rbx + 0xa8]
0x0001254e      4889442420     mov qword [rsp + 0x20], rax
0x00012553      e828feffff     call sym.parse_branch
0x00012558      418b5500       mov edx, dword [r13]
0x0001255c      4989c7         mov r15, rax
0x0001255f      85d2           test edx, edx
0x00012561      7409           je 0x1256c
0x00012563      4885c0         test rax, rax
0x00012566      0f84e6000000   je 0x12652
0x0001256c      488d442430     lea rax, [rsp + 0x30]
0x00012571      4889442408     mov qword [rsp + 8], rax
0x00012576      e989000000     jmp 0x12604
0x0001257b      0f1f440000     nop dword [rax + rax]
0x00012580      3c09           cmp al, 9
0x00012582      750c           jne 0x12590
0x00012584      48837c241000   cmp qword [rsp + 0x10], 0
0x0001258a      0f85a8000000   jne 0x12638
0x00012590      488b83a80000.  mov rax, qword [rbx + 0xa8]
0x00012597      4c8b442410     mov r8, qword [rsp + 0x10]
0x0001259c      4c89f1         mov rcx, r14
0x0001259f      488b742428     mov rsi, qword [rsp + 0x28]
0x000125a4      4d89e9         mov r9, r13
0x000125a7      4889ea         mov rdx, rbp
0x000125aa      4c89e7         mov rdi, r12
0x000125ad      4889442418     mov qword [rsp + 0x18], rax
0x000125b2      488b442420     mov rax, qword [rsp + 0x20]
0x000125b7      488983a80000.  mov qword [rbx + 0xa8], rax
0x000125be      e8bdfdffff     call sym.parse_branch
0x000125c3      4889c1         mov rcx, rax
0x000125c6      418b4500       mov eax, dword [r13]
0x000125ca      85c0           test eax, eax
0x000125cc      7405           je 0x125d3
0x000125ce      4885c9         test rcx, rcx
0x000125d1      7469           je 0x1263c
0x000125d3      488b442418     mov rax, qword [rsp + 0x18]
0x000125d8      480983a80000.  or qword [rbx + 0xa8], rax
0x000125df      4c8b442408     mov r8, qword [rsp + 8]
0x000125e4      488db3800000.  lea rsi, [rbx + 0x80]
0x000125eb      488d7b70       lea rdi, [rbx + 0x70]
0x000125ef      4c89fa         mov rdx, r15
0x000125f2      c64424380a     mov byte [rsp + 0x38], 0xa
0x000125f7      e8a461ffff     call sym.create_token_tree.isra.16
0x000125fc      4885c0         test rax, rax
0x000125ff      4989c7         mov r15, rax
0x00012602      747c           je 0x12680
0x00012604      807d080a       cmp byte [rbp + 8], 0xa
0x00012608      754e           jne 0x12658
0x0001260a      4c89f2         mov rdx, r14
0x0001260d      4c89e6         mov rsi, r12
0x00012610      4889ef         mov rdi, rbp
0x00012613      4881ca000080.  or rdx, 0x800000
0x0001261a      e8c1e0ffff     call sym.peek_token
0x0001261f      4898           cdqe
0x00012621      4901442448     add qword [r12 + 0x48], rax
0x00012626      0fb64508       movzx eax, byte [rbp + 8]
0x0001262a      89c2           mov edx, eax
0x0001262c      83e2f7         and edx, 0xfffffff7                     ; 4294967287
0x0001262f      80fa02         cmp dl, 2
0x00012632      0f8548ffffff   jne 0x12580
0x00012638      31c9           xor ecx, ecx
0x0001263a      eba3           jmp 0x125df
0x0001263c      4d85ff         test r15, r15
0x0001263f      7411           je 0x12652
0x00012641      488d35184cff.  lea rsi, sym.free_tree                  ; 0x7260 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x00012648      31d2           xor edx, edx
0x0001264a      4c89ff         mov rdi, r15
0x0001264d      e86e3dffff     call sym.postorder
0x00012652      4531ff         xor r15d, r15d
0x00012655      0f1f00         nop dword [rax]
0x00012658      488b4c2448     mov rcx, qword [rsp + 0x48]
0x0001265d      6448330c2528.  xor rcx, qword fs:[0x28]
0x00012666      4c89f8         mov rax, r15
0x00012669      751f           jne 0x1268a
0x0001266b      4883c458       add rsp, 0x58
0x0001266f      5b             pop rbx
0x00012670      5d             pop rbp
0x00012671      415c           pop r12
0x00012673      415d           pop r13
0x00012675      415e           pop r14
0x00012677      415f           pop r15
0x00012679      c3             ret
0x0001267a      660f1f440000   nop word [rax + rax]
0x00012680      41c745000c00.  mov dword [r13], 0xc                    ; [0xc:4]=0
0x00012688      ebce           jmp 0x12658
0x0001268a      e851f3feff     call sym.imp.__stack_chk_fail
0x0001268f      90             nop
;-- re_compile_internal:
0x00012690      4157           push r15
0x00012692      4156           push r14
0x00012694      4155           push r13
0x00012696      4154           push r12
0x00012698      55             push rbp
0x00012699      53             push rbx
0x0001269a      4881ec280100.  sub rsp, 0x128
0x000126a1      48894f18       mov qword [rdi + 0x18], rcx
0x000126a5      48c747100000.  mov qword [rdi + 0x10], 0
0x000126ad      64488b042528.  mov rax, qword fs:[0x28]
0x000126b6      488984241801.  mov qword [rsp + 0x118], rax
0x000126be      31c0           xor eax, eax
0x000126c0      0fb64738       movzx eax, byte [rdi + 0x38]
0x000126c4      48897c2408     mov qword [rsp + 8], rdi
0x000126c9      4889742410     mov qword [rsp + 0x10], rsi
0x000126ce      48891424       mov qword [rsp], rdx
0x000126d2      48894c2418     mov qword [rsp + 0x18], rcx
0x000126d7      c744244c0000.  mov dword [rsp + 0x4c], 0
0x000126df      48c747300000.  mov qword [rdi + 0x30], 0
0x000126e7      488b1f         mov rbx, qword [rdi]
0x000126ea      88442420       mov byte [rsp + 0x20], al
0x000126ee      83e090         and eax, 0xffffff90                     ; 4294967184
0x000126f1      48817f08e700.  cmp qword [rdi + 8], 0xe7
0x000126f9      884738         mov byte [rdi + 0x38], al
0x000126fc      0f86f40d0000   jbe 0x134f6
0x00012702      488d7b08       lea rdi, [rbx + 8]
0x00012706      488b442408     mov rax, qword [rsp + 8]
0x0001270b      4889d9         mov rcx, rbx
0x0001270e      4883e7f8       and rdi, 0xfffffffffffffff8
0x00012712      4829f9         sub rcx, rdi
0x00012715      48c74010e800.  mov qword [rax + 0x10], 0xe8            ; [0xe8:8]=0x600000001
0x0001271d      31c0           xor eax, eax
0x0001271f      81c1e8000000   add ecx, 0xe8
0x00012725      48c703000000.  mov qword [rbx], 0
0x0001272c      48c783e00000.  mov qword [rbx + 0xe0], 0
0x00012737      c1e903         shr ecx, 3
0x0001273a      f348ab         rep stosq qword [rdi], rax
0x0001273d      48b854555555.  movabs rax, 0x555555555555554
0x00012747      c78380000000.  mov dword [rbx + 0x80], 0xf             ; [0xf:4]=0x3e000300
0x00012751      48390424       cmp qword [rsp], rax
0x00012755      0f873b060000   ja 0x12d96
0x0001275b      4c8b3424       mov r14, qword [rsp]
0x0001275f      498d4601       lea rax, [r14 + 1]
0x00012763      4889c7         mov rdi, rax
0x00012766      48894308       mov qword [rbx + 8], rax
0x0001276a      4889442428     mov qword [rsp + 0x28], rax
0x0001276f      48c1e704       shl rdi, 4
0x00012773      e888f3feff     call sym.imp.malloc
0x00012778      4d85f6         test r14, r14
0x0001277b      488903         mov qword [rbx], rax
0x0001277e      0f84e10c0000   je 0x13465
0x00012784      be01000000     mov esi, 1
0x00012789      0f1f80000000.  nop dword [rax]
0x00012790      4801f6         add rsi, rsi
0x00012793      48393424       cmp qword [rsp], rsi
0x00012797      73f7           jae 0x12790
0x00012799      488d6eff       lea rbp, [rsi - 1]
0x0001279d      bf18000000     mov edi, 0x18
0x000127a2      e809f3feff     call sym.imp.calloc
0x000127a7      4889ab880000.  mov qword [rbx + 0x88], rbp
0x000127ae      48894340       mov qword [rbx + 0x40], rax
0x000127b2      e809f2feff     call sym.imp.__ctype_get_mb_cur_max
0x000127b7      bf0e000000     mov edi, 0xe
0x000127bc      8983b4000000   mov dword [rbx + 0xb4], eax
0x000127c2      e869f3feff     call sym.imp.nl_langinfo
0x000127c7      0fb610         movzx edx, byte [rax]
0x000127ca      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000127cd      80fa55         cmp dl, 0x55
0x000127d0      754e           jne 0x12820
0x000127d2      0fb65001       movzx edx, byte [rax + 1]
0x000127d6      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000127d9      80fa54         cmp dl, 0x54
0x000127dc      7542           jne 0x12820
0x000127de      0fb65002       movzx edx, byte [rax + 2]
0x000127e2      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000127e5      80fa46         cmp dl, 0x46
0x000127e8      7536           jne 0x12820
0x000127ea      31d2           xor edx, edx
0x000127ec      8078032d       cmp byte [rax + 3], 0x2d
0x000127f0      488d3dff3000.  lea rdi, [0x000158f6]                   ; "8"
0x000127f7      b902000000     mov ecx, 2
0x000127fc      0f94c2         sete dl
0x000127ff      488d741003     lea rsi, [rax + rdx + 3]
0x00012804      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00012806      0f97c0         seta al
0x00012809      1c00           sbb al, 0
0x0001280b      84c0           test al, al
0x0001280d      7511           jne 0x12820
0x0001280f      808bb0000000.  or byte [rbx + 0xb0], 4
0x00012816      662e0f1f8400.  nop word cs:[rax + rax]
0x00012820      0fb683b00000.  movzx eax, byte [rbx + 0xb0]
0x00012827      89c2           mov edx, eax
0x00012829      83e2f7         and edx, 0xfffffff7                     ; 4294967287
0x0001282c      83bbb4000000.  cmp dword [rbx + 0xb4], 1
0x00012833      8893b0000000   mov byte [rbx + 0xb0], dl
0x00012839      7e13           jle 0x1284e
0x0001283b      a804           test al, 4
0x0001283d      0f8460050000   je 0x12da3
0x00012843      488d05163600.  lea rax, obj.utf8_sb_map                ; 0x15e60
0x0001284a      48894378       mov qword [rbx + 0x78], rax
0x0001284e      48833b00       cmp qword [rbx], 0
0x00012852      0f843e050000   je 0x12d96
0x00012858      48837b4000     cmp qword [rbx + 0x40], 0
0x0001285d      0f8433050000   je 0x12d96
0x00012863      488b442418     mov rax, qword [rsp + 0x18]
0x00012868      488dac248000.  lea rbp, [rsp + 0x80]
0x00012870      b912000000     mov ecx, 0x12
0x00012875      c744244c0000.  mov dword [rsp + 0x4c], 0
0x0001287d      4c8d4508       lea r8, [rbp + 8]
0x00012881      2500004000     and eax, 0x400000
0x00012886      4889442420     mov qword [rsp + 0x20], rax
0x0001288b      488b442408     mov rax, qword [rsp + 8]
0x00012890      0f95c2         setne dl
0x00012893      4c89c7         mov rdi, r8
0x00012896      488b7028       mov rsi, qword [rax + 0x28]
0x0001289a      31c0           xor eax, eax
0x0001289c      f348ab         rep stosq qword [rdi], rax
0x0001289f      488b442410     mov rax, qword [rsp + 0x10]
0x000128a4      488b3c24       mov rdi, qword [rsp]
0x000128a8      4885f6         test rsi, rsi
0x000128ab      889424080100.  mov byte [rsp + 0x108], dl
0x000128b2      8b8bb4000000   mov ecx, dword [rbx + 0xb4]
0x000128b8      410f95c4       setne r12b
0x000128bc      4889b424f800.  mov qword [rsp + 0xf8], rsi
0x000128c4      488984248000.  mov qword [rsp + 0x80], rax
0x000128cc      0fb683b00000.  movzx eax, byte [rbx + 0xb0]
0x000128d3      4109d4         or r12d, edx
0x000128d6      4889bc24d800.  mov qword [rsp + 0xd8], rdi
0x000128de      4889bc24d000.  mov qword [rsp + 0xd0], rdi
0x000128e6      4489e6         mov esi, r12d
0x000128e9      4488a4240b01.  mov byte [rsp + 0x10b], r12b
0x000128f1      898c24100100.  mov dword [rsp + 0x110], ecx
0x000128f8      4889bc24e800.  mov qword [rsp + 0xe8], rdi
0x00012900      4889bc24e000.  mov qword [rsp + 0xe0], rdi
0x00012908      89c2           mov edx, eax
0x0001290a      c0e803         shr al, 3
0x0001290d      c0ea02         shr dl, 2
0x00012910      83e001         and eax, 1
0x00012913      83e201         and edx, 1
0x00012916      4885ff         test rdi, rdi
0x00012919      8884240a0100.  mov byte [rsp + 0x10a], al
0x00012920      889424090100.  mov byte [rsp + 0x109], dl
0x00012927      0f8538040000   jne 0x12d65
0x0001292d      4084f6         test sil, sil
0x00012930      740d           je 0x1293f
0x00012932      488b84248800.  mov rax, qword [rsp + 0x88]
0x0001293a      4889442410     mov qword [rsp + 0x10], rax
0x0001293f      48837c242000   cmp qword [rsp + 0x20], 0
0x00012945      488b442410     mov rax, qword [rsp + 0x10]
0x0001294a      488984248800.  mov qword [rsp + 0x88], rax
0x00012952      0f84fd000000   je 0x12a55
0x00012958      83f901         cmp ecx, 1
0x0001295b      0f8eec0b0000   jle 0x1354d
0x00012961      4889ef         mov rdi, rbp
0x00012964      e89740ffff     call sym.build_wcs_upper_buffer
0x00012969      85c0           test eax, eax
0x0001296b      7543           jne 0x129b0
0x0001296d      488b0424       mov rax, qword [rsp]
0x00012971      483b8424b800.  cmp rax, qword [rsp + 0xb8]
0x00012979      0f8eb10b0000   jle 0x13530
0x0001297f      486383b40000.  movsxd rax, dword [rbx + 0xb4]
0x00012986      488bb424c000.  mov rsi, qword [rsp + 0xc0]
0x0001298e      48038424b000.  add rax, qword [rsp + 0xb0]
0x00012996      4839c6         cmp rsi, rax
0x00012999      0f8f910b0000   jg 0x13530
0x0001299f      4801f6         add rsi, rsi
0x000129a2      4889ef         mov rdi, rbp
0x000129a5      e8e63affff     call sym.re_string_realloc_buffers
0x000129aa      85c0           test eax, eax
0x000129ac      74b3           je 0x12961
0x000129ae      6690           nop
0x000129b0      8944244c       mov dword [rsp + 0x4c], eax
0x000129b4      488b442408     mov rax, qword [rsp + 8]
0x000129b9      4c8b28         mov r13, qword [rax]
0x000129bc      498b7d70       mov rdi, qword [r13 + 0x70]
0x000129c0      4885ff         test rdi, rdi
0x000129c3      7413           je 0x129d8
0x000129c5      0f1f00         nop dword [rax]
0x000129c8      4c8b27         mov r12, qword [rdi]
0x000129cb      e800effeff     call sym.imp.free
0x000129d0      4d85e4         test r12, r12
0x000129d3      4c89e7         mov rdi, r12
0x000129d6      75f0           jne 0x129c8
0x000129d8      498b7d20       mov rdi, qword [r13 + 0x20]
0x000129dc      49c745700000.  mov qword [r13 + 0x70], 0
0x000129e4      41c785800000.  mov dword [r13 + 0x80], 0xf             ; [0xf:4]=0x3e000300
0x000129ef      49c745680000.  mov qword [r13 + 0x68], 0
0x000129f7      e8d4eefeff     call sym.imp.free
0x000129fc      49c745200000.  mov qword [r13 + 0x20], 0
0x00012a04      4889ef         mov rdi, rbp
0x00012a07      e8c44dffff     call sym.re_string_destruct
0x00012a0c      4889df         mov rdi, rbx
0x00012a0f      e8fc4dffff     call sym.free_dfa_content
0x00012a14      488b442408     mov rax, qword [rsp + 8]
0x00012a19      48c700000000.  mov qword [rax], 0
0x00012a20      48c740080000.  mov qword [rax + 8], 0
0x00012a28      8b44244c       mov eax, dword [rsp + 0x4c]
0x00012a2c      488b9c241801.  mov rbx, qword [rsp + 0x118]
0x00012a34      6448331c2528.  xor rbx, qword fs:[0x28]
0x00012a3d      0f853d0d0000   jne 0x13780
0x00012a43      4881c4280100.  add rsp, 0x128
0x00012a4a      5b             pop rbx
0x00012a4b      5d             pop rbp
0x00012a4c      415c           pop r12
0x00012a4e      415d           pop r13
0x00012a50      415e           pop r14
0x00012a52      415f           pop r15
0x00012a54      c3             ret
0x00012a55      83f901         cmp ecx, 1
0x00012a58      0f8fac090000   jg 0x1340a
0x00012a5e      4584e4         test r12b, r12b
0x00012a61      488bb424c000.  mov rsi, qword [rsp + 0xc0]
0x00012a69      0f8415060000   je 0x13084
0x00012a6f      4839b424d800.  cmp qword [rsp + 0xd8], rsi
0x00012a77      488b8424b000.  mov rax, qword [rsp + 0xb0]
0x00012a7f      480f4eb424d8.  cmovle rsi, qword [rsp + 0xd8]
0x00012a88      4839c6         cmp rsi, rax
0x00012a8b      7f10           jg 0x12a9d
0x00012a8d      eb41           jmp 0x12ad0
0x00012a8f      90             nop
0x00012a90      488b94248800.  mov rdx, qword [rsp + 0x88]
0x00012a98      4889542410     mov qword [rsp + 0x10], rdx
0x00012a9d      488b94248000.  mov rdx, qword [rsp + 0x80]
0x00012aa5      488b8c24f800.  mov rcx, qword [rsp + 0xf8]
0x00012aad      4801c2         add rdx, rax
0x00012ab0      48039424a800.  add rdx, qword [rsp + 0xa8]
0x00012ab8      0fb612         movzx edx, byte [rdx]
0x00012abb      0fb61411       movzx edx, byte [rcx + rdx]
0x00012abf      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00012ac4      881401         mov byte [rcx + rax], dl
0x00012ac7      4883c001       add rax, 1
0x00012acb      4839c6         cmp rsi, rax
0x00012ace      75c0           jne 0x12a90
0x00012ad0      48898424b000.  mov qword [rsp + 0xb0], rax
0x00012ad8      48898424b800.  mov qword [rsp + 0xb8], rax
0x00012ae0      c744244c0000.  mov dword [rsp + 0x4c], 0
0x00012ae8      4c8b642408     mov r12, qword [rsp + 8]
0x00012aed      4c8b742418     mov r14, qword [rsp + 0x18]
0x00012af2      4c8d6c2450     lea r13, [rsp + 0x50]
0x00012af7      4889ee         mov rsi, rbp
0x00012afa      4c89ef         mov rdi, r13
0x00012afd      4c896c2428     mov qword [rsp + 0x28], r13
0x00012b02      4d8b3c24       mov r15, qword [r12]
0x00012b06      4c89f2         mov rdx, r14
0x00012b09      49c744243000.  mov qword [r12 + 0x30], 0
0x00012b12      4881ca000080.  or rdx, 0x800000
0x00012b19      4d89b7d80000.  mov qword [r15 + 0xd8], r14
0x00012b20      e8bbdbffff     call sym.peek_token
0x00012b25      4c8d4c244c     lea r9, [rsp + 0x4c]
0x00012b2a      4531c0         xor r8d, r8d
0x00012b2d      4c89f1         mov rcx, r14
0x00012b30      4c89ea         mov rdx, r13
0x00012b33      4c89e6         mov rsi, r12
0x00012b36      4889ef         mov rdi, rbp
0x00012b39      4898           cdqe
0x00012b3b      48018424c800.  add qword [rsp + 0xc8], rax
0x00012b43      e8c8f9ffff     call sym.parse_reg_exp
0x00012b48      8b4c244c       mov ecx, dword [rsp + 0x4c]
0x00012b4c      85c9           test ecx, ecx
0x00012b4e      0f85230a0000   jne 0x13577
0x00012b54      4d8d6f70       lea r13, [r15 + 0x70]
0x00012b58      4c8d642460     lea r12, [rsp + 0x60]
0x00012b5d      4983ef80       sub r15, 0xffffffffffffff80
0x00012b61      31d2           xor edx, edx
0x00012b63      31c9           xor ecx, ecx
0x00012b65      4c89fe         mov rsi, r15
0x00012b68      4d89e0         mov r8, r12
0x00012b6b      4c89ef         mov rdi, r13
0x00012b6e      48890424       mov qword [rsp], rax
0x00012b72      c644246802     mov byte [rsp + 0x68], 2
0x00012b77      e8245cffff     call sym.create_token_tree.isra.16
0x00012b7c      4c8b0c24       mov r9, qword [rsp]
0x00012b80      4989c3         mov r11, rax
0x00012b83      4889c2         mov rdx, rax
0x00012b86      4d85c9         test r9, r9
0x00012b89      7427           je 0x12bb2
0x00012b8b      4c89d9         mov rcx, r11
0x00012b8e      4c89ca         mov rdx, r9
0x00012b91      4d89e0         mov r8, r12
0x00012b94      4c89fe         mov rsi, r15
0x00012b97      4c89ef         mov rdi, r13
0x00012b9a      4c891c24       mov qword [rsp], r11
0x00012b9e      c644246810     mov byte [rsp + 0x68], 0x10             ; [0x10:1]=3
0x00012ba3      e8f85bffff     call sym.create_token_tree.isra.16
0x00012ba8      4c8b1c24       mov r11, qword [rsp]
0x00012bac      4c89da         mov rdx, r11
0x00012baf      4989c3         mov r11, rax
0x00012bb2      4885d2         test rdx, rdx
0x00012bb5      488b4c2408     mov rcx, qword [rsp + 8]
0x00012bba      0f94c2         sete dl
0x00012bbd      4d85db         test r11, r11
0x00012bc0      0f94c0         sete al
0x00012bc3      08c2           or dl, al
0x00012bc5      4c8b29         mov r13, qword [rcx]
0x00012bc8      0f8594090000   jne 0x13562
0x00012bce      4d8b7d08       mov r15, qword [r13 + 8]
0x00012bd2      4c895b68       mov qword [rbx + 0x68], r11
0x00012bd6      4a8d0cfd0000.  lea rcx, [r15*8]
0x00012bde      4f8d3c7f       lea r15, [r15 + r15*2]
0x00012be2      4889cf         mov rdi, rcx
0x00012be5      48890c24       mov qword [rsp], rcx
0x00012be9      49c1e703       shl r15, 3
0x00012bed      e80eeffeff     call sym.imp.malloc
0x00012bf2      488b0c24       mov rcx, qword [rsp]
0x00012bf6      49894518       mov qword [r13 + 0x18], rax
0x00012bfa      4889442418     mov qword [rsp + 0x18], rax
0x00012bff      4889cf         mov rdi, rcx
0x00012c02      e8f9eefeff     call sym.imp.malloc
0x00012c07      4c89ff         mov rdi, r15
0x00012c0a      49894520       mov qword [r13 + 0x20], rax
0x00012c0e      4889442410     mov qword [rsp + 0x10], rax
0x00012c13      e8e8eefeff     call sym.imp.malloc
0x00012c18      4c89ff         mov rdi, r15
0x00012c1b      49894528       mov qword [r13 + 0x28], rax
0x00012c1f      48890424       mov qword [rsp], rax
0x00012c23      e8d8eefeff     call sym.imp.malloc
0x00012c28      488b542418     mov rdx, qword [rsp + 0x18]
0x00012c2d      49894530       mov qword [r13 + 0x30], rax
0x00012c31      488b3424       mov rsi, qword [rsp]
0x00012c35      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00012c3a      4885d2         test rdx, rdx
0x00012c3d      0f84ba070000   je 0x133fd
0x00012c43      4885c9         test rcx, rcx
0x00012c46      0f84b1070000   je 0x133fd
0x00012c4c      4885f6         test rsi, rsi
0x00012c4f      0f84a8070000   je 0x133fd
0x00012c55      4885c0         test rax, rax
0x00012c58      0f849f070000   je 0x133fd
0x00012c5e      488b442408     mov rax, qword [rsp + 8]
0x00012c63      4c8b7830       mov r15, qword [rax + 0x30]
0x00012c67      4a8d3cfd0000.  lea rdi, [r15*8]
0x00012c6f      e88ceefeff     call sym.imp.malloc
0x00012c74      4885c0         test rax, rax
0x00012c77      498985e00000.  mov qword [r13 + 0xe0], rax
0x00012c7e      746d           je 0x12ced
0x00012c80      4d85ff         test r15, r15
0x00012c83      7418           je 0x12c9d
0x00012c85      31d2           xor edx, edx
0x00012c87      660f1f840000.  nop word [rax + rax]
0x00012c90      488914d0       mov qword [rax + rdx*8], rdx
0x00012c94      4883c201       add rdx, 1
0x00012c98      4c39fa         cmp rdx, r15
0x00012c9b      75f3           jne 0x12c90
0x00012c9d      498b7d68       mov rdi, qword [r13 + 0x68]
0x00012ca1      488d35f84fff.  lea rsi, sym.optimize_subexps           ; 0x7ca0
0x00012ca8      4c89ea         mov rdx, r13
0x00012cab      e88037ffff     call sym.preorder
0x00012cb0      488b442408     mov rax, qword [rsp + 8]
0x00012cb5      498bbde00000.  mov rdi, qword [r13 + 0xe0]
0x00012cbc      488b5030       mov rdx, qword [rax + 0x30]
0x00012cc0      4885d2         test rdx, rdx
0x00012cc3      0f84eb080000   je 0x135b4
0x00012cc9      488b07         mov rax, qword [rdi]
0x00012ccc      4885c0         test rax, rax
0x00012ccf      740d           je 0x12cde
0x00012cd1      eb1a           jmp 0x12ced
0x00012cd3      0f1f440000     nop dword [rax + rax]
0x00012cd8      483904c7       cmp qword [rdi + rax*8], rax
0x00012cdc      750f           jne 0x12ced
0x00012cde      4883c001       add rax, 1
0x00012ce2      4839c2         cmp rdx, rax
0x00012ce5      77f1           ja 0x12cd8
0x00012ce7      0f84c7080000   je 0x135b4
0x00012ced      498b7d68       mov rdi, qword [r13 + 0x68]
0x00012cf1      488b542408     mov rdx, qword [rsp + 8]
0x00012cf6      488d35a35eff.  lea rsi, sym.lower_subexps              ; 0x8ba0 ; "USH\x89\xfdH\x89\xf3H\x83\xec\x18H\x8bV\bdH\x8b\x04%("
0x00012cfd      e8be36ffff     call sym.postorder
0x00012d02      85c0           test eax, eax
0x00012d04      0f85a6fcffff   jne 0x129b0
0x00012d0a      498b7d68       mov rdi, qword [r13 + 0x68]
0x00012d0e      488d35fb83ff.  lea rsi, sym.calc_first                 ; 0xb110
0x00012d15      4c89ea         mov rdx, r13
0x00012d18      e8a336ffff     call sym.postorder
0x00012d1d      85c0           test eax, eax
0x00012d1f      0f858bfcffff   jne 0x129b0
0x00012d25      498b7d68       mov rdi, qword [r13 + 0x68]
0x00012d29      488d350050ff.  lea rsi, sym.calc_next                  ; 0x7d30
0x00012d30      4c89ea         mov rdx, r13
0x00012d33      e8f836ffff     call sym.preorder
0x00012d38      498b5568       mov rdx, qword [r13 + 0x68]
0x00012d3c      488d35253000.  lea rsi, [0x00015d68]
0x00012d43      0f1f440000     nop dword [rax + rax]
0x00012d48      0fb64a30       movzx ecx, byte [rdx + 0x30]
0x00012d4c      488b7a38       mov rdi, qword [rdx + 0x38]
0x00012d50      80f910         cmp cl, 0x10
0x00012d53      0f87cf000000   ja 0x12e28
0x00012d59      0fb6c1         movzx eax, cl
0x00012d5c      48630486       movsxd rax, dword [rsi + rax*4]
0x00012d60      4801f0         add rax, rsi
0x00012d63      ffe0           jmp rax
0x00012d65      488b742428     mov rsi, qword [rsp + 0x28]
0x00012d6a      4889ef         mov rdi, rbp
0x00012d6d      e81e37ffff     call sym.re_string_realloc_buffers
0x00012d72      85c0           test eax, eax
0x00012d74      0f8536fcffff   jne 0x129b0
0x00012d7a      0fb6b4240b01.  movzx esi, byte [rsp + 0x10b]
0x00012d82      8b8bb4000000   mov ecx, dword [rbx + 0xb4]
0x00012d88      4084f6         test sil, sil
0x00012d8b      0f84aefbffff   je 0x1293f
0x00012d91      e99cfbffff     jmp 0x12932
0x00012d96      c744244c0c00.  mov dword [rsp + 0x4c], 0xc             ; [0xc:4]=0
0x00012d9e      e969fcffff     jmp 0x12a0c
0x00012da3      be01000000     mov esi, 1
0x00012da8      bf20000000     mov edi, 0x20                           ; "@"
0x00012dad      e8feecfeff     call sym.imp.calloc
0x00012db2      4885c0         test rax, rax
0x00012db5      48894378       mov qword [rbx + 0x78], rax
0x00012db9      74db           je 0x12d96
0x00012dbb      4531e4         xor r12d, r12d
0x00012dbe      31ed           xor ebp, ebp
0x00012dc0      41bd01000000   mov r13d, 1
0x00012dc6      4531ff         xor r15d, r15d
0x00012dc9      0f1f80000000.  nop dword [rax]
0x00012dd0      468d743d00     lea r14d, [rbp + r15]
0x00012dd5      4489f7         mov edi, r14d
0x00012dd8      e8b3edfeff     call sym.imp.btowc
0x00012ddd      83f8ff         cmp eax, 0xffffffff
0x00012de0      7413           je 0x12df5
0x00012de2      488b7378       mov rsi, qword [rbx + 0x78]
0x00012de6      4c89ef         mov rdi, r13
0x00012de9      4489f9         mov ecx, r15d
0x00012dec      48d3e7         shl rdi, cl
0x00012def      4c01e6         add rsi, r12
0x00012df2      48093e         or qword [rsi], rdi
0x00012df5      41f7c680ffff.  test r14d, 0xffffff80                   ; 4294967168
0x00012dfc      750c           jne 0x12e0a
0x00012dfe      4439f0         cmp eax, r14d
0x00012e01      7407           je 0x12e0a
0x00012e03      808bb0000000.  or byte [rbx + 0xb0], 8
0x00012e0a      4983c701       add r15, 1
0x00012e0e      4983ff40       cmp r15, 0x40                           ; segment.PHDR
0x00012e12      75bc           jne 0x12dd0
0x00012e14      83c540         add ebp, 0x40                           ; segment.PHDR
0x00012e17      4983c408       add r12, 8
0x00012e1b      81fd00010000   cmp ebp, 0x100
0x00012e21      75a3           jne 0x12dc6
0x00012e23      e926faffff     jmp 0x1284e
0x00012e28      83e108         and ecx, 8
0x00012e2b      0f8511090000   jne 0x13742
0x00012e31      488b4220       mov rax, qword [rdx + 0x20]
0x00012e35      488b4838       mov rcx, qword [rax + 0x38]
0x00012e39      498b4518       mov rax, qword [r13 + 0x18]
0x00012e3d      48890cf8       mov qword [rax + rdi*8], rcx
0x00012e41      4c8b7a08       mov r15, qword [rdx + 8]
0x00012e45      31ff           xor edi, edi
0x00012e47      4d85ff         test r15, r15
0x00012e4a      740f           je 0x12e5b
0x00012e4c      4c89fa         mov rdx, r15
0x00012e4f      e9f4feffff     jmp 0x12d48
0x00012e54      0f1f4000       nop dword [rax]
0x00012e58      4889c2         mov rdx, rax
0x00012e5b      4c8b7a10       mov r15, qword [rdx + 0x10]
0x00012e5f      4d85ff         test r15, r15
0x00012e62      0f94c1         sete cl
0x00012e65      4939ff         cmp r15, rdi
0x00012e68      0f94c0         sete al
0x00012e6b      08c1           or cl, al
0x00012e6d      884c2410       mov byte [rsp + 0x10], cl
0x00012e71      74d9           je 0x12e4c
0x00012e73      488b02         mov rax, qword [rdx]
0x00012e76      4889d7         mov rdi, rdx
0x00012e79      4885c0         test rax, rax
0x00012e7c      75da           jne 0x12e58
0x00012e7e      4531f6         xor r14d, r14d
0x00012e81      4531ff         xor r15d, r15d
0x00012e84      0f1f4000       nop dword [rax]
0x00012e88      498b5510       mov rdx, qword [r13 + 0x10]
0x00012e8c      4c39fa         cmp rdx, r15
0x00012e8f      7425           je 0x12eb6
0x00012e91      4f8d147f       lea r10, [r15 + r15*2]
0x00012e95      498b4530       mov rax, qword [r13 + 0x30]
0x00012e99      49c1e203       shl r10, 3
0x00012e9d      4a837c100800   cmp qword [rax + r10 + 8], 0
0x00012ea3      0f84ff010000   je 0x130a8
0x00012ea9      498b5510       mov rdx, qword [r13 + 0x10]
0x00012ead      4983c701       add r15, 1
0x00012eb1      4c39fa         cmp rdx, r15
0x00012eb4      75db           jne 0x12e91
0x00012eb6      4584f6         test r14b, r14b
0x00012eb9      0f843f020000   je 0x130fe
0x00012ebf      4531f6         xor r14d, r14d
0x00012ec2      4531ff         xor r15d, r15d
0x00012ec5      ebca           jmp 0x12e91
0x00012ec7      41808db00000.  or byte [r13 + 0xb0], 1
0x00012ecf      4c8b7a08       mov r15, qword [rdx + 8]
0x00012ed3      4d85ff         test r15, r15
0x00012ed6      0f840d060000   je 0x134e9
0x00012edc      498b4718       mov rax, qword [r15 + 0x18]
0x00012ee0      488b4838       mov rcx, qword [rax + 0x38]
0x00012ee4      488b4210       mov rax, qword [rdx + 0x10]
0x00012ee8      4885c0         test rax, rax
0x00012eeb      0f84eb050000   je 0x134dc
0x00012ef1      488b4018       mov rax, qword [rax + 0x18]
0x00012ef5      4c8b4838       mov r9, qword [rax + 0x38]
0x00012ef9      4885c9         test rcx, rcx
0x00012efc      0f885f080000   js 0x13761
0x00012f02      4d85c9         test r9, r9
0x00012f05      0f8818080000   js 0x13723
0x00012f0b      498b4528       mov rax, qword [r13 + 0x28]
0x00012f0f      488d3c7f       lea rdi, [rdi + rdi*2]
0x00012f13      4889742438     mov qword [rsp + 0x38], rsi
0x00012f18      4c894c2430     mov qword [rsp + 0x30], r9
0x00012f1d      48894c2418     mov qword [rsp + 0x18], rcx
0x00012f22      4889542410     mov qword [rsp + 0x10], rdx
0x00012f27      4c8d14f8       lea r10, [rax + rdi*8]
0x00012f2b      bf10000000     mov edi, 0x10
0x00012f30      49c702020000.  mov qword [r10], 2
0x00012f37      4c891424       mov qword [rsp], r10
0x00012f3b      e8c0ebfeff     call sym.imp.malloc
0x00012f40      4c8b1424       mov r10, qword [rsp]
0x00012f44      4885c0         test rax, rax
0x00012f47      488b542410     mov rdx, qword [rsp + 0x10]
0x00012f4c      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00012f51      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00012f56      488b742438     mov rsi, qword [rsp + 0x38]
0x00012f5b      49894210       mov qword [r10 + 0x10], rax
0x00012f5f      0f8495020000   je 0x131fa
0x00012f65      4c39c9         cmp rcx, r9
0x00012f68      0f84cf050000   je 0x1353d
0x00012f6e      49c742080200.  mov qword [r10 + 8], 2
0x00012f76      0f8ca8050000   jl 0x13524
0x00012f7c      4c8908         mov qword [rax], r9
0x00012f7f      48894808       mov qword [rax + 8], rcx
0x00012f83      e9bdfeffff     jmp 0x12e45
0x00012f88      488b4220       mov rax, qword [rdx + 0x20]
0x00012f8c      488d0c7f       lea rcx, [rdi + rdi*2]
0x00012f90      bf08000000     mov edi, 8
0x00012f95      4889742410     mov qword [rsp + 0x10], rsi
0x00012f9a      48891424       mov qword [rsp], rdx
0x00012f9e      4c8b7038       mov r14, qword [rax + 0x38]
0x00012fa2      498b4528       mov rax, qword [r13 + 0x28]
0x00012fa6      4c8d3cc8       lea r15, [rax + rcx*8]
0x00012faa      49c707010000.  mov qword [r15], 1
0x00012fb1      49c747080100.  mov qword [r15 + 8], 1
0x00012fb9      e842ebfeff     call sym.imp.malloc
0x00012fbe      4885c0         test rax, rax
0x00012fc1      49894710       mov qword [r15 + 0x10], rax
0x00012fc5      488b1424       mov rdx, qword [rsp]
0x00012fc9      488b742410     mov rsi, qword [rsp + 0x10]
0x00012fce      0f84a4060000   je 0x13678
0x00012fd4      4c8930         mov qword [rax], r14
0x00012fd7      4c8b7a08       mov r15, qword [rdx + 8]
0x00012fdb      e965feffff     jmp 0x12e45
0x00012fe0      48837a2000     cmp qword [rdx + 0x20], 0
0x00012fe5      0f8456feffff   je 0x12e41
0x00012feb      488d0d2e2e00.  lea rcx, obj.__PRETTY_FUNCTION__.6981   ; 0x15e20 ; "link_nfa_nodes"
0x00012ff2      488d35572800.  lea rsi, str..._coreutils_8.31_lib_regcomp.c ; 0x15850 ; "../coreutils-8.31/lib/regcomp.c"
0x00012ff9      488d3df82800.  lea rdi, str.node__next____NULL         ; 0x158f8 ; "node->next == NULL"
0x00013000      ba9f050000     mov edx, 0x59f
0x00013005      e846eafeff     call sym.imp.__assert_fail
0x0001300a      660f1f440000   nop word [rax + rax]
0x00013010      488b4220       mov rax, qword [rdx + 0x20]
0x00013014      4c8b7838       mov r15, qword [rax + 0x38]
0x00013018      498b4518       mov rax, qword [r13 + 0x18]
0x0001301c      4c893cf8       mov qword [rax + rdi*8], r15
0x00013020      807a3004       cmp byte [rdx + 0x30], 4
0x00013024      0f8517feffff   jne 0x12e41
0x0001302a      498b4528       mov rax, qword [r13 + 0x28]
0x0001302e      488d0c7f       lea rcx, [rdi + rdi*2]
0x00013032      bf08000000     mov edi, 8
0x00013037      4889742418     mov qword [rsp + 0x18], rsi
0x0001303c      4889542410     mov qword [rsp + 0x10], rdx
0x00013041      488d0cc8       lea rcx, [rax + rcx*8]
0x00013045      48c701010000.  mov qword [rcx], 1
0x0001304c      48c741080100.  mov qword [rcx + 8], 1
0x00013054      48890c24       mov qword [rsp], rcx
0x00013058      e8a3eafeff     call sym.imp.malloc
0x0001305d      488b0c24       mov rcx, qword [rsp]
0x00013061      4885c0         test rax, rax
0x00013064      488b542410     mov rdx, qword [rsp + 0x10]
0x00013069      488b742418     mov rsi, qword [rsp + 0x18]
0x0001306e      48894110       mov qword [rcx + 0x10], rax
0x00013072      0f8448060000   je 0x136c0
0x00013078      4c8938         mov qword [rax], r15
0x0001307b      4c8b7a08       mov r15, qword [rdx + 8]
0x0001307f      e9c1fdffff     jmp 0x12e45
0x00013084      4889b424b000.  mov qword [rsp + 0xb0], rsi
0x0001308c      4889b424b800.  mov qword [rsp + 0xb8], rsi
0x00013094      c744244c0000.  mov dword [rsp + 0x4c], 0
0x0001309c      e947faffff     jmp 0x12ae8
0x000130a1      0f1f80000000.  nop dword [rax]
0x000130a8      b901000000     mov ecx, 1
0x000130ad      4c89fa         mov rdx, r15
0x000130b0      4c89ee         mov rsi, r13
0x000130b3      4c89e7         mov rdi, r12
0x000130b6      4c891424       mov qword [rsp], r10
0x000130ba      e82151ffff     call sym.calc_eclosure_iter
0x000130bf      85c0           test eax, eax
0x000130c1      0f85e9f8ffff   jne 0x129b0
0x000130c7      498b4530       mov rax, qword [r13 + 0x30]
0x000130cb      4c8b1424       mov r10, qword [rsp]
0x000130cf      4983c701       add r15, 1
0x000130d3      4a837c100800   cmp qword [rax + r10 + 8], 0
0x000130d9      0f85a9fdffff   jne 0x12e88
0x000130df      488b7c2470     mov rdi, qword [rsp + 0x70]
0x000130e4      e8e7e7feff     call sym.imp.free
0x000130e9      4d397d10       cmp qword [r13 + 0x10], r15
0x000130ed      0f84ccfdffff   je 0x12ebf
0x000130f3      440fb6742410   movzx r14d, byte [rsp + 0x10]
0x000130f9      e993fdffff     jmp 0x12e91
0x000130fe      488b442408     mov rax, qword [rsp + 8]
0x00013103      f6403810       test byte [rax + 0x38], 0x10
0x00013107      7511           jne 0x1311a
0x00013109      4883783000     cmp qword [rax + 0x30], 0
0x0001310e      740a           je 0x1311a
0x00013110      41f685b00000.  test byte [r13 + 0xb0], 1
0x00013118      750e           jne 0x13128
0x0001311a      4983bd980000.  cmp qword [r13 + 0x98], 0
0x00013122      0f84f3000000   je 0x1321b
0x00013128      488d3c52       lea rdi, [rdx + rdx*2]
0x0001312c      48891424       mov qword [rsp], rdx
0x00013130      48c1e703       shl rdi, 3
0x00013134      e8c7e9feff     call sym.imp.malloc
0x00013139      4885c0         test rax, rax
0x0001313c      49894538       mov qword [r13 + 0x38], rax
0x00013140      0f8446050000   je 0x1368c
0x00013146      488b1424       mov rdx, qword [rsp]
0x0001314a      31f6           xor esi, esi
0x0001314c      31c9           xor ecx, ecx
0x0001314e      4885d2         test rdx, rdx
0x00013151      7511           jne 0x13164
0x00013153      e9c3000000     jmp 0x1321b
0x00013158      0f1f84000000.  nop dword [rax + rax]
0x00013160      498b4538       mov rax, qword [r13 + 0x38]
0x00013164      660fefc0       pxor xmm0, xmm0
0x00013168      4801f0         add rax, rsi
0x0001316b      4883c101       add rcx, 1
0x0001316f      48c740100000.  mov qword [rax + 0x10], 0
0x00013177      4883c618       add rsi, 0x18
0x0001317b      0f1100         movups xmmword [rax], xmm0
0x0001317e      498b4510       mov rax, qword [r13 + 0x10]
0x00013182      4839c1         cmp rcx, rax
0x00013185      72d9           jb 0x13160
0x00013187      4885c0         test rax, rax
0x0001318a      0f848b000000   je 0x1321b
0x00013190      498b4530       mov rax, qword [r13 + 0x30]
0x00013194      48c744241800.  mov qword [rsp + 0x18], 0
0x0001319d      48c744241000.  mov qword [rsp + 0x10], 0
0x000131a6      488b4c2418     mov rcx, qword [rsp + 0x18]
0x000131ab      488d1408       lea rdx, [rax + rcx]
0x000131af      48837a0800     cmp qword [rdx + 8], 0
0x000131b4      488b4a10       mov rcx, qword [rdx + 0x10]
0x000131b8      7e4a           jle 0x13204
0x000131ba      4531ff         xor r15d, r15d
0x000131bd      eb19           jmp 0x131d8
0x000131bf      90             nop
0x000131c0      498b4530       mov rax, qword [r13 + 0x30]
0x000131c4      488b542418     mov rdx, qword [rsp + 0x18]
0x000131c9      4983c701       add r15, 1
0x000131cd      488b0c24       mov rcx, qword [rsp]
0x000131d1      4c3b7c1008     cmp r15, qword [rax + rdx + 8]
0x000131d6      7d2c           jge 0x13204
0x000131d8      4a8b04f9       mov rax, qword [rcx + r15*8]
0x000131dc      48890c24       mov qword [rsp], rcx
0x000131e0      488d3440       lea rsi, [rax + rax*2]
0x000131e4      498b4538       mov rax, qword [r13 + 0x38]
0x000131e8      488d3cf0       lea rdi, [rax + rsi*8]
0x000131ec      488b742410     mov rsi, qword [rsp + 0x10]
0x000131f1      e83a33ffff     call sym.re_node_set_insert_last
0x000131f6      84c0           test al, al
0x000131f8      75c6           jne 0x131c0
0x000131fa      b80c000000     mov eax, 0xc
0x000131ff      e9acf7ffff     jmp 0x129b0
0x00013204      488344241001   add qword [rsp + 0x10], 1
0x0001320a      488344241818   add qword [rsp + 0x18], 0x18            ; [0x18:8]=0x2310 rip
0x00013210      488b542410     mov rdx, qword [rsp + 0x10]
0x00013215      493b5510       cmp rdx, qword [r13 + 0x10]
0x00013219      728b           jb 0x131a6
0x0001321b      0fb683b00000.  movzx eax, byte [rbx + 0xb0]
0x00013222      c744244c0000.  mov dword [rsp + 0x4c], 0
0x0001322a      c0e802         shr al, 2
0x0001322d      48837c242000   cmp qword [rsp + 0x20], 0
0x00013233      0f94c2         sete dl
0x00013236      20d0           and al, dl
0x00013238      0f85e1010000   jne 0x1341f
0x0001323e      488b4368       mov rax, qword [rbx + 0x68]
0x00013242      4c89e7         mov rdi, r12
0x00013245      488b4018       mov rax, qword [rax + 0x18]
0x00013249      488b4038       mov rax, qword [rax + 0x38]
0x0001324d      488d1440       lea rdx, [rax + rax*2]
0x00013251      488983900000.  mov qword [rbx + 0x90], rax
0x00013258      488b4330       mov rax, qword [rbx + 0x30]
0x0001325c      488d34d0       lea rsi, [rax + rdx*8]
0x00013260      e8db59ffff     call sym.re_node_set_init_copy
0x00013265      85c0           test eax, eax
0x00013267      4189c7         mov r15d, eax
0x0001326a      89442450       mov dword [rsp + 0x50], eax
0x0001326e      0f851b010000   jne 0x1338f
0x00013274      4883bb980000.  cmp qword [rbx + 0x98], 0
0x0001327c      0f8ece000000   jle 0x13350
0x00013282      4c8b4c2468     mov r9, qword [rsp + 0x68]
0x00013287      4d85c9         test r9, r9
0x0001328a      0f8ec0000000   jle 0x13350
0x00013290      4531d2         xor r10d, r10d
0x00013293      4d8d6c2410     lea r13, [r12 + 0x10]
0x00013298      eb13           jmp 0x132ad
0x0001329a      660f1f440000   nop word [rax + rax]
0x000132a0      4983c201       add r10, 1
0x000132a4      4d39d1         cmp r9, r10
0x000132a7      0f8ea3000000   jle 0x13350
0x000132ad      488b4c2470     mov rcx, qword [rsp + 0x70]
0x000132b2      488b33         mov rsi, qword [rbx]
0x000132b5      4e8b04d1       mov r8, qword [rcx + r10*8]
0x000132b9      4c89c7         mov rdi, r8
0x000132bc      48c1e704       shl rdi, 4
0x000132c0      4801f7         add rdi, rsi
0x000132c3      807f0804       cmp byte [rdi + 8], 4
0x000132c7      75d7           jne 0x132a0
0x000132c9      31d2           xor edx, edx
0x000132cb      eb0c           jmp 0x132d9
0x000132cd      0f1f00         nop dword [rax]
0x000132d0      4883c201       add rdx, 1
0x000132d4      4939d1         cmp r9, rdx
0x000132d7      74c7           je 0x132a0
0x000132d9      488b04d1       mov rax, qword [rcx + rdx*8]
0x000132dd      48c1e004       shl rax, 4
0x000132e1      4801f0         add rax, rsi
0x000132e4      80780809       cmp byte [rax + 8], 9
0x000132e8      75e6           jne 0x132d0
0x000132ea      4c8b1f         mov r11, qword [rdi]
0x000132ed      4c3918         cmp qword [rax], r11
0x000132f0      75de           jne 0x132d0
0x000132f2      488b5328       mov rdx, qword [rbx + 0x28]
0x000132f6      4b8d0440       lea rax, [r8 + r8*2]
0x000132fa      4c89ee         mov rsi, r13
0x000132fd      4c89cf         mov rdi, r9
0x00013300      488d04c2       lea rax, [rdx + rax*8]
0x00013304      488b4010       mov rax, qword [rax + 0x10]
0x00013308      4c8b18         mov r11, qword [rax]
0x0001330b      4c89da         mov rdx, r11
0x0001330e      e8cd47ffff     call sym.re_node_set_contains.isra.3
0x00013313      4885c0         test rax, rax
0x00013316      7588           jne 0x132a0
0x00013318      488b4330       mov rax, qword [rbx + 0x30]
0x0001331c      4b8d145b       lea rdx, [r11 + r11*2]
0x00013320      4c89e7         mov rdi, r12
0x00013323      488d34d0       lea rsi, [rax + rdx*8]
0x00013327      e8d44cffff     call sym.re_node_set_merge
0x0001332c      85c0           test eax, eax
0x0001332e      0f853c030000   jne 0x13670
0x00013334      4c8b4c2468     mov r9, qword [rsp + 0x68]
0x00013339      41ba01000000   mov r10d, 1
0x0001333f      4d39d1         cmp r9, r10
0x00013342      0f8f65ffffff   jg 0x132ad
0x00013348      0f1f84000000.  nop dword [rax + rax]
0x00013350      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00013355      31c9           xor ecx, ecx
0x00013357      4c89e2         mov rdx, r12
0x0001335a      4889de         mov rsi, rbx
0x0001335d      e8ce5affff     call sym.re_acquire_state_context
0x00013362      4885c0         test rax, rax
0x00013365      48894348       mov qword [rbx + 0x48], rax
0x00013369      0f8463010000   je 0x134d2
0x0001336f      80786800       cmp byte [rax + 0x68], 0
0x00013373      0f88f8000000   js 0x13471
0x00013379      48894360       mov qword [rbx + 0x60], rax
0x0001337d      48894358       mov qword [rbx + 0x58], rax
0x00013381      48894350       mov qword [rbx + 0x50], rax
0x00013385      488b7c2470     mov rdi, qword [rsp + 0x70]
0x0001338a      e841e5feff     call sym.imp.free
0x0001338f      488b442408     mov rax, qword [rsp + 8]
0x00013394      44897c244c     mov dword [rsp + 0x4c], r15d
0x00013399      4c8b28         mov r13, qword [rax]
0x0001339c      498b7d70       mov rdi, qword [r13 + 0x70]
0x000133a0      4885ff         test rdi, rdi
0x000133a3      7413           je 0x133b8
0x000133a5      0f1f00         nop dword [rax]
0x000133a8      4c8b27         mov r12, qword [rdi]
0x000133ab      e820e5feff     call sym.imp.free
0x000133b0      4d85e4         test r12, r12
0x000133b3      4c89e7         mov rdi, r12
0x000133b6      75f0           jne 0x133a8
0x000133b8      498b7d20       mov rdi, qword [r13 + 0x20]
0x000133bc      49c745700000.  mov qword [r13 + 0x70], 0
0x000133c4      41c785800000.  mov dword [r13 + 0x80], 0xf             ; [0xf:4]=0x3e000300
0x000133cf      49c745680000.  mov qword [r13 + 0x68], 0
0x000133d7      e8f4e4feff     call sym.imp.free
0x000133dc      49c745200000.  mov qword [r13 + 0x20], 0
0x000133e4      4889ef         mov rdi, rbp
0x000133e7      e8e443ffff     call sym.re_string_destruct
0x000133ec      8b44244c       mov eax, dword [rsp + 0x4c]
0x000133f0      85c0           test eax, eax
0x000133f2      0f8434f6ffff   je 0x12a2c
0x000133f8      e90ff6ffff     jmp 0x12a0c
0x000133fd      c744244c0c00.  mov dword [rsp + 0x4c], 0xc             ; [0xc:4]=0
0x00013405      e9b2f5ffff     jmp 0x129bc
0x0001340a      4889ef         mov rdi, rbp
0x0001340d      e81e34ffff     call sym.build_wcs_buffer
0x00013412      c744244c0000.  mov dword [rsp + 0x4c], 0
0x0001341a      e9c9f6ffff     jmp 0x12ae8
0x0001341f      488b4c2408     mov rcx, qword [rsp + 8]
0x00013424      4883792800     cmp qword [rcx + 0x28], 0
0x00013429      0f850ffeffff   jne 0x1323e
0x0001342f      4c8b5310       mov r10, qword [rbx + 0x10]
0x00013433      4d85d2         test r10, r10
0x00013436      0f84ae020000   je 0x136ea
0x0001343c      488b33         mov rsi, qword [rbx]
0x0001343f      4c8d0d662900.  lea r9, [0x00015dac]
0x00013446      4531c0         xor r8d, r8d
0x00013449      31d2           xor edx, edx
0x0001344b      4889f1         mov rcx, rsi
0x0001344e      8079080c       cmp byte [rcx + 8], 0xc
0x00013452      0f87c6020000   ja 0x1371e
0x00013458      0fb67908       movzx edi, byte [rcx + 8]
0x0001345c      49633cb9       movsxd rdi, dword [r9 + rdi*4]
0x00013460      4c01cf         add rdi, r9
0x00013463      ffe7           jmp rdi
0x00013465      31ed           xor ebp, ebp
0x00013467      be01000000     mov esi, 1
0x0001346c      e92cf3ffff     jmp 0x1279d
0x00013471      4c8b742428     mov r14, qword [rsp + 0x28]
0x00013476      b901000000     mov ecx, 1
0x0001347b      4c89e2         mov rdx, r12
0x0001347e      4889de         mov rsi, rbx
0x00013481      4c89f7         mov rdi, r14
0x00013484      e8a759ffff     call sym.re_acquire_state_context
0x00013489      b902000000     mov ecx, 2
0x0001348e      4c89e2         mov rdx, r12
0x00013491      4889de         mov rsi, rbx
0x00013494      4c89f7         mov rdi, r14
0x00013497      48894350       mov qword [rbx + 0x50], rax
0x0001349b      e89059ffff     call sym.re_acquire_state_context
0x000134a0      b906000000     mov ecx, 6
0x000134a5      48894358       mov qword [rbx + 0x58], rax
0x000134a9      4c89e2         mov rdx, r12
0x000134ac      4889de         mov rsi, rbx
0x000134af      4c89f7         mov rdi, r14
0x000134b2      e87959ffff     call sym.re_acquire_state_context
0x000134b7      48837b5000     cmp qword [rbx + 0x50], 0
0x000134bc      48894360       mov qword [rbx + 0x60], rax
0x000134c0      7410           je 0x134d2
0x000134c2      48837b5800     cmp qword [rbx + 0x58], 0
0x000134c7      7409           je 0x134d2
0x000134c9      4885c0         test rax, rax
0x000134cc      0f85b3feffff   jne 0x13385
0x000134d2      448b7c2450     mov r15d, dword [rsp + 0x50]
0x000134d7      e9b3feffff     jmp 0x1338f
0x000134dc      488b4220       mov rax, qword [rdx + 0x20]
0x000134e0      4c8b4838       mov r9, qword [rax + 0x38]
0x000134e4      e910faffff     jmp 0x12ef9
0x000134e9      488b4220       mov rax, qword [rdx + 0x20]
0x000134ed      488b4838       mov rcx, qword [rax + 0x38]
0x000134f1      e9eef9ffff     jmp 0x12ee4
0x000134f6      4889df         mov rdi, rbx
0x000134f9      bee8000000     mov esi, 0xe8
0x000134fe      e85de6feff     call sym.imp.realloc
0x00013503      4885c0         test rax, rax
0x00013506      4889c3         mov rbx, rax
0x00013509      0f8492010000   je 0x136a1
0x0001350f      488b442408     mov rax, qword [rsp + 8]
0x00013514      48c74008e800.  mov qword [rax + 8], 0xe8               ; [0xe8:8]=0x600000001
0x0001351c      488918         mov qword [rax], rbx
0x0001351f      e9def1ffff     jmp 0x12702
0x00013524      488908         mov qword [rax], rcx
0x00013527      4c894808       mov qword [rax + 8], r9
0x0001352b      e915f9ffff     jmp 0x12e45
0x00013530      c744244c0000.  mov dword [rsp + 0x4c], 0
0x00013538      e9abf5ffff     jmp 0x12ae8
0x0001353d      49c742080100.  mov qword [r10 + 8], 1
0x00013545      488908         mov qword [rax], rcx
0x00013548      e9f8f8ffff     jmp 0x12e45
0x0001354d      4889ef         mov rdi, rbp
0x00013550      e86b32ffff     call sym.build_upper_buffer
0x00013555      c744244c0000.  mov dword [rsp + 0x4c], 0
0x0001355d      e986f5ffff     jmp 0x12ae8
0x00013562      c744244c0c00.  mov dword [rsp + 0x4c], 0xc             ; [0xc:4]=0
0x0001356a      48c743680000.  mov qword [rbx + 0x68], 0
0x00013572      e945f4ffff     jmp 0x129bc
0x00013577      4885c0         test rax, rax
0x0001357a      0f842b010000   je 0x136ab
0x00013580      4d8d6f70       lea r13, [r15 + 0x70]
0x00013584      4c8d642460     lea r12, [rsp + 0x60]
0x00013589      4983ef80       sub r15, 0xffffffffffffff80
0x0001358d      31c9           xor ecx, ecx
0x0001358f      31d2           xor edx, edx
0x00013591      4c89fe         mov rsi, r15
0x00013594      4d89e0         mov r8, r12
0x00013597      4c89ef         mov rdi, r13
0x0001359a      48890424       mov qword [rsp], rax
0x0001359e      c644246802     mov byte [rsp + 0x68], 2
0x000135a3      e8f851ffff     call sym.create_token_tree.isra.16
0x000135a8      4c8b0c24       mov r9, qword [rsp]
0x000135ac      4989c3         mov r11, rax
0x000135af      e9d7f5ffff     jmp 0x12b8b
0x000135b4      e817e3feff     call sym.imp.free
0x000135b9      49c785e00000.  mov qword [r13 + 0xe0], 0
0x000135c4      e924f7ffff     jmp 0x12ced
0x000135c9      4189c0         mov r8d, eax
0x000135cc      4883c201       add rdx, 1
0x000135d0      4883c110       add rcx, 0x10
0x000135d4      4c39d2         cmp rdx, r10
0x000135d7      0f8571feffff   jne 0x1344e
0x000135dd      4508c6         or r14b, r8b
0x000135e0      0f8404010000   je 0x136ea
0x000135e6      4889d0         mov rax, rdx
0x000135e9      48c1e004       shl rax, 4
0x000135ed      4801f0         add rax, rsi
0x000135f0      eb16           jmp 0x13608
0x000135f2      80fa05         cmp dl, 5
0x000135f5      7504           jne 0x135fb
0x000135f7      c6460807       mov byte [rsi + 8], 7
0x000135fb      4883c610       add rsi, 0x10
0x000135ff      4839f0         cmp rax, rsi
0x00013602      0f84df000000   je 0x136e7
0x00013608      0fb65608       movzx edx, byte [rsi + 8]
0x0001360c      80fa01         cmp dl, 1
0x0001360f      75e1           jne 0x135f2
0x00013611      803e00         cmp byte [rsi], 0
0x00013614      79e5           jns 0x135fb
0x00013616      80660adf       and byte [rsi + 0xa], 0xdf              ; [0xdf:1]=0
0x0001361a      ebdf           jmp 0x135fb
0x0001361c      0f1f4000       nop dword [rax]
0x00013620      803900         cmp byte [rcx], 0
0x00013623      440f48f0       cmovs r14d, eax
0x00013627      eba3           jmp 0x135cc
0x00013629      8b39           mov edi, dword [rcx]
0x0001362b      83ff20         cmp edi, 0x20                           ; "@"
0x0001362e      749c           je 0x135cc
0x00013630      0f86a3000000   jbe 0x136d9
0x00013636      83ff40         cmp edi, 0x40                           ; segment.PHDR
0x00013639      7491           je 0x135cc
0x0001363b      83c780         add edi, 0xffffff80
0x0001363e      748c           je 0x135cc
0x00013640      e9f9fbffff     jmp 0x1323e
0x00013645      0f1f00         nop dword [rax]
0x00013648      488b39         mov rdi, qword [rcx]
0x0001364b      48837f1000     cmp qword [rdi + 0x10], 0
0x00013650      0f85e8fbffff   jne 0x1323e
0x00013656      48837f1800     cmp qword [rdi + 0x18], 0
0x0001365b      0f846bffffff   je 0x135cc
0x00013661      e9d8fbffff     jmp 0x1323e
0x00013666      662e0f1f8400.  nop word cs:[rax + rax]
0x00013670      4189c7         mov r15d, eax
0x00013673      e917fdffff     jmp 0x1338f
0x00013678      49c747080000.  mov qword [r15 + 8], 0
0x00013680      49c707000000.  mov qword [r15], 0
0x00013687      e96efbffff     jmp 0x131fa
0x0001368c      488b442408     mov rax, qword [rsp + 8]
0x00013691      c744244c0c00.  mov dword [rsp + 0x4c], 0xc             ; [0xc:4]=0
0x00013699      4c8b28         mov r13, qword [rax]
0x0001369c      e91bf3ffff     jmp 0x129bc
0x000136a1      b80c000000     mov eax, 0xc
0x000136a6      e981f3ffff     jmp 0x12a2c
0x000136ab      488b442408     mov rax, qword [rsp + 8]
0x000136b0      48c743680000.  mov qword [rbx + 0x68], 0
0x000136b8      4c8b28         mov r13, qword [rax]
0x000136bb      e9fcf2ffff     jmp 0x129bc
0x000136c0      48c741080000.  mov qword [rcx + 8], 0
0x000136c8      48c701000000.  mov qword [rcx], 0
0x000136cf      b80c000000     mov eax, 0xc
0x000136d4      e9d7f2ffff     jmp 0x129b0
0x000136d9      83ff10         cmp edi, 0x10
0x000136dc      0f84eafeffff   je 0x135cc
0x000136e2      e957fbffff     jmp 0x1323e
0x000136e7      4589c6         mov r14d, r8d
0x000136ea      4883bb980000.  cmp qword [rbx + 0x98], 0
0x000136f2      0fb693b00000.  movzx edx, byte [rbx + 0xb0]
0x000136f9      c783b4000000.  mov dword [rbx + 0xb4], 1
0x00013703      0f9fc0         setg al
0x00013706      83e2f9         and edx, 0xfffffff9                     ; 4294967289
0x00013709      4409f0         or eax, r14d
0x0001370c      83e001         and eax, 1
0x0001370f      01c0           add eax, eax
0x00013711      09d0           or eax, edx
0x00013713      8883b0000000   mov byte [rbx + 0xb0], al
0x00013719      e920fbffff     jmp 0x1323e
0x0001371e      e8bde1feff     call sym.imp.abort
0x00013723      488d0df62600.  lea rcx, obj.__PRETTY_FUNCTION__.6981   ; 0x15e20 ; "link_nfa_nodes"
0x0001372a      488d351f2100.  lea rsi, str..._coreutils_8.31_lib_regcomp.c ; 0x15850 ; "../coreutils-8.31/lib/regcomp.c"
0x00013731      488d3ddd2100.  lea rdi, str.right____1                 ; 0x15915 ; "right > -1"
0x00013738      bab0050000     mov edx, 0x5b0
0x0001373d      e80ee3feff     call sym.imp.__assert_fail
0x00013742      488d0dd72600.  lea rcx, obj.__PRETTY_FUNCTION__.6981   ; 0x15e20 ; "link_nfa_nodes"
0x00013749      488d35002100.  lea rsi, str..._coreutils_8.31_lib_regcomp.c ; 0x15850 ; "../coreutils-8.31/lib/regcomp.c"
0x00013750      488d3d192100.  lea rdi, str.IS_EPSILON_NODE__node__token.type ; 0x15870 ; "!IS_EPSILON_NODE (node->token.type)"
0x00013757      bac2050000     mov edx, 0x5c2
0x0001375c      e8efe2feff     call sym.imp.__assert_fail
0x00013761      488d0db82600.  lea rcx, obj.__PRETTY_FUNCTION__.6981   ; 0x15e20 ; "link_nfa_nodes"
0x00013768      488d35e12000.  lea rsi, str..._coreutils_8.31_lib_regcomp.c ; 0x15850 ; "../coreutils-8.31/lib/regcomp.c"
0x0001376f      488d3d952100.  lea rdi, str.left____1                  ; 0x1590b ; "left > -1"
0x00013776      baaf050000     mov edx, 0x5af
0x0001377b      e8d0e2feff     call sym.imp.__assert_fail
0x00013780      e85be2feff     call sym.imp.__stack_chk_fail
0x00013785      90             nop
0x00013786      662e0f1f8400.  nop word cs:[rax + rax]
;-- rpl_re_compile_pattern:
0x00013790      4883ec08       sub rsp, 8
0x00013794      488b0d3d5f20.  mov rcx, qword [obj.rpl_re_syntax_options] ; [0x2196d8:8]=0
0x0001379b      4989f8         mov r8, rdi
0x0001379e      4889d7         mov rdi, rdx
0x000137a1      4889c8         mov rax, rcx
0x000137a4      48c1e819       shr rax, 0x19
0x000137a8      83e001         and eax, 1
0x000137ab      c1e004         shl eax, 4
0x000137ae      89c2           mov edx, eax
0x000137b0      0fb64738       movzx eax, byte [rdi + 0x38]
0x000137b4      83e0ef         and eax, 0xffffffef                     ; 4294967279
0x000137b7      09d0           or eax, edx
0x000137b9      4889f2         mov rdx, rsi
0x000137bc      4c89c6         mov rsi, r8
0x000137bf      83c880         or eax, 0xffffff80                      ; 4294967168
0x000137c2      884738         mov byte [rdi + 0x38], al
0x000137c5      e8c6eeffff     call sym.re_compile_internal
0x000137ca      85c0           test eax, eax
0x000137cc      742a           je 0x137f8
0x000137ce      488d15ab2600.  lea rdx, obj.__re_error_msgid_idx       ; 0x15e80
0x000137d5      4898           cdqe
0x000137d7      488d35422700.  lea rsi, obj.__re_error_msgid           ; 0x15f20 ; "Success"
0x000137de      31ff           xor edi, edi
0x000137e0      480334c2       add rsi, qword [rdx + rax*8]
0x000137e4      ba05000000     mov edx, 5
0x000137e9      4883c408       add rsp, 8
0x000137ed      e9bee1feff     jmp sym.imp.dcgettext
0x000137f2      660f1f440000   nop word [rax + rax]
0x000137f8      31c0           xor eax, eax
0x000137fa      4883c408       add rsp, 8
0x000137fe      c3             ret
0x000137ff      90             nop
;-- rpl_re_set_syntax:
0x00013800      488b05d15e20.  mov rax, qword [obj.rpl_re_syntax_options] ; [0x2196d8:8]=0
0x00013807      48893dca5e20.  mov qword [obj.rpl_re_syntax_options], rdi ; [0x2196d8:8]=0
0x0001380e      c3             ret
0x0001380f      90             nop
;-- rpl_re_compile_fastmap:
0x00013810      4154           push r12
0x00013812      55             push rbp
0x00013813      31c0           xor eax, eax
0x00013815      53             push rbx
0x00013816      488b6f20       mov rbp, qword [rdi + 0x20]
0x0001381a      4889fb         mov rbx, rdi
0x0001381d      4c8b27         mov r12, qword [rdi]
0x00013820      488d7d08       lea rdi, [rbp + 8]
0x00013824      4889e9         mov rcx, rbp
0x00013827      48c745000000.  mov qword [rbp], 0
0x0001382f      48c785f80000.  mov qword [rbp + 0xf8], 0
0x0001383a      4883e7f8       and rdi, 0xfffffffffffffff8
0x0001383e      4829f9         sub rcx, rdi
0x00013841      81c100010000   add ecx, 0x100
0x00013847      c1e903         shr ecx, 3
0x0001384a      f348ab         rep stosq qword [rdi], rax
0x0001384d      4889e9         mov rcx, rbp
0x00013850      4889df         mov rdi, rbx
0x00013853      498b742448     mov rsi, qword [r12 + 0x48]
0x00013858      488d5618       lea rdx, [rsi + 0x18]
0x0001385c      4883c610       add rsi, 0x10
0x00013860      e8fb84ffff     call sym.re_compile_fastmap_iter.isra.30
0x00013865      498b442450     mov rax, qword [r12 + 0x50]
0x0001386a      4939442448     cmp qword [r12 + 0x48], rax
0x0001386f      7418           je 0x13889
0x00013871      488d5018       lea rdx, [rax + 0x18]
0x00013875      488d7010       lea rsi, [rax + 0x10]
0x00013879      4889e9         mov rcx, rbp
0x0001387c      4889df         mov rdi, rbx
0x0001387f      e8dc84ffff     call sym.re_compile_fastmap_iter.isra.30
0x00013884      498b442448     mov rax, qword [r12 + 0x48]
0x00013889      498b742458     mov rsi, qword [r12 + 0x58]
0x0001388e      4839c6         cmp rsi, rax
0x00013891      7418           je 0x138ab
0x00013893      488d5618       lea rdx, [rsi + 0x18]
0x00013897      4889e9         mov rcx, rbp
0x0001389a      4883c610       add rsi, 0x10
0x0001389e      4889df         mov rdi, rbx
0x000138a1      e8ba84ffff     call sym.re_compile_fastmap_iter.isra.30
0x000138a6      498b442448     mov rax, qword [r12 + 0x48]
0x000138ab      498b742460     mov rsi, qword [r12 + 0x60]
0x000138b0      4839c6         cmp rsi, rax
0x000138b3      7413           je 0x138c8
0x000138b5      488d5618       lea rdx, [rsi + 0x18]
0x000138b9      4889e9         mov rcx, rbp
0x000138bc      4883c610       add rsi, 0x10
0x000138c0      4889df         mov rdi, rbx
0x000138c3      e89884ffff     call sym.re_compile_fastmap_iter.isra.30
0x000138c8      804b3808       or byte [rbx + 0x38], 8
0x000138cc      31c0           xor eax, eax
0x000138ce      5b             pop rbx
0x000138cf      5d             pop rbp
0x000138d0      415c           pop r12
0x000138d2      c3             ret
0x000138d3      0f1f00         nop dword [rax]
0x000138d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_search_stub:
0x000138e0      4157           push r15
0x000138e2      4156           push r14
0x000138e4      4c89c0         mov rax, r8
0x000138e7      4155           push r13
0x000138e9      4154           push r12
0x000138eb      4901c8         add r8, rcx
0x000138ee      55             push rbp
0x000138ef      53             push rbx
0x000138f0      4883ec38       sub rsp, 0x38
0x000138f4      4885c9         test rcx, rcx
0x000138f7      8b5c2478       mov ebx, dword [rsp + 0x78]
0x000138fb      4c8b642470     mov r12, qword [rsp + 0x70]
0x00013900      895c2428       mov dword [rsp + 0x28], ebx
0x00013904      0f8836030000   js 0x13c40
0x0001390a      4839d1         cmp rcx, rdx
0x0001390d      0f8f2d030000   jg 0x13c40
0x00013913      4939d0         cmp r8, rdx
0x00013916      4889cb         mov rbx, rcx
0x00013919      4989ff         mov r15, rdi
0x0001391c      0f8f7e020000   jg 0x13ba0
0x00013922      4885c0         test rax, rax
0x00013925      7809           js 0x13930
0x00013927      4c39c1         cmp rcx, r8
0x0001392a      0f8f70020000   jg 0x13ba0
0x00013930      4d85c0         test r8, r8
0x00013933      0f88df020000   js 0x13c18
0x00013939      4885c0         test rax, rax
0x0001393c      7909           jns 0x13947
0x0001393e      4c39c3         cmp rbx, r8
0x00013941      0f8ed1020000   jle 0x13c18
0x00013947      410fb64738     movzx eax, byte [r15 + 0x38]
0x0001394c      4189c5         mov r13d, eax
0x0001394f      41c0ed05       shr r13b, 5
0x00013953      4489ef         mov edi, r13d
0x00013956      83e703         and edi, 3
0x00013959      4939d8         cmp r8, rbx
0x0001395c      897c242c       mov dword [rsp + 0x2c], edi
0x00013960      7e0f           jle 0x13971
0x00013962      49837f2000     cmp qword [r15 + 0x20], 0
0x00013967      7408           je 0x13971
0x00013969      a808           test al, 8
0x0001396b      0f84ef010000   je 0x13b60
0x00013971      a810           test al, 0x10
0x00013973      0f85c7010000   jne 0x13b40
0x00013979      4d85e4         test r12, r12
0x0001397c      0f84be010000   je 0x13b40
0x00013982      83e006         and eax, 6
0x00013985      498b4f30       mov rcx, qword [r15 + 0x30]
0x00013989      3c04           cmp al, 4
0x0001398b      0f848f010000   je 0x13b20
0x00013991      4c8d7101       lea r14, [rcx + 1]
0x00013995      4d89f5         mov r13, r14
0x00013998      4c89f7         mov rdi, r14
0x0001399b      48c1e704       shl rdi, 4
0x0001399f      4c894c2420     mov qword [rsp + 0x20], r9
0x000139a4      4889542418     mov qword [rsp + 0x18], rdx
0x000139a9      4889742410     mov qword [rsp + 0x10], rsi
0x000139ae      4c89442408     mov qword [rsp + 8], r8
0x000139b3      e848e1feff     call sym.imp.malloc
0x000139b8      4885c0         test rax, rax
0x000139bb      4889c5         mov rbp, rax
0x000139be      0f848c020000   je 0x13c50
0x000139c4      4883ec08       sub rsp, 8
0x000139c8      4889d9         mov rcx, rbx
0x000139cb      4c89ff         mov rdi, r15
0x000139ce      8b442434       mov eax, dword [rsp + 0x34]
0x000139d2      50             push rax
0x000139d3      55             push rbp
0x000139d4      4156           push r14
0x000139d6      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x000139db      4c8b442428     mov r8, qword [rsp + 0x28]
0x000139e0      488b542438     mov rdx, qword [rsp + 0x38]
0x000139e5      488b742430     mov rsi, qword [rsp + 0x30]
0x000139ea      e811abffff     call sym.re_search_internal
0x000139ef      4883c420       add rsp, 0x20
0x000139f3      85c0           test eax, eax
0x000139f5      7431           je 0x13a28
0x000139f7      83f801         cmp eax, 1
0x000139fa      49c7c4ffffff.  mov r12, 0xffffffffffffffff
0x00013a01      7407           je 0x13a0a
0x00013a03      49c7c4feffff.  mov r12, 0xfffffffffffffffe
0x00013a0a      4889ef         mov rdi, rbp
0x00013a0d      e8bedefeff     call sym.imp.free
0x00013a12      4883c438       add rsp, 0x38
0x00013a16      4c89e0         mov rax, r12
0x00013a19      5b             pop rbx
0x00013a1a      5d             pop rbp
0x00013a1b      415c           pop r12
0x00013a1d      415d           pop r13
0x00013a1f      415e           pop r14
0x00013a21      415f           pop r15
0x00013a23      c3             ret
0x00013a24      0f1f4000       nop dword [rax]
0x00013a28      4d85e4         test r12, r12
0x00013a2b      0f84c7000000   je 0x13af8
0x00013a31      410fb64738     movzx eax, byte [r15 + 0x38]
0x00013a36      498d5501       lea rdx, [r13 + 1]
0x00013a3a      d0e8           shr al, 1
0x00013a3c      83e003         and eax, 3
0x00013a3f      0f846b010000   je 0x13bb0
0x00013a45      83f801         cmp eax, 1
0x00013a48      0f8412020000   je 0x13c60
0x00013a4e      83f802         cmp eax, 2
0x00013a51      0f85e9020000   jne 0x13d40
0x00013a57      4d3b3424       cmp r14, qword [r12]
0x00013a5b      0f87c0020000   ja 0x13d21
0x00013a61      41b902000000   mov r9d, 2
0x00013a67      4d85ed         test r13, r13
0x00013a6a      0f8e68020000   jle 0x13cd8
0x00013a70      4d8b442408     mov r8, qword [r12 + 8]
0x00013a75      498b7c2410     mov rdi, qword [r12 + 0x10]
0x00013a7a      4a8d34ed0000.  lea rsi, [r13*8]
0x00013a82      4c89ea         mov rdx, r13
0x00013a85      31c0           xor eax, eax
0x00013a87      660f1f840000.  nop word [rax + rax]
0x00013a90      488b4c4500     mov rcx, qword [rbp + rax*2]
0x00013a95      49890c00       mov qword [r8 + rax], rcx
0x00013a99      488b4c4508     mov rcx, qword [rbp + rax*2 + 8]
0x00013a9e      48890c07       mov qword [rdi + rax], rcx
0x00013aa2      4883c008       add rax, 8
0x00013aa6      4839c6         cmp rsi, rax
0x00013aa9      75e5           jne 0x13a90
0x00013aab      49391424       cmp qword [r12], rdx
0x00013aaf      762c           jbe 0x13add
0x00013ab1      498b742410     mov rsi, qword [r12 + 0x10]
0x00013ab6      498b4c2408     mov rcx, qword [r12 + 8]
0x00013abb      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00013ac2      660f1f440000   nop word [rax + rax]
0x00013ac8      488904d6       mov qword [rsi + rdx*8], rax
0x00013acc      4983c501       add r13, 1
0x00013ad0      488904d1       mov qword [rcx + rdx*8], rax
0x00013ad4      4d3b2c24       cmp r13, qword [r12]
0x00013ad8      4c89ea         mov rdx, r13
0x00013adb      72eb           jb 0x13ac8
0x00013add      410fb64738     movzx eax, byte [r15 + 0x38]
0x00013ae2      478d2c09       lea r13d, [r9 + r9]
0x00013ae6      83e0f9         and eax, 0xfffffff9                     ; 4294967289
0x00013ae9      4409e8         or eax, r13d
0x00013aec      a806           test al, 6
0x00013aee      41884738       mov byte [r15 + 0x38], al
0x00013af2      0f840bffffff   je 0x13a03
0x00013af8      807c242800     cmp byte [rsp + 0x28], 0
0x00013afd      4c8b6500       mov r12, qword [rbp]
0x00013b01      0f8403ffffff   je 0x13a0a
0x00013b07      4939dc         cmp r12, rbx
0x00013b0a      0f85f2010000   jne 0x13d02
0x00013b10      4c8b6508       mov r12, qword [rbp + 8]
0x00013b14      4929dc         sub r12, rbx
0x00013b17      e9eefeffff     jmp 0x13a0a
0x00013b1c      0f1f4000       nop dword [rax]
0x00013b20      4d8b3424       mov r14, qword [r12]
0x00013b24      4939ce         cmp r14, rcx
0x00013b27      0f8764feffff   ja 0x13991
0x00013b2d      4d85f6         test r14, r14
0x00013b30      4d89f5         mov r13, r14
0x00013b33      0f8f5ffeffff   jg 0x13998
0x00013b39      0f1f80000000.  nop dword [rax]
0x00013b40      bf10000000     mov edi, 0x10
0x00013b45      41be01000000   mov r14d, 1
0x00013b4b      41bd01000000   mov r13d, 1
0x00013b51      4531e4         xor r12d, r12d
0x00013b54      e946feffff     jmp 0x1399f
0x00013b59      0f1f80000000.  nop dword [rax]
0x00013b60      4c89ff         mov rdi, r15
0x00013b63      4c894c2420     mov qword [rsp + 0x20], r9
0x00013b68      4889542418     mov qword [rsp + 0x18], rdx
0x00013b6d      4889742410     mov qword [rsp + 0x10], rsi
0x00013b72      4c89442408     mov qword [rsp + 8], r8
0x00013b77      e894fcffff     call sym.rpl_re_compile_fastmap
0x00013b7c      410fb64738     movzx eax, byte [r15 + 0x38]
0x00013b81      4c8b4c2420     mov r9, qword [rsp + 0x20]
0x00013b86      488b542418     mov rdx, qword [rsp + 0x18]
0x00013b8b      488b742410     mov rsi, qword [rsp + 0x10]
0x00013b90      4c8b442408     mov r8, qword [rsp + 8]
0x00013b95      e9d7fdffff     jmp 0x13971
0x00013b9a      660f1f440000   nop word [rax + rax]
0x00013ba0      4989d0         mov r8, rdx
0x00013ba3      e99ffdffff     jmp 0x13947
0x00013ba8      0f1f84000000.  nop dword [rax + rax]
0x00013bb0      4c8d34d50000.  lea r14, [rdx*8]
0x00013bb8      4889542408     mov qword [rsp + 8], rdx
0x00013bbd      4c89f7         mov rdi, r14
0x00013bc0      e83bdffeff     call sym.imp.malloc
0x00013bc5      4885c0         test rax, rax
0x00013bc8      4989442408     mov qword [r12 + 8], rax
0x00013bcd      488b542408     mov rdx, qword [rsp + 8]
0x00013bd2      0f8412010000   je 0x13cea
0x00013bd8      4c89f7         mov rdi, r14
0x00013bdb      4889542408     mov qword [rsp + 8], rdx
0x00013be0      4889442410     mov qword [rsp + 0x10], rax
0x00013be5      e816dffeff     call sym.imp.malloc
0x00013bea      4885c0         test rax, rax
0x00013bed      4989442410     mov qword [r12 + 0x10], rax
0x00013bf2      488b542408     mov rdx, qword [rsp + 8]
0x00013bf7      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00013bfc      0f84e0000000   je 0x13ce2
0x00013c02      49891424       mov qword [r12], rdx
0x00013c06      41b901000000   mov r9d, 1
0x00013c0c      e956feffff     jmp 0x13a67
0x00013c11      0f1f80000000.  nop dword [rax]
0x00013c18      410fb64738     movzx eax, byte [r15 + 0x38]
0x00013c1d      4531c0         xor r8d, r8d
0x00013c20      4189c5         mov r13d, eax
0x00013c23      41c0ed05       shr r13b, 5
0x00013c27      4489ef         mov edi, r13d
0x00013c2a      83e703         and edi, 3
0x00013c2d      897c242c       mov dword [rsp + 0x2c], edi
0x00013c31      e93bfdffff     jmp 0x13971
0x00013c36      662e0f1f8400.  nop word cs:[rax + rax]
0x00013c40      49c7c4ffffff.  mov r12, 0xffffffffffffffff
0x00013c47      e9c6fdffff     jmp 0x13a12
0x00013c4c      0f1f4000       nop dword [rax]
0x00013c50      49c7c4feffff.  mov r12, 0xfffffffffffffffe
0x00013c57      e9b6fdffff     jmp 0x13a12
0x00013c5c      0f1f4000       nop dword [rax]
0x00013c60      49391424       cmp qword [r12], rdx
0x00013c64      41b901000000   mov r9d, 1
0x00013c6a      0f83f7fdffff   jae 0x13a67
0x00013c70      488d0cd50000.  lea rcx, [rdx*8]
0x00013c78      498b7c2408     mov rdi, qword [r12 + 8]
0x00013c7d      44884c2418     mov byte [rsp + 0x18], r9b
0x00013c82      4889542410     mov qword [rsp + 0x10], rdx
0x00013c87      4889ce         mov rsi, rcx
0x00013c8a      48894c2408     mov qword [rsp + 8], rcx
0x00013c8f      e8ccdefeff     call sym.imp.realloc
0x00013c94      4885c0         test rax, rax
0x00013c97      4989c6         mov r14, rax
0x00013c9a      744e           je 0x13cea
0x00013c9c      488b4c2408     mov rcx, qword [rsp + 8]
0x00013ca1      498b7c2410     mov rdi, qword [r12 + 0x10]
0x00013ca6      4889ce         mov rsi, rcx
0x00013ca9      e8b2defeff     call sym.imp.realloc
0x00013cae      4885c0         test rax, rax
0x00013cb1      488b542410     mov rdx, qword [rsp + 0x10]
0x00013cb6      440fb64c2418   movzx r9d, byte [rsp + 0x18]
0x00013cbc      7434           je 0x13cf2
0x00013cbe      4d89742408     mov qword [r12 + 8], r14
0x00013cc3      4989442410     mov qword [r12 + 0x10], rax
0x00013cc8      49891424       mov qword [r12], rdx
0x00013ccc      e996fdffff     jmp 0x13a67
0x00013cd1      0f1f80000000.  nop dword [rax]
0x00013cd8      31d2           xor edx, edx
0x00013cda      4531ed         xor r13d, r13d
0x00013cdd      e9c9fdffff     jmp 0x13aab
0x00013ce2      4889cf         mov rdi, rcx
0x00013ce5      e8e6dbfeff     call sym.imp.free
0x00013cea      4531c9         xor r9d, r9d
0x00013ced      e9ebfdffff     jmp 0x13add
0x00013cf2      4c89f7         mov rdi, r14
0x00013cf5      e8d6dbfeff     call sym.imp.free
0x00013cfa      4531c9         xor r9d, r9d
0x00013cfd      e9dbfdffff     jmp 0x13add
0x00013d02      488d0de72000.  lea rcx, obj.__PRETTY_FUNCTION__.7847   ; 0x15df0 ; "re_search_stub"
0x00013d09      488d35201b00.  lea rsi, str..._coreutils_8.31_lib_regexec.c ; 0x15830 ; "../coreutils-8.31/lib/regexec.c"
0x00013d10      488d3d3e1c00.  lea rdi, str.pmatch_0_.rm_so____start   ; 0x15955 ; "pmatch[0].rm_so == start"
0x00013d17      babe010000     mov edx, 0x1be
0x00013d1c      e82fddfeff     call sym.imp.__assert_fail
0x00013d21      488d0db82000.  lea rcx, obj.__PRETTY_FUNCTION__.7859   ; 0x15de0 ; "re_copy_regs"
0x00013d28      488d35011b00.  lea rsi, str..._coreutils_8.31_lib_regexec.c ; 0x15830 ; "../coreutils-8.31/lib/regexec.c"
0x00013d2f      488d3d071c00.  lea rdi, str.regs__num_regs____nregs    ; 0x1593d ; "regs->num_regs >= nregs"
0x00013d36      bafb010000     mov edx, 0x1fb
0x00013d3b      e810ddfeff     call sym.imp.__assert_fail
0x00013d40      488d0d992000.  lea rcx, obj.__PRETTY_FUNCTION__.7859   ; 0x15de0 ; "re_copy_regs"
0x00013d47      488d35e21a00.  lea rsi, str..._coreutils_8.31_lib_regexec.c ; 0x15830 ; "../coreutils-8.31/lib/regexec.c"
0x00013d4e      488d3dcb1b00.  lea rdi, str.regs_allocated____REGS_FIXED ; 0x15920 ; "regs_allocated == REGS_FIXED"
0x00013d55      baf9010000     mov edx, 0x1f9
0x00013d5a      e8f1dcfeff     call sym.imp.__assert_fail
0x00013d5f      90             nop
;-- re_search_2_stub:
0x00013d60      4157           push r15
0x00013d62      4156           push r14
0x00013d64      4155           push r13
0x00013d66      4154           push r12
0x00013d68      4989fc         mov r12, rdi
0x00013d6b      55             push rbp
0x00013d6c      53             push rbx
0x00013d6d      4c89c5         mov rbp, r8
0x00013d70      4889d3         mov rbx, rdx
0x00013d73      4889ea         mov rdx, rbp
0x00013d76      4883ec28       sub rsp, 0x28
0x00013d7a      48c1ea3f       shr rdx, 0x3f
0x00013d7e      488b442470     mov rax, qword [rsp + 0x70]
0x00013d83      89d7           mov edi, edx
0x00013d85      448b442478     mov r8d, dword [rsp + 0x78]
0x00013d8a      48c1e83f       shr rax, 0x3f
0x00013d8e      4008c7         or dil, al
0x00013d91      0f85c9000000   jne 0x13e60
0x00013d97      4885db         test rbx, rbx
0x00013d9a      0f88c0000000   js 0x13e60
0x00013da0      4989df         mov r15, rbx
0x00013da3      4901ef         add r15, rbp
0x00013da6      0f80b4000000   jo 0x13e60
0x00013dac      4885ed         test rbp, rbp
0x00013daf      4989ce         mov r14, rcx
0x00013db2      4c89c9         mov rcx, r9
0x00013db5      0f84b5000000   je 0x13e70
0x00013dbb      4531ed         xor r13d, r13d
0x00013dbe      4885db         test rbx, rbx
0x00013dc1      4889742408     mov qword [rsp + 8], rsi
0x00013dc6      7548           jne 0x13e10
0x00013dc8      450fb6c0       movzx r8d, r8b
0x00013dcc      4c89fa         mov rdx, r15
0x00013dcf      4c89f6         mov rsi, r14
0x00013dd2      4150           push r8
0x00013dd4      ff742470       push qword [rsp + 0x70]
0x00013dd8      4c89e7         mov rdi, r12
0x00013ddb      4c8b8c248000.  mov r9, qword [rsp + 0x80]
0x00013de3      4c8b442470     mov r8, qword [rsp + 0x70]
0x00013de8      e8f3faffff     call sym.re_search_stub
0x00013ded      4c89ef         mov rdi, r13
0x00013df0      4889c3         mov rbx, rax
0x00013df3      e8d8dafeff     call sym.imp.free
0x00013df8      58             pop rax
0x00013df9      5a             pop rdx
0x00013dfa      4883c428       add rsp, 0x28
0x00013dfe      4889d8         mov rax, rbx
0x00013e01      5b             pop rbx
0x00013e02      5d             pop rbp
0x00013e03      415c           pop r12
0x00013e05      415d           pop r13
0x00013e07      415e           pop r14
0x00013e09      415f           pop r15
0x00013e0b      c3             ret
0x00013e0c      0f1f4000       nop dword [rax]
0x00013e10      4c89ff         mov rdi, r15
0x00013e13      448944241c     mov dword [rsp + 0x1c], r8d
0x00013e18      4c894c2410     mov qword [rsp + 0x10], r9
0x00013e1d      e8dedcfeff     call sym.imp.malloc
0x00013e22      4885c0         test rax, rax
0x00013e25      4989c5         mov r13, rax
0x00013e28      7436           je 0x13e60
0x00013e2a      488b742408     mov rsi, qword [rsp + 8]
0x00013e2f      4889da         mov rdx, rbx
0x00013e32      4889c7         mov rdi, rax
0x00013e35      e896dcfeff     call sym.imp.memcpy
0x00013e3a      498d7c1d00     lea rdi, [r13 + rbx]
0x00013e3f      4c89f6         mov rsi, r14
0x00013e42      4889ea         mov rdx, rbp
0x00013e45      4d89ee         mov r14, r13
0x00013e48      e883dcfeff     call sym.imp.memcpy
0x00013e4d      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00013e52      448b44241c     mov r8d, dword [rsp + 0x1c]
0x00013e57      e96cffffff     jmp 0x13dc8
0x00013e5c      0f1f4000       nop dword [rax]
0x00013e60      48c7c3feffff.  mov rbx, 0xfffffffffffffffe
0x00013e67      eb91           jmp 0x13dfa
0x00013e69      0f1f80000000.  nop dword [rax]
0x00013e70      4989f6         mov r14, rsi
0x00013e73      4531ed         xor r13d, r13d
0x00013e76      e94dffffff     jmp 0x13dc8
0x00013e7b      0f1f440000     nop dword [rax + rax]
;-- rpl_regcomp:
0x00013e80      89d0           mov eax, edx
0x00013e82      4156           push r14
0x00013e84      4155           push r13
0x00013e86      83e001         and eax, 1
0x00013e89      4154           push r12
0x00013e8b      55             push rbp
0x00013e8c      83f801         cmp eax, 1
0x00013e8f      53             push rbx
0x00013e90      4889fb         mov rbx, rdi
0x00013e93      4d19f6         sbb r14, r14
0x00013e96      48c707000000.  mov qword [rdi], 0
0x00013e9d      48c747080000.  mov qword [rdi + 8], 0
0x00013ea5      4181e6ca4ffd.  and r14d, 0xfd4fca
0x00013eac      48c747100000.  mov qword [rdi + 0x10], 0
0x00013eb4      bf00010000     mov edi, 0x100
0x00013eb9      4989f4         mov r12, rsi
0x00013ebc      89d5           mov ebp, edx
0x00013ebe      4981c6fcb203.  add r14, 0x3b2fc
0x00013ec5      e836dcfeff     call sym.imp.malloc
0x00013eca      4885c0         test rax, rax
0x00013ecd      48894320       mov qword [rbx + 0x20], rax
0x00013ed1      0f84a9000000   je 0x13f80
0x00013ed7      4989ed         mov r13, rbp
0x00013eda      49c1e515       shl r13, 0x15
0x00013ede      4181e5000040.  and r13d, 0x400000
0x00013ee5      4d09f5         or r13, r14
0x00013ee8      40f6c504       test bpl, 4
0x00013eec      7562           jne 0x13f50
0x00013eee      8063387f       and byte [rbx + 0x38], 0x7f             ; [0x7f:1]=0
0x00013ef2      0fb65338       movzx edx, byte [rbx + 0x38]
0x00013ef6      c1ed03         shr ebp, 3
0x00013ef9      4c89e7         mov rdi, r12
0x00013efc      83e501         and ebp, 1
0x00013eff      48c743280000.  mov qword [rbx + 0x28], 0
0x00013f07      c1e504         shl ebp, 4
0x00013f0a      83e2ef         and edx, 0xffffffef                     ; 4294967279
0x00013f0d      09d5           or ebp, edx
0x00013f0f      40886b38       mov byte [rbx + 0x38], bpl
0x00013f13      e8b8dafeff     call sym.imp.strlen
0x00013f18      4c89e9         mov rcx, r13
0x00013f1b      4889c2         mov rdx, rax
0x00013f1e      4c89e6         mov rsi, r12
0x00013f21      4889df         mov rdi, rbx
0x00013f24      e867e7ffff     call sym.re_compile_internal
0x00013f29      83f810         cmp eax, 0x10
0x00013f2c      89c5           mov ebp, eax
0x00013f2e      7438           je 0x13f68
0x00013f30      85c0           test eax, eax
0x00013f32      7539           jne 0x13f6d
0x00013f34      4889df         mov rdi, rbx
0x00013f37      e8d4f8ffff     call sym.rpl_re_compile_fastmap
0x00013f3c      5b             pop rbx
0x00013f3d      89e8           mov eax, ebp
0x00013f3f      5d             pop rbp
0x00013f40      415c           pop r12
0x00013f42      415d           pop r13
0x00013f44      415e           pop r14
0x00013f46      c3             ret
0x00013f47      660f1f840000.  nop word [rax + rax]
0x00013f50      4983e5bf       and r13, 0xffffffffffffffbf
0x00013f54      804b3880       or byte [rbx + 0x38], 0x80              ; [0x80:1]=56
0x00013f58      4981cd000100.  or r13, 0x100
0x00013f5f      eb91           jmp 0x13ef2
0x00013f61      0f1f80000000.  nop dword [rax]
0x00013f68      bd08000000     mov ebp, 8
0x00013f6d      488b7b20       mov rdi, qword [rbx + 0x20]
0x00013f71      e85ad9feff     call sym.imp.free
0x00013f76      48c743200000.  mov qword [rbx + 0x20], 0
0x00013f7e      ebbc           jmp 0x13f3c
0x00013f80      bd0c000000     mov ebp, 0xc
0x00013f85      5b             pop rbx
0x00013f86      89e8           mov eax, ebp
0x00013f88      5d             pop rbp
0x00013f89      415c           pop r12
0x00013f8b      415d           pop r13
0x00013f8d      415e           pop r14
0x00013f8f      c3             ret
;-- rpl_regerror:
0x00013f90      4155           push r13
0x00013f92      4154           push r12
0x00013f94      55             push rbp
0x00013f95      53             push rbx
0x00013f96      4883ec08       sub rsp, 8
0x00013f9a      83ff10         cmp edi, 0x10
0x00013f9d      7761           ja 0x14000
0x00013f9f      488d05da1e00.  lea rax, obj.__re_error_msgid_idx       ; 0x15e80
0x00013fa6      4863ff         movsxd rdi, edi
0x00013fa9      488d35701f00.  lea rsi, obj.__re_error_msgid           ; 0x15f20 ; "Success"
0x00013fb0      4889d5         mov rbp, rdx
0x00013fb3      ba05000000     mov edx, 5
0x00013fb8      4989cc         mov r12, rcx
0x00013fbb      480334f8       add rsi, qword [rax + rdi*8]
0x00013fbf      31ff           xor edi, edi
0x00013fc1      e8ead9feff     call sym.imp.dcgettext
0x00013fc6      4889c7         mov rdi, rax
0x00013fc9      4989c5         mov r13, rax
0x00013fcc      e8ffd9feff     call sym.imp.strlen
0x00013fd1      4d85e4         test r12, r12
0x00013fd4      488d5801       lea rbx, [rax + 1]
0x00013fd8      7413           je 0x13fed
0x00013fda      4c39e3         cmp rbx, r12
0x00013fdd      4889da         mov rdx, rbx
0x00013fe0      7726           ja 0x14008
0x00013fe2      4c89ee         mov rsi, r13
0x00013fe5      4889ef         mov rdi, rbp
0x00013fe8      e8e3dafeff     call sym.imp.memcpy
0x00013fed      4883c408       add rsp, 8
0x00013ff1      4889d8         mov rax, rbx
0x00013ff4      5b             pop rbx
0x00013ff5      5d             pop rbp
0x00013ff6      415c           pop r12
0x00013ff8      415d           pop r13
0x00013ffa      c3             ret
0x00013ffb      0f1f440000     nop dword [rax + rax]
0x00014000      e8dbd8feff     call sym.imp.abort
0x00014005      0f1f00         nop dword [rax]
0x00014008      498d5424ff     lea rdx, [r12 - 1]
0x0001400d      42c64425ff00   mov byte [rbp + r12 - 1], 0
0x00014013      ebcd           jmp 0x13fe2
0x00014015      90             nop
0x00014016      662e0f1f8400.  nop word cs:[rax + rax]
;-- rpl_regfree:
0x00014020      53             push rbx
0x00014021      4889fb         mov rbx, rdi
0x00014024      488b3f         mov rdi, qword [rdi]
0x00014027      4885ff         test rdi, rdi
0x0001402a      7405           je 0x14031
0x0001402c      e8df37ffff     call sym.free_dfa_content
0x00014031      488b7b20       mov rdi, qword [rbx + 0x20]
0x00014035      48c703000000.  mov qword [rbx], 0
0x0001403c      48c743080000.  mov qword [rbx + 8], 0
0x00014044      e887d8feff     call sym.imp.free
0x00014049      488b7b28       mov rdi, qword [rbx + 0x28]
0x0001404d      48c743200000.  mov qword [rbx + 0x20], 0
0x00014055      e876d8feff     call sym.imp.free
0x0001405a      48c743280000.  mov qword [rbx + 0x28], 0
0x00014062      5b             pop rbx
0x00014063      c3             ret
0x00014064      6690           nop
0x00014066      662e0f1f8400.  nop word cs:[rax + rax]
;-- rpl_regexec:
0x00014070      41f7c0f8ffff.  test r8d, 0xfffffff8                    ; 4294967288
0x00014077      0f858b000000   jne 0x14108
0x0001407d      4155           push r13
0x0001407f      4154           push r12
0x00014081      4989d5         mov r13, rdx
0x00014084      55             push rbp
0x00014085      53             push rbx
0x00014086      4989cc         mov r12, rcx
0x00014089      4489c3         mov ebx, r8d
0x0001408c      4889fd         mov rbp, rdi
0x0001408f      4883ec18       sub rsp, 0x18
0x00014093      41f6c004       test r8b, 4
0x00014097      754f           jne 0x140e8
0x00014099      4889f7         mov rdi, rsi
0x0001409c      4889742408     mov qword [rsp + 8], rsi
0x000140a1      e82ad9feff     call sym.imp.strlen
0x000140a6      31c9           xor ecx, ecx
0x000140a8      f6453810       test byte [rbp + 0x38], 0x10
0x000140ac      4889c2         mov rdx, rax
0x000140af      488b742408     mov rsi, qword [rsp + 8]
0x000140b4      7440           je 0x140f6
0x000140b6      4883ec08       sub rsp, 8
0x000140ba      53             push rbx
0x000140bb      6a00           push 0
0x000140bd      6a00           push 0
0x000140bf      4889ef         mov rdi, rbp
0x000140c2      4989d1         mov r9, rdx
0x000140c5      4989d0         mov r8, rdx
0x000140c8      e833a4ffff     call sym.re_search_internal
0x000140cd      4883c420       add rsp, 0x20
0x000140d1      85c0           test eax, eax
0x000140d3      0f95c0         setne al
0x000140d6      4883c418       add rsp, 0x18
0x000140da      5b             pop rbx
0x000140db      0fb6c0         movzx eax, al
0x000140de      5d             pop rbp
0x000140df      415c           pop r12
0x000140e1      415d           pop r13
0x000140e3      c3             ret
0x000140e4      0f1f4000       nop dword [rax]
0x000140e8      f6453810       test byte [rbp + 0x38], 0x10
0x000140ec      488b09         mov rcx, qword [rcx]
0x000140ef      498b542408     mov rdx, qword [r12 + 8]
0x000140f4      75c0           jne 0x140b6
0x000140f6      4883ec08       sub rsp, 8
0x000140fa      53             push rbx
0x000140fb      4154           push r12
0x000140fd      4155           push r13
0x000140ff      ebbe           jmp 0x140bf
0x00014101      0f1f80000000.  nop dword [rax]
0x00014108      b802000000     mov eax, 2
0x0001410d      c3             ret
0x0001410e      6690           nop
;-- rpl_re_match:
0x00014110      4883ec08       sub rsp, 8
0x00014114      4989d1         mov r9, rdx
0x00014117      6a01           push 1
0x00014119      4150           push r8
0x0001411b      4531c0         xor r8d, r8d
0x0001411e      e8bdf7ffff     call sym.re_search_stub
0x00014123      4883c418       add rsp, 0x18
0x00014127      c3             ret
0x00014128      0f1f84000000.  nop dword [rax + rax]
;-- rpl_re_search:
0x00014130      4883ec08       sub rsp, 8
0x00014134      6a00           push 0
0x00014136      4151           push r9
0x00014138      4989d1         mov r9, rdx
0x0001413b      e8a0f7ffff     call sym.re_search_stub
0x00014140      4883c418       add rsp, 0x18
0x00014144      c3             ret
0x00014145      90             nop
0x00014146      662e0f1f8400.  nop word cs:[rax + rax]
;-- rpl_re_match_2:
0x00014150      4883ec08       sub rsp, 8
0x00014154      6a01           push 1
0x00014156      ff742420       push qword [rsp + 0x20]
0x0001415a      ff742420       push qword [rsp + 0x20]
0x0001415e      6a00           push 0
0x00014160      e8fbfbffff     call sym.re_search_2_stub
0x00014165      4883c428       add rsp, 0x28
0x00014169      c3             ret
0x0001416a      660f1f440000   nop word [rax + rax]
;-- rpl_re_search_2:
0x00014170      4883ec08       sub rsp, 8
0x00014174      6a00           push 0
0x00014176      ff742428       push qword [rsp + 0x28]
0x0001417a      ff742428       push qword [rsp + 0x28]
0x0001417e      ff742428       push qword [rsp + 0x28]
0x00014182      e8d9fbffff     call sym.re_search_2_stub
0x00014187      4883c428       add rsp, 0x28
0x0001418b      c3             ret
0x0001418c      0f1f4000       nop dword [rax]
;-- rpl_re_set_registers:
0x00014190      4885d2         test rdx, rdx
0x00014193      7523           jne 0x141b8
0x00014195      806738f9       and byte [rdi + 0x38], 0xf9             ; [0xf9:1]=137
0x00014199      48c706000000.  mov qword [rsi], 0
0x000141a0      48c746100000.  mov qword [rsi + 0x10], 0
0x000141a8      48c746080000.  mov qword [rsi + 8], 0
0x000141b0      c3             ret
0x000141b1      0f1f80000000.  nop dword [rax]
0x000141b8      0fb64738       movzx eax, byte [rdi + 0x38]
0x000141bc      83e0f9         and eax, 0xfffffff9                     ; 4294967289
0x000141bf      83c802         or eax, 2
0x000141c2      884738         mov byte [rdi + 0x38], al
0x000141c5      488916         mov qword [rsi], rdx
0x000141c8      48894e08       mov qword [rsi + 8], rcx
0x000141cc      4c894610       mov qword [rsi + 0x10], r8
0x000141d0      c3             ret
0x000141d1      662e0f1f8400.  nop word cs:[rax + rax]
0x000141db      0f1f440000     nop dword [rax + rax]
;-- close_stream:
0x000141e0      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x000141e2      55             push rbp
0x000141e3      4889fd         mov rbp, rdi
0x000141e6      53             push rbx
0x000141e7      e844d7feff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x000141ec      8b5d00         mov ebx, dword [rbp]
0x000141ef      4889ef         mov rdi, rbp
0x000141f2      4989c4         mov r12, rax
0x000141f5      e8261cffff     call sym.rpl_fclose
0x000141fa      83e320         and ebx, 0x20                           ; "@"
0x000141fd      85db           test ebx, ebx
0x000141ff      7517           jne 0x14218
0x00014201      85c0           test eax, eax
0x00014203      740a           je 0x1420f                              ; stdio.h:-186
0x00014205      4d85e4         test r12, r12                           ; stdio.h:-178
0x00014208      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0001420d      7439           je 0x14248
0x0001420f      5b             pop rbx
0x00014210      5d             pop rbp
0x00014211      415c           pop r12
0x00014213      c3             ret
0x00014214      0f1f4000       nop dword [rax]
0x00014218      85c0           test eax, eax
0x0001421a      751c           jne 0x14238
0x0001421c      e8cfd6feff     call sym.imp.__errno_location
0x00014221      c70000000000   mov dword [rax], 0
0x00014227      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0001422c      5b             pop rbx
0x0001422d      5d             pop rbp
0x0001422e      415c           pop r12
0x00014230      c3             ret
0x00014231      0f1f80000000.  nop dword [rax]
0x00014238      5b             pop rbx
0x00014239      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0001423e      5d             pop rbp                                 ; stdio.h:-186
0x0001423f      415c           pop r12
0x00014241      c3             ret
0x00014242      660f1f440000   nop word [rax + rax]
0x00014248      e8a3d6feff     call sym.imp.__errno_location
0x0001424d      833809         cmp dword [rax], 9
0x00014250      5b             pop rbx
0x00014251      5d             pop rbp
0x00014252      415c           pop r12                                 ; stdio.h:-178
0x00014254      0f95c0         setne al
0x00014257      0fb6c0         movzx eax, al
0x0001425a      f7d8           neg eax
0x0001425c      c3             ret
0x0001425d      0f1f00         nop dword [rax]
;-- hard_locale:
0x00014260      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00014264      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00014266      e805d9feff     call sym.imp.setlocale
0x0001426b      4889c2         mov rdx, rax
0x0001426e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00014273      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00014276      741d           je 0x14295
0x00014278      488d3d311e00.  lea rdi, [0x000160b0]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x0001427f      b902000000     mov ecx, 2
0x00014284      4889d6         mov rsi, rdx
0x00014287      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00014289      0f97c1         seta cl
0x0001428c      80d900         sbb cl, 0
0x0001428f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00014291      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00014293      750b           jne 0x142a0
0x00014295      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00014299      c3             ret
0x0001429a      660f1f440000   nop word [rax + rax]
0x000142a0      488d3d0b1e00.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x160b2 ; "POSIX"
0x000142a7      b906000000     mov ecx, 6
0x000142ac      4889d6         mov rsi, rdx
0x000142af      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000142b1      0f97c0         seta al
0x000142b4      1c00           sbb al, 0
0x000142b6      84c0           test al, al
0x000142b8      0f95c0         setne al
0x000142bb      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x000142bf      c3             ret
;-- locale_charset:
0x000142c0      4883ec08       sub rsp, 8
0x000142c4      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x000142c9      e862d8feff     call sym.imp.nl_langinfo
0x000142ce      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x000142d1      741d           je 0x142f0
0x000142d3      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x000142d6      488d15db1d00.  lea rdx, str.ASCII                      ; 0x160b8 ; "ASCII"
0x000142dd      480f44c2       cmove rax, rdx
0x000142e1      4883c408       add rsp, 8
0x000142e5      c3             ret
0x000142e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000142f0      488d05c11d00.  lea rax, str.ASCII                      ; 0x160b8 ; "ASCII"
0x000142f7      4883c408       add rsp, 8
0x000142fb      c3             ret
0x000142fc      0f1f4000       nop dword [rax]
;-- __libc_csu_init:
0x00014300      4157           push r15
0x00014302      4156           push r14
0x00014304      4989d7         mov r15, rdx
0x00014307      4155           push r13
0x00014309      4154           push r12
0x0001430b      4c8d259e4620.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x2189b0
0x00014312      55             push rbp
0x00014313      488d2d9e4620.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x2189b8
0x0001431a      53             push rbx
0x0001431b      4189fd         mov r13d, edi
0x0001431e      4989f6         mov r14, rsi
0x00014321      4c29e5         sub rbp, r12
0x00014324      4883ec08       sub rsp, 8
0x00014328      48c1fd03       sar rbp, 3
0x0001432c      e857d5feff     call sym._init
0x00014331      4885ed         test rbp, rbp
0x00014334      7420           je 0x14356
0x00014336      31db           xor ebx, ebx
0x00014338      0f1f84000000.  nop dword [rax + rax]
0x00014340      4c89fa         mov rdx, r15
0x00014343      4c89f6         mov rsi, r14
0x00014346      4489ef         mov edi, r13d
0x00014349      41ff14dc       call qword [r12 + rbx*8]
0x0001434d      4883c301       add rbx, 1
0x00014351      4839dd         cmp rbp, rbx
0x00014354      75ea           jne 0x14340
0x00014356      4883c408       add rsp, 8
0x0001435a      5b             pop rbx
0x0001435b      5d             pop rbp
0x0001435c      415c           pop r12
0x0001435e      415d           pop r13
0x00014360      415e           pop r14
0x00014362      415f           pop r15
0x00014364      c3             ret
0x00014365      90             nop
0x00014366      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00014370      f3c3           ret
0x00014372      662e0f1f8400.  nop word cs:[rax + rax]
0x0001437c      0f1f4000       nop dword [rax]
;-- atexit:
0x00014380      488b15814c20.  mov rdx, qword [obj.__dso_handle]       ; [0x219008:8]=0x219008 obj.__dso_handle
0x00014387      31f6           xor esi, esi
0x00014389      e972d8feff     jmp sym.imp.__cxa_atexit
0x0001438e      0000           add byte [rax], al
