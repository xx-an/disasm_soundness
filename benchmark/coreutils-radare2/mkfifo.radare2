;-- section..plt:
;-- .plt:
0x000012b0      ff35ba5b2000   push qword [0x00206e70]                 ; [12] -r-x section size 704 named .plt
0x000012b6      ff25bc5b2000   jmp qword [0x00206e78]                  ; [0x206e78:8]=0
0x000012bc      0f1f4000       nop dword [rax]
;-- imp.free:
0x000012c0      ff25ba5b2000   jmp qword [reloc.free]                  ; [0x206e80:8]=0x12c6
0x000012c6      6800000000     push 0
0x000012cb      e9e0ffffff     jmp sym..plt
;-- imp.abort:
0x000012d0      ff25b25b2000   jmp qword [reloc.abort]                 ; [0x206e88:8]=0x12d6
0x000012d6      6801000000     push 1
0x000012db      e9d0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x000012e0      ff25aa5b2000   jmp qword [reloc.__errno_location]      ; [0x206e90:8]=0x12e6
0x000012e6      6802000000     push 2
0x000012eb      e9c0ffffff     jmp sym..plt
;-- imp.strncmp:
0x000012f0      ff25a25b2000   jmp qword [reloc.strncmp]               ; [0x206e98:8]=0x12f6
0x000012f6      6803000000     push 3
0x000012fb      e9b0ffffff     jmp sym..plt
;-- imp._exit:
0x00001300      ff259a5b2000   jmp qword [reloc._exit]                 ; [0x206ea0:8]=0x1306
0x00001306      6804000000     push 4
0x0000130b      e9a0ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001310      ff25925b2000   jmp qword [reloc.__fpending]            ; [0x206ea8:8]=0x1316
0x00001316      6805000000     push 5
0x0000131b      e990ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001320      ff258a5b2000   jmp qword [reloc.textdomain]            ; [0x206eb0:8]=0x1326 ; "&\x13"
0x00001326      6806000000     push 6
0x0000132b      e980ffffff     jmp sym..plt
;-- imp.fclose:
0x00001330      ff25825b2000   jmp qword [reloc.fclose]                ; [0x206eb8:8]=0x1336 ; "6\x13"
0x00001336      6807000000     push 7
0x0000133b      e970ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001340      ff257a5b2000   jmp qword [reloc.bindtextdomain]        ; [0x206ec0:8]=0x1346 ; "F\x13"
0x00001346      6808000000     push 8
0x0000134b      e960ffffff     jmp sym..plt
;-- imp.dcgettext:
0x00001350      ff25725b2000   jmp qword [reloc.dcgettext]             ; [0x206ec8:8]=0x1356 ; "V\x13"
0x00001356      6809000000     push 9
0x0000135b      e950ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001360      ff256a5b2000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x206ed0:8]=0x1366 ; "f\x13"
0x00001366      680a000000     push 0xa
0x0000136b      e940ffffff     jmp sym..plt
;-- imp.strlen:
0x00001370      ff25625b2000   jmp qword [reloc.strlen]                ; [0x206ed8:8]=0x1376 ; "v\x13"
0x00001376      680b000000     push 0xb
0x0000137b      e930ffffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001380      ff255a5b2000   jmp qword [reloc.__stack_chk_fail]      ; [0x206ee0:8]=0x1386
0x00001386      680c000000     push 0xc
0x0000138b      e920ffffff     jmp sym..plt
;-- imp.getopt_long:
0x00001390      ff25525b2000   jmp qword [reloc.getopt_long]           ; [0x206ee8:8]=0x1396
0x00001396      680d000000     push 0xd
0x0000139b      e910ffffff     jmp sym..plt
;-- imp.mbrtowc:
0x000013a0      ff254a5b2000   jmp qword [reloc.mbrtowc]               ; [0x206ef0:8]=0x13a6
0x000013a6      680e000000     push 0xe
0x000013ab      e900ffffff     jmp sym..plt
;-- imp.strrchr:
0x000013b0      ff25425b2000   jmp qword [reloc.strrchr]               ; [0x206ef8:8]=0x13b6
0x000013b6      680f000000     push 0xf
0x000013bb      e9f0feffff     jmp sym..plt
;-- imp.lseek:
0x000013c0      ff253a5b2000   jmp qword [reloc.lseek]                 ; [0x206f00:8]=0x13c6
0x000013c6      6810000000     push 0x10
0x000013cb      e9e0feffff     jmp sym..plt
;-- imp.memset:
0x000013d0      ff25325b2000   jmp qword [reloc.memset]                ; [0x206f08:8]=0x13d6
0x000013d6      6811000000     push 0x11
0x000013db      e9d0feffff     jmp sym..plt
;-- imp.memcmp:
0x000013e0      ff252a5b2000   jmp qword [reloc.memcmp]                ; [0x206f10:8]=0x13e6
0x000013e6      6812000000     push 0x12
0x000013eb      e9c0feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x000013f0      ff25225b2000   jmp qword [reloc.fputs_unlocked]        ; [0x206f18:8]=0x13f6
0x000013f6      6813000000     push 0x13
0x000013fb      e9b0feffff     jmp sym..plt
;-- imp.calloc:
0x00001400      ff251a5b2000   jmp qword [reloc.calloc]                ; [0x206f20:8]=0x1406
0x00001406      6814000000     push 0x14
0x0000140b      e9a0feffff     jmp sym..plt
;-- imp.mkfifo:
0x00001410      ff25125b2000   jmp qword [reloc.mkfifo]                ; [0x206f28:8]=0x1416
0x00001416      6815000000     push 0x15
0x0000141b      e990feffff     jmp sym..plt
;-- imp.umask:
0x00001420      ff250a5b2000   jmp qword [reloc.umask]                 ; [0x206f30:8]=0x1426 ; "&\x14"
0x00001426      6816000000     push 0x16
0x0000142b      e980feffff     jmp sym..plt
;-- imp.memcpy:
0x00001430      ff25025b2000   jmp qword [reloc.memcpy]                ; [0x206f38:8]=0x1436 ; "6\x14"
0x00001436      6817000000     push 0x17
0x0000143b      e970feffff     jmp sym..plt
;-- imp.fileno:
0x00001440      ff25fa5a2000   jmp qword [reloc.fileno]                ; [0x206f40:8]=0x1446 ; "F\x14"
0x00001446      6818000000     push 0x18                               ; "p\x18"
0x0000144b      e960feffff     jmp sym..plt
;-- imp.__xstat:
0x00001450      ff25f25a2000   jmp qword [reloc.__xstat]               ; [0x206f48:8]=0x1456 ; "V\x14"
0x00001456      6819000000     push 0x19
0x0000145b      e950feffff     jmp sym..plt
;-- imp.malloc:
0x00001460      ff25ea5a2000   jmp qword [reloc.malloc]                ; [0x206f50:8]=0x1466 ; "f\x14"
0x00001466      681a000000     push 0x1a
0x0000146b      e940feffff     jmp sym..plt
;-- imp.fflush:
0x00001470      ff25e25a2000   jmp qword [reloc.fflush]                ; [0x206f58:8]=0x1476 ; "v\x14"
0x00001476      681b000000     push 0x1b
0x0000147b      e930feffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001480      ff25da5a2000   jmp qword [reloc.nl_langinfo]           ; [0x206f60:8]=0x1486
0x00001486      681c000000     push 0x1c
0x0000148b      e920feffff     jmp sym..plt
;-- imp.__freading:
0x00001490      ff25d25a2000   jmp qword [reloc.__freading]            ; [0x206f68:8]=0x1496
0x00001496      681d000000     push 0x1d
0x0000149b      e910feffff     jmp sym..plt
;-- imp.realloc:
0x000014a0      ff25ca5a2000   jmp qword [reloc.realloc]               ; [0x206f70:8]=0x14a6
0x000014a6      681e000000     push 0x1e
0x000014ab      e900feffff     jmp sym..plt
;-- imp.setlocale:
0x000014b0      ff25c25a2000   jmp qword [reloc.setlocale]             ; [0x206f78:8]=0x14b6
0x000014b6      681f000000     push 0x1f
0x000014bb      e9f0fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x000014c0      ff25ba5a2000   jmp qword [reloc.__printf_chk]          ; [0x206f80:8]=0x14c6
0x000014c6      6820000000     push 0x20                               ; "@"
0x000014cb      e9e0fdffff     jmp sym..plt
;-- imp.chmod:
0x000014d0      ff25b25a2000   jmp qword [reloc.chmod]                 ; [0x206f88:8]=0x14d6
0x000014d6      6821000000     push 0x21                               ; '!'
0x000014db      e9d0fdffff     jmp sym..plt
;-- imp.error:
0x000014e0      ff25aa5a2000   jmp qword [reloc.error]                 ; [0x206f90:8]=0x14e6
0x000014e6      6822000000     push 0x22                               ; '"'
0x000014eb      e9c0fdffff     jmp sym..plt
;-- imp.fseeko:
0x000014f0      ff25a25a2000   jmp qword [reloc.fseeko]                ; [0x206f98:8]=0x14f6
0x000014f6      6823000000     push 0x23                               ; '#'
0x000014fb      e9b0fdffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001500      ff259a5a2000   jmp qword [reloc.__cxa_atexit]          ; [0x206fa0:8]=0x1506
0x00001506      6824000000     push 0x24                               ; '$'
0x0000150b      e9a0fdffff     jmp sym..plt
;-- imp.exit:
0x00001510      ff25925a2000   jmp qword [reloc.exit]                  ; [0x206fa8:8]=0x1516
0x00001516      6825000000     push 0x25                               ; '%'
0x0000151b      e990fdffff     jmp sym..plt
;-- imp.fwrite:
0x00001520      ff258a5a2000   jmp qword [reloc.fwrite]                ; [0x206fb0:8]=0x1526 ; "&\x15"
0x00001526      6826000000     push 0x26                               ; '&'
0x0000152b      e980fdffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001530      ff25825a2000   jmp qword [reloc.__fprintf_chk]         ; [0x206fb8:8]=0x1536 ; "6\x15"
0x00001536      6827000000     push 0x27                               ; '''
0x0000153b      e970fdffff     jmp sym..plt
;-- imp.mbsinit:
0x00001540      ff257a5a2000   jmp qword [reloc.mbsinit]               ; [0x206fc0:8]=0x1546 ; "F\x15"
0x00001546      6828000000     push 0x28                               ; '('
0x0000154b      e960fdffff     jmp sym..plt
;-- imp.iswprint:
0x00001550      ff25725a2000   jmp qword [reloc.iswprint]              ; [0x206fc8:8]=0x1556 ; "V\x15"
0x00001556      6829000000     push 0x29                               ; ')'
0x0000155b      e950fdffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00001560      ff256a5a2000   jmp qword [reloc.__ctype_b_loc]         ; [0x206fd0:8]=0x1566 ; "f\x15"
0x00001566      682a000000     push 0x2a                               ; '*'
0x0000156b      e940fdffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001570      .qword 0x906600205a8225ff                              ; [13] -r-x section size 8 named .plt.got
0x00001578      0000           add byte [rax], al
0x0000157a      0000           add byte [rax], al
0x0000157c      0000           add byte [rax], al
0x0000157e      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x00001580      4157           push r15                                ; [14] -r-x section size 14206 named .text
0x00001582      4156           push r14
0x00001584      4155           push r13
0x00001586      4154           push r12
0x00001588      4c8d2df15520.  lea r13, obj.longopts                   ; 0x206b80 ; "JN"
0x0000158f      55             push rbp
0x00001590      53             push rbx
0x00001591      89fd           mov ebp, edi
0x00001593      4889f3         mov rbx, rsi
0x00001596      4531e4         xor r12d, r12d
0x00001599      4883ec08       sub rsp, 8
0x0000159d      488b3e         mov rdi, qword [rsi]
0x000015a0      e81b0e0000     call sym.set_program_name
0x000015a5      488d35354200.  lea rsi, [0x000057e1]
0x000015ac      bf06000000     mov edi, 6
0x000015b1      e8fafeffff     call sym.imp.setlocale
0x000015b6      488d35113800.  lea rsi, str.usr_local_share_locale     ; 0x4dce ; "/usr/local/share/locale"
0x000015bd      488d3de13700.  lea rdi, [0x00004da5]                   ; "coreutils"
0x000015c4      e877fdffff     call sym.imp.bindtextdomain
0x000015c9      488d3dd53700.  lea rdi, [0x00004da5]                   ; "coreutils"
0x000015d0      e84bfdffff     call sym.imp.textdomain
0x000015d5      488d3d840700.  lea rdi, sym.close_stdout               ; 0x1d60 ; "USH\x83\xec\bH\x8b=\x1bS "
0x000015dc      e80f370000     call sym.atexit
0x000015e1      488d150e3800.  lea rdx, [0x00004df6]                   ; "m:Z"
0x000015e8      4531c0         xor r8d, r8d
0x000015eb      4c89e9         mov rcx, r13
0x000015ee      4889de         mov rsi, rbx
0x000015f1      89ef           mov edi, ebp
0x000015f3      e898fdffff     call sym.imp.getopt_long
0x000015f8      83f8ff         cmp eax, 0xffffffff
0x000015fb      0f84a3000000   je 0x16a4
0x00001601      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x00001606      0f840d020000   je 0x1819
0x0000160c      7e1a           jle 0x1628
0x0000160e      83f85a         cmp eax, 0x5a
0x00001611      745d           je 0x1670
0x00001613      83f86d         cmp eax, 0x6d
0x00001616      0f85f3010000   jne 0x180f
0x0000161c      4c8b25755a20.  mov r12, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x207098:8]=0
0x00001623      ebbc           jmp 0x15e1
0x00001625      0f1f00         nop dword [rax]
0x00001628      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x0000162d      0f85dc010000   jne 0x180f
0x00001633      488b3d4e5a20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x207088:8]=0
0x0000163a      488b0dcf5920.  mov rcx, qword [obj.Version]            ; [0x207010:8]=0x51dc str.8.31
0x00001641      4c8d059e3700.  lea r8, str.David_MacKenzie             ; 0x4de6 ; "David MacKenzie"
0x00001648      488d15523700.  lea rdx, str.GNU_coreutils              ; 0x4da1 ; "GNU coreutils"
0x0000164f      488d35ce3600.  lea rsi, str.mkfifo                     ; 0x4d24 ; "mkfifo"
0x00001656      4531c9         xor r9d, r9d
0x00001659      31c0           xor eax, eax
0x0000165b      e8502f0000     call sym.version_etc
0x00001660      31ff           xor edi, edi
0x00001662      e8a9feffff     call sym.imp.exit
0x00001667      660f1f840000.  nop word [rax + rax]
0x00001670      48833d205a20.  cmp qword [obj.optarg], 0               ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x207098:8]=0
0x00001678      0f8463ffffff   je 0x15e1
0x0000167e      488d35db3a00.  lea rsi, str.warning:_ignoring___context__it_requires_an_SELinux_SMACK_enabled_kernel ; 0x5160 ; "warning: ignoring --context; it requires an SELinux/SMACK-enabled kernel"
0x00001685      31ff           xor edi, edi
0x00001687      ba05000000     mov edx, 5
0x0000168c      e8bffcffff     call sym.imp.dcgettext
0x00001691      31f6           xor esi, esi
0x00001693      4889c2         mov rdx, rax
0x00001696      31ff           xor edi, edi
0x00001698      31c0           xor eax, eax
0x0000169a      e841feffff     call sym.imp.error
0x0000169f      e93dffffff     jmp 0x15e1
0x000016a4      392de6592000   cmp dword [obj.optind], ebp             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x207090:4]=0
0x000016aa      0f843e010000   je 0x17ee
0x000016b0      4d85e4         test r12, r12
0x000016b3      0f842a010000   je 0x17e3
0x000016b9      4c89e7         mov rdi, r12
0x000016bc      e84f070000     call sym.mode_compile
0x000016c1      4885c0         test rax, rax
0x000016c4      4989c6         mov r14, rax
0x000016c7      0f8477010000   je 0x1844
0x000016cd      31ff           xor edi, edi
0x000016cf      e84cfdffff     call sym.imp.umask
0x000016d4      4189c5         mov r13d, eax
0x000016d7      89c7           mov edi, eax
0x000016d9      e842fdffff     call sym.imp.umask
0x000016de      4531c0         xor r8d, r8d
0x000016e1      4489ea         mov edx, r13d
0x000016e4      31f6           xor esi, esi
0x000016e6      4c89f1         mov rcx, r14
0x000016e9      bfb6010000     mov edi, 0x1b6
0x000016ee      e85d0b0000     call sym.mode_adjust
0x000016f3      4c89f7         mov rdi, r14
0x000016f6      4189c5         mov r13d, eax
0x000016f9      e8c2fbffff     call sym.imp.free
0x000016fe      41f7c500feff.  test r13d, 0xfffffe00                   ; 4294966784
0x00001705      0f8515010000   jne 0x1820
0x0000170b      8b057f592000   mov eax, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x207090:4]=0
0x00001711      4531f6         xor r14d, r14d
0x00001714      39c5           cmp ebp, eax
0x00001716      7f38           jg 0x1750
0x00001718      e991000000     jmp 0x17ae
0x0000171d      4d85e4         test r12, r12
0x00001720      741b           je 0x173d
0x00001722      486305675920.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x207090:4]=0
0x00001729      4489ee         mov esi, r13d
0x0000172c      488b3cc3       mov rdi, qword [rbx + rax*8]
0x00001730      e89bfdffff     call sym.imp.chmod
0x00001735      85c0           test eax, eax
0x00001737      0f8580000000   jne 0x17bd
0x0000173d      8b054d592000   mov eax, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x207090:4]=0
0x00001743      83c001         add eax, 1
0x00001746      39e8           cmp eax, ebp
0x00001748      890542592000   mov dword [obj.optind], eax             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x207090:4]=0
0x0000174e      7d5e           jge 0x17ae
0x00001750      4898           cdqe
0x00001752      4489ee         mov esi, r13d
0x00001755      488b3cc3       mov rdi, qword [rbx + rax*8]
0x00001759      e8b2fcffff     call sym.imp.mkfifo
0x0000175e      85c0           test eax, eax
0x00001760      74bb           je 0x171d
0x00001762      486305275920.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x207090:4]=0
0x00001769      bf04000000     mov edi, 4
0x0000176e      488b34c3       mov rsi, qword [rbx + rax*8]
0x00001772      e889260000     call sym.quotearg_style
0x00001777      488d35993600.  lea rsi, str.cannot_create_fifo__s      ; 0x4e17 ; "cannot create fifo %s"
0x0000177e      4989c7         mov r15, rax
0x00001781      ba05000000     mov edx, 5
0x00001786      31ff           xor edi, edi
0x00001788      e8c3fbffff     call sym.imp.dcgettext
0x0000178d      4989c6         mov r14, rax
0x00001790      e84bfbffff     call sym.imp.__errno_location
0x00001795      8b30           mov esi, dword [rax]
0x00001797      4c89f2         mov rdx, r14
0x0000179a      4c89f9         mov rcx, r15
0x0000179d      31ff           xor edi, edi
0x0000179f      31c0           xor eax, eax
0x000017a1      41be01000000   mov r14d, 1
0x000017a7      e834fdffff     call sym.imp.error
0x000017ac      eb8f           jmp 0x173d
0x000017ae      5a             pop rdx
0x000017af      4489f0         mov eax, r14d
0x000017b2      5b             pop rbx
0x000017b3      5d             pop rbp
0x000017b4      415c           pop r12
0x000017b6      415d           pop r13
0x000017b8      415e           pop r14
0x000017ba      415f           pop r15
0x000017bc      c3             ret
0x000017bd      486305cc5820.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x207090:4]=0
0x000017c4      bf04000000     mov edi, 4
0x000017c9      488b34c3       mov rsi, qword [rbx + rax*8]
0x000017cd      e82e260000     call sym.quotearg_style
0x000017d2      ba05000000     mov edx, 5
0x000017d7      4989c7         mov r15, rax
0x000017da      488d354c3600.  lea rsi, str.cannot_set_permissions_of__s ; 0x4e2d ; "cannot set permissions of %s"
0x000017e1      eba3           jmp 0x1786
0x000017e3      41bdb6010000   mov r13d, 0x1b6
0x000017e9      e91dffffff     jmp 0x170b
0x000017ee      488d35053600.  lea rsi, str.missing_operand            ; 0x4dfa ; "missing operand"
0x000017f5      ba05000000     mov edx, 5
0x000017fa      31ff           xor edi, edi
0x000017fc      e84ffbffff     call sym.imp.dcgettext
0x00001801      31f6           xor esi, esi
0x00001803      4889c2         mov rdx, rax
0x00001806      31ff           xor edi, edi
0x00001808      31c0           xor eax, eax
0x0000180a      e8d1fcffff     call sym.imp.error
0x0000180f      bf01000000     mov edi, 1
0x00001814      e867010000     call sym.usage
0x00001819      31ff           xor edi, edi
0x0000181b      e860010000     call sym.usage
0x00001820      488d35893900.  lea rsi, str.mode_must_specify_only_file_permission_bits ; 0x51b0 ; "mode must specify only file permission bits"
0x00001827      ba05000000     mov edx, 5
0x0000182c      31ff           xor edi, edi
0x0000182e      e81dfbffff     call sym.imp.dcgettext
0x00001833      31f6           xor esi, esi
0x00001835      4889c2         mov rdx, rax
0x00001838      bf01000000     mov edi, 1
0x0000183d      31c0           xor eax, eax
0x0000183f      e89cfcffff     call sym.imp.error
0x00001844      488d35bf3500.  lea rsi, str.invalid_mode               ; 0x4e0a ; "invalid mode"
0x0000184b      ba05000000     mov edx, 5
0x00001850      31ff           xor edi, edi
0x00001852      e8f9faffff     call sym.imp.dcgettext
0x00001857      31f6           xor esi, esi
0x00001859      4889c2         mov rdx, rax
0x0000185c      bf01000000     mov edi, 1
0x00001861      31c0           xor eax, eax
0x00001863      e878fcffff     call sym.imp.error
0x00001868      0f1f84000000.  nop dword [rax + rax]
;-- entry0:
;-- _start:
;-- rip:
0x00001870      31ed           xor ebp, ebp
0x00001872      4989d1         mov r9, rdx
0x00001875      5e             pop rsi
0x00001876      4889e2         mov rdx, rsp
0x00001879      4883e4f0       and rsp, 0xfffffffffffffff0
0x0000187d      50             push rax
0x0000187e      54             push rsp
0x0000187f      4c8d055a3400.  lea r8, sym.__libc_csu_fini             ; 0x4ce0
0x00001886      488d0de33300.  lea rcx, sym.__libc_csu_init            ; 0x4c70 ; "AWAVI\x89\xd7AUATL\x8d%\xee\x1e "
0x0000188d      488d3decfcff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1580 ; "AWAVAUATL\x8d-\xf1U "
0x00001894      ff1546572000   call qword [reloc.__libc_start_main]    ; [0x206fe0:8]=0
0x0000189a      f4             hlt
0x0000189b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x000018a0      488d3dd95720.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x207080
0x000018a7      55             push rbp
0x000018a8      488d05d15720.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x207080
0x000018af      4839f8         cmp rax, rdi
0x000018b2      4889e5         mov rbp, rsp
0x000018b5      7419           je 0x18d0
0x000018b7      488b051a5720.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x206fd8:8]=0
0x000018be      4885c0         test rax, rax
0x000018c1      740d           je 0x18d0
0x000018c3      5d             pop rbp
0x000018c4      ffe0           jmp rax
0x000018c6      662e0f1f8400.  nop word cs:[rax + rax]
0x000018d0      5d             pop rbp
0x000018d1      c3             ret
0x000018d2      0f1f4000       nop dword [rax]
0x000018d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x000018e0      488d3d995720.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x207080
0x000018e7      488d35925720.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x207080
0x000018ee      55             push rbp
0x000018ef      4829fe         sub rsi, rdi
0x000018f2      4889e5         mov rbp, rsp
0x000018f5      48c1fe03       sar rsi, 3
0x000018f9      4889f0         mov rax, rsi
0x000018fc      48c1e83f       shr rax, 0x3f
0x00001900      4801c6         add rsi, rax
0x00001903      48d1fe         sar rsi, 1
0x00001906      7418           je 0x1920
0x00001908      488b05e15620.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x206ff0:8]=0
0x0000190f      4885c0         test rax, rax
0x00001912      740c           je 0x1920
0x00001914      5d             pop rbp
0x00001915      ffe0           jmp rax
0x00001917      660f1f840000.  nop word [rax + rax]
0x00001920      5d             pop rbp
0x00001921      c3             ret
0x00001922      0f1f4000       nop dword [rax]
0x00001926      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00001930      803d91572000.  cmp byte [obj.completed.7697], 0        ; [0x2070c8:1]=0
0x00001937      752f           jne 0x1968
0x00001939      48833db75620.  cmp qword [reloc.__cxa_finalize], 0     ; [0x206ff8:8]=0
0x00001941      55             push rbp
0x00001942      4889e5         mov rbp, rsp
0x00001945      740c           je 0x1953
0x00001947      488b3dba5620.  mov rdi, qword [obj.__dso_handle]       ; [0x207008:8]=0x207008 obj.__dso_handle
0x0000194e      e81dfcffff     call sym..plt.got
0x00001953      e848ffffff     call sym.deregister_tm_clones
0x00001958      c60569572000.  mov byte [obj.completed.7697], 1        ; [0x2070c8:1]=0
0x0000195f      5d             pop rbp
0x00001960      c3             ret
0x00001961      0f1f80000000.  nop dword [rax]
0x00001968      f3c3           ret
0x0000196a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00001970      55             push rbp
0x00001971      4889e5         mov rbp, rsp
0x00001974      5d             pop rbp
0x00001975      e966ffffff     jmp sym.register_tm_clones
0x0000197a      660f1f440000   nop word [rax + rax]
;-- usage:
0x00001980      4155           push r13                                ; /src:49
0x00001982      4154           push r12
0x00001984      ba05000000     mov edx, 5                              ; /src:51
0x00001989      55             push rbp                                ; /src:49
0x0000198a      53             push rbx
0x0000198b      89fd           mov ebp, edi
0x0000198d      4881ec880000.  sub rsp, 0x88
0x00001994      488b1d455720.  mov rbx, qword [obj.program_name]       ; [0x2070e0:8]=0
0x0000199b      64488b042528.  mov rax, qword fs:[0x28]
0x000019a4      4889442478     mov qword [rsp + 0x78], rax
0x000019a9      31c0           xor eax, eax
0x000019ab      85ff           test edi, edi                           ; /src:50
0x000019ad      742e           je 0x19dd
0x000019af      488d35aa3400.  lea rsi, str.Try___s___help__for_more_information. ; /src:51 ; 0x4e60 ; "Try '%s --help' for more information.\n"
0x000019b6      31ff           xor edi, edi
0x000019b8      e893f9ffff     call sym.imp.dcgettext
0x000019bd      488b3dfc5620.  mov rdi, qword [obj.stderr]             ; .//coreutils-8.31/lib:97 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2070c0:8]=0
0x000019c4      4889c2         mov rdx, rax
0x000019c7      4889d9         mov rcx, rbx
0x000019ca      be01000000     mov esi, 1
0x000019cf      31c0           xor eax, eax
0x000019d1      e85afbffff     call sym.imp.__fprintf_chk
0x000019d6      89ef           mov edi, ebp                            ; /src:73
0x000019d8      e833fbffff     call sym.imp.exit
0x000019dd      488d35a43400.  lea rsi, str.Usage:__s__OPTION_..._NAME... ; /src:54 ; 0x4e88 ; "Usage: %s [OPTION]... NAME...\n"
0x000019e4      31ff           xor edi, edi
0x000019e6      e865f9ffff     call sym.imp.dcgettext
0x000019eb      4889da         mov rdx, rbx                            ; .//coreutils-8.31/lib:104
0x000019ee      4889c6         mov rsi, rax
0x000019f1      bf01000000     mov edi, 1
0x000019f6      31c0           xor eax, eax
0x000019f8      e8c3faffff     call sym.imp.__printf_chk
0x000019fd      488b1d845620.  mov rbx, qword [obj.stdout]             ; /src:55 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x207088:8]=0
0x00001a04      488d359d3400.  lea rsi, str.Create_named_pipes__FIFOs__with_the_given_NAMEs. ; 0x4ea8 ; "Create named pipes (FIFOs) with the given NAMEs.\n"
0x00001a0b      ba05000000     mov edx, 5
0x00001a10      31ff           xor edi, edi
0x00001a12      e839f9ffff     call sym.imp.dcgettext
0x00001a17      4889de         mov rsi, rbx
0x00001a1a      4889c7         mov rdi, rax
0x00001a1d      e8cef9ffff     call sym.imp.fputs_unlocked
0x00001a22      488b1d5f5620.  mov rbx, qword [obj.stdout]             ; ../coreutils-8.31/src/fifo.c:587 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x207088:8]=0
0x00001a29      488d35b03400.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0x4ee0 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x00001a30      ba05000000     mov edx, 5
0x00001a35      31ff           xor edi, edi
0x00001a37      e814f9ffff     call sym.imp.dcgettext
0x00001a3c      4889de         mov rsi, rbx
0x00001a3f      4889c7         mov rdi, rax
0x00001a42      e8a9f9ffff     call sym.imp.fputs_unlocked
0x00001a47      488b1d3a5620.  mov rbx, qword [obj.stdout]             ; /src:61 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x207088:8]=0
0x00001a4e      488d35db3400.  lea rsi, str.m____mode_MODE____set_file_permission_bits_to_MODE__not_a_rw___umask ; 0x4f30 ; "  -m, --mode=MODE    set file permission bits to MODE, not a=rw - umask\n"
0x00001a55      ba05000000     mov edx, 5
0x00001a5a      31ff           xor edi, edi
0x00001a5c      e8eff8ffff     call sym.imp.dcgettext
0x00001a61      4889de         mov rsi, rbx
0x00001a64      4889c7         mov rdi, rax
0x00001a67      e884f9ffff     call sym.imp.fputs_unlocked
0x00001a6c      488b1d155620.  mov rbx, qword [obj.stdout]             ; /src:64 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x207088:8]=0
0x00001a73      488d35063500.  lea rsi, str.Z___________________set_the_SELinux_security_context_to_default_type__________context__CTX___like__Z__or_if_CTX_is_specified_then_set_the_SELinux___________________________or_SMACK_security_context_to_CTX ; 0x4f80 ; "  -Z                   set the SELinux security context to default type\n      --context[=CTX]  like -Z, or if CTX is specified then set the SELinux\n                         or SMACK security context to CTX\n"
0x00001a7a      ba05000000     mov edx, 5
0x00001a7f      31ff           xor edi, edi
0x00001a81      e8caf8ffff     call sym.imp.dcgettext
0x00001a86      4889de         mov rsi, rbx
0x00001a89      4889c7         mov rdi, rax
0x00001a8c      e85ff9ffff     call sym.imp.fputs_unlocked
0x00001a91      488b1df05520.  mov rbx, qword [obj.stdout]             ; /src:69 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x207088:8]=0
0x00001a98      488d35b13500.  lea rsi, str.help_____display_this_help_and_exit ; 0x5050 ; "      --help     display this help and exit\n"
0x00001a9f      ba05000000     mov edx, 5
0x00001aa4      31ff           xor edi, edi
0x00001aa6      e8a5f8ffff     call sym.imp.dcgettext
0x00001aab      4889de         mov rsi, rbx
0x00001aae      4889c7         mov rdi, rax
0x00001ab1      e83af9ffff     call sym.imp.fputs_unlocked
0x00001ab6      488b1dcb5520.  mov rbx, qword [obj.stdout]             ; /src:70 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x207088:8]=0
0x00001abd      488d35bc3500.  lea rsi, str.version__output_version_information_and_exit ; 0x5080 ; "      --version  output version information and exit\n"
0x00001ac4      ba05000000     mov edx, 5
0x00001ac9      31ff           xor edi, edi
0x00001acb      e880f8ffff     call sym.imp.dcgettext
0x00001ad0      4889de         mov rsi, rbx
0x00001ad3      4889c7         mov rdi, rax
0x00001ad6      488d1d473200.  lea rbx, str.mkfifo                     ; 0x4d24 ; "mkfifo"
0x00001add      e80ef9ffff     call sym.imp.fputs_unlocked
0x00001ae2      488d05423200.  lea rax, [0x00004d2b]                   ; ../coreutils-8.31/src/fifo.c:633 ; "["
0x00001ae9      488d0d7c3200.  lea rcx, str.sha256sum                  ; 0x4d6c ; "sha256sum"
0x00001af0      48c744246000.  mov qword [rsp + 0x60], 0
0x00001af9      48c744246800.  mov qword [rsp + 0x68], 0
0x00001b02      4889e2         mov rdx, rsp                            ; ../coreutils-8.31/src/fifo.c:644
0x00001b05      48890424       mov qword [rsp], rax                    ; ../coreutils-8.31/src/fifo.c:633
0x00001b09      488d051d3200.  lea rax, str.test_invocation            ; 0x4d2d ; "test invocation"
0x00001b10      48894c2430     mov qword [rsp + 0x30], rcx
0x00001b15      488d0d5a3200.  lea rcx, str.sha384sum                  ; 0x4d76 ; "sha384sum"
0x00001b1c      4889442408     mov qword [rsp + 8], rax
0x00001b21      488d057d3200.  lea rax, [0x00004da5]                   ; "coreutils"
0x00001b28      48894c2440     mov qword [rsp + 0x40], rcx
0x00001b2d      488d0d4c3200.  lea rcx, str.sha512sum                  ; 0x4d80 ; "sha512sum"
0x00001b34      4889442410     mov qword [rsp + 0x10], rax
0x00001b39      488d05fd3100.  lea rax, str.Multi_call_invocation      ; 0x4d3d ; "Multi-call invocation"
0x00001b40      48894c2450     mov qword [rsp + 0x50], rcx
0x00001b45      4889442418     mov qword [rsp + 0x18], rax
0x00001b4a      488d05023200.  lea rax, str.sha224sum                  ; 0x4d53 ; "sha224sum"
0x00001b51      4889442420     mov qword [rsp + 0x20], rax
0x00001b56      488d05003200.  lea rax, str.sha2_utilities             ; 0x4d5d ; "sha2 utilities"
0x00001b5d      4889442428     mov qword [rsp + 0x28], rax
0x00001b62      4889442438     mov qword [rsp + 0x38], rax
0x00001b67      4889442448     mov qword [rsp + 0x48], rax
0x00001b6c      4889442458     mov qword [rsp + 0x58], rax
0x00001b71      0f1f80000000.  nop dword [rax]
0x00001b78      4883c210       add rdx, 0x10                           ; ../coreutils-8.31/src/fifo.c:647
0x00001b7c      488b3a         mov rdi, qword [rdx]                    ; ../coreutils-8.31/src/fifo.c:646
0x00001b7f      4885ff         test rdi, rdi
0x00001b82      7413           je 0x1b97
0x00001b84      b907000000     mov ecx, 7
0x00001b89      4889de         mov rsi, rbx
0x00001b8c      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001b8e      0f97c0         seta al
0x00001b91      1c00           sbb al, 0
0x00001b93      84c0           test al, al
0x00001b95      75e1           jne 0x1b78
0x00001b97      4c8b6208       mov r12, qword [rdx + 8]                ; ../coreutils-8.31/src/fifo.c:649
0x00001b9b      31ff           xor edi, edi                            ; ../coreutils-8.31/src/fifo.c:652
0x00001b9d      ba05000000     mov edx, 5
0x00001ba2      488d35e13100.  lea rsi, str.s_online_help:___s         ; 0x4d8a ; "\n%s online help: <%s>\n"
0x00001ba9      4d85e4         test r12, r12                           ; ../coreutils-8.31/src/fifo.c:649
0x00001bac      0f84c1000000   je 0x1c73
0x00001bb2      e899f7ffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/src/fifo.c:652
0x00001bb7      488d0dfa3400.  lea rcx, str.https:__www.gnu.org_software_coreutils ; .//coreutils-8.31/lib:104 ; 0x50b8 ; "https://www.gnu.org/software/coreutils/"
0x00001bbe      488d15dc3100.  lea rdx, str.GNU_coreutils              ; 0x4da1 ; "GNU coreutils"
0x00001bc5      4889c6         mov rsi, rax
0x00001bc8      bf01000000     mov edi, 1
0x00001bcd      31c0           xor eax, eax
0x00001bcf      e8ecf8ffff     call sym.imp.__printf_chk
0x00001bd4      31f6           xor esi, esi                            ; ../coreutils-8.31/src/fifo.c:656
0x00001bd6      bf05000000     mov edi, 5
0x00001bdb      e8d0f8ffff     call sym.imp.setlocale
0x00001be0      4885c0         test rax, rax                           ; ../coreutils-8.31/src/fifo.c:657
0x00001be3      741c           je 0x1c01
0x00001be5      488d35c33100.  lea rsi, [0x00004daf]                   ; "en_"
0x00001bec      ba03000000     mov edx, 3
0x00001bf1      4889c7         mov rdi, rax
0x00001bf4      e8f7f6ffff     call sym.imp.strncmp
0x00001bf9      85c0           test eax, eax
0x00001bfb      0f8507010000   jne 0x1d08
0x00001c01      488d35ab3100.  lea rsi, str.Full_documentation___s_s   ; ../coreutils-8.31/src/fifo.c:666 ; 0x4db3 ; "Full documentation <%s%s>\n"
0x00001c08      31ff           xor edi, edi
0x00001c0a      ba05000000     mov edx, 5
0x00001c0f      e83cf7ffff     call sym.imp.dcgettext
0x00001c14      488d0d093100.  lea rcx, str.mkfifo                     ; .//coreutils-8.31/lib:104 ; 0x4d24 ; "mkfifo"
0x00001c1b      488d15963400.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x50b8 ; "https://www.gnu.org/software/coreutils/"
0x00001c22      4889c6         mov rsi, rax
0x00001c25      bf01000000     mov edi, 1
0x00001c2a      31c0           xor eax, eax
0x00001c2c      e88ff8ffff     call sym.imp.__printf_chk
0x00001c31      4939dc         cmp r12, rbx                            ; ../coreutils-8.31/src/fifo.c:668
0x00001c34      488d0d0c3100.  lea rcx, [0x00004d47]                   ; " invocation"
0x00001c3b      488d1d9f3b00.  lea rbx, [0x000057e1]
0x00001c42      480f44d9       cmove rbx, rcx
0x00001c46      488d35db3400.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x5128 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00001c4d      31ff           xor edi, edi
0x00001c4f      ba05000000     mov edx, 5
0x00001c54      e8f7f6ffff     call sym.imp.dcgettext
0x00001c59      4889d9         mov rcx, rbx                            ; .//coreutils-8.31/lib:104
0x00001c5c      4889c6         mov rsi, rax
0x00001c5f      4c89e2         mov rdx, r12
0x00001c62      bf01000000     mov edi, 1
0x00001c67      31c0           xor eax, eax
0x00001c69      e852f8ffff     call sym.imp.__printf_chk
0x00001c6e      e963fdffff     jmp 0x19d6
0x00001c73      e8d8f6ffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/src/fifo.c:652
0x00001c78      488d0d393400.  lea rcx, str.https:__www.gnu.org_software_coreutils ; .//coreutils-8.31/lib:104 ; 0x50b8 ; "https://www.gnu.org/software/coreutils/"
0x00001c7f      488d151b3100.  lea rdx, str.GNU_coreutils              ; 0x4da1 ; "GNU coreutils"
0x00001c86      4889c6         mov rsi, rax
0x00001c89      bf01000000     mov edi, 1
0x00001c8e      31c0           xor eax, eax
0x00001c90      e82bf8ffff     call sym.imp.__printf_chk
0x00001c95      31f6           xor esi, esi                            ; ../coreutils-8.31/src/fifo.c:656
0x00001c97      bf05000000     mov edi, 5
0x00001c9c      e80ff8ffff     call sym.imp.setlocale
0x00001ca1      4885c0         test rax, rax                           ; ../coreutils-8.31/src/fifo.c:657
0x00001ca4      7418           je 0x1cbe
0x00001ca6      488d35023100.  lea rsi, [0x00004daf]                   ; "en_"
0x00001cad      ba03000000     mov edx, 3
0x00001cb2      4889c7         mov rdi, rax
0x00001cb5      e836f6ffff     call sym.imp.strncmp
0x00001cba      85c0           test eax, eax
0x00001cbc      7543           jne 0x1d01
0x00001cbe      488d35ee3000.  lea rsi, str.Full_documentation___s_s   ; ../coreutils-8.31/src/fifo.c:666 ; 0x4db3 ; "Full documentation <%s%s>\n"
0x00001cc5      ba05000000     mov edx, 5
0x00001cca      31ff           xor edi, edi
0x00001ccc      4c8d25513000.  lea r12, str.mkfifo                     ; ../coreutils-8.31/src/fifo.c:643 ; 0x4d24 ; "mkfifo"
0x00001cd3      488d1d6d3000.  lea rbx, [0x00004d47]                   ; ../coreutils-8.31/src/fifo.c:668 ; " invocation"
0x00001cda      e871f6ffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/src/fifo.c:666
0x00001cdf      488d0d3e3000.  lea rcx, str.mkfifo                     ; .//coreutils-8.31/lib:104 ; 0x4d24 ; "mkfifo"
0x00001ce6      488d15cb3300.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x50b8 ; "https://www.gnu.org/software/coreutils/"
0x00001ced      4889c6         mov rsi, rax
0x00001cf0      bf01000000     mov edi, 1
0x00001cf5      31c0           xor eax, eax
0x00001cf7      e8c4f7ffff     call sym.imp.__printf_chk
0x00001cfc      e945ffffff     jmp 0x1c46
0x00001d01      4c8d251c3000.  lea r12, str.mkfifo                     ; ../coreutils-8.31/src/fifo.c:643 ; 0x4d24 ; "mkfifo"
0x00001d08      4c8b2d795320.  mov r13, qword [obj.stdout]             ; ../coreutils-8.31/src/fifo.c:663 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x207088:8]=0
0x00001d0f      488d35ca3300.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x50e0 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x00001d16      31ff           xor edi, edi
0x00001d18      ba05000000     mov edx, 5
0x00001d1d      e82ef6ffff     call sym.imp.dcgettext
0x00001d22      4c89ee         mov rsi, r13
0x00001d25      4889c7         mov rdi, rax
0x00001d28      e8c3f6ffff     call sym.imp.fputs_unlocked
0x00001d2d      e9cffeffff     jmp 0x1c01
0x00001d32      662e0f1f8400.  nop word cs:[rax + rax]
0x00001d3c      0f1f4000       nop dword [rax]
;-- close_stdout_set_file_name:
0x00001d40      48893d915320.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x2070d8:8]=0
0x00001d47      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00001d48      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00001d50      40883d795320.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x2070d0:1]=0
0x00001d57      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00001d58      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00001d60      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00001d61      53             push rbx
0x00001d62      4883ec08       sub rsp, 8
0x00001d66      488b3d1b5320.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x207088:8]=0
0x00001d6d      e8be2c0000     call sym.close_stream
0x00001d72      85c0           test eax, eax
0x00001d74      7416           je 0x1d8c
0x00001d76      e865f5ffff     call sym.imp.__errno_location
0x00001d7b      803d4e532000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x2070d0:1]=0
0x00001d82      4889c3         mov rbx, rax
0x00001d85      741c           je 0x1da3
0x00001d87      833820         cmp dword [rax], 0x20
0x00001d8a      7517           jne 0x1da3
0x00001d8c      488b3d2d5320.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2070c0:8]=0
0x00001d93      e8982c0000     call sym.close_stream
0x00001d98      85c0           test eax, eax
0x00001d9a      7546           jne 0x1de2
0x00001d9c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00001da0      5b             pop rbx
0x00001da1      5d             pop rbp
0x00001da2      c3             ret
0x00001da3      488d35373400.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x51e1 ; "write error"
0x00001daa      31ff           xor edi, edi
0x00001dac      ba05000000     mov edx, 5
0x00001db1      e89af5ffff     call sym.imp.dcgettext
0x00001db6      488b3d1b5320.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x2070d8:8]=0
0x00001dbd      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00001dc0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00001dc3      7428           je 0x1ded
0x00001dc5      e806210000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x00001dca      8b33           mov esi, dword [rbx]
0x00001dcc      488d151a3400.  lea rdx, str.s:__s                      ; 0x51ed ; "%s: %s"
0x00001dd3      4889c1         mov rcx, rax
0x00001dd6      4989e8         mov r8, rbp
0x00001dd9      31ff           xor edi, edi
0x00001ddb      31c0           xor eax, eax
0x00001ddd      e8fef6ffff     call sym.imp.error
0x00001de2      8b3d30522000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x207018:4]=1
0x00001de8      e813f5ffff     call sym.imp._exit
0x00001ded      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x00001def      488d15fb3300.  lea rdx, [0x000051f1]                   ; "%s"
0x00001df6      4889c1         mov rcx, rax
0x00001df9      31ff           xor edi, edi
0x00001dfb      31c0           xor eax, eax
0x00001dfd      e8def6ffff     call sym.imp.error
0x00001e02      ebde           jmp 0x1de2
0x00001e04      662e0f1f8400.  nop word cs:[rax + rax]
0x00001e0e      6690           nop
;-- mode_compile:
0x00001e10      55             push rbp                                ; ../coreutils-8.31/lib/modechange.c:135
0x00001e11      53             push rbx
0x00001e12      4889fb         mov rbx, rdi
0x00001e15      4883ec08       sub rsp, 8
0x00001e19      0fbe07         movsx eax, byte [rdi]                   ; ../coreutils-8.31/lib/modechange.c:141
0x00001e1c      8d50d0         lea edx, [rax - 0x30]
0x00001e1f      80fa07         cmp dl, 7
0x00001e22      0f86b0000000   jbe 0x1ed8
0x00001e28      84c0           test al, al                             ; ../coreutils-8.31/lib/modechange.c:169
0x00001e2a      4889f9         mov rcx, rdi
0x00001e2d      bf01000000     mov edi, 1                              ; ../coreutils-8.31/lib/modechange.c:168
0x00001e32      7427           je 0x1e5b                               ; ../coreutils-8.31/lib/modechange.c:169
0x00001e34      0f1f4000       nop dword [rax]
0x00001e38      89c2           mov edx, eax                            ; ../coreutils-8.31/lib/modechange.c:170
0x00001e3a      83e2ef         and edx, 0xffffffef                     ; 4294967279
0x00001e3d      80fa2d         cmp dl, 0x2d
0x00001e40      0f94c2         sete dl
0x00001e43      3c2b           cmp al, 0x2b
0x00001e45      0f94c0         sete al
0x00001e48      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/modechange.c:169
0x00001e4c      09d0           or eax, edx                             ; ../coreutils-8.31/lib/modechange.c:170
0x00001e4e      0fb6c0         movzx eax, al
0x00001e51      4801c7         add rdi, rax
0x00001e54      0fb601         movzx eax, byte [rcx]                   ; ../coreutils-8.31/lib/modechange.c:169
0x00001e57      84c0           test al, al
0x00001e59      75dd           jne 0x1e38
0x00001e5b      ba10000000     mov edx, 0x10                           ; ../coreutils-8.31/lib/xalloc.h:101
0x00001e60      31c9           xor ecx, ecx
0x00001e62      4889d0         mov rax, rdx
0x00001e65      48f7e7         mul rdi
0x00001e68      0f8011030000   jo 0x217f
0x00001e6e      4885c0         test rax, rax
0x00001e71      0f8812030000   js 0x2189
0x00001e77      4885c9         test rcx, rcx
0x00001e7a      0f8509030000   jne 0x2189
0x00001e80      48c1e704       shl rdi, 4                              ; ../coreutils-8.31/lib/xalloc.h:103
0x00001e84      488d2d693300.  lea rbp, [0x000051f4]                   ; ../coreutils-8.31/lib/modechange.c:259
0x00001e8b      e880280000     call sym.xmalloc                        ; ../coreutils-8.31/lib/xalloc.h:103
0x00001e90      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/modechange.c:138
0x00001e92      4531db         xor r11d, r11d                          ; ../coreutils-8.31/lib/modechange.c:179
0x00001e95      440fb60b       movzx r9d, byte [rbx]                   ; ../coreutils-8.31/lib/modechange.c:183
0x00001e99      4180f961       cmp r9b, 0x61
0x00001e9d      0f844d020000   je 0x20f0                               ; ../coreutils-8.31/lib/modechange.c:181
0x00001ea3      7e6b           jle 0x1f10
0x00001ea5      4180f96f       cmp r9b, 0x6f
0x00001ea9      0f8471020000   je 0x2120
0x00001eaf      4180f975       cmp r9b, 0x75
0x00001eb3      0f8457020000   je 0x2110
0x00001eb9      4180f967       cmp r9b, 0x67
0x00001ebd      0f843d020000   je 0x2100
0x00001ec3      4889c7         mov rdi, rax
0x00001ec6      e8f5f3ffff     call sym.imp.free
0x00001ecb      31c0           xor eax, eax
0x00001ecd      4883c408       add rsp, 8
0x00001ed1      5b             pop rbx                                 ; ../coreutils-8.31/lib/modechange.c:182
0x00001ed2      5d             pop rbp
0x00001ed3      c3             ret
0x00001ed4      0f1f4000       nop dword [rax]
0x00001ed8      4889fa         mov rdx, rdi
0x00001edb      31ed           xor ebp, ebp
0x00001edd      eb10           jmp 0x1eef
0x00001edf      90             nop
0x00001ee0      0fbe02         movsx eax, byte [rdx]
0x00001ee3      8d48d0         lea ecx, [rax - 0x30]
0x00001ee6      80f907         cmp cl, 7
0x00001ee9      0f8741020000   ja 0x2130
0x00001eef      8d6ce8d0       lea ebp, [rax + rbp*8 - 0x30]
0x00001ef3      4883c201       add rdx, 1
0x00001ef7      81fdff0f0000   cmp ebp, 0xfff
0x00001efd      76e1           jbe 0x1ee0
0x00001eff      4883c408       add rsp, 8
0x00001f03      31c0           xor eax, eax
0x00001f05      5b             pop rbx                                 ; ../coreutils-8.31/lib/modechange.c:123
0x00001f06      5d             pop rbp
0x00001f07      c3             ret
0x00001f08      0f1f84000000.  nop dword [rax + rax]
0x00001f10      4180f92d       cmp r9b, 0x2d
0x00001f14      740c           je 0x1f22
0x00001f16      4180f93d       cmp r9b, 0x3d
0x00001f1a      7406           je 0x1f22
0x00001f1c      4180f92b       cmp r9b, 0x2b
0x00001f20      75a1           jne 0x1ec3
0x00001f22      488d7e01       lea rdi, [rsi + 1]
0x00001f26      48c1e604       shl rsi, 4
0x00001f2a      4801c6         add rsi, rax
0x00001f2d      eb65           jmp 0x1f94
0x00001f2f      90             nop
0x00001f30      80fa6f         cmp dl, 0x6f
0x00001f33      4c8d4302       lea r8, [rbx + 2]
0x00001f37      0f8493010000   je 0x20d0
0x00001f3d      80fa75         cmp dl, 0x75
0x00001f40      41bac0010000   mov r10d, 0x1c0
0x00001f46      0f85d4000000   jne 0x2020
0x00001f4c      44880e         mov byte [rsi], r9b
0x00001f4f      c6460103       mov byte [rsi + 1], 3
0x00001f53      440fb64b02     movzx r9d, byte [rbx + 2]
0x00001f58      44895e04       mov dword [rsi + 4], r11d
0x00001f5c      4c89c3         mov rbx, r8
0x00001f5f      44895608       mov dword [rsi + 8], r10d
0x00001f63      4489d2         mov edx, r10d
0x00001f66      4421da         and edx, r11d
0x00001f69      4585db         test r11d, r11d
0x00001f6c      440f45d2       cmovne r10d, edx
0x00001f70      4489ca         mov edx, r9d
0x00001f73      4489560c       mov dword [rsi + 0xc], r10d
0x00001f77      4883c610       add rsi, 0x10
0x00001f7b      83e2ef         and edx, 0xffffffef                     ; 4294967279
0x00001f7e      488d4f01       lea rcx, [rdi + 1]
0x00001f82      80fa2d         cmp dl, 0x2d
0x00001f85      740a           je 0x1f91
0x00001f87      4180f92b       cmp r9b, 0x2b
0x00001f8b      0f85ff010000   jne 0x2190
0x00001f91      4889cf         mov rdi, rcx
0x00001f94      0fbe5301       movsx edx, byte [rbx + 1]
0x00001f98      488d4b01       lea rcx, [rbx + 1]
0x00001f9c      80fa67         cmp dl, 0x67
0x00001f9f      0f843b010000   je 0x20e0
0x00001fa5      7f89           jg 0x1f30
0x00001fa7      448d42d0       lea r8d, [rdx - 0x30]
0x00001fab      4180f807       cmp r8b, 7
0x00001faf      776f           ja 0x2020
0x00001fb1      4531c0         xor r8d, r8d
0x00001fb4      0f1f4000       nop dword [rax]
0x00001fb8      468d44c2d0     lea r8d, [rdx + r8*8 - 0x30]
0x00001fbd      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/modechange.c:32
0x00001fc1      4181f8ff0f00.  cmp r8d, 0xfff                          ; ../coreutils-8.31/lib/modechange.c:-32
0x00001fc8      0f87f5feffff   ja 0x1ec3                               ; ../coreutils-8.31/lib/modechange.c:-157
0x00001fce      0fbe11         movsx edx, byte [rcx]
0x00001fd1      448d52d0       lea r10d, [rdx - 0x30]
0x00001fd5      4180fa07       cmp r10b, 7
0x00001fd9      76dd           jbe 0x1fb8
0x00001fdb      4585db         test r11d, r11d
0x00001fde      0f85dffeffff   jne 0x1ec3
0x00001fe4      84d2           test dl, dl
0x00001fe6      7409           je 0x1ff1                               ; ../coreutils-8.31/lib/modechange.c:-130
0x00001fe8      80fa2c         cmp dl, 0x2c
0x00001feb      0f85d2feffff   jne 0x1ec3                              ; ../coreutils-8.31/lib/modechange.c:-127
0x00001ff1      44880e         mov byte [rsi], r9b
0x00001ff4      c6460101       mov byte [rsi + 1], 1
0x00001ff8      4189d1         mov r9d, edx
0x00001ffb      c74604ff0f00.  mov dword [rsi + 4], 0xfff              ; [0xfff:4]=0x700
0x00002002      44894608       mov dword [rsi + 8], r8d
0x00002006      4889cb         mov rbx, rcx
0x00002009      41bbff0f0000   mov r11d, 0xfff
0x0000200f      41baff0f0000   mov r10d, 0xfff                         ; ../coreutils-8.31/lib/modechange.c:-115
0x00002015      e956ffffff     jmp 0x1f70
0x0000201a      660f1f440000   nop word [rax + rax]
0x00002020      448d42a8       lea r8d, [rdx - 0x58]
0x00002024      4531d2         xor r10d, r10d
0x00002027      bb01000000     mov ebx, 1
0x0000202c      4180f820       cmp r8b, 0x20                           ; "@"
0x00002030      7737           ja 0x2069
0x00002032      660f1f440000   nop word [rax + rax]
0x00002038      450fb6c0       movzx r8d, r8b
0x0000203c      4e63448500     movsxd r8, dword [rbp + r8*4]
0x00002041      4901e8         add r8, rbp
0x00002044      41ffe0         jmp r8
0x00002047      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/modechange.c:-118
0x00002050      bb02000000     mov ebx, 2
0x00002055      0f1f00         nop dword [rax]
0x00002058      4883c101       add rcx, 1
0x0000205c      0fb611         movzx edx, byte [rcx]
0x0000205f      448d42a8       lea r8d, [rdx - 0x58]                   ; ../coreutils-8.31/lib/modechange.c:-107
0x00002063      4180f820       cmp r8b, 0x20                           ; "@"
0x00002067      76cf           jbe 0x2038
0x00002069      44880e         mov byte [rsi], r9b
0x0000206c      885e01         mov byte [rsi + 1], bl
0x0000206f      4189d1         mov r9d, edx                            ; ../coreutils-8.31/lib/modechange.c:-111
0x00002072      44895e04       mov dword [rsi + 4], r11d
0x00002076      44895608       mov dword [rsi + 8], r10d               ; ../coreutils-8.31/lib/modechange.c:-110
0x0000207a      4889cb         mov rbx, rcx
0x0000207d      e9e1feffff     jmp 0x1f63
0x00002082      660f1f440000   nop word [rax + rax]
0x00002088      4183ca49       or r10d, 0x49
0x0000208c      ebca           jmp 0x2058
0x0000208e      6690           nop
0x00002090      4180ca92       or r10b, 0x92
0x00002094      ebc2           jmp 0x2058
0x00002096      662e0f1f8400.  nop word cs:[rax + rax]
0x000020a0      4181ca000200.  or r10d, 0x200
0x000020a7      ebaf           jmp 0x2058
0x000020a9      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/modechange.c:-140
0x000020b0      4181ca000c00.  or r10d, 0xc00
0x000020b7      eb9f           jmp 0x2058
0x000020b9      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/modechange.c:-203
0x000020c0      4181ca240100.  or r10d, 0x124
0x000020c7      eb8f           jmp 0x2058
0x000020c9      0f1f80000000.  nop dword [rax]
0x000020d0      41ba07000000   mov r10d, 7
0x000020d6      e971feffff     jmp 0x1f4c                              ; ../coreutils-8.31/lib/modechange.c:-197
0x000020db      0f1f440000     nop dword [rax + rax]
0x000020e0      4c8d4302       lea r8, [rbx + 2]
0x000020e4      41ba38000000   mov r10d, 0x38                          ; '8'
0x000020ea      e95dfeffff     jmp 0x1f4c
0x000020ef      90             nop                                     ; ../coreutils-8.31/lib/modechange.c:-230
0x000020f0      41bbff0f0000   mov r11d, 0xfff
0x000020f6      4883c301       add rbx, 1
0x000020fa      e996fdffff     jmp 0x1e95                              ; ../coreutils-8.31/lib/modechange.c:-224
0x000020ff      90             nop
0x00002100      4181cb380400.  or r11d, 0x438
0x00002107      ebed           jmp 0x20f6                              ; ../coreutils-8.31/lib/modechange.c:-272
0x00002109      0f1f80000000.  nop dword [rax]
0x00002110      4181cbc00900.  or r11d, 0x9c0
0x00002117      ebdd           jmp 0x20f6
0x00002119      0f1f80000000.  nop dword [rax]
0x00002120      4181cb070200.  or r11d, 0x207
0x00002127      ebcd           jmp 0x20f6
0x00002129      0f1f80000000.  nop dword [rax]
0x00002130      84c0           test al, al                             ; ../coreutils-8.31/lib/modechange.c:-267
0x00002132      0f85c7fdffff   jne 0x1eff
0x00002138      4829da         sub rdx, rbx
0x0000213b      89eb           mov ebx, ebp
0x0000213d      b8ff0f0000     mov eax, 0xfff
0x00002142      81e3000c0000   and ebx, 0xc00
0x00002148      bf20000000     mov edi, 0x20                           ; ../coreutils-8.31/lib/xalloc.h:-284 ; "@"
0x0000214d      81cbff030000   or ebx, 0x3ff
0x00002153      4883fa05       cmp rdx, 5
0x00002157      0f4dd8         cmovge ebx, eax
0x0000215a      e8b1250000     call sym.xmalloc
0x0000215f      ba3d010000     mov edx, 0x13d
0x00002164      c74004ff0f00.  mov dword [rax + 4], 0xfff              ; [0xfff:4]=0x700
0x0000216b      896808         mov dword [rax + 8], ebp
0x0000216e      668910         mov word [rax], dx
0x00002171      89580c         mov dword [rax + 0xc], ebx              ; ../coreutils-8.31/lib/modechange.c:-199
0x00002174      c6401100       mov byte [rax + 0x11], 0
0x00002178      4883c408       add rsp, 8
0x0000217c      5b             pop rbx
0x0000217d      5d             pop rbp
0x0000217e      c3             ret
0x0000217f      b901000000     mov ecx, 1
0x00002184      e9e5fcffff     jmp 0x1e6e
0x00002189      e8d2270000     call sym.xalloc_die
0x0000218e      6690           nop
0x00002190      4180f92c       cmp r9b, 0x2c
0x00002194      750c           jne 0x21a2
0x00002196      4883c301       add rbx, 1
0x0000219a      4889fe         mov rsi, rdi
0x0000219d      e9f0fcffff     jmp 0x1e92
0x000021a2      4584c9         test r9b, r9b
0x000021a5      0f8518fdffff   jne 0x1ec3
0x000021ab      48c1e704       shl rdi, 4
0x000021af      c644380100     mov byte [rax + rdi + 1], 0
0x000021b4      e914fdffff     jmp 0x1ecd
0x000021b9      0f1f80000000.  nop dword [rax]
;-- mode_create_from_ref:
0x000021c0      53             push rbx
0x000021c1      4889fe         mov rsi, rdi                            ; ../coreutils-8.31/lib/modechange.c:-401
0x000021c4      bf01000000     mov edi, 1                              ; ../coreutils-8.31/lib/modechange.c:-398
0x000021c9      4881eca00000.  sub rsp, 0xa0
0x000021d0      4889e2         mov rdx, rsp
0x000021d3      64488b042528.  mov rax, qword fs:[0x28]
0x000021dc      488984249800.  mov qword [rsp + 0x98], rax
0x000021e4      31c0           xor eax, eax
0x000021e6      e865f2ffff     call sym.imp.__xstat
0x000021eb      85c0           test eax, eax
0x000021ed      7551           jne 0x2240
0x000021ef      8b5c2418       mov ebx, dword [rsp + 0x18]
0x000021f3      bf20000000     mov edi, 0x20                           ; "@"
0x000021f8      e813250000     call sym.xmalloc
0x000021fd      ba3d010000     mov edx, 0x13d
0x00002202      c74004ff0f00.  mov dword [rax + 4], 0xfff              ; [0xfff:4]=0x700
0x00002209      c7400cff0f00.  mov dword [rax + 0xc], 0xfff            ; [0xfff:4]=0x700
0x00002210      668910         mov word [rax], dx
0x00002213      895808         mov dword [rax + 8], ebx
0x00002216      c6401100       mov byte [rax + 0x11], 0
0x0000221a      488b8c249800.  mov rcx, qword [rsp + 0x98]             ; ../coreutils-8.31/lib/modechange.c:-175
0x00002222      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000222b      7517           jne 0x2244
0x0000222d      4881c4a00000.  add rsp, 0xa0
0x00002234      5b             pop rbx
0x00002235      c3             ret
0x00002236      662e0f1f8400.  nop word cs:[rax + rax]
0x00002240      31c0           xor eax, eax
0x00002242      ebd6           jmp 0x221a
0x00002244      e837f1ffff     call sym.imp.__stack_chk_fail
0x00002249      0f1f80000000.  nop dword [rax]
;-- mode_adjust:
0x00002250      440fb65101     movzx r10d, byte [rcx + 1]
0x00002255      89f8           mov eax, edi
0x00002257      25ff0f0000     and eax, 0xfff                          ; ../coreutils-8.31/lib/modechange.c:-115
0x0000225c      4584d2         test r10b, r10b
0x0000225f      0f844b010000   je 0x23b0
0x00002265      4080fe01       cmp sil, 1
0x00002269      4154           push r12
0x0000226b      55             push rbp                                ; ../coreutils-8.31/lib/modechange.c:-164
0x0000226c      53             push rbx
0x0000226d      19db           sbb ebx, ebx
0x0000226f      400fb6ee       movzx ebp, sil                          ; ../coreutils-8.31/lib/modechange.c:-166
0x00002273      f7d3           not ebx
0x00002275      4531db         xor r11d, r11d                          ; ../coreutils-8.31/lib/modechange.c:-164
0x00002278      81e3000c0000   and ebx, 0xc00                          ; ../coreutils-8.31/lib/modechange.c:-165
0x0000227e      eb3a           jmp 0x22ba
0x00002280      4489cf         mov edi, r9d
0x00002283      09d7           or edi, edx
0x00002285      f7d7           not edi
0x00002287      21fe           and esi, edi
0x00002289      4180fc2d       cmp r12b, 0x2d
0x0000228d      0f840d010000   je 0x23a0                               ; ../coreutils-8.31/lib/modechange.c:-151
0x00002293      4180fc3d       cmp r12b, 0x3d
0x00002297      0f84ae000000   je 0x234b                               ; ../coreutils-8.31/lib/modechange.c:-150
0x0000229d      4180fc2b       cmp r12b, 0x2b
0x000022a1      7505           jne 0x22a8
0x000022a3      4109f3         or r11d, esi
0x000022a6      09f0           or eax, esi
0x000022a8      4883c110       add rcx, 0x10
0x000022ac      440fb65101     movzx r10d, byte [rcx + 1]
0x000022b1      4584d2         test r10b, r10b
0x000022b4      0f84b2000000   je 0x236c
0x000022ba      448b490c       mov r9d, dword [rcx + 0xc]
0x000022be      8b7904         mov edi, dword [rcx + 4]
0x000022c1      8b7108         mov esi, dword [rcx + 8]
0x000022c4      41f7d1         not r9d
0x000022c7      4121d9         and r9d, ebx
0x000022ca      4180fa02       cmp r10b, 2
0x000022ce      0f84ac000000   je 0x2380
0x000022d4      4180fa03       cmp r10b, 3
0x000022d8      753e           jne 0x2318
0x000022da      21c6           and esi, eax
0x000022dc      4189f2         mov r10d, esi
0x000022df      4181e2240100.  and r10d, 0x124
0x000022e6      4183fa01       cmp r10d, 1
0x000022ea      4519d2         sbb r10d, r10d
0x000022ed      41f7d2         not r10d
0x000022f0      4181e2240100.  and r10d, 0x124
0x000022f7      4589d4         mov r12d, r10d
0x000022fa      4180cc92       or r12b, 0x92
0x000022fe      40f6c692       test sil, 0x92
0x00002302      450f45d4       cmovne r10d, r12d
0x00002306      4589d4         mov r12d, r10d
0x00002309      4183cc49       or r12d, 0x49
0x0000230d      40f6c649       test sil, 0x49                          ; ../coreutils-8.31/lib/modechange.c:-168
0x00002311      450f45d4       cmovne r10d, r12d
0x00002315      4409d6         or esi, r10d
0x00002318      4589ca         mov r10d, r9d
0x0000231b      85ff           test edi, edi
0x0000231d      440fb621       movzx r12d, byte [rcx]                  ; ../coreutils-8.31/lib/modechange.c:-105
0x00002321      41f7d2         not r10d
0x00002324      0f8456ffffff   je 0x2280
0x0000232a      4121fa         and r10d, edi
0x0000232d      4421d6         and esi, r10d
0x00002330      4180fc2d       cmp r12b, 0x2d
0x00002334      746a           je 0x23a0                               ; ../coreutils-8.31/lib/modechange.c:-139
0x00002336      4180fc3d       cmp r12b, 0x3d
0x0000233a      0f855dffffff   jne 0x229d
0x00002340      f7d7           not edi
0x00002342      4109f9         or r9d, edi
0x00002345      4589ca         mov r10d, r9d
0x00002348      41f7d2         not r10d
0x0000234b      4181e2ff0f00.  and r10d, 0xfff
0x00002352      4883c110       add rcx, 0x10
0x00002356      4421c8         and eax, r9d
0x00002359      4509d3         or r11d, r10d
0x0000235c      440fb65101     movzx r10d, byte [rcx + 1]
0x00002361      09f0           or eax, esi                             ; ../coreutils-8.31/lib/modechange.c:-170
0x00002363      4584d2         test r10b, r10b
0x00002366      0f854effffff   jne 0x22ba                              ; ../coreutils-8.31/lib/modechange.c:-231
0x0000236c      4d85c0         test r8, r8
0x0000236f      7403           je 0x2374
0x00002371      458918         mov dword [r8], r11d
0x00002374      5b             pop rbx
0x00002375      5d             pop rbp
0x00002376      415c           pop r12
0x00002378      c3             ret
0x00002379      0f1f80000000.  nop dword [rax]
0x00002380      4189c4         mov r12d, eax
0x00002383      4189f2         mov r10d, esi
0x00002386      4183e449       and r12d, 0x49
0x0000238a      4183ca49       or r10d, 0x49
0x0000238e      4109ec         or r12d, ebp
0x00002391      410f45f2       cmovne esi, r10d
0x00002395      eb81           jmp 0x2318
0x00002397      660f1f840000.  nop word [rax + rax]
0x000023a0      4109f3         or r11d, esi
0x000023a3      f7d6           not esi
0x000023a5      21f0           and eax, esi
0x000023a7      e9fcfeffff     jmp 0x22a8
0x000023ac      0f1f4000       nop dword [rax]
0x000023b0      4531db         xor r11d, r11d
0x000023b3      4d85c0         test r8, r8
0x000023b6      7403           je 0x23bb
0x000023b8      458918         mov dword [r8], r11d
0x000023bb      f3c3           ret
0x000023bd      0f1f00         nop dword [rax]
;-- set_program_name:
0x000023c0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x000023c3      53             push rbx
0x000023c4      7477           je 0x243d                               ; ../coreutils-8.31/lib/progname.c:51
0x000023c6      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x000023cb      4889fb         mov rbx, rdi
0x000023ce      e8ddefffff     call sym.imp.strrchr
0x000023d3      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x000023d6      7455           je 0x242d
0x000023d8      4c8d4001       lea r8, [rax + 1]
0x000023dc      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x000023df      4829da         sub rdx, rbx
0x000023e2      4883fa06       cmp rdx, 6
0x000023e6      7e45           jle 0x242d
0x000023e8      488d70fa       lea rsi, [rax - 6]
0x000023ec      488d3dbd2e00.  lea rdi, str..libs                      ; 0x52b0 ; "/.libs/"
0x000023f3      b907000000     mov ecx, 7
0x000023f8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000023fa      0f97c2         seta dl
0x000023fd      80da00         sbb dl, 0
0x00002400      84d2           test dl, dl
0x00002402      7529           jne 0x242d
0x00002404      488d3dad2e00.  lea rdi, [0x000052b8]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x0000240b      b903000000     mov ecx, 3
0x00002410      4c89c6         mov rsi, r8
0x00002413      4c89c3         mov rbx, r8
0x00002416      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002418      0f97c2         seta dl
0x0000241b      80da00         sbb dl, 0
0x0000241e      84d2           test dl, dl
0x00002420      750b           jne 0x242d
0x00002422      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00002426      48891d534c20.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x207080:8]=0
0x0000242d      48891dac4c20.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x2070e0:8]=0
0x00002434      48891d654c20.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x2070a0:8]=0
0x0000243b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x0000243c      c3             ret
0x0000243d      488b0d7c4c20.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2070c0:8]=0
0x00002444      488d3d2d2e00.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x5278 ; "A NULL argv[0] was passed through an exec system call.\n"
0x0000244b      ba37000000     mov edx, 0x37                           ; '7'
0x00002450      be01000000     mov esi, 1
0x00002455      e8c6f0ffff     call sym.imp.fwrite
0x0000245a      e871eeffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x0000245f      90             nop
;-- gettext_quote.part.1:
0x00002460      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00002461      53             push rbx
0x00002462      4889fd         mov rbp, rdi
0x00002465      89f3           mov ebx, esi
0x00002467      4883ec08       sub rsp, 8
0x0000246b      e8a0260000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00002470      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00002473      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002476      80fa55         cmp dl, 0x55
0x00002479      7475           je 0x24f0
0x0000247b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x0000247e      7420           je 0x24a0
0x00002480      488d05442e00.  lea rax, str.l______l                   ; 0x52cb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u6a00\uffe0\uc3ff\uffd2\u98ff\uffe2\ua4ff\uffe0\u94ff\uffde\uf0ff\uffde\u45ff\uffdf\u8aff\uffdf\uc4ff\uffdf\uc4ff\uffdf\uc4ff\uffdf\u14ff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\u54ff\uffd6\u5cff\uffd5\u1cff\uffd5\ue4ff\uffd6\ud4ff\uffd6\uc4ff\uffd6\ub4ff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ua4ff\uffd6\u94ff\uffd6\u94ff\uffd6\u64ff\uffd6\u94ff\uffd6\u3cff\uffd6\u94ff\uffd6\uf7ff\uffd4\u94ff\uffd6\u94ff\uffd6\u94ff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u94ff\uffd6\u94ff\uffd6\u94ff\uffd6\u94ff\uffd6\uc7ff\uffd4\ufcff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u94ff\uffd6\u6cff\uffd5\u3cff\uffd6\u94ff\uffd6\u3cff\uffd6\u94ff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\uf7ff\uffd3\u94ff\uffd6\uf7ff\uffd3\u64ff\uffd6\ue8ff\uffd5\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d5\u28ff\uffd7\u10ff\uffd7\uc0ff\uffd5\xff\uffd7\ua8ff\uffd5\ue8ff\uffd6\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\ud0ff\uffd6\ub8ff\uffd6\ub8ff\uffd6\ua0ff\uffd6\ub8ff\uffd6\u88ff\uffd6\ub8ff\uffd6\U010003d2\ub8ff\uffd6\ub8ff\uffd6\ub8ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\ub8ff\uffd6\ub8ff\uffd6\ub8ff\uffd6\ub8ff\uffd6\uc8ff\uffd2\U010003d4\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\ub8ff\uffd6\u88ff\uffd5\u88ff\uffd6\ub8ff\uffd6\u88ff\uffd6\ub8ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\U010003d1\ub8ff\uffd6\U010003d1\ua0ff\uffd6\xff"
0x00002487      488d153f2e00.  lea rdx, [0x000052cd]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u6a00\uffe0\uc3ff\uffd2\u98ff\uffe2\ua4ff\uffe0\u94ff\uffde\uf0ff\uffde\u45ff\uffdf\u8aff\uffdf\uc4ff\uffdf\uc4ff\uffdf\uc4ff\uffdf"
0x0000248e      83fb09         cmp ebx, 9
0x00002491      480f45c2       cmovne rax, rdx
0x00002495      4883c408       add rsp, 8
0x00002499      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x0000249a      5d             pop rbp
0x0000249b      c3             ret
0x0000249c      0f1f4000       nop dword [rax]
0x000024a0      0fb65001       movzx edx, byte [rax + 1]
0x000024a4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000024a7      80fa42         cmp dl, 0x42
0x000024aa      75d4           jne 0x2480
0x000024ac      80780231       cmp byte [rax + 2], 0x31
0x000024b0      75ce           jne 0x2480
0x000024b2      80780338       cmp byte [rax + 3], 0x38
0x000024b6      75c8           jne 0x2480
0x000024b8      80780430       cmp byte [rax + 4], 0x30
0x000024bc      75c2           jne 0x2480
0x000024be      80780533       cmp byte [rax + 5], 0x33
0x000024c2      75bc           jne 0x2480
0x000024c4      80780630       cmp byte [rax + 6], 0x30
0x000024c8      75b6           jne 0x2480
0x000024ca      80780700       cmp byte [rax + 7], 0
0x000024ce      75b0           jne 0x2480
0x000024d0      807d0060       cmp byte [rbp], 0x60
0x000024d4      488d05e92d00.  lea rax, [0x000052c4]
0x000024db      488d15e62d00.  lea rdx, [0x000052c8]
0x000024e2      480f45c2       cmovne rax, rdx
0x000024e6      4883c408       add rsp, 8
0x000024ea      5b             pop rbx
0x000024eb      5d             pop rbp
0x000024ec      c3             ret
0x000024ed      0f1f00         nop dword [rax]
0x000024f0      0fb65001       movzx edx, byte [rax + 1]
0x000024f4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000024f7      80fa54         cmp dl, 0x54
0x000024fa      7584           jne 0x2480
0x000024fc      0fb65002       movzx edx, byte [rax + 2]
0x00002500      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002503      80fa46         cmp dl, 0x46
0x00002506      0f8574ffffff   jne 0x2480
0x0000250c      8078032d       cmp byte [rax + 3], 0x2d
0x00002510      0f856affffff   jne 0x2480
0x00002516      80780438       cmp byte [rax + 4], 0x38
0x0000251a      0f8560ffffff   jne 0x2480
0x00002520      80780500       cmp byte [rax + 5], 0
0x00002524      0f8556ffffff   jne 0x2480
0x0000252a      807d0060       cmp byte [rbp], 0x60
0x0000252e      488d05872d00.  lea rax, [0x000052bc]                   ; "\u2018"
0x00002535      488d15842d00.  lea rdx, [0x000052c0]                   ; "\u2019"
0x0000253c      480f45c2       cmovne rax, rdx
0x00002540      4883c408       add rsp, 8
0x00002544      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00002545      5d             pop rbp
0x00002546      c3             ret
0x00002547      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00002550      4157           push r15
0x00002552      4156           push r14
0x00002554      4589c7         mov r15d, r8d
0x00002557      4155           push r13
0x00002559      4154           push r12
0x0000255b      4989fe         mov r14, rdi
0x0000255e      55             push rbp
0x0000255f      53             push rbx
0x00002560      4489cb         mov ebx, r9d
0x00002563      4989f5         mov r13, rsi
0x00002566      4889cd         mov rbp, rcx
0x00002569      83e302         and ebx, 2
0x0000256c      4881ecb80000.  sub rsp, 0xb8
0x00002573      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x0000257b      4889542410     mov qword [rsp + 0x10], rdx
0x00002580      4489442408     mov dword [rsp + 8], r8d
0x00002585      44894c2478     mov dword [rsp + 0x78], r9d
0x0000258a      4889442420     mov qword [rsp + 0x20], rax
0x0000258f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00002597      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x0000259c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x000025a4      4889442460     mov qword [rsp + 0x60], rax
0x000025a9      64488b042528.  mov rax, qword fs:[0x28]
0x000025b2      48898424a800.  mov qword [rsp + 0xa8], rax
0x000025ba      31c0           xor eax, eax
0x000025bc      e89fedffff     call sym.imp.__ctype_get_mb_cur_max
0x000025c1      4183ff0a       cmp r15d, 0xa
0x000025c5      4889442458     mov qword [rsp + 0x58], rax
0x000025ca      0f87af110000   ja 0x377f
0x000025d0      488d0d492d00.  lea rcx, [0x00005320]                   ; "j\xe0\xff\xff\xc3\xd2\xff\xff\x98\xe2\xff\xff\xa4\xe0\xff\xff\x94\xde\xff\xff\xf0\xde\xff\xffE\xdf\xff\xff\x8a\xdf\xff\xff\xc4\xdf\xff\xff\xc4\xdf\xff\xff\xc4\xdf\xff\xff\x14\xd6\xff\xff\xfc\xd6\xff\xff\xfc\xd6\xff\xff\xfc\xd6\xff\xff\xfc\xd6\xff\xff\xfc\xd6\xff\xff\xfc\xd6\xff\xffT\xd6\xff\xff\\xd5\xff\xff\x1c\xd5\xff\xff\xe4\xd6\xff\xff\xd4\xd6\xff\xff\xc4\xd6\xff\xff\xb4\xd6\xff\xff\xfc\xd6\xff\xff\xfc\xd6\xff\xff\xfc\xd6\xff\xff\xfc\xd6\xff\xff\xfc\xd6\xff\xff\xfc\xd6\xff\xff\xfc\xd6\xff\xff\xfc\xd6\xff\xff\xfc\xd6\xff\xff\xfc\xd6\xff\xff\xfc\xd6\xff\xff\xfc\xd6\xff\xff\xfc\xd6\xff\xff\xfc\xd6\xff\xff\xfc\xd6\xff\xff\xfc\xd6\xff\xff\xfc\xd6\xff\xff\xfc\xd6\xff\xff\xa4\xd6\xff\xff\x94\xd6\xff\xff\x94\xd6\xff\xffd\xd6\xff\xff\x94\xd6\xff\xff<\xd6\xff\xff\x94\xd6\xff\xff\xf7\xd4\xff\xff\x94\xd6\xff\xff\x94\xd6\xff\xff\x94\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff\x94\xd6\xff\xff\x94\xd6\xff\xff\x94\xd6\xff\xff\x94\xd6\xff\xff\xc7\xd4\xff\xff\xfc\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff\x94\xd6\xff\xffl\xd5\xff\xff<\xd6\xff\xff\x94\xd6\xff\xff<\xd6\xff\xff\x94\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff<\xd6\xff\xff\xf7\xd3\xff\xff\x94\xd6\xff\xff\xf7\xd3\xff\xffd\xd6\xff\xff\xe8\xd5\xff\xff\xf8\xd4\xff\xff\xf8\xd4\xff\xff\xf8\xd4\xff\xff\xf8\xd4\xff\xff\xf8\xd4\xff\xff\xf8\xd4\xff\xff\xd8\xd5\xff\xff(\xd7\xff\xff\x10\xd7\xff\xff\xc0\xd5\xff\xff"
0x000025d7      4489fa         mov edx, r15d
0x000025da      48630491       movsxd rax, dword [rcx + rdx*4]
0x000025de      4801c8         add rax, rcx
0x000025e1      ffe0           jmp rax
0x000025e3      c644240e01     mov byte [rsp + 0xe], 1
0x000025e8      c644247c00     mov byte [rsp + 0x7c], 0
0x000025ed      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x000025f0      48c744245000.  mov qword [rsp + 0x50], 0
0x000025f9      c644240f01     mov byte [rsp + 0xf], 1
0x000025fe      c644240d00     mov byte [rsp + 0xd], 0
0x00002603      488d05c32c00.  lea rax, [0x000052cd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u6a00\uffe0\uc3ff\uffd2\u98ff\uffe2\ua4ff\uffe0\u94ff\uffde\uf0ff\uffde\u45ff\uffdf\u8aff\uffdf\uc4ff\uffdf\uc4ff\uffdf\uc4ff\uffdf"
0x0000260a      48c744241801.  mov qword [rsp + 0x18], 1
0x00002613      4531ff         xor r15d, r15d
0x00002616      c74424080200.  mov dword [rsp + 8], 2
0x0000261e      4889442448     mov qword [rsp + 0x48], rax
0x00002623      4531db         xor r11d, r11d
0x00002626      4889e8         mov rax, rbp
0x00002629      4589e0         mov r8d, r12d
0x0000262c      4c89dd         mov rbp, r11
0x0000262f      4989c3         mov r11, rax
0x00002632      660f1f440000   nop word [rax + rax]
0x00002638      4939eb         cmp r11, rbp
0x0000263b      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x0000263f      4983fbff       cmp r11, 0xffffffffffffffff
0x00002643      750d           jne 0x2652
0x00002645      488b442410     mov rax, qword [rsp + 0x10]
0x0000264a      803c2800       cmp byte [rax + rbp], 0
0x0000264e      410f95c4       setne r12b
0x00002652      4584e4         test r12b, r12b
0x00002655      0f8455060000   je 0x2cb0
0x0000265b      837c240802     cmp dword [rsp + 8], 2
0x00002660      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002665      4c8d0c2f       lea r9, [rdi + rbp]
0x00002669      0f95c0         setne al
0x0000266c      2244240d       and al, byte [rsp + 0xd]
0x00002670      4189c2         mov r10d, eax
0x00002673      0f84a7000000   je 0x2720
0x00002679      488b442418     mov rax, qword [rsp + 0x18]
0x0000267e      4885c0         test rax, rax
0x00002681      0f8429040000   je 0x2ab0
0x00002687      4983fbff       cmp r11, 0xffffffffffffffff
0x0000268b      488d5c0500     lea rbx, [rbp + rax]
0x00002690      752e           jne 0x26c0
0x00002692      4883f801       cmp rax, 1
0x00002696      7628           jbe 0x26c0
0x00002698      4488442438     mov byte [rsp + 0x38], r8b
0x0000269d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x000026a2      4c894c2428     mov qword [rsp + 0x28], r9
0x000026a7      e8c4ecffff     call sym.imp.strlen
0x000026ac      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x000026b2      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x000026b8      4989c3         mov r11, rax
0x000026bb      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x000026c0      4c39db         cmp rbx, r11
0x000026c3      4488542428     mov byte [rsp + 0x28], r10b
0x000026c8      0f87b2050000   ja 0x2c80
0x000026ce      488b542418     mov rdx, qword [rsp + 0x18]
0x000026d3      488b742448     mov rsi, qword [rsp + 0x48]
0x000026d8      4c89cf         mov rdi, r9
0x000026db      4c895c2440     mov qword [rsp + 0x40], r11
0x000026e0      4488442438     mov byte [rsp + 0x38], r8b
0x000026e5      4c894c2430     mov qword [rsp + 0x30], r9
0x000026ea      e8f1ecffff     call sym.imp.memcmp
0x000026ef      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x000026f1      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000026f6      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x000026fc      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00002701      0f8579050000   jne 0x2c80
0x00002707      807c240f00     cmp byte [rsp + 0xf], 0
0x0000270c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00002712      0f857d0f0000   jne 0x3695
0x00002718      0f1f84000000.  nop dword [rax + rax]
0x00002720      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00002724      80fb7e         cmp bl, 0x7e
0x00002727      0f871b030000   ja 0x2a48
0x0000272d      488d0d182c00.  lea rcx, [0x0000534c]
0x00002734      0fb6d3         movzx edx, bl
0x00002737      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000273b      4801c8         add rax, rcx
0x0000273e      ffe0           jmp rax
0x00002740      4531d2         xor r10d, r10d
0x00002743      4983fb01       cmp r11, 1
0x00002747      0f95c0         setne al
0x0000274a      4983fbff       cmp r11, 0xffffffffffffffff
0x0000274e      750c           jne 0x275c
0x00002750      488b442410     mov rax, qword [rsp + 0x10]
0x00002755      80780100       cmp byte [rax + 1], 0
0x00002759      0f95c0         setne al
0x0000275c      837c240802     cmp dword [rsp + 8], 2
0x00002761      0f94c2         sete dl
0x00002764      84c0           test al, al
0x00002766      0f844c020000   je 0x29b8
0x0000276c      4531e4         xor r12d, r12d
0x0000276f      31c0           xor eax, eax
0x00002771      0f1f80000000.  nop dword [rax]
0x00002778      807c240d01     cmp byte [rsp + 0xd], 1
0x0000277d      0f850f010000   jne 0x2892
0x00002783      84d2           test dl, dl
0x00002785      0f8507010000   jne 0x2892
0x0000278b      488b742420     mov rsi, qword [rsp + 0x20]
0x00002790      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00002793      7414           je 0x27a9
0x00002795      89da           mov edx, ebx
0x00002797      c0ea05         shr dl, 5
0x0000279a      0fb6d2         movzx edx, dl
0x0000279d      8b1496         mov edx, dword [rsi + rdx*4]
0x000027a0      0fa3da         bt edx, ebx
0x000027a3      0f824a010000   jb 0x28f3
0x000027a9      4584d2         test r10b, r10b
0x000027ac      0f8541010000   jne 0x28f3
0x000027b2      83f001         xor eax, 1
0x000027b5      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x000027b9      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x000027bc      84c0           test al, al
0x000027be      7420           je 0x27e0                               ; ../coreutils-8.31/lib/quotearg.c:338
0x000027c0      4d39fd         cmp r13, r15
0x000027c3      7605           jbe 0x27ca
0x000027c5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000027ca      498d4701       lea rax, [r15 + 1]
0x000027ce      4939c5         cmp r13, rax
0x000027d1      7606           jbe 0x27d9
0x000027d3      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000027d9      4983c702       add r15, 2
0x000027dd      4531c0         xor r8d, r8d
0x000027e0      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x000027e3      7304           jae 0x27e9                              ; ../coreutils-8.31/lib/quotearg.c:68
0x000027e5      43881c3e       mov byte [r14 + r15], bl
0x000027e9      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x000027ee      4983c701       add r15, 1
0x000027f2      b800000000     mov eax, 0
0x000027f7      4584e4         test r12b, r12b
0x000027fa      0f44f8         cmove edi, eax
0x000027fd      40887c240e     mov byte [rsp + 0xe], dil
0x00002802      e931feffff     jmp 0x2638
0x00002807      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00002810      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00002813      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00002817      83f802         cmp eax, 2
0x0000281a      0f84b8050000   je 0x2dd8
0x00002820      83f805         cmp eax, 5
0x00002823      0f846f050000   je 0x2d98
0x00002829      83f802         cmp eax, 2
0x0000282c      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00002831      0f94c2         sete dl
0x00002834      4531e4         xor r12d, r12d
0x00002837      31c0           xor eax, eax
0x00002839      e93affffff     jmp 0x2778
0x0000283e      6690           nop
0x00002840      4531d2         xor r10d, r10d
0x00002843      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00002848      0f8402050000   je 0x2d50
0x0000284e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00002853      31d2           xor edx, edx
0x00002855      31c0           xor eax, eax
0x00002857      bb27000000     mov ebx, 0x27                           ; '''
0x0000285c      e917ffffff     jmp 0x2778
0x00002861      0f1f80000000.  nop dword [rax]
0x00002868      ba09000000     mov edx, 9
0x0000286d      bb74000000     mov ebx, 0x74                           ; 't'
0x00002872      837c240802     cmp dword [rsp + 8], 2
0x00002877      0f94c0         sete al
0x0000287a      2244240f       and al, byte [rsp + 0xf]
0x0000287e      0f854a010000   jne 0x29ce
0x00002884      807c240d00     cmp byte [rsp + 0xd], 0
0x00002889      7565           jne 0x28f0
0x0000288b      89d3           mov ebx, edx
0x0000288d      4531e4         xor r12d, r12d
0x00002890      31c0           xor eax, eax
0x00002892      807c240f00     cmp byte [rsp + 0xf], 0
0x00002897      0f85eefeffff   jne 0x278b
0x0000289d      e907ffffff     jmp 0x27a9                              ; ../coreutils-8.31/lib/quotearg.c:210
0x000028a2      660f1f440000   nop word [rax + rax]
0x000028a8      ba08000000     mov edx, 8
0x000028ad      bb62000000     mov ebx, 0x62                           ; 'b'
0x000028b2      ebd0           jmp 0x2884
0x000028b4      0f1f4000       nop dword [rax]
0x000028b8      837c240802     cmp dword [rsp + 8], 2
0x000028bd      0f84cd030000   je 0x2c90
0x000028c3      807c240d00     cmp byte [rsp + 0xd], 0
0x000028c8      0f8412020000   je 0x2ae0
0x000028ce      807c240f00     cmp byte [rsp + 0xf], 0
0x000028d3      0f8407020000   je 0x2ae0
0x000028d9      48837c241800   cmp qword [rsp + 0x18], 0
0x000028df      0f85b6030000   jne 0x2c9b
0x000028e5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000028ea      660f1f440000   nop word [rax + rax]
0x000028f0      4531e4         xor r12d, r12d
0x000028f3      837c240802     cmp dword [rsp + 8], 2
0x000028f8      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x000028fb      807c240f00     cmp byte [rsp + 0xf], 0
0x00002900      89d0           mov eax, edx
0x00002902      0f8550080000   jne 0x3158
0x00002908      4489c0         mov eax, r8d
0x0000290b      83f001         xor eax, 1
0x0000290e      20d0           and al, dl
0x00002910      742f           je 0x2941
0x00002912      4d39fd         cmp r13, r15
0x00002915      7605           jbe 0x291c
0x00002917      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000291c      498d5701       lea rdx, [r15 + 1]
0x00002920      4939d5         cmp r13, rdx
0x00002923      7606           jbe 0x292b
0x00002925      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000292b      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x0000292f      4939d5         cmp r13, rdx
0x00002932      7606           jbe 0x293a
0x00002934      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000293a      4983c703       add r15, 3
0x0000293e      4189c0         mov r8d, eax
0x00002941      4d39fd         cmp r13, r15
0x00002944      7605           jbe 0x294b
0x00002946      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000294b      4983c701       add r15, 1
0x0000294f      4883c501       add rbp, 1
0x00002953      e988feffff     jmp 0x27e0
0x00002958      0f1f84000000.  nop dword [rax + rax]
0x00002960      807c240d00     cmp byte [rsp + 0xd], 0
0x00002965      0f85c8010000   jne 0x2b33
0x0000296b      31d2           xor edx, edx
0x0000296d      f644247801     test byte [rsp + 0x78], 1
0x00002972      0f8413ffffff   je 0x288b
0x00002978      4883c501       add rbp, 1
0x0000297c      e9b7fcffff     jmp 0x2638
0x00002981      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00002988      837c240802     cmp dword [rsp + 8], 2
0x0000298d      0f94c2         sete dl
0x00002990      31c0           xor eax, eax
0x00002992      e9e1fdffff     jmp 0x2778
0x00002997      660f1f840000.  nop word [rax + rax]
0x000029a0      ba07000000     mov edx, 7
0x000029a5      bb61000000     mov ebx, 0x61                           ; 'a'
0x000029aa      e9d5feffff     jmp 0x2884
0x000029af      90             nop
0x000029b0      837c240802     cmp dword [rsp + 8], 2
0x000029b5      0f94c2         sete dl
0x000029b8      4885ed         test rbp, rbp
0x000029bb      0f85abfdffff   jne 0x276c
0x000029c1      0fb644240f     movzx eax, byte [rsp + 0xf]
0x000029c6      20d0           and al, dl
0x000029c8      0f84aafdffff   je 0x2778
0x000029ce      4c89dd         mov rbp, r11
0x000029d1      c74424080200.  mov dword [rsp + 8], 2
0x000029d9      e9fb060000     jmp 0x30d9
0x000029de      6690           nop
0x000029e0      837c240802     cmp dword [rsp + 8], 2
0x000029e5      0f94c2         sete dl
0x000029e8      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x000029eb      ebd4           jmp 0x29c1
0x000029ed      0f1f00         nop dword [rax]
0x000029f0      837c240802     cmp dword [rsp + 8], 2
0x000029f5      bb20000000     mov ebx, 0x20                           ; "@"
0x000029fa      0f94c2         sete dl
0x000029fd      ebc2           jmp 0x29c1
0x000029ff      90             nop
0x00002a00      ba0d000000     mov edx, 0xd
0x00002a05      bb72000000     mov ebx, 0x72                           ; 'r'
0x00002a0a      e963feffff     jmp 0x2872
0x00002a0f      90             nop
0x00002a10      ba0c000000     mov edx, 0xc
0x00002a15      bb66000000     mov ebx, 0x66                           ; 'f'
0x00002a1a      e965feffff     jmp 0x2884
0x00002a1f      90             nop
0x00002a20      ba0b000000     mov edx, 0xb
0x00002a25      bb76000000     mov ebx, 0x76                           ; 'v'
0x00002a2a      e955feffff     jmp 0x2884
0x00002a2f      90             nop
0x00002a30      ba0a000000     mov edx, 0xa
0x00002a35      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x00002a3a      e933feffff     jmp 0x2872
0x00002a3f      90             nop
0x00002a40      4531d2         xor r10d, r10d
0x00002a43      0f1f440000     nop dword [rax + rax]
0x00002a48      48837c245801   cmp qword [rsp + 0x58], 1
0x00002a4e      0f85a4030000   jne 0x2df8
0x00002a54      4c895c2438     mov qword [rsp + 0x38], r11
0x00002a59      4488442430     mov byte [rsp + 0x30], r8b
0x00002a5e      4488542428     mov byte [rsp + 0x28], r10b
0x00002a63      e8f8eaffff     call sym.imp.__ctype_b_loc
0x00002a68      488b08         mov rcx, qword [rax]
0x00002a6b      0fb6d3         movzx edx, bl
0x00002a6e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00002a74      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x00002a7a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x00002a7f      bf01000000     mov edi, 1
0x00002a84      0fb70451       movzx eax, word [rcx + rdx*2]
0x00002a88      66250040       and ax, 0x4000
0x00002a8c      410f95c4       setne r12b
0x00002a90      0f94c0         sete al
0x00002a93      2244240d       and al, byte [rsp + 0xd]
0x00002a97      84c0           test al, al
0x00002a99      0f8592090000   jne 0x3431
0x00002a9f      837c240802     cmp dword [rsp + 8], 2
0x00002aa4      0f94c2         sete dl
0x00002aa7      e9ccfcffff     jmp 0x2778
0x00002aac      0f1f4000       nop dword [rax]
0x00002ab0      410fb619       movzx ebx, byte [r9]
0x00002ab4      80fb7e         cmp bl, 0x7e
0x00002ab7      7787           ja 0x2a40
0x00002ab9      488d0d882a00.  lea rcx, [0x00005548]
0x00002ac0      0fb6d3         movzx edx, bl
0x00002ac3      48630491       movsxd rax, dword [rcx + rdx*4]
0x00002ac7      4801c8         add rax, rcx
0x00002aca      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x00002acc      0f1f4000       nop dword [rax]
0x00002ad0      4531d2         xor r10d, r10d
0x00002ad3      807c240d00     cmp byte [rsp + 0xd], 0
0x00002ad8      0f85f0fdffff   jne 0x28ce
0x00002ade      6690           nop
0x00002ae0      ba5c000000     mov edx, 0x5c                           ; '\'
0x00002ae5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00002aea      e995fdffff     jmp 0x2884
0x00002aef      90             nop
0x00002af0      ba0c000000     mov edx, 0xc
0x00002af5      4531d2         xor r10d, r10d
0x00002af8      bb66000000     mov ebx, 0x66                           ; 'f'
0x00002afd      e982fdffff     jmp 0x2884
0x00002b02      660f1f440000   nop word [rax + rax]
0x00002b08      ba0a000000     mov edx, 0xa
0x00002b0d      4531d2         xor r10d, r10d
0x00002b10      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00002b15      e958fdffff     jmp 0x2872
0x00002b1a      660f1f440000   nop word [rax + rax]
0x00002b20      bb61000000     mov ebx, 0x61                           ; 'a'
0x00002b25      e9c6fdffff     jmp 0x28f0
0x00002b2a      660f1f440000   nop word [rax + rax]
0x00002b30      4531d2         xor r10d, r10d
0x00002b33      837c240802     cmp dword [rsp + 8], 2
0x00002b38      0f94c2         sete dl
0x00002b3b      807c240f00     cmp byte [rsp + 0xf], 0
0x00002b40      0f85940b0000   jne 0x36da
0x00002b46      4489c0         mov eax, r8d
0x00002b49      4c89f9         mov rcx, r15
0x00002b4c      83f001         xor eax, 1
0x00002b4f      20d0           and al, dl
0x00002b51      742d           je 0x2b80
0x00002b53      4d39fd         cmp r13, r15
0x00002b56      7605           jbe 0x2b5d
0x00002b58      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00002b5d      498d4f01       lea rcx, [r15 + 1]
0x00002b61      4939cd         cmp r13, rcx
0x00002b64      7606           jbe 0x2b6c
0x00002b66      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00002b6c      498d4f02       lea rcx, [r15 + 2]
0x00002b70      4939cd         cmp r13, rcx
0x00002b73      0f8730060000   ja 0x31a9
0x00002b79      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x00002b7d      4189c0         mov r8d, eax
0x00002b80      4939cd         cmp r13, rcx
0x00002b83      7605           jbe 0x2b8a
0x00002b85      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00002b8a      837c240802     cmp dword [rsp + 8], 2
0x00002b8f      4c8d7901       lea r15, [rcx + 1]
0x00002b93      0f8400060000   je 0x3199
0x00002b99      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00002b9d      4c39d8         cmp rax, r11
0x00002ba0      7319           jae 0x2bbb                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00002ba2      488b442410     mov rax, qword [rsp + 0x10]
0x00002ba7      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x00002bac      88442428       mov byte [rsp + 0x28], al
0x00002bb0      83e830         sub eax, 0x30
0x00002bb3      3c09           cmp al, 9
0x00002bb5      0f862e080000   jbe 0x33e9
0x00002bbb      4489e0         mov eax, r12d
0x00002bbe      bb30000000     mov ebx, 0x30                           ; '0'
0x00002bc3      4531e4         xor r12d, r12d
0x00002bc6      e9adfbffff     jmp 0x2778                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x00002bcb      0f1f440000     nop dword [rax + rax]
0x00002bd0      837c240802     cmp dword [rsp + 8], 2
0x00002bd5      4589d4         mov r12d, r10d
0x00002bd8      0f94c2         sete dl
0x00002bdb      4531d2         xor r10d, r10d
0x00002bde      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00002be0      e993fbffff     jmp 0x2778                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00002be5      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00002be8      837c240802     cmp dword [rsp + 8], 2
0x00002bed      0f94c2         sete dl
0x00002bf0      4531d2         xor r10d, r10d
0x00002bf3      e9c0fdffff     jmp 0x29b8
0x00002bf8      0f1f84000000.  nop dword [rax + rax]
0x00002c00      837c240802     cmp dword [rsp + 8], 2
0x00002c05      0f94c2         sete dl
0x00002c08      4531d2         xor r10d, r10d
0x00002c0b      4531e4         xor r12d, r12d
0x00002c0e      e9aefdffff     jmp 0x29c1
0x00002c13      0f1f440000     nop dword [rax + rax]
0x00002c18      837c240802     cmp dword [rsp + 8], 2
0x00002c1d      4589d4         mov r12d, r10d
0x00002c20      bb20000000     mov ebx, 0x20                           ; "@"
0x00002c25      0f94c2         sete dl
0x00002c28      4531d2         xor r10d, r10d
0x00002c2b      e991fdffff     jmp 0x29c1
0x00002c30      ba0d000000     mov edx, 0xd
0x00002c35      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00002c38      bb72000000     mov ebx, 0x72                           ; 'r'
0x00002c3d      e930fcffff     jmp 0x2872
0x00002c42      660f1f440000   nop word [rax + rax]
0x00002c48      bb76000000     mov ebx, 0x76                           ; 'v'
0x00002c4d      e99efcffff     jmp 0x28f0
0x00002c52      660f1f440000   nop word [rax + rax]
0x00002c58      ba09000000     mov edx, 9
0x00002c5d      4531d2         xor r10d, r10d
0x00002c60      bb74000000     mov ebx, 0x74                           ; 't'
0x00002c65      e908fcffff     jmp 0x2872
0x00002c6a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00002c70      bb62000000     mov ebx, 0x62                           ; 'b'
0x00002c75      e976fcffff     jmp 0x28f0
0x00002c7a      660f1f440000   nop word [rax + rax]
0x00002c80      4531d2         xor r10d, r10d
0x00002c83      e998faffff     jmp 0x2720
0x00002c88      0f1f84000000.  nop dword [rax + rax]
0x00002c90      807c240f00     cmp byte [rsp + 0xf], 0
0x00002c95      0f8565090000   jne 0x3600
0x00002c9b      4883c501       add rbp, 1
0x00002c9f      4489c0         mov eax, r8d
0x00002ca2      4531e4         xor r12d, r12d
0x00002ca5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00002caa      e90dfbffff     jmp 0x27bc
0x00002caf      90             nop
0x00002cb0      837c240802     cmp dword [rsp + 8], 2
0x00002cb5      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00002cba      4589c4         mov r12d, r8d
0x00002cbd      4c89dd         mov rbp, r11
0x00002cc0      0f94c2         sete dl
0x00002cc3      89d8           mov eax, ebx
0x00002cc5      4d85ff         test r15, r15
0x00002cc8      0f94c1         sete cl
0x00002ccb      21d0           and eax, edx
0x00002ccd      20c8           and al, cl
0x00002ccf      0f85610a0000   jne 0x3736                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00002cd5      89d8           mov eax, ebx
0x00002cd7      83f001         xor eax, 1
0x00002cda      20c2           and dl, al
0x00002cdc      0f846a090000   je 0x364c
0x00002ce2      807c247c00     cmp byte [rsp + 0x7c], 0
0x00002ce7      0f845d090000   je 0x364a
0x00002ced      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00002cf2      0f85f5090000   jne 0x36ed
0x00002cf8      4d85ed         test r13, r13
0x00002cfb      0f94c0         sete al
0x00002cfe      48837c245000   cmp qword [rsp + 0x50], 0
0x00002d04      0f95c2         setne dl
0x00002d07      20d0           and al, dl
0x00002d09      0f841d0a0000   je 0x372c
0x00002d0f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00002d14      488d1db22500.  lea rbx, [0x000052cd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u6a00\uffe0\uc3ff\uffd2\u98ff\uffe2\ua4ff\uffe0\u94ff\uffde\uf0ff\uffde\u45ff\uffdf\u8aff\uffdf\uc4ff\uffdf\uc4ff\uffdf\uc4ff\uffdf"
0x00002d1b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x00002d1f      c74424080200.  mov dword [rsp + 8], 2
0x00002d27      41bf01000000   mov r15d, 1
0x00002d2d      48c744241801.  mov qword [rsp + 0x18], 1
0x00002d36      c644240f00     mov byte [rsp + 0xf], 0
0x00002d3b      48895c2448     mov qword [rsp + 0x48], rbx
0x00002d40      8844247c       mov byte [rsp + 0x7c], al
0x00002d44      e9daf8ffff     jmp 0x2623
0x00002d49      0f1f80000000.  nop dword [rax]
0x00002d50      807c240f00     cmp byte [rsp + 0xf], 0
0x00002d55      0f85a5080000   jne 0x3600
0x00002d5b      4d85ed         test r13, r13
0x00002d5e      0f84fc030000   je 0x3160                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00002d64      31d2           xor edx, edx
0x00002d66      48837c245000   cmp qword [rsp + 0x50], 0
0x00002d6c      0f85ee030000   jne 0x3160                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00002d72      4c896c2450     mov qword [rsp + 0x50], r13
0x00002d77      4983c703       add r15, 3
0x00002d7b      31c0           xor eax, eax
0x00002d7d      448864247c     mov byte [rsp + 0x7c], r12b
0x00002d82      4531c0         xor r8d, r8d
0x00002d85      4989d5         mov r13, rdx
0x00002d88      bb27000000     mov ebx, 0x27                           ; '''
0x00002d8d      e917faffff     jmp 0x27a9
0x00002d92      660f1f440000   nop word [rax + rax]
0x00002d98      f644247804     test byte [rsp + 0x78], 4
0x00002d9d      7421           je 0x2dc0
0x00002d9f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00002da3      4c39d9         cmp rcx, r11
0x00002da6      7318           jae 0x2dc0
0x00002da8      488b442410     mov rax, qword [rsp + 0x10]
0x00002dad      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00002db2      0f848a070000   je 0x3542
0x00002db8      0f1f84000000.  nop dword [rax + rax]
0x00002dc0      31d2           xor edx, edx
0x00002dc2      4531e4         xor r12d, r12d
0x00002dc5      31c0           xor eax, eax
0x00002dc7      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00002dcc      e9a7f9ffff     jmp 0x2778
0x00002dd1      0f1f80000000.  nop dword [rax]
0x00002dd8      807c240f00     cmp byte [rsp + 0xf], 0
0x00002ddd      0f851d080000   jne 0x3600
0x00002de3      4531e4         xor r12d, r12d
0x00002de6      31c0           xor eax, eax
0x00002de8      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00002ded      e9b7f9ffff     jmp 0x27a9                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00002df2      660f1f440000   nop word [rax + rax]
0x00002df8      488d8424a000.  lea rax, [rsp + 0xa0]
0x00002e00      4983fbff       cmp r11, 0xffffffffffffffff
0x00002e04      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00002e10      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00002e15      752d           jne 0x2e44
0x00002e17      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002e1c      4488442440     mov byte [rsp + 0x40], r8b
0x00002e21      4488542438     mov byte [rsp + 0x38], r10b
0x00002e26      4c894c2430     mov qword [rsp + 0x30], r9
0x00002e2b      e840e5ffff     call sym.imp.strlen
0x00002e30      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00002e36      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x00002e3c      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x00002e3f      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00002e44      488d84249c00.  lea rax, [rsp + 0x9c]
0x00002e4c      31c9           xor ecx, ecx
0x00002e4e      885c247e       mov byte [rsp + 0x7e], bl
0x00002e52      448844247d     mov byte [rsp + 0x7d], r8b
0x00002e57      4889cb         mov rbx, rcx
0x00002e5a      4c898c248800.  mov qword [rsp + 0x88], r9
0x00002e62      4889442438     mov qword [rsp + 0x38], rax
0x00002e67      448854247f     mov byte [rsp + 0x7f], r10b
0x00002e6c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00002e74      4c89742440     mov qword [rsp + 0x40], r14
0x00002e79      4c896c2470     mov qword [rsp + 0x70], r13
0x00002e7e      4c895c2430     mov qword [rsp + 0x30], r11
0x00002e83      488b442410     mov rax, qword [rsp + 0x10]
0x00002e88      4c8d741d00     lea r14, [rbp + rbx]
0x00002e8d      488b542430     mov rdx, qword [rsp + 0x30]
0x00002e92      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00002e97      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00002e9c      4e8d2c30       lea r13, [rax + r14]
0x00002ea0      4c29f2         sub rdx, r14
0x00002ea3      4c89ee         mov rsi, r13
0x00002ea6      e8f51a0000     call sym.rpl_mbrtowc
0x00002eab      4885c0         test rax, rax
0x00002eae      4989c7         mov r15, rax
0x00002eb1      744e           je 0x2f01
0x00002eb3      4883f8ff       cmp rax, 0xffffffffffffffff
0x00002eb7      0f8418060000   je 0x34d5
0x00002ebd      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00002ec1      0f849a050000   je 0x3461
0x00002ec7      837c240802     cmp dword [rsp + 8], 2
0x00002ecc      0f94c0         sete al
0x00002ecf      2244240f       and al, byte [rsp + 0xf]
0x00002ed3      0f8597010000   jne 0x3070
0x00002ed9      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00002ee0      e86be6ffff     call sym.imp.iswprint
0x00002ee5      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00002eea      85c0           test eax, eax
0x00002eec      b800000000     mov eax, 0
0x00002ef1      440f44e0       cmove r12d, eax
0x00002ef5      4c01fb         add rbx, r15
0x00002ef8      e843e6ffff     call sym.imp.mbsinit
0x00002efd      85c0           test eax, eax
0x00002eff      7482           je 0x2e83
0x00002f01      4489e2         mov edx, r12d
0x00002f04      4889df         mov rdi, rbx
0x00002f07      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00002f0d      83f201         xor edx, 1
0x00002f10      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00002f15      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00002f1b      2254240d       and dl, byte [rsp + 0xd]
0x00002f1f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00002f27      4c8b742440     mov r14, qword [rsp + 0x40]
0x00002f2c      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00002f31      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00002f36      4883ff01       cmp rdi, 1
0x00002f3a      0f86fb050000   jbe 0x353b
0x00002f40      4889f9         mov rcx, rdi
0x00002f43      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00002f45      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x00002f4b      4801e9         add rcx, rbp
0x00002f4e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002f53      e9b6000000     jmp 0x300e
0x00002f58      0f1f84000000.  nop dword [rax + rax]
0x00002f60      837c240802     cmp dword [rsp + 8], 2
0x00002f65      0f94c0         sete al
0x00002f68      4584c9         test r9b, r9b
0x00002f6b      0f85af040000   jne 0x3420
0x00002f71      4489c6         mov esi, r8d
0x00002f74      83f601         xor esi, 1
0x00002f77      4020f0         and al, sil
0x00002f7a      742f           je 0x2fab                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x00002f7c      4d39fd         cmp r13, r15
0x00002f7f      7605           jbe 0x2f86
0x00002f81      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00002f86      498d7701       lea rsi, [r15 + 1]
0x00002f8a      4939f5         cmp r13, rsi
0x00002f8d      7606           jbe 0x2f95                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x00002f8f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00002f95      498d7702       lea rsi, [r15 + 2]
0x00002f99      4939f5         cmp r13, rsi
0x00002f9c      7606           jbe 0x2fa4
0x00002f9e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00002fa4      4983c703       add r15, 3
0x00002fa8      4189c0         mov r8d, eax
0x00002fab      4d39fd         cmp r13, r15
0x00002fae      7605           jbe 0x2fb5
0x00002fb0      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00002fb5      498d4701       lea rax, [r15 + 1]
0x00002fb9      4939c5         cmp r13, rax
0x00002fbc      760d           jbe 0x2fcb
0x00002fbe      89d8           mov eax, ebx
0x00002fc0      c0e806         shr al, 6
0x00002fc3      83c030         add eax, 0x30
0x00002fc6      4388443e01     mov byte [r14 + r15 + 1], al
0x00002fcb      498d4702       lea rax, [r15 + 2]
0x00002fcf      4939c5         cmp r13, rax
0x00002fd2      7610           jbe 0x2fe4
0x00002fd4      89d8           mov eax, ebx
0x00002fd6      c0e803         shr al, 3
0x00002fd9      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x00002fdc      83c030         add eax, 0x30
0x00002fdf      4388443e02     mov byte [r14 + r15 + 2], al
0x00002fe4      83e307         and ebx, 7
0x00002fe7      4883c501       add rbp, 1
0x00002feb      4983c703       add r15, 3
0x00002fef      83c330         add ebx, 0x30
0x00002ff2      4839cd         cmp rbp, rcx
0x00002ff5      0f83e5f7ffff   jae 0x27e0
0x00002ffb      89d6           mov esi, edx
0x00002ffd      4d39fd         cmp r13, r15
0x00003000      7604           jbe 0x3006
0x00003002      43881c3e       mov byte [r14 + r15], bl
0x00003006      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000300a      4983c701       add r15, 1
0x0000300e      84d2           test dl, dl
0x00003010      0f854affffff   jne 0x2f60
0x00003016      89f0           mov eax, esi
0x00003018      83f001         xor eax, 1
0x0000301b      4421c0         and eax, r8d
0x0000301e      4584d2         test r10b, r10b
0x00003021      740e           je 0x3031
0x00003023      4d39fd         cmp r13, r15
0x00003026      7605           jbe 0x302d
0x00003028      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000302d      4983c701       add r15, 1
0x00003031      4883c501       add rbp, 1
0x00003035      4839cd         cmp rbp, rcx
0x00003038      0f837ef7ffff   jae 0x27bc
0x0000303e      84c0           test al, al
0x00003040      0f84f8030000   je 0x343e
0x00003046      4d39fd         cmp r13, r15
0x00003049      7605           jbe 0x3050
0x0000304b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003050      498d4701       lea rax, [r15 + 1]
0x00003054      4939c5         cmp r13, rax
0x00003057      7606           jbe 0x305f
0x00003059      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000305f      4983c702       add r15, 2
0x00003063      4531d2         xor r10d, r10d
0x00003066      4531c0         xor r8d, r8d
0x00003069      eb92           jmp 0x2ffd
0x0000306b      0f1f440000     nop dword [rax + rax]
0x00003070      4983ff01       cmp r15, 1
0x00003074      0f845ffeffff   je 0x2ed9
0x0000307a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000307f      4a8d0c3f       lea rcx, [rdi + r15]
0x00003083      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00003088      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000308c      eb0f           jmp 0x309d
0x0000308e      6690           nop
0x00003090      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00003094      4939d0         cmp r8, rdx
0x00003097      0f843cfeffff   je 0x2ed9
0x0000309d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x000030a0      83e95b         sub ecx, 0x5b
0x000030a3      80f921         cmp cl, 0x21
0x000030a6      77e8           ja 0x3090                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x000030a8      be01000000     mov esi, 1
0x000030ad      48d3e6         shl rsi, cl
0x000030b0      4889f1         mov rcx, rsi
0x000030b3      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x000030bd      4885f1         test rcx, rsi
0x000030c0      74ce           je 0x3090
0x000030c2      4c8b742440     mov r14, qword [rsp + 0x40]
0x000030c7      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000030cc      488b6c2430     mov rbp, qword [rsp + 0x30]
0x000030d1      c74424080200.  mov dword [rsp + 8], 2
0x000030d9      807c240d00     cmp byte [rsp + 0xd], 0
0x000030de      7410           je 0x30f0
0x000030e0      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x000030e2      b804000000     mov eax, 4
0x000030e7      0f44442408     cmove eax, dword [rsp + 8]
0x000030ec      89442408       mov dword [rsp + 8], eax
0x000030f0      4883ec08       sub rsp, 8
0x000030f4      4889e9         mov rcx, rbp
0x000030f7      4c89ee         mov rsi, r13
0x000030fa      ff742468       push qword [rsp + 0x68]
0x000030fe      ff742478       push qword [rsp + 0x78]
0x00003102      4c89f7         mov rdi, r14
0x00003105      6a00           push 0
0x00003107      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x0000310f      448b442428     mov r8d, dword [rsp + 0x28]
0x00003114      488b542430     mov rdx, qword [rsp + 0x30]
0x00003119      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x0000311d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00003122      4883c420       add rsp, 0x20
0x00003126      4989c7         mov r15, rax
0x00003129      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00003131      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000313a      4c89f8         mov rax, r15
0x0000313d      0f8500060000   jne 0x3743
0x00003143      4881c4b80000.  add rsp, 0xb8
0x0000314a      5b             pop rbx
0x0000314b      5d             pop rbp
0x0000314c      415c           pop r12
0x0000314e      415d           pop r13
0x00003150      415e           pop r14
0x00003152      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00003154      c3             ret
0x00003155      0f1f00         nop dword [rax]
0x00003158      4c89dd         mov rbp, r11
0x0000315b      e979ffffff     jmp 0x30d9
0x00003160      4d39fd         cmp r13, r15
0x00003163      7605           jbe 0x316a
0x00003165      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000316a      498d4701       lea rax, [r15 + 1]
0x0000316e      4939c5         cmp r13, rax
0x00003171      7606           jbe 0x3179
0x00003173      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00003179      498d4702       lea rax, [r15 + 2]
0x0000317d      4939c5         cmp r13, rax
0x00003180      0f86ec050000   jbe 0x3772
0x00003186      4c89ea         mov rdx, r13
0x00003189      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000318f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003194      e9d9fbffff     jmp 0x2d72
0x00003199      4489e0         mov eax, r12d
0x0000319c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x000031a1      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x000031a4      e900f6ffff     jmp 0x27a9                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x000031a9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000031af      e9c5f9ffff     jmp 0x2b79
0x000031b4      85db           test ebx, ebx
0x000031b6      0f8527f4ffff   jne 0x25e3
0x000031bc      c644240d01     mov byte [rsp + 0xd], 1
0x000031c1      4d85ed         test r13, r13
0x000031c4      0f8590050000   jne 0x375a
0x000031ca      488d05fc2000.  lea rax, [0x000052cd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u6a00\uffe0\uc3ff\uffd2\u98ff\uffe2\ua4ff\uffe0\u94ff\uffde\uf0ff\uffde\u45ff\uffdf\u8aff\uffdf\uc4ff\uffdf\uc4ff\uffdf\uc4ff\uffdf"
0x000031d1      48c744245000.  mov qword [rsp + 0x50], 0
0x000031da      c644240e01     mov byte [rsp + 0xe], 1
0x000031df      c644247c00     mov byte [rsp + 0x7c], 0
0x000031e4      4531e4         xor r12d, r12d
0x000031e7      c644240f00     mov byte [rsp + 0xf], 0
0x000031ec      48c744241801.  mov qword [rsp + 0x18], 1
0x000031f5      4889442448     mov qword [rsp + 0x48], rax
0x000031fa      41bf01000000   mov r15d, 1
0x00003200      c74424080200.  mov dword [rsp + 8], 2
0x00003208      e916f4ffff     jmp 0x2623                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x0000320d      0f1f00         nop dword [rax]
0x00003210      85db           test ebx, ebx
0x00003212      0f85f5030000   jne 0x360d
0x00003218      4d85ed         test r13, r13
0x0000321b      0f8425020000   je 0x3446
0x00003221      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00003225      c644240e01     mov byte [rsp + 0xe], 1
0x0000322a      4531e4         xor r12d, r12d
0x0000322d      c644247c00     mov byte [rsp + 0x7c], 0
0x00003232      48c744245000.  mov qword [rsp + 0x50], 0
0x0000323b      488d05892000.  lea rax, str.l______l                   ; 0x52cb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u6a00\uffe0\uc3ff\uffd2\u98ff\uffe2\ua4ff\uffe0\u94ff\uffde\uf0ff\uffde\u45ff\uffdf\u8aff\uffdf\uc4ff\uffdf\uc4ff\uffdf\uc4ff\uffdf\u14ff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\u54ff\uffd6\u5cff\uffd5\u1cff\uffd5\ue4ff\uffd6\ud4ff\uffd6\uc4ff\uffd6\ub4ff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ua4ff\uffd6\u94ff\uffd6\u94ff\uffd6\u64ff\uffd6\u94ff\uffd6\u3cff\uffd6\u94ff\uffd6\uf7ff\uffd4\u94ff\uffd6\u94ff\uffd6\u94ff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u94ff\uffd6\u94ff\uffd6\u94ff\uffd6\u94ff\uffd6\uc7ff\uffd4\ufcff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u94ff\uffd6\u6cff\uffd5\u3cff\uffd6\u94ff\uffd6\u3cff\uffd6\u94ff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\uf7ff\uffd3\u94ff\uffd6\uf7ff\uffd3\u64ff\uffd6\ue8ff\uffd5\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d5\u28ff\uffd7\u10ff\uffd7\uc0ff\uffd5\xff\uffd7\ua8ff\uffd5\ue8ff\uffd6\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\ud0ff\uffd6\ub8ff\uffd6\ub8ff\uffd6\ua0ff\uffd6\ub8ff\uffd6\u88ff\uffd6\ub8ff\uffd6\U010003d2\ub8ff\uffd6\ub8ff\uffd6\ub8ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\ub8ff\uffd6\ub8ff\uffd6\ub8ff\uffd6\ub8ff\uffd6\uc8ff\uffd2\U010003d4\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\ub8ff\uffd6\u88ff\uffd5\u88ff\uffd6\ub8ff\uffd6\u88ff\uffd6\ub8ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\U010003d1\ub8ff\uffd6\U010003d1\ua0ff\uffd6\xff"
0x00003242      c644240f00     mov byte [rsp + 0xf], 0
0x00003247      c644240d01     mov byte [rsp + 0xd], 1
0x0000324c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003255      41bf01000000   mov r15d, 1
0x0000325b      4889442448     mov qword [rsp + 0x48], rax
0x00003260      e9bef3ffff     jmp 0x2623
0x00003265      488d055f2000.  lea rax, str.l______l                   ; 0x52cb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u6a00\uffe0\uc3ff\uffd2\u98ff\uffe2\ua4ff\uffe0\u94ff\uffde\uf0ff\uffde\u45ff\uffdf\u8aff\uffdf\uc4ff\uffdf\uc4ff\uffdf\uc4ff\uffdf\u14ff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\u54ff\uffd6\u5cff\uffd5\u1cff\uffd5\ue4ff\uffd6\ud4ff\uffd6\uc4ff\uffd6\ub4ff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ua4ff\uffd6\u94ff\uffd6\u94ff\uffd6\u64ff\uffd6\u94ff\uffd6\u3cff\uffd6\u94ff\uffd6\uf7ff\uffd4\u94ff\uffd6\u94ff\uffd6\u94ff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u94ff\uffd6\u94ff\uffd6\u94ff\uffd6\u94ff\uffd6\uc7ff\uffd4\ufcff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u94ff\uffd6\u6cff\uffd5\u3cff\uffd6\u94ff\uffd6\u3cff\uffd6\u94ff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\uf7ff\uffd3\u94ff\uffd6\uf7ff\uffd3\u64ff\uffd6\ue8ff\uffd5\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d5\u28ff\uffd7\u10ff\uffd7\uc0ff\uffd5\xff\uffd7\ua8ff\uffd5\ue8ff\uffd6\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\ud0ff\uffd6\ub8ff\uffd6\ub8ff\uffd6\ua0ff\uffd6\ub8ff\uffd6\u88ff\uffd6\ub8ff\uffd6\U010003d2\ub8ff\uffd6\ub8ff\uffd6\ub8ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\ub8ff\uffd6\ub8ff\uffd6\ub8ff\uffd6\ub8ff\uffd6\uc8ff\uffd2\U010003d4\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\ub8ff\uffd6\u88ff\uffd5\u88ff\uffd6\ub8ff\uffd6\u88ff\uffd6\ub8ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\U010003d1\ub8ff\uffd6\U010003d1\ua0ff\uffd6\xff"
0x0000326c      c644240e01     mov byte [rsp + 0xe], 1
0x00003271      c644247c00     mov byte [rsp + 0x7c], 0
0x00003276      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00003279      48c744245000.  mov qword [rsp + 0x50], 0
0x00003282      c644240f01     mov byte [rsp + 0xf], 1
0x00003287      c644240d01     mov byte [rsp + 0xd], 1
0x0000328c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003295      4531ff         xor r15d, r15d
0x00003298      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x0000329d      c74424080500.  mov dword [rsp + 8], 5
0x000032a5      e979f3ffff     jmp 0x2623
0x000032aa      c644240e01     mov byte [rsp + 0xe], 1
0x000032af      c644247c00     mov byte [rsp + 0x7c], 0
0x000032b4      4531e4         xor r12d, r12d
0x000032b7      48c744245000.  mov qword [rsp + 0x50], 0
0x000032c0      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x000032c5      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x000032c8      c644240d01     mov byte [rsp + 0xd], 1
0x000032cd      48c744241800.  mov qword [rsp + 0x18], 0
0x000032d6      48c744244800.  mov qword [rsp + 0x48], 0
0x000032df      e93ff3ffff     jmp 0x2623
0x000032e4      837c24080a     cmp dword [rsp + 8], 0xa
0x000032e9      7456           je 0x3341
0x000032eb      488d35dd1f00.  lea rsi, [0x000052cf]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x000032f2      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x000032f4      ba05000000     mov edx, 5
0x000032f9      e852e0ffff     call sym.imp.dcgettext
0x000032fe      4889c1         mov rcx, rax
0x00003301      4889442468     mov qword [rsp + 0x68], rax
0x00003306      488d05c21f00.  lea rax, [0x000052cf]                   ; "`"
0x0000330d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00003310      0f8498030000   je 0x36ae
0x00003316      488d35b01f00.  lea rsi, [0x000052cd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u6a00\uffe0\uc3ff\uffd2\u98ff\uffe2\ua4ff\uffe0\u94ff\uffde\uf0ff\uffde\u45ff\uffdf\u8aff\uffdf\uc4ff\uffdf\uc4ff\uffdf\uc4ff\uffdf"
0x0000331d      31ff           xor edi, edi
0x0000331f      ba05000000     mov edx, 5
0x00003324      e827e0ffff     call sym.imp.dcgettext
0x00003329      4889c1         mov rcx, rax
0x0000332c      4889442460     mov qword [rsp + 0x60], rax
0x00003331      488d05951f00.  lea rax, [0x000052cd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u6a00\uffe0\uc3ff\uffd2\u98ff\uffe2\ua4ff\uffe0\u94ff\uffde\uf0ff\uffde\u45ff\uffdf\u8aff\uffdf\uc4ff\uffdf\uc4ff\uffdf\uc4ff\uffdf"
0x00003338      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x0000333b      0f8483030000   je 0x36c4
0x00003341      4531ff         xor r15d, r15d
0x00003344      85db           test ebx, ebx
0x00003346      0f84c1010000   je 0x350d
0x0000334c      85db           test ebx, ebx
0x0000334e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00003353      0f9544240f     setne byte [rsp + 0xf]
0x00003358      4531e4         xor r12d, r12d
0x0000335b      4889df         mov rdi, rbx
0x0000335e      e80de0ffff     call sym.imp.strlen
0x00003363      48895c2448     mov qword [rsp + 0x48], rbx
0x00003368      4889442418     mov qword [rsp + 0x18], rax
0x0000336d      c644240e01     mov byte [rsp + 0xe], 1
0x00003372      c644247c00     mov byte [rsp + 0x7c], 0
0x00003377      48c744245000.  mov qword [rsp + 0x50], 0
0x00003380      c644240d01     mov byte [rsp + 0xd], 1
0x00003385      e999f2ffff     jmp 0x2623
0x0000338a      c644240e01     mov byte [rsp + 0xe], 1
0x0000338f      c644247c00     mov byte [rsp + 0x7c], 0
0x00003394      4531e4         xor r12d, r12d
0x00003397      48c744245000.  mov qword [rsp + 0x50], 0
0x000033a0      c644240f00     mov byte [rsp + 0xf], 0
0x000033a5      4531ff         xor r15d, r15d
0x000033a8      c644240d00     mov byte [rsp + 0xd], 0
0x000033ad      48c744241800.  mov qword [rsp + 0x18], 0
0x000033b6      48c744244800.  mov qword [rsp + 0x48], 0
0x000033bf      e95ff2ffff     jmp 0x2623
0x000033c4      c644240e01     mov byte [rsp + 0xe], 1
0x000033c9      c644247c00     mov byte [rsp + 0x7c], 0
0x000033ce      4531e4         xor r12d, r12d
0x000033d1      48c744245000.  mov qword [rsp + 0x50], 0
0x000033da      c644240f01     mov byte [rsp + 0xf], 1
0x000033df      c644240d01     mov byte [rsp + 0xd], 1
0x000033e4      e91af2ffff     jmp 0x2603
0x000033e9      4d39fd         cmp r13, r15
0x000033ec      7605           jbe 0x33f3
0x000033ee      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x000033f3      488d4102       lea rax, [rcx + 2]
0x000033f7      4939c5         cmp r13, rax
0x000033fa      7606           jbe 0x3402
0x000033fc      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00003402      4489e0         mov eax, r12d
0x00003405      4c8d7903       lea r15, [rcx + 3]
0x00003409      4531e4         xor r12d, r12d
0x0000340c      bb30000000     mov ebx, 0x30                           ; '0'
0x00003411      e962f3ffff     jmp 0x2778
0x00003416      662e0f1f8400.  nop word cs:[rax + rax]
0x00003420      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003425      4c89dd         mov rbp, r11
0x00003428      885c240d       mov byte [rsp + 0xd], bl
0x0000342c      e9a8fcffff     jmp 0x30d9
0x00003431      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003436      4531e4         xor r12d, r12d
0x00003439      e902fbffff     jmp 0x2f40
0x0000343e      4531d2         xor r10d, r10d
0x00003441      e9b7fbffff     jmp 0x2ffd
0x00003446      48c744245000.  mov qword [rsp + 0x50], 0
0x0000344f      c644240e01     mov byte [rsp + 0xe], 1
0x00003454      4531e4         xor r12d, r12d
0x00003457      c644247c00     mov byte [rsp + 0x7c], 0
0x0000345c      e9dafdffff     jmp 0x323b
0x00003461      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003466      4c89f6         mov rsi, r14
0x00003469      4c89e9         mov rcx, r13
0x0000346c      4889d8         mov rax, rbx
0x0000346f      4889df         mov rdi, rbx
0x00003472      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003478      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000347d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00003485      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00003488      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000348e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003496      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000349b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000034a0      7326           jae 0x34c8
0x000034a2      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x000034a5      7510           jne 0x34b7
0x000034a7      eb1f           jmp 0x34c8
0x000034a9      0f1f80000000.  nop dword [rax]
0x000034b0      41803c0100     cmp byte [r9 + rax], 0
0x000034b5      740e           je 0x34c5
0x000034b7      4883c001       add rax, 1
0x000034bb      488d540500     lea rdx, [rbp + rax]
0x000034c0      4939d3         cmp r11, rdx
0x000034c3      77eb           ja 0x34b0
0x000034c5      4889c7         mov rdi, rax
0x000034c8      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000034cd      4531e4         xor r12d, r12d
0x000034d0      e961faffff     jmp 0x2f36
0x000034d5      4889df         mov rdi, rbx
0x000034d8      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000034de      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000034e3      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000034e9      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000034f1      4531e4         xor r12d, r12d
0x000034f4      4c8b742440     mov r14, qword [rsp + 0x40]
0x000034f9      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000034fe      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003503      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003508      e929faffff     jmp 0x2f36
0x0000350d      488b542468     mov rdx, qword [rsp + 0x68]
0x00003512      0fb602         movzx eax, byte [rdx]
0x00003515      84c0           test al, al
0x00003517      0f842ffeffff   je 0x334c
0x0000351d      0f1f00         nop dword [rax]
0x00003520      4d39fd         cmp r13, r15
0x00003523      7604           jbe 0x3529
0x00003525      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00003529      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x0000352d      420fb6043a     movzx eax, byte [rdx + r15]
0x00003532      84c0           test al, al
0x00003534      75ea           jne 0x3520
0x00003536      e911feffff     jmp 0x334c
0x0000353b      89d0           mov eax, edx
0x0000353d      e955f5ffff     jmp 0x2a97
0x00003542      0fb61c08       movzx ebx, byte [rax + rcx]
0x00003546      80fb3e         cmp bl, 0x3e
0x00003549      0f8771f8ffff   ja 0x2dc0
0x0000354f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00003559      480fa3d8       bt rax, rbx
0x0000355d      0f835df8ffff   jae 0x2dc0
0x00003563      807c240f00     cmp byte [rsp + 0xf], 0
0x00003568      0f85e4010000   jne 0x3752                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x0000356e      4d39fd         cmp r13, r15
0x00003571      7605           jbe 0x3578
0x00003573      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00003578      498d4701       lea rax, [r15 + 1]
0x0000357c      4939c5         cmp r13, rax
0x0000357f      7606           jbe 0x3587
0x00003581      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003587      498d4702       lea rax, [r15 + 2]
0x0000358b      4939c5         cmp r13, rax
0x0000358e      7606           jbe 0x3596
0x00003590      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003596      498d4703       lea rax, [r15 + 3]
0x0000359a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x0000359d      7606           jbe 0x35a5
0x0000359f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x000035a5      4983c704       add r15, 4
0x000035a9      31d2           xor edx, edx
0x000035ab      4531e4         xor r12d, r12d
0x000035ae      31c0           xor eax, eax
0x000035b0      4889cd         mov rbp, rcx
0x000035b3      e9c0f1ffff     jmp 0x2778
0x000035b8      85db           test ebx, ebx
0x000035ba      0f8488010000   je 0x3748
0x000035c0      488d05061d00.  lea rax, [0x000052cd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u6a00\uffe0\uc3ff\uffd2\u98ff\uffe2\ua4ff\uffe0\u94ff\uffde\uf0ff\uffde\u45ff\uffdf\u8aff\uffdf\uc4ff\uffdf\uc4ff\uffdf\uc4ff\uffdf"
0x000035c7      c644240e01     mov byte [rsp + 0xe], 1
0x000035cc      c644247c00     mov byte [rsp + 0x7c], 0
0x000035d1      4531e4         xor r12d, r12d
0x000035d4      48c744245000.  mov qword [rsp + 0x50], 0
0x000035dd      c644240f01     mov byte [rsp + 0xf], 1
0x000035e2      c644240d00     mov byte [rsp + 0xd], 0
0x000035e7      48c744241801.  mov qword [rsp + 0x18], 1
0x000035f0      4531ff         xor r15d, r15d
0x000035f3      4889442448     mov qword [rsp + 0x48], rax
0x000035f8      e926f0ffff     jmp 0x2623
0x000035fd      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00003600      4c89dd         mov rbp, r11
0x00003603      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003608      e9ccfaffff     jmp 0x30d9
0x0000360d      488d05b71c00.  lea rax, str.l______l                   ; 0x52cb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u6a00\uffe0\uc3ff\uffd2\u98ff\uffe2\ua4ff\uffe0\u94ff\uffde\uf0ff\uffde\u45ff\uffdf\u8aff\uffdf\uc4ff\uffdf\uc4ff\uffdf\uc4ff\uffdf\u14ff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\u54ff\uffd6\u5cff\uffd5\u1cff\uffd5\ue4ff\uffd6\ud4ff\uffd6\uc4ff\uffd6\ub4ff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ufcff\uffd6\ua4ff\uffd6\u94ff\uffd6\u94ff\uffd6\u64ff\uffd6\u94ff\uffd6\u3cff\uffd6\u94ff\uffd6\uf7ff\uffd4\u94ff\uffd6\u94ff\uffd6\u94ff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u94ff\uffd6\u94ff\uffd6\u94ff\uffd6\u94ff\uffd6\uc7ff\uffd4\ufcff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u94ff\uffd6\u6cff\uffd5\u3cff\uffd6\u94ff\uffd6\u3cff\uffd6\u94ff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\u3cff\uffd6\uf7ff\uffd3\u94ff\uffd6\uf7ff\uffd3\u64ff\uffd6\ue8ff\uffd5\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d5\u28ff\uffd7\u10ff\uffd7\uc0ff\uffd5\xff\uffd7\ua8ff\uffd5\ue8ff\uffd6\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\U010003d4\ud0ff\uffd6\ub8ff\uffd6\ub8ff\uffd6\ua0ff\uffd6\ub8ff\uffd6\u88ff\uffd6\ub8ff\uffd6\U010003d2\ub8ff\uffd6\ub8ff\uffd6\ub8ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\ub8ff\uffd6\ub8ff\uffd6\ub8ff\uffd6\ub8ff\uffd6\uc8ff\uffd2\U010003d4\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\ub8ff\uffd6\u88ff\uffd5\u88ff\uffd6\ub8ff\uffd6\u88ff\uffd6\ub8ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\u88ff\uffd6\U010003d1\ub8ff\uffd6\U010003d1\ua0ff\uffd6\xff"
0x00003614      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00003619      c644247c00     mov byte [rsp + 0x7c], 0
0x0000361e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00003621      48c744245000.  mov qword [rsp + 0x50], 0
0x0000362a      c644240f01     mov byte [rsp + 0xf], 1
0x0000362f      c644240d01     mov byte [rsp + 0xd], 1
0x00003634      48c744241801.  mov qword [rsp + 0x18], 1
0x0000363d      4531ff         xor r15d, r15d
0x00003640      4889442448     mov qword [rsp + 0x48], rax
0x00003645      e9d9efffff     jmp 0x2623
0x0000364a      89d0           mov eax, edx
0x0000364c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00003651      4885db         test rbx, rbx
0x00003654      742c           je 0x3682
0x00003656      84c0           test al, al
0x00003658      7428           je 0x3682
0x0000365a      0fb60b         movzx ecx, byte [rbx]
0x0000365d      4889d8         mov rax, rbx
0x00003660      84c9           test cl, cl
0x00003662      741e           je 0x3682
0x00003664      4c89fa         mov rdx, r15
0x00003667      4c29f8         sub rax, r15
0x0000366a      4939d5         cmp r13, rdx
0x0000366d      7604           jbe 0x3673
0x0000366f      41880c16       mov byte [r14 + rdx], cl
0x00003673      4883c201       add rdx, 1
0x00003677      0fb60c10       movzx ecx, byte [rax + rdx]
0x0000367b      84c9           test cl, cl
0x0000367d      75eb           jne 0x366a
0x0000367f      4989d7         mov r15, rdx
0x00003682      4d39fd         cmp r13, r15
0x00003685      0f869efaffff   jbe 0x3129
0x0000368b      43c6043e00     mov byte [r14 + r15], 0
0x00003690      e994faffff     jmp 0x3129
0x00003695      837c240802     cmp dword [rsp + 8], 2
0x0000369a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000369f      4c89dd         mov rbp, r11
0x000036a2      0f94c0         sete al
0x000036a5      885c240d       mov byte [rsp + 0xd], bl
0x000036a9      e92bfaffff     jmp 0x30d9
0x000036ae      8b742408       mov esi, dword [rsp + 8]
0x000036b2      4889cf         mov rdi, rcx
0x000036b5      e8a6edffff     call sym.gettext_quote.part.1
0x000036ba      4889442468     mov qword [rsp + 0x68], rax
0x000036bf      e952fcffff     jmp 0x3316
0x000036c4      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x000036c8      4889cf         mov rdi, rcx
0x000036cb      e890edffff     call sym.gettext_quote.part.1
0x000036d0      4889442460     mov qword [rsp + 0x60], rax
0x000036d5      e967fcffff     jmp 0x3341
0x000036da      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000036df      4c89dd         mov rbp, r11
0x000036e2      89d0           mov eax, edx
0x000036e4      885c240d       mov byte [rsp + 0xd], bl
0x000036e8      e9ecf9ffff     jmp 0x30d9
0x000036ed      4883ec08       sub rsp, 8
0x000036f1      41b805000000   mov r8d, 5
0x000036f7      4c89d9         mov rcx, r11
0x000036fa      ff742468       push qword [rsp + 0x68]
0x000036fe      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00003702      4c89f7         mov rdi, r14
0x00003705      ff742438       push qword [rsp + 0x38]
0x00003709      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00003711      488b542430     mov rdx, qword [rsp + 0x30]
0x00003716      488b742470     mov rsi, qword [rsp + 0x70]
0x0000371b      e830eeffff     call sym.quotearg_buffer_restyled
0x00003720      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00003724      4989c7         mov r15, rax
0x00003727      e9fdf9ffff     jmp 0x3129
0x0000372c      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00003731      e916ffffff     jmp 0x364c
0x00003736      c74424080200.  mov dword [rsp + 8], 2
0x0000373e      e996f9ffff     jmp 0x30d9
0x00003743      e838dcffff     call sym.imp.__stack_chk_fail
0x00003748      c644240d00     mov byte [rsp + 0xd], 0
0x0000374d      e96ffaffff     jmp 0x31c1
0x00003752      4c89dd         mov rbp, r11
0x00003755      e996f9ffff     jmp 0x30f0
0x0000375a      c644240e01     mov byte [rsp + 0xe], 1
0x0000375f      31c0           xor eax, eax
0x00003761      4531e4         xor r12d, r12d
0x00003764      48c744245000.  mov qword [rsp + 0x50], 0
0x0000376d      e9a2f5ffff     jmp 0x2d14
0x00003772      4c89ea         mov rdx, r13
0x00003775      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000377a      e9f3f5ffff     jmp 0x2d72
0x0000377f      e84cdbffff     call sym.imp.abort
0x00003784      6690           nop
0x00003786      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00003790      4157           push r15
0x00003792      4156           push r14
0x00003794      4c63ff         movsxd r15, edi
0x00003797      4155           push r13
0x00003799      4154           push r12
0x0000379b      4989d6         mov r14, rdx
0x0000379e      55             push rbp
0x0000379f      53             push rbx
0x000037a0      4889cd         mov rbp, rcx
0x000037a3      4883ec28       sub rsp, 0x28
0x000037a7      4889742408     mov qword [rsp + 8], rsi
0x000037ac      e82fdbffff     call sym.imp.__errno_location
0x000037b1      4989c5         mov r13, rax
0x000037b4      8b00           mov eax, dword [rax]
0x000037b6      4585ff         test r15d, r15d
0x000037b9      488b1da03820.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x207060:8]=0x207070 obj.slotvec0 ; "pp "
0x000037c0      89442418       mov dword [rsp + 0x18], eax
0x000037c4      0f8867010000   js 0x3931
0x000037ca      44393d873820.  cmp dword [obj.nslots], r15d            ; [0x207058:4]=1
0x000037d1      7f62           jg 0x3835
0x000037d3      4181ffffffff.  cmp r15d, 0x7fffffff
0x000037da      0f8456010000   je 0x3936
0x000037e0      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x000037e4      488d05853820.  lea rax, obj.slotvec0                   ; 0x207070
0x000037eb      4963f4         movsxd rsi, r12d
0x000037ee      48c1e604       shl rsi, 4
0x000037f2      4839c3         cmp rbx, rax
0x000037f5      0f8415010000   je 0x3910
0x000037fb      4889df         mov rdi, rbx
0x000037fe      e86d0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00003803      4889c3         mov rbx, rax
0x00003806      488905533820.  mov qword [obj.slotvec], rax            ; [0x207060:8]=0x207070 obj.slotvec0 ; "pp "
0x0000380d      48633d443820.  movsxd rdi, dword [obj.nslots]          ; [0x207058:4]=1
0x00003814      4489e2         mov edx, r12d
0x00003817      31f6           xor esi, esi
0x00003819      29fa           sub edx, edi
0x0000381b      48c1e704       shl rdi, 4
0x0000381f      4863d2         movsxd rdx, edx
0x00003822      4801df         add rdi, rbx
0x00003825      48c1e204       shl rdx, 4
0x00003829      e8a2dbffff     call sym.imp.memset
0x0000382e      448925233820.  mov dword [obj.nslots], r12d            ; [0x207058:4]=1
0x00003835      8b4504         mov eax, dword [rbp + 4]
0x00003838      49c1e704       shl r15, 4
0x0000383c      4883ec08       sub rsp, 8
0x00003840      4c01fb         add rbx, r15
0x00003843      4c8d7d08       lea r15, [rbp + 8]
0x00003847      448b4500       mov r8d, dword [rbp]
0x0000384b      4c8b1b         mov r11, qword [rbx]
0x0000384e      4c8b6308       mov r12, qword [rbx + 8]
0x00003852      4c89f1         mov rcx, r14
0x00003855      83c801         or eax, 1
0x00003858      89442424       mov dword [rsp + 0x24], eax
0x0000385c      ff7530         push qword [rbp + 0x30]
0x0000385f      4189c1         mov r9d, eax
0x00003862      ff7528         push qword [rbp + 0x28]
0x00003865      4157           push r15
0x00003867      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x0000386a      488b542428     mov rdx, qword [rsp + 0x28]
0x0000386f      4c89e7         mov rdi, r12
0x00003872      4c895c2430     mov qword [rsp + 0x30], r11
0x00003877      e8d4ecffff     call sym.quotearg_buffer_restyled
0x0000387c      4883c420       add rsp, 0x20
0x00003880      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00003885      4939c3         cmp r11, rax
0x00003888      7767           ja 0x38f1
0x0000388a      488d7001       lea rsi, [rax + 1]
0x0000388e      488d056b3820.  lea rax, obj.slot0                      ; 0x207100
0x00003895      4939c4         cmp r12, rax
0x00003898      488933         mov qword [rbx], rsi
0x0000389b      7412           je 0x38af
0x0000389d      4c89e7         mov rdi, r12
0x000038a0      4889742410     mov qword [rsp + 0x10], rsi
0x000038a5      e816daffff     call sym.imp.free
0x000038aa      488b742410     mov rsi, qword [rsp + 0x10]
0x000038af      4889f7         mov rdi, rsi
0x000038b2      4889742410     mov qword [rsp + 0x10], rsi
0x000038b7      e8540e0000     call sym.xmalloc
0x000038bc      4883ec08       sub rsp, 8
0x000038c0      48894308       mov qword [rbx + 8], rax
0x000038c4      448b4500       mov r8d, dword [rbp]
0x000038c8      ff7530         push qword [rbp + 0x30]
0x000038cb      ff7528         push qword [rbp + 0x28]
0x000038ce      4c89f1         mov rcx, r14
0x000038d1      4157           push r15
0x000038d3      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x000038d8      4889c7         mov rdi, rax
0x000038db      488b542428     mov rdx, qword [rsp + 0x28]
0x000038e0      488b742430     mov rsi, qword [rsp + 0x30]
0x000038e5      4989c4         mov r12, rax
0x000038e8      e863ecffff     call sym.quotearg_buffer_restyled
0x000038ed      4883c420       add rsp, 0x20
0x000038f1      8b442418       mov eax, dword [rsp + 0x18]
0x000038f5      41894500       mov dword [r13], eax
0x000038f9      4883c428       add rsp, 0x28
0x000038fd      4c89e0         mov rax, r12
0x00003900      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00003901      5d             pop rbp
0x00003902      415c           pop r12
0x00003904      415d           pop r13
0x00003906      415e           pop r14
0x00003908      415f           pop r15
0x0000390a      c3             ret
0x0000390b      0f1f440000     nop dword [rax + rax]
0x00003910      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00003912      e8590e0000     call sym.xrealloc
0x00003917      660f6f055137.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x0000391f      4889c3         mov rbx, rax
0x00003922      488905373720.  mov qword [obj.slotvec], rax            ; [0x207060:8]=0x207070 obj.slotvec0 ; "pp "
0x00003929      0f1100         movups xmmword [rax], xmm0
0x0000392c      e9dcfeffff     jmp 0x380d
0x00003931      e89ad9ffff     call sym.imp.abort
0x00003936      e825100000     call sym.xalloc_die
0x0000393b      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00003940      4154           push r12
0x00003942      55             push rbp
0x00003943      53             push rbx
0x00003944      4889fb         mov rbx, rdi
0x00003947      e894d9ffff     call sym.imp.__errno_location
0x0000394c      448b20         mov r12d, dword [rax]
0x0000394f      4889c5         mov rbp, rax
0x00003952      488d05a73820.  lea rax, obj.default_quoting_options    ; 0x207200
0x00003959      4885db         test rbx, rbx
0x0000395c      be38000000     mov esi, 0x38                           ; '8'
0x00003961      480f44d8       cmove rbx, rax
0x00003965      4889df         mov rdi, rbx
0x00003968      e8a30f0000     call sym.xmemdup
0x0000396d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00003971      5b             pop rbx
0x00003972      5d             pop rbp
0x00003973      415c           pop r12
0x00003975      c3             ret
0x00003976      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00003980      488d05793820.  lea rax, obj.default_quoting_options    ; 0x207200
0x00003987      4885ff         test rdi, rdi
0x0000398a      480f44f8       cmove rdi, rax
0x0000398e      8b07           mov eax, dword [rdi]
0x00003990      c3             ret
0x00003991      0f1f440000     nop dword [rax + rax]
0x00003996      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x000039a0      488d05593820.  lea rax, obj.default_quoting_options    ; 0x207200
0x000039a7      4885ff         test rdi, rdi
0x000039aa      480f44f8       cmove rdi, rax
0x000039ae      8937           mov dword [rdi], esi
0x000039b0      c3             ret
0x000039b1      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x000039b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x000039c0      488d05393820.  lea rax, obj.default_quoting_options    ; 0x207200
0x000039c7      4885ff         test rdi, rdi
0x000039ca      89f1           mov ecx, esi
0x000039cc      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x000039d0      89f0           mov eax, esi
0x000039d2      83e11f         and ecx, 0x1f
0x000039d5      c0e805         shr al, 5
0x000039d8      0fb6c0         movzx eax, al
0x000039db      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x000039e0      8b37           mov esi, dword [rdi]
0x000039e2      89f0           mov eax, esi
0x000039e4      d3e8           shr eax, cl
0x000039e6      31c2           xor edx, eax
0x000039e8      83e001         and eax, 1
0x000039eb      83e201         and edx, 1
0x000039ee      d3e2           shl edx, cl
0x000039f0      31f2           xor edx, esi
0x000039f2      8917           mov dword [rdi], edx
0x000039f4      c3             ret
0x000039f5      90             nop
0x000039f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00003a00      488d05f93720.  lea rax, obj.default_quoting_options    ; 0x207200
0x00003a07      4885ff         test rdi, rdi
0x00003a0a      480f44f8       cmove rdi, rax
0x00003a0e      8b4704         mov eax, dword [rdi + 4]
0x00003a11      897704         mov dword [rdi + 4], esi
0x00003a14      c3             ret
0x00003a15      90             nop
0x00003a16      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00003a20      488d05d93720.  lea rax, obj.default_quoting_options    ; 0x207200
0x00003a27      4885ff         test rdi, rdi
0x00003a2a      480f44f8       cmove rdi, rax
0x00003a2e      4885f6         test rsi, rsi
0x00003a31      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00003a37      740e           je 0x3a47
0x00003a39      4885d2         test rdx, rdx
0x00003a3c      7409           je 0x3a47
0x00003a3e      48897728       mov qword [rdi + 0x28], rsi
0x00003a42      48895730       mov qword [rdi + 0x30], rdx
0x00003a46      c3             ret
0x00003a47      4883ec08       sub rsp, 8
0x00003a4b      e880d8ffff     call sym.imp.abort
;-- quotearg_buffer:
0x00003a50      4157           push r15
0x00003a52      4156           push r14
0x00003a54      488d05a53720.  lea rax, obj.default_quoting_options    ; 0x207200
0x00003a5b      4155           push r13
0x00003a5d      4154           push r12
0x00003a5f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00003a62      55             push rbp
0x00003a63      53             push rbx
0x00003a64      4c89c3         mov rbx, r8
0x00003a67      4989f6         mov r14, rsi
0x00003a6a      4989d7         mov r15, rdx
0x00003a6d      4883ec18       sub rsp, 0x18
0x00003a71      4d85c0         test r8, r8
0x00003a74      480f44d8       cmove rbx, rax
0x00003a78      48894c2408     mov qword [rsp + 8], rcx
0x00003a7d      e85ed8ffff     call sym.imp.__errno_location
0x00003a82      448b20         mov r12d, dword [rax]
0x00003a85      4889c5         mov rbp, rax
0x00003a88      488d4308       lea rax, [rbx + 8]
0x00003a8c      4883ec08       sub rsp, 8
0x00003a90      448b4b04       mov r9d, dword [rbx + 4]
0x00003a94      ff7330         push qword [rbx + 0x30]
0x00003a97      448b03         mov r8d, dword [rbx]
0x00003a9a      ff7328         push qword [rbx + 0x28]
0x00003a9d      4c89fa         mov rdx, r15
0x00003aa0      50             push rax
0x00003aa1      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00003aa6      4c89f6         mov rsi, r14
0x00003aa9      4c89ef         mov rdi, r13
0x00003aac      e89feaffff     call sym.quotearg_buffer_restyled
0x00003ab1      44896500       mov dword [rbp], r12d
0x00003ab5      4883c438       add rsp, 0x38
0x00003ab9      5b             pop rbx
0x00003aba      5d             pop rbp
0x00003abb      415c           pop r12
0x00003abd      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00003abf      415e           pop r14
0x00003ac1      415f           pop r15
0x00003ac3      c3             ret
0x00003ac4      6690           nop
0x00003ac6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00003ad0      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00003ad2      4156           push r14
0x00003ad4      488d05253720.  lea rax, obj.default_quoting_options    ; 0x207200
0x00003adb      4155           push r13
0x00003add      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x00003adf      4989d4         mov r12, rdx
0x00003ae2      55             push rbp
0x00003ae3      53             push rbx
0x00003ae4      4889cb         mov rbx, rcx
0x00003ae7      4989fe         mov r14, rdi
0x00003aea      4989f7         mov r15, rsi
0x00003aed      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00003af1      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00003af4      480f44d8       cmove rbx, rax
0x00003af8      31ed           xor ebp, ebp
0x00003afa      e8e1d7ffff     call sym.imp.__errno_location
0x00003aff      4d85e4         test r12, r12
0x00003b02      4989c5         mov r13, rax
0x00003b05      8b00           mov eax, dword [rax]
0x00003b07      400f94c5       sete bpl
0x00003b0b      0b6b04         or ebp, dword [rbx + 4]
0x00003b0e      4c8d5308       lea r10, [rbx + 8]
0x00003b12      4883ec08       sub rsp, 8
0x00003b16      448b03         mov r8d, dword [rbx]
0x00003b19      4c89f9         mov rcx, r15
0x00003b1c      89442414       mov dword [rsp + 0x14], eax
0x00003b20      ff7330         push qword [rbx + 0x30]
0x00003b23      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00003b26      ff7328         push qword [rbx + 0x28]
0x00003b29      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x00003b2b      31f6           xor esi, esi
0x00003b2d      4189e9         mov r9d, ebp
0x00003b30      31ff           xor edi, edi
0x00003b32      4c89542440     mov qword [rsp + 0x40], r10
0x00003b37      e814eaffff     call sym.quotearg_buffer_restyled
0x00003b3c      488d7001       lea rsi, [rax + 1]
0x00003b40      4889442448     mov qword [rsp + 0x48], rax
0x00003b45      4883c420       add rsp, 0x20
0x00003b49      4889f7         mov rdi, rsi
0x00003b4c      4889742418     mov qword [rsp + 0x18], rsi
0x00003b51      e8ba0b0000     call sym.xmalloc
0x00003b56      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x00003b5b      4883ec08       sub rsp, 8
0x00003b5f      ff7330         push qword [rbx + 0x30]
0x00003b62      ff7328         push qword [rbx + 0x28]
0x00003b65      4c8b542438     mov r10, qword [rsp + 0x38]
0x00003b6a      4189e9         mov r9d, ebp
0x00003b6d      448b03         mov r8d, dword [rbx]
0x00003b70      4c89f9         mov rcx, r15
0x00003b73      4c89f2         mov rdx, r14
0x00003b76      4889c7         mov rdi, rax
0x00003b79      4152           push r10
0x00003b7b      488b742438     mov rsi, qword [rsp + 0x38]
0x00003b80      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00003b85      8b44242c       mov eax, dword [rsp + 0x2c]
0x00003b89      4883c420       add rsp, 0x20
0x00003b8d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00003b90      41894500       mov dword [r13], eax
0x00003b94      7409           je 0x3b9f
0x00003b96      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x00003b9b      4d891c24       mov qword [r12], r11
0x00003b9f      488b442410     mov rax, qword [rsp + 0x10]
0x00003ba4      4883c438       add rsp, 0x38
0x00003ba8      5b             pop rbx
0x00003ba9      5d             pop rbp
0x00003baa      415c           pop r12
0x00003bac      415d           pop r13
0x00003bae      415e           pop r14
0x00003bb0      415f           pop r15
0x00003bb2      c3             ret
0x00003bb3      0f1f00         nop dword [rax]
0x00003bb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00003bc0      4889d1         mov rcx, rdx
0x00003bc3      31d2           xor edx, edx
0x00003bc5      e906ffffff     jmp sym.quotearg_alloc_mem
0x00003bca      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00003bd0      8b0582342000   mov eax, dword [obj.nslots]             ; [0x207058:4]=1
0x00003bd6      4154           push r12
0x00003bd8      4c8b25813420.  mov r12, qword [obj.slotvec]            ; [0x207060:8]=0x207070 obj.slotvec0 ; "pp "
0x00003bdf      55             push rbp
0x00003be0      53             push rbx
0x00003be1      83f801         cmp eax, 1
0x00003be4      7e2b           jle 0x3c11                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00003be6      83e802         sub eax, 2
0x00003be9      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00003bee      48c1e004       shl rax, 4
0x00003bf2      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00003bf7      660f1f840000.  nop word [rax + rax]
0x00003c00      488b3b         mov rdi, qword [rbx]
0x00003c03      4883c310       add rbx, 0x10
0x00003c07      e8b4d6ffff     call sym.imp.free
0x00003c0c      4839eb         cmp rbx, rbp
0x00003c0f      75ef           jne 0x3c00
0x00003c11      498b7c2408     mov rdi, qword [r12 + 8]
0x00003c16      488d1de33420.  lea rbx, obj.slot0                      ; 0x207100
0x00003c1d      4839df         cmp rdi, rbx
0x00003c20      7417           je 0x3c39
0x00003c22      e899d6ffff     call sym.imp.free
0x00003c27      48c7053e3420.  mov qword [obj.slotvec0], 0x100         ; [0x207070:8]=256
0x00003c32      48891d3f3420.  mov qword [0x00207078], rbx             ; [0x207078:8]=0x207100 obj.slot0
0x00003c39      488d1d303420.  lea rbx, obj.slotvec0                   ; 0x207070
0x00003c40      4939dc         cmp r12, rbx
0x00003c43      740f           je 0x3c54
0x00003c45      4c89e7         mov rdi, r12
0x00003c48      e873d6ffff     call sym.imp.free
0x00003c4d      48891d0c3420.  mov qword [obj.slotvec], rbx            ; [0x207060:8]=0x207070 obj.slotvec0 ; "pp "
0x00003c54      5b             pop rbx
0x00003c55      c705f9332000.  mov dword [obj.nslots], 1               ; [0x207058:4]=1
0x00003c5f      5d             pop rbp
0x00003c60      415c           pop r12
0x00003c62      c3             ret
0x00003c63      0f1f00         nop dword [rax]
0x00003c66      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00003c70      488d0d893520.  lea rcx, obj.default_quoting_options    ; 0x207200
0x00003c77      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00003c7e      e90dfbffff     jmp sym.quotearg_n_options
0x00003c83      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00003c86      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00003c90      488d0d693520.  lea rcx, obj.default_quoting_options    ; 0x207200
0x00003c97      e9f4faffff     jmp sym.quotearg_n_options
0x00003c9c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00003ca0      488d0d593520.  lea rcx, obj.default_quoting_options    ; 0x207200
0x00003ca7      4889fe         mov rsi, rdi
0x00003caa      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00003cb1      31ff           xor edi, edi
0x00003cb3      e9d8faffff     jmp sym.quotearg_n_options
0x00003cb8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00003cc0      488d0d393520.  lea rcx, obj.default_quoting_options    ; 0x207200
0x00003cc7      4889f2         mov rdx, rsi
0x00003cca      4889fe         mov rsi, rdi
0x00003ccd      31ff           xor edi, edi
0x00003ccf      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00003cd4      6690           nop
0x00003cd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00003ce0      4883ec48       sub rsp, 0x48
0x00003ce4      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00003ce7      64488b142528.  mov rdx, qword fs:[0x28]
0x00003cf0      4889542438     mov qword [rsp + 0x38], rdx
0x00003cf5      31d2           xor edx, edx
0x00003cf7      83fe0a         cmp esi, 0xa
0x00003cfa      7468           je 0x3d64
0x00003cfc      893424         mov dword [rsp], esi
0x00003cff      4889e1         mov rcx, rsp
0x00003d02      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00003d09      4889c6         mov rsi, rax
0x00003d0c      48c744240400.  mov qword [rsp + 4], 0
0x00003d15      48c744240c00.  mov qword [rsp + 0xc], 0
0x00003d1e      48c744241400.  mov qword [rsp + 0x14], 0
0x00003d27      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00003d30      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00003d39      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00003d42      c74424340000.  mov dword [rsp + 0x34], 0
0x00003d4a      e841faffff     call sym.quotearg_n_options
0x00003d4f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00003d54      6448330c2528.  xor rcx, qword fs:[0x28]
0x00003d5d      750a           jne 0x3d69                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x00003d5f      4883c448       add rsp, 0x48
0x00003d63      c3             ret
0x00003d64      e867d5ffff     call sym.imp.abort
0x00003d69      e812d6ffff     call sym.imp.__stack_chk_fail
0x00003d6e      6690           nop
;-- quotearg_n_style_mem:
0x00003d70      4883ec48       sub rsp, 0x48
0x00003d74      4889d0         mov rax, rdx
0x00003d77      4889ca         mov rdx, rcx
0x00003d7a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00003d83      48894c2438     mov qword [rsp + 0x38], rcx
0x00003d88      31c9           xor ecx, ecx
0x00003d8a      83fe0a         cmp esi, 0xa
0x00003d8d      7461           je 0x3df0
0x00003d8f      893424         mov dword [rsp], esi
0x00003d92      4889e1         mov rcx, rsp
0x00003d95      4889c6         mov rsi, rax
0x00003d98      48c744240400.  mov qword [rsp + 4], 0
0x00003da1      48c744240c00.  mov qword [rsp + 0xc], 0
0x00003daa      48c744241400.  mov qword [rsp + 0x14], 0
0x00003db3      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00003dbc      48c744242400.  mov qword [rsp + 0x24], 0
0x00003dc5      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00003dce      c74424340000.  mov dword [rsp + 0x34], 0
0x00003dd6      e8b5f9ffff     call sym.quotearg_n_options
0x00003ddb      488b542438     mov rdx, qword [rsp + 0x38]
0x00003de0      644833142528.  xor rdx, qword fs:[0x28]
0x00003de9      750a           jne 0x3df5
0x00003deb      4883c448       add rsp, 0x48
0x00003def      c3             ret
0x00003df0      e8dbd4ffff     call sym.imp.abort
0x00003df5      e886d5ffff     call sym.imp.__stack_chk_fail
0x00003dfa      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00003e00      4889f2         mov rdx, rsi
0x00003e03      89fe           mov esi, edi
0x00003e05      31ff           xor edi, edi
0x00003e07      e9d4feffff     jmp sym.quotearg_n_style
0x00003e0c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00003e10      4889d1         mov rcx, rdx
0x00003e13      4889f2         mov rdx, rsi
0x00003e16      89fe           mov esi, edi
0x00003e18      31ff           xor edi, edi
0x00003e1a      e951ffffff     jmp sym.quotearg_n_style_mem
0x00003e1f      90             nop
;-- quotearg_char_mem:
0x00003e20      4883ec48       sub rsp, 0x48
0x00003e24      89d1           mov ecx, edx
0x00003e26      64488b042528.  mov rax, qword fs:[0x28]
0x00003e2f      4889442438     mov qword [rsp + 0x38], rax
0x00003e34      31c0           xor eax, eax
0x00003e36      488b05f33320.  mov rax, qword [0x00207230]             ; [0x207230:8]=0
0x00003e3d      4989e0         mov r8, rsp
0x00003e40      83e11f         and ecx, 0x1f
0x00003e43      660f6f05b533.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00003e4b      4889442430     mov qword [rsp + 0x30], rax
0x00003e50      89d0           mov eax, edx
0x00003e52      0f290424       movaps xmmword [rsp], xmm0
0x00003e56      c0e805         shr al, 5
0x00003e59      0fb6c0         movzx eax, al
0x00003e5c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00003e61      660f6f05a733.  movdqa xmm0, xmmword [0x00207210]
0x00003e69      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00003e6e      660f6f05aa33.  movdqa xmm0, xmmword [0x00207220]
0x00003e76      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00003e7b      418b11         mov edx, dword [r9]
0x00003e7e      89d0           mov eax, edx
0x00003e80      d3e8           shr eax, cl
0x00003e82      f7d0           not eax
0x00003e84      83e001         and eax, 1
0x00003e87      d3e0           shl eax, cl
0x00003e89      4c89c1         mov rcx, r8
0x00003e8c      31d0           xor eax, edx
0x00003e8e      4889f2         mov rdx, rsi
0x00003e91      4889fe         mov rsi, rdi
0x00003e94      418901         mov dword [r9], eax
0x00003e97      31ff           xor edi, edi
0x00003e99      e8f2f8ffff     call sym.quotearg_n_options
0x00003e9e      488b742438     mov rsi, qword [rsp + 0x38]
0x00003ea3      644833342528.  xor rsi, qword fs:[0x28]
0x00003eac      7505           jne 0x3eb3
0x00003eae      4883c448       add rsp, 0x48
0x00003eb2      c3             ret
0x00003eb3      e8c8d4ffff     call sym.imp.__stack_chk_fail
0x00003eb8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00003ec0      400fbed6       movsx edx, sil
0x00003ec4      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00003ecb      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00003ed0      ba3a000000     mov edx, 0x3a                           ; ':'
0x00003ed5      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00003edc      e93fffffff     jmp sym.quotearg_char_mem
0x00003ee1      0f1f440000     nop dword [rax + rax]
0x00003ee6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00003ef0      ba3a000000     mov edx, 0x3a                           ; ':'
0x00003ef5      e926ffffff     jmp sym.quotearg_char_mem
0x00003efa      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00003f00      4883ec48       sub rsp, 0x48
0x00003f04      4889d0         mov rax, rdx
0x00003f07      64488b142528.  mov rdx, qword fs:[0x28]
0x00003f10      4889542438     mov qword [rsp + 0x38], rdx
0x00003f15      31d2           xor edx, edx
0x00003f17      83fe0a         cmp esi, 0xa
0x00003f1a      7468           je 0x3f84
0x00003f1c      893424         mov dword [rsp], esi
0x00003f1f      4889e1         mov rcx, rsp
0x00003f22      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00003f29      4889c6         mov rsi, rax
0x00003f2c      48c744240400.  mov qword [rsp + 4], 0
0x00003f35      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x00003f3e      48c744241400.  mov qword [rsp + 0x14], 0
0x00003f47      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00003f50      48c744242400.  mov qword [rsp + 0x24], 0
0x00003f59      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00003f62      c74424340000.  mov dword [rsp + 0x34], 0
0x00003f6a      e821f8ffff     call sym.quotearg_n_options
0x00003f6f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00003f74      6448330c2528.  xor rcx, qword fs:[0x28]
0x00003f7d      750a           jne 0x3f89
0x00003f7f      4883c448       add rsp, 0x48
0x00003f83      c3             ret
0x00003f84      e847d3ffff     call sym.imp.abort
0x00003f89      e8f2d3ffff     call sym.imp.__stack_chk_fail
0x00003f8e      6690           nop
;-- quotearg_n_custom_mem:
0x00003f90      4883ec48       sub rsp, 0x48
0x00003f94      4989c9         mov r9, rcx
0x00003f97      488b0d923220.  mov rcx, qword [0x00207230]             ; [0x207230:8]=0
0x00003f9e      660f6f055a32.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00003fa6      64488b042528.  mov rax, qword fs:[0x28]
0x00003faf      4889442438     mov qword [rsp + 0x38], rax
0x00003fb4      31c0           xor eax, eax
0x00003fb6      0f290424       movaps xmmword [rsp], xmm0
0x00003fba      4885f6         test rsi, rsi
0x00003fbd      48894c2430     mov qword [rsp + 0x30], rcx
0x00003fc2      c704240a0000.  mov dword [rsp], 0xa
0x00003fc9      660f6f053f32.  movdqa xmm0, xmmword [0x00207210]
0x00003fd1      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00003fd6      660f6f054232.  movdqa xmm0, xmmword [0x00207220]
0x00003fde      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00003fe3      7432           je 0x4017
0x00003fe5      4885d2         test rdx, rdx
0x00003fe8      742d           je 0x4017
0x00003fea      4889742428     mov qword [rsp + 0x28], rsi
0x00003fef      4889542430     mov qword [rsp + 0x30], rdx
0x00003ff4      4889e1         mov rcx, rsp
0x00003ff7      4c89c2         mov rdx, r8
0x00003ffa      4c89ce         mov rsi, r9
0x00003ffd      e88ef7ffff     call sym.quotearg_n_options
0x00004002      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00004007      6448333c2528.  xor rdi, qword fs:[0x28]
0x00004010      750a           jne 0x401c
0x00004012      4883c448       add rsp, 0x48
0x00004016      c3             ret
0x00004017      e8b4d2ffff     call sym.imp.abort
0x0000401c      e85fd3ffff     call sym.imp.__stack_chk_fail
0x00004021      0f1f440000     nop dword [rax + rax]
0x00004026      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00004030      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00004037      e954ffffff     jmp sym.quotearg_n_custom_mem
0x0000403c      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00004040      4889d1         mov rcx, rdx
0x00004043      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0000404a      4889f2         mov rdx, rsi
0x0000404d      4889fe         mov rsi, rdi
0x00004050      31ff           xor edi, edi
0x00004052      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00004057      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00004060      4989c8         mov r8, rcx
0x00004063      4889d1         mov rcx, rdx
0x00004066      4889f2         mov rdx, rsi
0x00004069      4889fe         mov rsi, rdi
0x0000406c      31ff           xor edi, edi
0x0000406e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00004073      0f1f00         nop dword [rax]
0x00004076      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00004080      488d0d992f20.  lea rcx, obj.quote_quoting_options      ; 0x207020
0x00004087      e904f7ffff     jmp sym.quotearg_n_options
0x0000408c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00004090      488d0d892f20.  lea rcx, obj.quote_quoting_options      ; 0x207020
0x00004097      4889f2         mov rdx, rsi
0x0000409a      4889fe         mov rsi, rdi
0x0000409d      31ff           xor edi, edi
0x0000409f      e9ecf6ffff     jmp sym.quotearg_n_options
0x000040a4      6690           nop
0x000040a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x000040b0      488d0d692f20.  lea rcx, obj.quote_quoting_options      ; 0x207020
0x000040b7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000040be      e9cdf6ffff     jmp sym.quotearg_n_options
0x000040c3      0f1f00         nop dword [rax]
0x000040c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x000040d0      488d0d492f20.  lea rcx, obj.quote_quoting_options      ; 0x207020
0x000040d7      4889fe         mov rsi, rdi
0x000040da      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000040e1      31ff           xor edi, edi
0x000040e3      e9a8f6ffff     jmp sym.quotearg_n_options
0x000040e8      0f1f84000000.  nop dword [rax + rax]
;-- version_etc_arn:
0x000040f0      4157           push r15
0x000040f2      4156           push r14
0x000040f4      4155           push r13
0x000040f6      4154           push r12
0x000040f8      4d89cc         mov r12, r9
0x000040fb      55             push rbp
0x000040fc      53             push rbx
0x000040fd      4889fd         mov rbp, rdi
0x00004100      4c89c3         mov rbx, r8
0x00004103      4883ec28       sub rsp, 0x28
0x00004107      4885f6         test rsi, rsi
0x0000410a      0f8418010000   je 0x4228
0x00004110      4989d0         mov r8, rdx
0x00004113      488d156e1600.  lea rdx, [0x00005788]                   ; "%s (%s) %s\n"
0x0000411a      4989c9         mov r9, rcx
0x0000411d      31c0           xor eax, eax
0x0000411f      4889f1         mov rcx, rsi
0x00004122      be01000000     mov esi, 1
0x00004127      e804d4ffff     call sym.imp.__fprintf_chk
0x0000412c      488d35681600.  lea rsi, [0x0000579b]                   ; "(C)"
0x00004133      31ff           xor edi, edi
0x00004135      ba05000000     mov edx, 5
0x0000413a      e811d2ffff     call sym.imp.dcgettext
0x0000413f      488d157a1900.  lea rdx, obj.version_etc_copyright      ; 0x5ac0 ; "Copyright %s %d Free Software Foundation, Inc."
0x00004146      4889c1         mov rcx, rax
0x00004149      41b8e3070000   mov r8d, 0x7e3
0x0000414f      be01000000     mov esi, 1
0x00004154      4889ef         mov rdi, rbp
0x00004157      31c0           xor eax, eax
0x00004159      e8d2d3ffff     call sym.imp.__fprintf_chk
0x0000415e      488d35c31600.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x5828 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00004165      31ff           xor edi, edi
0x00004167      ba05000000     mov edx, 5
0x0000416c      e8dfd1ffff     call sym.imp.dcgettext
0x00004171      4889ee         mov rsi, rbp
0x00004174      4889c7         mov rdi, rax
0x00004177      e874d2ffff     call sym.imp.fputs_unlocked
0x0000417c      4983fc09       cmp r12, 9
0x00004180      0f873a030000   ja 0x44c0
0x00004186      488d15fb1800.  lea rdx, [0x00005a88]
0x0000418d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00004191      4801d0         add rax, rdx
0x00004194      ffe0           jmp rax
0x00004196      662e0f1f8400.  nop word cs:[rax + rax]
0x000041a0      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000041a4      488b4310       mov rax, qword [rbx + 0x10]
0x000041a8      488d35e91700.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x5998 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x000041af      4c8b4308       mov r8, qword [rbx + 8]
0x000041b3      ba05000000     mov edx, 5
0x000041b8      31ff           xor edi, edi
0x000041ba      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000041be      4c8b6328       mov r12, qword [rbx + 0x28]
0x000041c2      4c894c2410     mov qword [rsp + 0x10], r9
0x000041c7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000041cb      4c8b7318       mov r14, qword [rbx + 0x18]
0x000041cf      48890424       mov qword [rsp], rax
0x000041d3      4c89442408     mov qword [rsp + 8], r8
0x000041d8      488b1b         mov rbx, qword [rbx]
0x000041db      e870d1ffff     call sym.imp.dcgettext
0x000041e0      4883ec08       sub rsp, 8
0x000041e4      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x000041e9      4889c2         mov rdx, rax
0x000041ec      4889d9         mov rcx, rbx
0x000041ef      be01000000     mov esi, 1
0x000041f4      4889ef         mov rdi, rbp
0x000041f7      31c0           xor eax, eax
0x000041f9      4151           push r9
0x000041fb      4155           push r13
0x000041fd      4154           push r12
0x000041ff      4157           push r15
0x00004201      4156           push r14
0x00004203      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00004208      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000420d      e81ed3ffff     call sym.imp.__fprintf_chk
0x00004212      4883c430       add rsp, 0x30
0x00004216      4883c428       add rsp, 0x28
0x0000421a      5b             pop rbx
0x0000421b      5d             pop rbp
0x0000421c      415c           pop r12
0x0000421e      415d           pop r13
0x00004220      415e           pop r14
0x00004222      415f           pop r15
0x00004224      c3             ret
0x00004225      0f1f00         nop dword [rax]
0x00004228      4989c8         mov r8, rcx
0x0000422b      4889d1         mov rcx, rdx
0x0000422e      488d155f1500.  lea rdx, str.s__s                       ; 0x5794 ; "%s %s\n"
0x00004235      be01000000     mov esi, 1
0x0000423a      31c0           xor eax, eax
0x0000423c      e8efd2ffff     call sym.imp.__fprintf_chk
0x00004241      e9e6feffff     jmp 0x412c
0x00004246      662e0f1f8400.  nop word cs:[rax + rax]
0x00004250      4c8b5340       mov r10, qword [rbx + 0x40]
0x00004254      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004258      488d35691700.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x59c8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x0000425f      488b4310       mov rax, qword [rbx + 0x10]
0x00004263      4c8b4308       mov r8, qword [rbx + 8]
0x00004267      ba05000000     mov edx, 5
0x0000426c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004270      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004274      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004278      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000427c      488b1b         mov rbx, qword [rbx]
0x0000427f      4c89542418     mov qword [rsp + 0x18], r10
0x00004284      4c894c2410     mov qword [rsp + 0x10], r9
0x00004289      48890424       mov qword [rsp], rax
0x0000428d      4c89442408     mov qword [rsp + 8], r8
0x00004292      31ff           xor edi, edi
0x00004294      e8b7d0ffff     call sym.imp.dcgettext
0x00004299      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000429e      4152           push r10
0x000042a0      e93fffffff     jmp 0x41e4
0x000042a5      0f1f00         nop dword [rax]
0x000042a8      488b1b         mov rbx, qword [rbx]
0x000042ab      488d35ed1400.  lea rsi, str.Written_by__s.             ; 0x579f ; "Written by %s.\n"
0x000042b2      ba05000000     mov edx, 5
0x000042b7      31ff           xor edi, edi
0x000042b9      e892d0ffff     call sym.imp.dcgettext
0x000042be      4883c428       add rsp, 0x28
0x000042c2      4889d9         mov rcx, rbx
0x000042c5      4889ef         mov rdi, rbp
0x000042c8      5b             pop rbx
0x000042c9      5d             pop rbp
0x000042ca      415c           pop r12
0x000042cc      415d           pop r13
0x000042ce      415e           pop r14
0x000042d0      415f           pop r15
0x000042d2      4889c2         mov rdx, rax
0x000042d5      be01000000     mov esi, 1
0x000042da      31c0           xor eax, eax
0x000042dc      e94fd2ffff     jmp sym.imp.__fprintf_chk
0x000042e1      0f1f80000000.  nop dword [rax]
0x000042e8      4c8b6308       mov r12, qword [rbx + 8]
0x000042ec      488d35bc1400.  lea rsi, str.Written_by__s_and__s.      ; 0x57af ; "Written by %s and %s.\n"
0x000042f3      488b1b         mov rbx, qword [rbx]
0x000042f6      ba05000000     mov edx, 5
0x000042fb      31ff           xor edi, edi
0x000042fd      e84ed0ffff     call sym.imp.dcgettext
0x00004302      4883c428       add rsp, 0x28
0x00004306      4d89e0         mov r8, r12
0x00004309      4889d9         mov rcx, rbx
0x0000430c      4889ef         mov rdi, rbp
0x0000430f      4889c2         mov rdx, rax
0x00004312      be01000000     mov esi, 1
0x00004317      5b             pop rbx
0x00004318      5d             pop rbp
0x00004319      415c           pop r12
0x0000431b      415d           pop r13
0x0000431d      415e           pop r14
0x0000431f      415f           pop r15
0x00004321      31c0           xor eax, eax
0x00004323      e908d2ffff     jmp sym.imp.__fprintf_chk
0x00004328      0f1f84000000.  nop dword [rax + rax]
0x00004330      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004334      4c8b6308       mov r12, qword [rbx + 8]
0x00004338      488d35871400.  lea rsi, str.Written_by__s___s__and__s. ; 0x57c6 ; "Written by %s, %s, and %s.\n"
0x0000433f      488b1b         mov rbx, qword [rbx]
0x00004342      ba05000000     mov edx, 5
0x00004347      31ff           xor edi, edi
0x00004349      e802d0ffff     call sym.imp.dcgettext
0x0000434e      4883c428       add rsp, 0x28
0x00004352      4d89e9         mov r9, r13
0x00004355      4d89e0         mov r8, r12
0x00004358      4889d9         mov rcx, rbx
0x0000435b      4889ef         mov rdi, rbp
0x0000435e      4889c2         mov rdx, rax
0x00004361      5b             pop rbx
0x00004362      5d             pop rbp
0x00004363      415c           pop r12
0x00004365      415d           pop r13
0x00004367      415e           pop r14
0x00004369      415f           pop r15
0x0000436b      be01000000     mov esi, 1
0x00004370      31c0           xor eax, eax
0x00004372      e9b9d1ffff     jmp sym.imp.__fprintf_chk
0x00004377      660f1f840000.  nop word [rax + rax]
0x00004380      488d35711500.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x58f8 ; "Written by %s, %s, %s,\nand %s.\n"
0x00004387      ba05000000     mov edx, 5
0x0000438c      31ff           xor edi, edi
0x0000438e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004392      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004396      4c8b6308       mov r12, qword [rbx + 8]
0x0000439a      488b1b         mov rbx, qword [rbx]
0x0000439d      e8aecfffff     call sym.imp.dcgettext
0x000043a2      4883ec08       sub rsp, 8
0x000043a6      4156           push r14
0x000043a8      4889c2         mov rdx, rax
0x000043ab      4d89e9         mov r9, r13
0x000043ae      4d89e0         mov r8, r12
0x000043b1      4889d9         mov rcx, rbx
0x000043b4      4889ef         mov rdi, rbp
0x000043b7      be01000000     mov esi, 1
0x000043bc      31c0           xor eax, eax
0x000043be      e86dd1ffff     call sym.imp.__fprintf_chk
0x000043c3      58             pop rax
0x000043c4      5a             pop rdx
0x000043c5      4883c428       add rsp, 0x28
0x000043c9      5b             pop rbx
0x000043ca      5d             pop rbp
0x000043cb      415c           pop r12
0x000043cd      415d           pop r13
0x000043cf      415e           pop r14
0x000043d1      415f           pop r15
0x000043d3      c3             ret
0x000043d4      0f1f4000       nop dword [rax]
0x000043d8      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000043dc      488d35351500.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x5918 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x000043e3      ba05000000     mov edx, 5
0x000043e8      31ff           xor edi, edi
0x000043ea      4c8b7318       mov r14, qword [rbx + 0x18]
0x000043ee      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000043f2      4c8b6308       mov r12, qword [rbx + 8]
0x000043f6      488b1b         mov rbx, qword [rbx]
0x000043f9      e852cfffff     call sym.imp.dcgettext
0x000043fe      4157           push r15
0x00004400      eba4           jmp 0x43a6
0x00004402      660f1f440000   nop word [rax + rax]
0x00004408      4c8b4308       mov r8, qword [rbx + 8]
0x0000440c      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004410      488d35291500.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x5940 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00004417      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000441b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000441f      ba05000000     mov edx, 5
0x00004424      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004428      31ff           xor edi, edi
0x0000442a      488b1b         mov rbx, qword [rbx]
0x0000442d      4c890424       mov qword [rsp], r8
0x00004431      e81acfffff     call sym.imp.dcgettext
0x00004436      4883ec08       sub rsp, 8
0x0000443a      4d89e9         mov r9, r13
0x0000443d      4154           push r12
0x0000443f      4157           push r15
0x00004441      4156           push r14
0x00004443      4c8b442420     mov r8, qword [rsp + 0x20]
0x00004448      4889d9         mov rcx, rbx
0x0000444b      4889c2         mov rdx, rax
0x0000444e      4889ef         mov rdi, rbp
0x00004451      be01000000     mov esi, 1
0x00004456      31c0           xor eax, eax
0x00004458      e8d3d0ffff     call sym.imp.__fprintf_chk
0x0000445d      4883c420       add rsp, 0x20
0x00004461      4883c428       add rsp, 0x28
0x00004465      5b             pop rbx
0x00004466      5d             pop rbp
0x00004467      415c           pop r12
0x00004469      415d           pop r13
0x0000446b      415e           pop r14
0x0000446d      415f           pop r15
0x0000446f      c3             ret
0x00004470      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00004474      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004478      488d35e91400.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x5968 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x0000447f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004483      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004487      ba05000000     mov edx, 5
0x0000448c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004490      4c8b4308       mov r8, qword [rbx + 8]
0x00004494      31ff           xor edi, edi
0x00004496      4c894c2408     mov qword [rsp + 8], r9
0x0000449b      488b1b         mov rbx, qword [rbx]
0x0000449e      4c890424       mov qword [rsp], r8
0x000044a2      e8a9ceffff     call sym.imp.dcgettext
0x000044a7      4155           push r13
0x000044a9      4154           push r12
0x000044ab      4157           push r15
0x000044ad      4156           push r14
0x000044af      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x000044b4      eb8d           jmp 0x4443
0x000044b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000044c0      4c8b5340       mov r10, qword [rbx + 0x40]
0x000044c4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000044c8      ba05000000     mov edx, 5
0x000044cd      488b4310       mov rax, qword [rbx + 0x10]
0x000044d1      4c8b4308       mov r8, qword [rbx + 8]
0x000044d5      488d35241500.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x5a00 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x000044dc      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000044e0      4c8b6328       mov r12, qword [rbx + 0x28]
0x000044e4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000044e8      4c8b7318       mov r14, qword [rbx + 0x18]
0x000044ec      4c89542418     mov qword [rsp + 0x18], r10
0x000044f1      4c894c2410     mov qword [rsp + 0x10], r9
0x000044f6      48890424       mov qword [rsp], rax
0x000044fa      4c89442408     mov qword [rsp + 8], r8
0x000044ff      488b1b         mov rbx, qword [rbx]
0x00004502      e98bfdffff     jmp 0x4292
0x00004507      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00004510      4531c9         xor r9d, r9d
0x00004513      49833800       cmp qword [r8], 0
0x00004517      7412           je 0x452b
0x00004519      0f1f80000000.  nop dword [rax]
0x00004520      4983c101       add r9, 1
0x00004524      4b833cc800     cmp qword [r8 + r9*8], 0
0x00004529      75f5           jne 0x4520
0x0000452b      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00004530      4883ec68       sub rsp, 0x68
0x00004534      4d89c2         mov r10, r8
0x00004537      4531c9         xor r9d, r9d
0x0000453a      64488b042528.  mov rax, qword fs:[0x28]
0x00004543      4889442458     mov qword [rsp + 0x58], rax
0x00004548      31c0           xor eax, eax
0x0000454a      4989e0         mov r8, rsp
0x0000454d      0f1f00         nop dword [rax]
0x00004550      418b02         mov eax, dword [r10]
0x00004553      83f82f         cmp eax, 0x2f
0x00004556      7742           ja 0x459a
0x00004558      4189c3         mov r11d, eax
0x0000455b      4d035a10       add r11, qword [r10 + 0x10]
0x0000455f      83c008         add eax, 8
0x00004562      418902         mov dword [r10], eax
0x00004565      498b03         mov rax, qword [r11]
0x00004568      4885c0         test rax, rax
0x0000456b      4b8904c8       mov qword [r8 + r9*8], rax
0x0000456f      740a           je 0x457b
0x00004571      4983c101       add r9, 1
0x00004575      4983f90a       cmp r9, 0xa
0x00004579      75d5           jne 0x4550
0x0000457b      e870fbffff     call sym.version_etc_arn
0x00004580      488b442458     mov rax, qword [rsp + 0x58]
0x00004585      644833042528.  xor rax, qword fs:[0x28]
0x0000458e      7505           jne 0x4595
0x00004590      4883c468       add rsp, 0x68
0x00004594      c3             ret
0x00004595      e8e6cdffff     call sym.imp.__stack_chk_fail
0x0000459a      4d8b5a08       mov r11, qword [r10 + 8]
0x0000459e      498d4308       lea rax, [r11 + 8]
0x000045a2      49894208       mov qword [r10 + 8], rax
0x000045a6      ebbd           jmp 0x4565
0x000045a8      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x000045b0      55             push rbp
0x000045b1      53             push rbx
0x000045b2      41ba20000000   mov r10d, 0x20                          ; "@"
0x000045b8      4531db         xor r11d, r11d
0x000045bb      4881ecb80000.  sub rsp, 0xb8
0x000045c2      64488b042528.  mov rax, qword fs:[0x28]
0x000045cb      4889442478     mov qword [rsp + 0x78], rax
0x000045d0      31c0           xor eax, eax
0x000045d2      488d8424d000.  lea rax, [rsp + 0xd0]
0x000045da      4c898424a000.  mov qword [rsp + 0xa0], r8
0x000045e2      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x000045ea      4c8d442420     lea r8, [rsp + 0x20]
0x000045ef      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x000045f7      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x000045ff      4889442410     mov qword [rsp + 0x10], rax
0x00004604      488d84248000.  lea rax, [rsp + 0x80]
0x0000460c      4531c9         xor r9d, r9d
0x0000460f      4889442418     mov qword [rsp + 0x18], rax
0x00004614      4889c5         mov rbp, rax
0x00004617      660f1f840000.  nop word [rax + rax]
0x00004620      4183fa2f       cmp r10d, 0x2f
0x00004624      7756           ja 0x467c
0x00004626      4489d0         mov eax, r10d
0x00004629      41bb01000000   mov r11d, 1
0x0000462f      4183c208       add r10d, 8
0x00004633      4801e8         add rax, rbp
0x00004636      488b00         mov rax, qword [rax]
0x00004639      4885c0         test rax, rax
0x0000463c      4b8904c8       mov qword [r8 + r9*8], rax
0x00004640      740a           je 0x464c
0x00004642      4983c101       add r9, 1
0x00004646      4983f90a       cmp r9, 0xa
0x0000464a      75d4           jne 0x4620
0x0000464c      4584db         test r11b, r11b
0x0000464f      7524           jne 0x4675
0x00004651      e89afaffff     call sym.version_etc_arn
0x00004656      488b442478     mov rax, qword [rsp + 0x78]
0x0000465b      644833042528.  xor rax, qword fs:[0x28]
0x00004664      750a           jne 0x4670
0x00004666      4881c4b80000.  add rsp, 0xb8
0x0000466d      5b             pop rbx
0x0000466e      5d             pop rbp
0x0000466f      c3             ret
0x00004670      e80bcdffff     call sym.imp.__stack_chk_fail
0x00004675      4489542408     mov dword [rsp + 8], r10d
0x0000467a      ebd5           jmp 0x4651
0x0000467c      4889d8         mov rax, rbx
0x0000467f      4883c308       add rbx, 8
0x00004683      ebb1           jmp 0x4636
0x00004685      90             nop
0x00004686      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00004690      53             push rbx
0x00004691      488d354a1100.  lea rsi, str.Report_bugs_to:__s         ; 0x57e2 ; "\nReport bugs to: %s\n"
0x00004698      ba05000000     mov edx, 5
0x0000469d      31ff           xor edi, edi
0x0000469f      e8acccffff     call sym.imp.dcgettext
0x000046a4      488d154c1100.  lea rdx, str.bug_coreutils_gnu.org      ; 0x57f7 ; "bug-coreutils@gnu.org"
0x000046ab      4889c6         mov rsi, rax
0x000046ae      bf01000000     mov edi, 1
0x000046b3      31c0           xor eax, eax
0x000046b5      e806ceffff     call sym.imp.__printf_chk
0x000046ba      488d354c1100.  lea rsi, str.s_home_page:___s           ; 0x580d ; "%s home page: <%s>\n"
0x000046c1      ba05000000     mov edx, 5
0x000046c6      31ff           xor edi, edi
0x000046c8      e883ccffff     call sym.imp.dcgettext
0x000046cd      488d0de40900.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x50b8 ; "https://www.gnu.org/software/coreutils/"
0x000046d4      488d15c60600.  lea rdx, str.GNU_coreutils              ; 0x4da1 ; "GNU coreutils"
0x000046db      4889c6         mov rsi, rax
0x000046de      bf01000000     mov edi, 1
0x000046e3      31c0           xor eax, eax
0x000046e5      e8d6cdffff     call sym.imp.__printf_chk
0x000046ea      488b1d972920.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x207088:8]=0
0x000046f1      488d35481300.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x5a40 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x000046f8      31ff           xor edi, edi
0x000046fa      ba05000000     mov edx, 5
0x000046ff      e84cccffff     call sym.imp.dcgettext
0x00004704      4889de         mov rsi, rbx
0x00004707      4889c7         mov rdi, rax
0x0000470a      5b             pop rbx
0x0000470b      e9e0ccffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00004710      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00004711      4889fb         mov rbx, rdi
0x00004714      e847cdffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00004719      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x0000471c      7505           jne 0x4723
0x0000471e      4885db         test rbx, rbx
0x00004721      7502           jne 0x4725
0x00004723      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00004724      c3             ret
0x00004725      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x0000472a      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00004730      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00004733      48f7e6         mul rsi
0x00004736      4889c7         mov rdi, rax
0x00004739      0f90c0         seto al
0x0000473c      4885ff         test rdi, rdi
0x0000473f      780a           js 0x474b
0x00004741      0fb6c0         movzx eax, al
0x00004744      4885c0         test rax, rax
0x00004747      7502           jne 0x474b
0x00004749      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x0000474b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x0000474f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00004754      6690           nop
0x00004756      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00004760      ebae           jmp sym.xmalloc
0x00004762      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00004766      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00004770      4885f6         test rsi, rsi
0x00004773      53             push rbx
0x00004774      4889f3         mov rbx, rsi
0x00004777      7505           jne 0x477e
0x00004779      4885ff         test rdi, rdi
0x0000477c      751a           jne 0x4798
0x0000477e      4889de         mov rsi, rbx
0x00004781      e81acdffff     call sym.imp.realloc
0x00004786      4885c0         test rax, rax
0x00004789      7505           jne 0x4790
0x0000478b      4885db         test rbx, rbx
0x0000478e      7511           jne 0x47a1                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00004790      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00004791      c3             ret
0x00004792      660f1f440000   nop word [rax + rax]
0x00004798      e823cbffff     call sym.imp.free
0x0000479d      31c0           xor eax, eax
0x0000479f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x000047a0      c3             ret
0x000047a1      e8ba010000     call sym.xalloc_die
0x000047a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x000047b0      4889f0         mov rax, rsi
0x000047b3      48f7e2         mul rdx
0x000047b6      4889c6         mov rsi, rax
0x000047b9      0f90c0         seto al
0x000047bc      4885f6         test rsi, rsi
0x000047bf      780a           js 0x47cb
0x000047c1      0fb6c0         movzx eax, al
0x000047c4      4885c0         test rax, rax
0x000047c7      7502           jne 0x47cb
0x000047c9      eba5           jmp sym.xrealloc
0x000047cb      4883ec08       sub rsp, 8
0x000047cf      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x000047d4      6690           nop
0x000047d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x000047e0      4885ff         test rdi, rdi
0x000047e3      4989d1         mov r9, rdx
0x000047e6      488b0e         mov rcx, qword [rsi]
0x000047e9      7435           je 0x4820
0x000047eb      31d2           xor edx, edx
0x000047ed      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x000047f7      49f7f1         div r9
0x000047fa      4839c8         cmp rax, rcx
0x000047fd      763c           jbe 0x483b
0x000047ff      4889c8         mov rax, rcx
0x00004802      48d1e8         shr rax, 1
0x00004805      488d4c0801     lea rcx, [rax + rcx + 1]
0x0000480a      48890e         mov qword [rsi], rcx
0x0000480d      490fafc9       imul rcx, r9
0x00004811      4889ce         mov rsi, rcx
0x00004814      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00004819      0f1f80000000.  nop dword [rax]
0x00004820      4885c9         test rcx, rcx
0x00004823      7423           je 0x4848
0x00004825      4889c8         mov rax, rcx
0x00004828      49f7e1         mul r9
0x0000482b      0f90c2         seto dl
0x0000482e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00004831      0fb6d2         movzx edx, dl
0x00004834      7805           js 0x483b
0x00004836      4885d2         test rdx, rdx
0x00004839      74cf           je 0x480a
0x0000483b      4883ec08       sub rsp, 8
0x0000483f      e81c010000     call sym.xalloc_die
0x00004844      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00004848      31d2           xor edx, edx
0x0000484a      b880000000     mov eax, 0x80
0x0000484f      4531c0         xor r8d, r8d
0x00004852      49f7f1         div r9
0x00004855      4885c0         test rax, rax
0x00004858      410f94c0       sete r8b
0x0000485c      498d0c00       lea rcx, [r8 + rax]
0x00004860      ebc3           jmp 0x4825
0x00004862      0f1f4000       nop dword [rax]
0x00004866      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00004870      4885ff         test rdi, rdi
0x00004873      488b06         mov rax, qword [rsi]
0x00004876      7428           je 0x48a0
0x00004878      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00004882      4839d0         cmp rax, rdx
0x00004885      772a           ja 0x48b1
0x00004887      4889c2         mov rdx, rax
0x0000488a      48d1ea         shr rdx, 1
0x0000488d      488d440201     lea rax, [rdx + rax + 1]
0x00004892      488906         mov qword [rsi], rax
0x00004895      4889c6         mov rsi, rax
0x00004898      e9d3feffff     jmp sym.xrealloc
0x0000489d      0f1f00         nop dword [rax]
0x000048a0      4885c0         test rax, rax
0x000048a3      ba80000000     mov edx, 0x80
0x000048a8      480f44c2       cmove rax, rdx
0x000048ac      4885c0         test rax, rax
0x000048af      79e1           jns 0x4892
0x000048b1      4883ec08       sub rsp, 8
0x000048b5      e8a6000000     call sym.xalloc_die
0x000048ba      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x000048c0      53             push rbx
0x000048c1      4889fb         mov rbx, rdi
0x000048c4      e847feffff     call sym.xmalloc
0x000048c9      4889da         mov rdx, rbx
0x000048cc      31f6           xor esi, esi
0x000048ce      4889c7         mov rdi, rax
0x000048d1      5b             pop rbx
0x000048d2      e9f9caffff     jmp sym.imp.memset
0x000048d7      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x000048e0      4889f8         mov rax, rdi
0x000048e3      4883ec08       sub rsp, 8
0x000048e7      48f7e6         mul rsi
0x000048ea      0f90c2         seto dl
0x000048ed      4885c0         test rax, rax
0x000048f0      7817           js 0x4909
0x000048f2      0fb6d2         movzx edx, dl
0x000048f5      4885d2         test rdx, rdx
0x000048f8      750f           jne 0x4909
0x000048fa      e801cbffff     call sym.imp.calloc
0x000048ff      4885c0         test rax, rax
0x00004902      7405           je 0x4909
0x00004904      4883c408       add rsp, 8
0x00004908      c3             ret
0x00004909      e852000000     call sym.xalloc_die
0x0000490e      6690           nop
;-- xmemdup:
0x00004910      55             push rbp
0x00004911      53             push rbx
0x00004912      4889fd         mov rbp, rdi
0x00004915      4889f7         mov rdi, rsi
0x00004918      4889f3         mov rbx, rsi
0x0000491b      4883ec08       sub rsp, 8
0x0000491f      e8ecfdffff     call sym.xmalloc
0x00004924      4883c408       add rsp, 8
0x00004928      4889da         mov rdx, rbx
0x0000492b      4889ee         mov rsi, rbp
0x0000492e      5b             pop rbx
0x0000492f      5d             pop rbp
0x00004930      4889c7         mov rdi, rax
0x00004933      e9f8caffff     jmp sym.imp.memcpy
0x00004938      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00004940      53             push rbx
0x00004941      4889fb         mov rbx, rdi
0x00004944      e827caffff     call sym.imp.strlen
0x00004949      4889df         mov rdi, rbx
0x0000494c      488d7001       lea rsi, [rax + 1]
0x00004950      5b             pop rbx
0x00004951      ebbd           jmp sym.xmemdup
0x00004953      662e0f1f8400.  nop word cs:[rax + rax]
0x0000495d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00004960      488d35881100.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x5aef ; "memory exhausted"
0x00004967      4883ec08       sub rsp, 8
0x0000496b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00004970      31ff           xor edi, edi
0x00004972      e8d9c9ffff     call sym.imp.dcgettext
0x00004977      8b3d9b262000   mov edi, dword [obj.exit_failure]       ; [0x207018:4]=1
0x0000497d      488d156d0800.  lea rdx, [0x000051f1]                   ; "%s"
0x00004984      4889c1         mov rcx, rax
0x00004987      31f6           xor esi, esi
0x00004989      31c0           xor eax, eax
0x0000498b      e850cbffff     call sym.imp.error
0x00004990      e83bc9ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00004995      662e0f1f8400.  nop word cs:[rax + rax]
0x0000499f      90             nop
;-- rpl_mbrtowc:
0x000049a0      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x000049a2      4154           push r12
0x000049a4      4989f5         mov r13, rsi
0x000049a7      55             push rbp
0x000049a8      53             push rbx
0x000049a9      4889fb         mov rbx, rdi
0x000049ac      4989d4         mov r12, rdx
0x000049af      4883ec18       sub rsp, 0x18
0x000049b3      64488b042528.  mov rax, qword fs:[0x28]
0x000049bc      4889442408     mov qword [rsp + 8], rax
0x000049c1      31c0           xor eax, eax
0x000049c3      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x000049c8      4885ff         test rdi, rdi
0x000049cb      480f44d8       cmove rbx, rax
0x000049cf      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x000049d2      e8c9c9ffff     call sym.imp.mbrtowc
0x000049d7      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x000049db      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x000049de      7620           jbe 0x4a00                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x000049e0      4d85e4         test r12, r12
0x000049e3      741b           je 0x4a00
0x000049e5      31ff           xor edi, edi
0x000049e7      e8c4000000     call sym.hard_locale
0x000049ec      84c0           test al, al
0x000049ee      7510           jne 0x4a00
0x000049f0      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x000049f5      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x000049fa      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x000049fc      0f1f4000       nop dword [rax]
0x00004a00      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00004a05      644833142528.  xor rdx, qword fs:[0x28]
0x00004a0e      4889e8         mov rax, rbp
0x00004a11      750b           jne 0x4a1e
0x00004a13      4883c418       add rsp, 0x18
0x00004a17      5b             pop rbx
0x00004a18      5d             pop rbp
0x00004a19      415c           pop r12
0x00004a1b      415d           pop r13
0x00004a1d      c3             ret
0x00004a1e      e85dc9ffff     call sym.imp.__stack_chk_fail
0x00004a23      662e0f1f8400.  nop word cs:[rax + rax]
0x00004a2d      0f1f00         nop dword [rax]
;-- close_stream:
0x00004a30      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00004a32      55             push rbp
0x00004a33      4889fd         mov rbp, rdi
0x00004a36      53             push rbx
0x00004a37      e8d4c8ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x00004a3c      8b5d00         mov ebx, dword [rbp]
0x00004a3f      4889ef         mov rdi, rbp
0x00004a42      4989c4         mov r12, rax
0x00004a45      e806010000     call sym.rpl_fclose
0x00004a4a      83e320         and ebx, 0x20                           ; "@"
0x00004a4d      85db           test ebx, ebx
0x00004a4f      7517           jne 0x4a68
0x00004a51      85c0           test eax, eax
0x00004a53      740a           je 0x4a5f                               ; stdio.h:-186
0x00004a55      4d85e4         test r12, r12                           ; stdio.h:-178
0x00004a58      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00004a5d      7439           je 0x4a98
0x00004a5f      5b             pop rbx
0x00004a60      5d             pop rbp
0x00004a61      415c           pop r12
0x00004a63      c3             ret
0x00004a64      0f1f4000       nop dword [rax]
0x00004a68      85c0           test eax, eax
0x00004a6a      751c           jne 0x4a88
0x00004a6c      e86fc8ffff     call sym.imp.__errno_location
0x00004a71      c70000000000   mov dword [rax], 0
0x00004a77      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00004a7c      5b             pop rbx
0x00004a7d      5d             pop rbp
0x00004a7e      415c           pop r12
0x00004a80      c3             ret
0x00004a81      0f1f80000000.  nop dword [rax]
0x00004a88      5b             pop rbx
0x00004a89      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00004a8e      5d             pop rbp                                 ; stdio.h:-186
0x00004a8f      415c           pop r12
0x00004a91      c3             ret
0x00004a92      660f1f440000   nop word [rax + rax]
0x00004a98      e843c8ffff     call sym.imp.__errno_location
0x00004a9d      833809         cmp dword [rax], 9
0x00004aa0      5b             pop rbx
0x00004aa1      5d             pop rbp
0x00004aa2      415c           pop r12                                 ; stdio.h:-178
0x00004aa4      0f95c0         setne al
0x00004aa7      0fb6c0         movzx eax, al
0x00004aaa      f7d8           neg eax
0x00004aac      c3             ret
0x00004aad      0f1f00         nop dword [rax]
;-- hard_locale:
0x00004ab0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00004ab4      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00004ab6      e8f5c9ffff     call sym.imp.setlocale
0x00004abb      4889c2         mov rdx, rax
0x00004abe      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00004ac3      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00004ac6      741d           je 0x4ae5
0x00004ac8      488d3d311000.  lea rdi, [0x00005b00]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x00004acf      b902000000     mov ecx, 2
0x00004ad4      4889d6         mov rsi, rdx
0x00004ad7      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00004ad9      0f97c1         seta cl
0x00004adc      80d900         sbb cl, 0
0x00004adf      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00004ae1      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00004ae3      750b           jne 0x4af0
0x00004ae5      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00004ae9      c3             ret
0x00004aea      660f1f440000   nop word [rax + rax]
0x00004af0      488d3d0b1000.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x5b02 ; "POSIX"
0x00004af7      b906000000     mov ecx, 6
0x00004afc      4889d6         mov rsi, rdx
0x00004aff      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00004b01      0f97c0         seta al
0x00004b04      1c00           sbb al, 0
0x00004b06      84c0           test al, al
0x00004b08      0f95c0         setne al
0x00004b0b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00004b0f      c3             ret
;-- locale_charset:
0x00004b10      4883ec08       sub rsp, 8
0x00004b14      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00004b19      e862c9ffff     call sym.imp.nl_langinfo
0x00004b1e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00004b21      741d           je 0x4b40
0x00004b23      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00004b26      488d15db0f00.  lea rdx, str.ASCII                      ; 0x5b08 ; "ASCII"
0x00004b2d      480f44c2       cmove rax, rdx
0x00004b31      4883c408       add rsp, 8
0x00004b35      c3             ret
0x00004b36      662e0f1f8400.  nop word cs:[rax + rax]
0x00004b40      488d05c10f00.  lea rax, str.ASCII                      ; 0x5b08 ; "ASCII"
0x00004b47      4883c408       add rsp, 8
0x00004b4b      c3             ret
0x00004b4c      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x00004b50      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00004b52      55             push rbp
0x00004b53      53             push rbx
0x00004b54      4889fb         mov rbx, rdi
0x00004b57      e8e4c8ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x00004b5c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x00004b5e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00004b61      7854           js 0x4bb7                               ; ../coreutils-8.31/lib/fclose.c:66
0x00004b63      e828c9ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00004b68      85c0           test eax, eax
0x00004b6a      752c           jne 0x4b98
0x00004b6c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x00004b6f      e85c000000     call sym.rpl_fflush
0x00004b74      85c0           test eax, eax
0x00004b76      743c           je 0x4bb4
0x00004b78      e863c7ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x00004b7d      448b20         mov r12d, dword [rax]
0x00004b80      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00004b83      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00004b86      e8a5c7ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x00004b8b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x00004b8e      7530           jne 0x4bc0
0x00004b90      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00004b91      5d             pop rbp
0x00004b92      415c           pop r12
0x00004b94      c3             ret
0x00004b95      0f1f00         nop dword [rax]
0x00004b98      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x00004b9b      e8a0c8ffff     call sym.imp.fileno
0x00004ba0      31f6           xor esi, esi
0x00004ba2      ba01000000     mov edx, 1
0x00004ba7      89c7           mov edi, eax
0x00004ba9      e812c8ffff     call sym.imp.lseek
0x00004bae      4883f8ff       cmp rax, 0xffffffffffffffff
0x00004bb2      75b8           jne 0x4b6c
0x00004bb4      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00004bb7      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00004bb8      5d             pop rbp
0x00004bb9      415c           pop r12
0x00004bbb      e970c7ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00004bc0      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00004bc4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00004bc9      ebc5           jmp 0x4b90
0x00004bcb      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x00004bd0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00004bd3      53             push rbx
0x00004bd4      4889fb         mov rbx, rdi
0x00004bd7      7411           je 0x4bea                               ; ../coreutils-8.31/lib/fflush.c:150
0x00004bd9      e8b2c8ffff     call sym.imp.__freading
0x00004bde      85c0           test eax, eax
0x00004be0      7408           je 0x4bea
0x00004be2      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00004be8      750e           jne 0x4bf8
0x00004bea      4889df         mov rdi, rbx
0x00004bed      5b             pop rbx
0x00004bee      e97dc8ffff     jmp sym.imp.fflush
0x00004bf3      0f1f440000     nop dword [rax + rax]
0x00004bf8      4889df         mov rdi, rbx
0x00004bfb      ba01000000     mov edx, 1
0x00004c00      31f6           xor esi, esi
0x00004c02      e809000000     call sym.rpl_fseeko
0x00004c07      4889df         mov rdi, rbx
0x00004c0a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x00004c0b      e960c8ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00004c10      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00004c14      48394710       cmp qword [rdi + 0x10], rax
0x00004c18      7406           je 0x4c20                               ; ../coreutils-8.31/lib/fseeko.c:32
0x00004c1a      e9d1c8ffff     jmp sym.imp.fseeko                      ; /sys_errlist.h:9
0x00004c1f      90             nop
0x00004c20      488b4720       mov rax, qword [rdi + 0x20]
0x00004c24      48394728       cmp qword [rdi + 0x28], rax
0x00004c28      75f0           jne 0x4c1a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x00004c2a      48837f4800     cmp qword [rdi + 0x48], 0
0x00004c2f      75e9           jne 0x4c1a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00004c31      4154           push r12
0x00004c33      55             push rbp
0x00004c34      4189d4         mov r12d, edx
0x00004c37      53             push rbx
0x00004c38      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x00004c3b      4889fb         mov rbx, rdi
0x00004c3e      e8fdc7ffff     call sym.imp.fileno
0x00004c43      4489e2         mov edx, r12d
0x00004c46      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00004c49      89c7           mov edi, eax                            ; /sys_errlist.h:17
0x00004c4b      e870c7ffff     call sym.imp.lseek
0x00004c50      4883f8ff       cmp rax, 0xffffffffffffffff
0x00004c54      740c           je 0x4c62
0x00004c56      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00004c59      488983900000.  mov qword [rbx + 0x90], rax
0x00004c60      31c0           xor eax, eax
0x00004c62      5b             pop rbx                                 ; /sys_errlist.h:19
0x00004c63      5d             pop rbp
0x00004c64      415c           pop r12
0x00004c66      c3             ret
0x00004c67      660f1f840000.  nop word [rax + rax]
;-- __libc_csu_init:
0x00004c70      4157           push r15
0x00004c72      4156           push r14
0x00004c74      4989d7         mov r15, rdx
0x00004c77      4155           push r13
0x00004c79      4154           push r12
0x00004c7b      4c8d25ee1e20.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x206b70 ; "p\x19"
0x00004c82      55             push rbp
0x00004c83      488d2dee1e20.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x206b78 ; "0\x19"
0x00004c8a      53             push rbx
0x00004c8b      4189fd         mov r13d, edi
0x00004c8e      4989f6         mov r14, rsi
0x00004c91      4c29e5         sub rbp, r12
0x00004c94      4883ec08       sub rsp, 8
0x00004c98      48c1fd03       sar rbp, 3
0x00004c9c      e8f7c5ffff     call sym._init
0x00004ca1      4885ed         test rbp, rbp
0x00004ca4      7420           je 0x4cc6
0x00004ca6      31db           xor ebx, ebx
0x00004ca8      0f1f84000000.  nop dword [rax + rax]
0x00004cb0      4c89fa         mov rdx, r15
0x00004cb3      4c89f6         mov rsi, r14
0x00004cb6      4489ef         mov edi, r13d
0x00004cb9      41ff14dc       call qword [r12 + rbx*8]
0x00004cbd      4883c301       add rbx, 1
0x00004cc1      4839dd         cmp rbp, rbx
0x00004cc4      75ea           jne 0x4cb0
0x00004cc6      4883c408       add rsp, 8
0x00004cca      5b             pop rbx
0x00004ccb      5d             pop rbp
0x00004ccc      415c           pop r12
0x00004cce      415d           pop r13
0x00004cd0      415e           pop r14
0x00004cd2      415f           pop r15
0x00004cd4      c3             ret
0x00004cd5      90             nop
0x00004cd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00004ce0      f3c3           ret
0x00004ce2      662e0f1f8400.  nop word cs:[rax + rax]
0x00004cec      0f1f4000       nop dword [rax]
;-- atexit:
0x00004cf0      488b15112320.  mov rdx, qword [obj.__dso_handle]       ; [0x207008:8]=0x207008 obj.__dso_handle
0x00004cf7      31f6           xor esi, esi
0x00004cf9      e902c8ffff     jmp sym.imp.__cxa_atexit
0x00004cfe      0000           add byte [rax], al
