;-- section..plt:
;-- .plt:
0x000013d0      ff355a6a2000   push qword [0x00207e30]                 ; [12] -r-x section size 784 named .plt
0x000013d6      ff255c6a2000   jmp qword [0x00207e38]                  ; [0x207e38:8]=0
0x000013dc      0f1f4000       nop dword [rax]
;-- imp.__uflow:
0x000013e0      ff255a6a2000   jmp qword [reloc.__uflow]               ; [0x207e40:8]=0x13e6
0x000013e6      6800000000     push 0
0x000013eb      e9e0ffffff     jmp sym..plt
;-- imp.free:
0x000013f0      ff25526a2000   jmp qword [reloc.free]                  ; [0x207e48:8]=0x13f6
0x000013f6      6801000000     push 1
0x000013fb      e9d0ffffff     jmp sym..plt
;-- imp.abort:
0x00001400      ff254a6a2000   jmp qword [reloc.abort]                 ; [0x207e50:8]=0x1406
0x00001406      6802000000     push 2
0x0000140b      e9c0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x00001410      ff25426a2000   jmp qword [reloc.__errno_location]      ; [0x207e58:8]=0x1416
0x00001416      6803000000     push 3
0x0000141b      e9b0ffffff     jmp sym..plt
;-- imp.strncmp:
0x00001420      ff253a6a2000   jmp qword [reloc.strncmp]               ; [0x207e60:8]=0x1426 ; "&\x14"
0x00001426      6804000000     push 4
0x0000142b      e9a0ffffff     jmp sym..plt
;-- imp._exit:
0x00001430      ff25326a2000   jmp qword [reloc._exit]                 ; [0x207e68:8]=0x1436 ; "6\x14"
0x00001436      6805000000     push 5
0x0000143b      e990ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001440      ff252a6a2000   jmp qword [reloc.__fpending]            ; [0x207e70:8]=0x1446 ; "F\x14"
0x00001446      6806000000     push 6
0x0000144b      e980ffffff     jmp sym..plt
;-- imp.puts:
0x00001450      ff25226a2000   jmp qword [reloc.puts]                  ; [0x207e78:8]=0x1456 ; "V\x14"
0x00001456      6807000000     push 7
0x0000145b      e970ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001460      ff251a6a2000   jmp qword [reloc.textdomain]            ; [0x207e80:8]=0x1466 ; "f\x14"
0x00001466      6808000000     push 8
0x0000146b      e960ffffff     jmp sym..plt
;-- imp.fclose:
0x00001470      ff25126a2000   jmp qword [reloc.fclose]                ; [0x207e88:8]=0x1476 ; "v\x14"
0x00001476      6809000000     push 9
0x0000147b      e950ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001480      ff250a6a2000   jmp qword [reloc.bindtextdomain]        ; [0x207e90:8]=0x1486
0x00001486      680a000000     push 0xa
0x0000148b      e940ffffff     jmp sym..plt
;-- imp.dcgettext:
0x00001490      ff25026a2000   jmp qword [reloc.dcgettext]             ; [0x207e98:8]=0x1496
0x00001496      680b000000     push 0xb
0x0000149b      e930ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x000014a0      ff25fa692000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x207ea0:8]=0x14a6
0x000014a6      680c000000     push 0xc
0x000014ab      e920ffffff     jmp sym..plt
;-- imp.strlen:
0x000014b0      ff25f2692000   jmp qword [reloc.strlen]                ; [0x207ea8:8]=0x14b6
0x000014b6      680d000000     push 0xd
0x000014bb      e910ffffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x000014c0      ff25ea692000   jmp qword [reloc.__stack_chk_fail]      ; [0x207eb0:8]=0x14c6
0x000014c6      680e000000     push 0xe
0x000014cb      e900ffffff     jmp sym..plt
;-- imp.getopt_long:
0x000014d0      ff25e2692000   jmp qword [reloc.getopt_long]           ; [0x207eb8:8]=0x14d6
0x000014d6      680f000000     push 0xf
0x000014db      e9f0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x000014e0      ff25da692000   jmp qword [reloc.mbrtowc]               ; [0x207ec0:8]=0x14e6
0x000014e6      6810000000     push 0x10
0x000014eb      e9e0feffff     jmp sym..plt
;-- imp.dup2:
0x000014f0      ff25d2692000   jmp qword [reloc.dup2]                  ; [0x207ec8:8]=0x14f6
0x000014f6      6811000000     push 0x11
0x000014fb      e9d0feffff     jmp sym..plt
;-- imp.strrchr:
0x00001500      ff25ca692000   jmp qword [reloc.strrchr]               ; [0x207ed0:8]=0x1506
0x00001506      6812000000     push 0x12
0x0000150b      e9c0feffff     jmp sym..plt
;-- imp.lseek:
0x00001510      ff25c2692000   jmp qword [reloc.lseek]                 ; [0x207ed8:8]=0x1516
0x00001516      6813000000     push 0x13
0x0000151b      e9b0feffff     jmp sym..plt
;-- imp.__assert_fail:
0x00001520      ff25ba692000   jmp qword [reloc.__assert_fail]         ; [0x207ee0:8]=0x1526 ; "&\x15"
0x00001526      6814000000     push 0x14
0x0000152b      e9a0feffff     jmp sym..plt
;-- imp.memset:
0x00001530      ff25b2692000   jmp qword [reloc.memset]                ; [0x207ee8:8]=0x1536 ; "6\x15"
0x00001536      6815000000     push 0x15
0x0000153b      e990feffff     jmp sym..plt
;-- imp.freopen:
0x00001540      ff25aa692000   jmp qword [reloc.freopen]               ; [0x207ef0:8]=0x1546 ; "F\x15"
0x00001546      6816000000     push 0x16
0x0000154b      e980feffff     jmp sym..plt
;-- imp.close:
0x00001550      ff25a2692000   jmp qword [reloc.close]                 ; [0x207ef8:8]=0x1556 ; "V\x15"
0x00001556      6817000000     push 0x17
0x0000155b      e970feffff     jmp sym..plt
;-- imp.posix_fadvise:
0x00001560      ff259a692000   jmp qword [reloc.posix_fadvise]         ; [0x207f00:8]=0x1566 ; "f\x15"
0x00001566      6818000000     push 0x18                               ; "P\x1e"
0x0000156b      e960feffff     jmp sym..plt
;-- imp.memcmp:
0x00001570      ff2592692000   jmp qword [reloc.memcmp]                ; [0x207f08:8]=0x1576 ; "v\x15"
0x00001576      6819000000     push 0x19
0x0000157b      e950feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001580      ff258a692000   jmp qword [reloc.fputs_unlocked]        ; [0x207f10:8]=0x1586
0x00001586      681a000000     push 0x1a
0x0000158b      e940feffff     jmp sym..plt
;-- imp.calloc:
0x00001590      ff2582692000   jmp qword [reloc.calloc]                ; [0x207f18:8]=0x1596
0x00001596      681b000000     push 0x1b
0x0000159b      e930feffff     jmp sym..plt
;-- imp.strcmp:
0x000015a0      ff257a692000   jmp qword [reloc.strcmp]                ; [0x207f20:8]=0x15a6
0x000015a6      681c000000     push 0x1c
0x000015ab      e920feffff     jmp sym..plt
;-- imp.memcpy:
0x000015b0      ff2572692000   jmp qword [reloc.memcpy]                ; [0x207f28:8]=0x15b6
0x000015b6      681d000000     push 0x1d
0x000015bb      e910feffff     jmp sym..plt
;-- imp.fileno:
0x000015c0      ff256a692000   jmp qword [reloc.fileno]                ; [0x207f30:8]=0x15c6
0x000015c6      681e000000     push 0x1e
0x000015cb      e900feffff     jmp sym..plt
;-- imp.malloc:
0x000015d0      ff2562692000   jmp qword [reloc.malloc]                ; [0x207f38:8]=0x15d6
0x000015d6      681f000000     push 0x1f
0x000015db      e9f0fdffff     jmp sym..plt
;-- imp.fflush:
0x000015e0      ff255a692000   jmp qword [reloc.fflush]                ; [0x207f40:8]=0x15e6
0x000015e6      6820000000     push 0x20                               ; "@"
0x000015eb      e9e0fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x000015f0      ff2552692000   jmp qword [reloc.nl_langinfo]           ; [0x207f48:8]=0x15f6
0x000015f6      6821000000     push 0x21                               ; '!'
0x000015fb      e9d0fdffff     jmp sym..plt
;-- imp.__freading:
0x00001600      ff254a692000   jmp qword [reloc.__freading]            ; [0x207f50:8]=0x1606
0x00001606      6822000000     push 0x22                               ; '"'
0x0000160b      e9c0fdffff     jmp sym..plt
;-- imp.realloc:
0x00001610      ff2542692000   jmp qword [reloc.realloc]               ; [0x207f58:8]=0x1616
0x00001616      6823000000     push 0x23                               ; '#'
0x0000161b      e9b0fdffff     jmp sym..plt
;-- imp.setlocale:
0x00001620      ff253a692000   jmp qword [reloc.setlocale]             ; [0x207f60:8]=0x1626 ; "&\x16"
0x00001626      6824000000     push 0x24                               ; '$'
0x0000162b      e9a0fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001630      ff2532692000   jmp qword [reloc.__printf_chk]          ; [0x207f68:8]=0x1636 ; "6\x16"
0x00001636      6825000000     push 0x25                               ; '%'
0x0000163b      e990fdffff     jmp sym..plt
;-- imp.error:
0x00001640      ff252a692000   jmp qword [reloc.error]                 ; [0x207f70:8]=0x1646 ; "F\x16"
0x00001646      6826000000     push 0x26                               ; '&'
0x0000164b      e980fdffff     jmp sym..plt
;-- imp.open:
0x00001650      ff2522692000   jmp qword [reloc.open]                  ; [0x207f78:8]=0x1656 ; "V\x16"
0x00001656      6827000000     push 0x27                               ; '''
0x0000165b      e970fdffff     jmp sym..plt
;-- imp.fseeko:
0x00001660      ff251a692000   jmp qword [reloc.fseeko]                ; [0x207f80:8]=0x1666 ; "f\x16"
0x00001666      6828000000     push 0x28                               ; '('
0x0000166b      e960fdffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001670      ff2512692000   jmp qword [reloc.__cxa_atexit]          ; [0x207f88:8]=0x1676 ; "v\x16"
0x00001676      6829000000     push 0x29                               ; ')'
0x0000167b      e950fdffff     jmp sym..plt
;-- imp.exit:
0x00001680      ff250a692000   jmp qword [reloc.exit]                  ; [0x207f90:8]=0x1686
0x00001686      682a000000     push 0x2a                               ; '*'
0x0000168b      e940fdffff     jmp sym..plt
;-- imp.fwrite:
0x00001690      ff2502692000   jmp qword [reloc.fwrite]                ; [0x207f98:8]=0x1696
0x00001696      682b000000     push 0x2b                               ; '+'
0x0000169b      e930fdffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x000016a0      ff25fa682000   jmp qword [reloc.__fprintf_chk]         ; [0x207fa0:8]=0x16a6
0x000016a6      682c000000     push 0x2c                               ; ','
0x000016ab      e920fdffff     jmp sym..plt
;-- imp.mbsinit:
0x000016b0      ff25f2682000   jmp qword [reloc.mbsinit]               ; [0x207fa8:8]=0x16b6
0x000016b6      682d000000     push 0x2d                               ; '-'
0x000016bb      e910fdffff     jmp sym..plt
;-- imp.iswprint:
0x000016c0      ff25ea682000   jmp qword [reloc.iswprint]              ; [0x207fb0:8]=0x16c6
0x000016c6      682e000000     push 0x2e                               ; '.'
0x000016cb      e900fdffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x000016d0      ff25e2682000   jmp qword [reloc.__ctype_b_loc]         ; [0x207fb8:8]=0x16d6
0x000016d6      682f000000     push 0x2f                               ; '/'
0x000016db      e9f0fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x000016e0      .qword 0x9066002068fa25ff                              ; [13] -r-x section size 8 named .plt.got
0x000016e8      0000           add byte [rax], al
0x000016ea      0000           add byte [rax], al
0x000016ec      0000           add byte [rax], al
0x000016ee      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x000016f0      4157           push r15                                ; [14] -r-x section size 16702 named .text
0x000016f2      4156           push r14
0x000016f4      4155           push r13
0x000016f6      4154           push r12
0x000016f8      55             push rbp
0x000016f9      53             push rbx
0x000016fa      89fd           mov ebp, edi
0x000016fc      4889f3         mov rbx, rsi
0x000016ff      4883ec58       sub rsp, 0x58
0x00001703      488b3e         mov rdi, qword [rsi]
0x00001706      64488b042528.  mov rax, qword fs:[0x28]
0x0000170f      4889442448     mov qword [rsp + 0x48], rax
0x00001714      31c0           xor eax, eax
0x00001716      e8b5130000     call sym.set_program_name
0x0000171b      488d35054200.  lea rsi, [0x00005927]
0x00001722      bf06000000     mov edi, 6
0x00001727      e8f4feffff     call sym.imp.setlocale
0x0000172c      488d35ba4100.  lea rsi, str.usr_local_share_locale     ; 0x58ed ; "/usr/local/share/locale"
0x00001733      488d3d8a4100.  lea rdi, [0x000058c4]                   ; "coreutils"
0x0000173a      e841fdffff     call sym.imp.bindtextdomain
0x0000173f      488d3d7e4100.  lea rdi, [0x000058c4]                   ; "coreutils"
0x00001746      e815fdffff     call sym.imp.textdomain
0x0000174b      488d3d0e0e00.  lea rdi, sym.close_stdout               ; 0x2560 ; "USH\x83\xec\bH\x8b=\x1b[ "
0x00001752      e8c9400000     call sym.atexit
0x00001757      488d05a74100.  lea rax, str.Mark_Kettenis              ; 0x5905 ; "Mark Kettenis"
0x0000175e      4883ec08       sub rsp, 8
0x00001762      4c8b05a76820.  mov r8, qword [obj.Version]             ; [0x208010:8]=0x5bc2 str.8.31
0x00001769      6a00           push 0
0x0000176b      488d15d24000.  lea rdx, [0x00005844]                   ; "tsort"
0x00001772      488d0d474100.  lea rcx, str.GNU_coreutils              ; 0x58c0 ; "GNU coreutils"
0x00001779      50             push rax
0x0000177a      488d054f0a00.  lea rax, sym.usage                      ; 0x21d0 ; "AUAT\xba\x05"
0x00001781      41b901000000   mov r9d, 1
0x00001787      4889de         mov rsi, rbx
0x0000178a      89ef           mov edi, ebp
0x0000178c      50             push rax
0x0000178d      31c0           xor eax, eax
0x0000178f      e8fc110000     call sym.parse_gnu_standard_options_only
0x00001794      486305fd6820.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x208098:4]=0
0x0000179b      89ea           mov edx, ebp
0x0000179d      4883c420       add rsp, 0x20
0x000017a1      29c2           sub edx, eax
0x000017a3      83fa01         cmp edx, 1
0x000017a6      0f8f4a060000   jg 0x1df6
0x000017ac      39e8           cmp eax, ebp
0x000017ae      0f84f5040000   je 0x1ca9
0x000017b4      488b34c3       mov rsi, qword [rbx + rax*8]
0x000017b8      488d3d7b4400.  lea rdi, [0x00005c3a]                   ; "-"
0x000017bf      b902000000     mov ecx, 2
0x000017c4      4989f7         mov r15, rsi
0x000017c7      4889742420     mov qword [rsp + 0x20], rsi
0x000017cc      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000017ce      0f97c0         seta al
0x000017d1      1c00           sbb al, 0
0x000017d3      31ff           xor edi, edi
0x000017d5      0fbec0         movsx eax, al
0x000017d8      89c3           mov ebx, eax
0x000017da      8944242c       mov dword [rsp + 0x2c], eax
0x000017de      e8fd070000     call sym.new_item
0x000017e3      85db           test ebx, ebx
0x000017e5      4989c6         mov r14, rax
0x000017e8      741f           je 0x1809
0x000017ea      488b159f6820.  mov rdx, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x208090:8]=0
0x000017f1      488d35d94300.  lea rsi, [0x00005bd1]                   ; "r"
0x000017f8      4c89ff         mov rdi, r15
0x000017fb      e8a00e0000     call sym.freopen_safer
0x00001800      4885c0         test rax, rax
0x00001803      0f84e2040000   je 0x1ceb
0x00001809      488b3d806820.  mov rdi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x208090:8]=0
0x00001810      be02000000     mov esi, 2
0x00001815      e8060e0000     call sym.fadvise
0x0000181a      488d7c2430     lea rdi, [rsp + 0x30]
0x0000181f      48897c2410     mov qword [rsp + 0x10], rdi
0x00001824      e8d72f0000     call sym.init_tokenbuffer
0x00001829      48c744240800.  mov qword [rsp + 8], 0
0x00001832      660f1f440000   nop word [rax + rax]
0x00001838      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0000183d      488b3d4c6820.  mov rdi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x208090:8]=0
0x00001844      488d35d94000.  lea rsi, [0x00005924]                   ; " \t\n"
0x0000184b      ba03000000     mov edx, 3
0x00001850      e8bb2f0000     call sym.readtoken
0x00001855      4883f8ff       cmp rax, 0xffffffffffffffff
0x00001859      0f842d020000   je 0x1a8c
0x0000185f      4885c0         test rax, rax
0x00001862      0f84c9050000   je 0x1e31
0x00001868      4d85f6         test r14, r14
0x0000186b      488b6c2438     mov rbp, qword [rsp + 0x38]
0x00001870      0f845c050000   je 0x1dd2
0x00001876      4d8b7e10       mov r15, qword [r14 + 0x10]
0x0000187a      4d89f4         mov r12, r14
0x0000187d      4d85ff         test r15, r15
0x00001880      4c89fb         mov rbx, r15
0x00001883      7529           jne 0x18ae
0x00001885      e9e5010000     jmp 0x1a6f
0x0000188a      660f1f440000   nop word [rax + rax]
0x00001890      498b4710       mov rax, qword [r15 + 0x10]
0x00001894      490f484708     cmovs rax, qword [r15 + 8]
0x00001899      4885c0         test rax, rax
0x0000189c      743a           je 0x18d8
0x0000189e      8b5018         mov edx, dword [rax + 0x18]
0x000018a1      85d2           test edx, edx
0x000018a3      4d0f45e7       cmovne r12, r15
0x000018a7      480f45d8       cmovne rbx, rax
0x000018ab      4989c7         mov r15, rax
0x000018ae      498b37         mov rsi, qword [r15]
0x000018b1      4889ef         mov rdi, rbp
0x000018b4      e8e7fcffff     call sym.imp.strcmp
0x000018b9      85c0           test eax, eax
0x000018bb      89c2           mov edx, eax
0x000018bd      75d1           jne 0x1890
0x000018bf      48837c240800   cmp qword [rsp + 8], 0
0x000018c5      0f8553010000   jne 0x1a1e
0x000018cb      4c897c2408     mov qword [rsp + 8], r15
0x000018d0      e963ffffff     jmp 0x1838
0x000018d5      0f1f00         nop dword [rax]
0x000018d8      4889ef         mov rdi, rbp
0x000018db      89542428       mov dword [rsp + 0x28], edx
0x000018df      e8fc060000     call sym.new_item
0x000018e4      8b542428       mov edx, dword [rsp + 0x28]
0x000018e8      4989c5         mov r13, rax
0x000018eb      85d2           test edx, edx
0x000018ed      0f8890010000   js 0x1a83
0x000018f3      49894710       mov qword [r15 + 0x10], rax
0x000018f7      488b33         mov rsi, qword [rbx]
0x000018fa      4889ef         mov rdi, rbp
0x000018fd      e89efcffff     call sym.imp.strcmp
0x00001902      85c0           test eax, eax
0x00001904      0f8493040000   je 0x1d9d
0x0000190a      99             cdq
0x0000190b      488b4b10       mov rcx, qword [rbx + 0x10]
0x0000190f      83ca01         or edx, 1
0x00001912      85c0           test eax, eax
0x00001914      480f484b08     cmovs rcx, qword [rbx + 8]
0x00001919      89542428       mov dword [rsp + 0x28], edx
0x0000191d      4939cd         cmp r13, rcx
0x00001920      48894c2418     mov qword [rsp + 0x18], rcx
0x00001925      4989cf         mov r15, rcx
0x00001928      7517           jne 0x1941
0x0000192a      eb3b           jmp 0x1967
0x0000192c      0f1f4000       nop dword [rax]
0x00001930      41c747180100.  mov dword [r15 + 0x18], 1
0x00001938      4d8b7f10       mov r15, qword [r15 + 0x10]
0x0000193c      4d39fd         cmp r13, r15
0x0000193f      7426           je 0x1967
0x00001941      498b37         mov rsi, qword [r15]
0x00001944      4889ef         mov rdi, rbp
0x00001947      e854fcffff     call sym.imp.strcmp
0x0000194c      85c0           test eax, eax
0x0000194e      0f8478030000   je 0x1ccc
0x00001954      79da           jns 0x1930
0x00001956      41c74718ffff.  mov dword [r15 + 0x18], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x0000195e      4d8b7f08       mov r15, qword [r15 + 8]
0x00001962      4d39fd         cmp r13, r15
0x00001965      75da           jne 0x1941
0x00001967      8b4318         mov eax, dword [rbx + 0x18]
0x0000196a      85c0           test eax, eax
0x0000196c      0f84ee000000   je 0x1a60
0x00001972      8b542428       mov edx, dword [rsp + 0x28]
0x00001976      f7da           neg edx
0x00001978      39d0           cmp eax, edx
0x0000197a      0f84e0000000   je 0x1a60
0x00001980      488b442418     mov rax, qword [rsp + 0x18]
0x00001985      8b7c2428       mov edi, dword [rsp + 0x28]
0x00001989      3b7818         cmp edi, dword [rax + 0x18]
0x0000198c      0f849e020000   je 0x1c30
0x00001992      8b742428       mov esi, dword [rsp + 0x28]
0x00001996      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000199b      85f6           test esi, esi
0x0000199d      488b4708       mov rax, qword [rdi + 8]
0x000019a1      488b4f10       mov rcx, qword [rdi + 0x10]
0x000019a5      0f88c5020000   js 0x1c70
0x000019ab      488b4810       mov rcx, qword [rax + 0x10]
0x000019af      488b742418     mov rsi, qword [rsp + 0x18]
0x000019b4      48894e08       mov qword [rsi + 8], rcx
0x000019b8      488b4808       mov rcx, qword [rax + 8]
0x000019bc      48897010       mov qword [rax + 0x10], rsi
0x000019c0      48894b10       mov qword [rbx + 0x10], rcx
0x000019c4      48895808       mov qword [rax + 8], rbx
0x000019c8      488b7c2418     mov rdi, qword [rsp + 0x18]
0x000019cd      c74318000000.  mov dword [rbx + 0x18], 0
0x000019d4      c74718000000.  mov dword [rdi + 0x18], 0
0x000019db      8b4818         mov ecx, dword [rax + 0x18]
0x000019de      394c2428       cmp dword [rsp + 0x28], ecx
0x000019e2      0f84a8020000   je 0x1c90
0x000019e8      39ca           cmp edx, ecx
0x000019ea      750c           jne 0x19f8
0x000019ec      488b742418     mov rsi, qword [rsp + 0x18]
0x000019f1      8b7c2428       mov edi, dword [rsp + 0x28]
0x000019f5      897e18         mov dword [rsi + 0x18], edi
0x000019f8      49395c2410     cmp qword [r12 + 0x10], rbx
0x000019fd      c74018000000.  mov dword [rax + 0x18], 0
0x00001a04      0f8459020000   je 0x1c63
0x00001a0a      48837c240800   cmp qword [rsp + 8], 0
0x00001a10      4989442408     mov qword [r12 + 8], rax
0x00001a15      4d89ef         mov r15, r13
0x00001a18      0f84adfeffff   je 0x18cb
0x00001a1e      488b442408     mov rax, qword [rsp + 8]
0x00001a23      498b37         mov rsi, qword [r15]
0x00001a26      488b38         mov rdi, qword [rax]
0x00001a29      e872fbffff     call sym.imp.strcmp
0x00001a2e      85c0           test eax, eax
0x00001a30      0f84f3fdffff   je 0x1829
0x00001a36      4983472001     add qword [r15 + 0x20], 1
0x00001a3b      bf10000000     mov edi, 0x10
0x00001a40      e8fb370000     call sym.xmalloc
0x00001a45      488b7c2408     mov rdi, qword [rsp + 8]
0x00001a4a      4c8938         mov qword [rax], r15
0x00001a4d      488b5730       mov rdx, qword [rdi + 0x30]
0x00001a51      48895008       mov qword [rax + 8], rdx
0x00001a55      48894730       mov qword [rdi + 0x30], rax
0x00001a59      e9cbfdffff     jmp 0x1829
0x00001a5e      6690           nop
0x00001a60      03442428       add eax, dword [rsp + 0x28]
0x00001a64      4d89ef         mov r15, r13
0x00001a67      894318         mov dword [rbx + 0x18], eax
0x00001a6a      e950feffff     jmp 0x18bf
0x00001a6f      4889ef         mov rdi, rbp
0x00001a72      e869050000     call sym.new_item
0x00001a77      4989c7         mov r15, rax
0x00001a7a      49894610       mov qword [r14 + 0x10], rax
0x00001a7e      e93cfeffff     jmp 0x18bf
0x00001a83      49894708       mov qword [r15 + 8], rax
0x00001a87      e96bfeffff     jmp 0x18f7
0x00001a8c      48837c240800   cmp qword [rsp + 8], 0
0x00001a92      0f8584020000   jne 0x1d1c
0x00001a98      498b7e10       mov rdi, qword [r14 + 0x10]
0x00001a9c      4885ff         test rdi, rdi
0x00001a9f      740c           je 0x1aad
0x00001aa1      488d35b80400.  lea rsi, sym.count_items                ; 0x1f60 ; "H\x83\x05\x88a "
0x00001aa8      e8c3040000     call sym.recurse_tree
0x00001aad      bd01000000     mov ebp, 1
0x00001ab2      48833d366620.  cmp qword [obj.n_strings], 0            ; [0x2080f0:8]=0
0x00001aba      0f84ad000000   je 0x1b6d
0x00001ac0      498b7e10       mov rdi, qword [r14 + 0x10]
0x00001ac4      4885ff         test rdi, rdi
0x00001ac7      0f84e3000000   je 0x1bb0
0x00001acd      488d357c0500.  lea rsi, sym.scan_zeros                 ; 0x2050 ; "H\x83\x7f "
0x00001ad4      e897040000     call sym.recurse_tree
0x00001ad9      488b05286620.  mov rax, qword [obj.head]               ; [0x208108:8]=0
0x00001ae0      4885c0         test rax, rax
0x00001ae3      0f843b010000   je 0x1c24
0x00001ae9      0f1f80000000.  nop dword [rax]
0x00001af0      488b38         mov rdi, qword [rax]
0x00001af3      488b5830       mov rbx, qword [rax + 0x30]
0x00001af7      e854f9ffff     call sym.imp.puts
0x00001afc      488b05ed6520.  mov rax, qword [obj.n_strings]          ; [0x2080f0:8]=0
0x00001b03      4c8b05fe6520.  mov r8, qword [obj.head]                ; [0x208108:8]=0
0x00001b0a      31f6           xor esi, esi
0x00001b0c      4885db         test rbx, rbx
0x00001b0f      488b0dea6520.  mov rcx, qword [obj.zeros]              ; [0x208100:8]=0
0x00001b16      488d78ff       lea rdi, [rax - 1]
0x00001b1a      49c700000000.  mov qword [r8], 0
0x00001b21      48893dc86520.  mov qword [obj.n_strings], rdi          ; [0x2080f0:8]=0
0x00001b28      742e           je 0x1b58
0x00001b2a      660f1f440000   nop word [rax + rax]
0x00001b30      488b13         mov rdx, qword [rbx]
0x00001b33      48836a2001     sub qword [rdx + 0x20], 1
0x00001b38      750c           jne 0x1b46
0x00001b3a      48895128       mov qword [rcx + 0x28], rdx
0x00001b3e      be01000000     mov esi, 1
0x00001b43      4889d1         mov rcx, rdx
0x00001b46      488b5b08       mov rbx, qword [rbx + 8]
0x00001b4a      4885db         test rbx, rbx
0x00001b4d      75e1           jne 0x1b30
0x00001b4f      4084f6         test sil, sil
0x00001b52      0f8539020000   jne 0x1d91
0x00001b58      498b4028       mov rax, qword [r8 + 0x28]
0x00001b5c      4885c0         test rax, rax
0x00001b5f      488905a26520.  mov qword [obj.head], rax               ; [0x208108:8]=0
0x00001b66      7588           jne 0x1af0
0x00001b68      4885ff         test rdi, rdi
0x00001b6b      7553           jne 0x1bc0
0x00001b6d      488b3d1c6520.  mov rdi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x208090:8]=0
0x00001b74      e857390000     call sym.rpl_fclose
0x00001b79      85c0           test eax, eax
0x00001b7b      0f85d6010000   jne 0x1d57
0x00001b81      83f501         xor ebp, 1
0x00001b84      488b742448     mov rsi, qword [rsp + 0x48]
0x00001b89      644833342528.  xor rsi, qword fs:[0x28]
0x00001b92      400fb6c5       movzx eax, bpl
0x00001b96      0f8555020000   jne 0x1df1
0x00001b9c      4883c458       add rsp, 0x58
0x00001ba0      5b             pop rbx
0x00001ba1      5d             pop rbp
0x00001ba2      415c           pop r12
0x00001ba4      415d           pop r13
0x00001ba6      415e           pop r14
0x00001ba8      415f           pop r15
0x00001baa      c3             ret
0x00001bab      0f1f440000     nop dword [rax + rax]
0x00001bb0      488b05516520.  mov rax, qword [obj.head]               ; [0x208108:8]=0
0x00001bb7      4885c0         test rax, rax
0x00001bba      0f8530ffffff   jne 0x1af0
0x00001bc0      488b542420     mov rdx, qword [rsp + 0x20]
0x00001bc5      be03000000     mov esi, 3
0x00001bca      31ff           xor edi, edi
0x00001bcc      31ed           xor ebp, ebp
0x00001bce      e83d2a0000     call sym.quotearg_n_style_colon
0x00001bd3      488d35a43d00.  lea rsi, str.s:_input_contains_a_loop:  ; 0x597e ; "%s: input contains a loop:"
0x00001bda      4889c3         mov rbx, rax
0x00001bdd      ba05000000     mov edx, 5
0x00001be2      31ff           xor edi, edi
0x00001be4      e8a7f8ffff     call sym.imp.dcgettext
0x00001be9      4889d9         mov rcx, rbx
0x00001bec      4889c2         mov rdx, rax
0x00001bef      31f6           xor esi, esi
0x00001bf1      31ff           xor edi, edi
0x00001bf3      31c0           xor eax, eax
0x00001bf5      e846faffff     call sym.imp.error
0x00001bfa      660f1f440000   nop word [rax + rax]
0x00001c00      498b7e10       mov rdi, qword [r14 + 0x10]
0x00001c04      4885ff         test rdi, rdi
0x00001c07      740c           je 0x1c15
0x00001c09      488d35800400.  lea rsi, sym.detect_loop                ; 0x2090 ; "1\xc0H\x83\x7f "
0x00001c10      e85b030000     call sym.recurse_tree
0x00001c15      48833ddb6420.  cmp qword [obj.loop], 0                 ; [0x2080f8:8]=0
0x00001c1d      75e1           jne 0x1c00
0x00001c1f      e98efeffff     jmp 0x1ab2
0x00001c24      488b3dc56420.  mov rdi, qword [obj.n_strings]          ; [0x2080f0:8]=0
0x00001c2b      e938ffffff     jmp 0x1b68
0x00001c30      85ff           test edi, edi
0x00001c32      7864           js 0x1c98
0x00001c34      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00001c39      488b4708       mov rax, qword [rdi + 8]
0x00001c3d      48894310       mov qword [rbx + 0x10], rax
0x00001c41      48895f08       mov qword [rdi + 8], rbx
0x00001c45      49395c2410     cmp qword [r12 + 0x10], rbx
0x00001c4a      488b442418     mov rax, qword [rsp + 0x18]
0x00001c4f      c74018000000.  mov dword [rax + 0x18], 0
0x00001c56      c74318000000.  mov dword [rbx + 0x18], 0
0x00001c5d      0f85a7fdffff   jne 0x1a0a
0x00001c63      4989442410     mov qword [r12 + 0x10], rax
0x00001c68      4d89ef         mov r15, r13
0x00001c6b      e94ffcffff     jmp 0x18bf
0x00001c70      488b4108       mov rax, qword [rcx + 8]
0x00001c74      48894710       mov qword [rdi + 0x10], rax
0x00001c78      488b4110       mov rax, qword [rcx + 0x10]
0x00001c7c      48897908       mov qword [rcx + 8], rdi
0x00001c80      48894308       mov qword [rbx + 8], rax
0x00001c84      48895910       mov qword [rcx + 0x10], rbx
0x00001c88      4889c8         mov rax, rcx
0x00001c8b      e938fdffff     jmp 0x19c8
0x00001c90      895318         mov dword [rbx + 0x18], edx
0x00001c93      e960fdffff     jmp 0x19f8
0x00001c98      4889c7         mov rdi, rax
0x00001c9b      488b4010       mov rax, qword [rax + 0x10]
0x00001c9f      48894308       mov qword [rbx + 8], rax
0x00001ca3      48895f10       mov qword [rdi + 0x10], rbx
0x00001ca7      eb9c           jmp 0x1c45
0x00001ca9      31ff           xor edi, edi
0x00001cab      e830030000     call sym.new_item
0x00001cb0      4989c6         mov r14, rax
0x00001cb3      488d05803f00.  lea rax, [0x00005c3a]                   ; "-"
0x00001cba      c744242c0000.  mov dword [rsp + 0x2c], 0
0x00001cc2      4889442420     mov qword [rsp + 0x20], rax
0x00001cc7      e93dfbffff     jmp 0x1809
0x00001ccc      488d0ddd3e00.  lea rcx, obj.__PRETTY_FUNCTION__.6928   ; 0x5bb0 ; "search_item"
0x00001cd3      488d354e3c00.  lea rsi, str..._coreutils_8.31_src_tsort.c ; 0x5928 ; "../coreutils-8.31/src/tsort.c"
0x00001cda      488d3d883c00.  lea rdi, str.STREQ__str__p__str         ; 0x5969 ; "!STREQ (str, p->str)"
0x00001ce1      bab6000000     mov edx, 0xb6
0x00001ce6      e835f8ffff     call sym.imp.__assert_fail
0x00001ceb      488b542420     mov rdx, qword [rsp + 0x20]
0x00001cf0      be03000000     mov esi, 3
0x00001cf5      31ff           xor edi, edi
0x00001cf7      e814290000     call sym.quotearg_n_style_colon
0x00001cfc      4889c3         mov rbx, rax
0x00001cff      e80cf7ffff     call sym.imp.__errno_location
0x00001d04      8b30           mov esi, dword [rax]
0x00001d06      488d15ca3e00.  lea rdx, [0x00005bd7]                   ; "%s"
0x00001d0d      4889d9         mov rcx, rbx
0x00001d10      bf01000000     mov edi, 1
0x00001d15      31c0           xor eax, eax
0x00001d17      e824f9ffff     call sym.imp.error
0x00001d1c      488b542420     mov rdx, qword [rsp + 0x20]
0x00001d21      be03000000     mov esi, 3
0x00001d26      31ff           xor edi, edi
0x00001d28      e8e3280000     call sym.quotearg_n_style_colon
0x00001d2d      488d354c3e00.  lea rsi, str.s:_input_contains_an_odd_number_of_tokens ; 0x5b80 ; "%s: input contains an odd number of tokens"
0x00001d34      4889c3         mov rbx, rax
0x00001d37      ba05000000     mov edx, 5
0x00001d3c      31ff           xor edi, edi
0x00001d3e      e84df7ffff     call sym.imp.dcgettext
0x00001d43      4889d9         mov rcx, rbx
0x00001d46      4889c2         mov rdx, rax
0x00001d49      31f6           xor esi, esi
0x00001d4b      bf01000000     mov edi, 1
0x00001d50      31c0           xor eax, eax
0x00001d52      e8e9f8ffff     call sym.imp.error
0x00001d57      837c242c00     cmp dword [rsp + 0x2c], 0
0x00001d5c      755e           jne 0x1dbc
0x00001d5e      488d35343c00.  lea rsi, str.standard_input             ; 0x5999 ; "standard input"
0x00001d65      ba05000000     mov edx, 5
0x00001d6a      31ff           xor edi, edi
0x00001d6c      e81ff7ffff     call sym.imp.dcgettext
0x00001d71      4889c3         mov rbx, rax
0x00001d74      e897f6ffff     call sym.imp.__errno_location
0x00001d79      8b30           mov esi, dword [rax]
0x00001d7b      488d15553e00.  lea rdx, [0x00005bd7]                   ; "%s"
0x00001d82      4889d9         mov rcx, rbx
0x00001d85      bf01000000     mov edi, 1
0x00001d8a      31c0           xor eax, eax
0x00001d8c      e8aff8ffff     call sym.imp.error
0x00001d91      48890d686320.  mov qword [obj.zeros], rcx              ; [0x208100:8]=0
0x00001d98      e9bbfdffff     jmp 0x1b58
0x00001d9d      488d0d0c3e00.  lea rcx, obj.__PRETTY_FUNCTION__.6928   ; 0x5bb0 ; "search_item"
0x00001da4      488d357d3b00.  lea rsi, str..._coreutils_8.31_src_tsort.c ; 0x5928 ; "../coreutils-8.31/src/tsort.c"
0x00001dab      488d3da23b00.  lea rdi, str.STREQ__str__s__str         ; 0x5954 ; "!STREQ (str, s->str)"
0x00001db2      baa8000000     mov edx, 0xa8
0x00001db7      e864f7ffff     call sym.imp.__assert_fail
0x00001dbc      488b542420     mov rdx, qword [rsp + 0x20]
0x00001dc1      be03000000     mov esi, 3
0x00001dc6      31ff           xor edi, edi
0x00001dc8      e843280000     call sym.quotearg_n_style_colon
0x00001dcd      4889c3         mov rbx, rax
0x00001dd0      eba2           jmp 0x1d74
0x00001dd2      488d0dd73d00.  lea rcx, obj.__PRETTY_FUNCTION__.6928   ; 0x5bb0 ; "search_item"
0x00001dd9      488d35483b00.  lea rsi, str..._coreutils_8.31_src_tsort.c ; 0x5928 ; "../coreutils-8.31/src/tsort.c"
0x00001de0      488d3d683b00.  lea rdi, str.root                       ; 0x594f ; "root"
0x00001de7      ba84000000     mov edx, 0x84
0x00001dec      e82ff7ffff     call sym.imp.__assert_fail
0x00001df1      e8caf6ffff     call sym.imp.__stack_chk_fail
0x00001df6      488b7cc308     mov rdi, qword [rbx + rax*8 + 8]
0x00001dfb      e8e0290000     call sym.quote
0x00001e00      488d350c3b00.  lea rsi, str.extra_operand__s           ; 0x5913 ; "extra operand %s"
0x00001e07      4889c3         mov rbx, rax
0x00001e0a      ba05000000     mov edx, 5
0x00001e0f      31ff           xor edi, edi
0x00001e11      e87af6ffff     call sym.imp.dcgettext
0x00001e16      31ff           xor edi, edi
0x00001e18      4889c2         mov rdx, rax
0x00001e1b      4889d9         mov rcx, rbx
0x00001e1e      31f6           xor esi, esi
0x00001e20      31c0           xor eax, eax
0x00001e22      e819f8ffff     call sym.imp.error
0x00001e27      bf01000000     mov edi, 1
0x00001e2c      e89f030000     call sym.usage
0x00001e31      488d0d843d00.  lea rcx, obj.__PRETTY_FUNCTION__.6982   ; 0x5bbc ; "tsort"
0x00001e38      488d35e93a00.  lea rsi, str..._coreutils_8.31_src_tsort.c ; 0x5928 ; "../coreutils-8.31/src/tsort.c"
0x00001e3f      488d3d003b00.  lea rdi, str.len____0                   ; 0x5946 ; "len != 0"
0x00001e46      bacd010000     mov edx, 0x1cd
0x00001e4b      e8d0f6ffff     call sym.imp.__assert_fail
;-- entry0:
;-- _start:
;-- rip:
0x00001e50      31ed           xor ebp, ebp
0x00001e52      4989d1         mov r9, rdx
0x00001e55      5e             pop rsi
0x00001e56      4889e2         mov rdx, rsp
0x00001e59      4883e4f0       and rsp, 0xfffffffffffffff0
0x00001e5d      50             push rax
0x00001e5e      54             push rsp
0x00001e5f      4c8d05aa3900.  lea r8, sym.__libc_csu_fini             ; 0x5810
0x00001e66      488d0d333900.  lea rcx, sym.__libc_csu_init            ; 0x57a0 ; "AWAVI\x89\xd7AUATL\x8d%\xbe# "
0x00001e6d      488d3d7cf8ff.  lea rdi, main                           ; sym.main
                                                                       ; 0x16f0 ; "AWAVAUATUS\x89\xfdH\x89\xf3H\x83\xecXH\x8b>dH\x8b\x04%("
0x00001e74      ff154e612000   call qword [reloc.__libc_start_main]    ; [0x207fc8:8]=0
0x00001e7a      f4             hlt
0x00001e7b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00001e80      488d3df96120.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x208080
0x00001e87      55             push rbp
0x00001e88      488d05f16120.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x208080
0x00001e8f      4839f8         cmp rax, rdi
0x00001e92      4889e5         mov rbp, rsp
0x00001e95      7419           je 0x1eb0
0x00001e97      488b05226120.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x207fc0:8]=0
0x00001e9e      4885c0         test rax, rax
0x00001ea1      740d           je 0x1eb0
0x00001ea3      5d             pop rbp
0x00001ea4      ffe0           jmp rax
0x00001ea6      662e0f1f8400.  nop word cs:[rax + rax]
0x00001eb0      5d             pop rbp
0x00001eb1      c3             ret
0x00001eb2      0f1f4000       nop dword [rax]
0x00001eb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00001ec0      488d3db96120.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x208080
0x00001ec7      488d35b26120.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x208080
0x00001ece      55             push rbp
0x00001ecf      4829fe         sub rsi, rdi
0x00001ed2      4889e5         mov rbp, rsp
0x00001ed5      48c1fe03       sar rsi, 3
0x00001ed9      4889f0         mov rax, rsi
0x00001edc      48c1e83f       shr rax, 0x3f
0x00001ee0      4801c6         add rsi, rax
0x00001ee3      48d1fe         sar rsi, 1
0x00001ee6      7418           je 0x1f00
0x00001ee8      488b05e96020.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x207fd8:8]=0
0x00001eef      4885c0         test rax, rax
0x00001ef2      740c           je 0x1f00
0x00001ef4      5d             pop rbp
0x00001ef5      ffe0           jmp rax
0x00001ef7      660f1f840000.  nop word [rax + rax]
0x00001f00      5d             pop rbp
0x00001f01      c3             ret
0x00001f02      0f1f4000       nop dword [rax]
0x00001f06      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00001f10      803dd1612000.  cmp byte [obj.completed.7697], 0        ; [0x2080e8:1]=0
0x00001f17      752f           jne 0x1f48
0x00001f19      48833dbf6020.  cmp qword [reloc.__cxa_finalize], 0     ; [0x207fe0:8]=0
0x00001f21      55             push rbp
0x00001f22      4889e5         mov rbp, rsp
0x00001f25      740c           je 0x1f33
0x00001f27      488b3dda6020.  mov rdi, qword [obj.__dso_handle]       ; [0x208008:8]=0x208008 obj.__dso_handle
0x00001f2e      e8adf7ffff     call sym..plt.got
0x00001f33      e848ffffff     call sym.deregister_tm_clones
0x00001f38      c605a9612000.  mov byte [obj.completed.7697], 1        ; [0x2080e8:1]=0
0x00001f3f      5d             pop rbp
0x00001f40      c3             ret
0x00001f41      0f1f80000000.  nop dword [rax]
0x00001f48      f3c3           ret
0x00001f4a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00001f50      55             push rbp
0x00001f51      4889e5         mov rbp, rsp
0x00001f54      5d             pop rbp
0x00001f55      e966ffffff     jmp sym.register_tm_clones
0x00001f5a      660f1f440000   nop word [rax + rax]
;-- count_items:
0x00001f60      488305886120.  add qword [obj.n_strings], 1            ; /src:288 ; [0x2080f0:8]=0
0x00001f68      31c0           xor eax, eax                            ; /src:291
0x00001f6a      c3             ret
0x00001f6b      0f1f440000     nop dword [rax + rax]
;-- recurse_tree:
0x00001f70      55             push rbp
0x00001f71      53             push rbx
0x00001f72      4889f5         mov rbp, rsi
0x00001f75      4889fb         mov rbx, rdi
0x00001f78      4883ec08       sub rsp, 8
0x00001f7c      488b7b08       mov rdi, qword [rbx + 8]
0x00001f80      4885ff         test rdi, rdi
0x00001f83      743b           je 0x1fc0
0x00001f85      4889ee         mov rsi, rbp                            ; /src:270
0x00001f88      e8e3ffffff     call sym.recurse_tree
0x00001f8d      84c0           test al, al
0x00001f8f      751f           jne 0x1fb0
0x00001f91      4889df         mov rdi, rbx
0x00001f94      ffd5           call rbp
0x00001f96      84c0           test al, al                             ; /src:285
0x00001f98      7516           jne 0x1fb0                              ; /src:271
0x00001f9a      488b5b10       mov rbx, qword [rbx + 0x10]
0x00001f9e      4885db         test rbx, rbx
0x00001fa1      75d9           jne 0x1f7c
0x00001fa3      4883c408       add rsp, 8
0x00001fa7      5b             pop rbx
0x00001fa8      5d             pop rbp
0x00001fa9      c3             ret
0x00001faa      660f1f440000   nop word [rax + rax]                    ; /src:-31
0x00001fb0      4883c408       add rsp, 8
0x00001fb4      b801000000     mov eax, 1
0x00001fb9      5b             pop rbx
0x00001fba      5d             pop rbp
0x00001fbb      c3             ret
0x00001fbc      0f1f4000       nop dword [rax]
0x00001fc0      48837b1000     cmp qword [rbx + 0x10], 0               ; /src:-29
0x00001fc5      75ca           jne 0x1f91
0x00001fc7      4883c408       add rsp, 8
0x00001fcb      4889df         mov rdi, rbx
0x00001fce      4889e8         mov rax, rbp                            ; /src:-28
0x00001fd1      5b             pop rbx
0x00001fd2      5d             pop rbp
0x00001fd3      ffe0           jmp rax
0x00001fd5      90             nop
0x00001fd6      662e0f1f8400.  nop word cs:[rax + rax]                 ; /src:-19
;-- new_item:
0x00001fe0      55             push rbp
0x00001fe1      53             push rbx                                ; /src:-27
0x00001fe2      4889fd         mov rbp, rdi
0x00001fe5      bf38000000     mov edi, 0x38                           ; '8'
0x00001fea      4883ec08       sub rsp, 8
0x00001fee      e84d320000     call sym.xmalloc
0x00001ff3      4885ed         test rbp, rbp
0x00001ff6      4889c3         mov rbx, rax
0x00001ff9      740b           je 0x2006
0x00001ffb      4889ef         mov rdi, rbp
0x00001ffe      e86d340000     call sym.xstrdup
0x00002003      4889c5         mov rbp, rax
0x00002006      48892b         mov qword [rbx], rbp
0x00002009      48c743100000.  mov qword [rbx + 0x10], 0
0x00002011      4889d8         mov rax, rbx
0x00002014      48c743080000.  mov qword [rbx + 8], 0
0x0000201c      c74318000000.  mov dword [rbx + 0x18], 0               ; /src:162
0x00002023      48c743200000.  mov qword [rbx + 0x20], 0
0x0000202b      48c743280000.  mov qword [rbx + 0x28], 0
0x00002033      48c743300000.  mov qword [rbx + 0x30], 0
0x0000203b      4883c408       add rsp, 8
0x0000203f      5b             pop rbx
0x00002040      5d             pop rbp
0x00002041      c3             ret
0x00002042      0f1f4000       nop dword [rax]
0x00002046      662e0f1f8400.  nop word cs:[rax + rax]
;-- scan_zeros:
0x00002050      48837f2000     cmp qword [rdi + 0x20], 0
0x00002055      7522           jne 0x2079                              ; /src:195
0x00002057      48833f00       cmp qword [rdi], 0
0x0000205b      741c           je 0x2079
0x0000205d      48833da36020.  cmp qword [obj.head], 0                 ; [0x208108:8]=0
0x00002065      7419           je 0x2080
0x00002067      488b05926020.  mov rax, qword [obj.zeros]              ; [0x208100:8]=0
0x0000206e      48897828       mov qword [rax + 0x28], rdi
0x00002072      48893d876020.  mov qword [obj.zeros], rdi              ; [0x208100:8]=0
0x00002079      31c0           xor eax, eax
0x0000207b      c3             ret
0x0000207c      0f1f4000       nop dword [rax]
0x00002080      48893d816020.  mov qword [obj.head], rdi               ; [0x208108:8]=0
0x00002087      ebe9           jmp 0x2072
0x00002089      0f1f80000000.  nop dword [rax]
;-- detect_loop:
0x00002090      31c0           xor eax, eax
0x00002092      48837f2000     cmp qword [rdi + 0x20], 0
0x00002097      744f           je 0x20e8
0x00002099      4155           push r13
0x0000209b      4154           push r12
0x0000209d      55             push rbp
0x0000209e      53             push rbx
0x0000209f      4889fb         mov rbx, rdi
0x000020a2      4883ec08       sub rsp, 8
0x000020a6      488b154b6020.  mov rdx, qword [obj.loop]               ; [0x2080f8:8]=0
0x000020ad      4885d2         test rdx, rdx
0x000020b0      743e           je 0x20f0
0x000020b2      488b4f30       mov rcx, qword [rdi + 0x30]
0x000020b6      4885c9         test rcx, rcx
0x000020b9      741e           je 0x20d9
0x000020bb      483b11         cmp rdx, qword [rcx]
0x000020be      7510           jne 0x20d0
0x000020c0      e9f3000000     jmp 0x21b8
0x000020c5      0f1f00         nop dword [rax]
0x000020c8      483b10         cmp rdx, qword [rax]
0x000020cb      743b           je 0x2108
0x000020cd      4889c1         mov rcx, rax
0x000020d0      488b4108       mov rax, qword [rcx + 8]
0x000020d4      4885c0         test rax, rax
0x000020d7      75ef           jne 0x20c8
0x000020d9      4883c408       add rsp, 8
0x000020dd      5b             pop rbx
0x000020de      5d             pop rbp
0x000020df      415c           pop r12
0x000020e1      415d           pop r13
0x000020e3      c3             ret
0x000020e4      0f1f4000       nop dword [rax]
0x000020e8      f3c3           ret
0x000020ea      660f1f440000   nop word [rax + rax]
0x000020f0      48893d016020.  mov qword [obj.loop], rdi               ; [0x2080f8:8]=0
0x000020f7      4883c408       add rsp, 8
0x000020fb      5b             pop rbx
0x000020fc      5d             pop rbp
0x000020fd      415c           pop r12
0x000020ff      415d           pop r13
0x00002101      c3             ret
0x00002102      660f1f440000   nop word [rax + rax]
0x00002108      488d6908       lea rbp, [rcx + 8]
0x0000210c      48837b2800     cmp qword [rbx + 0x28], 0
0x00002111      0f8489000000   je 0x21a0
0x00002117      4c8d2db93a00.  lea r13, [0x00005bd7]                   ; "%s"
0x0000211e      eb17           jmp 0x2137
0x00002120      4d85e4         test r12, r12
0x00002123      48c740280000.  mov qword [rax + 0x28], 0
0x0000212b      4c8925c65f20.  mov qword [obj.loop], r12               ; [0x2080f8:8]=0
0x00002132      4c89e2         mov rdx, r12
0x00002135      7458           je 0x218f
0x00002137      488b0a         mov rcx, qword [rdx]
0x0000213a      31c0           xor eax, eax
0x0000213c      4c8b6228       mov r12, qword [rdx + 0x28]
0x00002140      31f6           xor esi, esi
0x00002142      31ff           xor edi, edi
0x00002144      4c89ea         mov rdx, r13
0x00002147      e8f4f4ffff     call sym.imp.error
0x0000214c      488b05a55f20.  mov rax, qword [obj.loop]               ; [0x2080f8:8]=0
0x00002153      4839c3         cmp rbx, rax
0x00002156      75c8           jne 0x2120
0x00002158      488b4500       mov rax, qword [rbp]
0x0000215c      488b10         mov rdx, qword [rax]
0x0000215f      488b4008       mov rax, qword [rax + 8]
0x00002163      48836a2001     sub qword [rdx + 0x20], 1
0x00002168      48894500       mov qword [rbp], rax
0x0000216c      0f1f4000       nop dword [rax]
0x00002170      488b4328       mov rax, qword [rbx + 0x28]
0x00002174      48c743280000.  mov qword [rbx + 0x28], 0
0x0000217c      4885c0         test rax, rax
0x0000217f      4889c3         mov rbx, rax
0x00002182      75ec           jne 0x2170
0x00002184      48c705695f20.  mov qword [obj.loop], 0                 ; [0x2080f8:8]=0
0x0000218f      4883c408       add rsp, 8
0x00002193      b801000000     mov eax, 1
0x00002198      5b             pop rbx
0x00002199      5d             pop rbp
0x0000219a      415c           pop r12
0x0000219c      415d           pop r13
0x0000219e      c3             ret
0x0000219f      90             nop
0x000021a0      48895328       mov qword [rbx + 0x28], rdx
0x000021a4      48891d4d5f20.  mov qword [obj.loop], rbx               ; [0x2080f8:8]=0
0x000021ab      31c0           xor eax, eax
0x000021ad      e927ffffff     jmp 0x20d9
0x000021b2      660f1f440000   nop word [rax + rax]
0x000021b8      488d6f30       lea rbp, [rdi + 0x30]
0x000021bc      e94bffffff     jmp 0x210c
0x000021c1      0f1f440000     nop dword [rax + rax]
0x000021c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- usage:
0x000021d0      4155           push r13
0x000021d2      4154           push r12
0x000021d4      ba05000000     mov edx, 5
0x000021d9      55             push rbp
0x000021da      53             push rbx
0x000021db      89fd           mov ebp, edi
0x000021dd      4881ec880000.  sub rsp, 0x88
0x000021e4      488b1d355f20.  mov rbx, qword [obj.program_name]       ; [0x208120:8]=0
0x000021eb      64488b042528.  mov rax, qword fs:[0x28]
0x000021f4      4889442478     mov qword [rsp + 0x78], rax
0x000021f9      31c0           xor eax, eax
0x000021fb      85ff           test edi, edi
0x000021fd      742e           je 0x222d
0x000021ff      488d35a23700.  lea rsi, str.Try___s___help__for_more_information. ; 0x59a8 ; "Try '%s --help' for more information.\n"
0x00002206      31ff           xor edi, edi
0x00002208      e883f2ffff     call sym.imp.dcgettext
0x0000220d      488b3dcc5e20.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080e0:8]=0
0x00002214      4889c2         mov rdx, rax
0x00002217      4889d9         mov rcx, rbx
0x0000221a      be01000000     mov esi, 1
0x0000221f      31c0           xor eax, eax
0x00002221      e87af4ffff     call sym.imp.__fprintf_chk
0x00002226      89ef           mov edi, ebp
0x00002228      e853f4ffff     call sym.imp.exit
0x0000222d      488d359c3700.  lea rsi, str.Usage:__s__OPTION___FILE___Write_totally_ordered_list_consistent_with_the_partial_ordering_in_FILE. ; 0x59d0 ; "Usage: %s [OPTION] [FILE]\nWrite totally ordered list consistent with the partial ordering in FILE.\n"
0x00002234      31ff           xor edi, edi
0x00002236      e855f2ffff     call sym.imp.dcgettext
0x0000223b      4889da         mov rdx, rbx
0x0000223e      4889c6         mov rsi, rax
0x00002241      bf01000000     mov edi, 1
0x00002246      31c0           xor eax, eax
0x00002248      e8e3f3ffff     call sym.imp.__printf_chk
0x0000224d      488b1d345e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00002254      488d35dd3700.  lea rsi, str.With_no_FILE__or_when_FILE_is____read_standard_input. ; 0x5a38 ; "\nWith no FILE, or when FILE is -, read standard input.\n"
0x0000225b      ba05000000     mov edx, 5
0x00002260      31ff           xor edi, edi
0x00002262      e829f2ffff     call sym.imp.dcgettext
0x00002267      4889de         mov rsi, rbx
0x0000226a      4889c7         mov rdi, rax
0x0000226d      e80ef3ffff     call sym.imp.fputs_unlocked
0x00002272      488b1d0f5e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00002279      488d35a63600.  lea rsi, [0x00005926]                   ; "\n"
0x00002280      ba05000000     mov edx, 5
0x00002285      31ff           xor edi, edi
0x00002287      e804f2ffff     call sym.imp.dcgettext
0x0000228c      4889de         mov rsi, rbx
0x0000228f      4889c7         mov rdi, rax
0x00002292      e8e9f2ffff     call sym.imp.fputs_unlocked
0x00002297      488b1dea5d20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x0000229e      488d35cb3700.  lea rsi, str.help_____display_this_help_and_exit ; 0x5a70 ; "      --help     display this help and exit\n"
0x000022a5      ba05000000     mov edx, 5
0x000022aa      31ff           xor edi, edi
0x000022ac      e8dff1ffff     call sym.imp.dcgettext
0x000022b1      4889de         mov rsi, rbx
0x000022b4      4889c7         mov rdi, rax
0x000022b7      e8c4f2ffff     call sym.imp.fputs_unlocked
0x000022bc      488b1dc55d20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x000022c3      488d35d63700.  lea rsi, str.version__output_version_information_and_exit ; 0x5aa0 ; "      --version  output version information and exit\n"
0x000022ca      ba05000000     mov edx, 5
0x000022cf      31ff           xor edi, edi
0x000022d1      e8baf1ffff     call sym.imp.dcgettext
0x000022d6      4889de         mov rsi, rbx
0x000022d9      4889c7         mov rdi, rax
0x000022dc      488d1d613500.  lea rbx, [0x00005844]                   ; "tsort"
0x000022e3      e898f2ffff     call sym.imp.fputs_unlocked
0x000022e8      488d055b3500.  lea rax, [0x0000584a]                   ; "["
0x000022ef      488d0d953500.  lea rcx, str.sha256sum                  ; 0x588b ; "sha256sum"
0x000022f6      48c744246000.  mov qword [rsp + 0x60], 0
0x000022ff      48c744246800.  mov qword [rsp + 0x68], 0
0x00002308      4889e2         mov rdx, rsp
0x0000230b      48890424       mov qword [rsp], rax
0x0000230f      488d05363500.  lea rax, str.test_invocation            ; 0x584c ; "test invocation"
0x00002316      48894c2430     mov qword [rsp + 0x30], rcx
0x0000231b      488d0d733500.  lea rcx, str.sha384sum                  ; 0x5895 ; "sha384sum"
0x00002322      4889442408     mov qword [rsp + 8], rax
0x00002327      488d05963500.  lea rax, [0x000058c4]                   ; "coreutils"
0x0000232e      48894c2440     mov qword [rsp + 0x40], rcx
0x00002333      488d0d653500.  lea rcx, str.sha512sum                  ; 0x589f ; "sha512sum"
0x0000233a      4889442410     mov qword [rsp + 0x10], rax
0x0000233f      488d05163500.  lea rax, str.Multi_call_invocation      ; 0x585c ; "Multi-call invocation"
0x00002346      48894c2450     mov qword [rsp + 0x50], rcx
0x0000234b      4889442418     mov qword [rsp + 0x18], rax
0x00002350      488d051b3500.  lea rax, str.sha224sum                  ; 0x5872 ; "sha224sum"
0x00002357      4889442420     mov qword [rsp + 0x20], rax
0x0000235c      488d05193500.  lea rax, str.sha2_utilities             ; 0x587c ; "sha2 utilities"
0x00002363      4889442428     mov qword [rsp + 0x28], rax
0x00002368      4889442438     mov qword [rsp + 0x38], rax
0x0000236d      4889442448     mov qword [rsp + 0x48], rax
0x00002372      4889442458     mov qword [rsp + 0x58], rax
0x00002377      660f1f840000.  nop word [rax + rax]
0x00002380      4883c210       add rdx, 0x10
0x00002384      488b3a         mov rdi, qword [rdx]
0x00002387      4885ff         test rdi, rdi
0x0000238a      7413           je 0x239f
0x0000238c      b906000000     mov ecx, 6
0x00002391      4889de         mov rsi, rbx
0x00002394      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002396      0f97c0         seta al
0x00002399      1c00           sbb al, 0
0x0000239b      84c0           test al, al
0x0000239d      75e1           jne 0x2380
0x0000239f      4c8b6208       mov r12, qword [rdx + 8]
0x000023a3      31ff           xor edi, edi
0x000023a5      ba05000000     mov edx, 5
0x000023aa      488d35f83400.  lea rsi, str.s_online_help:___s         ; 0x58a9 ; "\n%s online help: <%s>\n"
0x000023b1      4d85e4         test r12, r12
0x000023b4      0f84c1000000   je 0x247b
0x000023ba      e8d1f0ffff     call sym.imp.dcgettext
0x000023bf      488d0d123700.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x5ad8 ; "https://www.gnu.org/software/coreutils/"
0x000023c6      488d15f33400.  lea rdx, str.GNU_coreutils              ; 0x58c0 ; "GNU coreutils"
0x000023cd      4889c6         mov rsi, rax
0x000023d0      bf01000000     mov edi, 1
0x000023d5      31c0           xor eax, eax
0x000023d7      e854f2ffff     call sym.imp.__printf_chk
0x000023dc      31f6           xor esi, esi
0x000023de      bf05000000     mov edi, 5
0x000023e3      e838f2ffff     call sym.imp.setlocale
0x000023e8      4885c0         test rax, rax
0x000023eb      741c           je 0x2409
0x000023ed      488d35da3400.  lea rsi, [0x000058ce]                   ; "en_"
0x000023f4      ba03000000     mov edx, 3
0x000023f9      4889c7         mov rdi, rax
0x000023fc      e81ff0ffff     call sym.imp.strncmp
0x00002401      85c0           test eax, eax
0x00002403      0f8507010000   jne 0x2510
0x00002409      488d35c23400.  lea rsi, str.Full_documentation___s_s   ; 0x58d2 ; "Full documentation <%s%s>\n"
0x00002410      31ff           xor edi, edi
0x00002412      ba05000000     mov edx, 5
0x00002417      e874f0ffff     call sym.imp.dcgettext
0x0000241c      488d0d213400.  lea rcx, [0x00005844]                   ; "tsort"
0x00002423      488d15ae3600.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x5ad8 ; "https://www.gnu.org/software/coreutils/"
0x0000242a      4889c6         mov rsi, rax
0x0000242d      bf01000000     mov edi, 1
0x00002432      31c0           xor eax, eax
0x00002434      e8f7f1ffff     call sym.imp.__printf_chk
0x00002439      4939dc         cmp r12, rbx
0x0000243c      488d0d233400.  lea rcx, [0x00005866]                   ; " invocation"
0x00002443      488d1ddd3400.  lea rbx, [0x00005927]
0x0000244a      480f44d9       cmove rbx, rcx
0x0000244e      488d35f33600.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x5b48 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00002455      31ff           xor edi, edi
0x00002457      ba05000000     mov edx, 5
0x0000245c      e82ff0ffff     call sym.imp.dcgettext
0x00002461      4889d9         mov rcx, rbx
0x00002464      4889c6         mov rsi, rax
0x00002467      4c89e2         mov rdx, r12
0x0000246a      bf01000000     mov edi, 1
0x0000246f      31c0           xor eax, eax
0x00002471      e8baf1ffff     call sym.imp.__printf_chk
0x00002476      e9abfdffff     jmp 0x2226
0x0000247b      e810f0ffff     call sym.imp.dcgettext
0x00002480      488d0d513600.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x5ad8 ; "https://www.gnu.org/software/coreutils/"
0x00002487      488d15323400.  lea rdx, str.GNU_coreutils              ; 0x58c0 ; "GNU coreutils"
0x0000248e      4889c6         mov rsi, rax
0x00002491      bf01000000     mov edi, 1
0x00002496      31c0           xor eax, eax
0x00002498      e893f1ffff     call sym.imp.__printf_chk
0x0000249d      31f6           xor esi, esi
0x0000249f      bf05000000     mov edi, 5
0x000024a4      e877f1ffff     call sym.imp.setlocale
0x000024a9      4885c0         test rax, rax
0x000024ac      7418           je 0x24c6
0x000024ae      488d35193400.  lea rsi, [0x000058ce]                   ; "en_"
0x000024b5      ba03000000     mov edx, 3
0x000024ba      4889c7         mov rdi, rax
0x000024bd      e85eefffff     call sym.imp.strncmp
0x000024c2      85c0           test eax, eax
0x000024c4      7543           jne 0x2509
0x000024c6      488d35053400.  lea rsi, str.Full_documentation___s_s   ; 0x58d2 ; "Full documentation <%s%s>\n"
0x000024cd      ba05000000     mov edx, 5
0x000024d2      31ff           xor edi, edi
0x000024d4      4c8d25693300.  lea r12, [0x00005844]                   ; "tsort"
0x000024db      488d1d843300.  lea rbx, [0x00005866]                   ; " invocation"
0x000024e2      e8a9efffff     call sym.imp.dcgettext
0x000024e7      488d0d563300.  lea rcx, [0x00005844]                   ; "tsort"
0x000024ee      488d15e33500.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x5ad8 ; "https://www.gnu.org/software/coreutils/"
0x000024f5      4889c6         mov rsi, rax
0x000024f8      bf01000000     mov edi, 1
0x000024fd      31c0           xor eax, eax
0x000024ff      e82cf1ffff     call sym.imp.__printf_chk
0x00002504      e945ffffff     jmp 0x244e
0x00002509      4c8d25343300.  lea r12, [0x00005844]                   ; "tsort"
0x00002510      4c8b2d715b20.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00002517      488d35e23500.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x5b00 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x0000251e      31ff           xor edi, edi
0x00002520      ba05000000     mov edx, 5
0x00002525      e866efffff     call sym.imp.dcgettext
0x0000252a      4c89ee         mov rsi, r13
0x0000252d      4889c7         mov rdi, rax
0x00002530      e84bf0ffff     call sym.imp.fputs_unlocked
0x00002535      e9cffeffff     jmp 0x2409
0x0000253a      660f1f440000   nop word [rax + rax]
;-- close_stdout_set_file_name:
0x00002540      48893dd15b20.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x208118:8]=0
0x00002547      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00002548      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00002550      40883db95b20.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x208110:1]=0
0x00002557      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00002558      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00002560      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00002561      53             push rbx
0x00002562      4883ec08       sub rsp, 8
0x00002566      488b3d1b5b20.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x0000256d      e80e310000     call sym.close_stream
0x00002572      85c0           test eax, eax
0x00002574      7416           je 0x258c
0x00002576      e895eeffff     call sym.imp.__errno_location
0x0000257b      803d8e5b2000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x208110:1]=0
0x00002582      4889c3         mov rbx, rax
0x00002585      741c           je 0x25a3
0x00002587      833820         cmp dword [rax], 0x20
0x0000258a      7517           jne 0x25a3
0x0000258c      488b3d4d5b20.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080e0:8]=0
0x00002593      e8e8300000     call sym.close_stream
0x00002598      85c0           test eax, eax
0x0000259a      7546           jne 0x25e2
0x0000259c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x000025a0      5b             pop rbx
0x000025a1      5d             pop rbp
0x000025a2      c3             ret
0x000025a3      488d351d3600.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x5bc7 ; "write error"
0x000025aa      31ff           xor edi, edi
0x000025ac      ba05000000     mov edx, 5
0x000025b1      e8daeeffff     call sym.imp.dcgettext
0x000025b6      488b3d5b5b20.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x208118:8]=0
0x000025bd      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x000025c0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x000025c3      7428           je 0x25ed
0x000025c5      e816200000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x000025ca      8b33           mov esi, dword [rbx]
0x000025cc      488d15003600.  lea rdx, str.s:__s                      ; 0x5bd3 ; "%s: %s"
0x000025d3      4889c1         mov rcx, rax
0x000025d6      4989e8         mov r8, rbp
0x000025d9      31ff           xor edi, edi
0x000025db      31c0           xor eax, eax
0x000025dd      e85ef0ffff     call sym.imp.error
0x000025e2      8b3d305a2000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x208018:4]=1
0x000025e8      e843eeffff     call sym.imp._exit
0x000025ed      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x000025ef      488d15e13500.  lea rdx, [0x00005bd7]                   ; "%s"
0x000025f6      4889c1         mov rcx, rax
0x000025f9      31ff           xor edi, edi
0x000025fb      31c0           xor eax, eax
0x000025fd      e83ef0ffff     call sym.imp.error
0x00002602      ebde           jmp 0x25e2
0x00002604      662e0f1f8400.  nop word cs:[rax + rax]
0x0000260e      6690           nop
;-- fdadvise:
0x00002610      e94befffff     jmp sym.imp.posix_fadvise               ; ../coreutils-8.31/lib/fadvise.c:32
0x00002615      90             nop
0x00002616      662e0f1f8400.  nop word cs:[rax + rax]
;-- fadvise:
0x00002620      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fadvise.c:40
0x00002623      741b           je 0x2640
0x00002625      53             push rbx
0x00002626      89f3           mov ebx, esi
0x00002628      e893efffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fadvise.c:42
0x0000262d      89d9           mov ecx, ebx                            ; ../coreutils-8.31/lib/fadvise.c:34
0x0000262f      31d2           xor edx, edx
0x00002631      31f6           xor esi, esi
0x00002633      5b             pop rbx                                 ; ../coreutils-8.31/lib/fadvise.c:43
0x00002634      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fadvise.c:34
0x00002636      e925efffff     jmp sym.imp.posix_fadvise
0x0000263b      0f1f440000     nop dword [rax + rax]
0x00002640      f3c3           ret
0x00002642      662e0f1f8400.  nop word cs:[rax + rax]
0x0000264c      0f1f4000       nop dword [rax]
;-- protect_fd:
0x00002650      55             push rbp                                ; ../coreutils-8.31/lib/freopen-safer.c:41
0x00002651      53             push rbx
0x00002652      89fd           mov ebp, edi
0x00002654      488d3d7f3500.  lea rdi, str.dev_null                   ; fcntl2.h:53       return __open_alias (__path, __oflag, __va_arg_pack ()); ; 0x5bda ; "/dev/null"
0x0000265b      31f6           xor esi, esi
0x0000265d      31c0           xor eax, eax
0x0000265f      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/freopen-safer.c:41
0x00002663      bb01000000     mov ebx, 1                              ; ../coreutils-8.31/lib/freopen-safer.c:52
0x00002668      e8e3efffff     call sym.imp.open                       ; fcntl2.h:53       return __open_alias (__path, __oflag, __va_arg_pack ());
0x0000266d      39c5           cmp ebp, eax                            ; ../coreutils-8.31/lib/freopen-safer.c:43
0x0000266f      7418           je 0x2689
0x00002671      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/freopen-safer.c:50
0x00002673      85c0           test eax, eax                           ; ../coreutils-8.31/lib/freopen-safer.c:45
0x00002675      7812           js 0x2689
0x00002677      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/freopen-safer.c:47
0x00002679      e8d2eeffff     call sym.imp.close
0x0000267e      e88dedffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/freopen-safer.c:48
0x00002683      c70009000000   mov dword [rax], 9
0x00002689      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/freopen-safer.c:53
0x0000268d      89d8           mov eax, ebx
0x0000268f      5b             pop rbx
0x00002690      5d             pop rbp
0x00002691      c3             ret
0x00002692      0f1f4000       nop dword [rax]
0x00002696      662e0f1f8400.  nop word cs:[rax + rax]
;-- freopen_safer:
0x000026a0      4157           push r15                                ; ../coreutils-8.31/lib/freopen-safer.c:63
0x000026a2      4156           push r14
0x000026a4      4989f7         mov r15, rsi
0x000026a7      4155           push r13
0x000026a9      4154           push r12
0x000026ab      4989d4         mov r12, rdx
0x000026ae      55             push rbp
0x000026af      53             push rbx
0x000026b0      4883ec18       sub rsp, 0x18
0x000026b4      48897c2408     mov qword [rsp + 8], rdi
0x000026b9      4889d7         mov rdi, rdx                            ; ../coreutils-8.31/lib/freopen-safer.c:75
0x000026bc      e8ffeeffff     call sym.imp.fileno
0x000026c1      89c3           mov ebx, eax
0x000026c3      e848edffff     call sym.imp.__errno_location
0x000026c8      83fb01         cmp ebx, 1
0x000026cb      4989c6         mov r14, rax
0x000026ce      0f845c010000   je 0x2830
0x000026d4      83fb02         cmp ebx, 2
0x000026d7      0f8443010000   je 0x2820
0x000026dd      85db           test ebx, ebx
0x000026df      0f84b3000000   je 0x2798
0x000026e5      be02000000     mov esi, 2                              ; ../coreutils-8.31/lib/freopen-safer.c:78
0x000026ea      bf02000000     mov edi, 2
0x000026ef      e8fcedffff     call sym.imp.dup2
0x000026f4      83f802         cmp eax, 2
0x000026f7      0f95c3         setne bl
0x000026fa      be01000000     mov esi, 1                              ; ../coreutils-8.31/lib/freopen-safer.c:82
0x000026ff      bf01000000     mov edi, 1
0x00002704      e8e7edffff     call sym.imp.dup2
0x00002709      83f801         cmp eax, 1
0x0000270c      400f95c5       setne bpl
0x00002710      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/freopen-safer.c:86
0x00002712      31ff           xor edi, edi
0x00002714      e8d7edffff     call sym.imp.dup2
0x00002719      85c0           test eax, eax
0x0000271b      0f8487000000   je 0x27a8
0x00002721      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/freopen-safer.c:93
0x00002723      e828ffffff     call sym.protect_fd
0x00002728      84c0           test al, al
0x0000272a      4189c5         mov r13d, eax
0x0000272d      0f840d010000   je 0x2840
0x00002733      4084ed         test bpl, bpl                           ; ../coreutils-8.31/lib/freopen-safer.c:95
0x00002736      7578           jne 0x27b0
0x00002738      84db           test bl, bl                             ; ../coreutils-8.31/lib/freopen-safer.c:97
0x0000273a      7414           je 0x2750
0x0000273c      bf02000000     mov edi, 2
0x00002741      e80affffff     call sym.protect_fd
0x00002746      84c0           test al, al
0x00002748      89c3           mov ebx, eax
0x0000274a      0f84b0000000   je 0x2800
0x00002750      488b7c2408     mov rdi, qword [rsp + 8]                ; ../coreutils-8.31/lib/freopen-safer.c:100
0x00002755      4c89e2         mov rdx, r12
0x00002758      4c89fe         mov rsi, r15
0x0000275b      e8e0edffff     call sym.imp.freopen
0x00002760      4989c4         mov r12, rax
0x00002763      84db           test bl, bl                             ; ../coreutils-8.31/lib/freopen-safer.c:102
0x00002765      458b3e         mov r15d, dword [r14]                   ; ../coreutils-8.31/lib/freopen-safer.c:101
0x00002768      0f85a2000000   jne 0x2810                              ; ../coreutils-8.31/lib/freopen-safer.c:102
0x0000276e      4084ed         test bpl, bpl                           ; ../coreutils-8.31/lib/freopen-safer.c:104
0x00002771      756d           jne 0x27e0
0x00002773      4584ed         test r13b, r13b                         ; ../coreutils-8.31/lib/freopen-safer.c:106
0x00002776      7577           jne 0x27ef
0x00002778      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/freopen-safer.c:108
0x0000277b      7503           jne 0x2780
0x0000277d      45893e         mov dword [r14], r15d                   ; ../coreutils-8.31/lib/freopen-safer.c:109
0x00002780      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/freopen-safer.c:111
0x00002784      4c89e0         mov rax, r12
0x00002787      5b             pop rbx
0x00002788      5d             pop rbp
0x00002789      415c           pop r12
0x0000278b      415d           pop r13
0x0000278d      415e           pop r14
0x0000278f      415f           pop r15
0x00002791      c3             ret
0x00002792      660f1f440000   nop word [rax + rax]
0x00002798      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/freopen-safer.c:72
0x0000279a      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/freopen-safer.c:71
0x0000279c      4531ed         xor r13d, r13d                          ; ../coreutils-8.31/lib/freopen-safer.c:70
0x0000279f      ebaf           jmp 0x2750
0x000027a1      0f1f80000000.  nop dword [rax]
0x000027a8      4531ed         xor r13d, r13d
0x000027ab      4084ed         test bpl, bpl                           ; ../coreutils-8.31/lib/freopen-safer.c:95
0x000027ae      7488           je 0x2738
0x000027b0      bf01000000     mov edi, 1
0x000027b5      e896feffff     call sym.protect_fd
0x000027ba      84c0           test al, al
0x000027bc      89c5           mov ebp, eax
0x000027be      0f8574ffffff   jne 0x2738
0x000027c4      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/freopen-safer.c:96
0x000027c7      84db           test bl, bl                             ; ../coreutils-8.31/lib/freopen-safer.c:102
0x000027c9      458b3e         mov r15d, dword [r14]                   ; ../coreutils-8.31/lib/freopen-safer.c:101
0x000027cc      7412           je 0x27e0                               ; ../coreutils-8.31/lib/freopen-safer.c:102
0x000027ce      bf02000000     mov edi, 2                              ; ../coreutils-8.31/lib/freopen-safer.c:103
0x000027d3      e878edffff     call sym.imp.close
0x000027d8      0f1f84000000.  nop dword [rax + rax]
0x000027e0      bf01000000     mov edi, 1                              ; ../coreutils-8.31/lib/freopen-safer.c:105
0x000027e5      e866edffff     call sym.imp.close
0x000027ea      4584ed         test r13b, r13b                         ; ../coreutils-8.31/lib/freopen-safer.c:106
0x000027ed      7489           je 0x2778
0x000027ef      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/freopen-safer.c:107
0x000027f1      e85aedffff     call sym.imp.close
0x000027f6      eb80           jmp 0x2778
0x000027f8      0f1f84000000.  nop dword [rax + rax]
0x00002800      458b3e         mov r15d, dword [r14]                   ; ../coreutils-8.31/lib/freopen-safer.c:101
0x00002803      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/freopen-safer.c:98
0x00002806      662e0f1f8400.  nop word cs:[rax + rax]
0x00002810      bf02000000     mov edi, 2                              ; ../coreutils-8.31/lib/freopen-safer.c:103
0x00002815      e836edffff     call sym.imp.close
0x0000281a      e94fffffff     jmp 0x276e
0x0000281f      90             nop
0x00002820      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/freopen-safer.c:72
0x00002822      e9d3feffff     jmp 0x26fa
0x00002827      660f1f840000.  nop word [rax + rax]
0x00002830      31db           xor ebx, ebx
0x00002832      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/freopen-safer.c:71
0x00002834      e9d7feffff     jmp 0x2710
0x00002839      0f1f80000000.  nop dword [rax]
0x00002840      41bd01000000   mov r13d, 1                             ; ../coreutils-8.31/lib/freopen-safer.c:87
0x00002846      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/freopen-safer.c:94
0x00002849      e915ffffff     jmp 0x2763
0x0000284e      6690           nop
;-- parse_long_options:
0x00002850      4155           push r13                                ; ../coreutils-8.31/lib/long-options.c:52
0x00002852      4154           push r12
0x00002854      4d89c5         mov r13, r8
0x00002857      55             push rbp
0x00002858      53             push rbx
0x00002859      4889d5         mov rbp, rdx
0x0000285c      4989cc         mov r12, rcx
0x0000285f      4881ece80000.  sub rsp, 0xe8
0x00002866      84c0           test al, al
0x00002868      743a           je 0x28a4
0x0000286a      0f29442460     movaps xmmword [rsp + 0x60], xmm0
0x0000286f      0f294c2470     movaps xmmword [rsp + 0x70], xmm1
0x00002874      0f2994248000.  movaps xmmword [rsp + 0x80], xmm2
0x0000287c      0f299c249000.  movaps xmmword [rsp + 0x90], xmm3
0x00002884      0f29a424a000.  movaps xmmword [rsp + 0xa0], xmm4
0x0000288c      0f29ac24b000.  movaps xmmword [rsp + 0xb0], xmm5
0x00002894      0f29b424c000.  movaps xmmword [rsp + 0xc0], xmm6
0x0000289c      0f29bc24d000.  movaps xmmword [rsp + 0xd0], xmm7
0x000028a4      64488b042528.  mov rax, qword fs:[0x28]
0x000028ad      4889442428     mov qword [rsp + 0x28], rax
0x000028b2      31c0           xor eax, eax
0x000028b4      83ff02         cmp edi, 2                              ; ../coreutils-8.31/lib/long-options.c:61
0x000028b7      8b1d03582000   mov ebx, dword [obj.opterr]             ; ../coreutils-8.31/lib/long-options.c:56 ; obj.opterr__GLIBC_2.2.5
                                                                       ; [0x2080c0:4]=0
0x000028bd      c705f9572000.  mov dword [obj.opterr], 0               ; ../coreutils-8.31/lib/long-options.c:59 ; obj.opterr__GLIBC_2.2.5
                                                                       ; [0x2080c0:4]=0
0x000028c7      7437           je 0x2900                               ; ../coreutils-8.31/lib/long-options.c:61
0x000028c9      488b442428     mov rax, qword [rsp + 0x28]             ; ../coreutils-8.31/lib/long-options.c:90
0x000028ce      644833042528.  xor rax, qword fs:[0x28]
0x000028d7      891de3572000   mov dword [obj.opterr], ebx             ; ../coreutils-8.31/lib/long-options.c:85 ; obj.opterr__GLIBC_2.2.5
                                                                       ; [0x2080c0:4]=0
0x000028dd      c705b1572000.  mov dword [obj.optind], 0               ; ../coreutils-8.31/lib/long-options.c:89 ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x208098:4]=0
0x000028e7      0f859d000000   jne 0x298a                              ; ../coreutils-8.31/lib/long-options.c:90
0x000028ed      4881c4e80000.  add rsp, 0xe8
0x000028f4      5b             pop rbx
0x000028f5      5d             pop rbp
0x000028f6      415c           pop r12
0x000028f8      415d           pop r13
0x000028fa      c3             ret
0x000028fb      0f1f440000     nop dword [rax + rax]
0x00002900      488d0d795220.  lea rcx, obj.long_options               ; ../coreutils-8.31/lib/long-options.c:62 ; 0x207b80
0x00002907      488d15d63200.  lea rdx, [0x00005be4]                   ; "+"
0x0000290e      4531c0         xor r8d, r8d
0x00002911      4c894c2408     mov qword [rsp + 8], r9
0x00002916      e8b5ebffff     call sym.imp.getopt_long
0x0000291b      83f8ff         cmp eax, 0xffffffff
0x0000291e      74a9           je 0x28c9
0x00002920      83f868         cmp eax, 0x68                           ; ../coreutils-8.31/lib/long-options.c:64
0x00002923      4c8b4c2408     mov r9, qword [rsp + 8]
0x00002928      7456           je 0x2980
0x0000292a      83f876         cmp eax, 0x76
0x0000292d      759a           jne 0x28c9
0x0000292f      488d84241001.  lea rax, [rsp + 0x110]                  ; ../coreutils-8.31/lib/long-options.c:73
0x00002937      488b3d4a5720.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/long-options.c:74 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x0000293e      4c8d442410     lea r8, [rsp + 0x10]
0x00002943      4c89e9         mov rcx, r13
0x00002946      4c89e2         mov rdx, r12
0x00002949      4889ee         mov rsi, rbp
0x0000294c      4889442418     mov qword [rsp + 0x18], rax             ; ../coreutils-8.31/lib/long-options.c:73
0x00002951      488d442430     lea rax, [rsp + 0x30]
0x00002956      c74424103000.  mov dword [rsp + 0x10], 0x30            ; '0'
                                                                       ; [0x30:4]=0
0x0000295e      c74424143000.  mov dword [rsp + 0x14], 0x30            ; '0'
                                                                       ; [0x30:4]=0
0x00002966      4889442420     mov qword [rsp + 0x20], rax
0x0000296b      e8f0260000     call sym.version_etc_va                 ; ../coreutils-8.31/lib/long-options.c:74
0x00002970      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/long-options.c:75
0x00002972      e809edffff     call sym.imp.exit
0x00002977      660f1f840000.  nop word [rax + rax]
0x00002980      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/long-options.c:67
0x00002982      41ffd1         call r9
0x00002985      e93fffffff     jmp 0x28c9                              ; ../coreutils-8.31/lib/long-options.c:68
0x0000298a      e831ebffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/long-options.c:90
0x0000298f      90             nop
;-- parse_gnu_standard_options_only:
0x00002990      4156           push r14                                ; ../coreutils-8.31/lib/long-options.c:106
0x00002992      4155           push r13
0x00002994      4d89c6         mov r14, r8
0x00002997      4154           push r12
0x00002999      55             push rbp
0x0000299a      4989d4         mov r12, rdx
0x0000299d      53             push rbx
0x0000299e      4989cd         mov r13, rcx
0x000029a1      4881ecd00000.  sub rsp, 0xd0
0x000029a8      84c0           test al, al
0x000029aa      488bac240001.  mov rbp, qword [rsp + 0x100]
0x000029b2      7437           je 0x29eb
0x000029b4      0f29442450     movaps xmmword [rsp + 0x50], xmm0
0x000029b9      0f294c2460     movaps xmmword [rsp + 0x60], xmm1
0x000029be      0f29542470     movaps xmmword [rsp + 0x70], xmm2
0x000029c3      0f299c248000.  movaps xmmword [rsp + 0x80], xmm3
0x000029cb      0f29a4249000.  movaps xmmword [rsp + 0x90], xmm4
0x000029d3      0f29ac24a000.  movaps xmmword [rsp + 0xa0], xmm5
0x000029db      0f29b424b000.  movaps xmmword [rsp + 0xb0], xmm6
0x000029e3      0f29bc24c000.  movaps xmmword [rsp + 0xc0], xmm7
0x000029eb      64488b042528.  mov rax, qword fs:[0x28]
0x000029f4      4889442418     mov qword [rsp + 0x18], rax
0x000029f9      31c0           xor eax, eax
0x000029fb      488d15252f00.  lea rdx, [0x00005927]                   ; ../coreutils-8.31/lib/long-options.c:113
0x00002a02      488d05db3100.  lea rax, [0x00005be4]                   ; "+"
0x00002a09      4584c9         test r9b, r9b
0x00002a0c      488d0d6d5120.  lea rcx, obj.long_options               ; ../coreutils-8.31/lib/long-options.c:115 ; 0x207b80
0x00002a13      480f44d0       cmove rdx, rax                          ; ../coreutils-8.31/lib/long-options.c:113
0x00002a17      4531c0         xor r8d, r8d                            ; ../coreutils-8.31/lib/long-options.c:115
0x00002a1a      8b1da0562000   mov ebx, dword [obj.opterr]             ; ../coreutils-8.31/lib/long-options.c:108 ; obj.opterr__GLIBC_2.2.5
                                                                       ; [0x2080c0:4]=0
0x00002a20      c70596562000.  mov dword [obj.opterr], 1               ; ../coreutils-8.31/lib/long-options.c:111 ; obj.opterr__GLIBC_2.2.5
                                                                       ; [0x2080c0:4]=0
0x00002a2a      e8a1eaffff     call sym.imp.getopt_long                ; ../coreutils-8.31/lib/long-options.c:115
0x00002a2f      83f8ff         cmp eax, 0xffffffff
0x00002a32      7464           je 0x2a98
0x00002a34      83f868         cmp eax, 0x68                           ; ../coreutils-8.31/lib/long-options.c:117
0x00002a37      0f8483000000   je 0x2ac0
0x00002a3d      83f876         cmp eax, 0x76
0x00002a40      754e           jne 0x2a90
0x00002a42      488d84240801.  lea rax, [rsp + 0x108]                  ; ../coreutils-8.31/lib/long-options.c:126
0x00002a4a      488b3d375620.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/long-options.c:127 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00002a51      4989e0         mov r8, rsp
0x00002a54      4c89f1         mov rcx, r14
0x00002a57      4c89ea         mov rdx, r13
0x00002a5a      4c89e6         mov rsi, r12
0x00002a5d      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/long-options.c:126
0x00002a62      488d442420     lea rax, [rsp + 0x20]
0x00002a67      c70424300000.  mov dword [rsp], 0x30                   ; '0'
                                                                       ; [0x30:4]=0
0x00002a6e      c74424043000.  mov dword [rsp + 4], 0x30               ; '0'
                                                                       ; [0x30:4]=0
0x00002a76      4889442410     mov qword [rsp + 0x10], rax
0x00002a7b      e8e0250000     call sym.version_etc_va                 ; ../coreutils-8.31/lib/long-options.c:127
0x00002a80      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/long-options.c:128
0x00002a82      e8f9ebffff     call sym.imp.exit
0x00002a87      660f1f840000.  nop word [rax + rax]
0x00002a90      8b3d82552000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/long-options.c:132 ; [0x208018:4]=1
0x00002a96      ffd5           call rbp
0x00002a98      488b442418     mov rax, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/long-options.c:139
0x00002a9d      644833042528.  xor rax, qword fs:[0x28]
0x00002aa6      891d14562000   mov dword [obj.opterr], ebx             ; ../coreutils-8.31/lib/long-options.c:138 ; obj.opterr__GLIBC_2.2.5
                                                                       ; [0x2080c0:4]=0
0x00002aac      7518           jne 0x2ac6                              ; ../coreutils-8.31/lib/long-options.c:139
0x00002aae      4881c4d00000.  add rsp, 0xd0
0x00002ab5      5b             pop rbx
0x00002ab6      5d             pop rbp
0x00002ab7      415c           pop r12
0x00002ab9      415d           pop r13
0x00002abb      415e           pop r14
0x00002abd      c3             ret
0x00002abe      6690           nop
0x00002ac0      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/long-options.c:120
0x00002ac2      ffd5           call rbp
0x00002ac4      ebd2           jmp 0x2a98                              ; ../coreutils-8.31/lib/long-options.c:121
0x00002ac6      e8f5e9ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/long-options.c:139
0x00002acb      0f1f440000     nop dword [rax + rax]
;-- set_program_name:
0x00002ad0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00002ad3      53             push rbx
0x00002ad4      7477           je 0x2b4d                               ; ../coreutils-8.31/lib/progname.c:51
0x00002ad6      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x00002adb      4889fb         mov rbx, rdi
0x00002ade      e81deaffff     call sym.imp.strrchr
0x00002ae3      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00002ae6      7455           je 0x2b3d
0x00002ae8      4c8d4001       lea r8, [rax + 1]
0x00002aec      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x00002aef      4829da         sub rdx, rbx
0x00002af2      4883fa06       cmp rdx, 6
0x00002af6      7e45           jle 0x2b3d
0x00002af8      488d70fa       lea rsi, [rax - 6]
0x00002afc      488d3d2d3100.  lea rdi, str..libs                      ; 0x5c30 ; "/.libs/"
0x00002b03      b907000000     mov ecx, 7
0x00002b08      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002b0a      0f97c2         seta dl
0x00002b0d      80da00         sbb dl, 0
0x00002b10      84d2           test dl, dl
0x00002b12      7529           jne 0x2b3d
0x00002b14      488d3d1d3100.  lea rdi, [0x00005c38]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x00002b1b      b903000000     mov ecx, 3
0x00002b20      4c89c6         mov rsi, r8
0x00002b23      4c89c3         mov rbx, r8
0x00002b26      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002b28      0f97c2         seta dl
0x00002b2b      80da00         sbb dl, 0
0x00002b2e      84d2           test dl, dl
0x00002b30      750b           jne 0x2b3d
0x00002b32      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00002b36      48891d435520.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x208080:8]=0
0x00002b3d      48891ddc5520.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x208120:8]=0
0x00002b44      48891d555520.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x2080a0:8]=0
0x00002b4b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x00002b4c      c3             ret
0x00002b4d      488b0d8c5520.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080e0:8]=0
0x00002b54      488d3d9d3000.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x5bf8 ; "A NULL argv[0] was passed through an exec system call.\n"
0x00002b5b      ba37000000     mov edx, 0x37                           ; '7'
0x00002b60      be01000000     mov esi, 1
0x00002b65      e826ebffff     call sym.imp.fwrite
0x00002b6a      e891e8ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x00002b6f      90             nop
;-- gettext_quote.part.1:
0x00002b70      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00002b71      53             push rbx
0x00002b72      4889fd         mov rbp, rdi
0x00002b75      89f3           mov ebx, esi
0x00002b77      4883ec08       sub rsp, 8
0x00002b7b      e8e02b0000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00002b80      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00002b83      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002b86      80fa55         cmp dl, 0x55
0x00002b89      7475           je 0x2c00
0x00002b8b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x00002b8e      7420           je 0x2bb0
0x00002b90      488d05b43000.  lea rax, str.l______l                   ; 0x5c4b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00002b97      488d15af3000.  lea rdx, [0x00005c4d]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00002b9e      83fb09         cmp ebx, 9
0x00002ba1      480f45c2       cmovne rax, rdx
0x00002ba5      4883c408       add rsp, 8
0x00002ba9      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x00002baa      5d             pop rbp
0x00002bab      c3             ret
0x00002bac      0f1f4000       nop dword [rax]
0x00002bb0      0fb65001       movzx edx, byte [rax + 1]
0x00002bb4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002bb7      80fa42         cmp dl, 0x42
0x00002bba      75d4           jne 0x2b90
0x00002bbc      80780231       cmp byte [rax + 2], 0x31
0x00002bc0      75ce           jne 0x2b90
0x00002bc2      80780338       cmp byte [rax + 3], 0x38
0x00002bc6      75c8           jne 0x2b90
0x00002bc8      80780430       cmp byte [rax + 4], 0x30
0x00002bcc      75c2           jne 0x2b90
0x00002bce      80780533       cmp byte [rax + 5], 0x33
0x00002bd2      75bc           jne 0x2b90
0x00002bd4      80780630       cmp byte [rax + 6], 0x30
0x00002bd8      75b6           jne 0x2b90
0x00002bda      80780700       cmp byte [rax + 7], 0
0x00002bde      75b0           jne 0x2b90
0x00002be0      807d0060       cmp byte [rbp], 0x60
0x00002be4      488d05593000.  lea rax, [0x00005c44]
0x00002beb      488d15563000.  lea rdx, [0x00005c48]
0x00002bf2      480f45c2       cmovne rax, rdx
0x00002bf6      4883c408       add rsp, 8
0x00002bfa      5b             pop rbx
0x00002bfb      5d             pop rbp
0x00002bfc      c3             ret
0x00002bfd      0f1f00         nop dword [rax]
0x00002c00      0fb65001       movzx edx, byte [rax + 1]
0x00002c04      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002c07      80fa54         cmp dl, 0x54
0x00002c0a      7584           jne 0x2b90
0x00002c0c      0fb65002       movzx edx, byte [rax + 2]
0x00002c10      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002c13      80fa46         cmp dl, 0x46
0x00002c16      0f8574ffffff   jne 0x2b90
0x00002c1c      8078032d       cmp byte [rax + 3], 0x2d
0x00002c20      0f856affffff   jne 0x2b90
0x00002c26      80780438       cmp byte [rax + 4], 0x38
0x00002c2a      0f8560ffffff   jne 0x2b90
0x00002c30      80780500       cmp byte [rax + 5], 0
0x00002c34      0f8556ffffff   jne 0x2b90
0x00002c3a      807d0060       cmp byte [rbp], 0x60
0x00002c3e      488d05f72f00.  lea rax, [0x00005c3c]                   ; "\u2018"
0x00002c45      488d15f42f00.  lea rdx, [0x00005c40]                   ; "\u2019"
0x00002c4c      480f45c2       cmovne rax, rdx
0x00002c50      4883c408       add rsp, 8
0x00002c54      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00002c55      5d             pop rbp
0x00002c56      c3             ret
0x00002c57      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00002c60      4157           push r15
0x00002c62      4156           push r14
0x00002c64      4589c7         mov r15d, r8d
0x00002c67      4155           push r13
0x00002c69      4154           push r12
0x00002c6b      4989fe         mov r14, rdi
0x00002c6e      55             push rbp
0x00002c6f      53             push rbx
0x00002c70      4489cb         mov ebx, r9d
0x00002c73      4989f5         mov r13, rsi
0x00002c76      4889cd         mov rbp, rcx
0x00002c79      83e302         and ebx, 2
0x00002c7c      4881ecb80000.  sub rsp, 0xb8
0x00002c83      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x00002c8b      4889542410     mov qword [rsp + 0x10], rdx
0x00002c90      4489442408     mov dword [rsp + 8], r8d
0x00002c95      44894c2478     mov dword [rsp + 0x78], r9d
0x00002c9a      4889442420     mov qword [rsp + 0x20], rax
0x00002c9f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00002ca7      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x00002cac      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00002cb4      4889442460     mov qword [rsp + 0x60], rax
0x00002cb9      64488b042528.  mov rax, qword fs:[0x28]
0x00002cc2      48898424a800.  mov qword [rsp + 0xa8], rax
0x00002cca      31c0           xor eax, eax
0x00002ccc      e8cfe7ffff     call sym.imp.__ctype_get_mb_cur_max
0x00002cd1      4183ff0a       cmp r15d, 0xa
0x00002cd5      4889442458     mov qword [rsp + 0x58], rax
0x00002cda      0f87af110000   ja 0x3e8f
0x00002ce0      488d0db92f00.  lea rcx, [0x00005ca0]
0x00002ce7      4489fa         mov edx, r15d
0x00002cea      48630491       movsxd rax, dword [rcx + rdx*4]
0x00002cee      4801c8         add rax, rcx
0x00002cf1      ffe0           jmp rax
0x00002cf3      c644240e01     mov byte [rsp + 0xe], 1
0x00002cf8      c644247c00     mov byte [rsp + 0x7c], 0
0x00002cfd      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00002d00      48c744245000.  mov qword [rsp + 0x50], 0
0x00002d09      c644240f01     mov byte [rsp + 0xf], 1
0x00002d0e      c644240d00     mov byte [rsp + 0xd], 0
0x00002d13      488d05332f00.  lea rax, [0x00005c4d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00002d1a      48c744241801.  mov qword [rsp + 0x18], 1
0x00002d23      4531ff         xor r15d, r15d
0x00002d26      c74424080200.  mov dword [rsp + 8], 2
0x00002d2e      4889442448     mov qword [rsp + 0x48], rax
0x00002d33      4531db         xor r11d, r11d
0x00002d36      4889e8         mov rax, rbp
0x00002d39      4589e0         mov r8d, r12d
0x00002d3c      4c89dd         mov rbp, r11
0x00002d3f      4989c3         mov r11, rax
0x00002d42      660f1f440000   nop word [rax + rax]
0x00002d48      4939eb         cmp r11, rbp
0x00002d4b      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x00002d4f      4983fbff       cmp r11, 0xffffffffffffffff
0x00002d53      750d           jne 0x2d62
0x00002d55      488b442410     mov rax, qword [rsp + 0x10]
0x00002d5a      803c2800       cmp byte [rax + rbp], 0
0x00002d5e      410f95c4       setne r12b
0x00002d62      4584e4         test r12b, r12b
0x00002d65      0f8455060000   je 0x33c0
0x00002d6b      837c240802     cmp dword [rsp + 8], 2
0x00002d70      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002d75      4c8d0c2f       lea r9, [rdi + rbp]
0x00002d79      0f95c0         setne al
0x00002d7c      2244240d       and al, byte [rsp + 0xd]
0x00002d80      4189c2         mov r10d, eax
0x00002d83      0f84a7000000   je 0x2e30
0x00002d89      488b442418     mov rax, qword [rsp + 0x18]
0x00002d8e      4885c0         test rax, rax
0x00002d91      0f8429040000   je 0x31c0
0x00002d97      4983fbff       cmp r11, 0xffffffffffffffff
0x00002d9b      488d5c0500     lea rbx, [rbp + rax]
0x00002da0      752e           jne 0x2dd0
0x00002da2      4883f801       cmp rax, 1
0x00002da6      7628           jbe 0x2dd0
0x00002da8      4488442438     mov byte [rsp + 0x38], r8b
0x00002dad      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00002db2      4c894c2428     mov qword [rsp + 0x28], r9
0x00002db7      e8f4e6ffff     call sym.imp.strlen
0x00002dbc      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00002dc2      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00002dc8      4989c3         mov r11, rax
0x00002dcb      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00002dd0      4c39db         cmp rbx, r11
0x00002dd3      4488542428     mov byte [rsp + 0x28], r10b
0x00002dd8      0f87b2050000   ja 0x3390
0x00002dde      488b542418     mov rdx, qword [rsp + 0x18]
0x00002de3      488b742448     mov rsi, qword [rsp + 0x48]
0x00002de8      4c89cf         mov rdi, r9
0x00002deb      4c895c2440     mov qword [rsp + 0x40], r11
0x00002df0      4488442438     mov byte [rsp + 0x38], r8b
0x00002df5      4c894c2430     mov qword [rsp + 0x30], r9
0x00002dfa      e871e7ffff     call sym.imp.memcmp
0x00002dff      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00002e01      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00002e06      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00002e0c      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00002e11      0f8579050000   jne 0x3390
0x00002e17      807c240f00     cmp byte [rsp + 0xf], 0
0x00002e1c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00002e22      0f857d0f0000   jne 0x3da5
0x00002e28      0f1f84000000.  nop dword [rax + rax]
0x00002e30      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00002e34      80fb7e         cmp bl, 0x7e
0x00002e37      0f871b030000   ja 0x3158
0x00002e3d      488d0d882e00.  lea rcx, [0x00005ccc]
0x00002e44      0fb6d3         movzx edx, bl
0x00002e47      48630491       movsxd rax, dword [rcx + rdx*4]
0x00002e4b      4801c8         add rax, rcx
0x00002e4e      ffe0           jmp rax
0x00002e50      4531d2         xor r10d, r10d
0x00002e53      4983fb01       cmp r11, 1
0x00002e57      0f95c0         setne al
0x00002e5a      4983fbff       cmp r11, 0xffffffffffffffff
0x00002e5e      750c           jne 0x2e6c
0x00002e60      488b442410     mov rax, qword [rsp + 0x10]
0x00002e65      80780100       cmp byte [rax + 1], 0
0x00002e69      0f95c0         setne al
0x00002e6c      837c240802     cmp dword [rsp + 8], 2
0x00002e71      0f94c2         sete dl
0x00002e74      84c0           test al, al
0x00002e76      0f844c020000   je 0x30c8
0x00002e7c      4531e4         xor r12d, r12d
0x00002e7f      31c0           xor eax, eax
0x00002e81      0f1f80000000.  nop dword [rax]
0x00002e88      807c240d01     cmp byte [rsp + 0xd], 1
0x00002e8d      0f850f010000   jne 0x2fa2
0x00002e93      84d2           test dl, dl
0x00002e95      0f8507010000   jne 0x2fa2
0x00002e9b      488b742420     mov rsi, qword [rsp + 0x20]
0x00002ea0      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00002ea3      7414           je 0x2eb9
0x00002ea5      89da           mov edx, ebx
0x00002ea7      c0ea05         shr dl, 5
0x00002eaa      0fb6d2         movzx edx, dl
0x00002ead      8b1496         mov edx, dword [rsi + rdx*4]
0x00002eb0      0fa3da         bt edx, ebx
0x00002eb3      0f824a010000   jb 0x3003
0x00002eb9      4584d2         test r10b, r10b
0x00002ebc      0f8541010000   jne 0x3003
0x00002ec2      83f001         xor eax, 1
0x00002ec5      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00002ec9      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x00002ecc      84c0           test al, al
0x00002ece      7420           je 0x2ef0                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00002ed0      4d39fd         cmp r13, r15
0x00002ed3      7605           jbe 0x2eda
0x00002ed5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00002eda      498d4701       lea rax, [r15 + 1]
0x00002ede      4939c5         cmp r13, rax
0x00002ee1      7606           jbe 0x2ee9
0x00002ee3      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00002ee9      4983c702       add r15, 2
0x00002eed      4531c0         xor r8d, r8d
0x00002ef0      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00002ef3      7304           jae 0x2ef9                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00002ef5      43881c3e       mov byte [r14 + r15], bl
0x00002ef9      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x00002efe      4983c701       add r15, 1
0x00002f02      b800000000     mov eax, 0
0x00002f07      4584e4         test r12b, r12b
0x00002f0a      0f44f8         cmove edi, eax
0x00002f0d      40887c240e     mov byte [rsp + 0xe], dil
0x00002f12      e931feffff     jmp 0x2d48
0x00002f17      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00002f20      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00002f23      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00002f27      83f802         cmp eax, 2
0x00002f2a      0f84b8050000   je 0x34e8
0x00002f30      83f805         cmp eax, 5
0x00002f33      0f846f050000   je 0x34a8
0x00002f39      83f802         cmp eax, 2
0x00002f3c      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00002f41      0f94c2         sete dl
0x00002f44      4531e4         xor r12d, r12d
0x00002f47      31c0           xor eax, eax
0x00002f49      e93affffff     jmp 0x2e88
0x00002f4e      6690           nop
0x00002f50      4531d2         xor r10d, r10d
0x00002f53      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00002f58      0f8402050000   je 0x3460
0x00002f5e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00002f63      31d2           xor edx, edx
0x00002f65      31c0           xor eax, eax
0x00002f67      bb27000000     mov ebx, 0x27                           ; '''
0x00002f6c      e917ffffff     jmp 0x2e88
0x00002f71      0f1f80000000.  nop dword [rax]
0x00002f78      ba09000000     mov edx, 9
0x00002f7d      bb74000000     mov ebx, 0x74                           ; 't'
0x00002f82      837c240802     cmp dword [rsp + 8], 2
0x00002f87      0f94c0         sete al
0x00002f8a      2244240f       and al, byte [rsp + 0xf]
0x00002f8e      0f854a010000   jne 0x30de
0x00002f94      807c240d00     cmp byte [rsp + 0xd], 0
0x00002f99      7565           jne 0x3000
0x00002f9b      89d3           mov ebx, edx
0x00002f9d      4531e4         xor r12d, r12d
0x00002fa0      31c0           xor eax, eax
0x00002fa2      807c240f00     cmp byte [rsp + 0xf], 0
0x00002fa7      0f85eefeffff   jne 0x2e9b
0x00002fad      e907ffffff     jmp 0x2eb9                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00002fb2      660f1f440000   nop word [rax + rax]
0x00002fb8      ba08000000     mov edx, 8
0x00002fbd      bb62000000     mov ebx, 0x62                           ; 'b'
0x00002fc2      ebd0           jmp 0x2f94
0x00002fc4      0f1f4000       nop dword [rax]
0x00002fc8      837c240802     cmp dword [rsp + 8], 2
0x00002fcd      0f84cd030000   je 0x33a0
0x00002fd3      807c240d00     cmp byte [rsp + 0xd], 0
0x00002fd8      0f8412020000   je 0x31f0
0x00002fde      807c240f00     cmp byte [rsp + 0xf], 0
0x00002fe3      0f8407020000   je 0x31f0
0x00002fe9      48837c241800   cmp qword [rsp + 0x18], 0
0x00002fef      0f85b6030000   jne 0x33ab
0x00002ff5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00002ffa      660f1f440000   nop word [rax + rax]
0x00003000      4531e4         xor r12d, r12d
0x00003003      837c240802     cmp dword [rsp + 8], 2
0x00003008      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x0000300b      807c240f00     cmp byte [rsp + 0xf], 0
0x00003010      89d0           mov eax, edx
0x00003012      0f8550080000   jne 0x3868
0x00003018      4489c0         mov eax, r8d
0x0000301b      83f001         xor eax, 1
0x0000301e      20d0           and al, dl
0x00003020      742f           je 0x3051
0x00003022      4d39fd         cmp r13, r15
0x00003025      7605           jbe 0x302c
0x00003027      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000302c      498d5701       lea rdx, [r15 + 1]
0x00003030      4939d5         cmp r13, rdx
0x00003033      7606           jbe 0x303b
0x00003035      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000303b      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x0000303f      4939d5         cmp r13, rdx
0x00003042      7606           jbe 0x304a
0x00003044      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000304a      4983c703       add r15, 3
0x0000304e      4189c0         mov r8d, eax
0x00003051      4d39fd         cmp r13, r15
0x00003054      7605           jbe 0x305b
0x00003056      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000305b      4983c701       add r15, 1
0x0000305f      4883c501       add rbp, 1
0x00003063      e988feffff     jmp 0x2ef0
0x00003068      0f1f84000000.  nop dword [rax + rax]
0x00003070      807c240d00     cmp byte [rsp + 0xd], 0
0x00003075      0f85c8010000   jne 0x3243
0x0000307b      31d2           xor edx, edx
0x0000307d      f644247801     test byte [rsp + 0x78], 1
0x00003082      0f8413ffffff   je 0x2f9b
0x00003088      4883c501       add rbp, 1
0x0000308c      e9b7fcffff     jmp 0x2d48
0x00003091      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00003098      837c240802     cmp dword [rsp + 8], 2
0x0000309d      0f94c2         sete dl
0x000030a0      31c0           xor eax, eax
0x000030a2      e9e1fdffff     jmp 0x2e88
0x000030a7      660f1f840000.  nop word [rax + rax]
0x000030b0      ba07000000     mov edx, 7
0x000030b5      bb61000000     mov ebx, 0x61                           ; 'a'
0x000030ba      e9d5feffff     jmp 0x2f94
0x000030bf      90             nop
0x000030c0      837c240802     cmp dword [rsp + 8], 2
0x000030c5      0f94c2         sete dl
0x000030c8      4885ed         test rbp, rbp
0x000030cb      0f85abfdffff   jne 0x2e7c
0x000030d1      0fb644240f     movzx eax, byte [rsp + 0xf]
0x000030d6      20d0           and al, dl
0x000030d8      0f84aafdffff   je 0x2e88
0x000030de      4c89dd         mov rbp, r11
0x000030e1      c74424080200.  mov dword [rsp + 8], 2
0x000030e9      e9fb060000     jmp 0x37e9
0x000030ee      6690           nop
0x000030f0      837c240802     cmp dword [rsp + 8], 2
0x000030f5      0f94c2         sete dl
0x000030f8      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x000030fb      ebd4           jmp 0x30d1
0x000030fd      0f1f00         nop dword [rax]
0x00003100      837c240802     cmp dword [rsp + 8], 2
0x00003105      bb20000000     mov ebx, 0x20                           ; "@"
0x0000310a      0f94c2         sete dl
0x0000310d      ebc2           jmp 0x30d1
0x0000310f      90             nop
0x00003110      ba0d000000     mov edx, 0xd
0x00003115      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000311a      e963feffff     jmp 0x2f82
0x0000311f      90             nop
0x00003120      ba0c000000     mov edx, 0xc
0x00003125      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000312a      e965feffff     jmp 0x2f94
0x0000312f      90             nop
0x00003130      ba0b000000     mov edx, 0xb
0x00003135      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000313a      e955feffff     jmp 0x2f94
0x0000313f      90             nop
0x00003140      ba0a000000     mov edx, 0xa
0x00003145      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x0000314a      e933feffff     jmp 0x2f82
0x0000314f      90             nop
0x00003150      4531d2         xor r10d, r10d
0x00003153      0f1f440000     nop dword [rax + rax]
0x00003158      48837c245801   cmp qword [rsp + 0x58], 1
0x0000315e      0f85a4030000   jne 0x3508
0x00003164      4c895c2438     mov qword [rsp + 0x38], r11
0x00003169      4488442430     mov byte [rsp + 0x30], r8b
0x0000316e      4488542428     mov byte [rsp + 0x28], r10b
0x00003173      e858e5ffff     call sym.imp.__ctype_b_loc
0x00003178      488b08         mov rcx, qword [rax]
0x0000317b      0fb6d3         movzx edx, bl
0x0000317e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003184      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x0000318a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0000318f      bf01000000     mov edi, 1
0x00003194      0fb70451       movzx eax, word [rcx + rdx*2]
0x00003198      66250040       and ax, 0x4000                          ; " \x8bD$\x18A\x89E"
0x0000319c      410f95c4       setne r12b
0x000031a0      0f94c0         sete al
0x000031a3      2244240d       and al, byte [rsp + 0xd]
0x000031a7      84c0           test al, al
0x000031a9      0f8592090000   jne 0x3b41
0x000031af      837c240802     cmp dword [rsp + 8], 2
0x000031b4      0f94c2         sete dl
0x000031b7      e9ccfcffff     jmp 0x2e88
0x000031bc      0f1f4000       nop dword [rax]
0x000031c0      410fb619       movzx ebx, byte [r9]
0x000031c4      80fb7e         cmp bl, 0x7e
0x000031c7      7787           ja 0x3150
0x000031c9      488d0df82c00.  lea rcx, [0x00005ec8]
0x000031d0      0fb6d3         movzx edx, bl
0x000031d3      48630491       movsxd rax, dword [rcx + rdx*4]
0x000031d7      4801c8         add rax, rcx
0x000031da      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x000031dc      0f1f4000       nop dword [rax]
0x000031e0      4531d2         xor r10d, r10d
0x000031e3      807c240d00     cmp byte [rsp + 0xd], 0
0x000031e8      0f85f0fdffff   jne 0x2fde
0x000031ee      6690           nop
0x000031f0      ba5c000000     mov edx, 0x5c                           ; '\'
0x000031f5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000031fa      e995fdffff     jmp 0x2f94
0x000031ff      90             nop
0x00003200      ba0c000000     mov edx, 0xc
0x00003205      4531d2         xor r10d, r10d
0x00003208      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000320d      e982fdffff     jmp 0x2f94
0x00003212      660f1f440000   nop word [rax + rax]
0x00003218      ba0a000000     mov edx, 0xa
0x0000321d      4531d2         xor r10d, r10d
0x00003220      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00003225      e958fdffff     jmp 0x2f82
0x0000322a      660f1f440000   nop word [rax + rax]
0x00003230      bb61000000     mov ebx, 0x61                           ; 'a'
0x00003235      e9c6fdffff     jmp 0x3000
0x0000323a      660f1f440000   nop word [rax + rax]
0x00003240      4531d2         xor r10d, r10d
0x00003243      837c240802     cmp dword [rsp + 8], 2
0x00003248      0f94c2         sete dl
0x0000324b      807c240f00     cmp byte [rsp + 0xf], 0
0x00003250      0f85940b0000   jne 0x3dea
0x00003256      4489c0         mov eax, r8d
0x00003259      4c89f9         mov rcx, r15
0x0000325c      83f001         xor eax, 1
0x0000325f      20d0           and al, dl
0x00003261      742d           je 0x3290
0x00003263      4d39fd         cmp r13, r15
0x00003266      7605           jbe 0x326d
0x00003268      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000326d      498d4f01       lea rcx, [r15 + 1]
0x00003271      4939cd         cmp r13, rcx
0x00003274      7606           jbe 0x327c
0x00003276      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000327c      498d4f02       lea rcx, [r15 + 2]
0x00003280      4939cd         cmp r13, rcx
0x00003283      0f8730060000   ja 0x38b9
0x00003289      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x0000328d      4189c0         mov r8d, eax
0x00003290      4939cd         cmp r13, rcx
0x00003293      7605           jbe 0x329a
0x00003295      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000329a      837c240802     cmp dword [rsp + 8], 2
0x0000329f      4c8d7901       lea r15, [rcx + 1]
0x000032a3      0f8400060000   je 0x38a9
0x000032a9      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x000032ad      4c39d8         cmp rax, r11
0x000032b0      7319           jae 0x32cb                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x000032b2      488b442410     mov rax, qword [rsp + 0x10]
0x000032b7      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x000032bc      88442428       mov byte [rsp + 0x28], al
0x000032c0      83e830         sub eax, 0x30
0x000032c3      3c09           cmp al, 9
0x000032c5      0f862e080000   jbe 0x3af9
0x000032cb      4489e0         mov eax, r12d
0x000032ce      bb30000000     mov ebx, 0x30                           ; '0'
0x000032d3      4531e4         xor r12d, r12d
0x000032d6      e9adfbffff     jmp 0x2e88                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x000032db      0f1f440000     nop dword [rax + rax]
0x000032e0      837c240802     cmp dword [rsp + 8], 2
0x000032e5      4589d4         mov r12d, r10d
0x000032e8      0f94c2         sete dl
0x000032eb      4531d2         xor r10d, r10d
0x000032ee      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x000032f0      e993fbffff     jmp 0x2e88                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x000032f5      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x000032f8      837c240802     cmp dword [rsp + 8], 2
0x000032fd      0f94c2         sete dl
0x00003300      4531d2         xor r10d, r10d
0x00003303      e9c0fdffff     jmp 0x30c8
0x00003308      0f1f84000000.  nop dword [rax + rax]
0x00003310      837c240802     cmp dword [rsp + 8], 2
0x00003315      0f94c2         sete dl
0x00003318      4531d2         xor r10d, r10d
0x0000331b      4531e4         xor r12d, r12d
0x0000331e      e9aefdffff     jmp 0x30d1
0x00003323      0f1f440000     nop dword [rax + rax]
0x00003328      837c240802     cmp dword [rsp + 8], 2
0x0000332d      4589d4         mov r12d, r10d
0x00003330      bb20000000     mov ebx, 0x20                           ; "@"
0x00003335      0f94c2         sete dl
0x00003338      4531d2         xor r10d, r10d
0x0000333b      e991fdffff     jmp 0x30d1
0x00003340      ba0d000000     mov edx, 0xd
0x00003345      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00003348      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000334d      e930fcffff     jmp 0x2f82
0x00003352      660f1f440000   nop word [rax + rax]
0x00003358      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000335d      e99efcffff     jmp 0x3000
0x00003362      660f1f440000   nop word [rax + rax]
0x00003368      ba09000000     mov edx, 9
0x0000336d      4531d2         xor r10d, r10d
0x00003370      bb74000000     mov ebx, 0x74                           ; 't'
0x00003375      e908fcffff     jmp 0x2f82
0x0000337a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00003380      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003385      e976fcffff     jmp 0x3000
0x0000338a      660f1f440000   nop word [rax + rax]
0x00003390      4531d2         xor r10d, r10d
0x00003393      e998faffff     jmp 0x2e30
0x00003398      0f1f84000000.  nop dword [rax + rax]
0x000033a0      807c240f00     cmp byte [rsp + 0xf], 0
0x000033a5      0f8565090000   jne 0x3d10
0x000033ab      4883c501       add rbp, 1
0x000033af      4489c0         mov eax, r8d
0x000033b2      4531e4         xor r12d, r12d
0x000033b5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000033ba      e90dfbffff     jmp 0x2ecc
0x000033bf      90             nop
0x000033c0      837c240802     cmp dword [rsp + 8], 2
0x000033c5      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000033ca      4589c4         mov r12d, r8d
0x000033cd      4c89dd         mov rbp, r11
0x000033d0      0f94c2         sete dl
0x000033d3      89d8           mov eax, ebx
0x000033d5      4d85ff         test r15, r15
0x000033d8      0f94c1         sete cl
0x000033db      21d0           and eax, edx
0x000033dd      20c8           and al, cl
0x000033df      0f85610a0000   jne 0x3e46                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x000033e5      89d8           mov eax, ebx
0x000033e7      83f001         xor eax, 1
0x000033ea      20c2           and dl, al
0x000033ec      0f846a090000   je 0x3d5c
0x000033f2      807c247c00     cmp byte [rsp + 0x7c], 0
0x000033f7      0f845d090000   je 0x3d5a
0x000033fd      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00003402      0f85f5090000   jne 0x3dfd
0x00003408      4d85ed         test r13, r13
0x0000340b      0f94c0         sete al
0x0000340e      48837c245000   cmp qword [rsp + 0x50], 0
0x00003414      0f95c2         setne dl
0x00003417      20d0           and al, dl
0x00003419      0f841d0a0000   je 0x3e3c
0x0000341f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003424      488d1d222800.  lea rbx, [0x00005c4d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000342b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x0000342f      c74424080200.  mov dword [rsp + 8], 2
0x00003437      41bf01000000   mov r15d, 1
0x0000343d      48c744241801.  mov qword [rsp + 0x18], 1
0x00003446      c644240f00     mov byte [rsp + 0xf], 0
0x0000344b      48895c2448     mov qword [rsp + 0x48], rbx
0x00003450      8844247c       mov byte [rsp + 0x7c], al
0x00003454      e9daf8ffff     jmp 0x2d33
0x00003459      0f1f80000000.  nop dword [rax]
0x00003460      807c240f00     cmp byte [rsp + 0xf], 0
0x00003465      0f85a5080000   jne 0x3d10
0x0000346b      4d85ed         test r13, r13
0x0000346e      0f84fc030000   je 0x3870                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00003474      31d2           xor edx, edx
0x00003476      48837c245000   cmp qword [rsp + 0x50], 0
0x0000347c      0f85ee030000   jne 0x3870                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00003482      4c896c2450     mov qword [rsp + 0x50], r13
0x00003487      4983c703       add r15, 3
0x0000348b      31c0           xor eax, eax
0x0000348d      448864247c     mov byte [rsp + 0x7c], r12b
0x00003492      4531c0         xor r8d, r8d
0x00003495      4989d5         mov r13, rdx
0x00003498      bb27000000     mov ebx, 0x27                           ; '''
0x0000349d      e917faffff     jmp 0x2eb9
0x000034a2      660f1f440000   nop word [rax + rax]
0x000034a8      f644247804     test byte [rsp + 0x78], 4
0x000034ad      7421           je 0x34d0
0x000034af      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x000034b3      4c39d9         cmp rcx, r11
0x000034b6      7318           jae 0x34d0
0x000034b8      488b442410     mov rax, qword [rsp + 0x10]
0x000034bd      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x000034c2      0f848a070000   je 0x3c52
0x000034c8      0f1f84000000.  nop dword [rax + rax]
0x000034d0      31d2           xor edx, edx
0x000034d2      4531e4         xor r12d, r12d
0x000034d5      31c0           xor eax, eax
0x000034d7      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000034dc      e9a7f9ffff     jmp 0x2e88
0x000034e1      0f1f80000000.  nop dword [rax]
0x000034e8      807c240f00     cmp byte [rsp + 0xf], 0
0x000034ed      0f851d080000   jne 0x3d10
0x000034f3      4531e4         xor r12d, r12d
0x000034f6      31c0           xor eax, eax
0x000034f8      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000034fd      e9b7f9ffff     jmp 0x2eb9                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00003502      660f1f440000   nop word [rax + rax]
0x00003508      488d8424a000.  lea rax, [rsp + 0xa0]
0x00003510      4983fbff       cmp r11, 0xffffffffffffffff
0x00003514      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00003520      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00003525      752d           jne 0x3554
0x00003527      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000352c      4488442440     mov byte [rsp + 0x40], r8b
0x00003531      4488542438     mov byte [rsp + 0x38], r10b
0x00003536      4c894c2430     mov qword [rsp + 0x30], r9
0x0000353b      e870dfffff     call sym.imp.strlen
0x00003540      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00003546      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x0000354c      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x0000354f      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003554      488d84249c00.  lea rax, [rsp + 0x9c]
0x0000355c      31c9           xor ecx, ecx
0x0000355e      885c247e       mov byte [rsp + 0x7e], bl
0x00003562      448844247d     mov byte [rsp + 0x7d], r8b
0x00003567      4889cb         mov rbx, rcx
0x0000356a      4c898c248800.  mov qword [rsp + 0x88], r9
0x00003572      4889442438     mov qword [rsp + 0x38], rax
0x00003577      448854247f     mov byte [rsp + 0x7f], r10b
0x0000357c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00003584      4c89742440     mov qword [rsp + 0x40], r14
0x00003589      4c896c2470     mov qword [rsp + 0x70], r13
0x0000358e      4c895c2430     mov qword [rsp + 0x30], r11
0x00003593      488b442410     mov rax, qword [rsp + 0x10]
0x00003598      4c8d741d00     lea r14, [rbp + rbx]
0x0000359d      488b542430     mov rdx, qword [rsp + 0x30]
0x000035a2      488b4c2428     mov rcx, qword [rsp + 0x28]
0x000035a7      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000035ac      4e8d2c30       lea r13, [rax + r14]
0x000035b0      4c29f2         sub rdx, r14
0x000035b3      4c89ee         mov rsi, r13
0x000035b6      e835200000     call sym.rpl_mbrtowc
0x000035bb      4885c0         test rax, rax
0x000035be      4989c7         mov r15, rax
0x000035c1      744e           je 0x3611
0x000035c3      4883f8ff       cmp rax, 0xffffffffffffffff
0x000035c7      0f8418060000   je 0x3be5
0x000035cd      4883f8fe       cmp rax, 0xfffffffffffffffe
0x000035d1      0f849a050000   je 0x3b71
0x000035d7      837c240802     cmp dword [rsp + 8], 2
0x000035dc      0f94c0         sete al
0x000035df      2244240f       and al, byte [rsp + 0xf]
0x000035e3      0f8597010000   jne 0x3780
0x000035e9      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x000035f0      e8cbe0ffff     call sym.imp.iswprint
0x000035f5      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000035fa      85c0           test eax, eax
0x000035fc      b800000000     mov eax, 0
0x00003601      440f44e0       cmove r12d, eax
0x00003605      4c01fb         add rbx, r15
0x00003608      e8a3e0ffff     call sym.imp.mbsinit
0x0000360d      85c0           test eax, eax
0x0000360f      7482           je 0x3593
0x00003611      4489e2         mov edx, r12d
0x00003614      4889df         mov rdi, rbx
0x00003617      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000361d      83f201         xor edx, 1
0x00003620      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003625      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000362b      2254240d       and dl, byte [rsp + 0xd]
0x0000362f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003637      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000363c      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003641      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003646      4883ff01       cmp rdi, 1
0x0000364a      0f86fb050000   jbe 0x3c4b
0x00003650      4889f9         mov rcx, rdi
0x00003653      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00003655      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x0000365b      4801e9         add rcx, rbp
0x0000365e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003663      e9b6000000     jmp 0x371e
0x00003668      0f1f84000000.  nop dword [rax + rax]
0x00003670      837c240802     cmp dword [rsp + 8], 2
0x00003675      0f94c0         sete al
0x00003678      4584c9         test r9b, r9b
0x0000367b      0f85af040000   jne 0x3b30
0x00003681      4489c6         mov esi, r8d
0x00003684      83f601         xor esi, 1
0x00003687      4020f0         and al, sil
0x0000368a      742f           je 0x36bb                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x0000368c      4d39fd         cmp r13, r15
0x0000368f      7605           jbe 0x3696
0x00003691      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003696      498d7701       lea rsi, [r15 + 1]
0x0000369a      4939f5         cmp r13, rsi
0x0000369d      7606           jbe 0x36a5                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x0000369f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000036a5      498d7702       lea rsi, [r15 + 2]
0x000036a9      4939f5         cmp r13, rsi
0x000036ac      7606           jbe 0x36b4
0x000036ae      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000036b4      4983c703       add r15, 3
0x000036b8      4189c0         mov r8d, eax
0x000036bb      4d39fd         cmp r13, r15
0x000036be      7605           jbe 0x36c5
0x000036c0      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000036c5      498d4701       lea rax, [r15 + 1]
0x000036c9      4939c5         cmp r13, rax
0x000036cc      760d           jbe 0x36db
0x000036ce      89d8           mov eax, ebx
0x000036d0      c0e806         shr al, 6
0x000036d3      83c030         add eax, 0x30
0x000036d6      4388443e01     mov byte [r14 + r15 + 1], al
0x000036db      498d4702       lea rax, [r15 + 2]
0x000036df      4939c5         cmp r13, rax
0x000036e2      7610           jbe 0x36f4
0x000036e4      89d8           mov eax, ebx
0x000036e6      c0e803         shr al, 3
0x000036e9      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x000036ec      83c030         add eax, 0x30
0x000036ef      4388443e02     mov byte [r14 + r15 + 2], al
0x000036f4      83e307         and ebx, 7
0x000036f7      4883c501       add rbp, 1
0x000036fb      4983c703       add r15, 3
0x000036ff      83c330         add ebx, 0x30
0x00003702      4839cd         cmp rbp, rcx
0x00003705      0f83e5f7ffff   jae 0x2ef0
0x0000370b      89d6           mov esi, edx
0x0000370d      4d39fd         cmp r13, r15
0x00003710      7604           jbe 0x3716
0x00003712      43881c3e       mov byte [r14 + r15], bl
0x00003716      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000371a      4983c701       add r15, 1
0x0000371e      84d2           test dl, dl
0x00003720      0f854affffff   jne 0x3670
0x00003726      89f0           mov eax, esi
0x00003728      83f001         xor eax, 1
0x0000372b      4421c0         and eax, r8d
0x0000372e      4584d2         test r10b, r10b
0x00003731      740e           je 0x3741
0x00003733      4d39fd         cmp r13, r15
0x00003736      7605           jbe 0x373d
0x00003738      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000373d      4983c701       add r15, 1
0x00003741      4883c501       add rbp, 1
0x00003745      4839cd         cmp rbp, rcx
0x00003748      0f837ef7ffff   jae 0x2ecc
0x0000374e      84c0           test al, al
0x00003750      0f84f8030000   je 0x3b4e
0x00003756      4d39fd         cmp r13, r15
0x00003759      7605           jbe 0x3760
0x0000375b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003760      498d4701       lea rax, [r15 + 1]
0x00003764      4939c5         cmp r13, rax
0x00003767      7606           jbe 0x376f
0x00003769      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000376f      4983c702       add r15, 2
0x00003773      4531d2         xor r10d, r10d
0x00003776      4531c0         xor r8d, r8d
0x00003779      eb92           jmp 0x370d
0x0000377b      0f1f440000     nop dword [rax + rax]
0x00003780      4983ff01       cmp r15, 1
0x00003784      0f845ffeffff   je 0x35e9
0x0000378a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000378f      4a8d0c3f       lea rcx, [rdi + r15]
0x00003793      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00003798      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000379c      eb0f           jmp 0x37ad
0x0000379e      6690           nop
0x000037a0      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x000037a4      4939d0         cmp r8, rdx
0x000037a7      0f843cfeffff   je 0x35e9
0x000037ad      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x000037b0      83e95b         sub ecx, 0x5b
0x000037b3      80f921         cmp cl, 0x21
0x000037b6      77e8           ja 0x37a0                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x000037b8      be01000000     mov esi, 1
0x000037bd      48d3e6         shl rsi, cl
0x000037c0      4889f1         mov rcx, rsi
0x000037c3      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x000037cd      4885f1         test rcx, rsi
0x000037d0      74ce           je 0x37a0
0x000037d2      4c8b742440     mov r14, qword [rsp + 0x40]
0x000037d7      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000037dc      488b6c2430     mov rbp, qword [rsp + 0x30]
0x000037e1      c74424080200.  mov dword [rsp + 8], 2
0x000037e9      807c240d00     cmp byte [rsp + 0xd], 0
0x000037ee      7410           je 0x3800
0x000037f0      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x000037f2      b804000000     mov eax, 4
0x000037f7      0f44442408     cmove eax, dword [rsp + 8]
0x000037fc      89442408       mov dword [rsp + 8], eax
0x00003800      4883ec08       sub rsp, 8
0x00003804      4889e9         mov rcx, rbp
0x00003807      4c89ee         mov rsi, r13
0x0000380a      ff742468       push qword [rsp + 0x68]
0x0000380e      ff742478       push qword [rsp + 0x78]
0x00003812      4c89f7         mov rdi, r14
0x00003815      6a00           push 0
0x00003817      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x0000381f      448b442428     mov r8d, dword [rsp + 0x28]
0x00003824      488b542430     mov rdx, qword [rsp + 0x30]
0x00003829      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x0000382d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00003832      4883c420       add rsp, 0x20
0x00003836      4989c7         mov r15, rax
0x00003839      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00003841      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000384a      4c89f8         mov rax, r15
0x0000384d      0f8500060000   jne 0x3e53
0x00003853      4881c4b80000.  add rsp, 0xb8
0x0000385a      5b             pop rbx
0x0000385b      5d             pop rbp
0x0000385c      415c           pop r12
0x0000385e      415d           pop r13
0x00003860      415e           pop r14
0x00003862      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00003864      c3             ret
0x00003865      0f1f00         nop dword [rax]
0x00003868      4c89dd         mov rbp, r11
0x0000386b      e979ffffff     jmp 0x37e9
0x00003870      4d39fd         cmp r13, r15
0x00003873      7605           jbe 0x387a
0x00003875      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000387a      498d4701       lea rax, [r15 + 1]
0x0000387e      4939c5         cmp r13, rax
0x00003881      7606           jbe 0x3889
0x00003883      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00003889      498d4702       lea rax, [r15 + 2]
0x0000388d      4939c5         cmp r13, rax
0x00003890      0f86ec050000   jbe 0x3e82
0x00003896      4c89ea         mov rdx, r13
0x00003899      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000389f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000038a4      e9d9fbffff     jmp 0x3482
0x000038a9      4489e0         mov eax, r12d
0x000038ac      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x000038b1      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x000038b4      e900f6ffff     jmp 0x2eb9                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x000038b9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000038bf      e9c5f9ffff     jmp 0x3289
0x000038c4      85db           test ebx, ebx
0x000038c6      0f8527f4ffff   jne 0x2cf3
0x000038cc      c644240d01     mov byte [rsp + 0xd], 1
0x000038d1      4d85ed         test r13, r13
0x000038d4      0f8590050000   jne 0x3e6a
0x000038da      488d056c2300.  lea rax, [0x00005c4d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000038e1      48c744245000.  mov qword [rsp + 0x50], 0
0x000038ea      c644240e01     mov byte [rsp + 0xe], 1
0x000038ef      c644247c00     mov byte [rsp + 0x7c], 0
0x000038f4      4531e4         xor r12d, r12d
0x000038f7      c644240f00     mov byte [rsp + 0xf], 0
0x000038fc      48c744241801.  mov qword [rsp + 0x18], 1
0x00003905      4889442448     mov qword [rsp + 0x48], rax
0x0000390a      41bf01000000   mov r15d, 1
0x00003910      c74424080200.  mov dword [rsp + 8], 2
0x00003918      e916f4ffff     jmp 0x2d33                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x0000391d      0f1f00         nop dword [rax]
0x00003920      85db           test ebx, ebx
0x00003922      0f85f5030000   jne 0x3d1d
0x00003928      4d85ed         test r13, r13
0x0000392b      0f8425020000   je 0x3b56
0x00003931      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00003935      c644240e01     mov byte [rsp + 0xe], 1
0x0000393a      4531e4         xor r12d, r12d
0x0000393d      c644247c00     mov byte [rsp + 0x7c], 0
0x00003942      48c744245000.  mov qword [rsp + 0x50], 0
0x0000394b      488d05f92200.  lea rax, str.l______l                   ; 0x5c4b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003952      c644240f00     mov byte [rsp + 0xf], 0
0x00003957      c644240d01     mov byte [rsp + 0xd], 1
0x0000395c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003965      41bf01000000   mov r15d, 1
0x0000396b      4889442448     mov qword [rsp + 0x48], rax
0x00003970      e9bef3ffff     jmp 0x2d33
0x00003975      488d05cf2200.  lea rax, str.l______l                   ; 0x5c4b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000397c      c644240e01     mov byte [rsp + 0xe], 1
0x00003981      c644247c00     mov byte [rsp + 0x7c], 0
0x00003986      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00003989      48c744245000.  mov qword [rsp + 0x50], 0
0x00003992      c644240f01     mov byte [rsp + 0xf], 1
0x00003997      c644240d01     mov byte [rsp + 0xd], 1
0x0000399c      48c744241801.  mov qword [rsp + 0x18], 1
0x000039a5      4531ff         xor r15d, r15d
0x000039a8      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x000039ad      c74424080500.  mov dword [rsp + 8], 5
0x000039b5      e979f3ffff     jmp 0x2d33
0x000039ba      c644240e01     mov byte [rsp + 0xe], 1
0x000039bf      c644247c00     mov byte [rsp + 0x7c], 0
0x000039c4      4531e4         xor r12d, r12d
0x000039c7      48c744245000.  mov qword [rsp + 0x50], 0
0x000039d0      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x000039d5      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x000039d8      c644240d01     mov byte [rsp + 0xd], 1
0x000039dd      48c744241800.  mov qword [rsp + 0x18], 0
0x000039e6      48c744244800.  mov qword [rsp + 0x48], 0
0x000039ef      e93ff3ffff     jmp 0x2d33
0x000039f4      837c24080a     cmp dword [rsp + 8], 0xa
0x000039f9      7456           je 0x3a51
0x000039fb      488d354d2200.  lea rsi, [0x00005c4f]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00003a02      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00003a04      ba05000000     mov edx, 5
0x00003a09      e882daffff     call sym.imp.dcgettext
0x00003a0e      4889c1         mov rcx, rax
0x00003a11      4889442468     mov qword [rsp + 0x68], rax
0x00003a16      488d05322200.  lea rax, [0x00005c4f]                   ; "`"
0x00003a1d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00003a20      0f8498030000   je 0x3dbe
0x00003a26      488d35202200.  lea rsi, [0x00005c4d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003a2d      31ff           xor edi, edi
0x00003a2f      ba05000000     mov edx, 5
0x00003a34      e857daffff     call sym.imp.dcgettext
0x00003a39      4889c1         mov rcx, rax
0x00003a3c      4889442460     mov qword [rsp + 0x60], rax
0x00003a41      488d05052200.  lea rax, [0x00005c4d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003a48      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x00003a4b      0f8483030000   je 0x3dd4
0x00003a51      4531ff         xor r15d, r15d
0x00003a54      85db           test ebx, ebx
0x00003a56      0f84c1010000   je 0x3c1d
0x00003a5c      85db           test ebx, ebx
0x00003a5e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00003a63      0f9544240f     setne byte [rsp + 0xf]
0x00003a68      4531e4         xor r12d, r12d
0x00003a6b      4889df         mov rdi, rbx
0x00003a6e      e83ddaffff     call sym.imp.strlen
0x00003a73      48895c2448     mov qword [rsp + 0x48], rbx
0x00003a78      4889442418     mov qword [rsp + 0x18], rax
0x00003a7d      c644240e01     mov byte [rsp + 0xe], 1
0x00003a82      c644247c00     mov byte [rsp + 0x7c], 0
0x00003a87      48c744245000.  mov qword [rsp + 0x50], 0
0x00003a90      c644240d01     mov byte [rsp + 0xd], 1
0x00003a95      e999f2ffff     jmp 0x2d33
0x00003a9a      c644240e01     mov byte [rsp + 0xe], 1
0x00003a9f      c644247c00     mov byte [rsp + 0x7c], 0
0x00003aa4      4531e4         xor r12d, r12d
0x00003aa7      48c744245000.  mov qword [rsp + 0x50], 0
0x00003ab0      c644240f00     mov byte [rsp + 0xf], 0
0x00003ab5      4531ff         xor r15d, r15d
0x00003ab8      c644240d00     mov byte [rsp + 0xd], 0
0x00003abd      48c744241800.  mov qword [rsp + 0x18], 0
0x00003ac6      48c744244800.  mov qword [rsp + 0x48], 0
0x00003acf      e95ff2ffff     jmp 0x2d33
0x00003ad4      c644240e01     mov byte [rsp + 0xe], 1
0x00003ad9      c644247c00     mov byte [rsp + 0x7c], 0
0x00003ade      4531e4         xor r12d, r12d
0x00003ae1      48c744245000.  mov qword [rsp + 0x50], 0
0x00003aea      c644240f01     mov byte [rsp + 0xf], 1
0x00003aef      c644240d01     mov byte [rsp + 0xd], 1
0x00003af4      e91af2ffff     jmp 0x2d13
0x00003af9      4d39fd         cmp r13, r15
0x00003afc      7605           jbe 0x3b03
0x00003afe      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00003b03      488d4102       lea rax, [rcx + 2]
0x00003b07      4939c5         cmp r13, rax
0x00003b0a      7606           jbe 0x3b12
0x00003b0c      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00003b12      4489e0         mov eax, r12d
0x00003b15      4c8d7903       lea r15, [rcx + 3]
0x00003b19      4531e4         xor r12d, r12d
0x00003b1c      bb30000000     mov ebx, 0x30                           ; '0'
0x00003b21      e962f3ffff     jmp 0x2e88
0x00003b26      662e0f1f8400.  nop word cs:[rax + rax]
0x00003b30      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003b35      4c89dd         mov rbp, r11
0x00003b38      885c240d       mov byte [rsp + 0xd], bl
0x00003b3c      e9a8fcffff     jmp 0x37e9
0x00003b41      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003b46      4531e4         xor r12d, r12d
0x00003b49      e902fbffff     jmp 0x3650
0x00003b4e      4531d2         xor r10d, r10d
0x00003b51      e9b7fbffff     jmp 0x370d
0x00003b56      48c744245000.  mov qword [rsp + 0x50], 0
0x00003b5f      c644240e01     mov byte [rsp + 0xe], 1
0x00003b64      4531e4         xor r12d, r12d
0x00003b67      c644247c00     mov byte [rsp + 0x7c], 0
0x00003b6c      e9dafdffff     jmp 0x394b
0x00003b71      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003b76      4c89f6         mov rsi, r14
0x00003b79      4c89e9         mov rcx, r13
0x00003b7c      4889d8         mov rax, rbx
0x00003b7f      4889df         mov rdi, rbx
0x00003b82      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003b88      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003b8d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00003b95      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00003b98      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00003b9e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003ba6      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003bab      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003bb0      7326           jae 0x3bd8
0x00003bb2      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00003bb5      7510           jne 0x3bc7
0x00003bb7      eb1f           jmp 0x3bd8
0x00003bb9      0f1f80000000.  nop dword [rax]
0x00003bc0      41803c0100     cmp byte [r9 + rax], 0
0x00003bc5      740e           je 0x3bd5
0x00003bc7      4883c001       add rax, 1
0x00003bcb      488d540500     lea rdx, [rbp + rax]
0x00003bd0      4939d3         cmp r11, rdx
0x00003bd3      77eb           ja 0x3bc0
0x00003bd5      4889c7         mov rdi, rax
0x00003bd8      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003bdd      4531e4         xor r12d, r12d
0x00003be0      e961faffff     jmp 0x3646
0x00003be5      4889df         mov rdi, rbx
0x00003be8      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003bee      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003bf3      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00003bf9      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003c01      4531e4         xor r12d, r12d
0x00003c04      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003c09      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003c0e      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003c13      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003c18      e929faffff     jmp 0x3646
0x00003c1d      488b542468     mov rdx, qword [rsp + 0x68]
0x00003c22      0fb602         movzx eax, byte [rdx]
0x00003c25      84c0           test al, al
0x00003c27      0f842ffeffff   je 0x3a5c
0x00003c2d      0f1f00         nop dword [rax]
0x00003c30      4d39fd         cmp r13, r15
0x00003c33      7604           jbe 0x3c39
0x00003c35      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00003c39      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x00003c3d      420fb6043a     movzx eax, byte [rdx + r15]
0x00003c42      84c0           test al, al
0x00003c44      75ea           jne 0x3c30
0x00003c46      e911feffff     jmp 0x3a5c
0x00003c4b      89d0           mov eax, edx
0x00003c4d      e955f5ffff     jmp 0x31a7
0x00003c52      0fb61c08       movzx ebx, byte [rax + rcx]
0x00003c56      80fb3e         cmp bl, 0x3e
0x00003c59      0f8771f8ffff   ja 0x34d0
0x00003c5f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00003c69      480fa3d8       bt rax, rbx
0x00003c6d      0f835df8ffff   jae 0x34d0
0x00003c73      807c240f00     cmp byte [rsp + 0xf], 0
0x00003c78      0f85e4010000   jne 0x3e62                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x00003c7e      4d39fd         cmp r13, r15
0x00003c81      7605           jbe 0x3c88
0x00003c83      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00003c88      498d4701       lea rax, [r15 + 1]
0x00003c8c      4939c5         cmp r13, rax
0x00003c8f      7606           jbe 0x3c97
0x00003c91      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003c97      498d4702       lea rax, [r15 + 2]
0x00003c9b      4939c5         cmp r13, rax
0x00003c9e      7606           jbe 0x3ca6
0x00003ca0      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003ca6      498d4703       lea rax, [r15 + 3]
0x00003caa      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x00003cad      7606           jbe 0x3cb5
0x00003caf      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00003cb5      4983c704       add r15, 4
0x00003cb9      31d2           xor edx, edx
0x00003cbb      4531e4         xor r12d, r12d
0x00003cbe      31c0           xor eax, eax
0x00003cc0      4889cd         mov rbp, rcx
0x00003cc3      e9c0f1ffff     jmp 0x2e88
0x00003cc8      85db           test ebx, ebx
0x00003cca      0f8488010000   je 0x3e58
0x00003cd0      488d05761f00.  lea rax, [0x00005c4d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003cd7      c644240e01     mov byte [rsp + 0xe], 1
0x00003cdc      c644247c00     mov byte [rsp + 0x7c], 0
0x00003ce1      4531e4         xor r12d, r12d
0x00003ce4      48c744245000.  mov qword [rsp + 0x50], 0
0x00003ced      c644240f01     mov byte [rsp + 0xf], 1
0x00003cf2      c644240d00     mov byte [rsp + 0xd], 0
0x00003cf7      48c744241801.  mov qword [rsp + 0x18], 1
0x00003d00      4531ff         xor r15d, r15d
0x00003d03      4889442448     mov qword [rsp + 0x48], rax
0x00003d08      e926f0ffff     jmp 0x2d33
0x00003d0d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00003d10      4c89dd         mov rbp, r11
0x00003d13      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003d18      e9ccfaffff     jmp 0x37e9
0x00003d1d      488d05271f00.  lea rax, str.l______l                   ; 0x5c4b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003d24      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00003d29      c644247c00     mov byte [rsp + 0x7c], 0
0x00003d2e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00003d31      48c744245000.  mov qword [rsp + 0x50], 0
0x00003d3a      c644240f01     mov byte [rsp + 0xf], 1
0x00003d3f      c644240d01     mov byte [rsp + 0xd], 1
0x00003d44      48c744241801.  mov qword [rsp + 0x18], 1
0x00003d4d      4531ff         xor r15d, r15d
0x00003d50      4889442448     mov qword [rsp + 0x48], rax
0x00003d55      e9d9efffff     jmp 0x2d33
0x00003d5a      89d0           mov eax, edx
0x00003d5c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00003d61      4885db         test rbx, rbx
0x00003d64      742c           je 0x3d92
0x00003d66      84c0           test al, al
0x00003d68      7428           je 0x3d92
0x00003d6a      0fb60b         movzx ecx, byte [rbx]
0x00003d6d      4889d8         mov rax, rbx
0x00003d70      84c9           test cl, cl
0x00003d72      741e           je 0x3d92
0x00003d74      4c89fa         mov rdx, r15
0x00003d77      4c29f8         sub rax, r15
0x00003d7a      4939d5         cmp r13, rdx
0x00003d7d      7604           jbe 0x3d83
0x00003d7f      41880c16       mov byte [r14 + rdx], cl
0x00003d83      4883c201       add rdx, 1
0x00003d87      0fb60c10       movzx ecx, byte [rax + rdx]
0x00003d8b      84c9           test cl, cl
0x00003d8d      75eb           jne 0x3d7a
0x00003d8f      4989d7         mov r15, rdx
0x00003d92      4d39fd         cmp r13, r15
0x00003d95      0f869efaffff   jbe 0x3839
0x00003d9b      43c6043e00     mov byte [r14 + r15], 0
0x00003da0      e994faffff     jmp 0x3839
0x00003da5      837c240802     cmp dword [rsp + 8], 2
0x00003daa      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003daf      4c89dd         mov rbp, r11
0x00003db2      0f94c0         sete al
0x00003db5      885c240d       mov byte [rsp + 0xd], bl
0x00003db9      e92bfaffff     jmp 0x37e9
0x00003dbe      8b742408       mov esi, dword [rsp + 8]
0x00003dc2      4889cf         mov rdi, rcx
0x00003dc5      e8a6edffff     call sym.gettext_quote.part.1
0x00003dca      4889442468     mov qword [rsp + 0x68], rax
0x00003dcf      e952fcffff     jmp 0x3a26
0x00003dd4      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00003dd8      4889cf         mov rdi, rcx
0x00003ddb      e890edffff     call sym.gettext_quote.part.1
0x00003de0      4889442460     mov qword [rsp + 0x60], rax
0x00003de5      e967fcffff     jmp 0x3a51
0x00003dea      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003def      4c89dd         mov rbp, r11
0x00003df2      89d0           mov eax, edx
0x00003df4      885c240d       mov byte [rsp + 0xd], bl
0x00003df8      e9ecf9ffff     jmp 0x37e9
0x00003dfd      4883ec08       sub rsp, 8
0x00003e01      41b805000000   mov r8d, 5
0x00003e07      4c89d9         mov rcx, r11
0x00003e0a      ff742468       push qword [rsp + 0x68]
0x00003e0e      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00003e12      4c89f7         mov rdi, r14
0x00003e15      ff742438       push qword [rsp + 0x38]
0x00003e19      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00003e21      488b542430     mov rdx, qword [rsp + 0x30]
0x00003e26      488b742470     mov rsi, qword [rsp + 0x70]
0x00003e2b      e830eeffff     call sym.quotearg_buffer_restyled
0x00003e30      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00003e34      4989c7         mov r15, rax
0x00003e37      e9fdf9ffff     jmp 0x3839
0x00003e3c      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00003e41      e916ffffff     jmp 0x3d5c
0x00003e46      c74424080200.  mov dword [rsp + 8], 2
0x00003e4e      e996f9ffff     jmp 0x37e9
0x00003e53      e868d6ffff     call sym.imp.__stack_chk_fail
0x00003e58      c644240d00     mov byte [rsp + 0xd], 0
0x00003e5d      e96ffaffff     jmp 0x38d1
0x00003e62      4c89dd         mov rbp, r11
0x00003e65      e996f9ffff     jmp 0x3800
0x00003e6a      c644240e01     mov byte [rsp + 0xe], 1
0x00003e6f      31c0           xor eax, eax
0x00003e71      4531e4         xor r12d, r12d
0x00003e74      48c744245000.  mov qword [rsp + 0x50], 0
0x00003e7d      e9a2f5ffff     jmp 0x3424
0x00003e82      4c89ea         mov rdx, r13
0x00003e85      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003e8a      e9f3f5ffff     jmp 0x3482
0x00003e8f      e86cd5ffff     call sym.imp.abort
0x00003e94      6690           nop
0x00003e96      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00003ea0      4157           push r15
0x00003ea2      4156           push r14
0x00003ea4      4c63ff         movsxd r15, edi
0x00003ea7      4155           push r13
0x00003ea9      4154           push r12
0x00003eab      4989d6         mov r14, rdx
0x00003eae      55             push rbp
0x00003eaf      53             push rbx
0x00003eb0      4889cd         mov rbp, rcx
0x00003eb3      4883ec28       sub rsp, 0x28
0x00003eb7      4889742408     mov qword [rsp + 8], rsi
0x00003ebc      e84fd5ffff     call sym.imp.__errno_location
0x00003ec1      4989c5         mov r13, rax
0x00003ec4      8b00           mov eax, dword [rax]
0x00003ec6      4585ff         test r15d, r15d
0x00003ec9      488b1d904120.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x208060:8]=0x208070 obj.slotvec0 ; "p\x80 "
0x00003ed0      89442418       mov dword [rsp + 0x18], eax
0x00003ed4      0f8867010000   js 0x4041
0x00003eda      44393d774120.  cmp dword [obj.nslots], r15d            ; [0x208058:4]=1
0x00003ee1      7f62           jg 0x3f45
0x00003ee3      4181ffffffff.  cmp r15d, 0x7fffffff
0x00003eea      0f8456010000   je 0x4046
0x00003ef0      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00003ef4      488d05754120.  lea rax, obj.slotvec0                   ; 0x208070
0x00003efb      4963f4         movsxd rsi, r12d
0x00003efe      48c1e604       shl rsi, 4
0x00003f02      4839c3         cmp rbx, rax
0x00003f05      0f8415010000   je 0x4020
0x00003f0b      4889df         mov rdi, rbx
0x00003f0e      e88d130000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00003f13      4889c3         mov rbx, rax
0x00003f16      488905434120.  mov qword [obj.slotvec], rax            ; [0x208060:8]=0x208070 obj.slotvec0 ; "p\x80 "
0x00003f1d      48633d344120.  movsxd rdi, dword [obj.nslots]          ; [0x208058:4]=1
0x00003f24      4489e2         mov edx, r12d
0x00003f27      31f6           xor esi, esi
0x00003f29      29fa           sub edx, edi
0x00003f2b      48c1e704       shl rdi, 4
0x00003f2f      4863d2         movsxd rdx, edx
0x00003f32      4801df         add rdi, rbx
0x00003f35      48c1e204       shl rdx, 4
0x00003f39      e8f2d5ffff     call sym.imp.memset
0x00003f3e      448925134120.  mov dword [obj.nslots], r12d            ; [0x208058:4]=1
0x00003f45      8b4504         mov eax, dword [rbp + 4]
0x00003f48      49c1e704       shl r15, 4
0x00003f4c      4883ec08       sub rsp, 8
0x00003f50      4c01fb         add rbx, r15
0x00003f53      4c8d7d08       lea r15, [rbp + 8]
0x00003f57      448b4500       mov r8d, dword [rbp]
0x00003f5b      4c8b1b         mov r11, qword [rbx]
0x00003f5e      4c8b6308       mov r12, qword [rbx + 8]
0x00003f62      4c89f1         mov rcx, r14
0x00003f65      83c801         or eax, 1
0x00003f68      89442424       mov dword [rsp + 0x24], eax
0x00003f6c      ff7530         push qword [rbp + 0x30]
0x00003f6f      4189c1         mov r9d, eax
0x00003f72      ff7528         push qword [rbp + 0x28]
0x00003f75      4157           push r15
0x00003f77      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00003f7a      488b542428     mov rdx, qword [rsp + 0x28]
0x00003f7f      4c89e7         mov rdi, r12
0x00003f82      4c895c2430     mov qword [rsp + 0x30], r11
0x00003f87      e8d4ecffff     call sym.quotearg_buffer_restyled
0x00003f8c      4883c420       add rsp, 0x20
0x00003f90      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00003f95      4939c3         cmp r11, rax
0x00003f98      7767           ja 0x4001
0x00003f9a      488d7001       lea rsi, [rax + 1]
0x00003f9e      488d059b4120.  lea rax, obj.slot0                      ; 0x208140
0x00003fa5      4939c4         cmp r12, rax
0x00003fa8      488933         mov qword [rbx], rsi
0x00003fab      7412           je 0x3fbf
0x00003fad      4c89e7         mov rdi, r12
0x00003fb0      4889742410     mov qword [rsp + 0x10], rsi
0x00003fb5      e836d4ffff     call sym.imp.free
0x00003fba      488b742410     mov rsi, qword [rsp + 0x10]
0x00003fbf      4889f7         mov rdi, rsi
0x00003fc2      4889742410     mov qword [rsp + 0x10], rsi
0x00003fc7      e874120000     call sym.xmalloc
0x00003fcc      4883ec08       sub rsp, 8
0x00003fd0      48894308       mov qword [rbx + 8], rax
0x00003fd4      448b4500       mov r8d, dword [rbp]
0x00003fd8      ff7530         push qword [rbp + 0x30]
0x00003fdb      ff7528         push qword [rbp + 0x28]
0x00003fde      4c89f1         mov rcx, r14
0x00003fe1      4157           push r15
0x00003fe3      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00003fe8      4889c7         mov rdi, rax
0x00003feb      488b542428     mov rdx, qword [rsp + 0x28]
0x00003ff0      488b742430     mov rsi, qword [rsp + 0x30]
0x00003ff5      4989c4         mov r12, rax
0x00003ff8      e863ecffff     call sym.quotearg_buffer_restyled
0x00003ffd      4883c420       add rsp, 0x20
0x00004001      8b442418       mov eax, dword [rsp + 0x18]
0x00004005      41894500       mov dword [r13], eax
0x00004009      4883c428       add rsp, 0x28
0x0000400d      4c89e0         mov rax, r12
0x00004010      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00004011      5d             pop rbp
0x00004012      415c           pop r12
0x00004014      415d           pop r13
0x00004016      415e           pop r14
0x00004018      415f           pop r15
0x0000401a      c3             ret
0x0000401b      0f1f440000     nop dword [rax + rax]
0x00004020      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00004022      e879120000     call sym.xrealloc
0x00004027      660f6f054140.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x0000402f      4889c3         mov rbx, rax
0x00004032      488905274020.  mov qword [obj.slotvec], rax            ; [0x208060:8]=0x208070 obj.slotvec0 ; "p\x80 "
0x00004039      0f1100         movups xmmword [rax], xmm0
0x0000403c      e9dcfeffff     jmp 0x3f1d
0x00004041      e8bad3ffff     call sym.imp.abort
0x00004046      e845140000     call sym.xalloc_die
0x0000404b      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00004050      4154           push r12
0x00004052      55             push rbp
0x00004053      53             push rbx
0x00004054      4889fb         mov rbx, rdi
0x00004057      e8b4d3ffff     call sym.imp.__errno_location
0x0000405c      448b20         mov r12d, dword [rax]
0x0000405f      4889c5         mov rbp, rax
0x00004062      488d05d74120.  lea rax, obj.default_quoting_options    ; 0x208240
0x00004069      4885db         test rbx, rbx
0x0000406c      be38000000     mov esi, 0x38                           ; '8'
0x00004071      480f44d8       cmove rbx, rax
0x00004075      4889df         mov rdi, rbx
0x00004078      e8c3130000     call sym.xmemdup
0x0000407d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004081      5b             pop rbx
0x00004082      5d             pop rbp
0x00004083      415c           pop r12
0x00004085      c3             ret
0x00004086      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00004090      488d05a94120.  lea rax, obj.default_quoting_options    ; 0x208240
0x00004097      4885ff         test rdi, rdi
0x0000409a      480f44f8       cmove rdi, rax
0x0000409e      8b07           mov eax, dword [rdi]
0x000040a0      c3             ret
0x000040a1      0f1f440000     nop dword [rax + rax]
0x000040a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x000040b0      488d05894120.  lea rax, obj.default_quoting_options    ; 0x208240
0x000040b7      4885ff         test rdi, rdi
0x000040ba      480f44f8       cmove rdi, rax
0x000040be      8937           mov dword [rdi], esi
0x000040c0      c3             ret
0x000040c1      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x000040c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x000040d0      488d05694120.  lea rax, obj.default_quoting_options    ; 0x208240
0x000040d7      4885ff         test rdi, rdi
0x000040da      89f1           mov ecx, esi
0x000040dc      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x000040e0      89f0           mov eax, esi
0x000040e2      83e11f         and ecx, 0x1f
0x000040e5      c0e805         shr al, 5
0x000040e8      0fb6c0         movzx eax, al
0x000040eb      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x000040f0      8b37           mov esi, dword [rdi]
0x000040f2      89f0           mov eax, esi
0x000040f4      d3e8           shr eax, cl
0x000040f6      31c2           xor edx, eax
0x000040f8      83e001         and eax, 1
0x000040fb      83e201         and edx, 1
0x000040fe      d3e2           shl edx, cl
0x00004100      31f2           xor edx, esi
0x00004102      8917           mov dword [rdi], edx
0x00004104      c3             ret
0x00004105      90             nop
0x00004106      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00004110      488d05294120.  lea rax, obj.default_quoting_options    ; 0x208240
0x00004117      4885ff         test rdi, rdi
0x0000411a      480f44f8       cmove rdi, rax
0x0000411e      8b4704         mov eax, dword [rdi + 4]
0x00004121      897704         mov dword [rdi + 4], esi
0x00004124      c3             ret
0x00004125      90             nop
0x00004126      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00004130      488d05094120.  lea rax, obj.default_quoting_options    ; 0x208240
0x00004137      4885ff         test rdi, rdi
0x0000413a      480f44f8       cmove rdi, rax
0x0000413e      4885f6         test rsi, rsi
0x00004141      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00004147      740e           je 0x4157
0x00004149      4885d2         test rdx, rdx
0x0000414c      7409           je 0x4157
0x0000414e      48897728       mov qword [rdi + 0x28], rsi
0x00004152      48895730       mov qword [rdi + 0x30], rdx
0x00004156      c3             ret
0x00004157      4883ec08       sub rsp, 8
0x0000415b      e8a0d2ffff     call sym.imp.abort
;-- quotearg_buffer:
0x00004160      4157           push r15
0x00004162      4156           push r14
0x00004164      488d05d54020.  lea rax, obj.default_quoting_options    ; 0x208240
0x0000416b      4155           push r13
0x0000416d      4154           push r12
0x0000416f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00004172      55             push rbp
0x00004173      53             push rbx
0x00004174      4c89c3         mov rbx, r8
0x00004177      4989f6         mov r14, rsi
0x0000417a      4989d7         mov r15, rdx
0x0000417d      4883ec18       sub rsp, 0x18
0x00004181      4d85c0         test r8, r8
0x00004184      480f44d8       cmove rbx, rax
0x00004188      48894c2408     mov qword [rsp + 8], rcx
0x0000418d      e87ed2ffff     call sym.imp.__errno_location
0x00004192      448b20         mov r12d, dword [rax]
0x00004195      4889c5         mov rbp, rax
0x00004198      488d4308       lea rax, [rbx + 8]
0x0000419c      4883ec08       sub rsp, 8
0x000041a0      448b4b04       mov r9d, dword [rbx + 4]
0x000041a4      ff7330         push qword [rbx + 0x30]
0x000041a7      448b03         mov r8d, dword [rbx]
0x000041aa      ff7328         push qword [rbx + 0x28]
0x000041ad      4c89fa         mov rdx, r15
0x000041b0      50             push rax
0x000041b1      488b4c2428     mov rcx, qword [rsp + 0x28]
0x000041b6      4c89f6         mov rsi, r14
0x000041b9      4c89ef         mov rdi, r13
0x000041bc      e89feaffff     call sym.quotearg_buffer_restyled
0x000041c1      44896500       mov dword [rbp], r12d
0x000041c5      4883c438       add rsp, 0x38
0x000041c9      5b             pop rbx
0x000041ca      5d             pop rbp
0x000041cb      415c           pop r12
0x000041cd      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x000041cf      415e           pop r14
0x000041d1      415f           pop r15
0x000041d3      c3             ret
0x000041d4      6690           nop
0x000041d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x000041e0      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x000041e2      4156           push r14
0x000041e4      488d05554020.  lea rax, obj.default_quoting_options    ; 0x208240
0x000041eb      4155           push r13
0x000041ed      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x000041ef      4989d4         mov r12, rdx
0x000041f2      55             push rbp
0x000041f3      53             push rbx
0x000041f4      4889cb         mov rbx, rcx
0x000041f7      4989fe         mov r14, rdi
0x000041fa      4989f7         mov r15, rsi
0x000041fd      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00004201      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00004204      480f44d8       cmove rbx, rax
0x00004208      31ed           xor ebp, ebp
0x0000420a      e801d2ffff     call sym.imp.__errno_location
0x0000420f      4d85e4         test r12, r12
0x00004212      4989c5         mov r13, rax
0x00004215      8b00           mov eax, dword [rax]
0x00004217      400f94c5       sete bpl
0x0000421b      0b6b04         or ebp, dword [rbx + 4]
0x0000421e      4c8d5308       lea r10, [rbx + 8]
0x00004222      4883ec08       sub rsp, 8
0x00004226      448b03         mov r8d, dword [rbx]
0x00004229      4c89f9         mov rcx, r15
0x0000422c      89442414       mov dword [rsp + 0x14], eax
0x00004230      ff7330         push qword [rbx + 0x30]
0x00004233      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00004236      ff7328         push qword [rbx + 0x28]
0x00004239      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x0000423b      31f6           xor esi, esi
0x0000423d      4189e9         mov r9d, ebp
0x00004240      31ff           xor edi, edi
0x00004242      4c89542440     mov qword [rsp + 0x40], r10
0x00004247      e814eaffff     call sym.quotearg_buffer_restyled
0x0000424c      488d7001       lea rsi, [rax + 1]
0x00004250      4889442448     mov qword [rsp + 0x48], rax
0x00004255      4883c420       add rsp, 0x20
0x00004259      4889f7         mov rdi, rsi
0x0000425c      4889742418     mov qword [rsp + 0x18], rsi
0x00004261      e8da0f0000     call sym.xmalloc
0x00004266      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x0000426b      4883ec08       sub rsp, 8
0x0000426f      ff7330         push qword [rbx + 0x30]
0x00004272      ff7328         push qword [rbx + 0x28]
0x00004275      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000427a      4189e9         mov r9d, ebp
0x0000427d      448b03         mov r8d, dword [rbx]
0x00004280      4c89f9         mov rcx, r15
0x00004283      4c89f2         mov rdx, r14
0x00004286      4889c7         mov rdi, rax
0x00004289      4152           push r10
0x0000428b      488b742438     mov rsi, qword [rsp + 0x38]
0x00004290      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00004295      8b44242c       mov eax, dword [rsp + 0x2c]
0x00004299      4883c420       add rsp, 0x20
0x0000429d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x000042a0      41894500       mov dword [r13], eax
0x000042a4      7409           je 0x42af
0x000042a6      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x000042ab      4d891c24       mov qword [r12], r11
0x000042af      488b442410     mov rax, qword [rsp + 0x10]
0x000042b4      4883c438       add rsp, 0x38
0x000042b8      5b             pop rbx
0x000042b9      5d             pop rbp
0x000042ba      415c           pop r12
0x000042bc      415d           pop r13
0x000042be      415e           pop r14
0x000042c0      415f           pop r15
0x000042c2      c3             ret
0x000042c3      0f1f00         nop dword [rax]
0x000042c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x000042d0      4889d1         mov rcx, rdx
0x000042d3      31d2           xor edx, edx
0x000042d5      e906ffffff     jmp sym.quotearg_alloc_mem
0x000042da      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x000042e0      8b05723d2000   mov eax, dword [obj.nslots]             ; [0x208058:4]=1
0x000042e6      4154           push r12
0x000042e8      4c8b25713d20.  mov r12, qword [obj.slotvec]            ; [0x208060:8]=0x208070 obj.slotvec0 ; "p\x80 "
0x000042ef      55             push rbp
0x000042f0      53             push rbx
0x000042f1      83f801         cmp eax, 1
0x000042f4      7e2b           jle 0x4321                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x000042f6      83e802         sub eax, 2
0x000042f9      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x000042fe      48c1e004       shl rax, 4
0x00004302      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00004307      660f1f840000.  nop word [rax + rax]
0x00004310      488b3b         mov rdi, qword [rbx]
0x00004313      4883c310       add rbx, 0x10
0x00004317      e8d4d0ffff     call sym.imp.free
0x0000431c      4839eb         cmp rbx, rbp
0x0000431f      75ef           jne 0x4310
0x00004321      498b7c2408     mov rdi, qword [r12 + 8]
0x00004326      488d1d133e20.  lea rbx, obj.slot0                      ; 0x208140
0x0000432d      4839df         cmp rdi, rbx
0x00004330      7417           je 0x4349
0x00004332      e8b9d0ffff     call sym.imp.free
0x00004337      48c7052e3d20.  mov qword [obj.slotvec0], 0x100         ; [0x208070:8]=256
0x00004342      48891d2f3d20.  mov qword [0x00208078], rbx             ; [0x208078:8]=0x208140 obj.slot0
0x00004349      488d1d203d20.  lea rbx, obj.slotvec0                   ; 0x208070
0x00004350      4939dc         cmp r12, rbx
0x00004353      740f           je 0x4364
0x00004355      4c89e7         mov rdi, r12
0x00004358      e893d0ffff     call sym.imp.free
0x0000435d      48891dfc3c20.  mov qword [obj.slotvec], rbx            ; [0x208060:8]=0x208070 obj.slotvec0 ; "p\x80 "
0x00004364      5b             pop rbx
0x00004365      c705e93c2000.  mov dword [obj.nslots], 1               ; [0x208058:4]=1
0x0000436f      5d             pop rbp
0x00004370      415c           pop r12
0x00004372      c3             ret
0x00004373      0f1f00         nop dword [rax]
0x00004376      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00004380      488d0db93e20.  lea rcx, obj.default_quoting_options    ; 0x208240
0x00004387      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000438e      e90dfbffff     jmp sym.quotearg_n_options
0x00004393      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00004396      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x000043a0      488d0d993e20.  lea rcx, obj.default_quoting_options    ; 0x208240
0x000043a7      e9f4faffff     jmp sym.quotearg_n_options
0x000043ac      0f1f4000       nop dword [rax]
;-- quotearg:
0x000043b0      488d0d893e20.  lea rcx, obj.default_quoting_options    ; 0x208240
0x000043b7      4889fe         mov rsi, rdi
0x000043ba      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000043c1      31ff           xor edi, edi
0x000043c3      e9d8faffff     jmp sym.quotearg_n_options
0x000043c8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x000043d0      488d0d693e20.  lea rcx, obj.default_quoting_options    ; 0x208240
0x000043d7      4889f2         mov rdx, rsi
0x000043da      4889fe         mov rsi, rdi
0x000043dd      31ff           xor edi, edi
0x000043df      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x000043e4      6690           nop
0x000043e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x000043f0      4883ec48       sub rsp, 0x48
0x000043f4      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x000043f7      64488b142528.  mov rdx, qword fs:[0x28]
0x00004400      4889542438     mov qword [rsp + 0x38], rdx
0x00004405      31d2           xor edx, edx
0x00004407      83fe0a         cmp esi, 0xa
0x0000440a      7468           je 0x4474
0x0000440c      893424         mov dword [rsp], esi
0x0000440f      4889e1         mov rcx, rsp
0x00004412      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004419      4889c6         mov rsi, rax
0x0000441c      48c744240400.  mov qword [rsp + 4], 0
0x00004425      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000442e      48c744241400.  mov qword [rsp + 0x14], 0
0x00004437      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004440      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00004449      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004452      c74424340000.  mov dword [rsp + 0x34], 0
0x0000445a      e841faffff     call sym.quotearg_n_options
0x0000445f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004464      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000446d      750a           jne 0x4479                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x0000446f      4883c448       add rsp, 0x48
0x00004473      c3             ret
0x00004474      e887cfffff     call sym.imp.abort
0x00004479      e842d0ffff     call sym.imp.__stack_chk_fail
0x0000447e      6690           nop
;-- quotearg_n_style_mem:
0x00004480      4883ec48       sub rsp, 0x48
0x00004484      4889d0         mov rax, rdx
0x00004487      4889ca         mov rdx, rcx
0x0000448a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00004493      48894c2438     mov qword [rsp + 0x38], rcx
0x00004498      31c9           xor ecx, ecx
0x0000449a      83fe0a         cmp esi, 0xa
0x0000449d      7461           je 0x4500
0x0000449f      893424         mov dword [rsp], esi
0x000044a2      4889e1         mov rcx, rsp
0x000044a5      4889c6         mov rsi, rax
0x000044a8      48c744240400.  mov qword [rsp + 4], 0
0x000044b1      48c744240c00.  mov qword [rsp + 0xc], 0
0x000044ba      48c744241400.  mov qword [rsp + 0x14], 0
0x000044c3      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000044cc      48c744242400.  mov qword [rsp + 0x24], 0
0x000044d5      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000044de      c74424340000.  mov dword [rsp + 0x34], 0
0x000044e6      e8b5f9ffff     call sym.quotearg_n_options
0x000044eb      488b542438     mov rdx, qword [rsp + 0x38]
0x000044f0      644833142528.  xor rdx, qword fs:[0x28]
0x000044f9      750a           jne 0x4505
0x000044fb      4883c448       add rsp, 0x48
0x000044ff      c3             ret
0x00004500      e8fbceffff     call sym.imp.abort
0x00004505      e8b6cfffff     call sym.imp.__stack_chk_fail
0x0000450a      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00004510      4889f2         mov rdx, rsi
0x00004513      89fe           mov esi, edi
0x00004515      31ff           xor edi, edi
0x00004517      e9d4feffff     jmp sym.quotearg_n_style
0x0000451c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00004520      4889d1         mov rcx, rdx
0x00004523      4889f2         mov rdx, rsi
0x00004526      89fe           mov esi, edi
0x00004528      31ff           xor edi, edi
0x0000452a      e951ffffff     jmp sym.quotearg_n_style_mem
0x0000452f      90             nop
;-- quotearg_char_mem:
0x00004530      4883ec48       sub rsp, 0x48
0x00004534      89d1           mov ecx, edx
0x00004536      64488b042528.  mov rax, qword fs:[0x28]
0x0000453f      4889442438     mov qword [rsp + 0x38], rax
0x00004544      31c0           xor eax, eax
0x00004546      488b05233d20.  mov rax, qword [0x00208270]             ; [0x208270:8]=0
0x0000454d      4989e0         mov r8, rsp
0x00004550      83e11f         and ecx, 0x1f
0x00004553      660f6f05e53c.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x0000455b      4889442430     mov qword [rsp + 0x30], rax
0x00004560      89d0           mov eax, edx
0x00004562      0f290424       movaps xmmword [rsp], xmm0
0x00004566      c0e805         shr al, 5
0x00004569      0fb6c0         movzx eax, al
0x0000456c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00004571      660f6f05d73c.  movdqa xmm0, xmmword [0x00208250]
0x00004579      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000457e      660f6f05da3c.  movdqa xmm0, xmmword [0x00208260]
0x00004586      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000458b      418b11         mov edx, dword [r9]
0x0000458e      89d0           mov eax, edx
0x00004590      d3e8           shr eax, cl
0x00004592      f7d0           not eax
0x00004594      83e001         and eax, 1
0x00004597      d3e0           shl eax, cl
0x00004599      4c89c1         mov rcx, r8
0x0000459c      31d0           xor eax, edx
0x0000459e      4889f2         mov rdx, rsi
0x000045a1      4889fe         mov rsi, rdi
0x000045a4      418901         mov dword [r9], eax
0x000045a7      31ff           xor edi, edi
0x000045a9      e8f2f8ffff     call sym.quotearg_n_options
0x000045ae      488b742438     mov rsi, qword [rsp + 0x38]
0x000045b3      644833342528.  xor rsi, qword fs:[0x28]
0x000045bc      7505           jne 0x45c3
0x000045be      4883c448       add rsp, 0x48
0x000045c2      c3             ret
0x000045c3      e8f8ceffff     call sym.imp.__stack_chk_fail
0x000045c8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x000045d0      400fbed6       movsx edx, sil
0x000045d4      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x000045db      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x000045e0      ba3a000000     mov edx, 0x3a                           ; ':'
0x000045e5      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x000045ec      e93fffffff     jmp sym.quotearg_char_mem
0x000045f1      0f1f440000     nop dword [rax + rax]
0x000045f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00004600      ba3a000000     mov edx, 0x3a                           ; ':'
0x00004605      e926ffffff     jmp sym.quotearg_char_mem
0x0000460a      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00004610      4883ec48       sub rsp, 0x48
0x00004614      4889d0         mov rax, rdx
0x00004617      64488b142528.  mov rdx, qword fs:[0x28]
0x00004620      4889542438     mov qword [rsp + 0x38], rdx
0x00004625      31d2           xor edx, edx
0x00004627      83fe0a         cmp esi, 0xa
0x0000462a      7468           je 0x4694
0x0000462c      893424         mov dword [rsp], esi
0x0000462f      4889e1         mov rcx, rsp
0x00004632      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004639      4889c6         mov rsi, rax
0x0000463c      48c744240400.  mov qword [rsp + 4], 0
0x00004645      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x0000464e      48c744241400.  mov qword [rsp + 0x14], 0
0x00004657      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004660      48c744242400.  mov qword [rsp + 0x24], 0
0x00004669      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004672      c74424340000.  mov dword [rsp + 0x34], 0
0x0000467a      e821f8ffff     call sym.quotearg_n_options
0x0000467f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004684      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000468d      750a           jne 0x4699
0x0000468f      4883c448       add rsp, 0x48
0x00004693      c3             ret
0x00004694      e867cdffff     call sym.imp.abort
0x00004699      e822ceffff     call sym.imp.__stack_chk_fail
0x0000469e      6690           nop
;-- quotearg_n_custom_mem:
0x000046a0      4883ec48       sub rsp, 0x48
0x000046a4      4989c9         mov r9, rcx
0x000046a7      488b0dc23b20.  mov rcx, qword [0x00208270]             ; [0x208270:8]=0
0x000046ae      660f6f058a3b.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x000046b6      64488b042528.  mov rax, qword fs:[0x28]
0x000046bf      4889442438     mov qword [rsp + 0x38], rax
0x000046c4      31c0           xor eax, eax
0x000046c6      0f290424       movaps xmmword [rsp], xmm0
0x000046ca      4885f6         test rsi, rsi
0x000046cd      48894c2430     mov qword [rsp + 0x30], rcx
0x000046d2      c704240a0000.  mov dword [rsp], 0xa
0x000046d9      660f6f056f3b.  movdqa xmm0, xmmword [0x00208250]
0x000046e1      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x000046e6      660f6f05723b.  movdqa xmm0, xmmword [0x00208260]
0x000046ee      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x000046f3      7432           je 0x4727
0x000046f5      4885d2         test rdx, rdx
0x000046f8      742d           je 0x4727
0x000046fa      4889742428     mov qword [rsp + 0x28], rsi
0x000046ff      4889542430     mov qword [rsp + 0x30], rdx
0x00004704      4889e1         mov rcx, rsp
0x00004707      4c89c2         mov rdx, r8
0x0000470a      4c89ce         mov rsi, r9
0x0000470d      e88ef7ffff     call sym.quotearg_n_options
0x00004712      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00004717      6448333c2528.  xor rdi, qword fs:[0x28]
0x00004720      750a           jne 0x472c
0x00004722      4883c448       add rsp, 0x48
0x00004726      c3             ret
0x00004727      e8d4ccffff     call sym.imp.abort
0x0000472c      e88fcdffff     call sym.imp.__stack_chk_fail
0x00004731      0f1f440000     nop dword [rax + rax]
0x00004736      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00004740      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00004747      e954ffffff     jmp sym.quotearg_n_custom_mem
0x0000474c      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00004750      4889d1         mov rcx, rdx
0x00004753      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0000475a      4889f2         mov rdx, rsi
0x0000475d      4889fe         mov rsi, rdi
0x00004760      31ff           xor edi, edi
0x00004762      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00004767      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00004770      4989c8         mov r8, rcx
0x00004773      4889d1         mov rcx, rdx
0x00004776      4889f2         mov rdx, rsi
0x00004779      4889fe         mov rsi, rdi
0x0000477c      31ff           xor edi, edi
0x0000477e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00004783      0f1f00         nop dword [rax]
0x00004786      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00004790      488d0d893820.  lea rcx, obj.quote_quoting_options      ; 0x208020
0x00004797      e904f7ffff     jmp sym.quotearg_n_options
0x0000479c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x000047a0      488d0d793820.  lea rcx, obj.quote_quoting_options      ; 0x208020
0x000047a7      4889f2         mov rdx, rsi
0x000047aa      4889fe         mov rsi, rdi
0x000047ad      31ff           xor edi, edi
0x000047af      e9ecf6ffff     jmp sym.quotearg_n_options
0x000047b4      6690           nop
0x000047b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x000047c0      488d0d593820.  lea rcx, obj.quote_quoting_options      ; 0x208020
0x000047c7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000047ce      e9cdf6ffff     jmp sym.quotearg_n_options
0x000047d3      0f1f00         nop dword [rax]
0x000047d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x000047e0      488d0d393820.  lea rcx, obj.quote_quoting_options      ; 0x208020
0x000047e7      4889fe         mov rsi, rdi
0x000047ea      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000047f1      31ff           xor edi, edi
0x000047f3      e9a8f6ffff     jmp sym.quotearg_n_options
0x000047f8      0f1f84000000.  nop dword [rax + rax]
;-- init_tokenbuffer:
0x00004800      48c707000000.  mov qword [rdi], 0                      ; ../coreutils-8.31/lib/readtokens.c:45
0x00004807      48c747080000.  mov qword [rdi + 8], 0                  ; ../coreutils-8.31/lib/readtokens.c:47
0x0000480f      c3             ret                                     ; ../coreutils-8.31/lib/readtokens.c:48
;-- readtoken:
0x00004810      4157           push r15                                ; ../coreutils-8.31/lib/readtokens.c:84
0x00004812      4156           push r14
0x00004814      4155           push r13
0x00004816      4154           push r12
0x00004818      4989cd         mov r13, rcx
0x0000481b      55             push rbp
0x0000481c      53             push rbx
0x0000481d      4889fd         mov rbp, rdi
0x00004820      660fefc0       pxor xmm0, xmm0                         ; string_fortified.h:71   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
0x00004824      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/readtokens.c:84
0x00004828      64488b042528.  mov rax, qword fs:[0x28]
0x00004831      4889442428     mov qword [rsp + 0x28], rax
0x00004836      31c0           xor eax, eax
0x00004838      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/readtokens.c:91
0x0000483b      0f290424       movaps xmmword [rsp], xmm0              ; string_fortified.h:71   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
0x0000483f      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00004844      7466           je 0x48ac                               ; ../coreutils-8.31/lib/readtokens.c:91
0x00004846      4801f2         add rdx, rsi
0x00004849      4889e7         mov rdi, rsp
0x0000484c      41b801000000   mov r8d, 1                              ; ../coreutils-8.31/lib/readtokens.c:63
0x00004852      660f1f440000   nop word [rax + rax]
0x00004858      4c89c3         mov rbx, r8
0x0000485b      4883c601       add rsi, 1
0x0000485f      0fb64eff       movzx ecx, byte [rsi - 1]               ; ../coreutils-8.31/lib/readtokens.c:93
0x00004863      4889c8         mov rax, rcx                            ; ../coreutils-8.31/lib/readtokens.c:63
0x00004866      83e13f         and ecx, 0x3f
0x00004869      48c1e803       shr rax, 3
0x0000486d      48d3e3         shl rbx, cl
0x00004870      83e018         and eax, 0x18
0x00004873      48091c07       or qword [rdi + rax], rbx
0x00004877      4839f2         cmp rdx, rsi                            ; ../coreutils-8.31/lib/readtokens.c:91
0x0000487a      75dc           jne 0x4858
0x0000487c      488b4508       mov rax, qword [rbp + 8]                ; stdio.h:65   return _IO_getc_unlocked (__fp);
0x00004880      483b4510       cmp rax, qword [rbp + 0x10]
0x00004884      7330           jae 0x48b6
0x00004886      662e0f1f8400.  nop word cs:[rax + rax]
0x00004890      488d5001       lea rdx, [rax + 1]
0x00004894      48895508       mov qword [rbp + 8], rdx
0x00004898      0fb618         movzx ebx, byte [rax]
0x0000489b      4863c3         movsxd rax, ebx                         ; ../coreutils-8.31/lib/readtokens.c:98
0x0000489e      48c1e806       shr rax, 6                              ; ../coreutils-8.31/lib/readtokens.c:56
0x000048a2      488b04c4       mov rax, qword [rsp + rax*8]
0x000048a6      480fa3d8       bt rax, rbx                             ; ../coreutils-8.31/lib/readtokens.c:98
0x000048aa      7318           jae 0x48c4
0x000048ac      488b4508       mov rax, qword [rbp + 8]                ; stdio.h:65   return _IO_getc_unlocked (__fp);
0x000048b0      483b4510       cmp rax, qword [rbp + 0x10]
0x000048b4      72da           jb 0x4890
0x000048b6      4889ef         mov rdi, rbp
0x000048b9      e822cbffff     call sym.imp.__uflow
0x000048be      85c0           test eax, eax                           ; ../coreutils-8.31/lib/readtokens.c:98
0x000048c0      89c3           mov ebx, eax                            ; stdio.h:65   return _IO_getc_unlocked (__fp);
0x000048c2      79d7           jns 0x489b                              ; ../coreutils-8.31/lib/readtokens.c:98
0x000048c4      4d8b7d08       mov r15, qword [r13 + 8]                ; ../coreutils-8.31/lib/readtokens.c:103
0x000048c8      4d8b7500       mov r14, qword [r13]                    ; ../coreutils-8.31/lib/readtokens.c:104
0x000048cc      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/readtokens.c:105
0x000048cf      85db           test ebx, ebx                           ; ../coreutils-8.31/lib/readtokens.c:108
0x000048d1      790d           jns 0x48e0
0x000048d3      4d85e4         test r12, r12
0x000048d6      7452           je 0x492a
0x000048d8      0f1f84000000.  nop dword [rax + rax]
0x000048e0      4d39f4         cmp r12, r14                            ; ../coreutils-8.31/lib/readtokens.c:111
0x000048e3      7453           je 0x4938
0x000048e5      85db           test ebx, ebx                           ; ../coreutils-8.31/lib/readtokens.c:114
0x000048e7      4b8d1427       lea rdx, [r15 + r12]
0x000048eb      0f888f000000   js 0x4980
0x000048f1      4863c3         movsxd rax, ebx                         ; ../coreutils-8.31/lib/readtokens.c:119
0x000048f4      48c1e806       shr rax, 6                              ; ../coreutils-8.31/lib/readtokens.c:56
0x000048f8      488b04c4       mov rax, qword [rsp + rax*8]
0x000048fc      480fa3d8       bt rax, rbx                             ; ../coreutils-8.31/lib/readtokens.c:119
0x00004900      727e           jb 0x4980
0x00004902      881a           mov byte [rdx], bl                      ; ../coreutils-8.31/lib/readtokens.c:124
0x00004904      4983c401       add r12, 1
0x00004908      488b4508       mov rax, qword [rbp + 8]                ; stdio.h:65   return _IO_getc_unlocked (__fp);
0x0000490c      483b4510       cmp rax, qword [rbp + 0x10]
0x00004910      0f839a000000   jae 0x49b0
0x00004916      488d5001       lea rdx, [rax + 1]
0x0000491a      48895508       mov qword [rbp + 8], rdx
0x0000491e      0fb618         movzx ebx, byte [rax]
0x00004921      85db           test ebx, ebx                           ; ../coreutils-8.31/lib/readtokens.c:108
0x00004923      79bb           jns 0x48e0
0x00004925      4d85e4         test r12, r12
0x00004928      75b6           jne 0x48e0
0x0000492a      49c7c4ffffff.  mov r12, 0xffffffffffffffff             ; ../coreutils-8.31/lib/readtokens.c:109
0x00004931      eb58           jmp 0x498b
0x00004933      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/xalloc.h:50
0x00004938      4d85ff         test r15, r15
0x0000493b      0f847f000000   je 0x49c0
0x00004941      48b853555555.  movabs rax, 0x5555555555555553          ; 'SUUUUUUU'
0x0000494b      4939c4         cmp r12, rax
0x0000494e      0f8780000000   ja 0x49d4
0x00004954      4c89e0         mov rax, r12
0x00004957      48d1e8         shr rax, 1
0x0000495a      4d8d740401     lea r14, [r12 + rax + 1]
0x0000495f      4c89ff         mov rdi, r15
0x00004962      4c89f6         mov rsi, r14
0x00004965      e836090000     call sym.xrealloc
0x0000496a      85db           test ebx, ebx
0x0000496c      4989c7         mov r15, rax
0x0000496f      4b8d1427       lea rdx, [r15 + r12]
0x00004973      0f8978ffffff   jns 0x48f1                              ; ../coreutils-8.31/lib/xalloc.h:-150
0x00004979      0f1f80000000.  nop dword [rax]
0x00004980      c60200         mov byte [rdx], 0
0x00004983      4d897d08       mov qword [r13 + 8], r15
0x00004987      4d897500       mov qword [r13], r14
0x0000498b      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00004990      6448333c2528.  xor rdi, qword fs:[0x28]
0x00004999      4c89e0         mov rax, r12
0x0000499c      753b           jne 0x49d9
0x0000499e      4883c438       add rsp, 0x38
0x000049a2      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-216
0x000049a3      5d             pop rbp
0x000049a4      415c           pop r12
0x000049a6      415d           pop r13
0x000049a8      415e           pop r14
0x000049aa      415f           pop r15
0x000049ac      c3             ret
0x000049ad      0f1f00         nop dword [rax]
0x000049b0      4889ef         mov rdi, rbp
0x000049b3      e828caffff     call sym.imp.__uflow
0x000049b8      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/readtokens.c:-251
0x000049ba      e910ffffff     jmp 0x48cf
0x000049bf      90             nop
0x000049c0      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/readtokens.c:-261
0x000049c3      b980000000     mov ecx, 0x80
0x000049c8      490f45cc       cmovne rcx, r12
0x000049cc      4885c9         test rcx, rcx
0x000049cf      4989ce         mov r14, rcx
0x000049d2      798b           jns 0x495f
0x000049d4      e8b70a0000     call sym.xalloc_die
0x000049d9      e8e2caffff     call sym.imp.__stack_chk_fail
0x000049de      6690           nop
;-- readtokens:
0x000049e0      4157           push r15
0x000049e2      4156           push r14                                ; ../coreutils-8.31/lib/readtokens.c:-251
0x000049e4      4155           push r13
0x000049e6      4154           push r12                                ; ../coreutils-8.31/lib/readtokens.c:-261
0x000049e8      55             push rbp
0x000049e9      53             push rbx
0x000049ea      488d6e01       lea rbp, [rsi + 1]
0x000049ee      4883ec68       sub rsp, 0x68
0x000049f2      64488b042528.  mov rax, qword fs:[0x28]
0x000049fb      4889442458     mov qword [rsp + 0x58], rax
0x00004a00      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/xalloc.h:-307
0x00004a02      4889542410     mov qword [rsp + 0x10], rdx
0x00004a07      4885f6         test rsi, rsi
0x00004a0a      b840000000     mov eax, 0x40                           ; segment.PHDR
0x00004a0f      ba08000000     mov edx, 8
0x00004a14      480f44e8       cmove rbp, rax
0x00004a18      48897c2408     mov qword [rsp + 8], rdi
0x00004a1d      4889d0         mov rax, rdx
0x00004a20      48894c2418     mov qword [rsp + 0x18], rcx
0x00004a25      4c89442438     mov qword [rsp + 0x38], r8
0x00004a2a      48f7e5         mul rbp
0x00004a2d      4c894c2430     mov qword [rsp + 0x30], r9
0x00004a32      0f80c8010000   jo 0x4c00                               ; ../coreutils-8.31/lib/xalloc.h:-305
0x00004a38      31c9           xor ecx, ecx
0x00004a3a      4885c0         test rax, rax
0x00004a3d      0f88b8010000   js 0x4bfb
0x00004a43      4885c9         test rcx, rcx
0x00004a46      0f85af010000   jne 0x4bfb
0x00004a4c      488d1ced0000.  lea rbx, [rbp*8]
0x00004a54      4889df         mov rdi, rbx
0x00004a57      e8e4070000     call sym.xmalloc
0x00004a5c      4889df         mov rdi, rbx
0x00004a5f      4989c4         mov r12, rax
0x00004a62      31db           xor ebx, ebx
0x00004a64      e8d7070000     call sym.xmalloc
0x00004a69      4989c5         mov r13, rax
0x00004a6c      488d442440     lea rax, [rsp + 0x40]
0x00004a71      48c744244000.  mov qword [rsp + 0x40], 0
0x00004a7a      48c744244800.  mov qword [rsp + 0x48], 0
0x00004a83      4889442420     mov qword [rsp + 0x20], rax
0x00004a88      eb42           jmp 0x4acc
0x00004a8a      660f1f440000   nop word [rax + rax]
0x00004a90      4983feff       cmp r14, 0xffffffffffffffff
0x00004a94      0f84b2000000   je 0x4b4c
0x00004a9a      4d89f7         mov r15, r14                            ; ../coreutils-8.31/lib/readtokens.c:-240
0x00004a9d      4983c701       add r15, 1
0x00004aa1      0f8854010000   js 0x4bfb
0x00004aa7      4c89ff         mov rdi, r15
0x00004aaa      e891070000     call sym.xmalloc
0x00004aaf      488b742448     mov rsi, qword [rsp + 0x48]
0x00004ab4      4d8974dd00     mov qword [r13 + rbx*8], r14
0x00004ab9      4c89fa         mov rdx, r15                            ; ../coreutils-8.31/lib/readtokens.c:-239
0x00004abc      4889c7         mov rdi, rax
0x00004abf      e8eccaffff     call sym.imp.memcpy
0x00004ac4      498904dc       mov qword [r12 + rbx*8], rax            ; ../coreutils-8.31/lib/xalloc.h:-208
0x00004ac8      4883c301       add rbx, 1
0x00004acc      488b4c2420     mov rcx, qword [rsp + 0x20]
0x00004ad1      488b542418     mov rdx, qword [rsp + 0x18]
0x00004ad6      488b742410     mov rsi, qword [rsp + 0x10]
0x00004adb      488b7c2408     mov rdi, qword [rsp + 8]
0x00004ae0      e82bfdffff     call sym.readtoken
0x00004ae5      4839eb         cmp rbx, rbp                            ; ../coreutils-8.31/lib/xalloc.h:-201
0x00004ae8      4989c6         mov r14, rax
0x00004aeb      72a3           jb 0x4a90
0x00004aed      4d85e4         test r12, r12
0x00004af0      0f84b2000000   je 0x4ba8
0x00004af6      48b8a9aaaaaa.  movabs rax, 0xaaaaaaaaaaaaaa9
0x00004b00      4839c5         cmp rbp, rax
0x00004b03      0f87f2000000   ja 0x4bfb
0x00004b09      4889e8         mov rax, rbp
0x00004b0c      4c89e7         mov rdi, r12
0x00004b0f      48d1e8         shr rax, 1
0x00004b12      488d6c0501     lea rbp, [rbp + rax + 1]
0x00004b17      488d14ed0000.  lea rdx, [rbp*8]
0x00004b1f      4889d6         mov rsi, rdx
0x00004b22      4889542428     mov qword [rsp + 0x28], rdx             ; ../coreutils-8.31/lib/readtokens.c:-220
0x00004b27      e874070000     call sym.xrealloc                       ; ../coreutils-8.31/lib/readtokens.c:-229
0x00004b2c      488b542428     mov rdx, qword [rsp + 0x28]
0x00004b31      4989c4         mov r12, rax
0x00004b34      4c89ef         mov rdi, r13
0x00004b37      4889d6         mov rsi, rdx
0x00004b3a      e861070000     call sym.xrealloc
0x00004b3f      4983feff       cmp r14, 0xffffffffffffffff
0x00004b43      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/readtokens.c:-218
0x00004b46      0f854effffff   jne 0x4a9a
0x00004b4c      49c704dc0000.  mov qword [r12 + rbx*8], 0
0x00004b54      488b7c2448     mov rdi, qword [rsp + 0x48]
0x00004b59      49c744dd0000.  mov qword [r13 + rbx*8], 0
0x00004b62      e889c8ffff     call sym.imp.free
0x00004b67      48837c243000   cmp qword [rsp + 0x30], 0
0x00004b6d      488b442438     mov rax, qword [rsp + 0x38]
0x00004b72      4c8920         mov qword [rax], r12
0x00004b75      747a           je 0x4bf1
0x00004b77      488b442430     mov rax, qword [rsp + 0x30]
0x00004b7c      4c8928         mov qword [rax], r13
0x00004b7f      488b4c2458     mov rcx, qword [rsp + 0x58]
0x00004b84      6448330c2528.  xor rcx, qword fs:[0x28]
0x00004b8d      4889d8         mov rax, rbx
0x00004b90      7578           jne 0x4c0a
0x00004b92      4883c468       add rsp, 0x68
0x00004b96      5b             pop rbx
0x00004b97      5d             pop rbp
0x00004b98      415c           pop r12
0x00004b9a      415d           pop r13
0x00004b9c      415e           pop r14
0x00004b9e      415f           pop r15
0x00004ba0      c3             ret
0x00004ba1      0f1f80000000.  nop dword [rax]
0x00004ba8      4885ed         test rbp, rbp
0x00004bab      b810000000     mov eax, 0x10
0x00004bb0      ba08000000     mov edx, 8
0x00004bb5      480f44e8       cmove rbp, rax
0x00004bb9      4889d0         mov rax, rdx
0x00004bbc      31f6           xor esi, esi
0x00004bbe      48f7e5         mul rbp
0x00004bc1      704c           jo 0x4c0f
0x00004bc3      4885c0         test rax, rax
0x00004bc6      7833           js 0x4bfb
0x00004bc8      4885f6         test rsi, rsi
0x00004bcb      752e           jne 0x4bfb
0x00004bcd      488d14ed0000.  lea rdx, [rbp*8]
0x00004bd5      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/readtokens.c:-341
0x00004bd7      4889d6         mov rsi, rdx
0x00004bda      4889542428     mov qword [rsp + 0x28], rdx
0x00004bdf      e8bc060000     call sym.xrealloc
0x00004be4      488b542428     mov rdx, qword [rsp + 0x28]
0x00004be9      4989c4         mov r12, rax
0x00004bec      e943ffffff     jmp 0x4b34
0x00004bf1      4c89ef         mov rdi, r13
0x00004bf4      e8f7c7ffff     call sym.imp.free
0x00004bf9      eb84           jmp 0x4b7f
0x00004bfb      e890080000     call sym.xalloc_die
0x00004c00      b901000000     mov ecx, 1
0x00004c05      e930feffff     jmp 0x4a3a
0x00004c0a      e8b1c8ffff     call sym.imp.__stack_chk_fail
0x00004c0f      be01000000     mov esi, 1
0x00004c14      ebad           jmp 0x4bc3
0x00004c16      662e0f1f8400.  nop word cs:[rax + rax]
;-- version_etc_arn:
0x00004c20      4157           push r15
0x00004c22      4156           push r14
0x00004c24      4155           push r13
0x00004c26      4154           push r12
0x00004c28      4d89cc         mov r12, r9
0x00004c2b      55             push rbp
0x00004c2c      53             push rbx
0x00004c2d      4889fd         mov rbp, rdi
0x00004c30      4c89c3         mov rbx, r8
0x00004c33      4883ec28       sub rsp, 0x28
0x00004c37      4885f6         test rsi, rsi
0x00004c3a      0f8418010000   je 0x4d58
0x00004c40      4989d0         mov r8, rdx
0x00004c43      488d15be1400.  lea rdx, [0x00006108]                   ; "%s (%s) %s\n"
0x00004c4a      4989c9         mov r9, rcx
0x00004c4d      31c0           xor eax, eax
0x00004c4f      4889f1         mov rcx, rsi
0x00004c52      be01000000     mov esi, 1
0x00004c57      e844caffff     call sym.imp.__fprintf_chk
0x00004c5c      488d35b81400.  lea rsi, [0x0000611b]                   ; "(C)"
0x00004c63      31ff           xor edi, edi
0x00004c65      ba05000000     mov edx, 5
0x00004c6a      e821c8ffff     call sym.imp.dcgettext
0x00004c6f      488d15ca1700.  lea rdx, obj.version_etc_copyright      ; 0x6440 ; "Copyright %s %d Free Software Foundation, Inc."
0x00004c76      4889c1         mov rcx, rax
0x00004c79      41b8e3070000   mov r8d, 0x7e3
0x00004c7f      be01000000     mov esi, 1
0x00004c84      4889ef         mov rdi, rbp
0x00004c87      31c0           xor eax, eax
0x00004c89      e812caffff     call sym.imp.__fprintf_chk
0x00004c8e      488d35131500.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x61a8 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00004c95      31ff           xor edi, edi
0x00004c97      ba05000000     mov edx, 5
0x00004c9c      e8efc7ffff     call sym.imp.dcgettext
0x00004ca1      4889ee         mov rsi, rbp
0x00004ca4      4889c7         mov rdi, rax
0x00004ca7      e8d4c8ffff     call sym.imp.fputs_unlocked
0x00004cac      4983fc09       cmp r12, 9
0x00004cb0      0f873a030000   ja 0x4ff0
0x00004cb6      488d154b1700.  lea rdx, [0x00006408]
0x00004cbd      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00004cc1      4801d0         add rax, rdx
0x00004cc4      ffe0           jmp rax
0x00004cc6      662e0f1f8400.  nop word cs:[rax + rax]
0x00004cd0      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004cd4      488b4310       mov rax, qword [rbx + 0x10]
0x00004cd8      488d35391600.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x6318 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x00004cdf      4c8b4308       mov r8, qword [rbx + 8]
0x00004ce3      ba05000000     mov edx, 5
0x00004ce8      31ff           xor edi, edi
0x00004cea      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004cee      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004cf2      4c894c2410     mov qword [rsp + 0x10], r9
0x00004cf7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004cfb      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004cff      48890424       mov qword [rsp], rax
0x00004d03      4c89442408     mov qword [rsp + 8], r8
0x00004d08      488b1b         mov rbx, qword [rbx]
0x00004d0b      e880c7ffff     call sym.imp.dcgettext
0x00004d10      4883ec08       sub rsp, 8
0x00004d14      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00004d19      4889c2         mov rdx, rax
0x00004d1c      4889d9         mov rcx, rbx
0x00004d1f      be01000000     mov esi, 1
0x00004d24      4889ef         mov rdi, rbp
0x00004d27      31c0           xor eax, eax
0x00004d29      4151           push r9
0x00004d2b      4155           push r13
0x00004d2d      4154           push r12
0x00004d2f      4157           push r15
0x00004d31      4156           push r14
0x00004d33      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00004d38      4c8b442438     mov r8, qword [rsp + 0x38]
0x00004d3d      e85ec9ffff     call sym.imp.__fprintf_chk
0x00004d42      4883c430       add rsp, 0x30
0x00004d46      4883c428       add rsp, 0x28
0x00004d4a      5b             pop rbx
0x00004d4b      5d             pop rbp
0x00004d4c      415c           pop r12
0x00004d4e      415d           pop r13
0x00004d50      415e           pop r14
0x00004d52      415f           pop r15
0x00004d54      c3             ret
0x00004d55      0f1f00         nop dword [rax]
0x00004d58      4989c8         mov r8, rcx
0x00004d5b      4889d1         mov rcx, rdx
0x00004d5e      488d15af1300.  lea rdx, str.s__s                       ; 0x6114 ; "%s %s\n"
0x00004d65      be01000000     mov esi, 1
0x00004d6a      31c0           xor eax, eax
0x00004d6c      e82fc9ffff     call sym.imp.__fprintf_chk
0x00004d71      e9e6feffff     jmp 0x4c5c
0x00004d76      662e0f1f8400.  nop word cs:[rax + rax]
0x00004d80      4c8b5340       mov r10, qword [rbx + 0x40]
0x00004d84      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004d88      488d35b91500.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x6348 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x00004d8f      488b4310       mov rax, qword [rbx + 0x10]
0x00004d93      4c8b4308       mov r8, qword [rbx + 8]
0x00004d97      ba05000000     mov edx, 5
0x00004d9c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004da0      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004da4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004da8      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004dac      488b1b         mov rbx, qword [rbx]
0x00004daf      4c89542418     mov qword [rsp + 0x18], r10
0x00004db4      4c894c2410     mov qword [rsp + 0x10], r9
0x00004db9      48890424       mov qword [rsp], rax
0x00004dbd      4c89442408     mov qword [rsp + 8], r8
0x00004dc2      31ff           xor edi, edi
0x00004dc4      e8c7c6ffff     call sym.imp.dcgettext
0x00004dc9      4c8b542418     mov r10, qword [rsp + 0x18]
0x00004dce      4152           push r10
0x00004dd0      e93fffffff     jmp 0x4d14
0x00004dd5      0f1f00         nop dword [rax]
0x00004dd8      488b1b         mov rbx, qword [rbx]
0x00004ddb      488d353d1300.  lea rsi, str.Written_by__s.             ; 0x611f ; "Written by %s.\n"
0x00004de2      ba05000000     mov edx, 5
0x00004de7      31ff           xor edi, edi
0x00004de9      e8a2c6ffff     call sym.imp.dcgettext
0x00004dee      4883c428       add rsp, 0x28
0x00004df2      4889d9         mov rcx, rbx
0x00004df5      4889ef         mov rdi, rbp
0x00004df8      5b             pop rbx
0x00004df9      5d             pop rbp
0x00004dfa      415c           pop r12
0x00004dfc      415d           pop r13
0x00004dfe      415e           pop r14
0x00004e00      415f           pop r15
0x00004e02      4889c2         mov rdx, rax
0x00004e05      be01000000     mov esi, 1
0x00004e0a      31c0           xor eax, eax
0x00004e0c      e98fc8ffff     jmp sym.imp.__fprintf_chk
0x00004e11      0f1f80000000.  nop dword [rax]
0x00004e18      4c8b6308       mov r12, qword [rbx + 8]
0x00004e1c      488d350c1300.  lea rsi, str.Written_by__s_and__s.      ; 0x612f ; "Written by %s and %s.\n"
0x00004e23      488b1b         mov rbx, qword [rbx]
0x00004e26      ba05000000     mov edx, 5
0x00004e2b      31ff           xor edi, edi
0x00004e2d      e85ec6ffff     call sym.imp.dcgettext
0x00004e32      4883c428       add rsp, 0x28
0x00004e36      4d89e0         mov r8, r12
0x00004e39      4889d9         mov rcx, rbx
0x00004e3c      4889ef         mov rdi, rbp
0x00004e3f      4889c2         mov rdx, rax
0x00004e42      be01000000     mov esi, 1
0x00004e47      5b             pop rbx
0x00004e48      5d             pop rbp
0x00004e49      415c           pop r12
0x00004e4b      415d           pop r13
0x00004e4d      415e           pop r14
0x00004e4f      415f           pop r15
0x00004e51      31c0           xor eax, eax
0x00004e53      e948c8ffff     jmp sym.imp.__fprintf_chk
0x00004e58      0f1f84000000.  nop dword [rax + rax]
0x00004e60      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004e64      4c8b6308       mov r12, qword [rbx + 8]
0x00004e68      488d35d71200.  lea rsi, str.Written_by__s___s__and__s. ; 0x6146 ; "Written by %s, %s, and %s.\n"
0x00004e6f      488b1b         mov rbx, qword [rbx]
0x00004e72      ba05000000     mov edx, 5
0x00004e77      31ff           xor edi, edi
0x00004e79      e812c6ffff     call sym.imp.dcgettext
0x00004e7e      4883c428       add rsp, 0x28
0x00004e82      4d89e9         mov r9, r13
0x00004e85      4d89e0         mov r8, r12
0x00004e88      4889d9         mov rcx, rbx
0x00004e8b      4889ef         mov rdi, rbp
0x00004e8e      4889c2         mov rdx, rax
0x00004e91      5b             pop rbx
0x00004e92      5d             pop rbp
0x00004e93      415c           pop r12
0x00004e95      415d           pop r13
0x00004e97      415e           pop r14
0x00004e99      415f           pop r15
0x00004e9b      be01000000     mov esi, 1
0x00004ea0      31c0           xor eax, eax
0x00004ea2      e9f9c7ffff     jmp sym.imp.__fprintf_chk
0x00004ea7      660f1f840000.  nop word [rax + rax]
0x00004eb0      488d35c11300.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x6278 ; "Written by %s, %s, %s,\nand %s.\n"
0x00004eb7      ba05000000     mov edx, 5
0x00004ebc      31ff           xor edi, edi
0x00004ebe      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004ec2      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004ec6      4c8b6308       mov r12, qword [rbx + 8]
0x00004eca      488b1b         mov rbx, qword [rbx]
0x00004ecd      e8bec5ffff     call sym.imp.dcgettext
0x00004ed2      4883ec08       sub rsp, 8
0x00004ed6      4156           push r14
0x00004ed8      4889c2         mov rdx, rax
0x00004edb      4d89e9         mov r9, r13
0x00004ede      4d89e0         mov r8, r12
0x00004ee1      4889d9         mov rcx, rbx
0x00004ee4      4889ef         mov rdi, rbp
0x00004ee7      be01000000     mov esi, 1
0x00004eec      31c0           xor eax, eax
0x00004eee      e8adc7ffff     call sym.imp.__fprintf_chk
0x00004ef3      58             pop rax
0x00004ef4      5a             pop rdx
0x00004ef5      4883c428       add rsp, 0x28
0x00004ef9      5b             pop rbx
0x00004efa      5d             pop rbp
0x00004efb      415c           pop r12
0x00004efd      415d           pop r13
0x00004eff      415e           pop r14
0x00004f01      415f           pop r15
0x00004f03      c3             ret
0x00004f04      0f1f4000       nop dword [rax]
0x00004f08      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004f0c      488d35851300.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x6298 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00004f13      ba05000000     mov edx, 5
0x00004f18      31ff           xor edi, edi
0x00004f1a      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004f1e      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004f22      4c8b6308       mov r12, qword [rbx + 8]
0x00004f26      488b1b         mov rbx, qword [rbx]
0x00004f29      e862c5ffff     call sym.imp.dcgettext
0x00004f2e      4157           push r15
0x00004f30      eba4           jmp 0x4ed6
0x00004f32      660f1f440000   nop word [rax + rax]
0x00004f38      4c8b4308       mov r8, qword [rbx + 8]
0x00004f3c      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004f40      488d35791300.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x62c0 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00004f47      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004f4b      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004f4f      ba05000000     mov edx, 5
0x00004f54      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004f58      31ff           xor edi, edi
0x00004f5a      488b1b         mov rbx, qword [rbx]
0x00004f5d      4c890424       mov qword [rsp], r8
0x00004f61      e82ac5ffff     call sym.imp.dcgettext
0x00004f66      4883ec08       sub rsp, 8
0x00004f6a      4d89e9         mov r9, r13
0x00004f6d      4154           push r12
0x00004f6f      4157           push r15
0x00004f71      4156           push r14
0x00004f73      4c8b442420     mov r8, qword [rsp + 0x20]
0x00004f78      4889d9         mov rcx, rbx
0x00004f7b      4889c2         mov rdx, rax
0x00004f7e      4889ef         mov rdi, rbp
0x00004f81      be01000000     mov esi, 1
0x00004f86      31c0           xor eax, eax
0x00004f88      e813c7ffff     call sym.imp.__fprintf_chk
0x00004f8d      4883c420       add rsp, 0x20
0x00004f91      4883c428       add rsp, 0x28
0x00004f95      5b             pop rbx
0x00004f96      5d             pop rbp
0x00004f97      415c           pop r12
0x00004f99      415d           pop r13
0x00004f9b      415e           pop r14
0x00004f9d      415f           pop r15
0x00004f9f      c3             ret
0x00004fa0      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00004fa4      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004fa8      488d35391300.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x62e8 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x00004faf      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004fb3      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004fb7      ba05000000     mov edx, 5
0x00004fbc      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004fc0      4c8b4308       mov r8, qword [rbx + 8]
0x00004fc4      31ff           xor edi, edi
0x00004fc6      4c894c2408     mov qword [rsp + 8], r9
0x00004fcb      488b1b         mov rbx, qword [rbx]
0x00004fce      4c890424       mov qword [rsp], r8
0x00004fd2      e8b9c4ffff     call sym.imp.dcgettext
0x00004fd7      4155           push r13
0x00004fd9      4154           push r12
0x00004fdb      4157           push r15
0x00004fdd      4156           push r14
0x00004fdf      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00004fe4      eb8d           jmp 0x4f73
0x00004fe6      662e0f1f8400.  nop word cs:[rax + rax]
0x00004ff0      4c8b5340       mov r10, qword [rbx + 0x40]
0x00004ff4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004ff8      ba05000000     mov edx, 5
0x00004ffd      488b4310       mov rax, qword [rbx + 0x10]
0x00005001      4c8b4308       mov r8, qword [rbx + 8]
0x00005005      488d35741300.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x6380 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x0000500c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00005010      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005014      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005018      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000501c      4c89542418     mov qword [rsp + 0x18], r10
0x00005021      4c894c2410     mov qword [rsp + 0x10], r9
0x00005026      48890424       mov qword [rsp], rax
0x0000502a      4c89442408     mov qword [rsp + 8], r8
0x0000502f      488b1b         mov rbx, qword [rbx]
0x00005032      e98bfdffff     jmp 0x4dc2
0x00005037      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00005040      4531c9         xor r9d, r9d
0x00005043      49833800       cmp qword [r8], 0
0x00005047      7412           je 0x505b
0x00005049      0f1f80000000.  nop dword [rax]
0x00005050      4983c101       add r9, 1
0x00005054      4b833cc800     cmp qword [r8 + r9*8], 0
0x00005059      75f5           jne 0x5050
0x0000505b      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00005060      4883ec68       sub rsp, 0x68
0x00005064      4d89c2         mov r10, r8
0x00005067      4531c9         xor r9d, r9d
0x0000506a      64488b042528.  mov rax, qword fs:[0x28]
0x00005073      4889442458     mov qword [rsp + 0x58], rax
0x00005078      31c0           xor eax, eax
0x0000507a      4989e0         mov r8, rsp
0x0000507d      0f1f00         nop dword [rax]
0x00005080      418b02         mov eax, dword [r10]
0x00005083      83f82f         cmp eax, 0x2f
0x00005086      7742           ja 0x50ca
0x00005088      4189c3         mov r11d, eax
0x0000508b      4d035a10       add r11, qword [r10 + 0x10]
0x0000508f      83c008         add eax, 8
0x00005092      418902         mov dword [r10], eax
0x00005095      498b03         mov rax, qword [r11]
0x00005098      4885c0         test rax, rax
0x0000509b      4b8904c8       mov qword [r8 + r9*8], rax
0x0000509f      740a           je 0x50ab
0x000050a1      4983c101       add r9, 1
0x000050a5      4983f90a       cmp r9, 0xa
0x000050a9      75d5           jne 0x5080
0x000050ab      e870fbffff     call sym.version_etc_arn
0x000050b0      488b442458     mov rax, qword [rsp + 0x58]
0x000050b5      644833042528.  xor rax, qword fs:[0x28]
0x000050be      7505           jne 0x50c5
0x000050c0      4883c468       add rsp, 0x68
0x000050c4      c3             ret
0x000050c5      e8f6c3ffff     call sym.imp.__stack_chk_fail
0x000050ca      4d8b5a08       mov r11, qword [r10 + 8]
0x000050ce      498d4308       lea rax, [r11 + 8]
0x000050d2      49894208       mov qword [r10 + 8], rax
0x000050d6      ebbd           jmp 0x5095
0x000050d8      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x000050e0      55             push rbp
0x000050e1      53             push rbx
0x000050e2      41ba20000000   mov r10d, 0x20                          ; "@"
0x000050e8      4531db         xor r11d, r11d
0x000050eb      4881ecb80000.  sub rsp, 0xb8
0x000050f2      64488b042528.  mov rax, qword fs:[0x28]
0x000050fb      4889442478     mov qword [rsp + 0x78], rax
0x00005100      31c0           xor eax, eax
0x00005102      488d8424d000.  lea rax, [rsp + 0xd0]
0x0000510a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00005112      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x0000511a      4c8d442420     lea r8, [rsp + 0x20]
0x0000511f      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00005127      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x0000512f      4889442410     mov qword [rsp + 0x10], rax
0x00005134      488d84248000.  lea rax, [rsp + 0x80]
0x0000513c      4531c9         xor r9d, r9d
0x0000513f      4889442418     mov qword [rsp + 0x18], rax
0x00005144      4889c5         mov rbp, rax
0x00005147      660f1f840000.  nop word [rax + rax]
0x00005150      4183fa2f       cmp r10d, 0x2f
0x00005154      7756           ja 0x51ac
0x00005156      4489d0         mov eax, r10d
0x00005159      41bb01000000   mov r11d, 1
0x0000515f      4183c208       add r10d, 8
0x00005163      4801e8         add rax, rbp
0x00005166      488b00         mov rax, qword [rax]
0x00005169      4885c0         test rax, rax
0x0000516c      4b8904c8       mov qword [r8 + r9*8], rax
0x00005170      740a           je 0x517c
0x00005172      4983c101       add r9, 1
0x00005176      4983f90a       cmp r9, 0xa
0x0000517a      75d4           jne 0x5150
0x0000517c      4584db         test r11b, r11b
0x0000517f      7524           jne 0x51a5
0x00005181      e89afaffff     call sym.version_etc_arn
0x00005186      488b442478     mov rax, qword [rsp + 0x78]
0x0000518b      644833042528.  xor rax, qword fs:[0x28]
0x00005194      750a           jne 0x51a0
0x00005196      4881c4b80000.  add rsp, 0xb8
0x0000519d      5b             pop rbx
0x0000519e      5d             pop rbp
0x0000519f      c3             ret
0x000051a0      e81bc3ffff     call sym.imp.__stack_chk_fail
0x000051a5      4489542408     mov dword [rsp + 8], r10d
0x000051aa      ebd5           jmp 0x5181
0x000051ac      4889d8         mov rax, rbx
0x000051af      4883c308       add rbx, 8
0x000051b3      ebb1           jmp 0x5166
0x000051b5      90             nop
0x000051b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x000051c0      53             push rbx
0x000051c1      488d359a0f00.  lea rsi, str.Report_bugs_to:__s         ; 0x6162 ; "\nReport bugs to: %s\n"
0x000051c8      ba05000000     mov edx, 5
0x000051cd      31ff           xor edi, edi
0x000051cf      e8bcc2ffff     call sym.imp.dcgettext
0x000051d4      488d159c0f00.  lea rdx, str.bug_coreutils_gnu.org      ; 0x6177 ; "bug-coreutils@gnu.org"
0x000051db      4889c6         mov rsi, rax
0x000051de      bf01000000     mov edi, 1
0x000051e3      31c0           xor eax, eax
0x000051e5      e846c4ffff     call sym.imp.__printf_chk
0x000051ea      488d359c0f00.  lea rsi, str.s_home_page:___s           ; 0x618d ; "%s home page: <%s>\n"
0x000051f1      ba05000000     mov edx, 5
0x000051f6      31ff           xor edi, edi
0x000051f8      e893c2ffff     call sym.imp.dcgettext
0x000051fd      488d0dd40800.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x5ad8 ; "https://www.gnu.org/software/coreutils/"
0x00005204      488d15b50600.  lea rdx, str.GNU_coreutils              ; 0x58c0 ; "GNU coreutils"
0x0000520b      4889c6         mov rsi, rax
0x0000520e      bf01000000     mov edi, 1
0x00005213      31c0           xor eax, eax
0x00005215      e816c4ffff     call sym.imp.__printf_chk
0x0000521a      488b1d672e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00005221      488d35981100.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x63c0 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00005228      31ff           xor edi, edi
0x0000522a      ba05000000     mov edx, 5
0x0000522f      e85cc2ffff     call sym.imp.dcgettext
0x00005234      4889de         mov rsi, rbx
0x00005237      4889c7         mov rdi, rax
0x0000523a      5b             pop rbx
0x0000523b      e940c3ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00005240      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00005241      4889fb         mov rbx, rdi
0x00005244      e887c3ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00005249      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x0000524c      7505           jne 0x5253
0x0000524e      4885db         test rbx, rbx
0x00005251      7502           jne 0x5255
0x00005253      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00005254      c3             ret
0x00005255      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x0000525a      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00005260      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00005263      48f7e6         mul rsi
0x00005266      4889c7         mov rdi, rax
0x00005269      0f90c0         seto al
0x0000526c      4885ff         test rdi, rdi
0x0000526f      780a           js 0x527b
0x00005271      0fb6c0         movzx eax, al
0x00005274      4885c0         test rax, rax
0x00005277      7502           jne 0x527b
0x00005279      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x0000527b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x0000527f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00005284      6690           nop
0x00005286      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00005290      ebae           jmp sym.xmalloc
0x00005292      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00005296      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x000052a0      4885f6         test rsi, rsi
0x000052a3      53             push rbx
0x000052a4      4889f3         mov rbx, rsi
0x000052a7      7505           jne 0x52ae
0x000052a9      4885ff         test rdi, rdi
0x000052ac      751a           jne 0x52c8
0x000052ae      4889de         mov rsi, rbx
0x000052b1      e85ac3ffff     call sym.imp.realloc
0x000052b6      4885c0         test rax, rax
0x000052b9      7505           jne 0x52c0
0x000052bb      4885db         test rbx, rbx
0x000052be      7511           jne 0x52d1                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x000052c0      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x000052c1      c3             ret
0x000052c2      660f1f440000   nop word [rax + rax]
0x000052c8      e823c1ffff     call sym.imp.free
0x000052cd      31c0           xor eax, eax
0x000052cf      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x000052d0      c3             ret
0x000052d1      e8ba010000     call sym.xalloc_die
0x000052d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x000052e0      4889f0         mov rax, rsi
0x000052e3      48f7e2         mul rdx
0x000052e6      4889c6         mov rsi, rax
0x000052e9      0f90c0         seto al
0x000052ec      4885f6         test rsi, rsi
0x000052ef      780a           js 0x52fb
0x000052f1      0fb6c0         movzx eax, al
0x000052f4      4885c0         test rax, rax
0x000052f7      7502           jne 0x52fb
0x000052f9      eba5           jmp sym.xrealloc
0x000052fb      4883ec08       sub rsp, 8
0x000052ff      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00005304      6690           nop
0x00005306      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00005310      4885ff         test rdi, rdi
0x00005313      4989d1         mov r9, rdx
0x00005316      488b0e         mov rcx, qword [rsi]
0x00005319      7435           je 0x5350
0x0000531b      31d2           xor edx, edx
0x0000531d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00005327      49f7f1         div r9
0x0000532a      4839c8         cmp rax, rcx
0x0000532d      763c           jbe 0x536b
0x0000532f      4889c8         mov rax, rcx
0x00005332      48d1e8         shr rax, 1
0x00005335      488d4c0801     lea rcx, [rax + rcx + 1]
0x0000533a      48890e         mov qword [rsi], rcx
0x0000533d      490fafc9       imul rcx, r9
0x00005341      4889ce         mov rsi, rcx
0x00005344      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00005349      0f1f80000000.  nop dword [rax]
0x00005350      4885c9         test rcx, rcx
0x00005353      7423           je 0x5378
0x00005355      4889c8         mov rax, rcx
0x00005358      49f7e1         mul r9
0x0000535b      0f90c2         seto dl
0x0000535e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00005361      0fb6d2         movzx edx, dl
0x00005364      7805           js 0x536b
0x00005366      4885d2         test rdx, rdx
0x00005369      74cf           je 0x533a
0x0000536b      4883ec08       sub rsp, 8
0x0000536f      e81c010000     call sym.xalloc_die
0x00005374      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00005378      31d2           xor edx, edx
0x0000537a      b880000000     mov eax, 0x80
0x0000537f      4531c0         xor r8d, r8d
0x00005382      49f7f1         div r9
0x00005385      4885c0         test rax, rax
0x00005388      410f94c0       sete r8b
0x0000538c      498d0c00       lea rcx, [r8 + rax]
0x00005390      ebc3           jmp 0x5355
0x00005392      0f1f4000       nop dword [rax]
0x00005396      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x000053a0      4885ff         test rdi, rdi
0x000053a3      488b06         mov rax, qword [rsi]
0x000053a6      7428           je 0x53d0
0x000053a8      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x000053b2      4839d0         cmp rax, rdx
0x000053b5      772a           ja 0x53e1
0x000053b7      4889c2         mov rdx, rax
0x000053ba      48d1ea         shr rdx, 1
0x000053bd      488d440201     lea rax, [rdx + rax + 1]
0x000053c2      488906         mov qword [rsi], rax
0x000053c5      4889c6         mov rsi, rax
0x000053c8      e9d3feffff     jmp sym.xrealloc
0x000053cd      0f1f00         nop dword [rax]
0x000053d0      4885c0         test rax, rax
0x000053d3      ba80000000     mov edx, 0x80
0x000053d8      480f44c2       cmove rax, rdx
0x000053dc      4885c0         test rax, rax
0x000053df      79e1           jns 0x53c2
0x000053e1      4883ec08       sub rsp, 8
0x000053e5      e8a6000000     call sym.xalloc_die
0x000053ea      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x000053f0      53             push rbx
0x000053f1      4889fb         mov rbx, rdi
0x000053f4      e847feffff     call sym.xmalloc
0x000053f9      4889da         mov rdx, rbx
0x000053fc      31f6           xor esi, esi
0x000053fe      4889c7         mov rdi, rax
0x00005401      5b             pop rbx
0x00005402      e929c1ffff     jmp sym.imp.memset
0x00005407      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00005410      4889f8         mov rax, rdi
0x00005413      4883ec08       sub rsp, 8
0x00005417      48f7e6         mul rsi
0x0000541a      0f90c2         seto dl
0x0000541d      4885c0         test rax, rax
0x00005420      7817           js 0x5439
0x00005422      0fb6d2         movzx edx, dl
0x00005425      4885d2         test rdx, rdx
0x00005428      750f           jne 0x5439
0x0000542a      e861c1ffff     call sym.imp.calloc
0x0000542f      4885c0         test rax, rax
0x00005432      7405           je 0x5439
0x00005434      4883c408       add rsp, 8
0x00005438      c3             ret
0x00005439      e852000000     call sym.xalloc_die
0x0000543e      6690           nop
;-- xmemdup:
0x00005440      55             push rbp
0x00005441      53             push rbx
0x00005442      4889fd         mov rbp, rdi
0x00005445      4889f7         mov rdi, rsi
0x00005448      4889f3         mov rbx, rsi
0x0000544b      4883ec08       sub rsp, 8
0x0000544f      e8ecfdffff     call sym.xmalloc
0x00005454      4883c408       add rsp, 8
0x00005458      4889da         mov rdx, rbx
0x0000545b      4889ee         mov rsi, rbp
0x0000545e      5b             pop rbx
0x0000545f      5d             pop rbp
0x00005460      4889c7         mov rdi, rax
0x00005463      e948c1ffff     jmp sym.imp.memcpy
0x00005468      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00005470      53             push rbx
0x00005471      4889fb         mov rbx, rdi
0x00005474      e837c0ffff     call sym.imp.strlen
0x00005479      4889df         mov rdi, rbx
0x0000547c      488d7001       lea rsi, [rax + 1]
0x00005480      5b             pop rbx
0x00005481      ebbd           jmp sym.xmemdup
0x00005483      662e0f1f8400.  nop word cs:[rax + rax]
0x0000548d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00005490      488d35d80f00.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x646f ; "memory exhausted"
0x00005497      4883ec08       sub rsp, 8
0x0000549b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x000054a0      31ff           xor edi, edi
0x000054a2      e8e9bfffff     call sym.imp.dcgettext
0x000054a7      8b3d6b2b2000   mov edi, dword [obj.exit_failure]       ; [0x208018:4]=1
0x000054ad      488d15230700.  lea rdx, [0x00005bd7]                   ; "%s"
0x000054b4      4889c1         mov rcx, rax
0x000054b7      31f6           xor esi, esi
0x000054b9      31c0           xor eax, eax
0x000054bb      e880c1ffff     call sym.imp.error
0x000054c0      e83bbfffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x000054c5      662e0f1f8400.  nop word cs:[rax + rax]
0x000054cf      90             nop
;-- rpl_fclose:
0x000054d0      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x000054d2      55             push rbp
0x000054d3      53             push rbx
0x000054d4      4889fb         mov rbx, rdi
0x000054d7      e8e4c0ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x000054dc      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x000054de      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x000054e1      7854           js 0x5537                               ; ../coreutils-8.31/lib/fclose.c:66
0x000054e3      e818c1ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x000054e8      85c0           test eax, eax
0x000054ea      752c           jne 0x5518
0x000054ec      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x000054ef      e85c000000     call sym.rpl_fflush
0x000054f4      85c0           test eax, eax
0x000054f6      743c           je 0x5534
0x000054f8      e813bfffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x000054fd      448b20         mov r12d, dword [rax]
0x00005500      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00005503      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00005506      e865bfffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x0000550b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x0000550e      7530           jne 0x5540
0x00005510      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00005511      5d             pop rbp
0x00005512      415c           pop r12
0x00005514      c3             ret
0x00005515      0f1f00         nop dword [rax]
0x00005518      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x0000551b      e8a0c0ffff     call sym.imp.fileno
0x00005520      31f6           xor esi, esi
0x00005522      ba01000000     mov edx, 1
0x00005527      89c7           mov edi, eax
0x00005529      e8e2bfffff     call sym.imp.lseek
0x0000552e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005532      75b8           jne 0x54ec
0x00005534      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00005537      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00005538      5d             pop rbp
0x00005539      415c           pop r12
0x0000553b      e930bfffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00005540      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00005544      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00005549      ebc5           jmp 0x5510
0x0000554b      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x00005550      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00005553      53             push rbx
0x00005554      4889fb         mov rbx, rdi
0x00005557      7411           je 0x556a                               ; ../coreutils-8.31/lib/fflush.c:150
0x00005559      e8a2c0ffff     call sym.imp.__freading
0x0000555e      85c0           test eax, eax
0x00005560      7408           je 0x556a
0x00005562      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00005568      750e           jne 0x5578
0x0000556a      4889df         mov rdi, rbx
0x0000556d      5b             pop rbx
0x0000556e      e96dc0ffff     jmp sym.imp.fflush
0x00005573      0f1f440000     nop dword [rax + rax]
0x00005578      4889df         mov rdi, rbx
0x0000557b      ba01000000     mov edx, 1
0x00005580      31f6           xor esi, esi
0x00005582      e809000000     call sym.rpl_fseeko
0x00005587      4889df         mov rdi, rbx
0x0000558a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x0000558b      e950c0ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00005590      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00005594      48394710       cmp qword [rdi + 0x10], rax
0x00005598      7406           je 0x55a0                               ; ../coreutils-8.31/lib/fseeko.c:32
0x0000559a      e9c1c0ffff     jmp sym.imp.fseeko
0x0000559f      90             nop
0x000055a0      488b4720       mov rax, qword [rdi + 0x20]
0x000055a4      48394728       cmp qword [rdi + 0x28], rax
0x000055a8      75f0           jne 0x559a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x000055aa      48837f4800     cmp qword [rdi + 0x48], 0
0x000055af      75e9           jne 0x559a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x000055b1      4154           push r12
0x000055b3      55             push rbp
0x000055b4      4189d4         mov r12d, edx
0x000055b7      53             push rbx
0x000055b8      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x000055bb      4889fb         mov rbx, rdi
0x000055be      e8fdbfffff     call sym.imp.fileno
0x000055c3      4489e2         mov edx, r12d
0x000055c6      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x000055c9      89c7           mov edi, eax
0x000055cb      e840bfffff     call sym.imp.lseek
0x000055d0      4883f8ff       cmp rax, 0xffffffffffffffff
0x000055d4      740c           je 0x55e2
0x000055d6      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x000055d9      488983900000.  mov qword [rbx + 0x90], rax
0x000055e0      31c0           xor eax, eax
0x000055e2      5b             pop rbx
0x000055e3      5d             pop rbp
0x000055e4      415c           pop r12
0x000055e6      c3             ret
0x000055e7      660f1f840000.  nop word [rax + rax]
;-- rpl_mbrtowc:
0x000055f0      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x000055f2      4154           push r12
0x000055f4      4989f5         mov r13, rsi
0x000055f7      55             push rbp
0x000055f8      53             push rbx
0x000055f9      4889fb         mov rbx, rdi
0x000055fc      4989d4         mov r12, rdx
0x000055ff      4883ec18       sub rsp, 0x18
0x00005603      64488b042528.  mov rax, qword fs:[0x28]
0x0000560c      4889442408     mov qword [rsp + 8], rax
0x00005611      31c0           xor eax, eax
0x00005613      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00005618      4885ff         test rdi, rdi
0x0000561b      480f44d8       cmove rbx, rax
0x0000561f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00005622      e8b9beffff     call sym.imp.mbrtowc
0x00005627      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x0000562b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x0000562e      7620           jbe 0x5650                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00005630      4d85e4         test r12, r12
0x00005633      741b           je 0x5650
0x00005635      31ff           xor edi, edi
0x00005637      e8c4000000     call sym.hard_locale
0x0000563c      84c0           test al, al
0x0000563e      7510           jne 0x5650
0x00005640      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00005645      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x0000564a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x0000564c      0f1f4000       nop dword [rax]
0x00005650      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00005655      644833142528.  xor rdx, qword fs:[0x28]
0x0000565e      4889e8         mov rax, rbp
0x00005661      750b           jne 0x566e
0x00005663      4883c418       add rsp, 0x18
0x00005667      5b             pop rbx
0x00005668      5d             pop rbp
0x00005669      415c           pop r12
0x0000566b      415d           pop r13
0x0000566d      c3             ret
0x0000566e      e84dbeffff     call sym.imp.__stack_chk_fail
0x00005673      662e0f1f8400.  nop word cs:[rax + rax]
0x0000567d      0f1f00         nop dword [rax]
;-- close_stream:
0x00005680      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00005682      55             push rbp
0x00005683      4889fd         mov rbp, rdi
0x00005686      53             push rbx
0x00005687      e8b4bdffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x0000568c      8b5d00         mov ebx, dword [rbp]
0x0000568f      4889ef         mov rdi, rbp
0x00005692      4989c4         mov r12, rax
0x00005695      e836feffff     call sym.rpl_fclose
0x0000569a      83e320         and ebx, 0x20                           ; "@"
0x0000569d      85db           test ebx, ebx
0x0000569f      7517           jne 0x56b8
0x000056a1      85c0           test eax, eax
0x000056a3      740a           je 0x56af                               ; stdio.h:-186
0x000056a5      4d85e4         test r12, r12                           ; stdio.h:-178
0x000056a8      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000056ad      7439           je 0x56e8
0x000056af      5b             pop rbx
0x000056b0      5d             pop rbp
0x000056b1      415c           pop r12
0x000056b3      c3             ret
0x000056b4      0f1f4000       nop dword [rax]
0x000056b8      85c0           test eax, eax
0x000056ba      751c           jne 0x56d8
0x000056bc      e84fbdffff     call sym.imp.__errno_location
0x000056c1      c70000000000   mov dword [rax], 0
0x000056c7      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000056cc      5b             pop rbx
0x000056cd      5d             pop rbp
0x000056ce      415c           pop r12
0x000056d0      c3             ret
0x000056d1      0f1f80000000.  nop dword [rax]
0x000056d8      5b             pop rbx
0x000056d9      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000056de      5d             pop rbp                                 ; stdio.h:-186
0x000056df      415c           pop r12
0x000056e1      c3             ret
0x000056e2      660f1f440000   nop word [rax + rax]
0x000056e8      e823bdffff     call sym.imp.__errno_location
0x000056ed      833809         cmp dword [rax], 9
0x000056f0      5b             pop rbx
0x000056f1      5d             pop rbp
0x000056f2      415c           pop r12                                 ; stdio.h:-178
0x000056f4      0f95c0         setne al
0x000056f7      0fb6c0         movzx eax, al
0x000056fa      f7d8           neg eax
0x000056fc      c3             ret
0x000056fd      0f1f00         nop dword [rax]
;-- hard_locale:
0x00005700      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00005704      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00005706      e815bfffff     call sym.imp.setlocale
0x0000570b      4889c2         mov rdx, rax
0x0000570e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00005713      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00005716      741d           je 0x5735
0x00005718      488d3d610d00.  lea rdi, [0x00006480]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x0000571f      b902000000     mov ecx, 2
0x00005724      4889d6         mov rsi, rdx
0x00005727      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005729      0f97c1         seta cl
0x0000572c      80d900         sbb cl, 0
0x0000572f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00005731      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00005733      750b           jne 0x5740
0x00005735      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00005739      c3             ret
0x0000573a      660f1f440000   nop word [rax + rax]
0x00005740      488d3d3b0d00.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x6482 ; "POSIX"
0x00005747      b906000000     mov ecx, 6
0x0000574c      4889d6         mov rsi, rdx
0x0000574f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005751      0f97c0         seta al
0x00005754      1c00           sbb al, 0
0x00005756      84c0           test al, al
0x00005758      0f95c0         setne al
0x0000575b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0000575f      c3             ret
;-- locale_charset:
0x00005760      4883ec08       sub rsp, 8
0x00005764      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00005769      e882beffff     call sym.imp.nl_langinfo
0x0000576e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00005771      741d           je 0x5790
0x00005773      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00005776      488d150b0d00.  lea rdx, str.ASCII                      ; 0x6488 ; "ASCII"
0x0000577d      480f44c2       cmove rax, rdx
0x00005781      4883c408       add rsp, 8
0x00005785      c3             ret
0x00005786      662e0f1f8400.  nop word cs:[rax + rax]
0x00005790      488d05f10c00.  lea rax, str.ASCII                      ; 0x6488 ; "ASCII"
0x00005797      4883c408       add rsp, 8
0x0000579b      c3             ret
0x0000579c      0f1f4000       nop dword [rax]
;-- __libc_csu_init:
0x000057a0      4157           push r15
0x000057a2      4156           push r14
0x000057a4      4989d7         mov r15, rdx
0x000057a7      4155           push r13
0x000057a9      4154           push r12
0x000057ab      4c8d25be2320.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x207b70 ; "P\x1f"
0x000057b2      55             push rbp
0x000057b3      488d2dbe2320.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x207b78
0x000057ba      53             push rbx
0x000057bb      4189fd         mov r13d, edi
0x000057be      4989f6         mov r14, rsi
0x000057c1      4c29e5         sub rbp, r12
0x000057c4      4883ec08       sub rsp, 8
0x000057c8      48c1fd03       sar rbp, 3
0x000057cc      e8e7bbffff     call sym._init
0x000057d1      4885ed         test rbp, rbp
0x000057d4      7420           je 0x57f6
0x000057d6      31db           xor ebx, ebx
0x000057d8      0f1f84000000.  nop dword [rax + rax]
0x000057e0      4c89fa         mov rdx, r15
0x000057e3      4c89f6         mov rsi, r14
0x000057e6      4489ef         mov edi, r13d
0x000057e9      41ff14dc       call qword [r12 + rbx*8]
0x000057ed      4883c301       add rbx, 1
0x000057f1      4839dd         cmp rbp, rbx
0x000057f4      75ea           jne 0x57e0
0x000057f6      4883c408       add rsp, 8
0x000057fa      5b             pop rbx
0x000057fb      5d             pop rbp
0x000057fc      415c           pop r12
0x000057fe      415d           pop r13
0x00005800      415e           pop r14
0x00005802      415f           pop r15
0x00005804      c3             ret
0x00005805      90             nop
0x00005806      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00005810      f3c3           ret
0x00005812      662e0f1f8400.  nop word cs:[rax + rax]
0x0000581c      0f1f4000       nop dword [rax]
;-- atexit:
0x00005820      488b15e12720.  mov rdx, qword [obj.__dso_handle]       ; [0x208008:8]=0x208008 obj.__dso_handle
0x00005827      31f6           xor esi, esi
0x00005829      e942beffff     jmp sym.imp.__cxa_atexit
0x0000582e      0000           add byte [rax], al
