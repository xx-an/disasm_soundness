;-- section..plt:
;-- .plt:
0x000017e0      ff35ea952000   push qword [0x0020add0]                 ; [12] -r-x section size 992 named .plt
0x000017e6      ff25ec952000   jmp qword [0x0020add8]                  ; [0x20add8:8]=0
0x000017ec      0f1f4000       nop dword [rax]
;-- imp.utmpxname:
0x000017f0      ff25ea952000   jmp qword [reloc.utmpxname]             ; [0x20ade0:8]=0x17f6
0x000017f6      6800000000     push 0
0x000017fb      e9e0ffffff     jmp sym..plt
;-- imp.__snprintf_chk:
0x00001800      ff25e2952000   jmp qword [reloc.__snprintf_chk]        ; [0x20ade8:8]=0x1806
0x00001806      6801000000     push 1
0x0000180b      e9d0ffffff     jmp sym..plt
;-- imp.free:
0x00001810      ff25da952000   jmp qword [reloc.free]                  ; [0x20adf0:8]=0x1816
0x00001816      6802000000     push 2
0x0000181b      e9c0ffffff     jmp sym..plt
;-- imp.localtime:
0x00001820      ff25d2952000   jmp qword [reloc.localtime]             ; [0x20adf8:8]=0x1826 ; "&\x18"
0x00001826      6803000000     push 3
0x0000182b      e9b0ffffff     jmp sym..plt
;-- imp.abort:
0x00001830      ff25ca952000   jmp qword [reloc.abort]                 ; [0x20ae00:8]=0x1836 ; "6\x18"
0x00001836      6804000000     push 4
0x0000183b      e9a0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x00001840      ff25c2952000   jmp qword [reloc.__errno_location]      ; [0x20ae08:8]=0x1846 ; "F\x18"
0x00001846      6805000000     push 5
0x0000184b      e990ffffff     jmp sym..plt
;-- imp.strncpy:
0x00001850      ff25ba952000   jmp qword [reloc.strncpy]               ; [0x20ae10:8]=0x1856 ; "V\x18"
0x00001856      6806000000     push 6
0x0000185b      e980ffffff     jmp sym..plt
;-- imp.strncmp:
0x00001860      ff25b2952000   jmp qword [reloc.strncmp]               ; [0x20ae18:8]=0x1866 ; "f\x18"
0x00001866      6807000000     push 7
0x0000186b      e970ffffff     jmp sym..plt
;-- imp._exit:
0x00001870      ff25aa952000   jmp qword [reloc._exit]                 ; [0x20ae20:8]=0x1876 ; "v\x18"
0x00001876      6808000000     push 8
0x0000187b      e960ffffff     jmp sym..plt
;-- imp.strcpy:
0x00001880      ff25a2952000   jmp qword [reloc.strcpy]                ; [0x20ae28:8]=0x1886
0x00001886      6809000000     push 9
0x0000188b      e950ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001890      ff259a952000   jmp qword [reloc.__fpending]            ; [0x20ae30:8]=0x1896
0x00001896      680a000000     push 0xa
0x0000189b      e940ffffff     jmp sym..plt
;-- imp.puts:
0x000018a0      ff2592952000   jmp qword [reloc.puts]                  ; [0x20ae38:8]=0x18a6
0x000018a6      680b000000     push 0xb
0x000018ab      e930ffffff     jmp sym..plt
;-- imp.textdomain:
0x000018b0      ff258a952000   jmp qword [reloc.textdomain]            ; [0x20ae40:8]=0x18b6
0x000018b6      680c000000     push 0xc
0x000018bb      e920ffffff     jmp sym..plt
;-- imp.endutxent:
0x000018c0      ff2582952000   jmp qword [reloc.endutxent]             ; [0x20ae48:8]=0x18c6
0x000018c6      680d000000     push 0xd
0x000018cb      e910ffffff     jmp sym..plt
;-- imp.fclose:
0x000018d0      ff257a952000   jmp qword [reloc.fclose]                ; [0x20ae50:8]=0x18d6
0x000018d6      680e000000     push 0xe
0x000018db      e900ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x000018e0      ff2572952000   jmp qword [reloc.bindtextdomain]        ; [0x20ae58:8]=0x18e6
0x000018e6      680f000000     push 0xf
0x000018eb      e9f0feffff     jmp sym..plt
;-- imp.dcgettext:
0x000018f0      ff256a952000   jmp qword [reloc.dcgettext]             ; [0x20ae60:8]=0x18f6
0x000018f6      6810000000     push 0x10
0x000018fb      e9e0feffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001900      ff2562952000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x20ae68:8]=0x1906
0x00001906      6811000000     push 0x11
0x0000190b      e9d0feffff     jmp sym..plt
;-- imp.strlen:
0x00001910      ff255a952000   jmp qword [reloc.strlen]                ; [0x20ae70:8]=0x1916
0x00001916      6812000000     push 0x12
0x0000191b      e9c0feffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001920      ff2552952000   jmp qword [reloc.__stack_chk_fail]      ; [0x20ae78:8]=0x1926 ; "&\x19"
0x00001926      6813000000     push 0x13
0x0000192b      e9b0feffff     jmp sym..plt
;-- imp.getopt_long:
0x00001930      ff254a952000   jmp qword [reloc.getopt_long]           ; [0x20ae80:8]=0x1936 ; "6\x19"
0x00001936      6814000000     push 0x14
0x0000193b      e9a0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001940      ff2542952000   jmp qword [reloc.mbrtowc]               ; [0x20ae88:8]=0x1946 ; "F\x19"
0x00001946      6815000000     push 0x15
0x0000194b      e990feffff     jmp sym..plt
;-- imp.strchr:
0x00001950      ff253a952000   jmp qword [reloc.strchr]                ; [0x20ae90:8]=0x1956 ; "V\x19"
0x00001956      6816000000     push 0x16
0x0000195b      e980feffff     jmp sym..plt
;-- imp.gai_strerror:
0x00001960      ff2532952000   jmp qword [reloc.gai_strerror]          ; [0x20ae98:8]=0x1966 ; "f\x19"
0x00001966      6817000000     push 0x17
0x0000196b      e970feffff     jmp sym..plt
;-- imp.strrchr:
0x00001970      ff252a952000   jmp qword [reloc.strrchr]               ; [0x20aea0:8]=0x1976 ; "v\x19"
0x00001976      6818000000     push 0x18
0x0000197b      e960feffff     jmp sym..plt
;-- imp.lseek:
0x00001980      ff2522952000   jmp qword [reloc.lseek]                 ; [0x20aea8:8]=0x1986
0x00001986      6819000000     push 0x19
0x0000198b      e950feffff     jmp sym..plt
;-- imp.__assert_fail:
0x00001990      ff251a952000   jmp qword [reloc.__assert_fail]         ; [0x20aeb0:8]=0x1996
0x00001996      681a000000     push 0x1a
0x0000199b      e940feffff     jmp sym..plt
;-- imp.memset:
0x000019a0      ff2512952000   jmp qword [reloc.memset]                ; [0x20aeb8:8]=0x19a6
0x000019a6      681b000000     push 0x1b
0x000019ab      e930feffff     jmp sym..plt
;-- imp.strncat:
0x000019b0      ff250a952000   jmp qword [reloc.strncat]               ; [0x20aec0:8]=0x19b6
0x000019b6      681c000000     push 0x1c
0x000019bb      e920feffff     jmp sym..plt
;-- imp.memcmp:
0x000019c0      ff2502952000   jmp qword [reloc.memcmp]                ; [0x20aec8:8]=0x19c6
0x000019c6      681d000000     push 0x1d
0x000019cb      e910feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x000019d0      ff25fa942000   jmp qword [reloc.fputs_unlocked]        ; [0x20aed0:8]=0x19d6
0x000019d6      681e000000     push 0x1e
0x000019db      e900feffff     jmp sym..plt
;-- imp.calloc:
0x000019e0      ff25f2942000   jmp qword [reloc.calloc]                ; [0x20aed8:8]=0x19e6
0x000019e6      681f000000     push 0x1f
0x000019eb      e9f0fdffff     jmp sym..plt
;-- imp.setutxent:
0x000019f0      ff25ea942000   jmp qword [reloc.setutxent]             ; [0x20aee0:8]=0x19f6
0x000019f6      6820000000     push 0x20                               ; "@"
0x000019fb      e9e0fdffff     jmp sym..plt
;-- imp.memcpy:
0x00001a00      ff25e2942000   jmp qword [reloc.memcpy]                ; [0x20aee8:8]=0x1a06
0x00001a06      6821000000     push 0x21                               ; '!'
0x00001a0b      e9d0fdffff     jmp sym..plt
;-- imp.kill:
0x00001a10      ff25da942000   jmp qword [reloc.kill]                  ; [0x20aef0:8]=0x1a16
0x00001a16      6822000000     push 0x22                               ; '"'
0x00001a1b      e9c0fdffff     jmp sym..plt
;-- imp.time:
0x00001a20      ff25d2942000   jmp qword [reloc.time]                  ; [0x20aef8:8]=0x1a26 ; "&\x1a"
0x00001a26      6823000000     push 0x23                               ; '#'
0x00001a2b      e9b0fdffff     jmp sym..plt
;-- imp.fileno:
0x00001a30      ff25ca942000   jmp qword [reloc.fileno]                ; [0x20af00:8]=0x1a36 ; "6\x1a"
0x00001a36      6824000000     push 0x24                               ; '$'
0x00001a3b      e9a0fdffff     jmp sym..plt
;-- imp.__xstat:
0x00001a40      ff25c2942000   jmp qword [reloc.__xstat]               ; [0x20af08:8]=0x1a46 ; "F\x1a"
0x00001a46      6825000000     push 0x25                               ; '%'
0x00001a4b      e990fdffff     jmp sym..plt
;-- imp.malloc:
0x00001a50      ff25ba942000   jmp qword [reloc.malloc]                ; [0x20af10:8]=0x1a56 ; "V\x1a"
0x00001a56      6826000000     push 0x26                               ; '&'
0x00001a5b      e980fdffff     jmp sym..plt
;-- imp.fflush:
0x00001a60      ff25b2942000   jmp qword [reloc.fflush]                ; [0x20af18:8]=0x1a66 ; "f\x1a"
0x00001a66      6827000000     push 0x27                               ; '''
0x00001a6b      e970fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001a70      ff25aa942000   jmp qword [reloc.nl_langinfo]           ; [0x20af20:8]=0x1a76 ; "v\x1a"
0x00001a76      6828000000     push 0x28                               ; '('
0x00001a7b      e960fdffff     jmp sym..plt
;-- imp.__freading:
0x00001a80      ff25a2942000   jmp qword [reloc.__freading]            ; [0x20af28:8]=0x1a86
0x00001a86      6829000000     push 0x29                               ; ')'
0x00001a8b      e950fdffff     jmp sym..plt
;-- imp.ttyname:
0x00001a90      ff259a942000   jmp qword [reloc.ttyname]               ; [0x20af30:8]=0x1a96
0x00001a96      682a000000     push 0x2a                               ; '*'
0x00001a9b      e940fdffff     jmp sym..plt
;-- imp.realloc:
0x00001aa0      ff2592942000   jmp qword [reloc.realloc]               ; [0x20af38:8]=0x1aa6
0x00001aa6      682b000000     push 0x2b                               ; '+'
0x00001aab      e930fdffff     jmp sym..plt
;-- imp.setlocale:
0x00001ab0      ff258a942000   jmp qword [reloc.setlocale]             ; [0x20af40:8]=0x1ab6
0x00001ab6      682c000000     push 0x2c                               ; ','
0x00001abb      e920fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001ac0      ff2582942000   jmp qword [reloc.__printf_chk]          ; [0x20af48:8]=0x1ac6
0x00001ac6      682d000000     push 0x2d                               ; '-'
0x00001acb      e910fdffff     jmp sym..plt
;-- imp.strftime:
0x00001ad0      ff257a942000   jmp qword [reloc.strftime]              ; [0x20af50:8]=0x1ad6
0x00001ad6      682e000000     push 0x2e                               ; '.'
0x00001adb      e900fdffff     jmp sym..plt
;-- imp.getutxent:
0x00001ae0      ff2572942000   jmp qword [reloc.getutxent]             ; [0x20af58:8]=0x1ae6
0x00001ae6      682f000000     push 0x2f                               ; '/'
0x00001aeb      e9f0fcffff     jmp sym..plt
;-- imp.error:
0x00001af0      ff256a942000   jmp qword [reloc.error]                 ; [0x20af60:8]=0x1af6
0x00001af6      6830000000     push 0x30                               ; '0'
0x00001afb      e9e0fcffff     jmp sym..plt
;-- imp.fseeko:
0x00001b00      ff2562942000   jmp qword [reloc.fseeko]                ; [0x20af68:8]=0x1b06
0x00001b06      6831000000     push 0x31                               ; '1'
0x00001b0b      e9d0fcffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001b10      ff255a942000   jmp qword [reloc.__cxa_atexit]          ; [0x20af70:8]=0x1b16
0x00001b16      6832000000     push 0x32                               ; '2'
0x00001b1b      e9c0fcffff     jmp sym..plt
;-- imp.exit:
0x00001b20      ff2552942000   jmp qword [reloc.exit]                  ; [0x20af78:8]=0x1b26 ; "&\x1b"
0x00001b26      6833000000     push 0x33                               ; '3'
0x00001b2b      e9b0fcffff     jmp sym..plt
;-- imp.fwrite:
0x00001b30      ff254a942000   jmp qword [reloc.fwrite]                ; [0x20af80:8]=0x1b36 ; "6\x1b"
0x00001b36      6834000000     push 0x34                               ; '4'
0x00001b3b      e9a0fcffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001b40      ff2542942000   jmp qword [reloc.__fprintf_chk]         ; [0x20af88:8]=0x1b46 ; "F\x1b"
0x00001b46      6835000000     push 0x35                               ; '5'
0x00001b4b      e990fcffff     jmp sym..plt
;-- imp.getaddrinfo:
0x00001b50      ff253a942000   jmp qword [reloc.getaddrinfo]           ; [0x20af90:8]=0x1b56 ; "V\x1b"
0x00001b56      6836000000     push 0x36                               ; '6'
0x00001b5b      e980fcffff     jmp sym..plt
;-- imp.strdup:
0x00001b60      ff2532942000   jmp qword [reloc.strdup]                ; [0x20af98:8]=0x1b66 ; "f\x1b"
0x00001b66      6837000000     push 0x37                               ; '7'
0x00001b6b      e970fcffff     jmp sym..plt
;-- imp.mbsinit:
0x00001b70      ff252a942000   jmp qword [reloc.mbsinit]               ; [0x20afa0:8]=0x1b76 ; "v\x1b"
0x00001b76      6838000000     push 0x38                               ; '8'
0x00001b7b      e960fcffff     jmp sym..plt
;-- imp.iswprint:
0x00001b80      ff2522942000   jmp qword [reloc.iswprint]              ; [0x20afa8:8]=0x1b86
0x00001b86      6839000000     push 0x39                               ; '9'
0x00001b8b      e950fcffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00001b90      ff251a942000   jmp qword [reloc.__ctype_b_loc]         ; [0x20afb0:8]=0x1b96
0x00001b96      683a000000     push 0x3a                               ; ':'
0x00001b9b      e940fcffff     jmp sym..plt
;-- imp.freeaddrinfo:
0x00001ba0      ff2512942000   jmp qword [reloc.freeaddrinfo]          ; [0x20afb8:8]=0x1ba6
0x00001ba6      683b000000     push 0x3b                               ; ';'
0x00001bab      e930fcffff     jmp sym..plt
;-- imp.__sprintf_chk:
0x00001bb0      ff250a942000   jmp qword [reloc.__sprintf_chk]         ; [0x20afc0:8]=0x1bb6
0x00001bb6      683c000000     push 0x3c                               ; '<'
0x00001bbb      e920fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001bc0      .qword 0x90660020942225ff                              ; [13] -r-x section size 8 named .plt.got
0x00001bc8      0000           add byte [rax], al
0x00001bca      0000           add byte [rax], al
0x00001bcc      0000           add byte [rax], al
0x00001bce      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x00001bd0      4154           push r12                                ; [14] -r-x section size 26734 named .text
0x00001bd2      55             push rbp
0x00001bd3      4889f5         mov rbp, rsi
0x00001bd6      53             push rbx
0x00001bd7      89fb           mov ebx, edi
0x00001bd9      488b3e         mov rdi, qword [rsi]
0x00001bdc      41bc01000000   mov r12d, 1
0x00001be2      e8391c0000     call sym.set_program_name
0x00001be7      488d35737600.  lea rsi, [0x00009261]
0x00001bee      bf06000000     mov edi, 6
0x00001bf3      e8b8feffff     call sym.imp.setlocale
0x00001bf8      488d35386a00.  lea rsi, str.usr_local_share_locale     ; 0x8637 ; "/usr/local/share/locale"
0x00001bff      488d3d086a00.  lea rdi, [0x0000860e]                   ; "coreutils"
0x00001c06      e8d5fcffff     call sym.imp.bindtextdomain
0x00001c0b      488d3dfc6900.  lea rdi, [0x0000860e]                   ; "coreutils"
0x00001c12      e899fcffff     call sym.imp.textdomain
0x00001c17      488d3d521a00.  lea rdi, sym.close_stdout               ; 0x3670 ; "USH\x83\xec\bH\x8b=+z "
0x00001c1e      e80d680000     call sym.atexit
0x00001c23      0f1f440000     nop dword [rax + rax]
0x00001c28      488d0d118d20.  lea rcx, obj.longopts                   ; 0x20a940
0x00001c2f      488d15486a00.  lea rdx, str.abdlmpqrstuwHT             ; 0x867e ; "abdlmpqrstuwHT"
0x00001c36      4531c0         xor r8d, r8d
0x00001c39      4889ee         mov rsi, rbp
0x00001c3c      89df           mov edi, ebx
0x00001c3e      e8edfcffff     call sym.imp.getopt_long
0x00001c43      83f8ff         cmp eax, 0xffffffff
0x00001c46      0f8409020000   je 0x1e55
0x00001c4c      83f86d         cmp eax, 0x6d
0x00001c4f      0f842d010000   je 0x1d82
0x00001c55      7e39           jle 0x1c90
0x00001c57      83f873         cmp eax, 0x73
0x00001c5a      0f8407010000   je 0x1d67
0x00001c60      7e6e           jle 0x1cd0
0x00001c62      83f875         cmp eax, 0x75
0x00001c65      0f843e010000   je 0x1da9
0x00001c6b      0f8c29010000   jl 0x1d9a
0x00001c71      83f877         cmp eax, 0x77
0x00001c74      0f8414010000   je 0x1d8e
0x00001c7a      83c080         add eax, 0xffffff80
0x00001c7d      0f858c000000   jne 0x1d0f
0x00001c83      c605cc942000.  mov byte [obj.do_lookup], 1             ; [0x20b156:1]=0
0x00001c8a      eb9c           jmp 0x1c28
0x00001c8c      0f1f4000       nop dword [rax]
0x00001c90      83f854         cmp eax, 0x54
0x00001c93      0f84f5000000   je 0x1d8e
0x00001c99      7e5d           jle 0x1cf8
0x00001c9b      83f862         cmp eax, 0x62
0x00001c9e      0f84cf000000   je 0x1d73
0x00001ca4      0f8e32010000   jle 0x1ddc
0x00001caa      83f864         cmp eax, 0x64
0x00001cad      0f840c010000   je 0x1dbf
0x00001cb3      83f86c         cmp eax, 0x6c
0x00001cb6      7557           jne 0x1d0f
0x00001cb8      c6058e942000.  mov byte [obj.need_login], 1            ; [0x20b14d:1]=0
0x00001cbf      c6058d942000.  mov byte [obj.include_idle], 1          ; [0x20b153:1]=0
0x00001cc6      4531e4         xor r12d, r12d
0x00001cc9      e95affffff     jmp 0x1c28
0x00001cce      6690           nop
0x00001cd0      83f871         cmp eax, 0x71
0x00001cd3      0f8470010000   je 0x1e49
0x00001cd9      0f8f54010000   jg 0x1e33
0x00001cdf      83f870         cmp eax, 0x70
0x00001ce2      752b           jne 0x1d0f
0x00001ce4      c60561942000.  mov byte [obj.need_initspawn], 1        ; [0x20b14c:1]=0
0x00001ceb      4531e4         xor r12d, r12d
0x00001cee      e935ffffff     jmp 0x1c28
0x00001cf3      0f1f440000     nop dword [rax + rax]
0x00001cf8      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x00001cfd      0f84fe010000   je 0x1f01
0x00001d03      83f848         cmp eax, 0x48
0x00001d06      7453           je 0x1d5b
0x00001d08      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x00001d0d      740a           je 0x1d19
0x00001d0f      bf01000000     mov edi, 1
0x00001d14      e837140000     call sym.usage
0x00001d19      488d05506900.  lea rax, str.Michael_Stone              ; 0x8670 ; "Michael Stone"
0x00001d20      488b3d819320.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x00001d27      488b0df29220.  mov rcx, qword [obj.Version]            ; [0x20b020:8]=0x8ccc str.8.31
0x00001d2e      6a00           push 0
0x00001d30      4c8d0d186900.  lea r9, str.David_MacKenzie             ; 0x864f ; "David MacKenzie"
0x00001d37      4c8d05216900.  lea r8, str.Joseph_Arceneaux            ; 0x865f ; "Joseph Arceneaux"
0x00001d3e      50             push rax
0x00001d3f      488d15c46800.  lea rdx, str.GNU_coreutils              ; 0x860a ; "GNU coreutils"
0x00001d46      488d35276800.  lea rsi, [0x00008574]                   ; "who"
0x00001d4d      31c0           xor eax, eax
0x00001d4f      e8bc3c0000     call sym.version_etc
0x00001d54      31ff           xor edi, edi
0x00001d56      e8c5fdffff     call sym.imp.exit
0x00001d5b      c605f0932000.  mov byte [obj.include_heading], 1       ; [0x20b152:1]=0
0x00001d62      e9c1feffff     jmp 0x1c28
0x00001d67      c605e6932000.  mov byte [obj.short_output], 1          ; [0x20b154:1]=0
0x00001d6e      e9b5feffff     jmp 0x1c28
0x00001d73      c605d5932000.  mov byte [obj.need_boottime], 1         ; [0x20b14f:1]=0
0x00001d7a      4531e4         xor r12d, r12d
0x00001d7d      e9a6feffff     jmp 0x1c28
0x00001d82      c605bf932000.  mov byte [obj.my_line_only], 1          ; [0x20b148:1]=0
0x00001d89      e99afeffff     jmp 0x1c28
0x00001d8e      c605bc932000.  mov byte [obj.include_mesg], 1          ; [0x20b151:1]=0
0x00001d95      e98efeffff     jmp 0x1c28
0x00001d9a      c605aa932000.  mov byte [obj.need_clockchange], 1      ; [0x20b14b:1]=0
0x00001da1      4531e4         xor r12d, r12d
0x00001da4      e97ffeffff     jmp 0x1c28
0x00001da9      c60599932000.  mov byte [obj.need_users], 1            ; [0x20b149:1]=0
0x00001db0      c6059c932000.  mov byte [obj.include_idle], 1          ; [0x20b153:1]=0
0x00001db7      4531e4         xor r12d, r12d
0x00001dba      e969feffff     jmp 0x1c28
0x00001dbf      c60588932000.  mov byte [obj.need_deadprocs], 1        ; [0x20b14e:1]=0
0x00001dc6      c60586932000.  mov byte [obj.include_idle], 1          ; [0x20b153:1]=0
0x00001dcd      4531e4         xor r12d, r12d
0x00001dd0      c60579932000.  mov byte [obj.include_exit], 1          ; [0x20b150:1]=0
0x00001dd7      e94cfeffff     jmp 0x1c28
0x00001ddc      83f861         cmp eax, 0x61
0x00001ddf      0f852affffff   jne 0x1d0f
0x00001de5      c60563932000.  mov byte [obj.need_boottime], 1         ; [0x20b14f:1]=0
0x00001dec      c6055b932000.  mov byte [obj.need_deadprocs], 1        ; [0x20b14e:1]=0
0x00001df3      4531e4         xor r12d, r12d
0x00001df6      c60550932000.  mov byte [obj.need_login], 1            ; [0x20b14d:1]=0
0x00001dfd      c60548932000.  mov byte [obj.need_initspawn], 1        ; [0x20b14c:1]=0
0x00001e04      c6053f932000.  mov byte [obj.need_runlevel], 1         ; [0x20b14a:1]=0
0x00001e0b      c60539932000.  mov byte [obj.need_clockchange], 1      ; [0x20b14b:1]=0
0x00001e12      c60530932000.  mov byte [obj.need_users], 1            ; [0x20b149:1]=0
0x00001e19      c60531932000.  mov byte [obj.include_mesg], 1          ; [0x20b151:1]=0
0x00001e20      c6052c932000.  mov byte [obj.include_idle], 1          ; [0x20b153:1]=0
0x00001e27      c60522932000.  mov byte [obj.include_exit], 1          ; [0x20b150:1]=0
0x00001e2e      e9f5fdffff     jmp 0x1c28
0x00001e33      c60510932000.  mov byte [obj.need_runlevel], 1         ; [0x20b14a:1]=0
0x00001e3a      c60512932000.  mov byte [obj.include_idle], 1          ; [0x20b153:1]=0
0x00001e41      4531e4         xor r12d, r12d
0x00001e44      e9dffdffff     jmp 0x1c28
0x00001e49      c60505932000.  mov byte [obj.short_list], 1            ; [0x20b155:1]=0
0x00001e50      e9d3fdffff     jmp 0x1c28
0x00001e55      4584e4         test r12b, r12b
0x00001e58      740e           je 0x1e68
0x00001e5a      c605e8922000.  mov byte [obj.need_users], 1            ; [0x20b149:1]=0
0x00001e61      c605ec922000.  mov byte [obj.short_output], 1          ; [0x20b154:1]=0
0x00001e68      803de1922000.  cmp byte [obj.include_exit], 0          ; [0x20b150:1]=0
0x00001e6f      7407           je 0x1e78
0x00001e71      c605dc922000.  mov byte [obj.short_output], 0          ; [0x20b154:1]=0
0x00001e78      bf02000000     mov edi, 2
0x00001e7d      e89e180000     call sym.hard_locale
0x00001e82      84c0           test al, al
0x00001e84      7545           jne 0x1ecb
0x00001e86      488d050f6800.  lea rax, str.b__e__H:_M                 ; 0x869c ; "%b %e %H:%M"
0x00001e8d      c705a1922000.  mov dword [obj.time_format_width], 0xc  ; [0x20b138:4]=0
0x00001e97      488905a29220.  mov qword [obj.time_format], rax        ; [0x20b140:8]=0
0x00001e9e      4863050b9220.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20b0b0:4]=0
0x00001ea5      29c3           sub ebx, eax
0x00001ea7      83fb01         cmp ebx, 1
0x00001eaa      7447           je 0x1ef3
0x00001eac      7f37           jg 0x1ee5
0x00001eae      83c301         add ebx, 1
0x00001eb1      7c55           jl 0x1f08
0x00001eb3      488d3dcc6600.  lea rdi, str.var_run_utmp               ; 0x8586 ; "/var/run/utmp"
0x00001eba      be01000000     mov esi, 1
0x00001ebf      e8bc0a0000     call sym.who
0x00001ec4      5b             pop rbx
0x00001ec5      31c0           xor eax, eax
0x00001ec7      5d             pop rbp
0x00001ec8      415c           pop r12
0x00001eca      c3             ret
0x00001ecb      488d05bb6700.  lea rax, str.Y__m__d__H:_M              ; 0x868d ; "%Y-%m-%d %H:%M"
0x00001ed2      c7055c922000.  mov dword [obj.time_format_width], 0x10 ; [0x20b138:4]=0
0x00001edc      4889055d9220.  mov qword [obj.time_format], rax        ; [0x20b140:8]=0
0x00001ee3      ebb9           jmp 0x1e9e
0x00001ee5      83fb02         cmp ebx, 2
0x00001ee8      751e           jne 0x1f08
0x00001eea      c60557922000.  mov byte [obj.my_line_only], 1          ; [0x20b148:1]=0
0x00001ef1      ebc0           jmp 0x1eb3
0x00001ef3      488b7cc500     mov rdi, qword [rbp + rax*8]
0x00001ef8      31f6           xor esi, esi
0x00001efa      e8810a0000     call sym.who
0x00001eff      ebc3           jmp 0x1ec4
0x00001f01      31ff           xor edi, edi
0x00001f03      e848120000     call sym.usage
0x00001f08      488b7cc510     mov rdi, qword [rbp + rax*8 + 0x10]
0x00001f0d      e81e360000     call sym.quote
0x00001f12      488d358f6700.  lea rsi, str.extra_operand__s           ; 0x86a8 ; "extra operand %s"
0x00001f19      4889c3         mov rbx, rax
0x00001f1c      31ff           xor edi, edi
0x00001f1e      ba05000000     mov edx, 5
0x00001f23      e8c8f9ffff     call sym.imp.dcgettext
0x00001f28      4889d9         mov rcx, rbx
0x00001f2b      4889c2         mov rdx, rax
0x00001f2e      31f6           xor esi, esi
0x00001f30      31ff           xor edi, edi
0x00001f32      31c0           xor eax, eax
0x00001f34      e8b7fbffff     call sym.imp.error
0x00001f39      e9d1fdffff     jmp 0x1d0f
0x00001f3e      6690           nop
;-- entry0:
;-- _start:
;-- rip:
0x00001f40      31ed           xor ebp, ebp
0x00001f42      4989d1         mov r9, rdx
0x00001f45      5e             pop rsi
0x00001f46      4889e2         mov rdx, rsp
0x00001f49      4883e4f0       and rsp, 0xfffffffffffffff0
0x00001f4d      50             push rax
0x00001f4e      54             push rsp
0x00001f4f      4c8d05ca6400.  lea r8, sym.__libc_csu_fini             ; 0x8420
0x00001f56      488d0d536400.  lea rcx, sym.__libc_csu_init            ; 0x83b0 ; "AWAVI\x89\xd7AUATL\x8d%n% "
0x00001f5d      488d3d6cfcff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1bd0 ; "ATUH\x89\xf5S\x89\xfbH\x8b>A\xbc\x01"
0x00001f64      ff1566902000   call qword [reloc.__libc_start_main]    ; [0x20afd0:8]=0
0x00001f6a      f4             hlt
0x00001f6b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00001f70      488d3d299120.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20b0a0
0x00001f77      55             push rbp
0x00001f78      488d05219120.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20b0a0
0x00001f7f      4839f8         cmp rax, rdi
0x00001f82      4889e5         mov rbp, rsp
0x00001f85      7419           je 0x1fa0
0x00001f87      488b053a9020.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x20afc8:8]=0
0x00001f8e      4885c0         test rax, rax
0x00001f91      740d           je 0x1fa0
0x00001f93      5d             pop rbp
0x00001f94      ffe0           jmp rax
0x00001f96      662e0f1f8400.  nop word cs:[rax + rax]
0x00001fa0      5d             pop rbp
0x00001fa1      c3             ret
0x00001fa2      0f1f4000       nop dword [rax]
0x00001fa6      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00001fb0      488d3de99020.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20b0a0
0x00001fb7      488d35e29020.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20b0a0
0x00001fbe      55             push rbp
0x00001fbf      4829fe         sub rsi, rdi
0x00001fc2      4889e5         mov rbp, rsp
0x00001fc5      48c1fe03       sar rsi, 3
0x00001fc9      4889f0         mov rax, rsi
0x00001fcc      48c1e83f       shr rax, 0x3f
0x00001fd0      4801c6         add rsi, rax
0x00001fd3      48d1fe         sar rsi, 1
0x00001fd6      7418           je 0x1ff0
0x00001fd8      488b05019020.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x20afe0:8]=0
0x00001fdf      4885c0         test rax, rax
0x00001fe2      740c           je 0x1ff0
0x00001fe4      5d             pop rbp
0x00001fe5      ffe0           jmp rax
0x00001fe7      660f1f840000.  nop word [rax + rax]
0x00001ff0      5d             pop rbp
0x00001ff1      c3             ret
0x00001ff2      0f1f4000       nop dword [rax]
0x00001ff6      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00002000      803dc1902000.  cmp byte [obj.completed.7697], 0        ; [0x20b0c8:1]=0
0x00002007      752f           jne 0x2038
0x00002009      48833dd78f20.  cmp qword [reloc.__cxa_finalize], 0     ; [0x20afe8:8]=0
0x00002011      55             push rbp
0x00002012      4889e5         mov rbp, rsp
0x00002015      740c           je 0x2023
0x00002017      488b3dea8f20.  mov rdi, qword [obj.__dso_handle]       ; [0x20b008:8]=0x20b008 obj.__dso_handle
0x0000201e      e89dfbffff     call sym..plt.got
0x00002023      e848ffffff     call sym.deregister_tm_clones
0x00002028      c60599902000.  mov byte [obj.completed.7697], 1        ; [0x20b0c8:1]=0
0x0000202f      5d             pop rbp
0x00002030      c3             ret
0x00002031      0f1f80000000.  nop dword [rax]
0x00002038      f3c3           ret
0x0000203a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00002040      55             push rbp
0x00002041      4889e5         mov rbp, rsp
0x00002044      5d             pop rbp
0x00002045      e966ffffff     jmp sym.register_tm_clones
0x0000204a      660f1f440000   nop word [rax + rax]
;-- print_line:
0x00002050      4157           push r15                                ; /src:248
0x00002052      4156           push r14
0x00002054      4d89c7         mov r15, r8
0x00002057      4155           push r13
0x00002059      4154           push r12
0x0000205b      4d89ce         mov r14, r9
0x0000205e      55             push rbp
0x0000205f      53             push rbx
0x00002060      4889f3         mov rbx, rsi
0x00002063      4883ec58       sub rsp, 0x58
0x00002067      8815ac8f2000   mov byte [0x0020b019], dl               ; /src:256 ; [0x20b019:1]=120
0x0000206d      440fb625df90.  movzx r12d, byte [obj.short_output]     ; [0x20b154:1]=0
0x00002075      488b8424a000.  mov rax, qword [rsp + 0xa0]             ; /src:248
0x0000207d      893c24         mov dword [rsp], edi
0x00002080      894c2404       mov dword [rsp + 4], ecx
0x00002084      4c8b84249000.  mov r8, qword [rsp + 0x90]
0x0000208c      488bac249800.  mov rbp, qword [rsp + 0x98]
0x00002094      4889442408     mov qword [rsp + 8], rax
0x00002099      488b8424a800.  mov rax, qword [rsp + 0xa8]
0x000020a1      4889442410     mov qword [rsp + 0x10], rax
0x000020a6      64488b042528.  mov rax, qword fs:[0x28]
0x000020af      4889442448     mov qword [rsp + 0x48], rax
0x000020b4      31c0           xor eax, eax
0x000020b6      803d96902000.  cmp byte [obj.include_idle], 0          ; /src:258 ; [0x20b153:1]=0
0x000020bd      7409           je 0x20c8
0x000020bf      4584e4         test r12b, r12b
0x000020c2      0f8448010000   je 0x2210
0x000020c8      4c8d6c2433     lea r13, [rsp + 0x33]
0x000020cd      c644243300     mov byte [rsp + 0x33], 0                ; /src:261
0x000020d2      4584e4         test r12b, r12b                         ; /src:263
0x000020d5      7512           jne 0x20e9
0x000020d7      4889ef         mov rdi, rbp
0x000020da      e831f8ffff     call sym.imp.strlen
0x000020df      4883f80b       cmp rax, 0xb
0x000020e3      0f86a7010000   jbe 0x2290
0x000020e9      4c8d64243b     lea r12, [rsp + 0x3b]
0x000020ee      c644243b00     mov byte [rsp + 0x3b], 0                ; /src:266
0x000020f3      803d56902000.  cmp byte [obj.include_exit], 0          ; /src:268 ; [0x20b150:1]=0
0x000020fa      bf01000000     mov edi, 1
0x000020ff      741b           je 0x211c
0x00002101      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002106      e805f8ffff     call sym.imp.strlen
0x0000210b      488d7802       lea rdi, [rax + 2]
0x0000210f      4883f80b       cmp rax, 0xb
0x00002113      b80e000000     mov eax, 0xe
0x00002118      480f46f8       cmovbe rdi, rax
0x0000211c      e84f3a0000     call sym.xmalloc
0x00002121      803d28902000.  cmp byte [obj.include_exit], 0          ; /src:269 ; [0x20b150:1]=0
0x00002128      4889c5         mov rbp, rax                            ; /src:268
0x0000212b      0f852f010000   jne 0x2260                              ; /src:269
0x00002131      c60000         mov byte [rax], 0                       ; /src:272
0x00002134      803d16902000.  cmp byte [obj.include_mesg], 0          ; /src:274 ; [0x20b151:1]=0
0x0000213b      488d05d68e20.  lea rax, obj.mesg.7721                  ; 0x20b018 ; " x"
0x00002142      4c8d05187100.  lea r8, [0x00009261]
0x00002149      488d7c2428     lea rdi, [rsp + 0x28]
0x0000214e      488d35d36500.  lea rsi, str.8._s_s___12._s____s_s_s___8s_s ; 0x8728 ; "%-8.*s%s %-12.*s %-*s%s%s %-8s%s"
0x00002155      4c0f45c0       cmovne r8, rax
0x00002159      488d05046300.  lea rax, [0x00008464]                   ; "   ."
0x00002160      4885db         test rbx, rbx
0x00002163      480f44d8       cmove rbx, rax
0x00002167      8b05cb8f2000   mov eax, dword [obj.time_format_width]  ; [0x20b138:4]=0
0x0000216d      4883ec08       sub rsp, 8
0x00002171      55             push rbp
0x00002172      ff742418       push qword [rsp + 0x18]
0x00002176      4889d9         mov rcx, rbx
0x00002179      4154           push r12
0x0000217b      4155           push r13
0x0000217d      4156           push r14
0x0000217f      50             push rax
0x00002180      31c0           xor eax, eax
0x00002182      4157           push r15
0x00002184      448b4c2444     mov r9d, dword [rsp + 0x44]
0x00002189      8b542440       mov edx, dword [rsp + 0x40]
0x0000218d      e86e3c0000     call sym.rpl_asprintf
0x00002192      4883c440       add rsp, 0x40                           ; /src:298
0x00002196      83f8ff         cmp eax, 0xffffffff
0x00002199      0f8419010000   je 0x22b8
0x0000219f      488b5c2428     mov rbx, qword [rsp + 0x28]             ; /src:303
0x000021a4      4889df         mov rdi, rbx
0x000021a7      e864f7ffff     call sym.imp.strlen
0x000021ac      4801d8         add rax, rbx
0x000021af      eb0a           jmp 0x21bb                              ; /src:304
0x000021b1      0f1f80000000.  nop dword [rax]
0x000021b8      4889d0         mov rax, rdx
0x000021bb      8078ff20       cmp byte [rax - 1], 0x20
0x000021bf      488d50ff       lea rdx, [rax - 1]
0x000021c3      74f3           je 0x21b8
0x000021c5      c60000         mov byte [rax], 0                       ; /src:306
0x000021c8      488b7c2428     mov rdi, qword [rsp + 0x28]             ; /src:309
0x000021cd      e8cef6ffff     call sym.imp.puts
0x000021d2      488b7c2428     mov rdi, qword [rsp + 0x28]             ; /src:310
0x000021d7      e834f6ffff     call sym.imp.free
0x000021dc      488b442448     mov rax, qword [rsp + 0x48]             ; /src:311
0x000021e1      644833042528.  xor rax, qword fs:[0x28]
0x000021ea      0f85cd000000   jne 0x22bd
0x000021f0      4883c458       add rsp, 0x58                           ; /src:312
0x000021f4      4889ef         mov rdi, rbp                            ; /src:311
0x000021f7      5b             pop rbx                                 ; /src:312
0x000021f8      5d             pop rbp
0x000021f9      415c           pop r12
0x000021fb      415d           pop r13
0x000021fd      415e           pop r14
0x000021ff      415f           pop r15
0x00002201      e90af6ffff     jmp sym.imp.free                        ; /src:311
0x00002206      662e0f1f8400.  nop word cs:[rax + rax]
0x00002210      4c89c7         mov rdi, r8                             ; /src:258
0x00002213      4c89442418     mov qword [rsp + 0x18], r8
0x00002218      e8f3f6ffff     call sym.imp.strlen
0x0000221d      4883f806       cmp rax, 6
0x00002221      4c8b442418     mov r8, qword [rsp + 0x18]
0x00002226      0f879cfeffff   ja 0x20c8
0x0000222c      4c8d6c2433     lea r13, [rsp + 0x33]                   ; .//ib:33
0x00002231      488d0d316200.  lea rcx, str.6s                         ; 0x8469 ; " %-6s"
0x00002238      ba08000000     mov edx, 8
0x0000223d      be01000000     mov esi, 1
0x00002242      31c0           xor eax, eax
0x00002244      4c89ef         mov rdi, r13
0x00002247      e864f9ffff     call sym.imp.__sprintf_chk
0x0000224c      440fb625008f.  movzx r12d, byte [obj.short_output]     ; [0x20b154:1]=0
0x00002254      e979feffff     jmp 0x20d2
0x00002259      0f1f80000000.  nop dword [rax]
0x00002260      4c8b442410     mov r8, qword [rsp + 0x10]
0x00002265      488d0d096200.  lea rcx, str.12s                        ; 0x8475 ; " %-12s"
0x0000226c      4889c7         mov rdi, rax
0x0000226f      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00002276      be01000000     mov esi, 1
0x0000227b      31c0           xor eax, eax
0x0000227d      e82ef9ffff     call sym.imp.__sprintf_chk
0x00002282      e9adfeffff     jmp 0x2134
0x00002287      660f1f840000.  nop word [rax + rax]
0x00002290      4c8d64243b     lea r12, [rsp + 0x3b]
0x00002295      488d0dd36100.  lea rcx, str.10s                        ; 0x846f ; " %10s"
0x0000229c      4989e8         mov r8, rbp
0x0000229f      ba0d000000     mov edx, 0xd
0x000022a4      be01000000     mov esi, 1
0x000022a9      31c0           xor eax, eax
0x000022ab      4c89e7         mov rdi, r12
0x000022ae      e8fdf8ffff     call sym.imp.__sprintf_chk
0x000022b3      e93bfeffff     jmp 0x20f3
0x000022b8      e8033b0000     call sym.xalloc_die                     ; /src:299
0x000022bd      e85ef6ffff     call sym.imp.__stack_chk_fail           ; /src:311
0x000022c2      0f1f4000       nop dword [rax]
0x000022c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- make_id_equals_comment:
0x000022d0      55             push rbp                                ; /src:449
0x000022d1      53             push rbx
0x000022d2      488d35a36100.  lea rsi, [0x0000847c]                   ; /src:451 ; "id="
0x000022d9      ba05000000     mov edx, 5
0x000022de      4889fd         mov rbp, rdi                            ; /src:449
0x000022e1      31ff           xor edi, edi                            ; /src:451
0x000022e3      4883ec08       sub rsp, 8                              ; /src:449
0x000022e7      e804f6ffff     call sym.imp.dcgettext                  ; /src:451
0x000022ec      4889c7         mov rdi, rax
0x000022ef      e81cf6ffff     call sym.imp.strlen
0x000022f4      488d7805       lea rdi, [rax + 5]
0x000022f8      e873380000     call sym.xmalloc
0x000022fd      488d35786100.  lea rsi, [0x0000847c]                   ; /src:453 ; "id="
0x00002304      4889c3         mov rbx, rax                            ; /src:451
0x00002307      ba05000000     mov edx, 5                              ; /src:453
0x0000230c      31ff           xor edi, edi
0x0000230e      e8ddf5ffff     call sym.imp.dcgettext
0x00002313      4889df         mov rdi, rbx                            ; ../coreutils-8.31/src/o.c:90
0x00002316      4889c6         mov rsi, rax
0x00002319      e862f5ffff     call sym.imp.strcpy
0x0000231e      488d7528       lea rsi, [rbp + 0x28]                   ; ../coreutils-8.31/src/o.c:136
0x00002322      4889df         mov rdi, rbx
0x00002325      ba04000000     mov edx, 4
0x0000232a      e881f6ffff     call sym.imp.strncat
0x0000232f      4883c408       add rsp, 8                              ; /src:456
0x00002333      5b             pop rbx
0x00002334      5d             pop rbp
0x00002335      c3             ret
0x00002336      662e0f1f8400.  nop word cs:[rax + rax]
;-- time_string.isra.1:
0x00002340      4883ec18       sub rsp, 0x18                           ; /src:218
0x00002344      4863ff         movsxd rdi, edi                         ; /src:228
0x00002347      48893c24       mov qword [rsp], rdi
0x0000234b      4889e7         mov rdi, rsp                            ; /src:229
0x0000234e      64488b042528.  mov rax, qword fs:[0x28]                ; /src:218
0x00002357      4889442408     mov qword [rsp + 8], rax
0x0000235c      31c0           xor eax, eax
0x0000235e      e8bdf4ffff     call sym.imp.localtime                  ; /src:229
0x00002363      4885c0         test rax, rax                           ; /src:231
0x00002366      7438           je 0x23a0
0x00002368      488b15d18d20.  mov rdx, qword [obj.time_format]        ; /src:233 ; [0x20b140:8]=0
0x0000236f      488d3d8a8d20.  lea rdi, obj.buf.7706                   ; 0x20b100
0x00002376      4889c1         mov rcx, rax
0x00002379      be21000000     mov esi, 0x21                           ; '!'
0x0000237e      e84df7ffff     call sym.imp.strftime
0x00002383      488d05768d20.  lea rax, obj.buf.7706                   ; /src:234 ; 0x20b100
0x0000238a      488b542408     mov rdx, qword [rsp + 8]                ; /src:238
0x0000238f      644833142528.  xor rdx, qword fs:[0x28]
0x00002398      7518           jne 0x23b2
0x0000239a      4883c418       add rsp, 0x18
0x0000239e      c3             ret
0x0000239f      90             nop
0x000023a0      488b3c24       mov rdi, qword [rsp]                    ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:691
0x000023a4      488d35558d20.  lea rsi, obj.buf.7706                   ; 0x20b100
0x000023ab      e8d0130000     call sym.imaxtostr
0x000023b0      ebd8           jmp 0x238a
0x000023b2      e869f5ffff     call sym.imp.__stack_chk_fail           ; /src:238
0x000023b7      660f1f840000.  nop word [rax + rax]
;-- print_user:
0x000023c0      4157           push r15
0x000023c2      4156           push r14
0x000023c4      488d0dbb6000.  lea rcx, [0x00008486]                   ; "%ld"
0x000023cb      4155           push r13
0x000023cd      4154           push r12
0x000023cf      ba0c000000     mov edx, 0xc
0x000023d4      55             push rbp
0x000023d5      53             push rbx
0x000023d6      4989f4         mov r12, rsi
0x000023d9      4889fb         mov rbx, rdi
0x000023dc      be01000000     mov esi, 1
0x000023e1      4881ec280200.  sub rsp, 0x228
0x000023e8      4c634704       movsxd r8, dword [rdi + 4]
0x000023ec      488dac24d400.  lea rbp, [rsp + 0xd4]
0x000023f4      64488b042528.  mov rax, qword fs:[0x28]
0x000023fd      488984241802.  mov qword [rsp + 0x218], rax
0x00002405      31c0           xor eax, eax
0x00002407      4889ef         mov rdi, rbp
0x0000240a      e8a1f7ffff     call sym.imp.__sprintf_chk
0x0000240f      0fb64b08       movzx ecx, byte [rbx + 8]
0x00002413      80f92f         cmp cl, 0x2f
0x00002416      0f85b4020000   jne 0x26d0
0x0000241c      488d4308       lea rax, [rbx + 8]
0x00002420      488db424e000.  lea rsi, [rsp + 0xe0]
0x00002428      488d7b28       lea rdi, [rbx + 0x28]
0x0000242c      4989c7         mov r15, rax
0x0000242f      4889f2         mov rdx, rsi
0x00002432      eb0b           jmp 0x243f
0x00002434      0f1f4000       nop dword [rax]
0x00002438      0fb608         movzx ecx, byte [rax]
0x0000243b      84c9           test cl, cl
0x0000243d      7410           je 0x244f
0x0000243f      4883c001       add rax, 1
0x00002443      4883c201       add rdx, 1
0x00002447      884aff         mov byte [rdx - 1], cl
0x0000244a      4839c7         cmp rdi, rax
0x0000244d      77e9           ja 0x2438
0x0000244f      c60200         mov byte [rdx], 0
0x00002452      488d542430     lea rdx, [rsp + 0x30]
0x00002457      bf01000000     mov edi, 1
0x0000245c      e8dff5ffff     call sym.imp.__xstat
0x00002461      85c0           test eax, eax
0x00002463      0f85a7020000   jne 0x2710
0x00002469      8b442448       mov eax, dword [rsp + 0x48]
0x0000246d      4c8b742478     mov r14, qword [rsp + 0x78]
0x00002472      83e010         and eax, 0x10
0x00002475      83f801         cmp eax, 1
0x00002478      4519ed         sbb r13d, r13d
0x0000247b      4183e502       and r13d, 2
0x0000247f      4183c52b       add r13d, 0x2b
0x00002483      4d85f6         test r14, r14
0x00002486      0f858c010000   jne 0x2618
0x0000248c      410fbec5       movsx eax, r13b
0x00002490      8944240c       mov dword [rsp + 0xc], eax
0x00002494      0fb6534c       movzx edx, byte [rbx + 0x4c]
0x00002498      c78424cd0000.  mov dword [rsp + 0xcd], 0x3f2020        ; '  ?'
                                                                       ; [0x3f2020:4]=-1
0x000024a3      4c8db424cd00.  lea r14, [rsp + 0xcd]
0x000024ab      84d2           test dl, dl
0x000024ad      0f84f0010000   je 0x26a3
0x000024b3      4c8da4241001.  lea r12, [rsp + 0x110]
0x000024bb      488d434c       lea rax, [rbx + 0x4c]
0x000024bf      488db34c0100.  lea rsi, [rbx + 0x14c]
0x000024c6      4c89e1         mov rcx, r12
0x000024c9      eb0c           jmp 0x24d7
0x000024cb      0f1f440000     nop dword [rax + rax]
0x000024d0      0fb610         movzx edx, byte [rax]
0x000024d3      84d2           test dl, dl
0x000024d5      7410           je 0x24e7
0x000024d7      4883c001       add rax, 1
0x000024db      4883c101       add rcx, 1
0x000024df      8851ff         mov byte [rcx - 1], dl
0x000024e2      4839c6         cmp rsi, rax
0x000024e5      77e9           ja 0x24d0
0x000024e7      c60100         mov byte [rcx], 0
0x000024ea      be3a000000     mov esi, 0x3a                           ; ':'
0x000024ef      4c89e7         mov rdi, r12
0x000024f2      e859f4ffff     call sym.imp.strchr
0x000024f7      4885c0         test rax, rax
0x000024fa      0f8478020000   je 0x2778
0x00002500      c60000         mov byte [rax], 0
0x00002503      80bc24100100.  cmp byte [rsp + 0x110], 0
0x0000250b      488d7001       lea rsi, [rax + 1]
0x0000250f      4d89e5         mov r13, r12
0x00002512      4889742410     mov qword [rsp + 0x10], rsi
0x00002517      0f8503020000   jne 0x2720
0x0000251d      4c89ef         mov rdi, r13
0x00002520      e8ebf3ffff     call sym.imp.strlen
0x00002525      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000252a      4889442428     mov qword [rsp + 0x28], rax
0x0000252f      488b0dfa8b20.  mov rcx, qword [obj.hostlen.7743]       ; [0x20b130:8]=0
0x00002536      4c8b15eb8b20.  mov r10, qword [obj.hoststr.7742]       ; [0x20b128:8]=0
0x0000253d      4885ff         test rdi, rdi
0x00002540      0f8497020000   je 0x27dd
0x00002546      4c89542420     mov qword [rsp + 0x20], r10
0x0000254b      48894c2418     mov qword [rsp + 0x18], rcx
0x00002550      e8bbf3ffff     call sym.imp.strlen
0x00002555      488b542428     mov rdx, qword [rsp + 0x28]
0x0000255a      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0000255f      4c8b542420     mov r10, qword [rsp + 0x20]
0x00002564      488d440204     lea rax, [rdx + rax + 4]
0x00002569      4839c8         cmp rax, rcx
0x0000256c      0f879e020000   ja 0x2810
0x00002572      4c8b4c2410     mov r9, qword [rsp + 0x10]
0x00002577      488d0d5b5f00.  lea rcx, str.s:_s                       ; 0x84d9 ; "(%s:%s)"
0x0000257e      4d89e8         mov r8, r13
0x00002581      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00002588      be01000000     mov esi, 1
0x0000258d      4c89d7         mov rdi, r10
0x00002590      31c0           xor eax, eax
0x00002592      e819f6ffff     call sym.imp.__sprintf_chk
0x00002597      4d39e5         cmp r13, r12
0x0000259a      7408           je 0x25a4
0x0000259c      4c89ef         mov rdi, r13
0x0000259f      e86cf2ffff     call sym.imp.free
0x000025a4      4c8b257d8b20.  mov r12, qword [obj.hoststr.7742]       ; [0x20b128:8]=0
0x000025ab      4c8d2daf6c00.  lea r13, [0x00009261]
0x000025b2      4d85e4         test r12, r12
0x000025b5      4d0f44e5       cmove r12, r13
0x000025b9      8bbb54010000   mov edi, dword [rbx + 0x154]
0x000025bf      e87cfdffff     call sym.time_string.isra.1
0x000025c4      4155           push r13
0x000025c6      4154           push r12
0x000025c8      488d732c       lea rsi, [rbx + 0x2c]
0x000025cc      55             push rbp
0x000025cd      4156           push r14
0x000025cf      4989c1         mov r9, rax
0x000025d2      8b54242c       mov edx, dword [rsp + 0x2c]
0x000025d6      4d89f8         mov r8, r15
0x000025d9      b920000000     mov ecx, 0x20                           ; "@"
0x000025de      bf20000000     mov edi, 0x20                           ; "@"
0x000025e3      e868faffff     call sym.print_line
0x000025e8      4883c420       add rsp, 0x20
0x000025ec      488b84241802.  mov rax, qword [rsp + 0x218]
0x000025f4      644833042528.  xor rax, qword fs:[0x28]
0x000025fd      0f854b030000   jne 0x294e
0x00002603      4881c4280200.  add rsp, 0x228
0x0000260a      5b             pop rbx
0x0000260b      5d             pop rbp
0x0000260c      415c           pop r12
0x0000260e      415d           pop r13
0x00002610      415e           pop r14
0x00002612      415f           pop r15
0x00002614      c3             ret
0x00002615      0f1f00         nop dword [rax]
0x00002618      48b800000000.  movabs rax, 0x8000000000000000
0x00002622      483905e78920.  cmp qword [obj.now.7699], rax           ; [0x20b010:8]=0x8000000000000000
0x00002629      0f8411020000   je 0x2840
0x0000262f      4d39e6         cmp r14, r12
0x00002632      7e1c           jle 0x2650
0x00002634      488b05d58920.  mov rax, qword [obj.now.7699]           ; [0x20b010:8]=0x8000000000000000
0x0000263b      488d9081aefe.  lea rdx, [rax - 0x1517f]
0x00002642      4939d6         cmp r14, rdx
0x00002645      7c09           jl 0x2650
0x00002647      4939c6         cmp r14, rax
0x0000264a      0f8e31020000   jle 0x2881
0x00002650      488d35775e00.  lea rsi, str.old                        ; 0x84ce ; " old "
0x00002657      ba05000000     mov edx, 5
0x0000265c      31ff           xor edi, edi
0x0000265e      e88df2ffff     call sym.imp.dcgettext
0x00002663      4989c1         mov r9, rax
0x00002666      4c8db424cd00.  lea r14, [rsp + 0xcd]
0x0000266e      488d0d5f5e00.  lea rcx, str.._s                        ; 0x84d4 ; "%.*s"
0x00002675      ba07000000     mov edx, 7
0x0000267a      31c0           xor eax, eax
0x0000267c      41b806000000   mov r8d, 6
0x00002682      be01000000     mov esi, 1
0x00002687      4c89f7         mov rdi, r14
0x0000268a      e821f5ffff     call sym.imp.__sprintf_chk
0x0000268f      0fb6534c       movzx edx, byte [rbx + 0x4c]
0x00002693      410fbec5       movsx eax, r13b
0x00002697      8944240c       mov dword [rsp + 0xc], eax
0x0000269b      84d2           test dl, dl
0x0000269d      0f8510feffff   jne 0x24b3
0x000026a3      48833d858a20.  cmp qword [obj.hostlen.7743], 0         ; [0x20b130:8]=0
0x000026ab      4c8b25768a20.  mov r12, qword [obj.hoststr.7742]       ; [0x20b128:8]=0
0x000026b2      0f8490000000   je 0x2748
0x000026b8      41c6042400     mov byte [r12], 0
0x000026bd      4c8d2d9d6b00.  lea r13, [0x00009261]
0x000026c4      e9f0feffff     jmp 0x25b9
0x000026c9      0f1f80000000.  nop dword [rax]
0x000026d0      b82f000000     mov eax, 0x2f                           ; '/'
0x000026d5      488db424e000.  lea rsi, [rsp + 0xe0]
0x000026dd      84c9           test cl, cl
0x000026df      66898424e400.  mov word [rsp + 0xe4], ax
0x000026e7      488d4308       lea rax, [rbx + 8]
0x000026eb      c78424e00000.  mov dword [rsp + 0xe0], 0x7665642f      ; '/dev'
                                                                       ; [0x7665642f:4]=-1
0x000026f6      488d7b28       lea rdi, [rbx + 0x28]
0x000026fa      488d5605       lea rdx, [rsi + 5]
0x000026fe      4989c7         mov r15, rax
0x00002701      0f8538fdffff   jne 0x243f
0x00002707      e943fdffff     jmp 0x244f
0x0000270c      0f1f4000       nop dword [rax]
0x00002710      c744240c3f00.  mov dword [rsp + 0xc], 0x3f             ; '?'
                                                                       ; [0x3f:4]=0x600
0x00002718      e977fdffff     jmp 0x2494
0x0000271d      0f1f00         nop dword [rax]
0x00002720      803d2f8a2000.  cmp byte [obj.do_lookup], 0             ; [0x20b156:1]=0
0x00002727      0f84f0fdffff   je 0x251d
0x0000272d      4c89e7         mov rdi, r12
0x00002730      e8fb0e0000     call sym.canon_host
0x00002735      4989c5         mov r13, rax
0x00002738      4885c0         test rax, rax
0x0000273b      4d0f44ec       cmove r13, r12
0x0000273f      e9d9fdffff     jmp 0x251d
0x00002744      0f1f4000       nop dword [rax]
0x00002748      4c89e7         mov rdi, r12
0x0000274b      48c705da8920.  mov qword [obj.hostlen.7743], 1         ; [0x20b130:8]=0
0x00002756      e8b5f0ffff     call sym.imp.free
0x0000275b      bf01000000     mov edi, 1
0x00002760      e80b340000     call sym.xmalloc
0x00002765      4989c4         mov r12, rax
0x00002768      488905b98920.  mov qword [obj.hoststr.7742], rax       ; [0x20b128:8]=0
0x0000276f      e944ffffff     jmp 0x26b8
0x00002774      0f1f4000       nop dword [rax]
0x00002778      80bc24100100.  cmp byte [rsp + 0x110], 0
0x00002780      740d           je 0x278f
0x00002782      803dcd892000.  cmp byte [obj.do_lookup], 0             ; [0x20b156:1]=0
0x00002789      0f8568010000   jne 0x28f7
0x0000278f      4c89e0         mov rax, r12
0x00002792      8b08           mov ecx, dword [rax]
0x00002794      4883c004       add rax, 4
0x00002798      8d91fffefefe   lea edx, [rcx - 0x1010101]
0x0000279e      f7d1           not ecx
0x000027a0      21ca           and edx, ecx
0x000027a2      81e280808080   and edx, 0x80808080
0x000027a8      74e8           je 0x2792
0x000027aa      89d1           mov ecx, edx
0x000027ac      4c8b15758920.  mov r10, qword [obj.hoststr.7742]       ; [0x20b128:8]=0
0x000027b3      4d89e5         mov r13, r12
0x000027b6      c1e910         shr ecx, 0x10
0x000027b9      f7c280800000   test edx, 0x8080
0x000027bf      0f44d1         cmove edx, ecx
0x000027c2      488d4802       lea rcx, [rax + 2]
0x000027c6      89d6           mov esi, edx
0x000027c8      480f44c1       cmove rax, rcx
0x000027cc      4000d6         add sil, dl
0x000027cf      488b0d5a8920.  mov rcx, qword [obj.hostlen.7743]       ; [0x20b130:8]=0
0x000027d6      4883d803       sbb rax, 3
0x000027da      4c29e0         sub rax, r12
0x000027dd      4883c003       add rax, 3
0x000027e1      4839c8         cmp rax, rcx
0x000027e4      776b           ja 0x2851
0x000027e6      488d0df45c00.  lea rcx, str.s                          ; 0x84e1 ; "(%s)"
0x000027ed      4d89e8         mov r8, r13
0x000027f0      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000027f7      be01000000     mov esi, 1
0x000027fc      4c89d7         mov rdi, r10
0x000027ff      31c0           xor eax, eax
0x00002801      e8aaf3ffff     call sym.imp.__sprintf_chk
0x00002806      e98cfdffff     jmp 0x2597
0x0000280b      0f1f440000     nop dword [rax + rax]
0x00002810      4c89d7         mov rdi, r10
0x00002813      488905168920.  mov qword [obj.hostlen.7743], rax       ; [0x20b130:8]=0
0x0000281a      4889442418     mov qword [rsp + 0x18], rax
0x0000281f      e8ecefffff     call sym.imp.free
0x00002824      488b442418     mov rax, qword [rsp + 0x18]
0x00002829      4889c7         mov rdi, rax
0x0000282c      e83f330000     call sym.xmalloc
0x00002831      4989c2         mov r10, rax
0x00002834      488905ed8820.  mov qword [obj.hoststr.7742], rax       ; [0x20b128:8]=0
0x0000283b      e932fdffff     jmp 0x2572
0x00002840      488d3dc98720.  lea rdi, obj.now.7699                   ; 0x20b010
0x00002847      e8d4f1ffff     call sym.imp.time
0x0000284c      e9defdffff     jmp 0x262f
0x00002851      4c89d7         mov rdi, r10
0x00002854      488905d58820.  mov qword [obj.hostlen.7743], rax       ; [0x20b130:8]=0
0x0000285b      4889442410     mov qword [rsp + 0x10], rax
0x00002860      e8abefffff     call sym.imp.free
0x00002865      488b442410     mov rax, qword [rsp + 0x10]
0x0000286a      4889c7         mov rdi, rax
0x0000286d      e8fe320000     call sym.xmalloc
0x00002872      4989c2         mov r10, rax
0x00002875      488905ac8820.  mov qword [obj.hoststr.7742], rax       ; [0x20b128:8]=0
0x0000287c      e965ffffff     jmp 0x27e6
0x00002881      89c1           mov ecx, eax
0x00002883      4429f1         sub ecx, r14d
0x00002886      83f93b         cmp ecx, 0x3b
0x00002889      0f8e93000000   jle 0x2922
0x0000288f      81f97f510100   cmp ecx, 0x1517f
0x00002895      0f8fb8000000   jg 0x2953
0x0000289b      89c8           mov eax, ecx
0x0000289d      bac5b3a291     mov edx, 0x91a2b3c5
0x000028a2      488d3d788820.  lea rdi, obj.idle_hhmm.7701             ; 0x20b121
0x000028a9      f7ea           imul edx
0x000028ab      89c8           mov eax, ecx
0x000028ad      be01000000     mov esi, 1
0x000028b2      c1f81f         sar eax, 0x1f
0x000028b5      448d040a       lea r8d, [rdx + rcx]
0x000028b9      ba89888888     mov edx, 0x88888889
0x000028be      41c1f80b       sar r8d, 0xb
0x000028c2      4129c0         sub r8d, eax
0x000028c5      4169c0100e00.  imul eax, r8d, 0xe10
0x000028cc      29c1           sub ecx, eax
0x000028ce      89c8           mov eax, ecx
0x000028d0      488d0ded5b00.  lea rcx, str.02d:_02d                   ; 0x84c4 ; "%02d:%02d"
0x000028d7      f7e2           mul edx
0x000028d9      31c0           xor eax, eax
0x000028db      c1ea05         shr edx, 5
0x000028de      4189d1         mov r9d, edx
0x000028e1      ba06000000     mov edx, 6
0x000028e6      e8c5f2ffff     call sym.imp.__sprintf_chk
0x000028eb      4c8d0d2f8820.  lea r9, obj.idle_hhmm.7701              ; 0x20b121
0x000028f2      e96ffdffff     jmp 0x2666
0x000028f7      4c89e7         mov rdi, r12
0x000028fa      e8310d0000     call sym.canon_host
0x000028ff      4885c0         test rax, rax
0x00002902      4989c5         mov r13, rax
0x00002905      7427           je 0x292e
0x00002907      4889c7         mov rdi, rax
0x0000290a      e801f0ffff     call sym.imp.strlen
0x0000290f      488b0d1a8820.  mov rcx, qword [obj.hostlen.7743]       ; [0x20b130:8]=0
0x00002916      4c8b150b8820.  mov r10, qword [obj.hoststr.7742]       ; [0x20b128:8]=0
0x0000291d      e9bbfeffff     jmp 0x27dd
0x00002922      4c8d0d575b00.  lea r9, str..                           ; 0x8480 ; "  .  "
0x00002929      e938fdffff     jmp 0x2666
0x0000292e      4c89e0         mov rax, r12
0x00002931      8b08           mov ecx, dword [rax]
0x00002933      4883c004       add rax, 4
0x00002937      8d91fffefefe   lea edx, [rcx - 0x1010101]
0x0000293d      f7d1           not ecx
0x0000293f      21ca           and edx, ecx
0x00002941      81e280808080   and edx, 0x80808080
0x00002947      74e8           je 0x2931
0x00002949      e95cfeffff     jmp 0x27aa
0x0000294e      e8cdefffff     call sym.imp.__stack_chk_fail
0x00002953      488d0d666300.  lea rcx, obj.__PRETTY_FUNCTION__.7702   ; 0x8cc0 ; "idle_string"
0x0000295a      488d35295b00.  lea rsi, str..._coreutils_8.31_src_who.c ; 0x848a ; "../coreutils-8.31/src/who.c"
0x00002961      488d3d3e5b00.  lea rdi, str.seconds_idle____60___60____24 ; 0x84a6 ; "seconds_idle / (60 * 60) < 24"
0x00002968      bacd000000     mov edx, 0xcd
0x0000296d      e81ef0ffff     call sym.imp.__assert_fail
0x00002972      0f1f4000       nop dword [rax]
0x00002976      662e0f1f8400.  nop word cs:[rax + rax]
;-- who:
0x00002980      4157           push r15
0x00002982      4156           push r14
0x00002984      89f1           mov ecx, esi
0x00002986      4155           push r13
0x00002988      4154           push r12
0x0000298a      55             push rbp
0x0000298b      53             push rbx
0x0000298c      4889fb         mov rbx, rdi
0x0000298f      4883ec58       sub rsp, 0x58
0x00002993      488d542430     lea rdx, [rsp + 0x30]
0x00002998      488d742428     lea rsi, [rsp + 0x28]
0x0000299d      64488b042528.  mov rax, qword fs:[0x28]
0x000029a6      4889442448     mov qword [rsp + 0x48], rax
0x000029ab      31c0           xor eax, eax
0x000029ad      e8fe350000     call sym.read_utmp
0x000029b2      85c0           test eax, eax
0x000029b4      0f855c070000   jne 0x3116
0x000029ba      803d94872000.  cmp byte [obj.short_list], 0            ; [0x20b155:1]=0
0x000029c1      4c8b7c2430     mov r15, qword [rsp + 0x30]
0x000029c6      4c8b6c2428     mov r13, qword [rsp + 0x28]
0x000029cb      0f855d010000   jne 0x2b2e
0x000029d1      803d7a872000.  cmp byte [obj.include_heading], 0       ; [0x20b152:1]=0
0x000029d8      0f8527030000   jne 0x2d05
0x000029de      803d63872000.  cmp byte [obj.my_line_only], 0          ; [0x20b148:1]=0
0x000029e5      0f85e2020000   jne 0x2ccd
0x000029eb      48b800000000.  movabs rax, 0x8000000000000000
0x000029f5      4d85ed         test r13, r13
0x000029f8      4d8d65ff       lea r12, [r13 - 1]
0x000029fc      48890424       mov qword [rsp], rax
0x00002a00      0f84fb000000   je 0x2b01
0x00002a06      488d44243c     lea rax, [rsp + 0x3c]
0x00002a0b      488d1d4f6800.  lea rbx, [0x00009261]
0x00002a12      4d89e6         mov r14, r12
0x00002a15      4d89fc         mov r12, r15
0x00002a18      4889442408     mov qword [rsp + 8], rax
0x00002a1d      0f1f00         nop dword [rax]
0x00002a20      803d21872000.  cmp byte [obj.my_line_only], 0          ; [0x20b148:1]=0
0x00002a27      741a           je 0x2a43
0x00002a29      498d742408     lea rsi, [r12 + 8]
0x00002a2e      ba20000000     mov edx, 0x20                           ; "@"
0x00002a33      4889ef         mov rdi, rbp
0x00002a36      e825eeffff     call sym.imp.strncmp
0x00002a3b      85c0           test eax, eax
0x00002a3d      0f8595000000   jne 0x2ad8
0x00002a43      803dff862000.  cmp byte [obj.need_users], 0            ; [0x20b149:1]=0
0x00002a4a      410fb70424     movzx eax, word [r12]
0x00002a4f      7412           je 0x2a63
0x00002a51      41807c242c00   cmp byte [r12 + 0x2c], 0
0x00002a57      740a           je 0x2a63
0x00002a59      6683f807       cmp ax, 7
0x00002a5d      0f84bd050000   je 0x3020
0x00002a63      803de0862000.  cmp byte [obj.need_runlevel], 0         ; [0x20b14a:1]=0
0x00002a6a      740a           je 0x2a76
0x00002a6c      6683f801       cmp ax, 1
0x00002a70      0f8458010000   je 0x2bce
0x00002a76      803dd2862000.  cmp byte [obj.need_boottime], 0         ; [0x20b14f:1]=0
0x00002a7d      740a           je 0x2a89
0x00002a7f      6683f802       cmp ax, 2
0x00002a83      0f8449030000   je 0x2dd2
0x00002a89      803dbb862000.  cmp byte [obj.need_clockchange], 0      ; [0x20b14b:1]=0
0x00002a90      740a           je 0x2a9c
0x00002a92      6683f803       cmp ax, 3
0x00002a96      0f8482030000   je 0x2e1e
0x00002a9c      803da9862000.  cmp byte [obj.need_initspawn], 0        ; [0x20b14c:1]=0
0x00002aa3      740a           je 0x2aaf
0x00002aa5      6683f805       cmp ax, 5
0x00002aa9      0f848d030000   je 0x2e3c
0x00002aaf      803d97862000.  cmp byte [obj.need_login], 0            ; [0x20b14d:1]=0
0x00002ab6      740a           je 0x2ac2
0x00002ab8      6683f806       cmp ax, 6
0x00002abc      0f84ef030000   je 0x2eb1
0x00002ac2      803d85862000.  cmp byte [obj.need_deadprocs], 0        ; [0x20b14e:1]=0
0x00002ac9      740d           je 0x2ad8
0x00002acb      6683f808       cmp ax, 8
0x00002acf      0f844e040000   je 0x2f23
0x00002ad5      0f1f00         nop dword [rax]
0x00002ad8      6641833c2402   cmp word [r12], 2
0x00002ade      750c           jne 0x2aec
0x00002ae0      496384245401.  movsxd rax, dword [r12 + 0x154]
0x00002ae8      48890424       mov qword [rsp], rax
0x00002aec      4983ee01       sub r14, 1
0x00002af0      4981c4800100.  add r12, 0x180
0x00002af7      4983feff       cmp r14, 0xffffffffffffffff
0x00002afb      0f851fffffff   jne 0x2a20
0x00002b01      488b7c2430     mov rdi, qword [rsp + 0x30]
0x00002b06      e805edffff     call sym.imp.free
0x00002b0b      488b442448     mov rax, qword [rsp + 0x48]
0x00002b10      644833042528.  xor rax, qword fs:[0x28]
0x00002b19      0f8526060000   jne 0x3145
0x00002b1f      4883c458       add rsp, 0x58
0x00002b23      5b             pop rbx
0x00002b24      5d             pop rbp
0x00002b25      415c           pop r12
0x00002b27      415d           pop r13
0x00002b29      415e           pop r14
0x00002b2b      415f           pop r15
0x00002b2d      c3             ret
0x00002b2e      31ed           xor ebp, ebp
0x00002b30      4d85ed         test r13, r13
0x00002b33      498d5dff       lea rbx, [r13 - 1]
0x00002b37      7436           je 0x2b6f
0x00002b39      4c8d25216700.  lea r12, [0x00009261]
0x00002b40      4c8d353d5900.  lea r14, [0x00008484]                   ; " "
0x00002b47      660f1f840000.  nop word [rax + rax]
0x00002b50      41807f2c00     cmp byte [r15 + 0x2c], 0
0x00002b55      7407           je 0x2b5e
0x00002b57      6641833f07     cmp word [r15], 7
0x00002b5c      743b           je 0x2b99
0x00002b5e      4883eb01       sub rbx, 1
0x00002b62      4981c7800100.  add r15, 0x180
0x00002b69      4883fbff       cmp rbx, 0xffffffffffffffff
0x00002b6d      75e1           jne 0x2b50
0x00002b6f      488d35755900.  lea rsi, str.users__lu                  ; 0x84eb ; "\n# users=%lu\n"
0x00002b76      31ff           xor edi, edi
0x00002b78      ba05000000     mov edx, 5
0x00002b7d      e86eedffff     call sym.imp.dcgettext
0x00002b82      4889ea         mov rdx, rbp
0x00002b85      4889c6         mov rsi, rax
0x00002b88      bf01000000     mov edi, 1
0x00002b8d      31c0           xor eax, eax
0x00002b8f      e82cefffff     call sym.imp.__printf_chk
0x00002b94      e968ffffff     jmp 0x2b01
0x00002b99      4c89ff         mov rdi, r15
0x00002b9c      4883c501       add rbp, 1
0x00002ba0      e8ab330000     call sym.extract_trimmed_name
0x00002ba5      488d353a5900.  lea rsi, str.s_s                        ; 0x84e6 ; "%s%s"
0x00002bac      4889c1         mov rcx, rax
0x00002baf      4c89e2         mov rdx, r12
0x00002bb2      4989c5         mov r13, rax
0x00002bb5      bf01000000     mov edi, 1
0x00002bba      31c0           xor eax, eax
0x00002bbc      e8ffeeffff     call sym.imp.__printf_chk
0x00002bc1      4c89ef         mov rdi, r13
0x00002bc4      4d89f4         mov r12, r14
0x00002bc7      e844ecffff     call sym.imp.free
0x00002bcc      eb90           jmp 0x2b5e
0x00002bce      418b442404     mov eax, dword [r12 + 4]
0x00002bd3      b900010000     mov ecx, 0x100
0x00002bd8      99             cdq
0x00002bd9      f7f9           idiv ecx
0x00002bdb      48833d0d8520.  cmp qword [obj.runlevline.7780], 0      ; [0x20b0f0:8]=0
0x00002be3      4189d7         mov r15d, edx
0x00002be6      4189c5         mov r13d, eax
0x00002be9      0f8442040000   je 0x3031
0x00002bef      488d352e5900.  lea rsi, str.run_level                  ; 0x8524 ; "run-level"
0x00002bf6      31ff           xor edi, edi
0x00002bf8      ba05000000     mov edx, 5
0x00002bfd      e8eeecffff     call sym.imp.dcgettext
0x00002c02      488b3de78420.  mov rdi, qword [obj.runlevline.7780]    ; [0x20b0f0:8]=0
0x00002c09      488d0d1e5900.  lea rcx, str.s__c                       ; 0x852e ; "%s %c"
0x00002c10      4989c0         mov r8, rax
0x00002c13      4883caff       or rdx, 0xffffffffffffffff
0x00002c17      31c0           xor eax, eax
0x00002c19      450fb6cf       movzx r9d, r15b
0x00002c1d      be01000000     mov esi, 1
0x00002c22      e889efffff     call sym.imp.__sprintf_chk
0x00002c27      48833db98420.  cmp qword [obj.comment.7781], 0         ; [0x20b0e8:8]=0
0x00002c2f      0f8435040000   je 0x306a
0x00002c35      4180fd4e       cmp r13b, 0x4e
0x00002c39      450fb6fd       movzx r15d, r13b
0x00002c3d      488d35f05800.  lea rsi, str.last                       ; 0x8534 ; "last="
0x00002c44      41bd53000000   mov r13d, 0x53                          ; 'S'
0x00002c4a      ba05000000     mov edx, 5
0x00002c4f      450f45ef       cmovne r13d, r15d
0x00002c53      31ff           xor edi, edi
0x00002c55      4183ef20       sub r15d, 0x20                          ; "@"
0x00002c59      e892ecffff     call sym.imp.dcgettext
0x00002c5e      488b3d838420.  mov rdi, qword [obj.comment.7781]       ; [0x20b0e8:8]=0
0x00002c65      488d0dce5800.  lea rcx, str.s_c                        ; 0x853a ; "%s%c"
0x00002c6c      4989c0         mov r8, rax
0x00002c6f      4589e9         mov r9d, r13d
0x00002c72      4883caff       or rdx, 0xffffffffffffffff
0x00002c76      31c0           xor eax, eax
0x00002c78      be01000000     mov esi, 1
0x00002c7d      4c8d2ddd6500.  lea r13, [0x00009261]
0x00002c84      e827efffff     call sym.imp.__sprintf_chk
0x00002c89      4183ff5e       cmp r15d, 0x5e
0x00002c8d      7707           ja 0x2c96
0x00002c8f      4c8b2d528420.  mov r13, qword [obj.comment.7781]       ; [0x20b0e8:8]=0
0x00002c96      418bbc245401.  mov edi, dword [r12 + 0x154]
0x00002c9e      e89df6ffff     call sym.time_string.isra.1
0x00002ca3      4c8b05468420.  mov r8, qword [obj.runlevline.7780]     ; [0x20b0f0:8]=0
0x00002caa      53             push rbx
0x00002cab      83c9ff         or ecx, 0xffffffff                      ; -1
0x00002cae      4155           push r13
0x00002cb0      53             push rbx
0x00002cb1      4989c1         mov r9, rax
0x00002cb4      53             push rbx
0x00002cb5      ba20000000     mov edx, 0x20                           ; "@"
0x00002cba      4889de         mov rsi, rbx
0x00002cbd      89cf           mov edi, ecx
0x00002cbf      e88cf3ffff     call sym.print_line
0x00002cc4      4883c420       add rsp, 0x20
0x00002cc8      e90bfeffff     jmp 0x2ad8
0x00002ccd      31ff           xor edi, edi
0x00002ccf      e8bcedffff     call sym.imp.ttyname
0x00002cd4      4885c0         test rax, rax
0x00002cd7      4889c5         mov rbp, rax
0x00002cda      0f8421feffff   je 0x2b01
0x00002ce0      488d35375800.  lea rsi, str.dev                        ; 0x851e ; "/dev/"
0x00002ce7      ba05000000     mov edx, 5
0x00002cec      4889c7         mov rdi, rax
0x00002cef      e86cebffff     call sym.imp.strncmp
0x00002cf4      85c0           test eax, eax
0x00002cf6      0f85effcffff   jne 0x29eb
0x00002cfc      4883c505       add rbp, 5
0x00002d00      e9e6fcffff     jmp 0x29eb
0x00002d05      488d35ed5700.  lea rsi, str.EXIT                       ; 0x84f9 ; "EXIT"
0x00002d0c      ba05000000     mov edx, 5
0x00002d11      31ff           xor edi, edi
0x00002d13      e8d8ebffff     call sym.imp.dcgettext
0x00002d18      488d35df5700.  lea rsi, str.COMMENT                    ; 0x84fe ; "COMMENT"
0x00002d1f      ba05000000     mov edx, 5
0x00002d24      31ff           xor edi, edi
0x00002d26      4889442410     mov qword [rsp + 0x10], rax
0x00002d2b      e8c0ebffff     call sym.imp.dcgettext
0x00002d30      488d35cf5700.  lea rsi, [0x00008506]                   ; "PID"
0x00002d37      ba05000000     mov edx, 5
0x00002d3c      31ff           xor edi, edi
0x00002d3e      4989c4         mov r12, rax
0x00002d41      e8aaebffff     call sym.imp.dcgettext
0x00002d46      488d35bd5700.  lea rsi, str.IDLE                       ; 0x850a ; "IDLE"
0x00002d4d      ba05000000     mov edx, 5
0x00002d52      31ff           xor edi, edi
0x00002d54      4889c3         mov rbx, rax
0x00002d57      e894ebffff     call sym.imp.dcgettext
0x00002d5c      488d35ac5700.  lea rsi, str.TIME                       ; 0x850f ; "TIME"
0x00002d63      ba05000000     mov edx, 5
0x00002d68      31ff           xor edi, edi
0x00002d6a      4989c6         mov r14, rax
0x00002d6d      e87eebffff     call sym.imp.dcgettext
0x00002d72      488d359b5700.  lea rsi, str.LINE                       ; 0x8514 ; "LINE"
0x00002d79      ba05000000     mov edx, 5
0x00002d7e      31ff           xor edi, edi
0x00002d80      4889442408     mov qword [rsp + 8], rax
0x00002d85      e866ebffff     call sym.imp.dcgettext
0x00002d8a      488d35885700.  lea rsi, str.NAME                       ; 0x8519 ; "NAME"
0x00002d91      ba05000000     mov edx, 5
0x00002d96      31ff           xor edi, edi
0x00002d98      48890424       mov qword [rsp], rax
0x00002d9c      e84febffff     call sym.imp.dcgettext
0x00002da1      4c8b442410     mov r8, qword [rsp + 0x10]
0x00002da6      83c9ff         or ecx, 0xffffffff                      ; -1
0x00002da9      ba20000000     mov edx, 0x20                           ; "@"
0x00002dae      4889c6         mov rsi, rax
0x00002db1      89cf           mov edi, ecx
0x00002db3      4150           push r8
0x00002db5      4154           push r12
0x00002db7      53             push rbx
0x00002db8      4156           push r14
0x00002dba      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00002dbf      4c8b442420     mov r8, qword [rsp + 0x20]
0x00002dc4      e887f2ffff     call sym.print_line
0x00002dc9      4883c420       add rsp, 0x20
0x00002dcd      e90cfcffff     jmp 0x29de
0x00002dd2      418bbc245401.  mov edi, dword [r12 + 0x154]
0x00002dda      e861f5ffff     call sym.time_string.isra.1
0x00002ddf      488d35595700.  lea rsi, str.system_boot                ; 0x853f ; "system boot"
0x00002de6      4989c5         mov r13, rax
0x00002de9      ba05000000     mov edx, 5
0x00002dee      31ff           xor edi, edi
0x00002df0      e8fbeaffff     call sym.imp.dcgettext
0x00002df5      53             push rbx
0x00002df6      83c9ff         or ecx, 0xffffffff                      ; -1
0x00002df9      53             push rbx
0x00002dfa      488d35606400.  lea rsi, [0x00009261]
0x00002e01      53             push rbx
0x00002e02      53             push rbx
0x00002e03      4989c0         mov r8, rax
0x00002e06      4d89e9         mov r9, r13
0x00002e09      ba20000000     mov edx, 0x20                           ; "@"
0x00002e0e      89cf           mov edi, ecx
0x00002e10      e83bf2ffff     call sym.print_line
0x00002e15      4883c420       add rsp, 0x20
0x00002e19      e9bafcffff     jmp 0x2ad8
0x00002e1e      418bbc245401.  mov edi, dword [r12 + 0x154]
0x00002e26      e815f5ffff     call sym.time_string.isra.1
0x00002e2b      ba05000000     mov edx, 5
0x00002e30      4989c5         mov r13, rax
0x00002e33      488d35115700.  lea rsi, str.clock_change               ; 0x854b ; "clock change"
0x00002e3a      ebb2           jmp 0x2dee
0x00002e3c      4c89e7         mov rdi, r12
0x00002e3f      e88cf4ffff     call sym.make_id_equals_comment
0x00002e44      4c8b7c2408     mov r15, qword [rsp + 8]
0x00002e49      4d63442404     movsxd r8, dword [r12 + 4]
0x00002e4e      488d0d315600.  lea rcx, [0x00008486]                   ; "%ld"
0x00002e55      ba0c000000     mov edx, 0xc
0x00002e5a      be01000000     mov esi, 1
0x00002e5f      4989c5         mov r13, rax
0x00002e62      31c0           xor eax, eax
0x00002e64      4c89ff         mov rdi, r15
0x00002e67      e844edffff     call sym.imp.__sprintf_chk
0x00002e6c      418bbc245401.  mov edi, dword [r12 + 0x154]
0x00002e74      e8c7f4ffff     call sym.time_string.isra.1
0x00002e79      53             push rbx
0x00002e7a      4d8d442408     lea r8, [r12 + 8]
0x00002e7f      4155           push r13
0x00002e81      488d35d96300.  lea rsi, [0x00009261]
0x00002e88      4157           push r15
0x00002e8a      53             push rbx
0x00002e8b      4989c1         mov r9, rax
0x00002e8e      b920000000     mov ecx, 0x20                           ; "@"
0x00002e93      ba20000000     mov edx, 0x20                           ; "@"
0x00002e98      83cfff         or edi, 0xffffffff                      ; -1
0x00002e9b      e8b0f1ffff     call sym.print_line
0x00002ea0      4883c420       add rsp, 0x20
0x00002ea4      4c89ef         mov rdi, r13
0x00002ea7      e864e9ffff     call sym.imp.free
0x00002eac      e927fcffff     jmp 0x2ad8
0x00002eb1      4c89e7         mov rdi, r12
0x00002eb4      e817f4ffff     call sym.make_id_equals_comment
0x00002eb9      4d63442404     movsxd r8, dword [r12 + 4]
0x00002ebe      488b7c2408     mov rdi, qword [rsp + 8]
0x00002ec3      488d0dbc5500.  lea rcx, [0x00008486]                   ; "%ld"
0x00002eca      ba0c000000     mov edx, 0xc
0x00002ecf      be01000000     mov esi, 1
0x00002ed4      4989c5         mov r13, rax
0x00002ed7      31c0           xor eax, eax
0x00002ed9      e8d2ecffff     call sym.imp.__sprintf_chk
0x00002ede      418bbc245401.  mov edi, dword [r12 + 0x154]
0x00002ee6      e855f4ffff     call sym.time_string.isra.1
0x00002eeb      488d35665600.  lea rsi, str.LOGIN                      ; 0x8558 ; "LOGIN"
0x00002ef2      4989c7         mov r15, rax
0x00002ef5      ba05000000     mov edx, 5
0x00002efa      31ff           xor edi, edi
0x00002efc      e8efe9ffff     call sym.imp.dcgettext
0x00002f01      53             push rbx
0x00002f02      4d89f9         mov r9, r15
0x00002f05      4155           push r13
0x00002f07      4d8d442408     lea r8, [r12 + 8]
0x00002f0c      ff742418       push qword [rsp + 0x18]
0x00002f10      b920000000     mov ecx, 0x20                           ; "@"
0x00002f15      53             push rbx
0x00002f16      ba20000000     mov edx, 0x20                           ; "@"
0x00002f1b      4889c6         mov rsi, rax
0x00002f1e      e975ffffff     jmp 0x2e98
0x00002f23      4c89e7         mov rdi, r12
0x00002f26      e8a5f3ffff     call sym.make_id_equals_comment
0x00002f2b      4d63442404     movsxd r8, dword [r12 + 4]
0x00002f30      488b7c2408     mov rdi, qword [rsp + 8]
0x00002f35      488d0d4a5500.  lea rcx, [0x00008486]                   ; "%ld"
0x00002f3c      4989c5         mov r13, rax
0x00002f3f      ba0c000000     mov edx, 0xc
0x00002f44      31c0           xor eax, eax
0x00002f46      be01000000     mov esi, 1
0x00002f4b      e860ecffff     call sym.imp.__sprintf_chk
0x00002f50      48833d888120.  cmp qword [obj.exitstr.7761], 0         ; [0x20b0e0:8]=0
0x00002f58      0f8441010000   je 0x309f
0x00002f5e      450fbf8c244e.  movsx r9d, word [r12 + 0x14e]
0x00002f67      488d35f65500.  lea rsi, str.exit                       ; 0x8564 ; "exit="
0x00002f6e      31ff           xor edi, edi
0x00002f70      ba05000000     mov edx, 5
0x00002f75      44894c2418     mov dword [rsp + 0x18], r9d
0x00002f7a      e871e9ffff     call sym.imp.dcgettext
0x00002f7f      4989c7         mov r15, rax
0x00002f82      410fbf84244c.  movsx eax, word [r12 + 0x14c]
0x00002f8b      488d35cc5500.  lea rsi, str.term                       ; 0x855e ; "term="
0x00002f92      31ff           xor edi, edi
0x00002f94      ba05000000     mov edx, 5
0x00002f99      89442410       mov dword [rsp + 0x10], eax
0x00002f9d      e84ee9ffff     call sym.imp.dcgettext
0x00002fa2      448b4c2418     mov r9d, dword [rsp + 0x18]
0x00002fa7      488b3d328120.  mov rdi, qword [obj.exitstr.7761]       ; [0x20b0e0:8]=0
0x00002fae      488d0db55500.  lea rcx, str.s_d__s_d                   ; 0x856a ; "%s%d %s%d"
0x00002fb5      4989c0         mov r8, rax
0x00002fb8      4883caff       or rdx, 0xffffffffffffffff
0x00002fbc      be01000000     mov esi, 1
0x00002fc1      31c0           xor eax, eax
0x00002fc3      4151           push r9
0x00002fc5      4157           push r15
0x00002fc7      448b4c2420     mov r9d, dword [rsp + 0x20]
0x00002fcc      e8dfebffff     call sym.imp.__sprintf_chk
0x00002fd1      4c8b3d088120.  mov r15, qword [obj.exitstr.7761]       ; [0x20b0e0:8]=0
0x00002fd8      418bbc245401.  mov edi, dword [r12 + 0x154]
0x00002fe0      e85bf3ffff     call sym.time_string.isra.1
0x00002fe5      4157           push r15
0x00002fe7      4d8d442408     lea r8, [r12 + 8]
0x00002fec      4155           push r13
0x00002fee      488d356c6200.  lea rsi, [0x00009261]
0x00002ff5      ff742428       push qword [rsp + 0x28]
0x00002ff9      53             push rbx
0x00002ffa      83cfff         or edi, 0xffffffff                      ; -1
0x00002ffd      4989c1         mov r9, rax
0x00003000      b920000000     mov ecx, 0x20                           ; "@"
0x00003005      ba20000000     mov edx, 0x20                           ; "@"
0x0000300a      e841f0ffff     call sym.print_line
0x0000300f      4883c430       add rsp, 0x30
0x00003013      4c89ef         mov rdi, r13
0x00003016      e8f5e7ffff     call sym.imp.free
0x0000301b      e9b8faffff     jmp 0x2ad8
0x00003020      488b3424       mov rsi, qword [rsp]
0x00003024      4c89e7         mov rdi, r12
0x00003027      e894f3ffff     call sym.print_user
0x0000302c      e9a7faffff     jmp 0x2ad8
0x00003031      488d35ec5400.  lea rsi, str.run_level                  ; 0x8524 ; "run-level"
0x00003038      ba05000000     mov edx, 5
0x0000303d      31ff           xor edi, edi
0x0000303f      e8ace8ffff     call sym.imp.dcgettext
0x00003044      4883c9ff       or rcx, 0xffffffffffffffff
0x00003048      4889c7         mov rdi, rax
0x0000304b      31c0           xor eax, eax
0x0000304d      f2ae           repne scasb al, byte [rdi]
0x0000304f      4889c8         mov rax, rcx
0x00003052      48f7d0         not rax
0x00003055      488d7802       lea rdi, [rax + 2]
0x00003059      e8122b0000     call sym.xmalloc
0x0000305e      4889058b8020.  mov qword [obj.runlevline.7780], rax    ; [0x20b0f0:8]=0
0x00003065      e985fbffff     jmp 0x2bef
0x0000306a      488d35c35400.  lea rsi, str.last                       ; 0x8534 ; "last="
0x00003071      ba05000000     mov edx, 5
0x00003076      31ff           xor edi, edi
0x00003078      e873e8ffff     call sym.imp.dcgettext
0x0000307d      4883c9ff       or rcx, 0xffffffffffffffff
0x00003081      4889c7         mov rdi, rax
0x00003084      31c0           xor eax, eax
0x00003086      f2ae           repne scasb al, byte [rdi]
0x00003088      48f7d9         neg rcx
0x0000308b      4889cf         mov rdi, rcx
0x0000308e      e8dd2a0000     call sym.xmalloc
0x00003093      4889054e8020.  mov qword [obj.comment.7781], rax       ; [0x20b0e8:8]=0
0x0000309a      e996fbffff     jmp 0x2c35
0x0000309f      488d35b85400.  lea rsi, str.term                       ; 0x855e ; "term="
0x000030a6      ba05000000     mov edx, 5
0x000030ab      31ff           xor edi, edi
0x000030ad      4531ff         xor r15d, r15d
0x000030b0      e83be8ffff     call sym.imp.dcgettext
0x000030b5      4983c8ff       or r8, 0xffffffffffffffff
0x000030b9      4889c7         mov rdi, rax
0x000030bc      4489f8         mov eax, r15d
0x000030bf      4c89c1         mov rcx, r8
0x000030c2      4c89442418     mov qword [rsp + 0x18], r8
0x000030c7      488d35965400.  lea rsi, str.exit                       ; 0x8564 ; "exit="
0x000030ce      f2ae           repne scasb al, byte [rdi]
0x000030d0      ba05000000     mov edx, 5
0x000030d5      31ff           xor edi, edi
0x000030d7      48f7d1         not rcx
0x000030da      4a8d0401       lea rax, [rcx + r8]
0x000030de      4889442410     mov qword [rsp + 0x10], rax
0x000030e3      e808e8ffff     call sym.imp.dcgettext
0x000030e8      4c8b442418     mov r8, qword [rsp + 0x18]
0x000030ed      4889c7         mov rdi, rax
0x000030f0      4489f8         mov eax, r15d
0x000030f3      4c89c1         mov rcx, r8
0x000030f6      f2ae           repne scasb al, byte [rdi]
0x000030f8      488b442410     mov rax, qword [rsp + 0x10]
0x000030fd      48f7d1         not rcx
0x00003100      488d7c080d     lea rdi, [rax + rcx + 0xd]
0x00003105      e8662a0000     call sym.xmalloc
0x0000310a      488905cf7f20.  mov qword [obj.exitstr.7761], rax       ; [0x20b0e0:8]=0
0x00003111      e948feffff     jmp 0x2f5e
0x00003116      4889da         mov rdx, rbx
0x00003119      be03000000     mov esi, 3
0x0000311e      31ff           xor edi, edi
0x00003120      e83b220000     call sym.quotearg_n_style_colon
0x00003125      4889c3         mov rbx, rax
0x00003128      e813e7ffff     call sym.imp.__errno_location
0x0000312d      8b30           mov esi, dword [rax]
0x0000312f      488d15ab5b00.  lea rdx, [0x00008ce1]                   ; "%s"
0x00003136      4889d9         mov rcx, rbx
0x00003139      bf01000000     mov edi, 1
0x0000313e      31c0           xor eax, eax
0x00003140      e8abe9ffff     call sym.imp.error
0x00003145      e8d6e7ffff     call sym.imp.__stack_chk_fail
0x0000314a      660f1f440000   nop word [rax + rax]
;-- usage:
0x00003150      4155           push r13
0x00003152      4154           push r12
0x00003154      ba05000000     mov edx, 5
0x00003159      55             push rbp
0x0000315a      53             push rbx
0x0000315b      89fd           mov ebp, edi
0x0000315d      4881ec880000.  sub rsp, 0x88
0x00003164      488b1d3d8020.  mov rbx, qword [obj.program_name]       ; [0x20b1a8:8]=0
0x0000316b      64488b042528.  mov rax, qword fs:[0x28]
0x00003174      4889442478     mov qword [rsp + 0x78], rax
0x00003179      31c0           xor eax, eax
0x0000317b      85ff           test edi, edi
0x0000317d      742e           je 0x31ad
0x0000317f      488d35ca5500.  lea rsi, str.Try___s___help__for_more_information. ; 0x8750 ; "Try '%s --help' for more information.\n"
0x00003186      31ff           xor edi, edi
0x00003188      e863e7ffff     call sym.imp.dcgettext
0x0000318d      488b3d2c7f20.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20b0c0:8]=0
0x00003194      4889c2         mov rdx, rax
0x00003197      4889d9         mov rcx, rbx
0x0000319a      be01000000     mov esi, 1
0x0000319f      31c0           xor eax, eax
0x000031a1      e89ae9ffff     call sym.imp.__fprintf_chk
0x000031a6      89ef           mov edi, ebp
0x000031a8      e873e9ffff     call sym.imp.exit
0x000031ad      488d35c45500.  lea rsi, str.Usage:__s__OPTION_...___FILE___ARG1_ARG2 ; 0x8778 ; "Usage: %s [OPTION]... [ FILE | ARG1 ARG2 ]\n"
0x000031b4      31ff           xor edi, edi
0x000031b6      e835e7ffff     call sym.imp.dcgettext
0x000031bb      4889da         mov rdx, rbx
0x000031be      4889c6         mov rsi, rax
0x000031c1      bf01000000     mov edi, 1
0x000031c6      31c0           xor eax, eax
0x000031c8      e8f3e8ffff     call sym.imp.__printf_chk
0x000031cd      488b1dd47e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x000031d4      488d35cd5500.  lea rsi, str.Print_information_about_users_who_are_currently_logged_in. ; 0x87a8 ; "Print information about users who are currently logged in.\n"
0x000031db      ba05000000     mov edx, 5
0x000031e0      31ff           xor edi, edi
0x000031e2      e809e7ffff     call sym.imp.dcgettext
0x000031e7      4889de         mov rsi, rbx
0x000031ea      4889c7         mov rdi, rax
0x000031ed      e8dee7ffff     call sym.imp.fputs_unlocked
0x000031f2      488b1daf7e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x000031f9      488d35e85500.  lea rsi, str.a____all_________same_as__b__d___login__p__r__t__T__u_____b____boot________time_of_last_system_boot_____d____dead________print_dead_processes_____H____heading_____print_line_of_column_headings ; 0x87e8 ; "\n  -a, --all         same as -b -d --login -p -r -t -T -u\n  -b, --boot        time of last system boot\n  -d, --dead        print dead processes\n  -H, --heading     print line of column headings\n"
0x00003200      ba05000000     mov edx, 5
0x00003205      31ff           xor edi, edi
0x00003207      e8e4e6ffff     call sym.imp.dcgettext
0x0000320c      4889de         mov rsi, rbx
0x0000320f      4889c7         mov rdi, rax
0x00003212      e8b9e7ffff     call sym.imp.fputs_unlocked
0x00003217      488b1d8a7e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x0000321e      488d358b5600.  lea rsi, str.l____login_______print_system_login_processes ; 0x88b0 ; "  -l, --login       print system login processes\n"
0x00003225      ba05000000     mov edx, 5
0x0000322a      31ff           xor edi, edi
0x0000322c      e8bfe6ffff     call sym.imp.dcgettext
0x00003231      4889de         mov rsi, rbx
0x00003234      4889c7         mov rdi, rax
0x00003237      e894e7ffff     call sym.imp.fputs_unlocked
0x0000323c      488b1d657e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x00003243      488d359e5600.  lea rsi, str.lookup______attempt_to_canonicalize_hostnames_via_DNS_____m________________only_hostname_and_user_associated_with_stdin_____p____process_____print_active_processes_spawned_by_init ; 0x88e8 ; "      --lookup      attempt to canonicalize hostnames via DNS\n  -m                only hostname and user associated with stdin\n  -p, --process     print active processes spawned by init\n"
0x0000324a      ba05000000     mov edx, 5
0x0000324f      31ff           xor edi, edi
0x00003251      e89ae6ffff     call sym.imp.dcgettext
0x00003256      4889de         mov rsi, rbx
0x00003259      4889c7         mov rdi, rax
0x0000325c      e86fe7ffff     call sym.imp.fputs_unlocked
0x00003261      488b1d407e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x00003268      488d35395700.  lea rsi, str.q____count_______all_login_names_and_number_of_users_logged_on_____r____runlevel____print_current_runlevel_____s____short_______print_only_name__line__and_time__default______t____time________print_last_system_clock_change ; 0x89a8 ; "  -q, --count       all login names and number of users logged on\n  -r, --runlevel    print current runlevel\n  -s, --short       print only name, line, and time (default)\n  -t, --time        print last system clock change\n"
0x0000326f      ba05000000     mov edx, 5
0x00003274      31ff           xor edi, edi
0x00003276      e875e6ffff     call sym.imp.dcgettext
0x0000327b      4889de         mov rsi, rbx
0x0000327e      4889c7         mov rdi, rax
0x00003281      e84ae7ffff     call sym.imp.fputs_unlocked
0x00003286      488b1d1b7e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x0000328d      488d35f45700.  lea rsi, str.T___w____mesg____add_user_s_message_status_as______or_______u____users_______list_users_logged_in__________message_____same_as__T__________writable____same_as__T ; 0x8a88 ; "  -T, -w, --mesg    add user's message status as +, - or ?\n  -u, --users       list users logged in\n      --message     same as -T\n      --writable    same as -T\n"
0x00003294      ba05000000     mov edx, 5
0x00003299      31ff           xor edi, edi
0x0000329b      e850e6ffff     call sym.imp.dcgettext
0x000032a0      4889de         mov rsi, rbx
0x000032a3      4889c7         mov rdi, rax
0x000032a6      e825e7ffff     call sym.imp.fputs_unlocked
0x000032ab      488b1df67d20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x000032b2      488d35775800.  lea rsi, str.help_____display_this_help_and_exit ; 0x8b30 ; "      --help     display this help and exit\n"
0x000032b9      ba05000000     mov edx, 5
0x000032be      31ff           xor edi, edi
0x000032c0      e82be6ffff     call sym.imp.dcgettext
0x000032c5      4889de         mov rsi, rbx
0x000032c8      4889c7         mov rdi, rax
0x000032cb      e800e7ffff     call sym.imp.fputs_unlocked
0x000032d0      488b1dd17d20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x000032d7      488d35825800.  lea rsi, str.version__output_version_information_and_exit ; 0x8b60 ; "      --version  output version information and exit\n"
0x000032de      ba05000000     mov edx, 5
0x000032e3      31ff           xor edi, edi
0x000032e5      e806e6ffff     call sym.imp.dcgettext
0x000032ea      4889de         mov rsi, rbx
0x000032ed      4889c7         mov rdi, rax
0x000032f0      488d1d7d5200.  lea rbx, [0x00008574]                   ; "who"
0x000032f7      e8d4e6ffff     call sym.imp.fputs_unlocked
0x000032fc      488d35955800.  lea rsi, str.If_FILE_is_not_specified__use__s.___s_as_FILE_is_common.__If_ARG1_ARG2_given___m_presumed:__am_i__or__mom_likes__are_usual. ; 0x8b98 ; "\nIf FILE is not specified, use %s.  %s as FILE is common.\nIf ARG1 ARG2 given, -m presumed: 'am i' or 'mom likes' are usual.\n"
0x00003303      ba05000000     mov edx, 5
0x00003308      31ff           xor edi, edi
0x0000330a      e8e1e5ffff     call sym.imp.dcgettext
0x0000330f      488d0d625200.  lea rcx, str.var_log_wtmp               ; 0x8578 ; "/var/log/wtmp"
0x00003316      488d15695200.  lea rdx, str.var_run_utmp               ; 0x8586 ; "/var/run/utmp"
0x0000331d      4889c6         mov rsi, rax
0x00003320      bf01000000     mov edi, 1
0x00003325      31c0           xor eax, eax
0x00003327      e894e7ffff     call sym.imp.__printf_chk
0x0000332c      488d05615200.  lea rax, [0x00008594]                   ; "["
0x00003333      488d0d9b5200.  lea rcx, str.sha256sum                  ; 0x85d5 ; "sha256sum"
0x0000333a      48c744246000.  mov qword [rsp + 0x60], 0
0x00003343      48c744246800.  mov qword [rsp + 0x68], 0
0x0000334c      4889e2         mov rdx, rsp
0x0000334f      48890424       mov qword [rsp], rax
0x00003353      488d053c5200.  lea rax, str.test_invocation            ; 0x8596 ; "test invocation"
0x0000335a      48894c2430     mov qword [rsp + 0x30], rcx
0x0000335f      488d0d795200.  lea rcx, str.sha384sum                  ; 0x85df ; "sha384sum"
0x00003366      4889442408     mov qword [rsp + 8], rax
0x0000336b      488d059c5200.  lea rax, [0x0000860e]                   ; "coreutils"
0x00003372      48894c2440     mov qword [rsp + 0x40], rcx
0x00003377      488d0d6b5200.  lea rcx, str.sha512sum                  ; 0x85e9 ; "sha512sum"
0x0000337e      4889442410     mov qword [rsp + 0x10], rax
0x00003383      488d051c5200.  lea rax, str.Multi_call_invocation      ; 0x85a6 ; "Multi-call invocation"
0x0000338a      48894c2450     mov qword [rsp + 0x50], rcx
0x0000338f      4889442418     mov qword [rsp + 0x18], rax
0x00003394      488d05215200.  lea rax, str.sha224sum                  ; 0x85bc ; "sha224sum"
0x0000339b      4889442420     mov qword [rsp + 0x20], rax
0x000033a0      488d051f5200.  lea rax, str.sha2_utilities             ; 0x85c6 ; "sha2 utilities"
0x000033a7      4889442428     mov qword [rsp + 0x28], rax
0x000033ac      4889442438     mov qword [rsp + 0x38], rax
0x000033b1      4889442448     mov qword [rsp + 0x48], rax
0x000033b6      4889442458     mov qword [rsp + 0x58], rax
0x000033bb      0f1f440000     nop dword [rax + rax]
0x000033c0      4883c210       add rdx, 0x10
0x000033c4      488b3a         mov rdi, qword [rdx]
0x000033c7      4885ff         test rdi, rdi
0x000033ca      7413           je 0x33df
0x000033cc      b904000000     mov ecx, 4
0x000033d1      4889de         mov rsi, rbx
0x000033d4      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000033d6      0f97c0         seta al
0x000033d9      1c00           sbb al, 0
0x000033db      84c0           test al, al
0x000033dd      75e1           jne 0x33c0
0x000033df      4c8b6208       mov r12, qword [rdx + 8]
0x000033e3      31ff           xor edi, edi
0x000033e5      ba05000000     mov edx, 5
0x000033ea      488d35025200.  lea rsi, str.s_online_help:___s         ; 0x85f3 ; "\n%s online help: <%s>\n"
0x000033f1      4d85e4         test r12, r12
0x000033f4      0f84c1000000   je 0x34bb
0x000033fa      e8f1e4ffff     call sym.imp.dcgettext
0x000033ff      488d0d125800.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x8c18 ; "https://www.gnu.org/software/coreutils/"
0x00003406      488d15fd5100.  lea rdx, str.GNU_coreutils              ; 0x860a ; "GNU coreutils"
0x0000340d      4889c6         mov rsi, rax
0x00003410      bf01000000     mov edi, 1
0x00003415      31c0           xor eax, eax
0x00003417      e8a4e6ffff     call sym.imp.__printf_chk
0x0000341c      31f6           xor esi, esi
0x0000341e      bf05000000     mov edi, 5
0x00003423      e888e6ffff     call sym.imp.setlocale
0x00003428      4885c0         test rax, rax
0x0000342b      741c           je 0x3449
0x0000342d      488d35e45100.  lea rsi, [0x00008618]                   ; "en_"
0x00003434      ba03000000     mov edx, 3
0x00003439      4889c7         mov rdi, rax
0x0000343c      e81fe4ffff     call sym.imp.strncmp
0x00003441      85c0           test eax, eax
0x00003443      0f8507010000   jne 0x3550
0x00003449      488d35cc5100.  lea rsi, str.Full_documentation___s_s   ; 0x861c ; "Full documentation <%s%s>\n"
0x00003450      31ff           xor edi, edi
0x00003452      ba05000000     mov edx, 5
0x00003457      e894e4ffff     call sym.imp.dcgettext
0x0000345c      488d0d115100.  lea rcx, [0x00008574]                   ; "who"
0x00003463      488d15ae5700.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x8c18 ; "https://www.gnu.org/software/coreutils/"
0x0000346a      4889c6         mov rsi, rax
0x0000346d      bf01000000     mov edi, 1
0x00003472      31c0           xor eax, eax
0x00003474      e847e6ffff     call sym.imp.__printf_chk
0x00003479      4939dc         cmp r12, rbx
0x0000347c      488d0d2d5100.  lea rcx, [0x000085b0]                   ; " invocation"
0x00003483      488d1dd75d00.  lea rbx, [0x00009261]
0x0000348a      480f44d9       cmove rbx, rcx
0x0000348e      488d35f35700.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x8c88 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00003495      31ff           xor edi, edi
0x00003497      ba05000000     mov edx, 5
0x0000349c      e84fe4ffff     call sym.imp.dcgettext
0x000034a1      4889d9         mov rcx, rbx
0x000034a4      4889c6         mov rsi, rax
0x000034a7      4c89e2         mov rdx, r12
0x000034aa      bf01000000     mov edi, 1
0x000034af      31c0           xor eax, eax
0x000034b1      e80ae6ffff     call sym.imp.__printf_chk
0x000034b6      e9ebfcffff     jmp 0x31a6
0x000034bb      e830e4ffff     call sym.imp.dcgettext
0x000034c0      488d0d515700.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x8c18 ; "https://www.gnu.org/software/coreutils/"
0x000034c7      488d153c5100.  lea rdx, str.GNU_coreutils              ; 0x860a ; "GNU coreutils"
0x000034ce      4889c6         mov rsi, rax
0x000034d1      bf01000000     mov edi, 1
0x000034d6      31c0           xor eax, eax
0x000034d8      e8e3e5ffff     call sym.imp.__printf_chk
0x000034dd      31f6           xor esi, esi
0x000034df      bf05000000     mov edi, 5
0x000034e4      e8c7e5ffff     call sym.imp.setlocale
0x000034e9      4885c0         test rax, rax
0x000034ec      7418           je 0x3506
0x000034ee      488d35235100.  lea rsi, [0x00008618]                   ; "en_"
0x000034f5      ba03000000     mov edx, 3
0x000034fa      4889c7         mov rdi, rax
0x000034fd      e85ee3ffff     call sym.imp.strncmp
0x00003502      85c0           test eax, eax
0x00003504      7543           jne 0x3549
0x00003506      488d350f5100.  lea rsi, str.Full_documentation___s_s   ; 0x861c ; "Full documentation <%s%s>\n"
0x0000350d      ba05000000     mov edx, 5
0x00003512      31ff           xor edi, edi
0x00003514      4c8d25595000.  lea r12, [0x00008574]                   ; "who"
0x0000351b      488d1d8e5000.  lea rbx, [0x000085b0]                   ; " invocation"
0x00003522      e8c9e3ffff     call sym.imp.dcgettext
0x00003527      488d0d465000.  lea rcx, [0x00008574]                   ; "who"
0x0000352e      488d15e35600.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x8c18 ; "https://www.gnu.org/software/coreutils/"
0x00003535      4889c6         mov rsi, rax
0x00003538      bf01000000     mov edi, 1
0x0000353d      31c0           xor eax, eax
0x0000353f      e87ce5ffff     call sym.imp.__printf_chk
0x00003544      e945ffffff     jmp 0x348e
0x00003549      4c8d25245000.  lea r12, [0x00008574]                   ; "who"
0x00003550      4c8b2d517b20.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x00003557      488d35e25600.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x8c40 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x0000355e      31ff           xor edi, edi
0x00003560      ba05000000     mov edx, 5
0x00003565      e886e3ffff     call sym.imp.dcgettext
0x0000356a      4c89ee         mov rsi, r13
0x0000356d      4889c7         mov rdi, rax
0x00003570      e85be4ffff     call sym.imp.fputs_unlocked
0x00003575      e9cffeffff     jmp 0x3449
0x0000357a      660f1f440000   nop word [rax + rax]
;-- canon_host_r:
0x00003580      4154           push r12                                ; ../coreutils-8.31/lib/canon-host.c:61
0x00003582      55             push rbp
0x00003583      488d15d67b20.  lea rdx, obj.hints.3317                 ; ../coreutils-8.31/lib/canon-host.c:68 ; 0x20b160
0x0000358a      53             push rbx                                ; ../coreutils-8.31/lib/canon-host.c:61
0x0000358b      4889f3         mov rbx, rsi
0x0000358e      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/canon-host.c:68
0x00003590      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/canon-host.c:61
0x00003593      4883ec10       sub rsp, 0x10
0x00003597      c705bf7b2000.  mov dword [obj.hints.3317], 2           ; ../coreutils-8.31/lib/canon-host.c:67 ; [0x20b160:4]=0
0x000035a1      4889e1         mov rcx, rsp                            ; ../coreutils-8.31/lib/canon-host.c:68
0x000035a4      48c704240000.  mov qword [rsp], 0                      ; ../coreutils-8.31/lib/canon-host.c:64
0x000035ac      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/canon-host.c:61
0x000035b5      4889442408     mov qword [rsp + 8], rax
0x000035ba      31c0           xor eax, eax
0x000035bc      e88fe5ffff     call sym.imp.getaddrinfo                ; ../coreutils-8.31/lib/canon-host.c:68
0x000035c1      85c0           test eax, eax                           ; ../coreutils-8.31/lib/canon-host.c:69
0x000035c3      7553           jne 0x3618
0x000035c5      4c8b2424       mov r12, qword [rsp]                    ; ../coreutils-8.31/lib/canon-host.c:74
0x000035c9      498b7c2420     mov rdi, qword [r12 + 0x20]
0x000035ce      4885ff         test rdi, rdi
0x000035d1      480f44fd       cmove rdi, rbp
0x000035d5      e886e5ffff     call sym.imp.strdup
0x000035da      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/canon-host.c:75
0x000035dd      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/canon-host.c:74
0x000035e0      750b           jne 0x35ed                              ; ../coreutils-8.31/lib/canon-host.c:75
0x000035e2      4885db         test rbx, rbx
0x000035e5      7406           je 0x35ed
0x000035e7      c703f6ffffff   mov dword [rbx], 0xfffffff6             ; ../coreutils-8.31/lib/canon-host.c:76 ; [0xfffffff6:4]=-1 ; 4294967286
0x000035ed      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/canon-host.c:77
0x000035f0      e8abe5ffff     call sym.imp.freeaddrinfo
0x000035f5      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/canon-host.c:83
0x000035fa      644833142528.  xor rdx, qword fs:[0x28]
0x00003603      4889e8         mov rax, rbp
0x00003606      751b           jne 0x3623
0x00003608      4883c410       add rsp, 0x10
0x0000360c      5b             pop rbx
0x0000360d      5d             pop rbp
0x0000360e      415c           pop r12
0x00003610      c3             ret
0x00003611      0f1f80000000.  nop dword [rax]
0x00003618      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/canon-host.c:62
0x0000361a      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/canon-host.c:79
0x0000361d      74d6           je 0x35f5
0x0000361f      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/canon-host.c:80
0x00003621      ebd2           jmp 0x35f5
0x00003623      e8f8e2ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/canon-host.c:83
0x00003628      0f1f84000000.  nop dword [rax + rax]
;-- canon_host:
0x00003630      488d35597b20.  lea rsi, obj.last_cherror               ; ../coreutils-8.31/lib/canon-host.c:34 ; 0x20b190
0x00003637      e944ffffff     jmp sym.canon_host_r
0x0000363c      0f1f4000       nop dword [rax]
;-- ch_strerror:
0x00003640      8b3d4a7b2000   mov edi, dword [obj.last_cherror]       ; ../coreutils-8.31/lib/canon-host.c:88 ; [0x20b190:4]=0
0x00003646      e915e3ffff     jmp sym.imp.gai_strerror
0x0000364b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/canon-host.c:89
;-- close_stdout_set_file_name:
0x00003650      48893d497b20.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x20b1a0:8]=0
0x00003657      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00003658      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00003660      40883d317b20.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x20b198:1]=0
0x00003667      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00003668      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00003670      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00003671      53             push rbx
0x00003672      4883ec08       sub rsp, 8
0x00003676      488b3d2b7a20.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x0000367d      e83e2b0000     call sym.close_stream
0x00003682      85c0           test eax, eax
0x00003684      7416           je 0x369c
0x00003686      e8b5e1ffff     call sym.imp.__errno_location
0x0000368b      803d067b2000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x20b198:1]=0
0x00003692      4889c3         mov rbx, rax
0x00003695      741c           je 0x36b3
0x00003697      833820         cmp dword [rax], 0x20
0x0000369a      7517           jne 0x36b3
0x0000369c      488b3d1d7a20.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20b0c0:8]=0
0x000036a3      e8182b0000     call sym.close_stream
0x000036a8      85c0           test eax, eax
0x000036aa      7546           jne 0x36f2
0x000036ac      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x000036b0      5b             pop rbx
0x000036b1      5d             pop rbp
0x000036b2      c3             ret
0x000036b3      488d35175600.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x8cd1 ; "write error"
0x000036ba      31ff           xor edi, edi
0x000036bc      ba05000000     mov edx, 5
0x000036c1      e82ae2ffff     call sym.imp.dcgettext
0x000036c6      488b3dd37a20.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x20b1a0:8]=0
0x000036cd      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x000036d0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x000036d3      7428           je 0x36fd
0x000036d5      e8561c0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x000036da      8b33           mov esi, dword [rbx]
0x000036dc      488d15fa5500.  lea rdx, str.s:__s                      ; 0x8cdd ; "%s: %s"
0x000036e3      4889c1         mov rcx, rax
0x000036e6      4989e8         mov r8, rbp
0x000036e9      31ff           xor edi, edi
0x000036eb      31c0           xor eax, eax
0x000036ed      e8fee3ffff     call sym.imp.error
0x000036f2      8b3d30792000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x20b028:4]=1
0x000036f8      e873e1ffff     call sym.imp._exit
0x000036fd      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x000036ff      488d15db5500.  lea rdx, [0x00008ce1]                   ; "%s"
0x00003706      4889c1         mov rcx, rax
0x00003709      31ff           xor edi, edi
0x0000370b      31c0           xor eax, eax
0x0000370d      e8dee3ffff     call sym.imp.error
0x00003712      ebde           jmp 0x36f2
0x00003714      662e0f1f8400.  nop word cs:[rax + rax]
0x0000371e      6690           nop
;-- hard_locale:
0x00003720      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00003724      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00003726      e885e3ffff     call sym.imp.setlocale
0x0000372b      4889c2         mov rdx, rax
0x0000372e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00003733      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00003736      741d           je 0x3755
0x00003738      488d3da55500.  lea rdi, [0x00008ce4]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x0000373f      b902000000     mov ecx, 2
0x00003744      4889d6         mov rsi, rdx
0x00003747      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00003749      0f97c1         seta cl
0x0000374c      80d900         sbb cl, 0
0x0000374f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00003751      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00003753      750b           jne 0x3760
0x00003755      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00003759      c3             ret
0x0000375a      660f1f440000   nop word [rax + rax]
0x00003760      488d3d7f5500.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x8ce6 ; "POSIX"
0x00003767      b906000000     mov ecx, 6
0x0000376c      4889d6         mov rsi, rdx
0x0000376f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00003771      0f97c0         seta al
0x00003774      1c00           sbb al, 0
0x00003776      84c0           test al, al
0x00003778      0f95c0         setne al
0x0000377b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0000377f      c3             ret
;-- imaxtostr:
0x00003780      4885ff         test rdi, rdi
0x00003783      488d4e14       lea rcx, [rsi + 0x14]                   ; ../coreutils-8.31/lib/anytostr.c:38
0x00003787      c6461400       mov byte [rsi + 0x14], 0                ; ../coreutils-8.31/lib/anytostr.c:39
0x0000378b      49b967666666.  movabs r9, 0x6666666666666667           ; ../coreutils-8.31/lib/anytostr.c:44 ; 'gfffffff'
0x00003795      48becdcccccc.  movabs rsi, 0xcccccccccccccccd          ; ../coreutils-8.31/lib/anytostr.c:52
0x0000379f      41b830000000   mov r8d, 0x30                           ; ../coreutils-8.31/lib/anytostr.c:44 ; '0'
0x000037a5      783c           js 0x37e3                               ; ../coreutils-8.31/lib/anytostr.c:41
0x000037a7      660f1f840000.  nop word [rax + rax]
0x000037b0      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/anytostr.c:52
0x000037b3      4883e901       sub rcx, 1
0x000037b7      48f7e6         mul rsi
0x000037ba      48c1ea03       shr rdx, 3
0x000037be      488d0492       lea rax, [rdx + rdx*4]
0x000037c2      4801c0         add rax, rax
0x000037c5      4829c7         sub rdi, rax
0x000037c8      83c730         add edi, 0x30
0x000037cb      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/anytostr.c:53
0x000037ce      408839         mov byte [rcx], dil                     ; ../coreutils-8.31/lib/anytostr.c:52
0x000037d1      4889d7         mov rdi, rdx                            ; ../coreutils-8.31/lib/anytostr.c:53
0x000037d4      75da           jne 0x37b0
0x000037d6      4889c8         mov rax, rcx                            ; ../coreutils-8.31/lib/anytostr.c:57
0x000037d9      c3             ret
0x000037da      660f1f440000   nop word [rax + rax]
0x000037e0      4889f1         mov rcx, rsi
0x000037e3      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/anytostr.c:44
0x000037e6      488d71ff       lea rsi, [rcx - 1]
0x000037ea      49f7e9         imul r9
0x000037ed      4889f8         mov rax, rdi
0x000037f0      48c1f83f       sar rax, 0x3f
0x000037f4      48c1fa02       sar rdx, 2
0x000037f8      4829c2         sub rdx, rax
0x000037fb      488d0492       lea rax, [rdx + rdx*4]
0x000037ff      418d0440       lea eax, [r8 + rax*2]
0x00003803      29f8           sub eax, edi
0x00003805      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/anytostr.c:45
0x00003808      4889d7         mov rdi, rdx
0x0000380b      8841ff         mov byte [rcx - 1], al                  ; ../coreutils-8.31/lib/anytostr.c:44
0x0000380e      75d0           jne 0x37e0                              ; ../coreutils-8.31/lib/anytostr.c:45
0x00003810      4883e902       sub rcx, 2                              ; ../coreutils-8.31/lib/anytostr.c:47
0x00003814      c646ff2d       mov byte [rsi - 1], 0x2d                ; '-'
                                                                       ; [0x2d:1]=0
0x00003818      4889c8         mov rax, rcx                            ; ../coreutils-8.31/lib/anytostr.c:57
0x0000381b      c3             ret
0x0000381c      0f1f4000       nop dword [rax]
;-- set_program_name:
0x00003820      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00003823      53             push rbx
0x00003824      7477           je 0x389d                               ; ../coreutils-8.31/lib/progname.c:51
0x00003826      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x0000382b      4889fb         mov rbx, rdi
0x0000382e      e83de1ffff     call sym.imp.strrchr
0x00003833      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00003836      7455           je 0x388d
0x00003838      4c8d4001       lea r8, [rax + 1]
0x0000383c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x0000383f      4829da         sub rdx, rbx
0x00003842      4883fa06       cmp rdx, 6
0x00003846      7e45           jle 0x388d
0x00003848      488d70fa       lea rsi, [rax - 6]
0x0000384c      488d3dd55400.  lea rdi, str..libs                      ; 0x8d28 ; "/.libs/"
0x00003853      b907000000     mov ecx, 7
0x00003858      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000385a      0f97c2         seta dl
0x0000385d      80da00         sbb dl, 0
0x00003860      84d2           test dl, dl
0x00003862      7529           jne 0x388d
0x00003864      488d3dc55400.  lea rdi, [0x00008d30]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x0000386b      b903000000     mov ecx, 3
0x00003870      4c89c6         mov rsi, r8
0x00003873      4c89c3         mov rbx, r8
0x00003876      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00003878      0f97c2         seta dl
0x0000387b      80da00         sbb dl, 0
0x0000387e      84d2           test dl, dl
0x00003880      750b           jne 0x388d
0x00003882      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00003886      48891d137820.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x20b0a0:8]=0
0x0000388d      48891d147920.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x20b1a8:8]=0
0x00003894      48891d1d7820.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x20b0b8:8]=0
0x0000389b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x0000389c      c3             ret
0x0000389d      488b0d1c7820.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20b0c0:8]=0
0x000038a4      488d3d455400.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x8cf0 ; "A NULL argv[0] was passed through an exec system call.\n"
0x000038ab      ba37000000     mov edx, 0x37                           ; '7'
0x000038b0      be01000000     mov esi, 1
0x000038b5      e876e2ffff     call sym.imp.fwrite
0x000038ba      e871dfffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x000038bf      90             nop
;-- gettext_quote.part.1:
0x000038c0      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x000038c1      53             push rbx
0x000038c2      4889fd         mov rbp, rdi
0x000038c5      89f3           mov ebx, esi
0x000038c7      4883ec08       sub rsp, 8
0x000038cb      e870290000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x000038d0      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x000038d3      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000038d6      80fa55         cmp dl, 0x55
0x000038d9      7475           je 0x3950
0x000038db      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x000038de      7420           je 0x3900
0x000038e0      488d055c5400.  lea rax, str.l______l                   ; 0x8d43 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000038e7      488d15575400.  lea rdx, [0x00008d45]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000038ee      83fb09         cmp ebx, 9
0x000038f1      480f45c2       cmovne rax, rdx
0x000038f5      4883c408       add rsp, 8
0x000038f9      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x000038fa      5d             pop rbp
0x000038fb      c3             ret
0x000038fc      0f1f4000       nop dword [rax]
0x00003900      0fb65001       movzx edx, byte [rax + 1]
0x00003904      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003907      80fa42         cmp dl, 0x42
0x0000390a      75d4           jne 0x38e0
0x0000390c      80780231       cmp byte [rax + 2], 0x31
0x00003910      75ce           jne 0x38e0
0x00003912      80780338       cmp byte [rax + 3], 0x38
0x00003916      75c8           jne 0x38e0
0x00003918      80780430       cmp byte [rax + 4], 0x30
0x0000391c      75c2           jne 0x38e0
0x0000391e      80780533       cmp byte [rax + 5], 0x33
0x00003922      75bc           jne 0x38e0
0x00003924      80780630       cmp byte [rax + 6], 0x30
0x00003928      75b6           jne 0x38e0
0x0000392a      80780700       cmp byte [rax + 7], 0
0x0000392e      75b0           jne 0x38e0
0x00003930      807d0060       cmp byte [rbp], 0x60
0x00003934      488d05015400.  lea rax, [0x00008d3c]
0x0000393b      488d15fe5300.  lea rdx, [0x00008d40]
0x00003942      480f45c2       cmovne rax, rdx
0x00003946      4883c408       add rsp, 8
0x0000394a      5b             pop rbx
0x0000394b      5d             pop rbp
0x0000394c      c3             ret
0x0000394d      0f1f00         nop dword [rax]
0x00003950      0fb65001       movzx edx, byte [rax + 1]
0x00003954      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003957      80fa54         cmp dl, 0x54
0x0000395a      7584           jne 0x38e0
0x0000395c      0fb65002       movzx edx, byte [rax + 2]
0x00003960      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003963      80fa46         cmp dl, 0x46
0x00003966      0f8574ffffff   jne 0x38e0
0x0000396c      8078032d       cmp byte [rax + 3], 0x2d
0x00003970      0f856affffff   jne 0x38e0
0x00003976      80780438       cmp byte [rax + 4], 0x38
0x0000397a      0f8560ffffff   jne 0x38e0
0x00003980      80780500       cmp byte [rax + 5], 0
0x00003984      0f8556ffffff   jne 0x38e0
0x0000398a      807d0060       cmp byte [rbp], 0x60
0x0000398e      488d059f5300.  lea rax, [0x00008d34]                   ; "\u2018"
0x00003995      488d159c5300.  lea rdx, [0x00008d38]                   ; "\u2019"
0x0000399c      480f45c2       cmovne rax, rdx
0x000039a0      4883c408       add rsp, 8
0x000039a4      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x000039a5      5d             pop rbp
0x000039a6      c3             ret
0x000039a7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x000039b0      4157           push r15
0x000039b2      4156           push r14
0x000039b4      4589c7         mov r15d, r8d
0x000039b7      4155           push r13
0x000039b9      4154           push r12
0x000039bb      4989fe         mov r14, rdi
0x000039be      55             push rbp
0x000039bf      53             push rbx
0x000039c0      4489cb         mov ebx, r9d
0x000039c3      4989f5         mov r13, rsi
0x000039c6      4889cd         mov rbp, rcx
0x000039c9      83e302         and ebx, 2
0x000039cc      4881ecb80000.  sub rsp, 0xb8
0x000039d3      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x000039db      4889542410     mov qword [rsp + 0x10], rdx
0x000039e0      4489442408     mov dword [rsp + 8], r8d
0x000039e5      44894c2478     mov dword [rsp + 0x78], r9d
0x000039ea      4889442420     mov qword [rsp + 0x20], rax
0x000039ef      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x000039f7      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x000039fc      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00003a04      4889442460     mov qword [rsp + 0x60], rax
0x00003a09      64488b042528.  mov rax, qword fs:[0x28]
0x00003a12      48898424a800.  mov qword [rsp + 0xa8], rax
0x00003a1a      31c0           xor eax, eax
0x00003a1c      e8dfdeffff     call sym.imp.__ctype_get_mb_cur_max
0x00003a21      4183ff0a       cmp r15d, 0xa
0x00003a25      4889442458     mov qword [rsp + 0x58], rax
0x00003a2a      0f87af110000   ja 0x4bdf
0x00003a30      488d0d695300.  lea rcx, [0x00008da0]
0x00003a37      4489fa         mov edx, r15d
0x00003a3a      48630491       movsxd rax, dword [rcx + rdx*4]
0x00003a3e      4801c8         add rax, rcx
0x00003a41      ffe0           jmp rax
0x00003a43      c644240e01     mov byte [rsp + 0xe], 1
0x00003a48      c644247c00     mov byte [rsp + 0x7c], 0
0x00003a4d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00003a50      48c744245000.  mov qword [rsp + 0x50], 0
0x00003a59      c644240f01     mov byte [rsp + 0xf], 1
0x00003a5e      c644240d00     mov byte [rsp + 0xd], 0
0x00003a63      488d05db5200.  lea rax, [0x00008d45]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003a6a      48c744241801.  mov qword [rsp + 0x18], 1
0x00003a73      4531ff         xor r15d, r15d
0x00003a76      c74424080200.  mov dword [rsp + 8], 2
0x00003a7e      4889442448     mov qword [rsp + 0x48], rax
0x00003a83      4531db         xor r11d, r11d
0x00003a86      4889e8         mov rax, rbp
0x00003a89      4589e0         mov r8d, r12d
0x00003a8c      4c89dd         mov rbp, r11
0x00003a8f      4989c3         mov r11, rax
0x00003a92      660f1f440000   nop word [rax + rax]
0x00003a98      4939eb         cmp r11, rbp
0x00003a9b      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x00003a9f      4983fbff       cmp r11, 0xffffffffffffffff
0x00003aa3      750d           jne 0x3ab2
0x00003aa5      488b442410     mov rax, qword [rsp + 0x10]
0x00003aaa      803c2800       cmp byte [rax + rbp], 0
0x00003aae      410f95c4       setne r12b
0x00003ab2      4584e4         test r12b, r12b
0x00003ab5      0f8455060000   je 0x4110
0x00003abb      837c240802     cmp dword [rsp + 8], 2
0x00003ac0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003ac5      4c8d0c2f       lea r9, [rdi + rbp]
0x00003ac9      0f95c0         setne al
0x00003acc      2244240d       and al, byte [rsp + 0xd]
0x00003ad0      4189c2         mov r10d, eax
0x00003ad3      0f84a7000000   je 0x3b80
0x00003ad9      488b442418     mov rax, qword [rsp + 0x18]
0x00003ade      4885c0         test rax, rax
0x00003ae1      0f8429040000   je 0x3f10
0x00003ae7      4983fbff       cmp r11, 0xffffffffffffffff
0x00003aeb      488d5c0500     lea rbx, [rbp + rax]
0x00003af0      752e           jne 0x3b20
0x00003af2      4883f801       cmp rax, 1
0x00003af6      7628           jbe 0x3b20
0x00003af8      4488442438     mov byte [rsp + 0x38], r8b
0x00003afd      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00003b02      4c894c2428     mov qword [rsp + 0x28], r9
0x00003b07      e804deffff     call sym.imp.strlen
0x00003b0c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00003b12      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00003b18      4989c3         mov r11, rax
0x00003b1b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00003b20      4c39db         cmp rbx, r11
0x00003b23      4488542428     mov byte [rsp + 0x28], r10b
0x00003b28      0f87b2050000   ja 0x40e0
0x00003b2e      488b542418     mov rdx, qword [rsp + 0x18]
0x00003b33      488b742448     mov rsi, qword [rsp + 0x48]
0x00003b38      4c89cf         mov rdi, r9
0x00003b3b      4c895c2440     mov qword [rsp + 0x40], r11
0x00003b40      4488442438     mov byte [rsp + 0x38], r8b
0x00003b45      4c894c2430     mov qword [rsp + 0x30], r9
0x00003b4a      e871deffff     call sym.imp.memcmp
0x00003b4f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00003b51      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003b56      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00003b5c      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00003b61      0f8579050000   jne 0x40e0
0x00003b67      807c240f00     cmp byte [rsp + 0xf], 0
0x00003b6c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003b72      0f857d0f0000   jne 0x4af5
0x00003b78      0f1f84000000.  nop dword [rax + rax]
0x00003b80      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00003b84      80fb7e         cmp bl, 0x7e
0x00003b87      0f871b030000   ja 0x3ea8
0x00003b8d      488d0d385200.  lea rcx, [0x00008dcc]
0x00003b94      0fb6d3         movzx edx, bl
0x00003b97      48630491       movsxd rax, dword [rcx + rdx*4]
0x00003b9b      4801c8         add rax, rcx
0x00003b9e      ffe0           jmp rax
0x00003ba0      4531d2         xor r10d, r10d
0x00003ba3      4983fb01       cmp r11, 1
0x00003ba7      0f95c0         setne al
0x00003baa      4983fbff       cmp r11, 0xffffffffffffffff
0x00003bae      750c           jne 0x3bbc
0x00003bb0      488b442410     mov rax, qword [rsp + 0x10]
0x00003bb5      80780100       cmp byte [rax + 1], 0
0x00003bb9      0f95c0         setne al
0x00003bbc      837c240802     cmp dword [rsp + 8], 2
0x00003bc1      0f94c2         sete dl
0x00003bc4      84c0           test al, al
0x00003bc6      0f844c020000   je 0x3e18
0x00003bcc      4531e4         xor r12d, r12d
0x00003bcf      31c0           xor eax, eax
0x00003bd1      0f1f80000000.  nop dword [rax]
0x00003bd8      807c240d01     cmp byte [rsp + 0xd], 1
0x00003bdd      0f850f010000   jne 0x3cf2
0x00003be3      84d2           test dl, dl
0x00003be5      0f8507010000   jne 0x3cf2
0x00003beb      488b742420     mov rsi, qword [rsp + 0x20]
0x00003bf0      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00003bf3      7414           je 0x3c09
0x00003bf5      89da           mov edx, ebx
0x00003bf7      c0ea05         shr dl, 5
0x00003bfa      0fb6d2         movzx edx, dl
0x00003bfd      8b1496         mov edx, dword [rsi + rdx*4]
0x00003c00      0fa3da         bt edx, ebx
0x00003c03      0f824a010000   jb 0x3d53
0x00003c09      4584d2         test r10b, r10b
0x00003c0c      0f8541010000   jne 0x3d53
0x00003c12      83f001         xor eax, 1
0x00003c15      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00003c19      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x00003c1c      84c0           test al, al
0x00003c1e      7420           je 0x3c40                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00003c20      4d39fd         cmp r13, r15
0x00003c23      7605           jbe 0x3c2a
0x00003c25      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003c2a      498d4701       lea rax, [r15 + 1]
0x00003c2e      4939c5         cmp r13, rax
0x00003c31      7606           jbe 0x3c39
0x00003c33      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003c39      4983c702       add r15, 2
0x00003c3d      4531c0         xor r8d, r8d
0x00003c40      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00003c43      7304           jae 0x3c49                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00003c45      43881c3e       mov byte [r14 + r15], bl
0x00003c49      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x00003c4e      4983c701       add r15, 1
0x00003c52      b800000000     mov eax, 0
0x00003c57      4584e4         test r12b, r12b
0x00003c5a      0f44f8         cmove edi, eax
0x00003c5d      40887c240e     mov byte [rsp + 0xe], dil
0x00003c62      e931feffff     jmp 0x3a98
0x00003c67      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00003c70      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00003c73      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00003c77      83f802         cmp eax, 2
0x00003c7a      0f84b8050000   je 0x4238
0x00003c80      83f805         cmp eax, 5
0x00003c83      0f846f050000   je 0x41f8
0x00003c89      83f802         cmp eax, 2
0x00003c8c      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003c91      0f94c2         sete dl
0x00003c94      4531e4         xor r12d, r12d
0x00003c97      31c0           xor eax, eax
0x00003c99      e93affffff     jmp 0x3bd8
0x00003c9e      6690           nop
0x00003ca0      4531d2         xor r10d, r10d
0x00003ca3      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00003ca8      0f8402050000   je 0x41b0
0x00003cae      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00003cb3      31d2           xor edx, edx
0x00003cb5      31c0           xor eax, eax
0x00003cb7      bb27000000     mov ebx, 0x27                           ; '''
0x00003cbc      e917ffffff     jmp 0x3bd8
0x00003cc1      0f1f80000000.  nop dword [rax]
0x00003cc8      ba09000000     mov edx, 9
0x00003ccd      bb74000000     mov ebx, 0x74                           ; 't'
0x00003cd2      837c240802     cmp dword [rsp + 8], 2
0x00003cd7      0f94c0         sete al
0x00003cda      2244240f       and al, byte [rsp + 0xf]
0x00003cde      0f854a010000   jne 0x3e2e
0x00003ce4      807c240d00     cmp byte [rsp + 0xd], 0
0x00003ce9      7565           jne 0x3d50
0x00003ceb      89d3           mov ebx, edx
0x00003ced      4531e4         xor r12d, r12d
0x00003cf0      31c0           xor eax, eax
0x00003cf2      807c240f00     cmp byte [rsp + 0xf], 0
0x00003cf7      0f85eefeffff   jne 0x3beb
0x00003cfd      e907ffffff     jmp 0x3c09                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00003d02      660f1f440000   nop word [rax + rax]
0x00003d08      ba08000000     mov edx, 8
0x00003d0d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003d12      ebd0           jmp 0x3ce4
0x00003d14      0f1f4000       nop dword [rax]
0x00003d18      837c240802     cmp dword [rsp + 8], 2
0x00003d1d      0f84cd030000   je 0x40f0
0x00003d23      807c240d00     cmp byte [rsp + 0xd], 0
0x00003d28      0f8412020000   je 0x3f40
0x00003d2e      807c240f00     cmp byte [rsp + 0xf], 0
0x00003d33      0f8407020000   je 0x3f40
0x00003d39      48837c241800   cmp qword [rsp + 0x18], 0
0x00003d3f      0f85b6030000   jne 0x40fb
0x00003d45      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00003d4a      660f1f440000   nop word [rax + rax]
0x00003d50      4531e4         xor r12d, r12d
0x00003d53      837c240802     cmp dword [rsp + 8], 2
0x00003d58      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x00003d5b      807c240f00     cmp byte [rsp + 0xf], 0
0x00003d60      89d0           mov eax, edx
0x00003d62      0f8550080000   jne 0x45b8
0x00003d68      4489c0         mov eax, r8d
0x00003d6b      83f001         xor eax, 1
0x00003d6e      20d0           and al, dl
0x00003d70      742f           je 0x3da1
0x00003d72      4d39fd         cmp r13, r15
0x00003d75      7605           jbe 0x3d7c
0x00003d77      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003d7c      498d5701       lea rdx, [r15 + 1]
0x00003d80      4939d5         cmp r13, rdx
0x00003d83      7606           jbe 0x3d8b
0x00003d85      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00003d8b      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x00003d8f      4939d5         cmp r13, rdx
0x00003d92      7606           jbe 0x3d9a
0x00003d94      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003d9a      4983c703       add r15, 3
0x00003d9e      4189c0         mov r8d, eax
0x00003da1      4d39fd         cmp r13, r15
0x00003da4      7605           jbe 0x3dab
0x00003da6      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003dab      4983c701       add r15, 1
0x00003daf      4883c501       add rbp, 1
0x00003db3      e988feffff     jmp 0x3c40
0x00003db8      0f1f84000000.  nop dword [rax + rax]
0x00003dc0      807c240d00     cmp byte [rsp + 0xd], 0
0x00003dc5      0f85c8010000   jne 0x3f93
0x00003dcb      31d2           xor edx, edx
0x00003dcd      f644247801     test byte [rsp + 0x78], 1
0x00003dd2      0f8413ffffff   je 0x3ceb
0x00003dd8      4883c501       add rbp, 1
0x00003ddc      e9b7fcffff     jmp 0x3a98
0x00003de1      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00003de8      837c240802     cmp dword [rsp + 8], 2
0x00003ded      0f94c2         sete dl
0x00003df0      31c0           xor eax, eax
0x00003df2      e9e1fdffff     jmp 0x3bd8
0x00003df7      660f1f840000.  nop word [rax + rax]
0x00003e00      ba07000000     mov edx, 7
0x00003e05      bb61000000     mov ebx, 0x61                           ; 'a'
0x00003e0a      e9d5feffff     jmp 0x3ce4
0x00003e0f      90             nop
0x00003e10      837c240802     cmp dword [rsp + 8], 2
0x00003e15      0f94c2         sete dl
0x00003e18      4885ed         test rbp, rbp
0x00003e1b      0f85abfdffff   jne 0x3bcc
0x00003e21      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003e26      20d0           and al, dl
0x00003e28      0f84aafdffff   je 0x3bd8
0x00003e2e      4c89dd         mov rbp, r11
0x00003e31      c74424080200.  mov dword [rsp + 8], 2
0x00003e39      e9fb060000     jmp 0x4539
0x00003e3e      6690           nop
0x00003e40      837c240802     cmp dword [rsp + 8], 2
0x00003e45      0f94c2         sete dl
0x00003e48      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x00003e4b      ebd4           jmp 0x3e21
0x00003e4d      0f1f00         nop dword [rax]
0x00003e50      837c240802     cmp dword [rsp + 8], 2
0x00003e55      bb20000000     mov ebx, 0x20                           ; "@"
0x00003e5a      0f94c2         sete dl
0x00003e5d      ebc2           jmp 0x3e21
0x00003e5f      90             nop
0x00003e60      ba0d000000     mov edx, 0xd
0x00003e65      bb72000000     mov ebx, 0x72                           ; 'r'
0x00003e6a      e963feffff     jmp 0x3cd2
0x00003e6f      90             nop
0x00003e70      ba0c000000     mov edx, 0xc
0x00003e75      bb66000000     mov ebx, 0x66                           ; 'f'
0x00003e7a      e965feffff     jmp 0x3ce4
0x00003e7f      90             nop
0x00003e80      ba0b000000     mov edx, 0xb
0x00003e85      bb76000000     mov ebx, 0x76                           ; 'v'
0x00003e8a      e955feffff     jmp 0x3ce4
0x00003e8f      90             nop
0x00003e90      ba0a000000     mov edx, 0xa
0x00003e95      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x00003e9a      e933feffff     jmp 0x3cd2
0x00003e9f      90             nop
0x00003ea0      4531d2         xor r10d, r10d
0x00003ea3      0f1f440000     nop dword [rax + rax]
0x00003ea8      48837c245801   cmp qword [rsp + 0x58], 1
0x00003eae      0f85a4030000   jne 0x4258
0x00003eb4      4c895c2438     mov qword [rsp + 0x38], r11
0x00003eb9      4488442430     mov byte [rsp + 0x30], r8b
0x00003ebe      4488542428     mov byte [rsp + 0x28], r10b
0x00003ec3      e8c8dcffff     call sym.imp.__ctype_b_loc
0x00003ec8      488b08         mov rcx, qword [rax]
0x00003ecb      0fb6d3         movzx edx, bl
0x00003ece      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003ed4      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x00003eda      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x00003edf      bf01000000     mov edi, 1
0x00003ee4      0fb70451       movzx eax, word [rcx + rdx*2]
0x00003ee8      66250040       and ax, 0x4000                          ; "s\x19H\x8bD$\x10\x0f\xb6D(\x01\x88D$(\x83\xe80<\t\x0f\x86.\b"
0x00003eec      410f95c4       setne r12b
0x00003ef0      0f94c0         sete al
0x00003ef3      2244240d       and al, byte [rsp + 0xd]
0x00003ef7      84c0           test al, al
0x00003ef9      0f8592090000   jne 0x4891
0x00003eff      837c240802     cmp dword [rsp + 8], 2
0x00003f04      0f94c2         sete dl
0x00003f07      e9ccfcffff     jmp 0x3bd8
0x00003f0c      0f1f4000       nop dword [rax]
0x00003f10      410fb619       movzx ebx, byte [r9]
0x00003f14      80fb7e         cmp bl, 0x7e
0x00003f17      7787           ja 0x3ea0
0x00003f19      488d0da85000.  lea rcx, [0x00008fc8]
0x00003f20      0fb6d3         movzx edx, bl
0x00003f23      48630491       movsxd rax, dword [rcx + rdx*4]
0x00003f27      4801c8         add rax, rcx
0x00003f2a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x00003f2c      0f1f4000       nop dword [rax]
0x00003f30      4531d2         xor r10d, r10d
0x00003f33      807c240d00     cmp byte [rsp + 0xd], 0
0x00003f38      0f85f0fdffff   jne 0x3d2e
0x00003f3e      6690           nop
0x00003f40      ba5c000000     mov edx, 0x5c                           ; '\'
0x00003f45      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00003f4a      e995fdffff     jmp 0x3ce4
0x00003f4f      90             nop
0x00003f50      ba0c000000     mov edx, 0xc
0x00003f55      4531d2         xor r10d, r10d
0x00003f58      bb66000000     mov ebx, 0x66                           ; 'f'
0x00003f5d      e982fdffff     jmp 0x3ce4
0x00003f62      660f1f440000   nop word [rax + rax]
0x00003f68      ba0a000000     mov edx, 0xa
0x00003f6d      4531d2         xor r10d, r10d
0x00003f70      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00003f75      e958fdffff     jmp 0x3cd2
0x00003f7a      660f1f440000   nop word [rax + rax]
0x00003f80      bb61000000     mov ebx, 0x61                           ; 'a'
0x00003f85      e9c6fdffff     jmp 0x3d50
0x00003f8a      660f1f440000   nop word [rax + rax]
0x00003f90      4531d2         xor r10d, r10d
0x00003f93      837c240802     cmp dword [rsp + 8], 2
0x00003f98      0f94c2         sete dl
0x00003f9b      807c240f00     cmp byte [rsp + 0xf], 0
0x00003fa0      0f85940b0000   jne 0x4b3a
0x00003fa6      4489c0         mov eax, r8d
0x00003fa9      4c89f9         mov rcx, r15
0x00003fac      83f001         xor eax, 1
0x00003faf      20d0           and al, dl
0x00003fb1      742d           je 0x3fe0
0x00003fb3      4d39fd         cmp r13, r15
0x00003fb6      7605           jbe 0x3fbd
0x00003fb8      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003fbd      498d4f01       lea rcx, [r15 + 1]
0x00003fc1      4939cd         cmp r13, rcx
0x00003fc4      7606           jbe 0x3fcc
0x00003fc6      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00003fcc      498d4f02       lea rcx, [r15 + 2]
0x00003fd0      4939cd         cmp r13, rcx
0x00003fd3      0f8730060000   ja 0x4609
0x00003fd9      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x00003fdd      4189c0         mov r8d, eax
0x00003fe0      4939cd         cmp r13, rcx
0x00003fe3      7605           jbe 0x3fea
0x00003fe5      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003fea      837c240802     cmp dword [rsp + 8], 2
0x00003fef      4c8d7901       lea r15, [rcx + 1]
0x00003ff3      0f8400060000   je 0x45f9
0x00003ff9      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00003ffd      4c39d8         cmp rax, r11
0x00004000      7319           jae 0x401b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00004002      488b442410     mov rax, qword [rsp + 0x10]
0x00004007      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x0000400c      88442428       mov byte [rsp + 0x28], al
0x00004010      83e830         sub eax, 0x30
0x00004013      3c09           cmp al, 9
0x00004015      0f862e080000   jbe 0x4849
0x0000401b      4489e0         mov eax, r12d
0x0000401e      bb30000000     mov ebx, 0x30                           ; '0'
0x00004023      4531e4         xor r12d, r12d
0x00004026      e9adfbffff     jmp 0x3bd8                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x0000402b      0f1f440000     nop dword [rax + rax]
0x00004030      837c240802     cmp dword [rsp + 8], 2
0x00004035      4589d4         mov r12d, r10d
0x00004038      0f94c2         sete dl
0x0000403b      4531d2         xor r10d, r10d
0x0000403e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00004040      e993fbffff     jmp 0x3bd8                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00004045      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00004048      837c240802     cmp dword [rsp + 8], 2
0x0000404d      0f94c2         sete dl
0x00004050      4531d2         xor r10d, r10d
0x00004053      e9c0fdffff     jmp 0x3e18
0x00004058      0f1f84000000.  nop dword [rax + rax]
0x00004060      837c240802     cmp dword [rsp + 8], 2
0x00004065      0f94c2         sete dl
0x00004068      4531d2         xor r10d, r10d
0x0000406b      4531e4         xor r12d, r12d
0x0000406e      e9aefdffff     jmp 0x3e21
0x00004073      0f1f440000     nop dword [rax + rax]
0x00004078      837c240802     cmp dword [rsp + 8], 2
0x0000407d      4589d4         mov r12d, r10d
0x00004080      bb20000000     mov ebx, 0x20                           ; "@"
0x00004085      0f94c2         sete dl
0x00004088      4531d2         xor r10d, r10d
0x0000408b      e991fdffff     jmp 0x3e21
0x00004090      ba0d000000     mov edx, 0xd
0x00004095      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00004098      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000409d      e930fcffff     jmp 0x3cd2
0x000040a2      660f1f440000   nop word [rax + rax]
0x000040a8      bb76000000     mov ebx, 0x76                           ; 'v'
0x000040ad      e99efcffff     jmp 0x3d50
0x000040b2      660f1f440000   nop word [rax + rax]
0x000040b8      ba09000000     mov edx, 9
0x000040bd      4531d2         xor r10d, r10d
0x000040c0      bb74000000     mov ebx, 0x74                           ; 't'
0x000040c5      e908fcffff     jmp 0x3cd2
0x000040ca      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x000040d0      bb62000000     mov ebx, 0x62                           ; 'b'
0x000040d5      e976fcffff     jmp 0x3d50
0x000040da      660f1f440000   nop word [rax + rax]
0x000040e0      4531d2         xor r10d, r10d
0x000040e3      e998faffff     jmp 0x3b80
0x000040e8      0f1f84000000.  nop dword [rax + rax]
0x000040f0      807c240f00     cmp byte [rsp + 0xf], 0
0x000040f5      0f8565090000   jne 0x4a60
0x000040fb      4883c501       add rbp, 1
0x000040ff      4489c0         mov eax, r8d
0x00004102      4531e4         xor r12d, r12d
0x00004105      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000410a      e90dfbffff     jmp 0x3c1c
0x0000410f      90             nop
0x00004110      837c240802     cmp dword [rsp + 8], 2
0x00004115      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000411a      4589c4         mov r12d, r8d
0x0000411d      4c89dd         mov rbp, r11
0x00004120      0f94c2         sete dl
0x00004123      89d8           mov eax, ebx
0x00004125      4d85ff         test r15, r15
0x00004128      0f94c1         sete cl
0x0000412b      21d0           and eax, edx
0x0000412d      20c8           and al, cl
0x0000412f      0f85610a0000   jne 0x4b96                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00004135      89d8           mov eax, ebx
0x00004137      83f001         xor eax, 1
0x0000413a      20c2           and dl, al
0x0000413c      0f846a090000   je 0x4aac
0x00004142      807c247c00     cmp byte [rsp + 0x7c], 0
0x00004147      0f845d090000   je 0x4aaa
0x0000414d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00004152      0f85f5090000   jne 0x4b4d
0x00004158      4d85ed         test r13, r13
0x0000415b      0f94c0         sete al
0x0000415e      48837c245000   cmp qword [rsp + 0x50], 0
0x00004164      0f95c2         setne dl
0x00004167      20d0           and al, dl
0x00004169      0f841d0a0000   je 0x4b8c
0x0000416f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00004174      488d1dca4b00.  lea rbx, [0x00008d45]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000417b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x0000417f      c74424080200.  mov dword [rsp + 8], 2
0x00004187      41bf01000000   mov r15d, 1
0x0000418d      48c744241801.  mov qword [rsp + 0x18], 1
0x00004196      c644240f00     mov byte [rsp + 0xf], 0
0x0000419b      48895c2448     mov qword [rsp + 0x48], rbx
0x000041a0      8844247c       mov byte [rsp + 0x7c], al
0x000041a4      e9daf8ffff     jmp 0x3a83
0x000041a9      0f1f80000000.  nop dword [rax]
0x000041b0      807c240f00     cmp byte [rsp + 0xf], 0
0x000041b5      0f85a5080000   jne 0x4a60
0x000041bb      4d85ed         test r13, r13
0x000041be      0f84fc030000   je 0x45c0                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x000041c4      31d2           xor edx, edx
0x000041c6      48837c245000   cmp qword [rsp + 0x50], 0
0x000041cc      0f85ee030000   jne 0x45c0                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x000041d2      4c896c2450     mov qword [rsp + 0x50], r13
0x000041d7      4983c703       add r15, 3
0x000041db      31c0           xor eax, eax
0x000041dd      448864247c     mov byte [rsp + 0x7c], r12b
0x000041e2      4531c0         xor r8d, r8d
0x000041e5      4989d5         mov r13, rdx
0x000041e8      bb27000000     mov ebx, 0x27                           ; '''
0x000041ed      e917faffff     jmp 0x3c09
0x000041f2      660f1f440000   nop word [rax + rax]
0x000041f8      f644247804     test byte [rsp + 0x78], 4
0x000041fd      7421           je 0x4220
0x000041ff      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00004203      4c39d9         cmp rcx, r11
0x00004206      7318           jae 0x4220
0x00004208      488b442410     mov rax, qword [rsp + 0x10]
0x0000420d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00004212      0f848a070000   je 0x49a2
0x00004218      0f1f84000000.  nop dword [rax + rax]
0x00004220      31d2           xor edx, edx
0x00004222      4531e4         xor r12d, r12d
0x00004225      31c0           xor eax, eax
0x00004227      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000422c      e9a7f9ffff     jmp 0x3bd8
0x00004231      0f1f80000000.  nop dword [rax]
0x00004238      807c240f00     cmp byte [rsp + 0xf], 0
0x0000423d      0f851d080000   jne 0x4a60
0x00004243      4531e4         xor r12d, r12d
0x00004246      31c0           xor eax, eax
0x00004248      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000424d      e9b7f9ffff     jmp 0x3c09                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00004252      660f1f440000   nop word [rax + rax]
0x00004258      488d8424a000.  lea rax, [rsp + 0xa0]
0x00004260      4983fbff       cmp r11, 0xffffffffffffffff
0x00004264      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00004270      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00004275      752d           jne 0x42a4
0x00004277      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000427c      4488442440     mov byte [rsp + 0x40], r8b
0x00004281      4488542438     mov byte [rsp + 0x38], r10b
0x00004286      4c894c2430     mov qword [rsp + 0x30], r9
0x0000428b      e880d6ffff     call sym.imp.strlen
0x00004290      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00004296      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x0000429c      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x0000429f      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000042a4      488d84249c00.  lea rax, [rsp + 0x9c]
0x000042ac      31c9           xor ecx, ecx
0x000042ae      885c247e       mov byte [rsp + 0x7e], bl
0x000042b2      448844247d     mov byte [rsp + 0x7d], r8b
0x000042b7      4889cb         mov rbx, rcx
0x000042ba      4c898c248800.  mov qword [rsp + 0x88], r9
0x000042c2      4889442438     mov qword [rsp + 0x38], rax
0x000042c7      448854247f     mov byte [rsp + 0x7f], r10b
0x000042cc      4c89bc248000.  mov qword [rsp + 0x80], r15
0x000042d4      4c89742440     mov qword [rsp + 0x40], r14
0x000042d9      4c896c2470     mov qword [rsp + 0x70], r13
0x000042de      4c895c2430     mov qword [rsp + 0x30], r11
0x000042e3      488b442410     mov rax, qword [rsp + 0x10]
0x000042e8      4c8d741d00     lea r14, [rbp + rbx]
0x000042ed      488b542430     mov rdx, qword [rsp + 0x30]
0x000042f2      488b4c2428     mov rcx, qword [rsp + 0x28]
0x000042f7      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000042fc      4e8d2c30       lea r13, [rax + r14]
0x00004300      4c29f2         sub rdx, r14
0x00004303      4c89ee         mov rsi, r13
0x00004306      e8b51b0000     call sym.rpl_mbrtowc
0x0000430b      4885c0         test rax, rax
0x0000430e      4989c7         mov r15, rax
0x00004311      744e           je 0x4361
0x00004313      4883f8ff       cmp rax, 0xffffffffffffffff
0x00004317      0f8418060000   je 0x4935
0x0000431d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00004321      0f849a050000   je 0x48c1
0x00004327      837c240802     cmp dword [rsp + 8], 2
0x0000432c      0f94c0         sete al
0x0000432f      2244240f       and al, byte [rsp + 0xf]
0x00004333      0f8597010000   jne 0x44d0
0x00004339      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00004340      e83bd8ffff     call sym.imp.iswprint
0x00004345      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000434a      85c0           test eax, eax
0x0000434c      b800000000     mov eax, 0
0x00004351      440f44e0       cmove r12d, eax
0x00004355      4c01fb         add rbx, r15
0x00004358      e813d8ffff     call sym.imp.mbsinit
0x0000435d      85c0           test eax, eax
0x0000435f      7482           je 0x42e3
0x00004361      4489e2         mov edx, r12d
0x00004364      4889df         mov rdi, rbx
0x00004367      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000436d      83f201         xor edx, 1
0x00004370      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00004375      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000437b      2254240d       and dl, byte [rsp + 0xd]
0x0000437f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004387      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000438c      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00004391      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00004396      4883ff01       cmp rdi, 1
0x0000439a      0f86fb050000   jbe 0x499b
0x000043a0      4889f9         mov rcx, rdi
0x000043a3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x000043a5      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x000043ab      4801e9         add rcx, rbp
0x000043ae      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000043b3      e9b6000000     jmp 0x446e
0x000043b8      0f1f84000000.  nop dword [rax + rax]
0x000043c0      837c240802     cmp dword [rsp + 8], 2
0x000043c5      0f94c0         sete al
0x000043c8      4584c9         test r9b, r9b
0x000043cb      0f85af040000   jne 0x4880
0x000043d1      4489c6         mov esi, r8d
0x000043d4      83f601         xor esi, 1
0x000043d7      4020f0         and al, sil
0x000043da      742f           je 0x440b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x000043dc      4d39fd         cmp r13, r15
0x000043df      7605           jbe 0x43e6
0x000043e1      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000043e6      498d7701       lea rsi, [r15 + 1]
0x000043ea      4939f5         cmp r13, rsi
0x000043ed      7606           jbe 0x43f5                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x000043ef      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000043f5      498d7702       lea rsi, [r15 + 2]
0x000043f9      4939f5         cmp r13, rsi
0x000043fc      7606           jbe 0x4404
0x000043fe      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004404      4983c703       add r15, 3
0x00004408      4189c0         mov r8d, eax
0x0000440b      4d39fd         cmp r13, r15
0x0000440e      7605           jbe 0x4415
0x00004410      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00004415      498d4701       lea rax, [r15 + 1]
0x00004419      4939c5         cmp r13, rax
0x0000441c      760d           jbe 0x442b
0x0000441e      89d8           mov eax, ebx
0x00004420      c0e806         shr al, 6
0x00004423      83c030         add eax, 0x30
0x00004426      4388443e01     mov byte [r14 + r15 + 1], al
0x0000442b      498d4702       lea rax, [r15 + 2]
0x0000442f      4939c5         cmp r13, rax
0x00004432      7610           jbe 0x4444
0x00004434      89d8           mov eax, ebx
0x00004436      c0e803         shr al, 3
0x00004439      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x0000443c      83c030         add eax, 0x30
0x0000443f      4388443e02     mov byte [r14 + r15 + 2], al
0x00004444      83e307         and ebx, 7
0x00004447      4883c501       add rbp, 1
0x0000444b      4983c703       add r15, 3
0x0000444f      83c330         add ebx, 0x30
0x00004452      4839cd         cmp rbp, rcx
0x00004455      0f83e5f7ffff   jae 0x3c40
0x0000445b      89d6           mov esi, edx
0x0000445d      4d39fd         cmp r13, r15
0x00004460      7604           jbe 0x4466
0x00004462      43881c3e       mov byte [r14 + r15], bl
0x00004466      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000446a      4983c701       add r15, 1
0x0000446e      84d2           test dl, dl
0x00004470      0f854affffff   jne 0x43c0
0x00004476      89f0           mov eax, esi
0x00004478      83f001         xor eax, 1
0x0000447b      4421c0         and eax, r8d
0x0000447e      4584d2         test r10b, r10b
0x00004481      740e           je 0x4491
0x00004483      4d39fd         cmp r13, r15
0x00004486      7605           jbe 0x448d
0x00004488      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000448d      4983c701       add r15, 1
0x00004491      4883c501       add rbp, 1
0x00004495      4839cd         cmp rbp, rcx
0x00004498      0f837ef7ffff   jae 0x3c1c
0x0000449e      84c0           test al, al
0x000044a0      0f84f8030000   je 0x489e
0x000044a6      4d39fd         cmp r13, r15
0x000044a9      7605           jbe 0x44b0
0x000044ab      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000044b0      498d4701       lea rax, [r15 + 1]
0x000044b4      4939c5         cmp r13, rax
0x000044b7      7606           jbe 0x44bf
0x000044b9      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000044bf      4983c702       add r15, 2
0x000044c3      4531d2         xor r10d, r10d
0x000044c6      4531c0         xor r8d, r8d
0x000044c9      eb92           jmp 0x445d
0x000044cb      0f1f440000     nop dword [rax + rax]
0x000044d0      4983ff01       cmp r15, 1
0x000044d4      0f845ffeffff   je 0x4339
0x000044da      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000044df      4a8d0c3f       lea rcx, [rdi + r15]
0x000044e3      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x000044e8      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x000044ec      eb0f           jmp 0x44fd
0x000044ee      6690           nop
0x000044f0      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x000044f4      4939d0         cmp r8, rdx
0x000044f7      0f843cfeffff   je 0x4339
0x000044fd      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00004500      83e95b         sub ecx, 0x5b
0x00004503      80f921         cmp cl, 0x21
0x00004506      77e8           ja 0x44f0                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00004508      be01000000     mov esi, 1
0x0000450d      48d3e6         shl rsi, cl
0x00004510      4889f1         mov rcx, rsi
0x00004513      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x0000451d      4885f1         test rcx, rsi
0x00004520      74ce           je 0x44f0
0x00004522      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004527      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000452c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00004531      c74424080200.  mov dword [rsp + 8], 2
0x00004539      807c240d00     cmp byte [rsp + 0xd], 0
0x0000453e      7410           je 0x4550
0x00004540      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00004542      b804000000     mov eax, 4
0x00004547      0f44442408     cmove eax, dword [rsp + 8]
0x0000454c      89442408       mov dword [rsp + 8], eax
0x00004550      4883ec08       sub rsp, 8
0x00004554      4889e9         mov rcx, rbp
0x00004557      4c89ee         mov rsi, r13
0x0000455a      ff742468       push qword [rsp + 0x68]
0x0000455e      ff742478       push qword [rsp + 0x78]
0x00004562      4c89f7         mov rdi, r14
0x00004565      6a00           push 0
0x00004567      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x0000456f      448b442428     mov r8d, dword [rsp + 0x28]
0x00004574      488b542430     mov rdx, qword [rsp + 0x30]
0x00004579      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x0000457d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00004582      4883c420       add rsp, 0x20
0x00004586      4989c7         mov r15, rax
0x00004589      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00004591      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000459a      4c89f8         mov rax, r15
0x0000459d      0f8500060000   jne 0x4ba3
0x000045a3      4881c4b80000.  add rsp, 0xb8
0x000045aa      5b             pop rbx
0x000045ab      5d             pop rbp
0x000045ac      415c           pop r12
0x000045ae      415d           pop r13
0x000045b0      415e           pop r14
0x000045b2      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x000045b4      c3             ret
0x000045b5      0f1f00         nop dword [rax]
0x000045b8      4c89dd         mov rbp, r11
0x000045bb      e979ffffff     jmp 0x4539
0x000045c0      4d39fd         cmp r13, r15
0x000045c3      7605           jbe 0x45ca
0x000045c5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000045ca      498d4701       lea rax, [r15 + 1]
0x000045ce      4939c5         cmp r13, rax
0x000045d1      7606           jbe 0x45d9
0x000045d3      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x000045d9      498d4702       lea rax, [r15 + 2]
0x000045dd      4939c5         cmp r13, rax
0x000045e0      0f86ec050000   jbe 0x4bd2
0x000045e6      4c89ea         mov rdx, r13
0x000045e9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000045ef      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000045f4      e9d9fbffff     jmp 0x41d2
0x000045f9      4489e0         mov eax, r12d
0x000045fc      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00004601      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00004604      e900f6ffff     jmp 0x3c09                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00004609      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000460f      e9c5f9ffff     jmp 0x3fd9
0x00004614      85db           test ebx, ebx
0x00004616      0f8527f4ffff   jne 0x3a43
0x0000461c      c644240d01     mov byte [rsp + 0xd], 1
0x00004621      4d85ed         test r13, r13
0x00004624      0f8590050000   jne 0x4bba
0x0000462a      488d05144700.  lea rax, [0x00008d45]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004631      48c744245000.  mov qword [rsp + 0x50], 0
0x0000463a      c644240e01     mov byte [rsp + 0xe], 1
0x0000463f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004644      4531e4         xor r12d, r12d
0x00004647      c644240f00     mov byte [rsp + 0xf], 0
0x0000464c      48c744241801.  mov qword [rsp + 0x18], 1
0x00004655      4889442448     mov qword [rsp + 0x48], rax
0x0000465a      41bf01000000   mov r15d, 1
0x00004660      c74424080200.  mov dword [rsp + 8], 2
0x00004668      e916f4ffff     jmp 0x3a83                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x0000466d      0f1f00         nop dword [rax]
0x00004670      85db           test ebx, ebx
0x00004672      0f85f5030000   jne 0x4a6d
0x00004678      4d85ed         test r13, r13
0x0000467b      0f8425020000   je 0x48a6
0x00004681      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00004685      c644240e01     mov byte [rsp + 0xe], 1
0x0000468a      4531e4         xor r12d, r12d
0x0000468d      c644247c00     mov byte [rsp + 0x7c], 0
0x00004692      48c744245000.  mov qword [rsp + 0x50], 0
0x0000469b      488d05a14600.  lea rax, str.l______l                   ; 0x8d43 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000046a2      c644240f00     mov byte [rsp + 0xf], 0
0x000046a7      c644240d01     mov byte [rsp + 0xd], 1
0x000046ac      48c744241801.  mov qword [rsp + 0x18], 1
0x000046b5      41bf01000000   mov r15d, 1
0x000046bb      4889442448     mov qword [rsp + 0x48], rax
0x000046c0      e9bef3ffff     jmp 0x3a83
0x000046c5      488d05774600.  lea rax, str.l______l                   ; 0x8d43 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000046cc      c644240e01     mov byte [rsp + 0xe], 1
0x000046d1      c644247c00     mov byte [rsp + 0x7c], 0
0x000046d6      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x000046d9      48c744245000.  mov qword [rsp + 0x50], 0
0x000046e2      c644240f01     mov byte [rsp + 0xf], 1
0x000046e7      c644240d01     mov byte [rsp + 0xd], 1
0x000046ec      48c744241801.  mov qword [rsp + 0x18], 1
0x000046f5      4531ff         xor r15d, r15d
0x000046f8      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x000046fd      c74424080500.  mov dword [rsp + 8], 5
0x00004705      e979f3ffff     jmp 0x3a83
0x0000470a      c644240e01     mov byte [rsp + 0xe], 1
0x0000470f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004714      4531e4         xor r12d, r12d
0x00004717      48c744245000.  mov qword [rsp + 0x50], 0
0x00004720      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00004725      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00004728      c644240d01     mov byte [rsp + 0xd], 1
0x0000472d      48c744241800.  mov qword [rsp + 0x18], 0
0x00004736      48c744244800.  mov qword [rsp + 0x48], 0
0x0000473f      e93ff3ffff     jmp 0x3a83
0x00004744      837c24080a     cmp dword [rsp + 8], 0xa
0x00004749      7456           je 0x47a1
0x0000474b      488d35f54500.  lea rsi, [0x00008d47]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00004752      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00004754      ba05000000     mov edx, 5
0x00004759      e892d1ffff     call sym.imp.dcgettext
0x0000475e      4889c1         mov rcx, rax
0x00004761      4889442468     mov qword [rsp + 0x68], rax
0x00004766      488d05da4500.  lea rax, [0x00008d47]                   ; "`"
0x0000476d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00004770      0f8498030000   je 0x4b0e
0x00004776      488d35c84500.  lea rsi, [0x00008d45]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000477d      31ff           xor edi, edi
0x0000477f      ba05000000     mov edx, 5
0x00004784      e867d1ffff     call sym.imp.dcgettext
0x00004789      4889c1         mov rcx, rax
0x0000478c      4889442460     mov qword [rsp + 0x60], rax
0x00004791      488d05ad4500.  lea rax, [0x00008d45]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004798      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x0000479b      0f8483030000   je 0x4b24
0x000047a1      4531ff         xor r15d, r15d
0x000047a4      85db           test ebx, ebx
0x000047a6      0f84c1010000   je 0x496d
0x000047ac      85db           test ebx, ebx
0x000047ae      488b5c2460     mov rbx, qword [rsp + 0x60]
0x000047b3      0f9544240f     setne byte [rsp + 0xf]
0x000047b8      4531e4         xor r12d, r12d
0x000047bb      4889df         mov rdi, rbx
0x000047be      e84dd1ffff     call sym.imp.strlen
0x000047c3      48895c2448     mov qword [rsp + 0x48], rbx
0x000047c8      4889442418     mov qword [rsp + 0x18], rax
0x000047cd      c644240e01     mov byte [rsp + 0xe], 1
0x000047d2      c644247c00     mov byte [rsp + 0x7c], 0
0x000047d7      48c744245000.  mov qword [rsp + 0x50], 0
0x000047e0      c644240d01     mov byte [rsp + 0xd], 1
0x000047e5      e999f2ffff     jmp 0x3a83
0x000047ea      c644240e01     mov byte [rsp + 0xe], 1
0x000047ef      c644247c00     mov byte [rsp + 0x7c], 0
0x000047f4      4531e4         xor r12d, r12d
0x000047f7      48c744245000.  mov qword [rsp + 0x50], 0
0x00004800      c644240f00     mov byte [rsp + 0xf], 0
0x00004805      4531ff         xor r15d, r15d
0x00004808      c644240d00     mov byte [rsp + 0xd], 0
0x0000480d      48c744241800.  mov qword [rsp + 0x18], 0
0x00004816      48c744244800.  mov qword [rsp + 0x48], 0
0x0000481f      e95ff2ffff     jmp 0x3a83
0x00004824      c644240e01     mov byte [rsp + 0xe], 1
0x00004829      c644247c00     mov byte [rsp + 0x7c], 0
0x0000482e      4531e4         xor r12d, r12d
0x00004831      48c744245000.  mov qword [rsp + 0x50], 0
0x0000483a      c644240f01     mov byte [rsp + 0xf], 1
0x0000483f      c644240d01     mov byte [rsp + 0xd], 1
0x00004844      e91af2ffff     jmp 0x3a63
0x00004849      4d39fd         cmp r13, r15
0x0000484c      7605           jbe 0x4853
0x0000484e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00004853      488d4102       lea rax, [rcx + 2]
0x00004857      4939c5         cmp r13, rax
0x0000485a      7606           jbe 0x4862
0x0000485c      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00004862      4489e0         mov eax, r12d
0x00004865      4c8d7903       lea r15, [rcx + 3]
0x00004869      4531e4         xor r12d, r12d
0x0000486c      bb30000000     mov ebx, 0x30                           ; '0'
0x00004871      e962f3ffff     jmp 0x3bd8
0x00004876      662e0f1f8400.  nop word cs:[rax + rax]
0x00004880      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00004885      4c89dd         mov rbp, r11
0x00004888      885c240d       mov byte [rsp + 0xd], bl
0x0000488c      e9a8fcffff     jmp 0x4539
0x00004891      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00004896      4531e4         xor r12d, r12d
0x00004899      e902fbffff     jmp 0x43a0
0x0000489e      4531d2         xor r10d, r10d
0x000048a1      e9b7fbffff     jmp 0x445d
0x000048a6      48c744245000.  mov qword [rsp + 0x50], 0
0x000048af      c644240e01     mov byte [rsp + 0xe], 1
0x000048b4      4531e4         xor r12d, r12d
0x000048b7      c644247c00     mov byte [rsp + 0x7c], 0
0x000048bc      e9dafdffff     jmp 0x469b
0x000048c1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000048c6      4c89f6         mov rsi, r14
0x000048c9      4c89e9         mov rcx, r13
0x000048cc      4889d8         mov rax, rbx
0x000048cf      4889df         mov rdi, rbx
0x000048d2      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000048d8      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000048dd      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x000048e5      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x000048e8      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000048ee      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000048f6      4c8b742440     mov r14, qword [rsp + 0x40]
0x000048fb      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00004900      7326           jae 0x4928
0x00004902      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00004905      7510           jne 0x4917
0x00004907      eb1f           jmp 0x4928
0x00004909      0f1f80000000.  nop dword [rax]
0x00004910      41803c0100     cmp byte [r9 + rax], 0
0x00004915      740e           je 0x4925
0x00004917      4883c001       add rax, 1
0x0000491b      488d540500     lea rdx, [rbp + rax]
0x00004920      4939d3         cmp r11, rdx
0x00004923      77eb           ja 0x4910
0x00004925      4889c7         mov rdi, rax
0x00004928      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000492d      4531e4         xor r12d, r12d
0x00004930      e961faffff     jmp 0x4396
0x00004935      4889df         mov rdi, rbx
0x00004938      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000493e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00004943      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00004949      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004951      4531e4         xor r12d, r12d
0x00004954      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004959      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000495e      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00004963      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00004968      e929faffff     jmp 0x4396
0x0000496d      488b542468     mov rdx, qword [rsp + 0x68]
0x00004972      0fb602         movzx eax, byte [rdx]
0x00004975      84c0           test al, al
0x00004977      0f842ffeffff   je 0x47ac
0x0000497d      0f1f00         nop dword [rax]
0x00004980      4d39fd         cmp r13, r15
0x00004983      7604           jbe 0x4989
0x00004985      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00004989      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x0000498d      420fb6043a     movzx eax, byte [rdx + r15]
0x00004992      84c0           test al, al
0x00004994      75ea           jne 0x4980
0x00004996      e911feffff     jmp 0x47ac
0x0000499b      89d0           mov eax, edx
0x0000499d      e955f5ffff     jmp 0x3ef7
0x000049a2      0fb61c08       movzx ebx, byte [rax + rcx]
0x000049a6      80fb3e         cmp bl, 0x3e
0x000049a9      0f8771f8ffff   ja 0x4220
0x000049af      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x000049b9      480fa3d8       bt rax, rbx
0x000049bd      0f835df8ffff   jae 0x4220
0x000049c3      807c240f00     cmp byte [rsp + 0xf], 0
0x000049c8      0f85e4010000   jne 0x4bb2                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x000049ce      4d39fd         cmp r13, r15
0x000049d1      7605           jbe 0x49d8
0x000049d3      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x000049d8      498d4701       lea rax, [r15 + 1]
0x000049dc      4939c5         cmp r13, rax
0x000049df      7606           jbe 0x49e7
0x000049e1      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x000049e7      498d4702       lea rax, [r15 + 2]
0x000049eb      4939c5         cmp r13, rax
0x000049ee      7606           jbe 0x49f6
0x000049f0      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x000049f6      498d4703       lea rax, [r15 + 3]
0x000049fa      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x000049fd      7606           jbe 0x4a05
0x000049ff      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00004a05      4983c704       add r15, 4
0x00004a09      31d2           xor edx, edx
0x00004a0b      4531e4         xor r12d, r12d
0x00004a0e      31c0           xor eax, eax
0x00004a10      4889cd         mov rbp, rcx
0x00004a13      e9c0f1ffff     jmp 0x3bd8
0x00004a18      85db           test ebx, ebx
0x00004a1a      0f8488010000   je 0x4ba8
0x00004a20      488d051e4300.  lea rax, [0x00008d45]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004a27      c644240e01     mov byte [rsp + 0xe], 1
0x00004a2c      c644247c00     mov byte [rsp + 0x7c], 0
0x00004a31      4531e4         xor r12d, r12d
0x00004a34      48c744245000.  mov qword [rsp + 0x50], 0
0x00004a3d      c644240f01     mov byte [rsp + 0xf], 1
0x00004a42      c644240d00     mov byte [rsp + 0xd], 0
0x00004a47      48c744241801.  mov qword [rsp + 0x18], 1
0x00004a50      4531ff         xor r15d, r15d
0x00004a53      4889442448     mov qword [rsp + 0x48], rax
0x00004a58      e926f0ffff     jmp 0x3a83
0x00004a5d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00004a60      4c89dd         mov rbp, r11
0x00004a63      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00004a68      e9ccfaffff     jmp 0x4539
0x00004a6d      488d05cf4200.  lea rax, str.l______l                   ; 0x8d43 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004a74      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00004a79      c644247c00     mov byte [rsp + 0x7c], 0
0x00004a7e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00004a81      48c744245000.  mov qword [rsp + 0x50], 0
0x00004a8a      c644240f01     mov byte [rsp + 0xf], 1
0x00004a8f      c644240d01     mov byte [rsp + 0xd], 1
0x00004a94      48c744241801.  mov qword [rsp + 0x18], 1
0x00004a9d      4531ff         xor r15d, r15d
0x00004aa0      4889442448     mov qword [rsp + 0x48], rax
0x00004aa5      e9d9efffff     jmp 0x3a83
0x00004aaa      89d0           mov eax, edx
0x00004aac      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00004ab1      4885db         test rbx, rbx
0x00004ab4      742c           je 0x4ae2
0x00004ab6      84c0           test al, al
0x00004ab8      7428           je 0x4ae2
0x00004aba      0fb60b         movzx ecx, byte [rbx]
0x00004abd      4889d8         mov rax, rbx
0x00004ac0      84c9           test cl, cl
0x00004ac2      741e           je 0x4ae2
0x00004ac4      4c89fa         mov rdx, r15
0x00004ac7      4c29f8         sub rax, r15
0x00004aca      4939d5         cmp r13, rdx
0x00004acd      7604           jbe 0x4ad3
0x00004acf      41880c16       mov byte [r14 + rdx], cl
0x00004ad3      4883c201       add rdx, 1
0x00004ad7      0fb60c10       movzx ecx, byte [rax + rdx]
0x00004adb      84c9           test cl, cl
0x00004add      75eb           jne 0x4aca
0x00004adf      4989d7         mov r15, rdx
0x00004ae2      4d39fd         cmp r13, r15
0x00004ae5      0f869efaffff   jbe 0x4589
0x00004aeb      43c6043e00     mov byte [r14 + r15], 0
0x00004af0      e994faffff     jmp 0x4589
0x00004af5      837c240802     cmp dword [rsp + 8], 2
0x00004afa      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00004aff      4c89dd         mov rbp, r11
0x00004b02      0f94c0         sete al
0x00004b05      885c240d       mov byte [rsp + 0xd], bl
0x00004b09      e92bfaffff     jmp 0x4539
0x00004b0e      8b742408       mov esi, dword [rsp + 8]
0x00004b12      4889cf         mov rdi, rcx
0x00004b15      e8a6edffff     call sym.gettext_quote.part.1
0x00004b1a      4889442468     mov qword [rsp + 0x68], rax
0x00004b1f      e952fcffff     jmp 0x4776
0x00004b24      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00004b28      4889cf         mov rdi, rcx
0x00004b2b      e890edffff     call sym.gettext_quote.part.1
0x00004b30      4889442460     mov qword [rsp + 0x60], rax
0x00004b35      e967fcffff     jmp 0x47a1
0x00004b3a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00004b3f      4c89dd         mov rbp, r11
0x00004b42      89d0           mov eax, edx
0x00004b44      885c240d       mov byte [rsp + 0xd], bl
0x00004b48      e9ecf9ffff     jmp 0x4539
0x00004b4d      4883ec08       sub rsp, 8
0x00004b51      41b805000000   mov r8d, 5
0x00004b57      4c89d9         mov rcx, r11
0x00004b5a      ff742468       push qword [rsp + 0x68]
0x00004b5e      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00004b62      4c89f7         mov rdi, r14
0x00004b65      ff742438       push qword [rsp + 0x38]
0x00004b69      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00004b71      488b542430     mov rdx, qword [rsp + 0x30]
0x00004b76      488b742470     mov rsi, qword [rsp + 0x70]
0x00004b7b      e830eeffff     call sym.quotearg_buffer_restyled
0x00004b80      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00004b84      4989c7         mov r15, rax
0x00004b87      e9fdf9ffff     jmp 0x4589
0x00004b8c      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00004b91      e916ffffff     jmp 0x4aac
0x00004b96      c74424080200.  mov dword [rsp + 8], 2
0x00004b9e      e996f9ffff     jmp 0x4539
0x00004ba3      e878cdffff     call sym.imp.__stack_chk_fail
0x00004ba8      c644240d00     mov byte [rsp + 0xd], 0
0x00004bad      e96ffaffff     jmp 0x4621
0x00004bb2      4c89dd         mov rbp, r11
0x00004bb5      e996f9ffff     jmp 0x4550
0x00004bba      c644240e01     mov byte [rsp + 0xe], 1
0x00004bbf      31c0           xor eax, eax
0x00004bc1      4531e4         xor r12d, r12d
0x00004bc4      48c744245000.  mov qword [rsp + 0x50], 0
0x00004bcd      e9a2f5ffff     jmp 0x4174
0x00004bd2      4c89ea         mov rdx, r13
0x00004bd5      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00004bda      e9f3f5ffff     jmp 0x41d2
0x00004bdf      e84cccffff     call sym.imp.abort
0x00004be4      6690           nop
0x00004be6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00004bf0      4157           push r15
0x00004bf2      4156           push r14
0x00004bf4      4c63ff         movsxd r15, edi
0x00004bf7      4155           push r13
0x00004bf9      4154           push r12
0x00004bfb      4989d6         mov r14, rdx
0x00004bfe      55             push rbp
0x00004bff      53             push rbx
0x00004c00      4889cd         mov rbp, rcx
0x00004c03      4883ec28       sub rsp, 0x28
0x00004c07      4889742408     mov qword [rsp + 8], rsi
0x00004c0c      e82fccffff     call sym.imp.__errno_location
0x00004c11      4989c5         mov r13, rax
0x00004c14      8b00           mov eax, dword [rax]
0x00004c16      4585ff         test r15d, r15d
0x00004c19      488b1d606420.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x20b080:8]=0x20b090 obj.slotvec0
0x00004c20      89442418       mov dword [rsp + 0x18], eax
0x00004c24      0f8867010000   js 0x4d91
0x00004c2a      44393d476420.  cmp dword [obj.nslots], r15d            ; [0x20b078:4]=1
0x00004c31      7f62           jg 0x4c95
0x00004c33      4181ffffffff.  cmp r15d, 0x7fffffff
0x00004c3a      0f8456010000   je 0x4d96
0x00004c40      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004c44      488d05456420.  lea rax, obj.slotvec0                   ; 0x20b090
0x00004c4b      4963f4         movsxd rsi, r12d
0x00004c4e      48c1e604       shl rsi, 4
0x00004c52      4839c3         cmp rbx, rax
0x00004c55      0f8415010000   je 0x4d70
0x00004c5b      4889df         mov rdi, rbx
0x00004c5e      e86d0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00004c63      4889c3         mov rbx, rax
0x00004c66      488905136420.  mov qword [obj.slotvec], rax            ; [0x20b080:8]=0x20b090 obj.slotvec0
0x00004c6d      48633d046420.  movsxd rdi, dword [obj.nslots]          ; [0x20b078:4]=1
0x00004c74      4489e2         mov edx, r12d
0x00004c77      31f6           xor esi, esi
0x00004c79      29fa           sub edx, edi
0x00004c7b      48c1e704       shl rdi, 4
0x00004c7f      4863d2         movsxd rdx, edx
0x00004c82      4801df         add rdi, rbx
0x00004c85      48c1e204       shl rdx, 4
0x00004c89      e812cdffff     call sym.imp.memset
0x00004c8e      448925e36320.  mov dword [obj.nslots], r12d            ; [0x20b078:4]=1
0x00004c95      8b4504         mov eax, dword [rbp + 4]
0x00004c98      49c1e704       shl r15, 4
0x00004c9c      4883ec08       sub rsp, 8
0x00004ca0      4c01fb         add rbx, r15
0x00004ca3      4c8d7d08       lea r15, [rbp + 8]
0x00004ca7      448b4500       mov r8d, dword [rbp]
0x00004cab      4c8b1b         mov r11, qword [rbx]
0x00004cae      4c8b6308       mov r12, qword [rbx + 8]
0x00004cb2      4c89f1         mov rcx, r14
0x00004cb5      83c801         or eax, 1
0x00004cb8      89442424       mov dword [rsp + 0x24], eax
0x00004cbc      ff7530         push qword [rbp + 0x30]
0x00004cbf      4189c1         mov r9d, eax
0x00004cc2      ff7528         push qword [rbp + 0x28]
0x00004cc5      4157           push r15
0x00004cc7      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00004cca      488b542428     mov rdx, qword [rsp + 0x28]
0x00004ccf      4c89e7         mov rdi, r12
0x00004cd2      4c895c2430     mov qword [rsp + 0x30], r11
0x00004cd7      e8d4ecffff     call sym.quotearg_buffer_restyled
0x00004cdc      4883c420       add rsp, 0x20
0x00004ce0      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00004ce5      4939c3         cmp r11, rax
0x00004ce8      7767           ja 0x4d51
0x00004cea      488d7001       lea rsi, [rax + 1]
0x00004cee      488d05cb6420.  lea rax, obj.slot0                      ; 0x20b1c0
0x00004cf5      4939c4         cmp r12, rax
0x00004cf8      488933         mov qword [rbx], rsi
0x00004cfb      7412           je 0x4d0f
0x00004cfd      4c89e7         mov rdi, r12
0x00004d00      4889742410     mov qword [rsp + 0x10], rsi
0x00004d05      e806cbffff     call sym.imp.free
0x00004d0a      488b742410     mov rsi, qword [rsp + 0x10]
0x00004d0f      4889f7         mov rdi, rsi
0x00004d12      4889742410     mov qword [rsp + 0x10], rsi
0x00004d17      e8540e0000     call sym.xmalloc
0x00004d1c      4883ec08       sub rsp, 8
0x00004d20      48894308       mov qword [rbx + 8], rax
0x00004d24      448b4500       mov r8d, dword [rbp]
0x00004d28      ff7530         push qword [rbp + 0x30]
0x00004d2b      ff7528         push qword [rbp + 0x28]
0x00004d2e      4c89f1         mov rcx, r14
0x00004d31      4157           push r15
0x00004d33      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00004d38      4889c7         mov rdi, rax
0x00004d3b      488b542428     mov rdx, qword [rsp + 0x28]
0x00004d40      488b742430     mov rsi, qword [rsp + 0x30]
0x00004d45      4989c4         mov r12, rax
0x00004d48      e863ecffff     call sym.quotearg_buffer_restyled
0x00004d4d      4883c420       add rsp, 0x20
0x00004d51      8b442418       mov eax, dword [rsp + 0x18]
0x00004d55      41894500       mov dword [r13], eax
0x00004d59      4883c428       add rsp, 0x28
0x00004d5d      4c89e0         mov rax, r12
0x00004d60      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00004d61      5d             pop rbp
0x00004d62      415c           pop r12
0x00004d64      415d           pop r13
0x00004d66      415e           pop r14
0x00004d68      415f           pop r15
0x00004d6a      c3             ret
0x00004d6b      0f1f440000     nop dword [rax + rax]
0x00004d70      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00004d72      e8590e0000     call sym.xrealloc
0x00004d77      660f6f051163.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x00004d7f      4889c3         mov rbx, rax
0x00004d82      488905f76220.  mov qword [obj.slotvec], rax            ; [0x20b080:8]=0x20b090 obj.slotvec0
0x00004d89      0f1100         movups xmmword [rax], xmm0
0x00004d8c      e9dcfeffff     jmp 0x4c6d
0x00004d91      e89acaffff     call sym.imp.abort
0x00004d96      e825100000     call sym.xalloc_die
0x00004d9b      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00004da0      4154           push r12
0x00004da2      55             push rbp
0x00004da3      53             push rbx
0x00004da4      4889fb         mov rbx, rdi
0x00004da7      e894caffff     call sym.imp.__errno_location
0x00004dac      448b20         mov r12d, dword [rax]
0x00004daf      4889c5         mov rbp, rax
0x00004db2      488d05076520.  lea rax, obj.default_quoting_options    ; 0x20b2c0
0x00004db9      4885db         test rbx, rbx
0x00004dbc      be38000000     mov esi, 0x38                           ; '8'
0x00004dc1      480f44d8       cmove rbx, rax
0x00004dc5      4889df         mov rdi, rbx
0x00004dc8      e8a30f0000     call sym.xmemdup
0x00004dcd      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004dd1      5b             pop rbx
0x00004dd2      5d             pop rbp
0x00004dd3      415c           pop r12
0x00004dd5      c3             ret
0x00004dd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00004de0      488d05d96420.  lea rax, obj.default_quoting_options    ; 0x20b2c0
0x00004de7      4885ff         test rdi, rdi
0x00004dea      480f44f8       cmove rdi, rax
0x00004dee      8b07           mov eax, dword [rdi]
0x00004df0      c3             ret
0x00004df1      0f1f440000     nop dword [rax + rax]
0x00004df6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00004e00      488d05b96420.  lea rax, obj.default_quoting_options    ; 0x20b2c0
0x00004e07      4885ff         test rdi, rdi
0x00004e0a      480f44f8       cmove rdi, rax
0x00004e0e      8937           mov dword [rdi], esi
0x00004e10      c3             ret
0x00004e11      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00004e16      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00004e20      488d05996420.  lea rax, obj.default_quoting_options    ; 0x20b2c0
0x00004e27      4885ff         test rdi, rdi
0x00004e2a      89f1           mov ecx, esi
0x00004e2c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00004e30      89f0           mov eax, esi
0x00004e32      83e11f         and ecx, 0x1f
0x00004e35      c0e805         shr al, 5
0x00004e38      0fb6c0         movzx eax, al
0x00004e3b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00004e40      8b37           mov esi, dword [rdi]
0x00004e42      89f0           mov eax, esi
0x00004e44      d3e8           shr eax, cl
0x00004e46      31c2           xor edx, eax
0x00004e48      83e001         and eax, 1
0x00004e4b      83e201         and edx, 1
0x00004e4e      d3e2           shl edx, cl
0x00004e50      31f2           xor edx, esi
0x00004e52      8917           mov dword [rdi], edx
0x00004e54      c3             ret
0x00004e55      90             nop
0x00004e56      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00004e60      488d05596420.  lea rax, obj.default_quoting_options    ; 0x20b2c0
0x00004e67      4885ff         test rdi, rdi
0x00004e6a      480f44f8       cmove rdi, rax
0x00004e6e      8b4704         mov eax, dword [rdi + 4]
0x00004e71      897704         mov dword [rdi + 4], esi
0x00004e74      c3             ret
0x00004e75      90             nop
0x00004e76      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00004e80      488d05396420.  lea rax, obj.default_quoting_options    ; 0x20b2c0
0x00004e87      4885ff         test rdi, rdi
0x00004e8a      480f44f8       cmove rdi, rax
0x00004e8e      4885f6         test rsi, rsi
0x00004e91      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00004e97      740e           je 0x4ea7
0x00004e99      4885d2         test rdx, rdx
0x00004e9c      7409           je 0x4ea7
0x00004e9e      48897728       mov qword [rdi + 0x28], rsi
0x00004ea2      48895730       mov qword [rdi + 0x30], rdx
0x00004ea6      c3             ret
0x00004ea7      4883ec08       sub rsp, 8
0x00004eab      e880c9ffff     call sym.imp.abort
;-- quotearg_buffer:
0x00004eb0      4157           push r15
0x00004eb2      4156           push r14
0x00004eb4      488d05056420.  lea rax, obj.default_quoting_options    ; 0x20b2c0
0x00004ebb      4155           push r13
0x00004ebd      4154           push r12
0x00004ebf      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00004ec2      55             push rbp
0x00004ec3      53             push rbx
0x00004ec4      4c89c3         mov rbx, r8
0x00004ec7      4989f6         mov r14, rsi
0x00004eca      4989d7         mov r15, rdx
0x00004ecd      4883ec18       sub rsp, 0x18
0x00004ed1      4d85c0         test r8, r8
0x00004ed4      480f44d8       cmove rbx, rax
0x00004ed8      48894c2408     mov qword [rsp + 8], rcx
0x00004edd      e85ec9ffff     call sym.imp.__errno_location
0x00004ee2      448b20         mov r12d, dword [rax]
0x00004ee5      4889c5         mov rbp, rax
0x00004ee8      488d4308       lea rax, [rbx + 8]
0x00004eec      4883ec08       sub rsp, 8
0x00004ef0      448b4b04       mov r9d, dword [rbx + 4]
0x00004ef4      ff7330         push qword [rbx + 0x30]
0x00004ef7      448b03         mov r8d, dword [rbx]
0x00004efa      ff7328         push qword [rbx + 0x28]
0x00004efd      4c89fa         mov rdx, r15
0x00004f00      50             push rax
0x00004f01      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00004f06      4c89f6         mov rsi, r14
0x00004f09      4c89ef         mov rdi, r13
0x00004f0c      e89feaffff     call sym.quotearg_buffer_restyled
0x00004f11      44896500       mov dword [rbp], r12d
0x00004f15      4883c438       add rsp, 0x38
0x00004f19      5b             pop rbx
0x00004f1a      5d             pop rbp
0x00004f1b      415c           pop r12
0x00004f1d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00004f1f      415e           pop r14
0x00004f21      415f           pop r15
0x00004f23      c3             ret
0x00004f24      6690           nop
0x00004f26      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00004f30      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00004f32      4156           push r14
0x00004f34      488d05856320.  lea rax, obj.default_quoting_options    ; 0x20b2c0
0x00004f3b      4155           push r13
0x00004f3d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x00004f3f      4989d4         mov r12, rdx
0x00004f42      55             push rbp
0x00004f43      53             push rbx
0x00004f44      4889cb         mov rbx, rcx
0x00004f47      4989fe         mov r14, rdi
0x00004f4a      4989f7         mov r15, rsi
0x00004f4d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00004f51      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00004f54      480f44d8       cmove rbx, rax
0x00004f58      31ed           xor ebp, ebp
0x00004f5a      e8e1c8ffff     call sym.imp.__errno_location
0x00004f5f      4d85e4         test r12, r12
0x00004f62      4989c5         mov r13, rax
0x00004f65      8b00           mov eax, dword [rax]
0x00004f67      400f94c5       sete bpl
0x00004f6b      0b6b04         or ebp, dword [rbx + 4]
0x00004f6e      4c8d5308       lea r10, [rbx + 8]
0x00004f72      4883ec08       sub rsp, 8
0x00004f76      448b03         mov r8d, dword [rbx]
0x00004f79      4c89f9         mov rcx, r15
0x00004f7c      89442414       mov dword [rsp + 0x14], eax
0x00004f80      ff7330         push qword [rbx + 0x30]
0x00004f83      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00004f86      ff7328         push qword [rbx + 0x28]
0x00004f89      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x00004f8b      31f6           xor esi, esi
0x00004f8d      4189e9         mov r9d, ebp
0x00004f90      31ff           xor edi, edi
0x00004f92      4c89542440     mov qword [rsp + 0x40], r10
0x00004f97      e814eaffff     call sym.quotearg_buffer_restyled
0x00004f9c      488d7001       lea rsi, [rax + 1]
0x00004fa0      4889442448     mov qword [rsp + 0x48], rax
0x00004fa5      4883c420       add rsp, 0x20
0x00004fa9      4889f7         mov rdi, rsi
0x00004fac      4889742418     mov qword [rsp + 0x18], rsi
0x00004fb1      e8ba0b0000     call sym.xmalloc
0x00004fb6      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x00004fbb      4883ec08       sub rsp, 8
0x00004fbf      ff7330         push qword [rbx + 0x30]
0x00004fc2      ff7328         push qword [rbx + 0x28]
0x00004fc5      4c8b542438     mov r10, qword [rsp + 0x38]
0x00004fca      4189e9         mov r9d, ebp
0x00004fcd      448b03         mov r8d, dword [rbx]
0x00004fd0      4c89f9         mov rcx, r15
0x00004fd3      4c89f2         mov rdx, r14
0x00004fd6      4889c7         mov rdi, rax
0x00004fd9      4152           push r10
0x00004fdb      488b742438     mov rsi, qword [rsp + 0x38]
0x00004fe0      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00004fe5      8b44242c       mov eax, dword [rsp + 0x2c]
0x00004fe9      4883c420       add rsp, 0x20
0x00004fed      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00004ff0      41894500       mov dword [r13], eax
0x00004ff4      7409           je 0x4fff
0x00004ff6      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x00004ffb      4d891c24       mov qword [r12], r11
0x00004fff      488b442410     mov rax, qword [rsp + 0x10]
0x00005004      4883c438       add rsp, 0x38
0x00005008      5b             pop rbx
0x00005009      5d             pop rbp
0x0000500a      415c           pop r12
0x0000500c      415d           pop r13
0x0000500e      415e           pop r14
0x00005010      415f           pop r15
0x00005012      c3             ret
0x00005013      0f1f00         nop dword [rax]
0x00005016      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00005020      4889d1         mov rcx, rdx
0x00005023      31d2           xor edx, edx
0x00005025      e906ffffff     jmp sym.quotearg_alloc_mem
0x0000502a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00005030      8b0542602000   mov eax, dword [obj.nslots]             ; [0x20b078:4]=1
0x00005036      4154           push r12
0x00005038      4c8b25416020.  mov r12, qword [obj.slotvec]            ; [0x20b080:8]=0x20b090 obj.slotvec0
0x0000503f      55             push rbp
0x00005040      53             push rbx
0x00005041      83f801         cmp eax, 1
0x00005044      7e2b           jle 0x5071                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00005046      83e802         sub eax, 2
0x00005049      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x0000504e      48c1e004       shl rax, 4
0x00005052      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00005057      660f1f840000.  nop word [rax + rax]
0x00005060      488b3b         mov rdi, qword [rbx]
0x00005063      4883c310       add rbx, 0x10
0x00005067      e8a4c7ffff     call sym.imp.free
0x0000506c      4839eb         cmp rbx, rbp
0x0000506f      75ef           jne 0x5060
0x00005071      498b7c2408     mov rdi, qword [r12 + 8]
0x00005076      488d1d436120.  lea rbx, obj.slot0                      ; 0x20b1c0
0x0000507d      4839df         cmp rdi, rbx
0x00005080      7417           je 0x5099
0x00005082      e889c7ffff     call sym.imp.free
0x00005087      48c705fe5f20.  mov qword [obj.slotvec0], 0x100         ; [0x20b090:8]=256
0x00005092      48891dff5f20.  mov qword [0x0020b098], rbx             ; [0x20b098:8]=0x20b1c0 obj.slot0
0x00005099      488d1df05f20.  lea rbx, obj.slotvec0                   ; 0x20b090
0x000050a0      4939dc         cmp r12, rbx
0x000050a3      740f           je 0x50b4
0x000050a5      4c89e7         mov rdi, r12
0x000050a8      e863c7ffff     call sym.imp.free
0x000050ad      48891dcc5f20.  mov qword [obj.slotvec], rbx            ; [0x20b080:8]=0x20b090 obj.slotvec0
0x000050b4      5b             pop rbx
0x000050b5      c705b95f2000.  mov dword [obj.nslots], 1               ; [0x20b078:4]=1
0x000050bf      5d             pop rbp
0x000050c0      415c           pop r12
0x000050c2      c3             ret
0x000050c3      0f1f00         nop dword [rax]
0x000050c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x000050d0      488d0de96120.  lea rcx, obj.default_quoting_options    ; 0x20b2c0
0x000050d7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000050de      e90dfbffff     jmp sym.quotearg_n_options
0x000050e3      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x000050e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x000050f0      488d0dc96120.  lea rcx, obj.default_quoting_options    ; 0x20b2c0
0x000050f7      e9f4faffff     jmp sym.quotearg_n_options
0x000050fc      0f1f4000       nop dword [rax]
;-- quotearg:
0x00005100      488d0db96120.  lea rcx, obj.default_quoting_options    ; 0x20b2c0
0x00005107      4889fe         mov rsi, rdi
0x0000510a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005111      31ff           xor edi, edi
0x00005113      e9d8faffff     jmp sym.quotearg_n_options
0x00005118      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00005120      488d0d996120.  lea rcx, obj.default_quoting_options    ; 0x20b2c0
0x00005127      4889f2         mov rdx, rsi
0x0000512a      4889fe         mov rsi, rdi
0x0000512d      31ff           xor edi, edi
0x0000512f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00005134      6690           nop
0x00005136      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00005140      4883ec48       sub rsp, 0x48
0x00005144      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00005147      64488b142528.  mov rdx, qword fs:[0x28]
0x00005150      4889542438     mov qword [rsp + 0x38], rdx
0x00005155      31d2           xor edx, edx
0x00005157      83fe0a         cmp esi, 0xa
0x0000515a      7468           je 0x51c4
0x0000515c      893424         mov dword [rsp], esi
0x0000515f      4889e1         mov rcx, rsp
0x00005162      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005169      4889c6         mov rsi, rax
0x0000516c      48c744240400.  mov qword [rsp + 4], 0
0x00005175      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000517e      48c744241400.  mov qword [rsp + 0x14], 0
0x00005187      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00005190      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00005199      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000051a2      c74424340000.  mov dword [rsp + 0x34], 0
0x000051aa      e841faffff     call sym.quotearg_n_options
0x000051af      488b4c2438     mov rcx, qword [rsp + 0x38]
0x000051b4      6448330c2528.  xor rcx, qword fs:[0x28]
0x000051bd      750a           jne 0x51c9                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x000051bf      4883c448       add rsp, 0x48
0x000051c3      c3             ret
0x000051c4      e867c6ffff     call sym.imp.abort
0x000051c9      e852c7ffff     call sym.imp.__stack_chk_fail
0x000051ce      6690           nop
;-- quotearg_n_style_mem:
0x000051d0      4883ec48       sub rsp, 0x48
0x000051d4      4889d0         mov rax, rdx
0x000051d7      4889ca         mov rdx, rcx
0x000051da      64488b0c2528.  mov rcx, qword fs:[0x28]
0x000051e3      48894c2438     mov qword [rsp + 0x38], rcx
0x000051e8      31c9           xor ecx, ecx
0x000051ea      83fe0a         cmp esi, 0xa
0x000051ed      7461           je 0x5250
0x000051ef      893424         mov dword [rsp], esi
0x000051f2      4889e1         mov rcx, rsp
0x000051f5      4889c6         mov rsi, rax
0x000051f8      48c744240400.  mov qword [rsp + 4], 0
0x00005201      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000520a      48c744241400.  mov qword [rsp + 0x14], 0
0x00005213      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0000521c      48c744242400.  mov qword [rsp + 0x24], 0
0x00005225      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000522e      c74424340000.  mov dword [rsp + 0x34], 0
0x00005236      e8b5f9ffff     call sym.quotearg_n_options
0x0000523b      488b542438     mov rdx, qword [rsp + 0x38]
0x00005240      644833142528.  xor rdx, qword fs:[0x28]
0x00005249      750a           jne 0x5255
0x0000524b      4883c448       add rsp, 0x48
0x0000524f      c3             ret
0x00005250      e8dbc5ffff     call sym.imp.abort
0x00005255      e8c6c6ffff     call sym.imp.__stack_chk_fail
0x0000525a      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00005260      4889f2         mov rdx, rsi
0x00005263      89fe           mov esi, edi
0x00005265      31ff           xor edi, edi
0x00005267      e9d4feffff     jmp sym.quotearg_n_style
0x0000526c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00005270      4889d1         mov rcx, rdx
0x00005273      4889f2         mov rdx, rsi
0x00005276      89fe           mov esi, edi
0x00005278      31ff           xor edi, edi
0x0000527a      e951ffffff     jmp sym.quotearg_n_style_mem
0x0000527f      90             nop
;-- quotearg_char_mem:
0x00005280      4883ec48       sub rsp, 0x48
0x00005284      89d1           mov ecx, edx
0x00005286      64488b042528.  mov rax, qword fs:[0x28]
0x0000528f      4889442438     mov qword [rsp + 0x38], rax
0x00005294      31c0           xor eax, eax
0x00005296      488b05536020.  mov rax, qword [0x0020b2f0]             ; [0x20b2f0:8]=0
0x0000529d      4989e0         mov r8, rsp
0x000052a0      83e11f         and ecx, 0x1f
0x000052a3      660f6f051560.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x000052ab      4889442430     mov qword [rsp + 0x30], rax
0x000052b0      89d0           mov eax, edx
0x000052b2      0f290424       movaps xmmword [rsp], xmm0
0x000052b6      c0e805         shr al, 5
0x000052b9      0fb6c0         movzx eax, al
0x000052bc      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x000052c1      660f6f050760.  movdqa xmm0, xmmword [0x0020b2d0]
0x000052c9      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x000052ce      660f6f050a60.  movdqa xmm0, xmmword [0x0020b2e0]
0x000052d6      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x000052db      418b11         mov edx, dword [r9]
0x000052de      89d0           mov eax, edx
0x000052e0      d3e8           shr eax, cl
0x000052e2      f7d0           not eax
0x000052e4      83e001         and eax, 1
0x000052e7      d3e0           shl eax, cl
0x000052e9      4c89c1         mov rcx, r8
0x000052ec      31d0           xor eax, edx
0x000052ee      4889f2         mov rdx, rsi
0x000052f1      4889fe         mov rsi, rdi
0x000052f4      418901         mov dword [r9], eax
0x000052f7      31ff           xor edi, edi
0x000052f9      e8f2f8ffff     call sym.quotearg_n_options
0x000052fe      488b742438     mov rsi, qword [rsp + 0x38]
0x00005303      644833342528.  xor rsi, qword fs:[0x28]
0x0000530c      7505           jne 0x5313
0x0000530e      4883c448       add rsp, 0x48
0x00005312      c3             ret
0x00005313      e808c6ffff     call sym.imp.__stack_chk_fail
0x00005318      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00005320      400fbed6       movsx edx, sil
0x00005324      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000532b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00005330      ba3a000000     mov edx, 0x3a                           ; ':'
0x00005335      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000533c      e93fffffff     jmp sym.quotearg_char_mem
0x00005341      0f1f440000     nop dword [rax + rax]
0x00005346      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00005350      ba3a000000     mov edx, 0x3a                           ; ':'
0x00005355      e926ffffff     jmp sym.quotearg_char_mem
0x0000535a      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00005360      4883ec48       sub rsp, 0x48
0x00005364      4889d0         mov rax, rdx
0x00005367      64488b142528.  mov rdx, qword fs:[0x28]
0x00005370      4889542438     mov qword [rsp + 0x38], rdx
0x00005375      31d2           xor edx, edx
0x00005377      83fe0a         cmp esi, 0xa
0x0000537a      7468           je 0x53e4
0x0000537c      893424         mov dword [rsp], esi
0x0000537f      4889e1         mov rcx, rsp
0x00005382      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005389      4889c6         mov rsi, rax
0x0000538c      48c744240400.  mov qword [rsp + 4], 0
0x00005395      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x0000539e      48c744241400.  mov qword [rsp + 0x14], 0
0x000053a7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000053b0      48c744242400.  mov qword [rsp + 0x24], 0
0x000053b9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000053c2      c74424340000.  mov dword [rsp + 0x34], 0
0x000053ca      e821f8ffff     call sym.quotearg_n_options
0x000053cf      488b4c2438     mov rcx, qword [rsp + 0x38]
0x000053d4      6448330c2528.  xor rcx, qword fs:[0x28]
0x000053dd      750a           jne 0x53e9
0x000053df      4883c448       add rsp, 0x48
0x000053e3      c3             ret
0x000053e4      e847c4ffff     call sym.imp.abort
0x000053e9      e832c5ffff     call sym.imp.__stack_chk_fail
0x000053ee      6690           nop
;-- quotearg_n_custom_mem:
0x000053f0      4883ec48       sub rsp, 0x48
0x000053f4      4989c9         mov r9, rcx
0x000053f7      488b0df25e20.  mov rcx, qword [0x0020b2f0]             ; [0x20b2f0:8]=0
0x000053fe      660f6f05ba5e.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00005406      64488b042528.  mov rax, qword fs:[0x28]
0x0000540f      4889442438     mov qword [rsp + 0x38], rax
0x00005414      31c0           xor eax, eax
0x00005416      0f290424       movaps xmmword [rsp], xmm0
0x0000541a      4885f6         test rsi, rsi
0x0000541d      48894c2430     mov qword [rsp + 0x30], rcx
0x00005422      c704240a0000.  mov dword [rsp], 0xa
0x00005429      660f6f059f5e.  movdqa xmm0, xmmword [0x0020b2d0]
0x00005431      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00005436      660f6f05a25e.  movdqa xmm0, xmmword [0x0020b2e0]
0x0000543e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00005443      7432           je 0x5477
0x00005445      4885d2         test rdx, rdx
0x00005448      742d           je 0x5477
0x0000544a      4889742428     mov qword [rsp + 0x28], rsi
0x0000544f      4889542430     mov qword [rsp + 0x30], rdx
0x00005454      4889e1         mov rcx, rsp
0x00005457      4c89c2         mov rdx, r8
0x0000545a      4c89ce         mov rsi, r9
0x0000545d      e88ef7ffff     call sym.quotearg_n_options
0x00005462      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00005467      6448333c2528.  xor rdi, qword fs:[0x28]
0x00005470      750a           jne 0x547c
0x00005472      4883c448       add rsp, 0x48
0x00005476      c3             ret
0x00005477      e8b4c3ffff     call sym.imp.abort
0x0000547c      e89fc4ffff     call sym.imp.__stack_chk_fail
0x00005481      0f1f440000     nop dword [rax + rax]
0x00005486      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00005490      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00005497      e954ffffff     jmp sym.quotearg_n_custom_mem
0x0000549c      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x000054a0      4889d1         mov rcx, rdx
0x000054a3      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x000054aa      4889f2         mov rdx, rsi
0x000054ad      4889fe         mov rsi, rdi
0x000054b0      31ff           xor edi, edi
0x000054b2      e939ffffff     jmp sym.quotearg_n_custom_mem
0x000054b7      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x000054c0      4989c8         mov r8, rcx
0x000054c3      4889d1         mov rcx, rdx
0x000054c6      4889f2         mov rdx, rsi
0x000054c9      4889fe         mov rsi, rdi
0x000054cc      31ff           xor edi, edi
0x000054ce      e91dffffff     jmp sym.quotearg_n_custom_mem
0x000054d3      0f1f00         nop dword [rax]
0x000054d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x000054e0      488d0d595b20.  lea rcx, obj.quote_quoting_options      ; 0x20b040
0x000054e7      e904f7ffff     jmp sym.quotearg_n_options
0x000054ec      0f1f4000       nop dword [rax]
;-- quote_mem:
0x000054f0      488d0d495b20.  lea rcx, obj.quote_quoting_options      ; 0x20b040
0x000054f7      4889f2         mov rdx, rsi
0x000054fa      4889fe         mov rsi, rdi
0x000054fd      31ff           xor edi, edi
0x000054ff      e9ecf6ffff     jmp sym.quotearg_n_options
0x00005504      6690           nop
0x00005506      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00005510      488d0d295b20.  lea rcx, obj.quote_quoting_options      ; 0x20b040
0x00005517      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000551e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00005523      0f1f00         nop dword [rax]
0x00005526      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00005530      488d0d095b20.  lea rcx, obj.quote_quoting_options      ; 0x20b040
0x00005537      4889fe         mov rsi, rdi
0x0000553a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005541      31ff           xor edi, edi
0x00005543      e9a8f6ffff     jmp sym.quotearg_n_options
0x00005548      0f1f84000000.  nop dword [rax + rax]
;-- version_etc_arn:
0x00005550      4157           push r15
0x00005552      4156           push r14
0x00005554      4155           push r13
0x00005556      4154           push r12
0x00005558      4d89cc         mov r12, r9
0x0000555b      55             push rbp
0x0000555c      53             push rbx
0x0000555d      4889fd         mov rbp, rdi
0x00005560      4c89c3         mov rbx, r8
0x00005563      4883ec28       sub rsp, 0x28
0x00005567      4885f6         test rsi, rsi
0x0000556a      0f8418010000   je 0x5688
0x00005570      4989d0         mov r8, rdx
0x00005573      488d158e3c00.  lea rdx, [0x00009208]                   ; "%s (%s) %s\n"
0x0000557a      4989c9         mov r9, rcx
0x0000557d      31c0           xor eax, eax
0x0000557f      4889f1         mov rcx, rsi
0x00005582      be01000000     mov esi, 1
0x00005587      e8b4c5ffff     call sym.imp.__fprintf_chk
0x0000558c      488d35883c00.  lea rsi, [0x0000921b]                   ; "(C)"
0x00005593      31ff           xor edi, edi
0x00005595      ba05000000     mov edx, 5
0x0000559a      e851c3ffff     call sym.imp.dcgettext
0x0000559f      488d159a3f00.  lea rdx, obj.version_etc_copyright      ; 0x9540 ; "Copyright %s %d Free Software Foundation, Inc."
0x000055a6      4889c1         mov rcx, rax
0x000055a9      41b8e3070000   mov r8d, 0x7e3
0x000055af      be01000000     mov esi, 1
0x000055b4      4889ef         mov rdi, rbp
0x000055b7      31c0           xor eax, eax
0x000055b9      e882c5ffff     call sym.imp.__fprintf_chk
0x000055be      488d35e33c00.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x92a8 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x000055c5      31ff           xor edi, edi
0x000055c7      ba05000000     mov edx, 5
0x000055cc      e81fc3ffff     call sym.imp.dcgettext
0x000055d1      4889ee         mov rsi, rbp
0x000055d4      4889c7         mov rdi, rax
0x000055d7      e8f4c3ffff     call sym.imp.fputs_unlocked
0x000055dc      4983fc09       cmp r12, 9
0x000055e0      0f873a030000   ja 0x5920
0x000055e6      488d151b3f00.  lea rdx, [0x00009508]
0x000055ed      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x000055f1      4801d0         add rax, rdx
0x000055f4      ffe0           jmp rax
0x000055f6      662e0f1f8400.  nop word cs:[rax + rax]
0x00005600      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00005604      488b4310       mov rax, qword [rbx + 0x10]
0x00005608      488d35093e00.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x9418 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x0000560f      4c8b4308       mov r8, qword [rbx + 8]
0x00005613      ba05000000     mov edx, 5
0x00005618      31ff           xor edi, edi
0x0000561a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0000561e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005622      4c894c2410     mov qword [rsp + 0x10], r9
0x00005627      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000562b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000562f      48890424       mov qword [rsp], rax
0x00005633      4c89442408     mov qword [rsp + 8], r8
0x00005638      488b1b         mov rbx, qword [rbx]
0x0000563b      e8b0c2ffff     call sym.imp.dcgettext
0x00005640      4883ec08       sub rsp, 8
0x00005644      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00005649      4889c2         mov rdx, rax
0x0000564c      4889d9         mov rcx, rbx
0x0000564f      be01000000     mov esi, 1
0x00005654      4889ef         mov rdi, rbp
0x00005657      31c0           xor eax, eax
0x00005659      4151           push r9
0x0000565b      4155           push r13
0x0000565d      4154           push r12
0x0000565f      4157           push r15
0x00005661      4156           push r14
0x00005663      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00005668      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000566d      e8cec4ffff     call sym.imp.__fprintf_chk
0x00005672      4883c430       add rsp, 0x30
0x00005676      4883c428       add rsp, 0x28
0x0000567a      5b             pop rbx
0x0000567b      5d             pop rbp
0x0000567c      415c           pop r12
0x0000567e      415d           pop r13
0x00005680      415e           pop r14
0x00005682      415f           pop r15
0x00005684      c3             ret
0x00005685      0f1f00         nop dword [rax]
0x00005688      4989c8         mov r8, rcx
0x0000568b      4889d1         mov rcx, rdx
0x0000568e      488d157f3b00.  lea rdx, str.s__s                       ; 0x9214 ; "%s %s\n"
0x00005695      be01000000     mov esi, 1
0x0000569a      31c0           xor eax, eax
0x0000569c      e89fc4ffff     call sym.imp.__fprintf_chk
0x000056a1      e9e6feffff     jmp 0x558c
0x000056a6      662e0f1f8400.  nop word cs:[rax + rax]
0x000056b0      4c8b5340       mov r10, qword [rbx + 0x40]
0x000056b4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000056b8      488d35893d00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x9448 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x000056bf      488b4310       mov rax, qword [rbx + 0x10]
0x000056c3      4c8b4308       mov r8, qword [rbx + 8]
0x000056c7      ba05000000     mov edx, 5
0x000056cc      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000056d0      4c8b6328       mov r12, qword [rbx + 0x28]
0x000056d4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000056d8      4c8b7318       mov r14, qword [rbx + 0x18]
0x000056dc      488b1b         mov rbx, qword [rbx]
0x000056df      4c89542418     mov qword [rsp + 0x18], r10
0x000056e4      4c894c2410     mov qword [rsp + 0x10], r9
0x000056e9      48890424       mov qword [rsp], rax
0x000056ed      4c89442408     mov qword [rsp + 8], r8
0x000056f2      31ff           xor edi, edi
0x000056f4      e8f7c1ffff     call sym.imp.dcgettext
0x000056f9      4c8b542418     mov r10, qword [rsp + 0x18]
0x000056fe      4152           push r10
0x00005700      e93fffffff     jmp 0x5644
0x00005705      0f1f00         nop dword [rax]
0x00005708      488b1b         mov rbx, qword [rbx]
0x0000570b      488d350d3b00.  lea rsi, str.Written_by__s.             ; 0x921f ; "Written by %s.\n"
0x00005712      ba05000000     mov edx, 5
0x00005717      31ff           xor edi, edi
0x00005719      e8d2c1ffff     call sym.imp.dcgettext
0x0000571e      4883c428       add rsp, 0x28
0x00005722      4889d9         mov rcx, rbx
0x00005725      4889ef         mov rdi, rbp
0x00005728      5b             pop rbx
0x00005729      5d             pop rbp
0x0000572a      415c           pop r12
0x0000572c      415d           pop r13
0x0000572e      415e           pop r14
0x00005730      415f           pop r15
0x00005732      4889c2         mov rdx, rax
0x00005735      be01000000     mov esi, 1
0x0000573a      31c0           xor eax, eax
0x0000573c      e9ffc3ffff     jmp sym.imp.__fprintf_chk
0x00005741      0f1f80000000.  nop dword [rax]
0x00005748      4c8b6308       mov r12, qword [rbx + 8]
0x0000574c      488d35dc3a00.  lea rsi, str.Written_by__s_and__s.      ; 0x922f ; "Written by %s and %s.\n"
0x00005753      488b1b         mov rbx, qword [rbx]
0x00005756      ba05000000     mov edx, 5
0x0000575b      31ff           xor edi, edi
0x0000575d      e88ec1ffff     call sym.imp.dcgettext
0x00005762      4883c428       add rsp, 0x28
0x00005766      4d89e0         mov r8, r12
0x00005769      4889d9         mov rcx, rbx
0x0000576c      4889ef         mov rdi, rbp
0x0000576f      4889c2         mov rdx, rax
0x00005772      be01000000     mov esi, 1
0x00005777      5b             pop rbx
0x00005778      5d             pop rbp
0x00005779      415c           pop r12
0x0000577b      415d           pop r13
0x0000577d      415e           pop r14
0x0000577f      415f           pop r15
0x00005781      31c0           xor eax, eax
0x00005783      e9b8c3ffff     jmp sym.imp.__fprintf_chk
0x00005788      0f1f84000000.  nop dword [rax + rax]
0x00005790      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005794      4c8b6308       mov r12, qword [rbx + 8]
0x00005798      488d35a73a00.  lea rsi, str.Written_by__s___s__and__s. ; 0x9246 ; "Written by %s, %s, and %s.\n"
0x0000579f      488b1b         mov rbx, qword [rbx]
0x000057a2      ba05000000     mov edx, 5
0x000057a7      31ff           xor edi, edi
0x000057a9      e842c1ffff     call sym.imp.dcgettext
0x000057ae      4883c428       add rsp, 0x28
0x000057b2      4d89e9         mov r9, r13
0x000057b5      4d89e0         mov r8, r12
0x000057b8      4889d9         mov rcx, rbx
0x000057bb      4889ef         mov rdi, rbp
0x000057be      4889c2         mov rdx, rax
0x000057c1      5b             pop rbx
0x000057c2      5d             pop rbp
0x000057c3      415c           pop r12
0x000057c5      415d           pop r13
0x000057c7      415e           pop r14
0x000057c9      415f           pop r15
0x000057cb      be01000000     mov esi, 1
0x000057d0      31c0           xor eax, eax
0x000057d2      e969c3ffff     jmp sym.imp.__fprintf_chk
0x000057d7      660f1f840000.  nop word [rax + rax]
0x000057e0      488d35913b00.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x9378 ; "Written by %s, %s, %s,\nand %s.\n"
0x000057e7      ba05000000     mov edx, 5
0x000057ec      31ff           xor edi, edi
0x000057ee      4c8b7318       mov r14, qword [rbx + 0x18]
0x000057f2      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000057f6      4c8b6308       mov r12, qword [rbx + 8]
0x000057fa      488b1b         mov rbx, qword [rbx]
0x000057fd      e8eec0ffff     call sym.imp.dcgettext
0x00005802      4883ec08       sub rsp, 8
0x00005806      4156           push r14
0x00005808      4889c2         mov rdx, rax
0x0000580b      4d89e9         mov r9, r13
0x0000580e      4d89e0         mov r8, r12
0x00005811      4889d9         mov rcx, rbx
0x00005814      4889ef         mov rdi, rbp
0x00005817      be01000000     mov esi, 1
0x0000581c      31c0           xor eax, eax
0x0000581e      e81dc3ffff     call sym.imp.__fprintf_chk
0x00005823      58             pop rax
0x00005824      5a             pop rdx
0x00005825      4883c428       add rsp, 0x28
0x00005829      5b             pop rbx
0x0000582a      5d             pop rbp
0x0000582b      415c           pop r12
0x0000582d      415d           pop r13
0x0000582f      415e           pop r14
0x00005831      415f           pop r15
0x00005833      c3             ret
0x00005834      0f1f4000       nop dword [rax]
0x00005838      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000583c      488d35553b00.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x9398 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00005843      ba05000000     mov edx, 5
0x00005848      31ff           xor edi, edi
0x0000584a      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000584e      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005852      4c8b6308       mov r12, qword [rbx + 8]
0x00005856      488b1b         mov rbx, qword [rbx]
0x00005859      e892c0ffff     call sym.imp.dcgettext
0x0000585e      4157           push r15
0x00005860      eba4           jmp 0x5806
0x00005862      660f1f440000   nop word [rax + rax]
0x00005868      4c8b4308       mov r8, qword [rbx + 8]
0x0000586c      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005870      488d35493b00.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x93c0 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00005877      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000587b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000587f      ba05000000     mov edx, 5
0x00005884      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005888      31ff           xor edi, edi
0x0000588a      488b1b         mov rbx, qword [rbx]
0x0000588d      4c890424       mov qword [rsp], r8
0x00005891      e85ac0ffff     call sym.imp.dcgettext
0x00005896      4883ec08       sub rsp, 8
0x0000589a      4d89e9         mov r9, r13
0x0000589d      4154           push r12
0x0000589f      4157           push r15
0x000058a1      4156           push r14
0x000058a3      4c8b442420     mov r8, qword [rsp + 0x20]
0x000058a8      4889d9         mov rcx, rbx
0x000058ab      4889c2         mov rdx, rax
0x000058ae      4889ef         mov rdi, rbp
0x000058b1      be01000000     mov esi, 1
0x000058b6      31c0           xor eax, eax
0x000058b8      e883c2ffff     call sym.imp.__fprintf_chk
0x000058bd      4883c420       add rsp, 0x20
0x000058c1      4883c428       add rsp, 0x28
0x000058c5      5b             pop rbx
0x000058c6      5d             pop rbp
0x000058c7      415c           pop r12
0x000058c9      415d           pop r13
0x000058cb      415e           pop r14
0x000058cd      415f           pop r15
0x000058cf      c3             ret
0x000058d0      4c8b4b10       mov r9, qword [rbx + 0x10]
0x000058d4      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000058d8      488d35093b00.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x93e8 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x000058df      4c8b6328       mov r12, qword [rbx + 0x28]
0x000058e3      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000058e7      ba05000000     mov edx, 5
0x000058ec      4c8b7318       mov r14, qword [rbx + 0x18]
0x000058f0      4c8b4308       mov r8, qword [rbx + 8]
0x000058f4      31ff           xor edi, edi
0x000058f6      4c894c2408     mov qword [rsp + 8], r9
0x000058fb      488b1b         mov rbx, qword [rbx]
0x000058fe      4c890424       mov qword [rsp], r8
0x00005902      e8e9bfffff     call sym.imp.dcgettext
0x00005907      4155           push r13
0x00005909      4154           push r12
0x0000590b      4157           push r15
0x0000590d      4156           push r14
0x0000590f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00005914      eb8d           jmp 0x58a3
0x00005916      662e0f1f8400.  nop word cs:[rax + rax]
0x00005920      4c8b5340       mov r10, qword [rbx + 0x40]
0x00005924      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00005928      ba05000000     mov edx, 5
0x0000592d      488b4310       mov rax, qword [rbx + 0x10]
0x00005931      4c8b4308       mov r8, qword [rbx + 8]
0x00005935      488d35443b00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x9480 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x0000593c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00005940      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005944      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005948      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000594c      4c89542418     mov qword [rsp + 0x18], r10
0x00005951      4c894c2410     mov qword [rsp + 0x10], r9
0x00005956      48890424       mov qword [rsp], rax
0x0000595a      4c89442408     mov qword [rsp + 8], r8
0x0000595f      488b1b         mov rbx, qword [rbx]
0x00005962      e98bfdffff     jmp 0x56f2
0x00005967      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00005970      4531c9         xor r9d, r9d
0x00005973      49833800       cmp qword [r8], 0
0x00005977      7412           je 0x598b
0x00005979      0f1f80000000.  nop dword [rax]
0x00005980      4983c101       add r9, 1
0x00005984      4b833cc800     cmp qword [r8 + r9*8], 0
0x00005989      75f5           jne 0x5980
0x0000598b      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00005990      4883ec68       sub rsp, 0x68
0x00005994      4d89c2         mov r10, r8
0x00005997      4531c9         xor r9d, r9d
0x0000599a      64488b042528.  mov rax, qword fs:[0x28]
0x000059a3      4889442458     mov qword [rsp + 0x58], rax
0x000059a8      31c0           xor eax, eax
0x000059aa      4989e0         mov r8, rsp
0x000059ad      0f1f00         nop dword [rax]
0x000059b0      418b02         mov eax, dword [r10]
0x000059b3      83f82f         cmp eax, 0x2f
0x000059b6      7742           ja 0x59fa
0x000059b8      4189c3         mov r11d, eax
0x000059bb      4d035a10       add r11, qword [r10 + 0x10]
0x000059bf      83c008         add eax, 8
0x000059c2      418902         mov dword [r10], eax
0x000059c5      498b03         mov rax, qword [r11]
0x000059c8      4885c0         test rax, rax
0x000059cb      4b8904c8       mov qword [r8 + r9*8], rax
0x000059cf      740a           je 0x59db
0x000059d1      4983c101       add r9, 1
0x000059d5      4983f90a       cmp r9, 0xa
0x000059d9      75d5           jne 0x59b0
0x000059db      e870fbffff     call sym.version_etc_arn
0x000059e0      488b442458     mov rax, qword [rsp + 0x58]
0x000059e5      644833042528.  xor rax, qword fs:[0x28]
0x000059ee      7505           jne 0x59f5
0x000059f0      4883c468       add rsp, 0x68
0x000059f4      c3             ret
0x000059f5      e826bfffff     call sym.imp.__stack_chk_fail
0x000059fa      4d8b5a08       mov r11, qword [r10 + 8]
0x000059fe      498d4308       lea rax, [r11 + 8]
0x00005a02      49894208       mov qword [r10 + 8], rax
0x00005a06      ebbd           jmp 0x59c5
0x00005a08      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00005a10      55             push rbp
0x00005a11      53             push rbx
0x00005a12      41ba20000000   mov r10d, 0x20                          ; "@"
0x00005a18      4531db         xor r11d, r11d
0x00005a1b      4881ecb80000.  sub rsp, 0xb8
0x00005a22      64488b042528.  mov rax, qword fs:[0x28]
0x00005a2b      4889442478     mov qword [rsp + 0x78], rax
0x00005a30      31c0           xor eax, eax
0x00005a32      488d8424d000.  lea rax, [rsp + 0xd0]
0x00005a3a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00005a42      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x00005a4a      4c8d442420     lea r8, [rsp + 0x20]
0x00005a4f      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00005a57      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x00005a5f      4889442410     mov qword [rsp + 0x10], rax
0x00005a64      488d84248000.  lea rax, [rsp + 0x80]
0x00005a6c      4531c9         xor r9d, r9d
0x00005a6f      4889442418     mov qword [rsp + 0x18], rax
0x00005a74      4889c5         mov rbp, rax
0x00005a77      660f1f840000.  nop word [rax + rax]
0x00005a80      4183fa2f       cmp r10d, 0x2f
0x00005a84      7756           ja 0x5adc
0x00005a86      4489d0         mov eax, r10d
0x00005a89      41bb01000000   mov r11d, 1
0x00005a8f      4183c208       add r10d, 8
0x00005a93      4801e8         add rax, rbp
0x00005a96      488b00         mov rax, qword [rax]
0x00005a99      4885c0         test rax, rax
0x00005a9c      4b8904c8       mov qword [r8 + r9*8], rax
0x00005aa0      740a           je 0x5aac
0x00005aa2      4983c101       add r9, 1
0x00005aa6      4983f90a       cmp r9, 0xa
0x00005aaa      75d4           jne 0x5a80
0x00005aac      4584db         test r11b, r11b
0x00005aaf      7524           jne 0x5ad5
0x00005ab1      e89afaffff     call sym.version_etc_arn
0x00005ab6      488b442478     mov rax, qword [rsp + 0x78]
0x00005abb      644833042528.  xor rax, qword fs:[0x28]
0x00005ac4      750a           jne 0x5ad0
0x00005ac6      4881c4b80000.  add rsp, 0xb8
0x00005acd      5b             pop rbx
0x00005ace      5d             pop rbp
0x00005acf      c3             ret
0x00005ad0      e84bbeffff     call sym.imp.__stack_chk_fail
0x00005ad5      4489542408     mov dword [rsp + 8], r10d
0x00005ada      ebd5           jmp 0x5ab1
0x00005adc      4889d8         mov rax, rbx
0x00005adf      4883c308       add rbx, 8
0x00005ae3      ebb1           jmp 0x5a96
0x00005ae5      90             nop
0x00005ae6      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00005af0      53             push rbx
0x00005af1      488d356a3700.  lea rsi, str.Report_bugs_to:__s         ; 0x9262 ; "\nReport bugs to: %s\n"
0x00005af8      ba05000000     mov edx, 5
0x00005afd      31ff           xor edi, edi
0x00005aff      e8ecbdffff     call sym.imp.dcgettext
0x00005b04      488d156c3700.  lea rdx, str.bug_coreutils_gnu.org      ; 0x9277 ; "bug-coreutils@gnu.org"
0x00005b0b      4889c6         mov rsi, rax
0x00005b0e      bf01000000     mov edi, 1
0x00005b13      31c0           xor eax, eax
0x00005b15      e8a6bfffff     call sym.imp.__printf_chk
0x00005b1a      488d356c3700.  lea rsi, str.s_home_page:___s           ; 0x928d ; "%s home page: <%s>\n"
0x00005b21      ba05000000     mov edx, 5
0x00005b26      31ff           xor edi, edi
0x00005b28      e8c3bdffff     call sym.imp.dcgettext
0x00005b2d      488d0de43000.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x8c18 ; "https://www.gnu.org/software/coreutils/"
0x00005b34      488d15cf2a00.  lea rdx, str.GNU_coreutils              ; 0x860a ; "GNU coreutils"
0x00005b3b      4889c6         mov rsi, rax
0x00005b3e      bf01000000     mov edi, 1
0x00005b43      31c0           xor eax, eax
0x00005b45      e876bfffff     call sym.imp.__printf_chk
0x00005b4a      488b1d575520.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x00005b51      488d35683900.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x94c0 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00005b58      31ff           xor edi, edi
0x00005b5a      ba05000000     mov edx, 5
0x00005b5f      e88cbdffff     call sym.imp.dcgettext
0x00005b64      4889de         mov rsi, rbx
0x00005b67      4889c7         mov rdi, rax
0x00005b6a      5b             pop rbx
0x00005b6b      e960beffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00005b70      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00005b71      4889fb         mov rbx, rdi
0x00005b74      e8d7beffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00005b79      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x00005b7c      7505           jne 0x5b83
0x00005b7e      4885db         test rbx, rbx
0x00005b81      7502           jne 0x5b85
0x00005b83      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00005b84      c3             ret
0x00005b85      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x00005b8a      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00005b90      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00005b93      48f7e6         mul rsi
0x00005b96      4889c7         mov rdi, rax
0x00005b99      0f90c0         seto al
0x00005b9c      4885ff         test rdi, rdi
0x00005b9f      780a           js 0x5bab
0x00005ba1      0fb6c0         movzx eax, al
0x00005ba4      4885c0         test rax, rax
0x00005ba7      7502           jne 0x5bab
0x00005ba9      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x00005bab      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x00005baf      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00005bb4      6690           nop
0x00005bb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00005bc0      ebae           jmp sym.xmalloc
0x00005bc2      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00005bc6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00005bd0      4885f6         test rsi, rsi
0x00005bd3      53             push rbx
0x00005bd4      4889f3         mov rbx, rsi
0x00005bd7      7505           jne 0x5bde
0x00005bd9      4885ff         test rdi, rdi
0x00005bdc      751a           jne 0x5bf8
0x00005bde      4889de         mov rsi, rbx
0x00005be1      e8babeffff     call sym.imp.realloc
0x00005be6      4885c0         test rax, rax
0x00005be9      7505           jne 0x5bf0
0x00005beb      4885db         test rbx, rbx
0x00005bee      7511           jne 0x5c01                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00005bf0      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00005bf1      c3             ret
0x00005bf2      660f1f440000   nop word [rax + rax]
0x00005bf8      e813bcffff     call sym.imp.free
0x00005bfd      31c0           xor eax, eax
0x00005bff      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00005c00      c3             ret
0x00005c01      e8ba010000     call sym.xalloc_die
0x00005c06      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00005c10      4889f0         mov rax, rsi
0x00005c13      48f7e2         mul rdx
0x00005c16      4889c6         mov rsi, rax
0x00005c19      0f90c0         seto al
0x00005c1c      4885f6         test rsi, rsi
0x00005c1f      780a           js 0x5c2b
0x00005c21      0fb6c0         movzx eax, al
0x00005c24      4885c0         test rax, rax
0x00005c27      7502           jne 0x5c2b
0x00005c29      eba5           jmp sym.xrealloc
0x00005c2b      4883ec08       sub rsp, 8
0x00005c2f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00005c34      6690           nop
0x00005c36      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00005c40      4885ff         test rdi, rdi
0x00005c43      4989d1         mov r9, rdx
0x00005c46      488b0e         mov rcx, qword [rsi]
0x00005c49      7435           je 0x5c80
0x00005c4b      31d2           xor edx, edx
0x00005c4d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00005c57      49f7f1         div r9
0x00005c5a      4839c8         cmp rax, rcx
0x00005c5d      763c           jbe 0x5c9b
0x00005c5f      4889c8         mov rax, rcx
0x00005c62      48d1e8         shr rax, 1
0x00005c65      488d4c0801     lea rcx, [rax + rcx + 1]
0x00005c6a      48890e         mov qword [rsi], rcx
0x00005c6d      490fafc9       imul rcx, r9
0x00005c71      4889ce         mov rsi, rcx
0x00005c74      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00005c79      0f1f80000000.  nop dword [rax]
0x00005c80      4885c9         test rcx, rcx
0x00005c83      7423           je 0x5ca8
0x00005c85      4889c8         mov rax, rcx
0x00005c88      49f7e1         mul r9
0x00005c8b      0f90c2         seto dl
0x00005c8e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00005c91      0fb6d2         movzx edx, dl
0x00005c94      7805           js 0x5c9b
0x00005c96      4885d2         test rdx, rdx
0x00005c99      74cf           je 0x5c6a
0x00005c9b      4883ec08       sub rsp, 8
0x00005c9f      e81c010000     call sym.xalloc_die
0x00005ca4      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00005ca8      31d2           xor edx, edx
0x00005caa      b880000000     mov eax, 0x80
0x00005caf      4531c0         xor r8d, r8d
0x00005cb2      49f7f1         div r9
0x00005cb5      4885c0         test rax, rax
0x00005cb8      410f94c0       sete r8b
0x00005cbc      498d0c00       lea rcx, [r8 + rax]
0x00005cc0      ebc3           jmp 0x5c85
0x00005cc2      0f1f4000       nop dword [rax]
0x00005cc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00005cd0      4885ff         test rdi, rdi
0x00005cd3      488b06         mov rax, qword [rsi]
0x00005cd6      7428           je 0x5d00
0x00005cd8      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00005ce2      4839d0         cmp rax, rdx
0x00005ce5      772a           ja 0x5d11
0x00005ce7      4889c2         mov rdx, rax
0x00005cea      48d1ea         shr rdx, 1
0x00005ced      488d440201     lea rax, [rdx + rax + 1]
0x00005cf2      488906         mov qword [rsi], rax
0x00005cf5      4889c6         mov rsi, rax
0x00005cf8      e9d3feffff     jmp sym.xrealloc
0x00005cfd      0f1f00         nop dword [rax]
0x00005d00      4885c0         test rax, rax
0x00005d03      ba80000000     mov edx, 0x80
0x00005d08      480f44c2       cmove rax, rdx
0x00005d0c      4885c0         test rax, rax
0x00005d0f      79e1           jns 0x5cf2
0x00005d11      4883ec08       sub rsp, 8
0x00005d15      e8a6000000     call sym.xalloc_die
0x00005d1a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00005d20      53             push rbx
0x00005d21      4889fb         mov rbx, rdi
0x00005d24      e847feffff     call sym.xmalloc
0x00005d29      4889da         mov rdx, rbx
0x00005d2c      31f6           xor esi, esi
0x00005d2e      4889c7         mov rdi, rax
0x00005d31      5b             pop rbx
0x00005d32      e969bcffff     jmp sym.imp.memset
0x00005d37      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00005d40      4889f8         mov rax, rdi
0x00005d43      4883ec08       sub rsp, 8
0x00005d47      48f7e6         mul rsi
0x00005d4a      0f90c2         seto dl
0x00005d4d      4885c0         test rax, rax
0x00005d50      7817           js 0x5d69
0x00005d52      0fb6d2         movzx edx, dl
0x00005d55      4885d2         test rdx, rdx
0x00005d58      750f           jne 0x5d69
0x00005d5a      e881bcffff     call sym.imp.calloc
0x00005d5f      4885c0         test rax, rax
0x00005d62      7405           je 0x5d69
0x00005d64      4883c408       add rsp, 8
0x00005d68      c3             ret
0x00005d69      e852000000     call sym.xalloc_die
0x00005d6e      6690           nop
;-- xmemdup:
0x00005d70      55             push rbp
0x00005d71      53             push rbx
0x00005d72      4889fd         mov rbp, rdi
0x00005d75      4889f7         mov rdi, rsi
0x00005d78      4889f3         mov rbx, rsi
0x00005d7b      4883ec08       sub rsp, 8
0x00005d7f      e8ecfdffff     call sym.xmalloc
0x00005d84      4883c408       add rsp, 8
0x00005d88      4889da         mov rdx, rbx
0x00005d8b      4889ee         mov rsi, rbp
0x00005d8e      5b             pop rbx
0x00005d8f      5d             pop rbp
0x00005d90      4889c7         mov rdi, rax
0x00005d93      e968bcffff     jmp sym.imp.memcpy
0x00005d98      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00005da0      53             push rbx
0x00005da1      4889fb         mov rbx, rdi
0x00005da4      e867bbffff     call sym.imp.strlen
0x00005da9      4889df         mov rdi, rbx
0x00005dac      488d7001       lea rsi, [rax + 1]
0x00005db0      5b             pop rbx
0x00005db1      ebbd           jmp sym.xmemdup
0x00005db3      662e0f1f8400.  nop word cs:[rax + rax]
0x00005dbd      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00005dc0      488d35a83700.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x956f ; "memory exhausted"
0x00005dc7      4883ec08       sub rsp, 8
0x00005dcb      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00005dd0      31ff           xor edi, edi
0x00005dd2      e819bbffff     call sym.imp.dcgettext
0x00005dd7      8b3d4b522000   mov edi, dword [obj.exit_failure]       ; [0x20b028:4]=1
0x00005ddd      488d15fd2e00.  lea rdx, [0x00008ce1]                   ; "%s"
0x00005de4      4889c1         mov rcx, rax
0x00005de7      31f6           xor esi, esi
0x00005de9      31c0           xor eax, eax
0x00005deb      e800bdffff     call sym.imp.error
0x00005df0      e83bbaffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00005df5      662e0f1f8400.  nop word cs:[rax + rax]
0x00005dff      90             nop
;-- rpl_asprintf:
0x00005e00      4881ecd80000.  sub rsp, 0xd8                           ; ../coreutils-8.31/lib/asprintf.c:31
0x00005e07      84c0           test al, al
0x00005e09      4889542430     mov qword [rsp + 0x30], rdx
0x00005e0e      48894c2438     mov qword [rsp + 0x38], rcx
0x00005e13      4c89442440     mov qword [rsp + 0x40], r8
0x00005e18      4c894c2448     mov qword [rsp + 0x48], r9
0x00005e1d      7437           je 0x5e56
0x00005e1f      0f29442450     movaps xmmword [rsp + 0x50], xmm0
0x00005e24      0f294c2460     movaps xmmword [rsp + 0x60], xmm1
0x00005e29      0f29542470     movaps xmmword [rsp + 0x70], xmm2
0x00005e2e      0f299c248000.  movaps xmmword [rsp + 0x80], xmm3
0x00005e36      0f29a4249000.  movaps xmmword [rsp + 0x90], xmm4
0x00005e3e      0f29ac24a000.  movaps xmmword [rsp + 0xa0], xmm5
0x00005e46      0f29b424b000.  movaps xmmword [rsp + 0xb0], xmm6
0x00005e4e      0f29bc24c000.  movaps xmmword [rsp + 0xc0], xmm7
0x00005e56      64488b042528.  mov rax, qword fs:[0x28]
0x00005e5f      4889442418     mov qword [rsp + 0x18], rax
0x00005e64      31c0           xor eax, eax
0x00005e66      488d8424e000.  lea rax, [rsp + 0xe0]                   ; ../coreutils-8.31/lib/asprintf.c:35
0x00005e6e      4889e2         mov rdx, rsp                            ; ../coreutils-8.31/lib/asprintf.c:36
0x00005e71      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/asprintf.c:35
0x00005e76      488d442420     lea rax, [rsp + 0x20]
0x00005e7b      c70424100000.  mov dword [rsp], 0x10                   ; [0x10:4]=0x3e0003
0x00005e82      c74424043000.  mov dword [rsp + 4], 0x30               ; '0'
                                                                       ; [0x30:4]=0
0x00005e8a      4889442410     mov qword [rsp + 0x10], rax
0x00005e8f      e8ac020000     call sym.rpl_vasprintf                  ; ../coreutils-8.31/lib/asprintf.c:36
0x00005e94      488b4c2418     mov rcx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/asprintf.c:39
0x00005e99      6448330c2528.  xor rcx, qword fs:[0x28]
0x00005ea2      7508           jne 0x5eac
0x00005ea4      4881c4d80000.  add rsp, 0xd8
0x00005eab      c3             ret
0x00005eac      e86fbaffff     call sym.imp.__stack_chk_fail
0x00005eb1      662e0f1f8400.  nop word cs:[rax + rax]
0x00005ebb      0f1f440000     nop dword [rax + rax]
;-- rpl_mbrtowc:
0x00005ec0      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00005ec2      4154           push r12
0x00005ec4      4989f5         mov r13, rsi
0x00005ec7      55             push rbp
0x00005ec8      53             push rbx
0x00005ec9      4889fb         mov rbx, rdi
0x00005ecc      4989d4         mov r12, rdx
0x00005ecf      4883ec18       sub rsp, 0x18
0x00005ed3      64488b042528.  mov rax, qword fs:[0x28]
0x00005edc      4889442408     mov qword [rsp + 8], rax
0x00005ee1      31c0           xor eax, eax
0x00005ee3      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00005ee8      4885ff         test rdi, rdi
0x00005eeb      480f44d8       cmove rbx, rax
0x00005eef      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00005ef2      e849baffff     call sym.imp.mbrtowc
0x00005ef7      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00005efb      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00005efe      7620           jbe 0x5f20                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00005f00      4d85e4         test r12, r12
0x00005f03      741b           je 0x5f20
0x00005f05      31ff           xor edi, edi
0x00005f07      e814d8ffff     call sym.hard_locale
0x00005f0c      84c0           test al, al
0x00005f0e      7510           jne 0x5f20
0x00005f10      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00005f15      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x00005f1a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00005f1c      0f1f4000       nop dword [rax]
0x00005f20      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00005f25      644833142528.  xor rdx, qword fs:[0x28]
0x00005f2e      4889e8         mov rax, rbp
0x00005f31      750b           jne 0x5f3e
0x00005f33      4883c418       add rsp, 0x18
0x00005f37      5b             pop rbx
0x00005f38      5d             pop rbp
0x00005f39      415c           pop r12
0x00005f3b      415d           pop r13
0x00005f3d      c3             ret
0x00005f3e      e8ddb9ffff     call sym.imp.__stack_chk_fail
0x00005f43      662e0f1f8400.  nop word cs:[rax + rax]
0x00005f4d      0f1f00         nop dword [rax]
;-- extract_trimmed_name:
0x00005f50      55             push rbp                                ; ../coreutils-8.31/lib/readutmp.c:50
0x00005f51      53             push rbx
0x00005f52      4889fd         mov rbp, rdi
0x00005f55      bf21000000     mov edi, 0x21                           ; ../coreutils-8.31/lib/readutmp.c:53 ; '!'
0x00005f5a      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/readutmp.c:50
0x00005f5e      e80dfcffff     call sym.xmalloc                        ; ../coreutils-8.31/lib/readutmp.c:53
0x00005f63      488d752c       lea rsi, [rbp + 0x2c]                   ; string_fortified.h:106   return __builtin___strncpy_chk (__dest, __src, __len, __bos (__dest));
0x00005f67      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/readutmp.c:53
0x00005f6a      ba20000000     mov edx, 0x20                           ; string_fortified.h:106   return __builtin___strncpy_chk (__dest, __src, __len, __bos (__dest)); ; "@"
0x00005f6f      4889c7         mov rdi, rax
0x00005f72      e8d9b8ffff     call sym.imp.strncpy
0x00005f77      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/readutmp.c:59
0x00005f7a      c6432000       mov byte [rbx + 0x20], 0                ; ../coreutils-8.31/lib/readutmp.c:58
0x00005f7e      e88db9ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/readutmp.c:59
0x00005f83      4801d8         add rax, rbx
0x00005f86      4839c3         cmp rbx, rax
0x00005f89      7306           jae 0x5f91
0x00005f8b      8078ff20       cmp byte [rax - 1], 0x20                ; ../coreutils-8.31/lib/readutmp.c:60
0x00005f8f      740f           je 0x5fa0
0x00005f91      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/readutmp.c:64
0x00005f95      4889d8         mov rax, rbx
0x00005f98      5b             pop rbx
0x00005f99      5d             pop rbp
0x00005f9a      c3             ret
0x00005f9b      0f1f440000     nop dword [rax + rax]
0x00005fa0      4883e801       sub rax, 1                              ; ../coreutils-8.31/lib/readutmp.c:61
0x00005fa4      c60000         mov byte [rax], 0
0x00005fa7      4839c3         cmp rbx, rax                            ; ../coreutils-8.31/lib/readutmp.c:59
0x00005faa      75df           jne 0x5f8b
0x00005fac      ebe3           jmp 0x5f91
0x00005fae      6690           nop
;-- read_utmp:
0x00005fb0      4157           push r15                                ; ../coreutils-8.31/lib/readutmp.c:94
0x00005fb2      4156           push r14
0x00005fb4      4531f6         xor r14d, r14d                          ; ../coreutils-8.31/lib/readutmp.c:97
0x00005fb7      4155           push r13                                ; ../coreutils-8.31/lib/readutmp.c:94
0x00005fb9      4189cd         mov r13d, ecx
0x00005fbc      4154           push r12
0x00005fbe      55             push rbp
0x00005fbf      53             push rbx
0x00005fc0      4589ec         mov r12d, r13d                          ; ../coreutils-8.31/lib/readutmp.c:72
0x00005fc3      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/readutmp.c:108
0x00005fc5      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/readutmp.c:96
0x00005fc7      4183e402       and r12d, 2                             ; ../coreutils-8.31/lib/readutmp.c:72
0x00005fcb      4883ec18       sub rsp, 0x18                           ; ../coreutils-8.31/lib/readutmp.c:94
0x00005fcf      4183e501       and r13d, 1                             ; ../coreutils-8.31/lib/readutmp.c:74
0x00005fd3      48893424       mov qword [rsp], rsi                    ; ../coreutils-8.31/lib/readutmp.c:94
0x00005fd7      4889542408     mov qword [rsp + 8], rdx
0x00005fdc      e80fb8ffff     call sym.imp.utmpxname                  ; ../coreutils-8.31/lib/readutmp.c:104
0x00005fe1      e80abaffff     call sym.imp.setutxent                  ; ../coreutils-8.31/lib/readutmp.c:106
0x00005fe6      e8f5baffff     call sym.imp.getutxent                  ; ../coreutils-8.31/lib/readutmp.c:108
0x00005feb      4885c0         test rax, rax
0x00005fee      4989c7         mov r15, rax
0x00005ff1      746e           je 0x6061
0x00005ff3      6641833f07     cmp word [r15], 7                       ; ../coreutils-8.31/lib/readutmp.c:71
0x00005ff8      750b           jne 0x6005
0x00005ffa      41807f2c00     cmp byte [r15 + 0x2c], 0
0x00005fff      0f858b000000   jne 0x6090
0x00006005      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/readutmp.c:72
0x00006008      75dc           jne 0x5fe6
0x0000600a      4839dd         cmp rbp, rbx                            ; ../coreutils-8.31/lib/readutmp.c:111
0x0000600d      0f84bd000000   je 0x60d0
0x00006013      488d045b       lea rax, [rbx + rbx*2]                  ; ../coreutils-8.31/lib/readutmp.c:114
0x00006017      498b17         mov rdx, qword [r15]
0x0000601a      4c89fe         mov rsi, r15
0x0000601d      4883c301       add rbx, 1
0x00006021      48c1e007       shl rax, 7
0x00006025      4c01f0         add rax, r14
0x00006028      488910         mov qword [rax], rdx
0x0000602b      488d7808       lea rdi, [rax + 8]
0x0000602f      498b97780100.  mov rdx, qword [r15 + 0x178]
0x00006036      4883e7f8       and rdi, 0xfffffffffffffff8
0x0000603a      488990780100.  mov qword [rax + 0x178], rdx
0x00006041      4829f8         sub rax, rdi
0x00006044      4829c6         sub rsi, rax
0x00006047      0580010000     add eax, 0x180
0x0000604c      c1e803         shr eax, 3
0x0000604f      89c1           mov ecx, eax
0x00006051      f348a5         rep movsq qword [rdi], qword ptr [rsi]
0x00006054      e887baffff     call sym.imp.getutxent                  ; ../coreutils-8.31/lib/readutmp.c:108
0x00006059      4885c0         test rax, rax
0x0000605c      4989c7         mov r15, rax
0x0000605f      7592           jne 0x5ff3
0x00006061      e85ab8ffff     call sym.imp.endutxent                  ; ../coreutils-8.31/lib/readutmp.c:117
0x00006066      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/readutmp.c:119
0x0000606a      488918         mov qword [rax], rbx
0x0000606d      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/readutmp.c:120
0x00006072      4c8930         mov qword [rax], r14
0x00006075      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/readutmp.c:123
0x00006079      31c0           xor eax, eax
0x0000607b      5b             pop rbx
0x0000607c      5d             pop rbp
0x0000607d      415c           pop r12
0x0000607f      415d           pop r13
0x00006081      415e           pop r14
0x00006083      415f           pop r15
0x00006085      c3             ret
0x00006086      662e0f1f8400.  nop word cs:[rax + rax]
0x00006090      418b7f04       mov edi, dword [r15 + 4]                ; ../coreutils-8.31/lib/readutmp.c:109
0x00006094      85ff           test edi, edi                           ; ../coreutils-8.31/lib/readutmp.c:76
0x00006096      0f8e6effffff   jle 0x600a
0x0000609c      4584ed         test r13b, r13b
0x0000609f      0f8465ffffff   je 0x600a
0x000060a5      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/readutmp.c:77
0x000060a7      e864b9ffff     call sym.imp.kill
0x000060ac      85c0           test eax, eax
0x000060ae      0f8956ffffff   jns 0x600a
0x000060b4      e887b7ffff     call sym.imp.__errno_location
0x000060b9      833803         cmp dword [rax], 3
0x000060bc      0f8424ffffff   je 0x5fe6
0x000060c2      4839dd         cmp rbp, rbx                            ; ../coreutils-8.31/lib/readutmp.c:111
0x000060c5      0f8548ffffff   jne 0x6013
0x000060cb      0f1f440000     nop dword [rax + rax]
0x000060d0      4d85f6         test r14, r14
0x000060d3      7433           je 0x6108
0x000060d5      48b8378ee338.  movabs rax, 0x38e38e38e38e37
0x000060df      4839c5         cmp rbp, rax
0x000060e2      7749           ja 0x612d
0x000060e4      4889e8         mov rax, rbp
0x000060e7      48d1e8         shr rax, 1
0x000060ea      488d6c0501     lea rbp, [rbp + rax + 1]
0x000060ef      488d746d00     lea rsi, [rbp + rbp*2]
0x000060f4      4c89f7         mov rdi, r14
0x000060f7      48c1e607       shl rsi, 7
0x000060fb      e8d0faffff     call sym.xrealloc
0x00006100      4989c6         mov r14, rax
0x00006103      e90bffffff     jmp 0x6013
0x00006108      4885ed         test rbp, rbp
0x0000610b      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/xalloc.h:41
0x00006110      ba80010000     mov edx, 0x180
0x00006115      480f44e8       cmove rbp, rax
0x00006119      4889d0         mov rax, rdx
0x0000611c      31f6           xor esi, esi
0x0000611e      48f7e5         mul rbp
0x00006121      700f           jo 0x6132
0x00006123      4885c0         test rax, rax
0x00006126      7805           js 0x612d
0x00006128      4885f6         test rsi, rsi
0x0000612b      74c2           je 0x60ef
0x0000612d      e88efcffff     call sym.xalloc_die
0x00006132      be01000000     mov esi, 1
0x00006137      ebea           jmp 0x6123
0x00006139      0f1f80000000.  nop dword [rax]
;-- rpl_vasprintf:
0x00006140      53             push rbx                                ; ../coreutils-8.31/lib/vasprintf.c:34
0x00006141      4889f0         mov rax, rsi
0x00006144      4889fb         mov rbx, rdi
0x00006147      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/vasprintf.c:36
0x00006149      4883ec10       sub rsp, 0x10                           ; ../coreutils-8.31/lib/vasprintf.c:34
0x0000614d      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00006156      48894c2408     mov qword [rsp + 8], rcx
0x0000615b      31c9           xor ecx, ecx
0x0000615d      4889e6         mov rsi, rsp                            ; ../coreutils-8.31/lib/vasprintf.c:36
0x00006160      4889d1         mov rcx, rdx
0x00006163      4889c2         mov rdx, rax
0x00006166      e835020000     call sym.vasnprintf
0x0000616b      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasprintf.c:37
0x0000616e      7442           je 0x61b2
0x00006170      488b1424       mov rdx, qword [rsp]                    ; ../coreutils-8.31/lib/vasprintf.c:40
0x00006174      4881faffffff.  cmp rdx, 0x7fffffff
0x0000617b      771b           ja 0x6198
0x0000617d      488903         mov qword [rbx], rax                    ; ../coreutils-8.31/lib/vasprintf.c:47
0x00006180      89d0           mov eax, edx                            ; ../coreutils-8.31/lib/vasprintf.c:49
0x00006182      488b5c2408     mov rbx, qword [rsp + 8]                ; ../coreutils-8.31/lib/vasprintf.c:50
0x00006187      6448331c2528.  xor rbx, qword fs:[0x28]
0x00006190      7527           jne 0x61b9
0x00006192      4883c410       add rsp, 0x10
0x00006196      5b             pop rbx
0x00006197      c3             ret
0x00006198      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/vasprintf.c:42
0x0000619b      e870b6ffff     call sym.imp.free
0x000061a0      e89bb6ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/vasprintf.c:43
0x000061a5      c7004b000000   mov dword [rax], 0x4b                   ; 'K'
                                                                       ; [0x4b:4]=0
0x000061ab      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/vasprintf.c:44 ; -1
0x000061b0      ebd0           jmp 0x6182
0x000061b2      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/vasprintf.c:38 ; -1
0x000061b7      ebc9           jmp 0x6182
0x000061b9      e862b7ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/vasprintf.c:50
0x000061be      6690           nop
;-- close_stream:
0x000061c0      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x000061c2      55             push rbp
0x000061c3      4889fd         mov rbp, rdi
0x000061c6      53             push rbx
0x000061c7      e8c4b6ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x000061cc      8b5d00         mov ebx, dword [rbp]
0x000061cf      4889ef         mov rdi, rbp
0x000061d2      4989c4         mov r12, rax
0x000061d5      e8a6000000     call sym.rpl_fclose
0x000061da      83e320         and ebx, 0x20                           ; "@"
0x000061dd      85db           test ebx, ebx
0x000061df      7517           jne 0x61f8
0x000061e1      85c0           test eax, eax
0x000061e3      740a           je 0x61ef                               ; stdio.h:-186
0x000061e5      4d85e4         test r12, r12                           ; stdio.h:-178
0x000061e8      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000061ed      7439           je 0x6228
0x000061ef      5b             pop rbx
0x000061f0      5d             pop rbp
0x000061f1      415c           pop r12
0x000061f3      c3             ret
0x000061f4      0f1f4000       nop dword [rax]
0x000061f8      85c0           test eax, eax
0x000061fa      751c           jne 0x6218
0x000061fc      e83fb6ffff     call sym.imp.__errno_location
0x00006201      c70000000000   mov dword [rax], 0
0x00006207      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000620c      5b             pop rbx
0x0000620d      5d             pop rbp
0x0000620e      415c           pop r12
0x00006210      c3             ret
0x00006211      0f1f80000000.  nop dword [rax]
0x00006218      5b             pop rbx
0x00006219      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000621e      5d             pop rbp                                 ; stdio.h:-186
0x0000621f      415c           pop r12
0x00006221      c3             ret
0x00006222      660f1f440000   nop word [rax + rax]
0x00006228      e813b6ffff     call sym.imp.__errno_location
0x0000622d      833809         cmp dword [rax], 9
0x00006230      5b             pop rbx
0x00006231      5d             pop rbp
0x00006232      415c           pop r12                                 ; stdio.h:-178
0x00006234      0f95c0         setne al
0x00006237      0fb6c0         movzx eax, al
0x0000623a      f7d8           neg eax
0x0000623c      c3             ret
0x0000623d      0f1f00         nop dword [rax]
;-- locale_charset:
0x00006240      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/localcharset.c:688
0x00006244      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00006249      e822b8ffff     call sym.imp.nl_langinfo
0x0000624e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00006251      741d           je 0x6270
0x00006253      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00006256      488d15233300.  lea rdx, str.ASCII                      ; 0x9580 ; "ASCII"
0x0000625d      480f44c2       cmove rax, rdx
0x00006261      4883c408       add rsp, 8
0x00006265      c3             ret
0x00006266      662e0f1f8400.  nop word cs:[rax + rax]
0x00006270      488d05093300.  lea rax, str.ASCII                      ; 0x9580 ; "ASCII"
0x00006277      4883c408       add rsp, 8
0x0000627b      c3             ret
0x0000627c      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x00006280      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00006282      55             push rbp
0x00006283      53             push rbx
0x00006284      4889fb         mov rbx, rdi
0x00006287      e8a4b7ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x0000628c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x0000628e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00006291      7854           js 0x62e7                               ; ../coreutils-8.31/lib/fclose.c:66
0x00006293      e8e8b7ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00006298      85c0           test eax, eax
0x0000629a      752c           jne 0x62c8
0x0000629c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x0000629f      e85c000000     call sym.rpl_fflush
0x000062a4      85c0           test eax, eax
0x000062a6      743c           je 0x62e4
0x000062a8      e893b5ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x000062ad      448b20         mov r12d, dword [rax]
0x000062b0      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x000062b3      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x000062b6      e815b6ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x000062bb      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x000062be      7530           jne 0x62f0
0x000062c0      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x000062c1      5d             pop rbp
0x000062c2      415c           pop r12
0x000062c4      c3             ret
0x000062c5      0f1f00         nop dword [rax]
0x000062c8      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x000062cb      e860b7ffff     call sym.imp.fileno
0x000062d0      31f6           xor esi, esi
0x000062d2      ba01000000     mov edx, 1
0x000062d7      89c7           mov edi, eax
0x000062d9      e8a2b6ffff     call sym.imp.lseek
0x000062de      4883f8ff       cmp rax, 0xffffffffffffffff
0x000062e2      75b8           jne 0x629c
0x000062e4      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x000062e7      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x000062e8      5d             pop rbp
0x000062e9      415c           pop r12
0x000062eb      e9e0b5ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x000062f0      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x000062f4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x000062f9      ebc5           jmp 0x62c0
0x000062fb      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x00006300      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00006303      53             push rbx
0x00006304      4889fb         mov rbx, rdi
0x00006307      7411           je 0x631a                               ; ../coreutils-8.31/lib/fflush.c:150
0x00006309      e872b7ffff     call sym.imp.__freading
0x0000630e      85c0           test eax, eax
0x00006310      7408           je 0x631a
0x00006312      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00006318      750e           jne 0x6328
0x0000631a      4889df         mov rdi, rbx
0x0000631d      5b             pop rbx
0x0000631e      e93db7ffff     jmp sym.imp.fflush
0x00006323      0f1f440000     nop dword [rax + rax]
0x00006328      4889df         mov rdi, rbx
0x0000632b      ba01000000     mov edx, 1
0x00006330      31f6           xor esi, esi
0x00006332      e809000000     call sym.rpl_fseeko
0x00006337      4889df         mov rdi, rbx
0x0000633a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x0000633b      e920b7ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00006340      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00006344      48394710       cmp qword [rdi + 0x10], rax
0x00006348      7406           je 0x6350                               ; ../coreutils-8.31/lib/fseeko.c:32
0x0000634a      e9b1b7ffff     jmp sym.imp.fseeko
0x0000634f      90             nop
0x00006350      488b4720       mov rax, qword [rdi + 0x20]
0x00006354      48394728       cmp qword [rdi + 0x28], rax
0x00006358      75f0           jne 0x634a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x0000635a      48837f4800     cmp qword [rdi + 0x48], 0
0x0000635f      75e9           jne 0x634a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00006361      4154           push r12
0x00006363      55             push rbp
0x00006364      4189d4         mov r12d, edx
0x00006367      53             push rbx
0x00006368      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x0000636b      4889fb         mov rbx, rdi
0x0000636e      e8bdb6ffff     call sym.imp.fileno
0x00006373      4489e2         mov edx, r12d
0x00006376      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00006379      89c7           mov edi, eax
0x0000637b      e800b6ffff     call sym.imp.lseek
0x00006380      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006384      740c           je 0x6392
0x00006386      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00006389      488983900000.  mov qword [rbx + 0x90], rax
0x00006390      31c0           xor eax, eax
0x00006392      5b             pop rbx
0x00006393      5d             pop rbp
0x00006394      415c           pop r12
0x00006396      c3             ret
0x00006397      660f1f840000.  nop word [rax + rax]
;-- vasnprintf:
0x000063a0      55             push rbp                                ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x000063a1      4889e5         mov rbp, rsp
0x000063a4      4157           push r15
0x000063a6      4156           push r14
0x000063a8      4155           push r13
0x000063aa      4154           push r12
0x000063ac      4c8db550fcff.  lea r14, [rbp - 0x3b0]                  ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x000063b3      53             push rbx                                ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x000063b4      4889d3         mov rbx, rdx
0x000063b7      4989cc         mov r12, rcx
0x000063ba      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x000063bd      4881ec080400.  sub rsp, 0x408                          ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x000063c4      4889b5e8fbff.  mov qword [rbp - 0x418], rsi
0x000063cb      488db540fdff.  lea rsi, [rbp - 0x2c0]                  ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x000063d2      4889bd18fcff.  mov qword [rbp - 0x3e8], rdi            ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x000063d9      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x000063dc      4c89b5f0fbff.  mov qword [rbp - 0x410], r14
0x000063e3      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x000063ec      488945c8       mov qword [rbp - 0x38], rax
0x000063f0      31c0           xor eax, eax
0x000063f2      4889b5f8fbff.  mov qword [rbp - 0x408], rsi            ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x000063f9      e8c2120000     call sym.printf_parse
0x000063fe      85c0           test eax, eax
0x00006400      0f88620e0000   js 0x7268
0x00006406      4c89f6         mov rsi, r14                            ; ../coreutils-8.31/lib/vasnprintf.c:1802
0x00006409      4c89e7         mov rdi, r12
0x0000640c      e8af100000     call sym.printf_fetchargs
0x00006411      85c0           test eax, eax
0x00006413      0f88b70e0000   js 0x72d0
0x00006419      488b8550fdff.  mov rax, qword [rbp - 0x2b0]            ; ../coreutils-8.31/lib/xsize.h:65
0x00006420      48c7c2ffffff.  mov rdx, 0xffffffffffffffff             ; ../coreutils-8.31/lib/xsize.h:66
0x00006427      4883c007       add rax, 7                              ; ../coreutils-8.31/lib/xsize.h:65
0x0000642b      4883f806       cmp rax, 6                              ; ../coreutils-8.31/lib/xsize.h:66
0x0000642f      480f46c2       cmovbe rax, rdx
0x00006433      48038558fdff.  add rax, qword [rbp - 0x2a8]
0x0000643a      0f82280a0000   jb 0x6e68
0x00006440      4889c7         mov rdi, rax
0x00006443      4531c0         xor r8d, r8d
0x00006446      4883c706       add rdi, 6
0x0000644a      410f92c0       setb r8b
0x0000644e      0f82140a0000   jb 0x6e68
0x00006454      4881ff9f0f00.  cmp rdi, 0xf9f                          ; ../coreutils-8.31/lib/vasnprintf.c:1826
0x0000645b      0f8647010000   jbe 0x65a8
0x00006461      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/vasnprintf.c:1835
0x00006465      4c898538fcff.  mov qword [rbp - 0x3c8], r8
0x0000646c      0f84f6090000   je 0x6e68
0x00006472      e8d9b5ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/vasnprintf.c:1837
0x00006477      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasnprintf.c:1838
0x0000647a      48898528fcff.  mov qword [rbp - 0x3d8], rax            ; ../coreutils-8.31/lib/vasnprintf.c:1837
0x00006481      0f84e1090000   je 0x6e68                               ; ../coreutils-8.31/lib/vasnprintf.c:1838
0x00006487      4c8b8538fcff.  mov r8, qword [rbp - 0x3c8]
0x0000648e      488985e0fbff.  mov qword [rbp - 0x420], rax
0x00006495      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/vasnprintf.c:1851
0x00006498      4883bd18fcff.  cmp qword [rbp - 0x3e8], 0              ; ../coreutils-8.31/lib/vasnprintf.c:1843
0x000064a0      740a           je 0x64ac
0x000064a2      488b85e8fbff.  mov rax, qword [rbp - 0x418]            ; ../coreutils-8.31/lib/vasnprintf.c:1846
0x000064a9      4c8b20         mov r12, qword [rax]
0x000064ac      4c8bad48fdff.  mov r13, qword [rbp - 0x2b8]            ; ../coreutils-8.31/lib/vasnprintf.c:1883
0x000064b3      488d8544fcff.  lea rax, [rbp - 0x3bc]                  ; stdio2.h:64   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
0x000064ba      4c8bbd18fcff.  mov r15, qword [rbp - 0x3e8]            ; ../coreutils-8.31/lib/vasnprintf.c:1883
0x000064c1      48c78500fcff.  mov qword [rbp - 0x400], 0
0x000064cc      48898510fcff.  mov qword [rbp - 0x3f0], rax            ; stdio2.h:64   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
0x000064d3      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/vasnprintf.c:1928
0x000064d6      4c89c3         mov rbx, r8
0x000064d9      498b4d00       mov rcx, qword [r13]                    ; ../coreutils-8.31/lib/vasnprintf.c:1885
0x000064dd      4989c0         mov r8, rax                             ; ../coreutils-8.31/lib/vasnprintf.c:1928
0x000064e0      4c39c1         cmp rcx, r8                             ; ../coreutils-8.31/lib/vasnprintf.c:1885
0x000064e3      0f8468090000   je 0x6e51
0x000064e9      4c29c1         sub rcx, r8                             ; ../coreutils-8.31/lib/vasnprintf.c:1887
0x000064ec      4889d8         mov rax, rbx
0x000064ef      4801c8         add rax, rcx
0x000064f2      4989c6         mov r14, rax                            ; ../coreutils-8.31/lib/xsize.h:65
0x000064f5      0f83dd000000   jae 0x65d8                              ; ../coreutils-8.31/lib/xsize.h:66
0x000064fb      4983fcff       cmp r12, 0xffffffffffffffff             ; ../coreutils-8.31/lib/vasnprintf.c:1890
0x000064ff      0f84cb0a0000   je 0x6fd0
0x00006505      e836b3ffff     call sym.imp.__errno_location
0x0000650a      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x00006511      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]            ; ../coreutils-8.31/lib/vasnprintf.c:5606
0x00006518      7409           je 0x6523
0x0000651a      4d85ff         test r15, r15
0x0000651d      0f85dd0a0000   jne 0x7000
0x00006523      488b85e0fbff.  mov rax, qword [rbp - 0x420]            ; ../coreutils-8.31/lib/vasnprintf.c:5608
0x0000652a      4885c0         test rax, rax
0x0000652d      7408           je 0x6537
0x0000652f      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:5609
0x00006532      e8d9b2ffff     call sym.imp.free
0x00006537      488b85f8fbff.  mov rax, qword [rbp - 0x408]            ; ../coreutils-8.31/lib/vasnprintf.c:5611
0x0000653e      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x00006545      4883c020       add rax, 0x20                           ; "@"
0x00006549      4839c7         cmp rdi, rax
0x0000654c      7405           je 0x6553
0x0000654e      e8bdb2ffff     call sym.imp.free
0x00006553      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x0000655a      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x00006561      4883c010       add rax, 0x10
0x00006565      4839c7         cmp rdi, rax
0x00006568      7405           je 0x656f
0x0000656a      e8a1b2ffff     call sym.imp.free
0x0000656f      488b8538fcff.  mov rax, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:5612
0x00006576      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/vasnprintf.c:5613
0x00006579      c7000c000000   mov dword [rax], 0xc                    ; ../coreutils-8.31/lib/vasnprintf.c:5612 ; [0xc:4]=0
0x0000657f      488b7dc8       mov rdi, qword [rbp - 0x38]             ; ../coreutils-8.31/lib/vasnprintf.c:5615
0x00006583      6448333c2528.  xor rdi, qword fs:[0x28]
0x0000658c      4c89f8         mov rax, r15
0x0000658f      0f85020f0000   jne 0x7497
0x00006595      488d65d8       lea rsp, [rbp - 0x28]
0x00006599      5b             pop rbx
0x0000659a      415c           pop r12
0x0000659c      415d           pop r13
0x0000659e      415e           pop r14
0x000065a0      415f           pop r15
0x000065a2      5d             pop rbp
0x000065a3      c3             ret
0x000065a4      0f1f4000       nop dword [rax]
0x000065a8      4883c024       add rax, 0x24                           ; ../coreutils-8.31/lib/vasnprintf.c:1828
0x000065ac      48c785e0fbff.  mov qword [rbp - 0x420], 0              ; ../coreutils-8.31/lib/vasnprintf.c:1829
0x000065b7      4883e0f0       and rax, 0xfffffffffffffff0             ; ../coreutils-8.31/lib/vasnprintf.c:1828
0x000065bb      4829c4         sub rsp, rax
0x000065be      488d44240f     lea rax, [rsp + 0xf]
0x000065c3      4883e0f0       and rax, 0xfffffffffffffff0
0x000065c7      48898528fcff.  mov qword [rbp - 0x3d8], rax
0x000065ce      e9c2feffff     jmp 0x6495
0x000065d3      0f1f440000     nop dword [rax + rax]
0x000065d8      4939c4         cmp r12, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:1890
0x000065db      7367           jae 0x6644
0x000065dd      4d85e4         test r12, r12
0x000065e0      0f852a090000   jne 0x6f10
0x000065e6      4883f80c       cmp rax, 0xc
0x000065ea      0f8732090000   ja 0x6f22
0x000065f0      41bc0c000000   mov r12d, 0xc
0x000065f6      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x000065fd      0f94c2         sete dl
0x00006600      4d85ff         test r15, r15
0x00006603      0f843f090000   je 0x6f48
0x00006609      84d2           test dl, dl
0x0000660b      0f8537090000   jne 0x6f48
0x00006611      4c89e6         mov rsi, r12
0x00006614      4c89ff         mov rdi, r15
0x00006617      4c898530fcff.  mov qword [rbp - 0x3d0], r8
0x0000661e      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x00006625      e876b4ffff     call sym.imp.realloc
0x0000662a      4885c0         test rax, rax
0x0000662d      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]
0x00006634      4c8b8530fcff.  mov r8, qword [rbp - 0x3d0]
0x0000663b      0f84aa090000   je 0x6feb
0x00006641      4989c7         mov r15, rax
0x00006644      498d3c1f       lea rdi, [r15 + rbx]                    ; ../coreutils-8.31/lib/vasnprintf.c:1896
0x00006648      4889ca         mov rdx, rcx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000664b      4c89c6         mov rsi, r8
0x0000664e      e8adb3ffff     call sym.imp.memcpy
0x00006653      488b8500fcff.  mov rax, qword [rbp - 0x400]            ; ../coreutils-8.31/lib/vasnprintf.c:1906
0x0000665a      48398540fdff.  cmp qword [rbp - 0x2c0], rax
0x00006661      0f84b40c0000   je 0x731b
0x00006667      410fb65548     movzx edx, byte [r13 + 0x48]            ; ../coreutils-8.31/lib/vasnprintf.c:1910
0x0000666c      498b4550       mov rax, qword [r13 + 0x50]
0x00006670      80fa25         cmp dl, 0x25
0x00006673      0f848f070000   je 0x6e08
0x00006679      4883f8ff       cmp rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/vasnprintf.c:1923
0x0000667d      0f84430c0000   je 0x72c6
0x00006683      4c8b8558fcff.  mov r8, qword [rbp - 0x3a8]
0x0000668a      48c1e005       shl rax, 5
0x0000668e      4c01c0         add rax, r8
0x00006691      80fa6e         cmp dl, 0x6e                            ; ../coreutils-8.31/lib/vasnprintf.c:1926
0x00006694      8b38           mov edi, dword [rax]
0x00006696      89bd30fcffff   mov dword [rbp - 0x3d0], edi
0x0000669c      0f84de070000   je 0x6e80
0x000066a2      418b4510       mov eax, dword [r13 + 0x10]             ; ../coreutils-8.31/lib/vasnprintf.c:4603
0x000066a6      488bbd28fcff.  mov rdi, qword [rbp - 0x3d8]            ; ../coreutils-8.31/lib/vasnprintf.c:4770
0x000066ad      a801           test al, 1                              ; ../coreutils-8.31/lib/vasnprintf.c:4776
0x000066af      c60725         mov byte [rdi], 0x25                    ; ../coreutils-8.31/lib/vasnprintf.c:4770 ; '%'
                                                                       ; [0x25:1]=0
0x000066b2      488d5f01       lea rbx, [rdi + 1]
0x000066b6      740f           je 0x66c7                               ; ../coreutils-8.31/lib/vasnprintf.c:4776
0x000066b8      488bbd28fcff.  mov rdi, qword [rbp - 0x3d8]            ; ../coreutils-8.31/lib/vasnprintf.c:4777
0x000066bf      488d5f02       lea rbx, [rdi + 2]
0x000066c3      c6470127       mov byte [rdi + 1], 0x27                ; '''
                                                                       ; [0x27:1]=0
0x000066c7      a802           test al, 2                              ; ../coreutils-8.31/lib/vasnprintf.c:4779
0x000066c9      7407           je 0x66d2
0x000066cb      c6032d         mov byte [rbx], 0x2d                    ; ../coreutils-8.31/lib/vasnprintf.c:4780 ; '-'
                                                                       ; [0x2d:1]=0
0x000066ce      4883c301       add rbx, 1
0x000066d2      a804           test al, 4                              ; ../coreutils-8.31/lib/vasnprintf.c:4781
0x000066d4      7407           je 0x66dd
0x000066d6      c6032b         mov byte [rbx], 0x2b                    ; ../coreutils-8.31/lib/vasnprintf.c:4782 ; '+'
                                                                       ; [0x2b:1]=0
0x000066d9      4883c301       add rbx, 1
0x000066dd      a808           test al, 8                              ; ../coreutils-8.31/lib/vasnprintf.c:4783
0x000066df      7407           je 0x66e8
0x000066e1      c60320         mov byte [rbx], 0x20                    ; ../coreutils-8.31/lib/vasnprintf.c:4784 ; [0x20:1]=64 ; "@"
0x000066e4      4883c301       add rbx, 1
0x000066e8      a810           test al, 0x10                           ; ../coreutils-8.31/lib/vasnprintf.c:4785
0x000066ea      7407           je 0x66f3
0x000066ec      c60323         mov byte [rbx], 0x23                    ; ../coreutils-8.31/lib/vasnprintf.c:4786 ; '#'
                                                                       ; [0x23:1]=0
0x000066ef      4883c301       add rbx, 1
0x000066f3      a840           test al, 0x40                           ; ../coreutils-8.31/lib/vasnprintf.c:4788 ; segment.PHDR
0x000066f5      7407           je 0x66fe
0x000066f7      c60349         mov byte [rbx], 0x49                    ; ../coreutils-8.31/lib/vasnprintf.c:4789 ; 'I'
                                                                       ; [0x49:1]=0
0x000066fa      4883c301       add rbx, 1
0x000066fe      a820           test al, 0x20                           ; ../coreutils-8.31/lib/vasnprintf.c:4793 ; "@"
0x00006700      7407           je 0x6709
0x00006702      c60330         mov byte [rbx], 0x30                    ; ../coreutils-8.31/lib/vasnprintf.c:4794 ; '0'
                                                                       ; [0x30:1]=0
0x00006705      4883c301       add rbx, 1
0x00006709      498b7518       mov rsi, qword [r13 + 0x18]             ; ../coreutils-8.31/lib/vasnprintf.c:4795
0x0000670d      498b5520       mov rdx, qword [r13 + 0x20]
0x00006711      4839d6         cmp rsi, rdx
0x00006714      7430           je 0x6746
0x00006716      4889d1         mov rcx, rdx                            ; ../coreutils-8.31/lib/vasnprintf.c:4797
0x00006719      4889df         mov rdi, rbx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000671c      4c898520fcff.  mov qword [rbp - 0x3e0], r8
0x00006723      4829f1         sub rcx, rsi                            ; ../coreutils-8.31/lib/vasnprintf.c:4797
0x00006726      4889ca         mov rdx, rcx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00006729      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x00006730      e8cbb2ffff     call sym.imp.memcpy
0x00006735      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:4803
0x0000673c      4c8b8520fcff.  mov r8, qword [rbp - 0x3e0]
0x00006743      4801cb         add rbx, rcx
0x00006746      498b7530       mov rsi, qword [r13 + 0x30]             ; ../coreutils-8.31/lib/vasnprintf.c:4816
0x0000674a      498b5538       mov rdx, qword [r13 + 0x38]
0x0000674e      4839d6         cmp rsi, rdx
0x00006751      7430           je 0x6783
0x00006753      4889d1         mov rcx, rdx                            ; ../coreutils-8.31/lib/vasnprintf.c:4818
0x00006756      4889df         mov rdi, rbx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00006759      4c898520fcff.  mov qword [rbp - 0x3e0], r8
0x00006760      4829f1         sub rcx, rsi                            ; ../coreutils-8.31/lib/vasnprintf.c:4818
0x00006763      4889ca         mov rdx, rcx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00006766      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x0000676d      e88eb2ffff     call sym.imp.memcpy
0x00006772      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:4824
0x00006779      4c8b8520fcff.  mov r8, qword [rbp - 0x3e0]
0x00006780      4801cb         add rbx, rcx
0x00006783      8bbd30fcffff   mov edi, dword [rbp - 0x3d0]
0x00006789      83ff10         cmp edi, 0x10
0x0000678c      772d           ja 0x67bb
0x0000678e      b801000000     mov eax, 1
0x00006793      89f9           mov ecx, edi
0x00006795      48d3e0         shl rax, cl
0x00006798      a980410100     test eax, 0x14180
0x0000679d      7515           jne 0x67b4
0x0000679f      f6c410         test ah, 0x10
0x000067a2      0f8558090000   jne 0x7100
0x000067a8      f6c406         test ah, 6
0x000067ab      740e           je 0x67bb
0x000067ad      c6036c         mov byte [rbx], 0x6c                    ; ../coreutils-8.31/lib/vasnprintf.c:4847 ; 'l'
                                                                       ; [0x6c:1]=0
0x000067b0      4883c301       add rbx, 1
0x000067b4      c6036c         mov byte [rbx], 0x6c                    ; ../coreutils-8.31/lib/vasnprintf.c:4859 ; 'l'
                                                                       ; [0x6c:1]=0
0x000067b7      4883c301       add rbx, 1
0x000067bb      410fb64548     movzx eax, byte [r13 + 0x48]            ; ../coreutils-8.31/lib/vasnprintf.c:4872
0x000067c0      c6430100       mov byte [rbx + 1], 0                   ; ../coreutils-8.31/lib/vasnprintf.c:4922
0x000067c4      8803           mov byte [rbx], al                      ; ../coreutils-8.31/lib/vasnprintf.c:4872
0x000067c6      498b4528       mov rax, qword [r13 + 0x28]             ; ../coreutils-8.31/lib/vasnprintf.c:4930
0x000067ca      4883f8ff       cmp rax, 0xffffffffffffffff
0x000067ce      0f842c070000   je 0x6f00
0x000067d4      48c1e005       shl rax, 5                              ; ../coreutils-8.31/lib/vasnprintf.c:4932
0x000067d8      4c01c0         add rax, r8
0x000067db      833805         cmp dword [rax], 5
0x000067de      0f85e20a0000   jne 0x72c6
0x000067e4      8b4010         mov eax, dword [rax + 0x10]             ; ../coreutils-8.31/lib/vasnprintf.c:4934
0x000067e7      c78520fcffff.  mov dword [rbp - 0x3e0], 1
0x000067f1      898548fcffff   mov dword [rbp - 0x3b8], eax
0x000067f7      498b4540       mov rax, qword [r13 + 0x40]             ; ../coreutils-8.31/lib/vasnprintf.c:4936
0x000067fb      4883f8ff       cmp rax, 0xffffffffffffffff
0x000067ff      742b           je 0x682c
0x00006801      48c1e005       shl rax, 5                              ; ../coreutils-8.31/lib/vasnprintf.c:4938
0x00006805      4901c0         add r8, rax
0x00006808      41833805       cmp dword [r8], 5
0x0000680c      0f85b40a0000   jne 0x72c6
0x00006812      8b8520fcffff   mov eax, dword [rbp - 0x3e0]            ; ../coreutils-8.31/lib/vasnprintf.c:4940
0x00006818      418b5010       mov edx, dword [r8 + 0x10]
0x0000681c      89948548fcff.  mov dword [rbp + rax*4 - 0x3b8], edx
0x00006823      8d4001         lea eax, [rax + 1]
0x00006826      898520fcffff   mov dword [rbp - 0x3e0], eax
0x0000682c      4c89f0         mov rax, r14
0x0000682f      31d2           xor edx, edx
0x00006831      4883c002       add rax, 2
0x00006835      0f82610c0000   jb 0x749c
0x0000683b      4939c4         cmp r12, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:4952
0x0000683e      734b           jae 0x688b
0x00006840      4d85e4         test r12, r12
0x00006843      0f851f080000   jne 0x7068
0x00006849      4883f80c       cmp rax, 0xc
0x0000684d      0f872d080000   ja 0x7080
0x00006853      41bc0c000000   mov r12d, 0xc
0x00006859      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00006860      0f94c2         sete dl
0x00006863      4d85ff         test r15, r15
0x00006866      0f8444080000   je 0x70b0
0x0000686c      84d2           test dl, dl
0x0000686e      0f853c080000   jne 0x70b0
0x00006874      4c89e6         mov rsi, r12
0x00006877      4c89ff         mov rdi, r15
0x0000687a      e821b2ffff     call sym.imp.realloc
0x0000687f      4885c0         test rax, rax
0x00006882      0f847dfcffff   je 0x6505
0x00006888      4989c7         mov r15, rax
0x0000688b      43c6043700     mov byte [r15 + r14], 0                 ; ../coreutils-8.31/lib/vasnprintf.c:4957
0x00006890      e8abafffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/vasnprintf.c:4960
0x00006895      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x0000689c      8b00           mov eax, dword [rax]
0x0000689e      48899d08fcff.  mov qword [rbp - 0x3f8], rbx
0x000068a5      8985dcfbffff   mov dword [rbp - 0x424], eax
0x000068ab      0f1f440000     nop dword [rax + rax]
0x000068b0      488b8538fcff.  mov rax, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:5015
0x000068b7      4c89e3         mov rbx, r12                            ; ../coreutils-8.31/lib/vasnprintf.c:4968
0x000068ba      41baffffff7f   mov r10d, 0x7fffffff
0x000068c0      4c29f3         sub rbx, r14
0x000068c3      c78544fcffff.  mov dword [rbp - 0x3bc], 0xffffffff     ; ../coreutils-8.31/lib/vasnprintf.c:4964 ; -1
0x000068cd      4881fbffffff.  cmp rbx, 0x7fffffff
0x000068d4      c70000000000   mov dword [rax], 0                      ; ../coreutils-8.31/lib/vasnprintf.c:5015
0x000068da      8b8530fcffff   mov eax, dword [rbp - 0x3d0]            ; ../coreutils-8.31/lib/vasnprintf.c:5016
0x000068e0      4c0f46d3       cmovbe r10, rbx
0x000068e4      83f811         cmp eax, 0x11
0x000068e7      0f87d9090000   ja 0x72c6
0x000068ed      488d35942c00.  lea rsi, [0x00009588]
0x000068f4      48630486       movsxd rax, dword [rsi + rax*4]
0x000068f8      4801f0         add rax, rsi
0x000068fb      ffe0           jmp rax
0x000068fd      0f1f00         nop dword [rax]
0x00006900      498b4550       mov rax, qword [r13 + 0x50]
0x00006904      4b8d3c37       lea rdi, [r15 + r14]
0x00006908      48c1e005       shl rax, 5
0x0000690c      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00006913      4c8b4810       mov r9, qword [rax + 0x10]
0x00006917      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x0000691d      83f801         cmp eax, 1
0x00006920      0f84c2040000   je 0x6de8
0x00006926      83f802         cmp eax, 2
0x00006929      0f84a1040000   je 0x6dd0
0x0000692f      4883ec08       sub rsp, 8
0x00006933      ffb510fcffff   push qword [rbp - 0x3f0]
0x00006939      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x00006940      4c89d6         mov rsi, r10                            ; ../coreutils-8.31/lib/vasnprintf.c:5007
0x00006943      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x0000694a      ba01000000     mov edx, 1
0x0000694f      31c0           xor eax, eax
0x00006951      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x00006958      e8a3aeffff     call sym.imp.__snprintf_chk
0x0000695d      5e             pop rsi
0x0000695e      5f             pop rdi
0x0000695f      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x00006966      8b8d44fcffff   mov ecx, dword [rbp - 0x3bc]
0x0000696c      85c9           test ecx, ecx
0x0000696e      0f8838010000   js 0x6aac
0x00006974      4863d1         movsxd rdx, ecx
0x00006977      4c39d2         cmp rdx, r10
0x0000697a      730e           jae 0x698a
0x0000697c      4c01fa         add rdx, r15
0x0000697f      42803c3200     cmp byte [rdx + r14], 0
0x00006984      0f853c090000   jne 0x72c6
0x0000698a      39c1           cmp ecx, eax
0x0000698c      7d08           jge 0x6996
0x0000698e      898544fcffff   mov dword [rbp - 0x3bc], eax
0x00006994      89c1           mov ecx, eax
0x00006996      8d4101         lea eax, [rcx + 1]
0x00006999      4c39d0         cmp rax, r10
0x0000699c      0f822e080000   jb 0x71d0
0x000069a2      4881fbfeffff.  cmp rbx, 0x7ffffffe
0x000069a9      0f8741080000   ja 0x71f0
0x000069af      4b8d3424       lea rsi, [r12 + r12]
0x000069b3      8d5102         lea edx, [rcx + 2]
0x000069b6      4d85e4         test r12, r12
0x000069b9      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x000069c0      480f49c6       cmovns rax, rsi
0x000069c4      4c01f2         add rdx, r14
0x000069c7      0f82bb0a0000   jb 0x7488
0x000069cd      4839d0         cmp rax, rdx
0x000069d0      480f42c2       cmovb rax, rdx
0x000069d4      4939c4         cmp r12, rax
0x000069d7      0f83d3feffff   jae 0x68b0
0x000069dd      4d85e4         test r12, r12
0x000069e0      0f882bfbffff   js 0x6511
0x000069e6      4839c6         cmp rsi, rax
0x000069e9      4989f4         mov r12, rsi
0x000069ec      730d           jae 0x69fb
0x000069ee      4883f8ff       cmp rax, 0xffffffffffffffff
0x000069f2      0f8419fbffff   je 0x6511
0x000069f8      4989c4         mov r12, rax
0x000069fb      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00006a02      0f94c3         sete bl
0x00006a05      4d85ff         test r15, r15
0x00006a08      0f8482030000   je 0x6d90
0x00006a0e      84db           test bl, bl
0x00006a10      0f857a030000   jne 0x6d90
0x00006a16      4c89e6         mov rsi, r12
0x00006a19      4c89ff         mov rdi, r15
0x00006a1c      e87fb0ffff     call sym.imp.realloc
0x00006a21      4885c0         test rax, rax
0x00006a24      0f84e7faffff   je 0x6511
0x00006a2a      4989c7         mov r15, rax
0x00006a2d      e97efeffff     jmp 0x68b0                              ; stdio2.h:-211
0x00006a32      660f1f440000   nop word [rax + rax]
0x00006a38      498b4550       mov rax, qword [r13 + 0x50]
0x00006a3c      4b8d3c37       lea rdi, [r15 + r14]
0x00006a40      48c1e005       shl rax, 5
0x00006a44      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00006a4b      448b4810       mov r9d, dword [rax + 0x10]
0x00006a4f      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00006a55      83f801         cmp eax, 1
0x00006a58      0f8432020000   je 0x6c90
0x00006a5e      83f802         cmp eax, 2
0x00006a61      0f8471020000   je 0x6cd8
0x00006a67      4883ec08       sub rsp, 8
0x00006a6b      ffb510fcffff   push qword [rbp - 0x3f0]
0x00006a71      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x00006a78      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x00006a7f      ba01000000     mov edx, 1
0x00006a84      4c89d6         mov rsi, r10
0x00006a87      31c0           xor eax, eax
0x00006a89      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x00006a90      e86badffff     call sym.imp.__snprintf_chk
0x00006a95      5a             pop rdx
0x00006a96      59             pop rcx
0x00006a97      8b8d44fcffff   mov ecx, dword [rbp - 0x3bc]
0x00006a9d      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]            ; ../coreutils-8.31/lib/vasnprintf.c:4942
0x00006aa4      85c9           test ecx, ecx
0x00006aa6      0f89c8feffff   jns 0x6974
0x00006aac      488bbd08fcff.  mov rdi, qword [rbp - 0x3f8]
0x00006ab3      807f0100       cmp byte [rdi + 1], 0
0x00006ab7      0f853b030000   jne 0x6df8
0x00006abd      85c0           test eax, eax
0x00006abf      0f89c9feffff   jns 0x698e
0x00006ac5      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x00006acc      8b18           mov ebx, dword [rax]
0x00006ace      85db           test ebx, ebx
0x00006ad0      751e           jne 0x6af0
0x00006ad2      410fb64548     movzx eax, byte [r13 + 0x48]
0x00006ad7      bb16000000     mov ebx, 0x16
0x00006adc      83e0ef         and eax, 0xffffffef                     ; ../coreutils-8.31/lib/vasnprintf.c:4951 ; 4294967279
0x00006adf      3c63           cmp al, 0x63
0x00006ae1      b854000000     mov eax, 0x54                           ; 'T'
0x00006ae6      0f44d8         cmove ebx, eax
0x00006ae9      0f1f80000000.  nop dword [rax]
0x00006af0      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00006af7      7409           je 0x6b02
0x00006af9      4d85ff         test r15, r15
0x00006afc      0f85aa070000   jne 0x72ac
0x00006b02      488b85e0fbff.  mov rax, qword [rbp - 0x420]
0x00006b09      4885c0         test rax, rax
0x00006b0c      7408           je 0x6b16
0x00006b0e      4889c7         mov rdi, rax
0x00006b11      e8faacffff     call sym.imp.free
0x00006b16      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x00006b1d      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x00006b24      4883c020       add rax, 0x20                           ; "@"
0x00006b28      4839c7         cmp rdi, rax
0x00006b2b      7405           je 0x6b32
0x00006b2d      e8deacffff     call sym.imp.free
0x00006b32      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x00006b39      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x00006b40      4883c010       add rax, 0x10
0x00006b44      4839c7         cmp rdi, rax
0x00006b47      7405           je 0x6b4e
0x00006b49      e8c2acffff     call sym.imp.free
0x00006b4e      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x00006b55      4531ff         xor r15d, r15d
0x00006b58      8918           mov dword [rax], ebx
0x00006b5a      e920faffff     jmp 0x657f
0x00006b5f      90             nop
0x00006b60      498b4550       mov rax, qword [r13 + 0x50]
0x00006b64      4b8d3c37       lea rdi, [r15 + r14]
0x00006b68      48c1e005       shl rax, 5
0x00006b6c      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00006b73      db6810         fld xword [rax + 0x10]
0x00006b76      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00006b7c      83f801         cmp eax, 1
0x00006b7f      0f842b060000   je 0x71b0
0x00006b85      83f802         cmp eax, 2
0x00006b88      0f85c2040000   jne 0x7050
0x00006b8e      8b854cfcffff   mov eax, dword [rbp - 0x3b4]
0x00006b94      4883ec08       sub rsp, 8
0x00006b98      ffb510fcffff   push qword [rbp - 0x3f0]                ; ../coreutils-8.31/lib/vasnprintf.c:4814
0x00006b9e      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]
0x00006ba5      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x00006bac      4c89d6         mov rsi, r10
0x00006baf      4883ec18       sub rsp, 0x18
0x00006bb3      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x00006bba      ba01000000     mov edx, 1
0x00006bbf      db7c2408       fstp xword [rsp + 8]
0x00006bc3      50             push rax
0x00006bc4      31c0           xor eax, eax
0x00006bc6      4c8995d0fbff.  mov qword [rbp - 0x430], r10            ; ../coreutils-8.31/lib/vasnprintf.c:4808
0x00006bcd      e82eacffff     call sym.imp.__snprintf_chk
0x00006bd2      4883c430       add rsp, 0x30
0x00006bd6      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x00006bdd      e984fdffff     jmp 0x6966
0x00006be2      660f1f440000   nop word [rax + rax]
0x00006be8      498b4550       mov rax, qword [r13 + 0x50]
0x00006bec      4b8d3c37       lea rdi, [r15 + r14]
0x00006bf0      48c1e005       shl rax, 5
0x00006bf4      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00006bfb      f20f104010     movsd xmm0, qword [rax + 0x10]
0x00006c00      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00006c06      83f801         cmp eax, 1
0x00006c09      0f8491050000   je 0x71a0
0x00006c0f      83f802         cmp eax, 2
0x00006c12      0f85f8030000   jne 0x7010
0x00006c18      8b854cfcffff   mov eax, dword [rbp - 0x3b4]
0x00006c1e      ffb510fcffff   push qword [rbp - 0x3f0]
0x00006c24      50             push rax
0x00006c25      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]
0x00006c2c      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x00006c33      4c89d6         mov rsi, r10
0x00006c36      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x00006c3d      ba01000000     mov edx, 1
0x00006c42      b801000000     mov eax, 1
0x00006c47      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x00006c4e      e8adabffff     call sym.imp.__snprintf_chk
0x00006c53      4158           pop r8
0x00006c55      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x00006c5c      4159           pop r9
0x00006c5e      e903fdffff     jmp 0x6966
0x00006c63      0f1f440000     nop dword [rax + rax]
0x00006c68      498b4550       mov rax, qword [r13 + 0x50]
0x00006c6c      4b8d3c37       lea rdi, [r15 + r14]
0x00006c70      48c1e005       shl rax, 5
0x00006c74      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00006c7b      440fb74810     movzx r9d, word [rax + 0x10]
0x00006c80      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00006c86      83f801         cmp eax, 1                              ; ../coreutils-8.31/lib/vasnprintf.c:4758
0x00006c89      0f85cffdffff   jne 0x6a5e
0x00006c8f      90             nop
0x00006c90      ffb510fcffff   push qword [rbp - 0x3f0]
0x00006c96      4151           push r9
0x00006c98      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]
0x00006c9f      e9cdfdffff     jmp 0x6a71
0x00006ca4      0f1f4000       nop dword [rax]
0x00006ca8      498b4550       mov rax, qword [r13 + 0x50]
0x00006cac      4b8d3c37       lea rdi, [r15 + r14]
0x00006cb0      48c1e005       shl rax, 5
0x00006cb4      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00006cbb      440fbf4810     movsx r9d, word [rax + 0x10]
0x00006cc0      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00006cc6      83f801         cmp eax, 1
0x00006cc9      74c5           je 0x6c90
0x00006ccb      83f802         cmp eax, 2
0x00006cce      0f8593fdffff   jne 0x6a67
0x00006cd4      0f1f4000       nop dword [rax]
0x00006cd8      4883ec08       sub rsp, 8
0x00006cdc      ffb510fcffff   push qword [rbp - 0x3f0]
0x00006ce2      4151           push r9
0x00006ce4      8b854cfcffff   mov eax, dword [rbp - 0x3b4]
0x00006cea      50             push rax
0x00006ceb      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]            ; ../coreutils-8.31/lib/vasnprintf.c:4623
0x00006cf2      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x00006cf9      4c89d6         mov rsi, r10
0x00006cfc      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x00006d03      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/vasnprintf.c:4624
0x00006d08      31c0           xor eax, eax
0x00006d0a      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x00006d11      e8eaaaffff     call sym.imp.__snprintf_chk
0x00006d16      4883c420       add rsp, 0x20
0x00006d1a      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x00006d21      e940fcffff     jmp 0x6966
0x00006d26      662e0f1f8400.  nop word cs:[rax + rax]
0x00006d30      498b4550       mov rax, qword [r13 + 0x50]
0x00006d34      4b8d3c37       lea rdi, [r15 + r14]
0x00006d38      48c1e005       shl rax, 5
0x00006d3c      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00006d43      440fb64810     movzx r9d, byte [rax + 0x10]
0x00006d48      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00006d4e      83f801         cmp eax, 1
0x00006d51      0f8507fdffff   jne 0x6a5e
0x00006d57      e934ffffff     jmp 0x6c90
0x00006d5c      0f1f4000       nop dword [rax]
0x00006d60      498b4550       mov rax, qword [r13 + 0x50]
0x00006d64      4b8d3c37       lea rdi, [r15 + r14]
0x00006d68      48c1e005       shl rax, 5
0x00006d6c      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00006d73      440fbe4810     movsx r9d, byte [rax + 0x10]
0x00006d78      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00006d7e      83f801         cmp eax, 1
0x00006d81      0f85d7fcffff   jne 0x6a5e
0x00006d87      e904ffffff     jmp 0x6c90
0x00006d8c      0f1f4000       nop dword [rax]
0x00006d90      4c89e7         mov rdi, r12
0x00006d93      e8b8acffff     call sym.imp.malloc
0x00006d98      4885c0         test rax, rax
0x00006d9b      4889c1         mov rcx, rax
0x00006d9e      0f846df7ffff   je 0x6511
0x00006da4      4d85f6         test r14, r14
0x00006da7      0f84b3000000   je 0x6e60
0x00006dad      84db           test bl, bl
0x00006daf      0f84ab000000   je 0x6e60
0x00006db5      4c89fe         mov rsi, r15
0x00006db8      4c89f2         mov rdx, r14
0x00006dbb      4889c7         mov rdi, rax
0x00006dbe      e83dacffff     call sym.imp.memcpy
0x00006dc3      4989c7         mov r15, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:1511
0x00006dc6      e9e5faffff     jmp 0x68b0
0x00006dcb      0f1f440000     nop dword [rax + rax]
0x00006dd0      4883ec08       sub rsp, 8
0x00006dd4      ffb510fcffff   push qword [rbp - 0x3f0]                ; ../coreutils-8.31/lib/xsize.h:-338
0x00006dda      4151           push r9
0x00006ddc      e903ffffff     jmp 0x6ce4
0x00006de1      0f1f80000000.  nop dword [rax]
0x00006de8      ffb510fcffff   push qword [rbp - 0x3f0]
0x00006dee      4151           push r9
0x00006df0      e9a3feffff     jmp 0x6c98
0x00006df5      0f1f00         nop dword [rax]
0x00006df8      c6470100       mov byte [rdi + 1], 0
0x00006dfc      e9affaffff     jmp 0x68b0
0x00006e01      0f1f80000000.  nop dword [rax]
0x00006e08      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006e0c      0f85b4040000   jne 0x72c6
0x00006e12      4c89f0         mov rax, r14
0x00006e15      4883c001       add rax, 1
0x00006e19      4889c3         mov rbx, rax
0x00006e1c      0f8386000000   jae 0x6ea8
0x00006e22      4983fcff       cmp r12, 0xffffffffffffffff
0x00006e26      0f85d9f6ffff   jne 0x6505
0x00006e2c      4c89e3         mov rbx, r12
0x00006e2f      43c6043725     mov byte [r15 + r14], 0x25              ; '%'
                                                                       ; [0x25:1]=0
0x00006e34      4d8b4508       mov r8, qword [r13 + 8]
0x00006e38      4983c558       add r13, 0x58
0x00006e3c      498b4d00       mov rcx, qword [r13]
0x00006e40      48838500fcff.  add qword [rbp - 0x400], 1
0x00006e48      4c39c1         cmp rcx, r8
0x00006e4b      0f8598f6ffff   jne 0x64e9
0x00006e51      4989de         mov r14, rbx
0x00006e54      e9faf7ffff     jmp 0x6653                              ; ../coreutils-8.31/lib/vasnprintf.c:1525
0x00006e59      0f1f80000000.  nop dword [rax]
0x00006e60      4989cf         mov r15, rcx
0x00006e63      e948faffff     jmp 0x68b0                              ; ../coreutils-8.31/lib/vasnprintf.c:1514
0x00006e68      e8d3a9ffff     call sym.imp.__errno_location
0x00006e6d      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x00006e74      e9bef6ffff     jmp 0x6537
0x00006e79      0f1f80000000.  nop dword [rax]
0x00006e80      89fa           mov edx, edi
0x00006e82      83ea12         sub edx, 0x12
0x00006e85      83fa04         cmp edx, 4
0x00006e88      0f8738040000   ja 0x72c6
0x00006e8e      488d3d3b2700.  lea rdi, [0x000095d0]
0x00006e95      488b4010       mov rax, qword [rax + 0x10]
0x00006e99      48631497       movsxd rdx, dword [rdi + rdx*4]
0x00006e9d      4801fa         add rdx, rdi
0x00006ea0      ffe2           jmp rdx
0x00006ea2      660f1f440000   nop word [rax + rax]
0x00006ea8      4939c4         cmp r12, rax
0x00006eab      7382           jae 0x6e2f
0x00006ead      4d85e4         test r12, r12
0x00006eb0      0f85ca030000   jne 0x7280
0x00006eb6      4883f80c       cmp rax, 0xc
0x00006eba      0f87d2030000   ja 0x7292
0x00006ec0      41bc0c000000   mov r12d, 0xc
0x00006ec6      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00006ecd      0f94c2         sete dl
0x00006ed0      4d85ff         test r15, r15
0x00006ed3      0f8467020000   je 0x7140
0x00006ed9      84d2           test dl, dl
0x00006edb      0f855f020000   jne 0x7140
0x00006ee1      4c89e6         mov rsi, r12
0x00006ee4      4c89ff         mov rdi, r15
0x00006ee7      e8b4abffff     call sym.imp.realloc                    ; ../coreutils-8.31/lib/vasnprintf.c:1487
0x00006eec      4885c0         test rax, rax
0x00006eef      0f84f6000000   je 0x6feb
0x00006ef5      4989c7         mov r15, rax
0x00006ef8      e932ffffff     jmp 0x6e2f
0x00006efd      0f1f00         nop dword [rax]
0x00006f00      c78520fcffff.  mov dword [rbp - 0x3e0], 0
0x00006f0a      e9e8f8ffff     jmp 0x67f7
0x00006f0f      90             nop
0x00006f10      0f88eff5ffff   js 0x6505
0x00006f16      4d01e4         add r12, r12
0x00006f19      4939c4         cmp r12, rax
0x00006f1c      0f83d4f6ffff   jae 0x65f6
0x00006f22      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006f26      0f84d9f5ffff   je 0x6505
0x00006f2c      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00006f33      4989c4         mov r12, rax
0x00006f36      0f94c2         sete dl
0x00006f39      4d85ff         test r15, r15
0x00006f3c      0f85c7f6ffff   jne 0x6609
0x00006f42      660f1f440000   nop word [rax + rax]
0x00006f48      4c89e7         mov rdi, r12
0x00006f4b      4c898520fcff.  mov qword [rbp - 0x3e0], r8
0x00006f52      889530fcffff   mov byte [rbp - 0x3d0], dl
0x00006f58      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x00006f5f      e8ecaaffff     call sym.imp.malloc
0x00006f64      4885c0         test rax, rax
0x00006f67      4989c1         mov r9, rax
0x00006f6a      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]
0x00006f71      0fb69530fcff.  movzx edx, byte [rbp - 0x3d0]
0x00006f78      4c8b8520fcff.  mov r8, qword [rbp - 0x3e0]
0x00006f7f      0f8480f5ffff   je 0x6505
0x00006f85      4885db         test rbx, rbx
0x00006f88      0f8402020000   je 0x7190
0x00006f8e      84d2           test dl, dl
0x00006f90      0f84fa010000   je 0x7190
0x00006f96      4c89fe         mov rsi, r15
0x00006f99      4889da         mov rdx, rbx
0x00006f9c      4889c7         mov rdi, rax
0x00006f9f      4c898530fcff.  mov qword [rbp - 0x3d0], r8
0x00006fa6      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x00006fad      e84eaaffff     call sym.imp.memcpy
0x00006fb2      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]
0x00006fb9      4989c7         mov r15, rax
0x00006fbc      4c8b8530fcff.  mov r8, qword [rbp - 0x3d0]
0x00006fc3      e97cf6ffff     jmp 0x6644
0x00006fc8      0f1f84000000.  nop dword [rax + rax]
0x00006fd0      4d89e6         mov r14, r12
0x00006fd3      e96cf6ffff     jmp 0x6644
0x00006fd8      0f1f84000000.  nop dword [rax + rax]
0x00006fe0      4c8930         mov qword [rax], r14
0x00006fe3      4c89f3         mov rbx, r14
0x00006fe6      e949feffff     jmp 0x6e34
0x00006feb      e850a8ffff     call sym.imp.__errno_location
0x00006ff0      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x00006ff7      660f1f840000.  nop word [rax + rax]
0x00007000      4c89ff         mov rdi, r15
0x00007003      e808a8ffff     call sym.imp.free
0x00007008      e916f5ffff     jmp 0x6523
0x0000700d      0f1f00         nop dword [rax]
0x00007010      4c8b8d10fcff.  mov r9, qword [rbp - 0x3f0]
0x00007017      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x0000701e      4c89d6         mov rsi, r10
0x00007021      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x00007028      ba01000000     mov edx, 1
0x0000702d      b801000000     mov eax, 1
0x00007032      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x00007039      e8c2a7ffff     call sym.imp.__snprintf_chk
0x0000703e      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x00007045      e91cf9ffff     jmp 0x6966
0x0000704a      660f1f440000   nop word [rax + rax]
0x00007050      4883ec10       sub rsp, 0x10
0x00007054      4c8b8d10fcff.  mov r9, qword [rbp - 0x3f0]
0x0000705b      db3c24         fstp xword [rsp]
0x0000705e      e9d6f8ffff     jmp 0x6939
0x00007063      0f1f440000     nop dword [rax + rax]
0x00007068      0f8897f4ffff   js 0x6505
0x0000706e      4d01e4         add r12, r12
0x00007071      4939c4         cmp r12, rax
0x00007074      0f83dff7ffff   jae 0x6859
0x0000707a      660f1f440000   nop word [rax + rax]
0x00007080      4885d2         test rdx, rdx
0x00007083      0f857cf4ffff   jne 0x6505
0x00007089      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000708d      0f8472f4ffff   je 0x6505
0x00007093      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x0000709a      4989c4         mov r12, rax
0x0000709d      0f94c2         sete dl                                 ; string_fortified.h:-369
0x000070a0      4d85ff         test r15, r15
0x000070a3      0f85c3f7ffff   jne 0x686c
0x000070a9      0f1f80000000.  nop dword [rax]
0x000070b0      4c89e7         mov rdi, r12
0x000070b3      889538fcffff   mov byte [rbp - 0x3c8], dl
0x000070b9      e892a9ffff     call sym.imp.malloc
0x000070be      4885c0         test rax, rax
0x000070c1      4889c1         mov rcx, rax
0x000070c4      0fb69538fcff.  movzx edx, byte [rbp - 0x3c8]
0x000070cb      0f8434f4ffff   je 0x6505                               ; ../coreutils-8.31/lib/vasnprintf.c:1528
0x000070d1      4d85f6         test r14, r14
0x000070d4      0f8496010000   je 0x7270
0x000070da      84d2           test dl, dl
0x000070dc      0f848e010000   je 0x7270
0x000070e2      4c89fe         mov rsi, r15
0x000070e5      4c89f2         mov rdx, r14
0x000070e8      4889c7         mov rdi, rax
0x000070eb      e810a9ffff     call sym.imp.memcpy                     ; ../coreutils-8.31/lib/vasnprintf.c:1531
0x000070f0      4989c7         mov r15, rax
0x000070f3      e993f7ffff     jmp 0x688b
0x000070f8      0f1f84000000.  nop dword [rax + rax]
0x00007100      c6034c         mov byte [rbx], 0x4c                    ; 'L'
                                                                       ; [0x4c:1]=0
0x00007103      4883c301       add rbx, 1
0x00007107      e9aff6ffff     jmp 0x67bb
0x0000710c      0f1f4000       nop dword [rax]
0x00007110      448830         mov byte [rax], r14b
0x00007113      4c89f3         mov rbx, r14
0x00007116      e919fdffff     jmp 0x6e34
0x0000711b      0f1f440000     nop dword [rax + rax]
0x00007120      448930         mov dword [rax], r14d
0x00007123      4c89f3         mov rbx, r14
0x00007126      e909fdffff     jmp 0x6e34
0x0000712b      0f1f440000     nop dword [rax + rax]
0x00007130      66448930       mov word [rax], r14w
0x00007134      4c89f3         mov rbx, r14
0x00007137      e9f8fcffff     jmp 0x6e34
0x0000713c      0f1f4000       nop dword [rax]
0x00007140      4c89e7         mov rdi, r12
0x00007143      889538fcffff   mov byte [rbp - 0x3c8], dl
0x00007149      e802a9ffff     call sym.imp.malloc
0x0000714e      4885c0         test rax, rax
0x00007151      4889c1         mov rcx, rax
0x00007154      0fb69538fcff.  movzx edx, byte [rbp - 0x3c8]
0x0000715b      0f84a4f3ffff   je 0x6505                               ; stdio2.h:-339
0x00007161      4d85f6         test r14, r14
0x00007164      0f843a010000   je 0x72a4
0x0000716a      84d2           test dl, dl
0x0000716c      0f8432010000   je 0x72a4
0x00007172      4c89fe         mov rsi, r15
0x00007175      4c89f2         mov rdx, r14
0x00007178      4889c7         mov rdi, rax
0x0000717b      e880a8ffff     call sym.imp.memcpy
0x00007180      4989c7         mov r15, rax
0x00007183      e9a7fcffff     jmp 0x6e2f
0x00007188      0f1f84000000.  nop dword [rax + rax]
0x00007190      4d89cf         mov r15, r9
0x00007193      e9acf4ffff     jmp 0x6644
0x00007198      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/vasnprintf.c:5157
0x000071a0      4883ec08       sub rsp, 8
0x000071a4      ffb510fcffff   push qword [rbp - 0x3f0]
0x000071aa      e976faffff     jmp 0x6c25
0x000071af      90             nop
0x000071b0      4883ec08       sub rsp, 8
0x000071b4      ffb510fcffff   push qword [rbp - 0x3f0]
0x000071ba      4883ec10       sub rsp, 0x10
0x000071be      db3c24         fstp xword [rsp]
0x000071c1      e925fbffff     jmp 0x6ceb
0x000071c6      662e0f1f8400.  nop word cs:[rax + rax]
0x000071d0      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x000071d7      8bbddcfbffff   mov edi, dword [rbp - 0x424]
0x000071dd      4863d9         movsxd rbx, ecx
0x000071e0      4c01f3         add rbx, r14
0x000071e3      8938           mov dword [rax], edi
0x000071e5      e94afcffff     jmp 0x6e34
0x000071ea      660f1f440000   nop word [rax + rax]
0x000071f0      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x000071f7      7409           je 0x7202
0x000071f9      4d85ff         test r15, r15
0x000071fc      0f85b7000000   jne 0x72b9
0x00007202      488b85e0fbff.  mov rax, qword [rbp - 0x420]
0x00007209      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasnprintf.c:5198
0x0000720c      7408           je 0x7216
0x0000720e      4889c7         mov rdi, rax
0x00007211      e8faa5ffff     call sym.imp.free
0x00007216      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x0000721d      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x00007224      4883c020       add rax, 0x20                           ; "@"
0x00007228      4839c7         cmp rdi, rax
0x0000722b      7405           je 0x7232
0x0000722d      e8dea5ffff     call sym.imp.free
0x00007232      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x00007239      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x00007240      4883c010       add rax, 0x10
0x00007244      4839c7         cmp rdi, rax
0x00007247      7405           je 0x724e
0x00007249      e8c2a5ffff     call sym.imp.free
0x0000724e      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x00007255      4531ff         xor r15d, r15d
0x00007258      c7004b000000   mov dword [rax], 0x4b                   ; 'K'
                                                                       ; [0x4b:4]=0
0x0000725e      e91cf3ffff     jmp 0x657f
0x00007263      0f1f440000     nop dword [rax + rax]
0x00007268      4531ff         xor r15d, r15d
0x0000726b      e90ff3ffff     jmp 0x657f
0x00007270      4989cf         mov r15, rcx
0x00007273      e913f6ffff     jmp 0x688b                              ; ../coreutils-8.31/lib/vasnprintf.c:1273
0x00007278      0f1f84000000.  nop dword [rax + rax]
0x00007280      0f887ff2ffff   js 0x6505
0x00007286      4d01e4         add r12, r12
0x00007289      4939c4         cmp r12, rax
0x0000728c      0f8334fcffff   jae 0x6ec6
0x00007292      4883f8ff       cmp rax, 0xffffffffffffffff
0x00007296      0f8469f2ffff   je 0x6505
0x0000729c      4989c4         mov r12, rax
0x0000729f      e922fcffff     jmp 0x6ec6
0x000072a4      4989cf         mov r15, rcx
0x000072a7      e983fbffff     jmp 0x6e2f
0x000072ac      4c89ff         mov rdi, r15
0x000072af      e85ca5ffff     call sym.imp.free
0x000072b4      e949f8ffff     jmp 0x6b02
0x000072b9      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/vasnprintf.c:1275
0x000072bc      e84fa5ffff     call sym.imp.free
0x000072c1      e93cffffff     jmp 0x7202
0x000072c6      e865a5ffff     call sym.imp.abort
0x000072cb      0f1f440000     nop dword [rax + rax]
0x000072d0      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x000072d7      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x000072de      4883c020       add rax, 0x20                           ; "@"
0x000072e2      4839c7         cmp rdi, rax
0x000072e5      7405           je 0x72ec
0x000072e7      e824a5ffff     call sym.imp.free
0x000072ec      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x000072f3      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x000072fa      4883c010       add rax, 0x10
0x000072fe      4839c7         cmp rdi, rax
0x00007301      7405           je 0x7308
0x00007303      e808a5ffff     call sym.imp.free
0x00007308      e833a5ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/vasnprintf.c:5040
0x0000730d      4531ff         xor r15d, r15d
0x00007310      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x1f400000
0x00007316      e964f2ffff     jmp 0x657f
0x0000731b      4c89f3         mov rbx, r14
0x0000731e      31c0           xor eax, eax
0x00007320      4883c301       add rbx, 1
0x00007324      0f8206010000   jb 0x7430
0x0000732a      4939dc         cmp r12, rbx
0x0000732d      734d           jae 0x737c
0x0000732f      4d85e4         test r12, r12
0x00007332      0f8531010000   jne 0x7469                              ; ../coreutils-8.31/lib/vasnprintf.c:5048
0x00007338      4883fb0c       cmp rbx, 0xc
0x0000733c      0f870c010000   ja 0x744e
0x00007342      41bc0c000000   mov r12d, 0xc
0x00007348      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x0000734f      410f94c5       sete r13b
0x00007353      4d85ff         test r15, r15
0x00007356      0f84a0000000   je 0x73fc
0x0000735c      4584ed         test r13b, r13b
0x0000735f      0f8597000000   jne 0x73fc
0x00007365      4c89e6         mov rsi, r12
0x00007368      4c89ff         mov rdi, r15
0x0000736b      e830a7ffff     call sym.imp.realloc
0x00007370      4885c0         test rax, rax
0x00007373      0f8472fcffff   je 0x6feb
0x00007379      4989c7         mov r15, rax
0x0000737c      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00007383      43c6043700     mov byte [r15 + r14], 0
0x00007388      7417           je 0x73a1
0x0000738a      4939dc         cmp r12, rbx
0x0000738d      7612           jbe 0x73a1
0x0000738f      4c89ff         mov rdi, r15
0x00007392      4889de         mov rsi, rbx
0x00007395      e806a7ffff     call sym.imp.realloc
0x0000739a      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasnprintf.c:5061
0x0000739d      4c0f45f8       cmovne r15, rax
0x000073a1      488b85e0fbff.  mov rax, qword [rbp - 0x420]
0x000073a8      4885c0         test rax, rax
0x000073ab      7408           je 0x73b5
0x000073ad      4889c7         mov rdi, rax
0x000073b0      e85ba4ffff     call sym.imp.free
0x000073b5      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x000073bc      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x000073c3      4883c020       add rax, 0x20                           ; "@"
0x000073c7      4839c7         cmp rdi, rax
0x000073ca      7405           je 0x73d1
0x000073cc      e83fa4ffff     call sym.imp.free
0x000073d1      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x000073d8      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x000073df      4883c010       add rax, 0x10
0x000073e3      4839c7         cmp rdi, rax
0x000073e6      7405           je 0x73ed
0x000073e8      e823a4ffff     call sym.imp.free
0x000073ed      488b85e8fbff.  mov rax, qword [rbp - 0x418]
0x000073f4      4c8930         mov qword [rax], r14
0x000073f7      e983f1ffff     jmp 0x657f
0x000073fc      4c89e7         mov rdi, r12
0x000073ff      e84ca6ffff     call sym.imp.malloc
0x00007404      4885c0         test rax, rax
0x00007407      4889c1         mov rcx, rax
0x0000740a      0f84f5f0ffff   je 0x6505
0x00007410      4d85f6         test r14, r14
0x00007413      746b           je 0x7480
0x00007415      4584ed         test r13b, r13b
0x00007418      7466           je 0x7480
0x0000741a      4c89fe         mov rsi, r15
0x0000741d      4c89f2         mov rdx, r14
0x00007420      4889c7         mov rdi, rax
0x00007423      e8d8a5ffff     call sym.imp.memcpy
0x00007428      4989c7         mov r15, rax
0x0000742b      e94cffffff     jmp 0x737c                              ; ../coreutils-8.31/lib/vasnprintf.c:4732
0x00007430      4983fcff       cmp r12, 0xffffffffffffffff
0x00007434      b801000000     mov eax, 1
0x00007439      0f843dffffff   je 0x737c
0x0000743f      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/vasnprintf.c:4421
0x00007442      0f84bdf0ffff   je 0x6505
0x00007448      0f88b7f0ffff   js 0x6505
0x0000744e      4885c0         test rax, rax
0x00007451      0f85aef0ffff   jne 0x6505
0x00007457      4883fbff       cmp rbx, 0xffffffffffffffff
0x0000745b      0f84a4f0ffff   je 0x6505
0x00007461      4989dc         mov r12, rbx
0x00007464      e9dffeffff     jmp 0x7348
0x00007469      0f8896f0ffff   js 0x6505
0x0000746f      4d01e4         add r12, r12
0x00007472      4939dc         cmp r12, rbx
0x00007475      0f83cdfeffff   jae 0x7348
0x0000747b      ebd1           jmp 0x744e
0x0000747d      0f1f00         nop dword [rax]
0x00007480      4989cf         mov r15, rcx
0x00007483      e9f4feffff     jmp 0x737c
0x00007488      4983fcff       cmp r12, 0xffffffffffffffff
0x0000748c      0f841ef4ffff   je 0x68b0
0x00007492      e97af0ffff     jmp 0x6511
0x00007497      e884a4ffff     call sym.imp.__stack_chk_fail
0x0000749c      4983fcff       cmp r12, 0xffffffffffffffff
0x000074a0      ba01000000     mov edx, 1
0x000074a5      0f84e0f3ffff   je 0x688b
0x000074ab      4d85e4         test r12, r12
0x000074ae      0f8451f0ffff   je 0x6505
0x000074b4      0f89c6fbffff   jns 0x7080
0x000074ba      e946f0ffff     jmp 0x6505
0x000074bf      90             nop
;-- printf_fetchargs:
0x000074c0      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/printf-args.c:37
0x000074c4      488b4608       mov rax, qword [rsi + 8]
0x000074c8      7463           je 0x752d
0x000074ca      4c8d051f2100.  lea r8, [0x000095f0]                    ; ../coreutils-8.31/lib/printf-args.c:42
0x000074d1      4c8d15782100.  lea r10, obj.wide_null_string.2696      ; 0x9650 ; U"(NULL)"
0x000074d8      4c8d0d052100.  lea r9, [0x000095e4]                    ; "(NULL)"
0x000074df      31c9           xor ecx, ecx
0x000074e1      0f1f80000000.  nop dword [rax]
0x000074e8      833816         cmp dword [rax], 0x16
0x000074eb      7743           ja 0x7530
0x000074ed      8b10           mov edx, dword [rax]
0x000074ef      49631490       movsxd rdx, dword [r8 + rdx*4]
0x000074f3      4c01c2         add rdx, r8
0x000074f6      ffe2           jmp rdx
0x000074f8      0f1f84000000.  nop dword [rax + rax]
0x00007500      488b5708       mov rdx, qword [rdi + 8]                ; stddef.h:38      && !defined(__need_wint_t))
0x00007504      4883c20f       add rdx, 0xf
0x00007508      4883e2f0       and rdx, 0xfffffffffffffff0
0x0000750c      4c8d5a10       lea r11, [rdx + 0x10]
0x00007510      4c895f08       mov qword [rdi + 8], r11
0x00007514      db2a           fld xword [rdx]
0x00007516      db7810         fstp xword [rax + 0x10]
0x00007519      0f1f80000000.  nop dword [rax]
0x00007520      4883c101       add rcx, 1
0x00007524      4883c020       add rax, 0x20                           ; stddef.h:-9 ; "@"
0x00007528      48390e         cmp qword [rsi], rcx
0x0000752b      77bb           ja 0x74e8
0x0000752d      31c0           xor eax, eax
0x0000752f      c3             ret
0x00007530      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00007535      c3             ret
0x00007536      448b1f         mov r11d, dword [rdi]
0x00007539      4183fb2f       cmp r11d, 0x2f
0x0000753d      0f8737010000   ja 0x767a
0x00007543      4489da         mov edx, r11d
0x00007546      48035710       add rdx, qword [rdi + 0x10]             ; stddef.h:-54
0x0000754a      4183c308       add r11d, 8
0x0000754e      44891f         mov dword [rdi], r11d
0x00007551      488b12         mov rdx, qword [rdx]
0x00007554      48895010       mov qword [rax + 0x10], rdx
0x00007558      ebc6           jmp 0x7520
0x0000755a      448b1f         mov r11d, dword [rdi]
0x0000755d      4183fb2f       cmp r11d, 0x2f
0x00007561      0f8735010000   ja 0x769c
0x00007567      4489da         mov edx, r11d
0x0000756a      48035710       add rdx, qword [rdi + 0x10]
0x0000756e      4183c308       add r11d, 8
0x00007572      44891f         mov dword [rdi], r11d
0x00007575      8b12           mov edx, dword [rdx]
0x00007577      895010         mov dword [rax + 0x10], edx
0x0000757a      eba4           jmp 0x7520
0x0000757c      448b1f         mov r11d, dword [rdi]
0x0000757f      4183fb2f       cmp r11d, 0x2f
0x00007583      0f8702010000   ja 0x768b
0x00007589      4489da         mov edx, r11d                           ; stddef.h:-47
0x0000758c      48035710       add rdx, qword [rdi + 0x10]
0x00007590      4183c308       add r11d, 8
0x00007594      44891f         mov dword [rdi], r11d
0x00007597      8b12           mov edx, dword [rdx]
0x00007599      885010         mov byte [rax + 0x10], dl
0x0000759c      eb82           jmp 0x7520
0x0000759e      448b1f         mov r11d, dword [rdi]
0x000075a1      4183fb2f       cmp r11d, 0x2f
0x000075a5      0f879f000000   ja 0x764a
0x000075ab      4489da         mov edx, r11d
0x000075ae      48035710       add rdx, qword [rdi + 0x10]
0x000075b2      4183c308       add r11d, 8
0x000075b6      44891f         mov dword [rdi], r11d
0x000075b9      8b12           mov edx, dword [rdx]
0x000075bb      66895010       mov word [rax + 0x10], dx
0x000075bf      e95cffffff     jmp 0x7520
0x000075c4      448b1f         mov r11d, dword [rdi]
0x000075c7      4183fb2f       cmp r11d, 0x2f
0x000075cb      0f878a000000   ja 0x765b
0x000075d1      4489da         mov edx, r11d
0x000075d4      48035710       add rdx, qword [rdi + 0x10]
0x000075d8      4183c308       add r11d, 8
0x000075dc      44891f         mov dword [rdi], r11d
0x000075df      488b12         mov rdx, qword [rdx]
0x000075e2      4885d2         test rdx, rdx
0x000075e5      490f44d1       cmove rdx, r9                           ; stddef.h:-24
0x000075e9      48895010       mov qword [rax + 0x10], rdx
0x000075ed      e92effffff     jmp 0x7520
0x000075f2      448b5f04       mov r11d, dword [rdi + 4]
0x000075f6      4181fbaf0000.  cmp r11d, 0xaf
0x000075fd      0f87aa000000   ja 0x76ad
0x00007603      4489da         mov edx, r11d
0x00007606      48035710       add rdx, qword [rdi + 0x10]
0x0000760a      4183c310       add r11d, 0x10
0x0000760e      44895f04       mov dword [rdi + 4], r11d
0x00007612      f20f1002       movsd xmm0, qword [rdx]
0x00007616      f20f114010     movsd qword [rax + 0x10], xmm0
0x0000761b      e900ffffff     jmp 0x7520
0x00007620      448b1f         mov r11d, dword [rdi]
0x00007623      4183fb2f       cmp r11d, 0x2f
0x00007627      7743           ja 0x766c
0x00007629      4489da         mov edx, r11d
0x0000762c      48035710       add rdx, qword [rdi + 0x10]
0x00007630      4183c308       add r11d, 8
0x00007634      44891f         mov dword [rdi], r11d
0x00007637      488b12         mov rdx, qword [rdx]
0x0000763a      4885d2         test rdx, rdx
0x0000763d      490f44d2       cmove rdx, r10
0x00007641      48895010       mov qword [rax + 0x10], rdx
0x00007645      e9d6feffff     jmp 0x7520
0x0000764a      488b5708       mov rdx, qword [rdi + 8]
0x0000764e      4c8d5a08       lea r11, [rdx + 8]
0x00007652      4c895f08       mov qword [rdi + 8], r11
0x00007656      e95effffff     jmp 0x75b9
0x0000765b      488b5708       mov rdx, qword [rdi + 8]
0x0000765f      4c8d5a08       lea r11, [rdx + 8]
0x00007663      4c895f08       mov qword [rdi + 8], r11
0x00007667      e973ffffff     jmp 0x75df
0x0000766c      488b5708       mov rdx, qword [rdi + 8]
0x00007670      4c8d5a08       lea r11, [rdx + 8]
0x00007674      4c895f08       mov qword [rdi + 8], r11
0x00007678      ebbd           jmp 0x7637
0x0000767a      488b5708       mov rdx, qword [rdi + 8]
0x0000767e      4c8d5a08       lea r11, [rdx + 8]
0x00007682      4c895f08       mov qword [rdi + 8], r11
0x00007686      e9c6feffff     jmp 0x7551
0x0000768b      488b5708       mov rdx, qword [rdi + 8]
0x0000768f      4c8d5a08       lea r11, [rdx + 8]
0x00007693      4c895f08       mov qword [rdi + 8], r11
0x00007697      e9fbfeffff     jmp 0x7597
0x0000769c      488b5708       mov rdx, qword [rdi + 8]
0x000076a0      4c8d5a08       lea r11, [rdx + 8]
0x000076a4      4c895f08       mov qword [rdi + 8], r11
0x000076a8      e9c8feffff     jmp 0x7575
0x000076ad      488b5708       mov rdx, qword [rdi + 8]
0x000076b1      4c8d5a08       lea r11, [rdx + 8]
0x000076b5      4c895f08       mov qword [rdi + 8], r11
0x000076b9      e954ffffff     jmp 0x7612
0x000076be      6690           nop
;-- printf_parse:
0x000076c0      4157           push r15
0x000076c2      4156           push r14
0x000076c4      488d4e20       lea rcx, [rsi + 0x20]
0x000076c8      4155           push r13
0x000076ca      4154           push r12
0x000076cc      488d4210       lea rax, [rdx + 0x10]
0x000076d0      55             push rbp
0x000076d1      53             push rbx
0x000076d2      4989f6         mov r14, rsi
0x000076d5      4989d7         mov r15, rdx
0x000076d8      31db           xor ebx, ebx
0x000076da      41b907000000   mov r9d, 7
0x000076e0      4883ec58       sub rsp, 0x58
0x000076e4      41ba07000000   mov r10d, 7
0x000076ea      48c706000000.  mov qword [rsi], 0
0x000076f1      48894e08       mov qword [rsi + 8], rcx
0x000076f5      48894c2428     mov qword [rsp + 0x28], rcx
0x000076fa      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00007701      48c702000000.  mov qword [rdx], 0
0x00007708      4889442408     mov qword [rsp + 8], rax
0x0000770d      48894208       mov qword [rdx + 8], rax
0x00007711      48c744241800.  mov qword [rsp + 0x18], 0
0x0000771a      48c744241000.  mov qword [rsp + 0x10], 0
0x00007723      48c744242000.  mov qword [rsp + 0x20], 0
0x0000772c      eb0d           jmp 0x773b
0x0000772e      6690           nop
0x00007730      3c25           cmp al, 0x25
0x00007732      488d6f01       lea rbp, [rdi + 1]
0x00007736      7440           je 0x7778
0x00007738      4889ef         mov rdi, rbp
0x0000773b      0fb607         movzx eax, byte [rdi]
0x0000773e      84c0           test al, al
0x00007740      75ee           jne 0x7730
0x00007742      488d049b       lea rax, [rbx + rbx*4]
0x00007746      488d0443       lea rax, [rbx + rax*2]
0x0000774a      48893cc1       mov qword [rcx + rax*8], rdi
0x0000774e      488b442410     mov rax, qword [rsp + 0x10]
0x00007753      49894610       mov qword [r14 + 0x10], rax
0x00007757      488b442418     mov rax, qword [rsp + 0x18]
0x0000775c      49894618       mov qword [r14 + 0x18], rax
0x00007760      31c0           xor eax, eax
0x00007762      4883c458       add rsp, 0x58
0x00007766      5b             pop rbx
0x00007767      5d             pop rbp
0x00007768      415c           pop r12
0x0000776a      415d           pop r13
0x0000776c      415e           pop r14
0x0000776e      415f           pop r15
0x00007770      c3             ret
0x00007771      0f1f80000000.  nop dword [rax]
0x00007778      488d049b       lea rax, [rbx + rbx*4]
0x0000777c      4d89c5         mov r13, r8
0x0000777f      488d0443       lea rax, [rbx + rax*2]
0x00007783      4c8d24c1       lea r12, [rcx + rax*8]
0x00007787      49893c24       mov qword [r12], rdi
0x0000778b      41c744241000.  mov dword [r12 + 0x10], 0
0x00007794      49c744241800.  mov qword [r12 + 0x18], 0
0x0000779d      49c744242000.  mov qword [r12 + 0x20], 0
0x000077a6      4d89442428     mov qword [r12 + 0x28], r8
0x000077ab      49c744243000.  mov qword [r12 + 0x30], 0
0x000077b4      49c744243800.  mov qword [r12 + 0x38], 0
0x000077bd      4d89442440     mov qword [r12 + 0x40], r8
0x000077c2      4d89442450     mov qword [r12 + 0x50], r8
0x000077c7      0fb65f01       movzx ebx, byte [rdi + 1]
0x000077cb      8d43d0         lea eax, [rbx - 0x30]
0x000077ce      3c09           cmp al, 9
0x000077d0      773c           ja 0x780e
0x000077d2      e933040000     jmp 0x7c0a
0x000077d7      660f1f840000.  nop word [rax + rax]
0x000077e0      80fb2d         cmp bl, 0x2d
0x000077e3      7443           je 0x7828
0x000077e5      80fb2b         cmp bl, 0x2b
0x000077e8      7446           je 0x7830
0x000077ea      80fb20         cmp bl, 0x20                            ; "@"
0x000077ed      7451           je 0x7840
0x000077ef      80fb23         cmp bl, 0x23
0x000077f2      745c           je 0x7850
0x000077f4      80fb30         cmp bl, 0x30
0x000077f7      7467           je 0x7860
0x000077f9      80fb49         cmp bl, 0x49
0x000077fc      7572           jne 0x7870
0x000077fe      41834c241040   or dword [r12 + 0x10], 0x40             ; segment.PHDR
                                                                       ; [0x40:4]=6
0x00007804      0f1f4000       nop dword [rax]
0x00007808      0fb618         movzx ebx, byte [rax]
0x0000780b      4889c5         mov rbp, rax
0x0000780e      488d4501       lea rax, [rbp + 1]
0x00007812      80fb27         cmp bl, 0x27
0x00007815      4889c2         mov rdx, rax
0x00007818      75c6           jne 0x77e0
0x0000781a      41834c241001   or dword [r12 + 0x10], 1
0x00007820      ebe6           jmp 0x7808
0x00007822      660f1f440000   nop word [rax + rax]
0x00007828      41834c241002   or dword [r12 + 0x10], 2
0x0000782e      ebd8           jmp 0x7808
0x00007830      41834c241004   or dword [r12 + 0x10], 4
0x00007836      ebd0           jmp 0x7808
0x00007838      0f1f84000000.  nop dword [rax + rax]
0x00007840      41834c241008   or dword [r12 + 0x10], 8
0x00007846      ebc0           jmp 0x7808
0x00007848      0f1f84000000.  nop dword [rax + rax]
0x00007850      41834c241010   or dword [r12 + 0x10], 0x10             ; [0x10:4]=0x3e0003
0x00007856      ebb0           jmp 0x7808
0x00007858      0f1f84000000.  nop dword [rax + rax]
0x00007860      41834c241020   or dword [r12 + 0x10], 0x20             ; [0x20:4]=64 ; "@"
0x00007866      eba0           jmp 0x7808
0x00007868      0f1f84000000.  nop dword [rax + rax]
0x00007870      80fb2a         cmp bl, 0x2a
0x00007873      0f84b0010000   je 0x7a29
0x00007879      8d4bd0         lea ecx, [rbx - 0x30]
0x0000787c      80f909         cmp cl, 9
0x0000787f      0f8612040000   jbe 0x7c97
0x00007885      80fb2e         cmp bl, 0x2e
0x00007888      0f84d1020000   je 0x7b5f
0x0000788e      31c0           xor eax, eax
0x00007890      be01000000     mov esi, 1
0x00007895      eb30           jmp 0x78c7
0x00007897      660f1f840000.  nop word [rax + rax]
0x000078a0      80fb4c         cmp bl, 0x4c
0x000078a3      743b           je 0x78e0
0x000078a5      80fb6c         cmp bl, 0x6c
0x000078a8      7416           je 0x78c0
0x000078aa      80fb6a         cmp bl, 0x6a
0x000078ad      7411           je 0x78c0
0x000078af      89da           mov edx, ebx
0x000078b1      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000078b4      80fa5a         cmp dl, 0x5a
0x000078b7      7407           je 0x78c0
0x000078b9      80fb74         cmp bl, 0x74
0x000078bc      752a           jne 0x78e8
0x000078be      6690           nop
0x000078c0      83c008         add eax, 8
0x000078c3      0fb65d00       movzx ebx, byte [rbp]
0x000078c7      4883c501       add rbp, 1
0x000078cb      80fb68         cmp bl, 0x68
0x000078ce      75d0           jne 0x78a0
0x000078d0      89c1           mov ecx, eax
0x000078d2      89f2           mov edx, esi
0x000078d4      83e101         and ecx, 1
0x000078d7      d3e2           shl edx, cl
0x000078d9      09d0           or eax, edx
0x000078db      ebe6           jmp 0x78c3
0x000078dd      0f1f00         nop dword [rax]
0x000078e0      83c804         or eax, 4
0x000078e3      ebde           jmp 0x78c3
0x000078e5      0f1f00         nop dword [rax]
0x000078e8      8d53db         lea edx, [rbx - 0x25]
0x000078eb      80fa53         cmp dl, 0x53
0x000078ee      0f8717060000   ja 0x7f0b
0x000078f4      488d0d711d00.  lea rcx, [0x0000966c]
0x000078fb      0fb6d2         movzx edx, dl
0x000078fe      48631491       movsxd rdx, dword [rcx + rdx*4]
0x00007902      4801ca         add rdx, rcx
0x00007905      ffe2           jmp rdx
0x00007907      41bb10000000   mov r11d, 0x10
0x0000790d      bb73000000     mov ebx, 0x73                           ; 's'
0x00007912      660f1f440000   nop word [rax + rax]
0x00007918      4983fdff       cmp r13, 0xffffffffffffffff
0x0000791c      0f84b5060000   je 0x7fd7
0x00007922      4d896c2450     mov qword [r12 + 0x50], r13
0x00007927      4d39e9         cmp r9, r13
0x0000792a      498b4f08       mov rcx, qword [r15 + 8]
0x0000792e      0f861c060000   jbe 0x7f50
0x00007934      498b07         mov rax, qword [r15]
0x00007937      4889c2         mov rdx, rax
0x0000793a      48c1e205       shl rdx, 5
0x0000793e      4801ca         add rdx, rcx
0x00007941      4c39e8         cmp rax, r13
0x00007944      7720           ja 0x7966
0x00007946      662e0f1f8400.  nop word cs:[rax + rax]
0x00007950      4883c001       add rax, 1
0x00007954      c70200000000   mov dword [rdx], 0
0x0000795a      4883c220       add rdx, 0x20                           ; "@"
0x0000795e      4c39e8         cmp rax, r13
0x00007961      76ed           jbe 0x7950
0x00007963      498907         mov qword [r15], rax
0x00007966      49c1e505       shl r13, 5
0x0000796a      4a8d0429       lea rax, [rcx + r13]
0x0000796e      8b10           mov edx, dword [rax]
0x00007970      85d2           test edx, edx
0x00007972      0f85cb050000   jne 0x7f43
0x00007978      448918         mov dword [rax], r11d
0x0000797b      41885c2448     mov byte [r12 + 0x48], bl
0x00007980      498b06         mov rax, qword [r14]
0x00007983      49896c2408     mov qword [r12 + 8], rbp
0x00007988      488d5801       lea rbx, [rax + 1]
0x0000798c      4939da         cmp r10, rbx
0x0000798f      49891e         mov qword [r14], rbx
0x00007992      0f8788000000   ja 0x7a20
0x00007998      4d85d2         test r10, r10
0x0000799b      0f88a6090000   js 0x8347
0x000079a1      4d01d2         add r10, r10
0x000079a4      48b8bae8a28b.  movabs rax, 0x2e8ba2e8ba2e8ba
0x000079ae      4939c2         cmp r10, rax
0x000079b1      0f8790090000   ja 0x8347
0x000079b7      4b8d0492       lea rax, [r10 + r10*4]
0x000079bb      498b7e08       mov rdi, qword [r14 + 8]
0x000079bf      48397c2428     cmp qword [rsp + 0x28], rdi
0x000079c4      4c894c2440     mov qword [rsp + 0x40], r9
0x000079c9      4c89542438     mov qword [rsp + 0x38], r10
0x000079ce      498d0442       lea rax, [r10 + rax*2]
0x000079d2      4c89442430     mov qword [rsp + 0x30], r8
0x000079d7      488d34c50000.  lea rsi, [rax*8]
0x000079df      0f84b8060000   je 0x809d
0x000079e5      e8b6a0ffff     call sym.imp.realloc
0x000079ea      4885c0         test rax, rax
0x000079ed      4889c1         mov rcx, rax
0x000079f0      4c8b442430     mov r8, qword [rsp + 0x30]
0x000079f5      4c8b542438     mov r10, qword [rsp + 0x38]
0x000079fa      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x000079ff      0f8442090000   je 0x8347
0x00007a05      488b442428     mov rax, qword [rsp + 0x28]
0x00007a0a      493b4608       cmp rax, qword [r14 + 8]
0x00007a0e      498b1e         mov rbx, qword [r14]
0x00007a11      0f84a9060000   je 0x80c0
0x00007a17      49894e08       mov qword [r14 + 8], rcx
0x00007a1b      e918fdffff     jmp 0x7738
0x00007a20      498b4e08       mov rcx, qword [r14 + 8]
0x00007a24      e90ffdffff     jmp 0x7738
0x00007a29      488b742410     mov rsi, qword [rsp + 0x10]
0x00007a2e      b901000000     mov ecx, 1
0x00007a33      49896c2418     mov qword [r12 + 0x18], rbp
0x00007a38      4989442420     mov qword [r12 + 0x20], rax
0x00007a3d      4885f6         test rsi, rsi
0x00007a40      480f45ce       cmovne rcx, rsi
0x00007a44      48894c2410     mov qword [rsp + 0x10], rcx
0x00007a49      0fb64d01       movzx ecx, byte [rbp + 1]
0x00007a4d      8d71d0         lea esi, [rcx - 0x30]
0x00007a50      4080fe09       cmp sil, 9
0x00007a54      0f86db020000   jbe 0x7d35
0x00007a5a      488b742420     mov rsi, qword [rsp + 0x20]
0x00007a5f      4883feff       cmp rsi, 0xffffffffffffffff
0x00007a63      488d5601       lea rdx, [rsi + 1]
0x00007a67      4989742428     mov qword [r12 + 0x28], rsi
0x00007a6c      0f8499040000   je 0x7f0b
0x00007a72      488b5c2420     mov rbx, qword [rsp + 0x20]
0x00007a77      4889c5         mov rbp, rax
0x00007a7a      4889542420     mov qword [rsp + 0x20], rdx
0x00007a7f      4939d9         cmp r9, rbx
0x00007a82      498b4f08       mov rcx, qword [r15 + 8]
0x00007a86      0f8776060000   ja 0x8102
0x00007a8c      4d01c9         add r9, r9
0x00007a8f      488d4301       lea rax, [rbx + 1]
0x00007a93      4939d9         cmp r9, rbx
0x00007a96      4c0f46c8       cmovbe r9, rax
0x00007a9a      48b8ffffffff.  movabs rax, 0x7ffffffffffffff           ; 576460752303423487
0x00007aa4      4939c1         cmp r9, rax
0x00007aa7      0f879e080000   ja 0x834b
0x00007aad      4c89ce         mov rsi, r9
0x00007ab0      4c894c2440     mov qword [rsp + 0x40], r9
0x00007ab5      4c89542438     mov qword [rsp + 0x38], r10
0x00007aba      48c1e605       shl rsi, 5
0x00007abe      48394c2408     cmp qword [rsp + 8], rcx
0x00007ac3      4c89442430     mov qword [rsp + 0x30], r8
0x00007ac8      0f8413070000   je 0x81e1
0x00007ace      4889cf         mov rdi, rcx
0x00007ad1      e8ca9fffff     call sym.imp.realloc
0x00007ad6      498b5708       mov rdx, qword [r15 + 8]
0x00007ada      4c8b442430     mov r8, qword [rsp + 0x30]
0x00007adf      4889c1         mov rcx, rax
0x00007ae2      4c8b542438     mov r10, qword [rsp + 0x38]
0x00007ae7      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x00007aec      4885c9         test rcx, rcx
0x00007aef      0f84b2080000   je 0x83a7
0x00007af5      4839542408     cmp qword [rsp + 8], rdx
0x00007afa      498b07         mov rax, qword [r15]
0x00007afd      0f84b8070000   je 0x82bb
0x00007b03      49894f08       mov qword [r15 + 8], rcx
0x00007b07      4889c2         mov rdx, rax
0x00007b0a      48c1e205       shl rdx, 5
0x00007b0e      4801ca         add rdx, rcx
0x00007b11      4839d8         cmp rax, rbx
0x00007b14      7720           ja 0x7b36
0x00007b16      662e0f1f8400.  nop word cs:[rax + rax]
0x00007b20      4883c001       add rax, 1
0x00007b24      c70200000000   mov dword [rdx], 0
0x00007b2a      4883c220       add rdx, 0x20                           ; "@"
0x00007b2e      4839d8         cmp rax, rbx
0x00007b31      76ed           jbe 0x7b20
0x00007b33      498907         mov qword [r15], rax
0x00007b36      48c1e305       shl rbx, 5
0x00007b3a      488d0419       lea rax, [rcx + rbx]
0x00007b3e      8b10           mov edx, dword [rax]
0x00007b40      85d2           test edx, edx
0x00007b42      0f85d3040000   jne 0x801b
0x00007b48      c70005000000   mov dword [rax], 5
0x00007b4e      0fb65d00       movzx ebx, byte [rbp]
0x00007b52      488d5501       lea rdx, [rbp + 1]
0x00007b56      80fb2e         cmp bl, 0x2e
0x00007b59      0f852ffdffff   jne 0x788e
0x00007b5f      807d012a       cmp byte [rbp + 1], 0x2a
0x00007b63      49896c2430     mov qword [r12 + 0x30], rbp
0x00007b68      0f8580010000   jne 0x7cee
0x00007b6e      488b742418     mov rsi, qword [rsp + 0x18]
0x00007b73      4c8d5d02       lea r11, [rbp + 2]
0x00007b77      b802000000     mov eax, 2
0x00007b7c      4d895c2438     mov qword [r12 + 0x38], r11
0x00007b81      4883fe02       cmp rsi, 2
0x00007b85      480f43c6       cmovae rax, rsi
0x00007b89      4889442418     mov qword [rsp + 0x18], rax
0x00007b8e      0fbe4502       movsx eax, byte [rbp + 2]
0x00007b92      8d50d0         lea edx, [rax - 0x30]
0x00007b95      80fa09         cmp dl, 9
0x00007b98      0f868e060000   jbe 0x822c
0x00007b9e      498b5c2440     mov rbx, qword [r12 + 0x40]
0x00007ba3      4883fbff       cmp rbx, 0xffffffffffffffff
0x00007ba7      0f8458060000   je 0x8205
0x00007bad      4939d9         cmp r9, rbx
0x00007bb0      498b4f08       mov rcx, qword [r15 + 8]
0x00007bb4      0f8665050000   jbe 0x811f
0x00007bba      498b07         mov rax, qword [r15]
0x00007bbd      4889c2         mov rdx, rax
0x00007bc0      48c1e205       shl rdx, 5
0x00007bc4      4801ca         add rdx, rcx
0x00007bc7      4839d8         cmp rax, rbx
0x00007bca      771a           ja 0x7be6
0x00007bcc      0f1f4000       nop dword [rax]
0x00007bd0      4883c001       add rax, 1
0x00007bd4      c70200000000   mov dword [rdx], 0
0x00007bda      4883c220       add rdx, 0x20                           ; "@"
0x00007bde      4839d8         cmp rax, rbx
0x00007be1      76ed           jbe 0x7bd0
0x00007be3      498907         mov qword [r15], rax
0x00007be6      48c1e305       shl rbx, 5
0x00007bea      488d0419       lea rax, [rcx + rbx]
0x00007bee      8b10           mov edx, dword [rax]
0x00007bf0      85d2           test edx, edx
0x00007bf2      0f8512050000   jne 0x810a
0x00007bf8      c70005000000   mov dword [rax], 5
0x00007bfe      4c89dd         mov rbp, r11
0x00007c01      410fb61b       movzx ebx, byte [r11]
0x00007c05      e984fcffff     jmp 0x788e
0x00007c0a      4889e8         mov rax, rbp
0x00007c0d      0f1f00         nop dword [rax]
0x00007c10      4883c001       add rax, 1
0x00007c14      0fb610         movzx edx, byte [rax]
0x00007c17      8d4ad0         lea ecx, [rdx - 0x30]
0x00007c1a      80f909         cmp cl, 9
0x00007c1d      76f1           jbe 0x7c10
0x00007c1f      80fa24         cmp dl, 0x24
0x00007c22      4d89c5         mov r13, r8
0x00007c25      0f85e3fbffff   jne 0x780e
0x00007c2b      31d2           xor edx, edx
0x00007c2d      0fbec3         movsx eax, bl
0x00007c30      48bf99999999.  movabs rdi, 0x1999999999999999
0x00007c3a      4c89c6         mov rsi, r8
0x00007c3d      83e830         sub eax, 0x30
0x00007c40      4839fa         cmp rdx, rdi
0x00007c43      4898           cdqe
0x00007c45      7707           ja 0x7c4e
0x00007c47      488d3492       lea rsi, [rdx + rdx*4]
0x00007c4b      4801f6         add rsi, rsi
0x00007c4e      4889e9         mov rcx, rbp
0x00007c51      4801f0         add rax, rsi
0x00007c54      0fb65d01       movzx ebx, byte [rbp + 1]
0x00007c58      400f92c6       setb sil
0x00007c5c      4883c501       add rbp, 1
0x00007c60      4889c2         mov rdx, rax
0x00007c63      400fb6f6       movzx esi, sil
0x00007c67      4885f6         test rsi, rsi
0x00007c6a      8d7bd0         lea edi, [rbx - 0x30]
0x00007c6d      0f858b030000   jne 0x7ffe
0x00007c73      4080ff09       cmp dil, 9
0x00007c77      76b4           jbe 0x7c2d
0x00007c79      4989c5         mov r13, rax
0x00007c7c      4983ed01       sub r13, 1
0x00007c80      4983fdfd       cmp r13, 0xfffffffffffffffd
0x00007c84      0f8781020000   ja 0x7f0b
0x00007c8a      488d6902       lea rbp, [rcx + 2]
0x00007c8e      0fb65902       movzx ebx, byte [rcx + 2]
0x00007c92      e977fbffff     jmp 0x780e
0x00007c97      49896c2418     mov qword [r12 + 0x18], rbp
0x00007c9c      0fb67d00       movzx edi, byte [rbp]
0x00007ca0      4889ee         mov rsi, rbp
0x00007ca3      8d4fd0         lea ecx, [rdi - 0x30]
0x00007ca6      80f909         cmp cl, 9
0x00007ca9      760c           jbe 0x7cb7
0x00007cab      eb33           jmp 0x7ce0
0x00007cad      0f1f00         nop dword [rax]
0x00007cb0      4889c5         mov rbp, rax
0x00007cb3      4883c001       add rax, 1
0x00007cb7      0fb638         movzx edi, byte [rax]
0x00007cba      8d57d0         lea edx, [rdi - 0x30]
0x00007cbd      80fa09         cmp dl, 9
0x00007cc0      76ee           jbe 0x7cb0
0x00007cc2      4889c1         mov rcx, rax
0x00007cc5      488d5502       lea rdx, [rbp + 2]
0x00007cc9      4889c5         mov rbp, rax
0x00007ccc      4829f1         sub rcx, rsi
0x00007ccf      488b742410     mov rsi, qword [rsp + 0x10]
0x00007cd4      4839ce         cmp rsi, rcx
0x00007cd7      480f43ce       cmovae rcx, rsi
0x00007cdb      48894c2410     mov qword [rsp + 0x10], rcx
0x00007ce0      49896c2420     mov qword [r12 + 0x20], rbp
0x00007ce5      0fb65d00       movzx ebx, byte [rbp]
0x00007ce9      e997fbffff     jmp 0x7885
0x00007cee      0fb64501       movzx eax, byte [rbp + 1]
0x00007cf2      83e830         sub eax, 0x30
0x00007cf5      3c09           cmp al, 9
0x00007cf7      7715           ja 0x7d0e
0x00007cf9      0f1f80000000.  nop dword [rax]
0x00007d00      4883c201       add rdx, 1
0x00007d04      0fb602         movzx eax, byte [rdx]
0x00007d07      83e830         sub eax, 0x30
0x00007d0a      3c09           cmp al, 9
0x00007d0c      76f2           jbe 0x7d00
0x00007d0e      488b742418     mov rsi, qword [rsp + 0x18]
0x00007d13      4889d0         mov rax, rdx
0x00007d16      4989542438     mov qword [r12 + 0x38], rdx
0x00007d1b      4829e8         sub rax, rbp
0x00007d1e      0fb61a         movzx ebx, byte [rdx]
0x00007d21      4889d5         mov rbp, rdx
0x00007d24      4839c6         cmp rsi, rax
0x00007d27      480f43c6       cmovae rax, rsi
0x00007d2b      4889442418     mov qword [rsp + 0x18], rax
0x00007d30      e959fbffff     jmp 0x788e
0x00007d35      4889c6         mov rsi, rax
0x00007d38      4883c601       add rsi, 1
0x00007d3c      0fb63e         movzx edi, byte [rsi]
0x00007d3f      448d5fd0       lea r11d, [rdi - 0x30]
0x00007d43      4180fb09       cmp r11b, 9
0x00007d47      76ef           jbe 0x7d38
0x00007d49      4080ff24       cmp dil, 0x24
0x00007d4d      0f8507fdffff   jne 0x7a5a
0x00007d53      31f6           xor esi, esi
0x00007d55      0fbec1         movsx eax, cl
0x00007d58      48bf99999999.  movabs rdi, 0x1999999999999999
0x00007d62      4c89c1         mov rcx, r8
0x00007d65      83e830         sub eax, 0x30
0x00007d68      4839fe         cmp rsi, rdi
0x00007d6b      4898           cdqe
0x00007d6d      7707           ja 0x7d76
0x00007d6f      488d0cb6       lea rcx, [rsi + rsi*4]
0x00007d73      4801c9         add rcx, rcx
0x00007d76      4889d5         mov rbp, rdx
0x00007d79      4531db         xor r11d, r11d
0x00007d7c      4801c8         add rax, rcx
0x00007d7f      0fb64a01       movzx ecx, byte [rdx + 1]
0x00007d83      410f92c3       setb r11b
0x00007d87      4883c201       add rdx, 1
0x00007d8b      4889c6         mov rsi, rax
0x00007d8e      4d85db         test r11, r11
0x00007d91      8d79d0         lea edi, [rcx - 0x30]
0x00007d94      0f8504050000   jne 0x829e
0x00007d9a      4080ff09       cmp dil, 9
0x00007d9e      76b5           jbe 0x7d55
0x00007da0      488d58ff       lea rbx, [rax - 1]
0x00007da4      4883fbfd       cmp rbx, 0xfffffffffffffffd
0x00007da8      0f875d010000   ja 0x7f0b
0x00007dae      49895c2428     mov qword [r12 + 0x28], rbx
0x00007db3      4883c502       add rbp, 2
0x00007db7      e9c3fcffff     jmp 0x7a7f
0x00007dbc      83f80f         cmp eax, 0xf
0x00007dbf      41bb16000000   mov r11d, 0x16
0x00007dc5      0f8f4dfbffff   jg 0x7918
0x00007dcb      a804           test al, 4
0x00007dcd      0f8545fbffff   jne 0x7918
0x00007dd3      83f807         cmp eax, 7
0x00007dd6      41bb15000000   mov r11d, 0x15
0x00007ddc      0f8f36fbffff   jg 0x7918
0x00007de2      a802           test al, 2
0x00007de4      41bb12000000   mov r11d, 0x12
0x00007dea      0f8528fbffff   jne 0x7918
0x00007df0      4531db         xor r11d, r11d
0x00007df3      a801           test al, 1
0x00007df5      410f94c3       sete r11b
0x00007df9      4183c313       add r11d, 0x13
0x00007dfd      e916fbffff     jmp 0x7918
0x00007e02      660f1f440000   nop word [rax + rax]
0x00007e08      4531db         xor r11d, r11d
0x00007e0b      83f807         cmp eax, 7
0x00007e0e      410f9fc3       setg r11b
0x00007e12      4183c30d       add r11d, 0xd
0x00007e16      e9fdfaffff     jmp 0x7918
0x00007e1b      83f80f         cmp eax, 0xf
0x00007e1e      41bb09000000   mov r11d, 9
0x00007e24      0f8feefaffff   jg 0x7918
0x00007e2a      a804           test al, 4
0x00007e2c      0f85e6faffff   jne 0x7918
0x00007e32      83f807         cmp eax, 7
0x00007e35      41bb07000000   mov r11d, 7
0x00007e3b      0f8fd7faffff   jg 0x7918
0x00007e41      a802           test al, 2
0x00007e43      41bb01000000   mov r11d, 1
0x00007e49      0f85c9faffff   jne 0x7918
0x00007e4f      83e001         and eax, 1
0x00007e52      83f801         cmp eax, 1
0x00007e55      4519db         sbb r11d, r11d
0x00007e58      4183e302       and r11d, 2
0x00007e5c      4183c303       add r11d, 3
0x00007e60      e9b3faffff     jmp 0x7918
0x00007e65      0f1f00         nop dword [rax]
0x00007e68      4531db         xor r11d, r11d
0x00007e6b      83f807         cmp eax, 7
0x00007e6e      410f9fc3       setg r11b
0x00007e72      4183c30f       add r11d, 0xf
0x00007e76      e99dfaffff     jmp 0x7918
0x00007e7b      83f80f         cmp eax, 0xf
0x00007e7e      41bb0c000000   mov r11d, 0xc
0x00007e84      0f8f8efaffff   jg 0x7918
0x00007e8a      4531db         xor r11d, r11d
0x00007e8d      a804           test al, 4
0x00007e8f      410f95c3       setne r11b
0x00007e93      4183c30b       add r11d, 0xb
0x00007e97      e97cfaffff     jmp 0x7918
0x00007e9c      41bb0e000000   mov r11d, 0xe
0x00007ea2      bb63000000     mov ebx, 0x63                           ; 'c'
0x00007ea7      e96cfaffff     jmp 0x7918
0x00007eac      83f80f         cmp eax, 0xf
0x00007eaf      41bb0a000000   mov r11d, 0xa
0x00007eb5      0f8f5dfaffff   jg 0x7918
0x00007ebb      a804           test al, 4
0x00007ebd      0f8555faffff   jne 0x7918
0x00007ec3      83f807         cmp eax, 7
0x00007ec6      41bb08000000   mov r11d, 8
0x00007ecc      0f8f46faffff   jg 0x7918
0x00007ed2      a802           test al, 2
0x00007ed4      41bb02000000   mov r11d, 2
0x00007eda      0f8538faffff   jne 0x7918
0x00007ee0      83e001         and eax, 1
0x00007ee3      83f801         cmp eax, 1
0x00007ee6      4519db         sbb r11d, r11d
0x00007ee9      4183e302       and r11d, 2
0x00007eed      4183c304       add r11d, 4
0x00007ef1      e922faffff     jmp 0x7918
0x00007ef6      662e0f1f8400.  nop word cs:[rax + rax]
0x00007f00      41bb11000000   mov r11d, 0x11
0x00007f06      e90dfaffff     jmp 0x7918
0x00007f0b      498b4f08       mov rcx, qword [r15 + 8]
0x00007f0f      48394c2408     cmp qword [rsp + 8], rcx
0x00007f14      7408           je 0x7f1e
0x00007f16      4889cf         mov rdi, rcx
0x00007f19      e8f298ffff     call sym.imp.free
0x00007f1e      498b7e08       mov rdi, qword [r14 + 8]
0x00007f22      48397c2428     cmp qword [rsp + 0x28], rdi
0x00007f27      7405           je 0x7f2e
0x00007f29      e8e298ffff     call sym.imp.free
0x00007f2e      e80d99ffff     call sym.imp.__errno_location
0x00007f33      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x1f400000
0x00007f39      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00007f3e      e91ff8ffff     jmp 0x7762
0x00007f43      4439da         cmp edx, r11d
0x00007f46      0f842ffaffff   je 0x797b
0x00007f4c      ebc1           jmp 0x7f0f
0x00007f4e      6690           nop
0x00007f50      4d01c9         add r9, r9
0x00007f53      498d4501       lea rax, [r13 + 1]
0x00007f57      4d39e9         cmp r9, r13
0x00007f5a      4c0f46c8       cmovbe r9, rax
0x00007f5e      48b8ffffffff.  movabs rax, 0x7ffffffffffffff           ; 576460752303423487
0x00007f68      4939c1         cmp r9, rax
0x00007f6b      0f87da030000   ja 0x834b
0x00007f71      4c89ce         mov rsi, r9
0x00007f74      4c894c2448     mov qword [rsp + 0x48], r9
0x00007f79      4c89542440     mov qword [rsp + 0x40], r10
0x00007f7e      48c1e605       shl rsi, 5
0x00007f82      48394c2408     cmp qword [rsp + 8], rcx
0x00007f87      4c89442438     mov qword [rsp + 0x38], r8
0x00007f8c      44895c2430     mov dword [rsp + 0x30], r11d
0x00007f91      0f849a000000   je 0x8031
0x00007f97      4889cf         mov rdi, rcx
0x00007f9a      e8019bffff     call sym.imp.realloc
0x00007f9f      4885c0         test rax, rax
0x00007fa2      4889c1         mov rcx, rax
0x00007fa5      448b5c2430     mov r11d, dword [rsp + 0x30]
0x00007faa      4c8b442438     mov r8, qword [rsp + 0x38]
0x00007faf      4c8b542440     mov r10, qword [rsp + 0x40]
0x00007fb4      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x00007fb9      0f8488030000   je 0x8347
0x00007fbf      488b442408     mov rax, qword [rsp + 8]
0x00007fc4      493b4708       cmp rax, qword [r15 + 8]
0x00007fc8      0f848b000000   je 0x8059
0x00007fce      49894f08       mov qword [r15 + 8], rcx
0x00007fd2      e95df9ffff     jmp 0x7934
0x00007fd7      488b742420     mov rsi, qword [rsp + 0x20]
0x00007fdc      4883feff       cmp rsi, 0xffffffffffffffff
0x00007fe0      488d4601       lea rax, [rsi + 1]
0x00007fe4      4989742450     mov qword [r12 + 0x50], rsi
0x00007fe9      0f841cffffff   je 0x7f0b
0x00007fef      4c8b6c2420     mov r13, qword [rsp + 0x20]
0x00007ff4      4889442420     mov qword [rsp + 0x20], rax
0x00007ff9      e929f9ffff     jmp 0x7927
0x00007ffe      4080ff09       cmp dil, 9
0x00008002      0f8703ffffff   ja 0x7f0b
0x00008008      0fbec3         movsx eax, bl
0x0000800b      4c89c6         mov rsi, r8
0x0000800e      4889e9         mov rcx, rbp
0x00008011      83e830         sub eax, 0x30
0x00008014      4898           cdqe
0x00008016      e936fcffff     jmp 0x7c51
0x0000801b      83fa05         cmp edx, 5
0x0000801e      0f85ebfeffff   jne 0x7f0f
0x00008024      0fb65d00       movzx ebx, byte [rbp]
0x00008028      488d5501       lea rdx, [rbp + 1]
0x0000802c      e954f8ffff     jmp 0x7885
0x00008031      4889f7         mov rdi, rsi
0x00008034      e8179affff     call sym.imp.malloc
0x00008039      4885c0         test rax, rax
0x0000803c      4889c1         mov rcx, rax
0x0000803f      448b5c2430     mov r11d, dword [rsp + 0x30]
0x00008044      4c8b442438     mov r8, qword [rsp + 0x38]
0x00008049      4c8b542440     mov r10, qword [rsp + 0x40]
0x0000804e      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x00008053      0f8463010000   je 0x81bc
0x00008059      498b17         mov rdx, qword [r15]
0x0000805c      488b742408     mov rsi, qword [rsp + 8]
0x00008061      4889cf         mov rdi, rcx
0x00008064      4c894c2448     mov qword [rsp + 0x48], r9
0x00008069      4c89542440     mov qword [rsp + 0x40], r10
0x0000806e      4c89442438     mov qword [rsp + 0x38], r8
0x00008073      44895c2430     mov dword [rsp + 0x30], r11d
0x00008078      48c1e205       shl rdx, 5
0x0000807c      e87f99ffff     call sym.imp.memcpy
0x00008081      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x00008086      4c8b542440     mov r10, qword [rsp + 0x40]
0x0000808b      4889c1         mov rcx, rax
0x0000808e      4c8b442438     mov r8, qword [rsp + 0x38]
0x00008093      448b5c2430     mov r11d, dword [rsp + 0x30]
0x00008098      e931ffffff     jmp 0x7fce
0x0000809d      4889f7         mov rdi, rsi
0x000080a0      e8ab99ffff     call sym.imp.malloc
0x000080a5      4885c0         test rax, rax
0x000080a8      4889c1         mov rcx, rax
0x000080ab      4c8b442430     mov r8, qword [rsp + 0x30]
0x000080b0      4c8b542438     mov r10, qword [rsp + 0x38]
0x000080b5      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x000080ba      0f84e9000000   je 0x81a9
0x000080c0      488d049b       lea rax, [rbx + rbx*4]
0x000080c4      488b742428     mov rsi, qword [rsp + 0x28]
0x000080c9      4889cf         mov rdi, rcx
0x000080cc      4c894c2440     mov qword [rsp + 0x40], r9
0x000080d1      4c89542438     mov qword [rsp + 0x38], r10
0x000080d6      488d1443       lea rdx, [rbx + rax*2]
0x000080da      4c89442430     mov qword [rsp + 0x30], r8
0x000080df      48c1e203       shl rdx, 3
0x000080e3      e81899ffff     call sym.imp.memcpy
0x000080e8      498b1e         mov rbx, qword [r14]
0x000080eb      4889c1         mov rcx, rax
0x000080ee      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x000080f3      4c8b542438     mov r10, qword [rsp + 0x38]
0x000080f8      4c8b442430     mov r8, qword [rsp + 0x30]
0x000080fd      e915f9ffff     jmp 0x7a17
0x00008102      498b07         mov rax, qword [r15]
0x00008105      e9fdf9ffff     jmp 0x7b07
0x0000810a      83fa05         cmp edx, 5
0x0000810d      0f85fcfdffff   jne 0x7f0f
0x00008113      410fb61b       movzx ebx, byte [r11]
0x00008117      4c89dd         mov rbp, r11
0x0000811a      e96ff7ffff     jmp 0x788e
0x0000811f      4d01c9         add r9, r9
0x00008122      488d4301       lea rax, [rbx + 1]
0x00008126      4939d9         cmp r9, rbx
0x00008129      4c0f46c8       cmovbe r9, rax
0x0000812d      48b8ffffffff.  movabs rax, 0x7ffffffffffffff           ; 576460752303423487
0x00008137      4939c1         cmp r9, rax
0x0000813a      0f870b020000   ja 0x834b
0x00008140      4c89ce         mov rsi, r9
0x00008143      4c894c2448     mov qword [rsp + 0x48], r9
0x00008148      4c89542440     mov qword [rsp + 0x40], r10
0x0000814d      48c1e605       shl rsi, 5
0x00008151      48394c2408     cmp qword [rsp + 8], rcx
0x00008156      4c89442438     mov qword [rsp + 0x38], r8
0x0000815b      4c895c2430     mov qword [rsp + 0x30], r11
0x00008160      0f84b8010000   je 0x831e
0x00008166      4889cf         mov rdi, rcx
0x00008169      e83299ffff     call sym.imp.realloc
0x0000816e      498b5708       mov rdx, qword [r15 + 8]
0x00008172      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00008177      4889c1         mov rcx, rax
0x0000817a      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000817f      4c8b542440     mov r10, qword [rsp + 0x40]
0x00008184      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x00008189      4885c9         test rcx, rcx
0x0000818c      0f8415020000   je 0x83a7
0x00008192      4839542408     cmp qword [rsp + 8], rdx
0x00008197      498b07         mov rax, qword [r15]
0x0000819a      0f84c0010000   je 0x8360
0x000081a0      49894f08       mov qword [r15 + 8], rcx
0x000081a4      e914faffff     jmp 0x7bbd
0x000081a9      498b4f08       mov rcx, qword [r15 + 8]
0x000081ad      48394c2408     cmp qword [rsp + 8], rcx
0x000081b2      7418           je 0x81cc
0x000081b4      4889cf         mov rdi, rcx
0x000081b7      e85496ffff     call sym.imp.free
0x000081bc      498b7e08       mov rdi, qword [r14 + 8]
0x000081c0      48397c2428     cmp qword [rsp + 0x28], rdi
0x000081c5      7405           je 0x81cc
0x000081c7      e84496ffff     call sym.imp.free
0x000081cc      e86f96ffff     call sym.imp.__errno_location
0x000081d1      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x000081d7      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000081dc      e981f5ffff     jmp 0x7762
0x000081e1      4889f7         mov rdi, rsi
0x000081e4      e86798ffff     call sym.imp.malloc
0x000081e9      488b542408     mov rdx, qword [rsp + 8]
0x000081ee      4889c1         mov rcx, rax
0x000081f1      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x000081f6      4c8b542438     mov r10, qword [rsp + 0x38]
0x000081fb      4c8b442430     mov r8, qword [rsp + 0x30]
0x00008200      e9e7f8ffff     jmp 0x7aec
0x00008205      488b742420     mov rsi, qword [rsp + 0x20]
0x0000820a      4883feff       cmp rsi, 0xffffffffffffffff
0x0000820e      488d4601       lea rax, [rsi + 1]
0x00008212      4989742440     mov qword [r12 + 0x40], rsi
0x00008217      0f84eefcffff   je 0x7f0b
0x0000821d      488b5c2420     mov rbx, qword [rsp + 0x20]
0x00008222      4889442420     mov qword [rsp + 0x20], rax
0x00008227      e981f9ffff     jmp 0x7bad
0x0000822c      4c89da         mov rdx, r11
0x0000822f      4883c201       add rdx, 1
0x00008233      0fb60a         movzx ecx, byte [rdx]
0x00008236      8d71d0         lea esi, [rcx - 0x30]
0x00008239      4080fe09       cmp sil, 9
0x0000823d      76f0           jbe 0x822f
0x0000823f      80f924         cmp cl, 0x24
0x00008242      0f8556f9ffff   jne 0x7b9e
0x00008248      31c9           xor ecx, ecx
0x0000824a      48be99999999.  movabs rsi, 0x1999999999999999
0x00008254      83e830         sub eax, 0x30
0x00008257      4c89c2         mov rdx, r8
0x0000825a      4839f1         cmp rcx, rsi
0x0000825d      4898           cdqe
0x0000825f      7707           ja 0x8268
0x00008261      488d1489       lea rdx, [rcx + rcx*4]
0x00008265      4801d2         add rdx, rdx
0x00008268      4c89de         mov rsi, r11
0x0000826b      31db           xor ebx, ebx
0x0000826d      4801c2         add rdx, rax
0x00008270      410fbe4301     movsx eax, byte [r11 + 1]
0x00008275      0f92c3         setb bl
0x00008278      4983c301       add r11, 1
0x0000827c      4889d1         mov rcx, rdx
0x0000827f      4885db         test rbx, rbx
0x00008282      8d78d0         lea edi, [rax - 0x30]
0x00008285      7471           je 0x82f8
0x00008287      4080ff09       cmp dil, 9
0x0000828b      0f877afcffff   ja 0x7f0b
0x00008291      83e830         sub eax, 0x30
0x00008294      4c89c2         mov rdx, r8
0x00008297      4c89de         mov rsi, r11
0x0000829a      4898           cdqe
0x0000829c      ebcd           jmp 0x826b
0x0000829e      4080ff09       cmp dil, 9
0x000082a2      0f8763fcffff   ja 0x7f0b
0x000082a8      0fbec1         movsx eax, cl
0x000082ab      4889d5         mov rbp, rdx
0x000082ae      4c89c1         mov rcx, r8
0x000082b1      83e830         sub eax, 0x30
0x000082b4      4898           cdqe
0x000082b6      e9befaffff     jmp 0x7d79
0x000082bb      488b742408     mov rsi, qword [rsp + 8]
0x000082c0      48c1e005       shl rax, 5
0x000082c4      4889cf         mov rdi, rcx
0x000082c7      4889c2         mov rdx, rax
0x000082ca      4c894c2440     mov qword [rsp + 0x40], r9
0x000082cf      4c89542438     mov qword [rsp + 0x38], r10
0x000082d4      4c89442430     mov qword [rsp + 0x30], r8
0x000082d9      e82297ffff     call sym.imp.memcpy
0x000082de      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x000082e3      4889c1         mov rcx, rax
0x000082e6      4c8b542438     mov r10, qword [rsp + 0x38]
0x000082eb      498b07         mov rax, qword [r15]
0x000082ee      4c8b442430     mov r8, qword [rsp + 0x30]
0x000082f3      e90bf8ffff     jmp 0x7b03
0x000082f8      4080ff09       cmp dil, 9
0x000082fc      0f8648ffffff   jbe 0x824a
0x00008302      488d5aff       lea rbx, [rdx - 1]
0x00008306      4883fbfd       cmp rbx, 0xfffffffffffffffd
0x0000830a      0f87fbfbffff   ja 0x7f0b
0x00008310      49895c2440     mov qword [r12 + 0x40], rbx
0x00008315      4c8d5e02       lea r11, [rsi + 2]
0x00008319      e98ff8ffff     jmp 0x7bad
0x0000831e      4889f7         mov rdi, rsi
0x00008321      e82a97ffff     call sym.imp.malloc
0x00008326      488b542408     mov rdx, qword [rsp + 8]
0x0000832b      4889c1         mov rcx, rax
0x0000832e      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x00008333      4c8b542440     mov r10, qword [rsp + 0x40]
0x00008338      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000833d      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00008342      e942feffff     jmp 0x8189
0x00008347      498b4f08       mov rcx, qword [r15 + 8]
0x0000834b      48394c2408     cmp qword [rsp + 8], rcx
0x00008350      0f855efeffff   jne 0x81b4
0x00008356      e961feffff     jmp 0x81bc
0x0000835b      0f1f440000     nop dword [rax + rax]
0x00008360      488b742408     mov rsi, qword [rsp + 8]
0x00008365      48c1e005       shl rax, 5
0x00008369      4889cf         mov rdi, rcx
0x0000836c      4889c2         mov rdx, rax
0x0000836f      4c894c2448     mov qword [rsp + 0x48], r9
0x00008374      4c89542440     mov qword [rsp + 0x40], r10
0x00008379      4c89442438     mov qword [rsp + 0x38], r8
0x0000837e      4c895c2430     mov qword [rsp + 0x30], r11
0x00008383      e87896ffff     call sym.imp.memcpy
0x00008388      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x0000838d      4889c1         mov rcx, rax
0x00008390      4c8b542440     mov r10, qword [rsp + 0x40]
0x00008395      498b07         mov rax, qword [r15]
0x00008398      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000839d      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000083a2      e9f9fdffff     jmp 0x81a0
0x000083a7      4889d1         mov rcx, rdx
0x000083aa      eb9f           jmp 0x834b
0x000083ac      0f1f4000       nop dword [rax]
;-- __libc_csu_init:
0x000083b0      4157           push r15
0x000083b2      4156           push r14
0x000083b4      4989d7         mov r15, rdx
0x000083b7      4155           push r13
0x000083b9      4154           push r12
0x000083bb      4c8d256e2520.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x20a930 ; "@ "
0x000083c2      55             push rbp
0x000083c3      488d2d6e2520.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x20a938
0x000083ca      53             push rbx
0x000083cb      4189fd         mov r13d, edi
0x000083ce      4989f6         mov r14, rsi
0x000083d1      4c29e5         sub rbp, r12
0x000083d4      4883ec08       sub rsp, 8
0x000083d8      48c1fd03       sar rbp, 3
0x000083dc      e8df93ffff     call sym._init
0x000083e1      4885ed         test rbp, rbp
0x000083e4      7420           je 0x8406
0x000083e6      31db           xor ebx, ebx
0x000083e8      0f1f84000000.  nop dword [rax + rax]
0x000083f0      4c89fa         mov rdx, r15
0x000083f3      4c89f6         mov rsi, r14
0x000083f6      4489ef         mov edi, r13d
0x000083f9      41ff14dc       call qword [r12 + rbx*8]
0x000083fd      4883c301       add rbx, 1
0x00008401      4839dd         cmp rbp, rbx
0x00008404      75ea           jne 0x83f0
0x00008406      4883c408       add rsp, 8
0x0000840a      5b             pop rbx
0x0000840b      5d             pop rbp
0x0000840c      415c           pop r12
0x0000840e      415d           pop r13
0x00008410      415e           pop r14
0x00008412      415f           pop r15
0x00008414      c3             ret
0x00008415      90             nop
0x00008416      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00008420      f3c3           ret
0x00008422      662e0f1f8400.  nop word cs:[rax + rax]
0x0000842c      0f1f4000       nop dword [rax]
;-- atexit:
0x00008430      488b15d12b20.  mov rdx, qword [obj.__dso_handle]       ; [0x20b008:8]=0x20b008 obj.__dso_handle
0x00008437      31f6           xor esi, esi
0x00008439      e9d296ffff     jmp sym.imp.__cxa_atexit
0x0000843e      0000           add byte [rax], al
