;-- section..plt:
;-- .plt:
0x00001cf0      ff353a812000   push qword [0x00209e30]                 ; [12] -r-x section size 784 named .plt
0x00001cf6      ff253c812000   jmp qword [0x00209e38]                  ; [0x209e38:8]=0
0x00001cfc      0f1f4000       nop dword [rax]
;-- imp.getenv:
0x00001d00      ff253a812000   jmp qword [reloc.getenv]                ; [0x209e40:8]=0x1d06
0x00001d06      6800000000     push 0
0x00001d0b      e9e0ffffff     jmp sym..plt
;-- imp.abort:
0x00001d10      ff2532812000   jmp qword [reloc.abort]                 ; [0x209e48:8]=0x1d16
0x00001d16      6801000000     push 1
0x00001d1b      e9d0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x00001d20      ff252a812000   jmp qword [reloc.__errno_location]      ; [0x209e50:8]=0x1d26 ; "&\x1d"
0x00001d26      6802000000     push 2
0x00001d2b      e9c0ffffff     jmp sym..plt
;-- imp.strncmp:
0x00001d30      ff2522812000   jmp qword [reloc.strncmp]               ; [0x209e58:8]=0x1d36 ; "6\x1d"
0x00001d36      6803000000     push 3
0x00001d3b      e9b0ffffff     jmp sym..plt
;-- imp._exit:
0x00001d40      ff251a812000   jmp qword [reloc._exit]                 ; [0x209e60:8]=0x1d46 ; "F\x1d"
0x00001d46      6804000000     push 4
0x00001d4b      e9a0ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001d50      ff2512812000   jmp qword [reloc.__fpending]            ; [0x209e68:8]=0x1d56 ; "V\x1d"
0x00001d56      6805000000     push 5
0x00001d5b      e990ffffff     jmp sym..plt
;-- imp.puts:
0x00001d60      ff250a812000   jmp qword [reloc.puts]                  ; [0x209e70:8]=0x1d66 ; "f\x1d"
0x00001d66      6806000000     push 6
0x00001d6b      e980ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001d70      ff2502812000   jmp qword [reloc.textdomain]            ; [0x209e78:8]=0x1d76 ; "v\x1d"
0x00001d76      6807000000     push 7
0x00001d7b      e970ffffff     jmp sym..plt
;-- imp.fclose:
0x00001d80      ff25fa802000   jmp qword [reloc.fclose]                ; [0x209e80:8]=0x1d86
0x00001d86      6808000000     push 8
0x00001d8b      e960ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001d90      ff25f2802000   jmp qword [reloc.bindtextdomain]        ; [0x209e88:8]=0x1d96
0x00001d96      6809000000     push 9
0x00001d9b      e950ffffff     jmp sym..plt
;-- imp.dcgettext:
0x00001da0      ff25ea802000   jmp qword [reloc.dcgettext]             ; [0x209e90:8]=0x1da6
0x00001da6      680a000000     push 0xa
0x00001dab      e940ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001db0      ff25e2802000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x209e98:8]=0x1db6
0x00001db6      680b000000     push 0xb
0x00001dbb      e930ffffff     jmp sym..plt
;-- imp.strlen:
0x00001dc0      ff25da802000   jmp qword [reloc.strlen]                ; [0x209ea0:8]=0x1dc6
0x00001dc6      680c000000     push 0xc
0x00001dcb      e920ffffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001dd0      ff25d2802000   jmp qword [reloc.__stack_chk_fail]      ; [0x209ea8:8]=0x1dd6
0x00001dd6      680d000000     push 0xd
0x00001ddb      e910ffffff     jmp sym..plt
;-- imp.getopt_long:
0x00001de0      ff25ca802000   jmp qword [reloc.getopt_long]           ; [0x209eb0:8]=0x1de6
0x00001de6      680e000000     push 0xe
0x00001deb      e900ffffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001df0      ff25c2802000   jmp qword [reloc.mbrtowc]               ; [0x209eb8:8]=0x1df6
0x00001df6      680f000000     push 0xf
0x00001dfb      e9f0feffff     jmp sym..plt
;-- imp.dup2:
0x00001e00      ff25ba802000   jmp qword [reloc.dup2]                  ; [0x209ec0:8]=0x1e06
0x00001e06      6810000000     push 0x10
0x00001e0b      e9e0feffff     jmp sym..plt
;-- imp.strrchr:
0x00001e10      ff25b2802000   jmp qword [reloc.strrchr]               ; [0x209ec8:8]=0x1e16
0x00001e16      6811000000     push 0x11
0x00001e1b      e9d0feffff     jmp sym..plt
;-- imp.lseek:
0x00001e20      ff25aa802000   jmp qword [reloc.lseek]                 ; [0x209ed0:8]=0x1e26 ; "&\x1e"
0x00001e26      6812000000     push 0x12
0x00001e2b      e9c0feffff     jmp sym..plt
;-- imp.fnmatch:
0x00001e30      ff25a2802000   jmp qword [reloc.fnmatch]               ; [0x209ed8:8]=0x1e36 ; "6\x1e"
0x00001e36      6813000000     push 0x13
0x00001e3b      e9b0feffff     jmp sym..plt
;-- imp.memset:
0x00001e40      ff259a802000   jmp qword [reloc.memset]                ; [0x209ee0:8]=0x1e46 ; "F\x1e"
0x00001e46      6814000000     push 0x14
0x00001e4b      e9a0feffff     jmp sym..plt
;-- imp.freopen:
0x00001e50      ff2592802000   jmp qword [reloc.freopen]               ; [0x209ee8:8]=0x1e56 ; "V\x1e"
0x00001e56      6815000000     push 0x15
0x00001e5b      e990feffff     jmp sym..plt
;-- imp.close:
0x00001e60      ff258a802000   jmp qword [reloc.close]                 ; [0x209ef0:8]=0x1e66 ; "f\x1e"
0x00001e66      6816000000     push 0x16
0x00001e6b      e980feffff     jmp sym..plt
;-- imp.strndup:
0x00001e70      ff2582802000   jmp qword [reloc.strndup]               ; [0x209ef8:8]=0x1e76 ; "v\x1e"
0x00001e76      6817000000     push 0x17
0x00001e7b      e970feffff     jmp sym..plt
;-- imp.memcmp:
0x00001e80      ff257a802000   jmp qword [reloc.memcmp]                ; [0x209f00:8]=0x1e86
0x00001e86      6818000000     push 0x18
0x00001e8b      e960feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001e90      ff2572802000   jmp qword [reloc.fputs_unlocked]        ; [0x209f08:8]=0x1e96
0x00001e96      6819000000     push 0x19
0x00001e9b      e950feffff     jmp sym..plt
;-- imp.calloc:
0x00001ea0      ff256a802000   jmp qword [reloc.calloc]                ; [0x209f10:8]=0x1ea6
0x00001ea6      681a000000     push 0x1a
0x00001eab      e940feffff     jmp sym..plt
;-- imp.__getdelim:
0x00001eb0      ff2562802000   jmp qword [reloc.__getdelim]            ; [0x209f18:8]=0x1eb6
0x00001eb6      681b000000     push 0x1b
0x00001ebb      e930feffff     jmp sym..plt
;-- imp.strcmp:
0x00001ec0      ff255a802000   jmp qword [reloc.strcmp]                ; [0x209f20:8]=0x1ec6
0x00001ec6      681c000000     push 0x1c
0x00001ecb      e920feffff     jmp sym..plt
;-- imp.memcpy:
0x00001ed0      ff2552802000   jmp qword [reloc.memcpy]                ; [0x209f28:8]=0x1ed6
0x00001ed6      681d000000     push 0x1d
0x00001edb      e910feffff     jmp sym..plt
;-- imp.fileno:
0x00001ee0      ff254a802000   jmp qword [reloc.fileno]                ; [0x209f30:8]=0x1ee6
0x00001ee6      681e000000     push 0x1e
0x00001eeb      e900feffff     jmp sym..plt
;-- imp.fflush:
0x00001ef0      ff2542802000   jmp qword [reloc.fflush]                ; [0x209f38:8]=0x1ef6
0x00001ef6      681f000000     push 0x1f
0x00001efb      e9f0fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001f00      ff253a802000   jmp qword [reloc.nl_langinfo]           ; [0x209f40:8]=0x1f06
0x00001f06      6820000000     push 0x20                               ; "@"
0x00001f0b      e9e0fdffff     jmp sym..plt
;-- imp.__freading:
0x00001f10      ff2532802000   jmp qword [reloc.__freading]            ; [0x209f48:8]=0x1f16
0x00001f16      6821000000     push 0x21                               ; '!'
0x00001f1b      e9d0fdffff     jmp sym..plt
;-- imp.fwrite_unlocked:
0x00001f20      ff252a802000   jmp qword [reloc.fwrite_unlocked]       ; [0x209f50:8]=0x1f26 ; "&\x1f"
0x00001f26      6822000000     push 0x22                               ; '"'
0x00001f2b      e9c0fdffff     jmp sym..plt
;-- imp.realloc:
0x00001f30      ff2522802000   jmp qword [reloc.realloc]               ; [0x209f58:8]=0x1f36 ; "6\x1f"
0x00001f36      6823000000     push 0x23                               ; '#'
0x00001f3b      e9b0fdffff     jmp sym..plt
;-- imp.setlocale:
0x00001f40      ff251a802000   jmp qword [reloc.setlocale]             ; [0x209f60:8]=0x1f46 ; "F\x1f"
0x00001f46      6824000000     push 0x24                               ; '$'
0x00001f4b      e9a0fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001f50      ff2512802000   jmp qword [reloc.__printf_chk]          ; [0x209f68:8]=0x1f56 ; "V\x1f"
0x00001f56      6825000000     push 0x25                               ; '%'
0x00001f5b      e990fdffff     jmp sym..plt
;-- imp.error:
0x00001f60      ff250a802000   jmp qword [reloc.error]                 ; [0x209f70:8]=0x1f66 ; "f\x1f"
0x00001f66      6826000000     push 0x26                               ; '&'
0x00001f6b      e980fdffff     jmp sym..plt
;-- imp.open:
0x00001f70      ff2502802000   jmp qword [reloc.open]                  ; [0x209f78:8]=0x1f76 ; "v\x1f"
0x00001f76      6827000000     push 0x27                               ; '''
0x00001f7b      e970fdffff     jmp sym..plt
;-- imp.fseeko:
0x00001f80      ff25fa7f2000   jmp qword [reloc.fseeko]                ; [0x209f80:8]=0x1f86
0x00001f86      6828000000     push 0x28                               ; '('
0x00001f8b      e960fdffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001f90      ff25f27f2000   jmp qword [reloc.__cxa_atexit]          ; [0x209f88:8]=0x1f96
0x00001f96      6829000000     push 0x29                               ; ')'
0x00001f9b      e950fdffff     jmp sym..plt
;-- imp.exit:
0x00001fa0      ff25ea7f2000   jmp qword [reloc.exit]                  ; [0x209f90:8]=0x1fa6
0x00001fa6      682a000000     push 0x2a                               ; '*'
0x00001fab      e940fdffff     jmp sym..plt
;-- imp.fwrite:
0x00001fb0      ff25e27f2000   jmp qword [reloc.fwrite]                ; [0x209f98:8]=0x1fb6
0x00001fb6      682b000000     push 0x2b                               ; '+'
0x00001fbb      e930fdffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001fc0      ff25da7f2000   jmp qword [reloc.__fprintf_chk]         ; [0x209fa0:8]=0x1fc6
0x00001fc6      682c000000     push 0x2c                               ; ','
0x00001fcb      e920fdffff     jmp sym..plt
;-- imp.mbsinit:
0x00001fd0      ff25d27f2000   jmp qword [reloc.mbsinit]               ; [0x209fa8:8]=0x1fd6
0x00001fd6      682d000000     push 0x2d                               ; '-'
0x00001fdb      e910fdffff     jmp sym..plt
;-- imp.iswprint:
0x00001fe0      ff25ca7f2000   jmp qword [reloc.iswprint]              ; [0x209fb0:8]=0x1fe6
0x00001fe6      682e000000     push 0x2e                               ; '.'
0x00001feb      e900fdffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00001ff0      ff25c27f2000   jmp qword [reloc.__ctype_b_loc]         ; [0x209fb8:8]=0x1ff6
0x00001ff6      682f000000     push 0x2f                               ; '/'
0x00001ffb      e9f0fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00002000      .qword 0x906600207fba25ff                              ; [13] -r-x section size 24 named .plt.got
0x00002008      .qword 0x906600207fd225ff
0x00002010      .qword 0x906600207fda25ff
0x00002018      0000           add byte [rax], al
0x0000201a      0000           add byte [rax], al
0x0000201c      0000           add byte [rax], al
0x0000201e      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x00002020      4156           push r14                                ; [14] -r-x section size 16750 named .text
0x00002022      4155           push r13
0x00002024      41bd02000000   mov r13d, 2
0x0000202a      4154           push r12
0x0000202c      55             push rbp
0x0000202d      89fd           mov ebp, edi
0x0000202f      53             push rbx
0x00002030      488b3e         mov rdi, qword [rsi]
0x00002033      4889f3         mov rbx, rsi
0x00002036      4531e4         xor r12d, r12d
0x00002039      e8d2140000     call sym.set_program_name
0x0000203e      488d35804200.  lea rsi, [0x000062c5]
0x00002045      bf06000000     mov edi, 6
0x0000204a      e8f1feffff     call sym.imp.setlocale
0x0000204f      488d35834200.  lea rsi, str.usr_local_share_locale     ; 0x62d9 ; "/usr/local/share/locale"
0x00002056      488d3d1c4200.  lea rdi, [0x00006279]                   ; "coreutils"
0x0000205d      e82efdffff     call sym.imp.bindtextdomain
0x00002062      488d3d104200.  lea rdi, [0x00006279]                   ; "coreutils"
0x00002069      e802fdffff     call sym.imp.textdomain
0x0000206e      488d3d3b1100.  lea rdi, sym.close_stdout               ; 0x31b0 ; "USH\x83\xec\bH\x8b=\xebn "
0x00002075      e806410000     call sym.atexit
0x0000207a      488d0ddf7720.  lea rcx, obj.long_options               ; 0x209860 ; " c"
0x00002081      488d15784200.  lea rdx, [0x00006300]                   ; "bcp"
0x00002088      4531c0         xor r8d, r8d
0x0000208b      4889de         mov rsi, rbx
0x0000208e      89ef           mov edi, ebp
0x00002090      e84bfdffff     call sym.imp.getopt_long
0x00002095      83f8ff         cmp eax, 0xffffffff
0x00002098      0f847d000000   je 0x211b
0x0000209e      83f862         cmp eax, 0x62
0x000020a1      745d           je 0x2100
0x000020a3      7e1b           jle 0x20c0
0x000020a5      83f863         cmp eax, 0x63
0x000020a8      7466           je 0x2110
0x000020aa      83f870         cmp eax, 0x70
0x000020ad      0f8535030000   jne 0x23e8
0x000020b3      41bc01000000   mov r12d, 1
0x000020b9      ebbf           jmp 0x207a
0x000020bb      0f1f440000     nop dword [rax + rax]
0x000020c0      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x000020c5      0f85d6020000   jne 0x23a1
0x000020cb      488b3dd67f20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x000020d2      488b0d377f20.  mov rcx, qword [obj.Version]            ; [0x20a010:8]=0x79a4 str.8.31
0x000020d9      4c8d05114200.  lea r8, str.H._Peter_Anvin              ; 0x62f1 ; "H. Peter Anvin"
0x000020e0      488d158e4100.  lea rdx, str.GNU_coreutils              ; 0x6275 ; "GNU coreutils"
0x000020e7      488d35e94000.  lea rsi, str.dircolors                  ; 0x61d7 ; "dircolors"
0x000020ee      4531c9         xor r9d, r9d
0x000020f1      31c0           xor eax, eax
0x000020f3      e808360000     call sym.version_etc
0x000020f8      31ff           xor edi, edi
0x000020fa      e8a1feffff     call sym.imp.exit
0x000020ff      90             nop
0x00002100      4531ed         xor r13d, r13d
0x00002103      e972ffffff     jmp 0x207a
0x00002108      0f1f84000000.  nop dword [rax + rax]
0x00002110      41bd01000000   mov r13d, 1
0x00002116      e95fffffff     jmp 0x207a
0x0000211b      486305967f20.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20a0b8:4]=0
0x00002122      29c5           sub ebp, eax
0x00002124      4183fd02       cmp r13d, 2
0x00002128      488d1cc3       lea rbx, [rbx + rax*8]
0x0000212c      7409           je 0x2137
0x0000212e      4584e4         test r12b, r12b
0x00002131      0f85df020000   jne 0x2416
0x00002137      4489e0         mov eax, r12d
0x0000213a      83f001         xor eax, 1
0x0000213d      0fb6c0         movzx eax, al
0x00002140      39e8           cmp eax, ebp
0x00002142      0f8c67020000   jl 0x23af
0x00002148      4584e4         test r12b, r12b
0x0000214b      744a           je 0x2197
0x0000214d      488d1d8c4700.  lea rbx, obj.G_line                     ; 0x68e0 ; "# Configuration file for dircolors, a utility to help you set the"
0x00002154      4883cdff       or rbp, 0xffffffffffffffff
0x00002158      4989dd         mov r13, rbx
0x0000215b      eb1b           jmp 0x2178
0x0000215d      4c89ef         mov rdi, r13
0x00002160      e8fbfbffff     call sym.imp.puts
0x00002165      31c0           xor eax, eax
0x00002167      4c89ef         mov rdi, r13
0x0000216a      4889e9         mov rcx, rbp
0x0000216d      f2ae           repne scasb al, byte [rdi]
0x0000216f      4889c8         mov rax, rcx
0x00002172      48f7d0         not rax
0x00002175      4901c5         add r13, rax
0x00002178      4c89e8         mov rax, r13
0x0000217b      4829d8         sub rax, rbx
0x0000217e      483dc3100000   cmp rax, 0x10c3
0x00002184      76d7           jbe 0x215d
0x00002186      4183f401       xor r12d, 1
0x0000218a      5b             pop rbx
0x0000218b      410fb6c4       movzx eax, r12b
0x0000218f      5d             pop rbp
0x00002190      415c           pop r12
0x00002192      415d           pop r13
0x00002194      415e           pop r14
0x00002196      c3             ret
0x00002197      4183fd02       cmp r13d, 2
0x0000219b      0f8460010000   je 0x2301
0x000021a1      4c8b05187e20.  mov r8, qword [reloc.free]              ; [0x209fc0:8]=0
0x000021a8      488b0d317e20.  mov rcx, qword [reloc.malloc]           ; [0x209fe0:8]=0
0x000021af      488d3d4a7f20.  lea rdi, obj.lsc_obstack                ; 0x20a100
0x000021b6      31d2           xor edx, edx
0x000021b8      31f6           xor esi, esi
0x000021ba      e8113c0000     call sym._obstack_begin
0x000021bf      85ed           test ebp, ebp
0x000021c1      0f8429010000   je 0x22f0
0x000021c7      488b1b         mov rbx, qword [rbx]
0x000021ca      488d35395800.  lea rsi, [0x00007a0a]                   ; "-"
0x000021d1      4889df         mov rdi, rbx
0x000021d4      e8e7fcffff     call sym.imp.strcmp
0x000021d9      85c0           test eax, eax
0x000021db      741f           je 0x21fc
0x000021dd      488b15cc7e20.  mov rdx, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20a0b0:8]=0
0x000021e4      488d35c85700.  lea rsi, [0x000079b3]                   ; "r"
0x000021eb      4889df         mov rdi, rbx
0x000021ee      e86d110000     call sym.freopen_safer
0x000021f3      4885c0         test rax, rax
0x000021f6      0f8468010000   je 0x2364
0x000021fc      488b3dad7e20.  mov rdi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20a0b0:8]=0
0x00002203      4889de         mov rsi, rbx
0x00002206      e895050000     call sym.dc_parse_stream
0x0000220b      488b3d9e7e20.  mov rdi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20a0b0:8]=0
0x00002212      89c5           mov ebp, eax
0x00002214      e8f7380000     call sym.rpl_fclose
0x00002219      85c0           test eax, eax
0x0000221b      0f8543010000   jne 0x2364
0x00002221      4189ec         mov r12d, ebp
0x00002224      4584e4         test r12b, r12b
0x00002227      0f8459ffffff   je 0x2186
0x0000222d      488b05e47e20.  mov rax, qword [0x0020a118]             ; [0x20a118:8]=0
0x00002234      488b2dd57e20.  mov rbp, qword [0x0020a110]             ; [0x20a110:8]=0
0x0000223b      4889c3         mov rbx, rax
0x0000223e      4829eb         sub rbx, rbp
0x00002241      4839e8         cmp rax, rbp
0x00002244      0f844b010000   je 0x2395
0x0000224a      488b15df7e20.  mov rdx, qword [0x0020a130]             ; [0x20a130:8]=0
0x00002251      488b0dc87e20.  mov rcx, qword [0x0020a120]             ; [0x20a120:8]=0
0x00002258      4801d0         add rax, rdx
0x0000225b      48f7d2         not rdx
0x0000225e      4889ce         mov rsi, rcx
0x00002261      4821d0         and rax, rdx
0x00002264      488b159d7e20.  mov rdx, qword [0x0020a108]             ; [0x20a108:8]=0
0x0000226b      488905a67e20.  mov qword [0x0020a118], rax             ; [0x20a118:8]=0
0x00002272      4829d6         sub rsi, rdx
0x00002275      4829d0         sub rax, rdx
0x00002278      4839f0         cmp rax, rsi
0x0000227b      7607           jbe 0x2284
0x0000227d      48890d947e20.  mov qword [0x0020a118], rcx             ; [0x20a118:8]=0
0x00002284      488b058d7e20.  mov rax, qword [0x0020a118]             ; [0x20a118:8]=0
0x0000228b      4c8d35314000.  lea r14, [0x000062c3]                   ; "'\n"
0x00002292      4585ed         test r13d, r13d
0x00002295      488b350c7e20.  mov rsi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x0000229c      488d3d234000.  lea rdi, str.setenv_LS_COLORS           ; 0x62c6 ; "setenv LS_COLORS '"
0x000022a3      488905667e20.  mov qword [0x0020a110], rax             ; [0x20a110:8]=0
0x000022aa      488d05f13f00.  lea rax, str.export_LS_COLORS           ; 0x62a2 ; "';\nexport LS_COLORS\n"
0x000022b1      4c0f44f0       cmove r14, rax
0x000022b5      488d05fb3f00.  lea rax, str.LS_COLORS                  ; 0x62b7 ; "LS_COLORS='"
0x000022bc      480f44f8       cmove rdi, rax
0x000022c0      e8cbfbffff     call sym.imp.fputs_unlocked
0x000022c5      488b0ddc7d20.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x000022cc      4889ef         mov rdi, rbp
0x000022cf      4889da         mov rdx, rbx
0x000022d2      be01000000     mov esi, 1
0x000022d7      e844fcffff     call sym.imp.fwrite_unlocked
0x000022dc      488b35c57d20.  mov rsi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x000022e3      4c89f7         mov rdi, r14
0x000022e6      e8a5fbffff     call sym.imp.fputs_unlocked
0x000022eb      e996feffff     jmp 0x2186
0x000022f0      31f6           xor esi, esi
0x000022f2      31ff           xor edi, edi
0x000022f4      e8a7040000     call sym.dc_parse_stream
0x000022f9      4189c4         mov r12d, eax
0x000022fc      e923ffffff     jmp 0x2224
0x00002301      488d3dfc3f00.  lea rdi, str.SHELL                      ; 0x6304 ; "SHELL"
0x00002308      e8f3f9ffff     call sym.imp.getenv
0x0000230d      4885c0         test rax, rax
0x00002310      0f84dc000000   je 0x23f2
0x00002316      803800         cmp byte [rax], 0
0x00002319      0f84d3000000   je 0x23f2
0x0000231f      4889c7         mov rdi, rax
0x00002322      41bd01000000   mov r13d, 1
0x00002328      e8330f0000     call sym.last_component
0x0000232d      488d35d73f00.  lea rsi, [0x0000630b]                   ; "csh"
0x00002334      4889c7         mov rdi, rax
0x00002337      4989c6         mov r14, rax
0x0000233a      e881fbffff     call sym.imp.strcmp
0x0000233f      85c0           test eax, eax
0x00002341      0f845afeffff   je 0x21a1
0x00002347      488d35bc3f00.  lea rsi, str.tcsh                       ; 0x630a ; "tcsh"
0x0000234e      4c89f7         mov rdi, r14
0x00002351      4531ed         xor r13d, r13d
0x00002354      e867fbffff     call sym.imp.strcmp
0x00002359      85c0           test eax, eax
0x0000235b      410f94c5       sete r13b
0x0000235f      e93dfeffff     jmp 0x21a1
0x00002364      4889da         mov rdx, rbx
0x00002367      31ff           xor edi, edi
0x00002369      be03000000     mov esi, 3
0x0000236e      e8dd2c0000     call sym.quotearg_n_style_colon
0x00002373      4889c3         mov rbx, rax
0x00002376      e8a5f9ffff     call sym.imp.__errno_location
0x0000237b      8b30           mov esi, dword [rax]
0x0000237d      488d15355600.  lea rdx, [0x000079b9]                   ; "%s"
0x00002384      4889d9         mov rcx, rbx
0x00002387      31ff           xor edi, edi
0x00002389      31c0           xor eax, eax
0x0000238b      e8d0fbffff     call sym.imp.error
0x00002390      e9f1fdffff     jmp 0x2186
0x00002395      800db47d2000.  or byte [0x0020a150], 2                 ; [0x20a150:1]=0
0x0000239c      e9a9feffff     jmp 0x224a
0x000023a1      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x000023a6      7540           jne 0x23e8
0x000023a8      31ff           xor edi, edi
0x000023aa      e8210a0000     call sym.usage
0x000023af      4584e4         test r12b, r12b
0x000023b2      0f8581000000   jne 0x2439
0x000023b8      488b7b08       mov rdi, qword [rbx + 8]
0x000023bc      e85f2e0000     call sym.quote
0x000023c1      488d35473f00.  lea rsi, str.extra_operand__s           ; 0x630f ; "extra operand %s"
0x000023c8      4889c3         mov rbx, rax
0x000023cb      ba05000000     mov edx, 5
0x000023d0      31ff           xor edi, edi
0x000023d2      e8c9f9ffff     call sym.imp.dcgettext
0x000023d7      4889d9         mov rcx, rbx
0x000023da      4889c2         mov rdx, rax
0x000023dd      31f6           xor esi, esi
0x000023df      31ff           xor edi, edi
0x000023e1      31c0           xor eax, eax
0x000023e3      e878fbffff     call sym.imp.error
0x000023e8      bf01000000     mov edi, 1
0x000023ed      e8de090000     call sym.usage
0x000023f2      488d35674400.  lea rsi, str.no_SHELL_environment_variable__and_no_shell_type_option_given ; 0x6860 ; "no SHELL environment variable, and no shell type option given"
0x000023f9      ba05000000     mov edx, 5
0x000023fe      31ff           xor edi, edi
0x00002400      e89bf9ffff     call sym.imp.dcgettext
0x00002405      31f6           xor esi, esi
0x00002407      4889c2         mov rdx, rax
0x0000240a      bf01000000     mov edi, 1
0x0000240f      31c0           xor eax, eax
0x00002411      e84afbffff     call sym.imp.error
0x00002416      488d35db4300.  lea rsi, str.the_options_to_output_dircolors__internal_database_and__to_select_a_shell_syntax_are_mutually_exclusive ; 0x67f8 ; "the options to output dircolors' internal database and\nto select a shell syntax are mutually exclusive"
0x0000241d      31ff           xor edi, edi
0x0000241f      ba05000000     mov edx, 5
0x00002424      e877f9ffff     call sym.imp.dcgettext
0x00002429      31f6           xor esi, esi
0x0000242b      4889c2         mov rdx, rax
0x0000242e      31ff           xor edi, edi
0x00002430      31c0           xor eax, eax
0x00002432      e829fbffff     call sym.imp.error
0x00002437      ebaf           jmp 0x23e8
0x00002439      488b3b         mov rdi, qword [rbx]
0x0000243c      e8df2d0000     call sym.quote
0x00002441      488d35c73e00.  lea rsi, str.extra_operand__s           ; 0x630f ; "extra operand %s"
0x00002448      4889c3         mov rbx, rax
0x0000244b      31ff           xor edi, edi
0x0000244d      ba05000000     mov edx, 5
0x00002452      e849f9ffff     call sym.imp.dcgettext
0x00002457      4889d9         mov rcx, rbx
0x0000245a      4889c2         mov rdx, rax
0x0000245d      31f6           xor esi, esi
0x0000245f      31ff           xor edi, edi
0x00002461      31c0           xor eax, eax
0x00002463      e8f8faffff     call sym.imp.error
0x00002468      488d35314400.  lea rsi, str.file_operands_cannot_be_combined_with___print_database___p ; 0x68a0 ; "file operands cannot be combined with --print-database (-p)"
0x0000246f      31ff           xor edi, edi
0x00002471      ba05000000     mov edx, 5
0x00002476      e825f9ffff     call sym.imp.dcgettext
0x0000247b      488b3d5e7c20.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a0e0:8]=0
0x00002482      488d15675a00.  lea rdx, [0x00007ef0]                   ; "%s\n"
0x00002489      4889c1         mov rcx, rax
0x0000248c      be01000000     mov esi, 1
0x00002491      31c0           xor eax, eax
0x00002493      e828fbffff     call sym.imp.__fprintf_chk
0x00002498      e94bffffff     jmp 0x23e8
0x0000249d      0f1f00         nop dword [rax]
;-- entry0:
;-- _start:
;-- rip:
0x000024a0      31ed           xor ebp, ebp
0x000024a2      4989d1         mov r9, rdx
0x000024a5      5e             pop rsi
0x000024a6      4889e2         mov rdx, rsp
0x000024a9      4883e4f0       and rsp, 0xfffffffffffffff0
0x000024ad      50             push rax
0x000024ae      54             push rsp
0x000024af      4c8d05ba3c00.  lea r8, sym.__libc_csu_fini             ; 0x6170
0x000024b6      488d0d433c00.  lea rcx, sym.__libc_csu_init            ; 0x6100 ; "AWAVI\x89\xd7AUATL\x8d%>7 "
0x000024bd      488d3d5cfbff.  lea rdi, main                           ; sym.main
                                                                       ; 0x2020 ; "AVAUA\xbd\x02"
0x000024c4      ff15067b2000   call qword [reloc.__libc_start_main]    ; [0x209fd0:8]=0
0x000024ca      f4             hlt
0x000024cb      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x000024d0      488d3db17b20.  lea rdi, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x20a088
0x000024d7      55             push rbp
0x000024d8      488d05a97b20.  lea rax, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x20a088
0x000024df      4839f8         cmp rax, rdi
0x000024e2      4889e5         mov rbp, rsp
0x000024e5      7419           je 0x2500
0x000024e7      488b05da7a20.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x209fc8:8]=0
0x000024ee      4885c0         test rax, rax
0x000024f1      740d           je 0x2500
0x000024f3      5d             pop rbp
0x000024f4      ffe0           jmp rax
0x000024f6      662e0f1f8400.  nop word cs:[rax + rax]
0x00002500      5d             pop rbp
0x00002501      c3             ret
0x00002502      0f1f4000       nop dword [rax]
0x00002506      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00002510      488d3d717b20.  lea rdi, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x20a088
0x00002517      488d356a7b20.  lea rsi, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x20a088
0x0000251e      55             push rbp
0x0000251f      4829fe         sub rsi, rdi
0x00002522      4889e5         mov rbp, rsp
0x00002525      48c1fe03       sar rsi, 3
0x00002529      4889f0         mov rax, rsi
0x0000252c      48c1e83f       shr rax, 0x3f
0x00002530      4801c6         add rsi, rax
0x00002533      48d1fe         sar rsi, 1
0x00002536      7418           je 0x2550
0x00002538      488b05a97a20.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x209fe8:8]=0
0x0000253f      4885c0         test rax, rax
0x00002542      740c           je 0x2550
0x00002544      5d             pop rbp
0x00002545      ffe0           jmp rax
0x00002547      660f1f840000.  nop word [rax + rax]
0x00002550      5d             pop rbp
0x00002551      c3             ret
0x00002552      0f1f4000       nop dword [rax]
0x00002556      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00002560      803d817b2000.  cmp byte [obj.completed.7697], 0        ; [0x20a0e8:1]=0
0x00002567      752f           jne 0x2598
0x00002569      48833d7f7a20.  cmp qword [reloc.__cxa_finalize], 0     ; [0x209ff0:8]=0
0x00002571      55             push rbp
0x00002572      4889e5         mov rbp, rsp
0x00002575      740c           je 0x2583
0x00002577      488b3d8a7a20.  mov rdi, qword [obj.__dso_handle]       ; [0x20a008:8]=0x20a008 obj.__dso_handle
0x0000257e      e88dfaffff     call 0x2010
0x00002583      e848ffffff     call sym.deregister_tm_clones
0x00002588      c605597b2000.  mov byte [obj.completed.7697], 1        ; [0x20a0e8:1]=0
0x0000258f      5d             pop rbp
0x00002590      c3             ret
0x00002591      0f1f80000000.  nop dword [rax]
0x00002598      f3c3           ret
0x0000259a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x000025a0      55             push rbp
0x000025a1      4889e5         mov rbp, rsp
0x000025a4      5d             pop rbp
0x000025a5      e966ffffff     jmp sym.register_tm_clones
0x000025aa      660f1f440000   nop word [rax + rax]
;-- append_quoted:
0x000025b0      0fb617         movzx edx, byte [rdi]                   ; /src:196
0x000025b3      84d2           test dl, dl
0x000025b5      0f84b5010000   je 0x2770
0x000025bb      4154           push r12
0x000025bd      41bc01000000   mov r12d, 1                             ; /src:197
0x000025c3      55             push rbp                                ; /src:196
0x000025c4      488d2d357b20.  lea rbp, obj.lsc_obstack                ; /src:218 ; 0x20a100
0x000025cb      53             push rbx                                ; /src:196
0x000025cc      4889fb         mov rbx, rdi
0x000025cf      eb74           jmp 0x2645
0x000025d1      0f1f80000000.  nop dword [rax]
0x000025d8      80fa27         cmp dl, 0x27                            ; /src:201
0x000025db      0f84bf000000   je 0x26a0
0x000025e1      80fa3a         cmp dl, 0x3a
0x000025e4      0f85a6000000   jne 0x2690
0x000025ea      4584e4         test r12b, r12b                         ; /src:217
0x000025ed      0f849d000000   je 0x2690
0x000025f3      4839c1         cmp rcx, rax                            ; /src:218
0x000025f6      0f847c010000   je 0x2778
0x000025fc      488d5001       lea rdx, [rax + 1]
0x00002600      488915117b20.  mov qword [0x0020a118], rdx             ; [0x20a118:8]=0
0x00002607      c6005c         mov byte [rax], 0x5c                    ; '\'
                                                                       ; [0x5c:1]=0
0x0000260a      488b0d0f7b20.  mov rcx, qword [0x0020a120]             ; [0x20a120:8]=0
0x00002611      488b05007b20.  mov rax, qword [0x0020a118]             ; [0x20a118:8]=0
0x00002618      0f1f84000000.  nop dword [rax + rax]
0x00002620      4839c1         cmp rcx, rax                            ; /src:226
0x00002623      744c           je 0x2671
0x00002625      488d5001       lea rdx, [rax + 1]
0x00002629      4883c301       add rbx, 1                              ; /src:227
0x0000262d      488915e47a20.  mov qword [0x0020a118], rdx             ; /src:226 ; [0x20a118:8]=0
0x00002634      0fb653ff       movzx edx, byte [rbx - 1]
0x00002638      8810           mov byte [rax], dl
0x0000263a      0fb613         movzx edx, byte [rbx]                   ; /src:199
0x0000263d      84d2           test dl, dl
0x0000263f      0f84cb000000   je 0x2710
0x00002645      80fa3d         cmp dl, 0x3d                            ; /src:201
0x00002648      488b0dd17a20.  mov rcx, qword [0x0020a120]             ; [0x20a120:8]=0
0x0000264f      488b05c27a20.  mov rax, qword [0x0020a118]             ; [0x20a118:8]=0
0x00002656      7492           je 0x25ea
0x00002658      0f8e7affffff   jle 0x25d8
0x0000265e      80fa5c         cmp dl, 0x5c
0x00002661      7405           je 0x2668
0x00002663      80fa5e         cmp dl, 0x5e
0x00002666      7528           jne 0x2690
0x00002668      4183f401       xor r12d, 1                             ; /src:212
0x0000266c      4839c1         cmp rcx, rax                            ; /src:226
0x0000266f      75b4           jne 0x2625
0x00002671      be01000000     mov esi, 1
0x00002676      4889ef         mov rdi, rbp
0x00002679      e892370000     call sym._obstack_newchunk
0x0000267e      488b05937a20.  mov rax, qword [0x0020a118]             ; [0x20a118:8]=0
0x00002685      eb9e           jmp 0x2625
0x00002687      660f1f840000.  nop word [rax + rax]
0x00002690      41bc01000000   mov r12d, 1                             ; /src:222
0x00002696      eb88           jmp 0x2620
0x00002698      0f1f84000000.  nop dword [rax + rax]
0x000026a0      4839c1         cmp rcx, rax                            ; /src:204
0x000026a3      7473           je 0x2718
0x000026a5      488d5001       lea rdx, [rax + 1]
0x000026a9      488915687a20.  mov qword [0x0020a118], rdx             ; [0x20a118:8]=0
0x000026b0      c60027         mov byte [rax], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x000026b3      488b055e7a20.  mov rax, qword [0x0020a118]             ; /src:205 ; [0x20a118:8]=0
0x000026ba      4839055f7a20.  cmp qword [0x0020a120], rax             ; [0x20a120:8]=0
0x000026c1      0f8489000000   je 0x2750
0x000026c7      488d5001       lea rdx, [rax + 1]
0x000026cb      488915467a20.  mov qword [0x0020a118], rdx             ; [0x20a118:8]=0
0x000026d2      c6005c         mov byte [rax], 0x5c                    ; '\'
                                                                       ; [0x5c:1]=0
0x000026d5      488b053c7a20.  mov rax, qword [0x0020a118]             ; /src:206 ; [0x20a118:8]=0
0x000026dc      4839053d7a20.  cmp qword [0x0020a120], rax             ; [0x20a120:8]=0
0x000026e3      7453           je 0x2738
0x000026e5      488d5001       lea rdx, [rax + 1]
0x000026e9      41bc01000000   mov r12d, 1                             ; /src:207
0x000026ef      488915227a20.  mov qword [0x0020a118], rdx             ; /src:206 ; [0x20a118:8]=0
0x000026f6      c60027         mov byte [rax], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x000026f9      488b0d207a20.  mov rcx, qword [0x0020a120]             ; [0x20a120:8]=0
0x00002700      488b05117a20.  mov rax, qword [0x0020a118]             ; [0x20a118:8]=0
0x00002707      e914ffffff     jmp 0x2620                              ; /src:208
0x0000270c      0f1f4000       nop dword [rax]
0x00002710      5b             pop rbx                                 ; /src:229
0x00002711      5d             pop rbp
0x00002712      415c           pop r12
0x00002714      c3             ret
0x00002715      0f1f00         nop dword [rax]
0x00002718      be01000000     mov esi, 1                              ; /src:204
0x0000271d      4889ef         mov rdi, rbp
0x00002720      e8eb360000     call sym._obstack_newchunk
0x00002725      488b05ec7920.  mov rax, qword [0x0020a118]             ; [0x20a118:8]=0
0x0000272c      e974ffffff     jmp 0x26a5
0x00002731      0f1f80000000.  nop dword [rax]
0x00002738      be01000000     mov esi, 1                              ; /src:206
0x0000273d      4889ef         mov rdi, rbp
0x00002740      e8cb360000     call sym._obstack_newchunk
0x00002745      488b05cc7920.  mov rax, qword [0x0020a118]             ; [0x20a118:8]=0
0x0000274c      eb97           jmp 0x26e5
0x0000274e      6690           nop
0x00002750      be01000000     mov esi, 1                              ; /src:205
0x00002755      4889ef         mov rdi, rbp
0x00002758      e8b3360000     call sym._obstack_newchunk
0x0000275d      488b05b47920.  mov rax, qword [0x0020a118]             ; [0x20a118:8]=0
0x00002764      e95effffff     jmp 0x26c7
0x00002769      0f1f80000000.  nop dword [rax]
0x00002770      f3c3           ret
0x00002772      660f1f440000   nop word [rax + rax]
0x00002778      be01000000     mov esi, 1                              ; /src:218
0x0000277d      4889ef         mov rdi, rbp
0x00002780      e88b360000     call sym._obstack_newchunk
0x00002785      488b058c7920.  mov rax, qword [0x0020a118]             ; [0x20a118:8]=0
0x0000278c      e96bfeffff     jmp 0x25fc
0x00002791      0f1f440000     nop dword [rax + rax]
0x00002796      662e0f1f8400.  nop word cs:[rax + rax]
;-- dc_parse_stream:
0x000027a0      4157           push r15                                ; /src:240
0x000027a2      4156           push r14
0x000027a4      4989fe         mov r14, rdi
0x000027a7      4155           push r13
0x000027a9      4154           push r12
0x000027ab      488d3dfe3900.  lea rdi, str.TERM                       ; /src:253 ; 0x61b0 ; "TERM"
0x000027b2      55             push rbp                                ; /src:240
0x000027b3      53             push rbx
0x000027b4      4883ec48       sub rsp, 0x48
0x000027b8      64488b042528.  mov rax, qword fs:[0x28]
0x000027c1      4889442438     mov qword [rsp + 0x38], rax
0x000027c6      31c0           xor eax, eax
0x000027c8      4889742408     mov qword [rsp + 8], rsi
0x000027cd      48c744242800.  mov qword [rsp + 0x28], 0               ; /src:243
0x000027d6      48c744243000.  mov qword [rsp + 0x30], 0               ; /src:244
0x000027df      e81cf5ffff     call sym.imp.getenv                     ; /src:253
0x000027e4      4885c0         test rax, rax                           ; /src:254
0x000027e7      0f84fb030000   je 0x2be8
0x000027ed      803800         cmp byte [rax], 0                       ; /src:255
0x000027f0      4889c7         mov rdi, rax
0x000027f3      488d05aa3900.  lea rax, str.none                       ; 0x61a4 ; "none"
0x000027fa      480f45c7       cmovne rax, rdi
0x000027fe      4889442410     mov qword [rsp + 0x10], rax
0x00002803      4c8d25d64000.  lea r12, obj.G_line                     ; /src:290 ; 0x68e0 ; "# Configuration file for dircolors, a utility to help you set the"
0x0000280a      c70424030000.  mov dword [rsp], 3
0x00002811      c644240701     mov byte [rsp + 7], 1
0x00002816      31ed           xor ebp, ebp
0x00002818      0f1f84000000.  nop dword [rax + rax]
0x00002820      4883c501       add rbp, 1                              ; /src:262
0x00002824      4d85f6         test r14, r14                           ; /src:264
0x00002827      0f84a0010000   je 0x29cd
0x0000282d      488d742430     lea rsi, [rsp + 0x30]                   ; /coreutils-8.31/lib:117
0x00002832      488d7c2428     lea rdi, [rsp + 0x28]
0x00002837      4c89f1         mov rcx, r14
0x0000283a      ba0a000000     mov edx, 0xa
0x0000283f      e86cf6ffff     call sym.imp.__getdelim
0x00002844      4885c0         test rax, rax                           ; /src:266
0x00002847      0f8e01030000   jle 0x2b4e
0x0000284d      4c8b7c2428     mov r15, qword [rsp + 0x28]             ; /src:271
0x00002852      e899f7ffff     call sym.imp.__ctype_b_loc              ; /src:152
0x00002857      488b08         mov rcx, qword [rax]
0x0000285a      4989c5         mov r13, rax
0x0000285d      410fb617       movzx edx, byte [r15]
0x00002861      f644510120     test byte [rcx + rdx*2 + 1], 0x20
0x00002866      0f85a4010000   jne 0x2a10
0x0000286c      84d2           test dl, dl                             ; /src:156
0x0000286e      74b0           je 0x2820
0x00002870      80fa23         cmp dl, 0x23
0x00002873      74ab           je 0x2820
0x00002875      4c89fb         mov rbx, r15
0x00002878      0f1f84000000.  nop dword [rax + rax]
0x00002880      4883c301       add rbx, 1                              ; /src:163
0x00002884      0fb603         movzx eax, byte [rbx]                   ; /src:161
0x00002887      4889c2         mov rdx, rax
0x0000288a      0fb70441       movzx eax, word [rcx + rax*2]
0x0000288e      66c1e80d       shr ax, 0xd
0x00002892      83f001         xor eax, 1
0x00002895      84d2           test dl, dl
0x00002897      0f95c2         setne dl
0x0000289a      84c2           test dl, al
0x0000289c      75e2           jne 0x2880
0x0000289e      4889de         mov rsi, rbx                            ; /src:166
0x000028a1      4c89ff         mov rdi, r15
0x000028a4      4c29fe         sub rsi, r15
0x000028a7      e844320000     call sym.xstrndup
0x000028ac      803b00         cmp byte [rbx], 0                       ; /src:167
0x000028af      4989c7         mov r15, rax                            ; /src:166
0x000028b2      0f8468010000   je 0x2a20                               ; /src:167
0x000028b8      498b4d00       mov rcx, qword [r13]                    ; /src:174
0x000028bc      0f1f4000       nop dword [rax]
0x000028c0      4883c301       add rbx, 1                              ; /src:172
0x000028c4      0fb613         movzx edx, byte [rbx]                   ; /src:174
0x000028c7      f644510120     test byte [rcx + rdx*2 + 1], 0x20
0x000028cc      4889d0         mov rax, rdx
0x000028cf      75ef           jne 0x28c0
0x000028d1      84d2           test dl, dl                             ; /src:176
0x000028d3      0f8447010000   je 0x2a20
0x000028d9      3c23           cmp al, 0x23
0x000028db      4889da         mov rdx, rbx                            ; /src:172
0x000028de      750b           jne 0x28eb                              ; /src:176
0x000028e0      e93b010000     jmp 0x2a20
0x000028e5      0f1f00         nop dword [rax]
0x000028e8      4889f2         mov rdx, rsi                            ; /src:181
0x000028eb      0fb64201       movzx eax, byte [rdx + 1]
0x000028ef      488d7201       lea rsi, [rdx + 1]                      ; /src:182
0x000028f3      84c0           test al, al                             ; /src:181
0x000028f5      400f95c7       setne dil
0x000028f9      3c23           cmp al, 0x23
0x000028fb      0f95c0         setne al
0x000028fe      4084c7         test dil, al
0x00002901      75e5           jne 0x28e8
0x00002903      0fb646ff       movzx eax, byte [rsi - 1]               ; /src:184
0x00002907      f644410120     test byte [rcx + rax*2 + 1], 0x20
0x0000290c      0f85e6000000   jne 0x29f8
0x00002912      4829de         sub rsi, rbx                            ; /src:188
0x00002915      4889df         mov rdi, rbx
0x00002918      e8d3310000     call sym.xstrndup
0x0000291d      4d85ff         test r15, r15                           ; /src:152
0x00002920      4889c3         mov rbx, rax
0x00002923      0f84f7feffff   je 0x2820
0x00002929      4885c0         test rax, rax
0x0000292c      0f84f7000000   je 0x2a29
0x00002932      488d35773800.  lea rsi, str.TERM                       ; 0x61b0 ; "TERM"
0x00002939      4c89ff         mov rdi, r15
0x0000293c      e8ff070000     call sym.c_strcasecmp
0x00002941      85c0           test eax, eax
0x00002943      0f8437010000   je 0x2a80
0x00002949      8b0424         mov eax, dword [rsp]                    ; /src:141
0x0000294c      83f802         cmp eax, 2
0x0000294f      0f845b010000   je 0x2ab0
0x00002955      85c0           test eax, eax
0x00002957      7457           je 0x29b0
0x00002959      410fb607       movzx eax, byte [r15]                   ; /src:151
0x0000295d      3c2e           cmp al, 0x2e
0x0000295f      0f845e010000   je 0x2ac3
0x00002965      3c2a           cmp al, 0x2a
0x00002967      0f8413020000   je 0x2b80
0x0000296d      488d35413800.  lea rsi, str.OPTIONS                    ; 0x61b5 ; "OPTIONS"
0x00002974      4c89ff         mov rdi, r15                            ; /src:159
0x00002977      e8c4070000     call sym.c_strcasecmp
0x0000297c      85c0           test eax, eax
0x0000297e      7430           je 0x29b0
0x00002980      488d35363800.  lea rsi, str.COLOR                      ; 0x61bd ; "COLOR"
0x00002987      4c89ff         mov rdi, r15                            ; /src:160
0x0000298a      e8b1070000     call sym.c_strcasecmp
0x0000298f      85c0           test eax, eax
0x00002991      741d           je 0x29b0
0x00002993      488d35293800.  lea rsi, str.EIGHTBIT                   ; 0x61c3 ; "EIGHTBIT"
0x0000299a      4c89ff         mov rdi, r15
0x0000299d      e89e070000     call sym.c_strcasecmp
0x000029a2      85c0           test eax, eax
0x000029a4      0f8589020000   jne 0x2c33                              ; /src:199
0x000029aa      660f1f440000   nop word [rax + rax]
0x000029b0      4c89ff         mov rdi, r15
0x000029b3      e848f6ffff     call sym..plt.got
0x000029b8      4889df         mov rdi, rbx                            ; /src:97
0x000029bb      e840f6ffff     call sym..plt.got
0x000029c0      4883c501       add rbp, 1
0x000029c4      4d85f6         test r14, r14
0x000029c7      0f8560feffff   jne 0x282d
0x000029cd      488d05d04f00.  lea rax, str.8.31                       ; 0x79a4 ; "8.31"
0x000029d4      4939c4         cmp r12, rax
0x000029d7      0f847b010000   je 0x2b58
0x000029dd      4c89e7         mov rdi, r12
0x000029e0      4d89e7         mov r15, r12
0x000029e3      e8d8f3ffff     call sym.imp.strlen
0x000029e8      4d8d640401     lea r12, [r12 + rax + 1]
0x000029ed      e960feffff     jmp 0x2852
0x000029f2      660f1f440000   nop word [rax + rax]
0x000029f8      4883ea01       sub rdx, 1
0x000029fc      0fb602         movzx eax, byte [rdx]
0x000029ff      f644410120     test byte [rcx + rax*2 + 1], 0x20
0x00002a04      75f2           jne 0x29f8                              ; /src:-15
0x00002a06      488d7201       lea rsi, [rdx + 1]
0x00002a0a      e903ffffff     jmp 0x2912
0x00002a0f      90             nop
0x00002a10      4983c701       add r15, 1
0x00002a14      e944feffff     jmp 0x285d                              ; /src:116
0x00002a19      0f1f80000000.  nop dword [rax]
0x00002a20      4d85ff         test r15, r15
0x00002a23      0f84f7fdffff   je 0x2820
0x00002a29      488b542408     mov rdx, qword [rsp + 8]
0x00002a2e      be03000000     mov esi, 3
0x00002a33      31ff           xor edi, edi
0x00002a35      e816260000     call sym.quotearg_n_style_colon
0x00002a3a      488d35373a00.  lea rsi, str.s:_lu:_invalid_line___missing_second_token ; 0x6478 ; "%s:%lu: invalid line;  missing second token"
0x00002a41      4889c3         mov rbx, rax
0x00002a44      ba05000000     mov edx, 5
0x00002a49      31ff           xor edi, edi
0x00002a4b      e850f3ffff     call sym.imp.dcgettext
0x00002a50      4989e8         mov r8, rbp
0x00002a53      4889c2         mov rdx, rax
0x00002a56      4889d9         mov rcx, rbx
0x00002a59      31f6           xor esi, esi
0x00002a5b      31ff           xor edi, edi
0x00002a5d      31c0           xor eax, eax
0x00002a5f      e8fcf4ffff     call sym.imp.error
0x00002a64      4c89ff         mov rdi, r15
0x00002a67      e894f5ffff     call sym..plt.got
0x00002a6c      c644240700     mov byte [rsp + 7], 0
0x00002a71      e9aafdffff     jmp 0x2820
0x00002a76      662e0f1f8400.  nop word cs:[rax + rax]
0x00002a80      488b742410     mov rsi, qword [rsp + 0x10]
0x00002a85      31d2           xor edx, edx
0x00002a87      4889df         mov rdi, rbx
0x00002a8a      e8a1f3ffff     call sym.imp.fnmatch
0x00002a8f      85c0           test eax, eax
0x00002a91      7411           je 0x2aa4
0x00002a93      833c2402       cmp dword [rsp], 2
0x00002a97      c70424000000.  mov dword [rsp], 0
0x00002a9e      0f850cffffff   jne 0x29b0
0x00002aa4      c70424020000.  mov dword [rsp], 2                      ; /src:143
0x00002aab      e900ffffff     jmp 0x29b0
0x00002ab0      410fb607       movzx eax, byte [r15]
0x00002ab4      c70424010000.  mov dword [rsp], 1
0x00002abb      3c2e           cmp al, 0x2e
0x00002abd      0f85a2feffff   jne 0x2965
0x00002ac3      488b054e7620.  mov rax, qword [0x0020a118]             ; [0x20a118:8]=0
0x00002aca      4839054f7620.  cmp qword [0x0020a120], rax             ; [0x20a120:8]=0
0x00002ad1      0f843f010000   je 0x2c16
0x00002ad7      488d5001       lea rdx, [rax + 1]
0x00002adb      4c89ff         mov rdi, r15
0x00002ade      488915337620.  mov qword [0x0020a118], rdx             ; [0x20a118:8]=0
0x00002ae5      c6002a         mov byte [rax], 0x2a                    ; '*'
                                                                       ; [0x2a:1]=2
0x00002ae8      e8c3faffff     call sym.append_quoted
0x00002aed      488b05247620.  mov rax, qword [0x0020a118]             ; [0x20a118:8]=0
0x00002af4      483905257620.  cmp qword [0x0020a120], rax             ; [0x20a120:8]=0
0x00002afb      0f84f8000000   je 0x2bf9
0x00002b01      488d5001       lea rdx, [rax + 1]
0x00002b05      4889df         mov rdi, rbx
0x00002b08      488915097620.  mov qword [0x0020a118], rdx             ; [0x20a118:8]=0
0x00002b0f      c6003d         mov byte [rax], 0x3d                    ; '='
                                                                       ; [0x3d:1]=0
0x00002b12      e899faffff     call sym.append_quoted
0x00002b17      488b05fa7520.  mov rax, qword [0x0020a118]             ; [0x20a118:8]=0
0x00002b1e      483905fb7520.  cmp qword [0x0020a120], rax             ; [0x20a120:8]=0
0x00002b25      0f84aa000000   je 0x2bd5
0x00002b2b      488d5001       lea rdx, [rax + 1]
0x00002b2f      4c89ff         mov rdi, r15
0x00002b32      488915df7520.  mov qword [0x0020a118], rdx             ; [0x20a118:8]=0
0x00002b39      c6003a         mov byte [rax], 0x3a                    ; ':'
                                                                       ; [0x3a:1]=64
0x00002b3c      e8bff4ffff     call sym..plt.got
0x00002b41      4889df         mov rdi, rbx
0x00002b44      e8b7f4ffff     call sym..plt.got
0x00002b49      e972feffff     jmp 0x29c0
0x00002b4e      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00002b53      e8a8f4ffff     call sym..plt.got
0x00002b58      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00002b5d      6448333c2528.  xor rdi, qword fs:[0x28]
0x00002b66      0fb6442407     movzx eax, byte [rsp + 7]
0x00002b6b      0f854d020000   jne 0x2dbe
0x00002b71      4883c448       add rsp, 0x48
0x00002b75      5b             pop rbx
0x00002b76      5d             pop rbp
0x00002b77      415c           pop r12
0x00002b79      415d           pop r13
0x00002b7b      415e           pop r14
0x00002b7d      415f           pop r15
0x00002b7f      c3             ret
0x00002b80      4c89ff         mov rdi, r15
0x00002b83      e828faffff     call sym.append_quoted
0x00002b88      488b05897520.  mov rax, qword [0x0020a118]             ; [0x20a118:8]=0
0x00002b8f      4839058a7520.  cmp qword [0x0020a120], rax             ; [0x20a120:8]=0
0x00002b96      0f845c010000   je 0x2cf8
0x00002b9c      488b05757520.  mov rax, qword [0x0020a118]             ; [0x20a118:8]=0
0x00002ba3      4889df         mov rdi, rbx                            ; /src:100
0x00002ba6      488d5001       lea rdx, [rax + 1]
0x00002baa      488915677520.  mov qword [0x0020a118], rdx             ; [0x20a118:8]=0
0x00002bb1      c6003d         mov byte [rax], 0x3d                    ; '='
                                                                       ; [0x3d:1]=0
0x00002bb4      e8f7f9ffff     call sym.append_quoted
0x00002bb9      488b05587520.  mov rax, qword [0x0020a118]             ; [0x20a118:8]=0
0x00002bc0      483905597520.  cmp qword [0x0020a120], rax             ; [0x20a120:8]=0
0x00002bc7      740c           je 0x2bd5
0x00002bc9      488b05487520.  mov rax, qword [0x0020a118]             ; [0x20a118:8]=0
0x00002bd0      e956ffffff     jmp 0x2b2b
0x00002bd5      488d3d247520.  lea rdi, obj.lsc_obstack                ; 0x20a100
0x00002bdc      be01000000     mov esi, 1
0x00002be1      e82a320000     call sym._obstack_newchunk
0x00002be6      ebe1           jmp 0x2bc9
0x00002be8      488d05b53500.  lea rax, str.none                       ; 0x61a4 ; "none"
0x00002bef      4889442410     mov qword [rsp + 0x10], rax
0x00002bf4      e90afcffff     jmp 0x2803
0x00002bf9      488d3d007520.  lea rdi, obj.lsc_obstack                ; 0x20a100
0x00002c00      be01000000     mov esi, 1                              ; /src:68
0x00002c05      e806320000     call sym._obstack_newchunk
0x00002c0a      488b05077520.  mov rax, qword [0x0020a118]             ; [0x20a118:8]=0
0x00002c11      e9ebfeffff     jmp 0x2b01
0x00002c16      488d3de37420.  lea rdi, obj.lsc_obstack                ; 0x20a100
0x00002c1d      be01000000     mov esi, 1
0x00002c22      e8e9310000     call sym._obstack_newchunk
0x00002c27      488b05ea7420.  mov rax, qword [0x0020a118]             ; [0x20a118:8]=0
0x00002c2e      e9a4feffff     jmp 0x2ad7
0x00002c33      4531ed         xor r13d, r13d
0x00002c36      48895c2418     mov qword [rsp + 0x18], rbx
0x00002c3b      488d35673500.  lea rsi, str.NORMAL                     ; 0x61a9 ; "NORMAL"
0x00002c42      4c89eb         mov rbx, r13
0x00002c45      eb21           jmp 0x2c68
0x00002c47      660f1f840000.  nop word [rax + rax]
0x00002c50      488d05496e20.  lea rax, obj.slack_codes                ; 0x209aa0
0x00002c57      4883c301       add rbx, 1
0x00002c5b      488b34d8       mov rsi, qword [rax + rbx*8]
0x00002c5f      4885f6         test rsi, rsi
0x00002c62      0f84a6000000   je 0x2d0e
0x00002c68      4c89ff         mov rdi, r15
0x00002c6b      4189dd         mov r13d, ebx
0x00002c6e      e8cd040000     call sym.c_strcasecmp
0x00002c73      85c0           test eax, eax
0x00002c75      75d9           jne 0x2c50
0x00002c77      488b059a7420.  mov rax, qword [0x0020a118]             ; [0x20a118:8]=0
0x00002c7e      4839059b7420.  cmp qword [0x0020a120], rax             ; [0x20a120:8]=0
0x00002c85      488b5c2418     mov rbx, qword [rsp + 0x18]
0x00002c8a      0f8402010000   je 0x2d92
0x00002c90      488d05c96c20.  lea rax, obj.ls_codes                   ; 0x209960 ; "Qc"
0x00002c97      4d63ed         movsxd r13, r13d
0x00002c9a      4e8b2ce8       mov r13, qword [rax + r13*8]
0x00002c9e      488b05737420.  mov rax, qword [0x0020a118]             ; [0x20a118:8]=0
0x00002ca5      488d5001       lea rdx, [rax + 1]
0x00002ca9      488915687420.  mov qword [0x0020a118], rdx             ; [0x20a118:8]=0
0x00002cb0      410fb65500     movzx edx, byte [r13]
0x00002cb5      8810           mov byte [rax], dl                      ; /src:97
0x00002cb7      488b055a7420.  mov rax, qword [0x0020a118]             ; [0x20a118:8]=0
0x00002cbe      4839055b7420.  cmp qword [0x0020a120], rax             ; [0x20a120:8]=0
0x00002cc5      0f84dd000000   je 0x2da8
0x00002ccb      488b05467420.  mov rax, qword [0x0020a118]             ; [0x20a118:8]=0
0x00002cd2      488d5001       lea rdx, [rax + 1]
0x00002cd6      4889153b7420.  mov qword [0x0020a118], rdx             ; [0x20a118:8]=0
0x00002cdd      410fb65501     movzx edx, byte [r13 + 1]
0x00002ce2      8810           mov byte [rax], dl                      ; /src:98
0x00002ce4      488b052d7420.  mov rax, qword [0x0020a118]             ; [0x20a118:8]=0
0x00002ceb      4839052e7420.  cmp qword [0x0020a120], rax             ; [0x20a120:8]=0
0x00002cf2      0f85a4feffff   jne 0x2b9c
0x00002cf8      488d3d017420.  lea rdi, obj.lsc_obstack                ; /src:114 ; 0x20a100
0x00002cff      be01000000     mov esi, 1
0x00002d04      e807310000     call sym._obstack_newchunk
0x00002d09      e98efeffff     jmp 0x2b9c
0x00002d0e      833c2403       cmp dword [rsp], 3
0x00002d12      488b5c2418     mov rbx, qword [rsp + 0x18]
0x00002d17      0f8493fcffff   je 0x29b0
0x00002d1d      488b542408     mov rdx, qword [rsp + 8]
0x00002d22      4885d2         test rdx, rdx
0x00002d25      7453           je 0x2d7a
0x00002d27      be03000000     mov esi, 3
0x00002d2c      31ff           xor edi, edi
0x00002d2e      e81d230000     call sym.quotearg_n_style_colon
0x00002d33      4989c5         mov r13, rax
0x00002d36      488d356b3700.  lea rsi, str.s:_lu:_unrecognized_keyword__s ; 0x64a8 ; "%s:%lu: unrecognized keyword %s"
0x00002d3d      31ff           xor edi, edi
0x00002d3f      ba05000000     mov edx, 5
0x00002d44      e857f0ffff     call sym.imp.dcgettext
0x00002d49      4d89f9         mov r9, r15
0x00002d4c      4889c2         mov rdx, rax
0x00002d4f      4989e8         mov r8, rbp
0x00002d52      4c89e9         mov rcx, r13                            ; /src:122
0x00002d55      31f6           xor esi, esi
0x00002d57      31ff           xor edi, edi                            ; /src:123
0x00002d59      31c0           xor eax, eax
0x00002d5b      e800f2ffff     call sym.imp.error
0x00002d60      4c89ff         mov rdi, r15
0x00002d63      c644240700     mov byte [rsp + 7], 0
0x00002d68      e893f2ffff     call sym..plt.got
0x00002d6d      4889df         mov rdi, rbx
0x00002d70      e88bf2ffff     call sym..plt.got
0x00002d75      e946fcffff     jmp 0x29c0
0x00002d7a      488d354b3400.  lea rsi, str.internal                   ; 0x61cc ; "<internal>"
0x00002d81      ba05000000     mov edx, 5
0x00002d86      31ff           xor edi, edi
0x00002d88      e813f0ffff     call sym.imp.dcgettext
0x00002d8d      4989c5         mov r13, rax
0x00002d90      eba4           jmp 0x2d36
0x00002d92      488d3d677320.  lea rdi, obj.lsc_obstack                ; /src:97 ; 0x20a100
0x00002d99      be01000000     mov esi, 1
0x00002d9e      e86d300000     call sym._obstack_newchunk
0x00002da3      e9e8feffff     jmp 0x2c90
0x00002da8      488d3d517320.  lea rdi, obj.lsc_obstack                ; /src:127 ; 0x20a100
0x00002daf      be01000000     mov esi, 1
0x00002db4      e857300000     call sym._obstack_newchunk
0x00002db9      e90dffffff     jmp 0x2ccb
0x00002dbe      e80df0ffff     call sym.imp.__stack_chk_fail           ; /src:-148
0x00002dc3      0f1f00         nop dword [rax]                         ; /src:-150
0x00002dc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- usage:
0x00002dd0      4155           push r13
0x00002dd2      4154           push r12
0x00002dd4      ba05000000     mov edx, 5
0x00002dd9      55             push rbp
0x00002dda      53             push rbx
0x00002ddb      89fd           mov ebp, edi
0x00002ddd      4881ec880000.  sub rsp, 0x88
0x00002de4      488b1d7d7320.  mov rbx, qword [obj.program_name]       ; [0x20a168:8]=0
0x00002deb      64488b042528.  mov rax, qword fs:[0x28]
0x00002df4      4889442478     mov qword [rsp + 0x78], rax
0x00002df9      31c0           xor eax, eax
0x00002dfb      85ff           test edi, edi
0x00002dfd      742e           je 0x2e2d
0x00002dff      488d35c23600.  lea rsi, str.Try___s___help__for_more_information. ; 0x64c8 ; "Try '%s --help' for more information.\n"
0x00002e06      31ff           xor edi, edi
0x00002e08      e893efffff     call sym.imp.dcgettext
0x00002e0d      488b3dcc7220.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a0e0:8]=0
0x00002e14      4889c2         mov rdx, rax
0x00002e17      4889d9         mov rcx, rbx                            ; /src:-145
0x00002e1a      be01000000     mov esi, 1
0x00002e1f      31c0           xor eax, eax
0x00002e21      e89af1ffff     call sym.imp.__fprintf_chk
0x00002e26      89ef           mov edi, ebp
0x00002e28      e873f1ffff     call sym.imp.exit
0x00002e2d      488d35ad3300.  lea rsi, str.Usage:__s__OPTION_...__FILE ; 0x61e1 ; "Usage: %s [OPTION]... [FILE]\n"
0x00002e34      31ff           xor edi, edi
0x00002e36      e865efffff     call sym.imp.dcgettext
0x00002e3b      4889da         mov rdx, rbx
0x00002e3e      4889c6         mov rsi, rax
0x00002e41      bf01000000     mov edi, 1
0x00002e46      31c0           xor eax, eax
0x00002e48      e803f1ffff     call sym.imp.__printf_chk
0x00002e4d      488b1d547220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00002e54      488d35953600.  lea rsi, str.Output_commands_to_set_the_LS_COLORS_environment_variable.____Determine_format_of_output:_____b____sh____bourne_shell____output_Bourne_shell_code_to_set_LS_COLORS_____c____csh____c_shell________output_C_shell_code_to_set_LS_COLORS_____p____print_database________output_defaults ; 0x64f0 ; "Output commands to set the LS_COLORS environment variable.\n\nDetermine format of output:\n  -b, --sh, --bourne-shell    output Bourne shell code to set LS_COLORS\n  -c, --csh, --c-shell        output C shell code to set LS_COLORS\n  -p, --print-database        output defaults\n"
0x00002e5b      ba05000000     mov edx, 5
0x00002e60      31ff           xor edi, edi
0x00002e62      e839efffff     call sym.imp.dcgettext
0x00002e67      4889de         mov rsi, rbx
0x00002e6a      4889c7         mov rdi, rax
0x00002e6d      e81ef0ffff     call sym.imp.fputs_unlocked
0x00002e72      488b1d2f7220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00002e79      488d35883700.  lea rsi, str.help_____display_this_help_and_exit ; 0x6608 ; "      --help     display this help and exit\n"
0x00002e80      ba05000000     mov edx, 5
0x00002e85      31ff           xor edi, edi
0x00002e87      e814efffff     call sym.imp.dcgettext
0x00002e8c      4889de         mov rsi, rbx
0x00002e8f      4889c7         mov rdi, rax
0x00002e92      e8f9efffff     call sym.imp.fputs_unlocked
0x00002e97      488b1d0a7220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00002e9e      488d35933700.  lea rsi, str.version__output_version_information_and_exit ; 0x6638 ; "      --version  output version information and exit\n"
0x00002ea5      ba05000000     mov edx, 5
0x00002eaa      31ff           xor edi, edi
0x00002eac      e8efeeffff     call sym.imp.dcgettext
0x00002eb1      4889de         mov rsi, rbx
0x00002eb4      4889c7         mov rdi, rax
0x00002eb7      e8d4efffff     call sym.imp.fputs_unlocked
0x00002ebc      488b1de57120.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00002ec3      488d35a63700.  lea rsi, str.If_FILE_is_specified__read_it_to_determine_which_colors_to_use_for_which__file_types_and_extensions.__Otherwise__a_precompiled_database_is_used.__For_details_on_the_format_of_these_files__run__dircolors___print_database_. ; 0x6670 ; "\nIf FILE is specified, read it to determine which colors to use for which\nfile types and extensions.  Otherwise, a precompiled database is used.\nFor details on the format of these files, run 'dircolors --print-database'.\n"
0x00002eca      ba05000000     mov edx, 5
0x00002ecf      31ff           xor edi, edi
0x00002ed1      e8caeeffff     call sym.imp.dcgettext
0x00002ed6      4889de         mov rsi, rbx
0x00002ed9      4889c7         mov rdi, rax
0x00002edc      488d1df43200.  lea rbx, str.dircolors                  ; 0x61d7 ; "dircolors"
0x00002ee3      e8a8efffff     call sym.imp.fputs_unlocked
0x00002ee8      488d05103300.  lea rax, [0x000061ff]                   ; "["
0x00002eef      488d0d4a3300.  lea rcx, str.sha256sum                  ; 0x6240 ; "sha256sum"
0x00002ef6      48c744246000.  mov qword [rsp + 0x60], 0
0x00002eff      48c744246800.  mov qword [rsp + 0x68], 0
0x00002f08      4889e2         mov rdx, rsp
0x00002f0b      48890424       mov qword [rsp], rax
0x00002f0f      488d05eb3200.  lea rax, str.test_invocation            ; 0x6201 ; "test invocation"
0x00002f16      48894c2430     mov qword [rsp + 0x30], rcx
0x00002f1b      488d0d283300.  lea rcx, str.sha384sum                  ; 0x624a ; "sha384sum"
0x00002f22      4889442408     mov qword [rsp + 8], rax
0x00002f27      488d054b3300.  lea rax, [0x00006279]                   ; "coreutils"
0x00002f2e      48894c2440     mov qword [rsp + 0x40], rcx
0x00002f33      488d0d1a3300.  lea rcx, str.sha512sum                  ; 0x6254 ; "sha512sum"
0x00002f3a      4889442410     mov qword [rsp + 0x10], rax
0x00002f3f      488d05cb3200.  lea rax, str.Multi_call_invocation      ; 0x6211 ; "Multi-call invocation"
0x00002f46      48894c2450     mov qword [rsp + 0x50], rcx
0x00002f4b      4889442418     mov qword [rsp + 0x18], rax
0x00002f50      488d05d03200.  lea rax, str.sha224sum                  ; 0x6227 ; "sha224sum"
0x00002f57      4889442420     mov qword [rsp + 0x20], rax
0x00002f5c      488d05ce3200.  lea rax, str.sha2_utilities             ; 0x6231 ; "sha2 utilities"
0x00002f63      4889442428     mov qword [rsp + 0x28], rax
0x00002f68      4889442438     mov qword [rsp + 0x38], rax
0x00002f6d      4889442448     mov qword [rsp + 0x48], rax
0x00002f72      4889442458     mov qword [rsp + 0x58], rax
0x00002f77      660f1f840000.  nop word [rax + rax]
0x00002f80      4883c210       add rdx, 0x10
0x00002f84      488b3a         mov rdi, qword [rdx]
0x00002f87      4885ff         test rdi, rdi
0x00002f8a      7413           je 0x2f9f
0x00002f8c      b90a000000     mov ecx, 0xa
0x00002f91      4889de         mov rsi, rbx
0x00002f94      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002f96      0f97c0         seta al
0x00002f99      1c00           sbb al, 0
0x00002f9b      84c0           test al, al                             ; ../coreutils-8.31/src/rcolors.c:405
0x00002f9d      75e1           jne 0x2f80
0x00002f9f      4c8b6208       mov r12, qword [rdx + 8]
0x00002fa3      31ff           xor edi, edi
0x00002fa5      ba05000000     mov edx, 5
0x00002faa      488d35ad3200.  lea rsi, str.s_online_help:___s         ; 0x625e ; "\n%s online help: <%s>\n"
0x00002fb1      4d85e4         test r12, r12
0x00002fb4      0f84c1000000   je 0x307b
0x00002fba      e8e1edffff     call sym.imp.dcgettext
0x00002fbf      488d0d8a3700.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x6750 ; "https://www.gnu.org/software/coreutils/"
0x00002fc6      488d15a83200.  lea rdx, str.GNU_coreutils              ; ../coreutils-8.31/src/rcolors.c:412 ; 0x6275 ; "GNU coreutils"
0x00002fcd      4889c6         mov rsi, rax
0x00002fd0      bf01000000     mov edi, 1
0x00002fd5      31c0           xor eax, eax
0x00002fd7      e874efffff     call sym.imp.__printf_chk
0x00002fdc      31f6           xor esi, esi
0x00002fde      bf05000000     mov edi, 5
0x00002fe3      e858efffff     call sym.imp.setlocale
0x00002fe8      4885c0         test rax, rax
0x00002feb      741c           je 0x3009
0x00002fed      488d358f3200.  lea rsi, [0x00006283]                   ; "en_"
0x00002ff4      ba03000000     mov edx, 3
0x00002ff9      4889c7         mov rdi, rax
0x00002ffc      e82fedffff     call sym.imp.strncmp
0x00003001      85c0           test eax, eax
0x00003003      0f8507010000   jne 0x3110
0x00003009      488d35773200.  lea rsi, str.Full_documentation___s_s   ; 0x6287 ; "Full documentation <%s%s>\n"
0x00003010      31ff           xor edi, edi
0x00003012      ba05000000     mov edx, 5
0x00003017      e884edffff     call sym.imp.dcgettext
0x0000301c      488d0db43100.  lea rcx, str.dircolors                  ; 0x61d7 ; "dircolors"
0x00003023      488d15263700.  lea rdx, str.https:__www.gnu.org_software_coreutils ; ../coreutils-8.31/src/rcolors.c:424 ; 0x6750 ; "https://www.gnu.org/software/coreutils/"
0x0000302a      4889c6         mov rsi, rax
0x0000302d      bf01000000     mov edi, 1
0x00003032      31c0           xor eax, eax
0x00003034      e817efffff     call sym.imp.__printf_chk
0x00003039      4939dc         cmp r12, rbx
0x0000303c      488d0dd83100.  lea rcx, [0x0000621b]                   ; " invocation"
0x00003043      488d1d7b3200.  lea rbx, [0x000062c5]
0x0000304a      480f44d9       cmove rbx, rcx
0x0000304e      488d356b3700.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x67c0 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00003055      31ff           xor edi, edi
0x00003057      ba05000000     mov edx, 5
0x0000305c      e83fedffff     call sym.imp.dcgettext
0x00003061      4889d9         mov rcx, rbx
0x00003064      4889c6         mov rsi, rax
0x00003067      4c89e2         mov rdx, r12
0x0000306a      bf01000000     mov edi, 1                              ; .//ib:-140
0x0000306f      31c0           xor eax, eax
0x00003071      e8daeeffff     call sym.imp.__printf_chk
0x00003076      e9abfdffff     jmp 0x2e26
0x0000307b      e820edffff     call sym.imp.dcgettext
0x00003080      488d0dc93600.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x6750 ; "https://www.gnu.org/software/coreutils/"
0x00003087      488d15e73100.  lea rdx, str.GNU_coreutils              ; ../coreutils-8.31/src/rcolors.c:412 ; 0x6275 ; "GNU coreutils"
0x0000308e      4889c6         mov rsi, rax
0x00003091      bf01000000     mov edi, 1
0x00003096      31c0           xor eax, eax
0x00003098      e8b3eeffff     call sym.imp.__printf_chk
0x0000309d      31f6           xor esi, esi
0x0000309f      bf05000000     mov edi, 5
0x000030a4      e897eeffff     call sym.imp.setlocale
0x000030a9      4885c0         test rax, rax
0x000030ac      7418           je 0x30c6
0x000030ae      488d35ce3100.  lea rsi, [0x00006283]                   ; "en_"
0x000030b5      ba03000000     mov edx, 3
0x000030ba      4889c7         mov rdi, rax
0x000030bd      e86eecffff     call sym.imp.strncmp
0x000030c2      85c0           test eax, eax
0x000030c4      7543           jne 0x3109
0x000030c6      488d35ba3100.  lea rsi, str.Full_documentation___s_s   ; 0x6287 ; "Full documentation <%s%s>\n"
0x000030cd      ba05000000     mov edx, 5
0x000030d2      31ff           xor edi, edi
0x000030d4      4c8d25fc3000.  lea r12, str.dircolors                  ; 0x61d7 ; "dircolors"
0x000030db      488d1d393100.  lea rbx, [0x0000621b]                   ; " invocation"
0x000030e2      e8b9ecffff     call sym.imp.dcgettext
0x000030e7      488d0de93000.  lea rcx, str.dircolors                  ; 0x61d7 ; "dircolors"
0x000030ee      488d155b3600.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x6750 ; "https://www.gnu.org/software/coreutils/"
0x000030f5      4889c6         mov rsi, rax
0x000030f8      bf01000000     mov edi, 1
0x000030fd      31c0           xor eax, eax
0x000030ff      e84ceeffff     call sym.imp.__printf_chk
0x00003104      e945ffffff     jmp 0x304e
0x00003109      4c8d25c73000.  lea r12, str.dircolors                  ; 0x61d7 ; "dircolors"
0x00003110      4c8b2d916f20.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00003117      488d355a3600.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x6778 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x0000311e      31ff           xor edi, edi
0x00003120      ba05000000     mov edx, 5
0x00003125      e876ecffff     call sym.imp.dcgettext
0x0000312a      4c89ee         mov rsi, r13
0x0000312d      4889c7         mov rdi, rax
0x00003130      e85bedffff     call sym.imp.fputs_unlocked
0x00003135      e9cffeffff     jmp 0x3009
0x0000313a      660f1f440000   nop word [rax + rax]
;-- c_strcasecmp:
0x00003140      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/c-strcasecmp.c:28
0x00003142      4839f7         cmp rdi, rsi                            ; ../coreutils-8.31/lib/c-strcasecmp.c:33
0x00003145      7515           jne 0x315c
0x00003147      eb43           jmp 0x318c
0x00003149      0f1f80000000.  nop dword [rax]
0x00003150      4883c701       add rdi, 1                              ; ../coreutils-8.31/lib/c-strcasecmp.c:44
0x00003154      4883c601       add rsi, 1                              ; ../coreutils-8.31/lib/c-strcasecmp.c:45
0x00003158      38d0           cmp al, dl                              ; ../coreutils-8.31/lib/c-strcasecmp.c:47
0x0000315a      7528           jne 0x3184
0x0000315c      0fb607         movzx eax, byte [rdi]                   ; ../coreutils-8.31/lib/c-strcasecmp.c:38
0x0000315f      89c2           mov edx, eax
0x00003161      8d4820         lea ecx, [rax + 0x20]                   ; ../coreutils-8.31/lib/c-ctype.h:342
0x00003164      83ea41         sub edx, 0x41                           ; ../coreutils-8.31/lib/c-ctype.h:339
0x00003167      80fa1a         cmp dl, 0x1a                            ; ../coreutils-8.31/lib/c-ctype.h:342
0x0000316a      0fb616         movzx edx, byte [rsi]                   ; ../coreutils-8.31/lib/c-strcasecmp.c:39
0x0000316d      0f42c1         cmovb eax, ecx                          ; ../coreutils-8.31/lib/c-ctype.h:342
0x00003170      89d1           mov ecx, edx                            ; ../coreutils-8.31/lib/c-strcasecmp.c:39
0x00003172      448d4a20       lea r9d, [rdx + 0x20]                   ; ../coreutils-8.31/lib/c-ctype.h:342
0x00003176      83e941         sub ecx, 0x41                           ; ../coreutils-8.31/lib/c-ctype.h:339
0x00003179      80f91a         cmp cl, 0x1a                            ; ../coreutils-8.31/lib/c-ctype.h:342
0x0000317c      410f42d1       cmovb edx, r9d
0x00003180      84c0           test al, al                             ; ../coreutils-8.31/lib/c-strcasecmp.c:41
0x00003182      75cc           jne 0x3150
0x00003184      0fb6c0         movzx eax, al                           ; ../coreutils-8.31/lib/c-strcasecmp.c:50
0x00003187      0fb6d2         movzx edx, dl
0x0000318a      29d0           sub eax, edx
0x0000318c      f3c3           ret                                     ; ../coreutils-8.31/lib/c-strcasecmp.c:56
0x0000318e      6690           nop
;-- close_stdout_set_file_name:
0x00003190      48893dc96f20.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x20a160:8]=0
0x00003197      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00003198      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x000031a0      40883db16f20.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x20a158:1]=0
0x000031a7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x000031a8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x000031b0      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x000031b1      53             push rbx
0x000031b2      4883ec08       sub rsp, 8
0x000031b6      488b3deb6e20.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x000031bd      e81e2e0000     call sym.close_stream
0x000031c2      85c0           test eax, eax
0x000031c4      7416           je 0x31dc
0x000031c6      e855ebffff     call sym.imp.__errno_location
0x000031cb      803d866f2000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x20a158:1]=0
0x000031d2      4889c3         mov rbx, rax
0x000031d5      741c           je 0x31f3
0x000031d7      833820         cmp dword [rax], 0x20
0x000031da      7517           jne 0x31f3
0x000031dc      488b3dfd6e20.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a0e0:8]=0
0x000031e3      e8f82d0000     call sym.close_stream
0x000031e8      85c0           test eax, eax
0x000031ea      7546           jne 0x3232
0x000031ec      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x000031f0      5b             pop rbx
0x000031f1      5d             pop rbp
0x000031f2      c3             ret
0x000031f3      488d35af4700.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x79a9 ; "write error"
0x000031fa      31ff           xor edi, edi
0x000031fc      ba05000000     mov edx, 5
0x00003201      e89aebffff     call sym.imp.dcgettext
0x00003206      488b3d536f20.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x20a160:8]=0
0x0000320d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00003210      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00003213      7428           je 0x323d
0x00003215      e8061e0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x0000321a      8b33           mov esi, dword [rbx]
0x0000321c      488d15924700.  lea rdx, str.s:__s                      ; 0x79b5 ; "%s: %s"
0x00003223      4889c1         mov rcx, rax
0x00003226      4989e8         mov r8, rbp
0x00003229      31ff           xor edi, edi
0x0000322b      31c0           xor eax, eax
0x0000322d      e82eedffff     call sym.imp.error
0x00003232      8b3de06d2000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x20a018:4]=1
0x00003238      e803ebffff     call sym.imp._exit
0x0000323d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x0000323f      488d15734700.  lea rdx, [0x000079b9]                   ; "%s"
0x00003246      4889c1         mov rcx, rax
0x00003249      31ff           xor edi, edi
0x0000324b      31c0           xor eax, eax
0x0000324d      e80eedffff     call sym.imp.error
0x00003252      ebde           jmp 0x3232
0x00003254      662e0f1f8400.  nop word cs:[rax + rax]
0x0000325e      6690           nop
;-- last_component:
0x00003260      0fb617         movzx edx, byte [rdi]                   ; ../coreutils-8.31/lib/basename-lgpl.c:31
0x00003263      4889f8         mov rax, rdi
0x00003266      80fa2f         cmp dl, 0x2f                            ; ../coreutils-8.31/lib/basename-lgpl.c:36
0x00003269      7511           jne 0x327c
0x0000326b      0f1f440000     nop dword [rax + rax]
0x00003270      4883c001       add rax, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:37
0x00003274      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/basename-lgpl.c:36
0x00003277      80fa2f         cmp dl, 0x2f
0x0000327a      74f4           je 0x3270
0x0000327c      84d2           test dl, dl                             ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x0000327e      743a           je 0x32ba
0x00003280      4889c1         mov rcx, rax
0x00003283      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/basename-lgpl.c:34
0x00003285      eb1e           jmp 0x32a5
0x00003287      660f1f840000.  nop word [rax + rax]
0x00003290      4084f6         test sil, sil                           ; ../coreutils-8.31/lib/basename-lgpl.c:43
0x00003293      7405           je 0x329a
0x00003295      4889c8         mov rax, rcx
0x00003298      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/basename-lgpl.c:46
0x0000329a      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x0000329e      0fb611         movzx edx, byte [rcx]
0x000032a1      84d2           test dl, dl
0x000032a3      7415           je 0x32ba
0x000032a5      80fa2f         cmp dl, 0x2f                            ; ../coreutils-8.31/lib/basename-lgpl.c:41
0x000032a8      75e6           jne 0x3290
0x000032aa      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x000032ae      0fb611         movzx edx, byte [rcx]
0x000032b1      be01000000     mov esi, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:42
0x000032b6      84d2           test dl, dl                             ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x000032b8      75eb           jne 0x32a5
0x000032ba      f3c3           ret                                     ; ../coreutils-8.31/lib/basename-lgpl.c:51
0x000032bc      0f1f4000       nop dword [rax]
;-- base_len:
0x000032c0      53             push rbx                                ; ../coreutils-8.31/lib/basename-lgpl.c:59
0x000032c1      4889fb         mov rbx, rdi
0x000032c4      e8f7eaffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/basename-lgpl.c:63
0x000032c9      4883f801       cmp rax, 1
0x000032cd      760b           jbe 0x32da
0x000032cf      807c03ff2f     cmp byte [rbx + rax - 1], 0x2f
0x000032d4      488d50ff       lea rdx, [rax - 1]
0x000032d8      740e           je 0x32e8
0x000032da      5b             pop rbx                                 ; ../coreutils-8.31/lib/basename-lgpl.c:75
0x000032db      c3             ret
0x000032dc      0f1f4000       nop dword [rax]
0x000032e0      4889c2         mov rdx, rax                            ; ../coreutils-8.31/lib/basename-lgpl.c:63
0x000032e3      0f1f440000     nop dword [rax + rax]
0x000032e8      4883fa01       cmp rdx, 1
0x000032ec      7412           je 0x3300
0x000032ee      807c13ff2f     cmp byte [rbx + rdx - 1], 0x2f
0x000032f3      488d42ff       lea rax, [rdx - 1]
0x000032f7      74e7           je 0x32e0
0x000032f9      4889d0         mov rax, rdx
0x000032fc      5b             pop rbx                                 ; ../coreutils-8.31/lib/basename-lgpl.c:75
0x000032fd      c3             ret
0x000032fe      6690           nop
0x00003300      b801000000     mov eax, 1
0x00003305      5b             pop rbx
0x00003306      c3             ret
0x00003307      660f1f840000.  nop word [rax + rax]
;-- protect_fd:
0x00003310      55             push rbp                                ; ../coreutils-8.31/lib/freopen-safer.c:41
0x00003311      53             push rbx
0x00003312      89fd           mov ebp, edi
0x00003314      488d3da14600.  lea rdi, str.dev_null                   ; fcntl2.h:53       return __open_alias (__path, __oflag, __va_arg_pack ()); ; 0x79bc ; "/dev/null"
0x0000331b      31f6           xor esi, esi
0x0000331d      31c0           xor eax, eax
0x0000331f      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/freopen-safer.c:41
0x00003323      bb01000000     mov ebx, 1                              ; ../coreutils-8.31/lib/freopen-safer.c:52
0x00003328      e843ecffff     call sym.imp.open                       ; fcntl2.h:53       return __open_alias (__path, __oflag, __va_arg_pack ());
0x0000332d      39c5           cmp ebp, eax                            ; ../coreutils-8.31/lib/freopen-safer.c:43
0x0000332f      7418           je 0x3349
0x00003331      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/freopen-safer.c:50
0x00003333      85c0           test eax, eax                           ; ../coreutils-8.31/lib/freopen-safer.c:45
0x00003335      7812           js 0x3349
0x00003337      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/freopen-safer.c:47
0x00003339      e822ebffff     call sym.imp.close
0x0000333e      e8dde9ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/freopen-safer.c:48
0x00003343      c70009000000   mov dword [rax], 9
0x00003349      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/freopen-safer.c:53
0x0000334d      89d8           mov eax, ebx
0x0000334f      5b             pop rbx
0x00003350      5d             pop rbp
0x00003351      c3             ret
0x00003352      0f1f4000       nop dword [rax]
0x00003356      662e0f1f8400.  nop word cs:[rax + rax]
;-- freopen_safer:
0x00003360      4157           push r15                                ; ../coreutils-8.31/lib/freopen-safer.c:63
0x00003362      4156           push r14
0x00003364      4989f7         mov r15, rsi
0x00003367      4155           push r13
0x00003369      4154           push r12
0x0000336b      4989d4         mov r12, rdx
0x0000336e      55             push rbp
0x0000336f      53             push rbx
0x00003370      4883ec18       sub rsp, 0x18
0x00003374      48897c2408     mov qword [rsp + 8], rdi
0x00003379      4889d7         mov rdi, rdx                            ; ../coreutils-8.31/lib/freopen-safer.c:75
0x0000337c      e85febffff     call sym.imp.fileno
0x00003381      89c3           mov ebx, eax
0x00003383      e898e9ffff     call sym.imp.__errno_location
0x00003388      83fb01         cmp ebx, 1
0x0000338b      4989c6         mov r14, rax
0x0000338e      0f845c010000   je 0x34f0
0x00003394      83fb02         cmp ebx, 2
0x00003397      0f8443010000   je 0x34e0
0x0000339d      85db           test ebx, ebx
0x0000339f      0f84b3000000   je 0x3458
0x000033a5      be02000000     mov esi, 2                              ; ../coreutils-8.31/lib/freopen-safer.c:78
0x000033aa      bf02000000     mov edi, 2
0x000033af      e84ceaffff     call sym.imp.dup2
0x000033b4      83f802         cmp eax, 2
0x000033b7      0f95c3         setne bl
0x000033ba      be01000000     mov esi, 1                              ; ../coreutils-8.31/lib/freopen-safer.c:82
0x000033bf      bf01000000     mov edi, 1
0x000033c4      e837eaffff     call sym.imp.dup2
0x000033c9      83f801         cmp eax, 1
0x000033cc      400f95c5       setne bpl
0x000033d0      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/freopen-safer.c:86
0x000033d2      31ff           xor edi, edi
0x000033d4      e827eaffff     call sym.imp.dup2
0x000033d9      85c0           test eax, eax
0x000033db      0f8487000000   je 0x3468
0x000033e1      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/freopen-safer.c:93
0x000033e3      e828ffffff     call sym.protect_fd
0x000033e8      84c0           test al, al
0x000033ea      4189c5         mov r13d, eax
0x000033ed      0f840d010000   je 0x3500
0x000033f3      4084ed         test bpl, bpl                           ; ../coreutils-8.31/lib/freopen-safer.c:95
0x000033f6      7578           jne 0x3470
0x000033f8      84db           test bl, bl                             ; ../coreutils-8.31/lib/freopen-safer.c:97
0x000033fa      7414           je 0x3410
0x000033fc      bf02000000     mov edi, 2
0x00003401      e80affffff     call sym.protect_fd
0x00003406      84c0           test al, al
0x00003408      89c3           mov ebx, eax
0x0000340a      0f84b0000000   je 0x34c0
0x00003410      488b7c2408     mov rdi, qword [rsp + 8]                ; ../coreutils-8.31/lib/freopen-safer.c:100
0x00003415      4c89e2         mov rdx, r12
0x00003418      4c89fe         mov rsi, r15
0x0000341b      e830eaffff     call sym.imp.freopen
0x00003420      4989c4         mov r12, rax
0x00003423      84db           test bl, bl                             ; ../coreutils-8.31/lib/freopen-safer.c:102
0x00003425      458b3e         mov r15d, dword [r14]                   ; ../coreutils-8.31/lib/freopen-safer.c:101
0x00003428      0f85a2000000   jne 0x34d0                              ; ../coreutils-8.31/lib/freopen-safer.c:102
0x0000342e      4084ed         test bpl, bpl                           ; ../coreutils-8.31/lib/freopen-safer.c:104
0x00003431      756d           jne 0x34a0
0x00003433      4584ed         test r13b, r13b                         ; ../coreutils-8.31/lib/freopen-safer.c:106
0x00003436      7577           jne 0x34af
0x00003438      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/freopen-safer.c:108
0x0000343b      7503           jne 0x3440
0x0000343d      45893e         mov dword [r14], r15d                   ; ../coreutils-8.31/lib/freopen-safer.c:109
0x00003440      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/freopen-safer.c:111
0x00003444      4c89e0         mov rax, r12
0x00003447      5b             pop rbx
0x00003448      5d             pop rbp
0x00003449      415c           pop r12
0x0000344b      415d           pop r13
0x0000344d      415e           pop r14
0x0000344f      415f           pop r15
0x00003451      c3             ret
0x00003452      660f1f440000   nop word [rax + rax]
0x00003458      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/freopen-safer.c:72
0x0000345a      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/freopen-safer.c:71
0x0000345c      4531ed         xor r13d, r13d                          ; ../coreutils-8.31/lib/freopen-safer.c:70
0x0000345f      ebaf           jmp 0x3410
0x00003461      0f1f80000000.  nop dword [rax]
0x00003468      4531ed         xor r13d, r13d
0x0000346b      4084ed         test bpl, bpl                           ; ../coreutils-8.31/lib/freopen-safer.c:95
0x0000346e      7488           je 0x33f8
0x00003470      bf01000000     mov edi, 1
0x00003475      e896feffff     call sym.protect_fd
0x0000347a      84c0           test al, al
0x0000347c      89c5           mov ebp, eax
0x0000347e      0f8574ffffff   jne 0x33f8
0x00003484      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/freopen-safer.c:96
0x00003487      84db           test bl, bl                             ; ../coreutils-8.31/lib/freopen-safer.c:102
0x00003489      458b3e         mov r15d, dword [r14]                   ; ../coreutils-8.31/lib/freopen-safer.c:101
0x0000348c      7412           je 0x34a0                               ; ../coreutils-8.31/lib/freopen-safer.c:102
0x0000348e      bf02000000     mov edi, 2                              ; ../coreutils-8.31/lib/freopen-safer.c:103
0x00003493      e8c8e9ffff     call sym.imp.close
0x00003498      0f1f84000000.  nop dword [rax + rax]
0x000034a0      bf01000000     mov edi, 1                              ; ../coreutils-8.31/lib/freopen-safer.c:105
0x000034a5      e8b6e9ffff     call sym.imp.close
0x000034aa      4584ed         test r13b, r13b                         ; ../coreutils-8.31/lib/freopen-safer.c:106
0x000034ad      7489           je 0x3438
0x000034af      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/freopen-safer.c:107
0x000034b1      e8aae9ffff     call sym.imp.close
0x000034b6      eb80           jmp 0x3438
0x000034b8      0f1f84000000.  nop dword [rax + rax]
0x000034c0      458b3e         mov r15d, dword [r14]                   ; ../coreutils-8.31/lib/freopen-safer.c:101
0x000034c3      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/freopen-safer.c:98
0x000034c6      662e0f1f8400.  nop word cs:[rax + rax]
0x000034d0      bf02000000     mov edi, 2                              ; ../coreutils-8.31/lib/freopen-safer.c:103
0x000034d5      e886e9ffff     call sym.imp.close
0x000034da      e94fffffff     jmp 0x342e
0x000034df      90             nop
0x000034e0      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/freopen-safer.c:72
0x000034e2      e9d3feffff     jmp 0x33ba
0x000034e7      660f1f840000.  nop word [rax + rax]
0x000034f0      31db           xor ebx, ebx
0x000034f2      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/freopen-safer.c:71
0x000034f4      e9d7feffff     jmp 0x33d0
0x000034f9      0f1f80000000.  nop dword [rax]
0x00003500      41bd01000000   mov r13d, 1                             ; ../coreutils-8.31/lib/freopen-safer.c:87
0x00003506      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/freopen-safer.c:94
0x00003509      e915ffffff     jmp 0x3423
0x0000350e      6690           nop
;-- set_program_name:
0x00003510      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00003513      53             push rbx
0x00003514      7477           je 0x358d                               ; ../coreutils-8.31/lib/progname.c:51
0x00003516      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x0000351b      4889fb         mov rbx, rdi
0x0000351e      e8ede8ffff     call sym.imp.strrchr
0x00003523      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00003526      7455           je 0x357d
0x00003528      4c8d4001       lea r8, [rax + 1]
0x0000352c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x0000352f      4829da         sub rdx, rbx
0x00003532      4883fa06       cmp rdx, 6
0x00003536      7e45           jle 0x357d
0x00003538      488d70fa       lea rsi, [rax - 6]
0x0000353c      488d3dbd4400.  lea rdi, str..libs                      ; 0x7a00 ; "/.libs/"
0x00003543      b907000000     mov ecx, 7
0x00003548      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000354a      0f97c2         seta dl
0x0000354d      80da00         sbb dl, 0
0x00003550      84d2           test dl, dl
0x00003552      7529           jne 0x357d
0x00003554      488d3dad4400.  lea rdi, [0x00007a08]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x0000355b      b903000000     mov ecx, 3
0x00003560      4c89c6         mov rsi, r8
0x00003563      4c89c3         mov rbx, r8
0x00003566      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00003568      0f97c2         seta dl
0x0000356b      80da00         sbb dl, 0
0x0000356e      84d2           test dl, dl
0x00003570      750b           jne 0x357d
0x00003572      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00003576      48891d236b20.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x20a0a0:8]=0
0x0000357d      48891de46b20.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x20a168:8]=0
0x00003584      48891d356b20.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x20a0c0:8]=0
0x0000358b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x0000358c      c3             ret
0x0000358d      488b0d4c6b20.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a0e0:8]=0
0x00003594      488d3d2d4400.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x79c8 ; "A NULL argv[0] was passed through an exec system call.\n"
0x0000359b      ba37000000     mov edx, 0x37                           ; '7'
0x000035a0      be01000000     mov esi, 1
0x000035a5      e806eaffff     call sym.imp.fwrite
0x000035aa      e861e7ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x000035af      90             nop
;-- gettext_quote.part.1:
0x000035b0      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x000035b1      53             push rbx
0x000035b2      4889fd         mov rbp, rdi
0x000035b5      89f3           mov ebx, esi
0x000035b7      4883ec08       sub rsp, 8
0x000035bb      e8002b0000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x000035c0      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x000035c3      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000035c6      80fa55         cmp dl, 0x55
0x000035c9      7475           je 0x3640
0x000035cb      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x000035ce      7420           je 0x35f0
0x000035d0      488d05444400.  lea rax, str.l                          ; 0x7a1b ; u"\"`\u696c\u6574\u6172l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000035d7      488d15f92c00.  lea rdx, [0x000062d7]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; "'"
0x000035de      83fb09         cmp ebx, 9
0x000035e1      480f45c2       cmovne rax, rdx
0x000035e5      4883c408       add rsp, 8
0x000035e9      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x000035ea      5d             pop rbp
0x000035eb      c3             ret
0x000035ec      0f1f4000       nop dword [rax]
0x000035f0      0fb65001       movzx edx, byte [rax + 1]
0x000035f4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000035f7      80fa42         cmp dl, 0x42
0x000035fa      75d4           jne 0x35d0
0x000035fc      80780231       cmp byte [rax + 2], 0x31
0x00003600      75ce           jne 0x35d0
0x00003602      80780338       cmp byte [rax + 3], 0x38
0x00003606      75c8           jne 0x35d0
0x00003608      80780430       cmp byte [rax + 4], 0x30
0x0000360c      75c2           jne 0x35d0
0x0000360e      80780533       cmp byte [rax + 5], 0x33
0x00003612      75bc           jne 0x35d0
0x00003614      80780630       cmp byte [rax + 6], 0x30
0x00003618      75b6           jne 0x35d0
0x0000361a      80780700       cmp byte [rax + 7], 0
0x0000361e      75b0           jne 0x35d0
0x00003620      807d0060       cmp byte [rbp], 0x60
0x00003624      488d05e94300.  lea rax, [0x00007a14]
0x0000362b      488d15e64300.  lea rdx, [0x00007a18]
0x00003632      480f45c2       cmovne rax, rdx
0x00003636      4883c408       add rsp, 8
0x0000363a      5b             pop rbx
0x0000363b      5d             pop rbp
0x0000363c      c3             ret
0x0000363d      0f1f00         nop dword [rax]
0x00003640      0fb65001       movzx edx, byte [rax + 1]
0x00003644      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003647      80fa54         cmp dl, 0x54
0x0000364a      7584           jne 0x35d0
0x0000364c      0fb65002       movzx edx, byte [rax + 2]
0x00003650      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003653      80fa46         cmp dl, 0x46
0x00003656      0f8574ffffff   jne 0x35d0
0x0000365c      8078032d       cmp byte [rax + 3], 0x2d
0x00003660      0f856affffff   jne 0x35d0
0x00003666      80780438       cmp byte [rax + 4], 0x38
0x0000366a      0f8560ffffff   jne 0x35d0
0x00003670      80780500       cmp byte [rax + 5], 0
0x00003674      0f8556ffffff   jne 0x35d0
0x0000367a      807d0060       cmp byte [rbp], 0x60
0x0000367e      488d05874300.  lea rax, [0x00007a0c]                   ; "\u2018"
0x00003685      488d15844300.  lea rdx, [0x00007a10]                   ; "\u2019"
0x0000368c      480f45c2       cmovne rax, rdx
0x00003690      4883c408       add rsp, 8
0x00003694      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00003695      5d             pop rbp
0x00003696      c3             ret
0x00003697      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x000036a0      4157           push r15
0x000036a2      4156           push r14
0x000036a4      4589c7         mov r15d, r8d
0x000036a7      4155           push r13
0x000036a9      4154           push r12
0x000036ab      4989fe         mov r14, rdi
0x000036ae      55             push rbp
0x000036af      53             push rbx
0x000036b0      4489cb         mov ebx, r9d
0x000036b3      4989f5         mov r13, rsi
0x000036b6      4889cd         mov rbp, rcx
0x000036b9      83e302         and ebx, 2
0x000036bc      4881ecb80000.  sub rsp, 0xb8
0x000036c3      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x000036cb      4889542410     mov qword [rsp + 0x10], rdx
0x000036d0      4489442408     mov dword [rsp + 8], r8d
0x000036d5      44894c2478     mov dword [rsp + 0x78], r9d
0x000036da      4889442420     mov qword [rsp + 0x20], rax
0x000036df      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x000036e7      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x000036ec      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x000036f4      4889442460     mov qword [rsp + 0x60], rax
0x000036f9      64488b042528.  mov rax, qword fs:[0x28]
0x00003702      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000370a      31c0           xor eax, eax
0x0000370c      e89fe6ffff     call sym.imp.__ctype_get_mb_cur_max
0x00003711      4183ff0a       cmp r15d, 0xa
0x00003715      4889442458     mov qword [rsp + 0x58], rax
0x0000371a      0f87af110000   ja 0x48cf
0x00003720      488d0d594300.  lea rcx, [0x00007a80]
0x00003727      4489fa         mov edx, r15d
0x0000372a      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000372e      4801c8         add rax, rcx
0x00003731      ffe0           jmp rax
0x00003733      c644240e01     mov byte [rsp + 0xe], 1
0x00003738      c644247c00     mov byte [rsp + 0x7c], 0
0x0000373d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00003740      48c744245000.  mov qword [rsp + 0x50], 0
0x00003749      c644240f01     mov byte [rsp + 0xf], 1
0x0000374e      c644240d00     mov byte [rsp + 0xd], 0
0x00003753      488d057d2b00.  lea rax, [0x000062d7]                   ; "'"
0x0000375a      48c744241801.  mov qword [rsp + 0x18], 1
0x00003763      4531ff         xor r15d, r15d
0x00003766      c74424080200.  mov dword [rsp + 8], 2
0x0000376e      4889442448     mov qword [rsp + 0x48], rax
0x00003773      4531db         xor r11d, r11d
0x00003776      4889e8         mov rax, rbp
0x00003779      4589e0         mov r8d, r12d
0x0000377c      4c89dd         mov rbp, r11
0x0000377f      4989c3         mov r11, rax
0x00003782      660f1f440000   nop word [rax + rax]
0x00003788      4939eb         cmp r11, rbp
0x0000378b      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x0000378f      4983fbff       cmp r11, 0xffffffffffffffff
0x00003793      750d           jne 0x37a2
0x00003795      488b442410     mov rax, qword [rsp + 0x10]
0x0000379a      803c2800       cmp byte [rax + rbp], 0
0x0000379e      410f95c4       setne r12b
0x000037a2      4584e4         test r12b, r12b
0x000037a5      0f8455060000   je 0x3e00
0x000037ab      837c240802     cmp dword [rsp + 8], 2
0x000037b0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000037b5      4c8d0c2f       lea r9, [rdi + rbp]
0x000037b9      0f95c0         setne al
0x000037bc      2244240d       and al, byte [rsp + 0xd]
0x000037c0      4189c2         mov r10d, eax
0x000037c3      0f84a7000000   je 0x3870
0x000037c9      488b442418     mov rax, qword [rsp + 0x18]
0x000037ce      4885c0         test rax, rax
0x000037d1      0f8429040000   je 0x3c00
0x000037d7      4983fbff       cmp r11, 0xffffffffffffffff
0x000037db      488d5c0500     lea rbx, [rbp + rax]
0x000037e0      752e           jne 0x3810
0x000037e2      4883f801       cmp rax, 1
0x000037e6      7628           jbe 0x3810
0x000037e8      4488442438     mov byte [rsp + 0x38], r8b
0x000037ed      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x000037f2      4c894c2428     mov qword [rsp + 0x28], r9
0x000037f7      e8c4e5ffff     call sym.imp.strlen
0x000037fc      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00003802      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00003808      4989c3         mov r11, rax
0x0000380b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00003810      4c39db         cmp rbx, r11
0x00003813      4488542428     mov byte [rsp + 0x28], r10b
0x00003818      0f87b2050000   ja 0x3dd0
0x0000381e      488b542418     mov rdx, qword [rsp + 0x18]
0x00003823      488b742448     mov rsi, qword [rsp + 0x48]
0x00003828      4c89cf         mov rdi, r9
0x0000382b      4c895c2440     mov qword [rsp + 0x40], r11
0x00003830      4488442438     mov byte [rsp + 0x38], r8b
0x00003835      4c894c2430     mov qword [rsp + 0x30], r9
0x0000383a      e841e6ffff     call sym.imp.memcmp
0x0000383f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00003841      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003846      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x0000384c      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00003851      0f8579050000   jne 0x3dd0
0x00003857      807c240f00     cmp byte [rsp + 0xf], 0
0x0000385c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003862      0f857d0f0000   jne 0x47e5
0x00003868      0f1f84000000.  nop dword [rax + rax]
0x00003870      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00003874      80fb7e         cmp bl, 0x7e
0x00003877      0f871b030000   ja 0x3b98
0x0000387d      488d0d284200.  lea rcx, [0x00007aac]
0x00003884      0fb6d3         movzx edx, bl
0x00003887      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000388b      4801c8         add rax, rcx
0x0000388e      ffe0           jmp rax
0x00003890      4531d2         xor r10d, r10d
0x00003893      4983fb01       cmp r11, 1
0x00003897      0f95c0         setne al
0x0000389a      4983fbff       cmp r11, 0xffffffffffffffff
0x0000389e      750c           jne 0x38ac
0x000038a0      488b442410     mov rax, qword [rsp + 0x10]
0x000038a5      80780100       cmp byte [rax + 1], 0
0x000038a9      0f95c0         setne al
0x000038ac      837c240802     cmp dword [rsp + 8], 2
0x000038b1      0f94c2         sete dl
0x000038b4      84c0           test al, al
0x000038b6      0f844c020000   je 0x3b08
0x000038bc      4531e4         xor r12d, r12d
0x000038bf      31c0           xor eax, eax
0x000038c1      0f1f80000000.  nop dword [rax]
0x000038c8      807c240d01     cmp byte [rsp + 0xd], 1
0x000038cd      0f850f010000   jne 0x39e2
0x000038d3      84d2           test dl, dl
0x000038d5      0f8507010000   jne 0x39e2
0x000038db      488b742420     mov rsi, qword [rsp + 0x20]
0x000038e0      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x000038e3      7414           je 0x38f9
0x000038e5      89da           mov edx, ebx
0x000038e7      c0ea05         shr dl, 5
0x000038ea      0fb6d2         movzx edx, dl
0x000038ed      8b1496         mov edx, dword [rsi + rdx*4]
0x000038f0      0fa3da         bt edx, ebx
0x000038f3      0f824a010000   jb 0x3a43
0x000038f9      4584d2         test r10b, r10b
0x000038fc      0f8541010000   jne 0x3a43
0x00003902      83f001         xor eax, 1
0x00003905      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00003909      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x0000390c      84c0           test al, al
0x0000390e      7420           je 0x3930                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00003910      4d39fd         cmp r13, r15
0x00003913      7605           jbe 0x391a
0x00003915      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000391a      498d4701       lea rax, [r15 + 1]
0x0000391e      4939c5         cmp r13, rax
0x00003921      7606           jbe 0x3929
0x00003923      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003929      4983c702       add r15, 2
0x0000392d      4531c0         xor r8d, r8d
0x00003930      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00003933      7304           jae 0x3939                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00003935      43881c3e       mov byte [r14 + r15], bl
0x00003939      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x0000393e      4983c701       add r15, 1
0x00003942      b800000000     mov eax, 0
0x00003947      4584e4         test r12b, r12b
0x0000394a      0f44f8         cmove edi, eax
0x0000394d      40887c240e     mov byte [rsp + 0xe], dil
0x00003952      e931feffff     jmp 0x3788
0x00003957      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00003960      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00003963      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00003967      83f802         cmp eax, 2
0x0000396a      0f84b8050000   je 0x3f28
0x00003970      83f805         cmp eax, 5
0x00003973      0f846f050000   je 0x3ee8
0x00003979      83f802         cmp eax, 2
0x0000397c      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003981      0f94c2         sete dl
0x00003984      4531e4         xor r12d, r12d
0x00003987      31c0           xor eax, eax
0x00003989      e93affffff     jmp 0x38c8
0x0000398e      6690           nop
0x00003990      4531d2         xor r10d, r10d
0x00003993      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00003998      0f8402050000   je 0x3ea0
0x0000399e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x000039a3      31d2           xor edx, edx
0x000039a5      31c0           xor eax, eax
0x000039a7      bb27000000     mov ebx, 0x27                           ; '''
0x000039ac      e917ffffff     jmp 0x38c8
0x000039b1      0f1f80000000.  nop dword [rax]
0x000039b8      ba09000000     mov edx, 9
0x000039bd      bb74000000     mov ebx, 0x74                           ; 't'
0x000039c2      837c240802     cmp dword [rsp + 8], 2
0x000039c7      0f94c0         sete al
0x000039ca      2244240f       and al, byte [rsp + 0xf]
0x000039ce      0f854a010000   jne 0x3b1e
0x000039d4      807c240d00     cmp byte [rsp + 0xd], 0
0x000039d9      7565           jne 0x3a40
0x000039db      89d3           mov ebx, edx
0x000039dd      4531e4         xor r12d, r12d
0x000039e0      31c0           xor eax, eax
0x000039e2      807c240f00     cmp byte [rsp + 0xf], 0
0x000039e7      0f85eefeffff   jne 0x38db
0x000039ed      e907ffffff     jmp 0x38f9                              ; ../coreutils-8.31/lib/quotearg.c:210
0x000039f2      660f1f440000   nop word [rax + rax]
0x000039f8      ba08000000     mov edx, 8
0x000039fd      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003a02      ebd0           jmp 0x39d4
0x00003a04      0f1f4000       nop dword [rax]
0x00003a08      837c240802     cmp dword [rsp + 8], 2
0x00003a0d      0f84cd030000   je 0x3de0
0x00003a13      807c240d00     cmp byte [rsp + 0xd], 0
0x00003a18      0f8412020000   je 0x3c30
0x00003a1e      807c240f00     cmp byte [rsp + 0xf], 0
0x00003a23      0f8407020000   je 0x3c30
0x00003a29      48837c241800   cmp qword [rsp + 0x18], 0
0x00003a2f      0f85b6030000   jne 0x3deb
0x00003a35      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00003a3a      660f1f440000   nop word [rax + rax]
0x00003a40      4531e4         xor r12d, r12d
0x00003a43      837c240802     cmp dword [rsp + 8], 2
0x00003a48      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x00003a4b      807c240f00     cmp byte [rsp + 0xf], 0
0x00003a50      89d0           mov eax, edx
0x00003a52      0f8550080000   jne 0x42a8
0x00003a58      4489c0         mov eax, r8d
0x00003a5b      83f001         xor eax, 1
0x00003a5e      20d0           and al, dl
0x00003a60      742f           je 0x3a91
0x00003a62      4d39fd         cmp r13, r15
0x00003a65      7605           jbe 0x3a6c
0x00003a67      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003a6c      498d5701       lea rdx, [r15 + 1]
0x00003a70      4939d5         cmp r13, rdx
0x00003a73      7606           jbe 0x3a7b
0x00003a75      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00003a7b      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x00003a7f      4939d5         cmp r13, rdx
0x00003a82      7606           jbe 0x3a8a
0x00003a84      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003a8a      4983c703       add r15, 3
0x00003a8e      4189c0         mov r8d, eax
0x00003a91      4d39fd         cmp r13, r15
0x00003a94      7605           jbe 0x3a9b
0x00003a96      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003a9b      4983c701       add r15, 1
0x00003a9f      4883c501       add rbp, 1
0x00003aa3      e988feffff     jmp 0x3930
0x00003aa8      0f1f84000000.  nop dword [rax + rax]
0x00003ab0      807c240d00     cmp byte [rsp + 0xd], 0
0x00003ab5      0f85c8010000   jne 0x3c83
0x00003abb      31d2           xor edx, edx
0x00003abd      f644247801     test byte [rsp + 0x78], 1
0x00003ac2      0f8413ffffff   je 0x39db
0x00003ac8      4883c501       add rbp, 1
0x00003acc      e9b7fcffff     jmp 0x3788
0x00003ad1      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00003ad8      837c240802     cmp dword [rsp + 8], 2
0x00003add      0f94c2         sete dl
0x00003ae0      31c0           xor eax, eax
0x00003ae2      e9e1fdffff     jmp 0x38c8
0x00003ae7      660f1f840000.  nop word [rax + rax]
0x00003af0      ba07000000     mov edx, 7
0x00003af5      bb61000000     mov ebx, 0x61                           ; 'a'
0x00003afa      e9d5feffff     jmp 0x39d4
0x00003aff      90             nop
0x00003b00      837c240802     cmp dword [rsp + 8], 2
0x00003b05      0f94c2         sete dl
0x00003b08      4885ed         test rbp, rbp
0x00003b0b      0f85abfdffff   jne 0x38bc
0x00003b11      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003b16      20d0           and al, dl
0x00003b18      0f84aafdffff   je 0x38c8
0x00003b1e      4c89dd         mov rbp, r11
0x00003b21      c74424080200.  mov dword [rsp + 8], 2
0x00003b29      e9fb060000     jmp 0x4229
0x00003b2e      6690           nop
0x00003b30      837c240802     cmp dword [rsp + 8], 2
0x00003b35      0f94c2         sete dl
0x00003b38      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x00003b3b      ebd4           jmp 0x3b11
0x00003b3d      0f1f00         nop dword [rax]
0x00003b40      837c240802     cmp dword [rsp + 8], 2
0x00003b45      bb20000000     mov ebx, 0x20                           ; "@"
0x00003b4a      0f94c2         sete dl
0x00003b4d      ebc2           jmp 0x3b11
0x00003b4f      90             nop
0x00003b50      ba0d000000     mov edx, 0xd
0x00003b55      bb72000000     mov ebx, 0x72                           ; 'r'
0x00003b5a      e963feffff     jmp 0x39c2
0x00003b5f      90             nop
0x00003b60      ba0c000000     mov edx, 0xc
0x00003b65      bb66000000     mov ebx, 0x66                           ; 'f'
0x00003b6a      e965feffff     jmp 0x39d4
0x00003b6f      90             nop
0x00003b70      ba0b000000     mov edx, 0xb
0x00003b75      bb76000000     mov ebx, 0x76                           ; 'v'
0x00003b7a      e955feffff     jmp 0x39d4
0x00003b7f      90             nop
0x00003b80      ba0a000000     mov edx, 0xa
0x00003b85      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x00003b8a      e933feffff     jmp 0x39c2
0x00003b8f      90             nop
0x00003b90      4531d2         xor r10d, r10d
0x00003b93      0f1f440000     nop dword [rax + rax]
0x00003b98      48837c245801   cmp qword [rsp + 0x58], 1
0x00003b9e      0f85a4030000   jne 0x3f48
0x00003ba4      4c895c2438     mov qword [rsp + 0x38], r11
0x00003ba9      4488442430     mov byte [rsp + 0x30], r8b
0x00003bae      4488542428     mov byte [rsp + 0x28], r10b
0x00003bb3      e838e4ffff     call sym.imp.__ctype_b_loc
0x00003bb8      488b08         mov rcx, qword [rax]
0x00003bbb      0fb6d3         movzx edx, bl
0x00003bbe      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003bc4      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x00003bca      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x00003bcf      bf01000000     mov edi, 1
0x00003bd4      0fb70451       movzx eax, word [rcx + rdx*2]
0x00003bd8      66250040       and ax, 0x4000
0x00003bdc      410f95c4       setne r12b
0x00003be0      0f94c0         sete al
0x00003be3      2244240d       and al, byte [rsp + 0xd]
0x00003be7      84c0           test al, al
0x00003be9      0f8592090000   jne 0x4581
0x00003bef      837c240802     cmp dword [rsp + 8], 2
0x00003bf4      0f94c2         sete dl
0x00003bf7      e9ccfcffff     jmp 0x38c8
0x00003bfc      0f1f4000       nop dword [rax]
0x00003c00      410fb619       movzx ebx, byte [r9]
0x00003c04      80fb7e         cmp bl, 0x7e
0x00003c07      7787           ja 0x3b90
0x00003c09      488d0d984000.  lea rcx, [0x00007ca8]
0x00003c10      0fb6d3         movzx edx, bl
0x00003c13      48630491       movsxd rax, dword [rcx + rdx*4]
0x00003c17      4801c8         add rax, rcx
0x00003c1a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x00003c1c      0f1f4000       nop dword [rax]
0x00003c20      4531d2         xor r10d, r10d
0x00003c23      807c240d00     cmp byte [rsp + 0xd], 0
0x00003c28      0f85f0fdffff   jne 0x3a1e
0x00003c2e      6690           nop
0x00003c30      ba5c000000     mov edx, 0x5c                           ; '\'
0x00003c35      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00003c3a      e995fdffff     jmp 0x39d4
0x00003c3f      90             nop
0x00003c40      ba0c000000     mov edx, 0xc
0x00003c45      4531d2         xor r10d, r10d
0x00003c48      bb66000000     mov ebx, 0x66                           ; 'f'
0x00003c4d      e982fdffff     jmp 0x39d4
0x00003c52      660f1f440000   nop word [rax + rax]
0x00003c58      ba0a000000     mov edx, 0xa
0x00003c5d      4531d2         xor r10d, r10d
0x00003c60      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00003c65      e958fdffff     jmp 0x39c2
0x00003c6a      660f1f440000   nop word [rax + rax]
0x00003c70      bb61000000     mov ebx, 0x61                           ; 'a'
0x00003c75      e9c6fdffff     jmp 0x3a40
0x00003c7a      660f1f440000   nop word [rax + rax]
0x00003c80      4531d2         xor r10d, r10d
0x00003c83      837c240802     cmp dword [rsp + 8], 2
0x00003c88      0f94c2         sete dl
0x00003c8b      807c240f00     cmp byte [rsp + 0xf], 0
0x00003c90      0f85940b0000   jne 0x482a
0x00003c96      4489c0         mov eax, r8d
0x00003c99      4c89f9         mov rcx, r15
0x00003c9c      83f001         xor eax, 1
0x00003c9f      20d0           and al, dl
0x00003ca1      742d           je 0x3cd0
0x00003ca3      4d39fd         cmp r13, r15
0x00003ca6      7605           jbe 0x3cad
0x00003ca8      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003cad      498d4f01       lea rcx, [r15 + 1]
0x00003cb1      4939cd         cmp r13, rcx
0x00003cb4      7606           jbe 0x3cbc
0x00003cb6      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00003cbc      498d4f02       lea rcx, [r15 + 2]
0x00003cc0      4939cd         cmp r13, rcx
0x00003cc3      0f8730060000   ja 0x42f9
0x00003cc9      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x00003ccd      4189c0         mov r8d, eax
0x00003cd0      4939cd         cmp r13, rcx
0x00003cd3      7605           jbe 0x3cda
0x00003cd5      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003cda      837c240802     cmp dword [rsp + 8], 2
0x00003cdf      4c8d7901       lea r15, [rcx + 1]
0x00003ce3      0f8400060000   je 0x42e9
0x00003ce9      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00003ced      4c39d8         cmp rax, r11
0x00003cf0      7319           jae 0x3d0b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00003cf2      488b442410     mov rax, qword [rsp + 0x10]
0x00003cf7      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x00003cfc      88442428       mov byte [rsp + 0x28], al
0x00003d00      83e830         sub eax, 0x30
0x00003d03      3c09           cmp al, 9
0x00003d05      0f862e080000   jbe 0x4539
0x00003d0b      4489e0         mov eax, r12d
0x00003d0e      bb30000000     mov ebx, 0x30                           ; '0'
0x00003d13      4531e4         xor r12d, r12d
0x00003d16      e9adfbffff     jmp 0x38c8                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x00003d1b      0f1f440000     nop dword [rax + rax]
0x00003d20      837c240802     cmp dword [rsp + 8], 2
0x00003d25      4589d4         mov r12d, r10d
0x00003d28      0f94c2         sete dl
0x00003d2b      4531d2         xor r10d, r10d
0x00003d2e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003d30      e993fbffff     jmp 0x38c8                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00003d35      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003d38      837c240802     cmp dword [rsp + 8], 2
0x00003d3d      0f94c2         sete dl
0x00003d40      4531d2         xor r10d, r10d
0x00003d43      e9c0fdffff     jmp 0x3b08
0x00003d48      0f1f84000000.  nop dword [rax + rax]
0x00003d50      837c240802     cmp dword [rsp + 8], 2
0x00003d55      0f94c2         sete dl
0x00003d58      4531d2         xor r10d, r10d
0x00003d5b      4531e4         xor r12d, r12d
0x00003d5e      e9aefdffff     jmp 0x3b11
0x00003d63      0f1f440000     nop dword [rax + rax]
0x00003d68      837c240802     cmp dword [rsp + 8], 2
0x00003d6d      4589d4         mov r12d, r10d
0x00003d70      bb20000000     mov ebx, 0x20                           ; "@"
0x00003d75      0f94c2         sete dl
0x00003d78      4531d2         xor r10d, r10d
0x00003d7b      e991fdffff     jmp 0x3b11
0x00003d80      ba0d000000     mov edx, 0xd
0x00003d85      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00003d88      bb72000000     mov ebx, 0x72                           ; 'r'
0x00003d8d      e930fcffff     jmp 0x39c2
0x00003d92      660f1f440000   nop word [rax + rax]
0x00003d98      bb76000000     mov ebx, 0x76                           ; 'v'
0x00003d9d      e99efcffff     jmp 0x3a40
0x00003da2      660f1f440000   nop word [rax + rax]
0x00003da8      ba09000000     mov edx, 9
0x00003dad      4531d2         xor r10d, r10d
0x00003db0      bb74000000     mov ebx, 0x74                           ; 't'
0x00003db5      e908fcffff     jmp 0x39c2
0x00003dba      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00003dc0      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003dc5      e976fcffff     jmp 0x3a40
0x00003dca      660f1f440000   nop word [rax + rax]
0x00003dd0      4531d2         xor r10d, r10d
0x00003dd3      e998faffff     jmp 0x3870
0x00003dd8      0f1f84000000.  nop dword [rax + rax]
0x00003de0      807c240f00     cmp byte [rsp + 0xf], 0
0x00003de5      0f8565090000   jne 0x4750
0x00003deb      4883c501       add rbp, 1
0x00003def      4489c0         mov eax, r8d
0x00003df2      4531e4         xor r12d, r12d
0x00003df5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00003dfa      e90dfbffff     jmp 0x390c
0x00003dff      90             nop
0x00003e00      837c240802     cmp dword [rsp + 8], 2
0x00003e05      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003e0a      4589c4         mov r12d, r8d
0x00003e0d      4c89dd         mov rbp, r11
0x00003e10      0f94c2         sete dl
0x00003e13      89d8           mov eax, ebx
0x00003e15      4d85ff         test r15, r15
0x00003e18      0f94c1         sete cl
0x00003e1b      21d0           and eax, edx
0x00003e1d      20c8           and al, cl
0x00003e1f      0f85610a0000   jne 0x4886                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00003e25      89d8           mov eax, ebx
0x00003e27      83f001         xor eax, 1
0x00003e2a      20c2           and dl, al
0x00003e2c      0f846a090000   je 0x479c
0x00003e32      807c247c00     cmp byte [rsp + 0x7c], 0
0x00003e37      0f845d090000   je 0x479a
0x00003e3d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00003e42      0f85f5090000   jne 0x483d
0x00003e48      4d85ed         test r13, r13
0x00003e4b      0f94c0         sete al
0x00003e4e      48837c245000   cmp qword [rsp + 0x50], 0
0x00003e54      0f95c2         setne dl
0x00003e57      20d0           and al, dl
0x00003e59      0f841d0a0000   je 0x487c
0x00003e5f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003e64      488d1d6c2400.  lea rbx, [0x000062d7]                   ; "'"
0x00003e6b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x00003e6f      c74424080200.  mov dword [rsp + 8], 2
0x00003e77      41bf01000000   mov r15d, 1
0x00003e7d      48c744241801.  mov qword [rsp + 0x18], 1
0x00003e86      c644240f00     mov byte [rsp + 0xf], 0
0x00003e8b      48895c2448     mov qword [rsp + 0x48], rbx
0x00003e90      8844247c       mov byte [rsp + 0x7c], al
0x00003e94      e9daf8ffff     jmp 0x3773
0x00003e99      0f1f80000000.  nop dword [rax]
0x00003ea0      807c240f00     cmp byte [rsp + 0xf], 0
0x00003ea5      0f85a5080000   jne 0x4750
0x00003eab      4d85ed         test r13, r13
0x00003eae      0f84fc030000   je 0x42b0                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00003eb4      31d2           xor edx, edx
0x00003eb6      48837c245000   cmp qword [rsp + 0x50], 0
0x00003ebc      0f85ee030000   jne 0x42b0                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00003ec2      4c896c2450     mov qword [rsp + 0x50], r13
0x00003ec7      4983c703       add r15, 3
0x00003ecb      31c0           xor eax, eax
0x00003ecd      448864247c     mov byte [rsp + 0x7c], r12b
0x00003ed2      4531c0         xor r8d, r8d
0x00003ed5      4989d5         mov r13, rdx
0x00003ed8      bb27000000     mov ebx, 0x27                           ; '''
0x00003edd      e917faffff     jmp 0x38f9
0x00003ee2      660f1f440000   nop word [rax + rax]
0x00003ee8      f644247804     test byte [rsp + 0x78], 4
0x00003eed      7421           je 0x3f10
0x00003eef      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00003ef3      4c39d9         cmp rcx, r11
0x00003ef6      7318           jae 0x3f10
0x00003ef8      488b442410     mov rax, qword [rsp + 0x10]
0x00003efd      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00003f02      0f848a070000   je 0x4692
0x00003f08      0f1f84000000.  nop dword [rax + rax]
0x00003f10      31d2           xor edx, edx
0x00003f12      4531e4         xor r12d, r12d
0x00003f15      31c0           xor eax, eax
0x00003f17      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003f1c      e9a7f9ffff     jmp 0x38c8
0x00003f21      0f1f80000000.  nop dword [rax]
0x00003f28      807c240f00     cmp byte [rsp + 0xf], 0
0x00003f2d      0f851d080000   jne 0x4750
0x00003f33      4531e4         xor r12d, r12d
0x00003f36      31c0           xor eax, eax
0x00003f38      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003f3d      e9b7f9ffff     jmp 0x38f9                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00003f42      660f1f440000   nop word [rax + rax]
0x00003f48      488d8424a000.  lea rax, [rsp + 0xa0]
0x00003f50      4983fbff       cmp r11, 0xffffffffffffffff
0x00003f54      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00003f60      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00003f65      752d           jne 0x3f94
0x00003f67      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003f6c      4488442440     mov byte [rsp + 0x40], r8b
0x00003f71      4488542438     mov byte [rsp + 0x38], r10b
0x00003f76      4c894c2430     mov qword [rsp + 0x30], r9
0x00003f7b      e840deffff     call sym.imp.strlen
0x00003f80      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00003f86      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x00003f8c      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x00003f8f      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003f94      488d84249c00.  lea rax, [rsp + 0x9c]
0x00003f9c      31c9           xor ecx, ecx
0x00003f9e      885c247e       mov byte [rsp + 0x7e], bl
0x00003fa2      448844247d     mov byte [rsp + 0x7d], r8b
0x00003fa7      4889cb         mov rbx, rcx
0x00003faa      4c898c248800.  mov qword [rsp + 0x88], r9
0x00003fb2      4889442438     mov qword [rsp + 0x38], rax
0x00003fb7      448854247f     mov byte [rsp + 0x7f], r10b
0x00003fbc      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00003fc4      4c89742440     mov qword [rsp + 0x40], r14
0x00003fc9      4c896c2470     mov qword [rsp + 0x70], r13
0x00003fce      4c895c2430     mov qword [rsp + 0x30], r11
0x00003fd3      488b442410     mov rax, qword [rsp + 0x10]
0x00003fd8      4c8d741d00     lea r14, [rbp + rbx]
0x00003fdd      488b542430     mov rdx, qword [rsp + 0x30]
0x00003fe2      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00003fe7      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00003fec      4e8d2c30       lea r13, [rax + r14]
0x00003ff0      4c29f2         sub rdx, r14
0x00003ff3      4c89ee         mov rsi, r13
0x00003ff6      e8351c0000     call sym.rpl_mbrtowc
0x00003ffb      4885c0         test rax, rax
0x00003ffe      4989c7         mov r15, rax
0x00004001      744e           je 0x4051
0x00004003      4883f8ff       cmp rax, 0xffffffffffffffff
0x00004007      0f8418060000   je 0x4625
0x0000400d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00004011      0f849a050000   je 0x45b1
0x00004017      837c240802     cmp dword [rsp + 8], 2
0x0000401c      0f94c0         sete al
0x0000401f      2244240f       and al, byte [rsp + 0xf]
0x00004023      0f8597010000   jne 0x41c0
0x00004029      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00004030      e8abdfffff     call sym.imp.iswprint
0x00004035      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000403a      85c0           test eax, eax
0x0000403c      b800000000     mov eax, 0
0x00004041      440f44e0       cmove r12d, eax
0x00004045      4c01fb         add rbx, r15
0x00004048      e883dfffff     call sym.imp.mbsinit
0x0000404d      85c0           test eax, eax
0x0000404f      7482           je 0x3fd3
0x00004051      4489e2         mov edx, r12d
0x00004054      4889df         mov rdi, rbx
0x00004057      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000405d      83f201         xor edx, 1
0x00004060      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00004065      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000406b      2254240d       and dl, byte [rsp + 0xd]
0x0000406f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004077      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000407c      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00004081      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00004086      4883ff01       cmp rdi, 1
0x0000408a      0f86fb050000   jbe 0x468b
0x00004090      4889f9         mov rcx, rdi
0x00004093      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00004095      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x0000409b      4801e9         add rcx, rbp
0x0000409e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000040a3      e9b6000000     jmp 0x415e
0x000040a8      0f1f84000000.  nop dword [rax + rax]
0x000040b0      837c240802     cmp dword [rsp + 8], 2
0x000040b5      0f94c0         sete al
0x000040b8      4584c9         test r9b, r9b
0x000040bb      0f85af040000   jne 0x4570
0x000040c1      4489c6         mov esi, r8d
0x000040c4      83f601         xor esi, 1
0x000040c7      4020f0         and al, sil
0x000040ca      742f           je 0x40fb                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x000040cc      4d39fd         cmp r13, r15
0x000040cf      7605           jbe 0x40d6
0x000040d1      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000040d6      498d7701       lea rsi, [r15 + 1]
0x000040da      4939f5         cmp r13, rsi
0x000040dd      7606           jbe 0x40e5                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x000040df      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000040e5      498d7702       lea rsi, [r15 + 2]
0x000040e9      4939f5         cmp r13, rsi
0x000040ec      7606           jbe 0x40f4
0x000040ee      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000040f4      4983c703       add r15, 3
0x000040f8      4189c0         mov r8d, eax
0x000040fb      4d39fd         cmp r13, r15
0x000040fe      7605           jbe 0x4105
0x00004100      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00004105      498d4701       lea rax, [r15 + 1]
0x00004109      4939c5         cmp r13, rax
0x0000410c      760d           jbe 0x411b
0x0000410e      89d8           mov eax, ebx
0x00004110      c0e806         shr al, 6
0x00004113      83c030         add eax, 0x30
0x00004116      4388443e01     mov byte [r14 + r15 + 1], al
0x0000411b      498d4702       lea rax, [r15 + 2]
0x0000411f      4939c5         cmp r13, rax
0x00004122      7610           jbe 0x4134
0x00004124      89d8           mov eax, ebx
0x00004126      c0e803         shr al, 3
0x00004129      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x0000412c      83c030         add eax, 0x30
0x0000412f      4388443e02     mov byte [r14 + r15 + 2], al
0x00004134      83e307         and ebx, 7
0x00004137      4883c501       add rbp, 1
0x0000413b      4983c703       add r15, 3
0x0000413f      83c330         add ebx, 0x30
0x00004142      4839cd         cmp rbp, rcx
0x00004145      0f83e5f7ffff   jae 0x3930
0x0000414b      89d6           mov esi, edx
0x0000414d      4d39fd         cmp r13, r15
0x00004150      7604           jbe 0x4156
0x00004152      43881c3e       mov byte [r14 + r15], bl
0x00004156      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000415a      4983c701       add r15, 1
0x0000415e      84d2           test dl, dl
0x00004160      0f854affffff   jne 0x40b0
0x00004166      89f0           mov eax, esi
0x00004168      83f001         xor eax, 1
0x0000416b      4421c0         and eax, r8d
0x0000416e      4584d2         test r10b, r10b
0x00004171      740e           je 0x4181
0x00004173      4d39fd         cmp r13, r15
0x00004176      7605           jbe 0x417d
0x00004178      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000417d      4983c701       add r15, 1
0x00004181      4883c501       add rbp, 1
0x00004185      4839cd         cmp rbp, rcx
0x00004188      0f837ef7ffff   jae 0x390c
0x0000418e      84c0           test al, al
0x00004190      0f84f8030000   je 0x458e
0x00004196      4d39fd         cmp r13, r15
0x00004199      7605           jbe 0x41a0
0x0000419b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000041a0      498d4701       lea rax, [r15 + 1]
0x000041a4      4939c5         cmp r13, rax
0x000041a7      7606           jbe 0x41af
0x000041a9      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000041af      4983c702       add r15, 2
0x000041b3      4531d2         xor r10d, r10d
0x000041b6      4531c0         xor r8d, r8d
0x000041b9      eb92           jmp 0x414d
0x000041bb      0f1f440000     nop dword [rax + rax]
0x000041c0      4983ff01       cmp r15, 1
0x000041c4      0f845ffeffff   je 0x4029
0x000041ca      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000041cf      4a8d0c3f       lea rcx, [rdi + r15]
0x000041d3      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x000041d8      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x000041dc      eb0f           jmp 0x41ed
0x000041de      6690           nop
0x000041e0      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x000041e4      4939d0         cmp r8, rdx
0x000041e7      0f843cfeffff   je 0x4029
0x000041ed      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x000041f0      83e95b         sub ecx, 0x5b
0x000041f3      80f921         cmp cl, 0x21
0x000041f6      77e8           ja 0x41e0                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x000041f8      be01000000     mov esi, 1
0x000041fd      48d3e6         shl rsi, cl
0x00004200      4889f1         mov rcx, rsi
0x00004203      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x0000420d      4885f1         test rcx, rsi
0x00004210      74ce           je 0x41e0
0x00004212      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004217      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000421c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00004221      c74424080200.  mov dword [rsp + 8], 2
0x00004229      807c240d00     cmp byte [rsp + 0xd], 0
0x0000422e      7410           je 0x4240
0x00004230      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00004232      b804000000     mov eax, 4
0x00004237      0f44442408     cmove eax, dword [rsp + 8]
0x0000423c      89442408       mov dword [rsp + 8], eax
0x00004240      4883ec08       sub rsp, 8
0x00004244      4889e9         mov rcx, rbp
0x00004247      4c89ee         mov rsi, r13
0x0000424a      ff742468       push qword [rsp + 0x68]
0x0000424e      ff742478       push qword [rsp + 0x78]
0x00004252      4c89f7         mov rdi, r14
0x00004255      6a00           push 0
0x00004257      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x0000425f      448b442428     mov r8d, dword [rsp + 0x28]
0x00004264      488b542430     mov rdx, qword [rsp + 0x30]
0x00004269      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x0000426d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00004272      4883c420       add rsp, 0x20
0x00004276      4989c7         mov r15, rax
0x00004279      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00004281      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000428a      4c89f8         mov rax, r15
0x0000428d      0f8500060000   jne 0x4893
0x00004293      4881c4b80000.  add rsp, 0xb8
0x0000429a      5b             pop rbx
0x0000429b      5d             pop rbp
0x0000429c      415c           pop r12
0x0000429e      415d           pop r13
0x000042a0      415e           pop r14
0x000042a2      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x000042a4      c3             ret
0x000042a5      0f1f00         nop dword [rax]
0x000042a8      4c89dd         mov rbp, r11
0x000042ab      e979ffffff     jmp 0x4229
0x000042b0      4d39fd         cmp r13, r15
0x000042b3      7605           jbe 0x42ba
0x000042b5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000042ba      498d4701       lea rax, [r15 + 1]
0x000042be      4939c5         cmp r13, rax
0x000042c1      7606           jbe 0x42c9
0x000042c3      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x000042c9      498d4702       lea rax, [r15 + 2]
0x000042cd      4939c5         cmp r13, rax
0x000042d0      0f86ec050000   jbe 0x48c2
0x000042d6      4c89ea         mov rdx, r13
0x000042d9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000042df      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000042e4      e9d9fbffff     jmp 0x3ec2
0x000042e9      4489e0         mov eax, r12d
0x000042ec      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x000042f1      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x000042f4      e900f6ffff     jmp 0x38f9                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x000042f9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000042ff      e9c5f9ffff     jmp 0x3cc9
0x00004304      85db           test ebx, ebx
0x00004306      0f8527f4ffff   jne 0x3733
0x0000430c      c644240d01     mov byte [rsp + 0xd], 1
0x00004311      4d85ed         test r13, r13
0x00004314      0f8590050000   jne 0x48aa
0x0000431a      488d05b61f00.  lea rax, [0x000062d7]                   ; "'"
0x00004321      48c744245000.  mov qword [rsp + 0x50], 0
0x0000432a      c644240e01     mov byte [rsp + 0xe], 1
0x0000432f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004334      4531e4         xor r12d, r12d
0x00004337      c644240f00     mov byte [rsp + 0xf], 0
0x0000433c      48c744241801.  mov qword [rsp + 0x18], 1
0x00004345      4889442448     mov qword [rsp + 0x48], rax
0x0000434a      41bf01000000   mov r15d, 1
0x00004350      c74424080200.  mov dword [rsp + 8], 2
0x00004358      e916f4ffff     jmp 0x3773                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x0000435d      0f1f00         nop dword [rax]
0x00004360      85db           test ebx, ebx
0x00004362      0f85f5030000   jne 0x475d
0x00004368      4d85ed         test r13, r13
0x0000436b      0f8425020000   je 0x4596
0x00004371      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00004375      c644240e01     mov byte [rsp + 0xe], 1
0x0000437a      4531e4         xor r12d, r12d
0x0000437d      c644247c00     mov byte [rsp + 0x7c], 0
0x00004382      48c744245000.  mov qword [rsp + 0x50], 0
0x0000438b      488d05893600.  lea rax, str.l                          ; 0x7a1b ; u"\"`\u696c\u6574\u6172l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004392      c644240f00     mov byte [rsp + 0xf], 0
0x00004397      c644240d01     mov byte [rsp + 0xd], 1
0x0000439c      48c744241801.  mov qword [rsp + 0x18], 1
0x000043a5      41bf01000000   mov r15d, 1
0x000043ab      4889442448     mov qword [rsp + 0x48], rax
0x000043b0      e9bef3ffff     jmp 0x3773
0x000043b5      488d055f3600.  lea rax, str.l                          ; 0x7a1b ; u"\"`\u696c\u6574\u6172l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000043bc      c644240e01     mov byte [rsp + 0xe], 1
0x000043c1      c644247c00     mov byte [rsp + 0x7c], 0
0x000043c6      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x000043c9      48c744245000.  mov qword [rsp + 0x50], 0
0x000043d2      c644240f01     mov byte [rsp + 0xf], 1
0x000043d7      c644240d01     mov byte [rsp + 0xd], 1
0x000043dc      48c744241801.  mov qword [rsp + 0x18], 1
0x000043e5      4531ff         xor r15d, r15d
0x000043e8      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x000043ed      c74424080500.  mov dword [rsp + 8], 5
0x000043f5      e979f3ffff     jmp 0x3773
0x000043fa      c644240e01     mov byte [rsp + 0xe], 1
0x000043ff      c644247c00     mov byte [rsp + 0x7c], 0
0x00004404      4531e4         xor r12d, r12d
0x00004407      48c744245000.  mov qword [rsp + 0x50], 0
0x00004410      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00004415      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00004418      c644240d01     mov byte [rsp + 0xd], 1
0x0000441d      48c744241800.  mov qword [rsp + 0x18], 0
0x00004426      48c744244800.  mov qword [rsp + 0x48], 0
0x0000442f      e93ff3ffff     jmp 0x3773
0x00004434      837c24080a     cmp dword [rsp + 8], 0xa
0x00004439      7456           je 0x4491
0x0000443b      488d35db3500.  lea rsi, [0x00007a1d]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00004442      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00004444      ba05000000     mov edx, 5
0x00004449      e852d9ffff     call sym.imp.dcgettext
0x0000444e      4889c1         mov rcx, rax
0x00004451      4889442468     mov qword [rsp + 0x68], rax
0x00004456      488d05c03500.  lea rax, [0x00007a1d]                   ; "`"
0x0000445d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00004460      0f8498030000   je 0x47fe
0x00004466      488d356a1e00.  lea rsi, [0x000062d7]                   ; "'"
0x0000446d      31ff           xor edi, edi
0x0000446f      ba05000000     mov edx, 5
0x00004474      e827d9ffff     call sym.imp.dcgettext
0x00004479      4889c1         mov rcx, rax
0x0000447c      4889442460     mov qword [rsp + 0x60], rax
0x00004481      488d054f1e00.  lea rax, [0x000062d7]                   ; "'"
0x00004488      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x0000448b      0f8483030000   je 0x4814
0x00004491      4531ff         xor r15d, r15d
0x00004494      85db           test ebx, ebx
0x00004496      0f84c1010000   je 0x465d
0x0000449c      85db           test ebx, ebx
0x0000449e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x000044a3      0f9544240f     setne byte [rsp + 0xf]
0x000044a8      4531e4         xor r12d, r12d
0x000044ab      4889df         mov rdi, rbx
0x000044ae      e80dd9ffff     call sym.imp.strlen
0x000044b3      48895c2448     mov qword [rsp + 0x48], rbx
0x000044b8      4889442418     mov qword [rsp + 0x18], rax
0x000044bd      c644240e01     mov byte [rsp + 0xe], 1
0x000044c2      c644247c00     mov byte [rsp + 0x7c], 0
0x000044c7      48c744245000.  mov qword [rsp + 0x50], 0
0x000044d0      c644240d01     mov byte [rsp + 0xd], 1
0x000044d5      e999f2ffff     jmp 0x3773
0x000044da      c644240e01     mov byte [rsp + 0xe], 1
0x000044df      c644247c00     mov byte [rsp + 0x7c], 0
0x000044e4      4531e4         xor r12d, r12d
0x000044e7      48c744245000.  mov qword [rsp + 0x50], 0
0x000044f0      c644240f00     mov byte [rsp + 0xf], 0
0x000044f5      4531ff         xor r15d, r15d
0x000044f8      c644240d00     mov byte [rsp + 0xd], 0
0x000044fd      48c744241800.  mov qword [rsp + 0x18], 0
0x00004506      48c744244800.  mov qword [rsp + 0x48], 0
0x0000450f      e95ff2ffff     jmp 0x3773
0x00004514      c644240e01     mov byte [rsp + 0xe], 1
0x00004519      c644247c00     mov byte [rsp + 0x7c], 0
0x0000451e      4531e4         xor r12d, r12d
0x00004521      48c744245000.  mov qword [rsp + 0x50], 0
0x0000452a      c644240f01     mov byte [rsp + 0xf], 1
0x0000452f      c644240d01     mov byte [rsp + 0xd], 1
0x00004534      e91af2ffff     jmp 0x3753
0x00004539      4d39fd         cmp r13, r15
0x0000453c      7605           jbe 0x4543
0x0000453e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00004543      488d4102       lea rax, [rcx + 2]
0x00004547      4939c5         cmp r13, rax
0x0000454a      7606           jbe 0x4552
0x0000454c      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00004552      4489e0         mov eax, r12d
0x00004555      4c8d7903       lea r15, [rcx + 3]
0x00004559      4531e4         xor r12d, r12d
0x0000455c      bb30000000     mov ebx, 0x30                           ; '0'
0x00004561      e962f3ffff     jmp 0x38c8
0x00004566      662e0f1f8400.  nop word cs:[rax + rax]
0x00004570      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00004575      4c89dd         mov rbp, r11
0x00004578      885c240d       mov byte [rsp + 0xd], bl
0x0000457c      e9a8fcffff     jmp 0x4229
0x00004581      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00004586      4531e4         xor r12d, r12d
0x00004589      e902fbffff     jmp 0x4090
0x0000458e      4531d2         xor r10d, r10d
0x00004591      e9b7fbffff     jmp 0x414d
0x00004596      48c744245000.  mov qword [rsp + 0x50], 0
0x0000459f      c644240e01     mov byte [rsp + 0xe], 1
0x000045a4      4531e4         xor r12d, r12d
0x000045a7      c644247c00     mov byte [rsp + 0x7c], 0
0x000045ac      e9dafdffff     jmp 0x438b
0x000045b1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000045b6      4c89f6         mov rsi, r14
0x000045b9      4c89e9         mov rcx, r13
0x000045bc      4889d8         mov rax, rbx
0x000045bf      4889df         mov rdi, rbx
0x000045c2      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000045c8      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000045cd      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x000045d5      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x000045d8      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000045de      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000045e6      4c8b742440     mov r14, qword [rsp + 0x40]
0x000045eb      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000045f0      7326           jae 0x4618
0x000045f2      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x000045f5      7510           jne 0x4607
0x000045f7      eb1f           jmp 0x4618
0x000045f9      0f1f80000000.  nop dword [rax]
0x00004600      41803c0100     cmp byte [r9 + rax], 0
0x00004605      740e           je 0x4615
0x00004607      4883c001       add rax, 1
0x0000460b      488d540500     lea rdx, [rbp + rax]
0x00004610      4939d3         cmp r11, rdx
0x00004613      77eb           ja 0x4600
0x00004615      4889c7         mov rdi, rax
0x00004618      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000461d      4531e4         xor r12d, r12d
0x00004620      e961faffff     jmp 0x4086
0x00004625      4889df         mov rdi, rbx
0x00004628      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000462e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00004633      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00004639      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004641      4531e4         xor r12d, r12d
0x00004644      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004649      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000464e      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00004653      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00004658      e929faffff     jmp 0x4086
0x0000465d      488b542468     mov rdx, qword [rsp + 0x68]
0x00004662      0fb602         movzx eax, byte [rdx]
0x00004665      84c0           test al, al
0x00004667      0f842ffeffff   je 0x449c
0x0000466d      0f1f00         nop dword [rax]
0x00004670      4d39fd         cmp r13, r15
0x00004673      7604           jbe 0x4679
0x00004675      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00004679      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x0000467d      420fb6043a     movzx eax, byte [rdx + r15]
0x00004682      84c0           test al, al
0x00004684      75ea           jne 0x4670
0x00004686      e911feffff     jmp 0x449c
0x0000468b      89d0           mov eax, edx
0x0000468d      e955f5ffff     jmp 0x3be7
0x00004692      0fb61c08       movzx ebx, byte [rax + rcx]
0x00004696      80fb3e         cmp bl, 0x3e
0x00004699      0f8771f8ffff   ja 0x3f10
0x0000469f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x000046a9      480fa3d8       bt rax, rbx
0x000046ad      0f835df8ffff   jae 0x3f10
0x000046b3      807c240f00     cmp byte [rsp + 0xf], 0
0x000046b8      0f85e4010000   jne 0x48a2                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x000046be      4d39fd         cmp r13, r15
0x000046c1      7605           jbe 0x46c8
0x000046c3      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x000046c8      498d4701       lea rax, [r15 + 1]
0x000046cc      4939c5         cmp r13, rax
0x000046cf      7606           jbe 0x46d7
0x000046d1      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x000046d7      498d4702       lea rax, [r15 + 2]
0x000046db      4939c5         cmp r13, rax
0x000046de      7606           jbe 0x46e6
0x000046e0      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x000046e6      498d4703       lea rax, [r15 + 3]
0x000046ea      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x000046ed      7606           jbe 0x46f5
0x000046ef      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x000046f5      4983c704       add r15, 4
0x000046f9      31d2           xor edx, edx
0x000046fb      4531e4         xor r12d, r12d
0x000046fe      31c0           xor eax, eax
0x00004700      4889cd         mov rbp, rcx
0x00004703      e9c0f1ffff     jmp 0x38c8
0x00004708      85db           test ebx, ebx
0x0000470a      0f8488010000   je 0x4898
0x00004710      488d05c01b00.  lea rax, [0x000062d7]                   ; "'"
0x00004717      c644240e01     mov byte [rsp + 0xe], 1
0x0000471c      c644247c00     mov byte [rsp + 0x7c], 0
0x00004721      4531e4         xor r12d, r12d
0x00004724      48c744245000.  mov qword [rsp + 0x50], 0
0x0000472d      c644240f01     mov byte [rsp + 0xf], 1
0x00004732      c644240d00     mov byte [rsp + 0xd], 0
0x00004737      48c744241801.  mov qword [rsp + 0x18], 1
0x00004740      4531ff         xor r15d, r15d
0x00004743      4889442448     mov qword [rsp + 0x48], rax
0x00004748      e926f0ffff     jmp 0x3773
0x0000474d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00004750      4c89dd         mov rbp, r11
0x00004753      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00004758      e9ccfaffff     jmp 0x4229
0x0000475d      488d05b73200.  lea rax, str.l                          ; 0x7a1b ; u"\"`\u696c\u6574\u6172l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004764      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00004769      c644247c00     mov byte [rsp + 0x7c], 0
0x0000476e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00004771      48c744245000.  mov qword [rsp + 0x50], 0
0x0000477a      c644240f01     mov byte [rsp + 0xf], 1
0x0000477f      c644240d01     mov byte [rsp + 0xd], 1
0x00004784      48c744241801.  mov qword [rsp + 0x18], 1
0x0000478d      4531ff         xor r15d, r15d
0x00004790      4889442448     mov qword [rsp + 0x48], rax
0x00004795      e9d9efffff     jmp 0x3773
0x0000479a      89d0           mov eax, edx
0x0000479c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x000047a1      4885db         test rbx, rbx
0x000047a4      742c           je 0x47d2
0x000047a6      84c0           test al, al
0x000047a8      7428           je 0x47d2
0x000047aa      0fb60b         movzx ecx, byte [rbx]
0x000047ad      4889d8         mov rax, rbx
0x000047b0      84c9           test cl, cl
0x000047b2      741e           je 0x47d2
0x000047b4      4c89fa         mov rdx, r15
0x000047b7      4c29f8         sub rax, r15
0x000047ba      4939d5         cmp r13, rdx
0x000047bd      7604           jbe 0x47c3
0x000047bf      41880c16       mov byte [r14 + rdx], cl
0x000047c3      4883c201       add rdx, 1
0x000047c7      0fb60c10       movzx ecx, byte [rax + rdx]
0x000047cb      84c9           test cl, cl
0x000047cd      75eb           jne 0x47ba
0x000047cf      4989d7         mov r15, rdx
0x000047d2      4d39fd         cmp r13, r15
0x000047d5      0f869efaffff   jbe 0x4279
0x000047db      43c6043e00     mov byte [r14 + r15], 0
0x000047e0      e994faffff     jmp 0x4279
0x000047e5      837c240802     cmp dword [rsp + 8], 2
0x000047ea      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000047ef      4c89dd         mov rbp, r11
0x000047f2      0f94c0         sete al
0x000047f5      885c240d       mov byte [rsp + 0xd], bl
0x000047f9      e92bfaffff     jmp 0x4229
0x000047fe      8b742408       mov esi, dword [rsp + 8]
0x00004802      4889cf         mov rdi, rcx
0x00004805      e8a6edffff     call sym.gettext_quote.part.1
0x0000480a      4889442468     mov qword [rsp + 0x68], rax
0x0000480f      e952fcffff     jmp 0x4466
0x00004814      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00004818      4889cf         mov rdi, rcx
0x0000481b      e890edffff     call sym.gettext_quote.part.1
0x00004820      4889442460     mov qword [rsp + 0x60], rax
0x00004825      e967fcffff     jmp 0x4491
0x0000482a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000482f      4c89dd         mov rbp, r11
0x00004832      89d0           mov eax, edx
0x00004834      885c240d       mov byte [rsp + 0xd], bl
0x00004838      e9ecf9ffff     jmp 0x4229
0x0000483d      4883ec08       sub rsp, 8
0x00004841      41b805000000   mov r8d, 5
0x00004847      4c89d9         mov rcx, r11
0x0000484a      ff742468       push qword [rsp + 0x68]
0x0000484e      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00004852      4c89f7         mov rdi, r14
0x00004855      ff742438       push qword [rsp + 0x38]
0x00004859      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00004861      488b542430     mov rdx, qword [rsp + 0x30]
0x00004866      488b742470     mov rsi, qword [rsp + 0x70]
0x0000486b      e830eeffff     call sym.quotearg_buffer_restyled
0x00004870      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00004874      4989c7         mov r15, rax
0x00004877      e9fdf9ffff     jmp 0x4279
0x0000487c      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00004881      e916ffffff     jmp 0x479c
0x00004886      c74424080200.  mov dword [rsp + 8], 2
0x0000488e      e996f9ffff     jmp 0x4229
0x00004893      e838d5ffff     call sym.imp.__stack_chk_fail
0x00004898      c644240d00     mov byte [rsp + 0xd], 0
0x0000489d      e96ffaffff     jmp 0x4311
0x000048a2      4c89dd         mov rbp, r11
0x000048a5      e996f9ffff     jmp 0x4240
0x000048aa      c644240e01     mov byte [rsp + 0xe], 1
0x000048af      31c0           xor eax, eax
0x000048b1      4531e4         xor r12d, r12d
0x000048b4      48c744245000.  mov qword [rsp + 0x50], 0
0x000048bd      e9a2f5ffff     jmp 0x3e64
0x000048c2      4c89ea         mov rdx, r13
0x000048c5      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000048ca      e9f3f5ffff     jmp 0x3ec2
0x000048cf      e83cd4ffff     call sym.imp.abort
0x000048d4      6690           nop
0x000048d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x000048e0      4157           push r15
0x000048e2      4156           push r14
0x000048e4      4c63ff         movsxd r15, edi
0x000048e7      4155           push r13
0x000048e9      4154           push r12
0x000048eb      4989d6         mov r14, rdx
0x000048ee      55             push rbp
0x000048ef      53             push rbx
0x000048f0      4889cd         mov rbp, rcx
0x000048f3      4883ec28       sub rsp, 0x28
0x000048f7      4889742408     mov qword [rsp + 8], rsi
0x000048fc      e81fd4ffff     call sym.imp.__errno_location
0x00004901      4989c5         mov r13, rax
0x00004904      8b00           mov eax, dword [rax]
0x00004906      4585ff         test r15d, r15d
0x00004909      488b1d505720.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x20a060:8]=0x20a070 obj.slotvec0 ; "p\xa0 "
0x00004910      89442418       mov dword [rsp + 0x18], eax
0x00004914      0f8867010000   js 0x4a81
0x0000491a      44393d375720.  cmp dword [obj.nslots], r15d            ; [0x20a058:4]=1
0x00004921      7f62           jg 0x4985
0x00004923      4181ffffffff.  cmp r15d, 0x7fffffff
0x0000492a      0f8456010000   je 0x4a86
0x00004930      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004934      488d05355720.  lea rax, obj.slotvec0                   ; 0x20a070
0x0000493b      4963f4         movsxd rsi, r12d
0x0000493e      48c1e604       shl rsi, 4
0x00004942      4839c3         cmp rbx, rax
0x00004945      0f8415010000   je 0x4a60
0x0000494b      4889df         mov rdi, rbx
0x0000494e      e86d0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00004953      4889c3         mov rbx, rax
0x00004956      488905035720.  mov qword [obj.slotvec], rax            ; [0x20a060:8]=0x20a070 obj.slotvec0 ; "p\xa0 "
0x0000495d      48633df45620.  movsxd rdi, dword [obj.nslots]          ; [0x20a058:4]=1
0x00004964      4489e2         mov edx, r12d
0x00004967      31f6           xor esi, esi
0x00004969      29fa           sub edx, edi
0x0000496b      48c1e704       shl rdi, 4
0x0000496f      4863d2         movsxd rdx, edx
0x00004972      4801df         add rdi, rbx
0x00004975      48c1e204       shl rdx, 4
0x00004979      e8c2d4ffff     call sym.imp.memset
0x0000497e      448925d35620.  mov dword [obj.nslots], r12d            ; [0x20a058:4]=1
0x00004985      8b4504         mov eax, dword [rbp + 4]
0x00004988      49c1e704       shl r15, 4
0x0000498c      4883ec08       sub rsp, 8
0x00004990      4c01fb         add rbx, r15
0x00004993      4c8d7d08       lea r15, [rbp + 8]
0x00004997      448b4500       mov r8d, dword [rbp]
0x0000499b      4c8b1b         mov r11, qword [rbx]
0x0000499e      4c8b6308       mov r12, qword [rbx + 8]
0x000049a2      4c89f1         mov rcx, r14
0x000049a5      83c801         or eax, 1
0x000049a8      89442424       mov dword [rsp + 0x24], eax
0x000049ac      ff7530         push qword [rbp + 0x30]
0x000049af      4189c1         mov r9d, eax
0x000049b2      ff7528         push qword [rbp + 0x28]
0x000049b5      4157           push r15
0x000049b7      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x000049ba      488b542428     mov rdx, qword [rsp + 0x28]
0x000049bf      4c89e7         mov rdi, r12
0x000049c2      4c895c2430     mov qword [rsp + 0x30], r11
0x000049c7      e8d4ecffff     call sym.quotearg_buffer_restyled
0x000049cc      4883c420       add rsp, 0x20
0x000049d0      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x000049d5      4939c3         cmp r11, rax
0x000049d8      7767           ja 0x4a41
0x000049da      488d7001       lea rsi, [rax + 1]
0x000049de      488d059b5720.  lea rax, obj.slot0                      ; 0x20a180
0x000049e5      4939c4         cmp r12, rax
0x000049e8      488933         mov qword [rbx], rsi
0x000049eb      7412           je 0x49ff
0x000049ed      4c89e7         mov rdi, r12
0x000049f0      4889742410     mov qword [rsp + 0x10], rsi
0x000049f5      e806d6ffff     call sym..plt.got
0x000049fa      488b742410     mov rsi, qword [rsp + 0x10]
0x000049ff      4889f7         mov rdi, rsi
0x00004a02      4889742410     mov qword [rsp + 0x10], rsi
0x00004a07      e8540e0000     call sym.xmalloc
0x00004a0c      4883ec08       sub rsp, 8
0x00004a10      48894308       mov qword [rbx + 8], rax
0x00004a14      448b4500       mov r8d, dword [rbp]
0x00004a18      ff7530         push qword [rbp + 0x30]
0x00004a1b      ff7528         push qword [rbp + 0x28]
0x00004a1e      4c89f1         mov rcx, r14
0x00004a21      4157           push r15
0x00004a23      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00004a28      4889c7         mov rdi, rax
0x00004a2b      488b542428     mov rdx, qword [rsp + 0x28]
0x00004a30      488b742430     mov rsi, qword [rsp + 0x30]
0x00004a35      4989c4         mov r12, rax
0x00004a38      e863ecffff     call sym.quotearg_buffer_restyled
0x00004a3d      4883c420       add rsp, 0x20
0x00004a41      8b442418       mov eax, dword [rsp + 0x18]
0x00004a45      41894500       mov dword [r13], eax
0x00004a49      4883c428       add rsp, 0x28
0x00004a4d      4c89e0         mov rax, r12
0x00004a50      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00004a51      5d             pop rbp
0x00004a52      415c           pop r12
0x00004a54      415d           pop r13
0x00004a56      415e           pop r14
0x00004a58      415f           pop r15
0x00004a5a      c3             ret
0x00004a5b      0f1f440000     nop dword [rax + rax]
0x00004a60      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00004a62      e8590e0000     call sym.xrealloc
0x00004a67      660f6f050156.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x00004a6f      4889c3         mov rbx, rax
0x00004a72      488905e75520.  mov qword [obj.slotvec], rax            ; [0x20a060:8]=0x20a070 obj.slotvec0 ; "p\xa0 "
0x00004a79      0f1100         movups xmmword [rax], xmm0
0x00004a7c      e9dcfeffff     jmp 0x495d
0x00004a81      e88ad2ffff     call sym.imp.abort
0x00004a86      e825100000     call sym.xalloc_die
0x00004a8b      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00004a90      4154           push r12
0x00004a92      55             push rbp
0x00004a93      53             push rbx
0x00004a94      4889fb         mov rbx, rdi
0x00004a97      e884d2ffff     call sym.imp.__errno_location
0x00004a9c      448b20         mov r12d, dword [rax]
0x00004a9f      4889c5         mov rbp, rax
0x00004aa2      488d05d75720.  lea rax, obj.default_quoting_options    ; 0x20a280
0x00004aa9      4885db         test rbx, rbx
0x00004aac      be38000000     mov esi, 0x38                           ; '8'
0x00004ab1      480f44d8       cmove rbx, rax
0x00004ab5      4889df         mov rdi, rbx
0x00004ab8      e8a30f0000     call sym.xmemdup
0x00004abd      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004ac1      5b             pop rbx
0x00004ac2      5d             pop rbp
0x00004ac3      415c           pop r12
0x00004ac5      c3             ret
0x00004ac6      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00004ad0      488d05a95720.  lea rax, obj.default_quoting_options    ; 0x20a280
0x00004ad7      4885ff         test rdi, rdi
0x00004ada      480f44f8       cmove rdi, rax
0x00004ade      8b07           mov eax, dword [rdi]
0x00004ae0      c3             ret
0x00004ae1      0f1f440000     nop dword [rax + rax]
0x00004ae6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00004af0      488d05895720.  lea rax, obj.default_quoting_options    ; 0x20a280
0x00004af7      4885ff         test rdi, rdi
0x00004afa      480f44f8       cmove rdi, rax
0x00004afe      8937           mov dword [rdi], esi
0x00004b00      c3             ret
0x00004b01      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00004b06      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00004b10      488d05695720.  lea rax, obj.default_quoting_options    ; 0x20a280
0x00004b17      4885ff         test rdi, rdi
0x00004b1a      89f1           mov ecx, esi
0x00004b1c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00004b20      89f0           mov eax, esi
0x00004b22      83e11f         and ecx, 0x1f
0x00004b25      c0e805         shr al, 5
0x00004b28      0fb6c0         movzx eax, al
0x00004b2b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00004b30      8b37           mov esi, dword [rdi]
0x00004b32      89f0           mov eax, esi
0x00004b34      d3e8           shr eax, cl
0x00004b36      31c2           xor edx, eax
0x00004b38      83e001         and eax, 1
0x00004b3b      83e201         and edx, 1
0x00004b3e      d3e2           shl edx, cl
0x00004b40      31f2           xor edx, esi
0x00004b42      8917           mov dword [rdi], edx
0x00004b44      c3             ret
0x00004b45      90             nop
0x00004b46      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00004b50      488d05295720.  lea rax, obj.default_quoting_options    ; 0x20a280
0x00004b57      4885ff         test rdi, rdi
0x00004b5a      480f44f8       cmove rdi, rax
0x00004b5e      8b4704         mov eax, dword [rdi + 4]
0x00004b61      897704         mov dword [rdi + 4], esi
0x00004b64      c3             ret
0x00004b65      90             nop
0x00004b66      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00004b70      488d05095720.  lea rax, obj.default_quoting_options    ; 0x20a280
0x00004b77      4885ff         test rdi, rdi
0x00004b7a      480f44f8       cmove rdi, rax
0x00004b7e      4885f6         test rsi, rsi
0x00004b81      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00004b87      740e           je 0x4b97
0x00004b89      4885d2         test rdx, rdx
0x00004b8c      7409           je 0x4b97
0x00004b8e      48897728       mov qword [rdi + 0x28], rsi
0x00004b92      48895730       mov qword [rdi + 0x30], rdx
0x00004b96      c3             ret
0x00004b97      4883ec08       sub rsp, 8
0x00004b9b      e870d1ffff     call sym.imp.abort
;-- quotearg_buffer:
0x00004ba0      4157           push r15
0x00004ba2      4156           push r14
0x00004ba4      488d05d55620.  lea rax, obj.default_quoting_options    ; 0x20a280
0x00004bab      4155           push r13
0x00004bad      4154           push r12
0x00004baf      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00004bb2      55             push rbp
0x00004bb3      53             push rbx
0x00004bb4      4c89c3         mov rbx, r8
0x00004bb7      4989f6         mov r14, rsi
0x00004bba      4989d7         mov r15, rdx
0x00004bbd      4883ec18       sub rsp, 0x18
0x00004bc1      4d85c0         test r8, r8
0x00004bc4      480f44d8       cmove rbx, rax
0x00004bc8      48894c2408     mov qword [rsp + 8], rcx
0x00004bcd      e84ed1ffff     call sym.imp.__errno_location
0x00004bd2      448b20         mov r12d, dword [rax]
0x00004bd5      4889c5         mov rbp, rax
0x00004bd8      488d4308       lea rax, [rbx + 8]
0x00004bdc      4883ec08       sub rsp, 8
0x00004be0      448b4b04       mov r9d, dword [rbx + 4]
0x00004be4      ff7330         push qword [rbx + 0x30]
0x00004be7      448b03         mov r8d, dword [rbx]
0x00004bea      ff7328         push qword [rbx + 0x28]
0x00004bed      4c89fa         mov rdx, r15
0x00004bf0      50             push rax
0x00004bf1      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00004bf6      4c89f6         mov rsi, r14
0x00004bf9      4c89ef         mov rdi, r13
0x00004bfc      e89feaffff     call sym.quotearg_buffer_restyled
0x00004c01      44896500       mov dword [rbp], r12d
0x00004c05      4883c438       add rsp, 0x38
0x00004c09      5b             pop rbx
0x00004c0a      5d             pop rbp
0x00004c0b      415c           pop r12
0x00004c0d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00004c0f      415e           pop r14
0x00004c11      415f           pop r15
0x00004c13      c3             ret
0x00004c14      6690           nop
0x00004c16      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00004c20      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00004c22      4156           push r14
0x00004c24      488d05555620.  lea rax, obj.default_quoting_options    ; 0x20a280
0x00004c2b      4155           push r13
0x00004c2d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x00004c2f      4989d4         mov r12, rdx
0x00004c32      55             push rbp
0x00004c33      53             push rbx
0x00004c34      4889cb         mov rbx, rcx
0x00004c37      4989fe         mov r14, rdi
0x00004c3a      4989f7         mov r15, rsi
0x00004c3d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00004c41      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00004c44      480f44d8       cmove rbx, rax
0x00004c48      31ed           xor ebp, ebp
0x00004c4a      e8d1d0ffff     call sym.imp.__errno_location
0x00004c4f      4d85e4         test r12, r12
0x00004c52      4989c5         mov r13, rax
0x00004c55      8b00           mov eax, dword [rax]
0x00004c57      400f94c5       sete bpl
0x00004c5b      0b6b04         or ebp, dword [rbx + 4]
0x00004c5e      4c8d5308       lea r10, [rbx + 8]
0x00004c62      4883ec08       sub rsp, 8
0x00004c66      448b03         mov r8d, dword [rbx]
0x00004c69      4c89f9         mov rcx, r15
0x00004c6c      89442414       mov dword [rsp + 0x14], eax
0x00004c70      ff7330         push qword [rbx + 0x30]
0x00004c73      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00004c76      ff7328         push qword [rbx + 0x28]
0x00004c79      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x00004c7b      31f6           xor esi, esi
0x00004c7d      4189e9         mov r9d, ebp
0x00004c80      31ff           xor edi, edi
0x00004c82      4c89542440     mov qword [rsp + 0x40], r10
0x00004c87      e814eaffff     call sym.quotearg_buffer_restyled
0x00004c8c      488d7001       lea rsi, [rax + 1]
0x00004c90      4889442448     mov qword [rsp + 0x48], rax
0x00004c95      4883c420       add rsp, 0x20
0x00004c99      4889f7         mov rdi, rsi
0x00004c9c      4889742418     mov qword [rsp + 0x18], rsi
0x00004ca1      e8ba0b0000     call sym.xmalloc
0x00004ca6      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x00004cab      4883ec08       sub rsp, 8
0x00004caf      ff7330         push qword [rbx + 0x30]
0x00004cb2      ff7328         push qword [rbx + 0x28]
0x00004cb5      4c8b542438     mov r10, qword [rsp + 0x38]
0x00004cba      4189e9         mov r9d, ebp
0x00004cbd      448b03         mov r8d, dword [rbx]
0x00004cc0      4c89f9         mov rcx, r15
0x00004cc3      4c89f2         mov rdx, r14
0x00004cc6      4889c7         mov rdi, rax
0x00004cc9      4152           push r10
0x00004ccb      488b742438     mov rsi, qword [rsp + 0x38]
0x00004cd0      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00004cd5      8b44242c       mov eax, dword [rsp + 0x2c]
0x00004cd9      4883c420       add rsp, 0x20
0x00004cdd      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00004ce0      41894500       mov dword [r13], eax
0x00004ce4      7409           je 0x4cef
0x00004ce6      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x00004ceb      4d891c24       mov qword [r12], r11
0x00004cef      488b442410     mov rax, qword [rsp + 0x10]
0x00004cf4      4883c438       add rsp, 0x38
0x00004cf8      5b             pop rbx
0x00004cf9      5d             pop rbp
0x00004cfa      415c           pop r12
0x00004cfc      415d           pop r13
0x00004cfe      415e           pop r14
0x00004d00      415f           pop r15
0x00004d02      c3             ret
0x00004d03      0f1f00         nop dword [rax]
0x00004d06      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00004d10      4889d1         mov rcx, rdx
0x00004d13      31d2           xor edx, edx
0x00004d15      e906ffffff     jmp sym.quotearg_alloc_mem
0x00004d1a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00004d20      8b0532532000   mov eax, dword [obj.nslots]             ; [0x20a058:4]=1
0x00004d26      4154           push r12
0x00004d28      4c8b25315320.  mov r12, qword [obj.slotvec]            ; [0x20a060:8]=0x20a070 obj.slotvec0 ; "p\xa0 "
0x00004d2f      55             push rbp
0x00004d30      53             push rbx
0x00004d31      83f801         cmp eax, 1
0x00004d34      7e2b           jle 0x4d61                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00004d36      83e802         sub eax, 2
0x00004d39      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00004d3e      48c1e004       shl rax, 4
0x00004d42      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00004d47      660f1f840000.  nop word [rax + rax]
0x00004d50      488b3b         mov rdi, qword [rbx]
0x00004d53      4883c310       add rbx, 0x10
0x00004d57      e8a4d2ffff     call sym..plt.got
0x00004d5c      4839eb         cmp rbx, rbp
0x00004d5f      75ef           jne 0x4d50
0x00004d61      498b7c2408     mov rdi, qword [r12 + 8]
0x00004d66      488d1d135420.  lea rbx, obj.slot0                      ; 0x20a180
0x00004d6d      4839df         cmp rdi, rbx
0x00004d70      7417           je 0x4d89
0x00004d72      e889d2ffff     call sym..plt.got
0x00004d77      48c705ee5220.  mov qword [obj.slotvec0], 0x100         ; [0x20a070:8]=256
0x00004d82      48891def5220.  mov qword [0x0020a078], rbx             ; [0x20a078:8]=0x20a180 obj.slot0
0x00004d89      488d1de05220.  lea rbx, obj.slotvec0                   ; 0x20a070
0x00004d90      4939dc         cmp r12, rbx
0x00004d93      740f           je 0x4da4
0x00004d95      4c89e7         mov rdi, r12
0x00004d98      e863d2ffff     call sym..plt.got
0x00004d9d      48891dbc5220.  mov qword [obj.slotvec], rbx            ; [0x20a060:8]=0x20a070 obj.slotvec0 ; "p\xa0 "
0x00004da4      5b             pop rbx
0x00004da5      c705a9522000.  mov dword [obj.nslots], 1               ; [0x20a058:4]=1
0x00004daf      5d             pop rbp
0x00004db0      415c           pop r12
0x00004db2      c3             ret
0x00004db3      0f1f00         nop dword [rax]
0x00004db6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00004dc0      488d0db95420.  lea rcx, obj.default_quoting_options    ; 0x20a280
0x00004dc7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004dce      e90dfbffff     jmp sym.quotearg_n_options
0x00004dd3      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00004dd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00004de0      488d0d995420.  lea rcx, obj.default_quoting_options    ; 0x20a280
0x00004de7      e9f4faffff     jmp sym.quotearg_n_options
0x00004dec      0f1f4000       nop dword [rax]
;-- quotearg:
0x00004df0      488d0d895420.  lea rcx, obj.default_quoting_options    ; 0x20a280
0x00004df7      4889fe         mov rsi, rdi
0x00004dfa      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004e01      31ff           xor edi, edi
0x00004e03      e9d8faffff     jmp sym.quotearg_n_options
0x00004e08      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00004e10      488d0d695420.  lea rcx, obj.default_quoting_options    ; 0x20a280
0x00004e17      4889f2         mov rdx, rsi
0x00004e1a      4889fe         mov rsi, rdi
0x00004e1d      31ff           xor edi, edi
0x00004e1f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00004e24      6690           nop
0x00004e26      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00004e30      4883ec48       sub rsp, 0x48
0x00004e34      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00004e37      64488b142528.  mov rdx, qword fs:[0x28]
0x00004e40      4889542438     mov qword [rsp + 0x38], rdx
0x00004e45      31d2           xor edx, edx
0x00004e47      83fe0a         cmp esi, 0xa
0x00004e4a      7468           je 0x4eb4
0x00004e4c      893424         mov dword [rsp], esi
0x00004e4f      4889e1         mov rcx, rsp
0x00004e52      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004e59      4889c6         mov rsi, rax
0x00004e5c      48c744240400.  mov qword [rsp + 4], 0
0x00004e65      48c744240c00.  mov qword [rsp + 0xc], 0
0x00004e6e      48c744241400.  mov qword [rsp + 0x14], 0
0x00004e77      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004e80      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00004e89      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004e92      c74424340000.  mov dword [rsp + 0x34], 0
0x00004e9a      e841faffff     call sym.quotearg_n_options
0x00004e9f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004ea4      6448330c2528.  xor rcx, qword fs:[0x28]
0x00004ead      750a           jne 0x4eb9                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x00004eaf      4883c448       add rsp, 0x48
0x00004eb3      c3             ret
0x00004eb4      e857ceffff     call sym.imp.abort
0x00004eb9      e812cfffff     call sym.imp.__stack_chk_fail
0x00004ebe      6690           nop
;-- quotearg_n_style_mem:
0x00004ec0      4883ec48       sub rsp, 0x48
0x00004ec4      4889d0         mov rax, rdx
0x00004ec7      4889ca         mov rdx, rcx
0x00004eca      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00004ed3      48894c2438     mov qword [rsp + 0x38], rcx
0x00004ed8      31c9           xor ecx, ecx
0x00004eda      83fe0a         cmp esi, 0xa
0x00004edd      7461           je 0x4f40
0x00004edf      893424         mov dword [rsp], esi
0x00004ee2      4889e1         mov rcx, rsp
0x00004ee5      4889c6         mov rsi, rax
0x00004ee8      48c744240400.  mov qword [rsp + 4], 0
0x00004ef1      48c744240c00.  mov qword [rsp + 0xc], 0
0x00004efa      48c744241400.  mov qword [rsp + 0x14], 0
0x00004f03      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004f0c      48c744242400.  mov qword [rsp + 0x24], 0
0x00004f15      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004f1e      c74424340000.  mov dword [rsp + 0x34], 0
0x00004f26      e8b5f9ffff     call sym.quotearg_n_options
0x00004f2b      488b542438     mov rdx, qword [rsp + 0x38]
0x00004f30      644833142528.  xor rdx, qword fs:[0x28]
0x00004f39      750a           jne 0x4f45
0x00004f3b      4883c448       add rsp, 0x48
0x00004f3f      c3             ret
0x00004f40      e8cbcdffff     call sym.imp.abort
0x00004f45      e886ceffff     call sym.imp.__stack_chk_fail
0x00004f4a      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00004f50      4889f2         mov rdx, rsi
0x00004f53      89fe           mov esi, edi
0x00004f55      31ff           xor edi, edi
0x00004f57      e9d4feffff     jmp sym.quotearg_n_style
0x00004f5c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00004f60      4889d1         mov rcx, rdx
0x00004f63      4889f2         mov rdx, rsi
0x00004f66      89fe           mov esi, edi
0x00004f68      31ff           xor edi, edi
0x00004f6a      e951ffffff     jmp sym.quotearg_n_style_mem
0x00004f6f      90             nop
;-- quotearg_char_mem:
0x00004f70      4883ec48       sub rsp, 0x48
0x00004f74      89d1           mov ecx, edx
0x00004f76      64488b042528.  mov rax, qword fs:[0x28]
0x00004f7f      4889442438     mov qword [rsp + 0x38], rax
0x00004f84      31c0           xor eax, eax
0x00004f86      488b05235320.  mov rax, qword [0x0020a2b0]             ; [0x20a2b0:8]=0
0x00004f8d      4989e0         mov r8, rsp
0x00004f90      83e11f         and ecx, 0x1f
0x00004f93      660f6f05e552.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00004f9b      4889442430     mov qword [rsp + 0x30], rax
0x00004fa0      89d0           mov eax, edx
0x00004fa2      0f290424       movaps xmmword [rsp], xmm0
0x00004fa6      c0e805         shr al, 5
0x00004fa9      0fb6c0         movzx eax, al
0x00004fac      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00004fb1      660f6f05d752.  movdqa xmm0, xmmword [0x0020a290]
0x00004fb9      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00004fbe      660f6f05da52.  movdqa xmm0, xmmword [0x0020a2a0]
0x00004fc6      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00004fcb      418b11         mov edx, dword [r9]
0x00004fce      89d0           mov eax, edx
0x00004fd0      d3e8           shr eax, cl
0x00004fd2      f7d0           not eax
0x00004fd4      83e001         and eax, 1
0x00004fd7      d3e0           shl eax, cl
0x00004fd9      4c89c1         mov rcx, r8
0x00004fdc      31d0           xor eax, edx
0x00004fde      4889f2         mov rdx, rsi
0x00004fe1      4889fe         mov rsi, rdi
0x00004fe4      418901         mov dword [r9], eax
0x00004fe7      31ff           xor edi, edi
0x00004fe9      e8f2f8ffff     call sym.quotearg_n_options
0x00004fee      488b742438     mov rsi, qword [rsp + 0x38]
0x00004ff3      644833342528.  xor rsi, qword fs:[0x28]
0x00004ffc      7505           jne 0x5003
0x00004ffe      4883c448       add rsp, 0x48
0x00005002      c3             ret
0x00005003      e8c8cdffff     call sym.imp.__stack_chk_fail
0x00005008      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00005010      400fbed6       movsx edx, sil
0x00005014      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000501b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00005020      ba3a000000     mov edx, 0x3a                           ; ':'
0x00005025      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000502c      e93fffffff     jmp sym.quotearg_char_mem
0x00005031      0f1f440000     nop dword [rax + rax]
0x00005036      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00005040      ba3a000000     mov edx, 0x3a                           ; ':'
0x00005045      e926ffffff     jmp sym.quotearg_char_mem
0x0000504a      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00005050      4883ec48       sub rsp, 0x48
0x00005054      4889d0         mov rax, rdx
0x00005057      64488b142528.  mov rdx, qword fs:[0x28]
0x00005060      4889542438     mov qword [rsp + 0x38], rdx
0x00005065      31d2           xor edx, edx
0x00005067      83fe0a         cmp esi, 0xa
0x0000506a      7468           je 0x50d4
0x0000506c      893424         mov dword [rsp], esi
0x0000506f      4889e1         mov rcx, rsp
0x00005072      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005079      4889c6         mov rsi, rax
0x0000507c      48c744240400.  mov qword [rsp + 4], 0
0x00005085      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x0000508e      48c744241400.  mov qword [rsp + 0x14], 0
0x00005097      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000050a0      48c744242400.  mov qword [rsp + 0x24], 0
0x000050a9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000050b2      c74424340000.  mov dword [rsp + 0x34], 0
0x000050ba      e821f8ffff     call sym.quotearg_n_options
0x000050bf      488b4c2438     mov rcx, qword [rsp + 0x38]
0x000050c4      6448330c2528.  xor rcx, qword fs:[0x28]
0x000050cd      750a           jne 0x50d9
0x000050cf      4883c448       add rsp, 0x48
0x000050d3      c3             ret
0x000050d4      e837ccffff     call sym.imp.abort
0x000050d9      e8f2ccffff     call sym.imp.__stack_chk_fail
0x000050de      6690           nop
;-- quotearg_n_custom_mem:
0x000050e0      4883ec48       sub rsp, 0x48
0x000050e4      4989c9         mov r9, rcx
0x000050e7      488b0dc25120.  mov rcx, qword [0x0020a2b0]             ; [0x20a2b0:8]=0
0x000050ee      660f6f058a51.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x000050f6      64488b042528.  mov rax, qword fs:[0x28]
0x000050ff      4889442438     mov qword [rsp + 0x38], rax
0x00005104      31c0           xor eax, eax
0x00005106      0f290424       movaps xmmword [rsp], xmm0
0x0000510a      4885f6         test rsi, rsi
0x0000510d      48894c2430     mov qword [rsp + 0x30], rcx
0x00005112      c704240a0000.  mov dword [rsp], 0xa
0x00005119      660f6f056f51.  movdqa xmm0, xmmword [0x0020a290]
0x00005121      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00005126      660f6f057251.  movdqa xmm0, xmmword [0x0020a2a0]
0x0000512e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00005133      7432           je 0x5167
0x00005135      4885d2         test rdx, rdx
0x00005138      742d           je 0x5167
0x0000513a      4889742428     mov qword [rsp + 0x28], rsi
0x0000513f      4889542430     mov qword [rsp + 0x30], rdx
0x00005144      4889e1         mov rcx, rsp
0x00005147      4c89c2         mov rdx, r8
0x0000514a      4c89ce         mov rsi, r9
0x0000514d      e88ef7ffff     call sym.quotearg_n_options
0x00005152      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00005157      6448333c2528.  xor rdi, qword fs:[0x28]
0x00005160      750a           jne 0x516c
0x00005162      4883c448       add rsp, 0x48
0x00005166      c3             ret
0x00005167      e8a4cbffff     call sym.imp.abort
0x0000516c      e85fccffff     call sym.imp.__stack_chk_fail
0x00005171      0f1f440000     nop dword [rax + rax]
0x00005176      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00005180      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00005187      e954ffffff     jmp sym.quotearg_n_custom_mem
0x0000518c      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00005190      4889d1         mov rcx, rdx
0x00005193      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0000519a      4889f2         mov rdx, rsi
0x0000519d      4889fe         mov rsi, rdi
0x000051a0      31ff           xor edi, edi
0x000051a2      e939ffffff     jmp sym.quotearg_n_custom_mem
0x000051a7      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x000051b0      4989c8         mov r8, rcx
0x000051b3      4889d1         mov rcx, rdx
0x000051b6      4889f2         mov rdx, rsi
0x000051b9      4889fe         mov rsi, rdi
0x000051bc      31ff           xor edi, edi
0x000051be      e91dffffff     jmp sym.quotearg_n_custom_mem
0x000051c3      0f1f00         nop dword [rax]
0x000051c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x000051d0      488d0d494e20.  lea rcx, obj.quote_quoting_options      ; 0x20a020
0x000051d7      e904f7ffff     jmp sym.quotearg_n_options
0x000051dc      0f1f4000       nop dword [rax]
;-- quote_mem:
0x000051e0      488d0d394e20.  lea rcx, obj.quote_quoting_options      ; 0x20a020
0x000051e7      4889f2         mov rdx, rsi
0x000051ea      4889fe         mov rsi, rdi
0x000051ed      31ff           xor edi, edi
0x000051ef      e9ecf6ffff     jmp sym.quotearg_n_options
0x000051f4      6690           nop
0x000051f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00005200      488d0d194e20.  lea rcx, obj.quote_quoting_options      ; 0x20a020
0x00005207      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000520e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00005213      0f1f00         nop dword [rax]
0x00005216      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00005220      488d0df94d20.  lea rcx, obj.quote_quoting_options      ; 0x20a020
0x00005227      4889fe         mov rsi, rdi
0x0000522a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005231      31ff           xor edi, edi
0x00005233      e9a8f6ffff     jmp sym.quotearg_n_options
0x00005238      0f1f84000000.  nop dword [rax + rax]
;-- version_etc_arn:
0x00005240      4157           push r15
0x00005242      4156           push r14
0x00005244      4155           push r13
0x00005246      4154           push r12
0x00005248      4d89cc         mov r12, r9
0x0000524b      55             push rbp
0x0000524c      53             push rbx
0x0000524d      4889fd         mov rbp, rdi
0x00005250      4c89c3         mov rbx, r8
0x00005253      4883ec28       sub rsp, 0x28
0x00005257      4885f6         test rsi, rsi
0x0000525a      0f8418010000   je 0x5378
0x00005260      4989d0         mov r8, rdx
0x00005263      488d157e2c00.  lea rdx, [0x00007ee8]                   ; "%s (%s) %s\n"
0x0000526a      4989c9         mov r9, rcx
0x0000526d      31c0           xor eax, eax
0x0000526f      4889f1         mov rcx, rsi
0x00005272      be01000000     mov esi, 1
0x00005277      e844cdffff     call sym.imp.__fprintf_chk
0x0000527c      488d35782c00.  lea rsi, [0x00007efb]                   ; "(C)"
0x00005283      31ff           xor edi, edi
0x00005285      ba05000000     mov edx, 5
0x0000528a      e811cbffff     call sym.imp.dcgettext
0x0000528f      488d158a2f00.  lea rdx, obj.version_etc_copyright      ; 0x8220 ; "Copyright %s %d Free Software Foundation, Inc."
0x00005296      4889c1         mov rcx, rax
0x00005299      41b8e3070000   mov r8d, 0x7e3
0x0000529f      be01000000     mov esi, 1
0x000052a4      4889ef         mov rdi, rbp
0x000052a7      31c0           xor eax, eax
0x000052a9      e812cdffff     call sym.imp.__fprintf_chk
0x000052ae      488d35d32c00.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x7f88 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x000052b5      31ff           xor edi, edi
0x000052b7      ba05000000     mov edx, 5
0x000052bc      e8dfcaffff     call sym.imp.dcgettext
0x000052c1      4889ee         mov rsi, rbp
0x000052c4      4889c7         mov rdi, rax
0x000052c7      e8c4cbffff     call sym.imp.fputs_unlocked
0x000052cc      4983fc09       cmp r12, 9
0x000052d0      0f873a030000   ja 0x5610
0x000052d6      488d150b2f00.  lea rdx, [0x000081e8]
0x000052dd      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x000052e1      4801d0         add rax, rdx
0x000052e4      ffe0           jmp rax
0x000052e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000052f0      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000052f4      488b4310       mov rax, qword [rbx + 0x10]
0x000052f8      488d35f92d00.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x80f8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x000052ff      4c8b4308       mov r8, qword [rbx + 8]
0x00005303      ba05000000     mov edx, 5
0x00005308      31ff           xor edi, edi
0x0000530a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0000530e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005312      4c894c2410     mov qword [rsp + 0x10], r9
0x00005317      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000531b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000531f      48890424       mov qword [rsp], rax
0x00005323      4c89442408     mov qword [rsp + 8], r8
0x00005328      488b1b         mov rbx, qword [rbx]
0x0000532b      e870caffff     call sym.imp.dcgettext
0x00005330      4883ec08       sub rsp, 8
0x00005334      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00005339      4889c2         mov rdx, rax
0x0000533c      4889d9         mov rcx, rbx
0x0000533f      be01000000     mov esi, 1
0x00005344      4889ef         mov rdi, rbp
0x00005347      31c0           xor eax, eax
0x00005349      4151           push r9
0x0000534b      4155           push r13
0x0000534d      4154           push r12
0x0000534f      4157           push r15
0x00005351      4156           push r14
0x00005353      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00005358      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000535d      e85eccffff     call sym.imp.__fprintf_chk
0x00005362      4883c430       add rsp, 0x30
0x00005366      4883c428       add rsp, 0x28
0x0000536a      5b             pop rbx
0x0000536b      5d             pop rbp
0x0000536c      415c           pop r12
0x0000536e      415d           pop r13
0x00005370      415e           pop r14
0x00005372      415f           pop r15
0x00005374      c3             ret
0x00005375      0f1f00         nop dword [rax]
0x00005378      4989c8         mov r8, rcx
0x0000537b      4889d1         mov rcx, rdx
0x0000537e      488d156f2b00.  lea rdx, str.s__s                       ; 0x7ef4 ; "%s %s\n"
0x00005385      be01000000     mov esi, 1
0x0000538a      31c0           xor eax, eax
0x0000538c      e82fccffff     call sym.imp.__fprintf_chk
0x00005391      e9e6feffff     jmp 0x527c
0x00005396      662e0f1f8400.  nop word cs:[rax + rax]
0x000053a0      4c8b5340       mov r10, qword [rbx + 0x40]
0x000053a4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000053a8      488d35792d00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x8128 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x000053af      488b4310       mov rax, qword [rbx + 0x10]
0x000053b3      4c8b4308       mov r8, qword [rbx + 8]
0x000053b7      ba05000000     mov edx, 5
0x000053bc      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000053c0      4c8b6328       mov r12, qword [rbx + 0x28]
0x000053c4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000053c8      4c8b7318       mov r14, qword [rbx + 0x18]
0x000053cc      488b1b         mov rbx, qword [rbx]
0x000053cf      4c89542418     mov qword [rsp + 0x18], r10
0x000053d4      4c894c2410     mov qword [rsp + 0x10], r9
0x000053d9      48890424       mov qword [rsp], rax
0x000053dd      4c89442408     mov qword [rsp + 8], r8
0x000053e2      31ff           xor edi, edi
0x000053e4      e8b7c9ffff     call sym.imp.dcgettext
0x000053e9      4c8b542418     mov r10, qword [rsp + 0x18]
0x000053ee      4152           push r10
0x000053f0      e93fffffff     jmp 0x5334
0x000053f5      0f1f00         nop dword [rax]
0x000053f8      488b1b         mov rbx, qword [rbx]
0x000053fb      488d35fd2a00.  lea rsi, str.Written_by__s.             ; 0x7eff ; "Written by %s.\n"
0x00005402      ba05000000     mov edx, 5
0x00005407      31ff           xor edi, edi
0x00005409      e892c9ffff     call sym.imp.dcgettext
0x0000540e      4883c428       add rsp, 0x28
0x00005412      4889d9         mov rcx, rbx
0x00005415      4889ef         mov rdi, rbp
0x00005418      5b             pop rbx
0x00005419      5d             pop rbp
0x0000541a      415c           pop r12
0x0000541c      415d           pop r13
0x0000541e      415e           pop r14
0x00005420      415f           pop r15
0x00005422      4889c2         mov rdx, rax
0x00005425      be01000000     mov esi, 1
0x0000542a      31c0           xor eax, eax
0x0000542c      e98fcbffff     jmp sym.imp.__fprintf_chk
0x00005431      0f1f80000000.  nop dword [rax]
0x00005438      4c8b6308       mov r12, qword [rbx + 8]
0x0000543c      488d35cc2a00.  lea rsi, str.Written_by__s_and__s.      ; 0x7f0f ; "Written by %s and %s.\n"
0x00005443      488b1b         mov rbx, qword [rbx]
0x00005446      ba05000000     mov edx, 5
0x0000544b      31ff           xor edi, edi
0x0000544d      e84ec9ffff     call sym.imp.dcgettext
0x00005452      4883c428       add rsp, 0x28
0x00005456      4d89e0         mov r8, r12
0x00005459      4889d9         mov rcx, rbx
0x0000545c      4889ef         mov rdi, rbp
0x0000545f      4889c2         mov rdx, rax
0x00005462      be01000000     mov esi, 1
0x00005467      5b             pop rbx
0x00005468      5d             pop rbp
0x00005469      415c           pop r12
0x0000546b      415d           pop r13
0x0000546d      415e           pop r14
0x0000546f      415f           pop r15
0x00005471      31c0           xor eax, eax
0x00005473      e948cbffff     jmp sym.imp.__fprintf_chk
0x00005478      0f1f84000000.  nop dword [rax + rax]
0x00005480      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005484      4c8b6308       mov r12, qword [rbx + 8]
0x00005488      488d35972a00.  lea rsi, str.Written_by__s___s__and__s. ; 0x7f26 ; "Written by %s, %s, and %s.\n"
0x0000548f      488b1b         mov rbx, qword [rbx]
0x00005492      ba05000000     mov edx, 5
0x00005497      31ff           xor edi, edi
0x00005499      e802c9ffff     call sym.imp.dcgettext
0x0000549e      4883c428       add rsp, 0x28
0x000054a2      4d89e9         mov r9, r13
0x000054a5      4d89e0         mov r8, r12
0x000054a8      4889d9         mov rcx, rbx
0x000054ab      4889ef         mov rdi, rbp
0x000054ae      4889c2         mov rdx, rax
0x000054b1      5b             pop rbx
0x000054b2      5d             pop rbp
0x000054b3      415c           pop r12
0x000054b5      415d           pop r13
0x000054b7      415e           pop r14
0x000054b9      415f           pop r15
0x000054bb      be01000000     mov esi, 1
0x000054c0      31c0           xor eax, eax
0x000054c2      e9f9caffff     jmp sym.imp.__fprintf_chk
0x000054c7      660f1f840000.  nop word [rax + rax]
0x000054d0      488d35812b00.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x8058 ; "Written by %s, %s, %s,\nand %s.\n"
0x000054d7      ba05000000     mov edx, 5
0x000054dc      31ff           xor edi, edi
0x000054de      4c8b7318       mov r14, qword [rbx + 0x18]
0x000054e2      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000054e6      4c8b6308       mov r12, qword [rbx + 8]
0x000054ea      488b1b         mov rbx, qword [rbx]
0x000054ed      e8aec8ffff     call sym.imp.dcgettext
0x000054f2      4883ec08       sub rsp, 8
0x000054f6      4156           push r14
0x000054f8      4889c2         mov rdx, rax
0x000054fb      4d89e9         mov r9, r13
0x000054fe      4d89e0         mov r8, r12
0x00005501      4889d9         mov rcx, rbx
0x00005504      4889ef         mov rdi, rbp
0x00005507      be01000000     mov esi, 1
0x0000550c      31c0           xor eax, eax
0x0000550e      e8adcaffff     call sym.imp.__fprintf_chk
0x00005513      58             pop rax
0x00005514      5a             pop rdx
0x00005515      4883c428       add rsp, 0x28
0x00005519      5b             pop rbx
0x0000551a      5d             pop rbp
0x0000551b      415c           pop r12
0x0000551d      415d           pop r13
0x0000551f      415e           pop r14
0x00005521      415f           pop r15
0x00005523      c3             ret
0x00005524      0f1f4000       nop dword [rax]
0x00005528      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000552c      488d35452b00.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x8078 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00005533      ba05000000     mov edx, 5
0x00005538      31ff           xor edi, edi
0x0000553a      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000553e      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005542      4c8b6308       mov r12, qword [rbx + 8]
0x00005546      488b1b         mov rbx, qword [rbx]
0x00005549      e852c8ffff     call sym.imp.dcgettext
0x0000554e      4157           push r15
0x00005550      eba4           jmp 0x54f6
0x00005552      660f1f440000   nop word [rax + rax]
0x00005558      4c8b4308       mov r8, qword [rbx + 8]
0x0000555c      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005560      488d35392b00.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x80a0 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00005567      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000556b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000556f      ba05000000     mov edx, 5
0x00005574      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005578      31ff           xor edi, edi
0x0000557a      488b1b         mov rbx, qword [rbx]
0x0000557d      4c890424       mov qword [rsp], r8
0x00005581      e81ac8ffff     call sym.imp.dcgettext
0x00005586      4883ec08       sub rsp, 8
0x0000558a      4d89e9         mov r9, r13
0x0000558d      4154           push r12
0x0000558f      4157           push r15
0x00005591      4156           push r14
0x00005593      4c8b442420     mov r8, qword [rsp + 0x20]
0x00005598      4889d9         mov rcx, rbx
0x0000559b      4889c2         mov rdx, rax
0x0000559e      4889ef         mov rdi, rbp
0x000055a1      be01000000     mov esi, 1
0x000055a6      31c0           xor eax, eax
0x000055a8      e813caffff     call sym.imp.__fprintf_chk
0x000055ad      4883c420       add rsp, 0x20
0x000055b1      4883c428       add rsp, 0x28
0x000055b5      5b             pop rbx
0x000055b6      5d             pop rbp
0x000055b7      415c           pop r12
0x000055b9      415d           pop r13
0x000055bb      415e           pop r14
0x000055bd      415f           pop r15
0x000055bf      c3             ret
0x000055c0      4c8b4b10       mov r9, qword [rbx + 0x10]
0x000055c4      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000055c8      488d35f92a00.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x80c8 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x000055cf      4c8b6328       mov r12, qword [rbx + 0x28]
0x000055d3      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000055d7      ba05000000     mov edx, 5
0x000055dc      4c8b7318       mov r14, qword [rbx + 0x18]
0x000055e0      4c8b4308       mov r8, qword [rbx + 8]
0x000055e4      31ff           xor edi, edi
0x000055e6      4c894c2408     mov qword [rsp + 8], r9
0x000055eb      488b1b         mov rbx, qword [rbx]
0x000055ee      4c890424       mov qword [rsp], r8
0x000055f2      e8a9c7ffff     call sym.imp.dcgettext
0x000055f7      4155           push r13
0x000055f9      4154           push r12
0x000055fb      4157           push r15
0x000055fd      4156           push r14
0x000055ff      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00005604      eb8d           jmp 0x5593
0x00005606      662e0f1f8400.  nop word cs:[rax + rax]
0x00005610      4c8b5340       mov r10, qword [rbx + 0x40]
0x00005614      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00005618      ba05000000     mov edx, 5
0x0000561d      488b4310       mov rax, qword [rbx + 0x10]
0x00005621      4c8b4308       mov r8, qword [rbx + 8]
0x00005625      488d35342b00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x8160 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x0000562c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00005630      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005634      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005638      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000563c      4c89542418     mov qword [rsp + 0x18], r10
0x00005641      4c894c2410     mov qword [rsp + 0x10], r9
0x00005646      48890424       mov qword [rsp], rax
0x0000564a      4c89442408     mov qword [rsp + 8], r8
0x0000564f      488b1b         mov rbx, qword [rbx]
0x00005652      e98bfdffff     jmp 0x53e2
0x00005657      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00005660      4531c9         xor r9d, r9d
0x00005663      49833800       cmp qword [r8], 0
0x00005667      7412           je 0x567b
0x00005669      0f1f80000000.  nop dword [rax]
0x00005670      4983c101       add r9, 1
0x00005674      4b833cc800     cmp qword [r8 + r9*8], 0
0x00005679      75f5           jne 0x5670
0x0000567b      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00005680      4883ec68       sub rsp, 0x68
0x00005684      4d89c2         mov r10, r8
0x00005687      4531c9         xor r9d, r9d
0x0000568a      64488b042528.  mov rax, qword fs:[0x28]
0x00005693      4889442458     mov qword [rsp + 0x58], rax
0x00005698      31c0           xor eax, eax
0x0000569a      4989e0         mov r8, rsp
0x0000569d      0f1f00         nop dword [rax]
0x000056a0      418b02         mov eax, dword [r10]
0x000056a3      83f82f         cmp eax, 0x2f
0x000056a6      7742           ja 0x56ea
0x000056a8      4189c3         mov r11d, eax
0x000056ab      4d035a10       add r11, qword [r10 + 0x10]
0x000056af      83c008         add eax, 8
0x000056b2      418902         mov dword [r10], eax
0x000056b5      498b03         mov rax, qword [r11]
0x000056b8      4885c0         test rax, rax
0x000056bb      4b8904c8       mov qword [r8 + r9*8], rax
0x000056bf      740a           je 0x56cb
0x000056c1      4983c101       add r9, 1
0x000056c5      4983f90a       cmp r9, 0xa
0x000056c9      75d5           jne 0x56a0
0x000056cb      e870fbffff     call sym.version_etc_arn
0x000056d0      488b442458     mov rax, qword [rsp + 0x58]
0x000056d5      644833042528.  xor rax, qword fs:[0x28]
0x000056de      7505           jne 0x56e5
0x000056e0      4883c468       add rsp, 0x68
0x000056e4      c3             ret
0x000056e5      e8e6c6ffff     call sym.imp.__stack_chk_fail
0x000056ea      4d8b5a08       mov r11, qword [r10 + 8]
0x000056ee      498d4308       lea rax, [r11 + 8]
0x000056f2      49894208       mov qword [r10 + 8], rax
0x000056f6      ebbd           jmp 0x56b5
0x000056f8      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00005700      55             push rbp
0x00005701      53             push rbx
0x00005702      41ba20000000   mov r10d, 0x20                          ; "@"
0x00005708      4531db         xor r11d, r11d
0x0000570b      4881ecb80000.  sub rsp, 0xb8
0x00005712      64488b042528.  mov rax, qword fs:[0x28]
0x0000571b      4889442478     mov qword [rsp + 0x78], rax
0x00005720      31c0           xor eax, eax
0x00005722      488d8424d000.  lea rax, [rsp + 0xd0]
0x0000572a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00005732      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x0000573a      4c8d442420     lea r8, [rsp + 0x20]
0x0000573f      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00005747      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x0000574f      4889442410     mov qword [rsp + 0x10], rax
0x00005754      488d84248000.  lea rax, [rsp + 0x80]
0x0000575c      4531c9         xor r9d, r9d
0x0000575f      4889442418     mov qword [rsp + 0x18], rax
0x00005764      4889c5         mov rbp, rax
0x00005767      660f1f840000.  nop word [rax + rax]
0x00005770      4183fa2f       cmp r10d, 0x2f
0x00005774      7756           ja 0x57cc
0x00005776      4489d0         mov eax, r10d
0x00005779      41bb01000000   mov r11d, 1
0x0000577f      4183c208       add r10d, 8
0x00005783      4801e8         add rax, rbp
0x00005786      488b00         mov rax, qword [rax]
0x00005789      4885c0         test rax, rax
0x0000578c      4b8904c8       mov qword [r8 + r9*8], rax
0x00005790      740a           je 0x579c
0x00005792      4983c101       add r9, 1
0x00005796      4983f90a       cmp r9, 0xa
0x0000579a      75d4           jne 0x5770
0x0000579c      4584db         test r11b, r11b
0x0000579f      7524           jne 0x57c5
0x000057a1      e89afaffff     call sym.version_etc_arn
0x000057a6      488b442478     mov rax, qword [rsp + 0x78]
0x000057ab      644833042528.  xor rax, qword fs:[0x28]
0x000057b4      750a           jne 0x57c0
0x000057b6      4881c4b80000.  add rsp, 0xb8
0x000057bd      5b             pop rbx
0x000057be      5d             pop rbp
0x000057bf      c3             ret
0x000057c0      e80bc6ffff     call sym.imp.__stack_chk_fail
0x000057c5      4489542408     mov dword [rsp + 8], r10d
0x000057ca      ebd5           jmp 0x57a1
0x000057cc      4889d8         mov rax, rbx
0x000057cf      4883c308       add rbx, 8
0x000057d3      ebb1           jmp 0x5786
0x000057d5      90             nop
0x000057d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x000057e0      53             push rbx
0x000057e1      488d355a2700.  lea rsi, str.Report_bugs_to:__s         ; 0x7f42 ; "\nReport bugs to: %s\n"
0x000057e8      ba05000000     mov edx, 5
0x000057ed      31ff           xor edi, edi
0x000057ef      e8acc5ffff     call sym.imp.dcgettext
0x000057f4      488d155c2700.  lea rdx, str.bug_coreutils_gnu.org      ; 0x7f57 ; "bug-coreutils@gnu.org"
0x000057fb      4889c6         mov rsi, rax
0x000057fe      bf01000000     mov edi, 1
0x00005803      31c0           xor eax, eax
0x00005805      e846c7ffff     call sym.imp.__printf_chk
0x0000580a      488d355c2700.  lea rsi, str.s_home_page:___s           ; 0x7f6d ; "%s home page: <%s>\n"
0x00005811      ba05000000     mov edx, 5
0x00005816      31ff           xor edi, edi
0x00005818      e883c5ffff     call sym.imp.dcgettext
0x0000581d      488d0d2c0f00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x6750 ; "https://www.gnu.org/software/coreutils/"
0x00005824      488d154a0a00.  lea rdx, str.GNU_coreutils              ; 0x6275 ; "GNU coreutils"
0x0000582b      4889c6         mov rsi, rax
0x0000582e      bf01000000     mov edi, 1
0x00005833      31c0           xor eax, eax
0x00005835      e816c7ffff     call sym.imp.__printf_chk
0x0000583a      488b1d674820.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00005841      488d35582900.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x81a0 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00005848      31ff           xor edi, edi
0x0000584a      ba05000000     mov edx, 5
0x0000584f      e84cc5ffff     call sym.imp.dcgettext
0x00005854      4889de         mov rsi, rbx
0x00005857      4889c7         mov rdi, rax
0x0000585a      5b             pop rbx
0x0000585b      e930c6ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00005860      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00005861      4889fb         mov rbx, rdi
0x00005864      e89fc7ffff     call 0x2008                             ; ../coreutils-8.31/lib/xmalloc.c:41
0x00005869      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x0000586c      7505           jne 0x5873
0x0000586e      4885db         test rbx, rbx
0x00005871      7502           jne 0x5875
0x00005873      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00005874      c3             ret
0x00005875      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x0000587a      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00005880      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00005883      48f7e6         mul rsi
0x00005886      4889c7         mov rdi, rax
0x00005889      0f90c0         seto al
0x0000588c      4885ff         test rdi, rdi
0x0000588f      780a           js 0x589b
0x00005891      0fb6c0         movzx eax, al
0x00005894      4885c0         test rax, rax
0x00005897      7502           jne 0x589b
0x00005899      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x0000589b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x0000589f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x000058a4      6690           nop
0x000058a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x000058b0      ebae           jmp sym.xmalloc
0x000058b2      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x000058b6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x000058c0      4885f6         test rsi, rsi
0x000058c3      53             push rbx
0x000058c4      4889f3         mov rbx, rsi
0x000058c7      7505           jne 0x58ce
0x000058c9      4885ff         test rdi, rdi
0x000058cc      751a           jne 0x58e8
0x000058ce      4889de         mov rsi, rbx
0x000058d1      e85ac6ffff     call sym.imp.realloc
0x000058d6      4885c0         test rax, rax
0x000058d9      7505           jne 0x58e0
0x000058db      4885db         test rbx, rbx
0x000058de      7511           jne 0x58f1                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x000058e0      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x000058e1      c3             ret
0x000058e2      660f1f440000   nop word [rax + rax]
0x000058e8      e813c7ffff     call sym..plt.got
0x000058ed      31c0           xor eax, eax
0x000058ef      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x000058f0      c3             ret
0x000058f1      e8ba010000     call sym.xalloc_die
0x000058f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00005900      4889f0         mov rax, rsi
0x00005903      48f7e2         mul rdx
0x00005906      4889c6         mov rsi, rax
0x00005909      0f90c0         seto al
0x0000590c      4885f6         test rsi, rsi
0x0000590f      780a           js 0x591b
0x00005911      0fb6c0         movzx eax, al
0x00005914      4885c0         test rax, rax
0x00005917      7502           jne 0x591b
0x00005919      eba5           jmp sym.xrealloc
0x0000591b      4883ec08       sub rsp, 8
0x0000591f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00005924      6690           nop
0x00005926      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00005930      4885ff         test rdi, rdi
0x00005933      4989d1         mov r9, rdx
0x00005936      488b0e         mov rcx, qword [rsi]
0x00005939      7435           je 0x5970
0x0000593b      31d2           xor edx, edx
0x0000593d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00005947      49f7f1         div r9
0x0000594a      4839c8         cmp rax, rcx
0x0000594d      763c           jbe 0x598b
0x0000594f      4889c8         mov rax, rcx
0x00005952      48d1e8         shr rax, 1
0x00005955      488d4c0801     lea rcx, [rax + rcx + 1]
0x0000595a      48890e         mov qword [rsi], rcx
0x0000595d      490fafc9       imul rcx, r9
0x00005961      4889ce         mov rsi, rcx
0x00005964      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00005969      0f1f80000000.  nop dword [rax]
0x00005970      4885c9         test rcx, rcx
0x00005973      7423           je 0x5998
0x00005975      4889c8         mov rax, rcx
0x00005978      49f7e1         mul r9
0x0000597b      0f90c2         seto dl
0x0000597e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00005981      0fb6d2         movzx edx, dl
0x00005984      7805           js 0x598b
0x00005986      4885d2         test rdx, rdx
0x00005989      74cf           je 0x595a
0x0000598b      4883ec08       sub rsp, 8
0x0000598f      e81c010000     call sym.xalloc_die
0x00005994      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00005998      31d2           xor edx, edx
0x0000599a      b880000000     mov eax, 0x80
0x0000599f      4531c0         xor r8d, r8d
0x000059a2      49f7f1         div r9
0x000059a5      4885c0         test rax, rax
0x000059a8      410f94c0       sete r8b
0x000059ac      498d0c00       lea rcx, [r8 + rax]
0x000059b0      ebc3           jmp 0x5975
0x000059b2      0f1f4000       nop dword [rax]
0x000059b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x000059c0      4885ff         test rdi, rdi
0x000059c3      488b06         mov rax, qword [rsi]
0x000059c6      7428           je 0x59f0
0x000059c8      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x000059d2      4839d0         cmp rax, rdx
0x000059d5      772a           ja 0x5a01
0x000059d7      4889c2         mov rdx, rax
0x000059da      48d1ea         shr rdx, 1
0x000059dd      488d440201     lea rax, [rdx + rax + 1]
0x000059e2      488906         mov qword [rsi], rax
0x000059e5      4889c6         mov rsi, rax
0x000059e8      e9d3feffff     jmp sym.xrealloc
0x000059ed      0f1f00         nop dword [rax]
0x000059f0      4885c0         test rax, rax
0x000059f3      ba80000000     mov edx, 0x80
0x000059f8      480f44c2       cmove rax, rdx
0x000059fc      4885c0         test rax, rax
0x000059ff      79e1           jns 0x59e2
0x00005a01      4883ec08       sub rsp, 8
0x00005a05      e8a6000000     call sym.xalloc_die
0x00005a0a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00005a10      53             push rbx
0x00005a11      4889fb         mov rbx, rdi
0x00005a14      e847feffff     call sym.xmalloc
0x00005a19      4889da         mov rdx, rbx
0x00005a1c      31f6           xor esi, esi
0x00005a1e      4889c7         mov rdi, rax
0x00005a21      5b             pop rbx
0x00005a22      e919c4ffff     jmp sym.imp.memset
0x00005a27      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00005a30      4889f8         mov rax, rdi
0x00005a33      4883ec08       sub rsp, 8
0x00005a37      48f7e6         mul rsi
0x00005a3a      0f90c2         seto dl
0x00005a3d      4885c0         test rax, rax
0x00005a40      7817           js 0x5a59
0x00005a42      0fb6d2         movzx edx, dl
0x00005a45      4885d2         test rdx, rdx
0x00005a48      750f           jne 0x5a59
0x00005a4a      e851c4ffff     call sym.imp.calloc
0x00005a4f      4885c0         test rax, rax
0x00005a52      7405           je 0x5a59
0x00005a54      4883c408       add rsp, 8
0x00005a58      c3             ret
0x00005a59      e852000000     call sym.xalloc_die
0x00005a5e      6690           nop
;-- xmemdup:
0x00005a60      55             push rbp
0x00005a61      53             push rbx
0x00005a62      4889fd         mov rbp, rdi
0x00005a65      4889f7         mov rdi, rsi
0x00005a68      4889f3         mov rbx, rsi
0x00005a6b      4883ec08       sub rsp, 8
0x00005a6f      e8ecfdffff     call sym.xmalloc
0x00005a74      4883c408       add rsp, 8
0x00005a78      4889da         mov rdx, rbx
0x00005a7b      4889ee         mov rsi, rbp
0x00005a7e      5b             pop rbx
0x00005a7f      5d             pop rbp
0x00005a80      4889c7         mov rdi, rax
0x00005a83      e948c4ffff     jmp sym.imp.memcpy
0x00005a88      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00005a90      53             push rbx
0x00005a91      4889fb         mov rbx, rdi
0x00005a94      e827c3ffff     call sym.imp.strlen
0x00005a99      4889df         mov rdi, rbx
0x00005a9c      488d7001       lea rsi, [rax + 1]
0x00005aa0      5b             pop rbx
0x00005aa1      ebbd           jmp sym.xmemdup
0x00005aa3      662e0f1f8400.  nop word cs:[rax + rax]
0x00005aad      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00005ab0      488d35982700.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x824f ; "memory exhausted"
0x00005ab7      4883ec08       sub rsp, 8
0x00005abb      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00005ac0      31ff           xor edi, edi
0x00005ac2      e8d9c2ffff     call sym.imp.dcgettext
0x00005ac7      8b3d4b452000   mov edi, dword [obj.exit_failure]       ; [0x20a018:4]=1
0x00005acd      488d15e51e00.  lea rdx, [0x000079b9]                   ; "%s"
0x00005ad4      4889c1         mov rcx, rax
0x00005ad7      31f6           xor esi, esi
0x00005ad9      31c0           xor eax, eax
0x00005adb      e880c4ffff     call sym.imp.error
0x00005ae0      e82bc2ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00005ae5      662e0f1f8400.  nop word cs:[rax + rax]
0x00005aef      90             nop
;-- xstrndup:
0x00005af0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xstrndup.c:31
0x00005af4      e877c3ffff     call sym.imp.strndup                    ; ../coreutils-8.31/lib/xstrndup.c:32
0x00005af9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xstrndup.c:33
0x00005afc      7405           je 0x5b03
0x00005afe      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/xstrndup.c:36
0x00005b02      c3             ret
0x00005b03      e8a8ffffff     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xstrndup.c:34
0x00005b08      0f1f84000000.  nop dword [rax + rax]
;-- rpl_fclose:
0x00005b10      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00005b12      55             push rbp
0x00005b13      53             push rbx
0x00005b14      4889fb         mov rbx, rdi
0x00005b17      e8c4c3ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x00005b1c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x00005b1e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00005b21      7854           js 0x5b77                               ; ../coreutils-8.31/lib/fclose.c:66
0x00005b23      e8e8c3ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00005b28      85c0           test eax, eax
0x00005b2a      752c           jne 0x5b58
0x00005b2c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x00005b2f      e85c000000     call sym.rpl_fflush
0x00005b34      85c0           test eax, eax
0x00005b36      743c           je 0x5b74
0x00005b38      e8e3c1ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x00005b3d      448b20         mov r12d, dword [rax]
0x00005b40      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00005b43      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00005b46      e835c2ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x00005b4b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x00005b4e      7530           jne 0x5b80
0x00005b50      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00005b51      5d             pop rbp
0x00005b52      415c           pop r12
0x00005b54      c3             ret
0x00005b55      0f1f00         nop dword [rax]
0x00005b58      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x00005b5b      e880c3ffff     call sym.imp.fileno
0x00005b60      31f6           xor esi, esi
0x00005b62      ba01000000     mov edx, 1
0x00005b67      89c7           mov edi, eax
0x00005b69      e8b2c2ffff     call sym.imp.lseek
0x00005b6e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005b72      75b8           jne 0x5b2c
0x00005b74      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00005b77      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00005b78      5d             pop rbp
0x00005b79      415c           pop r12
0x00005b7b      e900c2ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00005b80      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00005b84      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00005b89      ebc5           jmp 0x5b50
0x00005b8b      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x00005b90      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00005b93      53             push rbx
0x00005b94      4889fb         mov rbx, rdi
0x00005b97      7411           je 0x5baa                               ; ../coreutils-8.31/lib/fflush.c:150
0x00005b99      e872c3ffff     call sym.imp.__freading
0x00005b9e      85c0           test eax, eax
0x00005ba0      7408           je 0x5baa
0x00005ba2      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00005ba8      750e           jne 0x5bb8
0x00005baa      4889df         mov rdi, rbx
0x00005bad      5b             pop rbx
0x00005bae      e93dc3ffff     jmp sym.imp.fflush
0x00005bb3      0f1f440000     nop dword [rax + rax]
0x00005bb8      4889df         mov rdi, rbx
0x00005bbb      ba01000000     mov edx, 1
0x00005bc0      31f6           xor esi, esi
0x00005bc2      e809000000     call sym.rpl_fseeko
0x00005bc7      4889df         mov rdi, rbx
0x00005bca      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x00005bcb      e920c3ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00005bd0      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00005bd4      48394710       cmp qword [rdi + 0x10], rax
0x00005bd8      7406           je 0x5be0                               ; ../coreutils-8.31/lib/fseeko.c:32
0x00005bda      e9a1c3ffff     jmp sym.imp.fseeko
0x00005bdf      90             nop
0x00005be0      488b4720       mov rax, qword [rdi + 0x20]
0x00005be4      48394728       cmp qword [rdi + 0x28], rax
0x00005be8      75f0           jne 0x5bda                              ; ../coreutils-8.31/lib/fseeko.c:33
0x00005bea      48837f4800     cmp qword [rdi + 0x48], 0
0x00005bef      75e9           jne 0x5bda                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00005bf1      4154           push r12
0x00005bf3      55             push rbp
0x00005bf4      4189d4         mov r12d, edx
0x00005bf7      53             push rbx
0x00005bf8      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x00005bfb      4889fb         mov rbx, rdi
0x00005bfe      e8ddc2ffff     call sym.imp.fileno
0x00005c03      4489e2         mov edx, r12d
0x00005c06      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00005c09      89c7           mov edi, eax
0x00005c0b      e810c2ffff     call sym.imp.lseek
0x00005c10      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005c14      740c           je 0x5c22
0x00005c16      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00005c19      488983900000.  mov qword [rbx + 0x90], rax
0x00005c20      31c0           xor eax, eax
0x00005c22      5b             pop rbx
0x00005c23      5d             pop rbp
0x00005c24      415c           pop r12
0x00005c26      c3             ret
0x00005c27      660f1f840000.  nop word [rax + rax]
;-- rpl_mbrtowc:
0x00005c30      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00005c32      4154           push r12
0x00005c34      4989f5         mov r13, rsi
0x00005c37      55             push rbp
0x00005c38      53             push rbx
0x00005c39      4889fb         mov rbx, rdi
0x00005c3c      4989d4         mov r12, rdx
0x00005c3f      4883ec18       sub rsp, 0x18
0x00005c43      64488b042528.  mov rax, qword fs:[0x28]
0x00005c4c      4889442408     mov qword [rsp + 8], rax
0x00005c51      31c0           xor eax, eax
0x00005c53      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00005c58      4885ff         test rdi, rdi
0x00005c5b      480f44d8       cmove rbx, rax
0x00005c5f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00005c62      e889c1ffff     call sym.imp.mbrtowc
0x00005c67      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00005c6b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00005c6e      7620           jbe 0x5c90                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00005c70      4d85e4         test r12, r12
0x00005c73      741b           je 0x5c90
0x00005c75      31ff           xor edi, edi
0x00005c77      e8e4030000     call sym.hard_locale
0x00005c7c      84c0           test al, al
0x00005c7e      7510           jne 0x5c90
0x00005c80      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00005c85      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x00005c8a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00005c8c      0f1f4000       nop dword [rax]
0x00005c90      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00005c95      644833142528.  xor rdx, qword fs:[0x28]
0x00005c9e      4889e8         mov rax, rbp
0x00005ca1      750b           jne 0x5cae
0x00005ca3      4883c418       add rsp, 0x18
0x00005ca7      5b             pop rbx
0x00005ca8      5d             pop rbp
0x00005ca9      415c           pop r12
0x00005cab      415d           pop r13
0x00005cad      c3             ret
0x00005cae      e81dc1ffff     call sym.imp.__stack_chk_fail
0x00005cb3      662e0f1f8400.  nop word cs:[rax + rax]
0x00005cbd      0f1f00         nop dword [rax]
;-- print_and_abort:
0x00005cc0      488d35882500.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/obstack.c:331 ; 0x824f ; "memory exhausted"
0x00005cc7      4883ec08       sub rsp, 8
0x00005ccb      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/obstack.c:340
0x00005cd0      31ff           xor edi, edi
0x00005cd2      e8c9c0ffff     call sym.imp.dcgettext
0x00005cd7      488b3d024420.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a0e0:8]=0
0x00005cde      488d150b2200.  lea rdx, [0x00007ef0]                   ; "%s\n"
0x00005ce5      4889c1         mov rcx, rax
0x00005ce8      be01000000     mov esi, 1
0x00005ced      31c0           xor eax, eax
0x00005cef      e8ccc2ffff     call sym.imp.__fprintf_chk
0x00005cf4      8b3d1e432000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/obstack.c:342 ; [0x20a018:4]=1
0x00005cfa      e8a1c2ffff     call sym.imp.exit
0x00005cff      90             nop
;-- call_chunkfun:
0x00005d00      f6475001       test byte [rdi + 0x50], 1               ; ../coreutils-8.31/lib/obstack.c:85
0x00005d04      488b4738       mov rax, qword [rdi + 0x38]
0x00005d08      7506           jne 0x5d10
0x00005d0a      4889f7         mov rdi, rsi                            ; ../coreutils-8.31/lib/obstack.c:89
0x00005d0d      ffe0           jmp rax
0x00005d0f      90             nop
0x00005d10      488b7f48       mov rdi, qword [rdi + 0x48]             ; ../coreutils-8.31/lib/obstack.c:87
0x00005d14      ffe0           jmp rax
0x00005d16      662e0f1f8400.  nop word cs:[rax + rax]
;-- call_freefun:
0x00005d20      f6475001       test byte [rdi + 0x50], 1               ; ../coreutils-8.31/lib/obstack.c:94
0x00005d24      488b4740       mov rax, qword [rdi + 0x40]
0x00005d28      7506           jne 0x5d30
0x00005d2a      4889f7         mov rdi, rsi                            ; ../coreutils-8.31/lib/obstack.c:98
0x00005d2d      ffe0           jmp rax
0x00005d2f      90             nop
0x00005d30      488b7f48       mov rdi, qword [rdi + 0x48]             ; ../coreutils-8.31/lib/obstack.c:96
0x00005d34      ffe0           jmp rax
0x00005d36      662e0f1f8400.  nop word cs:[rax + rax]
;-- _obstack_begin_worker:
0x00005d40      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/obstack.c:111
0x00005d43      4154           push r12
0x00005d45      55             push rbp
0x00005d46      53             push rbx
0x00005d47      4889fb         mov rbx, rdi
0x00005d4a      7464           je 0x5db0                               ; ../coreutils-8.31/lib/obstack.c:114
0x00005d4c      4c8d62ff       lea r12, [rdx - 1]
0x00005d50      4889d5         mov rbp, rdx
0x00005d53      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/obstack.c:130
0x00005d56      b8e00f0000     mov eax, 0xfe0
0x00005d5b      4c896330       mov qword [rbx + 0x30], r12             ; ../coreutils-8.31/lib/obstack.c:134
0x00005d5f      480f44f0       cmove rsi, rax                          ; ../coreutils-8.31/lib/obstack.c:130
0x00005d63      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/obstack.c:136
0x00005d66      488933         mov qword [rbx], rsi                    ; ../coreutils-8.31/lib/obstack.c:133
0x00005d69      e892ffffff     call sym.call_chunkfun                  ; ../coreutils-8.31/lib/obstack.c:136
0x00005d6e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/obstack.c:137
0x00005d71      48894308       mov qword [rbx + 8], rax                ; ../coreutils-8.31/lib/obstack.c:136
0x00005d75      7446           je 0x5dbd                               ; ../coreutils-8.31/lib/obstack.c:137
0x00005d77      4a8d542010     lea rdx, [rax + r12 + 0x10]             ; ../coreutils-8.31/lib/obstack.c:139
0x00005d7c      48f7dd         neg rbp
0x00005d7f      4821d5         and rbp, rdx
0x00005d82      488b13         mov rdx, qword [rbx]                    ; ../coreutils-8.31/lib/obstack.c:141
0x00005d85      48896b10       mov qword [rbx + 0x10], rbp             ; ../coreutils-8.31/lib/obstack.c:139
0x00005d89      48896b18       mov qword [rbx + 0x18], rbp
0x00005d8d      4801c2         add rdx, rax                            ; ../coreutils-8.31/lib/obstack.c:141
0x00005d90      488910         mov qword [rax], rdx
0x00005d93      48895320       mov qword [rbx + 0x20], rdx
0x00005d97      48c740080000.  mov qword [rax + 8], 0                  ; ../coreutils-8.31/lib/obstack.c:142
0x00005d9f      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/obstack.c:147
0x00005da4      806350f9       and byte [rbx + 0x50], 0xf9             ; ../coreutils-8.31/lib/obstack.c:145 ; [0xf9:1]=152
0x00005da8      5b             pop rbx                                 ; ../coreutils-8.31/lib/obstack.c:147
0x00005da9      5d             pop rbp
0x00005daa      415c           pop r12
0x00005dac      c3             ret
0x00005dad      0f1f00         nop dword [rax]
0x00005db0      41bc0f000000   mov r12d, 0xf
0x00005db6      bd10000000     mov ebp, 0x10                           ; ../coreutils-8.31/lib/obstack.c:115
0x00005dbb      eb96           jmp 0x5d53
0x00005dbd      ff15bd422000   call qword [obj.obstack_alloc_failed_handler] ; ../coreutils-8.31/lib/obstack.c:138 ; [0x20a080:8]=0x5cc0 sym.print_and_abort
0x00005dc3      0f1f00         nop dword [rax]
0x00005dc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- _obstack_begin:
0x00005dd0      806750fe       and byte [rdi + 0x50], 0xfe             ; ../coreutils-8.31/lib/obstack.c:154 ; [0xfe:1]=0
0x00005dd4      48894f38       mov qword [rdi + 0x38], rcx             ; ../coreutils-8.31/lib/obstack.c:155
0x00005dd8      4c894740       mov qword [rdi + 0x40], r8              ; ../coreutils-8.31/lib/obstack.c:156
0x00005ddc      e95fffffff     jmp sym._obstack_begin_worker           ; ../coreutils-8.31/lib/obstack.c:158
0x00005de1      0f1f440000     nop dword [rax + rax]
0x00005de6      662e0f1f8400.  nop word cs:[rax + rax]
;-- _obstack_begin_1:
0x00005df0      804f5001       or byte [rdi + 0x50], 1                 ; ../coreutils-8.31/lib/obstack.c:167
0x00005df4      48894f38       mov qword [rdi + 0x38], rcx             ; ../coreutils-8.31/lib/obstack.c:168
0x00005df8      4c894740       mov qword [rdi + 0x40], r8              ; ../coreutils-8.31/lib/obstack.c:169
0x00005dfc      4c894f48       mov qword [rdi + 0x48], r9              ; ../coreutils-8.31/lib/obstack.c:170
0x00005e00      e93bffffff     jmp sym._obstack_begin_worker           ; ../coreutils-8.31/lib/obstack.c:172
0x00005e05      90             nop
0x00005e06      662e0f1f8400.  nop word cs:[rax + rax]
;-- _obstack_newchunk:
0x00005e10      4156           push r14                                ; ../coreutils-8.31/lib/obstack.c:183
0x00005e12      4155           push r13
0x00005e14      31d2           xor edx, edx
0x00005e16      4154           push r12
0x00005e18      55             push rbp
0x00005e19      53             push rbx
0x00005e1a      488b5f18       mov rbx, qword [rdi + 0x18]             ; ../coreutils-8.31/lib/obstack.c:186
0x00005e1e      482b5f10       sub rbx, qword [rdi + 0x10]
0x00005e22      488b6f08       mov rbp, qword [rdi + 8]                ; ../coreutils-8.31/lib/obstack.c:184
0x00005e26      4801de         add rsi, rbx
0x00005e29      4889d9         mov rcx, rbx                            ; ../coreutils-8.31/lib/obstack.c:192
0x00005e2c      0f92c2         setb dl
0x00005e2f      48037730       add rsi, qword [rdi + 0x30]
0x00005e33      0f92c0         setb al
0x00005e36      48c1e903       shr rcx, 3
0x00005e3a      483937         cmp qword [rdi], rsi
0x00005e3d      4c8d640e64     lea r12, [rsi + rcx + 0x64]
0x00005e42      480f4337       cmovae rsi, qword [rdi]
0x00005e46      4c39e6         cmp rsi, r12
0x00005e49      4c0f43e6       cmovae r12, rsi
0x00005e4d      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/obstack.c:199
0x00005e50      0f859f000000   jne 0x5ef5
0x00005e56      0fb6c0         movzx eax, al
0x00005e59      4885c0         test rax, rax
0x00005e5c      0f8593000000   jne 0x5ef5
0x00005e62      4c89e6         mov rsi, r12                            ; ../coreutils-8.31/lib/obstack.c:200
0x00005e65      4989fd         mov r13, rdi
0x00005e68      e893feffff     call sym.call_chunkfun
0x00005e6d      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/obstack.c:201
0x00005e70      4989c6         mov r14, rax                            ; ../coreutils-8.31/lib/obstack.c:200
0x00005e73      0f847c000000   je 0x5ef5                               ; ../coreutils-8.31/lib/obstack.c:201
0x00005e79      4a8d3420       lea rsi, [rax + r12]                    ; ../coreutils-8.31/lib/obstack.c:205
0x00005e7d      49894508       mov qword [r13 + 8], rax                ; ../coreutils-8.31/lib/obstack.c:203
0x00005e81      48896808       mov qword [rax + 8], rbp                ; ../coreutils-8.31/lib/obstack.c:204
0x00005e85      4889da         mov rdx, rbx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00005e88      49897520       mov qword [r13 + 0x20], rsi             ; ../coreutils-8.31/lib/obstack.c:205
0x00005e8c      488930         mov qword [rax], rsi
0x00005e8f      498b4530       mov rax, qword [r13 + 0x30]             ; ../coreutils-8.31/lib/obstack.c:209
0x00005e93      498b7510       mov rsi, qword [r13 + 0x10]             ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00005e97      4d8d640610     lea r12, [r14 + rax + 0x10]             ; ../coreutils-8.31/lib/obstack.c:209
0x00005e9c      48f7d0         not rax
0x00005e9f      4921c4         and r12, rax
0x00005ea2      4c89e7         mov rdi, r12                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00005ea5      e826c0ffff     call sym.imp.memcpy
0x00005eaa      41f6455002     test byte [r13 + 0x50], 2               ; ../coreutils-8.31/lib/obstack.c:217
0x00005eaf      7515           jne 0x5ec6
0x00005eb1      498b4530       mov rax, qword [r13 + 0x30]             ; ../coreutils-8.31/lib/obstack.c:219
0x00005eb5      488d540510     lea rdx, [rbp + rax + 0x10]
0x00005eba      48f7d0         not rax
0x00005ebd      4821d0         and rax, rdx
0x00005ec0      49394510       cmp qword [r13 + 0x10], rax             ; ../coreutils-8.31/lib/obstack.c:218
0x00005ec4      741a           je 0x5ee0
0x00005ec6      41806550fd     and byte [r13 + 0x50], 0xfd             ; ../coreutils-8.31/lib/obstack.c:229 ; [0xfd:1]=0
0x00005ecb      4c01e3         add rbx, r12                            ; ../coreutils-8.31/lib/obstack.c:227
0x00005ece      4d896510       mov qword [r13 + 0x10], r12             ; ../coreutils-8.31/lib/obstack.c:226
0x00005ed2      49895d18       mov qword [r13 + 0x18], rbx             ; ../coreutils-8.31/lib/obstack.c:227
0x00005ed6      5b             pop rbx                                 ; ../coreutils-8.31/lib/obstack.c:230
0x00005ed7      5d             pop rbp
0x00005ed8      415c           pop r12
0x00005eda      415d           pop r13
0x00005edc      415e           pop r14
0x00005ede      c3             ret
0x00005edf      90             nop
0x00005ee0      488b4508       mov rax, qword [rbp + 8]                ; ../coreutils-8.31/lib/obstack.c:222
0x00005ee4      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/obstack.c:223
0x00005ee7      4c89ef         mov rdi, r13
0x00005eea      49894608       mov qword [r14 + 8], rax                ; ../coreutils-8.31/lib/obstack.c:222
0x00005eee      e82dfeffff     call sym.call_freefun                   ; ../coreutils-8.31/lib/obstack.c:223
0x00005ef3      ebd1           jmp 0x5ec6
0x00005ef5      ff1585412000   call qword [obj.obstack_alloc_failed_handler] ; ../coreutils-8.31/lib/obstack.c:202 ; [0x20a080:8]=0x5cc0 sym.print_and_abort
0x00005efb      0f1f440000     nop dword [rax + rax]
;-- _obstack_allocated_p:
0x00005f00      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/obstack.c:242
0x00005f04      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/obstack.c:250
0x00005f07      742d           je 0x5f36
0x00005f09      0f1f80000000.  nop dword [rax]
0x00005f10      4839c6         cmp rsi, rax
0x00005f13      7605           jbe 0x5f1a
0x00005f15      483930         cmp qword [rax], rsi
0x00005f18      7316           jae 0x5f30
0x00005f1a      488b4008       mov rax, qword [rax + 8]                ; ../coreutils-8.31/lib/obstack.c:252
0x00005f1e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/obstack.c:250
0x00005f21      75ed           jne 0x5f10
0x00005f23      31c0           xor eax, eax
0x00005f25      c3             ret                                     ; ../coreutils-8.31/lib/obstack.c:256
0x00005f26      662e0f1f8400.  nop word cs:[rax + rax]
0x00005f30      b801000000     mov eax, 1
0x00005f35      c3             ret
0x00005f36      f3c3           ret
0x00005f38      0f1f84000000.  nop dword [rax + rax]
;-- _obstack_free:
0x00005f40      4154           push r12                                ; ../coreutils-8.31/lib/obstack.c:263
0x00005f42      55             push rbp
0x00005f43      4889f5         mov rbp, rsi
0x00005f46      53             push rbx
0x00005f47      488b7708       mov rsi, qword [rdi + 8]                ; ../coreutils-8.31/lib/obstack.c:267
0x00005f4b      4889fb         mov rbx, rdi
0x00005f4e      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/obstack.c:271
0x00005f51      742a           je 0x5f7d
0x00005f53      0f1f440000     nop dword [rax + rax]
0x00005f58      4839ee         cmp rsi, rbp
0x00005f5b      7308           jae 0x5f65
0x00005f5d      488b06         mov rax, qword [rsi]
0x00005f60      4839e8         cmp rax, rbp
0x00005f63      732b           jae 0x5f90
0x00005f65      4c8b6608       mov r12, qword [rsi + 8]                ; ../coreutils-8.31/lib/obstack.c:273
0x00005f69      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/obstack.c:274
0x00005f6c      e8affdffff     call sym.call_freefun
0x00005f71      804b5002       or byte [rbx + 0x50], 2                 ; ../coreutils-8.31/lib/obstack.c:278
0x00005f75      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/obstack.c:271
0x00005f78      4c89e6         mov rsi, r12
0x00005f7b      75db           jne 0x5f58
0x00005f7d      4885ed         test rbp, rbp                           ; ../coreutils-8.31/lib/obstack.c:286
0x00005f80      7523           jne 0x5fa5
0x00005f82      5b             pop rbx                                 ; ../coreutils-8.31/lib/obstack.c:289
0x00005f83      5d             pop rbp
0x00005f84      415c           pop r12
0x00005f86      c3             ret
0x00005f87      660f1f840000.  nop word [rax + rax]
0x00005f90      48896b18       mov qword [rbx + 0x18], rbp             ; ../coreutils-8.31/lib/obstack.c:282
0x00005f94      48896b10       mov qword [rbx + 0x10], rbp
0x00005f98      48894320       mov qword [rbx + 0x20], rax             ; ../coreutils-8.31/lib/obstack.c:283
0x00005f9c      48897308       mov qword [rbx + 8], rsi                ; ../coreutils-8.31/lib/obstack.c:284
0x00005fa0      5b             pop rbx                                 ; ../coreutils-8.31/lib/obstack.c:289
0x00005fa1      5d             pop rbp
0x00005fa2      415c           pop r12
0x00005fa4      c3             ret
0x00005fa5      e866bdffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/obstack.c:288
0x00005faa      660f1f440000   nop word [rax + rax]
;-- _obstack_memory_used:
0x00005fb0      488b5708       mov rdx, qword [rdi + 8]                ; ../coreutils-8.31/lib/obstack.c:293
0x00005fb4      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/obstack.c:295
0x00005fb6      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/obstack.c:297
0x00005fb9      741d           je 0x5fd8
0x00005fbb      0f1f440000     nop dword [rax + rax]
0x00005fc0      488b0a         mov rcx, qword [rdx]                    ; ../coreutils-8.31/lib/obstack.c:299
0x00005fc3      4829d1         sub rcx, rdx
0x00005fc6      488b5208       mov rdx, qword [rdx + 8]                ; ../coreutils-8.31/lib/obstack.c:297
0x00005fca      4801c8         add rax, rcx                            ; ../coreutils-8.31/lib/obstack.c:299
0x00005fcd      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/obstack.c:297
0x00005fd0      75ee           jne 0x5fc0
0x00005fd2      f3c3           ret
0x00005fd4      0f1f4000       nop dword [rax]
0x00005fd8      f3c3           ret                                     ; ../coreutils-8.31/lib/obstack.c:302
0x00005fda      660f1f440000   nop word [rax + rax]
;-- close_stream:
0x00005fe0      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00005fe2      55             push rbp
0x00005fe3      4889fd         mov rbp, rdi
0x00005fe6      53             push rbx
0x00005fe7      e864bdffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x00005fec      8b5d00         mov ebx, dword [rbp]
0x00005fef      4889ef         mov rdi, rbp
0x00005ff2      4989c4         mov r12, rax
0x00005ff5      e816fbffff     call sym.rpl_fclose
0x00005ffa      83e320         and ebx, 0x20                           ; "@"
0x00005ffd      85db           test ebx, ebx
0x00005fff      7517           jne 0x6018
0x00006001      85c0           test eax, eax
0x00006003      740a           je 0x600f                               ; stdio.h:-186
0x00006005      4d85e4         test r12, r12                           ; stdio.h:-178
0x00006008      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000600d      7439           je 0x6048
0x0000600f      5b             pop rbx
0x00006010      5d             pop rbp
0x00006011      415c           pop r12
0x00006013      c3             ret
0x00006014      0f1f4000       nop dword [rax]
0x00006018      85c0           test eax, eax
0x0000601a      751c           jne 0x6038
0x0000601c      e8ffbcffff     call sym.imp.__errno_location
0x00006021      c70000000000   mov dword [rax], 0
0x00006027      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000602c      5b             pop rbx
0x0000602d      5d             pop rbp
0x0000602e      415c           pop r12
0x00006030      c3             ret
0x00006031      0f1f80000000.  nop dword [rax]
0x00006038      5b             pop rbx
0x00006039      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000603e      5d             pop rbp                                 ; stdio.h:-186
0x0000603f      415c           pop r12
0x00006041      c3             ret
0x00006042      660f1f440000   nop word [rax + rax]
0x00006048      e8d3bcffff     call sym.imp.__errno_location
0x0000604d      833809         cmp dword [rax], 9
0x00006050      5b             pop rbx
0x00006051      5d             pop rbp
0x00006052      415c           pop r12                                 ; stdio.h:-178
0x00006054      0f95c0         setne al
0x00006057      0fb6c0         movzx eax, al
0x0000605a      f7d8           neg eax
0x0000605c      c3             ret
0x0000605d      0f1f00         nop dword [rax]
;-- hard_locale:
0x00006060      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00006064      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00006066      e8d5beffff     call sym.imp.setlocale
0x0000606b      4889c2         mov rdx, rax
0x0000606e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00006073      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00006076      741d           je 0x6095
0x00006078      488d3d6d0300.  lea rdi, [0x000063ec]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x0000607f      b902000000     mov ecx, 2
0x00006084      4889d6         mov rsi, rdx
0x00006087      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00006089      0f97c1         seta cl
0x0000608c      80d900         sbb cl, 0
0x0000608f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00006091      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00006093      750b           jne 0x60a0
0x00006095      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00006099      c3             ret
0x0000609a      660f1f440000   nop word [rax + rax]
0x000060a0      488d3db92100.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x8260 ; "POSIX"
0x000060a7      b906000000     mov ecx, 6
0x000060ac      4889d6         mov rsi, rdx
0x000060af      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000060b1      0f97c0         seta al
0x000060b4      1c00           sbb al, 0
0x000060b6      84c0           test al, al
0x000060b8      0f95c0         setne al
0x000060bb      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x000060bf      c3             ret
;-- locale_charset:
0x000060c0      4883ec08       sub rsp, 8
0x000060c4      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x000060c9      e832beffff     call sym.imp.nl_langinfo
0x000060ce      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x000060d1      741d           je 0x60f0
0x000060d3      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x000060d6      488d15892100.  lea rdx, str.ASCII                      ; 0x8266 ; "ASCII"
0x000060dd      480f44c2       cmove rax, rdx
0x000060e1      4883c408       add rsp, 8
0x000060e5      c3             ret
0x000060e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000060f0      488d056f2100.  lea rax, str.ASCII                      ; 0x8266 ; "ASCII"
0x000060f7      4883c408       add rsp, 8
0x000060fb      c3             ret
0x000060fc      0f1f4000       nop dword [rax]
;-- __libc_csu_init:
0x00006100      4157           push r15
0x00006102      4156           push r14
0x00006104      4989d7         mov r15, rdx
0x00006107      4155           push r13
0x00006109      4154           push r12
0x0000610b      4c8d253e3720.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x209850
0x00006112      55             push rbp
0x00006113      488d2d3e3720.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x209858 ; "`%"
0x0000611a      53             push rbx
0x0000611b      4189fd         mov r13d, edi
0x0000611e      4989f6         mov r14, rsi
0x00006121      4c29e5         sub rbp, r12
0x00006124      4883ec08       sub rsp, 8
0x00006128      48c1fd03       sar rbp, 3
0x0000612c      e89fbbffff     call sym._init
0x00006131      4885ed         test rbp, rbp
0x00006134      7420           je 0x6156
0x00006136      31db           xor ebx, ebx
0x00006138      0f1f84000000.  nop dword [rax + rax]
0x00006140      4c89fa         mov rdx, r15
0x00006143      4c89f6         mov rsi, r14
0x00006146      4489ef         mov edi, r13d
0x00006149      41ff14dc       call qword [r12 + rbx*8]
0x0000614d      4883c301       add rbx, 1
0x00006151      4839dd         cmp rbp, rbx
0x00006154      75ea           jne 0x6140
0x00006156      4883c408       add rsp, 8
0x0000615a      5b             pop rbx
0x0000615b      5d             pop rbp
0x0000615c      415c           pop r12
0x0000615e      415d           pop r13
0x00006160      415e           pop r14
0x00006162      415f           pop r15
0x00006164      c3             ret
0x00006165      90             nop
0x00006166      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00006170      f3c3           ret
0x00006172      662e0f1f8400.  nop word cs:[rax + rax]
0x0000617c      0f1f4000       nop dword [rax]
;-- atexit:
0x00006180      488b15813e20.  mov rdx, qword [obj.__dso_handle]       ; [0x20a008:8]=0x20a008 obj.__dso_handle
0x00006187      31f6           xor esi, esi
0x00006189      e902beffff     jmp sym.imp.__cxa_atexit
0x0000618e      0000           add byte [rax], al
