;-- section..plt:
;-- .plt:
0x00001850      ff355a752100   push qword [0x00218db0]                 ; [12] -r-x section size 1072 named .plt
0x00001856      ff255c752100   jmp qword [0x00218db8]                  ; [0x218db8:8]=0
0x0000185c      0f1f4000       nop dword [rax]
;-- imp.__ctype_toupper_loc:
0x00001860      ff255a752100   jmp qword [reloc.__ctype_toupper_loc]   ; [0x218dc0:8]=0x1866 ; "f\x18"
0x00001866      6800000000     push 0
0x0000186b      e9e0ffffff     jmp sym..plt
;-- imp.getenv:
0x00001870      ff2552752100   jmp qword [reloc.getenv]                ; [0x218dc8:8]=0x1876 ; "v\x18"
0x00001876      6801000000     push 1
0x0000187b      e9d0ffffff     jmp sym..plt
;-- imp.free:
0x00001880      ff254a752100   jmp qword [reloc.free]                  ; [0x218dd0:8]=0x1886
0x00001886      6802000000     push 2
0x0000188b      e9c0ffffff     jmp sym..plt
;-- imp.abort:
0x00001890      ff2542752100   jmp qword [reloc.abort]                 ; [0x218dd8:8]=0x1896
0x00001896      6803000000     push 3
0x0000189b      e9b0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x000018a0      ff253a752100   jmp qword [reloc.__errno_location]      ; [0x218de0:8]=0x18a6
0x000018a6      6804000000     push 4
0x000018ab      e9a0ffffff     jmp sym..plt
;-- imp.unlink:
0x000018b0      ff2532752100   jmp qword [reloc.unlink]                ; [0x218de8:8]=0x18b6
0x000018b6      6805000000     push 5
0x000018bb      e990ffffff     jmp sym..plt
;-- imp.strncmp:
0x000018c0      ff252a752100   jmp qword [reloc.strncmp]               ; [0x218df0:8]=0x18c6
0x000018c6      6806000000     push 6
0x000018cb      e980ffffff     jmp sym..plt
;-- imp._exit:
0x000018d0      ff2522752100   jmp qword [reloc._exit]                 ; [0x218df8:8]=0x18d6
0x000018d6      6807000000     push 7
0x000018db      e970ffffff     jmp sym..plt
;-- imp.__fpending:
0x000018e0      ff251a752100   jmp qword [reloc.__fpending]            ; [0x218e00:8]=0x18e6
0x000018e6      6808000000     push 8
0x000018eb      e960ffffff     jmp sym..plt
;-- imp.isatty:
0x000018f0      ff2512752100   jmp qword [reloc.isatty]                ; [0x218e08:8]=0x18f6
0x000018f6      6809000000     push 9
0x000018fb      e950ffffff     jmp sym..plt
;-- imp.fcntl:
0x00001900      ff250a752100   jmp qword [reloc.fcntl]                 ; [0x218e10:8]=0x1906
0x00001906      680a000000     push 0xa
0x0000190b      e940ffffff     jmp sym..plt
;-- imp.clearerr_unlocked:
0x00001910      ff2502752100   jmp qword [reloc.clearerr_unlocked]     ; [0x218e18:8]=0x1916
0x00001916      680b000000     push 0xb
0x0000191b      e930ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001920      ff25fa742100   jmp qword [reloc.textdomain]            ; [0x218e20:8]=0x1926 ; "&\x19"
0x00001926      680c000000     push 0xc
0x0000192b      e920ffffff     jmp sym..plt
;-- imp.iswctype:
0x00001930      ff25f2742100   jmp qword [reloc.iswctype]              ; [0x218e28:8]=0x1936 ; "6\x19"
0x00001936      680d000000     push 0xd
0x0000193b      e910ffffff     jmp sym..plt
;-- imp.fclose:
0x00001940      ff25ea742100   jmp qword [reloc.fclose]                ; [0x218e30:8]=0x1946 ; "F\x19"
0x00001946      680e000000     push 0xe
0x0000194b      e900ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001950      ff25e2742100   jmp qword [reloc.bindtextdomain]        ; [0x218e38:8]=0x1956 ; "V\x19"
0x00001956      680f000000     push 0xf
0x0000195b      e9f0feffff     jmp sym..plt
;-- imp.dcgettext:
0x00001960      ff25da742100   jmp qword [reloc.dcgettext]             ; [0x218e40:8]=0x1966 ; "f\x19"
0x00001966      6810000000     push 0x10
0x0000196b      e9e0feffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001970      ff25d2742100   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x218e48:8]=0x1976 ; "v\x19"
0x00001976      6811000000     push 0x11
0x0000197b      e9d0feffff     jmp sym..plt
;-- imp.strlen:
0x00001980      ff25ca742100   jmp qword [reloc.strlen]                ; [0x218e50:8]=0x1986
0x00001986      6812000000     push 0x12
0x0000198b      e9c0feffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001990      ff25c2742100   jmp qword [reloc.__stack_chk_fail]      ; [0x218e58:8]=0x1996
0x00001996      6813000000     push 0x13
0x0000199b      e9b0feffff     jmp sym..plt
;-- imp.getopt_long:
0x000019a0      ff25ba742100   jmp qword [reloc.getopt_long]           ; [0x218e60:8]=0x19a6
0x000019a6      6814000000     push 0x14
0x000019ab      e9a0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x000019b0      ff25b2742100   jmp qword [reloc.mbrtowc]               ; [0x218e68:8]=0x19b6
0x000019b6      6815000000     push 0x15
0x000019bb      e990feffff     jmp sym..plt
;-- imp.strrchr:
0x000019c0      ff25aa742100   jmp qword [reloc.strrchr]               ; [0x218e70:8]=0x19c6
0x000019c6      6816000000     push 0x16
0x000019cb      e980feffff     jmp sym..plt
;-- imp.ftruncate:
0x000019d0      ff25a2742100   jmp qword [reloc.ftruncate]             ; [0x218e78:8]=0x19d6
0x000019d6      6817000000     push 0x17
0x000019db      e970feffff     jmp sym..plt
;-- imp.mkostemp:
0x000019e0      ff259a742100   jmp qword [reloc.mkostemp]              ; [0x218e80:8]=0x19e6
0x000019e6      6818000000     push 0x18
0x000019eb      e960feffff     jmp sym..plt
;-- imp.lseek:
0x000019f0      ff2592742100   jmp qword [reloc.lseek]                 ; [0x218e88:8]=0x19f6
0x000019f6      6819000000     push 0x19
0x000019fb      e950feffff     jmp sym..plt
;-- imp.__assert_fail:
0x00001a00      ff258a742100   jmp qword [reloc.__assert_fail]         ; [0x218e90:8]=0x1a06
0x00001a06      681a000000     push 0x1a
0x00001a0b      e940feffff     jmp sym..plt
;-- imp.memset:
0x00001a10      ff2582742100   jmp qword [reloc.memset]                ; [0x218e98:8]=0x1a16
0x00001a16      681b000000     push 0x1b
0x00001a1b      e930feffff     jmp sym..plt
;-- imp.close:
0x00001a20      ff257a742100   jmp qword [reloc.close]                 ; [0x218ea0:8]=0x1a26 ; "&\x1a"
0x00001a26      681c000000     push 0x1c
0x00001a2b      e920feffff     jmp sym..plt
;-- imp.read:
0x00001a30      ff2572742100   jmp qword [reloc.read]                  ; [0x218ea8:8]=0x1a36 ; "6\x1a"
0x00001a36      681d000000     push 0x1d
0x00001a3b      e910feffff     jmp sym..plt
;-- imp.memcmp:
0x00001a40      ff256a742100   jmp qword [reloc.memcmp]                ; [0x218eb0:8]=0x1a46 ; "F\x1a"
0x00001a46      681e000000     push 0x1e
0x00001a4b      e900feffff     jmp sym..plt
;-- imp.wctype:
0x00001a50      ff2562742100   jmp qword [reloc.wctype]                ; [0x218eb8:8]=0x1a56 ; "V\x1a"
0x00001a56      681f000000     push 0x1f
0x00001a5b      e9f0fdffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001a60      ff255a742100   jmp qword [reloc.fputs_unlocked]        ; [0x218ec0:8]=0x1a66 ; "f\x1a"
0x00001a66      6820000000     push 0x20                               ; "@"
0x00001a6b      e9e0fdffff     jmp sym..plt
;-- imp.calloc:
0x00001a70      ff2552742100   jmp qword [reloc.calloc]                ; [0x218ec8:8]=0x1a76 ; "v\x1a"
0x00001a76      6821000000     push 0x21                               ; '!'
0x00001a7b      e9d0fdffff     jmp sym..plt
;-- imp.strcmp:
0x00001a80      ff254a742100   jmp qword [reloc.strcmp]                ; [0x218ed0:8]=0x1a86
0x00001a86      6822000000     push 0x22                               ; '"'
0x00001a8b      e9c0fdffff     jmp sym..plt
;-- imp.memcpy:
0x00001a90      ff2542742100   jmp qword [reloc.memcpy]                ; [0x218ed8:8]=0x1a96
0x00001a96      6823000000     push 0x23                               ; '#'
0x00001a9b      e9b0fdffff     jmp sym..plt
;-- imp.fileno:
0x00001aa0      ff253a742100   jmp qword [reloc.fileno]                ; [0x218ee0:8]=0x1aa6
0x00001aa6      6824000000     push 0x24                               ; '$'
0x00001aab      e9a0fdffff     jmp sym..plt
;-- imp.iswalnum:
0x00001ab0      ff2532742100   jmp qword [reloc.iswalnum]              ; [0x218ee8:8]=0x1ab6
0x00001ab6      6825000000     push 0x25                               ; '%'
0x00001abb      e990fdffff     jmp sym..plt
;-- imp.malloc:
0x00001ac0      ff252a742100   jmp qword [reloc.malloc]                ; [0x218ef0:8]=0x1ac6
0x00001ac6      6826000000     push 0x26                               ; '&'
0x00001acb      e980fdffff     jmp sym..plt
;-- imp.wcrtomb:
0x00001ad0      ff2522742100   jmp qword [reloc.wcrtomb]               ; [0x218ef8:8]=0x1ad6
0x00001ad6      6827000000     push 0x27                               ; '''
0x00001adb      e970fdffff     jmp sym..plt
;-- imp.fflush:
0x00001ae0      ff251a742100   jmp qword [reloc.fflush]                ; [0x218f00:8]=0x1ae6
0x00001ae6      6828000000     push 0x28                               ; '('
0x00001aeb      e960fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001af0      ff2512742100   jmp qword [reloc.nl_langinfo]           ; [0x218f08:8]=0x1af6
0x00001af6      6829000000     push 0x29                               ; ')'
0x00001afb      e950fdffff     jmp sym..plt
;-- imp.mkstemp:
0x00001b00      ff250a742100   jmp qword [reloc.mkstemp]               ; [0x218f10:8]=0x1b06
0x00001b06      682a000000     push 0x2a                               ; '*'
0x00001b0b      e940fdffff     jmp sym..plt
;-- imp.__freading:
0x00001b10      ff2502742100   jmp qword [reloc.__freading]            ; [0x218f18:8]=0x1b16
0x00001b16      682b000000     push 0x2b                               ; '+'
0x00001b1b      e930fdffff     jmp sym..plt
;-- imp.fwrite_unlocked:
0x00001b20      ff25fa732100   jmp qword [reloc.fwrite_unlocked]       ; [0x218f20:8]=0x1b26 ; "&\x1b"
0x00001b26      682c000000     push 0x2c                               ; ','
0x00001b2b      e920fdffff     jmp sym..plt
;-- imp.realloc:
0x00001b30      ff25f2732100   jmp qword [reloc.realloc]               ; [0x218f28:8]=0x1b36 ; "6\x1b"
0x00001b36      682d000000     push 0x2d                               ; '-'
0x00001b3b      e910fdffff     jmp sym..plt
;-- imp.fdopen:
0x00001b40      ff25ea732100   jmp qword [reloc.fdopen]                ; [0x218f30:8]=0x1b46 ; "F\x1b"
0x00001b46      682e000000     push 0x2e                               ; '.'
0x00001b4b      e900fdffff     jmp sym..plt
;-- imp.setlocale:
0x00001b50      ff25e2732100   jmp qword [reloc.setlocale]             ; [0x218f38:8]=0x1b56 ; "V\x1b"
0x00001b56      682f000000     push 0x2f                               ; '/'
0x00001b5b      e9f0fcffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001b60      ff25da732100   jmp qword [reloc.__printf_chk]          ; [0x218f40:8]=0x1b66 ; "f\x1b"
0x00001b66      6830000000     push 0x30                               ; '0'
0x00001b6b      e9e0fcffff     jmp sym..plt
;-- imp.btowc:
0x00001b70      ff25d2732100   jmp qword [reloc.btowc]                 ; [0x218f48:8]=0x1b76 ; "v\x1b"
0x00001b76      6831000000     push 0x31                               ; '1'
0x00001b7b      e9d0fcffff     jmp sym..plt
;-- imp.mempcpy:
0x00001b80      ff25ca732100   jmp qword [reloc.mempcpy]               ; [0x218f50:8]=0x1b86
0x00001b86      6832000000     push 0x32                               ; '2'
0x00001b8b      e9c0fcffff     jmp sym..plt
;-- imp.memmove:
0x00001b90      ff25c2732100   jmp qword [reloc.memmove]               ; [0x218f58:8]=0x1b96
0x00001b96      6833000000     push 0x33                               ; '3'
0x00001b9b      e9b0fcffff     jmp sym..plt
;-- imp.error:
0x00001ba0      ff25ba732100   jmp qword [reloc.error]                 ; [0x218f60:8]=0x1ba6
0x00001ba6      6834000000     push 0x34                               ; '4'
0x00001bab      e9a0fcffff     jmp sym..plt
;-- imp.open:
0x00001bb0      ff25b2732100   jmp qword [reloc.open]                  ; [0x218f68:8]=0x1bb6
0x00001bb6      6835000000     push 0x35                               ; '5'
0x00001bbb      e990fcffff     jmp sym..plt
;-- imp.fseeko:
0x00001bc0      ff25aa732100   jmp qword [reloc.fseeko]                ; [0x218f70:8]=0x1bc6
0x00001bc6      6836000000     push 0x36                               ; '6'
0x00001bcb      e980fcffff     jmp sym..plt
;-- imp.towlower:
0x00001bd0      ff25a2732100   jmp qword [reloc.towlower]              ; [0x218f78:8]=0x1bd6
0x00001bd6      6837000000     push 0x37                               ; '7'
0x00001bdb      e970fcffff     jmp sym..plt
;-- imp.towupper:
0x00001be0      ff259a732100   jmp qword [reloc.towupper]              ; [0x218f80:8]=0x1be6
0x00001be6      6838000000     push 0x38                               ; '8'
0x00001beb      e960fcffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001bf0      ff2592732100   jmp qword [reloc.__cxa_atexit]          ; [0x218f88:8]=0x1bf6
0x00001bf6      6839000000     push 0x39                               ; '9'
0x00001bfb      e950fcffff     jmp sym..plt
;-- imp.exit:
0x00001c00      ff258a732100   jmp qword [reloc.exit]                  ; [0x218f90:8]=0x1c06
0x00001c06      683a000000     push 0x3a                               ; ':'
0x00001c0b      e940fcffff     jmp sym..plt
;-- imp.fwrite:
0x00001c10      ff2582732100   jmp qword [reloc.fwrite]                ; [0x218f98:8]=0x1c16
0x00001c16      683b000000     push 0x3b                               ; ';'
0x00001c1b      e930fcffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001c20      ff257a732100   jmp qword [reloc.__fprintf_chk]         ; [0x218fa0:8]=0x1c26 ; "&\x1c"
0x00001c26      683c000000     push 0x3c                               ; '<'
0x00001c2b      e920fcffff     jmp sym..plt
;-- imp.fflush_unlocked:
0x00001c30      ff2572732100   jmp qword [reloc.fflush_unlocked]       ; [0x218fa8:8]=0x1c36 ; "6\x1c"
0x00001c36      683d000000     push 0x3d                               ; '='
0x00001c3b      e910fcffff     jmp sym..plt
;-- imp.mbsinit:
0x00001c40      ff256a732100   jmp qword [reloc.mbsinit]               ; [0x218fb0:8]=0x1c46 ; "F\x1c"
0x00001c46      683e000000     push 0x3e                               ; '>'
0x00001c4b      e900fcffff     jmp sym..plt
;-- imp.iswprint:
0x00001c50      ff2562732100   jmp qword [reloc.iswprint]              ; [0x218fb8:8]=0x1c56 ; "V\x1c"
0x00001c56      683f000000     push 0x3f                               ; '?'
0x00001c5b      e9f0fbffff     jmp sym..plt
;-- imp.__ctype_tolower_loc:
0x00001c60      ff255a732100   jmp qword [reloc.__ctype_tolower_loc]   ; [0x218fc0:8]=0x1c66 ; "f\x1c"
0x00001c66      6840000000     push 0x40                               ; segment.PHDR
0x00001c6b      e9e0fbffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00001c70      ff2552732100   jmp qword [reloc.__ctype_b_loc]         ; [0x218fc8:8]=0x1c76 ; "v\x1c"
0x00001c76      6841000000     push 0x41                               ; 'A'
0x00001c7b      e9d0fbffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001c80      .qword 0x90660021736a25ff                              ; [13] -r-x section size 8 named .plt.got
0x00001c88      0000           add byte [rax], al
0x00001c8a      0000           add byte [rax], al
0x00001c8c      0000           add byte [rax], al
0x00001c8e      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x00001c90      4157           push r15                                ; [14] -r-x section size 74910 named .text
0x00001c92      4156           push r14
0x00001c94      4155           push r13
0x00001c96      4154           push r12
0x00001c98      4c8d25016e21.  lea r12, obj.longopts                   ; 0x218aa0
0x00001c9f      55             push rbp
0x00001ca0      53             push rbx
0x00001ca1      89fd           mov ebp, edi
0x00001ca3      4889f3         mov rbx, rsi
0x00001ca6      4883ec28       sub rsp, 0x28
0x00001caa      488b3e         mov rdi, qword [rsi]
0x00001cad      e8ae140000     call sym.set_program_name
0x00001cb2      488d35482f01.  lea rsi, [0x00014c01]
0x00001cb9      bf06000000     mov edi, 6
0x00001cbe      e88dfeffff     call sym.imp.setlocale
0x00001cc3      488d35562501.  lea rsi, str.usr_local_share_locale     ; 0x14220 ; "/usr/local/share/locale"
0x00001cca      488d3d212501.  lea rdi, [0x000141f2]                   ; "coreutils"
0x00001cd1      e87afcffff     call sym.imp.bindtextdomain
0x00001cd6      488d3d152501.  lea rdi, [0x000141f2]                   ; "coreutils"
0x00001cdd      e83efcffff     call sym.imp.textdomain
0x00001ce2      488d3dc71200.  lea rdi, sym.close_stdout               ; 0x2fb0 ; "USH\x83\xec\bH\x8b=\xcb`!"
0x00001ce9      e832240100     call sym.atexit
0x00001cee      488d050b2f01.  lea rax, [0x00014c00]                   ; "\n"
0x00001cf5      48c705809521.  mov qword [obj.sentinel_length], 1      ; [0x21b280:8]=0
0x00001d00      c60581952100.  mov byte [obj.separator_ends_record], 1 ; [0x21b288:1]=0
0x00001d07      488905829521.  mov qword [obj.separator], rax          ; [0x21b290:8]=0
0x00001d0e      488d153f2501.  lea rdx, str.brs:                       ; 0x14254 ; "brs:"
0x00001d15      4531c0         xor r8d, r8d
0x00001d18      4c89e1         mov rcx, r12
0x00001d1b      4889de         mov rsi, rbx
0x00001d1e      89ef           mov edi, ebp
0x00001d20      e87bfcffff     call sym.imp.getopt_long
0x00001d25      83f8ff         cmp eax, 0xffffffff
0x00001d28      0f849a000000   je 0x1dc8
0x00001d2e      83f862         cmp eax, 0x62
0x00001d31      7475           je 0x1da8
0x00001d33      7e23           jle 0x1d58
0x00001d35      83f872         cmp eax, 0x72
0x00001d38      747e           je 0x1db8
0x00001d3a      83f873         cmp eax, 0x73
0x00001d3d      0f8588060000   jne 0x23cb
0x00001d43      488b054e7321.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x219098:8]=0
0x00001d4a      4889053f9521.  mov qword [obj.separator], rax          ; [0x21b290:8]=0
0x00001d51      ebbb           jmp 0x1d0e
0x00001d53      0f1f440000     nop dword [rax + rax]
0x00001d58      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x00001d5d      0f854e060000   jne 0x23b1
0x00001d63      4883ec08       sub rsp, 8
0x00001d67      488b3d1a7321.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x219088:8]=0
0x00001d6e      488b0d9b7221.  mov rcx, qword [obj.Version]            ; [0x219010:8]=0x14677 str.8.31 ; "wF\x01"
0x00001d75      6a00           push 0
0x00001d77      4c8d0dba2401.  lea r9, str.David_MacKenzie             ; 0x14238 ; "David MacKenzie"
0x00001d7e      4c8d05c32401.  lea r8, str.Jay_Lepreau                 ; 0x14248 ; "Jay Lepreau"
0x00001d85      488d15622401.  lea rdx, str.GNU_coreutils              ; 0x141ee ; "GNU coreutils"
0x00001d8c      488d35e12301.  lea rsi, [0x00014174]                   ; "tac"
0x00001d93      31c0           xor eax, eax
0x00001d95      e896360000     call sym.version_etc
0x00001d9a      31ff           xor edi, edi
0x00001d9c      e85ffeffff     call sym.imp.exit
0x00001da1      0f1f80000000.  nop dword [rax]
0x00001da8      c605d9942100.  mov byte [obj.separator_ends_record], 0 ; [0x21b288:1]=0
0x00001daf      e95affffff     jmp 0x1d0e
0x00001db4      0f1f4000       nop dword [rax]
0x00001db8      48c705bd9421.  mov qword [obj.sentinel_length], 0      ; [0x21b280:8]=0
0x00001dc3      e946ffffff     jmp 0x1d0e
0x00001dc8      48833db09421.  cmp qword [obj.sentinel_length], 0      ; [0x21b280:8]=0
0x00001dd0      4c8b05b99421.  mov r8, qword [obj.separator]           ; [0x21b290:8]=0
0x00001dd7      410fb610       movzx edx, byte [r8]
0x00001ddb      0f8524010000   jne 0x1f05
0x00001de1      84d2           test dl, dl
0x00001de3      0f84ec050000   je 0x23d5
0x00001de9      488d05309321.  lea rax, obj.compiled_separator_fastmap ; 0x21b120
0x00001df0      4c89c7         mov rdi, r8
0x00001df3      48c705229421.  mov qword [obj.compiled_separator], 0   ; [0x21b220:8]=0
0x00001dfe      48c7051f9421.  mov qword [0x0021b228], 0               ; [0x21b228:8]=0
0x00001e09      48c705349421.  mov qword [0x0021b248], 0               ; [0x21b248:8]=0
0x00001e14      4883c9ff       or rcx, 0xffffffffffffffff
0x00001e18      488905219421.  mov qword [0x0021b240], rax             ; [0x21b240:8]=0
0x00001e1f      31c0           xor eax, eax
0x00001e21      488d15f89321.  lea rdx, obj.compiled_separator         ; 0x21b220
0x00001e28      f2ae           repne scasb al, byte [rdi]
0x00001e2a      4c89c7         mov rdi, r8
0x00001e2d      4889c8         mov rax, rcx
0x00001e30      48f7d0         not rax
0x00001e33      488d70ff       lea rsi, [rax - 1]
0x00001e37      e894120100     call sym.rpl_re_compile_pattern
0x00001e3c      4885c0         test rax, rax
0x00001e3f      0f85b4050000   jne 0x23f9
0x00001e45      488b35349421.  mov rsi, qword [obj.sentinel_length]    ; [0x21b280:8]=0
0x00001e4c      48c705119421.  mov qword [obj.read_size], 0x2000       ; [0x21b268:8]=0
0x00001e57      ba32000000     mov edx, 0x32                           ; '2'
0x00001e5c      b800200000     mov eax, 0x2000
0x00001e61      4881feff0f00.  cmp rsi, 0xfff
0x00001e68      770f           ja 0x1e79
0x00001e6a      eb22           jmp 0x1e8e
0x00001e6c      0f1f4000       nop dword [rax]
0x00001e70      83ea01         sub edx, 1
0x00001e73      0f8446050000   je 0x23bf
0x00001e79      4801c0         add rax, rax
0x00001e7c      4889c1         mov rcx, rax
0x00001e7f      48d1e9         shr rcx, 1
0x00001e82      4839f1         cmp rcx, rsi
0x00001e85      76e9           jbe 0x1e70
0x00001e87      488905da9321.  mov qword [obj.read_size], rax          ; [0x21b268:8]=0
0x00001e8e      488d543001     lea rdx, [rax + rsi + 1]
0x00001e93      488d3c12       lea rdi, [rdx + rdx]
0x00001e97      4839c2         cmp rdx, rax
0x00001e9a      0f96c1         setbe cl
0x00001e9d      4839d7         cmp rdi, rdx
0x00001ea0      48893db99321.  mov qword [obj.G_buffer_size], rdi      ; [0x21b260:8]=0
0x00001ea7      0f96c0         setbe al
0x00001eaa      08c1           or cl, al
0x00001eac      0f8514050000   jne 0x23c6
0x00001eb2      e8d9360000     call sym.xmalloc
0x00001eb7      4c8b25c29321.  mov r12, qword [obj.sentinel_length]    ; [0x21b280:8]=0
0x00001ebe      4889c1         mov rcx, rax
0x00001ec1      488905a89321.  mov qword [obj.G_buffer], rax           ; [0x21b270:8]=0
0x00001ec8      4d85e4         test r12, r12
0x00001ecb      0f850a040000   jne 0x22db
0x00001ed1      4883c101       add rcx, 1
0x00001ed5      48890d949321.  mov qword [obj.G_buffer], rcx           ; [0x21b270:8]=0
0x00001edc      486305ad7121.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x219090:4]=0
0x00001ee3      39e8           cmp eax, ebp
0x00001ee5      7d4f           jge 0x1f36
0x00001ee7      4c8d3cc3       lea r15, [rbx + rax*8]
0x00001eeb      4d8b37         mov r14, qword [r15]
0x00001eee      4d85f6         test r14, r14
0x00001ef1      0f84da030000   je 0x22d1
0x00001ef7      488d05cc2701.  lea rax, [0x000146ca]                   ; "-"
0x00001efe      4889442410     mov qword [rsp + 0x10], rax
0x00001f03      eb47           jmp 0x1f4c
0x00001f05      84d2           test dl, dl
0x00001f07      b801000000     mov eax, 1
0x00001f0c      7415           je 0x1f23
0x00001f0e      31c0           xor eax, eax
0x00001f10      4883c9ff       or rcx, 0xffffffffffffffff
0x00001f14      4c89c7         mov rdi, r8
0x00001f17      f2ae           repne scasb al, byte [rdi]
0x00001f19      4889c8         mov rax, rcx
0x00001f1c      48f7d0         not rax
0x00001f1f      4883e801       sub rax, 1
0x00001f23      488905569321.  mov qword [obj.sentinel_length], rax    ; [0x21b280:8]=0
0x00001f2a      488905479321.  mov qword [obj.match_length], rax       ; [0x21b278:8]=0
0x00001f31      e90fffffff     jmp 0x1e45
0x00001f36      488d058d2701.  lea rax, [0x000146ca]                   ; "-"
0x00001f3d      4c8d3d3c6b21.  lea r15, obj.default_file_list.7113     ; 0x218a80
0x00001f44      4889442410     mov qword [rsp + 0x10], rax
0x00001f49      4989c6         mov r14, rax
0x00001f4c      498d4708       lea rax, [r15 + 8]
0x00001f50      c644240f01     mov byte [rsp + 0xf], 1
0x00001f55      48890424       mov qword [rsp], rax
0x00001f59      0f1f80000000.  nop dword [rax]
0x00001f60      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00001f65      b902000000     mov ecx, 2
0x00001f6a      4c89f6         mov rsi, r14
0x00001f6d      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001f6f      410f97c4       seta r12b
0x00001f73      4180dc00       sbb r12b, 0
0x00001f77      450fbee4       movsx r12d, r12b
0x00001f7b      4585e4         test r12d, r12d
0x00001f7e      0f85c2010000   jne 0x2146
0x00001f84      488d35e82201.  lea rsi, str.standard_input             ; 0x14273 ; "standard input"
0x00001f8b      ba05000000     mov edx, 5
0x00001f90      31ff           xor edi, edi
0x00001f92      c605f0922100.  mov byte [obj.have_read_stdin], 1       ; [0x21b289:1]=0
0x00001f99      31ed           xor ebp, ebp
0x00001f9b      e8c0f9ffff     call sym.imp.dcgettext
0x00001fa0      4989c6         mov r14, rax
0x00001fa3      31f6           xor esi, esi
0x00001fa5      ba02000000     mov edx, 2
0x00001faa      89ef           mov edi, ebp
0x00001fac      e83ffaffff     call sym.imp.lseek
0x00001fb1      4885c0         test rax, rax
0x00001fb4      4889c3         mov rbx, rax
0x00001fb7      780f           js 0x1fc8
0x00001fb9      89ef           mov edi, ebp
0x00001fbb      e830f9ffff     call sym.imp.isatty
0x00001fc0      85c0           test eax, eax
0x00001fc2      0f84c5020000   je 0x228d
0x00001fc8      48833d209121.  cmp qword [obj.tempfile.7065], 0        ; [0x21b0f0:8]=0
0x00001fd0      0f8440020000   je 0x2216
0x00001fd6      488b1d0b9121.  mov rbx, qword [obj.tmp_fp.7066]        ; [0x21b0e8:8]=0
0x00001fdd      4889df         mov rdi, rbx
0x00001fe0      e82bf9ffff     call sym.imp.clearerr_unlocked
0x00001fe5      31d2           xor edx, edx
0x00001fe7      31f6           xor esi, esi
0x00001fe9      4889df         mov rdi, rbx
0x00001fec      e82f380000     call sym.rpl_fseeko
0x00001ff1      85c0           test eax, eax
0x00001ff3      0f8806010000   js 0x20ff
0x00001ff9      488b3de89021.  mov rdi, qword [obj.tmp_fp.7066]        ; [0x21b0e8:8]=0
0x00002000      e89bfaffff     call sym.imp.fileno
0x00002005      31f6           xor esi, esi
0x00002007      89c7           mov edi, eax
0x00002009      e8c2f9ffff     call sym.imp.ftruncate
0x0000200e      85c0           test eax, eax
0x00002010      0f88e9000000   js 0x20ff
0x00002016      488b05d39021.  mov rax, qword [obj.tempfile.7065]      ; [0x21b0f0:8]=0
0x0000201d      4c8b2dc49021.  mov r13, qword [obj.tmp_fp.7066]        ; [0x21b0e8:8]=0
0x00002024      31db           xor ebx, ebx
0x00002026      4889442418     mov qword [rsp + 0x18], rax
0x0000202b      eb30           jmp 0x205d
0x0000202d      0f1f00         nop dword [rax]
0x00002030      4883f8ff       cmp rax, 0xffffffffffffffff
0x00002034      0f8494010000   je 0x21ce
0x0000203a      488b3d2f9221.  mov rdi, qword [obj.G_buffer]           ; [0x21b270:8]=0
0x00002041      4c89e9         mov rcx, r13
0x00002044      4889c2         mov rdx, rax
0x00002047      be01000000     mov esi, 1
0x0000204c      e8cffaffff     call sym.imp.fwrite_unlocked
0x00002051      4939c7         cmp r15, rax
0x00002054      0f8597010000   jne 0x21f1
0x0000205a      4c01fb         add rbx, r15
0x0000205d      488b15049221.  mov rdx, qword [obj.read_size]          ; [0x21b268:8]=0
0x00002064      488b35059221.  mov rsi, qword [obj.G_buffer]           ; [0x21b270:8]=0
0x0000206b      89ef           mov edi, ebp
0x0000206d      e81e2e0000     call sym.safe_read
0x00002072      4885c0         test rax, rax
0x00002075      4989c7         mov r15, rax
0x00002078      75b6           jne 0x2030
0x0000207a      4c89ef         mov rdi, r13
0x0000207d      e8aefbffff     call sym.imp.fflush_unlocked
0x00002082      85c0           test eax, eax
0x00002084      0f8567010000   jne 0x21f1
0x0000208a      4885db         test rbx, rbx
0x0000208d      0f88ac000000   js 0x213f
0x00002093      4c89ef         mov rdi, r13
0x00002096      e805faffff     call sym.imp.fileno
0x0000209b      488b742418     mov rsi, qword [rsp + 0x18]
0x000020a0      4889da         mov rdx, rbx
0x000020a3      89c7           mov edi, eax
0x000020a5      e886050000     call sym.tac_seekable
0x000020aa      89c3           mov ebx, eax
0x000020ac      4585e4         test r12d, r12d
0x000020af      0f85ea000000   jne 0x219f
0x000020b5      4883042408     add qword [rsp], 8
0x000020ba      205c240f       and byte [rsp + 0xf], bl
0x000020be      488b0424       mov rax, qword [rsp]
0x000020c2      4c8b70f8       mov r14, qword [rax - 8]
0x000020c6      4d85f6         test r14, r14
0x000020c9      0f8591feffff   jne 0x1f60
0x000020cf      31f6           xor esi, esi
0x000020d1      31ff           xor edi, edi
0x000020d3      e858040000     call sym.output
0x000020d8      803daa912100.  cmp byte [obj.have_read_stdin], 0       ; [0x21b289:1]=0
0x000020df      0f85bc010000   jne 0x22a1
0x000020e5      0fb644240f     movzx eax, byte [rsp + 0xf]
0x000020ea      4883c428       add rsp, 0x28
0x000020ee      5b             pop rbx
0x000020ef      5d             pop rbp
0x000020f0      415c           pop r12
0x000020f2      83f001         xor eax, 1
0x000020f5      415d           pop r13
0x000020f7      0fb6c0         movzx eax, al
0x000020fa      415e           pop r14
0x000020fc      415f           pop r15
0x000020fe      c3             ret
0x000020ff      488b35ea8f21.  mov rsi, qword [obj.tempfile.7065]      ; [0x21b0f0:8]=0
0x00002106      bf04000000     mov edi, 4
0x0000210b      e8902a0000     call sym.quotearg_style
0x00002110      488d35412501.  lea rsi, str.failed_to_rewind_stream_for__s ; 0x14658 ; "failed to rewind stream for %s"
0x00002117      4889c3         mov rbx, rax
0x0000211a      ba05000000     mov edx, 5
0x0000211f      31ff           xor edi, edi
0x00002121      e83af8ffff     call sym.imp.dcgettext
0x00002126      4989c5         mov r13, rax
0x00002129      e872f7ffff     call sym.imp.__errno_location
0x0000212e      8b30           mov esi, dword [rax]
0x00002130      4889d9         mov rcx, rbx
0x00002133      4c89ea         mov rdx, r13
0x00002136      31ff           xor edi, edi
0x00002138      31c0           xor eax, eax
0x0000213a      e861faffff     call sym.imp.error
0x0000213f      31db           xor ebx, ebx
0x00002141      e966ffffff     jmp 0x20ac
0x00002146      31f6           xor esi, esi
0x00002148      31c0           xor eax, eax
0x0000214a      4c89f7         mov rdi, r14
0x0000214d      e85efaffff     call sym.imp.open
0x00002152      85c0           test eax, eax
0x00002154      89c5           mov ebp, eax
0x00002156      0f8947feffff   jns 0x1fa3
0x0000215c      4c89f6         mov rsi, r14
0x0000215f      bf04000000     mov edi, 4
0x00002164      e8372a0000     call sym.quotearg_style
0x00002169      488d35122101.  lea rsi, str.failed_to_open__s_for_reading ; 0x14282 ; "failed to open %s for reading"
0x00002170      4889c5         mov rbp, rax
0x00002173      ba05000000     mov edx, 5
0x00002178      31ff           xor edi, edi
0x0000217a      e8e1f7ffff     call sym.imp.dcgettext
0x0000217f      4889c3         mov rbx, rax
0x00002182      e819f7ffff     call sym.imp.__errno_location
0x00002187      8b30           mov esi, dword [rax]
0x00002189      4889da         mov rdx, rbx
0x0000218c      4889e9         mov rcx, rbp
0x0000218f      31ff           xor edi, edi
0x00002191      31c0           xor eax, eax
0x00002193      31db           xor ebx, ebx
0x00002195      e806faffff     call sym.imp.error
0x0000219a      e916ffffff     jmp 0x20b5
0x0000219f      89ef           mov edi, ebp
0x000021a1      e87af8ffff     call sym.imp.close
0x000021a6      85c0           test eax, eax
0x000021a8      0f8407ffffff   je 0x20b5
0x000021ae      4c89f2         mov rdx, r14
0x000021b1      be03000000     mov esi, 3
0x000021b6      31ff           xor edi, edi
0x000021b8      e8e32a0000     call sym.quotearg_n_style_colon
0x000021bd      ba05000000     mov edx, 5
0x000021c2      4889c5         mov rbp, rax
0x000021c5      488d35881f01.  lea rsi, str.s:_read_error              ; 0x14154 ; "%s: read error"
0x000021cc      ebaa           jmp 0x2178
0x000021ce      4c89f2         mov rdx, r14
0x000021d1      be03000000     mov esi, 3
0x000021d6      31ff           xor edi, edi
0x000021d8      e8c32a0000     call sym.quotearg_n_style_colon
0x000021dd      ba05000000     mov edx, 5
0x000021e2      4889c3         mov rbx, rax
0x000021e5      488d35681f01.  lea rsi, str.s:_read_error              ; 0x14154 ; "%s: read error"
0x000021ec      e92effffff     jmp 0x211f
0x000021f1      488b542418     mov rdx, qword [rsp + 0x18]
0x000021f6      be03000000     mov esi, 3
0x000021fb      31ff           xor edi, edi
0x000021fd      e89e2a0000     call sym.quotearg_n_style_colon
0x00002202      ba05000000     mov edx, 5
0x00002207      4889c3         mov rbx, rax
0x0000220a      488d35b72001.  lea rsi, str.s:_write_error             ; 0x142c8 ; "%s: write error"
0x00002211      e909ffffff     jmp 0x211f
0x00002216      488d3d832001.  lea rdi, str.TMPDIR                     ; 0x142a0 ; "TMPDIR"
0x0000221d      e84ef6ffff     call sym.imp.getenv
0x00002222      4885c0         test rax, rax
0x00002225      4889c3         mov rbx, rax
0x00002228      488d05ec1f01.  lea rax, str.tmp                        ; 0x1421b ; "/tmp"
0x0000222f      488d35a22001.  lea rsi, str.tacXXXXXX                  ; 0x142d8 ; "tacXXXXXX"
0x00002236      480f44d8       cmove rbx, rax
0x0000223a      31d2           xor edx, edx
0x0000223c      4889df         mov rdi, rbx
0x0000223f      e81c0e0000     call sym.mfile_name_concat
0x00002244      4889c7         mov rdi, rax
0x00002247      488905a28e21.  mov qword [obj.tempfile.7065], rax      ; [0x21b0f0:8]=0
0x0000224e      e89d2c0000     call sym.mkstemp_safer
0x00002253      85c0           test eax, eax
0x00002255      4189c5         mov r13d, eax
0x00002258      0f88a3000000   js 0x2301
0x0000225e      488d35422001.  lea rsi, [0x000142a7]                   ; "w+"
0x00002265      89c7           mov edi, eax
0x00002267      e8d4f8ffff     call sym.imp.fdopen
0x0000226c      4885c0         test rax, rax
0x0000226f      488905728e21.  mov qword [obj.tmp_fp.7066], rax        ; [0x21b0e8:8]=0
0x00002276      488b3d738e21.  mov rdi, qword [obj.tempfile.7065]      ; [0x21b0f0:8]=0
0x0000227d      0f84d8000000   je 0x235b
0x00002283      e828f6ffff     call sym.imp.unlink
0x00002288      e989fdffff     jmp 0x2016
0x0000228d      4889da         mov rdx, rbx
0x00002290      4c89f6         mov rsi, r14
0x00002293      89ef           mov edi, ebp
0x00002295      e896030000     call sym.tac_seekable
0x0000229a      89c3           mov ebx, eax
0x0000229c      e90bfeffff     jmp 0x20ac
0x000022a1      31ff           xor edi, edi
0x000022a3      e878f7ffff     call sym.imp.close
0x000022a8      85c0           test eax, eax
0x000022aa      0f8935feffff   jns 0x20e5
0x000022b0      e8ebf5ffff     call sym.imp.__errno_location
0x000022b5      8b30           mov esi, dword [rax]
0x000022b7      488d150c2401.  lea rdx, [0x000146ca]                   ; "-"
0x000022be      31ff           xor edi, edi
0x000022c0      31c0           xor eax, eax
0x000022c2      e8d9f8ffff     call sym.imp.error
0x000022c7      c644240f00     mov byte [rsp + 0xf], 0
0x000022cc      e914feffff     jmp 0x20e5
0x000022d1      c644240f01     mov byte [rsp + 0xf], 1
0x000022d6      e9f4fdffff     jmp 0x20cf
0x000022db      488b35ae8f21.  mov rsi, qword [obj.separator]          ; [0x21b290:8]=0
0x000022e2      498d542401     lea rdx, [r12 + 1]
0x000022e7      4889c7         mov rdi, rax
0x000022ea      e8a1f7ffff     call sym.imp.memcpy
0x000022ef      4889c1         mov rcx, rax
0x000022f2      4c01e1         add rcx, r12
0x000022f5      48890d748f21.  mov qword [obj.G_buffer], rcx           ; [0x21b270:8]=0
0x000022fc      e9dbfbffff     jmp 0x1edc
0x00002301      4889de         mov rsi, rbx
0x00002304      bf04000000     mov edi, 4
0x00002309      e892280000     call sym.quotearg_style
0x0000230e      488d351b2301.  lea rsi, str.failed_to_create_temporary_file_in__s ; 0x14630 ; "failed to create temporary file in %s"
0x00002315      ba05000000     mov edx, 5
0x0000231a      31ff           xor edi, edi
0x0000231c      4889c3         mov rbx, rax
0x0000231f      e83cf6ffff     call sym.imp.dcgettext
0x00002324      4989c5         mov r13, rax
0x00002327      e874f5ffff     call sym.imp.__errno_location
0x0000232c      8b30           mov esi, dword [rax]
0x0000232e      4889d9         mov rcx, rbx
0x00002331      4c89ea         mov rdx, r13
0x00002334      31ff           xor edi, edi
0x00002336      31c0           xor eax, eax
0x00002338      e863f8ffff     call sym.imp.error
0x0000233d      488b3dac8d21.  mov rdi, qword [obj.tempfile.7065]      ; [0x21b0f0:8]=0
0x00002344      31db           xor ebx, ebx
0x00002346      e835f5ffff     call sym.imp.free
0x0000234b      48c7059a8d21.  mov qword [obj.tempfile.7065], 0        ; [0x21b0f0:8]=0
0x00002356      e951fdffff     jmp 0x20ac
0x0000235b      4889fe         mov rsi, rdi
0x0000235e      bf04000000     mov edi, 4
0x00002363      e838280000     call sym.quotearg_style
0x00002368      488d353b1f01.  lea rsi, str.failed_to_open__s_for_writing ; 0x142aa ; "failed to open %s for writing"
0x0000236f      31ff           xor edi, edi
0x00002371      ba05000000     mov edx, 5
0x00002376      4889c3         mov rbx, rax
0x00002379      e8e2f5ffff     call sym.imp.dcgettext
0x0000237e      4889442418     mov qword [rsp + 0x18], rax
0x00002383      e818f5ffff     call sym.imp.__errno_location
0x00002388      488b542418     mov rdx, qword [rsp + 0x18]
0x0000238d      8b30           mov esi, dword [rax]
0x0000238f      4889d9         mov rcx, rbx
0x00002392      31ff           xor edi, edi
0x00002394      31c0           xor eax, eax
0x00002396      e805f8ffff     call sym.imp.error
0x0000239b      4489ef         mov edi, r13d
0x0000239e      e87df6ffff     call sym.imp.close
0x000023a3      488b3d468d21.  mov rdi, qword [obj.tempfile.7065]      ; [0x21b0f0:8]=0
0x000023aa      e801f5ffff     call sym.imp.unlink
0x000023af      eb8c           jmp 0x233d
0x000023b1      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x000023b6      7513           jne 0x23cb
0x000023b8      31ff           xor edi, edi
0x000023ba      e811080000     call sym.usage
0x000023bf      488905a28e21.  mov qword [obj.read_size], rax          ; [0x21b268:8]=0
0x000023c6      e815340000     call sym.xalloc_die
0x000023cb      bf01000000     mov edi, 1
0x000023d0      e8fb070000     call sym.usage
0x000023d5      488d357d1e01.  lea rsi, str.separator_cannot_be_empty  ; 0x14259 ; "separator cannot be empty"
0x000023dc      ba05000000     mov edx, 5
0x000023e1      31ff           xor edi, edi
0x000023e3      e878f5ffff     call sym.imp.dcgettext
0x000023e8      31f6           xor esi, esi
0x000023ea      4889c2         mov rdx, rax
0x000023ed      bf01000000     mov edi, 1
0x000023f2      31c0           xor eax, eax
0x000023f4      e8a7f7ffff     call sym.imp.error
0x000023f9      488d15802201.  lea rdx, [0x00014680]                   ; "%s"
0x00002400      4889c1         mov rcx, rax
0x00002403      31f6           xor esi, esi
0x00002405      bf01000000     mov edi, 1
0x0000240a      31c0           xor eax, eax
0x0000240c      e88ff7ffff     call sym.imp.error
0x00002411      662e0f1f8400.  nop word cs:[rax + rax]
0x0000241b      0f1f440000     nop dword [rax + rax]
;-- entry0:
;-- _start:
;-- rip:
0x00002420      31ed           xor ebp, ebp
0x00002422      4989d1         mov r9, rdx
0x00002425      5e             pop rsi
0x00002426      4889e2         mov rdx, rsp
0x00002429      4883e4f0       and rsp, 0xfffffffffffffff0
0x0000242d      50             push rax
0x0000242e      54             push rsp
0x0000242f      4c8d05da1c01.  lea r8, sym.__libc_csu_fini             ; 0x14110
0x00002436      488d0d631c01.  lea rcx, sym.__libc_csu_init            ; 0x140a0 ; "AWAVI\x89\xd7AUATL\x8d%\xbeI "
0x0000243d      488d3d4cf8ff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1c90 ; "AWAVAUATL\x8d%\x01n!"
0x00002444      ff158e6b2100   call qword [reloc.__libc_start_main]    ; [0x218fd8:8]=0
0x0000244a      f4             hlt
0x0000244b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00002450      488d3d296c21.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x219080
0x00002457      55             push rbp
0x00002458      488d05216c21.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x219080
0x0000245f      4839f8         cmp rax, rdi
0x00002462      4889e5         mov rbp, rsp
0x00002465      7419           je 0x2480
0x00002467      488b05626b21.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x218fd0:8]=0
0x0000246e      4885c0         test rax, rax
0x00002471      740d           je 0x2480
0x00002473      5d             pop rbp
0x00002474      ffe0           jmp rax
0x00002476      662e0f1f8400.  nop word cs:[rax + rax]
0x00002480      5d             pop rbp
0x00002481      c3             ret
0x00002482      0f1f4000       nop dword [rax]
0x00002486      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00002490      488d3de96b21.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x219080
0x00002497      488d35e26b21.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x219080
0x0000249e      55             push rbp
0x0000249f      4829fe         sub rsi, rdi
0x000024a2      4889e5         mov rbp, rsp
0x000024a5      48c1fe03       sar rsi, 3
0x000024a9      4889f0         mov rax, rsi
0x000024ac      48c1e83f       shr rax, 0x3f
0x000024b0      4801c6         add rsi, rax
0x000024b3      48d1fe         sar rsi, 1
0x000024b6      7418           je 0x24d0
0x000024b8      488b05296b21.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x218fe8:8]=0
0x000024bf      4885c0         test rax, rax
0x000024c2      740c           je 0x24d0
0x000024c4      5d             pop rbp
0x000024c5      ffe0           jmp rax
0x000024c7      660f1f840000.  nop word [rax + rax]
0x000024d0      5d             pop rbp
0x000024d1      c3             ret
0x000024d2      0f1f4000       nop dword [rax]
0x000024d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x000024e0      803de16b2100.  cmp byte [obj.completed.7697], 0        ; [0x2190c8:1]=0
0x000024e7      752f           jne 0x2518
0x000024e9      48833dff6a21.  cmp qword [reloc.__cxa_finalize], 0     ; [0x218ff0:8]=0
0x000024f1      55             push rbp
0x000024f2      4889e5         mov rbp, rsp
0x000024f5      740c           je 0x2503
0x000024f7      488b3d0a6b21.  mov rdi, qword [obj.__dso_handle]       ; [0x219008:8]=0x219008 obj.__dso_handle
0x000024fe      e87df7ffff     call sym..plt.got
0x00002503      e848ffffff     call sym.deregister_tm_clones
0x00002508      c605b96b2100.  mov byte [obj.completed.7697], 1        ; [0x2190c8:1]=0
0x0000250f      5d             pop rbp
0x00002510      c3             ret
0x00002511      0f1f80000000.  nop dword [rax]
0x00002518      f3c3           ret
0x0000251a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00002520      55             push rbp
0x00002521      4889e5         mov rbp, rsp
0x00002524      5d             pop rbp
0x00002525      e966ffffff     jmp sym.register_tm_clones
0x0000252a      660f1f440000   nop word [rax + rax]
;-- output:
0x00002530      4157           push r15                                ; /src:160
0x00002532      4156           push r14
0x00002534      4155           push r13
0x00002536      4154           push r12
0x00002538      55             push rbp
0x00002539      53             push rbx
0x0000253a      4883ec08       sub rsp, 8
0x0000253e      4885ff         test rdi, rdi                           ; /src:166
0x00002541      488b1d988b21.  mov rbx, qword [obj.bytes_in_buffer.7000] ; /src:164 ; [0x21b0e0:8]=0
0x00002548      0f84a2000000   je 0x25f0                               ; /src:166
0x0000254e      41bf00200000   mov r15d, 0x2000                        ; /src:164
0x00002554      4829fe         sub rsi, rdi                            ; /src:163
0x00002557      4c8d2d826b21.  lea r13, obj.buffer.6999                ; 0x2190e0
0x0000255e      4929df         sub r15, rbx                            ; /src:164
0x00002561      4989fc         mov r12, rdi
0x00002564      4889f5         mov rbp, rsi                            ; /src:163
0x00002567      4c39fe         cmp rsi, r15                            ; /src:174
0x0000256a      4d89ee         mov r14, r13                            ; /src:179
0x0000256d      0f82b5000000   jb 0x2628                               ; /src:174
0x00002573      0f1f440000     nop dword [rax + rax]
0x00002578      498d7c1d00     lea rdi, [r13 + rbx]                    ; /src:176
0x0000257d      4c89fa         mov rdx, r15                            ; /coreutils-8.31/lib:34
0x00002580      4c89e6         mov rsi, r12
0x00002583      4c29fd         sub rbp, r15                            ; /src:177
0x00002586      4d01fc         add r12, r15                            ; /src:178
0x00002589      31db           xor ebx, ebx
0x0000258b      e800f5ffff     call sym.imp.memcpy                     ; /coreutils-8.31/lib:34
0x00002590      488b0df16a21.  mov rcx, qword [obj.stdout]             ; /src:179 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x219088:8]=0
0x00002597      ba00200000     mov edx, 0x2000
0x0000259c      be01000000     mov esi, 1
0x000025a1      4c89f7         mov rdi, r14
0x000025a4      41bf00200000   mov r15d, 0x2000                        ; /src:181
0x000025aa      e871f5ffff     call sym.imp.fwrite_unlocked            ; /src:179
0x000025af      4881fdff1f00.  cmp rbp, 0x1fff                         ; /src:174
0x000025b6      48c7051f8b21.  mov qword [obj.bytes_in_buffer.7000], 0 ; /src:180 ; [0x21b0e0:8]=0
0x000025c1      77b5           ja 0x2578                               ; /src:174
0x000025c3      488d3d166b21.  lea rdi, obj.buffer.6999                ; 0x2190e0
0x000025ca      4801eb         add rbx, rbp                            ; /src:185
0x000025cd      4889ea         mov rdx, rbp                            ; /coreutils-8.31/lib:34
0x000025d0      4c89e6         mov rsi, r12
0x000025d3      e8b8f4ffff     call sym.imp.memcpy
0x000025d8      48891d018b21.  mov qword [obj.bytes_in_buffer.7000], rbx ; /src:185 ; [0x21b0e0:8]=0
0x000025df      4883c408       add rsp, 8                              ; /src:186
0x000025e3      5b             pop rbx
0x000025e4      5d             pop rbp
0x000025e5      415c           pop r12
0x000025e7      415d           pop r13
0x000025e9      415e           pop r14
0x000025eb      415f           pop r15
0x000025ed      c3             ret
0x000025ee      6690           nop
0x000025f0      488b0d916a21.  mov rcx, qword [obj.stdout]             ; /src:168 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x219088:8]=0
0x000025f7      488d3de26a21.  lea rdi, obj.buffer.6999                ; 0x2190e0
0x000025fe      4889da         mov rdx, rbx
0x00002601      be01000000     mov esi, 1
0x00002606      e815f5ffff     call sym.imp.fwrite_unlocked
0x0000260b      48c705ca8a21.  mov qword [obj.bytes_in_buffer.7000], 0 ; /src:169 ; [0x21b0e0:8]=0
0x00002616      4883c408       add rsp, 8                              ; /src:186
0x0000261a      5b             pop rbx
0x0000261b      5d             pop rbp
0x0000261c      415c           pop r12
0x0000261e      415d           pop r13
0x00002620      415e           pop r14
0x00002622      415f           pop r15
0x00002624      c3             ret
0x00002625      0f1f00         nop dword [rax]
0x00002628      4a8d3c2b       lea rdi, [rbx + r13]
0x0000262c      eb9c           jmp 0x25ca
0x0000262e      6690           nop
;-- tac_seekable:
0x00002630      4157           push r15                                ; /src:194
0x00002632      4156           push r14
0x00002634      4989d6         mov r14, rdx
0x00002637      4155           push r13
0x00002639      4154           push r12
0x0000263b      55             push rbp
0x0000263c      53             push rbx
0x0000263d      4883ec38       sub rsp, 0x38
0x00002641      4c8b3d488c21.  mov r15, qword [obj.separator]          ; /src:209 ; [0x21b290:8]=0
0x00002648      488b1d198c21.  mov rbx, qword [obj.read_size]          ; /src:218 ; [0x21b268:8]=0
0x0000264f      897c241c       mov dword [rsp + 0x1c], edi             ; /src:194
0x00002653      4889742428     mov qword [rsp + 0x28], rsi
0x00002658      498d4701       lea rax, [r15 + 1]                      ; /src:210
0x0000265c      410fb62f       movzx ebp, byte [r15]                   ; /src:209
0x00002660      4889442408     mov qword [rsp + 8], rax                ; /src:210
0x00002665      488b050c8c21.  mov rax, qword [obj.match_length]       ; /src:211 ; [0x21b278:8]=0
0x0000266c      4889442420     mov qword [rsp + 0x20], rax
0x00002671      4c8d68ff       lea r13, [rax - 1]
0x00002675      4889d0         mov rax, rdx                            ; /src:218
0x00002678      31d2           xor edx, edx
0x0000267a      48f7f3         div rbx
0x0000267d      4885d2         test rdx, rdx                           ; /src:219
0x00002680      0f8593040000   jne 0x2b19
0x00002686      4c8d25b71a01.  lea r12, str.s:_seek_failed             ; /src:233 ; 0x14144 ; "%s: seek failed"
0x0000268d      eb04           jmp 0x2693
0x0000268f      90             nop
0x00002690      4929de         sub r14, rbx                            ; /src:234
0x00002693      488b35d68b21.  mov rsi, qword [obj.G_buffer]           ; /src:228 ; [0x21b270:8]=0
0x0000269a      8b7c241c       mov edi, dword [rsp + 0x1c]
0x0000269e      4889da         mov rdx, rbx
0x000026a1      e8ea270000     call sym.safe_read
0x000026a6      4885c0         test rax, rax
0x000026a9      4889c2         mov rdx, rax
0x000026ac      488b1db58b21.  mov rbx, qword [obj.read_size]          ; [0x21b268:8]=0
0x000026b3      756a           jne 0x271f
0x000026b5      4d85f6         test r14, r14                           ; /src:229
0x000026b8      0f8420040000   je 0x2ade
0x000026be      8b7c241c       mov edi, dword [rsp + 0x1c]             ; /src:232
0x000026c2      4889de         mov rsi, rbx
0x000026c5      ba01000000     mov edx, 1
0x000026ca      48f7de         neg rsi
0x000026cd      e81ef3ffff     call sym.imp.lseek
0x000026d2      4885c0         test rax, rax
0x000026d5      79b9           jns 0x2690
0x000026d7      488b542428     mov rdx, qword [rsp + 0x28]             ; /src:233
0x000026dc      be03000000     mov esi, 3
0x000026e1      31ff           xor edi, edi
0x000026e3      e8b8250000     call sym.quotearg_n_style_colon
0x000026e8      ba05000000     mov edx, 5
0x000026ed      4c89e6         mov rsi, r12
0x000026f0      31ff           xor edi, edi
0x000026f2      4889c3         mov rbx, rax
0x000026f5      e866f2ffff     call sym.imp.dcgettext
0x000026fa      4989c7         mov r15, rax
0x000026fd      e89ef1ffff     call sym.imp.__errno_location
0x00002702      8b30           mov esi, dword [rax]
0x00002704      4889d9         mov rcx, rbx
0x00002707      4c89fa         mov rdx, r15
0x0000270a      31ff           xor edi, edi
0x0000270c      31c0           xor eax, eax
0x0000270e      e88df4ffff     call sym.imp.error
0x00002713      488b1d4e8b21.  mov rbx, qword [obj.read_size]          ; [0x21b268:8]=0
0x0000271a      e971ffffff     jmp 0x2690
0x0000271f      4839d8         cmp rax, rbx                            ; /src:238
0x00002722      7428           je 0x274c
0x00002724      e952040000     jmp 0x2b7b
0x00002729      0f1f80000000.  nop dword [rax]
0x00002730      4883f8ff       cmp rax, 0xffffffffffffffff             ; /src:244
0x00002734      0f8453030000   je 0x2a8d
0x0000273a      488b15278b21.  mov rdx, qword [obj.read_size]          ; /src:238 ; [0x21b268:8]=0
0x00002741      4901c6         add r14, rax                            ; /src:246
0x00002744      4889c3         mov rbx, rax
0x00002747      4839c2         cmp rdx, rax                            ; /src:238
0x0000274a      751f           jne 0x276b
0x0000274c      488b351d8b21.  mov rsi, qword [obj.G_buffer]           ; /src:240 ; [0x21b270:8]=0
0x00002753      8b7c241c       mov edi, dword [rsp + 0x1c]
0x00002757      e834270000     call sym.safe_read
0x0000275c      4885c0         test rax, rax                           ; /src:241
0x0000275f      75cf           jne 0x2730
0x00002761      4883fbff       cmp rbx, 0xffffffffffffffff             ; /src:249
0x00002765      0f8422030000   je 0x2a8d
0x0000276b      4c8b25fe8a21.  mov r12, qword [obj.G_buffer]           ; /src:255 ; [0x21b270:8]=0
0x00002772      488b05078b21.  mov rax, qword [obj.sentinel_length]    ; /src:257 ; [0x21b280:8]=0
0x00002779      498d0c1c       lea rcx, [r12 + rbx]                    ; /src:255
0x0000277d      4889ca         mov rdx, rcx                            ; /src:258
0x00002780      48894c2410     mov qword [rsp + 0x10], rcx             ; /src:255
0x00002785      482b4c2420     sub rcx, qword [rsp + 0x20]             ; /src:258
0x0000278a      c644242001     mov byte [rsp + 0x20], 1
0x0000278f      4883c101       add rcx, 1
0x00002793      4885c0         test rax, rax
0x00002796      480f45d1       cmovne rdx, rcx
0x0000279a      4989d7         mov r15, rdx
0x0000279d      0f1f00         nop dword [rax]
0x000027a0      4885c0         test rax, rax                           ; /src:268
0x000027a3      0f859a010000   jne 0x2943
0x000027a9      4d29e7         sub r15, r12                            ; /src:270
0x000027ac      41b801000000   mov r8d, 1                              ; /src:272
0x000027b2      4d29f8         sub r8, r15
0x000027b5      4983f801       cmp r8, 1                               ; /src:275
0x000027b9      0f8fed030000   jg 0x2bac
0x000027bf      0f8412020000   je 0x29d7                               ; /src:278
0x000027c5      498d4fff       lea rcx, [r15 - 1]                      ; /src:280
0x000027c9      4c8d0d308921.  lea r9, obj.regs                        ; /src:279 ; 0x21b100
0x000027d0      488d3d498a21.  lea rdi, obj.compiled_separator         ; 0x21b220
0x000027d7      4c89fa         mov rdx, r15
0x000027da      4c89e6         mov rsi, r12
0x000027dd      e88e120100     call sym.rpl_re_search
0x000027e2      4883f8ff       cmp rax, 0xffffffffffffffff
0x000027e6      0f84e4010000   je 0x29d0
0x000027ec      4883f8fe       cmp rax, 0xfffffffffffffffe             ; /src:283
0x000027f0      0f8492030000   je 0x2b88
0x000027f6      488b050b8921.  mov rax, qword [0x0021b108]             ; /src:290 ; [0x21b108:8]=0
0x000027fd      4c8b256c8a21.  mov r12, qword [obj.G_buffer]           ; [0x21b270:8]=0
0x00002804      488b10         mov rdx, qword [rax]
0x00002807      488b05028921.  mov rax, qword [0x0021b110]             ; /src:291 ; [0x21b110:8]=0
0x0000280e      488b00         mov rax, qword [rax]
0x00002811      498d1c14       lea rbx, [r12 + rdx]                    ; /src:290
0x00002815      4829d0         sub rax, rdx                            ; /src:291
0x00002818      488905598a21.  mov qword [obj.match_length], rax       ; [0x21b278:8]=0
0x0000281f      4c39e3         cmp rbx, r12                            ; /src:305
0x00002822      0f8350010000   jae 0x2978
0x00002828      4d85f6         test r14, r14                           ; /src:307
0x0000282b      0f84c7020000   je 0x2af8
0x00002831      488b5c2410     mov rbx, qword [rsp + 0x10]             ; /src:314
0x00002836      488b052b8a21.  mov rax, qword [obj.read_size]          ; /src:315 ; [0x21b268:8]=0
0x0000283d      4c29e3         sub rbx, r12                            ; /src:314
0x00002840      4839d8         cmp rax, rbx                            ; /src:315
0x00002843      7357           jae 0x289c
0x00002845      488b15348a21.  mov rdx, qword [obj.sentinel_length]    ; /src:322 ; [0x21b280:8]=0
0x0000284c      488d3400       lea rsi, [rax + rax]                    ; /src:325
0x00002850      488b3d098a21.  mov rdi, qword [obj.G_buffer_size]      ; /src:323 ; [0x21b260:8]=0
0x00002857      41bf01000000   mov r15d, 1                             ; /src:322
0x0000285d      488935048a21.  mov qword [obj.read_size], rsi          ; /src:325 ; [0x21b268:8]=0
0x00002864      488d748202     lea rsi, [rdx + rax*4 + 2]              ; /src:326
0x00002869      4885d2         test rdx, rdx                           ; /src:322
0x0000286c      4c0f45fa       cmovne r15, rdx
0x00002870      4839fe         cmp rsi, rdi                            ; /src:327
0x00002873      488935e68921.  mov qword [obj.G_buffer_size], rsi      ; /src:326 ; [0x21b260:8]=0
0x0000287a      0f8203030000   jb 0x2b83                               ; /src:327
0x00002880      4c89e7         mov rdi, r12                            ; /src:329
0x00002883      4c29ff         sub rdi, r15
0x00002886      e8652d0000     call sym.xrealloc
0x0000288b      4c01f8         add rax, r15                            ; /src:330
0x0000288e      488905db8921.  mov qword [obj.G_buffer], rax           ; [0x21b270:8]=0
0x00002895      488b05cc8921.  mov rax, qword [obj.read_size]          ; [0x21b268:8]=0
0x0000289c      4939c6         cmp r14, rax                            ; /src:335
0x0000289f      0f8243010000   jb 0x29e8
0x000028a5      4929c6         sub r14, rax                            ; /src:336
0x000028a8      8b7c241c       mov edi, dword [rsp + 0x1c]             ; /src:342
0x000028ac      31d2           xor edx, edx
0x000028ae      4c89f6         mov rsi, r14
0x000028b1      e83af1ffff     call sym.imp.lseek
0x000028b6      4885c0         test rax, rax
0x000028b9      0f8889010000   js 0x2a48
0x000028bf      4c8b25aa8921.  mov r12, qword [obj.G_buffer]           ; /src:347 ; [0x21b270:8]=0
0x000028c6      4c8b059b8921.  mov r8, qword [obj.read_size]           ; [0x21b268:8]=0
0x000028cd      4889da         mov rdx, rbx                            ; /coreutils-8.31/lib:40
0x000028d0      4f8d3c04       lea r15, [r12 + r8]                     ; /src:347
0x000028d4      4c89e6         mov rsi, r12                            ; /coreutils-8.31/lib:40
0x000028d7      4c89442410     mov qword [rsp + 0x10], r8              ; /src:347
0x000028dc      4c89ff         mov rdi, r15                            ; /coreutils-8.31/lib:40
0x000028df      e8acf2ffff     call sym.imp.memmove
0x000028e4      4c8b442410     mov r8, qword [rsp + 0x10]              ; /src:348
0x000028e9      8b7c241c       mov edi, dword [rsp + 0x1c]             ; /src:355
0x000028ed      4c89e6         mov rsi, r12
0x000028f0      4c01c3         add rbx, r8                             ; /src:348
0x000028f3      48833d858921.  cmp qword [obj.sentinel_length], 0      ; /src:353 ; [0x21b280:8]=0
0x000028fb      4c89c2         mov rdx, r8                             ; /src:355
0x000028fe      498d041c       lea rax, [r12 + rbx]                    ; /src:348
0x00002902      4889442410     mov qword [rsp + 0x10], rax
0x00002907      4c0f44f8       cmove r15, rax                          ; /src:353
0x0000290b      e880250000     call sym.safe_read                      ; /src:355
0x00002910      483b05518921.  cmp rax, qword [obj.read_size]          ; [0x21b268:8]=0
0x00002917      0f8570010000   jne 0x2a8d
0x0000291d      488b055c8921.  mov rax, qword [obj.sentinel_length]    ; [0x21b280:8]=0
0x00002924      4c8b25458921.  mov r12, qword [obj.G_buffer]           ; [0x21b270:8]=0
0x0000292b      4885c0         test rax, rax                           ; /src:268
0x0000292e      0f8475feffff   je 0x27a9
0x00002934      41386fff       cmp byte [r15 - 1], bpl                 ; /src:297
0x00002938      498d5fff       lea rbx, [r15 - 1]
0x0000293c      740f           je 0x294d
0x0000293e      6690           nop
0x00002940      4989df         mov r15, rbx
0x00002943      41386fff       cmp byte [r15 - 1], bpl
0x00002947      498d5fff       lea rbx, [r15 - 1]
0x0000294b      75f3           jne 0x2940
0x0000294d      4d85ed         test r13, r13                           ; /src:298
0x00002950      0f84c9feffff   je 0x281f
0x00002956      488b742408     mov rsi, qword [rsp + 8]
0x0000295b      4c89ea         mov rdx, r13
0x0000295e      4c89ff         mov rdi, r15
0x00002961      e85aefffff     call sym.imp.strncmp
0x00002966      85c0           test eax, eax
0x00002968      75d6           jne 0x2940
0x0000296a      4c39e3         cmp rbx, r12                            ; /src:305
0x0000296d      0f82b5feffff   jb 0x2828
0x00002973      0f1f440000     nop dword [rax + rax]
0x00002978      803d09892100.  cmp byte [obj.separator_ends_record], 0 ; /src:364 ; [0x21b288:1]=0
0x0000297f      747f           je 0x2a00
0x00002981      0fb64c2420     movzx ecx, byte [rsp + 0x20]            ; /src:370
0x00002986      4c8b3deb8821.  mov r15, qword [obj.match_length]       ; /src:366 ; [0x21b278:8]=0
0x0000298d      4901df         add r15, rbx
0x00002990      83f101         xor ecx, 1                              ; /src:370
0x00002993      4c397c2410     cmp qword [rsp + 0x10], r15
0x00002998      0f95c2         setne dl
0x0000299b      08d1           or cl, dl
0x0000299d      884c2420       mov byte [rsp + 0x20], cl
0x000029a1      757d           jne 0x2a20
0x000029a3      4c897c2410     mov qword [rsp + 0x10], r15
0x000029a8      488b05d18821.  mov rax, qword [obj.sentinel_length]    ; /src:382 ; [0x21b280:8]=0
0x000029af      4989df         mov r15, rbx
0x000029b2      4885c0         test rax, rax
0x000029b5      0f84eefdffff   je 0x27a9
0x000029bb      ba01000000     mov edx, 1                              ; /src:383
0x000029c0      482b15b18821.  sub rdx, qword [obj.match_length]       ; [0x21b278:8]=0
0x000029c7      4901d7         add r15, rdx
0x000029ca      e9d1fdffff     jmp 0x27a0
0x000029cf      90             nop
0x000029d0      4c8b25998821.  mov r12, qword [obj.G_buffer]           ; [0x21b270:8]=0
0x000029d7      498d5c24ff     lea rbx, [r12 - 1]                      ; /src:282
0x000029dc      e93efeffff     jmp 0x281f
0x000029e1      0f1f80000000.  nop dword [rax]
0x000029e8      4c8935798821.  mov qword [obj.read_size], r14          ; /src:339 ; [0x21b268:8]=0
0x000029ef      4531f6         xor r14d, r14d                          ; /src:340
0x000029f2      e9b1feffff     jmp 0x28a8
0x000029f7      660f1f840000.  nop word [rax + rax]
0x00002a00      488b742410     mov rsi, qword [rsp + 0x10]             ; /src:377
0x00002a05      4889df         mov rdi, rbx
0x00002a08      e823fbffff     call sym.output
0x00002a0d      4c8b255c8821.  mov r12, qword [obj.G_buffer]           ; [0x21b270:8]=0
0x00002a14      48895c2410     mov qword [rsp + 0x10], rbx
0x00002a19      eb8d           jmp 0x29a8
0x00002a1b      0f1f440000     nop dword [rax + rax]
0x00002a20      488b742410     mov rsi, qword [rsp + 0x10]             ; /src:371
0x00002a25      4c89ff         mov rdi, r15
0x00002a28      e803fbffff     call sym.output
0x00002a2d      4c8b253c8821.  mov r12, qword [obj.G_buffer]           ; [0x21b270:8]=0
0x00002a34      4c897c2410     mov qword [rsp + 0x10], r15             ; /src:366
0x00002a39      c644242000     mov byte [rsp + 0x20], 0                ; /src:373
0x00002a3e      e965ffffff     jmp 0x29a8
0x00002a43      0f1f440000     nop dword [rax + rax]
0x00002a48      488b542428     mov rdx, qword [rsp + 0x28]             ; /src:343
0x00002a4d      31ff           xor edi, edi
0x00002a4f      be03000000     mov esi, 3
0x00002a54      e847220000     call sym.quotearg_n_style_colon
0x00002a59      488d35e41601.  lea rsi, str.s:_seek_failed             ; 0x14144 ; "%s: seek failed"
0x00002a60      31ff           xor edi, edi
0x00002a62      ba05000000     mov edx, 5
0x00002a67      4989c4         mov r12, rax
0x00002a6a      e8f1eeffff     call sym.imp.dcgettext
0x00002a6f      4989c7         mov r15, rax
0x00002a72      e829eeffff     call sym.imp.__errno_location
0x00002a77      8b30           mov esi, dword [rax]
0x00002a79      4c89e1         mov rcx, r12
0x00002a7c      4c89fa         mov rdx, r15
0x00002a7f      31ff           xor edi, edi
0x00002a81      31c0           xor eax, eax
0x00002a83      e818f1ffff     call sym.imp.error
0x00002a88      e932feffff     jmp 0x28bf
0x00002a8d      488b542428     mov rdx, qword [rsp + 0x28]             ; /src:357
0x00002a92      be03000000     mov esi, 3
0x00002a97      31ff           xor edi, edi
0x00002a99      e802220000     call sym.quotearg_n_style_colon
0x00002a9e      488d35af1601.  lea rsi, str.s:_read_error              ; 0x14154 ; "%s: read error"
0x00002aa5      ba05000000     mov edx, 5
0x00002aaa      31ff           xor edi, edi
0x00002aac      4889c5         mov rbp, rax
0x00002aaf      e8aceeffff     call sym.imp.dcgettext
0x00002ab4      4889c3         mov rbx, rax
0x00002ab7      e8e4edffff     call sym.imp.__errno_location
0x00002abc      8b30           mov esi, dword [rax]
0x00002abe      4889e9         mov rcx, rbp
0x00002ac1      4889da         mov rdx, rbx
0x00002ac4      31c0           xor eax, eax
0x00002ac6      31ff           xor edi, edi
0x00002ac8      e8d3f0ffff     call sym.imp.error
0x00002acd      4883c438       add rsp, 0x38                           ; /src:386
0x00002ad1      31c0           xor eax, eax                            ; /src:358
0x00002ad3      5b             pop rbx                                 ; /src:386
0x00002ad4      5d             pop rbp
0x00002ad5      415c           pop r12
0x00002ad7      415d           pop r13
0x00002ad9      415e           pop r14
0x00002adb      415f           pop r15
0x00002add      c3             ret
0x00002ade      4885db         test rbx, rbx                           ; /src:238
0x00002ae1      4c89f2         mov rdx, r14                            ; /src:228
0x00002ae4      0f8462fcffff   je 0x274c                               ; /src:238
0x00002aea      31db           xor ebx, ebx                            ; /src:228
0x00002aec      e97afcffff     jmp 0x276b
0x00002af1      0f1f80000000.  nop dword [rax]
0x00002af8      488b742410     mov rsi, qword [rsp + 0x10]
0x00002afd      4c89e7         mov rdi, r12
0x00002b00      e82bfaffff     call sym.output                         ; /src:123
0x00002b05      4883c438       add rsp, 0x38
0x00002b09      b801000000     mov eax, 1
0x00002b0e      5b             pop rbx
0x00002b0f      5d             pop rbp
0x00002b10      415c           pop r12
0x00002b12      415d           pop r13
0x00002b14      415e           pop r14
0x00002b16      415f           pop r15
0x00002b18      c3             ret
0x00002b19      4929d6         sub r14, rdx
0x00002b1c      31d2           xor edx, edx
0x00002b1e      4c89f6         mov rsi, r14
0x00002b21      e8caeeffff     call sym.imp.lseek
0x00002b26      4885c0         test rax, rax
0x00002b29      0f8957fbffff   jns 0x2686
0x00002b2f      488b542428     mov rdx, qword [rsp + 0x28]
0x00002b34      be03000000     mov esi, 3
0x00002b39      31ff           xor edi, edi
0x00002b3b      e860210000     call sym.quotearg_n_style_colon
0x00002b40      488d35fd1501.  lea rsi, str.s:_seek_failed             ; 0x14144 ; "%s: seek failed"
0x00002b47      ba05000000     mov edx, 5
0x00002b4c      31ff           xor edi, edi                            ; /src:-33
0x00002b4e      4889c3         mov rbx, rax
0x00002b51      e80aeeffff     call sym.imp.dcgettext                  ; /src:-35
0x00002b56      4989c4         mov r12, rax
0x00002b59      e842edffff     call sym.imp.__errno_location
0x00002b5e      8b30           mov esi, dword [rax]
0x00002b60      4889d9         mov rcx, rbx
0x00002b63      4c89e2         mov rdx, r12
0x00002b66      31ff           xor edi, edi
0x00002b68      31c0           xor eax, eax
0x00002b6a      e831f0ffff     call sym.imp.error
0x00002b6f      488b1df28621.  mov rbx, qword [obj.read_size]          ; [0x21b268:8]=0
0x00002b76      e90bfbffff     jmp 0x2686
0x00002b7b      4889c3         mov rbx, rax
0x00002b7e      e9defbffff     jmp 0x2761
0x00002b83      e8582c0000     call sym.xalloc_die
0x00002b88      488d35791701.  lea rsi, str.error_in_regular_expression_search ; 0x14308 ; "error in regular expression search"
0x00002b8f      ba05000000     mov edx, 5
0x00002b94      31ff           xor edi, edi
0x00002b96      e8c5edffff     call sym.imp.dcgettext
0x00002b9b      31f6           xor esi, esi
0x00002b9d      4889c2         mov rdx, rax
0x00002ba0      bf01000000     mov edi, 1
0x00002ba5      31c0           xor eax, eax                            ; /src:-30
0x00002ba7      e8f4efffff     call sym.imp.error
0x00002bac      488d35b01501.  lea rsi, str.record_too_large           ; 0x14163 ; "record too large"
0x00002bb3      ba05000000     mov edx, 5                              ; .//ib:-58
0x00002bb8      31ff           xor edi, edi
0x00002bba      e8a1edffff     call sym.imp.dcgettext
0x00002bbf      31f6           xor esi, esi
0x00002bc1      4889c2         mov rdx, rax
0x00002bc4      bf01000000     mov edi, 1
0x00002bc9      31c0           xor eax, eax
0x00002bcb      e8d0efffff     call sym.imp.error
;-- usage:
0x00002bd0      4155           push r13
0x00002bd2      4154           push r12
0x00002bd4      ba05000000     mov edx, 5
0x00002bd9      55             push rbp
0x00002bda      53             push rbx
0x00002bdb      89fd           mov ebp, edi
0x00002bdd      4881ec880000.  sub rsp, 0x88
0x00002be4      488b1dbd8621.  mov rbx, qword [obj.program_name]       ; [0x21b2a8:8]=0
0x00002beb      64488b042528.  mov rax, qword fs:[0x28]
0x00002bf4      4889442478     mov qword [rsp + 0x78], rax
0x00002bf9      31c0           xor eax, eax
0x00002bfb      85ff           test edi, edi
0x00002bfd      742e           je 0x2c2d
0x00002bff      488d352a1701.  lea rsi, str.Try___s___help__for_more_information. ; 0x14330 ; "Try '%s --help' for more information.\n"
0x00002c06      31ff           xor edi, edi
0x00002c08      e853edffff     call sym.imp.dcgettext
0x00002c0d      488b3dac6421.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2190c0:8]=0
0x00002c14      4889c2         mov rdx, rax
0x00002c17      4889d9         mov rcx, rbx
0x00002c1a      be01000000     mov esi, 1
0x00002c1f      31c0           xor eax, eax
0x00002c21      e8faefffff     call sym.imp.__fprintf_chk
0x00002c26      89ef           mov edi, ebp
0x00002c28      e8d3efffff     call sym.imp.exit
0x00002c2d      488d35241701.  lea rsi, str.Usage:__s__OPTION_...__FILE_... ; 0x14358 ; "Usage: %s [OPTION]... [FILE]...\n"
0x00002c34      31ff           xor edi, edi                            ; /src:-19
0x00002c36      e825edffff     call sym.imp.dcgettext
0x00002c3b      4889da         mov rdx, rbx
0x00002c3e      4889c6         mov rsi, rax
0x00002c41      bf01000000     mov edi, 1
0x00002c46      31c0           xor eax, eax
0x00002c48      e813efffff     call sym.imp.__printf_chk
0x00002c4d      488b1d346421.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x219088:8]=0
0x00002c54      488d35251701.  lea rsi, str.Write_each_FILE_to_standard_output__last_line_first. ; 0x14380 ; "Write each FILE to standard output, last line first.\n"
0x00002c5b      ba05000000     mov edx, 5
0x00002c60      31ff           xor edi, edi
0x00002c62      e8f9ecffff     call sym.imp.dcgettext
0x00002c67      4889de         mov rsi, rbx
0x00002c6a      4889c7         mov rdi, rax
0x00002c6d      e8eeedffff     call sym.imp.fputs_unlocked
0x00002c72      488b1d0f6421.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x219088:8]=0
0x00002c79      488d35381701.  lea rsi, str.With_no_FILE__or_when_FILE_is____read_standard_input. ; 0x143b8 ; "\nWith no FILE, or when FILE is -, read standard input.\n"
0x00002c80      ba05000000     mov edx, 5
0x00002c85      31ff           xor edi, edi
0x00002c87      e8d4ecffff     call sym.imp.dcgettext
0x00002c8c      4889de         mov rsi, rbx
0x00002c8f      4889c7         mov rdi, rax
0x00002c92      e8c9edffff     call sym.imp.fputs_unlocked
0x00002c97      488b1dea6321.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x219088:8]=0
0x00002c9e      488d354b1701.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0x143f0 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x00002ca5      ba05000000     mov edx, 5
0x00002caa      31ff           xor edi, edi                            ; ../coreutils-8.31/src/c.c:471
0x00002cac      e8afecffff     call sym.imp.dcgettext
0x00002cb1      4889de         mov rsi, rbx
0x00002cb4      4889c7         mov rdi, rax
0x00002cb7      e8a4edffff     call sym.imp.fputs_unlocked
0x00002cbc      488b1dc56321.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x219088:8]=0
0x00002cc3      488d35761701.  lea rsi, str.b____before_____________attach_the_separator_before_instead_of_after_____r____regex______________interpret_the_separator_as_a_regular_expression_____s____separator_STRING___use_STRING_as_the_separator_instead_of_newline ; 0x14440 ; "  -b, --before             attach the separator before instead of after\n  -r, --regex              interpret the separator as a regular expression\n  -s, --separator=STRING   use STRING as the separator instead of newline\n"
0x00002cca      ba05000000     mov edx, 5                              ; ../coreutils-8.31/src/c.c:482
0x00002ccf      31ff           xor edi, edi
0x00002cd1      e88aecffff     call sym.imp.dcgettext
0x00002cd6      4889de         mov rsi, rbx
0x00002cd9      4889c7         mov rdi, rax
0x00002cdc      e87fedffff     call sym.imp.fputs_unlocked
0x00002ce1      488b1da06321.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x219088:8]=0
0x00002ce8      488d35311801.  lea rsi, str.help_____display_this_help_and_exit ; 0x14520 ; "      --help     display this help and exit\n"
0x00002cef      ba05000000     mov edx, 5
0x00002cf4      31ff           xor edi, edi
0x00002cf6      e865ecffff     call sym.imp.dcgettext
0x00002cfb      4889de         mov rsi, rbx
0x00002cfe      4889c7         mov rdi, rax
0x00002d01      e85aedffff     call sym.imp.fputs_unlocked
0x00002d06      488b1d7b6321.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x219088:8]=0
0x00002d0d      488d353c1801.  lea rsi, str.version__output_version_information_and_exit ; 0x14550 ; "      --version  output version information and exit\n"
0x00002d14      ba05000000     mov edx, 5
0x00002d19      31ff           xor edi, edi
0x00002d1b      e840ecffff     call sym.imp.dcgettext
0x00002d20      4889de         mov rsi, rbx
0x00002d23      4889c7         mov rdi, rax
0x00002d26      488d1d471401.  lea rbx, [0x00014174]                   ; "tac"
0x00002d2d      e82eedffff     call sym.imp.fputs_unlocked
0x00002d32      488d053f1401.  lea rax, [0x00014178]                   ; "["
0x00002d39      488d0d791401.  lea rcx, str.sha256sum                  ; 0x141b9 ; "sha256sum"
0x00002d40      48c744246000.  mov qword [rsp + 0x60], 0               ; ../coreutils-8.31/src/c.c:485
0x00002d49      48c744246800.  mov qword [rsp + 0x68], 0
0x00002d52      4889e2         mov rdx, rsp
0x00002d55      48890424       mov qword [rsp], rax
0x00002d59      488d051a1401.  lea rax, [0x0001417a]                   ; "test invocation"
0x00002d60      48894c2430     mov qword [rsp + 0x30], rcx
0x00002d65      488d0d571401.  lea rcx, str.sha384sum                  ; 0x141c3 ; "sha384sum"
0x00002d6c      4889442408     mov qword [rsp + 8], rax
0x00002d71      488d057a1401.  lea rax, [0x000141f2]                   ; ../coreutils-8.31/src/c.c:487 ; "coreutils"
0x00002d78      48894c2440     mov qword [rsp + 0x40], rcx
0x00002d7d      488d0d491401.  lea rcx, str.sha512sum                  ; 0x141cd ; "sha512sum"
0x00002d84      4889442410     mov qword [rsp + 0x10], rax
0x00002d89      488d05fa1301.  lea rax, [0x0001418a]                   ; "Multi-call invocation"
0x00002d90      48894c2450     mov qword [rsp + 0x50], rcx
0x00002d95      4889442418     mov qword [rsp + 0x18], rax
0x00002d9a      488d05ff1301.  lea rax, str.sha224sum                  ; 0x141a0 ; "sha224sum"
0x00002da1      4889442420     mov qword [rsp + 0x20], rax
0x00002da6      488d05fd1301.  lea rax, str.sha2_utilities             ; 0x141aa ; "sha2 utilities"
0x00002dad      4889442428     mov qword [rsp + 0x28], rax
0x00002db2      4889442438     mov qword [rsp + 0x38], rax
0x00002db7      4889442448     mov qword [rsp + 0x48], rax
0x00002dbc      4889442458     mov qword [rsp + 0x58], rax
0x00002dc1      0f1f80000000.  nop dword [rax]
0x00002dc8      4883c210       add rdx, 0x10
0x00002dcc      488b3a         mov rdi, qword [rdx]
0x00002dcf      4885ff         test rdi, rdi
0x00002dd2      7413           je 0x2de7
0x00002dd4      b904000000     mov ecx, 4
0x00002dd9      4889de         mov rsi, rbx
0x00002ddc      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]   ; .//ib:-58
0x00002dde      0f97c0         seta al
0x00002de1      1c00           sbb al, 0
0x00002de3      84c0           test al, al
0x00002de5      75e1           jne 0x2dc8
0x00002de7      4c8b6208       mov r12, qword [rdx + 8]
0x00002deb      31ff           xor edi, edi
0x00002ded      ba05000000     mov edx, 5
0x00002df2      488d35de1301.  lea rsi, str.s_online_help:___s         ; 0x141d7 ; "\n%s online help: <%s>\n"
0x00002df9      4d85e4         test r12, r12                           ; ../coreutils-8.31/src/c.c:506
0x00002dfc      0f84c1000000   je 0x2ec3
0x00002e02      e859ebffff     call sym.imp.dcgettext
0x00002e07      488d0d7a1701.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x14588 ; "https://www.gnu.org/software/coreutils/"
0x00002e0e      488d15d91301.  lea rdx, str.GNU_coreutils              ; 0x141ee ; "GNU coreutils"
0x00002e15      4889c6         mov rsi, rax
0x00002e18      bf01000000     mov edi, 1
0x00002e1d      31c0           xor eax, eax
0x00002e1f      e83cedffff     call sym.imp.__printf_chk
0x00002e24      31f6           xor esi, esi
0x00002e26      bf05000000     mov edi, 5
0x00002e2b      e820edffff     call sym.imp.setlocale
0x00002e30      4885c0         test rax, rax
0x00002e33      741c           je 0x2e51
0x00002e35      488d35c01301.  lea rsi, [0x000141fc]                   ; "en_"
0x00002e3c      ba03000000     mov edx, 3
0x00002e41      4889c7         mov rdi, rax
0x00002e44      e877eaffff     call sym.imp.strncmp
0x00002e49      85c0           test eax, eax
0x00002e4b      0f8507010000   jne 0x2f58
0x00002e51      488d35a81301.  lea rsi, str.Full_documentation___s_s   ; 0x14200 ; "Full documentation <%s%s>\n"
0x00002e58      31ff           xor edi, edi
0x00002e5a      ba05000000     mov edx, 5
0x00002e5f      e8fceaffff     call sym.imp.dcgettext
0x00002e64      488d0d091301.  lea rcx, [0x00014174]                   ; "tac"
0x00002e6b      488d15161701.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x14588 ; "https://www.gnu.org/software/coreutils/"
0x00002e72      4889c6         mov rsi, rax
0x00002e75      bf01000000     mov edi, 1
0x00002e7a      31c0           xor eax, eax
0x00002e7c      e8dfecffff     call sym.imp.__printf_chk
0x00002e81      4939dc         cmp r12, rbx
0x00002e84      488d0d091301.  lea rcx, [0x00014194]                   ; " invocation"
0x00002e8b      488d1d6f1d01.  lea rbx, [0x00014c01]
0x00002e92      480f44d9       cmove rbx, rcx
0x00002e96      488d355b1701.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x145f8 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00002e9d      31ff           xor edi, edi
0x00002e9f      ba05000000     mov edx, 5
0x00002ea4      e8b7eaffff     call sym.imp.dcgettext
0x00002ea9      4889d9         mov rcx, rbx
0x00002eac      4889c6         mov rsi, rax
0x00002eaf      4c89e2         mov rdx, r12
0x00002eb2      bf01000000     mov edi, 1
0x00002eb7      31c0           xor eax, eax
0x00002eb9      e8a2ecffff     call sym.imp.__printf_chk
0x00002ebe      e963fdffff     jmp 0x2c26
0x00002ec3      e898eaffff     call sym.imp.dcgettext
0x00002ec8      488d0db91601.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x14588 ; "https://www.gnu.org/software/coreutils/"
0x00002ecf      488d15181301.  lea rdx, str.GNU_coreutils              ; 0x141ee ; "GNU coreutils"
0x00002ed6      4889c6         mov rsi, rax
0x00002ed9      bf01000000     mov edi, 1
0x00002ede      31c0           xor eax, eax
0x00002ee0      e87becffff     call sym.imp.__printf_chk
0x00002ee5      31f6           xor esi, esi
0x00002ee7      bf05000000     mov edi, 5
0x00002eec      e85fecffff     call sym.imp.setlocale
0x00002ef1      4885c0         test rax, rax
0x00002ef4      7418           je 0x2f0e
0x00002ef6      488d35ff1201.  lea rsi, [0x000141fc]                   ; "en_"
0x00002efd      ba03000000     mov edx, 3
0x00002f02      4889c7         mov rdi, rax
0x00002f05      e8b6e9ffff     call sym.imp.strncmp
0x00002f0a      85c0           test eax, eax
0x00002f0c      7543           jne 0x2f51
0x00002f0e      488d35eb1201.  lea rsi, str.Full_documentation___s_s   ; 0x14200 ; "Full documentation <%s%s>\n"
0x00002f15      ba05000000     mov edx, 5
0x00002f1a      31ff           xor edi, edi
0x00002f1c      4c8d25511201.  lea r12, [0x00014174]                   ; "tac"
0x00002f23      488d1d6a1201.  lea rbx, [0x00014194]                   ; " invocation"
0x00002f2a      e831eaffff     call sym.imp.dcgettext
0x00002f2f      488d0d3e1201.  lea rcx, [0x00014174]                   ; "tac"
0x00002f36      488d154b1601.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x14588 ; "https://www.gnu.org/software/coreutils/"
0x00002f3d      4889c6         mov rsi, rax
0x00002f40      bf01000000     mov edi, 1
0x00002f45      31c0           xor eax, eax
0x00002f47      e814ecffff     call sym.imp.__printf_chk
0x00002f4c      e945ffffff     jmp 0x2e96
0x00002f51      4c8d251c1201.  lea r12, [0x00014174]                   ; "tac"
0x00002f58      4c8b2d296121.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x219088:8]=0
0x00002f5f      488d354a1601.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x145b0 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x00002f66      31ff           xor edi, edi
0x00002f68      ba05000000     mov edx, 5
0x00002f6d      e8eee9ffff     call sym.imp.dcgettext
0x00002f72      4c89ee         mov rsi, r13
0x00002f75      4889c7         mov rdi, rax
0x00002f78      e8e3eaffff     call sym.imp.fputs_unlocked
0x00002f7d      e9cffeffff     jmp 0x2e51
0x00002f82      662e0f1f8400.  nop word cs:[rax + rax]
0x00002f8c      0f1f4000       nop dword [rax]
;-- close_stdout_set_file_name:
0x00002f90      48893d098321.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x21b2a0:8]=0
0x00002f97      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00002f98      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00002fa0      40883df18221.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x21b298:1]=0
0x00002fa7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00002fa8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00002fb0      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00002fb1      53             push rbx
0x00002fb2      4883ec08       sub rsp, 8
0x00002fb6      488b3dcb6021.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x219088:8]=0
0x00002fbd      e85e0b0100     call sym.close_stream
0x00002fc2      85c0           test eax, eax
0x00002fc4      7416           je 0x2fdc
0x00002fc6      e8d5e8ffff     call sym.imp.__errno_location
0x00002fcb      803dc6822100.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x21b298:1]=0
0x00002fd2      4889c3         mov rbx, rax
0x00002fd5      741c           je 0x2ff3
0x00002fd7      833820         cmp dword [rax], 0x20
0x00002fda      7517           jne 0x2ff3
0x00002fdc      488b3ddd6021.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2190c0:8]=0
0x00002fe3      e8380b0100     call sym.close_stream
0x00002fe8      85c0           test eax, eax
0x00002fea      7546           jne 0x3032
0x00002fec      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00002ff0      5b             pop rbx
0x00002ff1      5d             pop rbp
0x00002ff2      c3             ret
0x00002ff3      488d35d21201.  lea rsi, [0x000142cc]                   ; ../coreutils-8.31/lib/closeout.c:122 ; "write error"
0x00002ffa      31ff           xor edi, edi
0x00002ffc      ba05000000     mov edx, 5
0x00003001      e85ae9ffff     call sym.imp.dcgettext
0x00003006      488b3d938221.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x21b2a0:8]=0
0x0000300d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00003010      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00003013      7428           je 0x303d
0x00003015      e8561c0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x0000301a      8b33           mov esi, dword [rbx]
0x0000301c      488d15591601.  lea rdx, str.s:__s                      ; 0x1467c ; "%s: %s"
0x00003023      4889c1         mov rcx, rax
0x00003026      4989e8         mov r8, rbp
0x00003029      31ff           xor edi, edi
0x0000302b      31c0           xor eax, eax
0x0000302d      e86eebffff     call sym.imp.error
0x00003032      8b3de05f2100   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x219018:4]=1
0x00003038      e893e8ffff     call sym.imp._exit
0x0000303d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x0000303f      488d153a1601.  lea rdx, [0x00014680]                   ; "%s"
0x00003046      4889c1         mov rcx, rax
0x00003049      31ff           xor edi, edi
0x0000304b      31c0           xor eax, eax
0x0000304d      e84eebffff     call sym.imp.error
0x00003052      ebde           jmp 0x3032
0x00003054      662e0f1f8400.  nop word cs:[rax + rax]
0x0000305e      6690           nop
;-- mfile_name_concat:
0x00003060      4157           push r15                                ; ../coreutils-8.31/lib/filenamecat-lgpl.c:48
0x00003062      4156           push r14
0x00003064      4989d7         mov r15, rdx
0x00003067      4155           push r13
0x00003069      4154           push r12
0x0000306b      4989fc         mov r12, rdi
0x0000306e      55             push rbp
0x0000306f      53             push rbx
0x00003070      4889f5         mov rbp, rsi
0x00003073      4883ec18       sub rsp, 0x18
0x00003077      e8240b0100     call sym.last_component                 ; ../coreutils-8.31/lib/filenamecat-lgpl.c:49
0x0000307c      4889c3         mov rbx, rax
0x0000307f      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:50
0x00003082      e8790b0100     call sym.base_len
0x00003087      4c29e3         sub rbx, r12                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:51
0x0000308a      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:50
0x0000308d      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:52
0x00003090      4801c3         add rbx, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:51
0x00003093      e8e8e8ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/filenamecat-lgpl.c:52
0x00003098      4d85ed         test r13, r13                           ; ../coreutils-8.31/lib/filenamecat-lgpl.c:54
0x0000309b      4989c6         mov r14, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:52
0x0000309e      7430           je 0x30d0                               ; ../coreutils-8.31/lib/filenamecat-lgpl.c:54
0x000030a0      41807c1cff2f   cmp byte [r12 + rbx - 1], 0x2f          ; ../coreutils-8.31/lib/filenamecat-lgpl.c:57
0x000030a6      0f84a4000000   je 0x3150
0x000030ac      31c0           xor eax, eax
0x000030ae      807d002f       cmp byte [rbp], 0x2f
0x000030b2      ba00000000     mov edx, 0
0x000030b7      0f95c0         setne al
0x000030ba      48890424       mov qword [rsp], rax
0x000030be      b82f000000     mov eax, 0x2f                           ; '/'
0x000030c3      0f44c2         cmove eax, edx
0x000030c6      8844240f       mov byte [rsp + 0xf], al
0x000030ca      eb22           jmp 0x30ee
0x000030cc      0f1f4000       nop dword [rax]
0x000030d0      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:60
0x000030d2      807d002f       cmp byte [rbp], 0x2f
0x000030d6      ba00000000     mov edx, 0
0x000030db      0f94c0         sete al
0x000030de      48890424       mov qword [rsp], rax
0x000030e2      b82e000000     mov eax, 0x2e                           ; '.'
0x000030e7      0f45c2         cmovne eax, edx
0x000030ea      8844240f       mov byte [rsp + 0xf], al
0x000030ee      4a8d7c3301     lea rdi, [rbx + r14 + 1]                ; ../coreutils-8.31/lib/filenamecat-lgpl.c:70
0x000030f3      48033c24       add rdi, qword [rsp]
0x000030f7      e8c4e9ffff     call sym.imp.malloc
0x000030fc      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/filenamecat-lgpl.c:73
0x000030ff      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:70
0x00003102      7432           je 0x3136                               ; ../coreutils-8.31/lib/filenamecat-lgpl.c:73
0x00003104      4889c7         mov rdi, rax                            ; string_fortified.h:48   return __builtin___mempcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00003107      4889da         mov rdx, rbx
0x0000310a      4c89e6         mov rsi, r12
0x0000310d      e86eeaffff     call sym.imp.mempcpy
0x00003112      0fb64c240f     movzx ecx, byte [rsp + 0xf]             ; ../coreutils-8.31/lib/filenamecat-lgpl.c:77
0x00003117      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/filenamecat-lgpl.c:78
0x0000311b      4801c7         add rdi, rax
0x0000311e      4d85ff         test r15, r15                           ; ../coreutils-8.31/lib/filenamecat-lgpl.c:80
0x00003121      8808           mov byte [rax], cl                      ; ../coreutils-8.31/lib/filenamecat-lgpl.c:77
0x00003123      7403           je 0x3128                               ; ../coreutils-8.31/lib/filenamecat-lgpl.c:80
0x00003125      49893f         mov qword [r15], rdi                    ; ../coreutils-8.31/lib/filenamecat-lgpl.c:81
0x00003128      4c89f2         mov rdx, r14                            ; string_fortified.h:48   return __builtin___mempcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000312b      4889ee         mov rsi, rbp
0x0000312e      e84deaffff     call sym.imp.mempcpy
0x00003133      c60000         mov byte [rax], 0                       ; ../coreutils-8.31/lib/filenamecat-lgpl.c:84
0x00003136      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/filenamecat-lgpl.c:87
0x0000313a      4c89e8         mov rax, r13
0x0000313d      5b             pop rbx
0x0000313e      5d             pop rbp
0x0000313f      415c           pop r12
0x00003141      415d           pop r13
0x00003143      415e           pop r14
0x00003145      415f           pop r15
0x00003147      c3             ret
0x00003148      0f1f84000000.  nop dword [rax + rax]
0x00003150      48c704240000.  mov qword [rsp], 0
0x00003158      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/filenamecat-lgpl.c:53
0x0000315d      eb8f           jmp 0x30ee
0x0000315f      90             nop
;-- set_program_name:
0x00003160      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00003163      53             push rbx
0x00003164      7477           je 0x31dd                               ; ../coreutils-8.31/lib/progname.c:51
0x00003166      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x0000316b      4889fb         mov rbx, rdi
0x0000316e      e84de8ffff     call sym.imp.strrchr
0x00003173      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00003176      7455           je 0x31cd
0x00003178      4c8d4001       lea r8, [rax + 1]
0x0000317c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x0000317f      4829da         sub rdx, rbx
0x00003182      4883fa06       cmp rdx, 6
0x00003186      7e45           jle 0x31cd
0x00003188      488d70fa       lea rsi, [rax - 6]
0x0000318c      488d3d2d1501.  lea rdi, str..libs                      ; 0x146c0 ; "/.libs/"
0x00003193      b907000000     mov ecx, 7
0x00003198      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000319a      0f97c2         seta dl
0x0000319d      80da00         sbb dl, 0
0x000031a0      84d2           test dl, dl
0x000031a2      7529           jne 0x31cd
0x000031a4      488d3d1d1501.  lea rdi, [0x000146c8]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x000031ab      b903000000     mov ecx, 3
0x000031b0      4c89c6         mov rsi, r8
0x000031b3      4c89c3         mov rbx, r8
0x000031b6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000031b8      0f97c2         seta dl
0x000031bb      80da00         sbb dl, 0
0x000031be      84d2           test dl, dl
0x000031c0      750b           jne 0x31cd
0x000031c2      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x000031c6      48891db35e21.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x219080:8]=0
0x000031cd      48891dd48021.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x21b2a8:8]=0
0x000031d4      48891dc55e21.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x2190a0:8]=0
0x000031db      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x000031dc      c3             ret
0x000031dd      488b0ddc5e21.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2190c0:8]=0
0x000031e4      488d3d9d1401.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x14688 ; "A NULL argv[0] was passed through an exec system call.\n"
0x000031eb      ba37000000     mov edx, 0x37                           ; '7'
0x000031f0      be01000000     mov esi, 1
0x000031f5      e816eaffff     call sym.imp.fwrite
0x000031fa      e891e6ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x000031ff      90             nop
;-- gettext_quote.part.1:
0x00003200      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00003201      53             push rbx
0x00003202      4889fd         mov rbp, rdi
0x00003205      89f3           mov ebx, esi
0x00003207      4883ec08       sub rsp, 8
0x0000320b      e8000b0100     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00003210      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00003213      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003216      80fa55         cmp dl, 0x55
0x00003219      7475           je 0x3290
0x0000321b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x0000321e      7420           je 0x3240
0x00003220      488d05b41401.  lea rax, str.l______l                   ; 0x146db ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003227      488d15af1401.  lea rdx, [0x000146dd]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000322e      83fb09         cmp ebx, 9
0x00003231      480f45c2       cmovne rax, rdx
0x00003235      4883c408       add rsp, 8
0x00003239      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x0000323a      5d             pop rbp
0x0000323b      c3             ret
0x0000323c      0f1f4000       nop dword [rax]
0x00003240      0fb65001       movzx edx, byte [rax + 1]
0x00003244      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003247      80fa42         cmp dl, 0x42
0x0000324a      75d4           jne 0x3220
0x0000324c      80780231       cmp byte [rax + 2], 0x31
0x00003250      75ce           jne 0x3220
0x00003252      80780338       cmp byte [rax + 3], 0x38
0x00003256      75c8           jne 0x3220
0x00003258      80780430       cmp byte [rax + 4], 0x30
0x0000325c      75c2           jne 0x3220
0x0000325e      80780533       cmp byte [rax + 5], 0x33
0x00003262      75bc           jne 0x3220
0x00003264      80780630       cmp byte [rax + 6], 0x30
0x00003268      75b6           jne 0x3220
0x0000326a      80780700       cmp byte [rax + 7], 0
0x0000326e      75b0           jne 0x3220
0x00003270      807d0060       cmp byte [rbp], 0x60
0x00003274      488d05591401.  lea rax, [0x000146d4]
0x0000327b      488d15561401.  lea rdx, [0x000146d8]
0x00003282      480f45c2       cmovne rax, rdx
0x00003286      4883c408       add rsp, 8
0x0000328a      5b             pop rbx
0x0000328b      5d             pop rbp
0x0000328c      c3             ret
0x0000328d      0f1f00         nop dword [rax]
0x00003290      0fb65001       movzx edx, byte [rax + 1]
0x00003294      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003297      80fa54         cmp dl, 0x54
0x0000329a      7584           jne 0x3220
0x0000329c      0fb65002       movzx edx, byte [rax + 2]
0x000032a0      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000032a3      80fa46         cmp dl, 0x46
0x000032a6      0f8574ffffff   jne 0x3220
0x000032ac      8078032d       cmp byte [rax + 3], 0x2d
0x000032b0      0f856affffff   jne 0x3220
0x000032b6      80780438       cmp byte [rax + 4], 0x38
0x000032ba      0f8560ffffff   jne 0x3220
0x000032c0      80780500       cmp byte [rax + 5], 0
0x000032c4      0f8556ffffff   jne 0x3220
0x000032ca      807d0060       cmp byte [rbp], 0x60
0x000032ce      488d05f71301.  lea rax, [0x000146cc]                   ; "\u2018"
0x000032d5      488d15f41301.  lea rdx, [0x000146d0]                   ; "\u2019"
0x000032dc      480f45c2       cmovne rax, rdx
0x000032e0      4883c408       add rsp, 8
0x000032e4      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x000032e5      5d             pop rbp
0x000032e6      c3             ret
0x000032e7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x000032f0      4157           push r15
0x000032f2      4156           push r14
0x000032f4      4589c7         mov r15d, r8d
0x000032f7      4155           push r13
0x000032f9      4154           push r12
0x000032fb      4989fe         mov r14, rdi
0x000032fe      55             push rbp
0x000032ff      53             push rbx
0x00003300      4489cb         mov ebx, r9d
0x00003303      4989f5         mov r13, rsi
0x00003306      4889cd         mov rbp, rcx
0x00003309      83e302         and ebx, 2
0x0000330c      4881ecb80000.  sub rsp, 0xb8
0x00003313      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x0000331b      4889542410     mov qword [rsp + 0x10], rdx
0x00003320      4489442408     mov dword [rsp + 8], r8d
0x00003325      44894c2478     mov dword [rsp + 0x78], r9d
0x0000332a      4889442420     mov qword [rsp + 0x20], rax
0x0000332f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00003337      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x0000333c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00003344      4889442460     mov qword [rsp + 0x60], rax
0x00003349      64488b042528.  mov rax, qword fs:[0x28]
0x00003352      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000335a      31c0           xor eax, eax
0x0000335c      e80fe6ffff     call sym.imp.__ctype_get_mb_cur_max
0x00003361      4183ff0a       cmp r15d, 0xa
0x00003365      4889442458     mov qword [rsp + 0x58], rax
0x0000336a      0f87af110000   ja 0x451f
0x00003370      488d0dc91301.  lea rcx, [0x00014740]
0x00003377      4489fa         mov edx, r15d
0x0000337a      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000337e      4801c8         add rax, rcx
0x00003381      ffe0           jmp rax
0x00003383      c644240e01     mov byte [rsp + 0xe], 1
0x00003388      c644247c00     mov byte [rsp + 0x7c], 0
0x0000338d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00003390      48c744245000.  mov qword [rsp + 0x50], 0
0x00003399      c644240f01     mov byte [rsp + 0xf], 1
0x0000339e      c644240d00     mov byte [rsp + 0xd], 0
0x000033a3      488d05331301.  lea rax, [0x000146dd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000033aa      48c744241801.  mov qword [rsp + 0x18], 1
0x000033b3      4531ff         xor r15d, r15d
0x000033b6      c74424080200.  mov dword [rsp + 8], 2
0x000033be      4889442448     mov qword [rsp + 0x48], rax
0x000033c3      4531db         xor r11d, r11d
0x000033c6      4889e8         mov rax, rbp
0x000033c9      4589e0         mov r8d, r12d
0x000033cc      4c89dd         mov rbp, r11
0x000033cf      4989c3         mov r11, rax
0x000033d2      660f1f440000   nop word [rax + rax]
0x000033d8      4939eb         cmp r11, rbp
0x000033db      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x000033df      4983fbff       cmp r11, 0xffffffffffffffff
0x000033e3      750d           jne 0x33f2
0x000033e5      488b442410     mov rax, qword [rsp + 0x10]
0x000033ea      803c2800       cmp byte [rax + rbp], 0
0x000033ee      410f95c4       setne r12b
0x000033f2      4584e4         test r12b, r12b
0x000033f5      0f8455060000   je 0x3a50
0x000033fb      837c240802     cmp dword [rsp + 8], 2
0x00003400      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003405      4c8d0c2f       lea r9, [rdi + rbp]
0x00003409      0f95c0         setne al
0x0000340c      2244240d       and al, byte [rsp + 0xd]
0x00003410      4189c2         mov r10d, eax
0x00003413      0f84a7000000   je 0x34c0
0x00003419      488b442418     mov rax, qword [rsp + 0x18]
0x0000341e      4885c0         test rax, rax
0x00003421      0f8429040000   je 0x3850
0x00003427      4983fbff       cmp r11, 0xffffffffffffffff
0x0000342b      488d5c0500     lea rbx, [rbp + rax]
0x00003430      752e           jne 0x3460
0x00003432      4883f801       cmp rax, 1
0x00003436      7628           jbe 0x3460
0x00003438      4488442438     mov byte [rsp + 0x38], r8b
0x0000343d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00003442      4c894c2428     mov qword [rsp + 0x28], r9
0x00003447      e834e5ffff     call sym.imp.strlen
0x0000344c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00003452      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00003458      4989c3         mov r11, rax
0x0000345b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00003460      4c39db         cmp rbx, r11
0x00003463      4488542428     mov byte [rsp + 0x28], r10b
0x00003468      0f87b2050000   ja 0x3a20
0x0000346e      488b542418     mov rdx, qword [rsp + 0x18]
0x00003473      488b742448     mov rsi, qword [rsp + 0x48]
0x00003478      4c89cf         mov rdi, r9
0x0000347b      4c895c2440     mov qword [rsp + 0x40], r11
0x00003480      4488442438     mov byte [rsp + 0x38], r8b
0x00003485      4c894c2430     mov qword [rsp + 0x30], r9
0x0000348a      e8b1e5ffff     call sym.imp.memcmp
0x0000348f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00003491      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003496      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x0000349c      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x000034a1      0f8579050000   jne 0x3a20
0x000034a7      807c240f00     cmp byte [rsp + 0xf], 0
0x000034ac      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x000034b2      0f857d0f0000   jne 0x4435
0x000034b8      0f1f84000000.  nop dword [rax + rax]
0x000034c0      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x000034c4      80fb7e         cmp bl, 0x7e
0x000034c7      0f871b030000   ja 0x37e8
0x000034cd      488d0d981201.  lea rcx, [0x0001476c]
0x000034d4      0fb6d3         movzx edx, bl
0x000034d7      48630491       movsxd rax, dword [rcx + rdx*4]
0x000034db      4801c8         add rax, rcx
0x000034de      ffe0           jmp rax
0x000034e0      4531d2         xor r10d, r10d
0x000034e3      4983fb01       cmp r11, 1
0x000034e7      0f95c0         setne al
0x000034ea      4983fbff       cmp r11, 0xffffffffffffffff
0x000034ee      750c           jne 0x34fc
0x000034f0      488b442410     mov rax, qword [rsp + 0x10]
0x000034f5      80780100       cmp byte [rax + 1], 0
0x000034f9      0f95c0         setne al
0x000034fc      837c240802     cmp dword [rsp + 8], 2
0x00003501      0f94c2         sete dl
0x00003504      84c0           test al, al
0x00003506      0f844c020000   je 0x3758
0x0000350c      4531e4         xor r12d, r12d
0x0000350f      31c0           xor eax, eax
0x00003511      0f1f80000000.  nop dword [rax]
0x00003518      807c240d01     cmp byte [rsp + 0xd], 1
0x0000351d      0f850f010000   jne 0x3632
0x00003523      84d2           test dl, dl
0x00003525      0f8507010000   jne 0x3632
0x0000352b      488b742420     mov rsi, qword [rsp + 0x20]
0x00003530      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00003533      7414           je 0x3549
0x00003535      89da           mov edx, ebx
0x00003537      c0ea05         shr dl, 5
0x0000353a      0fb6d2         movzx edx, dl
0x0000353d      8b1496         mov edx, dword [rsi + rdx*4]
0x00003540      0fa3da         bt edx, ebx
0x00003543      0f824a010000   jb 0x3693
0x00003549      4584d2         test r10b, r10b
0x0000354c      0f8541010000   jne 0x3693
0x00003552      83f001         xor eax, 1
0x00003555      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00003559      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x0000355c      84c0           test al, al
0x0000355e      7420           je 0x3580                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00003560      4d39fd         cmp r13, r15
0x00003563      7605           jbe 0x356a
0x00003565      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000356a      498d4701       lea rax, [r15 + 1]
0x0000356e      4939c5         cmp r13, rax
0x00003571      7606           jbe 0x3579
0x00003573      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003579      4983c702       add r15, 2
0x0000357d      4531c0         xor r8d, r8d
0x00003580      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00003583      7304           jae 0x3589                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00003585      43881c3e       mov byte [r14 + r15], bl
0x00003589      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x0000358e      4983c701       add r15, 1
0x00003592      b800000000     mov eax, 0
0x00003597      4584e4         test r12b, r12b
0x0000359a      0f44f8         cmove edi, eax
0x0000359d      40887c240e     mov byte [rsp + 0xe], dil
0x000035a2      e931feffff     jmp 0x33d8
0x000035a7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x000035b0      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x000035b3      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x000035b7      83f802         cmp eax, 2
0x000035ba      0f84b8050000   je 0x3b78
0x000035c0      83f805         cmp eax, 5
0x000035c3      0f846f050000   je 0x3b38
0x000035c9      83f802         cmp eax, 2
0x000035cc      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000035d1      0f94c2         sete dl
0x000035d4      4531e4         xor r12d, r12d
0x000035d7      31c0           xor eax, eax
0x000035d9      e93affffff     jmp 0x3518
0x000035de      6690           nop
0x000035e0      4531d2         xor r10d, r10d
0x000035e3      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x000035e8      0f8402050000   je 0x3af0
0x000035ee      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x000035f3      31d2           xor edx, edx
0x000035f5      31c0           xor eax, eax
0x000035f7      bb27000000     mov ebx, 0x27                           ; '''
0x000035fc      e917ffffff     jmp 0x3518
0x00003601      0f1f80000000.  nop dword [rax]
0x00003608      ba09000000     mov edx, 9
0x0000360d      bb74000000     mov ebx, 0x74                           ; 't'
0x00003612      837c240802     cmp dword [rsp + 8], 2
0x00003617      0f94c0         sete al
0x0000361a      2244240f       and al, byte [rsp + 0xf]
0x0000361e      0f854a010000   jne 0x376e
0x00003624      807c240d00     cmp byte [rsp + 0xd], 0
0x00003629      7565           jne 0x3690
0x0000362b      89d3           mov ebx, edx
0x0000362d      4531e4         xor r12d, r12d
0x00003630      31c0           xor eax, eax
0x00003632      807c240f00     cmp byte [rsp + 0xf], 0
0x00003637      0f85eefeffff   jne 0x352b
0x0000363d      e907ffffff     jmp 0x3549                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00003642      660f1f440000   nop word [rax + rax]
0x00003648      ba08000000     mov edx, 8
0x0000364d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003652      ebd0           jmp 0x3624
0x00003654      0f1f4000       nop dword [rax]
0x00003658      837c240802     cmp dword [rsp + 8], 2
0x0000365d      0f84cd030000   je 0x3a30
0x00003663      807c240d00     cmp byte [rsp + 0xd], 0
0x00003668      0f8412020000   je 0x3880
0x0000366e      807c240f00     cmp byte [rsp + 0xf], 0
0x00003673      0f8407020000   je 0x3880
0x00003679      48837c241800   cmp qword [rsp + 0x18], 0
0x0000367f      0f85b6030000   jne 0x3a3b
0x00003685      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000368a      660f1f440000   nop word [rax + rax]
0x00003690      4531e4         xor r12d, r12d
0x00003693      837c240802     cmp dword [rsp + 8], 2
0x00003698      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x0000369b      807c240f00     cmp byte [rsp + 0xf], 0
0x000036a0      89d0           mov eax, edx
0x000036a2      0f8550080000   jne 0x3ef8
0x000036a8      4489c0         mov eax, r8d
0x000036ab      83f001         xor eax, 1
0x000036ae      20d0           and al, dl
0x000036b0      742f           je 0x36e1
0x000036b2      4d39fd         cmp r13, r15
0x000036b5      7605           jbe 0x36bc
0x000036b7      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000036bc      498d5701       lea rdx, [r15 + 1]
0x000036c0      4939d5         cmp r13, rdx
0x000036c3      7606           jbe 0x36cb
0x000036c5      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000036cb      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x000036cf      4939d5         cmp r13, rdx
0x000036d2      7606           jbe 0x36da
0x000036d4      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000036da      4983c703       add r15, 3
0x000036de      4189c0         mov r8d, eax
0x000036e1      4d39fd         cmp r13, r15
0x000036e4      7605           jbe 0x36eb
0x000036e6      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000036eb      4983c701       add r15, 1
0x000036ef      4883c501       add rbp, 1
0x000036f3      e988feffff     jmp 0x3580
0x000036f8      0f1f84000000.  nop dword [rax + rax]
0x00003700      807c240d00     cmp byte [rsp + 0xd], 0
0x00003705      0f85c8010000   jne 0x38d3
0x0000370b      31d2           xor edx, edx
0x0000370d      f644247801     test byte [rsp + 0x78], 1
0x00003712      0f8413ffffff   je 0x362b
0x00003718      4883c501       add rbp, 1
0x0000371c      e9b7fcffff     jmp 0x33d8
0x00003721      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00003728      837c240802     cmp dword [rsp + 8], 2
0x0000372d      0f94c2         sete dl
0x00003730      31c0           xor eax, eax
0x00003732      e9e1fdffff     jmp 0x3518
0x00003737      660f1f840000.  nop word [rax + rax]
0x00003740      ba07000000     mov edx, 7
0x00003745      bb61000000     mov ebx, 0x61                           ; 'a'
0x0000374a      e9d5feffff     jmp 0x3624
0x0000374f      90             nop
0x00003750      837c240802     cmp dword [rsp + 8], 2
0x00003755      0f94c2         sete dl
0x00003758      4885ed         test rbp, rbp
0x0000375b      0f85abfdffff   jne 0x350c
0x00003761      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003766      20d0           and al, dl
0x00003768      0f84aafdffff   je 0x3518
0x0000376e      4c89dd         mov rbp, r11
0x00003771      c74424080200.  mov dword [rsp + 8], 2
0x00003779      e9fb060000     jmp 0x3e79
0x0000377e      6690           nop
0x00003780      837c240802     cmp dword [rsp + 8], 2
0x00003785      0f94c2         sete dl
0x00003788      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x0000378b      ebd4           jmp 0x3761
0x0000378d      0f1f00         nop dword [rax]
0x00003790      837c240802     cmp dword [rsp + 8], 2
0x00003795      bb20000000     mov ebx, 0x20                           ; "@"
0x0000379a      0f94c2         sete dl
0x0000379d      ebc2           jmp 0x3761
0x0000379f      90             nop
0x000037a0      ba0d000000     mov edx, 0xd
0x000037a5      bb72000000     mov ebx, 0x72                           ; 'r'
0x000037aa      e963feffff     jmp 0x3612
0x000037af      90             nop
0x000037b0      ba0c000000     mov edx, 0xc
0x000037b5      bb66000000     mov ebx, 0x66                           ; 'f'
0x000037ba      e965feffff     jmp 0x3624
0x000037bf      90             nop
0x000037c0      ba0b000000     mov edx, 0xb
0x000037c5      bb76000000     mov ebx, 0x76                           ; 'v'
0x000037ca      e955feffff     jmp 0x3624
0x000037cf      90             nop
0x000037d0      ba0a000000     mov edx, 0xa
0x000037d5      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x000037da      e933feffff     jmp 0x3612
0x000037df      90             nop
0x000037e0      4531d2         xor r10d, r10d
0x000037e3      0f1f440000     nop dword [rax + rax]
0x000037e8      48837c245801   cmp qword [rsp + 0x58], 1
0x000037ee      0f85a4030000   jne 0x3b98
0x000037f4      4c895c2438     mov qword [rsp + 0x38], r11
0x000037f9      4488442430     mov byte [rsp + 0x30], r8b
0x000037fe      4488542428     mov byte [rsp + 0x28], r10b
0x00003803      e868e4ffff     call sym.imp.__ctype_b_loc
0x00003808      488b08         mov rcx, qword [rax]
0x0000380b      0fb6d3         movzx edx, bl
0x0000380e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003814      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x0000381a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0000381f      bf01000000     mov edi, 1
0x00003824      0fb70451       movzx eax, word [rcx + rdx*2]
0x00003828      66250040       and ax, 0x4000
0x0000382c      410f95c4       setne r12b
0x00003830      0f94c0         sete al
0x00003833      2244240d       and al, byte [rsp + 0xd]
0x00003837      84c0           test al, al
0x00003839      0f8592090000   jne 0x41d1
0x0000383f      837c240802     cmp dword [rsp + 8], 2
0x00003844      0f94c2         sete dl
0x00003847      e9ccfcffff     jmp 0x3518
0x0000384c      0f1f4000       nop dword [rax]
0x00003850      410fb619       movzx ebx, byte [r9]
0x00003854      80fb7e         cmp bl, 0x7e
0x00003857      7787           ja 0x37e0
0x00003859      488d0d081101.  lea rcx, [0x00014968]
0x00003860      0fb6d3         movzx edx, bl
0x00003863      48630491       movsxd rax, dword [rcx + rdx*4]
0x00003867      4801c8         add rax, rcx
0x0000386a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x0000386c      0f1f4000       nop dword [rax]
0x00003870      4531d2         xor r10d, r10d
0x00003873      807c240d00     cmp byte [rsp + 0xd], 0
0x00003878      0f85f0fdffff   jne 0x366e
0x0000387e      6690           nop
0x00003880      ba5c000000     mov edx, 0x5c                           ; '\'
0x00003885      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000388a      e995fdffff     jmp 0x3624
0x0000388f      90             nop
0x00003890      ba0c000000     mov edx, 0xc
0x00003895      4531d2         xor r10d, r10d
0x00003898      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000389d      e982fdffff     jmp 0x3624
0x000038a2      660f1f440000   nop word [rax + rax]
0x000038a8      ba0a000000     mov edx, 0xa
0x000038ad      4531d2         xor r10d, r10d
0x000038b0      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x000038b5      e958fdffff     jmp 0x3612
0x000038ba      660f1f440000   nop word [rax + rax]
0x000038c0      bb61000000     mov ebx, 0x61                           ; 'a'
0x000038c5      e9c6fdffff     jmp 0x3690
0x000038ca      660f1f440000   nop word [rax + rax]
0x000038d0      4531d2         xor r10d, r10d
0x000038d3      837c240802     cmp dword [rsp + 8], 2
0x000038d8      0f94c2         sete dl
0x000038db      807c240f00     cmp byte [rsp + 0xf], 0
0x000038e0      0f85940b0000   jne 0x447a
0x000038e6      4489c0         mov eax, r8d
0x000038e9      4c89f9         mov rcx, r15
0x000038ec      83f001         xor eax, 1
0x000038ef      20d0           and al, dl
0x000038f1      742d           je 0x3920
0x000038f3      4d39fd         cmp r13, r15
0x000038f6      7605           jbe 0x38fd
0x000038f8      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000038fd      498d4f01       lea rcx, [r15 + 1]
0x00003901      4939cd         cmp r13, rcx
0x00003904      7606           jbe 0x390c
0x00003906      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000390c      498d4f02       lea rcx, [r15 + 2]
0x00003910      4939cd         cmp r13, rcx
0x00003913      0f8730060000   ja 0x3f49
0x00003919      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x0000391d      4189c0         mov r8d, eax
0x00003920      4939cd         cmp r13, rcx
0x00003923      7605           jbe 0x392a
0x00003925      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000392a      837c240802     cmp dword [rsp + 8], 2
0x0000392f      4c8d7901       lea r15, [rcx + 1]
0x00003933      0f8400060000   je 0x3f39
0x00003939      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000393d      4c39d8         cmp rax, r11
0x00003940      7319           jae 0x395b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00003942      488b442410     mov rax, qword [rsp + 0x10]
0x00003947      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x0000394c      88442428       mov byte [rsp + 0x28], al
0x00003950      83e830         sub eax, 0x30
0x00003953      3c09           cmp al, 9
0x00003955      0f862e080000   jbe 0x4189
0x0000395b      4489e0         mov eax, r12d
0x0000395e      bb30000000     mov ebx, 0x30                           ; '0'
0x00003963      4531e4         xor r12d, r12d
0x00003966      e9adfbffff     jmp 0x3518                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x0000396b      0f1f440000     nop dword [rax + rax]
0x00003970      837c240802     cmp dword [rsp + 8], 2
0x00003975      4589d4         mov r12d, r10d
0x00003978      0f94c2         sete dl
0x0000397b      4531d2         xor r10d, r10d
0x0000397e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003980      e993fbffff     jmp 0x3518                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00003985      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003988      837c240802     cmp dword [rsp + 8], 2
0x0000398d      0f94c2         sete dl
0x00003990      4531d2         xor r10d, r10d
0x00003993      e9c0fdffff     jmp 0x3758
0x00003998      0f1f84000000.  nop dword [rax + rax]
0x000039a0      837c240802     cmp dword [rsp + 8], 2
0x000039a5      0f94c2         sete dl
0x000039a8      4531d2         xor r10d, r10d
0x000039ab      4531e4         xor r12d, r12d
0x000039ae      e9aefdffff     jmp 0x3761
0x000039b3      0f1f440000     nop dword [rax + rax]
0x000039b8      837c240802     cmp dword [rsp + 8], 2
0x000039bd      4589d4         mov r12d, r10d
0x000039c0      bb20000000     mov ebx, 0x20                           ; "@"
0x000039c5      0f94c2         sete dl
0x000039c8      4531d2         xor r10d, r10d
0x000039cb      e991fdffff     jmp 0x3761
0x000039d0      ba0d000000     mov edx, 0xd
0x000039d5      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x000039d8      bb72000000     mov ebx, 0x72                           ; 'r'
0x000039dd      e930fcffff     jmp 0x3612
0x000039e2      660f1f440000   nop word [rax + rax]
0x000039e8      bb76000000     mov ebx, 0x76                           ; 'v'
0x000039ed      e99efcffff     jmp 0x3690
0x000039f2      660f1f440000   nop word [rax + rax]
0x000039f8      ba09000000     mov edx, 9
0x000039fd      4531d2         xor r10d, r10d
0x00003a00      bb74000000     mov ebx, 0x74                           ; 't'
0x00003a05      e908fcffff     jmp 0x3612
0x00003a0a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00003a10      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003a15      e976fcffff     jmp 0x3690
0x00003a1a      660f1f440000   nop word [rax + rax]
0x00003a20      4531d2         xor r10d, r10d
0x00003a23      e998faffff     jmp 0x34c0
0x00003a28      0f1f84000000.  nop dword [rax + rax]
0x00003a30      807c240f00     cmp byte [rsp + 0xf], 0
0x00003a35      0f8565090000   jne 0x43a0
0x00003a3b      4883c501       add rbp, 1
0x00003a3f      4489c0         mov eax, r8d
0x00003a42      4531e4         xor r12d, r12d
0x00003a45      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00003a4a      e90dfbffff     jmp 0x355c
0x00003a4f      90             nop
0x00003a50      837c240802     cmp dword [rsp + 8], 2
0x00003a55      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003a5a      4589c4         mov r12d, r8d
0x00003a5d      4c89dd         mov rbp, r11
0x00003a60      0f94c2         sete dl
0x00003a63      89d8           mov eax, ebx
0x00003a65      4d85ff         test r15, r15
0x00003a68      0f94c1         sete cl
0x00003a6b      21d0           and eax, edx
0x00003a6d      20c8           and al, cl
0x00003a6f      0f85610a0000   jne 0x44d6                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00003a75      89d8           mov eax, ebx
0x00003a77      83f001         xor eax, 1
0x00003a7a      20c2           and dl, al
0x00003a7c      0f846a090000   je 0x43ec
0x00003a82      807c247c00     cmp byte [rsp + 0x7c], 0
0x00003a87      0f845d090000   je 0x43ea
0x00003a8d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00003a92      0f85f5090000   jne 0x448d
0x00003a98      4d85ed         test r13, r13
0x00003a9b      0f94c0         sete al
0x00003a9e      48837c245000   cmp qword [rsp + 0x50], 0
0x00003aa4      0f95c2         setne dl
0x00003aa7      20d0           and al, dl
0x00003aa9      0f841d0a0000   je 0x44cc
0x00003aaf      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003ab4      488d1d220c01.  lea rbx, [0x000146dd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003abb      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x00003abf      c74424080200.  mov dword [rsp + 8], 2
0x00003ac7      41bf01000000   mov r15d, 1
0x00003acd      48c744241801.  mov qword [rsp + 0x18], 1
0x00003ad6      c644240f00     mov byte [rsp + 0xf], 0
0x00003adb      48895c2448     mov qword [rsp + 0x48], rbx
0x00003ae0      8844247c       mov byte [rsp + 0x7c], al
0x00003ae4      e9daf8ffff     jmp 0x33c3
0x00003ae9      0f1f80000000.  nop dword [rax]
0x00003af0      807c240f00     cmp byte [rsp + 0xf], 0
0x00003af5      0f85a5080000   jne 0x43a0
0x00003afb      4d85ed         test r13, r13
0x00003afe      0f84fc030000   je 0x3f00                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00003b04      31d2           xor edx, edx
0x00003b06      48837c245000   cmp qword [rsp + 0x50], 0
0x00003b0c      0f85ee030000   jne 0x3f00                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00003b12      4c896c2450     mov qword [rsp + 0x50], r13
0x00003b17      4983c703       add r15, 3
0x00003b1b      31c0           xor eax, eax
0x00003b1d      448864247c     mov byte [rsp + 0x7c], r12b
0x00003b22      4531c0         xor r8d, r8d
0x00003b25      4989d5         mov r13, rdx
0x00003b28      bb27000000     mov ebx, 0x27                           ; '''
0x00003b2d      e917faffff     jmp 0x3549
0x00003b32      660f1f440000   nop word [rax + rax]
0x00003b38      f644247804     test byte [rsp + 0x78], 4
0x00003b3d      7421           je 0x3b60
0x00003b3f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00003b43      4c39d9         cmp rcx, r11
0x00003b46      7318           jae 0x3b60
0x00003b48      488b442410     mov rax, qword [rsp + 0x10]
0x00003b4d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00003b52      0f848a070000   je 0x42e2
0x00003b58      0f1f84000000.  nop dword [rax + rax]
0x00003b60      31d2           xor edx, edx
0x00003b62      4531e4         xor r12d, r12d
0x00003b65      31c0           xor eax, eax
0x00003b67      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003b6c      e9a7f9ffff     jmp 0x3518
0x00003b71      0f1f80000000.  nop dword [rax]
0x00003b78      807c240f00     cmp byte [rsp + 0xf], 0
0x00003b7d      0f851d080000   jne 0x43a0
0x00003b83      4531e4         xor r12d, r12d
0x00003b86      31c0           xor eax, eax
0x00003b88      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003b8d      e9b7f9ffff     jmp 0x3549                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00003b92      660f1f440000   nop word [rax + rax]
0x00003b98      488d8424a000.  lea rax, [rsp + 0xa0]
0x00003ba0      4983fbff       cmp r11, 0xffffffffffffffff
0x00003ba4      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00003bb0      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00003bb5      752d           jne 0x3be4
0x00003bb7      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003bbc      4488442440     mov byte [rsp + 0x40], r8b
0x00003bc1      4488542438     mov byte [rsp + 0x38], r10b
0x00003bc6      4c894c2430     mov qword [rsp + 0x30], r9
0x00003bcb      e8b0ddffff     call sym.imp.strlen
0x00003bd0      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00003bd6      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x00003bdc      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x00003bdf      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003be4      488d84249c00.  lea rax, [rsp + 0x9c]
0x00003bec      31c9           xor ecx, ecx
0x00003bee      885c247e       mov byte [rsp + 0x7e], bl
0x00003bf2      448844247d     mov byte [rsp + 0x7d], r8b
0x00003bf7      4889cb         mov rbx, rcx
0x00003bfa      4c898c248800.  mov qword [rsp + 0x88], r9
0x00003c02      4889442438     mov qword [rsp + 0x38], rax
0x00003c07      448854247f     mov byte [rsp + 0x7f], r10b
0x00003c0c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00003c14      4c89742440     mov qword [rsp + 0x40], r14
0x00003c19      4c896c2470     mov qword [rsp + 0x70], r13
0x00003c1e      4c895c2430     mov qword [rsp + 0x30], r11
0x00003c23      488b442410     mov rax, qword [rsp + 0x10]
0x00003c28      4c8d741d00     lea r14, [rbp + rbx]
0x00003c2d      488b542430     mov rdx, qword [rsp + 0x30]
0x00003c32      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00003c37      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00003c3c      4e8d2c30       lea r13, [rax + r14]
0x00003c40      4c29f2         sub rdx, r14
0x00003c43      4c89ee         mov rsi, r13
0x00003c46      e8351c0000     call sym.rpl_mbrtowc
0x00003c4b      4885c0         test rax, rax
0x00003c4e      4989c7         mov r15, rax
0x00003c51      744e           je 0x3ca1
0x00003c53      4883f8ff       cmp rax, 0xffffffffffffffff
0x00003c57      0f8418060000   je 0x4275
0x00003c5d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00003c61      0f849a050000   je 0x4201
0x00003c67      837c240802     cmp dword [rsp + 8], 2
0x00003c6c      0f94c0         sete al
0x00003c6f      2244240f       and al, byte [rsp + 0xf]
0x00003c73      0f8597010000   jne 0x3e10
0x00003c79      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00003c80      e8cbdfffff     call sym.imp.iswprint
0x00003c85      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00003c8a      85c0           test eax, eax
0x00003c8c      b800000000     mov eax, 0
0x00003c91      440f44e0       cmove r12d, eax
0x00003c95      4c01fb         add rbx, r15
0x00003c98      e8a3dfffff     call sym.imp.mbsinit
0x00003c9d      85c0           test eax, eax
0x00003c9f      7482           je 0x3c23
0x00003ca1      4489e2         mov edx, r12d
0x00003ca4      4889df         mov rdi, rbx
0x00003ca7      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003cad      83f201         xor edx, 1
0x00003cb0      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003cb5      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00003cbb      2254240d       and dl, byte [rsp + 0xd]
0x00003cbf      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003cc7      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003ccc      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003cd1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003cd6      4883ff01       cmp rdi, 1
0x00003cda      0f86fb050000   jbe 0x42db
0x00003ce0      4889f9         mov rcx, rdi
0x00003ce3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00003ce5      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x00003ceb      4801e9         add rcx, rbp
0x00003cee      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003cf3      e9b6000000     jmp 0x3dae
0x00003cf8      0f1f84000000.  nop dword [rax + rax]
0x00003d00      837c240802     cmp dword [rsp + 8], 2
0x00003d05      0f94c0         sete al
0x00003d08      4584c9         test r9b, r9b
0x00003d0b      0f85af040000   jne 0x41c0
0x00003d11      4489c6         mov esi, r8d
0x00003d14      83f601         xor esi, 1
0x00003d17      4020f0         and al, sil
0x00003d1a      742f           je 0x3d4b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x00003d1c      4d39fd         cmp r13, r15
0x00003d1f      7605           jbe 0x3d26
0x00003d21      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003d26      498d7701       lea rsi, [r15 + 1]
0x00003d2a      4939f5         cmp r13, rsi
0x00003d2d      7606           jbe 0x3d35                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x00003d2f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00003d35      498d7702       lea rsi, [r15 + 2]
0x00003d39      4939f5         cmp r13, rsi
0x00003d3c      7606           jbe 0x3d44
0x00003d3e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003d44      4983c703       add r15, 3
0x00003d48      4189c0         mov r8d, eax
0x00003d4b      4d39fd         cmp r13, r15
0x00003d4e      7605           jbe 0x3d55
0x00003d50      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003d55      498d4701       lea rax, [r15 + 1]
0x00003d59      4939c5         cmp r13, rax
0x00003d5c      760d           jbe 0x3d6b
0x00003d5e      89d8           mov eax, ebx
0x00003d60      c0e806         shr al, 6
0x00003d63      83c030         add eax, 0x30
0x00003d66      4388443e01     mov byte [r14 + r15 + 1], al
0x00003d6b      498d4702       lea rax, [r15 + 2]
0x00003d6f      4939c5         cmp r13, rax
0x00003d72      7610           jbe 0x3d84
0x00003d74      89d8           mov eax, ebx
0x00003d76      c0e803         shr al, 3
0x00003d79      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x00003d7c      83c030         add eax, 0x30
0x00003d7f      4388443e02     mov byte [r14 + r15 + 2], al
0x00003d84      83e307         and ebx, 7
0x00003d87      4883c501       add rbp, 1
0x00003d8b      4983c703       add r15, 3
0x00003d8f      83c330         add ebx, 0x30
0x00003d92      4839cd         cmp rbp, rcx
0x00003d95      0f83e5f7ffff   jae 0x3580
0x00003d9b      89d6           mov esi, edx
0x00003d9d      4d39fd         cmp r13, r15
0x00003da0      7604           jbe 0x3da6
0x00003da2      43881c3e       mov byte [r14 + r15], bl
0x00003da6      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00003daa      4983c701       add r15, 1
0x00003dae      84d2           test dl, dl
0x00003db0      0f854affffff   jne 0x3d00
0x00003db6      89f0           mov eax, esi
0x00003db8      83f001         xor eax, 1
0x00003dbb      4421c0         and eax, r8d
0x00003dbe      4584d2         test r10b, r10b
0x00003dc1      740e           je 0x3dd1
0x00003dc3      4d39fd         cmp r13, r15
0x00003dc6      7605           jbe 0x3dcd
0x00003dc8      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003dcd      4983c701       add r15, 1
0x00003dd1      4883c501       add rbp, 1
0x00003dd5      4839cd         cmp rbp, rcx
0x00003dd8      0f837ef7ffff   jae 0x355c
0x00003dde      84c0           test al, al
0x00003de0      0f84f8030000   je 0x41de
0x00003de6      4d39fd         cmp r13, r15
0x00003de9      7605           jbe 0x3df0
0x00003deb      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003df0      498d4701       lea rax, [r15 + 1]
0x00003df4      4939c5         cmp r13, rax
0x00003df7      7606           jbe 0x3dff
0x00003df9      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003dff      4983c702       add r15, 2
0x00003e03      4531d2         xor r10d, r10d
0x00003e06      4531c0         xor r8d, r8d
0x00003e09      eb92           jmp 0x3d9d
0x00003e0b      0f1f440000     nop dword [rax + rax]
0x00003e10      4983ff01       cmp r15, 1
0x00003e14      0f845ffeffff   je 0x3c79
0x00003e1a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003e1f      4a8d0c3f       lea rcx, [rdi + r15]
0x00003e23      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00003e28      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00003e2c      eb0f           jmp 0x3e3d
0x00003e2e      6690           nop
0x00003e30      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00003e34      4939d0         cmp r8, rdx
0x00003e37      0f843cfeffff   je 0x3c79
0x00003e3d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00003e40      83e95b         sub ecx, 0x5b
0x00003e43      80f921         cmp cl, 0x21
0x00003e46      77e8           ja 0x3e30                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00003e48      be01000000     mov esi, 1
0x00003e4d      48d3e6         shl rsi, cl
0x00003e50      4889f1         mov rcx, rsi
0x00003e53      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x00003e5d      4885f1         test rcx, rsi
0x00003e60      74ce           je 0x3e30
0x00003e62      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003e67      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003e6c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00003e71      c74424080200.  mov dword [rsp + 8], 2
0x00003e79      807c240d00     cmp byte [rsp + 0xd], 0
0x00003e7e      7410           je 0x3e90
0x00003e80      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00003e82      b804000000     mov eax, 4
0x00003e87      0f44442408     cmove eax, dword [rsp + 8]
0x00003e8c      89442408       mov dword [rsp + 8], eax
0x00003e90      4883ec08       sub rsp, 8
0x00003e94      4889e9         mov rcx, rbp
0x00003e97      4c89ee         mov rsi, r13
0x00003e9a      ff742468       push qword [rsp + 0x68]
0x00003e9e      ff742478       push qword [rsp + 0x78]
0x00003ea2      4c89f7         mov rdi, r14
0x00003ea5      6a00           push 0
0x00003ea7      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00003eaf      448b442428     mov r8d, dword [rsp + 0x28]
0x00003eb4      488b542430     mov rdx, qword [rsp + 0x30]
0x00003eb9      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x00003ebd      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00003ec2      4883c420       add rsp, 0x20
0x00003ec6      4989c7         mov r15, rax
0x00003ec9      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00003ed1      6448331c2528.  xor rbx, qword fs:[0x28]
0x00003eda      4c89f8         mov rax, r15
0x00003edd      0f8500060000   jne 0x44e3
0x00003ee3      4881c4b80000.  add rsp, 0xb8
0x00003eea      5b             pop rbx
0x00003eeb      5d             pop rbp
0x00003eec      415c           pop r12
0x00003eee      415d           pop r13
0x00003ef0      415e           pop r14
0x00003ef2      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00003ef4      c3             ret
0x00003ef5      0f1f00         nop dword [rax]
0x00003ef8      4c89dd         mov rbp, r11
0x00003efb      e979ffffff     jmp 0x3e79
0x00003f00      4d39fd         cmp r13, r15
0x00003f03      7605           jbe 0x3f0a
0x00003f05      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003f0a      498d4701       lea rax, [r15 + 1]
0x00003f0e      4939c5         cmp r13, rax
0x00003f11      7606           jbe 0x3f19
0x00003f13      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00003f19      498d4702       lea rax, [r15 + 2]
0x00003f1d      4939c5         cmp r13, rax
0x00003f20      0f86ec050000   jbe 0x4512
0x00003f26      4c89ea         mov rdx, r13
0x00003f29      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003f2f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003f34      e9d9fbffff     jmp 0x3b12
0x00003f39      4489e0         mov eax, r12d
0x00003f3c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00003f41      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00003f44      e900f6ffff     jmp 0x3549                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00003f49      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003f4f      e9c5f9ffff     jmp 0x3919
0x00003f54      85db           test ebx, ebx
0x00003f56      0f8527f4ffff   jne 0x3383
0x00003f5c      c644240d01     mov byte [rsp + 0xd], 1
0x00003f61      4d85ed         test r13, r13
0x00003f64      0f8590050000   jne 0x44fa
0x00003f6a      488d056c0701.  lea rax, [0x000146dd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003f71      48c744245000.  mov qword [rsp + 0x50], 0
0x00003f7a      c644240e01     mov byte [rsp + 0xe], 1
0x00003f7f      c644247c00     mov byte [rsp + 0x7c], 0
0x00003f84      4531e4         xor r12d, r12d
0x00003f87      c644240f00     mov byte [rsp + 0xf], 0
0x00003f8c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003f95      4889442448     mov qword [rsp + 0x48], rax
0x00003f9a      41bf01000000   mov r15d, 1
0x00003fa0      c74424080200.  mov dword [rsp + 8], 2
0x00003fa8      e916f4ffff     jmp 0x33c3                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x00003fad      0f1f00         nop dword [rax]
0x00003fb0      85db           test ebx, ebx
0x00003fb2      0f85f5030000   jne 0x43ad
0x00003fb8      4d85ed         test r13, r13
0x00003fbb      0f8425020000   je 0x41e6
0x00003fc1      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00003fc5      c644240e01     mov byte [rsp + 0xe], 1
0x00003fca      4531e4         xor r12d, r12d
0x00003fcd      c644247c00     mov byte [rsp + 0x7c], 0
0x00003fd2      48c744245000.  mov qword [rsp + 0x50], 0
0x00003fdb      488d05f90601.  lea rax, str.l______l                   ; 0x146db ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003fe2      c644240f00     mov byte [rsp + 0xf], 0
0x00003fe7      c644240d01     mov byte [rsp + 0xd], 1
0x00003fec      48c744241801.  mov qword [rsp + 0x18], 1
0x00003ff5      41bf01000000   mov r15d, 1
0x00003ffb      4889442448     mov qword [rsp + 0x48], rax
0x00004000      e9bef3ffff     jmp 0x33c3
0x00004005      488d05cf0601.  lea rax, str.l______l                   ; 0x146db ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000400c      c644240e01     mov byte [rsp + 0xe], 1
0x00004011      c644247c00     mov byte [rsp + 0x7c], 0
0x00004016      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00004019      48c744245000.  mov qword [rsp + 0x50], 0
0x00004022      c644240f01     mov byte [rsp + 0xf], 1
0x00004027      c644240d01     mov byte [rsp + 0xd], 1
0x0000402c      48c744241801.  mov qword [rsp + 0x18], 1
0x00004035      4531ff         xor r15d, r15d
0x00004038      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x0000403d      c74424080500.  mov dword [rsp + 8], 5
0x00004045      e979f3ffff     jmp 0x33c3
0x0000404a      c644240e01     mov byte [rsp + 0xe], 1
0x0000404f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004054      4531e4         xor r12d, r12d
0x00004057      48c744245000.  mov qword [rsp + 0x50], 0
0x00004060      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00004065      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00004068      c644240d01     mov byte [rsp + 0xd], 1
0x0000406d      48c744241800.  mov qword [rsp + 0x18], 0
0x00004076      48c744244800.  mov qword [rsp + 0x48], 0
0x0000407f      e93ff3ffff     jmp 0x33c3
0x00004084      837c24080a     cmp dword [rsp + 8], 0xa
0x00004089      7456           je 0x40e1
0x0000408b      488d354d0601.  lea rsi, [0x000146df]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00004092      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00004094      ba05000000     mov edx, 5
0x00004099      e8c2d8ffff     call sym.imp.dcgettext
0x0000409e      4889c1         mov rcx, rax
0x000040a1      4889442468     mov qword [rsp + 0x68], rax
0x000040a6      488d05320601.  lea rax, [0x000146df]                   ; "`"
0x000040ad      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x000040b0      0f8498030000   je 0x444e
0x000040b6      488d35200601.  lea rsi, [0x000146dd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000040bd      31ff           xor edi, edi
0x000040bf      ba05000000     mov edx, 5
0x000040c4      e897d8ffff     call sym.imp.dcgettext
0x000040c9      4889c1         mov rcx, rax
0x000040cc      4889442460     mov qword [rsp + 0x60], rax
0x000040d1      488d05050601.  lea rax, [0x000146dd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000040d8      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x000040db      0f8483030000   je 0x4464
0x000040e1      4531ff         xor r15d, r15d
0x000040e4      85db           test ebx, ebx
0x000040e6      0f84c1010000   je 0x42ad
0x000040ec      85db           test ebx, ebx
0x000040ee      488b5c2460     mov rbx, qword [rsp + 0x60]
0x000040f3      0f9544240f     setne byte [rsp + 0xf]
0x000040f8      4531e4         xor r12d, r12d
0x000040fb      4889df         mov rdi, rbx
0x000040fe      e87dd8ffff     call sym.imp.strlen
0x00004103      48895c2448     mov qword [rsp + 0x48], rbx
0x00004108      4889442418     mov qword [rsp + 0x18], rax
0x0000410d      c644240e01     mov byte [rsp + 0xe], 1
0x00004112      c644247c00     mov byte [rsp + 0x7c], 0
0x00004117      48c744245000.  mov qword [rsp + 0x50], 0
0x00004120      c644240d01     mov byte [rsp + 0xd], 1
0x00004125      e999f2ffff     jmp 0x33c3
0x0000412a      c644240e01     mov byte [rsp + 0xe], 1
0x0000412f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004134      4531e4         xor r12d, r12d
0x00004137      48c744245000.  mov qword [rsp + 0x50], 0
0x00004140      c644240f00     mov byte [rsp + 0xf], 0
0x00004145      4531ff         xor r15d, r15d
0x00004148      c644240d00     mov byte [rsp + 0xd], 0
0x0000414d      48c744241800.  mov qword [rsp + 0x18], 0
0x00004156      48c744244800.  mov qword [rsp + 0x48], 0
0x0000415f      e95ff2ffff     jmp 0x33c3
0x00004164      c644240e01     mov byte [rsp + 0xe], 1
0x00004169      c644247c00     mov byte [rsp + 0x7c], 0
0x0000416e      4531e4         xor r12d, r12d
0x00004171      48c744245000.  mov qword [rsp + 0x50], 0
0x0000417a      c644240f01     mov byte [rsp + 0xf], 1
0x0000417f      c644240d01     mov byte [rsp + 0xd], 1
0x00004184      e91af2ffff     jmp 0x33a3
0x00004189      4d39fd         cmp r13, r15
0x0000418c      7605           jbe 0x4193
0x0000418e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00004193      488d4102       lea rax, [rcx + 2]
0x00004197      4939c5         cmp r13, rax
0x0000419a      7606           jbe 0x41a2
0x0000419c      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x000041a2      4489e0         mov eax, r12d
0x000041a5      4c8d7903       lea r15, [rcx + 3]
0x000041a9      4531e4         xor r12d, r12d
0x000041ac      bb30000000     mov ebx, 0x30                           ; '0'
0x000041b1      e962f3ffff     jmp 0x3518
0x000041b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000041c0      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000041c5      4c89dd         mov rbp, r11
0x000041c8      885c240d       mov byte [rsp + 0xd], bl
0x000041cc      e9a8fcffff     jmp 0x3e79
0x000041d1      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000041d6      4531e4         xor r12d, r12d
0x000041d9      e902fbffff     jmp 0x3ce0
0x000041de      4531d2         xor r10d, r10d
0x000041e1      e9b7fbffff     jmp 0x3d9d
0x000041e6      48c744245000.  mov qword [rsp + 0x50], 0
0x000041ef      c644240e01     mov byte [rsp + 0xe], 1
0x000041f4      4531e4         xor r12d, r12d
0x000041f7      c644247c00     mov byte [rsp + 0x7c], 0
0x000041fc      e9dafdffff     jmp 0x3fdb
0x00004201      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00004206      4c89f6         mov rsi, r14
0x00004209      4c89e9         mov rcx, r13
0x0000420c      4889d8         mov rax, rbx
0x0000420f      4889df         mov rdi, rbx
0x00004212      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00004218      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000421d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00004225      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00004228      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000422e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004236      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000423b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00004240      7326           jae 0x4268
0x00004242      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00004245      7510           jne 0x4257
0x00004247      eb1f           jmp 0x4268
0x00004249      0f1f80000000.  nop dword [rax]
0x00004250      41803c0100     cmp byte [r9 + rax], 0
0x00004255      740e           je 0x4265
0x00004257      4883c001       add rax, 1
0x0000425b      488d540500     lea rdx, [rbp + rax]
0x00004260      4939d3         cmp r11, rdx
0x00004263      77eb           ja 0x4250
0x00004265      4889c7         mov rdi, rax
0x00004268      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000426d      4531e4         xor r12d, r12d
0x00004270      e961faffff     jmp 0x3cd6
0x00004275      4889df         mov rdi, rbx
0x00004278      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000427e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00004283      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00004289      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004291      4531e4         xor r12d, r12d
0x00004294      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004299      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000429e      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000042a3      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000042a8      e929faffff     jmp 0x3cd6
0x000042ad      488b542468     mov rdx, qword [rsp + 0x68]
0x000042b2      0fb602         movzx eax, byte [rdx]
0x000042b5      84c0           test al, al
0x000042b7      0f842ffeffff   je 0x40ec
0x000042bd      0f1f00         nop dword [rax]
0x000042c0      4d39fd         cmp r13, r15
0x000042c3      7604           jbe 0x42c9
0x000042c5      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x000042c9      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x000042cd      420fb6043a     movzx eax, byte [rdx + r15]
0x000042d2      84c0           test al, al
0x000042d4      75ea           jne 0x42c0
0x000042d6      e911feffff     jmp 0x40ec
0x000042db      89d0           mov eax, edx
0x000042dd      e955f5ffff     jmp 0x3837
0x000042e2      0fb61c08       movzx ebx, byte [rax + rcx]
0x000042e6      80fb3e         cmp bl, 0x3e
0x000042e9      0f8771f8ffff   ja 0x3b60
0x000042ef      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x000042f9      480fa3d8       bt rax, rbx
0x000042fd      0f835df8ffff   jae 0x3b60
0x00004303      807c240f00     cmp byte [rsp + 0xf], 0
0x00004308      0f85e4010000   jne 0x44f2                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x0000430e      4d39fd         cmp r13, r15
0x00004311      7605           jbe 0x4318
0x00004313      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00004318      498d4701       lea rax, [r15 + 1]
0x0000431c      4939c5         cmp r13, rax
0x0000431f      7606           jbe 0x4327
0x00004321      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00004327      498d4702       lea rax, [r15 + 2]
0x0000432b      4939c5         cmp r13, rax
0x0000432e      7606           jbe 0x4336
0x00004330      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00004336      498d4703       lea rax, [r15 + 3]
0x0000433a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x0000433d      7606           jbe 0x4345
0x0000433f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00004345      4983c704       add r15, 4
0x00004349      31d2           xor edx, edx
0x0000434b      4531e4         xor r12d, r12d
0x0000434e      31c0           xor eax, eax
0x00004350      4889cd         mov rbp, rcx
0x00004353      e9c0f1ffff     jmp 0x3518
0x00004358      85db           test ebx, ebx
0x0000435a      0f8488010000   je 0x44e8
0x00004360      488d05760301.  lea rax, [0x000146dd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004367      c644240e01     mov byte [rsp + 0xe], 1
0x0000436c      c644247c00     mov byte [rsp + 0x7c], 0
0x00004371      4531e4         xor r12d, r12d
0x00004374      48c744245000.  mov qword [rsp + 0x50], 0
0x0000437d      c644240f01     mov byte [rsp + 0xf], 1
0x00004382      c644240d00     mov byte [rsp + 0xd], 0
0x00004387      48c744241801.  mov qword [rsp + 0x18], 1
0x00004390      4531ff         xor r15d, r15d
0x00004393      4889442448     mov qword [rsp + 0x48], rax
0x00004398      e926f0ffff     jmp 0x33c3
0x0000439d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x000043a0      4c89dd         mov rbp, r11
0x000043a3      0fb644240f     movzx eax, byte [rsp + 0xf]
0x000043a8      e9ccfaffff     jmp 0x3e79
0x000043ad      488d05270301.  lea rax, str.l______l                   ; 0x146db ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000043b4      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x000043b9      c644247c00     mov byte [rsp + 0x7c], 0
0x000043be      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x000043c1      48c744245000.  mov qword [rsp + 0x50], 0
0x000043ca      c644240f01     mov byte [rsp + 0xf], 1
0x000043cf      c644240d01     mov byte [rsp + 0xd], 1
0x000043d4      48c744241801.  mov qword [rsp + 0x18], 1
0x000043dd      4531ff         xor r15d, r15d
0x000043e0      4889442448     mov qword [rsp + 0x48], rax
0x000043e5      e9d9efffff     jmp 0x33c3
0x000043ea      89d0           mov eax, edx
0x000043ec      488b5c2448     mov rbx, qword [rsp + 0x48]
0x000043f1      4885db         test rbx, rbx
0x000043f4      742c           je 0x4422
0x000043f6      84c0           test al, al
0x000043f8      7428           je 0x4422
0x000043fa      0fb60b         movzx ecx, byte [rbx]
0x000043fd      4889d8         mov rax, rbx
0x00004400      84c9           test cl, cl
0x00004402      741e           je 0x4422
0x00004404      4c89fa         mov rdx, r15
0x00004407      4c29f8         sub rax, r15
0x0000440a      4939d5         cmp r13, rdx
0x0000440d      7604           jbe 0x4413
0x0000440f      41880c16       mov byte [r14 + rdx], cl
0x00004413      4883c201       add rdx, 1
0x00004417      0fb60c10       movzx ecx, byte [rax + rdx]
0x0000441b      84c9           test cl, cl
0x0000441d      75eb           jne 0x440a
0x0000441f      4989d7         mov r15, rdx
0x00004422      4d39fd         cmp r13, r15
0x00004425      0f869efaffff   jbe 0x3ec9
0x0000442b      43c6043e00     mov byte [r14 + r15], 0
0x00004430      e994faffff     jmp 0x3ec9
0x00004435      837c240802     cmp dword [rsp + 8], 2
0x0000443a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000443f      4c89dd         mov rbp, r11
0x00004442      0f94c0         sete al
0x00004445      885c240d       mov byte [rsp + 0xd], bl
0x00004449      e92bfaffff     jmp 0x3e79
0x0000444e      8b742408       mov esi, dword [rsp + 8]
0x00004452      4889cf         mov rdi, rcx
0x00004455      e8a6edffff     call sym.gettext_quote.part.1
0x0000445a      4889442468     mov qword [rsp + 0x68], rax
0x0000445f      e952fcffff     jmp 0x40b6
0x00004464      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00004468      4889cf         mov rdi, rcx
0x0000446b      e890edffff     call sym.gettext_quote.part.1
0x00004470      4889442460     mov qword [rsp + 0x60], rax
0x00004475      e967fcffff     jmp 0x40e1
0x0000447a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000447f      4c89dd         mov rbp, r11
0x00004482      89d0           mov eax, edx
0x00004484      885c240d       mov byte [rsp + 0xd], bl
0x00004488      e9ecf9ffff     jmp 0x3e79
0x0000448d      4883ec08       sub rsp, 8
0x00004491      41b805000000   mov r8d, 5
0x00004497      4c89d9         mov rcx, r11
0x0000449a      ff742468       push qword [rsp + 0x68]
0x0000449e      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x000044a2      4c89f7         mov rdi, r14
0x000044a5      ff742438       push qword [rsp + 0x38]
0x000044a9      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x000044b1      488b542430     mov rdx, qword [rsp + 0x30]
0x000044b6      488b742470     mov rsi, qword [rsp + 0x70]
0x000044bb      e830eeffff     call sym.quotearg_buffer_restyled
0x000044c0      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x000044c4      4989c7         mov r15, rax
0x000044c7      e9fdf9ffff     jmp 0x3ec9
0x000044cc      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x000044d1      e916ffffff     jmp 0x43ec
0x000044d6      c74424080200.  mov dword [rsp + 8], 2
0x000044de      e996f9ffff     jmp 0x3e79
0x000044e3      e8a8d4ffff     call sym.imp.__stack_chk_fail
0x000044e8      c644240d00     mov byte [rsp + 0xd], 0
0x000044ed      e96ffaffff     jmp 0x3f61
0x000044f2      4c89dd         mov rbp, r11
0x000044f5      e996f9ffff     jmp 0x3e90
0x000044fa      c644240e01     mov byte [rsp + 0xe], 1
0x000044ff      31c0           xor eax, eax
0x00004501      4531e4         xor r12d, r12d
0x00004504      48c744245000.  mov qword [rsp + 0x50], 0
0x0000450d      e9a2f5ffff     jmp 0x3ab4
0x00004512      4c89ea         mov rdx, r13
0x00004515      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000451a      e9f3f5ffff     jmp 0x3b12
0x0000451f      e86cd3ffff     call sym.imp.abort
0x00004524      6690           nop
0x00004526      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00004530      4157           push r15
0x00004532      4156           push r14
0x00004534      4c63ff         movsxd r15, edi
0x00004537      4155           push r13
0x00004539      4154           push r12
0x0000453b      4989d6         mov r14, rdx
0x0000453e      55             push rbp
0x0000453f      53             push rbx
0x00004540      4889cd         mov rbp, rcx
0x00004543      4883ec28       sub rsp, 0x28
0x00004547      4889742408     mov qword [rsp + 8], rsi
0x0000454c      e84fd3ffff     call sym.imp.__errno_location
0x00004551      4989c5         mov r13, rax
0x00004554      8b00           mov eax, dword [rax]
0x00004556      4585ff         test r15d, r15d
0x00004559      488b1d004b21.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x219060:8]=0x219070 obj.slotvec0 ; "p\x90!"
0x00004560      89442418       mov dword [rsp + 0x18], eax
0x00004564      0f8867010000   js 0x46d1
0x0000456a      44393de74a21.  cmp dword [obj.nslots], r15d            ; [0x219058:4]=1
0x00004571      7f62           jg 0x45d5
0x00004573      4181ffffffff.  cmp r15d, 0x7fffffff
0x0000457a      0f8456010000   je 0x46d6
0x00004580      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004584      488d05e54a21.  lea rax, obj.slotvec0                   ; 0x219070
0x0000458b      4963f4         movsxd rsi, r12d
0x0000458e      48c1e604       shl rsi, 4
0x00004592      4839c3         cmp rbx, rax
0x00004595      0f8415010000   je 0x46b0
0x0000459b      4889df         mov rdi, rbx
0x0000459e      e84d100000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x000045a3      4889c3         mov rbx, rax
0x000045a6      488905b34a21.  mov qword [obj.slotvec], rax            ; [0x219060:8]=0x219070 obj.slotvec0 ; "p\x90!"
0x000045ad      48633da44a21.  movsxd rdi, dword [obj.nslots]          ; [0x219058:4]=1
0x000045b4      4489e2         mov edx, r12d
0x000045b7      31f6           xor esi, esi
0x000045b9      29fa           sub edx, edi
0x000045bb      48c1e704       shl rdi, 4
0x000045bf      4863d2         movsxd rdx, edx
0x000045c2      4801df         add rdi, rbx
0x000045c5      48c1e204       shl rdx, 4
0x000045c9      e842d4ffff     call sym.imp.memset
0x000045ce      448925834a21.  mov dword [obj.nslots], r12d            ; [0x219058:4]=1
0x000045d5      8b4504         mov eax, dword [rbp + 4]
0x000045d8      49c1e704       shl r15, 4
0x000045dc      4883ec08       sub rsp, 8
0x000045e0      4c01fb         add rbx, r15
0x000045e3      4c8d7d08       lea r15, [rbp + 8]
0x000045e7      448b4500       mov r8d, dword [rbp]
0x000045eb      4c8b1b         mov r11, qword [rbx]
0x000045ee      4c8b6308       mov r12, qword [rbx + 8]
0x000045f2      4c89f1         mov rcx, r14
0x000045f5      83c801         or eax, 1
0x000045f8      89442424       mov dword [rsp + 0x24], eax
0x000045fc      ff7530         push qword [rbp + 0x30]
0x000045ff      4189c1         mov r9d, eax
0x00004602      ff7528         push qword [rbp + 0x28]
0x00004605      4157           push r15
0x00004607      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x0000460a      488b542428     mov rdx, qword [rsp + 0x28]
0x0000460f      4c89e7         mov rdi, r12
0x00004612      4c895c2430     mov qword [rsp + 0x30], r11
0x00004617      e8d4ecffff     call sym.quotearg_buffer_restyled
0x0000461c      4883c420       add rsp, 0x20
0x00004620      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00004625      4939c3         cmp r11, rax
0x00004628      7767           ja 0x4691
0x0000462a      488d7001       lea rsi, [rax + 1]
0x0000462e      488d058b6c21.  lea rax, obj.slot0                      ; 0x21b2c0
0x00004635      4939c4         cmp r12, rax
0x00004638      488933         mov qword [rbx], rsi
0x0000463b      7412           je 0x464f
0x0000463d      4c89e7         mov rdi, r12
0x00004640      4889742410     mov qword [rsp + 0x10], rsi
0x00004645      e836d2ffff     call sym.imp.free
0x0000464a      488b742410     mov rsi, qword [rsp + 0x10]
0x0000464f      4889f7         mov rdi, rsi
0x00004652      4889742410     mov qword [rsp + 0x10], rsi
0x00004657      e8340f0000     call sym.xmalloc
0x0000465c      4883ec08       sub rsp, 8
0x00004660      48894308       mov qword [rbx + 8], rax
0x00004664      448b4500       mov r8d, dword [rbp]
0x00004668      ff7530         push qword [rbp + 0x30]
0x0000466b      ff7528         push qword [rbp + 0x28]
0x0000466e      4c89f1         mov rcx, r14
0x00004671      4157           push r15
0x00004673      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00004678      4889c7         mov rdi, rax
0x0000467b      488b542428     mov rdx, qword [rsp + 0x28]
0x00004680      488b742430     mov rsi, qword [rsp + 0x30]
0x00004685      4989c4         mov r12, rax
0x00004688      e863ecffff     call sym.quotearg_buffer_restyled
0x0000468d      4883c420       add rsp, 0x20
0x00004691      8b442418       mov eax, dword [rsp + 0x18]
0x00004695      41894500       mov dword [r13], eax
0x00004699      4883c428       add rsp, 0x28
0x0000469d      4c89e0         mov rax, r12
0x000046a0      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x000046a1      5d             pop rbp
0x000046a2      415c           pop r12
0x000046a4      415d           pop r13
0x000046a6      415e           pop r14
0x000046a8      415f           pop r15
0x000046aa      c3             ret
0x000046ab      0f1f440000     nop dword [rax + rax]
0x000046b0      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x000046b2      e8390f0000     call sym.xrealloc
0x000046b7      660f6f05b149.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x000046bf      4889c3         mov rbx, rax
0x000046c2      488905974921.  mov qword [obj.slotvec], rax            ; [0x219060:8]=0x219070 obj.slotvec0 ; "p\x90!"
0x000046c9      0f1100         movups xmmword [rax], xmm0
0x000046cc      e9dcfeffff     jmp 0x45ad
0x000046d1      e8bad1ffff     call sym.imp.abort
0x000046d6      e805110000     call sym.xalloc_die
0x000046db      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x000046e0      4154           push r12
0x000046e2      55             push rbp
0x000046e3      53             push rbx
0x000046e4      4889fb         mov rbx, rdi
0x000046e7      e8b4d1ffff     call sym.imp.__errno_location
0x000046ec      448b20         mov r12d, dword [rax]
0x000046ef      4889c5         mov rbp, rax
0x000046f2      488d05c76c21.  lea rax, obj.default_quoting_options    ; 0x21b3c0
0x000046f9      4885db         test rbx, rbx
0x000046fc      be38000000     mov esi, 0x38                           ; '8'
0x00004701      480f44d8       cmove rbx, rax
0x00004705      4889df         mov rdi, rbx
0x00004708      e883100000     call sym.xmemdup
0x0000470d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004711      5b             pop rbx
0x00004712      5d             pop rbp
0x00004713      415c           pop r12
0x00004715      c3             ret
0x00004716      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00004720      488d05996c21.  lea rax, obj.default_quoting_options    ; 0x21b3c0
0x00004727      4885ff         test rdi, rdi
0x0000472a      480f44f8       cmove rdi, rax
0x0000472e      8b07           mov eax, dword [rdi]
0x00004730      c3             ret
0x00004731      0f1f440000     nop dword [rax + rax]
0x00004736      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00004740      488d05796c21.  lea rax, obj.default_quoting_options    ; 0x21b3c0
0x00004747      4885ff         test rdi, rdi
0x0000474a      480f44f8       cmove rdi, rax
0x0000474e      8937           mov dword [rdi], esi
0x00004750      c3             ret
0x00004751      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00004756      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00004760      488d05596c21.  lea rax, obj.default_quoting_options    ; 0x21b3c0
0x00004767      4885ff         test rdi, rdi
0x0000476a      89f1           mov ecx, esi
0x0000476c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00004770      89f0           mov eax, esi
0x00004772      83e11f         and ecx, 0x1f
0x00004775      c0e805         shr al, 5
0x00004778      0fb6c0         movzx eax, al
0x0000477b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00004780      8b37           mov esi, dword [rdi]
0x00004782      89f0           mov eax, esi
0x00004784      d3e8           shr eax, cl
0x00004786      31c2           xor edx, eax
0x00004788      83e001         and eax, 1
0x0000478b      83e201         and edx, 1
0x0000478e      d3e2           shl edx, cl
0x00004790      31f2           xor edx, esi
0x00004792      8917           mov dword [rdi], edx
0x00004794      c3             ret
0x00004795      90             nop
0x00004796      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x000047a0      488d05196c21.  lea rax, obj.default_quoting_options    ; 0x21b3c0
0x000047a7      4885ff         test rdi, rdi
0x000047aa      480f44f8       cmove rdi, rax
0x000047ae      8b4704         mov eax, dword [rdi + 4]
0x000047b1      897704         mov dword [rdi + 4], esi
0x000047b4      c3             ret
0x000047b5      90             nop
0x000047b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x000047c0      488d05f96b21.  lea rax, obj.default_quoting_options    ; 0x21b3c0
0x000047c7      4885ff         test rdi, rdi
0x000047ca      480f44f8       cmove rdi, rax
0x000047ce      4885f6         test rsi, rsi
0x000047d1      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x000047d7      740e           je 0x47e7
0x000047d9      4885d2         test rdx, rdx
0x000047dc      7409           je 0x47e7
0x000047de      48897728       mov qword [rdi + 0x28], rsi
0x000047e2      48895730       mov qword [rdi + 0x30], rdx
0x000047e6      c3             ret
0x000047e7      4883ec08       sub rsp, 8
0x000047eb      e8a0d0ffff     call sym.imp.abort
;-- quotearg_buffer:
0x000047f0      4157           push r15
0x000047f2      4156           push r14
0x000047f4      488d05c56b21.  lea rax, obj.default_quoting_options    ; 0x21b3c0
0x000047fb      4155           push r13
0x000047fd      4154           push r12
0x000047ff      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00004802      55             push rbp
0x00004803      53             push rbx
0x00004804      4c89c3         mov rbx, r8
0x00004807      4989f6         mov r14, rsi
0x0000480a      4989d7         mov r15, rdx
0x0000480d      4883ec18       sub rsp, 0x18
0x00004811      4d85c0         test r8, r8
0x00004814      480f44d8       cmove rbx, rax
0x00004818      48894c2408     mov qword [rsp + 8], rcx
0x0000481d      e87ed0ffff     call sym.imp.__errno_location
0x00004822      448b20         mov r12d, dword [rax]
0x00004825      4889c5         mov rbp, rax
0x00004828      488d4308       lea rax, [rbx + 8]
0x0000482c      4883ec08       sub rsp, 8
0x00004830      448b4b04       mov r9d, dword [rbx + 4]
0x00004834      ff7330         push qword [rbx + 0x30]
0x00004837      448b03         mov r8d, dword [rbx]
0x0000483a      ff7328         push qword [rbx + 0x28]
0x0000483d      4c89fa         mov rdx, r15
0x00004840      50             push rax
0x00004841      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00004846      4c89f6         mov rsi, r14
0x00004849      4c89ef         mov rdi, r13
0x0000484c      e89feaffff     call sym.quotearg_buffer_restyled
0x00004851      44896500       mov dword [rbp], r12d
0x00004855      4883c438       add rsp, 0x38
0x00004859      5b             pop rbx
0x0000485a      5d             pop rbp
0x0000485b      415c           pop r12
0x0000485d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000485f      415e           pop r14
0x00004861      415f           pop r15
0x00004863      c3             ret
0x00004864      6690           nop
0x00004866      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00004870      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00004872      4156           push r14
0x00004874      488d05456b21.  lea rax, obj.default_quoting_options    ; 0x21b3c0
0x0000487b      4155           push r13
0x0000487d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x0000487f      4989d4         mov r12, rdx
0x00004882      55             push rbp
0x00004883      53             push rbx
0x00004884      4889cb         mov rbx, rcx
0x00004887      4989fe         mov r14, rdi
0x0000488a      4989f7         mov r15, rsi
0x0000488d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00004891      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00004894      480f44d8       cmove rbx, rax
0x00004898      31ed           xor ebp, ebp
0x0000489a      e801d0ffff     call sym.imp.__errno_location
0x0000489f      4d85e4         test r12, r12
0x000048a2      4989c5         mov r13, rax
0x000048a5      8b00           mov eax, dword [rax]
0x000048a7      400f94c5       sete bpl
0x000048ab      0b6b04         or ebp, dword [rbx + 4]
0x000048ae      4c8d5308       lea r10, [rbx + 8]
0x000048b2      4883ec08       sub rsp, 8
0x000048b6      448b03         mov r8d, dword [rbx]
0x000048b9      4c89f9         mov rcx, r15
0x000048bc      89442414       mov dword [rsp + 0x14], eax
0x000048c0      ff7330         push qword [rbx + 0x30]
0x000048c3      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x000048c6      ff7328         push qword [rbx + 0x28]
0x000048c9      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x000048cb      31f6           xor esi, esi
0x000048cd      4189e9         mov r9d, ebp
0x000048d0      31ff           xor edi, edi
0x000048d2      4c89542440     mov qword [rsp + 0x40], r10
0x000048d7      e814eaffff     call sym.quotearg_buffer_restyled
0x000048dc      488d7001       lea rsi, [rax + 1]
0x000048e0      4889442448     mov qword [rsp + 0x48], rax
0x000048e5      4883c420       add rsp, 0x20
0x000048e9      4889f7         mov rdi, rsi
0x000048ec      4889742418     mov qword [rsp + 0x18], rsi
0x000048f1      e89a0c0000     call sym.xmalloc
0x000048f6      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x000048fb      4883ec08       sub rsp, 8
0x000048ff      ff7330         push qword [rbx + 0x30]
0x00004902      ff7328         push qword [rbx + 0x28]
0x00004905      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000490a      4189e9         mov r9d, ebp
0x0000490d      448b03         mov r8d, dword [rbx]
0x00004910      4c89f9         mov rcx, r15
0x00004913      4c89f2         mov rdx, r14
0x00004916      4889c7         mov rdi, rax
0x00004919      4152           push r10
0x0000491b      488b742438     mov rsi, qword [rsp + 0x38]
0x00004920      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00004925      8b44242c       mov eax, dword [rsp + 0x2c]
0x00004929      4883c420       add rsp, 0x20
0x0000492d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00004930      41894500       mov dword [r13], eax
0x00004934      7409           je 0x493f
0x00004936      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000493b      4d891c24       mov qword [r12], r11
0x0000493f      488b442410     mov rax, qword [rsp + 0x10]
0x00004944      4883c438       add rsp, 0x38
0x00004948      5b             pop rbx
0x00004949      5d             pop rbp
0x0000494a      415c           pop r12
0x0000494c      415d           pop r13
0x0000494e      415e           pop r14
0x00004950      415f           pop r15
0x00004952      c3             ret
0x00004953      0f1f00         nop dword [rax]
0x00004956      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00004960      4889d1         mov rcx, rdx
0x00004963      31d2           xor edx, edx
0x00004965      e906ffffff     jmp sym.quotearg_alloc_mem
0x0000496a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00004970      8b05e2462100   mov eax, dword [obj.nslots]             ; [0x219058:4]=1
0x00004976      4154           push r12
0x00004978      4c8b25e14621.  mov r12, qword [obj.slotvec]            ; [0x219060:8]=0x219070 obj.slotvec0 ; "p\x90!"
0x0000497f      55             push rbp
0x00004980      53             push rbx
0x00004981      83f801         cmp eax, 1
0x00004984      7e2b           jle 0x49b1                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00004986      83e802         sub eax, 2
0x00004989      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x0000498e      48c1e004       shl rax, 4
0x00004992      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00004997      660f1f840000.  nop word [rax + rax]
0x000049a0      488b3b         mov rdi, qword [rbx]
0x000049a3      4883c310       add rbx, 0x10
0x000049a7      e8d4ceffff     call sym.imp.free
0x000049ac      4839eb         cmp rbx, rbp
0x000049af      75ef           jne 0x49a0
0x000049b1      498b7c2408     mov rdi, qword [r12 + 8]
0x000049b6      488d1d036921.  lea rbx, obj.slot0                      ; 0x21b2c0
0x000049bd      4839df         cmp rdi, rbx
0x000049c0      7417           je 0x49d9
0x000049c2      e8b9ceffff     call sym.imp.free
0x000049c7      48c7059e4621.  mov qword [obj.slotvec0], 0x100         ; [0x219070:8]=256
0x000049d2      48891d9f4621.  mov qword [0x00219078], rbx             ; [0x219078:8]=0x21b2c0 obj.slot0
0x000049d9      488d1d904621.  lea rbx, obj.slotvec0                   ; 0x219070
0x000049e0      4939dc         cmp r12, rbx
0x000049e3      740f           je 0x49f4
0x000049e5      4c89e7         mov rdi, r12
0x000049e8      e893ceffff     call sym.imp.free
0x000049ed      48891d6c4621.  mov qword [obj.slotvec], rbx            ; [0x219060:8]=0x219070 obj.slotvec0 ; "p\x90!"
0x000049f4      5b             pop rbx
0x000049f5      c70559462100.  mov dword [obj.nslots], 1               ; [0x219058:4]=1
0x000049ff      5d             pop rbp
0x00004a00      415c           pop r12
0x00004a02      c3             ret
0x00004a03      0f1f00         nop dword [rax]
0x00004a06      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00004a10      488d0da96921.  lea rcx, obj.default_quoting_options    ; 0x21b3c0
0x00004a17      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004a1e      e90dfbffff     jmp sym.quotearg_n_options
0x00004a23      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00004a26      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00004a30      488d0d896921.  lea rcx, obj.default_quoting_options    ; 0x21b3c0
0x00004a37      e9f4faffff     jmp sym.quotearg_n_options
0x00004a3c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00004a40      488d0d796921.  lea rcx, obj.default_quoting_options    ; 0x21b3c0
0x00004a47      4889fe         mov rsi, rdi
0x00004a4a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004a51      31ff           xor edi, edi
0x00004a53      e9d8faffff     jmp sym.quotearg_n_options
0x00004a58      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00004a60      488d0d596921.  lea rcx, obj.default_quoting_options    ; 0x21b3c0
0x00004a67      4889f2         mov rdx, rsi
0x00004a6a      4889fe         mov rsi, rdi
0x00004a6d      31ff           xor edi, edi
0x00004a6f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00004a74      6690           nop
0x00004a76      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00004a80      4883ec48       sub rsp, 0x48
0x00004a84      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00004a87      64488b142528.  mov rdx, qword fs:[0x28]
0x00004a90      4889542438     mov qword [rsp + 0x38], rdx
0x00004a95      31d2           xor edx, edx
0x00004a97      83fe0a         cmp esi, 0xa
0x00004a9a      7468           je 0x4b04
0x00004a9c      893424         mov dword [rsp], esi
0x00004a9f      4889e1         mov rcx, rsp
0x00004aa2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004aa9      4889c6         mov rsi, rax
0x00004aac      48c744240400.  mov qword [rsp + 4], 0
0x00004ab5      48c744240c00.  mov qword [rsp + 0xc], 0
0x00004abe      48c744241400.  mov qword [rsp + 0x14], 0
0x00004ac7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004ad0      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00004ad9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004ae2      c74424340000.  mov dword [rsp + 0x34], 0
0x00004aea      e841faffff     call sym.quotearg_n_options
0x00004aef      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004af4      6448330c2528.  xor rcx, qword fs:[0x28]
0x00004afd      750a           jne 0x4b09                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x00004aff      4883c448       add rsp, 0x48
0x00004b03      c3             ret
0x00004b04      e887cdffff     call sym.imp.abort
0x00004b09      e882ceffff     call sym.imp.__stack_chk_fail
0x00004b0e      6690           nop
;-- quotearg_n_style_mem:
0x00004b10      4883ec48       sub rsp, 0x48
0x00004b14      4889d0         mov rax, rdx
0x00004b17      4889ca         mov rdx, rcx
0x00004b1a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00004b23      48894c2438     mov qword [rsp + 0x38], rcx
0x00004b28      31c9           xor ecx, ecx
0x00004b2a      83fe0a         cmp esi, 0xa
0x00004b2d      7461           je 0x4b90
0x00004b2f      893424         mov dword [rsp], esi
0x00004b32      4889e1         mov rcx, rsp
0x00004b35      4889c6         mov rsi, rax
0x00004b38      48c744240400.  mov qword [rsp + 4], 0
0x00004b41      48c744240c00.  mov qword [rsp + 0xc], 0
0x00004b4a      48c744241400.  mov qword [rsp + 0x14], 0
0x00004b53      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004b5c      48c744242400.  mov qword [rsp + 0x24], 0
0x00004b65      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004b6e      c74424340000.  mov dword [rsp + 0x34], 0
0x00004b76      e8b5f9ffff     call sym.quotearg_n_options
0x00004b7b      488b542438     mov rdx, qword [rsp + 0x38]
0x00004b80      644833142528.  xor rdx, qword fs:[0x28]
0x00004b89      750a           jne 0x4b95
0x00004b8b      4883c448       add rsp, 0x48
0x00004b8f      c3             ret
0x00004b90      e8fbccffff     call sym.imp.abort
0x00004b95      e8f6cdffff     call sym.imp.__stack_chk_fail
0x00004b9a      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00004ba0      4889f2         mov rdx, rsi
0x00004ba3      89fe           mov esi, edi
0x00004ba5      31ff           xor edi, edi
0x00004ba7      e9d4feffff     jmp sym.quotearg_n_style
0x00004bac      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00004bb0      4889d1         mov rcx, rdx
0x00004bb3      4889f2         mov rdx, rsi
0x00004bb6      89fe           mov esi, edi
0x00004bb8      31ff           xor edi, edi
0x00004bba      e951ffffff     jmp sym.quotearg_n_style_mem
0x00004bbf      90             nop
;-- quotearg_char_mem:
0x00004bc0      4883ec48       sub rsp, 0x48
0x00004bc4      89d1           mov ecx, edx
0x00004bc6      64488b042528.  mov rax, qword fs:[0x28]
0x00004bcf      4889442438     mov qword [rsp + 0x38], rax
0x00004bd4      31c0           xor eax, eax
0x00004bd6      488b05136821.  mov rax, qword [0x0021b3f0]             ; [0x21b3f0:8]=0
0x00004bdd      4989e0         mov r8, rsp
0x00004be0      83e11f         and ecx, 0x1f
0x00004be3      660f6f05d567.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00004beb      4889442430     mov qword [rsp + 0x30], rax
0x00004bf0      89d0           mov eax, edx
0x00004bf2      0f290424       movaps xmmword [rsp], xmm0
0x00004bf6      c0e805         shr al, 5
0x00004bf9      0fb6c0         movzx eax, al
0x00004bfc      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00004c01      660f6f05c767.  movdqa xmm0, xmmword [0x0021b3d0]
0x00004c09      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00004c0e      660f6f05ca67.  movdqa xmm0, xmmword [0x0021b3e0]
0x00004c16      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00004c1b      418b11         mov edx, dword [r9]
0x00004c1e      89d0           mov eax, edx
0x00004c20      d3e8           shr eax, cl
0x00004c22      f7d0           not eax
0x00004c24      83e001         and eax, 1
0x00004c27      d3e0           shl eax, cl
0x00004c29      4c89c1         mov rcx, r8
0x00004c2c      31d0           xor eax, edx
0x00004c2e      4889f2         mov rdx, rsi
0x00004c31      4889fe         mov rsi, rdi
0x00004c34      418901         mov dword [r9], eax
0x00004c37      31ff           xor edi, edi
0x00004c39      e8f2f8ffff     call sym.quotearg_n_options
0x00004c3e      488b742438     mov rsi, qword [rsp + 0x38]
0x00004c43      644833342528.  xor rsi, qword fs:[0x28]
0x00004c4c      7505           jne 0x4c53
0x00004c4e      4883c448       add rsp, 0x48
0x00004c52      c3             ret
0x00004c53      e838cdffff     call sym.imp.__stack_chk_fail
0x00004c58      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00004c60      400fbed6       movsx edx, sil
0x00004c64      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00004c6b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00004c70      ba3a000000     mov edx, 0x3a                           ; ':'
0x00004c75      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00004c7c      e93fffffff     jmp sym.quotearg_char_mem
0x00004c81      0f1f440000     nop dword [rax + rax]
0x00004c86      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00004c90      ba3a000000     mov edx, 0x3a                           ; ':'
0x00004c95      e926ffffff     jmp sym.quotearg_char_mem
0x00004c9a      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00004ca0      4883ec48       sub rsp, 0x48
0x00004ca4      4889d0         mov rax, rdx
0x00004ca7      64488b142528.  mov rdx, qword fs:[0x28]
0x00004cb0      4889542438     mov qword [rsp + 0x38], rdx
0x00004cb5      31d2           xor edx, edx
0x00004cb7      83fe0a         cmp esi, 0xa
0x00004cba      7468           je 0x4d24
0x00004cbc      893424         mov dword [rsp], esi
0x00004cbf      4889e1         mov rcx, rsp
0x00004cc2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004cc9      4889c6         mov rsi, rax
0x00004ccc      48c744240400.  mov qword [rsp + 4], 0
0x00004cd5      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x00004cde      48c744241400.  mov qword [rsp + 0x14], 0
0x00004ce7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004cf0      48c744242400.  mov qword [rsp + 0x24], 0
0x00004cf9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004d02      c74424340000.  mov dword [rsp + 0x34], 0
0x00004d0a      e821f8ffff     call sym.quotearg_n_options
0x00004d0f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004d14      6448330c2528.  xor rcx, qword fs:[0x28]
0x00004d1d      750a           jne 0x4d29
0x00004d1f      4883c448       add rsp, 0x48
0x00004d23      c3             ret
0x00004d24      e867cbffff     call sym.imp.abort
0x00004d29      e862ccffff     call sym.imp.__stack_chk_fail
0x00004d2e      6690           nop
;-- quotearg_n_custom_mem:
0x00004d30      4883ec48       sub rsp, 0x48
0x00004d34      4989c9         mov r9, rcx
0x00004d37      488b0db26621.  mov rcx, qword [0x0021b3f0]             ; [0x21b3f0:8]=0
0x00004d3e      660f6f057a66.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00004d46      64488b042528.  mov rax, qword fs:[0x28]
0x00004d4f      4889442438     mov qword [rsp + 0x38], rax
0x00004d54      31c0           xor eax, eax
0x00004d56      0f290424       movaps xmmword [rsp], xmm0
0x00004d5a      4885f6         test rsi, rsi
0x00004d5d      48894c2430     mov qword [rsp + 0x30], rcx
0x00004d62      c704240a0000.  mov dword [rsp], 0xa
0x00004d69      660f6f055f66.  movdqa xmm0, xmmword [0x0021b3d0]
0x00004d71      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00004d76      660f6f056266.  movdqa xmm0, xmmword [0x0021b3e0]
0x00004d7e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00004d83      7432           je 0x4db7
0x00004d85      4885d2         test rdx, rdx
0x00004d88      742d           je 0x4db7
0x00004d8a      4889742428     mov qword [rsp + 0x28], rsi
0x00004d8f      4889542430     mov qword [rsp + 0x30], rdx
0x00004d94      4889e1         mov rcx, rsp
0x00004d97      4c89c2         mov rdx, r8
0x00004d9a      4c89ce         mov rsi, r9
0x00004d9d      e88ef7ffff     call sym.quotearg_n_options
0x00004da2      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00004da7      6448333c2528.  xor rdi, qword fs:[0x28]
0x00004db0      750a           jne 0x4dbc
0x00004db2      4883c448       add rsp, 0x48
0x00004db6      c3             ret
0x00004db7      e8d4caffff     call sym.imp.abort
0x00004dbc      e8cfcbffff     call sym.imp.__stack_chk_fail
0x00004dc1      0f1f440000     nop dword [rax + rax]
0x00004dc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00004dd0      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00004dd7      e954ffffff     jmp sym.quotearg_n_custom_mem
0x00004ddc      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00004de0      4889d1         mov rcx, rdx
0x00004de3      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00004dea      4889f2         mov rdx, rsi
0x00004ded      4889fe         mov rsi, rdi
0x00004df0      31ff           xor edi, edi
0x00004df2      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00004df7      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00004e00      4989c8         mov r8, rcx
0x00004e03      4889d1         mov rcx, rdx
0x00004e06      4889f2         mov rdx, rsi
0x00004e09      4889fe         mov rsi, rdi
0x00004e0c      31ff           xor edi, edi
0x00004e0e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00004e13      0f1f00         nop dword [rax]
0x00004e16      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00004e20      488d0df94121.  lea rcx, obj.quote_quoting_options      ; 0x219020
0x00004e27      e904f7ffff     jmp sym.quotearg_n_options
0x00004e2c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00004e30      488d0de94121.  lea rcx, obj.quote_quoting_options      ; 0x219020
0x00004e37      4889f2         mov rdx, rsi
0x00004e3a      4889fe         mov rsi, rdi
0x00004e3d      31ff           xor edi, edi
0x00004e3f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00004e44      6690           nop
0x00004e46      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00004e50      488d0dc94121.  lea rcx, obj.quote_quoting_options      ; 0x219020
0x00004e57      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004e5e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00004e63      0f1f00         nop dword [rax]
0x00004e66      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00004e70      488d0da94121.  lea rcx, obj.quote_quoting_options      ; 0x219020
0x00004e77      4889fe         mov rsi, rdi
0x00004e7a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004e81      31ff           xor edi, edi
0x00004e83      e9a8f6ffff     jmp sym.quotearg_n_options
0x00004e88      0f1f84000000.  nop dword [rax + rax]
;-- safe_read:
0x00004e90      4155           push r13                                ; ../coreutils-8.31/lib/safe-read.c:57
0x00004e92      4154           push r12
0x00004e94      4189fd         mov r13d, edi
0x00004e97      55             push rbp
0x00004e98      53             push rbx
0x00004e99      4989f4         mov r12, rsi
0x00004e9c      4889d3         mov rbx, rdx
0x00004e9f      4883ec08       sub rsp, 8
0x00004ea3      0f1f440000     nop dword [rax + rax]
0x00004ea8      4889da         mov rdx, rbx                            ; unistd.h:44   return __read_alias (__fd, __buf, __nbytes);
0x00004eab      4c89e6         mov rsi, r12
0x00004eae      4489ef         mov edi, r13d
0x00004eb1      e87acbffff     call sym.imp.read
0x00004eb6      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/safe-read.c:62
0x00004eb9      4889c5         mov rbp, rax                            ; unistd.h:44   return __read_alias (__fd, __buf, __nbytes);
0x00004ebc      7922           jns 0x4ee0                              ; ../coreutils-8.31/lib/safe-read.c:62
0x00004ebe      e8ddc9ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/safe-read.c:64
0x00004ec3      8b00           mov eax, dword [rax]
0x00004ec5      83f804         cmp eax, 4
0x00004ec8      74de           je 0x4ea8
0x00004eca      4881fb0000f0.  cmp rbx, 0x7ff00000                     ; ../coreutils-8.31/lib/safe-read.c:66
0x00004ed1      760d           jbe 0x4ee0
0x00004ed3      83f816         cmp eax, 0x16
0x00004ed6      7508           jne 0x4ee0
0x00004ed8      bb0000f07f     mov ebx, 0x7ff00000                     ; ../coreutils-8.31/lib/safe-read.c:67
0x00004edd      ebc9           jmp 0x4ea8
0x00004edf      90             nop
0x00004ee0      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/safe-read.c:71
0x00004ee4      4889e8         mov rax, rbp
0x00004ee7      5b             pop rbx
0x00004ee8      5d             pop rbp
0x00004ee9      415c           pop r12
0x00004eeb      415d           pop r13
0x00004eed      c3             ret
0x00004eee      6690           nop
;-- mkstemp_safer:
0x00004ef0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/mkstemp-safer.c:32
0x00004ef4      e807ccffff     call sym.imp.mkstemp                    ; ../coreutils-8.31/lib/mkstemp-safer.c:33
0x00004ef9      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/mkstemp-safer.c:34
0x00004efd      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/mkstemp-safer.c:33
0x00004eff      e92c000000     jmp sym.fd_safer
0x00004f04      6690           nop
0x00004f06      662e0f1f8400.  nop word cs:[rax + rax]
;-- mkostemp_safer:
0x00004f10      53             push rbx                                ; ../coreutils-8.31/lib/mkstemp-safer.c:41
0x00004f11      89f3           mov ebx, esi
0x00004f13      e8c8caffff     call sym.imp.mkostemp                   ; ../coreutils-8.31/lib/mkstemp-safer.c:42
0x00004f18      89de           mov esi, ebx
0x00004f1a      89c7           mov edi, eax
0x00004f1c      5b             pop rbx                                 ; ../coreutils-8.31/lib/mkstemp-safer.c:43
0x00004f1d      e92eed0000     jmp sym.fd_safer_flag                   ; ../coreutils-8.31/lib/mkstemp-safer.c:42
0x00004f22      662e0f1f8400.  nop word cs:[rax + rax]
0x00004f2c      0f1f4000       nop dword [rax]
;-- fd_safer:
0x00004f30      4155           push r13                                ; ../coreutils-8.31/lib/fd-safer.c:38
0x00004f32      4154           push r12
0x00004f34      55             push rbp
0x00004f35      53             push rbx
0x00004f36      89fb           mov ebx, edi
0x00004f38      4883ec08       sub rsp, 8
0x00004f3c      83ff02         cmp edi, 2                              ; ../coreutils-8.31/lib/fd-safer.c:39
0x00004f3f      7721           ja 0x4f62
0x00004f41      e80aee0000     call sym.dup_safer                      ; ../coreutils-8.31/lib/fd-safer.c:41
0x00004f46      4189c4         mov r12d, eax
0x00004f49      e852c9ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fd-safer.c:42
0x00004f4e      448b28         mov r13d, dword [rax]
0x00004f51      4889c5         mov rbp, rax
0x00004f54      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fd-safer.c:43
0x00004f56      e8c5caffff     call sym.imp.close
0x00004f5b      4489e3         mov ebx, r12d                           ; ../coreutils-8.31/lib/fd-safer.c:45
0x00004f5e      44896d00       mov dword [rbp], r13d                   ; ../coreutils-8.31/lib/fd-safer.c:44
0x00004f62      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fd-safer.c:49
0x00004f66      89d8           mov eax, ebx
0x00004f68      5b             pop rbx
0x00004f69      5d             pop rbp
0x00004f6a      415c           pop r12
0x00004f6c      415d           pop r13
0x00004f6e      c3             ret
0x00004f6f      90             nop
;-- version_etc_arn:
0x00004f70      4157           push r15
0x00004f72      4156           push r14
0x00004f74      4155           push r13
0x00004f76      4154           push r12
0x00004f78      4d89cc         mov r12, r9
0x00004f7b      55             push rbp
0x00004f7c      53             push rbx
0x00004f7d      4889fd         mov rbp, rdi
0x00004f80      4c89c3         mov rbx, r8
0x00004f83      4883ec28       sub rsp, 0x28
0x00004f87      4885f6         test rsi, rsi
0x00004f8a      0f8418010000   je 0x50a8
0x00004f90      4989d0         mov r8, rdx
0x00004f93      488d150efc00.  lea rdx, [0x00014ba8]                   ; "%s (%s) %s\n"
0x00004f9a      4989c9         mov r9, rcx
0x00004f9d      31c0           xor eax, eax
0x00004f9f      4889f1         mov rcx, rsi
0x00004fa2      be01000000     mov esi, 1
0x00004fa7      e874ccffff     call sym.imp.__fprintf_chk
0x00004fac      488d3508fc00.  lea rsi, [0x00014bbb]                   ; "(C)"
0x00004fb3      31ff           xor edi, edi
0x00004fb5      ba05000000     mov edx, 5
0x00004fba      e8a1c9ffff     call sym.imp.dcgettext
0x00004fbf      488d151aff00.  lea rdx, obj.version_etc_copyright      ; 0x14ee0 ; "Copyright %s %d Free Software Foundation, Inc."
0x00004fc6      4889c1         mov rcx, rax
0x00004fc9      41b8e3070000   mov r8d, 0x7e3
0x00004fcf      be01000000     mov esi, 1
0x00004fd4      4889ef         mov rdi, rbp
0x00004fd7      31c0           xor eax, eax
0x00004fd9      e842ccffff     call sym.imp.__fprintf_chk
0x00004fde      488d3563fc00.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x14c48 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00004fe5      31ff           xor edi, edi
0x00004fe7      ba05000000     mov edx, 5
0x00004fec      e86fc9ffff     call sym.imp.dcgettext
0x00004ff1      4889ee         mov rsi, rbp
0x00004ff4      4889c7         mov rdi, rax
0x00004ff7      e864caffff     call sym.imp.fputs_unlocked
0x00004ffc      4983fc09       cmp r12, 9
0x00005000      0f873a030000   ja 0x5340
0x00005006      488d1597fe00.  lea rdx, [0x00014ea4]
0x0000500d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00005011      4801d0         add rax, rdx
0x00005014      ffe0           jmp rax
0x00005016      662e0f1f8400.  nop word cs:[rax + rax]
0x00005020      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00005024      488b4310       mov rax, qword [rbx + 0x10]
0x00005028      488d3589fd00.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x14db8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x0000502f      4c8b4308       mov r8, qword [rbx + 8]
0x00005033      ba05000000     mov edx, 5
0x00005038      31ff           xor edi, edi
0x0000503a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0000503e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005042      4c894c2410     mov qword [rsp + 0x10], r9
0x00005047      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000504b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000504f      48890424       mov qword [rsp], rax
0x00005053      4c89442408     mov qword [rsp + 8], r8
0x00005058      488b1b         mov rbx, qword [rbx]
0x0000505b      e800c9ffff     call sym.imp.dcgettext
0x00005060      4883ec08       sub rsp, 8
0x00005064      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00005069      4889c2         mov rdx, rax
0x0000506c      4889d9         mov rcx, rbx
0x0000506f      be01000000     mov esi, 1
0x00005074      4889ef         mov rdi, rbp
0x00005077      31c0           xor eax, eax
0x00005079      4151           push r9
0x0000507b      4155           push r13
0x0000507d      4154           push r12
0x0000507f      4157           push r15
0x00005081      4156           push r14
0x00005083      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00005088      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000508d      e88ecbffff     call sym.imp.__fprintf_chk
0x00005092      4883c430       add rsp, 0x30
0x00005096      4883c428       add rsp, 0x28
0x0000509a      5b             pop rbx
0x0000509b      5d             pop rbp
0x0000509c      415c           pop r12
0x0000509e      415d           pop r13
0x000050a0      415e           pop r14
0x000050a2      415f           pop r15
0x000050a4      c3             ret
0x000050a5      0f1f00         nop dword [rax]
0x000050a8      4989c8         mov r8, rcx
0x000050ab      4889d1         mov rcx, rdx
0x000050ae      488d15fffa00.  lea rdx, str.s__s                       ; 0x14bb4 ; "%s %s\n"
0x000050b5      be01000000     mov esi, 1
0x000050ba      31c0           xor eax, eax
0x000050bc      e85fcbffff     call sym.imp.__fprintf_chk
0x000050c1      e9e6feffff     jmp 0x4fac
0x000050c6      662e0f1f8400.  nop word cs:[rax + rax]
0x000050d0      4c8b5340       mov r10, qword [rbx + 0x40]
0x000050d4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000050d8      488d3509fd00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x14de8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x000050df      488b4310       mov rax, qword [rbx + 0x10]
0x000050e3      4c8b4308       mov r8, qword [rbx + 8]
0x000050e7      ba05000000     mov edx, 5
0x000050ec      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000050f0      4c8b6328       mov r12, qword [rbx + 0x28]
0x000050f4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000050f8      4c8b7318       mov r14, qword [rbx + 0x18]
0x000050fc      488b1b         mov rbx, qword [rbx]
0x000050ff      4c89542418     mov qword [rsp + 0x18], r10
0x00005104      4c894c2410     mov qword [rsp + 0x10], r9
0x00005109      48890424       mov qword [rsp], rax
0x0000510d      4c89442408     mov qword [rsp + 8], r8
0x00005112      31ff           xor edi, edi
0x00005114      e847c8ffff     call sym.imp.dcgettext
0x00005119      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000511e      4152           push r10
0x00005120      e93fffffff     jmp 0x5064
0x00005125      0f1f00         nop dword [rax]
0x00005128      488b1b         mov rbx, qword [rbx]
0x0000512b      488d358dfa00.  lea rsi, str.Written_by__s.             ; 0x14bbf ; "Written by %s.\n"
0x00005132      ba05000000     mov edx, 5
0x00005137      31ff           xor edi, edi
0x00005139      e822c8ffff     call sym.imp.dcgettext
0x0000513e      4883c428       add rsp, 0x28
0x00005142      4889d9         mov rcx, rbx
0x00005145      4889ef         mov rdi, rbp
0x00005148      5b             pop rbx
0x00005149      5d             pop rbp
0x0000514a      415c           pop r12
0x0000514c      415d           pop r13
0x0000514e      415e           pop r14
0x00005150      415f           pop r15
0x00005152      4889c2         mov rdx, rax
0x00005155      be01000000     mov esi, 1
0x0000515a      31c0           xor eax, eax
0x0000515c      e9bfcaffff     jmp sym.imp.__fprintf_chk
0x00005161      0f1f80000000.  nop dword [rax]
0x00005168      4c8b6308       mov r12, qword [rbx + 8]
0x0000516c      488d355cfa00.  lea rsi, str.Written_by__s_and__s.      ; 0x14bcf ; "Written by %s and %s.\n"
0x00005173      488b1b         mov rbx, qword [rbx]
0x00005176      ba05000000     mov edx, 5
0x0000517b      31ff           xor edi, edi
0x0000517d      e8dec7ffff     call sym.imp.dcgettext
0x00005182      4883c428       add rsp, 0x28
0x00005186      4d89e0         mov r8, r12
0x00005189      4889d9         mov rcx, rbx
0x0000518c      4889ef         mov rdi, rbp
0x0000518f      4889c2         mov rdx, rax
0x00005192      be01000000     mov esi, 1
0x00005197      5b             pop rbx
0x00005198      5d             pop rbp
0x00005199      415c           pop r12
0x0000519b      415d           pop r13
0x0000519d      415e           pop r14
0x0000519f      415f           pop r15
0x000051a1      31c0           xor eax, eax
0x000051a3      e978caffff     jmp sym.imp.__fprintf_chk
0x000051a8      0f1f84000000.  nop dword [rax + rax]
0x000051b0      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000051b4      4c8b6308       mov r12, qword [rbx + 8]
0x000051b8      488d3527fa00.  lea rsi, str.Written_by__s___s__and__s. ; 0x14be6 ; "Written by %s, %s, and %s.\n"
0x000051bf      488b1b         mov rbx, qword [rbx]
0x000051c2      ba05000000     mov edx, 5
0x000051c7      31ff           xor edi, edi
0x000051c9      e892c7ffff     call sym.imp.dcgettext
0x000051ce      4883c428       add rsp, 0x28
0x000051d2      4d89e9         mov r9, r13
0x000051d5      4d89e0         mov r8, r12
0x000051d8      4889d9         mov rcx, rbx
0x000051db      4889ef         mov rdi, rbp
0x000051de      4889c2         mov rdx, rax
0x000051e1      5b             pop rbx
0x000051e2      5d             pop rbp
0x000051e3      415c           pop r12
0x000051e5      415d           pop r13
0x000051e7      415e           pop r14
0x000051e9      415f           pop r15
0x000051eb      be01000000     mov esi, 1
0x000051f0      31c0           xor eax, eax
0x000051f2      e929caffff     jmp sym.imp.__fprintf_chk
0x000051f7      660f1f840000.  nop word [rax + rax]
0x00005200      488d3511fb00.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x14d18 ; "Written by %s, %s, %s,\nand %s.\n"
0x00005207      ba05000000     mov edx, 5
0x0000520c      31ff           xor edi, edi
0x0000520e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00005212      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005216      4c8b6308       mov r12, qword [rbx + 8]
0x0000521a      488b1b         mov rbx, qword [rbx]
0x0000521d      e83ec7ffff     call sym.imp.dcgettext
0x00005222      4883ec08       sub rsp, 8
0x00005226      4156           push r14
0x00005228      4889c2         mov rdx, rax
0x0000522b      4d89e9         mov r9, r13
0x0000522e      4d89e0         mov r8, r12
0x00005231      4889d9         mov rcx, rbx
0x00005234      4889ef         mov rdi, rbp
0x00005237      be01000000     mov esi, 1
0x0000523c      31c0           xor eax, eax
0x0000523e      e8ddc9ffff     call sym.imp.__fprintf_chk
0x00005243      58             pop rax
0x00005244      5a             pop rdx
0x00005245      4883c428       add rsp, 0x28
0x00005249      5b             pop rbx
0x0000524a      5d             pop rbp
0x0000524b      415c           pop r12
0x0000524d      415d           pop r13
0x0000524f      415e           pop r14
0x00005251      415f           pop r15
0x00005253      c3             ret
0x00005254      0f1f4000       nop dword [rax]
0x00005258      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000525c      488d35d5fa00.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x14d38 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00005263      ba05000000     mov edx, 5
0x00005268      31ff           xor edi, edi
0x0000526a      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000526e      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005272      4c8b6308       mov r12, qword [rbx + 8]
0x00005276      488b1b         mov rbx, qword [rbx]
0x00005279      e8e2c6ffff     call sym.imp.dcgettext
0x0000527e      4157           push r15
0x00005280      eba4           jmp 0x5226
0x00005282      660f1f440000   nop word [rax + rax]
0x00005288      4c8b4308       mov r8, qword [rbx + 8]
0x0000528c      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005290      488d35c9fa00.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x14d60 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00005297      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000529b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000529f      ba05000000     mov edx, 5
0x000052a4      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000052a8      31ff           xor edi, edi
0x000052aa      488b1b         mov rbx, qword [rbx]
0x000052ad      4c890424       mov qword [rsp], r8
0x000052b1      e8aac6ffff     call sym.imp.dcgettext
0x000052b6      4883ec08       sub rsp, 8
0x000052ba      4d89e9         mov r9, r13
0x000052bd      4154           push r12
0x000052bf      4157           push r15
0x000052c1      4156           push r14
0x000052c3      4c8b442420     mov r8, qword [rsp + 0x20]
0x000052c8      4889d9         mov rcx, rbx
0x000052cb      4889c2         mov rdx, rax
0x000052ce      4889ef         mov rdi, rbp
0x000052d1      be01000000     mov esi, 1
0x000052d6      31c0           xor eax, eax
0x000052d8      e843c9ffff     call sym.imp.__fprintf_chk
0x000052dd      4883c420       add rsp, 0x20
0x000052e1      4883c428       add rsp, 0x28
0x000052e5      5b             pop rbx
0x000052e6      5d             pop rbp
0x000052e7      415c           pop r12
0x000052e9      415d           pop r13
0x000052eb      415e           pop r14
0x000052ed      415f           pop r15
0x000052ef      c3             ret
0x000052f0      4c8b4b10       mov r9, qword [rbx + 0x10]
0x000052f4      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000052f8      488d3589fa00.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x14d88 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x000052ff      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005303      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005307      ba05000000     mov edx, 5
0x0000530c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00005310      4c8b4308       mov r8, qword [rbx + 8]
0x00005314      31ff           xor edi, edi
0x00005316      4c894c2408     mov qword [rsp + 8], r9
0x0000531b      488b1b         mov rbx, qword [rbx]
0x0000531e      4c890424       mov qword [rsp], r8
0x00005322      e839c6ffff     call sym.imp.dcgettext
0x00005327      4155           push r13
0x00005329      4154           push r12
0x0000532b      4157           push r15
0x0000532d      4156           push r14
0x0000532f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00005334      eb8d           jmp 0x52c3
0x00005336      662e0f1f8400.  nop word cs:[rax + rax]
0x00005340      4c8b5340       mov r10, qword [rbx + 0x40]
0x00005344      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00005348      ba05000000     mov edx, 5
0x0000534d      488b4310       mov rax, qword [rbx + 0x10]
0x00005351      4c8b4308       mov r8, qword [rbx + 8]
0x00005355      488d35c4fa00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x14e20 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x0000535c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00005360      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005364      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005368      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000536c      4c89542418     mov qword [rsp + 0x18], r10
0x00005371      4c894c2410     mov qword [rsp + 0x10], r9
0x00005376      48890424       mov qword [rsp], rax
0x0000537a      4c89442408     mov qword [rsp + 8], r8
0x0000537f      488b1b         mov rbx, qword [rbx]
0x00005382      e98bfdffff     jmp 0x5112
0x00005387      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00005390      4531c9         xor r9d, r9d
0x00005393      49833800       cmp qword [r8], 0
0x00005397      7412           je 0x53ab
0x00005399      0f1f80000000.  nop dword [rax]
0x000053a0      4983c101       add r9, 1
0x000053a4      4b833cc800     cmp qword [r8 + r9*8], 0
0x000053a9      75f5           jne 0x53a0
0x000053ab      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x000053b0      4883ec68       sub rsp, 0x68
0x000053b4      4d89c2         mov r10, r8
0x000053b7      4531c9         xor r9d, r9d
0x000053ba      64488b042528.  mov rax, qword fs:[0x28]
0x000053c3      4889442458     mov qword [rsp + 0x58], rax
0x000053c8      31c0           xor eax, eax
0x000053ca      4989e0         mov r8, rsp
0x000053cd      0f1f00         nop dword [rax]
0x000053d0      418b02         mov eax, dword [r10]
0x000053d3      83f82f         cmp eax, 0x2f
0x000053d6      7742           ja 0x541a
0x000053d8      4189c3         mov r11d, eax
0x000053db      4d035a10       add r11, qword [r10 + 0x10]
0x000053df      83c008         add eax, 8
0x000053e2      418902         mov dword [r10], eax
0x000053e5      498b03         mov rax, qword [r11]
0x000053e8      4885c0         test rax, rax
0x000053eb      4b8904c8       mov qword [r8 + r9*8], rax
0x000053ef      740a           je 0x53fb
0x000053f1      4983c101       add r9, 1
0x000053f5      4983f90a       cmp r9, 0xa
0x000053f9      75d5           jne 0x53d0
0x000053fb      e870fbffff     call sym.version_etc_arn
0x00005400      488b442458     mov rax, qword [rsp + 0x58]
0x00005405      644833042528.  xor rax, qword fs:[0x28]
0x0000540e      7505           jne 0x5415
0x00005410      4883c468       add rsp, 0x68
0x00005414      c3             ret
0x00005415      e876c5ffff     call sym.imp.__stack_chk_fail
0x0000541a      4d8b5a08       mov r11, qword [r10 + 8]
0x0000541e      498d4308       lea rax, [r11 + 8]
0x00005422      49894208       mov qword [r10 + 8], rax
0x00005426      ebbd           jmp 0x53e5
0x00005428      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00005430      55             push rbp
0x00005431      53             push rbx
0x00005432      41ba20000000   mov r10d, 0x20                          ; "@"
0x00005438      4531db         xor r11d, r11d
0x0000543b      4881ecb80000.  sub rsp, 0xb8
0x00005442      64488b042528.  mov rax, qword fs:[0x28]
0x0000544b      4889442478     mov qword [rsp + 0x78], rax
0x00005450      31c0           xor eax, eax
0x00005452      488d8424d000.  lea rax, [rsp + 0xd0]
0x0000545a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00005462      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x0000546a      4c8d442420     lea r8, [rsp + 0x20]
0x0000546f      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00005477      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x0000547f      4889442410     mov qword [rsp + 0x10], rax
0x00005484      488d84248000.  lea rax, [rsp + 0x80]
0x0000548c      4531c9         xor r9d, r9d
0x0000548f      4889442418     mov qword [rsp + 0x18], rax
0x00005494      4889c5         mov rbp, rax
0x00005497      660f1f840000.  nop word [rax + rax]
0x000054a0      4183fa2f       cmp r10d, 0x2f
0x000054a4      7756           ja 0x54fc
0x000054a6      4489d0         mov eax, r10d
0x000054a9      41bb01000000   mov r11d, 1
0x000054af      4183c208       add r10d, 8
0x000054b3      4801e8         add rax, rbp
0x000054b6      488b00         mov rax, qword [rax]
0x000054b9      4885c0         test rax, rax
0x000054bc      4b8904c8       mov qword [r8 + r9*8], rax
0x000054c0      740a           je 0x54cc
0x000054c2      4983c101       add r9, 1
0x000054c6      4983f90a       cmp r9, 0xa
0x000054ca      75d4           jne 0x54a0
0x000054cc      4584db         test r11b, r11b
0x000054cf      7524           jne 0x54f5
0x000054d1      e89afaffff     call sym.version_etc_arn
0x000054d6      488b442478     mov rax, qword [rsp + 0x78]
0x000054db      644833042528.  xor rax, qword fs:[0x28]
0x000054e4      750a           jne 0x54f0
0x000054e6      4881c4b80000.  add rsp, 0xb8
0x000054ed      5b             pop rbx
0x000054ee      5d             pop rbp
0x000054ef      c3             ret
0x000054f0      e89bc4ffff     call sym.imp.__stack_chk_fail
0x000054f5      4489542408     mov dword [rsp + 8], r10d
0x000054fa      ebd5           jmp 0x54d1
0x000054fc      4889d8         mov rax, rbx
0x000054ff      4883c308       add rbx, 8
0x00005503      ebb1           jmp 0x54b6
0x00005505      90             nop
0x00005506      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00005510      53             push rbx
0x00005511      488d35eaf600.  lea rsi, str.Report_bugs_to:__s         ; 0x14c02 ; "\nReport bugs to: %s\n"
0x00005518      ba05000000     mov edx, 5
0x0000551d      31ff           xor edi, edi
0x0000551f      e83cc4ffff     call sym.imp.dcgettext
0x00005524      488d15ecf600.  lea rdx, str.bug_coreutils_gnu.org      ; 0x14c17 ; "bug-coreutils@gnu.org"
0x0000552b      4889c6         mov rsi, rax
0x0000552e      bf01000000     mov edi, 1
0x00005533      31c0           xor eax, eax
0x00005535      e826c6ffff     call sym.imp.__printf_chk
0x0000553a      488d35ecf600.  lea rsi, str.s_home_page:___s           ; 0x14c2d ; "%s home page: <%s>\n"
0x00005541      ba05000000     mov edx, 5
0x00005546      31ff           xor edi, edi
0x00005548      e813c4ffff     call sym.imp.dcgettext
0x0000554d      488d0d34f000.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x14588 ; "https://www.gnu.org/software/coreutils/"
0x00005554      488d1593ec00.  lea rdx, str.GNU_coreutils              ; 0x141ee ; "GNU coreutils"
0x0000555b      4889c6         mov rsi, rax
0x0000555e      bf01000000     mov edi, 1
0x00005563      31c0           xor eax, eax
0x00005565      e8f6c5ffff     call sym.imp.__printf_chk
0x0000556a      488b1d173b21.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x219088:8]=0
0x00005571      488d35e8f800.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x14e60 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00005578      31ff           xor edi, edi
0x0000557a      ba05000000     mov edx, 5
0x0000557f      e8dcc3ffff     call sym.imp.dcgettext
0x00005584      4889de         mov rsi, rbx
0x00005587      4889c7         mov rdi, rax
0x0000558a      5b             pop rbx
0x0000558b      e9d0c4ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00005590      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00005591      4889fb         mov rbx, rdi
0x00005594      e827c5ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00005599      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x0000559c      7505           jne 0x55a3
0x0000559e      4885db         test rbx, rbx
0x000055a1      7502           jne 0x55a5
0x000055a3      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x000055a4      c3             ret
0x000055a5      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x000055aa      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x000055b0      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x000055b3      48f7e6         mul rsi
0x000055b6      4889c7         mov rdi, rax
0x000055b9      0f90c0         seto al
0x000055bc      4885ff         test rdi, rdi
0x000055bf      780a           js 0x55cb
0x000055c1      0fb6c0         movzx eax, al
0x000055c4      4885c0         test rax, rax
0x000055c7      7502           jne 0x55cb
0x000055c9      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x000055cb      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x000055cf      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x000055d4      6690           nop
0x000055d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x000055e0      ebae           jmp sym.xmalloc
0x000055e2      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x000055e6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x000055f0      4885f6         test rsi, rsi
0x000055f3      53             push rbx
0x000055f4      4889f3         mov rbx, rsi
0x000055f7      7505           jne 0x55fe
0x000055f9      4885ff         test rdi, rdi
0x000055fc      751a           jne 0x5618
0x000055fe      4889de         mov rsi, rbx
0x00005601      e82ac5ffff     call sym.imp.realloc
0x00005606      4885c0         test rax, rax
0x00005609      7505           jne 0x5610
0x0000560b      4885db         test rbx, rbx
0x0000560e      7511           jne 0x5621                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00005610      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00005611      c3             ret
0x00005612      660f1f440000   nop word [rax + rax]
0x00005618      e863c2ffff     call sym.imp.free
0x0000561d      31c0           xor eax, eax
0x0000561f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00005620      c3             ret
0x00005621      e8ba010000     call sym.xalloc_die
0x00005626      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00005630      4889f0         mov rax, rsi
0x00005633      48f7e2         mul rdx
0x00005636      4889c6         mov rsi, rax
0x00005639      0f90c0         seto al
0x0000563c      4885f6         test rsi, rsi
0x0000563f      780a           js 0x564b
0x00005641      0fb6c0         movzx eax, al
0x00005644      4885c0         test rax, rax
0x00005647      7502           jne 0x564b
0x00005649      eba5           jmp sym.xrealloc
0x0000564b      4883ec08       sub rsp, 8
0x0000564f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00005654      6690           nop
0x00005656      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00005660      4885ff         test rdi, rdi
0x00005663      4989d1         mov r9, rdx
0x00005666      488b0e         mov rcx, qword [rsi]
0x00005669      7435           je 0x56a0
0x0000566b      31d2           xor edx, edx
0x0000566d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00005677      49f7f1         div r9
0x0000567a      4839c8         cmp rax, rcx
0x0000567d      763c           jbe 0x56bb
0x0000567f      4889c8         mov rax, rcx
0x00005682      48d1e8         shr rax, 1
0x00005685      488d4c0801     lea rcx, [rax + rcx + 1]
0x0000568a      48890e         mov qword [rsi], rcx
0x0000568d      490fafc9       imul rcx, r9
0x00005691      4889ce         mov rsi, rcx
0x00005694      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00005699      0f1f80000000.  nop dword [rax]
0x000056a0      4885c9         test rcx, rcx
0x000056a3      7423           je 0x56c8
0x000056a5      4889c8         mov rax, rcx
0x000056a8      49f7e1         mul r9
0x000056ab      0f90c2         seto dl
0x000056ae      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x000056b1      0fb6d2         movzx edx, dl
0x000056b4      7805           js 0x56bb
0x000056b6      4885d2         test rdx, rdx
0x000056b9      74cf           je 0x568a
0x000056bb      4883ec08       sub rsp, 8
0x000056bf      e81c010000     call sym.xalloc_die
0x000056c4      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x000056c8      31d2           xor edx, edx
0x000056ca      b880000000     mov eax, 0x80
0x000056cf      4531c0         xor r8d, r8d
0x000056d2      49f7f1         div r9
0x000056d5      4885c0         test rax, rax
0x000056d8      410f94c0       sete r8b
0x000056dc      498d0c00       lea rcx, [r8 + rax]
0x000056e0      ebc3           jmp 0x56a5
0x000056e2      0f1f4000       nop dword [rax]
0x000056e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x000056f0      4885ff         test rdi, rdi
0x000056f3      488b06         mov rax, qword [rsi]
0x000056f6      7428           je 0x5720
0x000056f8      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00005702      4839d0         cmp rax, rdx
0x00005705      772a           ja 0x5731
0x00005707      4889c2         mov rdx, rax
0x0000570a      48d1ea         shr rdx, 1
0x0000570d      488d440201     lea rax, [rdx + rax + 1]
0x00005712      488906         mov qword [rsi], rax
0x00005715      4889c6         mov rsi, rax
0x00005718      e9d3feffff     jmp sym.xrealloc
0x0000571d      0f1f00         nop dword [rax]
0x00005720      4885c0         test rax, rax
0x00005723      ba80000000     mov edx, 0x80
0x00005728      480f44c2       cmove rax, rdx
0x0000572c      4885c0         test rax, rax
0x0000572f      79e1           jns 0x5712
0x00005731      4883ec08       sub rsp, 8
0x00005735      e8a6000000     call sym.xalloc_die
0x0000573a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00005740      53             push rbx
0x00005741      4889fb         mov rbx, rdi
0x00005744      e847feffff     call sym.xmalloc
0x00005749      4889da         mov rdx, rbx
0x0000574c      31f6           xor esi, esi
0x0000574e      4889c7         mov rdi, rax
0x00005751      5b             pop rbx
0x00005752      e9b9c2ffff     jmp sym.imp.memset
0x00005757      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00005760      4889f8         mov rax, rdi
0x00005763      4883ec08       sub rsp, 8
0x00005767      48f7e6         mul rsi
0x0000576a      0f90c2         seto dl
0x0000576d      4885c0         test rax, rax
0x00005770      7817           js 0x5789
0x00005772      0fb6d2         movzx edx, dl
0x00005775      4885d2         test rdx, rdx
0x00005778      750f           jne 0x5789
0x0000577a      e8f1c2ffff     call sym.imp.calloc
0x0000577f      4885c0         test rax, rax
0x00005782      7405           je 0x5789
0x00005784      4883c408       add rsp, 8
0x00005788      c3             ret
0x00005789      e852000000     call sym.xalloc_die
0x0000578e      6690           nop
;-- xmemdup:
0x00005790      55             push rbp
0x00005791      53             push rbx
0x00005792      4889fd         mov rbp, rdi
0x00005795      4889f7         mov rdi, rsi
0x00005798      4889f3         mov rbx, rsi
0x0000579b      4883ec08       sub rsp, 8
0x0000579f      e8ecfdffff     call sym.xmalloc
0x000057a4      4883c408       add rsp, 8
0x000057a8      4889da         mov rdx, rbx
0x000057ab      4889ee         mov rsi, rbp
0x000057ae      5b             pop rbx
0x000057af      5d             pop rbp
0x000057b0      4889c7         mov rdi, rax
0x000057b3      e9d8c2ffff     jmp sym.imp.memcpy
0x000057b8      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x000057c0      53             push rbx
0x000057c1      4889fb         mov rbx, rdi
0x000057c4      e8b7c1ffff     call sym.imp.strlen
0x000057c9      4889df         mov rdi, rbx
0x000057cc      488d7001       lea rsi, [rax + 1]
0x000057d0      5b             pop rbx
0x000057d1      ebbd           jmp sym.xmemdup
0x000057d3      662e0f1f8400.  nop word cs:[rax + rax]
0x000057dd      0f1f00         nop dword [rax]
;-- xalloc_die:
0x000057e0      488d3528f700.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x14f0f ; "memory exhausted"
0x000057e7      4883ec08       sub rsp, 8
0x000057eb      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x000057f0      31ff           xor edi, edi
0x000057f2      e869c1ffff     call sym.imp.dcgettext
0x000057f7      8b3d1b382100   mov edi, dword [obj.exit_failure]       ; [0x219018:4]=1
0x000057fd      488d157cee00.  lea rdx, [0x00014680]                   ; "%s"
0x00005804      4889c1         mov rcx, rax
0x00005807      31f6           xor esi, esi
0x00005809      31c0           xor eax, eax
0x0000580b      e890c3ffff     call sym.imp.error
0x00005810      e87bc0ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00005815      662e0f1f8400.  nop word cs:[rax + rax]
0x0000581f      90             nop
;-- rpl_fseeko:
0x00005820      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00005824      48394710       cmp qword [rdi + 0x10], rax
0x00005828      7406           je 0x5830                               ; ../coreutils-8.31/lib/fseeko.c:32
0x0000582a      e991c3ffff     jmp sym.imp.fseeko
0x0000582f      90             nop
0x00005830      488b4720       mov rax, qword [rdi + 0x20]
0x00005834      48394728       cmp qword [rdi + 0x28], rax
0x00005838      75f0           jne 0x582a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x0000583a      48837f4800     cmp qword [rdi + 0x48], 0
0x0000583f      75e9           jne 0x582a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00005841      4154           push r12
0x00005843      55             push rbp
0x00005844      4189d4         mov r12d, edx
0x00005847      53             push rbx
0x00005848      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x0000584b      4889fb         mov rbx, rdi
0x0000584e      e84dc2ffff     call sym.imp.fileno
0x00005853      4489e2         mov edx, r12d
0x00005856      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00005859      89c7           mov edi, eax
0x0000585b      e890c1ffff     call sym.imp.lseek
0x00005860      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005864      740c           je 0x5872
0x00005866      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00005869      488983900000.  mov qword [rbx + 0x90], rax
0x00005870      31c0           xor eax, eax
0x00005872      5b             pop rbx
0x00005873      5d             pop rbp
0x00005874      415c           pop r12
0x00005876      c3             ret
0x00005877      660f1f840000.  nop word [rax + rax]
;-- rpl_mbrtowc:
0x00005880      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00005882      4154           push r12
0x00005884      4989f5         mov r13, rsi
0x00005887      55             push rbp
0x00005888      53             push rbx
0x00005889      4889fb         mov rbx, rdi
0x0000588c      4989d4         mov r12, rdx
0x0000588f      4883ec18       sub rsp, 0x18
0x00005893      64488b042528.  mov rax, qword fs:[0x28]
0x0000589c      4889442408     mov qword [rsp + 8], rax
0x000058a1      31c0           xor eax, eax
0x000058a3      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x000058a8      4885ff         test rdi, rdi
0x000058ab      480f44d8       cmove rbx, rax
0x000058af      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x000058b2      e8f9c0ffff     call sym.imp.mbrtowc
0x000058b7      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x000058bb      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x000058be      7620           jbe 0x58e0                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x000058c0      4d85e4         test r12, r12
0x000058c3      741b           je 0x58e0
0x000058c5      31ff           xor edi, edi
0x000058c7      e8e4e30000     call sym.hard_locale
0x000058cc      84c0           test al, al
0x000058ce      7510           jne 0x58e0
0x000058d0      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x000058d5      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x000058da      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x000058dc      0f1f4000       nop dword [rax]
0x000058e0      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x000058e5      644833142528.  xor rdx, qword fs:[0x28]
0x000058ee      4889e8         mov rax, rbp
0x000058f1      750b           jne 0x58fe
0x000058f3      4883c418       add rsp, 0x18
0x000058f7      5b             pop rbx
0x000058f8      5d             pop rbp
0x000058f9      415c           pop r12
0x000058fb      415d           pop r13
0x000058fd      c3             ret
0x000058fe      e88dc0ffff     call sym.imp.__stack_chk_fail
0x00005903      662e0f1f8400.  nop word cs:[rax + rax]
0x0000590d      0f1f00         nop dword [rax]
;-- peek_token_bracket:
0x00005910      488b4648       mov rax, qword [rsi + 0x48]             ; ../coreutils-8.31/lib/regcomp.c:2026
0x00005914      48394668       cmp qword [rsi + 0x68], rax
0x00005918      7e56           jle 0x5970
0x0000591a      4c8b4608       mov r8, qword [rsi + 8]                 ; ../coreutils-8.31/lib/regcomp.c:2033
0x0000591e      83be90000000.  cmp dword [rsi + 0x90], 1               ; ../coreutils-8.31/lib/regcomp.c:2037
0x00005925      410fb60c00     movzx ecx, byte [r8 + rax]              ; ../coreutils-8.31/lib/regcomp.c:2033
0x0000592a      880f           mov byte [rdi], cl                      ; ../coreutils-8.31/lib/regcomp.c:2034
0x0000592c      7e15           jle 0x5943                              ; ../coreutils-8.31/lib/regcomp.c:2037
0x0000592e      483b4630       cmp rax, qword [rsi + 0x30]
0x00005932      740f           je 0x5943
0x00005934      4c8b4e10       mov r9, qword [rsi + 0x10]              ; ../coreutils-8.31/lib/regcomp.c:2038
0x00005938      41833c81ff     cmp dword [r9 + rax*4], 0xffffffff
0x0000593d      0f847c000000   je 0x59bf
0x00005943      80f95c         cmp cl, 0x5c                            ; ../coreutils-8.31/lib/regcomp.c:2045
0x00005946      7468           je 0x59b0
0x00005948      80f95b         cmp cl, 0x5b                            ; ../coreutils-8.31/lib/regcomp.c:2056
0x0000594b      7433           je 0x5980
0x0000594d      80f95d         cmp cl, 0x5d                            ; ../coreutils-8.31/lib/regcomp.c:2091
0x00005950      0f849a000000   je 0x59f0
0x00005956      80f95e         cmp cl, 0x5e
0x00005959      0f8481000000   je 0x59e0
0x0000595f      80f92d         cmp cl, 0x2d
0x00005962      755b           jne 0x59bf
0x00005964      c6470816       mov byte [rdi + 8], 0x16                ; ../coreutils-8.31/lib/regcomp.c:2094 ; [0x16:1]=0
0x00005968      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regcomp.c:2105
0x0000596d      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2095
0x0000596e      6690           nop
0x00005970      c6470802       mov byte [rdi + 8], 2                   ; ../coreutils-8.31/lib/regcomp.c:2030
0x00005974      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/regcomp.c:2031
0x00005976      c3             ret
0x00005977      660f1f840000.  nop word [rax + rax]
0x00005980      488d4801       lea rcx, [rax + 1]                      ; ../coreutils-8.31/lib/regcomp.c:2060
0x00005984      483b4e58       cmp rcx, qword [rsi + 0x58]
0x00005988      7d46           jge 0x59d0
0x0000598a      410fb6440001   movzx eax, byte [r8 + rax + 1]          ; ../coreutils-8.31/lib/regcomp.c:2061
0x00005990      3c3a           cmp al, 0x3a                            ; ../coreutils-8.31/lib/regcomp.c:2066
0x00005992      8807           mov byte [rdi], al                      ; ../coreutils-8.31/lib/regcomp.c:2064
0x00005994      0f8496000000   je 0x5a30                               ; ../coreutils-8.31/lib/regcomp.c:2066
0x0000599a      3c3d           cmp al, 0x3d
0x0000599c      0f847e000000   je 0x5a20
0x000059a2      3c2e           cmp al, 0x2e
0x000059a4      752a           jne 0x59d0
0x000059a6      c647081a       mov byte [rdi + 8], 0x1a                ; ../coreutils-8.31/lib/regcomp.c:2069 ; [0x1a:1]=0
0x000059aa      b802000000     mov eax, 2                              ; ../coreutils-8.31/lib/regcomp.c:2065
0x000059af      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2070
0x000059b0      83e201         and edx, 1                              ; ../coreutils-8.31/lib/regcomp.c:2045
0x000059b3      740a           je 0x59bf
0x000059b5      488d5001       lea rdx, [rax + 1]                      ; ../coreutils-8.31/lib/regcomp.c:2046
0x000059b9      483b5658       cmp rdx, qword [rsi + 0x58]
0x000059bd      7c41           jl 0x5a00
0x000059bf      c6470801       mov byte [rdi + 8], 1                   ; ../coreutils-8.31/lib/regcomp.c:2103
0x000059c3      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regcomp.c:2105
0x000059c8      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2106
0x000059c9      0f1f80000000.  nop dword [rax]
0x000059d0      c6470801       mov byte [rdi + 8], 1                   ; ../coreutils-8.31/lib/regcomp.c:2084
0x000059d4      c6075b         mov byte [rdi], 0x5b                    ; ../coreutils-8.31/lib/regcomp.c:2085 ; '['
                                                                       ; [0x5b:1]=0
0x000059d7      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regcomp.c:2086
0x000059dc      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2087
0x000059dd      0f1f00         nop dword [rax]
0x000059e0      c6470819       mov byte [rdi + 8], 0x19                ; ../coreutils-8.31/lib/regcomp.c:2100 ; [0x19:1]=36
0x000059e4      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regcomp.c:2105
0x000059e9      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2101
0x000059ea      660f1f440000   nop word [rax + rax]
0x000059f0      c6470815       mov byte [rdi + 8], 0x15                ; ../coreutils-8.31/lib/regcomp.c:2097 ; [0x15:1]=0
0x000059f4      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regcomp.c:2105
0x000059f9      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2098
0x000059fa      660f1f440000   nop word [rax + rax]
0x00005a00      48895648       mov qword [rsi + 0x48], rdx             ; ../coreutils-8.31/lib/regcomp.c:2050
0x00005a04      410fb6440001   movzx eax, byte [r8 + rax + 1]          ; ../coreutils-8.31/lib/regcomp.c:2051
0x00005a0a      c6470801       mov byte [rdi + 8], 1                   ; ../coreutils-8.31/lib/regcomp.c:2053
0x00005a0e      8807           mov byte [rdi], al                      ; ../coreutils-8.31/lib/regcomp.c:2052
0x00005a10      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regcomp.c:2054
0x00005a15      c3             ret
0x00005a16      662e0f1f8400.  nop word cs:[rax + rax]
0x00005a20      c647081c       mov byte [rdi + 8], 0x1c                ; ../coreutils-8.31/lib/regcomp.c:2073 ; [0x1c:1]=0
0x00005a24      b802000000     mov eax, 2                              ; ../coreutils-8.31/lib/regcomp.c:2065
0x00005a29      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2074
0x00005a2a      660f1f440000   nop word [rax + rax]
0x00005a30      83e204         and edx, 4                              ; ../coreutils-8.31/lib/regcomp.c:2077
0x00005a33      749b           je 0x59d0
0x00005a35      c647081e       mov byte [rdi + 8], 0x1e                ; ../coreutils-8.31/lib/regcomp.c:2079 ; [0x1e:1]=0
0x00005a39      b802000000     mov eax, 2                              ; ../coreutils-8.31/lib/regcomp.c:2065
0x00005a3e      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2080
0x00005a3f      90             nop
;-- mark_opt_subexp:
0x00005a40      807e3011       cmp byte [rsi + 0x30], 0x11             ; ../coreutils-8.31/lib/regcomp.c:3858
0x00005a44      740a           je 0x5a50
0x00005a46      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/regcomp.c:3864
0x00005a48      c3             ret
0x00005a49      0f1f80000000.  nop dword [rax]
0x00005a50      483b7e28       cmp rdi, qword [rsi + 0x28]             ; ../coreutils-8.31/lib/regcomp.c:3860
0x00005a54      75f0           jne 0x5a46
0x00005a56      804e3208       or byte [rsi + 0x32], 8                 ; ../coreutils-8.31/lib/regcomp.c:3861
0x00005a5a      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/regcomp.c:3864
0x00005a5c      c3             ret
0x00005a5d      0f1f00         nop dword [rax]
;-- check_dst_limits_calc_pos_1:
0x00005a60      4157           push r15                                ; ../coreutils-8.31/lib/regexec.c:1905
0x00005a62      4156           push r14
0x00005a64      4989d1         mov r9, rdx
0x00005a67      4155           push r13
0x00005a69      4154           push r12
0x00005a6b      488d1449       lea rdx, [rcx + rcx*2]                  ; ../coreutils-8.31/lib/regexec.c:1907
0x00005a6f      55             push rbp                                ; ../coreutils-8.31/lib/regexec.c:1905
0x00005a70      53             push rbx
0x00005a71      4189f7         mov r15d, esi
0x00005a74      4883ec48       sub rsp, 0x48
0x00005a78      4c8bb7980000.  mov r14, qword [rdi + 0x98]             ; ../coreutils-8.31/lib/regexec.c:1906
0x00005a7f      48893c24       mov qword [rsp], rdi                    ; ../coreutils-8.31/lib/regexec.c:1905
0x00005a83      498b4630       mov rax, qword [r14 + 0x30]             ; ../coreutils-8.31/lib/regexec.c:1907
0x00005a87      4c8d24d0       lea r12, [rax + rdx*8]
0x00005a8b      49837c240800   cmp qword [r12 + 8], 0                  ; ../coreutils-8.31/lib/regexec.c:1912
0x00005a91      0f8e8e010000   jle 0x5c25
0x00005a97      4b8d0480       lea rax, [r8 + r8*4]                    ; ../coreutils-8.31/lib/regexec.c:1920
0x00005a9b      4989cb         mov r11, rcx
0x00005a9e      4489c9         mov ecx, r9d
0x00005aa1      4d89c2         mov r10, r8
0x00005aa4      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/regexec.c:1912
0x00005aa6      89742420       mov dword [rsp + 0x20], esi             ; ../coreutils-8.31/lib/regexec.c:1971
0x00005aaa      48c1e003       shl rax, 3                              ; ../coreutils-8.31/lib/regexec.c:1920
0x00005aae      4d89cf         mov r15, r9                             ; ../coreutils-8.31/lib/regexec.c:1971
0x00005ab1      4c895c2410     mov qword [rsp + 0x10], r11
0x00005ab6      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/regexec.c:1920
0x00005abb      b801000000     mov eax, 1
0x00005ac0      48d3e0         shl rax, cl
0x00005ac3      4889442418     mov qword [rsp + 0x18], rax
0x00005ac8      f7d0           not eax                                 ; ../coreutils-8.31/lib/regexec.c:1959
0x00005aca      6689442426     mov word [rsp + 0x26], ax
0x00005acf      89f0           mov eax, esi                            ; ../coreutils-8.31/lib/regexec.c:1966
0x00005ad1      83e001         and eax, 1
0x00005ad4      8944240c       mov dword [rsp + 0xc], eax
0x00005ad8      89f0           mov eax, esi                            ; ../coreutils-8.31/lib/regexec.c:1971
0x00005ada      83e002         and eax, 2
0x00005add      89442408       mov dword [rsp + 8], eax
0x00005ae1      eb22           jmp 0x5b05
0x00005ae3      0f1f440000     nop dword [rax + rax]
0x00005ae8      80fa09         cmp dl, 9                               ; ../coreutils-8.31/lib/regexec.c:1915
0x00005aeb      0f844f010000   je 0x5c40
0x00005af1      80fa04         cmp dl, 4
0x00005af4      7452           je 0x5b48
0x00005af6      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/regexec.c:1912
0x00005afa      49395c2408     cmp qword [r12 + 8], rbx
0x00005aff      0f8e1b010000   jle 0x5c20
0x00005b05      498b442410     mov rax, qword [r12 + 0x10]             ; ../coreutils-8.31/lib/regexec.c:1914
0x00005b0a      488b2cd8       mov rbp, qword [rax + rbx*8]
0x00005b0e      4889e8         mov rax, rbp                            ; ../coreutils-8.31/lib/regexec.c:1915
0x00005b11      48c1e004       shl rax, 4
0x00005b15      490306         add rax, qword [r14]
0x00005b18      0fb65008       movzx edx, byte [rax + 8]
0x00005b1c      80fa08         cmp dl, 8
0x00005b1f      75c7           jne 0x5ae8
0x00005b21      8b4c240c       mov ecx, dword [rsp + 0xc]              ; ../coreutils-8.31/lib/regexec.c:1966
0x00005b25      85c9           test ecx, ecx
0x00005b27      74cd           je 0x5af6
0x00005b29      4c3938         cmp qword [rax], r15
0x00005b2c      75c8           jne 0x5af6
0x00005b2e      4883c448       add rsp, 0x48                           ; ../coreutils-8.31/lib/regexec.c:1981
0x00005b32      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/regexec.c:1953 ; -1
0x00005b37      5b             pop rbx                                 ; ../coreutils-8.31/lib/regexec.c:1981
0x00005b38      5d             pop rbp
0x00005b39      415c           pop r12
0x00005b3b      415d           pop r13
0x00005b3d      415e           pop r14
0x00005b3f      415f           pop r15
0x00005b41      c3             ret
0x00005b42      660f1f440000   nop word [rax + rax]
0x00005b48      4983faff       cmp r10, 0xffffffffffffffff             ; ../coreutils-8.31/lib/regexec.c:1918
0x00005b4c      74a8           je 0x5af6
0x00005b4e      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/regexec.c:1920
0x00005b52      4c8b6c2428     mov r13, qword [rsp + 0x28]
0x00005b57      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/regexec.c:1940
0x00005b5a      4c89642430     mov qword [rsp + 0x30], r12
0x00005b5f      48895c2438     mov qword [rsp + 0x38], rbx
0x00005b64      4d89d4         mov r12, r10
0x00005b67      4c03a8d80000.  add r13, qword [rax + 0xd8]             ; ../coreutils-8.31/lib/regexec.c:1920
0x00005b6e      488d446d00     lea rax, [rbp + rbp*2]                  ; ../coreutils-8.31/lib/regexec.c:1940
0x00005b73      4c89f5         mov rbp, r14
0x00005b76      4989fe         mov r14, rdi
0x00005b79      48c1e003       shl rax, 3
0x00005b7d      4889c3         mov rbx, rax
0x00005b80      4d397500       cmp qword [r13], r14                    ; ../coreutils-8.31/lib/regexec.c:1926
0x00005b84      756a           jne 0x5bf0
0x00005b86      4983ff3f       cmp r15, 0x3f                           ; ../coreutils-8.31/lib/regexec.c:1929
0x00005b8a      7f0c           jg 0x5b98
0x00005b8c      410fb74522     movzx eax, word [r13 + 0x22]            ; ../coreutils-8.31/lib/regexec.c:1930
0x00005b91      4885442418     test qword [rsp + 0x18], rax
0x00005b96      7458           je 0x5bf0
0x00005b98      488b4528       mov rax, qword [rbp + 0x28]             ; ../coreutils-8.31/lib/regexec.c:1940
0x00005b9c      488b441810     mov rax, qword [rax + rbx + 0x10]
0x00005ba1      488b08         mov rcx, qword [rax]
0x00005ba4      48394c2410     cmp qword [rsp + 0x10], rcx             ; ../coreutils-8.31/lib/regexec.c:1941
0x00005ba9      0f84c1000000   je 0x5c70
0x00005baf      8b742420       mov esi, dword [rsp + 0x20]             ; ../coreutils-8.31/lib/regexec.c:1949
0x00005bb3      488b3c24       mov rdi, qword [rsp]
0x00005bb7      4d89e0         mov r8, r12
0x00005bba      4c89fa         mov rdx, r15
0x00005bbd      e89efeffff     call sym.check_dst_limits_calc_pos_1
0x00005bc2      83f8ff         cmp eax, 0xffffffff                     ; ../coreutils-8.31/lib/regexec.c:1952
0x00005bc5      0f8463ffffff   je 0x5b2e
0x00005bcb      85c0           test eax, eax                           ; ../coreutils-8.31/lib/regexec.c:1954
0x00005bcd      7508           jne 0x5bd7
0x00005bcf      8b742408       mov esi, dword [rsp + 8]
0x00005bd3      85f6           test esi, esi
0x00005bd5      757e           jne 0x5c55
0x00005bd7      4983ff3f       cmp r15, 0x3f                           ; ../coreutils-8.31/lib/regexec.c:1957
0x00005bdb      7f13           jg 0x5bf0
0x00005bdd      0fb7442426     movzx eax, word [rsp + 0x26]            ; ../coreutils-8.31/lib/regexec.c:1959
0x00005be2      6641214522     and word [r13 + 0x22], ax
0x00005be7      660f1f840000.  nop word [rax + rax]
0x00005bf0      4983c528       add r13, 0x28                           ; ../coreutils-8.31/lib/regexec.c:1961
0x00005bf4      41807df800     cmp byte [r13 - 8], 0
0x00005bf9      7585           jne 0x5b80
0x00005bfb      488b5c2438     mov rbx, qword [rsp + 0x38]
0x00005c00      4d89e2         mov r10, r12
0x00005c03      4c8b642430     mov r12, qword [rsp + 0x30]
0x00005c08      4989ee         mov r14, rbp
0x00005c0b      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/regexec.c:1912
0x00005c0f      49395c2408     cmp qword [r12 + 8], rbx                ; ../coreutils-8.31/lib/regexec.c:1852
0x00005c14      0f8febfeffff   jg 0x5b05
0x00005c1a      660f1f440000   nop word [rax + rax]
0x00005c20      448b7c2420     mov r15d, dword [rsp + 0x20]
0x00005c25      4883c448       add rsp, 0x48
0x00005c29      4489f8         mov eax, r15d
0x00005c2c      5b             pop rbx
0x00005c2d      d1f8           sar eax, 1
0x00005c2f      5d             pop rbp
0x00005c30      415c           pop r12
0x00005c32      415d           pop r13                                 ; ../coreutils-8.31/lib/regexec.c:1843
0x00005c34      415e           pop r14
0x00005c36      415f           pop r15
0x00005c38      c3             ret
0x00005c39      0f1f80000000.  nop dword [rax]
0x00005c40      8b542408       mov edx, dword [rsp + 8]
0x00005c44      85d2           test edx, edx
0x00005c46      0f84aafeffff   je 0x5af6
0x00005c4c      4c3938         cmp qword [rax], r15
0x00005c4f      0f85a1feffff   jne 0x5af6
0x00005c55      4883c448       add rsp, 0x48
0x00005c59      31c0           xor eax, eax
0x00005c5b      5b             pop rbx
0x00005c5c      5d             pop rbp
0x00005c5d      415c           pop r12
0x00005c5f      415d           pop r13
0x00005c61      415e           pop r14                                 ; ../coreutils-8.31/lib/regexec.c:1815
0x00005c63      415f           pop r15
0x00005c65      c3             ret
0x00005c66      662e0f1f8400.  nop word cs:[rax + rax]
0x00005c70      448b7c2420     mov r15d, dword [rsp + 0x20]
0x00005c75      4883c448       add rsp, 0x48
0x00005c79      5b             pop rbx
0x00005c7a      5d             pop rbp
0x00005c7b      4489f8         mov eax, r15d
0x00005c7e      83e001         and eax, 1
0x00005c81      415c           pop r12
0x00005c83      f7d8           neg eax
0x00005c85      415d           pop r13                                 ; ../coreutils-8.31/lib/regexec.c:1864
0x00005c87      415e           pop r14
0x00005c89      415f           pop r15
0x00005c8b      c3             ret
0x00005c8c      0f1f4000       nop dword [rax]
;-- check_dst_limits_calc_pos:
0x00005c90      488b87d80000.  mov rax, qword [rdi + 0xd8]
0x00005c97      488d34b6       lea rsi, [rsi + rsi*4]                  ; ../coreutils-8.31/lib/regexec.c:1871
0x00005c9b      488d04f0       lea rax, [rax + rsi*8]
0x00005c9f      4c8b5010       mov r10, qword [rax + 0x10]
0x00005ca3      4d39c2         cmp r10, r8                             ; ../coreutils-8.31/lib/regexec.c:1872
0x00005ca6      7f48           jg 0x5cf0
0x00005ca8      488b4018       mov rax, qword [rax + 0x18]             ; ../coreutils-8.31/lib/regexec.c:1874
0x00005cac      4c39c0         cmp rax, r8
0x00005caf      7c1f           jl 0x5cd0                               ; ../coreutils-8.31/lib/regexec.c:1879
0x00005cb1      31f6           xor esi, esi
0x00005cb3      4d39c2         cmp r10, r8
0x00005cb6      400f94c6       sete sil                                ; ../coreutils-8.31/lib/regexec.c:1868
0x00005cba      83ce02         or esi, 2
0x00005cbd      4c39c0         cmp rax, r8
0x00005cc0      7423           je 0x5ce5
0x00005cc2      31c0           xor eax, eax
0x00005cc4      4d39c2         cmp r10, r8
0x00005cc7      7417           je 0x5ce0
0x00005cc9      f3c3           ret
0x00005ccb      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/regexec.c:1877
0x00005cd0      b801000000     mov eax, 1
0x00005cd5      c3             ret
0x00005cd6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/regexec.c:1865
0x00005ce0      be01000000     mov esi, 1
0x00005ce5      4d89c8         mov r8, r9
0x00005ce8      e973fdffff     jmp sym.check_dst_limits_calc_pos_1
0x00005ced      0f1f00         nop dword [rax]
0x00005cf0      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/regcomp.c:1100 ; -1
0x00005cf5      c3             ret
0x00005cf6      662e0f1f8400.  nop word cs:[rax + rax]
;-- postorder:
0x00005d00      4154           push r12
0x00005d02      4989f4         mov r12, rsi                            ; ../coreutils-8.31/lib/regcomp.c:1107
0x00005d05      55             push rbp
0x00005d06      4889d5         mov rbp, rdx
0x00005d09      53             push rbx
0x00005d0a      4889fb         mov rbx, rdi
0x00005d0d      eb04           jmp 0x5d13
0x00005d0f      90             nop
0x00005d10      4889c3         mov rbx, rax
0x00005d13      488b4308       mov rax, qword [rbx + 8]
0x00005d17      4885c0         test rax, rax
0x00005d1a      75f4           jne 0x5d10
0x00005d1c      488b4310       mov rax, qword [rbx + 0x10]
0x00005d20      4885c0         test rax, rax
0x00005d23      75eb           jne 0x5d10
0x00005d25      4889de         mov rsi, rbx
0x00005d28      4889ef         mov rdi, rbp
0x00005d2b      41ffd4         call r12
0x00005d2e      85c0           test eax, eax
0x00005d30      7534           jne 0x5d66
0x00005d32      660f1f440000   nop word [rax + rax]
0x00005d38      488b13         mov rdx, qword [rbx]
0x00005d3b      4885d2         test rdx, rdx
0x00005d3e      7426           je 0x5d66
0x00005d40      488b4210       mov rax, qword [rdx + 0x10]
0x00005d44      4839d8         cmp rax, rbx
0x00005d47      4889d3         mov rbx, rdx
0x00005d4a      400f94c6       sete sil
0x00005d4e      4885c0         test rax, rax
0x00005d51      0f94c1         sete cl
0x00005d54      4008ce         or sil, cl
0x00005d57      74b7           je 0x5d10
0x00005d59      4889de         mov rsi, rbx
0x00005d5c      4889ef         mov rdi, rbp
0x00005d5f      41ffd4         call r12
0x00005d62      85c0           test eax, eax
0x00005d64      74d2           je 0x5d38
0x00005d66      5b             pop rbx
0x00005d67      5d             pop rbp
0x00005d68      415c           pop r12
0x00005d6a      c3             ret
0x00005d6b      0f1f440000     nop dword [rax + rax]
;-- preorder:
0x00005d70      4154           push r12
0x00005d72      4989f4         mov r12, rsi                            ; ../coreutils-8.31/lib/regcomp.c:1138
0x00005d75      55             push rbp
0x00005d76      4889d5         mov rbp, rdx                            ; ../coreutils-8.31/lib/regcomp.c:1142
0x00005d79      53             push rbx
0x00005d7a      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/regcomp.c:1146
0x00005d7d      eb04           jmp 0x5d83
0x00005d7f      90             nop
0x00005d80      4889d3         mov rbx, rdx
0x00005d83      4889de         mov rsi, rbx
0x00005d86      4889ef         mov rdi, rbp
0x00005d89      41ffd4         call r12                                ; ../coreutils-8.31/lib/regcomp.c:1147
0x00005d8c      85c0           test eax, eax
0x00005d8e      752c           jne 0x5dbc
0x00005d90      488b5308       mov rdx, qword [rbx + 8]
0x00005d94      31c9           xor ecx, ecx
0x00005d96      4885d2         test rdx, rdx
0x00005d99      75e5           jne 0x5d80
0x00005d9b      eb06           jmp 0x5da3
0x00005d9d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/regcomp.c:1151
0x00005da0      4889d3         mov rbx, rdx
0x00005da3      488b5310       mov rdx, qword [rbx + 0x10]
0x00005da7      4839ca         cmp rdx, rcx
0x00005daa      7405           je 0x5db1
0x00005dac      4885d2         test rdx, rdx
0x00005daf      75cf           jne 0x5d80
0x00005db1      488b13         mov rdx, qword [rbx]
0x00005db4      4889d9         mov rcx, rbx
0x00005db7      4885d2         test rdx, rdx
0x00005dba      75e4           jne 0x5da0
0x00005dbc      5b             pop rbx
0x00005dbd      5d             pop rbp
0x00005dbe      415c           pop r12
0x00005dc0      c3             ret
0x00005dc1      0f1f440000     nop dword [rax + rax]
0x00005dc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_string_realloc_buffers:
0x00005dd0      55             push rbp
0x00005dd1      53             push rbx
0x00005dd2      4889f5         mov rbp, rsi
0x00005dd5      4889fb         mov rbx, rdi
0x00005dd8      4883ec08       sub rsp, 8
0x00005ddc      83bf90000000.  cmp dword [rdi + 0x90], 1
0x00005de3      7e48           jle 0x5e2d
0x00005de5      48b8ffffffff.  movabs rax, 0x1fffffffffffffff          ; 2305843009213693951
0x00005def      4839c6         cmp rsi, rax
0x00005df2      776c           ja 0x5e60
0x00005df4      488b7f10       mov rdi, qword [rdi + 0x10]             ; ../coreutils-8.31/lib/regex_internal.c:28
0x00005df8      488d34b50000.  lea rsi, [rsi*4]                        ; ../coreutils-8.31/lib/regex_internal.c:29
0x00005e00      e82bbdffff     call sym.imp.realloc
0x00005e05      4885c0         test rax, rax
0x00005e08      7456           je 0x5e60
0x00005e0a      488b7b18       mov rdi, qword [rbx + 0x18]             ; ../coreutils-8.31/lib/regex_internal.c:32
0x00005e0e      48894310       mov qword [rbx + 0x10], rax
0x00005e12      4885ff         test rdi, rdi
0x00005e15      7416           je 0x5e2d
0x00005e17      488d34ed0000.  lea rsi, [rbp*8]
0x00005e1f      e80cbdffff     call sym.imp.realloc
0x00005e24      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/regex_internal.c:47
0x00005e27      7437           je 0x5e60
0x00005e29      48894318       mov qword [rbx + 0x18], rax
0x00005e2d      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x00005e34      7512           jne 0x5e48
0x00005e36      48896b40       mov qword [rbx + 0x40], rbp
0x00005e3a      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/regex_internal.c:42
0x00005e3e      31c0           xor eax, eax
0x00005e40      5b             pop rbx
0x00005e41      5d             pop rbp
0x00005e42      c3             ret
0x00005e43      0f1f440000     nop dword [rax + rax]
0x00005e48      488b7b08       mov rdi, qword [rbx + 8]
0x00005e4c      4889ee         mov rsi, rbp
0x00005e4f      e8dcbcffff     call sym.imp.realloc                    ; ../coreutils-8.31/lib/regex_internal.c:48
0x00005e54      4885c0         test rax, rax
0x00005e57      7407           je 0x5e60
0x00005e59      48894308       mov qword [rbx + 8], rax
0x00005e5d      ebd7           jmp 0x5e36
0x00005e5f      90             nop
0x00005e60      4883c408       add rsp, 8
0x00005e64      b80c000000     mov eax, 0xc
0x00005e69      5b             pop rbx
0x00005e6a      5d             pop rbp
0x00005e6b      c3             ret
0x00005e6c      0f1f4000       nop dword [rax]
;-- re_node_set_insert_last:
0x00005e70      55             push rbp
0x00005e71      53             push rbx
0x00005e72      4889f5         mov rbp, rsi
0x00005e75      4889fb         mov rbx, rdi
0x00005e78      4883ec08       sub rsp, 8
0x00005e7c      488b7708       mov rsi, qword [rdi + 8]
0x00005e80      483937         cmp qword [rdi], rsi                    ; ../coreutils-8.31/lib/regex_internal.c:1224
0x00005e83      488b4710       mov rax, qword [rdi + 0x10]
0x00005e87      741f           je 0x5ea8
0x00005e89      488d5601       lea rdx, [rsi + 1]
0x00005e8d      48895308       mov qword [rbx + 8], rdx
0x00005e91      48892cf0       mov qword [rax + rsi*8], rbp
0x00005e95      b801000000     mov eax, 1
0x00005e9a      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/regex_internal.c:1214
0x00005e9e      5b             pop rbx
0x00005e9f      5d             pop rbp
0x00005ea0      c3             ret
0x00005ea1      0f1f80000000.  nop dword [rax]
0x00005ea8      4883c601       add rsi, 1
0x00005eac      488d1436       lea rdx, [rsi + rsi]
0x00005eb0      48c1e604       shl rsi, 4
0x00005eb4      488917         mov qword [rdi], rdx
0x00005eb7      4889c7         mov rdi, rax
0x00005eba      e871bcffff     call sym.imp.realloc
0x00005ebf      4885c0         test rax, rax
0x00005ec2      740c           je 0x5ed0
0x00005ec4      48894310       mov qword [rbx + 0x10], rax
0x00005ec8      488b7308       mov rsi, qword [rbx + 8]
0x00005ecc      ebbb           jmp 0x5e89
0x00005ece      6690           nop
0x00005ed0      31c0           xor eax, eax
0x00005ed2      ebc6           jmp 0x5e9a                              ; ../coreutils-8.31/lib/regex_internal.c:1160
0x00005ed4      6690           nop
0x00005ed6      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_node_set_insert:
0x00005ee0      55             push rbp
0x00005ee1      53             push rbx
0x00005ee2      4889f5         mov rbp, rsi
0x00005ee5      4889fb         mov rbx, rdi
0x00005ee8      4883ec08       sub rsp, 8
0x00005eec      488b17         mov rdx, qword [rdi]
0x00005eef      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/regex_internal.c:1168
0x00005ef2      7424           je 0x5f18
0x00005ef4      488b7708       mov rsi, qword [rdi + 8]                ; ../coreutils-8.31/lib/regex_internal.c:1200
0x00005ef8      488b4710       mov rax, qword [rdi + 0x10]
0x00005efc      4885f6         test rsi, rsi
0x00005eff      754f           jne 0x5f50
0x00005f01      488928         mov qword [rax], rbp
0x00005f04      4883470801     add qword [rdi + 8], 1
0x00005f09      b801000000     mov eax, 1
0x00005f0e      4883c408       add rsp, 8
0x00005f12      5b             pop rbx
0x00005f13      5d             pop rbp
0x00005f14      c3             ret
0x00005f15      0f1f00         nop dword [rax]
0x00005f18      48c707010000.  mov qword [rdi], 1
0x00005f1f      48c747080100.  mov qword [rdi + 8], 1
0x00005f27      bf08000000     mov edi, 8
0x00005f2c      e88fbbffff     call sym.imp.malloc
0x00005f31      4885c0         test rax, rax
0x00005f34      48894310       mov qword [rbx + 0x10], rax
0x00005f38      0f848a000000   je 0x5fc8
0x00005f3e      488928         mov qword [rax], rbp
0x00005f41      4883c408       add rsp, 8
0x00005f45      b801000000     mov eax, 1
0x00005f4a      5b             pop rbx
0x00005f4b      5d             pop rbp
0x00005f4c      c3             ret                                     ; ../coreutils-8.31/lib/regex_internal.c:1187
0x00005f4d      0f1f00         nop dword [rax]
0x00005f50      4839f2         cmp rdx, rsi
0x00005f53      0f8487000000   je 0x5fe0
0x00005f59      483928         cmp qword [rax], rbp
0x00005f5c      488d14f50000.  lea rdx, [rsi*8]
0x00005f64      7e3a           jle 0x5fa0
0x00005f66      4885f6         test rsi, rsi
0x00005f69      7e18           jle 0x5f83                              ; ../coreutils-8.31/lib/regex_internal.c:1197
0x00005f6b      4801c2         add rdx, rax
0x00005f6e      6690           nop
0x00005f70      488b4af8       mov rcx, qword [rdx - 8]
0x00005f74      4883ea08       sub rdx, 8
0x00005f78      48894a08       mov qword [rdx + 8], rcx
0x00005f7c      4839d0         cmp rax, rdx
0x00005f7f      75ef           jne 0x5f70
0x00005f81      31d2           xor edx, edx
0x00005f83      48892c10       mov qword [rax + rdx], rbp
0x00005f87      b801000000     mov eax, 1
0x00005f8c      4883430801     add qword [rbx + 8], 1
0x00005f91      e978ffffff     jmp 0x5f0e
0x00005f96      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/regex_internal.c:1193
0x00005fa0      488b4c10f8     mov rcx, qword [rax + rdx - 8]
0x00005fa5      4839cd         cmp rbp, rcx
0x00005fa8      7dd9           jge 0x5f83
0x00005faa      660f1f440000   nop word [rax + rax]
0x00005fb0      48890c10       mov qword [rax + rdx], rcx
0x00005fb4      4883ea08       sub rdx, 8
0x00005fb8      488b4c10f8     mov rcx, qword [rax + rdx - 8]
0x00005fbd      4839e9         cmp rcx, rbp
0x00005fc0      7fee           jg 0x5fb0
0x00005fc2      ebbf           jmp 0x5f83
0x00005fc4      0f1f4000       nop dword [rax]
0x00005fc8      48c743080000.  mov qword [rbx + 8], 0
0x00005fd0      48c703000000.  mov qword [rbx], 0
0x00005fd7      e932ffffff     jmp 0x5f0e
0x00005fdc      0f1f4000       nop dword [rax]
0x00005fe0      488d1436       lea rdx, [rsi + rsi]
0x00005fe4      48c1e604       shl rsi, 4
0x00005fe8      488917         mov qword [rdi], rdx
0x00005feb      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/regex_internal.c:1178
0x00005fee      e83dbbffff     call sym.imp.realloc
0x00005ff3      4885c0         test rax, rax
0x00005ff6      740d           je 0x6005                               ; ../coreutils-8.31/lib/regex_internal.c:1446
0x00005ff8      48894310       mov qword [rbx + 0x10], rax
0x00005ffc      488b7308       mov rsi, qword [rbx + 8]
0x00006000      e954ffffff     jmp 0x5f59
0x00006005      31c0           xor eax, eax
0x00006007      e902ffffff     jmp 0x5f0e
0x0000600c      0f1f4000       nop dword [rax]
;-- register_state:
0x00006010      4156           push r14
0x00006012      4155           push r13
0x00006014      4989fe         mov r14, rdi
0x00006017      4154           push r12
0x00006019      55             push rbp
0x0000601a      4989d4         mov r12, rdx                            ; ../coreutils-8.31/lib/regex_internal.c:849
0x0000601d      53             push rbx
0x0000601e      488b5e10       mov rbx, qword [rsi + 0x10]
0x00006022      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/regex_internal.c:847
0x00006025      488916         mov qword [rsi], rdx
0x00006028      48c746280000.  mov qword [rsi + 0x28], 0
0x00006030      4c8d6e20       lea r13, [rsi + 0x20]
0x00006034      488d3cdd0000.  lea rdi, [rbx*8]                        ; ../coreutils-8.31/lib/regex_internal.c:1455
0x0000603c      48895e20       mov qword [rsi + 0x20], rbx
0x00006040      e87bbaffff     call sym.imp.malloc
0x00006045      4885c0         test rax, rax
0x00006048      48894530       mov qword [rbp + 0x30], rax
0x0000604c      7440           je 0x608e
0x0000604e      4885db         test rbx, rbx
0x00006051      7e4d           jle 0x60a0
0x00006053      31db           xor ebx, ebx
0x00006055      eb13           jmp 0x606a
0x00006057      660f1f840000.  nop word [rax + rax]
0x00006060      4883c301       add rbx, 1
0x00006064      48395d10       cmp qword [rbp + 0x10], rbx
0x00006068      7e36           jle 0x60a0                              ; ../coreutils-8.31/lib/regex_internal.c:1459
0x0000606a      488b4518       mov rax, qword [rbp + 0x18]
0x0000606e      488b34d8       mov rsi, qword [rax + rbx*8]
0x00006072      4889f0         mov rax, rsi
0x00006075      48c1e004       shl rax, 4                              ; ../coreutils-8.31/lib/regex_internal.c:1454
0x00006079      490306         add rax, qword [r14]
0x0000607c      f6400808       test byte [rax + 8], 8
0x00006080      75de           jne 0x6060
0x00006082      4c89ef         mov rdi, r13
0x00006085      e8e6fdffff     call sym.re_node_set_insert_last
0x0000608a      84c0           test al, al
0x0000608c      75d2           jne 0x6060
0x0000608e      5b             pop rbx
0x0000608f      b80c000000     mov eax, 0xc
0x00006094      5d             pop rbp
0x00006095      415c           pop r12
0x00006097      415d           pop r13
0x00006099      415e           pop r14                                 ; ../coreutils-8.31/lib/regex_internal.c:1464
0x0000609b      c3             ret
0x0000609c      0f1f4000       nop dword [rax]
0x000060a0      4d23a6880000.  and r12, qword [r14 + 0x88]
0x000060a7      498b4640       mov rax, qword [r14 + 0x40]
0x000060ab      4b8d1464       lea rdx, [r12 + r12*2]
0x000060af      488d1cd0       lea rbx, [rax + rdx*8]
0x000060b3      488b13         mov rdx, qword [rbx]                    ; ../coreutils-8.31/lib/regex_internal.c:1476
0x000060b6      48395308       cmp qword [rbx + 8], rdx
0x000060ba      488b4310       mov rax, qword [rbx + 0x10]
0x000060be      488d7201       lea rsi, [rdx + 1]
0x000060c2      7e12           jle 0x60d6
0x000060c4      488933         mov qword [rbx], rsi
0x000060c7      48892cd0       mov qword [rax + rdx*8], rbp
0x000060cb      31c0           xor eax, eax
0x000060cd      5b             pop rbx
0x000060ce      5d             pop rbp
0x000060cf      415c           pop r12
0x000060d1      415d           pop r13
0x000060d3      415e           pop r14
0x000060d5      c3             ret
0x000060d6      4c8d2436       lea r12, [rsi + rsi]
0x000060da      4889c7         mov rdi, rax
0x000060dd      48c1e604       shl rsi, 4
0x000060e1      e84abaffff     call sym.imp.realloc
0x000060e6      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/regex_internal.c:411
0x000060e9      74a3           je 0x608e
0x000060eb      488b13         mov rdx, qword [rbx]
0x000060ee      48894310       mov qword [rbx + 0x10], rax
0x000060f2      4c896308       mov qword [rbx + 8], r12
0x000060f6      488d7201       lea rsi, [rdx + 1]
0x000060fa      ebc8           jmp 0x60c4                              ; ../coreutils-8.31/lib/regex_internal.c:415
0x000060fc      0f1f4000       nop dword [rax]
;-- build_upper_buffer:
0x00006100      4154           push r12
0x00006102      4c8b6758       mov r12, qword [rdi + 0x58]
0x00006106      4c396740       cmp qword [rdi + 0x40], r12
0x0000610a      55             push rbp
0x0000610b      4889fd         mov rbp, rdi
0x0000610e      4c0f4e6740     cmovle r12, qword [rdi + 0x40]          ; ../coreutils-8.31/lib/regex_internal.c:417
0x00006113      53             push rbx
0x00006114      488b5f30       mov rbx, qword [rdi + 0x30]
0x00006118      4939dc         cmp r12, rbx
0x0000611b      7e38           jle 0x6155
0x0000611d      e83eb7ffff     call sym.imp.__ctype_toupper_loc        ; ../coreutils-8.31/lib/regex_internal.c:418
0x00006122      660f1f440000   nop word [rax + rax]
0x00006128      488b5500       mov rdx, qword [rbp]                    ; ../coreutils-8.31/lib/regex_internal.c:420
0x0000612c      488b4d78       mov rcx, qword [rbp + 0x78]
0x00006130      4801da         add rdx, rbx
0x00006133      48035528       add rdx, qword [rbp + 0x28]
0x00006137      4885c9         test rcx, rcx
0x0000613a      0fb612         movzx edx, byte [rdx]
0x0000613d      7529           jne 0x6168
0x0000613f      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/regex_internal.c:423
0x00006142      488b4d08       mov rcx, qword [rbp + 8]
0x00006146      8b1496         mov edx, dword [rsi + rdx*4]
0x00006149      881419         mov byte [rcx + rbx], dl
0x0000614c      4883c301       add rbx, 1
0x00006150      4939dc         cmp r12, rbx
0x00006153      75d3           jne 0x6128
0x00006155      48895d30       mov qword [rbp + 0x30], rbx
0x00006159      48895d38       mov qword [rbp + 0x38], rbx
0x0000615d      5b             pop rbx
0x0000615e      5d             pop rbp
0x0000615f      415c           pop r12
0x00006161      c3             ret
0x00006162      660f1f440000   nop word [rax + rax]
0x00006168      0fb61411       movzx edx, byte [rcx + rdx]
0x0000616c      ebd1           jmp 0x613f
0x0000616e      6690           nop
;-- build_wcs_buffer:
0x00006170      4157           push r15
0x00006172      4156           push r14
0x00006174      4155           push r13
0x00006176      4154           push r12
0x00006178      55             push rbp
0x00006179      53             push rbx
0x0000617a      4889fb         mov rbx, rdi
0x0000617d      4883ec68       sub rsp, 0x68
0x00006181      4c8b6758       mov r12, qword [rdi + 0x58]
0x00006185      488b6f30       mov rbp, qword [rdi + 0x30]
0x00006189      64488b042528.  mov rax, qword fs:[0x28]
0x00006192      4889442458     mov qword [rsp + 0x58], rax
0x00006197      31c0           xor eax, eax
0x00006199      4c396740       cmp qword [rdi + 0x40], r12
0x0000619d      4c0f4e6740     cmovle r12, qword [rdi + 0x40]
0x000061a2      4939ec         cmp r12, rbp                            ; ../coreutils-8.31/lib/regex_internal.c:103
0x000061a5      0f8e89000000   jle 0x6234                              ; ../coreutils-8.31/lib/regex_internal.c:104
0x000061ab      4c8d7720       lea r14, [rdi + 0x20]
0x000061af      4c8d6c240c     lea r13, [rsp + 0xc]
0x000061b4      0f1f4000       nop dword [rax]
0x000061b8      488b7b78       mov rdi, qword [rbx + 0x78]
0x000061bc      4c89e2         mov rdx, r12
0x000061bf      4c8b7b20       mov r15, qword [rbx + 0x20]             ; ../coreutils-8.31/lib/regex_internal.c:119
0x000061c3      4829ea         sub rdx, rbp
0x000061c6      4885ff         test rdi, rdi
0x000061c9      0f85e1000000   jne 0x62b0
0x000061cf      488b7328       mov rsi, qword [rbx + 0x28]
0x000061d3      4801ee         add rsi, rbp
0x000061d6      480333         add rsi, qword [rbx]
0x000061d9      4c89f1         mov rcx, r14
0x000061dc      4c89ef         mov rdi, r13
0x000061df      e89cf6ffff     call sym.rpl_mbrtowc
0x000061e4      488d50ff       lea rdx, [rax - 1]
0x000061e8      4883fafd       cmp rdx, 0xfffffffffffffffd
0x000061ec      0f878e000000   ja 0x6280
0x000061f2      4883f8fe       cmp rax, 0xfffffffffffffffe
0x000061f6      8b54240c       mov edx, dword [rsp + 0xc]
0x000061fa      7474           je 0x6270
0x000061fc      488b4b10       mov rcx, qword [rbx + 0x10]
0x00006200      488d7501       lea rsi, [rbp + 1]
0x00006204      488d3cad0000.  lea rdi, [rbp*4]
0x0000620c      8914a9         mov dword [rcx + rbp*4], edx
0x0000620f      4801c5         add rbp, rax
0x00006212      4839ee         cmp rsi, rbp
0x00006215      7d49           jge 0x6260                              ; ../coreutils-8.31/lib/regex_internal.c:98
0x00006217      488d543904     lea rdx, [rcx + rdi + 4]
0x0000621c      488d04a9       lea rax, [rcx + rbp*4]
0x00006220      c702ffffffff   mov dword [rdx], 0xffffffff             ; [0xffffffff:4]=-1 ; -1
0x00006226      4883c204       add rdx, 4
0x0000622a      4839d0         cmp rax, rdx
0x0000622d      75f1           jne 0x6220
0x0000622f      4c39e5         cmp rbp, r12
0x00006232      7c84           jl 0x61b8
0x00006234      488b442458     mov rax, qword [rsp + 0x58]
0x00006239      644833042528.  xor rax, qword fs:[0x28]
0x00006242      48896b30       mov qword [rbx + 0x30], rbp
0x00006246      48896b38       mov qword [rbx + 0x38], rbp             ; ../coreutils-8.31/lib/regex_internal.c:141
0x0000624a      0f85de000000   jne 0x632e
0x00006250      4883c468       add rsp, 0x68
0x00006254      5b             pop rbx
0x00006255      5d             pop rbp
0x00006256      415c           pop r12                                 ; ../coreutils-8.31/lib/regex_internal.c:120
0x00006258      415d           pop r13
0x0000625a      415e           pop r14
0x0000625c      415f           pop r15
0x0000625e      c3             ret
0x0000625f      90             nop
0x00006260      4889f5         mov rbp, rsi
0x00006263      4c39e5         cmp rbp, r12
0x00006266      0f8c4cffffff   jl 0x61b8                               ; ../coreutils-8.31/lib/regex_internal.c:126
0x0000626c      ebc6           jmp 0x6234
0x0000626e      6690           nop
0x00006270      488b4358       mov rax, qword [rbx + 0x58]
0x00006274      48394340       cmp qword [rbx + 0x40], rax             ; ../coreutils-8.31/lib/regex_internal.c:127
0x00006278      0f8c9a000000   jl 0x6318
0x0000627e      6690           nop
0x00006280      488b03         mov rax, qword [rbx]
0x00006283      488b4b78       mov rcx, qword [rbx + 0x78]
0x00006287      4801e8         add rax, rbp
0x0000628a      48034328       add rax, qword [rbx + 0x28]
0x0000628e      4885c9         test rcx, rcx
0x00006291      0fb610         movzx edx, byte [rax]
0x00006294      8954240c       mov dword [rsp + 0xc], edx
0x00006298      0f8583000000   jne 0x6321
0x0000629e      4c897b20       mov qword [rbx + 0x20], r15
0x000062a2      b801000000     mov eax, 1
0x000062a7      e950ffffff     jmp 0x61fc
0x000062ac      0f1f4000       nop dword [rax]
0x000062b0      8b8b90000000   mov ecx, dword [rbx + 0x90]
0x000062b6      31c0           xor eax, eax
0x000062b8      488d742410     lea rsi, [rsp + 0x10]
0x000062bd      85c9           test ecx, ecx
0x000062bf      7f20           jg 0x62e1
0x000062c1      e913ffffff     jmp 0x61d9
0x000062c6      662e0f1f8400.  nop word cs:[rax + rax]
0x000062d0      4883c001       add rax, 1
0x000062d4      4839c2         cmp rdx, rax                            ; ../coreutils-8.31/lib/regex_internal.c:113
0x000062d7      0f84fcfeffff   je 0x61d9
0x000062dd      488b7b78       mov rdi, qword [rbx + 0x78]
0x000062e1      488b0b         mov rcx, qword [rbx]
0x000062e4      4801e9         add rcx, rbp
0x000062e7      4801c1         add rcx, rax
0x000062ea      48034b28       add rcx, qword [rbx + 0x28]
0x000062ee      0fb609         movzx ecx, byte [rcx]
0x000062f1      0fb60c0f       movzx ecx, byte [rdi + rcx]
0x000062f5      488b7b08       mov rdi, qword [rbx + 8]
0x000062f9      4801ef         add rdi, rbp
0x000062fc      880c07         mov byte [rdi + rax], cl
0x000062ff      880c06         mov byte [rsi + rax], cl
0x00006302      8d4801         lea ecx, [rax + 1]
0x00006305      3b8b90000000   cmp ecx, dword [rbx + 0x90]
0x0000630b      7cc3           jl 0x62d0
0x0000630d      e9c7feffff     jmp 0x61d9
0x00006312      660f1f440000   nop word [rax + rax]
0x00006318      4c897b20       mov qword [rbx + 0x20], r15
0x0000631c      e913ffffff     jmp 0x6234
0x00006321      0fb61411       movzx edx, byte [rcx + rdx]
0x00006325      8954240c       mov dword [rsp + 0xc], edx
0x00006329      e970ffffff     jmp 0x629e
0x0000632e      e85db6ffff     call sym.imp.__stack_chk_fail
0x00006333      0f1f00         nop dword [rax]
0x00006336      662e0f1f8400.  nop word cs:[rax + rax]
;-- build_wcs_upper_buffer:
0x00006340      4157           push r15
0x00006342      4156           push r14                                ; ../coreutils-8.31/lib/regex_internal.c:154
0x00006344      4989fe         mov r14, rdi
0x00006347      4155           push r13
0x00006349      4154           push r12
0x0000634b      55             push rbp
0x0000634c      53             push rbx
0x0000634d      4881eca80000.  sub rsp, 0xa8
0x00006354      488b5f58       mov rbx, qword [rdi + 0x58]
0x00006358      4c8b7f30       mov r15, qword [rdi + 0x30]
0x0000635c      64488b042528.  mov rax, qword fs:[0x28]
0x00006365      488984249800.  mov qword [rsp + 0x98], rax
0x0000636d      31c0           xor eax, eax
0x0000636f      48395f40       cmp qword [rdi + 0x40], rbx             ; ../coreutils-8.31/lib/regex_internal.c:114
0x00006373      480f4e5f40     cmovle rbx, qword [rdi + 0x40]          ; ../coreutils-8.31/lib/regex_internal.c:105
0x00006378      80bf8a000000.  cmp byte [rdi + 0x8a], 0
0x0000637f      750b           jne 0x638c
0x00006381      48837f7800     cmp qword [rdi + 0x78], 0
0x00006386      0f8484010000   je 0x6510
0x0000638c      4d8b6e38       mov r13, qword [r14 + 0x38]
0x00006390      4939df         cmp r15, rbx
0x00006393      7c3b           jl 0x63d0
0x00006395      4d897e30       mov qword [r14 + 0x30], r15
0x00006399      4d896e38       mov qword [r14 + 0x38], r13
0x0000639d      31c0           xor eax, eax
0x0000639f      488b8c249800.  mov rcx, qword [rsp + 0x98]
0x000063a7      6448330c2528.  xor rcx, qword fs:[0x28]
0x000063b0      0f8584050000   jne 0x693a
0x000063b6      4881c4a80000.  add rsp, 0xa8
0x000063bd      5b             pop rbx
0x000063be      5d             pop rbp
0x000063bf      415c           pop r12
0x000063c1      415d           pop r13
0x000063c3      415e           pop r14
0x000063c5      415f           pop r15
0x000063c7      c3             ret
0x000063c8      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/regex_internal.c:-9
0x000063d0      498d4620       lea rax, [r14 + 0x20]
0x000063d4      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/regex_internal.c:-8
0x000063d9      4889d8         mov rax, rbx
0x000063dc      4c29f8         sub rax, r15
0x000063df      4889442410     mov qword [rsp + 0x10], rax
0x000063e4      488d442444     lea rax, [rsp + 0x44]
0x000063e9      4889442420     mov qword [rsp + 0x20], rax             ; ../coreutils-8.31/lib/regex_internal.c:5
0x000063ee      498b5678       mov rdx, qword [r14 + 0x78]
0x000063f2      498b4620       mov rax, qword [r14 + 0x20]
0x000063f6      4885d2         test rdx, rdx
0x000063f9      4889442448     mov qword [rsp + 0x48], rax
0x000063fe      0f8505030000   jne 0x6709
0x00006404      498b6e28       mov rbp, qword [r14 + 0x28]
0x00006408      4c01ed         add rbp, r13
0x0000640b      49032e         add rbp, qword [r14]
0x0000640e      48896c2418     mov qword [rsp + 0x18], rbp
0x00006413      488b4c2408     mov rcx, qword [rsp + 8]
0x00006418      488b542410     mov rdx, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/regex_internal.c:8
0x0000641d      488b742418     mov rsi, qword [rsp + 0x18]
0x00006422      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00006427      e854f4ffff     call sym.rpl_mbrtowc                    ; ../coreutils-8.31/lib/regex_internal.c:9
0x0000642c      4889c5         mov rbp, rax
0x0000642f      488d40ff       lea rax, [rax - 1]
0x00006433      4883f8fc       cmp rax, 0xfffffffffffffffc
0x00006437      4889442420     mov qword [rsp + 0x20], rax
0x0000643c      0f8737030000   ja 0x6779
0x00006442      8b542444       mov edx, dword [rsp + 0x44]
0x00006446      89d7           mov edi, edx
0x00006448      89542410       mov dword [rsp + 0x10], edx
0x0000644c      e88fb7ffff     call sym.imp.towupper
0x00006451      8b542410       mov edx, dword [rsp + 0x10]
0x00006455      4189c4         mov r12d, eax
0x00006458      4c897c2408     mov qword [rsp + 8], r15
0x0000645d      39c2           cmp edx, eax
0x0000645f      0f84fb020000   je 0x6760
0x00006465      488d4c2450     lea rcx, [rsp + 0x50]                   ; ../coreutils-8.31/lib/regex_internal.c:15
0x0000646a      488d542448     lea rdx, [rsp + 0x48]
0x0000646f      89c6           mov esi, eax
0x00006471      4889cf         mov rdi, rcx
0x00006474      48894c2410     mov qword [rsp + 0x10], rcx
0x00006479      e852b6ffff     call sym.imp.wcrtomb
0x0000647e      4839c5         cmp rbp, rax
0x00006481      4989c3         mov r11, rax
0x00006484      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00006489      0f8587030000   jne 0x6816
0x0000648f      498b7e08       mov rdi, qword [r14 + 8]
0x00006493      4889ea         mov rdx, rbp
0x00006496      4889ce         mov rsi, rcx
0x00006499      4c01ff         add rdi, r15
0x0000649c      e8efb5ffff     call sym.imp.memcpy                     ; ../coreutils-8.31/lib/regex_internal.c:70
0x000064a1      4180be8c0000.  cmp byte [r14 + 0x8c], 0
0x000064a9      4a8d442d00     lea rax, [rbp + r13]
0x000064ae      0f8531030000   jne 0x67e5                              ; ../coreutils-8.31/lib/regex_internal.c:74
0x000064b4      4983c701       add r15, 1
0x000064b8      488b742408     mov rsi, qword [rsp + 8]
0x000064bd      498b5610       mov rdx, qword [r14 + 0x10]
0x000064c1      498d4c2fff     lea rcx, [r15 + rbp - 1]
0x000064c6      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/regex_internal.c:75
0x000064c9      4939cf         cmp r15, rcx
0x000064cc      488d04b50000.  lea rax, [rsi*4]
0x000064d4      448924b2       mov dword [rdx + rsi*4], r12d
0x000064d8      0f8db2feffff   jge 0x6390
0x000064de      488d440204     lea rax, [rdx + rax + 4]
0x000064e3      488d148a       lea rdx, [rdx + rcx*4]
0x000064e7      660f1f840000.  nop word [rax + rax]
0x000064f0      c700ffffffff   mov dword [rax], 0xffffffff             ; [0xffffffff:4]=-1 ; -1
0x000064f6      4883c004       add rax, 4
0x000064fa      4839c2         cmp rdx, rax
0x000064fd      75f1           jne 0x64f0
0x000064ff      4989cf         mov r15, rcx
0x00006502      e989feffff     jmp 0x6390
0x00006507      660f1f840000.  nop word [rax + rax]
0x00006510      80bf8c000000.  cmp byte [rdi + 0x8c], 0
0x00006517      0f856ffeffff   jne 0x638c
0x0000651d      4939df         cmp r15, rbx
0x00006520      0f8d92010000   jge 0x66b8
0x00006526      488d4720       lea rax, [rdi + 0x20]                   ; ../coreutils-8.31/lib/regex_internal.c:-81
0x0000652a      4889442408     mov qword [rsp + 8], rax
0x0000652f      488d442444     lea rax, [rsp + 0x44]
0x00006534      4889442430     mov qword [rsp + 0x30], rax
0x00006539      488d442448     lea rax, [rsp + 0x48]
0x0000653e      4889442438     mov qword [rsp + 0x38], rax             ; ../coreutils-8.31/lib/regex_internal.c:-80
0x00006543      488d442450     lea rax, [rsp + 0x50]
0x00006548      4889442428     mov qword [rsp + 0x28], rax
0x0000654d      0f1f00         nop dword [rax]
0x00006550      498b6e28       mov rbp, qword [r14 + 0x28]             ; ../coreutils-8.31/lib/regex_internal.c:-67
0x00006554      4d89fd         mov r13, r15                            ; ../coreutils-8.31/lib/regex_internal.c:-66
0x00006557      4c01fd         add rbp, r15
0x0000655a      49032e         add rbp, qword [r14]
0x0000655d      440fb66500     movzx r12d, byte [rbp]
0x00006562      41f6c480       test r12b, 0x80
0x00006566      7512           jne 0x657a
0x00006568      488b7c2408     mov rdi, qword [rsp + 8]
0x0000656d      e8ceb6ffff     call sym.imp.mbsinit
0x00006572      85c0           test eax, eax
0x00006574      0f85ee000000   jne 0x6668
0x0000657a      498b4620       mov rax, qword [r14 + 0x20]
0x0000657e      488b7c2430     mov rdi, qword [rsp + 0x30]             ; ../coreutils-8.31/lib/regex_internal.c:-63
0x00006583      4889da         mov rdx, rbx
0x00006586      488b4c2408     mov rcx, qword [rsp + 8]
0x0000658b      4c29fa         sub rdx, r15
0x0000658e      4889ee         mov rsi, rbp
0x00006591      4889542410     mov qword [rsp + 0x10], rdx
0x00006596      4889442448     mov qword [rsp + 0x48], rax
0x0000659b      48897c2420     mov qword [rsp + 0x20], rdi             ; ../coreutils-8.31/lib/regex_internal.c:-60
0x000065a0      e8dbf2ffff     call sym.rpl_mbrtowc
0x000065a5      4889c5         mov rbp, rax
0x000065a8      488d40ff       lea rax, [rax - 1]
0x000065ac      4883f8fc       cmp rax, 0xfffffffffffffffc
0x000065b0      0f87e2000000   ja 0x6698
0x000065b6      8b542444       mov edx, dword [rsp + 0x44]
0x000065ba      89d7           mov edi, edx
0x000065bc      89542418       mov dword [rsp + 0x18], edx             ; wchar2.h:-182
0x000065c0      e81bb6ffff     call sym.imp.towupper                   ; string_fortified.h:-479
0x000065c5      8b542418       mov edx, dword [rsp + 0x18]
0x000065c9      4189c4         mov r12d, eax
0x000065cc      39c2           cmp edx, eax
0x000065ce      7478           je 0x6648
0x000065d0      488b542438     mov rdx, qword [rsp + 0x38]             ; ../coreutils-8.31/lib/regex_internal.c:-172
0x000065d5      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000065da      89c6           mov esi, eax
0x000065dc      e8efb4ffff     call sym.imp.wcrtomb
0x000065e1      4839c5         cmp rbp, rax
0x000065e4      0f856e010000   jne 0x6758
0x000065ea      498b7e08       mov rdi, qword [r14 + 8]
0x000065ee      488b742428     mov rsi, qword [rsp + 0x28]
0x000065f3      4889ea         mov rdx, rbp
0x000065f6      4c01ff         add rdi, r15
0x000065f9      e892b4ffff     call sym.imp.memcpy
0x000065fe      4983c701       add r15, 1
0x00006602      498b5610       mov rdx, qword [r14 + 0x10]
0x00006606      4a8d04ad0000.  lea rax, [r13*4]
0x0000660e      498d4c2fff     lea rcx, [r15 + rbp - 1]
0x00006613      4939cf         cmp r15, rcx
0x00006616      468924aa       mov dword [rdx + r13*4], r12d
0x0000661a      7d1e           jge 0x663a                              ; ../coreutils-8.31/lib/regex_internal.c:-173
0x0000661c      488d440204     lea rax, [rdx + rax + 4]
0x00006621      488d148a       lea rdx, [rdx + rcx*4]
0x00006625      0f1f00         nop dword [rax]
0x00006628      c700ffffffff   mov dword [rax], 0xffffffff             ; [0xffffffff:4]=-1 ; -1
0x0000662e      4883c004       add rax, 4                              ; string_fortified.h:-479
0x00006632      4839c2         cmp rdx, rax
0x00006635      75f1           jne 0x6628
0x00006637      4989cf         mov r15, rcx
0x0000663a      4c39fb         cmp rbx, r15                            ; ../coreutils-8.31/lib/regex_internal.c:-204
0x0000663d      0f8f0dffffff   jg 0x6550
0x00006643      eb73           jmp 0x66b8
0x00006645      0f1f00         nop dword [rax]
0x00006648      498b7628       mov rsi, qword [r14 + 0x28]
0x0000664c      498b7e08       mov rdi, qword [r14 + 8]
0x00006650      4889ea         mov rdx, rbp
0x00006653      4c01fe         add rsi, r15
0x00006656      490336         add rsi, qword [r14]
0x00006659      4c01ff         add rdi, r15
0x0000665c      e82fb4ffff     call sym.imp.memcpy
0x00006661      eb9b           jmp 0x65fe
0x00006663      0f1f440000     nop dword [rax + rax]
0x00006668      e8f3b1ffff     call sym.imp.__ctype_toupper_loc
0x0000666d      488b00         mov rax, qword [rax]
0x00006670      498b5608       mov rdx, qword [r14 + 8]                ; ../coreutils-8.31/lib/regex_internal.c:-166
0x00006674      428b04a0       mov eax, dword [rax + r12*4]
0x00006678      4288043a       mov byte [rdx + r15], al
0x0000667c      498b5608       mov rdx, qword [r14 + 8]
0x00006680      498b4610       mov rax, qword [r14 + 0x10]
0x00006684      420fb6143a     movzx edx, byte [rdx + r15]
0x00006689      428914b8       mov dword [rax + r15*4], edx
0x0000668d      4983c701       add r15, 1
0x00006691      eba7           jmp 0x663a
0x00006693      0f1f440000     nop dword [rax + rax]
0x00006698      4883f8fd       cmp rax, 0xfffffffffffffffd
0x0000669c      7532           jne 0x66d0
0x0000669e      498b4658       mov rax, qword [r14 + 0x58]
0x000066a2      49394640       cmp qword [r14 + 0x40], rax             ; ../coreutils-8.31/lib/regex_internal.c:-162
0x000066a6      7d28           jge 0x66d0
0x000066a8      488b442448     mov rax, qword [rsp + 0x48]
0x000066ad      49894620       mov qword [r14 + 0x20], rax
0x000066b1      0f1f80000000.  nop dword [rax]
0x000066b8      4d897e30       mov qword [r14 + 0x30], r15
0x000066bc      4d897e38       mov qword [r14 + 0x38], r15
0x000066c0      31c0           xor eax, eax
0x000066c2      e9d8fcffff     jmp 0x639f
0x000066c7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/regex_internal.c:-158
0x000066d0      498b06         mov rax, qword [r14]
0x000066d3      498b5608       mov rdx, qword [r14 + 8]
0x000066d7      4c01f8         add rax, r15
0x000066da      49034628       add rax, qword [r14 + 0x28]
0x000066de      0fb600         movzx eax, byte [rax]
0x000066e1      4288043a       mov byte [rdx + r15], al
0x000066e5      498b5610       mov rdx, qword [r14 + 0x10]
0x000066e9      4983c701       add r15, 1
0x000066ed      4883fdff       cmp rbp, 0xffffffffffffffff
0x000066f1      428904aa       mov dword [rdx + r13*4], eax
0x000066f5      0f853fffffff   jne 0x663a
0x000066fb      488b442448     mov rax, qword [rsp + 0x48]
0x00006700      49894620       mov qword [r14 + 0x20], rax
0x00006704      e931ffffff     jmp 0x663a
0x00006709      418b86900000.  mov eax, dword [r14 + 0x90]
0x00006710      85c0           test eax, eax                           ; ../coreutils-8.31/lib/regex_internal.c:-132
0x00006712      0f8e18020000   jle 0x6930
0x00006718      498b7e28       mov rdi, qword [r14 + 0x28]
0x0000671c      448d58ff       lea r11d, [rax - 1]
0x00006720      488d4c2450     lea rcx, [rsp + 0x50]
0x00006725      31c0           xor eax, eax
0x00006727      4c01ef         add rdi, r13
0x0000672a      49033e         add rdi, qword [r14]                    ; ../coreutils-8.31/lib/regex_internal.c:-178
0x0000672d      eb0b           jmp 0x673a
0x0000672f      4883c001       add rax, 1
0x00006733      4839442410     cmp qword [rsp + 0x10], rax
0x00006738      7411           je 0x674b
0x0000673a      0fb63407       movzx esi, byte [rdi + rax]
0x0000673e      4939c3         cmp r11, rax
0x00006741      0fb63432       movzx esi, byte [rdx + rsi]
0x00006745      40883401       mov byte [rcx + rax], sil
0x00006749      75e4           jne 0x672f
0x0000674b      48894c2418     mov qword [rsp + 0x18], rcx
0x00006750      e9befcffff     jmp 0x6413
0x00006755      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/regex_internal.c:-175
0x00006758      4d89fd         mov r13, r15                            ; ../coreutils-8.31/lib/regex_internal.c:-173
0x0000675b      e98efcffff     jmp 0x63ee
0x00006760      498b7e08       mov rdi, qword [r14 + 8]
0x00006764      488b742418     mov rsi, qword [rsp + 0x18]
0x00006769      4889ea         mov rdx, rbp
0x0000676c      4c01ff         add rdi, r15
0x0000676f      e81cb3ffff     call sym.imp.memcpy                     ; ../coreutils-8.31/lib/regex_internal.c:-171
0x00006774      e928fdffff     jmp 0x64a1
0x00006779      48837c2420fd   cmp qword [rsp + 0x20], 0xfffffffffffffffd
0x0000677f      750a           jne 0x678b
0x00006781      498b4658       mov rax, qword [r14 + 0x58]
0x00006785      49394640       cmp qword [r14 + 0x40], rax
0x00006789      7c7d           jl 0x6808
0x0000678b      498b06         mov rax, qword [r14]
0x0000678e      498b5678       mov rdx, qword [r14 + 0x78]
0x00006792      4c01e8         add rax, r13
0x00006795      49034628       add rax, qword [r14 + 0x28]
0x00006799      4885d2         test rdx, rdx
0x0000679c      0fb600         movzx eax, byte [rax]
0x0000679f      0f85a7010000   jne 0x694c
0x000067a5      498b5608       mov rdx, qword [r14 + 8]
0x000067a9      4c89f9         mov rcx, r15
0x000067ac      4288043a       mov byte [rdx + r15], al
0x000067b0      4180be8c0000.  cmp byte [r14 + 0x8c], 0
0x000067b8      0f8581010000   jne 0x693f
0x000067be      498b5610       mov rdx, qword [r14 + 0x10]
0x000067c2      4983c501       add r13, 1
0x000067c6      4983c701       add r15, 1
0x000067ca      4883fdff       cmp rbp, 0xffffffffffffffff
0x000067ce      89048a         mov dword [rdx + rcx*4], eax
0x000067d1      0f85b9fbffff   jne 0x6390
0x000067d7      488b442448     mov rax, qword [rsp + 0x48]
0x000067dc      49894620       mov qword [r14 + 0x20], rax
0x000067e0      e9abfbffff     jmp 0x6390                              ; ../coreutils-8.31/lib/regex_internal.c:-240
0x000067e5      498b5618       mov rdx, qword [r14 + 0x18]
0x000067e9      4c89f9         mov rcx, r15
0x000067ec      4d89ea         mov r10, r13
0x000067ef      4c29e9         sub rcx, r13
0x000067f2      488d14ca       lea rdx, [rdx + rcx*8]
0x000067f6      4e8914d2       mov qword [rdx + r10*8], r10
0x000067fa      4983c201       add r10, 1
0x000067fe      4c39d0         cmp rax, r10
0x00006801      75f3           jne 0x67f6
0x00006803      e9acfcffff     jmp 0x64b4
0x00006808      488b442448     mov rax, qword [rsp + 0x48]
0x0000680d      49894620       mov qword [r14 + 0x20], rax
0x00006811      e97ffbffff     jmp 0x6395
0x00006816      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000681a      0f8440ffffff   je 0x6760
0x00006820      4a8d0438       lea rax, [rax + r15]
0x00006824      4889c6         mov rsi, rax
0x00006827      4889442408     mov qword [rsp + 8], rax
0x0000682c      498b4640       mov rax, qword [r14 + 0x40]             ; ../coreutils-8.31/lib/regex_internal.c:-219
0x00006830      4839c6         cmp rsi, rax
0x00006833      77d3           ja 0x6808
0x00006835      49837e1800     cmp qword [r14 + 0x18], 0
0x0000683a      0f84b8000000   je 0x68f8
0x00006840      4180be8c0000.  cmp byte [r14 + 0x8c], 0
0x00006848      7520           jne 0x686a
0x0000684a      4d85ff         test r15, r15
0x0000684d      7413           je 0x6862
0x0000684f      498b5618       mov rdx, qword [r14 + 0x18]             ; ../coreutils-8.31/lib/regex_internal.c:-213
0x00006853      31c0           xor eax, eax
0x00006855      488904c2       mov qword [rdx + rax*8], rax
0x00006859      4883c001       add rax, 1
0x0000685d      4c39f8         cmp rax, r15
0x00006860      75f3           jne 0x6855                              ; ../coreutils-8.31/lib/regex_internal.c:-215
0x00006862      41c6868c0000.  mov byte [r14 + 0x8c], 1
0x0000686a      498b7e08       mov rdi, qword [r14 + 8]                ; ../coreutils-8.31/lib/regex_internal.c:-213
0x0000686e      4889ce         mov rsi, rcx
0x00006871      4c89da         mov rdx, r11                            ; ../coreutils-8.31/lib/regex_internal.c:-210
0x00006874      4c895c2410     mov qword [rsp + 0x10], r11
0x00006879      4c01ff         add rdi, r15
0x0000687c      e80fb2ffff     call sym.imp.memcpy
0x00006881      498b4610       mov rax, qword [r14 + 0x10]
0x00006885      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x0000688a      4a8d0cb8       lea rcx, [rax + r15*4]
0x0000688e      498b4618       mov rax, qword [r14 + 0x18]
0x00006892      4983fb01       cmp r11, 1
0x00006896      448921         mov dword [rcx], r12d
0x00006899      4a8d34f8       lea rsi, [rax + r15*8]
0x0000689d      4c892e         mov qword [rsi], r13
0x000068a0      7628           jbe 0x68ca
0x000068a2      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regex_internal.c:-207
0x000068a7      488b542420     mov rdx, qword [rsp + 0x20]
0x000068ac      4839e8         cmp rax, rbp                            ; ../coreutils-8.31/lib/regex_internal.c:-204
0x000068af      480f42d0       cmovb rdx, rax
0x000068b3      4c01ea         add rdx, r13
0x000068b6      488914c6       mov qword [rsi + rax*8], rdx
0x000068ba      c70481ffffff.  mov dword [rcx + rax*4], 0xffffffff     ; ../coreutils-8.31/lib/regex_internal.c:-201 ; [0xffffffff:4]=-1 ; -1
0x000068c1      4883c001       add rax, 1
0x000068c5      4c39d8         cmp rax, r11
0x000068c8      75dd           jne 0x68a7
0x000068ca      498b5e58       mov rbx, qword [r14 + 0x58]
0x000068ce      4929eb         sub r11, rbp
0x000068d1      4c01db         add rbx, r11
0x000068d4      4d3b6e60       cmp r13, qword [r14 + 0x60]
0x000068d8      49895e58       mov qword [r14 + 0x58], rbx
0x000068dc      7d04           jge 0x68e2                              ; ../coreutils-8.31/lib/regex_internal.c:-228
0x000068de      4d015e68       add qword [r14 + 0x68], r11
0x000068e2      49395e40       cmp qword [r14 + 0x40], rbx
0x000068e6      4c8b7c2408     mov r15, qword [rsp + 8]
0x000068eb      490f4e5e40     cmovle rbx, qword [r14 + 0x40]
0x000068f0      4901ed         add r13, rbp                            ; ../coreutils-8.31/lib/regex_internal.c:-225
0x000068f3      e998faffff     jmp 0x6390
0x000068f8      488d3cc50000.  lea rdi, [rax*8]
0x00006900      48894c2418     mov qword [rsp + 0x18], rcx
0x00006905      4c895c2410     mov qword [rsp + 0x10], r11
0x0000690a      e8b1b1ffff     call sym.imp.malloc
0x0000690f      4885c0         test rax, rax
0x00006912      49894618       mov qword [r14 + 0x18], rax
0x00006916      4c8b5c2410     mov r11, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/regexec.c:3290
0x0000691b      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00006920      0f851affffff   jne 0x6840
0x00006926      b80c000000     mov eax, 0xc                            ; ../coreutils-8.31/lib/regexec.c:3295
0x0000692b      e96ffaffff     jmp 0x639f
0x00006930      488d4c2450     lea rcx, [rsp + 0x50]
0x00006935      e911feffff     jmp 0x674b
0x0000693a      e851b0ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/regexec.c:3300
0x0000693f      498b5618       mov rdx, qword [r14 + 0x18]
0x00006943      4e892cfa       mov qword [rdx + r15*8], r13
0x00006947      e972feffff     jmp 0x67be
0x0000694c      0fb60402       movzx eax, byte [rdx + rax]
0x00006950      e950feffff     jmp 0x67a5
0x00006955      90             nop
0x00006956      662e0f1f8400.  nop word cs:[rax + rax]
;-- extend_buffers:
0x00006960      55             push rbp
0x00006961      53             push rbx
0x00006962      48bafeffffff.  movabs rdx, 0xffffffffffffffe           ; 1152921504606846974
0x0000696c      4883ec08       sub rsp, 8
0x00006970      488b4740       mov rax, qword [rdi + 0x40]
0x00006974      4839d0         cmp rax, rdx
0x00006977      0f870b010000   ja 0x6a88
0x0000697d      488b5758       mov rdx, qword [rdi + 0x58]
0x00006981      4801c0         add rax, rax
0x00006984      4863f6         movsxd rsi, esi
0x00006987      4889fb         mov rbx, rdi
0x0000698a      4839d0         cmp rax, rdx                            ; ../coreutils-8.31/lib/regexec.c:3320
0x0000698d      480f4fc2       cmovg rax, rdx
0x00006991      4839f0         cmp rax, rsi
0x00006994      480f4df0       cmovge rsi, rax
0x00006998      e833f4ffff     call sym.re_string_realloc_buffers
0x0000699d      85c0           test eax, eax
0x0000699f      89c5           mov ebp, eax                            ; ../coreutils-8.31/lib/regexec.c:3323
0x000069a1      0f85b6000000   jne 0x6a5d
0x000069a7      488bbbb80000.  mov rdi, qword [rbx + 0xb8]
0x000069ae      4885ff         test rdi, rdi
0x000069b1      7421           je 0x69d4
0x000069b3      488b4340       mov rax, qword [rbx + 0x40]
0x000069b7      488d34c50800.  lea rsi, [rax*8 + 8]
0x000069bf      e86cb1ffff     call sym.imp.realloc
0x000069c4      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/regex_internal.c:-209
0x000069c7      0f84bb000000   je 0x6a88
0x000069cd      488983b80000.  mov qword [rbx + 0xb8], rax
0x000069d4      80bb88000000.  cmp byte [rbx + 0x88], 0
0x000069db      8b8390000000   mov eax, dword [rbx + 0x90]
0x000069e1      741d           je 0x6a00
0x000069e3      83f801         cmp eax, 1
0x000069e6      4889df         mov rdi, rbx
0x000069e9      0f8eb1000000   jle 0x6aa0
0x000069ef      4883c408       add rsp, 8
0x000069f3      5b             pop rbx
0x000069f4      5d             pop rbp                                 ; ../coreutils-8.31/lib/regex_internal.c:-204
0x000069f5      e946f9ffff     jmp sym.build_wcs_upper_buffer
0x000069fa      660f1f440000   nop word [rax + rax]
0x00006a00      83f801         cmp eax, 1
0x00006a03      7f6b           jg 0x6a70
0x00006a05      488b4b78       mov rcx, qword [rbx + 0x78]
0x00006a09      4885c9         test rcx, rcx
0x00006a0c      744f           je 0x6a5d
0x00006a0e      488b7358       mov rsi, qword [rbx + 0x58]
0x00006a12      48397340       cmp qword [rbx + 0x40], rsi
0x00006a16      480f4e7340     cmovle rsi, qword [rbx + 0x40]
0x00006a1b      488b4330       mov rax, qword [rbx + 0x30]
0x00006a1f      4839c6         cmp rsi, rax
0x00006a22      7f10           jg 0x6a34
0x00006a24      eb2f           jmp 0x6a55
0x00006a26      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/regexec.c:3337
0x00006a30      488b4b78       mov rcx, qword [rbx + 0x78]
0x00006a34      488b13         mov rdx, qword [rbx]
0x00006a37      4801c2         add rdx, rax
0x00006a3a      48035328       add rdx, qword [rbx + 0x28]
0x00006a3e      0fb612         movzx edx, byte [rdx]                   ; ../coreutils-8.31/lib/regexec.c:3297
0x00006a41      0fb60c11       movzx ecx, byte [rcx + rdx]
0x00006a45      488b5308       mov rdx, qword [rbx + 8]
0x00006a49      880c02         mov byte [rdx + rax], cl
0x00006a4c      4883c001       add rax, 1
0x00006a50      4839c6         cmp rsi, rax
0x00006a53      75db           jne 0x6a30
0x00006a55      48894330       mov qword [rbx + 0x30], rax
0x00006a59      48894338       mov qword [rbx + 0x38], rax
0x00006a5d      4883c408       add rsp, 8
0x00006a61      89e8           mov eax, ebp
0x00006a63      5b             pop rbx
0x00006a64      5d             pop rbp
0x00006a65      c3             ret
0x00006a66      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/regexec.c:925
0x00006a70      4889df         mov rdi, rbx
0x00006a73      e8f8f6ffff     call sym.build_wcs_buffer
0x00006a78      4883c408       add rsp, 8
0x00006a7c      89e8           mov eax, ebp
0x00006a7e      5b             pop rbx
0x00006a7f      5d             pop rbp
0x00006a80      c3             ret                                     ; ../coreutils-8.31/lib/regexec.c:929
0x00006a81      0f1f80000000.  nop dword [rax]
0x00006a88      bd0c000000     mov ebp, 0xc
0x00006a8d      4883c408       add rsp, 8
0x00006a91      89e8           mov eax, ebp                            ; ../coreutils-8.31/lib/regexec.c:935
0x00006a93      5b             pop rbx
0x00006a94      5d             pop rbp
0x00006a95      c3             ret                                     ; ../coreutils-8.31/lib/regexec.c:939
0x00006a96      662e0f1f8400.  nop word cs:[rax + rax]
0x00006aa0      e85bf6ffff     call sym.build_upper_buffer
0x00006aa5      4883c408       add rsp, 8
0x00006aa9      89e8           mov eax, ebp
0x00006aab      5b             pop rbx
0x00006aac      5d             pop rbp
0x00006aad      c3             ret
0x00006aae      6690           nop
;-- clean_state_log_if_needed:
0x00006ab0      4154           push r12
0x00006ab2      55             push rbp
0x00006ab3      4889f5         mov rbp, rsi
0x00006ab6      53             push rbx
0x00006ab7      488b4740       mov rax, qword [rdi + 0x40]
0x00006abb      4889fb         mov rbx, rdi
0x00006abe      4c8ba7c00000.  mov r12, qword [rdi + 0xc0]
0x00006ac5      4839f0         cmp rax, rsi
0x00006ac8      7f26           jg 0x6af0
0x00006aca      483b4758       cmp rax, qword [rdi + 0x58]
0x00006ace      7d20           jge 0x6af0
0x00006ad0      8d7501         lea esi, [rbp + 1]                      ; string_fortified.h:-698
0x00006ad3      4889df         mov rdi, rbx
0x00006ad6      e885feffff     call sym.extend_buffers
0x00006adb      85c0           test eax, eax
0x00006add      7507           jne 0x6ae6
0x00006adf      4939ec         cmp r12, rbp
0x00006ae2      7c2c           jl 0x6b10
0x00006ae4      31c0           xor eax, eax
0x00006ae6      5b             pop rbx
0x00006ae7      5d             pop rbp
0x00006ae8      415c           pop r12
0x00006aea      c3             ret
0x00006aeb      0f1f440000     nop dword [rax + rax]
0x00006af0      488b4330       mov rax, qword [rbx + 0x30]
0x00006af4      4839e8         cmp rax, rbp
0x00006af7      7fe6           jg 0x6adf                               ; ../coreutils-8.31/lib/regcomp.c:3021
0x00006af9      483b4358       cmp rax, qword [rbx + 0x58]
0x00006afd      7de0           jge 0x6adf
0x00006aff      8d7501         lea esi, [rbp + 1]
0x00006b02      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/regcomp.c:3027
0x00006b05      e856feffff     call sym.extend_buffers
0x00006b0a      85c0           test eax, eax
0x00006b0c      74d1           je 0x6adf
0x00006b0e      ebd6           jmp 0x6ae6
0x00006b10      488b83b80000.  mov rax, qword [rbx + 0xb8]
0x00006b17      4889ea         mov rdx, rbp
0x00006b1a      31f6           xor esi, esi
0x00006b1c      4c29e2         sub rdx, r12
0x00006b1f      48c1e203       shl rdx, 3
0x00006b23      4a8d7ce008     lea rdi, [rax + r12*8 + 8]
0x00006b28      e8e3aeffff     call sym.imp.memset
0x00006b2d      4889abc00000.  mov qword [rbx + 0xc0], rbp
0x00006b34      ebae           jmp 0x6ae4
0x00006b36      662e0f1f8400.  nop word cs:[rax + rax]
;-- free_charset:
0x00006b40      53             push rbx
0x00006b41      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/regcomp.c:2974
0x00006b44      488b3f         mov rdi, qword [rdi]
0x00006b47      e834adffff     call sym.imp.free
0x00006b4c      488b7b08       mov rdi, qword [rbx + 8]
0x00006b50      e82badffff     call sym.imp.free
0x00006b55      488b7b10       mov rdi, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/regcomp.c:2986
0x00006b59      e822adffff     call sym.imp.free                       ; ../coreutils-8.31/lib/regcomp.c:2987
0x00006b5e      488b7b18       mov rdi, qword [rbx + 0x18]             ; ../coreutils-8.31/lib/regcomp.c:2989
0x00006b62      e819adffff     call sym.imp.free
0x00006b67      4889df         mov rdi, rbx
0x00006b6a      5b             pop rbx
0x00006b6b      e910adffff     jmp sym.imp.free
;-- free_token:
0x00006b70      8b4708         mov eax, dword [rdi + 8]
0x00006b73      25ff000400     and eax, 0x400ff
0x00006b78      83f806         cmp eax, 6
0x00006b7b      7413           je 0x6b90
0x00006b7d      83f803         cmp eax, 3
0x00006b80      7406           je 0x6b88
0x00006b82      f3c3           ret
0x00006b84      0f1f4000       nop dword [rax]
0x00006b88      488b3f         mov rdi, qword [rdi]
0x00006b8b      e9f0acffff     jmp sym.imp.free
0x00006b90      488b3f         mov rdi, qword [rdi]
0x00006b93      ebab           jmp sym.free_charset
0x00006b95      90             nop
0x00006b96      662e0f1f8400.  nop word cs:[rax + rax]
;-- free_tree:
0x00006ba0      488d7e28       lea rdi, [rsi + 0x28]
0x00006ba4      4883ec08       sub rsp, 8
0x00006ba8      e8c3ffffff     call sym.free_token
0x00006bad      31c0           xor eax, eax
0x00006baf      4883c408       add rsp, 8
0x00006bb3      c3             ret
0x00006bb4      6690           nop                                     ; ../coreutils-8.31/lib/regex_internal.c:551
0x00006bb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_dfa_add_node:
0x00006bc0      4157           push r15
0x00006bc2      4156           push r14
0x00006bc4      4989f6         mov r14, rsi
0x00006bc7      4155           push r13                                ; ../coreutils-8.31/lib/regex_internal.c:554
0x00006bc9      4154           push r12
0x00006bcb      55             push rbp
0x00006bcc      53             push rbx
0x00006bcd      4889fb         mov rbx, rdi
0x00006bd0      4883ec18       sub rsp, 0x18
0x00006bd4      488b7710       mov rsi, qword [rdi + 0x10]
0x00006bd8      488b6f08       mov rbp, qword [rdi + 8]
0x00006bdc      4839ee         cmp rsi, rbp
0x00006bdf      0f83ab000000   jae 0x6c90
0x00006be5      4c8b6718       mov r12, qword [rdi + 0x18]
0x00006be9      488b6f28       mov rbp, qword [rdi + 0x28]
0x00006bed      4889f0         mov rax, rsi
0x00006bf0      89d1           mov ecx, edx
0x00006bf2      48c1e004       shl rax, 4
0x00006bf6      480303         add rax, qword [rbx]
0x00006bf9      81e1ff00fcff   and ecx, 0xfffc00ff
0x00006bff      48895008       mov qword [rax + 8], rdx
0x00006c03      894808         mov dword [rax + 8], ecx
0x00006c06      31c9           xor ecx, ecx                            ; ../coreutils-8.31/lib/regex_internal.c:559
0x00006c08      80fa06         cmp dl, 6
0x00006c0b      4c8930         mov qword [rax], r14
0x00006c0e      0f94c1         sete cl
0x00006c11      80fa05         cmp dl, 5
0x00006c14      750c           jne 0x6c22
0x00006c16      31c9           xor ecx, ecx                            ; string_fortified.h:-828
0x00006c18      83bbb4000000.  cmp dword [rbx + 0xb4], 1
0x00006c1f      0f9fc1         setg cl
0x00006c22      0fb6500a       movzx edx, byte [rax + 0xa]
0x00006c26      c1e104         shl ecx, 4
0x00006c29      660fefc0       pxor xmm0, xmm0
0x00006c2d      83e2ef         and edx, 0xffffffef                     ; ../coreutils-8.31/lib/regex_internal.c:561 ; 4294967279
0x00006c30      09ca           or edx, ecx
0x00006c32      88500a         mov byte [rax + 0xa], dl
0x00006c35      49c704f4ffff.  mov qword [r12 + rsi*8], 0xffffffffffffffff
0x00006c3d      488b4310       mov rax, qword [rbx + 0x10]
0x00006c41      488d0440       lea rax, [rax + rax*2]                  ; ../coreutils-8.31/lib/regex_internal.c:514
0x00006c45      488d44c500     lea rax, [rbp + rax*8]
0x00006c4a      0f1100         movups xmmword [rax], xmm0
0x00006c4d      48c740100000.  mov qword [rax + 0x10], 0
0x00006c55      488b4310       mov rax, qword [rbx + 0x10]
0x00006c59      488d1440       lea rdx, [rax + rax*2]                  ; ../coreutils-8.31/lib/regex_internal.c:527
0x00006c5d      488b4330       mov rax, qword [rbx + 0x30]
0x00006c61      488d04d0       lea rax, [rax + rdx*8]
0x00006c65      0f1100         movups xmmword [rax], xmm0
0x00006c68      48c740100000.  mov qword [rax + 0x10], 0
0x00006c70      488b4310       mov rax, qword [rbx + 0x10]
0x00006c74      488d5001       lea rdx, [rax + 1]
0x00006c78      48895310       mov qword [rbx + 0x10], rdx
0x00006c7c      4883c418       add rsp, 0x18
0x00006c80      5b             pop rbx                                 ; ../coreutils-8.31/lib/regex_internal.c:531
0x00006c81      5d             pop rbp
0x00006c82      415c           pop r12
0x00006c84      415d           pop r13
0x00006c86      415e           pop r14
0x00006c88      415f           pop r15
0x00006c8a      c3             ret
0x00006c8b      0f1f440000     nop dword [rax + rax]
0x00006c90      4c8d6c2d00     lea r13, [rbp + rbp]
0x00006c95      48b8aaaaaaaa.  movabs rax, 0xaaaaaaaaaaaaaaa
0x00006c9f      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/regex_internal.c:532
0x00006ca2      0f87da000000   ja 0x6d82
0x00006ca8      488b3f         mov rdi, qword [rdi]
0x00006cab      4889ee         mov rsi, rbp
0x00006cae      4889542408     mov qword [rsp + 8], rdx
0x00006cb3      48c1e605       shl rsi, 5
0x00006cb7      e874aeffff     call sym.imp.realloc
0x00006cbc      4885c0         test rax, rax
0x00006cbf      0f84bd000000   je 0x6d82
0x00006cc5      4989ef         mov r15, rbp
0x00006cc8      488b7b18       mov rdi, qword [rbx + 0x18]
0x00006ccc      488903         mov qword [rbx], rax
0x00006ccf      49c1e704       shl r15, 4
0x00006cd3      4c89fe         mov rsi, r15
0x00006cd6      e855aeffff     call sym.imp.realloc
0x00006cdb      488b7b20       mov rdi, qword [rbx + 0x20]
0x00006cdf      4c89fe         mov rsi, r15
0x00006ce2      4d8d7cad00     lea r15, [r13 + rbp*4]
0x00006ce7      4989c4         mov r12, rax
0x00006cea      49c1e703       shl r15, 3
0x00006cee      e83daeffff     call sym.imp.realloc
0x00006cf3      488b7b28       mov rdi, qword [rbx + 0x28]
0x00006cf7      4c89fe         mov rsi, r15
0x00006cfa      48890424       mov qword [rsp], rax
0x00006cfe      e82daeffff     call sym.imp.realloc
0x00006d03      488b7b30       mov rdi, qword [rbx + 0x30]
0x00006d07      4c89fe         mov rsi, r15
0x00006d0a      4889c5         mov rbp, rax
0x00006d0d      e81eaeffff     call sym.imp.realloc
0x00006d12      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/regex_internal.c:539
0x00006d15      488b0c24       mov rcx, qword [rsp]
0x00006d19      7435           je 0x6d50
0x00006d1b      4885c9         test rcx, rcx
0x00006d1e      7430           je 0x6d50                               ; ../coreutils-8.31/lib/regex_internal.c:540
0x00006d20      4885ed         test rbp, rbp
0x00006d23      742b           je 0x6d50
0x00006d25      4885c0         test rax, rax
0x00006d28      488b542408     mov rdx, qword [rsp + 8]
0x00006d2d      7421           je 0x6d50
0x00006d2f      4c896318       mov qword [rbx + 0x18], r12
0x00006d33      48894b20       mov qword [rbx + 0x20], rcx             ; ../coreutils-8.31/lib/regex_internal.c:542
0x00006d37      48896b28       mov qword [rbx + 0x28], rbp
0x00006d3b      48894330       mov qword [rbx + 0x30], rax
0x00006d3f      4c896b08       mov qword [rbx + 8], r13
0x00006d43      488b7310       mov rsi, qword [rbx + 0x10]
0x00006d47      e9a1feffff     jmp 0x6bed
0x00006d4c      0f1f4000       nop dword [rax]
0x00006d50      4c89e7         mov rdi, r12
0x00006d53      4889442408     mov qword [rsp + 8], rax
0x00006d58      48890c24       mov qword [rsp], rcx
0x00006d5c      e81fabffff     call sym.imp.free
0x00006d61      488b0c24       mov rcx, qword [rsp]
0x00006d65      4889cf         mov rdi, rcx
0x00006d68      e813abffff     call sym.imp.free
0x00006d6d      4889ef         mov rdi, rbp
0x00006d70      e80babffff     call sym.imp.free
0x00006d75      488b442408     mov rax, qword [rsp + 8]
0x00006d7a      4889c7         mov rdi, rax
0x00006d7d      e8feaaffff     call sym.imp.free
0x00006d82      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00006d89      e9eefeffff     jmp 0x6c7c
0x00006d8e      6690           nop
;-- duplicate_node:
0x00006d90      4155           push r13
0x00006d92      4154           push r12
0x00006d94      4989f5         mov r13, rsi
0x00006d97      55             push rbp
0x00006d98      53             push rbx
0x00006d99      49c1e504       shl r13, 4
0x00006d9d      4889f5         mov rbp, rsi
0x00006da0      4189d4         mov r12d, edx
0x00006da3      4889fb         mov rbx, rdi
0x00006da6      4883ec08       sub rsp, 8
0x00006daa      488b07         mov rax, qword [rdi]
0x00006dad      4a8b3428       mov rsi, qword [rax + r13]
0x00006db1      4a8b542808     mov rdx, qword [rax + r13 + 8]
0x00006db6      e805feffff     call sym.re_dfa_add_node
0x00006dbb      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006dbf      7463           je 0x6e24
0x00006dc1      4489e7         mov edi, r12d
0x00006dc4      4c8b03         mov r8, qword [rbx]
0x00006dc7      4889c6         mov rsi, rax
0x00006dca      6681e7ff03     and di, 0x3ff
0x00006dcf      48c1e604       shl rsi, 4
0x00006dd3      89f9           mov ecx, edi
0x00006dd5      81e1ff030000   and ecx, 0x3ff                          ; ../coreutils-8.31/lib/regcomp.c:726
0x00006ddb      4c01c6         add rsi, r8
0x00006dde      c1e108         shl ecx, 8
0x00006de1      89ca           mov edx, ecx                            ; ../coreutils-8.31/lib/regcomp.c:590
0x00006de3      8b4e08         mov ecx, dword [rsi + 8]
0x00006de6      81e1ff00fcff   and ecx, 0xfffc00ff
0x00006dec      09d1           or ecx, edx
0x00006dee      894e08         mov dword [rsi + 8], ecx
0x00006df1      438b542808     mov edx, dword [r8 + r13 + 8]
0x00006df6      81e1ff00fcff   and ecx, 0xfffc00ff
0x00006dfc      c1ea08         shr edx, 8
0x00006dff      09fa           or edx, edi
0x00006e01      81e2ff030000   and edx, 0x3ff
0x00006e07      c1e208         shl edx, 8
0x00006e0a      09ca           or edx, ecx
0x00006e0c      89d1           mov ecx, edx
0x00006e0e      895608         mov dword [rsi + 8], edx
0x00006e11      c1e910         shr ecx, 0x10
0x00006e14      89ca           mov edx, ecx
0x00006e16      83ca04         or edx, 4
0x00006e19      88560a         mov byte [rsi + 0xa], dl
0x00006e1c      488b5320       mov rdx, qword [rbx + 0x20]
0x00006e20      48892cc2       mov qword [rdx + rax*8], rbp
0x00006e24      4883c408       add rsp, 8
0x00006e28      5b             pop rbx
0x00006e29      5d             pop rbp
0x00006e2a      415c           pop r12
0x00006e2c      415d           pop r13
0x00006e2e      c3             ret
0x00006e2f      90             nop
;-- duplicate_node_closure:
0x00006e30      4157           push r15
0x00006e32      4156           push r14
0x00006e34      4989f1         mov r9, rsi
0x00006e37      4155           push r13
0x00006e39      4154           push r12
0x00006e3b      4989fe         mov r14, rdi
0x00006e3e      55             push rbp
0x00006e3f      53             push rbx
0x00006e40      4989d5         mov r13, rdx
0x00006e43      4489c5         mov ebp, r8d
0x00006e46      4883ec18       sub rsp, 0x18
0x00006e4a      48894c2408     mov qword [rsp + 8], rcx
0x00006e4f      4d8b06         mov r8, qword [r14]
0x00006e52      4c89c8         mov rax, r9
0x00006e55      498b7e28       mov rdi, qword [r14 + 0x28]
0x00006e59      48c1e004       shl rax, 4
0x00006e5d      4d89ec         mov r12, r13
0x00006e60      4c01c0         add rax, r8
0x00006e63      80780804       cmp byte [rax + 8], 4
0x00006e67      0f84b3010000   je 0x7020
0x00006e6d      4f8d2449       lea r12, [r9 + r9*2]
0x00006e71      49c1e403       shl r12, 3
0x00006e75      4a8d3427       lea rsi, [rdi + r12]
0x00006e79      488b4e08       mov rcx, qword [rsi + 8]
0x00006e7d      4885c9         test rcx, rcx
0x00006e80      0f84f3010000   je 0x7079
0x00006e86      4b8d5c6d00     lea rbx, [r13 + r13*2]
0x00006e8b      488b7610       mov rsi, qword [rsi + 0x10]
0x00006e8f      48c1e303       shl rbx, 3
0x00006e93      4801df         add rdi, rbx
0x00006e96      4883f901       cmp rcx, 1
0x00006e9a      4c8b3e         mov r15, qword [rsi]
0x00006e9d      48c747080000.  mov qword [rdi + 8], 0
0x00006ea5      0f8415010000   je 0x6fc0
0x00006eab      498b5610       mov rdx, qword [r14 + 0x10]
0x00006eaf      488d72ff       lea rsi, [rdx - 1]
0x00006eb3      4889f0         mov rax, rsi
0x00006eb6      48c1e004       shl rax, 4
0x00006eba      4c01c0         add rax, r8
0x00006ebd      f6400a04       test byte [rax + 0xa], 4
0x00006ec1      0f84a9000000   je 0x6f70
0x00006ec7      4885f6         test rsi, rsi
0x00006eca      0f8ea0000000   jle 0x6f70
0x00006ed0      48c1e204       shl rdx, 4
0x00006ed4      4929c0         sub r8, rax
0x00006ed7      498b4e20       mov rcx, qword [r14 + 0x20]
0x00006edb      4d8d4410e0     lea r8, [r8 + rdx - 0x20]
0x00006ee0      eb18           jmp 0x6efa
0x00006ee2      660f1f440000   nop word [rax + rax]
0x00006ee8      4c01c0         add rax, r8
0x00006eeb      4883ee01       sub rsi, 1
0x00006eef      f6400a04       test byte [rax + 0xa], 4
0x00006ef3      747b           je 0x6f70
0x00006ef5      4885f6         test rsi, rsi
0x00006ef8      7e76           jle 0x6f70
0x00006efa      4c393cf1       cmp qword [rcx + rsi*8], r15
0x00006efe      75e8           jne 0x6ee8
0x00006f00      8b5008         mov edx, dword [rax + 8]
0x00006f03      c1ea08         shr edx, 8
0x00006f06      81e2ff030000   and edx, 0x3ff
0x00006f0c      39d5           cmp ebp, edx
0x00006f0e      75d8           jne 0x6ee8
0x00006f10      e8cbefffff     call sym.re_node_set_insert
0x00006f15      84c0           test al, al
0x00006f17      7442           je 0x6f5b
0x00006f19      498b4628       mov rax, qword [r14 + 0x28]
0x00006f1d      89ea           mov edx, ebp
0x00006f1f      4c89f7         mov rdi, r14
0x00006f22      4a8b442010     mov rax, qword [rax + r12 + 0x10]
0x00006f27      4c8b4808       mov r9, qword [rax + 8]
0x00006f2b      4c89ce         mov rsi, r9
0x00006f2e      4c890c24       mov qword [rsp], r9
0x00006f32      e859feffff     call sym.duplicate_node
0x00006f37      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006f3b      4989c5         mov r13, rax
0x00006f3e      741b           je 0x6f5b
0x00006f40      49035e28       add rbx, qword [r14 + 0x28]
0x00006f44      4c89ee         mov rsi, r13
0x00006f47      4889df         mov rdi, rbx
0x00006f4a      e891efffff     call sym.re_node_set_insert
0x00006f4f      84c0           test al, al
0x00006f51      4c8b0c24       mov r9, qword [rsp]
0x00006f55      0f85f4feffff   jne 0x6e4f
0x00006f5b      b80c000000     mov eax, 0xc
0x00006f60      4883c418       add rsp, 0x18
0x00006f64      5b             pop rbx
0x00006f65      5d             pop rbp
0x00006f66      415c           pop r12
0x00006f68      415d           pop r13
0x00006f6a      415e           pop r14
0x00006f6c      415f           pop r15
0x00006f6e      c3             ret
0x00006f6f      90             nop
0x00006f70      89ea           mov edx, ebp
0x00006f72      4c89fe         mov rsi, r15
0x00006f75      4c89f7         mov rdi, r14
0x00006f78      e813feffff     call sym.duplicate_node
0x00006f7d      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006f81      4989c5         mov r13, rax
0x00006f84      74d5           je 0x6f5b
0x00006f86      498b7e28       mov rdi, qword [r14 + 0x28]
0x00006f8a      4c89ee         mov rsi, r13
0x00006f8d      4801df         add rdi, rbx
0x00006f90      e84befffff     call sym.re_node_set_insert
0x00006f95      84c0           test al, al
0x00006f97      74c2           je 0x6f5b
0x00006f99      488b4c2408     mov rcx, qword [rsp + 8]
0x00006f9e      4189e8         mov r8d, ebp
0x00006fa1      4c89ea         mov rdx, r13
0x00006fa4      4c89fe         mov rsi, r15
0x00006fa7      4c89f7         mov rdi, r14
0x00006faa      e881feffff     call sym.duplicate_node_closure
0x00006faf      85c0           test eax, eax
0x00006fb1      0f8462ffffff   je 0x6f19
0x00006fb7      eba7           jmp 0x6f60
0x00006fb9      0f1f80000000.  nop dword [rax]
0x00006fc0      4c3b4c2408     cmp r9, qword [rsp + 8]
0x00006fc5      7509           jne 0x6fd0
0x00006fc7      4d39e9         cmp r9, r13
0x00006fca      0f85bc000000   jne 0x708c
0x00006fd0      8b4008         mov eax, dword [rax + 8]
0x00006fd3      4c89fe         mov rsi, r15
0x00006fd6      4c89f7         mov rdi, r14
0x00006fd9      c1e808         shr eax, 8
0x00006fdc      25ff030000     and eax, 0x3ff
0x00006fe1      09c5           or ebp, eax
0x00006fe3      89ea           mov edx, ebp
0x00006fe5      e8a6fdffff     call sym.duplicate_node
0x00006fea      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006fee      4989c5         mov r13, rax
0x00006ff1      0f8464ffffff   je 0x6f5b
0x00006ff7      49035e28       add rbx, qword [r14 + 0x28]
0x00006ffb      4889c6         mov rsi, rax
0x00006ffe      4889df         mov rdi, rbx
0x00007001      e8daeeffff     call sym.re_node_set_insert
0x00007006      84c0           test al, al
0x00007008      0f844dffffff   je 0x6f5b
0x0000700e      4d89f9         mov r9, r15
0x00007011      e939feffff     jmp 0x6e4f
0x00007016      662e0f1f8400.  nop word cs:[rax + rax]
0x00007020      498b4618       mov rax, qword [r14 + 0x18]
0x00007024      4b8d5c6d00     lea rbx, [r13 + r13*2]
0x00007029      4e8d3ccd0000.  lea r15, [r9*8]
0x00007031      89ea           mov edx, ebp
0x00007033      48c1e303       shl rbx, 3
0x00007037      4e8b0cc8       mov r9, qword [rax + r9*8]
0x0000703b      48c7441f0800.  mov qword [rdi + rbx + 8], 0
0x00007044      4c89f7         mov rdi, r14
0x00007047      4c89ce         mov rsi, r9
0x0000704a      4c890c24       mov qword [rsp], r9
0x0000704e      e83dfdffff     call sym.duplicate_node
0x00007053      4883f8ff       cmp rax, 0xffffffffffffffff
0x00007057      4989c5         mov r13, rax
0x0000705a      4c8b0c24       mov r9, qword [rsp]
0x0000705e      0f84f7feffff   je 0x6f5b
0x00007064      498b4618       mov rax, qword [r14 + 0x18]
0x00007068      4c890c24       mov qword [rsp], r9
0x0000706c      4a8b0c38       mov rcx, qword [rax + r15]
0x00007070      4a890ce0       mov qword [rax + r12*8], rcx
0x00007074      e9c7feffff     jmp 0x6f40
0x00007079      498b4618       mov rax, qword [r14 + 0x18]
0x0000707d      4a8b0cc8       mov rcx, qword [rax + r9*8]
0x00007081      4a890ce8       mov qword [rax + r13*8], rcx
0x00007085      31c0           xor eax, eax
0x00007087      e9d4feffff     jmp 0x6f60
0x0000708c      4c89fe         mov rsi, r15
0x0000708f      e84ceeffff     call sym.re_node_set_insert
0x00007094      89c2           mov edx, eax
0x00007096      31c0           xor eax, eax
0x00007098      84d2           test dl, dl
0x0000709a      0f85c0feffff   jne 0x6f60
0x000070a0      e9b6feffff     jmp 0x6f5b
0x000070a5      90             nop
0x000070a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- free_state:
0x000070b0      53             push rbx
0x000070b1      4889fb         mov rbx, rdi
0x000070b4      488b7f30       mov rdi, qword [rdi + 0x30]
0x000070b8      e8c3a7ffff     call sym.imp.free
0x000070bd      488b7b48       mov rdi, qword [rbx + 0x48]
0x000070c1      e8baa7ffff     call sym.imp.free
0x000070c6      488b4350       mov rax, qword [rbx + 0x50]
0x000070ca      488d5308       lea rdx, [rbx + 8]
0x000070ce      4839d0         cmp rax, rdx
0x000070d1      7412           je 0x70e5
0x000070d3      488b7810       mov rdi, qword [rax + 0x10]
0x000070d7      e8a4a7ffff     call sym.imp.free
0x000070dc      488b7b50       mov rdi, qword [rbx + 0x50]
0x000070e0      e89ba7ffff     call sym.imp.free
0x000070e5      488b7b18       mov rdi, qword [rbx + 0x18]
0x000070e9      e892a7ffff     call sym.imp.free
0x000070ee      488b7b60       mov rdi, qword [rbx + 0x60]
0x000070f2      e889a7ffff     call sym.imp.free
0x000070f7      488b7b58       mov rdi, qword [rbx + 0x58]
0x000070fb      e880a7ffff     call sym.imp.free
0x00007100      4889df         mov rdi, rbx
0x00007103      5b             pop rbx
0x00007104      e977a7ffff     jmp sym.imp.free
0x00007109      0f1f80000000.  nop dword [rax]
;-- re_string_destruct:
0x00007110      53             push rbx
0x00007111      4889fb         mov rbx, rdi
0x00007114      488b7f10       mov rdi, qword [rdi + 0x10]
0x00007118      e863a7ffff     call sym.imp.free
0x0000711d      488b7b18       mov rdi, qword [rbx + 0x18]
0x00007121      e85aa7ffff     call sym.imp.free
0x00007126      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x0000712d      7509           jne 0x7138
0x0000712f      5b             pop rbx
0x00007130      c3             ret
0x00007131      0f1f80000000.  nop dword [rax]
0x00007138      488b7b08       mov rdi, qword [rbx + 8]
0x0000713c      5b             pop rbx
0x0000713d      e93ea7ffff     jmp sym.imp.free
0x00007142      0f1f4000       nop dword [rax]
0x00007146      662e0f1f8400.  nop word cs:[rax + rax]
;-- free_dfa_content:
0x00007150      4156           push r14
0x00007152      4155           push r13
0x00007154      4154           push r12
0x00007156      4989fc         mov r12, rdi
0x00007159      55             push rbp
0x0000715a      53             push rbx
0x0000715b      488b3f         mov rdi, qword [rdi]
0x0000715e      4885ff         test rdi, rdi
0x00007161      742b           je 0x718e
0x00007163      49837c241000   cmp qword [r12 + 0x10], 0
0x00007169      7423           je 0x718e
0x0000716b      31db           xor ebx, ebx
0x0000716d      eb05           jmp 0x7174
0x0000716f      90             nop
0x00007170      498b3c24       mov rdi, qword [r12]
0x00007174      4889d8         mov rax, rbx
0x00007177      4883c301       add rbx, 1
0x0000717b      48c1e004       shl rax, 4
0x0000717f      4801c7         add rdi, rax
0x00007182      e8e9f9ffff     call sym.free_token
0x00007187      49395c2410     cmp qword [r12 + 0x10], rbx
0x0000718c      77e2           ja 0x7170
0x0000718e      498b7c2418     mov rdi, qword [r12 + 0x18]
0x00007193      e8e8a6ffff     call sym.imp.free
0x00007198      49837c241000   cmp qword [r12 + 0x10], 0
0x0000719e      7453           je 0x71f3
0x000071a0      31db           xor ebx, ebx
0x000071a2      31ed           xor ebp, ebp
0x000071a4      0f1f4000       nop dword [rax]
0x000071a8      498b442430     mov rax, qword [r12 + 0x30]
0x000071ad      4885c0         test rax, rax
0x000071b0      740a           je 0x71bc
0x000071b2      488b7c1810     mov rdi, qword [rax + rbx + 0x10]
0x000071b7      e8c4a6ffff     call sym.imp.free
0x000071bc      498b442438     mov rax, qword [r12 + 0x38]
0x000071c1      4885c0         test rax, rax
0x000071c4      740a           je 0x71d0
0x000071c6      488b7c1810     mov rdi, qword [rax + rbx + 0x10]
0x000071cb      e8b0a6ffff     call sym.imp.free
0x000071d0      498b442428     mov rax, qword [r12 + 0x28]
0x000071d5      4885c0         test rax, rax
0x000071d8      740a           je 0x71e4
0x000071da      488b7c1810     mov rdi, qword [rax + rbx + 0x10]
0x000071df      e89ca6ffff     call sym.imp.free
0x000071e4      4883c501       add rbp, 1
0x000071e8      4883c318       add rbx, 0x18
0x000071ec      49396c2410     cmp qword [r12 + 0x10], rbp
0x000071f1      77b5           ja 0x71a8
0x000071f3      498b7c2428     mov rdi, qword [r12 + 0x28]
0x000071f8      e883a6ffff     call sym.imp.free
0x000071fd      498b7c2430     mov rdi, qword [r12 + 0x30]
0x00007202      e879a6ffff     call sym.imp.free
0x00007207      498b7c2438     mov rdi, qword [r12 + 0x38]
0x0000720c      e86fa6ffff     call sym.imp.free
0x00007211      498b3c24       mov rdi, qword [r12]
0x00007215      e866a6ffff     call sym.imp.free
0x0000721a      498b7c2440     mov rdi, qword [r12 + 0x40]
0x0000721f      4885ff         test rdi, rdi
0x00007222      7453           je 0x7277
0x00007224      4531f6         xor r14d, r14d
0x00007227      4531ed         xor r13d, r13d
0x0000722a      660f1f440000   nop word [rax + rax]
0x00007230      4a8d2c37       lea rbp, [rdi + r14]
0x00007234      48837d0000     cmp qword [rbp], 0
0x00007239      7e1c           jle 0x7257
0x0000723b      31db           xor ebx, ebx
0x0000723d      0f1f00         nop dword [rax]
0x00007240      488b4510       mov rax, qword [rbp + 0x10]
0x00007244      488b3cd8       mov rdi, qword [rax + rbx*8]
0x00007248      4883c301       add rbx, 1
0x0000724c      e85ffeffff     call sym.free_state
0x00007251      48395d00       cmp qword [rbp], rbx
0x00007255      7fe9           jg 0x7240
0x00007257      488b7d10       mov rdi, qword [rbp + 0x10]
0x0000725b      4983c501       add r13, 1
0x0000725f      4983c618       add r14, 0x18
0x00007263      e818a6ffff     call sym.imp.free
0x00007268      4d39ac248800.  cmp qword [r12 + 0x88], r13
0x00007270      498b7c2440     mov rdi, qword [r12 + 0x40]
0x00007275      73b9           jae 0x7230
0x00007277      e804a6ffff     call sym.imp.free
0x0000727c      498b7c2478     mov rdi, qword [r12 + 0x78]
0x00007281      488d05b8e200.  lea rax, obj.utf8_sb_map                ; 0x15540
0x00007288      4839c7         cmp rdi, rax
0x0000728b      7405           je 0x7292
0x0000728d      e8eea5ffff     call sym.imp.free
0x00007292      498bbc24e000.  mov rdi, qword [r12 + 0xe0]
0x0000729a      e8e1a5ffff     call sym.imp.free
0x0000729f      5b             pop rbx
0x000072a0      4c89e7         mov rdi, r12
0x000072a3      5d             pop rbp
0x000072a4      415c           pop r12
0x000072a6      415d           pop r13
0x000072a8      415e           pop r14
0x000072aa      e9d1a5ffff     jmp sym.imp.free
0x000072af      90             nop
;-- match_ctx_clean:
0x000072b0      4156           push r14
0x000072b2      4155           push r13
0x000072b4      4989fe         mov r14, rdi
0x000072b7      4154           push r12
0x000072b9      55             push rbp
0x000072ba      53             push rbx
0x000072bb      4883bfe80000.  cmp qword [rdi + 0xe8], 0
0x000072c3      0f8e80000000   jle 0x7349
0x000072c9      4531ed         xor r13d, r13d
0x000072cc      0f1f4000       nop dword [rax]
0x000072d0      498b86f80000.  mov rax, qword [r14 + 0xf8]
0x000072d7      4e8b24e8       mov r12, qword [rax + r13*8]
0x000072db      49837c242000   cmp qword [r12 + 0x20], 0
0x000072e1      7e2a           jle 0x730d
0x000072e3      31db           xor ebx, ebx
0x000072e5      0f1f00         nop dword [rax]
0x000072e8      498b442428     mov rax, qword [r12 + 0x28]
0x000072ed      488b2cd8       mov rbp, qword [rax + rbx*8]
0x000072f1      4883c301       add rbx, 1
0x000072f5      488b7d20       mov rdi, qword [rbp + 0x20]
0x000072f9      e882a5ffff     call sym.imp.free
0x000072fe      4889ef         mov rdi, rbp
0x00007301      e87aa5ffff     call sym.imp.free
0x00007306      49395c2420     cmp qword [r12 + 0x20], rbx
0x0000730b      7fdb           jg 0x72e8
0x0000730d      498b7c2428     mov rdi, qword [r12 + 0x28]
0x00007312      e869a5ffff     call sym.imp.free
0x00007317      498b442410     mov rax, qword [r12 + 0x10]
0x0000731c      4885c0         test rax, rax
0x0000731f      7413           je 0x7334
0x00007321      488b7810       mov rdi, qword [rax + 0x10]
0x00007325      e856a5ffff     call sym.imp.free
0x0000732a      498b7c2410     mov rdi, qword [r12 + 0x10]
0x0000732f      e84ca5ffff     call sym.imp.free
0x00007334      4c89e7         mov rdi, r12
0x00007337      4983c501       add r13, 1
0x0000733b      e840a5ffff     call sym.imp.free
0x00007340      4d39aee80000.  cmp qword [r14 + 0xe8], r13
0x00007347      7f87           jg 0x72d0
0x00007349      5b             pop rbx
0x0000734a      49c786e80000.  mov qword [r14 + 0xe8], 0
0x00007355      49c786c80000.  mov qword [r14 + 0xc8], 0
0x00007360      5d             pop rbp
0x00007361      415c           pop r12
0x00007363      415d           pop r13
0x00007365      415e           pop r14
0x00007367      c3             ret
0x00007368      0f1f84000000.  nop dword [rax + rax]
;-- re_string_char_size_at.part.0:
0x00007370      488b4f30       mov rcx, qword [rdi + 0x30]
0x00007374      488d4601       lea rax, [rsi + 1]
0x00007378      4839c8         cmp rax, rcx
0x0000737b      7d3b           jge 0x73b8
0x0000737d      488b5710       mov rdx, qword [rdi + 0x10]
0x00007381      488d3c850000.  lea rdi, [rax*4]
0x00007389      833c82ff       cmp dword [rdx + rax*4], 0xffffffff
0x0000738d      7529           jne 0x73b8
0x0000738f      4829f1         sub rcx, rsi
0x00007392      488d743afc     lea rsi, [rdx + rdi - 4]
0x00007397      ba02000000     mov edx, 2
0x0000739c      eb0d           jmp 0x73ab
0x0000739e      6690           nop
0x000073a0      4883c201       add rdx, 1
0x000073a4      837c96fcff     cmp dword [rsi + rdx*4 - 4], 0xffffffff
0x000073a9      7512           jne 0x73bd
0x000073ab      4839ca         cmp rdx, rcx
0x000073ae      89d0           mov eax, edx
0x000073b0      75ee           jne 0x73a0
0x000073b2      f3c3           ret
0x000073b4      0f1f4000       nop dword [rax]
0x000073b8      b801000000     mov eax, 1
0x000073bd      f3c3           ret
0x000073bf      90             nop
;-- re_node_set_compare.part.2:
0x000073c0      488b5708       mov rdx, qword [rdi + 8]
0x000073c4      31c0           xor eax, eax
0x000073c6      483b5608       cmp rdx, qword [rsi + 8]
0x000073ca      7404           je 0x73d0
0x000073cc      f3c3           ret
0x000073ce      6690           nop
0x000073d0      488d42ff       lea rax, [rdx - 1]
0x000073d4      488d14c50000.  lea rdx, [rax*8]
0x000073dc      eb1f           jmp 0x73fd
0x000073de      6690           nop
0x000073e0      488b4f10       mov rcx, qword [rdi + 0x10]
0x000073e4      4c8b0411       mov r8, qword [rcx + rdx]
0x000073e8      488b4e10       mov rcx, qword [rsi + 0x10]
0x000073ec      488b0c11       mov rcx, qword [rcx + rdx]
0x000073f0      4883ea08       sub rdx, 8
0x000073f4      4939c8         cmp r8, rcx
0x000073f7      7517           jne 0x7410
0x000073f9      4883e801       sub rax, 1
0x000073fd      4885c0         test rax, rax
0x00007400      79de           jns 0x73e0
0x00007402      b801000000     mov eax, 1
0x00007407      c3             ret
0x00007408      0f1f84000000.  nop dword [rax + rax]
0x00007410      31c0           xor eax, eax
0x00007412      c3             ret
0x00007413      0f1f00         nop dword [rax]
0x00007416      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_node_set_contains.isra.3:
0x00007420      31c0           xor eax, eax
0x00007422      4885ff         test rdi, rdi
0x00007425      7e3e           jle 0x7465
0x00007427      4c8b06         mov r8, qword [rsi]
0x0000742a      4883ef01       sub rdi, 1
0x0000742e      31f6           xor esi, esi
0x00007430      4839fe         cmp rsi, rdi
0x00007433      7328           jae 0x745d
0x00007435      488d0c3e       lea rcx, [rsi + rdi]
0x00007439      48d1e9         shr rcx, 1
0x0000743c      493b14c8       cmp rdx, qword [r8 + rcx*8]
0x00007440      7e16           jle 0x7458
0x00007442      eb2c           jmp 0x7470
0x00007444      0f1f4000       nop dword [rax]
0x00007448      488d040e       lea rax, [rsi + rcx]
0x0000744c      48d1e8         shr rax, 1
0x0000744f      493914c0       cmp qword [r8 + rax*8], rdx
0x00007453      7c2b           jl 0x7480
0x00007455      4889c1         mov rcx, rax
0x00007458      4839ce         cmp rsi, rcx
0x0000745b      72eb           jb 0x7448
0x0000745d      31c0           xor eax, eax
0x0000745f      493b14f0       cmp rdx, qword [r8 + rsi*8]
0x00007463      742b           je 0x7490
0x00007465      f3c3           ret
0x00007467      660f1f840000.  nop word [rax + rax]
0x00007470      4889c8         mov rax, rcx
0x00007473      4889f9         mov rcx, rdi
0x00007476      662e0f1f8400.  nop word cs:[rax + rax]
0x00007480      488d7001       lea rsi, [rax + 1]
0x00007484      4889cf         mov rdi, rcx
0x00007487      eba7           jmp 0x7430
0x00007489      0f1f80000000.  nop dword [rax]
0x00007490      488d4601       lea rax, [rsi + 1]
0x00007494      c3             ret
0x00007495      90             nop
0x00007496      662e0f1f8400.  nop word cs:[rax + rax]
;-- check_arrival_expand_ecl_sub:
0x000074a0      4157           push r15
0x000074a2      4156           push r14
0x000074a4      4c8d7610       lea r14, [rsi + 0x10]
0x000074a8      4155           push r13
0x000074aa      4154           push r12
0x000074ac      4989cf         mov r15, rcx
0x000074af      55             push rbp
0x000074b0      53             push rbx
0x000074b1      4989fc         mov r12, rdi
0x000074b4      4889f5         mov rbp, rsi
0x000074b7      4889d3         mov rbx, rdx
0x000074ba      4589c5         mov r13d, r8d
0x000074bd      4883ec08       sub rsp, 8
0x000074c1      488b7d08       mov rdi, qword [rbp + 8]
0x000074c5      4889da         mov rdx, rbx
0x000074c8      4c89f6         mov rsi, r14
0x000074cb      e850ffffff     call sym.re_node_set_contains.isra.3
0x000074d0      4885c0         test rax, rax
0x000074d3      756b           jne 0x7540
0x000074d5      4889d8         mov rax, rbx
0x000074d8      48c1e004       shl rax, 4
0x000074dc      49030424       add rax, qword [r12]
0x000074e0      0fb65008       movzx edx, byte [rax + 8]
0x000074e4      4439ea         cmp edx, r13d
0x000074e7      7505           jne 0x74ee
0x000074e9      4c3938         cmp qword [rax], r15
0x000074ec      743a           je 0x7528
0x000074ee      4889de         mov rsi, rbx
0x000074f1      4889ef         mov rdi, rbp
0x000074f4      e8e7e9ffff     call sym.re_node_set_insert
0x000074f9      84c0           test al, al
0x000074fb      745b           je 0x7558
0x000074fd      488d1c5b       lea rbx, [rbx + rbx*2]
0x00007501      498b542428     mov rdx, qword [r12 + 0x28]
0x00007506      48c1e303       shl rbx, 3
0x0000750a      4801da         add rdx, rbx
0x0000750d      488b4208       mov rax, qword [rdx + 8]
0x00007511      4885c0         test rax, rax
0x00007514      742a           je 0x7540
0x00007516      4883f802       cmp rax, 2
0x0000751a      488b5210       mov rdx, qword [rdx + 0x10]
0x0000751e      7450           je 0x7570
0x00007520      488b1a         mov rbx, qword [rdx]
0x00007523      eb9c           jmp 0x74c1
0x00007525      0f1f00         nop dword [rax]
0x00007528      4183fd09       cmp r13d, 9
0x0000752c      7512           jne 0x7540
0x0000752e      4889de         mov rsi, rbx
0x00007531      4889ef         mov rdi, rbp
0x00007534      e8a7e9ffff     call sym.re_node_set_insert
0x00007539      84c0           test al, al
0x0000753b      741b           je 0x7558
0x0000753d      0f1f00         nop dword [rax]
0x00007540      31c0           xor eax, eax
0x00007542      4883c408       add rsp, 8
0x00007546      5b             pop rbx
0x00007547      5d             pop rbp
0x00007548      415c           pop r12
0x0000754a      415d           pop r13
0x0000754c      415e           pop r14
0x0000754e      415f           pop r15
0x00007550      c3             ret
0x00007551      0f1f80000000.  nop dword [rax]
0x00007558      4883c408       add rsp, 8
0x0000755c      b80c000000     mov eax, 0xc
0x00007561      5b             pop rbx
0x00007562      5d             pop rbp
0x00007563      415c           pop r12
0x00007565      415d           pop r13
0x00007567      415e           pop r14
0x00007569      415f           pop r15
0x0000756b      c3             ret
0x0000756c      0f1f4000       nop dword [rax]
0x00007570      488b5208       mov rdx, qword [rdx + 8]
0x00007574      4589e8         mov r8d, r13d
0x00007577      4c89f9         mov rcx, r15
0x0000757a      4889ee         mov rsi, rbp
0x0000757d      4c89e7         mov rdi, r12
0x00007580      e81bffffff     call sym.check_arrival_expand_ecl_sub
0x00007585      85c0           test eax, eax
0x00007587      75b9           jne 0x7542
0x00007589      498b442428     mov rax, qword [r12 + 0x28]
0x0000758e      488b541810     mov rdx, qword [rax + rbx + 0x10]
0x00007593      eb8b           jmp 0x7520
0x00007595      90             nop
0x00007596      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_node_set_remove_at.isra.4.part.5:
0x000075a0      488b07         mov rax, qword [rdi]
0x000075a3      4839d0         cmp rax, rdx
0x000075a6      7e2a           jle 0x75d2
0x000075a8      4883e801       sub rax, 1
0x000075ac      4839c2         cmp rdx, rax
0x000075af      488907         mov qword [rdi], rax
0x000075b2      7d1e           jge 0x75d2
0x000075b4      488b06         mov rax, qword [rsi]
0x000075b7      660f1f840000.  nop word [rax + rax]
0x000075c0      488b4cd008     mov rcx, qword [rax + rdx*8 + 8]
0x000075c5      48890cd0       mov qword [rax + rdx*8], rcx
0x000075c9      4883c201       add rdx, 1
0x000075cd      483b17         cmp rdx, qword [rdi]
0x000075d0      7cee           jl 0x75c0
0x000075d2      f3c3           ret
0x000075d4      6690           nop
0x000075d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- optimize_subexps:
0x000075e0      0fb64630       movzx eax, byte [rsi + 0x30]
0x000075e4      3c04           cmp al, 4
0x000075e6      7458           je 0x7640
0x000075e8      3c11           cmp al, 0x11
0x000075ea      7404           je 0x75f0
0x000075ec      31c0           xor eax, eax
0x000075ee      c3             ret
0x000075ef      90             nop
0x000075f0      488b4608       mov rax, qword [rsi + 8]
0x000075f4      4885c0         test rax, rax
0x000075f7      74f3           je 0x75ec
0x000075f9      80783011       cmp byte [rax + 0x30], 0x11
0x000075fd      75ed           jne 0x75ec
0x000075ff      488b4828       mov rcx, qword [rax + 0x28]
0x00007603      488b4008       mov rax, qword [rax + 8]
0x00007607      4885c0         test rax, rax
0x0000760a      48894608       mov qword [rsi + 8], rax
0x0000760e      7403           je 0x7613
0x00007610      488930         mov qword [rax], rsi
0x00007613      488b87e00000.  mov rax, qword [rdi + 0xe0]
0x0000761a      488b5628       mov rdx, qword [rsi + 0x28]
0x0000761e      4883f93f       cmp rcx, 0x3f
0x00007622      488b14d0       mov rdx, qword [rax + rdx*8]
0x00007626      488914c8       mov qword [rax + rcx*8], rdx
0x0000762a      7fc0           jg 0x75ec
0x0000762c      48c7c0feffff.  mov rax, 0xfffffffffffffffe
0x00007633      48d3c0         rol rax, cl
0x00007636      482187a00000.  and qword [rdi + 0xa0], rax
0x0000763d      ebad           jmp 0x75ec
0x0000763f      90             nop
0x00007640      488b87e00000.  mov rax, qword [rdi + 0xe0]
0x00007647      4885c0         test rax, rax
0x0000764a      74a0           je 0x75ec
0x0000764c      48635628       movsxd rdx, dword [rsi + 0x28]
0x00007650      488b0cd0       mov rcx, qword [rax + rdx*8]
0x00007654      b801000000     mov eax, 1
0x00007659      d3e0           shl eax, cl
0x0000765b      48894e28       mov qword [rsi + 0x28], rcx
0x0000765f      4898           cdqe
0x00007661      480987a00000.  or qword [rdi + 0xa0], rax
0x00007668      31c0           xor eax, eax
0x0000766a      c3             ret
0x0000766b      0f1f440000     nop dword [rax + rax]
;-- calc_next:
0x00007670      0fb64630       movzx eax, byte [rsi + 0x30]
0x00007674      488b5608       mov rdx, qword [rsi + 8]
0x00007678      3c0b           cmp al, 0xb
0x0000767a      7444           je 0x76c0
0x0000767c      3c10           cmp al, 0x10
0x0000767e      7428           je 0x76a8
0x00007680      4885d2         test rdx, rdx
0x00007683      7408           je 0x768d
0x00007685      488b4620       mov rax, qword [rsi + 0x20]
0x00007689      48894220       mov qword [rdx + 0x20], rax
0x0000768d      488b4610       mov rax, qword [rsi + 0x10]
0x00007691      4885c0         test rax, rax
0x00007694      7408           je 0x769e
0x00007696      488b5620       mov rdx, qword [rsi + 0x20]
0x0000769a      48895020       mov qword [rax + 0x20], rdx
0x0000769e      31c0           xor eax, eax
0x000076a0      c3             ret
0x000076a1      0f1f80000000.  nop dword [rax]
0x000076a8      488b4610       mov rax, qword [rsi + 0x10]
0x000076ac      488b4818       mov rcx, qword [rax + 0x18]
0x000076b0      48894a20       mov qword [rdx + 0x20], rcx
0x000076b4      488b5620       mov rdx, qword [rsi + 0x20]
0x000076b8      48895020       mov qword [rax + 0x20], rdx
0x000076bc      31c0           xor eax, eax
0x000076be      c3             ret
0x000076bf      90             nop
0x000076c0      48897220       mov qword [rdx + 0x20], rsi
0x000076c4      31c0           xor eax, eax
0x000076c6      c3             ret
0x000076c7      660f1f840000.  nop word [rax + rax]
;-- check_dst_limits.isra.13:
0x000076d0      4157           push r15
0x000076d2      4156           push r14
0x000076d4      4155           push r13
0x000076d6      4154           push r12
0x000076d8      55             push rbp
0x000076d9      53             push rbx
0x000076da      31db           xor ebx, ebx
0x000076dc      4883ec48       sub rsp, 0x48
0x000076e0      488b87980000.  mov rax, qword [rdi + 0x98]
0x000076e7      4c8bbfc80000.  mov r15, qword [rdi + 0xc8]
0x000076ee      4c8ba4248000.  mov r12, qword [rsp + 0x80]
0x000076f6      4889442408     mov qword [rsp + 8], rax
0x000076fb      4c89fd         mov rbp, r15
0x000076fe      4839eb         cmp rbx, rbp
0x00007701      7d58           jge 0x775b
0x00007703      488d042b       lea rax, [rbx + rbp]
0x00007707      4c8bafd80000.  mov r13, qword [rdi + 0xd8]
0x0000770e      4989c2         mov r10, rax
0x00007711      49c1ea3f       shr r10, 0x3f
0x00007715      4901c2         add r10, rax
0x00007718      49d1fa         sar r10, 1
0x0000771b      4b8d0492       lea rax, [r10 + r10*4]
0x0000771f      4d3b44c508     cmp r8, qword [r13 + rax*8 + 8]
0x00007724      7e30           jle 0x7756
0x00007726      e995010000     jmp 0x78c0
0x0000772b      0f1f440000     nop dword [rax + rax]
0x00007730      4e8d1c13       lea r11, [rbx + r10]
0x00007734      4c89d8         mov rax, r11
0x00007737      48c1e83f       shr rax, 0x3f
0x0000773b      4c01d8         add rax, r11
0x0000773e      48d1f8         sar rax, 1
0x00007741      4c8d1c80       lea r11, [rax + rax*4]
0x00007745      4989c6         mov r14, rax
0x00007748      4f3944dd08     cmp qword [r13 + r11*8 + 8], r8
0x0000774d      0f8c7d010000   jl 0x78d0
0x00007753      4989c2         mov r10, rax
0x00007756      4c39d3         cmp rbx, r10
0x00007759      7cd5           jl 0x7730
0x0000775b      4939df         cmp r15, rbx
0x0000775e      0f8e9c010000   jle 0x7900
0x00007764      4c8b9fd80000.  mov r11, qword [rdi + 0xd8]
0x0000776b      488d049b       lea rax, [rbx + rbx*4]
0x0000776f      498d04c3       lea rax, [r11 + rax*8]
0x00007773      4c3b4008       cmp r8, qword [rax + 8]
0x00007777      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x0000777e      480f45d8       cmovne rbx, rax
0x00007782      4c89f8         mov rax, r15
0x00007785      31ed           xor ebp, ebp
0x00007787      4839c5         cmp rbp, rax
0x0000778a      7d58           jge 0x77e4
0x0000778c      4c8d5c0500     lea r11, [rbp + rax]
0x00007791      4d89da         mov r10, r11
0x00007794      49c1ea3f       shr r10, 0x3f
0x00007798      4d01da         add r10, r11
0x0000779b      4c8b9fd80000.  mov r11, qword [rdi + 0xd8]
0x000077a2      49d1fa         sar r10, 1
0x000077a5      4f8d2c92       lea r13, [r10 + r10*4]
0x000077a9      4f3b64eb08     cmp r12, qword [r11 + r13*8 + 8]
0x000077ae      7e2f           jle 0x77df
0x000077b0      e92b010000     jmp 0x78e0
0x000077b5      0f1f00         nop dword [rax]
0x000077b8      4e8d6c1500     lea r13, [rbp + r10]
0x000077bd      4c89e8         mov rax, r13
0x000077c0      48c1e83f       shr rax, 0x3f
0x000077c4      4c01e8         add rax, r13
0x000077c7      48d1f8         sar rax, 1
0x000077ca      4c8d2c80       lea r13, [rax + rax*4]
0x000077ce      4989c6         mov r14, rax
0x000077d1      4f3964eb08     cmp qword [r11 + r13*8 + 8], r12
0x000077d6      0f8c14010000   jl 0x78f0
0x000077dc      4989c2         mov r10, rax
0x000077df      4c39d5         cmp rbp, r10
0x000077e2      7cd4           jl 0x77b8
0x000077e4      4939ef         cmp r15, rbp
0x000077e7      0f8e23010000   jle 0x7910
0x000077ed      4c8b97d80000.  mov r10, qword [rdi + 0xd8]
0x000077f4      488d44ad00     lea rax, [rbp + rbp*4]
0x000077f9      498d04c2       lea rax, [r10 + rax*8]
0x000077fd      4c3b6008       cmp r12, qword [rax + 8]
0x00007801      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00007808      480f45e8       cmovne rbp, rax
0x0000780c      48833e00       cmp qword [rsi], 0
0x00007810      0f8e1c010000   jle 0x7932
0x00007816      48896c2430     mov qword [rsp + 0x30], rbp
0x0000781b      4c894c2420     mov qword [rsp + 0x20], r9
0x00007820      4989fd         mov r13, rdi
0x00007823      4c89442418     mov qword [rsp + 0x18], r8
0x00007828      48894c2410     mov qword [rsp + 0x10], rcx
0x0000782d      4531f6         xor r14d, r14d
0x00007830      4889742438     mov qword [rsp + 0x38], rsi
0x00007835      48895c2428     mov qword [rsp + 0x28], rbx
0x0000783a      4889d5         mov rbp, rdx
0x0000783d      4d89e7         mov r15, r12
0x00007840      488b4500       mov rax, qword [rbp]
0x00007844      498b95d80000.  mov rdx, qword [r13 + 0xd8]
0x0000784b      4c89ef         mov rdi, r13
0x0000784e      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00007853      4c8b442418     mov r8, qword [rsp + 0x18]
0x00007858      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0000785d      4a8b34f0       mov rsi, qword [rax + r14*8]
0x00007861      488d04b6       lea rax, [rsi + rsi*4]
0x00007865      488d04c2       lea rax, [rdx + rax*8]
0x00007869      488b542408     mov rdx, qword [rsp + 8]
0x0000786e      488b00         mov rax, qword [rax]
0x00007871      48c1e004       shl rax, 4
0x00007875      480302         add rax, qword [rdx]
0x00007878      4c8b20         mov r12, qword [rax]
0x0000787b      4c89e2         mov rdx, r12
0x0000787e      e80de4ffff     call sym.check_dst_limits_calc_pos
0x00007883      89c3           mov ebx, eax
0x00007885      488b4500       mov rax, qword [rbp]
0x00007889      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x0000788e      488b4c2420     mov rcx, qword [rsp + 0x20]
0x00007893      4d89f8         mov r8, r15
0x00007896      4c89e2         mov rdx, r12
0x00007899      4c89ef         mov rdi, r13
0x0000789c      4a8b34f0       mov rsi, qword [rax + r14*8]
0x000078a0      e8ebe3ffff     call sym.check_dst_limits_calc_pos
0x000078a5      39c3           cmp ebx, eax
0x000078a7      7477           je 0x7920
0x000078a9      b801000000     mov eax, 1
0x000078ae      4883c448       add rsp, 0x48
0x000078b2      5b             pop rbx
0x000078b3      5d             pop rbp
0x000078b4      415c           pop r12
0x000078b6      415d           pop r13
0x000078b8      415e           pop r14
0x000078ba      415f           pop r15
0x000078bc      c3             ret
0x000078bd      0f1f00         nop dword [rax]
0x000078c0      4d89d6         mov r14, r10
0x000078c3      4989ea         mov r10, rbp
0x000078c6      662e0f1f8400.  nop word cs:[rax + rax]
0x000078d0      498d5e01       lea rbx, [r14 + 1]
0x000078d4      4c89d5         mov rbp, r10
0x000078d7      e922feffff     jmp 0x76fe
0x000078dc      0f1f4000       nop dword [rax]
0x000078e0      4d89d6         mov r14, r10
0x000078e3      4989c2         mov r10, rax
0x000078e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000078f0      498d6e01       lea rbp, [r14 + 1]
0x000078f4      4c89d0         mov rax, r10
0x000078f7      e98bfeffff     jmp 0x7787
0x000078fc      0f1f4000       nop dword [rax]
0x00007900      48c7c3ffffff.  mov rbx, 0xffffffffffffffff
0x00007907      e976feffff     jmp 0x7782
0x0000790c      0f1f4000       nop dword [rax]
0x00007910      48c7c5ffffff.  mov rbp, 0xffffffffffffffff
0x00007917      e9f0feffff     jmp 0x780c
0x0000791c      0f1f4000       nop dword [rax]
0x00007920      488b442438     mov rax, qword [rsp + 0x38]
0x00007925      4983c601       add r14, 1
0x00007929      4c3b30         cmp r14, qword [rax]
0x0000792c      0f8c0effffff   jl 0x7840
0x00007932      31c0           xor eax, eax
0x00007934      e975ffffff     jmp 0x78ae
0x00007939      0f1f80000000.  nop dword [rax]
;-- re_node_set_merge:
0x00007940      4885f6         test rsi, rsi
0x00007943      0f84ef000000   je 0x7a38
0x00007949      488b5608       mov rdx, qword [rsi + 8]
0x0000794d      4885d2         test rdx, rdx
0x00007950      0f84e2000000   je 0x7a38
0x00007956      4154           push r12
0x00007958      55             push rbp
0x00007959      4989f4         mov r12, rsi
0x0000795c      53             push rbx
0x0000795d      488b4708       mov rax, qword [rdi + 8]
0x00007961      4889fb         mov rbx, rdi
0x00007964      488b37         mov rsi, qword [rdi]
0x00007967      488d0c50       lea rcx, [rax + rdx*2]
0x0000796b      4839ce         cmp rsi, rcx
0x0000796e      0f8c44010000   jl 0x7ab8
0x00007974      4885c0         test rax, rax
0x00007977      0f8473010000   je 0x7af0
0x0000797d      488d2c50       lea rbp, [rax + rdx*2]
0x00007981      4883ea01       sub rdx, 1
0x00007985      4883e801       sub rax, 1
0x00007989      4889d7         mov rdi, rdx
0x0000798c      48f7d7         not rdi
0x0000798f      4885ff         test rdi, rdi
0x00007992      793c           jns 0x79d0
0x00007994      4885c0         test rax, rax
0x00007997      7837           js 0x79d0
0x00007999      488b4b10       mov rcx, qword [rbx + 0x10]
0x0000799d      498b742410     mov rsi, qword [r12 + 0x10]
0x000079a2      488b34d6       mov rsi, qword [rsi + rdx*8]
0x000079a6      483934c1       cmp qword [rcx + rax*8], rsi
0x000079aa      0f8490000000   je 0x7a40
0x000079b0      0f8da2000000   jge 0x7a58
0x000079b6      4883ea01       sub rdx, 1
0x000079ba      4883ed01       sub rbp, 1
0x000079be      4889d7         mov rdi, rdx
0x000079c1      488934e9       mov qword [rcx + rbp*8], rsi
0x000079c5      48f7d7         not rdi
0x000079c8      4885ff         test rdi, rdi
0x000079cb      78c7           js 0x7994
0x000079cd      0f1f00         nop dword [rax]
0x000079d0      4885d2         test rdx, rdx
0x000079d3      0f898f000000   jns 0x7a68
0x000079d9      488b4b08       mov rcx, qword [rbx + 8]
0x000079dd      498b442408     mov rax, qword [r12 + 8]
0x000079e2      4c8d4441ff     lea r8, [rcx + rax*2 - 1]
0x000079e7      4c89c2         mov rdx, r8
0x000079ea      4829ea         sub rdx, rbp
0x000079ed      4883c201       add rdx, 1
0x000079f1      7437           je 0x7a2a
0x000079f3      488b7b10       mov rdi, qword [rbx + 0x10]
0x000079f7      488d41ff       lea rax, [rcx - 1]
0x000079fb      4801d1         add rcx, rdx
0x000079fe      48894b08       mov qword [rbx + 8], rcx
0x00007a02      660f1f440000   nop word [rax + rax]
0x00007a08      4a8b34c7       mov rsi, qword [rdi + r8*8]
0x00007a0c      488b0cc7       mov rcx, qword [rdi + rax*8]
0x00007a10      4c8d0c10       lea r9, [rax + rdx]
0x00007a14      4e8d0ccf       lea r9, [rdi + r9*8]
0x00007a18      4839ce         cmp rsi, rcx
0x00007a1b      7e73           jle 0x7a90
0x00007a1d      4983e801       sub r8, 1
0x00007a21      4883ea01       sub rdx, 1
0x00007a25      498931         mov qword [r9], rsi
0x00007a28      75de           jne 0x7a08
0x00007a2a      31c0           xor eax, eax
0x00007a2c      5b             pop rbx
0x00007a2d      5d             pop rbp
0x00007a2e      415c           pop r12
0x00007a30      c3             ret
0x00007a31      0f1f80000000.  nop dword [rax]
0x00007a38      31c0           xor eax, eax
0x00007a3a      c3             ret
0x00007a3b      0f1f440000     nop dword [rax + rax]
0x00007a40      4883ea01       sub rdx, 1
0x00007a44      4883e801       sub rax, 1
0x00007a48      4889d7         mov rdi, rdx
0x00007a4b      48f7d7         not rdi
0x00007a4e      e93cffffff     jmp 0x798f
0x00007a53      0f1f440000     nop dword [rax + rax]
0x00007a58      4883e801       sub rax, 1
0x00007a5c      e92effffff     jmp 0x798f
0x00007a61      0f1f80000000.  nop dword [rax]
0x00007a68      488b4310       mov rax, qword [rbx + 0x10]
0x00007a6c      4883c201       add rdx, 1
0x00007a70      498b742410     mov rsi, qword [r12 + 0x10]
0x00007a75      4829d5         sub rbp, rdx
0x00007a78      48c1e203       shl rdx, 3
0x00007a7c      488d3ce8       lea rdi, [rax + rbp*8]
0x00007a80      e80ba0ffff     call sym.imp.memcpy
0x00007a85      e94fffffff     jmp 0x79d9
0x00007a8a      660f1f440000   nop word [rax + rax]
0x00007a90      4883e801       sub rax, 1
0x00007a94      498909         mov qword [r9], rcx
0x00007a97      0f896bffffff   jns 0x7a08
0x00007a9d      488d34ef       lea rsi, [rdi + rbp*8]
0x00007aa1      48c1e203       shl rdx, 3
0x00007aa5      e8e69fffff     call sym.imp.memcpy
0x00007aaa      31c0           xor eax, eax
0x00007aac      e97bffffff     jmp 0x7a2c
0x00007ab1      0f1f80000000.  nop dword [rax]
0x00007ab8      4801f2         add rdx, rsi
0x00007abb      488b7f10       mov rdi, qword [rdi + 0x10]
0x00007abf      488d2c12       lea rbp, [rdx + rdx]
0x00007ac3      48c1e204       shl rdx, 4
0x00007ac7      4889d6         mov rsi, rdx
0x00007aca      e861a0ffff     call sym.imp.realloc
0x00007acf      4885c0         test rax, rax
0x00007ad2      7440           je 0x7b14
0x00007ad4      48894310       mov qword [rbx + 0x10], rax
0x00007ad8      48892b         mov qword [rbx], rbp
0x00007adb      488b4308       mov rax, qword [rbx + 8]
0x00007adf      498b542408     mov rdx, qword [r12 + 8]
0x00007ae4      e98bfeffff     jmp 0x7974
0x00007ae9      0f1f80000000.  nop dword [rax]
0x00007af0      48895308       mov qword [rbx + 8], rdx
0x00007af4      498b442408     mov rax, qword [r12 + 8]
0x00007af9      488b7b10       mov rdi, qword [rbx + 0x10]
0x00007afd      498b742410     mov rsi, qword [r12 + 0x10]
0x00007b02      488d14c50000.  lea rdx, [rax*8]
0x00007b0a      e8819fffff     call sym.imp.memcpy
0x00007b0f      e916ffffff     jmp 0x7a2a
0x00007b14      b80c000000     mov eax, 0xc
0x00007b19      e90effffff     jmp 0x7a2c
0x00007b1e      6690           nop
;-- calc_eclosure_iter:
0x00007b20      4157           push r15
0x00007b22      4156           push r14
0x00007b24      4989f7         mov r15, rsi
0x00007b27      4155           push r13
0x00007b29      4154           push r12
0x00007b2b      55             push rbp
0x00007b2c      53             push rbx
0x00007b2d      488d1c52       lea rbx, [rdx + rdx*2]
0x00007b31      4889d5         mov rbp, rdx
0x00007b34      4883ec68       sub rsp, 0x68
0x00007b38      4c8b6628       mov r12, qword [rsi + 0x28]
0x00007b3c      48c1e303       shl rbx, 3
0x00007b40      64488b042528.  mov rax, qword fs:[0x28]
0x00007b49      4889442458     mov qword [rsp + 0x58], rax
0x00007b4e      31c0           xor eax, eax
0x00007b50      48897c2410     mov qword [rsp + 0x10], rdi
0x00007b55      894c241c       mov dword [rsp + 0x1c], ecx
0x00007b59      4901dc         add r12, rbx
0x00007b5c      498b442408     mov rax, qword [r12 + 8]
0x00007b61      48c744242800.  mov qword [rsp + 0x28], 0
0x00007b6a      488d7801       lea rdi, [rax + 1]
0x00007b6e      48897c2420     mov qword [rsp + 0x20], rdi
0x00007b73      48c1e703       shl rdi, 3
0x00007b77      e8449fffff     call sym.imp.malloc
0x00007b7c      4885c0         test rax, rax
0x00007b7f      4889442430     mov qword [rsp + 0x30], rax
0x00007b84      0f8436020000   je 0x7dc0
0x00007b8a      498b4730       mov rax, qword [r15 + 0x30]
0x00007b8e      498b17         mov rdx, qword [r15]
0x00007b91      4989ed         mov r13, rbp
0x00007b94      49c1e504       shl r13, 4
0x00007b98      48c7441808ff.  mov qword [rax + rbx + 8], 0xffffffffffffffff
0x00007ba1      4a8d042a       lea rax, [rdx + r13]
0x00007ba5      448b4008       mov r8d, dword [rax + 8]
0x00007ba9      41f7c000ff03.  test r8d, 0x3ff00
0x00007bb0      0f859a010000   jne 0x7d50
0x00007bb6      f6400808       test byte [rax + 8], 8
0x00007bba      0f84c0000000   je 0x7c80
0x00007bc0      498b7728       mov rsi, qword [r15 + 0x28]
0x00007bc4      488d041e       lea rax, [rsi + rbx]
0x00007bc8      4883780800     cmp qword [rax + 8], 0
0x00007bcd      0f8ead000000   jle 0x7c80
0x00007bd3      488d542420     lea rdx, [rsp + 0x20]
0x00007bd8      c644241b00     mov byte [rsp + 0x1b], 0
0x00007bdd      4531f6         xor r14d, r14d
0x00007be0      4c8d642440     lea r12, [rsp + 0x40]
0x00007be5      4889542408     mov qword [rsp + 8], rdx
0x00007bea      eb1a           jmp 0x7c06
0x00007bec      0f1f4000       nop dword [rax]
0x00007bf0      498b7728       mov rsi, qword [r15 + 0x28]
0x00007bf4      4983c601       add r14, 1
0x00007bf8      488d041e       lea rax, [rsi + rbx]
0x00007bfc      4c397008       cmp qword [rax + 8], r14
0x00007c00      0f8e01010000   jle 0x7d07
0x00007c06      488b4010       mov rax, qword [rax + 0x10]
0x00007c0a      4a8b14f0       mov rdx, qword [rax + r14*8]
0x00007c0e      498b4730       mov rax, qword [r15 + 0x30]
0x00007c12      4c8d0452       lea r8, [rdx + rdx*2]
0x00007c16      4e8d2cc50000.  lea r13, [r8*8]
0x00007c1e      4c01e8         add rax, r13
0x00007c21      488b4808       mov rcx, qword [rax + 8]
0x00007c25      4883f9ff       cmp rcx, 0xffffffffffffffff
0x00007c29      0f84c1000000   je 0x7cf0
0x00007c2f      4885c9         test rcx, rcx
0x00007c32      0f8470010000   je 0x7da8
0x00007c38      f30f6f00       movdqu xmm0, xmmword [rax]
0x00007c3c      0f29442440     movaps xmmword [rsp + 0x40], xmm0
0x00007c41      488b4010       mov rax, qword [rax + 0x10]
0x00007c45      4889442450     mov qword [rsp + 0x50], rax
0x00007c4a      488b7c2408     mov rdi, qword [rsp + 8]
0x00007c4f      4c89e6         mov rsi, r12
0x00007c52      e8e9fcffff     call sym.re_node_set_merge
0x00007c57      85c0           test eax, eax
0x00007c59      756b           jne 0x7cc6
0x00007c5b      498b4730       mov rax, qword [r15 + 0x30]
0x00007c5f      4a837c280800   cmp qword [rax + r13 + 8], 0
0x00007c65      7589           jne 0x7bf0
0x00007c67      488b7c2450     mov rdi, qword [rsp + 0x50]
0x00007c6c      e80f9cffff     call sym.imp.free
0x00007c71      c644241b01     mov byte [rsp + 0x1b], 1
0x00007c76      e975ffffff     jmp 0x7bf0
0x00007c7b      0f1f440000     nop dword [rax + rax]
0x00007c80      488d7c2420     lea rdi, [rsp + 0x20]
0x00007c85      4889ee         mov rsi, rbp
0x00007c88      e853e2ffff     call sym.re_node_set_insert
0x00007c8d      84c0           test al, al
0x00007c8f      0f842b010000   je 0x7dc0
0x00007c95      498b4730       mov rax, qword [r15 + 0x30]
0x00007c99      660f6f442420   movdqa xmm0, xmmword [rsp + 0x20]
0x00007c9f      0f110418       movups xmmword [rax + rbx], xmm0
0x00007ca3      488b542430     mov rdx, qword [rsp + 0x30]
0x00007ca8      4889541810     mov qword [rax + rbx + 0x10], rdx
0x00007cad      488b5c2410     mov rbx, qword [rsp + 0x10]
0x00007cb2      488b442430     mov rax, qword [rsp + 0x30]
0x00007cb7      660f6f442420   movdqa xmm0, xmmword [rsp + 0x20]
0x00007cbd      0f2903         movaps xmmword [rbx], xmm0
0x00007cc0      48894310       mov qword [rbx + 0x10], rax
0x00007cc4      31c0           xor eax, eax
0x00007cc6      488b742458     mov rsi, qword [rsp + 0x58]
0x00007ccb      644833342528.  xor rsi, qword fs:[0x28]
0x00007cd4      0f85f0000000   jne 0x7dca
0x00007cda      4883c468       add rsp, 0x68
0x00007cde      5b             pop rbx
0x00007cdf      5d             pop rbp
0x00007ce0      415c           pop r12
0x00007ce2      415d           pop r13
0x00007ce4      415e           pop r14
0x00007ce6      415f           pop r15
0x00007ce8      c3             ret
0x00007ce9      0f1f80000000.  nop dword [rax]
0x00007cf0      488d041e       lea rax, [rsi + rbx]
0x00007cf4      4983c601       add r14, 1
0x00007cf8      c644241b01     mov byte [rsp + 0x1b], 1
0x00007cfd      4c397008       cmp qword [rax + 8], r14
0x00007d01      0f8ffffeffff   jg 0x7c06
0x00007d07      488d7c2420     lea rdi, [rsp + 0x20]
0x00007d0c      4889ee         mov rsi, rbp
0x00007d0f      e8cce1ffff     call sym.re_node_set_insert
0x00007d14      84c0           test al, al
0x00007d16      0f84a4000000   je 0x7dc0
0x00007d1c      807c241c01     cmp byte [rsp + 0x1c], 1
0x00007d21      498b4730       mov rax, qword [r15 + 0x30]
0x00007d25      488d1418       lea rdx, [rax + rbx]
0x00007d29      0f846affffff   je 0x7c99
0x00007d2f      807c241b00     cmp byte [rsp + 0x1b], 0
0x00007d34      0f845fffffff   je 0x7c99
0x00007d3a      48c742080000.  mov qword [rdx + 8], 0
0x00007d42      e966ffffff     jmp 0x7cad
0x00007d47      660f1f840000.  nop word [rax + rax]
0x00007d50      49837c240800   cmp qword [r12 + 8], 0
0x00007d56      0f8424ffffff   je 0x7c80
0x00007d5c      498b4c2410     mov rcx, qword [r12 + 0x10]
0x00007d61      488b09         mov rcx, qword [rcx]
0x00007d64      48c1e104       shl rcx, 4
0x00007d68      f6440a0a04     test byte [rdx + rcx + 0xa], 4
0x00007d6d      0f8543feffff   jne 0x7bb6
0x00007d73      41c1e808       shr r8d, 8
0x00007d77      4889e9         mov rcx, rbp
0x00007d7a      4889ea         mov rdx, rbp
0x00007d7d      4181e0ff0300.  and r8d, 0x3ff
0x00007d84      4889ee         mov rsi, rbp
0x00007d87      4c89ff         mov rdi, r15
0x00007d8a      e8a1f0ffff     call sym.duplicate_node_closure
0x00007d8f      85c0           test eax, eax
0x00007d91      0f852fffffff   jne 0x7cc6
0x00007d97      498b07         mov rax, qword [r15]
0x00007d9a      4c01e8         add rax, r13
0x00007d9d      e914feffff     jmp 0x7bb6
0x00007da2      660f1f440000   nop word [rax + rax]
0x00007da8      4c89fe         mov rsi, r15
0x00007dab      4c89e7         mov rdi, r12
0x00007dae      e86dfdffff     call sym.calc_eclosure_iter
0x00007db3      85c0           test eax, eax
0x00007db5      0f848ffeffff   je 0x7c4a
0x00007dbb      e906ffffff     jmp 0x7cc6
0x00007dc0      b80c000000     mov eax, 0xc
0x00007dc5      e9fcfeffff     jmp 0x7cc6
0x00007dca      e8c19bffff     call sym.imp.__stack_chk_fail
0x00007dcf      90             nop
;-- check_arrival_expand_ecl:
0x00007dd0      4157           push r15
0x00007dd2      4156           push r14
0x00007dd4      4989fe         mov r14, rdi
0x00007dd7      4155           push r13
0x00007dd9      4154           push r12
0x00007ddb      4989f7         mov r15, rsi
0x00007dde      55             push rbp
0x00007ddf      53             push rbx
0x00007de0      4889d5         mov rbp, rdx
0x00007de3      89cb           mov ebx, ecx
0x00007de5      4883ec38       sub rsp, 0x38
0x00007de9      4c8b6608       mov r12, qword [rsi + 8]
0x00007ded      64488b042528.  mov rax, qword fs:[0x28]
0x00007df6      4889442428     mov qword [rsp + 0x28], rax
0x00007dfb      31c0           xor eax, eax
0x00007dfd      48c744241800.  mov qword [rsp + 0x18], 0
0x00007e06      4a8d3ce50000.  lea rdi, [r12*8]
0x00007e0e      4c89642410     mov qword [rsp + 0x10], r12
0x00007e13      e8a89cffff     call sym.imp.malloc
0x00007e18      4885c0         test rax, rax
0x00007e1b      4889442420     mov qword [rsp + 0x20], rax
0x00007e20      0f84f7000000   je 0x7f1d
0x00007e26      4d85e4         test r12, r12
0x00007e29      0f8e8c000000   jle 0x7ebb
0x00007e2f      4c8d642410     lea r12, [rsp + 0x10]
0x00007e34      4531ed         xor r13d, r13d
0x00007e37      660f1f840000.  nop word [rax + rax]
0x00007e40      498b4710       mov rax, qword [r15 + 0x10]
0x00007e44      4a8b14e8       mov rdx, qword [rax + r13*8]
0x00007e48      498b4630       mov rax, qword [r14 + 0x30]
0x00007e4c      488d0c52       lea rcx, [rdx + rdx*2]
0x00007e50      488d34c8       lea rsi, [rax + rcx*8]
0x00007e54      4c8b4608       mov r8, qword [rsi + 8]
0x00007e58      4d85c0         test r8, r8
0x00007e5b      0f8e7f000000   jle 0x7ee0
0x00007e61      4c8b5610       mov r10, qword [rsi + 0x10]
0x00007e65      4d8b0e         mov r9, qword [r14]
0x00007e68      31c9           xor ecx, ecx
0x00007e6a      eb0d           jmp 0x7e79
0x00007e6c      0f1f4000       nop dword [rax]
0x00007e70      4883c101       add rcx, 1
0x00007e74      4939c8         cmp r8, rcx
0x00007e77      7467           je 0x7ee0
0x00007e79      498b3cca       mov rdi, qword [r10 + rcx*8]
0x00007e7d      4889f8         mov rax, rdi
0x00007e80      48c1e004       shl rax, 4
0x00007e84      4c01c8         add rax, r9
0x00007e87      440fb65808     movzx r11d, byte [rax + 8]
0x00007e8c      4439db         cmp ebx, r11d
0x00007e8f      75df           jne 0x7e70
0x00007e91      483b28         cmp rbp, qword [rax]
0x00007e94      75da           jne 0x7e70
0x00007e96      4883ffff       cmp rdi, 0xffffffffffffffff
0x00007e9a      7444           je 0x7ee0
0x00007e9c      4189d8         mov r8d, ebx
0x00007e9f      4889e9         mov rcx, rbp
0x00007ea2      4c89e6         mov rsi, r12
0x00007ea5      4c89f7         mov rdi, r14
0x00007ea8      e8f3f5ffff     call sym.check_arrival_expand_ecl_sub
0x00007ead      85c0           test eax, eax
0x00007eaf      753b           jne 0x7eec
0x00007eb1      4983c501       add r13, 1
0x00007eb5      4d396f08       cmp qword [r15 + 8], r13
0x00007eb9      7f85           jg 0x7e40
0x00007ebb      498b7f10       mov rdi, qword [r15 + 0x10]
0x00007ebf      e8bc99ffff     call sym.imp.free
0x00007ec4      488b442420     mov rax, qword [rsp + 0x20]
0x00007ec9      660f6f442410   movdqa xmm0, xmmword [rsp + 0x10]
0x00007ecf      49894710       mov qword [r15 + 0x10], rax
0x00007ed3      31c0           xor eax, eax
0x00007ed5      410f2907       movaps xmmword [r15], xmm0
0x00007ed9      eb23           jmp 0x7efe
0x00007edb      0f1f440000     nop dword [rax + rax]
0x00007ee0      4c89e7         mov rdi, r12
0x00007ee3      e858faffff     call sym.re_node_set_merge
0x00007ee8      85c0           test eax, eax
0x00007eea      74c5           je 0x7eb1
0x00007eec      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00007ef1      8944240c       mov dword [rsp + 0xc], eax
0x00007ef5      e88699ffff     call sym.imp.free
0x00007efa      8b44240c       mov eax, dword [rsp + 0xc]
0x00007efe      488b542428     mov rdx, qword [rsp + 0x28]
0x00007f03      644833142528.  xor rdx, qword fs:[0x28]
0x00007f0c      7516           jne 0x7f24
0x00007f0e      4883c438       add rsp, 0x38
0x00007f12      5b             pop rbx
0x00007f13      5d             pop rbp
0x00007f14      415c           pop r12
0x00007f16      415d           pop r13
0x00007f18      415e           pop r14
0x00007f1a      415f           pop r15
0x00007f1c      c3             ret
0x00007f1d      b80c000000     mov eax, 0xc
0x00007f22      ebda           jmp 0x7efe
0x00007f24      e8679affff     call sym.imp.__stack_chk_fail
0x00007f29      0f1f80000000.  nop dword [rax]
;-- re_node_set_add_intersect:
0x00007f30      4c8b4e08       mov r9, qword [rsi + 8]
0x00007f34      31c0           xor eax, eax
0x00007f36      4d85c9         test r9, r9
0x00007f39      0f84b9000000   je 0x7ff8
0x00007f3f      4c8b5a08       mov r11, qword [rdx + 8]
0x00007f43      4d85db         test r11, r11
0x00007f46      0f84ac000000   je 0x7ff8
0x00007f4c      4155           push r13
0x00007f4e      4154           push r12
0x00007f50      4b8d0419       lea rax, [r9 + r11]
0x00007f54      55             push rbp
0x00007f55      53             push rbx
0x00007f56      4989d4         mov r12, rdx
0x00007f59      4889fb         mov rbx, rdi
0x00007f5c      4889f5         mov rbp, rsi
0x00007f5f      4883ec08       sub rsp, 8
0x00007f63      488b4f08       mov rcx, qword [rdi + 8]
0x00007f67      4c8b2f         mov r13, qword [rdi]
0x00007f6a      488b7f10       mov rdi, qword [rdi + 0x10]
0x00007f6e      488d1408       lea rdx, [rax + rcx]
0x00007f72      4c39ea         cmp rdx, r13
0x00007f75      0f8f25010000   jg 0x80a0
0x00007f7b      4a8d3409       lea rsi, [rcx + r9]
0x00007f7f      4c8b6d10       mov r13, qword [rbp + 0x10]
0x00007f83      498b542410     mov rdx, qword [r12 + 0x10]
0x00007f88      4983e901       sub r9, 1
0x00007f8c      4883e901       sub rcx, 1
0x00007f90      4c01de         add rsi, r11
0x00007f93      4983eb01       sub r11, 1
0x00007f97      4b8b44cd00     mov rax, qword [r13 + r9*8]
0x00007f9c      4e8b04da       mov r8, qword [rdx + r11*8]
0x00007fa0      4c39c0         cmp rax, r8
0x00007fa3      7411           je 0x7fb6
0x00007fa5      7d59           jge 0x8000
0x00007fa7      4983eb01       sub r11, 1
0x00007fab      7863           js 0x8010
0x00007fad      4e8b04da       mov r8, qword [rdx + r11*8]
0x00007fb1      4c39c0         cmp rax, r8
0x00007fb4      75ef           jne 0x7fa5
0x00007fb6      4885c9         test rcx, rcx
0x00007fb9      790f           jns 0x7fca
0x00007fbb      eb1b           jmp 0x7fd8
0x00007fbd      0f1f00         nop dword [rax]
0x00007fc0      4883e901       sub rcx, 1
0x00007fc4      4883f9ff       cmp rcx, 0xffffffffffffffff
0x00007fc8      740e           je 0x7fd8
0x00007fca      4c8b14cf       mov r10, qword [rdi + rcx*8]
0x00007fce      4d39c2         cmp r10, r8
0x00007fd1      7fed           jg 0x7fc0
0x00007fd3      4d39c2         cmp r10, r8
0x00007fd6      7408           je 0x7fe0
0x00007fd8      4883ee01       sub rsi, 1
0x00007fdc      4c8904f7       mov qword [rdi + rsi*8], r8
0x00007fe0      4983e901       sub r9, 1
0x00007fe4      782a           js 0x8010
0x00007fe6      4983eb01       sub r11, 1
0x00007fea      7824           js 0x8010
0x00007fec      4b8b44cd00     mov rax, qword [r13 + r9*8]
0x00007ff1      ebba           jmp 0x7fad
0x00007ff3      0f1f440000     nop dword [rax + rax]
0x00007ff8      f3c3           ret
0x00007ffa      660f1f440000   nop word [rax + rax]
0x00008000      4983e901       sub r9, 1
0x00008004      780a           js 0x8010
0x00008006      4b8b44cd00     mov rax, qword [r13 + r9*8]
0x0000800b      eb93           jmp 0x7fa0
0x0000800d      0f1f00         nop dword [rax]
0x00008010      488b4b08       mov rcx, qword [rbx + 8]
0x00008014      488b5508       mov rdx, qword [rbp + 8]
0x00008018      4801ca         add rdx, rcx
0x0000801b      4903542408     add rdx, qword [r12 + 8]
0x00008020      488d41ff       lea rax, [rcx - 1]
0x00008024      4c8d4aff       lea r9, [rdx - 1]
0x00008028      4829f2         sub rdx, rsi
0x0000802b      4801d1         add rcx, rdx
0x0000802e      4885d2         test rdx, rdx
0x00008031      48894b08       mov qword [rbx + 8], rcx
0x00008035      7e46           jle 0x807d
0x00008037      4885c0         test rax, rax
0x0000803a      7841           js 0x807d
0x0000803c      0f1f4000       nop dword [rax]
0x00008040      4e8b04cf       mov r8, qword [rdi + r9*8]
0x00008044      488b0cc7       mov rcx, qword [rdi + rax*8]
0x00008048      4c8d1410       lea r10, [rax + rdx]
0x0000804c      4e8d14d7       lea r10, [rdi + r10*8]
0x00008050      4939c8         cmp r8, rcx
0x00008053      7e1b           jle 0x8070
0x00008055      4983e901       sub r9, 1
0x00008059      4883ea01       sub rdx, 1
0x0000805d      4d8902         mov qword [r10], r8
0x00008060      75de           jne 0x8040
0x00008062      31d2           xor edx, edx
0x00008064      eb1b           jmp 0x8081
0x00008066      662e0f1f8400.  nop word cs:[rax + rax]
0x00008070      4883e801       sub rax, 1
0x00008074      49890a         mov qword [r10], rcx
0x00008077      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000807b      75c3           jne 0x8040
0x0000807d      48c1e203       shl rdx, 3
0x00008081      488d34f7       lea rsi, [rdi + rsi*8]
0x00008085      e8069affff     call sym.imp.memcpy
0x0000808a      31c0           xor eax, eax
0x0000808c      4883c408       add rsp, 8
0x00008090      5b             pop rbx
0x00008091      5d             pop rbp
0x00008092      415c           pop r12
0x00008094      415d           pop r13
0x00008096      c3             ret
0x00008097      660f1f840000.  nop word [rax + rax]
0x000080a0      4901c5         add r13, rax
0x000080a3      4a8d34ed0000.  lea rsi, [r13*8]
0x000080ab      e8809affff     call sym.imp.realloc
0x000080b0      4885c0         test rax, rax
0x000080b3      4889c7         mov rdi, rax
0x000080b6      7419           je 0x80d1
0x000080b8      48894310       mov qword [rbx + 0x10], rax
0x000080bc      4c892b         mov qword [rbx], r13
0x000080bf      488b4b08       mov rcx, qword [rbx + 8]
0x000080c3      4c8b4d08       mov r9, qword [rbp + 8]
0x000080c7      4d8b5c2408     mov r11, qword [r12 + 8]
0x000080cc      e9aafeffff     jmp 0x7f7b
0x000080d1      b80c000000     mov eax, 0xc
0x000080d6      ebb4           jmp 0x808c
0x000080d8      0f1f84000000.  nop dword [rax + rax]
;-- create_token_tree.isra.16:
0x000080e0      53             push rbx
0x000080e1      4889fb         mov rbx, rdi
0x000080e4      4883ec20       sub rsp, 0x20
0x000080e8      8b06           mov eax, dword [rsi]
0x000080ea      83f80f         cmp eax, 0xf
0x000080ed      7479           je 0x8168
0x000080ef      4c63c8         movsxd r9, eax
0x000080f2      448d5001       lea r10d, [rax + 1]
0x000080f6      488b3f         mov rdi, qword [rdi]
0x000080f9      4c89c8         mov rax, r9
0x000080fc      48c1e006       shl rax, 6
0x00008100      4883c008       add rax, 8
0x00008104      49c1e106       shl r9, 6
0x00008108      448916         mov dword [rsi], r10d
0x0000810b      4801f8         add rax, rdi
0x0000810e      4a8d340f       lea rsi, [rdi + r9]
0x00008112      48c746080000.  mov qword [rsi + 8], 0
0x0000811a      48895610       mov qword [rsi + 0x10], rdx
0x0000811e      488d7e20       lea rdi, [rsi + 0x20]
0x00008122      48894e18       mov qword [rsi + 0x18], rcx
0x00008126      f3410f6f00     movdqu xmm0, xmmword [r8]
0x0000812b      0f114630       movups xmmword [rsi + 0x30], xmm0
0x0000812f      80671af3       and byte [rdi + 0x1a], 0xf3             ; [0xf3:1]=0
0x00008133      4885d2         test rdx, rdx
0x00008136      48c746200000.  mov qword [rsi + 0x20], 0
0x0000813e      48c746280000.  mov qword [rsi + 0x28], 0
0x00008146      48c74640ffff.  mov qword [rsi + 0x40], 0xffffffffffffffff
0x0000814e      7403           je 0x8153
0x00008150      488902         mov qword [rdx], rax
0x00008153      4885c9         test rcx, rcx
0x00008156      7403           je 0x815b
0x00008158      488901         mov qword [rcx], rax
0x0000815b      4883c420       add rsp, 0x20
0x0000815f      5b             pop rbx
0x00008160      c3             ret
0x00008161      0f1f80000000.  nop dword [rax]
0x00008168      bfc8030000     mov edi, 0x3c8
0x0000816d      4c89442418     mov qword [rsp + 0x18], r8
0x00008172      48894c2410     mov qword [rsp + 0x10], rcx
0x00008177      4889542408     mov qword [rsp + 8], rdx
0x0000817c      48893424       mov qword [rsp], rsi
0x00008180      e83b99ffff     call sym.imp.malloc
0x00008185      4885c0         test rax, rax
0x00008188      4889c7         mov rdi, rax
0x0000818b      742f           je 0x81bc
0x0000818d      488b03         mov rax, qword [rbx]
0x00008190      41ba01000000   mov r10d, 1
0x00008196      48893b         mov qword [rbx], rdi
0x00008199      4531c9         xor r9d, r9d
0x0000819c      4c8b442418     mov r8, qword [rsp + 0x18]
0x000081a1      488b4c2410     mov rcx, qword [rsp + 0x10]
0x000081a6      488b542408     mov rdx, qword [rsp + 8]
0x000081ab      488b3424       mov rsi, qword [rsp]
0x000081af      488907         mov qword [rdi], rax
0x000081b2      b808000000     mov eax, 8
0x000081b7      e948ffffff     jmp 0x8104
0x000081bc      31c0           xor eax, eax
0x000081be      eb9b           jmp 0x815b
;-- duplicate_tree:
0x000081c0      4156           push r14
0x000081c2      4155           push r13
0x000081c4      4c8d6e70       lea r13, [rsi + 0x70]
0x000081c8      4154           push r12
0x000081ca      55             push rbp
0x000081cb      4c8da6800000.  lea r12, [rsi + 0x80]
0x000081d2      53             push rbx
0x000081d3      4889fb         mov rbx, rdi
0x000081d6      4883ec10       sub rsp, 0x10
0x000081da      488b2f         mov rbp, qword [rdi]
0x000081dd      64488b042528.  mov rax, qword fs:[0x28]
0x000081e6      4889442408     mov qword [rsp + 8], rax
0x000081eb      31c0           xor eax, eax
0x000081ed      4989e6         mov r14, rsp
0x000081f0      4c8d4328       lea r8, [rbx + 0x28]
0x000081f4      31c9           xor ecx, ecx
0x000081f6      31d2           xor edx, edx
0x000081f8      4c89e6         mov rsi, r12
0x000081fb      4c89ef         mov rdi, r13
0x000081fe      e8ddfeffff     call sym.create_token_tree.isra.16
0x00008203      4885c0         test rax, rax
0x00008206      498906         mov qword [r14], rax
0x00008209      7451           je 0x825c
0x0000820b      488928         mov qword [rax], rbp
0x0000820e      498b2e         mov rbp, qword [r14]
0x00008211      804d3204       or byte [rbp + 0x32], 4
0x00008215      488b4308       mov rax, qword [rbx + 8]
0x00008219      4885c0         test rax, rax
0x0000821c      7412           je 0x8230
0x0000821e      4c8d7508       lea r14, [rbp + 8]
0x00008222      4889c3         mov rbx, rax
0x00008225      ebc9           jmp 0x81f0
0x00008227      660f1f840000.  nop word [rax + rax]
0x00008230      31d2           xor edx, edx
0x00008232      eb07           jmp 0x823b
0x00008234      0f1f4000       nop dword [rax]
0x00008238      4889c3         mov rbx, rax
0x0000823b      488b4310       mov rax, qword [rbx + 0x10]
0x0000823f      4885c0         test rax, rax
0x00008242      7405           je 0x8249
0x00008244      4839d0         cmp rax, rdx
0x00008247      7537           jne 0x8280
0x00008249      488b03         mov rax, qword [rbx]
0x0000824c      488b6d00       mov rbp, qword [rbp]
0x00008250      4889da         mov rdx, rbx
0x00008253      4885c0         test rax, rax
0x00008256      75e0           jne 0x8238
0x00008258      488b0424       mov rax, qword [rsp]
0x0000825c      488b4c2408     mov rcx, qword [rsp + 8]
0x00008261      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000826a      7520           jne 0x828c
0x0000826c      4883c410       add rsp, 0x10
0x00008270      5b             pop rbx
0x00008271      5d             pop rbp
0x00008272      415c           pop r12
0x00008274      415d           pop r13
0x00008276      415e           pop r14
0x00008278      c3             ret
0x00008279      0f1f80000000.  nop dword [rax]
0x00008280      4c8d7510       lea r14, [rbp + 0x10]
0x00008284      4889c3         mov rbx, rax
0x00008287      e964ffffff     jmp 0x81f0
0x0000828c      e8ff96ffff     call sym.imp.__stack_chk_fail
0x00008291      0f1f440000     nop dword [rax + rax]
0x00008296      662e0f1f8400.  nop word cs:[rax + rax]
;-- lower_subexp:
0x000082a0      4157           push r15
0x000082a2      4156           push r14
0x000082a4      4155           push r13
0x000082a6      4154           push r12
0x000082a8      4989d5         mov r13, rdx
0x000082ab      55             push rbp
0x000082ac      53             push rbx
0x000082ad      4883ec48       sub rsp, 0x48
0x000082b1      488b1e         mov rbx, qword [rsi]
0x000082b4      488b6a08       mov rbp, qword [rdx + 8]
0x000082b8      64488b042528.  mov rax, qword fs:[0x28]
0x000082c1      4889442438     mov qword [rsp + 0x38], rax
0x000082c6      31c0           xor eax, eax
0x000082c8      f6463810       test byte [rsi + 0x38], 0x10
0x000082cc      48897c2418     mov qword [rsp + 0x18], rdi
0x000082d1      0f8471010000   je 0x8448
0x000082d7      4885ed         test rbp, rbp
0x000082da      7474           je 0x8350
0x000082dc      488b4228       mov rax, qword [rdx + 0x28]
0x000082e0      4883f83f       cmp rax, 0x3f
0x000082e4      0f8f33010000   jg 0x841d
0x000082ea      488b93a00000.  mov rdx, qword [rbx + 0xa0]
0x000082f1      480fa3c2       bt rdx, rax
0x000082f5      0f8322010000   jae 0x841d
0x000082fb      488d4370       lea rax, [rbx + 0x70]
0x000082ff      4c8d742420     lea r14, [rsp + 0x20]
0x00008304      4883eb80       sub rbx, 0xffffffffffffff80
0x00008308      31c9           xor ecx, ecx
0x0000830a      31d2           xor edx, edx
0x0000830c      4889de         mov rsi, rbx
0x0000830f      4989c7         mov r15, rax
0x00008312      4d89f0         mov r8, r14
0x00008315      4889c7         mov rdi, rax
0x00008318      c644242808     mov byte [rsp + 0x28], 8
0x0000831d      4889442408     mov qword [rsp + 8], rax
0x00008322      e8b9fdffff     call sym.create_token_tree.isra.16
0x00008327      4c89ff         mov rdi, r15
0x0000832a      4d89f0         mov r8, r14
0x0000832d      31c9           xor ecx, ecx
0x0000832f      31d2           xor edx, edx
0x00008331      4889de         mov rsi, rbx
0x00008334      4989c4         mov r12, rax
0x00008337      c644242809     mov byte [rsp + 0x28], 9
0x0000833c      e89ffdffff     call sym.create_token_tree.isra.16
0x00008341      4989c7         mov r15, rax
0x00008344      e954010000     jmp 0x849d
0x00008349      0f1f80000000.  nop dword [rax]
0x00008350      488d4370       lea rax, [rbx + 0x70]
0x00008354      4c8d742420     lea r14, [rsp + 0x20]
0x00008359      4883eb80       sub rbx, 0xffffffffffffff80
0x0000835d      31c9           xor ecx, ecx
0x0000835f      31d2           xor edx, edx
0x00008361      4889de         mov rsi, rbx
0x00008364      4989c7         mov r15, rax
0x00008367      4d89f0         mov r8, r14
0x0000836a      4889c7         mov rdi, rax
0x0000836d      c644242808     mov byte [rsp + 0x28], 8
0x00008372      4889442408     mov qword [rsp + 8], rax
0x00008377      e864fdffff     call sym.create_token_tree.isra.16
0x0000837c      4c89ff         mov rdi, r15
0x0000837f      4d89f0         mov r8, r14
0x00008382      31c9           xor ecx, ecx
0x00008384      31d2           xor edx, edx
0x00008386      4889de         mov rsi, rbx
0x00008389      4989c4         mov r12, rax
0x0000838c      c644242809     mov byte [rsp + 0x28], 9
0x00008391      e84afdffff     call sym.create_token_tree.isra.16
0x00008396      4989c3         mov r11, rax
0x00008399      4989c7         mov r15, rax
0x0000839c      488b7c2408     mov rdi, qword [rsp + 8]
0x000083a1      4d89f0         mov r8, r14
0x000083a4      4c89d9         mov rcx, r11
0x000083a7      4c89e2         mov rdx, r12
0x000083aa      4889de         mov rsi, rbx
0x000083ad      c644242810     mov byte [rsp + 0x28], 0x10             ; [0x10:1]=3
0x000083b2      4c895c2410     mov qword [rsp + 0x10], r11
0x000083b7      e824fdffff     call sym.create_token_tree.isra.16
0x000083bc      4885c0         test rax, rax
0x000083bf      4889c5         mov rbp, rax
0x000083c2      0f84f8000000   je 0x84c0
0x000083c8      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x000083cd      4d85db         test r11, r11
0x000083d0      0f84ea000000   je 0x84c0
0x000083d6      4d85e4         test r12, r12
0x000083d9      0f84e1000000   je 0x84c0
0x000083df      4d85ff         test r15, r15
0x000083e2      0f84d8000000   je 0x84c0
0x000083e8      498b4528       mov rax, qword [r13 + 0x28]
0x000083ec      49894728       mov qword [r15 + 0x28], rax
0x000083f0      4989442428     mov qword [r12 + 0x28], rax
0x000083f5      410fb64532     movzx eax, byte [r13 + 0x32]
0x000083fa      410fb65732     movzx edx, byte [r15 + 0x32]
0x000083ff      83e008         and eax, 8
0x00008402      83e2f7         and edx, 0xfffffff7                     ; 4294967287
0x00008405      89c1           mov ecx, eax
0x00008407      09ca           or edx, ecx
0x00008409      41885732       mov byte [r15 + 0x32], dl
0x0000840d      410fb6442432   movzx eax, byte [r12 + 0x32]
0x00008413      83e0f7         and eax, 0xfffffff7                     ; 4294967287
0x00008416      09c8           or eax, ecx
0x00008418      4188442432     mov byte [r12 + 0x32], al
0x0000841d      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00008422      6448333c2528.  xor rdi, qword fs:[0x28]
0x0000842b      4889e8         mov rax, rbp
0x0000842e      0f859e000000   jne 0x84d2
0x00008434      4883c448       add rsp, 0x48
0x00008438      5b             pop rbx
0x00008439      5d             pop rbp
0x0000843a      415c           pop r12
0x0000843c      415d           pop r13
0x0000843e      415e           pop r14
0x00008440      415f           pop r15
0x00008442      c3             ret
0x00008443      0f1f440000     nop dword [rax + rax]
0x00008448      488d4370       lea rax, [rbx + 0x70]
0x0000844c      4c8d742420     lea r14, [rsp + 0x20]
0x00008451      4883eb80       sub rbx, 0xffffffffffffff80
0x00008455      31c9           xor ecx, ecx
0x00008457      31d2           xor edx, edx
0x00008459      4889de         mov rsi, rbx
0x0000845c      4989c7         mov r15, rax
0x0000845f      4d89f0         mov r8, r14
0x00008462      4889c7         mov rdi, rax
0x00008465      c644242808     mov byte [rsp + 0x28], 8
0x0000846a      4889442408     mov qword [rsp + 8], rax
0x0000846f      e86cfcffff     call sym.create_token_tree.isra.16
0x00008474      31c9           xor ecx, ecx
0x00008476      31d2           xor edx, edx
0x00008478      4c89ff         mov rdi, r15
0x0000847b      4d89f0         mov r8, r14
0x0000847e      4889de         mov rsi, rbx
0x00008481      4989c4         mov r12, rax
0x00008484      c644242809     mov byte [rsp + 0x28], 9
0x00008489      e852fcffff     call sym.create_token_tree.isra.16
0x0000848e      4885ed         test rbp, rbp
0x00008491      4989c7         mov r15, rax
0x00008494      4989c3         mov r11, rax
0x00008497      0f84fffeffff   je 0x839c
0x0000849d      488b7c2408     mov rdi, qword [rsp + 8]
0x000084a2      4d89f0         mov r8, r14
0x000084a5      4c89f9         mov rcx, r15
0x000084a8      4889ea         mov rdx, rbp
0x000084ab      4889de         mov rsi, rbx
0x000084ae      c644242810     mov byte [rsp + 0x28], 0x10             ; [0x10:1]=3
0x000084b3      e828fcffff     call sym.create_token_tree.isra.16
0x000084b8      4989c3         mov r11, rax
0x000084bb      e9dcfeffff     jmp 0x839c
0x000084c0      488b442418     mov rax, qword [rsp + 0x18]
0x000084c5      31ed           xor ebp, ebp
0x000084c7      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x000084cd      e94bffffff     jmp 0x841d
0x000084d2      e8b994ffff     call sym.imp.__stack_chk_fail
0x000084d7      660f1f840000.  nop word [rax + rax]
;-- lower_subexps:
0x000084e0      55             push rbp
0x000084e1      53             push rbx
0x000084e2      4889fd         mov rbp, rdi
0x000084e5      4889f3         mov rbx, rsi
0x000084e8      4883ec18       sub rsp, 0x18
0x000084ec      488b5608       mov rdx, qword [rsi + 8]
0x000084f0      64488b042528.  mov rax, qword fs:[0x28]
0x000084f9      4889442408     mov qword [rsp + 8], rax
0x000084fe      31c0           xor eax, eax
0x00008500      c74424040000.  mov dword [rsp + 4], 0
0x00008508      4885d2         test rdx, rdx
0x0000850b      7406           je 0x8513
0x0000850d      807a3011       cmp byte [rdx + 0x30], 0x11
0x00008511      744d           je 0x8560
0x00008513      488b5310       mov rdx, qword [rbx + 0x10]
0x00008517      4885d2         test rdx, rdx
0x0000851a      7406           je 0x8522
0x0000851c      807a3011       cmp byte [rdx + 0x30], 0x11
0x00008520      741e           je 0x8540
0x00008522      488b4c2408     mov rcx, qword [rsp + 8]
0x00008527      6448330c2528.  xor rcx, qword fs:[0x28]
0x00008530      8b442404       mov eax, dword [rsp + 4]
0x00008534      7545           jne 0x857b
0x00008536      4883c418       add rsp, 0x18
0x0000853a      5b             pop rbx
0x0000853b      5d             pop rbp
0x0000853c      c3             ret
0x0000853d      0f1f00         nop dword [rax]
0x00008540      488d7c2404     lea rdi, [rsp + 4]
0x00008545      4889ee         mov rsi, rbp
0x00008548      e853fdffff     call sym.lower_subexp
0x0000854d      4885c0         test rax, rax
0x00008550      48894310       mov qword [rbx + 0x10], rax
0x00008554      74cc           je 0x8522
0x00008556      488918         mov qword [rax], rbx
0x00008559      ebc7           jmp 0x8522
0x0000855b      0f1f440000     nop dword [rax + rax]
0x00008560      488d7c2404     lea rdi, [rsp + 4]
0x00008565      4889ee         mov rsi, rbp
0x00008568      e833fdffff     call sym.lower_subexp
0x0000856d      4885c0         test rax, rax
0x00008570      48894308       mov qword [rbx + 8], rax
0x00008574      749d           je 0x8513
0x00008576      488918         mov qword [rax], rbx
0x00008579      eb98           jmp 0x8513
0x0000857b      e81094ffff     call sym.imp.__stack_chk_fail
;-- re_node_set_init_copy:
0x00008580      4154           push r12
0x00008582      55             push rbp
0x00008583      53             push rbx
0x00008584      488b4608       mov rax, qword [rsi + 8]
0x00008588      48894708       mov qword [rdi + 8], rax
0x0000858c      4c8b6608       mov r12, qword [rsi + 8]
0x00008590      4d85e4         test r12, r12
0x00008593      7e3b           jle 0x85d0
0x00008595      4889fb         mov rbx, rdi
0x00008598      488907         mov qword [rdi], rax
0x0000859b      488d3cc50000.  lea rdi, [rax*8]
0x000085a3      4889f5         mov rbp, rsi
0x000085a6      e81595ffff     call sym.imp.malloc
0x000085ab      4885c0         test rax, rax
0x000085ae      48894310       mov qword [rbx + 0x10], rax
0x000085b2      743c           je 0x85f0
0x000085b4      488b7510       mov rsi, qword [rbp + 0x10]
0x000085b8      4a8d14e50000.  lea rdx, [r12*8]
0x000085c0      4889c7         mov rdi, rax
0x000085c3      e8c894ffff     call sym.imp.memcpy
0x000085c8      31c0           xor eax, eax
0x000085ca      5b             pop rbx
0x000085cb      5d             pop rbp
0x000085cc      415c           pop r12
0x000085ce      c3             ret
0x000085cf      90             nop
0x000085d0      660fefc0       pxor xmm0, xmm0
0x000085d4      48c747100000.  mov qword [rdi + 0x10], 0
0x000085dc      31c0           xor eax, eax
0x000085de      0f1107         movups xmmword [rdi], xmm0
0x000085e1      5b             pop rbx
0x000085e2      5d             pop rbp
0x000085e3      415c           pop r12
0x000085e5      c3             ret
0x000085e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000085f0      48c743080000.  mov qword [rbx + 8], 0
0x000085f8      48c703000000.  mov qword [rbx], 0
0x000085ff      b80c000000     mov eax, 0xc
0x00008604      ebc4           jmp 0x85ca
0x00008606      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_node_set_init_union:
0x00008610      4885f6         test rsi, rsi
0x00008613      4156           push r14
0x00008615      4155           push r13
0x00008617      4154           push r12
0x00008619      55             push rbp
0x0000861a      53             push rbx
0x0000861b      0f84a4000000   je 0x86c5
0x00008621      4885d2         test rdx, rdx
0x00008624      4c8b6e08       mov r13, qword [rsi + 8]
0x00008628      0f8492000000   je 0x86c0
0x0000862e      4d85ed         test r13, r13
0x00008631      0f8e89000000   jle 0x86c0
0x00008637      4c8b7208       mov r14, qword [rdx + 8]
0x0000863b      4d85f6         test r14, r14
0x0000863e      0f8eaf000000   jle 0x86f3
0x00008644      4989fc         mov r12, rdi
0x00008647      4b8d7c3500     lea rdi, [r13 + r14]
0x0000864c      4889d3         mov rbx, rdx
0x0000864f      4889f5         mov rbp, rsi
0x00008652      49893c24       mov qword [r12], rdi
0x00008656      48c1e703       shl rdi, 3
0x0000865a      e86194ffff     call sym.imp.malloc
0x0000865f      4885c0         test rax, rax
0x00008662      4989442410     mov qword [r12 + 0x10], rax
0x00008667      0f84eb000000   je 0x8758
0x0000866d      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00008671      4c8b4510       mov r8, qword [rbp + 0x10]
0x00008675      31db           xor ebx, ebx
0x00008677      31c9           xor ecx, ecx
0x00008679      31f6           xor esi, esi
0x0000867b      eb21           jmp 0x869e
0x0000867d      0f1f00         nop dword [rax]
0x00008680      400f94c7       sete dil
0x00008684      488954d8f8     mov qword [rax + rbx*8 - 8], rdx
0x00008689      4883c601       add rsi, 1
0x0000868d      400fb6ff       movzx edi, dil
0x00008691      4801f9         add rcx, rdi
0x00008694      4939f5         cmp r13, rsi
0x00008697      7e67           jle 0x8700
0x00008699      4939ce         cmp r14, rcx
0x0000869c      7e7a           jle 0x8718
0x0000869e      498b14f0       mov rdx, qword [r8 + rsi*8]
0x000086a2      498b3cc9       mov rdi, qword [r9 + rcx*8]
0x000086a6      4883c301       add rbx, 1
0x000086aa      4839fa         cmp rdx, rdi
0x000086ad      7ed1           jle 0x8680
0x000086af      4883c101       add rcx, 1
0x000086b3      48897cd8f8     mov qword [rax + rbx*8 - 8], rdi
0x000086b8      ebda           jmp 0x8694
0x000086ba      660f1f440000   nop word [rax + rax]
0x000086c0      4d85ed         test r13, r13
0x000086c3      7f2e           jg 0x86f3
0x000086c5      4885d2         test rdx, rdx
0x000086c8      7407           je 0x86d1
0x000086ca      48837a0800     cmp qword [rdx + 8], 0
0x000086cf      7f1f           jg 0x86f0
0x000086d1      660fefc0       pxor xmm0, xmm0
0x000086d5      48c747100000.  mov qword [rdi + 0x10], 0
0x000086dd      31c0           xor eax, eax
0x000086df      0f2907         movaps xmmword [rdi], xmm0
0x000086e2      5b             pop rbx
0x000086e3      5d             pop rbp
0x000086e4      415c           pop r12
0x000086e6      415d           pop r13
0x000086e8      415e           pop r14
0x000086ea      c3             ret
0x000086eb      0f1f440000     nop dword [rax + rax]
0x000086f0      4889d6         mov rsi, rdx
0x000086f3      5b             pop rbx
0x000086f4      5d             pop rbp
0x000086f5      415c           pop r12
0x000086f7      415d           pop r13
0x000086f9      415e           pop r14
0x000086fb      e980feffff     jmp sym.re_node_set_init_copy
0x00008700      4939ce         cmp r14, rcx
0x00008703      7f33           jg 0x8738
0x00008705      49895c2408     mov qword [r12 + 8], rbx
0x0000870a      31c0           xor eax, eax
0x0000870c      5b             pop rbx
0x0000870d      5d             pop rbp
0x0000870e      415c           pop r12
0x00008710      415d           pop r13
0x00008712      415e           pop r14
0x00008714      c3             ret
0x00008715      0f1f00         nop dword [rax]
0x00008718      4929f5         sub r13, rsi
0x0000871b      488d3cd8       lea rdi, [rax + rbx*8]
0x0000871f      498d34f0       lea rsi, [r8 + rsi*8]
0x00008723      4a8d14ed0000.  lea rdx, [r13*8]
0x0000872b      4c01eb         add rbx, r13
0x0000872e      e85d93ffff     call sym.imp.memcpy
0x00008733      ebd0           jmp 0x8705
0x00008735      0f1f00         nop dword [rax]
0x00008738      4929ce         sub r14, rcx
0x0000873b      488d3cd8       lea rdi, [rax + rbx*8]
0x0000873f      498d34c9       lea rsi, [r9 + rcx*8]
0x00008743      4a8d14f50000.  lea rdx, [r14*8]
0x0000874b      4c01f3         add rbx, r14
0x0000874e      e83d93ffff     call sym.imp.memcpy
0x00008753      ebb0           jmp 0x8705
0x00008755      0f1f00         nop dword [rax]
0x00008758      b80c000000     mov eax, 0xc
0x0000875d      e980ffffff     jmp 0x86e2
0x00008762      0f1f4000       nop dword [rax]
0x00008766      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_acquire_state_context:
0x00008770      4157           push r15
0x00008772      4156           push r14
0x00008774      4155           push r13
0x00008776      4154           push r12
0x00008778      55             push rbp
0x00008779      53             push rbx
0x0000877a      4883ec28       sub rsp, 0x28
0x0000877e      4c8b5208       mov r10, qword [rdx + 8]
0x00008782      4d85d2         test r10, r10
0x00008785      0f8484020000   je 0x8a0f
0x0000878b      4189c8         mov r8d, ecx
0x0000878e      4d85d2         test r10, r10
0x00008791      4f8d2410       lea r12, [r8 + r10]
0x00008795      7e15           jle 0x87ac
0x00008797      488b4210       mov rax, qword [rdx + 0x10]
0x0000879b      4e8d14d0       lea r10, [rax + r10*8]
0x0000879f      90             nop
0x000087a0      4c0320         add r12, qword [rax]
0x000087a3      4883c008       add rax, 8
0x000087a7      4939c2         cmp r10, rax
0x000087aa      75f4           jne 0x87a0
0x000087ac      488b86880000.  mov rax, qword [rsi + 0x88]
0x000087b3      4889d5         mov rbp, rdx
0x000087b6      894c2404       mov dword [rsp + 4], ecx
0x000087ba      4989f5         mov r13, rsi
0x000087bd      48897c2418     mov qword [rsp + 0x18], rdi
0x000087c2      4c21e0         and rax, r12
0x000087c5      488d1440       lea rdx, [rax + rax*2]
0x000087c9      488b4640       mov rax, qword [rsi + 0x40]
0x000087cd      488d04d0       lea rax, [rax + rdx*8]
0x000087d1      4c8b18         mov r11, qword [rax]
0x000087d4      4d85db         test r11, r11
0x000087d7      7e57           jle 0x8830
0x000087d9      488b5810       mov rbx, qword [rax + 0x10]
0x000087dd      4531d2         xor r10d, r10d
0x000087e0      4189c9         mov r9d, ecx
0x000087e3      eb0c           jmp 0x87f1
0x000087e5      0f1f00         nop dword [rax]
0x000087e8      4983c201       add r10, 1
0x000087ec      4d39da         cmp r10, r11
0x000087ef      743f           je 0x8830
0x000087f1      4e8b34d3       mov r14, qword [rbx + r10*8]
0x000087f5      4d3926         cmp qword [r14], r12
0x000087f8      75ee           jne 0x87e8
0x000087fa      410fb64668     movzx eax, byte [r14 + 0x68]
0x000087ff      83e00f         and eax, 0xf
0x00008802      4439c8         cmp eax, r9d
0x00008805      75e1           jne 0x87e8
0x00008807      498b7e50       mov rdi, qword [r14 + 0x50]
0x0000880b      4885ff         test rdi, rdi
0x0000880e      74d8           je 0x87e8
0x00008810      4889ee         mov rsi, rbp
0x00008813      e8a8ebffff     call sym.re_node_set_compare.part.2
0x00008818      84c0           test al, al
0x0000881a      74cc           je 0x87e8
0x0000881c      4883c428       add rsp, 0x28
0x00008820      4c89f0         mov rax, r14
0x00008823      5b             pop rbx
0x00008824      5d             pop rbp
0x00008825      415c           pop r12
0x00008827      415d           pop r13
0x00008829      415e           pop r14
0x0000882b      415f           pop r15
0x0000882d      c3             ret
0x0000882e      6690           nop
0x00008830      be01000000     mov esi, 1
0x00008835      bf70000000     mov edi, 0x70                           ; 'p'
0x0000883a      e83192ffff     call sym.imp.calloc
0x0000883f      4885c0         test rax, rax
0x00008842      4989c6         mov r14, rax
0x00008845      0f843b010000   je 0x8986
0x0000884b      488d4008       lea rax, [rax + 8]
0x0000884f      4889ee         mov rsi, rbp
0x00008852      4889c7         mov rdi, rax
0x00008855      4889c3         mov rbx, rax
0x00008858      e823fdffff     call sym.re_node_set_init_copy
0x0000885d      85c0           test eax, eax
0x0000885f      0f85b8010000   jne 0x8a1d
0x00008865      410fb64668     movzx eax, byte [r14 + 0x68]
0x0000886a      0fb6542404     movzx edx, byte [rsp + 4]
0x0000886f      49895e50       mov qword [r14 + 0x50], rbx
0x00008873      83e20f         and edx, 0xf
0x00008876      83e0f0         and eax, 0xfffffff0                     ; 4294967280
0x00008879      09d0           or eax, edx
0x0000887b      48837d0800     cmp qword [rbp + 8], 0
0x00008880      41884668       mov byte [r14 + 0x68], al
0x00008884      0f8ede000000   jle 0x8968
0x0000888a      498d4e18       lea rcx, [r14 + 0x18]
0x0000888e      4531ff         xor r15d, r15d
0x00008891      4c89642410     mov qword [rsp + 0x10], r12
0x00008896      4531d2         xor r10d, r10d
0x00008899      4d89ec         mov r12, r13
0x0000889c      4d89fd         mov r13, r15
0x0000889f      48894c2408     mov qword [rsp + 8], rcx
0x000088a4      4989df         mov r15, rbx
0x000088a7      660f1f840000.  nop word [rax + rax]
0x000088b0      488b4510       mov rax, qword [rbp + 0x10]
0x000088b4      4a8b04e8       mov rax, qword [rax + r13*8]
0x000088b8      48c1e004       shl rax, 4
0x000088bc      49030424       add rax, qword [r12]
0x000088c0      0fb67008       movzx esi, byte [rax + 8]
0x000088c4      8b5808         mov ebx, dword [rax + 8]
0x000088c7      c1eb08         shr ebx, 8
0x000088ca      6681e3ff03     and bx, 0x3ff
0x000088cf      83fe01         cmp esi, 1
0x000088d2      0fb7fb         movzx edi, bx
0x000088d5      7504           jne 0x88db
0x000088d7      85ff           test edi, edi
0x000088d9      7477           je 0x8952
0x000088db      410fb65668     movzx edx, byte [r14 + 0x68]
0x000088e0      0fb6400a       movzx eax, byte [rax + 0xa]
0x000088e4      4189d1         mov r9d, edx
0x000088e7      c0e804         shr al, 4
0x000088ea      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000088ed      41c0e905       shr r9b, 5
0x000088f1      4409c8         or eax, r9d
0x000088f4      83e001         and eax, 1
0x000088f7      c1e005         shl eax, 5
0x000088fa      09d0           or eax, edx
0x000088fc      83fe02         cmp esi, 2
0x000088ff      41884668       mov byte [r14 + 0x68], al
0x00008903      0f84c7000000   je 0x89d0
0x00008909      83fe04         cmp esi, 4
0x0000890c      7507           jne 0x8915
0x0000890e      83c840         or eax, 0x40                            ; segment.PHDR
0x00008911      41884668       mov byte [r14 + 0x68], al
0x00008915      85ff           test edi, edi
0x00008917      7439           je 0x8952
0x00008919      4d3b7e50       cmp r15, qword [r14 + 0x50]
0x0000891d      0f84bd000000   je 0x89e0
0x00008923      f6c301         test bl, 1
0x00008926      7478           je 0x89a0
0x00008928      f644240401     test byte [rsp + 4], 1
0x0000892d      7409           je 0x8938
0x0000892f      f6c302         test bl, 2
0x00008932      7478           je 0x89ac
0x00008934      0f1f4000       nop dword [rax]
0x00008938      4c89ea         mov rdx, r13
0x0000893b      4c29d2         sub rdx, r10
0x0000893e      780e           js 0x894e
0x00008940      488b742408     mov rsi, qword [rsp + 8]
0x00008945      498d7e10       lea rdi, [r14 + 0x10]
0x00008949      e852ecffff     call sym.re_node_set_remove_at.isra.4.part.5
0x0000894e      4983c201       add r10, 1
0x00008952      4983c501       add r13, 1
0x00008956      4c3b6d08       cmp r13, qword [rbp + 8]
0x0000895a      0f8c50ffffff   jl 0x88b0
0x00008960      4d89e5         mov r13, r12
0x00008963      4c8b642410     mov r12, qword [rsp + 0x10]
0x00008968      4c89e2         mov rdx, r12
0x0000896b      4c89f6         mov rsi, r14
0x0000896e      4c89ef         mov rdi, r13
0x00008971      e89ad6ffff     call sym.register_state
0x00008976      85c0           test eax, eax
0x00008978      0f849efeffff   je 0x881c
0x0000897e      4c89f7         mov rdi, r14
0x00008981      e82ae7ffff     call sym.free_state
0x00008986      488b442418     mov rax, qword [rsp + 0x18]
0x0000898b      4531f6         xor r14d, r14d
0x0000898e      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x00008994      e983feffff     jmp 0x881c
0x00008999      0f1f80000000.  nop dword [rax]
0x000089a0      f6c302         test bl, 2
0x000089a3      7407           je 0x89ac
0x000089a5      f644240401     test byte [rsp + 4], 1
0x000089aa      758c           jne 0x8938
0x000089ac      f6c310         test bl, 0x10
0x000089af      7407           je 0x89b8
0x000089b1      f644240402     test byte [rsp + 4], 2
0x000089b6      7480           je 0x8938
0x000089b8      83e340         and ebx, 0x40                           ; segment.PHDR
0x000089bb      7495           je 0x8952
0x000089bd      f644240404     test byte [rsp + 4], 4
0x000089c2      758e           jne 0x8952
0x000089c4      e96fffffff     jmp 0x8938
0x000089c9      0f1f80000000.  nop dword [rax]
0x000089d0      83c810         or eax, 0x10
0x000089d3      41884668       mov byte [r14 + 0x68], al
0x000089d7      e939ffffff     jmp 0x8915
0x000089dc      0f1f4000       nop dword [rax]
0x000089e0      bf18000000     mov edi, 0x18
0x000089e5      e8d690ffff     call sym.imp.malloc
0x000089ea      4885c0         test rax, rax
0x000089ed      49894650       mov qword [r14 + 0x50], rax
0x000089f1      748b           je 0x897e
0x000089f3      4889ee         mov rsi, rbp
0x000089f6      4889c7         mov rdi, rax
0x000089f9      e882fbffff     call sym.re_node_set_init_copy
0x000089fe      85c0           test eax, eax
0x00008a00      7584           jne 0x8986
0x00008a02      41804e6880     or byte [r14 + 0x68], 0x80              ; [0x80:1]=56
0x00008a07      4531d2         xor r10d, r10d
0x00008a0a      e914ffffff     jmp 0x8923
0x00008a0f      c70700000000   mov dword [rdi], 0
0x00008a15      4531f6         xor r14d, r14d
0x00008a18      e9fffdffff     jmp 0x881c
0x00008a1d      4c89f7         mov rdi, r14
0x00008a20      e85b8effff     call sym.imp.free
0x00008a25      e95cffffff     jmp 0x8986
0x00008a2a      660f1f440000   nop word [rax + rax]
;-- re_acquire_state:
0x00008a30      4157           push r15
0x00008a32      4156           push r14
0x00008a34      4155           push r13
0x00008a36      4154           push r12
0x00008a38      55             push rbp
0x00008a39      53             push rbx
0x00008a3a      4883ec08       sub rsp, 8
0x00008a3e      488b6a08       mov rbp, qword [rdx + 8]
0x00008a42      4885ed         test rbp, rbp
0x00008a45      0f84d5010000   je 0x8c20
0x00008a4b      4885ed         test rbp, rbp
0x00008a4e      7e1c           jle 0x8a6c
0x00008a50      488b4210       mov rax, qword [rdx + 0x10]
0x00008a54      488d0ce8       lea rcx, [rax + rbp*8]
0x00008a58      0f1f84000000.  nop dword [rax + rax]
0x00008a60      480328         add rbp, qword [rax]
0x00008a63      4883c008       add rax, 8
0x00008a67      4839c1         cmp rcx, rax
0x00008a6a      75f4           jne 0x8a60
0x00008a6c      488b86880000.  mov rax, qword [rsi + 0x88]
0x00008a73      4989d6         mov r14, rdx
0x00008a76      4989f4         mov r12, rsi
0x00008a79      4989fd         mov r13, rdi
0x00008a7c      4821e8         and rax, rbp
0x00008a7f      488d1440       lea rdx, [rax + rax*2]
0x00008a83      488b4640       mov rax, qword [rsi + 0x40]
0x00008a87      488d04d0       lea rax, [rax + rdx*8]
0x00008a8b      4c8b10         mov r10, qword [rax]
0x00008a8e      4d85d2         test r10, r10
0x00008a91      7e33           jle 0x8ac6
0x00008a93      4c8b5810       mov r11, qword [rax + 0x10]
0x00008a97      4531c9         xor r9d, r9d
0x00008a9a      660f1f440000   nop word [rax + rax]
0x00008aa0      4b8b1ccb       mov rbx, qword [r11 + r9*8]
0x00008aa4      48392b         cmp qword [rbx], rbp
0x00008aa7      7514           jne 0x8abd
0x00008aa9      488d7b08       lea rdi, [rbx + 8]
0x00008aad      4c89f6         mov rsi, r14
0x00008ab0      e80be9ffff     call sym.re_node_set_compare.part.2
0x00008ab5      84c0           test al, al
0x00008ab7      0f8502010000   jne 0x8bbf
0x00008abd      4983c101       add r9, 1
0x00008ac1      4d39ca         cmp r10, r9
0x00008ac4      75da           jne 0x8aa0
0x00008ac6      be01000000     mov esi, 1
0x00008acb      bf70000000     mov edi, 0x70                           ; 'p'
0x00008ad0      e89b8fffff     call sym.imp.calloc
0x00008ad5      4885c0         test rax, rax
0x00008ad8      4889c3         mov rbx, rax
0x00008adb      0f8427010000   je 0x8c08
0x00008ae1      4c8d7808       lea r15, [rax + 8]
0x00008ae5      4c89f6         mov rsi, r14
0x00008ae8      4c89ff         mov rdi, r15
0x00008aeb      e890faffff     call sym.re_node_set_init_copy
0x00008af0      85c0           test eax, eax
0x00008af2      0f8508010000   jne 0x8c00
0x00008af8      498b4608       mov rax, qword [r14 + 8]
0x00008afc      4c897b50       mov qword [rbx + 0x50], r15
0x00008b00      4885c0         test rax, rax
0x00008b03      0f8ea4000000   jle 0x8bad
0x00008b09      498b7610       mov rsi, qword [r14 + 0x10]
0x00008b0d      4d8b0424       mov r8, qword [r12]
0x00008b11      4c8d0cc6       lea r9, [rsi + rax*8]
0x00008b15      eb4d           jmp 0x8b64
0x00008b17      660f1f840000.  nop word [rax + rax]
0x00008b20      0fb64b68       movzx ecx, byte [rbx + 0x68]
0x00008b24      0fb6500a       movzx edx, byte [rax + 0xa]
0x00008b28      4189ca         mov r10d, ecx
0x00008b2b      c0ea04         shr dl, 4
0x00008b2e      83e1df         and ecx, 0xffffffdf                     ; 4294967263
0x00008b31      41c0ea05       shr r10b, 5
0x00008b35      4409d2         or edx, r10d
0x00008b38      83e201         and edx, 1
0x00008b3b      c1e205         shl edx, 5
0x00008b3e      09ca           or edx, ecx
0x00008b40      83ff02         cmp edi, 2
0x00008b43      885368         mov byte [rbx + 0x68], dl
0x00008b46      0f848c000000   je 0x8bd8
0x00008b4c      83ff04         cmp edi, 4
0x00008b4f      0f8593000000   jne 0x8be8
0x00008b55      83ca40         or edx, 0x40                            ; segment.PHDR
0x00008b58      885368         mov byte [rbx + 0x68], dl
0x00008b5b      4883c608       add rsi, 8
0x00008b5f      4939f1         cmp r9, rsi
0x00008b62      7449           je 0x8bad
0x00008b64      488b06         mov rax, qword [rsi]
0x00008b67      48c1e004       shl rax, 4
0x00008b6b      4c01c0         add rax, r8
0x00008b6e      0fb67808       movzx edi, byte [rax + 8]
0x00008b72      83ff01         cmp edi, 1
0x00008b75      75a9           jne 0x8b20
0x00008b77      f7400800ff03.  test dword [rax + 8], 0x3ff00
0x00008b7e      74db           je 0x8b5b
0x00008b80      0fb65368       movzx edx, byte [rbx + 0x68]
0x00008b84      0fb6400a       movzx eax, byte [rax + 0xa]
0x00008b88      89d1           mov ecx, edx
0x00008b8a      c0e804         shr al, 4
0x00008b8d      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00008b90      c0e905         shr cl, 5
0x00008b93      09c8           or eax, ecx
0x00008b95      83e001         and eax, 1
0x00008b98      c1e005         shl eax, 5
0x00008b9b      09d0           or eax, edx
0x00008b9d      884368         mov byte [rbx + 0x68], al
0x00008ba0      4883c608       add rsi, 8
0x00008ba4      804b6880       or byte [rbx + 0x68], 0x80              ; [0x80:1]=56
0x00008ba8      4939f1         cmp r9, rsi
0x00008bab      75b7           jne 0x8b64
0x00008bad      4889ea         mov rdx, rbp
0x00008bb0      4889de         mov rsi, rbx
0x00008bb3      4c89e7         mov rdi, r12
0x00008bb6      e855d4ffff     call sym.register_state
0x00008bbb      85c0           test eax, eax
0x00008bbd      7555           jne 0x8c14
0x00008bbf      4883c408       add rsp, 8
0x00008bc3      4889d8         mov rax, rbx
0x00008bc6      5b             pop rbx
0x00008bc7      5d             pop rbp
0x00008bc8      415c           pop r12
0x00008bca      415d           pop r13
0x00008bcc      415e           pop r14
0x00008bce      415f           pop r15
0x00008bd0      c3             ret
0x00008bd1      0f1f80000000.  nop dword [rax]
0x00008bd8      83ca10         or edx, 0x10
0x00008bdb      885368         mov byte [rbx + 0x68], dl
0x00008bde      e978ffffff     jmp 0x8b5b
0x00008be3      0f1f440000     nop dword [rax + rax]
0x00008be8      83ff0c         cmp edi, 0xc
0x00008beb      74b3           je 0x8ba0
0x00008bed      f7400800ff03.  test dword [rax + 8], 0x3ff00
0x00008bf4      0f8461ffffff   je 0x8b5b
0x00008bfa      eba4           jmp 0x8ba0
0x00008bfc      0f1f4000       nop dword [rax]
0x00008c00      4889df         mov rdi, rbx
0x00008c03      e8788cffff     call sym.imp.free
0x00008c08      41c745000c00.  mov dword [r13], 0xc                    ; [0xc:4]=0
0x00008c10      31db           xor ebx, ebx
0x00008c12      ebab           jmp 0x8bbf
0x00008c14      4889df         mov rdi, rbx
0x00008c17      e894e4ffff     call sym.free_state
0x00008c1c      ebea           jmp 0x8c08
0x00008c1e      6690           nop
0x00008c20      c70700000000   mov dword [rdi], 0
0x00008c26      31db           xor ebx, ebx
0x00008c28      eb95           jmp 0x8bbf
0x00008c2a      660f1f440000   nop word [rax + rax]
;-- merge_state_array:
0x00008c30      4157           push r15
0x00008c32      4156           push r14
0x00008c34      4155           push r13
0x00008c36      4154           push r12
0x00008c38      55             push rbp
0x00008c39      53             push rbx
0x00008c3a      4883ec48       sub rsp, 0x48
0x00008c3e      64488b042528.  mov rax, qword fs:[0x28]
0x00008c47      4889442438     mov qword [rsp + 0x38], rax
0x00008c4c      31c0           xor eax, eax
0x00008c4e      4885c9         test rcx, rcx
0x00008c51      0f8e8f000000   jle 0x8ce6
0x00008c57      488d44241c     lea rax, [rsp + 0x1c]
0x00008c5c      4989fe         mov r14, rdi
0x00008c5f      4889f3         mov rbx, rsi
0x00008c62      4989d4         mov r12, rdx
0x00008c65      4889cd         mov rbp, rcx
0x00008c68      4531ff         xor r15d, r15d
0x00008c6b      4c8d6c2420     lea r13, [rsp + 0x20]
0x00008c70      4889442408     mov qword [rsp + 8], rax
0x00008c75      eb55           jmp 0x8ccc
0x00008c77      660f1f840000.  nop word [rax + rax]
0x00008c80      4885d2         test rdx, rdx
0x00008c83      743e           je 0x8cc3
0x00008c85      4883c208       add rdx, 8
0x00008c89      4883c608       add rsi, 8
0x00008c8d      4c89ef         mov rdi, r13
0x00008c90      e87bf9ffff     call sym.re_node_set_init_union
0x00008c95      85c0           test eax, eax
0x00008c97      8944241c       mov dword [rsp + 0x1c], eax
0x00008c9b      754b           jne 0x8ce8
0x00008c9d      488b7c2408     mov rdi, qword [rsp + 8]
0x00008ca2      4c89ea         mov rdx, r13
0x00008ca5      4c89f6         mov rsi, r14
0x00008ca8      e883fdffff     call sym.re_acquire_state
0x00008cad      488b7c2430     mov rdi, qword [rsp + 0x30]
0x00008cb2      4a8904fb       mov qword [rbx + r15*8], rax
0x00008cb6      e8c58bffff     call sym.imp.free
0x00008cbb      8b44241c       mov eax, dword [rsp + 0x1c]
0x00008cbf      85c0           test eax, eax
0x00008cc1      7525           jne 0x8ce8
0x00008cc3      4983c701       add r15, 1
0x00008cc7      4c39fd         cmp rbp, r15
0x00008cca      741a           je 0x8ce6
0x00008ccc      4a8b34fb       mov rsi, qword [rbx + r15*8]
0x00008cd0      4b8b14fc       mov rdx, qword [r12 + r15*8]
0x00008cd4      4885f6         test rsi, rsi
0x00008cd7      75a7           jne 0x8c80
0x00008cd9      4a8914fb       mov qword [rbx + r15*8], rdx
0x00008cdd      4983c701       add r15, 1
0x00008ce1      4c39fd         cmp rbp, r15
0x00008ce4      75e6           jne 0x8ccc
0x00008ce6      31c0           xor eax, eax
0x00008ce8      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00008ced      6448330c2528.  xor rcx, qword fs:[0x28]
0x00008cf6      750f           jne 0x8d07
0x00008cf8      4883c448       add rsp, 0x48
0x00008cfc      5b             pop rbx
0x00008cfd      5d             pop rbp
0x00008cfe      415c           pop r12
0x00008d00      415d           pop r13
0x00008d02      415e           pop r14
0x00008d04      415f           pop r15
0x00008d06      c3             ret
0x00008d07      e8848cffff     call sym.imp.__stack_chk_fail
0x00008d0c      0f1f4000       nop dword [rax]
;-- expand_bkref_cache:
0x00008d10      4157           push r15
0x00008d12      4156           push r14
0x00008d14      4155           push r13
0x00008d16      4154           push r12
0x00008d18      4989d4         mov r12, rdx
0x00008d1b      55             push rbp
0x00008d1c      53             push rbx
0x00008d1d      4889fb         mov rbx, rdi
0x00008d20      4889f5         mov rbp, rsi
0x00008d23      31f6           xor esi, esi
0x00008d25      4883ec78       sub rsp, 0x78
0x00008d29      488bbfc80000.  mov rdi, qword [rdi + 0xc8]
0x00008d30      64488b042528.  mov rax, qword fs:[0x28]
0x00008d39      4889442468     mov qword [rsp + 0x68], rax
0x00008d3e      31c0           xor eax, eax
0x00008d40      48894c2420     mov qword [rsp + 0x20], rcx
0x00008d45      448944242c     mov dword [rsp + 0x2c], r8d
0x00008d4a      4889fa         mov rdx, rdi
0x00008d4d      4839d6         cmp rsi, rdx
0x00008d50      7d55           jge 0x8da7
0x00008d52      488d0416       lea rax, [rsi + rdx]
0x00008d56      4c8b83d80000.  mov r8, qword [rbx + 0xd8]
0x00008d5d      4889c1         mov rcx, rax
0x00008d60      48c1e93f       shr rcx, 0x3f
0x00008d64      4801c1         add rcx, rax
0x00008d67      48d1f9         sar rcx, 1
0x00008d6a      488d0489       lea rax, [rcx + rcx*4]
0x00008d6e      4d3b64c008     cmp r12, qword [r8 + rax*8 + 8]
0x00008d73      7e2d           jle 0x8da2
0x00008d75      e97e000000     jmp 0x8df8
0x00008d7a      660f1f440000   nop word [rax + rax]
0x00008d80      488d140e       lea rdx, [rsi + rcx]
0x00008d84      4889d0         mov rax, rdx
0x00008d87      48c1e83f       shr rax, 0x3f
0x00008d8b      4801d0         add rax, rdx
0x00008d8e      48d1f8         sar rax, 1
0x00008d91      488d1480       lea rdx, [rax + rax*4]
0x00008d95      4989c1         mov r9, rax
0x00008d98      4d3b64d008     cmp r12, qword [r8 + rdx*8 + 8]
0x00008d9d      7f61           jg 0x8e00
0x00008d9f      4889c1         mov rcx, rax
0x00008da2      4839ce         cmp rsi, rcx
0x00008da5      7cd9           jl 0x8d80
0x00008da7      4839f7         cmp rdi, rsi
0x00008daa      7e21           jle 0x8dcd
0x00008dac      488b8bd80000.  mov rcx, qword [rbx + 0xd8]
0x00008db3      488d04b6       lea rax, [rsi + rsi*4]
0x00008db7      48c1e003       shl rax, 3
0x00008dbb      4c39640108     cmp qword [rcx + rax + 8], r12
0x00008dc0      4889442430     mov qword [rsp + 0x30], rax
0x00008dc5      7506           jne 0x8dcd
0x00008dc7      4883feff       cmp rsi, 0xffffffffffffffff
0x00008dcb      7543           jne 0x8e10
0x00008dcd      31c0           xor eax, eax
0x00008dcf      488b5c2468     mov rbx, qword [rsp + 0x68]
0x00008dd4      6448331c2528.  xor rbx, qword fs:[0x28]
0x00008ddd      0f85c6020000   jne 0x90a9
0x00008de3      4883c478       add rsp, 0x78
0x00008de7      5b             pop rbx
0x00008de8      5d             pop rbp
0x00008de9      415c           pop r12
0x00008deb      415d           pop r13
0x00008ded      415e           pop r14
0x00008def      415f           pop r15
0x00008df1      c3             ret
0x00008df2      660f1f440000   nop word [rax + rax]
0x00008df8      4989c9         mov r9, rcx
0x00008dfb      4889d1         mov rcx, rdx
0x00008dfe      6690           nop
0x00008e00      498d7101       lea rsi, [r9 + 1]
0x00008e04      4889ca         mov rdx, rcx
0x00008e07      e941ffffff     jmp 0x8d4d
0x00008e0c      0f1f4000       nop dword [rax]
0x00008e10      488d4510       lea rax, [rbp + 0x10]
0x00008e14      4c8bab980000.  mov r13, qword [rbx + 0x98]
0x00008e1b      48890424       mov qword [rsp], rax
0x00008e1f      488d44244c     lea rax, [rsp + 0x4c]
0x00008e24      4889442438     mov qword [rsp + 0x38], rax
0x00008e29      488d442450     lea rax, [rsp + 0x50]
0x00008e2e      4889442410     mov qword [rsp + 0x10], rax
0x00008e33      488b442430     mov rax, qword [rsp + 0x30]
0x00008e38      4c8d3c01       lea r15, [rcx + rax]
0x00008e3c      e9d7000000     jmp 0x8f18
0x00008e41      0f1f80000000.  nop dword [rax]
0x00008e48      498b4518       mov rax, qword [r13 + 0x18]
0x00008e4c      4a8b0cd0       mov rcx, qword [rax + r10*8]
0x00008e50      4c8b93b80000.  mov r10, qword [rbx + 0xb8]
0x00008e57      4a8d04f50000.  lea rax, [r14*8]
0x00008e5f      4889442418     mov qword [rsp + 0x18], rax
0x00008e64      4901c2         add r10, rax
0x00008e67      48894c2408     mov qword [rsp + 8], rcx
0x00008e6c      4d8b0a         mov r9, qword [r10]
0x00008e6f      4d85c9         test r9, r9
0x00008e72      0f8488010000   je 0x9000
0x00008e78      498b7910       mov rdi, qword [r9 + 0x10]
0x00008e7c      498d7118       lea rsi, [r9 + 0x18]
0x00008e80      4889ca         mov rdx, rcx
0x00008e83      e898e5ffff     call sym.re_node_set_contains.isra.3
0x00008e88      4885c0         test rax, rax
0x00008e8b      757c           jne 0x8f09
0x00008e8d      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00008e92      498d7108       lea rsi, [r9 + 8]
0x00008e96      e8e5f6ffff     call sym.re_node_set_init_copy
0x00008e9b      488b742408     mov rsi, qword [rsp + 8]
0x00008ea0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00008ea5      8944244c       mov dword [rsp + 0x4c], eax
0x00008ea9      e832d0ffff     call sym.re_node_set_insert
0x00008eae      8b54244c       mov edx, dword [rsp + 0x4c]
0x00008eb2      85d2           test edx, edx
0x00008eb4      0f859c010000   jne 0x9056
0x00008eba      3c01           cmp al, 1
0x00008ebc      0f8594010000   jne 0x9056
0x00008ec2      4c8b542418     mov r10, qword [rsp + 0x18]
0x00008ec7      4c0393b80000.  add r10, qword [rbx + 0xb8]
0x00008ece      488b542410     mov rdx, qword [rsp + 0x10]
0x00008ed3      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00008ed8      4c89ee         mov rsi, r13
0x00008edb      4c89542408     mov qword [rsp + 8], r10
0x00008ee0      e84bfbffff     call sym.re_acquire_state
0x00008ee5      4c8b542408     mov r10, qword [rsp + 8]
0x00008eea      488b7c2460     mov rdi, qword [rsp + 0x60]
0x00008eef      498902         mov qword [r10], rax
0x00008ef2      e88989ffff     call sym.imp.free
0x00008ef7      488b83b80000.  mov rax, qword [rbx + 0xb8]
0x00008efe      4a833cf000     cmp qword [rax + r14*8], 0
0x00008f03      0f843c010000   je 0x9045
0x00008f09      4983c728       add r15, 0x28
0x00008f0d      41807ff800     cmp byte [r15 - 8], 0
0x00008f12      0f84b5feffff   je 0x8dcd
0x00008f18      4d8b17         mov r10, qword [r15]
0x00008f1b      4c8b4d08       mov r9, qword [rbp + 8]
0x00008f1f      488b3424       mov rsi, qword [rsp]
0x00008f23      4c89d2         mov rdx, r10
0x00008f26      4c89cf         mov rdi, r9
0x00008f29      e8f2e4ffff     call sym.re_node_set_contains.isra.3
0x00008f2e      4885c0         test rax, rax
0x00008f31      74d6           je 0x8f09
0x00008f33      4d8b4718       mov r8, qword [r15 + 0x18]
0x00008f37      4d01e0         add r8, r12
0x00008f3a      4d89c6         mov r14, r8
0x00008f3d      4d2b7710       sub r14, qword [r15 + 0x10]
0x00008f41      4d39f4         cmp r12, r14
0x00008f44      0f85fefeffff   jne 0x8e48
0x00008f4a      498b4d28       mov rcx, qword [r13 + 0x28]
0x00008f4e      4b8d0452       lea rax, [r10 + r10*2]
0x00008f52      488b3424       mov rsi, qword [rsp]
0x00008f56      4c89cf         mov rdi, r9
0x00008f59      488d04c1       lea rax, [rcx + rax*8]
0x00008f5d      488b4010       mov rax, qword [rax + 0x10]
0x00008f61      4c8b30         mov r14, qword [rax]
0x00008f64      4c89f2         mov rdx, r14
0x00008f67      e8b4e4ffff     call sym.re_node_set_contains.isra.3
0x00008f6c      4885c0         test rax, rax
0x00008f6f      7598           jne 0x8f09
0x00008f71      bf08000000     mov edi, 8
0x00008f76      48c744245001.  mov qword [rsp + 0x50], 1
0x00008f7f      48c744245801.  mov qword [rsp + 0x58], 1
0x00008f88      e8338bffff     call sym.imp.malloc
0x00008f8d      4885c0         test rax, rax
0x00008f90      4889442460     mov qword [rsp + 0x60], rax
0x00008f95      0f84f2000000   je 0x908d
0x00008f9b      4c8930         mov qword [rax], r14
0x00008f9e      31c0           xor eax, eax
0x00008fa0      4c8b7c2410     mov r15, qword [rsp + 0x10]
0x00008fa5      488b542420     mov rdx, qword [rsp + 0x20]
0x00008faa      4c89ef         mov rdi, r13
0x00008fad      8b4c242c       mov ecx, dword [rsp + 0x2c]
0x00008fb1      8944244c       mov dword [rsp + 0x4c], eax
0x00008fb5      4c89fe         mov rsi, r15
0x00008fb8      e813eeffff     call sym.check_arrival_expand_ecl
0x00008fbd      4c89fe         mov rsi, r15
0x00008fc0      4889ef         mov rdi, rbp
0x00008fc3      4189c6         mov r14d, eax
0x00008fc6      e875e9ffff     call sym.re_node_set_merge
0x00008fcb      488b7c2460     mov rdi, qword [rsp + 0x60]
0x00008fd0      4189c7         mov r15d, eax
0x00008fd3      e8a888ffff     call sym.imp.free
0x00008fd8      8b44244c       mov eax, dword [rsp + 0x4c]
0x00008fdc      4489f2         mov edx, r14d
0x00008fdf      4409fa         or edx, r15d
0x00008fe2      09c2           or edx, eax
0x00008fe4      0f858c000000   jne 0x9076
0x00008fea      488b8bd80000.  mov rcx, qword [rbx + 0xd8]
0x00008ff1      e93dfeffff     jmp 0x8e33
0x00008ff6      662e0f1f8400.  nop word cs:[rax + rax]
0x00009000      bf08000000     mov edi, 8
0x00009005      4c89542418     mov qword [rsp + 0x18], r10
0x0000900a      48c744245001.  mov qword [rsp + 0x50], 1
0x00009013      48c744245801.  mov qword [rsp + 0x58], 1
0x0000901c      e89f8affff     call sym.imp.malloc
0x00009021      4885c0         test rax, rax
0x00009024      4889442460     mov qword [rsp + 0x60], rax
0x00009029      7441           je 0x906c
0x0000902b      488b7c2408     mov rdi, qword [rsp + 8]
0x00009030      c744244c0000.  mov dword [rsp + 0x4c], 0
0x00009038      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000903d      488938         mov qword [rax], rdi
0x00009040      e989feffff     jmp 0x8ece
0x00009045      8b44244c       mov eax, dword [rsp + 0x4c]
0x00009049      85c0           test eax, eax
0x0000904b      0f84b8feffff   je 0x8f09
0x00009051      e979fdffff     jmp 0x8dcf
0x00009056      488b7c2460     mov rdi, qword [rsp + 0x60]
0x0000905b      e82088ffff     call sym.imp.free
0x00009060      8b44244c       mov eax, dword [rsp + 0x4c]
0x00009064      85c0           test eax, eax
0x00009066      0f8563fdffff   jne 0x8dcf
0x0000906c      b80c000000     mov eax, 0xc
0x00009071      e959fdffff     jmp 0x8dcf
0x00009076      85c0           test eax, eax
0x00009078      0f8551fdffff   jne 0x8dcf
0x0000907e      4585f6         test r14d, r14d
0x00009081      4489f0         mov eax, r14d
0x00009084      410f44c7       cmove eax, r15d
0x00009088      e942fdffff     jmp 0x8dcf
0x0000908d      48c744245800.  mov qword [rsp + 0x58], 0
0x00009096      48c744245000.  mov qword [rsp + 0x50], 0
0x0000909f      b80c000000     mov eax, 0xc
0x000090a4      e9f7feffff     jmp 0x8fa0
0x000090a9      e8e288ffff     call sym.imp.__stack_chk_fail
0x000090ae      6690           nop
;-- check_subexp_matching_top.isra.18:
0x000090b0      4157           push r15
0x000090b2      4156           push r14
0x000090b4      4155           push r13
0x000090b6      4154           push r12
0x000090b8      55             push rbp
0x000090b9      53             push rbx
0x000090ba      4883ec28       sub rsp, 0x28
0x000090be      48833e00       cmp qword [rsi], 0
0x000090c2      4c8baf980000.  mov r13, qword [rdi + 0x98]
0x000090c9      0f8ec1000000   jle 0x9190
0x000090cf      4989d6         mov r14, rdx
0x000090d2      4989f4         mov r12, rsi
0x000090d5      4989ff         mov r15, rdi
0x000090d8      31db           xor ebx, ebx
0x000090da      eb12           jmp 0x90ee
0x000090dc      0f1f4000       nop dword [rax]
0x000090e0      4883c301       add rbx, 1
0x000090e4      493b1c24       cmp rbx, qword [r12]
0x000090e8      0f8da2000000   jge 0x9190
0x000090ee      498b06         mov rax, qword [r14]
0x000090f1      488b2cd8       mov rbp, qword [rax + rbx*8]
0x000090f5      4889e8         mov rax, rbp
0x000090f8      48c1e004       shl rax, 4
0x000090fc      49034500       add rax, qword [r13]
0x00009100      80780808       cmp byte [rax + 8], 8
0x00009104      75da           jne 0x90e0
0x00009106      488b00         mov rax, qword [rax]
0x00009109      4883f83f       cmp rax, 0x3f
0x0000910d      7fd1           jg 0x90e0
0x0000910f      498bb5a00000.  mov rsi, qword [r13 + 0xa0]
0x00009116      480fa3c6       bt rsi, rax
0x0000911a      73c4           jae 0x90e0
0x0000911c      4d8b87e80000.  mov r8, qword [r15 + 0xe8]
0x00009123      4d3b87f00000.  cmp r8, qword [r15 + 0xf0]
0x0000912a      4d8b8ff80000.  mov r9, qword [r15 + 0xf8]
0x00009131      7475           je 0x91a8
0x00009133      be30000000     mov esi, 0x30                           ; '0'
0x00009138      bf01000000     mov edi, 1
0x0000913d      4c894c2410     mov qword [rsp + 0x10], r9
0x00009142      4c89442408     mov qword [rsp + 8], r8
0x00009147      48894c2418     mov qword [rsp + 0x18], rcx
0x0000914c      e81f89ffff     call sym.imp.calloc
0x00009151      4c8b442408     mov r8, qword [rsp + 8]
0x00009156      4c8b4c2410     mov r9, qword [rsp + 0x10]
0x0000915b      4885c0         test rax, rax
0x0000915e      4b8904c1       mov qword [r9 + r8*8], rax
0x00009162      743d           je 0x91a1
0x00009164      4983c001       add r8, 1
0x00009168      4883c301       add rbx, 1
0x0000916c      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00009171      4d8987e80000.  mov qword [r15 + 0xe8], r8
0x00009178      493b1c24       cmp rbx, qword [r12]
0x0000917c      48896808       mov qword [rax + 8], rbp
0x00009180      488908         mov qword [rax], rcx
0x00009183      0f8c65ffffff   jl 0x90ee
0x00009189      0f1f80000000.  nop dword [rax]
0x00009190      31c0           xor eax, eax
0x00009192      4883c428       add rsp, 0x28
0x00009196      5b             pop rbx
0x00009197      5d             pop rbp
0x00009198      415c           pop r12
0x0000919a      415d           pop r13
0x0000919c      415e           pop r14
0x0000919e      415f           pop r15
0x000091a0      c3             ret
0x000091a1      b80c000000     mov eax, 0xc
0x000091a6      ebea           jmp 0x9192
0x000091a8      4b8d0400       lea rax, [r8 + r8]
0x000091ac      4c89c6         mov rsi, r8
0x000091af      4c89cf         mov rdi, r9
0x000091b2      48c1e604       shl rsi, 4
0x000091b6      48894c2408     mov qword [rsp + 8], rcx
0x000091bb      4889442410     mov qword [rsp + 0x10], rax
0x000091c0      e86b89ffff     call sym.imp.realloc
0x000091c5      4885c0         test rax, rax
0x000091c8      4989c1         mov r9, rax
0x000091cb      488b4c2408     mov rcx, qword [rsp + 8]
0x000091d0      74cf           je 0x91a1
0x000091d2      498987f80000.  mov qword [r15 + 0xf8], rax
0x000091d9      488b442410     mov rax, qword [rsp + 0x10]
0x000091de      4d8b87e80000.  mov r8, qword [r15 + 0xe8]
0x000091e5      498987f00000.  mov qword [r15 + 0xf0], rax
0x000091ec      e942ffffff     jmp 0x9133
0x000091f1      0f1f440000     nop dword [rax + rax]
0x000091f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_string_context_at:
0x00009200      55             push rbp
0x00009201      53             push rbx
0x00009202      4889fd         mov rbp, rdi
0x00009205      4883ec08       sub rsp, 8
0x00009209      4885f6         test rsi, rsi
0x0000920c      7852           js 0x9260
0x0000920e      48397758       cmp qword [rdi + 0x58], rsi
0x00009212      0f84a0000000   je 0x92b8
0x00009218      83bf90000000.  cmp dword [rdi + 0x90], 1
0x0000921f      7e4f           jle 0x9270
0x00009221      488b4710       mov rax, qword [rdi + 0x10]
0x00009225      eb13           jmp 0x923a
0x00009227      660f1f840000.  nop word [rax + rax]
0x00009230      4883ee01       sub rsi, 1
0x00009234      4883feff       cmp rsi, 0xffffffffffffffff
0x00009238      7426           je 0x9260
0x0000923a      8b1cb0         mov ebx, dword [rax + rsi*4]
0x0000923d      83fbff         cmp ebx, 0xffffffff
0x00009240      74ee           je 0x9230
0x00009242      80bd8e000000.  cmp byte [rbp + 0x8e], 0
0x00009249      757d           jne 0x92c8
0x0000924b      31c0           xor eax, eax
0x0000924d      83fb0a         cmp ebx, 0xa
0x00009250      744a           je 0x929c
0x00009252      4883c408       add rsp, 8
0x00009256      5b             pop rbx
0x00009257      5d             pop rbp
0x00009258      c3             ret
0x00009259      0f1f80000000.  nop dword [rax]
0x00009260      8b4570         mov eax, dword [rbp + 0x70]
0x00009263      4883c408       add rsp, 8
0x00009267      5b             pop rbx
0x00009268      5d             pop rbp
0x00009269      c3             ret
0x0000926a      660f1f440000   nop word [rax + rax]
0x00009270      488b4708       mov rax, qword [rdi + 8]
0x00009274      488b8f800000.  mov rcx, qword [rdi + 0x80]
0x0000927b      0fb60430       movzx eax, byte [rax + rsi]
0x0000927f      4889c2         mov rdx, rax
0x00009282      48c1f806       sar rax, 6
0x00009286      488b0cc1       mov rcx, qword [rcx + rax*8]
0x0000928a      b801000000     mov eax, 1
0x0000928f      480fa3d1       bt rcx, rdx
0x00009293      72bd           jb 0x9252
0x00009295      31c0           xor eax, eax
0x00009297      80fa0a         cmp dl, 0xa
0x0000929a      75b6           jne 0x9252
0x0000929c      31c0           xor eax, eax
0x0000929e      80bd8d000000.  cmp byte [rbp + 0x8d], 0
0x000092a5      0f95c0         setne al
0x000092a8      4883c408       add rsp, 8
0x000092ac      01c0           add eax, eax
0x000092ae      5b             pop rbx
0x000092af      5d             pop rbp
0x000092b0      c3             ret
0x000092b1      0f1f80000000.  nop dword [rax]
0x000092b8      83e202         and edx, 2
0x000092bb      83fa01         cmp edx, 1
0x000092be      19c0           sbb eax, eax
0x000092c0      83e002         and eax, 2
0x000092c3      83c008         add eax, 8
0x000092c6      eb8a           jmp 0x9252
0x000092c8      89df           mov edi, ebx
0x000092ca      e8e187ffff     call sym.imp.iswalnum
0x000092cf      85c0           test eax, eax
0x000092d1      7509           jne 0x92dc
0x000092d3      83fb5f         cmp ebx, 0x5f
0x000092d6      0f856fffffff   jne 0x924b
0x000092dc      b801000000     mov eax, 1
0x000092e1      e96cffffff     jmp 0x9252
0x000092e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- check_node_accept:
0x000092f0      488b4708       mov rax, qword [rdi + 8]
0x000092f4      0fb60c10       movzx ecx, byte [rax + rdx]
0x000092f8      0fb64608       movzx eax, byte [rsi + 8]
0x000092fc      3c03           cmp al, 3
0x000092fe      0f84b4000000   je 0x93b8
0x00009304      0f8696000000   jbe 0x93a0
0x0000930a      3c05           cmp al, 5
0x0000930c      7412           je 0x9320
0x0000930e      3c07           cmp al, 7
0x00009310      0f859a000000   jne 0x93b0
0x00009316      31c0           xor eax, eax
0x00009318      84c9           test cl, cl
0x0000931a      0f888a000000   js 0x93aa
0x00009320      80f90a         cmp cl, 0xa
0x00009323      0f84bf000000   je 0x93e8
0x00009329      84c9           test cl, cl
0x0000932b      7513           jne 0x9340
0x0000932d      488b8f980000.  mov rcx, qword [rdi + 0x98]
0x00009334      31c0           xor eax, eax
0x00009336      f681d8000000.  test byte [rcx + 0xd8], 0x80
0x0000933d      756b           jne 0x93aa
0x0000933f      90             nop
0x00009340      53             push rbx
0x00009341      8b5e08         mov ebx, dword [rsi + 8]
0x00009344      b801000000     mov eax, 1
0x00009349      f7c300ff0300   test ebx, 0x3ff00
0x0000934f      744b           je 0x939c
0x00009351      4889d6         mov rsi, rdx
0x00009354      8b97a0000000   mov edx, dword [rdi + 0xa0]
0x0000935a      c1eb08         shr ebx, 8
0x0000935d      e89efeffff     call sym.re_string_context_at
0x00009362      89d9           mov ecx, ebx
0x00009364      89c2           mov edx, eax
0x00009366      6681e1ff03     and cx, 0x3ff
0x0000936b      f6c304         test bl, 4
0x0000936e      7468           je 0x93d8
0x00009370      31c0           xor eax, eax
0x00009372      f6c201         test dl, 1
0x00009375      7425           je 0x939c
0x00009377      83e308         and ebx, 8
0x0000937a      7520           jne 0x939c
0x0000937c      f6c120         test cl, 0x20                           ; "@"
0x0000937f      7407           je 0x9388
0x00009381      31c0           xor eax, eax
0x00009383      f6c202         test dl, 2
0x00009386      7414           je 0x939c
0x00009388      c1ea03         shr edx, 3
0x0000938b      b801000000     mov eax, 1
0x00009390      83e201         and edx, 1
0x00009393      81e180000000   and ecx, 0x80
0x00009399      0f45c2         cmovne eax, edx
0x0000939c      5b             pop rbx
0x0000939d      c3             ret
0x0000939e      6690           nop
0x000093a0      3c01           cmp al, 1
0x000093a2      750c           jne 0x93b0
0x000093a4      31c0           xor eax, eax
0x000093a6      380e           cmp byte [rsi], cl
0x000093a8      7496           je 0x9340
0x000093aa      f3c3           ret
0x000093ac      0f1f4000       nop dword [rax]
0x000093b0      31c0           xor eax, eax
0x000093b2      c3             ret
0x000093b3      0f1f440000     nop dword [rax + rax]
0x000093b8      4c8b06         mov r8, qword [rsi]
0x000093bb      0fb6c1         movzx eax, cl
0x000093be      48c1f806       sar rax, 6
0x000093c2      4d8b04c0       mov r8, qword [r8 + rax*8]
0x000093c6      31c0           xor eax, eax
0x000093c8      490fa3c8       bt r8, rcx
0x000093cc      0f826effffff   jb 0x9340
0x000093d2      f3c3           ret
0x000093d4      0f1f4000       nop dword [rax]
0x000093d8      83e308         and ebx, 8
0x000093db      749f           je 0x937c
0x000093dd      a801           test al, 1
0x000093df      749b           je 0x937c
0x000093e1      31c0           xor eax, eax
0x000093e3      5b             pop rbx
0x000093e4      c3             ret
0x000093e5      0f1f00         nop dword [rax]
0x000093e8      488b8f980000.  mov rcx, qword [rdi + 0x98]
0x000093ef      31c0           xor eax, eax
0x000093f1      f681d8000000.  test byte [rcx + 0xd8], 0x40
0x000093f8      0f8542ffffff   jne 0x9340
0x000093fe      f3c3           ret
;-- check_halt_state_context.isra.20:
0x00009400      4154           push r12
0x00009402      4989d4         mov r12, rdx
0x00009405      55             push rbp
0x00009406      53             push rbx
0x00009407      8b97a0000000   mov edx, dword [rdi + 0xa0]
0x0000940d      4889f3         mov rbx, rsi
0x00009410      4889ce         mov rsi, rcx
0x00009413      4889fd         mov rbp, rdi
0x00009416      e8e5fdffff     call sym.re_string_context_at
0x0000941b      4885db         test rbx, rbx
0x0000941e      0f8ea4000000   jle 0x94c8
0x00009424      488b95980000.  mov rdx, qword [rbp + 0x98]
0x0000942b      4189c3         mov r11d, eax
0x0000942e      89c5           mov ebp, eax
0x00009430      83e001         and eax, 1
0x00009433      4d8b0c24       mov r9, qword [r12]
0x00009437      31f6           xor esi, esi
0x00009439      83e508         and ebp, 8
0x0000943c      4183e302       and r11d, 2
0x00009440      4189c2         mov r10d, eax
0x00009443      4c8b02         mov r8, qword [rdx]
0x00009446      eb11           jmp 0x9459
0x00009448      0f1f84000000.  nop dword [rax + rax]
0x00009450      4883c601       add rsi, 1
0x00009454      4839de         cmp rsi, rbx
0x00009457      746f           je 0x94c8
0x00009459      498b04f1       mov rax, qword [r9 + rsi*8]
0x0000945d      4889c2         mov rdx, rax
0x00009460      48c1e204       shl rdx, 4
0x00009464      4c01c2         add rdx, r8
0x00009467      8b4a08         mov ecx, dword [rdx + 8]
0x0000946a      c1e908         shr ecx, 8
0x0000946d      89cf           mov edi, ecx
0x0000946f      6681e7ff03     and di, 0x3ff
0x00009474      807a0802       cmp byte [rdx + 8], 2
0x00009478      75d6           jne 0x9450
0x0000947a      6685ff         test di, di
0x0000947d      7426           je 0x94a5
0x0000947f      f6c104         test cl, 4
0x00009482      742c           je 0x94b0
0x00009484      4585d2         test r10d, r10d
0x00009487      74c7           je 0x9450
0x00009489      83e108         and ecx, 8
0x0000948c      75c2           jne 0x9450
0x0000948e      40f6c720       test dil, 0x20                          ; "@"
0x00009492      7405           je 0x9499
0x00009494      4585db         test r11d, r11d
0x00009497      74b7           je 0x9450
0x00009499      81e780000000   and edi, 0x80
0x0000949f      7404           je 0x94a5
0x000094a1      85ed           test ebp, ebp
0x000094a3      74ab           je 0x9450
0x000094a5      5b             pop rbx
0x000094a6      5d             pop rbp
0x000094a7      415c           pop r12
0x000094a9      c3             ret
0x000094aa      660f1f440000   nop word [rax + rax]
0x000094b0      83e108         and ecx, 8
0x000094b3      74d9           je 0x948e
0x000094b5      4585d2         test r10d, r10d
0x000094b8      7596           jne 0x9450
0x000094ba      40f6c720       test dil, 0x20                          ; "@"
0x000094be      74d9           je 0x9499
0x000094c0      ebd2           jmp 0x9494
0x000094c2      660f1f440000   nop word [rax + rax]
0x000094c8      5b             pop rbx
0x000094c9      31c0           xor eax, eax
0x000094cb      5d             pop rbp
0x000094cc      415c           pop r12
0x000094ce      c3             ret
0x000094cf      90             nop
;-- re_string_reconstruct:
0x000094d0      4157           push r15
0x000094d2      4156           push r14
0x000094d4      4989f7         mov r15, rsi
0x000094d7      4155           push r13
0x000094d9      4154           push r12
0x000094db      4189d2         mov r10d, edx
0x000094de      55             push rbp
0x000094df      53             push rbx
0x000094e0      4889f5         mov rbp, rsi
0x000094e3      4889fb         mov rbx, rdi
0x000094e6      4883ec48       sub rsp, 0x48
0x000094ea      64488b042528.  mov rax, qword fs:[0x28]
0x000094f3      4889442438     mov qword [rsp + 0x38], rax
0x000094f8      31c0           xor eax, eax
0x000094fa      488b4728       mov rax, qword [rdi + 0x28]
0x000094fe      4829c5         sub rbp, rax
0x00009501      4839f0         cmp rax, rsi
0x00009504      7e60           jle 0x9566
0x00009506      83bf90000000.  cmp dword [rdi + 0x90], 1
0x0000950d      0f8f2d010000   jg 0x9640
0x00009513      488b4350       mov rax, qword [rbx + 0x50]
0x00009517      48c743300000.  mov qword [rbx + 0x30], 0
0x0000951f      4c89fd         mov rbp, r15
0x00009522      48c743280000.  mov qword [rbx + 0x28], 0
0x0000952a      48c743380000.  mov qword [rbx + 0x38], 0
0x00009532      c6838c000000.  mov byte [rbx + 0x8c], 0
0x00009539      48894358       mov qword [rbx + 0x58], rax
0x0000953d      488b4360       mov rax, qword [rbx + 0x60]
0x00009541      48894368       mov qword [rbx + 0x68], rax
0x00009545      4489d0         mov eax, r10d
0x00009548      83e001         and eax, 1
0x0000954b      83f801         cmp eax, 1
0x0000954e      19c0           sbb eax, eax
0x00009550      83e002         and eax, 2
0x00009553      83c004         add eax, 4
0x00009556      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x0000955d      894370         mov dword [rbx + 0x70], eax
0x00009560      0f84ca000000   je 0x9630
0x00009566      4885ed         test rbp, rbp
0x00009569      7463           je 0x95ce
0x0000956b      488b4338       mov rax, qword [rbx + 0x38]
0x0000956f      0fb6938c0000.  movzx edx, byte [rbx + 0x8c]
0x00009576      4c8b4330       mov r8, qword [rbx + 0x30]
0x0000957a      4839e8         cmp rax, rbp
0x0000957d      0f8e1d010000   jle 0x96a0
0x00009583      84d2           test dl, dl
0x00009585      0f850d020000   jne 0x9798
0x0000958b      488d75ff       lea rsi, [rbp - 1]
0x0000958f      4489d2         mov edx, r10d
0x00009592      4889df         mov rdi, rbx
0x00009595      4c890424       mov qword [rsp], r8
0x00009599      e862fcffff     call sym.re_string_context_at
0x0000959e      4c8b0424       mov r8, qword [rsp]
0x000095a2      894370         mov dword [rbx + 0x70], eax
0x000095a5      4929e8         sub r8, rbp
0x000095a8      83bb90000000.  cmp dword [rbx + 0x90], 1
0x000095af      0f8f9b000000   jg 0x9650
0x000095b5      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x000095bc      0f859e030000   jne 0x9960
0x000095c2      48296b38       sub qword [rbx + 0x38], rbp
0x000095c6      4c894330       mov qword [rbx + 0x30], r8
0x000095ca      48016b08       add qword [rbx + 8], rbp
0x000095ce      488b4358       mov rax, qword [rbx + 0x58]
0x000095d2      48296b68       sub qword [rbx + 0x68], rbp
0x000095d6      4c897b28       mov qword [rbx + 0x28], r15
0x000095da      4829e8         sub rax, rbp
0x000095dd      83bb90000000.  cmp dword [rbx + 0x90], 1
0x000095e4      48894358       mov qword [rbx + 0x58], rax
0x000095e8      0f8e9a000000   jle 0x9688
0x000095ee      80bb88000000.  cmp byte [rbx + 0x88], 0
0x000095f5      4889df         mov rdi, rbx
0x000095f8      747e           je 0x9678
0x000095fa      e841cdffff     call sym.build_wcs_upper_buffer
0x000095ff      85c0           test eax, eax
0x00009601      750a           jne 0x960d
0x00009603      48c743480000.  mov qword [rbx + 0x48], 0
0x0000960b      31c0           xor eax, eax
0x0000960d      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00009612      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000961b      0f8549060000   jne 0x9c6a
0x00009621      4883c448       add rsp, 0x48
0x00009625      5b             pop rbx
0x00009626      5d             pop rbp
0x00009627      415c           pop r12
0x00009629      415d           pop r13
0x0000962b      415e           pop r14
0x0000962d      415f           pop r15
0x0000962f      c3             ret
0x00009630      488b03         mov rax, qword [rbx]
0x00009633      48894308       mov qword [rbx + 8], rax
0x00009637      e92affffff     jmp 0x9566
0x0000963c      0f1f4000       nop dword [rax]
0x00009640      48c747200000.  mov qword [rdi + 0x20], 0
0x00009648      e9c6feffff     jmp 0x9513
0x0000964d      0f1f00         nop dword [rax]
0x00009650      488b7b10       mov rdi, qword [rbx + 0x10]
0x00009654      4a8d14850000.  lea rdx, [r8*4]
0x0000965c      488d34af       lea rsi, [rdi + rbp*4]
0x00009660      e82b85ffff     call sym.imp.memmove
0x00009665      4c8b4330       mov r8, qword [rbx + 0x30]
0x00009669      4929e8         sub r8, rbp
0x0000966c      e944ffffff     jmp 0x95b5
0x00009671      0f1f80000000.  nop dword [rax]
0x00009678      e8f3caffff     call sym.build_wcs_buffer
0x0000967d      e981ffffff     jmp 0x9603
0x00009682      660f1f440000   nop word [rax + rax]
0x00009688      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x0000968f      0f85ab030000   jne 0x9a40
0x00009695      48894330       mov qword [rbx + 0x30], rax
0x00009699      e965ffffff     jmp 0x9603
0x0000969e      6690           nop
0x000096a0      84d2           test dl, dl
0x000096a2      0f85a5040000   jne 0x9b4d
0x000096a8      486393900000.  movsxd rdx, dword [rbx + 0x90]
0x000096af      48c743300000.  mov qword [rbx + 0x30], 0
0x000096b7      4c8b5b28       mov r11, qword [rbx + 0x28]
0x000096bb      83fa01         cmp edx, 1
0x000096be      0f8ee4030000   jle 0x9aa8
0x000096c4      80bb89000000.  cmp byte [rbx + 0x89], 0
0x000096cb      0f85b7020000   jne 0x9988
0x000096d1      4d8d3403       lea r14, [r11 + rax]
0x000096d5      4d39f7         cmp r15, r14
0x000096d8      0f8e41040000   jle 0x9b1f
0x000096de      488d4320       lea rax, [rbx + 0x20]
0x000096e2      4c8d6c2424     lea r13, [rsp + 0x24]
0x000096e7      4889442410     mov qword [rsp + 0x10], rax
0x000096ec      0f1f4000       nop dword [rax]
0x000096f0      4c8b6350       mov r12, qword [rbx + 0x50]
0x000096f4      488b33         mov rsi, qword [rbx]
0x000096f7      4c89ef         mov rdi, r13
0x000096fa      488b4320       mov rax, qword [rbx + 0x20]
0x000096fe      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00009703      448954240c     mov dword [rsp + 0xc], r10d
0x00009708      4c890424       mov qword [rsp], r8
0x0000970c      4d29f4         sub r12, r14
0x0000970f      4c01f6         add rsi, r14
0x00009712      4c89e2         mov rdx, r12
0x00009715      4889442418     mov qword [rsp + 0x18], rax
0x0000971a      e861c1ffff     call sym.rpl_mbrtowc
0x0000971f      488d48ff       lea rcx, [rax - 1]
0x00009723      8b542424       mov edx, dword [rsp + 0x24]
0x00009727      4c8b0424       mov r8, qword [rsp]
0x0000972b      448b54240c     mov r10d, dword [rsp + 0xc]
0x00009730      4883f9fc       cmp rcx, 0xfffffffffffffffc
0x00009734      0f873b040000   ja 0x9b75
0x0000973a      4901c6         add r14, rax
0x0000973d      4d39f7         cmp r15, r14
0x00009740      7fae           jg 0x96f0
0x00009742      4d29fe         sub r14, r15
0x00009745      83faff         cmp edx, 0xffffffff
0x00009748      4d89f4         mov r12, r14
0x0000974b      4c897330       mov qword [rbx + 0x30], r14
0x0000974f      0f84d4030000   je 0x9b29
0x00009755      80bb8e000000.  cmp byte [rbx + 0x8e], 0
0x0000975c      0f8567040000   jne 0x9bc9
0x00009762      31c0           xor eax, eax
0x00009764      83fa0a         cmp edx, 0xa
0x00009767      750e           jne 0x9777
0x00009769      31c0           xor eax, eax
0x0000976b      80bb8d000000.  cmp byte [rbx + 0x8d], 0
0x00009772      0f95c0         setne al
0x00009775      01c0           add eax, eax
0x00009777      894370         mov dword [rbx + 0x70], eax
0x0000977a      4983fc00       cmp r12, 0
0x0000977e      0f8516040000   jne 0x9b9a
0x00009784      0fb6838b0000.  movzx eax, byte [rbx + 0x8b]
0x0000978b      4c896338       mov qword [rbx + 0x38], r12
0x0000978f      e9b8010000     jmp 0x994c
0x00009794      0f1f4000       nop dword [rax]
0x00009798      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000979c      4c89c1         mov rcx, r8
0x0000979f      31f6           xor esi, esi
0x000097a1      eb10           jmp 0x97b3
0x000097a3      0f1f440000     nop dword [rax + rax]
0x000097a8      7d39           jge 0x97e3
0x000097aa      488d7001       lea rsi, [rax + 1]
0x000097ae      4839ce         cmp rsi, rcx
0x000097b1      7d25           jge 0x97d8
0x000097b3      488d140e       lea rdx, [rsi + rcx]
0x000097b7      4889d0         mov rax, rdx
0x000097ba      48c1e83f       shr rax, 0x3f
0x000097be      4801d0         add rax, rdx
0x000097c1      48d1f8         sar rax, 1
0x000097c4      498b14c6       mov rdx, qword [r14 + rax*8]
0x000097c8      4989c4         mov r12, rax
0x000097cb      4839ea         cmp rdx, rbp
0x000097ce      7ed8           jle 0x97a8
0x000097d0      4889c1         mov rcx, rax
0x000097d3      ebd9           jmp 0x97ae
0x000097d5      0f1f00         nop dword [rax]
0x000097d8      4c8d6001       lea r12, [rax + 1]
0x000097dc      4839ea         cmp rdx, rbp
0x000097df      4c0f4de0       cmovge r12, rax
0x000097e3      4d8d6c24ff     lea r13, [r12 - 1]
0x000097e8      4489d2         mov edx, r10d
0x000097eb      4889df         mov rdi, rbx
0x000097ee      4c890424       mov qword [rsp], r8
0x000097f2      4c89ee         mov rsi, r13
0x000097f5      e806faffff     call sym.re_string_context_at
0x000097fa      4c39e5         cmp rbp, r12
0x000097fd      894370         mov dword [rbx + 0x70], eax
0x00009800      4c8b0424       mov r8, qword [rsp]
0x00009804      0f857e000000   jne 0x9888
0x0000980a      4c39c5         cmp rbp, r8
0x0000980d      7d79           jge 0x9888
0x0000980f      4b392ce6       cmp qword [r14 + r12*8], rbp
0x00009813      7573           jne 0x9888
0x00009815      488b7b10       mov rdi, qword [rbx + 0x10]
0x00009819      4929e8         sub r8, rbp
0x0000981c      4a8d14850000.  lea rdx, [r8*4]
0x00009824      488d34af       lea rsi, [rdi + rbp*4]
0x00009828      e86383ffff     call sym.imp.memmove
0x0000982d      488b7b08       mov rdi, qword [rbx + 8]
0x00009831      488b5330       mov rdx, qword [rbx + 0x30]
0x00009835      488d342f       lea rsi, [rdi + rbp]
0x00009839      4829ea         sub rdx, rbp
0x0000983c      e84f83ffff     call sym.imp.memmove
0x00009841      488b4330       mov rax, qword [rbx + 0x30]
0x00009845      48296b38       sub qword [rbx + 0x38], rbp
0x00009849      4829e8         sub rax, rbp
0x0000984c      4885c0         test rax, rax
0x0000984f      48894330       mov qword [rbx + 0x30], rax
0x00009853      7e23           jle 0x9878
0x00009855      488b4b18       mov rcx, qword [rbx + 0x18]
0x00009859      31c0           xor eax, eax
0x0000985b      488d34e9       lea rsi, [rcx + rbp*8]
0x0000985f      90             nop
0x00009860      488b14c6       mov rdx, qword [rsi + rax*8]
0x00009864      4829ea         sub rdx, rbp
0x00009867      488914c1       mov qword [rcx + rax*8], rdx
0x0000986b      4883c001       add rax, 1
0x0000986f      48394330       cmp qword [rbx + 0x30], rax
0x00009873      7feb           jg 0x9860
0x00009875      0f1f00         nop dword [rax]
0x00009878      0fb6838b0000.  movzx eax, byte [rbx + 0x8b]
0x0000987f      e9c8000000     jmp 0x994c
0x00009884      0f1f4000       nop dword [rax]
0x00009888      488b4350       mov rax, qword [rbx + 0x50]
0x0000988c      c6838c000000.  mov byte [rbx + 0x8c], 0
0x00009893      4801e8         add rax, rbp
0x00009896      4c29f8         sub rax, r15
0x00009899      48894358       mov qword [rbx + 0x58], rax
0x0000989d      488b4360       mov rax, qword [rbx + 0x60]
0x000098a1      4801e8         add rax, rbp
0x000098a4      4c29f8         sub rax, r15
0x000098a7      4d85e4         test r12, r12
0x000098aa      48894368       mov qword [rbx + 0x68], rax
0x000098ae      7e23           jle 0x98d3
0x000098b0      4b396ce6f8     cmp qword [r14 + r12*8 - 8], rbp
0x000098b5      7414           je 0x98cb
0x000098b7      eb1a           jmp 0x98d3
0x000098b9      0f1f80000000.  nop dword [rax]
0x000098c0      4b396ceef8     cmp qword [r14 + r13*8 - 8], rbp
0x000098c5      750c           jne 0x98d3
0x000098c7      4983ed01       sub r13, 1
0x000098cb      4d85ed         test r13, r13
0x000098ce      4d89ec         mov r12, r13
0x000098d1      75ed           jne 0x98c0
0x000098d3      4d39c4         cmp r12, r8
0x000098d6      0f8d2c020000   jge 0x9b08
0x000098dc      488b4310       mov rax, qword [rbx + 0x10]
0x000098e0      eb13           jmp 0x98f5
0x000098e2      660f1f440000   nop word [rax + rax]
0x000098e8      4983c401       add r12, 1
0x000098ec      4d39c4         cmp r12, r8
0x000098ef      0f841b020000   je 0x9b10
0x000098f5      42833ca0ff     cmp dword [rax + r12*4], 0xffffffff
0x000098fa      74ec           je 0x98e8
0x000098fc      4b8b14e6       mov rdx, qword [r14 + r12*8]
0x00009900      4829ea         sub rdx, rbp
0x00009903      4883fa00       cmp rdx, 0
0x00009907      48895330       mov qword [rbx + 0x30], rdx
0x0000990b      7434           je 0x9941
0x0000990d      7e20           jle 0x992f
0x0000990f      488b4310       mov rax, qword [rbx + 0x10]
0x00009913      488d0c90       lea rcx, [rax + rdx*4]
0x00009917      660f1f840000.  nop word [rax + rax]
0x00009920      c700ffffffff   mov dword [rax], 0xffffffff             ; [0xffffffff:4]=-1 ; -1
0x00009926      4883c004       add rax, 4
0x0000992a      4839c1         cmp rcx, rax
0x0000992d      75f1           jne 0x9920
0x0000992f      488b7b08       mov rdi, qword [rbx + 8]
0x00009933      beff000000     mov esi, 0xff
0x00009938      e8d380ffff     call sym.imp.memset
0x0000993d      488b5330       mov rdx, qword [rbx + 0x30]
0x00009941      0fb6838b0000.  movzx eax, byte [rbx + 0x8b]
0x00009948      48895338       mov qword [rbx + 0x38], rdx
0x0000994c      84c0           test al, al
0x0000994e      0f8476fcffff   je 0x95ca
0x00009954      e975fcffff     jmp 0x95ce
0x00009959      0f1f80000000.  nop dword [rax]
0x00009960      488b7b08       mov rdi, qword [rbx + 8]
0x00009964      4c89c2         mov rdx, r8
0x00009967      488d342f       lea rsi, [rdi + rbp]
0x0000996b      e82082ffff     call sym.imp.memmove
0x00009970      0fb6838b0000.  movzx eax, byte [rbx + 0x8b]
0x00009977      48296b30       sub qword [rbx + 0x30], rbp
0x0000997b      48296b38       sub qword [rbx + 0x38], rbp
0x0000997f      ebcb           jmp 0x994c
0x00009981      0f1f80000000.  nop dword [rax]
0x00009988      488b0b         mov rcx, qword [rbx]
0x0000998b      4889ef         mov rdi, rbp
0x0000998e      4829d7         sub rdi, rdx
0x00009991      4889fa         mov rdx, rdi
0x00009994      4e8d2419       lea r12, [rcx + r11]
0x00009998      4c01e2         add rdx, r12
0x0000999b      498d742cff     lea rsi, [r12 + rbp - 1]
0x000099a0      4839d1         cmp rcx, rdx
0x000099a3      480f42ca       cmovb rcx, rdx
0x000099a7      4839f1         cmp rcx, rsi
0x000099aa      7619           jbe 0x99c5
0x000099ac      e920fdffff     jmp 0x96d1
0x000099b1      0f1f80000000.  nop dword [rax]
0x000099b8      4883ee01       sub rsi, 1
0x000099bc      4839f1         cmp rcx, rsi
0x000099bf      0f870cfdffff   ja 0x96d1
0x000099c5      0fb616         movzx edx, byte [rsi]
0x000099c8      83e2c0         and edx, 0xffffffc0                     ; 4294967232
0x000099cb      80fa80         cmp dl, 0x80
0x000099ce      74e8           je 0x99b8
0x000099d0      488b5358       mov rdx, qword [rbx + 0x58]
0x000099d4      488b4b78       mov rcx, qword [rbx + 0x78]
0x000099d8      4989f6         mov r14, rsi
0x000099db      4c01e2         add rdx, r12
0x000099de      4829f2         sub rdx, rsi
0x000099e1      4885c9         test rcx, rcx
0x000099e4      0f8548020000   jne 0x9c32
0x000099ea      4c8d6c2424     lea r13, [rsp + 0x24]
0x000099ef      4901ec         add r12, rbp
0x000099f2      488d4c2428     lea rcx, [rsp + 0x28]
0x000099f7      4d29f4         sub r12, r14
0x000099fa      448954240c     mov dword [rsp + 0xc], r10d
0x000099ff      4c890424       mov qword [rsp], r8
0x00009a03      4c89ef         mov rdi, r13
0x00009a06      48c744242800.  mov qword [rsp + 0x28], 0
0x00009a0f      e86cbeffff     call sym.rpl_mbrtowc
0x00009a14      4939c4         cmp r12, rax
0x00009a17      4c8b0424       mov r8, qword [rsp]
0x00009a1b      448b54240c     mov r10d, dword [rsp + 0xc]
0x00009a20      770a           ja 0x9a2c
0x00009a22      4883f8fd       cmp rax, 0xfffffffffffffffd
0x00009a26      0f86c5010000   jbe 0x9bf1
0x00009a2c      4c8b5b28       mov r11, qword [rbx + 0x28]
0x00009a30      488b4338       mov rax, qword [rbx + 0x38]
0x00009a34      e998fcffff     jmp 0x96d1
0x00009a39      0f1f80000000.  nop dword [rax]
0x00009a40      80bb88000000.  cmp byte [rbx + 0x88], 0
0x00009a47      0f85f3000000   jne 0x9b40
0x00009a4d      488b4b78       mov rcx, qword [rbx + 0x78]
0x00009a51      4885c9         test rcx, rcx
0x00009a54      0f84a9fbffff   je 0x9603
0x00009a5a      48394340       cmp qword [rbx + 0x40], rax
0x00009a5e      488b5330       mov rdx, qword [rbx + 0x30]
0x00009a62      480f4e4340     cmovle rax, qword [rbx + 0x40]
0x00009a67      4839d0         cmp rax, rdx
0x00009a6a      7f0c           jg 0x9a78
0x00009a6c      eb2a           jmp 0x9a98
0x00009a6e      6690           nop
0x00009a70      4c8b7b28       mov r15, qword [rbx + 0x28]
0x00009a74      488b4b78       mov rcx, qword [rbx + 0x78]
0x00009a78      488b33         mov rsi, qword [rbx]
0x00009a7b      4801d6         add rsi, rdx
0x00009a7e      420fb6343e     movzx esi, byte [rsi + r15]
0x00009a83      0fb63431       movzx esi, byte [rcx + rsi]
0x00009a87      488b4b08       mov rcx, qword [rbx + 8]
0x00009a8b      40883411       mov byte [rcx + rdx], sil
0x00009a8f      4883c201       add rdx, 1
0x00009a93      4839d0         cmp rax, rdx
0x00009a96      75d8           jne 0x9a70
0x00009a98      48895330       mov qword [rbx + 0x30], rdx
0x00009a9c      48895338       mov qword [rbx + 0x38], rdx
0x00009aa0      e95efbffff     jmp 0x9603
0x00009aa5      0f1f00         nop dword [rax]
0x00009aa8      488b03         mov rax, qword [rbx]
0x00009aab      488b5378       mov rdx, qword [rbx + 0x78]
0x00009aaf      4801e8         add rax, rbp
0x00009ab2      4885d2         test rdx, rdx
0x00009ab5      410fb64403ff   movzx eax, byte [r11 + rax - 1]
0x00009abb      48c743380000.  mov qword [rbx + 0x38], 0
0x00009ac3      7404           je 0x9ac9
0x00009ac5      0fb60402       movzx eax, byte [rdx + rax]
0x00009ac9      488b8b800000.  mov rcx, qword [rbx + 0x80]
0x00009ad0      0fb6d0         movzx edx, al
0x00009ad3      48c1fa06       sar rdx, 6
0x00009ad7      488b0cd1       mov rcx, qword [rcx + rdx*8]
0x00009adb      ba01000000     mov edx, 1
0x00009ae0      480fa3c1       bt rcx, rax
0x00009ae4      721a           jb 0x9b00
0x00009ae6      31d2           xor edx, edx
0x00009ae8      3c0a           cmp al, 0xa
0x00009aea      7514           jne 0x9b00
0x00009aec      31d2           xor edx, edx
0x00009aee      80bb8d000000.  cmp byte [rbx + 0x8d], 0
0x00009af5      0f95c2         setne dl
0x00009af8      01d2           add edx, edx
0x00009afa      660f1f440000   nop word [rax + rax]
0x00009b00      895370         mov dword [rbx + 0x70], edx
0x00009b03      e970fdffff     jmp 0x9878
0x00009b08      0f85eefdffff   jne 0x98fc
0x00009b0e      6690           nop
0x00009b10      48c743300000.  mov qword [rbx + 0x30], 0
0x00009b18      31d2           xor edx, edx
0x00009b1a      e922feffff     jmp 0x9941
0x00009b1f      4d29fe         sub r14, r15
0x00009b22      4d89f4         mov r12, r14
0x00009b25      4c897330       mov qword [rbx + 0x30], r14
0x00009b29      498d70ff       lea rsi, [r8 - 1]
0x00009b2d      4489d2         mov edx, r10d
0x00009b30      4889df         mov rdi, rbx
0x00009b33      e8c8f6ffff     call sym.re_string_context_at
0x00009b38      894370         mov dword [rbx + 0x70], eax
0x00009b3b      e93afcffff     jmp 0x977a
0x00009b40      4889df         mov rdi, rbx
0x00009b43      e8b8c5ffff     call sym.build_upper_buffer
0x00009b48      e9b6faffff     jmp 0x9603
0x00009b4d      488b5350       mov rdx, qword [rbx + 0x50]
0x00009b51      c6838c000000.  mov byte [rbx + 0x8c], 0
0x00009b58      4801ea         add rdx, rbp
0x00009b5b      4c29fa         sub rdx, r15
0x00009b5e      48895358       mov qword [rbx + 0x58], rdx
0x00009b62      488b5360       mov rdx, qword [rbx + 0x60]
0x00009b66      4801ea         add rdx, rbp
0x00009b69      4c29fa         sub rdx, r15
0x00009b6c      48895368       mov qword [rbx + 0x68], rdx
0x00009b70      e933fbffff     jmp 0x96a8
0x00009b75      4885c0         test rax, rax
0x00009b78      7473           je 0x9bed
0x00009b7a      4d85e4         test r12, r12
0x00009b7d      746e           je 0x9bed
0x00009b7f      488b03         mov rax, qword [rbx]
0x00009b82      420fb61430     movzx edx, byte [rax + r14]
0x00009b87      488b442418     mov rax, qword [rsp + 0x18]
0x00009b8c      48894320       mov qword [rbx + 0x20], rax
0x00009b90      b801000000     mov eax, 1
0x00009b95      e9a0fbffff     jmp 0x973a
0x00009b9a      7e1b           jle 0x9bb7
0x00009b9c      488b4310       mov rax, qword [rbx + 0x10]
0x00009ba0      4a8d14a0       lea rdx, [rax + r12*4]
0x00009ba4      0f1f4000       nop dword [rax]
0x00009ba8      c700ffffffff   mov dword [rax], 0xffffffff             ; [0xffffffff:4]=-1 ; -1
0x00009bae      4883c004       add rax, 4
0x00009bb2      4839c2         cmp rdx, rax
0x00009bb5      75f1           jne 0x9ba8
0x00009bb7      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x00009bbe      7558           jne 0x9c18
0x00009bc0      4c896338       mov qword [rbx + 0x38], r12
0x00009bc4      e901faffff     jmp 0x95ca
0x00009bc9      89d7           mov edi, edx
0x00009bcb      891424         mov dword [rsp], edx
0x00009bce      e8dd7effff     call sym.imp.iswalnum
0x00009bd3      85c0           test eax, eax
0x00009bd5      750c           jne 0x9be3
0x00009bd7      8b1424         mov edx, dword [rsp]
0x00009bda      83fa5f         cmp edx, 0x5f
0x00009bdd      0f857ffbffff   jne 0x9762
0x00009be3      b801000000     mov eax, 1
0x00009be8      e98afbffff     jmp 0x9777
0x00009bed      31d2           xor edx, edx
0x00009bef      eb96           jmp 0x9b87
0x00009bf1      8b542424       mov edx, dword [rsp + 0x24]
0x00009bf5      4c29e0         sub rax, r12
0x00009bf8      48c743200000.  mov qword [rbx + 0x20], 0
0x00009c00      4989c4         mov r12, rax
0x00009c03      48894330       mov qword [rbx + 0x30], rax
0x00009c07      83faff         cmp edx, 0xffffffff
0x00009c0a      0f8545fbffff   jne 0x9755
0x00009c10      e917feffff     jmp 0x9a2c
0x00009c15      0f1f00         nop dword [rax]
0x00009c18      488b7b08       mov rdi, qword [rbx + 8]
0x00009c1c      4c89e2         mov rdx, r12
0x00009c1f      beff000000     mov esi, 0xff
0x00009c24      e8e77dffff     call sym.imp.memset
0x00009c29      4c8b6330       mov r12, qword [rbx + 0x30]
0x00009c2d      e952fbffff     jmp 0x9784
0x00009c32      4883fa06       cmp rdx, 6
0x00009c36      bf06000000     mov edi, 6
0x00009c3b      4c8d5c2432     lea r11, [rsp + 0x32]
0x00009c40      480f4efa       cmovle rdi, rdx
0x00009c44      83ef01         sub edi, 1
0x00009c47      85ff           test edi, edi
0x00009c49      4863c7         movsxd rax, edi
0x00009c4c      7814           js 0x9c62
0x00009c4e      0fb63c06       movzx edi, byte [rsi + rax]
0x00009c52      0fb63c39       movzx edi, byte [rcx + rdi]
0x00009c56      41883c03       mov byte [r11 + rax], dil
0x00009c5a      4883e801       sub rax, 1
0x00009c5e      85c0           test eax, eax
0x00009c60      79ec           jns 0x9c4e
0x00009c62      4c89de         mov rsi, r11
0x00009c65      e980fdffff     jmp 0x99ea
0x00009c6a      e8217dffff     call sym.imp.__stack_chk_fail
0x00009c6f      90             nop
;-- sub_epsilon_src_nodes:
0x00009c70      4157           push r15
0x00009c72      4156           push r14
0x00009c74      4989d6         mov r14, rdx
0x00009c77      4155           push r13
0x00009c79      4154           push r12
0x00009c7b      488d1476       lea rdx, [rsi + rsi*2]
0x00009c7f      55             push rbp
0x00009c80      53             push rbx
0x00009c81      660fefc0       pxor xmm0, xmm0
0x00009c85      4883ec48       sub rsp, 0x48
0x00009c89      64488b042528.  mov rax, qword fs:[0x28]
0x00009c92      4889442438     mov qword [rsp + 0x38], rax
0x00009c97      31c0           xor eax, eax
0x00009c99      488b4738       mov rax, qword [rdi + 0x38]
0x00009c9d      48c744243000.  mov qword [rsp + 0x30], 0
0x00009ca6      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00009cab      48894c2410     mov qword [rsp + 0x10], rcx
0x00009cb0      488d2cd0       lea rbp, [rax + rdx*8]
0x00009cb4      4c8b5508       mov r10, qword [rbp + 8]
0x00009cb8      4d85d2         test r10, r10
0x00009cbb      0f8ee1010000   jle 0x9ea2
0x00009cc1      488d442420     lea rax, [rsp + 0x20]
0x00009cc6      4989fc         mov r12, rdi
0x00009cc9      4989f5         mov r13, rsi
0x00009ccc      31db           xor ebx, ebx
0x00009cce      4889442418     mov qword [rsp + 0x18], rax
0x00009cd3      eb58           jmp 0x9d2d
0x00009cd5      0f1f00         nop dword [rax]
0x00009cd8      4885c0         test rax, rax
0x00009cdb      0f85d7000000   jne 0x9db8
0x00009ce1      498b7e08       mov rdi, qword [r14 + 8]
0x00009ce5      498d7610       lea rsi, [r14 + 0x10]
0x00009ce9      4c89c2         mov rdx, r8
0x00009cec      e82fd7ffff     call sym.re_node_set_contains.isra.3
0x00009cf1      4885c0         test rax, rax
0x00009cf4      0f84be000000   je 0x9db8
0x00009cfa      498b542438     mov rdx, qword [r12 + 0x38]
0x00009cff      488b742410     mov rsi, qword [rsp + 0x10]
0x00009d04      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00009d09      4c01ca         add rdx, r9
0x00009d0c      e81fe2ffff     call sym.re_node_set_add_intersect
0x00009d11      85c0           test eax, eax
0x00009d13      0f8577010000   jne 0x9e90
0x00009d19      4c8b5508       mov r10, qword [rbp + 8]
0x00009d1d      0f1f00         nop dword [rax]
0x00009d20      4883c301       add rbx, 1
0x00009d24      4939da         cmp r10, rbx
0x00009d27      0f8ed3000000   jle 0x9e00
0x00009d2d      488b4510       mov rax, qword [rbp + 0x10]
0x00009d31      488b04d8       mov rax, qword [rax + rbx*8]
0x00009d35      4939c5         cmp r13, rax
0x00009d38      74e6           je 0x9d20
0x00009d3a      4889c2         mov rdx, rax
0x00009d3d      48c1e204       shl rdx, 4
0x00009d41      49031424       add rdx, qword [r12]
0x00009d45      f6420808       test byte [rdx + 8], 8
0x00009d49      74d5           je 0x9d20
0x00009d4b      4c8d0c40       lea r9, [rax + rax*2]
0x00009d4f      498b4c2428     mov rcx, qword [r12 + 0x28]
0x00009d54      4c8d5d10       lea r11, [rbp + 0x10]
0x00009d58      4c89d7         mov rdi, r10
0x00009d5b      49c1e103       shl r9, 3
0x00009d5f      4c89de         mov rsi, r11
0x00009d62      4c01c9         add rcx, r9
0x00009d65      4c8b7910       mov r15, qword [rcx + 0x10]
0x00009d69      48894c2408     mov qword [rsp + 8], rcx
0x00009d6e      4d8b07         mov r8, qword [r15]
0x00009d71      4c89c2         mov rdx, r8
0x00009d74      4c890424       mov qword [rsp], r8
0x00009d78      e8a3d6ffff     call sym.re_node_set_contains.isra.3
0x00009d7d      488b4c2408     mov rcx, qword [rsp + 8]
0x00009d82      4c8b0424       mov r8, qword [rsp]
0x00009d86      4883790801     cmp qword [rcx + 8], 1
0x00009d8b      0f8f47ffffff   jg 0x9cd8
0x00009d91      4885c0         test rax, rax
0x00009d94      758a           jne 0x9d20
0x00009d96      498b7e08       mov rdi, qword [r14 + 8]
0x00009d9a      498d7610       lea rsi, [r14 + 0x10]
0x00009d9e      4c89c2         mov rdx, r8
0x00009da1      e87ad6ffff     call sym.re_node_set_contains.isra.3
0x00009da6      4885c0         test rax, rax
0x00009da9      0f854bffffff   jne 0x9cfa
0x00009daf      e96cffffff     jmp 0x9d20
0x00009db4      0f1f4000       nop dword [rax]
0x00009db8      4d8b7f08       mov r15, qword [r15 + 8]
0x00009dbc      4d85ff         test r15, r15
0x00009dbf      0f8e5bffffff   jle 0x9d20
0x00009dc5      4c89fa         mov rdx, r15
0x00009dc8      4c89de         mov rsi, r11
0x00009dcb      4c89d7         mov rdi, r10
0x00009dce      e84dd6ffff     call sym.re_node_set_contains.isra.3
0x00009dd3      4885c0         test rax, rax
0x00009dd6      0f8544ffffff   jne 0x9d20
0x00009ddc      498b7e08       mov rdi, qword [r14 + 8]
0x00009de0      498d7610       lea rsi, [r14 + 0x10]
0x00009de4      e837d6ffff     call sym.re_node_set_contains.isra.3
0x00009de9      4885c0         test rax, rax
0x00009dec      0f842effffff   je 0x9d20
0x00009df2      e903ffffff     jmp 0x9cfa
0x00009df7      660f1f840000.  nop word [rax + rax]
0x00009e00      4531c9         xor r9d, r9d
0x00009e03      4d85d2         test r10, r10
0x00009e06      4c8d5c2430     lea r11, [rsp + 0x30]
0x00009e0b      7e4f           jle 0x9e5c
0x00009e0d      0f1f00         nop dword [rax]
0x00009e10      488b4510       mov rax, qword [rbp + 0x10]
0x00009e14      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00009e19      4c89de         mov rsi, r11
0x00009e1c      4e8b14c8       mov r10, qword [rax + r9*8]
0x00009e20      4c89d2         mov rdx, r10
0x00009e23      e8f8d5ffff     call sym.re_node_set_contains.isra.3
0x00009e28      4885c0         test rax, rax
0x00009e2b      7525           jne 0x9e52
0x00009e2d      498d5e10       lea rbx, [r14 + 0x10]
0x00009e31      498b7e08       mov rdi, qword [r14 + 8]
0x00009e35      4889de         mov rsi, rbx
0x00009e38      e8e3d5ffff     call sym.re_node_set_contains.isra.3
0x00009e3d      4883e801       sub rax, 1
0x00009e41      4889c2         mov rdx, rax
0x00009e44      780c           js 0x9e52
0x00009e46      498d7e08       lea rdi, [r14 + 8]
0x00009e4a      4889de         mov rsi, rbx
0x00009e4d      e84ed7ffff     call sym.re_node_set_remove_at.isra.4.part.5
0x00009e52      4983c101       add r9, 1
0x00009e56      4c394d08       cmp qword [rbp + 8], r9
0x00009e5a      7fb4           jg 0x9e10
0x00009e5c      488b7c2430     mov rdi, qword [rsp + 0x30]
0x00009e61      e81a7affff     call sym.imp.free
0x00009e66      31c0           xor eax, eax
0x00009e68      488b742438     mov rsi, qword [rsp + 0x38]
0x00009e6d      644833342528.  xor rsi, qword fs:[0x28]
0x00009e76      752e           jne 0x9ea6
0x00009e78      4883c448       add rsp, 0x48
0x00009e7c      5b             pop rbx
0x00009e7d      5d             pop rbp
0x00009e7e      415c           pop r12
0x00009e80      415d           pop r13
0x00009e82      415e           pop r14
0x00009e84      415f           pop r15
0x00009e86      c3             ret
0x00009e87      660f1f840000.  nop word [rax + rax]
0x00009e90      488b7c2430     mov rdi, qword [rsp + 0x30]
0x00009e95      890424         mov dword [rsp], eax
0x00009e98      e8e379ffff     call sym.imp.free
0x00009e9d      8b0424         mov eax, dword [rsp]
0x00009ea0      ebc6           jmp 0x9e68
0x00009ea2      31ff           xor edi, edi
0x00009ea4      ebbb           jmp 0x9e61
0x00009ea6      e8e57affff     call sym.imp.__stack_chk_fail
0x00009eab      0f1f440000     nop dword [rax + rax]
;-- build_trtable:
0x00009eb0      4157           push r15
0x00009eb2      4156           push r14
0x00009eb4      4989ff         mov r15, rdi
0x00009eb7      4155           push r13
0x00009eb9      4154           push r12
0x00009ebb      bf00380000     mov edi, 0x3800                         ; "T$(\xe8h\xe4\xff\xffH\x8b\b\x0f\xb6\xd3D\x0f\xb6T$(D\x0f\xb6D$0L\x8b\$8\xbf\x01"
0x00009ec0      55             push rbp
0x00009ec1      53             push rbx
0x00009ec2      4881ec080100.  sub rsp, 0x108
0x00009ec9      64488b042528.  mov rax, qword fs:[0x28]
0x00009ed2      48898424f800.  mov qword [rsp + 0xf8], rax
0x00009eda      31c0           xor eax, eax
0x00009edc      4889742408     mov qword [rsp + 8], rsi
0x00009ee1      e8da7bffff     call sym.imp.malloc
0x00009ee6      4885c0         test rax, rax
0x00009ee9      4889442418     mov qword [rsp + 0x18], rax
0x00009eee      0f84cc030000   je 0xa2c0
0x00009ef4      488b442418     mov rax, qword [rsp + 0x18]
0x00009ef9      660fefc0       pxor xmm0, xmm0
0x00009efd      488d98001800.  lea rbx, [rax + 0x1800]
0x00009f04      488b442408     mov rax, qword [rsp + 8]
0x00009f09      0f2984249000.  movaps xmmword [rsp + 0x90], xmm0
0x00009f11      48895c2440     mov qword [rsp + 0x40], rbx
0x00009f16      0f298424a000.  movaps xmmword [rsp + 0xa0], xmm0
0x00009f1e      4883781000     cmp qword [rax + 0x10], 0
0x00009f23      48c740580000.  mov qword [rax + 0x58], 0
0x00009f2b      48c740600000.  mov qword [rax + 0x60], 0
0x00009f33      0f8e710a0000   jle 0xa9aa
0x00009f39      4c897c2430     mov qword [rsp + 0x30], r15
0x00009f3e      31ed           xor ebp, ebp
0x00009f40      48c744241000.  mov qword [rsp + 0x10], 0
0x00009f49      4989df         mov r15, rbx
0x00009f4c      488b5c2410     mov rbx, qword [rsp + 0x10]
0x00009f51      488d04dd0000.  lea rax, [rbx*8]
0x00009f59      4889442420     mov qword [rsp + 0x20], rax
0x00009f5e      488b442408     mov rax, qword [rsp + 8]
0x00009f63      488b4018       mov rax, qword [rax + 0x18]
0x00009f67      4c8b2cd8       mov r13, qword [rax + rbx*8]
0x00009f6b      488b442430     mov rax, qword [rsp + 0x30]
0x00009f70      49c1e504       shl r13, 4
0x00009f74      4c0328         add r13, qword [rax]
0x00009f77      450fb67508     movzx r14d, byte [r13 + 8]
0x00009f7c      418b4508       mov eax, dword [r13 + 8]
0x00009f80      c1e808         shr eax, 8
0x00009f83      6625ff03       and ax, 0x3ff
0x00009f87      4183fe01       cmp r14d, 1
0x00009f8b      0f845f030000   je 0xa2f0
0x00009f91      4183fe03       cmp r14d, 3
0x00009f95      0f84c5070000   je 0xa760
0x00009f9b      4183fe05       cmp r14d, 5
0x00009f9f      0f847b060000   je 0xa620
0x00009fa5      4183fe07       cmp r14d, 7
0x00009fa9      0f84da070000   je 0xa789
0x00009faf      488b5c2408     mov rbx, qword [rsp + 8]
0x00009fb4      488344241001   add qword [rsp + 0x10], 1
0x00009fba      488b442410     mov rax, qword [rsp + 0x10]
0x00009fbf      483b4310       cmp rax, qword [rbx + 0x10]
0x00009fc3      7c87           jl 0x9f4c
0x00009fc5      4885ed         test rbp, rbp
0x00009fc8      4c8b7c2430     mov r15, qword [rsp + 0x30]
0x00009fcd      0f8e560a0000   jle 0xaa29
0x00009fd3      488d5d01       lea rbx, [rbp + 1]
0x00009fd7      48c744247800.  mov qword [rsp + 0x78], 0
0x00009fe0      48895c2470     mov qword [rsp + 0x70], rbx
0x00009fe5      48c1e303       shl rbx, 3
0x00009fe9      4889df         mov rdi, rbx
0x00009fec      e8cf7affff     call sym.imp.malloc
0x00009ff1      4885c0         test rax, rax
0x00009ff4      4989c4         mov r12, rax
0x00009ff7      488984248000.  mov qword [rsp + 0x80], rax
0x00009fff      0f84fa070000   je 0xa7ff
0x0000a005      48b855a8aaaa.  movabs rax, 0xaaaaaaaaaaaa855
0x0000a00f      c744246c0000.  mov dword [rsp + 0x6c], 0
0x0000a017      4839c5         cmp rbp, rax
0x0000a01a      0f8fdf070000   jg 0xa7ff
0x0000a020      488d446d00     lea rax, [rbp + rbp*2]
0x0000a025      48c1e003       shl rax, 3
0x0000a029      4889c7         mov rdi, rax
0x0000a02c      4889442458     mov qword [rsp + 0x58], rax
0x0000a031      e88a7affff     call sym.imp.malloc
0x0000a036      4885c0         test rax, rax
0x0000a039      4889442410     mov qword [rsp + 0x10], rax
0x0000a03e      0f84bb070000   je 0xa7ff
0x0000a044      488b442410     mov rax, qword [rsp + 0x10]
0x0000a049      4883eb08       sub rbx, 8
0x0000a04d      4c8b642440     mov r12, qword [rsp + 0x40]
0x0000a052      660fefc0       pxor xmm0, xmm0
0x0000a056      4c8d742470     lea r14, [rsp + 0x70]
0x0000a05b      48896c2420     mov qword [rsp + 0x20], rbp
0x0000a060      c644244f00     mov byte [rsp + 0x4f], 0
0x0000a065      4c89fd         mov rbp, r15
0x0000a068      4801d8         add rax, rbx
0x0000a06b      4c89642450     mov qword [rsp + 0x50], r12
0x0000a070      4801c3         add rbx, rax
0x0000a073      4889442430     mov qword [rsp + 0x30], rax
0x0000a078      488b442418     mov rax, qword [rsp + 0x18]
0x0000a07d      0f298424d000.  movaps xmmword [rsp + 0xd0], xmm0
0x0000a085      48895c2438     mov qword [rsp + 0x38], rbx
0x0000a08a      31db           xor ebx, ebx
0x0000a08c      4c8d6808       lea r13, [rax + 8]
0x0000a090      488d44246c     lea rax, [rsp + 0x6c]
0x0000a095      0f298424e000.  movaps xmmword [rsp + 0xe0], xmm0
0x0000a09d      4889442428     mov qword [rsp + 0x28], rax
0x0000a0a2      48c744247800.  mov qword [rsp + 0x78], 0
0x0000a0ab      49837d0000     cmp qword [r13], 0
0x0000a0b0      7e46           jle 0xa0f8
0x0000a0b2      4531ff         xor r15d, r15d
0x0000a0b5      0f1f00         nop dword [rax]
0x0000a0b8      498b4508       mov rax, qword [r13 + 8]
0x0000a0bc      4a8b14f8       mov rdx, qword [rax + r15*8]
0x0000a0c0      488b4518       mov rax, qword [rbp + 0x18]
0x0000a0c4      488b04d0       mov rax, qword [rax + rdx*8]
0x0000a0c8      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000a0cc      7420           je 0xa0ee
0x0000a0ce      488d1440       lea rdx, [rax + rax*2]
0x0000a0d2      488b4530       mov rax, qword [rbp + 0x30]
0x0000a0d6      4c89f7         mov rdi, r14
0x0000a0d9      488d34d0       lea rsi, [rax + rdx*8]
0x0000a0dd      e85ed8ffff     call sym.re_node_set_merge
0x0000a0e2      85c0           test eax, eax
0x0000a0e4      8944246c       mov dword [rsp + 0x6c], eax
0x0000a0e8      0f85fa060000   jne 0xa7e8
0x0000a0ee      4983c701       add r15, 1
0x0000a0f2      4d397d00       cmp qword [r13], r15
0x0000a0f6      7fc0           jg 0xa0b8
0x0000a0f8      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000a0fd      31c9           xor ecx, ecx
0x0000a0ff      4889ee         mov rsi, rbp
0x0000a102      4c89f2         mov rdx, r14
0x0000a105      e866e6ffff     call sym.re_acquire_state_context
0x0000a10a      488b742410     mov rsi, qword [rsp + 0x10]
0x0000a10f      4885c0         test rax, rax
0x0000a112      488904de       mov qword [rsi + rbx*8], rax
0x0000a116      0f84ac070000   je 0xa8c8
0x0000a11c      80786800       cmp byte [rax + 0x68], 0
0x0000a120      0f881a070000   js 0xa840
0x0000a126      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000a12b      488b742438     mov rsi, qword [rsp + 0x38]
0x0000a130      488904df       mov qword [rdi + rbx*8], rax
0x0000a134      488b442410     mov rax, qword [rsp + 0x10]
0x0000a139      488b04d8       mov rax, qword [rax + rbx*8]
0x0000a13d      488904de       mov qword [rsi + rbx*8], rax
0x0000a141      488d9424d000.  lea rdx, [rsp + 0xd0]
0x0000a149      31c0           xor eax, eax
0x0000a14b      488b0c02       mov rcx, qword [rdx + rax]
0x0000a14f      490b0c04       or rcx, qword [r12 + rax]
0x0000a153      48890c02       mov qword [rdx + rax], rcx
0x0000a157      4883c008       add rax, 8
0x0000a15b      4883f820       cmp rax, 0x20                           ; "@"
0x0000a15f      75ea           jne 0xa14b
0x0000a161      4883c301       add rbx, 1
0x0000a165      4983c518       add r13, 0x18
0x0000a169      4983c420       add r12, 0x20                           ; "@"
0x0000a16d      483b5c2420     cmp rbx, qword [rsp + 0x20]
0x0000a172      0f852affffff   jne 0xa0a2
0x0000a178      807c244f00     cmp byte [rsp + 0x4f], 0
0x0000a17d      4989ef         mov r15, rbp
0x0000a180      488b6c2420     mov rbp, qword [rsp + 0x20]
0x0000a185      4889542420     mov qword [rsp + 0x20], rdx
0x0000a18a      0f8549070000   jne 0xa8d9
0x0000a190      be00010000     mov esi, 0x100
0x0000a195      bf08000000     mov edi, 8
0x0000a19a      e8d178ffff     call sym.imp.calloc
0x0000a19f      4989c3         mov r11, rax
0x0000a1a2      488b442408     mov rax, qword [rsp + 8]
0x0000a1a7      4d85db         test r11, r11
0x0000a1aa      4c895858       mov qword [rax + 0x58], r11
0x0000a1ae      0f8439060000   je 0xa7ed
0x0000a1b4      488b5c2440     mov rbx, qword [rsp + 0x40]
0x0000a1b9      4c8b642410     mov r12, qword [rsp + 0x10]
0x0000a1be      4531c9         xor r9d, r9d
0x0000a1c1      4c8b6c2430     mov r13, qword [rsp + 0x30]
0x0000a1c6      488b542420     mov rdx, qword [rsp + 0x20]
0x0000a1cb      4883c320       add rbx, 0x20                           ; "@"
0x0000a1cf      4a8b040a       mov rax, qword [rdx + r9]
0x0000a1d3      4885c0         test rax, rax
0x0000a1d6      742c           je 0xa204
0x0000a1d8      4c89ce         mov rsi, r9
0x0000a1db      b901000000     mov ecx, 1
0x0000a1e0      48c1e606       shl rsi, 6
0x0000a1e4      4c01de         add rsi, r11
0x0000a1e7      660f1f840000.  nop word [rax + rax]
0x0000a1f0      a801           test al, 1
0x0000a1f2      0f8560070000   jne 0xa958
0x0000a1f8      4801c9         add rcx, rcx
0x0000a1fb      4883c608       add rsi, 8
0x0000a1ff      48d1e8         shr rax, 1
0x0000a202      75ec           jne 0xa1f0
0x0000a204      4983c108       add r9, 8
0x0000a208      4983f920       cmp r9, 0x20                            ; "@"
0x0000a20c      75c1           jne 0xa1cf
0x0000a20e      f68424d10000.  test byte [rsp + 0xd1], 4
0x0000a216      743a           je 0xa252
0x0000a218      31c0           xor eax, eax
0x0000a21a      488b542450     mov rdx, qword [rsp + 0x50]
0x0000a21f      eb0d           jmp 0xa22e
0x0000a221      4883c001       add rax, 1
0x0000a225      4883c220       add rdx, 0x20                           ; "@"
0x0000a229      4839e8         cmp rax, rbp
0x0000a22c      7424           je 0xa252
0x0000a22e      48f702000400.  test qword [rdx], 0x400
0x0000a235      74ea           je 0xa221
0x0000a237      488b5c2438     mov rbx, qword [rsp + 0x38]
0x0000a23c      807c244f00     cmp byte [rsp + 0x4f], 0
0x0000a241      488b04c3       mov rax, qword [rbx + rax*8]
0x0000a245      49894350       mov qword [r11 + 0x50], rax
0x0000a249      7407           je 0xa252
0x0000a24b      498983500800.  mov qword [r11 + 0x850], rax
0x0000a252      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000a257      e82476ffff     call sym.imp.free
0x0000a25c      488bbc248000.  mov rdi, qword [rsp + 0x80]
0x0000a264      e81776ffff     call sym.imp.free
0x0000a269      488b442418     mov rax, qword [rsp + 0x18]
0x0000a26e      488b5c2458     mov rbx, qword [rsp + 0x58]
0x0000a273      488d6810       lea rbp, [rax + 0x10]
0x0000a277      4801eb         add rbx, rbp
0x0000a27a      488b7d00       mov rdi, qword [rbp]
0x0000a27e      4883c518       add rbp, 0x18
0x0000a282      e8f975ffff     call sym.imp.free
0x0000a287      4839eb         cmp rbx, rbp
0x0000a28a      75ee           jne 0xa27a
0x0000a28c      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000a291      e8ea75ffff     call sym.imp.free
0x0000a296      b801000000     mov eax, 1
0x0000a29b      eb25           jmp 0xa2c2
0x0000a29d      4885ed         test rbp, rbp
0x0000a2a0      48c743080000.  mov qword [rbx + 8], 0
0x0000a2a8      48c703000000.  mov qword [rbx], 0
0x0000a2af      0f852b030000   jne 0xa5e0
0x0000a2b5      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000a2ba      e8c175ffff     call sym.imp.free
0x0000a2bf      90             nop
0x0000a2c0      31c0           xor eax, eax
0x0000a2c2      488b9c24f800.  mov rbx, qword [rsp + 0xf8]
0x0000a2ca      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000a2d3      0f854b070000   jne 0xaa24
0x0000a2d9      4881c4080100.  add rsp, 0x108
0x0000a2e0      5b             pop rbx
0x0000a2e1      5d             pop rbp
0x0000a2e2      415c           pop r12
0x0000a2e4      415d           pop r13
0x0000a2e6      415e           pop r14
0x0000a2e8      415f           pop r15
0x0000a2ea      c3             ret
0x0000a2eb      0f1f440000     nop dword [rax + rax]
0x0000a2f0      410fb64d00     movzx ecx, byte [r13]
0x0000a2f5      4c8da4249000.  lea r12, [rsp + 0x90]
0x0000a2fd      bf01000000     mov edi, 1
0x0000a302      4889ca         mov rdx, rcx
0x0000a305      83e13f         and ecx, 0x3f
0x0000a308      48c1ea03       shr rdx, 3
0x0000a30c      48d3e7         shl rdi, cl
0x0000a30f      83e218         and edx, 0x18
0x0000a312      49093c14       or qword [r12 + rdx], rdi
0x0000a316      6685c0         test ax, ax
0x0000a319      0f84c1000000   je 0xa3e0
0x0000a31f      a820           test al, 0x20                           ; "@"
0x0000a321      0f8569030000   jne 0xa690
0x0000a327      a880           test al, 0x80
0x0000a329      0f8595020000   jne 0xa5c4
0x0000a32f      a804           test al, 4
0x0000a331      7452           je 0xa385
0x0000a333      4183fe01       cmp r14d, 1
0x0000a337      0f84d8030000   je 0xa715
0x0000a33d      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000a342      4183b8b40000.  cmp dword [r8 + 0xb4], 1
0x0000a34a      0f8e52040000   jle 0xa7a2
0x0000a350      498b7878       mov rdi, qword [r8 + 0x78]
0x0000a354      31f6           xor esi, esi
0x0000a356      31c9           xor ecx, ecx
0x0000a358      488b14cf       mov rdx, qword [rdi + rcx*8]
0x0000a35c      48f7d2         not rdx
0x0000a35f      490b94c8b800.  or rdx, qword [r8 + rcx*8 + 0xb8]
0x0000a367      492314cc       and rdx, qword [r12 + rcx*8]
0x0000a36b      498914cc       mov qword [r12 + rcx*8], rdx
0x0000a36f      4883c101       add rcx, 1
0x0000a373      4809d6         or rsi, rdx
0x0000a376      4883f904       cmp rcx, 4
0x0000a37a      75dc           jne 0xa358
0x0000a37c      4885f6         test rsi, rsi
0x0000a37f      0f842afcffff   je 0x9faf
0x0000a385      a808           test al, 8
0x0000a387      7457           je 0xa3e0
0x0000a389      4183fe01       cmp r14d, 1
0x0000a38d      0f842e030000   je 0xa6c1
0x0000a393      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000a398      83bfb4000000.  cmp dword [rdi + 0xb4], 1
0x0000a39f      0f8e39030000   jle 0xa6de
0x0000a3a5      488b7778       mov rsi, qword [rdi + 0x78]
0x0000a3a9      31c9           xor ecx, ecx
0x0000a3ab      31d2           xor edx, edx
0x0000a3ad      488b84d7b800.  mov rax, qword [rdi + rdx*8 + 0xb8]
0x0000a3b5      482304d6       and rax, qword [rsi + rdx*8]
0x0000a3b9      48f7d0         not rax
0x0000a3bc      492304d4       and rax, qword [r12 + rdx*8]
0x0000a3c0      498904d4       mov qword [r12 + rdx*8], rax
0x0000a3c4      4883c201       add rdx, 1
0x0000a3c8      4809c1         or rcx, rax
0x0000a3cb      4883fa04       cmp rdx, 4
0x0000a3cf      75dc           jne 0xa3ad
0x0000a3d1      4885c9         test rcx, rcx
0x0000a3d4      0f84d5fbffff   je 0x9faf
0x0000a3da      660f1f440000   nop word [rax + rax]
0x0000a3e0      31db           xor ebx, ebx
0x0000a3e2      4885ed         test rbp, rbp
0x0000a3e5      0f8e60010000   jle 0xa54b
0x0000a3eb      4c896c2428     mov qword [rsp + 0x28], r13
0x0000a3f0      4d89fd         mov r13, r15
0x0000a3f3      0f1f440000     nop dword [rax + rax]
0x0000a3f8      4989da         mov r10, rbx
0x0000a3fb      49c1e205       shl r10, 5
0x0000a3ff      4183fe01       cmp r14d, 1
0x0000a403      7523           jne 0xa428
0x0000a405      488b442428     mov rax, qword [rsp + 0x28]
0x0000a40a      0fb610         movzx edx, byte [rax]
0x0000a40d      4889d0         mov rax, rdx
0x0000a410      48c1e803       shr rax, 3
0x0000a414      83e018         and eax, 0x18
0x0000a417      4c01e8         add rax, r13
0x0000a41a      4a8b0410       mov rax, qword [rax + r10]
0x0000a41e      480fa3d0       bt rax, rdx
0x0000a422      0f8313010000   jae 0xa53b
0x0000a428      4b8d7c1500     lea rdi, [r13 + r10]
0x0000a42d      488db424b000.  lea rsi, [rsp + 0xb0]
0x0000a435      31c9           xor ecx, ecx
0x0000a437      31c0           xor eax, eax
0x0000a439      498b14c4       mov rdx, qword [r12 + rax*8]
0x0000a43d      482314c7       and rdx, qword [rdi + rax*8]
0x0000a441      488914c6       mov qword [rsi + rax*8], rdx
0x0000a445      4883c001       add rax, 1
0x0000a449      4809d1         or rcx, rdx
0x0000a44c      4883f804       cmp rax, 4
0x0000a450      75e7           jne 0xa439
0x0000a452      4885c9         test rcx, rcx
0x0000a455      0f84e0000000   je 0xa53b
0x0000a45b      4c8d9c24d000.  lea r11, [rsp + 0xd0]
0x0000a463      4531ff         xor r15d, r15d
0x0000a466      4531c9         xor r9d, r9d
0x0000a469      31c9           xor ecx, ecx
0x0000a46b      498b34cc       mov rsi, qword [r12 + rcx*8]
0x0000a46f      488b04cf       mov rax, qword [rdi + rcx*8]
0x0000a473      4889f2         mov rdx, rsi
0x0000a476      48f7d2         not rdx
0x0000a479      4821c2         and rdx, rax
0x0000a47c      48f7d0         not rax
0x0000a47f      4821f0         and rax, rsi
0x0000a482      498914cb       mov qword [r11 + rcx*8], rdx
0x0000a486      4909d1         or r9, rdx
0x0000a489      498904cc       mov qword [r12 + rcx*8], rax
0x0000a48d      4883c101       add rcx, 1
0x0000a491      4909c7         or r15, rax
0x0000a494      4883f904       cmp rcx, 4
0x0000a498      75d1           jne 0xa46b
0x0000a49a      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000a49f      488d045b       lea rax, [rbx + rbx*2]
0x0000a4a3      4d85c9         test r9, r9
0x0000a4a6      488d14c7       lea rdx, [rdi + rax*8]
0x0000a4aa      7468           je 0xa514
0x0000a4ac      4889e8         mov rax, rbp
0x0000a4af      660f6f8424d0.  movdqa xmm0, xmmword [rsp + 0xd0]
0x0000a4b8      48c1e005       shl rax, 5
0x0000a4bc      4889d6         mov rsi, rdx
0x0000a4bf      4889542438     mov qword [rsp + 0x38], rdx
0x0000a4c4      4c01e8         add rax, r13
0x0000a4c7      0f1100         movups xmmword [rax], xmm0
0x0000a4ca      660f6f8424e0.  movdqa xmm0, xmmword [rsp + 0xe0]
0x0000a4d3      0f114010       movups xmmword [rax + 0x10], xmm0
0x0000a4d7      488d446d00     lea rax, [rbp + rbp*2]
0x0000a4dc      488d3cc7       lea rdi, [rdi + rax*8]
0x0000a4e0      660f6f8424b0.  movdqa xmm0, xmmword [rsp + 0xb0]
0x0000a4e9      430f11441500   movups xmmword [r13 + r10], xmm0
0x0000a4ef      660f6f8424c0.  movdqa xmm0, xmmword [rsp + 0xc0]
0x0000a4f8      430f11441510   movups xmmword [r13 + r10 + 0x10], xmm0
0x0000a4fe      e87de0ffff     call sym.re_node_set_init_copy
0x0000a503      85c0           test eax, eax
0x0000a505      0f85d5000000   jne 0xa5e0
0x0000a50b      488b542438     mov rdx, qword [rsp + 0x38]
0x0000a510      4883c501       add rbp, 1
0x0000a514      488b442408     mov rax, qword [rsp + 8]
0x0000a519      488b742420     mov rsi, qword [rsp + 0x20]
0x0000a51e      4889d7         mov rdi, rdx
0x0000a521      488b4018       mov rax, qword [rax + 0x18]
0x0000a525      488b3430       mov rsi, qword [rax + rsi]
0x0000a529      e8b2b9ffff     call sym.re_node_set_insert
0x0000a52e      84c0           test al, al
0x0000a530      0f84aa000000   je 0xa5e0
0x0000a536      4d85ff         test r15, r15
0x0000a539      740d           je 0xa548
0x0000a53b      4883c301       add rbx, 1
0x0000a53f      4839eb         cmp rbx, rbp
0x0000a542      0f8cb0feffff   jl 0xa3f8
0x0000a548      4d89ef         mov r15, r13
0x0000a54b      4839dd         cmp rbp, rbx
0x0000a54e      0f855bfaffff   jne 0x9faf
0x0000a554      4889e8         mov rax, rbp
0x0000a557      660f6f842490.  movdqa xmm0, xmmword [rsp + 0x90]
0x0000a560      48c1e005       shl rax, 5
0x0000a564      488b5c2420     mov rbx, qword [rsp + 0x20]
0x0000a569      bf08000000     mov edi, 8
0x0000a56e      4c01f8         add rax, r15
0x0000a571      0f1100         movups xmmword [rax], xmm0
0x0000a574      660f6f8424a0.  movdqa xmm0, xmmword [rsp + 0xa0]
0x0000a57d      0f114010       movups xmmword [rax + 0x10], xmm0
0x0000a581      488b442408     mov rax, qword [rsp + 8]
0x0000a586      488b4018       mov rax, qword [rax + 0x18]
0x0000a58a      4c8b2c18       mov r13, qword [rax + rbx]
0x0000a58e      488b5c2418     mov rbx, qword [rsp + 0x18]
0x0000a593      488d446d00     lea rax, [rbp + rbp*2]
0x0000a598      488d1cc3       lea rbx, [rbx + rax*8]
0x0000a59c      48c703010000.  mov qword [rbx], 1
0x0000a5a3      48c743080100.  mov qword [rbx + 8], 1
0x0000a5ab      e81075ffff     call sym.imp.malloc
0x0000a5b0      4885c0         test rax, rax
0x0000a5b3      48894310       mov qword [rbx + 0x10], rax
0x0000a5b7      0f84e0fcffff   je 0xa29d
0x0000a5bd      4c8928         mov qword [rax], r13
0x0000a5c0      4883c501       add rbp, 1
0x0000a5c4      660fefc0       pxor xmm0, xmm0
0x0000a5c8      410f290424     movaps xmmword [r12], xmm0
0x0000a5cd      410f29442410   movaps xmmword [r12 + 0x10], xmm0
0x0000a5d3      e9d7f9ffff     jmp 0x9faf
0x0000a5d8      0f1f84000000.  nop dword [rax + rax]
0x0000a5e0      488b442418     mov rax, qword [rsp + 0x18]
0x0000a5e5      488d5810       lea rbx, [rax + 0x10]
0x0000a5e9      488d446d00     lea rax, [rbp + rbp*2]
0x0000a5ee      488d2cc3       lea rbp, [rbx + rax*8]
0x0000a5f2      660f1f440000   nop word [rax + rax]
0x0000a5f8      488b3b         mov rdi, qword [rbx]
0x0000a5fb      4883c318       add rbx, 0x18
0x0000a5ff      e87c72ffff     call sym.imp.free
0x0000a604      4839dd         cmp rbp, rbx
0x0000a607      75ef           jne 0xa5f8
0x0000a609      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000a60e      e86d72ffff     call sym.imp.free
0x0000a613      e9a8fcffff     jmp 0xa2c0
0x0000a618      0f1f84000000.  nop dword [rax + rax]
0x0000a620      488b742430     mov rsi, qword [rsp + 0x30]
0x0000a625      83beb4000000.  cmp dword [rsi + 0xb4], 1
0x0000a62c      0f8e03010000   jle 0xa735
0x0000a632      488b7678       mov rsi, qword [rsi + 0x78]
0x0000a636      4c8da4249000.  lea r12, [rsp + 0x90]
0x0000a63e      31d2           xor edx, edx
0x0000a640      498b0c14       mov rcx, qword [r12 + rdx]
0x0000a644      480b0c16       or rcx, qword [rsi + rdx]
0x0000a648      49890c14       mov qword [r12 + rdx], rcx
0x0000a64c      4883c208       add rdx, 8
0x0000a650      4883fa20       cmp rdx, 0x20                           ; "@"
0x0000a654      75ea           jne 0xa640
0x0000a656      488b5c2430     mov rbx, qword [rsp + 0x30]
0x0000a65b      488b93d80000.  mov rdx, qword [rbx + 0xd8]
0x0000a662      f6c240         test dl, 0x40                           ; segment.PHDR
0x0000a665      750c           jne 0xa673
0x0000a667      4881a4249000.  and qword [rsp + 0x90], 0xfffffffffffffbff
0x0000a673      81e280000000   and edx, 0x80
0x0000a679      0f8497fcffff   je 0xa316
0x0000a67f      4883a4249000.  and qword [rsp + 0x90], 0xfffffffffffffffe
0x0000a688      e989fcffff     jmp 0xa316
0x0000a68d      0f1f00         nop dword [rax]
0x0000a690      488b94249000.  mov rdx, qword [rsp + 0x90]
0x0000a698      660fefc0       pxor xmm0, xmm0
0x0000a69c      80e604         and dh, 4
0x0000a69f      410f290424     movaps xmmword [r12], xmm0
0x0000a6a4      410f29442410   movaps xmmword [r12 + 0x10], xmm0
0x0000a6aa      0f84fff8ffff   je 0x9faf
0x0000a6b0      48c784249000.  mov qword [rsp + 0x90], 0x400           ; [0x400:8]=0x1200000264
0x0000a6bc      e966fcffff     jmp 0xa327
0x0000a6c1      41f6450a40     test byte [r13 + 0xa], 0x40
0x0000a6c6      0f85f8feffff   jne 0xa5c4
0x0000a6cc      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000a6d1      83bfb4000000.  cmp dword [rdi + 0xb4], 1
0x0000a6d8      0f8fc7fcffff   jg 0xa3a5
0x0000a6de      488b742430     mov rsi, qword [rsp + 0x30]
0x0000a6e3      31c9           xor ecx, ecx
0x0000a6e5      31d2           xor edx, edx
0x0000a6e7      488b84d6b800.  mov rax, qword [rsi + rdx*8 + 0xb8]
0x0000a6ef      48f7d0         not rax
0x0000a6f2      492304d4       and rax, qword [r12 + rdx*8]
0x0000a6f6      498904d4       mov qword [r12 + rdx*8], rax
0x0000a6fa      4883c201       add rdx, 1
0x0000a6fe      4809c1         or rcx, rax
0x0000a701      4883fa04       cmp rdx, 4
0x0000a705      75e0           jne 0xa6e7
0x0000a707      4885c9         test rcx, rcx
0x0000a70a      0f85d0fcffff   jne 0xa3e0
0x0000a710      e99af8ffff     jmp 0x9faf
0x0000a715      41f6450a40     test byte [r13 + 0xa], 0x40
0x0000a71a      0f84a4feffff   je 0xa5c4
0x0000a720      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000a725      4183b8b40000.  cmp dword [r8 + 0xb4], 1
0x0000a72d      0f8f1dfcffff   jg 0xa350
0x0000a733      eb6d           jmp 0xa7a2
0x0000a735      660f76c0       pcmpeqd xmm0, xmm0
0x0000a739      4c8da4249000.  lea r12, [rsp + 0x90]
0x0000a741      0f2984249000.  movaps xmmword [rsp + 0x90], xmm0
0x0000a749      0f298424a000.  movaps xmmword [rsp + 0xa0], xmm0
0x0000a751      e900ffffff     jmp 0xa656
0x0000a756      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a760      498b7500       mov rsi, qword [r13]
0x0000a764      4c8da4249000.  lea r12, [rsp + 0x90]
0x0000a76c      31d2           xor edx, edx
0x0000a76e      498b0c14       mov rcx, qword [r12 + rdx]
0x0000a772      480b0c16       or rcx, qword [rsi + rdx]
0x0000a776      49890c14       mov qword [r12 + rdx], rcx
0x0000a77a      4883c208       add rdx, 8
0x0000a77e      4883fa20       cmp rdx, 0x20                           ; "@"
0x0000a782      75ea           jne 0xa76e
0x0000a784      e98dfbffff     jmp 0xa316
0x0000a789      660f76c0       pcmpeqd xmm0, xmm0
0x0000a78d      4c8da4249000.  lea r12, [rsp + 0x90]
0x0000a795      0f2984249000.  movaps xmmword [rsp + 0x90], xmm0
0x0000a79d      e9b4feffff     jmp 0xa656
0x0000a7a2      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000a7a7      31f6           xor esi, esi
0x0000a7a9      31d2           xor edx, edx
0x0000a7ab      498b0cd4       mov rcx, qword [r12 + rdx*8]
0x0000a7af      48238cd7b800.  and rcx, qword [rdi + rdx*8 + 0xb8]
0x0000a7b7      49890cd4       mov qword [r12 + rdx*8], rcx
0x0000a7bb      4883c201       add rdx, 1
0x0000a7bf      4809ce         or rsi, rcx
0x0000a7c2      4883fa04       cmp rdx, 4
0x0000a7c6      75e3           jne 0xa7ab
0x0000a7c8      4885f6         test rsi, rsi
0x0000a7cb      0f85b4fbffff   jne 0xa385
0x0000a7d1      e9d9f7ffff     jmp 0x9faf
0x0000a7d6      8b54246c       mov edx, dword [rsp + 0x6c]
0x0000a7da      85d2           test edx, edx
0x0000a7dc      0f8485000000   je 0xa867
0x0000a7e2      660f1f440000   nop word [rax + rax]
0x0000a7e8      488b6c2420     mov rbp, qword [rsp + 0x20]
0x0000a7ed      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000a7f2      e88970ffff     call sym.imp.free
0x0000a7f7      4c8ba4248000.  mov r12, qword [rsp + 0x80]
0x0000a7ff      4c89e7         mov rdi, r12
0x0000a802      e87970ffff     call sym.imp.free
0x0000a807      488b442418     mov rax, qword [rsp + 0x18]
0x0000a80c      488d5810       lea rbx, [rax + 0x10]
0x0000a810      488d446d00     lea rax, [rbp + rbp*2]
0x0000a815      488d2cc3       lea rbp, [rbx + rax*8]
0x0000a819      0f1f80000000.  nop dword [rax]
0x0000a820      488b3b         mov rdi, qword [rbx]
0x0000a823      4883c318       add rbx, 0x18
0x0000a827      e85470ffff     call sym.imp.free
0x0000a82c      4839dd         cmp rbp, rbx
0x0000a82f      75ef           jne 0xa820
0x0000a831      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000a836      e84570ffff     call sym.imp.free
0x0000a83b      e980faffff     jmp 0xa2c0
0x0000a840      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000a845      b901000000     mov ecx, 1
0x0000a84a      4c89f2         mov rdx, r14
0x0000a84d      4889ee         mov rsi, rbp
0x0000a850      e81bdfffff     call sym.re_acquire_state_context
0x0000a855      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000a85a      4885c0         test rax, rax
0x0000a85d      488904df       mov qword [rdi + rbx*8], rax
0x0000a861      0f846fffffff   je 0xa7d6
0x0000a867      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000a86c      483b04df       cmp rax, qword [rdi + rbx*8]
0x0000a870      7419           je 0xa88b
0x0000a872      0fb67c244f     movzx edi, byte [rsp + 0x4f]
0x0000a877      83bdb4000000.  cmp dword [rbp + 0xb4], 2
0x0000a87e      b801000000     mov eax, 1
0x0000a883      0f4df8         cmovge edi, eax
0x0000a886      40887c244f     mov byte [rsp + 0x4f], dil
0x0000a88b      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000a890      4889ee         mov rsi, rbp
0x0000a893      b902000000     mov ecx, 2
0x0000a898      4c89f2         mov rdx, r14
0x0000a89b      e8d0deffff     call sym.re_acquire_state_context
0x0000a8a0      488b742438     mov rsi, qword [rsp + 0x38]
0x0000a8a5      4885c0         test rax, rax
0x0000a8a8      488904de       mov qword [rsi + rbx*8], rax
0x0000a8ac      0f858ff8ffff   jne 0xa141
0x0000a8b2      8b44246c       mov eax, dword [rsp + 0x6c]
0x0000a8b6      85c0           test eax, eax
0x0000a8b8      0f8483f8ffff   je 0xa141
0x0000a8be      e925ffffff     jmp 0xa7e8
0x0000a8c3      0f1f440000     nop dword [rax + rax]
0x0000a8c8      8b4c246c       mov ecx, dword [rsp + 0x6c]
0x0000a8cc      85c9           test ecx, ecx
0x0000a8ce      0f8448f8ffff   je 0xa11c
0x0000a8d4      e90fffffff     jmp 0xa7e8
0x0000a8d9      be00020000     mov esi, 0x200
0x0000a8de      bf08000000     mov edi, 8
0x0000a8e3      e88871ffff     call sym.imp.calloc
0x0000a8e8      4989c3         mov r11, rax
0x0000a8eb      488b442408     mov rax, qword [rsp + 8]
0x0000a8f0      4d85db         test r11, r11
0x0000a8f3      4c895860       mov qword [rax + 0x60], r11
0x0000a8f7      0f84f0feffff   je 0xa7ed
0x0000a8fd      4c8b6c2440     mov r13, qword [rsp + 0x40]
0x0000a902      4c8b542410     mov r10, qword [rsp + 0x10]
0x0000a907      4d89dc         mov r12, r11
0x0000a90a      4c8b742430     mov r14, qword [rsp + 0x30]
0x0000a90f      488b542420     mov rdx, qword [rsp + 0x20]
0x0000a914      31db           xor ebx, ebx
0x0000a916      4983c520       add r13, 0x20                           ; "@"
0x0000a91a      488b041a       mov rax, qword [rdx + rbx]
0x0000a91e      4885c0         test rax, rax
0x0000a921      741c           je 0xa93f
0x0000a923      4c89e6         mov rsi, r12
0x0000a926      b901000000     mov ecx, 1
0x0000a92b      a801           test al, 1
0x0000a92d      0f85a9000000   jne 0xa9dc
0x0000a933      4801c9         add rcx, rcx
0x0000a936      4883c608       add rsi, 8
0x0000a93a      48d1e8         shr rax, 1
0x0000a93d      75ec           jne 0xa92b
0x0000a93f      4883c308       add rbx, 8
0x0000a943      4981c4000200.  add r12, 0x200
0x0000a94a      4883fb20       cmp rbx, 0x20                           ; "@"
0x0000a94e      75ca           jne 0xa91a
0x0000a950      e9b9f8ffff     jmp 0xa20e
0x0000a955      0f1f00         nop dword [rax]
0x0000a958      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000a95d      4a858c0f0018.  test qword [rdi + r9 + 0x1800], rcx
0x0000a965      7570           jne 0xa9d7
0x0000a967      4a8d3c0b       lea rdi, [rbx + r9]
0x0000a96b      4531c0         xor r8d, r8d
0x0000a96e      6690           nop
0x0000a970      4c8b17         mov r10, qword [rdi]
0x0000a973      4983c001       add r8, 1
0x0000a977      4883c720       add rdi, 0x20                           ; "@"
0x0000a97b      4921ca         and r10, rcx
0x0000a97e      4d85d2         test r10, r10
0x0000a981      74ed           je 0xa970
0x0000a983      49c1e003       shl r8, 3
0x0000a987      4b858c0fb800.  test qword [r15 + r9 + 0xb8], rcx
0x0000a98f      740d           je 0xa99e
0x0000a991      4b8b7c0500     mov rdi, qword [r13 + r8]
0x0000a996      48893e         mov qword [rsi], rdi
0x0000a999      e95af8ffff     jmp 0xa1f8
0x0000a99e      4b8b3c04       mov rdi, qword [r12 + r8]
0x0000a9a2      48893e         mov qword [rsi], rdi
0x0000a9a5      e94ef8ffff     jmp 0xa1f8
0x0000a9aa      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000a9af      e8cc6effff     call sym.imp.free
0x0000a9b4      be00010000     mov esi, 0x100
0x0000a9b9      bf08000000     mov edi, 8
0x0000a9be      e8ad70ffff     call sym.imp.calloc
0x0000a9c3      488b5c2408     mov rbx, qword [rsp + 8]
0x0000a9c8      4885c0         test rax, rax
0x0000a9cb      48894358       mov qword [rbx + 0x58], rax
0x0000a9cf      0f95c0         setne al
0x0000a9d2      e9ebf8ffff     jmp 0xa2c2
0x0000a9d7      4531c0         xor r8d, r8d
0x0000a9da      ebab           jmp 0xa987
0x0000a9dc      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000a9e1      48858c1f0018.  test qword [rdi + rbx + 0x1800], rcx
0x0000a9e9      7535           jne 0xaa20
0x0000a9eb      4d8d4c1d00     lea r9, [r13 + rbx]
0x0000a9f0      4531c0         xor r8d, r8d
0x0000a9f3      4d8b39         mov r15, qword [r9]
0x0000a9f6      4983c001       add r8, 1
0x0000a9fa      4983c120       add r9, 0x20                            ; "@"
0x0000a9fe      4c89c7         mov rdi, r8
0x0000aa01      4921cf         and r15, rcx
0x0000aa04      4d85ff         test r15, r15
0x0000aa07      74ea           je 0xa9f3
0x0000aa09      4d8b04fa       mov r8, qword [r10 + rdi*8]
0x0000aa0d      4c8906         mov qword [rsi], r8
0x0000aa10      498b3cfe       mov rdi, qword [r14 + rdi*8]
0x0000aa14      4889be000800.  mov qword [rsi + 0x800], rdi
0x0000aa1b      e913ffffff     jmp 0xa933
0x0000aa20      31ff           xor edi, edi
0x0000aa22      ebe5           jmp 0xaa09
0x0000aa24      e8676fffff     call sym.imp.__stack_chk_fail
0x0000aa29      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000aa2e      e84d6effff     call sym.imp.free
0x0000aa33      4885ed         test rbp, rbp
0x0000aa36      0f8584f8ffff   jne 0xa2c0
0x0000aa3c      e973ffffff     jmp 0xa9b4
0x0000aa41      0f1f440000     nop dword [rax + rax]
0x0000aa46      662e0f1f8400.  nop word cs:[rax + rax]
;-- calc_first:
0x0000aa50      807e3010       cmp byte [rsi + 0x30], 0x10
0x0000aa54      7462           je 0xaab8
0x0000aa56      55             push rbp
0x0000aa57      53             push rbx
0x0000aa58      4889f3         mov rbx, rsi
0x0000aa5b      4889fd         mov rbp, rdi
0x0000aa5e      4883ec08       sub rsp, 8
0x0000aa62      48897318       mov qword [rbx + 0x18], rsi
0x0000aa66      488b5330       mov rdx, qword [rbx + 0x30]
0x0000aa6a      488b7628       mov rsi, qword [rsi + 0x28]
0x0000aa6e      e84dc1ffff     call sym.re_dfa_add_node
0x0000aa73      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000aa77      4889c2         mov rdx, rax
0x0000aa7a      48894338       mov qword [rbx + 0x38], rax
0x0000aa7e      7450           je 0xaad0
0x0000aa80      31c0           xor eax, eax
0x0000aa82      807b300c       cmp byte [rbx + 0x30], 0xc
0x0000aa86      7524           jne 0xaaac
0x0000aa88      8b4b28         mov ecx, dword [rbx + 0x28]
0x0000aa8b      48c1e204       shl rdx, 4
0x0000aa8f      48035500       add rdx, qword [rbp]
0x0000aa93      81e1ff030000   and ecx, 0x3ff
0x0000aa99      c1e108         shl ecx, 8
0x0000aa9c      89ce           mov esi, ecx
0x0000aa9e      8b4a08         mov ecx, dword [rdx + 8]
0x0000aaa1      81e1ff00fcff   and ecx, 0xfffc00ff
0x0000aaa7      09f1           or ecx, esi
0x0000aaa9      894a08         mov dword [rdx + 8], ecx
0x0000aaac      4883c408       add rsp, 8
0x0000aab0      5b             pop rbx
0x0000aab1      5d             pop rbp
0x0000aab2      c3             ret
0x0000aab3      0f1f440000     nop dword [rax + rax]
0x0000aab8      488b4608       mov rax, qword [rsi + 8]
0x0000aabc      488b5018       mov rdx, qword [rax + 0x18]
0x0000aac0      488b4038       mov rax, qword [rax + 0x38]
0x0000aac4      48895618       mov qword [rsi + 0x18], rdx
0x0000aac8      48894638       mov qword [rsi + 0x38], rax
0x0000aacc      31c0           xor eax, eax
0x0000aace      c3             ret
0x0000aacf      90             nop
0x0000aad0      b80c000000     mov eax, 0xc
0x0000aad5      ebd5           jmp 0xaaac
0x0000aad7      660f1f840000.  nop word [rax + rax]
;-- free_fail_stack_return.part.24:
0x0000aae0      4154           push r12
0x0000aae2      55             push rbp
0x0000aae3      4889fd         mov rbp, rdi
0x0000aae6      53             push rbx
0x0000aae7      48833f00       cmp qword [rdi], 0
0x0000aaeb      7e35           jle 0xab22
0x0000aaed      31db           xor ebx, ebx
0x0000aaef      4531e4         xor r12d, r12d
0x0000aaf2      660f1f440000   nop word [rax + rax]
0x0000aaf8      488b4510       mov rax, qword [rbp + 0x10]
0x0000aafc      4983c401       add r12, 1
0x0000ab00      488b7c1828     mov rdi, qword [rax + rbx + 0x28]
0x0000ab05      e8766dffff     call sym.imp.free
0x0000ab0a      488b4510       mov rax, qword [rbp + 0x10]
0x0000ab0e      488b7c1810     mov rdi, qword [rax + rbx + 0x10]
0x0000ab13      4883c330       add rbx, 0x30
0x0000ab17      e8646dffff     call sym.imp.free
0x0000ab1c      4c3b6500       cmp r12, qword [rbp]
0x0000ab20      7cd6           jl 0xaaf8
0x0000ab22      5b             pop rbx
0x0000ab23      488b7d10       mov rdi, qword [rbp + 0x10]
0x0000ab27      5d             pop rbp
0x0000ab28      415c           pop r12
0x0000ab2a      e9516dffff     jmp sym.imp.free
0x0000ab2f      90             nop
;-- pop_fail_stack.isra.25:
0x0000ab30      4154           push r12
0x0000ab32      55             push rbp
0x0000ab33      53             push rbx
0x0000ab34      488b07         mov rax, qword [rdi]
0x0000ab37      4883e801       sub rax, 1
0x0000ab3b      4885c0         test rax, rax
0x0000ab3e      488907         mov qword [rdi], rax
0x0000ab41      7862           js 0xaba5
0x0000ab43      488d1c40       lea rbx, [rax + rax*2]
0x0000ab47      488b06         mov rax, qword [rsi]
0x0000ab4a      4989f4         mov r12, rsi
0x0000ab4d      48c1e104       shl rcx, 4
0x0000ab51      4c89cd         mov rbp, r9
0x0000ab54      4c89c7         mov rdi, r8
0x0000ab57      48c1e304       shl rbx, 4
0x0000ab5b      4801d8         add rax, rbx
0x0000ab5e      488b30         mov rsi, qword [rax]
0x0000ab61      488932         mov qword [rdx], rsi
0x0000ab64      488b7010       mov rsi, qword [rax + 0x10]
0x0000ab68      4889ca         mov rdx, rcx
0x0000ab6b      e8206fffff     call sym.imp.memcpy
0x0000ab70      488b7d10       mov rdi, qword [rbp + 0x10]
0x0000ab74      e8076dffff     call sym.imp.free
0x0000ab79      498b0424       mov rax, qword [r12]
0x0000ab7d      488b7c1810     mov rdi, qword [rax + rbx + 0x10]
0x0000ab82      e8f96cffff     call sym.imp.free
0x0000ab87      49031c24       add rbx, qword [r12]
0x0000ab8b      f30f6f4318     movdqu xmm0, xmmword [rbx + 0x18]
0x0000ab90      0f294500       movaps xmmword [rbp], xmm0
0x0000ab94      488b4328       mov rax, qword [rbx + 0x28]
0x0000ab98      48894510       mov qword [rbp + 0x10], rax
0x0000ab9c      488b4308       mov rax, qword [rbx + 8]
0x0000aba0      5b             pop rbx
0x0000aba1      5d             pop rbp
0x0000aba2      415c           pop r12
0x0000aba4      c3             ret
0x0000aba5      488d0d34a900.  lea rcx, obj.__PRETTY_FUNCTION__.8040   ; 0x154e0 ; "pop_fail_stack"
0x0000abac      488d356da300.  lea rsi, str..._coreutils_8.31_lib_regexec.c ; 0x14f20 ; "../coreutils-8.31/lib/regexec.c"
0x0000abb3      488d3dcea300.  lea rdi, str.num____0                   ; 0x14f88 ; "num >= 0"
0x0000abba      ba55050000     mov edx, 0x555
0x0000abbf      e83c6effff     call sym.imp.__assert_fail
0x0000abc4      6690           nop
0x0000abc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- build_equiv_class.isra.27:
;-- build_collating_symbol.isra.28:
0x0000abd0      55             push rbp
0x0000abd1      53             push rbx
0x0000abd2      4889fd         mov rbp, rdi
0x0000abd5      4889f7         mov rdi, rsi
0x0000abd8      4889f3         mov rbx, rsi
0x0000abdb      4883ec08       sub rsp, 8
0x0000abdf      e89c6dffff     call sym.imp.strlen
0x0000abe4      4883f801       cmp rax, 1
0x0000abe8      7526           jne 0xac10
0x0000abea      0fb60b         movzx ecx, byte [rbx]
0x0000abed      4889ca         mov rdx, rcx
0x0000abf0      83e13f         and ecx, 0x3f
0x0000abf3      48c1ea03       shr rdx, 3
0x0000abf7      48d3e0         shl rax, cl
0x0000abfa      83e218         and edx, 0x18
0x0000abfd      4809441500     or qword [rbp + rdx], rax
0x0000ac02      4883c408       add rsp, 8
0x0000ac06      31c0           xor eax, eax
0x0000ac08      5b             pop rbx
0x0000ac09      5d             pop rbp
0x0000ac0a      c3             ret
0x0000ac0b      0f1f440000     nop dword [rax + rax]
0x0000ac10      4883c408       add rsp, 8
0x0000ac14      b803000000     mov eax, 3
0x0000ac19      5b             pop rbx
0x0000ac1a      5d             pop rbp
0x0000ac1b      c3             ret
0x0000ac1c      0f1f4000       nop dword [rax]
;-- build_charclass.isra.29:
0x0000ac20      4156           push r14
0x0000ac22      4155           push r13
0x0000ac24      4989cd         mov r13, rcx
0x0000ac27      4154           push r12
0x0000ac29      55             push rbp
0x0000ac2a      4d89cc         mov r12, r9
0x0000ac2d      53             push rbx
0x0000ac2e      4889fd         mov rbp, rdi
0x0000ac31      4889f3         mov rbx, rsi
0x0000ac34      4883ec10       sub rsp, 0x10
0x0000ac38      48f744244000.  test qword [rsp + 0x40], 0x400000
0x0000ac41      7425           je 0xac68
0x0000ac43      488d3d4da300.  lea rdi, str.upper                      ; 0x14f97 ; "upper"
0x0000ac4a      b906000000     mov ecx, 6
0x0000ac4f      4c89ce         mov rsi, r9
0x0000ac52      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000ac54      0f97c0         seta al
0x0000ac57      1c00           sbb al, 0
0x0000ac59      84c0           test al, al
0x0000ac5b      0f85f5000000   jne 0xad56
0x0000ac61      4c8d2529a300.  lea r12, str.alpha                      ; 0x14f91 ; "alpha"
0x0000ac68      498b4d00       mov rcx, qword [r13]
0x0000ac6c      493908         cmp qword [r8], rcx
0x0000ac6f      488b02         mov rax, qword [rdx]
0x0000ac72      0f8411010000   je 0xad89
0x0000ac78      488d5101       lea rdx, [rcx + 1]
0x0000ac7c      4c89e7         mov rdi, r12
0x0000ac7f      49895500       mov qword [r13], rdx
0x0000ac83      4c8d2cc8       lea r13, [rax + rcx*8]
0x0000ac87      e8c46dffff     call sym.imp.wctype
0x0000ac8c      488d3d10a300.  lea rdi, str.alnum                      ; 0x14fa3 ; "alnum"
0x0000ac93      49894500       mov qword [r13], rax
0x0000ac97      b906000000     mov ecx, 6
0x0000ac9c      4c89e6         mov rsi, r12
0x0000ac9f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000aca1      0f97c0         seta al
0x0000aca4      1c00           sbb al, 0
0x0000aca6      84c0           test al, al
0x0000aca8      746e           je 0xad18
0x0000acaa      488d3df8a200.  lea rdi, str.cntrl                      ; 0x14fa9 ; "cntrl"
0x0000acb1      b906000000     mov ecx, 6
0x0000acb6      4c89e6         mov rsi, r12
0x0000acb9      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000acbb      0f97c0         seta al
0x0000acbe      1c00           sbb al, 0
0x0000acc0      84c0           test al, al
0x0000acc2      0f8500010000   jne 0xadc8
0x0000acc8      e8a36fffff     call sym.imp.__ctype_b_loc
0x0000accd      31c9           xor ecx, ecx
0x0000accf      4885ed         test rbp, rbp
0x0000acd2      488b10         mov rdx, qword [rax]
0x0000acd5      bf01000000     mov edi, 1
0x0000acda      0f85ba020000   jne 0xaf9a
0x0000ace0      f6044a02       test byte [rdx + rcx*2], 2
0x0000ace4      7411           je 0xacf7
0x0000ace6      4889c8         mov rax, rcx
0x0000ace9      4889fe         mov rsi, rdi
0x0000acec      48c1f806       sar rax, 6
0x0000acf0      48d3e6         shl rsi, cl
0x0000acf3      480934c3       or qword [rbx + rax*8], rsi
0x0000acf7      4883c101       add rcx, 1
0x0000acfb      4881f9000100.  cmp rcx, 0x100
0x0000ad02      75dc           jne 0xace0
0x0000ad04      31c0           xor eax, eax
0x0000ad06      4883c410       add rsp, 0x10
0x0000ad0a      5b             pop rbx
0x0000ad0b      5d             pop rbp
0x0000ad0c      415c           pop r12
0x0000ad0e      415d           pop r13
0x0000ad10      415e           pop r14
0x0000ad12      c3             ret
0x0000ad13      0f1f440000     nop dword [rax + rax]
0x0000ad18      e8536fffff     call sym.imp.__ctype_b_loc
0x0000ad1d      31c9           xor ecx, ecx
0x0000ad1f      4885ed         test rbp, rbp
0x0000ad22      488b10         mov rdx, qword [rax]
0x0000ad25      bf01000000     mov edi, 1
0x0000ad2a      0f85ea010000   jne 0xaf1a
0x0000ad30      f6044a08       test byte [rdx + rcx*2], 8
0x0000ad34      7411           je 0xad47
0x0000ad36      4889c8         mov rax, rcx
0x0000ad39      4889fe         mov rsi, rdi
0x0000ad3c      48c1f806       sar rax, 6
0x0000ad40      48d3e6         shl rsi, cl
0x0000ad43      480934c3       or qword [rbx + rax*8], rsi
0x0000ad47      4883c101       add rcx, 1
0x0000ad4b      4881f9000100.  cmp rcx, 0x100
0x0000ad52      75dc           jne 0xad30
0x0000ad54      ebae           jmp 0xad04
0x0000ad56      488d3d40a200.  lea rdi, str.lower                      ; 0x14f9d ; "lower"
0x0000ad5d      b906000000     mov ecx, 6
0x0000ad62      4c89ce         mov rsi, r9
0x0000ad65      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000ad67      498b4d00       mov rcx, qword [r13]
0x0000ad6b      0f97c0         seta al
0x0000ad6e      1c00           sbb al, 0
0x0000ad70      84c0           test al, al
0x0000ad72      488d0518a200.  lea rax, str.alpha                      ; 0x14f91 ; "alpha"
0x0000ad79      4c0f44e0       cmove r12, rax
0x0000ad7d      493908         cmp qword [r8], rcx
0x0000ad80      488b02         mov rax, qword [rdx]
0x0000ad83      0f85effeffff   jne 0xac78
0x0000ad89      4c8d740901     lea r14, [rcx + rcx + 1]
0x0000ad8e      4889c7         mov rdi, rax
0x0000ad91      4c89442408     mov qword [rsp + 8], r8
0x0000ad96      48891424       mov qword [rsp], rdx
0x0000ad9a      4a8d34f50000.  lea rsi, [r14*8]
0x0000ada2      e8896dffff     call sym.imp.realloc
0x0000ada7      4885c0         test rax, rax
0x0000adaa      0f8418030000   je 0xb0c8
0x0000adb0      488b1424       mov rdx, qword [rsp]
0x0000adb4      4c8b442408     mov r8, qword [rsp + 8]
0x0000adb9      488902         mov qword [rdx], rax
0x0000adbc      4d8930         mov qword [r8], r14
0x0000adbf      498b4d00       mov rcx, qword [r13]
0x0000adc3      e9b0feffff     jmp 0xac78
0x0000adc8      488d3dcea100.  lea rdi, str.lower                      ; 0x14f9d ; "lower"
0x0000adcf      b906000000     mov ecx, 6
0x0000add4      4c89e6         mov rsi, r12
0x0000add7      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000add9      0f97c0         seta al
0x0000addc      1c00           sbb al, 0
0x0000adde      84c0           test al, al
0x0000ade0      7468           je 0xae4a
0x0000ade2      488d3dc6a100.  lea rdi, str.space                      ; 0x14faf ; "space"
0x0000ade9      b906000000     mov ecx, 6
0x0000adee      4c89e6         mov rsi, r12
0x0000adf1      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000adf3      0f97c0         seta al
0x0000adf6      1c00           sbb al, 0
0x0000adf8      84c0           test al, al
0x0000adfa      0f8592000000   jne 0xae92
0x0000ae00      e86b6effff     call sym.imp.__ctype_b_loc
0x0000ae05      31c9           xor ecx, ecx
0x0000ae07      4885ed         test rbp, rbp
0x0000ae0a      488b10         mov rdx, qword [rax]
0x0000ae0d      bf01000000     mov edi, 1
0x0000ae12      0f8556030000   jne 0xb16e
0x0000ae18      0f1f84000000.  nop dword [rax + rax]
0x0000ae20      f6444a0120     test byte [rdx + rcx*2 + 1], 0x20
0x0000ae25      7411           je 0xae38
0x0000ae27      4889c8         mov rax, rcx
0x0000ae2a      4889fe         mov rsi, rdi
0x0000ae2d      48c1f806       sar rax, 6
0x0000ae31      48d3e6         shl rsi, cl
0x0000ae34      480934c3       or qword [rbx + rax*8], rsi
0x0000ae38      4883c101       add rcx, 1
0x0000ae3c      4881f9000100.  cmp rcx, 0x100
0x0000ae43      75db           jne 0xae20
0x0000ae45      e9bafeffff     jmp 0xad04
0x0000ae4a      e8216effff     call sym.imp.__ctype_b_loc
0x0000ae4f      31c9           xor ecx, ecx
0x0000ae51      4885ed         test rbp, rbp
0x0000ae54      488b10         mov rdx, qword [rax]
0x0000ae57      bf01000000     mov edi, 1
0x0000ae5c      0f85d0010000   jne 0xb032
0x0000ae62      660f1f440000   nop word [rax + rax]
0x0000ae68      f6444a0102     test byte [rdx + rcx*2 + 1], 2
0x0000ae6d      7411           je 0xae80
0x0000ae6f      4889c8         mov rax, rcx
0x0000ae72      4889fe         mov rsi, rdi
0x0000ae75      48c1f806       sar rax, 6
0x0000ae79      48d3e6         shl rsi, cl
0x0000ae7c      480934c3       or qword [rbx + rax*8], rsi
0x0000ae80      4883c101       add rcx, 1
0x0000ae84      4881f9000100.  cmp rcx, 0x100
0x0000ae8b      75db           jne 0xae68
0x0000ae8d      e972feffff     jmp 0xad04
0x0000ae92      488d3df8a000.  lea rdi, str.alpha                      ; 0x14f91 ; "alpha"
0x0000ae99      b906000000     mov ecx, 6
0x0000ae9e      4c89e6         mov rsi, r12
0x0000aea1      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000aea3      0f97c0         seta al
0x0000aea6      1c00           sbb al, 0
0x0000aea8      84c0           test al, al
0x0000aeaa      0f84a3000000   je 0xaf53
0x0000aeb0      488d3d17a100.  lea rdi, [0x00014fce]                   ; "digit"
0x0000aeb7      b906000000     mov ecx, 6
0x0000aebc      4c89e6         mov rsi, r12
0x0000aebf      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000aec1      0f97c0         seta al
0x0000aec4      1c00           sbb al, 0
0x0000aec6      84c0           test al, al
0x0000aec8      0f8505010000   jne 0xafd3
0x0000aece      e89d6dffff     call sym.imp.__ctype_b_loc
0x0000aed3      31c9           xor ecx, ecx
0x0000aed5      4885ed         test rbp, rbp
0x0000aed8      488b10         mov rdx, qword [rax]
0x0000aedb      bf01000000     mov edi, 1
0x0000aee0      0f85a4040000   jne 0xb38a
0x0000aee6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000aef0      f6444a0108     test byte [rdx + rcx*2 + 1], 8
0x0000aef5      7411           je 0xaf08
0x0000aef7      4889c8         mov rax, rcx
0x0000aefa      4889fe         mov rsi, rdi
0x0000aefd      48c1f806       sar rax, 6
0x0000af01      48d3e6         shl rsi, cl
0x0000af04      480934c3       or qword [rbx + rax*8], rsi
0x0000af08      4883c101       add rcx, 1
0x0000af0c      4881f9000100.  cmp rcx, 0x100
0x0000af13      75db           jne 0xaef0
0x0000af15      e9eafdffff     jmp 0xad04
0x0000af1a      31c0           xor eax, eax
0x0000af1c      0f1f4000       nop dword [rax]
0x0000af20      f6044208       test byte [rdx + rax*2], 8
0x0000af24      741c           je 0xaf42
0x0000af26      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000af2b      4989fa         mov r10, rdi
0x0000af2e      4889ce         mov rsi, rcx
0x0000af31      83e13f         and ecx, 0x3f
0x0000af34      48c1ee03       shr rsi, 3
0x0000af38      49d3e2         shl r10, cl
0x0000af3b      83e618         and esi, 0x18
0x0000af3e      4c091433       or qword [rbx + rsi], r10
0x0000af42      4883c001       add rax, 1
0x0000af46      483d00010000   cmp rax, 0x100
0x0000af4c      75d2           jne 0xaf20
0x0000af4e      e9b1fdffff     jmp 0xad04
0x0000af53      e8186dffff     call sym.imp.__ctype_b_loc
0x0000af58      31c9           xor ecx, ecx
0x0000af5a      4885ed         test rbp, rbp
0x0000af5d      488b10         mov rdx, qword [rax]
0x0000af60      bf01000000     mov edi, 1
0x0000af65      0f85cd010000   jne 0xb138
0x0000af6b      0f1f440000     nop dword [rax + rax]
0x0000af70      f6444a0104     test byte [rdx + rcx*2 + 1], 4
0x0000af75      7411           je 0xaf88
0x0000af77      4889c8         mov rax, rcx
0x0000af7a      4889fe         mov rsi, rdi
0x0000af7d      48c1f806       sar rax, 6
0x0000af81      48d3e6         shl rsi, cl
0x0000af84      480934c3       or qword [rbx + rax*8], rsi
0x0000af88      4883c101       add rcx, 1
0x0000af8c      4881f9000100.  cmp rcx, 0x100
0x0000af93      75db           jne 0xaf70
0x0000af95      e96afdffff     jmp 0xad04
0x0000af9a      31c0           xor eax, eax
0x0000af9c      0f1f4000       nop dword [rax]
0x0000afa0      f6044202       test byte [rdx + rax*2], 2
0x0000afa4      741c           je 0xafc2
0x0000afa6      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000afab      4989fb         mov r11, rdi
0x0000afae      4889ce         mov rsi, rcx
0x0000afb1      83e13f         and ecx, 0x3f
0x0000afb4      48c1ee03       shr rsi, 3
0x0000afb8      49d3e3         shl r11, cl
0x0000afbb      83e618         and esi, 0x18
0x0000afbe      4c091c33       or qword [rbx + rsi], r11
0x0000afc2      4883c001       add rax, 1
0x0000afc6      483d00010000   cmp rax, 0x100
0x0000afcc      75d2           jne 0xafa0
0x0000afce      e931fdffff     jmp 0xad04
0x0000afd3      488d3ddb9f00.  lea rdi, str.print                      ; 0x14fb5 ; "print"
0x0000afda      b906000000     mov ecx, 6
0x0000afdf      4c89e6         mov rsi, r12
0x0000afe2      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000afe4      0f97c0         seta al
0x0000afe7      1c00           sbb al, 0
0x0000afe9      84c0           test al, al
0x0000afeb      757f           jne 0xb06c
0x0000afed      e87e6cffff     call sym.imp.__ctype_b_loc
0x0000aff2      31c9           xor ecx, ecx
0x0000aff4      4885ed         test rbp, rbp
0x0000aff7      488b10         mov rdx, qword [rax]
0x0000affa      bf01000000     mov edi, 1
0x0000afff      0f85f2030000   jne 0xb3f7
0x0000b005      0f1f00         nop dword [rax]
0x0000b008      f6444a0140     test byte [rdx + rcx*2 + 1], 0x40
0x0000b00d      7411           je 0xb020
0x0000b00f      4889c8         mov rax, rcx
0x0000b012      4889fe         mov rsi, rdi
0x0000b015      48c1f806       sar rax, 6
0x0000b019      48d3e6         shl rsi, cl
0x0000b01c      480934c3       or qword [rbx + rax*8], rsi
0x0000b020      4883c101       add rcx, 1
0x0000b024      4881f9000100.  cmp rcx, 0x100
0x0000b02b      75db           jne 0xb008
0x0000b02d      e9d2fcffff     jmp 0xad04
0x0000b032      31c0           xor eax, eax
0x0000b034      0f1f4000       nop dword [rax]
0x0000b038      f644420102     test byte [rdx + rax*2 + 1], 2
0x0000b03d      741c           je 0xb05b
0x0000b03f      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000b044      4989fe         mov r14, rdi
0x0000b047      4889ce         mov rsi, rcx
0x0000b04a      83e13f         and ecx, 0x3f
0x0000b04d      48c1ee03       shr rsi, 3
0x0000b051      49d3e6         shl r14, cl
0x0000b054      83e618         and esi, 0x18
0x0000b057      4c093433       or qword [rbx + rsi], r14
0x0000b05b      4883c001       add rax, 1
0x0000b05f      483d00010000   cmp rax, 0x100
0x0000b065      75d1           jne 0xb038
0x0000b067      e998fcffff     jmp 0xad04
0x0000b06c      488d3d249f00.  lea rdi, str.upper                      ; 0x14f97 ; "upper"
0x0000b073      b906000000     mov ecx, 6
0x0000b078      4c89e6         mov rsi, r12
0x0000b07b      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000b07d      0f97c0         seta al
0x0000b080      1c00           sbb al, 0
0x0000b082      84c0           test al, al
0x0000b084      754c           jne 0xb0d2
0x0000b086      e8e56bffff     call sym.imp.__ctype_b_loc
0x0000b08b      31c9           xor ecx, ecx
0x0000b08d      4885ed         test rbp, rbp
0x0000b090      488b00         mov rax, qword [rax]
0x0000b093      bf01000000     mov edi, 1
0x0000b098      0f8522030000   jne 0xb3c0
0x0000b09e      f644480101     test byte [rax + rcx*2 + 1], 1
0x0000b0a3      7411           je 0xb0b6
0x0000b0a5      4889ca         mov rdx, rcx
0x0000b0a8      4889fe         mov rsi, rdi
0x0000b0ab      48c1fa06       sar rdx, 6
0x0000b0af      48d3e6         shl rsi, cl
0x0000b0b2      480934d3       or qword [rbx + rdx*8], rsi
0x0000b0b6      4883c101       add rcx, 1
0x0000b0ba      4881f9000100.  cmp rcx, 0x100
0x0000b0c1      75db           jne 0xb09e
0x0000b0c3      e93cfcffff     jmp 0xad04
0x0000b0c8      b80c000000     mov eax, 0xc
0x0000b0cd      e934fcffff     jmp 0xad06
0x0000b0d2      488d3de29e00.  lea rdi, str.blank                      ; 0x14fbb ; "blank"
0x0000b0d9      b906000000     mov ecx, 6
0x0000b0de      4c89e6         mov rsi, r12
0x0000b0e1      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000b0e3      0f97c0         seta al
0x0000b0e6      1c00           sbb al, 0
0x0000b0e8      84c0           test al, al
0x0000b0ea      0f85ee000000   jne 0xb1de
0x0000b0f0      e87b6bffff     call sym.imp.__ctype_b_loc
0x0000b0f5      31c9           xor ecx, ecx
0x0000b0f7      4885ed         test rbp, rbp
0x0000b0fa      488b10         mov rdx, qword [rax]
0x0000b0fd      be01000000     mov esi, 1
0x0000b102      0f859c000000   jne 0xb1a4
0x0000b108      f6044a01       test byte [rdx + rcx*2], 1
0x0000b10c      7411           je 0xb11f
0x0000b10e      4889c8         mov rax, rcx
0x0000b111      4889f7         mov rdi, rsi
0x0000b114      48c1f806       sar rax, 6
0x0000b118      48d3e7         shl rdi, cl
0x0000b11b      48093cc3       or qword [rbx + rax*8], rdi
0x0000b11f      4883c101       add rcx, 1
0x0000b123      4881f9000100.  cmp rcx, 0x100
0x0000b12a      75dc           jne 0xb108
0x0000b12c      e9d3fbffff     jmp 0xad04
0x0000b131      0f1f80000000.  nop dword [rax]
0x0000b138      31c0           xor eax, eax
0x0000b13a      f644420104     test byte [rdx + rax*2 + 1], 4
0x0000b13f      741c           je 0xb15d
0x0000b141      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000b146      4989f9         mov r9, rdi
0x0000b149      4889ce         mov rsi, rcx
0x0000b14c      83e13f         and ecx, 0x3f
0x0000b14f      48c1ee03       shr rsi, 3
0x0000b153      49d3e1         shl r9, cl
0x0000b156      83e618         and esi, 0x18
0x0000b159      4c090c33       or qword [rbx + rsi], r9
0x0000b15d      4883c001       add rax, 1
0x0000b161      483d00010000   cmp rax, 0x100
0x0000b167      75d1           jne 0xb13a
0x0000b169      e996fbffff     jmp 0xad04
0x0000b16e      31c0           xor eax, eax
0x0000b170      f644420120     test byte [rdx + rax*2 + 1], 0x20
0x0000b175      741c           je 0xb193
0x0000b177      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000b17c      4989f9         mov r9, rdi
0x0000b17f      4889ce         mov rsi, rcx
0x0000b182      83e13f         and ecx, 0x3f
0x0000b185      48c1ee03       shr rsi, 3
0x0000b189      49d3e1         shl r9, cl
0x0000b18c      83e618         and esi, 0x18
0x0000b18f      4c090c33       or qword [rbx + rsi], r9
0x0000b193      4883c001       add rax, 1
0x0000b197      483d00010000   cmp rax, 0x100
0x0000b19d      75d1           jne 0xb170
0x0000b19f      e960fbffff     jmp 0xad04
0x0000b1a4      31c0           xor eax, eax
0x0000b1a6      bf01000000     mov edi, 1
0x0000b1ab      f6044201       test byte [rdx + rax*2], 1
0x0000b1af      741c           je 0xb1cd
0x0000b1b1      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000b1b6      4989fe         mov r14, rdi
0x0000b1b9      4889ce         mov rsi, rcx
0x0000b1bc      83e13f         and ecx, 0x3f
0x0000b1bf      48c1ee03       shr rsi, 3
0x0000b1c3      49d3e6         shl r14, cl
0x0000b1c6      83e618         and esi, 0x18
0x0000b1c9      4c093433       or qword [rbx + rsi], r14
0x0000b1cd      4883c001       add rax, 1
0x0000b1d1      483d00010000   cmp rax, 0x100
0x0000b1d7      75d2           jne 0xb1ab
0x0000b1d9      e926fbffff     jmp 0xad04
0x0000b1de      488d35dc9d00.  lea rsi, str.graph                      ; 0x14fc1 ; "graph"
0x0000b1e5      4c89e7         mov rdi, r12
0x0000b1e8      e89368ffff     call sym.imp.strcmp
0x0000b1ed      85c0           test eax, eax
0x0000b1ef      7579           jne 0xb26a
0x0000b1f1      e87a6affff     call sym.imp.__ctype_b_loc
0x0000b1f6      31c9           xor ecx, ecx
0x0000b1f8      4885ed         test rbp, rbp
0x0000b1fb      488b30         mov rsi, qword [rax]
0x0000b1fe      ba01000000     mov edx, 1
0x0000b203      752a           jne 0xb22f
0x0000b205      66833c4e00     cmp word [rsi + rcx*2], 0
0x0000b20a      7911           jns 0xb21d
0x0000b20c      4889c8         mov rax, rcx
0x0000b20f      4889d7         mov rdi, rdx
0x0000b212      48c1f806       sar rax, 6
0x0000b216      48d3e7         shl rdi, cl
0x0000b219      48093cc3       or qword [rbx + rax*8], rdi
0x0000b21d      4883c101       add rcx, 1
0x0000b221      4881f9000100.  cmp rcx, 0x100
0x0000b228      75db           jne 0xb205
0x0000b22a      e9d5faffff     jmp 0xad04
0x0000b22f      31c0           xor eax, eax
0x0000b231      bf01000000     mov edi, 1
0x0000b236      66833c4600     cmp word [rsi + rax*2], 0
0x0000b23b      791c           jns 0xb259
0x0000b23d      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000b242      4989f9         mov r9, rdi
0x0000b245      4889ca         mov rdx, rcx
0x0000b248      83e13f         and ecx, 0x3f
0x0000b24b      48c1ea03       shr rdx, 3
0x0000b24f      49d3e1         shl r9, cl
0x0000b252      83e218         and edx, 0x18
0x0000b255      4c090c13       or qword [rbx + rdx], r9
0x0000b259      4883c001       add rax, 1
0x0000b25d      483d00010000   cmp rax, 0x100
0x0000b263      75d1           jne 0xb236
0x0000b265      e99afaffff     jmp 0xad04
0x0000b26a      488d35569d00.  lea rsi, str.punct                      ; 0x14fc7 ; "punct"
0x0000b271      4c89e7         mov rdi, r12
0x0000b274      e80768ffff     call sym.imp.strcmp
0x0000b279      85c0           test eax, eax
0x0000b27b      7577           jne 0xb2f4
0x0000b27d      e8ee69ffff     call sym.imp.__ctype_b_loc
0x0000b282      31c9           xor ecx, ecx
0x0000b284      4885ed         test rbp, rbp
0x0000b287      488b30         mov rsi, qword [rax]
0x0000b28a      ba01000000     mov edx, 1
0x0000b28f      7529           jne 0xb2ba
0x0000b291      f6044e04       test byte [rsi + rcx*2], 4
0x0000b295      7411           je 0xb2a8
0x0000b297      4889c8         mov rax, rcx
0x0000b29a      4889d7         mov rdi, rdx
0x0000b29d      48c1f806       sar rax, 6
0x0000b2a1      48d3e7         shl rdi, cl
0x0000b2a4      48093cc3       or qword [rbx + rax*8], rdi
0x0000b2a8      4883c101       add rcx, 1
0x0000b2ac      4881f9000100.  cmp rcx, 0x100
0x0000b2b3      75dc           jne 0xb291
0x0000b2b5      e94afaffff     jmp 0xad04
0x0000b2ba      31c0           xor eax, eax
0x0000b2bc      bf01000000     mov edi, 1
0x0000b2c1      f6044604       test byte [rsi + rax*2], 4
0x0000b2c5      741c           je 0xb2e3
0x0000b2c7      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000b2cc      4989fe         mov r14, rdi
0x0000b2cf      4889ca         mov rdx, rcx
0x0000b2d2      83e13f         and ecx, 0x3f
0x0000b2d5      48c1ea03       shr rdx, 3
0x0000b2d9      49d3e6         shl r14, cl
0x0000b2dc      83e218         and edx, 0x18
0x0000b2df      4c093413       or qword [rbx + rdx], r14
0x0000b2e3      4883c001       add rax, 1
0x0000b2e7      483d00010000   cmp rax, 0x100
0x0000b2ed      75d2           jne 0xb2c1
0x0000b2ef      e910faffff     jmp 0xad04
0x0000b2f4      488d35d29c00.  lea rsi, str.xdigit                     ; 0x14fcd ; "xdigit"
0x0000b2fb      4c89e7         mov rdi, r12
0x0000b2fe      e87d67ffff     call sym.imp.strcmp
0x0000b303      85c0           test eax, eax
0x0000b305      7579           jne 0xb380
0x0000b307      e86469ffff     call sym.imp.__ctype_b_loc
0x0000b30c      31c9           xor ecx, ecx
0x0000b30e      4885ed         test rbp, rbp
0x0000b311      488b30         mov rsi, qword [rax]
0x0000b314      ba01000000     mov edx, 1
0x0000b319      752a           jne 0xb345
0x0000b31b      f6444e0110     test byte [rsi + rcx*2 + 1], 0x10
0x0000b320      7411           je 0xb333
0x0000b322      4889c8         mov rax, rcx
0x0000b325      4889d7         mov rdi, rdx
0x0000b328      48c1f806       sar rax, 6
0x0000b32c      48d3e7         shl rdi, cl
0x0000b32f      48093cc3       or qword [rbx + rax*8], rdi
0x0000b333      4883c101       add rcx, 1
0x0000b337      4881f9000100.  cmp rcx, 0x100
0x0000b33e      75db           jne 0xb31b
0x0000b340      e9bff9ffff     jmp 0xad04
0x0000b345      31c0           xor eax, eax
0x0000b347      bf01000000     mov edi, 1
0x0000b34c      f644460110     test byte [rsi + rax*2 + 1], 0x10
0x0000b351      741c           je 0xb36f
0x0000b353      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000b358      4989f9         mov r9, rdi
0x0000b35b      4889ca         mov rdx, rcx
0x0000b35e      83e13f         and ecx, 0x3f
0x0000b361      48c1ea03       shr rdx, 3
0x0000b365      49d3e1         shl r9, cl
0x0000b368      83e218         and edx, 0x18
0x0000b36b      4c090c13       or qword [rbx + rdx], r9
0x0000b36f      4883c001       add rax, 1
0x0000b373      483d00010000   cmp rax, 0x100
0x0000b379      75d1           jne 0xb34c
0x0000b37b      e984f9ffff     jmp 0xad04
0x0000b380      b804000000     mov eax, 4
0x0000b385      e97cf9ffff     jmp 0xad06
0x0000b38a      31c0           xor eax, eax
0x0000b38c      f644420108     test byte [rdx + rax*2 + 1], 8
0x0000b391      741c           je 0xb3af
0x0000b393      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000b398      4989fe         mov r14, rdi
0x0000b39b      4889ce         mov rsi, rcx
0x0000b39e      83e13f         and ecx, 0x3f
0x0000b3a1      48c1ee03       shr rsi, 3
0x0000b3a5      49d3e6         shl r14, cl
0x0000b3a8      83e618         and esi, 0x18
0x0000b3ab      4c093433       or qword [rbx + rsi], r14
0x0000b3af      4883c001       add rax, 1
0x0000b3b3      483d00010000   cmp rax, 0x100
0x0000b3b9      75d1           jne 0xb38c
0x0000b3bb      e944f9ffff     jmp 0xad04
0x0000b3c0      31d2           xor edx, edx
0x0000b3c2      f644500101     test byte [rax + rdx*2 + 1], 1
0x0000b3c7      741c           je 0xb3e5
0x0000b3c9      0fb64c1500     movzx ecx, byte [rbp + rdx]
0x0000b3ce      4989f9         mov r9, rdi
0x0000b3d1      4889ce         mov rsi, rcx
0x0000b3d4      83e13f         and ecx, 0x3f
0x0000b3d7      48c1ee03       shr rsi, 3
0x0000b3db      49d3e1         shl r9, cl
0x0000b3de      83e618         and esi, 0x18
0x0000b3e1      4c090c33       or qword [rbx + rsi], r9
0x0000b3e5      4883c201       add rdx, 1
0x0000b3e9      4881fa000100.  cmp rdx, 0x100
0x0000b3f0      75d0           jne 0xb3c2
0x0000b3f2      e90df9ffff     jmp 0xad04
0x0000b3f7      31c0           xor eax, eax
0x0000b3f9      f644420140     test byte [rdx + rax*2 + 1], 0x40
0x0000b3fe      741c           je 0xb41c
0x0000b400      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000b405      4989fe         mov r14, rdi
0x0000b408      4889ce         mov rsi, rcx
0x0000b40b      83e13f         and ecx, 0x3f
0x0000b40e      48c1ee03       shr rsi, 3
0x0000b412      49d3e6         shl r14, cl
0x0000b415      83e618         and esi, 0x18
0x0000b418      4c093433       or qword [rbx + rsi], r14
0x0000b41c      4883c001       add rax, 1
0x0000b420      483d00010000   cmp rax, 0x100
0x0000b426      75d1           jne 0xb3f9
0x0000b428      e9d7f8ffff     jmp 0xad04
0x0000b42d      0f1f00         nop dword [rax]
;-- build_charclass_op:
0x0000b430      4157           push r15
0x0000b432      4156           push r14
0x0000b434      4989d6         mov r14, rdx
0x0000b437      4155           push r13
0x0000b439      4154           push r12
0x0000b43b      4989cd         mov r13, rcx
0x0000b43e      55             push rbp
0x0000b43f      53             push rbx
0x0000b440      4889fd         mov rbp, rdi
0x0000b443      bf20000000     mov edi, 0x20                           ; "@"
0x0000b448      4589c4         mov r12d, r8d
0x0000b44b      4883ec58       sub rsp, 0x58
0x0000b44f      48893424       mov qword [rsp], rsi
0x0000b453      be01000000     mov esi, 1
0x0000b458      4c894c2408     mov qword [rsp + 8], r9
0x0000b45d      64488b042528.  mov rax, qword fs:[0x28]
0x0000b466      4889442448     mov qword [rsp + 0x48], rax
0x0000b46b      31c0           xor eax, eax
0x0000b46d      48c744241800.  mov qword [rsp + 0x18], 0
0x0000b476      e8f565ffff     call sym.imp.calloc
0x0000b47b      4885c0         test rax, rax
0x0000b47e      0f84bc010000   je 0xb640
0x0000b484      be01000000     mov esi, 1
0x0000b489      bf50000000     mov edi, 0x50                           ; 'P'
0x0000b48e      4889c3         mov rbx, rax
0x0000b491      e8da65ffff     call sym.imp.calloc
0x0000b496      4885c0         test rax, rax
0x0000b499      4989c7         mov r15, rax
0x0000b49c      0f84ae010000   je 0xb650
0x0000b4a2      0fb64020       movzx eax, byte [rax + 0x20]
0x0000b4a6      4883ec08       sub rsp, 8
0x0000b4aa      4489e2         mov edx, r12d
0x0000b4ad      6a00           push 0
0x0000b4af      83e201         and edx, 1
0x0000b4b2      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000b4b7      498d4f48       lea rcx, [r15 + 0x48]
0x0000b4bb      4d89f1         mov r9, r14
0x0000b4be      4889de         mov rsi, rbx
0x0000b4c1      4c8d442428     lea r8, [rsp + 0x28]
0x0000b4c6      83e0fe         and eax, 0xfffffffe                     ; 4294967294
0x0000b4c9      09d0           or eax, edx
0x0000b4cb      498d5718       lea rdx, [r15 + 0x18]
0x0000b4cf      41884720       mov byte [r15 + 0x20], al
0x0000b4d3      e848f7ffff     call sym.build_charclass.isra.29
0x0000b4d8      85c0           test eax, eax
0x0000b4da      5a             pop rdx
0x0000b4db      59             pop rcx
0x0000b4dc      0f858e010000   jne 0xb670
0x0000b4e2      490fbe4d00     movsx rcx, byte [r13]
0x0000b4e7      be01000000     mov esi, 1
0x0000b4ec      84c9           test cl, cl
0x0000b4ee      743a           je 0xb52a
0x0000b4f0      488d413f       lea rax, [rcx + 0x3f]
0x0000b4f4      4885c9         test rcx, rcx
0x0000b4f7      4889ca         mov rdx, rcx
0x0000b4fa      480f49c1       cmovns rax, rcx
0x0000b4fe      48c1fa3f       sar rdx, 0x3f
0x0000b502      4983c501       add r13, 1
0x0000b506      48c1ea3a       shr rdx, 0x3a
0x0000b50a      48c1f806       sar rax, 6
0x0000b50e      4801d1         add rcx, rdx
0x0000b511      83e13f         and ecx, 0x3f
0x0000b514      4829d1         sub rcx, rdx
0x0000b517      4889f2         mov rdx, rsi
0x0000b51a      48d3e2         shl rdx, cl
0x0000b51d      490fbe4d00     movsx rcx, byte [r13]
0x0000b522      480914c3       or qword [rbx + rax*8], rdx
0x0000b526      84c9           test cl, cl
0x0000b528      75c6           jne 0xb4f0
0x0000b52a      4584e4         test r12b, r12b
0x0000b52d      7413           je 0xb542
0x0000b52f      488d5320       lea rdx, [rbx + 0x20]
0x0000b533      4889d8         mov rax, rbx
0x0000b536      48f710         not qword [rax]
0x0000b539      4883c008       add rax, 8
0x0000b53d      4839c2         cmp rdx, rax
0x0000b540      75f4           jne 0xb536
0x0000b542      83bdb4000000.  cmp dword [rbp + 0xb4], 1
0x0000b549      7e18           jle 0xb563
0x0000b54b      488b4d78       mov rcx, qword [rbp + 0x78]
0x0000b54f      31c0           xor eax, eax
0x0000b551      488b1401       mov rdx, qword [rcx + rax]
0x0000b555      48211403       and qword [rbx + rax], rdx
0x0000b559      4883c008       add rax, 8
0x0000b55d      4883f820       cmp rax, 0x20                           ; "@"
0x0000b561      75ee           jne 0xb551
0x0000b563      4c8d4c2420     lea r9, [rsp + 0x20]
0x0000b568      4c8d6570       lea r12, [rbp + 0x70]
0x0000b56c      4c8dad800000.  lea r13, [rbp + 0x80]
0x0000b573      31c9           xor ecx, ecx
0x0000b575      31d2           xor edx, edx
0x0000b577      c644242803     mov byte [rsp + 0x28], 3
0x0000b57c      4d89c8         mov r8, r9
0x0000b57f      4c89ee         mov rsi, r13
0x0000b582      4c89e7         mov rdi, r12
0x0000b585      48895c2420     mov qword [rsp + 0x20], rbx
0x0000b58a      4c890c24       mov qword [rsp], r9
0x0000b58e      e84dcbffff     call sym.create_token_tree.isra.16
0x0000b593      4885c0         test rax, rax
0x0000b596      4989c6         mov r14, rax
0x0000b599      0f8491000000   je 0xb630
0x0000b59f      83bdb4000000.  cmp dword [rbp + 0xb4], 1
0x0000b5a6      7e78           jle 0xb620
0x0000b5a8      808db0000000.  or byte [rbp + 0xb0], 2
0x0000b5af      4c8b0c24       mov r9, qword [rsp]
0x0000b5b3      31c9           xor ecx, ecx
0x0000b5b5      31d2           xor edx, edx
0x0000b5b7      4c89ee         mov rsi, r13
0x0000b5ba      4c89e7         mov rdi, r12
0x0000b5bd      c644242806     mov byte [rsp + 0x28], 6
0x0000b5c2      4c897c2420     mov qword [rsp + 0x20], r15
0x0000b5c7      4d89c8         mov r8, r9
0x0000b5ca      e811cbffff     call sym.create_token_tree.isra.16
0x0000b5cf      4885c0         test rax, rax
0x0000b5d2      745c           je 0xb630
0x0000b5d4      4c8d442430     lea r8, [rsp + 0x30]
0x0000b5d9      4c89f2         mov rdx, r14
0x0000b5dc      4889c1         mov rcx, rax
0x0000b5df      4c89ee         mov rsi, r13
0x0000b5e2      4c89e7         mov rdi, r12
0x0000b5e5      c64424380a     mov byte [rsp + 0x38], 0xa
0x0000b5ea      e8f1caffff     call sym.create_token_tree.isra.16
0x0000b5ef      4989c6         mov r14, rax
0x0000b5f2      488b7c2448     mov rdi, qword [rsp + 0x48]
0x0000b5f7      6448333c2528.  xor rdi, qword fs:[0x28]
0x0000b600      4c89f0         mov rax, r14
0x0000b603      0f858c000000   jne 0xb695
0x0000b609      4883c458       add rsp, 0x58
0x0000b60d      5b             pop rbx
0x0000b60e      5d             pop rbp
0x0000b60f      415c           pop r12
0x0000b611      415d           pop r13
0x0000b613      415e           pop r14
0x0000b615      415f           pop r15
0x0000b617      c3             ret
0x0000b618      0f1f84000000.  nop dword [rax + rax]
0x0000b620      4c89ff         mov rdi, r15
0x0000b623      e818b5ffff     call sym.free_charset
0x0000b628      ebc8           jmp 0xb5f2
0x0000b62a      660f1f440000   nop word [rax + rax]
0x0000b630      4889df         mov rdi, rbx
0x0000b633      e84862ffff     call sym.imp.free
0x0000b638      4c89ff         mov rdi, r15
0x0000b63b      e800b5ffff     call sym.free_charset
0x0000b640      488b442408     mov rax, qword [rsp + 8]
0x0000b645      4531f6         xor r14d, r14d
0x0000b648      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0000b64e      eba2           jmp 0xb5f2
0x0000b650      4889df         mov rdi, rbx
0x0000b653      4531f6         xor r14d, r14d
0x0000b656      e82562ffff     call sym.imp.free
0x0000b65b      488b442408     mov rax, qword [rsp + 8]
0x0000b660      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0000b666      eb8a           jmp 0xb5f2
0x0000b668      0f1f84000000.  nop dword [rax + rax]
0x0000b670      4889df         mov rdi, rbx
0x0000b673      890424         mov dword [rsp], eax
0x0000b676      4531f6         xor r14d, r14d
0x0000b679      e80262ffff     call sym.imp.free
0x0000b67e      4c89ff         mov rdi, r15
0x0000b681      e8bab4ffff     call sym.free_charset
0x0000b686      488b7c2408     mov rdi, qword [rsp + 8]
0x0000b68b      8b0424         mov eax, dword [rsp]
0x0000b68e      8907           mov dword [rdi], eax
0x0000b690      e95dffffff     jmp 0xb5f2
0x0000b695      e8f662ffff     call sym.imp.__stack_chk_fail
0x0000b69a      660f1f440000   nop word [rax + rax]
;-- re_compile_fastmap_iter.isra.30:
0x0000b6a0      4157           push r15
0x0000b6a2      4156           push r14
0x0000b6a4      4889f8         mov rax, rdi
0x0000b6a7      4155           push r13
0x0000b6a9      4154           push r12
0x0000b6ab      55             push rbp
0x0000b6ac      53             push rbx
0x0000b6ad      31db           xor ebx, ebx
0x0000b6af      4889cd         mov rbp, rcx
0x0000b6b2      4881ec780100.  sub rsp, 0x178
0x0000b6b9      488b00         mov rax, qword [rax]
0x0000b6bc      48897c2430     mov qword [rsp + 0x30], rdi
0x0000b6c1      4889742420     mov qword [rsp + 0x20], rsi
0x0000b6c6      64488b3c2528.  mov rdi, qword fs:[0x28]
0x0000b6cf      4889bc246801.  mov qword [rsp + 0x168], rdi
0x0000b6d7      31ff           xor edi, edi
0x0000b6d9      83b8b4000000.  cmp dword [rax + 0xb4], 1
0x0000b6e0      4889542428     mov qword [rsp + 0x28], rdx
0x0000b6e5      4889442408     mov qword [rsp + 8], rax
0x0000b6ea      7517           jne 0xb703
0x0000b6ec      488b442430     mov rax, qword [rsp + 0x30]
0x0000b6f1      488b4018       mov rax, qword [rax + 0x18]
0x0000b6f5      4889c3         mov rbx, rax
0x0000b6f8      48890424       mov qword [rsp], rax
0x0000b6fc      48c1eb16       shr rbx, 0x16
0x0000b700      83e301         and ebx, 1
0x0000b703      488b442420     mov rax, qword [rsp + 0x20]
0x0000b708      48833800       cmp qword [rax], 0
0x0000b70c      0f8e0b040000   jle 0xbb1d
0x0000b712      488d442458     lea rax, [rsp + 0x58]
0x0000b717      48c704240000.  mov qword [rsp], 0
0x0000b71f      4889442440     mov qword [rsp + 0x40], rax
0x0000b724      488d442454     lea rax, [rsp + 0x54]
0x0000b729      4889442448     mov qword [rsp + 0x48], rax
0x0000b72e      488d442460     lea rax, [rsp + 0x60]
0x0000b733      4889442438     mov qword [rsp + 0x38], rax
0x0000b738      eb44           jmp 0xb77e
0x0000b73a      660f1f440000   nop word [rax + rax]
0x0000b740      83f803         cmp eax, 3
0x0000b743      0f84ed020000   je 0xba36
0x0000b749      83f806         cmp eax, 6
0x0000b74c      0f8486010000   je 0xb8d8
0x0000b752      83e2fd         and edx, 0xfffffffd                     ; 4294967293
0x0000b755      80fa05         cmp dl, 5
0x0000b758      0f84f6030000   je 0xbb54
0x0000b75e      83f802         cmp eax, 2
0x0000b761      0f844d030000   je 0xbab4
0x0000b767      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0000b76c      4883042401     add qword [rsp], 1
0x0000b771      488b0424       mov rax, qword [rsp]
0x0000b775      483b07         cmp rax, qword [rdi]
0x0000b778      0f8d9f030000   jge 0xbb1d
0x0000b77e      488b442428     mov rax, qword [rsp + 0x28]
0x0000b783      488b3c24       mov rdi, qword [rsp]
0x0000b787      488b00         mov rax, qword [rax]
0x0000b78a      4c8b24f8       mov r12, qword [rax + rdi*8]
0x0000b78e      488b442408     mov rax, qword [rsp + 8]
0x0000b793      488b08         mov rcx, qword [rax]
0x0000b796      4c89e0         mov rax, r12
0x0000b799      48c1e004       shl rax, 4
0x0000b79d      4889442410     mov qword [rsp + 0x10], rax
0x0000b7a2      488d3401       lea rsi, [rcx + rax]
0x0000b7a6      0fb64608       movzx eax, byte [rsi + 8]
0x0000b7aa      83f801         cmp eax, 1
0x0000b7ad      89c2           mov edx, eax
0x0000b7af      758f           jne 0xb740
0x0000b7b1      440fb62e       movzx r13d, byte [rsi]
0x0000b7b5      85db           test ebx, ebx
0x0000b7b7      42c6442d0001   mov byte [rbp + r13], 1
0x0000b7bd      7411           je 0xb7d0
0x0000b7bf      e89c64ffff     call sym.imp.__ctype_tolower_loc
0x0000b7c4      488b00         mov rax, qword [rax]
0x0000b7c7      4a6304a8       movsxd rax, dword [rax + r13*4]
0x0000b7cb      c644050001     mov byte [rbp + rax], 1
0x0000b7d0      488b442430     mov rax, qword [rsp + 0x30]
0x0000b7d5      f6401a40       test byte [rax + 0x1a], 0x40
0x0000b7d9      748c           je 0xb767
0x0000b7db      488b742408     mov rsi, qword [rsp + 8]
0x0000b7e0      83beb4000000.  cmp dword [rsi + 0xb4], 1
0x0000b7e7      0f8e7affffff   jle 0xb767
0x0000b7ed      488b06         mov rax, qword [rsi]
0x0000b7f0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000b7f5      0fb61438       movzx edx, byte [rax + rdi]
0x0000b7f9      88542460       mov byte [rsp + 0x60], dl
0x0000b7fd      498d542401     lea rdx, [r12 + 1]
0x0000b802      48395610       cmp qword [rsi + 0x10], rdx
0x0000b806      0f863a030000   jbe 0xbb46
0x0000b80c      488d4c3810     lea rcx, [rax + rdi + 0x10]
0x0000b811      8b4108         mov eax, dword [rcx + 8]
0x0000b814      25ff002000     and eax, 0x2000ff
0x0000b819      3d01002000     cmp eax, 0x200001
0x0000b81e      0f8522030000   jne 0xbb46
0x0000b824      4883c720       add rdi, 0x20                           ; "@"
0x0000b828      4989fd         mov r13, rdi
0x0000b82b      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000b830      488d4701       lea rax, [rdi + 1]
0x0000b834      eb25           jmp 0xb85b
0x0000b836      662e0f1f8400.  nop word cs:[rax + rax]
0x0000b840      488b0e         mov rcx, qword [rsi]
0x0000b843      4c01e9         add rcx, r13
0x0000b846      4983c510       add r13, 0x10
0x0000b84a      8b5108         mov edx, dword [rcx + 8]
0x0000b84d      81e2ff002000   and edx, 0x2000ff
0x0000b853      81fa01002000   cmp edx, 0x200001
0x0000b859      7519           jne 0xb874
0x0000b85b      0fb611         movzx edx, byte [rcx]
0x0000b85e      4883c001       add rax, 1
0x0000b862      8850ff         mov byte [rax - 1], dl
0x0000b865      4889c2         mov rdx, rax
0x0000b868      4829fa         sub rdx, rdi
0x0000b86b      4c01e2         add rdx, r12
0x0000b86e      48395610       cmp qword [rsi + 0x10], rdx
0x0000b872      77cc           ja 0xb840
0x0000b874      488b742438     mov rsi, qword [rsp + 0x38]
0x0000b879      488b4c2440     mov rcx, qword [rsp + 0x40]
0x0000b87e      488b7c2448     mov rdi, qword [rsp + 0x48]
0x0000b883      4829f0         sub rax, rsi
0x0000b886      48c701000000.  mov qword [rcx], 0
0x0000b88d      4989c4         mov r12, rax
0x0000b890      4889c2         mov rdx, rax
0x0000b893      e8e89fffff     call sym.rpl_mbrtowc
0x0000b898      4939c4         cmp r12, rax
0x0000b89b      0f85c6feffff   jne 0xb767
0x0000b8a1      8b7c2454       mov edi, dword [rsp + 0x54]
0x0000b8a5      e82663ffff     call sym.imp.towlower
0x0000b8aa      488b542440     mov rdx, qword [rsp + 0x40]
0x0000b8af      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000b8b4      89c6           mov esi, eax
0x0000b8b6      e81562ffff     call sym.imp.wcrtomb
0x0000b8bb      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000b8bf      0f84a2feffff   je 0xb767
0x0000b8c5      0fb6442460     movzx eax, byte [rsp + 0x60]
0x0000b8ca      c644050001     mov byte [rbp + rax], 1
0x0000b8cf      e993feffff     jmp 0xb767
0x0000b8d4      0f1f4000       nop dword [rax]
0x0000b8d8      488b442408     mov rax, qword [rsp + 8]
0x0000b8dd      4c8b26         mov r12, qword [rsi]
0x0000b8e0      83b8b4000000.  cmp dword [rax + 0xb4], 1
0x0000b8e7      7e24           jle 0xb90d
0x0000b8e9      49837c244800   cmp qword [r12 + 0x48], 0
0x0000b8ef      0f85fa000000   jne 0xb9ef
0x0000b8f5      41f644242001   test byte [r12 + 0x20], 1
0x0000b8fb      0f85ee000000   jne 0xb9ef
0x0000b901      49837c244000   cmp qword [r12 + 0x40], 0
0x0000b907      0f85e2000000   jne 0xb9ef
0x0000b90d      4531ed         xor r13d, r13d
0x0000b910      49837c242800   cmp qword [r12 + 0x28], 0
0x0000b916      0f8e4bfeffff   jle 0xb767
0x0000b91c      4d89e7         mov r15, r12
0x0000b91f      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000b924      4989ec         mov r12, rbp
0x0000b927      4c89ed         mov rbp, r13
0x0000b92a      4189dd         mov r13d, ebx
0x0000b92d      eb0e           jmp 0xb93d
0x0000b92f      4883c501       add rbp, 1
0x0000b933      493b6f28       cmp rbp, qword [r15 + 0x28]
0x0000b937      0f8da7000000   jge 0xb9e4
0x0000b93d      49c706000000.  mov qword [r14], 0
0x0000b944      498b07         mov rax, qword [r15]
0x0000b947      4c89f2         mov rdx, r14
0x0000b94a      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000b94f      488d1cad0000.  lea rbx, [rbp*4]
0x0000b957      8b34a8         mov esi, dword [rax + rbp*4]
0x0000b95a      e87161ffff     call sym.imp.wcrtomb
0x0000b95f      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000b963      742a           je 0xb98f
0x0000b965      0fb6542460     movzx edx, byte [rsp + 0x60]
0x0000b96a      4585ed         test r13d, r13d
0x0000b96d      41c6041401     mov byte [r12 + rdx], 1
0x0000b972      4889542410     mov qword [rsp + 0x10], rdx
0x0000b977      7416           je 0xb98f
0x0000b979      e8e262ffff     call sym.imp.__ctype_tolower_loc
0x0000b97e      488b542410     mov rdx, qword [rsp + 0x10]
0x0000b983      488b00         mov rax, qword [rax]
0x0000b986      48630490       movsxd rax, dword [rax + rdx*4]
0x0000b98a      41c6040401     mov byte [r12 + rax], 1
0x0000b98f      488b442430     mov rax, qword [rsp + 0x30]
0x0000b994      f6401a40       test byte [rax + 0x1a], 0x40
0x0000b998      7495           je 0xb92f
0x0000b99a      488b442408     mov rax, qword [rsp + 8]
0x0000b99f      83b8b4000000.  cmp dword [rax + 0xb4], 1
0x0000b9a6      7e87           jle 0xb92f
0x0000b9a8      498b07         mov rax, qword [r15]
0x0000b9ab      8b3c18         mov edi, dword [rax + rbx]
0x0000b9ae      e81d62ffff     call sym.imp.towlower
0x0000b9b3      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000b9b8      4c89f2         mov rdx, r14
0x0000b9bb      89c6           mov esi, eax
0x0000b9bd      e80e61ffff     call sym.imp.wcrtomb
0x0000b9c2      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000b9c6      0f8463ffffff   je 0xb92f
0x0000b9cc      0fb6442460     movzx eax, byte [rsp + 0x60]
0x0000b9d1      4883c501       add rbp, 1
0x0000b9d5      41c6040401     mov byte [r12 + rax], 1
0x0000b9da      493b6f28       cmp rbp, qword [r15 + 0x28]
0x0000b9de      0f8c59ffffff   jl 0xb93d
0x0000b9e4      4489eb         mov ebx, r13d
0x0000b9e7      4c89e5         mov rbp, r12
0x0000b9ea      e978fdffff     jmp 0xb767
0x0000b9ef      4c8b642440     mov r12, qword [rsp + 0x40]
0x0000b9f4      4c8b6c2448     mov r13, qword [rsp + 0x48]
0x0000b9f9      c644245400     mov byte [rsp + 0x54], 0
0x0000b9fe      6690           nop
0x0000ba00      31ff           xor edi, edi
0x0000ba02      49c704240000.  mov qword [r12], 0
0x0000ba0a      4c89e1         mov rcx, r12
0x0000ba0d      ba01000000     mov edx, 1
0x0000ba12      4c89ee         mov rsi, r13
0x0000ba15      e8669effff     call sym.rpl_mbrtowc
0x0000ba1a      4883f8fe       cmp rax, 0xfffffffffffffffe
0x0000ba1e      750a           jne 0xba2a
0x0000ba20      0fb6442454     movzx eax, byte [rsp + 0x54]
0x0000ba25      c644050001     mov byte [rbp + rax], 1
0x0000ba2a      8044245401     add byte [rsp + 0x54], 1
0x0000ba2f      75cf           jne 0xba00
0x0000ba31      e931fdffff     jmp 0xb767
0x0000ba36      4989ed         mov r13, rbp
0x0000ba39      4531e4         xor r12d, r12d
0x0000ba3c      48c744241800.  mov qword [rsp + 0x18], 0
0x0000ba45      488b442410     mov rax, qword [rsp + 0x10]
0x0000ba4a      488b742418     mov rsi, qword [rsp + 0x18]
0x0000ba4f      4531f6         xor r14d, r14d
0x0000ba52      488b0401       mov rax, qword [rcx + rax]
0x0000ba56      4c8b3c30       mov r15, qword [rax + rsi]
0x0000ba5a      660f1f440000   nop word [rax + rax]
0x0000ba60      4d0fa3f7       bt r15, r14
0x0000ba64      731f           jae 0xba85
0x0000ba66      85db           test ebx, ebx
0x0000ba68      43c644350001   mov byte [r13 + r14], 1
0x0000ba6e      7415           je 0xba85
0x0000ba70      e8eb61ffff     call sym.imp.__ctype_tolower_loc
0x0000ba75      488b00         mov rax, qword [rax]
0x0000ba78      4b8d1434       lea rdx, [r12 + r14]
0x0000ba7c      48630490       movsxd rax, dword [rax + rdx*4]
0x0000ba80      c644050001     mov byte [rbp + rax], 1
0x0000ba85      4983c601       add r14, 1
0x0000ba89      4983fe40       cmp r14, 0x40                           ; segment.PHDR
0x0000ba8d      75d1           jne 0xba60
0x0000ba8f      4983c440       add r12, 0x40                           ; segment.PHDR
0x0000ba93      488344241808   add qword [rsp + 0x18], 8
0x0000ba99      4983c540       add r13, 0x40                           ; segment.PHDR
0x0000ba9d      4981fc000100.  cmp r12, 0x100
0x0000baa4      0f84bdfcffff   je 0xb767
0x0000baaa      488b442408     mov rax, qword [rsp + 8]
0x0000baaf      488b08         mov rcx, qword [rax]
0x0000bab2      eb91           jmp 0xba45
0x0000bab4      660f6f05c49c.  movdqa xmm0, xmmword [0x00015780]
0x0000babc      0f114500       movups xmmword [rbp], xmm0
0x0000bac0      0f114510       movups xmmword [rbp + 0x10], xmm0
0x0000bac4      0f114520       movups xmmword [rbp + 0x20], xmm0
0x0000bac8      0f114530       movups xmmword [rbp + 0x30], xmm0
0x0000bacc      0f114540       movups xmmword [rbp + 0x40], xmm0
0x0000bad0      0f114550       movups xmmword [rbp + 0x50], xmm0
0x0000bad4      0f114560       movups xmmword [rbp + 0x60], xmm0
0x0000bad8      0f114570       movups xmmword [rbp + 0x70], xmm0
0x0000badc      0f1185800000.  movups xmmword [rbp + 0x80], xmm0
0x0000bae3      0f1185900000.  movups xmmword [rbp + 0x90], xmm0
0x0000baea      0f1185a00000.  movups xmmword [rbp + 0xa0], xmm0
0x0000baf1      0f1185b00000.  movups xmmword [rbp + 0xb0], xmm0
0x0000baf8      0f1185c00000.  movups xmmword [rbp + 0xc0], xmm0
0x0000baff      0f1185d00000.  movups xmmword [rbp + 0xd0], xmm0
0x0000bb06      0f1185e00000.  movups xmmword [rbp + 0xe0], xmm0
0x0000bb0d      0f1185f00000.  movups xmmword [rbp + 0xf0], xmm0
0x0000bb14      488b442430     mov rax, qword [rsp + 0x30]
0x0000bb19      80483801       or byte [rax + 0x38], 1
0x0000bb1d      488b84246801.  mov rax, qword [rsp + 0x168]
0x0000bb25      644833042528.  xor rax, qword fs:[0x28]
0x0000bb2e      0f858e000000   jne 0xbbc2
0x0000bb34      4881c4780100.  add rsp, 0x178
0x0000bb3b      5b             pop rbx
0x0000bb3c      5d             pop rbp
0x0000bb3d      415c           pop r12
0x0000bb3f      415d           pop r13
0x0000bb41      415e           pop r14
0x0000bb43      415f           pop r15
0x0000bb45      c3             ret
0x0000bb46      488b442438     mov rax, qword [rsp + 0x38]
0x0000bb4b      4883c001       add rax, 1
0x0000bb4f      e920fdffff     jmp 0xb874
0x0000bb54      660f6f05249c.  movdqa xmm0, xmmword [0x00015780]
0x0000bb5c      83f802         cmp eax, 2
0x0000bb5f      0f114500       movups xmmword [rbp], xmm0
0x0000bb63      0f114510       movups xmmword [rbp + 0x10], xmm0
0x0000bb67      0f114520       movups xmmword [rbp + 0x20], xmm0
0x0000bb6b      0f114530       movups xmmword [rbp + 0x30], xmm0
0x0000bb6f      0f114540       movups xmmword [rbp + 0x40], xmm0
0x0000bb73      0f114550       movups xmmword [rbp + 0x50], xmm0
0x0000bb77      0f114560       movups xmmword [rbp + 0x60], xmm0
0x0000bb7b      0f114570       movups xmmword [rbp + 0x70], xmm0
0x0000bb7f      0f1185800000.  movups xmmword [rbp + 0x80], xmm0
0x0000bb86      0f1185900000.  movups xmmword [rbp + 0x90], xmm0
0x0000bb8d      0f1185a00000.  movups xmmword [rbp + 0xa0], xmm0
0x0000bb94      0f1185b00000.  movups xmmword [rbp + 0xb0], xmm0
0x0000bb9b      0f1185c00000.  movups xmmword [rbp + 0xc0], xmm0
0x0000bba2      0f1185d00000.  movups xmmword [rbp + 0xd0], xmm0
0x0000bba9      0f1185e00000.  movups xmmword [rbp + 0xe0], xmm0
0x0000bbb0      0f1185f00000.  movups xmmword [rbp + 0xf0], xmm0
0x0000bbb7      0f8560ffffff   jne 0xbb1d
0x0000bbbd      e952ffffff     jmp 0xbb14
0x0000bbc2      e8c95dffff     call sym.imp.__stack_chk_fail
0x0000bbc7      660f1f840000.  nop word [rax + rax]
;-- check_node_accept_bytes.isra.31:
0x0000bbd0      48c1e204       shl rdx, 4
0x0000bbd4      4155           push r13
0x0000bbd6      4154           push r12
0x0000bbd8      4c8d0c17       lea r9, [rdi + rdx]
0x0000bbdc      55             push rbp
0x0000bbdd      53             push rbx
0x0000bbde      4883ec08       sub rsp, 8
0x0000bbe2      450fb65908     movzx r11d, byte [r9 + 8]
0x0000bbe7      4180fb07       cmp r11b, 7
0x0000bbeb      0f840f010000   je 0xbd00
0x0000bbf1      83b990000000.  cmp dword [rcx + 0x90], 1
0x0000bbf8      0f84c2000000   je 0xbcc0
0x0000bbfe      4889f3         mov rbx, rsi
0x0000bc01      4889cf         mov rdi, rcx
0x0000bc04      4c89c6         mov rsi, r8
0x0000bc07      4989ca         mov r10, rcx
0x0000bc0a      e861b7ffff     call sym.re_string_char_size_at.part.0
0x0000bc0f      4180fb05       cmp r11b, 5
0x0000bc13      89c5           mov ebp, eax
0x0000bc15      0f84b5000000   je 0xbcd0
0x0000bc1b      4180fb06       cmp r11b, 6
0x0000bc1f      0f859b000000   jne 0xbcc0
0x0000bc25      83f801         cmp eax, 1
0x0000bc28      0f8e92000000   jle 0xbcc0
0x0000bc2e      4d8b29         mov r13, qword [r9]
0x0000bc31      498b7540       mov rsi, qword [r13 + 0x40]
0x0000bc35      498b5528       mov rdx, qword [r13 + 0x28]
0x0000bc39      4885f6         test rsi, rsi
0x0000bc3c      750b           jne 0xbc49
0x0000bc3e      49837d4800     cmp qword [r13 + 0x48], 0
0x0000bc43      0f84ef000000   je 0xbd38
0x0000bc49      498b4210       mov rax, qword [r10 + 0x10]
0x0000bc4d      4885d2         test rdx, rdx
0x0000bc50      468b2480       mov r12d, dword [rax + r8*4]
0x0000bc54      7e21           jle 0xbc77
0x0000bc56      498b4d00       mov rcx, qword [r13]
0x0000bc5a      443b21         cmp r12d, dword [rcx]
0x0000bc5d      7453           je 0xbcb2
0x0000bc5f      31c0           xor eax, eax
0x0000bc61      eb0b           jmp 0xbc6e
0x0000bc63      0f1f440000     nop dword [rax + rax]
0x0000bc68      443b2481       cmp r12d, dword [rcx + rax*4]
0x0000bc6c      7444           je 0xbcb2
0x0000bc6e      4883c001       add rax, 1
0x0000bc72      4839d0         cmp rax, rdx
0x0000bc75      75f1           jne 0xbc68
0x0000bc77      498b4548       mov rax, qword [r13 + 0x48]
0x0000bc7b      4885c0         test rax, rax
0x0000bc7e      0f8ed8000000   jle 0xbd5c
0x0000bc84      31db           xor ebx, ebx
0x0000bc86      eb16           jmp 0xbc9e
0x0000bc88      0f1f84000000.  nop dword [rax + rax]
0x0000bc90      4883c301       add rbx, 1
0x0000bc94      493b5d48       cmp rbx, qword [r13 + 0x48]
0x0000bc98      0f8dba000000   jge 0xbd58
0x0000bc9e      498b4518       mov rax, qword [r13 + 0x18]
0x0000bca2      4489e7         mov edi, r12d
0x0000bca5      488b34d8       mov rsi, qword [rax + rbx*8]
0x0000bca9      e8825cffff     call sym.imp.iswctype
0x0000bcae      85c0           test eax, eax
0x0000bcb0      74de           je 0xbc90
0x0000bcb2      41f6452001     test byte [r13 + 0x20], 1
0x0000bcb7      7409           je 0xbcc2
0x0000bcb9      0f1f80000000.  nop dword [rax]
0x0000bcc0      31ed           xor ebp, ebp
0x0000bcc2      4883c408       add rsp, 8
0x0000bcc6      89e8           mov eax, ebp
0x0000bcc8      5b             pop rbx
0x0000bcc9      5d             pop rbp
0x0000bcca      415c           pop r12
0x0000bccc      415d           pop r13
0x0000bcce      c3             ret
0x0000bccf      90             nop
0x0000bcd0      83f801         cmp eax, 1
0x0000bcd3      7eeb           jle 0xbcc0
0x0000bcd5      488b03         mov rax, qword [rbx]
0x0000bcd8      a840           test al, 0x40                           ; segment.PHDR
0x0000bcda      7414           je 0xbcf0
0x0000bcdc      a880           test al, 0x80
0x0000bcde      74e2           je 0xbcc2
0x0000bce0      498b4208       mov rax, qword [r10 + 8]
0x0000bce4      42803c0000     cmp byte [rax + r8], 0
0x0000bce9      74d5           je 0xbcc0
0x0000bceb      ebd5           jmp 0xbcc2
0x0000bced      0f1f00         nop dword [rax]
0x0000bcf0      498b5208       mov rdx, qword [r10 + 8]
0x0000bcf4      42803c020a     cmp byte [rdx + r8], 0xa
0x0000bcf9      75e1           jne 0xbcdc
0x0000bcfb      ebc3           jmp 0xbcc0
0x0000bcfd      0f1f00         nop dword [rax]
0x0000bd00      488b5108       mov rdx, qword [rcx + 8]
0x0000bd04      4a8d3402       lea rsi, [rdx + r8]
0x0000bd08      0fb606         movzx eax, byte [rsi]
0x0000bd0b      3cc1           cmp al, 0xc1
0x0000bd0d      76b1           jbe 0xbcc0
0x0000bd0f      488b4958       mov rcx, qword [rcx + 0x58]
0x0000bd13      498d7801       lea rdi, [r8 + 1]
0x0000bd17      4839cf         cmp rdi, rcx
0x0000bd1a      7da4           jge 0xbcc0
0x0000bd1c      3cdf           cmp al, 0xdf
0x0000bd1e      420fb6540201   movzx edx, byte [rdx + r8 + 1]
0x0000bd24      7768           ja 0xbd8e
0x0000bd26      83c280         add edx, 0xffffff80
0x0000bd29      bd02000000     mov ebp, 2
0x0000bd2e      80fa3f         cmp dl, 0x3f
0x0000bd31      778d           ja 0xbcc0
0x0000bd33      eb8d           jmp 0xbcc2
0x0000bd35      0f1f00         nop dword [rax]
0x0000bd38      4885d2         test rdx, rdx
0x0000bd3b      0f8508ffffff   jne 0xbc49
0x0000bd41      41f6452001     test byte [r13 + 0x20], 1
0x0000bd46      0f8576ffffff   jne 0xbcc2
0x0000bd4c      e96fffffff     jmp 0xbcc0
0x0000bd51      0f1f80000000.  nop dword [rax]
0x0000bd58      498b7540       mov rsi, qword [r13 + 0x40]
0x0000bd5c      4885f6         test rsi, rsi
0x0000bd5f      7ee0           jle 0xbd41
0x0000bd61      498b5508       mov rdx, qword [r13 + 8]
0x0000bd65      31c0           xor eax, eax
0x0000bd67      eb10           jmp 0xbd79
0x0000bd69      0f1f80000000.  nop dword [rax]
0x0000bd70      4883c001       add rax, 1
0x0000bd74      4839f0         cmp rax, rsi
0x0000bd77      74c8           je 0xbd41
0x0000bd79      443b2482       cmp r12d, dword [rdx + rax*4]
0x0000bd7d      7cf1           jl 0xbd70
0x0000bd7f      498b4d10       mov rcx, qword [r13 + 0x10]
0x0000bd83      443b2481       cmp r12d, dword [rcx + rax*4]
0x0000bd87      7fe7           jg 0xbd70
0x0000bd89      e924ffffff     jmp 0xbcb2
0x0000bd8e      3cef           cmp al, 0xef
0x0000bd90      7746           ja 0xbdd8
0x0000bd92      3ce0           cmp al, 0xe0
0x0000bd94      7509           jne 0xbd9f
0x0000bd96      80fa9f         cmp dl, 0x9f
0x0000bd99      0f8621ffffff   jbe 0xbcc0
0x0000bd9f      bd03000000     mov ebp, 3
0x0000bda4      4863fd         movsxd rdi, ebp
0x0000bda7      4901f8         add r8, rdi
0x0000bdaa      4c39c1         cmp rcx, r8
0x0000bdad      0f8c0dffffff   jl 0xbcc0
0x0000bdb3      b801000000     mov eax, 1
0x0000bdb8      eb0d           jmp 0xbdc7
0x0000bdba      4883c001       add rax, 1
0x0000bdbe      4839c7         cmp rdi, rax
0x0000bdc1      0f8efbfeffff   jle 0xbcc2
0x0000bdc7      0fb61c06       movzx ebx, byte [rsi + rax]
0x0000bdcb      8d5380         lea edx, [rbx - 0x80]
0x0000bdce      80fa3f         cmp dl, 0x3f
0x0000bdd1      76e7           jbe 0xbdba
0x0000bdd3      e9e8feffff     jmp 0xbcc0
0x0000bdd8      3cf7           cmp al, 0xf7
0x0000bdda      7714           ja 0xbdf0
0x0000bddc      3cf0           cmp al, 0xf0
0x0000bdde      7509           jne 0xbde9
0x0000bde0      80fa8f         cmp dl, 0x8f
0x0000bde3      0f86d7feffff   jbe 0xbcc0
0x0000bde9      bd04000000     mov ebp, 4
0x0000bdee      ebb4           jmp 0xbda4
0x0000bdf0      3cfb           cmp al, 0xfb
0x0000bdf2      7714           ja 0xbe08
0x0000bdf4      3cf8           cmp al, 0xf8
0x0000bdf6      7509           jne 0xbe01
0x0000bdf8      80fa87         cmp dl, 0x87
0x0000bdfb      0f86bffeffff   jbe 0xbcc0
0x0000be01      bd05000000     mov ebp, 5
0x0000be06      eb9c           jmp 0xbda4
0x0000be08      3cfd           cmp al, 0xfd
0x0000be0a      0f87b0feffff   ja 0xbcc0
0x0000be10      3cfc           cmp al, 0xfc
0x0000be12      7509           jne 0xbe1d
0x0000be14      80fa83         cmp dl, 0x83
0x0000be17      0f86a3feffff   jbe 0xbcc0
0x0000be1d      bd06000000     mov ebp, 6
0x0000be22      eb80           jmp 0xbda4
0x0000be24      6690           nop
0x0000be26      662e0f1f8400.  nop word cs:[rax + rax]
;-- check_arrival:
0x0000be30      4157           push r15
0x0000be32      4156           push r14
0x0000be34      4989ff         mov r15, rdi
0x0000be37      4155           push r13
0x0000be39      4154           push r12
0x0000be3b      55             push rbp
0x0000be3c      53             push rbx
0x0000be3d      4889cd         mov rbp, rcx
0x0000be40      4889d3         mov rbx, rdx
0x0000be43      4881ecd80000.  sub rsp, 0xd8
0x0000be4a      488b8f980000.  mov rcx, qword [rdi + 0x98]
0x0000be51      4c8b6e08       mov r13, qword [rsi + 8]
0x0000be55      64488b042528.  mov rax, qword fs:[0x28]
0x0000be5e      48898424c800.  mov qword [rsp + 0xc8], rax
0x0000be66      31c0           xor eax, eax
0x0000be68      4889d0         mov rax, rdx
0x0000be6b      4889742460     mov qword [rsp + 0x60], rsi
0x0000be70      4c89442478     mov qword [rsp + 0x78], r8
0x0000be75      48c1e004       shl rax, 4
0x0000be79      480301         add rax, qword [rcx]
0x0000be7c      4c894c2440     mov qword [rsp + 0x40], r9
0x0000be81      48894c2430     mov qword [rsp + 0x30], rcx
0x0000be86      c78424880000.  mov dword [rsp + 0x88], 0
0x0000be91      488b00         mov rax, qword [rax]
0x0000be94      4889442448     mov qword [rsp + 0x48], rax
0x0000be99      486387e00000.  movsxd rax, dword [rdi + 0xe0]
0x0000bea0      4c01c8         add rax, r9
0x0000bea3      4c39e8         cmp rax, r13
0x0000bea6      0f8d1a060000   jge 0xc4c6
0x0000beac      488b442460     mov rax, qword [rsp + 0x60]
0x0000beb1      498b97b80000.  mov rdx, qword [r15 + 0xb8]
0x0000beb8      498b4f48       mov rcx, qword [r15 + 0x48]
0x0000bebc      4c8b20         mov r12, qword [rax]
0x0000bebf      4c8b7010       mov r14, qword [rax + 0x10]
0x0000bec3      4889542468     mov qword [rsp + 0x68], rdx
0x0000bec8      48894c2470     mov qword [rsp + 0x70], rcx
0x0000becd      418b97a00000.  mov edx, dword [r15 + 0xa0]
0x0000bed4      4d85e4         test r12, r12
0x0000bed7      4d89b7b80000.  mov qword [r15 + 0xb8], r14
0x0000bede      0f84dc030000   je 0xc2c0
0x0000bee4      498d7424ff     lea rsi, [r12 - 1]
0x0000bee9      4d896748       mov qword [r15 + 0x48], r12
0x0000beed      4c89ff         mov rdi, r15
0x0000bef0      e80bd3ffff     call sym.re_string_context_at
0x0000bef5      4939ec         cmp r12, rbp
0x0000bef8      4189c5         mov r13d, eax
0x0000befb      0f84d2030000   je 0xc2d3
0x0000bf01      4b8b2ce6       mov rbp, qword [r14 + r12*8]
0x0000bf05      4885ed         test rbp, rbp
0x0000bf08      740a           je 0xbf14
0x0000bf0a      f6456840       test byte [rbp + 0x68], 0x40
0x0000bf0e      0f851c050000   jne 0xc430
0x0000bf14      660fefc0       pxor xmm0, xmm0
0x0000bf18      48c78424a000.  mov qword [rsp + 0xa0], 0
0x0000bf24      0f2984249000.  movaps xmmword [rsp + 0x90], xmm0
0x0000bf2c      4c3b642440     cmp r12, qword [rsp + 0x40]
0x0000bf31      0f8d21030000   jge 0xc258
0x0000bf37      418b8fe00000.  mov ecx, dword [r15 + 0xe0]
0x0000bf3e      85c9           test ecx, ecx
0x0000bf40      0f8812030000   js 0xc258
0x0000bf46      488d9c249000.  lea rbx, [rsp + 0x90]
0x0000bf4e      4a8d04e50800.  lea rax, [r12*8 + 8]
0x0000bf56      4c892424       mov qword [rsp], r12
0x0000bf5a      48c744242000.  mov qword [rsp + 0x20], 0
0x0000bf63      48895c2408     mov qword [rsp + 8], rbx
0x0000bf68      488d9c24b000.  lea rbx, [rsp + 0xb0]
0x0000bf70      4889442410     mov qword [rsp + 0x10], rax
0x0000bf75      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x0000bf7c      48895c2418     mov qword [rsp + 0x18], rbx
0x0000bf81      488d9c248c00.  lea rbx, [rsp + 0x8c]
0x0000bf89      48895c2458     mov qword [rsp + 0x58], rbx
0x0000bf8e      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0000bf93      48c784249800.  mov qword [rsp + 0x98], 0
0x0000bf9f      488b3408       mov rsi, qword [rax + rcx]
0x0000bfa3      4885f6         test rsi, rsi
0x0000bfa6      0f84bc030000   je 0xc368
0x0000bfac      488b7c2408     mov rdi, qword [rsp + 8]
0x0000bfb1      4883c608       add rsi, 8
0x0000bfb5      e886b9ffff     call sym.re_node_set_merge
0x0000bfba      85c0           test eax, eax
0x0000bfbc      898424880000.  mov dword [rsp + 0x88], eax
0x0000bfc3      0f85d7030000   jne 0xc3a0
0x0000bfc9      4885ed         test rbp, rbp
0x0000bfcc      0f84a6010000   je 0xc178
0x0000bfd2      48837d2800     cmp qword [rbp + 0x28], 0
0x0000bfd7      488b442418     mov rax, qword [rsp + 0x18]
0x0000bfdc      660fefc0       pxor xmm0, xmm0
0x0000bfe0      4d8ba7980000.  mov r12, qword [r15 + 0x98]
0x0000bfe7      c784248c0000.  mov dword [rsp + 0x8c], 0
0x0000bff2      48c740100000.  mov qword [rax + 0x10], 0
0x0000bffa      0f2900         movaps xmmword [rax], xmm0
0x0000bffd      0f8e2d050000   jle 0xc530
0x0000c003      498d8424d800.  lea rax, [r12 + 0xd8]
0x0000c00b      31db           xor ebx, ebx
0x0000c00d      4889442428     mov qword [rsp + 0x28], rax
0x0000c012      eb45           jmp 0xc059
0x0000c014      0f1f4000       nop dword [rax]
0x0000c018      488b1424       mov rdx, qword [rsp]
0x0000c01c      4c89ff         mov rdi, r15
0x0000c01f      e8ccd2ffff     call sym.check_node_accept
0x0000c024      84c0           test al, al
0x0000c026      7423           je 0xc04b
0x0000c028      4e8d2cf50000.  lea r13, [r14*8]
0x0000c030      498b442418     mov rax, qword [r12 + 0x18]
0x0000c035      488b7c2408     mov rdi, qword [rsp + 8]
0x0000c03a      4a8b3428       mov rsi, qword [rax + r13]
0x0000c03e      e89d9effff     call sym.re_node_set_insert
0x0000c043      84c0           test al, al
0x0000c045      0f843d030000   je 0xc388
0x0000c04b      4883c301       add rbx, 1
0x0000c04f      483b5d28       cmp rbx, qword [rbp + 0x28]
0x0000c053      0f8d87030000   jge 0xc3e0
0x0000c059      488b4530       mov rax, qword [rbp + 0x30]
0x0000c05d      498b3c24       mov rdi, qword [r12]
0x0000c061      4c8b34d8       mov r14, qword [rax + rbx*8]
0x0000c065      4d89f5         mov r13, r14
0x0000c068      49c1e504       shl r13, 4
0x0000c06c      4a8d342f       lea rsi, [rdi + r13]
0x0000c070      f6460a10       test byte [rsi + 0xa], 0x10
0x0000c074      74a2           je 0xc018
0x0000c076      4c8b0424       mov r8, qword [rsp]
0x0000c07a      488b742428     mov rsi, qword [rsp + 0x28]
0x0000c07f      4c89f9         mov rcx, r15
0x0000c082      4c89f2         mov rdx, r14
0x0000c085      e846fbffff     call sym.check_node_accept_bytes.isra.31
0x0000c08a      83f801         cmp eax, 1
0x0000c08d      0f8ebd020000   jle 0xc350
0x0000c093      4898           cdqe
0x0000c095      48030424       add rax, qword [rsp]
0x0000c099      498b542418     mov rdx, qword [r12 + 0x18]
0x0000c09e      4e8d2cf50000.  lea r13, [r14*8]
0x0000c0a6      4a8b14f2       mov rdx, qword [rdx + r14*8]
0x0000c0aa      4889c1         mov rcx, rax
0x0000c0ad      4889442438     mov qword [rsp + 0x38], rax
0x0000c0b2      4c8d34c50000.  lea r14, [rax*8]
0x0000c0ba      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x0000c0c1      488b34c8       mov rsi, qword [rax + rcx*8]
0x0000c0c5      48c78424b800.  mov qword [rsp + 0xb8], 0
0x0000c0d1      4885f6         test rsi, rsi
0x0000c0d4      7423           je 0xc0f9
0x0000c0d6      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000c0db      4883c608       add rsi, 8
0x0000c0df      4889542450     mov qword [rsp + 0x50], rdx
0x0000c0e4      e857b8ffff     call sym.re_node_set_merge
0x0000c0e9      85c0           test eax, eax
0x0000c0eb      8984248c0000.  mov dword [rsp + 0x8c], eax
0x0000c0f2      488b542450     mov rdx, qword [rsp + 0x50]
0x0000c0f7      7557           jne 0xc150
0x0000c0f9      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000c0fe      4889d6         mov rsi, rdx
0x0000c101      e8da9dffff     call sym.re_node_set_insert
0x0000c106      84c0           test al, al
0x0000c108      0f847a020000   je 0xc388
0x0000c10e      4d03b7b80000.  add r14, qword [r15 + 0xb8]
0x0000c115      488b542418     mov rdx, qword [rsp + 0x18]
0x0000c11a      4c89e6         mov rsi, r12
0x0000c11d      488b7c2458     mov rdi, qword [rsp + 0x58]
0x0000c122      e809c9ffff     call sym.re_acquire_state
0x0000c127      488b542438     mov rdx, qword [rsp + 0x38]
0x0000c12c      498906         mov qword [r14], rax
0x0000c12f      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x0000c136      48833cd000     cmp qword [rax + rdx*8], 0
0x0000c13b      0f85effeffff   jne 0xc030
0x0000c141      8b94248c0000.  mov edx, dword [rsp + 0x8c]
0x0000c148      85d2           test edx, edx
0x0000c14a      0f84e0feffff   je 0xc030
0x0000c150      488bbc24c000.  mov rdi, qword [rsp + 0xc0]
0x0000c158      e82357ffff     call sym.imp.free
0x0000c15d      8b84248c0000.  mov eax, dword [rsp + 0x8c]
0x0000c164      85c0           test eax, eax
0x0000c166      898424880000.  mov dword [rsp + 0x88], eax
0x0000c16d      0f852d020000   jne 0xc3a0
0x0000c173      0f1f440000     nop dword [rax + rax]
0x0000c178      488b0424       mov rax, qword [rsp]
0x0000c17c      4883bc249800.  cmp qword [rsp + 0x98], 0
0x0000c185      488d5801       lea rbx, [rax + 1]
0x0000c189      4989dc         mov r12, rbx
0x0000c18c      7456           je 0xc1e4
0x0000c18e      8b8c24100100.  mov ecx, dword [rsp + 0x110]
0x0000c195      488b542448     mov rdx, qword [rsp + 0x48]
0x0000c19a      488b742408     mov rsi, qword [rsp + 8]
0x0000c19f      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000c1a4      e827bcffff     call sym.check_arrival_expand_ecl
0x0000c1a9      85c0           test eax, eax
0x0000c1ab      898424880000.  mov dword [rsp + 0x88], eax
0x0000c1b2      0f85e8010000   jne 0xc3a0
0x0000c1b8      448b84241001.  mov r8d, dword [rsp + 0x110]
0x0000c1c0      488b4c2448     mov rcx, qword [rsp + 0x48]
0x0000c1c5      4889da         mov rdx, rbx
0x0000c1c8      488b742408     mov rsi, qword [rsp + 8]
0x0000c1cd      4c89ff         mov rdi, r15
0x0000c1d0      e83bcbffff     call sym.expand_bkref_cache
0x0000c1d5      85c0           test eax, eax
0x0000c1d7      898424880000.  mov dword [rsp + 0x88], eax
0x0000c1de      0f85bc010000   jne 0xc3a0
0x0000c1e4      418b97a00000.  mov edx, dword [r15 + 0xa0]
0x0000c1eb      488b3424       mov rsi, qword [rsp]
0x0000c1ef      4c89ff         mov rdi, r15
0x0000c1f2      e809d0ffff     call sym.re_string_context_at
0x0000c1f7      488b542408     mov rdx, qword [rsp + 8]
0x0000c1fc      488b742430     mov rsi, qword [rsp + 0x30]
0x0000c201      488dbc248800.  lea rdi, [rsp + 0x88]
0x0000c209      89c1           mov ecx, eax
0x0000c20b      e860c5ffff     call sym.re_acquire_state_context
0x0000c210      4885c0         test rax, rax
0x0000c213      4889c5         mov rbp, rax
0x0000c216      0f84e4010000   je 0xc400
0x0000c21c      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x0000c223      488b542410     mov rdx, qword [rsp + 0x10]
0x0000c228      48c744242000.  mov qword [rsp + 0x20], 0
0x0000c231      48892c10       mov qword [rax + rdx], rbp
0x0000c235      48395c2440     cmp qword [rsp + 0x40], rbx
0x0000c23a      7e1c           jle 0xc258
0x0000c23c      496397e00000.  movsxd rdx, dword [r15 + 0xe0]
0x0000c243      488344241008   add qword [rsp + 0x10], 8
0x0000c249      483b542420     cmp rdx, qword [rsp + 0x20]
0x0000c24e      48891c24       mov qword [rsp], rbx
0x0000c252      0f8d36fdffff   jge 0xbf8e
0x0000c258      488bbc24a000.  mov rdi, qword [rsp + 0xa0]
0x0000c260      e81b56ffff     call sym.imp.free
0x0000c265      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x0000c26c      488b5c2440     mov rbx, qword [rsp + 0x40]
0x0000c271      488b04d8       mov rax, qword [rax + rbx*8]
0x0000c275      4885c0         test rax, rax
0x0000c278      0f84d7020000   je 0xc555
0x0000c27e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x0000c283      488b542478     mov rdx, qword [rsp + 0x78]
0x0000c288      488d7018       lea rsi, [rax + 0x18]
0x0000c28c      4c8923         mov qword [rbx], r12
0x0000c28f      488b5c2468     mov rbx, qword [rsp + 0x68]
0x0000c294      49899fb80000.  mov qword [r15 + 0xb8], rbx
0x0000c29b      488b5c2470     mov rbx, qword [rsp + 0x70]
0x0000c2a0      49895f48       mov qword [r15 + 0x48], rbx
0x0000c2a4      488b7810       mov rdi, qword [rax + 0x10]
0x0000c2a8      e873b1ffff     call sym.re_node_set_contains.isra.3
0x0000c2ad      4885c0         test rax, rax
0x0000c2b0      0f94c0         sete al
0x0000c2b3      0fb6c0         movzx eax, al
0x0000c2b6      e9f9000000     jmp 0xc3b4
0x0000c2bb      0f1f440000     nop dword [rax + rax]
0x0000c2c0      488d75ff       lea rsi, [rbp - 1]
0x0000c2c4      49896f48       mov qword [r15 + 0x48], rbp
0x0000c2c8      4c89ff         mov rdi, r15
0x0000c2cb      e830cfffff     call sym.re_string_context_at
0x0000c2d0      4189c5         mov r13d, eax
0x0000c2d3      bf08000000     mov edi, 8
0x0000c2d8      48c784249000.  mov qword [rsp + 0x90], 1
0x0000c2e4      48c784249800.  mov qword [rsp + 0x98], 1
0x0000c2f0      e8cb57ffff     call sym.imp.malloc
0x0000c2f5      4885c0         test rax, rax
0x0000c2f8      48898424a000.  mov qword [rsp + 0xa0], rax
0x0000c300      0f8445020000   je 0xc54b
0x0000c306      488918         mov qword [rax], rbx
0x0000c309      8b8c24100100.  mov ecx, dword [rsp + 0x110]
0x0000c310      488d9c249000.  lea rbx, [rsp + 0x90]
0x0000c318      488b542448     mov rdx, qword [rsp + 0x48]
0x0000c31d      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000c322      4989ec         mov r12, rbp
0x0000c325      4889de         mov rsi, rbx
0x0000c328      c78424880000.  mov dword [rsp + 0x88], 0
0x0000c333      e898baffff     call sym.check_arrival_expand_ecl
0x0000c338      85c0           test eax, eax
0x0000c33a      898424880000.  mov dword [rsp + 0x88], eax
0x0000c341      0f8416010000   je 0xc45d
0x0000c347      eb57           jmp 0xc3a0
0x0000c349      0f1f80000000.  nop dword [rax]
0x0000c350      85c0           test eax, eax
0x0000c352      0f85d0fcffff   jne 0xc028
0x0000c358      498b3424       mov rsi, qword [r12]
0x0000c35c      4c01ee         add rsi, r13
0x0000c35f      e9b4fcffff     jmp 0xc018
0x0000c364      0f1f4000       nop dword [rax]
0x0000c368      4885ed         test rbp, rbp
0x0000c36b      0f8561fcffff   jne 0xbfd2
0x0000c371      488b0424       mov rax, qword [rsp]
0x0000c375      488d5801       lea rbx, [rax + 1]
0x0000c379      4989dc         mov r12, rbx
0x0000c37c      e963feffff     jmp 0xc1e4
0x0000c381      0f1f80000000.  nop dword [rax]
0x0000c388      488bbc24c000.  mov rdi, qword [rsp + 0xc0]
0x0000c390      e8eb54ffff     call sym.imp.free
0x0000c395      c78424880000.  mov dword [rsp + 0x88], 0xc             ; [0xc:4]=0
0x0000c3a0      488bbc24a000.  mov rdi, qword [rsp + 0xa0]
0x0000c3a8      e8d354ffff     call sym.imp.free
0x0000c3ad      8b8424880000.  mov eax, dword [rsp + 0x88]
0x0000c3b4      488b9c24c800.  mov rbx, qword [rsp + 0xc8]
0x0000c3bc      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000c3c5      0f85b1010000   jne 0xc57c
0x0000c3cb      4881c4d80000.  add rsp, 0xd8
0x0000c3d2      5b             pop rbx
0x0000c3d3      5d             pop rbp
0x0000c3d4      415c           pop r12
0x0000c3d6      415d           pop r13
0x0000c3d8      415e           pop r14
0x0000c3da      415f           pop r15
0x0000c3dc      c3             ret
0x0000c3dd      0f1f00         nop dword [rax]
0x0000c3e0      488bbc24c000.  mov rdi, qword [rsp + 0xc0]
0x0000c3e8      e89354ffff     call sym.imp.free
0x0000c3ed      c78424880000.  mov dword [rsp + 0x88], 0
0x0000c3f8      e97bfdffff     jmp 0xc178
0x0000c3fd      0f1f00         nop dword [rax]
0x0000c400      8b8424880000.  mov eax, dword [rsp + 0x88]
0x0000c407      85c0           test eax, eax
0x0000c409      7595           jne 0xc3a0
0x0000c40b      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x0000c412      488b542410     mov rdx, qword [rsp + 0x10]
0x0000c417      488344242001   add qword [rsp + 0x20], 1
0x0000c41d      48c704100000.  mov qword [rax + rdx], 0
0x0000c425      e90bfeffff     jmp 0xc235
0x0000c42a      660f1f440000   nop word [rax + rax]
0x0000c430      488d9c249000.  lea rbx, [rsp + 0x90]
0x0000c438      488d7508       lea rsi, [rbp + 8]
0x0000c43c      4889df         mov rdi, rbx
0x0000c43f      e83cc1ffff     call sym.re_node_set_init_copy
0x0000c444      85c0           test eax, eax
0x0000c446      898424880000.  mov dword [rsp + 0x88], eax
0x0000c44d      0f8561ffffff   jne 0xc3b4
0x0000c453      f6456840       test byte [rbp + 0x68], 0x40
0x0000c457      0f84cffaffff   je 0xbf2c
0x0000c45d      4883bc249800.  cmp qword [rsp + 0x98], 0
0x0000c466      742a           je 0xc492
0x0000c468      448b84241001.  mov r8d, dword [rsp + 0x110]
0x0000c470      488b4c2448     mov rcx, qword [rsp + 0x48]
0x0000c475      4c89e2         mov rdx, r12
0x0000c478      4889de         mov rsi, rbx
0x0000c47b      4c89ff         mov rdi, r15
0x0000c47e      e88dc8ffff     call sym.expand_bkref_cache
0x0000c483      85c0           test eax, eax
0x0000c485      898424880000.  mov dword [rsp + 0x88], eax
0x0000c48c      0f850effffff   jne 0xc3a0
0x0000c492      488b742430     mov rsi, qword [rsp + 0x30]
0x0000c497      488dbc248800.  lea rdi, [rsp + 0x88]
0x0000c49f      4489e9         mov ecx, r13d
0x0000c4a2      4889da         mov rdx, rbx
0x0000c4a5      e8c6c2ffff     call sym.re_acquire_state_context
0x0000c4aa      4885c0         test rax, rax
0x0000c4ad      4889c5         mov rbp, rax
0x0000c4b0      0f8481000000   je 0xc537
0x0000c4b6      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x0000c4bd      4a892ce0       mov qword [rax + r12*8], rbp
0x0000c4c1      e966faffff     jmp 0xbf2c
0x0000c4c6      4c8d6001       lea r12, [rax + 1]
0x0000c4ca      48b8ffffffff.  movabs rax, 0x7fffffffffffffff          ; 9223372036854775807
0x0000c4d4      4c29e8         sub rax, r13
0x0000c4d7      4c39e0         cmp rax, r12
0x0000c4da      7c6f           jl 0xc54b
0x0000c4dc      4f8d742500     lea r14, [r13 + r12]
0x0000c4e1      48b8ffffffff.  movabs rax, 0x1fffffffffffffff          ; 2305843009213693951
0x0000c4eb      4939c6         cmp r14, rax
0x0000c4ee      775b           ja 0xc54b
0x0000c4f0      488b442460     mov rax, qword [rsp + 0x60]
0x0000c4f5      4a8d34f50000.  lea rsi, [r14*8]
0x0000c4fd      488b7810       mov rdi, qword [rax + 0x10]
0x0000c501      e82a56ffff     call sym.imp.realloc
0x0000c506      4885c0         test rax, rax
0x0000c509      7440           je 0xc54b
0x0000c50b      488b4c2460     mov rcx, qword [rsp + 0x60]
0x0000c510      4a8d14e50000.  lea rdx, [r12*8]
0x0000c518      4a8d3ce8       lea rdi, [rax + r13*8]
0x0000c51c      31f6           xor esi, esi
0x0000c51e      48894110       mov qword [rcx + 0x10], rax
0x0000c522      4c897108       mov qword [rcx + 8], r14
0x0000c526      e8e554ffff     call sym.imp.memset
0x0000c52b      e97cf9ffff     jmp 0xbeac
0x0000c530      31ff           xor edi, edi
0x0000c532      e9b1feffff     jmp 0xc3e8
0x0000c537      8bb424880000.  mov esi, dword [rsp + 0x88]
0x0000c53e      85f6           test esi, esi
0x0000c540      0f8470ffffff   je 0xc4b6
0x0000c546      e955feffff     jmp 0xc3a0
0x0000c54b      b80c000000     mov eax, 0xc
0x0000c550      e95ffeffff     jmp 0xc3b4
0x0000c555      488b442460     mov rax, qword [rsp + 0x60]
0x0000c55a      4c8920         mov qword [rax], r12
0x0000c55d      488b442468     mov rax, qword [rsp + 0x68]
0x0000c562      498987b80000.  mov qword [r15 + 0xb8], rax
0x0000c569      488b442470     mov rax, qword [rsp + 0x70]
0x0000c56e      49894748       mov qword [r15 + 0x48], rax
0x0000c572      b801000000     mov eax, 1
0x0000c577      e938feffff     jmp 0xc3b4
0x0000c57c      e80f54ffff     call sym.imp.__stack_chk_fail
0x0000c581      0f1f440000     nop dword [rax + rax]
0x0000c586      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_regs:
0x0000c590      55             push rbp
0x0000c591      4889e5         mov rbp, rsp
0x0000c594      4157           push r15
0x0000c596      4156           push r14
0x0000c598      4155           push r13
0x0000c59a      4154           push r12
0x0000c59c      4989cd         mov r13, rcx
0x0000c59f      53             push rbx
0x0000c5a0      4989f4         mov r12, rsi
0x0000c5a3      4881ecb80000.  sub rsp, 0xb8
0x0000c5aa      48899568ffff.  mov qword [rbp - 0x98], rdx
0x0000c5b1      48c745b00000.  mov qword [rbp - 0x50], 0
0x0000c5b9      64488b042528.  mov rax, qword fs:[0x28]
0x0000c5c2      488945c8       mov qword [rbp - 0x38], rax
0x0000c5c6      31c0           xor eax, eax
0x0000c5c8      488b07         mov rax, qword [rdi]
0x0000c5cb      4584c0         test r8b, r8b
0x0000c5ce      48c745b80200.  mov qword [rbp - 0x48], 2
0x0000c5d6      48c745c00000.  mov qword [rbp - 0x40], 0
0x0000c5de      48898570ffff.  mov qword [rbp - 0x90], rax
0x0000c5e5      0f84a2070000   je 0xcd8d
0x0000c5eb      bf60000000     mov edi, 0x60                           ; '`'
0x0000c5f0      e8cb54ffff     call sym.imp.malloc
0x0000c5f5      488d4db0       lea rcx, [rbp - 0x50]
0x0000c5f9      4885c0         test rax, rax
0x0000c5fc      488945c0       mov qword [rbp - 0x40], rax
0x0000c600      48898d78ffff.  mov qword [rbp - 0x88], rcx
0x0000c607      0f841f070000   je 0xcd2c
0x0000c60d      488b8570ffff.  mov rax, qword [rbp - 0x90]
0x0000c614      660fefc0       pxor xmm0, xmm0
0x0000c618      48c745a00000.  mov qword [rbp - 0x60], 0
0x0000c620      488b98900000.  mov rbx, qword [rax + 0x90]
0x0000c627      488b8568ffff.  mov rax, qword [rbp - 0x98]
0x0000c62e      0f294590       movaps xmmword [rbp - 0x70], xmm0
0x0000c632      48c1e004       shl rax, 4
0x0000c636      483dbf0f0000   cmp rax, 0xfbf
0x0000c63c      48898548ffff.  mov qword [rbp - 0xb8], rax
0x0000c643      0f87ed060000   ja 0xcd36
0x0000c649      4883c010       add rax, 0x10
0x0000c64d      c68537ffffff.  mov byte [rbp - 0xc9], 0
0x0000c654      4829c4         sub rsp, rax
0x0000c657      488d44240f     lea rax, [rsp + 0xf]
0x0000c65c      4883e0f0       and rax, 0xfffffffffffffff0
0x0000c660      48898540ffff.  mov qword [rbp - 0xc0], rax
0x0000c667      488b9548ffff.  mov rdx, qword [rbp - 0xb8]
0x0000c66e      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x0000c675      4c89ee         mov rsi, r13
0x0000c678      e81354ffff     call sym.imp.memcpy
0x0000c67d      488d4590       lea rax, [rbp - 0x70]
0x0000c681      498b4d00       mov rcx, qword [r13]
0x0000c685      48898558ffff.  mov qword [rbp - 0xa8], rax
0x0000c68c      4883c010       add rax, 0x10
0x0000c690      48894d88       mov qword [rbp - 0x78], rcx
0x0000c694      48898538ffff.  mov qword [rbp - 0xc8], rax
0x0000c69b      488d4588       lea rax, [rbp - 0x78]
0x0000c69f      48898550ffff.  mov qword [rbp - 0xb0], rax
0x0000c6a6      e9de000000     jmp 0xc789
0x0000c6ab      0f1f440000     nop dword [rax + rax]
0x0000c6b0      83fe09         cmp esi, 9
0x0000c6b3      0f84e7010000   je 0xc8a0
0x0000c6b9      4839c8         cmp rax, rcx
0x0000c6bc      750e           jne 0xc6cc
0x0000c6be      49399c24b000.  cmp qword [r12 + 0xb0], rbx
0x0000c6c6      0f84d4030000   je 0xcaa0
0x0000c6cc      4d8bb4249800.  mov r14, qword [r12 + 0x98]
0x0000c6d4      498b3e         mov rdi, qword [r14]
0x0000c6d7      4a8d340f       lea rsi, [rdi + r9]
0x0000c6db      0fb64608       movzx eax, byte [rsi + 8]
0x0000c6df      a808           test al, 8
0x0000c6e1      0f8509010000   jne 0xc7f0
0x0000c6e7      f6460a10       test byte [rsi + 0xa], 0x10
0x0000c6eb      0f85ff010000   jne 0xc8f0
0x0000c6f1      3c04           cmp al, 4
0x0000c6f3      0f8437020000   je 0xc930
0x0000c6f9      488b4d88       mov rcx, qword [rbp - 0x78]
0x0000c6fd      4889ca         mov rdx, rcx
0x0000c700      4c89e7         mov rdi, r12
0x0000c703      48898d60ffff.  mov qword [rbp - 0xa0], rcx
0x0000c70a      e8e1cbffff     call sym.check_node_accept
0x0000c70f      84c0           test al, al
0x0000c711      488b8d60ffff.  mov rcx, qword [rbp - 0xa0]
0x0000c718      0f844a040000   je 0xcb68
0x0000c71e      498b4618       mov rax, qword [r14 + 0x18]
0x0000c722      488d5101       lea rdx, [rcx + 1]
0x0000c726      4a8b1cf8       mov rbx, qword [rax + r15*8]
0x0000c72a      4883bd78ffff.  cmp qword [rbp - 0x88], 0
0x0000c732      48895588       mov qword [rbp - 0x78], rdx
0x0000c736      743c           je 0xc774
0x0000c738      493b9424a800.  cmp rdx, qword [r12 + 0xa8]
0x0000c740      0f8f30040000   jg 0xcb76
0x0000c746      498b8424b800.  mov rax, qword [r12 + 0xb8]
0x0000c74e      488b04d0       mov rax, qword [rax + rdx*8]
0x0000c752      4885c0         test rax, rax
0x0000c755      0f841b040000   je 0xcb76
0x0000c75b      488b7810       mov rdi, qword [rax + 0x10]
0x0000c75f      488d7018       lea rsi, [rax + 0x18]
0x0000c763      4889da         mov rdx, rbx
0x0000c766      e8b5acffff     call sym.re_node_set_contains.isra.3
0x0000c76b      4885c0         test rax, rax
0x0000c76e      0f8402040000   je 0xcb76
0x0000c774      48c745980000.  mov qword [rbp - 0x68], 0
0x0000c77c      4885db         test rbx, rbx
0x0000c77f      0f88d5030000   js 0xcb5a
0x0000c785      488b4d88       mov rcx, qword [rbp - 0x78]
0x0000c789      498b4508       mov rax, qword [r13 + 8]
0x0000c78d      4839c8         cmp rax, rcx
0x0000c790      0f8cea040000   jl 0xcc80
0x0000c796      488bbd70ffff.  mov rdi, qword [rbp - 0x90]
0x0000c79d      4989d9         mov r9, rbx
0x0000c7a0      4989df         mov r15, rbx
0x0000c7a3      49c1e104       shl r9, 4
0x0000c7a7      488b17         mov rdx, qword [rdi]
0x0000c7aa      4c01ca         add rdx, r9
0x0000c7ad      0fb67208       movzx esi, byte [rdx + 8]
0x0000c7b1      83fe08         cmp esi, 8
0x0000c7b4      0f85f6feffff   jne 0xc6b0
0x0000c7ba      488b12         mov rdx, qword [rdx]
0x0000c7bd      4883c201       add rdx, 1
0x0000c7c1      48399568ffff.  cmp qword [rbp - 0x98], rdx
0x0000c7c8      0f8eebfeffff   jle 0xc6b9
0x0000c7ce      48c1e204       shl rdx, 4
0x0000c7d2      4c01ea         add rdx, r13
0x0000c7d5      48c74208ffff.  mov qword [rdx + 8], 0xffffffffffffffff
0x0000c7dd      48890a         mov qword [rdx], rcx
0x0000c7e0      498b4508       mov rax, qword [r13 + 8]
0x0000c7e4      e9d0feffff     jmp 0xc6b9
0x0000c7e9      0f1f80000000.  nop dword [rax]
0x0000c7f0      498b8424b800.  mov rax, qword [r12 + 0xb8]
0x0000c7f8      488b5588       mov rdx, qword [rbp - 0x78]
0x0000c7fc      4889de         mov rsi, rbx
0x0000c7ff      488bbd58ffff.  mov rdi, qword [rbp - 0xa8]
0x0000c806      4c8b0cd0       mov r9, qword [rax + rdx*8]
0x0000c80a      498b4628       mov rax, qword [r14 + 0x28]
0x0000c80e      488d145b       lea rdx, [rbx + rbx*2]
0x0000c812      4c898d60ffff.  mov qword [rbp - 0xa0], r9
0x0000c819      4c8d3cd0       lea r15, [rax + rdx*8]
0x0000c81d      e8be96ffff     call sym.re_node_set_insert
0x0000c822      84c0           test al, al
0x0000c824      4c8b8d60ffff.  mov r9, qword [rbp - 0xa0]
0x0000c82b      0f84d7040000   je 0xcd08
0x0000c831      4d8b5708       mov r10, qword [r15 + 8]
0x0000c835      4d85d2         test r10, r10
0x0000c838      0f8e2a030000   jle 0xcb68
0x0000c83e      4d8b7f10       mov r15, qword [r15 + 0x10]
0x0000c842      4d8b5910       mov r11, qword [r9 + 0x10]
0x0000c846      4d8d7118       lea r14, [r9 + 0x18]
0x0000c84a      48c7c3ffffff.  mov rbx, 0xffffffffffffffff
0x0000c851      4531c9         xor r9d, r9d
0x0000c854      4c89a560ffff.  mov qword [rbp - 0xa0], r12
0x0000c85b      0f1f440000     nop dword [rax + rax]
0x0000c860      4f8b24cf       mov r12, qword [r15 + r9*8]
0x0000c864      4c89f6         mov rsi, r14
0x0000c867      4c89df         mov rdi, r11
0x0000c86a      4c89e2         mov rdx, r12
0x0000c86d      e8aeabffff     call sym.re_node_set_contains.isra.3
0x0000c872      4885c0         test rax, rax
0x0000c875      740d           je 0xc884
0x0000c877      4883fbff       cmp rbx, 0xffffffffffffffff
0x0000c87b      0f854f010000   jne 0xc9d0
0x0000c881      4c89e3         mov rbx, r12
0x0000c884      4983c101       add r9, 1
0x0000c888      4d39ca         cmp r10, r9
0x0000c88b      75d3           jne 0xc860
0x0000c88d      4c8ba560ffff.  mov r12, qword [rbp - 0xa0]
0x0000c894      e9e3feffff     jmp 0xc77c
0x0000c899      0f1f80000000.  nop dword [rax]
0x0000c8a0      488b3a         mov rdi, qword [rdx]
0x0000c8a3      488d7701       lea rsi, [rdi + 1]
0x0000c8a7      4839b568ffff.  cmp qword [rbp - 0x98], rsi
0x0000c8ae      0f8e05feffff   jle 0xc6b9
0x0000c8b4      48c1e604       shl rsi, 4
0x0000c8b8      498d443500     lea rax, [r13 + rsi]
0x0000c8bd      483908         cmp qword [rax], rcx
0x0000c8c0      0f8c7a030000   jl 0xcc40
0x0000c8c6      f6420a08       test byte [rdx + 0xa], 8
0x0000c8ca      7412           je 0xc8de
0x0000c8cc      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x0000c8d3      48833c37ff     cmp qword [rdi + rsi], 0xffffffffffffffff
0x0000c8d8      0f85ed030000   jne 0xcccb
0x0000c8de      48894808       mov qword [rax + 8], rcx
0x0000c8e2      498b4508       mov rax, qword [r13 + 8]
0x0000c8e6      e9cefdffff     jmp 0xc6b9
0x0000c8eb      0f1f440000     nop dword [rax + rax]
0x0000c8f0      4c8b4588       mov r8, qword [rbp - 0x78]
0x0000c8f4      498db6d80000.  lea rsi, [r14 + 0xd8]
0x0000c8fb      4c89e1         mov rcx, r12
0x0000c8fe      4889da         mov rdx, rbx
0x0000c901      4c898d60ffff.  mov qword [rbp - 0xa0], r9
0x0000c908      e8c3f2ffff     call sym.check_node_accept_bytes.isra.31
0x0000c90d      4863c8         movsxd rcx, eax
0x0000c910      4885c9         test rcx, rcx
0x0000c913      0f85f8010000   jne 0xcb11
0x0000c919      4c8b8d60ffff.  mov r9, qword [rbp - 0xa0]
0x0000c920      498b36         mov rsi, qword [r14]
0x0000c923      488b4d88       mov rcx, qword [rbp - 0x78]
0x0000c927      4c01ce         add rsi, r9
0x0000c92a      e9cefdffff     jmp 0xc6fd
0x0000c92f      90             nop
0x0000c930      488b06         mov rax, qword [rsi]
0x0000c933      4883c001       add rax, 1
0x0000c937      48c1e004       shl rax, 4
0x0000c93b      4c01e8         add rax, r13
0x0000c93e      488b5008       mov rdx, qword [rax + 8]
0x0000c942      488b38         mov rdi, qword [rax]
0x0000c945      4889d1         mov rcx, rdx
0x0000c948      4829f9         sub rcx, rdi
0x0000c94b      4883bd78ffff.  cmp qword [rbp - 0x88], 0
0x0000c953      0f84af010000   je 0xcb08
0x0000c959      4883ffff       cmp rdi, 0xffffffffffffffff
0x0000c95d      0f8413020000   je 0xcb76
0x0000c963      4883faff       cmp rdx, 0xffffffffffffffff
0x0000c967      0f8409020000   je 0xcb76
0x0000c96d      4885c9         test rcx, rcx
0x0000c970      0f844a020000   je 0xcbc0
0x0000c976      4c8b7d88       mov r15, qword [rbp - 0x78]
0x0000c97a      498b542430     mov rdx, qword [r12 + 0x30]
0x0000c97f      498b442408     mov rax, qword [r12 + 8]
0x0000c984      4c29fa         sub rdx, r15
0x0000c987      4839d1         cmp rcx, rdx
0x0000c98a      0f8fe6010000   jg 0xcb76
0x0000c990      4a8d3438       lea rsi, [rax + r15]
0x0000c994      4801c7         add rdi, rax
0x0000c997      4889ca         mov rdx, rcx
0x0000c99a      48898d60ffff.  mov qword [rbp - 0xa0], rcx
0x0000c9a1      e89a50ffff     call sym.imp.memcmp
0x0000c9a6      85c0           test eax, eax
0x0000c9a8      488b8d60ffff.  mov rcx, qword [rbp - 0xa0]
0x0000c9af      0f85c1010000   jne 0xcb76
0x0000c9b5      498b4618       mov rax, qword [r14 + 0x18]
0x0000c9b9      498d140f       lea rdx, [r15 + rcx]
0x0000c9bd      488b1cd8       mov rbx, qword [rax + rbx*8]
0x0000c9c1      e964fdffff     jmp 0xc72a
0x0000c9c6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000c9d0      488bb538ffff.  mov rsi, qword [rbp - 0xc8]
0x0000c9d7      488b7d98       mov rdi, qword [rbp - 0x68]
0x0000c9db      4889da         mov rdx, rbx
0x0000c9de      4d89e6         mov r14, r12
0x0000c9e1      4c8ba560ffff.  mov r12, qword [rbp - 0xa0]
0x0000c9e8      e833aaffff     call sym.re_node_set_contains.isra.3
0x0000c9ed      4885c0         test rax, rax
0x0000c9f0      0f85ba010000   jne 0xcbb0
0x0000c9f6      488b8d78ffff.  mov rcx, qword [rbp - 0x88]
0x0000c9fd      4885c9         test rcx, rcx
0x0000ca00      0f8476fdffff   je 0xc77c
0x0000ca06      4c8b39         mov r15, qword [rcx]
0x0000ca09      488b5588       mov rdx, qword [rbp - 0x78]
0x0000ca0d      498d4701       lea rax, [r15 + 1]
0x0000ca11      483b4108       cmp rax, qword [rcx + 8]
0x0000ca15      488901         mov qword [rcx], rax
0x0000ca18      0f847f030000   je 0xcd9d
0x0000ca1e      488b4110       mov rax, qword [rcx + 0x10]
0x0000ca22      4f8d3c7f       lea r15, [r15 + r15*2]
0x0000ca26      49c1e704       shl r15, 4
0x0000ca2a      4901c7         add r15, rax
0x0000ca2d      4d897708       mov qword [r15 + 8], r14
0x0000ca31      4c8bb548ffff.  mov r14, qword [rbp - 0xb8]
0x0000ca38      498917         mov qword [r15], rdx
0x0000ca3b      4c89f7         mov rdi, r14
0x0000ca3e      e87d50ffff     call sym.imp.malloc
0x0000ca43      4885c0         test rax, rax
0x0000ca46      49894710       mov qword [r15 + 0x10], rax
0x0000ca4a      7426           je 0xca72
0x0000ca4c      4c89f2         mov rdx, r14
0x0000ca4f      4c89ee         mov rsi, r13
0x0000ca52      4889c7         mov rdi, rax
0x0000ca55      e83650ffff     call sym.imp.memcpy
0x0000ca5a      488bb558ffff.  mov rsi, qword [rbp - 0xa8]
0x0000ca61      498d7f18       lea rdi, [r15 + 0x18]
0x0000ca65      e816bbffff     call sym.re_node_set_init_copy
0x0000ca6a      85c0           test eax, eax
0x0000ca6c      0f840afdffff   je 0xc77c
0x0000ca72      488b7da0       mov rdi, qword [rbp - 0x60]
0x0000ca76      e8054effff     call sym.imp.free
0x0000ca7b      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x0000ca82      0f8593030000   jne 0xce1b
0x0000ca88      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x0000ca8f      e84ce0ffff     call sym.free_fail_stack_return.part.24
0x0000ca94      b80c000000     mov eax, 0xc
0x0000ca99      e90b020000     jmp 0xcca9
0x0000ca9e      6690           nop
0x0000caa0      4883bd78ffff.  cmp qword [rbp - 0x88], 0
0x0000caa8      0f842e030000   je 0xcddc
0x0000caae      488b8d68ffff.  mov rcx, qword [rbp - 0x98]
0x0000cab5      4885c9         test rcx, rcx
0x0000cab8      7420           je 0xcada
0x0000caba      4c89e8         mov rax, r13
0x0000cabd      31d2           xor edx, edx
0x0000cabf      90             nop
0x0000cac0      48833800       cmp qword [rax], 0
0x0000cac4      7807           js 0xcacd
0x0000cac6      48837808ff     cmp qword [rax + 8], 0xffffffffffffffff
0x0000cacb      7453           je 0xcb20
0x0000cacd      4883c201       add rdx, 1
0x0000cad1      4883c010       add rax, 0x10
0x0000cad5      4839d1         cmp rcx, rdx
0x0000cad8      75e6           jne 0xcac0
0x0000cada      488b7da0       mov rdi, qword [rbp - 0x60]
0x0000cade      e89d4dffff     call sym.imp.free
0x0000cae3      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x0000caea      0f8574030000   jne 0xce64
0x0000caf0      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x0000caf7      e8e4dfffff     call sym.free_fail_stack_return.part.24
0x0000cafc      31c0           xor eax, eax
0x0000cafe      e9a6010000     jmp 0xcca9
0x0000cb03      0f1f440000     nop dword [rax + rax]
0x0000cb08      4885c9         test rcx, rcx
0x0000cb0b      0f84af000000   je 0xcbc0
0x0000cb11      4c8b7d88       mov r15, qword [rbp - 0x78]
0x0000cb15      e99bfeffff     jmp 0xc9b5
0x0000cb1a      660f1f440000   nop word [rax + rax]
0x0000cb20      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x0000cb27      4c8b8d58ffff.  mov r9, qword [rbp - 0xa8]
0x0000cb2e      4d89e8         mov r8, r13
0x0000cb31      488b8d68ffff.  mov rcx, qword [rbp - 0x98]
0x0000cb38      488b9550ffff.  mov rdx, qword [rbp - 0xb0]
0x0000cb3f      488d7710       lea rsi, [rdi + 0x10]
0x0000cb43      e8e8dfffff     call sym.pop_fail_stack.isra.25
0x0000cb48      4989c1         mov r9, rax
0x0000cb4b      4889c3         mov rbx, rax
0x0000cb4e      4989c7         mov r15, rax
0x0000cb51      49c1e104       shl r9, 4
0x0000cb55      e972fbffff     jmp 0xc6cc
0x0000cb5a      4883fbfe       cmp rbx, 0xfffffffffffffffe
0x0000cb5e      0f84a4010000   je 0xcd08
0x0000cb64      0f1f4000       nop dword [rax]
0x0000cb68      4883bd78ffff.  cmp qword [rbp - 0x88], 0
0x0000cb70      0f84b6020000   je 0xce2c
0x0000cb76      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x0000cb7d      488b8d68ffff.  mov rcx, qword [rbp - 0x98]
0x0000cb84      488d5588       lea rdx, [rbp - 0x78]
0x0000cb88      4c8b8d58ffff.  mov r9, qword [rbp - 0xa8]
0x0000cb8f      4d89e8         mov r8, r13
0x0000cb92      488d7710       lea rsi, [rdi + 0x10]
0x0000cb96      e895dfffff     call sym.pop_fail_stack.isra.25
0x0000cb9b      488b4d88       mov rcx, qword [rbp - 0x78]
0x0000cb9f      4889c3         mov rbx, rax
0x0000cba2      e9f4faffff     jmp 0xc69b
0x0000cba7      660f1f840000.  nop word [rax + rax]
0x0000cbb0      4c89f3         mov rbx, r14
0x0000cbb3      e9c4fbffff     jmp 0xc77c
0x0000cbb8      0f1f84000000.  nop dword [rax + rax]
0x0000cbc0      488bbd58ffff.  mov rdi, qword [rbp - 0xa8]
0x0000cbc7      4889de         mov rsi, rbx
0x0000cbca      4c898d60ffff.  mov qword [rbp - 0xa0], r9
0x0000cbd1      e80a93ffff     call sym.re_node_set_insert
0x0000cbd6      84c0           test al, al
0x0000cbd8      0f842a010000   je 0xcd08
0x0000cbde      498b5628       mov rdx, qword [r14 + 0x28]
0x0000cbe2      488d045b       lea rax, [rbx + rbx*2]
0x0000cbe6      488b4d88       mov rcx, qword [rbp - 0x78]
0x0000cbea      488d04c2       lea rax, [rdx + rax*8]
0x0000cbee      48898d28ffff.  mov qword [rbp - 0xd8], rcx
0x0000cbf5      488b4010       mov rax, qword [rax + 0x10]
0x0000cbf9      488b18         mov rbx, qword [rax]
0x0000cbfc      498b8424b800.  mov rax, qword [r12 + 0xb8]
0x0000cc04      488b04c8       mov rax, qword [rax + rcx*8]
0x0000cc08      4889da         mov rdx, rbx
0x0000cc0b      488b7810       mov rdi, qword [rax + 0x10]
0x0000cc0f      488d7018       lea rsi, [rax + 0x18]
0x0000cc13      e808a8ffff     call sym.re_node_set_contains.isra.3
0x0000cc18      4885c0         test rax, rax
0x0000cc1b      0f855bfbffff   jne 0xc77c
0x0000cc21      4c8b8d60ffff.  mov r9, qword [rbp - 0xa0]
0x0000cc28      498b36         mov rsi, qword [r14]
0x0000cc2b      488b8d28ffff.  mov rcx, qword [rbp - 0xd8]
0x0000cc32      4c01ce         add rsi, r9
0x0000cc35      e9c3faffff     jmp 0xc6fd
0x0000cc3a      660f1f440000   nop word [rax + rax]
0x0000cc40      488b9548ffff.  mov rdx, qword [rbp - 0xb8]
0x0000cc47      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x0000cc4e      4c89ee         mov rsi, r13
0x0000cc51      48894808       mov qword [rax + 8], rcx
0x0000cc55      4c898d28ffff.  mov qword [rbp - 0xd8], r9
0x0000cc5c      48898d60ffff.  mov qword [rbp - 0xa0], rcx
0x0000cc63      e8284effff     call sym.imp.memcpy
0x0000cc68      498b4508       mov rax, qword [r13 + 8]
0x0000cc6c      488b8d60ffff.  mov rcx, qword [rbp - 0xa0]
0x0000cc73      4c8b8d28ffff.  mov r9, qword [rbp - 0xd8]
0x0000cc7a      e93afaffff     jmp 0xc6b9
0x0000cc7f      90             nop
0x0000cc80      488b7da0       mov rdi, qword [rbp - 0x60]
0x0000cc84      e8f74bffff     call sym.imp.free
0x0000cc89      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x0000cc90      0f85d6000000   jne 0xcd6c
0x0000cc96      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x0000cc9d      4885ff         test rdi, rdi
0x0000cca0      7405           je 0xcca7
0x0000cca2      e839deffff     call sym.free_fail_stack_return.part.24
0x0000cca7      31c0           xor eax, eax
0x0000cca9      488b5dc8       mov rbx, qword [rbp - 0x38]
0x0000ccad      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000ccb6      0f85b9010000   jne 0xce75
0x0000ccbc      488d65d8       lea rsp, [rbp - 0x28]
0x0000ccc0      5b             pop rbx
0x0000ccc1      415c           pop r12
0x0000ccc3      415d           pop r13
0x0000ccc5      415e           pop r14
0x0000ccc7      415f           pop r15
0x0000ccc9      5d             pop rbp
0x0000ccca      c3             ret
0x0000cccb      488b9548ffff.  mov rdx, qword [rbp - 0xb8]
0x0000ccd2      4889fe         mov rsi, rdi
0x0000ccd5      4c89ef         mov rdi, r13
0x0000ccd8      48898d28ffff.  mov qword [rbp - 0xd8], rcx
0x0000ccdf      4c898d60ffff.  mov qword [rbp - 0xa0], r9
0x0000cce6      e8a54dffff     call sym.imp.memcpy
0x0000cceb      498b4508       mov rax, qword [r13 + 8]
0x0000ccef      4c8b8d60ffff.  mov r9, qword [rbp - 0xa0]
0x0000ccf6      488b8d28ffff.  mov rcx, qword [rbp - 0xd8]
0x0000ccfd      e9b7f9ffff     jmp 0xc6b9
0x0000cd02      660f1f440000   nop word [rax + rax]
0x0000cd08      488b7da0       mov rdi, qword [rbp - 0x60]
0x0000cd0c      e86f4bffff     call sym.imp.free
0x0000cd11      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x0000cd18      0f85fd000000   jne 0xce1b
0x0000cd1e      4883bd78ffff.  cmp qword [rbp - 0x88], 0
0x0000cd26      0f855cfdffff   jne 0xca88
0x0000cd2c      b80c000000     mov eax, 0xc
0x0000cd31      e973ffffff     jmp 0xcca9
0x0000cd36      488bbd48ffff.  mov rdi, qword [rbp - 0xb8]
0x0000cd3d      e87e4dffff     call sym.imp.malloc
0x0000cd42      4885c0         test rax, rax
0x0000cd45      48898540ffff.  mov qword [rbp - 0xc0], rax
0x0000cd4c      c68537ffffff.  mov byte [rbp - 0xc9], 1
0x0000cd53      0f850ef9ffff   jne 0xc667
0x0000cd59      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x0000cd60      4885ff         test rdi, rdi
0x0000cd63      74c7           je 0xcd2c
0x0000cd65      e876ddffff     call sym.free_fail_stack_return.part.24
0x0000cd6a      ebc0           jmp 0xcd2c
0x0000cd6c      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x0000cd73      e8084bffff     call sym.imp.free
0x0000cd78      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x0000cd7f      4885ff         test rdi, rdi
0x0000cd82      0f851affffff   jne 0xcca2
0x0000cd88      e91affffff     jmp 0xcca7
0x0000cd8d      48c78578ffff.  mov qword [rbp - 0x88], 0
0x0000cd98      e970f8ffff     jmp 0xc60d
0x0000cd9d      488d3440       lea rsi, [rax + rax*2]
0x0000cda1      488b8578ffff.  mov rax, qword [rbp - 0x88]
0x0000cda8      48899560ffff.  mov qword [rbp - 0xa0], rdx
0x0000cdaf      48c1e605       shl rsi, 5
0x0000cdb3      488b7810       mov rdi, qword [rax + 0x10]
0x0000cdb7      e8744dffff     call sym.imp.realloc
0x0000cdbc      4885c0         test rax, rax
0x0000cdbf      7444           je 0xce05
0x0000cdc1      488b8d78ffff.  mov rcx, qword [rbp - 0x88]
0x0000cdc8      488b9560ffff.  mov rdx, qword [rbp - 0xa0]
0x0000cdcf      48d16108       shl qword [rcx + 8], 1
0x0000cdd3      48894110       mov qword [rcx + 0x10], rax
0x0000cdd7      e946fcffff     jmp 0xca22
0x0000cddc      488b7da0       mov rdi, qword [rbp - 0x60]
0x0000cde0      e89b4affff     call sym.imp.free
0x0000cde5      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x0000cdec      0f84b5feffff   je 0xcca7
0x0000cdf2      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x0000cdf9      e8824affff     call sym.imp.free
0x0000cdfe      31c0           xor eax, eax
0x0000ce00      e9a4feffff     jmp 0xcca9
0x0000ce05      488b7da0       mov rdi, qword [rbp - 0x60]
0x0000ce09      e8724affff     call sym.imp.free
0x0000ce0e      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x0000ce15      0f846dfcffff   je 0xca88
0x0000ce1b      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x0000ce22      e8594affff     call sym.imp.free
0x0000ce27      e9f2feffff     jmp 0xcd1e
0x0000ce2c      488b7da0       mov rdi, qword [rbp - 0x60]
0x0000ce30      e84b4affff     call sym.imp.free
0x0000ce35      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x0000ce3c      b801000000     mov eax, 1
0x0000ce41      0f8462feffff   je 0xcca9
0x0000ce47      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x0000ce4e      898578ffffff   mov dword [rbp - 0x88], eax
0x0000ce54      e8274affff     call sym.imp.free
0x0000ce59      8b8578ffffff   mov eax, dword [rbp - 0x88]
0x0000ce5f      e945feffff     jmp 0xcca9
0x0000ce64      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x0000ce6b      e8104affff     call sym.imp.free
0x0000ce70      e97bfcffff     jmp 0xcaf0
0x0000ce75      e8164bffff     call sym.imp.__stack_chk_fail
0x0000ce7a      660f1f440000   nop word [rax + rax]
;-- get_subexp_sub.isra.32:
0x0000ce80      4157           push r15
0x0000ce82      4156           push r14
0x0000ce84      4989ce         mov r14, rcx
0x0000ce87      4155           push r13
0x0000ce89      4154           push r12
0x0000ce8b      4989f5         mov r13, rsi
0x0000ce8e      55             push rbp
0x0000ce8f      53             push rbx
0x0000ce90      488d7210       lea rsi, [rdx + 0x10]
0x0000ce94      4889d5         mov rbp, rdx
0x0000ce97      4d89c1         mov r9, r8
0x0000ce9a      4d89c4         mov r12, r8
0x0000ce9d      4883ec20       sub rsp, 0x20
0x0000cea1      488b4a08       mov rcx, qword [rdx + 8]
0x0000cea5      4d89f0         mov r8, r14
0x0000cea8      6a08           push 8
0x0000ceaa      488b12         mov rdx, qword [rdx]
0x0000cead      4889fb         mov rbx, rdi
0x0000ceb0      e87befffff     call sym.check_arrival
0x0000ceb5      85c0           test eax, eax
0x0000ceb7      5a             pop rdx
0x0000ceb8      59             pop rcx
0x0000ceb9      7415           je 0xced0
0x0000cebb      4883c418       add rsp, 0x18
0x0000cebf      5b             pop rbx
0x0000cec0      5d             pop rbp
0x0000cec1      415c           pop r12
0x0000cec3      415d           pop r13
0x0000cec5      415e           pop r14
0x0000cec7      415f           pop r15
0x0000cec9      c3             ret
0x0000ceca      660f1f440000   nop word [rax + rax]
0x0000ced0      488b83c80000.  mov rax, qword [rbx + 0xc8]
0x0000ced7      488b93d00000.  mov rdx, qword [rbx + 0xd0]
0x0000cede      4c8b7d08       mov r15, qword [rbp + 8]
0x0000cee2      498b4d00       mov rcx, qword [r13]
0x0000cee6      488bbbd80000.  mov rdi, qword [rbx + 0xd8]
0x0000ceed      4839d0         cmp rax, rdx
0x0000cef0      4c89fe         mov rsi, r15
0x0000cef3      0f8d97000000   jge 0xcf90
0x0000cef9      488d1480       lea rdx, [rax + rax*4]
0x0000cefd      48c1e203       shl rdx, 3
0x0000cf01      4885c0         test rax, rax
0x0000cf04      7e0b           jle 0xcf11
0x0000cf06      4c8d4417d8     lea r8, [rdi + rdx - 0x28]
0x0000cf0b      4d3b6008       cmp r12, qword [r8 + 8]
0x0000cf0f      746f           je 0xcf80
0x0000cf11      4801d7         add rdi, rdx
0x0000cf14      31d2           xor edx, edx
0x0000cf16      4939cf         cmp r15, rcx
0x0000cf19      0f94c2         sete dl
0x0000cf1c      4883c001       add rax, 1
0x0000cf20      4c8937         mov qword [rdi], r14
0x0000cf23      f7da           neg edx
0x0000cf25      4c896708       mov qword [rdi + 8], r12
0x0000cf29      48894f10       mov qword [rdi + 0x10], rcx
0x0000cf2d      66895722       mov word [rdi + 0x22], dx
0x0000cf31      4c897f18       mov qword [rdi + 0x18], r15
0x0000cf35      488983c80000.  mov qword [rbx + 0xc8], rax
0x0000cf3c      c6472000       mov byte [rdi + 0x20], 0
0x0000cf40      4c89f8         mov rax, r15
0x0000cf43      486393e00000.  movsxd rdx, dword [rbx + 0xe0]
0x0000cf4a      4829c8         sub rax, rcx
0x0000cf4d      4839c2         cmp rdx, rax
0x0000cf50      7d0a           jge 0xcf5c
0x0000cf52      4129cf         sub r15d, ecx
0x0000cf55      4489bbe00000.  mov dword [rbx + 0xe0], r15d
0x0000cf5c      4c01e6         add rsi, r12
0x0000cf5f      492b7500       sub rsi, qword [r13]
0x0000cf63      4883c418       add rsp, 0x18
0x0000cf67      4889df         mov rdi, rbx
0x0000cf6a      5b             pop rbx
0x0000cf6b      5d             pop rbp
0x0000cf6c      415c           pop r12
0x0000cf6e      415d           pop r13
0x0000cf70      415e           pop r14
0x0000cf72      415f           pop r15
0x0000cf74      e9379bffff     jmp sym.clean_state_log_if_needed
0x0000cf79      0f1f80000000.  nop dword [rax]
0x0000cf80      41c6402001     mov byte [r8 + 0x20], 1
0x0000cf85      eb8a           jmp 0xcf11
0x0000cf87      660f1f840000.  nop word [rax + rax]
0x0000cf90      488d3492       lea rsi, [rdx + rdx*4]
0x0000cf94      48894c2408     mov qword [rsp + 8], rcx
0x0000cf99      48c1e604       shl rsi, 4
0x0000cf9d      e88e4bffff     call sym.imp.realloc
0x0000cfa2      4885c0         test rax, rax
0x0000cfa5      488b4c2408     mov rcx, qword [rsp + 8]
0x0000cfaa      7454           je 0xd000
0x0000cfac      488bb3c80000.  mov rsi, qword [rbx + 0xc8]
0x0000cfb3      488b93d00000.  mov rdx, qword [rbx + 0xd0]
0x0000cfba      488983d80000.  mov qword [rbx + 0xd8], rax
0x0000cfc1      48894c2408     mov qword [rsp + 8], rcx
0x0000cfc6      488d34b6       lea rsi, [rsi + rsi*4]
0x0000cfca      488d1492       lea rdx, [rdx + rdx*4]
0x0000cfce      488d3cf0       lea rdi, [rax + rsi*8]
0x0000cfd2      48c1e203       shl rdx, 3
0x0000cfd6      31f6           xor esi, esi
0x0000cfd8      e8334affff     call sym.imp.memset
0x0000cfdd      48d1a3d00000.  shl qword [rbx + 0xd0], 1
0x0000cfe4      488b83c80000.  mov rax, qword [rbx + 0xc8]
0x0000cfeb      488bbbd80000.  mov rdi, qword [rbx + 0xd8]
0x0000cff2      488b7508       mov rsi, qword [rbp + 8]
0x0000cff6      488b4c2408     mov rcx, qword [rsp + 8]
0x0000cffb      e9f9feffff     jmp 0xcef9
0x0000d000      488bbbd80000.  mov rdi, qword [rbx + 0xd8]
0x0000d007      e87448ffff     call sym.imp.free
0x0000d00c      b80c000000     mov eax, 0xc
0x0000d011      e9a5feffff     jmp 0xcebb
0x0000d016      662e0f1f8400.  nop word cs:[rax + rax]
;-- transit_state_bkref.isra.34:
0x0000d020      4157           push r15
0x0000d022      4156           push r14
0x0000d024      4155           push r13
0x0000d026      4154           push r12
0x0000d028      55             push rbp
0x0000d029      53             push rbx
0x0000d02a      4881ecb80000.  sub rsp, 0xb8
0x0000d031      4c8b7f48       mov r15, qword [rdi + 0x48]
0x0000d035      64488b042528.  mov rax, qword fs:[0x28]
0x0000d03e      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000d046      31c0           xor eax, eax
0x0000d048      48833e00       cmp qword [rsi], 0
0x0000d04c      488b87980000.  mov rax, qword [rdi + 0x98]
0x0000d053      4889742448     mov qword [rsp + 0x48], rsi
0x0000d058      4889542440     mov qword [rsp + 0x40], rdx
0x0000d05d      4889442438     mov qword [rsp + 0x38], rax
0x0000d062      0f8e28030000   jle 0xd390
0x0000d068      4a8d04fd0000.  lea rax, [r15*8]
0x0000d070      4989fe         mov r14, rdi
0x0000d073      48c704240000.  mov qword [rsp], 0
0x0000d07b      4c897c2408     mov qword [rsp + 8], r15
0x0000d080      4889442460     mov qword [rsp + 0x60], rax
0x0000d085      488d84249000.  lea rax, [rsp + 0x90]
0x0000d08d      4889442468     mov qword [rsp + 0x68], rax
0x0000d092      488d84248c00.  lea rax, [rsp + 0x8c]
0x0000d09a      4889442478     mov qword [rsp + 0x78], rax
0x0000d09f      eb46           jmp 0xd0e7
0x0000d0a1      0f1f80000000.  nop dword [rax]
0x0000d0a8      a801           test al, 1
0x0000d0aa      7424           je 0xd0d0
0x0000d0ac      83e208         and edx, 8
0x0000d0af      751f           jne 0xd0d0
0x0000d0b1      f6c120         test cl, 0x20                           ; "@"
0x0000d0b4      7404           je 0xd0ba
0x0000d0b6      a802           test al, 2
0x0000d0b8      7416           je 0xd0d0
0x0000d0ba      81e180000000   and ecx, 0x80
0x0000d0c0      0f849a000000   je 0xd160
0x0000d0c6      a808           test al, 8
0x0000d0c8      0f8592000000   jne 0xd160
0x0000d0ce      6690           nop
0x0000d0d0      488b7c2448     mov rdi, qword [rsp + 0x48]
0x0000d0d5      4883042401     add qword [rsp], 1
0x0000d0da      488b0424       mov rax, qword [rsp]
0x0000d0de      483b07         cmp rax, qword [rdi]
0x0000d0e1      0f8da9020000   jge 0xd390
0x0000d0e7      488b442440     mov rax, qword [rsp + 0x40]
0x0000d0ec      488b3c24       mov rdi, qword [rsp]
0x0000d0f0      488b00         mov rax, qword [rax]
0x0000d0f3      4c8b2cf8       mov r13, qword [rax + rdi*8]
0x0000d0f7      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000d0fc      488b07         mov rax, qword [rdi]
0x0000d0ff      4c89eb         mov rbx, r13
0x0000d102      48c1e304       shl rbx, 4
0x0000d106      4801d8         add rax, rbx
0x0000d109      80780804       cmp byte [rax + 8], 4
0x0000d10d      75c1           jne 0xd0d0
0x0000d10f      8b6808         mov ebp, dword [rax + 8]
0x0000d112      f7c500ff0300   test ebp, 0x3ff00
0x0000d118      7446           je 0xd160
0x0000d11a      418b96a00000.  mov edx, dword [r14 + 0xa0]
0x0000d121      488b742408     mov rsi, qword [rsp + 8]
0x0000d126      4c89f7         mov rdi, r14
0x0000d129      e8d2c0ffff     call sym.re_string_context_at
0x0000d12e      89ea           mov edx, ebp
0x0000d130      c1ea08         shr edx, 8
0x0000d133      89d1           mov ecx, edx
0x0000d135      6681e1ff03     and cx, 0x3ff
0x0000d13a      f6c204         test dl, 4
0x0000d13d      0f8565ffffff   jne 0xd0a8
0x0000d143      83e208         and edx, 8
0x0000d146      0f8465ffffff   je 0xd0b1
0x0000d14c      a801           test al, 1
0x0000d14e      0f845dffffff   je 0xd0b1
0x0000d154      e977ffffff     jmp 0xd0d0
0x0000d159      0f1f80000000.  nop dword [rax]
0x0000d160      498bbec80000.  mov rdi, qword [r14 + 0xc8]
0x0000d167      498b86980000.  mov rax, qword [r14 + 0x98]
0x0000d16e      31c9           xor ecx, ecx
0x0000d170      4d8b5608       mov r10, qword [r14 + 8]
0x0000d174      4c8b4c2408     mov r9, qword [rsp + 8]
0x0000d179      48897c2470     mov qword [rsp + 0x70], rdi
0x0000d17e      4889442450     mov qword [rsp + 0x50], rax
0x0000d183      4839f9         cmp rcx, rdi
0x0000d186      7d53           jge 0xd1db
0x0000d188      488d0439       lea rax, [rcx + rdi]
0x0000d18c      4d8b9ed80000.  mov r11, qword [r14 + 0xd8]
0x0000d193      4889c6         mov rsi, rax
0x0000d196      48c1ee3f       shr rsi, 0x3f
0x0000d19a      4801c6         add rsi, rax
0x0000d19d      48d1fe         sar rsi, 1
0x0000d1a0      488d04b6       lea rax, [rsi + rsi*4]
0x0000d1a4      4d3b4cc308     cmp r9, qword [r11 + rax*8 + 8]
0x0000d1a9      7e2b           jle 0xd1d6
0x0000d1ab      e9c8010000     jmp 0xd378
0x0000d1b0      488d140e       lea rdx, [rsi + rcx]
0x0000d1b4      4889d0         mov rax, rdx
0x0000d1b7      48c1e83f       shr rax, 0x3f
0x0000d1bb      4801d0         add rax, rdx
0x0000d1be      48d1f8         sar rax, 1
0x0000d1c1      488d1480       lea rdx, [rax + rax*4]
0x0000d1c5      4989c0         mov r8, rax
0x0000d1c8      4d3b4cd308     cmp r9, qword [r11 + rdx*8 + 8]
0x0000d1cd      0f8fad010000   jg 0xd380
0x0000d1d3      4889c6         mov rsi, rax
0x0000d1d6      4839ce         cmp rsi, rcx
0x0000d1d9      7fd5           jg 0xd1b0
0x0000d1db      48394c2470     cmp qword [rsp + 0x70], rcx
0x0000d1e0      7e24           jle 0xd206
0x0000d1e2      498b96d80000.  mov rdx, qword [r14 + 0xd8]
0x0000d1e9      488d0489       lea rax, [rcx + rcx*4]
0x0000d1ed      488b7c2408     mov rdi, qword [rsp + 8]
0x0000d1f2      488d04c2       lea rax, [rdx + rax*8]
0x0000d1f6      48397808       cmp qword [rax + 8], rdi
0x0000d1fa      750a           jne 0xd206
0x0000d1fc      4883f9ff       cmp rcx, 0xffffffffffffffff
0x0000d200      0f85d0010000   jne 0xd3d6
0x0000d206      488b442450     mov rax, qword [rsp + 0x50]
0x0000d20b      4983bee80000.  cmp qword [r14 + 0xe8], 0
0x0000d213      488b10         mov rdx, qword [rax]
0x0000d216      488b041a       mov rax, qword [rdx + rbx]
0x0000d21a      4889442458     mov qword [rsp + 0x58], rax
0x0000d21f      0f8eb6010000   jle 0xd3db
0x0000d225      4c896c2430     mov qword [rsp + 0x30], r13
0x0000d22a      48c744242800.  mov qword [rsp + 0x28], 0
0x0000d233      4d89d5         mov r13, r10
0x0000d236      498b86f80000.  mov rax, qword [r14 + 0xf8]
0x0000d23d      488b5c2428     mov rbx, qword [rsp + 0x28]
0x0000d242      488b7c2458     mov rdi, qword [rsp + 0x58]
0x0000d247      488b1cd8       mov rbx, qword [rax + rbx*8]
0x0000d24b      488b4308       mov rax, qword [rbx + 8]
0x0000d24f      48c1e004       shl rax, 4
0x0000d253      483b3c02       cmp rdi, qword [rdx + rax]
0x0000d257      7427           je 0xd280
0x0000d259      488344242801   add qword [rsp + 0x28], 1
0x0000d25f      488b442428     mov rax, qword [rsp + 0x28]
0x0000d264      493b86e80000.  cmp rax, qword [r14 + 0xe8]
0x0000d26b      0f8d70060000   jge 0xd8e1
0x0000d271      488b442450     mov rax, qword [rsp + 0x50]
0x0000d276      488b10         mov rdx, qword [rax]
0x0000d279      ebbb           jmp 0xd236
0x0000d27b      0f1f440000     nop dword [rax + rax]
0x0000d280      48837b2000     cmp qword [rbx + 0x20], 0
0x0000d285      4c8b1b         mov r11, qword [rbx]
0x0000d288      0f8e64060000   jle 0xd8f2
0x0000d28e      488b4c2408     mov rcx, qword [rsp + 8]
0x0000d293      4d89e8         mov r8, r13
0x0000d296      31ed           xor ebp, ebp
0x0000d298      4989dd         mov r13, rbx
0x0000d29b      4889cb         mov rbx, rcx
0x0000d29e      eb6c           jmp 0xd30c
0x0000d2a0      4b8d3418       lea rsi, [r8 + r11]
0x0000d2a4      498d3c18       lea rdi, [r8 + rbx]
0x0000d2a8      4c894c2420     mov qword [rsp + 0x20], r9
0x0000d2ad      4c895c2418     mov qword [rsp + 0x18], r11
0x0000d2b2      4c89442410     mov qword [rsp + 0x10], r8
0x0000d2b7      e88447ffff     call sym.imp.memcmp
0x0000d2bc      85c0           test eax, eax
0x0000d2be      4c8b442410     mov r8, qword [rsp + 0x10]
0x0000d2c3      4c8b5c2418     mov r11, qword [rsp + 0x18]
0x0000d2c8      4c8b4c2420     mov r9, qword [rsp + 0x20]
0x0000d2cd      0f85c5040000   jne 0xd798
0x0000d2d3      4c8b442408     mov r8, qword [rsp + 8]
0x0000d2d8      488b4c2430     mov rcx, qword [rsp + 0x30]
0x0000d2dd      4c89ca         mov rdx, r9
0x0000d2e0      4c89ee         mov rsi, r13
0x0000d2e3      4c89f7         mov rdi, r14
0x0000d2e6      e895fbffff     call sym.get_subexp_sub.isra.32
0x0000d2eb      83f801         cmp eax, 1
0x0000d2ee      4d8b4608       mov r8, qword [r14 + 8]
0x0000d2f2      0f87a0000000   ja 0xd398
0x0000d2f8      4883c501       add rbp, 1
0x0000d2fc      493b6d20       cmp rbp, qword [r13 + 0x20]
0x0000d300      4d89fb         mov r11, r15
0x0000d303      4c89e3         mov rbx, r12
0x0000d306      0f8dac020000   jge 0xd5b8
0x0000d30c      498b4528       mov rax, qword [r13 + 0x28]
0x0000d310      4c8b0ce8       mov r9, qword [rax + rbp*8]
0x0000d314      4d8b7908       mov r15, qword [r9 + 8]
0x0000d318      4c89fa         mov rdx, r15
0x0000d31b      4c29da         sub rdx, r11
0x0000d31e      4885d2         test rdx, rdx
0x0000d321      4c8d241a       lea r12, [rdx + rbx]
0x0000d325      7eac           jle 0xd2d3
0x0000d327      4d396630       cmp qword [r14 + 0x30], r12
0x0000d32b      0f8d6fffffff   jge 0xd2a0
0x0000d331      4d396658       cmp qword [r14 + 0x58], r12
0x0000d335      4889542418     mov qword [rsp + 0x18], rdx
0x0000d33a      4c894c2410     mov qword [rsp + 0x10], r9
0x0000d33f      0f8c53040000   jl 0xd798
0x0000d345      4c89e6         mov rsi, r12
0x0000d348      4c89f7         mov rdi, r14
0x0000d34b      4c895c2420     mov qword [rsp + 0x20], r11
0x0000d350      e85b97ffff     call sym.clean_state_log_if_needed
0x0000d355      85c0           test eax, eax
0x0000d357      753f           jne 0xd398
0x0000d359      4d8b4608       mov r8, qword [r14 + 8]
0x0000d35d      488b542418     mov rdx, qword [rsp + 0x18]
0x0000d362      4c8b4c2410     mov r9, qword [rsp + 0x10]
0x0000d367      4c8b5c2420     mov r11, qword [rsp + 0x20]
0x0000d36c      e92fffffff     jmp 0xd2a0
0x0000d371      0f1f80000000.  nop dword [rax]
0x0000d378      4989f0         mov r8, rsi
0x0000d37b      4889fe         mov rsi, rdi
0x0000d37e      6690           nop
0x0000d380      498d4801       lea rcx, [r8 + 1]
0x0000d384      4889f7         mov rdi, rsi
0x0000d387      e9f7fdffff     jmp 0xd183
0x0000d38c      0f1f4000       nop dword [rax]
0x0000d390      31c0           xor eax, eax
0x0000d392      660f1f440000   nop word [rax + rax]
0x0000d398      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x0000d3a0      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000d3a9      0f854d050000   jne 0xd8fc
0x0000d3af      4881c4b80000.  add rsp, 0xb8
0x0000d3b6      5b             pop rbx
0x0000d3b7      5d             pop rbp
0x0000d3b8      415c           pop r12
0x0000d3ba      415d           pop r13
0x0000d3bc      415e           pop r14
0x0000d3be      415f           pop r15
0x0000d3c0      c3             ret
0x0000d3c1      0f1f80000000.  nop dword [rax]
0x0000d3c8      4883c028       add rax, 0x28
0x0000d3cc      8078f800       cmp byte [rax - 8], 0
0x0000d3d0      0f8430feffff   je 0xd206
0x0000d3d6      4c3b28         cmp r13, qword [rax]
0x0000d3d9      75ed           jne 0xd3c8
0x0000d3db      488b442470     mov rax, qword [rsp + 0x70]
0x0000d3e0      4839442470     cmp qword [rsp + 0x70], rax
0x0000d3e5      c784248c0000.  mov dword [rsp + 0x8c], 0
0x0000d3f0      0f8ddafcffff   jge 0xd0d0
0x0000d3f6      4a8d04ed0000.  lea rax, [r13*8]
0x0000d3fe      4c8b642470     mov r12, qword [rsp + 0x70]
0x0000d403      488b6c2438     mov rbp, qword [rsp + 0x38]
0x0000d408      4889442450     mov qword [rsp + 0x50], rax
0x0000d40d      4b8d446d00     lea rax, [r13 + r13*2]
0x0000d412      4f8d04a4       lea r8, [r12 + r12*4]
0x0000d416      48c1e003       shl rax, 3
0x0000d41a      4889442458     mov qword [rsp + 0x58], rax
0x0000d41f      4e8d3cc50000.  lea r15, [r8*8]
0x0000d427      e931010000     jmp 0xd55d
0x0000d42c      0f1f4000       nop dword [rax]
0x0000d430      488b4d28       mov rcx, qword [rbp + 0x28]
0x0000d434      488b7c2458     mov rdi, qword [rsp + 0x58]
0x0000d439      488b4c3910     mov rcx, qword [rcx + rdi + 0x10]
0x0000d43e      488b09         mov rcx, qword [rcx]
0x0000d441      488d0c49       lea rcx, [rcx + rcx*2]
0x0000d445      488d0cca       lea rcx, [rdx + rcx*8]
0x0000d449      48894c2418     mov qword [rsp + 0x18], rcx
0x0000d44e      48035c2408     add rbx, qword [rsp + 8]
0x0000d453      418b96a00000.  mov edx, dword [r14 + 0xa0]
0x0000d45a      4c89f7         mov rdi, r14
0x0000d45d      4829c3         sub rbx, rax
0x0000d460      488d73ff       lea rsi, [rbx - 1]
0x0000d464      e897bdffff     call sym.re_string_context_at
0x0000d469      488b742460     mov rsi, qword [rsp + 0x60]
0x0000d46e      89c1           mov ecx, eax
0x0000d470      498b86b80000.  mov rax, qword [r14 + 0xb8]
0x0000d477      4c8d14dd0000.  lea r10, [rbx*8]
0x0000d47f      48c744241000.  mov qword [rsp + 0x10], 0
0x0000d488      4e8d1c10       lea r11, [rax + r10]
0x0000d48c      488b0430       mov rax, qword [rax + rsi]
0x0000d490      498b13         mov rdx, qword [r11]
0x0000d493      4885c0         test rax, rax
0x0000d496      7409           je 0xd4a1
0x0000d498      488b4010       mov rax, qword [rax + 0x10]
0x0000d49c      4889442410     mov qword [rsp + 0x10], rax
0x0000d4a1      4885d2         test rdx, rdx
0x0000d4a4      0f8416030000   je 0xd7c0
0x0000d4aa      488b7250       mov rsi, qword [rdx + 0x50]
0x0000d4ae      488b7c2468     mov rdi, qword [rsp + 0x68]
0x0000d4b3      488b542418     mov rdx, qword [rsp + 0x18]
0x0000d4b8      4c89542430     mov qword [rsp + 0x30], r10
0x0000d4bd      894c2428       mov dword [rsp + 0x28], ecx
0x0000d4c1      e84ab1ffff     call sym.re_node_set_init_union
0x0000d4c6      85c0           test eax, eax
0x0000d4c8      8984248c0000.  mov dword [rsp + 0x8c], eax
0x0000d4cf      8b4c2428       mov ecx, dword [rsp + 0x28]
0x0000d4d3      4c8b542430     mov r10, qword [rsp + 0x30]
0x0000d4d8      0f858a030000   jne 0xd868
0x0000d4de      4d0396b80000.  add r10, qword [r14 + 0xb8]
0x0000d4e5      488b542468     mov rdx, qword [rsp + 0x68]
0x0000d4ea      4889ee         mov rsi, rbp
0x0000d4ed      488b7c2478     mov rdi, qword [rsp + 0x78]
0x0000d4f2      4c89542428     mov qword [rsp + 0x28], r10
0x0000d4f7      e874b2ffff     call sym.re_acquire_state_context
0x0000d4fc      4c8b542428     mov r10, qword [rsp + 0x28]
0x0000d501      488bbc24a000.  mov rdi, qword [rsp + 0xa0]
0x0000d509      498902         mov qword [r10], rax
0x0000d50c      e86f43ffff     call sym.imp.free
0x0000d511      498b96b80000.  mov rdx, qword [r14 + 0xb8]
0x0000d518      48833cda00     cmp qword [rdx + rbx*8], 0
0x0000d51d      0f84ce020000   je 0xd7f1
0x0000d523      48837c242000   cmp qword [rsp + 0x20], 0
0x0000d529      751d           jne 0xd548
0x0000d52b      488b442460     mov rax, qword [rsp + 0x60]
0x0000d530      488b5c2410     mov rbx, qword [rsp + 0x10]
0x0000d535      488b0402       mov rax, qword [rdx + rax]
0x0000d539      48395810       cmp qword [rax + 0x10], rbx
0x0000d53d      0f8fc5020000   jg 0xd808
0x0000d543      0f1f440000     nop dword [rax + rax]
0x0000d548      4983c401       add r12, 1
0x0000d54c      4983c728       add r15, 0x28
0x0000d550      4d3ba6c80000.  cmp r12, qword [r14 + 0xc8]
0x0000d557      0f8d73fbffff   jge 0xd0d0
0x0000d55d      498b86d80000.  mov rax, qword [r14 + 0xd8]
0x0000d564      4c01f8         add rax, r15
0x0000d567      4c3b28         cmp r13, qword [rax]
0x0000d56a      75dc           jne 0xd548
0x0000d56c      488b7c2408     mov rdi, qword [rsp + 8]
0x0000d571      483b7808       cmp rdi, qword [rax + 8]
0x0000d575      75d1           jne 0xd548
0x0000d577      488b5818       mov rbx, qword [rax + 0x18]
0x0000d57b      488b4010       mov rax, qword [rax + 0x10]
0x0000d57f      488b5530       mov rdx, qword [rbp + 0x30]
0x0000d583      4889d9         mov rcx, rbx
0x0000d586      4829c1         sub rcx, rax
0x0000d589      48894c2420     mov qword [rsp + 0x20], rcx
0x0000d58e      0f849cfeffff   je 0xd430
0x0000d594      488b4d18       mov rcx, qword [rbp + 0x18]
0x0000d598      488b7c2450     mov rdi, qword [rsp + 0x50]
0x0000d59d      488b0c39       mov rcx, qword [rcx + rdi]
0x0000d5a1      488d0c49       lea rcx, [rcx + rcx*2]
0x0000d5a5      488d0cca       lea rcx, [rdx + rcx*8]
0x0000d5a9      48894c2418     mov qword [rsp + 0x18], rcx
0x0000d5ae      e99bfeffff     jmp 0xd44e
0x0000d5b3      0f1f440000     nop dword [rax + rax]
0x0000d5b8      4c89eb         mov rbx, r13
0x0000d5bb      4d89c5         mov r13, r8
0x0000d5be      4d8d5f01       lea r11, [r15 + 1]
0x0000d5c2      4c395c2408     cmp qword [rsp + 8], r11
0x0000d5c7      0f8c8cfcffff   jl 0xd259
0x0000d5cd      4c89e0         mov rax, r12
0x0000d5d0      4e8d3cdd0000.  lea r15, [r11*8]
0x0000d5d8      4989dc         mov r12, rbx
0x0000d5db      4c89db         mov rbx, r11
0x0000d5de      4d89eb         mov r11, r13
0x0000d5e1      4989c5         mov r13, rax
0x0000d5e4      0f1f4000       nop dword [rax]
0x0000d5e8      4889d8         mov rax, rbx
0x0000d5eb      492b0424       sub rax, qword [r12]
0x0000d5ef      4885c0         test rax, rax
0x0000d5f2      7e21           jle 0xd615
0x0000d5f4      4d396e30       cmp qword [r14 + 0x30], r13
0x0000d5f8      0f8e83020000   jle 0xd881
0x0000d5fe      410fb64c1bff   movzx ecx, byte [r11 + rbx - 1]
0x0000d604      498d4501       lea rax, [r13 + 1]
0x0000d608      43380c2b       cmp byte [r11 + r13], cl
0x0000d60c      0f8530010000   jne 0xd742
0x0000d612      4989c5         mov r13, rax
0x0000d615      498b86b80000.  mov rax, qword [r14 + 0xb8]
0x0000d61c      4a8b0438       mov rax, qword [rax + r15]
0x0000d620      4885c0         test rax, rax
0x0000d623      0f8406010000   je 0xd72f
0x0000d629      488b4810       mov rcx, qword [rax + 0x10]
0x0000d62d      4885c9         test rcx, rcx
0x0000d630      0f8ef9000000   jle 0xd72f
0x0000d636      488b7818       mov rdi, qword [rax + 0x18]
0x0000d63a      488b442450     mov rax, qword [rsp + 0x50]
0x0000d63f      31d2           xor edx, edx
0x0000d641      4c8b442458     mov r8, qword [rsp + 0x58]
0x0000d646      488b30         mov rsi, qword [rax]
0x0000d649      eb12           jmp 0xd65d
0x0000d64b      0f1f440000     nop dword [rax + rax]
0x0000d650      4883c201       add rdx, 1
0x0000d654      4839d1         cmp rcx, rdx
0x0000d657      0f84d2000000   je 0xd72f
0x0000d65d      488b2cd7       mov rbp, qword [rdi + rdx*8]
0x0000d661      4889e8         mov rax, rbp
0x0000d664      48c1e004       shl rax, 4
0x0000d668      4801f0         add rax, rsi
0x0000d66b      80780809       cmp byte [rax + 8], 9
0x0000d66f      75df           jne 0xd650
0x0000d671      4c3b00         cmp r8, qword [rax]
0x0000d674      75da           jne 0xd650
0x0000d676      4883fdff       cmp rbp, 0xffffffffffffffff
0x0000d67a      0f84af000000   je 0xd72f
0x0000d680      498b742410     mov rsi, qword [r12 + 0x10]
0x0000d685      498b0c24       mov rcx, qword [r12]
0x0000d689      4885f6         test rsi, rsi
0x0000d68c      0f84be000000   je 0xd750
0x0000d692      4c895c2410     mov qword [rsp + 0x10], r11
0x0000d697      498b542408     mov rdx, qword [r12 + 8]
0x0000d69c      4883ec08       sub rsp, 8
0x0000d6a0      6a09           push 9
0x0000d6a2      4989d9         mov r9, rbx
0x0000d6a5      4989e8         mov r8, rbp
0x0000d6a8      4c89f7         mov rdi, r14
0x0000d6ab      e880e7ffff     call sym.check_arrival
0x0000d6b0      5a             pop rdx
0x0000d6b1      83f801         cmp eax, 1
0x0000d6b4      59             pop rcx
0x0000d6b5      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x0000d6ba      7473           je 0xd72f
0x0000d6bc      85c0           test eax, eax
0x0000d6be      0f85d4fcffff   jne 0xd398
0x0000d6c4      498b442420     mov rax, qword [r12 + 0x20]
0x0000d6c9      493b442418     cmp rax, qword [r12 + 0x18]
0x0000d6ce      0f84d4010000   je 0xd8a8
0x0000d6d4      be28000000     mov esi, 0x28                           ; '('
0x0000d6d9      bf01000000     mov edi, 1
0x0000d6de      e88d43ffff     call sym.imp.calloc
0x0000d6e3      4885c0         test rax, rax
0x0000d6e6      0f849d000000   je 0xd789
0x0000d6ec      498b542420     mov rdx, qword [r12 + 0x20]
0x0000d6f1      498b4c2428     mov rcx, qword [r12 + 0x28]
0x0000d6f6      4c89e6         mov rsi, r12
0x0000d6f9      4c8b442408     mov r8, qword [rsp + 8]
0x0000d6fe      4c89f7         mov rdi, r14
0x0000d701      488904d1       mov qword [rcx + rdx*8], rax
0x0000d705      488b4c2430     mov rcx, qword [rsp + 0x30]
0x0000d70a      4883c201       add rdx, 1
0x0000d70e      488928         mov qword [rax], rbp
0x0000d711      48895808       mov qword [rax + 8], rbx
0x0000d715      4989542420     mov qword [r12 + 0x20], rdx
0x0000d71a      4889c2         mov rdx, rax
0x0000d71d      e85ef7ffff     call sym.get_subexp_sub.isra.32
0x0000d722      83f801         cmp eax, 1
0x0000d725      4d8b5e08       mov r11, qword [r14 + 8]
0x0000d729      0f8769fcffff   ja 0xd398
0x0000d72f      4883c301       add rbx, 1
0x0000d733      4983c708       add r15, 8
0x0000d737      48395c2408     cmp qword [rsp + 8], rbx
0x0000d73c      0f8da6feffff   jge 0xd5e8
0x0000d742      4d89dd         mov r13, r11
0x0000d745      e90ffbffff     jmp 0xd259
0x0000d74a      660f1f440000   nop word [rax + rax]
0x0000d750      4889de         mov rsi, rbx
0x0000d753      bf18000000     mov edi, 0x18
0x0000d758      4c895c2418     mov qword [rsp + 0x18], r11
0x0000d75d      4829ce         sub rsi, rcx
0x0000d760      48894c2410     mov qword [rsp + 0x10], rcx
0x0000d765      4883c601       add rsi, 1
0x0000d769      e80243ffff     call sym.imp.calloc
0x0000d76e      4885c0         test rax, rax
0x0000d771      4889c6         mov rsi, rax
0x0000d774      4989442410     mov qword [r12 + 0x10], rax
0x0000d779      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0000d77e      4c8b5c2418     mov r11, qword [rsp + 0x18]
0x0000d783      0f8509ffffff   jne 0xd692
0x0000d789      b80c000000     mov eax, 0xc
0x0000d78e      e905fcffff     jmp 0xd398
0x0000d793      0f1f440000     nop dword [rax + rax]
0x0000d798      4889d9         mov rcx, rbx
0x0000d79b      4c89eb         mov rbx, r13
0x0000d79e      4d89c5         mov r13, r8
0x0000d7a1      48396b20       cmp qword [rbx + 0x20], rbp
0x0000d7a5      0f8faefaffff   jg 0xd259
0x0000d7ab      4885ed         test rbp, rbp
0x0000d7ae      4989cc         mov r12, rcx
0x0000d7b1      0f840bfeffff   je 0xd5c2
0x0000d7b7      4d89df         mov r15, r11
0x0000d7ba      e9fffdffff     jmp 0xd5be
0x0000d7bf      90             nop
0x0000d7c0      488b542418     mov rdx, qword [rsp + 0x18]
0x0000d7c5      488b7c2478     mov rdi, qword [rsp + 0x78]
0x0000d7ca      4889ee         mov rsi, rbp
0x0000d7cd      4c895c2428     mov qword [rsp + 0x28], r11
0x0000d7d2      e899afffff     call sym.re_acquire_state_context
0x0000d7d7      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000d7dc      498b96b80000.  mov rdx, qword [r14 + 0xb8]
0x0000d7e3      498903         mov qword [r11], rax
0x0000d7e6      48833cda00     cmp qword [rdx + rbx*8], 0
0x0000d7eb      0f8532fdffff   jne 0xd523
0x0000d7f1      8b84248c0000.  mov eax, dword [rsp + 0x8c]
0x0000d7f8      85c0           test eax, eax
0x0000d7fa      0f8423fdffff   je 0xd523
0x0000d800      e993fbffff     jmp 0xd398
0x0000d805      0f1f00         nop dword [rax]
0x0000d808      488b442418     mov rax, qword [rsp + 0x18]
0x0000d80d      488b4c2408     mov rcx, qword [rsp + 8]
0x0000d812      4c89f7         mov rdi, r14
0x0000d815      4c8d4010       lea r8, [rax + 0x10]
0x0000d819      488d5808       lea rbx, [rax + 8]
0x0000d81d      4c89c2         mov rdx, r8
0x0000d820      4889de         mov rsi, rbx
0x0000d823      4c89442410     mov qword [rsp + 0x10], r8
0x0000d828      e883b8ffff     call sym.check_subexp_matching_top.isra.18
0x0000d82d      85c0           test eax, eax
0x0000d82f      8984248c0000.  mov dword [rsp + 0x8c], eax
0x0000d836      0f855cfbffff   jne 0xd398
0x0000d83c      4c8b442410     mov r8, qword [rsp + 0x10]
0x0000d841      4889de         mov rsi, rbx
0x0000d844      4c89f7         mov rdi, r14
0x0000d847      4c89c2         mov rdx, r8
0x0000d84a      e8d1f7ffff     call sym.transit_state_bkref.isra.34
0x0000d84f      85c0           test eax, eax
0x0000d851      8984248c0000.  mov dword [rsp + 0x8c], eax
0x0000d858      0f84eafcffff   je 0xd548
0x0000d85e      e935fbffff     jmp 0xd398
0x0000d863      0f1f440000     nop dword [rax + rax]
0x0000d868      488bbc24a000.  mov rdi, qword [rsp + 0xa0]
0x0000d870      e80b40ffff     call sym.imp.free
0x0000d875      8b84248c0000.  mov eax, dword [rsp + 0x8c]
0x0000d87c      e917fbffff     jmp 0xd398
0x0000d881      4d396e58       cmp qword [r14 + 0x58], r13
0x0000d885      0f8eb7feffff   jle 0xd742
0x0000d88b      418d7501       lea esi, [r13 + 1]
0x0000d88f      4c89f7         mov rdi, r14
0x0000d892      e8c990ffff     call sym.extend_buffers
0x0000d897      85c0           test eax, eax
0x0000d899      0f85f9faffff   jne 0xd398
0x0000d89f      4d8b5e08       mov r11, qword [r14 + 8]
0x0000d8a3      e956fdffff     jmp 0xd5fe
0x0000d8a8      488d540001     lea rdx, [rax + rax + 1]
0x0000d8ad      498b7c2428     mov rdi, qword [r12 + 0x28]
0x0000d8b2      488d34d50000.  lea rsi, [rdx*8]
0x0000d8ba      4889542410     mov qword [rsp + 0x10], rdx
0x0000d8bf      e86c42ffff     call sym.imp.realloc
0x0000d8c4      4885c0         test rax, rax
0x0000d8c7      0f84bcfeffff   je 0xd789
0x0000d8cd      488b542410     mov rdx, qword [rsp + 0x10]
0x0000d8d2      4989442428     mov qword [r12 + 0x28], rax
0x0000d8d7      4989542418     mov qword [r12 + 0x18], rdx
0x0000d8dc      e9f3fdffff     jmp 0xd6d4
0x0000d8e1      4c8b6c2430     mov r13, qword [rsp + 0x30]
0x0000d8e6      498b86c80000.  mov rax, qword [r14 + 0xc8]
0x0000d8ed      e9eefaffff     jmp 0xd3e0
0x0000d8f2      4c8b642408     mov r12, qword [rsp + 8]
0x0000d8f7      e9c6fcffff     jmp 0xd5c2
0x0000d8fc      e88f40ffff     call sym.imp.__stack_chk_fail
0x0000d901      0f1f440000     nop dword [rax + rax]
0x0000d906      662e0f1f8400.  nop word cs:[rax + rax]
;-- merge_state_with_log:
0x0000d910      4157           push r15
0x0000d912      4156           push r14
0x0000d914      4155           push r13
0x0000d916      4154           push r12
0x0000d918      4989fd         mov r13, rdi
0x0000d91b      55             push rbp
0x0000d91c      53             push rbx
0x0000d91d      4889f3         mov rbx, rsi
0x0000d920      4883ec38       sub rsp, 0x38
0x0000d924      4c8b6648       mov r12, qword [rsi + 0x48]
0x0000d928      4c8bb6b80000.  mov r14, qword [rsi + 0xb8]
0x0000d92f      64488b042528.  mov rax, qword fs:[0x28]
0x0000d938      4889442428     mov qword [rsp + 0x28], rax
0x0000d93d      31c0           xor eax, eax
0x0000d93f      4c8bbe980000.  mov r15, qword [rsi + 0x98]
0x0000d946      4a8d2ce50000.  lea rbp, [r12*8]
0x0000d94e      4901ee         add r14, rbp
0x0000d951      4c39a6c00000.  cmp qword [rsi + 0xc0], r12
0x0000d958      7d46           jge 0xd9a0
0x0000d95a      498916         mov qword [r14], rdx
0x0000d95d      4889d5         mov rbp, rdx
0x0000d960      4c89a6c00000.  mov qword [rsi + 0xc0], r12
0x0000d967      4983bf980000.  cmp qword [r15 + 0x98], 0
0x0000d96f      0f8523010000   jne 0xda98
0x0000d975      488b4c2428     mov rcx, qword [rsp + 0x28]
0x0000d97a      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000d983      4889e8         mov rax, rbp
0x0000d986      0f856b010000   jne 0xdaf7
0x0000d98c      4883c438       add rsp, 0x38
0x0000d990      5b             pop rbx
0x0000d991      5d             pop rbp
0x0000d992      415c           pop r12
0x0000d994      415d           pop r13
0x0000d996      415e           pop r14
0x0000d998      415f           pop r15
0x0000d99a      c3             ret
0x0000d99b      0f1f440000     nop dword [rax + rax]
0x0000d9a0      498b06         mov rax, qword [r14]
0x0000d9a3      4885c0         test rax, rax
0x0000d9a6      0f84dc000000   je 0xda88
0x0000d9ac      4885d2         test rdx, rdx
0x0000d9af      488b4050       mov rax, qword [rax + 0x50]
0x0000d9b3      0f8487000000   je 0xda40
0x0000d9b9      4c8b7250       mov r14, qword [rdx + 0x50]
0x0000d9bd      488d7c2410     lea rdi, [rsp + 0x10]
0x0000d9c2      4889c2         mov rdx, rax
0x0000d9c5      48893c24       mov qword [rsp], rdi
0x0000d9c9      4c89f6         mov rsi, r14
0x0000d9cc      e83facffff     call sym.re_node_set_init_union
0x0000d9d1      85c0           test eax, eax
0x0000d9d3      41894500       mov dword [r13], eax
0x0000d9d7      0f8513010000   jne 0xdaf0
0x0000d9dd      488b4348       mov rax, qword [rbx + 0x48]
0x0000d9e1      8b93a0000000   mov edx, dword [rbx + 0xa0]
0x0000d9e7      4889df         mov rdi, rbx
0x0000d9ea      488d70ff       lea rsi, [rax - 1]
0x0000d9ee      e80db8ffff     call sym.re_string_context_at
0x0000d9f3      4c8b83b80000.  mov r8, qword [rbx + 0xb8]
0x0000d9fa      488b1424       mov rdx, qword [rsp]
0x0000d9fe      89c1           mov ecx, eax
0x0000da00      4c89fe         mov rsi, r15
0x0000da03      4c89ef         mov rdi, r13
0x0000da06      4901e8         add r8, rbp
0x0000da09      4c89442408     mov qword [rsp + 8], r8
0x0000da0e      e85dadffff     call sym.re_acquire_state_context
0x0000da13      4c8b442408     mov r8, qword [rsp + 8]
0x0000da18      4d85f6         test r14, r14
0x0000da1b      4889c5         mov rbp, rax
0x0000da1e      498900         mov qword [r8], rax
0x0000da21      0f8440ffffff   je 0xd967
0x0000da27      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0000da2c      e84f3effff     call sym.imp.free
0x0000da31      e931ffffff     jmp 0xd967
0x0000da36      662e0f1f8400.  nop word cs:[rax + rax]
0x0000da40      f30f6f00       movdqu xmm0, xmmword [rax]
0x0000da44      4889df         mov rdi, rbx
0x0000da47      8b96a0000000   mov edx, dword [rsi + 0xa0]
0x0000da4d      498d7424ff     lea rsi, [r12 - 1]
0x0000da52      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000da57      488b4010       mov rax, qword [rax + 0x10]
0x0000da5b      4889442420     mov qword [rsp + 0x20], rax
0x0000da60      e89bb7ffff     call sym.re_string_context_at
0x0000da65      488d542410     lea rdx, [rsp + 0x10]
0x0000da6a      89c1           mov ecx, eax
0x0000da6c      4c89fe         mov rsi, r15
0x0000da6f      4c89ef         mov rdi, r13
0x0000da72      e8f9acffff     call sym.re_acquire_state_context
0x0000da77      4889c5         mov rbp, rax
0x0000da7a      498906         mov qword [r14], rax
0x0000da7d      e9e5feffff     jmp 0xd967
0x0000da82      660f1f440000   nop word [rax + rax]
0x0000da88      498916         mov qword [r14], rdx
0x0000da8b      4889d5         mov rbp, rdx
0x0000da8e      e9d4feffff     jmp 0xd967
0x0000da93      0f1f440000     nop dword [rax + rax]
0x0000da98      4885ed         test rbp, rbp
0x0000da9b      7453           je 0xdaf0
0x0000da9d      4c8d7510       lea r14, [rbp + 0x10]
0x0000daa1      4c8d7d18       lea r15, [rbp + 0x18]
0x0000daa5      4c89e1         mov rcx, r12
0x0000daa8      4889df         mov rdi, rbx
0x0000daab      4c89fa         mov rdx, r15
0x0000daae      4c89f6         mov rsi, r14
0x0000dab1      e8fab5ffff     call sym.check_subexp_matching_top.isra.18
0x0000dab6      85c0           test eax, eax
0x0000dab8      41894500       mov dword [r13], eax
0x0000dabc      7532           jne 0xdaf0
0x0000dabe      f6456840       test byte [rbp + 0x68], 0x40
0x0000dac2      0f84adfeffff   je 0xd975
0x0000dac8      4c89fa         mov rdx, r15
0x0000dacb      4c89f6         mov rsi, r14
0x0000dace      4889df         mov rdi, rbx
0x0000dad1      e84af5ffff     call sym.transit_state_bkref.isra.34
0x0000dad6      85c0           test eax, eax
0x0000dad8      41894500       mov dword [r13], eax
0x0000dadc      7512           jne 0xdaf0
0x0000dade      488b83b80000.  mov rax, qword [rbx + 0xb8]
0x0000dae5      4a8b2ce0       mov rbp, qword [rax + r12*8]
0x0000dae9      e987feffff     jmp 0xd975
0x0000daee      6690           nop
0x0000daf0      31ed           xor ebp, ebp
0x0000daf2      e97efeffff     jmp 0xd975
0x0000daf7      e8943effff     call sym.imp.__stack_chk_fail
0x0000dafc      0f1f4000       nop dword [rax]
;-- sift_states_backward:
0x0000db00      4157           push r15
0x0000db02      4156           push r14
0x0000db04      4989fe         mov r14, rdi
0x0000db07      4155           push r13
0x0000db09      4154           push r12
0x0000db0b      4989f5         mov r13, rsi
0x0000db0e      55             push rbp
0x0000db0f      53             push rbx
0x0000db10      4883ec68       sub rsp, 0x68
0x0000db14      4c8b7e18       mov r15, qword [rsi + 0x18]
0x0000db18      488b5e10       mov rbx, qword [rsi + 0x10]
0x0000db1c      48893c24       mov qword [rsp], rdi
0x0000db20      bf08000000     mov edi, 8
0x0000db25      48c744244001.  mov qword [rsp + 0x40], 1
0x0000db2e      64488b042528.  mov rax, qword fs:[0x28]
0x0000db37      4889442458     mov qword [rsp + 0x58], rax
0x0000db3c      31c0           xor eax, eax
0x0000db3e      48c744244801.  mov qword [rsp + 0x48], 1
0x0000db47      e8743fffff     call sym.imp.malloc
0x0000db4c      4885c0         test rax, rax
0x0000db4f      4889442450     mov qword [rsp + 0x50], rax
0x0000db54      0f84da020000   je 0xde34
0x0000db5a      488d4c2440     lea rcx, [rsp + 0x40]
0x0000db5f      488918         mov qword [rax], rbx
0x0000db62      4c89fa         mov rdx, r15
0x0000db65      4c89ee         mov rsi, r13
0x0000db68      4c89f7         mov rdi, r14
0x0000db6b      48894c2410     mov qword [rsp + 0x10], rcx
0x0000db70      e8fb190000     call sym.update_cur_sifted_state
0x0000db75      85c0           test eax, eax
0x0000db77      0f8588020000   jne 0xde05
0x0000db7d      4a8d04fd0000.  lea rax, [r15*8]
0x0000db85      4d85ff         test r15, r15
0x0000db88      c744242c0000.  mov dword [rsp + 0x2c], 0
0x0000db90      4889442408     mov qword [rsp + 8], rax
0x0000db95      498d4530       lea rax, [r13 + 0x30]
0x0000db99      4889442438     mov qword [rsp + 0x38], rax
0x0000db9e      0f8e03020000   jle 0xdda7
0x0000dba4      498b7d00       mov rdi, qword [r13]
0x0000dba8      488b442408     mov rax, qword [rsp + 8]
0x0000dbad      48833c0700     cmp qword [rdi + rax], 0
0x0000dbb2      0f8410020000   je 0xddc8
0x0000dbb8      488b0424       mov rax, qword [rsp]
0x0000dbbc      c744242c0000.  mov dword [rsp + 0x2c], 0
0x0000dbc4      8b4c242c       mov ecx, dword [rsp + 0x2c]
0x0000dbc8      3988e0000000   cmp dword [rax + 0xe0], ecx
0x0000dbce      0f8c0d020000   jl 0xdde1
0x0000dbd4      488b1c24       mov rbx, qword [rsp]
0x0000dbd8      488b7c2408     mov rdi, qword [rsp + 8]
0x0000dbdd      4983ef01       sub r15, 1
0x0000dbe1      48c744244800.  mov qword [rsp + 0x48], 0
0x0000dbea      488b83b80000.  mov rax, qword [rbx + 0xb8]
0x0000dbf1      4c8b6438f8     mov r12, qword [rax + rdi - 8]
0x0000dbf6      4d85e4         test r12, r12
0x0000dbf9      0f8481010000   je 0xdd80
0x0000dbff      49837c242800   cmp qword [r12 + 0x28], 0
0x0000dc05      4c8bb3980000.  mov r14, qword [rbx + 0x98]
0x0000dc0c      0f8e6e010000   jle 0xdd80
0x0000dc12      31db           xor ebx, ebx
0x0000dc14      e9a2000000     jmp 0xdcbb
0x0000dc19      0f1f80000000.  nop dword [rax]
0x0000dc20      488b3c24       mov rdi, qword [rsp]
0x0000dc24      4c89fa         mov rdx, r15
0x0000dc27      e8c4b6ffff     call sym.check_node_accept
0x0000dc2c      84c0           test al, al
0x0000dc2e      747c           je 0xdcac
0x0000dc30      498b4500       mov rax, qword [r13]
0x0000dc34      488b4c2408     mov rcx, qword [rsp + 8]
0x0000dc39      488b0408       mov rax, qword [rax + rcx]
0x0000dc3d      4885c0         test rax, rax
0x0000dc40      746a           je 0xdcac
0x0000dc42      498b5618       mov rdx, qword [r14 + 0x18]
0x0000dc46      488b7810       mov rdi, qword [rax + 0x10]
0x0000dc4a      488d7018       lea rsi, [rax + 0x18]
0x0000dc4e      488b14ea       mov rdx, qword [rdx + rbp*8]
0x0000dc52      e8c997ffff     call sym.re_node_set_contains.isra.3
0x0000dc57      4885c0         test rax, rax
0x0000dc5a      7450           je 0xdcac
0x0000dc5c      41ba01000000   mov r10d, 1
0x0000dc62      49837d2800     cmp qword [r13 + 0x28], 0
0x0000dc67      742e           je 0xdc97
0x0000dc69      498b4618       mov rax, qword [r14 + 0x18]
0x0000dc6d      4883ec08       sub rsp, 8
0x0000dc71      498d7528       lea rsi, [r13 + 0x28]
0x0000dc75      4f8d043a       lea r8, [r10 + r15]
0x0000dc79      4989e9         mov r9, rbp
0x0000dc7c      488b0ce8       mov rcx, qword [rax + rbp*8]
0x0000dc80      4157           push r15
0x0000dc82      488b542448     mov rdx, qword [rsp + 0x48]
0x0000dc87      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000dc8c      e83f9affff     call sym.check_dst_limits.isra.13
0x0000dc91      84c0           test al, al
0x0000dc93      5a             pop rdx
0x0000dc94      59             pop rcx
0x0000dc95      7515           jne 0xdcac
0x0000dc97      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000dc9c      4889ee         mov rsi, rbp
0x0000dc9f      e83c82ffff     call sym.re_node_set_insert
0x0000dca4      84c0           test al, al
0x0000dca6      0f8454010000   je 0xde00
0x0000dcac      4883c301       add rbx, 1
0x0000dcb0      493b5c2428     cmp rbx, qword [r12 + 0x28]
0x0000dcb5      0f8dc5000000   jge 0xdd80
0x0000dcbb      498b442430     mov rax, qword [r12 + 0x30]
0x0000dcc0      498b36         mov rsi, qword [r14]
0x0000dcc3      488b2cd8       mov rbp, qword [rax + rbx*8]
0x0000dcc7      4989e9         mov r9, rbp
0x0000dcca      49c1e104       shl r9, 4
0x0000dcce      4c01ce         add rsi, r9
0x0000dcd1      f6460a10       test byte [rsi + 0xa], 0x10
0x0000dcd5      0f8445ffffff   je 0xdc20
0x0000dcdb      488b0c24       mov rcx, qword [rsp]
0x0000dcdf      498b4518       mov rax, qword [r13 + 0x18]
0x0000dce3      4d89f8         mov r8, r15
0x0000dce6      4889ea         mov rdx, rbp
0x0000dce9      4c894c2418     mov qword [rsp + 0x18], r9
0x0000dcee      4c8b99980000.  mov r11, qword [rcx + 0x98]
0x0000dcf5      4889442420     mov qword [rsp + 0x20], rax
0x0000dcfa      498b3b         mov rdi, qword [r11]
0x0000dcfd      498db3d80000.  lea rsi, [r11 + 0xd8]
0x0000dd04      4c895c2430     mov qword [rsp + 0x30], r11
0x0000dd09      e8c2deffff     call sym.check_node_accept_bytes.isra.31
0x0000dd0e      4c63d0         movsxd r10, eax
0x0000dd11      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x0000dd16      4183fa00       cmp r10d, 0
0x0000dd1a      0f8e90000000   jle 0xddb0
0x0000dd20      4963c2         movsxd rax, r10d
0x0000dd23      4c01f8         add rax, r15
0x0000dd26      4839442420     cmp qword [rsp + 0x20], rax
0x0000dd2b      0f8c31ffffff   jl 0xdc62
0x0000dd31      498b5500       mov rdx, qword [r13]
0x0000dd35      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x0000dd3a      488b04c2       mov rax, qword [rdx + rax*8]
0x0000dd3e      4885c0         test rax, rax
0x0000dd41      7473           je 0xddb6
0x0000dd43      498b5318       mov rdx, qword [r11 + 0x18]
0x0000dd47      488b7810       mov rdi, qword [rax + 0x10]
0x0000dd4b      488d7018       lea rsi, [rax + 0x18]
0x0000dd4f      4c894c2418     mov qword [rsp + 0x18], r9
0x0000dd54      488b14ea       mov rdx, qword [rdx + rbp*8]
0x0000dd58      e8c396ffff     call sym.re_node_set_contains.isra.3
0x0000dd5d      4885c0         test rax, rax
0x0000dd60      0f85fcfeffff   jne 0xdc62
0x0000dd66      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x0000dd6b      498b36         mov rsi, qword [r14]
0x0000dd6e      4c01ce         add rsi, r9
0x0000dd71      e9aafeffff     jmp 0xdc20
0x0000dd76      662e0f1f8400.  nop word cs:[rax + rax]
0x0000dd80      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0000dd85      488b3c24       mov rdi, qword [rsp]
0x0000dd89      4c89fa         mov rdx, r15
0x0000dd8c      4c89ee         mov rsi, r13
0x0000dd8f      e8dc170000     call sym.update_cur_sifted_state
0x0000dd94      85c0           test eax, eax
0x0000dd96      756d           jne 0xde05
0x0000dd98      48836c240808   sub qword [rsp + 8], 8
0x0000dd9e      4d85ff         test r15, r15
0x0000dda1      0f85fdfdffff   jne 0xdba4
0x0000dda7      31c0           xor eax, eax
0x0000dda9      eb5a           jmp 0xde05
0x0000ddab      0f1f440000     nop dword [rax + rax]
0x0000ddb0      0f85acfeffff   jne 0xdc62
0x0000ddb6      498b36         mov rsi, qword [r14]
0x0000ddb9      4c01ce         add rsi, r9
0x0000ddbc      e95ffeffff     jmp 0xdc20
0x0000ddc1      0f1f80000000.  nop dword [rax]
0x0000ddc8      488b0424       mov rax, qword [rsp]
0x0000ddcc      8344242c01     add dword [rsp + 0x2c], 1
0x0000ddd1      8b4c242c       mov ecx, dword [rsp + 0x2c]
0x0000ddd5      3988e0000000   cmp dword [rax + 0xe0], ecx
0x0000dddb      0f8df3fdffff   jge 0xdbd4
0x0000dde1      488b542408     mov rdx, qword [rsp + 8]
0x0000dde6      31f6           xor esi, esi
0x0000dde8      e8233cffff     call sym.imp.memset
0x0000dded      488b7c2450     mov rdi, qword [rsp + 0x50]
0x0000ddf2      e8893affff     call sym.imp.free
0x0000ddf7      31c0           xor eax, eax
0x0000ddf9      eb1a           jmp 0xde15
0x0000ddfb      0f1f440000     nop dword [rax + rax]
0x0000de00      b80c000000     mov eax, 0xc
0x0000de05      488b7c2450     mov rdi, qword [rsp + 0x50]
0x0000de0a      890424         mov dword [rsp], eax
0x0000de0d      e86e3affff     call sym.imp.free
0x0000de12      8b0424         mov eax, dword [rsp]
0x0000de15      488b542458     mov rdx, qword [rsp + 0x58]
0x0000de1a      644833142528.  xor rdx, qword fs:[0x28]
0x0000de23      7516           jne 0xde3b
0x0000de25      4883c468       add rsp, 0x68
0x0000de29      5b             pop rbx
0x0000de2a      5d             pop rbp
0x0000de2b      415c           pop r12
0x0000de2d      415d           pop r13
0x0000de2f      415e           pop r14
0x0000de31      415f           pop r15
0x0000de33      c3             ret
0x0000de34      b80c000000     mov eax, 0xc
0x0000de39      ebda           jmp 0xde15
0x0000de3b      e8503bffff     call sym.imp.__stack_chk_fail
;-- re_search_internal:
0x0000de40      4157           push r15
0x0000de42      4156           push r14
0x0000de44      4155           push r13
0x0000de46      4154           push r12
0x0000de48      4d89cd         mov r13, r9
0x0000de4b      55             push rbp
0x0000de4c      53             push rbx
0x0000de4d      4889cd         mov rbp, rcx
0x0000de50      b920000000     mov ecx, 0x20                           ; "@"
0x0000de55      4d89c4         mov r12, r8
0x0000de58      4881ec380200.  sub rsp, sym..interp
0x0000de5f      488b1f         mov rbx, qword [rdi]
0x0000de62      488b84247802.  mov rax, qword [rsp + 0x278]
0x0000de6a      48897c2448     mov qword [rsp + 0x48], rdi
0x0000de6f      4889742478     mov qword [rsp + 0x78], rsi
0x0000de74      4889fe         mov rsi, rdi
0x0000de77      488dbc242001.  lea rdi, [rsp + 0x120]
0x0000de7f      488994248800.  mov qword [rsp + 0x88], rdx
0x0000de87      48895c2438     mov qword [rsp + 0x38], rbx
0x0000de8c      48898424b800.  mov qword [rsp + 0xb8], rax
0x0000de94      48893c24       mov qword [rsp], rdi
0x0000de98      64488b042528.  mov rax, qword fs:[0x28]
0x0000dea1      488984242802.  mov qword [rsp + 0x228], rax
0x0000dea9      31c0           xor eax, eax
0x0000deab      f348ab         rep stosq qword [rdi], rax
0x0000deae      488b7e20       mov rdi, qword [rsi + 0x20]
0x0000deb2      48899c24b801.  mov qword [rsp + 0x1b8], rbx
0x0000deba      4885ff         test rdi, rdi
0x0000debd      48897c2468     mov qword [rsp + 0x68], rdi
0x0000dec2      7422           je 0xdee6
0x0000dec4      0fb65638       movzx edx, byte [rsi + 0x38]
0x0000dec8      f6c208         test dl, 8
0x0000decb      0f848f040000   je 0xe360
0x0000ded1      4c39c5         cmp rbp, r8
0x0000ded4      0f8486040000   je 0xe360
0x0000deda      83e201         and edx, 1
0x0000dedd      480f44c7       cmove rax, rdi
0x0000dee1      4889442468     mov qword [rsp + 0x68], rax
0x0000dee6      488b442448     mov rax, qword [rsp + 0x48]
0x0000deeb      48c784249800.  mov qword [rsp + 0x98], 0
0x0000def7      488b4030       mov rax, qword [rax + 0x30]
0x0000defb      483b84247002.  cmp rax, qword [rsp + 0x270]
0x0000df03      731f           jae 0xdf24
0x0000df05      488b8c247002.  mov rcx, qword [rsp + 0x270]
0x0000df0d      488d51ff       lea rdx, [rcx - 1]
0x0000df11      4829c2         sub rdx, rax
0x0000df14      482994247002.  sub qword [rsp + 0x270], rdx
0x0000df1c      488994249800.  mov qword [rsp + 0x98], rdx
0x0000df24      488b742448     mov rsi, qword [rsp + 0x48]
0x0000df29      48837e1000     cmp qword [rsi + 0x10], 0
0x0000df2e      0f848c0e0000   je 0xedc0
0x0000df34      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000df39      488b4748       mov rax, qword [rdi + 0x48]
0x0000df3d      4885c0         test rax, rax
0x0000df40      0f847a0e0000   je 0xedc0
0x0000df46      488b5750       mov rdx, qword [rdi + 0x50]
0x0000df4a      4885d2         test rdx, rdx
0x0000df4d      0f846d0e0000   je 0xedc0
0x0000df53      488b4f58       mov rcx, qword [rdi + 0x58]
0x0000df57      4885c9         test rcx, rcx
0x0000df5a      0f84600e0000   je 0xedc0
0x0000df60      48837f6000     cmp qword [rdi + 0x60], 0
0x0000df65      0f84550e0000   je 0xedc0
0x0000df6b      4883781000     cmp qword [rax + 0x10], 0
0x0000df70      7536           jne 0xdfa8
0x0000df72      48837a1000     cmp qword [rdx + 0x10], 0
0x0000df77      752f           jne 0xdfa8
0x0000df79      4883791000     cmp qword [rcx + 0x10], 0
0x0000df7e      7406           je 0xdf86
0x0000df80      807e3800       cmp byte [rsi + 0x38], 0
0x0000df84      7822           js 0xdfa8
0x0000df86      4885ed         test rbp, rbp
0x0000df89      7411           je 0xdf9c
0x0000df8b      4d85e4         test r12, r12
0x0000df8e      c744245c0100.  mov dword [rsp + 0x5c], 1
0x0000df96      0f851d0a0000   jne 0xe9b9
0x0000df9c      4531e4         xor r12d, r12d
0x0000df9f      31ed           xor ebp, ebp
0x0000dfa1      0f1f80000000.  nop dword [rax]
0x0000dfa8      4883bc247002.  cmp qword [rsp + 0x270], 0
0x0000dfb1      c74424580100.  mov dword [rsp + 0x58], 1
0x0000dfb9      0f8481030000   je 0xe340
0x0000dfbf      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0000dfc4      488b442448     mov rax, qword [rsp + 0x48]
0x0000dfc9      488bbc248800.  mov rdi, qword [rsp + 0x88]
0x0000dfd1      498b7310       mov rsi, qword [r11 + 0x10]
0x0000dfd5      488b5828       mov rbx, qword [rax + 0x28]
0x0000dfd9      418b93b40000.  mov edx, dword [r11 + 0xb4]
0x0000dfe0      488b4018       mov rax, qword [rax + 0x18]
0x0000dfe4      4889bc247801.  mov qword [rsp + 0x178], rdi
0x0000dfec      4889bc247001.  mov qword [rsp + 0x170], rdi
0x0000dff4      4889742408     mov qword [rsp + 8], rsi
0x0000dff9      488d7601       lea rsi, [rsi + 1]
0x0000dffd      48899c24b000.  mov qword [rsp + 0xb0], rbx
0x0000e005      4863ca         movsxd rcx, edx
0x0000e008      48c1e816       shr rax, 0x16
0x0000e00c      48899c249801.  mov qword [rsp + 0x198], rbx
0x0000e014      83e001         and eax, 1
0x0000e017      4839ce         cmp rsi, rcx
0x0000e01a      899424b00100.  mov dword [rsp + 0x1b0], edx
0x0000e021      480f4cf1       cmovl rsi, rcx
0x0000e025      488d4f01       lea rcx, [rdi + 1]
0x0000e029      888424a80100.  mov byte [rsp + 0x1a8], al
0x0000e030      4889bc248801.  mov qword [rsp + 0x188], rdi
0x0000e038      4889bc248001.  mov qword [rsp + 0x180], rdi
0x0000e040      4839ce         cmp rsi, rcx
0x0000e043      488b3c24       mov rdi, qword [rsp]
0x0000e047      480f4ff1       cmovg rsi, rcx
0x0000e04b      4885db         test rbx, rbx
0x0000e04e      488b4c2478     mov rcx, qword [rsp + 0x78]
0x0000e053      0f95c3         setne bl
0x0000e056      09d8           or eax, ebx
0x0000e058      888424ab0100.  mov byte [rsp + 0x1ab], al
0x0000e05f      410fb683b000.  movzx eax, byte [r11 + 0xb0]
0x0000e067      48898c242001.  mov qword [rsp + 0x120], rcx
0x0000e06f      89c2           mov edx, eax
0x0000e071      c0e803         shr al, 3
0x0000e074      c0ea02         shr dl, 2
0x0000e077      83e001         and eax, 1
0x0000e07a      83e201         and edx, 1
0x0000e07d      888424aa0100.  mov byte [rsp + 0x1aa], al
0x0000e084      889424a90100.  mov byte [rsp + 0x1a9], dl
0x0000e08b      e8407dffff     call sym.re_string_realloc_buffers
0x0000e090      85c0           test eax, eax
0x0000e092      8944245c       mov dword [rsp + 0x5c], eax
0x0000e096      0f85f4080000   jne 0xe990
0x0000e09c      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000e0a1      488d87b80000.  lea rax, [rdi + 0xb8]
0x0000e0a8      48898424a001.  mov qword [rsp + 0x1a0], rax
0x0000e0b0      0fb687b00000.  movzx eax, byte [rdi + 0xb0]
0x0000e0b7      88442408       mov byte [rsp + 8], al
0x0000e0bb      c0e804         shr al, 4
0x0000e0be      83e001         and eax, 1
0x0000e0c1      80bc24ab0100.  cmp byte [rsp + 0x1ab], 0
0x0000e0c9      888424ae0100.  mov byte [rsp + 0x1ae], al
0x0000e0d0      7523           jne 0xe0f5
0x0000e0d2      488b742438     mov rsi, qword [rsp + 0x38]
0x0000e0d7      488b442478     mov rax, qword [rsp + 0x78]
0x0000e0dc      83beb4000000.  cmp dword [rsi + 0xb4], 1
0x0000e0e3      488984242801.  mov qword [rsp + 0x128], rax
0x0000e0eb      488b84248800.  mov rax, qword [rsp + 0x88]
0x0000e0f3      7e02           jle 0xe0f7
0x0000e0f5      31c0           xor eax, eax
0x0000e0f7      488984245001.  mov qword [rsp + 0x150], rax
0x0000e0ff      488984245801.  mov qword [rsp + 0x158], rax
0x0000e107      488b442448     mov rax, qword [rsp + 0x48]
0x0000e10c      4c89ac248801.  mov qword [rsp + 0x188], r13
0x0000e114      4c89ac248001.  mov qword [rsp + 0x180], r13
0x0000e11c      0fb64038       movzx eax, byte [rax + 0x38]
0x0000e120      88442408       mov byte [rsp + 8], al
0x0000e124      c0e807         shr al, 7
0x0000e127      888424ad0100.  mov byte [rsp + 0x1ad], al
0x0000e12e      488b442438     mov rax, qword [rsp + 0x38]
0x0000e133      4c8bb0980000.  mov r14, qword [rax + 0x98]
0x0000e13a      8b8424800200.  mov eax, dword [rsp + 0x280]
0x0000e141      48c78424c801.  mov qword [rsp + 0x1c8], 0xffffffffffffffff
0x0000e14d      4f8d2c36       lea r13, [r14 + r14]
0x0000e151      898424c00100.  mov dword [rsp + 0x1c0], eax
0x0000e158      4d85ed         test r13, r13
0x0000e15b      7e52           jle 0xe1af
0x0000e15d      48b866666666.  movabs rax, 0x666666666666666
0x0000e167      4939c5         cmp r13, rax
0x0000e16a      0f8f400d0000   jg 0xeeb0
0x0000e170      4b8d7cf500     lea rdi, [r13 + r14*8]
0x0000e175      48c1e703       shl rdi, 3
0x0000e179      e84239ffff     call sym.imp.malloc
0x0000e17e      4c89f7         mov rdi, r14
0x0000e181      4989c7         mov r15, rax
0x0000e184      48898424f801.  mov qword [rsp + 0x1f8], rax
0x0000e18c      48c1e704       shl rdi, 4
0x0000e190      e82b39ffff     call sym.imp.malloc
0x0000e195      4885c0         test rax, rax
0x0000e198      488984241802.  mov qword [rsp + 0x218], rax
0x0000e1a0      0f840a0d0000   je 0xeeb0
0x0000e1a6      4d85ff         test r15, r15
0x0000e1a9      0f84010d0000   je 0xeeb0
0x0000e1af      4883bc247002.  cmp qword [rsp + 0x270], 1
0x0000e1b8      4c89ac24f001.  mov qword [rsp + 0x1f0], r13
0x0000e1c0      c78424000200.  mov dword [rsp + 0x200], 1
0x0000e1cb      4c89ac241002.  mov qword [rsp + 0x210], r13
0x0000e1d3      0f861f110000   jbe 0xf2f8
0x0000e1d9      488b84246001.  mov rax, qword [rsp + 0x160]
0x0000e1e1      48bafeffffff.  movabs rdx, 0x1ffffffffffffffe          ; 2305843009213693950
0x0000e1eb      4839d0         cmp rax, rdx
0x0000e1ee      0f87bc0c0000   ja 0xeeb0
0x0000e1f4      488d3cc50800.  lea rdi, [rax*8 + 8]
0x0000e1fc      e8bf38ffff     call sym.imp.malloc
0x0000e201      4885c0         test rax, rax
0x0000e204      4889c7         mov rdi, rax
0x0000e207      48898424d801.  mov qword [rsp + 0x1d8], rax
0x0000e20f      0f84eb0c0000   je 0xef00
0x0000e215      8b8424800200.  mov eax, dword [rsp + 0x280]
0x0000e21c      4889ac24d800.  mov qword [rsp + 0xd8], rbp
0x0000e224      83e001         and eax, 1
0x0000e227      83f801         cmp eax, 1
0x0000e22a      19c0           sbb eax, eax
0x0000e22c      83e002         and eax, 2
0x0000e22f      83c004         add eax, 4
0x0000e232      898424900100.  mov dword [rsp + 0x190], eax
0x0000e239      31c0           xor eax, eax
0x0000e23b      4c39e5         cmp rbp, r12
0x0000e23e      0f9ec0         setle al
0x0000e241      8d4400ff       lea eax, [rax + rax - 1]
0x0000e245      898424ac0000.  mov dword [rsp + 0xac], eax
0x0000e24c      4c89e0         mov rax, r12
0x0000e24f      480f4ec5       cmovle rax, rbp
0x0000e253      488984249000.  mov qword [rsp + 0x90], rax
0x0000e25b      4c89e0         mov rax, r12
0x0000e25e      480f4dc5       cmovge rax, rbp
0x0000e262      48837c246800   cmp qword [rsp + 0x68], 0
0x0000e268      4889442470     mov qword [rsp + 0x70], rax
0x0000e26d      488b442438     mov rax, qword [rsp + 0x38]
0x0000e272      8bb0b4000000   mov esi, dword [rax + 0xb4]
0x0000e278      b808000000     mov eax, 8
0x0000e27d      89b424c80000.  mov dword [rsp + 0xc8], esi
0x0000e284      7439           je 0xe2bf
0x0000e286      83fe01         cmp esi, 1
0x0000e289      b904000000     mov ecx, 4
0x0000e28e      741e           je 0xe2ae
0x0000e290      488b442448     mov rax, qword [rsp + 0x48]
0x0000e295      f6401a40       test byte [rax + 0x1a], 0x40
0x0000e299      0f857f0d0000   jne 0xf01e
0x0000e29f      4883bc24b000.  cmp qword [rsp + 0xb0], 0
0x0000e2a8      0f85700d0000   jne 0xf01e
0x0000e2ae      31d2           xor edx, edx
0x0000e2b0      4c39e5         cmp rbp, r12
0x0000e2b3      0fb6c3         movzx eax, bl
0x0000e2b6      0f9ec2         setle dl
0x0000e2b9      09c8           or eax, ecx
0x0000e2bb      01d2           add edx, edx
0x0000e2bd      09d0           or eax, edx
0x0000e2bf      483b6c2470     cmp rbp, qword [rsp + 0x70]
0x0000e2c4      0f9fc1         setg cl
0x0000e2c7      483bac249000.  cmp rbp, qword [rsp + 0x90]
0x0000e2cf      0f9cc2         setl dl
0x0000e2d2      08d1           or cl, dl
0x0000e2d4      0f85cf0a0000   jne 0xeda9
0x0000e2da      488d8c24d800.  lea rcx, [rsp + 0xd8]
0x0000e2e2      4c39e5         cmp rbp, r12
0x0000e2e5      ba00000000     mov edx, 0
0x0000e2ea      480f4ed1       cmovle rdx, rcx
0x0000e2ee      4885d2         test rdx, rdx
0x0000e2f1      48899424c000.  mov qword [rsp + 0xc0], rdx
0x0000e2f9      0f958424cf00.  setne byte [rsp + 0xcf]
0x0000e301      83e804         sub eax, 4
0x0000e304      898424a80000.  mov dword [rsp + 0xa8], eax
0x0000e30b      488d8424d000.  lea rax, [rsp + 0xd0]
0x0000e313      4889442428     mov qword [rsp + 0x28], rax
0x0000e318      8b8424a80000.  mov eax, dword [rsp + 0xa8]
0x0000e31f      83f804         cmp eax, 4
0x0000e322      0f87e50b0000   ja 0xef0d
0x0000e328      488d0d316d00.  lea rcx, [0x00015060]
0x0000e32f      48630481       movsxd rax, dword [rcx + rax*4]
0x0000e333      4801c8         add rax, rcx
0x0000e336      ffe0           jmp rax
0x0000e338      0f1f84000000.  nop dword [rax + rax]
0x0000e340      488b442438     mov rax, qword [rsp + 0x38]
0x0000e345      4883b8980000.  cmp qword [rax + 0x98], 0
0x0000e34d      0f95c0         setne al
0x0000e350      0fb6c0         movzx eax, al
0x0000e353      89442458       mov dword [rsp + 0x58], eax
0x0000e357      e963fcffff     jmp 0xdfbf
0x0000e35c      0f1f4000       nop dword [rax]
0x0000e360      48c744246800.  mov qword [rsp + 0x68], 0
0x0000e369      e978fbffff     jmp 0xdee6
0x0000e36e      48396c2470     cmp qword [rsp + 0x70], rbp
0x0000e373      7e5a           jle 0xe3cf
0x0000e375      488b442478     mov rax, qword [rsp + 0x78]
0x0000e37a      488b7c2468     mov rdi, qword [rsp + 0x68]
0x0000e37f      0fb61428       movzx edx, byte [rax + rbp]
0x0000e383      488d4501       lea rax, [rbp + 1]
0x0000e387      803c1700       cmp byte [rdi + rdx], 0
0x0000e38b      0f8587000000   jne 0xe418
0x0000e391      488b742468     mov rsi, qword [rsp + 0x68]
0x0000e396      488b4c2470     mov rcx, qword [rsp + 0x70]
0x0000e39b      488b7c2478     mov rdi, qword [rsp + 0x78]
0x0000e3a0      eb18           jmp 0xe3ba
0x0000e3a2      660f1f440000   nop word [rax + rax]
0x0000e3a8      0fb61407       movzx edx, byte [rdi + rax]
0x0000e3ac      488d4001       lea rax, [rax + 1]
0x0000e3b0      803c1600       cmp byte [rsi + rdx], 0
0x0000e3b4      0f8597110000   jne 0xf551
0x0000e3ba      4839c1         cmp rcx, rax
0x0000e3bd      4889c5         mov rbp, rax
0x0000e3c0      75e6           jne 0xe3a8
0x0000e3c2      488b442470     mov rax, qword [rsp + 0x70]
0x0000e3c7      48898424d800.  mov qword [rsp + 0xd8], rax
0x0000e3cf      48396c2470     cmp qword [rsp + 0x70], rbp
0x0000e3d4      7542           jne 0xe418
0x0000e3d6      31c0           xor eax, eax
0x0000e3d8      488b742470     mov rsi, qword [rsp + 0x70]
0x0000e3dd      4839b4248800.  cmp qword [rsp + 0x88], rsi
0x0000e3e5      7e09           jle 0xe3f0
0x0000e3e7      488b442478     mov rax, qword [rsp + 0x78]
0x0000e3ec      0fb60430       movzx eax, byte [rax + rsi]
0x0000e3f0      488bb424b000.  mov rsi, qword [rsp + 0xb0]
0x0000e3f8      4885f6         test rsi, rsi
0x0000e3fb      7404           je 0xe401
0x0000e3fd      0fb60406       movzx eax, byte [rsi + rax]
0x0000e401      488b7c2468     mov rdi, qword [rsp + 0x68]
0x0000e406      803c0700       cmp byte [rdi + rax], 0
0x0000e40a      0f8499090000   je 0xeda9
0x0000e410      488b6c2470     mov rbp, qword [rsp + 0x70]
0x0000e415      0f1f00         nop dword [rax]
0x0000e418      8b9424800200.  mov edx, dword [rsp + 0x280]
0x0000e41f      488b3c24       mov rdi, qword [rsp]
0x0000e423      4889ee         mov rsi, rbp
0x0000e426      e8a5b0ffff     call sym.re_string_reconstruct
0x0000e42b      85c0           test eax, eax
0x0000e42d      8944245c       mov dword [rsp + 0x5c], eax
0x0000e431      0f8559050000   jne 0xe990
0x0000e437      83bc24c80000.  cmp dword [rsp + 0xc8], 1
0x0000e43f      741c           je 0xe45d
0x0000e441      4883bc245001.  cmp qword [rsp + 0x150], 0
0x0000e44a      7411           je 0xe45d
0x0000e44c      488b84243001.  mov rax, qword [rsp + 0x130]
0x0000e454      8338ff         cmp dword [rax], 0xffffffff
0x0000e457      0f8424090000   je 0xed81
0x0000e45d      488b9c24b801.  mov rbx, qword [rsp + 0x1b8]
0x0000e465      0fb6442458     movzx eax, byte [rsp + 0x58]
0x0000e46a      c78424000200.  mov dword [rsp + 0x200], 0
0x0000e475      48c78424e801.  mov qword [rsp + 0x1e8], 0
0x0000e481      48c78424e001.  mov qword [rsp + 0x1e0], 0
0x0000e48d      c78424d00000.  mov dword [rsp + 0xd0], 0
0x0000e498      4c8b7348       mov r14, qword [rbx + 0x48]
0x0000e49c      83e001         and eax, 1
0x0000e49f      888424ce0000.  mov byte [rsp + 0xce], al
0x0000e4a6      488b84246801.  mov rax, qword [rsp + 0x168]
0x0000e4ae      41807e6800     cmp byte [r14 + 0x68], 0
0x0000e4b3      4889442408     mov qword [rsp + 8], rax
0x0000e4b8      0f8872090000   js 0xee30
0x0000e4be      488b8424d801.  mov rax, qword [rsp + 0x1d8]
0x0000e4c6      4885c0         test rax, rax
0x0000e4c9      7417           je 0xe4e2
0x0000e4cb      4883bb980000.  cmp qword [rbx + 0x98], 0
0x0000e4d3      488b7c2408     mov rdi, qword [rsp + 8]
0x0000e4d8      4c8934f8       mov qword [rax + rdi*8], r14
0x0000e4dc      0f85e90e0000   jne 0xf3cb
0x0000e4e2      0fb68424cf00.  movzx eax, byte [rsp + 0xcf]
0x0000e4ea      88442418       mov byte [rsp + 0x18], al
0x0000e4ee      410fb64668     movzx eax, byte [r14 + 0x68]
0x0000e4f3      a810           test al, 0x10
0x0000e4f5      48c7442420ff.  mov qword [rsp + 0x20], 0xffffffffffffffff
0x0000e4fe      48c744243000.  mov qword [rsp + 0x30], 0
0x0000e507      0f85830e0000   jne 0xf390
0x0000e50d      488b8424c000.  mov rax, qword [rsp + 0xc0]
0x0000e515      4c8b84246801.  mov r8, qword [rsp + 0x168]
0x0000e51d      4889442450     mov qword [rsp + 0x50], rax
0x0000e522      488d8424e000.  lea rax, [rsp + 0xe0]
0x0000e52a      4889442460     mov qword [rsp + 0x60], rax
0x0000e52f      488d8424d400.  lea rax, [rsp + 0xd4]
0x0000e537      488984248000.  mov qword [rsp + 0x80], rax
0x0000e53f      eb5b           jmp 0xe59c
0x0000e541      0f1f80000000.  nop dword [rax]
0x0000e548      4d39ee         cmp r14, r13
0x0000e54b      4c8b84246801.  mov r8, qword [rsp + 0x168]
0x0000e553      0f94c0         sete al
0x0000e556      20442418       and byte [rsp + 0x18], al
0x0000e55a      410fb64568     movzx eax, byte [r13 + 0x68]
0x0000e55f      480f445c2408   cmove rbx, qword [rsp + 8]
0x0000e565      a810           test al, 0x10
0x0000e567      48895c2408     mov qword [rsp + 8], rbx
0x0000e56c      742b           je 0xe599
0x0000e56e      84c0           test al, al
0x0000e570      0f88ba040000   js 0xea30
0x0000e576      8b442458       mov eax, dword [rsp + 0x58]
0x0000e57a      4c89442420     mov qword [rsp + 0x20], r8
0x0000e57f      85c0           test eax, eax
0x0000e581      0f841f010000   je 0xe6a6
0x0000e587      48c744243001.  mov qword [rsp + 0x30], 1
0x0000e590      48c744245000.  mov qword [rsp + 0x50], 0
0x0000e599      4d89ee         mov r14, r13
0x0000e59c      4c3984248801.  cmp qword [rsp + 0x188], r8
0x0000e5a4      0f8eea000000   jle 0xe694
0x0000e5aa      488b84246001.  mov rax, qword [rsp + 0x160]
0x0000e5b2      498d5801       lea rbx, [r8 + 1]
0x0000e5b6      4839c3         cmp rbx, rax
0x0000e5b9      0f8da1040000   jge 0xea60
0x0000e5bf      488b84245001.  mov rax, qword [rsp + 0x150]
0x0000e5c7      4839c3         cmp rbx, rax
0x0000e5ca      0f8d80070000   jge 0xed50
0x0000e5d0      41f6466820     test byte [r14 + 0x68], 0x20
0x0000e5d5      0f85c5040000   jne 0xeaa0
0x0000e5db      498d4001       lea rax, [r8 + 1]
0x0000e5df      488984246801.  mov qword [rsp + 0x168], rax
0x0000e5e7      488b84242801.  mov rax, qword [rsp + 0x128]
0x0000e5ef      460fb62c00     movzx r13d, byte [rax + r8]
0x0000e5f4      498b4658       mov rax, qword [r14 + 0x58]
0x0000e5f8      4885c0         test rax, rax
0x0000e5fb      0f840f070000   je 0xed10
0x0000e601      4e8b2ce8       mov r13, qword [rax + r13*8]
0x0000e605      4883bc24d801.  cmp qword [rsp + 0x1d8], 0
0x0000e60e      7414           je 0xe624
0x0000e610      488b3424       mov rsi, qword [rsp]
0x0000e614      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000e619      4c89ea         mov rdx, r13
0x0000e61c      e8eff2ffff     call sym.merge_state_with_log
0x0000e621      4989c5         mov r13, rax
0x0000e624      4d85ed         test r13, r13
0x0000e627      0f851bffffff   jne 0xe548
0x0000e62d      8b8c24d00000.  mov ecx, dword [rsp + 0xd0]
0x0000e634      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x0000e63c      85c9           test ecx, ecx
0x0000e63e      0f85bc080000   jne 0xef00
0x0000e644      4885ff         test rdi, rdi
0x0000e647      744b           je 0xe694
0x0000e649      0fb68424ce00.  movzx eax, byte [rsp + 0xce]
0x0000e651      83f001         xor eax, 1
0x0000e654      84442430       test byte [rsp + 0x30], al
0x0000e658      753a           jne 0xe694
0x0000e65a      488bb424e001.  mov rsi, qword [rsp + 0x1e0]
0x0000e662      488b84246801.  mov rax, qword [rsp + 0x168]
0x0000e66a      31c9           xor ecx, ecx
0x0000e66c      eb15           jmp 0xe683
0x0000e66e      6690           nop
0x0000e670      48833cd700     cmp qword [rdi + rdx*8], 0
0x0000e675      4889d0         mov rax, rdx
0x0000e678      b901000000     mov ecx, 1
0x0000e67d      0f856d030000   jne 0xe9f0
0x0000e683      488d5001       lea rdx, [rax + 1]
0x0000e687      4839d6         cmp rsi, rdx
0x0000e68a      7de4           jge 0xe670
0x0000e68c      84c9           test cl, cl
0x0000e68e      0f85ca0e0000   jne 0xf55e
0x0000e694      488b442450     mov rax, qword [rsp + 0x50]
0x0000e699      4885c0         test rax, rax
0x0000e69c      7408           je 0xe6a6
0x0000e69e      488b7c2408     mov rdi, qword [rsp + 8]
0x0000e6a3      480138         add qword [rax], rdi
0x0000e6a6      488b442420     mov rax, qword [rsp + 0x20]
0x0000e6ab      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000e6af      0f84bb060000   je 0xed70
0x0000e6b5      4883f8fe       cmp rax, 0xfffffffffffffffe
0x0000e6b9      0f84f1070000   je 0xeeb0
0x0000e6bf      488b442420     mov rax, qword [rsp + 0x20]
0x0000e6c4      48898424c801.  mov qword [rsp + 0x1c8], rax
0x0000e6cc      488b442448     mov rax, qword [rsp + 0x48]
0x0000e6d1      f6403810       test byte [rax + 0x38], 0x10
0x0000e6d5      0f85b5070000   jne 0xee90
0x0000e6db      4883bc247002.  cmp qword [rsp + 0x270], 1
0x0000e6e4      0f86f2080000   jbe 0xefdc
0x0000e6ea      488b4c2420     mov rcx, qword [rsp + 0x20]
0x0000e6ef      488b9c24d801.  mov rbx, qword [rsp + 0x1d8]
0x0000e6f7      488b3c24       mov rdi, qword [rsp]
0x0000e6fb      488b04cb       mov rax, qword [rbx + rcx*8]
0x0000e6ff      488b7010       mov rsi, qword [rax + 0x10]
0x0000e703      488d5018       lea rdx, [rax + 0x18]
0x0000e707      e8f4acffff     call sym.check_halt_state_context.isra.20
0x0000e70c      4989c5         mov r13, rax
0x0000e70f      48898424d001.  mov qword [rsp + 0x1d0], rax
0x0000e717      488b442438     mov rax, qword [rsp + 0x38]
0x0000e71c      f680b0000000.  test byte [rax + 0xb0], 1
0x0000e723      751b           jne 0xe740
0x0000e725      488b442438     mov rax, qword [rsp + 0x38]
0x0000e72a      4883b8980000.  cmp qword [rax + 0x98], 0
0x0000e732      0f8494090000   je 0xf0cc
0x0000e738      4c8bac24d001.  mov r13, qword [rsp + 0x1d0]
0x0000e740      48befeffffff.  movabs rsi, 0x1ffffffffffffffe          ; 2305843009213693950
0x0000e74a      4839742420     cmp qword [rsp + 0x20], rsi
0x0000e74f      4c8bbc24b801.  mov r15, qword [rsp + 0x1b8]
0x0000e757      0f875e0c0000   ja 0xf3bb
0x0000e75d      488b442420     mov rax, qword [rsp + 0x20]
0x0000e762      4883c001       add rax, 1
0x0000e766      488d1cc50000.  lea rbx, [rax*8]
0x0000e76e      4889442408     mov qword [rsp + 8], rax
0x0000e773      4889df         mov rdi, rbx
0x0000e776      e84533ffff     call sym.imp.malloc
0x0000e77b      4885c0         test rax, rax
0x0000e77e      4989c4         mov r12, rax
0x0000e781      0f8429070000   je 0xeeb0
0x0000e787      4983bf980000.  cmp qword [r15 + 0x98], 0
0x0000e78f      0f8490080000   je 0xf025
0x0000e795      4889df         mov rdi, rbx
0x0000e798      e82333ffff     call sym.imp.malloc
0x0000e79d      4885c0         test rax, rax
0x0000e7a0      4889c5         mov rbp, rax
0x0000e7a3      0f84ff060000   je 0xeea8
0x0000e7a9      4c8b742420     mov r14, qword [rsp + 0x20]
0x0000e7ae      488d9c24e000.  lea rbx, [rsp + 0xe0]
0x0000e7b6      4c897c2410     mov qword [rsp + 0x10], r15
0x0000e7bb      4889442418     mov qword [rsp + 0x18], rax
0x0000e7c0      488b442408     mov rax, qword [rsp + 8]
0x0000e7c5      31f6           xor esi, esi
0x0000e7c7      4889ef         mov rdi, rbp
0x0000e7ca      488d14c50000.  lea rdx, [rax*8]
0x0000e7d2      e83932ffff     call sym.imp.memset
0x0000e7d7      660fefc0       pxor xmm0, xmm0
0x0000e7db      4c89a424e000.  mov qword [rsp + 0xe0], r12
0x0000e7e3      4889ac24e800.  mov qword [rsp + 0xe8], rbp
0x0000e7eb      4c89ac24f000.  mov qword [rsp + 0xf0], r13
0x0000e7f3      4889de         mov rsi, rbx
0x0000e7f6      4c89b424f800.  mov qword [rsp + 0xf8], r14
0x0000e7fe      488b3c24       mov rdi, qword [rsp]
0x0000e802      0f294320       movaps xmmword [rbx + 0x20], xmm0
0x0000e806      48c743300000.  mov qword [rbx + 0x30], 0
0x0000e80e      e8edf2ffff     call sym.sift_states_backward
0x0000e813      488bbc241001.  mov rdi, qword [rsp + 0x110]
0x0000e81b      4189c7         mov r15d, eax
0x0000e81e      e85d30ffff     call sym.imp.free
0x0000e823      4585ff         test r15d, r15d
0x0000e826      0f85180c0000   jne 0xf444
0x0000e82c      49833c2400     cmp qword [r12], 0
0x0000e831      0f856c0c0000   jne 0xf4a3
0x0000e837      48837d0000     cmp qword [rbp], 0
0x0000e83c      0f85610c0000   jne 0xf4a3
0x0000e842      488b9424d801.  mov rdx, qword [rsp + 0x1d8]
0x0000e84a      660f1f440000   nop word [rax + rax]
0x0000e850      4983ee01       sub r14, 1
0x0000e854      4983feff       cmp r14, 0xffffffffffffffff
0x0000e858      0f84bd0a0000   je 0xf31b
0x0000e85e      4a8b04f2       mov rax, qword [rdx + r14*8]
0x0000e862      4885c0         test rax, rax
0x0000e865      74e9           je 0xe850
0x0000e867      f6406810       test byte [rax + 0x68], 0x10
0x0000e86b      74e3           je 0xe850
0x0000e86d      488b7010       mov rsi, qword [rax + 0x10]
0x0000e871      488b3c24       mov rdi, qword [rsp]
0x0000e875      488d5018       lea rdx, [rax + 0x18]
0x0000e879      4c89f1         mov rcx, r14
0x0000e87c      e87fabffff     call sym.check_halt_state_context.isra.20
0x0000e881      4989c5         mov r13, rax
0x0000e884      498d4601       lea rax, [r14 + 1]
0x0000e888      4889442408     mov qword [rsp + 8], rax
0x0000e88d      e92effffff     jmp 0xe7c0
0x0000e892      48396c2470     cmp qword [rsp + 0x70], rbp
0x0000e897      0f8e32fbffff   jle 0xe3cf
0x0000e89d      488b442478     mov rax, qword [rsp + 0x78]
0x0000e8a2      488bbc24b000.  mov rdi, qword [rsp + 0xb0]
0x0000e8aa      488b742468     mov rsi, qword [rsp + 0x68]
0x0000e8af      0fb60428       movzx eax, byte [rax + rbp]
0x0000e8b3      0fb61407       movzx edx, byte [rdi + rax]
0x0000e8b7      488d4501       lea rax, [rbp + 1]
0x0000e8bb      803c1600       cmp byte [rsi + rdx], 0
0x0000e8bf      0f8553fbffff   jne 0xe418
0x0000e8c5      488b742468     mov rsi, qword [rsp + 0x68]
0x0000e8ca      488bbc24b000.  mov rdi, qword [rsp + 0xb0]
0x0000e8d2      488b4c2470     mov rcx, qword [rsp + 0x70]
0x0000e8d7      4c8b442478     mov r8, qword [rsp + 0x78]
0x0000e8dc      eb19           jmp 0xe8f7
0x0000e8de      6690           nop
0x0000e8e0      410fb60400     movzx eax, byte [r8 + rax]
0x0000e8e5      0fb61407       movzx edx, byte [rdi + rax]
0x0000e8e9      488d4501       lea rax, [rbp + 1]
0x0000e8ed      803c1600       cmp byte [rsi + rdx], 0
0x0000e8f1      0f855a0c0000   jne 0xf551
0x0000e8f7      4839c1         cmp rcx, rax
0x0000e8fa      4889c5         mov rbp, rax
0x0000e8fd      75e1           jne 0xe8e0
0x0000e8ff      e9befaffff     jmp 0xe3c2
0x0000e904      4839ac249000.  cmp qword [rsp + 0x90], rbp
0x0000e90c      0f8f97040000   jg 0xeda9
0x0000e912      31c9           xor ecx, ecx
0x0000e914      4889e8         mov rax, rbp
0x0000e917      488b7c2468     mov rdi, qword [rsp + 0x68]
0x0000e91c      488bb424b000.  mov rsi, qword [rsp + 0xb0]
0x0000e924      4c8b8c249000.  mov r9, qword [rsp + 0x90]
0x0000e92c      4c8b542478     mov r10, qword [rsp + 0x78]
0x0000e931      4c8b84248800.  mov r8, qword [rsp + 0x88]
0x0000e939      eb17           jmp 0xe952
0x0000e93b      0f1f440000     nop dword [rax + rax]
0x0000e940      4883e801       sub rax, 1
0x0000e944      b901000000     mov ecx, 1
0x0000e949      4c39c8         cmp rax, r9
0x0000e94c      0f8cde090000   jl 0xf330
0x0000e952      31d2           xor edx, edx
0x0000e954      4939c0         cmp r8, rax
0x0000e957      7e05           jle 0xe95e
0x0000e959      410fb61402     movzx edx, byte [r10 + rax]
0x0000e95e      4885f6         test rsi, rsi
0x0000e961      7404           je 0xe967
0x0000e963      0fb61416       movzx edx, byte [rsi + rdx]
0x0000e967      803c1700       cmp byte [rdi + rdx], 0
0x0000e96b      74d3           je 0xe940
0x0000e96d      84c9           test cl, cl
0x0000e96f      0f84a3faffff   je 0xe418
0x0000e975      48898424d800.  mov qword [rsp + 0xd8], rax
0x0000e97d      4889c5         mov rbp, rax
0x0000e980      e993faffff     jmp 0xe418
0x0000e985      0f1f00         nop dword [rax]
0x0000e988      8944245c       mov dword [rsp + 0x5c], eax
0x0000e98c      0f1f4000       nop dword [rax]
0x0000e990      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x0000e998      e8e32effff     call sym.imp.free
0x0000e99d      488b442438     mov rax, qword [rsp + 0x38]
0x0000e9a2      4883b8980000.  cmp qword [rax + 0x98], 0
0x0000e9aa      0f8520090000   jne 0xf2d0
0x0000e9b0      488b3c24       mov rdi, qword [rsp]
0x0000e9b4      e85787ffff     call sym.re_string_destruct
0x0000e9b9      488bb4242802.  mov rsi, qword [rsp + 0x228]
0x0000e9c1      644833342528.  xor rsi, qword fs:[0x28]
0x0000e9ca      8b44245c       mov eax, dword [rsp + 0x5c]
0x0000e9ce      0f85970b0000   jne 0xf56b
0x0000e9d4      4881c4380200.  add rsp, sym..interp
0x0000e9db      5b             pop rbx
0x0000e9dc      5d             pop rbp
0x0000e9dd      415c           pop r12
0x0000e9df      415d           pop r13
0x0000e9e1      415e           pop r14
0x0000e9e3      415f           pop r15
0x0000e9e5      c3             ret
0x0000e9e6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000e9f0      488b3424       mov rsi, qword [rsp]
0x0000e9f4      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000e9f9      488994246801.  mov qword [rsp + 0x168], rdx
0x0000ea01      31d2           xor edx, edx
0x0000ea03      e808efffff     call sym.merge_state_with_log
0x0000ea08      8b9424d00000.  mov edx, dword [rsp + 0xd0]
0x0000ea0f      85d2           test edx, edx
0x0000ea11      0f8536090000   jne 0xf34d
0x0000ea17      4885c0         test rax, rax
0x0000ea1a      0f8540090000   jne 0xf360
0x0000ea20      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x0000ea28      e92dfcffff     jmp 0xe65a
0x0000ea2d      0f1f00         nop dword [rax]
0x0000ea30      498b7510       mov rsi, qword [r13 + 0x10]
0x0000ea34      488b3c24       mov rdi, qword [rsp]
0x0000ea38      498d5518       lea rdx, [r13 + 0x18]
0x0000ea3c      4c89c1         mov rcx, r8
0x0000ea3f      4c89442410     mov qword [rsp + 0x10], r8
0x0000ea44      e8b7a9ffff     call sym.check_halt_state_context.isra.20
0x0000ea49      4885c0         test rax, rax
0x0000ea4c      4c8b442410     mov r8, qword [rsp + 0x10]
0x0000ea51      0f8442fbffff   je 0xe599
0x0000ea57      e91afbffff     jmp 0xe576
0x0000ea5c      0f1f4000       nop dword [rax]
0x0000ea60      483b84247801.  cmp rax, qword [rsp + 0x178]
0x0000ea68      0f8d51fbffff   jge 0xe5bf
0x0000ea6e      488b3c24       mov rdi, qword [rsp]
0x0000ea72      8d7301         lea esi, [rbx + 1]
0x0000ea75      e8e67effff     call sym.extend_buffers
0x0000ea7a      85c0           test eax, eax
0x0000ea7c      898424d00000.  mov dword [rsp + 0xd0], eax
0x0000ea83      0f85df080000   jne 0xf368
0x0000ea89      41f6466820     test byte [r14 + 0x68], 0x20
0x0000ea8e      4c8b84246801.  mov r8, qword [rsp + 0x168]
0x0000ea96      0f843ffbffff   je 0xe5db
0x0000ea9c      0f1f4000       nop dword [rax]
0x0000eaa0      49837e1000     cmp qword [r14 + 0x10], 0
0x0000eaa5      4c8bac24b801.  mov r13, qword [rsp + 0x1b8]
0x0000eaad      0f8e28030000   jle 0xeddb
0x0000eab3      498d85d80000.  lea rax, [r13 + 0xd8]
0x0000eaba      4531e4         xor r12d, r12d
0x0000eabd      48899c24a000.  mov qword [rsp + 0xa0], rbx
0x0000eac5      4c89e3         mov rbx, r12
0x0000eac8      4d89c4         mov r12, r8
0x0000eacb      4889442440     mov qword [rsp + 0x40], rax
0x0000ead0      e953010000     jmp 0xec28
0x0000ead5      0f1f00         nop dword [rax]
0x0000ead8      a801           test al, 1
0x0000eada      0f843a010000   je 0xec1a
0x0000eae0      83e108         and ecx, 8
0x0000eae3      0f8531010000   jne 0xec1a
0x0000eae9      f6c220         test dl, 0x20                           ; "@"
0x0000eaec      7408           je 0xeaf6
0x0000eaee      a802           test al, 2
0x0000eaf0      0f8424010000   je 0xec1a
0x0000eaf6      81e280000000   and edx, 0x80
0x0000eafc      7412           je 0xeb10
0x0000eafe      a808           test al, 8
0x0000eb00      0f8414010000   je 0xec1a
0x0000eb06      662e0f1f8400.  nop word cs:[rax + rax]
0x0000eb10      488b0c24       mov rcx, qword [rsp]
0x0000eb14      488b742440     mov rsi, qword [rsp + 0x40]
0x0000eb19      4d89e0         mov r8, r12
0x0000eb1c      4c89fa         mov rdx, r15
0x0000eb1f      4889ef         mov rdi, rbp
0x0000eb22      e8a9d0ffff     call sym.check_node_accept_bytes.isra.31
0x0000eb27      85c0           test eax, eax
0x0000eb29      0f84e3000000   je 0xec12
0x0000eb2f      4863e8         movsxd rbp, eax
0x0000eb32      4803ac246801.  add rbp, qword [rsp + 0x168]
0x0000eb3a      398424000200.  cmp dword [rsp + 0x200], eax
0x0000eb41      0f4d84240002.  cmovge eax, dword [rsp + 0x200]
0x0000eb49      488b3c24       mov rdi, qword [rsp]
0x0000eb4d      4889ee         mov rsi, rbp
0x0000eb50      898424000200.  mov dword [rsp + 0x200], eax
0x0000eb57      e8547fffff     call sym.clean_state_log_if_needed
0x0000eb5c      85c0           test eax, eax
0x0000eb5e      898424d40000.  mov dword [rsp + 0xd4], eax
0x0000eb65      0f8595020000   jne 0xee00
0x0000eb6b      498b4518       mov rax, qword [r13 + 0x18]
0x0000eb6f      4c8d24ed0000.  lea r12, [rbp*8]
0x0000eb77      4a8b04f8       mov rax, qword [rax + r15*8]
0x0000eb7b      4c8bbc24d801.  mov r15, qword [rsp + 0x1d8]
0x0000eb83      488d1440       lea rdx, [rax + rax*2]
0x0000eb87      498b4530       mov rax, qword [r13 + 0x30]
0x0000eb8b      4d01e7         add r15, r12
0x0000eb8e      488d14d0       lea rdx, [rax + rdx*8]
0x0000eb92      498b07         mov rax, qword [r15]
0x0000eb95      4885c0         test rax, rax
0x0000eb98      0f84fa000000   je 0xec98
0x0000eb9e      488b7050       mov rsi, qword [rax + 0x50]
0x0000eba2      488b7c2460     mov rdi, qword [rsp + 0x60]
0x0000eba7      e8649affff     call sym.re_node_set_init_union
0x0000ebac      85c0           test eax, eax
0x0000ebae      898424d40000.  mov dword [rsp + 0xd4], eax
0x0000ebb5      0f8545020000   jne 0xee00
0x0000ebbb      8b9424c00100.  mov edx, dword [rsp + 0x1c0]
0x0000ebc2      488b3c24       mov rdi, qword [rsp]
0x0000ebc6      488d75ff       lea rsi, [rbp - 1]
0x0000ebca      e831a6ffff     call sym.re_string_context_at
0x0000ebcf      488b542460     mov rdx, qword [rsp + 0x60]
0x0000ebd4      488bbc248000.  mov rdi, qword [rsp + 0x80]
0x0000ebdc      89c1           mov ecx, eax
0x0000ebde      4c03a424d801.  add r12, qword [rsp + 0x1d8]
0x0000ebe6      4c89ee         mov rsi, r13
0x0000ebe9      e8829bffff     call sym.re_acquire_state_context
0x0000ebee      488bbc24f000.  mov rdi, qword [rsp + 0xf0]
0x0000ebf6      49890424       mov qword [r12], rax
0x0000ebfa      e8812cffff     call sym.imp.free
0x0000ebff      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x0000ec07      48833cef00     cmp qword [rdi + rbp*8], 0
0x0000ec0c      0f84df000000   je 0xecf1
0x0000ec12      4c8ba4246801.  mov r12, qword [rsp + 0x168]
0x0000ec1a      4883c301       add rbx, 1
0x0000ec1e      493b5e10       cmp rbx, qword [r14 + 0x10]
0x0000ec22      0f8da8010000   jge 0xedd0
0x0000ec28      498b4618       mov rax, qword [r14 + 0x18]
0x0000ec2c      498b6d00       mov rbp, qword [r13]
0x0000ec30      4c8b3cd8       mov r15, qword [rax + rbx*8]
0x0000ec34      4c89f8         mov rax, r15
0x0000ec37      48c1e004       shl rax, 4
0x0000ec3b      4801e8         add rax, rbp
0x0000ec3e      f6400a10       test byte [rax + 0xa], 0x10
0x0000ec42      74d6           je 0xec1a
0x0000ec44      8b4808         mov ecx, dword [rax + 8]
0x0000ec47      f7c100ff0300   test ecx, 0x3ff00
0x0000ec4d      894c2410       mov dword [rsp + 0x10], ecx
0x0000ec51      0f84b9feffff   je 0xeb10
0x0000ec57      8b9424c00100.  mov edx, dword [rsp + 0x1c0]
0x0000ec5e      488b3c24       mov rdi, qword [rsp]
0x0000ec62      4c89e6         mov rsi, r12
0x0000ec65      e896a5ffff     call sym.re_string_context_at
0x0000ec6a      8b4c2410       mov ecx, dword [rsp + 0x10]
0x0000ec6e      c1e908         shr ecx, 8
0x0000ec71      89ca           mov edx, ecx
0x0000ec73      6681e2ff03     and dx, 0x3ff
0x0000ec78      f6c104         test cl, 4
0x0000ec7b      0f8557feffff   jne 0xead8
0x0000ec81      83e108         and ecx, 8
0x0000ec84      0f845ffeffff   je 0xeae9
0x0000ec8a      a801           test al, 1
0x0000ec8c      0f8457feffff   je 0xeae9
0x0000ec92      eb86           jmp 0xec1a
0x0000ec94      0f1f4000       nop dword [rax]
0x0000ec98      f30f6f02       movdqu xmm0, xmmword [rdx]
0x0000ec9c      488d75ff       lea rsi, [rbp - 1]
0x0000eca0      488b3c24       mov rdi, qword [rsp]
0x0000eca4      0f298424e000.  movaps xmmword [rsp + 0xe0], xmm0
0x0000ecac      488b4210       mov rax, qword [rdx + 0x10]
0x0000ecb0      8b9424c00100.  mov edx, dword [rsp + 0x1c0]
0x0000ecb7      48898424f000.  mov qword [rsp + 0xf0], rax
0x0000ecbf      e83ca5ffff     call sym.re_string_context_at
0x0000ecc4      488bbc248000.  mov rdi, qword [rsp + 0x80]
0x0000eccc      488b542460     mov rdx, qword [rsp + 0x60]
0x0000ecd1      89c1           mov ecx, eax
0x0000ecd3      4c89ee         mov rsi, r13
0x0000ecd6      e8959affff     call sym.re_acquire_state_context
0x0000ecdb      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x0000ece3      498907         mov qword [r15], rax
0x0000ece6      48833cef00     cmp qword [rdi + rbp*8], 0
0x0000eceb      0f8521ffffff   jne 0xec12
0x0000ecf1      8b8424d40000.  mov eax, dword [rsp + 0xd4]
0x0000ecf8      85c0           test eax, eax
0x0000ecfa      0f8412ffffff   je 0xec12
0x0000ed00      488b9c24a000.  mov rbx, qword [rsp + 0xa0]
0x0000ed08      e903010000     jmp 0xee10
0x0000ed0d      0f1f00         nop dword [rax]
0x0000ed10      498b6e60       mov rbp, qword [r14 + 0x60]
0x0000ed14      4885ed         test rbp, rbp
0x0000ed17      0f84a8010000   je 0xeec5
0x0000ed1d      488b84246801.  mov rax, qword [rsp + 0x168]
0x0000ed25      8b9424c00100.  mov edx, dword [rsp + 0x1c0]
0x0000ed2c      488b3c24       mov rdi, qword [rsp]
0x0000ed30      488d70ff       lea rsi, [rax - 1]
0x0000ed34      e8c7a4ffff     call sym.re_string_context_at
0x0000ed39      a801           test al, 1
0x0000ed3b      0f84af000000   je 0xedf0
0x0000ed41      4e8baced0008.  mov r13, qword [rbp + r13*8 + 0x800]
0x0000ed49      e9b7f8ffff     jmp 0xe605
0x0000ed4e      6690           nop
0x0000ed50      483b84247801.  cmp rax, qword [rsp + 0x178]
0x0000ed58      0f8d72f8ffff   jge 0xe5d0
0x0000ed5e      e90bfdffff     jmp 0xea6e
0x0000ed63      4c89e7         mov rdi, r12
0x0000ed66      e8152bffff     call sym.imp.free
0x0000ed6b      0f1f440000     nop dword [rax + rax]
0x0000ed70      488b3c24       mov rdi, qword [rsp]
0x0000ed74      e83785ffff     call sym.match_ctx_clean
0x0000ed79      488bac24d800.  mov rbp, qword [rsp + 0xd8]
0x0000ed81      48638424ac00.  movsxd rax, dword [rsp + 0xac]
0x0000ed89      4801c5         add rbp, rax
0x0000ed8c      483bac249000.  cmp rbp, qword [rsp + 0x90]
0x0000ed94      4889ac24d800.  mov qword [rsp + 0xd8], rbp
0x0000ed9c      7c0b           jl 0xeda9
0x0000ed9e      483b6c2470     cmp rbp, qword [rsp + 0x70]
0x0000eda3      0f8e6ff5ffff   jle 0xe318
0x0000eda9      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x0000edb1      c744245c0100.  mov dword [rsp + 0x5c], 1
0x0000edb9      e9dafbffff     jmp 0xe998
0x0000edbe      6690           nop
0x0000edc0      c744245c0100.  mov dword [rsp + 0x5c], 1
0x0000edc8      e9ecfbffff     jmp 0xe9b9
0x0000edcd      0f1f00         nop dword [rax]
0x0000edd0      488b9c24a000.  mov rbx, qword [rsp + 0xa0]
0x0000edd8      4d89e0         mov r8, r12
0x0000eddb      c78424d00000.  mov dword [rsp + 0xd0], 0
0x0000ede6      e9f0f7ffff     jmp 0xe5db
0x0000edeb      0f1f440000     nop dword [rax + rax]
0x0000edf0      4e8b6ced00     mov r13, qword [rbp + r13*8]
0x0000edf5      e90bf8ffff     jmp 0xe605
0x0000edfa      660f1f440000   nop word [rax + rax]
0x0000ee00      488b9c24a000.  mov rbx, qword [rsp + 0xa0]
0x0000ee08      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x0000ee10      4885ff         test rdi, rdi
0x0000ee13      898424d00000.  mov dword [rsp + 0xd0], eax
0x0000ee1a      0f84e0000000   je 0xef00
0x0000ee20      4531ed         xor r13d, r13d
0x0000ee23      e9e8f7ffff     jmp 0xe610
0x0000ee28      0f1f84000000.  nop dword [rax + rax]
0x0000ee30      8b9424c00100.  mov edx, dword [rsp + 0x1c0]
0x0000ee37      488b3c24       mov rdi, qword [rsp]
0x0000ee3b      488d70ff       lea rsi, [rax - 1]
0x0000ee3f      e8bca3ffff     call sym.re_string_context_at
0x0000ee44      a801           test al, 1
0x0000ee46      0f8469010000   je 0xefb5
0x0000ee4c      4c8b7350       mov r14, qword [rbx + 0x50]
0x0000ee50      4d85f6         test r14, r14
0x0000ee53      0f8565f6ffff   jne 0xe4be
0x0000ee59      8b8424d00000.  mov eax, dword [rsp + 0xd0]
0x0000ee60      83f80c         cmp eax, 0xc
0x0000ee63      8944245c       mov dword [rsp + 0x5c], eax
0x0000ee67      0f8423fbffff   je 0xe990
0x0000ee6d      488d0d7c6600.  lea rcx, obj.__PRETTY_FUNCTION__.7972   ; 0x154f0 ; "check_matching"
0x0000ee74      488d35a56000.  lea rsi, str..._coreutils_8.31_lib_regexec.c ; 0x14f20 ; "../coreutils-8.31/lib/regexec.c"
0x0000ee7b      488d3d526100.  lea rdi, str.err____REG_ESPACE          ; 0x14fd4 ; "err == REG_ESPACE"
0x0000ee82      ba35040000     mov edx, 0x435
0x0000ee87      e8742bffff     call sym.imp.__assert_fail
0x0000ee8c      0f1f4000       nop dword [rax]
0x0000ee90      488b442438     mov rax, qword [rsp + 0x38]
0x0000ee95      4883b8980000.  cmp qword [rax + 0x98], 0
0x0000ee9d      0f8429020000   je 0xf0cc
0x0000eea3      e947010000     jmp 0xefef
0x0000eea8      4c89e7         mov rdi, r12
0x0000eeab      e8d029ffff     call sym.imp.free
0x0000eeb0      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x0000eeb8      c744245c0c00.  mov dword [rsp + 0x5c], 0xc             ; [0xc:4]=0
0x0000eec0      e9d3faffff     jmp 0xe998
0x0000eec5      488bbc24b801.  mov rdi, qword [rsp + 0x1b8]
0x0000eecd      4c89f6         mov rsi, r14
0x0000eed0      e8dbafffff     call sym.build_trtable
0x0000eed5      84c0           test al, al
0x0000eed7      0f8517f7ffff   jne 0xe5f4
0x0000eedd      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x0000eee5      c78424d00000.  mov dword [rsp + 0xd0], 0xc             ; [0xc:4]=0
0x0000eef0      4885ff         test rdi, rdi
0x0000eef3      0f8527ffffff   jne 0xee20
0x0000eef9      0f1f80000000.  nop dword [rax]
0x0000ef00      c744245c0c00.  mov dword [rsp + 0x5c], 0xc             ; [0xc:4]=0
0x0000ef08      e98bfaffff     jmp 0xe998
0x0000ef0d      488b5c2468     mov rbx, qword [rsp + 0x68]
0x0000ef12      448bac24ac00.  mov r13d, dword [rsp + 0xac]
0x0000ef1a      4c8bb4249000.  mov r14, qword [rsp + 0x90]
0x0000ef22      4c8b7c2470     mov r15, qword [rsp + 0x70]
0x0000ef27      4c8ba4248800.  mov r12, qword [rsp + 0x88]
0x0000ef2f      eb47           jmp 0xef78
0x0000ef31      0f1f80000000.  nop dword [rax]
0x0000ef38      4939ec         cmp r12, rbp
0x0000ef3b      4889d8         mov rax, rbx
0x0000ef3e      7e0f           jle 0xef4f
0x0000ef40      488b84242801.  mov rax, qword [rsp + 0x128]
0x0000ef48      0fb60410       movzx eax, byte [rax + rdx]
0x0000ef4c      4801d8         add rax, rbx
0x0000ef4f      803800         cmp byte [rax], 0
0x0000ef52      0f85c0f4ffff   jne 0xe418
0x0000ef58      4963c5         movsxd rax, r13d
0x0000ef5b      4801c5         add rbp, rax
0x0000ef5e      4c39f5         cmp rbp, r14
0x0000ef61      4889ac24d800.  mov qword [rsp + 0xd8], rbp
0x0000ef69      0f8c3afeffff   jl 0xeda9
0x0000ef6f      4c39fd         cmp rbp, r15
0x0000ef72      0f8f31feffff   jg 0xeda9
0x0000ef78      4889ea         mov rdx, rbp
0x0000ef7b      482b94244801.  sub rdx, qword [rsp + 0x148]
0x0000ef83      483994245801.  cmp qword [rsp + 0x158], rdx
0x0000ef8b      77ab           ja 0xef38
0x0000ef8d      8b9424800200.  mov edx, dword [rsp + 0x280]
0x0000ef94      488b3c24       mov rdi, qword [rsp]
0x0000ef98      4889ee         mov rsi, rbp
0x0000ef9b      e830a5ffff     call sym.re_string_reconstruct
0x0000efa0      85c0           test eax, eax
0x0000efa2      0f85e0f9ffff   jne 0xe988
0x0000efa8      4889ea         mov rdx, rbp
0x0000efab      482b94244801.  sub rdx, qword [rsp + 0x148]
0x0000efb3      eb83           jmp 0xef38
0x0000efb5      85c0           test eax, eax
0x0000efb7      0f8401f5ffff   je 0xe4be
0x0000efbd      89c2           mov edx, eax
0x0000efbf      83e206         and edx, 6
0x0000efc2      83fa06         cmp edx, 6
0x0000efc5      0f8464040000   je 0xf42f
0x0000efcb      a802           test al, 2
0x0000efcd      0f84ad040000   je 0xf480
0x0000efd3      4c8b7358       mov r14, qword [rbx + 0x58]
0x0000efd7      e974feffff     jmp 0xee50
0x0000efdc      488b442438     mov rax, qword [rsp + 0x38]
0x0000efe1      4883b8980000.  cmp qword [rax + 0x98], 0
0x0000efe9      0f84dd000000   je 0xf0cc
0x0000efef      488b4c2420     mov rcx, qword [rsp + 0x20]
0x0000eff4      488b9c24d801.  mov rbx, qword [rsp + 0x1d8]
0x0000effc      488b3c24       mov rdi, qword [rsp]
0x0000f000      488b04cb       mov rax, qword [rbx + rcx*8]
0x0000f004      488b7010       mov rsi, qword [rax + 0x10]
0x0000f008      488d5018       lea rdx, [rax + 0x18]
0x0000f00c      e8efa3ffff     call sym.check_halt_state_context.isra.20
0x0000f011      48898424d001.  mov qword [rsp + 0x1d0], rax
0x0000f019      e91af7ffff     jmp 0xe738
0x0000f01e      31c9           xor ecx, ecx
0x0000f020      e989f2ffff     jmp 0xe2ae
0x0000f025      660fefc0       pxor xmm0, xmm0
0x0000f029      48898424e000.  mov qword [rsp + 0xe0], rax
0x0000f031      488b3c24       mov rdi, qword [rsp]
0x0000f035      488b442420     mov rax, qword [rsp + 0x20]
0x0000f03a      488d9c24e000.  lea rbx, [rsp + 0xe0]
0x0000f042      48c78424e800.  mov qword [rsp + 0xe8], 0
0x0000f04e      4c89ac24f000.  mov qword [rsp + 0xf0], r13
0x0000f056      4889de         mov rsi, rbx
0x0000f059      48c784241001.  mov qword [rsp + 0x110], 0
0x0000f065      0f2984240001.  movaps xmmword [rsp + 0x100], xmm0
0x0000f06d      48898424f800.  mov qword [rsp + 0xf8], rax
0x0000f075      e886eaffff     call sym.sift_states_backward
0x0000f07a      488bbc241001.  mov rdi, qword [rsp + 0x110]
0x0000f082      89442408       mov dword [rsp + 8], eax
0x0000f086      e8f527ffff     call sym.imp.free
0x0000f08b      8b442408       mov eax, dword [rsp + 8]
0x0000f08f      85c0           test eax, eax
0x0000f091      0f8541040000   jne 0xf4d8
0x0000f097      49833c2400     cmp qword [r12], 0
0x0000f09c      0f84c1fcffff   je 0xed63
0x0000f0a2      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x0000f0aa      e8d127ffff     call sym.imp.free
0x0000f0af      488b442420     mov rax, qword [rsp + 0x20]
0x0000f0b4      4c89a424d801.  mov qword [rsp + 0x1d8], r12
0x0000f0bc      4c89ac24d001.  mov qword [rsp + 0x1d0], r13
0x0000f0c4      48898424c801.  mov qword [rsp + 0x1c8], rax
0x0000f0cc      4883bc247002.  cmp qword [rsp + 0x270], 0
0x0000f0d5      0f84b5f8ffff   je 0xe990
0x0000f0db      4883bc247002.  cmp qword [rsp + 0x270], 1
0x0000f0e4      0f841e040000   je 0xf508
0x0000f0ea      488bb424b800.  mov rsi, qword [rsp + 0xb8]
0x0000f0f2      488b8c247002.  mov rcx, qword [rsp + 0x270]
0x0000f0fa      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000f101      48c1e104       shl rcx, 4
0x0000f105      488d4610       lea rax, [rsi + 0x10]
0x0000f109      4801f1         add rcx, rsi
0x0000f10c      48895008       mov qword [rax + 8], rdx
0x0000f110      488910         mov qword [rax], rdx
0x0000f113      4883c010       add rax, 0x10
0x0000f117      4839c1         cmp rcx, rax
0x0000f11a      75f0           jne 0xf10c
0x0000f11c      488bbc24b800.  mov rdi, qword [rsp + 0xb8]
0x0000f124      488b8424c801.  mov rax, qword [rsp + 0x1c8]
0x0000f12c      48894708       mov qword [rdi + 8], rax
0x0000f130      488b442448     mov rax, qword [rsp + 0x48]
0x0000f135      48c707000000.  mov qword [rdi], 0
0x0000f13c      f6403810       test byte [rax + 0x38], 0x10
0x0000f140      0f85dd030000   jne 0xf523
0x0000f146      4883bc247002.  cmp qword [rsp + 0x270], 1
0x0000f14f      0f84ce030000   je 0xf523
0x0000f155      488b442438     mov rax, qword [rsp + 0x38]
0x0000f15a      4531c0         xor r8d, r8d
0x0000f15d      f680b0000000.  test byte [rax + 0xb0], 1
0x0000f164      740f           je 0xf175
0x0000f166      4531c0         xor r8d, r8d
0x0000f169      4883b8980000.  cmp qword [rax + 0x98], 0
0x0000f171      410f9fc0       setg r8b
0x0000f175      488b9c24b800.  mov rbx, qword [rsp + 0xb8]
0x0000f17d      488b94247002.  mov rdx, qword [rsp + 0x270]
0x0000f185      488b3424       mov rsi, qword [rsp]
0x0000f189      488b7c2448     mov rdi, qword [rsp + 0x48]
0x0000f18e      4889d9         mov rcx, rbx
0x0000f191      e8fad3ffff     call sym.set_regs
0x0000f196      85c0           test eax, eax
0x0000f198      0f85cf020000   jne 0xf46d
0x0000f19e      488b03         mov rax, qword [rbx]
0x0000f1a1      440fb69c24ac.  movzx r11d, byte [rsp + 0x1ac]
0x0000f1aa      4c8b94245001.  mov r10, qword [rsp + 0x150]
0x0000f1b2      31c9           xor ecx, ecx
0x0000f1b4      4c8b8c243801.  mov r9, qword [rsp + 0x138]
0x0000f1bc      4c8b84245801.  mov r8, qword [rsp + 0x158]
0x0000f1c4      488bbc24d800.  mov rdi, qword [rsp + 0xd8]
0x0000f1cc      488b9424b800.  mov rdx, qword [rsp + 0xb8]
0x0000f1d4      eb03           jmp 0xf1d9
0x0000f1d6      488b02         mov rax, qword [rdx]
0x0000f1d9      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000f1dd      741a           je 0xf1f9
0x0000f1df      4584db         test r11b, r11b
0x0000f1e2      488b7208       mov rsi, qword [rdx + 8]
0x0000f1e6      0f853e030000   jne 0xf52a
0x0000f1ec      4801f8         add rax, rdi
0x0000f1ef      4801fe         add rsi, rdi
0x0000f1f2      488902         mov qword [rdx], rax
0x0000f1f5      48897208       mov qword [rdx + 8], rsi
0x0000f1f9      4883c101       add rcx, 1
0x0000f1fd      4883c210       add rdx, 0x10
0x0000f201      483b8c247002.  cmp rcx, qword [rsp + 0x270]
0x0000f209      75cb           jne 0xf1d6
0x0000f20b      4883bc249800.  cmp qword [rsp + 0x98], 0
0x0000f214      7e3f           jle 0xf255
0x0000f216      488b94249800.  mov rdx, qword [rsp + 0x98]
0x0000f21e      488bbc24b800.  mov rdi, qword [rsp + 0xb8]
0x0000f226      4889c8         mov rax, rcx
0x0000f229      48c1e004       shl rax, 4
0x0000f22d      4801ca         add rdx, rcx
0x0000f230      488d440708     lea rax, [rdi + rax + 8]
0x0000f235      48c1e204       shl rdx, 4
0x0000f239      488d741708     lea rsi, [rdi + rdx + 8]
0x0000f23e      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000f245      488950f8       mov qword [rax - 8], rdx
0x0000f249      488910         mov qword [rax], rdx
0x0000f24c      4883c010       add rax, 0x10
0x0000f250      4839c6         cmp rsi, rax
0x0000f253      75f0           jne 0xf245
0x0000f255      488b442438     mov rax, qword [rsp + 0x38]
0x0000f25a      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x0000f262      4c8b88e00000.  mov r9, qword [rax + 0xe0]
0x0000f269      4d85c9         test r9, r9
0x0000f26c      0f8426f7ffff   je 0xe998
0x0000f272      4c8b9424b800.  mov r10, qword [rsp + 0xb8]
0x0000f27a      4531c0         xor r8d, r8d
0x0000f27d      498d5210       lea rdx, [r10 + 0x10]
0x0000f281      eb36           jmp 0xf2b9
0x0000f283      498b44f1f8     mov rax, qword [r9 + rsi*8 - 8]
0x0000f288      4c39c0         cmp rax, r8
0x0000f28b      7425           je 0xf2b2
0x0000f28d      4883c001       add rax, 1
0x0000f291      48c1e004       shl rax, 4
0x0000f295      498b0402       mov rax, qword [r10 + rax]
0x0000f299      488902         mov qword [rdx], rax
0x0000f29c      498b44f1f8     mov rax, qword [r9 + rsi*8 - 8]
0x0000f2a1      4883c001       add rax, 1
0x0000f2a5      48c1e004       shl rax, 4
0x0000f2a9      498b440208     mov rax, qword [r10 + rax + 8]
0x0000f2ae      48894208       mov qword [rdx + 8], rax
0x0000f2b2      4883c210       add rdx, 0x10
0x0000f2b6      4989f0         mov r8, rsi
0x0000f2b9      498d7001       lea rsi, [r8 + 1]
0x0000f2bd      4839ce         cmp rsi, rcx
0x0000f2c0      75c1           jne 0xf283
0x0000f2c2      e9d1f6ffff     jmp 0xe998
0x0000f2c7      660f1f840000.  nop word [rax + rax]
0x0000f2d0      488b3c24       mov rdi, qword [rsp]
0x0000f2d4      e8d77fffff     call sym.match_ctx_clean
0x0000f2d9      488bbc241802.  mov rdi, qword [rsp + 0x218]
0x0000f2e1      e89a25ffff     call sym.imp.free
0x0000f2e6      488bbc24f801.  mov rdi, qword [rsp + 0x1f8]
0x0000f2ee      e88d25ffff     call sym.imp.free
0x0000f2f3      e9b8f6ffff     jmp 0xe9b0
0x0000f2f8      488b442438     mov rax, qword [rsp + 0x38]
0x0000f2fd      f680b0000000.  test byte [rax + 0xb0], 2
0x0000f304      0f85cfeeffff   jne 0xe1d9
0x0000f30a      48c78424d801.  mov qword [rsp + 0x1d8], 0
0x0000f316      e9faeeffff     jmp 0xe215
0x0000f31b      4c89e7         mov rdi, r12
0x0000f31e      e85d25ffff     call sym.imp.free
0x0000f323      4889ef         mov rdi, rbp
0x0000f326      e85525ffff     call sym.imp.free
0x0000f32b      e940faffff     jmp 0xed70
0x0000f330      48898424d800.  mov qword [rsp + 0xd8], rax
0x0000f338      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x0000f340      c744245c0100.  mov dword [rsp + 0x5c], 1
0x0000f348      e94bf6ffff     jmp 0xe998
0x0000f34d      4885c0         test rax, rax
0x0000f350      4989c5         mov r13, rax
0x0000f353      0f85eff1ffff   jne 0xe548
0x0000f359      e936f3ffff     jmp 0xe694
0x0000f35e      6690           nop
0x0000f360      4989c5         mov r13, rax
0x0000f363      e9e0f1ffff     jmp 0xe548
0x0000f368      83f80c         cmp eax, 0xc
0x0000f36b      0f843ffbffff   je 0xeeb0
0x0000f371      488d0d786100.  lea rcx, obj.__PRETTY_FUNCTION__.7972   ; 0x154f0 ; "check_matching"
0x0000f378      488d35a15b00.  lea rsi, str..._coreutils_8.31_lib_regexec.c ; 0x14f20 ; "../coreutils-8.31/lib/regexec.c"
0x0000f37f      488d3d4e5c00.  lea rdi, str.err____REG_ESPACE          ; 0x14fd4 ; "err == REG_ESPACE"
0x0000f386      ba6c040000     mov edx, 0x46c
0x0000f38b      e87026ffff     call sym.imp.__assert_fail
0x0000f390      41807e6800     cmp byte [r14 + 0x68], 0
0x0000f395      786f           js 0xf406
0x0000f397      8b742458       mov esi, dword [rsp + 0x58]
0x0000f39b      488b442408     mov rax, qword [rsp + 8]
0x0000f3a0      85f6           test esi, esi
0x0000f3a2      4889442420     mov qword [rsp + 0x20], rax
0x0000f3a7      0f84f9f2ffff   je 0xe6a6
0x0000f3ad      48c744243001.  mov qword [rsp + 0x30], 1
0x0000f3b6      e952f1ffff     jmp 0xe50d
0x0000f3bb      4889df         mov rdi, rbx
0x0000f3be      c744245c0c00.  mov dword [rsp + 0x5c], 0xc             ; [0xc:4]=0
0x0000f3c6      e9cdf5ffff     jmp 0xe998
0x0000f3cb      498d5e10       lea rbx, [r14 + 0x10]
0x0000f3cf      498d6e18       lea rbp, [r14 + 0x18]
0x0000f3d3      488b3c24       mov rdi, qword [rsp]
0x0000f3d7      31c9           xor ecx, ecx
0x0000f3d9      4889ea         mov rdx, rbp
0x0000f3dc      4889de         mov rsi, rbx
0x0000f3df      e8cc9cffff     call sym.check_subexp_matching_top.isra.18
0x0000f3e4      85c0           test eax, eax
0x0000f3e6      898424d00000.  mov dword [rsp + 0xd0], eax
0x0000f3ed      7549           jne 0xf438
0x0000f3ef      410fb64668     movzx eax, byte [r14 + 0x68]
0x0000f3f4      a840           test al, 0x40                           ; segment.PHDR
0x0000f3f6      0f85e4000000   jne 0xf4e0
0x0000f3fc      c644241800     mov byte [rsp + 0x18], 0
0x0000f401      e9edf0ffff     jmp 0xe4f3
0x0000f406      498b7610       mov rsi, qword [r14 + 0x10]
0x0000f40a      488b4c2408     mov rcx, qword [rsp + 8]
0x0000f40f      498d5618       lea rdx, [r14 + 0x18]
0x0000f413      488b3c24       mov rdi, qword [rsp]
0x0000f417      e8e49fffff     call sym.check_halt_state_context.isra.20
0x0000f41c      4885c0         test rax, rax
0x0000f41f      4889442430     mov qword [rsp + 0x30], rax
0x0000f424      0f84e3f0ffff   je 0xe50d
0x0000f42a      e968ffffff     jmp 0xf397
0x0000f42f      4c8b7360       mov r14, qword [rbx + 0x60]
0x0000f433      e918faffff     jmp 0xee50
0x0000f438      4898           cdqe
0x0000f43a      4889442420     mov qword [rsp + 0x20], rax
0x0000f43f      e962f2ffff     jmp 0xe6a6
0x0000f444      4c8b742418     mov r14, qword [rsp + 0x18]
0x0000f449      4489f8         mov eax, r15d
0x0000f44c      4c89e7         mov rdi, r12
0x0000f44f      89442408       mov dword [rsp + 8], eax
0x0000f453      e82824ffff     call sym.imp.free
0x0000f458      4c89f7         mov rdi, r14
0x0000f45b      e82024ffff     call sym.imp.free
0x0000f460      8b442408       mov eax, dword [rsp + 8]
0x0000f464      83f801         cmp eax, 1
0x0000f467      0f8403f9ffff   je 0xed70
0x0000f46d      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x0000f475      8944245c       mov dword [rsp + 0x5c], eax
0x0000f479      e91af5ffff     jmp 0xe998
0x0000f47e      6690           nop
0x0000f480      a804           test al, 4
0x0000f482      0f8436f0ffff   je 0xe4be
0x0000f488      498b5650       mov rdx, qword [r14 + 0x50]
0x0000f48c      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000f491      89c1           mov ecx, eax
0x0000f493      4889de         mov rsi, rbx
0x0000f496      e8d592ffff     call sym.re_acquire_state_context
0x0000f49b      4989c6         mov r14, rax
0x0000f49e      e9adf9ffff     jmp 0xee50
0x0000f4a3      4c8b7c2410     mov r15, qword [rsp + 0x10]
0x0000f4a8      488b4c2408     mov rcx, qword [rsp + 8]
0x0000f4ad      4889ea         mov rdx, rbp
0x0000f4b0      4c89e6         mov rsi, r12
0x0000f4b3      4c89742420     mov qword [rsp + 0x20], r14
0x0000f4b8      4c89ff         mov rdi, r15
0x0000f4bb      e87097ffff     call sym.merge_state_array
0x0000f4c0      4889ef         mov rdi, rbp
0x0000f4c3      89442408       mov dword [rsp + 8], eax
0x0000f4c7      e8b423ffff     call sym.imp.free
0x0000f4cc      8b442408       mov eax, dword [rsp + 8]
0x0000f4d0      85c0           test eax, eax
0x0000f4d2      0f84cafbffff   je 0xf0a2
0x0000f4d8      4531f6         xor r14d, r14d
0x0000f4db      e96cffffff     jmp 0xf44c
0x0000f4e0      488b3c24       mov rdi, qword [rsp]
0x0000f4e4      4889ea         mov rdx, rbp
0x0000f4e7      4889de         mov rsi, rbx
0x0000f4ea      e831dbffff     call sym.transit_state_bkref.isra.34
0x0000f4ef      85c0           test eax, eax
0x0000f4f1      898424d00000.  mov dword [rsp + 0xd0], eax
0x0000f4f8      0f853affffff   jne 0xf438
0x0000f4fe      410fb64668     movzx eax, byte [r14 + 0x68]
0x0000f503      e9f4feffff     jmp 0xf3fc
0x0000f508      488bb424b800.  mov rsi, qword [rsp + 0xb8]
0x0000f510      488b8424c801.  mov rax, qword [rsp + 0x1c8]
0x0000f518      48c706000000.  mov qword [rsi], 0
0x0000f51f      48894608       mov qword [rsi + 8], rax
0x0000f523      31c0           xor eax, eax
0x0000f525      e977fcffff     jmp 0xf1a1
0x0000f52a      4939c2         cmp r10, rax
0x0000f52d      741d           je 0xf54c
0x0000f52f      498b04c1       mov rax, qword [r9 + rax*8]
0x0000f533      4939f2         cmp r10, rsi
0x0000f536      488902         mov qword [rdx], rax
0x0000f539      7409           je 0xf544
0x0000f53b      498b34f1       mov rsi, qword [r9 + rsi*8]
0x0000f53f      e9a8fcffff     jmp 0xf1ec
0x0000f544      4c89c6         mov rsi, r8
0x0000f547      e9a0fcffff     jmp 0xf1ec
0x0000f54c      4c89c0         mov rax, r8
0x0000f54f      ebe2           jmp 0xf533
0x0000f551      4889ac24d800.  mov qword [rsp + 0xd8], rbp
0x0000f559      e9baeeffff     jmp 0xe418
0x0000f55e      488984246801.  mov qword [rsp + 0x168], rax
0x0000f566      e929f1ffff     jmp 0xe694
0x0000f56b      e82024ffff     call sym.imp.__stack_chk_fail
;-- update_cur_sifted_state:
0x0000f570      4157           push r15
0x0000f572      4156           push r14
0x0000f574      4889f8         mov rax, rdi
0x0000f577      4155           push r13
0x0000f579      4154           push r12
0x0000f57b      4989f5         mov r13, rsi
0x0000f57e      55             push rbp
0x0000f57f      53             push rbx
0x0000f580      4889d5         mov rbp, rdx
0x0000f583      4889cb         mov rbx, rcx
0x0000f586      488d0cd50000.  lea rcx, [rdx*8]
0x0000f58e      4881eca80000.  sub rsp, 0xa8
0x0000f595      4c8ba0980000.  mov r12, qword [rax + 0x98]
0x0000f59c      488b80b80000.  mov rax, qword [rax + 0xb8]
0x0000f5a3      48897c2408     mov qword [rsp + 8], rdi
0x0000f5a8      48894c2418     mov qword [rsp + 0x18], rcx
0x0000f5ad      64488b3c2528.  mov rdi, qword fs:[0x28]
0x0000f5b6      4889bc249800.  mov qword [rsp + 0x98], rdi
0x0000f5be      31ff           xor edi, edi
0x0000f5c0      488b14d0       mov rdx, qword [rax + rdx*8]
0x0000f5c4      c744245c0000.  mov dword [rsp + 0x5c], 0
0x0000f5cc      488b4b08       mov rcx, qword [rbx + 8]
0x0000f5d0      4885d2         test rdx, rdx
0x0000f5d3      0f844f020000   je 0xf828
0x0000f5d9      488d7a08       lea rdi, [rdx + 8]
0x0000f5dd      4885c9         test rcx, rcx
0x0000f5e0      48897c2410     mov qword [rsp + 0x10], rdi
0x0000f5e5      7551           jne 0xf638
0x0000f5e7      488b16         mov rdx, qword [rsi]
0x0000f5ea      48c704ea0000.  mov qword [rdx + rbp*8], 0
0x0000f5f2      488b14e8       mov rdx, qword [rax + rbp*8]
0x0000f5f6      31c0           xor eax, eax
0x0000f5f8      f6426840       test byte [rdx + 0x68], 0x40
0x0000f5fc      0f85dd000000   jne 0xf6df
0x0000f602      660f1f440000   nop word [rax + rax]
0x0000f608      488bbc249800.  mov rdi, qword [rsp + 0x98]
0x0000f610      6448333c2528.  xor rdi, qword fs:[0x28]
0x0000f619      0f859c070000   jne 0xfdbb
0x0000f61f      4881c4a80000.  add rsp, 0xa8
0x0000f626      5b             pop rbx
0x0000f627      5d             pop rbp
0x0000f628      415c           pop r12
0x0000f62a      415d           pop r13
0x0000f62c      415e           pop r14
0x0000f62e      415f           pop r15
0x0000f630      c3             ret
0x0000f631      0f1f80000000.  nop dword [rax]
0x0000f638      488d7c2460     lea rdi, [rsp + 0x60]
0x0000f63d      4889da         mov rdx, rbx
0x0000f640      4c89e6         mov rsi, r12
0x0000f643      c74424600000.  mov dword [rsp + 0x60], 0
0x0000f64b      e8e093ffff     call sym.re_acquire_state
0x0000f650      4889c2         mov rdx, rax
0x0000f653      8b442460       mov eax, dword [rsp + 0x60]
0x0000f657      85c0           test eax, eax
0x0000f659      75ad           jne 0xf608
0x0000f65b      4c8b7a38       mov r15, qword [rdx + 0x38]
0x0000f65f      4c8d7238       lea r14, [rdx + 0x38]
0x0000f663      4d85ff         test r15, r15
0x0000f666      0f8404020000   je 0xf870
0x0000f66c      488b742410     mov rsi, qword [rsp + 0x10]
0x0000f671      4c89f2         mov rdx, r14
0x0000f674      4889df         mov rdi, rbx
0x0000f677      e8b488ffff     call sym.re_node_set_add_intersect
0x0000f67c      85c0           test eax, eax
0x0000f67e      8944245c       mov dword [rsp + 0x5c], eax
0x0000f682      7584           jne 0xf608
0x0000f684      49837d2800     cmp qword [r13 + 0x28], 0
0x0000f689      0f8571020000   jne 0xf900
0x0000f68f      4c8b742418     mov r14, qword [rsp + 0x18]
0x0000f694      4d037500       add r14, qword [r13]
0x0000f698      488d7c245c     lea rdi, [rsp + 0x5c]
0x0000f69d      4889da         mov rdx, rbx
0x0000f6a0      4c89e6         mov rsi, r12
0x0000f6a3      e88893ffff     call sym.re_acquire_state
0x0000f6a8      498906         mov qword [r14], rax
0x0000f6ab      8b44245c       mov eax, dword [rsp + 0x5c]
0x0000f6af      85c0           test eax, eax
0x0000f6b1      0f8551ffffff   jne 0xf608
0x0000f6b7      48837c241000   cmp qword [rsp + 0x10], 0
0x0000f6bd      0f8445ffffff   je 0xf608
0x0000f6c3      488b442408     mov rax, qword [rsp + 8]
0x0000f6c8      488b80b80000.  mov rax, qword [rax + 0xb8]
0x0000f6cf      488b14e8       mov rdx, qword [rax + rbp*8]
0x0000f6d3      31c0           xor eax, eax
0x0000f6d5      f6426840       test byte [rdx + 0x68], 0x40
0x0000f6d9      0f8429ffffff   je 0xf608
0x0000f6df      488b442408     mov rax, qword [rsp + 8]
0x0000f6e4      31db           xor ebx, ebx
0x0000f6e6      488bb0c80000.  mov rsi, qword [rax + 0xc8]
0x0000f6ed      4889f2         mov rdx, rsi
0x0000f6f0      4839d3         cmp rbx, rdx
0x0000f6f3      7d5e           jge 0xf753
0x0000f6f5      488d0413       lea rax, [rbx + rdx]
0x0000f6f9      4889c1         mov rcx, rax
0x0000f6fc      48c1e93f       shr rcx, 0x3f
0x0000f700      4801c1         add rcx, rax
0x0000f703      488b442408     mov rax, qword [rsp + 8]
0x0000f708      48d1f9         sar rcx, 1
0x0000f70b      488bb8d80000.  mov rdi, qword [rax + 0xd8]
0x0000f712      488d0489       lea rax, [rcx + rcx*4]
0x0000f716      483b6cc708     cmp rbp, qword [rdi + rax*8 + 8]
0x0000f71b      7e31           jle 0xf74e
0x0000f71d      e935010000     jmp 0xf857
0x0000f722      660f1f440000   nop word [rax + rax]
0x0000f728      488d140b       lea rdx, [rbx + rcx]
0x0000f72c      4889d0         mov rax, rdx
0x0000f72f      48c1e83f       shr rax, 0x3f
0x0000f733      4801d0         add rax, rdx
0x0000f736      48d1f8         sar rax, 1
0x0000f739      488d1480       lea rdx, [rax + rax*4]
0x0000f73d      4989c0         mov r8, rax
0x0000f740      483b6cd708     cmp rbp, qword [rdi + rdx*8 + 8]
0x0000f745      0f8f15010000   jg 0xf860
0x0000f74b      4889c1         mov rcx, rax
0x0000f74e      4839cb         cmp rbx, rcx
0x0000f751      7cd5           jl 0xf728
0x0000f753      4839de         cmp rsi, rbx
0x0000f756      0f8ef4000000   jle 0xf850
0x0000f75c      488d049b       lea rax, [rbx + rbx*4]
0x0000f760      488d34c50000.  lea rsi, [rax*8]
0x0000f768      488b442408     mov rax, qword [rsp + 8]
0x0000f76d      4889742440     mov qword [rsp + 0x40], rsi
0x0000f772      488b80d80000.  mov rax, qword [rax + 0xd8]
0x0000f779      483b6c3008     cmp rbp, qword [rax + rsi + 8]
0x0000f77e      0f85cc000000   jne 0xf850
0x0000f784      4883fbff       cmp rbx, 0xffffffffffffffff
0x0000f788      0f84c2000000   je 0xf850
0x0000f78e      488b442408     mov rax, qword [rsp + 8]
0x0000f793      48c744246000.  mov qword [rsp + 0x60], 0
0x0000f79c      4c8ba0980000.  mov r12, qword [rax + 0x98]
0x0000f7a3      488b442410     mov rax, qword [rsp + 0x10]
0x0000f7a8      4883780800     cmp qword [rax + 8], 0
0x0000f7ad      0f8e9d000000   jle 0xf850
0x0000f7b3      488d442460     lea rax, [rsp + 0x60]
0x0000f7b8      48c744242000.  mov qword [rsp + 0x20], 0
0x0000f7c1      48895c2448     mov qword [rsp + 0x48], rbx
0x0000f7c6      4d89ef         mov r15, r13
0x0000f7c9      4889442438     mov qword [rsp + 0x38], rax
0x0000f7ce      eb22           jmp 0xf7f2
0x0000f7d0      3c04           cmp al, 4
0x0000f7d2      0f8480030000   je 0xfb58
0x0000f7d8      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0000f7dd      488344242001   add qword [rsp + 0x20], 1
0x0000f7e3      488b442420     mov rax, qword [rsp + 0x20]
0x0000f7e8      483b4108       cmp rax, qword [rcx + 8]
0x0000f7ec      0f8db9050000   jge 0xfdab
0x0000f7f2      488b442410     mov rax, qword [rsp + 0x10]
0x0000f7f7      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0000f7fc      488b4010       mov rax, qword [rax + 0x10]
0x0000f800      4c8b34f8       mov r14, qword [rax + rdi*8]
0x0000f804      4c89f0         mov rax, r14
0x0000f807      48c1e004       shl rax, 4
0x0000f80b      49030424       add rax, qword [r12]
0x0000f80f      4d3b7710       cmp r14, qword [r15 + 0x10]
0x0000f813      0fb64008       movzx eax, byte [rax + 8]
0x0000f817      75b7           jne 0xf7d0
0x0000f819      493b6f18       cmp rbp, qword [r15 + 0x18]
0x0000f81d      75b1           jne 0xf7d0
0x0000f81f      ebb7           jmp 0xf7d8
0x0000f821      0f1f80000000.  nop dword [rax]
0x0000f828      4c8d34ed0000.  lea r14, [rbp*8]
0x0000f830      4c0336         add r14, qword [rsi]
0x0000f833      4885c9         test rcx, rcx
0x0000f836      0f85b4000000   jne 0xf8f0
0x0000f83c      49c706000000.  mov qword [r14], 0
0x0000f843      31c0           xor eax, eax
0x0000f845      e9befdffff     jmp 0xf608
0x0000f84a      660f1f440000   nop word [rax + rax]
0x0000f850      31c0           xor eax, eax
0x0000f852      e9b1fdffff     jmp 0xf608
0x0000f857      4989c8         mov r8, rcx
0x0000f85a      4889d1         mov rcx, rdx
0x0000f85d      0f1f00         nop dword [rax]
0x0000f860      498d5801       lea rbx, [r8 + 1]
0x0000f864      4889ca         mov rdx, rcx
0x0000f867      e984feffff     jmp 0xf6f0
0x0000f86c      0f1f4000       nop dword [rax]
0x0000f870      488b7b08       mov rdi, qword [rbx + 8]
0x0000f874      48c742400000.  mov qword [rdx + 0x40], 0
0x0000f87c      4889542420     mov qword [rsp + 0x20], rdx
0x0000f881      48897a38       mov qword [rdx + 0x38], rdi
0x0000f885      48c1e703       shl rdi, 3
0x0000f889      e83222ffff     call sym.imp.malloc
0x0000f88e      488b542420     mov rdx, qword [rsp + 0x20]
0x0000f893      4885c0         test rax, rax
0x0000f896      48894248       mov qword [rdx + 0x48], rax
0x0000f89a      7447           je 0xf8e3
0x0000f89c      48837b0800     cmp qword [rbx + 8], 0
0x0000f8a1      c74424600000.  mov dword [rsp + 0x60], 0
0x0000f8a9      7f13           jg 0xf8be
0x0000f8ab      e9bcfdffff     jmp 0xf66c
0x0000f8b0      4983c701       add r15, 1
0x0000f8b4      4c3b7b08       cmp r15, qword [rbx + 8]
0x0000f8b8      0f8daefdffff   jge 0xf66c
0x0000f8be      488b4310       mov rax, qword [rbx + 0x10]
0x0000f8c2      4c89f7         mov rdi, r14
0x0000f8c5      4a8b04f8       mov rax, qword [rax + r15*8]
0x0000f8c9      488d1440       lea rdx, [rax + rax*2]
0x0000f8cd      498b442438     mov rax, qword [r12 + 0x38]
0x0000f8d2      488d34d0       lea rsi, [rax + rdx*8]
0x0000f8d6      e86580ffff     call sym.re_node_set_merge
0x0000f8db      85c0           test eax, eax
0x0000f8dd      89442460       mov dword [rsp + 0x60], eax
0x0000f8e1      74cd           je 0xf8b0
0x0000f8e3      b80c000000     mov eax, 0xc
0x0000f8e8      e91bfdffff     jmp 0xf608
0x0000f8ed      0f1f00         nop dword [rax]
0x0000f8f0      48c744241000.  mov qword [rsp + 0x10], 0
0x0000f8f9      e99afdffff     jmp 0xf698
0x0000f8fe      6690           nop
0x0000f900      488b442408     mov rax, qword [rsp + 8]
0x0000f905      488b80d80000.  mov rax, qword [rax + 0xd8]
0x0000f90c      4889442420     mov qword [rsp + 0x20], rax
0x0000f911      0f8ed4000000   jle 0xf9eb
0x0000f917      4531ff         xor r15d, r15d
0x0000f91a      660f1f440000   nop word [rax + rax]
0x0000f920      498b4530       mov rax, qword [r13 + 0x30]
0x0000f924      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0000f929      4a8b04f8       mov rax, qword [rax + r15*8]
0x0000f92d      488d0480       lea rax, [rax + rax*4]
0x0000f931      488d14c7       lea rdx, [rdi + rax*8]
0x0000f935      483b6a10       cmp rbp, qword [rdx + 0x10]
0x0000f939      0f8e9e000000   jle 0xf9dd
0x0000f93f      483b6a08       cmp rbp, qword [rdx + 8]
0x0000f943      0f8f94000000   jg 0xf9dd
0x0000f949      488b0a         mov rcx, qword [rdx]
0x0000f94c      498b0424       mov rax, qword [r12]
0x0000f950      488b7308       mov rsi, qword [rbx + 8]
0x0000f954      48c1e104       shl rcx, 4
0x0000f958      483b6a18       cmp rbp, qword [rdx + 0x18]
0x0000f95c      4c8b0408       mov r8, qword [rax + rcx]
0x0000f960      0f849a000000   je 0xfa00
0x0000f966      4531f6         xor r14d, r14d
0x0000f969      4885f6         test rsi, rsi
0x0000f96c      7e6f           jle 0xf9dd
0x0000f96e      48896c2428     mov qword [rsp + 0x28], rbp
0x0000f973      4c89c5         mov rbp, r8
0x0000f976      eb16           jmp 0xf98e
0x0000f978      0f1f84000000.  nop dword [rax + rax]
0x0000f980      4983c601       add r14, 1
0x0000f984      4c3b7308       cmp r14, qword [rbx + 8]
0x0000f988      7d4e           jge 0xf9d8
0x0000f98a      498b0424       mov rax, qword [r12]
0x0000f98e      488b5310       mov rdx, qword [rbx + 0x10]
0x0000f992      4a8b34f2       mov rsi, qword [rdx + r14*8]
0x0000f996      4889f2         mov rdx, rsi
0x0000f999      48c1e204       shl rdx, 4
0x0000f99d      4801d0         add rax, rdx
0x0000f9a0      0fb65008       movzx edx, byte [rax + 8]
0x0000f9a4      83ea08         sub edx, 8
0x0000f9a7      83fa01         cmp edx, 1
0x0000f9aa      77d4           ja 0xf980
0x0000f9ac      483b28         cmp rbp, qword [rax]
0x0000f9af      75cf           jne 0xf980
0x0000f9b1      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0000f9b6      4889da         mov rdx, rbx
0x0000f9b9      4c89e7         mov rdi, r12
0x0000f9bc      e8afa2ffff     call sym.sub_epsilon_src_nodes
0x0000f9c1      85c0           test eax, eax
0x0000f9c3      0f853ffcffff   jne 0xf608
0x0000f9c9      4983c601       add r14, 1
0x0000f9cd      4c3b7308       cmp r14, qword [rbx + 8]
0x0000f9d1      7cb7           jl 0xf98a
0x0000f9d3      0f1f440000     nop dword [rax + rax]
0x0000f9d8      488b6c2428     mov rbp, qword [rsp + 0x28]
0x0000f9dd      4983c701       add r15, 1
0x0000f9e1      4d3b7d28       cmp r15, qword [r13 + 0x28]
0x0000f9e5      0f8c35ffffff   jl 0xf920
0x0000f9eb      c744245c0000.  mov dword [rsp + 0x5c], 0
0x0000f9f3      e997fcffff     jmp 0xf68f
0x0000f9f8      0f1f84000000.  nop dword [rax + rax]
0x0000fa00      4885f6         test rsi, rsi
0x0000fa03      7ed8           jle 0xf9dd
0x0000fa05      4c8b5310       mov r10, qword [rbx + 0x10]
0x0000fa09      49c7c1ffffff.  mov r9, 0xffffffffffffffff
0x0000fa10      4d8d1cf2       lea r11, [r10 + rsi*8]
0x0000fa14      4c89d1         mov rcx, r10
0x0000fa17      4c89ce         mov rsi, r9
0x0000fa1a      eb1a           jmp 0xfa36
0x0000fa1c      0f1f4000       nop dword [rax]
0x0000fa20      4183fe09       cmp r14d, 9
0x0000fa24      7507           jne 0xfa2d
0x0000fa26      4c3b02         cmp r8, qword [rdx]
0x0000fa29      4c0f44cf       cmove r9, rdi
0x0000fa2d      4883c108       add rcx, 8
0x0000fa31      4939cb         cmp r11, rcx
0x0000fa34      7428           je 0xfa5e
0x0000fa36      488b39         mov rdi, qword [rcx]
0x0000fa39      4889fa         mov rdx, rdi
0x0000fa3c      48c1e204       shl rdx, 4
0x0000fa40      4801c2         add rdx, rax
0x0000fa43      440fb67208     movzx r14d, byte [rdx + 8]
0x0000fa48      4183fe08       cmp r14d, 8
0x0000fa4c      75d2           jne 0xfa20
0x0000fa4e      4c3b02         cmp r8, qword [rdx]
0x0000fa51      480f44f7       cmove rsi, rdi
0x0000fa55      4883c108       add rcx, 8
0x0000fa59      4939cb         cmp r11, rcx
0x0000fa5c      75d8           jne 0xfa36
0x0000fa5e      4885f6         test rsi, rsi
0x0000fa61      4d89ce         mov r14, r9
0x0000fa64      4c894c2428     mov qword [rsp + 0x28], r9
0x0000fa69      0f88c1000000   js 0xfb30
0x0000fa6f      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0000fa74      4889da         mov rdx, rbx
0x0000fa77      4c89e7         mov rdi, r12
0x0000fa7a      e8f1a1ffff     call sym.sub_epsilon_src_nodes
0x0000fa7f      85c0           test eax, eax
0x0000fa81      0f8581fbffff   jne 0xf608
0x0000fa87      4d85f6         test r14, r14
0x0000fa8a      0f884dffffff   js 0xf9dd
0x0000fa90      48837b0800     cmp qword [rbx + 8], 0
0x0000fa95      0f8e42ffffff   jle 0xf9dd
0x0000fa9b      4c8b5310       mov r10, qword [rbx + 0x10]
0x0000fa9f      4531f6         xor r14d, r14d
0x0000faa2      48896c2430     mov qword [rsp + 0x30], rbp
0x0000faa7      4c89f5         mov rbp, r14
0x0000faaa      4c8b742428     mov r14, qword [rsp + 0x28]
0x0000faaf      eb19           jmp 0xfaca
0x0000fab1      0f1f80000000.  nop dword [rax]
0x0000fab8      4883c501       add rbp, 1
0x0000fabc      483b6b08       cmp rbp, qword [rbx + 8]
0x0000fac0      0f8d82000000   jge 0xfb48
0x0000fac6      4c8b5310       mov r10, qword [rbx + 0x10]
0x0000faca      4d8b14ea       mov r10, qword [r10 + rbp*8]
0x0000face      498b442438     mov rax, qword [r12 + 0x38]
0x0000fad3      4c89f2         mov rdx, r14
0x0000fad6      4f8d0c52       lea r9, [r10 + r10*2]
0x0000fada      49c1e103       shl r9, 3
0x0000fade      4c01c8         add rax, r9
0x0000fae1      488b7808       mov rdi, qword [rax + 8]
0x0000fae5      488d7010       lea rsi, [rax + 0x10]
0x0000fae9      e83279ffff     call sym.re_node_set_contains.isra.3
0x0000faee      4885c0         test rax, rax
0x0000faf1      75c5           jne 0xfab8
0x0000faf3      4d034c2430     add r9, qword [r12 + 0x30]
0x0000faf8      498b7908       mov rdi, qword [r9 + 8]
0x0000fafc      498d7110       lea rsi, [r9 + 0x10]
0x0000fb00      e81b79ffff     call sym.re_node_set_contains.isra.3
0x0000fb05      4885c0         test rax, rax
0x0000fb08      75ae           jne 0xfab8
0x0000fb0a      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0000fb0f      4889da         mov rdx, rbx
0x0000fb12      4c89d6         mov rsi, r10
0x0000fb15      4c89e7         mov rdi, r12
0x0000fb18      e853a1ffff     call sym.sub_epsilon_src_nodes
0x0000fb1d      85c0           test eax, eax
0x0000fb1f      0f85e3faffff   jne 0xf608
0x0000fb25      4883ed01       sub rbp, 1
0x0000fb29      eb8d           jmp 0xfab8
0x0000fb2b      0f1f440000     nop dword [rax + rax]
0x0000fb30      48837c242800   cmp qword [rsp + 0x28], 0
0x0000fb36      0f8963ffffff   jns 0xfa9f
0x0000fb3c      e99cfeffff     jmp 0xf9dd
0x0000fb41      0f1f80000000.  nop dword [rax]
0x0000fb48      488b6c2430     mov rbp, qword [rsp + 0x30]
0x0000fb4d      e98bfeffff     jmp 0xf9dd
0x0000fb52      660f1f440000   nop word [rax + rax]
0x0000fb58      488b442408     mov rax, qword [rsp + 8]
0x0000fb5d      4c8b6c2440     mov r13, qword [rsp + 0x40]
0x0000fb62      488b5c2448     mov rbx, qword [rsp + 0x48]
0x0000fb67      4c03a8d80000.  add r13, qword [rax + 0xd8]
0x0000fb6e      4b8d0476       lea rax, [r14 + r14*2]
0x0000fb72      48c1e003       shl rax, 3
0x0000fb76      4889442430     mov qword [rsp + 0x30], rax
0x0000fb7b      4a8d04f50000.  lea rax, [r14*8]
0x0000fb83      4889442428     mov qword [rsp + 0x28], rax
0x0000fb88      4c89f8         mov rax, r15
0x0000fb8b      4d89ef         mov r15, r13
0x0000fb8e      4989dd         mov r13, rbx
0x0000fb91      4889c3         mov rbx, rax
0x0000fb94      e965010000     jmp 0xfcfe
0x0000fb99      0f1f80000000.  nop dword [rax]
0x0000fba0      498b4718       mov rax, qword [r15 + 0x18]
0x0000fba4      492b4710       sub rax, qword [r15 + 0x10]
0x0000fba8      4885c0         test rax, rax
0x0000fbab      4c8d4c0500     lea r9, [rbp + rax]
0x0000fbb0      0f845a010000   je 0xfd10
0x0000fbb6      498b442418     mov rax, qword [r12 + 0x18]
0x0000fbbb      488b742428     mov rsi, qword [rsp + 0x28]
0x0000fbc0      4c8b1430       mov r10, qword [rax + rsi]
0x0000fbc4      4c3b4b18       cmp r9, qword [rbx + 0x18]
0x0000fbc8      0f8f39010000   jg 0xfd07
0x0000fbce      488b03         mov rax, qword [rbx]
0x0000fbd1      4a8b04c8       mov rax, qword [rax + r9*8]
0x0000fbd5      4885c0         test rax, rax
0x0000fbd8      0f8429010000   je 0xfd07
0x0000fbde      488b7810       mov rdi, qword [rax + 0x10]
0x0000fbe2      488d7018       lea rsi, [rax + 0x18]
0x0000fbe6      4c89d2         mov rdx, r10
0x0000fbe9      e83278ffff     call sym.re_node_set_contains.isra.3
0x0000fbee      4885c0         test rax, rax
0x0000fbf1      0f8410010000   je 0xfd07
0x0000fbf7      4883ec08       sub rsp, 8
0x0000fbfb      488d5330       lea rdx, [rbx + 0x30]
0x0000fbff      488d7328       lea rsi, [rbx + 0x28]
0x0000fc03      4151           push r9
0x0000fc05      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000fc0a      4c89f1         mov rcx, r14
0x0000fc0d      4d89d1         mov r9, r10
0x0000fc10      4989e8         mov r8, rbp
0x0000fc13      e8b87affff     call sym.check_dst_limits.isra.13
0x0000fc18      84c0           test al, al
0x0000fc1a      5a             pop rdx
0x0000fc1b      59             pop rcx
0x0000fc1c      0f85e5000000   jne 0xfd07
0x0000fc22      48837c246000   cmp qword [rsp + 0x60], 0
0x0000fc28      0f840a010000   je 0xfd38
0x0000fc2e      488b442438     mov rax, qword [rsp + 0x38]
0x0000fc33      4c89ee         mov rsi, r13
0x0000fc36      4c89742470     mov qword [rsp + 0x70], r14
0x0000fc3b      48896c2478     mov qword [rsp + 0x78], rbp
0x0000fc40      488d7820       lea rdi, [rax + 0x20]
0x0000fc44      e89762ffff     call sym.re_node_set_insert
0x0000fc49      84c0           test al, al
0x0000fc4b      0f8453010000   je 0xfda4
0x0000fc51      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000fc56      488b442460     mov rax, qword [rsp + 0x60]
0x0000fc5b      488b742438     mov rsi, qword [rsp + 0x38]
0x0000fc60      4c8b3c38       mov r15, qword [rax + rdi]
0x0000fc64      488b7c2408     mov rdi, qword [rsp + 8]
0x0000fc69      e892deffff     call sym.sift_states_backward
0x0000fc6e      85c0           test eax, eax
0x0000fc70      0f8508010000   jne 0xfd7e
0x0000fc76      488b7308       mov rsi, qword [rbx + 8]
0x0000fc7a      488b542460     mov rdx, qword [rsp + 0x60]
0x0000fc7f      4885f6         test rsi, rsi
0x0000fc82      7419           je 0xfc9d
0x0000fc84      488d4d01       lea rcx, [rbp + 1]
0x0000fc88      4c89e7         mov rdi, r12
0x0000fc8b      e8a08fffff     call sym.merge_state_array
0x0000fc90      85c0           test eax, eax
0x0000fc92      0f85e6000000   jne 0xfd7e
0x0000fc98      488b542460     mov rdx, qword [rsp + 0x60]
0x0000fc9d      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0000fca2      488b442418     mov rax, qword [rsp + 0x18]
0x0000fca7      488bbc248800.  mov rdi, qword [rsp + 0x88]
0x0000fcaf      4d8d4b30       lea r9, [r11 + 0x30]
0x0000fcb3      4c893c02       mov qword [rdx + rax], r15
0x0000fcb7      4c89ea         mov rdx, r13
0x0000fcba      4c89ce         mov rsi, r9
0x0000fcbd      e85e77ffff     call sym.re_node_set_contains.isra.3
0x0000fcc2      4883e801       sub rax, 1
0x0000fcc6      4889c2         mov rdx, rax
0x0000fcc9      780c           js 0xfcd7
0x0000fccb      498d7b28       lea rdi, [r11 + 0x28]
0x0000fccf      4c89ce         mov rsi, r9
0x0000fcd2      e8c978ffff     call sym.re_node_set_remove_at.isra.4.part.5
0x0000fcd7      488b4c2408     mov rcx, qword [rsp + 8]
0x0000fcdc      4b8d44ad00     lea rax, [r13 + r13*4]
0x0000fce1      488b91d80000.  mov rdx, qword [rcx + 0xd8]
0x0000fce8      488d04c2       lea rax, [rdx + rax*8]
0x0000fcec      0f1f4000       nop dword [rax]
0x0000fcf0      4983c501       add r13, 1
0x0000fcf4      80782000       cmp byte [rax + 0x20], 0
0x0000fcf8      4c8d7828       lea r15, [rax + 0x28]
0x0000fcfc      7432           je 0xfd30
0x0000fcfe      4d3b37         cmp r14, qword [r15]
0x0000fd01      0f8499feffff   je 0xfba0
0x0000fd07      4c89f8         mov rax, r15
0x0000fd0a      ebe4           jmp 0xfcf0
0x0000fd0c      0f1f4000       nop dword [rax]
0x0000fd10      498b442428     mov rax, qword [r12 + 0x28]
0x0000fd15      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000fd1a      488b443810     mov rax, qword [rax + rdi + 0x10]
0x0000fd1f      4c8b10         mov r10, qword [rax]
0x0000fd22      e99dfeffff     jmp 0xfbc4
0x0000fd27      660f1f840000.  nop word [rax + rax]
0x0000fd30      4989df         mov r15, rbx
0x0000fd33      e9a0faffff     jmp 0xf7d8
0x0000fd38      488b4330       mov rax, qword [rbx + 0x30]
0x0000fd3c      488d7320       lea rsi, [rbx + 0x20]
0x0000fd40      660f6f03       movdqa xmm0, xmmword [rbx]
0x0000fd44      488984249000.  mov qword [rsp + 0x90], rax
0x0000fd4c      488b442438     mov rax, qword [rsp + 0x38]
0x0000fd51      0f29442460     movaps xmmword [rsp + 0x60], xmm0
0x0000fd56      488d7820       lea rdi, [rax + 0x20]
0x0000fd5a      660f6f4310     movdqa xmm0, xmmword [rbx + 0x10]
0x0000fd5f      0f29442470     movaps xmmword [rsp + 0x70], xmm0
0x0000fd64      660f6f4320     movdqa xmm0, xmmword [rbx + 0x20]
0x0000fd69      0f2984248000.  movaps xmmword [rsp + 0x80], xmm0
0x0000fd71      e80a88ffff     call sym.re_node_set_init_copy
0x0000fd76      85c0           test eax, eax
0x0000fd78      0f84b0feffff   je 0xfc2e
0x0000fd7e      48837c246000   cmp qword [rsp + 0x60], 0
0x0000fd84      0f847ef8ffff   je 0xf608
0x0000fd8a      488bbc249000.  mov rdi, qword [rsp + 0x90]
0x0000fd92      89442408       mov dword [rsp + 8], eax
0x0000fd96      e8e51affff     call sym.imp.free
0x0000fd9b      8b442408       mov eax, dword [rsp + 8]
0x0000fd9f      e964f8ffff     jmp 0xf608
0x0000fda4      b80c000000     mov eax, 0xc
0x0000fda9      ebd3           jmp 0xfd7e
0x0000fdab      48837c246000   cmp qword [rsp + 0x60], 0
0x0000fdb1      0f8499faffff   je 0xf850
0x0000fdb7      31c0           xor eax, eax
0x0000fdb9      ebcf           jmp 0xfd8a
0x0000fdbb      e8d01bffff     call sym.imp.__stack_chk_fail
;-- parse_bracket_element.constprop.37:
0x0000fdc0      4156           push r14
0x0000fdc2      4155           push r13
0x0000fdc4      4989f2         mov r10, rsi
0x0000fdc7      4154           push r12
0x0000fdc9      55             push rbp
0x0000fdca      4c63d9         movsxd r11, ecx
0x0000fdcd      53             push rbx
0x0000fdce      4889d5         mov rbp, rdx
0x0000fdd1      4889fb         mov rbx, rdi
0x0000fdd4      4883ec20       sub rsp, 0x20
0x0000fdd8      4c8b6648       mov r12, qword [rsi + 0x48]
0x0000fddc      64488b042528.  mov rax, qword fs:[0x28]
0x0000fde5      4889442418     mov qword [rsp + 0x18], rax
0x0000fdea      31c0           xor eax, eax
0x0000fdec      83be90000000.  cmp dword [rsi + 0x90], 1
0x0000fdf3      7453           je 0xfe48
0x0000fdf5      4c89e6         mov rsi, r12
0x0000fdf8      4c89d7         mov rdi, r10
0x0000fdfb      e87075ffff     call sym.re_string_char_size_at.part.0
0x0000fe00      83f801         cmp eax, 1
0x0000fe03      7e43           jle 0xfe48
0x0000fe05      498b5210       mov rdx, qword [r10 + 0x10]
0x0000fe09      4898           cdqe
0x0000fe0b      c70301000000   mov dword [rbx], 1
0x0000fe11      4c01e0         add rax, r12
0x0000fe14      428b14a2       mov edx, dword [rdx + r12*4]
0x0000fe18      895308         mov dword [rbx + 8], edx
0x0000fe1b      49894248       mov qword [r10 + 0x48], rax
0x0000fe1f      31c0           xor eax, eax
0x0000fe21      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0000fe26      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000fe2f      0f85e3010000   jne 0x10018
0x0000fe35      4883c420       add rsp, 0x20
0x0000fe39      5b             pop rbx
0x0000fe3a      5d             pop rbp
0x0000fe3b      415c           pop r12
0x0000fe3d      415d           pop r13
0x0000fe3f      415e           pop r14
0x0000fe41      c3             ret
0x0000fe42      660f1f440000   nop word [rax + rax]
0x0000fe48      0fb64508       movzx eax, byte [rbp + 8]
0x0000fe4c      4d01e3         add r11, r12
0x0000fe4f      4d895a48       mov qword [r10 + 0x48], r11
0x0000fe53      89c2           mov edx, eax
0x0000fe55      83e2fb         and edx, 0xfffffffb                     ; 4294967291
0x0000fe58      80fa1a         cmp dl, 0x1a
0x0000fe5b      7423           je 0xfe80
0x0000fe5d      3c1c           cmp al, 0x1c
0x0000fe5f      741f           je 0xfe80
0x0000fe61      3c16           cmp al, 0x16
0x0000fe63      7509           jne 0xfe6e
0x0000fe65      4584c9         test r9b, r9b
0x0000fe68      0f8444010000   je 0xffb2
0x0000fe6e      0fb64500       movzx eax, byte [rbp]
0x0000fe72      c70300000000   mov dword [rbx], 0
0x0000fe78      884308         mov byte [rbx + 8], al
0x0000fe7b      31c0           xor eax, eax
0x0000fe7d      eba2           jmp 0xfe21
0x0000fe7f      90             nop
0x0000fe80      4d8b6268       mov r12, qword [r10 + 0x68]
0x0000fe84      4d39e3         cmp r11, r12
0x0000fe87      0f8d1b010000   jge 0xffa8
0x0000fe8d      440fb66d00     movzx r13d, byte [rbp]
0x0000fe92      4531c0         xor r8d, r8d
0x0000fe95      eb2b           jmp 0xfec2
0x0000fe97      660f1f840000.  nop word [rax + rax]
0x0000fea0      488b4308       mov rax, qword [rbx + 8]
0x0000fea4      46880c00       mov byte [rax + r8], r9b
0x0000fea8      4983c001       add r8, 1
0x0000feac      4983f820       cmp r8, 0x20                            ; "@"
0x0000feb0      0f84f2000000   je 0xffa8
0x0000feb6      0fb64508       movzx eax, byte [rbp + 8]
0x0000feba      4d8b5a48       mov r11, qword [r10 + 0x48]
0x0000febe      4d8b6268       mov r12, qword [r10 + 0x68]
0x0000fec2      3c1e           cmp al, 0x1e
0x0000fec4      4d63f0         movsxd r14, r8d
0x0000fec7      7467           je 0xff30
0x0000fec9      498b5208       mov rdx, qword [r10 + 8]
0x0000fecd      498d4301       lea rax, [r11 + 1]
0x0000fed1      49894248       mov qword [r10 + 0x48], rax
0x0000fed5      460fb60c1a     movzx r9d, byte [rdx + r11]
0x0000feda      4c39e0         cmp rax, r12
0x0000fedd      0f8dc5000000   jge 0xffa8
0x0000fee3      4538cd         cmp r13b, r9b
0x0000fee6      75b8           jne 0xfea0
0x0000fee8      498b5208       mov rdx, qword [r10 + 8]
0x0000feec      803c025d       cmp byte [rdx + rax], 0x5d
0x0000fef0      75ae           jne 0xfea0
0x0000fef2      4883c001       add rax, 1
0x0000fef6      49894248       mov qword [r10 + 0x48], rax
0x0000fefa      488b4308       mov rax, qword [rbx + 8]
0x0000fefe      42c6043000     mov byte [rax + r14], 0
0x0000ff03      0fb64508       movzx eax, byte [rbp + 8]
0x0000ff07      3c1c           cmp al, 0x1c
0x0000ff09      0f84fc000000   je 0x1000b
0x0000ff0f      3c1e           cmp al, 0x1e
0x0000ff11      0f84e7000000   je 0xfffe
0x0000ff17      3c1a           cmp al, 0x1a
0x0000ff19      0f84d2000000   je 0xfff1
0x0000ff1f      31c0           xor eax, eax
0x0000ff21      e9fbfeffff     jmp 0xfe21
0x0000ff26      662e0f1f8400.  nop word cs:[rax + rax]
0x0000ff30      4180ba8b0000.  cmp byte [r10 + 0x8b], 0
0x0000ff38      748f           je 0xfec9
0x0000ff3a      4180ba8c0000.  cmp byte [r10 + 0x8c], 0
0x0000ff42      0f8490000000   je 0xffd8
0x0000ff48      4d3b5a30       cmp r11, qword [r10 + 0x30]
0x0000ff4c      740f           je 0xff5d
0x0000ff4e      498b4210       mov rax, qword [r10 + 0x10]
0x0000ff52      42833c98ff     cmp dword [rax + r11*4], 0xffffffff
0x0000ff57      0f846cffffff   je 0xfec9
0x0000ff5d      498b4218       mov rax, qword [r10 + 0x18]
0x0000ff61      4a8b04d8       mov rax, qword [rax + r11*8]
0x0000ff65      490302         add rax, qword [r10]
0x0000ff68      49034228       add rax, qword [r10 + 0x28]
0x0000ff6c      440fb608       movzx r9d, byte [rax]
0x0000ff70      41f6c180       test r9b, 0x80
0x0000ff74      0f854fffffff   jne 0xfec9
0x0000ff7a      4183ba900000.  cmp dword [r10 + 0x90], 1
0x0000ff82      b801000000     mov eax, 1
0x0000ff87      740d           je 0xff96
0x0000ff89      4c89de         mov rsi, r11
0x0000ff8c      4c89d7         mov rdi, r10
0x0000ff8f      e8dc73ffff     call sym.re_string_char_size_at.part.0
0x0000ff94      4898           cdqe
0x0000ff96      4c01d8         add rax, r11
0x0000ff99      49894248       mov qword [r10 + 0x48], rax
0x0000ff9d      e938ffffff     jmp 0xfeda
0x0000ffa2      660f1f440000   nop word [rax + rax]
0x0000ffa8      b807000000     mov eax, 7
0x0000ffad      e96ffeffff     jmp 0xfe21
0x0000ffb2      4889e7         mov rdi, rsp
0x0000ffb5      4c89c2         mov rdx, r8
0x0000ffb8      4c89d6         mov rsi, r10
0x0000ffbb      e85059ffff     call sym.peek_token_bracket
0x0000ffc0      807c240815     cmp byte [rsp + 8], 0x15
0x0000ffc5      b80b000000     mov eax, 0xb
0x0000ffca      0f849efeffff   je 0xfe6e
0x0000ffd0      e94cfeffff     jmp 0xfe21
0x0000ffd5      0f1f00         nop dword [rax]
0x0000ffd8      498d4301       lea rax, [r11 + 1]
0x0000ffdc      4d031a         add r11, qword [r10]
0x0000ffdf      498b5228       mov rdx, qword [r10 + 0x28]
0x0000ffe3      49894248       mov qword [r10 + 0x48], rax
0x0000ffe7      450fb60c13     movzx r9d, byte [r11 + rdx]
0x0000ffec      e9e9feffff     jmp 0xfeda
0x0000fff1      c70303000000   mov dword [rbx], 3
0x0000fff7      31c0           xor eax, eax
0x0000fff9      e923feffff     jmp 0xfe21
0x0000fffe      c70304000000   mov dword [rbx], 4
0x00010004      31c0           xor eax, eax
0x00010006      e916feffff     jmp 0xfe21
0x0001000b      c70302000000   mov dword [rbx], 2
0x00010011      31c0           xor eax, eax
0x00010013      e909feffff     jmp 0xfe21
0x00010018      e87319ffff     call sym.imp.__stack_chk_fail
0x0001001d      0f1f00         nop dword [rax]
;-- peek_token:
0x00010020      4157           push r15
0x00010022      4156           push r14
0x00010024      4155           push r13
0x00010026      4154           push r12
0x00010028      55             push rbp
0x00010029      53             push rbx
0x0001002a      4889fd         mov rbp, rdi
0x0001002d      4883ec38       sub rsp, 0x38
0x00010031      4c8b7648       mov r14, qword [rsi + 0x48]
0x00010035      64488b042528.  mov rax, qword fs:[0x28]
0x0001003e      4889442428     mov qword [rsp + 0x28], rax
0x00010043      31c0           xor eax, eax
0x00010045      4c397668       cmp qword [rsi + 0x68], r14
0x00010049      0f8e91000000   jle 0x100e0
0x0001004f      440fb66f0a     movzx r13d, byte [rdi + 0xa]
0x00010054      4989d7         mov r15, rdx
0x00010057      488b5608       mov rdx, qword [rsi + 8]
0x0001005b      4889f3         mov rbx, rsi
0x0001005e      460fb62432     movzx r12d, byte [rdx + r14]
0x00010063      4183e59f       and r13d, 0xffffff9f                    ; 4294967199
0x00010067      44886f0a       mov byte [rdi + 0xa], r13b
0x0001006b      8b8690000000   mov eax, dword [rsi + 0x90]
0x00010071      448827         mov byte [rdi], r12b
0x00010074      83f801         cmp eax, 1
0x00010077      0f8e93000000   jle 0x10110
0x0001007d      4c3b7630       cmp r14, qword [rsi + 0x30]
0x00010081      0f8499010000   je 0x10220
0x00010087      488b4e10       mov rcx, qword [rsi + 0x10]
0x0001008b      428b0cb1       mov ecx, dword [rcx + r14*4]
0x0001008f      83f9ff         cmp ecx, 0xffffffff
0x00010092      0f84d8000000   je 0x10170
0x00010098      4180fc5c       cmp r12b, 0x5c
0x0001009c      0f84ee000000   je 0x10190
0x000100a2      c6470801       mov byte [rdi + 8], 1
0x000100a6      89cf           mov edi, ecx
0x000100a8      4889542408     mov qword [rsp + 8], rdx
0x000100ad      890c24         mov dword [rsp], ecx
0x000100b0      e8fb19ffff     call sym.imp.iswalnum
0x000100b5      8b0c24         mov ecx, dword [rsp]
0x000100b8      85c0           test eax, eax
0x000100ba      0f95c0         setne al
0x000100bd      83f95f         cmp ecx, 0x5f
0x000100c0      0f94c1         sete cl
0x000100c3      09c8           or eax, ecx
0x000100c5      c1e006         shl eax, 6
0x000100c8      4109c5         or r13d, eax
0x000100cb      44886d0a       mov byte [rbp + 0xa], r13b
0x000100cf      488b542408     mov rdx, qword [rsp + 8]
0x000100d4      eb76           jmp 0x1014c
0x000100d6      662e0f1f8400.  nop word cs:[rax + rax]
0x000100e0      c6470802       mov byte [rdi + 8], 2
0x000100e4      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000100e9      6448333c2528.  xor rdi, qword fs:[0x28]
0x000100f2      0f8520060000   jne 0x10718
0x000100f8      4883c438       add rsp, 0x38
0x000100fc      5b             pop rbx
0x000100fd      5d             pop rbp
0x000100fe      415c           pop r12
0x00010100      415d           pop r13
0x00010102      415e           pop r14
0x00010104      415f           pop r15
0x00010106      c3             ret
0x00010107      660f1f840000.  nop word [rax + rax]
0x00010110      4180fc5c       cmp r12b, 0x5c
0x00010114      747a           je 0x10190
0x00010116      c6450801       mov byte [rbp + 8], 1
0x0001011a      48891424       mov qword [rsp], rdx
0x0001011e      e84d1bffff     call sym.imp.__ctype_b_loc
0x00010123      488b30         mov rsi, qword [rax]
0x00010126      410fb6cc       movzx ecx, r12b
0x0001012a      0fb7044e       movzx eax, word [rsi + rcx*2]
0x0001012e      66c1e803       shr ax, 3
0x00010132      83e001         and eax, 1
0x00010135      4180fc5f       cmp r12b, 0x5f
0x00010139      0f94c1         sete cl
0x0001013c      09c8           or eax, ecx
0x0001013e      c1e006         shl eax, 6
0x00010141      4109c5         or r13d, eax
0x00010144      44886d0a       mov byte [rbp + 0xa], r13b
0x00010148      488b1424       mov rdx, qword [rsp]
0x0001014c      4183ec0a       sub r12d, 0xa
0x00010150      4180fc73       cmp r12b, 0x73
0x00010154      0f8732010000   ja 0x1028c
0x0001015a      488d0d134f00.  lea rcx, [0x00015074]
0x00010161      450fb6e4       movzx r12d, r12b
0x00010165      4a6304a1       movsxd rax, dword [rcx + r12*4]
0x00010169      4801c8         add rax, rcx
0x0001016c      ffe0           jmp rax
0x0001016e      6690           nop
0x00010170      4183cd20       or r13d, 0x20                           ; "@"
0x00010174      c6470801       mov byte [rdi + 8], 1
0x00010178      b801000000     mov eax, 1
0x0001017d      44886f0a       mov byte [rdi + 0xa], r13b
0x00010181      e95effffff     jmp 0x100e4
0x00010186      662e0f1f8400.  nop word cs:[rax + rax]
0x00010190      498d7601       lea rsi, [r14 + 1]
0x00010194      483b7358       cmp rsi, qword [rbx + 0x58]
0x00010198      0f8da2000000   jge 0x10240
0x0001019e      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x000101a5      0f8585040000   jne 0x10630
0x000101ab      420fb67c3201   movzx edi, byte [rdx + r14 + 1]
0x000101b1      4189fc         mov r12d, edi
0x000101b4      897c2408       mov dword [rsp + 8], edi
0x000101b8      83f801         cmp eax, 1
0x000101bb      44886500       mov byte [rbp], r12b
0x000101bf      c6450801       mov byte [rbp + 8], 1
0x000101c3      0f8e47040000   jle 0x10610
0x000101c9      488b4310       mov rax, qword [rbx + 0x10]
0x000101cd      448b04b0       mov r8d, dword [rax + rsi*4]
0x000101d1      4489c7         mov edi, r8d
0x000101d4      44890424       mov dword [rsp], r8d
0x000101d8      e8d318ffff     call sym.imp.iswalnum
0x000101dd      448b0424       mov r8d, dword [rsp]
0x000101e1      85c0           test eax, eax
0x000101e3      0f95c0         setne al
0x000101e6      4183f85f       cmp r8d, 0x5f
0x000101ea      0f94c2         sete dl
0x000101ed      418d4c24d9     lea ecx, [r12 - 0x27]
0x000101f2      09d0           or eax, edx
0x000101f4      c1e006         shl eax, 6
0x000101f7      4109c5         or r13d, eax
0x000101fa      80f956         cmp cl, 0x56
0x000101fd      44886d0a       mov byte [rbp + 0xa], r13b
0x00010201      0f87fe030000   ja 0x10605
0x00010207      488d15365000.  lea rdx, [0x00015244]
0x0001020e      0fb6c9         movzx ecx, cl
0x00010211      4863048a       movsxd rax, dword [rdx + rcx*4]
0x00010215      4801d0         add rax, rdx
0x00010218      ffe0           jmp rax
0x0001021a      660f1f440000   nop word [rax + rax]
0x00010220      4180fc5c       cmp r12b, 0x5c
0x00010224      0f8466ffffff   je 0x10190
0x0001022a      488b4310       mov rax, qword [rbx + 0x10]
0x0001022e      c6450801       mov byte [rbp + 8], 1
0x00010232      428b0cb0       mov ecx, dword [rax + r14*4]
0x00010236      e96bfeffff     jmp 0x100a6
0x0001023b      0f1f440000     nop dword [rax + rax]
0x00010240      c6450824       mov byte [rbp + 8], 0x24                ; '$'
0x00010244      b801000000     mov eax, 1
0x00010249      e996feffff     jmp 0x100e4
0x0001024e      6690           nop
0x00010250      4181e7001200.  and r15d, 0x1200
0x00010257      b801000000     mov eax, 1
0x0001025c      4981ff001200.  cmp r15, 0x1200
0x00010263      0f857bfeffff   jne 0x100e4
0x00010269      c6450818       mov byte [rbp + 8], 0x18
0x0001026d      e972feffff     jmp 0x100e4
0x00010272      660f1f440000   nop word [rax + rax]
0x00010278      4181e7008400.  and r15d, 0x8400
0x0001027f      4981ff008000.  cmp r15, 0x8000
0x00010286      0f84d6000000   je 0x10362
0x0001028c      b801000000     mov eax, 1
0x00010291      e94efeffff     jmp 0x100e4
0x00010296      662e0f1f8400.  nop word cs:[rax + rax]
0x000102a0      4181e7001200.  and r15d, 0x1200
0x000102a7      b801000000     mov eax, 1
0x000102ac      4981ff001200.  cmp r15, 0x1200
0x000102b3      0f852bfeffff   jne 0x100e4
0x000102b9      c6450817       mov byte [rbp + 8], 0x17
0x000102bd      e922feffff     jmp 0x100e4
0x000102c2      660f1f440000   nop word [rax + rax]
0x000102c8      41f7c7080080.  test r15d, 0x800008
0x000102cf      7509           jne 0x102da
0x000102d1      4d85f6         test r14, r14
0x000102d4      0f85c0030000   jne 0x1069a
0x000102da      c645080c       mov byte [rbp + 8], 0xc
0x000102de      c74500100000.  mov dword [rbp], 0x10
0x000102e5      b801000000     mov eax, 1
0x000102ea      e9f5fdffff     jmp 0x100e4
0x000102ef      90             nop
0x000102f0      c6450814       mov byte [rbp + 8], 0x14
0x000102f4      b801000000     mov eax, 1
0x000102f9      e9e6fdffff     jmp 0x100e4
0x000102fe      6690           nop
0x00010300      41f7c7020400.  test r15d, 0x402
0x00010307      b801000000     mov eax, 1
0x0001030c      0f85d2fdffff   jne 0x100e4
0x00010312      c6450813       mov byte [rbp + 8], 0x13
0x00010316      e9c9fdffff     jmp 0x100e4
0x0001031b      0f1f440000     nop dword [rax + rax]
0x00010320      c6450805       mov byte [rbp + 8], 5
0x00010324      b801000000     mov eax, 1
0x00010329      e9b6fdffff     jmp 0x100e4
0x0001032e      6690           nop
0x00010330      41f7c7020400.  test r15d, 0x402
0x00010337      b801000000     mov eax, 1
0x0001033c      0f85a2fdffff   jne 0x100e4
0x00010342      c6450812       mov byte [rbp + 8], 0x12
0x00010346      e999fdffff     jmp 0x100e4
0x0001034b      0f1f440000     nop dword [rax + rax]
0x00010350      41f7c7000800.  test r15d, 0x800
0x00010357      b801000000     mov eax, 1
0x0001035c      0f8482fdffff   je 0x100e4
0x00010362      c645080a       mov byte [rbp + 8], 0xa
0x00010366      b801000000     mov eax, 1
0x0001036b      e974fdffff     jmp 0x100e4
0x00010370      c645080b       mov byte [rbp + 8], 0xb
0x00010374      b801000000     mov eax, 1
0x00010379      e966fdffff     jmp 0x100e4
0x0001037e      6690           nop
0x00010380      41f7c7002000.  test r15d, 0x2000
0x00010387      b801000000     mov eax, 1
0x0001038c      0f8452fdffff   je 0x100e4
0x00010392      c6450809       mov byte [rbp + 8], 9
0x00010396      e949fdffff     jmp 0x100e4
0x0001039b      0f1f440000     nop dword [rax + rax]
0x000103a0      41f7c7002000.  test r15d, 0x2000
0x000103a7      b801000000     mov eax, 1
0x000103ac      0f8432fdffff   je 0x100e4
0x000103b2      c6450808       mov byte [rbp + 8], 8
0x000103b6      e929fdffff     jmp 0x100e4
0x000103bb      0f1f440000     nop dword [rax + rax]
0x000103c0      41f6c708       test r15b, 8
0x000103c4      750e           jne 0x103d4
0x000103c6      4983c601       add r14, 1
0x000103ca      4c3b7358       cmp r14, qword [rbx + 0x58]
0x000103ce      0f85f7020000   jne 0x106cb
0x000103d4      c645080c       mov byte [rbp + 8], 0xc
0x000103d8      c74500200000.  mov dword [rbp], 0x20                   ; "@"
0x000103df      b801000000     mov eax, 1
0x000103e4      e9fbfcffff     jmp 0x100e4
0x000103e9      41f7c7008400.  test r15d, 0x8400
0x000103f0      b802000000     mov eax, 2
0x000103f5      0f85e9fcffff   jne 0x100e4
0x000103fb      c645080a       mov byte [rbp + 8], 0xa
0x000103ff      e9e0fcffff     jmp 0x100e4
0x00010404      4181e7001200.  and r15d, 0x1200
0x0001040b      b802000000     mov eax, 2
0x00010410      4981ff000200.  cmp r15, 0x200
0x00010417      0f85c7fcffff   jne 0x100e4
0x0001041d      e997feffff     jmp 0x102b9
0x00010422      41f7c7000008.  test r15d, 0x80000
0x00010429      b802000000     mov eax, 2
0x0001042e      0f85b0fcffff   jne 0x100e4
0x00010434      c6450820       mov byte [rbp + 8], 0x20                ; "@"
0x00010438      e9a7fcffff     jmp 0x100e4
0x0001043d      41f7c7000008.  test r15d, 0x80000
0x00010444      b802000000     mov eax, 2
0x00010449      0f8595fcffff   jne 0x100e4
0x0001044f      c6450822       mov byte [rbp + 8], 0x22                ; '"'
0x00010453      e98cfcffff     jmp 0x100e4
0x00010458      4181e7001200.  and r15d, 0x1200
0x0001045f      b802000000     mov eax, 2
0x00010464      4981ff000200.  cmp r15, 0x200
0x0001046b      0f8573fcffff   jne 0x100e4
0x00010471      e9f3fdffff     jmp 0x10269
0x00010476      41f7c7000008.  test r15d, 0x80000
0x0001047d      b802000000     mov eax, 2
0x00010482      0f855cfcffff   jne 0x100e4
0x00010488      c645080c       mov byte [rbp + 8], 0xc
0x0001048c      c74500000100.  mov dword [rbp], obj.__frame_dummy_init_array_entry ; 0x100
0x00010493      e94cfcffff     jmp 0x100e4
0x00010498      41f7c7000008.  test r15d, 0x80000
0x0001049f      b802000000     mov eax, 2
0x000104a4      0f853afcffff   jne 0x100e4
0x000104aa      c645080c       mov byte [rbp + 8], 0xc
0x000104ae      c74500400000.  mov dword [rbp], 0x40                   ; segment.PHDR
0x000104b5      e92afcffff     jmp 0x100e4
0x000104ba      41f7c7000008.  test r15d, 0x80000
0x000104c1      b802000000     mov eax, 2
0x000104c6      0f8518fcffff   jne 0x100e4
0x000104cc      c6450821       mov byte [rbp + 8], 0x21                ; '!'
0x000104d0      e90ffcffff     jmp 0x100e4
0x000104d5      41f7c7000008.  test r15d, 0x80000
0x000104dc      b802000000     mov eax, 2
0x000104e1      0f85fdfbffff   jne 0x100e4
0x000104e7      c6450823       mov byte [rbp + 8], 0x23                ; '#'
0x000104eb      e9f4fbffff     jmp 0x100e4
0x000104f0      41f7c7000008.  test r15d, 0x80000
0x000104f7      b802000000     mov eax, 2
0x000104fc      0f85e2fbffff   jne 0x100e4
0x00010502      c645080c       mov byte [rbp + 8], 0xc
0x00010506      c74500000200.  mov dword [rbp], 0x200
0x0001050d      e9d2fbffff     jmp 0x100e4
0x00010512      4181e7020400.  and r15d, 0x402
0x00010519      b802000000     mov eax, 2
0x0001051e      4983ff02       cmp r15, 2
0x00010522      0f85bcfbffff   jne 0x100e4
0x00010528      e9e5fdffff     jmp 0x10312
0x0001052d      41f7c7000008.  test r15d, 0x80000
0x00010534      b802000000     mov eax, 2
0x00010539      0f85a5fbffff   jne 0x100e4
0x0001053f      c645080c       mov byte [rbp + 8], 0xc
0x00010543      c74500090000.  mov dword [rbp], 9
0x0001054a      e995fbffff     jmp 0x100e4
0x0001054f      41f7c7000008.  test r15d, 0x80000
0x00010556      b802000000     mov eax, 2
0x0001055b      0f8583fbffff   jne 0x100e4
0x00010561      c645080c       mov byte [rbp + 8], 0xc
0x00010565      c74500060000.  mov dword [rbp], 6
0x0001056c      e973fbffff     jmp 0x100e4
0x00010571      41f7c7004000.  test r15d, 0x4000
0x00010578      b802000000     mov eax, 2
0x0001057d      0f8561fbffff   jne 0x100e4
0x00010583      8b542408       mov edx, dword [rsp + 8]
0x00010587      c6450804       mov byte [rbp + 8], 4
0x0001058b      83ea31         sub edx, 0x31
0x0001058e      4863d2         movsxd rdx, edx
0x00010591      48895500       mov qword [rbp], rdx
0x00010595      e94afbffff     jmp 0x100e4
0x0001059a      4181e7020400.  and r15d, 0x402
0x000105a1      b802000000     mov eax, 2
0x000105a6      4983ff02       cmp r15, 2
0x000105aa      0f8534fbffff   jne 0x100e4
0x000105b0      e98dfdffff     jmp 0x10342
0x000105b5      41f7c7002000.  test r15d, 0x2000
0x000105bc      b802000000     mov eax, 2
0x000105c1      0f851dfbffff   jne 0x100e4
0x000105c7      e9c6fdffff     jmp 0x10392
0x000105cc      41f7c7002000.  test r15d, 0x2000
0x000105d3      b802000000     mov eax, 2
0x000105d8      0f8506fbffff   jne 0x100e4
0x000105de      e9cffdffff     jmp 0x103b2
0x000105e3      41f7c7000008.  test r15d, 0x80000
0x000105ea      b802000000     mov eax, 2
0x000105ef      0f85effaffff   jne 0x100e4
0x000105f5      c645080c       mov byte [rbp + 8], 0xc
0x000105f9      c74500800000.  mov dword [rbp], 0x80
0x00010600      e9dffaffff     jmp 0x100e4
0x00010605      b802000000     mov eax, 2
0x0001060a      e9d5faffff     jmp 0x100e4
0x0001060f      90             nop
0x00010610      e85b16ffff     call sym.imp.__ctype_b_loc
0x00010615      488b30         mov rsi, qword [rax]
0x00010618      410fb6d4       movzx edx, r12b
0x0001061c      0fb70456       movzx eax, word [rsi + rdx*2]
0x00010620      66c1e803       shr ax, 3
0x00010624      83e001         and eax, 1
0x00010627      4180fc5f       cmp r12b, 0x5f
0x0001062b      e9bafbffff     jmp 0x101ea
0x00010630      83f801         cmp eax, 1
0x00010633      7e2f           jle 0x10664
0x00010635      488b4b10       mov rcx, qword [rbx + 0x10]
0x00010639      488d3cb50000.  lea rdi, [rsi*4]
0x00010641      448b04b1       mov r8d, dword [rcx + rsi*4]
0x00010645      4183f8ff       cmp r8d, 0xffffffff
0x00010649      0f84b0000000   je 0x106ff
0x0001064f      4d8d4e02       lea r9, [r14 + 2]
0x00010653      4c394b30       cmp qword [rbx + 0x30], r9
0x00010657      740b           je 0x10664
0x00010659      837c3904ff     cmp dword [rcx + rdi + 4], 0xffffffff
0x0001065e      0f849b000000   je 0x106ff
0x00010664      80bb8c000000.  cmp byte [rbx + 0x8c], 0
0x0001066b      488b0b         mov rcx, qword [rbx]
0x0001066e      488b7b28       mov rdi, qword [rbx + 0x28]
0x00010672      7444           je 0x106b8
0x00010674      4c8b4318       mov r8, qword [rbx + 0x18]
0x00010678      4801f9         add rcx, rdi
0x0001067b      49030cf0       add rcx, qword [r8 + rsi*8]
0x0001067f      0fb639         movzx edi, byte [rcx]
0x00010682      4189fc         mov r12d, edi
0x00010685      897c2408       mov dword [rsp + 8], edi
0x00010689      81e780000000   and edi, 0x80
0x0001068f      0f8516fbffff   jne 0x101ab
0x00010695      e91efbffff     jmp 0x101b8
0x0001069a      42807c32ff0a   cmp byte [rdx + r14 - 1], 0xa
0x000106a0      0f85e6fbffff   jne 0x1028c
0x000106a6      41f7c7000800.  test r15d, 0x800
0x000106ad      0f84d9fbffff   je 0x1028c
0x000106b3      e922fcffff     jmp 0x102da
0x000106b8      4801f1         add rcx, rsi
0x000106bb      0fb63c39       movzx edi, byte [rcx + rdi]
0x000106bf      4189fc         mov r12d, edi
0x000106c2      897c2408       mov dword [rsp + 8], edi
0x000106c6      e9edfaffff     jmp 0x101b8
0x000106cb      488d7c2410     lea rdi, [rsp + 0x10]
0x000106d0      4c89fa         mov rdx, r15
0x000106d3      4c897348       mov qword [rbx + 0x48], r14
0x000106d7      4889de         mov rsi, rbx
0x000106da      e841f9ffff     call sym.peek_token
0x000106df      0fb6442418     movzx eax, byte [rsp + 0x18]
0x000106e4      48836b4801     sub qword [rbx + 0x48], 1
0x000106e9      8d50f7         lea edx, [rax - 9]
0x000106ec      b801000000     mov eax, 1
0x000106f1      80fa01         cmp dl, 1
0x000106f4      0f87eaf9ffff   ja 0x100e4
0x000106fa      e9d5fcffff     jmp 0x103d4
0x000106ff      420fb6443201   movzx eax, byte [rdx + r14 + 1]
0x00010705      c6450801       mov byte [rbp + 8], 1
0x00010709      4189c4         mov r12d, eax
0x0001070c      884500         mov byte [rbp], al
0x0001070f      89442408       mov dword [rsp + 8], eax
0x00010713      e9b9faffff     jmp 0x101d1
0x00010718      e87312ffff     call sym.imp.__stack_chk_fail
0x0001071d      0f1f00         nop dword [rax]
;-- fetch_number:
0x00010720      4156           push r14
0x00010722      4989fe         mov r14, rdi
0x00010725      4155           push r13
0x00010727      4989f5         mov r13, rsi
0x0001072a      4154           push r12
0x0001072c      49c7c4feffff.  mov r12, 0xfffffffffffffffe
0x00010733      55             push rbp
0x00010734      4889d5         mov rbp, rdx
0x00010737      53             push rbx
0x00010738      48c7c3ffffff.  mov rbx, 0xffffffffffffffff
0x0001073f      90             nop
0x00010740      4889ea         mov rdx, rbp
0x00010743      4c89f6         mov rsi, r14
0x00010746      4c89ef         mov rdi, r13
0x00010749      e8d2f8ffff     call sym.peek_token
0x0001074e      4898           cdqe
0x00010750      49014648       add qword [r14 + 0x48], rax
0x00010754      410fb64508     movzx eax, byte [r13 + 8]
0x00010759      410fb65500     movzx edx, byte [r13]
0x0001075e      3c02           cmp al, 2
0x00010760      744e           je 0x107b0
0x00010762      3c18           cmp al, 0x18
0x00010764      7451           je 0x107b7
0x00010766      80fa2c         cmp dl, 0x2c
0x00010769      744c           je 0x107b7
0x0001076b      3c01           cmp al, 1
0x0001076d      7409           je 0x10778
0x0001076f      4c89e3         mov rbx, r12
0x00010772      ebcc           jmp 0x10740
0x00010774      0f1f4000       nop dword [rax]
0x00010778      8d42d0         lea eax, [rdx - 0x30]
0x0001077b      3c09           cmp al, 9
0x0001077d      77f0           ja 0x1076f
0x0001077f      4883fbfe       cmp rbx, 0xfffffffffffffffe
0x00010783      74ea           je 0x1076f
0x00010785      4883fbff       cmp rbx, 0xffffffffffffffff
0x00010789      743d           je 0x107c8
0x0001078b      488d049b       lea rax, [rbx + rbx*4]
0x0001078f      488d1c42       lea rbx, [rdx + rax*2]
0x00010793      b830800000     mov eax, 0x8030
0x00010798      4881fb308000.  cmp rbx, 0x8030
0x0001079f      480f4fd8       cmovg rbx, rax
0x000107a3      4883eb30       sub rbx, 0x30
0x000107a7      eb97           jmp 0x10740
0x000107a9      0f1f80000000.  nop dword [rax]
0x000107b0      48c7c3feffff.  mov rbx, 0xfffffffffffffffe
0x000107b7      4889d8         mov rax, rbx
0x000107ba      5b             pop rbx
0x000107bb      5d             pop rbp
0x000107bc      415c           pop r12
0x000107be      415d           pop r13
0x000107c0      415e           pop r14
0x000107c2      c3             ret
0x000107c3      0f1f440000     nop dword [rax + rax]
0x000107c8      0fb6da         movzx ebx, dl
0x000107cb      83eb30         sub ebx, 0x30
0x000107ce      4863db         movsxd rbx, ebx
0x000107d1      e96affffff     jmp 0x10740
0x000107d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- parse_expression:
0x000107e0      4157           push r15
0x000107e2      4156           push r14
0x000107e4      4155           push r13
0x000107e6      4154           push r12
0x000107e8      55             push rbp
0x000107e9      53             push rbx
0x000107ea      4881ec280100.  sub rsp, 0x128
0x000107f1      48894c2420     mov qword [rsp + 0x20], rcx
0x000107f6      0fb64a08       movzx ecx, byte [rdx + 8]
0x000107fa      64488b042528.  mov rax, qword fs:[0x28]
0x00010803      488984241801.  mov qword [rsp + 0x118], rax
0x0001080b      31c0           xor eax, eax
0x0001080d      488b06         mov rax, qword [rsi]
0x00010810      4889542418     mov qword [rsp + 0x18], rdx
0x00010815      4c894c2440     mov qword [rsp + 0x40], r9
0x0001081a      80f924         cmp cl, 0x24
0x0001081d      4889442410     mov qword [rsp + 0x10], rax
0x00010822      0f87b8000000   ja 0x108e0
0x00010828      4889f5         mov rbp, rsi
0x0001082b      488d356e4b00.  lea rsi, [0x000153a0]
0x00010832      0fb6d1         movzx edx, cl
0x00010835      4989fe         mov r14, rdi
0x00010838      48630496       movsxd rax, dword [rsi + rdx*4]
0x0001083c      4801f0         add rax, rsi
0x0001083f      ffe0           jmp rax
0x00010841      488b5d30       mov rbx, qword [rbp + 0x30]
0x00010845      4c8b7c2420     mov r15, qword [rsp + 0x20]
0x0001084a      4889fe         mov rsi, rdi
0x0001084d      4c8b6c2418     mov r13, qword [rsp + 0x18]
0x00010852      4c890424       mov qword [rsp], r8
0x00010856      488d4301       lea rax, [rbx + 1]
0x0001085a      4c89fa         mov rdx, r15
0x0001085d      4881ca000080.  or rdx, 0x800000
0x00010864      4c89ef         mov rdi, r13
0x00010867      48894530       mov qword [rbp + 0x30], rax
0x0001086b      e8b0f7ffff     call sym.peek_token
0x00010870      4898           cdqe
0x00010872      49014648       add qword [r14 + 0x48], rax
0x00010876      31c0           xor eax, eax
0x00010878      41807d0809     cmp byte [r13 + 8], 9
0x0001087d      4c89ea         mov rdx, r13
0x00010880      0f84fa0a0000   je 0x11380
0x00010886      4c8b6c2440     mov r13, qword [rsp + 0x40]
0x0001088b      4c8b0424       mov r8, qword [rsp]
0x0001088f      4c89f9         mov rcx, r15
0x00010892      4889ee         mov rsi, rbp
0x00010895      4c89f7         mov rdi, r14
0x00010898      4983c001       add r8, 1
0x0001089c      4d89e9         mov r9, r13
0x0001089f      e8ac150000     call sym.parse_reg_exp
0x000108a4      458b5d00       mov r11d, dword [r13]
0x000108a8      4585db         test r11d, r11d
0x000108ab      7533           jne 0x108e0
0x000108ad      488b542418     mov rdx, qword [rsp + 0x18]
0x000108b2      807a0809       cmp byte [rdx + 8], 9
0x000108b6      0f84c40a0000   je 0x11380
0x000108bc      4885c0         test rax, rax
0x000108bf      7411           je 0x108d2
0x000108c1      488d35d862ff.  lea rsi, sym.free_tree                  ; 0x6ba0 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x000108c8      31d2           xor edx, edx
0x000108ca      4889c7         mov rdi, rax
0x000108cd      e82e54ffff     call sym.postorder
0x000108d2      488b442440     mov rax, qword [rsp + 0x40]
0x000108d7      c70008000000   mov dword [rax], 8
0x000108dd      0f1f00         nop dword [rax]
0x000108e0      48c744242800.  mov qword [rsp + 0x28], 0
0x000108e9      0f1f80000000.  nop dword [rax]
0x000108f0      488bbc241801.  mov rdi, qword [rsp + 0x118]
0x000108f8      6448333c2528.  xor rdi, qword fs:[0x28]
0x00010901      488b442428     mov rax, qword [rsp + 0x28]
0x00010906      0f8572130000   jne 0x11c7e
0x0001090c      4881c4280100.  add rsp, 0x128
0x00010913      5b             pop rbx
0x00010914      5d             pop rbp
0x00010915      415c           pop r12
0x00010917      415d           pop r13
0x00010919      415e           pop r14
0x0001091b      415f           pop r15
0x0001091d      c3             ret
0x0001091e      48f744242000.  test qword [rsp + 0x20], 0x1000000
0x00010927      0f8550020000   jne 0x10b7d
0x0001092d      488b442420     mov rax, qword [rsp + 0x20]
0x00010932      a820           test al, 0x20                           ; "@"
0x00010934      0f8543020000   jne 0x10b7d
0x0001093a      a810           test al, 0x10
0x0001093c      0f85630e0000   jne 0x117a5
0x00010942      80f909         cmp cl, 9
0x00010945      0f840d0a0000   je 0x11358
0x0001094b      488b442410     mov rax, qword [rsp + 0x10]
0x00010950      4c8b442418     mov r8, qword [rsp + 0x18]
0x00010955      31c9           xor ecx, ecx
0x00010957      31d2           xor edx, edx
0x00010959      488db0800000.  lea rsi, [rax + 0x80]
0x00010960      488d7870       lea rdi, [rax + 0x70]
0x00010964      41c6400801     mov byte [r8 + 8], 1
0x00010969      e87277ffff     call sym.create_token_tree.isra.16
0x0001096e      4885c0         test rax, rax
0x00010971      4889442428     mov qword [rsp + 0x28], rax
0x00010976      0f84cc090000   je 0x11348
0x0001097c      488b5c2418     mov rbx, qword [rsp + 0x18]
0x00010981      488b542420     mov rdx, qword [rsp + 0x20]
0x00010986      4c89f6         mov rsi, r14
0x00010989      4c8dbc24c000.  lea r15, [rsp + 0xc0]
0x00010991      4889df         mov rdi, rbx
0x00010994      e887f6ffff     call sym.peek_token
0x00010999      4898           cdqe
0x0001099b      49014648       add qword [r14 + 0x48], rax
0x0001099f      0fb64308       movzx eax, byte [rbx + 8]
0x000109a3      0f1f440000     nop dword [rax + rax]
0x000109a8      3c17           cmp al, 0x17
0x000109aa      0f8740ffffff   ja 0x108f0
0x000109b0      3c12           cmp al, 0x12
0x000109b2      b900088c00     mov ecx, 0x8c0800
0x000109b7      0f94c3         sete bl
0x000109ba      480fa3c1       bt rcx, rax
0x000109be      0f832cffffff   jae 0x108f0
0x000109c4      488b4c2418     mov rcx, qword [rsp + 0x18]
0x000109c9      3c17           cmp al, 0x17
0x000109cb      498b6e48       mov rbp, qword [r14 + 0x48]
0x000109cf      660f6f01       movdqa xmm0, xmmword [rcx]
0x000109d3      0f841f030000   je 0x10cf8
0x000109d9      3c13           cmp al, 0x13
0x000109db      0fb6db         movzx ebx, bl
0x000109de      0f84ac020000   je 0x10c90
0x000109e4      488b542420     mov rdx, qword [rsp + 0x20]
0x000109e9      488b7c2418     mov rdi, qword [rsp + 0x18]
0x000109ee      4c89f6         mov rsi, r14
0x000109f1      e82af6ffff     call sym.peek_token
0x000109f6      4898           cdqe
0x000109f8      49014648       add qword [r14 + 0x48], rax
0x000109fc      48837c242800   cmp qword [rsp + 0x28], 0
0x00010a02      0f8488030000   je 0x10d90
0x00010a08      48c70424ffff.  mov qword [rsp], 0xffffffffffffffff
0x00010a10      4885db         test rbx, rbx
0x00010a13      488b6c2428     mov rbp, qword [rsp + 0x28]
0x00010a18      48c744243000.  mov qword [rsp + 0x30], 0
0x00010a21      0f8f79010000   jg 0x10ba0
0x00010a27      807d3011       cmp byte [rbp + 0x30], 0x11
0x00010a2b      0f843f030000   je 0x10d70
0x00010a31      48833c24ff     cmp qword [rsp], 0xffffffffffffffff
0x00010a36      4889ea         mov rdx, rbp
0x00010a39      4d89f8         mov r8, r15
0x00010a3c      0f94c0         sete al
0x00010a3f      31c9           xor ecx, ecx
0x00010a41      83c00a         add eax, 0xa
0x00010a44      888424c80000.  mov byte [rsp + 0xc8], al
0x00010a4b      488b442410     mov rax, qword [rsp + 0x10]
0x00010a50      4c8d6070       lea r12, [rax + 0x70]
0x00010a54      4c8da8800000.  lea r13, [rax + 0x80]
0x00010a5b      4c89e7         mov rdi, r12
0x00010a5e      4c89ee         mov rsi, r13
0x00010a61      e87a76ffff     call sym.create_token_tree.isra.16
0x00010a66      4885c0         test rax, rax
0x00010a69      4889c2         mov rdx, rax
0x00010a6c      0f84ee010000   je 0x10c60
0x00010a72      4883c302       add rbx, 2
0x00010a76      483b1c24       cmp rbx, qword [rsp]
0x00010a7a      7f7f           jg 0x10afb
0x00010a7c      4c89742448     mov qword [rsp + 0x48], r14
0x00010a81      4989c6         mov r14, rax
0x00010a84      488b742410     mov rsi, qword [rsp + 0x10]
0x00010a89      4889ef         mov rdi, rbp
0x00010a8c      e82f77ffff     call sym.duplicate_tree
0x00010a91      4d89f8         mov r8, r15
0x00010a94      4889c5         mov rbp, rax
0x00010a97      4889c1         mov rcx, rax
0x00010a9a      4c89f2         mov rdx, r14
0x00010a9d      4c89ee         mov rsi, r13
0x00010aa0      4c89e7         mov rdi, r12
0x00010aa3      c68424c80000.  mov byte [rsp + 0xc8], 0x10             ; [0x10:1]=3
0x00010aab      e83076ffff     call sym.create_token_tree.isra.16
0x00010ab0      4885ed         test rbp, rbp
0x00010ab3      0f84a7010000   je 0x10c60
0x00010ab9      4885c0         test rax, rax
0x00010abc      0f849e010000   je 0x10c60
0x00010ac2      31c9           xor ecx, ecx
0x00010ac4      4d89f8         mov r8, r15
0x00010ac7      4889c2         mov rdx, rax
0x00010aca      4c89ee         mov rsi, r13
0x00010acd      4c89e7         mov rdi, r12
0x00010ad0      c68424c80000.  mov byte [rsp + 0xc8], 0xa
0x00010ad8      e80376ffff     call sym.create_token_tree.isra.16
0x00010add      4885c0         test rax, rax
0x00010ae0      4989c6         mov r14, rax
0x00010ae3      0f8477010000   je 0x10c60
0x00010ae9      4883c301       add rbx, 1
0x00010aed      483b1c24       cmp rbx, qword [rsp]
0x00010af1      7e91           jle 0x10a84
0x00010af3      4c8b742448     mov r14, qword [rsp + 0x48]
0x00010af8      4889c2         mov rdx, rax
0x00010afb      488b442430     mov rax, qword [rsp + 0x30]
0x00010b00      4885c0         test rax, rax
0x00010b03      0f84a7020000   je 0x10db0
0x00010b09      4889d1         mov rcx, rdx
0x00010b0c      4d89f8         mov r8, r15
0x00010b0f      4889c2         mov rdx, rax
0x00010b12      4c89ee         mov rsi, r13
0x00010b15      4c89e7         mov rdi, r12
0x00010b18      c68424c80000.  mov byte [rsp + 0xc8], 0x10             ; [0x10:1]=3
0x00010b20      e8bb75ffff     call sym.create_token_tree.isra.16
0x00010b25      488b7c2440     mov rdi, qword [rsp + 0x40]
0x00010b2a      8b17           mov edx, dword [rdi]
0x00010b2c      85d2           test edx, edx
0x00010b2e      7409           je 0x10b39
0x00010b30      4885c0         test rax, rax
0x00010b33      0f8452030000   je 0x10e8b
0x00010b39      4889442428     mov qword [rsp + 0x28], rax
0x00010b3e      48f744242000.  test qword [rsp + 0x20], 0x1000000
0x00010b47      488b442418     mov rax, qword [rsp + 0x18]
0x00010b4c      0fb64008       movzx eax, byte [rax + 8]
0x00010b50      0f8452feffff   je 0x109a8
0x00010b56      3c0b           cmp al, 0xb
0x00010b58      7408           je 0x10b62
0x00010b5a      3c17           cmp al, 0x17
0x00010b5c      0f8546feffff   jne 0x109a8
0x00010b62      488b442428     mov rax, qword [rsp + 0x28]
0x00010b67      4885c0         test rax, rax
0x00010b6a      7411           je 0x10b7d
0x00010b6c      488d352d60ff.  lea rsi, sym.free_tree                  ; 0x6ba0 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x00010b73      31d2           xor edx, edx
0x00010b75      4889c7         mov rdi, rax
0x00010b78      e88351ffff     call sym.postorder
0x00010b7d      488b442440     mov rax, qword [rsp + 0x40]
0x00010b82      48c744242800.  mov qword [rsp + 0x28], 0
0x00010b8b      c7000d000000   mov dword [rax], 0xd                    ; [0xd:4]=0x3000000
0x00010b91      e95afdffff     jmp 0x108f0
0x00010b96      662e0f1f8400.  nop word cs:[rax + rax]
0x00010ba0      4883fb01       cmp rbx, 1
0x00010ba4      0f8432080000   je 0x113dc
0x00010baa      488b442410     mov rax, qword [rsp + 0x10]
0x00010baf      4989ed         mov r13, rbp
0x00010bb2      4c89742448     mov qword [rsp + 0x48], r14
0x00010bb7      4c8da0800000.  lea r12, [rax + 0x80]
0x00010bbe      488d7870       lea rdi, [rax + 0x70]
0x00010bc2      4889e8         mov rax, rbp
0x00010bc5      4989c6         mov r14, rax
0x00010bc8      bd02000000     mov ebp, 2
0x00010bcd      4c89e6         mov rsi, r12
0x00010bd0      48897c2430     mov qword [rsp + 0x30], rdi
0x00010bd5      4d89ec         mov r12, r13
0x00010bd8      4989dd         mov r13, rbx
0x00010bdb      4889f3         mov rbx, rsi
0x00010bde      6690           nop
0x00010be0      488b742410     mov rsi, qword [rsp + 0x10]
0x00010be5      4c89e7         mov rdi, r12
0x00010be8      e8d375ffff     call sym.duplicate_tree
0x00010bed      488b7c2430     mov rdi, qword [rsp + 0x30]
0x00010bf2      4989c4         mov r12, rax
0x00010bf5      4c89f2         mov rdx, r14
0x00010bf8      4d89f8         mov r8, r15
0x00010bfb      4889c1         mov rcx, rax
0x00010bfe      4889de         mov rsi, rbx
0x00010c01      c68424c80000.  mov byte [rsp + 0xc8], 0x10             ; [0x10:1]=3
0x00010c09      e8d274ffff     call sym.create_token_tree.isra.16
0x00010c0e      4d85e4         test r12, r12
0x00010c11      4989c6         mov r14, rax
0x00010c14      744a           je 0x10c60
0x00010c16      4885c0         test rax, rax
0x00010c19      7445           je 0x10c60
0x00010c1b      4883c501       add rbp, 1
0x00010c1f      4c39ed         cmp rbp, r13
0x00010c22      7ebc           jle 0x10be0
0x00010c24      4c8b742448     mov r14, qword [rsp + 0x48]
0x00010c29      4c89eb         mov rbx, r13
0x00010c2c      4889442430     mov qword [rsp + 0x30], rax
0x00010c31      4d89e5         mov r13, r12
0x00010c34      48391c24       cmp qword [rsp], rbx
0x00010c38      0f8466010000   je 0x10da4
0x00010c3e      488b742410     mov rsi, qword [rsp + 0x10]
0x00010c43      4c89ef         mov rdi, r13
0x00010c46      e87575ffff     call sym.duplicate_tree
0x00010c4b      4885c0         test rax, rax
0x00010c4e      4889c5         mov rbp, rax
0x00010c51      0f85d0fdffff   jne 0x10a27
0x00010c57      660f1f840000.  nop word [rax + rax]
0x00010c60      488b442440     mov rax, qword [rsp + 0x40]
0x00010c65      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x00010c6b      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00010c70      488d35295fff.  lea rsi, sym.free_tree                  ; 0x6ba0 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x00010c77      31d2           xor edx, edx
0x00010c79      e88250ffff     call sym.postorder
0x00010c7e      48c744242800.  mov qword [rsp + 0x28], 0
0x00010c87      e964fcffff     jmp 0x108f0
0x00010c8c      0f1f4000       nop dword [rax]
0x00010c90      48c704240100.  mov qword [rsp], 1
0x00010c98      488b542420     mov rdx, qword [rsp + 0x20]
0x00010c9d      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00010ca2      4c89f6         mov rsi, r14
0x00010ca5      e876f3ffff     call sym.peek_token
0x00010caa      4898           cdqe
0x00010cac      49014648       add qword [r14 + 0x48], rax
0x00010cb0      48837c242800   cmp qword [rsp + 0x28], 0
0x00010cb6      0f84d4000000   je 0x10d90
0x00010cbc      488b0424       mov rax, qword [rsp]
0x00010cc0      4809d8         or rax, rbx
0x00010cc3      0f8547fdffff   jne 0x10a10
0x00010cc9      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00010cce      488d35cb5eff.  lea rsi, sym.free_tree                  ; 0x6ba0 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x00010cd5      31d2           xor edx, edx
0x00010cd7      e82450ffff     call sym.postorder
0x00010cdc      488b442440     mov rax, qword [rsp + 0x40]
0x00010ce1      8b30           mov esi, dword [rax]
0x00010ce3      85f6           test esi, esi
0x00010ce5      7584           jne 0x10c6b
0x00010ce7      48c744242800.  mov qword [rsp + 0x28], 0
0x00010cf0      e949feffff     jmp 0x10b3e
0x00010cf5      0f1f00         nop dword [rax]
0x00010cf8      488b542420     mov rdx, qword [rsp + 0x20]
0x00010cfd      4889ce         mov rsi, rcx
0x00010d00      4c89f7         mov rdi, r14
0x00010d03      0f290424       movaps xmmword [rsp], xmm0
0x00010d07      e814faffff     call sym.fetch_number
0x00010d0c      4883f8ff       cmp rax, 0xffffffffffffffff
0x00010d10      4889c3         mov rbx, rax
0x00010d13      660f6f0424     movdqa xmm0, xmmword [rsp]
0x00010d18      0f84a2000000   je 0x10dc0
0x00010d1e      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00010d22      7419           je 0x10d3d
0x00010d24      488b442418     mov rax, qword [rsp + 0x18]
0x00010d29      0fb64008       movzx eax, byte [rax + 8]
0x00010d2d      3c18           cmp al, 0x18
0x00010d2f      0f841b010000   je 0x10e50
0x00010d35      3c01           cmp al, 1
0x00010d37      0f8426010000   je 0x10e63
0x00010d3d      48f744242000.  test qword [rsp + 0x20], 0x200000
0x00010d46      0f84370f0000   je 0x11c83
0x00010d4c      488b442418     mov rax, qword [rsp + 0x18]
0x00010d51      49896e48       mov qword [r14 + 0x48], rbp
0x00010d55      0f2900         movaps xmmword [rax], xmm0
0x00010d58      c6400801       mov byte [rax + 8], 1
0x00010d5c      488b442428     mov rax, qword [rsp + 0x28]
0x00010d61      e9bffdffff     jmp 0x10b25
0x00010d66      662e0f1f8400.  nop word cs:[rax + rax]
0x00010d70      488b5528       mov rdx, qword [rbp + 0x28]
0x00010d74      488d35c54cff.  lea rsi, sym.mark_opt_subexp            ; 0x5a40
0x00010d7b      4889ef         mov rdi, rbp
0x00010d7e      e87d4fffff     call sym.postorder
0x00010d83      e9a9fcffff     jmp 0x10a31
0x00010d88      0f1f84000000.  nop dword [rax + rax]
0x00010d90      488b442440     mov rax, qword [rsp + 0x40]
0x00010d95      8b08           mov ecx, dword [rax]
0x00010d97      85c9           test ecx, ecx
0x00010d99      0f8448ffffff   je 0x10ce7
0x00010d9f      e93cfbffff     jmp 0x108e0
0x00010da4      488b542430     mov rdx, qword [rsp + 0x30]
0x00010da9      0f1f80000000.  nop dword [rax]
0x00010db0      4889542428     mov qword [rsp + 0x28], rdx
0x00010db5      e984fdffff     jmp 0x10b3e
0x00010dba      660f1f440000   nop word [rax + rax]
0x00010dc0      488b442418     mov rax, qword [rsp + 0x18]
0x00010dc5      80780801       cmp byte [rax + 8], 1
0x00010dc9      0f85b1000000   jne 0x10e80
0x00010dcf      488b442418     mov rax, qword [rsp + 0x18]
0x00010dd4      80382c         cmp byte [rax], 0x2c
0x00010dd7      0f85a3000000   jne 0x10e80
0x00010ddd      31db           xor ebx, ebx
0x00010ddf      488b542420     mov rdx, qword [rsp + 0x20]
0x00010de4      488b742418     mov rsi, qword [rsp + 0x18]
0x00010de9      4c89f7         mov rdi, r14
0x00010dec      0f29442430     movaps xmmword [rsp + 0x30], xmm0
0x00010df1      e82af9ffff     call sym.fetch_number
0x00010df6      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00010dfa      48890424       mov qword [rsp], rax
0x00010dfe      660f6f442430   movdqa xmm0, xmmword [rsp + 0x30]
0x00010e04      0f8433ffffff   je 0x10d3d
0x00010e0a      488b0424       mov rax, qword [rsp]
0x00010e0e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00010e12      7405           je 0x10e19
0x00010e14      4839d8         cmp rax, rbx
0x00010e17      7c67           jl 0x10e80
0x00010e19      488b442418     mov rax, qword [rsp + 0x18]
0x00010e1e      80780818       cmp byte [rax + 8], 0x18
0x00010e22      755c           jne 0x10e80
0x00010e24      48833c24ff     cmp qword [rsp], 0xffffffffffffffff
0x00010e29      7529           jne 0x10e54
0x00010e2b      31c0           xor eax, eax
0x00010e2d      4881fbff7f00.  cmp rbx, 0x7fff
0x00010e34      0f9fc0         setg al
0x00010e37      4885c0         test rax, rax
0x00010e3a      0f8458feffff   je 0x10c98
0x00010e40      488b442440     mov rax, qword [rsp + 0x40]
0x00010e45      c7000f000000   mov dword [rax], 0xf                    ; [0xf:4]=0x3e000300
0x00010e4b      eb3e           jmp 0x10e8b
0x00010e4d      0f1f00         nop dword [rax]
0x00010e50      48891c24       mov qword [rsp], rbx
0x00010e54      31c0           xor eax, eax
0x00010e56      48813c24ff7f.  cmp qword [rsp], 0x7fff
0x00010e5e      0f9fc0         setg al
0x00010e61      ebd4           jmp 0x10e37
0x00010e63      488b442418     mov rax, qword [rsp + 0x18]
0x00010e68      80382c         cmp byte [rax], 0x2c
0x00010e6b      0f846effffff   je 0x10ddf
0x00010e71      48f744242000.  test qword [rsp + 0x20], 0x200000
0x00010e7a      0f85ccfeffff   jne 0x10d4c
0x00010e80      488b442440     mov rax, qword [rsp + 0x40]
0x00010e85      c7000a000000   mov dword [rax], 0xa
0x00010e8b      48837c242800   cmp qword [rsp + 0x28], 0
0x00010e91      0f85d4fdffff   jne 0x10c6b
0x00010e97      e944faffff     jmp 0x108e0
0x00010e9c      0f1f4000       nop dword [rax]
0x00010ea0      488b442418     mov rax, qword [rsp + 0x18]
0x00010ea5      8b28           mov ebp, dword [rax]
0x00010ea7      f7c50f030000   test ebp, 0x30f
0x00010ead      7462           je 0x10f11
0x00010eaf      488b442410     mov rax, qword [rsp + 0x10]
0x00010eb4      0fb680b00000.  movzx eax, byte [rax + 0xb0]
0x00010ebb      a810           test al, 0x10
0x00010ebd      7552           jne 0x10f11
0x00010ebf      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00010ec4      83c810         or eax, 0x10
0x00010ec7      a808           test al, 8
0x00010ec9      8887b0000000   mov byte [rdi + 0xb0], al
0x00010ecf      0f85fe0b0000   jne 0x11ad3
0x00010ed5      48ba00000000.  movabs rdx, 0x3ff000000000000           ; 287948901175001088
0x00010edf      a804           test al, 4
0x00010ee1      488997b80000.  mov qword [rdi + 0xb8], rdx
0x00010ee8      48bafeffff87.  movabs rdx, 0x7fffffe87fffffe
0x00010ef2      488997c00000.  mov qword [rdi + 0xc0], rdx
0x00010ef9      0f84590b0000   je 0x11a58
0x00010eff      660fefc0       pxor xmm0, xmm0
0x00010f03      488b442418     mov rax, qword [rsp + 0x18]
0x00010f08      0f1187c80000.  movups xmmword [rdi + 0xc8], xmm0
0x00010f0f      8b28           mov ebp, dword [rax]
0x00010f11      488b442410     mov rax, qword [rsp + 0x10]
0x00010f16      488d5870       lea rbx, [rax + 0x70]
0x00010f1a      4c8da0800000.  lea r12, [rax + 0x80]
0x00010f21      8d8500ffffff   lea eax, [rbp - 0x100]
0x00010f27      a9fffeffff     test eax, 0xfffffeff                    ; 4294967039
0x00010f2c      0f8568060000   jne 0x1159a
0x00010f32      81fd00010000   cmp ebp, 0x100
0x00010f38      4c8b7c2418     mov r15, qword [rsp + 0x18]
0x00010f3d      0f842f060000   je 0x11572
0x00010f43      41c707050000.  mov dword [r15], 5
0x00010f4a      4d89f8         mov r8, r15
0x00010f4d      31c9           xor ecx, ecx
0x00010f4f      31d2           xor edx, edx
0x00010f51      4c89e6         mov rsi, r12
0x00010f54      4889df         mov rdi, rbx
0x00010f57      e88471ffff     call sym.create_token_tree.isra.16
0x00010f5c      41c7070a0000.  mov dword [r15], 0xa
0x00010f63      4889c5         mov rbp, rax
0x00010f66      4c8b442418     mov r8, qword [rsp + 0x18]
0x00010f6b      31c9           xor ecx, ecx
0x00010f6d      31d2           xor edx, edx
0x00010f6f      4c89e6         mov rsi, r12
0x00010f72      4889df         mov rdi, rbx
0x00010f75      e86671ffff     call sym.create_token_tree.isra.16
0x00010f7a      4c8d8424c000.  lea r8, [rsp + 0xc0]
0x00010f82      4889ea         mov rdx, rbp
0x00010f85      4889df         mov rdi, rbx
0x00010f88      4889c1         mov rcx, rax
0x00010f8b      4c89e6         mov rsi, r12
0x00010f8e      4989c5         mov r13, rax
0x00010f91      c68424c80000.  mov byte [rsp + 0xc8], 0xa
0x00010f99      e84271ffff     call sym.create_token_tree.isra.16
0x00010f9e      4885ed         test rbp, rbp
0x00010fa1      4889c7         mov rdi, rax
0x00010fa4      4889442428     mov qword [rsp + 0x28], rax
0x00010fa9      0f94c2         sete dl
0x00010fac      4d85ed         test r13, r13
0x00010faf      0f94c0         sete al
0x00010fb2      08c2           or dl, al
0x00010fb4      0f858e030000   jne 0x11348
0x00010fba      4885ff         test rdi, rdi
0x00010fbd      0f8485030000   je 0x11348
0x00010fc3      488b542420     mov rdx, qword [rsp + 0x20]
0x00010fc8      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00010fcd      4c89f6         mov rsi, r14
0x00010fd0      e84bf0ffff     call sym.peek_token
0x00010fd5      4898           cdqe
0x00010fd7      49014648       add qword [r14 + 0x48], rax
0x00010fdb      e910f9ffff     jmp 0x108f0
0x00010fe0      be01000000     mov esi, 1
0x00010fe5      bf20000000     mov edi, 0x20                           ; "@"
0x00010fea      48c784249800.  mov qword [rsp + 0x98], 0
0x00010ff6      e8750affff     call sym.imp.calloc
0x00010ffb      be01000000     mov esi, 1
0x00011000      4989c4         mov r12, rax
0x00011003      bf50000000     mov edi, 0x50                           ; 'P'
0x00011008      e8630affff     call sym.imp.calloc
0x0001100d      4d85e4         test r12, r12
0x00011010      4989c5         mov r13, rax
0x00011013      0f94c2         sete dl
0x00011016      4885c0         test rax, rax
0x00011019      0f94c0         sete al
0x0001101c      08c2           or dl, al
0x0001101e      0f85d5070000   jne 0x117f9
0x00011024      4c8b542418     mov r10, qword [rsp + 0x18]
0x00011029      488b542420     mov rdx, qword [rsp + 0x20]
0x0001102e      4c89f6         mov rsi, r14
0x00011031      4c89d7         mov rdi, r10
0x00011034      e8d748ffff     call sym.peek_token_bracket
0x00011039      4863d8         movsxd rbx, eax
0x0001103c      410fb64208     movzx eax, byte [r10 + 8]
0x00011041      3c02           cmp al, 2
0x00011043      0f84a0070000   je 0x117e9
0x00011049      3c19           cmp al, 0x19
0x0001104b      c644245700     mov byte [rsp + 0x57], 0
0x00011050      0f84c4040000   je 0x1151a
0x00011056      3c15           cmp al, 0x15
0x00011058      0f8406050000   je 0x11564
0x0001105e      488d8424d000.  lea rax, [rsp + 0xd0]
0x00011066      4c8b7c2418     mov r15, qword [rsp + 0x18]
0x0001106b      488d2dc24300.  lea rbp, [0x00015434]
0x00011072      48c744244800.  mov qword [rsp + 0x48], 0
0x0001107b      41b901000000   mov r9d, 1
0x00011081      48c744243000.  mov qword [rsp + 0x30], 0
0x0001108a      4889442428     mov qword [rsp + 0x28], rax
0x0001108f      488d8424a000.  lea rax, [rsp + 0xa0]
0x00011097      48890424       mov qword [rsp], rax
0x0001109b      488d84249800.  lea rax, [rsp + 0x98]
0x000110a3      4889442458     mov qword [rsp + 0x58], rax
0x000110a8      488d8424c000.  lea rax, [rsp + 0xc0]
0x000110b0      4889442460     mov qword [rsp + 0x60], rax
0x000110b5      488d8424f000.  lea rax, [rsp + 0xf0]
0x000110bd      4889442468     mov qword [rsp + 0x68], rax
0x000110c2      488b442428     mov rax, qword [rsp + 0x28]
0x000110c7      4c8b442420     mov r8, qword [rsp + 0x20]
0x000110cc      4183e101       and r9d, 1
0x000110d0      488b3c24       mov rdi, qword [rsp]
0x000110d4      89d9           mov ecx, ebx
0x000110d6      4c89fa         mov rdx, r15
0x000110d9      4c89f6         mov rsi, r14
0x000110dc      c78424a00000.  mov dword [rsp + 0xa0], 3
0x000110e7      48898424a800.  mov qword [rsp + 0xa8], rax
0x000110ef      e8ccecffff     call sym.parse_bracket_element.constprop.37
0x000110f4      85c0           test eax, eax
0x000110f6      0f85df040000   jne 0x115db
0x000110fc      488b542420     mov rdx, qword [rsp + 0x20]
0x00011101      4c89f6         mov rsi, r14
0x00011104      4c89ff         mov rdi, r15
0x00011107      e80448ffff     call sym.peek_token_bracket
0x0001110c      4863d8         movsxd rbx, eax
0x0001110f      8b8424a00000.  mov eax, dword [rsp + 0xa0]
0x00011116      8d50fe         lea edx, [rax - 2]
0x00011119      83e2fd         and edx, 0xfffffffd                     ; 4294967293
0x0001111c      7417           je 0x11135
0x0001111e      410fb65708     movzx edx, byte [r15 + 8]
0x00011123      80fa02         cmp dl, 2
0x00011126      0f8495040000   je 0x115c1
0x0001112c      80fa16         cmp dl, 0x16
0x0001112f      0f84b2040000   je 0x115e7
0x00011135      83f804         cmp eax, 4
0x00011138      0f879c090000   ja 0x11ada
0x0001113e      4863448500     movsxd rax, dword [rbp + rax*4]
0x00011143      4801e8         add rax, rbp
0x00011146      ffe0           jmp rax
0x00011148      488b5c2440     mov rbx, qword [rsp + 0x40]
0x0001114d      80f923         cmp cl, 0x23
0x00011150      488b7778       mov rsi, qword [rdi + 0x78]
0x00011154      410f94c0       sete r8b
0x00011158      488d0da23a00.  lea rcx, [0x00014c01]
0x0001115f      488d15493e00.  lea rdx, str.space                      ; 0x14faf ; "space"
0x00011166      450fb6c0       movzx r8d, r8b
0x0001116a      4989d9         mov r9, rbx
0x0001116d      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00011172      e8b9a2ffff     call sym.build_charclass_op
0x00011177      8b3b           mov edi, dword [rbx]
0x00011179      4889442428     mov qword [rsp + 0x28], rax
0x0001117e      85ff           test edi, edi
0x00011180      0f84f6f7ffff   je 0x1097c
0x00011186      4885c0         test rax, rax
0x00011189      0f85edf7ffff   jne 0x1097c
0x0001118f      e94cf7ffff     jmp 0x108e0
0x00011194      0f1f4000       nop dword [rax]
0x00011198      488b5c2440     mov rbx, qword [rsp + 0x40]
0x0001119d      80f921         cmp cl, 0x21
0x000111a0      488b7778       mov rsi, qword [rdi + 0x78]
0x000111a4      410f94c0       sete r8b
0x000111a8      488d0d4f3000.  lea rcx, [0x000141fe]                   ; "_"
0x000111af      488d15ed3d00.  lea rdx, str.alnum                      ; 0x14fa3 ; "alnum"
0x000111b6      450fb6c0       movzx r8d, r8b
0x000111ba      4989d9         mov r9, rbx
0x000111bd      ebae           jmp 0x1116d
0x000111bf      488b442418     mov rax, qword [rsp + 0x18]
0x000111c4      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000111c9      488b08         mov rcx, qword [rax]
0x000111cc      b801000000     mov eax, 1
0x000111d1      d3e0           shl eax, cl
0x000111d3      4898           cdqe
0x000111d5      488587a80000.  test qword [rdi + 0xa8], rax
0x000111dc      0f842c060000   je 0x1180e
0x000111e2      488b5c2410     mov rbx, qword [rsp + 0x10]
0x000111e7      4c8b442418     mov r8, qword [rsp + 0x18]
0x000111ec      31c9           xor ecx, ecx
0x000111ee      31d2           xor edx, edx
0x000111f0      480983a00000.  or qword [rbx + 0xa0], rax
0x000111f7      488db3800000.  lea rsi, [rbx + 0x80]
0x000111fe      488d7b70       lea rdi, [rbx + 0x70]
0x00011202      e8d96effff     call sym.create_token_tree.isra.16
0x00011207      4885c0         test rax, rax
0x0001120a      4889442428     mov qword [rsp + 0x28], rax
0x0001120f      0f8433010000   je 0x11348
0x00011215      488383980000.  add qword [rbx + 0x98], 1
0x0001121d      808bb0000000.  or byte [rbx + 0xb0], 2
0x00011224      e953f7ffff     jmp 0x1097c
0x00011229      488b5c2410     mov rbx, qword [rsp + 0x10]
0x0001122e      4c8b442418     mov r8, qword [rsp + 0x18]
0x00011233      31c9           xor ecx, ecx
0x00011235      31d2           xor edx, edx
0x00011237      488db3800000.  lea rsi, [rbx + 0x80]
0x0001123e      488d7b70       lea rdi, [rbx + 0x70]
0x00011242      e8996effff     call sym.create_token_tree.isra.16
0x00011247      4885c0         test rax, rax
0x0001124a      4889442428     mov qword [rsp + 0x28], rax
0x0001124f      0f84f3000000   je 0x11348
0x00011255      83bbb4000000.  cmp dword [rbx + 0xb4], 1
0x0001125c      0f8e1af7ffff   jle 0x1097c
0x00011262      808bb0000000.  or byte [rbx + 0xb0], 2
0x00011269      e90ef7ffff     jmp 0x1097c
0x0001126e      488b442410     mov rax, qword [rsp + 0x10]
0x00011273      4c8b442418     mov r8, qword [rsp + 0x18]
0x00011278      31c9           xor ecx, ecx
0x0001127a      31d2           xor edx, edx
0x0001127c      488d5870       lea rbx, [rax + 0x70]
0x00011280      488da8800000.  lea rbp, [rax + 0x80]
0x00011287      4889df         mov rdi, rbx
0x0001128a      4889ee         mov rsi, rbp
0x0001128d      e84e6effff     call sym.create_token_tree.isra.16
0x00011292      4885c0         test rax, rax
0x00011295      4889442428     mov qword [rsp + 0x28], rax
0x0001129a      0f84a8000000   je 0x11348
0x000112a0      488b442410     mov rax, qword [rsp + 0x10]
0x000112a5      4c8da424c000.  lea r12, [rsp + 0xc0]
0x000112ad      4c8b7c2428     mov r15, qword [rsp + 0x28]
0x000112b2      83b8b4000000.  cmp dword [rax + 0xb4], 1
0x000112b9      0f8ebdf6ffff   jle 0x1097c
0x000112bf      498b4648       mov rax, qword [r14 + 0x48]
0x000112c3      49394668       cmp qword [r14 + 0x68], rax
0x000112c7      0f8e04030000   jle 0x115d1
0x000112cd      493b4630       cmp rax, qword [r14 + 0x30]
0x000112d1      0f84fa020000   je 0x115d1
0x000112d7      498b5610       mov rdx, qword [r14 + 0x10]
0x000112db      833c82ff       cmp dword [rdx + rax*4], 0xffffffff
0x000112df      0f85ec020000   jne 0x115d1
0x000112e5      4c8b6c2418     mov r13, qword [rsp + 0x18]
0x000112ea      488b542420     mov rdx, qword [rsp + 0x20]
0x000112ef      4c89f6         mov rsi, r14
0x000112f2      4c89ef         mov rdi, r13
0x000112f5      e826edffff     call sym.peek_token
0x000112fa      4898           cdqe
0x000112fc      49014648       add qword [r14 + 0x48], rax
0x00011300      4d89e8         mov r8, r13
0x00011303      31c9           xor ecx, ecx
0x00011305      31d2           xor edx, edx
0x00011307      4889ee         mov rsi, rbp
0x0001130a      4889df         mov rdi, rbx
0x0001130d      e8ce6dffff     call sym.create_token_tree.isra.16
0x00011312      4c89fa         mov rdx, r15
0x00011315      4989c5         mov r13, rax
0x00011318      4d89e0         mov r8, r12
0x0001131b      4889c1         mov rcx, rax
0x0001131e      4889ee         mov rsi, rbp
0x00011321      4889df         mov rdi, rbx
0x00011324      c68424c80000.  mov byte [rsp + 0xc8], 0x10             ; [0x10:1]=3
0x0001132c      e8af6dffff     call sym.create_token_tree.isra.16
0x00011331      4d85ed         test r13, r13
0x00011334      4989c7         mov r15, rax
0x00011337      0f94c2         sete dl
0x0001133a      4885c0         test rax, rax
0x0001133d      0f94c0         sete al
0x00011340      08c2           or dl, al
0x00011342      0f8477ffffff   je 0x112bf
0x00011348      488b442440     mov rax, qword [rsp + 0x40]
0x0001134d      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x00011353      e988f5ffff     jmp 0x108e0
0x00011358      48f744242000.  test qword [rsp + 0x20], 0x20000
0x00011361      0f85e4f5ffff   jne 0x1094b
0x00011367      488b442440     mov rax, qword [rsp + 0x40]
0x0001136c      48c744242800.  mov qword [rsp + 0x28], 0
0x00011375      c70010000000   mov dword [rax], 0x10                   ; [0x10:4]=0x3e0003
0x0001137b      e970f5ffff     jmp 0x108f0
0x00011380      4883fb08       cmp rbx, 8
0x00011384      7665           jbe 0x113eb
0x00011386      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0001138b      4c8d8424c000.  lea r8, [rsp + 0xc0]
0x00011393      31c9           xor ecx, ecx
0x00011395      4889c2         mov rdx, rax
0x00011398      c68424c80000.  mov byte [rsp + 0xc8], 0x11             ; [0x11:1]=0
0x000113a0      488db7800000.  lea rsi, [rdi + 0x80]
0x000113a7      4883c770       add rdi, 0x70
0x000113ab      e8306dffff     call sym.create_token_tree.isra.16
0x000113b0      4885c0         test rax, rax
0x000113b3      4889442428     mov qword [rsp + 0x28], rax
0x000113b8      748e           je 0x11348
0x000113ba      48895828       mov qword [rax + 0x28], rbx
0x000113be      e9b9f5ffff     jmp 0x1097c
0x000113c3      488b442440     mov rax, qword [rsp + 0x40]
0x000113c8      48c744242800.  mov qword [rsp + 0x28], 0
0x000113d1      c70005000000   mov dword [rax], 5
0x000113d7      e914f5ffff     jmp 0x108f0
0x000113dc      4c8b6c2428     mov r13, qword [rsp + 0x28]
0x000113e1      4c896c2430     mov qword [rsp + 0x30], r13
0x000113e6      e949f8ffff     jmp 0x10c34
0x000113eb      488b742410     mov rsi, qword [rsp + 0x10]
0x000113f0      ba01000000     mov edx, 1
0x000113f5      89d9           mov ecx, ebx
0x000113f7      d3e2           shl edx, cl
0x000113f9      4863d2         movsxd rdx, edx
0x000113fc      480996a80000.  or qword [rsi + 0xa8], rdx
0x00011403      eb81           jmp 0x11386
0x00011405      488bb424a800.  mov rsi, qword [rsp + 0xa8]
0x0001140d      4c89e7         mov rdi, r12
0x00011410      e8bb97ffff     call sym.build_equiv_class.isra.27
0x00011415      488b542440     mov rdx, qword [rsp + 0x40]
0x0001141a      85c0           test eax, eax
0x0001141c      8902           mov dword [rdx], eax
0x0001141e      7538           jne 0x11458
0x00011420      410fb64708     movzx eax, byte [r15 + 8]
0x00011425      3c02           cmp al, 2
0x00011427      0f8494010000   je 0x115c1
0x0001142d      3c15           cmp al, 0x15
0x0001142f      0f840d040000   je 0x11842
0x00011435      4531c9         xor r9d, r9d
0x00011438      e985fcffff     jmp 0x110c2
0x0001143d      488bb424a800.  mov rsi, qword [rsp + 0xa8]
0x00011445      4c89e7         mov rdi, r12
0x00011448      e88397ffff     call sym.build_equiv_class.isra.27
0x0001144d      488b542440     mov rdx, qword [rsp + 0x40]
0x00011452      85c0           test eax, eax
0x00011454      8902           mov dword [rdx], eax
0x00011456      74c8           je 0x11420
0x00011458      4c89e7         mov rdi, r12
0x0001145b      e82004ffff     call sym.imp.free
0x00011460      4c89ef         mov rdi, r13
0x00011463      e8d856ffff     call sym.free_charset
0x00011468      488b442440     mov rax, qword [rsp + 0x40]
0x0001146d      448b00         mov r8d, dword [rax]
0x00011470      4585c0         test r8d, r8d
0x00011473      0f8567f4ffff   jne 0x108e0
0x00011479      48c744242800.  mov qword [rsp + 0x28], 0
0x00011482      e9f5f4ffff     jmp 0x1097c
0x00011487      498b5528       mov rdx, qword [r13 + 0x28]
0x0001148b      483b542430     cmp rdx, qword [rsp + 0x30]
0x00011490      498b4500       mov rax, qword [r13]
0x00011494      0f84f4040000   je 0x1198e
0x0001149a      488d4a01       lea rcx, [rdx + 1]
0x0001149e      49894d28       mov qword [r13 + 0x28], rcx
0x000114a2      8b8c24a80000.  mov ecx, dword [rsp + 0xa8]
0x000114a9      890c90         mov dword [rax + rdx*4], ecx
0x000114ac      e96fffffff     jmp 0x11420
0x000114b1      0fb69424a800.  movzx edx, byte [rsp + 0xa8]
0x000114b9      be01000000     mov esi, 1
0x000114be      4889d0         mov rax, rdx
0x000114c1      83e23f         and edx, 0x3f
0x000114c4      48c1e803       shr rax, 3
0x000114c8      89d1           mov ecx, edx
0x000114ca      83e018         and eax, 0x18
0x000114cd      48d3e6         shl rsi, cl
0x000114d0      49093404       or qword [r12 + rax], rsi
0x000114d4      e947ffffff     jmp 0x11420
0x000114d9      4883ec08       sub rsp, 8
0x000114dd      498b7e78       mov rdi, qword [r14 + 0x78]
0x000114e1      498d5518       lea rdx, [r13 + 0x18]
0x000114e5      ff742428       push qword [rsp + 0x28]
0x000114e9      4c8b8c24b800.  mov r9, qword [rsp + 0xb8]
0x000114f1      498d4d48       lea rcx, [r13 + 0x48]
0x000114f5      4c8b442468     mov r8, qword [rsp + 0x68]
0x000114fa      4c89e6         mov rsi, r12
0x000114fd      e81e97ffff     call sym.build_charclass.isra.29
0x00011502      488b542450     mov rdx, qword [rsp + 0x50]
0x00011507      85c0           test eax, eax
0x00011509      8902           mov dword [rdx], eax
0x0001150b      4159           pop r9
0x0001150d      415a           pop r10
0x0001150f      0f840bffffff   je 0x11420
0x00011515      e93effffff     jmp 0x11458
0x0001151a      41804d2001     or byte [r13 + 0x20], 1
0x0001151f      48f744242000.  test qword [rsp + 0x20], 0x100
0x00011528      7408           je 0x11532
0x0001152a      49810c240004.  or qword [r12], 0x400                   ; [0x400:8]=0x1200000264
0x00011532      49015e48       add qword [r14 + 0x48], rbx
0x00011536      4c8b5c2418     mov r11, qword [rsp + 0x18]
0x0001153b      4c89f6         mov rsi, r14
0x0001153e      488b542420     mov rdx, qword [rsp + 0x20]
0x00011543      4c89df         mov rdi, r11
0x00011546      e8c543ffff     call sym.peek_token_bracket
0x0001154b      89c3           mov ebx, eax
0x0001154d      410fb64308     movzx eax, byte [r11 + 8]
0x00011552      3c02           cmp al, 2
0x00011554      0f848f020000   je 0x117e9
0x0001155a      c644245701     mov byte [rsp + 0x57], 1
0x0001155f      e9f2faffff     jmp 0x11056
0x00011564      488b442418     mov rax, qword [rsp + 0x18]
0x00011569      c6400801       mov byte [rax + 8], 1
0x0001156d      e9ecfaffff     jmp 0x1105e
0x00011572      41c707060000.  mov dword [r15], 6
0x00011579      4d89f8         mov r8, r15
0x0001157c      31c9           xor ecx, ecx
0x0001157e      31d2           xor edx, edx
0x00011580      4c89e6         mov rsi, r12
0x00011583      4889df         mov rdi, rbx
0x00011586      e8556bffff     call sym.create_token_tree.isra.16
0x0001158b      41c707090000.  mov dword [r15], 9
0x00011592      4889c5         mov rbp, rax
0x00011595      e9ccf9ffff     jmp 0x10f66
0x0001159a      4c8b442418     mov r8, qword [rsp + 0x18]
0x0001159f      31c9           xor ecx, ecx
0x000115a1      31d2           xor edx, edx
0x000115a3      4c89e6         mov rsi, r12
0x000115a6      4889df         mov rdi, rbx
0x000115a9      e8326bffff     call sym.create_token_tree.isra.16
0x000115ae      4885c0         test rax, rax
0x000115b1      4889442428     mov qword [rsp + 0x28], rax
0x000115b6      0f8507faffff   jne 0x10fc3
0x000115bc      e987fdffff     jmp 0x11348
0x000115c1      488b442440     mov rax, qword [rsp + 0x40]
0x000115c6      c70007000000   mov dword [rax], 7
0x000115cc      e987feffff     jmp 0x11458
0x000115d1      4c897c2428     mov qword [rsp + 0x28], r15
0x000115d6      e9a1f3ffff     jmp 0x1097c
0x000115db      488b542440     mov rdx, qword [rsp + 0x40]
0x000115e0      8902           mov dword [rdx], eax
0x000115e2      e971feffff     jmp 0x11458
0x000115e7      4863c3         movsxd rax, ebx
0x000115ea      4c8b5c2420     mov r11, qword [rsp + 0x20]
0x000115ef      49014648       add qword [r14 + 0x48], rax
0x000115f3      4c8b542460     mov r10, qword [rsp + 0x60]
0x000115f8      4c89da         mov rdx, r11
0x000115fb      4c89d7         mov rdi, r10
0x000115fe      e80d43ffff     call sym.peek_token_bracket
0x00011603      0fb69424c800.  movzx edx, byte [rsp + 0xc8]
0x0001160b      80fa02         cmp dl, 2
0x0001160e      74b1           je 0x115c1
0x00011610      80fa15         cmp dl, 0x15
0x00011613      0f840e020000   je 0x11827
0x00011619      488b542468     mov rdx, qword [rsp + 0x68]
0x0001161e      488dbc24b000.  lea rdi, [rsp + 0xb0]
0x00011626      41b901000000   mov r9d, 1
0x0001162c      4d89d8         mov r8, r11
0x0001162f      89c1           mov ecx, eax
0x00011631      c78424b00000.  mov dword [rsp + 0xb0], 3
0x0001163c      48899424b800.  mov qword [rsp + 0xb8], rdx
0x00011644      4c89d2         mov rdx, r10
0x00011647      e874e7ffff     call sym.parse_bracket_element.constprop.37
0x0001164c      85c0           test eax, eax
0x0001164e      758b           jne 0x115db
0x00011650      488b542420     mov rdx, qword [rsp + 0x20]
0x00011655      4c89f6         mov rsi, r14
0x00011658      4c89ff         mov rdi, r15
0x0001165b      e8b042ffff     call sym.peek_token_bracket
0x00011660      4863d8         movsxd rbx, eax
0x00011663      488b442410     mov rax, qword [rsp + 0x10]
0x00011668      8bb424a00000.  mov esi, dword [rsp + 0xa0]
0x0001166f      41b900000000   mov r9d, 0
0x00011675      83b8b4000000.  cmp dword [rax + 0xb4], 1
0x0001167c      8d46fe         lea eax, [rsi - 2]
0x0001167f      4d0f4fcd       cmovg r9, r13
0x00011683      83e0fd         and eax, 0xfffffffd                     ; 4294967293
0x00011686      0f846d040000   je 0x11af9
0x0001168c      448b9424b000.  mov r10d, dword [rsp + 0xb0]
0x00011694      418d42fe       lea eax, [r10 - 2]
0x00011698      83e0fd         and eax, 0xfffffffd                     ; 4294967293
0x0001169b      0f8458040000   je 0x11af9
0x000116a1      83fe03         cmp esi, 3
0x000116a4      410f94c3       sete r11b
0x000116a8      0f848f040000   je 0x11b3d
0x000116ae      4183fa03       cmp r10d, 3
0x000116b2      0f8451040000   je 0x11b09
0x000116b8      85f6           test esi, esi
0x000116ba      0f8569030000   jne 0x11a29
0x000116c0      0fb69424a800.  movzx edx, byte [rsp + 0xa8]
0x000116c8      4585d2         test r10d, r10d
0x000116cb      0f853c030000   jne 0x11a0d
0x000116d1      440fb68424b8.  movzx r8d, byte [rsp + 0xb8]
0x000116da      85f6           test esi, esi
0x000116dc      0f84e4020000   je 0x119c6
0x000116e2      4584db         test r11b, r11b
0x000116e5      0f85db020000   jne 0x119c6
0x000116eb      4d85c9         test r9, r9
0x000116ee      8b9424a80000.  mov edx, dword [rsp + 0xa8]
0x000116f5      741d           je 0x11714
0x000116f7      4489c7         mov edi, r8d
0x000116fa      89542478       mov dword [rsp + 0x78], edx
0x000116fe      4c894c2470     mov qword [rsp + 0x70], r9
0x00011703      e86804ffff     call sym.imp.btowc
0x00011708      4c8b4c2470     mov r9, qword [rsp + 0x70]
0x0001170d      8b542478       mov edx, dword [rsp + 0x78]
0x00011711      4189c0         mov r8d, eax
0x00011714      83faff         cmp edx, 0xffffffff
0x00011717      0f8410040000   je 0x11b2d
0x0001171d      4183f8ff       cmp r8d, 0xffffffff
0x00011721      0f8406040000   je 0x11b2d
0x00011727      48f744242000.  test qword [rsp + 0x20], 0x10000
0x00011730      7409           je 0x1173b
0x00011732      4139d0         cmp r8d, edx
0x00011735      0f82be030000   jb 0x11af9
0x0001173b      4d85c9         test r9, r9
0x0001173e      7426           je 0x11766
0x00011740      498b4140       mov rax, qword [r9 + 0x40]
0x00011744      483b442448     cmp rax, qword [rsp + 0x48]
0x00011749      498b4908       mov rcx, qword [r9 + 8]
0x0001174d      0f8410040000   je 0x11b63
0x00011753      891481         mov dword [rcx + rax*4], edx
0x00011756      498b4910       mov rcx, qword [r9 + 0x10]
0x0001175a      488d7001       lea rsi, [rax + 1]
0x0001175e      49897140       mov qword [r9 + 0x40], rsi
0x00011762      44890481       mov dword [rcx + rax*4], r8d
0x00011766      31c0           xor eax, eax
0x00011768      bf01000000     mov edi, 1
0x0001176d      39c2           cmp edx, eax
0x0001176f      89c1           mov ecx, eax
0x00011771      7716           ja 0x11789
0x00011773      4139c0         cmp r8d, eax
0x00011776      7211           jb 0x11789
0x00011778      4889c6         mov rsi, rax
0x0001177b      4989fb         mov r11, rdi
0x0001177e      48c1fe06       sar rsi, 6
0x00011782      49d3e3         shl r11, cl
0x00011785      4d091cf4       or qword [r12 + rsi*8], r11
0x00011789      4883c001       add rax, 1
0x0001178d      483d00010000   cmp rax, 0x100
0x00011793      75d8           jne 0x1176d
0x00011795      488b442440     mov rax, qword [rsp + 0x40]
0x0001179a      c70000000000   mov dword [rax], 0
0x000117a0      e97bfcffff     jmp 0x11420
0x000117a5      488b5c2418     mov rbx, qword [rsp + 0x18]
0x000117aa      4889c2         mov rdx, rax
0x000117ad      4c89f6         mov rsi, r14
0x000117b0      4c890424       mov qword [rsp], r8
0x000117b4      4989c7         mov r15, rax
0x000117b7      4889df         mov rdi, rbx
0x000117ba      e861e8ffff     call sym.peek_token
0x000117bf      4898           cdqe
0x000117c1      49014648       add qword [r14 + 0x48], rax
0x000117c5      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x000117ca      4c8b0424       mov r8, qword [rsp]
0x000117ce      4c89f9         mov rcx, r15
0x000117d1      4889da         mov rdx, rbx
0x000117d4      4889ee         mov rsi, rbp
0x000117d7      4c89f7         mov rdi, r14
0x000117da      e801f0ffff     call sym.parse_expression
0x000117df      4889442428     mov qword [rsp + 0x28], rax
0x000117e4      e907f1ffff     jmp 0x108f0
0x000117e9      488b442440     mov rax, qword [rsp + 0x40]
0x000117ee      c70002000000   mov dword [rax], 2
0x000117f4      e95ffcffff     jmp 0x11458
0x000117f9      4c89e7         mov rdi, r12
0x000117fc      e87f00ffff     call sym.imp.free
0x00011801      4c89ef         mov rdi, r13
0x00011804      e87700ffff     call sym.imp.free
0x00011809      e93afbffff     jmp 0x11348
0x0001180e      488b442440     mov rax, qword [rsp + 0x40]
0x00011813      48c744242800.  mov qword [rsp + 0x28], 0
0x0001181c      c70006000000   mov dword [rax], 6
0x00011822      e9c9f0ffff     jmp 0x108f0
0x00011827      89d8           mov eax, ebx
0x00011829      f7d8           neg eax
0x0001182b      4898           cdqe
0x0001182d      49014648       add qword [r14 + 0x48], rax
0x00011831      41c6470801     mov byte [r15 + 8], 1
0x00011836      8b8424a00000.  mov eax, dword [rsp + 0xa0]
0x0001183d      e9f3f8ffff     jmp 0x11135
0x00011842      49015e48       add qword [r14 + 0x48], rbx
0x00011846      807c245700     cmp byte [rsp + 0x57], 0
0x0001184b      7414           je 0x11861
0x0001184d      498d542420     lea rdx, [r12 + 0x20]
0x00011852      4c89e0         mov rax, r12
0x00011855      48f710         not qword [rax]
0x00011858      4883c008       add rax, 8
0x0001185c      4839c2         cmp rdx, rax
0x0001185f      75f4           jne 0x11855
0x00011861      488b442410     mov rax, qword [rsp + 0x10]
0x00011866      8b90b4000000   mov edx, dword [rax + 0xb4]
0x0001186c      83fa01         cmp edx, 1
0x0001186f      7e18           jle 0x11889
0x00011871      488b4878       mov rcx, qword [rax + 0x78]
0x00011875      31c0           xor eax, eax
0x00011877      488b3401       mov rsi, qword [rcx + rax]
0x0001187b      49213404       and qword [r12 + rax], rsi
0x0001187f      4883c008       add rax, 8
0x00011883      4883f820       cmp rax, 0x20                           ; "@"
0x00011887      75ee           jne 0x11877
0x00011889      49837d2800     cmp qword [r13 + 0x28], 0
0x0001188e      0f8584000000   jne 0x11918
0x00011894      49837d3000     cmp qword [r13 + 0x30], 0
0x00011899      757d           jne 0x11918
0x0001189b      49837d3800     cmp qword [r13 + 0x38], 0
0x000118a0      7576           jne 0x11918
0x000118a2      49837d4000     cmp qword [r13 + 0x40], 0
0x000118a7      756f           jne 0x11918
0x000118a9      83ea01         sub edx, 1
0x000118ac      7e0e           jle 0x118bc
0x000118ae      49837d4800     cmp qword [r13 + 0x48], 0
0x000118b3      7563           jne 0x11918
0x000118b5      41f6452001     test byte [r13 + 0x20], 1
0x000118ba      755c           jne 0x11918
0x000118bc      4c89ef         mov rdi, r13
0x000118bf      e87c52ffff     call sym.free_charset
0x000118c4      488b442410     mov rax, qword [rsp + 0x10]
0x000118c9      4c8d8424b000.  lea r8, [rsp + 0xb0]
0x000118d1      31c9           xor ecx, ecx
0x000118d3      31d2           xor edx, edx
0x000118d5      c68424b80000.  mov byte [rsp + 0xb8], 3
0x000118dd      4c89a424b000.  mov qword [rsp + 0xb0], r12
0x000118e5      488db0800000.  lea rsi, [rax + 0x80]
0x000118ec      488d7870       lea rdi, [rax + 0x70]
0x000118f0      e8eb67ffff     call sym.create_token_tree.isra.16
0x000118f5      4885c0         test rax, rax
0x000118f8      4889442428     mov qword [rsp + 0x28], rax
0x000118fd      0f8579f0ffff   jne 0x1097c
0x00011903      488b442440     mov rax, qword [rsp + 0x40]
0x00011908      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0001190e      e945fbffff     jmp 0x11458
0x00011913      0f1f440000     nop dword [rax + rax]
0x00011918      488b442410     mov rax, qword [rsp + 0x10]
0x0001191d      4c8dbc24b000.  lea r15, [rsp + 0xb0]
0x00011925      31d2           xor edx, edx
0x00011927      31c9           xor ecx, ecx
0x00011929      4d89f8         mov r8, r15
0x0001192c      8088b0000000.  or byte [rax + 0xb0], 2
0x00011933      488d5870       lea rbx, [rax + 0x70]
0x00011937      488da8800000.  lea rbp, [rax + 0x80]
0x0001193e      c68424b80000.  mov byte [rsp + 0xb8], 6
0x00011946      4c89ac24b000.  mov qword [rsp + 0xb0], r13
0x0001194e      4889df         mov rdi, rbx
0x00011951      4889ee         mov rsi, rbp
0x00011954      e88767ffff     call sym.create_token_tree.isra.16
0x00011959      4889c7         mov rdi, rax
0x0001195c      4889442428     mov qword [rsp + 0x28], rax
0x00011961      498d542420     lea rdx, [r12 + 0x20]
0x00011966      4885ff         test rdi, rdi
0x00011969      4c89e0         mov rax, r12
0x0001196c      7495           je 0x11903
0x0001196e      48833800       cmp qword [rax], 0
0x00011972      0f85a5020000   jne 0x11c1d
0x00011978      4883c008       add rax, 8
0x0001197c      4839c2         cmp rdx, rax
0x0001197f      75ed           jne 0x1196e
0x00011981      4c89e7         mov rdi, r12
0x00011984      e8f7fefeff     call sym.imp.free
0x00011989      e9eeefffff     jmp 0x1097c
0x0001198e      488b542430     mov rdx, qword [rsp + 0x30]
0x00011993      488d7c1201     lea rdi, [rdx + rdx + 1]
0x00011998      488d34bd0000.  lea rsi, [rdi*4]
0x000119a0      48897c2430     mov qword [rsp + 0x30], rdi
0x000119a5      4889c7         mov rdi, rax
0x000119a8      e88301ffff     call sym.imp.realloc
0x000119ad      4885c0         test rax, rax
0x000119b0      0f844dffffff   je 0x11903
0x000119b6      49894500       mov qword [r13], rax
0x000119ba      498b5528       mov rdx, qword [r13 + 0x28]
0x000119be      e9d7faffff     jmp 0x1149a
0x000119c3      4531c0         xor r8d, r8d
0x000119c6      4d85c9         test r9, r9
0x000119c9      7479           je 0x11a44
0x000119cb      89d7           mov edi, edx
0x000119cd      4489442478     mov dword [rsp + 0x78], r8d
0x000119d2      4c894c2470     mov qword [rsp + 0x70], r9
0x000119d7      e89401ffff     call sym.imp.btowc
0x000119dc      89c2           mov edx, eax
0x000119de      8b8424b00000.  mov eax, dword [rsp + 0xb0]
0x000119e5      4c8b4c2470     mov r9, qword [rsp + 0x70]
0x000119ea      448b442478     mov r8d, dword [rsp + 0x78]
0x000119ef      83f803         cmp eax, 3
0x000119f2      0f84fffcffff   je 0x116f7
0x000119f8      85c0           test eax, eax
0x000119fa      0f84f7fcffff   je 0x116f7
0x00011a00      448b8424b800.  mov r8d, dword [rsp + 0xb8]
0x00011a08      e907fdffff     jmp 0x11714
0x00011a0d      4183fa03       cmp r10d, 3
0x00011a11      0f848b020000   je 0x11ca2
0x00011a17      85f6           test esi, esi
0x00011a19      74a8           je 0x119c3
0x00011a1b      4584db         test r11b, r11b
0x00011a1e      75a3           jne 0x119c3
0x00011a20      8b9424a80000.  mov edx, dword [rsp + 0xa8]
0x00011a27      ebd7           jmp 0x11a00
0x00011a29      31d2           xor edx, edx
0x00011a2b      83fe03         cmp esi, 3
0x00011a2e      0f8594fcffff   jne 0x116c8
0x00011a34      488b8424a800.  mov rax, qword [rsp + 0xa8]
0x00011a3c      0fb610         movzx edx, byte [rax]
0x00011a3f      e984fcffff     jmp 0x116c8
0x00011a44      4585d2         test r10d, r10d
0x00011a47      0f84dafcffff   je 0x11727
0x00011a4d      4183fa03       cmp r10d, 3
0x00011a51      75ad           jne 0x11a00
0x00011a53      e9cffcffff     jmp 0x11727
0x00011a58      bb80000000     mov ebx, 0x80
0x00011a5d      41bc02000000   mov r12d, 2
0x00011a63      e80802ffff     call sym.imp.__ctype_b_loc
0x00011a68      4863d3         movsxd rdx, ebx
0x00011a6b      4d63cc         movsxd r9, r12d
0x00011a6e      41b801000000   mov r8d, 1
0x00011a74      4801d2         add rdx, rdx
0x00011a77      480310         add rdx, qword [rax]
0x00011a7a      488b442410     mov rax, qword [rsp + 0x10]
0x00011a7f      4a8d3cc8       lea rdi, [rax + r9*8]
0x00011a83      31c0           xor eax, eax
0x00011a85      eb1b           jmp 0x11aa2
0x00011a87      660f1f840000.  nop word [rax + rax]
0x00011a90      8d3403         lea esi, [rbx + rax]
0x00011a93      83fe5f         cmp esi, 0x5f
0x00011a96      7412           je 0x11aaa
0x00011a98      4883c001       add rax, 1
0x00011a9c      4883f840       cmp rax, 0x40                           ; segment.PHDR
0x00011aa0      7417           je 0x11ab9
0x00011aa2      f6044208       test byte [rdx + rax*2], 8
0x00011aa6      89c1           mov ecx, eax
0x00011aa8      74e6           je 0x11a90
0x00011aaa      4c89c6         mov rsi, r8
0x00011aad      48d3e6         shl rsi, cl
0x00011ab0      4809b7b80000.  or qword [rdi + 0xb8], rsi
0x00011ab7      ebdf           jmp 0x11a98
0x00011ab9      4983c101       add r9, 1
0x00011abd      83c340         add ebx, 0x40                           ; segment.PHDR
0x00011ac0      4883ea80       sub rdx, 0xffffffffffffff80
0x00011ac4      4883c708       add rdi, 8
0x00011ac8      4183f903       cmp r9d, 3
0x00011acc      7eb5           jle 0x11a83
0x00011ace      e93ef4ffff     jmp 0x10f11
0x00011ad3      31db           xor ebx, ebx
0x00011ad5      4531e4         xor r12d, r12d
0x00011ad8      eb89           jmp 0x11a63
0x00011ada      488d0d2f3a00.  lea rcx, obj.__PRETTY_FUNCTION__.7327   ; 0x15510 ; "parse_bracket_exp"
0x00011ae1      488d35583400.  lea rsi, str..._coreutils_8.31_lib_regcomp.c ; 0x14f40 ; "../coreutils-8.31/lib/regcomp.c"
0x00011ae8      488d3da03400.  lea rdi, [0x00014f8f]                   ; "0"
0x00011aef      baed0c0000     mov edx, 0xced
0x00011af4      e807fffeff     call sym.imp.__assert_fail
0x00011af9      488b442440     mov rax, qword [rsp + 0x40]
0x00011afe      c7000b000000   mov dword [rax], 0xb                    ; [0xb:4]=0
0x00011b04      e94ff9ffff     jmp 0x11458
0x00011b09      488bbc24b800.  mov rdi, qword [rsp + 0xb8]
0x00011b11      31c0           xor eax, eax
0x00011b13      4883c9ff       or rcx, 0xffffffffffffffff
0x00011b17      f2ae           repne scasb al, byte [rdi]
0x00011b19      4889c8         mov rax, rcx
0x00011b1c      48f7d0         not rax
0x00011b1f      4883e801       sub rax, 1
0x00011b23      4883f801       cmp rax, 1
0x00011b27      0f868bfbffff   jbe 0x116b8
0x00011b2d      488b442440     mov rax, qword [rsp + 0x40]
0x00011b32      c70003000000   mov dword [rax], 3
0x00011b38      e91bf9ffff     jmp 0x11458
0x00011b3d      488bbc24a800.  mov rdi, qword [rsp + 0xa8]
0x00011b45      31c0           xor eax, eax
0x00011b47      4883c9ff       or rcx, 0xffffffffffffffff
0x00011b4b      f2ae           repne scasb al, byte [rdi]
0x00011b4d      4889c8         mov rax, rcx
0x00011b50      48f7d0         not rax
0x00011b53      4883e801       sub rax, 1
0x00011b57      4883f801       cmp rax, 1
0x00011b5b      0f864dfbffff   jbe 0x116ae
0x00011b61      ebca           jmp 0x11b2d
0x00011b63      488b442448     mov rax, qword [rsp + 0x48]
0x00011b68      4889cf         mov rdi, rcx
0x00011b6b      448984248c00.  mov dword [rsp + 0x8c], r8d
0x00011b73      899424880000.  mov dword [rsp + 0x88], edx
0x00011b7a      4c894c2470     mov qword [rsp + 0x70], r9
0x00011b7f      4801c0         add rax, rax
0x00011b82      4883c001       add rax, 1
0x00011b86      4c8d14850000.  lea r10, [rax*4]
0x00011b8e      4889442448     mov qword [rsp + 0x48], rax
0x00011b93      4c89d6         mov rsi, r10
0x00011b96      4c8994248000.  mov qword [rsp + 0x80], r10
0x00011b9e      e88dfffeff     call sym.imp.realloc
0x00011ba3      4c8b4c2470     mov r9, qword [rsp + 0x70]
0x00011ba8      4c8b94248000.  mov r10, qword [rsp + 0x80]
0x00011bb0      4889442478     mov qword [rsp + 0x78], rax
0x00011bb5      498b7910       mov rdi, qword [r9 + 0x10]
0x00011bb9      4c89d6         mov rsi, r10
0x00011bbc      e86ffffeff     call sym.imp.realloc
0x00011bc1      488b4c2478     mov rcx, qword [rsp + 0x78]
0x00011bc6      4885c9         test rcx, rcx
0x00011bc9      742a           je 0x11bf5
0x00011bcb      4885c0         test rax, rax
0x00011bce      4c8b4c2470     mov r9, qword [rsp + 0x70]
0x00011bd3      8b9424880000.  mov edx, dword [rsp + 0x88]
0x00011bda      448b84248c00.  mov r8d, dword [rsp + 0x8c]
0x00011be2      7411           je 0x11bf5
0x00011be4      49894110       mov qword [r9 + 0x10], rax
0x00011be8      49894908       mov qword [r9 + 8], rcx
0x00011bec      498b4140       mov rax, qword [r9 + 0x40]
0x00011bf0      e95efbffff     jmp 0x11753
0x00011bf5      4889cf         mov rdi, rcx
0x00011bf8      48890424       mov qword [rsp], rax
0x00011bfc      e87ffcfeff     call sym.imp.free
0x00011c01      488b0424       mov rax, qword [rsp]
0x00011c05      4889c7         mov rdi, rax
0x00011c08      e873fcfeff     call sym.imp.free
0x00011c0d      488b442440     mov rax, qword [rsp + 0x40]
0x00011c12      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x00011c18      e93bf8ffff     jmp 0x11458
0x00011c1d      31c9           xor ecx, ecx
0x00011c1f      31d2           xor edx, edx
0x00011c21      4d89f8         mov r8, r15
0x00011c24      4889ee         mov rsi, rbp
0x00011c27      4889df         mov rdi, rbx
0x00011c2a      c68424b80000.  mov byte [rsp + 0xb8], 3
0x00011c32      4c89a424b000.  mov qword [rsp + 0xb0], r12
0x00011c3a      e8a164ffff     call sym.create_token_tree.isra.16
0x00011c3f      4885c0         test rax, rax
0x00011c42      0f84bbfcffff   je 0x11903
0x00011c48      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00011c4d      4c8d8424c000.  lea r8, [rsp + 0xc0]
0x00011c55      4889c2         mov rdx, rax
0x00011c58      4889ee         mov rsi, rbp
0x00011c5b      4889df         mov rdi, rbx
0x00011c5e      c68424c80000.  mov byte [rsp + 0xc8], 0xa
0x00011c66      e87564ffff     call sym.create_token_tree.isra.16
0x00011c6b      4885c0         test rax, rax
0x00011c6e      4889442428     mov qword [rsp + 0x28], rax
0x00011c73      0f8503edffff   jne 0x1097c
0x00011c79      e985fcffff     jmp 0x11903
0x00011c7e      e80dfdfeff     call sym.imp.__stack_chk_fail
0x00011c83      488b442418     mov rax, qword [rsp + 0x18]
0x00011c88      80780802       cmp byte [rax + 8], 2
0x00011c8c      0f85eef1ffff   jne 0x10e80
0x00011c92      488b442440     mov rax, qword [rsp + 0x40]
0x00011c97      c70009000000   mov dword [rax], 9
0x00011c9d      e9e9f1ffff     jmp 0x10e8b
0x00011ca2      488b8424b800.  mov rax, qword [rsp + 0xb8]
0x00011caa      440fb600       movzx r8d, byte [rax]
0x00011cae      e927faffff     jmp 0x116da
0x00011cb3      0f1f00         nop dword [rax]
0x00011cb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- parse_branch:
0x00011cc0      4157           push r15
0x00011cc2      4156           push r14
0x00011cc4      4989cf         mov r15, rcx
0x00011cc7      4155           push r13
0x00011cc9      4154           push r12
0x00011ccb      4989f5         mov r13, rsi
0x00011cce      55             push rbp
0x00011ccf      53             push rbx
0x00011cd0      4c89cb         mov rbx, r9
0x00011cd3      4889d5         mov rbp, rdx
0x00011cd6      4d89c4         mov r12, r8
0x00011cd9      4883ec48       sub rsp, 0x48
0x00011cdd      64488b042528.  mov rax, qword fs:[0x28]
0x00011ce6      4889442438     mov qword [rsp + 0x38], rax
0x00011ceb      31c0           xor eax, eax
0x00011ced      488b06         mov rax, qword [rsi]
0x00011cf0      48893c24       mov qword [rsp], rdi
0x00011cf4      4889442410     mov qword [rsp + 0x10], rax
0x00011cf9      e8e2eaffff     call sym.parse_expression
0x00011cfe      8b13           mov edx, dword [rbx]
0x00011d00      4989c6         mov r14, rax
0x00011d03      85d2           test edx, edx
0x00011d05      7409           je 0x11d10
0x00011d07      4885c0         test rax, rax
0x00011d0a      0f84fa000000   je 0x11e0a
0x00011d10      488d442420     lea rax, [rsp + 0x20]
0x00011d15      4889442418     mov qword [rsp + 0x18], rax
0x00011d1a      660f1f440000   nop word [rax + rax]
0x00011d20      0fb64508       movzx eax, byte [rbp + 8]
0x00011d24      89c2           mov edx, eax
0x00011d26      83e2f7         and edx, 0xfffffff7                     ; 4294967287
0x00011d29      80fa02         cmp dl, 2
0x00011d2c      0f848e000000   je 0x11dc0
0x00011d32      3c09           cmp al, 9
0x00011d34      7509           jne 0x11d3f
0x00011d36      4d85e4         test r12, r12
0x00011d39      0f8581000000   jne 0x11dc0
0x00011d3f      488b3c24       mov rdi, qword [rsp]
0x00011d43      4989d9         mov r9, rbx
0x00011d46      4d89e0         mov r8, r12
0x00011d49      4c89f9         mov rcx, r15
0x00011d4c      4889ea         mov rdx, rbp
0x00011d4f      4c89ee         mov rsi, r13
0x00011d52      e889eaffff     call sym.parse_expression
0x00011d57      4989c1         mov r9, rax
0x00011d5a      8b03           mov eax, dword [rbx]
0x00011d5c      85c0           test eax, eax
0x00011d5e      7409           je 0x11d69
0x00011d60      4d85c9         test r9, r9
0x00011d63      0f848b000000   je 0x11df4
0x00011d69      4d85f6         test r14, r14
0x00011d6c      747a           je 0x11de8
0x00011d6e      4d85c9         test r9, r9
0x00011d71      7475           je 0x11de8
0x00011d73      488b442410     mov rax, qword [rsp + 0x10]
0x00011d78      4c8b442418     mov r8, qword [rsp + 0x18]
0x00011d7d      4c89c9         mov rcx, r9
0x00011d80      4c89f2         mov rdx, r14
0x00011d83      4c894c2408     mov qword [rsp + 8], r9
0x00011d88      c644242810     mov byte [rsp + 0x28], 0x10             ; [0x10:1]=3
0x00011d8d      488db0800000.  lea rsi, [rax + 0x80]
0x00011d94      488d7870       lea rdi, [rax + 0x70]
0x00011d98      e84363ffff     call sym.create_token_tree.isra.16
0x00011d9d      4885c0         test rax, rax
0x00011da0      4c8b4c2408     mov r9, qword [rsp + 8]
0x00011da5      7469           je 0x11e10
0x00011da7      4989c6         mov r14, rax
0x00011daa      0fb64508       movzx eax, byte [rbp + 8]
0x00011dae      89c2           mov edx, eax
0x00011db0      83e2f7         and edx, 0xfffffff7                     ; 4294967287
0x00011db3      80fa02         cmp dl, 2
0x00011db6      0f8576ffffff   jne 0x11d32
0x00011dbc      0f1f4000       nop dword [rax]
0x00011dc0      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00011dc5      6448330c2528.  xor rcx, qword fs:[0x28]
0x00011dce      4c89f0         mov rax, r14
0x00011dd1      756a           jne 0x11e3d
0x00011dd3      4883c448       add rsp, 0x48
0x00011dd7      5b             pop rbx
0x00011dd8      5d             pop rbp
0x00011dd9      415c           pop r12
0x00011ddb      415d           pop r13
0x00011ddd      415e           pop r14
0x00011ddf      415f           pop r15
0x00011de1      c3             ret
0x00011de2      660f1f440000   nop word [rax + rax]
0x00011de8      4d85f6         test r14, r14
0x00011deb      4d0f44f1       cmove r14, r9
0x00011def      e92cffffff     jmp 0x11d20
0x00011df4      4d85f6         test r14, r14
0x00011df7      7411           je 0x11e0a
0x00011df9      488d35a04dff.  lea rsi, sym.free_tree                  ; 0x6ba0 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x00011e00      31d2           xor edx, edx
0x00011e02      4c89f7         mov rdi, r14
0x00011e05      e8f63effff     call sym.postorder
0x00011e0a      4531f6         xor r14d, r14d
0x00011e0d      ebb1           jmp 0x11dc0
0x00011e0f      90             nop
0x00011e10      488d35894dff.  lea rsi, sym.free_tree                  ; 0x6ba0 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x00011e17      4c89cf         mov rdi, r9
0x00011e1a      31d2           xor edx, edx
0x00011e1c      e8df3effff     call sym.postorder
0x00011e21      488d35784dff.  lea rsi, sym.free_tree                  ; 0x6ba0 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x00011e28      4c89f7         mov rdi, r14
0x00011e2b      31d2           xor edx, edx
0x00011e2d      4531f6         xor r14d, r14d
0x00011e30      e8cb3effff     call sym.postorder
0x00011e35      c7030c000000   mov dword [rbx], 0xc                    ; [0xc:4]=0
0x00011e3b      eb83           jmp 0x11dc0
0x00011e3d      e84efbfeff     call sym.imp.__stack_chk_fail
0x00011e42      0f1f4000       nop dword [rax]
0x00011e46      662e0f1f8400.  nop word cs:[rax + rax]
;-- parse_reg_exp:
0x00011e50      4157           push r15
0x00011e52      4156           push r14
0x00011e54      4989ce         mov r14, rcx
0x00011e57      4155           push r13
0x00011e59      4154           push r12
0x00011e5b      4d89cd         mov r13, r9
0x00011e5e      55             push rbp
0x00011e5f      53             push rbx
0x00011e60      4889d5         mov rbp, rdx
0x00011e63      4989fc         mov r12, rdi
0x00011e66      4883ec58       sub rsp, 0x58
0x00011e6a      488b1e         mov rbx, qword [rsi]
0x00011e6d      64488b042528.  mov rax, qword fs:[0x28]
0x00011e76      4889442448     mov qword [rsp + 0x48], rax
0x00011e7b      31c0           xor eax, eax
0x00011e7d      4889742428     mov qword [rsp + 0x28], rsi
0x00011e82      4c89442410     mov qword [rsp + 0x10], r8
0x00011e87      488b83a80000.  mov rax, qword [rbx + 0xa8]
0x00011e8e      4889442420     mov qword [rsp + 0x20], rax
0x00011e93      e828feffff     call sym.parse_branch
0x00011e98      418b5500       mov edx, dword [r13]
0x00011e9c      4989c7         mov r15, rax
0x00011e9f      85d2           test edx, edx
0x00011ea1      7409           je 0x11eac
0x00011ea3      4885c0         test rax, rax
0x00011ea6      0f84e6000000   je 0x11f92
0x00011eac      488d442430     lea rax, [rsp + 0x30]
0x00011eb1      4889442408     mov qword [rsp + 8], rax
0x00011eb6      e989000000     jmp 0x11f44
0x00011ebb      0f1f440000     nop dword [rax + rax]
0x00011ec0      3c09           cmp al, 9
0x00011ec2      750c           jne 0x11ed0
0x00011ec4      48837c241000   cmp qword [rsp + 0x10], 0
0x00011eca      0f85a8000000   jne 0x11f78
0x00011ed0      488b83a80000.  mov rax, qword [rbx + 0xa8]
0x00011ed7      4c8b442410     mov r8, qword [rsp + 0x10]
0x00011edc      4c89f1         mov rcx, r14
0x00011edf      488b742428     mov rsi, qword [rsp + 0x28]
0x00011ee4      4d89e9         mov r9, r13
0x00011ee7      4889ea         mov rdx, rbp
0x00011eea      4c89e7         mov rdi, r12
0x00011eed      4889442418     mov qword [rsp + 0x18], rax
0x00011ef2      488b442420     mov rax, qword [rsp + 0x20]
0x00011ef7      488983a80000.  mov qword [rbx + 0xa8], rax
0x00011efe      e8bdfdffff     call sym.parse_branch
0x00011f03      4889c1         mov rcx, rax
0x00011f06      418b4500       mov eax, dword [r13]
0x00011f0a      85c0           test eax, eax
0x00011f0c      7405           je 0x11f13
0x00011f0e      4885c9         test rcx, rcx
0x00011f11      7469           je 0x11f7c
0x00011f13      488b442418     mov rax, qword [rsp + 0x18]
0x00011f18      480983a80000.  or qword [rbx + 0xa8], rax
0x00011f1f      4c8b442408     mov r8, qword [rsp + 8]
0x00011f24      488db3800000.  lea rsi, [rbx + 0x80]
0x00011f2b      488d7b70       lea rdi, [rbx + 0x70]
0x00011f2f      4c89fa         mov rdx, r15
0x00011f32      c64424380a     mov byte [rsp + 0x38], 0xa
0x00011f37      e8a461ffff     call sym.create_token_tree.isra.16
0x00011f3c      4885c0         test rax, rax
0x00011f3f      4989c7         mov r15, rax
0x00011f42      747c           je 0x11fc0
0x00011f44      807d080a       cmp byte [rbp + 8], 0xa
0x00011f48      754e           jne 0x11f98
0x00011f4a      4c89f2         mov rdx, r14
0x00011f4d      4c89e6         mov rsi, r12
0x00011f50      4889ef         mov rdi, rbp
0x00011f53      4881ca000080.  or rdx, 0x800000
0x00011f5a      e8c1e0ffff     call sym.peek_token
0x00011f5f      4898           cdqe
0x00011f61      4901442448     add qword [r12 + 0x48], rax
0x00011f66      0fb64508       movzx eax, byte [rbp + 8]
0x00011f6a      89c2           mov edx, eax
0x00011f6c      83e2f7         and edx, 0xfffffff7                     ; 4294967287
0x00011f6f      80fa02         cmp dl, 2
0x00011f72      0f8548ffffff   jne 0x11ec0
0x00011f78      31c9           xor ecx, ecx
0x00011f7a      eba3           jmp 0x11f1f
0x00011f7c      4d85ff         test r15, r15
0x00011f7f      7411           je 0x11f92
0x00011f81      488d35184cff.  lea rsi, sym.free_tree                  ; 0x6ba0 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x00011f88      31d2           xor edx, edx
0x00011f8a      4c89ff         mov rdi, r15
0x00011f8d      e86e3dffff     call sym.postorder
0x00011f92      4531ff         xor r15d, r15d
0x00011f95      0f1f00         nop dword [rax]
0x00011f98      488b4c2448     mov rcx, qword [rsp + 0x48]
0x00011f9d      6448330c2528.  xor rcx, qword fs:[0x28]
0x00011fa6      4c89f8         mov rax, r15
0x00011fa9      751f           jne 0x11fca
0x00011fab      4883c458       add rsp, 0x58
0x00011faf      5b             pop rbx
0x00011fb0      5d             pop rbp
0x00011fb1      415c           pop r12
0x00011fb3      415d           pop r13
0x00011fb5      415e           pop r14
0x00011fb7      415f           pop r15
0x00011fb9      c3             ret
0x00011fba      660f1f440000   nop word [rax + rax]
0x00011fc0      41c745000c00.  mov dword [r13], 0xc                    ; [0xc:4]=0
0x00011fc8      ebce           jmp 0x11f98
0x00011fca      e8c1f9feff     call sym.imp.__stack_chk_fail
0x00011fcf      90             nop
;-- re_compile_internal:
0x00011fd0      4157           push r15
0x00011fd2      4156           push r14
0x00011fd4      4155           push r13
0x00011fd6      4154           push r12
0x00011fd8      55             push rbp
0x00011fd9      53             push rbx
0x00011fda      4881ec280100.  sub rsp, 0x128
0x00011fe1      48894f18       mov qword [rdi + 0x18], rcx
0x00011fe5      48c747100000.  mov qword [rdi + 0x10], 0
0x00011fed      64488b042528.  mov rax, qword fs:[0x28]
0x00011ff6      488984241801.  mov qword [rsp + 0x118], rax
0x00011ffe      31c0           xor eax, eax
0x00012000      0fb64738       movzx eax, byte [rdi + 0x38]
0x00012004      48897c2408     mov qword [rsp + 8], rdi
0x00012009      4889742410     mov qword [rsp + 0x10], rsi
0x0001200e      48891424       mov qword [rsp], rdx
0x00012012      48894c2418     mov qword [rsp + 0x18], rcx
0x00012017      c744244c0000.  mov dword [rsp + 0x4c], 0
0x0001201f      48c747300000.  mov qword [rdi + 0x30], 0
0x00012027      488b1f         mov rbx, qword [rdi]
0x0001202a      88442420       mov byte [rsp + 0x20], al
0x0001202e      83e090         and eax, 0xffffff90                     ; 4294967184
0x00012031      48817f08e700.  cmp qword [rdi + 8], 0xe7
0x00012039      884738         mov byte [rdi + 0x38], al
0x0001203c      0f86f40d0000   jbe 0x12e36
0x00012042      488d7b08       lea rdi, [rbx + 8]
0x00012046      488b442408     mov rax, qword [rsp + 8]
0x0001204b      4889d9         mov rcx, rbx
0x0001204e      4883e7f8       and rdi, 0xfffffffffffffff8
0x00012052      4829f9         sub rcx, rdi
0x00012055      48c74010e800.  mov qword [rax + 0x10], 0xe8            ; [0xe8:8]=0x600000001
0x0001205d      31c0           xor eax, eax
0x0001205f      81c1e8000000   add ecx, 0xe8
0x00012065      48c703000000.  mov qword [rbx], 0
0x0001206c      48c783e00000.  mov qword [rbx + 0xe0], 0
0x00012077      c1e903         shr ecx, 3
0x0001207a      f348ab         rep stosq qword [rdi], rax
0x0001207d      48b854555555.  movabs rax, 0x555555555555554
0x00012087      c78380000000.  mov dword [rbx + 0x80], 0xf             ; [0xf:4]=0x3e000300
0x00012091      48390424       cmp qword [rsp], rax
0x00012095      0f873b060000   ja 0x126d6
0x0001209b      4c8b3424       mov r14, qword [rsp]
0x0001209f      498d4601       lea rax, [r14 + 1]
0x000120a3      4889c7         mov rdi, rax
0x000120a6      48894308       mov qword [rbx + 8], rax
0x000120aa      4889442428     mov qword [rsp + 0x28], rax
0x000120af      48c1e704       shl rdi, 4
0x000120b3      e808fafeff     call sym.imp.malloc
0x000120b8      4d85f6         test r14, r14
0x000120bb      488903         mov qword [rbx], rax
0x000120be      0f84e10c0000   je 0x12da5
0x000120c4      be01000000     mov esi, 1
0x000120c9      0f1f80000000.  nop dword [rax]
0x000120d0      4801f6         add rsi, rsi
0x000120d3      48393424       cmp qword [rsp], rsi
0x000120d7      73f7           jae 0x120d0
0x000120d9      488d6eff       lea rbp, [rsi - 1]
0x000120dd      bf18000000     mov edi, 0x18
0x000120e2      e889f9feff     call sym.imp.calloc
0x000120e7      4889ab880000.  mov qword [rbx + 0x88], rbp
0x000120ee      48894340       mov qword [rbx + 0x40], rax
0x000120f2      e879f8feff     call sym.imp.__ctype_get_mb_cur_max
0x000120f7      bf0e000000     mov edi, 0xe
0x000120fc      8983b4000000   mov dword [rbx + 0xb4], eax
0x00012102      e8e9f9feff     call sym.imp.nl_langinfo
0x00012107      0fb610         movzx edx, byte [rax]
0x0001210a      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x0001210d      80fa55         cmp dl, 0x55
0x00012110      754e           jne 0x12160
0x00012112      0fb65001       movzx edx, byte [rax + 1]
0x00012116      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00012119      80fa54         cmp dl, 0x54
0x0001211c      7542           jne 0x12160
0x0001211e      0fb65002       movzx edx, byte [rax + 2]
0x00012122      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00012125      80fa46         cmp dl, 0x46
0x00012128      7536           jne 0x12160
0x0001212a      31d2           xor edx, edx
0x0001212c      8078032d       cmp byte [rax + 3], 0x2d
0x00012130      488d3daf2e00.  lea rdi, [0x00014fe6]                   ; "8"
0x00012137      b902000000     mov ecx, 2
0x0001213c      0f94c2         sete dl
0x0001213f      488d741003     lea rsi, [rax + rdx + 3]
0x00012144      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00012146      0f97c0         seta al
0x00012149      1c00           sbb al, 0
0x0001214b      84c0           test al, al
0x0001214d      7511           jne 0x12160
0x0001214f      808bb0000000.  or byte [rbx + 0xb0], 4
0x00012156      662e0f1f8400.  nop word cs:[rax + rax]
0x00012160      0fb683b00000.  movzx eax, byte [rbx + 0xb0]
0x00012167      89c2           mov edx, eax
0x00012169      83e2f7         and edx, 0xfffffff7                     ; 4294967287
0x0001216c      83bbb4000000.  cmp dword [rbx + 0xb4], 1
0x00012173      8893b0000000   mov byte [rbx + 0xb0], dl
0x00012179      7e13           jle 0x1218e
0x0001217b      a804           test al, 4
0x0001217d      0f8460050000   je 0x126e3
0x00012183      488d05b63300.  lea rax, obj.utf8_sb_map                ; 0x15540
0x0001218a      48894378       mov qword [rbx + 0x78], rax
0x0001218e      48833b00       cmp qword [rbx], 0
0x00012192      0f843e050000   je 0x126d6
0x00012198      48837b4000     cmp qword [rbx + 0x40], 0
0x0001219d      0f8433050000   je 0x126d6
0x000121a3      488b442418     mov rax, qword [rsp + 0x18]
0x000121a8      488dac248000.  lea rbp, [rsp + 0x80]
0x000121b0      b912000000     mov ecx, 0x12
0x000121b5      c744244c0000.  mov dword [rsp + 0x4c], 0
0x000121bd      4c8d4508       lea r8, [rbp + 8]
0x000121c1      2500004000     and eax, 0x400000
0x000121c6      4889442420     mov qword [rsp + 0x20], rax
0x000121cb      488b442408     mov rax, qword [rsp + 8]
0x000121d0      0f95c2         setne dl
0x000121d3      4c89c7         mov rdi, r8
0x000121d6      488b7028       mov rsi, qword [rax + 0x28]
0x000121da      31c0           xor eax, eax
0x000121dc      f348ab         rep stosq qword [rdi], rax
0x000121df      488b442410     mov rax, qword [rsp + 0x10]
0x000121e4      488b3c24       mov rdi, qword [rsp]
0x000121e8      4885f6         test rsi, rsi
0x000121eb      889424080100.  mov byte [rsp + 0x108], dl
0x000121f2      8b8bb4000000   mov ecx, dword [rbx + 0xb4]
0x000121f8      410f95c4       setne r12b
0x000121fc      4889b424f800.  mov qword [rsp + 0xf8], rsi
0x00012204      488984248000.  mov qword [rsp + 0x80], rax
0x0001220c      0fb683b00000.  movzx eax, byte [rbx + 0xb0]
0x00012213      4109d4         or r12d, edx
0x00012216      4889bc24d800.  mov qword [rsp + 0xd8], rdi
0x0001221e      4889bc24d000.  mov qword [rsp + 0xd0], rdi
0x00012226      4489e6         mov esi, r12d
0x00012229      4488a4240b01.  mov byte [rsp + 0x10b], r12b
0x00012231      898c24100100.  mov dword [rsp + 0x110], ecx
0x00012238      4889bc24e800.  mov qword [rsp + 0xe8], rdi
0x00012240      4889bc24e000.  mov qword [rsp + 0xe0], rdi
0x00012248      89c2           mov edx, eax
0x0001224a      c0e803         shr al, 3
0x0001224d      c0ea02         shr dl, 2
0x00012250      83e001         and eax, 1
0x00012253      83e201         and edx, 1
0x00012256      4885ff         test rdi, rdi
0x00012259      8884240a0100.  mov byte [rsp + 0x10a], al
0x00012260      889424090100.  mov byte [rsp + 0x109], dl
0x00012267      0f8538040000   jne 0x126a5
0x0001226d      4084f6         test sil, sil
0x00012270      740d           je 0x1227f
0x00012272      488b84248800.  mov rax, qword [rsp + 0x88]
0x0001227a      4889442410     mov qword [rsp + 0x10], rax
0x0001227f      48837c242000   cmp qword [rsp + 0x20], 0
0x00012285      488b442410     mov rax, qword [rsp + 0x10]
0x0001228a      488984248800.  mov qword [rsp + 0x88], rax
0x00012292      0f84fd000000   je 0x12395
0x00012298      83f901         cmp ecx, 1
0x0001229b      0f8eec0b0000   jle 0x12e8d
0x000122a1      4889ef         mov rdi, rbp
0x000122a4      e89740ffff     call sym.build_wcs_upper_buffer
0x000122a9      85c0           test eax, eax
0x000122ab      7543           jne 0x122f0
0x000122ad      488b0424       mov rax, qword [rsp]
0x000122b1      483b8424b800.  cmp rax, qword [rsp + 0xb8]
0x000122b9      0f8eb10b0000   jle 0x12e70
0x000122bf      486383b40000.  movsxd rax, dword [rbx + 0xb4]
0x000122c6      488bb424c000.  mov rsi, qword [rsp + 0xc0]
0x000122ce      48038424b000.  add rax, qword [rsp + 0xb0]
0x000122d6      4839c6         cmp rsi, rax
0x000122d9      0f8f910b0000   jg 0x12e70
0x000122df      4801f6         add rsi, rsi
0x000122e2      4889ef         mov rdi, rbp
0x000122e5      e8e63affff     call sym.re_string_realloc_buffers
0x000122ea      85c0           test eax, eax
0x000122ec      74b3           je 0x122a1
0x000122ee      6690           nop
0x000122f0      8944244c       mov dword [rsp + 0x4c], eax
0x000122f4      488b442408     mov rax, qword [rsp + 8]
0x000122f9      4c8b28         mov r13, qword [rax]
0x000122fc      498b7d70       mov rdi, qword [r13 + 0x70]
0x00012300      4885ff         test rdi, rdi
0x00012303      7413           je 0x12318
0x00012305      0f1f00         nop dword [rax]
0x00012308      4c8b27         mov r12, qword [rdi]
0x0001230b      e870f5feff     call sym.imp.free
0x00012310      4d85e4         test r12, r12
0x00012313      4c89e7         mov rdi, r12
0x00012316      75f0           jne 0x12308
0x00012318      498b7d20       mov rdi, qword [r13 + 0x20]
0x0001231c      49c745700000.  mov qword [r13 + 0x70], 0
0x00012324      41c785800000.  mov dword [r13 + 0x80], 0xf             ; [0xf:4]=0x3e000300
0x0001232f      49c745680000.  mov qword [r13 + 0x68], 0
0x00012337      e844f5feff     call sym.imp.free
0x0001233c      49c745200000.  mov qword [r13 + 0x20], 0
0x00012344      4889ef         mov rdi, rbp
0x00012347      e8c44dffff     call sym.re_string_destruct
0x0001234c      4889df         mov rdi, rbx
0x0001234f      e8fc4dffff     call sym.free_dfa_content
0x00012354      488b442408     mov rax, qword [rsp + 8]
0x00012359      48c700000000.  mov qword [rax], 0
0x00012360      48c740080000.  mov qword [rax + 8], 0
0x00012368      8b44244c       mov eax, dword [rsp + 0x4c]
0x0001236c      488b9c241801.  mov rbx, qword [rsp + 0x118]
0x00012374      6448331c2528.  xor rbx, qword fs:[0x28]
0x0001237d      0f853d0d0000   jne 0x130c0
0x00012383      4881c4280100.  add rsp, 0x128
0x0001238a      5b             pop rbx
0x0001238b      5d             pop rbp
0x0001238c      415c           pop r12
0x0001238e      415d           pop r13
0x00012390      415e           pop r14
0x00012392      415f           pop r15
0x00012394      c3             ret
0x00012395      83f901         cmp ecx, 1
0x00012398      0f8fac090000   jg 0x12d4a
0x0001239e      4584e4         test r12b, r12b
0x000123a1      488bb424c000.  mov rsi, qword [rsp + 0xc0]
0x000123a9      0f8415060000   je 0x129c4
0x000123af      4839b424d800.  cmp qword [rsp + 0xd8], rsi
0x000123b7      488b8424b000.  mov rax, qword [rsp + 0xb0]
0x000123bf      480f4eb424d8.  cmovle rsi, qword [rsp + 0xd8]
0x000123c8      4839c6         cmp rsi, rax
0x000123cb      7f10           jg 0x123dd
0x000123cd      eb41           jmp 0x12410
0x000123cf      90             nop
0x000123d0      488b94248800.  mov rdx, qword [rsp + 0x88]
0x000123d8      4889542410     mov qword [rsp + 0x10], rdx
0x000123dd      488b94248000.  mov rdx, qword [rsp + 0x80]
0x000123e5      488b8c24f800.  mov rcx, qword [rsp + 0xf8]
0x000123ed      4801c2         add rdx, rax
0x000123f0      48039424a800.  add rdx, qword [rsp + 0xa8]
0x000123f8      0fb612         movzx edx, byte [rdx]
0x000123fb      0fb61411       movzx edx, byte [rcx + rdx]
0x000123ff      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00012404      881401         mov byte [rcx + rax], dl
0x00012407      4883c001       add rax, 1
0x0001240b      4839c6         cmp rsi, rax
0x0001240e      75c0           jne 0x123d0
0x00012410      48898424b000.  mov qword [rsp + 0xb0], rax
0x00012418      48898424b800.  mov qword [rsp + 0xb8], rax
0x00012420      c744244c0000.  mov dword [rsp + 0x4c], 0
0x00012428      4c8b642408     mov r12, qword [rsp + 8]
0x0001242d      4c8b742418     mov r14, qword [rsp + 0x18]
0x00012432      4c8d6c2450     lea r13, [rsp + 0x50]
0x00012437      4889ee         mov rsi, rbp
0x0001243a      4c89ef         mov rdi, r13
0x0001243d      4c896c2428     mov qword [rsp + 0x28], r13
0x00012442      4d8b3c24       mov r15, qword [r12]
0x00012446      4c89f2         mov rdx, r14
0x00012449      49c744243000.  mov qword [r12 + 0x30], 0
0x00012452      4881ca000080.  or rdx, 0x800000
0x00012459      4d89b7d80000.  mov qword [r15 + 0xd8], r14
0x00012460      e8bbdbffff     call sym.peek_token
0x00012465      4c8d4c244c     lea r9, [rsp + 0x4c]
0x0001246a      4531c0         xor r8d, r8d
0x0001246d      4c89f1         mov rcx, r14
0x00012470      4c89ea         mov rdx, r13
0x00012473      4c89e6         mov rsi, r12
0x00012476      4889ef         mov rdi, rbp
0x00012479      4898           cdqe
0x0001247b      48018424c800.  add qword [rsp + 0xc8], rax
0x00012483      e8c8f9ffff     call sym.parse_reg_exp
0x00012488      8b4c244c       mov ecx, dword [rsp + 0x4c]
0x0001248c      85c9           test ecx, ecx
0x0001248e      0f85230a0000   jne 0x12eb7
0x00012494      4d8d6f70       lea r13, [r15 + 0x70]
0x00012498      4c8d642460     lea r12, [rsp + 0x60]
0x0001249d      4983ef80       sub r15, 0xffffffffffffff80
0x000124a1      31d2           xor edx, edx
0x000124a3      31c9           xor ecx, ecx
0x000124a5      4c89fe         mov rsi, r15
0x000124a8      4d89e0         mov r8, r12
0x000124ab      4c89ef         mov rdi, r13
0x000124ae      48890424       mov qword [rsp], rax
0x000124b2      c644246802     mov byte [rsp + 0x68], 2
0x000124b7      e8245cffff     call sym.create_token_tree.isra.16
0x000124bc      4c8b0c24       mov r9, qword [rsp]
0x000124c0      4989c3         mov r11, rax
0x000124c3      4889c2         mov rdx, rax
0x000124c6      4d85c9         test r9, r9
0x000124c9      7427           je 0x124f2
0x000124cb      4c89d9         mov rcx, r11
0x000124ce      4c89ca         mov rdx, r9
0x000124d1      4d89e0         mov r8, r12
0x000124d4      4c89fe         mov rsi, r15
0x000124d7      4c89ef         mov rdi, r13
0x000124da      4c891c24       mov qword [rsp], r11
0x000124de      c644246810     mov byte [rsp + 0x68], 0x10             ; [0x10:1]=3
0x000124e3      e8f85bffff     call sym.create_token_tree.isra.16
0x000124e8      4c8b1c24       mov r11, qword [rsp]
0x000124ec      4c89da         mov rdx, r11
0x000124ef      4989c3         mov r11, rax
0x000124f2      4885d2         test rdx, rdx
0x000124f5      488b4c2408     mov rcx, qword [rsp + 8]
0x000124fa      0f94c2         sete dl
0x000124fd      4d85db         test r11, r11
0x00012500      0f94c0         sete al
0x00012503      08c2           or dl, al
0x00012505      4c8b29         mov r13, qword [rcx]
0x00012508      0f8594090000   jne 0x12ea2
0x0001250e      4d8b7d08       mov r15, qword [r13 + 8]
0x00012512      4c895b68       mov qword [rbx + 0x68], r11
0x00012516      4a8d0cfd0000.  lea rcx, [r15*8]
0x0001251e      4f8d3c7f       lea r15, [r15 + r15*2]
0x00012522      4889cf         mov rdi, rcx
0x00012525      48890c24       mov qword [rsp], rcx
0x00012529      49c1e703       shl r15, 3
0x0001252d      e88ef5feff     call sym.imp.malloc
0x00012532      488b0c24       mov rcx, qword [rsp]
0x00012536      49894518       mov qword [r13 + 0x18], rax
0x0001253a      4889442418     mov qword [rsp + 0x18], rax
0x0001253f      4889cf         mov rdi, rcx
0x00012542      e879f5feff     call sym.imp.malloc
0x00012547      4c89ff         mov rdi, r15
0x0001254a      49894520       mov qword [r13 + 0x20], rax
0x0001254e      4889442410     mov qword [rsp + 0x10], rax
0x00012553      e868f5feff     call sym.imp.malloc
0x00012558      4c89ff         mov rdi, r15
0x0001255b      49894528       mov qword [r13 + 0x28], rax
0x0001255f      48890424       mov qword [rsp], rax
0x00012563      e858f5feff     call sym.imp.malloc
0x00012568      488b542418     mov rdx, qword [rsp + 0x18]
0x0001256d      49894530       mov qword [r13 + 0x30], rax
0x00012571      488b3424       mov rsi, qword [rsp]
0x00012575      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0001257a      4885d2         test rdx, rdx
0x0001257d      0f84ba070000   je 0x12d3d
0x00012583      4885c9         test rcx, rcx
0x00012586      0f84b1070000   je 0x12d3d
0x0001258c      4885f6         test rsi, rsi
0x0001258f      0f84a8070000   je 0x12d3d
0x00012595      4885c0         test rax, rax
0x00012598      0f849f070000   je 0x12d3d
0x0001259e      488b442408     mov rax, qword [rsp + 8]
0x000125a3      4c8b7830       mov r15, qword [rax + 0x30]
0x000125a7      4a8d3cfd0000.  lea rdi, [r15*8]
0x000125af      e80cf5feff     call sym.imp.malloc
0x000125b4      4885c0         test rax, rax
0x000125b7      498985e00000.  mov qword [r13 + 0xe0], rax
0x000125be      746d           je 0x1262d
0x000125c0      4d85ff         test r15, r15
0x000125c3      7418           je 0x125dd
0x000125c5      31d2           xor edx, edx
0x000125c7      660f1f840000.  nop word [rax + rax]
0x000125d0      488914d0       mov qword [rax + rdx*8], rdx
0x000125d4      4883c201       add rdx, 1
0x000125d8      4c39fa         cmp rdx, r15
0x000125db      75f3           jne 0x125d0
0x000125dd      498b7d68       mov rdi, qword [r13 + 0x68]
0x000125e1      488d35f84fff.  lea rsi, sym.optimize_subexps           ; 0x75e0
0x000125e8      4c89ea         mov rdx, r13
0x000125eb      e88037ffff     call sym.preorder
0x000125f0      488b442408     mov rax, qword [rsp + 8]
0x000125f5      498bbde00000.  mov rdi, qword [r13 + 0xe0]
0x000125fc      488b5030       mov rdx, qword [rax + 0x30]
0x00012600      4885d2         test rdx, rdx
0x00012603      0f84eb080000   je 0x12ef4
0x00012609      488b07         mov rax, qword [rdi]
0x0001260c      4885c0         test rax, rax
0x0001260f      740d           je 0x1261e
0x00012611      eb1a           jmp 0x1262d
0x00012613      0f1f440000     nop dword [rax + rax]
0x00012618      483904c7       cmp qword [rdi + rax*8], rax
0x0001261c      750f           jne 0x1262d
0x0001261e      4883c001       add rax, 1
0x00012622      4839c2         cmp rdx, rax
0x00012625      77f1           ja 0x12618
0x00012627      0f84c7080000   je 0x12ef4
0x0001262d      498b7d68       mov rdi, qword [r13 + 0x68]
0x00012631      488b542408     mov rdx, qword [rsp + 8]
0x00012636      488d35a35eff.  lea rsi, sym.lower_subexps              ; 0x84e0 ; "USH\x89\xfdH\x89\xf3H\x83\xec\x18H\x8bV\bdH\x8b\x04%("
0x0001263d      e8be36ffff     call sym.postorder
0x00012642      85c0           test eax, eax
0x00012644      0f85a6fcffff   jne 0x122f0
0x0001264a      498b7d68       mov rdi, qword [r13 + 0x68]
0x0001264e      488d35fb83ff.  lea rsi, sym.calc_first                 ; 0xaa50
0x00012655      4c89ea         mov rdx, r13
0x00012658      e8a336ffff     call sym.postorder
0x0001265d      85c0           test eax, eax
0x0001265f      0f858bfcffff   jne 0x122f0
0x00012665      498b7d68       mov rdi, qword [r13 + 0x68]
0x00012669      488d350050ff.  lea rsi, sym.calc_next                  ; 0x7670
0x00012670      4c89ea         mov rdx, r13
0x00012673      e8f836ffff     call sym.preorder
0x00012678      498b5568       mov rdx, qword [r13 + 0x68]
0x0001267c      488d35c52d00.  lea rsi, [0x00015448]
0x00012683      0f1f440000     nop dword [rax + rax]
0x00012688      0fb64a30       movzx ecx, byte [rdx + 0x30]
0x0001268c      488b7a38       mov rdi, qword [rdx + 0x38]
0x00012690      80f910         cmp cl, 0x10
0x00012693      0f87cf000000   ja 0x12768
0x00012699      0fb6c1         movzx eax, cl
0x0001269c      48630486       movsxd rax, dword [rsi + rax*4]
0x000126a0      4801f0         add rax, rsi
0x000126a3      ffe0           jmp rax
0x000126a5      488b742428     mov rsi, qword [rsp + 0x28]
0x000126aa      4889ef         mov rdi, rbp
0x000126ad      e81e37ffff     call sym.re_string_realloc_buffers
0x000126b2      85c0           test eax, eax
0x000126b4      0f8536fcffff   jne 0x122f0
0x000126ba      0fb6b4240b01.  movzx esi, byte [rsp + 0x10b]
0x000126c2      8b8bb4000000   mov ecx, dword [rbx + 0xb4]
0x000126c8      4084f6         test sil, sil
0x000126cb      0f84aefbffff   je 0x1227f
0x000126d1      e99cfbffff     jmp 0x12272
0x000126d6      c744244c0c00.  mov dword [rsp + 0x4c], 0xc             ; [0xc:4]=0
0x000126de      e969fcffff     jmp 0x1234c
0x000126e3      be01000000     mov esi, 1
0x000126e8      bf20000000     mov edi, 0x20                           ; "@"
0x000126ed      e87ef3feff     call sym.imp.calloc
0x000126f2      4885c0         test rax, rax
0x000126f5      48894378       mov qword [rbx + 0x78], rax
0x000126f9      74db           je 0x126d6
0x000126fb      4531e4         xor r12d, r12d
0x000126fe      31ed           xor ebp, ebp
0x00012700      41bd01000000   mov r13d, 1
0x00012706      4531ff         xor r15d, r15d
0x00012709      0f1f80000000.  nop dword [rax]
0x00012710      468d743d00     lea r14d, [rbp + r15]
0x00012715      4489f7         mov edi, r14d
0x00012718      e853f4feff     call sym.imp.btowc
0x0001271d      83f8ff         cmp eax, 0xffffffff
0x00012720      7413           je 0x12735
0x00012722      488b7378       mov rsi, qword [rbx + 0x78]
0x00012726      4c89ef         mov rdi, r13
0x00012729      4489f9         mov ecx, r15d
0x0001272c      48d3e7         shl rdi, cl
0x0001272f      4c01e6         add rsi, r12
0x00012732      48093e         or qword [rsi], rdi
0x00012735      41f7c680ffff.  test r14d, 0xffffff80                   ; 4294967168
0x0001273c      750c           jne 0x1274a
0x0001273e      4439f0         cmp eax, r14d
0x00012741      7407           je 0x1274a
0x00012743      808bb0000000.  or byte [rbx + 0xb0], 8
0x0001274a      4983c701       add r15, 1
0x0001274e      4983ff40       cmp r15, 0x40                           ; segment.PHDR
0x00012752      75bc           jne 0x12710
0x00012754      83c540         add ebp, 0x40                           ; segment.PHDR
0x00012757      4983c408       add r12, 8
0x0001275b      81fd00010000   cmp ebp, 0x100
0x00012761      75a3           jne 0x12706
0x00012763      e926faffff     jmp 0x1218e
0x00012768      83e108         and ecx, 8
0x0001276b      0f8511090000   jne 0x13082
0x00012771      488b4220       mov rax, qword [rdx + 0x20]
0x00012775      488b4838       mov rcx, qword [rax + 0x38]
0x00012779      498b4518       mov rax, qword [r13 + 0x18]
0x0001277d      48890cf8       mov qword [rax + rdi*8], rcx
0x00012781      4c8b7a08       mov r15, qword [rdx + 8]
0x00012785      31ff           xor edi, edi
0x00012787      4d85ff         test r15, r15
0x0001278a      740f           je 0x1279b
0x0001278c      4c89fa         mov rdx, r15
0x0001278f      e9f4feffff     jmp 0x12688
0x00012794      0f1f4000       nop dword [rax]
0x00012798      4889c2         mov rdx, rax
0x0001279b      4c8b7a10       mov r15, qword [rdx + 0x10]
0x0001279f      4d85ff         test r15, r15
0x000127a2      0f94c1         sete cl
0x000127a5      4939ff         cmp r15, rdi
0x000127a8      0f94c0         sete al
0x000127ab      08c1           or cl, al
0x000127ad      884c2410       mov byte [rsp + 0x10], cl
0x000127b1      74d9           je 0x1278c
0x000127b3      488b02         mov rax, qword [rdx]
0x000127b6      4889d7         mov rdi, rdx
0x000127b9      4885c0         test rax, rax
0x000127bc      75da           jne 0x12798
0x000127be      4531f6         xor r14d, r14d
0x000127c1      4531ff         xor r15d, r15d
0x000127c4      0f1f4000       nop dword [rax]
0x000127c8      498b5510       mov rdx, qword [r13 + 0x10]
0x000127cc      4c39fa         cmp rdx, r15
0x000127cf      7425           je 0x127f6
0x000127d1      4f8d147f       lea r10, [r15 + r15*2]
0x000127d5      498b4530       mov rax, qword [r13 + 0x30]
0x000127d9      49c1e203       shl r10, 3
0x000127dd      4a837c100800   cmp qword [rax + r10 + 8], 0
0x000127e3      0f84ff010000   je 0x129e8
0x000127e9      498b5510       mov rdx, qword [r13 + 0x10]
0x000127ed      4983c701       add r15, 1
0x000127f1      4c39fa         cmp rdx, r15
0x000127f4      75db           jne 0x127d1
0x000127f6      4584f6         test r14b, r14b
0x000127f9      0f843f020000   je 0x12a3e
0x000127ff      4531f6         xor r14d, r14d
0x00012802      4531ff         xor r15d, r15d
0x00012805      ebca           jmp 0x127d1
0x00012807      41808db00000.  or byte [r13 + 0xb0], 1
0x0001280f      4c8b7a08       mov r15, qword [rdx + 8]
0x00012813      4d85ff         test r15, r15
0x00012816      0f840d060000   je 0x12e29
0x0001281c      498b4718       mov rax, qword [r15 + 0x18]
0x00012820      488b4838       mov rcx, qword [rax + 0x38]
0x00012824      488b4210       mov rax, qword [rdx + 0x10]
0x00012828      4885c0         test rax, rax
0x0001282b      0f84eb050000   je 0x12e1c
0x00012831      488b4018       mov rax, qword [rax + 0x18]
0x00012835      4c8b4838       mov r9, qword [rax + 0x38]
0x00012839      4885c9         test rcx, rcx
0x0001283c      0f885f080000   js 0x130a1
0x00012842      4d85c9         test r9, r9
0x00012845      0f8818080000   js 0x13063
0x0001284b      498b4528       mov rax, qword [r13 + 0x28]
0x0001284f      488d3c7f       lea rdi, [rdi + rdi*2]
0x00012853      4889742438     mov qword [rsp + 0x38], rsi
0x00012858      4c894c2430     mov qword [rsp + 0x30], r9
0x0001285d      48894c2418     mov qword [rsp + 0x18], rcx
0x00012862      4889542410     mov qword [rsp + 0x10], rdx
0x00012867      4c8d14f8       lea r10, [rax + rdi*8]
0x0001286b      bf10000000     mov edi, 0x10
0x00012870      49c702020000.  mov qword [r10], 2
0x00012877      4c891424       mov qword [rsp], r10
0x0001287b      e840f2feff     call sym.imp.malloc
0x00012880      4c8b1424       mov r10, qword [rsp]
0x00012884      4885c0         test rax, rax
0x00012887      488b542410     mov rdx, qword [rsp + 0x10]
0x0001288c      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00012891      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00012896      488b742438     mov rsi, qword [rsp + 0x38]
0x0001289b      49894210       mov qword [r10 + 0x10], rax
0x0001289f      0f8495020000   je 0x12b3a
0x000128a5      4c39c9         cmp rcx, r9
0x000128a8      0f84cf050000   je 0x12e7d
0x000128ae      49c742080200.  mov qword [r10 + 8], 2
0x000128b6      0f8ca8050000   jl 0x12e64
0x000128bc      4c8908         mov qword [rax], r9
0x000128bf      48894808       mov qword [rax + 8], rcx
0x000128c3      e9bdfeffff     jmp 0x12785
0x000128c8      488b4220       mov rax, qword [rdx + 0x20]
0x000128cc      488d0c7f       lea rcx, [rdi + rdi*2]
0x000128d0      bf08000000     mov edi, 8
0x000128d5      4889742410     mov qword [rsp + 0x10], rsi
0x000128da      48891424       mov qword [rsp], rdx
0x000128de      4c8b7038       mov r14, qword [rax + 0x38]
0x000128e2      498b4528       mov rax, qword [r13 + 0x28]
0x000128e6      4c8d3cc8       lea r15, [rax + rcx*8]
0x000128ea      49c707010000.  mov qword [r15], 1
0x000128f1      49c747080100.  mov qword [r15 + 8], 1
0x000128f9      e8c2f1feff     call sym.imp.malloc
0x000128fe      4885c0         test rax, rax
0x00012901      49894710       mov qword [r15 + 0x10], rax
0x00012905      488b1424       mov rdx, qword [rsp]
0x00012909      488b742410     mov rsi, qword [rsp + 0x10]
0x0001290e      0f84a4060000   je 0x12fb8
0x00012914      4c8930         mov qword [rax], r14
0x00012917      4c8b7a08       mov r15, qword [rdx + 8]
0x0001291b      e965feffff     jmp 0x12785
0x00012920      48837a2000     cmp qword [rdx + 0x20], 0
0x00012925      0f8456feffff   je 0x12781
0x0001292b      488d0dce2b00.  lea rcx, obj.__PRETTY_FUNCTION__.6981   ; 0x15500 ; "link_nfa_nodes"
0x00012932      488d35072600.  lea rsi, str..._coreutils_8.31_lib_regcomp.c ; 0x14f40 ; "../coreutils-8.31/lib/regcomp.c"
0x00012939      488d3da82600.  lea rdi, str.node__next____NULL         ; 0x14fe8 ; "node->next == NULL"
0x00012940      ba9f050000     mov edx, 0x59f
0x00012945      e8b6f0feff     call sym.imp.__assert_fail
0x0001294a      660f1f440000   nop word [rax + rax]
0x00012950      488b4220       mov rax, qword [rdx + 0x20]
0x00012954      4c8b7838       mov r15, qword [rax + 0x38]
0x00012958      498b4518       mov rax, qword [r13 + 0x18]
0x0001295c      4c893cf8       mov qword [rax + rdi*8], r15
0x00012960      807a3004       cmp byte [rdx + 0x30], 4
0x00012964      0f8517feffff   jne 0x12781
0x0001296a      498b4528       mov rax, qword [r13 + 0x28]
0x0001296e      488d0c7f       lea rcx, [rdi + rdi*2]
0x00012972      bf08000000     mov edi, 8
0x00012977      4889742418     mov qword [rsp + 0x18], rsi
0x0001297c      4889542410     mov qword [rsp + 0x10], rdx
0x00012981      488d0cc8       lea rcx, [rax + rcx*8]
0x00012985      48c701010000.  mov qword [rcx], 1
0x0001298c      48c741080100.  mov qword [rcx + 8], 1
0x00012994      48890c24       mov qword [rsp], rcx
0x00012998      e823f1feff     call sym.imp.malloc
0x0001299d      488b0c24       mov rcx, qword [rsp]
0x000129a1      4885c0         test rax, rax
0x000129a4      488b542410     mov rdx, qword [rsp + 0x10]
0x000129a9      488b742418     mov rsi, qword [rsp + 0x18]
0x000129ae      48894110       mov qword [rcx + 0x10], rax
0x000129b2      0f8448060000   je 0x13000
0x000129b8      4c8938         mov qword [rax], r15
0x000129bb      4c8b7a08       mov r15, qword [rdx + 8]
0x000129bf      e9c1fdffff     jmp 0x12785
0x000129c4      4889b424b000.  mov qword [rsp + 0xb0], rsi
0x000129cc      4889b424b800.  mov qword [rsp + 0xb8], rsi
0x000129d4      c744244c0000.  mov dword [rsp + 0x4c], 0
0x000129dc      e947faffff     jmp 0x12428
0x000129e1      0f1f80000000.  nop dword [rax]
0x000129e8      b901000000     mov ecx, 1
0x000129ed      4c89fa         mov rdx, r15
0x000129f0      4c89ee         mov rsi, r13
0x000129f3      4c89e7         mov rdi, r12
0x000129f6      4c891424       mov qword [rsp], r10
0x000129fa      e82151ffff     call sym.calc_eclosure_iter
0x000129ff      85c0           test eax, eax
0x00012a01      0f85e9f8ffff   jne 0x122f0
0x00012a07      498b4530       mov rax, qword [r13 + 0x30]
0x00012a0b      4c8b1424       mov r10, qword [rsp]
0x00012a0f      4983c701       add r15, 1
0x00012a13      4a837c100800   cmp qword [rax + r10 + 8], 0
0x00012a19      0f85a9fdffff   jne 0x127c8
0x00012a1f      488b7c2470     mov rdi, qword [rsp + 0x70]
0x00012a24      e857eefeff     call sym.imp.free
0x00012a29      4d397d10       cmp qword [r13 + 0x10], r15
0x00012a2d      0f84ccfdffff   je 0x127ff
0x00012a33      440fb6742410   movzx r14d, byte [rsp + 0x10]
0x00012a39      e993fdffff     jmp 0x127d1
0x00012a3e      488b442408     mov rax, qword [rsp + 8]
0x00012a43      f6403810       test byte [rax + 0x38], 0x10
0x00012a47      7511           jne 0x12a5a
0x00012a49      4883783000     cmp qword [rax + 0x30], 0
0x00012a4e      740a           je 0x12a5a
0x00012a50      41f685b00000.  test byte [r13 + 0xb0], 1
0x00012a58      750e           jne 0x12a68
0x00012a5a      4983bd980000.  cmp qword [r13 + 0x98], 0
0x00012a62      0f84f3000000   je 0x12b5b
0x00012a68      488d3c52       lea rdi, [rdx + rdx*2]
0x00012a6c      48891424       mov qword [rsp], rdx
0x00012a70      48c1e703       shl rdi, 3
0x00012a74      e847f0feff     call sym.imp.malloc
0x00012a79      4885c0         test rax, rax
0x00012a7c      49894538       mov qword [r13 + 0x38], rax
0x00012a80      0f8446050000   je 0x12fcc
0x00012a86      488b1424       mov rdx, qword [rsp]
0x00012a8a      31f6           xor esi, esi
0x00012a8c      31c9           xor ecx, ecx
0x00012a8e      4885d2         test rdx, rdx
0x00012a91      7511           jne 0x12aa4
0x00012a93      e9c3000000     jmp 0x12b5b
0x00012a98      0f1f84000000.  nop dword [rax + rax]
0x00012aa0      498b4538       mov rax, qword [r13 + 0x38]
0x00012aa4      660fefc0       pxor xmm0, xmm0
0x00012aa8      4801f0         add rax, rsi
0x00012aab      4883c101       add rcx, 1
0x00012aaf      48c740100000.  mov qword [rax + 0x10], 0
0x00012ab7      4883c618       add rsi, 0x18
0x00012abb      0f1100         movups xmmword [rax], xmm0
0x00012abe      498b4510       mov rax, qword [r13 + 0x10]
0x00012ac2      4839c1         cmp rcx, rax
0x00012ac5      72d9           jb 0x12aa0
0x00012ac7      4885c0         test rax, rax
0x00012aca      0f848b000000   je 0x12b5b
0x00012ad0      498b4530       mov rax, qword [r13 + 0x30]
0x00012ad4      48c744241800.  mov qword [rsp + 0x18], 0
0x00012add      48c744241000.  mov qword [rsp + 0x10], 0
0x00012ae6      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00012aeb      488d1408       lea rdx, [rax + rcx]
0x00012aef      48837a0800     cmp qword [rdx + 8], 0
0x00012af4      488b4a10       mov rcx, qword [rdx + 0x10]
0x00012af8      7e4a           jle 0x12b44
0x00012afa      4531ff         xor r15d, r15d
0x00012afd      eb19           jmp 0x12b18
0x00012aff      90             nop
0x00012b00      498b4530       mov rax, qword [r13 + 0x30]
0x00012b04      488b542418     mov rdx, qword [rsp + 0x18]
0x00012b09      4983c701       add r15, 1
0x00012b0d      488b0c24       mov rcx, qword [rsp]
0x00012b11      4c3b7c1008     cmp r15, qword [rax + rdx + 8]
0x00012b16      7d2c           jge 0x12b44
0x00012b18      4a8b04f9       mov rax, qword [rcx + r15*8]
0x00012b1c      48890c24       mov qword [rsp], rcx
0x00012b20      488d3440       lea rsi, [rax + rax*2]
0x00012b24      498b4538       mov rax, qword [r13 + 0x38]
0x00012b28      488d3cf0       lea rdi, [rax + rsi*8]
0x00012b2c      488b742410     mov rsi, qword [rsp + 0x10]
0x00012b31      e83a33ffff     call sym.re_node_set_insert_last
0x00012b36      84c0           test al, al
0x00012b38      75c6           jne 0x12b00
0x00012b3a      b80c000000     mov eax, 0xc
0x00012b3f      e9acf7ffff     jmp 0x122f0
0x00012b44      488344241001   add qword [rsp + 0x10], 1
0x00012b4a      488344241818   add qword [rsp + 0x18], 0x18            ; [0x18:8]=0x2420 rip
0x00012b50      488b542410     mov rdx, qword [rsp + 0x10]
0x00012b55      493b5510       cmp rdx, qword [r13 + 0x10]
0x00012b59      728b           jb 0x12ae6
0x00012b5b      0fb683b00000.  movzx eax, byte [rbx + 0xb0]
0x00012b62      c744244c0000.  mov dword [rsp + 0x4c], 0
0x00012b6a      c0e802         shr al, 2
0x00012b6d      48837c242000   cmp qword [rsp + 0x20], 0
0x00012b73      0f94c2         sete dl
0x00012b76      20d0           and al, dl
0x00012b78      0f85e1010000   jne 0x12d5f
0x00012b7e      488b4368       mov rax, qword [rbx + 0x68]
0x00012b82      4c89e7         mov rdi, r12
0x00012b85      488b4018       mov rax, qword [rax + 0x18]
0x00012b89      488b4038       mov rax, qword [rax + 0x38]
0x00012b8d      488d1440       lea rdx, [rax + rax*2]
0x00012b91      488983900000.  mov qword [rbx + 0x90], rax
0x00012b98      488b4330       mov rax, qword [rbx + 0x30]
0x00012b9c      488d34d0       lea rsi, [rax + rdx*8]
0x00012ba0      e8db59ffff     call sym.re_node_set_init_copy
0x00012ba5      85c0           test eax, eax
0x00012ba7      4189c7         mov r15d, eax
0x00012baa      89442450       mov dword [rsp + 0x50], eax
0x00012bae      0f851b010000   jne 0x12ccf
0x00012bb4      4883bb980000.  cmp qword [rbx + 0x98], 0
0x00012bbc      0f8ece000000   jle 0x12c90
0x00012bc2      4c8b4c2468     mov r9, qword [rsp + 0x68]
0x00012bc7      4d85c9         test r9, r9
0x00012bca      0f8ec0000000   jle 0x12c90
0x00012bd0      4531d2         xor r10d, r10d
0x00012bd3      4d8d6c2410     lea r13, [r12 + 0x10]
0x00012bd8      eb13           jmp 0x12bed
0x00012bda      660f1f440000   nop word [rax + rax]
0x00012be0      4983c201       add r10, 1
0x00012be4      4d39d1         cmp r9, r10
0x00012be7      0f8ea3000000   jle 0x12c90
0x00012bed      488b4c2470     mov rcx, qword [rsp + 0x70]
0x00012bf2      488b33         mov rsi, qword [rbx]
0x00012bf5      4e8b04d1       mov r8, qword [rcx + r10*8]
0x00012bf9      4c89c7         mov rdi, r8
0x00012bfc      48c1e704       shl rdi, 4
0x00012c00      4801f7         add rdi, rsi
0x00012c03      807f0804       cmp byte [rdi + 8], 4
0x00012c07      75d7           jne 0x12be0
0x00012c09      31d2           xor edx, edx
0x00012c0b      eb0c           jmp 0x12c19
0x00012c0d      0f1f00         nop dword [rax]
0x00012c10      4883c201       add rdx, 1
0x00012c14      4939d1         cmp r9, rdx
0x00012c17      74c7           je 0x12be0
0x00012c19      488b04d1       mov rax, qword [rcx + rdx*8]
0x00012c1d      48c1e004       shl rax, 4
0x00012c21      4801f0         add rax, rsi
0x00012c24      80780809       cmp byte [rax + 8], 9
0x00012c28      75e6           jne 0x12c10
0x00012c2a      4c8b1f         mov r11, qword [rdi]
0x00012c2d      4c3918         cmp qword [rax], r11
0x00012c30      75de           jne 0x12c10
0x00012c32      488b5328       mov rdx, qword [rbx + 0x28]
0x00012c36      4b8d0440       lea rax, [r8 + r8*2]
0x00012c3a      4c89ee         mov rsi, r13
0x00012c3d      4c89cf         mov rdi, r9
0x00012c40      488d04c2       lea rax, [rdx + rax*8]
0x00012c44      488b4010       mov rax, qword [rax + 0x10]
0x00012c48      4c8b18         mov r11, qword [rax]
0x00012c4b      4c89da         mov rdx, r11
0x00012c4e      e8cd47ffff     call sym.re_node_set_contains.isra.3
0x00012c53      4885c0         test rax, rax
0x00012c56      7588           jne 0x12be0
0x00012c58      488b4330       mov rax, qword [rbx + 0x30]
0x00012c5c      4b8d145b       lea rdx, [r11 + r11*2]
0x00012c60      4c89e7         mov rdi, r12
0x00012c63      488d34d0       lea rsi, [rax + rdx*8]
0x00012c67      e8d44cffff     call sym.re_node_set_merge
0x00012c6c      85c0           test eax, eax
0x00012c6e      0f853c030000   jne 0x12fb0
0x00012c74      4c8b4c2468     mov r9, qword [rsp + 0x68]
0x00012c79      41ba01000000   mov r10d, 1
0x00012c7f      4d39d1         cmp r9, r10
0x00012c82      0f8f65ffffff   jg 0x12bed
0x00012c88      0f1f84000000.  nop dword [rax + rax]
0x00012c90      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00012c95      31c9           xor ecx, ecx
0x00012c97      4c89e2         mov rdx, r12
0x00012c9a      4889de         mov rsi, rbx
0x00012c9d      e8ce5affff     call sym.re_acquire_state_context
0x00012ca2      4885c0         test rax, rax
0x00012ca5      48894348       mov qword [rbx + 0x48], rax
0x00012ca9      0f8463010000   je 0x12e12
0x00012caf      80786800       cmp byte [rax + 0x68], 0
0x00012cb3      0f88f8000000   js 0x12db1
0x00012cb9      48894360       mov qword [rbx + 0x60], rax
0x00012cbd      48894358       mov qword [rbx + 0x58], rax
0x00012cc1      48894350       mov qword [rbx + 0x50], rax
0x00012cc5      488b7c2470     mov rdi, qword [rsp + 0x70]
0x00012cca      e8b1ebfeff     call sym.imp.free
0x00012ccf      488b442408     mov rax, qword [rsp + 8]
0x00012cd4      44897c244c     mov dword [rsp + 0x4c], r15d
0x00012cd9      4c8b28         mov r13, qword [rax]
0x00012cdc      498b7d70       mov rdi, qword [r13 + 0x70]
0x00012ce0      4885ff         test rdi, rdi
0x00012ce3      7413           je 0x12cf8
0x00012ce5      0f1f00         nop dword [rax]
0x00012ce8      4c8b27         mov r12, qword [rdi]
0x00012ceb      e890ebfeff     call sym.imp.free
0x00012cf0      4d85e4         test r12, r12
0x00012cf3      4c89e7         mov rdi, r12
0x00012cf6      75f0           jne 0x12ce8
0x00012cf8      498b7d20       mov rdi, qword [r13 + 0x20]
0x00012cfc      49c745700000.  mov qword [r13 + 0x70], 0
0x00012d04      41c785800000.  mov dword [r13 + 0x80], 0xf             ; [0xf:4]=0x3e000300
0x00012d0f      49c745680000.  mov qword [r13 + 0x68], 0
0x00012d17      e864ebfeff     call sym.imp.free
0x00012d1c      49c745200000.  mov qword [r13 + 0x20], 0
0x00012d24      4889ef         mov rdi, rbp
0x00012d27      e8e443ffff     call sym.re_string_destruct
0x00012d2c      8b44244c       mov eax, dword [rsp + 0x4c]
0x00012d30      85c0           test eax, eax
0x00012d32      0f8434f6ffff   je 0x1236c
0x00012d38      e90ff6ffff     jmp 0x1234c
0x00012d3d      c744244c0c00.  mov dword [rsp + 0x4c], 0xc             ; [0xc:4]=0
0x00012d45      e9b2f5ffff     jmp 0x122fc
0x00012d4a      4889ef         mov rdi, rbp
0x00012d4d      e81e34ffff     call sym.build_wcs_buffer
0x00012d52      c744244c0000.  mov dword [rsp + 0x4c], 0
0x00012d5a      e9c9f6ffff     jmp 0x12428
0x00012d5f      488b4c2408     mov rcx, qword [rsp + 8]
0x00012d64      4883792800     cmp qword [rcx + 0x28], 0
0x00012d69      0f850ffeffff   jne 0x12b7e
0x00012d6f      4c8b5310       mov r10, qword [rbx + 0x10]
0x00012d73      4d85d2         test r10, r10
0x00012d76      0f84ae020000   je 0x1302a
0x00012d7c      488b33         mov rsi, qword [rbx]
0x00012d7f      4c8d0d062700.  lea r9, [0x0001548c]
0x00012d86      4531c0         xor r8d, r8d
0x00012d89      31d2           xor edx, edx
0x00012d8b      4889f1         mov rcx, rsi
0x00012d8e      8079080c       cmp byte [rcx + 8], 0xc
0x00012d92      0f87c6020000   ja 0x1305e
0x00012d98      0fb67908       movzx edi, byte [rcx + 8]
0x00012d9c      49633cb9       movsxd rdi, dword [r9 + rdi*4]
0x00012da0      4c01cf         add rdi, r9
0x00012da3      ffe7           jmp rdi
0x00012da5      31ed           xor ebp, ebp
0x00012da7      be01000000     mov esi, 1
0x00012dac      e92cf3ffff     jmp 0x120dd
0x00012db1      4c8b742428     mov r14, qword [rsp + 0x28]
0x00012db6      b901000000     mov ecx, 1
0x00012dbb      4c89e2         mov rdx, r12
0x00012dbe      4889de         mov rsi, rbx
0x00012dc1      4c89f7         mov rdi, r14
0x00012dc4      e8a759ffff     call sym.re_acquire_state_context
0x00012dc9      b902000000     mov ecx, 2
0x00012dce      4c89e2         mov rdx, r12
0x00012dd1      4889de         mov rsi, rbx
0x00012dd4      4c89f7         mov rdi, r14
0x00012dd7      48894350       mov qword [rbx + 0x50], rax
0x00012ddb      e89059ffff     call sym.re_acquire_state_context
0x00012de0      b906000000     mov ecx, 6
0x00012de5      48894358       mov qword [rbx + 0x58], rax
0x00012de9      4c89e2         mov rdx, r12
0x00012dec      4889de         mov rsi, rbx
0x00012def      4c89f7         mov rdi, r14
0x00012df2      e87959ffff     call sym.re_acquire_state_context
0x00012df7      48837b5000     cmp qword [rbx + 0x50], 0
0x00012dfc      48894360       mov qword [rbx + 0x60], rax
0x00012e00      7410           je 0x12e12
0x00012e02      48837b5800     cmp qword [rbx + 0x58], 0
0x00012e07      7409           je 0x12e12
0x00012e09      4885c0         test rax, rax
0x00012e0c      0f85b3feffff   jne 0x12cc5
0x00012e12      448b7c2450     mov r15d, dword [rsp + 0x50]
0x00012e17      e9b3feffff     jmp 0x12ccf
0x00012e1c      488b4220       mov rax, qword [rdx + 0x20]
0x00012e20      4c8b4838       mov r9, qword [rax + 0x38]
0x00012e24      e910faffff     jmp 0x12839
0x00012e29      488b4220       mov rax, qword [rdx + 0x20]
0x00012e2d      488b4838       mov rcx, qword [rax + 0x38]
0x00012e31      e9eef9ffff     jmp 0x12824
0x00012e36      4889df         mov rdi, rbx
0x00012e39      bee8000000     mov esi, 0xe8
0x00012e3e      e8edecfeff     call sym.imp.realloc
0x00012e43      4885c0         test rax, rax
0x00012e46      4889c3         mov rbx, rax
0x00012e49      0f8492010000   je 0x12fe1
0x00012e4f      488b442408     mov rax, qword [rsp + 8]
0x00012e54      48c74008e800.  mov qword [rax + 8], 0xe8               ; [0xe8:8]=0x600000001
0x00012e5c      488918         mov qword [rax], rbx
0x00012e5f      e9def1ffff     jmp 0x12042
0x00012e64      488908         mov qword [rax], rcx
0x00012e67      4c894808       mov qword [rax + 8], r9
0x00012e6b      e915f9ffff     jmp 0x12785
0x00012e70      c744244c0000.  mov dword [rsp + 0x4c], 0
0x00012e78      e9abf5ffff     jmp 0x12428
0x00012e7d      49c742080100.  mov qword [r10 + 8], 1
0x00012e85      488908         mov qword [rax], rcx
0x00012e88      e9f8f8ffff     jmp 0x12785
0x00012e8d      4889ef         mov rdi, rbp
0x00012e90      e86b32ffff     call sym.build_upper_buffer
0x00012e95      c744244c0000.  mov dword [rsp + 0x4c], 0
0x00012e9d      e986f5ffff     jmp 0x12428
0x00012ea2      c744244c0c00.  mov dword [rsp + 0x4c], 0xc             ; [0xc:4]=0
0x00012eaa      48c743680000.  mov qword [rbx + 0x68], 0
0x00012eb2      e945f4ffff     jmp 0x122fc
0x00012eb7      4885c0         test rax, rax
0x00012eba      0f842b010000   je 0x12feb
0x00012ec0      4d8d6f70       lea r13, [r15 + 0x70]
0x00012ec4      4c8d642460     lea r12, [rsp + 0x60]
0x00012ec9      4983ef80       sub r15, 0xffffffffffffff80
0x00012ecd      31c9           xor ecx, ecx
0x00012ecf      31d2           xor edx, edx
0x00012ed1      4c89fe         mov rsi, r15
0x00012ed4      4d89e0         mov r8, r12
0x00012ed7      4c89ef         mov rdi, r13
0x00012eda      48890424       mov qword [rsp], rax
0x00012ede      c644246802     mov byte [rsp + 0x68], 2
0x00012ee3      e8f851ffff     call sym.create_token_tree.isra.16
0x00012ee8      4c8b0c24       mov r9, qword [rsp]
0x00012eec      4989c3         mov r11, rax
0x00012eef      e9d7f5ffff     jmp 0x124cb
0x00012ef4      e887e9feff     call sym.imp.free
0x00012ef9      49c785e00000.  mov qword [r13 + 0xe0], 0
0x00012f04      e924f7ffff     jmp 0x1262d
0x00012f09      4189c0         mov r8d, eax
0x00012f0c      4883c201       add rdx, 1
0x00012f10      4883c110       add rcx, 0x10
0x00012f14      4c39d2         cmp rdx, r10
0x00012f17      0f8571feffff   jne 0x12d8e
0x00012f1d      4508c6         or r14b, r8b
0x00012f20      0f8404010000   je 0x1302a
0x00012f26      4889d0         mov rax, rdx
0x00012f29      48c1e004       shl rax, 4
0x00012f2d      4801f0         add rax, rsi
0x00012f30      eb16           jmp 0x12f48
0x00012f32      80fa05         cmp dl, 5
0x00012f35      7504           jne 0x12f3b
0x00012f37      c6460807       mov byte [rsi + 8], 7
0x00012f3b      4883c610       add rsi, 0x10
0x00012f3f      4839f0         cmp rax, rsi
0x00012f42      0f84df000000   je 0x13027
0x00012f48      0fb65608       movzx edx, byte [rsi + 8]
0x00012f4c      80fa01         cmp dl, 1
0x00012f4f      75e1           jne 0x12f32
0x00012f51      803e00         cmp byte [rsi], 0
0x00012f54      79e5           jns 0x12f3b
0x00012f56      80660adf       and byte [rsi + 0xa], 0xdf              ; [0xdf:1]=0
0x00012f5a      ebdf           jmp 0x12f3b
0x00012f5c      0f1f4000       nop dword [rax]
0x00012f60      803900         cmp byte [rcx], 0
0x00012f63      440f48f0       cmovs r14d, eax
0x00012f67      eba3           jmp 0x12f0c
0x00012f69      8b39           mov edi, dword [rcx]
0x00012f6b      83ff20         cmp edi, 0x20                           ; "@"
0x00012f6e      749c           je 0x12f0c
0x00012f70      0f86a3000000   jbe 0x13019
0x00012f76      83ff40         cmp edi, 0x40                           ; segment.PHDR
0x00012f79      7491           je 0x12f0c
0x00012f7b      83c780         add edi, 0xffffff80
0x00012f7e      748c           je 0x12f0c
0x00012f80      e9f9fbffff     jmp 0x12b7e
0x00012f85      0f1f00         nop dword [rax]
0x00012f88      488b39         mov rdi, qword [rcx]
0x00012f8b      48837f1000     cmp qword [rdi + 0x10], 0
0x00012f90      0f85e8fbffff   jne 0x12b7e
0x00012f96      48837f1800     cmp qword [rdi + 0x18], 0
0x00012f9b      0f846bffffff   je 0x12f0c
0x00012fa1      e9d8fbffff     jmp 0x12b7e
0x00012fa6      662e0f1f8400.  nop word cs:[rax + rax]
0x00012fb0      4189c7         mov r15d, eax
0x00012fb3      e917fdffff     jmp 0x12ccf
0x00012fb8      49c747080000.  mov qword [r15 + 8], 0
0x00012fc0      49c707000000.  mov qword [r15], 0
0x00012fc7      e96efbffff     jmp 0x12b3a
0x00012fcc      488b442408     mov rax, qword [rsp + 8]
0x00012fd1      c744244c0c00.  mov dword [rsp + 0x4c], 0xc             ; [0xc:4]=0
0x00012fd9      4c8b28         mov r13, qword [rax]
0x00012fdc      e91bf3ffff     jmp 0x122fc
0x00012fe1      b80c000000     mov eax, 0xc
0x00012fe6      e981f3ffff     jmp 0x1236c
0x00012feb      488b442408     mov rax, qword [rsp + 8]
0x00012ff0      48c743680000.  mov qword [rbx + 0x68], 0
0x00012ff8      4c8b28         mov r13, qword [rax]
0x00012ffb      e9fcf2ffff     jmp 0x122fc
0x00013000      48c741080000.  mov qword [rcx + 8], 0
0x00013008      48c701000000.  mov qword [rcx], 0
0x0001300f      b80c000000     mov eax, 0xc
0x00013014      e9d7f2ffff     jmp 0x122f0
0x00013019      83ff10         cmp edi, 0x10
0x0001301c      0f84eafeffff   je 0x12f0c
0x00013022      e957fbffff     jmp 0x12b7e
0x00013027      4589c6         mov r14d, r8d
0x0001302a      4883bb980000.  cmp qword [rbx + 0x98], 0
0x00013032      0fb693b00000.  movzx edx, byte [rbx + 0xb0]
0x00013039      c783b4000000.  mov dword [rbx + 0xb4], 1
0x00013043      0f9fc0         setg al
0x00013046      83e2f9         and edx, 0xfffffff9                     ; 4294967289
0x00013049      4409f0         or eax, r14d
0x0001304c      83e001         and eax, 1
0x0001304f      01c0           add eax, eax
0x00013051      09d0           or eax, edx
0x00013053      8883b0000000   mov byte [rbx + 0xb0], al
0x00013059      e920fbffff     jmp 0x12b7e
0x0001305e      e82de8feff     call sym.imp.abort
0x00013063      488d0d962400.  lea rcx, obj.__PRETTY_FUNCTION__.6981   ; 0x15500 ; "link_nfa_nodes"
0x0001306a      488d35cf1e00.  lea rsi, str..._coreutils_8.31_lib_regcomp.c ; 0x14f40 ; "../coreutils-8.31/lib/regcomp.c"
0x00013071      488d3d8d1f00.  lea rdi, str.right____1                 ; 0x15005 ; "right > -1"
0x00013078      bab0050000     mov edx, 0x5b0
0x0001307d      e87ee9feff     call sym.imp.__assert_fail
0x00013082      488d0d772400.  lea rcx, obj.__PRETTY_FUNCTION__.6981   ; 0x15500 ; "link_nfa_nodes"
0x00013089      488d35b01e00.  lea rsi, str..._coreutils_8.31_lib_regcomp.c ; 0x14f40 ; "../coreutils-8.31/lib/regcomp.c"
0x00013090      488d3dc91e00.  lea rdi, str.IS_EPSILON_NODE__node__token.type ; 0x14f60 ; "!IS_EPSILON_NODE (node->token.type)"
0x00013097      bac2050000     mov edx, 0x5c2
0x0001309c      e85fe9feff     call sym.imp.__assert_fail
0x000130a1      488d0d582400.  lea rcx, obj.__PRETTY_FUNCTION__.6981   ; 0x15500 ; "link_nfa_nodes"
0x000130a8      488d35911e00.  lea rsi, str..._coreutils_8.31_lib_regcomp.c ; 0x14f40 ; "../coreutils-8.31/lib/regcomp.c"
0x000130af      488d3d451f00.  lea rdi, str.left____1                  ; 0x14ffb ; "left > -1"
0x000130b6      baaf050000     mov edx, 0x5af
0x000130bb      e840e9feff     call sym.imp.__assert_fail
0x000130c0      e8cbe8feff     call sym.imp.__stack_chk_fail
0x000130c5      90             nop
0x000130c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- rpl_re_compile_pattern:
0x000130d0      4883ec08       sub rsp, 8
0x000130d4      488b0d258320.  mov rcx, qword [obj.rpl_re_syntax_options] ; [0x21b400:8]=0
0x000130db      4989f8         mov r8, rdi
0x000130de      4889d7         mov rdi, rdx
0x000130e1      4889c8         mov rax, rcx
0x000130e4      48c1e819       shr rax, 0x19
0x000130e8      83e001         and eax, 1
0x000130eb      c1e004         shl eax, 4
0x000130ee      89c2           mov edx, eax
0x000130f0      0fb64738       movzx eax, byte [rdi + 0x38]
0x000130f4      83e0ef         and eax, 0xffffffef                     ; 4294967279
0x000130f7      09d0           or eax, edx
0x000130f9      4889f2         mov rdx, rsi
0x000130fc      4c89c6         mov rsi, r8
0x000130ff      83c880         or eax, 0xffffff80                      ; 4294967168
0x00013102      884738         mov byte [rdi + 0x38], al
0x00013105      e8c6eeffff     call sym.re_compile_internal
0x0001310a      85c0           test eax, eax
0x0001310c      742a           je 0x13138
0x0001310e      488d154b2400.  lea rdx, obj.__re_error_msgid_idx       ; 0x15560
0x00013115      4898           cdqe
0x00013117      488d35e22400.  lea rsi, obj.__re_error_msgid           ; 0x15600 ; "Success"
0x0001311e      31ff           xor edi, edi
0x00013120      480334c2       add rsi, qword [rdx + rax*8]
0x00013124      ba05000000     mov edx, 5
0x00013129      4883c408       add rsp, 8
0x0001312d      e92ee8feff     jmp sym.imp.dcgettext
0x00013132      660f1f440000   nop word [rax + rax]
0x00013138      31c0           xor eax, eax
0x0001313a      4883c408       add rsp, 8
0x0001313e      c3             ret
0x0001313f      90             nop
;-- rpl_re_set_syntax:
0x00013140      488b05b98220.  mov rax, qword [obj.rpl_re_syntax_options] ; [0x21b400:8]=0
0x00013147      48893db28220.  mov qword [obj.rpl_re_syntax_options], rdi ; [0x21b400:8]=0
0x0001314e      c3             ret
0x0001314f      90             nop
;-- rpl_re_compile_fastmap:
0x00013150      4154           push r12
0x00013152      55             push rbp
0x00013153      31c0           xor eax, eax
0x00013155      53             push rbx
0x00013156      488b6f20       mov rbp, qword [rdi + 0x20]
0x0001315a      4889fb         mov rbx, rdi
0x0001315d      4c8b27         mov r12, qword [rdi]
0x00013160      488d7d08       lea rdi, [rbp + 8]
0x00013164      4889e9         mov rcx, rbp
0x00013167      48c745000000.  mov qword [rbp], 0
0x0001316f      48c785f80000.  mov qword [rbp + 0xf8], 0
0x0001317a      4883e7f8       and rdi, 0xfffffffffffffff8
0x0001317e      4829f9         sub rcx, rdi
0x00013181      81c100010000   add ecx, 0x100
0x00013187      c1e903         shr ecx, 3
0x0001318a      f348ab         rep stosq qword [rdi], rax
0x0001318d      4889e9         mov rcx, rbp
0x00013190      4889df         mov rdi, rbx
0x00013193      498b742448     mov rsi, qword [r12 + 0x48]
0x00013198      488d5618       lea rdx, [rsi + 0x18]
0x0001319c      4883c610       add rsi, 0x10
0x000131a0      e8fb84ffff     call sym.re_compile_fastmap_iter.isra.30
0x000131a5      498b442450     mov rax, qword [r12 + 0x50]
0x000131aa      4939442448     cmp qword [r12 + 0x48], rax
0x000131af      7418           je 0x131c9
0x000131b1      488d5018       lea rdx, [rax + 0x18]
0x000131b5      488d7010       lea rsi, [rax + 0x10]
0x000131b9      4889e9         mov rcx, rbp
0x000131bc      4889df         mov rdi, rbx
0x000131bf      e8dc84ffff     call sym.re_compile_fastmap_iter.isra.30
0x000131c4      498b442448     mov rax, qword [r12 + 0x48]
0x000131c9      498b742458     mov rsi, qword [r12 + 0x58]
0x000131ce      4839c6         cmp rsi, rax
0x000131d1      7418           je 0x131eb
0x000131d3      488d5618       lea rdx, [rsi + 0x18]
0x000131d7      4889e9         mov rcx, rbp
0x000131da      4883c610       add rsi, 0x10
0x000131de      4889df         mov rdi, rbx
0x000131e1      e8ba84ffff     call sym.re_compile_fastmap_iter.isra.30
0x000131e6      498b442448     mov rax, qword [r12 + 0x48]
0x000131eb      498b742460     mov rsi, qword [r12 + 0x60]
0x000131f0      4839c6         cmp rsi, rax
0x000131f3      7413           je 0x13208
0x000131f5      488d5618       lea rdx, [rsi + 0x18]
0x000131f9      4889e9         mov rcx, rbp
0x000131fc      4883c610       add rsi, 0x10
0x00013200      4889df         mov rdi, rbx
0x00013203      e89884ffff     call sym.re_compile_fastmap_iter.isra.30
0x00013208      804b3808       or byte [rbx + 0x38], 8
0x0001320c      31c0           xor eax, eax
0x0001320e      5b             pop rbx
0x0001320f      5d             pop rbp
0x00013210      415c           pop r12
0x00013212      c3             ret
0x00013213      0f1f00         nop dword [rax]
0x00013216      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_search_stub:
0x00013220      4157           push r15
0x00013222      4156           push r14
0x00013224      4c89c0         mov rax, r8
0x00013227      4155           push r13
0x00013229      4154           push r12
0x0001322b      4901c8         add r8, rcx
0x0001322e      55             push rbp
0x0001322f      53             push rbx
0x00013230      4883ec38       sub rsp, 0x38
0x00013234      4885c9         test rcx, rcx
0x00013237      8b5c2478       mov ebx, dword [rsp + 0x78]
0x0001323b      4c8b642470     mov r12, qword [rsp + 0x70]
0x00013240      895c2428       mov dword [rsp + 0x28], ebx
0x00013244      0f8836030000   js 0x13580
0x0001324a      4839d1         cmp rcx, rdx
0x0001324d      0f8f2d030000   jg 0x13580
0x00013253      4939d0         cmp r8, rdx
0x00013256      4889cb         mov rbx, rcx
0x00013259      4989ff         mov r15, rdi
0x0001325c      0f8f7e020000   jg 0x134e0
0x00013262      4885c0         test rax, rax
0x00013265      7809           js 0x13270
0x00013267      4c39c1         cmp rcx, r8
0x0001326a      0f8f70020000   jg 0x134e0
0x00013270      4d85c0         test r8, r8
0x00013273      0f88df020000   js 0x13558
0x00013279      4885c0         test rax, rax
0x0001327c      7909           jns 0x13287
0x0001327e      4c39c3         cmp rbx, r8
0x00013281      0f8ed1020000   jle 0x13558
0x00013287      410fb64738     movzx eax, byte [r15 + 0x38]
0x0001328c      4189c5         mov r13d, eax
0x0001328f      41c0ed05       shr r13b, 5
0x00013293      4489ef         mov edi, r13d
0x00013296      83e703         and edi, 3
0x00013299      4939d8         cmp r8, rbx
0x0001329c      897c242c       mov dword [rsp + 0x2c], edi
0x000132a0      7e0f           jle 0x132b1
0x000132a2      49837f2000     cmp qword [r15 + 0x20], 0
0x000132a7      7408           je 0x132b1
0x000132a9      a808           test al, 8
0x000132ab      0f84ef010000   je 0x134a0
0x000132b1      a810           test al, 0x10
0x000132b3      0f85c7010000   jne 0x13480
0x000132b9      4d85e4         test r12, r12
0x000132bc      0f84be010000   je 0x13480
0x000132c2      83e006         and eax, 6
0x000132c5      498b4f30       mov rcx, qword [r15 + 0x30]
0x000132c9      3c04           cmp al, 4
0x000132cb      0f848f010000   je 0x13460
0x000132d1      4c8d7101       lea r14, [rcx + 1]
0x000132d5      4d89f5         mov r13, r14
0x000132d8      4c89f7         mov rdi, r14
0x000132db      48c1e704       shl rdi, 4
0x000132df      4c894c2420     mov qword [rsp + 0x20], r9
0x000132e4      4889542418     mov qword [rsp + 0x18], rdx
0x000132e9      4889742410     mov qword [rsp + 0x10], rsi
0x000132ee      4c89442408     mov qword [rsp + 8], r8
0x000132f3      e8c8e7feff     call sym.imp.malloc
0x000132f8      4885c0         test rax, rax
0x000132fb      4889c5         mov rbp, rax
0x000132fe      0f848c020000   je 0x13590
0x00013304      4883ec08       sub rsp, 8
0x00013308      4889d9         mov rcx, rbx
0x0001330b      4c89ff         mov rdi, r15
0x0001330e      8b442434       mov eax, dword [rsp + 0x34]
0x00013312      50             push rax
0x00013313      55             push rbp
0x00013314      4156           push r14
0x00013316      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x0001331b      4c8b442428     mov r8, qword [rsp + 0x28]
0x00013320      488b542438     mov rdx, qword [rsp + 0x38]
0x00013325      488b742430     mov rsi, qword [rsp + 0x30]
0x0001332a      e811abffff     call sym.re_search_internal
0x0001332f      4883c420       add rsp, 0x20
0x00013333      85c0           test eax, eax
0x00013335      7431           je 0x13368
0x00013337      83f801         cmp eax, 1
0x0001333a      49c7c4ffffff.  mov r12, 0xffffffffffffffff
0x00013341      7407           je 0x1334a
0x00013343      49c7c4feffff.  mov r12, 0xfffffffffffffffe
0x0001334a      4889ef         mov rdi, rbp
0x0001334d      e82ee5feff     call sym.imp.free
0x00013352      4883c438       add rsp, 0x38
0x00013356      4c89e0         mov rax, r12
0x00013359      5b             pop rbx
0x0001335a      5d             pop rbp
0x0001335b      415c           pop r12
0x0001335d      415d           pop r13
0x0001335f      415e           pop r14
0x00013361      415f           pop r15
0x00013363      c3             ret
0x00013364      0f1f4000       nop dword [rax]
0x00013368      4d85e4         test r12, r12
0x0001336b      0f84c7000000   je 0x13438
0x00013371      410fb64738     movzx eax, byte [r15 + 0x38]
0x00013376      498d5501       lea rdx, [r13 + 1]
0x0001337a      d0e8           shr al, 1
0x0001337c      83e003         and eax, 3
0x0001337f      0f846b010000   je 0x134f0
0x00013385      83f801         cmp eax, 1
0x00013388      0f8412020000   je 0x135a0
0x0001338e      83f802         cmp eax, 2
0x00013391      0f85e9020000   jne 0x13680
0x00013397      4d3b3424       cmp r14, qword [r12]
0x0001339b      0f87c0020000   ja 0x13661
0x000133a1      41b902000000   mov r9d, 2
0x000133a7      4d85ed         test r13, r13
0x000133aa      0f8e68020000   jle 0x13618
0x000133b0      4d8b442408     mov r8, qword [r12 + 8]
0x000133b5      498b7c2410     mov rdi, qword [r12 + 0x10]
0x000133ba      4a8d34ed0000.  lea rsi, [r13*8]
0x000133c2      4c89ea         mov rdx, r13
0x000133c5      31c0           xor eax, eax
0x000133c7      660f1f840000.  nop word [rax + rax]
0x000133d0      488b4c4500     mov rcx, qword [rbp + rax*2]
0x000133d5      49890c00       mov qword [r8 + rax], rcx
0x000133d9      488b4c4508     mov rcx, qword [rbp + rax*2 + 8]
0x000133de      48890c07       mov qword [rdi + rax], rcx
0x000133e2      4883c008       add rax, 8
0x000133e6      4839c6         cmp rsi, rax
0x000133e9      75e5           jne 0x133d0
0x000133eb      49391424       cmp qword [r12], rdx
0x000133ef      762c           jbe 0x1341d
0x000133f1      498b742410     mov rsi, qword [r12 + 0x10]
0x000133f6      498b4c2408     mov rcx, qword [r12 + 8]
0x000133fb      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00013402      660f1f440000   nop word [rax + rax]
0x00013408      488904d6       mov qword [rsi + rdx*8], rax
0x0001340c      4983c501       add r13, 1
0x00013410      488904d1       mov qword [rcx + rdx*8], rax
0x00013414      4d3b2c24       cmp r13, qword [r12]
0x00013418      4c89ea         mov rdx, r13
0x0001341b      72eb           jb 0x13408
0x0001341d      410fb64738     movzx eax, byte [r15 + 0x38]
0x00013422      478d2c09       lea r13d, [r9 + r9]
0x00013426      83e0f9         and eax, 0xfffffff9                     ; 4294967289
0x00013429      4409e8         or eax, r13d
0x0001342c      a806           test al, 6
0x0001342e      41884738       mov byte [r15 + 0x38], al
0x00013432      0f840bffffff   je 0x13343
0x00013438      807c242800     cmp byte [rsp + 0x28], 0
0x0001343d      4c8b6500       mov r12, qword [rbp]
0x00013441      0f8403ffffff   je 0x1334a
0x00013447      4939dc         cmp r12, rbx
0x0001344a      0f85f2010000   jne 0x13642
0x00013450      4c8b6508       mov r12, qword [rbp + 8]
0x00013454      4929dc         sub r12, rbx
0x00013457      e9eefeffff     jmp 0x1334a
0x0001345c      0f1f4000       nop dword [rax]
0x00013460      4d8b3424       mov r14, qword [r12]
0x00013464      4939ce         cmp r14, rcx
0x00013467      0f8764feffff   ja 0x132d1
0x0001346d      4d85f6         test r14, r14
0x00013470      4d89f5         mov r13, r14
0x00013473      0f8f5ffeffff   jg 0x132d8
0x00013479      0f1f80000000.  nop dword [rax]
0x00013480      bf10000000     mov edi, 0x10
0x00013485      41be01000000   mov r14d, 1
0x0001348b      41bd01000000   mov r13d, 1
0x00013491      4531e4         xor r12d, r12d
0x00013494      e946feffff     jmp 0x132df
0x00013499      0f1f80000000.  nop dword [rax]
0x000134a0      4c89ff         mov rdi, r15
0x000134a3      4c894c2420     mov qword [rsp + 0x20], r9
0x000134a8      4889542418     mov qword [rsp + 0x18], rdx
0x000134ad      4889742410     mov qword [rsp + 0x10], rsi
0x000134b2      4c89442408     mov qword [rsp + 8], r8
0x000134b7      e894fcffff     call sym.rpl_re_compile_fastmap
0x000134bc      410fb64738     movzx eax, byte [r15 + 0x38]
0x000134c1      4c8b4c2420     mov r9, qword [rsp + 0x20]
0x000134c6      488b542418     mov rdx, qword [rsp + 0x18]
0x000134cb      488b742410     mov rsi, qword [rsp + 0x10]
0x000134d0      4c8b442408     mov r8, qword [rsp + 8]
0x000134d5      e9d7fdffff     jmp 0x132b1
0x000134da      660f1f440000   nop word [rax + rax]
0x000134e0      4989d0         mov r8, rdx
0x000134e3      e99ffdffff     jmp 0x13287
0x000134e8      0f1f84000000.  nop dword [rax + rax]
0x000134f0      4c8d34d50000.  lea r14, [rdx*8]
0x000134f8      4889542408     mov qword [rsp + 8], rdx
0x000134fd      4c89f7         mov rdi, r14
0x00013500      e8bbe5feff     call sym.imp.malloc
0x00013505      4885c0         test rax, rax
0x00013508      4989442408     mov qword [r12 + 8], rax
0x0001350d      488b542408     mov rdx, qword [rsp + 8]
0x00013512      0f8412010000   je 0x1362a
0x00013518      4c89f7         mov rdi, r14
0x0001351b      4889542408     mov qword [rsp + 8], rdx
0x00013520      4889442410     mov qword [rsp + 0x10], rax
0x00013525      e896e5feff     call sym.imp.malloc
0x0001352a      4885c0         test rax, rax
0x0001352d      4989442410     mov qword [r12 + 0x10], rax
0x00013532      488b542408     mov rdx, qword [rsp + 8]
0x00013537      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0001353c      0f84e0000000   je 0x13622
0x00013542      49891424       mov qword [r12], rdx
0x00013546      41b901000000   mov r9d, 1
0x0001354c      e956feffff     jmp 0x133a7
0x00013551      0f1f80000000.  nop dword [rax]
0x00013558      410fb64738     movzx eax, byte [r15 + 0x38]
0x0001355d      4531c0         xor r8d, r8d
0x00013560      4189c5         mov r13d, eax
0x00013563      41c0ed05       shr r13b, 5
0x00013567      4489ef         mov edi, r13d
0x0001356a      83e703         and edi, 3
0x0001356d      897c242c       mov dword [rsp + 0x2c], edi
0x00013571      e93bfdffff     jmp 0x132b1
0x00013576      662e0f1f8400.  nop word cs:[rax + rax]
0x00013580      49c7c4ffffff.  mov r12, 0xffffffffffffffff
0x00013587      e9c6fdffff     jmp 0x13352
0x0001358c      0f1f4000       nop dword [rax]
0x00013590      49c7c4feffff.  mov r12, 0xfffffffffffffffe
0x00013597      e9b6fdffff     jmp 0x13352
0x0001359c      0f1f4000       nop dword [rax]
0x000135a0      49391424       cmp qword [r12], rdx
0x000135a4      41b901000000   mov r9d, 1
0x000135aa      0f83f7fdffff   jae 0x133a7
0x000135b0      488d0cd50000.  lea rcx, [rdx*8]
0x000135b8      498b7c2408     mov rdi, qword [r12 + 8]
0x000135bd      44884c2418     mov byte [rsp + 0x18], r9b
0x000135c2      4889542410     mov qword [rsp + 0x10], rdx
0x000135c7      4889ce         mov rsi, rcx
0x000135ca      48894c2408     mov qword [rsp + 8], rcx
0x000135cf      e85ce5feff     call sym.imp.realloc
0x000135d4      4885c0         test rax, rax
0x000135d7      4989c6         mov r14, rax
0x000135da      744e           je 0x1362a
0x000135dc      488b4c2408     mov rcx, qword [rsp + 8]
0x000135e1      498b7c2410     mov rdi, qword [r12 + 0x10]
0x000135e6      4889ce         mov rsi, rcx
0x000135e9      e842e5feff     call sym.imp.realloc
0x000135ee      4885c0         test rax, rax
0x000135f1      488b542410     mov rdx, qword [rsp + 0x10]
0x000135f6      440fb64c2418   movzx r9d, byte [rsp + 0x18]
0x000135fc      7434           je 0x13632
0x000135fe      4d89742408     mov qword [r12 + 8], r14
0x00013603      4989442410     mov qword [r12 + 0x10], rax
0x00013608      49891424       mov qword [r12], rdx
0x0001360c      e996fdffff     jmp 0x133a7
0x00013611      0f1f80000000.  nop dword [rax]
0x00013618      31d2           xor edx, edx
0x0001361a      4531ed         xor r13d, r13d
0x0001361d      e9c9fdffff     jmp 0x133eb
0x00013622      4889cf         mov rdi, rcx
0x00013625      e856e2feff     call sym.imp.free
0x0001362a      4531c9         xor r9d, r9d
0x0001362d      e9ebfdffff     jmp 0x1341d
0x00013632      4c89f7         mov rdi, r14
0x00013635      e846e2feff     call sym.imp.free
0x0001363a      4531c9         xor r9d, r9d
0x0001363d      e9dbfdffff     jmp 0x1341d
0x00013642      488d0d871e00.  lea rcx, obj.__PRETTY_FUNCTION__.7847   ; 0x154d0 ; "re_search_stub"
0x00013649      488d35d01800.  lea rsi, str..._coreutils_8.31_lib_regexec.c ; 0x14f20 ; "../coreutils-8.31/lib/regexec.c"
0x00013650      488d3dee1900.  lea rdi, str.pmatch_0_.rm_so____start   ; 0x15045 ; "pmatch[0].rm_so == start"
0x00013657      babe010000     mov edx, 0x1be
0x0001365c      e89fe3feff     call sym.imp.__assert_fail
0x00013661      488d0d581e00.  lea rcx, obj.__PRETTY_FUNCTION__.7859   ; 0x154c0 ; "re_copy_regs"
0x00013668      488d35b11800.  lea rsi, str..._coreutils_8.31_lib_regexec.c ; 0x14f20 ; "../coreutils-8.31/lib/regexec.c"
0x0001366f      488d3db71900.  lea rdi, str.regs__num_regs____nregs    ; 0x1502d ; "regs->num_regs >= nregs"
0x00013676      bafb010000     mov edx, 0x1fb
0x0001367b      e880e3feff     call sym.imp.__assert_fail
0x00013680      488d0d391e00.  lea rcx, obj.__PRETTY_FUNCTION__.7859   ; 0x154c0 ; "re_copy_regs"
0x00013687      488d35921800.  lea rsi, str..._coreutils_8.31_lib_regexec.c ; 0x14f20 ; "../coreutils-8.31/lib/regexec.c"
0x0001368e      488d3d7b1900.  lea rdi, str.regs_allocated____REGS_FIXED ; 0x15010 ; "regs_allocated == REGS_FIXED"
0x00013695      baf9010000     mov edx, 0x1f9
0x0001369a      e861e3feff     call sym.imp.__assert_fail
0x0001369f      90             nop
;-- re_search_2_stub:
0x000136a0      4157           push r15
0x000136a2      4156           push r14
0x000136a4      4155           push r13
0x000136a6      4154           push r12
0x000136a8      4989fc         mov r12, rdi
0x000136ab      55             push rbp
0x000136ac      53             push rbx
0x000136ad      4c89c5         mov rbp, r8
0x000136b0      4889d3         mov rbx, rdx
0x000136b3      4889ea         mov rdx, rbp
0x000136b6      4883ec28       sub rsp, 0x28
0x000136ba      48c1ea3f       shr rdx, 0x3f
0x000136be      488b442470     mov rax, qword [rsp + 0x70]
0x000136c3      89d7           mov edi, edx
0x000136c5      448b442478     mov r8d, dword [rsp + 0x78]
0x000136ca      48c1e83f       shr rax, 0x3f
0x000136ce      4008c7         or dil, al
0x000136d1      0f85c9000000   jne 0x137a0
0x000136d7      4885db         test rbx, rbx
0x000136da      0f88c0000000   js 0x137a0
0x000136e0      4989df         mov r15, rbx
0x000136e3      4901ef         add r15, rbp
0x000136e6      0f80b4000000   jo 0x137a0
0x000136ec      4885ed         test rbp, rbp
0x000136ef      4989ce         mov r14, rcx
0x000136f2      4c89c9         mov rcx, r9
0x000136f5      0f84b5000000   je 0x137b0
0x000136fb      4531ed         xor r13d, r13d
0x000136fe      4885db         test rbx, rbx
0x00013701      4889742408     mov qword [rsp + 8], rsi
0x00013706      7548           jne 0x13750
0x00013708      450fb6c0       movzx r8d, r8b
0x0001370c      4c89fa         mov rdx, r15
0x0001370f      4c89f6         mov rsi, r14
0x00013712      4150           push r8
0x00013714      ff742470       push qword [rsp + 0x70]
0x00013718      4c89e7         mov rdi, r12
0x0001371b      4c8b8c248000.  mov r9, qword [rsp + 0x80]
0x00013723      4c8b442470     mov r8, qword [rsp + 0x70]
0x00013728      e8f3faffff     call sym.re_search_stub
0x0001372d      4c89ef         mov rdi, r13
0x00013730      4889c3         mov rbx, rax
0x00013733      e848e1feff     call sym.imp.free
0x00013738      58             pop rax
0x00013739      5a             pop rdx
0x0001373a      4883c428       add rsp, 0x28
0x0001373e      4889d8         mov rax, rbx
0x00013741      5b             pop rbx
0x00013742      5d             pop rbp
0x00013743      415c           pop r12
0x00013745      415d           pop r13
0x00013747      415e           pop r14
0x00013749      415f           pop r15
0x0001374b      c3             ret
0x0001374c      0f1f4000       nop dword [rax]
0x00013750      4c89ff         mov rdi, r15
0x00013753      448944241c     mov dword [rsp + 0x1c], r8d
0x00013758      4c894c2410     mov qword [rsp + 0x10], r9
0x0001375d      e85ee3feff     call sym.imp.malloc
0x00013762      4885c0         test rax, rax
0x00013765      4989c5         mov r13, rax
0x00013768      7436           je 0x137a0
0x0001376a      488b742408     mov rsi, qword [rsp + 8]
0x0001376f      4889da         mov rdx, rbx
0x00013772      4889c7         mov rdi, rax
0x00013775      e816e3feff     call sym.imp.memcpy
0x0001377a      498d7c1d00     lea rdi, [r13 + rbx]
0x0001377f      4c89f6         mov rsi, r14
0x00013782      4889ea         mov rdx, rbp
0x00013785      4d89ee         mov r14, r13
0x00013788      e803e3feff     call sym.imp.memcpy
0x0001378d      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00013792      448b44241c     mov r8d, dword [rsp + 0x1c]
0x00013797      e96cffffff     jmp 0x13708
0x0001379c      0f1f4000       nop dword [rax]
0x000137a0      48c7c3feffff.  mov rbx, 0xfffffffffffffffe
0x000137a7      eb91           jmp 0x1373a
0x000137a9      0f1f80000000.  nop dword [rax]
0x000137b0      4989f6         mov r14, rsi
0x000137b3      4531ed         xor r13d, r13d
0x000137b6      e94dffffff     jmp 0x13708
0x000137bb      0f1f440000     nop dword [rax + rax]
;-- rpl_regcomp:
0x000137c0      89d0           mov eax, edx
0x000137c2      4156           push r14
0x000137c4      4155           push r13
0x000137c6      83e001         and eax, 1
0x000137c9      4154           push r12
0x000137cb      55             push rbp
0x000137cc      83f801         cmp eax, 1
0x000137cf      53             push rbx
0x000137d0      4889fb         mov rbx, rdi
0x000137d3      4d19f6         sbb r14, r14
0x000137d6      48c707000000.  mov qword [rdi], 0
0x000137dd      48c747080000.  mov qword [rdi + 8], 0
0x000137e5      4181e6ca4ffd.  and r14d, 0xfd4fca
0x000137ec      48c747100000.  mov qword [rdi + 0x10], 0
0x000137f4      bf00010000     mov edi, 0x100
0x000137f9      4989f4         mov r12, rsi
0x000137fc      89d5           mov ebp, edx
0x000137fe      4981c6fcb203.  add r14, 0x3b2fc
0x00013805      e8b6e2feff     call sym.imp.malloc
0x0001380a      4885c0         test rax, rax
0x0001380d      48894320       mov qword [rbx + 0x20], rax
0x00013811      0f84a9000000   je 0x138c0
0x00013817      4989ed         mov r13, rbp
0x0001381a      49c1e515       shl r13, 0x15
0x0001381e      4181e5000040.  and r13d, 0x400000
0x00013825      4d09f5         or r13, r14
0x00013828      40f6c504       test bpl, 4
0x0001382c      7562           jne 0x13890
0x0001382e      8063387f       and byte [rbx + 0x38], 0x7f             ; [0x7f:1]=0
0x00013832      0fb65338       movzx edx, byte [rbx + 0x38]
0x00013836      c1ed03         shr ebp, 3
0x00013839      4c89e7         mov rdi, r12
0x0001383c      83e501         and ebp, 1
0x0001383f      48c743280000.  mov qword [rbx + 0x28], 0
0x00013847      c1e504         shl ebp, 4
0x0001384a      83e2ef         and edx, 0xffffffef                     ; 4294967279
0x0001384d      09d5           or ebp, edx
0x0001384f      40886b38       mov byte [rbx + 0x38], bpl
0x00013853      e828e1feff     call sym.imp.strlen
0x00013858      4c89e9         mov rcx, r13
0x0001385b      4889c2         mov rdx, rax
0x0001385e      4c89e6         mov rsi, r12
0x00013861      4889df         mov rdi, rbx
0x00013864      e867e7ffff     call sym.re_compile_internal
0x00013869      83f810         cmp eax, 0x10
0x0001386c      89c5           mov ebp, eax
0x0001386e      7438           je 0x138a8
0x00013870      85c0           test eax, eax
0x00013872      7539           jne 0x138ad
0x00013874      4889df         mov rdi, rbx
0x00013877      e8d4f8ffff     call sym.rpl_re_compile_fastmap
0x0001387c      5b             pop rbx
0x0001387d      89e8           mov eax, ebp
0x0001387f      5d             pop rbp
0x00013880      415c           pop r12
0x00013882      415d           pop r13
0x00013884      415e           pop r14
0x00013886      c3             ret
0x00013887      660f1f840000.  nop word [rax + rax]
0x00013890      4983e5bf       and r13, 0xffffffffffffffbf
0x00013894      804b3880       or byte [rbx + 0x38], 0x80              ; [0x80:1]=56
0x00013898      4981cd000100.  or r13, 0x100
0x0001389f      eb91           jmp 0x13832
0x000138a1      0f1f80000000.  nop dword [rax]
0x000138a8      bd08000000     mov ebp, 8
0x000138ad      488b7b20       mov rdi, qword [rbx + 0x20]
0x000138b1      e8cadffeff     call sym.imp.free
0x000138b6      48c743200000.  mov qword [rbx + 0x20], 0
0x000138be      ebbc           jmp 0x1387c
0x000138c0      bd0c000000     mov ebp, 0xc
0x000138c5      5b             pop rbx
0x000138c6      89e8           mov eax, ebp
0x000138c8      5d             pop rbp
0x000138c9      415c           pop r12
0x000138cb      415d           pop r13
0x000138cd      415e           pop r14
0x000138cf      c3             ret
;-- rpl_regerror:
0x000138d0      4155           push r13
0x000138d2      4154           push r12
0x000138d4      55             push rbp
0x000138d5      53             push rbx
0x000138d6      4883ec08       sub rsp, 8
0x000138da      83ff10         cmp edi, 0x10
0x000138dd      7761           ja 0x13940
0x000138df      488d057a1c00.  lea rax, obj.__re_error_msgid_idx       ; 0x15560
0x000138e6      4863ff         movsxd rdi, edi
0x000138e9      488d35101d00.  lea rsi, obj.__re_error_msgid           ; 0x15600 ; "Success"
0x000138f0      4889d5         mov rbp, rdx
0x000138f3      ba05000000     mov edx, 5
0x000138f8      4989cc         mov r12, rcx
0x000138fb      480334f8       add rsi, qword [rax + rdi*8]
0x000138ff      31ff           xor edi, edi
0x00013901      e85ae0feff     call sym.imp.dcgettext
0x00013906      4889c7         mov rdi, rax
0x00013909      4989c5         mov r13, rax
0x0001390c      e86fe0feff     call sym.imp.strlen
0x00013911      4d85e4         test r12, r12
0x00013914      488d5801       lea rbx, [rax + 1]
0x00013918      7413           je 0x1392d
0x0001391a      4c39e3         cmp rbx, r12
0x0001391d      4889da         mov rdx, rbx
0x00013920      7726           ja 0x13948
0x00013922      4c89ee         mov rsi, r13
0x00013925      4889ef         mov rdi, rbp
0x00013928      e863e1feff     call sym.imp.memcpy
0x0001392d      4883c408       add rsp, 8
0x00013931      4889d8         mov rax, rbx
0x00013934      5b             pop rbx
0x00013935      5d             pop rbp
0x00013936      415c           pop r12
0x00013938      415d           pop r13
0x0001393a      c3             ret
0x0001393b      0f1f440000     nop dword [rax + rax]
0x00013940      e84bdffeff     call sym.imp.abort
0x00013945      0f1f00         nop dword [rax]
0x00013948      498d5424ff     lea rdx, [r12 - 1]
0x0001394d      42c64425ff00   mov byte [rbp + r12 - 1], 0
0x00013953      ebcd           jmp 0x13922
0x00013955      90             nop
0x00013956      662e0f1f8400.  nop word cs:[rax + rax]
;-- rpl_regfree:
0x00013960      53             push rbx
0x00013961      4889fb         mov rbx, rdi
0x00013964      488b3f         mov rdi, qword [rdi]
0x00013967      4885ff         test rdi, rdi
0x0001396a      7405           je 0x13971
0x0001396c      e8df37ffff     call sym.free_dfa_content
0x00013971      488b7b20       mov rdi, qword [rbx + 0x20]
0x00013975      48c703000000.  mov qword [rbx], 0
0x0001397c      48c743080000.  mov qword [rbx + 8], 0
0x00013984      e8f7defeff     call sym.imp.free
0x00013989      488b7b28       mov rdi, qword [rbx + 0x28]
0x0001398d      48c743200000.  mov qword [rbx + 0x20], 0
0x00013995      e8e6defeff     call sym.imp.free
0x0001399a      48c743280000.  mov qword [rbx + 0x28], 0
0x000139a2      5b             pop rbx
0x000139a3      c3             ret
0x000139a4      6690           nop
0x000139a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- rpl_regexec:
0x000139b0      41f7c0f8ffff.  test r8d, 0xfffffff8                    ; 4294967288
0x000139b7      0f858b000000   jne 0x13a48
0x000139bd      4155           push r13
0x000139bf      4154           push r12
0x000139c1      4989d5         mov r13, rdx
0x000139c4      55             push rbp
0x000139c5      53             push rbx
0x000139c6      4989cc         mov r12, rcx
0x000139c9      4489c3         mov ebx, r8d
0x000139cc      4889fd         mov rbp, rdi
0x000139cf      4883ec18       sub rsp, 0x18
0x000139d3      41f6c004       test r8b, 4
0x000139d7      754f           jne 0x13a28
0x000139d9      4889f7         mov rdi, rsi
0x000139dc      4889742408     mov qword [rsp + 8], rsi
0x000139e1      e89adffeff     call sym.imp.strlen
0x000139e6      31c9           xor ecx, ecx
0x000139e8      f6453810       test byte [rbp + 0x38], 0x10
0x000139ec      4889c2         mov rdx, rax
0x000139ef      488b742408     mov rsi, qword [rsp + 8]
0x000139f4      7440           je 0x13a36
0x000139f6      4883ec08       sub rsp, 8
0x000139fa      53             push rbx
0x000139fb      6a00           push 0
0x000139fd      6a00           push 0
0x000139ff      4889ef         mov rdi, rbp
0x00013a02      4989d1         mov r9, rdx
0x00013a05      4989d0         mov r8, rdx
0x00013a08      e833a4ffff     call sym.re_search_internal
0x00013a0d      4883c420       add rsp, 0x20
0x00013a11      85c0           test eax, eax
0x00013a13      0f95c0         setne al
0x00013a16      4883c418       add rsp, 0x18
0x00013a1a      5b             pop rbx
0x00013a1b      0fb6c0         movzx eax, al
0x00013a1e      5d             pop rbp
0x00013a1f      415c           pop r12
0x00013a21      415d           pop r13
0x00013a23      c3             ret
0x00013a24      0f1f4000       nop dword [rax]
0x00013a28      f6453810       test byte [rbp + 0x38], 0x10
0x00013a2c      488b09         mov rcx, qword [rcx]
0x00013a2f      498b542408     mov rdx, qword [r12 + 8]
0x00013a34      75c0           jne 0x139f6
0x00013a36      4883ec08       sub rsp, 8
0x00013a3a      53             push rbx
0x00013a3b      4154           push r12
0x00013a3d      4155           push r13
0x00013a3f      ebbe           jmp 0x139ff
0x00013a41      0f1f80000000.  nop dword [rax]
0x00013a48      b802000000     mov eax, 2
0x00013a4d      c3             ret
0x00013a4e      6690           nop
;-- rpl_re_match:
0x00013a50      4883ec08       sub rsp, 8
0x00013a54      4989d1         mov r9, rdx
0x00013a57      6a01           push 1
0x00013a59      4150           push r8
0x00013a5b      4531c0         xor r8d, r8d
0x00013a5e      e8bdf7ffff     call sym.re_search_stub
0x00013a63      4883c418       add rsp, 0x18
0x00013a67      c3             ret
0x00013a68      0f1f84000000.  nop dword [rax + rax]
;-- rpl_re_search:
0x00013a70      4883ec08       sub rsp, 8
0x00013a74      6a00           push 0
0x00013a76      4151           push r9
0x00013a78      4989d1         mov r9, rdx
0x00013a7b      e8a0f7ffff     call sym.re_search_stub
0x00013a80      4883c418       add rsp, 0x18
0x00013a84      c3             ret
0x00013a85      90             nop
0x00013a86      662e0f1f8400.  nop word cs:[rax + rax]
;-- rpl_re_match_2:
0x00013a90      4883ec08       sub rsp, 8
0x00013a94      6a01           push 1
0x00013a96      ff742420       push qword [rsp + 0x20]
0x00013a9a      ff742420       push qword [rsp + 0x20]
0x00013a9e      6a00           push 0
0x00013aa0      e8fbfbffff     call sym.re_search_2_stub
0x00013aa5      4883c428       add rsp, 0x28
0x00013aa9      c3             ret
0x00013aaa      660f1f440000   nop word [rax + rax]
;-- rpl_re_search_2:
0x00013ab0      4883ec08       sub rsp, 8
0x00013ab4      6a00           push 0
0x00013ab6      ff742428       push qword [rsp + 0x28]
0x00013aba      ff742428       push qword [rsp + 0x28]
0x00013abe      ff742428       push qword [rsp + 0x28]
0x00013ac2      e8d9fbffff     call sym.re_search_2_stub
0x00013ac7      4883c428       add rsp, 0x28
0x00013acb      c3             ret
0x00013acc      0f1f4000       nop dword [rax]
;-- rpl_re_set_registers:
0x00013ad0      4885d2         test rdx, rdx
0x00013ad3      7523           jne 0x13af8
0x00013ad5      806738f9       and byte [rdi + 0x38], 0xf9             ; [0xf9:1]=138
0x00013ad9      48c706000000.  mov qword [rsi], 0
0x00013ae0      48c746100000.  mov qword [rsi + 0x10], 0
0x00013ae8      48c746080000.  mov qword [rsi + 8], 0
0x00013af0      c3             ret
0x00013af1      0f1f80000000.  nop dword [rax]
0x00013af8      0fb64738       movzx eax, byte [rdi + 0x38]
0x00013afc      83e0f9         and eax, 0xfffffff9                     ; 4294967289
0x00013aff      83c802         or eax, 2
0x00013b02      884738         mov byte [rdi + 0x38], al
0x00013b05      488916         mov qword [rsi], rdx
0x00013b08      48894e08       mov qword [rsi + 8], rcx
0x00013b0c      4c894610       mov qword [rsi + 0x10], r8
0x00013b10      c3             ret
0x00013b11      662e0f1f8400.  nop word cs:[rax + rax]
0x00013b1b      0f1f440000     nop dword [rax + rax]
;-- close_stream:
0x00013b20      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00013b22      55             push rbp
0x00013b23      4889fd         mov rbp, rdi
0x00013b26      53             push rbx
0x00013b27      e8b4ddfeff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x00013b2c      8b5d00         mov ebx, dword [rbp]
0x00013b2f      4889ef         mov rdi, rbp
0x00013b32      4989c4         mov r12, rax
0x00013b35      e826020000     call sym.rpl_fclose
0x00013b3a      83e320         and ebx, 0x20                           ; "@"
0x00013b3d      85db           test ebx, ebx
0x00013b3f      7517           jne 0x13b58
0x00013b41      85c0           test eax, eax
0x00013b43      740a           je 0x13b4f                              ; stdio.h:-186
0x00013b45      4d85e4         test r12, r12                           ; stdio.h:-178
0x00013b48      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00013b4d      7439           je 0x13b88
0x00013b4f      5b             pop rbx
0x00013b50      5d             pop rbp
0x00013b51      415c           pop r12
0x00013b53      c3             ret
0x00013b54      0f1f4000       nop dword [rax]
0x00013b58      85c0           test eax, eax
0x00013b5a      751c           jne 0x13b78
0x00013b5c      e83fddfeff     call sym.imp.__errno_location
0x00013b61      c70000000000   mov dword [rax], 0
0x00013b67      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00013b6c      5b             pop rbx
0x00013b6d      5d             pop rbp
0x00013b6e      415c           pop r12
0x00013b70      c3             ret
0x00013b71      0f1f80000000.  nop dword [rax]
0x00013b78      5b             pop rbx
0x00013b79      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00013b7e      5d             pop rbp                                 ; stdio.h:-186
0x00013b7f      415c           pop r12
0x00013b81      c3             ret
0x00013b82      660f1f440000   nop word [rax + rax]
0x00013b88      e813ddfeff     call sym.imp.__errno_location
0x00013b8d      833809         cmp dword [rax], 9
0x00013b90      5b             pop rbx
0x00013b91      5d             pop rbp
0x00013b92      415c           pop r12                                 ; stdio.h:-178
0x00013b94      0f95c0         setne al
0x00013b97      0fb6c0         movzx eax, al
0x00013b9a      f7d8           neg eax
0x00013b9c      c3             ret
0x00013b9d      0f1f00         nop dword [rax]
;-- last_component:
0x00013ba0      0fb617         movzx edx, byte [rdi]                   ; ../coreutils-8.31/lib/basename-lgpl.c:31
0x00013ba3      4889f8         mov rax, rdi
0x00013ba6      80fa2f         cmp dl, 0x2f                            ; ../coreutils-8.31/lib/basename-lgpl.c:36
0x00013ba9      7511           jne 0x13bbc
0x00013bab      0f1f440000     nop dword [rax + rax]
0x00013bb0      4883c001       add rax, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:37
0x00013bb4      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/basename-lgpl.c:36
0x00013bb7      80fa2f         cmp dl, 0x2f
0x00013bba      74f4           je 0x13bb0
0x00013bbc      84d2           test dl, dl                             ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x00013bbe      743a           je 0x13bfa
0x00013bc0      4889c1         mov rcx, rax
0x00013bc3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/basename-lgpl.c:34
0x00013bc5      eb1e           jmp 0x13be5
0x00013bc7      660f1f840000.  nop word [rax + rax]
0x00013bd0      4084f6         test sil, sil                           ; ../coreutils-8.31/lib/basename-lgpl.c:43
0x00013bd3      7405           je 0x13bda
0x00013bd5      4889c8         mov rax, rcx
0x00013bd8      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/basename-lgpl.c:46
0x00013bda      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x00013bde      0fb611         movzx edx, byte [rcx]
0x00013be1      84d2           test dl, dl
0x00013be3      7415           je 0x13bfa
0x00013be5      80fa2f         cmp dl, 0x2f                            ; ../coreutils-8.31/lib/basename-lgpl.c:41
0x00013be8      75e6           jne 0x13bd0
0x00013bea      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x00013bee      0fb611         movzx edx, byte [rcx]
0x00013bf1      be01000000     mov esi, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:42
0x00013bf6      84d2           test dl, dl                             ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x00013bf8      75eb           jne 0x13be5
0x00013bfa      f3c3           ret                                     ; ../coreutils-8.31/lib/basename-lgpl.c:51
0x00013bfc      0f1f4000       nop dword [rax]
;-- base_len:
0x00013c00      53             push rbx                                ; ../coreutils-8.31/lib/basename-lgpl.c:59
0x00013c01      4889fb         mov rbx, rdi
0x00013c04      e877ddfeff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/basename-lgpl.c:63
0x00013c09      4883f801       cmp rax, 1
0x00013c0d      760b           jbe 0x13c1a
0x00013c0f      807c03ff2f     cmp byte [rbx + rax - 1], 0x2f
0x00013c14      488d50ff       lea rdx, [rax - 1]
0x00013c18      740e           je 0x13c28
0x00013c1a      5b             pop rbx                                 ; ../coreutils-8.31/lib/basename-lgpl.c:75
0x00013c1b      c3             ret
0x00013c1c      0f1f4000       nop dword [rax]
0x00013c20      4889c2         mov rdx, rax                            ; ../coreutils-8.31/lib/basename-lgpl.c:63
0x00013c23      0f1f440000     nop dword [rax + rax]
0x00013c28      4883fa01       cmp rdx, 1
0x00013c2c      7412           je 0x13c40
0x00013c2e      807c13ff2f     cmp byte [rbx + rdx - 1], 0x2f
0x00013c33      488d42ff       lea rax, [rdx - 1]
0x00013c37      74e7           je 0x13c20
0x00013c39      4889d0         mov rax, rdx
0x00013c3c      5b             pop rbx                                 ; ../coreutils-8.31/lib/basename-lgpl.c:75
0x00013c3d      c3             ret
0x00013c3e      6690           nop
0x00013c40      b801000000     mov eax, 1
0x00013c45      5b             pop rbx
0x00013c46      c3             ret
0x00013c47      660f1f840000.  nop word [rax + rax]
;-- fd_safer_flag:
0x00013c50      4155           push r13                                ; ../coreutils-8.31/lib/fd-safer-flag.c:41
0x00013c52      4154           push r12
0x00013c54      55             push rbp
0x00013c55      53             push rbx
0x00013c56      89fb           mov ebx, edi
0x00013c58      4883ec08       sub rsp, 8
0x00013c5c      83ff02         cmp edi, 2                              ; ../coreutils-8.31/lib/fd-safer-flag.c:42
0x00013c5f      7721           ja 0x13c82
0x00013c61      e82a000000     call sym.dup_safer_flag                 ; ../coreutils-8.31/lib/fd-safer-flag.c:44
0x00013c66      4189c4         mov r12d, eax
0x00013c69      e832dcfeff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fd-safer-flag.c:45
0x00013c6e      448b28         mov r13d, dword [rax]
0x00013c71      4889c5         mov rbp, rax
0x00013c74      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fd-safer-flag.c:46
0x00013c76      e8a5ddfeff     call sym.imp.close
0x00013c7b      4489e3         mov ebx, r12d                           ; ../coreutils-8.31/lib/fd-safer-flag.c:48
0x00013c7e      44896d00       mov dword [rbp], r13d                   ; ../coreutils-8.31/lib/fd-safer-flag.c:47
0x00013c82      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fd-safer-flag.c:52
0x00013c86      89d8           mov eax, ebx
0x00013c88      5b             pop rbx
0x00013c89      5d             pop rbp
0x00013c8a      415c           pop r12
0x00013c8c      415d           pop r13
0x00013c8e      c3             ret
0x00013c8f      90             nop
;-- dup_safer_flag:
0x00013c90      81e600000800   and esi, 0x80000                        ; ../coreutils-8.31/lib/dup-safer-flag.c:35
0x00013c96      b806040000     mov eax, 0x406
0x00013c9b      ba03000000     mov edx, 3
0x00013ca0      0f45f0         cmovne esi, eax
0x00013ca3      31c0           xor eax, eax
0x00013ca5      e936010000     jmp sym.rpl_fcntl
0x00013caa      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/dup-safer-flag.c:36
;-- hard_locale:
0x00013cb0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00013cb4      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00013cb6      e895defeff     call sym.imp.setlocale
0x00013cbb      4889c2         mov rdx, rax
0x00013cbe      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00013cc3      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00013cc6      741d           je 0x13ce5
0x00013cc8      488d3dc11a00.  lea rdi, [0x00015790]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x00013ccf      b902000000     mov ecx, 2
0x00013cd4      4889d6         mov rsi, rdx
0x00013cd7      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00013cd9      0f97c1         seta cl
0x00013cdc      80d900         sbb cl, 0
0x00013cdf      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00013ce1      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00013ce3      750b           jne 0x13cf0
0x00013ce5      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00013ce9      c3             ret
0x00013cea      660f1f440000   nop word [rax + rax]
0x00013cf0      488d3d9b1a00.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x15792 ; "POSIX"
0x00013cf7      b906000000     mov ecx, 6
0x00013cfc      4889d6         mov rsi, rdx
0x00013cff      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00013d01      0f97c0         seta al
0x00013d04      1c00           sbb al, 0
0x00013d06      84c0           test al, al
0x00013d08      0f95c0         setne al
0x00013d0b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00013d0f      c3             ret
;-- locale_charset:
0x00013d10      4883ec08       sub rsp, 8
0x00013d14      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00013d19      e8d2ddfeff     call sym.imp.nl_langinfo
0x00013d1e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00013d21      741d           je 0x13d40
0x00013d23      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00013d26      488d156b1a00.  lea rdx, str.ASCII                      ; 0x15798 ; "ASCII"
0x00013d2d      480f44c2       cmove rax, rdx
0x00013d31      4883c408       add rsp, 8
0x00013d35      c3             ret
0x00013d36      662e0f1f8400.  nop word cs:[rax + rax]
0x00013d40      488d05511a00.  lea rax, str.ASCII                      ; 0x15798 ; "ASCII"
0x00013d47      4883c408       add rsp, 8
0x00013d4b      c3             ret
0x00013d4c      0f1f4000       nop dword [rax]
;-- dup_safer:
0x00013d50      ba03000000     mov edx, 3                              ; ../coreutils-8.31/lib/dup-safer.c:32
0x00013d55      31f6           xor esi, esi
0x00013d57      31c0           xor eax, eax
0x00013d59      e982000000     jmp sym.rpl_fcntl
0x00013d5e      6690           nop                                     ; ../coreutils-8.31/lib/dup-safer.c:33
;-- rpl_fclose:
0x00013d60      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00013d62      55             push rbp
0x00013d63      53             push rbx
0x00013d64      4889fb         mov rbx, rdi
0x00013d67      e834ddfeff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x00013d6c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x00013d6e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00013d71      7854           js 0x13dc7                              ; ../coreutils-8.31/lib/fclose.c:66
0x00013d73      e898ddfeff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00013d78      85c0           test eax, eax
0x00013d7a      752c           jne 0x13da8
0x00013d7c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x00013d7f      e8dc020000     call sym.rpl_fflush
0x00013d84      85c0           test eax, eax
0x00013d86      743c           je 0x13dc4
0x00013d88      e813dbfeff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x00013d8d      448b20         mov r12d, dword [rax]
0x00013d90      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00013d93      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00013d96      e8a5dbfeff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x00013d9b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x00013d9e      7530           jne 0x13dd0
0x00013da0      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00013da1      5d             pop rbp
0x00013da2      415c           pop r12
0x00013da4      c3             ret
0x00013da5      0f1f00         nop dword [rax]
0x00013da8      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x00013dab      e8f0dcfeff     call sym.imp.fileno
0x00013db0      31f6           xor esi, esi
0x00013db2      ba01000000     mov edx, 1
0x00013db7      89c7           mov edi, eax
0x00013db9      e832dcfeff     call sym.imp.lseek
0x00013dbe      4883f8ff       cmp rax, 0xffffffffffffffff
0x00013dc2      75b8           jne 0x13d7c
0x00013dc4      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00013dc7      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00013dc8      5d             pop rbp
0x00013dc9      415c           pop r12
0x00013dcb      e970dbfeff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00013dd0      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00013dd4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00013dd9      ebc5           jmp 0x13da0
0x00013ddb      0f1f440000     nop dword [rax + rax]
;-- rpl_fcntl:
0x00013de0      4154           push r12                                ; ../coreutils-8.31/lib/fcntl.c:206
0x00013de2      55             push rbp
0x00013de3      89fd           mov ebp, edi
0x00013de5      53             push rbx
0x00013de6      4883ec50       sub rsp, 0x50
0x00013dea      64488b042528.  mov rax, qword fs:[0x28]
0x00013df3      4889442418     mov qword [rsp + 0x18], rax
0x00013df8      31c0           xor eax, eax
0x00013dfa      488d442470     lea rax, [rsp + 0x70]                   ; ../coreutils-8.31/lib/fcntl.c:209
0x00013dff      85f6           test esi, esi                           ; ../coreutils-8.31/lib/fcntl.c:210
0x00013e01      4889542430     mov qword [rsp + 0x30], rdx             ; ../coreutils-8.31/lib/fcntl.c:206
0x00013e06      48894c2438     mov qword [rsp + 0x38], rcx
0x00013e0b      4c89442440     mov qword [rsp + 0x40], r8
0x00013e10      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/fcntl.c:209
0x00013e15      488d442420     lea rax, [rsp + 0x20]
0x00013e1a      4c894c2448     mov qword [rsp + 0x48], r9              ; ../coreutils-8.31/lib/fcntl.c:206
0x00013e1f      c70424100000.  mov dword [rsp], 0x10                   ; ../coreutils-8.31/lib/fcntl.c:209 ; [0x10:4]=0x3e0003
0x00013e26      4889442410     mov qword [rsp + 0x10], rax
0x00013e2b      0f8401020000   je 0x14032                              ; ../coreutils-8.31/lib/fcntl.c:210
0x00013e31      81fe06040000   cmp esi, 0x406
0x00013e37      7547           jne 0x13e80
0x00013e39      488b442410     mov rax, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/fcntl.c:221
0x00013e3e      833db3752000.  cmp dword [obj.have_dupfd_cloexec.3326], 0 ; ../coreutils-8.31/lib/fcntl.c:507 ; [0x21b3f8:4]=0
0x00013e45      c70424180000.  mov dword [rsp], 0x18                   ; ../coreutils-8.31/lib/fcntl.c:221 ; [0x18:4]=0x2420 rip
0x00013e4c      448b6010       mov r12d, dword [rax + 0x10]
0x00013e50      4489e2         mov edx, r12d                           ; ../coreutils-8.31/lib/fcntl.c:509
0x00013e53      0f882a010000   js 0x13f83                              ; ../coreutils-8.31/lib/fcntl.c:507
0x00013e59      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x00013e5b      be06040000     mov esi, 0x406
0x00013e60      e89bdafeff     call sym.imp.fcntl
0x00013e65      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fcntl.c:510
0x00013e67      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x00013e69      0f8889010000   js 0x13ff8                              ; ../coreutils-8.31/lib/fcntl.c:510
0x00013e6f      c7057f752000.  mov dword [obj.have_dupfd_cloexec.3326], 1 ; ../coreutils-8.31/lib/fcntl.c:512 ; [0x21b3f8:4]=0
0x00013e79      eb45           jmp 0x13ec0
0x00013e7b      0f1f440000     nop dword [rax + rax]
0x00013e80      83fe0b         cmp esi, 0xb                            ; ../coreutils-8.31/lib/fcntl.c:258
0x00013e83      742b           je 0x13eb0
0x00013e85      7f59           jg 0x13ee0
0x00013e87      83fe04         cmp esi, 4
0x00013e8a      0f84d0000000   je 0x13f60
0x00013e90      0f8fba000000   jg 0x13f50
0x00013e96      83fe02         cmp esi, 2
0x00013e99      0f84c1000000   je 0x13f60
0x00013e9f      7f0f           jg 0x13eb0
0x00013ea1      83fe01         cmp esi, 1
0x00013ea4      7562           jne 0x13f08
0x00013ea6      662e0f1f8400.  nop word cs:[rax + rax]
0x00013eb0      89ef           mov edi, ebp
0x00013eb2      31c0           xor eax, eax
0x00013eb4      e847dafeff     call sym.imp.fcntl
0x00013eb9      89c3           mov ebx, eax
0x00013ebb      0f1f440000     nop dword [rax + rax]
0x00013ec0      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00013ec5      6448330c2528.  xor rcx, qword fs:[0x28]
0x00013ece      89d8           mov eax, ebx
0x00013ed0      0f8557010000   jne 0x1402d                             ; ../coreutils-8.31/lib/fcntl.c:355
0x00013ed6      4883c450       add rsp, 0x50
0x00013eda      5b             pop rbx
0x00013edb      5d             pop rbp
0x00013edc      415c           pop r12
0x00013ede      c3             ret
0x00013edf      90             nop
0x00013ee0      81fe07040000   cmp esi, 0x407
0x00013ee6      7f48           jg 0x13f30
0x00013ee8      81fe06040000   cmp esi, 0x406
0x00013eee      7d70           jge 0x13f60
0x00013ef0      81fe01040000   cmp esi, 0x401
0x00013ef6      74b8           je 0x13eb0
0x00013ef8      81fe02040000   cmp esi, 0x402                          ; ../coreutils-8.31/lib/fcntl.c:183
0x00013efe      7460           je 0x13f60
0x00013f00      81fe00040000   cmp esi, 0x400
0x00013f06      7458           je 0x13f60
0x00013f08      8b0424         mov eax, dword [rsp]
0x00013f0b      83f82f         cmp eax, 0x2f
0x00013f0e      0f8736010000   ja 0x1404a
0x00013f14      4803442410     add rax, qword [rsp + 0x10]
0x00013f19      488b10         mov rdx, qword [rax]
0x00013f1c      89ef           mov edi, ebp
0x00013f1e      31c0           xor eax, eax
0x00013f20      e8dbd9feff     call sym.imp.fcntl
0x00013f25      89c3           mov ebx, eax
0x00013f27      eb97           jmp 0x13ec0
0x00013f29      0f1f80000000.  nop dword [rax]
0x00013f30      81fe09040000   cmp esi, 0x409
0x00013f36      7428           je 0x13f60
0x00013f38      0f8c72ffffff   jl 0x13eb0
0x00013f3e      81fe0a040000   cmp esi, 0x40a
0x00013f44      75c2           jne 0x13f08
0x00013f46      e965ffffff     jmp 0x13eb0                             ; ../coreutils-8.31/lib/fcntl.c:350
0x00013f4b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fcntl.c:406
0x00013f50      83fe09         cmp esi, 9
0x00013f53      0f8457ffffff   je 0x13eb0
0x00013f59      7f05           jg 0x13f60
0x00013f5b      83fe08         cmp esi, 8
0x00013f5e      75a8           jne 0x13f08
0x00013f60      8b0424         mov eax, dword [rsp]
0x00013f63      83f82f         cmp eax, 0x2f
0x00013f66      0f87e8000000   ja 0x14054
0x00013f6c      4803442410     add rax, qword [rsp + 0x10]
0x00013f71      8b10           mov edx, dword [rax]
0x00013f73      89ef           mov edi, ebp
0x00013f75      31c0           xor eax, eax
0x00013f77      e884d9feff     call sym.imp.fcntl
0x00013f7c      89c3           mov ebx, eax
0x00013f7e      e93dffffff     jmp 0x13ec0
0x00013f83      31f6           xor esi, esi
0x00013f85      31c0           xor eax, eax
0x00013f87      e874d9feff     call sym.imp.fcntl
0x00013f8c      85c0           test eax, eax
0x00013f8e      89c3           mov ebx, eax
0x00013f90      0f882affffff   js 0x13ec0
0x00013f96      833d5b742000.  cmp dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x21b3f8:4]=0
0x00013f9d      0f851dffffff   jne 0x13ec0
0x00013fa3      31c0           xor eax, eax
0x00013fa5      be01000000     mov esi, 1
0x00013faa      89df           mov edi, ebx
0x00013fac      e84fd9feff     call sym.imp.fcntl
0x00013fb1      85c0           test eax, eax
0x00013fb3      781c           js 0x13fd1
0x00013fb5      83c801         or eax, 1
0x00013fb8      be02000000     mov esi, 2
0x00013fbd      89df           mov edi, ebx
0x00013fbf      89c2           mov edx, eax
0x00013fc1      31c0           xor eax, eax
0x00013fc3      e838d9feff     call sym.imp.fcntl
0x00013fc8      83f8ff         cmp eax, 0xffffffff
0x00013fcb      0f85effeffff   jne 0x13ec0
0x00013fd1      e8cad8feff     call sym.imp.__errno_location
0x00013fd6      448b20         mov r12d, dword [rax]
0x00013fd9      4889c5         mov rbp, rax
0x00013fdc      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fcntl.c:446
0x00013fde      e83ddafeff     call sym.imp.close                      ; ../coreutils-8.31/lib/fcntl.c:406
0x00013fe3      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x00013fe8      44896500       mov dword [rbp], r12d
0x00013fec      e9cffeffff     jmp 0x13ec0
0x00013ff1      0f1f80000000.  nop dword [rax]
0x00013ff8      e8a3d8feff     call sym.imp.__errno_location
0x00013ffd      833816         cmp dword [rax], 0x16
0x00014000      0f8569feffff   jne 0x13e6f
0x00014006      31f6           xor esi, esi
0x00014008      31c0           xor eax, eax
0x0001400a      4489e2         mov edx, r12d
0x0001400d      89ef           mov edi, ebp                            ; ../coreutils-8.31/lib/fcntl.c:141
0x0001400f      e8ecd8feff     call sym.imp.fcntl
0x00014014      85c0           test eax, eax
0x00014016      89c3           mov ebx, eax
0x00014018      0f88a2feffff   js 0x13ec0
0x0001401e      c705d0732000.  mov dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x21b3f8:4]=0
0x00014028      e976ffffff     jmp 0x13fa3
0x0001402d      e85ed9feff     call sym.imp.__stack_chk_fail
0x00014032      488b442410     mov rax, qword [rsp + 0x10]
0x00014037      31f6           xor esi, esi
0x00014039      8b5010         mov edx, dword [rax + 0x10]
0x0001403c      31c0           xor eax, eax
0x0001403e      e8bdd8feff     call sym.imp.fcntl
0x00014043      89c3           mov ebx, eax
0x00014045      e976feffff     jmp 0x13ec0
0x0001404a      488b442408     mov rax, qword [rsp + 8]
0x0001404f      e9c5feffff     jmp 0x13f19
0x00014054      488b442408     mov rax, qword [rsp + 8]
0x00014059      e913ffffff     jmp 0x13f71
0x0001405e      6690           nop
;-- rpl_fflush:
0x00014060      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00014063      53             push rbx
0x00014064      4889fb         mov rbx, rdi
0x00014067      7411           je 0x1407a                              ; ../coreutils-8.31/lib/fflush.c:150
0x00014069      e8a2dafeff     call sym.imp.__freading
0x0001406e      85c0           test eax, eax
0x00014070      7408           je 0x1407a
0x00014072      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00014078      750e           jne 0x14088
0x0001407a      4889df         mov rdi, rbx
0x0001407d      5b             pop rbx
0x0001407e      e95ddafeff     jmp sym.imp.fflush
0x00014083      0f1f440000     nop dword [rax + rax]
0x00014088      4889df         mov rdi, rbx
0x0001408b      ba01000000     mov edx, 1
0x00014090      31f6           xor esi, esi
0x00014092      e88917ffff     call sym.rpl_fseeko
0x00014097      4889df         mov rdi, rbx
0x0001409a      5b             pop rbx
0x0001409b      e940dafeff     jmp sym.imp.fflush
;-- __libc_csu_init:
0x000140a0      4157           push r15
0x000140a2      4156           push r14
0x000140a4      4989d7         mov r15, rdx
0x000140a7      4155           push r13
0x000140a9      4154           push r12
0x000140ab      4c8d25be4920.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x218a70 ; " %"
0x000140b2      55             push rbp
0x000140b3      488d2dbe4920.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x218a78
0x000140ba      53             push rbx
0x000140bb      4189fd         mov r13d, edi
0x000140be      4989f6         mov r14, rsi
0x000140c1      4c29e5         sub rbp, r12
0x000140c4      4883ec08       sub rsp, 8
0x000140c8      48c1fd03       sar rbp, 3
0x000140cc      e867d7feff     call sym._init
0x000140d1      4885ed         test rbp, rbp
0x000140d4      7420           je 0x140f6
0x000140d6      31db           xor ebx, ebx
0x000140d8      0f1f84000000.  nop dword [rax + rax]
0x000140e0      4c89fa         mov rdx, r15
0x000140e3      4c89f6         mov rsi, r14
0x000140e6      4489ef         mov edi, r13d
0x000140e9      41ff14dc       call qword [r12 + rbx*8]
0x000140ed      4883c301       add rbx, 1
0x000140f1      4839dd         cmp rbp, rbx
0x000140f4      75ea           jne 0x140e0
0x000140f6      4883c408       add rsp, 8
0x000140fa      5b             pop rbx
0x000140fb      5d             pop rbp
0x000140fc      415c           pop r12
0x000140fe      415d           pop r13
0x00014100      415e           pop r14
0x00014102      415f           pop r15
0x00014104      c3             ret
0x00014105      90             nop
0x00014106      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00014110      f3c3           ret
0x00014112      662e0f1f8400.  nop word cs:[rax + rax]
0x0001411c      0f1f4000       nop dword [rax]
;-- atexit:
0x00014120      488b15e14e20.  mov rdx, qword [obj.__dso_handle]       ; [0x219008:8]=0x219008 obj.__dso_handle
0x00014127      31f6           xor esi, esi
0x00014129      e9c2dafeff     jmp sym.imp.__cxa_atexit
0x0001412e      0000           add byte [rax], al
