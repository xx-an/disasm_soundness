;-- section..plt:
;-- .plt:
0x00002400      ff35eae92000   push qword [0x00210df0]                 ; [12] -r-x section size 960 named .plt
0x00002406      ff25ece92000   jmp qword [0x00210df8]                  ; [0x210df8:8]=0
0x0000240c      0f1f4000       nop dword [rax]
;-- imp.getenv:
0x00002410      ff25eae92000   jmp qword [reloc.getenv]                ; [0x210e00:8]=0x2416
0x00002416      6800000000     push 0
0x0000241b      e9e0ffffff     jmp sym..plt
;-- imp.__snprintf_chk:
0x00002420      ff25e2e92000   jmp qword [reloc.__snprintf_chk]        ; [0x210e08:8]=0x2426 ; "&$"
0x00002426      6801000000     push 1
0x0000242b      e9d0ffffff     jmp sym..plt
;-- imp.free:
0x00002430      ff25dae92000   jmp qword [reloc.free]                  ; [0x210e10:8]=0x2436 ; "6$"
0x00002436      6802000000     push 2
0x0000243b      e9c0ffffff     jmp sym..plt
;-- imp.abort:
0x00002440      ff25d2e92000   jmp qword [reloc.abort]                 ; [0x210e18:8]=0x2446 ; "F$"
0x00002446      6803000000     push 3
0x0000244b      e9b0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x00002450      ff25cae92000   jmp qword [reloc.__errno_location]      ; [0x210e20:8]=0x2456 ; "V$"
0x00002456      6804000000     push 4
0x0000245b      e9a0ffffff     jmp sym..plt
;-- imp.strncmp:
0x00002460      ff25c2e92000   jmp qword [reloc.strncmp]               ; [0x210e28:8]=0x2466 ; "f$"
0x00002466      6805000000     push 5
0x0000246b      e990ffffff     jmp sym..plt
;-- imp._exit:
0x00002470      ff25bae92000   jmp qword [reloc._exit]                 ; [0x210e30:8]=0x2476 ; "v$"
0x00002476      6806000000     push 6
0x0000247b      e980ffffff     jmp sym..plt
;-- imp.__fpending:
0x00002480      ff25b2e92000   jmp qword [reloc.__fpending]            ; [0x210e38:8]=0x2486
0x00002486      6807000000     push 7
0x0000248b      e970ffffff     jmp sym..plt
;-- imp.fcntl:
0x00002490      ff25aae92000   jmp qword [reloc.fcntl]                 ; [0x210e40:8]=0x2496
0x00002496      6808000000     push 8
0x0000249b      e960ffffff     jmp sym..plt
;-- imp.cfgetispeed:
0x000024a0      ff25a2e92000   jmp qword [reloc.cfgetispeed]           ; [0x210e48:8]=0x24a6
0x000024a6      6809000000     push 9
0x000024ab      e950ffffff     jmp sym..plt
;-- imp.textdomain:
0x000024b0      ff259ae92000   jmp qword [reloc.textdomain]            ; [0x210e50:8]=0x24b6
0x000024b6      680a000000     push 0xa
0x000024bb      e940ffffff     jmp sym..plt
;-- imp.fclose:
0x000024c0      ff2592e92000   jmp qword [reloc.fclose]                ; [0x210e58:8]=0x24c6
0x000024c6      680b000000     push 0xb
0x000024cb      e930ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x000024d0      ff258ae92000   jmp qword [reloc.bindtextdomain]        ; [0x210e60:8]=0x24d6
0x000024d6      680c000000     push 0xc
0x000024db      e920ffffff     jmp sym..plt
;-- imp.cfsetospeed:
0x000024e0      ff2582e92000   jmp qword [reloc.cfsetospeed]           ; [0x210e68:8]=0x24e6
0x000024e6      680d000000     push 0xd
0x000024eb      e910ffffff     jmp sym..plt
;-- imp.dcgettext:
0x000024f0      ff257ae92000   jmp qword [reloc.dcgettext]             ; [0x210e70:8]=0x24f6
0x000024f6      680e000000     push 0xe
0x000024fb      e900ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00002500      ff2572e92000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x210e78:8]=0x2506
0x00002506      680f000000     push 0xf
0x0000250b      e9f0feffff     jmp sym..plt
;-- imp.strlen:
0x00002510      ff256ae92000   jmp qword [reloc.strlen]                ; [0x210e80:8]=0x2516
0x00002516      6810000000     push 0x10
0x0000251b      e9e0feffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00002520      ff2562e92000   jmp qword [reloc.__stack_chk_fail]      ; [0x210e88:8]=0x2526 ; "&%"
0x00002526      6811000000     push 0x11
0x0000252b      e9d0feffff     jmp sym..plt
;-- imp.getopt_long:
0x00002530      ff255ae92000   jmp qword [reloc.getopt_long]           ; [0x210e90:8]=0x2536 ; "6%"
0x00002536      6812000000     push 0x12
0x0000253b      e9c0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00002540      ff2552e92000   jmp qword [reloc.mbrtowc]               ; [0x210e98:8]=0x2546 ; "F%"
0x00002546      6813000000     push 0x13
0x0000254b      e9b0feffff     jmp sym..plt
;-- imp.dup2:
0x00002550      ff254ae92000   jmp qword [reloc.dup2]                  ; [0x210ea0:8]=0x2556 ; "V%"
0x00002556      6814000000     push 0x14
0x0000255b      e9a0feffff     jmp sym..plt
;-- imp.strchr:
0x00002560      ff2542e92000   jmp qword [reloc.strchr]                ; [0x210ea8:8]=0x2566 ; "f%"
0x00002566      6815000000     push 0x15
0x0000256b      e990feffff     jmp sym..plt
;-- imp.__overflow:
0x00002570      ff253ae92000   jmp qword [reloc.__overflow]            ; [0x210eb0:8]=0x2576 ; "v%"
0x00002576      6816000000     push 0x16
0x0000257b      e980feffff     jmp sym..plt
;-- imp.strrchr:
0x00002580      ff2532e92000   jmp qword [reloc.strrchr]               ; [0x210eb8:8]=0x2586
0x00002586      6817000000     push 0x17
0x0000258b      e970feffff     jmp sym..plt
;-- imp.lseek:
0x00002590      ff252ae92000   jmp qword [reloc.lseek]                 ; [0x210ec0:8]=0x2596
0x00002596      6818000000     push 0x18
0x0000259b      e960feffff     jmp sym..plt
;-- imp.__assert_fail:
0x000025a0      ff2522e92000   jmp qword [reloc.__assert_fail]         ; [0x210ec8:8]=0x25a6
0x000025a6      6819000000     push 0x19
0x000025ab      e950feffff     jmp sym..plt
;-- imp.__strtoul_internal:
0x000025b0      ff251ae92000   jmp qword [reloc.__strtoul_internal]    ; [0x210ed0:8]=0x25b6
0x000025b6      681a000000     push 0x1a
0x000025bb      e940feffff     jmp sym..plt
;-- imp.memset:
0x000025c0      ff2512e92000   jmp qword [reloc.memset]                ; [0x210ed8:8]=0x25c6
0x000025c6      681b000000     push 0x1b
0x000025cb      e930feffff     jmp sym..plt
;-- imp.ioctl:
0x000025d0      ff250ae92000   jmp qword [reloc.ioctl]                 ; [0x210ee0:8]=0x25d6
0x000025d6      681c000000     push 0x1c
0x000025db      e920feffff     jmp sym..plt
;-- imp.close:
0x000025e0      ff2502e92000   jmp qword [reloc.close]                 ; [0x210ee8:8]=0x25e6
0x000025e6      681d000000     push 0x1d
0x000025eb      e910feffff     jmp sym..plt
;-- imp.memcmp:
0x000025f0      ff25fae82000   jmp qword [reloc.memcmp]                ; [0x210ef0:8]=0x25f6
0x000025f6      681e000000     push 0x1e
0x000025fb      e900feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00002600      ff25f2e82000   jmp qword [reloc.fputs_unlocked]        ; [0x210ef8:8]=0x2606
0x00002606      681f000000     push 0x1f
0x0000260b      e9f0fdffff     jmp sym..plt
;-- imp.calloc:
0x00002610      ff25eae82000   jmp qword [reloc.calloc]                ; [0x210f00:8]=0x2616
0x00002616      6820000000     push 0x20                               ; "@"
0x0000261b      e9e0fdffff     jmp sym..plt
;-- imp.strcmp:
0x00002620      ff25e2e82000   jmp qword [reloc.strcmp]                ; [0x210f08:8]=0x2626 ; "&&"
0x00002626      6821000000     push 0x21                               ; '!'
0x0000262b      e9d0fdffff     jmp sym..plt
;-- imp.strtol:
0x00002630      ff25dae82000   jmp qword [reloc.strtol]                ; [0x210f10:8]=0x2636 ; "6&"
0x00002636      6822000000     push 0x22                               ; '"'
0x0000263b      e9c0fdffff     jmp sym..plt
;-- imp.memcpy:
0x00002640      ff25d2e82000   jmp qword [reloc.memcpy]                ; [0x210f18:8]=0x2646 ; "F&"
0x00002646      6823000000     push 0x23                               ; '#'
0x0000264b      e9b0fdffff     jmp sym..plt
;-- imp.fileno:
0x00002650      ff25cae82000   jmp qword [reloc.fileno]                ; [0x210f20:8]=0x2656 ; "V&"
0x00002656      6824000000     push 0x24                               ; '$'
0x0000265b      e9a0fdffff     jmp sym..plt
;-- imp.malloc:
0x00002660      ff25c2e82000   jmp qword [reloc.malloc]                ; [0x210f28:8]=0x2666 ; "f&"
0x00002666      6825000000     push 0x25                               ; '%'
0x0000266b      e990fdffff     jmp sym..plt
;-- imp.fflush:
0x00002670      ff25bae82000   jmp qword [reloc.fflush]                ; [0x210f30:8]=0x2676 ; "v&"
0x00002676      6826000000     push 0x26                               ; '&'
0x0000267b      e980fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00002680      ff25b2e82000   jmp qword [reloc.nl_langinfo]           ; [0x210f38:8]=0x2686
0x00002686      6827000000     push 0x27                               ; '''
0x0000268b      e970fdffff     jmp sym..plt
;-- imp.__freading:
0x00002690      ff25aae82000   jmp qword [reloc.__freading]            ; [0x210f40:8]=0x2696
0x00002696      6828000000     push 0x28                               ; '('
0x0000269b      e960fdffff     jmp sym..plt
;-- imp.realloc:
0x000026a0      ff25a2e82000   jmp qword [reloc.realloc]               ; [0x210f48:8]=0x26a6
0x000026a6      6829000000     push 0x29                               ; ')'
0x000026ab      e950fdffff     jmp sym..plt
;-- imp.setlocale:
0x000026b0      ff259ae82000   jmp qword [reloc.setlocale]             ; [0x210f50:8]=0x26b6
0x000026b6      682a000000     push 0x2a                               ; '*'
0x000026bb      e940fdffff     jmp sym..plt
;-- imp.cfgetospeed:
0x000026c0      ff2592e82000   jmp qword [reloc.cfgetospeed]           ; [0x210f58:8]=0x26c6
0x000026c6      682b000000     push 0x2b                               ; '+'
0x000026cb      e930fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x000026d0      ff258ae82000   jmp qword [reloc.__printf_chk]          ; [0x210f60:8]=0x26d6
0x000026d6      682c000000     push 0x2c                               ; ','
0x000026db      e920fdffff     jmp sym..plt
;-- imp.error:
0x000026e0      ff2582e82000   jmp qword [reloc.error]                 ; [0x210f68:8]=0x26e6
0x000026e6      682d000000     push 0x2d                               ; '-'
0x000026eb      e910fdffff     jmp sym..plt
;-- imp.tcgetattr:
0x000026f0      ff257ae82000   jmp qword [reloc.tcgetattr]             ; [0x210f70:8]=0x26f6
0x000026f6      682e000000     push 0x2e                               ; '.'
0x000026fb      e900fdffff     jmp sym..plt
;-- imp.tcsetattr:
0x00002700      ff2572e82000   jmp qword [reloc.tcsetattr]             ; [0x210f78:8]=0x2706
0x00002706      682f000000     push 0x2f                               ; '/'
0x0000270b      e9f0fcffff     jmp sym..plt
;-- imp.open:
0x00002710      ff256ae82000   jmp qword [reloc.open]                  ; [0x210f80:8]=0x2716
0x00002716      6830000000     push 0x30                               ; '0'
0x0000271b      e9e0fcffff     jmp sym..plt
;-- imp.fseeko:
0x00002720      ff2562e82000   jmp qword [reloc.fseeko]                ; [0x210f88:8]=0x2726 ; "&'"
0x00002726      6831000000     push 0x31                               ; '1'
0x0000272b      e9d0fcffff     jmp sym..plt
;-- imp.cfsetispeed:
0x00002730      ff255ae82000   jmp qword [reloc.cfsetispeed]           ; [0x210f90:8]=0x2736 ; "6'"
0x00002736      6832000000     push 0x32                               ; '2'
0x0000273b      e9c0fcffff     jmp sym..plt
;-- imp.strtoul:
0x00002740      ff2552e82000   jmp qword [reloc.strtoul]               ; [0x210f98:8]=0x2746 ; "F'"
0x00002746      6833000000     push 0x33                               ; '3'
0x0000274b      e9b0fcffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00002750      ff254ae82000   jmp qword [reloc.__cxa_atexit]          ; [0x210fa0:8]=0x2756 ; "V'"
0x00002756      6834000000     push 0x34                               ; '4'
0x0000275b      e9a0fcffff     jmp sym..plt
;-- imp.exit:
0x00002760      ff2542e82000   jmp qword [reloc.exit]                  ; [0x210fa8:8]=0x2766 ; "f'"
0x00002766      6835000000     push 0x35                               ; '5'
0x0000276b      e990fcffff     jmp sym..plt
;-- imp.fwrite:
0x00002770      ff253ae82000   jmp qword [reloc.fwrite]                ; [0x210fb0:8]=0x2776 ; "v'"
0x00002776      6836000000     push 0x36                               ; '6'
0x0000277b      e980fcffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00002780      ff2532e82000   jmp qword [reloc.__fprintf_chk]         ; [0x210fb8:8]=0x2786
0x00002786      6837000000     push 0x37                               ; '7'
0x0000278b      e970fcffff     jmp sym..plt
;-- imp.mbsinit:
0x00002790      ff252ae82000   jmp qword [reloc.mbsinit]               ; [0x210fc0:8]=0x2796
0x00002796      6838000000     push 0x38                               ; '8'
0x0000279b      e960fcffff     jmp sym..plt
;-- imp.iswprint:
0x000027a0      ff2522e82000   jmp qword [reloc.iswprint]              ; [0x210fc8:8]=0x27a6
0x000027a6      6839000000     push 0x39                               ; '9'
0x000027ab      e950fcffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x000027b0      ff251ae82000   jmp qword [reloc.__ctype_b_loc]         ; [0x210fd0:8]=0x27b6
0x000027b6      683a000000     push 0x3a                               ; ':'
0x000027bb      e940fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x000027c0      .qword 0x90660020e83225ff                              ; [13] -r-x section size 8 named .plt.got
0x000027c8      0000           add byte [rax], al
0x000027ca      0000           add byte [rax], al
0x000027cc      0000           add byte [rax], al
0x000027ce      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x000027d0      4157           push r15                                ; [14] -r-x section size 35582 named .text
0x000027d2      4156           push r14
0x000027d4      41bf01000000   mov r15d, 1
0x000027da      4155           push r13
0x000027dc      4154           push r12
0x000027de      4189fd         mov r13d, edi
0x000027e1      55             push rbp
0x000027e2      53             push rbx
0x000027e3      4889f3         mov rbx, rsi
0x000027e6      4531f6         xor r14d, r14d
0x000027e9      4531e4         xor r12d, r12d
0x000027ec      31ed           xor ebp, ebp
0x000027ee      4883ec28       sub rsp, 0x28
0x000027f2      488b3e         mov rdi, qword [rsi]
0x000027f5      64488b042528.  mov rax, qword fs:[0x28]
0x000027fe      4889442418     mov qword [rsp + 0x18], rax
0x00002803      31c0           xor eax, eax
0x00002805      e866320000     call sym.set_program_name
0x0000280a      488d3530b800.  lea rsi, [0x0000e041]
0x00002811      bf06000000     mov edi, 6
0x00002816      e895feffff     call sym.imp.setlocale
0x0000281b      488d358e8d00.  lea rsi, str.usr_local_share_locale     ; 0xb5b0 ; "/usr/local/share/locale"
0x00002822      488d3d4b8c00.  lea rdi, [0x0000b474]                   ; "coreutils"
0x00002829      e8a2fcffff     call sym.imp.bindtextdomain
0x0000282e      488d3d3f8c00.  lea rdi, [0x0000b474]                   ; "coreutils"
0x00002835      e876fcffff     call sym.imp.textdomain
0x0000283a      488d3d1f3100.  lea rdi, sym.close_stdout               ; 0x5960 ; "USH\x83\xec\bH\x8b=;\xb7 "
0x00002841      e87a8a0000     call sym.atexit
0x00002846      c70590e82000.  mov dword [obj.opterr], 0               ; obj.opterr__GLIBC_2.2.5
                                                                       ; [0x2110e0:4]=0
0x00002850      c644240f01     mov byte [rsp + 0xf], 1
0x00002855      c644240e00     mov byte [rsp + 0xe], 0
0x0000285a      c644240d00     mov byte [rsp + 0xd], 0
0x0000285f      c74424080000.  mov dword [rsp + 8], 0
0x00002867      488d34eb       lea rsi, [rbx + rbp*8]
0x0000286b      4489ef         mov edi, r13d
0x0000286e      488d0d4bd520.  lea rcx, obj.longopts                   ; 0x20fdc0
0x00002875      488d15638d00.  lea rdx, str.agF:                       ; 0xb5df ; "-agF:"
0x0000287c      4429e7         sub edi, r12d
0x0000287f      4531c0         xor r8d, r8d
0x00002882      e8a9fcffff     call sym.imp.getopt_long
0x00002887      83f8ff         cmp eax, 0xffffffff
0x0000288a      0f8442010000   je 0x29d2
0x00002890      83f846         cmp eax, 0x46
0x00002893      0f84a7000000   je 0x2940
0x00002899      7e65           jle 0x2900
0x0000289b      83f861         cmp eax, 0x61
0x0000289e      0f841c010000   je 0x29c0
0x000028a4      83f867         cmp eax, 0x67
0x000028a7      0f85b3000000   jne 0x2960
0x000028ad      c644240e01     mov byte [rsp + 0xe], 1
0x000028b2      c74424080200.  mov dword [rsp + 8], 2
0x000028ba      8b35f0e72000   mov esi, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2110b0:4]=0
0x000028c0      4439fe         cmp esi, r15d
0x000028c3      0f8e48090000   jle 0x3211
0x000028c9      4963d7         movsxd rdx, r15d
0x000028cc      488d0c2a       lea rcx, [rdx + rbp]
0x000028d0      8d56ff         lea edx, [rsi - 1]
0x000028d3      4429fa         sub edx, r15d
0x000028d6      488d04cb       lea rax, [rbx + rcx*8]
0x000028da      4801ca         add rdx, rcx
0x000028dd      488d54d308     lea rdx, [rbx + rdx*8 + 8]
0x000028e2      660f1f440000   nop word [rax + rax]
0x000028e8      48c700000000.  mov qword [rax], 0
0x000028ef      4883c008       add rax, 8
0x000028f3      4839c2         cmp rdx, rax
0x000028f6      75f0           jne 0x28e8
0x000028f8      4189f7         mov r15d, esi
0x000028fb      e967ffffff     jmp 0x2867
0x00002900      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x00002905      754e           jne 0x2955
0x00002907      488b3d9ae720.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x0000290e      488b0d03e720.  mov rcx, qword [obj.Version]            ; [0x211018:8]=0xdab7 str.8.31
0x00002915      4c8d05ac8c00.  lea r8, str.David_MacKenzie             ; 0xb5c8 ; "David MacKenzie"
0x0000291c      488d154d8b00.  lea rdx, str.GNU_coreutils              ; 0xb470 ; "GNU coreutils"
0x00002923      488d35138a00.  lea rsi, str.stty                       ; 0xb33d ; "stty"
0x0000292a      4531c9         xor r9d, r9d
0x0000292d      31c0           xor eax, eax
0x0000292f      e82c530000     call sym.version_etc
0x00002934      31ff           xor edi, edi
0x00002936      e825feffff     call sym.imp.exit
0x0000293b      0f1f440000     nop dword [rax + rax]
0x00002940      4d85f6         test r14, r14
0x00002943      0f85a4080000   jne 0x31ed
0x00002949      4c8b3568e720.  mov r14, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2110b8:8]=0
0x00002950      e965ffffff     jmp 0x28ba
0x00002955      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x0000295a      0f848a040000   je 0x2dea
0x00002960      4501fc         add r12d, r15d
0x00002963      488d3d6e8c00.  lea rdi, str.drain                      ; 0xb5d8 ; "-drain"
0x0000296a      b907000000     mov ecx, 7
0x0000296f      4963ec         movsxd rbp, r12d
0x00002972      488b14eb       mov rdx, qword [rbx + rbp*8]
0x00002976      4889d6         mov rsi, rdx
0x00002979      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000297b      0f97c0         seta al
0x0000297e      1c00           sbb al, 0
0x00002980      84c0           test al, al
0x00002982      7422           je 0x29a6
0x00002984      488d354e8c00.  lea rsi, [0x0000b5d9]                   ; "drain"
0x0000298b      4889d7         mov rdi, rdx
0x0000298e      e88dfcffff     call sym.imp.strcmp
0x00002993      0fb64c240f     movzx ecx, byte [rsp + 0xf]
0x00002998      85c0           test eax, eax
0x0000299a      b800000000     mov eax, 0
0x0000299f      0f45c8         cmovne ecx, eax
0x000029a2      884c240f       mov byte [rsp + 0xf], cl
0x000029a6      be01000000     mov esi, 1
0x000029ab      c705fbe62000.  mov dword [obj.optind], 0               ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2110b0:4]=0
0x000029b5      4189f7         mov r15d, esi
0x000029b8      e9aafeffff     jmp 0x2867
0x000029bd      0f1f00         nop dword [rax]
0x000029c0      c644240d01     mov byte [rsp + 0xd], 1
0x000029c5      c74424080100.  mov dword [rsp + 8], 1
0x000029cd      e9e8feffff     jmp 0x28ba
0x000029d2      0fb64c240e     movzx ecx, byte [rsp + 0xe]
0x000029d7      844c240d       test byte [rsp + 0xd], cl
0x000029db      0f85e8070000   jne 0x31c9
0x000029e1      807c240f00     cmp byte [rsp + 0xf], 0
0x000029e6      0f8527010000   jne 0x2b13
0x000029ec      807c240d00     cmp byte [rsp + 0xd], 0
0x000029f1      0f85bd080000   jne 0x32b4
0x000029f7      807c240e00     cmp byte [rsp + 0xe], 0
0x000029fc      0f85b2080000   jne 0x32b4
0x00002a02      4d85f6         test r14, r14
0x00002a05      0f84da060000   je 0x30e5
0x00002a0b      4883ec08       sub rsp, 8
0x00002a0f      4c8d05aae720.  lea r8, obj.check_mode.7223             ; 0x2111c0
0x00002a16      4889da         mov rdx, rbx
0x00002a19      488d44241e     lea rax, [rsp + 0x1e]
0x00002a1e      4489e9         mov ecx, r13d
0x00002a21      4c89f6         mov rsi, r14
0x00002a24      bf01000000     mov edi, 1
0x00002a29      50             push rax
0x00002a2a      4c8d4c2427     lea r9, [rsp + 0x27]
0x00002a2f      e83c210000     call sym.apply_settings
0x00002a34      58             pop rax
0x00002a35      5a             pop rdx
0x00002a36      31c9           xor ecx, ecx
0x00002a38      31ff           xor edi, edi
0x00002a3a      ba00080000     mov edx, 0x800
0x00002a3f      4c89f6         mov rsi, r14
0x00002a42      e8c92f0000     call sym.fd_reopen
0x00002a47      85c0           test eax, eax
0x00002a49      0f88ca080000   js 0x3319
0x00002a4f      31ff           xor edi, edi
0x00002a51      31c0           xor eax, eax
0x00002a53      be03000000     mov esi, 3
0x00002a58      e803620000     call sym.rpl_fcntl
0x00002a5d      83f8ff         cmp eax, 0xffffffff
0x00002a60      0f8472080000   je 0x32d8
0x00002a66      80e4f7         and ah, 0xf7
0x00002a69      31ff           xor edi, edi
0x00002a6b      be04000000     mov esi, 4
0x00002a70      89c2           mov edx, eax
0x00002a72      31c0           xor eax, eax
0x00002a74      e8e7610000     call sym.rpl_fcntl
0x00002a79      85c0           test eax, eax
0x00002a7b      0f8857080000   js 0x32d8
0x00002a81      488d35f8e620.  lea rsi, obj.mode.7192                  ; 0x211180
0x00002a88      31ff           xor edi, edi
0x00002a8a      e861fcffff     call sym.imp.tcgetattr
0x00002a8f      85c0           test eax, eax
0x00002a91      0f85ad000000   jne 0x2b44
0x00002a97      0fb644240d     movzx eax, byte [rsp + 0xd]
0x00002a9c      0a44240f       or al, byte [rsp + 0xf]
0x00002aa0      0f85cd000000   jne 0x2b73
0x00002aa6      807c240e00     cmp byte [rsp + 0xe], 0
0x00002aab      0f85c2000000   jne 0x2b73
0x00002ab1      c644241700     mov byte [rsp + 0x17], 0
0x00002ab6      c644241600     mov byte [rsp + 0x16], 0
0x00002abb      4883ec08       sub rsp, 8
0x00002abf      488d44241e     lea rax, [rsp + 0x1e]
0x00002ac4      4c8d05b5e620.  lea r8, obj.mode.7192                   ; 0x211180
0x00002acb      4489e9         mov ecx, r13d
0x00002ace      4c89f6         mov rsi, r14
0x00002ad1      31ff           xor edi, edi
0x00002ad3      4889da         mov rdx, rbx
0x00002ad6      50             push rax
0x00002ad7      4c8d4c2427     lea r9, [rsp + 0x27]
0x00002adc      e88f200000     call sym.apply_settings
0x00002ae1      59             pop rcx
0x00002ae2      5e             pop rsi
0x00002ae3      807c241600     cmp byte [rsp + 0x16], 0
0x00002ae8      0f8503030000   jne 0x2df1
0x00002aee      31c0           xor eax, eax
0x00002af0      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00002af5      6448330c2528.  xor rcx, qword fs:[0x28]
0x00002afe      0f85c0060000   jne 0x31c4
0x00002b04      4883c428       add rsp, 0x28
0x00002b08      5b             pop rbx
0x00002b09      5d             pop rbp
0x00002b0a      415c           pop r12
0x00002b0c      415d           pop r13
0x00002b0e      415e           pop r14
0x00002b10      415f           pop r15
0x00002b12      c3             ret
0x00002b13      4d85f6         test r14, r14
0x00002b16      0f851affffff   jne 0x2a36
0x00002b1c      488d35c28a00.  lea rsi, str.standard_input             ; 0xb5e5 ; "standard input"
0x00002b23      31ff           xor edi, edi
0x00002b25      ba05000000     mov edx, 5
0x00002b2a      e8c1f9ffff     call sym.imp.dcgettext
0x00002b2f      488d354ae620.  lea rsi, obj.mode.7192                  ; 0x211180
0x00002b36      31ff           xor edi, edi
0x00002b38      4989c6         mov r14, rax
0x00002b3b      e8b0fbffff     call sym.imp.tcgetattr
0x00002b40      85c0           test eax, eax
0x00002b42      742f           je 0x2b73
0x00002b44      4c89f2         mov rdx, r14
0x00002b47      be03000000     mov esi, 3
0x00002b4c      31ff           xor edi, edi
0x00002b4e      e85d4a0000     call sym.quotearg_n_style_colon
0x00002b53      4889c3         mov rbx, rax
0x00002b56      e8f5f8ffff     call sym.imp.__errno_location
0x00002b5b      8b30           mov esi, dword [rax]
0x00002b5d      488d1568af00.  lea rdx, [0x0000dacc]                   ; "%s"
0x00002b64      4889d9         mov rcx, rbx
0x00002b67      bf01000000     mov edi, 1
0x00002b6c      31c0           xor eax, eax
0x00002b6e      e86dfbffff     call sym.imp.error
0x00002b73      e8180e0000     call sym.screen_columns
0x00002b78      890582e62000   mov dword [obj.max_col], eax            ; [0x211200:4]=0
0x00002b7e      8b442408       mov eax, dword [rsp + 8]
0x00002b82      c70570e62000.  mov dword [obj.current_col], 0          ; [0x2111fc:4]=0
0x00002b8c      83f801         cmp eax, 1
0x00002b8f      0f8476030000   je 0x2f0b
0x00002b95      83f802         cmp eax, 2
0x00002b98      0f84cc010000   je 0x2d6a
0x00002b9e      488d3ddbe520.  lea rdi, obj.mode.7192                  ; 0x211180
0x00002ba5      be01000000     mov esi, 1
0x00002baa      e8110b0000     call sym.display_speed
0x00002baf      0fb635dae520.  movzx esi, byte [0x00211190]            ; [0x211190:1]=0
0x00002bb6      488d3d378a00.  lea rdi, str.line____d                  ; 0xb5f4 ; "line = %d;"
0x00002bbd      31c0           xor eax, eax
0x00002bbf      e85c090000     call sym.wrapf
0x00002bc4      488b3ddde420.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00002bcb      488b4728       mov rax, qword [rdi + 0x28]
0x00002bcf      483b4730       cmp rax, qword [rdi + 0x30]
0x00002bd3      0f83bd050000   jae 0x3196
0x00002bd9      488d5001       lea rdx, [rax + 1]
0x00002bdd      48895728       mov qword [rdi + 0x28], rdx
0x00002be1      c6000a         mov byte [rax], 0xa
0x00002be4      c7050ee62000.  mov dword [obj.current_col], 0          ; [0x2111fc:4]=0
0x00002bee      4c8d3d8bd220.  lea r15, obj.control_info               ; 0x20fe80
0x00002bf5      41bd01000000   mov r13d, 1
0x00002bfb      488d2d428900.  lea rbp, [0x0000b544]                   ; "min"
0x00002c02      4c8d2577e520.  lea r12, obj.mode.7192                  ; 0x211180
0x00002c09      eb4b           jmp 0x2c56
0x00002c0b      498b4710       mov rax, qword [r15 + 0x10]
0x00002c0f      450fb6740411   movzx r14d, byte [r12 + rax + 0x11]
0x00002c15      453a7708       cmp r14b, byte [r15 + 8]
0x00002c19      7437           je 0x2c52
0x00002c1b      488d35dd8900.  lea rsi, str.flush                      ; 0xb5ff ; "flush"
0x00002c22      4889df         mov rdi, rbx
0x00002c25      e8f6f9ffff     call sym.imp.strcmp
0x00002c2a      85c0           test eax, eax
0x00002c2c      7424           je 0x2c52
0x00002c2e      4584f6         test r14b, r14b
0x00002c31      488d15708900.  lea rdx, str.undef                      ; 0xb5a8 ; "<undef>"
0x00002c38      0f85bc020000   jne 0x2efa
0x00002c3e      488d3dc08900.  lea rdi, str.s____s                     ; 0xb605 ; "%s = %s;"
0x00002c45      4889de         mov rsi, rbx
0x00002c48      31c0           xor eax, eax
0x00002c4a      4531ed         xor r13d, r13d
0x00002c4d      e8ce080000     call sym.wrapf
0x00002c52      4983c718       add r15, 0x18
0x00002c56      498b1f         mov rbx, qword [r15]
0x00002c59      4889ee         mov rsi, rbp
0x00002c5c      4889df         mov rdi, rbx
0x00002c5f      e8bcf9ffff     call sym.imp.strcmp
0x00002c64      85c0           test eax, eax
0x00002c66      75a3           jne 0x2c0b
0x00002c68      f6051de52000.  test byte [0x0021118c], 2               ; [0x21118c:1]=0
0x00002c6f      0f84c6040000   je 0x313b
0x00002c75      4584ed         test r13b, r13b
0x00002c78      7520           jne 0x2c9a
0x00002c7a      488b3d27e420.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00002c81      488b4728       mov rax, qword [rdi + 0x28]
0x00002c85      483b4730       cmp rax, qword [rdi + 0x30]
0x00002c89      0f8399050000   jae 0x3228
0x00002c8f      488d5001       lea rdx, [rax + 1]
0x00002c93      48895728       mov qword [rdi + 0x28], rdx
0x00002c97      c6000a         mov byte [rax], 0xa
0x00002c9a      c70558e52000.  mov dword [obj.current_col], 0          ; [0x2111fc:4]=0
0x00002ca4      488d1db5d320.  lea rbx, obj.mode_info                  ; 0x210060
0x00002cab      31ed           xor ebp, ebp
0x00002cad      41bc01000000   mov r12d, 1
0x00002cb3      eb10           jmp 0x2cc5
0x00002cb5      83e105         and ecx, 5
0x00002cb8      80f905         cmp cl, 5
0x00002cbb      0f84ec010000   je 0x2ead
0x00002cc1      4883c320       add rbx, 0x20                           ; "@"
0x00002cc5      48833b00       cmp qword [rbx], 0
0x00002cc9      0f84f7010000   je 0x2ec6
0x00002ccf      f6430c08       test byte [rbx + 0xc], 8
0x00002cd3      75ec           jne 0x2cc1
0x00002cd5      396b08         cmp dword [rbx + 8], ebp
0x00002cd8      89ef           mov edi, ebp
0x00002cda      743a           je 0x2d16
0x00002cdc      4584e4         test r12b, r12b
0x00002cdf      752a           jne 0x2d0b
0x00002ce1      488b3dc0e320.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00002ce8      488b4728       mov rax, qword [rdi + 0x28]
0x00002cec      483b4730       cmp rax, qword [rdi + 0x30]
0x00002cf0      0f8364040000   jae 0x315a
0x00002cf6      488d5001       lea rdx, [rax + 1]
0x00002cfa      48895728       mov qword [rdi + 0x28], rdx
0x00002cfe      c6000a         mov byte [rax], 0xa
0x00002d01      c705f1e42000.  mov dword [obj.current_col], 0          ; [0x2111fc:4]=0
0x00002d0b      8b7b08         mov edi, dword [rbx + 8]
0x00002d0e      41bc01000000   mov r12d, 1
0x00002d14      89fd           mov ebp, edi
0x00002d16      488d3563e420.  lea rsi, obj.mode.7192                  ; 0x211180
0x00002d1d      e8ae070000     call sym.mode_type_flag
0x00002d22      488b5318       mov rdx, qword [rbx + 0x18]
0x00002d26      4885d2         test rdx, rdx
0x00002d29      7504           jne 0x2d2f
0x00002d2b      488b5310       mov rdx, qword [rbx + 0x10]
0x00002d2f      4885c0         test rax, rax
0x00002d32      0f846d040000   je 0x31a5
0x00002d38      2310           and edx, dword [rax]
0x00002d3a      0fb64b0c       movzx ecx, byte [rbx + 0xc]
0x00002d3e      483b5310       cmp rdx, qword [rbx + 0x10]
0x00002d42      0f856dffffff   jne 0x2cb5
0x00002d48      80e102         and cl, 2
0x00002d4b      0f8470ffffff   je 0x2cc1
0x00002d51      488b33         mov rsi, qword [rbx]
0x00002d54      488d3d71ad00.  lea rdi, [0x0000dacc]                   ; "%s"
0x00002d5b      31c0           xor eax, eax
0x00002d5d      4531e4         xor r12d, r12d
0x00002d60      e8bb070000     call sym.wrapf
0x00002d65      e957ffffff     jmp 0x2cc1
0x00002d6a      8b0d14e42000   mov ecx, dword [0x00211184]             ; [0x211184:4]=0
0x00002d70      8b150ae42000   mov edx, dword [obj.mode.7192]          ; [0x211180:4]=0
0x00002d76      488d35c48800.  lea rsi, str.lx:_lx:_lx:_lx             ; 0xb641 ; "%lx:%lx:%lx:%lx"
0x00002d7d      448b0d08e420.  mov r9d, dword [0x0021118c]             ; [0x21118c:4]=0
0x00002d84      448b05fde320.  mov r8d, dword [0x00211188]             ; [0x211188:4]=0
0x00002d8b      4c8d25ffe320.  lea r12, [0x00211191]
0x00002d92      488d2db38800.  lea rbp, [0x0000b64c]                   ; ":%lx"
0x00002d99      bf01000000     mov edi, 1
0x00002d9e      31c0           xor eax, eax
0x00002da0      31db           xor ebx, ebx
0x00002da2      e829f9ffff     call sym.imp.__printf_chk
0x00002da7      410fb6141c     movzx edx, byte [r12 + rbx]
0x00002dac      31c0           xor eax, eax
0x00002dae      4889ee         mov rsi, rbp
0x00002db1      bf01000000     mov edi, 1
0x00002db6      4883c301       add rbx, 1
0x00002dba      e811f9ffff     call sym.imp.__printf_chk
0x00002dbf      4883fb20       cmp rbx, 0x20                           ; "@"
0x00002dc3      75e2           jne 0x2da7
0x00002dc5      488b3ddce220.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00002dcc      488b4728       mov rax, qword [rdi + 0x28]
0x00002dd0      483b4730       cmp rax, qword [rdi + 0x30]
0x00002dd4      0f839e030000   jae 0x3178
0x00002dda      488d5001       lea rdx, [rax + 1]
0x00002dde      48895728       mov qword [rdi + 0x28], rdx
0x00002de2      c6000a         mov byte [rax], 0xa
0x00002de5      e904fdffff     jmp 0x2aee
0x00002dea      31ff           xor edi, edi
0x00002dec      e83f0e0000     call sym.usage
0x00002df1      8b3519e22000   mov esi, dword [obj.tcsetattr_options]  ; [0x211010:4]=1
0x00002df7      488d1582e320.  lea rdx, obj.mode.7192                  ; 0x211180
0x00002dfe      31ff           xor edi, edi
0x00002e00      e8fbf8ffff     call sym.imp.tcsetattr
0x00002e05      85c0           test eax, eax
0x00002e07      0f8559040000   jne 0x3266
0x00002e0d      488d352ce320.  lea rsi, obj.new_mode.7231              ; 0x211140
0x00002e14      31ff           xor edi, edi
0x00002e16      e8d5f8ffff     call sym.imp.tcgetattr
0x00002e1b      85c0           test eax, eax
0x00002e1d      0f8514040000   jne 0x3237
0x00002e23      488d3516e320.  lea rsi, obj.new_mode.7231              ; 0x211140
0x00002e2a      488d3d4fe320.  lea rdi, obj.mode.7192                  ; 0x211180
0x00002e31      ba3c000000     mov edx, 0x3c                           ; '<'
0x00002e36      e8b5f7ffff     call sym.imp.memcmp
0x00002e3b      85c0           test eax, eax
0x00002e3d      0f84abfcffff   je 0x2aee
0x00002e43      8125fbe22000.  and dword [0x00211148], 0xeff0ffff      ; [0x211148:4]=0
0x00002e4d      807c241700     cmp byte [rsp + 0x17], 0
0x00002e52      7520           jne 0x2e74
0x00002e54      488d35e5e220.  lea rsi, obj.new_mode.7231              ; 0x211140
0x00002e5b      488d3d1ee320.  lea rdi, obj.mode.7192                  ; 0x211180
0x00002e62      ba3c000000     mov edx, 0x3c                           ; '<'
0x00002e67      e884f7ffff     call sym.imp.memcmp
0x00002e6c      85c0           test eax, eax
0x00002e6e      0f847afcffff   je 0x2aee
0x00002e74      4c89f2         mov rdx, r14
0x00002e77      be03000000     mov esi, 3
0x00002e7c      31ff           xor edi, edi
0x00002e7e      e82d470000     call sym.quotearg_n_style_colon
0x00002e83      488d35feab00.  lea rsi, str.s:_unable_to_perform_all_requested_operations ; 0xda88 ; "%s: unable to perform all requested operations"
0x00002e8a      4889c3         mov rbx, rax
0x00002e8d      ba05000000     mov edx, 5
0x00002e92      31ff           xor edi, edi
0x00002e94      e857f6ffff     call sym.imp.dcgettext
0x00002e99      4889d9         mov rcx, rbx
0x00002e9c      4889c2         mov rdx, rax
0x00002e9f      31f6           xor esi, esi
0x00002ea1      bf01000000     mov edi, 1
0x00002ea6      31c0           xor eax, eax
0x00002ea8      e833f8ffff     call sym.imp.error
0x00002ead      488b33         mov rsi, qword [rbx]
0x00002eb0      488d3d6f8700.  lea rdi, [0x0000b626]                   ; "-%s"
0x00002eb7      31c0           xor eax, eax
0x00002eb9      4531e4         xor r12d, r12d
0x00002ebc      e85f060000     call sym.wrapf
0x00002ec1      e9fbfdffff     jmp 0x2cc1
0x00002ec6      4584e4         test r12b, r12b
0x00002ec9      7520           jne 0x2eeb
0x00002ecb      488b3dd6e120.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00002ed2      488b4728       mov rax, qword [rdi + 0x28]
0x00002ed6      483b4730       cmp rax, qword [rdi + 0x30]
0x00002eda      0f83a7020000   jae 0x3187
0x00002ee0      488d5001       lea rdx, [rax + 1]
0x00002ee4      48895728       mov qword [rdi + 0x28], rdx
0x00002ee8      c6000a         mov byte [rax], 0xa
0x00002eeb      c70507e32000.  mov dword [obj.current_col], 0          ; [0x2111fc:4]=0
0x00002ef5      e9f4fbffff     jmp 0x2aee
0x00002efa      410fb6fe       movzx edi, r14b
0x00002efe      e8ad090000     call sym.visible.part.0
0x00002f03      4889c2         mov rdx, rax
0x00002f06      e933fdffff     jmp 0x2c3e
0x00002f0b      488d3d6ee220.  lea rdi, obj.mode.7192                  ; 0x211180
0x00002f12      be01000000     mov esi, 1
0x00002f17      e8a4070000     call sym.display_speed
0x00002f1c      4c89f6         mov rsi, r14
0x00002f1f      bf01000000     mov edi, 1
0x00002f24      e8f70b0000     call sym.display_window_size
0x00002f29      0fb63560e220.  movzx esi, byte [0x00211190]            ; [0x211190:1]=0
0x00002f30      488d3dbd8600.  lea rdi, str.line____d                  ; 0xb5f4 ; "line = %d;"
0x00002f37      31c0           xor eax, eax
0x00002f39      e8e2050000     call sym.wrapf
0x00002f3e      488b3d63e120.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00002f45      488b4728       mov rax, qword [rdi + 0x28]
0x00002f49      483b4730       cmp rax, qword [rdi + 0x30]
0x00002f4d      0f8316020000   jae 0x3169
0x00002f53      488d5001       lea rdx, [rax + 1]
0x00002f57      48895728       mov qword [rdi + 0x28], rdx
0x00002f5b      c6000a         mov byte [rax], 0xa
0x00002f5e      c70594e22000.  mov dword [obj.current_col], 0          ; [0x2111fc:4]=0
0x00002f68      488d1d11cf20.  lea rbx, obj.control_info               ; 0x20fe80
0x00002f6f      4c8d25ce8500.  lea r12, [0x0000b544]                   ; "min"
0x00002f76      4c8d2d828600.  lea r13, str.flush                      ; 0xb5ff ; "flush"
0x00002f7d      4c8d3dfce120.  lea r15, obj.mode.7192                  ; 0x211180
0x00002f84      4c8d351d8600.  lea r14, str.undef                      ; 0xb5a8 ; "<undef>"
0x00002f8b      eb40           jmp 0x2fcd
0x00002f8d      4c89ee         mov rsi, r13
0x00002f90      4889ef         mov rdi, rbp
0x00002f93      e888f6ffff     call sym.imp.strcmp
0x00002f98      85c0           test eax, eax
0x00002f9a      742d           je 0x2fc9
0x00002f9c      488b4310       mov rax, qword [rbx + 0x10]
0x00002fa0      4c89f2         mov rdx, r14
0x00002fa3      410fb64c0711   movzx ecx, byte [r15 + rax + 0x11]
0x00002fa9      84c9           test cl, cl
0x00002fab      740b           je 0x2fb8
0x00002fad      0fb6f9         movzx edi, cl
0x00002fb0      e8fb080000     call sym.visible.part.0
0x00002fb5      4889c2         mov rdx, rax
0x00002fb8      488d3d468600.  lea rdi, str.s____s                     ; 0xb605 ; "%s = %s;"
0x00002fbf      4889ee         mov rsi, rbp
0x00002fc2      31c0           xor eax, eax
0x00002fc4      e857050000     call sym.wrapf
0x00002fc9      4883c318       add rbx, 0x18
0x00002fcd      488b2b         mov rbp, qword [rbx]
0x00002fd0      4c89e6         mov rsi, r12
0x00002fd3      4889ef         mov rdi, rbp
0x00002fd6      e845f6ffff     call sym.imp.strcmp
0x00002fdb      85c0           test eax, eax
0x00002fdd      75ae           jne 0x2f8d
0x00002fdf      0fb615b0e120.  movzx edx, byte [0x00211196]            ; [0x211196:1]=0
0x00002fe6      0fb635aae120.  movzx esi, byte [0x00211197]            ; [0x211197:1]=0
0x00002fed      488d3d368600.  lea rdi, str.min____lu__time____lu      ; 0xb62a ; "min = %lu; time = %lu;"
0x00002ff4      e827050000     call sym.wrapf
0x00002ff9      833dfce12000.  cmp dword [obj.current_col], 0          ; [0x2111fc:4]=0
0x00003000      7420           je 0x3022
0x00003002      488b3d9fe020.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00003009      488b4728       mov rax, qword [rdi + 0x28]
0x0000300d      483b4730       cmp rax, qword [rdi + 0x30]
0x00003011      0f8302020000   jae 0x3219
0x00003017      488d5001       lea rdx, [rax + 1]
0x0000301b      48895728       mov qword [rdi + 0x28], rdx
0x0000301f      c6000a         mov byte [rax], 0xa
0x00003022      c705d0e12000.  mov dword [obj.current_col], 0          ; [0x2111fc:4]=0
0x0000302c      488d1d2dd020.  lea rbx, obj.mode_info                  ; 0x210060
0x00003033      4531e4         xor r12d, r12d
0x00003036      4c8d2d43e120.  lea r13, obj.mode.7192                  ; 0x211180
0x0000303d      eb04           jmp 0x3043
0x0000303f      4883c320       add rbx, 0x20                           ; "@"
0x00003043      48833b00       cmp qword [rbx], 0
0x00003047      0f847efeffff   je 0x2ecb
0x0000304d      f6430c08       test byte [rbx + 0xc], 8
0x00003051      75ec           jne 0x303f
0x00003053      8b6b08         mov ebp, dword [rbx + 8]
0x00003056      4439e5         cmp ebp, r12d
0x00003059      7430           je 0x308b
0x0000305b      488b3d46e020.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00003062      488b4728       mov rax, qword [rdi + 0x28]
0x00003066      483b4730       cmp rax, qword [rdi + 0x30]
0x0000306a      0f83bc000000   jae 0x312c
0x00003070      488d5001       lea rdx, [rax + 1]
0x00003074      48895728       mov qword [rdi + 0x28], rdx
0x00003078      c6000a         mov byte [rax], 0xa
0x0000307b      4189ec         mov r12d, ebp
0x0000307e      8b6b08         mov ebp, dword [rbx + 8]
0x00003081      c70571e12000.  mov dword [obj.current_col], 0          ; [0x2111fc:4]=0
0x0000308b      4c89ee         mov rsi, r13
0x0000308e      89ef           mov edi, ebp
0x00003090      e83b040000     call sym.mode_type_flag
0x00003095      488b5318       mov rdx, qword [rbx + 0x18]
0x00003099      4885d2         test rdx, rdx
0x0000309c      7504           jne 0x30a2
0x0000309e      488b5310       mov rdx, qword [rbx + 0x10]
0x000030a2      4885c0         test rax, rax
0x000030a5      0f84ea010000   je 0x3295
0x000030ab      2310           and edx, dword [rax]
0x000030ad      483b5310       cmp rdx, qword [rbx + 0x10]
0x000030b1      741c           je 0x30cf
0x000030b3      f6430c04       test byte [rbx + 0xc], 4
0x000030b7      7486           je 0x303f
0x000030b9      488b33         mov rsi, qword [rbx]
0x000030bc      488d3d638500.  lea rdi, [0x0000b626]                   ; "-%s"
0x000030c3      31c0           xor eax, eax
0x000030c5      e856040000     call sym.wrapf
0x000030ca      e970ffffff     jmp 0x303f
0x000030cf      488b33         mov rsi, qword [rbx]
0x000030d2      488d3df3a900.  lea rdi, [0x0000dacc]                   ; "%s"
0x000030d9      31c0           xor eax, eax
0x000030db      e840040000     call sym.wrapf
0x000030e0      e95affffff     jmp 0x303f
0x000030e5      488d35f98400.  lea rsi, str.standard_input             ; 0xb5e5 ; "standard input"
0x000030ec      ba05000000     mov edx, 5
0x000030f1      31ff           xor edi, edi
0x000030f3      e8f8f3ffff     call sym.imp.dcgettext
0x000030f8      4883ec08       sub rsp, 8
0x000030fc      4989c6         mov r14, rax
0x000030ff      4c8d05bae020.  lea r8, obj.check_mode.7223             ; 0x2111c0
0x00003106      488d44241e     lea rax, [rsp + 0x1e]
0x0000310b      bf01000000     mov edi, 1
0x00003110      4489e9         mov ecx, r13d
0x00003113      4889da         mov rdx, rbx
0x00003116      4c89f6         mov rsi, r14
0x00003119      50             push rax
0x0000311a      4c8d4c2427     lea r9, [rsp + 0x27]
0x0000311f      e84c1a0000     call sym.apply_settings
0x00003124      5f             pop rdi
0x00003125      4158           pop r8
0x00003127      e955f9ffff     jmp 0x2a81
0x0000312c      be0a000000     mov esi, 0xa
0x00003131      e83af4ffff     call sym.imp.__overflow
0x00003136      e940ffffff     jmp 0x307b
0x0000313b      0fb61554e020.  movzx edx, byte [0x00211196]            ; [0x211196:1]=0
0x00003142      0fb6354ee020.  movzx esi, byte [0x00211197]            ; [0x211197:1]=0
0x00003149      488d3dbe8400.  lea rdi, [0x0000b60e]                   ; "min = %lu; time = %lu;\n"
0x00003150      e8cb030000     call sym.wrapf
0x00003155      e940fbffff     jmp 0x2c9a
0x0000315a      be0a000000     mov esi, 0xa
0x0000315f      e80cf4ffff     call sym.imp.__overflow
0x00003164      e998fbffff     jmp 0x2d01
0x00003169      be0a000000     mov esi, 0xa
0x0000316e      e8fdf3ffff     call sym.imp.__overflow
0x00003173      e9e6fdffff     jmp 0x2f5e
0x00003178      be0a000000     mov esi, 0xa
0x0000317d      e8eef3ffff     call sym.imp.__overflow
0x00003182      e967f9ffff     jmp 0x2aee
0x00003187      be0a000000     mov esi, 0xa
0x0000318c      e8dff3ffff     call sym.imp.__overflow
0x00003191      e955fdffff     jmp 0x2eeb
0x00003196      be0a000000     mov esi, 0xa
0x0000319b      e8d0f3ffff     call sym.imp.__overflow
0x000031a0      e93ffaffff     jmp 0x2be4
0x000031a5      488d0d848700.  lea rcx, obj.__PRETTY_FUNCTION__.7318   ; 0xb930 ; "display_changed"
0x000031ac      488d35038300.  lea rsi, str..._coreutils_8.31_src_stty.c ; 0xb4b6 ; "../coreutils-8.31/src/stty.c"
0x000031b3      488d3d198300.  lea rdi, str.bitsp                      ; 0xb4d3 ; "bitsp"
0x000031ba      baa2070000     mov edx, 0x7a2
0x000031bf      e8dcf3ffff     call sym.imp.__assert_fail
0x000031c4      e857f3ffff     call sym.imp.__stack_chk_fail
0x000031c9      488d3508a800.  lea rsi, str.the_options_for_verbose_and_stty_readable_output_styles_are__mutually_exclusive ; 0xd9d8 ; "the options for verbose and stty-readable output styles are\nmutually exclusive"
0x000031d0      ba05000000     mov edx, 5
0x000031d5      31ff           xor edi, edi
0x000031d7      e814f3ffff     call sym.imp.dcgettext
0x000031dc      31f6           xor esi, esi
0x000031de      4889c2         mov rdx, rax
0x000031e1      bf01000000     mov edi, 1
0x000031e6      31c0           xor eax, eax
0x000031e8      e8f3f4ffff     call sym.imp.error
0x000031ed      488d35bca700.  lea rsi, str.only_one_device_may_be_specified ; 0xd9b0 ; "only one device may be specified"
0x000031f4      ba05000000     mov edx, 5
0x000031f9      31ff           xor edi, edi
0x000031fb      e8f0f2ffff     call sym.imp.dcgettext
0x00003200      31f6           xor esi, esi
0x00003202      4889c2         mov rdx, rax
0x00003205      bf01000000     mov edi, 1
0x0000320a      31c0           xor eax, eax
0x0000320c      e8cff4ffff     call sym.imp.error
0x00003211      4489fe         mov esi, r15d
0x00003214      e9dff6ffff     jmp 0x28f8
0x00003219      be0a000000     mov esi, 0xa
0x0000321e      e84df3ffff     call sym.imp.__overflow
0x00003223      e9fafdffff     jmp 0x3022
0x00003228      be0a000000     mov esi, 0xa
0x0000322d      e83ef3ffff     call sym.imp.__overflow
0x00003232      e963faffff     jmp 0x2c9a
0x00003237      4c89f2         mov rdx, r14
0x0000323a      be03000000     mov esi, 3
0x0000323f      31ff           xor edi, edi
0x00003241      e86a430000     call sym.quotearg_n_style_colon
0x00003246      4889c3         mov rbx, rax
0x00003249      e802f2ffff     call sym.imp.__errno_location
0x0000324e      8b30           mov esi, dword [rax]
0x00003250      488d1575a800.  lea rdx, [0x0000dacc]                   ; "%s"
0x00003257      4889d9         mov rcx, rbx
0x0000325a      bf01000000     mov edi, 1
0x0000325f      31c0           xor eax, eax
0x00003261      e87af4ffff     call sym.imp.error
0x00003266      4c89f2         mov rdx, r14
0x00003269      be03000000     mov esi, 3
0x0000326e      31ff           xor edi, edi
0x00003270      e83b430000     call sym.quotearg_n_style_colon
0x00003275      4889c3         mov rbx, rax
0x00003278      e8d3f1ffff     call sym.imp.__errno_location
0x0000327d      8b30           mov esi, dword [rax]
0x0000327f      488d1546a800.  lea rdx, [0x0000dacc]                   ; "%s"
0x00003286      4889d9         mov rcx, rbx
0x00003289      bf01000000     mov edi, 1
0x0000328e      31c0           xor eax, eax
0x00003290      e84bf4ffff     call sym.imp.error
0x00003295      488d0d7c8600.  lea rcx, obj.__PRETTY_FUNCTION__.7335   ; 0xb918 ; "display_all"
0x0000329c      488d35138200.  lea rsi, str..._coreutils_8.31_src_stty.c ; 0xb4b6 ; "../coreutils-8.31/src/stty.c"
0x000032a3      488d3d298200.  lea rdi, str.bitsp                      ; 0xb4d3 ; "bitsp"
0x000032aa      baf6070000     mov edx, 0x7f6
0x000032af      e8ecf2ffff     call sym.imp.__assert_fail
0x000032b4      488d356da700.  lea rsi, str.when_specifying_an_output_style__modes_may_not_be_set ; 0xda28 ; "when specifying an output style, modes may not be set"
0x000032bb      ba05000000     mov edx, 5
0x000032c0      31ff           xor edi, edi
0x000032c2      e829f2ffff     call sym.imp.dcgettext
0x000032c7      31f6           xor esi, esi
0x000032c9      4889c2         mov rdx, rax
0x000032cc      bf01000000     mov edi, 1
0x000032d1      31c0           xor eax, eax
0x000032d3      e808f4ffff     call sym.imp.error
0x000032d8      4c89f2         mov rdx, r14
0x000032db      be03000000     mov esi, 3
0x000032e0      31ff           xor edi, edi
0x000032e2      e8c9420000     call sym.quotearg_n_style_colon
0x000032e7      488d3572a700.  lea rsi, str.s:_couldn_t_reset_non_blocking_mode ; 0xda60 ; "%s: couldn't reset non-blocking mode"
0x000032ee      ba05000000     mov edx, 5
0x000032f3      31ff           xor edi, edi
0x000032f5      4889c5         mov rbp, rax
0x000032f8      e8f3f1ffff     call sym.imp.dcgettext
0x000032fd      4889c3         mov rbx, rax
0x00003300      e84bf1ffff     call sym.imp.__errno_location
0x00003305      8b30           mov esi, dword [rax]
0x00003307      4889e9         mov rcx, rbp
0x0000330a      4889da         mov rdx, rbx
0x0000330d      bf01000000     mov edi, 1
0x00003312      31c0           xor eax, eax
0x00003314      e8c7f3ffff     call sym.imp.error
0x00003319      4c89f2         mov rdx, r14
0x0000331c      be03000000     mov esi, 3
0x00003321      31ff           xor edi, edi
0x00003323      e888420000     call sym.quotearg_n_style_colon
0x00003328      4889c3         mov rbx, rax
0x0000332b      e820f1ffff     call sym.imp.__errno_location
0x00003330      8b30           mov esi, dword [rax]
0x00003332      488d1593a700.  lea rdx, [0x0000dacc]                   ; "%s"
0x00003339      4889d9         mov rcx, rbx
0x0000333c      bf01000000     mov edi, 1
0x00003341      31c0           xor eax, eax
0x00003343      e898f3ffff     call sym.imp.error
0x00003348      0f1f84000000.  nop dword [rax + rax]
;-- entry0:
;-- _start:
;-- rip:
0x00003350      31ed           xor ebp, ebp
0x00003352      4989d1         mov r9, rdx
0x00003355      5e             pop rsi
0x00003356      4889e2         mov rdx, rsp
0x00003359      4883e4f0       and rsp, 0xfffffffffffffff0
0x0000335d      50             push rax
0x0000335e      54             push rsp
0x0000335f      4c8d054a7f00.  lea r8, sym.__libc_csu_fini             ; 0xb2b0
0x00003366      488d0dd37e00.  lea rcx, sym.__libc_csu_init            ; 0xb240 ; "AWAVI\x89\xd7AUATL\x8d%\xfeG "
0x0000336d      488d3d5cf4ff.  lea rdi, main                           ; sym.main
                                                                       ; 0x27d0 ; "AWAVA\xbf\x01"
0x00003374      ff1566dc2000   call qword [reloc.__libc_start_main]    ; [0x210fe0:8]=0
0x0000337a      f4             hlt
0x0000337b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00003380      488d3d19dd20.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2110a0
0x00003387      55             push rbp
0x00003388      488d0511dd20.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2110a0
0x0000338f      4839f8         cmp rax, rdi
0x00003392      4889e5         mov rbp, rsp
0x00003395      7419           je 0x33b0
0x00003397      488b053adc20.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x210fd8:8]=0
0x0000339e      4885c0         test rax, rax
0x000033a1      740d           je 0x33b0
0x000033a3      5d             pop rbp
0x000033a4      ffe0           jmp rax
0x000033a6      662e0f1f8400.  nop word cs:[rax + rax]
0x000033b0      5d             pop rbp
0x000033b1      c3             ret
0x000033b2      0f1f4000       nop dword [rax]
0x000033b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x000033c0      488d3dd9dc20.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2110a0
0x000033c7      488d35d2dc20.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2110a0
0x000033ce      55             push rbp
0x000033cf      4829fe         sub rsi, rdi
0x000033d2      4889e5         mov rbp, rsp
0x000033d5      48c1fe03       sar rsi, 3
0x000033d9      4889f0         mov rax, rsi
0x000033dc      48c1e83f       shr rax, 0x3f
0x000033e0      4801c6         add rsi, rax
0x000033e3      48d1fe         sar rsi, 1
0x000033e6      7418           je 0x3400
0x000033e8      488b0501dc20.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x210ff0:8]=0
0x000033ef      4885c0         test rax, rax
0x000033f2      740c           je 0x3400
0x000033f4      5d             pop rbp
0x000033f5      ffe0           jmp rax
0x000033f7      660f1f840000.  nop word [rax + rax]
0x00003400      5d             pop rbp
0x00003401      c3             ret
0x00003402      0f1f4000       nop dword [rax]
0x00003406      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00003410      803df1dc2000.  cmp byte [obj.completed.7697], 0        ; [0x211108:1]=0
0x00003417      752f           jne 0x3448
0x00003419      48833dd7db20.  cmp qword [reloc.__cxa_finalize], 0     ; [0x210ff8:8]=0
0x00003421      55             push rbp
0x00003422      4889e5         mov rbp, rsp
0x00003425      740c           je 0x3433
0x00003427      488b3ddadb20.  mov rdi, qword [obj.__dso_handle]       ; [0x211008:8]=0x211008 obj.__dso_handle
0x0000342e      e88df3ffff     call sym..plt.got
0x00003433      e848ffffff     call sym.deregister_tm_clones
0x00003438      c605c9dc2000.  mov byte [obj.completed.7697], 1        ; [0x211108:1]=0
0x0000343f      5d             pop rbp
0x00003440      c3             ret
0x00003441      0f1f80000000.  nop dword [rax]
0x00003448      f3c3           ret
0x0000344a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00003450      55             push rbp
0x00003451      4889e5         mov rbp, rsp
0x00003454      5d             pop rbp
0x00003455      e966ffffff     jmp sym.register_tm_clones
0x0000345a      660f1f440000   nop word [rax + rax]
;-- string_to_baud:
0x00003460      4154           push r12                                ; /src:2212
0x00003462      488d355f8200.  lea rsi, [0x0000b6c8]                   ; /src:2213 ; "0"
0x00003469      55             push rbp                                ; /src:2212
0x0000346a      4989fc         mov r12, rdi
0x0000346d      53             push rbx
0x0000346e      31ed           xor ebp, ebp                            ; /src:2213
0x00003470      488d1d01c620.  lea rbx, [0x0020fa78]
0x00003477      eb17           jmp 0x3490
0x00003479      0f1f80000000.  nop dword [rax]
0x00003480      4883c318       add rbx, 0x18
0x00003484      488b73e8       mov rsi, qword [rbx - 0x18]
0x00003488      83c501         add ebp, 1
0x0000348b      4885f6         test rsi, rsi
0x0000348e      7428           je 0x34b8
0x00003490      4c89e7         mov rdi, r12                            ; /src:2214
0x00003493      e888f1ffff     call sym.imp.strcmp
0x00003498      85c0           test eax, eax
0x0000349a      75e4           jne 0x3480
0x0000349c      4863ed         movsxd rbp, ebp                         ; /src:2215
0x0000349f      488d05bac520.  lea rax, obj.speeds                     ; 0x20fa60
0x000034a6      488d546d00     lea rdx, [rbp + rbp*2]
0x000034ab      5b             pop rbx                                 ; /src:2217
0x000034ac      8b44d008       mov eax, dword [rax + rdx*8 + 8]        ; /src:2215
0x000034b0      5d             pop rbp                                 ; /src:2217
0x000034b1      415c           pop r12
0x000034b3      c3             ret
0x000034b4      0f1f4000       nop dword [rax]
0x000034b8      5b             pop rbx
0x000034b9      b8ffffffff     mov eax, 0xffffffff                     ; /src:2216 ; -1
0x000034be      5d             pop rbp                                 ; /src:2217
0x000034bf      415c           pop r12
0x000034c1      c3             ret
0x000034c2      0f1f4000       nop dword [rax]
0x000034c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- mode_type_flag:
0x000034d0      83ff04         cmp edi, 4                              ; /src:1835
0x000034d3      773e           ja 0x3513
0x000034d5      488d05148400.  lea rax, [0x0000b8f0]
0x000034dc      89ff           mov edi, edi
0x000034de      486314b8       movsxd rdx, dword [rax + rdi*4]
0x000034e2      4801c2         add rdx, rax
0x000034e5      ffe2           jmp rdx
0x000034e7      660f1f840000.  nop word [rax + rax]
0x000034f0      488d460c       lea rax, [rsi + 0xc]                    ; /src:1848
0x000034f4      c3             ret
0x000034f5      0f1f00         nop dword [rax]
0x000034f8      488d4604       lea rax, [rsi + 4]                      ; /src:1845
0x000034fc      c3             ret
0x000034fd      0f1f00         nop dword [rax]
0x00003500      4889f0         mov rax, rsi                            ; /src:1842
0x00003503      c3             ret
0x00003504      0f1f4000       nop dword [rax]
0x00003508      488d4608       lea rax, [rsi + 8]                      ; /src:1839
0x0000350c      c3             ret
0x0000350d      0f1f00         nop dword [rax]
0x00003510      31c0           xor eax, eax                            ; /src:1851
0x00003512      c3             ret                                     ; /src:1856
0x00003513      4883ec08       sub rsp, 8                              ; /src:1835
0x00003517      e824efffff     call sym.imp.abort                      ; /src:1854
0x0000351c      0f1f4000       nop dword [rax]
;-- wrapf:
0x00003520      53             push rbx                                ; /src:493
0x00003521      4989fa         mov r10, rdi
0x00003524      4881ece00000.  sub rsp, 0xe0
0x0000352b      84c0           test al, al
0x0000352d      4889742438     mov qword [rsp + 0x38], rsi
0x00003532      4889542440     mov qword [rsp + 0x40], rdx
0x00003537      48894c2448     mov qword [rsp + 0x48], rcx
0x0000353c      4c89442450     mov qword [rsp + 0x50], r8
0x00003541      4c894c2458     mov qword [rsp + 0x58], r9
0x00003546      743a           je 0x3582
0x00003548      0f29442460     movaps xmmword [rsp + 0x60], xmm0
0x0000354d      0f294c2470     movaps xmmword [rsp + 0x70], xmm1
0x00003552      0f2994248000.  movaps xmmword [rsp + 0x80], xmm2
0x0000355a      0f299c249000.  movaps xmmword [rsp + 0x90], xmm3
0x00003562      0f29a424a000.  movaps xmmword [rsp + 0xa0], xmm4
0x0000356a      0f29ac24b000.  movaps xmmword [rsp + 0xb0], xmm5
0x00003572      0f29b424c000.  movaps xmmword [rsp + 0xc0], xmm6
0x0000357a      0f29bc24d000.  movaps xmmword [rsp + 0xd0], xmm7
0x00003582      64488b042528.  mov rax, qword fs:[0x28]
0x0000358b      4889442428     mov qword [rsp + 0x28], rax
0x00003590      31c0           xor eax, eax
0x00003592      488d8424f000.  lea rax, [rsp + 0xf0]                   ; /src:498
0x0000359a      488d542410     lea rdx, [rsp + 0x10]                   ; /src:499
0x0000359f      488d7c2408     lea rdi, [rsp + 8]
0x000035a4      4c89d6         mov rsi, r10
0x000035a7      4889442418     mov qword [rsp + 0x18], rax             ; /src:498
0x000035ac      488d442430     lea rax, [rsp + 0x30]
0x000035b1      c74424100800.  mov dword [rsp + 0x10], 8
0x000035b9      c74424143000.  mov dword [rsp + 0x14], 0x30            ; '0'
                                                                       ; [0x30:4]=0
0x000035c1      4889442420     mov qword [rsp + 0x20], rax
0x000035c6      e8a5590000     call sym.rpl_vasprintf                  ; /src:499
0x000035cb      85c0           test eax, eax                           ; /src:502
0x000035cd      89c3           mov ebx, eax                            ; /src:499
0x000035cf      0f88d2000000   js 0x36a7                               ; /src:502
0x000035d5      8b0521dc2000   mov eax, dword [obj.current_col]        ; /src:505 ; [0x2111fc:4]=0
0x000035db      488b3dc6da20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x000035e2      85c0           test eax, eax
0x000035e4      7e39           jle 0x361f
0x000035e6      8b1514dc2000   mov edx, dword [obj.max_col]            ; /src:507 ; [0x211200:4]=0
0x000035ec      488b4f28       mov rcx, qword [rdi + 0x28]
0x000035f0      488b7730       mov rsi, qword [rdi + 0x30]
0x000035f4      29c2           sub edx, eax
0x000035f6      39da           cmp edx, ebx
0x000035f8      7d5e           jge 0x3658
0x000035fa      4839f1         cmp rcx, rsi                            ; /coreutils-8.31/lib:107
0x000035fd      0f8395000000   jae 0x3698
0x00003603      488d4101       lea rax, [rcx + 1]
0x00003607      48894728       mov qword [rdi + 0x28], rax
0x0000360b      c6010a         mov byte [rcx], 0xa
0x0000360e      488b3d93da20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00003615      c705dddb2000.  mov dword [obj.current_col], 0          ; /src:510 ; [0x2111fc:4]=0
0x0000361f      4889fe         mov rsi, rdi                            ; /src:519
0x00003622      488b7c2408     mov rdi, qword [rsp + 8]
0x00003627      e8d4efffff     call sym.imp.fputs_unlocked
0x0000362c      488b7c2408     mov rdi, qword [rsp + 8]                ; /src:520
0x00003631      e8faedffff     call sym.imp.free
0x00003636      011dc0db2000   add dword [obj.current_col], ebx        ; /src:521 ; [0x2111fc:4]=0
0x0000363c      488b442428     mov rax, qword [rsp + 0x28]             ; /src:522
0x00003641      644833042528.  xor rax, qword fs:[0x28]
0x0000364a      7560           jne 0x36ac
0x0000364c      4881c4e00000.  add rsp, 0xe0
0x00003653      5b             pop rbx
0x00003654      c3             ret
0x00003655      0f1f00         nop dword [rax]
0x00003658      4839f1         cmp rcx, rsi                            ; /coreutils-8.31/lib:107
0x0000365b      7323           jae 0x3680
0x0000365d      488d5101       lea rdx, [rcx + 1]
0x00003661      48895728       mov qword [rdi + 0x28], rdx
0x00003665      c60120         mov byte [rcx], 0x20                    ; [0x20:1]=64 ; "@"
0x00003668      83c001         add eax, 1                              ; /src:515
0x0000366b      488b3d36da20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00003672      890584db2000   mov dword [obj.current_col], eax        ; [0x2111fc:4]=0
0x00003678      eba5           jmp 0x361f
0x0000367a      660f1f440000   nop word [rax + rax]
0x00003680      be20000000     mov esi, 0x20                           ; /coreutils-8.31/lib:107 ; "@"
0x00003685      e8e6eeffff     call sym.imp.__overflow
0x0000368a      8b056cdb2000   mov eax, dword [obj.current_col]        ; [0x2111fc:4]=0
0x00003690      ebd6           jmp 0x3668
0x00003692      660f1f440000   nop word [rax + rax]
0x00003698      be0a000000     mov esi, 0xa
0x0000369d      e8ceeeffff     call sym.imp.__overflow
0x000036a2      e967ffffff     jmp 0x360e
0x000036a7      e864490000     call sym.xalloc_die                     ; /src:503
0x000036ac      e86feeffff     call sym.imp.__stack_chk_fail           ; /src:522
0x000036b1      0f1f440000     nop dword [rax + rax]
0x000036b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- display_speed:
0x000036c0      4154           push r12                                ; /src:2050
0x000036c2      55             push rbp
0x000036c3      4889fd         mov rbp, rdi
0x000036c6      53             push rbx
0x000036c7      89f3           mov ebx, esi
0x000036c9      e8d2edffff     call sym.imp.cfgetispeed                ; /src:2051
0x000036ce      85c0           test eax, eax
0x000036d0      7418           je 0x36ea
0x000036d2      4889ef         mov rdi, rbp
0x000036d5      e8c6edffff     call sym.imp.cfgetispeed
0x000036da      4889ef         mov rdi, rbp
0x000036dd      4189c4         mov r12d, eax
0x000036e0      e8dbefffff     call sym.imp.cfgetospeed
0x000036e5      4139c4         cmp r12d, eax
0x000036e8      7576           jne 0x3760
0x000036ea      4889ef         mov rdi, rbp                            ; /src:2052
0x000036ed      e8ceefffff     call sym.imp.cfgetospeed
0x000036f2      85c0           test eax, eax                           ; /src:2223
0x000036f4      0f8456010000   je 0x3850
0x000036fa      488d157fc320.  lea rdx, [0x0020fa80]
0x00003701      488d355b7f00.  lea rsi, [0x0000b663]                   ; "50"
0x00003708      31c9           xor ecx, ecx                            ; /src:2222
0x0000370a      eb15           jmp 0x3721
0x0000370c      0f1f4000       nop dword [rax]
0x00003710      4883c218       add rdx, 0x18
0x00003714      3b42e8         cmp eax, dword [rdx - 0x18]             ; /src:2223
0x00003717      0f84e3000000   je 0x3800
0x0000371d      488b72f8       mov rsi, qword [rdx - 8]
0x00003721      83c101         add ecx, 1                              ; /src:2222
0x00003724      4885f6         test rsi, rsi
0x00003727      75e7           jne 0x3710
0x00003729      488d05b47b00.  lea rax, str.speed__lu_baud             ; /src:2052 ; 0xb2e4 ; "speed %lu baud;"
0x00003730      488d3dc17b00.  lea rdi, [0x0000b2f8]                   ; "%lu\n"
0x00003737      84db           test bl, bl
0x00003739      480f45f8       cmovne rdi, rax
0x0000373d      31c0           xor eax, eax
0x0000373f      e8dcfdffff     call sym.wrapf
0x00003744      84db           test bl, bl                             ; /src:2058
0x00003746      750a           jne 0x3752
0x00003748      c705aada2000.  mov dword [obj.current_col], 0          ; /src:2059 ; [0x2111fc:4]=0
0x00003752      5b             pop rbx                                 ; /src:2060
0x00003753      5d             pop rbp
0x00003754      415c           pop r12
0x00003756      c3             ret
0x00003757      660f1f840000.  nop word [rax + rax]
0x00003760      4889ef         mov rdi, rbp                            ; /src:2055
0x00003763      e858efffff     call sym.imp.cfgetospeed
0x00003768      85c0           test eax, eax                           ; /src:2223
0x0000376a      742d           je 0x3799
0x0000376c      488d150dc320.  lea rdx, [0x0020fa80]
0x00003773      488d35e97e00.  lea rsi, [0x0000b663]                   ; "50"
0x0000377a      31c9           xor ecx, ecx                            ; /src:2222
0x0000377c      eb13           jmp 0x3791
0x0000377e      6690           nop
0x00003780      4883c218       add rdx, 0x18
0x00003784      3b42e8         cmp eax, dword [rdx - 0x18]             ; /src:2223
0x00003787      0f84ab000000   je 0x3838
0x0000378d      488b72f8       mov rsi, qword [rdx - 8]
0x00003791      83c101         add ecx, 1                              ; /src:2222
0x00003794      4885f6         test rsi, rsi
0x00003797      75e7           jne 0x3780
0x00003799      4531e4         xor r12d, r12d                          ; /src:2225
0x0000379c      4889ef         mov rdi, rbp                            ; /src:2055
0x0000379f      e8fcecffff     call sym.imp.cfgetispeed
0x000037a4      85c0           test eax, eax                           ; /src:2223
0x000037a6      742d           je 0x37d5
0x000037a8      488d0dd1c220.  lea rcx, [0x0020fa80]
0x000037af      488d3dad7e00.  lea rdi, [0x0000b663]                   ; "50"
0x000037b6      31f6           xor esi, esi                            ; /src:2222
0x000037b8      eb13           jmp 0x37cd
0x000037ba      660f1f440000   nop word [rax + rax]
0x000037c0      4883c118       add rcx, 0x18
0x000037c4      3b41e8         cmp eax, dword [rcx - 0x18]             ; /src:2223
0x000037c7      7457           je 0x3820
0x000037c9      488b79f8       mov rdi, qword [rcx - 8]
0x000037cd      83c601         add esi, 1                              ; /src:2222
0x000037d0      4885ff         test rdi, rdi
0x000037d3      75eb           jne 0x37c0
0x000037d5      31f6           xor esi, esi                            ; /src:2225
0x000037d7      488d05628100.  lea rax, str.ispeed__lu_baud__ospeed__lu_baud ; /src:2055 ; 0xb940 ; "ispeed %lu baud; ospeed %lu baud;"
0x000037de      488d3d0f7b00.  lea rdi, str.lu__lu                     ; 0xb2f4 ; "%lu %lu\n"
0x000037e5      84db           test bl, bl
0x000037e7      4c89e2         mov rdx, r12
0x000037ea      480f45f8       cmovne rdi, rax
0x000037ee      31c0           xor eax, eax
0x000037f0      e82bfdffff     call sym.wrapf
0x000037f5      e94affffff     jmp 0x3744
0x000037fa      660f1f440000   nop word [rax + rax]
0x00003800      4863c9         movsxd rcx, ecx
0x00003803      488d0556c220.  lea rax, obj.speeds                     ; 0x20fa60
0x0000380a      488d1449       lea rdx, [rcx + rcx*2]
0x0000380e      488b74d010     mov rsi, qword [rax + rdx*8 + 0x10]
0x00003813      e911ffffff     jmp 0x3729
0x00003818      0f1f84000000.  nop dword [rax + rax]
0x00003820      4863f6         movsxd rsi, esi
0x00003823      488d0536c220.  lea rax, obj.speeds                     ; 0x20fa60
0x0000382a      488d1476       lea rdx, [rsi + rsi*2]
0x0000382e      488b74d010     mov rsi, qword [rax + rdx*8 + 0x10]
0x00003833      eba2           jmp 0x37d7
0x00003835      0f1f00         nop dword [rax]
0x00003838      4863c9         movsxd rcx, ecx
0x0000383b      488d051ec220.  lea rax, obj.speeds                     ; 0x20fa60
0x00003842      488d1449       lea rdx, [rcx + rcx*2]
0x00003846      4c8b64d010     mov r12, qword [rax + rdx*8 + 0x10]
0x0000384b      e94cffffff     jmp 0x379c
0x00003850      31f6           xor esi, esi                            ; /src:2223
0x00003852      e9d2feffff     jmp 0x3729
0x00003857      660f1f840000.  nop word [rax + rax]
;-- integer_arg:
0x00003860      55             push rbp
0x00003861      53             push rbx
0x00003862      4889f5         mov rbp, rsi
0x00003865      488d35917a00.  lea rsi, str.invalid_integer_argument   ; 0xb2fd ; "invalid integer argument"
0x0000386c      4889fb         mov rbx, rdi
0x0000386f      ba05000000     mov edx, 5
0x00003874      4883ec08       sub rsp, 8
0x00003878      31ff           xor edi, edi
0x0000387a      e871ecffff     call sym.imp.dcgettext
0x0000387f      4883ec08       sub rsp, 8
0x00003883      4c8d058c7a00.  lea r8, [0x0000b316]                    ; "bB"
0x0000388a      4889e9         mov rcx, rbp
0x0000388d      6a00           push 0
0x0000388f      4889df         mov rdi, rbx
0x00003892      4989c1         mov r9, rax
0x00003895      31d2           xor edx, edx
0x00003897      31f6           xor esi, esi
0x00003899      e8b2470000     call sym.xnumtoumax
0x0000389e      4883c418       add rsp, 0x18
0x000038a2      5b             pop rbx
0x000038a3      5d             pop rbp
0x000038a4      c3             ret
0x000038a5      90             nop
0x000038a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- visible.part.0:
0x000038b0      4080ff1f       cmp dil, 0x1f
0x000038b4      7622           jbe 0x38d8
0x000038b6      4080ff7e       cmp dil, 0x7e
0x000038ba      7744           ja 0x3900
0x000038bc      488d055ed820.  lea rax, [0x00211121]                   ; /src:2180
0x000038c3      40883d56d820.  mov byte [obj.buf.7417], dil            ; [0x211120:1]=0
0x000038ca      c60000         mov byte [rax], 0
0x000038cd      488d054cd820.  lea rax, obj.buf.7417                   ; 0x211120
0x000038d4      c3             ret                                     ; /src:2182
0x000038d5      0f1f00         nop dword [rax]
0x000038d8      83c740         add edi, 0x40                           ; segment.PHDR
0x000038db      488d0540d820.  lea rax, [0x00211122]
0x000038e2      c60537d82000.  mov byte [obj.buf.7417], 0x5e           ; '^'
                                                                       ; [0x211120:1]=0
0x000038e9      40883d31d820.  mov byte [0x00211121], dil              ; [0x211121:1]=0
0x000038f0      c60000         mov byte [rax], 0
0x000038f3      488d0526d820.  lea rax, obj.buf.7417                   ; /src:2158 ; 0x211120
0x000038fa      c3             ret                                     ; /src:2160
0x000038fb      0f1f440000     nop dword [rax + rax]
0x00003900      4080ff7f       cmp dil, 0x7f
0x00003904      7432           je 0x3938
0x00003906      ba4d2d0000     mov edx, 0x2d4d                         ; 'M-' ; "p\xff\xff\xffH\x8b3H\x8d=q\xad"
0x0000390b      4080ff9f       cmp dil, 0x9f
0x0000390f      6689150ad820.  mov word [obj.buf.7417], dx             ; [0x211120:2]=0
0x00003916      7638           jbe 0x3950
0x00003918      4080ffff       cmp dil, 0xff
0x0000391c      7452           je 0x3970                               ; /src:2153
0x0000391e      83c780         add edi, 0xffffff80
0x00003921      488d05fbd720.  lea rax, [0x00211123]                   ; /src:2154
0x00003928      40883df3d720.  mov byte [0x00211122], dil              ; /src:2153 ; [0x211122:1]=0
0x0000392f      ebbf           jmp 0x38f0
0x00003931      0f1f80000000.  nop dword [rax]
0x00003938      b95e3f0000     mov ecx, 0x3f5e                         ; '^?'
0x0000393d      488d05ded720.  lea rax, [0x00211122]
0x00003944      66890dd5d720.  mov word [obj.buf.7417], cx             ; [0x211120:2]=0
0x0000394b      eba3           jmp 0x38f0
0x0000394d      0f1f00         nop dword [rax]
0x00003950      83ef40         sub edi, 0x40                           ; segment.PHDR
0x00003953      c605c8d72000.  mov byte [0x00211122], 0x5e             ; '^'
                                                                       ; [0x211122:1]=0
0x0000395a      488d05c3d720.  lea rax, [0x00211124]
0x00003961      40883dbbd720.  mov byte [0x00211123], dil              ; [0x211123:1]=0
0x00003968      eb86           jmp 0x38f0
0x0000396a      660f1f440000   nop word [rax + rax]
0x00003970      b85e3f0000     mov eax, 0x3f5e                         ; '^?'
0x00003975      668905a6d720.  mov word [0x00211122], ax               ; [0x211122:2]=0
0x0000397c      488d05a1d720.  lea rax, [0x00211124]
0x00003983      e968ffffff     jmp 0x38f0
0x00003988      0f1f84000000.  nop dword [rax + rax]
;-- screen_columns:
0x00003990      4883ec28       sub rsp, 0x28                           ; /src:1548
0x00003994      be13540000     mov esi, 0x5413                         ; /src:1522
0x00003999      bf01000000     mov edi, 1
0x0000399e      64488b042528.  mov rax, qword fs:[0x28]
0x000039a7      4889442418     mov qword [rsp + 0x18], rax
0x000039ac      31c0           xor eax, eax
0x000039ae      488d542410     lea rdx, [rsp + 0x10]                   ; /src:1529
0x000039b3      e818ecffff     call sym.imp.ioctl                      ; /src:1530
0x000039b8      85c0           test eax, eax
0x000039ba      750a           jne 0x39c6
0x000039bc      0fb7442412     movzx eax, word [rsp + 0x12]
0x000039c1      6685c0         test ax, ax
0x000039c4      7532           jne 0x39f8
0x000039c6      488d3d4c7900.  lea rdi, str.COLUMNS                    ; 0xb319 ; "COLUMNS"
0x000039cd      e83eeaffff     call sym.imp.getenv
0x000039d2      4885c0         test rax, rax
0x000039d5      741c           je 0x39f3
0x000039d7      488d4c2408     lea rcx, [rsp + 8]
0x000039dc      4c8d055ea600.  lea r8, [0x0000e041]
0x000039e3      31d2           xor edx, edx
0x000039e5      31f6           xor esi, esi
0x000039e7      4889c7         mov rdi, rax
0x000039ea      e891470000     call sym.xstrtol
0x000039ef      85c0           test eax, eax
0x000039f1      741d           je 0x3a10                               ; /src:1529
0x000039f3      b850000000     mov eax, 0x50                           ; 'P'
0x000039f8      488b4c2418     mov rcx, qword [rsp + 0x18]
0x000039fd      6448330c2528.  xor rcx, qword fs:[0x28]
0x00003a06      751c           jne 0x3a24
0x00003a08      4883c428       add rsp, 0x28
0x00003a0c      c3             ret                                     ; /src:1426
0x00003a0d      0f1f00         nop dword [rax]
0x00003a10      488b442408     mov rax, qword [rsp + 8]
0x00003a15      488d50ff       lea rdx, [rax - 1]
0x00003a19      4881fafeffff.  cmp rdx, 0x7ffffffe
0x00003a20      77d1           ja 0x39f3
0x00003a22      ebd4           jmp 0x39f8
0x00003a24      e8f7eaffff     call sym.imp.__stack_chk_fail
0x00003a29      0f1f80000000.  nop dword [rax]
;-- set_window_size:
0x00003a30      4156           push r14
0x00003a32      4155           push r13
0x00003a34      4989d5         mov r13, rdx
0x00003a37      4154           push r12                                ; /src:1420
0x00003a39      55             push rbp
0x00003a3a      4189fc         mov r12d, edi
0x00003a3d      53             push rbx
0x00003a3e      31ff           xor edi, edi
0x00003a40      89f5           mov ebp, esi
0x00003a42      be13540000     mov esi, 0x5413                         ; /src:1429
0x00003a47      4883ec10       sub rsp, 0x10
0x00003a4b      64488b042528.  mov rax, qword fs:[0x28]
0x00003a54      4889442408     mov qword [rsp + 8], rax
0x00003a59      31c0           xor eax, eax
0x00003a5b      4889e3         mov rbx, rsp
0x00003a5e      4889da         mov rdx, rbx
0x00003a61      e86aebffff     call sym.imp.ioctl
0x00003a66      85c0           test eax, eax
0x00003a68      7414           je 0x3a7e                               ; /src:1439
0x00003a6a      e8e1e9ffff     call sym.imp.__errno_location
0x00003a6f      833816         cmp dword [rax], 0x16
0x00003a72      4989c6         mov r14, rax
0x00003a75      754c           jne 0x3ac3
0x00003a77      48c703000000.  mov qword [rbx], 0
0x00003a7e      4585e4         test r12d, r12d
0x00003a81      7805           js 0x3a88
0x00003a83      6644892424     mov word [rsp], r12w
0x00003a88      85ed           test ebp, ebp
0x00003a8a      7805           js 0x3a91
0x00003a8c      66896c2402     mov word [rsp + 2], bp
0x00003a91      31ff           xor edi, edi
0x00003a93      31c0           xor eax, eax
0x00003a95      4889da         mov rdx, rbx
0x00003a98      be14540000     mov esi, 0x5414
0x00003a9d      e82eebffff     call sym.imp.ioctl
0x00003aa2      85c0           test eax, eax
0x00003aa4      754a           jne 0x3af0
0x00003aa6      488b442408     mov rax, qword [rsp + 8]
0x00003aab      644833042528.  xor rax, qword fs:[0x28]
0x00003ab4      7535           jne 0x3aeb
0x00003ab6      4883c410       add rsp, 0x10
0x00003aba      5b             pop rbx
0x00003abb      5d             pop rbp
0x00003abc      415c           pop r12
0x00003abe      415d           pop r13
0x00003ac0      415e           pop r14
0x00003ac2      c3             ret
0x00003ac3      4c89ea         mov rdx, r13
0x00003ac6      be03000000     mov esi, 3
0x00003acb      31ff           xor edi, edi
0x00003acd      e8de3a0000     call sym.quotearg_n_style_colon
0x00003ad2      418b36         mov esi, dword [r14]
0x00003ad5      488d15f09f00.  lea rdx, [0x0000dacc]                   ; "%s"
0x00003adc      4889c1         mov rcx, rax
0x00003adf      bf01000000     mov edi, 1
0x00003ae4      31c0           xor eax, eax
0x00003ae6      e8f5ebffff     call sym.imp.error
0x00003aeb      e830eaffff     call sym.imp.__stack_chk_fail
0x00003af0      4c89ea         mov rdx, r13
0x00003af3      be03000000     mov esi, 3
0x00003af8      31ff           xor edi, edi
0x00003afa      e8b13a0000     call sym.quotearg_n_style_colon
0x00003aff      4889c3         mov rbx, rax
0x00003b02      e849e9ffff     call sym.imp.__errno_location
0x00003b07      8b30           mov esi, dword [rax]                    ; /src:1360
0x00003b09      488d15bc9f00.  lea rdx, [0x0000dacc]                   ; "%s"
0x00003b10      4889d9         mov rcx, rbx
0x00003b13      bf01000000     mov edi, 1
0x00003b18      31c0           xor eax, eax
0x00003b1a      e8c1ebffff     call sym.imp.error
0x00003b1f      90             nop                                     ; /src:1247
;-- display_window_size:
0x00003b20      4154           push r12
0x00003b22      55             push rbp
0x00003b23      4889f5         mov rbp, rsi
0x00003b26      53             push rbx
0x00003b27      be13540000     mov esi, 0x5413
0x00003b2c      89fb           mov ebx, edi
0x00003b2e      31ff           xor edi, edi
0x00003b30      4883ec10       sub rsp, 0x10
0x00003b34      64488b042528.  mov rax, qword fs:[0x28]
0x00003b3d      4889442408     mov qword [rsp + 8], rax
0x00003b42      31c0           xor eax, eax
0x00003b44      4889e2         mov rdx, rsp
0x00003b47      e884eaffff     call sym.imp.ioctl
0x00003b4c      85c0           test eax, eax
0x00003b4e      7430           je 0x3b80
0x00003b50      e8fbe8ffff     call sym.imp.__errno_location
0x00003b55      833816         cmp dword [rax], 0x16
0x00003b58      4989c4         mov r12, rax
0x00003b5b      755d           jne 0x3bba
0x00003b5d      84db           test bl, bl
0x00003b5f      0f8483000000   je 0x3be8
0x00003b65      488b442408     mov rax, qword [rsp + 8]
0x00003b6a      644833042528.  xor rax, qword fs:[0x28]
0x00003b73      756e           jne 0x3be3
0x00003b75      4883c410       add rsp, 0x10
0x00003b79      5b             pop rbx
0x00003b7a      5d             pop rbp
0x00003b7b      415c           pop r12
0x00003b7d      c3             ret
0x00003b7e      6690           nop
0x00003b80      84db           test bl, bl
0x00003b82      0fb7542402     movzx edx, word [rsp + 2]
0x00003b87      0fb73424       movzx esi, word [rsp]
0x00003b8b      7413           je 0x3ba0
0x00003b8d      488d3d947700.  lea rdi, str.rows__d__columns__d        ; 0xb328 ; "rows %d; columns %d;"
0x00003b94      31c0           xor eax, eax
0x00003b96      e885f9ffff     call sym.wrapf
0x00003b9b      ebc8           jmp 0x3b65
0x00003b9d      0f1f00         nop dword [rax]
0x00003ba0      488d3d7a7700.  lea rdi, str.d__d                       ; 0xb321 ; "%d %d\n"
0x00003ba7      31c0           xor eax, eax
0x00003ba9      e872f9ffff     call sym.wrapf
0x00003bae      c70544d62000.  mov dword [obj.current_col], 0          ; [0x2111fc:4]=0
0x00003bb8      ebab           jmp 0x3b65
0x00003bba      4889ea         mov rdx, rbp
0x00003bbd      be03000000     mov esi, 3
0x00003bc2      31ff           xor edi, edi
0x00003bc4      e8e7390000     call sym.quotearg_n_style_colon
0x00003bc9      418b3424       mov esi, dword [r12]
0x00003bcd      488d15f89e00.  lea rdx, [0x0000dacc]                   ; "%s"
0x00003bd4      4889c1         mov rcx, rax
0x00003bd7      bf01000000     mov edi, 1
0x00003bdc      31c0           xor eax, eax
0x00003bde      e8fdeaffff     call sym.imp.error
0x00003be3      e838e9ffff     call sym.imp.__stack_chk_fail
0x00003be8      4889ea         mov rdx, rbp
0x00003beb      be03000000     mov esi, 3
0x00003bf0      31ff           xor edi, edi
0x00003bf2      e8b9390000     call sym.quotearg_n_style_colon
0x00003bf7      488d356a7d00.  lea rsi, str.s:_no_size_information_for_this_device ; 0xb968 ; "%s: no size information for this device"
0x00003bfe      4889c3         mov rbx, rax
0x00003c01      ba05000000     mov edx, 5
0x00003c06      31ff           xor edi, edi
0x00003c08      e8e3e8ffff     call sym.imp.dcgettext
0x00003c0d      4889d9         mov rcx, rbx
0x00003c10      4889c2         mov rdx, rax
0x00003c13      31f6           xor esi, esi
0x00003c15      bf01000000     mov edi, 1                              ; /src:-28
0x00003c1a      31c0           xor eax, eax
0x00003c1c      e8bfeaffff     call sym.imp.error
0x00003c21      0f1f440000     nop dword [rax + rax]
0x00003c26      662e0f1f8400.  nop word cs:[rax + rax]
;-- usage:
0x00003c30      4155           push r13
0x00003c32      4154           push r12
0x00003c34      ba05000000     mov edx, 5
0x00003c39      55             push rbp
0x00003c3a      53             push rbx
0x00003c3b      89fd           mov ebp, edi
0x00003c3d      4881ec880000.  sub rsp, 0x88
0x00003c44      488b1dcdd520.  mov rbx, qword [obj.program_name]       ; [0x211218:8]=0
0x00003c4b      64488b042528.  mov rax, qword fs:[0x28]
0x00003c54      4889442478     mov qword [rsp + 0x78], rax
0x00003c59      31c0           xor eax, eax
0x00003c5b      85ff           test edi, edi
0x00003c5d      742e           je 0x3c8d
0x00003c5f      488d352a7d00.  lea rsi, str.Try___s___help__for_more_information. ; 0xb990 ; "Try '%s --help' for more information.\n"
0x00003c66      31ff           xor edi, edi
0x00003c68      e883e8ffff     call sym.imp.dcgettext
0x00003c6d      488b3d8cd420.  mov rdi, qword [obj.stderr]             ; /src:-18 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x211100:8]=0
0x00003c74      4889c2         mov rdx, rax
0x00003c77      4889d9         mov rcx, rbx
0x00003c7a      be01000000     mov esi, 1
0x00003c7f      31c0           xor eax, eax
0x00003c81      e8faeaffff     call sym.imp.__fprintf_chk
0x00003c86      89ef           mov edi, ebp
0x00003c88      e8d3eaffff     call sym.imp.exit
0x00003c8d      488d35247d00.  lea rsi, str.Usage:__s___F_DEVICE_____file_DEVICE___SETTING_...____or:___s___F_DEVICE_____file_DEVICE____a___all_____or:___s___F_DEVICE_____file_DEVICE____g___save ; 0xb9b8 ; "Usage: %s [-F DEVICE | --file=DEVICE] [SETTING]...\n  or:  %s [-F DEVICE | --file=DEVICE] [-a|--all]\n  or:  %s [-F DEVICE | --file=DEVICE] [-g|--save]\n"
0x00003c94      31ff           xor edi, edi
0x00003c96      e855e8ffff     call sym.imp.dcgettext
0x00003c9b      4989d8         mov r8, rbx
0x00003c9e      4889d9         mov rcx, rbx
0x00003ca1      4889da         mov rdx, rbx
0x00003ca4      4889c6         mov rsi, rax
0x00003ca7      bf01000000     mov edi, 1
0x00003cac      31c0           xor eax, eax
0x00003cae      e81deaffff     call sym.imp.__printf_chk
0x00003cb3      488b1deed320.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00003cba      488d358f7d00.  lea rsi, str.Print_or_change_terminal_characteristics. ; 0xba50 ; "Print or change terminal characteristics.\n"
0x00003cc1      ba05000000     mov edx, 5
0x00003cc6      31ff           xor edi, edi
0x00003cc8      e823e8ffff     call sym.imp.dcgettext
0x00003ccd      4889de         mov rsi, rbx
0x00003cd0      4889c7         mov rdi, rax
0x00003cd3      e828e9ffff     call sym.imp.fputs_unlocked
0x00003cd8      488b1dc9d320.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00003cdf      488d359a7d00.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0xba80 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x00003ce6      ba05000000     mov edx, 5
0x00003ceb      31ff           xor edi, edi
0x00003ced      e8fee7ffff     call sym.imp.dcgettext
0x00003cf2      4889de         mov rsi, rbx
0x00003cf5      4889c7         mov rdi, rax
0x00003cf8      e803e9ffff     call sym.imp.fputs_unlocked
0x00003cfd      488b1da4d320.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00003d04      488d35c57d00.  lea rsi, str.a____all__________print_all_current_settings_in_human_readable_form_____g____save_________print_all_current_settings_in_a_stty_readable_form_____F____file_DEVICE__open_and_use_the_specified_DEVICE_instead_of_stdin ; 0xbad0 ; "  -a, --all          print all current settings in human-readable form\n  -g, --save         print all current settings in a stty-readable form\n  -F, --file=DEVICE  open and use the specified DEVICE instead of stdin\n"
0x00003d0b      ba05000000     mov edx, 5
0x00003d10      31ff           xor edi, edi
0x00003d12      e8d9e7ffff     call sym.imp.dcgettext
0x00003d17      4889de         mov rsi, rbx
0x00003d1a      4889c7         mov rdi, rax
0x00003d1d      e8dee8ffff     call sym.imp.fputs_unlocked
0x00003d22      488b1d7fd320.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00003d29      488d35787e00.  lea rsi, str.help_____display_this_help_and_exit ; 0xbba8 ; "      --help     display this help and exit\n"
0x00003d30      ba05000000     mov edx, 5
0x00003d35      31ff           xor edi, edi
0x00003d37      e8b4e7ffff     call sym.imp.dcgettext
0x00003d3c      4889de         mov rsi, rbx
0x00003d3f      4889c7         mov rdi, rax
0x00003d42      e8b9e8ffff     call sym.imp.fputs_unlocked
0x00003d47      488b1d5ad320.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00003d4e      488d35837e00.  lea rsi, str.version__output_version_information_and_exit ; 0xbbd8 ; "      --version  output version information and exit\n"
0x00003d55      ba05000000     mov edx, 5
0x00003d5a      31ff           xor edi, edi
0x00003d5c      e88fe7ffff     call sym.imp.dcgettext
0x00003d61      4889de         mov rsi, rbx
0x00003d64      4889c7         mov rdi, rax
0x00003d67      e894e8ffff     call sym.imp.fputs_unlocked
0x00003d6c      488b1d35d320.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00003d73      488d35967e00.  lea rsi, str.Optional___before_SETTING_indicates_negation.__An___marks_non_POSIX__settings.__The_underlying_system_defines_which_settings_are_available. ; 0xbc10 ; "\nOptional - before SETTING indicates negation.  An * marks non-POSIX\nsettings.  The underlying system defines which settings are available.\n"
0x00003d7a      ba05000000     mov edx, 5
0x00003d7f      31ff           xor edi, edi
0x00003d81      e86ae7ffff     call sym.imp.dcgettext
0x00003d86      4889de         mov rsi, rbx
0x00003d89      4889c7         mov rdi, rax
0x00003d8c      e86fe8ffff     call sym.imp.fputs_unlocked
0x00003d91      488b1d10d320.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00003d98      488d35a37500.  lea rsi, str.Special_characters:        ; 0xb342 ; "\nSpecial characters:\n"
0x00003d9f      ba05000000     mov edx, 5
0x00003da4      31ff           xor edi, edi
0x00003da6      e845e7ffff     call sym.imp.dcgettext
0x00003dab      4889de         mov rsi, rbx
0x00003dae      4889c7         mov rdi, rax
0x00003db1      e84ae8ffff     call sym.imp.fputs_unlocked
0x00003db6      488b1debd220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00003dbd      488d35dc7e00.  lea rsi, str.discard_CHAR__CHAR_will_toggle_discarding_of_output ; 0xbca0 ; " * discard CHAR  CHAR will toggle discarding of output\n"
0x00003dc4      ba05000000     mov edx, 5
0x00003dc9      31ff           xor edi, edi
0x00003dcb      e820e7ffff     call sym.imp.dcgettext
0x00003dd0      4889de         mov rsi, rbx
0x00003dd3      4889c7         mov rdi, rax
0x00003dd6      e825e8ffff     call sym.imp.fputs_unlocked
0x00003ddb      488b1dc6d220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00003de2      488d35ef7e00.  lea rsi, str.eof_CHAR______CHAR_will_send_an_end_of_file__terminate_the_input______eol_CHAR______CHAR_will_end_the_line ; 0xbcd8 ; "   eof CHAR      CHAR will send an end of file (terminate the input)\n   eol CHAR      CHAR will end the line\n"
0x00003de9      ba05000000     mov edx, 5
0x00003dee      31ff           xor edi, edi
0x00003df0      e8fbe6ffff     call sym.imp.dcgettext
0x00003df5      4889de         mov rsi, rbx
0x00003df8      4889c7         mov rdi, rax
0x00003dfb      e800e8ffff     call sym.imp.fputs_unlocked
0x00003e00      488b1da1d220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00003e07      488d353a7f00.  lea rsi, str.eol2_CHAR_____alternate_CHAR_for_ending_the_line ; 0xbd48 ; " * eol2 CHAR     alternate CHAR for ending the line\n"
0x00003e0e      ba05000000     mov edx, 5
0x00003e13      31ff           xor edi, edi
0x00003e15      e8d6e6ffff     call sym.imp.dcgettext
0x00003e1a      4889de         mov rsi, rbx
0x00003e1d      4889c7         mov rdi, rax
0x00003e20      e8dbe7ffff     call sym.imp.fputs_unlocked
0x00003e25      488b1d7cd220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00003e2c      488d354d7f00.  lea rsi, str.erase_CHAR____CHAR_will_erase_the_last_character_typed_____intr_CHAR_____CHAR_will_send_an_interrupt_signal_____kill_CHAR_____CHAR_will_erase_the_current_line ; 0xbd80 ; "   erase CHAR    CHAR will erase the last character typed\n   intr CHAR     CHAR will send an interrupt signal\n   kill CHAR     CHAR will erase the current line\n"
0x00003e33      ba05000000     mov edx, 5
0x00003e38      31ff           xor edi, edi
0x00003e3a      e8b1e6ffff     call sym.imp.dcgettext
0x00003e3f      4889de         mov rsi, rbx
0x00003e42      4889c7         mov rdi, rax
0x00003e45      e8b6e7ffff     call sym.imp.fputs_unlocked
0x00003e4a      488b1d57d220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00003e51      488d35d07f00.  lea rsi, str.lnext_CHAR____CHAR_will_enter_the_next_character_quoted ; 0xbe28 ; " * lnext CHAR    CHAR will enter the next character quoted\n"
0x00003e58      ba05000000     mov edx, 5
0x00003e5d      31ff           xor edi, edi
0x00003e5f      e88ce6ffff     call sym.imp.dcgettext
0x00003e64      4889de         mov rsi, rbx
0x00003e67      4889c7         mov rdi, rax
0x00003e6a      e891e7ffff     call sym.imp.fputs_unlocked
0x00003e6f      488b1d32d220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00003e76      488d35eb7f00.  lea rsi, str.quit_CHAR_____CHAR_will_send_a_quit_signal ; 0xbe68 ; "   quit CHAR     CHAR will send a quit signal\n"
0x00003e7d      ba05000000     mov edx, 5
0x00003e82      31ff           xor edi, edi
0x00003e84      e867e6ffff     call sym.imp.dcgettext
0x00003e89      4889de         mov rsi, rbx
0x00003e8c      4889c7         mov rdi, rax
0x00003e8f      e86ce7ffff     call sym.imp.fputs_unlocked
0x00003e94      488b1d0dd220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00003e9b      488d35f67f00.  lea rsi, str.rprnt_CHAR____CHAR_will_redraw_the_current_line ; 0xbe98 ; " * rprnt CHAR    CHAR will redraw the current line\n"
0x00003ea2      ba05000000     mov edx, 5
0x00003ea7      31ff           xor edi, edi
0x00003ea9      e842e6ffff     call sym.imp.dcgettext
0x00003eae      4889de         mov rsi, rbx
0x00003eb1      4889c7         mov rdi, rax
0x00003eb4      e847e7ffff     call sym.imp.fputs_unlocked
0x00003eb9      488b1de8d120.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00003ec0      488d35098000.  lea rsi, str.start_CHAR____CHAR_will_restart_the_output_after_stopping_it_____stop_CHAR_____CHAR_will_stop_the_output_____susp_CHAR_____CHAR_will_send_a_terminal_stop_signal ; 0xbed0 ; "   start CHAR    CHAR will restart the output after stopping it\n   stop CHAR     CHAR will stop the output\n   susp CHAR     CHAR will send a terminal stop signal\n"
0x00003ec7      ba05000000     mov edx, 5
0x00003ecc      31ff           xor edi, edi
0x00003ece      e81de6ffff     call sym.imp.dcgettext
0x00003ed3      4889de         mov rsi, rbx
0x00003ed6      4889c7         mov rdi, rax
0x00003ed9      e822e7ffff     call sym.imp.fputs_unlocked
0x00003ede      488b1dc3d120.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00003ee5      488d358c8000.  lea rsi, str.swtch_CHAR____CHAR_will_switch_to_a_different_shell_layer ; 0xbf78 ; " * swtch CHAR    CHAR will switch to a different shell layer\n"
0x00003eec      ba05000000     mov edx, 5
0x00003ef1      31ff           xor edi, edi
0x00003ef3      e8f8e5ffff     call sym.imp.dcgettext
0x00003ef8      4889de         mov rsi, rbx
0x00003efb      4889c7         mov rdi, rax
0x00003efe      e8fde6ffff     call sym.imp.fputs_unlocked
0x00003f03      488b1d9ed120.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00003f0a      488d35a78000.  lea rsi, str.werase_CHAR___CHAR_will_erase_the_last_word_typed ; 0xbfb8 ; " * werase CHAR   CHAR will erase the last word typed\n"
0x00003f11      ba05000000     mov edx, 5
0x00003f16      31ff           xor edi, edi
0x00003f18      e8d3e5ffff     call sym.imp.dcgettext
0x00003f1d      4889de         mov rsi, rbx
0x00003f20      4889c7         mov rdi, rax
0x00003f23      e8d8e6ffff     call sym.imp.fputs_unlocked
0x00003f28      488b1d79d120.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00003f2f      488d35ba8000.  lea rsi, str.Special_settings:_____N_____________set_the_input_and_output_speeds_to_N_bauds ; 0xbff0 ; "\nSpecial settings:\n   N             set the input and output speeds to N bauds\n"
0x00003f36      ba05000000     mov edx, 5
0x00003f3b      31ff           xor edi, edi
0x00003f3d      e8aee5ffff     call sym.imp.dcgettext
0x00003f42      4889de         mov rsi, rbx
0x00003f45      4889c7         mov rdi, rax
0x00003f48      e8b3e6ffff     call sym.imp.fputs_unlocked
0x00003f4d      488b1d54d120.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00003f54      488d35e58000.  lea rsi, str.cols_N________tell_the_kernel_that_the_terminal_has_N_columns_____columns_N_____same_as_cols_N ; 0xc040 ; " * cols N        tell the kernel that the terminal has N columns\n * columns N     same as cols N\n"
0x00003f5b      ba05000000     mov edx, 5
0x00003f60      31ff           xor edi, edi
0x00003f62      e889e5ffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/src/ty.c:-451
0x00003f67      4889de         mov rsi, rbx
0x00003f6a      4889c7         mov rdi, rax
0x00003f6d      e88ee6ffff     call sym.imp.fputs_unlocked
0x00003f72      833d97d02000.  cmp dword [obj.tcsetattr_options], 1    ; [0x211010:4]=1
0x00003f79      ba05000000     mov edx, 5
0x00003f7e      0f84170b0000   je 0x4a9b
0x00003f84      488d35507800.  lea rsi, [0x0000b7db]                   ; "off"
0x00003f8b      31ff           xor edi, edi
0x00003f8d      e85ee5ffff     call sym.imp.dcgettext
0x00003f92      4889c3         mov rbx, rax
0x00003f95      488d350c8100.  lea rsi, str.drain______wait_for_transmission_before_applying_settings___s_by_default ; 0xc0a8 ; " * [-]drain      wait for transmission before applying settings (%s by default)\n"
0x00003f9c      31ff           xor edi, edi
0x00003f9e      ba05000000     mov edx, 5
0x00003fa3      e848e5ffff     call sym.imp.dcgettext
0x00003fa8      4889da         mov rdx, rbx
0x00003fab      4889c6         mov rsi, rax
0x00003fae      bf01000000     mov edi, 1
0x00003fb3      31c0           xor eax, eax
0x00003fb5      e816e7ffff     call sym.imp.__printf_chk
0x00003fba      488b1de7d020.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00003fc1      488d35388100.  lea rsi, str.ispeed_N______set_the_input_speed_to_N ; 0xc100 ; "   ispeed N      set the input speed to N\n"
0x00003fc8      ba05000000     mov edx, 5
0x00003fcd      31ff           xor edi, edi
0x00003fcf      e81ce5ffff     call sym.imp.dcgettext
0x00003fd4      4889de         mov rsi, rbx
0x00003fd7      4889c7         mov rdi, rax
0x00003fda      e821e6ffff     call sym.imp.fputs_unlocked
0x00003fdf      488b1dc2d020.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00003fe6      488d35438100.  lea rsi, str.line_N________use_line_discipline_N ; 0xc130 ; " * line N        use line discipline N\n"
0x00003fed      ba05000000     mov edx, 5
0x00003ff2      31ff           xor edi, edi
0x00003ff4      e8f7e4ffff     call sym.imp.dcgettext
0x00003ff9      4889de         mov rsi, rbx
0x00003ffc      4889c7         mov rdi, rax
0x00003fff      e8fce5ffff     call sym.imp.fputs_unlocked
0x00004004      488b1d9dd020.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x0000400b      488d35468100.  lea rsi, str.min_N_________with__icanon__set_N_characters_minimum_for_a_completed_read_____ospeed_N______set_the_output_speed_to_N ; 0xc158 ; "   min N         with -icanon, set N characters minimum for a completed read\n   ospeed N      set the output speed to N\n"
0x00004012      ba05000000     mov edx, 5
0x00004017      31ff           xor edi, edi
0x00004019      e8d2e4ffff     call sym.imp.dcgettext
0x0000401e      4889de         mov rsi, rbx
0x00004021      4889c7         mov rdi, rax
0x00004024      e8d7e5ffff     call sym.imp.fputs_unlocked
0x00004029      488b1d78d020.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00004030      488d35a18100.  lea rsi, str.rows_N________tell_the_kernel_that_the_terminal_has_N_rows_____size__________print_the_number_of_rows_and_columns_according_to_the_kernel ; 0xc1d8 ; " * rows N        tell the kernel that the terminal has N rows\n * size          print the number of rows and columns according to the kernel\n"
0x00004037      ba05000000     mov edx, 5
0x0000403c      31ff           xor edi, edi
0x0000403e      e8ade4ffff     call sym.imp.dcgettext
0x00004043      4889de         mov rsi, rbx
0x00004046      4889c7         mov rdi, rax
0x00004049      e8b2e5ffff     call sym.imp.fputs_unlocked
0x0000404e      488b1d53d020.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00004055      488d350c8200.  lea rsi, str.speed_________print_the_terminal_speed_____time_N________with__icanon__set_read_timeout_of_N_tenths_of_a_second ; 0xc268 ; "   speed         print the terminal speed\n   time N        with -icanon, set read timeout of N tenths of a second\n"
0x0000405c      ba05000000     mov edx, 5
0x00004061      31ff           xor edi, edi
0x00004063      e888e4ffff     call sym.imp.dcgettext
0x00004068      4889de         mov rsi, rbx
0x0000406b      4889c7         mov rdi, rax
0x0000406e      e88de5ffff     call sym.imp.fputs_unlocked
0x00004073      488b1d2ed020.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x0000407a      488d355f8200.  lea rsi, str.Control_settings:________clocal_____disable_modem_control_signals________cread______allow_input_to_be_received ; 0xc2e0 ; "\nControl settings:\n   [-]clocal     disable modem control signals\n   [-]cread      allow input to be received\n"
0x00004081      ba05000000     mov edx, 5
0x00004086      31ff           xor edi, edi
0x00004088      e863e4ffff     call sym.imp.dcgettext
0x0000408d      4889de         mov rsi, rbx
0x00004090      4889c7         mov rdi, rax
0x00004093      e868e5ffff     call sym.imp.fputs_unlocked
0x00004098      488b1d09d020.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x0000409f      488d35aa8200.  lea rsi, str.crtscts____enable_RTS_CTS_handshaking ; 0xc350 ; " * [-]crtscts    enable RTS/CTS handshaking\n"
0x000040a6      ba05000000     mov edx, 5
0x000040ab      31ff           xor edi, edi
0x000040ad      e83ee4ffff     call sym.imp.dcgettext
0x000040b2      4889de         mov rsi, rbx
0x000040b5      4889c7         mov rdi, rax
0x000040b8      e843e5ffff     call sym.imp.fputs_unlocked
0x000040bd      488b1de4cf20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x000040c4      488d35b58200.  lea rsi, str.csN___________set_character_size_to_N_bits__N_in__5..8 ; 0xc380 ; "   csN           set character size to N bits, N in [5..8]\n"
0x000040cb      ba05000000     mov edx, 5
0x000040d0      31ff           xor edi, edi
0x000040d2      e819e4ffff     call sym.imp.dcgettext
0x000040d7      4889de         mov rsi, rbx
0x000040da      4889c7         mov rdi, rax
0x000040dd      e81ee5ffff     call sym.imp.fputs_unlocked
0x000040e2      488b1dbfcf20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x000040e9      488d35d08200.  lea rsi, str.cstopb_____use_two_stop_bits_per_character__one_with_____________hup________send_a_hangup_signal_when_the_last_process_closes_the_tty________hupcl______same_as____hup________parenb_____generate_parity_bit_in_output_and_expect_parity_bit_in_input________parodd_____set_odd_parity__or_even_parity_with ; 0xc3c0 ; "   [-]cstopb     use two stop bits per character (one with '-')\n   [-]hup        send a hangup signal when the last process closes the tty\n   [-]hupcl      same as [-]hup\n   [-]parenb     generate parity bit in output and expect parity bit in input\n   [-]parodd     set odd parity (or even parity with '-')\n"
0x000040f0      ba05000000     mov edx, 5
0x000040f5      31ff           xor edi, edi
0x000040f7      e8f4e3ffff     call sym.imp.dcgettext
0x000040fc      4889de         mov rsi, rbx
0x000040ff      4889c7         mov rdi, rax
0x00004102      e8f9e4ffff     call sym.imp.fputs_unlocked
0x00004107      488b1d9acf20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x0000410e      488d35e38300.  lea rsi, str.cmspar_____use__stick___mark_space__parity ; 0xc4f8 ; " * [-]cmspar     use \"stick\" (mark/space) parity\n"
0x00004115      ba05000000     mov edx, 5
0x0000411a      31ff           xor edi, edi
0x0000411c      e8cfe3ffff     call sym.imp.dcgettext
0x00004121      4889de         mov rsi, rbx
0x00004124      4889c7         mov rdi, rax
0x00004127      e8d4e4ffff     call sym.imp.fputs_unlocked
0x0000412c      488b1d75cf20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00004133      488d35f68300.  lea rsi, str.Input_settings:________brkint_____breaks_cause_an_interrupt_signal________icrnl______translate_carriage_return_to_newline________ignbrk_____ignore_break_characters________igncr______ignore_carriage_return________ignpar_____ignore_characters_with_parity_errors ; 0xc530 ; "\nInput settings:\n   [-]brkint     breaks cause an interrupt signal\n   [-]icrnl      translate carriage return to newline\n   [-]ignbrk     ignore break characters\n   [-]igncr      ignore carriage return\n   [-]ignpar     ignore characters with parity errors\n"
0x0000413a      ba05000000     mov edx, 5
0x0000413f      31ff           xor edi, edi
0x00004141      e8aae3ffff     call sym.imp.dcgettext
0x00004146      4889de         mov rsi, rbx
0x00004149      4889c7         mov rdi, rax
0x0000414c      e8afe4ffff     call sym.imp.fputs_unlocked
0x00004151      488b1d50cf20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00004158      488d35d98400.  lea rsi, str.imaxbel____beep_and_do_not_flush_a_full_input_buffer_on_a_character ; 0xc638 ; " * [-]imaxbel    beep and do not flush a full input buffer on a character\n"
0x0000415f      ba05000000     mov edx, 5
0x00004164      31ff           xor edi, edi
0x00004166      e885e3ffff     call sym.imp.dcgettext
0x0000416b      4889de         mov rsi, rbx
0x0000416e      4889c7         mov rdi, rax
0x00004171      e88ae4ffff     call sym.imp.fputs_unlocked
0x00004176      488b1d2bcf20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x0000417d      488d35048500.  lea rsi, str.inlcr______translate_newline_to_carriage_return________inpck______enable_input_parity_checking________istrip_____clear_high__8th__bit_of_input_characters ; 0xc688 ; "   [-]inlcr      translate newline to carriage return\n   [-]inpck      enable input parity checking\n   [-]istrip     clear high (8th) bit of input characters\n"
0x00004184      ba05000000     mov edx, 5
0x00004189      31ff           xor edi, edi
0x0000418b      e860e3ffff     call sym.imp.dcgettext
0x00004190      4889de         mov rsi, rbx
0x00004193      4889c7         mov rdi, rax
0x00004196      e865e4ffff     call sym.imp.fputs_unlocked
0x0000419b      488b1d06cf20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x000041a2      488d357f8500.  lea rsi, str.iutf8______assume_input_characters_are_UTF_8_encoded ; 0xc728 ; " * [-]iutf8      assume input characters are UTF-8 encoded\n"
0x000041a9      ba05000000     mov edx, 5
0x000041ae      31ff           xor edi, edi
0x000041b0      e83be3ffff     call sym.imp.dcgettext
0x000041b5      4889de         mov rsi, rbx
0x000041b8      4889c7         mov rdi, rax
0x000041bb      e840e4ffff     call sym.imp.fputs_unlocked
0x000041c0      488b1de1ce20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x000041c7      488d359a8500.  lea rsi, str.iuclc______translate_uppercase_characters_to_lowercase ; 0xc768 ; " * [-]iuclc      translate uppercase characters to lowercase\n"
0x000041ce      ba05000000     mov edx, 5
0x000041d3      31ff           xor edi, edi
0x000041d5      e816e3ffff     call sym.imp.dcgettext
0x000041da      4889de         mov rsi, rbx
0x000041dd      4889c7         mov rdi, rax
0x000041e0      e81be4ffff     call sym.imp.fputs_unlocked
0x000041e5      488b1dbcce20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x000041ec      488d35b58500.  lea rsi, str.ixany______let_any_character_restart_output__not_only_start_character ; 0xc7a8 ; " * [-]ixany      let any character restart output, not only start character\n"
0x000041f3      ba05000000     mov edx, 5
0x000041f8      31ff           xor edi, edi
0x000041fa      e8f1e2ffff     call sym.imp.dcgettext
0x000041ff      4889de         mov rsi, rbx
0x00004202      4889c7         mov rdi, rax
0x00004205      e8f6e3ffff     call sym.imp.fputs_unlocked
0x0000420a      488b1d97ce20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00004211      488d35e08500.  lea rsi, str.ixoff______enable_sending_of_start_stop_characters________ixon_______enable_XON_XOFF_flow_control________parmrk_____mark_parity_errors__with_a_255_0_character_sequence_________tandem_____same_as____ixoff ; 0xc7f8 ; "   [-]ixoff      enable sending of start/stop characters\n   [-]ixon       enable XON/XOFF flow control\n   [-]parmrk     mark parity errors (with a 255-0-character sequence)\n   [-]tandem     same as [-]ixoff\n"
0x00004218      ba05000000     mov edx, 5
0x0000421d      31ff           xor edi, edi
0x0000421f      e8cce2ffff     call sym.imp.dcgettext
0x00004224      4889de         mov rsi, rbx
0x00004227      4889c7         mov rdi, rax
0x0000422a      e8d1e3ffff     call sym.imp.fputs_unlocked
0x0000422f      488b1d72ce20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00004236      488d351b7100.  lea rsi, str.Output_settings:           ; 0xb358 ; "\nOutput settings:\n"
0x0000423d      ba05000000     mov edx, 5
0x00004242      31ff           xor edi, edi
0x00004244      e8a7e2ffff     call sym.imp.dcgettext
0x00004249      4889de         mov rsi, rbx
0x0000424c      4889c7         mov rdi, rax
0x0000424f      e8ace3ffff     call sym.imp.fputs_unlocked
0x00004254      488b1d4dce20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x0000425b      488d35668600.  lea rsi, str.bsN___________backspace_delay_style__N_in__0..1 ; 0xc8c8 ; " * bsN           backspace delay style, N in [0..1]\n"
0x00004262      ba05000000     mov edx, 5
0x00004267      31ff           xor edi, edi
0x00004269      e882e2ffff     call sym.imp.dcgettext
0x0000426e      4889de         mov rsi, rbx
0x00004271      4889c7         mov rdi, rax
0x00004274      e887e3ffff     call sym.imp.fputs_unlocked
0x00004279      488b1d28ce20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00004280      488d35798600.  lea rsi, str.crN___________carriage_return_delay_style__N_in__0..3 ; 0xc900 ; " * crN           carriage return delay style, N in [0..3]\n"
0x00004287      ba05000000     mov edx, 5
0x0000428c      31ff           xor edi, edi
0x0000428e      e85de2ffff     call sym.imp.dcgettext
0x00004293      4889de         mov rsi, rbx
0x00004296      4889c7         mov rdi, rax
0x00004299      e862e3ffff     call sym.imp.fputs_unlocked
0x0000429e      488b1d03ce20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x000042a5      488d35948600.  lea rsi, str.ffN___________form_feed_delay_style__N_in__0..1 ; 0xc940 ; " * ffN           form feed delay style, N in [0..1]\n"
0x000042ac      31ff           xor edi, edi
0x000042ae      ba05000000     mov edx, 5
0x000042b3      e838e2ffff     call sym.imp.dcgettext
0x000042b8      4889de         mov rsi, rbx
0x000042bb      4889c7         mov rdi, rax
0x000042be      e83de3ffff     call sym.imp.fputs_unlocked
0x000042c3      488b1ddecd20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x000042ca      488d35a78600.  lea rsi, str.nlN___________newline_delay_style__N_in__0..1 ; 0xc978 ; " * nlN           newline delay style, N in [0..1]\n"
0x000042d1      ba05000000     mov edx, 5
0x000042d6      31ff           xor edi, edi
0x000042d8      e813e2ffff     call sym.imp.dcgettext
0x000042dd      4889de         mov rsi, rbx
0x000042e0      4889c7         mov rdi, rax
0x000042e3      e818e3ffff     call sym.imp.fputs_unlocked
0x000042e8      488b1db9cd20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x000042ef      488d35ba8600.  lea rsi, str.ocrnl______translate_carriage_return_to_newline ; 0xc9b0 ; " * [-]ocrnl      translate carriage return to newline\n"
0x000042f6      ba05000000     mov edx, 5
0x000042fb      31ff           xor edi, edi
0x000042fd      e8eee1ffff     call sym.imp.dcgettext
0x00004302      4889de         mov rsi, rbx
0x00004305      4889c7         mov rdi, rax
0x00004308      e8f3e2ffff     call sym.imp.fputs_unlocked
0x0000430d      488b1d94cd20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00004314      488d35cd8600.  lea rsi, str.ofdel______use_delete_characters_for_fill_instead_of_NUL_characters ; 0xc9e8 ; " * [-]ofdel      use delete characters for fill instead of NUL characters\n"
0x0000431b      ba05000000     mov edx, 5
0x00004320      31ff           xor edi, edi
0x00004322      e8c9e1ffff     call sym.imp.dcgettext
0x00004327      4889de         mov rsi, rbx
0x0000432a      4889c7         mov rdi, rax
0x0000432d      e8cee2ffff     call sym.imp.fputs_unlocked
0x00004332      488b1d6fcd20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00004339      488d35f88600.  lea rsi, str.ofill______use_fill__padding__characters_instead_of_timing_for_delays ; 0xca38 ; " * [-]ofill      use fill (padding) characters instead of timing for delays\n"
0x00004340      ba05000000     mov edx, 5
0x00004345      31ff           xor edi, edi
0x00004347      e8a4e1ffff     call sym.imp.dcgettext
0x0000434c      4889de         mov rsi, rbx
0x0000434f      4889c7         mov rdi, rax
0x00004352      e8a9e2ffff     call sym.imp.fputs_unlocked
0x00004357      488b1d4acd20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x0000435e      488d35238700.  lea rsi, str.olcuc______translate_lowercase_characters_to_uppercase ; 0xca88 ; " * [-]olcuc      translate lowercase characters to uppercase\n"
0x00004365      ba05000000     mov edx, 5
0x0000436a      31ff           xor edi, edi
0x0000436c      e87fe1ffff     call sym.imp.dcgettext
0x00004371      4889de         mov rsi, rbx
0x00004374      4889c7         mov rdi, rax
0x00004377      e884e2ffff     call sym.imp.fputs_unlocked
0x0000437c      488b1d25cd20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00004383      488d353e8700.  lea rsi, str.onlcr______translate_newline_to_carriage_return_newline ; 0xcac8 ; " * [-]onlcr      translate newline to carriage return-newline\n"
0x0000438a      ba05000000     mov edx, 5
0x0000438f      31ff           xor edi, edi
0x00004391      e85ae1ffff     call sym.imp.dcgettext
0x00004396      4889de         mov rsi, rbx
0x00004399      4889c7         mov rdi, rax
0x0000439c      e85fe2ffff     call sym.imp.fputs_unlocked
0x000043a1      488b1d00cd20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x000043a8      488d35598700.  lea rsi, str.onlret_____newline_performs_a_carriage_return ; 0xcb08 ; " * [-]onlret     newline performs a carriage return\n"
0x000043af      ba05000000     mov edx, 5
0x000043b4      31ff           xor edi, edi
0x000043b6      e835e1ffff     call sym.imp.dcgettext
0x000043bb      4889de         mov rsi, rbx
0x000043be      4889c7         mov rdi, rax
0x000043c1      e83ae2ffff     call sym.imp.fputs_unlocked
0x000043c6      488b1ddbcc20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x000043cd      488d356c8700.  lea rsi, str.onocr______do_not_print_carriage_returns_in_the_first_column ; 0xcb40 ; " * [-]onocr      do not print carriage returns in the first column\n"
0x000043d4      ba05000000     mov edx, 5
0x000043d9      31ff           xor edi, edi
0x000043db      e810e1ffff     call sym.imp.dcgettext
0x000043e0      4889de         mov rsi, rbx
0x000043e3      4889c7         mov rdi, rax
0x000043e6      e815e2ffff     call sym.imp.fputs_unlocked
0x000043eb      488b1db6cc20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x000043f2      488d358f8700.  lea rsi, str.opost______postprocess_output ; 0xcb88 ; "   [-]opost      postprocess output\n"
0x000043f9      ba05000000     mov edx, 5
0x000043fe      31ff           xor edi, edi
0x00004400      e8ebe0ffff     call sym.imp.dcgettext
0x00004405      4889de         mov rsi, rbx
0x00004408      4889c7         mov rdi, rax
0x0000440b      e8f0e1ffff     call sym.imp.fputs_unlocked
0x00004410      488b1d91cc20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00004417      488d35928700.  lea rsi, str.tabN__________horizontal_tab_delay_style__N_in__0..3______tabs__________same_as_tab0______tabs_________same_as_tab3 ; 0xcbb0 ; " * tabN          horizontal tab delay style, N in [0..3]\n * tabs          same as tab0\n * -tabs         same as tab3\n"
0x0000441e      ba05000000     mov edx, 5
0x00004423      31ff           xor edi, edi
0x00004425      e8c6e0ffff     call sym.imp.dcgettext
0x0000442a      4889de         mov rsi, rbx
0x0000442d      4889c7         mov rdi, rax
0x00004430      e8cbe1ffff     call sym.imp.fputs_unlocked
0x00004435      488b1d6ccc20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x0000443c      488d35e58700.  lea rsi, str.vtN___________vertical_tab_delay_style__N_in__0..1 ; 0xcc28 ; " * vtN           vertical tab delay style, N in [0..1]\n"
0x00004443      ba05000000     mov edx, 5
0x00004448      31ff           xor edi, edi
0x0000444a      e8a1e0ffff     call sym.imp.dcgettext
0x0000444f      4889de         mov rsi, rbx
0x00004452      4889c7         mov rdi, rax
0x00004455      e8a6e1ffff     call sym.imp.fputs_unlocked
0x0000445a      488b1d47cc20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00004461      488d35f88700.  lea rsi, str.Local_settings:________crterase___echo_erase_characters_as_backspace_space_backspace ; 0xcc60 ; "\nLocal settings:\n   [-]crterase   echo erase characters as backspace-space-backspace\n"
0x00004468      ba05000000     mov edx, 5
0x0000446d      31ff           xor edi, edi
0x0000446f      e87ce0ffff     call sym.imp.dcgettext
0x00004474      4889de         mov rsi, rbx
0x00004477      4889c7         mov rdi, rax
0x0000447a      e881e1ffff     call sym.imp.fputs_unlocked
0x0000447f      488b1d22cc20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00004486      488d352b8800.  lea rsi, str.crtkill_______kill_all_line_by_obeying_the_echoprt_and_echoe_settings______crtkill______kill_all_line_by_obeying_the_echoctl_and_echok_settings ; 0xccb8 ; " * crtkill       kill all line by obeying the echoprt and echoe settings\n * -crtkill      kill all line by obeying the echoctl and echok settings\n"
0x0000448d      ba05000000     mov edx, 5
0x00004492      31ff           xor edi, edi
0x00004494      e857e0ffff     call sym.imp.dcgettext
0x00004499      4889de         mov rsi, rbx
0x0000449c      4889c7         mov rdi, rax
0x0000449f      e85ce1ffff     call sym.imp.fputs_unlocked
0x000044a4      488b1dfdcb20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x000044ab      488d359e8800.  lea rsi, str.ctlecho____echo_control_characters_in_hat_notation____c ; 0xcd50 ; " * [-]ctlecho    echo control characters in hat notation ('^c')\n"
0x000044b2      ba05000000     mov edx, 5
0x000044b7      31ff           xor edi, edi
0x000044b9      e832e0ffff     call sym.imp.dcgettext
0x000044be      4889de         mov rsi, rbx
0x000044c1      4889c7         mov rdi, rax
0x000044c4      e837e1ffff     call sym.imp.fputs_unlocked
0x000044c9      488b1dd8cb20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x000044d0      488d35c18800.  lea rsi, str.echo_______echo_input_characters ; 0xcd98 ; "   [-]echo       echo input characters\n"
0x000044d7      ba05000000     mov edx, 5
0x000044dc      31ff           xor edi, edi
0x000044de      e80de0ffff     call sym.imp.dcgettext
0x000044e3      4889de         mov rsi, rbx
0x000044e6      4889c7         mov rdi, rax
0x000044e9      e812e1ffff     call sym.imp.fputs_unlocked
0x000044ee      488b1db3cb20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x000044f5      488d35c48800.  lea rsi, str.echoctl____same_as____ctlecho ; 0xcdc0 ; " * [-]echoctl    same as [-]ctlecho\n"
0x000044fc      ba05000000     mov edx, 5
0x00004501      31ff           xor edi, edi
0x00004503      e8e8dfffff     call sym.imp.dcgettext
0x00004508      4889de         mov rsi, rbx
0x0000450b      4889c7         mov rdi, rax
0x0000450e      e8ede0ffff     call sym.imp.fputs_unlocked
0x00004513      488b1d8ecb20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x0000451a      488d35c78800.  lea rsi, str.echoe______same_as____crterase________echok______echo_a_newline_after_a_kill_character ; 0xcde8 ; "   [-]echoe      same as [-]crterase\n   [-]echok      echo a newline after a kill character\n"
0x00004521      ba05000000     mov edx, 5
0x00004526      31ff           xor edi, edi
0x00004528      e8c3dfffff     call sym.imp.dcgettext
0x0000452d      4889de         mov rsi, rbx
0x00004530      4889c7         mov rdi, rax
0x00004533      e8c8e0ffff     call sym.imp.fputs_unlocked
0x00004538      488b1d69cb20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x0000453f      488d35028900.  lea rsi, str.echoke_____same_as____crtkill ; 0xce48 ; " * [-]echoke     same as [-]crtkill\n"
0x00004546      ba05000000     mov edx, 5
0x0000454b      31ff           xor edi, edi
0x0000454d      e89edfffff     call sym.imp.dcgettext
0x00004552      4889de         mov rsi, rbx
0x00004555      4889c7         mov rdi, rax
0x00004558      e8a3e0ffff     call sym.imp.fputs_unlocked
0x0000455d      488b1d44cb20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00004564      488d35058900.  lea rsi, str.echonl_____echo_newline_even_if_not_echoing_other_characters ; 0xce70 ; "   [-]echonl     echo newline even if not echoing other characters\n"
0x0000456b      ba05000000     mov edx, 5
0x00004570      31ff           xor edi, edi
0x00004572      e879dfffff     call sym.imp.dcgettext
0x00004577      4889de         mov rsi, rbx
0x0000457a      4889c7         mov rdi, rax
0x0000457d      e87ee0ffff     call sym.imp.fputs_unlocked
0x00004582      488b1d1fcb20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00004589      488d35288900.  lea rsi, str.echoprt____echo_erased_characters_backward__between______and ; 0xceb8 ; " * [-]echoprt    echo erased characters backward, between '\' and '/'\n"
0x00004590      ba05000000     mov edx, 5
0x00004595      31ff           xor edi, edi
0x00004597      e854dfffff     call sym.imp.dcgettext
0x0000459c      4889de         mov rsi, rbx
0x0000459f      4889c7         mov rdi, rax
0x000045a2      e859e0ffff     call sym.imp.fputs_unlocked
0x000045a7      488b1dfaca20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x000045ae      488d354b8900.  lea rsi, str.extproc____enable__LINEMODE___useful_with_high_latency_links ; 0xcf00 ; " * [-]extproc    enable \"LINEMODE\"; useful with high latency links\n"
0x000045b5      ba05000000     mov edx, 5
0x000045ba      31ff           xor edi, edi
0x000045bc      e82fdfffff     call sym.imp.dcgettext
0x000045c1      4889de         mov rsi, rbx
0x000045c4      4889c7         mov rdi, rax
0x000045c7      e834e0ffff     call sym.imp.fputs_unlocked
0x000045cc      488b1dd5ca20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x000045d3      488d356e8900.  lea rsi, str.flusho_____discard_output  ; 0xcf48 ; " * [-]flusho     discard output\n"
0x000045da      ba05000000     mov edx, 5
0x000045df      31ff           xor edi, edi
0x000045e1      e80adfffff     call sym.imp.dcgettext
0x000045e6      4889de         mov rsi, rbx
0x000045e9      4889c7         mov rdi, rax
0x000045ec      e80fe0ffff     call sym.imp.fputs_unlocked
0x000045f1      488d35788900.  lea rsi, str.icanon_____enable_special_characters:__s________iexten_____enable_non_POSIX_special_characters ; 0xcf70 ; "   [-]icanon     enable special characters: %s\n   [-]iexten     enable non-POSIX special characters\n"
0x000045f8      31ff           xor edi, edi
0x000045fa      ba05000000     mov edx, 5
0x000045ff      e8ecdeffff     call sym.imp.dcgettext
0x00004604      488d15606d00.  lea rdx, str.erase__kill__werase__rprnt ; 0xb36b ; "erase, kill, werase, rprnt"
0x0000460b      4889c6         mov rsi, rax
0x0000460e      bf01000000     mov edi, 1
0x00004613      31c0           xor eax, eax
0x00004615      e8b6e0ffff     call sym.imp.__printf_chk
0x0000461a      488b1d87ca20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00004621      488d35b08900.  lea rsi, str.isig_______enable_interrupt__quit__and_suspend_special_characters________noflsh_____disable_flushing_after_interrupt_and_quit_special_characters ; 0xcfd8 ; "   [-]isig       enable interrupt, quit, and suspend special characters\n   [-]noflsh     disable flushing after interrupt and quit special characters\n"
0x00004628      ba05000000     mov edx, 5
0x0000462d      31ff           xor edi, edi
0x0000462f      e8bcdeffff     call sym.imp.dcgettext
0x00004634      4889de         mov rsi, rbx
0x00004637      4889c7         mov rdi, rax
0x0000463a      e8c1dfffff     call sym.imp.fputs_unlocked
0x0000463f      488b1d62ca20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00004646      488d35238a00.  lea rsi, str.prterase___same_as____echoprt ; 0xd070 ; " * [-]prterase   same as [-]echoprt\n"
0x0000464d      ba05000000     mov edx, 5
0x00004652      31ff           xor edi, edi
0x00004654      e897deffff     call sym.imp.dcgettext
0x00004659      4889de         mov rsi, rbx
0x0000465c      4889c7         mov rdi, rax
0x0000465f      e89cdfffff     call sym.imp.fputs_unlocked
0x00004664      488b1d3dca20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x0000466b      488d35268a00.  lea rsi, str.tostop_____stop_background_jobs_that_try_to_write_to_the_terminal ; 0xd098 ; " * [-]tostop     stop background jobs that try to write to the terminal\n"
0x00004672      ba05000000     mov edx, 5
0x00004677      31ff           xor edi, edi
0x00004679      e872deffff     call sym.imp.dcgettext
0x0000467e      4889de         mov rsi, rbx
0x00004681      4889c7         mov rdi, rax
0x00004684      e877dfffff     call sym.imp.fputs_unlocked
0x00004689      488b1d18ca20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00004690      488d35518a00.  lea rsi, str.xcase______with_icanon__escape_with______for_uppercase_characters ; 0xd0e8 ; " * [-]xcase      with icanon, escape with '\' for uppercase characters\n"
0x00004697      ba05000000     mov edx, 5
0x0000469c      31ff           xor edi, edi
0x0000469e      e84ddeffff     call sym.imp.dcgettext
0x000046a3      4889de         mov rsi, rbx
0x000046a6      4889c7         mov rdi, rax
0x000046a9      e852dfffff     call sym.imp.fputs_unlocked
0x000046ae      488b1df3c920.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x000046b5      488d35ca6c00.  lea rsi, str.Combination_settings:      ; 0xb386 ; "\nCombination settings:\n"
0x000046bc      ba05000000     mov edx, 5
0x000046c1      31ff           xor edi, edi
0x000046c3      e828deffff     call sym.imp.dcgettext
0x000046c8      4889de         mov rsi, rbx
0x000046cb      4889c7         mov rdi, rax
0x000046ce      e82ddfffff     call sym.imp.fputs_unlocked
0x000046d3      488b1dcec920.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x000046da      488d354f8a00.  lea rsi, str.LCASE______same_as____lcase ; 0xd130 ; " * [-]LCASE      same as [-]lcase\n"
0x000046e1      ba05000000     mov edx, 5
0x000046e6      31ff           xor edi, edi
0x000046e8      e803deffff     call sym.imp.dcgettext
0x000046ed      4889de         mov rsi, rbx
0x000046f0      4889c7         mov rdi, rax
0x000046f3      e808dfffff     call sym.imp.fputs_unlocked
0x000046f8      488b1da9c920.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x000046ff      488d35528a00.  lea rsi, str.cbreak________same_as__icanon______cbreak_______same_as_icanon ; 0xd158 ; "   cbreak        same as -icanon\n   -cbreak       same as icanon\n"
0x00004706      ba05000000     mov edx, 5
0x0000470b      31ff           xor edi, edi
0x0000470d      e8deddffff     call sym.imp.dcgettext
0x00004712      4889de         mov rsi, rbx
0x00004715      4889c7         mov rdi, rax
0x00004718      e8e3deffff     call sym.imp.fputs_unlocked
0x0000471d      488b1d84c920.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00004724      488d35758a00.  lea rsi, str.cooked________same_as_brkint_ignpar_istrip_icrnl_ixon_opost_isig___________________icanon__eof_and_eol_characters_to_their_default_values______cooked_______same_as_raw ; 0xd1a0 ; "   cooked        same as brkint ignpar istrip icrnl ixon opost isig\n                 icanon, eof and eol characters to their default values\n   -cooked       same as raw\n"
0x0000472b      ba05000000     mov edx, 5
0x00004730      31ff           xor edi, edi
0x00004732      e8b9ddffff     call sym.imp.dcgettext
0x00004737      4889de         mov rsi, rbx
0x0000473a      4889c7         mov rdi, rax
0x0000473d      e8bedeffff     call sym.imp.fputs_unlocked
0x00004742      488d35556c00.  lea rsi, str.crt___________same_as__s   ; 0xb39e ; "   crt           same as %s\n"
0x00004749      31ff           xor edi, edi
0x0000474b      ba05000000     mov edx, 5
0x00004750      e89bddffff     call sym.imp.dcgettext
0x00004755      488d155f6c00.  lea rdx, str.echoe_echoctl_echoke       ; 0xb3bb ; "echoe echoctl echoke"
0x0000475c      4889c6         mov rsi, rax
0x0000475f      bf01000000     mov edi, 1
0x00004764      31c0           xor eax, eax
0x00004766      e865dfffff     call sym.imp.__printf_chk
0x0000476b      488d35de8a00.  lea rsi, str.dec___________same_as__s_intr__c_erase_0177___________________kill__u ; 0xd250 ; "   dec           same as %s intr ^c erase 0177\n                 kill ^u\n"
0x00004772      31ff           xor edi, edi
0x00004774      ba05000000     mov edx, 5
0x00004779      e872ddffff     call sym.imp.dcgettext
0x0000477e      488d154b6c00.  lea rdx, str.echoe_echoctl_echoke__ixany ; 0xb3d0 ; "echoe echoctl echoke -ixany"
0x00004785      4889c6         mov rsi, rax
0x00004788      bf01000000     mov edi, 1
0x0000478d      31c0           xor eax, eax
0x0000478f      e83cdfffff     call sym.imp.__printf_chk
0x00004794      488b1d0dc920.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x0000479b      488d35fe8a00.  lea rsi, str.decctlq____same_as____ixany ; 0xd2a0 ; " * [-]decctlq    same as [-]ixany\n"
0x000047a2      ba05000000     mov edx, 5
0x000047a7      31ff           xor edi, edi
0x000047a9      e842ddffff     call sym.imp.dcgettext
0x000047ae      4889de         mov rsi, rbx
0x000047b1      4889c7         mov rdi, rax
0x000047b4      e847deffff     call sym.imp.fputs_unlocked
0x000047b9      488b1de8c820.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x000047c0      488d35018b00.  lea rsi, str.ek____________erase_and_kill_characters_to_their_default_values_____evenp_________same_as_parenb__parodd_cs7______evenp________same_as__parenb_cs8 ; 0xd2c8 ; "   ek            erase and kill characters to their default values\n   evenp         same as parenb -parodd cs7\n   -evenp        same as -parenb cs8\n"
0x000047c7      ba05000000     mov edx, 5
0x000047cc      31ff           xor edi, edi
0x000047ce      e81dddffff     call sym.imp.dcgettext
0x000047d3      4889de         mov rsi, rbx
0x000047d6      4889c7         mov rdi, rax
0x000047d9      e822deffff     call sym.imp.fputs_unlocked
0x000047de      488b1dc3c820.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x000047e5      488d35748b00.  lea rsi, str.lcase______same_as_xcase_iuclc_olcuc ; 0xd360 ; " * [-]lcase      same as xcase iuclc olcuc\n"
0x000047ec      ba05000000     mov edx, 5
0x000047f1      31ff           xor edi, edi
0x000047f3      e8f8dcffff     call sym.imp.dcgettext
0x000047f8      4889de         mov rsi, rbx
0x000047fb      4889c7         mov rdi, rax
0x000047fe      e8fdddffff     call sym.imp.fputs_unlocked
0x00004803      488b1d9ec820.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x0000480a      488d357f8b00.  lea rsi, str.litout________same_as__parenb__istrip__opost_cs8______litout_______same_as_parenb_istrip_opost_cs7 ; 0xd390 ; "   litout        same as -parenb -istrip -opost cs8\n   -litout       same as parenb istrip opost cs7\n"
0x00004811      ba05000000     mov edx, 5
0x00004816      31ff           xor edi, edi
0x00004818      e8d3dcffff     call sym.imp.dcgettext
0x0000481d      4889de         mov rsi, rbx
0x00004820      4889c7         mov rdi, rax
0x00004823      e8d8ddffff     call sym.imp.fputs_unlocked
0x00004828      488d35c98b00.  lea rsi, str.nl____________same_as__s______nl___________same_as__s ; 0xd3f8 ; "   nl            same as %s\n   -nl           same as %s\n"
0x0000482f      31ff           xor edi, edi
0x00004831      ba05000000     mov edx, 5
0x00004836      e8b5dcffff     call sym.imp.dcgettext
0x0000483b      488d0df68b00.  lea rcx, str.icrnl__inlcr__igncr_onlcr__ocrnl__onlret ; 0xd438 ; "icrnl -inlcr -igncr onlcr -ocrnl -onlret"
0x00004842      488d15a36b00.  lea rdx, str.icrnl__onlcr               ; 0xb3ec ; "-icrnl -onlcr"
0x00004849      4889c6         mov rsi, rax
0x0000484c      bf01000000     mov edi, 1
0x00004851      31c0           xor eax, eax
0x00004853      e878deffff     call sym.imp.__printf_chk
0x00004858      488b1d49c820.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x0000485f      488d35028c00.  lea rsi, str.oddp__________same_as_parenb_parodd_cs7______oddp_________same_as__parenb_cs8________parity_____same_as____evenp_____pass8_________same_as__parenb__istrip_cs8______pass8________same_as_parenb_istrip_cs7 ; 0xd468 ; "   oddp          same as parenb parodd cs7\n   -oddp         same as -parenb cs8\n   [-]parity     same as [-]evenp\n   pass8         same as -parenb -istrip cs8\n   -pass8        same as parenb istrip cs7\n"
0x00004866      ba05000000     mov edx, 5
0x0000486b      31ff           xor edi, edi
0x0000486d      e87edcffff     call sym.imp.dcgettext
0x00004872      4889de         mov rsi, rbx
0x00004875      4889c7         mov rdi, rax
0x00004878      e883ddffff     call sym.imp.fputs_unlocked
0x0000487d      488d35b48c00.  lea rsi, str.raw___________same_as__ignbrk__brkint__ignpar__parmrk__inpck__istrip____________________inlcr__igncr__icrnl__ixon__ixoff__icanon__opost____________________isig_s_min_1_time_0______raw__________same_as_cooked ; 0xd538 ; "   raw           same as -ignbrk -brkint -ignpar -parmrk -inpck -istrip\n                 -inlcr -igncr -icrnl -ixon -ixoff -icanon -opost\n                 -isig%s min 1 time 0\n   -raw          same as cooked\n"
0x00004884      31ff           xor edi, edi
0x00004886      ba05000000     mov edx, 5
0x0000488b      e860dcffff     call sym.imp.dcgettext
0x00004890      488d15798d00.  lea rdx, str.iuclc__ixany__imaxbel__xcase ; 0xd610 ; " -iuclc -ixany -imaxbel -xcase"
0x00004897      4889c6         mov rsi, rax                            ; /src:513
0x0000489a      bf01000000     mov edi, 1
0x0000489f      31c0           xor eax, eax
0x000048a1      e82adeffff     call sym.imp.__printf_chk
0x000048a6      488d35838d00.  lea rsi, str.sane__________same_as_cread__ignbrk_brkint__inlcr__igncr_icrnl___________________icanon_iexten_echo_echoe_echok__echonl__noflsh____________________s____________________s____________________s____________________all_special_characters_to_their_default_values ; 0xd630 ; "   sane          same as cread -ignbrk brkint -inlcr -igncr icrnl\n                 icanon iexten echo echoe echok -echonl -noflsh\n                 %s\n                 %s\n                 %s,\n                 all special characters to their default values\n"
0x000048ad      31ff           xor edi, edi
0x000048af      ba05000000     mov edx, 5
0x000048b4      e837dcffff     call sym.imp.dcgettext
0x000048b9      488d0db08e00.  lea rcx, str.opost__ofill_onlcr__onocr__onlret_nl0_cr0_tab0_bs0_vt0_ff0 ; 0xd770 ; "opost -ofill onlcr -onocr -onlret nl0 cr0 tab0 bs0 vt0 ff0"
0x000048c0      4c8d05698e00.  lea r8, str.isig__tostop__ofdel__echoprt_echoctl_echoke__extproc__flusho ; 0xd730 ; "isig -tostop -ofdel -echoprt echoctl echoke -extproc -flusho"
0x000048c7      488d15e28e00.  lea rdx, str.ixoff__iutf8__iuclc__ixany_imaxbel__xcase__olcuc__ocrnl ; 0xd7b0 ; "-ixoff -iutf8 -iuclc -ixany imaxbel -xcase -olcuc -ocrnl"
0x000048ce      4889c6         mov rsi, rax
0x000048d1      bf01000000     mov edi, 1
0x000048d6      31c0           xor eax, eax
0x000048d8      e8f3ddffff     call sym.imp.__printf_chk
0x000048dd      488b1dc4c720.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x000048e4      488d35058f00.  lea rsi, str.Handle_the_tty_line_connected_to_standard_input.__Without_arguments___prints_baud_rate__line_discipline__and_deviations_from_stty_sane.__In__settings__CHAR_is_taken_literally__or_coded_as_in__c__0x37__0177_or__127__special_values____or_undef_used_to_disable_special_characters. ; 0xd7f0 ; "\nHandle the tty line connected to standard input.  Without arguments,\nprints baud rate, line discipline, and deviations from stty sane.  In\nsettings, CHAR is taken literally, or coded as in ^c, 0x37, 0177 or\n127; special values ^- or undef used to disable special characters.\n"
0x000048eb      ba05000000     mov edx, 5
0x000048f0      31ff           xor edi, edi
0x000048f2      e8f9dbffff     call sym.imp.dcgettext
0x000048f7      4889de         mov rsi, rbx
0x000048fa      4889c7         mov rdi, rax
0x000048fd      488d1d396a00.  lea rbx, str.stty                       ; 0xb33d ; "stty"
0x00004904      e8f7dcffff     call sym.imp.fputs_unlocked
0x00004909      488d05ea6a00.  lea rax, [0x0000b3fa]                   ; "["
0x00004910      488d0d246b00.  lea rcx, str.sha256sum                  ; 0xb43b ; "sha256sum"
0x00004917      48c744246000.  mov qword [rsp + 0x60], 0
0x00004920      48c744246800.  mov qword [rsp + 0x68], 0
0x00004929      4889e2         mov rdx, rsp
0x0000492c      48890424       mov qword [rsp], rax
0x00004930      488d05c56a00.  lea rax, str.test_invocation            ; 0xb3fc ; "test invocation"
0x00004937      48894c2430     mov qword [rsp + 0x30], rcx
0x0000493c      488d0d026b00.  lea rcx, str.sha384sum                  ; 0xb445 ; "sha384sum"
0x00004943      4889442408     mov qword [rsp + 8], rax
0x00004948      488d05256b00.  lea rax, [0x0000b474]                   ; "coreutils"
0x0000494f      48894c2440     mov qword [rsp + 0x40], rcx
0x00004954      488d0df46a00.  lea rcx, str.sha512sum                  ; 0xb44f ; "sha512sum"
0x0000495b      4889442410     mov qword [rsp + 0x10], rax
0x00004960      488d05a56a00.  lea rax, str.Multi_call_invocation      ; 0xb40c ; "Multi-call invocation"
0x00004967      48894c2450     mov qword [rsp + 0x50], rcx
0x0000496c      4889442418     mov qword [rsp + 0x18], rax
0x00004971      488d05aa6a00.  lea rax, str.sha224sum                  ; 0xb422 ; "sha224sum"
0x00004978      4889442420     mov qword [rsp + 0x20], rax
0x0000497d      488d05a86a00.  lea rax, str.sha2_utilities             ; stdio.h:97 __STDIO_INLINE int ; 0xb42c ; "sha2 utilities"
0x00004984      4889442428     mov qword [rsp + 0x28], rax
0x00004989      4889442438     mov qword [rsp + 0x38], rax
0x0000498e      4889442448     mov qword [rsp + 0x48], rax
0x00004993      4889442458     mov qword [rsp + 0x58], rax
0x00004998      0f1f84000000.  nop dword [rax + rax]
0x000049a0      4883c210       add rdx, 0x10
0x000049a4      488b3a         mov rdi, qword [rdx]
0x000049a7      4885ff         test rdi, rdi
0x000049aa      7413           je 0x49bf
0x000049ac      b905000000     mov ecx, 5
0x000049b1      4889de         mov rsi, rbx
0x000049b4      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000049b6      0f97c0         seta al                                 ; stdio.h:101 }
0x000049b9      1c00           sbb al, 0
0x000049bb      84c0           test al, al
0x000049bd      75e1           jne 0x49a0
0x000049bf      4c8b6208       mov r12, qword [rdx + 8]
0x000049c3      31ff           xor edi, edi
0x000049c5      ba05000000     mov edx, 5
0x000049ca      488d35886a00.  lea rsi, str.s_online_help:___s         ; 0xb459 ; "\n%s online help: <%s>\n"
0x000049d1      4d85e4         test r12, r12
0x000049d4      0f8408010000   je 0x4ae2
0x000049da      e811dbffff     call sym.imp.dcgettext
0x000049df      488d0d228f00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0xd908 ; "https://www.gnu.org/software/coreutils/"
0x000049e6      488d15836a00.  lea rdx, str.GNU_coreutils              ; 0xb470 ; "GNU coreutils"
0x000049ed      4889c6         mov rsi, rax
0x000049f0      bf01000000     mov edi, 1
0x000049f5      31c0           xor eax, eax
0x000049f7      e8d4dcffff     call sym.imp.__printf_chk
0x000049fc      31f6           xor esi, esi
0x000049fe      bf05000000     mov edi, 5
0x00004a03      e8a8dcffff     call sym.imp.setlocale
0x00004a08      4885c0         test rax, rax
0x00004a0b      741c           je 0x4a29
0x00004a0d      488d356a6a00.  lea rsi, [0x0000b47e]                   ; "en_"
0x00004a14      ba03000000     mov edx, 3
0x00004a19      4889c7         mov rdi, rax
0x00004a1c      e83fdaffff     call sym.imp.strncmp
0x00004a21      85c0           test eax, eax
0x00004a23      0f858f000000   jne 0x4ab8
0x00004a29      488d35526a00.  lea rsi, str.Full_documentation___s_s   ; 0xb482 ; "Full documentation <%s%s>\n"
0x00004a30      31ff           xor edi, edi
0x00004a32      ba05000000     mov edx, 5
0x00004a37      e8b4daffff     call sym.imp.dcgettext
0x00004a3c      488d0dfa6800.  lea rcx, str.stty                       ; 0xb33d ; "stty"
0x00004a43      488d15be8e00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0xd908 ; "https://www.gnu.org/software/coreutils/"
0x00004a4a      4889c6         mov rsi, rax
0x00004a4d      bf01000000     mov edi, 1
0x00004a52      31c0           xor eax, eax
0x00004a54      e877dcffff     call sym.imp.__printf_chk
0x00004a59      4939dc         cmp r12, rbx
0x00004a5c      488d0db36900.  lea rcx, [0x0000b416]                   ; " invocation"
0x00004a63      488d1dd79500.  lea rbx, [0x0000e041]
0x00004a6a      480f44d9       cmove rbx, rcx
0x00004a6e      488d35038f00.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0xd978 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00004a75      31ff           xor edi, edi
0x00004a77      ba05000000     mov edx, 5
0x00004a7c      e86fdaffff     call sym.imp.dcgettext
0x00004a81      4889d9         mov rcx, rbx
0x00004a84      4889c6         mov rsi, rax
0x00004a87      4c89e2         mov rdx, r12
0x00004a8a      bf01000000     mov edi, 1
0x00004a8f      31c0           xor eax, eax
0x00004a91      e83adcffff     call sym.imp.__printf_chk
0x00004a96      e9ebf1ffff     jmp 0x3c86
0x00004a9b      488d35786c00.  lea rsi, [0x0000b71a]                   ; "on"
0x00004aa2      31ff           xor edi, edi
0x00004aa4      e847daffff     call sym.imp.dcgettext
0x00004aa9      4889c3         mov rbx, rax
0x00004aac      e9e4f4ffff     jmp 0x3f95
0x00004ab1      4c8d25856800.  lea r12, str.stty                       ; 0xb33d ; "stty"
0x00004ab8      4c8b2de9c520.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00004abf      488d356a8e00.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0xd930 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x00004ac6      31ff           xor edi, edi
0x00004ac8      ba05000000     mov edx, 5
0x00004acd      e81edaffff     call sym.imp.dcgettext
0x00004ad2      4c89ee         mov rsi, r13
0x00004ad5      4889c7         mov rdi, rax
0x00004ad8      e823dbffff     call sym.imp.fputs_unlocked
0x00004add      e947ffffff     jmp 0x4a29
0x00004ae2      e809daffff     call sym.imp.dcgettext
0x00004ae7      488d0d1a8e00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; stdio.h:111 ; 0xd908 ; "https://www.gnu.org/software/coreutils/"
0x00004aee      488d157b6900.  lea rdx, str.GNU_coreutils              ; 0xb470 ; "GNU coreutils"
0x00004af5      4889c6         mov rsi, rax                            ; stdio.h:88 fputc_unlocked (int __c, FILE *__stream)
0x00004af8      bf01000000     mov edi, 1
0x00004afd      31c0           xor eax, eax
0x00004aff      e8ccdbffff     call sym.imp.__printf_chk
0x00004b04      31f6           xor esi, esi
0x00004b06      bf05000000     mov edi, 5
0x00004b0b      e8a0dbffff     call sym.imp.setlocale
0x00004b10      4885c0         test rax, rax
0x00004b13      7418           je 0x4b2d
0x00004b15      488d35626900.  lea rsi, [0x0000b47e]                   ; "en_"
0x00004b1c      ba03000000     mov edx, 3
0x00004b21      4889c7         mov rdi, rax
0x00004b24      e837d9ffff     call sym.imp.strncmp
0x00004b29      85c0           test eax, eax
0x00004b2b      7584           jne 0x4ab1
0x00004b2d      488d354e6900.  lea rsi, str.Full_documentation___s_s   ; 0xb482 ; "Full documentation <%s%s>\n"
0x00004b34      ba05000000     mov edx, 5
0x00004b39      31ff           xor edi, edi
0x00004b3b      4c8d25fb6700.  lea r12, str.stty                       ; 0xb33d ; "stty"
0x00004b42      488d1dcd6800.  lea rbx, [0x0000b416]                   ; " invocation"
0x00004b49      e8a2d9ffff     call sym.imp.dcgettext
0x00004b4e      488d0de86700.  lea rcx, str.stty                       ; 0xb33d ; "stty"
0x00004b55      488d15ac8d00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0xd908 ; "https://www.gnu.org/software/coreutils/"
0x00004b5c      4889c6         mov rsi, rax
0x00004b5f      bf01000000     mov edi, 1
0x00004b64      31c0           xor eax, eax
0x00004b66      e865dbffff     call sym.imp.__printf_chk
0x00004b6b      e9fefeffff     jmp 0x4a6e
;-- apply_settings:
0x00004b70      4157           push r15
0x00004b72      4156           push r14                                ; /src:548
0x00004b74      4155           push r13
0x00004b76      4154           push r12
0x00004b78      55             push rbp
0x00004b79      53             push rbx
0x00004b7a      4883ec78       sub rsp, 0x78
0x00004b7e      488b8424b000.  mov rax, qword [rsp + 0xb0]
0x00004b86      4889742430     mov qword [rsp + 0x30], rsi
0x00004b8b      4889542408     mov qword [rsp + 8], rdx
0x00004b90      894c2438       mov dword [rsp + 0x38], ecx
0x00004b94      4c89442418     mov qword [rsp + 0x18], r8
0x00004b99      4c894c2428     mov qword [rsp + 0x28], r9
0x00004b9e      4889442420     mov qword [rsp + 0x20], rax
0x00004ba3      40887c243e     mov byte [rsp + 0x3e], dil
0x00004ba8      64488b042528.  mov rax, qword fs:[0x28]
0x00004bb1      4889442468     mov qword [rsp + 0x68], rax
0x00004bb6      31c0           xor eax, eax
0x00004bb8      83f901         cmp ecx, 1
0x00004bbb      0f8e4f010000   jle 0x4d10
0x00004bc1      bd01000000     mov ebp, 1
0x00004bc6      4c8d3593b420.  lea r14, obj.mode_info                  ; 0x210060
0x00004bcd      eb22           jmp 0x4bf1
0x00004bcf      90             nop
0x00004bd0      440fb62c24     movzx r13d, byte [rsp]                  ; /src:559
0x00004bd5      4183f501       xor r13d, 1
0x00004bd9      450fb6ed       movzx r13d, r13b
0x00004bdd      44892d2cc420.  mov dword [obj.tcsetattr_options], r13d ; [0x211010:4]=1
0x00004be4      83c501         add ebp, 1
0x00004be7      396c2438       cmp dword [rsp + 0x38], ebp
0x00004beb      0f8e1f010000   jle 0x4d10
0x00004bf1      4863c5         movsxd rax, ebp
0x00004bf4      488d14c50000.  lea rdx, [rax*8]
0x00004bfc      4889542410     mov qword [rsp + 0x10], rdx
0x00004c01      488b542408     mov rdx, qword [rsp + 8]
0x00004c06      488b1cc2       mov rbx, qword [rdx + rax*8]
0x00004c0a      4885db         test rbx, rbx
0x00004c0d      74d5           je 0x4be4
0x00004c0f      803b2d         cmp byte [rbx], 0x2d
0x00004c12      c6042400       mov byte [rsp], 0
0x00004c16      7508           jne 0x4c20
0x00004c18      4883c301       add rbx, 1
0x00004c1c      c6042401       mov byte [rsp], 1
0x00004c20      488d3db26900.  lea rdi, [0x0000b5d9]                   ; "drain"
0x00004c27      b906000000     mov ecx, 6
0x00004c2c      4889de         mov rsi, rbx
0x00004c2f      4c8d3d676800.  lea r15, str.parenb                     ; 0xb49d ; "parenb"
0x00004c36      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00004c38      0f97c0         seta al
0x00004c3b      1c00           sbb al, 0
0x00004c3d      4531ed         xor r13d, r13d
0x00004c40      84c0           test al, al
0x00004c42      7524           jne 0x4c68
0x00004c44      eb8a           jmp 0x4bd0
0x00004c46      662e0f1f8400.  nop word cs:[rax + rax]
0x00004c50      4983c501       add r13, 1
0x00004c54      4c89e8         mov rax, r13
0x00004c57      48c1e005       shl rax, 5
0x00004c5b      4d8b3c06       mov r15, qword [r14 + rax]
0x00004c5f      4d85ff         test r15, r15
0x00004c62      0f84d0000000   je 0x4d38
0x00004c68      4c89fe         mov rsi, r15
0x00004c6b      4889df         mov rdi, rbx
0x00004c6e      4d63e5         movsxd r12, r13d
0x00004c71      e8aad9ffff     call sym.imp.strcmp
0x00004c76      85c0           test eax, eax                           ; /src:607
0x00004c78      75d6           jne 0x4c50
0x00004c7a      49c1e405       shl r12, 5
0x00004c7e      4d01f4         add r12, r14
0x00004c81      410fb644240c   movzx eax, byte [r12 + 0xc]
0x00004c87      a810           test al, 0x10
0x00004c89      0f8471020000   je 0x4f00
0x00004c8f      488d3dfe6800.  lea rdi, str.ispeed                     ; 0xb594 ; "ispeed"
0x00004c96      b907000000     mov ecx, 7
0x00004c9b      4889de         mov rsi, rbx
0x00004c9e      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00004ca0      0f97c0         seta al
0x00004ca3      1c00           sbb al, 0
0x00004ca5      84c0           test al, al
0x00004ca7      0f85d3010000   jne 0x4e80
0x00004cad      8b442438       mov eax, dword [rsp + 0x38]
0x00004cb1      83e801         sub eax, 1
0x00004cb4      39e8           cmp eax, ebp
0x00004cb6      0f8445090000   je 0x5601
0x00004cbc      488b442408     mov rax, qword [rsp + 8]
0x00004cc1      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00004cc6      488b7c0808     mov rdi, qword [rax + rcx + 8]
0x00004ccb      4885ff         test rdi, rdi
0x00004cce      0f842d090000   je 0x5601
0x00004cd4      83c501         add ebp, 1
0x00004cd7      807c243e00     cmp byte [rsp + 0x3e], 0
0x00004cdc      0f8502ffffff   jne 0x4be4
0x00004ce2      e879e7ffff     call sym.string_to_baud
0x00004ce7      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00004cec      89c6           mov esi, eax
0x00004cee      83c501         add ebp, 1
0x00004cf1      e83adaffff     call sym.imp.cfsetispeed
0x00004cf6      488b442428     mov rax, qword [rsp + 0x28]
0x00004cfb      396c2438       cmp dword [rsp + 0x38], ebp
0x00004cff      c60001         mov byte [rax], 1                       ; /src:461
0x00004d02      488b442420     mov rax, qword [rsp + 0x20]
0x00004d07      c60001         mov byte [rax], 1
0x00004d0a      0f8fe1feffff   jg 0x4bf1
0x00004d10      488b442468     mov rax, qword [rsp + 0x68]
0x00004d15      644833042528.  xor rax, qword fs:[0x28]
0x00004d1e      0f8537090000   jne 0x565b
0x00004d24      4883c478       add rsp, 0x78
0x00004d28      5b             pop rbx
0x00004d29      5d             pop rbp
0x00004d2a      415c           pop r12
0x00004d2c      415d           pop r13
0x00004d2e      415e           pop r14
0x00004d30      415f           pop r15
0x00004d32      c3             ret
0x00004d33      0f1f440000     nop dword [rax + rax]
0x00004d38      803c2400       cmp byte [rsp], 0
0x00004d3c      0f8557030000   jne 0x5099
0x00004d42      4c8d3d4fb120.  lea r15, [0x0020fe98]
0x00004d49      4531e4         xor r12d, r12d
0x00004d4c      4c8d2d516700.  lea r13, str.intr                       ; 0xb4a4 ; "intr"
0x00004d53      eb18           jmp 0x4d6d
0x00004d55      0f1f00         nop dword [rax]
0x00004d58      4983c718       add r15, 0x18
0x00004d5c      4d8b6fe8       mov r13, qword [r15 - 0x18]
0x00004d60      4183c401       add r12d, 1                             ; /src:996
0x00004d64      4d85ed         test r13, r13
0x00004d67      0f8422ffffff   je 0x4c8f
0x00004d6d      4c89ee         mov rsi, r13
0x00004d70      4889df         mov rdi, rbx
0x00004d73      e8a8d8ffff     call sym.imp.strcmp
0x00004d78      85c0           test eax, eax                           ; /src:468
0x00004d7a      75dc           jne 0x4d58
0x00004d7c      8b442438       mov eax, dword [rsp + 0x38]             ; /src:996
0x00004d80      83e801         sub eax, 1
0x00004d83      39e8           cmp eax, ebp
0x00004d85      0f8476080000   je 0x5601
0x00004d8b      488b442408     mov rax, qword [rsp + 8]
0x00004d90      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00004d95      4c8b7c0808     mov r15, qword [rax + rcx + 8]
0x00004d9a      4d85ff         test r15, r15
0x00004d9d      0f845e080000   je 0x5601
0x00004da3      488d3d9a6700.  lea rdi, [0x0000b544]                   ; "min"
0x00004daa      4d63e4         movsxd r12, r12d
0x00004dad      b904000000     mov ecx, 4
0x00004db2      4c89ee         mov rsi, r13
0x00004db5      488d05c4b020.  lea rax, obj.control_info               ; 0x20fe80
0x00004dbc      83c501         add ebp, 1
0x00004dbf      4b8d1464       lea rdx, [r12 + r12*2]
0x00004dc3      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00004dc5      488d1cd0       lea rbx, [rax + rdx*8]
0x00004dc9      0f97c0         seta al                                 ; /src:1000
0x00004dcc      1c00           sbb al, 0
0x00004dce      84c0           test al, al
0x00004dd0      0f84ea010000   je 0x4fc0
0x00004dd6      488d3d6b6700.  lea rdi, str.time                       ; 0xb548 ; "time"
0x00004ddd      b905000000     mov ecx, 5
0x00004de2      4c89ee         mov rsi, r13
0x00004de5      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]   ; /src:1002
0x00004de7      0f97c0         seta al
0x00004dea      1c00           sbb al, 0
0x00004dec      84c0           test al, al
0x00004dee      0f84cc010000   je 0x4fc0
0x00004df4      450fb62f       movzx r13d, byte [r15]
0x00004df8      4584ed         test r13b, r13b
0x00004dfb      745b           je 0x4e58
0x00004dfd      410fb65701     movzx edx, byte [r15 + 1]
0x00004e02      84d2           test dl, dl
0x00004e04      7452           je 0x4e58
0x00004e06      488d35406700.  lea rsi, [0x0000b54d]                   ; "^-"
0x00004e0d      4c89ff         mov rdi, r15
0x00004e10      881424         mov byte [rsp], dl
0x00004e13      4531e4         xor r12d, r12d
0x00004e16      e805d8ffff     call sym.imp.strcmp
0x00004e1b      85c0           test eax, eax
0x00004e1d      743d           je 0x4e5c                               ; /src:469
0x00004e1f      488d352a6700.  lea rsi, [0x0000b550]                   ; "undef"
0x00004e26      4c89ff         mov rdi, r15
0x00004e29      e8f2d7ffff     call sym.imp.strcmp
0x00004e2e      85c0           test eax, eax
0x00004e30      742a           je 0x4e5c
0x00004e32      4180fd5e       cmp r13b, 0x5e
0x00004e36      0f8584010000   jne 0x4fc0
0x00004e3c      0fb61424       movzx edx, byte [rsp]
0x00004e40      80fa3f         cmp dl, 0x3f
0x00004e43      0f84d6060000   je 0x551f
0x00004e49      4989d4         mov r12, rdx
0x00004e4c      4181e49f0000.  and r12d, 0x9f
0x00004e53      eb07           jmp 0x4e5c
0x00004e55      0f1f00         nop dword [rax]
0x00004e58      450fb6e5       movzx r12d, r13b
0x00004e5c      488b4310       mov rax, qword [rbx + 0x10]
0x00004e60      488b4c2418     mov rcx, qword [rsp + 0x18]             ; /src:488
0x00004e65      4488640111     mov byte [rcx + rax + 0x11], r12b
0x00004e6a      488b442420     mov rax, qword [rsp + 0x20]
0x00004e6f      c60001         mov byte [rax], 1
0x00004e72      e96dfdffff     jmp 0x4be4
0x00004e77      660f1f840000.  nop word [rax + rax]
0x00004e80      488d3dcf6600.  lea rdi, str.ospeed                     ; 0xb556 ; "ospeed"
0x00004e87      b907000000     mov ecx, 7
0x00004e8c      4889de         mov rsi, rbx
0x00004e8f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00004e91      0f97c0         seta al
0x00004e94      1c00           sbb al, 0
0x00004e96      84c0           test al, al
0x00004e98      0f85aa000000   jne 0x4f48
0x00004e9e      8b442438       mov eax, dword [rsp + 0x38]
0x00004ea2      83e801         sub eax, 1
0x00004ea5      39e8           cmp eax, ebp
0x00004ea7      0f8454070000   je 0x5601
0x00004ead      488b442408     mov rax, qword [rsp + 8]
0x00004eb2      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00004eb7      488b7c0808     mov rdi, qword [rax + rcx + 8]
0x00004ebc      4885ff         test rdi, rdi
0x00004ebf      0f843c070000   je 0x5601
0x00004ec5      83c501         add ebp, 1                              ; /src:792
0x00004ec8      807c243e00     cmp byte [rsp + 0x3e], 0
0x00004ecd      0f8511fdffff   jne 0x4be4
0x00004ed3      e888e5ffff     call sym.string_to_baud
0x00004ed8      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00004edd      89c6           mov esi, eax                            ; /src:983
0x00004edf      e8fcd5ffff     call sym.imp.cfsetospeed
0x00004ee4      488b442428     mov rax, qword [rsp + 0x28]
0x00004ee9      c60001         mov byte [rax], 1
0x00004eec      488b442420     mov rax, qword [rsp + 0x20]
0x00004ef1      c60001         mov byte [rax], 1
0x00004ef4      e9ebfcffff     jmp 0x4be4
0x00004ef9      0f1f80000000.  nop dword [rax]
0x00004f00      803c2400       cmp byte [rsp], 0
0x00004f04      0f84ce000000   je 0x4fd8
0x00004f0a      a804           test al, 4
0x00004f0c      0f847f010000   je 0x5091
0x00004f12      488b742418     mov rsi, qword [rsp + 0x18]             ; /src:387
0x00004f17      418b7c2408     mov edi, dword [r12 + 8]
0x00004f1c      e8afe5ffff     call sym.mode_type_flag
0x00004f21      4885c0         test rax, rax
0x00004f24      0f847f030000   je 0x52a9
0x00004f2a      498b542410     mov rdx, qword [r12 + 0x10]
0x00004f2f      410b542418     or edx, dword [r12 + 0x18]
0x00004f34      f7d2           not edx
0x00004f36      2110           and dword [rax], edx
0x00004f38      488b442420     mov rax, qword [rsp + 0x20]
0x00004f3d      c60001         mov byte [rax], 1
0x00004f40      e99ffcffff     jmp 0x4be4
0x00004f45      0f1f00         nop dword [rax]                         ; /src:880
0x00004f48      488d3d0e6600.  lea rdi, str.rows                       ; 0xb55d ; "rows"
0x00004f4f      b905000000     mov ecx, 5
0x00004f54      4889de         mov rsi, rbx
0x00004f57      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00004f59      0f97c0         seta al
0x00004f5c      1c00           sbb al, 0
0x00004f5e      84c0           test al, al
0x00004f60      0f85a7000000   jne 0x500d
0x00004f66      8b442438       mov eax, dword [rsp + 0x38]
0x00004f6a      83e801         sub eax, 1
0x00004f6d      39e8           cmp eax, ebp
0x00004f6f      0f848c060000   je 0x5601
0x00004f75      488b442408     mov rax, qword [rsp + 8]                ; /src:855
0x00004f7a      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00004f7f      488b7c0808     mov rdi, qword [rax + rcx + 8]
0x00004f84      4885ff         test rdi, rdi
0x00004f87      0f8474060000   je 0x5601
0x00004f8d      83c501         add ebp, 1
0x00004f90      807c243e00     cmp byte [rsp + 0x3e], 0
0x00004f95      0f8549fcffff   jne 0x4be4
0x00004f9b      beffffff7f     mov esi, 0x7fffffff
0x00004fa0      e8bbe8ffff     call sym.integer_arg
0x00004fa5      488b542430     mov rdx, qword [rsp + 0x30]
0x00004faa      83ceff         or esi, 0xffffffff                      ; -1
0x00004fad      89c7           mov edi, eax
0x00004faf      e87ceaffff     call sym.set_window_size
0x00004fb4      e92bfcffff     jmp 0x4be4
0x00004fb9      0f1f80000000.  nop dword [rax]
0x00004fc0      beff000000     mov esi, 0xff
0x00004fc5      4c89ff         mov rdi, r15
0x00004fc8      e893e8ffff     call sym.integer_arg
0x00004fcd      4989c4         mov r12, rax
0x00004fd0      e987feffff     jmp 0x4e5c
0x00004fd5      0f1f00         nop dword [rax]
0x00004fd8      488b742418     mov rsi, qword [rsp + 0x18]
0x00004fdd      418b7c2408     mov edi, dword [r12 + 8]
0x00004fe2      e8e9e4ffff     call sym.mode_type_flag
0x00004fe7      4885c0         test rax, rax
0x00004fea      0f84e8000000   je 0x50d8
0x00004ff0      418b542418     mov edx, dword [r12 + 0x18]
0x00004ff5      f7d2           not edx
0x00004ff7      2310           and edx, dword [rax]                    ; /src:197
0x00004ff9      410b542410     or edx, dword [r12 + 0x10]
0x00004ffe      8910           mov dword [rax], edx
0x00005000      488b442420     mov rax, qword [rsp + 0x20]
0x00005005      c60001         mov byte [rax], 1
0x00005008      e9d7fbffff     jmp 0x4be4
0x0000500d      488d3d4e6500.  lea rdi, str.cols                       ; 0xb562 ; "cols"
0x00005014      b905000000     mov ecx, 5
0x00005019      4889de         mov rsi, rbx
0x0000501c      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000501e      0f97c0         seta al
0x00005021      1c00           sbb al, 0
0x00005023      84c0           test al, al
0x00005025      7417           je 0x503e
0x00005027      488d35396500.  lea rsi, str.columns                    ; 0xb567 ; "columns"
0x0000502e      4889df         mov rdi, rbx
0x00005031      e8ead5ffff     call sym.imp.strcmp
0x00005036      85c0           test eax, eax                           ; /src:538
0x00005038      0f8517010000   jne 0x5155
0x0000503e      8b442438       mov eax, dword [rsp + 0x38]
0x00005042      83e801         sub eax, 1
0x00005045      39e8           cmp eax, ebp
0x00005047      0f84b4050000   je 0x5601
0x0000504d      488b442408     mov rax, qword [rsp + 8]
0x00005052      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00005057      488b7c0808     mov rdi, qword [rax + rcx + 8]
0x0000505c      4885ff         test rdi, rdi
0x0000505f      0f849c050000   je 0x5601
0x00005065      83c501         add ebp, 1
0x00005068      807c243e00     cmp byte [rsp + 0x3e], 0
0x0000506d      0f8571fbffff   jne 0x4be4
0x00005073      beffffff7f     mov esi, 0x7fffffff
0x00005078      e8e3e7ffff     call sym.integer_arg
0x0000507d      488b542430     mov rdx, qword [rsp + 0x30]
0x00005082      89c6           mov esi, eax                            ; /src:547
0x00005084      83cfff         or edi, 0xffffffff                      ; -1
0x00005087      e8a4e9ffff     call sym.set_window_size
0x0000508c      e953fbffff     jmp 0x4be4
0x00005091      488b442420     mov rax, qword [rsp + 0x20]
0x00005096      c60001         mov byte [rax], 1
0x00005099      488d7bff       lea rdi, [rbx - 1]
0x0000509d      e8de260000     call sym.quote
0x000050a2      488d35706400.  lea rsi, str.invalid_argument__s        ; 0xb519 ; "invalid argument %s"
0x000050a9      4889c3         mov rbx, rax
0x000050ac      ba05000000     mov edx, 5
0x000050b1      31ff           xor edi, edi
0x000050b3      e838d4ffff     call sym.imp.dcgettext
0x000050b8      31ff           xor edi, edi
0x000050ba      4889c2         mov rdx, rax
0x000050bd      4889d9         mov rcx, rbx                            ; /src:146
0x000050c0      31f6           xor esi, esi
0x000050c2      31c0           xor eax, eax
0x000050c4      e817d6ffff     call sym.imp.error
0x000050c9      bf01000000     mov edi, 1
0x000050ce      e85debffff     call sym.usage
0x000050d3      0f1f440000     nop dword [rax + rax]
0x000050d8      488d3dbc6400.  lea rdi, str.evenp                      ; 0xb59b ; "evenp"
0x000050df      b906000000     mov ecx, 6
0x000050e4      4c89fe         mov rsi, r15
0x000050e7      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000050e9      0f97c0         seta al
0x000050ec      1c00           sbb al, 0
0x000050ee      84c0           test al, al
0x000050f0      0f8411010000   je 0x5207
0x000050f6      488d35a46400.  lea rsi, str.parity                     ; 0xb5a1 ; "parity"
0x000050fd      4c89ff         mov rdi, r15
0x00005100      e81bd5ffff     call sym.imp.strcmp
0x00005105      85c0           test eax, eax
0x00005107      0f84fa000000   je 0x5207
0x0000510d      488d35956300.  lea rsi, str.oddp                       ; 0xb4a9 ; "oddp"
0x00005114      4c89ff         mov rdi, r15
0x00005117      e804d5ffff     call sym.imp.strcmp
0x0000511c      85c0           test eax, eax
0x0000511e      0f8539010000   jne 0x525d
0x00005124      803c2400       cmp byte [rsp], 0
0x00005128      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0000512d      8b4108         mov eax, dword [rcx + 8]
0x00005130      0f8595010000   jne 0x52cb
0x00005136      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0000513b      25cffcffff     and eax, 0xfffffccf                     ; 4294966479
0x00005140      0d20030000     or eax, 0x320
0x00005145      894108         mov dword [rcx + 8], eax
0x00005148      488b442420     mov rax, qword [rsp + 0x20]
0x0000514d      c60001         mov byte [rax], 1
0x00005150      e98ffaffff     jmp 0x4be4
0x00005155      488d35136400.  lea rsi, str.size                       ; 0xb56f ; "size"
0x0000515c      4889df         mov rdi, rbx
0x0000515f      e8bcd4ffff     call sym.imp.strcmp
0x00005164      85c0           test eax, eax
0x00005166      0f84c0000000   je 0x522c
0x0000516c      488d35016400.  lea rsi, str.line                       ; 0xb574 ; "line"
0x00005173      4889df         mov rdi, rbx
0x00005176      e8a5d4ffff     call sym.imp.strcmp                     ; /src:11
0x0000517b      85c0           test eax, eax
0x0000517d      0f8560010000   jne 0x52e3
0x00005183      8b442438       mov eax, dword [rsp + 0x38]
0x00005187      83e801         sub eax, 1
0x0000518a      39e8           cmp eax, ebp                            ; /src:284
0x0000518c      0f846f040000   je 0x5601
0x00005192      488b442408     mov rax, qword [rsp + 8]
0x00005197      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0000519c      4c8d640808     lea r12, [rax + rcx + 8]
0x000051a1      498b3c24       mov rdi, qword [r12]                    ; /src:286
0x000051a5      4885ff         test rdi, rdi
0x000051a8      0f8453040000   je 0x5601
0x000051ae      4883ceff       or rsi, 0xffffffffffffffff
0x000051b2      83c501         add ebp, 1
0x000051b5      e8a6e6ffff     call sym.integer_arg                    ; /src:298
0x000051ba      488b4c2418     mov rcx, qword [rsp + 0x18]
0x000051bf      48a900ffffff   test rax, 0xffffffffffffff00
0x000051c5      884110         mov byte [rcx + 0x10], al
0x000051c8      7430           je 0x51fa
0x000051ca      498b3c24       mov rdi, qword [r12]
0x000051ce      e8ad250000     call sym.quote                          ; /src:-80
0x000051d3      488d359f6300.  lea rsi, str.invalid_line_discipline__s ; 0xb579 ; "invalid line discipline %s"
0x000051da      4889c3         mov rbx, rax
0x000051dd      ba05000000     mov edx, 5
0x000051e2      31ff           xor edi, edi
0x000051e4      e807d3ffff     call sym.imp.dcgettext
0x000051e9      4889d9         mov rcx, rbx
0x000051ec      4889c2         mov rdx, rax
0x000051ef      31f6           xor esi, esi
0x000051f1      31ff           xor edi, edi
0x000051f3      31c0           xor eax, eax
0x000051f5      e8e6d4ffff     call sym.imp.error
0x000051fa      488b442420     mov rax, qword [rsp + 0x20]
0x000051ff      c60001         mov byte [rax], 1
0x00005202      e9ddf9ffff     jmp 0x4be4
0x00005207      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0000520c      8b4108         mov eax, dword [rcx + 8]
0x0000520f      890424         mov dword [rsp], eax
0x00005212      25cffcffff     and eax, 0xfffffccf                     ; 4294966479
0x00005217      0d20010000     or eax, 0x120
0x0000521c      894108         mov dword [rcx + 8], eax
0x0000521f      488b442420     mov rax, qword [rsp + 0x20]
0x00005224      c60001         mov byte [rax], 1
0x00005227      e9b8f9ffff     jmp 0x4be4
0x0000522c      807c243e00     cmp byte [rsp + 0x3e], 0
0x00005231      0f85adf9ffff   jne 0x4be4
0x00005237      e854e7ffff     call sym.screen_columns
0x0000523c      488b742430     mov rsi, qword [rsp + 0x30]
0x00005241      31ff           xor edi, edi                            ; /src:185
0x00005243      8905b7bf2000   mov dword [obj.max_col], eax            ; [0x211200:4]=0
0x00005249      c705a9bf2000.  mov dword [obj.current_col], 0          ; [0x2111fc:4]=0
0x00005253      e8c8e8ffff     call sym.display_window_size
0x00005258      e987f9ffff     jmp 0x4be4                              ; /src:187
0x0000525d      488d35316600.  lea rsi, [0x0000b895]                   ; "nl"
0x00005264      4c89ff         mov rdi, r15
0x00005267      e8b4d3ffff     call sym.imp.strcmp
0x0000526c      85c0           test eax, eax
0x0000526e      0f85ad000000   jne 0x5321
0x00005274      803c2400       cmp byte [rsp], 0
0x00005278      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0000527d      8b4104         mov eax, dword [rcx + 4]
0x00005280      8b11           mov edx, dword [rcx]
0x00005282      0f8438010000   je 0x53c0
0x00005288      83e0d3         and eax, 0xffffffd3                     ; 4294967251
0x0000528b      81e23ffeffff   and edx, 0xfffffe3f                     ; 4294966847
0x00005291      83c804         or eax, 4
0x00005294      80ce01         or dh, 1
0x00005297      894104         mov dword [rcx + 4], eax
0x0000529a      488b442420     mov rax, qword [rsp + 0x20]
0x0000529f      8911           mov dword [rcx], edx
0x000052a1      c60001         mov byte [rax], 1
0x000052a4      e93bf9ffff     jmp 0x4be4
0x000052a9      488d35eb6200.  lea rsi, str.evenp                      ; 0xb59b ; "evenp"
0x000052b0      4c89ff         mov rdi, r15
0x000052b3      e868d3ffff     call sym.imp.strcmp
0x000052b8      85c0           test eax, eax
0x000052ba      0f85a9030000   jne 0x5669
0x000052c0      488b4c2418     mov rcx, qword [rsp + 0x18]
0x000052c5      8b4108         mov eax, dword [rcx + 8]
0x000052c8      890424         mov dword [rsp], eax
0x000052cb      25cffeffff     and eax, 0xfffffecf                     ; 4294966991
0x000052d0      83c830         or eax, 0x30
0x000052d3      894108         mov dword [rcx + 8], eax
0x000052d6      488b442420     mov rax, qword [rsp + 0x20]
0x000052db      c60001         mov byte [rax], 1                       ; /src:62597
0x000052de      e901f9ffff     jmp 0x4be4
0x000052e3      488d35ab6200.  lea rsi, [0x0000b595]                   ; "speed"
0x000052ea      4889df         mov rdi, rbx
0x000052ed      e82ed3ffff     call sym.imp.strcmp
0x000052f2      85c0           test eax, eax                           ; /src:62598
0x000052f4      0f8591000000   jne 0x538b
0x000052fa      807c243e00     cmp byte [rsp + 0x3e], 0
0x000052ff      0f85dff8ffff   jne 0x4be4
0x00005305      e886e6ffff     call sym.screen_columns
0x0000530a      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000530f      31f6           xor esi, esi
0x00005311      8905e9be2000   mov dword [obj.max_col], eax            ; [0x211200:4]=0
0x00005317      e8a4e3ffff     call sym.display_speed
0x0000531c      e9c3f8ffff     jmp 0x4be4
0x00005321      488d35866100.  lea rsi, [0x0000b4ae]                   ; "ek"
0x00005328      4c89ff         mov rdi, r15
0x0000532b      e8f0d2ffff     call sym.imp.strcmp
0x00005330      85c0           test eax, eax
0x00005332      0f84a5000000   je 0x53dd
0x00005338      488d35726100.  lea rsi, str.sane                       ; /src:62601 ; 0xb4b1 ; "sane"
0x0000533f      4c89ff         mov rdi, r15
0x00005342      e8d9d2ffff     call sym.imp.strcmp
0x00005347      85c0           test eax, eax
0x00005349      0f8429020000   je 0x5578
0x0000534f      488d35836100.  lea rsi, str.cbreak                     ; 0xb4d9 ; "cbreak"
0x00005356      4c89ff         mov rdi, r15
0x00005359      e8c2d2ffff     call sym.imp.strcmp
0x0000535e      85c0           test eax, eax
0x00005360      0f85c4010000   jne 0x552a
0x00005366      803c2400       cmp byte [rsp], 0
0x0000536a      488b4c2418     mov rcx, qword [rsp + 0x18]             ; /src:62635
0x0000536f      8b410c         mov eax, dword [rcx + 0xc]
0x00005372      0f840d030000   je 0x5685
0x00005378      83c802         or eax, 2
0x0000537b      89410c         mov dword [rcx + 0xc], eax
0x0000537e      488b442420     mov rax, qword [rsp + 0x20]
0x00005383      c60001         mov byte [rax], 1
0x00005386      e959f8ffff     jmp 0x4be4
0x0000538b      4889df         mov rdi, rbx
0x0000538e      e8cde0ffff     call sym.string_to_baud
0x00005393      83f8ff         cmp eax, 0xffffffff
0x00005396      4189c4         mov r12d, eax
0x00005399      745a           je 0x53f5                               ; /src:62638
0x0000539b      807c243e00     cmp byte [rsp + 0x3e], 0
0x000053a0      0f853ef8ffff   jne 0x4be4
0x000053a6      488b5c2418     mov rbx, qword [rsp + 0x18]
0x000053ab      89c6           mov esi, eax
0x000053ad      4889df         mov rdi, rbx
0x000053b0      e87bd3ffff     call sym.imp.cfsetispeed
0x000053b5      4489e6         mov esi, r12d
0x000053b8      4889df         mov rdi, rbx
0x000053bb      e91ffbffff     jmp 0x4edf
0x000053c0      488b4c2418     mov rcx, qword [rsp + 0x18]
0x000053c5      83e0fb         and eax, 0xfffffffb                     ; 4294967291
0x000053c8      80e6fe         and dh, 0xfe
0x000053cb      894104         mov dword [rcx + 4], eax                ; /src:62611
0x000053ce      488b442420     mov rax, qword [rsp + 0x20]
0x000053d3      8911           mov dword [rcx], edx                    ; /src:62641
0x000053d5      c60001         mov byte [rax], 1
0x000053d8      e907f8ffff     jmp 0x4be4
0x000053dd      488b442418     mov rax, qword [rsp + 0x18]
0x000053e2      66c740137f15   mov word [rax + 0x13], 0x157f           ; [0x157f:2]=0xc800
0x000053e8      488b442420     mov rax, qword [rsp + 0x20]
0x000053ed      c60001         mov byte [rax], 1
0x000053f0      e9eff7ffff     jmp 0x4be4
0x000053f5      e856d0ffff     call sym.imp.__errno_location
0x000053fa      4989c4         mov r12, rax
0x000053fd      488d442448     lea rax, [rsp + 0x48]
0x00005402      4989dd         mov r13, rbx
0x00005405      4531ff         xor r15d, r15d                          ; /src:62205
0x00005408      48890424       mov qword [rsp], rax
0x0000540c      488b3424       mov rsi, qword [rsp]
0x00005410      41c704240000.  mov dword [r12], 0                      ; /src:62051
0x00005418      ba10000000     mov edx, 0x10
0x0000541d      4c89ef         mov rdi, r13
0x00005420      e81bd3ffff     call sym.imp.strtoul
0x00005425      41833c2400     cmp dword [r12], 0
0x0000542a      0f85d3000000   jne 0x5503
0x00005430      488b542448     mov rdx, qword [rsp + 0x48]
0x00005435      803a3a         cmp byte [rdx], 0x3a
0x00005438      0f85c5000000   jne 0x5503
0x0000543e      4c39ea         cmp rdx, r13
0x00005441      0f84bc000000   je 0x5503
0x00005447      89c1           mov ecx, eax
0x00005449      4839c8         cmp rax, rcx                            ; /src:62056
0x0000544c      0f85b1000000   jne 0x5503                              ; /src:62055
0x00005452      428944bc50     mov dword [rsp + r15*4 + 0x50], eax
0x00005457      4983c701       add r15, 1
0x0000545b      4c8d6a01       lea r13, [rdx + 1]
0x0000545f      4983ff04       cmp r15, 4
0x00005463      75a7           jne 0x540c
0x00005465      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0000546a      8b442450       mov eax, dword [rsp + 0x50]
0x0000546e      4531ff         xor r15d, r15d
0x00005471      896c2410       mov dword [rsp + 0x10], ebp
0x00005475      4531c9         xor r9d, r9d
0x00005478      4889dd         mov rbp, rbx
0x0000547b      8901           mov dword [rcx], eax
0x0000547d      8b442454       mov eax, dword [rsp + 0x54]
0x00005481      894104         mov dword [rcx + 4], eax
0x00005484      8b442458       mov eax, dword [rsp + 0x58]
0x00005488      894108         mov dword [rcx + 8], eax
0x0000548b      8b44245c       mov eax, dword [rsp + 0x5c]
0x0000548f      89410c         mov dword [rcx + 0xc], eax
0x00005492      eb38           jmp 0x54cc
0x00005494      488b542448     mov rdx, qword [rsp + 0x48]
0x00005499      381a           cmp byte [rdx], bl                      ; /src:62767
0x0000549b      7563           jne 0x5500
0x0000549d      4c39ea         cmp rdx, r13
0x000054a0      745e           je 0x5500
0x000054a2      48a900ffffff   test rax, 0xffffffffffffff00
0x000054a8      7556           jne 0x5500
0x000054aa      488b4c2418     mov rcx, qword [rsp + 0x18]
0x000054af      4c8d6a01       lea r13, [rdx + 1]
0x000054b3      440fb64c243f   movzx r9d, byte [rsp + 0x3f]
0x000054b9      4288443911     mov byte [rcx + r15 + 0x11], al
0x000054be      4983c701       add r15, 1
0x000054c2      4983ff20       cmp r15, 0x20                           ; "@"
0x000054c6      0f8494010000   je 0x5660
0x000054cc      488b3424       mov rsi, qword [rsp]
0x000054d0      4983ff1f       cmp r15, 0x1f
0x000054d4      b83a000000     mov eax, 0x3a                           ; ':'
0x000054d9      410f44c1       cmove eax, r9d
0x000054dd      41c704240000.  mov dword [r12], 0
0x000054e5      ba10000000     mov edx, 0x10
0x000054ea      4c89ef         mov rdi, r13
0x000054ed      44884c243f     mov byte [rsp + 0x3f], r9b
0x000054f2      89c3           mov ebx, eax
0x000054f4      e847d2ffff     call sym.imp.strtoul
0x000054f9      41833c2400     cmp dword [r12], 0
0x000054fe      7494           je 0x5494
0x00005500      4889eb         mov rbx, rbp
0x00005503      4889df         mov rdi, rbx
0x00005506      e875220000     call sym.quote
0x0000550b      ba05000000     mov edx, 5
0x00005510      4889c3         mov rbx, rax
0x00005513      488d35ff5f00.  lea rsi, str.invalid_argument__s        ; 0xb519 ; "invalid argument %s"
0x0000551a      e992fbffff     jmp 0x50b1
0x0000551f      41bc7f000000   mov r12d, 0x7f
0x00005525      e932f9ffff     jmp 0x4e5c
0x0000552a      488d35af5f00.  lea rsi, str.pass8                      ; 0xb4e0 ; "pass8"
0x00005531      4c89ff         mov rdi, r15
0x00005534      e8e7d0ffff     call sym.imp.strcmp
0x00005539      85c0           test eax, eax
0x0000553b      0f8579010000   jne 0x56ba
0x00005541      488b4c2418     mov rcx, qword [rsp + 0x18]             ; /src:61781
0x00005546      8b4108         mov eax, dword [rcx + 8]
0x00005549      8b11           mov edx, dword [rcx]
0x0000554b      89442410       mov dword [rsp + 0x10], eax
0x0000554f      25cffeffff     and eax, 0xfffffecf                     ; /src:61997 ; 4294966991
0x00005554      803c2400       cmp byte [rsp], 0
0x00005558      0f843f010000   je 0x569d
0x0000555e      0d20010000     or eax, 0x120
0x00005563      83ca20         or edx, 0x20                            ; "@"
0x00005566      894108         mov dword [rcx + 8], eax
0x00005569      488b442420     mov rax, qword [rsp + 0x20]
0x0000556e      8911           mov dword [rcx], edx
0x00005570      c60001         mov byte [rax], 1
0x00005573      e96cf6ffff     jmp 0x4be4
0x00005578      488d0501a920.  lea rax, obj.control_info               ; 0x20fe80
0x0000557f      4883c018       add rax, 0x18
0x00005583      488378e800     cmp qword [rax - 0x18], 0               ; /src:62060
0x00005588      7413           je 0x559d
0x0000558a      0fb648f0       movzx ecx, byte [rax - 0x10]
0x0000558e      488b50f8       mov rdx, qword [rax - 8]
0x00005592      488b742418     mov rsi, qword [rsp + 0x18]
0x00005597      884c1611       mov byte [rsi + rdx + 0x11], cl
0x0000559b      ebe2           jmp 0x557f
0x0000559d      488d1dbcaa20.  lea rbx, obj.mode_info                  ; 0x210060
0x000055a4      eb22           jmp 0x55c8
0x000055a6      8b7b08         mov edi, dword [rbx + 8]
0x000055a9      488b742418     mov rsi, qword [rsp + 0x18]
0x000055ae      e81ddfffff     call sym.mode_type_flag
0x000055b3      4885c0         test rax, rax
0x000055b6      7465           je 0x561d
0x000055b8      8b5318         mov edx, dword [rbx + 0x18]
0x000055bb      f7d2           not edx
0x000055bd      2310           and edx, dword [rax]
0x000055bf      0b5310         or edx, dword [rbx + 0x10]
0x000055c2      8910           mov dword [rax], edx
0x000055c4      4883c320       add rbx, 0x20                           ; "@"
0x000055c8      48833b00       cmp qword [rbx], 0
0x000055cc      0f8428fcffff   je 0x51fa
0x000055d2      0fb6430c       movzx eax, byte [rbx + 0xc]
0x000055d6      a810           test al, 0x10
0x000055d8      75ea           jne 0x55c4                              ; /src:62069
0x000055da      a801           test al, 1
0x000055dc      75c8           jne 0x55a6
0x000055de      a802           test al, 2                              ; /src:62068
0x000055e0      74e2           je 0x55c4
0x000055e2      8b7b08         mov edi, dword [rbx + 8]
0x000055e5      488b742418     mov rsi, qword [rsp + 0x18]
0x000055ea      e8e1deffff     call sym.mode_type_flag
0x000055ef      4885c0         test rax, rax
0x000055f2      7448           je 0x563c
0x000055f4      488b5310       mov rdx, qword [rbx + 0x10]
0x000055f8      0b5318         or edx, dword [rbx + 0x18]
0x000055fb      f7d2           not edx
0x000055fd      2110           and dword [rax], edx
0x000055ff      ebc3           jmp 0x55c4
0x00005601      4889df         mov rdi, rbx
0x00005604      e877210000     call sym.quote
0x00005609      ba05000000     mov edx, 5
0x0000560e      4889c3         mov rbx, rax
0x00005611      488d35155f00.  lea rsi, str.missing_argument_to__s     ; 0xb52d ; "missing argument to %s"
0x00005618      e994faffff     jmp 0x50b1
0x0000561d      488d0de46200.  lea rcx, obj.__PRETTY_FUNCTION__.7410   ; /src:62081 ; 0xb908 ; "sane_mode"
0x00005624      488d358b5e00.  lea rsi, str..._coreutils_8.31_src_stty.c ; 0xb4b6 ; "../coreutils-8.31/src/stty.c"
0x0000562b      488d3da15e00.  lea rdi, str.bitsp                      ; 0xb4d3 ; "bitsp"
0x00005632      bacb080000     mov edx, 0x8cb
0x00005637      e864cfffff     call sym.imp.__assert_fail
0x0000563c      488d0dc56200.  lea rcx, obj.__PRETTY_FUNCTION__.7410   ; 0xb908 ; "sane_mode"
0x00005643      488d356c5e00.  lea rsi, str..._coreutils_8.31_src_stty.c ; 0xb4b6 ; "../coreutils-8.31/src/stty.c"
0x0000564a      488d3d825e00.  lea rdi, str.bitsp                      ; 0xb4d3 ; "bitsp"
0x00005651      bad1080000     mov edx, 0x8d1
0x00005656      e845cfffff     call sym.imp.__assert_fail
0x0000565b      e8c0ceffff     call sym.imp.__stack_chk_fail           ; /src:62085
0x00005660      8b6c2410       mov ebp, dword [rsp + 0x10]
0x00005664      e991fbffff     jmp 0x51fa
0x00005669      488d35315f00.  lea rsi, str.parity                     ; 0xb5a1 ; "parity"
0x00005670      4c89ff         mov rdi, r15
0x00005673      e8a8cfffff     call sym.imp.strcmp
0x00005678      85c0           test eax, eax
0x0000567a      0f8440fcffff   je 0x52c0
0x00005680      e988faffff     jmp 0x510d
0x00005685      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0000568a      83e0fd         and eax, 0xfffffffd                     ; 4294967293
0x0000568d      89410c         mov dword [rcx + 0xc], eax
0x00005690      488b442420     mov rax, qword [rsp + 0x20]
0x00005695      c60001         mov byte [rax], 1
0x00005698      e947f5ffff     jmp 0x4be4
0x0000569d      488b4c2418     mov rcx, qword [rsp + 0x18]
0x000056a2      83c830         or eax, 0x30
0x000056a5      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000056a8      894108         mov dword [rcx + 8], eax
0x000056ab      488b442420     mov rax, qword [rsp + 0x20]
0x000056b0      8911           mov dword [rcx], edx
0x000056b2      c60001         mov byte [rax], 1
0x000056b5      e92af5ffff     jmp 0x4be4
0x000056ba      488d35255e00.  lea rsi, str.litout                     ; 0xb4e6 ; "litout"
0x000056c1      4c89ff         mov rdi, r15
0x000056c4      e857cfffff     call sym.imp.strcmp
0x000056c9      85c0           test eax, eax
0x000056cb      7540           jne 0x570d
0x000056cd      488b742418     mov rsi, qword [rsp + 0x18]
0x000056d2      8b4608         mov eax, dword [rsi + 8]
0x000056d5      8b5604         mov edx, dword [rsi + 4]
0x000056d8      8b0e           mov ecx, dword [rsi]
0x000056da      89442410       mov dword [rsp + 0x10], eax
0x000056de      25cffeffff     and eax, 0xfffffecf                     ; 4294966991
0x000056e3      803c2400       cmp byte [rsp], 0                       ; /src:62121
0x000056e7      0f84a8000000   je 0x5795
0x000056ed      0d20010000     or eax, 0x120
0x000056f2      83c920         or ecx, 0x20                            ; "@"
0x000056f5      83ca01         or edx, 1
0x000056f8      894608         mov dword [rsi + 8], eax
0x000056fb      488b442420     mov rax, qword [rsp + 0x20]
0x00005700      890e           mov dword [rsi], ecx
0x00005702      895604         mov dword [rsi + 4], edx
0x00005705      c60001         mov byte [rax], 1
0x00005708      e9d7f4ffff     jmp 0x4be4
0x0000570d      488d35d95d00.  lea rsi, [0x0000b4ed]                   ; "raw"
0x00005714      4c89ff         mov rdi, r15
0x00005717      e804cfffff     call sym.imp.strcmp
0x0000571c      85c0           test eax, eax
0x0000571e      7417           je 0x5737
0x00005720      488d35ca5d00.  lea rsi, str.cooked                     ; 0xb4f1 ; "cooked"
0x00005727      4c89ff         mov rdi, r15
0x0000572a      e8f1ceffff     call sym.imp.strcmp
0x0000572f      85c0           test eax, eax
0x00005731      0f8581000000   jne 0x57b8
0x00005737      410fb607       movzx eax, byte [r15]
0x0000573b      3c72           cmp al, 0x72
0x0000573d      7430           je 0x576f
0x0000573f      3c63           cmp al, 0x63
0x00005741      7506           jne 0x5749
0x00005743      803c2400       cmp byte [rsp], 0
0x00005747      742c           je 0x5775
0x00005749      488b442418     mov rax, qword [rsp + 0x18]
0x0000574e      c70000000000   mov dword [rax], 0
0x00005754      836004fe       and dword [rax + 4], 0xfffffffe         ; [0xfffffffe:4]=-1 ; 4294967294
0x00005758      83600cf8       and dword [rax + 0xc], 0xfffffff8       ; [0xfffffff8:4]=-1 ; 4294967288
0x0000575c      66c740160001   mov word [rax + 0x16], 0x100            ; [0x100:2]=0xfa50
0x00005762      488b442420     mov rax, qword [rsp + 0x20]
0x00005767      c60001         mov byte [rax], 1
0x0000576a      e975f4ffff     jmp 0x4be4
0x0000576f      803c2400       cmp byte [rsp], 0                       ; /src:62143
0x00005773      74d4           je 0x5749
0x00005775      488b442418     mov rax, qword [rsp + 0x18]             ; /src:62145
0x0000577a      810826050000   or dword [rax], 0x526                   ; [0x526:4]=0
0x00005780      83480401       or dword [rax + 4], 1                   ; /src:62144
0x00005784      83480c03       or dword [rax + 0xc], 3
0x00005788      488b442420     mov rax, qword [rsp + 0x20]
0x0000578d      c60001         mov byte [rax], 1
0x00005790      e94ff4ffff     jmp 0x4be4
0x00005795      488b742418     mov rsi, qword [rsp + 0x18]
0x0000579a      83c830         or eax, 0x30
0x0000579d      83e1df         and ecx, 0xffffffdf                     ; /src:62164 ; 4294967263
0x000057a0      83e2fe         and edx, 0xfffffffe                     ; 4294967294
0x000057a3      894608         mov dword [rsi + 8], eax
0x000057a6      488b442420     mov rax, qword [rsp + 0x20]
0x000057ab      890e           mov dword [rsi], ecx
0x000057ad      895604         mov dword [rsi + 4], edx
0x000057b0      c60001         mov byte [rax], 1
0x000057b3      e92cf4ffff     jmp 0x4be4
0x000057b8      488d35395d00.  lea rsi, str.decctlq                    ; 0xb4f8 ; "decctlq"
0x000057bf      4c89ff         mov rdi, r15                            ; /src:62166
0x000057c2      e859ceffff     call sym.imp.strcmp
0x000057c7      85c0           test eax, eax
0x000057c9      751f           jne 0x57ea                              ; /src:62169
0x000057cb      803c2400       cmp byte [rsp], 0
0x000057cf      488b4c2418     mov rcx, qword [rsp + 0x18]
0x000057d4      8b01           mov eax, dword [rcx]
0x000057d6      7446           je 0x581e
0x000057d8      80cc08         or ah, 8
0x000057db      8901           mov dword [rcx], eax
0x000057dd      488b442420     mov rax, qword [rsp + 0x20]             ; /src:62149
0x000057e2      c60001         mov byte [rax], 1                       ; /src:62151
0x000057e5      e9faf3ffff     jmp 0x4be4                              ; /src:62149
0x000057ea      488d350f5d00.  lea rsi, str.tabs                       ; 0xb500 ; "tabs"
0x000057f1      4c89ff         mov rdi, r15
0x000057f4      e827ceffff     call sym.imp.strcmp
0x000057f9      85c0           test eax, eax
0x000057fb      7550           jne 0x584d
0x000057fd      803c2400       cmp byte [rsp], 0
0x00005801      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00005806      8b4104         mov eax, dword [rcx + 4]
0x00005809      742a           je 0x5835
0x0000580b      80cc18         or ah, 0x18
0x0000580e      894104         mov dword [rcx + 4], eax
0x00005811      488b442420     mov rax, qword [rsp + 0x20]
0x00005816      c60001         mov byte [rax], 1
0x00005819      e9c6f3ffff     jmp 0x4be4                              ; /src:61647
0x0000581e      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00005823      80e4f7         and ah, 0xf7
0x00005826      8901           mov dword [rcx], eax
0x00005828      488b442420     mov rax, qword [rsp + 0x20]
0x0000582d      c60001         mov byte [rax], 1
0x00005830      e9aff3ffff     jmp 0x4be4
0x00005835      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0000583a      80e4e7         and ah, 0xe7
0x0000583d      894104         mov dword [rcx + 4], eax
0x00005840      488b442420     mov rax, qword [rsp + 0x20]
0x00005845      c60001         mov byte [rax], 1
0x00005848      e997f3ffff     jmp 0x4be4
0x0000584d      488d35b15c00.  lea rsi, str.lcase                      ; 0xb505 ; "lcase"
0x00005854      4c89ff         mov rdi, r15
0x00005857      e8c4cdffff     call sym.imp.strcmp
0x0000585c      85c0           test eax, eax
0x0000585e      7413           je 0x5873
0x00005860      488d35a45c00.  lea rsi, str.LCASE                      ; 0xb50b ; "LCASE"
0x00005867      4c89ff         mov rdi, r15
0x0000586a      e8b1cdffff     call sym.imp.strcmp
0x0000586f      85c0           test eax, eax
0x00005871      7531           jne 0x58a4
0x00005873      803c2400       cmp byte [rsp], 0
0x00005877      488b742418     mov rsi, qword [rsp + 0x18]
0x0000587c      8b4604         mov eax, dword [rsi + 4]
0x0000587f      8b4e0c         mov ecx, dword [rsi + 0xc]
0x00005882      8b16           mov edx, dword [rsi]
0x00005884      7471           je 0x58f7
0x00005886      83e0fd         and eax, 0xfffffffd                     ; 4294967293
0x00005889      83e1fb         and ecx, 0xfffffffb                     ; 4294967291
0x0000588c      80e6fd         and dh, 0xfd
0x0000588f      894604         mov dword [rsi + 4], eax
0x00005892      488b442420     mov rax, qword [rsp + 0x20]
0x00005897      894e0c         mov dword [rsi + 0xc], ecx
0x0000589a      8916           mov dword [rsi], edx
0x0000589c      c60001         mov byte [rax], 1
0x0000589f      e940f3ffff     jmp 0x4be4
0x000058a4      488d35665c00.  lea rsi, [0x0000b511]                   ; "crt"
0x000058ab      4c89ff         mov rdi, r15
0x000058ae      e86dcdffff     call sym.imp.strcmp
0x000058b3      85c0           test eax, eax
0x000058b5      7463           je 0x591a
0x000058b7      488d35575c00.  lea rsi, [0x0000b515]                   ; "dec"
0x000058be      4c89ff         mov rdi, r15
0x000058c1      e85acdffff     call sym.imp.strcmp
0x000058c6      85c0           test eax, eax
0x000058c8      0f852cf9ffff   jne 0x51fa
0x000058ce      488b442418     mov rax, qword [rsp + 0x18]
0x000058d3      8120fff7ffff   and dword [rax], 0xfffff7ff             ; [0xfffff7ff:4]=-1 ; 4294965247
0x000058d9      c6401103       mov byte [rax + 0x11], 3
0x000058dd      66c740137f15   mov word [rax + 0x13], 0x157f           ; [0x157f:2]=0xc800
0x000058e3      81480c100a00.  or dword [rax + 0xc], 0xa10             ; [0xa10:4]=0x72727473
0x000058ea      488b442420     mov rax, qword [rsp + 0x20]
0x000058ef      c60001         mov byte [rax], 1
0x000058f2      e9edf2ffff     jmp 0x4be4
0x000058f7      488b742418     mov rsi, qword [rsp + 0x18]
0x000058fc      83c802         or eax, 2
0x000058ff      83c904         or ecx, 4
0x00005902      80ce02         or dh, 2
0x00005905      894604         mov dword [rsi + 4], eax
0x00005908      488b442420     mov rax, qword [rsp + 0x20]
0x0000590d      894e0c         mov dword [rsi + 0xc], ecx
0x00005910      8916           mov dword [rsi], edx
0x00005912      c60001         mov byte [rax], 1
0x00005915      e9caf2ffff     jmp 0x4be4
0x0000591a      488b442418     mov rax, qword [rsp + 0x18]
0x0000591f      81480c100a00.  or dword [rax + 0xc], 0xa10             ; [0xa10:4]=0x72727473
0x00005926      488b442420     mov rax, qword [rsp + 0x20]
0x0000592b      c60001         mov byte [rax], 1
0x0000592e      e9b1f2ffff     jmp 0x4be4
0x00005933      662e0f1f8400.  nop word cs:[rax + rax]
0x0000593d      0f1f00         nop dword [rax]
;-- close_stdout_set_file_name:
0x00005940      48893dc9b820.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x211210:8]=0
0x00005947      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00005948      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00005950      40883db1b820.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x211208:1]=0
0x00005957      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00005958      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00005960      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00005961      53             push rbx
0x00005962      4883ec08       sub rsp, 8
0x00005966      488b3d3bb720.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x0000596d      e87e360000     call sym.close_stream
0x00005972      85c0           test eax, eax
0x00005974      7416           je 0x598c
0x00005976      e8d5caffff     call sym.imp.__errno_location
0x0000597b      803d86b82000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x211208:1]=0
0x00005982      4889c3         mov rbx, rax
0x00005985      741c           je 0x59a3
0x00005987      833820         cmp dword [rax], 0x20
0x0000598a      7517           jne 0x59a3
0x0000598c      488b3d6db720.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x211100:8]=0
0x00005993      e858360000     call sym.close_stream
0x00005998      85c0           test eax, eax
0x0000599a      7546           jne 0x59e2
0x0000599c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x000059a0      5b             pop rbx
0x000059a1      5d             pop rbp
0x000059a2      c3             ret
0x000059a3      488d35128100.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0xdabc ; "write error"
0x000059aa      31ff           xor edi, edi
0x000059ac      ba05000000     mov edx, 5
0x000059b1      e83acbffff     call sym.imp.dcgettext
0x000059b6      488b3d53b820.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x211210:8]=0
0x000059bd      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x000059c0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x000059c3      7428           je 0x59ed
0x000059c5      e8b61b0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x000059ca      8b33           mov esi, dword [rbx]
0x000059cc      488d15f58000.  lea rdx, str.s:__s                      ; 0xdac8 ; "%s: %s"
0x000059d3      4889c1         mov rcx, rax
0x000059d6      4989e8         mov r8, rbp
0x000059d9      31ff           xor edi, edi
0x000059db      31c0           xor eax, eax
0x000059dd      e8feccffff     call sym.imp.error
0x000059e2      8b3d38b62000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x211020:4]=1
0x000059e8      e883caffff     call sym.imp._exit
0x000059ed      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x000059ef      488d15d68000.  lea rdx, [0x0000dacc]                   ; "%s"
0x000059f6      4889c1         mov rcx, rax
0x000059f9      31ff           xor edi, edi
0x000059fb      31c0           xor eax, eax
0x000059fd      e8deccffff     call sym.imp.error
0x00005a02      ebde           jmp 0x59e2
0x00005a04      662e0f1f8400.  nop word cs:[rax + rax]
0x00005a0e      6690           nop
;-- fd_reopen:
0x00005a10      4155           push r13                                ; ../coreutils-8.31/lib/fd-reopen.c:33
0x00005a12      4154           push r12
0x00005a14      31c0           xor eax, eax                            ; fcntl2.h:59   return __open_alias (__path, __oflag, __va_arg_pack ());
0x00005a16      55             push rbp                                ; ../coreutils-8.31/lib/fd-reopen.c:33
0x00005a17      53             push rbx
0x00005a18      89fd           mov ebp, edi
0x00005a1a      4889f7         mov rdi, rsi
0x00005a1d      89d6           mov esi, edx
0x00005a1f      89ca           mov edx, ecx
0x00005a21      4883ec08       sub rsp, 8
0x00005a25      e8e6ccffff     call sym.imp.open                       ; fcntl2.h:59   return __open_alias (__path, __oflag, __va_arg_pack ());
0x00005a2a      39c5           cmp ebp, eax                            ; ../coreutils-8.31/lib/fd-reopen.c:36
0x00005a2c      89c3           mov ebx, eax                            ; fcntl2.h:59   return __open_alias (__path, __oflag, __va_arg_pack ());
0x00005a2e      7429           je 0x5a59                               ; ../coreutils-8.31/lib/fd-reopen.c:36
0x00005a30      85c0           test eax, eax
0x00005a32      7825           js 0x5a59
0x00005a34      89ee           mov esi, ebp                            ; ../coreutils-8.31/lib/fd-reopen.c:40
0x00005a36      89c7           mov edi, eax
0x00005a38      e813cbffff     call sym.imp.dup2
0x00005a3d      4189c4         mov r12d, eax
0x00005a40      e80bcaffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fd-reopen.c:41
0x00005a45      448b28         mov r13d, dword [rax]
0x00005a48      4889c5         mov rbp, rax
0x00005a4b      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fd-reopen.c:42
0x00005a4d      e88ecbffff     call sym.imp.close
0x00005a52      4489e3         mov ebx, r12d                           ; ../coreutils-8.31/lib/fd-reopen.c:44
0x00005a55      44896d00       mov dword [rbp], r13d                   ; ../coreutils-8.31/lib/fd-reopen.c:43
0x00005a59      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fd-reopen.c:46
0x00005a5d      89d8           mov eax, ebx
0x00005a5f      5b             pop rbx
0x00005a60      5d             pop rbp
0x00005a61      415c           pop r12
0x00005a63      415d           pop r13
0x00005a65      c3             ret
0x00005a66      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_program_name:
0x00005a70      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00005a73      53             push rbx
0x00005a74      7477           je 0x5aed                               ; ../coreutils-8.31/lib/progname.c:51
0x00005a76      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x00005a7b      4889fb         mov rbx, rdi
0x00005a7e      e8fdcaffff     call sym.imp.strrchr
0x00005a83      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00005a86      7455           je 0x5add
0x00005a88      4c8d4001       lea r8, [rax + 1]
0x00005a8c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x00005a8f      4829da         sub rdx, rbx
0x00005a92      4883fa06       cmp rdx, 6
0x00005a96      7e45           jle 0x5add
0x00005a98      488d70fa       lea rsi, [rax - 6]
0x00005a9c      488d3d658000.  lea rdi, str..libs                      ; 0xdb08 ; "/.libs/"
0x00005aa3      b907000000     mov ecx, 7
0x00005aa8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005aaa      0f97c2         seta dl
0x00005aad      80da00         sbb dl, 0
0x00005ab0      84d2           test dl, dl
0x00005ab2      7529           jne 0x5add
0x00005ab4      488d3d558000.  lea rdi, [0x0000db10]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x00005abb      b903000000     mov ecx, 3
0x00005ac0      4c89c6         mov rsi, r8
0x00005ac3      4c89c3         mov rbx, r8
0x00005ac6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005ac8      0f97c2         seta dl
0x00005acb      80da00         sbb dl, 0
0x00005ace      84d2           test dl, dl
0x00005ad0      750b           jne 0x5add
0x00005ad2      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00005ad6      48891dc3b520.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x2110a0:8]=0
0x00005add      48891d34b720.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x211218:8]=0
0x00005ae4      48891dd5b520.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x2110c0:8]=0
0x00005aeb      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x00005aec      c3             ret
0x00005aed      488b0d0cb620.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x211100:8]=0
0x00005af4      488d3dd57f00.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0xdad0 ; "A NULL argv[0] was passed through an exec system call.\n"
0x00005afb      ba37000000     mov edx, 0x37                           ; '7'
0x00005b00      be01000000     mov esi, 1
0x00005b05      e866ccffff     call sym.imp.fwrite
0x00005b0a      e831c9ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x00005b0f      90             nop
;-- gettext_quote.part.1:
0x00005b10      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00005b11      53             push rbx
0x00005b12      4889fd         mov rbp, rdi
0x00005b15      89f3           mov ebx, esi
0x00005b17      4883ec08       sub rsp, 8
0x00005b1b      e8b0350000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00005b20      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00005b23      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00005b26      80fa55         cmp dl, 0x55
0x00005b29      7475           je 0x5ba0
0x00005b2b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x00005b2e      7420           je 0x5b50
0x00005b30      488d05ec7f00.  lea rax, str.l______l                   ; 0xdb23 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00005b37      488d15e77f00.  lea rdx, [0x0000db25]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00005b3e      83fb09         cmp ebx, 9
0x00005b41      480f45c2       cmovne rax, rdx
0x00005b45      4883c408       add rsp, 8
0x00005b49      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x00005b4a      5d             pop rbp
0x00005b4b      c3             ret
0x00005b4c      0f1f4000       nop dword [rax]
0x00005b50      0fb65001       movzx edx, byte [rax + 1]
0x00005b54      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00005b57      80fa42         cmp dl, 0x42
0x00005b5a      75d4           jne 0x5b30
0x00005b5c      80780231       cmp byte [rax + 2], 0x31
0x00005b60      75ce           jne 0x5b30
0x00005b62      80780338       cmp byte [rax + 3], 0x38
0x00005b66      75c8           jne 0x5b30
0x00005b68      80780430       cmp byte [rax + 4], 0x30
0x00005b6c      75c2           jne 0x5b30
0x00005b6e      80780533       cmp byte [rax + 5], 0x33
0x00005b72      75bc           jne 0x5b30
0x00005b74      80780630       cmp byte [rax + 6], 0x30
0x00005b78      75b6           jne 0x5b30
0x00005b7a      80780700       cmp byte [rax + 7], 0
0x00005b7e      75b0           jne 0x5b30
0x00005b80      807d0060       cmp byte [rbp], 0x60
0x00005b84      488d05917f00.  lea rax, [0x0000db1c]
0x00005b8b      488d158e7f00.  lea rdx, [0x0000db20]
0x00005b92      480f45c2       cmovne rax, rdx
0x00005b96      4883c408       add rsp, 8
0x00005b9a      5b             pop rbx
0x00005b9b      5d             pop rbp
0x00005b9c      c3             ret
0x00005b9d      0f1f00         nop dword [rax]
0x00005ba0      0fb65001       movzx edx, byte [rax + 1]
0x00005ba4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00005ba7      80fa54         cmp dl, 0x54
0x00005baa      7584           jne 0x5b30
0x00005bac      0fb65002       movzx edx, byte [rax + 2]
0x00005bb0      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00005bb3      80fa46         cmp dl, 0x46
0x00005bb6      0f8574ffffff   jne 0x5b30
0x00005bbc      8078032d       cmp byte [rax + 3], 0x2d
0x00005bc0      0f856affffff   jne 0x5b30
0x00005bc6      80780438       cmp byte [rax + 4], 0x38
0x00005bca      0f8560ffffff   jne 0x5b30
0x00005bd0      80780500       cmp byte [rax + 5], 0
0x00005bd4      0f8556ffffff   jne 0x5b30
0x00005bda      807d0060       cmp byte [rbp], 0x60
0x00005bde      488d052f7f00.  lea rax, [0x0000db14]                   ; "\u2018"
0x00005be5      488d152c7f00.  lea rdx, [0x0000db18]                   ; "\u2019"
0x00005bec      480f45c2       cmovne rax, rdx
0x00005bf0      4883c408       add rsp, 8
0x00005bf4      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00005bf5      5d             pop rbp
0x00005bf6      c3             ret
0x00005bf7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00005c00      4157           push r15
0x00005c02      4156           push r14
0x00005c04      4589c7         mov r15d, r8d
0x00005c07      4155           push r13
0x00005c09      4154           push r12
0x00005c0b      4989fe         mov r14, rdi
0x00005c0e      55             push rbp
0x00005c0f      53             push rbx
0x00005c10      4489cb         mov ebx, r9d
0x00005c13      4989f5         mov r13, rsi
0x00005c16      4889cd         mov rbp, rcx
0x00005c19      83e302         and ebx, 2
0x00005c1c      4881ecb80000.  sub rsp, 0xb8
0x00005c23      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x00005c2b      4889542410     mov qword [rsp + 0x10], rdx
0x00005c30      4489442408     mov dword [rsp + 8], r8d
0x00005c35      44894c2478     mov dword [rsp + 0x78], r9d
0x00005c3a      4889442420     mov qword [rsp + 0x20], rax
0x00005c3f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00005c47      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x00005c4c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00005c54      4889442460     mov qword [rsp + 0x60], rax
0x00005c59      64488b042528.  mov rax, qword fs:[0x28]
0x00005c62      48898424a800.  mov qword [rsp + 0xa8], rax
0x00005c6a      31c0           xor eax, eax
0x00005c6c      e88fc8ffff     call sym.imp.__ctype_get_mb_cur_max
0x00005c71      4183ff0a       cmp r15d, 0xa
0x00005c75      4889442458     mov qword [rsp + 0x58], rax
0x00005c7a      0f87af110000   ja 0x6e2f
0x00005c80      488d0df97e00.  lea rcx, [0x0000db80]
0x00005c87      4489fa         mov edx, r15d
0x00005c8a      48630491       movsxd rax, dword [rcx + rdx*4]
0x00005c8e      4801c8         add rax, rcx
0x00005c91      ffe0           jmp rax
0x00005c93      c644240e01     mov byte [rsp + 0xe], 1
0x00005c98      c644247c00     mov byte [rsp + 0x7c], 0
0x00005c9d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00005ca0      48c744245000.  mov qword [rsp + 0x50], 0
0x00005ca9      c644240f01     mov byte [rsp + 0xf], 1
0x00005cae      c644240d00     mov byte [rsp + 0xd], 0
0x00005cb3      488d056b7e00.  lea rax, [0x0000db25]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00005cba      48c744241801.  mov qword [rsp + 0x18], 1
0x00005cc3      4531ff         xor r15d, r15d
0x00005cc6      c74424080200.  mov dword [rsp + 8], 2
0x00005cce      4889442448     mov qword [rsp + 0x48], rax
0x00005cd3      4531db         xor r11d, r11d
0x00005cd6      4889e8         mov rax, rbp
0x00005cd9      4589e0         mov r8d, r12d
0x00005cdc      4c89dd         mov rbp, r11
0x00005cdf      4989c3         mov r11, rax
0x00005ce2      660f1f440000   nop word [rax + rax]
0x00005ce8      4939eb         cmp r11, rbp
0x00005ceb      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x00005cef      4983fbff       cmp r11, 0xffffffffffffffff
0x00005cf3      750d           jne 0x5d02
0x00005cf5      488b442410     mov rax, qword [rsp + 0x10]
0x00005cfa      803c2800       cmp byte [rax + rbp], 0
0x00005cfe      410f95c4       setne r12b
0x00005d02      4584e4         test r12b, r12b
0x00005d05      0f8455060000   je 0x6360
0x00005d0b      837c240802     cmp dword [rsp + 8], 2
0x00005d10      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00005d15      4c8d0c2f       lea r9, [rdi + rbp]
0x00005d19      0f95c0         setne al
0x00005d1c      2244240d       and al, byte [rsp + 0xd]
0x00005d20      4189c2         mov r10d, eax
0x00005d23      0f84a7000000   je 0x5dd0
0x00005d29      488b442418     mov rax, qword [rsp + 0x18]
0x00005d2e      4885c0         test rax, rax
0x00005d31      0f8429040000   je 0x6160
0x00005d37      4983fbff       cmp r11, 0xffffffffffffffff
0x00005d3b      488d5c0500     lea rbx, [rbp + rax]
0x00005d40      752e           jne 0x5d70
0x00005d42      4883f801       cmp rax, 1
0x00005d46      7628           jbe 0x5d70
0x00005d48      4488442438     mov byte [rsp + 0x38], r8b
0x00005d4d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00005d52      4c894c2428     mov qword [rsp + 0x28], r9
0x00005d57      e8b4c7ffff     call sym.imp.strlen
0x00005d5c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00005d62      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00005d68      4989c3         mov r11, rax
0x00005d6b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00005d70      4c39db         cmp rbx, r11
0x00005d73      4488542428     mov byte [rsp + 0x28], r10b
0x00005d78      0f87b2050000   ja 0x6330
0x00005d7e      488b542418     mov rdx, qword [rsp + 0x18]
0x00005d83      488b742448     mov rsi, qword [rsp + 0x48]
0x00005d88      4c89cf         mov rdi, r9
0x00005d8b      4c895c2440     mov qword [rsp + 0x40], r11
0x00005d90      4488442438     mov byte [rsp + 0x38], r8b
0x00005d95      4c894c2430     mov qword [rsp + 0x30], r9
0x00005d9a      e851c8ffff     call sym.imp.memcmp
0x00005d9f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00005da1      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00005da6      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00005dac      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00005db1      0f8579050000   jne 0x6330
0x00005db7      807c240f00     cmp byte [rsp + 0xf], 0
0x00005dbc      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00005dc2      0f857d0f0000   jne 0x6d45
0x00005dc8      0f1f84000000.  nop dword [rax + rax]
0x00005dd0      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00005dd4      80fb7e         cmp bl, 0x7e
0x00005dd7      0f871b030000   ja 0x60f8
0x00005ddd      488d0dc87d00.  lea rcx, [0x0000dbac]
0x00005de4      0fb6d3         movzx edx, bl
0x00005de7      48630491       movsxd rax, dword [rcx + rdx*4]
0x00005deb      4801c8         add rax, rcx
0x00005dee      ffe0           jmp rax
0x00005df0      4531d2         xor r10d, r10d
0x00005df3      4983fb01       cmp r11, 1
0x00005df7      0f95c0         setne al
0x00005dfa      4983fbff       cmp r11, 0xffffffffffffffff
0x00005dfe      750c           jne 0x5e0c
0x00005e00      488b442410     mov rax, qword [rsp + 0x10]
0x00005e05      80780100       cmp byte [rax + 1], 0
0x00005e09      0f95c0         setne al
0x00005e0c      837c240802     cmp dword [rsp + 8], 2
0x00005e11      0f94c2         sete dl
0x00005e14      84c0           test al, al
0x00005e16      0f844c020000   je 0x6068
0x00005e1c      4531e4         xor r12d, r12d
0x00005e1f      31c0           xor eax, eax
0x00005e21      0f1f80000000.  nop dword [rax]
0x00005e28      807c240d01     cmp byte [rsp + 0xd], 1
0x00005e2d      0f850f010000   jne 0x5f42
0x00005e33      84d2           test dl, dl
0x00005e35      0f8507010000   jne 0x5f42
0x00005e3b      488b742420     mov rsi, qword [rsp + 0x20]
0x00005e40      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00005e43      7414           je 0x5e59
0x00005e45      89da           mov edx, ebx
0x00005e47      c0ea05         shr dl, 5
0x00005e4a      0fb6d2         movzx edx, dl
0x00005e4d      8b1496         mov edx, dword [rsi + rdx*4]
0x00005e50      0fa3da         bt edx, ebx
0x00005e53      0f824a010000   jb 0x5fa3
0x00005e59      4584d2         test r10b, r10b
0x00005e5c      0f8541010000   jne 0x5fa3
0x00005e62      83f001         xor eax, 1
0x00005e65      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00005e69      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x00005e6c      84c0           test al, al
0x00005e6e      7420           je 0x5e90                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00005e70      4d39fd         cmp r13, r15
0x00005e73      7605           jbe 0x5e7a
0x00005e75      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00005e7a      498d4701       lea rax, [r15 + 1]
0x00005e7e      4939c5         cmp r13, rax
0x00005e81      7606           jbe 0x5e89
0x00005e83      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00005e89      4983c702       add r15, 2
0x00005e8d      4531c0         xor r8d, r8d
0x00005e90      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00005e93      7304           jae 0x5e99                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00005e95      43881c3e       mov byte [r14 + r15], bl
0x00005e99      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x00005e9e      4983c701       add r15, 1
0x00005ea2      b800000000     mov eax, 0
0x00005ea7      4584e4         test r12b, r12b
0x00005eaa      0f44f8         cmove edi, eax
0x00005ead      40887c240e     mov byte [rsp + 0xe], dil
0x00005eb2      e931feffff     jmp 0x5ce8
0x00005eb7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00005ec0      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00005ec3      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00005ec7      83f802         cmp eax, 2
0x00005eca      0f84b8050000   je 0x6488
0x00005ed0      83f805         cmp eax, 5
0x00005ed3      0f846f050000   je 0x6448
0x00005ed9      83f802         cmp eax, 2
0x00005edc      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00005ee1      0f94c2         sete dl
0x00005ee4      4531e4         xor r12d, r12d
0x00005ee7      31c0           xor eax, eax
0x00005ee9      e93affffff     jmp 0x5e28
0x00005eee      6690           nop
0x00005ef0      4531d2         xor r10d, r10d
0x00005ef3      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00005ef8      0f8402050000   je 0x6400
0x00005efe      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00005f03      31d2           xor edx, edx
0x00005f05      31c0           xor eax, eax
0x00005f07      bb27000000     mov ebx, 0x27                           ; '''
0x00005f0c      e917ffffff     jmp 0x5e28
0x00005f11      0f1f80000000.  nop dword [rax]
0x00005f18      ba09000000     mov edx, 9
0x00005f1d      bb74000000     mov ebx, 0x74                           ; 't'
0x00005f22      837c240802     cmp dword [rsp + 8], 2
0x00005f27      0f94c0         sete al
0x00005f2a      2244240f       and al, byte [rsp + 0xf]
0x00005f2e      0f854a010000   jne 0x607e
0x00005f34      807c240d00     cmp byte [rsp + 0xd], 0
0x00005f39      7565           jne 0x5fa0
0x00005f3b      89d3           mov ebx, edx
0x00005f3d      4531e4         xor r12d, r12d
0x00005f40      31c0           xor eax, eax
0x00005f42      807c240f00     cmp byte [rsp + 0xf], 0
0x00005f47      0f85eefeffff   jne 0x5e3b
0x00005f4d      e907ffffff     jmp 0x5e59                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00005f52      660f1f440000   nop word [rax + rax]
0x00005f58      ba08000000     mov edx, 8
0x00005f5d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00005f62      ebd0           jmp 0x5f34
0x00005f64      0f1f4000       nop dword [rax]
0x00005f68      837c240802     cmp dword [rsp + 8], 2
0x00005f6d      0f84cd030000   je 0x6340
0x00005f73      807c240d00     cmp byte [rsp + 0xd], 0
0x00005f78      0f8412020000   je 0x6190
0x00005f7e      807c240f00     cmp byte [rsp + 0xf], 0
0x00005f83      0f8407020000   je 0x6190
0x00005f89      48837c241800   cmp qword [rsp + 0x18], 0
0x00005f8f      0f85b6030000   jne 0x634b
0x00005f95      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00005f9a      660f1f440000   nop word [rax + rax]
0x00005fa0      4531e4         xor r12d, r12d
0x00005fa3      837c240802     cmp dword [rsp + 8], 2
0x00005fa8      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x00005fab      807c240f00     cmp byte [rsp + 0xf], 0
0x00005fb0      89d0           mov eax, edx
0x00005fb2      0f8550080000   jne 0x6808
0x00005fb8      4489c0         mov eax, r8d
0x00005fbb      83f001         xor eax, 1
0x00005fbe      20d0           and al, dl
0x00005fc0      742f           je 0x5ff1
0x00005fc2      4d39fd         cmp r13, r15
0x00005fc5      7605           jbe 0x5fcc
0x00005fc7      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00005fcc      498d5701       lea rdx, [r15 + 1]
0x00005fd0      4939d5         cmp r13, rdx
0x00005fd3      7606           jbe 0x5fdb
0x00005fd5      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00005fdb      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x00005fdf      4939d5         cmp r13, rdx
0x00005fe2      7606           jbe 0x5fea
0x00005fe4      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00005fea      4983c703       add r15, 3
0x00005fee      4189c0         mov r8d, eax
0x00005ff1      4d39fd         cmp r13, r15
0x00005ff4      7605           jbe 0x5ffb
0x00005ff6      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00005ffb      4983c701       add r15, 1
0x00005fff      4883c501       add rbp, 1
0x00006003      e988feffff     jmp 0x5e90
0x00006008      0f1f84000000.  nop dword [rax + rax]
0x00006010      807c240d00     cmp byte [rsp + 0xd], 0
0x00006015      0f85c8010000   jne 0x61e3
0x0000601b      31d2           xor edx, edx
0x0000601d      f644247801     test byte [rsp + 0x78], 1
0x00006022      0f8413ffffff   je 0x5f3b
0x00006028      4883c501       add rbp, 1
0x0000602c      e9b7fcffff     jmp 0x5ce8
0x00006031      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00006038      837c240802     cmp dword [rsp + 8], 2
0x0000603d      0f94c2         sete dl
0x00006040      31c0           xor eax, eax
0x00006042      e9e1fdffff     jmp 0x5e28
0x00006047      660f1f840000.  nop word [rax + rax]
0x00006050      ba07000000     mov edx, 7
0x00006055      bb61000000     mov ebx, 0x61                           ; 'a'
0x0000605a      e9d5feffff     jmp 0x5f34
0x0000605f      90             nop
0x00006060      837c240802     cmp dword [rsp + 8], 2
0x00006065      0f94c2         sete dl
0x00006068      4885ed         test rbp, rbp
0x0000606b      0f85abfdffff   jne 0x5e1c
0x00006071      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00006076      20d0           and al, dl
0x00006078      0f84aafdffff   je 0x5e28
0x0000607e      4c89dd         mov rbp, r11
0x00006081      c74424080200.  mov dword [rsp + 8], 2
0x00006089      e9fb060000     jmp 0x6789
0x0000608e      6690           nop
0x00006090      837c240802     cmp dword [rsp + 8], 2
0x00006095      0f94c2         sete dl
0x00006098      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x0000609b      ebd4           jmp 0x6071
0x0000609d      0f1f00         nop dword [rax]
0x000060a0      837c240802     cmp dword [rsp + 8], 2
0x000060a5      bb20000000     mov ebx, 0x20                           ; "@"
0x000060aa      0f94c2         sete dl
0x000060ad      ebc2           jmp 0x6071
0x000060af      90             nop
0x000060b0      ba0d000000     mov edx, 0xd
0x000060b5      bb72000000     mov ebx, 0x72                           ; 'r'
0x000060ba      e963feffff     jmp 0x5f22
0x000060bf      90             nop
0x000060c0      ba0c000000     mov edx, 0xc
0x000060c5      bb66000000     mov ebx, 0x66                           ; 'f'
0x000060ca      e965feffff     jmp 0x5f34
0x000060cf      90             nop
0x000060d0      ba0b000000     mov edx, 0xb
0x000060d5      bb76000000     mov ebx, 0x76                           ; 'v'
0x000060da      e955feffff     jmp 0x5f34
0x000060df      90             nop
0x000060e0      ba0a000000     mov edx, 0xa
0x000060e5      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x000060ea      e933feffff     jmp 0x5f22
0x000060ef      90             nop
0x000060f0      4531d2         xor r10d, r10d
0x000060f3      0f1f440000     nop dword [rax + rax]
0x000060f8      48837c245801   cmp qword [rsp + 0x58], 1
0x000060fe      0f85a4030000   jne 0x64a8
0x00006104      4c895c2438     mov qword [rsp + 0x38], r11
0x00006109      4488442430     mov byte [rsp + 0x30], r8b
0x0000610e      4488542428     mov byte [rsp + 0x28], r10b
0x00006113      e898c6ffff     call sym.imp.__ctype_b_loc
0x00006118      488b08         mov rcx, qword [rax]
0x0000611b      0fb6d3         movzx edx, bl
0x0000611e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00006124      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x0000612a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0000612f      bf01000000     mov edi, 1
0x00006134      0fb70451       movzx eax, word [rcx + rdx*2]
0x00006138      66250040       and ax, 0x4000
0x0000613c      410f95c4       setne r12b
0x00006140      0f94c0         sete al
0x00006143      2244240d       and al, byte [rsp + 0xd]
0x00006147      84c0           test al, al
0x00006149      0f8592090000   jne 0x6ae1
0x0000614f      837c240802     cmp dword [rsp + 8], 2
0x00006154      0f94c2         sete dl
0x00006157      e9ccfcffff     jmp 0x5e28
0x0000615c      0f1f4000       nop dword [rax]
0x00006160      410fb619       movzx ebx, byte [r9]
0x00006164      80fb7e         cmp bl, 0x7e
0x00006167      7787           ja 0x60f0
0x00006169      488d0d387c00.  lea rcx, [0x0000dda8]
0x00006170      0fb6d3         movzx edx, bl
0x00006173      48630491       movsxd rax, dword [rcx + rdx*4]
0x00006177      4801c8         add rax, rcx
0x0000617a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x0000617c      0f1f4000       nop dword [rax]
0x00006180      4531d2         xor r10d, r10d
0x00006183      807c240d00     cmp byte [rsp + 0xd], 0
0x00006188      0f85f0fdffff   jne 0x5f7e
0x0000618e      6690           nop
0x00006190      ba5c000000     mov edx, 0x5c                           ; '\'
0x00006195      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000619a      e995fdffff     jmp 0x5f34
0x0000619f      90             nop
0x000061a0      ba0c000000     mov edx, 0xc
0x000061a5      4531d2         xor r10d, r10d
0x000061a8      bb66000000     mov ebx, 0x66                           ; 'f'
0x000061ad      e982fdffff     jmp 0x5f34
0x000061b2      660f1f440000   nop word [rax + rax]
0x000061b8      ba0a000000     mov edx, 0xa
0x000061bd      4531d2         xor r10d, r10d
0x000061c0      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x000061c5      e958fdffff     jmp 0x5f22
0x000061ca      660f1f440000   nop word [rax + rax]
0x000061d0      bb61000000     mov ebx, 0x61                           ; 'a'
0x000061d5      e9c6fdffff     jmp 0x5fa0
0x000061da      660f1f440000   nop word [rax + rax]
0x000061e0      4531d2         xor r10d, r10d
0x000061e3      837c240802     cmp dword [rsp + 8], 2
0x000061e8      0f94c2         sete dl
0x000061eb      807c240f00     cmp byte [rsp + 0xf], 0
0x000061f0      0f85940b0000   jne 0x6d8a
0x000061f6      4489c0         mov eax, r8d
0x000061f9      4c89f9         mov rcx, r15
0x000061fc      83f001         xor eax, 1
0x000061ff      20d0           and al, dl
0x00006201      742d           je 0x6230
0x00006203      4d39fd         cmp r13, r15
0x00006206      7605           jbe 0x620d
0x00006208      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000620d      498d4f01       lea rcx, [r15 + 1]
0x00006211      4939cd         cmp r13, rcx
0x00006214      7606           jbe 0x621c
0x00006216      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000621c      498d4f02       lea rcx, [r15 + 2]
0x00006220      4939cd         cmp r13, rcx
0x00006223      0f8730060000   ja 0x6859
0x00006229      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x0000622d      4189c0         mov r8d, eax
0x00006230      4939cd         cmp r13, rcx
0x00006233      7605           jbe 0x623a
0x00006235      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000623a      837c240802     cmp dword [rsp + 8], 2
0x0000623f      4c8d7901       lea r15, [rcx + 1]
0x00006243      0f8400060000   je 0x6849
0x00006249      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000624d      4c39d8         cmp rax, r11
0x00006250      7319           jae 0x626b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00006252      488b442410     mov rax, qword [rsp + 0x10]
0x00006257      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x0000625c      88442428       mov byte [rsp + 0x28], al
0x00006260      83e830         sub eax, 0x30
0x00006263      3c09           cmp al, 9
0x00006265      0f862e080000   jbe 0x6a99
0x0000626b      4489e0         mov eax, r12d
0x0000626e      bb30000000     mov ebx, 0x30                           ; '0'
0x00006273      4531e4         xor r12d, r12d
0x00006276      e9adfbffff     jmp 0x5e28                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x0000627b      0f1f440000     nop dword [rax + rax]
0x00006280      837c240802     cmp dword [rsp + 8], 2
0x00006285      4589d4         mov r12d, r10d
0x00006288      0f94c2         sete dl
0x0000628b      4531d2         xor r10d, r10d
0x0000628e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00006290      e993fbffff     jmp 0x5e28                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00006295      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00006298      837c240802     cmp dword [rsp + 8], 2
0x0000629d      0f94c2         sete dl
0x000062a0      4531d2         xor r10d, r10d
0x000062a3      e9c0fdffff     jmp 0x6068
0x000062a8      0f1f84000000.  nop dword [rax + rax]
0x000062b0      837c240802     cmp dword [rsp + 8], 2
0x000062b5      0f94c2         sete dl
0x000062b8      4531d2         xor r10d, r10d
0x000062bb      4531e4         xor r12d, r12d
0x000062be      e9aefdffff     jmp 0x6071
0x000062c3      0f1f440000     nop dword [rax + rax]
0x000062c8      837c240802     cmp dword [rsp + 8], 2
0x000062cd      4589d4         mov r12d, r10d
0x000062d0      bb20000000     mov ebx, 0x20                           ; "@"
0x000062d5      0f94c2         sete dl
0x000062d8      4531d2         xor r10d, r10d
0x000062db      e991fdffff     jmp 0x6071
0x000062e0      ba0d000000     mov edx, 0xd
0x000062e5      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x000062e8      bb72000000     mov ebx, 0x72                           ; 'r'
0x000062ed      e930fcffff     jmp 0x5f22
0x000062f2      660f1f440000   nop word [rax + rax]
0x000062f8      bb76000000     mov ebx, 0x76                           ; 'v'
0x000062fd      e99efcffff     jmp 0x5fa0
0x00006302      660f1f440000   nop word [rax + rax]
0x00006308      ba09000000     mov edx, 9
0x0000630d      4531d2         xor r10d, r10d
0x00006310      bb74000000     mov ebx, 0x74                           ; 't'
0x00006315      e908fcffff     jmp 0x5f22
0x0000631a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00006320      bb62000000     mov ebx, 0x62                           ; 'b'
0x00006325      e976fcffff     jmp 0x5fa0
0x0000632a      660f1f440000   nop word [rax + rax]
0x00006330      4531d2         xor r10d, r10d
0x00006333      e998faffff     jmp 0x5dd0
0x00006338      0f1f84000000.  nop dword [rax + rax]
0x00006340      807c240f00     cmp byte [rsp + 0xf], 0
0x00006345      0f8565090000   jne 0x6cb0
0x0000634b      4883c501       add rbp, 1
0x0000634f      4489c0         mov eax, r8d
0x00006352      4531e4         xor r12d, r12d
0x00006355      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000635a      e90dfbffff     jmp 0x5e6c
0x0000635f      90             nop
0x00006360      837c240802     cmp dword [rsp + 8], 2
0x00006365      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000636a      4589c4         mov r12d, r8d
0x0000636d      4c89dd         mov rbp, r11
0x00006370      0f94c2         sete dl
0x00006373      89d8           mov eax, ebx
0x00006375      4d85ff         test r15, r15
0x00006378      0f94c1         sete cl
0x0000637b      21d0           and eax, edx
0x0000637d      20c8           and al, cl
0x0000637f      0f85610a0000   jne 0x6de6                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00006385      89d8           mov eax, ebx
0x00006387      83f001         xor eax, 1
0x0000638a      20c2           and dl, al
0x0000638c      0f846a090000   je 0x6cfc
0x00006392      807c247c00     cmp byte [rsp + 0x7c], 0
0x00006397      0f845d090000   je 0x6cfa
0x0000639d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x000063a2      0f85f5090000   jne 0x6d9d
0x000063a8      4d85ed         test r13, r13
0x000063ab      0f94c0         sete al
0x000063ae      48837c245000   cmp qword [rsp + 0x50], 0
0x000063b4      0f95c2         setne dl
0x000063b7      20d0           and al, dl
0x000063b9      0f841d0a0000   je 0x6ddc
0x000063bf      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000063c4      488d1d5a7700.  lea rbx, [0x0000db25]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000063cb      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x000063cf      c74424080200.  mov dword [rsp + 8], 2
0x000063d7      41bf01000000   mov r15d, 1
0x000063dd      48c744241801.  mov qword [rsp + 0x18], 1
0x000063e6      c644240f00     mov byte [rsp + 0xf], 0
0x000063eb      48895c2448     mov qword [rsp + 0x48], rbx
0x000063f0      8844247c       mov byte [rsp + 0x7c], al
0x000063f4      e9daf8ffff     jmp 0x5cd3
0x000063f9      0f1f80000000.  nop dword [rax]
0x00006400      807c240f00     cmp byte [rsp + 0xf], 0
0x00006405      0f85a5080000   jne 0x6cb0
0x0000640b      4d85ed         test r13, r13
0x0000640e      0f84fc030000   je 0x6810                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00006414      31d2           xor edx, edx
0x00006416      48837c245000   cmp qword [rsp + 0x50], 0
0x0000641c      0f85ee030000   jne 0x6810                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00006422      4c896c2450     mov qword [rsp + 0x50], r13
0x00006427      4983c703       add r15, 3
0x0000642b      31c0           xor eax, eax
0x0000642d      448864247c     mov byte [rsp + 0x7c], r12b
0x00006432      4531c0         xor r8d, r8d
0x00006435      4989d5         mov r13, rdx
0x00006438      bb27000000     mov ebx, 0x27                           ; '''
0x0000643d      e917faffff     jmp 0x5e59
0x00006442      660f1f440000   nop word [rax + rax]
0x00006448      f644247804     test byte [rsp + 0x78], 4
0x0000644d      7421           je 0x6470
0x0000644f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00006453      4c39d9         cmp rcx, r11
0x00006456      7318           jae 0x6470
0x00006458      488b442410     mov rax, qword [rsp + 0x10]
0x0000645d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00006462      0f848a070000   je 0x6bf2
0x00006468      0f1f84000000.  nop dword [rax + rax]
0x00006470      31d2           xor edx, edx
0x00006472      4531e4         xor r12d, r12d
0x00006475      31c0           xor eax, eax
0x00006477      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000647c      e9a7f9ffff     jmp 0x5e28
0x00006481      0f1f80000000.  nop dword [rax]
0x00006488      807c240f00     cmp byte [rsp + 0xf], 0
0x0000648d      0f851d080000   jne 0x6cb0
0x00006493      4531e4         xor r12d, r12d
0x00006496      31c0           xor eax, eax
0x00006498      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000649d      e9b7f9ffff     jmp 0x5e59                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x000064a2      660f1f440000   nop word [rax + rax]
0x000064a8      488d8424a000.  lea rax, [rsp + 0xa0]
0x000064b0      4983fbff       cmp r11, 0xffffffffffffffff
0x000064b4      48c78424a000.  mov qword [rsp + 0xa0], 0
0x000064c0      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x000064c5      752d           jne 0x64f4
0x000064c7      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000064cc      4488442440     mov byte [rsp + 0x40], r8b
0x000064d1      4488542438     mov byte [rsp + 0x38], r10b
0x000064d6      4c894c2430     mov qword [rsp + 0x30], r9
0x000064db      e830c0ffff     call sym.imp.strlen
0x000064e0      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x000064e6      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x000064ec      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x000064ef      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000064f4      488d84249c00.  lea rax, [rsp + 0x9c]
0x000064fc      31c9           xor ecx, ecx
0x000064fe      885c247e       mov byte [rsp + 0x7e], bl
0x00006502      448844247d     mov byte [rsp + 0x7d], r8b
0x00006507      4889cb         mov rbx, rcx
0x0000650a      4c898c248800.  mov qword [rsp + 0x88], r9
0x00006512      4889442438     mov qword [rsp + 0x38], rax
0x00006517      448854247f     mov byte [rsp + 0x7f], r10b
0x0000651c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00006524      4c89742440     mov qword [rsp + 0x40], r14
0x00006529      4c896c2470     mov qword [rsp + 0x70], r13
0x0000652e      4c895c2430     mov qword [rsp + 0x30], r11
0x00006533      488b442410     mov rax, qword [rsp + 0x10]
0x00006538      4c8d741d00     lea r14, [rbp + rbx]
0x0000653d      488b542430     mov rdx, qword [rsp + 0x30]
0x00006542      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00006547      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000654c      4e8d2c30       lea r13, [rax + r14]
0x00006550      4c29f2         sub rdx, r14
0x00006553      4c89ee         mov rsi, r13
0x00006556      e885290000     call sym.rpl_mbrtowc
0x0000655b      4885c0         test rax, rax
0x0000655e      4989c7         mov r15, rax
0x00006561      744e           je 0x65b1
0x00006563      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006567      0f8418060000   je 0x6b85
0x0000656d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00006571      0f849a050000   je 0x6b11
0x00006577      837c240802     cmp dword [rsp + 8], 2
0x0000657c      0f94c0         sete al
0x0000657f      2244240f       and al, byte [rsp + 0xf]
0x00006583      0f8597010000   jne 0x6720
0x00006589      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00006590      e80bc2ffff     call sym.imp.iswprint
0x00006595      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000659a      85c0           test eax, eax
0x0000659c      b800000000     mov eax, 0
0x000065a1      440f44e0       cmove r12d, eax
0x000065a5      4c01fb         add rbx, r15
0x000065a8      e8e3c1ffff     call sym.imp.mbsinit
0x000065ad      85c0           test eax, eax
0x000065af      7482           je 0x6533
0x000065b1      4489e2         mov edx, r12d
0x000065b4      4889df         mov rdi, rbx
0x000065b7      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000065bd      83f201         xor edx, 1
0x000065c0      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000065c5      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000065cb      2254240d       and dl, byte [rsp + 0xd]
0x000065cf      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000065d7      4c8b742440     mov r14, qword [rsp + 0x40]
0x000065dc      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000065e1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000065e6      4883ff01       cmp rdi, 1
0x000065ea      0f86fb050000   jbe 0x6beb
0x000065f0      4889f9         mov rcx, rdi
0x000065f3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x000065f5      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x000065fb      4801e9         add rcx, rbp
0x000065fe      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00006603      e9b6000000     jmp 0x66be
0x00006608      0f1f84000000.  nop dword [rax + rax]
0x00006610      837c240802     cmp dword [rsp + 8], 2
0x00006615      0f94c0         sete al
0x00006618      4584c9         test r9b, r9b
0x0000661b      0f85af040000   jne 0x6ad0
0x00006621      4489c6         mov esi, r8d
0x00006624      83f601         xor esi, 1
0x00006627      4020f0         and al, sil
0x0000662a      742f           je 0x665b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x0000662c      4d39fd         cmp r13, r15
0x0000662f      7605           jbe 0x6636
0x00006631      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00006636      498d7701       lea rsi, [r15 + 1]
0x0000663a      4939f5         cmp r13, rsi
0x0000663d      7606           jbe 0x6645                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x0000663f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00006645      498d7702       lea rsi, [r15 + 2]
0x00006649      4939f5         cmp r13, rsi
0x0000664c      7606           jbe 0x6654
0x0000664e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00006654      4983c703       add r15, 3
0x00006658      4189c0         mov r8d, eax
0x0000665b      4d39fd         cmp r13, r15
0x0000665e      7605           jbe 0x6665
0x00006660      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00006665      498d4701       lea rax, [r15 + 1]
0x00006669      4939c5         cmp r13, rax
0x0000666c      760d           jbe 0x667b
0x0000666e      89d8           mov eax, ebx
0x00006670      c0e806         shr al, 6
0x00006673      83c030         add eax, 0x30
0x00006676      4388443e01     mov byte [r14 + r15 + 1], al
0x0000667b      498d4702       lea rax, [r15 + 2]
0x0000667f      4939c5         cmp r13, rax
0x00006682      7610           jbe 0x6694
0x00006684      89d8           mov eax, ebx
0x00006686      c0e803         shr al, 3
0x00006689      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x0000668c      83c030         add eax, 0x30
0x0000668f      4388443e02     mov byte [r14 + r15 + 2], al
0x00006694      83e307         and ebx, 7
0x00006697      4883c501       add rbp, 1
0x0000669b      4983c703       add r15, 3
0x0000669f      83c330         add ebx, 0x30
0x000066a2      4839cd         cmp rbp, rcx
0x000066a5      0f83e5f7ffff   jae 0x5e90
0x000066ab      89d6           mov esi, edx
0x000066ad      4d39fd         cmp r13, r15
0x000066b0      7604           jbe 0x66b6
0x000066b2      43881c3e       mov byte [r14 + r15], bl
0x000066b6      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x000066ba      4983c701       add r15, 1
0x000066be      84d2           test dl, dl
0x000066c0      0f854affffff   jne 0x6610
0x000066c6      89f0           mov eax, esi
0x000066c8      83f001         xor eax, 1
0x000066cb      4421c0         and eax, r8d
0x000066ce      4584d2         test r10b, r10b
0x000066d1      740e           je 0x66e1
0x000066d3      4d39fd         cmp r13, r15
0x000066d6      7605           jbe 0x66dd
0x000066d8      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000066dd      4983c701       add r15, 1
0x000066e1      4883c501       add rbp, 1
0x000066e5      4839cd         cmp rbp, rcx
0x000066e8      0f837ef7ffff   jae 0x5e6c
0x000066ee      84c0           test al, al
0x000066f0      0f84f8030000   je 0x6aee
0x000066f6      4d39fd         cmp r13, r15
0x000066f9      7605           jbe 0x6700
0x000066fb      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00006700      498d4701       lea rax, [r15 + 1]
0x00006704      4939c5         cmp r13, rax
0x00006707      7606           jbe 0x670f
0x00006709      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000670f      4983c702       add r15, 2
0x00006713      4531d2         xor r10d, r10d
0x00006716      4531c0         xor r8d, r8d
0x00006719      eb92           jmp 0x66ad
0x0000671b      0f1f440000     nop dword [rax + rax]
0x00006720      4983ff01       cmp r15, 1
0x00006724      0f845ffeffff   je 0x6589
0x0000672a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000672f      4a8d0c3f       lea rcx, [rdi + r15]
0x00006733      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00006738      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000673c      eb0f           jmp 0x674d
0x0000673e      6690           nop
0x00006740      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00006744      4939d0         cmp r8, rdx
0x00006747      0f843cfeffff   je 0x6589
0x0000674d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00006750      83e95b         sub ecx, 0x5b
0x00006753      80f921         cmp cl, 0x21
0x00006756      77e8           ja 0x6740                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00006758      be01000000     mov esi, 1
0x0000675d      48d3e6         shl rsi, cl
0x00006760      4889f1         mov rcx, rsi
0x00006763      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x0000676d      4885f1         test rcx, rsi
0x00006770      74ce           je 0x6740
0x00006772      4c8b742440     mov r14, qword [rsp + 0x40]
0x00006777      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000677c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00006781      c74424080200.  mov dword [rsp + 8], 2
0x00006789      807c240d00     cmp byte [rsp + 0xd], 0
0x0000678e      7410           je 0x67a0
0x00006790      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00006792      b804000000     mov eax, 4
0x00006797      0f44442408     cmove eax, dword [rsp + 8]
0x0000679c      89442408       mov dword [rsp + 8], eax
0x000067a0      4883ec08       sub rsp, 8
0x000067a4      4889e9         mov rcx, rbp
0x000067a7      4c89ee         mov rsi, r13
0x000067aa      ff742468       push qword [rsp + 0x68]
0x000067ae      ff742478       push qword [rsp + 0x78]
0x000067b2      4c89f7         mov rdi, r14
0x000067b5      6a00           push 0
0x000067b7      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x000067bf      448b442428     mov r8d, dword [rsp + 0x28]
0x000067c4      488b542430     mov rdx, qword [rsp + 0x30]
0x000067c9      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x000067cd      e82ef4ffff     call sym.quotearg_buffer_restyled
0x000067d2      4883c420       add rsp, 0x20
0x000067d6      4989c7         mov r15, rax
0x000067d9      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x000067e1      6448331c2528.  xor rbx, qword fs:[0x28]
0x000067ea      4c89f8         mov rax, r15
0x000067ed      0f8500060000   jne 0x6df3
0x000067f3      4881c4b80000.  add rsp, 0xb8
0x000067fa      5b             pop rbx
0x000067fb      5d             pop rbp
0x000067fc      415c           pop r12
0x000067fe      415d           pop r13
0x00006800      415e           pop r14
0x00006802      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00006804      c3             ret
0x00006805      0f1f00         nop dword [rax]
0x00006808      4c89dd         mov rbp, r11
0x0000680b      e979ffffff     jmp 0x6789
0x00006810      4d39fd         cmp r13, r15
0x00006813      7605           jbe 0x681a
0x00006815      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000681a      498d4701       lea rax, [r15 + 1]
0x0000681e      4939c5         cmp r13, rax
0x00006821      7606           jbe 0x6829
0x00006823      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00006829      498d4702       lea rax, [r15 + 2]
0x0000682d      4939c5         cmp r13, rax
0x00006830      0f86ec050000   jbe 0x6e22
0x00006836      4c89ea         mov rdx, r13
0x00006839      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000683f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00006844      e9d9fbffff     jmp 0x6422
0x00006849      4489e0         mov eax, r12d
0x0000684c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00006851      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00006854      e900f6ffff     jmp 0x5e59                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00006859      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000685f      e9c5f9ffff     jmp 0x6229
0x00006864      85db           test ebx, ebx
0x00006866      0f8527f4ffff   jne 0x5c93
0x0000686c      c644240d01     mov byte [rsp + 0xd], 1
0x00006871      4d85ed         test r13, r13
0x00006874      0f8590050000   jne 0x6e0a
0x0000687a      488d05a47200.  lea rax, [0x0000db25]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00006881      48c744245000.  mov qword [rsp + 0x50], 0
0x0000688a      c644240e01     mov byte [rsp + 0xe], 1
0x0000688f      c644247c00     mov byte [rsp + 0x7c], 0
0x00006894      4531e4         xor r12d, r12d
0x00006897      c644240f00     mov byte [rsp + 0xf], 0
0x0000689c      48c744241801.  mov qword [rsp + 0x18], 1
0x000068a5      4889442448     mov qword [rsp + 0x48], rax
0x000068aa      41bf01000000   mov r15d, 1
0x000068b0      c74424080200.  mov dword [rsp + 8], 2
0x000068b8      e916f4ffff     jmp 0x5cd3                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x000068bd      0f1f00         nop dword [rax]
0x000068c0      85db           test ebx, ebx
0x000068c2      0f85f5030000   jne 0x6cbd
0x000068c8      4d85ed         test r13, r13
0x000068cb      0f8425020000   je 0x6af6
0x000068d1      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x000068d5      c644240e01     mov byte [rsp + 0xe], 1
0x000068da      4531e4         xor r12d, r12d
0x000068dd      c644247c00     mov byte [rsp + 0x7c], 0
0x000068e2      48c744245000.  mov qword [rsp + 0x50], 0
0x000068eb      488d05317200.  lea rax, str.l______l                   ; 0xdb23 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000068f2      c644240f00     mov byte [rsp + 0xf], 0
0x000068f7      c644240d01     mov byte [rsp + 0xd], 1
0x000068fc      48c744241801.  mov qword [rsp + 0x18], 1
0x00006905      41bf01000000   mov r15d, 1
0x0000690b      4889442448     mov qword [rsp + 0x48], rax
0x00006910      e9bef3ffff     jmp 0x5cd3
0x00006915      488d05077200.  lea rax, str.l______l                   ; 0xdb23 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000691c      c644240e01     mov byte [rsp + 0xe], 1
0x00006921      c644247c00     mov byte [rsp + 0x7c], 0
0x00006926      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00006929      48c744245000.  mov qword [rsp + 0x50], 0
0x00006932      c644240f01     mov byte [rsp + 0xf], 1
0x00006937      c644240d01     mov byte [rsp + 0xd], 1
0x0000693c      48c744241801.  mov qword [rsp + 0x18], 1
0x00006945      4531ff         xor r15d, r15d
0x00006948      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x0000694d      c74424080500.  mov dword [rsp + 8], 5
0x00006955      e979f3ffff     jmp 0x5cd3
0x0000695a      c644240e01     mov byte [rsp + 0xe], 1
0x0000695f      c644247c00     mov byte [rsp + 0x7c], 0
0x00006964      4531e4         xor r12d, r12d
0x00006967      48c744245000.  mov qword [rsp + 0x50], 0
0x00006970      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00006975      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00006978      c644240d01     mov byte [rsp + 0xd], 1
0x0000697d      48c744241800.  mov qword [rsp + 0x18], 0
0x00006986      48c744244800.  mov qword [rsp + 0x48], 0
0x0000698f      e93ff3ffff     jmp 0x5cd3
0x00006994      837c24080a     cmp dword [rsp + 8], 0xa
0x00006999      7456           je 0x69f1
0x0000699b      488d35857100.  lea rsi, [0x0000db27]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x000069a2      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x000069a4      ba05000000     mov edx, 5
0x000069a9      e842bbffff     call sym.imp.dcgettext
0x000069ae      4889c1         mov rcx, rax
0x000069b1      4889442468     mov qword [rsp + 0x68], rax
0x000069b6      488d056a7100.  lea rax, [0x0000db27]                   ; "`"
0x000069bd      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x000069c0      0f8498030000   je 0x6d5e
0x000069c6      488d35587100.  lea rsi, [0x0000db25]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000069cd      31ff           xor edi, edi
0x000069cf      ba05000000     mov edx, 5
0x000069d4      e817bbffff     call sym.imp.dcgettext
0x000069d9      4889c1         mov rcx, rax
0x000069dc      4889442460     mov qword [rsp + 0x60], rax
0x000069e1      488d053d7100.  lea rax, [0x0000db25]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000069e8      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x000069eb      0f8483030000   je 0x6d74
0x000069f1      4531ff         xor r15d, r15d
0x000069f4      85db           test ebx, ebx
0x000069f6      0f84c1010000   je 0x6bbd
0x000069fc      85db           test ebx, ebx
0x000069fe      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00006a03      0f9544240f     setne byte [rsp + 0xf]
0x00006a08      4531e4         xor r12d, r12d
0x00006a0b      4889df         mov rdi, rbx
0x00006a0e      e8fdbaffff     call sym.imp.strlen
0x00006a13      48895c2448     mov qword [rsp + 0x48], rbx
0x00006a18      4889442418     mov qword [rsp + 0x18], rax
0x00006a1d      c644240e01     mov byte [rsp + 0xe], 1
0x00006a22      c644247c00     mov byte [rsp + 0x7c], 0
0x00006a27      48c744245000.  mov qword [rsp + 0x50], 0
0x00006a30      c644240d01     mov byte [rsp + 0xd], 1
0x00006a35      e999f2ffff     jmp 0x5cd3
0x00006a3a      c644240e01     mov byte [rsp + 0xe], 1
0x00006a3f      c644247c00     mov byte [rsp + 0x7c], 0
0x00006a44      4531e4         xor r12d, r12d
0x00006a47      48c744245000.  mov qword [rsp + 0x50], 0
0x00006a50      c644240f00     mov byte [rsp + 0xf], 0
0x00006a55      4531ff         xor r15d, r15d
0x00006a58      c644240d00     mov byte [rsp + 0xd], 0
0x00006a5d      48c744241800.  mov qword [rsp + 0x18], 0
0x00006a66      48c744244800.  mov qword [rsp + 0x48], 0
0x00006a6f      e95ff2ffff     jmp 0x5cd3
0x00006a74      c644240e01     mov byte [rsp + 0xe], 1
0x00006a79      c644247c00     mov byte [rsp + 0x7c], 0
0x00006a7e      4531e4         xor r12d, r12d
0x00006a81      48c744245000.  mov qword [rsp + 0x50], 0
0x00006a8a      c644240f01     mov byte [rsp + 0xf], 1
0x00006a8f      c644240d01     mov byte [rsp + 0xd], 1
0x00006a94      e91af2ffff     jmp 0x5cb3
0x00006a99      4d39fd         cmp r13, r15
0x00006a9c      7605           jbe 0x6aa3
0x00006a9e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00006aa3      488d4102       lea rax, [rcx + 2]
0x00006aa7      4939c5         cmp r13, rax
0x00006aaa      7606           jbe 0x6ab2
0x00006aac      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00006ab2      4489e0         mov eax, r12d
0x00006ab5      4c8d7903       lea r15, [rcx + 3]
0x00006ab9      4531e4         xor r12d, r12d
0x00006abc      bb30000000     mov ebx, 0x30                           ; '0'
0x00006ac1      e962f3ffff     jmp 0x5e28
0x00006ac6      662e0f1f8400.  nop word cs:[rax + rax]
0x00006ad0      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00006ad5      4c89dd         mov rbp, r11
0x00006ad8      885c240d       mov byte [rsp + 0xd], bl
0x00006adc      e9a8fcffff     jmp 0x6789
0x00006ae1      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00006ae6      4531e4         xor r12d, r12d
0x00006ae9      e902fbffff     jmp 0x65f0
0x00006aee      4531d2         xor r10d, r10d
0x00006af1      e9b7fbffff     jmp 0x66ad
0x00006af6      48c744245000.  mov qword [rsp + 0x50], 0
0x00006aff      c644240e01     mov byte [rsp + 0xe], 1
0x00006b04      4531e4         xor r12d, r12d
0x00006b07      c644247c00     mov byte [rsp + 0x7c], 0
0x00006b0c      e9dafdffff     jmp 0x68eb
0x00006b11      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00006b16      4c89f6         mov rsi, r14
0x00006b19      4c89e9         mov rcx, r13
0x00006b1c      4889d8         mov rax, rbx
0x00006b1f      4889df         mov rdi, rbx
0x00006b22      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00006b28      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00006b2d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00006b35      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00006b38      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00006b3e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00006b46      4c8b742440     mov r14, qword [rsp + 0x40]
0x00006b4b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00006b50      7326           jae 0x6b78
0x00006b52      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00006b55      7510           jne 0x6b67
0x00006b57      eb1f           jmp 0x6b78
0x00006b59      0f1f80000000.  nop dword [rax]
0x00006b60      41803c0100     cmp byte [r9 + rax], 0
0x00006b65      740e           je 0x6b75
0x00006b67      4883c001       add rax, 1
0x00006b6b      488d540500     lea rdx, [rbp + rax]
0x00006b70      4939d3         cmp r11, rdx
0x00006b73      77eb           ja 0x6b60
0x00006b75      4889c7         mov rdi, rax
0x00006b78      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00006b7d      4531e4         xor r12d, r12d
0x00006b80      e961faffff     jmp 0x65e6
0x00006b85      4889df         mov rdi, rbx
0x00006b88      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00006b8e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00006b93      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00006b99      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00006ba1      4531e4         xor r12d, r12d
0x00006ba4      4c8b742440     mov r14, qword [rsp + 0x40]
0x00006ba9      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00006bae      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00006bb3      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00006bb8      e929faffff     jmp 0x65e6
0x00006bbd      488b542468     mov rdx, qword [rsp + 0x68]
0x00006bc2      0fb602         movzx eax, byte [rdx]
0x00006bc5      84c0           test al, al
0x00006bc7      0f842ffeffff   je 0x69fc
0x00006bcd      0f1f00         nop dword [rax]
0x00006bd0      4d39fd         cmp r13, r15
0x00006bd3      7604           jbe 0x6bd9
0x00006bd5      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00006bd9      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x00006bdd      420fb6043a     movzx eax, byte [rdx + r15]
0x00006be2      84c0           test al, al
0x00006be4      75ea           jne 0x6bd0
0x00006be6      e911feffff     jmp 0x69fc
0x00006beb      89d0           mov eax, edx
0x00006bed      e955f5ffff     jmp 0x6147
0x00006bf2      0fb61c08       movzx ebx, byte [rax + rcx]
0x00006bf6      80fb3e         cmp bl, 0x3e
0x00006bf9      0f8771f8ffff   ja 0x6470
0x00006bff      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00006c09      480fa3d8       bt rax, rbx
0x00006c0d      0f835df8ffff   jae 0x6470
0x00006c13      807c240f00     cmp byte [rsp + 0xf], 0
0x00006c18      0f85e4010000   jne 0x6e02                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x00006c1e      4d39fd         cmp r13, r15
0x00006c21      7605           jbe 0x6c28
0x00006c23      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00006c28      498d4701       lea rax, [r15 + 1]
0x00006c2c      4939c5         cmp r13, rax
0x00006c2f      7606           jbe 0x6c37
0x00006c31      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00006c37      498d4702       lea rax, [r15 + 2]
0x00006c3b      4939c5         cmp r13, rax
0x00006c3e      7606           jbe 0x6c46
0x00006c40      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00006c46      498d4703       lea rax, [r15 + 3]
0x00006c4a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x00006c4d      7606           jbe 0x6c55
0x00006c4f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00006c55      4983c704       add r15, 4
0x00006c59      31d2           xor edx, edx
0x00006c5b      4531e4         xor r12d, r12d
0x00006c5e      31c0           xor eax, eax
0x00006c60      4889cd         mov rbp, rcx
0x00006c63      e9c0f1ffff     jmp 0x5e28
0x00006c68      85db           test ebx, ebx
0x00006c6a      0f8488010000   je 0x6df8
0x00006c70      488d05ae6e00.  lea rax, [0x0000db25]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00006c77      c644240e01     mov byte [rsp + 0xe], 1
0x00006c7c      c644247c00     mov byte [rsp + 0x7c], 0
0x00006c81      4531e4         xor r12d, r12d
0x00006c84      48c744245000.  mov qword [rsp + 0x50], 0
0x00006c8d      c644240f01     mov byte [rsp + 0xf], 1
0x00006c92      c644240d00     mov byte [rsp + 0xd], 0
0x00006c97      48c744241801.  mov qword [rsp + 0x18], 1
0x00006ca0      4531ff         xor r15d, r15d
0x00006ca3      4889442448     mov qword [rsp + 0x48], rax
0x00006ca8      e926f0ffff     jmp 0x5cd3
0x00006cad      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00006cb0      4c89dd         mov rbp, r11
0x00006cb3      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00006cb8      e9ccfaffff     jmp 0x6789
0x00006cbd      488d055f6e00.  lea rax, str.l______l                   ; 0xdb23 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00006cc4      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00006cc9      c644247c00     mov byte [rsp + 0x7c], 0
0x00006cce      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00006cd1      48c744245000.  mov qword [rsp + 0x50], 0
0x00006cda      c644240f01     mov byte [rsp + 0xf], 1
0x00006cdf      c644240d01     mov byte [rsp + 0xd], 1
0x00006ce4      48c744241801.  mov qword [rsp + 0x18], 1
0x00006ced      4531ff         xor r15d, r15d
0x00006cf0      4889442448     mov qword [rsp + 0x48], rax
0x00006cf5      e9d9efffff     jmp 0x5cd3
0x00006cfa      89d0           mov eax, edx
0x00006cfc      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00006d01      4885db         test rbx, rbx
0x00006d04      742c           je 0x6d32
0x00006d06      84c0           test al, al
0x00006d08      7428           je 0x6d32
0x00006d0a      0fb60b         movzx ecx, byte [rbx]
0x00006d0d      4889d8         mov rax, rbx
0x00006d10      84c9           test cl, cl
0x00006d12      741e           je 0x6d32
0x00006d14      4c89fa         mov rdx, r15
0x00006d17      4c29f8         sub rax, r15
0x00006d1a      4939d5         cmp r13, rdx
0x00006d1d      7604           jbe 0x6d23
0x00006d1f      41880c16       mov byte [r14 + rdx], cl
0x00006d23      4883c201       add rdx, 1
0x00006d27      0fb60c10       movzx ecx, byte [rax + rdx]
0x00006d2b      84c9           test cl, cl
0x00006d2d      75eb           jne 0x6d1a
0x00006d2f      4989d7         mov r15, rdx
0x00006d32      4d39fd         cmp r13, r15
0x00006d35      0f869efaffff   jbe 0x67d9
0x00006d3b      43c6043e00     mov byte [r14 + r15], 0
0x00006d40      e994faffff     jmp 0x67d9
0x00006d45      837c240802     cmp dword [rsp + 8], 2
0x00006d4a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00006d4f      4c89dd         mov rbp, r11
0x00006d52      0f94c0         sete al
0x00006d55      885c240d       mov byte [rsp + 0xd], bl
0x00006d59      e92bfaffff     jmp 0x6789
0x00006d5e      8b742408       mov esi, dword [rsp + 8]
0x00006d62      4889cf         mov rdi, rcx
0x00006d65      e8a6edffff     call sym.gettext_quote.part.1
0x00006d6a      4889442468     mov qword [rsp + 0x68], rax
0x00006d6f      e952fcffff     jmp 0x69c6
0x00006d74      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00006d78      4889cf         mov rdi, rcx
0x00006d7b      e890edffff     call sym.gettext_quote.part.1
0x00006d80      4889442460     mov qword [rsp + 0x60], rax
0x00006d85      e967fcffff     jmp 0x69f1
0x00006d8a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00006d8f      4c89dd         mov rbp, r11
0x00006d92      89d0           mov eax, edx
0x00006d94      885c240d       mov byte [rsp + 0xd], bl
0x00006d98      e9ecf9ffff     jmp 0x6789
0x00006d9d      4883ec08       sub rsp, 8
0x00006da1      41b805000000   mov r8d, 5
0x00006da7      4c89d9         mov rcx, r11
0x00006daa      ff742468       push qword [rsp + 0x68]
0x00006dae      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00006db2      4c89f7         mov rdi, r14
0x00006db5      ff742438       push qword [rsp + 0x38]
0x00006db9      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00006dc1      488b542430     mov rdx, qword [rsp + 0x30]
0x00006dc6      488b742470     mov rsi, qword [rsp + 0x70]
0x00006dcb      e830eeffff     call sym.quotearg_buffer_restyled
0x00006dd0      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00006dd4      4989c7         mov r15, rax
0x00006dd7      e9fdf9ffff     jmp 0x67d9
0x00006ddc      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00006de1      e916ffffff     jmp 0x6cfc
0x00006de6      c74424080200.  mov dword [rsp + 8], 2
0x00006dee      e996f9ffff     jmp 0x6789
0x00006df3      e828b7ffff     call sym.imp.__stack_chk_fail
0x00006df8      c644240d00     mov byte [rsp + 0xd], 0
0x00006dfd      e96ffaffff     jmp 0x6871
0x00006e02      4c89dd         mov rbp, r11
0x00006e05      e996f9ffff     jmp 0x67a0
0x00006e0a      c644240e01     mov byte [rsp + 0xe], 1
0x00006e0f      31c0           xor eax, eax
0x00006e11      4531e4         xor r12d, r12d
0x00006e14      48c744245000.  mov qword [rsp + 0x50], 0
0x00006e1d      e9a2f5ffff     jmp 0x63c4
0x00006e22      4c89ea         mov rdx, r13
0x00006e25      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00006e2a      e9f3f5ffff     jmp 0x6422
0x00006e2f      e80cb6ffff     call sym.imp.abort
0x00006e34      6690           nop
0x00006e36      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00006e40      4157           push r15
0x00006e42      4156           push r14
0x00006e44      4c63ff         movsxd r15, edi
0x00006e47      4155           push r13
0x00006e49      4154           push r12
0x00006e4b      4989d6         mov r14, rdx
0x00006e4e      55             push rbp
0x00006e4f      53             push rbx
0x00006e50      4889cd         mov rbp, rcx
0x00006e53      4883ec28       sub rsp, 0x28
0x00006e57      4889742408     mov qword [rsp + 8], rsi
0x00006e5c      e8efb5ffff     call sym.imp.__errno_location
0x00006e61      4989c5         mov r13, rax
0x00006e64      8b00           mov eax, dword [rax]
0x00006e66      4585ff         test r15d, r15d
0x00006e69      488b1d10a220.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x211080:8]=0x211090 obj.slotvec0
0x00006e70      89442418       mov dword [rsp + 0x18], eax
0x00006e74      0f8867010000   js 0x6fe1
0x00006e7a      44393df7a120.  cmp dword [obj.nslots], r15d            ; [0x211078:4]=1
0x00006e81      7f62           jg 0x6ee5
0x00006e83      4181ffffffff.  cmp r15d, 0x7fffffff
0x00006e8a      0f8456010000   je 0x6fe6
0x00006e90      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00006e94      488d05f5a120.  lea rax, obj.slotvec0                   ; 0x211090
0x00006e9b      4963f4         movsxd rsi, r12d
0x00006e9e      48c1e604       shl rsi, 4
0x00006ea2      4839c3         cmp rbx, rax
0x00006ea5      0f8415010000   je 0x6fc0
0x00006eab      4889df         mov rdi, rbx
0x00006eae      e86d0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00006eb3      4889c3         mov rbx, rax
0x00006eb6      488905c3a120.  mov qword [obj.slotvec], rax            ; [0x211080:8]=0x211090 obj.slotvec0
0x00006ebd      48633db4a120.  movsxd rdi, dword [obj.nslots]          ; [0x211078:4]=1
0x00006ec4      4489e2         mov edx, r12d
0x00006ec7      31f6           xor esi, esi
0x00006ec9      29fa           sub edx, edi
0x00006ecb      48c1e704       shl rdi, 4
0x00006ecf      4863d2         movsxd rdx, edx
0x00006ed2      4801df         add rdi, rbx
0x00006ed5      48c1e204       shl rdx, 4
0x00006ed9      e8e2b6ffff     call sym.imp.memset
0x00006ede      44892593a120.  mov dword [obj.nslots], r12d            ; [0x211078:4]=1
0x00006ee5      8b4504         mov eax, dword [rbp + 4]
0x00006ee8      49c1e704       shl r15, 4
0x00006eec      4883ec08       sub rsp, 8
0x00006ef0      4c01fb         add rbx, r15
0x00006ef3      4c8d7d08       lea r15, [rbp + 8]
0x00006ef7      448b4500       mov r8d, dword [rbp]
0x00006efb      4c8b1b         mov r11, qword [rbx]
0x00006efe      4c8b6308       mov r12, qword [rbx + 8]
0x00006f02      4c89f1         mov rcx, r14
0x00006f05      83c801         or eax, 1
0x00006f08      89442424       mov dword [rsp + 0x24], eax
0x00006f0c      ff7530         push qword [rbp + 0x30]
0x00006f0f      4189c1         mov r9d, eax
0x00006f12      ff7528         push qword [rbp + 0x28]
0x00006f15      4157           push r15
0x00006f17      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00006f1a      488b542428     mov rdx, qword [rsp + 0x28]
0x00006f1f      4c89e7         mov rdi, r12
0x00006f22      4c895c2430     mov qword [rsp + 0x30], r11
0x00006f27      e8d4ecffff     call sym.quotearg_buffer_restyled
0x00006f2c      4883c420       add rsp, 0x20
0x00006f30      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00006f35      4939c3         cmp r11, rax
0x00006f38      7767           ja 0x6fa1
0x00006f3a      488d7001       lea rsi, [rax + 1]
0x00006f3e      488d05dba220.  lea rax, obj.slot0                      ; 0x211220
0x00006f45      4939c4         cmp r12, rax
0x00006f48      488933         mov qword [rbx], rsi
0x00006f4b      7412           je 0x6f5f
0x00006f4d      4c89e7         mov rdi, r12
0x00006f50      4889742410     mov qword [rsp + 0x10], rsi
0x00006f55      e8d6b4ffff     call sym.imp.free
0x00006f5a      488b742410     mov rsi, qword [rsp + 0x10]
0x00006f5f      4889f7         mov rdi, rsi
0x00006f62      4889742410     mov qword [rsp + 0x10], rsi
0x00006f67      e8540e0000     call sym.xmalloc
0x00006f6c      4883ec08       sub rsp, 8
0x00006f70      48894308       mov qword [rbx + 8], rax
0x00006f74      448b4500       mov r8d, dword [rbp]
0x00006f78      ff7530         push qword [rbp + 0x30]
0x00006f7b      ff7528         push qword [rbp + 0x28]
0x00006f7e      4c89f1         mov rcx, r14
0x00006f81      4157           push r15
0x00006f83      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00006f88      4889c7         mov rdi, rax
0x00006f8b      488b542428     mov rdx, qword [rsp + 0x28]
0x00006f90      488b742430     mov rsi, qword [rsp + 0x30]
0x00006f95      4989c4         mov r12, rax
0x00006f98      e863ecffff     call sym.quotearg_buffer_restyled
0x00006f9d      4883c420       add rsp, 0x20
0x00006fa1      8b442418       mov eax, dword [rsp + 0x18]
0x00006fa5      41894500       mov dword [r13], eax
0x00006fa9      4883c428       add rsp, 0x28
0x00006fad      4c89e0         mov rax, r12
0x00006fb0      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00006fb1      5d             pop rbp
0x00006fb2      415c           pop r12
0x00006fb4      415d           pop r13
0x00006fb6      415e           pop r14
0x00006fb8      415f           pop r15
0x00006fba      c3             ret
0x00006fbb      0f1f440000     nop dword [rax + rax]
0x00006fc0      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00006fc2      e8590e0000     call sym.xrealloc
0x00006fc7      660f6f05c1a0.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x00006fcf      4889c3         mov rbx, rax
0x00006fd2      488905a7a020.  mov qword [obj.slotvec], rax            ; [0x211080:8]=0x211090 obj.slotvec0
0x00006fd9      0f1100         movups xmmword [rax], xmm0
0x00006fdc      e9dcfeffff     jmp 0x6ebd
0x00006fe1      e85ab4ffff     call sym.imp.abort
0x00006fe6      e825100000     call sym.xalloc_die
0x00006feb      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00006ff0      4154           push r12
0x00006ff2      55             push rbp
0x00006ff3      53             push rbx
0x00006ff4      4889fb         mov rbx, rdi
0x00006ff7      e854b4ffff     call sym.imp.__errno_location
0x00006ffc      448b20         mov r12d, dword [rax]
0x00006fff      4889c5         mov rbp, rax
0x00007002      488d0517a320.  lea rax, obj.default_quoting_options    ; 0x211320
0x00007009      4885db         test rbx, rbx
0x0000700c      be38000000     mov esi, 0x38                           ; '8'
0x00007011      480f44d8       cmove rbx, rax
0x00007015      4889df         mov rdi, rbx
0x00007018      e8a30f0000     call sym.xmemdup
0x0000701d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00007021      5b             pop rbx
0x00007022      5d             pop rbp
0x00007023      415c           pop r12
0x00007025      c3             ret
0x00007026      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00007030      488d05e9a220.  lea rax, obj.default_quoting_options    ; 0x211320
0x00007037      4885ff         test rdi, rdi
0x0000703a      480f44f8       cmove rdi, rax
0x0000703e      8b07           mov eax, dword [rdi]
0x00007040      c3             ret
0x00007041      0f1f440000     nop dword [rax + rax]
0x00007046      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00007050      488d05c9a220.  lea rax, obj.default_quoting_options    ; 0x211320
0x00007057      4885ff         test rdi, rdi
0x0000705a      480f44f8       cmove rdi, rax
0x0000705e      8937           mov dword [rdi], esi
0x00007060      c3             ret
0x00007061      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00007066      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00007070      488d05a9a220.  lea rax, obj.default_quoting_options    ; 0x211320
0x00007077      4885ff         test rdi, rdi
0x0000707a      89f1           mov ecx, esi
0x0000707c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00007080      89f0           mov eax, esi
0x00007082      83e11f         and ecx, 0x1f
0x00007085      c0e805         shr al, 5
0x00007088      0fb6c0         movzx eax, al
0x0000708b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00007090      8b37           mov esi, dword [rdi]
0x00007092      89f0           mov eax, esi
0x00007094      d3e8           shr eax, cl
0x00007096      31c2           xor edx, eax
0x00007098      83e001         and eax, 1
0x0000709b      83e201         and edx, 1
0x0000709e      d3e2           shl edx, cl
0x000070a0      31f2           xor edx, esi
0x000070a2      8917           mov dword [rdi], edx
0x000070a4      c3             ret
0x000070a5      90             nop
0x000070a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x000070b0      488d0569a220.  lea rax, obj.default_quoting_options    ; 0x211320
0x000070b7      4885ff         test rdi, rdi
0x000070ba      480f44f8       cmove rdi, rax
0x000070be      8b4704         mov eax, dword [rdi + 4]
0x000070c1      897704         mov dword [rdi + 4], esi
0x000070c4      c3             ret
0x000070c5      90             nop
0x000070c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x000070d0      488d0549a220.  lea rax, obj.default_quoting_options    ; 0x211320
0x000070d7      4885ff         test rdi, rdi
0x000070da      480f44f8       cmove rdi, rax
0x000070de      4885f6         test rsi, rsi
0x000070e1      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x000070e7      740e           je 0x70f7
0x000070e9      4885d2         test rdx, rdx
0x000070ec      7409           je 0x70f7
0x000070ee      48897728       mov qword [rdi + 0x28], rsi
0x000070f2      48895730       mov qword [rdi + 0x30], rdx
0x000070f6      c3             ret
0x000070f7      4883ec08       sub rsp, 8
0x000070fb      e840b3ffff     call sym.imp.abort
;-- quotearg_buffer:
0x00007100      4157           push r15
0x00007102      4156           push r14
0x00007104      488d0515a220.  lea rax, obj.default_quoting_options    ; 0x211320
0x0000710b      4155           push r13
0x0000710d      4154           push r12
0x0000710f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00007112      55             push rbp
0x00007113      53             push rbx
0x00007114      4c89c3         mov rbx, r8
0x00007117      4989f6         mov r14, rsi
0x0000711a      4989d7         mov r15, rdx
0x0000711d      4883ec18       sub rsp, 0x18
0x00007121      4d85c0         test r8, r8
0x00007124      480f44d8       cmove rbx, rax
0x00007128      48894c2408     mov qword [rsp + 8], rcx
0x0000712d      e81eb3ffff     call sym.imp.__errno_location
0x00007132      448b20         mov r12d, dword [rax]
0x00007135      4889c5         mov rbp, rax
0x00007138      488d4308       lea rax, [rbx + 8]
0x0000713c      4883ec08       sub rsp, 8
0x00007140      448b4b04       mov r9d, dword [rbx + 4]
0x00007144      ff7330         push qword [rbx + 0x30]
0x00007147      448b03         mov r8d, dword [rbx]
0x0000714a      ff7328         push qword [rbx + 0x28]
0x0000714d      4c89fa         mov rdx, r15
0x00007150      50             push rax
0x00007151      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00007156      4c89f6         mov rsi, r14
0x00007159      4c89ef         mov rdi, r13
0x0000715c      e89feaffff     call sym.quotearg_buffer_restyled
0x00007161      44896500       mov dword [rbp], r12d
0x00007165      4883c438       add rsp, 0x38
0x00007169      5b             pop rbx
0x0000716a      5d             pop rbp
0x0000716b      415c           pop r12
0x0000716d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000716f      415e           pop r14
0x00007171      415f           pop r15
0x00007173      c3             ret
0x00007174      6690           nop
0x00007176      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00007180      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00007182      4156           push r14
0x00007184      488d0595a120.  lea rax, obj.default_quoting_options    ; 0x211320
0x0000718b      4155           push r13
0x0000718d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x0000718f      4989d4         mov r12, rdx
0x00007192      55             push rbp
0x00007193      53             push rbx
0x00007194      4889cb         mov rbx, rcx
0x00007197      4989fe         mov r14, rdi
0x0000719a      4989f7         mov r15, rsi
0x0000719d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x000071a1      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x000071a4      480f44d8       cmove rbx, rax
0x000071a8      31ed           xor ebp, ebp
0x000071aa      e8a1b2ffff     call sym.imp.__errno_location
0x000071af      4d85e4         test r12, r12
0x000071b2      4989c5         mov r13, rax
0x000071b5      8b00           mov eax, dword [rax]
0x000071b7      400f94c5       sete bpl
0x000071bb      0b6b04         or ebp, dword [rbx + 4]
0x000071be      4c8d5308       lea r10, [rbx + 8]
0x000071c2      4883ec08       sub rsp, 8
0x000071c6      448b03         mov r8d, dword [rbx]
0x000071c9      4c89f9         mov rcx, r15
0x000071cc      89442414       mov dword [rsp + 0x14], eax
0x000071d0      ff7330         push qword [rbx + 0x30]
0x000071d3      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x000071d6      ff7328         push qword [rbx + 0x28]
0x000071d9      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x000071db      31f6           xor esi, esi
0x000071dd      4189e9         mov r9d, ebp
0x000071e0      31ff           xor edi, edi
0x000071e2      4c89542440     mov qword [rsp + 0x40], r10
0x000071e7      e814eaffff     call sym.quotearg_buffer_restyled
0x000071ec      488d7001       lea rsi, [rax + 1]
0x000071f0      4889442448     mov qword [rsp + 0x48], rax
0x000071f5      4883c420       add rsp, 0x20
0x000071f9      4889f7         mov rdi, rsi
0x000071fc      4889742418     mov qword [rsp + 0x18], rsi
0x00007201      e8ba0b0000     call sym.xmalloc
0x00007206      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x0000720b      4883ec08       sub rsp, 8
0x0000720f      ff7330         push qword [rbx + 0x30]
0x00007212      ff7328         push qword [rbx + 0x28]
0x00007215      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000721a      4189e9         mov r9d, ebp
0x0000721d      448b03         mov r8d, dword [rbx]
0x00007220      4c89f9         mov rcx, r15
0x00007223      4c89f2         mov rdx, r14
0x00007226      4889c7         mov rdi, rax
0x00007229      4152           push r10
0x0000722b      488b742438     mov rsi, qword [rsp + 0x38]
0x00007230      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00007235      8b44242c       mov eax, dword [rsp + 0x2c]
0x00007239      4883c420       add rsp, 0x20
0x0000723d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00007240      41894500       mov dword [r13], eax
0x00007244      7409           je 0x724f
0x00007246      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000724b      4d891c24       mov qword [r12], r11
0x0000724f      488b442410     mov rax, qword [rsp + 0x10]
0x00007254      4883c438       add rsp, 0x38
0x00007258      5b             pop rbx
0x00007259      5d             pop rbp
0x0000725a      415c           pop r12
0x0000725c      415d           pop r13
0x0000725e      415e           pop r14
0x00007260      415f           pop r15
0x00007262      c3             ret
0x00007263      0f1f00         nop dword [rax]
0x00007266      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00007270      4889d1         mov rcx, rdx
0x00007273      31d2           xor edx, edx
0x00007275      e906ffffff     jmp sym.quotearg_alloc_mem
0x0000727a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00007280      8b05f29d2000   mov eax, dword [obj.nslots]             ; [0x211078:4]=1
0x00007286      4154           push r12
0x00007288      4c8b25f19d20.  mov r12, qword [obj.slotvec]            ; [0x211080:8]=0x211090 obj.slotvec0
0x0000728f      55             push rbp
0x00007290      53             push rbx
0x00007291      83f801         cmp eax, 1
0x00007294      7e2b           jle 0x72c1                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00007296      83e802         sub eax, 2
0x00007299      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x0000729e      48c1e004       shl rax, 4
0x000072a2      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x000072a7      660f1f840000.  nop word [rax + rax]
0x000072b0      488b3b         mov rdi, qword [rbx]
0x000072b3      4883c310       add rbx, 0x10
0x000072b7      e874b1ffff     call sym.imp.free
0x000072bc      4839eb         cmp rbx, rbp
0x000072bf      75ef           jne 0x72b0
0x000072c1      498b7c2408     mov rdi, qword [r12 + 8]
0x000072c6      488d1d539f20.  lea rbx, obj.slot0                      ; 0x211220
0x000072cd      4839df         cmp rdi, rbx
0x000072d0      7417           je 0x72e9
0x000072d2      e859b1ffff     call sym.imp.free
0x000072d7      48c705ae9d20.  mov qword [obj.slotvec0], 0x100         ; [0x211090:8]=256
0x000072e2      48891daf9d20.  mov qword [0x00211098], rbx             ; [0x211098:8]=0x211220 obj.slot0
0x000072e9      488d1da09d20.  lea rbx, obj.slotvec0                   ; 0x211090
0x000072f0      4939dc         cmp r12, rbx
0x000072f3      740f           je 0x7304
0x000072f5      4c89e7         mov rdi, r12
0x000072f8      e833b1ffff     call sym.imp.free
0x000072fd      48891d7c9d20.  mov qword [obj.slotvec], rbx            ; [0x211080:8]=0x211090 obj.slotvec0
0x00007304      5b             pop rbx
0x00007305      c705699d2000.  mov dword [obj.nslots], 1               ; [0x211078:4]=1
0x0000730f      5d             pop rbp
0x00007310      415c           pop r12
0x00007312      c3             ret
0x00007313      0f1f00         nop dword [rax]
0x00007316      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00007320      488d0df99f20.  lea rcx, obj.default_quoting_options    ; 0x211320
0x00007327      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000732e      e90dfbffff     jmp sym.quotearg_n_options
0x00007333      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00007336      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00007340      488d0dd99f20.  lea rcx, obj.default_quoting_options    ; 0x211320
0x00007347      e9f4faffff     jmp sym.quotearg_n_options
0x0000734c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00007350      488d0dc99f20.  lea rcx, obj.default_quoting_options    ; 0x211320
0x00007357      4889fe         mov rsi, rdi
0x0000735a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00007361      31ff           xor edi, edi
0x00007363      e9d8faffff     jmp sym.quotearg_n_options
0x00007368      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00007370      488d0da99f20.  lea rcx, obj.default_quoting_options    ; 0x211320
0x00007377      4889f2         mov rdx, rsi
0x0000737a      4889fe         mov rsi, rdi
0x0000737d      31ff           xor edi, edi
0x0000737f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00007384      6690           nop
0x00007386      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00007390      4883ec48       sub rsp, 0x48
0x00007394      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00007397      64488b142528.  mov rdx, qword fs:[0x28]
0x000073a0      4889542438     mov qword [rsp + 0x38], rdx
0x000073a5      31d2           xor edx, edx
0x000073a7      83fe0a         cmp esi, 0xa
0x000073aa      7468           je 0x7414
0x000073ac      893424         mov dword [rsp], esi
0x000073af      4889e1         mov rcx, rsp
0x000073b2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000073b9      4889c6         mov rsi, rax
0x000073bc      48c744240400.  mov qword [rsp + 4], 0
0x000073c5      48c744240c00.  mov qword [rsp + 0xc], 0
0x000073ce      48c744241400.  mov qword [rsp + 0x14], 0
0x000073d7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000073e0      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x000073e9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000073f2      c74424340000.  mov dword [rsp + 0x34], 0
0x000073fa      e841faffff     call sym.quotearg_n_options
0x000073ff      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00007404      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000740d      750a           jne 0x7419                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x0000740f      4883c448       add rsp, 0x48
0x00007413      c3             ret
0x00007414      e827b0ffff     call sym.imp.abort
0x00007419      e802b1ffff     call sym.imp.__stack_chk_fail
0x0000741e      6690           nop
;-- quotearg_n_style_mem:
0x00007420      4883ec48       sub rsp, 0x48
0x00007424      4889d0         mov rax, rdx
0x00007427      4889ca         mov rdx, rcx
0x0000742a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00007433      48894c2438     mov qword [rsp + 0x38], rcx
0x00007438      31c9           xor ecx, ecx
0x0000743a      83fe0a         cmp esi, 0xa
0x0000743d      7461           je 0x74a0
0x0000743f      893424         mov dword [rsp], esi
0x00007442      4889e1         mov rcx, rsp
0x00007445      4889c6         mov rsi, rax
0x00007448      48c744240400.  mov qword [rsp + 4], 0
0x00007451      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000745a      48c744241400.  mov qword [rsp + 0x14], 0
0x00007463      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0000746c      48c744242400.  mov qword [rsp + 0x24], 0
0x00007475      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000747e      c74424340000.  mov dword [rsp + 0x34], 0
0x00007486      e8b5f9ffff     call sym.quotearg_n_options
0x0000748b      488b542438     mov rdx, qword [rsp + 0x38]
0x00007490      644833142528.  xor rdx, qword fs:[0x28]
0x00007499      750a           jne 0x74a5
0x0000749b      4883c448       add rsp, 0x48
0x0000749f      c3             ret
0x000074a0      e89bafffff     call sym.imp.abort
0x000074a5      e876b0ffff     call sym.imp.__stack_chk_fail
0x000074aa      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x000074b0      4889f2         mov rdx, rsi
0x000074b3      89fe           mov esi, edi
0x000074b5      31ff           xor edi, edi
0x000074b7      e9d4feffff     jmp sym.quotearg_n_style
0x000074bc      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x000074c0      4889d1         mov rcx, rdx
0x000074c3      4889f2         mov rdx, rsi
0x000074c6      89fe           mov esi, edi
0x000074c8      31ff           xor edi, edi
0x000074ca      e951ffffff     jmp sym.quotearg_n_style_mem
0x000074cf      90             nop
;-- quotearg_char_mem:
0x000074d0      4883ec48       sub rsp, 0x48
0x000074d4      89d1           mov ecx, edx
0x000074d6      64488b042528.  mov rax, qword fs:[0x28]
0x000074df      4889442438     mov qword [rsp + 0x38], rax
0x000074e4      31c0           xor eax, eax
0x000074e6      488b05639e20.  mov rax, qword [0x00211350]             ; [0x211350:8]=0
0x000074ed      4989e0         mov r8, rsp
0x000074f0      83e11f         and ecx, 0x1f
0x000074f3      660f6f05259e.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x000074fb      4889442430     mov qword [rsp + 0x30], rax
0x00007500      89d0           mov eax, edx
0x00007502      0f290424       movaps xmmword [rsp], xmm0
0x00007506      c0e805         shr al, 5
0x00007509      0fb6c0         movzx eax, al
0x0000750c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00007511      660f6f05179e.  movdqa xmm0, xmmword [0x00211330]
0x00007519      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000751e      660f6f051a9e.  movdqa xmm0, xmmword [0x00211340]
0x00007526      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000752b      418b11         mov edx, dword [r9]
0x0000752e      89d0           mov eax, edx
0x00007530      d3e8           shr eax, cl
0x00007532      f7d0           not eax
0x00007534      83e001         and eax, 1
0x00007537      d3e0           shl eax, cl
0x00007539      4c89c1         mov rcx, r8
0x0000753c      31d0           xor eax, edx
0x0000753e      4889f2         mov rdx, rsi
0x00007541      4889fe         mov rsi, rdi
0x00007544      418901         mov dword [r9], eax
0x00007547      31ff           xor edi, edi
0x00007549      e8f2f8ffff     call sym.quotearg_n_options
0x0000754e      488b742438     mov rsi, qword [rsp + 0x38]
0x00007553      644833342528.  xor rsi, qword fs:[0x28]
0x0000755c      7505           jne 0x7563
0x0000755e      4883c448       add rsp, 0x48
0x00007562      c3             ret
0x00007563      e8b8afffff     call sym.imp.__stack_chk_fail
0x00007568      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00007570      400fbed6       movsx edx, sil
0x00007574      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000757b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00007580      ba3a000000     mov edx, 0x3a                           ; ':'
0x00007585      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000758c      e93fffffff     jmp sym.quotearg_char_mem
0x00007591      0f1f440000     nop dword [rax + rax]
0x00007596      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x000075a0      ba3a000000     mov edx, 0x3a                           ; ':'
0x000075a5      e926ffffff     jmp sym.quotearg_char_mem
0x000075aa      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x000075b0      4883ec48       sub rsp, 0x48
0x000075b4      4889d0         mov rax, rdx
0x000075b7      64488b142528.  mov rdx, qword fs:[0x28]
0x000075c0      4889542438     mov qword [rsp + 0x38], rdx
0x000075c5      31d2           xor edx, edx
0x000075c7      83fe0a         cmp esi, 0xa
0x000075ca      7468           je 0x7634
0x000075cc      893424         mov dword [rsp], esi
0x000075cf      4889e1         mov rcx, rsp
0x000075d2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000075d9      4889c6         mov rsi, rax
0x000075dc      48c744240400.  mov qword [rsp + 4], 0
0x000075e5      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x000075ee      48c744241400.  mov qword [rsp + 0x14], 0
0x000075f7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00007600      48c744242400.  mov qword [rsp + 0x24], 0
0x00007609      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00007612      c74424340000.  mov dword [rsp + 0x34], 0
0x0000761a      e821f8ffff     call sym.quotearg_n_options
0x0000761f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00007624      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000762d      750a           jne 0x7639
0x0000762f      4883c448       add rsp, 0x48
0x00007633      c3             ret
0x00007634      e807aeffff     call sym.imp.abort
0x00007639      e8e2aeffff     call sym.imp.__stack_chk_fail
0x0000763e      6690           nop
;-- quotearg_n_custom_mem:
0x00007640      4883ec48       sub rsp, 0x48
0x00007644      4989c9         mov r9, rcx
0x00007647      488b0d029d20.  mov rcx, qword [0x00211350]             ; [0x211350:8]=0
0x0000764e      660f6f05ca9c.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00007656      64488b042528.  mov rax, qword fs:[0x28]
0x0000765f      4889442438     mov qword [rsp + 0x38], rax
0x00007664      31c0           xor eax, eax
0x00007666      0f290424       movaps xmmword [rsp], xmm0
0x0000766a      4885f6         test rsi, rsi
0x0000766d      48894c2430     mov qword [rsp + 0x30], rcx
0x00007672      c704240a0000.  mov dword [rsp], 0xa
0x00007679      660f6f05af9c.  movdqa xmm0, xmmword [0x00211330]
0x00007681      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00007686      660f6f05b29c.  movdqa xmm0, xmmword [0x00211340]
0x0000768e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00007693      7432           je 0x76c7
0x00007695      4885d2         test rdx, rdx
0x00007698      742d           je 0x76c7
0x0000769a      4889742428     mov qword [rsp + 0x28], rsi
0x0000769f      4889542430     mov qword [rsp + 0x30], rdx
0x000076a4      4889e1         mov rcx, rsp
0x000076a7      4c89c2         mov rdx, r8
0x000076aa      4c89ce         mov rsi, r9
0x000076ad      e88ef7ffff     call sym.quotearg_n_options
0x000076b2      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000076b7      6448333c2528.  xor rdi, qword fs:[0x28]
0x000076c0      750a           jne 0x76cc
0x000076c2      4883c448       add rsp, 0x48
0x000076c6      c3             ret
0x000076c7      e874adffff     call sym.imp.abort
0x000076cc      e84faeffff     call sym.imp.__stack_chk_fail
0x000076d1      0f1f440000     nop dword [rax + rax]
0x000076d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x000076e0      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x000076e7      e954ffffff     jmp sym.quotearg_n_custom_mem
0x000076ec      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x000076f0      4889d1         mov rcx, rdx
0x000076f3      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x000076fa      4889f2         mov rdx, rsi
0x000076fd      4889fe         mov rsi, rdi
0x00007700      31ff           xor edi, edi
0x00007702      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00007707      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00007710      4989c8         mov r8, rcx
0x00007713      4889d1         mov rcx, rdx
0x00007716      4889f2         mov rdx, rsi
0x00007719      4889fe         mov rsi, rdi
0x0000771c      31ff           xor edi, edi
0x0000771e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00007723      0f1f00         nop dword [rax]
0x00007726      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00007730      488d0d099920.  lea rcx, obj.quote_quoting_options      ; 0x211040
0x00007737      e904f7ffff     jmp sym.quotearg_n_options
0x0000773c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00007740      488d0df99820.  lea rcx, obj.quote_quoting_options      ; 0x211040
0x00007747      4889f2         mov rdx, rsi
0x0000774a      4889fe         mov rsi, rdi
0x0000774d      31ff           xor edi, edi
0x0000774f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00007754      6690           nop
0x00007756      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00007760      488d0dd99820.  lea rcx, obj.quote_quoting_options      ; 0x211040
0x00007767      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000776e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00007773      0f1f00         nop dword [rax]
0x00007776      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00007780      488d0db99820.  lea rcx, obj.quote_quoting_options      ; 0x211040
0x00007787      4889fe         mov rsi, rdi
0x0000778a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00007791      31ff           xor edi, edi
0x00007793      e9a8f6ffff     jmp sym.quotearg_n_options
0x00007798      0f1f84000000.  nop dword [rax + rax]
;-- version_etc_arn:
0x000077a0      4157           push r15
0x000077a2      4156           push r14
0x000077a4      4155           push r13
0x000077a6      4154           push r12
0x000077a8      4d89cc         mov r12, r9
0x000077ab      55             push rbp
0x000077ac      53             push rbx
0x000077ad      4889fd         mov rbp, rdi
0x000077b0      4c89c3         mov rbx, r8
0x000077b3      4883ec28       sub rsp, 0x28
0x000077b7      4885f6         test rsi, rsi
0x000077ba      0f8418010000   je 0x78d8
0x000077c0      4989d0         mov r8, rdx
0x000077c3      488d151e6800.  lea rdx, [0x0000dfe8]                   ; "%s (%s) %s\n"
0x000077ca      4989c9         mov r9, rcx
0x000077cd      31c0           xor eax, eax
0x000077cf      4889f1         mov rcx, rsi
0x000077d2      be01000000     mov esi, 1
0x000077d7      e8a4afffff     call sym.imp.__fprintf_chk
0x000077dc      488d35186800.  lea rsi, [0x0000dffb]                   ; "(C)"
0x000077e3      31ff           xor edi, edi
0x000077e5      ba05000000     mov edx, 5
0x000077ea      e801adffff     call sym.imp.dcgettext
0x000077ef      488d152a6b00.  lea rdx, obj.version_etc_copyright      ; 0xe320 ; "Copyright %s %d Free Software Foundation, Inc."
0x000077f6      4889c1         mov rcx, rax
0x000077f9      41b8e3070000   mov r8d, 0x7e3
0x000077ff      be01000000     mov esi, 1
0x00007804      4889ef         mov rdi, rbp
0x00007807      31c0           xor eax, eax
0x00007809      e872afffff     call sym.imp.__fprintf_chk
0x0000780e      488d35736800.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0xe088 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00007815      31ff           xor edi, edi
0x00007817      ba05000000     mov edx, 5
0x0000781c      e8cfacffff     call sym.imp.dcgettext
0x00007821      4889ee         mov rsi, rbp
0x00007824      4889c7         mov rdi, rax
0x00007827      e8d4adffff     call sym.imp.fputs_unlocked
0x0000782c      4983fc09       cmp r12, 9
0x00007830      0f873a030000   ja 0x7b70
0x00007836      488d15a76a00.  lea rdx, [0x0000e2e4]
0x0000783d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00007841      4801d0         add rax, rdx
0x00007844      ffe0           jmp rax
0x00007846      662e0f1f8400.  nop word cs:[rax + rax]
0x00007850      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00007854      488b4310       mov rax, qword [rbx + 0x10]
0x00007858      488d35996900.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0xe1f8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x0000785f      4c8b4308       mov r8, qword [rbx + 8]
0x00007863      ba05000000     mov edx, 5
0x00007868      31ff           xor edi, edi
0x0000786a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0000786e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00007872      4c894c2410     mov qword [rsp + 0x10], r9
0x00007877      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000787b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000787f      48890424       mov qword [rsp], rax
0x00007883      4c89442408     mov qword [rsp + 8], r8
0x00007888      488b1b         mov rbx, qword [rbx]
0x0000788b      e860acffff     call sym.imp.dcgettext
0x00007890      4883ec08       sub rsp, 8
0x00007894      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00007899      4889c2         mov rdx, rax
0x0000789c      4889d9         mov rcx, rbx
0x0000789f      be01000000     mov esi, 1
0x000078a4      4889ef         mov rdi, rbp
0x000078a7      31c0           xor eax, eax
0x000078a9      4151           push r9
0x000078ab      4155           push r13
0x000078ad      4154           push r12
0x000078af      4157           push r15
0x000078b1      4156           push r14
0x000078b3      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000078b8      4c8b442438     mov r8, qword [rsp + 0x38]
0x000078bd      e8beaeffff     call sym.imp.__fprintf_chk
0x000078c2      4883c430       add rsp, 0x30
0x000078c6      4883c428       add rsp, 0x28
0x000078ca      5b             pop rbx
0x000078cb      5d             pop rbp
0x000078cc      415c           pop r12
0x000078ce      415d           pop r13
0x000078d0      415e           pop r14
0x000078d2      415f           pop r15
0x000078d4      c3             ret
0x000078d5      0f1f00         nop dword [rax]
0x000078d8      4989c8         mov r8, rcx
0x000078db      4889d1         mov rcx, rdx
0x000078de      488d150f6700.  lea rdx, str.s__s                       ; 0xdff4 ; "%s %s\n"
0x000078e5      be01000000     mov esi, 1
0x000078ea      31c0           xor eax, eax
0x000078ec      e88faeffff     call sym.imp.__fprintf_chk
0x000078f1      e9e6feffff     jmp 0x77dc
0x000078f6      662e0f1f8400.  nop word cs:[rax + rax]
0x00007900      4c8b5340       mov r10, qword [rbx + 0x40]
0x00007904      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00007908      488d35196900.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0xe228 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x0000790f      488b4310       mov rax, qword [rbx + 0x10]
0x00007913      4c8b4308       mov r8, qword [rbx + 8]
0x00007917      ba05000000     mov edx, 5
0x0000791c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00007920      4c8b6328       mov r12, qword [rbx + 0x28]
0x00007924      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00007928      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000792c      488b1b         mov rbx, qword [rbx]
0x0000792f      4c89542418     mov qword [rsp + 0x18], r10
0x00007934      4c894c2410     mov qword [rsp + 0x10], r9
0x00007939      48890424       mov qword [rsp], rax
0x0000793d      4c89442408     mov qword [rsp + 8], r8
0x00007942      31ff           xor edi, edi
0x00007944      e8a7abffff     call sym.imp.dcgettext
0x00007949      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000794e      4152           push r10
0x00007950      e93fffffff     jmp 0x7894
0x00007955      0f1f00         nop dword [rax]
0x00007958      488b1b         mov rbx, qword [rbx]
0x0000795b      488d359d6600.  lea rsi, str.Written_by__s.             ; 0xdfff ; "Written by %s.\n"
0x00007962      ba05000000     mov edx, 5
0x00007967      31ff           xor edi, edi
0x00007969      e882abffff     call sym.imp.dcgettext
0x0000796e      4883c428       add rsp, 0x28
0x00007972      4889d9         mov rcx, rbx
0x00007975      4889ef         mov rdi, rbp
0x00007978      5b             pop rbx
0x00007979      5d             pop rbp
0x0000797a      415c           pop r12
0x0000797c      415d           pop r13
0x0000797e      415e           pop r14
0x00007980      415f           pop r15
0x00007982      4889c2         mov rdx, rax
0x00007985      be01000000     mov esi, 1
0x0000798a      31c0           xor eax, eax
0x0000798c      e9efadffff     jmp sym.imp.__fprintf_chk
0x00007991      0f1f80000000.  nop dword [rax]
0x00007998      4c8b6308       mov r12, qword [rbx + 8]
0x0000799c      488d356c6600.  lea rsi, str.Written_by__s_and__s.      ; 0xe00f ; "Written by %s and %s.\n"
0x000079a3      488b1b         mov rbx, qword [rbx]
0x000079a6      ba05000000     mov edx, 5
0x000079ab      31ff           xor edi, edi
0x000079ad      e83eabffff     call sym.imp.dcgettext
0x000079b2      4883c428       add rsp, 0x28
0x000079b6      4d89e0         mov r8, r12
0x000079b9      4889d9         mov rcx, rbx
0x000079bc      4889ef         mov rdi, rbp
0x000079bf      4889c2         mov rdx, rax
0x000079c2      be01000000     mov esi, 1
0x000079c7      5b             pop rbx
0x000079c8      5d             pop rbp
0x000079c9      415c           pop r12
0x000079cb      415d           pop r13
0x000079cd      415e           pop r14
0x000079cf      415f           pop r15
0x000079d1      31c0           xor eax, eax
0x000079d3      e9a8adffff     jmp sym.imp.__fprintf_chk
0x000079d8      0f1f84000000.  nop dword [rax + rax]
0x000079e0      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000079e4      4c8b6308       mov r12, qword [rbx + 8]
0x000079e8      488d35376600.  lea rsi, str.Written_by__s___s__and__s. ; 0xe026 ; "Written by %s, %s, and %s.\n"
0x000079ef      488b1b         mov rbx, qword [rbx]
0x000079f2      ba05000000     mov edx, 5
0x000079f7      31ff           xor edi, edi
0x000079f9      e8f2aaffff     call sym.imp.dcgettext
0x000079fe      4883c428       add rsp, 0x28
0x00007a02      4d89e9         mov r9, r13
0x00007a05      4d89e0         mov r8, r12
0x00007a08      4889d9         mov rcx, rbx
0x00007a0b      4889ef         mov rdi, rbp
0x00007a0e      4889c2         mov rdx, rax
0x00007a11      5b             pop rbx
0x00007a12      5d             pop rbp
0x00007a13      415c           pop r12
0x00007a15      415d           pop r13
0x00007a17      415e           pop r14
0x00007a19      415f           pop r15
0x00007a1b      be01000000     mov esi, 1
0x00007a20      31c0           xor eax, eax
0x00007a22      e959adffff     jmp sym.imp.__fprintf_chk
0x00007a27      660f1f840000.  nop word [rax + rax]
0x00007a30      488d35216700.  lea rsi, str.Written_by__s___s___s___and__s. ; 0xe158 ; "Written by %s, %s, %s,\nand %s.\n"
0x00007a37      ba05000000     mov edx, 5
0x00007a3c      31ff           xor edi, edi
0x00007a3e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00007a42      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00007a46      4c8b6308       mov r12, qword [rbx + 8]
0x00007a4a      488b1b         mov rbx, qword [rbx]
0x00007a4d      e89eaaffff     call sym.imp.dcgettext
0x00007a52      4883ec08       sub rsp, 8
0x00007a56      4156           push r14
0x00007a58      4889c2         mov rdx, rax
0x00007a5b      4d89e9         mov r9, r13
0x00007a5e      4d89e0         mov r8, r12
0x00007a61      4889d9         mov rcx, rbx
0x00007a64      4889ef         mov rdi, rbp
0x00007a67      be01000000     mov esi, 1
0x00007a6c      31c0           xor eax, eax
0x00007a6e      e80dadffff     call sym.imp.__fprintf_chk
0x00007a73      58             pop rax
0x00007a74      5a             pop rdx
0x00007a75      4883c428       add rsp, 0x28
0x00007a79      5b             pop rbx
0x00007a7a      5d             pop rbp
0x00007a7b      415c           pop r12
0x00007a7d      415d           pop r13
0x00007a7f      415e           pop r14
0x00007a81      415f           pop r15
0x00007a83      c3             ret
0x00007a84      0f1f4000       nop dword [rax]
0x00007a88      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00007a8c      488d35e56600.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0xe178 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00007a93      ba05000000     mov edx, 5
0x00007a98      31ff           xor edi, edi
0x00007a9a      4c8b7318       mov r14, qword [rbx + 0x18]
0x00007a9e      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00007aa2      4c8b6308       mov r12, qword [rbx + 8]
0x00007aa6      488b1b         mov rbx, qword [rbx]
0x00007aa9      e842aaffff     call sym.imp.dcgettext
0x00007aae      4157           push r15
0x00007ab0      eba4           jmp 0x7a56
0x00007ab2      660f1f440000   nop word [rax + rax]
0x00007ab8      4c8b4308       mov r8, qword [rbx + 8]
0x00007abc      4c8b6328       mov r12, qword [rbx + 0x28]
0x00007ac0      488d35d96600.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0xe1a0 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00007ac7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00007acb      4c8b7318       mov r14, qword [rbx + 0x18]
0x00007acf      ba05000000     mov edx, 5
0x00007ad4      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00007ad8      31ff           xor edi, edi
0x00007ada      488b1b         mov rbx, qword [rbx]
0x00007add      4c890424       mov qword [rsp], r8
0x00007ae1      e80aaaffff     call sym.imp.dcgettext
0x00007ae6      4883ec08       sub rsp, 8
0x00007aea      4d89e9         mov r9, r13
0x00007aed      4154           push r12
0x00007aef      4157           push r15
0x00007af1      4156           push r14
0x00007af3      4c8b442420     mov r8, qword [rsp + 0x20]
0x00007af8      4889d9         mov rcx, rbx
0x00007afb      4889c2         mov rdx, rax
0x00007afe      4889ef         mov rdi, rbp
0x00007b01      be01000000     mov esi, 1
0x00007b06      31c0           xor eax, eax
0x00007b08      e873acffff     call sym.imp.__fprintf_chk
0x00007b0d      4883c420       add rsp, 0x20
0x00007b11      4883c428       add rsp, 0x28
0x00007b15      5b             pop rbx
0x00007b16      5d             pop rbp
0x00007b17      415c           pop r12
0x00007b19      415d           pop r13
0x00007b1b      415e           pop r14
0x00007b1d      415f           pop r15
0x00007b1f      c3             ret
0x00007b20      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00007b24      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00007b28      488d35996600.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0xe1c8 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x00007b2f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00007b33      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00007b37      ba05000000     mov edx, 5
0x00007b3c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00007b40      4c8b4308       mov r8, qword [rbx + 8]
0x00007b44      31ff           xor edi, edi
0x00007b46      4c894c2408     mov qword [rsp + 8], r9
0x00007b4b      488b1b         mov rbx, qword [rbx]
0x00007b4e      4c890424       mov qword [rsp], r8
0x00007b52      e899a9ffff     call sym.imp.dcgettext
0x00007b57      4155           push r13
0x00007b59      4154           push r12
0x00007b5b      4157           push r15
0x00007b5d      4156           push r14
0x00007b5f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00007b64      eb8d           jmp 0x7af3
0x00007b66      662e0f1f8400.  nop word cs:[rax + rax]
0x00007b70      4c8b5340       mov r10, qword [rbx + 0x40]
0x00007b74      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00007b78      ba05000000     mov edx, 5
0x00007b7d      488b4310       mov rax, qword [rbx + 0x10]
0x00007b81      4c8b4308       mov r8, qword [rbx + 8]
0x00007b85      488d35d46600.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0xe260 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x00007b8c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00007b90      4c8b6328       mov r12, qword [rbx + 0x28]
0x00007b94      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00007b98      4c8b7318       mov r14, qword [rbx + 0x18]
0x00007b9c      4c89542418     mov qword [rsp + 0x18], r10
0x00007ba1      4c894c2410     mov qword [rsp + 0x10], r9
0x00007ba6      48890424       mov qword [rsp], rax
0x00007baa      4c89442408     mov qword [rsp + 8], r8
0x00007baf      488b1b         mov rbx, qword [rbx]
0x00007bb2      e98bfdffff     jmp 0x7942
0x00007bb7      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00007bc0      4531c9         xor r9d, r9d
0x00007bc3      49833800       cmp qword [r8], 0
0x00007bc7      7412           je 0x7bdb
0x00007bc9      0f1f80000000.  nop dword [rax]
0x00007bd0      4983c101       add r9, 1
0x00007bd4      4b833cc800     cmp qword [r8 + r9*8], 0
0x00007bd9      75f5           jne 0x7bd0
0x00007bdb      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00007be0      4883ec68       sub rsp, 0x68
0x00007be4      4d89c2         mov r10, r8
0x00007be7      4531c9         xor r9d, r9d
0x00007bea      64488b042528.  mov rax, qword fs:[0x28]
0x00007bf3      4889442458     mov qword [rsp + 0x58], rax
0x00007bf8      31c0           xor eax, eax
0x00007bfa      4989e0         mov r8, rsp
0x00007bfd      0f1f00         nop dword [rax]
0x00007c00      418b02         mov eax, dword [r10]
0x00007c03      83f82f         cmp eax, 0x2f
0x00007c06      7742           ja 0x7c4a
0x00007c08      4189c3         mov r11d, eax
0x00007c0b      4d035a10       add r11, qword [r10 + 0x10]
0x00007c0f      83c008         add eax, 8
0x00007c12      418902         mov dword [r10], eax
0x00007c15      498b03         mov rax, qword [r11]
0x00007c18      4885c0         test rax, rax
0x00007c1b      4b8904c8       mov qword [r8 + r9*8], rax
0x00007c1f      740a           je 0x7c2b
0x00007c21      4983c101       add r9, 1
0x00007c25      4983f90a       cmp r9, 0xa
0x00007c29      75d5           jne 0x7c00
0x00007c2b      e870fbffff     call sym.version_etc_arn
0x00007c30      488b442458     mov rax, qword [rsp + 0x58]
0x00007c35      644833042528.  xor rax, qword fs:[0x28]
0x00007c3e      7505           jne 0x7c45
0x00007c40      4883c468       add rsp, 0x68
0x00007c44      c3             ret
0x00007c45      e8d6a8ffff     call sym.imp.__stack_chk_fail
0x00007c4a      4d8b5a08       mov r11, qword [r10 + 8]
0x00007c4e      498d4308       lea rax, [r11 + 8]
0x00007c52      49894208       mov qword [r10 + 8], rax
0x00007c56      ebbd           jmp 0x7c15
0x00007c58      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00007c60      55             push rbp
0x00007c61      53             push rbx
0x00007c62      41ba20000000   mov r10d, 0x20                          ; "@"
0x00007c68      4531db         xor r11d, r11d
0x00007c6b      4881ecb80000.  sub rsp, 0xb8
0x00007c72      64488b042528.  mov rax, qword fs:[0x28]
0x00007c7b      4889442478     mov qword [rsp + 0x78], rax
0x00007c80      31c0           xor eax, eax
0x00007c82      488d8424d000.  lea rax, [rsp + 0xd0]
0x00007c8a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00007c92      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x00007c9a      4c8d442420     lea r8, [rsp + 0x20]
0x00007c9f      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00007ca7      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x00007caf      4889442410     mov qword [rsp + 0x10], rax
0x00007cb4      488d84248000.  lea rax, [rsp + 0x80]
0x00007cbc      4531c9         xor r9d, r9d
0x00007cbf      4889442418     mov qword [rsp + 0x18], rax
0x00007cc4      4889c5         mov rbp, rax
0x00007cc7      660f1f840000.  nop word [rax + rax]
0x00007cd0      4183fa2f       cmp r10d, 0x2f
0x00007cd4      7756           ja 0x7d2c
0x00007cd6      4489d0         mov eax, r10d
0x00007cd9      41bb01000000   mov r11d, 1
0x00007cdf      4183c208       add r10d, 8
0x00007ce3      4801e8         add rax, rbp
0x00007ce6      488b00         mov rax, qword [rax]
0x00007ce9      4885c0         test rax, rax
0x00007cec      4b8904c8       mov qword [r8 + r9*8], rax
0x00007cf0      740a           je 0x7cfc
0x00007cf2      4983c101       add r9, 1
0x00007cf6      4983f90a       cmp r9, 0xa
0x00007cfa      75d4           jne 0x7cd0
0x00007cfc      4584db         test r11b, r11b
0x00007cff      7524           jne 0x7d25
0x00007d01      e89afaffff     call sym.version_etc_arn
0x00007d06      488b442478     mov rax, qword [rsp + 0x78]
0x00007d0b      644833042528.  xor rax, qword fs:[0x28]
0x00007d14      750a           jne 0x7d20
0x00007d16      4881c4b80000.  add rsp, 0xb8
0x00007d1d      5b             pop rbx
0x00007d1e      5d             pop rbp
0x00007d1f      c3             ret
0x00007d20      e8fba7ffff     call sym.imp.__stack_chk_fail
0x00007d25      4489542408     mov dword [rsp + 8], r10d
0x00007d2a      ebd5           jmp 0x7d01
0x00007d2c      4889d8         mov rax, rbx
0x00007d2f      4883c308       add rbx, 8
0x00007d33      ebb1           jmp 0x7ce6
0x00007d35      90             nop
0x00007d36      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00007d40      53             push rbx
0x00007d41      488d35fa6200.  lea rsi, str.Report_bugs_to:__s         ; 0xe042 ; "\nReport bugs to: %s\n"
0x00007d48      ba05000000     mov edx, 5
0x00007d4d      31ff           xor edi, edi
0x00007d4f      e89ca7ffff     call sym.imp.dcgettext
0x00007d54      488d15fc6200.  lea rdx, str.bug_coreutils_gnu.org      ; 0xe057 ; "bug-coreutils@gnu.org"
0x00007d5b      4889c6         mov rsi, rax
0x00007d5e      bf01000000     mov edi, 1
0x00007d63      31c0           xor eax, eax
0x00007d65      e866a9ffff     call sym.imp.__printf_chk
0x00007d6a      488d35fc6200.  lea rsi, str.s_home_page:___s           ; 0xe06d ; "%s home page: <%s>\n"
0x00007d71      ba05000000     mov edx, 5
0x00007d76      31ff           xor edi, edi
0x00007d78      e873a7ffff     call sym.imp.dcgettext
0x00007d7d      488d0d845b00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0xd908 ; "https://www.gnu.org/software/coreutils/"
0x00007d84      488d15e53600.  lea rdx, str.GNU_coreutils              ; 0xb470 ; "GNU coreutils"
0x00007d8b      4889c6         mov rsi, rax
0x00007d8e      bf01000000     mov edi, 1
0x00007d93      31c0           xor eax, eax
0x00007d95      e836a9ffff     call sym.imp.__printf_chk
0x00007d9a      488b1d079320.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110a8:8]=0
0x00007da1      488d35f86400.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0xe2a0 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00007da8      31ff           xor edi, edi
0x00007daa      ba05000000     mov edx, 5
0x00007daf      e83ca7ffff     call sym.imp.dcgettext
0x00007db4      4889de         mov rsi, rbx
0x00007db7      4889c7         mov rdi, rax
0x00007dba      5b             pop rbx
0x00007dbb      e940a8ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00007dc0      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00007dc1      4889fb         mov rbx, rdi
0x00007dc4      e897a8ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00007dc9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x00007dcc      7505           jne 0x7dd3
0x00007dce      4885db         test rbx, rbx
0x00007dd1      7502           jne 0x7dd5
0x00007dd3      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00007dd4      c3             ret
0x00007dd5      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x00007dda      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00007de0      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00007de3      48f7e6         mul rsi
0x00007de6      4889c7         mov rdi, rax
0x00007de9      0f90c0         seto al
0x00007dec      4885ff         test rdi, rdi
0x00007def      780a           js 0x7dfb
0x00007df1      0fb6c0         movzx eax, al
0x00007df4      4885c0         test rax, rax
0x00007df7      7502           jne 0x7dfb
0x00007df9      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x00007dfb      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x00007dff      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00007e04      6690           nop
0x00007e06      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00007e10      ebae           jmp sym.xmalloc
0x00007e12      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00007e16      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00007e20      4885f6         test rsi, rsi
0x00007e23      53             push rbx
0x00007e24      4889f3         mov rbx, rsi
0x00007e27      7505           jne 0x7e2e
0x00007e29      4885ff         test rdi, rdi
0x00007e2c      751a           jne 0x7e48
0x00007e2e      4889de         mov rsi, rbx
0x00007e31      e86aa8ffff     call sym.imp.realloc
0x00007e36      4885c0         test rax, rax
0x00007e39      7505           jne 0x7e40
0x00007e3b      4885db         test rbx, rbx
0x00007e3e      7511           jne 0x7e51                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00007e40      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00007e41      c3             ret
0x00007e42      660f1f440000   nop word [rax + rax]
0x00007e48      e8e3a5ffff     call sym.imp.free
0x00007e4d      31c0           xor eax, eax
0x00007e4f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00007e50      c3             ret
0x00007e51      e8ba010000     call sym.xalloc_die
0x00007e56      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00007e60      4889f0         mov rax, rsi
0x00007e63      48f7e2         mul rdx
0x00007e66      4889c6         mov rsi, rax
0x00007e69      0f90c0         seto al
0x00007e6c      4885f6         test rsi, rsi
0x00007e6f      780a           js 0x7e7b
0x00007e71      0fb6c0         movzx eax, al
0x00007e74      4885c0         test rax, rax
0x00007e77      7502           jne 0x7e7b
0x00007e79      eba5           jmp sym.xrealloc
0x00007e7b      4883ec08       sub rsp, 8
0x00007e7f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00007e84      6690           nop
0x00007e86      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00007e90      4885ff         test rdi, rdi
0x00007e93      4989d1         mov r9, rdx
0x00007e96      488b0e         mov rcx, qword [rsi]
0x00007e99      7435           je 0x7ed0
0x00007e9b      31d2           xor edx, edx
0x00007e9d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00007ea7      49f7f1         div r9
0x00007eaa      4839c8         cmp rax, rcx
0x00007ead      763c           jbe 0x7eeb
0x00007eaf      4889c8         mov rax, rcx
0x00007eb2      48d1e8         shr rax, 1
0x00007eb5      488d4c0801     lea rcx, [rax + rcx + 1]
0x00007eba      48890e         mov qword [rsi], rcx
0x00007ebd      490fafc9       imul rcx, r9
0x00007ec1      4889ce         mov rsi, rcx
0x00007ec4      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00007ec9      0f1f80000000.  nop dword [rax]
0x00007ed0      4885c9         test rcx, rcx
0x00007ed3      7423           je 0x7ef8
0x00007ed5      4889c8         mov rax, rcx
0x00007ed8      49f7e1         mul r9
0x00007edb      0f90c2         seto dl
0x00007ede      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00007ee1      0fb6d2         movzx edx, dl
0x00007ee4      7805           js 0x7eeb
0x00007ee6      4885d2         test rdx, rdx
0x00007ee9      74cf           je 0x7eba
0x00007eeb      4883ec08       sub rsp, 8
0x00007eef      e81c010000     call sym.xalloc_die
0x00007ef4      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00007ef8      31d2           xor edx, edx
0x00007efa      b880000000     mov eax, 0x80
0x00007eff      4531c0         xor r8d, r8d
0x00007f02      49f7f1         div r9
0x00007f05      4885c0         test rax, rax
0x00007f08      410f94c0       sete r8b
0x00007f0c      498d0c00       lea rcx, [r8 + rax]
0x00007f10      ebc3           jmp 0x7ed5
0x00007f12      0f1f4000       nop dword [rax]
0x00007f16      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00007f20      4885ff         test rdi, rdi
0x00007f23      488b06         mov rax, qword [rsi]
0x00007f26      7428           je 0x7f50
0x00007f28      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00007f32      4839d0         cmp rax, rdx
0x00007f35      772a           ja 0x7f61
0x00007f37      4889c2         mov rdx, rax
0x00007f3a      48d1ea         shr rdx, 1
0x00007f3d      488d440201     lea rax, [rdx + rax + 1]
0x00007f42      488906         mov qword [rsi], rax
0x00007f45      4889c6         mov rsi, rax
0x00007f48      e9d3feffff     jmp sym.xrealloc
0x00007f4d      0f1f00         nop dword [rax]
0x00007f50      4885c0         test rax, rax
0x00007f53      ba80000000     mov edx, 0x80
0x00007f58      480f44c2       cmove rax, rdx
0x00007f5c      4885c0         test rax, rax
0x00007f5f      79e1           jns 0x7f42
0x00007f61      4883ec08       sub rsp, 8
0x00007f65      e8a6000000     call sym.xalloc_die
0x00007f6a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00007f70      53             push rbx
0x00007f71      4889fb         mov rbx, rdi
0x00007f74      e847feffff     call sym.xmalloc
0x00007f79      4889da         mov rdx, rbx
0x00007f7c      31f6           xor esi, esi
0x00007f7e      4889c7         mov rdi, rax
0x00007f81      5b             pop rbx
0x00007f82      e939a6ffff     jmp sym.imp.memset
0x00007f87      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00007f90      4889f8         mov rax, rdi
0x00007f93      4883ec08       sub rsp, 8
0x00007f97      48f7e6         mul rsi
0x00007f9a      0f90c2         seto dl
0x00007f9d      4885c0         test rax, rax
0x00007fa0      7817           js 0x7fb9
0x00007fa2      0fb6d2         movzx edx, dl
0x00007fa5      4885d2         test rdx, rdx
0x00007fa8      750f           jne 0x7fb9
0x00007faa      e861a6ffff     call sym.imp.calloc
0x00007faf      4885c0         test rax, rax
0x00007fb2      7405           je 0x7fb9
0x00007fb4      4883c408       add rsp, 8
0x00007fb8      c3             ret
0x00007fb9      e852000000     call sym.xalloc_die
0x00007fbe      6690           nop
;-- xmemdup:
0x00007fc0      55             push rbp
0x00007fc1      53             push rbx
0x00007fc2      4889fd         mov rbp, rdi
0x00007fc5      4889f7         mov rdi, rsi
0x00007fc8      4889f3         mov rbx, rsi
0x00007fcb      4883ec08       sub rsp, 8
0x00007fcf      e8ecfdffff     call sym.xmalloc
0x00007fd4      4883c408       add rsp, 8
0x00007fd8      4889da         mov rdx, rbx
0x00007fdb      4889ee         mov rsi, rbp
0x00007fde      5b             pop rbx
0x00007fdf      5d             pop rbp
0x00007fe0      4889c7         mov rdi, rax
0x00007fe3      e958a6ffff     jmp sym.imp.memcpy
0x00007fe8      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00007ff0      53             push rbx
0x00007ff1      4889fb         mov rbx, rdi
0x00007ff4      e817a5ffff     call sym.imp.strlen
0x00007ff9      4889df         mov rdi, rbx
0x00007ffc      488d7001       lea rsi, [rax + 1]
0x00008000      5b             pop rbx
0x00008001      ebbd           jmp sym.xmemdup
0x00008003      662e0f1f8400.  nop word cs:[rax + rax]
0x0000800d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00008010      488d35386300.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0xe34f ; "memory exhausted"
0x00008017      4883ec08       sub rsp, 8
0x0000801b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00008020      31ff           xor edi, edi
0x00008022      e8c9a4ffff     call sym.imp.dcgettext
0x00008027      8b3df38f2000   mov edi, dword [obj.exit_failure]       ; [0x211020:4]=1
0x0000802d      488d15985a00.  lea rdx, [0x0000dacc]                   ; "%s"
0x00008034      4889c1         mov rcx, rax
0x00008037      31f6           xor esi, esi
0x00008039      31c0           xor eax, eax
0x0000803b      e8a0a6ffff     call sym.imp.error
0x00008040      e8fba3ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00008045      662e0f1f8400.  nop word cs:[rax + rax]
0x0000804f      90             nop
;-- xnumtoumax:
0x00008050      4157           push r15                                ; ../coreutils-8.31/lib/xdectoint.c:38
0x00008052      4156           push r14
0x00008054      4989cf         mov r15, rcx
0x00008057      4155           push r13
0x00008059      4154           push r12
0x0000805b      4989d6         mov r14, rdx
0x0000805e      55             push rbp
0x0000805f      53             push rbx
0x00008060      89f2           mov edx, esi                            ; ../coreutils-8.31/lib/xdectoint.c:42
0x00008062      31f6           xor esi, esi
0x00008064      4989fc         mov r12, rdi                            ; ../coreutils-8.31/lib/xdectoint.c:38
0x00008067      4d89cd         mov r13, r9
0x0000806a      4883ec18       sub rsp, 0x18
0x0000806e      4889e1         mov rcx, rsp                            ; ../coreutils-8.31/lib/xdectoint.c:42
0x00008071      8b5c2450       mov ebx, dword [rsp + 0x50]             ; ../coreutils-8.31/lib/xdectoint.c:38
0x00008075      64488b042528.  mov rax, qword fs:[0x28]
0x0000807e      4889442408     mov qword [rsp + 8], rax
0x00008083      31c0           xor eax, eax
0x00008085      e8b6070000     call sym.xstrtoumax                     ; ../coreutils-8.31/lib/xdectoint.c:42
0x0000808a      85c0           test eax, eax                           ; ../coreutils-8.31/lib/xdectoint.c:44
0x0000808c      0f858e000000   jne 0x8120
0x00008092      488b2c24       mov rbp, qword [rsp]                    ; ../coreutils-8.31/lib/xdectoint.c:46
0x00008096      4c39f5         cmp rbp, r14
0x00008099      7205           jb 0x80a0
0x0000809b      4c39fd         cmp rbp, r15
0x0000809e      7654           jbe 0x80f4
0x000080a0      e8aba3ffff     call sym.imp.__errno_location
0x000080a5      4881fd000000.  cmp rbp, 0x40000000                     ; ../coreutils-8.31/lib/xdectoint.c:52
0x000080ac      4989c6         mov r14, rax
0x000080af      19c0           sbb eax, eax
0x000080b1      83e0d7         and eax, 0xffffffd7                     ; 4294967255
0x000080b4      83c04b         add eax, 0x4b
0x000080b7      418906         mov dword [r14], eax
0x000080ba      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/xdectoint.c:69
0x000080bd      e8bef6ffff     call sym.quote
0x000080c2      418b36         mov esi, dword [r14]
0x000080c5      4989c0         mov r8, rax
0x000080c8      b800000000     mov eax, 0
0x000080cd      488d15f45900.  lea rdx, str.s:__s                      ; 0xdac8 ; "%s: %s"
0x000080d4      4c89e9         mov rcx, r13
0x000080d7      83fe16         cmp esi, 0x16
0x000080da      0f44f0         cmove esi, eax
0x000080dd      85db           test ebx, ebx
0x000080df      b801000000     mov eax, 1
0x000080e4      0f44d8         cmove ebx, eax
0x000080e7      31c0           xor eax, eax
0x000080e9      89df           mov edi, ebx
0x000080eb      e8f0a5ffff     call sym.imp.error
0x000080f0      488b2c24       mov rbp, qword [rsp]
0x000080f4      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/xdectoint.c:74
0x000080f9      644833142528.  xor rdx, qword fs:[0x28]
0x00008102      4889e8         mov rax, rbp
0x00008105      7544           jne 0x814b
0x00008107      4883c418       add rsp, 0x18
0x0000810b      5b             pop rbx
0x0000810c      5d             pop rbp
0x0000810d      415c           pop r12
0x0000810f      415d           pop r13
0x00008111      415e           pop r14
0x00008113      415f           pop r15
0x00008115      c3             ret
0x00008116      662e0f1f8400.  nop word cs:[rax + rax]
0x00008120      89c5           mov ebp, eax
0x00008122      e829a3ffff     call sym.imp.__errno_location
0x00008127      83fd01         cmp ebp, 1                              ; ../coreutils-8.31/lib/xdectoint.c:61
0x0000812a      4989c6         mov r14, rax
0x0000812d      7411           je 0x8140
0x0000812f      83fd03         cmp ebp, 3                              ; ../coreutils-8.31/lib/xdectoint.c:63
0x00008132      7586           jne 0x80ba
0x00008134      c70000000000   mov dword [rax], 0                      ; ../coreutils-8.31/lib/xdectoint.c:64
0x0000813a      e97bffffff     jmp 0x80ba
0x0000813f      90             nop
0x00008140      c7004b000000   mov dword [rax], 0x4b                   ; ../coreutils-8.31/lib/xdectoint.c:62 ; 'K'
                                                                       ; [0x4b:4]=0
0x00008146      e96fffffff     jmp 0x80ba
0x0000814b      e8d0a3ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/xdectoint.c:74
;-- xdectoumax:
0x00008150      4883ec10       sub rsp, 0x10                           ; ../coreutils-8.31/lib/xdectoint.c:84
0x00008154      4151           push r9                                 ; ../coreutils-8.31/lib/xdectoint.c:85
0x00008156      4d89c1         mov r9, r8
0x00008159      4989c8         mov r8, rcx
0x0000815c      4889d1         mov rcx, rdx
0x0000815f      4889f2         mov rdx, rsi
0x00008162      be0a000000     mov esi, 0xa
0x00008167      e8e4feffff     call sym.xnumtoumax
0x0000816c      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/xdectoint.c:86
0x00008170      c3             ret
0x00008171      662e0f1f8400.  nop word cs:[rax + rax]
0x0000817b      0f1f440000     nop dword [rax + rax]
;-- xstrtol:
0x00008180      4157           push r15
0x00008182      4156           push r14
0x00008184      4155           push r13
0x00008186      4154           push r12
0x00008188      55             push rbp
0x00008189      53             push rbx
0x0000818a      4883ec28       sub rsp, 0x28
0x0000818e      64488b042528.  mov rax, qword fs:[0x28]
0x00008197      4889442418     mov qword [rsp + 0x18], rax
0x0000819c      31c0           xor eax, eax
0x0000819e      83fa24         cmp edx, 0x24
0x000081a1      0f8768060000   ja 0x880f
0x000081a7      488d442410     lea rax, [rsp + 0x10]
0x000081ac      4885f6         test rsi, rsi
0x000081af      4889f3         mov rbx, rsi
0x000081b2      4989fc         mov r12, rdi
0x000081b5      89d5           mov ebp, edx
0x000081b7      4989ce         mov r14, rcx
0x000081ba      480f44d8       cmove rbx, rax
0x000081be      4d89c7         mov r15, r8
0x000081c1      e88aa2ffff     call sym.imp.__errno_location
0x000081c6      89ea           mov edx, ebp
0x000081c8      c70000000000   mov dword [rax], 0
0x000081ce      4889de         mov rsi, rbx
0x000081d1      4c89e7         mov rdi, r12
0x000081d4      4989c5         mov r13, rax
0x000081d7      e854a4ffff     call sym.imp.strtol
0x000081dc      488b0b         mov rcx, qword [rbx]
0x000081df      4889c5         mov rbp, rax
0x000081e2      4c39e1         cmp rcx, r12
0x000081e5      7461           je 0x8248
0x000081e7      418b4500       mov eax, dword [r13]
0x000081eb      85c0           test eax, eax
0x000081ed      7541           jne 0x8230
0x000081ef      4531e4         xor r12d, r12d
0x000081f2      4d85ff         test r15, r15
0x000081f5      740d           je 0x8204
0x000081f7      440fb629       movzx r13d, byte [rcx]
0x000081fb      4584ed         test r13b, r13b
0x000081fe      0f857f000000   jne 0x8283
0x00008204      49892e         mov qword [r14], rbp
0x00008207      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000820c      6448333c2528.  xor rdi, qword fs:[0x28]
0x00008215      4489e0         mov eax, r12d
0x00008218      0f8510060000   jne 0x882e
0x0000821e      4883c428       add rsp, 0x28
0x00008222      5b             pop rbx
0x00008223      5d             pop rbp
0x00008224      415c           pop r12
0x00008226      415d           pop r13
0x00008228      415e           pop r14
0x0000822a      415f           pop r15
0x0000822c      c3             ret
0x0000822d      0f1f00         nop dword [rax]
0x00008230      83f822         cmp eax, 0x22
0x00008233      41bc04000000   mov r12d, 4
0x00008239      75cc           jne 0x8207
0x0000823b      41bc01000000   mov r12d, 1
0x00008241      ebaf           jmp 0x81f2
0x00008243      0f1f440000     nop dword [rax + rax]
0x00008248      4d85ff         test r15, r15
0x0000824b      0f848f040000   je 0x86e0
0x00008251      440fb629       movzx r13d, byte [rcx]
0x00008255      48894c2408     mov qword [rsp + 8], rcx
0x0000825a      41bc04000000   mov r12d, 4
0x00008260      4584ed         test r13b, r13b
0x00008263      74a2           je 0x8207
0x00008265      410fbef5       movsx esi, r13b
0x00008269      4c89ff         mov rdi, r15
0x0000826c      e8efa2ffff     call sym.imp.strchr
0x00008271      4885c0         test rax, rax
0x00008274      488b4c2408     mov rcx, qword [rsp + 8]
0x00008279      748c           je 0x8207
0x0000827b      bd01000000     mov ebp, 1
0x00008280      4531e4         xor r12d, r12d
0x00008283      410fbef5       movsx esi, r13b
0x00008287      4c89ff         mov rdi, r15
0x0000828a      48894c2408     mov qword [rsp + 8], rcx
0x0000828f      e8cca2ffff     call sym.imp.strchr
0x00008294      4885c0         test rax, rax
0x00008297      488b4c2408     mov rcx, qword [rsp + 8]
0x0000829c      745a           je 0x82f8
0x0000829e      418d45bb       lea eax, [r13 - 0x45]
0x000082a2      3c2f           cmp al, 0x2f
0x000082a4      7762           ja 0x8308
0x000082a6      48ba45893000.  movabs rdx, 0x814400308945
0x000082b0      480fa3c2       bt rdx, rax
0x000082b4      7352           jae 0x8308
0x000082b6      be30000000     mov esi, 0x30                           ; '0'
0x000082bb      4c89ff         mov rdi, r15
0x000082be      48894c2408     mov qword [rsp + 8], rcx
0x000082c3      e898a2ffff     call sym.imp.strchr
0x000082c8      4885c0         test rax, rax
0x000082cb      488b4c2408     mov rcx, qword [rsp + 8]
0x000082d0      7436           je 0x8308
0x000082d2      0fb64101       movzx eax, byte [rcx + 1]
0x000082d6      3c44           cmp al, 0x44
0x000082d8      740c           je 0x82e6
0x000082da      3c69           cmp al, 0x69
0x000082dc      0f84e6040000   je 0x87c8
0x000082e2      3c42           cmp al, 0x42
0x000082e4      7522           jne 0x8308
0x000082e6      bf02000000     mov edi, 2
0x000082eb      b8e8030000     mov eax, 0x3e8
0x000082f0      eb20           jmp 0x8312
0x000082f2      660f1f440000   nop word [rax + rax]
0x000082f8      49892e         mov qword [r14], rbp
0x000082fb      4183cc02       or r12d, 2
0x000082ff      e903ffffff     jmp 0x8207
0x00008304      0f1f4000       nop dword [rax]
0x00008308      bf01000000     mov edi, 1
0x0000830d      b800040000     mov eax, 0x400
0x00008312      4183ed42       sub r13d, 0x42
0x00008316      4180fd35       cmp r13b, 0x35
0x0000831a      77dc           ja 0x82f8
0x0000831c      488d35856000.  lea rsi, [0x0000e3a8]
0x00008323      450fb6ed       movzx r13d, r13b
0x00008327      4a6314ae       movsxd rdx, dword [rsi + r13*4]
0x0000832b      4801f2         add rdx, rsi
0x0000832e      ffe2           jmp rdx
0x00008330      49b800000000.  movabs r8, 0x8000000000000000
0x0000833a      4863f0         movsxd rsi, eax
0x0000833d      4c89c0         mov rax, r8
0x00008340      4899           cqo
0x00008342      48f7fe         idiv rsi
0x00008345      4839c5         cmp rbp, rax
0x00008348      4989c1         mov r9, rax
0x0000834b      0f8ca4040000   jl 0x87f5
0x00008351      49baffffffff.  movabs r10, 0x7fffffffffffffff          ; 9223372036854775807
0x0000835b      4c89d0         mov rax, r10
0x0000835e      4899           cqo
0x00008360      48f7fe         idiv rsi
0x00008363      4839c5         cmp rbp, rax
0x00008366      0f8f96040000   jg 0x8802
0x0000836c      480fafee       imul rbp, rsi
0x00008370      4939e9         cmp r9, rbp
0x00008373      0f8f7c040000   jg 0x87f5
0x00008379      4839e8         cmp rax, rbp
0x0000837c      0f8c80040000   jl 0x8802
0x00008382      480fafee       imul rbp, rsi
0x00008386      31c0           xor eax, eax
0x00008388      4109c4         or r12d, eax
0x0000838b      0f1f440000     nop dword [rax + rax]
0x00008390      4863c7         movsxd rax, edi
0x00008393      4801c1         add rcx, rax
0x00008396      4489e0         mov eax, r12d
0x00008399      83c802         or eax, 2
0x0000839c      48890b         mov qword [rbx], rcx
0x0000839f      803900         cmp byte [rcx], 0
0x000083a2      440f45e0       cmovne r12d, eax
0x000083a6      e959feffff     jmp 0x8204
0x000083ab      0f1f440000     nop dword [rax + rax]
0x000083b0      48b800000000.  movabs rax, 0xc000000000000000
0x000083ba      4839c5         cmp rbp, rax
0x000083bd      0f8c2d030000   jl 0x86f0
0x000083c3      48b8ffffffff.  movabs rax, 0x3fffffffffffffff          ; 4611686018427387903
0x000083cd      4839c5         cmp rbp, rax
0x000083d0      0f8fda030000   jg 0x87b0
0x000083d6      4801ed         add rbp, rbp
0x000083d9      ebb5           jmp 0x8390
0x000083db      0f1f440000     nop dword [rax + rax]
0x000083e0      48b800000000.  movabs rax, 0xffc0000000000000
0x000083ea      4839c5         cmp rbp, rax
0x000083ed      0f8cfd020000   jl 0x86f0
0x000083f3      48b8ffffffff.  movabs rax, 0x3fffffffffffff            ; 18014398509481983
0x000083fd      4839c5         cmp rbp, rax
0x00008400      0f8faa030000   jg 0x87b0
0x00008406      48c1e509       shl rbp, 9
0x0000840a      eb84           jmp 0x8390
0x0000840c      0f1f4000       nop dword [rax]
0x00008410      4863f0         movsxd rsi, eax
0x00008413      48b800000000.  movabs rax, 0x8000000000000000
0x0000841d      41b807000000   mov r8d, 7
0x00008423      4899           cqo
0x00008425      4531db         xor r11d, r11d
0x00008428      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x00008432      48f7fe         idiv rsi
0x00008435      4989c2         mov r10, rax
0x00008438      eb25           jmp 0x845f
0x0000843a      660f1f440000   nop word [rax + rax]
0x00008440      4c89c8         mov rax, r9
0x00008443      4899           cqo
0x00008445      48f7fe         idiv rsi
0x00008448      4839e8         cmp rax, rbp
0x0000844b      0f8ce7020000   jl 0x8738
0x00008451      480fafee       imul rbp, rsi
0x00008455      4183e801       sub r8d, 1
0x00008459      0f8421010000   je 0x8580
0x0000845f      4939ea         cmp r10, rbp
0x00008462      7edc           jle 0x8440
0x00008464      41bb01000000   mov r11d, 1
0x0000846a      48bd00000000.  movabs rbp, 0x8000000000000000
0x00008474      ebdf           jmp 0x8455
0x00008476      662e0f1f8400.  nop word cs:[rax + rax]
0x00008480      4863f0         movsxd rsi, eax
0x00008483      48b800000000.  movabs rax, 0x8000000000000000
0x0000848d      41b808000000   mov r8d, 8
0x00008493      4899           cqo
0x00008495      4531db         xor r11d, r11d
0x00008498      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x000084a2      48f7fe         idiv rsi
0x000084a5      4989c2         mov r10, rax
0x000084a8      eb25           jmp 0x84cf
0x000084aa      660f1f440000   nop word [rax + rax]
0x000084b0      4c89c8         mov rax, r9
0x000084b3      4899           cqo
0x000084b5      48f7fe         idiv rsi
0x000084b8      4839e8         cmp rax, rbp
0x000084bb      0f8c47020000   jl 0x8708
0x000084c1      480fafee       imul rbp, rsi
0x000084c5      4183e801       sub r8d, 1
0x000084c9      0f84b1000000   je 0x8580
0x000084cf      4939ea         cmp r10, rbp
0x000084d2      7edc           jle 0x84b0
0x000084d4      41bb01000000   mov r11d, 1
0x000084da      48bd00000000.  movabs rbp, 0x8000000000000000
0x000084e4      ebdf           jmp 0x84c5
0x000084e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000084f0      49b800000000.  movabs r8, 0x8000000000000000
0x000084fa      4863f0         movsxd rsi, eax
0x000084fd      4c89c0         mov rax, r8
0x00008500      4899           cqo
0x00008502      48f7fe         idiv rsi
0x00008505      4839c5         cmp rbp, rax
0x00008508      0f8ce2010000   jl 0x86f0
0x0000850e      4983e801       sub r8, 1
0x00008512      4c89c0         mov rax, r8
0x00008515      4899           cqo
0x00008517      48f7fe         idiv rsi
0x0000851a      4839c5         cmp rbp, rax
0x0000851d      0f8f8d020000   jg 0x87b0
0x00008523      480fafee       imul rbp, rsi
0x00008527      e964feffff     jmp 0x8390
0x0000852c      0f1f4000       nop dword [rax]
0x00008530      4863f0         movsxd rsi, eax
0x00008533      48b800000000.  movabs rax, 0x8000000000000000
0x0000853d      41b803000000   mov r8d, 3
0x00008543      4899           cqo
0x00008545      4531db         xor r11d, r11d
0x00008548      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x00008552      48f7fe         idiv rsi
0x00008555      4989c2         mov r10, rax
0x00008558      4939ea         cmp r10, rbp
0x0000855b      0f8fef010000   jg 0x8750
0x00008561      4c89c8         mov rax, r9
0x00008564      4899           cqo
0x00008566      48f7fe         idiv rsi
0x00008569      4839e8         cmp rax, rbp
0x0000856c      0f8c6e020000   jl 0x87e0
0x00008572      480fafee       imul rbp, rsi
0x00008576      4183e801       sub r8d, 1
0x0000857a      75dc           jne 0x8558
0x0000857c      0f1f4000       nop dword [rax]
0x00008580      4509dc         or r12d, r11d
0x00008583      e908feffff     jmp 0x8390
0x00008588      0f1f84000000.  nop dword [rax + rax]
0x00008590      4863f0         movsxd rsi, eax
0x00008593      48b800000000.  movabs rax, 0x8000000000000000
0x0000859d      41b806000000   mov r8d, 6
0x000085a3      4899           cqo
0x000085a5      4531db         xor r11d, r11d
0x000085a8      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x000085b2      48f7fe         idiv rsi
0x000085b5      4989c2         mov r10, rax
0x000085b8      eb21           jmp 0x85db
0x000085ba      660f1f440000   nop word [rax + rax]
0x000085c0      4c89c8         mov rax, r9
0x000085c3      4899           cqo
0x000085c5      48f7fe         idiv rsi
0x000085c8      4839e8         cmp rax, rbp
0x000085cb      0f8c97010000   jl 0x8768
0x000085d1      480fafee       imul rbp, rsi
0x000085d5      4183e801       sub r8d, 1
0x000085d9      74a5           je 0x8580
0x000085db      4939ea         cmp r10, rbp
0x000085de      7ee0           jle 0x85c0
0x000085e0      41bb01000000   mov r11d, 1
0x000085e6      48bd00000000.  movabs rbp, 0x8000000000000000
0x000085f0      ebe3           jmp 0x85d5
0x000085f2      660f1f440000   nop word [rax + rax]
0x000085f8      4863f0         movsxd rsi, eax
0x000085fb      48b800000000.  movabs rax, 0x8000000000000000
0x00008605      41b805000000   mov r8d, 5
0x0000860b      4899           cqo
0x0000860d      4531db         xor r11d, r11d
0x00008610      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x0000861a      48f7fe         idiv rsi
0x0000861d      4989c2         mov r10, rax
0x00008620      eb25           jmp 0x8647
0x00008622      660f1f440000   nop word [rax + rax]
0x00008628      4c89c8         mov rax, r9
0x0000862b      4899           cqo
0x0000862d      48f7fe         idiv rsi
0x00008630      4839e8         cmp rax, rbp
0x00008633      0f8c47010000   jl 0x8780
0x00008639      480fafee       imul rbp, rsi
0x0000863d      4183e801       sub r8d, 1
0x00008641      0f8439ffffff   je 0x8580
0x00008647      4939ea         cmp r10, rbp
0x0000864a      7edc           jle 0x8628
0x0000864c      41bb01000000   mov r11d, 1
0x00008652      48bd00000000.  movabs rbp, 0x8000000000000000
0x0000865c      ebdf           jmp 0x863d
0x0000865e      6690           nop
0x00008660      48b800000000.  movabs rax, 0xffe0000000000000
0x0000866a      4839c5         cmp rbp, rax
0x0000866d      0f8c7d000000   jl 0x86f0
0x00008673      48b8ffffffff.  movabs rax, 0x1fffffffffffff            ; 9007199254740991
0x0000867d      4839c5         cmp rbp, rax
0x00008680      0f8f2a010000   jg 0x87b0
0x00008686      48c1e50a       shl rbp, 0xa
0x0000868a      e901fdffff     jmp 0x8390
0x0000868f      90             nop
0x00008690      4863f0         movsxd rsi, eax
0x00008693      48b800000000.  movabs rax, 0x8000000000000000
0x0000869d      41b804000000   mov r8d, 4
0x000086a3      4899           cqo
0x000086a5      4531db         xor r11d, r11d
0x000086a8      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x000086b2      48f7fe         idiv rsi
0x000086b5      4989c2         mov r10, rax
0x000086b8      4939ea         cmp r10, rbp
0x000086bb      7f63           jg 0x8720
0x000086bd      4c89c8         mov rax, r9
0x000086c0      4899           cqo
0x000086c2      48f7fe         idiv rsi
0x000086c5      4839e8         cmp rax, rbp
0x000086c8      0f8cca000000   jl 0x8798
0x000086ce      480fafee       imul rbp, rsi
0x000086d2      4183e801       sub r8d, 1
0x000086d6      75e0           jne 0x86b8
0x000086d8      e9a3feffff     jmp 0x8580
0x000086dd      0f1f00         nop dword [rax]
0x000086e0      41bc04000000   mov r12d, 4
0x000086e6      e91cfbffff     jmp 0x8207
0x000086eb      0f1f440000     nop dword [rax + rax]
0x000086f0      41bc01000000   mov r12d, 1
0x000086f6      48bd00000000.  movabs rbp, 0x8000000000000000
0x00008700      e98bfcffff     jmp 0x8390
0x00008705      0f1f00         nop dword [rax]
0x00008708      41bb01000000   mov r11d, 1
0x0000870e      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x00008718      e9a8fdffff     jmp 0x84c5
0x0000871d      0f1f00         nop dword [rax]
0x00008720      41bb01000000   mov r11d, 1
0x00008726      48bd00000000.  movabs rbp, 0x8000000000000000
0x00008730      eba0           jmp 0x86d2
0x00008732      660f1f440000   nop word [rax + rax]
0x00008738      41bb01000000   mov r11d, 1
0x0000873e      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x00008748      e908fdffff     jmp 0x8455
0x0000874d      0f1f00         nop dword [rax]
0x00008750      41bb01000000   mov r11d, 1
0x00008756      48bd00000000.  movabs rbp, 0x8000000000000000
0x00008760      e911feffff     jmp 0x8576
0x00008765      0f1f00         nop dword [rax]
0x00008768      41bb01000000   mov r11d, 1
0x0000876e      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x00008778      e958feffff     jmp 0x85d5
0x0000877d      0f1f00         nop dword [rax]
0x00008780      41bb01000000   mov r11d, 1
0x00008786      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x00008790      e9a8feffff     jmp 0x863d
0x00008795      0f1f00         nop dword [rax]
0x00008798      41bb01000000   mov r11d, 1
0x0000879e      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x000087a8      e925ffffff     jmp 0x86d2
0x000087ad      0f1f00         nop dword [rax]
0x000087b0      41bc01000000   mov r12d, 1
0x000087b6      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x000087c0      e9cbfbffff     jmp 0x8390
0x000087c5      0f1f00         nop dword [rax]
0x000087c8      31ff           xor edi, edi
0x000087ca      80790242       cmp byte [rcx + 2], 0x42
0x000087ce      b800040000     mov eax, 0x400
0x000087d3      400f94c7       sete dil
0x000087d7      8d7c3f01       lea edi, [rdi + rdi + 1]
0x000087db      e932fbffff     jmp 0x8312
0x000087e0      41bb01000000   mov r11d, 1
0x000087e6      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x000087f0      e981fdffff     jmp 0x8576
0x000087f5      b801000000     mov eax, 1
0x000087fa      4c89c5         mov rbp, r8
0x000087fd      e986fbffff     jmp 0x8388
0x00008802      b801000000     mov eax, 1
0x00008807      4c89d5         mov rbp, r10
0x0000880a      e979fbffff     jmp 0x8388
0x0000880f      488d0d6a5c00.  lea rcx, obj.__PRETTY_FUNCTION__.4162   ; 0xe480 ; "xstrtol"
0x00008816      488d35435b00.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0xe360 ; "../coreutils-8.31/lib/xstrtol.c"
0x0000881d      488d3d5c5b00.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0xe380 ; "0 <= strtol_base && strtol_base <= 36"
0x00008824      ba54000000     mov edx, 0x54                           ; 'T'
0x00008829      e8729dffff     call sym.imp.__assert_fail
0x0000882e      e8ed9cffff     call sym.imp.__stack_chk_fail
0x00008833      662e0f1f8400.  nop word cs:[rax + rax]
0x0000883d      0f1f00         nop dword [rax]
;-- xstrtoumax:
0x00008840      4157           push r15
0x00008842      4156           push r14
0x00008844      4155           push r13
0x00008846      4154           push r12
0x00008848      55             push rbp
0x00008849      53             push rbx
0x0000884a      4883ec28       sub rsp, 0x28
0x0000884e      64488b042528.  mov rax, qword fs:[0x28]
0x00008857      4889442418     mov qword [rsp + 0x18], rax
0x0000885c      31c0           xor eax, eax
0x0000885e      83fa24         cmp edx, 0x24
0x00008861      0f875e030000   ja 0x8bc5
0x00008867      488d442410     lea rax, [rsp + 0x10]
0x0000886c      4989f7         mov r15, rsi
0x0000886f      4885f6         test rsi, rsi
0x00008872      4889fd         mov rbp, rdi
0x00008875      89542408       mov dword [rsp + 8], edx
0x00008879      4989ce         mov r14, rcx
0x0000887c      4d89c5         mov r13, r8
0x0000887f      4c0f44f8       cmove r15, rax
0x00008883      e8c89bffff     call sym.imp.__errno_location
0x00008888      c70000000000   mov dword [rax], 0
0x0000888e      4989c4         mov r12, rax
0x00008891      0fb65d00       movzx ebx, byte [rbp]
0x00008895      e8169fffff     call sym.imp.__ctype_b_loc
0x0000889a      8b542408       mov edx, dword [rsp + 8]
0x0000889e      488b30         mov rsi, qword [rax]
0x000088a1      4889e8         mov rax, rbp
0x000088a4      eb11           jmp 0x88b7
0x000088a6      662e0f1f8400.  nop word cs:[rax + rax]
0x000088b0      4883c001       add rax, 1
0x000088b4      0fb618         movzx ebx, byte [rax]
0x000088b7      0fb6cb         movzx ecx, bl
0x000088ba      f6444e0120     test byte [rsi + rcx*2 + 1], 0x20
0x000088bf      75ef           jne 0x88b0
0x000088c1      80fb2d         cmp bl, 0x2d
0x000088c4      7452           je 0x8918
0x000088c6      31c9           xor ecx, ecx
0x000088c8      4c89fe         mov rsi, r15
0x000088cb      4889ef         mov rdi, rbp
0x000088ce      e8dd9cffff     call sym.imp.__strtoul_internal
0x000088d3      498b0f         mov rcx, qword [r15]
0x000088d6      4889c3         mov rbx, rax
0x000088d9      4839e9         cmp rcx, rbp
0x000088dc      742a           je 0x8908
0x000088de      418b0424       mov eax, dword [r12]
0x000088e2      85c0           test eax, eax
0x000088e4      7462           je 0x8948
0x000088e6      83f822         cmp eax, 0x22
0x000088e9      bd01000000     mov ebp, 1
0x000088ee      7528           jne 0x8918
0x000088f0      4d85ed         test r13, r13
0x000088f3      7409           je 0x88fe
0x000088f5      440fb621       movzx r12d, byte [rcx]
0x000088f9      4584e4         test r12b, r12b
0x000088fc      7579           jne 0x8977
0x000088fe      49891e         mov qword [r14], rbx
0x00008901      eb1a           jmp 0x891d
0x00008903      0f1f440000     nop dword [rax + rax]
0x00008908      4d85ed         test r13, r13
0x0000890b      48894c2408     mov qword [rsp + 8], rcx
0x00008910      753e           jne 0x8950
0x00008912      660f1f440000   nop word [rax + rax]
0x00008918      bd04000000     mov ebp, 4
0x0000891d      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00008922      6448333c2528.  xor rdi, qword fs:[0x28]
0x0000892b      89e8           mov eax, ebp
0x0000892d      0f858d020000   jne 0x8bc0
0x00008933      4883c428       add rsp, 0x28
0x00008937      5b             pop rbx
0x00008938      5d             pop rbp
0x00008939      415c           pop r12
0x0000893b      415d           pop r13
0x0000893d      415e           pop r14
0x0000893f      415f           pop r15
0x00008941      c3             ret
0x00008942      660f1f440000   nop word [rax + rax]
0x00008948      31ed           xor ebp, ebp
0x0000894a      eba4           jmp 0x88f0
0x0000894c      0f1f4000       nop dword [rax]
0x00008950      440fb66500     movzx r12d, byte [rbp]
0x00008955      4584e4         test r12b, r12b
0x00008958      74be           je 0x8918
0x0000895a      410fbef4       movsx esi, r12b
0x0000895e      4c89ef         mov rdi, r13
0x00008961      31ed           xor ebp, ebp
0x00008963      e8f89bffff     call sym.imp.strchr
0x00008968      4885c0         test rax, rax
0x0000896b      bb01000000     mov ebx, 1
0x00008970      488b4c2408     mov rcx, qword [rsp + 8]
0x00008975      74a1           je 0x8918
0x00008977      410fbef4       movsx esi, r12b
0x0000897b      4c89ef         mov rdi, r13
0x0000897e      48894c2408     mov qword [rsp + 8], rcx
0x00008983      e8d89bffff     call sym.imp.strchr
0x00008988      4885c0         test rax, rax
0x0000898b      488b4c2408     mov rcx, qword [rsp + 8]
0x00008990      0f84c6000000   je 0x8a5c
0x00008996      418d4424bb     lea eax, [r12 - 0x45]
0x0000899b      3c2f           cmp al, 0x2f
0x0000899d      7751           ja 0x89f0
0x0000899f      48ba45893000.  movabs rdx, 0x814400308945
0x000089a9      480fa3c2       bt rdx, rax
0x000089ad      7341           jae 0x89f0
0x000089af      be30000000     mov esi, 0x30                           ; '0'
0x000089b4      4c89ef         mov rdi, r13
0x000089b7      48894c2408     mov qword [rsp + 8], rcx
0x000089bc      e89f9bffff     call sym.imp.strchr
0x000089c1      4885c0         test rax, rax
0x000089c4      488b4c2408     mov rcx, qword [rsp + 8]
0x000089c9      7425           je 0x89f0
0x000089cb      0fb64101       movzx eax, byte [rcx + 1]
0x000089cf      3c44           cmp al, 0x44
0x000089d1      740c           je 0x89df
0x000089d3      3c69           cmp al, 0x69
0x000089d5      0f84cd010000   je 0x8ba8
0x000089db      3c42           cmp al, 0x42
0x000089dd      7511           jne 0x89f0
0x000089df      bf02000000     mov edi, 2
0x000089e4      bee8030000     mov esi, 0x3e8
0x000089e9      eb0f           jmp 0x89fa
0x000089eb      0f1f440000     nop dword [rax + rax]
0x000089f0      bf01000000     mov edi, 1
0x000089f5      be00040000     mov esi, 0x400
0x000089fa      4183ec42       sub r12d, 0x42
0x000089fe      4180fc35       cmp r12b, 0x35
0x00008a02      7758           ja 0x8a5c
0x00008a04      488d157d5a00.  lea rdx, [0x0000e488]
0x00008a0b      450fb6e4       movzx r12d, r12b
0x00008a0f      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00008a13      4801d0         add rax, rdx
0x00008a16      ffe0           jmp rax
0x00008a18      4889d8         mov rax, rbx
0x00008a1b      48f7e6         mul rsi
0x00008a1e      0f80ed010000   jo 0x8c11
0x00008a24      4531c0         xor r8d, r8d
0x00008a27      48f7e6         mul rsi
0x00008a2a      0f80d2010000   jo 0x8c02
0x00008a30      4889c3         mov rbx, rax
0x00008a33      4409c5         or ebp, r8d
0x00008a36      662e0f1f8400.  nop word cs:[rax + rax]
0x00008a40      4863ff         movsxd rdi, edi
0x00008a43      89e8           mov eax, ebp
0x00008a45      4801f9         add rcx, rdi
0x00008a48      83c802         or eax, 2
0x00008a4b      49890f         mov qword [r15], rcx
0x00008a4e      803900         cmp byte [rcx], 0
0x00008a51      49891e         mov qword [r14], rbx
0x00008a54      0f45e8         cmovne ebp, eax
0x00008a57      e9c1feffff     jmp 0x891d
0x00008a5c      49891e         mov qword [r14], rbx
0x00008a5f      83cd02         or ebp, 2
0x00008a62      e9b6feffff     jmp 0x891d
0x00008a67      ba02000000     mov edx, 2
0x00008a6c      4889d0         mov rax, rdx
0x00008a6f      48f7e3         mul rbx
0x00008a72      0f8096000000   jo 0x8b0e
0x00008a78      4801db         add rbx, rbx
0x00008a7b      ebc3           jmp 0x8a40
0x00008a7d      ba00020000     mov edx, 0x200
0x00008a82      4889d0         mov rax, rdx
0x00008a85      48f7e3         mul rbx
0x00008a88      0f8080000000   jo 0x8b0e
0x00008a8e      48c1e309       shl rbx, 9
0x00008a92      ebac           jmp 0x8a40
0x00008a94      41b807000000   mov r8d, 7
0x00008a9a      4531c9         xor r9d, r9d
0x00008a9d      0f1f00         nop dword [rax]
0x00008aa0      4889d8         mov rax, rbx
0x00008aa3      48f7e6         mul rsi
0x00008aa6      4889c3         mov rbx, rax
0x00008aa9      0f808f010000   jo 0x8c3e
0x00008aaf      4183e801       sub r8d, 1
0x00008ab3      75eb           jne 0x8aa0
0x00008ab5      4409cd         or ebp, r9d
0x00008ab8      eb86           jmp 0x8a40
0x00008aba      41b808000000   mov r8d, 8
0x00008ac0      4531c9         xor r9d, r9d
0x00008ac3      0f1f440000     nop dword [rax + rax]
0x00008ac8      4889d8         mov rax, rbx
0x00008acb      48f7e6         mul rsi
0x00008ace      4889c3         mov rbx, rax
0x00008ad1      0f8049010000   jo 0x8c20
0x00008ad7      4183e801       sub r8d, 1
0x00008adb      75eb           jne 0x8ac8
0x00008add      ebd6           jmp 0x8ab5
0x00008adf      41b804000000   mov r8d, 4
0x00008ae5      4531c9         xor r9d, r9d
0x00008ae8      4889d8         mov rax, rbx
0x00008aeb      48f7e6         mul rsi
0x00008aee      4889c3         mov rbx, rax
0x00008af1      0f80fc000000   jo 0x8bf3
0x00008af7      4183e801       sub r8d, 1
0x00008afb      75eb           jne 0x8ae8
0x00008afd      ebb6           jmp 0x8ab5
0x00008aff      4889d8         mov rax, rbx
0x00008b02      48f7e6         mul rsi
0x00008b05      4889c3         mov rbx, rax
0x00008b08      0f8132ffffff   jno 0x8a40
0x00008b0e      bd01000000     mov ebp, 1
0x00008b13      4883cbff       or rbx, 0xffffffffffffffff
0x00008b17      e924ffffff     jmp 0x8a40
0x00008b1c      0f1f4000       nop dword [rax]
0x00008b20      41b805000000   mov r8d, 5
0x00008b26      4531c9         xor r9d, r9d
0x00008b29      4889d8         mov rax, rbx
0x00008b2c      48f7e6         mul rsi
0x00008b2f      4889c3         mov rbx, rax
0x00008b32      0f80f7000000   jo 0x8c2f
0x00008b38      4183e801       sub r8d, 1
0x00008b3c      75eb           jne 0x8b29
0x00008b3e      e972ffffff     jmp 0x8ab5
0x00008b43      41b806000000   mov r8d, 6
0x00008b49      4531c9         xor r9d, r9d
0x00008b4c      4889d8         mov rax, rbx
0x00008b4f      48f7e6         mul rsi
0x00008b52      4889c3         mov rbx, rax
0x00008b55      0f8089000000   jo 0x8be4
0x00008b5b      4183e801       sub r8d, 1
0x00008b5f      75eb           jne 0x8b4c
0x00008b61      e94fffffff     jmp 0x8ab5
0x00008b66      ba00040000     mov edx, 0x400
0x00008b6b      4889d0         mov rax, rdx
0x00008b6e      48f7e3         mul rbx
0x00008b71      709b           jo 0x8b0e
0x00008b73      48c1e30a       shl rbx, 0xa
0x00008b77      e9c4feffff     jmp 0x8a40
0x00008b7c      4889d8         mov rax, rbx
0x00008b7f      48f7e6         mul rsi
0x00008b82      0f80c5000000   jo 0x8c4d
0x00008b88      4531c0         xor r8d, r8d
0x00008b8b      48f7e6         mul rsi
0x00008b8e      0f8193feffff   jno 0x8a27
0x00008b94      41b801000000   mov r8d, 1
0x00008b9a      4883c8ff       or rax, 0xffffffffffffffff
0x00008b9e      e984feffff     jmp 0x8a27
0x00008ba3      0f1f440000     nop dword [rax + rax]
0x00008ba8      31ff           xor edi, edi
0x00008baa      80790242       cmp byte [rcx + 2], 0x42
0x00008bae      be00040000     mov esi, 0x400
0x00008bb3      400f94c7       sete dil
0x00008bb7      8d7c3f01       lea edi, [rdi + rdi + 1]
0x00008bbb      e93afeffff     jmp 0x89fa
0x00008bc0      e85b99ffff     call sym.imp.__stack_chk_fail
0x00008bc5      488d0d945900.  lea rcx, obj.__PRETTY_FUNCTION__.4162_1 ; 0xe560 ; "xstrtoumax"
0x00008bcc      488d358d5700.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0xe360 ; "../coreutils-8.31/lib/xstrtol.c"
0x00008bd3      488d3da65700.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0xe380 ; "0 <= strtol_base && strtol_base <= 36"
0x00008bda      ba54000000     mov edx, 0x54                           ; 'T'
0x00008bdf      e8bc99ffff     call sym.imp.__assert_fail
0x00008be4      41b901000000   mov r9d, 1
0x00008bea      4883cbff       or rbx, 0xffffffffffffffff
0x00008bee      e968ffffff     jmp 0x8b5b
0x00008bf3      41b901000000   mov r9d, 1
0x00008bf9      4883cbff       or rbx, 0xffffffffffffffff
0x00008bfd      e9f5feffff     jmp 0x8af7
0x00008c02      41b801000000   mov r8d, 1
0x00008c08      4883cbff       or rbx, 0xffffffffffffffff
0x00008c0c      e922feffff     jmp 0x8a33
0x00008c11      4883c8ff       or rax, 0xffffffffffffffff
0x00008c15      41b801000000   mov r8d, 1
0x00008c1b      e907feffff     jmp 0x8a27
0x00008c20      41b901000000   mov r9d, 1
0x00008c26      4883cbff       or rbx, 0xffffffffffffffff
0x00008c2a      e9a8feffff     jmp 0x8ad7
0x00008c2f      41b901000000   mov r9d, 1
0x00008c35      4883cbff       or rbx, 0xffffffffffffffff
0x00008c39      e9fafeffff     jmp 0x8b38
0x00008c3e      41b901000000   mov r9d, 1
0x00008c44      4883cbff       or rbx, 0xffffffffffffffff
0x00008c48      e962feffff     jmp 0x8aaf
0x00008c4d      41b801000000   mov r8d, 1
0x00008c53      4883c8ff       or rax, 0xffffffffffffffff
0x00008c57      e92fffffff     jmp 0x8b8b
0x00008c5c      0f1f4000       nop dword [rax]
;-- rpl_fcntl:
0x00008c60      4154           push r12                                ; ../coreutils-8.31/lib/fcntl.c:206
0x00008c62      55             push rbp
0x00008c63      89fd           mov ebp, edi
0x00008c65      53             push rbx
0x00008c66      4883ec50       sub rsp, 0x50
0x00008c6a      64488b042528.  mov rax, qword fs:[0x28]
0x00008c73      4889442418     mov qword [rsp + 0x18], rax
0x00008c78      31c0           xor eax, eax
0x00008c7a      488d442470     lea rax, [rsp + 0x70]                   ; ../coreutils-8.31/lib/fcntl.c:209
0x00008c7f      85f6           test esi, esi                           ; ../coreutils-8.31/lib/fcntl.c:210
0x00008c81      4889542430     mov qword [rsp + 0x30], rdx             ; ../coreutils-8.31/lib/fcntl.c:206
0x00008c86      48894c2438     mov qword [rsp + 0x38], rcx
0x00008c8b      4c89442440     mov qword [rsp + 0x40], r8
0x00008c90      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/fcntl.c:209
0x00008c95      488d442420     lea rax, [rsp + 0x20]
0x00008c9a      4c894c2448     mov qword [rsp + 0x48], r9              ; ../coreutils-8.31/lib/fcntl.c:206
0x00008c9f      c70424100000.  mov dword [rsp], 0x10                   ; ../coreutils-8.31/lib/fcntl.c:209 ; [0x10:4]=0x3e0003
0x00008ca6      4889442410     mov qword [rsp + 0x10], rax
0x00008cab      0f8401020000   je 0x8eb2                               ; ../coreutils-8.31/lib/fcntl.c:210
0x00008cb1      81fe06040000   cmp esi, 0x406
0x00008cb7      7547           jne 0x8d00
0x00008cb9      488b442410     mov rax, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/fcntl.c:221
0x00008cbe      833d93862000.  cmp dword [obj.have_dupfd_cloexec.3326], 0 ; ../coreutils-8.31/lib/fcntl.c:507 ; [0x211358:4]=0
0x00008cc5      c70424180000.  mov dword [rsp], 0x18                   ; ../coreutils-8.31/lib/fcntl.c:221 ; [0x18:4]=0x3350 rip
0x00008ccc      448b6010       mov r12d, dword [rax + 0x10]
0x00008cd0      4489e2         mov edx, r12d                           ; ../coreutils-8.31/lib/fcntl.c:509
0x00008cd3      0f882a010000   js 0x8e03                               ; ../coreutils-8.31/lib/fcntl.c:507
0x00008cd9      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x00008cdb      be06040000     mov esi, 0x406
0x00008ce0      e8ab97ffff     call sym.imp.fcntl
0x00008ce5      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fcntl.c:510
0x00008ce7      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x00008ce9      0f8889010000   js 0x8e78                               ; ../coreutils-8.31/lib/fcntl.c:510
0x00008cef      c7055f862000.  mov dword [obj.have_dupfd_cloexec.3326], 1 ; ../coreutils-8.31/lib/fcntl.c:512 ; [0x211358:4]=0
0x00008cf9      eb45           jmp 0x8d40
0x00008cfb      0f1f440000     nop dword [rax + rax]
0x00008d00      83fe0b         cmp esi, 0xb                            ; ../coreutils-8.31/lib/fcntl.c:258
0x00008d03      742b           je 0x8d30
0x00008d05      7f59           jg 0x8d60
0x00008d07      83fe04         cmp esi, 4
0x00008d0a      0f84d0000000   je 0x8de0
0x00008d10      0f8fba000000   jg 0x8dd0
0x00008d16      83fe02         cmp esi, 2
0x00008d19      0f84c1000000   je 0x8de0
0x00008d1f      7f0f           jg 0x8d30
0x00008d21      83fe01         cmp esi, 1
0x00008d24      7562           jne 0x8d88
0x00008d26      662e0f1f8400.  nop word cs:[rax + rax]
0x00008d30      89ef           mov edi, ebp
0x00008d32      31c0           xor eax, eax
0x00008d34      e85797ffff     call sym.imp.fcntl
0x00008d39      89c3           mov ebx, eax
0x00008d3b      0f1f440000     nop dword [rax + rax]
0x00008d40      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00008d45      6448330c2528.  xor rcx, qword fs:[0x28]
0x00008d4e      89d8           mov eax, ebx
0x00008d50      0f8557010000   jne 0x8ead                              ; ../coreutils-8.31/lib/fcntl.c:355
0x00008d56      4883c450       add rsp, 0x50
0x00008d5a      5b             pop rbx
0x00008d5b      5d             pop rbp
0x00008d5c      415c           pop r12
0x00008d5e      c3             ret
0x00008d5f      90             nop
0x00008d60      81fe07040000   cmp esi, 0x407
0x00008d66      7f48           jg 0x8db0
0x00008d68      81fe06040000   cmp esi, 0x406
0x00008d6e      7d70           jge 0x8de0
0x00008d70      81fe01040000   cmp esi, 0x401
0x00008d76      74b8           je 0x8d30
0x00008d78      81fe02040000   cmp esi, 0x402                          ; ../coreutils-8.31/lib/fcntl.c:183
0x00008d7e      7460           je 0x8de0
0x00008d80      81fe00040000   cmp esi, 0x400
0x00008d86      7458           je 0x8de0
0x00008d88      8b0424         mov eax, dword [rsp]
0x00008d8b      83f82f         cmp eax, 0x2f
0x00008d8e      0f8736010000   ja 0x8eca
0x00008d94      4803442410     add rax, qword [rsp + 0x10]
0x00008d99      488b10         mov rdx, qword [rax]
0x00008d9c      89ef           mov edi, ebp
0x00008d9e      31c0           xor eax, eax
0x00008da0      e8eb96ffff     call sym.imp.fcntl
0x00008da5      89c3           mov ebx, eax
0x00008da7      eb97           jmp 0x8d40
0x00008da9      0f1f80000000.  nop dword [rax]
0x00008db0      81fe09040000   cmp esi, 0x409
0x00008db6      7428           je 0x8de0
0x00008db8      0f8c72ffffff   jl 0x8d30
0x00008dbe      81fe0a040000   cmp esi, 0x40a
0x00008dc4      75c2           jne 0x8d88
0x00008dc6      e965ffffff     jmp 0x8d30                              ; ../coreutils-8.31/lib/fcntl.c:350
0x00008dcb      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fcntl.c:406
0x00008dd0      83fe09         cmp esi, 9
0x00008dd3      0f8457ffffff   je 0x8d30
0x00008dd9      7f05           jg 0x8de0
0x00008ddb      83fe08         cmp esi, 8
0x00008dde      75a8           jne 0x8d88
0x00008de0      8b0424         mov eax, dword [rsp]
0x00008de3      83f82f         cmp eax, 0x2f
0x00008de6      0f87e8000000   ja 0x8ed4
0x00008dec      4803442410     add rax, qword [rsp + 0x10]
0x00008df1      8b10           mov edx, dword [rax]
0x00008df3      89ef           mov edi, ebp
0x00008df5      31c0           xor eax, eax
0x00008df7      e89496ffff     call sym.imp.fcntl
0x00008dfc      89c3           mov ebx, eax
0x00008dfe      e93dffffff     jmp 0x8d40
0x00008e03      31f6           xor esi, esi
0x00008e05      31c0           xor eax, eax
0x00008e07      e88496ffff     call sym.imp.fcntl
0x00008e0c      85c0           test eax, eax
0x00008e0e      89c3           mov ebx, eax
0x00008e10      0f882affffff   js 0x8d40
0x00008e16      833d3b852000.  cmp dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x211358:4]=0
0x00008e1d      0f851dffffff   jne 0x8d40
0x00008e23      31c0           xor eax, eax
0x00008e25      be01000000     mov esi, 1
0x00008e2a      89df           mov edi, ebx
0x00008e2c      e85f96ffff     call sym.imp.fcntl
0x00008e31      85c0           test eax, eax
0x00008e33      781c           js 0x8e51
0x00008e35      83c801         or eax, 1
0x00008e38      be02000000     mov esi, 2
0x00008e3d      89df           mov edi, ebx
0x00008e3f      89c2           mov edx, eax
0x00008e41      31c0           xor eax, eax
0x00008e43      e84896ffff     call sym.imp.fcntl
0x00008e48      83f8ff         cmp eax, 0xffffffff
0x00008e4b      0f85effeffff   jne 0x8d40
0x00008e51      e8fa95ffff     call sym.imp.__errno_location
0x00008e56      448b20         mov r12d, dword [rax]
0x00008e59      4889c5         mov rbp, rax
0x00008e5c      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fcntl.c:446
0x00008e5e      e87d97ffff     call sym.imp.close                      ; ../coreutils-8.31/lib/fcntl.c:406
0x00008e63      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x00008e68      44896500       mov dword [rbp], r12d
0x00008e6c      e9cffeffff     jmp 0x8d40
0x00008e71      0f1f80000000.  nop dword [rax]
0x00008e78      e8d395ffff     call sym.imp.__errno_location
0x00008e7d      833816         cmp dword [rax], 0x16
0x00008e80      0f8569feffff   jne 0x8cef
0x00008e86      31f6           xor esi, esi
0x00008e88      31c0           xor eax, eax
0x00008e8a      4489e2         mov edx, r12d
0x00008e8d      89ef           mov edi, ebp                            ; ../coreutils-8.31/lib/fcntl.c:141
0x00008e8f      e8fc95ffff     call sym.imp.fcntl
0x00008e94      85c0           test eax, eax
0x00008e96      89c3           mov ebx, eax
0x00008e98      0f88a2feffff   js 0x8d40
0x00008e9e      c705b0842000.  mov dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x211358:4]=0
0x00008ea8      e976ffffff     jmp 0x8e23
0x00008ead      e86e96ffff     call sym.imp.__stack_chk_fail
0x00008eb2      488b442410     mov rax, qword [rsp + 0x10]
0x00008eb7      31f6           xor esi, esi
0x00008eb9      8b5010         mov edx, dword [rax + 0x10]
0x00008ebc      31c0           xor eax, eax
0x00008ebe      e8cd95ffff     call sym.imp.fcntl
0x00008ec3      89c3           mov ebx, eax
0x00008ec5      e976feffff     jmp 0x8d40
0x00008eca      488b442408     mov rax, qword [rsp + 8]
0x00008ecf      e9c5feffff     jmp 0x8d99
0x00008ed4      488b442408     mov rax, qword [rsp + 8]
0x00008ed9      e913ffffff     jmp 0x8df1
0x00008ede      6690           nop
;-- rpl_mbrtowc:
0x00008ee0      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00008ee2      4154           push r12
0x00008ee4      4989f5         mov r13, rsi
0x00008ee7      55             push rbp
0x00008ee8      53             push rbx
0x00008ee9      4889fb         mov rbx, rdi
0x00008eec      4989d4         mov r12, rdx
0x00008eef      4883ec18       sub rsp, 0x18
0x00008ef3      64488b042528.  mov rax, qword fs:[0x28]
0x00008efc      4889442408     mov qword [rsp + 8], rax
0x00008f01      31c0           xor eax, eax
0x00008f03      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00008f08      4885ff         test rdi, rdi
0x00008f0b      480f44d8       cmove rbx, rax
0x00008f0f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00008f12      e82996ffff     call sym.imp.mbrtowc
0x00008f17      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00008f1b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00008f1e      7620           jbe 0x8f40                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00008f20      4d85e4         test r12, r12
0x00008f23      741b           je 0x8f40
0x00008f25      31ff           xor edi, edi
0x00008f27      e844010000     call sym.hard_locale
0x00008f2c      84c0           test al, al
0x00008f2e      7510           jne 0x8f40
0x00008f30      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00008f35      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x00008f3a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00008f3c      0f1f4000       nop dword [rax]
0x00008f40      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00008f45      644833142528.  xor rdx, qword fs:[0x28]
0x00008f4e      4889e8         mov rax, rbp
0x00008f51      750b           jne 0x8f5e
0x00008f53      4883c418       add rsp, 0x18
0x00008f57      5b             pop rbx
0x00008f58      5d             pop rbp
0x00008f59      415c           pop r12
0x00008f5b      415d           pop r13
0x00008f5d      c3             ret
0x00008f5e      e8bd95ffff     call sym.imp.__stack_chk_fail
0x00008f63      662e0f1f8400.  nop word cs:[rax + rax]
0x00008f6d      0f1f00         nop dword [rax]
;-- rpl_vasprintf:
0x00008f70      53             push rbx                                ; ../coreutils-8.31/lib/vasprintf.c:34
0x00008f71      4889f0         mov rax, rsi
0x00008f74      4889fb         mov rbx, rdi
0x00008f77      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/vasprintf.c:36
0x00008f79      4883ec10       sub rsp, 0x10                           ; ../coreutils-8.31/lib/vasprintf.c:34
0x00008f7d      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00008f86      48894c2408     mov qword [rsp + 8], rcx
0x00008f8b      31c9           xor ecx, ecx
0x00008f8d      4889e6         mov rsi, rsp                            ; ../coreutils-8.31/lib/vasprintf.c:36
0x00008f90      4889d1         mov rcx, rdx
0x00008f93      4889c2         mov rdx, rax
0x00008f96      e895020000     call sym.vasnprintf
0x00008f9b      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasprintf.c:37
0x00008f9e      7442           je 0x8fe2
0x00008fa0      488b1424       mov rdx, qword [rsp]                    ; ../coreutils-8.31/lib/vasprintf.c:40
0x00008fa4      4881faffffff.  cmp rdx, 0x7fffffff
0x00008fab      771b           ja 0x8fc8
0x00008fad      488903         mov qword [rbx], rax                    ; ../coreutils-8.31/lib/vasprintf.c:47
0x00008fb0      89d0           mov eax, edx                            ; ../coreutils-8.31/lib/vasprintf.c:49
0x00008fb2      488b5c2408     mov rbx, qword [rsp + 8]                ; ../coreutils-8.31/lib/vasprintf.c:50
0x00008fb7      6448331c2528.  xor rbx, qword fs:[0x28]
0x00008fc0      7527           jne 0x8fe9
0x00008fc2      4883c410       add rsp, 0x10
0x00008fc6      5b             pop rbx
0x00008fc7      c3             ret
0x00008fc8      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/vasprintf.c:42
0x00008fcb      e86094ffff     call sym.imp.free
0x00008fd0      e87b94ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/vasprintf.c:43
0x00008fd5      c7004b000000   mov dword [rax], 0x4b                   ; 'K'
                                                                       ; [0x4b:4]=0
0x00008fdb      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/vasprintf.c:44 ; -1
0x00008fe0      ebd0           jmp 0x8fb2
0x00008fe2      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/vasprintf.c:38 ; -1
0x00008fe7      ebc9           jmp 0x8fb2
0x00008fe9      e83295ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/vasprintf.c:50
0x00008fee      6690           nop
;-- close_stream:
0x00008ff0      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00008ff2      55             push rbp
0x00008ff3      4889fd         mov rbp, rdi
0x00008ff6      53             push rbx
0x00008ff7      e88494ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x00008ffc      8b5d00         mov ebx, dword [rbp]
0x00008fff      4889ef         mov rdi, rbp
0x00009002      4989c4         mov r12, rax
0x00009005      e806010000     call sym.rpl_fclose
0x0000900a      83e320         and ebx, 0x20                           ; "@"
0x0000900d      85db           test ebx, ebx
0x0000900f      7517           jne 0x9028
0x00009011      85c0           test eax, eax
0x00009013      740a           je 0x901f                               ; stdio.h:-186
0x00009015      4d85e4         test r12, r12                           ; stdio.h:-178
0x00009018      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000901d      7439           je 0x9058
0x0000901f      5b             pop rbx
0x00009020      5d             pop rbp
0x00009021      415c           pop r12
0x00009023      c3             ret
0x00009024      0f1f4000       nop dword [rax]
0x00009028      85c0           test eax, eax
0x0000902a      751c           jne 0x9048
0x0000902c      e81f94ffff     call sym.imp.__errno_location
0x00009031      c70000000000   mov dword [rax], 0
0x00009037      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000903c      5b             pop rbx
0x0000903d      5d             pop rbp
0x0000903e      415c           pop r12
0x00009040      c3             ret
0x00009041      0f1f80000000.  nop dword [rax]
0x00009048      5b             pop rbx
0x00009049      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000904e      5d             pop rbp                                 ; stdio.h:-186
0x0000904f      415c           pop r12
0x00009051      c3             ret
0x00009052      660f1f440000   nop word [rax + rax]
0x00009058      e8f393ffff     call sym.imp.__errno_location
0x0000905d      833809         cmp dword [rax], 9
0x00009060      5b             pop rbx
0x00009061      5d             pop rbp
0x00009062      415c           pop r12                                 ; stdio.h:-178
0x00009064      0f95c0         setne al
0x00009067      0fb6c0         movzx eax, al
0x0000906a      f7d8           neg eax
0x0000906c      c3             ret
0x0000906d      0f1f00         nop dword [rax]
;-- hard_locale:
0x00009070      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00009074      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00009076      e83596ffff     call sym.imp.setlocale
0x0000907b      4889c2         mov rdx, rax
0x0000907e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00009083      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00009086      741d           je 0x90a5
0x00009088      488d3ddc5400.  lea rdi, [0x0000e56b]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x0000908f      b902000000     mov ecx, 2
0x00009094      4889d6         mov rsi, rdx
0x00009097      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00009099      0f97c1         seta cl
0x0000909c      80d900         sbb cl, 0
0x0000909f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x000090a1      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x000090a3      750b           jne 0x90b0
0x000090a5      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x000090a9      c3             ret
0x000090aa      660f1f440000   nop word [rax + rax]
0x000090b0      488d3db65400.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0xe56d ; "POSIX"
0x000090b7      b906000000     mov ecx, 6
0x000090bc      4889d6         mov rsi, rdx
0x000090bf      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000090c1      0f97c0         seta al
0x000090c4      1c00           sbb al, 0
0x000090c6      84c0           test al, al
0x000090c8      0f95c0         setne al
0x000090cb      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x000090cf      c3             ret
;-- locale_charset:
0x000090d0      4883ec08       sub rsp, 8
0x000090d4      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x000090d9      e8a295ffff     call sym.imp.nl_langinfo
0x000090de      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x000090e1      741d           je 0x9100
0x000090e3      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x000090e6      488d15865400.  lea rdx, str.ASCII                      ; 0xe573 ; "ASCII"
0x000090ed      480f44c2       cmove rax, rdx
0x000090f1      4883c408       add rsp, 8
0x000090f5      c3             ret
0x000090f6      662e0f1f8400.  nop word cs:[rax + rax]
0x00009100      488d056c5400.  lea rax, str.ASCII                      ; 0xe573 ; "ASCII"
0x00009107      4883c408       add rsp, 8
0x0000910b      c3             ret
0x0000910c      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x00009110      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00009112      55             push rbp
0x00009113      53             push rbx
0x00009114      4889fb         mov rbx, rdi
0x00009117      e83495ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x0000911c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x0000911e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00009121      7854           js 0x9177                               ; ../coreutils-8.31/lib/fclose.c:66
0x00009123      e86895ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00009128      85c0           test eax, eax
0x0000912a      752c           jne 0x9158
0x0000912c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x0000912f      e85c000000     call sym.rpl_fflush
0x00009134      85c0           test eax, eax
0x00009136      743c           je 0x9174
0x00009138      e81393ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x0000913d      448b20         mov r12d, dword [rax]
0x00009140      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00009143      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00009146      e87593ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x0000914b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x0000914e      7530           jne 0x9180
0x00009150      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00009151      5d             pop rbp
0x00009152      415c           pop r12
0x00009154      c3             ret
0x00009155      0f1f00         nop dword [rax]
0x00009158      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x0000915b      e8f094ffff     call sym.imp.fileno
0x00009160      31f6           xor esi, esi
0x00009162      ba01000000     mov edx, 1
0x00009167      89c7           mov edi, eax
0x00009169      e82294ffff     call sym.imp.lseek
0x0000916e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00009172      75b8           jne 0x912c
0x00009174      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00009177      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00009178      5d             pop rbp
0x00009179      415c           pop r12
0x0000917b      e94093ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00009180      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00009184      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00009189      ebc5           jmp 0x9150
0x0000918b      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x00009190      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00009193      53             push rbx
0x00009194      4889fb         mov rbx, rdi
0x00009197      7411           je 0x91aa                               ; ../coreutils-8.31/lib/fflush.c:150
0x00009199      e8f294ffff     call sym.imp.__freading
0x0000919e      85c0           test eax, eax
0x000091a0      7408           je 0x91aa
0x000091a2      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x000091a8      750e           jne 0x91b8
0x000091aa      4889df         mov rdi, rbx
0x000091ad      5b             pop rbx
0x000091ae      e9bd94ffff     jmp sym.imp.fflush
0x000091b3      0f1f440000     nop dword [rax + rax]
0x000091b8      4889df         mov rdi, rbx
0x000091bb      ba01000000     mov edx, 1
0x000091c0      31f6           xor esi, esi
0x000091c2      e809000000     call sym.rpl_fseeko
0x000091c7      4889df         mov rdi, rbx
0x000091ca      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x000091cb      e9a094ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x000091d0      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x000091d4      48394710       cmp qword [rdi + 0x10], rax
0x000091d8      7406           je 0x91e0                               ; ../coreutils-8.31/lib/fseeko.c:32
0x000091da      e94195ffff     jmp sym.imp.fseeko
0x000091df      90             nop
0x000091e0      488b4720       mov rax, qword [rdi + 0x20]
0x000091e4      48394728       cmp qword [rdi + 0x28], rax
0x000091e8      75f0           jne 0x91da                              ; ../coreutils-8.31/lib/fseeko.c:33
0x000091ea      48837f4800     cmp qword [rdi + 0x48], 0
0x000091ef      75e9           jne 0x91da                              ; ../coreutils-8.31/lib/fseeko.c:21
0x000091f1      4154           push r12
0x000091f3      55             push rbp
0x000091f4      4189d4         mov r12d, edx
0x000091f7      53             push rbx
0x000091f8      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x000091fb      4889fb         mov rbx, rdi
0x000091fe      e84d94ffff     call sym.imp.fileno
0x00009203      4489e2         mov edx, r12d
0x00009206      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00009209      89c7           mov edi, eax
0x0000920b      e88093ffff     call sym.imp.lseek
0x00009210      4883f8ff       cmp rax, 0xffffffffffffffff
0x00009214      740c           je 0x9222
0x00009216      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00009219      488983900000.  mov qword [rbx + 0x90], rax
0x00009220      31c0           xor eax, eax
0x00009222      5b             pop rbx
0x00009223      5d             pop rbp
0x00009224      415c           pop r12
0x00009226      c3             ret
0x00009227      660f1f840000.  nop word [rax + rax]
;-- vasnprintf:
0x00009230      55             push rbp                                ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x00009231      4889e5         mov rbp, rsp
0x00009234      4157           push r15
0x00009236      4156           push r14
0x00009238      4155           push r13
0x0000923a      4154           push r12
0x0000923c      4c8db550fcff.  lea r14, [rbp - 0x3b0]                  ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x00009243      53             push rbx                                ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x00009244      4889d3         mov rbx, rdx
0x00009247      4989cc         mov r12, rcx
0x0000924a      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x0000924d      4881ec080400.  sub rsp, 0x408                          ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x00009254      4889b5e8fbff.  mov qword [rbp - 0x418], rsi
0x0000925b      488db540fdff.  lea rsi, [rbp - 0x2c0]                  ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x00009262      4889bd18fcff.  mov qword [rbp - 0x3e8], rdi            ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x00009269      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x0000926c      4c89b5f0fbff.  mov qword [rbp - 0x410], r14
0x00009273      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x0000927c      488945c8       mov qword [rbp - 0x38], rax
0x00009280      31c0           xor eax, eax
0x00009282      4889b5f8fbff.  mov qword [rbp - 0x408], rsi            ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x00009289      e8c2120000     call sym.printf_parse
0x0000928e      85c0           test eax, eax
0x00009290      0f88620e0000   js 0xa0f8
0x00009296      4c89f6         mov rsi, r14                            ; ../coreutils-8.31/lib/vasnprintf.c:1802
0x00009299      4c89e7         mov rdi, r12
0x0000929c      e8af100000     call sym.printf_fetchargs
0x000092a1      85c0           test eax, eax
0x000092a3      0f88b70e0000   js 0xa160
0x000092a9      488b8550fdff.  mov rax, qword [rbp - 0x2b0]            ; ../coreutils-8.31/lib/xsize.h:65
0x000092b0      48c7c2ffffff.  mov rdx, 0xffffffffffffffff             ; ../coreutils-8.31/lib/xsize.h:66
0x000092b7      4883c007       add rax, 7                              ; ../coreutils-8.31/lib/xsize.h:65
0x000092bb      4883f806       cmp rax, 6                              ; ../coreutils-8.31/lib/xsize.h:66
0x000092bf      480f46c2       cmovbe rax, rdx
0x000092c3      48038558fdff.  add rax, qword [rbp - 0x2a8]
0x000092ca      0f82280a0000   jb 0x9cf8
0x000092d0      4889c7         mov rdi, rax
0x000092d3      4531c0         xor r8d, r8d
0x000092d6      4883c706       add rdi, 6
0x000092da      410f92c0       setb r8b
0x000092de      0f82140a0000   jb 0x9cf8
0x000092e4      4881ff9f0f00.  cmp rdi, 0xf9f                          ; ../coreutils-8.31/lib/vasnprintf.c:1826
0x000092eb      0f8647010000   jbe 0x9438
0x000092f1      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/vasnprintf.c:1835
0x000092f5      4c898538fcff.  mov qword [rbp - 0x3c8], r8
0x000092fc      0f84f6090000   je 0x9cf8
0x00009302      e85993ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/vasnprintf.c:1837
0x00009307      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasnprintf.c:1838
0x0000930a      48898528fcff.  mov qword [rbp - 0x3d8], rax            ; ../coreutils-8.31/lib/vasnprintf.c:1837
0x00009311      0f84e1090000   je 0x9cf8                               ; ../coreutils-8.31/lib/vasnprintf.c:1838
0x00009317      4c8b8538fcff.  mov r8, qword [rbp - 0x3c8]
0x0000931e      488985e0fbff.  mov qword [rbp - 0x420], rax
0x00009325      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/vasnprintf.c:1851
0x00009328      4883bd18fcff.  cmp qword [rbp - 0x3e8], 0              ; ../coreutils-8.31/lib/vasnprintf.c:1843
0x00009330      740a           je 0x933c
0x00009332      488b85e8fbff.  mov rax, qword [rbp - 0x418]            ; ../coreutils-8.31/lib/vasnprintf.c:1846
0x00009339      4c8b20         mov r12, qword [rax]
0x0000933c      4c8bad48fdff.  mov r13, qword [rbp - 0x2b8]            ; ../coreutils-8.31/lib/vasnprintf.c:1883
0x00009343      488d8544fcff.  lea rax, [rbp - 0x3bc]                  ; stdio2.h:64   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
0x0000934a      4c8bbd18fcff.  mov r15, qword [rbp - 0x3e8]            ; ../coreutils-8.31/lib/vasnprintf.c:1883
0x00009351      48c78500fcff.  mov qword [rbp - 0x400], 0
0x0000935c      48898510fcff.  mov qword [rbp - 0x3f0], rax            ; stdio2.h:64   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
0x00009363      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/vasnprintf.c:1928
0x00009366      4c89c3         mov rbx, r8
0x00009369      498b4d00       mov rcx, qword [r13]                    ; ../coreutils-8.31/lib/vasnprintf.c:1885
0x0000936d      4989c0         mov r8, rax                             ; ../coreutils-8.31/lib/vasnprintf.c:1928
0x00009370      4c39c1         cmp rcx, r8                             ; ../coreutils-8.31/lib/vasnprintf.c:1885
0x00009373      0f8468090000   je 0x9ce1
0x00009379      4c29c1         sub rcx, r8                             ; ../coreutils-8.31/lib/vasnprintf.c:1887
0x0000937c      4889d8         mov rax, rbx
0x0000937f      4801c8         add rax, rcx
0x00009382      4989c6         mov r14, rax                            ; ../coreutils-8.31/lib/xsize.h:65
0x00009385      0f83dd000000   jae 0x9468                              ; ../coreutils-8.31/lib/xsize.h:66
0x0000938b      4983fcff       cmp r12, 0xffffffffffffffff             ; ../coreutils-8.31/lib/vasnprintf.c:1890
0x0000938f      0f84cb0a0000   je 0x9e60
0x00009395      e8b690ffff     call sym.imp.__errno_location
0x0000939a      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x000093a1      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]            ; ../coreutils-8.31/lib/vasnprintf.c:5606
0x000093a8      7409           je 0x93b3
0x000093aa      4d85ff         test r15, r15
0x000093ad      0f85dd0a0000   jne 0x9e90
0x000093b3      488b85e0fbff.  mov rax, qword [rbp - 0x420]            ; ../coreutils-8.31/lib/vasnprintf.c:5608
0x000093ba      4885c0         test rax, rax
0x000093bd      7408           je 0x93c7
0x000093bf      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:5609
0x000093c2      e86990ffff     call sym.imp.free
0x000093c7      488b85f8fbff.  mov rax, qword [rbp - 0x408]            ; ../coreutils-8.31/lib/vasnprintf.c:5611
0x000093ce      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x000093d5      4883c020       add rax, 0x20                           ; "@"
0x000093d9      4839c7         cmp rdi, rax
0x000093dc      7405           je 0x93e3
0x000093de      e84d90ffff     call sym.imp.free
0x000093e3      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x000093ea      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x000093f1      4883c010       add rax, 0x10
0x000093f5      4839c7         cmp rdi, rax
0x000093f8      7405           je 0x93ff
0x000093fa      e83190ffff     call sym.imp.free
0x000093ff      488b8538fcff.  mov rax, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:5612
0x00009406      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/vasnprintf.c:5613
0x00009409      c7000c000000   mov dword [rax], 0xc                    ; ../coreutils-8.31/lib/vasnprintf.c:5612 ; [0xc:4]=0
0x0000940f      488b7dc8       mov rdi, qword [rbp - 0x38]             ; ../coreutils-8.31/lib/vasnprintf.c:5615
0x00009413      6448333c2528.  xor rdi, qword fs:[0x28]
0x0000941c      4c89f8         mov rax, r15
0x0000941f      0f85020f0000   jne 0xa327
0x00009425      488d65d8       lea rsp, [rbp - 0x28]
0x00009429      5b             pop rbx
0x0000942a      415c           pop r12
0x0000942c      415d           pop r13
0x0000942e      415e           pop r14
0x00009430      415f           pop r15
0x00009432      5d             pop rbp
0x00009433      c3             ret
0x00009434      0f1f4000       nop dword [rax]
0x00009438      4883c024       add rax, 0x24                           ; ../coreutils-8.31/lib/vasnprintf.c:1828
0x0000943c      48c785e0fbff.  mov qword [rbp - 0x420], 0              ; ../coreutils-8.31/lib/vasnprintf.c:1829
0x00009447      4883e0f0       and rax, 0xfffffffffffffff0             ; ../coreutils-8.31/lib/vasnprintf.c:1828
0x0000944b      4829c4         sub rsp, rax
0x0000944e      488d44240f     lea rax, [rsp + 0xf]
0x00009453      4883e0f0       and rax, 0xfffffffffffffff0
0x00009457      48898528fcff.  mov qword [rbp - 0x3d8], rax
0x0000945e      e9c2feffff     jmp 0x9325
0x00009463      0f1f440000     nop dword [rax + rax]
0x00009468      4939c4         cmp r12, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:1890
0x0000946b      7367           jae 0x94d4
0x0000946d      4d85e4         test r12, r12
0x00009470      0f852a090000   jne 0x9da0
0x00009476      4883f80c       cmp rax, 0xc
0x0000947a      0f8732090000   ja 0x9db2
0x00009480      41bc0c000000   mov r12d, 0xc
0x00009486      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x0000948d      0f94c2         sete dl
0x00009490      4d85ff         test r15, r15
0x00009493      0f843f090000   je 0x9dd8
0x00009499      84d2           test dl, dl
0x0000949b      0f8537090000   jne 0x9dd8
0x000094a1      4c89e6         mov rsi, r12
0x000094a4      4c89ff         mov rdi, r15
0x000094a7      4c898530fcff.  mov qword [rbp - 0x3d0], r8
0x000094ae      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x000094b5      e8e691ffff     call sym.imp.realloc
0x000094ba      4885c0         test rax, rax
0x000094bd      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]
0x000094c4      4c8b8530fcff.  mov r8, qword [rbp - 0x3d0]
0x000094cb      0f84aa090000   je 0x9e7b
0x000094d1      4989c7         mov r15, rax
0x000094d4      498d3c1f       lea rdi, [r15 + rbx]                    ; ../coreutils-8.31/lib/vasnprintf.c:1896
0x000094d8      4889ca         mov rdx, rcx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x000094db      4c89c6         mov rsi, r8
0x000094de      e85d91ffff     call sym.imp.memcpy
0x000094e3      488b8500fcff.  mov rax, qword [rbp - 0x400]            ; ../coreutils-8.31/lib/vasnprintf.c:1906
0x000094ea      48398540fdff.  cmp qword [rbp - 0x2c0], rax
0x000094f1      0f84b40c0000   je 0xa1ab
0x000094f7      410fb65548     movzx edx, byte [r13 + 0x48]            ; ../coreutils-8.31/lib/vasnprintf.c:1910
0x000094fc      498b4550       mov rax, qword [r13 + 0x50]
0x00009500      80fa25         cmp dl, 0x25
0x00009503      0f848f070000   je 0x9c98
0x00009509      4883f8ff       cmp rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/vasnprintf.c:1923
0x0000950d      0f84430c0000   je 0xa156
0x00009513      4c8b8558fcff.  mov r8, qword [rbp - 0x3a8]
0x0000951a      48c1e005       shl rax, 5
0x0000951e      4c01c0         add rax, r8
0x00009521      80fa6e         cmp dl, 0x6e                            ; ../coreutils-8.31/lib/vasnprintf.c:1926
0x00009524      8b38           mov edi, dword [rax]
0x00009526      89bd30fcffff   mov dword [rbp - 0x3d0], edi
0x0000952c      0f84de070000   je 0x9d10
0x00009532      418b4510       mov eax, dword [r13 + 0x10]             ; ../coreutils-8.31/lib/vasnprintf.c:4603
0x00009536      488bbd28fcff.  mov rdi, qword [rbp - 0x3d8]            ; ../coreutils-8.31/lib/vasnprintf.c:4770
0x0000953d      a801           test al, 1                              ; ../coreutils-8.31/lib/vasnprintf.c:4776
0x0000953f      c60725         mov byte [rdi], 0x25                    ; ../coreutils-8.31/lib/vasnprintf.c:4770 ; '%'
                                                                       ; [0x25:1]=0
0x00009542      488d5f01       lea rbx, [rdi + 1]
0x00009546      740f           je 0x9557                               ; ../coreutils-8.31/lib/vasnprintf.c:4776
0x00009548      488bbd28fcff.  mov rdi, qword [rbp - 0x3d8]            ; ../coreutils-8.31/lib/vasnprintf.c:4777
0x0000954f      488d5f02       lea rbx, [rdi + 2]
0x00009553      c6470127       mov byte [rdi + 1], 0x27                ; '''
                                                                       ; [0x27:1]=0
0x00009557      a802           test al, 2                              ; ../coreutils-8.31/lib/vasnprintf.c:4779
0x00009559      7407           je 0x9562
0x0000955b      c6032d         mov byte [rbx], 0x2d                    ; ../coreutils-8.31/lib/vasnprintf.c:4780 ; '-'
                                                                       ; [0x2d:1]=0
0x0000955e      4883c301       add rbx, 1
0x00009562      a804           test al, 4                              ; ../coreutils-8.31/lib/vasnprintf.c:4781
0x00009564      7407           je 0x956d
0x00009566      c6032b         mov byte [rbx], 0x2b                    ; ../coreutils-8.31/lib/vasnprintf.c:4782 ; '+'
                                                                       ; [0x2b:1]=0
0x00009569      4883c301       add rbx, 1
0x0000956d      a808           test al, 8                              ; ../coreutils-8.31/lib/vasnprintf.c:4783
0x0000956f      7407           je 0x9578
0x00009571      c60320         mov byte [rbx], 0x20                    ; ../coreutils-8.31/lib/vasnprintf.c:4784 ; [0x20:1]=64 ; "@"
0x00009574      4883c301       add rbx, 1
0x00009578      a810           test al, 0x10                           ; ../coreutils-8.31/lib/vasnprintf.c:4785
0x0000957a      7407           je 0x9583
0x0000957c      c60323         mov byte [rbx], 0x23                    ; ../coreutils-8.31/lib/vasnprintf.c:4786 ; '#'
                                                                       ; [0x23:1]=0
0x0000957f      4883c301       add rbx, 1
0x00009583      a840           test al, 0x40                           ; ../coreutils-8.31/lib/vasnprintf.c:4788 ; segment.PHDR
0x00009585      7407           je 0x958e
0x00009587      c60349         mov byte [rbx], 0x49                    ; ../coreutils-8.31/lib/vasnprintf.c:4789 ; 'I'
                                                                       ; [0x49:1]=0
0x0000958a      4883c301       add rbx, 1
0x0000958e      a820           test al, 0x20                           ; ../coreutils-8.31/lib/vasnprintf.c:4793 ; "@"
0x00009590      7407           je 0x9599
0x00009592      c60330         mov byte [rbx], 0x30                    ; ../coreutils-8.31/lib/vasnprintf.c:4794 ; '0'
                                                                       ; [0x30:1]=0
0x00009595      4883c301       add rbx, 1
0x00009599      498b7518       mov rsi, qword [r13 + 0x18]             ; ../coreutils-8.31/lib/vasnprintf.c:4795
0x0000959d      498b5520       mov rdx, qword [r13 + 0x20]
0x000095a1      4839d6         cmp rsi, rdx
0x000095a4      7430           je 0x95d6
0x000095a6      4889d1         mov rcx, rdx                            ; ../coreutils-8.31/lib/vasnprintf.c:4797
0x000095a9      4889df         mov rdi, rbx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x000095ac      4c898520fcff.  mov qword [rbp - 0x3e0], r8
0x000095b3      4829f1         sub rcx, rsi                            ; ../coreutils-8.31/lib/vasnprintf.c:4797
0x000095b6      4889ca         mov rdx, rcx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x000095b9      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x000095c0      e87b90ffff     call sym.imp.memcpy
0x000095c5      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:4803
0x000095cc      4c8b8520fcff.  mov r8, qword [rbp - 0x3e0]
0x000095d3      4801cb         add rbx, rcx
0x000095d6      498b7530       mov rsi, qword [r13 + 0x30]             ; ../coreutils-8.31/lib/vasnprintf.c:4816
0x000095da      498b5538       mov rdx, qword [r13 + 0x38]
0x000095de      4839d6         cmp rsi, rdx
0x000095e1      7430           je 0x9613
0x000095e3      4889d1         mov rcx, rdx                            ; ../coreutils-8.31/lib/vasnprintf.c:4818
0x000095e6      4889df         mov rdi, rbx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x000095e9      4c898520fcff.  mov qword [rbp - 0x3e0], r8
0x000095f0      4829f1         sub rcx, rsi                            ; ../coreutils-8.31/lib/vasnprintf.c:4818
0x000095f3      4889ca         mov rdx, rcx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x000095f6      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x000095fd      e83e90ffff     call sym.imp.memcpy
0x00009602      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:4824
0x00009609      4c8b8520fcff.  mov r8, qword [rbp - 0x3e0]
0x00009610      4801cb         add rbx, rcx
0x00009613      8bbd30fcffff   mov edi, dword [rbp - 0x3d0]
0x00009619      83ff10         cmp edi, 0x10
0x0000961c      772d           ja 0x964b
0x0000961e      b801000000     mov eax, 1
0x00009623      89f9           mov ecx, edi
0x00009625      48d3e0         shl rax, cl
0x00009628      a980410100     test eax, 0x14180
0x0000962d      7515           jne 0x9644
0x0000962f      f6c410         test ah, 0x10
0x00009632      0f8558090000   jne 0x9f90
0x00009638      f6c406         test ah, 6
0x0000963b      740e           je 0x964b
0x0000963d      c6036c         mov byte [rbx], 0x6c                    ; ../coreutils-8.31/lib/vasnprintf.c:4847 ; 'l'
                                                                       ; [0x6c:1]=0
0x00009640      4883c301       add rbx, 1
0x00009644      c6036c         mov byte [rbx], 0x6c                    ; ../coreutils-8.31/lib/vasnprintf.c:4859 ; 'l'
                                                                       ; [0x6c:1]=0
0x00009647      4883c301       add rbx, 1
0x0000964b      410fb64548     movzx eax, byte [r13 + 0x48]            ; ../coreutils-8.31/lib/vasnprintf.c:4872
0x00009650      c6430100       mov byte [rbx + 1], 0                   ; ../coreutils-8.31/lib/vasnprintf.c:4922
0x00009654      8803           mov byte [rbx], al                      ; ../coreutils-8.31/lib/vasnprintf.c:4872
0x00009656      498b4528       mov rax, qword [r13 + 0x28]             ; ../coreutils-8.31/lib/vasnprintf.c:4930
0x0000965a      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000965e      0f842c070000   je 0x9d90
0x00009664      48c1e005       shl rax, 5                              ; ../coreutils-8.31/lib/vasnprintf.c:4932
0x00009668      4c01c0         add rax, r8
0x0000966b      833805         cmp dword [rax], 5
0x0000966e      0f85e20a0000   jne 0xa156
0x00009674      8b4010         mov eax, dword [rax + 0x10]             ; ../coreutils-8.31/lib/vasnprintf.c:4934
0x00009677      c78520fcffff.  mov dword [rbp - 0x3e0], 1
0x00009681      898548fcffff   mov dword [rbp - 0x3b8], eax
0x00009687      498b4540       mov rax, qword [r13 + 0x40]             ; ../coreutils-8.31/lib/vasnprintf.c:4936
0x0000968b      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000968f      742b           je 0x96bc
0x00009691      48c1e005       shl rax, 5                              ; ../coreutils-8.31/lib/vasnprintf.c:4938
0x00009695      4901c0         add r8, rax
0x00009698      41833805       cmp dword [r8], 5
0x0000969c      0f85b40a0000   jne 0xa156
0x000096a2      8b8520fcffff   mov eax, dword [rbp - 0x3e0]            ; ../coreutils-8.31/lib/vasnprintf.c:4940
0x000096a8      418b5010       mov edx, dword [r8 + 0x10]
0x000096ac      89948548fcff.  mov dword [rbp + rax*4 - 0x3b8], edx
0x000096b3      8d4001         lea eax, [rax + 1]
0x000096b6      898520fcffff   mov dword [rbp - 0x3e0], eax
0x000096bc      4c89f0         mov rax, r14
0x000096bf      31d2           xor edx, edx
0x000096c1      4883c002       add rax, 2
0x000096c5      0f82610c0000   jb 0xa32c
0x000096cb      4939c4         cmp r12, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:4952
0x000096ce      734b           jae 0x971b
0x000096d0      4d85e4         test r12, r12
0x000096d3      0f851f080000   jne 0x9ef8
0x000096d9      4883f80c       cmp rax, 0xc
0x000096dd      0f872d080000   ja 0x9f10
0x000096e3      41bc0c000000   mov r12d, 0xc
0x000096e9      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x000096f0      0f94c2         sete dl
0x000096f3      4d85ff         test r15, r15
0x000096f6      0f8444080000   je 0x9f40
0x000096fc      84d2           test dl, dl
0x000096fe      0f853c080000   jne 0x9f40
0x00009704      4c89e6         mov rsi, r12
0x00009707      4c89ff         mov rdi, r15
0x0000970a      e8918fffff     call sym.imp.realloc
0x0000970f      4885c0         test rax, rax
0x00009712      0f847dfcffff   je 0x9395
0x00009718      4989c7         mov r15, rax
0x0000971b      43c6043700     mov byte [r15 + r14], 0                 ; ../coreutils-8.31/lib/vasnprintf.c:4957
0x00009720      e82b8dffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/vasnprintf.c:4960
0x00009725      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x0000972c      8b00           mov eax, dword [rax]
0x0000972e      48899d08fcff.  mov qword [rbp - 0x3f8], rbx
0x00009735      8985dcfbffff   mov dword [rbp - 0x424], eax
0x0000973b      0f1f440000     nop dword [rax + rax]
0x00009740      488b8538fcff.  mov rax, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:5015
0x00009747      4c89e3         mov rbx, r12                            ; ../coreutils-8.31/lib/vasnprintf.c:4968
0x0000974a      41baffffff7f   mov r10d, 0x7fffffff
0x00009750      4c29f3         sub rbx, r14
0x00009753      c78544fcffff.  mov dword [rbp - 0x3bc], 0xffffffff     ; ../coreutils-8.31/lib/vasnprintf.c:4964 ; -1
0x0000975d      4881fbffffff.  cmp rbx, 0x7fffffff
0x00009764      c70000000000   mov dword [rax], 0                      ; ../coreutils-8.31/lib/vasnprintf.c:5015
0x0000976a      8b8530fcffff   mov eax, dword [rbp - 0x3d0]            ; ../coreutils-8.31/lib/vasnprintf.c:5016
0x00009770      4c0f46d3       cmovbe r10, rbx
0x00009774      83f811         cmp eax, 0x11
0x00009777      0f87d9090000   ja 0xa156
0x0000977d      488d35f84d00.  lea rsi, [0x0000e57c]
0x00009784      48630486       movsxd rax, dword [rsi + rax*4]
0x00009788      4801f0         add rax, rsi
0x0000978b      ffe0           jmp rax
0x0000978d      0f1f00         nop dword [rax]
0x00009790      498b4550       mov rax, qword [r13 + 0x50]
0x00009794      4b8d3c37       lea rdi, [r15 + r14]
0x00009798      48c1e005       shl rax, 5
0x0000979c      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x000097a3      4c8b4810       mov r9, qword [rax + 0x10]
0x000097a7      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x000097ad      83f801         cmp eax, 1
0x000097b0      0f84c2040000   je 0x9c78
0x000097b6      83f802         cmp eax, 2
0x000097b9      0f84a1040000   je 0x9c60
0x000097bf      4883ec08       sub rsp, 8
0x000097c3      ffb510fcffff   push qword [rbp - 0x3f0]
0x000097c9      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x000097d0      4c89d6         mov rsi, r10                            ; ../coreutils-8.31/lib/vasnprintf.c:5007
0x000097d3      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x000097da      ba01000000     mov edx, 1
0x000097df      31c0           xor eax, eax
0x000097e1      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x000097e8      e8338cffff     call sym.imp.__snprintf_chk
0x000097ed      5e             pop rsi
0x000097ee      5f             pop rdi
0x000097ef      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x000097f6      8b8d44fcffff   mov ecx, dword [rbp - 0x3bc]
0x000097fc      85c9           test ecx, ecx
0x000097fe      0f8838010000   js 0x993c
0x00009804      4863d1         movsxd rdx, ecx
0x00009807      4c39d2         cmp rdx, r10
0x0000980a      730e           jae 0x981a
0x0000980c      4c01fa         add rdx, r15
0x0000980f      42803c3200     cmp byte [rdx + r14], 0
0x00009814      0f853c090000   jne 0xa156
0x0000981a      39c1           cmp ecx, eax
0x0000981c      7d08           jge 0x9826
0x0000981e      898544fcffff   mov dword [rbp - 0x3bc], eax
0x00009824      89c1           mov ecx, eax
0x00009826      8d4101         lea eax, [rcx + 1]
0x00009829      4c39d0         cmp rax, r10
0x0000982c      0f822e080000   jb 0xa060
0x00009832      4881fbfeffff.  cmp rbx, 0x7ffffffe
0x00009839      0f8741080000   ja 0xa080
0x0000983f      4b8d3424       lea rsi, [r12 + r12]
0x00009843      8d5102         lea edx, [rcx + 2]
0x00009846      4d85e4         test r12, r12
0x00009849      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00009850      480f49c6       cmovns rax, rsi
0x00009854      4c01f2         add rdx, r14
0x00009857      0f82bb0a0000   jb 0xa318
0x0000985d      4839d0         cmp rax, rdx
0x00009860      480f42c2       cmovb rax, rdx
0x00009864      4939c4         cmp r12, rax
0x00009867      0f83d3feffff   jae 0x9740
0x0000986d      4d85e4         test r12, r12
0x00009870      0f882bfbffff   js 0x93a1
0x00009876      4839c6         cmp rsi, rax
0x00009879      4989f4         mov r12, rsi
0x0000987c      730d           jae 0x988b
0x0000987e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00009882      0f8419fbffff   je 0x93a1
0x00009888      4989c4         mov r12, rax
0x0000988b      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00009892      0f94c3         sete bl
0x00009895      4d85ff         test r15, r15
0x00009898      0f8482030000   je 0x9c20
0x0000989e      84db           test bl, bl
0x000098a0      0f857a030000   jne 0x9c20
0x000098a6      4c89e6         mov rsi, r12
0x000098a9      4c89ff         mov rdi, r15
0x000098ac      e8ef8dffff     call sym.imp.realloc
0x000098b1      4885c0         test rax, rax
0x000098b4      0f84e7faffff   je 0x93a1
0x000098ba      4989c7         mov r15, rax
0x000098bd      e97efeffff     jmp 0x9740                              ; stdio2.h:-211
0x000098c2      660f1f440000   nop word [rax + rax]
0x000098c8      498b4550       mov rax, qword [r13 + 0x50]
0x000098cc      4b8d3c37       lea rdi, [r15 + r14]
0x000098d0      48c1e005       shl rax, 5
0x000098d4      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x000098db      448b4810       mov r9d, dword [rax + 0x10]
0x000098df      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x000098e5      83f801         cmp eax, 1
0x000098e8      0f8432020000   je 0x9b20
0x000098ee      83f802         cmp eax, 2
0x000098f1      0f8471020000   je 0x9b68
0x000098f7      4883ec08       sub rsp, 8
0x000098fb      ffb510fcffff   push qword [rbp - 0x3f0]
0x00009901      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x00009908      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x0000990f      ba01000000     mov edx, 1
0x00009914      4c89d6         mov rsi, r10
0x00009917      31c0           xor eax, eax
0x00009919      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x00009920      e8fb8affff     call sym.imp.__snprintf_chk
0x00009925      5a             pop rdx
0x00009926      59             pop rcx
0x00009927      8b8d44fcffff   mov ecx, dword [rbp - 0x3bc]
0x0000992d      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]            ; ../coreutils-8.31/lib/vasnprintf.c:4942
0x00009934      85c9           test ecx, ecx
0x00009936      0f89c8feffff   jns 0x9804
0x0000993c      488bbd08fcff.  mov rdi, qword [rbp - 0x3f8]
0x00009943      807f0100       cmp byte [rdi + 1], 0
0x00009947      0f853b030000   jne 0x9c88
0x0000994d      85c0           test eax, eax
0x0000994f      0f89c9feffff   jns 0x981e
0x00009955      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x0000995c      8b18           mov ebx, dword [rax]
0x0000995e      85db           test ebx, ebx
0x00009960      751e           jne 0x9980
0x00009962      410fb64548     movzx eax, byte [r13 + 0x48]
0x00009967      bb16000000     mov ebx, 0x16
0x0000996c      83e0ef         and eax, 0xffffffef                     ; ../coreutils-8.31/lib/vasnprintf.c:4951 ; 4294967279
0x0000996f      3c63           cmp al, 0x63
0x00009971      b854000000     mov eax, 0x54                           ; 'T'
0x00009976      0f44d8         cmove ebx, eax
0x00009979      0f1f80000000.  nop dword [rax]
0x00009980      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00009987      7409           je 0x9992
0x00009989      4d85ff         test r15, r15
0x0000998c      0f85aa070000   jne 0xa13c
0x00009992      488b85e0fbff.  mov rax, qword [rbp - 0x420]
0x00009999      4885c0         test rax, rax
0x0000999c      7408           je 0x99a6
0x0000999e      4889c7         mov rdi, rax
0x000099a1      e88a8affff     call sym.imp.free
0x000099a6      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x000099ad      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x000099b4      4883c020       add rax, 0x20                           ; "@"
0x000099b8      4839c7         cmp rdi, rax
0x000099bb      7405           je 0x99c2
0x000099bd      e86e8affff     call sym.imp.free
0x000099c2      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x000099c9      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x000099d0      4883c010       add rax, 0x10
0x000099d4      4839c7         cmp rdi, rax
0x000099d7      7405           je 0x99de
0x000099d9      e8528affff     call sym.imp.free
0x000099de      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x000099e5      4531ff         xor r15d, r15d
0x000099e8      8918           mov dword [rax], ebx
0x000099ea      e920faffff     jmp 0x940f
0x000099ef      90             nop
0x000099f0      498b4550       mov rax, qword [r13 + 0x50]
0x000099f4      4b8d3c37       lea rdi, [r15 + r14]
0x000099f8      48c1e005       shl rax, 5
0x000099fc      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00009a03      db6810         fld xword [rax + 0x10]
0x00009a06      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00009a0c      83f801         cmp eax, 1
0x00009a0f      0f842b060000   je 0xa040
0x00009a15      83f802         cmp eax, 2
0x00009a18      0f85c2040000   jne 0x9ee0
0x00009a1e      8b854cfcffff   mov eax, dword [rbp - 0x3b4]
0x00009a24      4883ec08       sub rsp, 8
0x00009a28      ffb510fcffff   push qword [rbp - 0x3f0]                ; ../coreutils-8.31/lib/vasnprintf.c:4814
0x00009a2e      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]
0x00009a35      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x00009a3c      4c89d6         mov rsi, r10
0x00009a3f      4883ec18       sub rsp, 0x18
0x00009a43      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x00009a4a      ba01000000     mov edx, 1
0x00009a4f      db7c2408       fstp xword [rsp + 8]
0x00009a53      50             push rax
0x00009a54      31c0           xor eax, eax
0x00009a56      4c8995d0fbff.  mov qword [rbp - 0x430], r10            ; ../coreutils-8.31/lib/vasnprintf.c:4808
0x00009a5d      e8be89ffff     call sym.imp.__snprintf_chk
0x00009a62      4883c430       add rsp, 0x30
0x00009a66      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x00009a6d      e984fdffff     jmp 0x97f6
0x00009a72      660f1f440000   nop word [rax + rax]
0x00009a78      498b4550       mov rax, qword [r13 + 0x50]
0x00009a7c      4b8d3c37       lea rdi, [r15 + r14]
0x00009a80      48c1e005       shl rax, 5
0x00009a84      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00009a8b      f20f104010     movsd xmm0, qword [rax + 0x10]
0x00009a90      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00009a96      83f801         cmp eax, 1
0x00009a99      0f8491050000   je 0xa030
0x00009a9f      83f802         cmp eax, 2
0x00009aa2      0f85f8030000   jne 0x9ea0
0x00009aa8      8b854cfcffff   mov eax, dword [rbp - 0x3b4]
0x00009aae      ffb510fcffff   push qword [rbp - 0x3f0]
0x00009ab4      50             push rax
0x00009ab5      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]
0x00009abc      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x00009ac3      4c89d6         mov rsi, r10
0x00009ac6      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x00009acd      ba01000000     mov edx, 1
0x00009ad2      b801000000     mov eax, 1
0x00009ad7      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x00009ade      e83d89ffff     call sym.imp.__snprintf_chk
0x00009ae3      4158           pop r8
0x00009ae5      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x00009aec      4159           pop r9
0x00009aee      e903fdffff     jmp 0x97f6
0x00009af3      0f1f440000     nop dword [rax + rax]
0x00009af8      498b4550       mov rax, qword [r13 + 0x50]
0x00009afc      4b8d3c37       lea rdi, [r15 + r14]
0x00009b00      48c1e005       shl rax, 5
0x00009b04      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00009b0b      440fb74810     movzx r9d, word [rax + 0x10]
0x00009b10      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00009b16      83f801         cmp eax, 1                              ; ../coreutils-8.31/lib/vasnprintf.c:4758
0x00009b19      0f85cffdffff   jne 0x98ee
0x00009b1f      90             nop
0x00009b20      ffb510fcffff   push qword [rbp - 0x3f0]
0x00009b26      4151           push r9
0x00009b28      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]
0x00009b2f      e9cdfdffff     jmp 0x9901
0x00009b34      0f1f4000       nop dword [rax]
0x00009b38      498b4550       mov rax, qword [r13 + 0x50]
0x00009b3c      4b8d3c37       lea rdi, [r15 + r14]
0x00009b40      48c1e005       shl rax, 5
0x00009b44      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00009b4b      440fbf4810     movsx r9d, word [rax + 0x10]
0x00009b50      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00009b56      83f801         cmp eax, 1
0x00009b59      74c5           je 0x9b20
0x00009b5b      83f802         cmp eax, 2
0x00009b5e      0f8593fdffff   jne 0x98f7
0x00009b64      0f1f4000       nop dword [rax]
0x00009b68      4883ec08       sub rsp, 8
0x00009b6c      ffb510fcffff   push qword [rbp - 0x3f0]
0x00009b72      4151           push r9
0x00009b74      8b854cfcffff   mov eax, dword [rbp - 0x3b4]
0x00009b7a      50             push rax
0x00009b7b      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]            ; ../coreutils-8.31/lib/vasnprintf.c:4623
0x00009b82      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x00009b89      4c89d6         mov rsi, r10
0x00009b8c      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x00009b93      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/vasnprintf.c:4624
0x00009b98      31c0           xor eax, eax
0x00009b9a      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x00009ba1      e87a88ffff     call sym.imp.__snprintf_chk
0x00009ba6      4883c420       add rsp, 0x20
0x00009baa      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x00009bb1      e940fcffff     jmp 0x97f6
0x00009bb6      662e0f1f8400.  nop word cs:[rax + rax]
0x00009bc0      498b4550       mov rax, qword [r13 + 0x50]
0x00009bc4      4b8d3c37       lea rdi, [r15 + r14]
0x00009bc8      48c1e005       shl rax, 5
0x00009bcc      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00009bd3      440fb64810     movzx r9d, byte [rax + 0x10]
0x00009bd8      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00009bde      83f801         cmp eax, 1
0x00009be1      0f8507fdffff   jne 0x98ee
0x00009be7      e934ffffff     jmp 0x9b20
0x00009bec      0f1f4000       nop dword [rax]
0x00009bf0      498b4550       mov rax, qword [r13 + 0x50]
0x00009bf4      4b8d3c37       lea rdi, [r15 + r14]
0x00009bf8      48c1e005       shl rax, 5
0x00009bfc      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00009c03      440fbe4810     movsx r9d, byte [rax + 0x10]
0x00009c08      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00009c0e      83f801         cmp eax, 1
0x00009c11      0f85d7fcffff   jne 0x98ee
0x00009c17      e904ffffff     jmp 0x9b20
0x00009c1c      0f1f4000       nop dword [rax]
0x00009c20      4c89e7         mov rdi, r12
0x00009c23      e8388affff     call sym.imp.malloc
0x00009c28      4885c0         test rax, rax
0x00009c2b      4889c1         mov rcx, rax
0x00009c2e      0f846df7ffff   je 0x93a1
0x00009c34      4d85f6         test r14, r14
0x00009c37      0f84b3000000   je 0x9cf0
0x00009c3d      84db           test bl, bl
0x00009c3f      0f84ab000000   je 0x9cf0
0x00009c45      4c89fe         mov rsi, r15
0x00009c48      4c89f2         mov rdx, r14
0x00009c4b      4889c7         mov rdi, rax
0x00009c4e      e8ed89ffff     call sym.imp.memcpy
0x00009c53      4989c7         mov r15, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:1511
0x00009c56      e9e5faffff     jmp 0x9740
0x00009c5b      0f1f440000     nop dword [rax + rax]
0x00009c60      4883ec08       sub rsp, 8
0x00009c64      ffb510fcffff   push qword [rbp - 0x3f0]                ; ../coreutils-8.31/lib/xsize.h:-338
0x00009c6a      4151           push r9
0x00009c6c      e903ffffff     jmp 0x9b74
0x00009c71      0f1f80000000.  nop dword [rax]
0x00009c78      ffb510fcffff   push qword [rbp - 0x3f0]
0x00009c7e      4151           push r9
0x00009c80      e9a3feffff     jmp 0x9b28
0x00009c85      0f1f00         nop dword [rax]
0x00009c88      c6470100       mov byte [rdi + 1], 0
0x00009c8c      e9affaffff     jmp 0x9740
0x00009c91      0f1f80000000.  nop dword [rax]
0x00009c98      4883f8ff       cmp rax, 0xffffffffffffffff
0x00009c9c      0f85b4040000   jne 0xa156
0x00009ca2      4c89f0         mov rax, r14
0x00009ca5      4883c001       add rax, 1
0x00009ca9      4889c3         mov rbx, rax
0x00009cac      0f8386000000   jae 0x9d38
0x00009cb2      4983fcff       cmp r12, 0xffffffffffffffff
0x00009cb6      0f85d9f6ffff   jne 0x9395
0x00009cbc      4c89e3         mov rbx, r12
0x00009cbf      43c6043725     mov byte [r15 + r14], 0x25              ; '%'
                                                                       ; [0x25:1]=0
0x00009cc4      4d8b4508       mov r8, qword [r13 + 8]
0x00009cc8      4983c558       add r13, 0x58
0x00009ccc      498b4d00       mov rcx, qword [r13]
0x00009cd0      48838500fcff.  add qword [rbp - 0x400], 1
0x00009cd8      4c39c1         cmp rcx, r8
0x00009cdb      0f8598f6ffff   jne 0x9379
0x00009ce1      4989de         mov r14, rbx
0x00009ce4      e9faf7ffff     jmp 0x94e3                              ; ../coreutils-8.31/lib/vasnprintf.c:1525
0x00009ce9      0f1f80000000.  nop dword [rax]
0x00009cf0      4989cf         mov r15, rcx
0x00009cf3      e948faffff     jmp 0x9740                              ; ../coreutils-8.31/lib/vasnprintf.c:1514
0x00009cf8      e85387ffff     call sym.imp.__errno_location
0x00009cfd      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x00009d04      e9bef6ffff     jmp 0x93c7
0x00009d09      0f1f80000000.  nop dword [rax]
0x00009d10      89fa           mov edx, edi
0x00009d12      83ea12         sub edx, 0x12
0x00009d15      83fa04         cmp edx, 4
0x00009d18      0f8738040000   ja 0xa156
0x00009d1e      488d3d9f4800.  lea rdi, [0x0000e5c4]
0x00009d25      488b4010       mov rax, qword [rax + 0x10]
0x00009d29      48631497       movsxd rdx, dword [rdi + rdx*4]
0x00009d2d      4801fa         add rdx, rdi
0x00009d30      ffe2           jmp rdx
0x00009d32      660f1f440000   nop word [rax + rax]
0x00009d38      4939c4         cmp r12, rax
0x00009d3b      7382           jae 0x9cbf
0x00009d3d      4d85e4         test r12, r12
0x00009d40      0f85ca030000   jne 0xa110
0x00009d46      4883f80c       cmp rax, 0xc
0x00009d4a      0f87d2030000   ja 0xa122
0x00009d50      41bc0c000000   mov r12d, 0xc
0x00009d56      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00009d5d      0f94c2         sete dl
0x00009d60      4d85ff         test r15, r15
0x00009d63      0f8467020000   je 0x9fd0
0x00009d69      84d2           test dl, dl
0x00009d6b      0f855f020000   jne 0x9fd0
0x00009d71      4c89e6         mov rsi, r12
0x00009d74      4c89ff         mov rdi, r15
0x00009d77      e82489ffff     call sym.imp.realloc                    ; ../coreutils-8.31/lib/vasnprintf.c:1487
0x00009d7c      4885c0         test rax, rax
0x00009d7f      0f84f6000000   je 0x9e7b
0x00009d85      4989c7         mov r15, rax
0x00009d88      e932ffffff     jmp 0x9cbf
0x00009d8d      0f1f00         nop dword [rax]
0x00009d90      c78520fcffff.  mov dword [rbp - 0x3e0], 0
0x00009d9a      e9e8f8ffff     jmp 0x9687
0x00009d9f      90             nop
0x00009da0      0f88eff5ffff   js 0x9395
0x00009da6      4d01e4         add r12, r12
0x00009da9      4939c4         cmp r12, rax
0x00009dac      0f83d4f6ffff   jae 0x9486
0x00009db2      4883f8ff       cmp rax, 0xffffffffffffffff
0x00009db6      0f84d9f5ffff   je 0x9395
0x00009dbc      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00009dc3      4989c4         mov r12, rax
0x00009dc6      0f94c2         sete dl
0x00009dc9      4d85ff         test r15, r15
0x00009dcc      0f85c7f6ffff   jne 0x9499
0x00009dd2      660f1f440000   nop word [rax + rax]
0x00009dd8      4c89e7         mov rdi, r12
0x00009ddb      4c898520fcff.  mov qword [rbp - 0x3e0], r8
0x00009de2      889530fcffff   mov byte [rbp - 0x3d0], dl
0x00009de8      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x00009def      e86c88ffff     call sym.imp.malloc
0x00009df4      4885c0         test rax, rax
0x00009df7      4989c1         mov r9, rax
0x00009dfa      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]
0x00009e01      0fb69530fcff.  movzx edx, byte [rbp - 0x3d0]
0x00009e08      4c8b8520fcff.  mov r8, qword [rbp - 0x3e0]
0x00009e0f      0f8480f5ffff   je 0x9395
0x00009e15      4885db         test rbx, rbx
0x00009e18      0f8402020000   je 0xa020
0x00009e1e      84d2           test dl, dl
0x00009e20      0f84fa010000   je 0xa020
0x00009e26      4c89fe         mov rsi, r15
0x00009e29      4889da         mov rdx, rbx
0x00009e2c      4889c7         mov rdi, rax
0x00009e2f      4c898530fcff.  mov qword [rbp - 0x3d0], r8
0x00009e36      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x00009e3d      e8fe87ffff     call sym.imp.memcpy
0x00009e42      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]
0x00009e49      4989c7         mov r15, rax
0x00009e4c      4c8b8530fcff.  mov r8, qword [rbp - 0x3d0]
0x00009e53      e97cf6ffff     jmp 0x94d4
0x00009e58      0f1f84000000.  nop dword [rax + rax]
0x00009e60      4d89e6         mov r14, r12
0x00009e63      e96cf6ffff     jmp 0x94d4
0x00009e68      0f1f84000000.  nop dword [rax + rax]
0x00009e70      4c8930         mov qword [rax], r14
0x00009e73      4c89f3         mov rbx, r14
0x00009e76      e949feffff     jmp 0x9cc4
0x00009e7b      e8d085ffff     call sym.imp.__errno_location
0x00009e80      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x00009e87      660f1f840000.  nop word [rax + rax]
0x00009e90      4c89ff         mov rdi, r15
0x00009e93      e89885ffff     call sym.imp.free
0x00009e98      e916f5ffff     jmp 0x93b3
0x00009e9d      0f1f00         nop dword [rax]
0x00009ea0      4c8b8d10fcff.  mov r9, qword [rbp - 0x3f0]
0x00009ea7      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x00009eae      4c89d6         mov rsi, r10
0x00009eb1      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x00009eb8      ba01000000     mov edx, 1
0x00009ebd      b801000000     mov eax, 1
0x00009ec2      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x00009ec9      e85285ffff     call sym.imp.__snprintf_chk
0x00009ece      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x00009ed5      e91cf9ffff     jmp 0x97f6
0x00009eda      660f1f440000   nop word [rax + rax]
0x00009ee0      4883ec10       sub rsp, 0x10
0x00009ee4      4c8b8d10fcff.  mov r9, qword [rbp - 0x3f0]
0x00009eeb      db3c24         fstp xword [rsp]
0x00009eee      e9d6f8ffff     jmp 0x97c9
0x00009ef3      0f1f440000     nop dword [rax + rax]
0x00009ef8      0f8897f4ffff   js 0x9395
0x00009efe      4d01e4         add r12, r12
0x00009f01      4939c4         cmp r12, rax
0x00009f04      0f83dff7ffff   jae 0x96e9
0x00009f0a      660f1f440000   nop word [rax + rax]
0x00009f10      4885d2         test rdx, rdx
0x00009f13      0f857cf4ffff   jne 0x9395
0x00009f19      4883f8ff       cmp rax, 0xffffffffffffffff
0x00009f1d      0f8472f4ffff   je 0x9395
0x00009f23      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00009f2a      4989c4         mov r12, rax
0x00009f2d      0f94c2         sete dl                                 ; string_fortified.h:-369
0x00009f30      4d85ff         test r15, r15
0x00009f33      0f85c3f7ffff   jne 0x96fc
0x00009f39      0f1f80000000.  nop dword [rax]
0x00009f40      4c89e7         mov rdi, r12
0x00009f43      889538fcffff   mov byte [rbp - 0x3c8], dl
0x00009f49      e81287ffff     call sym.imp.malloc
0x00009f4e      4885c0         test rax, rax
0x00009f51      4889c1         mov rcx, rax
0x00009f54      0fb69538fcff.  movzx edx, byte [rbp - 0x3c8]
0x00009f5b      0f8434f4ffff   je 0x9395                               ; ../coreutils-8.31/lib/vasnprintf.c:1528
0x00009f61      4d85f6         test r14, r14
0x00009f64      0f8496010000   je 0xa100
0x00009f6a      84d2           test dl, dl
0x00009f6c      0f848e010000   je 0xa100
0x00009f72      4c89fe         mov rsi, r15
0x00009f75      4c89f2         mov rdx, r14
0x00009f78      4889c7         mov rdi, rax
0x00009f7b      e8c086ffff     call sym.imp.memcpy                     ; ../coreutils-8.31/lib/vasnprintf.c:1531
0x00009f80      4989c7         mov r15, rax
0x00009f83      e993f7ffff     jmp 0x971b
0x00009f88      0f1f84000000.  nop dword [rax + rax]
0x00009f90      c6034c         mov byte [rbx], 0x4c                    ; 'L'
                                                                       ; [0x4c:1]=0
0x00009f93      4883c301       add rbx, 1
0x00009f97      e9aff6ffff     jmp 0x964b
0x00009f9c      0f1f4000       nop dword [rax]
0x00009fa0      448830         mov byte [rax], r14b
0x00009fa3      4c89f3         mov rbx, r14
0x00009fa6      e919fdffff     jmp 0x9cc4
0x00009fab      0f1f440000     nop dword [rax + rax]
0x00009fb0      448930         mov dword [rax], r14d
0x00009fb3      4c89f3         mov rbx, r14
0x00009fb6      e909fdffff     jmp 0x9cc4
0x00009fbb      0f1f440000     nop dword [rax + rax]
0x00009fc0      66448930       mov word [rax], r14w
0x00009fc4      4c89f3         mov rbx, r14
0x00009fc7      e9f8fcffff     jmp 0x9cc4
0x00009fcc      0f1f4000       nop dword [rax]
0x00009fd0      4c89e7         mov rdi, r12
0x00009fd3      889538fcffff   mov byte [rbp - 0x3c8], dl
0x00009fd9      e88286ffff     call sym.imp.malloc
0x00009fde      4885c0         test rax, rax
0x00009fe1      4889c1         mov rcx, rax
0x00009fe4      0fb69538fcff.  movzx edx, byte [rbp - 0x3c8]
0x00009feb      0f84a4f3ffff   je 0x9395                               ; stdio2.h:-339
0x00009ff1      4d85f6         test r14, r14
0x00009ff4      0f843a010000   je 0xa134
0x00009ffa      84d2           test dl, dl
0x00009ffc      0f8432010000   je 0xa134
0x0000a002      4c89fe         mov rsi, r15
0x0000a005      4c89f2         mov rdx, r14
0x0000a008      4889c7         mov rdi, rax
0x0000a00b      e83086ffff     call sym.imp.memcpy
0x0000a010      4989c7         mov r15, rax
0x0000a013      e9a7fcffff     jmp 0x9cbf
0x0000a018      0f1f84000000.  nop dword [rax + rax]
0x0000a020      4d89cf         mov r15, r9
0x0000a023      e9acf4ffff     jmp 0x94d4
0x0000a028      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/vasnprintf.c:5157
0x0000a030      4883ec08       sub rsp, 8
0x0000a034      ffb510fcffff   push qword [rbp - 0x3f0]
0x0000a03a      e976faffff     jmp 0x9ab5
0x0000a03f      90             nop
0x0000a040      4883ec08       sub rsp, 8
0x0000a044      ffb510fcffff   push qword [rbp - 0x3f0]
0x0000a04a      4883ec10       sub rsp, 0x10
0x0000a04e      db3c24         fstp xword [rsp]
0x0000a051      e925fbffff     jmp 0x9b7b
0x0000a056      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a060      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x0000a067      8bbddcfbffff   mov edi, dword [rbp - 0x424]
0x0000a06d      4863d9         movsxd rbx, ecx
0x0000a070      4c01f3         add rbx, r14
0x0000a073      8938           mov dword [rax], edi
0x0000a075      e94afcffff     jmp 0x9cc4
0x0000a07a      660f1f440000   nop word [rax + rax]
0x0000a080      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x0000a087      7409           je 0xa092
0x0000a089      4d85ff         test r15, r15
0x0000a08c      0f85b7000000   jne 0xa149
0x0000a092      488b85e0fbff.  mov rax, qword [rbp - 0x420]
0x0000a099      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasnprintf.c:5198
0x0000a09c      7408           je 0xa0a6
0x0000a09e      4889c7         mov rdi, rax
0x0000a0a1      e88a83ffff     call sym.imp.free
0x0000a0a6      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x0000a0ad      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x0000a0b4      4883c020       add rax, 0x20                           ; "@"
0x0000a0b8      4839c7         cmp rdi, rax
0x0000a0bb      7405           je 0xa0c2
0x0000a0bd      e86e83ffff     call sym.imp.free
0x0000a0c2      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x0000a0c9      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x0000a0d0      4883c010       add rax, 0x10
0x0000a0d4      4839c7         cmp rdi, rax
0x0000a0d7      7405           je 0xa0de
0x0000a0d9      e85283ffff     call sym.imp.free
0x0000a0de      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x0000a0e5      4531ff         xor r15d, r15d
0x0000a0e8      c7004b000000   mov dword [rax], 0x4b                   ; 'K'
                                                                       ; [0x4b:4]=0
0x0000a0ee      e91cf3ffff     jmp 0x940f
0x0000a0f3      0f1f440000     nop dword [rax + rax]
0x0000a0f8      4531ff         xor r15d, r15d
0x0000a0fb      e90ff3ffff     jmp 0x940f
0x0000a100      4989cf         mov r15, rcx
0x0000a103      e913f6ffff     jmp 0x971b                              ; ../coreutils-8.31/lib/vasnprintf.c:1273
0x0000a108      0f1f84000000.  nop dword [rax + rax]
0x0000a110      0f887ff2ffff   js 0x9395
0x0000a116      4d01e4         add r12, r12
0x0000a119      4939c4         cmp r12, rax
0x0000a11c      0f8334fcffff   jae 0x9d56
0x0000a122      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000a126      0f8469f2ffff   je 0x9395
0x0000a12c      4989c4         mov r12, rax
0x0000a12f      e922fcffff     jmp 0x9d56
0x0000a134      4989cf         mov r15, rcx
0x0000a137      e983fbffff     jmp 0x9cbf
0x0000a13c      4c89ff         mov rdi, r15
0x0000a13f      e8ec82ffff     call sym.imp.free
0x0000a144      e949f8ffff     jmp 0x9992
0x0000a149      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/vasnprintf.c:1275
0x0000a14c      e8df82ffff     call sym.imp.free
0x0000a151      e93cffffff     jmp 0xa092
0x0000a156      e8e582ffff     call sym.imp.abort
0x0000a15b      0f1f440000     nop dword [rax + rax]
0x0000a160      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x0000a167      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x0000a16e      4883c020       add rax, 0x20                           ; "@"
0x0000a172      4839c7         cmp rdi, rax
0x0000a175      7405           je 0xa17c
0x0000a177      e8b482ffff     call sym.imp.free
0x0000a17c      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x0000a183      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x0000a18a      4883c010       add rax, 0x10
0x0000a18e      4839c7         cmp rdi, rax
0x0000a191      7405           je 0xa198
0x0000a193      e89882ffff     call sym.imp.free
0x0000a198      e8b382ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/vasnprintf.c:5040
0x0000a19d      4531ff         xor r15d, r15d
0x0000a1a0      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x33500000
0x0000a1a6      e964f2ffff     jmp 0x940f
0x0000a1ab      4c89f3         mov rbx, r14
0x0000a1ae      31c0           xor eax, eax
0x0000a1b0      4883c301       add rbx, 1
0x0000a1b4      0f8206010000   jb 0xa2c0
0x0000a1ba      4939dc         cmp r12, rbx
0x0000a1bd      734d           jae 0xa20c
0x0000a1bf      4d85e4         test r12, r12
0x0000a1c2      0f8531010000   jne 0xa2f9                              ; ../coreutils-8.31/lib/vasnprintf.c:5048
0x0000a1c8      4883fb0c       cmp rbx, 0xc
0x0000a1cc      0f870c010000   ja 0xa2de
0x0000a1d2      41bc0c000000   mov r12d, 0xc
0x0000a1d8      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x0000a1df      410f94c5       sete r13b
0x0000a1e3      4d85ff         test r15, r15
0x0000a1e6      0f84a0000000   je 0xa28c
0x0000a1ec      4584ed         test r13b, r13b
0x0000a1ef      0f8597000000   jne 0xa28c
0x0000a1f5      4c89e6         mov rsi, r12
0x0000a1f8      4c89ff         mov rdi, r15
0x0000a1fb      e8a084ffff     call sym.imp.realloc
0x0000a200      4885c0         test rax, rax
0x0000a203      0f8472fcffff   je 0x9e7b
0x0000a209      4989c7         mov r15, rax
0x0000a20c      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x0000a213      43c6043700     mov byte [r15 + r14], 0
0x0000a218      7417           je 0xa231
0x0000a21a      4939dc         cmp r12, rbx
0x0000a21d      7612           jbe 0xa231
0x0000a21f      4c89ff         mov rdi, r15
0x0000a222      4889de         mov rsi, rbx
0x0000a225      e87684ffff     call sym.imp.realloc
0x0000a22a      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasnprintf.c:5061
0x0000a22d      4c0f45f8       cmovne r15, rax
0x0000a231      488b85e0fbff.  mov rax, qword [rbp - 0x420]
0x0000a238      4885c0         test rax, rax
0x0000a23b      7408           je 0xa245
0x0000a23d      4889c7         mov rdi, rax
0x0000a240      e8eb81ffff     call sym.imp.free
0x0000a245      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x0000a24c      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x0000a253      4883c020       add rax, 0x20                           ; "@"
0x0000a257      4839c7         cmp rdi, rax
0x0000a25a      7405           je 0xa261
0x0000a25c      e8cf81ffff     call sym.imp.free
0x0000a261      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x0000a268      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x0000a26f      4883c010       add rax, 0x10
0x0000a273      4839c7         cmp rdi, rax
0x0000a276      7405           je 0xa27d
0x0000a278      e8b381ffff     call sym.imp.free
0x0000a27d      488b85e8fbff.  mov rax, qword [rbp - 0x418]
0x0000a284      4c8930         mov qword [rax], r14
0x0000a287      e983f1ffff     jmp 0x940f
0x0000a28c      4c89e7         mov rdi, r12
0x0000a28f      e8cc83ffff     call sym.imp.malloc
0x0000a294      4885c0         test rax, rax
0x0000a297      4889c1         mov rcx, rax
0x0000a29a      0f84f5f0ffff   je 0x9395
0x0000a2a0      4d85f6         test r14, r14
0x0000a2a3      746b           je 0xa310
0x0000a2a5      4584ed         test r13b, r13b
0x0000a2a8      7466           je 0xa310
0x0000a2aa      4c89fe         mov rsi, r15
0x0000a2ad      4c89f2         mov rdx, r14
0x0000a2b0      4889c7         mov rdi, rax
0x0000a2b3      e88883ffff     call sym.imp.memcpy
0x0000a2b8      4989c7         mov r15, rax
0x0000a2bb      e94cffffff     jmp 0xa20c                              ; ../coreutils-8.31/lib/vasnprintf.c:4732
0x0000a2c0      4983fcff       cmp r12, 0xffffffffffffffff
0x0000a2c4      b801000000     mov eax, 1
0x0000a2c9      0f843dffffff   je 0xa20c
0x0000a2cf      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/vasnprintf.c:4421
0x0000a2d2      0f84bdf0ffff   je 0x9395
0x0000a2d8      0f88b7f0ffff   js 0x9395
0x0000a2de      4885c0         test rax, rax
0x0000a2e1      0f85aef0ffff   jne 0x9395
0x0000a2e7      4883fbff       cmp rbx, 0xffffffffffffffff
0x0000a2eb      0f84a4f0ffff   je 0x9395
0x0000a2f1      4989dc         mov r12, rbx
0x0000a2f4      e9dffeffff     jmp 0xa1d8
0x0000a2f9      0f8896f0ffff   js 0x9395
0x0000a2ff      4d01e4         add r12, r12
0x0000a302      4939dc         cmp r12, rbx
0x0000a305      0f83cdfeffff   jae 0xa1d8
0x0000a30b      ebd1           jmp 0xa2de
0x0000a30d      0f1f00         nop dword [rax]
0x0000a310      4989cf         mov r15, rcx
0x0000a313      e9f4feffff     jmp 0xa20c
0x0000a318      4983fcff       cmp r12, 0xffffffffffffffff
0x0000a31c      0f841ef4ffff   je 0x9740
0x0000a322      e97af0ffff     jmp 0x93a1
0x0000a327      e8f481ffff     call sym.imp.__stack_chk_fail
0x0000a32c      4983fcff       cmp r12, 0xffffffffffffffff
0x0000a330      ba01000000     mov edx, 1
0x0000a335      0f84e0f3ffff   je 0x971b
0x0000a33b      4d85e4         test r12, r12
0x0000a33e      0f8451f0ffff   je 0x9395
0x0000a344      0f89c6fbffff   jns 0x9f10
0x0000a34a      e946f0ffff     jmp 0x9395
0x0000a34f      90             nop
;-- printf_fetchargs:
0x0000a350      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/printf-args.c:37
0x0000a354      488b4608       mov rax, qword [rsi + 8]
0x0000a358      7463           je 0xa3bd
0x0000a35a      4c8d057f4200.  lea r8, [0x0000e5e0]                    ; ../coreutils-8.31/lib/printf-args.c:42
0x0000a361      4c8d15d84200.  lea r10, obj.wide_null_string.2696      ; 0xe640 ; U"(NULL)"
0x0000a368      4c8d0d694200.  lea r9, [0x0000e5d8]                    ; "(NULL)"
0x0000a36f      31c9           xor ecx, ecx
0x0000a371      0f1f80000000.  nop dword [rax]
0x0000a378      833816         cmp dword [rax], 0x16
0x0000a37b      7743           ja 0xa3c0
0x0000a37d      8b10           mov edx, dword [rax]
0x0000a37f      49631490       movsxd rdx, dword [r8 + rdx*4]
0x0000a383      4c01c2         add rdx, r8
0x0000a386      ffe2           jmp rdx
0x0000a388      0f1f84000000.  nop dword [rax + rax]
0x0000a390      488b5708       mov rdx, qword [rdi + 8]                ; stddef.h:38      && !defined(__need_wint_t))
0x0000a394      4883c20f       add rdx, 0xf
0x0000a398      4883e2f0       and rdx, 0xfffffffffffffff0
0x0000a39c      4c8d5a10       lea r11, [rdx + 0x10]
0x0000a3a0      4c895f08       mov qword [rdi + 8], r11
0x0000a3a4      db2a           fld xword [rdx]
0x0000a3a6      db7810         fstp xword [rax + 0x10]
0x0000a3a9      0f1f80000000.  nop dword [rax]
0x0000a3b0      4883c101       add rcx, 1
0x0000a3b4      4883c020       add rax, 0x20                           ; stddef.h:-9 ; "@"
0x0000a3b8      48390e         cmp qword [rsi], rcx
0x0000a3bb      77bb           ja 0xa378
0x0000a3bd      31c0           xor eax, eax
0x0000a3bf      c3             ret
0x0000a3c0      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000a3c5      c3             ret
0x0000a3c6      448b1f         mov r11d, dword [rdi]
0x0000a3c9      4183fb2f       cmp r11d, 0x2f
0x0000a3cd      0f8737010000   ja 0xa50a
0x0000a3d3      4489da         mov edx, r11d
0x0000a3d6      48035710       add rdx, qword [rdi + 0x10]             ; stddef.h:-54
0x0000a3da      4183c308       add r11d, 8
0x0000a3de      44891f         mov dword [rdi], r11d
0x0000a3e1      488b12         mov rdx, qword [rdx]
0x0000a3e4      48895010       mov qword [rax + 0x10], rdx
0x0000a3e8      ebc6           jmp 0xa3b0
0x0000a3ea      448b1f         mov r11d, dword [rdi]
0x0000a3ed      4183fb2f       cmp r11d, 0x2f
0x0000a3f1      0f8735010000   ja 0xa52c
0x0000a3f7      4489da         mov edx, r11d
0x0000a3fa      48035710       add rdx, qword [rdi + 0x10]
0x0000a3fe      4183c308       add r11d, 8
0x0000a402      44891f         mov dword [rdi], r11d
0x0000a405      8b12           mov edx, dword [rdx]
0x0000a407      895010         mov dword [rax + 0x10], edx
0x0000a40a      eba4           jmp 0xa3b0
0x0000a40c      448b1f         mov r11d, dword [rdi]
0x0000a40f      4183fb2f       cmp r11d, 0x2f
0x0000a413      0f8702010000   ja 0xa51b
0x0000a419      4489da         mov edx, r11d                           ; stddef.h:-47
0x0000a41c      48035710       add rdx, qword [rdi + 0x10]
0x0000a420      4183c308       add r11d, 8
0x0000a424      44891f         mov dword [rdi], r11d
0x0000a427      8b12           mov edx, dword [rdx]
0x0000a429      885010         mov byte [rax + 0x10], dl
0x0000a42c      eb82           jmp 0xa3b0
0x0000a42e      448b1f         mov r11d, dword [rdi]
0x0000a431      4183fb2f       cmp r11d, 0x2f
0x0000a435      0f879f000000   ja 0xa4da
0x0000a43b      4489da         mov edx, r11d
0x0000a43e      48035710       add rdx, qword [rdi + 0x10]
0x0000a442      4183c308       add r11d, 8
0x0000a446      44891f         mov dword [rdi], r11d
0x0000a449      8b12           mov edx, dword [rdx]
0x0000a44b      66895010       mov word [rax + 0x10], dx
0x0000a44f      e95cffffff     jmp 0xa3b0
0x0000a454      448b1f         mov r11d, dword [rdi]
0x0000a457      4183fb2f       cmp r11d, 0x2f
0x0000a45b      0f878a000000   ja 0xa4eb
0x0000a461      4489da         mov edx, r11d
0x0000a464      48035710       add rdx, qword [rdi + 0x10]
0x0000a468      4183c308       add r11d, 8
0x0000a46c      44891f         mov dword [rdi], r11d
0x0000a46f      488b12         mov rdx, qword [rdx]
0x0000a472      4885d2         test rdx, rdx
0x0000a475      490f44d1       cmove rdx, r9                           ; stddef.h:-24
0x0000a479      48895010       mov qword [rax + 0x10], rdx
0x0000a47d      e92effffff     jmp 0xa3b0
0x0000a482      448b5f04       mov r11d, dword [rdi + 4]
0x0000a486      4181fbaf0000.  cmp r11d, 0xaf
0x0000a48d      0f87aa000000   ja 0xa53d
0x0000a493      4489da         mov edx, r11d
0x0000a496      48035710       add rdx, qword [rdi + 0x10]
0x0000a49a      4183c310       add r11d, 0x10
0x0000a49e      44895f04       mov dword [rdi + 4], r11d
0x0000a4a2      f20f1002       movsd xmm0, qword [rdx]
0x0000a4a6      f20f114010     movsd qword [rax + 0x10], xmm0
0x0000a4ab      e900ffffff     jmp 0xa3b0
0x0000a4b0      448b1f         mov r11d, dword [rdi]
0x0000a4b3      4183fb2f       cmp r11d, 0x2f
0x0000a4b7      7743           ja 0xa4fc
0x0000a4b9      4489da         mov edx, r11d
0x0000a4bc      48035710       add rdx, qword [rdi + 0x10]
0x0000a4c0      4183c308       add r11d, 8
0x0000a4c4      44891f         mov dword [rdi], r11d
0x0000a4c7      488b12         mov rdx, qword [rdx]
0x0000a4ca      4885d2         test rdx, rdx
0x0000a4cd      490f44d2       cmove rdx, r10
0x0000a4d1      48895010       mov qword [rax + 0x10], rdx
0x0000a4d5      e9d6feffff     jmp 0xa3b0
0x0000a4da      488b5708       mov rdx, qword [rdi + 8]
0x0000a4de      4c8d5a08       lea r11, [rdx + 8]
0x0000a4e2      4c895f08       mov qword [rdi + 8], r11
0x0000a4e6      e95effffff     jmp 0xa449
0x0000a4eb      488b5708       mov rdx, qword [rdi + 8]
0x0000a4ef      4c8d5a08       lea r11, [rdx + 8]
0x0000a4f3      4c895f08       mov qword [rdi + 8], r11
0x0000a4f7      e973ffffff     jmp 0xa46f
0x0000a4fc      488b5708       mov rdx, qword [rdi + 8]
0x0000a500      4c8d5a08       lea r11, [rdx + 8]
0x0000a504      4c895f08       mov qword [rdi + 8], r11
0x0000a508      ebbd           jmp 0xa4c7
0x0000a50a      488b5708       mov rdx, qword [rdi + 8]
0x0000a50e      4c8d5a08       lea r11, [rdx + 8]
0x0000a512      4c895f08       mov qword [rdi + 8], r11
0x0000a516      e9c6feffff     jmp 0xa3e1
0x0000a51b      488b5708       mov rdx, qword [rdi + 8]
0x0000a51f      4c8d5a08       lea r11, [rdx + 8]
0x0000a523      4c895f08       mov qword [rdi + 8], r11
0x0000a527      e9fbfeffff     jmp 0xa427
0x0000a52c      488b5708       mov rdx, qword [rdi + 8]
0x0000a530      4c8d5a08       lea r11, [rdx + 8]
0x0000a534      4c895f08       mov qword [rdi + 8], r11
0x0000a538      e9c8feffff     jmp 0xa405
0x0000a53d      488b5708       mov rdx, qword [rdi + 8]
0x0000a541      4c8d5a08       lea r11, [rdx + 8]
0x0000a545      4c895f08       mov qword [rdi + 8], r11
0x0000a549      e954ffffff     jmp 0xa4a2
0x0000a54e      6690           nop
;-- printf_parse:
0x0000a550      4157           push r15
0x0000a552      4156           push r14
0x0000a554      488d4e20       lea rcx, [rsi + 0x20]
0x0000a558      4155           push r13
0x0000a55a      4154           push r12
0x0000a55c      488d4210       lea rax, [rdx + 0x10]
0x0000a560      55             push rbp
0x0000a561      53             push rbx
0x0000a562      4989f6         mov r14, rsi
0x0000a565      4989d7         mov r15, rdx
0x0000a568      31db           xor ebx, ebx
0x0000a56a      41b907000000   mov r9d, 7
0x0000a570      4883ec58       sub rsp, 0x58
0x0000a574      41ba07000000   mov r10d, 7
0x0000a57a      48c706000000.  mov qword [rsi], 0
0x0000a581      48894e08       mov qword [rsi + 8], rcx
0x0000a585      48894c2428     mov qword [rsp + 0x28], rcx
0x0000a58a      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0000a591      48c702000000.  mov qword [rdx], 0
0x0000a598      4889442408     mov qword [rsp + 8], rax
0x0000a59d      48894208       mov qword [rdx + 8], rax
0x0000a5a1      48c744241800.  mov qword [rsp + 0x18], 0
0x0000a5aa      48c744241000.  mov qword [rsp + 0x10], 0
0x0000a5b3      48c744242000.  mov qword [rsp + 0x20], 0
0x0000a5bc      eb0d           jmp 0xa5cb
0x0000a5be      6690           nop
0x0000a5c0      3c25           cmp al, 0x25
0x0000a5c2      488d6f01       lea rbp, [rdi + 1]
0x0000a5c6      7440           je 0xa608
0x0000a5c8      4889ef         mov rdi, rbp
0x0000a5cb      0fb607         movzx eax, byte [rdi]
0x0000a5ce      84c0           test al, al
0x0000a5d0      75ee           jne 0xa5c0
0x0000a5d2      488d049b       lea rax, [rbx + rbx*4]
0x0000a5d6      488d0443       lea rax, [rbx + rax*2]
0x0000a5da      48893cc1       mov qword [rcx + rax*8], rdi
0x0000a5de      488b442410     mov rax, qword [rsp + 0x10]
0x0000a5e3      49894610       mov qword [r14 + 0x10], rax
0x0000a5e7      488b442418     mov rax, qword [rsp + 0x18]
0x0000a5ec      49894618       mov qword [r14 + 0x18], rax
0x0000a5f0      31c0           xor eax, eax
0x0000a5f2      4883c458       add rsp, 0x58
0x0000a5f6      5b             pop rbx
0x0000a5f7      5d             pop rbp
0x0000a5f8      415c           pop r12
0x0000a5fa      415d           pop r13
0x0000a5fc      415e           pop r14
0x0000a5fe      415f           pop r15
0x0000a600      c3             ret
0x0000a601      0f1f80000000.  nop dword [rax]
0x0000a608      488d049b       lea rax, [rbx + rbx*4]
0x0000a60c      4d89c5         mov r13, r8
0x0000a60f      488d0443       lea rax, [rbx + rax*2]
0x0000a613      4c8d24c1       lea r12, [rcx + rax*8]
0x0000a617      49893c24       mov qword [r12], rdi
0x0000a61b      41c744241000.  mov dword [r12 + 0x10], 0
0x0000a624      49c744241800.  mov qword [r12 + 0x18], 0
0x0000a62d      49c744242000.  mov qword [r12 + 0x20], 0
0x0000a636      4d89442428     mov qword [r12 + 0x28], r8
0x0000a63b      49c744243000.  mov qword [r12 + 0x30], 0
0x0000a644      49c744243800.  mov qword [r12 + 0x38], 0
0x0000a64d      4d89442440     mov qword [r12 + 0x40], r8
0x0000a652      4d89442450     mov qword [r12 + 0x50], r8
0x0000a657      0fb65f01       movzx ebx, byte [rdi + 1]
0x0000a65b      8d43d0         lea eax, [rbx - 0x30]
0x0000a65e      3c09           cmp al, 9
0x0000a660      773c           ja 0xa69e
0x0000a662      e933040000     jmp 0xaa9a
0x0000a667      660f1f840000.  nop word [rax + rax]
0x0000a670      80fb2d         cmp bl, 0x2d
0x0000a673      7443           je 0xa6b8
0x0000a675      80fb2b         cmp bl, 0x2b
0x0000a678      7446           je 0xa6c0
0x0000a67a      80fb20         cmp bl, 0x20                            ; "@"
0x0000a67d      7451           je 0xa6d0
0x0000a67f      80fb23         cmp bl, 0x23
0x0000a682      745c           je 0xa6e0
0x0000a684      80fb30         cmp bl, 0x30
0x0000a687      7467           je 0xa6f0
0x0000a689      80fb49         cmp bl, 0x49
0x0000a68c      7572           jne 0xa700
0x0000a68e      41834c241040   or dword [r12 + 0x10], 0x40             ; segment.PHDR
                                                                       ; [0x40:4]=6
0x0000a694      0f1f4000       nop dword [rax]
0x0000a698      0fb618         movzx ebx, byte [rax]
0x0000a69b      4889c5         mov rbp, rax
0x0000a69e      488d4501       lea rax, [rbp + 1]
0x0000a6a2      80fb27         cmp bl, 0x27
0x0000a6a5      4889c2         mov rdx, rax
0x0000a6a8      75c6           jne 0xa670
0x0000a6aa      41834c241001   or dword [r12 + 0x10], 1
0x0000a6b0      ebe6           jmp 0xa698
0x0000a6b2      660f1f440000   nop word [rax + rax]
0x0000a6b8      41834c241002   or dword [r12 + 0x10], 2
0x0000a6be      ebd8           jmp 0xa698
0x0000a6c0      41834c241004   or dword [r12 + 0x10], 4
0x0000a6c6      ebd0           jmp 0xa698
0x0000a6c8      0f1f84000000.  nop dword [rax + rax]
0x0000a6d0      41834c241008   or dword [r12 + 0x10], 8
0x0000a6d6      ebc0           jmp 0xa698
0x0000a6d8      0f1f84000000.  nop dword [rax + rax]
0x0000a6e0      41834c241010   or dword [r12 + 0x10], 0x10             ; [0x10:4]=0x3e0003
0x0000a6e6      ebb0           jmp 0xa698
0x0000a6e8      0f1f84000000.  nop dword [rax + rax]
0x0000a6f0      41834c241020   or dword [r12 + 0x10], 0x20             ; [0x20:4]=64 ; "@"
0x0000a6f6      eba0           jmp 0xa698
0x0000a6f8      0f1f84000000.  nop dword [rax + rax]
0x0000a700      80fb2a         cmp bl, 0x2a
0x0000a703      0f84b0010000   je 0xa8b9
0x0000a709      8d4bd0         lea ecx, [rbx - 0x30]
0x0000a70c      80f909         cmp cl, 9
0x0000a70f      0f8612040000   jbe 0xab27
0x0000a715      80fb2e         cmp bl, 0x2e
0x0000a718      0f84d1020000   je 0xa9ef
0x0000a71e      31c0           xor eax, eax
0x0000a720      be01000000     mov esi, 1
0x0000a725      eb30           jmp 0xa757
0x0000a727      660f1f840000.  nop word [rax + rax]
0x0000a730      80fb4c         cmp bl, 0x4c
0x0000a733      743b           je 0xa770
0x0000a735      80fb6c         cmp bl, 0x6c
0x0000a738      7416           je 0xa750
0x0000a73a      80fb6a         cmp bl, 0x6a
0x0000a73d      7411           je 0xa750
0x0000a73f      89da           mov edx, ebx
0x0000a741      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x0000a744      80fa5a         cmp dl, 0x5a
0x0000a747      7407           je 0xa750
0x0000a749      80fb74         cmp bl, 0x74
0x0000a74c      752a           jne 0xa778
0x0000a74e      6690           nop
0x0000a750      83c008         add eax, 8
0x0000a753      0fb65d00       movzx ebx, byte [rbp]
0x0000a757      4883c501       add rbp, 1
0x0000a75b      80fb68         cmp bl, 0x68
0x0000a75e      75d0           jne 0xa730
0x0000a760      89c1           mov ecx, eax
0x0000a762      89f2           mov edx, esi
0x0000a764      83e101         and ecx, 1
0x0000a767      d3e2           shl edx, cl
0x0000a769      09d0           or eax, edx
0x0000a76b      ebe6           jmp 0xa753
0x0000a76d      0f1f00         nop dword [rax]
0x0000a770      83c804         or eax, 4
0x0000a773      ebde           jmp 0xa753
0x0000a775      0f1f00         nop dword [rax]
0x0000a778      8d53db         lea edx, [rbx - 0x25]
0x0000a77b      80fa53         cmp dl, 0x53
0x0000a77e      0f8717060000   ja 0xad9b
0x0000a784      488d0dd13e00.  lea rcx, [0x0000e65c]
0x0000a78b      0fb6d2         movzx edx, dl
0x0000a78e      48631491       movsxd rdx, dword [rcx + rdx*4]
0x0000a792      4801ca         add rdx, rcx
0x0000a795      ffe2           jmp rdx
0x0000a797      41bb10000000   mov r11d, 0x10
0x0000a79d      bb73000000     mov ebx, 0x73                           ; 's'
0x0000a7a2      660f1f440000   nop word [rax + rax]
0x0000a7a8      4983fdff       cmp r13, 0xffffffffffffffff
0x0000a7ac      0f84b5060000   je 0xae67
0x0000a7b2      4d896c2450     mov qword [r12 + 0x50], r13
0x0000a7b7      4d39e9         cmp r9, r13
0x0000a7ba      498b4f08       mov rcx, qword [r15 + 8]
0x0000a7be      0f861c060000   jbe 0xade0
0x0000a7c4      498b07         mov rax, qword [r15]
0x0000a7c7      4889c2         mov rdx, rax
0x0000a7ca      48c1e205       shl rdx, 5
0x0000a7ce      4801ca         add rdx, rcx
0x0000a7d1      4c39e8         cmp rax, r13
0x0000a7d4      7720           ja 0xa7f6
0x0000a7d6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a7e0      4883c001       add rax, 1
0x0000a7e4      c70200000000   mov dword [rdx], 0
0x0000a7ea      4883c220       add rdx, 0x20                           ; "@"
0x0000a7ee      4c39e8         cmp rax, r13
0x0000a7f1      76ed           jbe 0xa7e0
0x0000a7f3      498907         mov qword [r15], rax
0x0000a7f6      49c1e505       shl r13, 5
0x0000a7fa      4a8d0429       lea rax, [rcx + r13]
0x0000a7fe      8b10           mov edx, dword [rax]
0x0000a800      85d2           test edx, edx
0x0000a802      0f85cb050000   jne 0xadd3
0x0000a808      448918         mov dword [rax], r11d
0x0000a80b      41885c2448     mov byte [r12 + 0x48], bl
0x0000a810      498b06         mov rax, qword [r14]
0x0000a813      49896c2408     mov qword [r12 + 8], rbp
0x0000a818      488d5801       lea rbx, [rax + 1]
0x0000a81c      4939da         cmp r10, rbx
0x0000a81f      49891e         mov qword [r14], rbx
0x0000a822      0f8788000000   ja 0xa8b0
0x0000a828      4d85d2         test r10, r10
0x0000a82b      0f88a6090000   js 0xb1d7
0x0000a831      4d01d2         add r10, r10
0x0000a834      48b8bae8a28b.  movabs rax, 0x2e8ba2e8ba2e8ba
0x0000a83e      4939c2         cmp r10, rax
0x0000a841      0f8790090000   ja 0xb1d7
0x0000a847      4b8d0492       lea rax, [r10 + r10*4]
0x0000a84b      498b7e08       mov rdi, qword [r14 + 8]
0x0000a84f      48397c2428     cmp qword [rsp + 0x28], rdi
0x0000a854      4c894c2440     mov qword [rsp + 0x40], r9
0x0000a859      4c89542438     mov qword [rsp + 0x38], r10
0x0000a85e      498d0442       lea rax, [r10 + rax*2]
0x0000a862      4c89442430     mov qword [rsp + 0x30], r8
0x0000a867      488d34c50000.  lea rsi, [rax*8]
0x0000a86f      0f84b8060000   je 0xaf2d
0x0000a875      e8267effff     call sym.imp.realloc
0x0000a87a      4885c0         test rax, rax
0x0000a87d      4889c1         mov rcx, rax
0x0000a880      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000a885      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000a88a      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x0000a88f      0f8442090000   je 0xb1d7
0x0000a895      488b442428     mov rax, qword [rsp + 0x28]
0x0000a89a      493b4608       cmp rax, qword [r14 + 8]
0x0000a89e      498b1e         mov rbx, qword [r14]
0x0000a8a1      0f84a9060000   je 0xaf50
0x0000a8a7      49894e08       mov qword [r14 + 8], rcx
0x0000a8ab      e918fdffff     jmp 0xa5c8
0x0000a8b0      498b4e08       mov rcx, qword [r14 + 8]
0x0000a8b4      e90ffdffff     jmp 0xa5c8
0x0000a8b9      488b742410     mov rsi, qword [rsp + 0x10]
0x0000a8be      b901000000     mov ecx, 1
0x0000a8c3      49896c2418     mov qword [r12 + 0x18], rbp
0x0000a8c8      4989442420     mov qword [r12 + 0x20], rax
0x0000a8cd      4885f6         test rsi, rsi
0x0000a8d0      480f45ce       cmovne rcx, rsi
0x0000a8d4      48894c2410     mov qword [rsp + 0x10], rcx
0x0000a8d9      0fb64d01       movzx ecx, byte [rbp + 1]
0x0000a8dd      8d71d0         lea esi, [rcx - 0x30]
0x0000a8e0      4080fe09       cmp sil, 9
0x0000a8e4      0f86db020000   jbe 0xabc5
0x0000a8ea      488b742420     mov rsi, qword [rsp + 0x20]
0x0000a8ef      4883feff       cmp rsi, 0xffffffffffffffff
0x0000a8f3      488d5601       lea rdx, [rsi + 1]
0x0000a8f7      4989742428     mov qword [r12 + 0x28], rsi
0x0000a8fc      0f8499040000   je 0xad9b
0x0000a902      488b5c2420     mov rbx, qword [rsp + 0x20]
0x0000a907      4889c5         mov rbp, rax
0x0000a90a      4889542420     mov qword [rsp + 0x20], rdx
0x0000a90f      4939d9         cmp r9, rbx
0x0000a912      498b4f08       mov rcx, qword [r15 + 8]
0x0000a916      0f8776060000   ja 0xaf92
0x0000a91c      4d01c9         add r9, r9
0x0000a91f      488d4301       lea rax, [rbx + 1]
0x0000a923      4939d9         cmp r9, rbx
0x0000a926      4c0f46c8       cmovbe r9, rax
0x0000a92a      48b8ffffffff.  movabs rax, 0x7ffffffffffffff           ; 576460752303423487
0x0000a934      4939c1         cmp r9, rax
0x0000a937      0f879e080000   ja 0xb1db
0x0000a93d      4c89ce         mov rsi, r9
0x0000a940      4c894c2440     mov qword [rsp + 0x40], r9
0x0000a945      4c89542438     mov qword [rsp + 0x38], r10
0x0000a94a      48c1e605       shl rsi, 5
0x0000a94e      48394c2408     cmp qword [rsp + 8], rcx
0x0000a953      4c89442430     mov qword [rsp + 0x30], r8
0x0000a958      0f8413070000   je 0xb071
0x0000a95e      4889cf         mov rdi, rcx
0x0000a961      e83a7dffff     call sym.imp.realloc
0x0000a966      498b5708       mov rdx, qword [r15 + 8]
0x0000a96a      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000a96f      4889c1         mov rcx, rax
0x0000a972      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000a977      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x0000a97c      4885c9         test rcx, rcx
0x0000a97f      0f84b2080000   je 0xb237
0x0000a985      4839542408     cmp qword [rsp + 8], rdx
0x0000a98a      498b07         mov rax, qword [r15]
0x0000a98d      0f84b8070000   je 0xb14b
0x0000a993      49894f08       mov qword [r15 + 8], rcx
0x0000a997      4889c2         mov rdx, rax
0x0000a99a      48c1e205       shl rdx, 5
0x0000a99e      4801ca         add rdx, rcx
0x0000a9a1      4839d8         cmp rax, rbx
0x0000a9a4      7720           ja 0xa9c6
0x0000a9a6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a9b0      4883c001       add rax, 1
0x0000a9b4      c70200000000   mov dword [rdx], 0
0x0000a9ba      4883c220       add rdx, 0x20                           ; "@"
0x0000a9be      4839d8         cmp rax, rbx
0x0000a9c1      76ed           jbe 0xa9b0
0x0000a9c3      498907         mov qword [r15], rax
0x0000a9c6      48c1e305       shl rbx, 5
0x0000a9ca      488d0419       lea rax, [rcx + rbx]
0x0000a9ce      8b10           mov edx, dword [rax]
0x0000a9d0      85d2           test edx, edx
0x0000a9d2      0f85d3040000   jne 0xaeab
0x0000a9d8      c70005000000   mov dword [rax], 5
0x0000a9de      0fb65d00       movzx ebx, byte [rbp]
0x0000a9e2      488d5501       lea rdx, [rbp + 1]
0x0000a9e6      80fb2e         cmp bl, 0x2e
0x0000a9e9      0f852ffdffff   jne 0xa71e
0x0000a9ef      807d012a       cmp byte [rbp + 1], 0x2a
0x0000a9f3      49896c2430     mov qword [r12 + 0x30], rbp
0x0000a9f8      0f8580010000   jne 0xab7e
0x0000a9fe      488b742418     mov rsi, qword [rsp + 0x18]
0x0000aa03      4c8d5d02       lea r11, [rbp + 2]
0x0000aa07      b802000000     mov eax, 2
0x0000aa0c      4d895c2438     mov qword [r12 + 0x38], r11
0x0000aa11      4883fe02       cmp rsi, 2
0x0000aa15      480f43c6       cmovae rax, rsi
0x0000aa19      4889442418     mov qword [rsp + 0x18], rax
0x0000aa1e      0fbe4502       movsx eax, byte [rbp + 2]
0x0000aa22      8d50d0         lea edx, [rax - 0x30]
0x0000aa25      80fa09         cmp dl, 9
0x0000aa28      0f868e060000   jbe 0xb0bc
0x0000aa2e      498b5c2440     mov rbx, qword [r12 + 0x40]
0x0000aa33      4883fbff       cmp rbx, 0xffffffffffffffff
0x0000aa37      0f8458060000   je 0xb095
0x0000aa3d      4939d9         cmp r9, rbx
0x0000aa40      498b4f08       mov rcx, qword [r15 + 8]
0x0000aa44      0f8665050000   jbe 0xafaf
0x0000aa4a      498b07         mov rax, qword [r15]
0x0000aa4d      4889c2         mov rdx, rax
0x0000aa50      48c1e205       shl rdx, 5
0x0000aa54      4801ca         add rdx, rcx
0x0000aa57      4839d8         cmp rax, rbx
0x0000aa5a      771a           ja 0xaa76
0x0000aa5c      0f1f4000       nop dword [rax]
0x0000aa60      4883c001       add rax, 1
0x0000aa64      c70200000000   mov dword [rdx], 0
0x0000aa6a      4883c220       add rdx, 0x20                           ; "@"
0x0000aa6e      4839d8         cmp rax, rbx
0x0000aa71      76ed           jbe 0xaa60
0x0000aa73      498907         mov qword [r15], rax
0x0000aa76      48c1e305       shl rbx, 5
0x0000aa7a      488d0419       lea rax, [rcx + rbx]
0x0000aa7e      8b10           mov edx, dword [rax]
0x0000aa80      85d2           test edx, edx
0x0000aa82      0f8512050000   jne 0xaf9a
0x0000aa88      c70005000000   mov dword [rax], 5
0x0000aa8e      4c89dd         mov rbp, r11
0x0000aa91      410fb61b       movzx ebx, byte [r11]
0x0000aa95      e984fcffff     jmp 0xa71e
0x0000aa9a      4889e8         mov rax, rbp
0x0000aa9d      0f1f00         nop dword [rax]
0x0000aaa0      4883c001       add rax, 1
0x0000aaa4      0fb610         movzx edx, byte [rax]
0x0000aaa7      8d4ad0         lea ecx, [rdx - 0x30]
0x0000aaaa      80f909         cmp cl, 9
0x0000aaad      76f1           jbe 0xaaa0
0x0000aaaf      80fa24         cmp dl, 0x24
0x0000aab2      4d89c5         mov r13, r8
0x0000aab5      0f85e3fbffff   jne 0xa69e
0x0000aabb      31d2           xor edx, edx
0x0000aabd      0fbec3         movsx eax, bl
0x0000aac0      48bf99999999.  movabs rdi, 0x1999999999999999
0x0000aaca      4c89c6         mov rsi, r8
0x0000aacd      83e830         sub eax, 0x30
0x0000aad0      4839fa         cmp rdx, rdi
0x0000aad3      4898           cdqe
0x0000aad5      7707           ja 0xaade
0x0000aad7      488d3492       lea rsi, [rdx + rdx*4]
0x0000aadb      4801f6         add rsi, rsi
0x0000aade      4889e9         mov rcx, rbp
0x0000aae1      4801f0         add rax, rsi
0x0000aae4      0fb65d01       movzx ebx, byte [rbp + 1]
0x0000aae8      400f92c6       setb sil
0x0000aaec      4883c501       add rbp, 1
0x0000aaf0      4889c2         mov rdx, rax
0x0000aaf3      400fb6f6       movzx esi, sil
0x0000aaf7      4885f6         test rsi, rsi
0x0000aafa      8d7bd0         lea edi, [rbx - 0x30]
0x0000aafd      0f858b030000   jne 0xae8e
0x0000ab03      4080ff09       cmp dil, 9
0x0000ab07      76b4           jbe 0xaabd
0x0000ab09      4989c5         mov r13, rax
0x0000ab0c      4983ed01       sub r13, 1
0x0000ab10      4983fdfd       cmp r13, 0xfffffffffffffffd
0x0000ab14      0f8781020000   ja 0xad9b
0x0000ab1a      488d6902       lea rbp, [rcx + 2]
0x0000ab1e      0fb65902       movzx ebx, byte [rcx + 2]
0x0000ab22      e977fbffff     jmp 0xa69e
0x0000ab27      49896c2418     mov qword [r12 + 0x18], rbp
0x0000ab2c      0fb67d00       movzx edi, byte [rbp]
0x0000ab30      4889ee         mov rsi, rbp
0x0000ab33      8d4fd0         lea ecx, [rdi - 0x30]
0x0000ab36      80f909         cmp cl, 9
0x0000ab39      760c           jbe 0xab47
0x0000ab3b      eb33           jmp 0xab70
0x0000ab3d      0f1f00         nop dword [rax]
0x0000ab40      4889c5         mov rbp, rax
0x0000ab43      4883c001       add rax, 1
0x0000ab47      0fb638         movzx edi, byte [rax]
0x0000ab4a      8d57d0         lea edx, [rdi - 0x30]
0x0000ab4d      80fa09         cmp dl, 9
0x0000ab50      76ee           jbe 0xab40
0x0000ab52      4889c1         mov rcx, rax
0x0000ab55      488d5502       lea rdx, [rbp + 2]
0x0000ab59      4889c5         mov rbp, rax
0x0000ab5c      4829f1         sub rcx, rsi
0x0000ab5f      488b742410     mov rsi, qword [rsp + 0x10]
0x0000ab64      4839ce         cmp rsi, rcx
0x0000ab67      480f43ce       cmovae rcx, rsi
0x0000ab6b      48894c2410     mov qword [rsp + 0x10], rcx
0x0000ab70      49896c2420     mov qword [r12 + 0x20], rbp
0x0000ab75      0fb65d00       movzx ebx, byte [rbp]
0x0000ab79      e997fbffff     jmp 0xa715
0x0000ab7e      0fb64501       movzx eax, byte [rbp + 1]
0x0000ab82      83e830         sub eax, 0x30
0x0000ab85      3c09           cmp al, 9
0x0000ab87      7715           ja 0xab9e
0x0000ab89      0f1f80000000.  nop dword [rax]
0x0000ab90      4883c201       add rdx, 1
0x0000ab94      0fb602         movzx eax, byte [rdx]
0x0000ab97      83e830         sub eax, 0x30
0x0000ab9a      3c09           cmp al, 9
0x0000ab9c      76f2           jbe 0xab90
0x0000ab9e      488b742418     mov rsi, qword [rsp + 0x18]
0x0000aba3      4889d0         mov rax, rdx
0x0000aba6      4989542438     mov qword [r12 + 0x38], rdx
0x0000abab      4829e8         sub rax, rbp
0x0000abae      0fb61a         movzx ebx, byte [rdx]
0x0000abb1      4889d5         mov rbp, rdx
0x0000abb4      4839c6         cmp rsi, rax
0x0000abb7      480f43c6       cmovae rax, rsi
0x0000abbb      4889442418     mov qword [rsp + 0x18], rax
0x0000abc0      e959fbffff     jmp 0xa71e
0x0000abc5      4889c6         mov rsi, rax
0x0000abc8      4883c601       add rsi, 1
0x0000abcc      0fb63e         movzx edi, byte [rsi]
0x0000abcf      448d5fd0       lea r11d, [rdi - 0x30]
0x0000abd3      4180fb09       cmp r11b, 9
0x0000abd7      76ef           jbe 0xabc8
0x0000abd9      4080ff24       cmp dil, 0x24
0x0000abdd      0f8507fdffff   jne 0xa8ea
0x0000abe3      31f6           xor esi, esi
0x0000abe5      0fbec1         movsx eax, cl
0x0000abe8      48bf99999999.  movabs rdi, 0x1999999999999999
0x0000abf2      4c89c1         mov rcx, r8
0x0000abf5      83e830         sub eax, 0x30
0x0000abf8      4839fe         cmp rsi, rdi
0x0000abfb      4898           cdqe
0x0000abfd      7707           ja 0xac06
0x0000abff      488d0cb6       lea rcx, [rsi + rsi*4]
0x0000ac03      4801c9         add rcx, rcx
0x0000ac06      4889d5         mov rbp, rdx
0x0000ac09      4531db         xor r11d, r11d
0x0000ac0c      4801c8         add rax, rcx
0x0000ac0f      0fb64a01       movzx ecx, byte [rdx + 1]
0x0000ac13      410f92c3       setb r11b
0x0000ac17      4883c201       add rdx, 1
0x0000ac1b      4889c6         mov rsi, rax
0x0000ac1e      4d85db         test r11, r11
0x0000ac21      8d79d0         lea edi, [rcx - 0x30]
0x0000ac24      0f8504050000   jne 0xb12e
0x0000ac2a      4080ff09       cmp dil, 9
0x0000ac2e      76b5           jbe 0xabe5
0x0000ac30      488d58ff       lea rbx, [rax - 1]
0x0000ac34      4883fbfd       cmp rbx, 0xfffffffffffffffd
0x0000ac38      0f875d010000   ja 0xad9b
0x0000ac3e      49895c2428     mov qword [r12 + 0x28], rbx
0x0000ac43      4883c502       add rbp, 2
0x0000ac47      e9c3fcffff     jmp 0xa90f
0x0000ac4c      83f80f         cmp eax, 0xf
0x0000ac4f      41bb16000000   mov r11d, 0x16
0x0000ac55      0f8f4dfbffff   jg 0xa7a8
0x0000ac5b      a804           test al, 4
0x0000ac5d      0f8545fbffff   jne 0xa7a8
0x0000ac63      83f807         cmp eax, 7
0x0000ac66      41bb15000000   mov r11d, 0x15
0x0000ac6c      0f8f36fbffff   jg 0xa7a8
0x0000ac72      a802           test al, 2
0x0000ac74      41bb12000000   mov r11d, 0x12
0x0000ac7a      0f8528fbffff   jne 0xa7a8
0x0000ac80      4531db         xor r11d, r11d
0x0000ac83      a801           test al, 1
0x0000ac85      410f94c3       sete r11b
0x0000ac89      4183c313       add r11d, 0x13
0x0000ac8d      e916fbffff     jmp 0xa7a8
0x0000ac92      660f1f440000   nop word [rax + rax]
0x0000ac98      4531db         xor r11d, r11d
0x0000ac9b      83f807         cmp eax, 7
0x0000ac9e      410f9fc3       setg r11b
0x0000aca2      4183c30d       add r11d, 0xd
0x0000aca6      e9fdfaffff     jmp 0xa7a8
0x0000acab      83f80f         cmp eax, 0xf
0x0000acae      41bb09000000   mov r11d, 9
0x0000acb4      0f8feefaffff   jg 0xa7a8
0x0000acba      a804           test al, 4
0x0000acbc      0f85e6faffff   jne 0xa7a8
0x0000acc2      83f807         cmp eax, 7
0x0000acc5      41bb07000000   mov r11d, 7
0x0000accb      0f8fd7faffff   jg 0xa7a8
0x0000acd1      a802           test al, 2
0x0000acd3      41bb01000000   mov r11d, 1
0x0000acd9      0f85c9faffff   jne 0xa7a8
0x0000acdf      83e001         and eax, 1
0x0000ace2      83f801         cmp eax, 1
0x0000ace5      4519db         sbb r11d, r11d
0x0000ace8      4183e302       and r11d, 2
0x0000acec      4183c303       add r11d, 3
0x0000acf0      e9b3faffff     jmp 0xa7a8
0x0000acf5      0f1f00         nop dword [rax]
0x0000acf8      4531db         xor r11d, r11d
0x0000acfb      83f807         cmp eax, 7
0x0000acfe      410f9fc3       setg r11b
0x0000ad02      4183c30f       add r11d, 0xf
0x0000ad06      e99dfaffff     jmp 0xa7a8
0x0000ad0b      83f80f         cmp eax, 0xf
0x0000ad0e      41bb0c000000   mov r11d, 0xc
0x0000ad14      0f8f8efaffff   jg 0xa7a8
0x0000ad1a      4531db         xor r11d, r11d
0x0000ad1d      a804           test al, 4
0x0000ad1f      410f95c3       setne r11b
0x0000ad23      4183c30b       add r11d, 0xb
0x0000ad27      e97cfaffff     jmp 0xa7a8
0x0000ad2c      41bb0e000000   mov r11d, 0xe
0x0000ad32      bb63000000     mov ebx, 0x63                           ; 'c'
0x0000ad37      e96cfaffff     jmp 0xa7a8
0x0000ad3c      83f80f         cmp eax, 0xf
0x0000ad3f      41bb0a000000   mov r11d, 0xa
0x0000ad45      0f8f5dfaffff   jg 0xa7a8
0x0000ad4b      a804           test al, 4
0x0000ad4d      0f8555faffff   jne 0xa7a8
0x0000ad53      83f807         cmp eax, 7
0x0000ad56      41bb08000000   mov r11d, 8
0x0000ad5c      0f8f46faffff   jg 0xa7a8
0x0000ad62      a802           test al, 2
0x0000ad64      41bb02000000   mov r11d, 2
0x0000ad6a      0f8538faffff   jne 0xa7a8
0x0000ad70      83e001         and eax, 1
0x0000ad73      83f801         cmp eax, 1
0x0000ad76      4519db         sbb r11d, r11d
0x0000ad79      4183e302       and r11d, 2
0x0000ad7d      4183c304       add r11d, 4
0x0000ad81      e922faffff     jmp 0xa7a8
0x0000ad86      662e0f1f8400.  nop word cs:[rax + rax]
0x0000ad90      41bb11000000   mov r11d, 0x11
0x0000ad96      e90dfaffff     jmp 0xa7a8
0x0000ad9b      498b4f08       mov rcx, qword [r15 + 8]
0x0000ad9f      48394c2408     cmp qword [rsp + 8], rcx
0x0000ada4      7408           je 0xadae
0x0000ada6      4889cf         mov rdi, rcx
0x0000ada9      e88276ffff     call sym.imp.free
0x0000adae      498b7e08       mov rdi, qword [r14 + 8]
0x0000adb2      48397c2428     cmp qword [rsp + 0x28], rdi
0x0000adb7      7405           je 0xadbe
0x0000adb9      e87276ffff     call sym.imp.free
0x0000adbe      e88d76ffff     call sym.imp.__errno_location
0x0000adc3      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x33500000
0x0000adc9      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000adce      e91ff8ffff     jmp 0xa5f2
0x0000add3      4439da         cmp edx, r11d
0x0000add6      0f842ffaffff   je 0xa80b
0x0000addc      ebc1           jmp 0xad9f
0x0000adde      6690           nop
0x0000ade0      4d01c9         add r9, r9
0x0000ade3      498d4501       lea rax, [r13 + 1]
0x0000ade7      4d39e9         cmp r9, r13
0x0000adea      4c0f46c8       cmovbe r9, rax
0x0000adee      48b8ffffffff.  movabs rax, 0x7ffffffffffffff           ; 576460752303423487
0x0000adf8      4939c1         cmp r9, rax
0x0000adfb      0f87da030000   ja 0xb1db
0x0000ae01      4c89ce         mov rsi, r9
0x0000ae04      4c894c2448     mov qword [rsp + 0x48], r9
0x0000ae09      4c89542440     mov qword [rsp + 0x40], r10
0x0000ae0e      48c1e605       shl rsi, 5
0x0000ae12      48394c2408     cmp qword [rsp + 8], rcx
0x0000ae17      4c89442438     mov qword [rsp + 0x38], r8
0x0000ae1c      44895c2430     mov dword [rsp + 0x30], r11d
0x0000ae21      0f849a000000   je 0xaec1
0x0000ae27      4889cf         mov rdi, rcx
0x0000ae2a      e87178ffff     call sym.imp.realloc
0x0000ae2f      4885c0         test rax, rax
0x0000ae32      4889c1         mov rcx, rax
0x0000ae35      448b5c2430     mov r11d, dword [rsp + 0x30]
0x0000ae3a      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000ae3f      4c8b542440     mov r10, qword [rsp + 0x40]
0x0000ae44      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x0000ae49      0f8488030000   je 0xb1d7
0x0000ae4f      488b442408     mov rax, qword [rsp + 8]
0x0000ae54      493b4708       cmp rax, qword [r15 + 8]
0x0000ae58      0f848b000000   je 0xaee9
0x0000ae5e      49894f08       mov qword [r15 + 8], rcx
0x0000ae62      e95df9ffff     jmp 0xa7c4
0x0000ae67      488b742420     mov rsi, qword [rsp + 0x20]
0x0000ae6c      4883feff       cmp rsi, 0xffffffffffffffff
0x0000ae70      488d4601       lea rax, [rsi + 1]
0x0000ae74      4989742450     mov qword [r12 + 0x50], rsi
0x0000ae79      0f841cffffff   je 0xad9b
0x0000ae7f      4c8b6c2420     mov r13, qword [rsp + 0x20]
0x0000ae84      4889442420     mov qword [rsp + 0x20], rax
0x0000ae89      e929f9ffff     jmp 0xa7b7
0x0000ae8e      4080ff09       cmp dil, 9
0x0000ae92      0f8703ffffff   ja 0xad9b
0x0000ae98      0fbec3         movsx eax, bl
0x0000ae9b      4c89c6         mov rsi, r8
0x0000ae9e      4889e9         mov rcx, rbp
0x0000aea1      83e830         sub eax, 0x30
0x0000aea4      4898           cdqe
0x0000aea6      e936fcffff     jmp 0xaae1
0x0000aeab      83fa05         cmp edx, 5
0x0000aeae      0f85ebfeffff   jne 0xad9f
0x0000aeb4      0fb65d00       movzx ebx, byte [rbp]
0x0000aeb8      488d5501       lea rdx, [rbp + 1]
0x0000aebc      e954f8ffff     jmp 0xa715
0x0000aec1      4889f7         mov rdi, rsi
0x0000aec4      e89777ffff     call sym.imp.malloc
0x0000aec9      4885c0         test rax, rax
0x0000aecc      4889c1         mov rcx, rax
0x0000aecf      448b5c2430     mov r11d, dword [rsp + 0x30]
0x0000aed4      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000aed9      4c8b542440     mov r10, qword [rsp + 0x40]
0x0000aede      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x0000aee3      0f8463010000   je 0xb04c
0x0000aee9      498b17         mov rdx, qword [r15]
0x0000aeec      488b742408     mov rsi, qword [rsp + 8]
0x0000aef1      4889cf         mov rdi, rcx
0x0000aef4      4c894c2448     mov qword [rsp + 0x48], r9
0x0000aef9      4c89542440     mov qword [rsp + 0x40], r10
0x0000aefe      4c89442438     mov qword [rsp + 0x38], r8
0x0000af03      44895c2430     mov dword [rsp + 0x30], r11d
0x0000af08      48c1e205       shl rdx, 5
0x0000af0c      e82f77ffff     call sym.imp.memcpy
0x0000af11      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x0000af16      4c8b542440     mov r10, qword [rsp + 0x40]
0x0000af1b      4889c1         mov rcx, rax
0x0000af1e      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000af23      448b5c2430     mov r11d, dword [rsp + 0x30]
0x0000af28      e931ffffff     jmp 0xae5e
0x0000af2d      4889f7         mov rdi, rsi
0x0000af30      e82b77ffff     call sym.imp.malloc
0x0000af35      4885c0         test rax, rax
0x0000af38      4889c1         mov rcx, rax
0x0000af3b      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000af40      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000af45      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x0000af4a      0f84e9000000   je 0xb039
0x0000af50      488d049b       lea rax, [rbx + rbx*4]
0x0000af54      488b742428     mov rsi, qword [rsp + 0x28]
0x0000af59      4889cf         mov rdi, rcx
0x0000af5c      4c894c2440     mov qword [rsp + 0x40], r9
0x0000af61      4c89542438     mov qword [rsp + 0x38], r10
0x0000af66      488d1443       lea rdx, [rbx + rax*2]
0x0000af6a      4c89442430     mov qword [rsp + 0x30], r8
0x0000af6f      48c1e203       shl rdx, 3
0x0000af73      e8c876ffff     call sym.imp.memcpy
0x0000af78      498b1e         mov rbx, qword [r14]
0x0000af7b      4889c1         mov rcx, rax
0x0000af7e      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x0000af83      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000af88      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000af8d      e915f9ffff     jmp 0xa8a7
0x0000af92      498b07         mov rax, qword [r15]
0x0000af95      e9fdf9ffff     jmp 0xa997
0x0000af9a      83fa05         cmp edx, 5
0x0000af9d      0f85fcfdffff   jne 0xad9f
0x0000afa3      410fb61b       movzx ebx, byte [r11]
0x0000afa7      4c89dd         mov rbp, r11
0x0000afaa      e96ff7ffff     jmp 0xa71e
0x0000afaf      4d01c9         add r9, r9
0x0000afb2      488d4301       lea rax, [rbx + 1]
0x0000afb6      4939d9         cmp r9, rbx
0x0000afb9      4c0f46c8       cmovbe r9, rax
0x0000afbd      48b8ffffffff.  movabs rax, 0x7ffffffffffffff           ; 576460752303423487
0x0000afc7      4939c1         cmp r9, rax
0x0000afca      0f870b020000   ja 0xb1db
0x0000afd0      4c89ce         mov rsi, r9
0x0000afd3      4c894c2448     mov qword [rsp + 0x48], r9
0x0000afd8      4c89542440     mov qword [rsp + 0x40], r10
0x0000afdd      48c1e605       shl rsi, 5
0x0000afe1      48394c2408     cmp qword [rsp + 8], rcx
0x0000afe6      4c89442438     mov qword [rsp + 0x38], r8
0x0000afeb      4c895c2430     mov qword [rsp + 0x30], r11
0x0000aff0      0f84b8010000   je 0xb1ae
0x0000aff6      4889cf         mov rdi, rcx
0x0000aff9      e8a276ffff     call sym.imp.realloc
0x0000affe      498b5708       mov rdx, qword [r15 + 8]
0x0000b002      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x0000b007      4889c1         mov rcx, rax
0x0000b00a      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000b00f      4c8b542440     mov r10, qword [rsp + 0x40]
0x0000b014      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x0000b019      4885c9         test rcx, rcx
0x0000b01c      0f8415020000   je 0xb237
0x0000b022      4839542408     cmp qword [rsp + 8], rdx
0x0000b027      498b07         mov rax, qword [r15]
0x0000b02a      0f84c0010000   je 0xb1f0
0x0000b030      49894f08       mov qword [r15 + 8], rcx
0x0000b034      e914faffff     jmp 0xaa4d
0x0000b039      498b4f08       mov rcx, qword [r15 + 8]
0x0000b03d      48394c2408     cmp qword [rsp + 8], rcx
0x0000b042      7418           je 0xb05c
0x0000b044      4889cf         mov rdi, rcx
0x0000b047      e8e473ffff     call sym.imp.free
0x0000b04c      498b7e08       mov rdi, qword [r14 + 8]
0x0000b050      48397c2428     cmp qword [rsp + 0x28], rdi
0x0000b055      7405           je 0xb05c
0x0000b057      e8d473ffff     call sym.imp.free
0x0000b05c      e8ef73ffff     call sym.imp.__errno_location
0x0000b061      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0000b067      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000b06c      e981f5ffff     jmp 0xa5f2
0x0000b071      4889f7         mov rdi, rsi
0x0000b074      e8e775ffff     call sym.imp.malloc
0x0000b079      488b542408     mov rdx, qword [rsp + 8]
0x0000b07e      4889c1         mov rcx, rax
0x0000b081      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x0000b086      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000b08b      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000b090      e9e7f8ffff     jmp 0xa97c
0x0000b095      488b742420     mov rsi, qword [rsp + 0x20]
0x0000b09a      4883feff       cmp rsi, 0xffffffffffffffff
0x0000b09e      488d4601       lea rax, [rsi + 1]
0x0000b0a2      4989742440     mov qword [r12 + 0x40], rsi
0x0000b0a7      0f84eefcffff   je 0xad9b
0x0000b0ad      488b5c2420     mov rbx, qword [rsp + 0x20]
0x0000b0b2      4889442420     mov qword [rsp + 0x20], rax
0x0000b0b7      e981f9ffff     jmp 0xaa3d
0x0000b0bc      4c89da         mov rdx, r11
0x0000b0bf      4883c201       add rdx, 1
0x0000b0c3      0fb60a         movzx ecx, byte [rdx]
0x0000b0c6      8d71d0         lea esi, [rcx - 0x30]
0x0000b0c9      4080fe09       cmp sil, 9
0x0000b0cd      76f0           jbe 0xb0bf
0x0000b0cf      80f924         cmp cl, 0x24
0x0000b0d2      0f8556f9ffff   jne 0xaa2e
0x0000b0d8      31c9           xor ecx, ecx
0x0000b0da      48be99999999.  movabs rsi, 0x1999999999999999
0x0000b0e4      83e830         sub eax, 0x30
0x0000b0e7      4c89c2         mov rdx, r8
0x0000b0ea      4839f1         cmp rcx, rsi
0x0000b0ed      4898           cdqe
0x0000b0ef      7707           ja 0xb0f8
0x0000b0f1      488d1489       lea rdx, [rcx + rcx*4]
0x0000b0f5      4801d2         add rdx, rdx
0x0000b0f8      4c89de         mov rsi, r11
0x0000b0fb      31db           xor ebx, ebx
0x0000b0fd      4801c2         add rdx, rax
0x0000b100      410fbe4301     movsx eax, byte [r11 + 1]
0x0000b105      0f92c3         setb bl
0x0000b108      4983c301       add r11, 1
0x0000b10c      4889d1         mov rcx, rdx
0x0000b10f      4885db         test rbx, rbx
0x0000b112      8d78d0         lea edi, [rax - 0x30]
0x0000b115      7471           je 0xb188
0x0000b117      4080ff09       cmp dil, 9
0x0000b11b      0f877afcffff   ja 0xad9b
0x0000b121      83e830         sub eax, 0x30
0x0000b124      4c89c2         mov rdx, r8
0x0000b127      4c89de         mov rsi, r11
0x0000b12a      4898           cdqe
0x0000b12c      ebcd           jmp 0xb0fb
0x0000b12e      4080ff09       cmp dil, 9
0x0000b132      0f8763fcffff   ja 0xad9b
0x0000b138      0fbec1         movsx eax, cl
0x0000b13b      4889d5         mov rbp, rdx
0x0000b13e      4c89c1         mov rcx, r8
0x0000b141      83e830         sub eax, 0x30
0x0000b144      4898           cdqe
0x0000b146      e9befaffff     jmp 0xac09
0x0000b14b      488b742408     mov rsi, qword [rsp + 8]
0x0000b150      48c1e005       shl rax, 5
0x0000b154      4889cf         mov rdi, rcx
0x0000b157      4889c2         mov rdx, rax
0x0000b15a      4c894c2440     mov qword [rsp + 0x40], r9
0x0000b15f      4c89542438     mov qword [rsp + 0x38], r10
0x0000b164      4c89442430     mov qword [rsp + 0x30], r8
0x0000b169      e8d274ffff     call sym.imp.memcpy
0x0000b16e      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x0000b173      4889c1         mov rcx, rax
0x0000b176      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000b17b      498b07         mov rax, qword [r15]
0x0000b17e      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000b183      e90bf8ffff     jmp 0xa993
0x0000b188      4080ff09       cmp dil, 9
0x0000b18c      0f8648ffffff   jbe 0xb0da
0x0000b192      488d5aff       lea rbx, [rdx - 1]
0x0000b196      4883fbfd       cmp rbx, 0xfffffffffffffffd
0x0000b19a      0f87fbfbffff   ja 0xad9b
0x0000b1a0      49895c2440     mov qword [r12 + 0x40], rbx
0x0000b1a5      4c8d5e02       lea r11, [rsi + 2]
0x0000b1a9      e98ff8ffff     jmp 0xaa3d
0x0000b1ae      4889f7         mov rdi, rsi
0x0000b1b1      e8aa74ffff     call sym.imp.malloc
0x0000b1b6      488b542408     mov rdx, qword [rsp + 8]
0x0000b1bb      4889c1         mov rcx, rax
0x0000b1be      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x0000b1c3      4c8b542440     mov r10, qword [rsp + 0x40]
0x0000b1c8      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000b1cd      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x0000b1d2      e942feffff     jmp 0xb019
0x0000b1d7      498b4f08       mov rcx, qword [r15 + 8]
0x0000b1db      48394c2408     cmp qword [rsp + 8], rcx
0x0000b1e0      0f855efeffff   jne 0xb044
0x0000b1e6      e961feffff     jmp 0xb04c
0x0000b1eb      0f1f440000     nop dword [rax + rax]
0x0000b1f0      488b742408     mov rsi, qword [rsp + 8]
0x0000b1f5      48c1e005       shl rax, 5
0x0000b1f9      4889cf         mov rdi, rcx
0x0000b1fc      4889c2         mov rdx, rax
0x0000b1ff      4c894c2448     mov qword [rsp + 0x48], r9
0x0000b204      4c89542440     mov qword [rsp + 0x40], r10
0x0000b209      4c89442438     mov qword [rsp + 0x38], r8
0x0000b20e      4c895c2430     mov qword [rsp + 0x30], r11
0x0000b213      e82874ffff     call sym.imp.memcpy
0x0000b218      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x0000b21d      4889c1         mov rcx, rax
0x0000b220      4c8b542440     mov r10, qword [rsp + 0x40]
0x0000b225      498b07         mov rax, qword [r15]
0x0000b228      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000b22d      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x0000b232      e9f9fdffff     jmp 0xb030
0x0000b237      4889d1         mov rcx, rdx
0x0000b23a      eb9f           jmp 0xb1db
0x0000b23c      0f1f4000       nop dword [rax]
;-- __libc_csu_init:
0x0000b240      4157           push r15
0x0000b242      4156           push r14
0x0000b244      4989d7         mov r15, rdx
0x0000b247      4155           push r13
0x0000b249      4154           push r12
0x0000b24b      4c8d25fe4720.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x20fa50 ; "P4"
0x0000b252      55             push rbp
0x0000b253      488d2dfe4720.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x20fa58
0x0000b25a      53             push rbx
0x0000b25b      4189fd         mov r13d, edi
0x0000b25e      4989f6         mov r14, rsi
0x0000b261      4c29e5         sub rbp, r12
0x0000b264      4883ec08       sub rsp, 8
0x0000b268      48c1fd03       sar rbp, 3
0x0000b26c      e86f71ffff     call sym._init
0x0000b271      4885ed         test rbp, rbp
0x0000b274      7420           je 0xb296
0x0000b276      31db           xor ebx, ebx
0x0000b278      0f1f84000000.  nop dword [rax + rax]
0x0000b280      4c89fa         mov rdx, r15
0x0000b283      4c89f6         mov rsi, r14
0x0000b286      4489ef         mov edi, r13d
0x0000b289      41ff14dc       call qword [r12 + rbx*8]
0x0000b28d      4883c301       add rbx, 1
0x0000b291      4839dd         cmp rbp, rbx
0x0000b294      75ea           jne 0xb280
0x0000b296      4883c408       add rsp, 8
0x0000b29a      5b             pop rbx
0x0000b29b      5d             pop rbp
0x0000b29c      415c           pop r12
0x0000b29e      415d           pop r13
0x0000b2a0      415e           pop r14
0x0000b2a2      415f           pop r15
0x0000b2a4      c3             ret
0x0000b2a5      90             nop
0x0000b2a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x0000b2b0      f3c3           ret
0x0000b2b2      662e0f1f8400.  nop word cs:[rax + rax]
0x0000b2bc      0f1f4000       nop dword [rax]
;-- atexit:
0x0000b2c0      488b15415d20.  mov rdx, qword [obj.__dso_handle]       ; [0x211008:8]=0x211008 obj.__dso_handle
0x0000b2c7      31f6           xor esi, esi
0x0000b2c9      e98274ffff     jmp sym.imp.__cxa_atexit
0x0000b2ce      0000           add byte [rax], al
