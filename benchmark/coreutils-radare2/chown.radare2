;-- section..plt:
;-- .plt:
0x00001990      ff35fad32000   push qword [0x0020ed90]                 ; [12] -r-x section size 1104 named .plt
0x00001996      ff25fcd32000   jmp qword [0x0020ed98]                  ; [0x20ed98:8]=0
0x0000199c      0f1f4000       nop dword [rax]
;-- imp.endgrent:
0x000019a0      ff25fad32000   jmp qword [reloc.endgrent]              ; [0x20eda0:8]=0x19a6
0x000019a6      6800000000     push 0
0x000019ab      e9e0ffffff     jmp sym..plt
;-- imp.abort:
0x000019b0      ff25f2d32000   jmp qword [reloc.abort]                 ; [0x20eda8:8]=0x19b6
0x000019b6      6801000000     push 1
0x000019bb      e9d0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x000019c0      ff25ead32000   jmp qword [reloc.__errno_location]      ; [0x20edb0:8]=0x19c6
0x000019c6      6802000000     push 2
0x000019cb      e9c0ffffff     jmp sym..plt
;-- imp.strncmp:
0x000019d0      ff25e2d32000   jmp qword [reloc.strncmp]               ; [0x20edb8:8]=0x19d6
0x000019d6      6803000000     push 3
0x000019db      e9b0ffffff     jmp sym..plt
;-- imp._exit:
0x000019e0      ff25dad32000   jmp qword [reloc._exit]                 ; [0x20edc0:8]=0x19e6
0x000019e6      6804000000     push 4
0x000019eb      e9a0ffffff     jmp sym..plt
;-- imp.strcpy:
0x000019f0      ff25d2d32000   jmp qword [reloc.strcpy]                ; [0x20edc8:8]=0x19f6
0x000019f6      6805000000     push 5
0x000019fb      e990ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001a00      ff25cad32000   jmp qword [reloc.__fpending]            ; [0x20edd0:8]=0x1a06
0x00001a06      6806000000     push 6
0x00001a0b      e980ffffff     jmp sym..plt
;-- imp.qsort:
0x00001a10      ff25c2d32000   jmp qword [reloc.qsort]                 ; [0x20edd8:8]=0x1a16
0x00001a16      6807000000     push 7
0x00001a1b      e970ffffff     jmp sym..plt
;-- imp.fcntl:
0x00001a20      ff25bad32000   jmp qword [reloc.fcntl]                 ; [0x20ede0:8]=0x1a26 ; "&\x1a"
0x00001a26      6808000000     push 8
0x00001a2b      e960ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001a30      ff25b2d32000   jmp qword [reloc.textdomain]            ; [0x20ede8:8]=0x1a36 ; "6\x1a"
0x00001a36      6809000000     push 9
0x00001a3b      e950ffffff     jmp sym..plt
;-- imp.fclose:
0x00001a40      ff25aad32000   jmp qword [reloc.fclose]                ; [0x20edf0:8]=0x1a46 ; "F\x1a"
0x00001a46      680a000000     push 0xa
0x00001a4b      e940ffffff     jmp sym..plt
;-- imp.getpwuid:
0x00001a50      ff25a2d32000   jmp qword [reloc.getpwuid]              ; [0x20edf8:8]=0x1a56 ; "V\x1a"
0x00001a56      680b000000     push 0xb
0x00001a5b      e930ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001a60      ff259ad32000   jmp qword [reloc.bindtextdomain]        ; [0x20ee00:8]=0x1a66 ; "f\x1a"
0x00001a66      680c000000     push 0xc
0x00001a6b      e920ffffff     jmp sym..plt
;-- imp.stpcpy:
0x00001a70      ff2592d32000   jmp qword [reloc.stpcpy]                ; [0x20ee08:8]=0x1a76 ; "v\x1a"
0x00001a76      680d000000     push 0xd
0x00001a7b      e910ffffff     jmp sym..plt
;-- imp.dcgettext:
0x00001a80      ff258ad32000   jmp qword [reloc.dcgettext]             ; [0x20ee10:8]=0x1a86
0x00001a86      680e000000     push 0xe
0x00001a8b      e900ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001a90      ff2582d32000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x20ee18:8]=0x1a96
0x00001a96      680f000000     push 0xf
0x00001a9b      e9f0feffff     jmp sym..plt
;-- imp.strlen:
0x00001aa0      ff257ad32000   jmp qword [reloc.strlen]                ; [0x20ee20:8]=0x1aa6
0x00001aa6      6810000000     push 0x10
0x00001aab      e9e0feffff     jmp sym..plt
;-- imp.__lxstat:
0x00001ab0      ff2572d32000   jmp qword [reloc.__lxstat]              ; [0x20ee28:8]=0x1ab6
0x00001ab6      6811000000     push 0x11
0x00001abb      e9d0feffff     jmp sym..plt
;-- imp.openat:
0x00001ac0      ff256ad32000   jmp qword [reloc.openat]                ; [0x20ee30:8]=0x1ac6
0x00001ac6      6812000000     push 0x12
0x00001acb      e9c0feffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001ad0      ff2562d32000   jmp qword [reloc.__stack_chk_fail]      ; [0x20ee38:8]=0x1ad6
0x00001ad6      6813000000     push 0x13
0x00001adb      e9b0feffff     jmp sym..plt
;-- imp.getopt_long:
0x00001ae0      ff255ad32000   jmp qword [reloc.getopt_long]           ; [0x20ee40:8]=0x1ae6
0x00001ae6      6814000000     push 0x14
0x00001aeb      e9a0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001af0      ff2552d32000   jmp qword [reloc.mbrtowc]               ; [0x20ee48:8]=0x1af6
0x00001af6      6815000000     push 0x15
0x00001afb      e990feffff     jmp sym..plt
;-- imp.strchr:
0x00001b00      ff254ad32000   jmp qword [reloc.strchr]                ; [0x20ee50:8]=0x1b06
0x00001b06      6816000000     push 0x16
0x00001b0b      e980feffff     jmp sym..plt
;-- imp.getgrgid:
0x00001b10      ff2542d32000   jmp qword [reloc.getgrgid]              ; [0x20ee58:8]=0x1b16
0x00001b16      6817000000     push 0x17
0x00001b1b      e970feffff     jmp sym..plt
;-- imp.__fxstatat:
0x00001b20      ff253ad32000   jmp qword [reloc.__fxstatat]            ; [0x20ee60:8]=0x1b26 ; "&\x1b"
0x00001b26      6818000000     push 0x18
0x00001b2b      e960feffff     jmp sym..plt
;-- imp.strrchr:
0x00001b30      ff2532d32000   jmp qword [reloc.strrchr]               ; [0x20ee68:8]=0x1b36 ; "6\x1b"
0x00001b36      6819000000     push 0x19
0x00001b3b      e950feffff     jmp sym..plt
;-- imp.lseek:
0x00001b40      ff252ad32000   jmp qword [reloc.lseek]                 ; [0x20ee70:8]=0x1b46 ; "F\x1b"
0x00001b46      681a000000     push 0x1a
0x00001b4b      e940feffff     jmp sym..plt
;-- imp.__assert_fail:
0x00001b50      ff2522d32000   jmp qword [reloc.__assert_fail]         ; [0x20ee78:8]=0x1b56 ; "V\x1b"
0x00001b56      681b000000     push 0x1b
0x00001b5b      e930feffff     jmp sym..plt
;-- imp.memset:
0x00001b60      ff251ad32000   jmp qword [reloc.memset]                ; [0x20ee80:8]=0x1b66 ; "f\x1b"
0x00001b66      681c000000     push 0x1c
0x00001b6b      e920feffff     jmp sym..plt
;-- imp.close:
0x00001b70      ff2512d32000   jmp qword [reloc.close]                 ; [0x20ee88:8]=0x1b76 ; "v\x1b"
0x00001b76      681d000000     push 0x1d
0x00001b7b      e910feffff     jmp sym..plt
;-- imp.__openat_2:
0x00001b80      ff250ad32000   jmp qword [reloc.__openat_2]            ; [0x20ee90:8]=0x1b86
0x00001b86      681e000000     push 0x1e
0x00001b8b      e900feffff     jmp sym..plt
;-- imp.closedir:
0x00001b90      ff2502d32000   jmp qword [reloc.closedir]              ; [0x20ee98:8]=0x1b96
0x00001b96      681f000000     push 0x1f
0x00001b9b      e9f0fdffff     jmp sym..plt
;-- imp.memcmp:
0x00001ba0      ff25fad22000   jmp qword [reloc.memcmp]                ; [0x20eea0:8]=0x1ba6
0x00001ba6      6820000000     push 0x20                               ; "@"
0x00001bab      e9e0fdffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001bb0      ff25f2d22000   jmp qword [reloc.fputs_unlocked]        ; [0x20eea8:8]=0x1bb6
0x00001bb6      6821000000     push 0x21                               ; '!'
0x00001bbb      e9d0fdffff     jmp sym..plt
;-- imp.calloc:
0x00001bc0      ff25ead22000   jmp qword [reloc.calloc]                ; [0x20eeb0:8]=0x1bc6
0x00001bc6      6822000000     push 0x22                               ; '"'
0x00001bcb      e9c0fdffff     jmp sym..plt
;-- imp.dirfd:
0x00001bd0      ff25e2d22000   jmp qword [reloc.dirfd]                 ; [0x20eeb8:8]=0x1bd6
0x00001bd6      6823000000     push 0x23                               ; '#'
0x00001bdb      e9b0fdffff     jmp sym..plt
;-- imp.getpwnam:
0x00001be0      ff25dad22000   jmp qword [reloc.getpwnam]              ; [0x20eec0:8]=0x1be6
0x00001be6      6824000000     push 0x24                               ; '$'
0x00001beb      e9a0fdffff     jmp sym..plt
;-- imp.memcpy:
0x00001bf0      ff25d2d22000   jmp qword [reloc.memcpy]                ; [0x20eec8:8]=0x1bf6
0x00001bf6      6825000000     push 0x25                               ; '%'
0x00001bfb      e990fdffff     jmp sym..plt
;-- imp.getgrnam:
0x00001c00      ff25cad22000   jmp qword [reloc.getgrnam]              ; [0x20eed0:8]=0x1c06
0x00001c06      6826000000     push 0x26                               ; '&'
0x00001c0b      e980fdffff     jmp sym..plt
;-- imp.fileno:
0x00001c10      ff25c2d22000   jmp qword [reloc.fileno]                ; [0x20eed8:8]=0x1c16
0x00001c16      6827000000     push 0x27                               ; '''
0x00001c1b      e970fdffff     jmp sym..plt
;-- imp.__xstat:
0x00001c20      ff25bad22000   jmp qword [reloc.__xstat]               ; [0x20eee0:8]=0x1c26 ; "&\x1c"
0x00001c26      6828000000     push 0x28                               ; '('
0x00001c2b      e960fdffff     jmp sym..plt
;-- imp.readdir:
0x00001c30      ff25b2d22000   jmp qword [reloc.readdir]               ; [0x20eee8:8]=0x1c36 ; "6\x1c"
0x00001c36      6829000000     push 0x29                               ; ')'
0x00001c3b      e950fdffff     jmp sym..plt
;-- imp.malloc:
0x00001c40      ff25aad22000   jmp qword [reloc.malloc]                ; [0x20eef0:8]=0x1c46 ; "F\x1c"
0x00001c46      682a000000     push 0x2a                               ; '*'
0x00001c4b      e940fdffff     jmp sym..plt
;-- imp.fflush:
0x00001c50      ff25a2d22000   jmp qword [reloc.fflush]                ; [0x20eef8:8]=0x1c56 ; "V\x1c"
0x00001c56      682b000000     push 0x2b                               ; '+'
0x00001c5b      e930fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001c60      ff259ad22000   jmp qword [reloc.nl_langinfo]           ; [0x20ef00:8]=0x1c66 ; "f\x1c"
0x00001c66      682c000000     push 0x2c                               ; ','
0x00001c6b      e920fdffff     jmp sym..plt
;-- imp.__fxstat:
0x00001c70      ff2592d22000   jmp qword [reloc.__fxstat]              ; [0x20ef08:8]=0x1c76 ; "v\x1c"
0x00001c76      682d000000     push 0x2d                               ; '-'
0x00001c7b      e910fdffff     jmp sym..plt
;-- imp.endpwent:
0x00001c80      ff258ad22000   jmp qword [reloc.endpwent]              ; [0x20ef10:8]=0x1c86
0x00001c86      682e000000     push 0x2e                               ; '.'
0x00001c8b      e900fdffff     jmp sym..plt
;-- imp.__freading:
0x00001c90      ff2582d22000   jmp qword [reloc.__freading]            ; [0x20ef18:8]=0x1c96
0x00001c96      682f000000     push 0x2f                               ; '/'
0x00001c9b      e9f0fcffff     jmp sym..plt
;-- imp.fchdir:
0x00001ca0      ff257ad22000   jmp qword [reloc.fchdir]                ; [0x20ef20:8]=0x1ca6
0x00001ca6      6830000000     push 0x30                               ; '0'
0x00001cab      e9e0fcffff     jmp sym..plt
;-- imp.realloc:
0x00001cb0      ff2572d22000   jmp qword [reloc.realloc]               ; [0x20ef28:8]=0x1cb6
0x00001cb6      6831000000     push 0x31                               ; '1'
0x00001cbb      e9d0fcffff     jmp sym..plt
;-- imp.setlocale:
0x00001cc0      ff256ad22000   jmp qword [reloc.setlocale]             ; [0x20ef30:8]=0x1cc6
0x00001cc6      6832000000     push 0x32                               ; '2'
0x00001ccb      e9c0fcffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001cd0      ff2562d22000   jmp qword [reloc.__printf_chk]          ; [0x20ef38:8]=0x1cd6
0x00001cd6      6833000000     push 0x33                               ; '3'
0x00001cdb      e9b0fcffff     jmp sym..plt
;-- imp.memmove:
0x00001ce0      ff255ad22000   jmp qword [reloc.memmove]               ; [0x20ef40:8]=0x1ce6
0x00001ce6      6834000000     push 0x34                               ; '4'
0x00001ceb      e9a0fcffff     jmp sym..plt
;-- imp.error:
0x00001cf0      ff2552d22000   jmp qword [reloc.error]                 ; [0x20ef48:8]=0x1cf6
0x00001cf6      6835000000     push 0x35                               ; '5'
0x00001cfb      e990fcffff     jmp sym..plt
;-- imp.open:
0x00001d00      ff254ad22000   jmp qword [reloc.open]                  ; [0x20ef50:8]=0x1d06
0x00001d06      6836000000     push 0x36                               ; '6'
0x00001d0b      e980fcffff     jmp sym..plt
;-- imp.fseeko:
0x00001d10      ff2542d22000   jmp qword [reloc.fseeko]                ; [0x20ef58:8]=0x1d16
0x00001d16      6837000000     push 0x37                               ; '7'
0x00001d1b      e970fcffff     jmp sym..plt
;-- imp.fchown:
0x00001d20      ff253ad22000   jmp qword [reloc.fchown]                ; [0x20ef60:8]=0x1d26 ; "&\x1d"
0x00001d26      6838000000     push 0x38                               ; '8'
0x00001d2b      e960fcffff     jmp sym..plt
;-- imp.fdopendir:
0x00001d30      ff2532d22000   jmp qword [reloc.fdopendir]             ; [0x20ef68:8]=0x1d36 ; "6\x1d"
0x00001d36      6839000000     push 0x39                               ; '9'
0x00001d3b      e950fcffff     jmp sym..plt
;-- imp.strtoul:
0x00001d40      ff252ad22000   jmp qword [reloc.strtoul]               ; [0x20ef70:8]=0x1d46 ; "F\x1d"
0x00001d46      683a000000     push 0x3a                               ; ':'
0x00001d4b      e940fcffff     jmp sym..plt
;-- imp.fstatfs:
0x00001d50      ff2522d22000   jmp qword [reloc.fstatfs]               ; [0x20ef78:8]=0x1d56 ; "V\x1d"
0x00001d56      683b000000     push 0x3b                               ; ';'
0x00001d5b      e930fcffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001d60      ff251ad22000   jmp qword [reloc.__cxa_atexit]          ; [0x20ef80:8]=0x1d66 ; "f\x1d"
0x00001d66      683c000000     push 0x3c                               ; '<'
0x00001d6b      e920fcffff     jmp sym..plt
;-- imp.fchownat:
0x00001d70      ff2512d22000   jmp qword [reloc.fchownat]              ; [0x20ef88:8]=0x1d76 ; "v\x1d"
0x00001d76      683d000000     push 0x3d                               ; '='
0x00001d7b      e910fcffff     jmp sym..plt
;-- imp.exit:
0x00001d80      ff250ad22000   jmp qword [reloc.exit]                  ; [0x20ef90:8]=0x1d86
0x00001d86      683e000000     push 0x3e                               ; '>'
0x00001d8b      e900fcffff     jmp sym..plt
;-- imp.fwrite:
0x00001d90      ff2502d22000   jmp qword [reloc.fwrite]                ; [0x20ef98:8]=0x1d96
0x00001d96      683f000000     push 0x3f                               ; '?'
0x00001d9b      e9f0fbffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001da0      ff25fad12000   jmp qword [reloc.__fprintf_chk]         ; [0x20efa0:8]=0x1da6
0x00001da6      6840000000     push 0x40                               ; segment.PHDR
0x00001dab      e9e0fbffff     jmp sym..plt
;-- imp.mbsinit:
0x00001db0      ff25f2d12000   jmp qword [reloc.mbsinit]               ; [0x20efa8:8]=0x1db6
0x00001db6      6841000000     push 0x41                               ; 'A'
0x00001dbb      e9d0fbffff     jmp sym..plt
;-- imp.iswprint:
0x00001dc0      ff25ead12000   jmp qword [reloc.iswprint]              ; [0x20efb0:8]=0x1dc6
0x00001dc6      6842000000     push 0x42                               ; 'B'
0x00001dcb      e9c0fbffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00001dd0      ff25e2d12000   jmp qword [reloc.__ctype_b_loc]         ; [0x20efb8:8]=0x1dd6
0x00001dd6      6843000000     push 0x43                               ; 'C'
0x00001ddb      e9b0fbffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001de0      .qword 0x90660020d1da25ff                              ; [13] -r-x section size 16 named .plt.got
0x00001de8      .qword 0x90660020d1fa25ff
;-- main:
;-- section..text:
;-- .text:
0x00001df0      4157           push r15                                ; [14] -r-x section size 35918 named .text
0x00001df2      4156           push r14
0x00001df4      4531f6         xor r14d, r14d
0x00001df7      4155           push r13
0x00001df9      4154           push r12
0x00001dfb      41bdffffffff   mov r13d, 0xffffffff                    ; -1
0x00001e01      55             push rbp
0x00001e02      53             push rbx
0x00001e03      4863ef         movsxd rbp, edi
0x00001e06      4889f3         mov rbx, rsi
0x00001e09      41bc10000000   mov r12d, 0x10
0x00001e0f      4881ecf80000.  sub rsp, 0xf8
0x00001e16      488b3e         mov rdi, qword [rsi]
0x00001e19      64488b042528.  mov rax, qword fs:[0x28]
0x00001e22      48898424e800.  mov qword [rsp + 0xe8], rax
0x00001e2a      31c0           xor eax, eax
0x00001e2c      c7442410ffff.  mov dword [rsp + 0x10], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x00001e34      c7442414ffff.  mov dword [rsp + 0x14], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x00001e3c      4c8d7c2420     lea r15, [rsp + 0x20]
0x00001e41      c7442418ffff.  mov dword [rsp + 0x18], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x00001e49      c744241cffff.  mov dword [rsp + 0x1c], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x00001e51      e86a1c0000     call sym.set_program_name
0x00001e56      488d35eca100.  lea rsi, [0x0000c049]
0x00001e5d      bf06000000     mov edi, 6
0x00001e62      e859feffff     call sym.imp.setlocale
0x00001e67      488d359f8c00.  lea rsi, str.usr_local_share_locale     ; 0xab0d ; "/usr/local/share/locale"
0x00001e6e      488d3d6f8c00.  lea rdi, [0x0000aae4]                   ; "coreutils"
0x00001e75      e8e6fbffff     call sym.imp.bindtextdomain
0x00001e7a      488d3d638c00.  lea rdi, [0x0000aae4]                   ; "coreutils"
0x00001e81      e8aafbffff     call sym.imp.textdomain
0x00001e86      488d3d331b00.  lea rdi, sym.close_stdout               ; 0x39c0 ; "USH\x83\xec\bH\x8b=\xbb\xb6 "
0x00001e8d      e89e8b0000     call sym.atexit
0x00001e92      4c89ff         mov rdi, r15
0x00001e95      e8460b0000     call sym.chopt_init
0x00001e9a      488d44241c     lea rax, [rsp + 0x1c]
0x00001e9f      48890424       mov qword [rsp], rax
0x00001ea3      488d442418     lea rax, [rsp + 0x18]
0x00001ea8      4889442408     mov qword [rsp + 8], rax
0x00001ead      0f1f00         nop dword [rax]
0x00001eb0      488d0dc9ca20.  lea rcx, obj.long_options               ; 0x20e980 ; "{\xab"
0x00001eb7      488d158b8c00.  lea rdx, str.HLPRcfhv                   ; 0xab49 ; "HLPRcfhv"
0x00001ebe      4531c0         xor r8d, r8d
0x00001ec1      4889de         mov rsi, rbx
0x00001ec4      89ef           mov edi, ebp
0x00001ec6      e815fcffff     call sym.imp.getopt_long
0x00001ecb      83f8ff         cmp eax, 0xffffffff
0x00001ece      0f84e7010000   je 0x20bb
0x00001ed4      83f866         cmp eax, 0x66
0x00001ed7      0f84b3010000   je 0x2090
0x00001edd      7e39           jle 0x1f18
0x00001edf      3d81000000     cmp eax, 0x81
0x00001ee4      0f841e010000   je 0x2008
0x00001eea      7f5c           jg 0x1f48
0x00001eec      83f876         cmp eax, 0x76
0x00001eef      0f847b010000   je 0x2070
0x00001ef5      3d80000000     cmp eax, 0x80
0x00001efa      0f8460010000   je 0x2060
0x00001f00      83f868         cmp eax, 0x68
0x00001f03      740b           je 0x1f10
0x00001f05      bf01000000     mov edi, 1
0x00001f0a      e881050000     call sym.usage
0x00001f0f      90             nop
0x00001f10      4531ed         xor r13d, r13d
0x00001f13      eb9b           jmp 0x1eb0
0x00001f15      0f1f00         nop dword [rax]
0x00001f18      83f84c         cmp eax, 0x4c
0x00001f1b      0f845f010000   je 0x2080
0x00001f21      7e55           jle 0x1f78
0x00001f23      83f852         cmp eax, 0x52
0x00001f26      0f84bc000000   je 0x1fe8
0x00001f2c      83f863         cmp eax, 0x63
0x00001f2f      0f84c3000000   je 0x1ff8
0x00001f35      83f850         cmp eax, 0x50
0x00001f38      75cb           jne 0x1f05
0x00001f3a      41bc10000000   mov r12d, 0x10
0x00001f40      e96bffffff     jmp 0x1eb0
0x00001f45      0f1f00         nop dword [rax]
0x00001f48      3d83000000     cmp eax, 0x83
0x00001f4d      0f845d010000   je 0x20b0
0x00001f53      0f8c47010000   jl 0x20a0
0x00001f59      3d84000000     cmp eax, 0x84
0x00001f5e      75a5           jne 0x1f05
0x00001f60      488b0531d120.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20f098:8]=0
0x00001f67      48890572d120.  mov qword [obj.reference_file], rax     ; [0x20f0e0:8]=0
0x00001f6e      e93dffffff     jmp 0x1eb0
0x00001f73      0f1f440000     nop dword [rax + rax]
0x00001f78      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x00001f7d      0f8403030000   je 0x2286
0x00001f83      83f848         cmp eax, 0x48
0x00001f86      7450           je 0x1fd8
0x00001f88      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x00001f8d      0f8572ffffff   jne 0x1f05
0x00001f93      4883ec08       sub rsp, 8
0x00001f97      488b3dead020.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20f088:8]=0
0x00001f9e      488b0d6bd020.  mov rcx, qword [obj.Version]            ; [0x20f010:8]=0xba94 str.8.31
0x00001fa5      6a00           push 0
0x00001fa7      4c8d0d7e8b00.  lea r9, str.Jim_Meyering                ; 0xab2c ; "Jim Meyering"
0x00001fae      4c8d05848b00.  lea r8, str.David_MacKenzie             ; 0xab39 ; "David MacKenzie"
0x00001fb5      488d15248b00.  lea rdx, str.GNU_coreutils              ; 0xaae0 ; "GNU coreutils"
0x00001fbc      488d35a18a00.  lea rsi, str.chown                      ; 0xaa64 ; "chown"
0x00001fc3      31c0           xor eax, eax
0x00001fc5      e806420000     call sym.version_etc
0x00001fca      31ff           xor edi, edi
0x00001fcc      e8affdffff     call sym.imp.exit
0x00001fd1      0f1f80000000.  nop dword [rax]
0x00001fd8      41bc11000000   mov r12d, 0x11
0x00001fde      e9cdfeffff     jmp 0x1eb0
0x00001fe3      0f1f440000     nop dword [rax + rax]
0x00001fe8      c644242401     mov byte [rsp + 0x24], 1
0x00001fed      e9befeffff     jmp 0x1eb0
0x00001ff2      660f1f440000   nop word [rax + rax]
0x00001ff8      c74424200100.  mov dword [rsp + 0x20], 1
0x00002000      e9abfeffff     jmp 0x1eb0
0x00002005      0f1f00         nop dword [rax]
0x00002008      488b1424       mov rdx, qword [rsp]
0x0000200c      488b742408     mov rsi, qword [rsp + 8]
0x00002011      4531c0         xor r8d, r8d
0x00002014      488b3d7dd020.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20f098:8]=0
0x0000201b      31c9           xor ecx, ecx
0x0000201d      e81e3c0000     call sym.parse_user_spec
0x00002022      4885c0         test rax, rax
0x00002025      0f8485feffff   je 0x1eb0
0x0000202b      488b3d66d020.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20f098:8]=0
0x00002032      48890424       mov qword [rsp], rax
0x00002036      e895370000     call sym.quote
0x0000203b      488b0c24       mov rcx, qword [rsp]
0x0000203f      488d15df8a00.  lea rdx, str.s:__s                      ; 0xab25 ; "%s: %s"
0x00002046      4989c0         mov r8, rax
0x00002049      31f6           xor esi, esi
0x0000204b      bf01000000     mov edi, 1
0x00002050      31c0           xor eax, eax
0x00002052      e899fcffff     call sym.imp.error
0x00002057      660f1f840000.  nop word [rax + rax]
0x00002060      41bd01000000   mov r13d, 1
0x00002066      e945feffff     jmp 0x1eb0
0x0000206b      0f1f440000     nop dword [rax + rax]
0x00002070      c74424200000.  mov dword [rsp + 0x20], 0
0x00002078      e933feffff     jmp 0x1eb0
0x0000207d      0f1f00         nop dword [rax]
0x00002080      41bc02000000   mov r12d, 2
0x00002086      e925feffff     jmp 0x1eb0
0x0000208b      0f1f440000     nop dword [rax + rax]
0x00002090      c644243101     mov byte [rsp + 0x31], 1
0x00002095      e916feffff     jmp 0x1eb0
0x0000209a      660f1f440000   nop word [rax + rax]
0x000020a0      4531f6         xor r14d, r14d
0x000020a3      e908feffff     jmp 0x1eb0
0x000020a8      0f1f84000000.  nop dword [rax + rax]
0x000020b0      41be01000000   mov r14d, 1
0x000020b6      e9f5fdffff     jmp 0x1eb0
0x000020bb      807c242400     cmp byte [rsp + 0x24], 0
0x000020c0      0f85e5000000   jne 0x21ab
0x000020c6      41bc10000000   mov r12d, 0x10
0x000020cc      486305bdcf20.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20f090:4]=0
0x000020d3      4585ed         test r13d, r13d
0x000020d6      4c8b2d03d020.  mov r13, qword [obj.reference_file]     ; [0x20f0e0:8]=0
0x000020dd      89ea           mov edx, ebp
0x000020df      0f95442430     setne byte [rsp + 0x30]
0x000020e4      29c2           sub edx, eax
0x000020e6      4d85ed         test r13, r13
0x000020e9      0f84d8000000   je 0x21c7
0x000020ef      85d2           test edx, edx
0x000020f1      0f8e29020000   jle 0x2320
0x000020f7      488d542450     lea rdx, [rsp + 0x50]
0x000020fc      4c89ee         mov rsi, r13
0x000020ff      bf01000000     mov edi, 1
0x00002104      e817fbffff     call sym.imp.__xstat
0x00002109      85c0           test eax, eax
0x0000210b      0f85d0010000   jne 0x22e1
0x00002111      8b7c246c       mov edi, dword [rsp + 0x6c]
0x00002115      8b442470       mov eax, dword [rsp + 0x70]
0x00002119      897c2410       mov dword [rsp + 0x10], edi
0x0000211d      89442414       mov dword [rsp + 0x14], eax
0x00002121      e86a090000     call sym.uid_to_name
0x00002126      8b7c2470       mov edi, dword [rsp + 0x70]
0x0000212a      4889442438     mov qword [rsp + 0x38], rax
0x0000212f      e8fc080000     call sym.gid_to_name
0x00002134      4889442440     mov qword [rsp + 0x40], rax
0x00002139      807c242400     cmp byte [rsp + 0x24], 0
0x0000213e      7409           je 0x2149
0x00002140      4584f6         test r14b, r14b
0x00002143      0f85c2000000   jne 0x220b
0x00002149      48630540cf20.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20f090:4]=0
0x00002150      4883ec08       sub rsp, 8
0x00002154      4489e6         mov esi, r12d
0x00002157      4157           push r15
0x00002159      448b4c242c     mov r9d, dword [rsp + 0x2c]
0x0000215e      81ce00040000   or esi, 0x400
0x00002164      448b442428     mov r8d, dword [rsp + 0x28]
0x00002169      8b4c2424       mov ecx, dword [rsp + 0x24]
0x0000216d      8b542420       mov edx, dword [rsp + 0x20]
0x00002171      488d3cc3       lea rdi, [rbx + rax*8]
0x00002175      e806170000     call sym.chown_files
0x0000217a      5a             pop rdx
0x0000217b      59             pop rcx
0x0000217c      83f001         xor eax, 1
0x0000217f      0fb6c0         movzx eax, al
0x00002182      488b9c24e800.  mov rbx, qword [rsp + 0xe8]
0x0000218a      6448331c2528.  xor rbx, qword fs:[0x28]
0x00002193      0f8543010000   jne 0x22dc
0x00002199      4881c4f80000.  add rsp, 0xf8
0x000021a0      5b             pop rbx
0x000021a1      5d             pop rbp
0x000021a2      415c           pop r12
0x000021a4      415d           pop r13
0x000021a6      415e           pop r14
0x000021a8      415f           pop r15
0x000021aa      c3             ret
0x000021ab      4183fc10       cmp r12d, 0x10
0x000021af      0f8517ffffff   jne 0x20cc
0x000021b5      4183ed01       sub r13d, 1
0x000021b9      0f84f9000000   je 0x22b8
0x000021bf      4531ed         xor r13d, r13d
0x000021c2      e905ffffff     jmp 0x20cc
0x000021c7      83ea01         sub edx, 1
0x000021ca      0f8e50010000   jle 0x2320
0x000021d0      488b3cc3       mov rdi, qword [rbx + rax*8]
0x000021d4      498d4f18       lea rcx, [r15 + 0x18]
0x000021d8      488d542414     lea rdx, [rsp + 0x14]
0x000021dd      488d742410     lea rsi, [rsp + 0x10]
0x000021e2      4d8d4720       lea r8, [r15 + 0x20]
0x000021e6      e8553a0000     call sym.parse_user_spec
0x000021eb      4885c0         test rax, rax
0x000021ee      4889c5         mov rbp, rax
0x000021f1      0f8596000000   jne 0x228d
0x000021f7      48837c243800   cmp qword [rsp + 0x38], 0
0x000021fd      7469           je 0x2268
0x000021ff      83058ace2000.  add dword [obj.optind], 1               ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20f090:4]=0
0x00002206      e92effffff     jmp 0x2139
0x0000220b      488d3dbece20.  lea rdi, obj.dev_ino_buf.7022           ; 0x20f0d0
0x00002212      e8d9350000     call sym.get_root_dev_ino
0x00002217      4885c0         test rax, rax
0x0000221a      4889442428     mov qword [rsp + 0x28], rax
0x0000221f      0f8524ffffff   jne 0x2149
0x00002225      488d35ba9800.  lea rsi, [0x0000bae6]                   ; "/"
0x0000222c      bf04000000     mov edi, 4
0x00002231      e8ca320000     call sym.quotearg_style
0x00002236      488d353b9400.  lea rsi, str.failed_to_get_attributes_of__s ; 0xb678 ; "failed to get attributes of %s"
0x0000223d      ba05000000     mov edx, 5
0x00002242      31ff           xor edi, edi
0x00002244      4889c5         mov rbp, rax
0x00002247      e834f8ffff     call sym.imp.dcgettext
0x0000224c      4889c3         mov rbx, rax
0x0000224f      e86cf7ffff     call sym.imp.__errno_location
0x00002254      8b30           mov esi, dword [rax]
0x00002256      4889e9         mov rcx, rbp
0x00002259      4889da         mov rdx, rbx
0x0000225c      bf01000000     mov edi, 1
0x00002261      31c0           xor eax, eax
0x00002263      e888faffff     call sym.imp.error
0x00002268      48837c244000   cmp qword [rsp + 0x40], 0
0x0000226e      748f           je 0x21ff
0x00002270      488d3dd29d00.  lea rdi, [0x0000c049]
0x00002277      e8e4420000     call sym.xstrdup
0x0000227c      4889442438     mov qword [rsp + 0x38], rax
0x00002281      e979ffffff     jmp 0x21ff
0x00002286      31ff           xor edi, edi
0x00002288      e803020000     call sym.usage
0x0000228d      486305fccd20.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20f090:4]=0
0x00002294      488b3cc3       mov rdi, qword [rbx + rax*8]
0x00002298      e833350000     call sym.quote
0x0000229d      488d15818800.  lea rdx, str.s:__s                      ; 0xab25 ; "%s: %s"
0x000022a4      4989c0         mov r8, rax
0x000022a7      4889e9         mov rcx, rbp
0x000022aa      31f6           xor esi, esi
0x000022ac      bf01000000     mov edi, 1
0x000022b1      31c0           xor eax, eax
0x000022b3      e838faffff     call sym.imp.error
0x000022b8      488d35899300.  lea rsi, str.R___dereference_requires_either__H_or__L ; 0xb648 ; "-R --dereference requires either -H or -L"
0x000022bf      ba05000000     mov edx, 5
0x000022c4      31ff           xor edi, edi
0x000022c6      e8b5f7ffff     call sym.imp.dcgettext
0x000022cb      31f6           xor esi, esi
0x000022cd      4889c2         mov rdx, rax
0x000022d0      bf01000000     mov edi, 1
0x000022d5      31c0           xor eax, eax
0x000022d7      e814faffff     call sym.imp.error
0x000022dc      e8eff7ffff     call sym.imp.__stack_chk_fail
0x000022e1      4c89ee         mov rsi, r13
0x000022e4      bf04000000     mov edi, 4
0x000022e9      e812320000     call sym.quotearg_style
0x000022ee      488d35839300.  lea rsi, str.failed_to_get_attributes_of__s ; 0xb678 ; "failed to get attributes of %s"
0x000022f5      ba05000000     mov edx, 5
0x000022fa      31ff           xor edi, edi
0x000022fc      4889c5         mov rbp, rax
0x000022ff      e87cf7ffff     call sym.imp.dcgettext
0x00002304      4889c3         mov rbx, rax
0x00002307      e8b4f6ffff     call sym.imp.__errno_location
0x0000230c      8b30           mov esi, dword [rax]
0x0000230e      4889e9         mov rcx, rbp
0x00002311      4889da         mov rdx, rbx
0x00002314      bf01000000     mov edi, 1
0x00002319      31c0           xor eax, eax
0x0000231b      e8d0f9ffff     call sym.imp.error
0x00002320      39e8           cmp eax, ebp
0x00002322      7c26           jl 0x234a
0x00002324      488d35278800.  lea rsi, str.missing_operand            ; 0xab52 ; "missing operand"
0x0000232b      31ff           xor edi, edi
0x0000232d      ba05000000     mov edx, 5
0x00002332      e849f7ffff     call sym.imp.dcgettext
0x00002337      31f6           xor esi, esi
0x00002339      4889c2         mov rdx, rax
0x0000233c      31ff           xor edi, edi
0x0000233e      31c0           xor eax, eax
0x00002340      e8abf9ffff     call sym.imp.error
0x00002345      e9bbfbffff     jmp 0x1f05
0x0000234a      488b7cebf8     mov rdi, qword [rbx + rbp*8 - 8]
0x0000234f      e87c340000     call sym.quote
0x00002354      488d35078800.  lea rsi, str.missing_operand_after__s   ; 0xab62 ; "missing operand after %s"
0x0000235b      4889c3         mov rbx, rax
0x0000235e      31ff           xor edi, edi
0x00002360      ba05000000     mov edx, 5
0x00002365      e816f7ffff     call sym.imp.dcgettext
0x0000236a      4889d9         mov rcx, rbx
0x0000236d      4889c2         mov rdx, rax
0x00002370      31f6           xor esi, esi
0x00002372      31ff           xor edi, edi
0x00002374      31c0           xor eax, eax
0x00002376      e875f9ffff     call sym.imp.error
0x0000237b      e985fbffff     jmp 0x1f05
;-- entry0:
;-- _start:
;-- rip:
0x00002380      31ed           xor ebp, ebp
0x00002382      4989d1         mov r9, rdx
0x00002385      5e             pop rsi
0x00002386      4889e2         mov rdx, rsp
0x00002389      4883e4f0       and rsp, 0xfffffffffffffff0
0x0000238d      50             push rax
0x0000238e      54             push rsp
0x0000238f      4c8d058a8600.  lea r8, sym.__libc_csu_fini             ; 0xaa20
0x00002396      488d0d138600.  lea rcx, sym.__libc_csu_init            ; 0xa9b0 ; "AWAVI\x89\xd7AUATL\x8d%\xae? "
0x0000239d      488d3d4cfaff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1df0 ; "AWAVE1\xf6AUATA\xbd\xff\xff\xff\xffUSHc\xefH\x89\xf3A\xbc\x10"
0x000023a4      ff1526cc2000   call qword [reloc.__libc_start_main]    ; [0x20efd0:8]=0
0x000023aa      f4             hlt
0x000023ab      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x000023b0      488d3dc9cc20.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20f080
0x000023b7      55             push rbp
0x000023b8      488d05c1cc20.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20f080
0x000023bf      4839f8         cmp rax, rdi
0x000023c2      4889e5         mov rbp, rsp
0x000023c5      7419           je 0x23e0
0x000023c7      488b05facb20.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x20efc8:8]=0
0x000023ce      4885c0         test rax, rax
0x000023d1      740d           je 0x23e0
0x000023d3      5d             pop rbp
0x000023d4      ffe0           jmp rax
0x000023d6      662e0f1f8400.  nop word cs:[rax + rax]
0x000023e0      5d             pop rbp
0x000023e1      c3             ret
0x000023e2      0f1f4000       nop dword [rax]
0x000023e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x000023f0      488d3d89cc20.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20f080
0x000023f7      488d3582cc20.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20f080
0x000023fe      55             push rbp
0x000023ff      4829fe         sub rsi, rdi
0x00002402      4889e5         mov rbp, rsp
0x00002405      48c1fe03       sar rsi, 3
0x00002409      4889f0         mov rax, rsi
0x0000240c      48c1e83f       shr rax, 0x3f
0x00002410      4801c6         add rsi, rax
0x00002413      48d1fe         sar rsi, 1
0x00002416      7418           je 0x2430
0x00002418      488b05c1cb20.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x20efe0:8]=0
0x0000241f      4885c0         test rax, rax
0x00002422      740c           je 0x2430
0x00002424      5d             pop rbp
0x00002425      ffe0           jmp rax
0x00002427      660f1f840000.  nop word [rax + rax]
0x00002430      5d             pop rbp
0x00002431      c3             ret
0x00002432      0f1f4000       nop dword [rax]
0x00002436      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00002440      803d81cc2000.  cmp byte [obj.completed.7697], 0        ; [0x20f0c8:1]=0
0x00002447      752f           jne 0x2478
0x00002449      48833d97cb20.  cmp qword [reloc.__cxa_finalize], 0     ; [0x20efe8:8]=0
0x00002451      55             push rbp
0x00002452      4889e5         mov rbp, rsp
0x00002455      740c           je 0x2463
0x00002457      488b3daacb20.  mov rdi, qword [obj.__dso_handle]       ; [0x20f008:8]=0x20f008 obj.__dso_handle
0x0000245e      e885f9ffff     call 0x1de8
0x00002463      e848ffffff     call sym.deregister_tm_clones
0x00002468      c60559cc2000.  mov byte [obj.completed.7697], 1        ; [0x20f0c8:1]=0
0x0000246f      5d             pop rbp
0x00002470      c3             ret
0x00002471      0f1f80000000.  nop dword [rax]
0x00002478      f3c3           ret
0x0000247a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00002480      55             push rbp
0x00002481      4889e5         mov rbp, rsp
0x00002484      5d             pop rbp
0x00002485      e966ffffff     jmp sym.register_tm_clones
0x0000248a      660f1f440000   nop word [rax + rax]
;-- usage:
0x00002490      4155           push r13
0x00002492      4154           push r12
0x00002494      ba05000000     mov edx, 5
0x00002499      55             push rbp
0x0000249a      53             push rbx
0x0000249b      89fd           mov ebp, edi
0x0000249d      4881ec880000.  sub rsp, 0x88
0x000024a4      488b1d4dcc20.  mov rbx, qword [obj.program_name]       ; [0x20f0f8:8]=0
0x000024ab      64488b042528.  mov rax, qword fs:[0x28]
0x000024b4      4889442478     mov qword [rsp + 0x78], rax
0x000024b9      31c0           xor eax, eax
0x000024bb      85ff           test edi, edi
0x000024bd      742e           je 0x24ed
0x000024bf      488d35128700.  lea rsi, str.Try___s___help__for_more_information. ; 0xabd8 ; "Try '%s --help' for more information.\n"
0x000024c6      31ff           xor edi, edi
0x000024c8      e8b3f5ffff     call sym.imp.dcgettext
0x000024cd      488b3deccb20.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20f0c0:8]=0
0x000024d4      4889c2         mov rdx, rax
0x000024d7      4889d9         mov rcx, rbx
0x000024da      be01000000     mov esi, 1
0x000024df      31c0           xor eax, eax
0x000024e1      e8baf8ffff     call sym.imp.__fprintf_chk
0x000024e6      89ef           mov edi, ebp
0x000024e8      e893f8ffff     call sym.imp.exit
0x000024ed      488d350c8700.  lea rsi, str.Usage:__s__OPTION_...__OWNER__:_GROUP___FILE...____or:___s__OPTION_...___reference_RFILE_FILE... ; 0xac00 ; "Usage: %s [OPTION]... [OWNER][:[GROUP]] FILE...\n  or:  %s [OPTION]... --reference=RFILE FILE...\n"
0x000024f4      31ff           xor edi, edi
0x000024f6      e885f5ffff     call sym.imp.dcgettext
0x000024fb      4889d9         mov rcx, rbx
0x000024fe      4889da         mov rdx, rbx
0x00002501      4889c6         mov rsi, rax
0x00002504      bf01000000     mov edi, 1
0x00002509      31c0           xor eax, eax
0x0000250b      e8c0f7ffff     call sym.imp.__printf_chk
0x00002510      488b1d71cb20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20f088:8]=0
0x00002517      488d354a8700.  lea rsi, str.Change_the_owner_and_or_group_of_each_FILE_to_OWNER_and_or_GROUP.__With___reference__change_the_owner_and_group_of_each_FILE_to_those_of_RFILE. ; 0xac68 ; "Change the owner and/or group of each FILE to OWNER and/or GROUP.\nWith --reference, change the owner and group of each FILE to those of RFILE.\n\n"
0x0000251e      ba05000000     mov edx, 5
0x00002523      31ff           xor edi, edi
0x00002525      e856f5ffff     call sym.imp.dcgettext
0x0000252a      4889de         mov rsi, rbx
0x0000252d      4889c7         mov rdi, rax
0x00002530      e87bf6ffff     call sym.imp.fputs_unlocked
0x00002535      488b1d4ccb20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20f088:8]=0
0x0000253c      488d35bd8700.  lea rsi, str.c____changes__________like_verbose_but_report_only_when_a_change_is_made_____f____silent____quiet__suppress_most_error_messages_____v____verbose__________output_a_diagnostic_for_every_file_processed ; 0xad00 ; "  -c, --changes          like verbose but report only when a change is made\n  -f, --silent, --quiet  suppress most error messages\n  -v, --verbose          output a diagnostic for every file processed\n"
0x00002543      ba05000000     mov edx, 5
0x00002548      31ff           xor edi, edi
0x0000254a      e831f5ffff     call sym.imp.dcgettext
0x0000254f      4889de         mov rsi, rbx
0x00002552      4889c7         mov rdi, rax
0x00002555      e856f6ffff     call sym.imp.fputs_unlocked
0x0000255a      488b1d27cb20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20f088:8]=0
0x00002561      488d35688800.  lea rsi, str.dereference______affect_the_referent_of_each_symbolic_link__this_is___________________________the_default___rather_than_the_symbolic_link_itself_____h____no_dereference___affect_symbolic_links_instead_of_any_referenced_file ; 0xadd0 ; "      --dereference      affect the referent of each symbolic link (this is\n                         the default), rather than the symbolic link itself\n  -h, --no-dereference   affect symbolic links instead of any referenced file\n"
0x00002568      ba05000000     mov edx, 5
0x0000256d      31ff           xor edi, edi
0x0000256f      e80cf5ffff     call sym.imp.dcgettext
0x00002574      4889de         mov rsi, rbx
0x00002577      4889c7         mov rdi, rax
0x0000257a      e831f6ffff     call sym.imp.fputs_unlocked
0x0000257f      488b1d02cb20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20f088:8]=0
0x00002586      488d352b8900.  lea rsi, str.useful_only_on_systems_that_can_change_the___________________________ownership_of_a_symlink ; 0xaeb8 ; "                         (useful only on systems that can change the\n                         ownership of a symlink)\n"
0x0000258d      ba05000000     mov edx, 5
0x00002592      31ff           xor edi, edi
0x00002594      e8e7f4ffff     call sym.imp.dcgettext
0x00002599      4889de         mov rsi, rbx
0x0000259c      4889c7         mov rdi, rax
0x0000259f      e80cf6ffff     call sym.imp.fputs_unlocked
0x000025a4      488b1dddca20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20f088:8]=0
0x000025ab      488d357e8900.  lea rsi, str.from_CURRENT_OWNER:CURRENT_GROUP___________________________change_the_owner_and_or_group_of_each_file_only_if___________________________its_current_owner_and_or_group_match_those_specified___________________________here.__Either_may_be_omitted__in_which_case_a_match___________________________is_not_required_for_the_omitted_attribute ; 0xaf30 ; "      --from=CURRENT_OWNER:CURRENT_GROUP\n                         change the owner and/or group of each file only if\n                         its current owner and/or group match those specified\n                         here.  Either may be omitted, in which case a match\n                         is not required for the omitted attribute\n"
0x000025b2      ba05000000     mov edx, 5
0x000025b7      31ff           xor edi, edi
0x000025b9      e8c2f4ffff     call sym.imp.dcgettext
0x000025be      4889de         mov rsi, rbx
0x000025c1      4889c7         mov rdi, rax
0x000025c4      e8e7f5ffff     call sym.imp.fputs_unlocked
0x000025c9      488b1db8ca20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20f088:8]=0
0x000025d0      488d35b18a00.  lea rsi, str.no_preserve_root__do_not_treat_____specially__the_default___________preserve_root____fail_to_operate_recursively_on ; 0xb088 ; "      --no-preserve-root  do not treat '/' specially (the default)\n      --preserve-root    fail to operate recursively on '/'\n"
0x000025d7      ba05000000     mov edx, 5
0x000025dc      31ff           xor edi, edi
0x000025de      e89df4ffff     call sym.imp.dcgettext
0x000025e3      4889de         mov rsi, rbx
0x000025e6      4889c7         mov rdi, rax
0x000025e9      e8c2f5ffff     call sym.imp.fputs_unlocked
0x000025ee      488b1d93ca20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20f088:8]=0
0x000025f5      488d350c8b00.  lea rsi, str.reference_RFILE__use_RFILE_s_owner_and_group_rather_than___________________________specifying_OWNER:GROUP_values ; 0xb108 ; "      --reference=RFILE  use RFILE's owner and group rather than\n                         specifying OWNER:GROUP values\n"
0x000025fc      ba05000000     mov edx, 5
0x00002601      31ff           xor edi, edi
0x00002603      e878f4ffff     call sym.imp.dcgettext
0x00002608      4889de         mov rsi, rbx
0x0000260b      4889c7         mov rdi, rax
0x0000260e      e89df5ffff     call sym.imp.fputs_unlocked
0x00002613      488b1d6eca20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20f088:8]=0
0x0000261a      488d35678b00.  lea rsi, str.R____recursive________operate_on_files_and_directories_recursively ; 0xb188 ; "  -R, --recursive        operate on files and directories recursively\n"
0x00002621      ba05000000     mov edx, 5
0x00002626      31ff           xor edi, edi
0x00002628      e853f4ffff     call sym.imp.dcgettext
0x0000262d      4889de         mov rsi, rbx
0x00002630      4889c7         mov rdi, rax
0x00002633      e878f5ffff     call sym.imp.fputs_unlocked
0x00002638      488b1d49ca20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20f088:8]=0
0x0000263f      488d358a8b00.  lea rsi, str.The_following_options_modify_how_a_hierarchy_is_traversed_when_the__R__option_is_also_specified.__If_more_than_one_is_specified__only_the_final__one_takes_effect._______H_____________________if_a_command_line_argument_is_a_symbolic_link___________________________to_a_directory__traverse_it_____L_____________________traverse_every_symbolic_link_to_a_directory___________________________encountered_____P_____________________do_not_traverse_any_symbolic_links__default ; 0xb1d0 ; "\nThe following options modify how a hierarchy is traversed when the -R\noption is also specified.  If more than one is specified, only the final\none takes effect.\n\n  -H                     if a command line argument is a symbolic link\n                         to a directory, traverse it\n  -L                     traverse every symbolic link to a directory\n                         encountered\n  -P                     do not traverse any symbolic links (default)\n\n"
0x00002646      ba05000000     mov edx, 5
0x0000264b      31ff           xor edi, edi
0x0000264d      e82ef4ffff     call sym.imp.dcgettext
0x00002652      4889de         mov rsi, rbx
0x00002655      4889c7         mov rdi, rax
0x00002658      e853f5ffff     call sym.imp.fputs_unlocked
0x0000265d      488b1d24ca20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20f088:8]=0
0x00002664      488d353d8d00.  lea rsi, str.help_____display_this_help_and_exit ; 0xb3a8 ; "      --help     display this help and exit\n"
0x0000266b      ba05000000     mov edx, 5
0x00002670      31ff           xor edi, edi
0x00002672      e809f4ffff     call sym.imp.dcgettext
0x00002677      4889de         mov rsi, rbx
0x0000267a      4889c7         mov rdi, rax
0x0000267d      e82ef5ffff     call sym.imp.fputs_unlocked
0x00002682      488b1dffc920.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20f088:8]=0
0x00002689      488d35488d00.  lea rsi, str.version__output_version_information_and_exit ; 0xb3d8 ; "      --version  output version information and exit\n"
0x00002690      ba05000000     mov edx, 5
0x00002695      31ff           xor edi, edi
0x00002697      e8e4f3ffff     call sym.imp.dcgettext
0x0000269c      4889de         mov rsi, rbx
0x0000269f      4889c7         mov rdi, rax
0x000026a2      e809f5ffff     call sym.imp.fputs_unlocked
0x000026a7      488b1ddac920.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20f088:8]=0
0x000026ae      488d355b8d00.  lea rsi, str.Owner_is_unchanged_if_missing.__Group_is_unchanged_if_missing__but_changed__to_login_group_if_implied_by_a__:__following_a_symbolic_OWNER.__OWNER_and_GROUP_may_be_numeric_as_well_as_symbolic. ; 0xb410 ; "\nOwner is unchanged if missing.  Group is unchanged if missing, but changed\nto login group if implied by a ':' following a symbolic OWNER.\nOWNER and GROUP may be numeric as well as symbolic.\n"
0x000026b5      ba05000000     mov edx, 5
0x000026ba      31ff           xor edi, edi
0x000026bc      e8bff3ffff     call sym.imp.dcgettext
0x000026c1      4889de         mov rsi, rbx
0x000026c4      4889c7         mov rdi, rax
0x000026c7      e8e4f4ffff     call sym.imp.fputs_unlocked
0x000026cc      488b1d25ca20.  mov rbx, qword [obj.program_name]       ; [0x20f0f8:8]=0
0x000026d3      488d35f68d00.  lea rsi, str.Examples:_____s_root__u________Change_the_owner_of__u_to__root_._____s_root:staff__u__Likewise__but_also_change_its_group_to__staff_._____s__hR_root__u____Change_the_owner_of__u_and_subfiles_to__root_. ; 0xb4d0 ; "\nExamples:\n  %s root /u        Change the owner of /u to \"root\".\n  %s root:staff /u  Likewise, but also change its group to \"staff\".\n  %s -hR root /u    Change the owner of /u and subfiles to \"root\".\n"
0x000026da      ba05000000     mov edx, 5
0x000026df      31ff           xor edi, edi
0x000026e1      e89af3ffff     call sym.imp.dcgettext
0x000026e6      4889d9         mov rcx, rbx
0x000026e9      4889da         mov rdx, rbx
0x000026ec      4989d8         mov r8, rbx
0x000026ef      4889c6         mov rsi, rax
0x000026f2      bf01000000     mov edi, 1
0x000026f7      31c0           xor eax, eax
0x000026f9      e8d2f5ffff     call sym.imp.__printf_chk
0x000026fe      488d05658300.  lea rax, [0x0000aa6a]                   ; "["
0x00002705      488d0d9f8300.  lea rcx, str.sha256sum                  ; 0xaaab ; "sha256sum"
0x0000270c      488d1d518300.  lea rbx, str.chown                      ; 0xaa64 ; "chown"
0x00002713      48c744246000.  mov qword [rsp + 0x60], 0
0x0000271c      48c744246800.  mov qword [rsp + 0x68], 0
0x00002725      4889e2         mov rdx, rsp
0x00002728      48890424       mov qword [rsp], rax
0x0000272c      488d05398300.  lea rax, str.test_invocation            ; 0xaa6c ; "test invocation"
0x00002733      48894c2430     mov qword [rsp + 0x30], rcx
0x00002738      488d0d768300.  lea rcx, str.sha384sum                  ; 0xaab5 ; "sha384sum"
0x0000273f      4889442408     mov qword [rsp + 8], rax
0x00002744      488d05998300.  lea rax, [0x0000aae4]                   ; "coreutils"
0x0000274b      48894c2440     mov qword [rsp + 0x40], rcx
0x00002750      488d0d688300.  lea rcx, str.sha512sum                  ; 0xaabf ; "sha512sum"
0x00002757      4889442410     mov qword [rsp + 0x10], rax
0x0000275c      488d05198300.  lea rax, str.Multi_call_invocation      ; 0xaa7c ; "Multi-call invocation"
0x00002763      48894c2450     mov qword [rsp + 0x50], rcx
0x00002768      4889442418     mov qword [rsp + 0x18], rax
0x0000276d      488d051e8300.  lea rax, str.sha224sum                  ; 0xaa92 ; "sha224sum"
0x00002774      4889442420     mov qword [rsp + 0x20], rax
0x00002779      488d051c8300.  lea rax, str.sha2_utilities             ; 0xaa9c ; "sha2 utilities"
0x00002780      4889442428     mov qword [rsp + 0x28], rax
0x00002785      4889442438     mov qword [rsp + 0x38], rax
0x0000278a      4889442448     mov qword [rsp + 0x48], rax
0x0000278f      4889442458     mov qword [rsp + 0x58], rax
0x00002794      0f1f4000       nop dword [rax]
0x00002798      4883c210       add rdx, 0x10
0x0000279c      488b3a         mov rdi, qword [rdx]
0x0000279f      4885ff         test rdi, rdi
0x000027a2      7413           je 0x27b7
0x000027a4      b906000000     mov ecx, 6
0x000027a9      4889de         mov rsi, rbx
0x000027ac      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000027ae      0f97c0         seta al
0x000027b1      1c00           sbb al, 0
0x000027b3      84c0           test al, al
0x000027b5      75e1           jne 0x2798
0x000027b7      4c8b6208       mov r12, qword [rdx + 8]
0x000027bb      31ff           xor edi, edi
0x000027bd      ba05000000     mov edx, 5
0x000027c2      488d35008300.  lea rsi, str.s_online_help:___s         ; 0xaac9 ; "\n%s online help: <%s>\n"
0x000027c9      4d85e4         test r12, r12
0x000027cc      0f84c1000000   je 0x2893
0x000027d2      e8a9f2ffff     call sym.imp.dcgettext
0x000027d7      488d0dc28d00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0xb5a0 ; "https://www.gnu.org/software/coreutils/"
0x000027de      488d15fb8200.  lea rdx, str.GNU_coreutils              ; 0xaae0 ; "GNU coreutils"
0x000027e5      4889c6         mov rsi, rax
0x000027e8      bf01000000     mov edi, 1
0x000027ed      31c0           xor eax, eax
0x000027ef      e8dcf4ffff     call sym.imp.__printf_chk
0x000027f4      31f6           xor esi, esi
0x000027f6      bf05000000     mov edi, 5
0x000027fb      e8c0f4ffff     call sym.imp.setlocale
0x00002800      4885c0         test rax, rax
0x00002803      741c           je 0x2821
0x00002805      488d35e28200.  lea rsi, [0x0000aaee]                   ; "en_"
0x0000280c      ba03000000     mov edx, 3
0x00002811      4889c7         mov rdi, rax
0x00002814      e8b7f1ffff     call sym.imp.strncmp
0x00002819      85c0           test eax, eax
0x0000281b      0f8507010000   jne 0x2928
0x00002821      488d35ca8200.  lea rsi, str.Full_documentation___s_s   ; 0xaaf2 ; "Full documentation <%s%s>\n"
0x00002828      31ff           xor edi, edi
0x0000282a      ba05000000     mov edx, 5
0x0000282f      e84cf2ffff     call sym.imp.dcgettext
0x00002834      488d0d298200.  lea rcx, str.chown                      ; 0xaa64 ; "chown"
0x0000283b      488d155e8d00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0xb5a0 ; "https://www.gnu.org/software/coreutils/"
0x00002842      4889c6         mov rsi, rax
0x00002845      bf01000000     mov edi, 1
0x0000284a      31c0           xor eax, eax
0x0000284c      e87ff4ffff     call sym.imp.__printf_chk
0x00002851      4939dc         cmp r12, rbx
0x00002854      488d0d2b8200.  lea rcx, [0x0000aa86]                   ; " invocation"
0x0000285b      488d1de79700.  lea rbx, [0x0000c049]
0x00002862      480f44d9       cmove rbx, rcx
0x00002866      488d35a38d00.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0xb610 ; "or available locally via: info '(coreutils) %s%s'\n"
0x0000286d      31ff           xor edi, edi
0x0000286f      ba05000000     mov edx, 5
0x00002874      e807f2ffff     call sym.imp.dcgettext
0x00002879      4889d9         mov rcx, rbx
0x0000287c      4889c6         mov rsi, rax
0x0000287f      4c89e2         mov rdx, r12
0x00002882      bf01000000     mov edi, 1
0x00002887      31c0           xor eax, eax
0x00002889      e842f4ffff     call sym.imp.__printf_chk
0x0000288e      e953fcffff     jmp 0x24e6
0x00002893      e8e8f1ffff     call sym.imp.dcgettext
0x00002898      488d0d018d00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0xb5a0 ; "https://www.gnu.org/software/coreutils/"
0x0000289f      488d153a8200.  lea rdx, str.GNU_coreutils              ; 0xaae0 ; "GNU coreutils"
0x000028a6      4889c6         mov rsi, rax
0x000028a9      bf01000000     mov edi, 1
0x000028ae      31c0           xor eax, eax
0x000028b0      e81bf4ffff     call sym.imp.__printf_chk
0x000028b5      31f6           xor esi, esi
0x000028b7      bf05000000     mov edi, 5
0x000028bc      e8fff3ffff     call sym.imp.setlocale
0x000028c1      4885c0         test rax, rax
0x000028c4      7418           je 0x28de
0x000028c6      488d35218200.  lea rsi, [0x0000aaee]                   ; "en_"
0x000028cd      ba03000000     mov edx, 3
0x000028d2      4889c7         mov rdi, rax
0x000028d5      e8f6f0ffff     call sym.imp.strncmp
0x000028da      85c0           test eax, eax
0x000028dc      7543           jne 0x2921
0x000028de      488d350d8200.  lea rsi, str.Full_documentation___s_s   ; 0xaaf2 ; "Full documentation <%s%s>\n"
0x000028e5      ba05000000     mov edx, 5
0x000028ea      31ff           xor edi, edi
0x000028ec      4c8d25718100.  lea r12, str.chown                      ; 0xaa64 ; "chown"
0x000028f3      488d1d8c8100.  lea rbx, [0x0000aa86]                   ; " invocation"
0x000028fa      e881f1ffff     call sym.imp.dcgettext
0x000028ff      488d0d5e8100.  lea rcx, str.chown                      ; 0xaa64 ; "chown"
0x00002906      488d15938c00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0xb5a0 ; "https://www.gnu.org/software/coreutils/"
0x0000290d      4889c6         mov rsi, rax
0x00002910      bf01000000     mov edi, 1
0x00002915      31c0           xor eax, eax
0x00002917      e8b4f3ffff     call sym.imp.__printf_chk
0x0000291c      e945ffffff     jmp 0x2866
0x00002921      4c8d253c8100.  lea r12, str.chown                      ; 0xaa64 ; "chown"
0x00002928      4c8b2d59c720.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20f088:8]=0
0x0000292f      488d35928c00.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0xb5c8 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x00002936      31ff           xor edi, edi
0x00002938      ba05000000     mov edx, 5
0x0000293d      e83ef1ffff     call sym.imp.dcgettext
0x00002942      4c89ee         mov rsi, r13
0x00002945      4889c7         mov rdi, rax
0x00002948      e863f2ffff     call sym.imp.fputs_unlocked
0x0000294d      e9cffeffff     jmp 0x2821
0x00002952      662e0f1f8400.  nop word cs:[rax + rax]
0x0000295c      0f1f4000       nop dword [rax]
;-- user_group_str:
0x00002960      4885ff         test rdi, rdi
0x00002963      4154           push r12
0x00002965      55             push rbp
0x00002966      53             push rbx
0x00002967      744f           je 0x29b8
0x00002969      4885f6         test rsi, rsi
0x0000296c      7452           je 0x29c0
0x0000296e      4889f3         mov rbx, rsi
0x00002971      4889fd         mov rbp, rdi
0x00002974      e827f1ffff     call sym.imp.strlen
0x00002979      4889df         mov rdi, rbx
0x0000297c      4989c4         mov r12, rax
0x0000297f      e81cf1ffff     call sym.imp.strlen
0x00002984      498d7c0402     lea rdi, [r12 + rax + 2]
0x00002989      e8a2390000     call sym.xmalloc
0x0000298e      4889ee         mov rsi, rbp
0x00002991      4889c7         mov rdi, rax
0x00002994      4989c4         mov r12, rax
0x00002997      e8d4f0ffff     call sym.imp.stpcpy
0x0000299c      488d7801       lea rdi, [rax + 1]
0x000029a0      c6003a         mov byte [rax], 0x3a                    ; ':'
                                                                       ; [0x3a:1]=64
0x000029a3      4889de         mov rsi, rbx
0x000029a6      e845f0ffff     call sym.imp.strcpy
0x000029ab      4c89e0         mov rax, r12
0x000029ae      5b             pop rbx
0x000029af      5d             pop rbp
0x000029b0      415c           pop r12
0x000029b2      c3             ret
0x000029b3      0f1f440000     nop dword [rax + rax]
0x000029b8      4885f6         test rsi, rsi
0x000029bb      7413           je 0x29d0
0x000029bd      4889f7         mov rdi, rsi
0x000029c0      5b             pop rbx
0x000029c1      5d             pop rbp
0x000029c2      415c           pop r12
0x000029c4      e9973b0000     jmp sym.xstrdup
0x000029c9      0f1f80000000.  nop dword [rax]
0x000029d0      4531e4         xor r12d, r12d
0x000029d3      ebd6           jmp 0x29ab
0x000029d5      90             nop
0x000029d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- chopt_init:
0x000029e0      c70702000000   mov dword [rdi], 2
0x000029e6      48c747080000.  mov qword [rdi + 8], 0
0x000029ee      c6471001       mov byte [rdi + 0x10], 1
0x000029f2      c6470400       mov byte [rdi + 4], 0
0x000029f6      c6471100       mov byte [rdi + 0x11], 0
0x000029fa      48c747180000.  mov qword [rdi + 0x18], 0
0x00002a02      48c747200000.  mov qword [rdi + 0x20], 0
0x00002a0a      c3             ret
0x00002a0b      0f1f440000     nop dword [rax + rax]
;-- chopt_free:
0x00002a10      53             push rbx
0x00002a11      4889fb         mov rbx, rdi
0x00002a14      488b7f18       mov rdi, qword [rdi + 0x18]
0x00002a18      e8c3f3ffff     call sym..plt.got
0x00002a1d      488b7b20       mov rdi, qword [rbx + 0x20]
0x00002a21      5b             pop rbx
0x00002a22      e9b9f3ffff     jmp sym..plt.got
0x00002a27      660f1f840000.  nop word [rax + rax]
;-- gid_to_name:
0x00002a30      53             push rbx
0x00002a31      89fb           mov ebx, edi
0x00002a33      4883ec20       sub rsp, 0x20
0x00002a37      64488b042528.  mov rax, qword fs:[0x28]
0x00002a40      4889442418     mov qword [rsp + 0x18], rax
0x00002a45      31c0           xor eax, eax
0x00002a47      e8c4f0ffff     call sym.imp.getgrgid
0x00002a4c      4885c0         test rax, rax
0x00002a4f      741f           je 0x2a70
0x00002a51      488b38         mov rdi, qword [rax]
0x00002a54      e8073b0000     call sym.xstrdup
0x00002a59      488b542418     mov rdx, qword [rsp + 0x18]
0x00002a5e      644833142528.  xor rdx, qword fs:[0x28]
0x00002a67      7516           jne 0x2a7f
0x00002a69      4883c420       add rsp, 0x20
0x00002a6d      5b             pop rbx
0x00002a6e      c3             ret
0x00002a6f      90             nop
0x00002a70      89df           mov edi, ebx
0x00002a72      4889e6         mov rsi, rsp
0x00002a75      e8f60f0000     call sym.umaxtostr
0x00002a7a      4889c7         mov rdi, rax
0x00002a7d      ebd5           jmp 0x2a54
0x00002a7f      e84cf0ffff     call sym.imp.__stack_chk_fail
0x00002a84      6690           nop
0x00002a86      662e0f1f8400.  nop word cs:[rax + rax]
;-- uid_to_name:
0x00002a90      53             push rbx
0x00002a91      89fb           mov ebx, edi
0x00002a93      4883ec20       sub rsp, 0x20
0x00002a97      64488b042528.  mov rax, qword fs:[0x28]
0x00002aa0      4889442418     mov qword [rsp + 0x18], rax
0x00002aa5      31c0           xor eax, eax
0x00002aa7      e8a4efffff     call sym.imp.getpwuid
0x00002aac      4885c0         test rax, rax
0x00002aaf      741f           je 0x2ad0
0x00002ab1      488b38         mov rdi, qword [rax]
0x00002ab4      e8a73a0000     call sym.xstrdup
0x00002ab9      488b542418     mov rdx, qword [rsp + 0x18]
0x00002abe      644833142528.  xor rdx, qword fs:[0x28]
0x00002ac7      7516           jne 0x2adf
0x00002ac9      4883c420       add rsp, 0x20
0x00002acd      5b             pop rbx
0x00002ace      c3             ret
0x00002acf      90             nop
0x00002ad0      89df           mov edi, ebx
0x00002ad2      4889e6         mov rsi, rsp
0x00002ad5      e8960f0000     call sym.umaxtostr
0x00002ada      4889c7         mov rdi, rax
0x00002add      ebd5           jmp 0x2ab4
0x00002adf      e8ecefffff     call sym.imp.__stack_chk_fail
0x00002ae4      6690           nop
0x00002ae6      662e0f1f8400.  nop word cs:[rax + rax]
;-- change_file_owner:
0x00002af0      4157           push r15
0x00002af2      4156           push r14
0x00002af4      4155           push r13
0x00002af6      4154           push r12
0x00002af8      4589c4         mov r12d, r8d
0x00002afb      55             push rbp
0x00002afc      53             push rbx
0x00002afd      4889f5         mov rbp, rsi
0x00002b00      4881ec780100.  sub rsp, 0x178
0x00002b07      440fb77670     movzx r14d, word [rsi + 0x70]
0x00002b0c      64488b042528.  mov rax, qword fs:[0x28]
0x00002b15      488984246801.  mov qword [rsp + 0x168], rax
0x00002b1d      31c0           xor eax, eax
0x00002b1f      488b4638       mov rax, qword [rsi + 0x38]
0x00002b23      48893c24       mov qword [rsp], rdi
0x00002b27      89542410       mov dword [rsp + 0x10], edx
0x00002b2b      894c2418       mov dword [rsp + 0x18], ecx
0x00002b2f      664183fe0a     cmp r14w, 0xa
0x00002b34      488b9c24b001.  mov rbx, qword [rsp + 0x1b0]
0x00002b3c      4889442408     mov qword [rsp + 8], rax
0x00002b41      7738           ja 0x2b7b
0x00002b43      488d0d1e8f00.  lea rcx, [0x0000ba68]
0x00002b4a      410fb7d6       movzx edx, r14w
0x00002b4e      48630491       movsxd rax, dword [rcx + rdx*4]
0x00002b52      4801c8         add rax, rcx
0x00002b55      ffe0           jmp rax
0x00002b57      660f1f840000.  nop word [rax + rax]
0x00002b60      488b3c24       mov rdi, qword [rsp]
0x00002b64      44894c2420     mov dword [rsp + 0x20], r9d
0x00002b69      e8a23a0000     call sym.cycle_warning_required
0x00002b6e      84c0           test al, al
0x00002b70      448b4c2420     mov r9d, dword [rsp + 0x20]
0x00002b75      0f85dd070000   jne 0x3358
0x00002b7b      4183fcff       cmp r12d, 0xffffffff
0x00002b7f      4c8b5d30       mov r11, qword [rbp + 0x30]
0x00002b83      0fb64b10       movzx ecx, byte [rbx + 0x10]
0x00002b87      0f94c2         sete dl
0x00002b8a      4183f9ff       cmp r9d, 0xffffffff
0x00002b8e      4c8d6d78       lea r13, [rbp + 0x78]
0x00002b92      0f94c0         sete al
0x00002b95      20c2           and dl, al
0x00002b97      4189d7         mov r15d, edx
0x00002b9a      7414           je 0x2bb0
0x00002b9c      833b02         cmp dword [rbx], 2
0x00002b9f      750f           jne 0x2bb0
0x00002ba1      48837b0800     cmp qword [rbx + 8], 0
0x00002ba6      0f8474080000   je 0x3420
0x00002bac      0f1f4000       nop dword [rax]
0x00002bb0      84c9           test cl, cl
0x00002bb2      0f8500020000   jne 0x2db8
0x00002bb8      4489f0         mov eax, r14d
0x00002bbb      83e0fd         and eax, 0xfffffffd                     ; 4294967293
0x00002bbe      6683f804       cmp ax, 4
0x00002bc2      0f94c0         sete al
0x00002bc5      4183ee01       sub r14d, 1
0x00002bc9      664183fe01     cmp r14w, 1
0x00002bce      0f96c2         setbe dl
0x00002bd1      09d0           or eax, edx
0x00002bd3      4183fcff       cmp r12d, 0xffffffff
0x00002bd7      0f84ab010000   je 0x2d88
0x00002bdd      4539651c       cmp dword [r13 + 0x1c], r12d
0x00002be1      0f84a1010000   je 0x2d88
0x00002be7      84c0           test al, al
0x00002be9      0f84370a0000   je 0x3626
0x00002bef      488b5308       mov rdx, qword [rbx + 8]
0x00002bf3      4885d2         test rdx, rdx
0x00002bf6      0f84330c0000   je 0x382f
0x00002bfc      31c9           xor ecx, ecx
0x00002bfe      488b02         mov rax, qword [rdx]
0x00002c01      49394508       cmp qword [r13 + 8], rax
0x00002c05      0f842d040000   je 0x3038
0x00002c0b      84c9           test cl, cl
0x00002c0d      0f841c0c0000   je 0x382f
0x00002c13      0fb64b10       movzx ecx, byte [rbx + 0x10]
0x00002c17      488b0424       mov rax, qword [rsp]
0x00002c1b      84c9           test cl, cl
0x00002c1d      448b702c       mov r14d, dword [rax + 0x2c]
0x00002c21      0f85a9040000   jne 0x30d0
0x00002c27      8b4c2418       mov ecx, dword [rsp + 0x18]
0x00002c2b      8b542410       mov edx, dword [rsp + 0x10]
0x00002c2f      41b800010000   mov r8d, 0x100
0x00002c35      4c89de         mov rsi, r11
0x00002c38      4489f7         mov edi, r14d
0x00002c3b      e830f1ffff     call sym.imp.fchownat
0x00002c40      85c0           test eax, eax
0x00002c42      410f94c7       sete r15b
0x00002c46      740e           je 0x2c56
0x00002c48      e873edffff     call sym.imp.__errno_location
0x00002c4d      83385f         cmp dword [rax], 0x5f
0x00002c50      0f8452080000   je 0x34a8
0x00002c56      4584ff         test r15b, r15b
0x00002c59      0f8539050000   jne 0x3198
0x00002c5f      440fb67b11     movzx r15d, byte [rbx + 0x11]
0x00002c64      4584ff         test r15b, r15b
0x00002c67      0f840b060000   je 0x3278
0x00002c6d      8b03           mov eax, dword [rbx]
0x00002c6f      4531ff         xor r15d, r15d
0x00002c72      83f802         cmp eax, 2
0x00002c75      0f84e7000000   je 0x2d62
0x00002c7b      85c0           test eax, eax
0x00002c7d      0f85df000000   jne 0x2d62
0x00002c83      c744242c0300.  mov dword [rsp + 0x2c], 3
0x00002c8b      418b7d1c       mov edi, dword [r13 + 0x1c]
0x00002c8f      e8fcfdffff     call sym.uid_to_name
0x00002c94      418b7d20       mov edi, dword [r13 + 0x20]
0x00002c98      4889442410     mov qword [rsp + 0x10], rax
0x00002c9d      e88efdffff     call sym.gid_to_name
0x00002ca2      4c8b6320       mov r12, qword [rbx + 0x20]
0x00002ca6      4c8b7318       mov r14, qword [rbx + 0x18]
0x00002caa      4989c5         mov r13, rax
0x00002cad      4c89e6         mov rsi, r12
0x00002cb0      4c89f7         mov rdi, r14
0x00002cb3      e8a8fcffff     call sym.user_group_str
0x00002cb8      4d85e4         test r12, r12
0x00002cbb      be00000000     mov esi, 0
0x00002cc0      4889442418     mov qword [rsp + 0x18], rax
0x00002cc5      490f45f5       cmovne rsi, r13
0x00002cc9      4d85f6         test r14, r14
0x00002ccc      0f845e050000   je 0x3230
0x00002cd2      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002cd7      e884fcffff     call sym.user_group_str
0x00002cdc      4889442420     mov qword [rsp + 0x20], rax
0x00002ce1      8b44242c       mov eax, dword [rsp + 0x2c]
0x00002ce5      83f803         cmp eax, 3
0x00002ce8      0f8412050000   je 0x3200
0x00002cee      83f804         cmp eax, 4
0x00002cf1      0f8559070000   jne 0x3450
0x00002cf7      488d35128d00.  lea rsi, str.ownership_of__s_retained_as__s ; 0xba10 ; "ownership of %s retained as %s\n"
0x00002cfe      ba05000000     mov edx, 5
0x00002d03      31ff           xor edi, edi
0x00002d05      e876edffff     call sym.imp.dcgettext
0x00002d0a      4989c4         mov r12, rax
0x00002d0d      0f1f00         nop dword [rax]
0x00002d10      488b742408     mov rsi, qword [rsp + 8]
0x00002d15      bf04000000     mov edi, 4
0x00002d1a      e8e1270000     call sym.quotearg_style
0x00002d1f      4c8b742420     mov r14, qword [rsp + 0x20]
0x00002d24      4c8b442418     mov r8, qword [rsp + 0x18]
0x00002d29      4889c2         mov rdx, rax
0x00002d2c      4c89e6         mov rsi, r12
0x00002d2f      bf01000000     mov edi, 1
0x00002d34      31c0           xor eax, eax
0x00002d36      4c89f1         mov rcx, r14
0x00002d39      e892efffff     call sym.imp.__printf_chk
0x00002d3e      4c89f7         mov rdi, r14
0x00002d41      e89af0ffff     call sym..plt.got
0x00002d46      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00002d4b      e890f0ffff     call sym..plt.got
0x00002d50      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002d55      e886f0ffff     call sym..plt.got
0x00002d5a      4c89ef         mov rdi, r13
0x00002d5d      e87ef0ffff     call sym..plt.got
0x00002d62      807b0400       cmp byte [rbx + 4], 0
0x00002d66      0f8574020000   jne 0x2fe0
0x00002d6c      488b3c24       mov rdi, qword [rsp]
0x00002d70      ba04000000     mov edx, 4
0x00002d75      4889ee         mov rsi, rbp
0x00002d78      e8835f0000     call sym.rpl_fts_set
0x00002d7d      e95e020000     jmp 0x2fe0
0x00002d82      660f1f440000   nop word [rax + rax]
0x00002d88      4183f9ff       cmp r9d, 0xffffffff
0x00002d8c      0f847e020000   je 0x3010
0x00002d92      45394d20       cmp dword [r13 + 0x20], r9d
0x00002d96      0f94c1         sete cl
0x00002d99      84c0           test al, al
0x00002d9b      0f846afeffff   je 0x2c0b
0x00002da1      488b5308       mov rdx, qword [rbx + 8]
0x00002da5      4885d2         test rdx, rdx
0x00002da8      0f845dfeffff   je 0x2c0b
0x00002dae      e94bfeffff     jmp 0x2bfe
0x00002db3      0f1f440000     nop dword [rax + rax]
0x00002db8      8b8590000000   mov eax, dword [rbp + 0x90]
0x00002dbe      2500f00000     and eax, 0xf000
0x00002dc3      3d00a00000     cmp eax, 0xa000
0x00002dc8      0f85eafdffff   jne 0x2bb8
0x00002dce      488b0424       mov rax, qword [rsp]
0x00002dd2      4c8d6c2440     lea r13, [rsp + 0x40]
0x00002dd7      4531c0         xor r8d, r8d
0x00002dda      4c89da         mov rdx, r11
0x00002ddd      bf01000000     mov edi, 1
0x00002de2      44894c242c     mov dword [rsp + 0x2c], r9d
0x00002de7      4c89e9         mov rcx, r13
0x00002dea      4c895c2420     mov qword [rsp + 0x20], r11
0x00002def      8b702c         mov esi, dword [rax + 0x2c]
0x00002df2      e829edffff     call sym.imp.__fxstatat
0x00002df7      85c0           test eax, eax
0x00002df9      0f8579070000   jne 0x3578
0x00002dff      440fb77570     movzx r14d, word [rbp + 0x70]
0x00002e04      4c8b5c2420     mov r11, qword [rsp + 0x20]
0x00002e09      448b4c242c     mov r9d, dword [rsp + 0x2c]
0x00002e0e      e9a5fdffff     jmp 0x2bb8
0x00002e13      0f1f440000     nop dword [rax + rax]
0x00002e18      440fb67b04     movzx r15d, byte [rbx + 4]
0x00002e1d      4584ff         test r15b, r15b
0x00002e20      0f8455fdffff   je 0x2b7b
0x00002e26      488b4308       mov rax, qword [rbx + 8]
0x00002e2a      4885c0         test rax, rax
0x00002e2d      0f84ad010000   je 0x2fe0
0x00002e33      488b18         mov rbx, qword [rax]
0x00002e36      48399e800000.  cmp qword [rsi + 0x80], rbx
0x00002e3d      0f859d010000   jne 0x2fe0
0x00002e43      488b4008       mov rax, qword [rax + 8]
0x00002e47      48394678       cmp qword [rsi + 0x78], rax
0x00002e4b      0f858f010000   jne 0x2fe0
0x00002e51      488d158e8c00.  lea rdx, [0x0000bae6]                   ; "/"
0x00002e58      488b742408     mov rsi, qword [rsp + 8]
0x00002e5d      b902000000     mov ecx, 2
0x00002e62      4889d7         mov rdi, rdx
0x00002e65      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002e67      0f97c0         seta al
0x00002e6a      1c00           sbb al, 0
0x00002e6c      84c0           test al, al
0x00002e6e      0f850c090000   jne 0x3780
0x00002e74      488b742408     mov rsi, qword [rsp + 8]
0x00002e79      bf04000000     mov edi, 4
0x00002e7e      e87d260000     call sym.quotearg_style
0x00002e83      488d35f68800.  lea rsi, str.it_is_dangerous_to_operate_recursively_on__s ; 0xb780 ; "it is dangerous to operate recursively on %s"
0x00002e8a      4889c3         mov rbx, rax
0x00002e8d      ba05000000     mov edx, 5
0x00002e92      31ff           xor edi, edi
0x00002e94      e8e7ebffff     call sym.imp.dcgettext
0x00002e99      4889d9         mov rcx, rbx
0x00002e9c      4889c2         mov rdx, rax
0x00002e9f      31f6           xor esi, esi
0x00002ea1      31ff           xor edi, edi
0x00002ea3      31c0           xor eax, eax
0x00002ea5      e846eeffff     call sym.imp.error
0x00002eaa      488d353f8900.  lea rsi, str.use___no_preserve_root_to_override_this_failsafe ; 0xb7f0 ; "use --no-preserve-root to override this failsafe"
0x00002eb1      ba05000000     mov edx, 5
0x00002eb6      31ff           xor edi, edi
0x00002eb8      4531ff         xor r15d, r15d
0x00002ebb      e8c0ebffff     call sym.imp.dcgettext
0x00002ec0      31f6           xor esi, esi
0x00002ec2      4889c2         mov rdx, rax
0x00002ec5      31ff           xor edi, edi
0x00002ec7      31c0           xor eax, eax
0x00002ec9      e822eeffff     call sym.imp.error
0x00002ece      488b1c24       mov rbx, qword [rsp]
0x00002ed2      ba04000000     mov edx, 4
0x00002ed7      4889ee         mov rsi, rbp
0x00002eda      4889df         mov rdi, rbx
0x00002edd      e81e5e0000     call sym.rpl_fts_set
0x00002ee2      4889df         mov rdi, rbx
0x00002ee5      e896560000     call sym.rpl_fts_read
0x00002eea      e9f1000000     jmp 0x2fe0
0x00002eef      90             nop
0x00002ef0      440fb67b11     movzx r15d, byte [rbx + 0x11]
0x00002ef5      4584ff         test r15b, r15b
0x00002ef8      0f8472050000   je 0x3470
0x00002efe      8b03           mov eax, dword [rbx]
0x00002f00      4531ff         xor r15d, r15d
0x00002f03      83f802         cmp eax, 2
0x00002f06      0f8456feffff   je 0x2d62
0x00002f0c      85c0           test eax, eax
0x00002f0e      0f854efeffff   jne 0x2d62
0x00002f14      4531ff         xor r15d, r15d
0x00002f17      c744242c0300.  mov dword [rsp + 0x2c], 3
0x00002f1f      4c8b6320       mov r12, qword [rbx + 0x20]
0x00002f23      4c8b7318       mov r14, qword [rbx + 0x18]
0x00002f27      4531ed         xor r13d, r13d
0x00002f2a      48c744241000.  mov qword [rsp + 0x10], 0
0x00002f33      e975fdffff     jmp 0x2cad
0x00002f38      0f1f84000000.  nop dword [rax + rax]
0x00002f40      440fb67b11     movzx r15d, byte [rbx + 0x11]
0x00002f45      4584ff         test r15b, r15b
0x00002f48      75b4           jne 0x2efe
0x00002f4a      488b542408     mov rdx, qword [rsp + 8]
0x00002f4f      be03000000     mov esi, 3
0x00002f54      31ff           xor edi, edi
0x00002f56      e8a5260000     call sym.quotearg_n_style_colon
0x00002f5b      8b7540         mov esi, dword [rbp + 0x40]
0x00002f5e      488d15c47b00.  lea rdx, [0x0000ab29]                   ; "%s"
0x00002f65      4889c1         mov rcx, rax
0x00002f68      31c0           xor eax, eax
0x00002f6a      31ff           xor edi, edi
0x00002f6c      e87fedffff     call sym.imp.error
0x00002f71      8b03           mov eax, dword [rbx]
0x00002f73      83f802         cmp eax, 2
0x00002f76      7594           jne 0x2f0c
0x00002f78      e9e5fdffff     jmp 0x2d62
0x00002f7d      0f1f00         nop dword [rax]
0x00002f80      48837e5800     cmp qword [rsi + 0x58], 0
0x00002f85      750b           jne 0x2f92
0x00002f87      48837e2000     cmp qword [rsi + 0x20], 0
0x00002f8c      0f84c6050000   je 0x3558
0x00002f92      440fb67b11     movzx r15d, byte [rbx + 0x11]
0x00002f97      4584ff         test r15b, r15b
0x00002f9a      0f855effffff   jne 0x2efe
0x00002fa0      488b742408     mov rsi, qword [rsp + 8]
0x00002fa5      bf04000000     mov edi, 4
0x00002faa      e851250000     call sym.quotearg_style
0x00002faf      488d35e18600.  lea rsi, str.cannot_access__s           ; 0xb697 ; "cannot access %s"
0x00002fb6      4989c4         mov r12, rax
0x00002fb9      ba05000000     mov edx, 5
0x00002fbe      31ff           xor edi, edi
0x00002fc0      e8bbeaffff     call sym.imp.dcgettext
0x00002fc5      8b7540         mov esi, dword [rbp + 0x40]
0x00002fc8      4c89e1         mov rcx, r12
0x00002fcb      4889c2         mov rdx, rax
0x00002fce      eb98           jmp 0x2f68
0x00002fd0      807b0400       cmp byte [rbx + 4], 0
0x00002fd4      0f85a1fbffff   jne 0x2b7b
0x00002fda      41bf01000000   mov r15d, 1
0x00002fe0      488b9c246801.  mov rbx, qword [rsp + 0x168]
0x00002fe8      6448331c2528.  xor rbx, qword fs:[0x28]
0x00002ff1      4489f8         mov eax, r15d
0x00002ff4      0f8530080000   jne 0x382a
0x00002ffa      4881c4780100.  add rsp, 0x178
0x00003001      5b             pop rbx
0x00003002      5d             pop rbp
0x00003003      415c           pop r12
0x00003005      415d           pop r13
0x00003007      415e           pop r14
0x00003009      415f           pop r15
0x0000300b      c3             ret
0x0000300c      0f1f4000       nop dword [rax]
0x00003010      84c0           test al, al
0x00003012      0f84fbfbffff   je 0x2c13
0x00003018      488b5308       mov rdx, qword [rbx + 8]
0x0000301c      4885d2         test rdx, rdx
0x0000301f      0f84eefbffff   je 0x2c13
0x00003025      488b3a         mov rdi, qword [rdx]
0x00003028      49397d08       cmp qword [r13 + 8], rdi
0x0000302c      0f85e1fbffff   jne 0x2c13
0x00003032      89c1           mov ecx, eax
0x00003034      0f1f4000       nop dword [rax]
0x00003038      488b4208       mov rax, qword [rdx + 8]
0x0000303c      49394500       cmp qword [r13], rax
0x00003040      0f85c5fbffff   jne 0x2c0b
0x00003046      488d15998a00.  lea rdx, [0x0000bae6]                   ; "/"
0x0000304d      488b742408     mov rsi, qword [rsp + 8]
0x00003052      b902000000     mov ecx, 2
0x00003057      4889d7         mov rdi, rdx
0x0000305a      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000305c      0f97c0         seta al
0x0000305f      1c00           sbb al, 0
0x00003061      84c0           test al, al
0x00003063      0f85df050000   jne 0x3648
0x00003069      488b742408     mov rsi, qword [rsp + 8]
0x0000306e      bf04000000     mov edi, 4
0x00003073      e888240000     call sym.quotearg_style
0x00003078      488d35018700.  lea rsi, str.it_is_dangerous_to_operate_recursively_on__s ; 0xb780 ; "it is dangerous to operate recursively on %s"
0x0000307f      4889c3         mov rbx, rax
0x00003082      ba05000000     mov edx, 5
0x00003087      31ff           xor edi, edi
0x00003089      e8f2e9ffff     call sym.imp.dcgettext
0x0000308e      4889d9         mov rcx, rbx
0x00003091      4889c2         mov rdx, rax
0x00003094      31f6           xor esi, esi
0x00003096      31ff           xor edi, edi
0x00003098      31c0           xor eax, eax
0x0000309a      e851ecffff     call sym.imp.error
0x0000309f      488d354a8700.  lea rsi, str.use___no_preserve_root_to_override_this_failsafe ; 0xb7f0 ; "use --no-preserve-root to override this failsafe"
0x000030a6      ba05000000     mov edx, 5
0x000030ab      31ff           xor edi, edi
0x000030ad      4531ff         xor r15d, r15d
0x000030b0      e8cbe9ffff     call sym.imp.dcgettext
0x000030b5      31f6           xor esi, esi
0x000030b7      4889c2         mov rdx, rax
0x000030ba      31ff           xor edi, edi
0x000030bc      31c0           xor eax, eax
0x000030be      e82decffff     call sym.imp.error
0x000030c3      e918ffffff     jmp 0x2fe0
0x000030c8      0f1f84000000.  nop dword [rax + rax]
0x000030d0      4584ff         test r15b, r15b
0x000030d3      0f8597000000   jne 0x3170
0x000030d9      418b4518       mov eax, dword [r13 + 0x18]
0x000030dd      2500f00000     and eax, 0xf000
0x000030e2      3d00800000     cmp eax, 0x8000
0x000030e7      0f84ab030000   je 0x3498
0x000030ed      3d00400000     cmp eax, 0x4000
0x000030f2      c74424200009.  mov dword [rsp + 0x20], 0x10900         ; [0x10900:4]=-1
0x000030fa      7574           jne 0x3170
0x000030fc      8b542420       mov edx, dword [rsp + 0x20]
0x00003100      4c89de         mov rsi, r11
0x00003103      4489f7         mov edi, r14d
0x00003106      44894c2430     mov dword [rsp + 0x30], r9d
0x0000310b      884c242c       mov byte [rsp + 0x2c], cl
0x0000310f      4c895c2438     mov qword [rsp + 0x38], r11
0x00003114      e867eaffff     call sym.imp.__openat_2
0x00003119      85c0           test eax, eax
0x0000311b      4189c0         mov r8d, eax
0x0000311e      0fb64c242c     movzx ecx, byte [rsp + 0x2c]
0x00003123      448b4c2430     mov r9d, dword [rsp + 0x30]
0x00003128      0f89aa010000   jns 0x32d8
0x0000312e      e88de8ffff     call sym.imp.__errno_location
0x00003133      83380d         cmp dword [rax], 0xd
0x00003136      4989c2         mov r10, rax
0x00003139      0fb64c242c     movzx ecx, byte [rsp + 0x2c]
0x0000313e      448b4c2430     mov r9d, dword [rsp + 0x30]
0x00003143      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x00003148      0f8511fbffff   jne 0x2c5f
0x0000314e      418b4518       mov eax, dword [r13 + 0x18]
0x00003152      2500f00000     and eax, 0xf000
0x00003157      3d00800000     cmp eax, 0x8000
0x0000315c      0f84c4050000   je 0x3726
0x00003162      488b0424       mov rax, qword [rsp]
0x00003166      448b702c       mov r14d, dword [rax + 0x2c]
0x0000316a      660f1f440000   nop word [rax + rax]
0x00003170      8b4c2418       mov ecx, dword [rsp + 0x18]
0x00003174      8b542410       mov edx, dword [rsp + 0x10]
0x00003178      4531c0         xor r8d, r8d
0x0000317b      4c89de         mov rsi, r11
0x0000317e      4489f7         mov edi, r14d
0x00003181      e8eaebffff     call sym.imp.fchownat
0x00003186      85c0           test eax, eax
0x00003188      410f94c7       sete r15b
0x0000318c      e9c5faffff     jmp 0x2c56
0x00003191      0f1f80000000.  nop dword [rax]
0x00003198      8b03           mov eax, dword [rbx]
0x0000319a      83f802         cmp eax, 2
0x0000319d      0f84bffbffff   je 0x2d62
0x000031a3      8b742410       mov esi, dword [rsp + 0x10]
0x000031a7      83feff         cmp esi, 0xffffffff
0x000031aa      7418           je 0x31c4
0x000031ac      4139751c       cmp dword [r13 + 0x1c], esi
0x000031b0      41bf01000000   mov r15d, 1
0x000031b6      c744242c0200.  mov dword [rsp + 0x2c], 2
0x000031be      0f85c7faffff   jne 0x2c8b
0x000031c4      8b742418       mov esi, dword [rsp + 0x18]
0x000031c8      83feff         cmp esi, 0xffffffff
0x000031cb      0f841f020000   je 0x33f0
0x000031d1      41397520       cmp dword [r13 + 0x20], esi
0x000031d5      41bf01000000   mov r15d, 1
0x000031db      c744242c0200.  mov dword [rsp + 0x2c], 2
0x000031e3      0f85a2faffff   jne 0x2c8b
0x000031e9      85c0           test eax, eax
0x000031eb      0f8571fbffff   jne 0x2d62
0x000031f1      c744242c0400.  mov dword [rsp + 0x2c], 4
0x000031f9      e98dfaffff     jmp 0x2c8b
0x000031fe      6690           nop
0x00003200      48837c242000   cmp qword [rsp + 0x20], 0
0x00003206      ba05000000     mov edx, 5
0x0000320b      0f840f030000   je 0x3520
0x00003211      4d85f6         test r14, r14
0x00003214      0f84ae010000   je 0x33c8
0x0000321a      488d35178700.  lea rsi, str.failed_to_change_ownership_of__s_from__s_to__s ; 0xb938 ; "failed to change ownership of %s from %s to %s\n"
0x00003221      31ff           xor edi, edi
0x00003223      e858e8ffff     call sym.imp.dcgettext
0x00003228      4989c4         mov r12, rax
0x0000322b      e9e0faffff     jmp 0x2d10
0x00003230      31ff           xor edi, edi
0x00003232      e829f7ffff     call sym.user_group_str
0x00003237      4889442420     mov qword [rsp + 0x20], rax
0x0000323c      8b44242c       mov eax, dword [rsp + 0x2c]
0x00003240      83f803         cmp eax, 3
0x00003243      74bb           je 0x3200
0x00003245      83f804         cmp eax, 4
0x00003248      0f8552010000   jne 0x33a0
0x0000324e      4d85e4         test r12, r12
0x00003251      ba05000000     mov edx, 5
0x00003256      0f847c030000   je 0x35d8
0x0000325c      488d35c08400.  lea rsi, str.group_of__s_retained_as__s ; 0xb723 ; "group of %s retained as %s\n"
0x00003263      31ff           xor edi, edi
0x00003265      e816e8ffff     call sym.imp.dcgettext
0x0000326a      4989c4         mov r12, rax
0x0000326d      e99efaffff     jmp 0x2d10
0x00003272      660f1f440000   nop word [rax + rax]
0x00003278      488b742408     mov rsi, qword [rsp + 8]
0x0000327d      bf04000000     mov edi, 4
0x00003282      e879220000     call sym.quotearg_style
0x00003287      837c2410ff     cmp dword [rsp + 0x10], 0xffffffff
0x0000328c      4989c6         mov r14, rax
0x0000328f      ba05000000     mov edx, 5
0x00003294      0f846e010000   je 0x3408
0x0000329a      488d35368400.  lea rsi, str.changing_ownership_of__s   ; 0xb6d7 ; "changing ownership of %s"
0x000032a1      31ff           xor edi, edi
0x000032a3      e8d8e7ffff     call sym.imp.dcgettext
0x000032a8      4989c4         mov r12, rax
0x000032ab      e810e7ffff     call sym.imp.__errno_location
0x000032b0      8b30           mov esi, dword [rax]
0x000032b2      31ff           xor edi, edi
0x000032b4      31c0           xor eax, eax
0x000032b6      4c89f1         mov rcx, r14
0x000032b9      4c89e2         mov rdx, r12
0x000032bc      e82feaffff     call sym.imp.error
0x000032c1      8b03           mov eax, dword [rbx]
0x000032c3      83f802         cmp eax, 2
0x000032c6      0f85aff9ffff   jne 0x2c7b
0x000032cc      e991faffff     jmp 0x2d62
0x000032d1      0f1f80000000.  nop dword [rax]
0x000032d8      488d9424d000.  lea rdx, [rsp + 0xd0]
0x000032e0      4489c6         mov esi, r8d
0x000032e3      bf01000000     mov edi, 1
0x000032e8      4489442420     mov dword [rsp + 0x20], r8d
0x000032ed      44894c2430     mov dword [rsp + 0x30], r9d
0x000032f2      884c242c       mov byte [rsp + 0x2c], cl
0x000032f6      e875e9ffff     call sym.imp.__fxstat
0x000032fb      85c0           test eax, eax
0x000032fd      448b442420     mov r8d, dword [rsp + 0x20]
0x00003302      0f85a8020000   jne 0x35b0
0x00003308      488b8424d800.  mov rax, qword [rsp + 0xd8]
0x00003310      49394508       cmp qword [r13 + 8], rax
0x00003314      0fb64c242c     movzx ecx, byte [rsp + 0x2c]
0x00003319      448b4c2430     mov r9d, dword [rsp + 0x30]
0x0000331e      0f847c030000   je 0x36a0
0x00003324      4489442410     mov dword [rsp + 0x10], r8d
0x00003329      e892e6ffff     call sym.imp.__errno_location
0x0000332e      448b442410     mov r8d, dword [rsp + 0x10]
0x00003333      4989c4         mov r12, rax
0x00003336      448b30         mov r14d, dword [rax]
0x00003339      4489c7         mov edi, r8d
0x0000333c      e82fe8ffff     call sym.imp.close
0x00003341      8b03           mov eax, dword [rbx]
0x00003343      45893424       mov dword [r12], r14d
0x00003347      83f802         cmp eax, 2
0x0000334a      0f852bf9ffff   jne 0x2c7b
0x00003350      e90dfaffff     jmp 0x2d62
0x00003355      0f1f00         nop dword [rax]
0x00003358      488b542408     mov rdx, qword [rsp + 8]
0x0000335d      be03000000     mov esi, 3
0x00003362      31ff           xor edi, edi
0x00003364      4531ff         xor r15d, r15d
0x00003367      e894220000     call sym.quotearg_n_style_colon
0x0000336c      488d35b58400.  lea rsi, str.WARNING:_Circular_directory_structure.__This_almost_certainly_means_that_you_have_a_corrupted_file_system.__NOTIFY_YOUR_SYSTEM_MANAGER.__The_following_directory_is_part_of_the_cycle:_____s ; 0xb828 ; "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n"
0x00003373      4889c3         mov rbx, rax
0x00003376      ba05000000     mov edx, 5
0x0000337b      31ff           xor edi, edi
0x0000337d      e8fee6ffff     call sym.imp.dcgettext
0x00003382      4889d9         mov rcx, rbx
0x00003385      4889c2         mov rdx, rax
0x00003388      31f6           xor esi, esi
0x0000338a      31ff           xor edi, edi
0x0000338c      31c0           xor eax, eax
0x0000338e      e85de9ffff     call sym.imp.error
0x00003393      e948fcffff     jmp 0x2fe0
0x00003398      0f1f84000000.  nop dword [rax + rax]
0x000033a0      4d85e4         test r12, r12
0x000033a3      ba05000000     mov edx, 5
0x000033a8      0f8462020000   je 0x3610
0x000033ae      488d355b8500.  lea rsi, str.changed_group_of__s_from__s_to__s ; 0xb910 ; "changed group of %s from %s to %s\n"
0x000033b5      31ff           xor edi, edi
0x000033b7      e8c4e6ffff     call sym.imp.dcgettext
0x000033bc      4989c4         mov r12, rax
0x000033bf      e94cf9ffff     jmp 0x2d10
0x000033c4      0f1f4000       nop dword [rax]
0x000033c8      4d85e4         test r12, r12
0x000033cb      0f843f030000   je 0x3710
0x000033d1      488d35908500.  lea rsi, str.failed_to_change_group_of__s_from__s_to__s ; 0xb968 ; "failed to change group of %s from %s to %s\n"
0x000033d8      31ff           xor edi, edi
0x000033da      e8a1e6ffff     call sym.imp.dcgettext
0x000033df      4989c4         mov r12, rax
0x000033e2      e929f9ffff     jmp 0x2d10
0x000033e7      660f1f840000.  nop word [rax + rax]
0x000033f0      85c0           test eax, eax
0x000033f2      0f8540020000   jne 0x3638
0x000033f8      41bf01000000   mov r15d, 1
0x000033fe      e9eefdffff     jmp 0x31f1
0x00003403      0f1f440000     nop dword [rax + rax]
0x00003408      488d35e18200.  lea rsi, str.changing_group_of__s       ; 0xb6f0 ; "changing group of %s"
0x0000340f      31ff           xor edi, edi
0x00003411      e86ae6ffff     call sym.imp.dcgettext
0x00003416      4989c4         mov r12, rax
0x00003419      e98dfeffff     jmp 0x32ab
0x0000341e      6690           nop
0x00003420      84c9           test cl, cl
0x00003422      0f8590f9ffff   jne 0x2db8
0x00003428      4489f0         mov eax, r14d
0x0000342b      83e0fd         and eax, 0xfffffffd                     ; 4294967293
0x0000342e      6683f804       cmp ax, 4
0x00003432      740f           je 0x3443
0x00003434      4183ee01       sub r14d, 1
0x00003438      664183fe01     cmp r14w, 1
0x0000343d      0f87d4f7ffff   ja 0x2c17
0x00003443      488b0424       mov rax, qword [rsp]
0x00003447      448b702c       mov r14d, dword [rax + 0x2c]
0x0000344b      e9d7f7ffff     jmp 0x2c27
0x00003450      488d35918400.  lea rsi, str.changed_ownership_of__s_from__s_to__s ; 0xb8e8 ; "changed ownership of %s from %s to %s\n"
0x00003457      ba05000000     mov edx, 5
0x0000345c      31ff           xor edi, edi
0x0000345e      e81de6ffff     call sym.imp.dcgettext
0x00003463      4989c4         mov r12, rax
0x00003466      e9a5f8ffff     jmp 0x2d10
0x0000346b      0f1f440000     nop dword [rax + rax]
0x00003470      488b742408     mov rsi, qword [rsp + 8]
0x00003475      bf04000000     mov edi, 4
0x0000347a      e881200000     call sym.quotearg_style
0x0000347f      ba05000000     mov edx, 5
0x00003484      4989c4         mov r12, rax
0x00003487      488d351a8200.  lea rsi, str.cannot_read_directory__s   ; 0xb6a8 ; "cannot read directory %s"
0x0000348e      e92bfbffff     jmp 0x2fbe
0x00003493      0f1f440000     nop dword [rax + rax]
0x00003498      c74424200009.  mov dword [rsp + 0x20], 0x900           ; [0x900:4]=0
0x000034a0      e957fcffff     jmp 0x30fc
0x000034a5      0f1f00         nop dword [rax]
0x000034a8      8b03           mov eax, dword [rbx]
0x000034aa      41bf01000000   mov r15d, 1
0x000034b0      83f802         cmp eax, 2
0x000034b3      0f84a9f8ffff   je 0x2d62
0x000034b9      85c0           test eax, eax
0x000034bb      0f85a1f8ffff   jne 0x2d62
0x000034c1      418b7d1c       mov edi, dword [r13 + 0x1c]
0x000034c5      e8c6f5ffff     call sym.uid_to_name
0x000034ca      418b7d20       mov edi, dword [r13 + 0x20]
0x000034ce      4889442410     mov qword [rsp + 0x10], rax
0x000034d3      e858f5ffff     call sym.gid_to_name
0x000034d8      488b742408     mov rsi, qword [rsp + 8]
0x000034dd      bf04000000     mov edi, 4
0x000034e2      4989c5         mov r13, rax
0x000034e5      e816200000     call sym.quotearg_style
0x000034ea      488d353f8500.  lea rsi, str.neither_symbolic_link__s_nor_referent_has_been_changed ; 0xba30 ; "neither symbolic link %s nor referent has been changed\n"
0x000034f1      4989c4         mov r12, rax
0x000034f4      31ff           xor edi, edi
0x000034f6      ba05000000     mov edx, 5
0x000034fb      e880e5ffff     call sym.imp.dcgettext
0x00003500      4c89e2         mov rdx, r12
0x00003503      4889c6         mov rsi, rax
0x00003506      bf01000000     mov edi, 1
0x0000350b      31c0           xor eax, eax
0x0000350d      e8bee7ffff     call sym.imp.__printf_chk
0x00003512      e939f8ffff     jmp 0x2d50
0x00003517      660f1f840000.  nop word [rax + rax]
0x00003520      4d85f6         test r14, r14
0x00003523      488d35968400.  lea rsi, str.failed_to_change_ownership_of__s_to__s ; 0xb9c0 ; "failed to change ownership of %s to %s\n"
0x0000352a      0f84c0000000   je 0x35f0
0x00003530      31ff           xor edi, edi
0x00003532      e849e5ffff     call sym.imp.dcgettext
0x00003537      4989c4         mov r12, rax
0x0000353a      488b442418     mov rax, qword [rsp + 0x18]
0x0000353f      48c744241800.  mov qword [rsp + 0x18], 0
0x00003548      4889442420     mov qword [rsp + 0x20], rax
0x0000354d      e9bef7ffff     jmp 0x2d10
0x00003552      660f1f440000   nop word [rax + rax]
0x00003558      488b3c24       mov rdi, qword [rsp]
0x0000355c      48c746200100.  mov qword [rsi + 0x20], 1
0x00003564      ba01000000     mov edx, 1
0x00003569      e892570000     call sym.rpl_fts_set
0x0000356e      e967faffff     jmp 0x2fda
0x00003573      0f1f440000     nop dword [rax + rax]
0x00003578      440fb67b11     movzx r15d, byte [rbx + 0x11]
0x0000357d      4584ff         test r15b, r15b
0x00003580      0f85e7f6ffff   jne 0x2c6d
0x00003586      488b742408     mov rsi, qword [rsp + 8]
0x0000358b      bf04000000     mov edi, 4
0x00003590      e86b1f0000     call sym.quotearg_style
0x00003595      ba05000000     mov edx, 5
0x0000359a      4989c6         mov r14, rax
0x0000359d      488d351d8100.  lea rsi, str.cannot_dereference__s      ; 0xb6c1 ; "cannot dereference %s"
0x000035a4      e966feffff     jmp 0x340f
0x000035a9      0f1f80000000.  nop dword [rax]
0x000035b0      4489442418     mov dword [rsp + 0x18], r8d
0x000035b5      e806e4ffff     call sym.imp.__errno_location
0x000035ba      448b442418     mov r8d, dword [rsp + 0x18]
0x000035bf      448b20         mov r12d, dword [rax]
0x000035c2      4989c6         mov r14, rax
0x000035c5      4489c7         mov edi, r8d
0x000035c8      e8a3e5ffff     call sym.imp.close
0x000035cd      458926         mov dword [r14], r12d
0x000035d0      e98af6ffff     jmp 0x2c5f
0x000035d5      0f1f00         nop dword [rax]
0x000035d8      488d35608100.  lea rsi, str.ownership_of__s_retained   ; 0xb73f ; "ownership of %s retained\n"
0x000035df      31ff           xor edi, edi
0x000035e1      e89ae4ffff     call sym.imp.dcgettext
0x000035e6      4989c4         mov r12, rax
0x000035e9      e922f7ffff     jmp 0x2d10
0x000035ee      6690           nop
0x000035f0      4d85e4         test r12, r12
0x000035f3      488d35ee8300.  lea rsi, str.failed_to_change_group_of__s_to__s ; 0xb9e8 ; "failed to change group of %s to %s\n"
0x000035fa      0f8530ffffff   jne 0x3530
0x00003600      488d35918300.  lea rsi, str.failed_to_change_ownership_of__s ; 0xb998 ; "failed to change ownership of %s\n"
0x00003607      e924ffffff     jmp 0x3530
0x0000360c      0f1f4000       nop dword [rax]
0x00003610      488d35ee8000.  lea rsi, str.no_change_to_ownership_of__s ; 0xb705 ; "no change to ownership of %s\n"
0x00003617      31ff           xor edi, edi
0x00003619      e862e4ffff     call sym.imp.dcgettext
0x0000361e      4989c4         mov r12, rax
0x00003621      e9eaf6ffff     jmp 0x2d10
0x00003626      8b03           mov eax, dword [rbx]
0x00003628      83f802         cmp eax, 2
0x0000362b      740b           je 0x3638
0x0000362d      85c0           test eax, eax
0x0000362f      0f8413020000   je 0x3848
0x00003635      0f1f00         nop dword [rax]
0x00003638      41bf01000000   mov r15d, 1
0x0000363e      e91ff7ffff     jmp 0x2d62
0x00003643      0f1f440000     nop dword [rax + rax]
0x00003648      be04000000     mov esi, 4
0x0000364d      bf01000000     mov edi, 1
0x00003652      e8891d0000     call sym.quotearg_n_style
0x00003657      488b542408     mov rdx, qword [rsp + 8]
0x0000365c      31ff           xor edi, edi
0x0000365e      be04000000     mov esi, 4
0x00003663      4889c5         mov rbp, rax
0x00003666      e8751d0000     call sym.quotearg_n_style
0x0000366b      488d353e8100.  lea rsi, str.it_is_dangerous_to_operate_recursively_on__s__same_as__s ; 0xb7b0 ; "it is dangerous to operate recursively on %s (same as %s)"
0x00003672      4889c3         mov rbx, rax
0x00003675      31ff           xor edi, edi
0x00003677      ba05000000     mov edx, 5
0x0000367c      e8ffe3ffff     call sym.imp.dcgettext
0x00003681      4989e8         mov r8, rbp
0x00003684      4889c2         mov rdx, rax
0x00003687      4889d9         mov rcx, rbx
0x0000368a      31f6           xor esi, esi
0x0000368c      31ff           xor edi, edi
0x0000368e      31c0           xor eax, eax
0x00003690      e85be6ffff     call sym.imp.error
0x00003695      e905faffff     jmp 0x309f
0x0000369a      660f1f440000   nop word [rax + rax]
0x000036a0      488b8424d000.  mov rax, qword [rsp + 0xd0]
0x000036a8      49394500       cmp qword [r13], rax
0x000036ac      0f8572fcffff   jne 0x3324
0x000036b2      4183fcff       cmp r12d, 0xffffffff
0x000036b6      0f841c010000   je 0x37d8
0x000036bc      443ba424ec00.  cmp r12d, dword [rsp + 0xec]
0x000036c4      0f8408010000   je 0x37d2
0x000036ca      448944242c     mov dword [rsp + 0x2c], r8d
0x000036cf      884c2420       mov byte [rsp + 0x20], cl
0x000036d3      e8e8e2ffff     call sym.imp.__errno_location
0x000036d8      448b44242c     mov r8d, dword [rsp + 0x2c]
0x000036dd      448b30         mov r14d, dword [rax]
0x000036e0      4989c4         mov r12, rax
0x000036e3      4489c7         mov edi, r8d
0x000036e6      e885e4ffff     call sym.imp.close
0x000036eb      45893424       mov dword [r12], r14d
0x000036ef      8b03           mov eax, dword [rbx]
0x000036f1      0fb64c2420     movzx ecx, byte [rsp + 0x20]
0x000036f6      83f802         cmp eax, 2
0x000036f9      0f85a4faffff   jne 0x31a3
0x000036ff      4189cf         mov r15d, ecx
0x00003702      e95bf6ffff     jmp 0x2d62
0x00003707      660f1f840000.  nop word [rax + rax]
0x00003710      488d35818200.  lea rsi, str.failed_to_change_ownership_of__s ; 0xb998 ; "failed to change ownership of %s\n"
0x00003717      31ff           xor edi, edi
0x00003719      e862e3ffff     call sym.imp.dcgettext
0x0000371e      4989c4         mov r12, rax
0x00003721      e9eaf5ffff     jmp 0x2d10
0x00003726      8b542420       mov edx, dword [rsp + 0x20]
0x0000372a      4c89de         mov rsi, r11
0x0000372d      4489f7         mov edi, r14d
0x00003730      44894c2438     mov dword [rsp + 0x38], r9d
0x00003735      4c89542430     mov qword [rsp + 0x30], r10
0x0000373a      884c242c       mov byte [rsp + 0x2c], cl
0x0000373e      4c895c2420     mov qword [rsp + 0x20], r11
0x00003743      83ca01         or edx, 1
0x00003746      e835e4ffff     call sym.imp.__openat_2
0x0000374b      85c0           test eax, eax
0x0000374d      4189c0         mov r8d, eax
0x00003750      4c8b5c2420     mov r11, qword [rsp + 0x20]
0x00003755      0fb64c242c     movzx ecx, byte [rsp + 0x2c]
0x0000375a      4c8b542430     mov r10, qword [rsp + 0x30]
0x0000375f      448b4c2438     mov r9d, dword [rsp + 0x38]
0x00003764      0f896efbffff   jns 0x32d8
0x0000376a      41833a0d       cmp dword [r10], 0xd
0x0000376e      0f84eef9ffff   je 0x3162
0x00003774      e9e6f4ffff     jmp 0x2c5f
0x00003779      0f1f80000000.  nop dword [rax]
0x00003780      be04000000     mov esi, 4
0x00003785      bf01000000     mov edi, 1
0x0000378a      e8511c0000     call sym.quotearg_n_style
0x0000378f      488b542408     mov rdx, qword [rsp + 8]
0x00003794      31ff           xor edi, edi
0x00003796      be04000000     mov esi, 4
0x0000379b      4989c4         mov r12, rax
0x0000379e      e83d1c0000     call sym.quotearg_n_style
0x000037a3      488d35068000.  lea rsi, str.it_is_dangerous_to_operate_recursively_on__s__same_as__s ; 0xb7b0 ; "it is dangerous to operate recursively on %s (same as %s)"
0x000037aa      4889c3         mov rbx, rax
0x000037ad      31ff           xor edi, edi
0x000037af      ba05000000     mov edx, 5
0x000037b4      e8c7e2ffff     call sym.imp.dcgettext
0x000037b9      4d89e0         mov r8, r12
0x000037bc      4889c2         mov rdx, rax
0x000037bf      4889d9         mov rcx, rbx
0x000037c2      31f6           xor esi, esi
0x000037c4      31ff           xor edi, edi
0x000037c6      31c0           xor eax, eax
0x000037c8      e823e5ffff     call sym.imp.error
0x000037cd      e9d8f6ffff     jmp 0x2eaa
0x000037d2      4183f9ff       cmp r9d, 0xffffffff
0x000037d6      740e           je 0x37e6
0x000037d8      443b8c24f000.  cmp r9d, dword [rsp + 0xf0]
0x000037e0      0f85e4feffff   jne 0x36ca
0x000037e6      8b542418       mov edx, dword [rsp + 0x18]
0x000037ea      8b742410       mov esi, dword [rsp + 0x10]
0x000037ee      4489c7         mov edi, r8d
0x000037f1      884c242c       mov byte [rsp + 0x2c], cl
0x000037f5      4489442420     mov dword [rsp + 0x20], r8d
0x000037fa      e821e5ffff     call sym.imp.fchown
0x000037ff      85c0           test eax, eax
0x00003801      448b442420     mov r8d, dword [rsp + 0x20]
0x00003806      0fb64c242c     movzx ecx, byte [rsp + 0x2c]
0x0000380b      0f859ffdffff   jne 0x35b0
0x00003811      4489c7         mov edi, r8d
0x00003814      884c2420       mov byte [rsp + 0x20], cl
0x00003818      e853e3ffff     call sym.imp.close
0x0000381d      85c0           test eax, eax
0x0000381f      0f853af4ffff   jne 0x2c5f
0x00003825      e9c5feffff     jmp 0x36ef
0x0000382a      e8a1e2ffff     call sym.imp.__stack_chk_fail
0x0000382f      8b03           mov eax, dword [rbx]
0x00003831      41bf01000000   mov r15d, 1
0x00003837      83f802         cmp eax, 2
0x0000383a      0f8422f5ffff   je 0x2d62
0x00003840      85c0           test eax, eax
0x00003842      0f851af5ffff   jne 0x2d62
0x00003848      4d85ed         test r13, r13
0x0000384b      7513           jne 0x3860
0x0000384d      41bf01000000   mov r15d, 1
0x00003853      c744242c0400.  mov dword [rsp + 0x2c], 4
0x0000385b      e9bff6ffff     jmp 0x2f1f
0x00003860      c744242c0400.  mov dword [rsp + 0x2c], 4
0x00003868      41bf01000000   mov r15d, 1
0x0000386e      e918f4ffff     jmp 0x2c8b
0x00003873      0f1f00         nop dword [rax]
0x00003876      662e0f1f8400.  nop word cs:[rax + rax]
;-- chown_files:
0x00003880      4157           push r15
0x00003882      4156           push r14
0x00003884      4189cf         mov r15d, ecx
0x00003887      4155           push r13
0x00003889      4154           push r12
0x0000388b      4589c5         mov r13d, r8d
0x0000388e      55             push rbp
0x0000388f      53             push rbx
0x00003890      4589ce         mov r14d, r9d
0x00003893      4883ec18       sub rsp, 0x18
0x00003897      4183f8ff       cmp r8d, 0xffffffff
0x0000389b      8954240c       mov dword [rsp + 0xc], edx
0x0000389f      4c8b642450     mov r12, qword [rsp + 0x50]
0x000038a4      7512           jne 0x38b8
0x000038a6      4183f9ff       cmp r9d, 0xffffffff
0x000038aa      750c           jne 0x38b8
0x000038ac      41807c241000   cmp byte [r12 + 0x10], 0
0x000038b2      0f84a8000000   je 0x3960
0x000038b8      31d2           xor edx, edx
0x000038ba      bb01000000     mov ebx, 1
0x000038bf      e8fc2c0000     call sym.xfts_open
0x000038c4      4889c5         mov rbp, rax
0x000038c7      eb29           jmp 0x38f2
0x000038c9      0f1f80000000.  nop dword [rax]
0x000038d0      4883ec08       sub rsp, 8
0x000038d4      4589f1         mov r9d, r14d
0x000038d7      4589e8         mov r8d, r13d
0x000038da      4154           push r12
0x000038dc      8b54241c       mov edx, dword [rsp + 0x1c]
0x000038e0      4489f9         mov ecx, r15d
0x000038e3      4889c6         mov rsi, rax
0x000038e6      4889ef         mov rdi, rbp
0x000038e9      e802f2ffff     call sym.change_file_owner
0x000038ee      21c3           and ebx, eax
0x000038f0      58             pop rax
0x000038f1      5a             pop rdx
0x000038f2      4889ef         mov rdi, rbp
0x000038f5      e8864c0000     call sym.rpl_fts_read
0x000038fa      4885c0         test rax, rax
0x000038fd      75d1           jne 0x38d0
0x000038ff      e8bce0ffff     call sym.imp.__errno_location
0x00003904      8b08           mov ecx, dword [rax]
0x00003906      4989c5         mov r13, rax
0x00003909      85c9           test ecx, ecx
0x0000390b      740c           je 0x3919
0x0000390d      410fb65c2411   movzx ebx, byte [r12 + 0x11]
0x00003913      84db           test bl, bl
0x00003915      7461           je 0x3978
0x00003917      31db           xor ebx, ebx
0x00003919      4889ef         mov rdi, rbp
0x0000391c      e8cf4a0000     call sym.rpl_fts_close
0x00003921      85c0           test eax, eax
0x00003923      7425           je 0x394a
0x00003925      488d353d7e00.  lea rsi, str.fts_close_failed           ; 0xb769 ; "fts_close failed"
0x0000392c      ba05000000     mov edx, 5
0x00003931      31ff           xor edi, edi
0x00003933      31db           xor ebx, ebx
0x00003935      e846e1ffff     call sym.imp.dcgettext
0x0000393a      418b7500       mov esi, dword [r13]
0x0000393e      4889c2         mov rdx, rax
0x00003941      31ff           xor edi, edi
0x00003943      31c0           xor eax, eax
0x00003945      e8a6e3ffff     call sym.imp.error
0x0000394a      4883c418       add rsp, 0x18
0x0000394e      89d8           mov eax, ebx
0x00003950      5b             pop rbx
0x00003951      5d             pop rbp
0x00003952      415c           pop r12
0x00003954      415d           pop r13
0x00003956      415e           pop r14
0x00003958      415f           pop r15
0x0000395a      c3             ret
0x0000395b      0f1f440000     nop dword [rax + rax]
0x00003960      89f0           mov eax, esi
0x00003962      83c808         or eax, 8
0x00003965      41833c2402     cmp dword [r12], 2
0x0000396a      0f44f0         cmove esi, eax
0x0000396d      e946ffffff     jmp 0x38b8
0x00003972      660f1f440000   nop word [rax + rax]
0x00003978      488d35da7d00.  lea rsi, str.fts_read_failed            ; 0xb759 ; "fts_read failed"
0x0000397f      31ff           xor edi, edi
0x00003981      ba05000000     mov edx, 5
0x00003986      e8f5e0ffff     call sym.imp.dcgettext
0x0000398b      418b7500       mov esi, dword [r13]
0x0000398f      4889c2         mov rdx, rax
0x00003992      31ff           xor edi, edi
0x00003994      31c0           xor eax, eax
0x00003996      e855e3ffff     call sym.imp.error
0x0000399b      e979ffffff     jmp 0x3919
;-- close_stdout_set_file_name:
0x000039a0      48893d49b720.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x20f0f0:8]=0
0x000039a7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x000039a8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x000039b0      40883d31b720.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x20f0e8:1]=0
0x000039b7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x000039b8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x000039c0      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x000039c1      53             push rbx
0x000039c2      4883ec08       sub rsp, 8
0x000039c6      488b3dbbb620.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20f088:8]=0
0x000039cd      e83e550000     call sym.close_stream
0x000039d2      85c0           test eax, eax
0x000039d4      7416           je 0x39ec
0x000039d6      e8e5dfffff     call sym.imp.__errno_location
0x000039db      803d06b72000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x20f0e8:1]=0
0x000039e2      4889c3         mov rbx, rax
0x000039e5      741c           je 0x3a03
0x000039e7      833820         cmp dword [rax], 0x20
0x000039ea      7517           jne 0x3a03
0x000039ec      488b3dcdb620.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20f0c0:8]=0
0x000039f3      e818550000     call sym.close_stream
0x000039f8      85c0           test eax, eax
0x000039fa      7546           jne 0x3a42
0x000039fc      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00003a00      5b             pop rbx
0x00003a01      5d             pop rbp
0x00003a02      c3             ret
0x00003a03      488d358f8000.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0xba99 ; "write error"
0x00003a0a      31ff           xor edi, edi
0x00003a0c      ba05000000     mov edx, 5
0x00003a11      e86ae0ffff     call sym.imp.dcgettext
0x00003a16      488b3dd3b620.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x20f0f0:8]=0
0x00003a1d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00003a20      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00003a23      7428           je 0x3a4d
0x00003a25      e8a61b0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x00003a2a      8b33           mov esi, dword [rbx]
0x00003a2c      488d15f27000.  lea rdx, str.s:__s                      ; 0xab25 ; "%s: %s"
0x00003a33      4889c1         mov rcx, rax
0x00003a36      4989e8         mov r8, rbp
0x00003a39      31ff           xor edi, edi
0x00003a3b      31c0           xor eax, eax
0x00003a3d      e8aee2ffff     call sym.imp.error
0x00003a42      8b3dd0b52000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x20f018:4]=1
0x00003a48      e893dfffff     call sym.imp._exit
0x00003a4d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x00003a4f      488d15d37000.  lea rdx, [0x0000ab29]                   ; "%s"
0x00003a56      4889c1         mov rcx, rax
0x00003a59      31ff           xor edi, edi
0x00003a5b      31c0           xor eax, eax
0x00003a5d      e88ee2ffff     call sym.imp.error
0x00003a62      ebde           jmp 0x3a42
0x00003a64      662e0f1f8400.  nop word cs:[rax + rax]
0x00003a6e      6690           nop
;-- umaxtostr:
0x00003a70      488d4e14       lea rcx, [rsi + 0x14]                   ; ../coreutils-8.31/lib/anytostr.c:37
0x00003a74      c6461400       mov byte [rsi + 0x14], 0                ; ../coreutils-8.31/lib/anytostr.c:39
0x00003a78      48becdcccccc.  movabs rsi, 0xcccccccccccccccd          ; ../coreutils-8.31/lib/anytostr.c:52
0x00003a82      660f1f440000   nop word [rax + rax]
0x00003a88      4889f8         mov rax, rdi
0x00003a8b      4883e901       sub rcx, 1
0x00003a8f      48f7e6         mul rsi
0x00003a92      48c1ea03       shr rdx, 3
0x00003a96      488d0492       lea rax, [rdx + rdx*4]
0x00003a9a      4801c0         add rax, rax
0x00003a9d      4829c7         sub rdi, rax
0x00003aa0      83c730         add edi, 0x30
0x00003aa3      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/anytostr.c:53
0x00003aa6      408839         mov byte [rcx], dil                     ; ../coreutils-8.31/lib/anytostr.c:52
0x00003aa9      4889d7         mov rdi, rdx                            ; ../coreutils-8.31/lib/anytostr.c:53
0x00003aac      75da           jne 0x3a88
0x00003aae      4889c8         mov rax, rcx                            ; ../coreutils-8.31/lib/anytostr.c:57
0x00003ab1      c3             ret
0x00003ab2      662e0f1f8400.  nop word cs:[rax + rax]
0x00003abc      0f1f4000       nop dword [rax]
;-- set_program_name:
0x00003ac0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00003ac3      53             push rbx
0x00003ac4      7477           je 0x3b3d                               ; ../coreutils-8.31/lib/progname.c:51
0x00003ac6      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x00003acb      4889fb         mov rbx, rdi
0x00003ace      e85de0ffff     call sym.imp.strrchr
0x00003ad3      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00003ad6      7455           je 0x3b2d
0x00003ad8      4c8d4001       lea r8, [rax + 1]
0x00003adc      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x00003adf      4829da         sub rdx, rbx
0x00003ae2      4883fa06       cmp rdx, 6
0x00003ae6      7e45           jle 0x3b2d
0x00003ae8      488d70fa       lea rsi, [rax - 6]
0x00003aec      488d3ded7f00.  lea rdi, str..libs                      ; 0xbae0 ; "/.libs/"
0x00003af3      b907000000     mov ecx, 7
0x00003af8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00003afa      0f97c2         seta dl
0x00003afd      80da00         sbb dl, 0
0x00003b00      84d2           test dl, dl
0x00003b02      7529           jne 0x3b2d
0x00003b04      488d3ddd7f00.  lea rdi, [0x0000bae8]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x00003b0b      b903000000     mov ecx, 3
0x00003b10      4c89c6         mov rsi, r8
0x00003b13      4c89c3         mov rbx, r8
0x00003b16      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00003b18      0f97c2         seta dl
0x00003b1b      80da00         sbb dl, 0
0x00003b1e      84d2           test dl, dl
0x00003b20      750b           jne 0x3b2d
0x00003b22      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00003b26      48891d53b520.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x20f080:8]=0
0x00003b2d      48891dc4b520.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x20f0f8:8]=0
0x00003b34      48891d65b520.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x20f0a0:8]=0
0x00003b3b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x00003b3c      c3             ret
0x00003b3d      488b0d7cb520.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20f0c0:8]=0
0x00003b44      488d3d5d7f00.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0xbaa8 ; "A NULL argv[0] was passed through an exec system call.\n"
0x00003b4b      ba37000000     mov edx, 0x37                           ; '7'
0x00003b50      be01000000     mov esi, 1
0x00003b55      e836e2ffff     call sym.imp.fwrite
0x00003b5a      e851deffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x00003b5f      90             nop
;-- gettext_quote.part.1:
0x00003b60      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00003b61      53             push rbx
0x00003b62      4889fd         mov rbp, rdi
0x00003b65      89f3           mov ebx, esi
0x00003b67      4883ec08       sub rsp, 8
0x00003b6b      e820690000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00003b70      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00003b73      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003b76      80fa55         cmp dl, 0x55
0x00003b79      7475           je 0x3bf0
0x00003b7b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x00003b7e      7420           je 0x3ba0
0x00003b80      488d05747f00.  lea rax, str.l______l                   ; 0xbafb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003b87      488d156f7f00.  lea rdx, [0x0000bafd]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003b8e      83fb09         cmp ebx, 9
0x00003b91      480f45c2       cmovne rax, rdx
0x00003b95      4883c408       add rsp, 8
0x00003b99      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x00003b9a      5d             pop rbp
0x00003b9b      c3             ret
0x00003b9c      0f1f4000       nop dword [rax]
0x00003ba0      0fb65001       movzx edx, byte [rax + 1]
0x00003ba4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003ba7      80fa42         cmp dl, 0x42
0x00003baa      75d4           jne 0x3b80
0x00003bac      80780231       cmp byte [rax + 2], 0x31
0x00003bb0      75ce           jne 0x3b80
0x00003bb2      80780338       cmp byte [rax + 3], 0x38
0x00003bb6      75c8           jne 0x3b80
0x00003bb8      80780430       cmp byte [rax + 4], 0x30
0x00003bbc      75c2           jne 0x3b80
0x00003bbe      80780533       cmp byte [rax + 5], 0x33
0x00003bc2      75bc           jne 0x3b80
0x00003bc4      80780630       cmp byte [rax + 6], 0x30
0x00003bc8      75b6           jne 0x3b80
0x00003bca      80780700       cmp byte [rax + 7], 0
0x00003bce      75b0           jne 0x3b80
0x00003bd0      807d0060       cmp byte [rbp], 0x60
0x00003bd4      488d05197f00.  lea rax, [0x0000baf4]
0x00003bdb      488d15167f00.  lea rdx, [0x0000baf8]
0x00003be2      480f45c2       cmovne rax, rdx
0x00003be6      4883c408       add rsp, 8
0x00003bea      5b             pop rbx
0x00003beb      5d             pop rbp
0x00003bec      c3             ret
0x00003bed      0f1f00         nop dword [rax]
0x00003bf0      0fb65001       movzx edx, byte [rax + 1]
0x00003bf4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003bf7      80fa54         cmp dl, 0x54
0x00003bfa      7584           jne 0x3b80
0x00003bfc      0fb65002       movzx edx, byte [rax + 2]
0x00003c00      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003c03      80fa46         cmp dl, 0x46
0x00003c06      0f8574ffffff   jne 0x3b80
0x00003c0c      8078032d       cmp byte [rax + 3], 0x2d
0x00003c10      0f856affffff   jne 0x3b80
0x00003c16      80780438       cmp byte [rax + 4], 0x38
0x00003c1a      0f8560ffffff   jne 0x3b80
0x00003c20      80780500       cmp byte [rax + 5], 0
0x00003c24      0f8556ffffff   jne 0x3b80
0x00003c2a      807d0060       cmp byte [rbp], 0x60
0x00003c2e      488d05b77e00.  lea rax, [0x0000baec]                   ; "\u2018"
0x00003c35      488d15b47e00.  lea rdx, [0x0000baf0]                   ; "\u2019"
0x00003c3c      480f45c2       cmovne rax, rdx
0x00003c40      4883c408       add rsp, 8
0x00003c44      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00003c45      5d             pop rbp
0x00003c46      c3             ret
0x00003c47      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00003c50      4157           push r15
0x00003c52      4156           push r14
0x00003c54      4589c7         mov r15d, r8d
0x00003c57      4155           push r13
0x00003c59      4154           push r12
0x00003c5b      4989fe         mov r14, rdi
0x00003c5e      55             push rbp
0x00003c5f      53             push rbx
0x00003c60      4489cb         mov ebx, r9d
0x00003c63      4989f5         mov r13, rsi
0x00003c66      4889cd         mov rbp, rcx
0x00003c69      83e302         and ebx, 2
0x00003c6c      4881ecb80000.  sub rsp, 0xb8
0x00003c73      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x00003c7b      4889542410     mov qword [rsp + 0x10], rdx
0x00003c80      4489442408     mov dword [rsp + 8], r8d
0x00003c85      44894c2478     mov dword [rsp + 0x78], r9d
0x00003c8a      4889442420     mov qword [rsp + 0x20], rax
0x00003c8f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00003c97      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x00003c9c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00003ca4      4889442460     mov qword [rsp + 0x60], rax
0x00003ca9      64488b042528.  mov rax, qword fs:[0x28]
0x00003cb2      48898424a800.  mov qword [rsp + 0xa8], rax
0x00003cba      31c0           xor eax, eax
0x00003cbc      e8cfddffff     call sym.imp.__ctype_get_mb_cur_max
0x00003cc1      4183ff0a       cmp r15d, 0xa
0x00003cc5      4889442458     mov qword [rsp + 0x58], rax
0x00003cca      0f87af110000   ja 0x4e7f
0x00003cd0      488d0d897e00.  lea rcx, [0x0000bb60]
0x00003cd7      4489fa         mov edx, r15d
0x00003cda      48630491       movsxd rax, dword [rcx + rdx*4]
0x00003cde      4801c8         add rax, rcx
0x00003ce1      ffe0           jmp rax
0x00003ce3      c644240e01     mov byte [rsp + 0xe], 1
0x00003ce8      c644247c00     mov byte [rsp + 0x7c], 0
0x00003ced      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00003cf0      48c744245000.  mov qword [rsp + 0x50], 0
0x00003cf9      c644240f01     mov byte [rsp + 0xf], 1
0x00003cfe      c644240d00     mov byte [rsp + 0xd], 0
0x00003d03      488d05f37d00.  lea rax, [0x0000bafd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003d0a      48c744241801.  mov qword [rsp + 0x18], 1
0x00003d13      4531ff         xor r15d, r15d
0x00003d16      c74424080200.  mov dword [rsp + 8], 2
0x00003d1e      4889442448     mov qword [rsp + 0x48], rax
0x00003d23      4531db         xor r11d, r11d
0x00003d26      4889e8         mov rax, rbp
0x00003d29      4589e0         mov r8d, r12d
0x00003d2c      4c89dd         mov rbp, r11
0x00003d2f      4989c3         mov r11, rax
0x00003d32      660f1f440000   nop word [rax + rax]
0x00003d38      4939eb         cmp r11, rbp
0x00003d3b      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x00003d3f      4983fbff       cmp r11, 0xffffffffffffffff
0x00003d43      750d           jne 0x3d52
0x00003d45      488b442410     mov rax, qword [rsp + 0x10]
0x00003d4a      803c2800       cmp byte [rax + rbp], 0
0x00003d4e      410f95c4       setne r12b
0x00003d52      4584e4         test r12b, r12b
0x00003d55      0f8455060000   je 0x43b0
0x00003d5b      837c240802     cmp dword [rsp + 8], 2
0x00003d60      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003d65      4c8d0c2f       lea r9, [rdi + rbp]
0x00003d69      0f95c0         setne al
0x00003d6c      2244240d       and al, byte [rsp + 0xd]
0x00003d70      4189c2         mov r10d, eax
0x00003d73      0f84a7000000   je 0x3e20
0x00003d79      488b442418     mov rax, qword [rsp + 0x18]
0x00003d7e      4885c0         test rax, rax
0x00003d81      0f8429040000   je 0x41b0
0x00003d87      4983fbff       cmp r11, 0xffffffffffffffff
0x00003d8b      488d5c0500     lea rbx, [rbp + rax]
0x00003d90      752e           jne 0x3dc0
0x00003d92      4883f801       cmp rax, 1
0x00003d96      7628           jbe 0x3dc0
0x00003d98      4488442438     mov byte [rsp + 0x38], r8b
0x00003d9d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00003da2      4c894c2428     mov qword [rsp + 0x28], r9
0x00003da7      e8f4dcffff     call sym.imp.strlen
0x00003dac      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00003db2      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00003db8      4989c3         mov r11, rax
0x00003dbb      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00003dc0      4c39db         cmp rbx, r11
0x00003dc3      4488542428     mov byte [rsp + 0x28], r10b
0x00003dc8      0f87b2050000   ja 0x4380
0x00003dce      488b542418     mov rdx, qword [rsp + 0x18]
0x00003dd3      488b742448     mov rsi, qword [rsp + 0x48]
0x00003dd8      4c89cf         mov rdi, r9
0x00003ddb      4c895c2440     mov qword [rsp + 0x40], r11
0x00003de0      4488442438     mov byte [rsp + 0x38], r8b
0x00003de5      4c894c2430     mov qword [rsp + 0x30], r9
0x00003dea      e8b1ddffff     call sym.imp.memcmp
0x00003def      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00003df1      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003df6      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00003dfc      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00003e01      0f8579050000   jne 0x4380
0x00003e07      807c240f00     cmp byte [rsp + 0xf], 0
0x00003e0c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003e12      0f857d0f0000   jne 0x4d95
0x00003e18      0f1f84000000.  nop dword [rax + rax]
0x00003e20      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00003e24      80fb7e         cmp bl, 0x7e
0x00003e27      0f871b030000   ja 0x4148
0x00003e2d      488d0d587d00.  lea rcx, [0x0000bb8c]
0x00003e34      0fb6d3         movzx edx, bl
0x00003e37      48630491       movsxd rax, dword [rcx + rdx*4]
0x00003e3b      4801c8         add rax, rcx
0x00003e3e      ffe0           jmp rax
0x00003e40      4531d2         xor r10d, r10d
0x00003e43      4983fb01       cmp r11, 1
0x00003e47      0f95c0         setne al
0x00003e4a      4983fbff       cmp r11, 0xffffffffffffffff
0x00003e4e      750c           jne 0x3e5c
0x00003e50      488b442410     mov rax, qword [rsp + 0x10]
0x00003e55      80780100       cmp byte [rax + 1], 0
0x00003e59      0f95c0         setne al
0x00003e5c      837c240802     cmp dword [rsp + 8], 2
0x00003e61      0f94c2         sete dl
0x00003e64      84c0           test al, al
0x00003e66      0f844c020000   je 0x40b8
0x00003e6c      4531e4         xor r12d, r12d
0x00003e6f      31c0           xor eax, eax
0x00003e71      0f1f80000000.  nop dword [rax]
0x00003e78      807c240d01     cmp byte [rsp + 0xd], 1
0x00003e7d      0f850f010000   jne 0x3f92
0x00003e83      84d2           test dl, dl
0x00003e85      0f8507010000   jne 0x3f92
0x00003e8b      488b742420     mov rsi, qword [rsp + 0x20]
0x00003e90      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00003e93      7414           je 0x3ea9
0x00003e95      89da           mov edx, ebx
0x00003e97      c0ea05         shr dl, 5
0x00003e9a      0fb6d2         movzx edx, dl
0x00003e9d      8b1496         mov edx, dword [rsi + rdx*4]
0x00003ea0      0fa3da         bt edx, ebx
0x00003ea3      0f824a010000   jb 0x3ff3
0x00003ea9      4584d2         test r10b, r10b
0x00003eac      0f8541010000   jne 0x3ff3
0x00003eb2      83f001         xor eax, 1
0x00003eb5      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00003eb9      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x00003ebc      84c0           test al, al
0x00003ebe      7420           je 0x3ee0                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00003ec0      4d39fd         cmp r13, r15
0x00003ec3      7605           jbe 0x3eca
0x00003ec5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003eca      498d4701       lea rax, [r15 + 1]
0x00003ece      4939c5         cmp r13, rax
0x00003ed1      7606           jbe 0x3ed9
0x00003ed3      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003ed9      4983c702       add r15, 2
0x00003edd      4531c0         xor r8d, r8d
0x00003ee0      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00003ee3      7304           jae 0x3ee9                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00003ee5      43881c3e       mov byte [r14 + r15], bl
0x00003ee9      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x00003eee      4983c701       add r15, 1
0x00003ef2      b800000000     mov eax, 0
0x00003ef7      4584e4         test r12b, r12b
0x00003efa      0f44f8         cmove edi, eax
0x00003efd      40887c240e     mov byte [rsp + 0xe], dil
0x00003f02      e931feffff     jmp 0x3d38
0x00003f07      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00003f10      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00003f13      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00003f17      83f802         cmp eax, 2
0x00003f1a      0f84b8050000   je 0x44d8
0x00003f20      83f805         cmp eax, 5
0x00003f23      0f846f050000   je 0x4498
0x00003f29      83f802         cmp eax, 2
0x00003f2c      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003f31      0f94c2         sete dl
0x00003f34      4531e4         xor r12d, r12d
0x00003f37      31c0           xor eax, eax
0x00003f39      e93affffff     jmp 0x3e78
0x00003f3e      6690           nop
0x00003f40      4531d2         xor r10d, r10d
0x00003f43      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00003f48      0f8402050000   je 0x4450
0x00003f4e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00003f53      31d2           xor edx, edx
0x00003f55      31c0           xor eax, eax
0x00003f57      bb27000000     mov ebx, 0x27                           ; '''
0x00003f5c      e917ffffff     jmp 0x3e78
0x00003f61      0f1f80000000.  nop dword [rax]
0x00003f68      ba09000000     mov edx, 9
0x00003f6d      bb74000000     mov ebx, 0x74                           ; 't'
0x00003f72      837c240802     cmp dword [rsp + 8], 2
0x00003f77      0f94c0         sete al
0x00003f7a      2244240f       and al, byte [rsp + 0xf]
0x00003f7e      0f854a010000   jne 0x40ce
0x00003f84      807c240d00     cmp byte [rsp + 0xd], 0
0x00003f89      7565           jne 0x3ff0
0x00003f8b      89d3           mov ebx, edx
0x00003f8d      4531e4         xor r12d, r12d
0x00003f90      31c0           xor eax, eax
0x00003f92      807c240f00     cmp byte [rsp + 0xf], 0
0x00003f97      0f85eefeffff   jne 0x3e8b
0x00003f9d      e907ffffff     jmp 0x3ea9                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00003fa2      660f1f440000   nop word [rax + rax]
0x00003fa8      ba08000000     mov edx, 8
0x00003fad      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003fb2      ebd0           jmp 0x3f84
0x00003fb4      0f1f4000       nop dword [rax]
0x00003fb8      837c240802     cmp dword [rsp + 8], 2
0x00003fbd      0f84cd030000   je 0x4390
0x00003fc3      807c240d00     cmp byte [rsp + 0xd], 0
0x00003fc8      0f8412020000   je 0x41e0
0x00003fce      807c240f00     cmp byte [rsp + 0xf], 0
0x00003fd3      0f8407020000   je 0x41e0
0x00003fd9      48837c241800   cmp qword [rsp + 0x18], 0
0x00003fdf      0f85b6030000   jne 0x439b
0x00003fe5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00003fea      660f1f440000   nop word [rax + rax]
0x00003ff0      4531e4         xor r12d, r12d
0x00003ff3      837c240802     cmp dword [rsp + 8], 2
0x00003ff8      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x00003ffb      807c240f00     cmp byte [rsp + 0xf], 0
0x00004000      89d0           mov eax, edx
0x00004002      0f8550080000   jne 0x4858
0x00004008      4489c0         mov eax, r8d
0x0000400b      83f001         xor eax, 1
0x0000400e      20d0           and al, dl
0x00004010      742f           je 0x4041
0x00004012      4d39fd         cmp r13, r15
0x00004015      7605           jbe 0x401c
0x00004017      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000401c      498d5701       lea rdx, [r15 + 1]
0x00004020      4939d5         cmp r13, rdx
0x00004023      7606           jbe 0x402b
0x00004025      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000402b      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x0000402f      4939d5         cmp r13, rdx
0x00004032      7606           jbe 0x403a
0x00004034      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000403a      4983c703       add r15, 3
0x0000403e      4189c0         mov r8d, eax
0x00004041      4d39fd         cmp r13, r15
0x00004044      7605           jbe 0x404b
0x00004046      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000404b      4983c701       add r15, 1
0x0000404f      4883c501       add rbp, 1
0x00004053      e988feffff     jmp 0x3ee0
0x00004058      0f1f84000000.  nop dword [rax + rax]
0x00004060      807c240d00     cmp byte [rsp + 0xd], 0
0x00004065      0f85c8010000   jne 0x4233
0x0000406b      31d2           xor edx, edx
0x0000406d      f644247801     test byte [rsp + 0x78], 1
0x00004072      0f8413ffffff   je 0x3f8b
0x00004078      4883c501       add rbp, 1
0x0000407c      e9b7fcffff     jmp 0x3d38
0x00004081      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00004088      837c240802     cmp dword [rsp + 8], 2
0x0000408d      0f94c2         sete dl
0x00004090      31c0           xor eax, eax
0x00004092      e9e1fdffff     jmp 0x3e78
0x00004097      660f1f840000.  nop word [rax + rax]
0x000040a0      ba07000000     mov edx, 7
0x000040a5      bb61000000     mov ebx, 0x61                           ; 'a'
0x000040aa      e9d5feffff     jmp 0x3f84
0x000040af      90             nop
0x000040b0      837c240802     cmp dword [rsp + 8], 2
0x000040b5      0f94c2         sete dl
0x000040b8      4885ed         test rbp, rbp
0x000040bb      0f85abfdffff   jne 0x3e6c
0x000040c1      0fb644240f     movzx eax, byte [rsp + 0xf]
0x000040c6      20d0           and al, dl
0x000040c8      0f84aafdffff   je 0x3e78
0x000040ce      4c89dd         mov rbp, r11
0x000040d1      c74424080200.  mov dword [rsp + 8], 2
0x000040d9      e9fb060000     jmp 0x47d9
0x000040de      6690           nop
0x000040e0      837c240802     cmp dword [rsp + 8], 2
0x000040e5      0f94c2         sete dl
0x000040e8      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x000040eb      ebd4           jmp 0x40c1
0x000040ed      0f1f00         nop dword [rax]
0x000040f0      837c240802     cmp dword [rsp + 8], 2
0x000040f5      bb20000000     mov ebx, 0x20                           ; "@"
0x000040fa      0f94c2         sete dl
0x000040fd      ebc2           jmp 0x40c1
0x000040ff      90             nop
0x00004100      ba0d000000     mov edx, 0xd
0x00004105      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000410a      e963feffff     jmp 0x3f72
0x0000410f      90             nop
0x00004110      ba0c000000     mov edx, 0xc
0x00004115      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000411a      e965feffff     jmp 0x3f84
0x0000411f      90             nop
0x00004120      ba0b000000     mov edx, 0xb
0x00004125      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000412a      e955feffff     jmp 0x3f84
0x0000412f      90             nop
0x00004130      ba0a000000     mov edx, 0xa
0x00004135      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x0000413a      e933feffff     jmp 0x3f72
0x0000413f      90             nop
0x00004140      4531d2         xor r10d, r10d
0x00004143      0f1f440000     nop dword [rax + rax]
0x00004148      48837c245801   cmp qword [rsp + 0x58], 1
0x0000414e      0f85a4030000   jne 0x44f8
0x00004154      4c895c2438     mov qword [rsp + 0x38], r11
0x00004159      4488442430     mov byte [rsp + 0x30], r8b
0x0000415e      4488542428     mov byte [rsp + 0x28], r10b
0x00004163      e868dcffff     call sym.imp.__ctype_b_loc
0x00004168      488b08         mov rcx, qword [rax]
0x0000416b      0fb6d3         movzx edx, bl
0x0000416e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00004174      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x0000417a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0000417f      bf01000000     mov edi, 1
0x00004184      0fb70451       movzx eax, word [rcx + rdx*2]
0x00004188      66250040       and ax, 0x4000
0x0000418c      410f95c4       setne r12b
0x00004190      0f94c0         sete al
0x00004193      2244240d       and al, byte [rsp + 0xd]
0x00004197      84c0           test al, al
0x00004199      0f8592090000   jne 0x4b31
0x0000419f      837c240802     cmp dword [rsp + 8], 2
0x000041a4      0f94c2         sete dl
0x000041a7      e9ccfcffff     jmp 0x3e78
0x000041ac      0f1f4000       nop dword [rax]
0x000041b0      410fb619       movzx ebx, byte [r9]
0x000041b4      80fb7e         cmp bl, 0x7e
0x000041b7      7787           ja 0x4140
0x000041b9      488d0dc87b00.  lea rcx, [0x0000bd88]
0x000041c0      0fb6d3         movzx edx, bl
0x000041c3      48630491       movsxd rax, dword [rcx + rdx*4]
0x000041c7      4801c8         add rax, rcx
0x000041ca      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x000041cc      0f1f4000       nop dword [rax]
0x000041d0      4531d2         xor r10d, r10d
0x000041d3      807c240d00     cmp byte [rsp + 0xd], 0
0x000041d8      0f85f0fdffff   jne 0x3fce
0x000041de      6690           nop
0x000041e0      ba5c000000     mov edx, 0x5c                           ; '\'
0x000041e5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000041ea      e995fdffff     jmp 0x3f84
0x000041ef      90             nop
0x000041f0      ba0c000000     mov edx, 0xc
0x000041f5      4531d2         xor r10d, r10d
0x000041f8      bb66000000     mov ebx, 0x66                           ; 'f'
0x000041fd      e982fdffff     jmp 0x3f84
0x00004202      660f1f440000   nop word [rax + rax]
0x00004208      ba0a000000     mov edx, 0xa
0x0000420d      4531d2         xor r10d, r10d
0x00004210      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00004215      e958fdffff     jmp 0x3f72
0x0000421a      660f1f440000   nop word [rax + rax]
0x00004220      bb61000000     mov ebx, 0x61                           ; 'a'
0x00004225      e9c6fdffff     jmp 0x3ff0
0x0000422a      660f1f440000   nop word [rax + rax]
0x00004230      4531d2         xor r10d, r10d
0x00004233      837c240802     cmp dword [rsp + 8], 2
0x00004238      0f94c2         sete dl
0x0000423b      807c240f00     cmp byte [rsp + 0xf], 0
0x00004240      0f85940b0000   jne 0x4dda
0x00004246      4489c0         mov eax, r8d
0x00004249      4c89f9         mov rcx, r15
0x0000424c      83f001         xor eax, 1
0x0000424f      20d0           and al, dl
0x00004251      742d           je 0x4280
0x00004253      4d39fd         cmp r13, r15
0x00004256      7605           jbe 0x425d
0x00004258      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000425d      498d4f01       lea rcx, [r15 + 1]
0x00004261      4939cd         cmp r13, rcx
0x00004264      7606           jbe 0x426c
0x00004266      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000426c      498d4f02       lea rcx, [r15 + 2]
0x00004270      4939cd         cmp r13, rcx
0x00004273      0f8730060000   ja 0x48a9
0x00004279      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x0000427d      4189c0         mov r8d, eax
0x00004280      4939cd         cmp r13, rcx
0x00004283      7605           jbe 0x428a
0x00004285      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000428a      837c240802     cmp dword [rsp + 8], 2
0x0000428f      4c8d7901       lea r15, [rcx + 1]
0x00004293      0f8400060000   je 0x4899
0x00004299      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000429d      4c39d8         cmp rax, r11
0x000042a0      7319           jae 0x42bb                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x000042a2      488b442410     mov rax, qword [rsp + 0x10]
0x000042a7      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x000042ac      88442428       mov byte [rsp + 0x28], al
0x000042b0      83e830         sub eax, 0x30
0x000042b3      3c09           cmp al, 9
0x000042b5      0f862e080000   jbe 0x4ae9
0x000042bb      4489e0         mov eax, r12d
0x000042be      bb30000000     mov ebx, 0x30                           ; '0'
0x000042c3      4531e4         xor r12d, r12d
0x000042c6      e9adfbffff     jmp 0x3e78                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x000042cb      0f1f440000     nop dword [rax + rax]
0x000042d0      837c240802     cmp dword [rsp + 8], 2
0x000042d5      4589d4         mov r12d, r10d
0x000042d8      0f94c2         sete dl
0x000042db      4531d2         xor r10d, r10d
0x000042de      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x000042e0      e993fbffff     jmp 0x3e78                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x000042e5      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x000042e8      837c240802     cmp dword [rsp + 8], 2
0x000042ed      0f94c2         sete dl
0x000042f0      4531d2         xor r10d, r10d
0x000042f3      e9c0fdffff     jmp 0x40b8
0x000042f8      0f1f84000000.  nop dword [rax + rax]
0x00004300      837c240802     cmp dword [rsp + 8], 2
0x00004305      0f94c2         sete dl
0x00004308      4531d2         xor r10d, r10d
0x0000430b      4531e4         xor r12d, r12d
0x0000430e      e9aefdffff     jmp 0x40c1
0x00004313      0f1f440000     nop dword [rax + rax]
0x00004318      837c240802     cmp dword [rsp + 8], 2
0x0000431d      4589d4         mov r12d, r10d
0x00004320      bb20000000     mov ebx, 0x20                           ; "@"
0x00004325      0f94c2         sete dl
0x00004328      4531d2         xor r10d, r10d
0x0000432b      e991fdffff     jmp 0x40c1
0x00004330      ba0d000000     mov edx, 0xd
0x00004335      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00004338      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000433d      e930fcffff     jmp 0x3f72
0x00004342      660f1f440000   nop word [rax + rax]
0x00004348      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000434d      e99efcffff     jmp 0x3ff0
0x00004352      660f1f440000   nop word [rax + rax]
0x00004358      ba09000000     mov edx, 9
0x0000435d      4531d2         xor r10d, r10d
0x00004360      bb74000000     mov ebx, 0x74                           ; 't'
0x00004365      e908fcffff     jmp 0x3f72
0x0000436a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00004370      bb62000000     mov ebx, 0x62                           ; 'b'
0x00004375      e976fcffff     jmp 0x3ff0
0x0000437a      660f1f440000   nop word [rax + rax]
0x00004380      4531d2         xor r10d, r10d
0x00004383      e998faffff     jmp 0x3e20
0x00004388      0f1f84000000.  nop dword [rax + rax]
0x00004390      807c240f00     cmp byte [rsp + 0xf], 0
0x00004395      0f8565090000   jne 0x4d00
0x0000439b      4883c501       add rbp, 1
0x0000439f      4489c0         mov eax, r8d
0x000043a2      4531e4         xor r12d, r12d
0x000043a5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000043aa      e90dfbffff     jmp 0x3ebc
0x000043af      90             nop
0x000043b0      837c240802     cmp dword [rsp + 8], 2
0x000043b5      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000043ba      4589c4         mov r12d, r8d
0x000043bd      4c89dd         mov rbp, r11
0x000043c0      0f94c2         sete dl
0x000043c3      89d8           mov eax, ebx
0x000043c5      4d85ff         test r15, r15
0x000043c8      0f94c1         sete cl
0x000043cb      21d0           and eax, edx
0x000043cd      20c8           and al, cl
0x000043cf      0f85610a0000   jne 0x4e36                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x000043d5      89d8           mov eax, ebx
0x000043d7      83f001         xor eax, 1
0x000043da      20c2           and dl, al
0x000043dc      0f846a090000   je 0x4d4c
0x000043e2      807c247c00     cmp byte [rsp + 0x7c], 0
0x000043e7      0f845d090000   je 0x4d4a
0x000043ed      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x000043f2      0f85f5090000   jne 0x4ded
0x000043f8      4d85ed         test r13, r13
0x000043fb      0f94c0         sete al
0x000043fe      48837c245000   cmp qword [rsp + 0x50], 0
0x00004404      0f95c2         setne dl
0x00004407      20d0           and al, dl
0x00004409      0f841d0a0000   je 0x4e2c
0x0000440f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00004414      488d1de27600.  lea rbx, [0x0000bafd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000441b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x0000441f      c74424080200.  mov dword [rsp + 8], 2
0x00004427      41bf01000000   mov r15d, 1
0x0000442d      48c744241801.  mov qword [rsp + 0x18], 1
0x00004436      c644240f00     mov byte [rsp + 0xf], 0
0x0000443b      48895c2448     mov qword [rsp + 0x48], rbx
0x00004440      8844247c       mov byte [rsp + 0x7c], al
0x00004444      e9daf8ffff     jmp 0x3d23
0x00004449      0f1f80000000.  nop dword [rax]
0x00004450      807c240f00     cmp byte [rsp + 0xf], 0
0x00004455      0f85a5080000   jne 0x4d00
0x0000445b      4d85ed         test r13, r13
0x0000445e      0f84fc030000   je 0x4860                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00004464      31d2           xor edx, edx
0x00004466      48837c245000   cmp qword [rsp + 0x50], 0
0x0000446c      0f85ee030000   jne 0x4860                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00004472      4c896c2450     mov qword [rsp + 0x50], r13
0x00004477      4983c703       add r15, 3
0x0000447b      31c0           xor eax, eax
0x0000447d      448864247c     mov byte [rsp + 0x7c], r12b
0x00004482      4531c0         xor r8d, r8d
0x00004485      4989d5         mov r13, rdx
0x00004488      bb27000000     mov ebx, 0x27                           ; '''
0x0000448d      e917faffff     jmp 0x3ea9
0x00004492      660f1f440000   nop word [rax + rax]
0x00004498      f644247804     test byte [rsp + 0x78], 4
0x0000449d      7421           je 0x44c0
0x0000449f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x000044a3      4c39d9         cmp rcx, r11
0x000044a6      7318           jae 0x44c0
0x000044a8      488b442410     mov rax, qword [rsp + 0x10]
0x000044ad      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x000044b2      0f848a070000   je 0x4c42
0x000044b8      0f1f84000000.  nop dword [rax + rax]
0x000044c0      31d2           xor edx, edx
0x000044c2      4531e4         xor r12d, r12d
0x000044c5      31c0           xor eax, eax
0x000044c7      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000044cc      e9a7f9ffff     jmp 0x3e78
0x000044d1      0f1f80000000.  nop dword [rax]
0x000044d8      807c240f00     cmp byte [rsp + 0xf], 0
0x000044dd      0f851d080000   jne 0x4d00
0x000044e3      4531e4         xor r12d, r12d
0x000044e6      31c0           xor eax, eax
0x000044e8      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000044ed      e9b7f9ffff     jmp 0x3ea9                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x000044f2      660f1f440000   nop word [rax + rax]
0x000044f8      488d8424a000.  lea rax, [rsp + 0xa0]
0x00004500      4983fbff       cmp r11, 0xffffffffffffffff
0x00004504      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00004510      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00004515      752d           jne 0x4544
0x00004517      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000451c      4488442440     mov byte [rsp + 0x40], r8b
0x00004521      4488542438     mov byte [rsp + 0x38], r10b
0x00004526      4c894c2430     mov qword [rsp + 0x30], r9
0x0000452b      e870d5ffff     call sym.imp.strlen
0x00004530      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00004536      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x0000453c      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x0000453f      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00004544      488d84249c00.  lea rax, [rsp + 0x9c]
0x0000454c      31c9           xor ecx, ecx
0x0000454e      885c247e       mov byte [rsp + 0x7e], bl
0x00004552      448844247d     mov byte [rsp + 0x7d], r8b
0x00004557      4889cb         mov rbx, rcx
0x0000455a      4c898c248800.  mov qword [rsp + 0x88], r9
0x00004562      4889442438     mov qword [rsp + 0x38], rax
0x00004567      448854247f     mov byte [rsp + 0x7f], r10b
0x0000456c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00004574      4c89742440     mov qword [rsp + 0x40], r14
0x00004579      4c896c2470     mov qword [rsp + 0x70], r13
0x0000457e      4c895c2430     mov qword [rsp + 0x30], r11
0x00004583      488b442410     mov rax, qword [rsp + 0x10]
0x00004588      4c8d741d00     lea r14, [rbp + rbx]
0x0000458d      488b542430     mov rdx, qword [rsp + 0x30]
0x00004592      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00004597      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000459c      4e8d2c30       lea r13, [rax + r14]
0x000045a0      4c29f2         sub rdx, r14
0x000045a3      4c89ee         mov rsi, r13
0x000045a6      e8d5480000     call sym.rpl_mbrtowc
0x000045ab      4885c0         test rax, rax
0x000045ae      4989c7         mov r15, rax
0x000045b1      744e           je 0x4601
0x000045b3      4883f8ff       cmp rax, 0xffffffffffffffff
0x000045b7      0f8418060000   je 0x4bd5
0x000045bd      4883f8fe       cmp rax, 0xfffffffffffffffe
0x000045c1      0f849a050000   je 0x4b61
0x000045c7      837c240802     cmp dword [rsp + 8], 2
0x000045cc      0f94c0         sete al
0x000045cf      2244240f       and al, byte [rsp + 0xf]
0x000045d3      0f8597010000   jne 0x4770
0x000045d9      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x000045e0      e8dbd7ffff     call sym.imp.iswprint
0x000045e5      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000045ea      85c0           test eax, eax
0x000045ec      b800000000     mov eax, 0
0x000045f1      440f44e0       cmove r12d, eax
0x000045f5      4c01fb         add rbx, r15
0x000045f8      e8b3d7ffff     call sym.imp.mbsinit
0x000045fd      85c0           test eax, eax
0x000045ff      7482           je 0x4583
0x00004601      4489e2         mov edx, r12d
0x00004604      4889df         mov rdi, rbx
0x00004607      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000460d      83f201         xor edx, 1
0x00004610      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00004615      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000461b      2254240d       and dl, byte [rsp + 0xd]
0x0000461f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004627      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000462c      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00004631      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00004636      4883ff01       cmp rdi, 1
0x0000463a      0f86fb050000   jbe 0x4c3b
0x00004640      4889f9         mov rcx, rdi
0x00004643      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00004645      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x0000464b      4801e9         add rcx, rbp
0x0000464e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00004653      e9b6000000     jmp 0x470e
0x00004658      0f1f84000000.  nop dword [rax + rax]
0x00004660      837c240802     cmp dword [rsp + 8], 2
0x00004665      0f94c0         sete al
0x00004668      4584c9         test r9b, r9b
0x0000466b      0f85af040000   jne 0x4b20
0x00004671      4489c6         mov esi, r8d
0x00004674      83f601         xor esi, 1
0x00004677      4020f0         and al, sil
0x0000467a      742f           je 0x46ab                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x0000467c      4d39fd         cmp r13, r15
0x0000467f      7605           jbe 0x4686
0x00004681      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00004686      498d7701       lea rsi, [r15 + 1]
0x0000468a      4939f5         cmp r13, rsi
0x0000468d      7606           jbe 0x4695                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x0000468f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00004695      498d7702       lea rsi, [r15 + 2]
0x00004699      4939f5         cmp r13, rsi
0x0000469c      7606           jbe 0x46a4
0x0000469e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000046a4      4983c703       add r15, 3
0x000046a8      4189c0         mov r8d, eax
0x000046ab      4d39fd         cmp r13, r15
0x000046ae      7605           jbe 0x46b5
0x000046b0      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000046b5      498d4701       lea rax, [r15 + 1]
0x000046b9      4939c5         cmp r13, rax
0x000046bc      760d           jbe 0x46cb
0x000046be      89d8           mov eax, ebx
0x000046c0      c0e806         shr al, 6
0x000046c3      83c030         add eax, 0x30
0x000046c6      4388443e01     mov byte [r14 + r15 + 1], al
0x000046cb      498d4702       lea rax, [r15 + 2]
0x000046cf      4939c5         cmp r13, rax
0x000046d2      7610           jbe 0x46e4
0x000046d4      89d8           mov eax, ebx
0x000046d6      c0e803         shr al, 3
0x000046d9      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x000046dc      83c030         add eax, 0x30
0x000046df      4388443e02     mov byte [r14 + r15 + 2], al
0x000046e4      83e307         and ebx, 7
0x000046e7      4883c501       add rbp, 1
0x000046eb      4983c703       add r15, 3
0x000046ef      83c330         add ebx, 0x30
0x000046f2      4839cd         cmp rbp, rcx
0x000046f5      0f83e5f7ffff   jae 0x3ee0
0x000046fb      89d6           mov esi, edx
0x000046fd      4d39fd         cmp r13, r15
0x00004700      7604           jbe 0x4706
0x00004702      43881c3e       mov byte [r14 + r15], bl
0x00004706      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000470a      4983c701       add r15, 1
0x0000470e      84d2           test dl, dl
0x00004710      0f854affffff   jne 0x4660
0x00004716      89f0           mov eax, esi
0x00004718      83f001         xor eax, 1
0x0000471b      4421c0         and eax, r8d
0x0000471e      4584d2         test r10b, r10b
0x00004721      740e           je 0x4731
0x00004723      4d39fd         cmp r13, r15
0x00004726      7605           jbe 0x472d
0x00004728      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000472d      4983c701       add r15, 1
0x00004731      4883c501       add rbp, 1
0x00004735      4839cd         cmp rbp, rcx
0x00004738      0f837ef7ffff   jae 0x3ebc
0x0000473e      84c0           test al, al
0x00004740      0f84f8030000   je 0x4b3e
0x00004746      4d39fd         cmp r13, r15
0x00004749      7605           jbe 0x4750
0x0000474b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00004750      498d4701       lea rax, [r15 + 1]
0x00004754      4939c5         cmp r13, rax
0x00004757      7606           jbe 0x475f
0x00004759      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000475f      4983c702       add r15, 2
0x00004763      4531d2         xor r10d, r10d
0x00004766      4531c0         xor r8d, r8d
0x00004769      eb92           jmp 0x46fd
0x0000476b      0f1f440000     nop dword [rax + rax]
0x00004770      4983ff01       cmp r15, 1
0x00004774      0f845ffeffff   je 0x45d9
0x0000477a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000477f      4a8d0c3f       lea rcx, [rdi + r15]
0x00004783      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00004788      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000478c      eb0f           jmp 0x479d
0x0000478e      6690           nop
0x00004790      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00004794      4939d0         cmp r8, rdx
0x00004797      0f843cfeffff   je 0x45d9
0x0000479d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x000047a0      83e95b         sub ecx, 0x5b
0x000047a3      80f921         cmp cl, 0x21
0x000047a6      77e8           ja 0x4790                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x000047a8      be01000000     mov esi, 1
0x000047ad      48d3e6         shl rsi, cl
0x000047b0      4889f1         mov rcx, rsi
0x000047b3      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x000047bd      4885f1         test rcx, rsi
0x000047c0      74ce           je 0x4790
0x000047c2      4c8b742440     mov r14, qword [rsp + 0x40]
0x000047c7      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000047cc      488b6c2430     mov rbp, qword [rsp + 0x30]
0x000047d1      c74424080200.  mov dword [rsp + 8], 2
0x000047d9      807c240d00     cmp byte [rsp + 0xd], 0
0x000047de      7410           je 0x47f0
0x000047e0      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x000047e2      b804000000     mov eax, 4
0x000047e7      0f44442408     cmove eax, dword [rsp + 8]
0x000047ec      89442408       mov dword [rsp + 8], eax
0x000047f0      4883ec08       sub rsp, 8
0x000047f4      4889e9         mov rcx, rbp
0x000047f7      4c89ee         mov rsi, r13
0x000047fa      ff742468       push qword [rsp + 0x68]
0x000047fe      ff742478       push qword [rsp + 0x78]
0x00004802      4c89f7         mov rdi, r14
0x00004805      6a00           push 0
0x00004807      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x0000480f      448b442428     mov r8d, dword [rsp + 0x28]
0x00004814      488b542430     mov rdx, qword [rsp + 0x30]
0x00004819      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x0000481d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00004822      4883c420       add rsp, 0x20
0x00004826      4989c7         mov r15, rax
0x00004829      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00004831      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000483a      4c89f8         mov rax, r15
0x0000483d      0f8500060000   jne 0x4e43
0x00004843      4881c4b80000.  add rsp, 0xb8
0x0000484a      5b             pop rbx
0x0000484b      5d             pop rbp
0x0000484c      415c           pop r12
0x0000484e      415d           pop r13
0x00004850      415e           pop r14
0x00004852      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00004854      c3             ret
0x00004855      0f1f00         nop dword [rax]
0x00004858      4c89dd         mov rbp, r11
0x0000485b      e979ffffff     jmp 0x47d9
0x00004860      4d39fd         cmp r13, r15
0x00004863      7605           jbe 0x486a
0x00004865      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000486a      498d4701       lea rax, [r15 + 1]
0x0000486e      4939c5         cmp r13, rax
0x00004871      7606           jbe 0x4879
0x00004873      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00004879      498d4702       lea rax, [r15 + 2]
0x0000487d      4939c5         cmp r13, rax
0x00004880      0f86ec050000   jbe 0x4e72
0x00004886      4c89ea         mov rdx, r13
0x00004889      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000488f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00004894      e9d9fbffff     jmp 0x4472
0x00004899      4489e0         mov eax, r12d
0x0000489c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x000048a1      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x000048a4      e900f6ffff     jmp 0x3ea9                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x000048a9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000048af      e9c5f9ffff     jmp 0x4279
0x000048b4      85db           test ebx, ebx
0x000048b6      0f8527f4ffff   jne 0x3ce3
0x000048bc      c644240d01     mov byte [rsp + 0xd], 1
0x000048c1      4d85ed         test r13, r13
0x000048c4      0f8590050000   jne 0x4e5a
0x000048ca      488d052c7200.  lea rax, [0x0000bafd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000048d1      48c744245000.  mov qword [rsp + 0x50], 0
0x000048da      c644240e01     mov byte [rsp + 0xe], 1
0x000048df      c644247c00     mov byte [rsp + 0x7c], 0
0x000048e4      4531e4         xor r12d, r12d
0x000048e7      c644240f00     mov byte [rsp + 0xf], 0
0x000048ec      48c744241801.  mov qword [rsp + 0x18], 1
0x000048f5      4889442448     mov qword [rsp + 0x48], rax
0x000048fa      41bf01000000   mov r15d, 1
0x00004900      c74424080200.  mov dword [rsp + 8], 2
0x00004908      e916f4ffff     jmp 0x3d23                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x0000490d      0f1f00         nop dword [rax]
0x00004910      85db           test ebx, ebx
0x00004912      0f85f5030000   jne 0x4d0d
0x00004918      4d85ed         test r13, r13
0x0000491b      0f8425020000   je 0x4b46
0x00004921      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00004925      c644240e01     mov byte [rsp + 0xe], 1
0x0000492a      4531e4         xor r12d, r12d
0x0000492d      c644247c00     mov byte [rsp + 0x7c], 0
0x00004932      48c744245000.  mov qword [rsp + 0x50], 0
0x0000493b      488d05b97100.  lea rax, str.l______l                   ; 0xbafb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004942      c644240f00     mov byte [rsp + 0xf], 0
0x00004947      c644240d01     mov byte [rsp + 0xd], 1
0x0000494c      48c744241801.  mov qword [rsp + 0x18], 1
0x00004955      41bf01000000   mov r15d, 1
0x0000495b      4889442448     mov qword [rsp + 0x48], rax
0x00004960      e9bef3ffff     jmp 0x3d23
0x00004965      488d058f7100.  lea rax, str.l______l                   ; 0xbafb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000496c      c644240e01     mov byte [rsp + 0xe], 1
0x00004971      c644247c00     mov byte [rsp + 0x7c], 0
0x00004976      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00004979      48c744245000.  mov qword [rsp + 0x50], 0
0x00004982      c644240f01     mov byte [rsp + 0xf], 1
0x00004987      c644240d01     mov byte [rsp + 0xd], 1
0x0000498c      48c744241801.  mov qword [rsp + 0x18], 1
0x00004995      4531ff         xor r15d, r15d
0x00004998      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x0000499d      c74424080500.  mov dword [rsp + 8], 5
0x000049a5      e979f3ffff     jmp 0x3d23
0x000049aa      c644240e01     mov byte [rsp + 0xe], 1
0x000049af      c644247c00     mov byte [rsp + 0x7c], 0
0x000049b4      4531e4         xor r12d, r12d
0x000049b7      48c744245000.  mov qword [rsp + 0x50], 0
0x000049c0      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x000049c5      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x000049c8      c644240d01     mov byte [rsp + 0xd], 1
0x000049cd      48c744241800.  mov qword [rsp + 0x18], 0
0x000049d6      48c744244800.  mov qword [rsp + 0x48], 0
0x000049df      e93ff3ffff     jmp 0x3d23
0x000049e4      837c24080a     cmp dword [rsp + 8], 0xa
0x000049e9      7456           je 0x4a41
0x000049eb      488d350d7100.  lea rsi, [0x0000baff]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x000049f2      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x000049f4      ba05000000     mov edx, 5
0x000049f9      e882d0ffff     call sym.imp.dcgettext
0x000049fe      4889c1         mov rcx, rax
0x00004a01      4889442468     mov qword [rsp + 0x68], rax
0x00004a06      488d05f27000.  lea rax, [0x0000baff]                   ; "`"
0x00004a0d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00004a10      0f8498030000   je 0x4dae
0x00004a16      488d35e07000.  lea rsi, [0x0000bafd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004a1d      31ff           xor edi, edi
0x00004a1f      ba05000000     mov edx, 5
0x00004a24      e857d0ffff     call sym.imp.dcgettext
0x00004a29      4889c1         mov rcx, rax
0x00004a2c      4889442460     mov qword [rsp + 0x60], rax
0x00004a31      488d05c57000.  lea rax, [0x0000bafd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004a38      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x00004a3b      0f8483030000   je 0x4dc4
0x00004a41      4531ff         xor r15d, r15d
0x00004a44      85db           test ebx, ebx
0x00004a46      0f84c1010000   je 0x4c0d
0x00004a4c      85db           test ebx, ebx
0x00004a4e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00004a53      0f9544240f     setne byte [rsp + 0xf]
0x00004a58      4531e4         xor r12d, r12d
0x00004a5b      4889df         mov rdi, rbx
0x00004a5e      e83dd0ffff     call sym.imp.strlen
0x00004a63      48895c2448     mov qword [rsp + 0x48], rbx
0x00004a68      4889442418     mov qword [rsp + 0x18], rax
0x00004a6d      c644240e01     mov byte [rsp + 0xe], 1
0x00004a72      c644247c00     mov byte [rsp + 0x7c], 0
0x00004a77      48c744245000.  mov qword [rsp + 0x50], 0
0x00004a80      c644240d01     mov byte [rsp + 0xd], 1
0x00004a85      e999f2ffff     jmp 0x3d23
0x00004a8a      c644240e01     mov byte [rsp + 0xe], 1
0x00004a8f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004a94      4531e4         xor r12d, r12d
0x00004a97      48c744245000.  mov qword [rsp + 0x50], 0
0x00004aa0      c644240f00     mov byte [rsp + 0xf], 0
0x00004aa5      4531ff         xor r15d, r15d
0x00004aa8      c644240d00     mov byte [rsp + 0xd], 0
0x00004aad      48c744241800.  mov qword [rsp + 0x18], 0
0x00004ab6      48c744244800.  mov qword [rsp + 0x48], 0
0x00004abf      e95ff2ffff     jmp 0x3d23
0x00004ac4      c644240e01     mov byte [rsp + 0xe], 1
0x00004ac9      c644247c00     mov byte [rsp + 0x7c], 0
0x00004ace      4531e4         xor r12d, r12d
0x00004ad1      48c744245000.  mov qword [rsp + 0x50], 0
0x00004ada      c644240f01     mov byte [rsp + 0xf], 1
0x00004adf      c644240d01     mov byte [rsp + 0xd], 1
0x00004ae4      e91af2ffff     jmp 0x3d03
0x00004ae9      4d39fd         cmp r13, r15
0x00004aec      7605           jbe 0x4af3
0x00004aee      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00004af3      488d4102       lea rax, [rcx + 2]
0x00004af7      4939c5         cmp r13, rax
0x00004afa      7606           jbe 0x4b02
0x00004afc      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00004b02      4489e0         mov eax, r12d
0x00004b05      4c8d7903       lea r15, [rcx + 3]
0x00004b09      4531e4         xor r12d, r12d
0x00004b0c      bb30000000     mov ebx, 0x30                           ; '0'
0x00004b11      e962f3ffff     jmp 0x3e78
0x00004b16      662e0f1f8400.  nop word cs:[rax + rax]
0x00004b20      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00004b25      4c89dd         mov rbp, r11
0x00004b28      885c240d       mov byte [rsp + 0xd], bl
0x00004b2c      e9a8fcffff     jmp 0x47d9
0x00004b31      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00004b36      4531e4         xor r12d, r12d
0x00004b39      e902fbffff     jmp 0x4640
0x00004b3e      4531d2         xor r10d, r10d
0x00004b41      e9b7fbffff     jmp 0x46fd
0x00004b46      48c744245000.  mov qword [rsp + 0x50], 0
0x00004b4f      c644240e01     mov byte [rsp + 0xe], 1
0x00004b54      4531e4         xor r12d, r12d
0x00004b57      c644247c00     mov byte [rsp + 0x7c], 0
0x00004b5c      e9dafdffff     jmp 0x493b
0x00004b61      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00004b66      4c89f6         mov rsi, r14
0x00004b69      4c89e9         mov rcx, r13
0x00004b6c      4889d8         mov rax, rbx
0x00004b6f      4889df         mov rdi, rbx
0x00004b72      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00004b78      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00004b7d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00004b85      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00004b88      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00004b8e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004b96      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004b9b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00004ba0      7326           jae 0x4bc8
0x00004ba2      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00004ba5      7510           jne 0x4bb7
0x00004ba7      eb1f           jmp 0x4bc8
0x00004ba9      0f1f80000000.  nop dword [rax]
0x00004bb0      41803c0100     cmp byte [r9 + rax], 0
0x00004bb5      740e           je 0x4bc5
0x00004bb7      4883c001       add rax, 1
0x00004bbb      488d540500     lea rdx, [rbp + rax]
0x00004bc0      4939d3         cmp r11, rdx
0x00004bc3      77eb           ja 0x4bb0
0x00004bc5      4889c7         mov rdi, rax
0x00004bc8      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00004bcd      4531e4         xor r12d, r12d
0x00004bd0      e961faffff     jmp 0x4636
0x00004bd5      4889df         mov rdi, rbx
0x00004bd8      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00004bde      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00004be3      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00004be9      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004bf1      4531e4         xor r12d, r12d
0x00004bf4      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004bf9      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00004bfe      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00004c03      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00004c08      e929faffff     jmp 0x4636
0x00004c0d      488b542468     mov rdx, qword [rsp + 0x68]
0x00004c12      0fb602         movzx eax, byte [rdx]
0x00004c15      84c0           test al, al
0x00004c17      0f842ffeffff   je 0x4a4c
0x00004c1d      0f1f00         nop dword [rax]
0x00004c20      4d39fd         cmp r13, r15
0x00004c23      7604           jbe 0x4c29
0x00004c25      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00004c29      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x00004c2d      420fb6043a     movzx eax, byte [rdx + r15]
0x00004c32      84c0           test al, al
0x00004c34      75ea           jne 0x4c20
0x00004c36      e911feffff     jmp 0x4a4c
0x00004c3b      89d0           mov eax, edx
0x00004c3d      e955f5ffff     jmp 0x4197
0x00004c42      0fb61c08       movzx ebx, byte [rax + rcx]
0x00004c46      80fb3e         cmp bl, 0x3e
0x00004c49      0f8771f8ffff   ja 0x44c0
0x00004c4f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00004c59      480fa3d8       bt rax, rbx
0x00004c5d      0f835df8ffff   jae 0x44c0
0x00004c63      807c240f00     cmp byte [rsp + 0xf], 0
0x00004c68      0f85e4010000   jne 0x4e52                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x00004c6e      4d39fd         cmp r13, r15
0x00004c71      7605           jbe 0x4c78
0x00004c73      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00004c78      498d4701       lea rax, [r15 + 1]
0x00004c7c      4939c5         cmp r13, rax
0x00004c7f      7606           jbe 0x4c87
0x00004c81      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00004c87      498d4702       lea rax, [r15 + 2]
0x00004c8b      4939c5         cmp r13, rax
0x00004c8e      7606           jbe 0x4c96
0x00004c90      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00004c96      498d4703       lea rax, [r15 + 3]
0x00004c9a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x00004c9d      7606           jbe 0x4ca5
0x00004c9f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00004ca5      4983c704       add r15, 4
0x00004ca9      31d2           xor edx, edx
0x00004cab      4531e4         xor r12d, r12d
0x00004cae      31c0           xor eax, eax
0x00004cb0      4889cd         mov rbp, rcx
0x00004cb3      e9c0f1ffff     jmp 0x3e78
0x00004cb8      85db           test ebx, ebx
0x00004cba      0f8488010000   je 0x4e48
0x00004cc0      488d05366e00.  lea rax, [0x0000bafd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004cc7      c644240e01     mov byte [rsp + 0xe], 1
0x00004ccc      c644247c00     mov byte [rsp + 0x7c], 0
0x00004cd1      4531e4         xor r12d, r12d
0x00004cd4      48c744245000.  mov qword [rsp + 0x50], 0
0x00004cdd      c644240f01     mov byte [rsp + 0xf], 1
0x00004ce2      c644240d00     mov byte [rsp + 0xd], 0
0x00004ce7      48c744241801.  mov qword [rsp + 0x18], 1
0x00004cf0      4531ff         xor r15d, r15d
0x00004cf3      4889442448     mov qword [rsp + 0x48], rax
0x00004cf8      e926f0ffff     jmp 0x3d23
0x00004cfd      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00004d00      4c89dd         mov rbp, r11
0x00004d03      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00004d08      e9ccfaffff     jmp 0x47d9
0x00004d0d      488d05e76d00.  lea rax, str.l______l                   ; 0xbafb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004d14      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00004d19      c644247c00     mov byte [rsp + 0x7c], 0
0x00004d1e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00004d21      48c744245000.  mov qword [rsp + 0x50], 0
0x00004d2a      c644240f01     mov byte [rsp + 0xf], 1
0x00004d2f      c644240d01     mov byte [rsp + 0xd], 1
0x00004d34      48c744241801.  mov qword [rsp + 0x18], 1
0x00004d3d      4531ff         xor r15d, r15d
0x00004d40      4889442448     mov qword [rsp + 0x48], rax
0x00004d45      e9d9efffff     jmp 0x3d23
0x00004d4a      89d0           mov eax, edx
0x00004d4c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00004d51      4885db         test rbx, rbx
0x00004d54      742c           je 0x4d82
0x00004d56      84c0           test al, al
0x00004d58      7428           je 0x4d82
0x00004d5a      0fb60b         movzx ecx, byte [rbx]
0x00004d5d      4889d8         mov rax, rbx
0x00004d60      84c9           test cl, cl
0x00004d62      741e           je 0x4d82
0x00004d64      4c89fa         mov rdx, r15
0x00004d67      4c29f8         sub rax, r15
0x00004d6a      4939d5         cmp r13, rdx
0x00004d6d      7604           jbe 0x4d73
0x00004d6f      41880c16       mov byte [r14 + rdx], cl
0x00004d73      4883c201       add rdx, 1
0x00004d77      0fb60c10       movzx ecx, byte [rax + rdx]
0x00004d7b      84c9           test cl, cl
0x00004d7d      75eb           jne 0x4d6a
0x00004d7f      4989d7         mov r15, rdx
0x00004d82      4d39fd         cmp r13, r15
0x00004d85      0f869efaffff   jbe 0x4829
0x00004d8b      43c6043e00     mov byte [r14 + r15], 0
0x00004d90      e994faffff     jmp 0x4829
0x00004d95      837c240802     cmp dword [rsp + 8], 2
0x00004d9a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00004d9f      4c89dd         mov rbp, r11
0x00004da2      0f94c0         sete al
0x00004da5      885c240d       mov byte [rsp + 0xd], bl
0x00004da9      e92bfaffff     jmp 0x47d9
0x00004dae      8b742408       mov esi, dword [rsp + 8]
0x00004db2      4889cf         mov rdi, rcx
0x00004db5      e8a6edffff     call sym.gettext_quote.part.1
0x00004dba      4889442468     mov qword [rsp + 0x68], rax
0x00004dbf      e952fcffff     jmp 0x4a16
0x00004dc4      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00004dc8      4889cf         mov rdi, rcx
0x00004dcb      e890edffff     call sym.gettext_quote.part.1
0x00004dd0      4889442460     mov qword [rsp + 0x60], rax
0x00004dd5      e967fcffff     jmp 0x4a41
0x00004dda      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00004ddf      4c89dd         mov rbp, r11
0x00004de2      89d0           mov eax, edx
0x00004de4      885c240d       mov byte [rsp + 0xd], bl
0x00004de8      e9ecf9ffff     jmp 0x47d9
0x00004ded      4883ec08       sub rsp, 8
0x00004df1      41b805000000   mov r8d, 5
0x00004df7      4c89d9         mov rcx, r11
0x00004dfa      ff742468       push qword [rsp + 0x68]
0x00004dfe      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00004e02      4c89f7         mov rdi, r14
0x00004e05      ff742438       push qword [rsp + 0x38]
0x00004e09      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00004e11      488b542430     mov rdx, qword [rsp + 0x30]
0x00004e16      488b742470     mov rsi, qword [rsp + 0x70]
0x00004e1b      e830eeffff     call sym.quotearg_buffer_restyled
0x00004e20      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00004e24      4989c7         mov r15, rax
0x00004e27      e9fdf9ffff     jmp 0x4829
0x00004e2c      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00004e31      e916ffffff     jmp 0x4d4c
0x00004e36      c74424080200.  mov dword [rsp + 8], 2
0x00004e3e      e996f9ffff     jmp 0x47d9
0x00004e43      e888ccffff     call sym.imp.__stack_chk_fail
0x00004e48      c644240d00     mov byte [rsp + 0xd], 0
0x00004e4d      e96ffaffff     jmp 0x48c1
0x00004e52      4c89dd         mov rbp, r11
0x00004e55      e996f9ffff     jmp 0x47f0
0x00004e5a      c644240e01     mov byte [rsp + 0xe], 1
0x00004e5f      31c0           xor eax, eax
0x00004e61      4531e4         xor r12d, r12d
0x00004e64      48c744245000.  mov qword [rsp + 0x50], 0
0x00004e6d      e9a2f5ffff     jmp 0x4414
0x00004e72      4c89ea         mov rdx, r13
0x00004e75      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00004e7a      e9f3f5ffff     jmp 0x4472
0x00004e7f      e82ccbffff     call sym.imp.abort
0x00004e84      6690           nop
0x00004e86      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00004e90      4157           push r15
0x00004e92      4156           push r14
0x00004e94      4c63ff         movsxd r15, edi
0x00004e97      4155           push r13
0x00004e99      4154           push r12
0x00004e9b      4989d6         mov r14, rdx
0x00004e9e      55             push rbp
0x00004e9f      53             push rbx
0x00004ea0      4889cd         mov rbp, rcx
0x00004ea3      4883ec28       sub rsp, 0x28
0x00004ea7      4889742408     mov qword [rsp + 8], rsi
0x00004eac      e80fcbffff     call sym.imp.__errno_location
0x00004eb1      4989c5         mov r13, rax
0x00004eb4      8b00           mov eax, dword [rax]
0x00004eb6      4585ff         test r15d, r15d
0x00004eb9      488b1da0a120.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x20f060:8]=0x20f070 obj.slotvec0 ; "p\xf0 "
0x00004ec0      89442418       mov dword [rsp + 0x18], eax
0x00004ec4      0f8867010000   js 0x5031
0x00004eca      44393d87a120.  cmp dword [obj.nslots], r15d            ; [0x20f058:4]=1
0x00004ed1      7f62           jg 0x4f35
0x00004ed3      4181ffffffff.  cmp r15d, 0x7fffffff
0x00004eda      0f8456010000   je 0x5036
0x00004ee0      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004ee4      488d0585a120.  lea rax, obj.slotvec0                   ; 0x20f070
0x00004eeb      4963f4         movsxd rsi, r12d
0x00004eee      48c1e604       shl rsi, 4
0x00004ef2      4839c3         cmp rbx, rax
0x00004ef5      0f8415010000   je 0x5010
0x00004efb      4889df         mov rdi, rbx
0x00004efe      e88d140000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00004f03      4889c3         mov rbx, rax
0x00004f06      48890553a120.  mov qword [obj.slotvec], rax            ; [0x20f060:8]=0x20f070 obj.slotvec0 ; "p\xf0 "
0x00004f0d      48633d44a120.  movsxd rdi, dword [obj.nslots]          ; [0x20f058:4]=1
0x00004f14      4489e2         mov edx, r12d
0x00004f17      31f6           xor esi, esi
0x00004f19      29fa           sub edx, edi
0x00004f1b      48c1e704       shl rdi, 4
0x00004f1f      4863d2         movsxd rdx, edx
0x00004f22      4801df         add rdi, rbx
0x00004f25      48c1e204       shl rdx, 4
0x00004f29      e832ccffff     call sym.imp.memset
0x00004f2e      44892523a120.  mov dword [obj.nslots], r12d            ; [0x20f058:4]=1
0x00004f35      8b4504         mov eax, dword [rbp + 4]
0x00004f38      49c1e704       shl r15, 4
0x00004f3c      4883ec08       sub rsp, 8
0x00004f40      4c01fb         add rbx, r15
0x00004f43      4c8d7d08       lea r15, [rbp + 8]
0x00004f47      448b4500       mov r8d, dword [rbp]
0x00004f4b      4c8b1b         mov r11, qword [rbx]
0x00004f4e      4c8b6308       mov r12, qword [rbx + 8]
0x00004f52      4c89f1         mov rcx, r14
0x00004f55      83c801         or eax, 1
0x00004f58      89442424       mov dword [rsp + 0x24], eax
0x00004f5c      ff7530         push qword [rbp + 0x30]
0x00004f5f      4189c1         mov r9d, eax
0x00004f62      ff7528         push qword [rbp + 0x28]
0x00004f65      4157           push r15
0x00004f67      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00004f6a      488b542428     mov rdx, qword [rsp + 0x28]
0x00004f6f      4c89e7         mov rdi, r12
0x00004f72      4c895c2430     mov qword [rsp + 0x30], r11
0x00004f77      e8d4ecffff     call sym.quotearg_buffer_restyled
0x00004f7c      4883c420       add rsp, 0x20
0x00004f80      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00004f85      4939c3         cmp r11, rax
0x00004f88      7767           ja 0x4ff1
0x00004f8a      488d7001       lea rsi, [rax + 1]
0x00004f8e      488d056ba120.  lea rax, obj.slot0                      ; 0x20f100
0x00004f95      4939c4         cmp r12, rax
0x00004f98      488933         mov qword [rbx], rsi
0x00004f9b      7412           je 0x4faf
0x00004f9d      4c89e7         mov rdi, r12
0x00004fa0      4889742410     mov qword [rsp + 0x10], rsi
0x00004fa5      e836ceffff     call sym..plt.got
0x00004faa      488b742410     mov rsi, qword [rsp + 0x10]
0x00004faf      4889f7         mov rdi, rsi
0x00004fb2      4889742410     mov qword [rsp + 0x10], rsi
0x00004fb7      e874130000     call sym.xmalloc
0x00004fbc      4883ec08       sub rsp, 8
0x00004fc0      48894308       mov qword [rbx + 8], rax
0x00004fc4      448b4500       mov r8d, dword [rbp]
0x00004fc8      ff7530         push qword [rbp + 0x30]
0x00004fcb      ff7528         push qword [rbp + 0x28]
0x00004fce      4c89f1         mov rcx, r14
0x00004fd1      4157           push r15
0x00004fd3      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00004fd8      4889c7         mov rdi, rax
0x00004fdb      488b542428     mov rdx, qword [rsp + 0x28]
0x00004fe0      488b742430     mov rsi, qword [rsp + 0x30]
0x00004fe5      4989c4         mov r12, rax
0x00004fe8      e863ecffff     call sym.quotearg_buffer_restyled
0x00004fed      4883c420       add rsp, 0x20
0x00004ff1      8b442418       mov eax, dword [rsp + 0x18]
0x00004ff5      41894500       mov dword [r13], eax
0x00004ff9      4883c428       add rsp, 0x28
0x00004ffd      4c89e0         mov rax, r12
0x00005000      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00005001      5d             pop rbp
0x00005002      415c           pop r12
0x00005004      415d           pop r13
0x00005006      415e           pop r14
0x00005008      415f           pop r15
0x0000500a      c3             ret
0x0000500b      0f1f440000     nop dword [rax + rax]
0x00005010      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00005012      e879130000     call sym.xrealloc
0x00005017      660f6f0551a0.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x0000501f      4889c3         mov rbx, rax
0x00005022      48890537a020.  mov qword [obj.slotvec], rax            ; [0x20f060:8]=0x20f070 obj.slotvec0 ; "p\xf0 "
0x00005029      0f1100         movups xmmword [rax], xmm0
0x0000502c      e9dcfeffff     jmp 0x4f0d
0x00005031      e87ac9ffff     call sym.imp.abort
0x00005036      e845150000     call sym.xalloc_die
0x0000503b      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00005040      4154           push r12
0x00005042      55             push rbp
0x00005043      53             push rbx
0x00005044      4889fb         mov rbx, rdi
0x00005047      e874c9ffff     call sym.imp.__errno_location
0x0000504c      448b20         mov r12d, dword [rax]
0x0000504f      4889c5         mov rbp, rax
0x00005052      488d05a7a120.  lea rax, obj.default_quoting_options    ; 0x20f200
0x00005059      4885db         test rbx, rbx
0x0000505c      be38000000     mov esi, 0x38                           ; '8'
0x00005061      480f44d8       cmove rbx, rax
0x00005065      4889df         mov rdi, rbx
0x00005068      e8c3140000     call sym.xmemdup
0x0000506d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00005071      5b             pop rbx
0x00005072      5d             pop rbp
0x00005073      415c           pop r12
0x00005075      c3             ret
0x00005076      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00005080      488d0579a120.  lea rax, obj.default_quoting_options    ; 0x20f200
0x00005087      4885ff         test rdi, rdi
0x0000508a      480f44f8       cmove rdi, rax
0x0000508e      8b07           mov eax, dword [rdi]
0x00005090      c3             ret
0x00005091      0f1f440000     nop dword [rax + rax]
0x00005096      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x000050a0      488d0559a120.  lea rax, obj.default_quoting_options    ; 0x20f200
0x000050a7      4885ff         test rdi, rdi
0x000050aa      480f44f8       cmove rdi, rax
0x000050ae      8937           mov dword [rdi], esi
0x000050b0      c3             ret
0x000050b1      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x000050b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x000050c0      488d0539a120.  lea rax, obj.default_quoting_options    ; 0x20f200
0x000050c7      4885ff         test rdi, rdi
0x000050ca      89f1           mov ecx, esi
0x000050cc      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x000050d0      89f0           mov eax, esi
0x000050d2      83e11f         and ecx, 0x1f
0x000050d5      c0e805         shr al, 5
0x000050d8      0fb6c0         movzx eax, al
0x000050db      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x000050e0      8b37           mov esi, dword [rdi]
0x000050e2      89f0           mov eax, esi
0x000050e4      d3e8           shr eax, cl
0x000050e6      31c2           xor edx, eax
0x000050e8      83e001         and eax, 1
0x000050eb      83e201         and edx, 1
0x000050ee      d3e2           shl edx, cl
0x000050f0      31f2           xor edx, esi
0x000050f2      8917           mov dword [rdi], edx
0x000050f4      c3             ret
0x000050f5      90             nop
0x000050f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00005100      488d05f9a020.  lea rax, obj.default_quoting_options    ; 0x20f200
0x00005107      4885ff         test rdi, rdi
0x0000510a      480f44f8       cmove rdi, rax
0x0000510e      8b4704         mov eax, dword [rdi + 4]
0x00005111      897704         mov dword [rdi + 4], esi
0x00005114      c3             ret
0x00005115      90             nop
0x00005116      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00005120      488d05d9a020.  lea rax, obj.default_quoting_options    ; 0x20f200
0x00005127      4885ff         test rdi, rdi
0x0000512a      480f44f8       cmove rdi, rax
0x0000512e      4885f6         test rsi, rsi
0x00005131      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00005137      740e           je 0x5147
0x00005139      4885d2         test rdx, rdx
0x0000513c      7409           je 0x5147
0x0000513e      48897728       mov qword [rdi + 0x28], rsi
0x00005142      48895730       mov qword [rdi + 0x30], rdx
0x00005146      c3             ret
0x00005147      4883ec08       sub rsp, 8
0x0000514b      e860c8ffff     call sym.imp.abort
;-- quotearg_buffer:
0x00005150      4157           push r15
0x00005152      4156           push r14
0x00005154      488d05a5a020.  lea rax, obj.default_quoting_options    ; 0x20f200
0x0000515b      4155           push r13
0x0000515d      4154           push r12
0x0000515f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00005162      55             push rbp
0x00005163      53             push rbx
0x00005164      4c89c3         mov rbx, r8
0x00005167      4989f6         mov r14, rsi
0x0000516a      4989d7         mov r15, rdx
0x0000516d      4883ec18       sub rsp, 0x18
0x00005171      4d85c0         test r8, r8
0x00005174      480f44d8       cmove rbx, rax
0x00005178      48894c2408     mov qword [rsp + 8], rcx
0x0000517d      e83ec8ffff     call sym.imp.__errno_location
0x00005182      448b20         mov r12d, dword [rax]
0x00005185      4889c5         mov rbp, rax
0x00005188      488d4308       lea rax, [rbx + 8]
0x0000518c      4883ec08       sub rsp, 8
0x00005190      448b4b04       mov r9d, dword [rbx + 4]
0x00005194      ff7330         push qword [rbx + 0x30]
0x00005197      448b03         mov r8d, dword [rbx]
0x0000519a      ff7328         push qword [rbx + 0x28]
0x0000519d      4c89fa         mov rdx, r15
0x000051a0      50             push rax
0x000051a1      488b4c2428     mov rcx, qword [rsp + 0x28]
0x000051a6      4c89f6         mov rsi, r14
0x000051a9      4c89ef         mov rdi, r13
0x000051ac      e89feaffff     call sym.quotearg_buffer_restyled
0x000051b1      44896500       mov dword [rbp], r12d
0x000051b5      4883c438       add rsp, 0x38
0x000051b9      5b             pop rbx
0x000051ba      5d             pop rbp
0x000051bb      415c           pop r12
0x000051bd      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x000051bf      415e           pop r14
0x000051c1      415f           pop r15
0x000051c3      c3             ret
0x000051c4      6690           nop
0x000051c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x000051d0      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x000051d2      4156           push r14
0x000051d4      488d0525a020.  lea rax, obj.default_quoting_options    ; 0x20f200
0x000051db      4155           push r13
0x000051dd      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x000051df      4989d4         mov r12, rdx
0x000051e2      55             push rbp
0x000051e3      53             push rbx
0x000051e4      4889cb         mov rbx, rcx
0x000051e7      4989fe         mov r14, rdi
0x000051ea      4989f7         mov r15, rsi
0x000051ed      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x000051f1      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x000051f4      480f44d8       cmove rbx, rax
0x000051f8      31ed           xor ebp, ebp
0x000051fa      e8c1c7ffff     call sym.imp.__errno_location
0x000051ff      4d85e4         test r12, r12
0x00005202      4989c5         mov r13, rax
0x00005205      8b00           mov eax, dword [rax]
0x00005207      400f94c5       sete bpl
0x0000520b      0b6b04         or ebp, dword [rbx + 4]
0x0000520e      4c8d5308       lea r10, [rbx + 8]
0x00005212      4883ec08       sub rsp, 8
0x00005216      448b03         mov r8d, dword [rbx]
0x00005219      4c89f9         mov rcx, r15
0x0000521c      89442414       mov dword [rsp + 0x14], eax
0x00005220      ff7330         push qword [rbx + 0x30]
0x00005223      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00005226      ff7328         push qword [rbx + 0x28]
0x00005229      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x0000522b      31f6           xor esi, esi
0x0000522d      4189e9         mov r9d, ebp
0x00005230      31ff           xor edi, edi
0x00005232      4c89542440     mov qword [rsp + 0x40], r10
0x00005237      e814eaffff     call sym.quotearg_buffer_restyled
0x0000523c      488d7001       lea rsi, [rax + 1]
0x00005240      4889442448     mov qword [rsp + 0x48], rax
0x00005245      4883c420       add rsp, 0x20
0x00005249      4889f7         mov rdi, rsi
0x0000524c      4889742418     mov qword [rsp + 0x18], rsi
0x00005251      e8da100000     call sym.xmalloc
0x00005256      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x0000525b      4883ec08       sub rsp, 8
0x0000525f      ff7330         push qword [rbx + 0x30]
0x00005262      ff7328         push qword [rbx + 0x28]
0x00005265      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000526a      4189e9         mov r9d, ebp
0x0000526d      448b03         mov r8d, dword [rbx]
0x00005270      4c89f9         mov rcx, r15
0x00005273      4c89f2         mov rdx, r14
0x00005276      4889c7         mov rdi, rax
0x00005279      4152           push r10
0x0000527b      488b742438     mov rsi, qword [rsp + 0x38]
0x00005280      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00005285      8b44242c       mov eax, dword [rsp + 0x2c]
0x00005289      4883c420       add rsp, 0x20
0x0000528d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00005290      41894500       mov dword [r13], eax
0x00005294      7409           je 0x529f
0x00005296      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000529b      4d891c24       mov qword [r12], r11
0x0000529f      488b442410     mov rax, qword [rsp + 0x10]
0x000052a4      4883c438       add rsp, 0x38
0x000052a8      5b             pop rbx
0x000052a9      5d             pop rbp
0x000052aa      415c           pop r12
0x000052ac      415d           pop r13
0x000052ae      415e           pop r14
0x000052b0      415f           pop r15
0x000052b2      c3             ret
0x000052b3      0f1f00         nop dword [rax]
0x000052b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x000052c0      4889d1         mov rcx, rdx
0x000052c3      31d2           xor edx, edx
0x000052c5      e906ffffff     jmp sym.quotearg_alloc_mem
0x000052ca      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x000052d0      8b05829d2000   mov eax, dword [obj.nslots]             ; [0x20f058:4]=1
0x000052d6      4154           push r12
0x000052d8      4c8b25819d20.  mov r12, qword [obj.slotvec]            ; [0x20f060:8]=0x20f070 obj.slotvec0 ; "p\xf0 "
0x000052df      55             push rbp
0x000052e0      53             push rbx
0x000052e1      83f801         cmp eax, 1
0x000052e4      7e2b           jle 0x5311                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x000052e6      83e802         sub eax, 2
0x000052e9      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x000052ee      48c1e004       shl rax, 4
0x000052f2      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x000052f7      660f1f840000.  nop word [rax + rax]
0x00005300      488b3b         mov rdi, qword [rbx]
0x00005303      4883c310       add rbx, 0x10
0x00005307      e8d4caffff     call sym..plt.got
0x0000530c      4839eb         cmp rbx, rbp
0x0000530f      75ef           jne 0x5300
0x00005311      498b7c2408     mov rdi, qword [r12 + 8]
0x00005316      488d1de39d20.  lea rbx, obj.slot0                      ; 0x20f100
0x0000531d      4839df         cmp rdi, rbx
0x00005320      7417           je 0x5339
0x00005322      e8b9caffff     call sym..plt.got
0x00005327      48c7053e9d20.  mov qword [obj.slotvec0], 0x100         ; [0x20f070:8]=256
0x00005332      48891d3f9d20.  mov qword [0x0020f078], rbx             ; [0x20f078:8]=0x20f100 obj.slot0
0x00005339      488d1d309d20.  lea rbx, obj.slotvec0                   ; 0x20f070
0x00005340      4939dc         cmp r12, rbx
0x00005343      740f           je 0x5354
0x00005345      4c89e7         mov rdi, r12
0x00005348      e893caffff     call sym..plt.got
0x0000534d      48891d0c9d20.  mov qword [obj.slotvec], rbx            ; [0x20f060:8]=0x20f070 obj.slotvec0 ; "p\xf0 "
0x00005354      5b             pop rbx
0x00005355      c705f99c2000.  mov dword [obj.nslots], 1               ; [0x20f058:4]=1
0x0000535f      5d             pop rbp
0x00005360      415c           pop r12
0x00005362      c3             ret
0x00005363      0f1f00         nop dword [rax]
0x00005366      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00005370      488d0d899e20.  lea rcx, obj.default_quoting_options    ; 0x20f200
0x00005377      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000537e      e90dfbffff     jmp sym.quotearg_n_options
0x00005383      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00005386      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00005390      488d0d699e20.  lea rcx, obj.default_quoting_options    ; 0x20f200
0x00005397      e9f4faffff     jmp sym.quotearg_n_options
0x0000539c      0f1f4000       nop dword [rax]
;-- quotearg:
0x000053a0      488d0d599e20.  lea rcx, obj.default_quoting_options    ; 0x20f200
0x000053a7      4889fe         mov rsi, rdi
0x000053aa      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000053b1      31ff           xor edi, edi
0x000053b3      e9d8faffff     jmp sym.quotearg_n_options
0x000053b8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x000053c0      488d0d399e20.  lea rcx, obj.default_quoting_options    ; 0x20f200
0x000053c7      4889f2         mov rdx, rsi
0x000053ca      4889fe         mov rsi, rdi
0x000053cd      31ff           xor edi, edi
0x000053cf      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x000053d4      6690           nop
0x000053d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x000053e0      4883ec48       sub rsp, 0x48
0x000053e4      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x000053e7      64488b142528.  mov rdx, qword fs:[0x28]
0x000053f0      4889542438     mov qword [rsp + 0x38], rdx
0x000053f5      31d2           xor edx, edx
0x000053f7      83fe0a         cmp esi, 0xa
0x000053fa      7468           je 0x5464
0x000053fc      893424         mov dword [rsp], esi
0x000053ff      4889e1         mov rcx, rsp
0x00005402      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005409      4889c6         mov rsi, rax
0x0000540c      48c744240400.  mov qword [rsp + 4], 0
0x00005415      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000541e      48c744241400.  mov qword [rsp + 0x14], 0
0x00005427      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00005430      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00005439      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00005442      c74424340000.  mov dword [rsp + 0x34], 0
0x0000544a      e841faffff     call sym.quotearg_n_options
0x0000544f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00005454      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000545d      750a           jne 0x5469                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x0000545f      4883c448       add rsp, 0x48
0x00005463      c3             ret
0x00005464      e847c5ffff     call sym.imp.abort
0x00005469      e862c6ffff     call sym.imp.__stack_chk_fail
0x0000546e      6690           nop
;-- quotearg_n_style_mem:
0x00005470      4883ec48       sub rsp, 0x48
0x00005474      4889d0         mov rax, rdx
0x00005477      4889ca         mov rdx, rcx
0x0000547a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00005483      48894c2438     mov qword [rsp + 0x38], rcx
0x00005488      31c9           xor ecx, ecx
0x0000548a      83fe0a         cmp esi, 0xa
0x0000548d      7461           je 0x54f0
0x0000548f      893424         mov dword [rsp], esi
0x00005492      4889e1         mov rcx, rsp
0x00005495      4889c6         mov rsi, rax
0x00005498      48c744240400.  mov qword [rsp + 4], 0
0x000054a1      48c744240c00.  mov qword [rsp + 0xc], 0
0x000054aa      48c744241400.  mov qword [rsp + 0x14], 0
0x000054b3      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000054bc      48c744242400.  mov qword [rsp + 0x24], 0
0x000054c5      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000054ce      c74424340000.  mov dword [rsp + 0x34], 0
0x000054d6      e8b5f9ffff     call sym.quotearg_n_options
0x000054db      488b542438     mov rdx, qword [rsp + 0x38]
0x000054e0      644833142528.  xor rdx, qword fs:[0x28]
0x000054e9      750a           jne 0x54f5
0x000054eb      4883c448       add rsp, 0x48
0x000054ef      c3             ret
0x000054f0      e8bbc4ffff     call sym.imp.abort
0x000054f5      e8d6c5ffff     call sym.imp.__stack_chk_fail
0x000054fa      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00005500      4889f2         mov rdx, rsi
0x00005503      89fe           mov esi, edi
0x00005505      31ff           xor edi, edi
0x00005507      e9d4feffff     jmp sym.quotearg_n_style
0x0000550c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00005510      4889d1         mov rcx, rdx
0x00005513      4889f2         mov rdx, rsi
0x00005516      89fe           mov esi, edi
0x00005518      31ff           xor edi, edi
0x0000551a      e951ffffff     jmp sym.quotearg_n_style_mem
0x0000551f      90             nop
;-- quotearg_char_mem:
0x00005520      4883ec48       sub rsp, 0x48
0x00005524      89d1           mov ecx, edx
0x00005526      64488b042528.  mov rax, qword fs:[0x28]
0x0000552f      4889442438     mov qword [rsp + 0x38], rax
0x00005534      31c0           xor eax, eax
0x00005536      488b05f39c20.  mov rax, qword [0x0020f230]             ; [0x20f230:8]=0
0x0000553d      4989e0         mov r8, rsp
0x00005540      83e11f         and ecx, 0x1f
0x00005543      660f6f05b59c.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x0000554b      4889442430     mov qword [rsp + 0x30], rax
0x00005550      89d0           mov eax, edx
0x00005552      0f290424       movaps xmmword [rsp], xmm0
0x00005556      c0e805         shr al, 5
0x00005559      0fb6c0         movzx eax, al
0x0000555c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00005561      660f6f05a79c.  movdqa xmm0, xmmword [0x0020f210]
0x00005569      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000556e      660f6f05aa9c.  movdqa xmm0, xmmword [0x0020f220]
0x00005576      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000557b      418b11         mov edx, dword [r9]
0x0000557e      89d0           mov eax, edx
0x00005580      d3e8           shr eax, cl
0x00005582      f7d0           not eax
0x00005584      83e001         and eax, 1
0x00005587      d3e0           shl eax, cl
0x00005589      4c89c1         mov rcx, r8
0x0000558c      31d0           xor eax, edx
0x0000558e      4889f2         mov rdx, rsi
0x00005591      4889fe         mov rsi, rdi
0x00005594      418901         mov dword [r9], eax
0x00005597      31ff           xor edi, edi
0x00005599      e8f2f8ffff     call sym.quotearg_n_options
0x0000559e      488b742438     mov rsi, qword [rsp + 0x38]
0x000055a3      644833342528.  xor rsi, qword fs:[0x28]
0x000055ac      7505           jne 0x55b3
0x000055ae      4883c448       add rsp, 0x48
0x000055b2      c3             ret
0x000055b3      e818c5ffff     call sym.imp.__stack_chk_fail
0x000055b8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x000055c0      400fbed6       movsx edx, sil
0x000055c4      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x000055cb      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x000055d0      ba3a000000     mov edx, 0x3a                           ; ':'
0x000055d5      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x000055dc      e93fffffff     jmp sym.quotearg_char_mem
0x000055e1      0f1f440000     nop dword [rax + rax]
0x000055e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x000055f0      ba3a000000     mov edx, 0x3a                           ; ':'
0x000055f5      e926ffffff     jmp sym.quotearg_char_mem
0x000055fa      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00005600      4883ec48       sub rsp, 0x48
0x00005604      4889d0         mov rax, rdx
0x00005607      64488b142528.  mov rdx, qword fs:[0x28]
0x00005610      4889542438     mov qword [rsp + 0x38], rdx
0x00005615      31d2           xor edx, edx
0x00005617      83fe0a         cmp esi, 0xa
0x0000561a      7468           je 0x5684
0x0000561c      893424         mov dword [rsp], esi
0x0000561f      4889e1         mov rcx, rsp
0x00005622      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005629      4889c6         mov rsi, rax
0x0000562c      48c744240400.  mov qword [rsp + 4], 0
0x00005635      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x0000563e      48c744241400.  mov qword [rsp + 0x14], 0
0x00005647      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00005650      48c744242400.  mov qword [rsp + 0x24], 0
0x00005659      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00005662      c74424340000.  mov dword [rsp + 0x34], 0
0x0000566a      e821f8ffff     call sym.quotearg_n_options
0x0000566f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00005674      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000567d      750a           jne 0x5689
0x0000567f      4883c448       add rsp, 0x48
0x00005683      c3             ret
0x00005684      e827c3ffff     call sym.imp.abort
0x00005689      e842c4ffff     call sym.imp.__stack_chk_fail
0x0000568e      6690           nop
;-- quotearg_n_custom_mem:
0x00005690      4883ec48       sub rsp, 0x48
0x00005694      4989c9         mov r9, rcx
0x00005697      488b0d929b20.  mov rcx, qword [0x0020f230]             ; [0x20f230:8]=0
0x0000569e      660f6f055a9b.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x000056a6      64488b042528.  mov rax, qword fs:[0x28]
0x000056af      4889442438     mov qword [rsp + 0x38], rax
0x000056b4      31c0           xor eax, eax
0x000056b6      0f290424       movaps xmmword [rsp], xmm0
0x000056ba      4885f6         test rsi, rsi
0x000056bd      48894c2430     mov qword [rsp + 0x30], rcx
0x000056c2      c704240a0000.  mov dword [rsp], 0xa
0x000056c9      660f6f053f9b.  movdqa xmm0, xmmword [0x0020f210]
0x000056d1      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x000056d6      660f6f05429b.  movdqa xmm0, xmmword [0x0020f220]
0x000056de      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x000056e3      7432           je 0x5717
0x000056e5      4885d2         test rdx, rdx
0x000056e8      742d           je 0x5717
0x000056ea      4889742428     mov qword [rsp + 0x28], rsi
0x000056ef      4889542430     mov qword [rsp + 0x30], rdx
0x000056f4      4889e1         mov rcx, rsp
0x000056f7      4c89c2         mov rdx, r8
0x000056fa      4c89ce         mov rsi, r9
0x000056fd      e88ef7ffff     call sym.quotearg_n_options
0x00005702      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00005707      6448333c2528.  xor rdi, qword fs:[0x28]
0x00005710      750a           jne 0x571c
0x00005712      4883c448       add rsp, 0x48
0x00005716      c3             ret
0x00005717      e894c2ffff     call sym.imp.abort
0x0000571c      e8afc3ffff     call sym.imp.__stack_chk_fail
0x00005721      0f1f440000     nop dword [rax + rax]
0x00005726      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00005730      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00005737      e954ffffff     jmp sym.quotearg_n_custom_mem
0x0000573c      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00005740      4889d1         mov rcx, rdx
0x00005743      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0000574a      4889f2         mov rdx, rsi
0x0000574d      4889fe         mov rsi, rdi
0x00005750      31ff           xor edi, edi
0x00005752      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00005757      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00005760      4989c8         mov r8, rcx
0x00005763      4889d1         mov rcx, rdx
0x00005766      4889f2         mov rdx, rsi
0x00005769      4889fe         mov rsi, rdi
0x0000576c      31ff           xor edi, edi
0x0000576e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00005773      0f1f00         nop dword [rax]
0x00005776      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00005780      488d0d999820.  lea rcx, obj.quote_quoting_options      ; 0x20f020
0x00005787      e904f7ffff     jmp sym.quotearg_n_options
0x0000578c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00005790      488d0d899820.  lea rcx, obj.quote_quoting_options      ; 0x20f020
0x00005797      4889f2         mov rdx, rsi
0x0000579a      4889fe         mov rsi, rdi
0x0000579d      31ff           xor edi, edi
0x0000579f      e9ecf6ffff     jmp sym.quotearg_n_options
0x000057a4      6690           nop
0x000057a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x000057b0      488d0d699820.  lea rcx, obj.quote_quoting_options      ; 0x20f020
0x000057b7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000057be      e9cdf6ffff     jmp sym.quotearg_n_options
0x000057c3      0f1f00         nop dword [rax]
0x000057c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x000057d0      488d0d499820.  lea rcx, obj.quote_quoting_options      ; 0x20f020
0x000057d7      4889fe         mov rsi, rdi
0x000057da      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000057e1      31ff           xor edi, edi
0x000057e3      e9a8f6ffff     jmp sym.quotearg_n_options
0x000057e8      0f1f84000000.  nop dword [rax + rax]
;-- get_root_dev_ino:
0x000057f0      53             push rbx                                ; ../coreutils-8.31/lib/root-dev-ino.c:30
0x000057f1      488d35ee6200.  lea rsi, [0x0000bae6]                   ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf); ; "/"
0x000057f8      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/root-dev-ino.c:30
0x000057fb      bf01000000     mov edi, 1                              ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x00005800      4881eca00000.  sub rsp, 0xa0                           ; ../coreutils-8.31/lib/root-dev-ino.c:30
0x00005807      4889e2         mov rdx, rsp                            ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x0000580a      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/root-dev-ino.c:30
0x00005813      488984249800.  mov qword [rsp + 0x98], rax
0x0000581b      31c0           xor eax, eax
0x0000581d      e88ec2ffff     call sym.imp.__lxstat                   ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x00005822      85c0           test eax, eax                           ; ../coreutils-8.31/lib/root-dev-ino.c:32
0x00005824      7532           jne 0x5858
0x00005826      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/root-dev-ino.c:34
0x0000582b      488903         mov qword [rbx], rax
0x0000582e      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/root-dev-ino.c:35
0x00005832      48894308       mov qword [rbx + 8], rax
0x00005836      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/root-dev-ino.c:36
0x00005839      488b8c249800.  mov rcx, qword [rsp + 0x98]             ; ../coreutils-8.31/lib/root-dev-ino.c:37
0x00005841      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000584a      7510           jne 0x585c
0x0000584c      4881c4a00000.  add rsp, 0xa0
0x00005853      5b             pop rbx
0x00005854      c3             ret
0x00005855      0f1f00         nop dword [rax]
0x00005858      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/root-dev-ino.c:33
0x0000585a      ebdd           jmp 0x5839
0x0000585c      e86fc2ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/root-dev-ino.c:37
0x00005861      662e0f1f8400.  nop word cs:[rax + rax]
0x0000586b      0f1f440000     nop dword [rax + rax]
;-- parse_with_separator:
0x00005870      4157           push r15
0x00005872      4156           push r14
0x00005874      4989f2         mov r10, rsi
0x00005877      4155           push r13
0x00005879      4154           push r12
0x0000587b      4989cc         mov r12, rcx
0x0000587e      55             push rbp
0x0000587f      53             push rbx
0x00005880      4d89c5         mov r13, r8
0x00005883      4d89ce         mov r14, r9
0x00005886      41bfffffffff   mov r15d, 0xffffffff                    ; -1
0x0000588c      4883ec58       sub rsp, 0x58
0x00005890      8b02           mov eax, dword [rdx]
0x00005892      64488b0c2528.  mov rcx, qword fs:[0x28]
0x0000589b      48894c2448     mov qword [rsp + 0x48], rcx
0x000058a0      31c9           xor ecx, ecx
0x000058a2      4d85e4         test r12, r12
0x000058a5      4889542410     mov qword [rsp + 0x10], rdx
0x000058aa      89442418       mov dword [rsp + 0x18], eax
0x000058ae      7404           je 0x58b4
0x000058b0      458b3c24       mov r15d, dword [r12]
0x000058b4      4d85ed         test r13, r13
0x000058b7      7408           je 0x58c1
0x000058b9      49c745000000.  mov qword [r13], 0
0x000058c1      4d85f6         test r14, r14
0x000058c4      7407           je 0x58cd
0x000058c6      49c706000000.  mov qword [r14], 0
0x000058cd      4d85d2         test r10, r10
0x000058d0      0f8492010000   je 0x5a68
0x000058d6      4c89d3         mov rbx, r10
0x000058d9      4829fb         sub rbx, rdi
0x000058dc      0f85ce000000   jne 0x59b0
0x000058e2      41807a0100     cmp byte [r10 + 1], 0
0x000058e7      0f840b020000   je 0x5af8
0x000058ed      4983c201       add r10, 1
0x000058f1      48c704240000.  mov qword [rsp], 0
0x000058f9      0f9544241e     setne byte [rsp + 0x1e]
0x000058fe      4c89542408     mov qword [rsp + 8], r10
0x00005903      31ed           xor ebp, ebp
0x00005905      31db           xor ebx, ebx
0x00005907      807c241e00     cmp byte [rsp + 0x1e], 0
0x0000590c      0f84ee020000   je 0x5c00
0x00005912      488b442408     mov rax, qword [rsp + 8]
0x00005917      80382b         cmp byte [rax], 0x2b
0x0000591a      0f8470010000   je 0x5a90
0x00005920      488b7c2408     mov rdi, qword [rsp + 8]
0x00005925      e8d6c2ffff     call sym.imp.getgrnam
0x0000592a      4885c0         test rax, rax
0x0000592d      0f845d010000   je 0x5a90
0x00005933      448b7810       mov r15d, dword [rax + 0x10]
0x00005937      e864c0ffff     call sym.imp.endgrent
0x0000593c      488b7c2408     mov rdi, qword [rsp + 8]
0x00005941      e81a0c0000     call sym.xstrdup
0x00005946      4889c3         mov rbx, rax
0x00005949      4989ea         mov r10, rbp
0x0000594c      488b442410     mov rax, qword [rsp + 0x10]
0x00005951      8b742418       mov esi, dword [rsp + 0x18]
0x00005955      4d85e4         test r12, r12
0x00005958      8930           mov dword [rax], esi
0x0000595a      7404           je 0x5960
0x0000595c      45893c24       mov dword [r12], r15d
0x00005960      4d85ed         test r13, r13
0x00005963      7407           je 0x596c
0x00005965      4d895500       mov qword [r13], r10
0x00005969      4531d2         xor r10d, r10d
0x0000596c      4d85f6         test r14, r14
0x0000596f      7405           je 0x5976
0x00005971      49891e         mov qword [r14], rbx
0x00005974      31db           xor ebx, ebx
0x00005976      4c89d7         mov rdi, r10
0x00005979      e862c4ffff     call sym..plt.got
0x0000597e      4889df         mov rdi, rbx
0x00005981      e85ac4ffff     call sym..plt.got
0x00005986      31c0           xor eax, eax
0x00005988      488b542448     mov rdx, qword [rsp + 0x48]
0x0000598d      644833142528.  xor rdx, qword fs:[0x28]
0x00005996      0f8589020000   jne 0x5c25
0x0000599c      4883c458       add rsp, 0x58
0x000059a0      5b             pop rbx
0x000059a1      5d             pop rbp
0x000059a2      415c           pop r12
0x000059a4      415d           pop r13
0x000059a6      415e           pop r14
0x000059a8      415f           pop r15
0x000059aa      c3             ret
0x000059ab      0f1f440000     nop dword [rax + rax]
0x000059b0      488d7301       lea rsi, [rbx + 1]
0x000059b4      4c891424       mov qword [rsp], r10
0x000059b8      e8730b0000     call sym.xmemdup
0x000059bd      4c8b1424       mov r10, qword [rsp]
0x000059c1      c6041800       mov byte [rax + rbx], 0
0x000059c5      4889c5         mov rbp, rax
0x000059c8      41807a0100     cmp byte [r10 + 1], 0
0x000059cd      0f854d010000   jne 0x5b20
0x000059d3      4885ed         test rbp, rbp
0x000059d6      0f841c010000   je 0x5af8
0x000059dc      c644241e00     mov byte [rsp + 0x1e], 0
0x000059e1      b801000000     mov eax, 1
0x000059e6      48c744240800.  mov qword [rsp + 8], 0
0x000059ef      4d85d2         test r10, r10
0x000059f2      410f95c1       setne r9b
0x000059f6      4121c1         and r9d, eax
0x000059f9      807d002b       cmp byte [rbp], 0x2b
0x000059fd      7441           je 0x5a40
0x000059ff      4889ef         mov rdi, rbp
0x00005a02      44880c24       mov byte [rsp], r9b
0x00005a06      e8d5c1ffff     call sym.imp.getpwnam
0x00005a0b      4885c0         test rax, rax
0x00005a0e      440fb60c24     movzx r9d, byte [rsp]
0x00005a13      742b           je 0x5a40
0x00005a15      8b4810         mov ecx, dword [rax + 0x10]
0x00005a18      31db           xor ebx, ebx
0x00005a1a      4584c9         test r9b, r9b
0x00005a1d      48c704240000.  mov qword [rsp], 0
0x00005a25      894c2418       mov dword [rsp + 0x18], ecx
0x00005a29      0f8519010000   jne 0x5b48
0x00005a2f      e84cc2ffff     call sym.imp.endpwent
0x00005a34      e9cefeffff     jmp 0x5907
0x00005a39      0f1f80000000.  nop dword [rax]
0x00005a40      4584c9         test r9b, r9b
0x00005a43      0f8437010000   je 0x5b80
0x00005a49      488d05856500.  lea rax, str.invalid_spec               ; 0xbfd5 ; "invalid spec"
0x00005a50      c644241e00     mov byte [rsp + 0x1e], 0
0x00005a55      31db           xor ebx, ebx
0x00005a57      48890424       mov qword [rsp], rax
0x00005a5b      e820c2ffff     call sym.imp.endpwent
0x00005a60      e9a2feffff     jmp 0x5907
0x00005a65      0f1f00         nop dword [rax]
0x00005a68      31db           xor ebx, ebx
0x00005a6a      803f00         cmp byte [rdi], 0
0x00005a6d      0f84d9feffff   je 0x594c
0x00005a73      4c891424       mov qword [rsp], r10
0x00005a77      e8e40a0000     call sym.xstrdup
0x00005a7c      4c8b1424       mov r10, qword [rsp]
0x00005a80      4889c5         mov rbp, rax
0x00005a83      e94bffffff     jmp 0x59d3
0x00005a88      0f1f84000000.  nop dword [rax + rax]
0x00005a90      488b7c2408     mov rdi, qword [rsp + 8]
0x00005a95      488d4c2428     lea rcx, [rsp + 0x28]
0x00005a9a      4c8d05a86500.  lea r8, [0x0000c049]
0x00005aa1      31f6           xor esi, esi
0x00005aa3      ba0a000000     mov edx, 0xa
0x00005aa8      e8930b0000     call sym.xstrtoul
0x00005aad      85c0           test eax, eax
0x00005aaf      7457           je 0x5b08
0x00005ab1      e8eabeffff     call sym.imp.endgrent
0x00005ab6      488b7c2408     mov rdi, qword [rsp + 8]
0x00005abb      e8a00a0000     call sym.xstrdup
0x00005ac0      4889c3         mov rbx, rax
0x00005ac3      488d05186500.  lea rax, str.invalid_group              ; 0xbfe2 ; "invalid group"
0x00005aca      48890424       mov qword [rsp], rax
0x00005ace      4889ef         mov rdi, rbp
0x00005ad1      e80ac3ffff     call sym..plt.got
0x00005ad6      4889df         mov rdi, rbx
0x00005ad9      e802c3ffff     call sym..plt.got
0x00005ade      488b3424       mov rsi, qword [rsp]
0x00005ae2      ba05000000     mov edx, 5
0x00005ae7      31ff           xor edi, edi
0x00005ae9      e892bfffff     call sym.imp.dcgettext
0x00005aee      e995feffff     jmp 0x5988
0x00005af3      0f1f440000     nop dword [rax + rax]
0x00005af8      4531d2         xor r10d, r10d
0x00005afb      31db           xor ebx, ebx
0x00005afd      e94afeffff     jmp 0x594c
0x00005b02      660f1f440000   nop word [rax + rax]
0x00005b08      488b442428     mov rax, qword [rsp + 0x28]
0x00005b0d      bafeffffff     mov edx, 0xfffffffe                     ; 4294967294
0x00005b12      4839d0         cmp rax, rdx
0x00005b15      4189c7         mov r15d, eax
0x00005b18      0f8619feffff   jbe 0x5937
0x00005b1e      eb91           jmp 0x5ab1
0x00005b20      4c89d0         mov rax, r10
0x00005b23      4883c001       add rax, 1
0x00005b27      0f9544241e     setne byte [rsp + 0x1e]
0x00005b2c      4885ed         test rbp, rbp
0x00005b2f      4889442408     mov qword [rsp + 8], rax
0x00005b34      0f84f0000000   je 0x5c2a
0x00005b3a      4885c0         test rax, rax
0x00005b3d      0f94c0         sete al
0x00005b40      e9aafeffff     jmp 0x59ef
0x00005b45      0f1f00         nop dword [rax]
0x00005b48      448b7814       mov r15d, dword [rax + 0x14]
0x00005b4c      4489ff         mov edi, r15d
0x00005b4f      e8bcbfffff     call sym.imp.getgrgid
0x00005b54      4885c0         test rax, rax
0x00005b57      0f84b3000000   je 0x5c10
0x00005b5d      488b38         mov rdi, qword [rax]
0x00005b60      e8fb090000     call sym.xstrdup
0x00005b65      4889c3         mov rbx, rax
0x00005b68      e833beffff     call sym.imp.endgrent
0x00005b6d      48c704240000.  mov qword [rsp], 0
0x00005b75      e9b5feffff     jmp 0x5a2f
0x00005b7a      660f1f440000   nop word [rax + rax]
0x00005b80      488d4c2428     lea rcx, [rsp + 0x28]
0x00005b85      4c8d05bd6400.  lea r8, [0x0000c049]
0x00005b8c      31f6           xor esi, esi
0x00005b8e      ba0a000000     mov edx, 0xa
0x00005b93      4889ef         mov rdi, rbp
0x00005b96      44884c241f     mov byte [rsp + 0x1f], r9b
0x00005b9b      e8a00a0000     call sym.xstrtoul
0x00005ba0      488d35216400.  lea rsi, [0x0000bfc8]                   ; "invalid user"
0x00005ba7      85c0           test eax, eax
0x00005ba9      440fb64c241f   movzx r9d, byte [rsp + 0x1f]
0x00005baf      48893424       mov qword [rsp], rsi
0x00005bb3      7531           jne 0x5be6
0x00005bb5      488b442428     mov rax, qword [rsp + 0x28]
0x00005bba      0fb64c241e     movzx ecx, byte [rsp + 0x1e]
0x00005bbf      bafeffffff     mov edx, 0xfffffffe                     ; 4294967294
0x00005bc4      4839d0         cmp rax, rdx
0x00005bc7      410f47c9       cmova ecx, r9d
0x00005bcb      4189c9         mov r9d, ecx
0x00005bce      8b4c2418       mov ecx, dword [rsp + 0x18]
0x00005bd2      0f46c8         cmovbe ecx, eax
0x00005bd5      b800000000     mov eax, 0
0x00005bda      480f47c6       cmova rax, rsi
0x00005bde      894c2418       mov dword [rsp + 0x18], ecx
0x00005be2      48890424       mov qword [rsp], rax
0x00005be6      44884c241e     mov byte [rsp + 0x1e], r9b
0x00005beb      31db           xor ebx, ebx
0x00005bed      e88ec0ffff     call sym.imp.endpwent
0x00005bf2      e910fdffff     jmp 0x5907
0x00005bf7      660f1f840000.  nop word [rax + rax]
0x00005c00      48833c2400     cmp qword [rsp], 0
0x00005c05      0f85c3feffff   jne 0x5ace
0x00005c0b      e939fdffff     jmp 0x5949
0x00005c10      488d742430     lea rsi, [rsp + 0x30]
0x00005c15      4489ff         mov edi, r15d
0x00005c18      e853deffff     call sym.umaxtostr
0x00005c1d      4889c7         mov rdi, rax
0x00005c20      e93bffffff     jmp 0x5b60
0x00005c25      e8a6beffff     call sym.imp.__stack_chk_fail
0x00005c2a      31db           xor ebx, ebx
0x00005c2c      48c704240000.  mov qword [rsp], 0
0x00005c34      e9cefcffff     jmp 0x5907
0x00005c39      0f1f80000000.  nop dword [rax]
;-- parse_user_spec:
0x00005c40      4885d2         test rdx, rdx
0x00005c43      0f84a7000000   je 0x5cf0
0x00005c49      4157           push r15
0x00005c4b      4156           push r14
0x00005c4d      4989f6         mov r14, rsi
0x00005c50      4155           push r13
0x00005c52      4154           push r12
0x00005c54      4d89c5         mov r13, r8
0x00005c57      55             push rbp
0x00005c58      53             push rbx
0x00005c59      4989cc         mov r12, rcx
0x00005c5c      4889d5         mov rbp, rdx
0x00005c5f      4889fb         mov rbx, rdi
0x00005c62      be3a000000     mov esi, 0x3a                           ; ':'
0x00005c67      4883ec18       sub rsp, 0x18
0x00005c6b      e890beffff     call sym.imp.strchr
0x00005c70      4d89e9         mov r9, r13
0x00005c73      4989c7         mov r15, rax
0x00005c76      4d89e0         mov r8, r12
0x00005c79      4889e9         mov rcx, rbp
0x00005c7c      4c89f2         mov rdx, r14
0x00005c7f      4889c6         mov rsi, rax
0x00005c82      4889df         mov rdi, rbx
0x00005c85      e8e6fbffff     call sym.parse_with_separator
0x00005c8a      4d85ff         test r15, r15
0x00005c8d      4989c2         mov r10, rax
0x00005c90      7542           jne 0x5cd4
0x00005c92      4885c0         test rax, rax
0x00005c95      4889442408     mov qword [rsp + 8], rax
0x00005c9a      746c           je 0x5d08
0x00005c9c      be2e000000     mov esi, 0x2e                           ; '.'
0x00005ca1      4889df         mov rdi, rbx
0x00005ca4      e857beffff     call sym.imp.strchr
0x00005ca9      4885c0         test rax, rax
0x00005cac      4c8b542408     mov r10, qword [rsp + 8]
0x00005cb1      7421           je 0x5cd4
0x00005cb3      4d89e9         mov r9, r13
0x00005cb6      4d89e0         mov r8, r12
0x00005cb9      4889e9         mov rcx, rbp
0x00005cbc      4c89f2         mov rdx, r14
0x00005cbf      4889c6         mov rsi, rax
0x00005cc2      4889df         mov rdi, rbx
0x00005cc5      e8a6fbffff     call sym.parse_with_separator
0x00005cca      4885c0         test rax, rax
0x00005ccd      4c8b542408     mov r10, qword [rsp + 8]
0x00005cd2      7434           je 0x5d08
0x00005cd4      4883c418       add rsp, 0x18
0x00005cd8      4c89d0         mov rax, r10
0x00005cdb      5b             pop rbx
0x00005cdc      5d             pop rbp
0x00005cdd      415c           pop r12
0x00005cdf      415d           pop r13
0x00005ce1      415e           pop r14
0x00005ce3      415f           pop r15
0x00005ce5      c3             ret
0x00005ce6      662e0f1f8400.  nop word cs:[rax + rax]
0x00005cf0      4d89c1         mov r9, r8
0x00005cf3      4889f2         mov rdx, rsi
0x00005cf6      4989c8         mov r8, rcx
0x00005cf9      31f6           xor esi, esi
0x00005cfb      31c9           xor ecx, ecx
0x00005cfd      e96efbffff     jmp sym.parse_with_separator
0x00005d02      660f1f440000   nop word [rax + rax]
0x00005d08      4531d2         xor r10d, r10d
0x00005d0b      ebc7           jmp 0x5cd4
0x00005d0d      0f1f00         nop dword [rax]
;-- version_etc_arn:
0x00005d10      4157           push r15
0x00005d12      4156           push r14
0x00005d14      4155           push r13
0x00005d16      4154           push r12
0x00005d18      4d89cc         mov r12, r9
0x00005d1b      55             push rbp
0x00005d1c      53             push rbx
0x00005d1d      4889fd         mov rbp, rdi
0x00005d20      4c89c3         mov rbx, r8
0x00005d23      4883ec28       sub rsp, 0x28
0x00005d27      4885f6         test rsi, rsi
0x00005d2a      0f8418010000   je 0x5e48
0x00005d30      4989d0         mov r8, rdx
0x00005d33      488d15b66200.  lea rdx, str.s___s___s                  ; 0xbff0 ; "%s (%s) %s\n"
0x00005d3a      4989c9         mov r9, rcx
0x00005d3d      31c0           xor eax, eax
0x00005d3f      4889f1         mov rcx, rsi
0x00005d42      be01000000     mov esi, 1
0x00005d47      e854c0ffff     call sym.imp.__fprintf_chk
0x00005d4c      488d35b06200.  lea rsi, [0x0000c003]                   ; "(C)"
0x00005d53      31ff           xor edi, edi
0x00005d55      ba05000000     mov edx, 5
0x00005d5a      e821bdffff     call sym.imp.dcgettext
0x00005d5f      488d15ba6500.  lea rdx, obj.version_etc_copyright      ; 0xc320 ; "Copyright %s %d Free Software Foundation, Inc."
0x00005d66      4889c1         mov rcx, rax
0x00005d69      41b8e3070000   mov r8d, 0x7e3
0x00005d6f      be01000000     mov esi, 1
0x00005d74      4889ef         mov rdi, rbp
0x00005d77      31c0           xor eax, eax
0x00005d79      e822c0ffff     call sym.imp.__fprintf_chk
0x00005d7e      488d350b6300.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0xc090 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00005d85      31ff           xor edi, edi
0x00005d87      ba05000000     mov edx, 5
0x00005d8c      e8efbcffff     call sym.imp.dcgettext
0x00005d91      4889ee         mov rsi, rbp
0x00005d94      4889c7         mov rdi, rax
0x00005d97      e814beffff     call sym.imp.fputs_unlocked
0x00005d9c      4983fc09       cmp r12, 9
0x00005da0      0f873a030000   ja 0x60e0
0x00005da6      488d153f6500.  lea rdx, [0x0000c2ec]
0x00005dad      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00005db1      4801d0         add rax, rdx
0x00005db4      ffe0           jmp rax
0x00005db6      662e0f1f8400.  nop word cs:[rax + rax]
0x00005dc0      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00005dc4      488b4310       mov rax, qword [rbx + 0x10]
0x00005dc8      488d35316400.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0xc200 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x00005dcf      4c8b4308       mov r8, qword [rbx + 8]
0x00005dd3      ba05000000     mov edx, 5
0x00005dd8      31ff           xor edi, edi
0x00005dda      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00005dde      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005de2      4c894c2410     mov qword [rsp + 0x10], r9
0x00005de7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005deb      4c8b7318       mov r14, qword [rbx + 0x18]
0x00005def      48890424       mov qword [rsp], rax
0x00005df3      4c89442408     mov qword [rsp + 8], r8
0x00005df8      488b1b         mov rbx, qword [rbx]
0x00005dfb      e880bcffff     call sym.imp.dcgettext
0x00005e00      4883ec08       sub rsp, 8
0x00005e04      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00005e09      4889c2         mov rdx, rax
0x00005e0c      4889d9         mov rcx, rbx
0x00005e0f      be01000000     mov esi, 1
0x00005e14      4889ef         mov rdi, rbp
0x00005e17      31c0           xor eax, eax
0x00005e19      4151           push r9
0x00005e1b      4155           push r13
0x00005e1d      4154           push r12
0x00005e1f      4157           push r15
0x00005e21      4156           push r14
0x00005e23      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00005e28      4c8b442438     mov r8, qword [rsp + 0x38]
0x00005e2d      e86ebfffff     call sym.imp.__fprintf_chk
0x00005e32      4883c430       add rsp, 0x30
0x00005e36      4883c428       add rsp, 0x28
0x00005e3a      5b             pop rbx
0x00005e3b      5d             pop rbp
0x00005e3c      415c           pop r12
0x00005e3e      415d           pop r13
0x00005e40      415e           pop r14
0x00005e42      415f           pop r15
0x00005e44      c3             ret
0x00005e45      0f1f00         nop dword [rax]
0x00005e48      4989c8         mov r8, rcx
0x00005e4b      4889d1         mov rcx, rdx
0x00005e4e      488d15a76100.  lea rdx, str.s__s                       ; 0xbffc ; "%s %s\n"
0x00005e55      be01000000     mov esi, 1
0x00005e5a      31c0           xor eax, eax
0x00005e5c      e83fbfffff     call sym.imp.__fprintf_chk
0x00005e61      e9e6feffff     jmp 0x5d4c
0x00005e66      662e0f1f8400.  nop word cs:[rax + rax]
0x00005e70      4c8b5340       mov r10, qword [rbx + 0x40]
0x00005e74      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00005e78      488d35b16300.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0xc230 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x00005e7f      488b4310       mov rax, qword [rbx + 0x10]
0x00005e83      4c8b4308       mov r8, qword [rbx + 8]
0x00005e87      ba05000000     mov edx, 5
0x00005e8c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00005e90      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005e94      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005e98      4c8b7318       mov r14, qword [rbx + 0x18]
0x00005e9c      488b1b         mov rbx, qword [rbx]
0x00005e9f      4c89542418     mov qword [rsp + 0x18], r10
0x00005ea4      4c894c2410     mov qword [rsp + 0x10], r9
0x00005ea9      48890424       mov qword [rsp], rax
0x00005ead      4c89442408     mov qword [rsp + 8], r8
0x00005eb2      31ff           xor edi, edi
0x00005eb4      e8c7bbffff     call sym.imp.dcgettext
0x00005eb9      4c8b542418     mov r10, qword [rsp + 0x18]
0x00005ebe      4152           push r10
0x00005ec0      e93fffffff     jmp 0x5e04
0x00005ec5      0f1f00         nop dword [rax]
0x00005ec8      488b1b         mov rbx, qword [rbx]
0x00005ecb      488d35356100.  lea rsi, str.Written_by__s.             ; 0xc007 ; "Written by %s.\n"
0x00005ed2      ba05000000     mov edx, 5
0x00005ed7      31ff           xor edi, edi
0x00005ed9      e8a2bbffff     call sym.imp.dcgettext
0x00005ede      4883c428       add rsp, 0x28
0x00005ee2      4889d9         mov rcx, rbx
0x00005ee5      4889ef         mov rdi, rbp
0x00005ee8      5b             pop rbx
0x00005ee9      5d             pop rbp
0x00005eea      415c           pop r12
0x00005eec      415d           pop r13
0x00005eee      415e           pop r14
0x00005ef0      415f           pop r15
0x00005ef2      4889c2         mov rdx, rax
0x00005ef5      be01000000     mov esi, 1
0x00005efa      31c0           xor eax, eax
0x00005efc      e99fbeffff     jmp sym.imp.__fprintf_chk
0x00005f01      0f1f80000000.  nop dword [rax]
0x00005f08      4c8b6308       mov r12, qword [rbx + 8]
0x00005f0c      488d35046100.  lea rsi, str.Written_by__s_and__s.      ; 0xc017 ; "Written by %s and %s.\n"
0x00005f13      488b1b         mov rbx, qword [rbx]
0x00005f16      ba05000000     mov edx, 5
0x00005f1b      31ff           xor edi, edi
0x00005f1d      e85ebbffff     call sym.imp.dcgettext
0x00005f22      4883c428       add rsp, 0x28
0x00005f26      4d89e0         mov r8, r12
0x00005f29      4889d9         mov rcx, rbx
0x00005f2c      4889ef         mov rdi, rbp
0x00005f2f      4889c2         mov rdx, rax
0x00005f32      be01000000     mov esi, 1
0x00005f37      5b             pop rbx
0x00005f38      5d             pop rbp
0x00005f39      415c           pop r12
0x00005f3b      415d           pop r13
0x00005f3d      415e           pop r14
0x00005f3f      415f           pop r15
0x00005f41      31c0           xor eax, eax
0x00005f43      e958beffff     jmp sym.imp.__fprintf_chk
0x00005f48      0f1f84000000.  nop dword [rax + rax]
0x00005f50      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005f54      4c8b6308       mov r12, qword [rbx + 8]
0x00005f58      488d35cf6000.  lea rsi, str.Written_by__s___s__and__s. ; 0xc02e ; "Written by %s, %s, and %s.\n"
0x00005f5f      488b1b         mov rbx, qword [rbx]
0x00005f62      ba05000000     mov edx, 5
0x00005f67      31ff           xor edi, edi
0x00005f69      e812bbffff     call sym.imp.dcgettext
0x00005f6e      4883c428       add rsp, 0x28
0x00005f72      4d89e9         mov r9, r13
0x00005f75      4d89e0         mov r8, r12
0x00005f78      4889d9         mov rcx, rbx
0x00005f7b      4889ef         mov rdi, rbp
0x00005f7e      4889c2         mov rdx, rax
0x00005f81      5b             pop rbx
0x00005f82      5d             pop rbp
0x00005f83      415c           pop r12
0x00005f85      415d           pop r13
0x00005f87      415e           pop r14
0x00005f89      415f           pop r15
0x00005f8b      be01000000     mov esi, 1
0x00005f90      31c0           xor eax, eax
0x00005f92      e909beffff     jmp sym.imp.__fprintf_chk
0x00005f97      660f1f840000.  nop word [rax + rax]
0x00005fa0      488d35b96100.  lea rsi, str.Written_by__s___s___s___and__s. ; 0xc160 ; "Written by %s, %s, %s,\nand %s.\n"
0x00005fa7      ba05000000     mov edx, 5
0x00005fac      31ff           xor edi, edi
0x00005fae      4c8b7318       mov r14, qword [rbx + 0x18]
0x00005fb2      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005fb6      4c8b6308       mov r12, qword [rbx + 8]
0x00005fba      488b1b         mov rbx, qword [rbx]
0x00005fbd      e8bebaffff     call sym.imp.dcgettext
0x00005fc2      4883ec08       sub rsp, 8
0x00005fc6      4156           push r14
0x00005fc8      4889c2         mov rdx, rax
0x00005fcb      4d89e9         mov r9, r13
0x00005fce      4d89e0         mov r8, r12
0x00005fd1      4889d9         mov rcx, rbx
0x00005fd4      4889ef         mov rdi, rbp
0x00005fd7      be01000000     mov esi, 1
0x00005fdc      31c0           xor eax, eax
0x00005fde      e8bdbdffff     call sym.imp.__fprintf_chk
0x00005fe3      58             pop rax
0x00005fe4      5a             pop rdx
0x00005fe5      4883c428       add rsp, 0x28
0x00005fe9      5b             pop rbx
0x00005fea      5d             pop rbp
0x00005feb      415c           pop r12
0x00005fed      415d           pop r13
0x00005fef      415e           pop r14
0x00005ff1      415f           pop r15
0x00005ff3      c3             ret
0x00005ff4      0f1f4000       nop dword [rax]
0x00005ff8      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005ffc      488d357d6100.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0xc180 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00006003      ba05000000     mov edx, 5
0x00006008      31ff           xor edi, edi
0x0000600a      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000600e      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00006012      4c8b6308       mov r12, qword [rbx + 8]
0x00006016      488b1b         mov rbx, qword [rbx]
0x00006019      e862baffff     call sym.imp.dcgettext
0x0000601e      4157           push r15
0x00006020      eba4           jmp 0x5fc6
0x00006022      660f1f440000   nop word [rax + rax]
0x00006028      4c8b4308       mov r8, qword [rbx + 8]
0x0000602c      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006030      488d35716100.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0xc1a8 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00006037      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000603b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000603f      ba05000000     mov edx, 5
0x00006044      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00006048      31ff           xor edi, edi
0x0000604a      488b1b         mov rbx, qword [rbx]
0x0000604d      4c890424       mov qword [rsp], r8
0x00006051      e82abaffff     call sym.imp.dcgettext
0x00006056      4883ec08       sub rsp, 8
0x0000605a      4d89e9         mov r9, r13
0x0000605d      4154           push r12
0x0000605f      4157           push r15
0x00006061      4156           push r14
0x00006063      4c8b442420     mov r8, qword [rsp + 0x20]
0x00006068      4889d9         mov rcx, rbx
0x0000606b      4889c2         mov rdx, rax
0x0000606e      4889ef         mov rdi, rbp
0x00006071      be01000000     mov esi, 1
0x00006076      31c0           xor eax, eax
0x00006078      e823bdffff     call sym.imp.__fprintf_chk
0x0000607d      4883c420       add rsp, 0x20
0x00006081      4883c428       add rsp, 0x28
0x00006085      5b             pop rbx
0x00006086      5d             pop rbp
0x00006087      415c           pop r12
0x00006089      415d           pop r13
0x0000608b      415e           pop r14
0x0000608d      415f           pop r15
0x0000608f      c3             ret
0x00006090      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00006094      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00006098      488d35316100.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0xc1d0 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x0000609f      4c8b6328       mov r12, qword [rbx + 0x28]
0x000060a3      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000060a7      ba05000000     mov edx, 5
0x000060ac      4c8b7318       mov r14, qword [rbx + 0x18]
0x000060b0      4c8b4308       mov r8, qword [rbx + 8]
0x000060b4      31ff           xor edi, edi
0x000060b6      4c894c2408     mov qword [rsp + 8], r9
0x000060bb      488b1b         mov rbx, qword [rbx]
0x000060be      4c890424       mov qword [rsp], r8
0x000060c2      e8b9b9ffff     call sym.imp.dcgettext
0x000060c7      4155           push r13
0x000060c9      4154           push r12
0x000060cb      4157           push r15
0x000060cd      4156           push r14
0x000060cf      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x000060d4      eb8d           jmp 0x6063
0x000060d6      662e0f1f8400.  nop word cs:[rax + rax]
0x000060e0      4c8b5340       mov r10, qword [rbx + 0x40]
0x000060e4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000060e8      ba05000000     mov edx, 5
0x000060ed      488b4310       mov rax, qword [rbx + 0x10]
0x000060f1      4c8b4308       mov r8, qword [rbx + 8]
0x000060f5      488d356c6100.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0xc268 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x000060fc      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00006100      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006104      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00006108      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000610c      4c89542418     mov qword [rsp + 0x18], r10
0x00006111      4c894c2410     mov qword [rsp + 0x10], r9
0x00006116      48890424       mov qword [rsp], rax
0x0000611a      4c89442408     mov qword [rsp + 8], r8
0x0000611f      488b1b         mov rbx, qword [rbx]
0x00006122      e98bfdffff     jmp 0x5eb2
0x00006127      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00006130      4531c9         xor r9d, r9d
0x00006133      49833800       cmp qword [r8], 0
0x00006137      7412           je 0x614b
0x00006139      0f1f80000000.  nop dword [rax]
0x00006140      4983c101       add r9, 1
0x00006144      4b833cc800     cmp qword [r8 + r9*8], 0
0x00006149      75f5           jne 0x6140
0x0000614b      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00006150      4883ec68       sub rsp, 0x68
0x00006154      4d89c2         mov r10, r8
0x00006157      4531c9         xor r9d, r9d
0x0000615a      64488b042528.  mov rax, qword fs:[0x28]
0x00006163      4889442458     mov qword [rsp + 0x58], rax
0x00006168      31c0           xor eax, eax
0x0000616a      4989e0         mov r8, rsp
0x0000616d      0f1f00         nop dword [rax]
0x00006170      418b02         mov eax, dword [r10]
0x00006173      83f82f         cmp eax, 0x2f
0x00006176      7742           ja 0x61ba
0x00006178      4189c3         mov r11d, eax
0x0000617b      4d035a10       add r11, qword [r10 + 0x10]
0x0000617f      83c008         add eax, 8
0x00006182      418902         mov dword [r10], eax
0x00006185      498b03         mov rax, qword [r11]
0x00006188      4885c0         test rax, rax
0x0000618b      4b8904c8       mov qword [r8 + r9*8], rax
0x0000618f      740a           je 0x619b
0x00006191      4983c101       add r9, 1
0x00006195      4983f90a       cmp r9, 0xa
0x00006199      75d5           jne 0x6170
0x0000619b      e870fbffff     call sym.version_etc_arn
0x000061a0      488b442458     mov rax, qword [rsp + 0x58]
0x000061a5      644833042528.  xor rax, qword fs:[0x28]
0x000061ae      7505           jne 0x61b5
0x000061b0      4883c468       add rsp, 0x68
0x000061b4      c3             ret
0x000061b5      e816b9ffff     call sym.imp.__stack_chk_fail
0x000061ba      4d8b5a08       mov r11, qword [r10 + 8]
0x000061be      498d4308       lea rax, [r11 + 8]
0x000061c2      49894208       mov qword [r10 + 8], rax
0x000061c6      ebbd           jmp 0x6185
0x000061c8      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x000061d0      55             push rbp
0x000061d1      53             push rbx
0x000061d2      41ba20000000   mov r10d, 0x20                          ; "@"
0x000061d8      4531db         xor r11d, r11d
0x000061db      4881ecb80000.  sub rsp, 0xb8
0x000061e2      64488b042528.  mov rax, qword fs:[0x28]
0x000061eb      4889442478     mov qword [rsp + 0x78], rax
0x000061f0      31c0           xor eax, eax
0x000061f2      488d8424d000.  lea rax, [rsp + 0xd0]
0x000061fa      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00006202      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x0000620a      4c8d442420     lea r8, [rsp + 0x20]
0x0000620f      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00006217      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x0000621f      4889442410     mov qword [rsp + 0x10], rax
0x00006224      488d84248000.  lea rax, [rsp + 0x80]
0x0000622c      4531c9         xor r9d, r9d
0x0000622f      4889442418     mov qword [rsp + 0x18], rax
0x00006234      4889c5         mov rbp, rax
0x00006237      660f1f840000.  nop word [rax + rax]
0x00006240      4183fa2f       cmp r10d, 0x2f
0x00006244      7756           ja 0x629c
0x00006246      4489d0         mov eax, r10d
0x00006249      41bb01000000   mov r11d, 1
0x0000624f      4183c208       add r10d, 8
0x00006253      4801e8         add rax, rbp
0x00006256      488b00         mov rax, qword [rax]
0x00006259      4885c0         test rax, rax
0x0000625c      4b8904c8       mov qword [r8 + r9*8], rax
0x00006260      740a           je 0x626c
0x00006262      4983c101       add r9, 1
0x00006266      4983f90a       cmp r9, 0xa
0x0000626a      75d4           jne 0x6240
0x0000626c      4584db         test r11b, r11b
0x0000626f      7524           jne 0x6295
0x00006271      e89afaffff     call sym.version_etc_arn
0x00006276      488b442478     mov rax, qword [rsp + 0x78]
0x0000627b      644833042528.  xor rax, qword fs:[0x28]
0x00006284      750a           jne 0x6290
0x00006286      4881c4b80000.  add rsp, 0xb8
0x0000628d      5b             pop rbx
0x0000628e      5d             pop rbp
0x0000628f      c3             ret
0x00006290      e83bb8ffff     call sym.imp.__stack_chk_fail
0x00006295      4489542408     mov dword [rsp + 8], r10d
0x0000629a      ebd5           jmp 0x6271
0x0000629c      4889d8         mov rax, rbx
0x0000629f      4883c308       add rbx, 8
0x000062a3      ebb1           jmp 0x6256
0x000062a5      90             nop
0x000062a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x000062b0      53             push rbx
0x000062b1      488d35925d00.  lea rsi, str.Report_bugs_to:__s         ; 0xc04a ; "\nReport bugs to: %s\n"
0x000062b8      ba05000000     mov edx, 5
0x000062bd      31ff           xor edi, edi
0x000062bf      e8bcb7ffff     call sym.imp.dcgettext
0x000062c4      488d15945d00.  lea rdx, str.bug_coreutils_gnu.org      ; 0xc05f ; "bug-coreutils@gnu.org"
0x000062cb      4889c6         mov rsi, rax
0x000062ce      bf01000000     mov edi, 1
0x000062d3      31c0           xor eax, eax
0x000062d5      e8f6b9ffff     call sym.imp.__printf_chk
0x000062da      488d35945d00.  lea rsi, str.s_home_page:___s           ; 0xc075 ; "%s home page: <%s>\n"
0x000062e1      ba05000000     mov edx, 5
0x000062e6      31ff           xor edi, edi
0x000062e8      e893b7ffff     call sym.imp.dcgettext
0x000062ed      488d0dac5200.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0xb5a0 ; "https://www.gnu.org/software/coreutils/"
0x000062f4      488d15e54700.  lea rdx, str.GNU_coreutils              ; 0xaae0 ; "GNU coreutils"
0x000062fb      4889c6         mov rsi, rax
0x000062fe      bf01000000     mov edi, 1
0x00006303      31c0           xor eax, eax
0x00006305      e8c6b9ffff     call sym.imp.__printf_chk
0x0000630a      488b1d778d20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20f088:8]=0
0x00006311      488d35905f00.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0xc2a8 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00006318      31ff           xor edi, edi
0x0000631a      ba05000000     mov edx, 5
0x0000631f      e85cb7ffff     call sym.imp.dcgettext
0x00006324      4889de         mov rsi, rbx
0x00006327      4889c7         mov rdi, rax
0x0000632a      5b             pop rbx
0x0000632b      e980b8ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00006330      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00006331      4889fb         mov rbx, rdi
0x00006334      e807b9ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00006339      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x0000633c      7505           jne 0x6343
0x0000633e      4885db         test rbx, rbx
0x00006341      7502           jne 0x6345
0x00006343      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00006344      c3             ret
0x00006345      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x0000634a      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00006350      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00006353      48f7e6         mul rsi
0x00006356      4889c7         mov rdi, rax
0x00006359      0f90c0         seto al
0x0000635c      4885ff         test rdi, rdi
0x0000635f      780a           js 0x636b
0x00006361      0fb6c0         movzx eax, al
0x00006364      4885c0         test rax, rax
0x00006367      7502           jne 0x636b
0x00006369      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x0000636b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x0000636f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00006374      6690           nop
0x00006376      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00006380      ebae           jmp sym.xmalloc
0x00006382      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00006386      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00006390      4885f6         test rsi, rsi
0x00006393      53             push rbx
0x00006394      4889f3         mov rbx, rsi
0x00006397      7505           jne 0x639e
0x00006399      4885ff         test rdi, rdi
0x0000639c      751a           jne 0x63b8
0x0000639e      4889de         mov rsi, rbx
0x000063a1      e80ab9ffff     call sym.imp.realloc
0x000063a6      4885c0         test rax, rax
0x000063a9      7505           jne 0x63b0
0x000063ab      4885db         test rbx, rbx
0x000063ae      7511           jne 0x63c1                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x000063b0      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x000063b1      c3             ret
0x000063b2      660f1f440000   nop word [rax + rax]
0x000063b8      e823baffff     call sym..plt.got
0x000063bd      31c0           xor eax, eax
0x000063bf      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x000063c0      c3             ret
0x000063c1      e8ba010000     call sym.xalloc_die
0x000063c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x000063d0      4889f0         mov rax, rsi
0x000063d3      48f7e2         mul rdx
0x000063d6      4889c6         mov rsi, rax
0x000063d9      0f90c0         seto al
0x000063dc      4885f6         test rsi, rsi
0x000063df      780a           js 0x63eb
0x000063e1      0fb6c0         movzx eax, al
0x000063e4      4885c0         test rax, rax
0x000063e7      7502           jne 0x63eb
0x000063e9      eba5           jmp sym.xrealloc
0x000063eb      4883ec08       sub rsp, 8
0x000063ef      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x000063f4      6690           nop
0x000063f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00006400      4885ff         test rdi, rdi
0x00006403      4989d1         mov r9, rdx
0x00006406      488b0e         mov rcx, qword [rsi]
0x00006409      7435           je 0x6440
0x0000640b      31d2           xor edx, edx
0x0000640d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00006417      49f7f1         div r9
0x0000641a      4839c8         cmp rax, rcx
0x0000641d      763c           jbe 0x645b
0x0000641f      4889c8         mov rax, rcx
0x00006422      48d1e8         shr rax, 1
0x00006425      488d4c0801     lea rcx, [rax + rcx + 1]
0x0000642a      48890e         mov qword [rsi], rcx
0x0000642d      490fafc9       imul rcx, r9
0x00006431      4889ce         mov rsi, rcx
0x00006434      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00006439      0f1f80000000.  nop dword [rax]
0x00006440      4885c9         test rcx, rcx
0x00006443      7423           je 0x6468
0x00006445      4889c8         mov rax, rcx
0x00006448      49f7e1         mul r9
0x0000644b      0f90c2         seto dl
0x0000644e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00006451      0fb6d2         movzx edx, dl
0x00006454      7805           js 0x645b
0x00006456      4885d2         test rdx, rdx
0x00006459      74cf           je 0x642a
0x0000645b      4883ec08       sub rsp, 8
0x0000645f      e81c010000     call sym.xalloc_die
0x00006464      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00006468      31d2           xor edx, edx
0x0000646a      b880000000     mov eax, 0x80
0x0000646f      4531c0         xor r8d, r8d
0x00006472      49f7f1         div r9
0x00006475      4885c0         test rax, rax
0x00006478      410f94c0       sete r8b
0x0000647c      498d0c00       lea rcx, [r8 + rax]
0x00006480      ebc3           jmp 0x6445
0x00006482      0f1f4000       nop dword [rax]
0x00006486      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00006490      4885ff         test rdi, rdi
0x00006493      488b06         mov rax, qword [rsi]
0x00006496      7428           je 0x64c0
0x00006498      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x000064a2      4839d0         cmp rax, rdx
0x000064a5      772a           ja 0x64d1
0x000064a7      4889c2         mov rdx, rax
0x000064aa      48d1ea         shr rdx, 1
0x000064ad      488d440201     lea rax, [rdx + rax + 1]
0x000064b2      488906         mov qword [rsi], rax
0x000064b5      4889c6         mov rsi, rax
0x000064b8      e9d3feffff     jmp sym.xrealloc
0x000064bd      0f1f00         nop dword [rax]
0x000064c0      4885c0         test rax, rax
0x000064c3      ba80000000     mov edx, 0x80
0x000064c8      480f44c2       cmove rax, rdx
0x000064cc      4885c0         test rax, rax
0x000064cf      79e1           jns 0x64b2
0x000064d1      4883ec08       sub rsp, 8
0x000064d5      e8a6000000     call sym.xalloc_die
0x000064da      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x000064e0      53             push rbx
0x000064e1      4889fb         mov rbx, rdi
0x000064e4      e847feffff     call sym.xmalloc
0x000064e9      4889da         mov rdx, rbx
0x000064ec      31f6           xor esi, esi
0x000064ee      4889c7         mov rdi, rax
0x000064f1      5b             pop rbx
0x000064f2      e969b6ffff     jmp sym.imp.memset
0x000064f7      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00006500      4889f8         mov rax, rdi
0x00006503      4883ec08       sub rsp, 8
0x00006507      48f7e6         mul rsi
0x0000650a      0f90c2         seto dl
0x0000650d      4885c0         test rax, rax
0x00006510      7817           js 0x6529
0x00006512      0fb6d2         movzx edx, dl
0x00006515      4885d2         test rdx, rdx
0x00006518      750f           jne 0x6529
0x0000651a      e8a1b6ffff     call sym.imp.calloc
0x0000651f      4885c0         test rax, rax
0x00006522      7405           je 0x6529
0x00006524      4883c408       add rsp, 8
0x00006528      c3             ret
0x00006529      e852000000     call sym.xalloc_die
0x0000652e      6690           nop
;-- xmemdup:
0x00006530      55             push rbp
0x00006531      53             push rbx
0x00006532      4889fd         mov rbp, rdi
0x00006535      4889f7         mov rdi, rsi
0x00006538      4889f3         mov rbx, rsi
0x0000653b      4883ec08       sub rsp, 8
0x0000653f      e8ecfdffff     call sym.xmalloc
0x00006544      4883c408       add rsp, 8
0x00006548      4889da         mov rdx, rbx
0x0000654b      4889ee         mov rsi, rbp
0x0000654e      5b             pop rbx
0x0000654f      5d             pop rbp
0x00006550      4889c7         mov rdi, rax
0x00006553      e998b6ffff     jmp sym.imp.memcpy
0x00006558      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00006560      53             push rbx
0x00006561      4889fb         mov rbx, rdi
0x00006564      e837b5ffff     call sym.imp.strlen
0x00006569      4889df         mov rdi, rbx
0x0000656c      488d7001       lea rsi, [rax + 1]
0x00006570      5b             pop rbx
0x00006571      ebbd           jmp sym.xmemdup
0x00006573      662e0f1f8400.  nop word cs:[rax + rax]
0x0000657d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00006580      488d35c85d00.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0xc34f ; "memory exhausted"
0x00006587      4883ec08       sub rsp, 8
0x0000658b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00006590      31ff           xor edi, edi
0x00006592      e8e9b4ffff     call sym.imp.dcgettext
0x00006597      8b3d7b8a2000   mov edi, dword [obj.exit_failure]       ; [0x20f018:4]=1
0x0000659d      488d15854500.  lea rdx, [0x0000ab29]                   ; "%s"
0x000065a4      4889c1         mov rcx, rax
0x000065a7      31f6           xor esi, esi
0x000065a9      31c0           xor eax, eax
0x000065ab      e840b7ffff     call sym.imp.error
0x000065b0      e8fbb3ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x000065b5      662e0f1f8400.  nop word cs:[rax + rax]
0x000065bf      90             nop
;-- xfts_open:
0x000065c0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xfts.c:35
0x000065c4      81ce00020000   or esi, 0x200                           ; ../coreutils-8.31/lib/xfts.c:36
0x000065ca      e8711a0000     call sym.rpl_fts_open
0x000065cf      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xfts.c:37
0x000065d2      740c           je 0x65e0
0x000065d4      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/xfts.c:46
0x000065d8      c3             ret
0x000065d9      0f1f80000000.  nop dword [rax]
0x000065e0      e8dbb3ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/xfts.c:41
0x000065e5      833816         cmp dword [rax], 0x16
0x000065e8      7406           je 0x65f0
0x000065ea      e891ffffff     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xfts.c:42
0x000065ef      90             nop
0x000065f0      488d0d995d00.  lea rcx, obj.__PRETTY_FUNCTION__.3434   ; ../coreutils-8.31/lib/xfts.c:41 ; 0xc390 ; "xfts_open"
0x000065f7      488d35625d00.  lea rsi, str..._coreutils_8.31_lib_xfts.c ; 0xc360 ; "../coreutils-8.31/lib/xfts.c"
0x000065fe      488d3d785d00.  lea rdi, str.errno____EINVAL            ; 0xc37d ; "errno != EINVAL"
0x00006605      ba29000000     mov edx, 0x29                           ; ')'
0x0000660a      e841b5ffff     call sym.imp.__assert_fail
0x0000660f      90             nop
;-- cycle_warning_required:
0x00006610      8b5748         mov edx, dword [rdi + 0x48]             ; ../coreutils-8.31/lib/xfts.c:57
0x00006613      b801000000     mov eax, 1
0x00006618      83e211         and edx, 0x11
0x0000661b      83fa10         cmp edx, 0x10                           ; ../coreutils-8.31/lib/xfts.c:63
0x0000661e      7407           je 0x6627
0x00006620      31c0           xor eax, eax
0x00006622      83fa11         cmp edx, 0x11
0x00006625      7409           je 0x6630
0x00006627      f3c3           ret                                     ; ../coreutils-8.31/lib/xfts.c:65
0x00006629      0f1f80000000.  nop dword [rax]
0x00006630      48837e5800     cmp qword [rsi + 0x58], 0               ; ../coreutils-8.31/lib/xfts.c:64
0x00006635      0f95c0         setne al
0x00006638      c3             ret                                     ; ../coreutils-8.31/lib/xfts.c:65
0x00006639      0f1f80000000.  nop dword [rax]
;-- xstrtoul:
0x00006640      4157           push r15
0x00006642      4156           push r14
0x00006644      4155           push r13
0x00006646      4154           push r12
0x00006648      55             push rbp
0x00006649      53             push rbx
0x0000664a      4883ec28       sub rsp, 0x28
0x0000664e      64488b042528.  mov rax, qword fs:[0x28]
0x00006657      4889442418     mov qword [rsp + 0x18], rax
0x0000665c      31c0           xor eax, eax
0x0000665e      83fa24         cmp edx, 0x24
0x00006661      0f875e030000   ja 0x69c5
0x00006667      488d442410     lea rax, [rsp + 0x10]
0x0000666c      4989f7         mov r15, rsi
0x0000666f      4885f6         test rsi, rsi
0x00006672      4889fd         mov rbp, rdi
0x00006675      89542408       mov dword [rsp + 8], edx
0x00006679      4989ce         mov r14, rcx
0x0000667c      4d89c5         mov r13, r8
0x0000667f      4c0f44f8       cmove r15, rax
0x00006683      e838b3ffff     call sym.imp.__errno_location
0x00006688      c70000000000   mov dword [rax], 0
0x0000668e      4989c4         mov r12, rax
0x00006691      0fb65d00       movzx ebx, byte [rbp]
0x00006695      e836b7ffff     call sym.imp.__ctype_b_loc
0x0000669a      8b542408       mov edx, dword [rsp + 8]
0x0000669e      488b30         mov rsi, qword [rax]
0x000066a1      4889e8         mov rax, rbp
0x000066a4      eb11           jmp 0x66b7
0x000066a6      662e0f1f8400.  nop word cs:[rax + rax]
0x000066b0      4883c001       add rax, 1
0x000066b4      0fb618         movzx ebx, byte [rax]
0x000066b7      0fb6cb         movzx ecx, bl
0x000066ba      f6444e0120     test byte [rsi + rcx*2 + 1], 0x20
0x000066bf      75ef           jne 0x66b0
0x000066c1      80fb2d         cmp bl, 0x2d
0x000066c4      7452           je 0x6718
0x000066c6      4c89fe         mov rsi, r15
0x000066c9      4889ef         mov rdi, rbp
0x000066cc      e86fb6ffff     call sym.imp.strtoul
0x000066d1      498b0f         mov rcx, qword [r15]
0x000066d4      4889c3         mov rbx, rax
0x000066d7      4839e9         cmp rcx, rbp
0x000066da      742c           je 0x6708
0x000066dc      418b0424       mov eax, dword [r12]
0x000066e0      85c0           test eax, eax
0x000066e2      7464           je 0x6748
0x000066e4      83f822         cmp eax, 0x22
0x000066e7      bd01000000     mov ebp, 1
0x000066ec      752a           jne 0x6718
0x000066ee      4d85ed         test r13, r13
0x000066f1      7409           je 0x66fc
0x000066f3      440fb621       movzx r12d, byte [rcx]
0x000066f7      4584e4         test r12b, r12b
0x000066fa      757b           jne 0x6777
0x000066fc      49891e         mov qword [r14], rbx
0x000066ff      eb1c           jmp 0x671d
0x00006701      0f1f80000000.  nop dword [rax]
0x00006708      4d85ed         test r13, r13
0x0000670b      48894c2408     mov qword [rsp + 8], rcx
0x00006710      753e           jne 0x6750
0x00006712      660f1f440000   nop word [rax + rax]
0x00006718      bd04000000     mov ebp, 4
0x0000671d      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00006722      6448333c2528.  xor rdi, qword fs:[0x28]
0x0000672b      89e8           mov eax, ebp
0x0000672d      0f858d020000   jne 0x69c0
0x00006733      4883c428       add rsp, 0x28
0x00006737      5b             pop rbx
0x00006738      5d             pop rbp
0x00006739      415c           pop r12
0x0000673b      415d           pop r13
0x0000673d      415e           pop r14
0x0000673f      415f           pop r15
0x00006741      c3             ret
0x00006742      660f1f440000   nop word [rax + rax]
0x00006748      31ed           xor ebp, ebp
0x0000674a      eba2           jmp 0x66ee
0x0000674c      0f1f4000       nop dword [rax]
0x00006750      440fb66500     movzx r12d, byte [rbp]
0x00006755      4584e4         test r12b, r12b
0x00006758      74be           je 0x6718
0x0000675a      410fbef4       movsx esi, r12b
0x0000675e      4c89ef         mov rdi, r13
0x00006761      31ed           xor ebp, ebp
0x00006763      e898b3ffff     call sym.imp.strchr
0x00006768      4885c0         test rax, rax
0x0000676b      bb01000000     mov ebx, 1
0x00006770      488b4c2408     mov rcx, qword [rsp + 8]
0x00006775      74a1           je 0x6718
0x00006777      410fbef4       movsx esi, r12b
0x0000677b      4c89ef         mov rdi, r13
0x0000677e      48894c2408     mov qword [rsp + 8], rcx
0x00006783      e878b3ffff     call sym.imp.strchr
0x00006788      4885c0         test rax, rax
0x0000678b      488b4c2408     mov rcx, qword [rsp + 8]
0x00006790      0f84c6000000   je 0x685c
0x00006796      418d4424bb     lea eax, [r12 - 0x45]
0x0000679b      3c2f           cmp al, 0x2f
0x0000679d      7751           ja 0x67f0
0x0000679f      48ba45893000.  movabs rdx, 0x814400308945
0x000067a9      480fa3c2       bt rdx, rax
0x000067ad      7341           jae 0x67f0
0x000067af      be30000000     mov esi, 0x30                           ; '0'
0x000067b4      4c89ef         mov rdi, r13
0x000067b7      48894c2408     mov qword [rsp + 8], rcx
0x000067bc      e83fb3ffff     call sym.imp.strchr
0x000067c1      4885c0         test rax, rax
0x000067c4      488b4c2408     mov rcx, qword [rsp + 8]
0x000067c9      7425           je 0x67f0
0x000067cb      0fb64101       movzx eax, byte [rcx + 1]
0x000067cf      3c44           cmp al, 0x44
0x000067d1      740c           je 0x67df
0x000067d3      3c69           cmp al, 0x69
0x000067d5      0f84cd010000   je 0x69a8
0x000067db      3c42           cmp al, 0x42
0x000067dd      7511           jne 0x67f0
0x000067df      bf02000000     mov edi, 2
0x000067e4      bee8030000     mov esi, 0x3e8
0x000067e9      eb0f           jmp 0x67fa
0x000067eb      0f1f440000     nop dword [rax + rax]
0x000067f0      bf01000000     mov edi, 1
0x000067f5      be00040000     mov esi, 0x400
0x000067fa      4183ec42       sub r12d, 0x42
0x000067fe      4180fc35       cmp r12b, 0x35
0x00006802      7758           ja 0x685c
0x00006804      488d15dd5b00.  lea rdx, [0x0000c3e8]
0x0000680b      450fb6e4       movzx r12d, r12b
0x0000680f      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00006813      4801d0         add rax, rdx
0x00006816      ffe0           jmp rax
0x00006818      4889d8         mov rax, rbx
0x0000681b      48f7e6         mul rsi
0x0000681e      0f80ed010000   jo 0x6a11
0x00006824      4531c0         xor r8d, r8d
0x00006827      48f7e6         mul rsi
0x0000682a      0f80d2010000   jo 0x6a02
0x00006830      4889c3         mov rbx, rax
0x00006833      4409c5         or ebp, r8d
0x00006836      662e0f1f8400.  nop word cs:[rax + rax]
0x00006840      4863ff         movsxd rdi, edi
0x00006843      89e8           mov eax, ebp
0x00006845      4801f9         add rcx, rdi
0x00006848      83c802         or eax, 2
0x0000684b      49890f         mov qword [r15], rcx
0x0000684e      803900         cmp byte [rcx], 0
0x00006851      49891e         mov qword [r14], rbx
0x00006854      0f45e8         cmovne ebp, eax
0x00006857      e9c1feffff     jmp 0x671d
0x0000685c      49891e         mov qword [r14], rbx
0x0000685f      83cd02         or ebp, 2
0x00006862      e9b6feffff     jmp 0x671d
0x00006867      ba02000000     mov edx, 2
0x0000686c      4889d0         mov rax, rdx
0x0000686f      48f7e3         mul rbx
0x00006872      0f8096000000   jo 0x690e
0x00006878      4801db         add rbx, rbx
0x0000687b      ebc3           jmp 0x6840
0x0000687d      ba00020000     mov edx, 0x200
0x00006882      4889d0         mov rax, rdx
0x00006885      48f7e3         mul rbx
0x00006888      0f8080000000   jo 0x690e
0x0000688e      48c1e309       shl rbx, 9
0x00006892      ebac           jmp 0x6840
0x00006894      41b807000000   mov r8d, 7
0x0000689a      4531c9         xor r9d, r9d
0x0000689d      0f1f00         nop dword [rax]
0x000068a0      4889d8         mov rax, rbx
0x000068a3      48f7e6         mul rsi
0x000068a6      4889c3         mov rbx, rax
0x000068a9      0f808f010000   jo 0x6a3e
0x000068af      4183e801       sub r8d, 1
0x000068b3      75eb           jne 0x68a0
0x000068b5      4409cd         or ebp, r9d
0x000068b8      eb86           jmp 0x6840
0x000068ba      41b808000000   mov r8d, 8
0x000068c0      4531c9         xor r9d, r9d
0x000068c3      0f1f440000     nop dword [rax + rax]
0x000068c8      4889d8         mov rax, rbx
0x000068cb      48f7e6         mul rsi
0x000068ce      4889c3         mov rbx, rax
0x000068d1      0f8049010000   jo 0x6a20
0x000068d7      4183e801       sub r8d, 1
0x000068db      75eb           jne 0x68c8
0x000068dd      ebd6           jmp 0x68b5
0x000068df      41b804000000   mov r8d, 4
0x000068e5      4531c9         xor r9d, r9d
0x000068e8      4889d8         mov rax, rbx
0x000068eb      48f7e6         mul rsi
0x000068ee      4889c3         mov rbx, rax
0x000068f1      0f80fc000000   jo 0x69f3
0x000068f7      4183e801       sub r8d, 1
0x000068fb      75eb           jne 0x68e8
0x000068fd      ebb6           jmp 0x68b5
0x000068ff      4889d8         mov rax, rbx
0x00006902      48f7e6         mul rsi
0x00006905      4889c3         mov rbx, rax
0x00006908      0f8132ffffff   jno 0x6840
0x0000690e      bd01000000     mov ebp, 1
0x00006913      4883cbff       or rbx, 0xffffffffffffffff
0x00006917      e924ffffff     jmp 0x6840
0x0000691c      0f1f4000       nop dword [rax]
0x00006920      41b805000000   mov r8d, 5
0x00006926      4531c9         xor r9d, r9d
0x00006929      4889d8         mov rax, rbx
0x0000692c      48f7e6         mul rsi
0x0000692f      4889c3         mov rbx, rax
0x00006932      0f80f7000000   jo 0x6a2f
0x00006938      4183e801       sub r8d, 1
0x0000693c      75eb           jne 0x6929
0x0000693e      e972ffffff     jmp 0x68b5
0x00006943      41b806000000   mov r8d, 6
0x00006949      4531c9         xor r9d, r9d
0x0000694c      4889d8         mov rax, rbx
0x0000694f      48f7e6         mul rsi
0x00006952      4889c3         mov rbx, rax
0x00006955      0f8089000000   jo 0x69e4
0x0000695b      4183e801       sub r8d, 1
0x0000695f      75eb           jne 0x694c
0x00006961      e94fffffff     jmp 0x68b5
0x00006966      ba00040000     mov edx, 0x400
0x0000696b      4889d0         mov rax, rdx
0x0000696e      48f7e3         mul rbx
0x00006971      709b           jo 0x690e
0x00006973      48c1e30a       shl rbx, 0xa
0x00006977      e9c4feffff     jmp 0x6840
0x0000697c      4889d8         mov rax, rbx
0x0000697f      48f7e6         mul rsi
0x00006982      0f80c5000000   jo 0x6a4d
0x00006988      4531c0         xor r8d, r8d
0x0000698b      48f7e6         mul rsi
0x0000698e      0f8193feffff   jno 0x6827
0x00006994      41b801000000   mov r8d, 1
0x0000699a      4883c8ff       or rax, 0xffffffffffffffff
0x0000699e      e984feffff     jmp 0x6827
0x000069a3      0f1f440000     nop dword [rax + rax]
0x000069a8      31ff           xor edi, edi
0x000069aa      80790242       cmp byte [rcx + 2], 0x42
0x000069ae      be00040000     mov esi, 0x400
0x000069b3      400f94c7       sete dil
0x000069b7      8d7c3f01       lea edi, [rdi + rdi + 1]
0x000069bb      e93afeffff     jmp 0x67fa
0x000069c0      e80bb1ffff     call sym.imp.__stack_chk_fail
0x000069c5      488d0df45a00.  lea rcx, obj.__PRETTY_FUNCTION__.4162   ; 0xc4c0 ; "xstrtoul"
0x000069cc      488d35cd5900.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0xc3a0 ; "../coreutils-8.31/lib/xstrtol.c"
0x000069d3      488d3de65900.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0xc3c0 ; "0 <= strtol_base && strtol_base <= 36"
0x000069da      ba54000000     mov edx, 0x54                           ; 'T'
0x000069df      e86cb1ffff     call sym.imp.__assert_fail
0x000069e4      41b901000000   mov r9d, 1
0x000069ea      4883cbff       or rbx, 0xffffffffffffffff
0x000069ee      e968ffffff     jmp 0x695b
0x000069f3      41b901000000   mov r9d, 1
0x000069f9      4883cbff       or rbx, 0xffffffffffffffff
0x000069fd      e9f5feffff     jmp 0x68f7
0x00006a02      41b801000000   mov r8d, 1
0x00006a08      4883cbff       or rbx, 0xffffffffffffffff
0x00006a0c      e922feffff     jmp 0x6833
0x00006a11      4883c8ff       or rax, 0xffffffffffffffff
0x00006a15      41b801000000   mov r8d, 1
0x00006a1b      e907feffff     jmp 0x6827
0x00006a20      41b901000000   mov r9d, 1
0x00006a26      4883cbff       or rbx, 0xffffffffffffffff
0x00006a2a      e9a8feffff     jmp 0x68d7
0x00006a2f      41b901000000   mov r9d, 1
0x00006a35      4883cbff       or rbx, 0xffffffffffffffff
0x00006a39      e9fafeffff     jmp 0x6938
0x00006a3e      41b901000000   mov r9d, 1
0x00006a44      4883cbff       or rbx, 0xffffffffffffffff
0x00006a48      e962feffff     jmp 0x68af
0x00006a4d      41b801000000   mov r8d, 1
0x00006a53      4883c8ff       or rax, 0xffffffffffffffff
0x00006a57      e92fffffff     jmp 0x698b
0x00006a5c      0f1f4000       nop dword [rax]
;-- AD_compare:
0x00006a60      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fts-cycle.c:33
0x00006a62      488b5608       mov rdx, qword [rsi + 8]                ; ../coreutils-8.31/lib/fts-cycle.c:37
0x00006a66      48395708       cmp qword [rdi + 8], rdx
0x00006a6a      7404           je 0x6a70
0x00006a6c      f3c3           ret                                     ; ../coreutils-8.31/lib/fts-cycle.c:38
0x00006a6e      6690           nop
0x00006a70      488b06         mov rax, qword [rsi]                    ; ../coreutils-8.31/lib/fts-cycle.c:37
0x00006a73      483907         cmp qword [rdi], rax
0x00006a76      0f94c0         sete al
0x00006a79      c3             ret                                     ; ../coreutils-8.31/lib/fts-cycle.c:38
0x00006a7a      660f1f440000   nop word [rax + rax]
;-- AD_hash:
0x00006a80      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fts-cycle.c:42
0x00006a84      31d2           xor edx, edx
0x00006a86      48f7f6         div rsi
0x00006a89      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/fts-cycle.c:45
0x00006a8c      c3             ret
0x00006a8d      0f1f00         nop dword [rax]
;-- dev_type_hash:
0x00006a90      488b07         mov rax, qword [rdi]                    ; ../coreutils-8.31/lib/fts.c:690
0x00006a93      31d2           xor edx, edx
0x00006a95      48f7f6         div rsi
0x00006a98      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/fts.c:694
0x00006a9b      c3             ret
0x00006a9c      0f1f4000       nop dword [rax]
;-- dev_type_compare:
0x00006aa0      488b06         mov rax, qword [rsi]                    ; ../coreutils-8.31/lib/fts.c:698
0x00006aa3      483907         cmp qword [rdi], rax
0x00006aa6      0f94c0         sete al
0x00006aa9      c3             ret                                     ; ../coreutils-8.31/lib/fts.c:702
0x00006aaa      660f1f440000   nop word [rax + rax]
;-- fts_compare_ino:
0x00006ab0      488b17         mov rdx, qword [rdi]                    ; ../coreutils-8.31/lib/fts.c:1226
0x00006ab3      488b06         mov rax, qword [rsi]
0x00006ab6      488b80800000.  mov rax, qword [rax + 0x80]             ; ../coreutils-8.31/lib/fts.c:1228
0x00006abd      483982800000.  cmp qword [rdx + 0x80], rax
0x00006ac4      720a           jb 0x6ad0
0x00006ac6      0f97c0         seta al
0x00006ac9      0fb6c0         movzx eax, al
0x00006acc      c3             ret
0x00006acd      0f1f00         nop dword [rax]
0x00006ad0      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00006ad5      c3             ret                                     ; ../coreutils-8.31/lib/fts.c:1229
0x00006ad6      662e0f1f8400.  nop word cs:[rax + rax]
;-- fts_stat:
0x00006ae0      4154           push r12                                ; ../coreutils-8.31/lib/fts.c:1800
0x00006ae2      55             push rbp
0x00006ae3      4889f5         mov rbp, rsi
0x00006ae6      53             push rbx
0x00006ae7      48837d5800     cmp qword [rbp + 0x58], 0               ; ../coreutils-8.31/lib/fts.c:1803
0x00006aec      488d5e78       lea rbx, [rsi + 0x78]                   ; ../coreutils-8.31/lib/fts.c:1801
0x00006af0      4989fc         mov r12, rdi                            ; ../coreutils-8.31/lib/fts.c:1800
0x00006af3      8b4748         mov eax, dword [rdi + 0x48]
0x00006af6      488b7630       mov rsi, qword [rsi + 0x30]
0x00006afa      7564           jne 0x6b60                              ; ../coreutils-8.31/lib/fts.c:1803
0x00006afc      a801           test al, 1
0x00006afe      7460           je 0x6b60
0x00006b00      4889da         mov rdx, rbx                            ; stat.h:451   return __xstat (_STAT_VER, __path, __statbuf);
0x00006b03      bf01000000     mov edi, 1
0x00006b08      e813b1ffff     call sym.imp.__xstat
0x00006b0d      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:1812
0x00006b0f      747a           je 0x6b8b
0x00006b11      e8aaaeffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fts.c:1813
0x00006b16      4989c4         mov r12, rax
0x00006b19      8b00           mov eax, dword [rax]
0x00006b1b      83f802         cmp eax, 2
0x00006b1e      0f840c010000   je 0x6c30
0x00006b24      488d7b08       lea rdi, [rbx + 8]                      ; string_fortified.h:71   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
0x00006b28      894540         mov dword [rbp + 0x40], eax             ; ../coreutils-8.31/lib/fts.c:1823
0x00006b2b      48c745780000.  mov qword [rbp + 0x78], 0               ; string_fortified.h:71   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
0x00006b33      48c783880000.  mov qword [rbx + 0x88], 0
0x00006b3e      31c0           xor eax, eax
0x00006b40      4883e7f8       and rdi, 0xfffffffffffffff8
0x00006b44      4829fb         sub rbx, rdi
0x00006b47      8d8b90000000   lea ecx, [rbx + 0x90]
0x00006b4d      c1e903         shr ecx, 3
0x00006b50      f348ab         rep stosq qword [rdi], rax
0x00006b53      b80a000000     mov eax, 0xa                            ; ../coreutils-8.31/lib/fts.c:1825
0x00006b58      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1846
0x00006b59      5d             pop rbp
0x00006b5a      415c           pop r12
0x00006b5c      c3             ret
0x00006b5d      0f1f00         nop dword [rax]
0x00006b60      a802           test al, 2                              ; ../coreutils-8.31/lib/fts.c:1811
0x00006b62      759c           jne 0x6b00
0x00006b64      84d2           test dl, dl
0x00006b66      7598           jne 0x6b00
0x00006b68      4889f2         mov rdx, rsi                            ; stat.h:473   return __fxstatat (_STAT_VER, __fd, __filename, __statbuf, __flag);
0x00006b6b      418b74242c     mov esi, dword [r12 + 0x2c]
0x00006b70      41b800010000   mov r8d, 0x100
0x00006b76      4889d9         mov rcx, rbx
0x00006b79      bf01000000     mov edi, 1
0x00006b7e      e89dafffff     call sym.imp.__fxstatat
0x00006b83      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:1821
0x00006b85      0f8595000000   jne 0x6c20
0x00006b8b      8b8590000000   mov eax, dword [rbp + 0x90]             ; ../coreutils-8.31/lib/fts.c:1828
0x00006b91      2500f00000     and eax, 0xf000
0x00006b96      3d00400000     cmp eax, 0x4000
0x00006b9b      7423           je 0x6bc0
0x00006b9d      3d00a00000     cmp eax, 0xa000                         ; ../coreutils-8.31/lib/fts.c:1841
0x00006ba2      0f84d0000000   je 0x6c78
0x00006ba8      3d00800000     cmp eax, 0x8000                         ; ../coreutils-8.31/lib/fts.c:1844
0x00006bad      0f94c0         sete al
0x00006bb0      0fb6c0         movzx eax, al
0x00006bb3      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1846
0x00006bb4      8d448003       lea eax, [rax + rax*4 + 3]              ; ../coreutils-8.31/lib/fts.c:1844
0x00006bb8      5d             pop rbp                                 ; ../coreutils-8.31/lib/fts.c:1846
0x00006bb9      415c           pop r12
0x00006bbb      c3             ret
0x00006bbc      0f1f4000       nop dword [rax]
0x00006bc0      488b85880000.  mov rax, qword [rbp + 0x88]             ; ../coreutils-8.31/lib/fts.c:1830
0x00006bc7      4883f801       cmp rax, 1                              ; ../coreutils-8.31/lib/fts.c:1833
0x00006bcb      0f867f000000   jbe 0x6c50
0x00006bd1      48837d5800     cmp qword [rbp + 0x58], 0               ; ../coreutils-8.31/lib/fts.c:1831
0x00006bd6      7e78           jle 0x6c50
0x00006bd8      41f644244820   test byte [r12 + 0x48], 0x20
0x00006bde      488d50fe       lea rdx, [rax - 2]
0x00006be2      480f44c2       cmove rax, rdx
0x00006be6      80bd08010000.  cmp byte [rbp + 0x108], 0x2e            ; ../coreutils-8.31/lib/fts.c:1834
0x00006bed      48894568       mov qword [rbp + 0x68], rax             ; ../coreutils-8.31/lib/fts.c:1830
0x00006bf1      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/fts.c:1839
0x00006bf6      0f855cffffff   jne 0x6b58                              ; ../coreutils-8.31/lib/fts.c:1834
0x00006bfc      80bd09010000.  cmp byte [rbp + 0x109], 0
0x00006c03      0f857f000000   jne 0x6c88
0x00006c09      48837d5801     cmp qword [rbp + 0x58], 1               ; ../coreutils-8.31/lib/fts.c:1839
0x00006c0e      19c0           sbb eax, eax
0x00006c10      83e0fc         and eax, 0xfffffffc                     ; 4294967292
0x00006c13      83c005         add eax, 5
0x00006c16      e93dffffff     jmp 0x6b58
0x00006c1b      0f1f440000     nop dword [rax + rax]
0x00006c20      e89badffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fts.c:1823
0x00006c25      8b00           mov eax, dword [rax]
0x00006c27      e9f8feffff     jmp 0x6b24
0x00006c2c      0f1f4000       nop dword [rax]
0x00006c30      488b7530       mov rsi, qword [rbp + 0x30]             ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x00006c34      4889da         mov rdx, rbx
0x00006c37      bf01000000     mov edi, 1
0x00006c3c      e86faeffff     call sym.imp.__lxstat
0x00006c41      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:1814
0x00006c43      741b           je 0x6c60
0x00006c45      418b0424       mov eax, dword [r12]
0x00006c49      e9d6feffff     jmp 0x6b24
0x00006c4e      6690           nop
0x00006c50      48c7c0ffffff.  mov rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/fts.c:1833
0x00006c57      eb8d           jmp 0x6be6
0x00006c59      0f1f80000000.  nop dword [rax]
0x00006c60      41c704240000.  mov dword [r12], 0                      ; ../coreutils-8.31/lib/fts.c:1815
0x00006c68      b80d000000     mov eax, 0xd                            ; ../coreutils-8.31/lib/fts.c:1816
0x00006c6d      e9e6feffff     jmp 0x6b58
0x00006c72      660f1f440000   nop word [rax + rax]
0x00006c78      b80c000000     mov eax, 0xc                            ; ../coreutils-8.31/lib/fts.c:1842
0x00006c7d      e9d6feffff     jmp 0x6b58
0x00006c82      660f1f440000   nop word [rax + rax]
0x00006c88      8b9508010000   mov edx, dword [rbp + 0x108]            ; ../coreutils-8.31/lib/fts.c:1834
0x00006c8e      81e200ffff00   and edx, 0xffff00
0x00006c94      81fa002e0000   cmp edx, 0x2e00
0x00006c9a      0f85b8feffff   jne 0x6b58
0x00006ca0      e964ffffff     jmp 0x6c09
0x00006ca5      90             nop
0x00006ca6      662e0f1f8400.  nop word cs:[rax + rax]
;-- fts_sort:
0x00006cb0      4155           push r13                                ; ../coreutils-8.31/lib/fts.c:1864
0x00006cb2      4154           push r12
0x00006cb4      4989d4         mov r12, rdx
0x00006cb7      55             push rbp
0x00006cb8      53             push rbx
0x00006cb9      4889fd         mov rbp, rdi
0x00006cbc      4889f3         mov rbx, rsi
0x00006cbf      4883ec08       sub rsp, 8
0x00006cc3      48395538       cmp qword [rbp + 0x38], rdx             ; ../coreutils-8.31/lib/fts.c:1888
0x00006cc7      4c8b6f40       mov r13, qword [rdi + 0x40]             ; ../coreutils-8.31/lib/fts.c:1875
0x00006ccb      488b7f10       mov rdi, qword [rdi + 0x10]
0x00006ccf      7334           jae 0x6d05                              ; ../coreutils-8.31/lib/fts.c:1888
0x00006cd1      488d7228       lea rsi, [rdx + 0x28]                   ; ../coreutils-8.31/lib/fts.c:1891
0x00006cd5      48b8ffffffff.  movabs rax, 0x1fffffffffffffff          ; ../coreutils-8.31/lib/fts.c:1892 ; 2305843009213693951
0x00006cdf      4839c6         cmp rsi, rax
0x00006ce2      48897538       mov qword [rbp + 0x38], rsi             ; ../coreutils-8.31/lib/fts.c:1891
0x00006ce6      0f8798000000   ja 0x6d84                               ; ../coreutils-8.31/lib/fts.c:1892
0x00006cec      48c1e603       shl rsi, 3                              ; ../coreutils-8.31/lib/fts.c:1893
0x00006cf0      e8bbafffff     call sym.imp.realloc
0x00006cf5      4885c0         test rax, rax
0x00006cf8      4889c7         mov rdi, rax
0x00006cfb      0f847f000000   je 0x6d80
0x00006d01      48894510       mov qword [rbp + 0x10], rax             ; ../coreutils-8.31/lib/fts.c:1900
0x00006d05      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/fts.c:1902
0x00006d08      7417           je 0x6d21
0x00006d0a      4889fa         mov rdx, rdi
0x00006d0d      0f1f00         nop dword [rax]
0x00006d10      4883c208       add rdx, 8                              ; ../coreutils-8.31/lib/fts.c:1903
0x00006d14      48895af8       mov qword [rdx - 8], rbx
0x00006d18      488b5b10       mov rbx, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/fts.c:1902
0x00006d1c      4885db         test rbx, rbx
0x00006d1f      75ef           jne 0x6d10
0x00006d21      4c89e9         mov rcx, r13                            ; ../coreutils-8.31/lib/fts.c:1904
0x00006d24      ba08000000     mov edx, 8
0x00006d29      4c89e6         mov rsi, r12
0x00006d2c      e8dfacffff     call sym.imp.qsort
0x00006d31      4c8b4510       mov r8, qword [rbp + 0x10]              ; ../coreutils-8.31/lib/fts.c:1905
0x00006d35      4c89e1         mov rcx, r12
0x00006d38      4883e901       sub rcx, 1
0x00006d3c      498b00         mov rax, qword [r8]
0x00006d3f      746f           je 0x6db0
0x00006d41      4889c7         mov rdi, rax
0x00006d44      4c89c2         mov rdx, r8
0x00006d47      eb0a           jmp 0x6d53
0x00006d49      0f1f80000000.  nop dword [rax]
0x00006d50      488b3a         mov rdi, qword [rdx]
0x00006d53      488b7208       mov rsi, qword [rdx + 8]                ; ../coreutils-8.31/lib/fts.c:1906
0x00006d57      4883c208       add rdx, 8                              ; ../coreutils-8.31/lib/fts.c:1905
0x00006d5b      4883e901       sub rcx, 1
0x00006d5f      48897710       mov qword [rdi + 0x10], rsi             ; ../coreutils-8.31/lib/fts.c:1906
0x00006d63      75eb           jne 0x6d50                              ; ../coreutils-8.31/lib/fts.c:1905
0x00006d65      4b8b54e0f8     mov rdx, qword [r8 + r12*8 - 8]
0x00006d6a      48c742100000.  mov qword [rdx + 0x10], 0               ; ../coreutils-8.31/lib/fts.c:1907
0x00006d72      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:1909
0x00006d76      5b             pop rbx
0x00006d77      5d             pop rbp
0x00006d78      415c           pop r12
0x00006d7a      415d           pop r13
0x00006d7c      c3             ret
0x00006d7d      0f1f00         nop dword [rax]
0x00006d80      488b7d10       mov rdi, qword [rbp + 0x10]
0x00006d84      e857b0ffff     call sym..plt.got                       ; ../coreutils-8.31/lib/fts.c:1895
0x00006d89      48c745100000.  mov qword [rbp + 0x10], 0               ; ../coreutils-8.31/lib/fts.c:1896
0x00006d91      48c745380000.  mov qword [rbp + 0x38], 0               ; ../coreutils-8.31/lib/fts.c:1897
0x00006d99      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:1909
0x00006d9d      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/fts.c:1898
0x00006da0      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1909
0x00006da1      5d             pop rbp
0x00006da2      415c           pop r12
0x00006da4      415d           pop r13
0x00006da6      c3             ret
0x00006da7      660f1f840000.  nop word [rax + rax]
0x00006db0      4889c2         mov rdx, rax                            ; ../coreutils-8.31/lib/fts.c:1905
0x00006db3      ebb5           jmp 0x6d6a
0x00006db5      90             nop
0x00006db6      662e0f1f8400.  nop word cs:[rax + rax]
;-- fts_alloc:
0x00006dc0      4155           push r13                                ; ../coreutils-8.31/lib/fts.c:1914
0x00006dc2      4154           push r12
0x00006dc4      4989fc         mov r12, rdi
0x00006dc7      55             push rbp
0x00006dc8      488dba100100.  lea rdi, [rdx + 0x110]                  ; ../coreutils-8.31/lib/fts.c:1922
0x00006dcf      53             push rbx                                ; ../coreutils-8.31/lib/fts.c:1914
0x00006dd0      4989f5         mov r13, rsi
0x00006dd3      4889d5         mov rbp, rdx
0x00006dd6      4883ec08       sub rsp, 8
0x00006dda      4883e7f8       and rdi, 0xfffffffffffffff8             ; ../coreutils-8.31/lib/fts.c:1922
0x00006dde      e85daeffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/fts.c:1923
0x00006de3      4885c0         test rax, rax
0x00006de6      4889c3         mov rbx, rax
0x00006de9      7451           je 0x6e3c
0x00006deb      488db8080100.  lea rdi, [rax + 0x108]                  ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00006df2      4889ea         mov rdx, rbp
0x00006df5      4c89ee         mov rsi, r13
0x00006df8      e8f3adffff     call sym.imp.memcpy
0x00006dfd      498b442420     mov rax, qword [r12 + 0x20]             ; ../coreutils-8.31/lib/fts.c:1932
0x00006e02      c6842b080100.  mov byte [rbx + rbp + 0x108], 0         ; ../coreutils-8.31/lib/fts.c:1928
0x00006e0a      48896b60       mov qword [rbx + 0x60], rbp             ; ../coreutils-8.31/lib/fts.c:1930
0x00006e0e      4c896350       mov qword [rbx + 0x50], r12             ; ../coreutils-8.31/lib/fts.c:1931
0x00006e12      c74340000000.  mov dword [rbx + 0x40], 0               ; ../coreutils-8.31/lib/fts.c:1933
0x00006e19      48c743180000.  mov qword [rbx + 0x18], 0               ; ../coreutils-8.31/lib/fts.c:1934
0x00006e21      48894338       mov qword [rbx + 0x38], rax             ; ../coreutils-8.31/lib/fts.c:1932
0x00006e25      c74372000003.  mov dword [rbx + 0x72], 0x30000         ; ../coreutils-8.31/lib/fts.c:1935 ; [0x30000:4]=-1
0x00006e2c      48c743200000.  mov qword [rbx + 0x20], 0               ; ../coreutils-8.31/lib/fts.c:1937
0x00006e34      48c743280000.  mov qword [rbx + 0x28], 0               ; ../coreutils-8.31/lib/fts.c:1938
0x00006e3c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:1940
0x00006e40      4889d8         mov rax, rbx
0x00006e43      5b             pop rbx
0x00006e44      5d             pop rbp
0x00006e45      415c           pop r12
0x00006e47      415d           pop r13
0x00006e49      c3             ret
0x00006e4a      660f1f440000   nop word [rax + rax]
;-- fts_lfree:
0x00006e50      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fts.c:1945
0x00006e53      743b           je 0x6e90
0x00006e55      55             push rbp
0x00006e56      53             push rbx
0x00006e57      4889fb         mov rbx, rdi
0x00006e5a      4883ec08       sub rsp, 8
0x00006e5e      6690           nop
0x00006e60      488b7b18       mov rdi, qword [rbx + 0x18]             ; ../coreutils-8.31/lib/fts.c:1951
0x00006e64      488b6b10       mov rbp, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/fts.c:1950
0x00006e68      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fts.c:1951
0x00006e6b      7405           je 0x6e72
0x00006e6d      e81eadffff     call sym.imp.closedir                   ; ../coreutils-8.31/lib/fts.c:1952
0x00006e72      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fts.c:1953
0x00006e75      4889eb         mov rbx, rbp
0x00006e78      e863afffff     call sym..plt.got
0x00006e7d      4885ed         test rbp, rbp                           ; ../coreutils-8.31/lib/fts.c:1949
0x00006e80      75de           jne 0x6e60
0x00006e82      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:1955
0x00006e86      5b             pop rbx
0x00006e87      5d             pop rbp
0x00006e88      c3             ret
0x00006e89      0f1f80000000.  nop dword [rax]
0x00006e90      f3c3           ret
0x00006e92      0f1f4000       nop dword [rax]
0x00006e96      662e0f1f8400.  nop word cs:[rax + rax]
;-- fd_ring_clear:
0x00006ea0      53             push rbx                                ; ../coreutils-8.31/lib/fts.c:277
0x00006ea1      4889fb         mov rbx, rdi
0x00006ea4      eb16           jmp 0x6ebc                              ; ../coreutils-8.31/lib/fts.c:278
0x00006ea6      662e0f1f8400.  nop word cs:[rax + rax]
0x00006eb0      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fts.c:280
0x00006eb3      e898350000     call sym.i_ring_pop
0x00006eb8      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:281
0x00006eba      7914           jns 0x6ed0
0x00006ebc      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fts.c:278
0x00006ebf      e83c350000     call sym.i_ring_empty
0x00006ec4      84c0           test al, al
0x00006ec6      74e8           je 0x6eb0
0x00006ec8      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:284
0x00006ec9      c3             ret
0x00006eca      660f1f440000   nop word [rax + rax]
0x00006ed0      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fts.c:282
0x00006ed2      e899acffff     call sym.imp.close
0x00006ed7      ebe3           jmp 0x6ebc
0x00006ed9      0f1f80000000.  nop dword [rax]
;-- filesystem_type:
0x00006ee0      4155           push r13                                ; ../coreutils-8.31/lib/fts.c:710
0x00006ee2      4154           push r12
0x00006ee4      55             push rbp
0x00006ee5      53             push rbx
0x00006ee6      4881ec980000.  sub rsp, 0x98
0x00006eed      488b5f50       mov rbx, qword [rdi + 0x50]             ; ../coreutils-8.31/lib/fts.c:711
0x00006ef1      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/fts.c:710
0x00006efa      488984248800.  mov qword [rsp + 0x88], rax
0x00006f02      31c0           xor eax, eax
0x00006f04      f6434902       test byte [rbx + 0x49], 2               ; ../coreutils-8.31/lib/fts.c:718
0x00006f08      7468           je 0x6f72
0x00006f0a      4c8b6350       mov r12, qword [rbx + 0x50]             ; ../coreutils-8.31/lib/fts.c:712
0x00006f0e      4889fd         mov rbp, rdi
0x00006f11      4189f5         mov r13d, esi
0x00006f14      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/fts.c:721
0x00006f17      7427           je 0x6f40
0x00006f19      488b4578       mov rax, qword [rbp + 0x78]             ; ../coreutils-8.31/lib/fts.c:728
0x00006f1d      4889e6         mov rsi, rsp                            ; ../coreutils-8.31/lib/fts.c:729
0x00006f20      4c89e7         mov rdi, r12
0x00006f23      48890424       mov qword [rsp], rax                    ; ../coreutils-8.31/lib/fts.c:728
0x00006f27      e8d4270000     call sym.hash_lookup                    ; ../coreutils-8.31/lib/fts.c:729
0x00006f2c      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:730
0x00006f2f      743c           je 0x6f6d
0x00006f31      488b5808       mov rbx, qword [rax + 8]                ; ../coreutils-8.31/lib/fts.c:731
0x00006f35      eb3d           jmp 0x6f74
0x00006f37      660f1f840000.  nop word [rax + rax]
0x00006f40      4c8b05798020.  mov r8, qword [reloc.free]              ; ../coreutils-8.31/lib/fts.c:723 ; [0x20efc0:8]=0
0x00006f47      488d0d52fbff.  lea rcx, sym.dev_type_compare           ; 0x6aa0 ; "H\x8b\x06H9\a\x0f\x94\xc0\xc3f\x0f\x1fD"
0x00006f4e      488d153bfbff.  lea rdx, sym.dev_type_hash              ; 0x6a90 ; "H\x8b\a1\xd2H\xf7\xf6H\x89\xd0\xc3\x0f\x1f@"
0x00006f55      31f6           xor esi, esi
0x00006f57      bf0d000000     mov edi, 0xd
0x00006f5c      e80f2a0000     call sym.hash_initialize
0x00006f61      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:725
0x00006f64      4989c4         mov r12, rax                            ; ../coreutils-8.31/lib/fts.c:723
0x00006f67      48894350       mov qword [rbx + 0x50], rax
0x00006f6b      75ac           jne 0x6f19                              ; ../coreutils-8.31/lib/fts.c:725
0x00006f6d      4585ed         test r13d, r13d                         ; ../coreutils-8.31/lib/fts.c:735
0x00006f70      792e           jns 0x6fa0
0x00006f72      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fts.c:719
0x00006f74      488b94248800.  mov rdx, qword [rsp + 0x88]             ; ../coreutils-8.31/lib/fts.c:755
0x00006f7c      644833142528.  xor rdx, qword fs:[0x28]
0x00006f85      4889d8         mov rax, rbx
0x00006f88      7578           jne 0x7002
0x00006f8a      4881c4980000.  add rsp, 0x98
0x00006f91      5b             pop rbx
0x00006f92      5d             pop rbp
0x00006f93      415c           pop r12
0x00006f95      415d           pop r13
0x00006f97      c3             ret
0x00006f98      0f1f84000000.  nop dword [rax + rax]
0x00006fa0      488d742410     lea rsi, [rsp + 0x10]                   ; ../coreutils-8.31/lib/fts.c:735
0x00006fa5      4489ef         mov edi, r13d
0x00006fa8      e8a3adffff     call sym.imp.fstatfs
0x00006fad      85c0           test eax, eax
0x00006faf      75c1           jne 0x6f72
0x00006fb1      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/fts.c:738
0x00006fb4      488b5c2410     mov rbx, qword [rsp + 0x10]
0x00006fb9      74b9           je 0x6f74
0x00006fbb      bf10000000     mov edi, 0x10                           ; ../coreutils-8.31/lib/fts.c:740
0x00006fc0      e87bacffff     call sym.imp.malloc
0x00006fc5      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:741
0x00006fc8      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/fts.c:740
0x00006fcb      74a7           je 0x6f74                               ; ../coreutils-8.31/lib/fts.c:741
0x00006fcd      488b4578       mov rax, qword [rbp + 0x78]             ; ../coreutils-8.31/lib/fts.c:743
0x00006fd1      49895d08       mov qword [r13 + 8], rbx                ; ../coreutils-8.31/lib/fts.c:744
0x00006fd5      4c89ee         mov rsi, r13                            ; ../coreutils-8.31/lib/fts.c:746
0x00006fd8      4c89e7         mov rdi, r12
0x00006fdb      49894500       mov qword [r13], rax                    ; ../coreutils-8.31/lib/fts.c:743
0x00006fdf      e88c310000     call sym.hash_insert                    ; ../coreutils-8.31/lib/fts.c:746
0x00006fe4      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:747
0x00006fe7      740f           je 0x6ff8
0x00006fe9      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/fts.c:748
0x00006fec      7519           jne 0x7007
0x00006fee      488b5c2410     mov rbx, qword [rsp + 0x10]
0x00006ff3      e97cffffff     jmp 0x6f74                              ; ../coreutils-8.31/lib/fts.c:754
0x00006ff8      4c89ef         mov rdi, r13                            ; ../coreutils-8.31/lib/fts.c:750
0x00006ffb      e8e0adffff     call sym..plt.got
0x00007000      ebec           jmp 0x6fee
0x00007002      e8c9aaffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/fts.c:755
0x00007007      e8a4a9ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/fts.c:748
0x0000700c      0f1f4000       nop dword [rax]
;-- leaf_optimization:
0x00007010      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/fts.c:793
0x00007014      e8c7feffff     call sym.filesystem_type                ; ../coreutils-8.31/lib/fts.c:794
0x00007019      483d73496552   cmp rax, 0x52654973
0x0000701f      744f           je 0x7070
0x00007021      7e2d           jle 0x7050
0x00007023      483d42534658   cmp rax, 0x58465342
0x00007029      7445           je 0x7070
0x0000702b      ba424d53ff     mov edx, 0xff534d42
0x00007030      4839d0         cmp rax, rdx
0x00007033      7430           je 0x7065
0x00007035      483d4f414653   cmp rax, 0x5346414f
0x0000703b      7428           je 0x7065
0x0000703d      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/fts.c:825
0x00007042      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:827
0x00007046      c3             ret
0x00007047      660f1f840000.  nop word [rax + rax]
0x00007050      483d69690000   cmp rax, 0x6969                         ; ../coreutils-8.31/lib/fts.c:794
0x00007056      740d           je 0x7065
0x00007058      483da09f0000   cmp rax, 0x9fa0
0x0000705e      7405           je 0x7065
0x00007060      4885c0         test rax, rax
0x00007063      75d8           jne 0x703d
0x00007065      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fts.c:822
0x00007067      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:827
0x0000706b      c3             ret
0x0000706c      0f1f4000       nop dword [rax]
0x00007070      b802000000     mov eax, 2                              ; ../coreutils-8.31/lib/fts.c:800
0x00007075      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:827
0x00007079      c3             ret
0x0000707a      660f1f440000   nop word [rax + rax]
;-- cwd_advance_fd:
0x00007080      55             push rbp                                ; ../coreutils-8.31/lib/fts.c:306
0x00007081      53             push rbx
0x00007082      89f5           mov ebp, esi
0x00007084      4889fb         mov rbx, rdi
0x00007087      4883ec08       sub rsp, 8
0x0000708b      8b772c         mov esi, dword [rdi + 0x2c]             ; ../coreutils-8.31/lib/fts.c:307
0x0000708e      39ee           cmp esi, ebp                            ; ../coreutils-8.31/lib/fts.c:308
0x00007090      7505           jne 0x7097
0x00007092      83fe9c         cmp esi, 0xffffff9c
0x00007095      754a           jne 0x70e1
0x00007097      84d2           test dl, dl                             ; ../coreutils-8.31/lib/fts.c:310
0x00007099      7515           jne 0x70b0
0x0000709b      f6434804       test byte [rbx + 0x48], 4               ; ../coreutils-8.31/lib/fts.c:321
0x0000709f      7504           jne 0x70a5
0x000070a1      85f6           test esi, esi
0x000070a3      792b           jns 0x70d0
0x000070a5      896b2c         mov dword [rbx + 0x2c], ebp             ; ../coreutils-8.31/lib/fts.c:325
0x000070a8      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:326
0x000070ac      5b             pop rbx
0x000070ad      5d             pop rbp
0x000070ae      c3             ret
0x000070af      90             nop
0x000070b0      488d7b60       lea rdi, [rbx + 0x60]                   ; ../coreutils-8.31/lib/fts.c:314
0x000070b4      e857330000     call sym.i_ring_push
0x000070b9      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:316
0x000070bb      78e8           js 0x70a5
0x000070bd      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fts.c:317
0x000070bf      e8acaaffff     call sym.imp.close
0x000070c4      896b2c         mov dword [rbx + 0x2c], ebp             ; ../coreutils-8.31/lib/fts.c:325
0x000070c7      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:326
0x000070cb      5b             pop rbx
0x000070cc      5d             pop rbp
0x000070cd      c3             ret
0x000070ce      6690           nop
0x000070d0      89f7           mov edi, esi                            ; ../coreutils-8.31/lib/fts.c:322
0x000070d2      e899aaffff     call sym.imp.close
0x000070d7      896b2c         mov dword [rbx + 0x2c], ebp             ; ../coreutils-8.31/lib/fts.c:325
0x000070da      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:326
0x000070de      5b             pop rbx
0x000070df      5d             pop rbp
0x000070e0      c3             ret
0x000070e1      e8caa8ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/fts.c:308
0x000070e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- restore_initial_cwd:
0x000070f0      55             push rbp                                ; ../coreutils-8.31/lib/fts.c:334
0x000070f1      53             push rbx
0x000070f2      4889fb         mov rbx, rdi
0x000070f5      4883ec08       sub rsp, 8
0x000070f9      8b5748         mov edx, dword [rdi + 0x48]             ; ../coreutils-8.31/lib/fts.c:335
0x000070fc      89d5           mov ebp, edx
0x000070fe      83e504         and ebp, 4
0x00007101      7545           jne 0x7148
0x00007103      80e602         and dh, 2
0x00007106      7528           jne 0x7130
0x00007108      8b7f28         mov edi, dword [rdi + 0x28]
0x0000710b      31ed           xor ebp, ebp
0x0000710d      e88eabffff     call sym.imp.fchdir
0x00007112      85c0           test eax, eax
0x00007114      400f95c5       setne bpl
0x00007118      488d7b60       lea rdi, [rbx + 0x60]                   ; ../coreutils-8.31/lib/fts.c:336
0x0000711c      e87ffdffff     call sym.fd_ring_clear
0x00007121      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:338
0x00007125      89e8           mov eax, ebp
0x00007127      5b             pop rbx
0x00007128      5d             pop rbp
0x00007129      c3             ret
0x0000712a      660f1f440000   nop word [rax + rax]
0x00007130      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/fts.c:335
0x00007135      be9cffffff     mov esi, 0xffffff9c                     ; 4294967196
0x0000713a      e841ffffff     call sym.cwd_advance_fd
0x0000713f      ebd7           jmp 0x7118
0x00007141      0f1f80000000.  nop dword [rax]
0x00007148      31ed           xor ebp, ebp
0x0000714a      ebcc           jmp 0x7118
0x0000714c      0f1f4000       nop dword [rax]
;-- fts_palloc.isra.2:
0x00007150      53             push rbx                                ; ../coreutils-8.31/lib/fts.c:1966
0x00007151      488b0e         mov rcx, qword [rsi]                    ; ../coreutils-8.31/lib/fts.c:1969
0x00007154      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/fts.c:1966
0x00007157      488b3f         mov rdi, qword [rdi]
0x0000715a      488d84110001.  lea rax, [rcx + rdx + 0x100]            ; ../coreutils-8.31/lib/fts.c:1969
0x00007162      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/fts.c:1974
0x00007165      7721           ja 0x7188
0x00007167      488906         mov qword [rsi], rax                    ; ../coreutils-8.31/lib/fts.c:1980
0x0000716a      4889c6         mov rsi, rax                            ; ../coreutils-8.31/lib/fts.c:1981
0x0000716d      e83eabffff     call sym.imp.realloc
0x00007172      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:1982
0x00007175      7431           je 0x71a8
0x00007177      488903         mov qword [rbx], rax                    ; ../coreutils-8.31/lib/fts.c:1987
0x0000717a      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/fts.c:1988
0x0000717f      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1989
0x00007180      c3             ret
0x00007181      0f1f80000000.  nop dword [rax]
0x00007188      e853acffff     call sym..plt.got                       ; ../coreutils-8.31/lib/fts.c:1975
0x0000718d      48c703000000.  mov qword [rbx], 0                      ; ../coreutils-8.31/lib/fts.c:1976
0x00007194      e827a8ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fts.c:1977
0x00007199      c70024000000   mov dword [rax], 0x24                   ; '$'
                                                                       ; [0x24:4]=0
0x0000719f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fts.c:1978
0x000071a1      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1989
0x000071a2      c3             ret
0x000071a3      0f1f440000     nop dword [rax + rax]
0x000071a8      488b3b         mov rdi, qword [rbx]                    ; ../coreutils-8.31/lib/fts.c:1983
0x000071ab      e830acffff     call sym..plt.got
0x000071b0      48c703000000.  mov qword [rbx], 0                      ; ../coreutils-8.31/lib/fts.c:1984
0x000071b7      31c0           xor eax, eax
0x000071b9      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1989
0x000071ba      c3             ret
0x000071bb      0f1f440000     nop dword [rax + rax]
;-- setup_dir.isra.4:
0x000071c0      81e702010000   and edi, 0x102                          ; ../coreutils-8.31/lib/fts-cycle.c:50
0x000071c6      53             push rbx
0x000071c7      4889f3         mov rbx, rsi
0x000071ca      7434           je 0x7200                               ; ../coreutils-8.31/lib/fts-cycle.c:52
0x000071cc      4c8b05ed7d20.  mov r8, qword [reloc.free]              ; ../coreutils-8.31/lib/fts-cycle.c:55 ; [0x20efc0:8]=0
0x000071d3      488d0d86f8ff.  lea rcx, sym.AD_compare                 ; 0x6a60 ; "1\xc0H\x8bV\bH9W\bt\x04\xf3\xc3f\x90H\x8b\x06H9\a\x0f\x94\xc0\xc3f\x0f\x1fD"
0x000071da      488d159ff8ff.  lea rdx, sym.AD_hash                    ; 0x6a80 ; "H\x8bG\b1\xd2H\xf7\xf6H\x89\xd0\xc3\x0f\x1f"
0x000071e1      31f6           xor esi, esi
0x000071e3      bf1f000000     mov edi, 0x1f
0x000071e8      e883270000     call sym.hash_initialize
0x000071ed      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts-cycle.c:57
0x000071f0      488903         mov qword [rbx], rax                    ; ../coreutils-8.31/lib/fts-cycle.c:55
0x000071f3      0f95c0         setne al                                ; ../coreutils-8.31/lib/fts-cycle.c:57
0x000071f6      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts-cycle.c:69
0x000071f7      c3             ret
0x000071f8      0f1f84000000.  nop dword [rax + rax]
0x00007200      bf20000000     mov edi, 0x20                           ; ../coreutils-8.31/lib/fts-cycle.c:62 ; "@"
0x00007205      e836aaffff     call sym.imp.malloc
0x0000720a      4889c7         mov rdi, rax
0x0000720d      488903         mov qword [rbx], rax
0x00007210      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fts-cycle.c:64
0x00007212      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fts-cycle.c:63
0x00007215      74df           je 0x71f6
0x00007217      e8741d0000     call sym.cycle_check_init               ; ../coreutils-8.31/lib/fts-cycle.c:65
0x0000721c      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/fts-cycle.c:68
0x00007221      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts-cycle.c:69
0x00007222      c3             ret
0x00007223      0f1f00         nop dword [rax]
0x00007226      662e0f1f8400.  nop word cs:[rax + rax]
;-- diropen.isra.6:
0x00007230      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/fts.c:346
0x00007233      89f2           mov edx, esi                            ; ../coreutils-8.31/lib/fts.c:349
0x00007235      c1e20d         shl edx, 0xd
0x00007238      81e200000200   and edx, 0x20000
0x0000723e      81ca00090900   or edx, 0x90900                         ; ../coreutils-8.31/lib/fts.c:348
0x00007244      81e600020000   and esi, 0x200                          ; ../coreutils-8.31/lib/fts.c:353
0x0000724a      7514           jne 0x7260
0x0000724c      4889c7         mov rdi, rax
0x0000724f      89d6           mov esi, edx
0x00007251      31c0           xor eax, eax
0x00007253      e9d81d0000     jmp sym.open_safer
0x00007258      0f1f84000000.  nop dword [rax + rax]
0x00007260      4889c6         mov rsi, rax
0x00007263      31c0           xor eax, eax
0x00007265      e966320000     jmp sym.openat_safer
0x0000726a      660f1f440000   nop word [rax + rax]
;-- fts_safe_changedir:
0x00007270      4157           push r15                                ; ../coreutils-8.31/lib/fts.c:2044
0x00007272      4156           push r14
0x00007274      4989f6         mov r14, rsi
0x00007277      4155           push r13
0x00007279      4154           push r12
0x0000727b      4989fd         mov r13, rdi
0x0000727e      55             push rbp
0x0000727f      53             push rbx
0x00007280      4189d4         mov r12d, edx
0x00007283      4889cd         mov rbp, rcx
0x00007286      4881ecb80000.  sub rsp, 0xb8
0x0000728d      8b5f48         mov ebx, dword [rdi + 0x48]
0x00007290      64488b042528.  mov rax, qword fs:[0x28]
0x00007299      48898424a800.  mov qword [rsp + 0xa8], rax
0x000072a1      31c0           xor eax, eax
0x000072a3      4189d9         mov r9d, ebx
0x000072a6      4183e104       and r9d, 4
0x000072aa      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/fts.c:2046
0x000072ad      0f84ad000000   je 0x7360
0x000072b3      488d150f5200.  lea rdx, [0x0000c4c9]                   ; ".."
0x000072ba      b903000000     mov ecx, 3
0x000072bf      4889ee         mov rsi, rbp
0x000072c2      4889d7         mov rdi, rdx
0x000072c5      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000072c7      0f97c0         seta al
0x000072ca      1c00           sbb al, 0
0x000072cc      84c0           test al, al
0x000072ce      0f858c000000   jne 0x7360
0x000072d4      4585c9         test r9d, r9d                           ; ../coreutils-8.31/lib/fts.c:2053
0x000072d7      0f8588000000   jne 0x7365
0x000072dd      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fts.c:2060
0x000072e0      0f89e4010000   jns 0x74ca
0x000072e6      f6c702         test bh, 2
0x000072e9      0f8541010000   jne 0x7430
0x000072ef      c644240f01     mov byte [rsp + 0xf], 1
0x000072f4      418b7d2c       mov edi, dword [r13 + 0x2c]             ; ../coreutils-8.31/lib/fts.c:2082
0x000072f8      4889ea         mov rdx, rbp
0x000072fb      89de           mov esi, ebx
0x000072fd      e82effffff     call sym.diropen.isra.6
0x00007302      85c0           test eax, eax
0x00007304      4189c7         mov r15d, eax
0x00007307      0f88ae010000   js 0x74bb
0x0000730d      418b5d48       mov ebx, dword [r13 + 0x48]
0x00007311      f6c302         test bl, 2                              ; ../coreutils-8.31/lib/fts.c:2092
0x00007314      0f84a0000000   je 0x73ba
0x0000731a      660f1f440000   nop word [rax + rax]
0x00007320      488d542410     lea rdx, [rsp + 0x10]                   ; stat.h:465   return __fxstat (_STAT_VER, __fd, __statbuf);
0x00007325      4489fe         mov esi, r15d
0x00007328      bf01000000     mov edi, 1
0x0000732d      e83ea9ffff     call sym.imp.__fxstat
0x00007332      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:2096
0x00007334      0f84c6000000   je 0x7400
0x0000733a      bbffffffff     mov ebx, 0xffffffff                     ; ../coreutils-8.31/lib/fts.c:2099 ; -1
0x0000733f      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fts.c:2118
0x00007342      7931           jns 0x7375
0x00007344      e877a6ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fts.c:2120
0x00007349      448b20         mov r12d, dword [rax]
0x0000734c      4889c5         mov rbp, rax
0x0000734f      4489ff         mov edi, r15d                           ; ../coreutils-8.31/lib/fts.c:2121
0x00007352      e819a8ffff     call sym.imp.close
0x00007357      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fts.c:2122
0x0000735b      eb18           jmp 0x7375
0x0000735d      0f1f00         nop dword [rax]
0x00007360      4585c9         test r9d, r9d                           ; ../coreutils-8.31/lib/fts.c:2053
0x00007363      743b           je 0x73a0
0x00007365      80e702         and bh, 2                               ; ../coreutils-8.31/lib/fts.c:2055
0x00007368      7409           je 0x7373
0x0000736a      4585e4         test r12d, r12d
0x0000736d      0f89ad000000   jns 0x7420
0x00007373      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fts.c:2057
0x00007375      488b8c24a800.  mov rcx, qword [rsp + 0xa8]
0x0000737d      6448330c2528.  xor rcx, qword fs:[0x28]
0x00007386      89d8           mov eax, ebx
0x00007388      0f8537010000   jne 0x74c5
0x0000738e      4881c4b80000.  add rsp, 0xb8
0x00007395      5b             pop rbx
0x00007396      5d             pop rbp
0x00007397      415c           pop r12
0x00007399      415d           pop r13                                 ; ../coreutils-8.31/lib/fts-cycle.c:2014
0x0000739b      415e           pop r14
0x0000739d      415f           pop r15
0x0000739f      c3             ret
0x000073a0      4585e4         test r12d, r12d
0x000073a3      0f8837010000   js 0x74e0
0x000073a9      f6c302         test bl, 2
0x000073ac      4589e7         mov r15d, r12d
0x000073af      c644240f00     mov byte [rsp + 0xf], 0
0x000073b4      0f8566ffffff   jne 0x7320
0x000073ba      4885ed         test rbp, rbp
0x000073bd      7421           je 0x73e0
0x000073bf      488d15035100.  lea rdx, [0x0000c4c9]                   ; ".."
0x000073c6      b903000000     mov ecx, 3
0x000073cb      4889ee         mov rsi, rbp
0x000073ce      4889d7         mov rdi, rdx
0x000073d1      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000073d3      0f97c0         seta al                                 ; ../coreutils-8.31/lib/fts-cycle.c:2010
0x000073d6      1c00           sbb al, 0
0x000073d8      84c0           test al, al
0x000073da      0f8440ffffff   je 0x7320
0x000073e0      80e702         and bh, 2
0x000073e3      0f858f000000   jne 0x7478
0x000073e9      4489ff         mov edi, r15d                           ; ../coreutils-8.31/lib/fts-cycle.c:1971
0x000073ec      e8afa8ffff     call sym.imp.fchdir
0x000073f1      89c3           mov ebx, eax
0x000073f3      e947ffffff     jmp 0x733f
0x000073f8      0f1f84000000.  nop dword [rax + rax]
0x00007400      488b442410     mov rax, qword [rsp + 0x10]
0x00007405      49394678       cmp qword [r14 + 0x78], rax
0x00007409      0f8491000000   je 0x74a0                               ; ../coreutils-8.31/lib/fts-cycle.c:1977
0x0000740f      e8aca5ffff     call sym.imp.__errno_location
0x00007414      c70002000000   mov dword [rax], 2
0x0000741a      e91bffffff     jmp 0x733a
0x0000741f      90             nop
0x00007420      4489e7         mov edi, r12d
0x00007423      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fts-cycle.c:1996
0x00007425      e846a7ffff     call sym.imp.close
0x0000742a      e946ffffff     jmp 0x7375
0x0000742f      90             nop
0x00007430      4d8d7d60       lea r15, [r13 + 0x60]
0x00007434      4c89ff         mov rdi, r15
0x00007437      e8c42f0000     call sym.i_ring_empty
0x0000743c      84c0           test al, al
0x0000743e      8844240f       mov byte [rsp + 0xf], al
0x00007442      0f85acfeffff   jne 0x72f4
0x00007448      4c89ff         mov rdi, r15
0x0000744b      e800300000     call sym.i_ring_pop
0x00007450      85c0           test eax, eax
0x00007452      4189c7         mov r15d, eax
0x00007455      418b5d48       mov ebx, dword [r13 + 0x48]
0x00007459      0f8890feffff   js 0x72ef                               ; ../coreutils-8.31/lib/fts-cycle.c:2006
0x0000745f      f6c302         test bl, 2
0x00007462      4189c4         mov r12d, eax
0x00007465      c644240f01     mov byte [rsp + 0xf], 1
0x0000746a      0f8470ffffff   je 0x73e0
0x00007470      e9abfeffff     jmp 0x7320
0x00007475      0f1f00         nop dword [rax]
0x00007478      440fb674240f   movzx r14d, byte [rsp + 0xf]
0x0000747e      4489fe         mov esi, r15d                           ; ../coreutils-8.31/lib/fts-cycle.c:2029
0x00007481      4c89ef         mov rdi, r13
0x00007484      31db           xor ebx, ebx
0x00007486      4183f601       xor r14d, 1
0x0000748a      410fb6d6       movzx edx, r14b
0x0000748e      e8edfbffff     call sym.cwd_advance_fd                 ; ../coreutils-8.31/lib/fts-cycle.c:1996
0x00007493      e9ddfeffff     jmp 0x7375
0x00007498      0f1f84000000.  nop dword [rax + rax]
0x000074a0      488b442418     mov rax, qword [rsp + 0x18]
0x000074a5      493986800000.  cmp qword [r14 + 0x80], rax
0x000074ac      0f855dffffff   jne 0x740f
0x000074b2      418b5d48       mov ebx, dword [r13 + 0x48]
0x000074b6      e925ffffff     jmp 0x73e0                              ; ../coreutils-8.31/lib/fts-cycle.c:-22
0x000074bb      bbffffffff     mov ebx, 0xffffffff                     ; ../coreutils-8.31/lib/fts-cycle.c:-17 ; -1
0x000074c0      e9b0feffff     jmp 0x7375
0x000074c5      e806a6ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/fts-cycle.c:-14
0x000074ca      f6c302         test bl, 2
0x000074cd      4589e7         mov r15d, r12d
0x000074d0      c644240f01     mov byte [rsp + 0xf], 1
0x000074d5      0f84ebfeffff   je 0x73c6                               ; ../coreutils-8.31/lib/fts-cycle.c:-4
0x000074db      e940feffff     jmp 0x7320
0x000074e0      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/fts-cycle.c:-11
0x000074e5      e90afeffff     jmp 0x72f4
0x000074ea      660f1f440000   nop word [rax + rax]
;-- enter_dir.isra.10:
0x000074f0      81e702010000   and edi, 0x102
0x000074f6      4154           push r12
0x000074f8      4989f4         mov r12, rsi
0x000074fb      55             push rbp
0x000074fc      53             push rbx                                ; ../coreutils-8.31/lib/fts-cycle.c:0
0x000074fd      4889d3         mov rbx, rdx
0x00007500      746e           je 0x7570
0x00007502      bf18000000     mov edi, 0x18
0x00007507      e834a7ffff     call sym.imp.malloc
0x0000750c      4885c0         test rax, rax
0x0000750f      4889c5         mov rbp, rax
0x00007512      0f8480000000   je 0x7598
0x00007518      488b4378       mov rax, qword [rbx + 0x78]
0x0000751c      498b3c24       mov rdi, qword [r12]
0x00007520      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fts-cycle.c:24
0x00007523      48895d10       mov qword [rbp + 0x10], rbx
0x00007527      48894500       mov qword [rbp], rax
0x0000752b      488b83800000.  mov rax, qword [rbx + 0x80]
0x00007532      48894508       mov qword [rbp + 8], rax
0x00007536      e8352c0000     call sym.hash_insert
0x0000753b      4839c5         cmp rbp, rax
0x0000753e      4989c4         mov r12, rax
0x00007541      741e           je 0x7561
0x00007543      4889ef         mov rdi, rbp
0x00007546      e895a8ffff     call sym..plt.got
0x0000754b      4d85e4         test r12, r12
0x0000754e      7448           je 0x7598
0x00007550      498b442410     mov rax, qword [r12 + 0x10]
0x00007555      b902000000     mov ecx, 2
0x0000755a      66894b70       mov word [rbx + 0x70], cx
0x0000755e      488903         mov qword [rbx], rax
0x00007561      5b             pop rbx
0x00007562      b801000000     mov eax, 1
0x00007567      5d             pop rbp
0x00007568      415c           pop r12
0x0000756a      c3             ret
0x0000756b      0f1f440000     nop dword [rax + rax]
0x00007570      498b3c24       mov rdi, qword [r12]                    ; ../coreutils-8.31/lib/fts-cycle.c:32
0x00007574      488d7278       lea rsi, [rdx + 0x78]
0x00007578      e8231a0000     call sym.cycle_check                    ; ../coreutils-8.31/lib/fts-cycle.c:45
0x0000757d      84c0           test al, al
0x0000757f      74e0           je 0x7561
0x00007581      ba02000000     mov edx, 2
0x00007586      48891b         mov qword [rbx], rbx
0x00007589      66895370       mov word [rbx + 0x70], dx
0x0000758d      5b             pop rbx
0x0000758e      5d             pop rbp
0x0000758f      415c           pop r12
0x00007591      c3             ret
0x00007592      660f1f440000   nop word [rax + rax]
0x00007598      5b             pop rbx
0x00007599      31c0           xor eax, eax
0x0000759b      5d             pop rbp
0x0000759c      415c           pop r12
0x0000759e      c3             ret                                     ; ../coreutils-8.31/lib/fts-cycle.c:50
0x0000759f      90             nop
;-- leave_dir.isra.12:
0x000075a0      4883ec28       sub rsp, 0x28
0x000075a4      4889f1         mov rcx, rsi
0x000075a7      64488b042528.  mov rax, qword fs:[0x28]
0x000075b0      4889442418     mov qword [rsp + 0x18], rax
0x000075b5      31c0           xor eax, eax
0x000075b7      81e702010000   and edi, 0x102
0x000075bd      7541           jne 0x7600                              ; ../coreutils-8.31/lib/fts-cycle.c:38
0x000075bf      488b4208       mov rax, qword [rdx + 8]
0x000075c3      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts-cycle.c:36
0x000075c6      741d           je 0x75e5
0x000075c8      4883785800     cmp qword [rax + 0x58], 0
0x000075cd      7816           js 0x75e5
0x000075cf      488b0e         mov rcx, qword [rsi]
0x000075d2      4883791000     cmp qword [rcx + 0x10], 0
0x000075d7      747a           je 0x7653
0x000075d9      488bb2800000.  mov rsi, qword [rdx + 0x80]
0x000075e0      483931         cmp qword [rcx], rsi
0x000075e3      744b           je 0x7630
0x000075e5      488b442418     mov rax, qword [rsp + 0x18]
0x000075ea      644833042528.  xor rax, qword fs:[0x28]
0x000075f3      7559           jne 0x764e
0x000075f5      4883c428       add rsp, 0x28
0x000075f9      c3             ret
0x000075fa      660f1f440000   nop word [rax + rax]
0x00007600      488b4278       mov rax, qword [rdx + 0x78]
0x00007604      488b39         mov rdi, qword [rcx]
0x00007607      4889e6         mov rsi, rsp                            ; ../coreutils-8.31/lib/fts-cycle.c:50
0x0000760a      48890424       mov qword [rsp], rax
0x0000760e      488b82800000.  mov rax, qword [rdx + 0x80]
0x00007615      4889442408     mov qword [rsp + 8], rax
0x0000761a      e8b12b0000     call sym.hash_delete
0x0000761f      4885c0         test rax, rax
0x00007622      742f           je 0x7653
0x00007624      4889c7         mov rdi, rax
0x00007627      e8b4a7ffff     call sym..plt.got
0x0000762c      ebb7           jmp 0x75e5
0x0000762e      6690           nop
0x00007630      488b7278       mov rsi, qword [rdx + 0x78]
0x00007634      48397108       cmp qword [rcx + 8], rsi
0x00007638      75ab           jne 0x75e5
0x0000763a      488b5078       mov rdx, qword [rax + 0x78]
0x0000763e      488b80800000.  mov rax, qword [rax + 0x80]
0x00007645      48895108       mov qword [rcx + 8], rdx                ; ../coreutils-8.31/lib/fts.c:1225
0x00007649      488901         mov qword [rcx], rax
0x0000764c      eb97           jmp 0x75e5
0x0000764e      e87da4ffff     call sym.imp.__stack_chk_fail
0x00007653      e858a3ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/fts.c:1228
0x00007658      0f1f84000000.  nop dword [rax + rax]
;-- fts_build:
0x00007660      4157           push r15
0x00007662      4156           push r14
0x00007664      4989ff         mov r15, rdi
0x00007667      4155           push r13                                ; ../coreutils-8.31/lib/fts.c:1282
0x00007669      4154           push r12
0x0000766b      55             push rbp
0x0000766c      53             push rbx
0x0000766d      4883ec78       sub rsp, 0x78
0x00007671      488b2f         mov rbp, qword [rdi]
0x00007674      64488b042528.  mov rax, qword fs:[0x28]
0x0000767d      4889442468     mov qword [rsp + 0x68], rax
0x00007682      31c0           xor eax, eax
0x00007684      89742458       mov dword [rsp + 0x58], esi             ; ../coreutils-8.31/lib/fts.c:1343
0x00007688      488b4518       mov rax, qword [rbp + 0x18]
0x0000768c      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:1349
0x0000768f      4889442450     mov qword [rsp + 0x50], rax
0x00007694      0f8436040000   je 0x7ad0
0x0000769a      4889c7         mov rdi, rax
0x0000769d      e82ea5ffff     call sym.imp.dirfd
0x000076a2      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:1344
0x000076a4      89442464       mov dword [rsp + 0x64], eax
0x000076a8      0f8852050000   js 0x7c00
0x000076ae      49837f4000     cmp qword [r15 + 0x40], 0
0x000076b3      0f84cf070000   je 0x7e88
0x000076b9      48c7442438ff.  mov qword [rsp + 0x38], 0xffffffffffffffff
0x000076c2      418b7f48       mov edi, dword [r15 + 0x48]
0x000076c6      c644245f01     mov byte [rsp + 0x5f], 1
0x000076cb      488b4d48       mov rcx, qword [rbp + 0x48]
0x000076cf      488b5538       mov rdx, qword [rbp + 0x38]             ; ../coreutils-8.31/lib/fts.c:1359
0x000076d3      48c744244000.  mov qword [rsp + 0x40], 0
0x000076dc      807c0aff2f     cmp byte [rdx + rcx - 1], 0x2f
0x000076e1      488d41ff       lea rax, [rcx - 1]                      ; ../coreutils-8.31/lib/fts.c:1351
0x000076e5      480f45c1       cmovne rax, rcx
0x000076e9      83e704         and edi, 4
0x000076ec      4889442448     mov qword [rsp + 0x48], rax
0x000076f1      7410           je 0x7703
0x000076f3      49034720       add rax, qword [r15 + 0x20]
0x000076f7      488d5801       lea rbx, [rax + 1]
0x000076fb      c6002f         mov byte [rax], 0x2f                    ; ../coreutils-8.31/lib/fts.c:1360 ; '/'
                                                                       ; [0x2f:1]=0
0x000076fe      48895c2440     mov qword [rsp + 0x40], rbx
0x00007703      488b442448     mov rax, qword [rsp + 0x48]
0x00007708      498b5f30       mov rbx, qword [r15 + 0x30]
0x0000770c      c644245e00     mov byte [rsp + 0x5e], 0
0x00007711      c644245d00     mov byte [rsp + 0x5d], 0
0x00007716      48c744240800.  mov qword [rsp + 8], 0                  ; ../coreutils-8.31/lib/fts.c:1298
0x0000771f      48c744241000.  mov qword [rsp + 0x10], 0
0x00007728      4883c001       add rax, 1
0x0000772c      48896c2420     mov qword [rsp + 0x20], rbp             ; ../coreutils-8.31/lib/fts.c:1306
0x00007731      4829c3         sub rbx, rax
0x00007734      4889442418     mov qword [rsp + 0x18], rax
0x00007739      488b4558       mov rax, qword [rbp + 0x58]
0x0000773d      48895c2428     mov qword [rsp + 0x28], rbx
0x00007742      31db           xor ebx, ebx
0x00007744      4883c001       add rax, 1
0x00007748      4889442430     mov qword [rsp + 0x30], rax
0x0000774d      e9dd000000     jmp 0x782f
0x00007752      660f1f440000   nop word [rax + rax]
0x00007758      4d89f1         mov r9, r14                             ; ../coreutils-8.31/lib/fts.c:1328
0x0000775b      4c034c2418     add r9, qword [rsp + 0x18]
0x00007760      0f825a080000   jb 0x7fc0
0x00007766      488b442430     mov rax, qword [rsp + 0x30]
0x0000776b      498db5080100.  lea rsi, [r13 + 0x108]
0x00007772      49894558       mov qword [r13 + 0x58], rax
0x00007776      498b07         mov rax, qword [r15]
0x00007779      4d894d48       mov qword [r13 + 0x48], r9
0x0000777d      49894508       mov qword [r13 + 8], rax
0x00007781      488b4500       mov rax, qword [rbp]
0x00007785      498985800000.  mov qword [r13 + 0x80], rax             ; ../coreutils-8.31/lib/fts.c:71
0x0000778c      418b4748       mov eax, dword [r15 + 0x48]
0x00007790      a804           test al, 4
0x00007792      0f8568020000   jne 0x7a00
0x00007798      49897530       mov qword [r13 + 0x30], rsi
0x0000779c      49837f4000     cmp qword [r15 + 0x40], 0
0x000077a1      7409           je 0x77ac
0x000077a3      f6c404         test ah, 4
0x000077a6      0f84fc020000   je 0x7aa8
0x000077ac      0fb65512       movzx edx, byte [rbp + 0x12]
0x000077b0      83e018         and eax, 0x18
0x000077b3      89d6           mov esi, edx
0x000077b5      83ea01         sub edx, 1
0x000077b8      83f818         cmp eax, 0x18
0x000077bb      0f84af020000   je 0x7a70                               ; ../coreutils-8.31/lib/fts.c:1359
0x000077c1      b90b000000     mov ecx, 0xb
0x000077c6      83fa0b         cmp edx, 0xb
0x000077c9      6641894d70     mov word [r13 + 0x70], cx
0x000077ce      0f8764020000   ja 0x7a38
0x000077d4      488d05054d00.  lea rax, obj.CSWTCH.53                  ; 0xc4e0
0x000077db      8b0490         mov eax, dword [rax + rdx*4]
0x000077de      418985900000.  mov dword [r13 + 0x90], eax
0x000077e5      b802000000     mov eax, 2
0x000077ea      498985a80000.  mov qword [r13 + 0xa8], rax
0x000077f1      48837c241000   cmp qword [rsp + 0x10], 0
0x000077f7      49c745100000.  mov qword [r13 + 0x10], 0               ; ../coreutils-8.31/lib/fts.c:1237
0x000077ff      0f8423020000   je 0x7a28
0x00007805      488b442408     mov rax, qword [rsp + 8]
0x0000780a      4c896810       mov qword [rax + 0x10], r13             ; ../coreutils-8.31/lib/fts.c:1247
0x0000780e      4881fb102700.  cmp rbx, 0x2710
0x00007815      0f84f5000000   je 0x7910
0x0000781b      4883c301       add rbx, 1
0x0000781f      483b5c2438     cmp rbx, qword [rsp + 0x38]
0x00007824      0f833e010000   jae 0x7968
0x0000782a      4c896c2408     mov qword [rsp + 8], r13
0x0000782f      488b442420     mov rax, qword [rsp + 0x20]
0x00007834      4c8b6818       mov r13, qword [rax + 0x18]             ; ../coreutils-8.31/lib/fts.c:1251
0x00007838      4d85ed         test r13, r13
0x0000783b      0f84c7040000   je 0x7d08
0x00007841      e87aa1ffff     call sym.imp.__errno_location
0x00007846      4c89ef         mov rdi, r13
0x00007849      c70000000000   mov dword [rax], 0
0x0000784f      4989c4         mov r12, rax
0x00007852      e8d9a3ffff     call sym.imp.readdir
0x00007857      4885c0         test rax, rax
0x0000785a      4889c5         mov rbp, rax
0x0000785d      0f847d050000   je 0x7de0
0x00007863      41f6474820     test byte [r15 + 0x48], 0x20
0x00007868      750a           jne 0x7874
0x0000786a      8078132e       cmp byte [rax + 0x13], 0x2e
0x0000786e      0f84dc010000   je 0x7a50
0x00007874      4c8d6d13       lea r13, [rbp + 0x13]
0x00007878      4c89ef         mov rdi, r13
0x0000787b      e820a2ffff     call sym.imp.strlen
0x00007880      4c89ee         mov rsi, r13
0x00007883      4889c2         mov rdx, rax
0x00007886      4c89ff         mov rdi, r15
0x00007889      4989c6         mov r14, rax
0x0000788c      e82ff5ffff     call sym.fts_alloc
0x00007891      4885c0         test rax, rax
0x00007894      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/fts.c:1278
0x00007897      0f8413040000   je 0x7cb0
0x0000789d      4c39742428     cmp qword [rsp + 0x28], r14
0x000078a2      0f87b0feffff   ja 0x7758
0x000078a8      498b4720       mov rax, qword [r15 + 0x20]
0x000078ac      498d7730       lea rsi, [r15 + 0x30]
0x000078b0      498d7f20       lea rdi, [r15 + 0x20]
0x000078b4      4889442428     mov qword [rsp + 0x28], rax
0x000078b9      488b442448     mov rax, qword [rsp + 0x48]
0x000078be      4a8d543002     lea rdx, [rax + r14 + 2]
0x000078c3      e888f8ffff     call sym.fts_palloc.isra.2
0x000078c8      84c0           test al, al
0x000078ca      0f84e0030000   je 0x7cb0
0x000078d0      498b5720       mov rdx, qword [r15 + 0x20]
0x000078d4      483b542428     cmp rdx, qword [rsp + 0x28]
0x000078d9      0f84e1010000   je 0x7ac0
0x000078df      4803542418     add rdx, qword [rsp + 0x18]
0x000078e4      41f6474804     test byte [r15 + 0x48], 4
0x000078e9      480f44542440   cmove rdx, qword [rsp + 0x40]
0x000078ef      4889542440     mov qword [rsp + 0x40], rdx
0x000078f4      498b4f30       mov rcx, qword [r15 + 0x30]
0x000078f8      482b4c2418     sub rcx, qword [rsp + 0x18]
0x000078fd      8844245d       mov byte [rsp + 0x5d], al
0x00007901      48894c2428     mov qword [rsp + 0x28], rcx
0x00007906      e94dfeffff     jmp 0x7758
0x0000790b      0f1f440000     nop dword [rax + rax]
0x00007910      49837f4000     cmp qword [r15 + 0x40], 0
0x00007915      0f8500ffffff   jne 0x781b
0x0000791b      8b742464       mov esi, dword [rsp + 0x64]
0x0000791f      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00007924      e8b7f5ffff     call sym.filesystem_type
0x00007929      483d94190201   cmp rax, 0x1021994
0x0000792f      0f846b030000   je 0x7ca0
0x00007935      b9424d53ff     mov ecx, 0xff534d42
0x0000793a      4839c8         cmp rax, rcx
0x0000793d      0f845d030000   je 0x7ca0
0x00007943      483d69690000   cmp rax, 0x6969
0x00007949      0f8451030000   je 0x7ca0
0x0000794f      4883c301       add rbx, 1
0x00007953      483b5c2438     cmp rbx, qword [rsp + 0x38]
0x00007958      c644245e01     mov byte [rsp + 0x5e], 1
0x0000795d      0f82c7feffff   jb 0x782a
0x00007963      0f1f440000     nop dword [rax + rax]
0x00007968      807c245d00     cmp byte [rsp + 0x5d], 0
0x0000796d      488b6c2420     mov rbp, qword [rsp + 0x20]             ; ../coreutils-8.31/lib/fts.c:1664
0x00007972      0f849e030000   je 0x7d16
0x00007978      498b4708       mov rax, qword [r15 + 8]
0x0000797c      498b4f20       mov rcx, qword [r15 + 0x20]
0x00007980      4885c0         test rax, rax
0x00007983      742b           je 0x79b0
0x00007985      0f1f00         nop dword [rax]
0x00007988      488b5030       mov rdx, qword [rax + 0x30]             ; string_fortified.h:-312
0x0000798c      488db0080100.  lea rsi, [rax + 0x108]
0x00007993      4839f2         cmp rdx, rsi
0x00007996      740b           je 0x79a3
0x00007998      482b5038       sub rdx, qword [rax + 0x38]
0x0000799c      4801ca         add rdx, rcx
0x0000799f      48895030       mov qword [rax + 0x30], rdx
0x000079a3      48894838       mov qword [rax + 0x38], rcx
0x000079a7      488b4010       mov rax, qword [rax + 0x10]
0x000079ab      4885c0         test rax, rax
0x000079ae      75d8           jne 0x7988
0x000079b0      488b442410     mov rax, qword [rsp + 0x10]
0x000079b5      eb0c           jmp 0x79c3
0x000079b7      660f1f840000.  nop word [rax + rax]
0x000079c0      4889d0         mov rax, rdx
0x000079c3      4883785800     cmp qword [rax + 0x58], 0
0x000079c8      0f8848030000   js 0x7d16
0x000079ce      488b5030       mov rdx, qword [rax + 0x30]
0x000079d2      488db0080100.  lea rsi, [rax + 0x108]
0x000079d9      4839f2         cmp rdx, rsi
0x000079dc      740b           je 0x79e9
0x000079de      482b5038       sub rdx, qword [rax + 0x38]
0x000079e2      4801ca         add rdx, rcx
0x000079e5      48895030       mov qword [rax + 0x30], rdx
0x000079e9      488b5010       mov rdx, qword [rax + 0x10]
0x000079ed      48894838       mov qword [rax + 0x38], rcx
0x000079f1      4885d2         test rdx, rdx
0x000079f4      75ca           jne 0x79c0
0x000079f6      488b5008       mov rdx, qword [rax + 8]
0x000079fa      ebc4           jmp 0x79c0
0x000079fc      0f1f4000       nop dword [rax]
0x00007a00      498b4538       mov rax, qword [r13 + 0x38]
0x00007a04      488b7c2440     mov rdi, qword [rsp + 0x40]             ; ../coreutils-8.31/lib/fts.c:-185
0x00007a09      49894530       mov qword [r13 + 0x30], rax
0x00007a0d      498b4560       mov rax, qword [r13 + 0x60]
0x00007a11      488d5001       lea rdx, [rax + 1]
0x00007a15      e8c6a2ffff     call sym.imp.memmove
0x00007a1a      418b4748       mov eax, dword [r15 + 0x48]
0x00007a1e      e979fdffff     jmp 0x779c
0x00007a23      0f1f440000     nop dword [rax + rax]
0x00007a28      4c896c2410     mov qword [rsp + 0x10], r13
0x00007a2d      e9dcfdffff     jmp 0x780e
0x00007a32      660f1f440000   nop word [rax + rax]
0x00007a38      41c785900000.  mov dword [r13 + 0x90], 0
0x00007a43      b802000000     mov eax, 2
0x00007a48      e99dfdffff     jmp 0x77ea
0x00007a4d      0f1f00         nop dword [rax]
0x00007a50      80781400       cmp byte [rax + 0x14], 0
0x00007a54      740b           je 0x7a61
0x00007a56      668378142e     cmp word [rax + 0x14], 0x2e
0x00007a5b      0f8513feffff   jne 0x7874
0x00007a61      4c8b6c2408     mov r13, qword [rsp + 8]
0x00007a66      e9bffdffff     jmp 0x782a                              ; ../coreutils-8.31/lib/fts.c:860
0x00007a6b      0f1f440000     nop dword [rax + rax]
0x00007a70      81e6fb000000   and esi, 0xfb
0x00007a76      0f8445fdffff   je 0x77c1
0x00007a7c      b80b000000     mov eax, 0xb
0x00007a81      83fa0b         cmp edx, 0xb                            ; ../coreutils-8.31/lib/fts.c:872
0x00007a84      6641894570     mov word [r13 + 0x70], ax
0x00007a89      0f8687050000   jbe 0x8016
0x00007a8f      41c785900000.  mov dword [r13 + 0x90], 0
0x00007a9a      b801000000     mov eax, 1
0x00007a9f      e946fdffff     jmp 0x77ea
0x00007aa4      0f1f4000       nop dword [rax]
0x00007aa8      31d2           xor edx, edx
0x00007aaa      4c89ee         mov rsi, r13
0x00007aad      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/fts.c:926
0x00007ab0      e82bf0ffff     call sym.fts_stat
0x00007ab5      6641894570     mov word [r13 + 0x70], ax
0x00007aba      e932fdffff     jmp 0x77f1
0x00007abf      90             nop
0x00007ac0      0fb644245d     movzx eax, byte [rsp + 0x5d]
0x00007ac5      e92afeffff     jmp 0x78f4
0x00007aca      660f1f440000   nop word [rax + rax]
0x00007ad0      8b4748         mov eax, dword [rdi + 0x48]
0x00007ad3      89c2           mov edx, eax
0x00007ad5      83e210         and edx, 0x10
0x00007ad8      740d           je 0x7ae7
0x00007ada      a801           test al, 1
0x00007adc      ba00000200     mov edx, 0x20000                        ; ../coreutils-8.31/lib/fts.c:931
0x00007ae1      0f8501010000   jne 0x7be8
0x00007ae7      2504020000     and eax, 0x204
0x00007aec      488b7530       mov rsi, qword [rbp + 0x30]
0x00007af0      bf9cffffff     mov edi, 0xffffff9c                     ; 4294967196
0x00007af5      3d00020000     cmp eax, 0x200
0x00007afa      7504           jne 0x7b00
0x00007afc      418b7f2c       mov edi, dword [r15 + 0x2c]
0x00007b00      488d4c2464     lea rcx, [rsp + 0x64]
0x00007b05      e8362a0000     call sym.opendirat                      ; ../coreutils-8.31/lib/fts.c:938
0x00007b0a      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:940
0x00007b0d      48894518       mov qword [rbp + 0x18], rax
0x00007b11      0f8419030000   je 0x7e30
0x00007b17      66837d700b     cmp word [rbp + 0x70], 0xb
0x00007b1c      0f848e030000   je 0x7eb0
0x00007b22      418b7f48       mov edi, dword [r15 + 0x48]
0x00007b26      f7c700010000   test edi, 0x100
0x00007b2c      0f851e010000   jne 0x7c50
0x00007b32      49837f4001     cmp qword [r15 + 0x40], 1
0x00007b37      4819c0         sbb rax, rax
0x00007b3a      25a1860100     and eax, 0x186a1                        ; ../coreutils-8.31/lib/fts.c:943
0x00007b3f      4883e801       sub rax, 1
0x00007b43      837c245802     cmp dword [rsp + 0x58], 2
0x00007b48      4889442438     mov qword [rsp + 0x38], rax
0x00007b4d      0f844d030000   je 0x7ea0
0x00007b53      418b5748       mov edx, dword [r15 + 0x48]
0x00007b57      8b442464       mov eax, dword [rsp + 0x64]
0x00007b5b      83e238         and edx, 0x38
0x00007b5e      83fa18         cmp edx, 0x18
0x00007b61      0f849d030000   je 0x7f04
0x00007b67      837c245803     cmp dword [rsp + 0x58], 3
0x00007b6c      41bc01000000   mov r12d, 1
0x00007b72      0f94c3         sete bl
0x00007b75      41f6474902     test byte [r15 + 0x49], 2
0x00007b7a      0f85dc030000   jne 0x7f5c
0x00007b80      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:848
0x00007b82      0f8960030000   jns 0x7ee8
0x00007b88      84db           test bl, bl
0x00007b8a      740f           je 0x7b9b
0x00007b8c      4584e4         test r12b, r12b
0x00007b8f      740a           je 0x7b9b                               ; ../coreutils-8.31/lib/fts.c:1170
0x00007b91      e82a9effff     call sym.imp.__errno_location
0x00007b96      8b00           mov eax, dword [rax]
0x00007b98      894540         mov dword [rbp + 0x40], eax
0x00007b9b      66834d7201     or word [rbp + 0x72], 1
0x00007ba0      488b7d18       mov rdi, qword [rbp + 0x18]
0x00007ba4      e8e79fffff     call sym.imp.closedir
0x00007ba9      418b7f48       mov edi, dword [r15 + 0x48]
0x00007bad      48c745180000.  mov qword [rbp + 0x18], 0
0x00007bb5      f7c700020000   test edi, 0x200
0x00007bbb      7413           je 0x7bd0
0x00007bbd      8b442464       mov eax, dword [rsp + 0x64]
0x00007bc1      85c0           test eax, eax
0x00007bc3      780b           js 0x7bd0
0x00007bc5      89c7           mov edi, eax
0x00007bc7      e8a49fffff     call sym.imp.close
0x00007bcc      418b7f48       mov edi, dword [r15 + 0x48]
0x00007bd0      48c745180000.  mov qword [rbp + 0x18], 0
0x00007bd8      c644245f00     mov byte [rsp + 0x5f], 0
0x00007bdd      e9e9faffff     jmp 0x76cb
0x00007be2      660f1f440000   nop word [rax + rax]
0x00007be8      31d2           xor edx, edx
0x00007bea      48837d5800     cmp qword [rbp + 0x58], 0
0x00007bef      0f95c2         setne dl
0x00007bf2      c1e211         shl edx, 0x11                           ; ../coreutils-8.31/lib/fts.c:886
0x00007bf5      e9edfeffff     jmp 0x7ae7
0x00007bfa      660f1f440000   nop word [rax + rax]
0x00007c00      488b7d18       mov rdi, qword [rbp + 0x18]
0x00007c04      e8879fffff     call sym.imp.closedir
0x00007c09      837c245803     cmp dword [rsp + 0x58], 3
0x00007c0e      48c745180000.  mov qword [rbp + 0x18], 0
0x00007c16      0f841f020000   je 0x7e3b
0x00007c1c      48c744241000.  mov qword [rsp + 0x10], 0
0x00007c25      488b5c2468     mov rbx, qword [rsp + 0x68]
0x00007c2a      6448331c2528.  xor rbx, qword fs:[0x28]
0x00007c33      488b442410     mov rax, qword [rsp + 0x10]
0x00007c38      0f85d3030000   jne 0x8011
0x00007c3e      4883c478       add rsp, 0x78                           ; ../coreutils-8.31/lib/fts.c:1011
0x00007c42      5b             pop rbx
0x00007c43      5d             pop rbp
0x00007c44      415c           pop r12                                 ; ../coreutils-8.31/lib/fts.c:1010
0x00007c46      415d           pop r13
0x00007c48      415e           pop r14
0x00007c4a      415f           pop r15
0x00007c4c      c3             ret                                     ; ../coreutils-8.31/lib/fts.c:1014
0x00007c4d      0f1f00         nop dword [rax]
0x00007c50      498d5f58       lea rbx, [r15 + 0x58]
0x00007c54      4889ea         mov rdx, rbp
0x00007c57      4889de         mov rsi, rbx
0x00007c5a      e841f9ffff     call sym.leave_dir.isra.12              ; ../coreutils-8.31/lib/fts.c:1012
0x00007c5f      31d2           xor edx, edx
0x00007c61      4889ee         mov rsi, rbp
0x00007c64      4c89ff         mov rdi, r15
0x00007c67      e874eeffff     call sym.fts_stat
0x00007c6c      418b7f48       mov edi, dword [r15 + 0x48]             ; ../coreutils-8.31/lib/fts.c:994
0x00007c70      4889ea         mov rdx, rbp
0x00007c73      4889de         mov rsi, rbx
0x00007c76      e875f8ffff     call sym.enter_dir.isra.10
0x00007c7b      84c0           test al, al
0x00007c7d      0f85affeffff   jne 0x7b32
0x00007c83      e8389dffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fts.c:1004
0x00007c88      48c744241000.  mov qword [rsp + 0x10], 0
0x00007c91      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x00007c97      eb8c           jmp 0x7c25
0x00007c99      0f1f80000000.  nop dword [rax]
0x00007ca0      c644245e00     mov byte [rsp + 0x5e], 0
0x00007ca5      e971fbffff     jmp 0x781b
0x00007caa      660f1f440000   nop word [rax + rax]
0x00007cb0      4c89ef         mov rdi, r13
0x00007cb3      488b6c2420     mov rbp, qword [rsp + 0x20]
0x00007cb8      418b1c24       mov ebx, dword [r12]
0x00007cbc      e81fa1ffff     call sym..plt.got
0x00007cc1      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00007cc6      e885f1ffff     call sym.fts_lfree
0x00007ccb      488b7d18       mov rdi, qword [rbp + 0x18]
0x00007ccf      e8bc9effff     call sym.imp.closedir
0x00007cd4      41b907000000   mov r9d, 7                              ; ../coreutils-8.31/lib/fts.c:1006
0x00007cda      48c745180000.  mov qword [rbp + 0x18], 0
0x00007ce2      48c744241000.  mov qword [rsp + 0x10], 0
0x00007ceb      6644894d70     mov word [rbp + 0x70], r9w
0x00007cf0      41814f480020.  or dword [r15 + 0x48], 0x2000           ; [0x2000:4]=0xfffeabe9
0x00007cf8      41891c24       mov dword [r12], ebx
0x00007cfc      e924ffffff     jmp 0x7c25
0x00007d01      0f1f80000000.  nop dword [rax]
0x00007d08      4889c5         mov rbp, rax
0x00007d0b      807c245d00     cmp byte [rsp + 0x5d], 0
0x00007d10      0f8562fcffff   jne 0x7978
0x00007d16      41f6474804     test byte [r15 + 0x48], 4
0x00007d1b      741e           je 0x7d3b
0x00007d1d      488b442418     mov rax, qword [rsp + 0x18]
0x00007d22      49394730       cmp qword [r15 + 0x30], rax
0x00007d26      7405           je 0x7d2d                               ; ../coreutils-8.31/lib/fts.c:849
0x00007d28      4885db         test rbx, rbx
0x00007d2b      7506           jne 0x7d33
0x00007d2d      48836c244001   sub qword [rsp + 0x40], 1
0x00007d33      488b442440     mov rax, qword [rsp + 0x40]
0x00007d38      c60000         mov byte [rax], 0
0x00007d3b      48837c245000   cmp qword [rsp + 0x50], 0
0x00007d41      756d           jne 0x7db0
0x00007d43      807c245f00     cmp byte [rsp + 0x5f], 0
0x00007d48      7466           je 0x7db0
0x00007d4a      837c245801     cmp dword [rsp + 0x58], 1
0x00007d4f      743f           je 0x7d90
0x00007d51      4885db         test rbx, rbx
0x00007d54      743a           je 0x7d90
0x00007d56      807c245e00     cmp byte [rsp + 0x5e], 0
0x00007d5b      0f85f7000000   jne 0x7e58
0x00007d61      49837f4000     cmp qword [r15 + 0x40], 0
0x00007d66      0f84b9feffff   je 0x7c25
0x00007d6c      4883fb01       cmp rbx, 1
0x00007d70      0f84affeffff   je 0x7c25
0x00007d76      488b742410     mov rsi, qword [rsp + 0x10]
0x00007d7b      4889da         mov rdx, rbx
0x00007d7e      4c89ff         mov rdi, r15
0x00007d81      e82aefffff     call sym.fts_sort
0x00007d86      4889442410     mov qword [rsp + 0x10], rax
0x00007d8b      e995feffff     jmp 0x7c25
0x00007d90      48837d5800     cmp qword [rbp + 0x58], 0
0x00007d95      0f852b010000   jne 0x7ec6
0x00007d9b      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/fts.c:897
0x00007d9e      e84df3ffff     call sym.restore_initial_cwd
0x00007da3      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:896
0x00007da5      0f95c0         setne al
0x00007da8      84c0           test al, al
0x00007daa      0f8583010000   jne 0x7f33
0x00007db0      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/fts.c:632
0x00007db3      75a1           jne 0x7d56
0x00007db5      837c245803     cmp dword [rsp + 0x58], 3
0x00007dba      0f84b8010000   je 0x7f78
0x00007dc0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00007dc5      e886f0ffff     call sym.fts_lfree
0x00007dca      48c744241000.  mov qword [rsp + 0x10], 0
0x00007dd3      e94dfeffff     jmp 0x7c25
0x00007dd8      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fts.c:607
0x00007de0      418b0424       mov eax, dword [r12]
0x00007de4      488b6c2420     mov rbp, qword [rsp + 0x20]
0x00007de9      85c0           test eax, eax
0x00007deb      7421           je 0x7e0e
0x00007ded      4885db         test rbx, rbx
0x00007df0      894540         mov dword [rbp + 0x40], eax
0x00007df3      0f8530010000   jne 0x7f29
0x00007df9      48837c245000   cmp qword [rsp + 0x50], 0
0x00007dff      b804000000     mov eax, 4
0x00007e04      0f851f010000   jne 0x7f29
0x00007e0a      66894570       mov word [rbp + 0x70], ax
0x00007e0e      488b7d18       mov rdi, qword [rbp + 0x18]
0x00007e12      4885ff         test rdi, rdi
0x00007e15      0f84f0feffff   je 0x7d0b
0x00007e1b      e8709dffff     call sym.imp.closedir
0x00007e20      48c745180000.  mov qword [rbp + 0x18], 0
0x00007e28      e9defeffff     jmp 0x7d0b
0x00007e2d      0f1f00         nop dword [rax]
0x00007e30      837c245803     cmp dword [rsp + 0x58], 3
0x00007e35      0f85e1fdffff   jne 0x7c1c
0x00007e3b      41ba04000000   mov r10d, 4
0x00007e41      6644895570     mov word [rbp + 0x70], r10w
0x00007e46      e8759bffff     call sym.imp.__errno_location
0x00007e4b      8b00           mov eax, dword [rax]
0x00007e4d      894540         mov dword [rbp + 0x40], eax
0x00007e50      e9c7fdffff     jmp 0x7c1c
0x00007e55      0f1f00         nop dword [rax]
0x00007e58      488d0551ecff.  lea rax, sym.fts_compare_ino            ; 0x6ab0 ; "H\x8b\x17H\x8b\x06H\x8b\x80\x80"
0x00007e5f      488b742410     mov rsi, qword [rsp + 0x10]
0x00007e64      4889da         mov rdx, rbx                            ; ../coreutils-8.31/lib/fts.c:880
0x00007e67      4c89ff         mov rdi, r15
0x00007e6a      49894740       mov qword [r15 + 0x40], rax
0x00007e6e      e83deeffff     call sym.fts_sort
0x00007e73      49c747400000.  mov qword [r15 + 0x40], 0
0x00007e7b      4889442410     mov qword [rsp + 0x10], rax
0x00007e80      e9a0fdffff     jmp 0x7c25
0x00007e85      0f1f00         nop dword [rax]
0x00007e88      48c7442438a0.  mov qword [rsp + 0x38], 0x186a0         ; [0x186a0:8]=-1
0x00007e91      c644245f01     mov byte [rsp + 0x5f], 1
0x00007e96      418b7f48       mov edi, dword [r15 + 0x48]
0x00007e9a      e92cf8ffff     jmp 0x76cb
0x00007e9f      90             nop
0x00007ea0      c644245f00     mov byte [rsp + 0x5f], 0                ; ../coreutils-8.31/lib/fts.c:888
0x00007ea5      418b7f48       mov edi, dword [r15 + 0x48]
0x00007ea9      e91df8ffff     jmp 0x76cb
0x00007eae      6690           nop
0x00007eb0      31d2           xor edx, edx
0x00007eb2      4889ee         mov rsi, rbp
0x00007eb5      4c89ff         mov rdi, r15
0x00007eb8      e823ecffff     call sym.fts_stat                       ; ../coreutils-8.31/lib/fts.c:889
0x00007ebd      66894570       mov word [rbp + 0x70], ax
0x00007ec1      e96cfcffff     jmp 0x7b32
0x00007ec6      488b7508       mov rsi, qword [rbp + 8]                ; ../coreutils-8.31/lib/fts.c:665
0x00007eca      488d0df84500.  lea rcx, [0x0000c4c9]                   ; ".."
0x00007ed1      baffffffff     mov edx, 0xffffffff                     ; -1
0x00007ed6      4c89ff         mov rdi, r15
0x00007ed9      e892f3ffff     call sym.fts_safe_changedir
0x00007ede      85c0           test eax, eax
0x00007ee0      0f95c0         setne al
0x00007ee3      e9c0feffff     jmp 0x7da8
0x00007ee8      31c9           xor ecx, ecx
0x00007eea      89c2           mov edx, eax
0x00007eec      4889ee         mov rsi, rbp
0x00007eef      4c89ff         mov rdi, r15
0x00007ef2      e879f3ffff     call sym.fts_safe_changedir
0x00007ef7      85c0           test eax, eax
0x00007ef9      0f8589fcffff   jne 0x7b88
0x00007eff      e9bef7ffff     jmp 0x76c2
0x00007f04      4883bd880000.  cmp qword [rbp + 0x88], 2
0x00007f0c      0f8555fcffff   jne 0x7b67
0x00007f12      89c6           mov esi, eax
0x00007f14      4889ef         mov rdi, rbp
0x00007f17      e8f4f0ffff     call sym.leaf_optimization
0x00007f1c      85c0           test eax, eax
0x00007f1e      757e           jne 0x7f9e
0x00007f20      8b442464       mov eax, dword [rsp + 0x64]
0x00007f24      e93efcffff     jmp 0x7b67
0x00007f29      b807000000     mov eax, 7
0x00007f2e      e9d7feffff     jmp 0x7e0a
0x00007f33      bf07000000     mov edi, 7
0x00007f38      66897d70       mov word [rbp + 0x70], di
0x00007f3c      41814f480020.  or dword [r15 + 0x48], 0x2000           ; [0x2000:4]=0xfffeabe9
0x00007f44      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00007f49      e802efffff     call sym.fts_lfree
0x00007f4e      48c744241000.  mov qword [rsp + 0x10], 0
0x00007f57      e9c9fcffff     jmp 0x7c25
0x00007f5c      89c7           mov edi, eax
0x00007f5e      ba03000000     mov edx, 3
0x00007f63      be06040000     mov esi, 0x406
0x00007f68      31c0           xor eax, eax
0x00007f6a      e811270000     call sym.rpl_fcntl                      ; ../coreutils-8.31/lib/fts.c:-617
0x00007f6f      89442464       mov dword [rsp + 0x64], eax
0x00007f73      e908fcffff     jmp 0x7b80
0x00007f78      0fb74570       movzx eax, word [rbp + 0x70]            ; ../coreutils-8.31/lib/fts.c:1018
0x00007f7c      6683f807       cmp ax, 7                               ; ../coreutils-8.31/lib/fts.c:-620
0x00007f80      0f843afeffff   je 0x7dc0
0x00007f86      6683f804       cmp ax, 4                               ; ../coreutils-8.31/lib/fts.c:1018
0x00007f8a      0f8430feffff   je 0x7dc0
0x00007f90      be06000000     mov esi, 6
0x00007f95      66897570       mov word [rbp + 0x70], si
0x00007f99      e922feffff     jmp 0x7dc0                              ; ../coreutils-8.31/lib/fts.c:1019
0x00007f9e      837c245803     cmp dword [rsp + 0x58], 3
0x00007fa3      0f85f7feffff   jne 0x7ea0
0x00007fa9      8b442464       mov eax, dword [rsp + 0x64]
0x00007fad      4531e4         xor r12d, r12d
0x00007fb0      bb01000000     mov ebx, 1
0x00007fb5      e9bbfbffff     jmp 0x7b75
0x00007fba      660f1f440000   nop word [rax + rax]
0x00007fc0      4c89ef         mov rdi, r13
0x00007fc3      488b6c2420     mov rbp, qword [rsp + 0x20]
0x00007fc8      e8139effff     call sym..plt.got
0x00007fcd      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00007fd2      e879eeffff     call sym.fts_lfree
0x00007fd7      488b7d18       mov rdi, qword [rbp + 0x18]
0x00007fdb      e8b09bffff     call sym.imp.closedir
0x00007fe0      41b807000000   mov r8d, 7
0x00007fe6      48c745180000.  mov qword [rbp + 0x18], 0
0x00007fee      48c744241000.  mov qword [rsp + 0x10], 0
0x00007ff7      6644894570     mov word [rbp + 0x70], r8w
0x00007ffc      41814f480020.  or dword [r15 + 0x48], 0x2000           ; [0x2000:4]=0xfffeabe9
0x00008004      41c704242400.  mov dword [r12], 0x24                   ; '$'
                                                                       ; [0x24:4]=0
0x0000800c      e914fcffff     jmp 0x7c25
0x00008011      e8ba9affff     call sym.imp.__stack_chk_fail
0x00008016      488d05c34400.  lea rax, obj.CSWTCH.53                  ; 0xc4e0
0x0000801d      8b0490         mov eax, dword [rax + rdx*4]
0x00008020      418985900000.  mov dword [r13 + 0x90], eax
0x00008027      b801000000     mov eax, 1
0x0000802c      e9b9f7ffff     jmp 0x77ea
0x00008031      0f1f440000     nop dword [rax + rax]
0x00008036      662e0f1f8400.  nop word cs:[rax + rax]
;-- rpl_fts_open:
0x00008040      4157           push r15
0x00008042      4156           push r14
0x00008044      4155           push r13
0x00008046      4154           push r12
0x00008048      55             push rbp
0x00008049      53             push rbx
0x0000804a      4883ec28       sub rsp, 0x28
0x0000804e      f7c600f0ffff   test esi, 0xfffff000
0x00008054      0f857e030000   jne 0x83d8
0x0000805a      89f0           mov eax, esi
0x0000805c      89f5           mov ebp, esi
0x0000805e      2504020000     and eax, 0x204
0x00008063      3d04020000     cmp eax, 0x204
0x00008068      0f846a030000   je 0x83d8
0x0000806e      40f6c612       test sil, 0x12
0x00008072      0f8460030000   je 0x83d8
0x00008078      4989fd         mov r13, rdi
0x0000807b      be01000000     mov esi, 1
0x00008080      bf80000000     mov edi, 0x80
0x00008085      4989d6         mov r14, rdx
0x00008088      e8339bffff     call sym.imp.calloc
0x0000808d      4885c0         test rax, rax
0x00008090      4889c3         mov rbx, rax
0x00008093      0f8455020000   je 0x82ee
0x00008099      40f6c502       test bpl, 2
0x0000809d      4c897040       mov qword [rax + 0x40], r14
0x000080a1      0f8559020000   jne 0x8300
0x000080a7      498b7d00       mov rdi, qword [r13]
0x000080ab      896848         mov dword [rax + 0x48], ebp
0x000080ae      c7432c9cffff.  mov dword [rbx + 0x2c], 0xffffff9c      ; [0xffffff9c:4]=-1 ; 4294967196
0x000080b5      4885ff         test rdi, rdi
0x000080b8      0f8461020000   je 0x831f
0x000080be      4d89ef         mov r15, r13
0x000080c1      4531e4         xor r12d, r12d
0x000080c4      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/fts.c:-683
0x000080c8      e8d399ffff     call sym.imp.strlen
0x000080cd      4939c4         cmp r12, rax
0x000080d0      4c0f42e0       cmovb r12, rax
0x000080d4      4983c708       add r15, 8
0x000080d8      498b3f         mov rdi, qword [r15]
0x000080db      4885ff         test rdi, rdi
0x000080de      75e8           jne 0x80c8
0x000080e0      498d542401     lea rdx, [r12 + 1]
0x000080e5      b800100000     mov eax, 0x1000
0x000080ea      4881fa001000.  cmp rdx, 0x1000
0x000080f1      480f42d0       cmovb rdx, rax
0x000080f5      488d7330       lea rsi, [rbx + 0x30]
0x000080f9      488d7b20       lea rdi, [rbx + 0x20]
0x000080fd      e84ef0ffff     call sym.fts_palloc.isra.2
0x00008102      84c0           test al, al
0x00008104      88442416       mov byte [rsp + 0x16], al
0x00008108      0f849b020000   je 0x83a9
0x0000810e      498b7500       mov rsi, qword [r13]
0x00008112      4885f6         test rsi, rsi
0x00008115      0f84a5020000   je 0x83c0
0x0000811b      488d35273f00.  lea rsi, [0x0000c049]
0x00008122      31d2           xor edx, edx
0x00008124      4889df         mov rdi, rbx
0x00008127      e894ecffff     call sym.fts_alloc
0x0000812c      4885c0         test rax, rax
0x0000812f      4989c7         mov r15, rax
0x00008132      0f8468020000   je 0x83a0
0x00008138      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x0000813f      4d85f6         test r14, r14
0x00008142      498b7500       mov rsi, qword [r13]
0x00008146      49894758       mov qword [r15 + 0x58], rax
0x0000814a      49894768       mov qword [r15 + 0x68], rax
0x0000814e      740d           je 0x815d
0x00008150      8b4348         mov eax, dword [rbx + 0x48]
0x00008153      c1e80a         shr eax, 0xa
0x00008156      83e001         and eax, 1
0x00008159      88442416       mov byte [rsp + 0x16], al               ; ../coreutils-8.31/lib/fts.c:-626
0x0000815d      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/fts.c:-629
0x00008160      0f8466020000   je 0x83cc
0x00008166      c1ed0b         shr ebp, 0xb
0x00008169      48c744241800.  mov qword [rsp + 0x18], 0
0x00008172      4531e4         xor r12d, r12d
0x00008175      83f501         xor ebp, 1
0x00008178      89e8           mov eax, ebp
0x0000817a      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/fts.c:-616
0x0000817c      83e001         and eax, 1
0x0000817f      88442417       mov byte [rsp + 0x17], al
0x00008183      eb77           jmp 0x81fc
0x00008185      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/fts.c:-615
0x00008188      4889c2         mov rdx, rax
0x0000818b      4889df         mov rdi, rbx
0x0000818e      e82decffff     call sym.fts_alloc
0x00008193      4885c0         test rax, rax
0x00008196      4889c1         mov rcx, rax
0x00008199      0f84f1010000   je 0x8390
0x0000819f      48c740580000.  mov qword [rax + 0x58], 0
0x000081a7      4c897808       mov qword [rax + 8], r15
0x000081ab      488d80080100.  lea rax, [rax + 0x108]
0x000081b2      4d85e4         test r12, r12
0x000081b5      48894130       mov qword [rcx + 0x30], rax
0x000081b9      0f8471010000   je 0x8330
0x000081bf      807c241600     cmp byte [rsp + 0x16], 0
0x000081c4      0f8466010000   je 0x8330
0x000081ca      be0b000000     mov esi, 0xb
0x000081cf      4d85f6         test r14, r14
0x000081d2      48c781a80000.  mov qword [rcx + 0xa8], 2
0x000081dd      66897170       mov word [rcx + 0x70], si
0x000081e1      0f8489010000   je 0x8370                               ; ../coreutils-8.31/lib/fts.c:876
0x000081e7      4c896110       mov qword [rcx + 0x10], r12
0x000081eb      4989cc         mov r12, rcx
0x000081ee      4883c501       add rbp, 1
0x000081f2      498b74ed00     mov rsi, qword [r13 + rbp*8]
0x000081f7      4885f6         test rsi, rsi
0x000081fa      7454           je 0x8250
0x000081fc      4889f7         mov rdi, rsi
0x000081ff      4889742408     mov qword [rsp + 8], rsi
0x00008204      e89798ffff     call sym.imp.strlen
0x00008209      4883f802       cmp rax, 2
0x0000820d      488b742408     mov rsi, qword [rsp + 8]
0x00008212      0f8670ffffff   jbe 0x8188                              ; ../coreutils-8.31/lib/fts.c:-659
0x00008218      807c241700     cmp byte [rsp + 0x17], 0
0x0000821d      0f8465ffffff   je 0x8188
0x00008223      807c06ff2f     cmp byte [rsi + rax - 1], 0x2f
0x00008228      0f855affffff   jne 0x8188
0x0000822e      6690           nop
0x00008230      807c06fe2f     cmp byte [rsi + rax - 2], 0x2f
0x00008235      0f854dffffff   jne 0x8188
0x0000823b      4883e801       sub rax, 1
0x0000823f      4883f801       cmp rax, 1
0x00008243      75eb           jne 0x8230
0x00008245      e93effffff     jmp 0x8188
0x0000824a      660f1f440000   nop word [rax + rax]
0x00008250      4d85f6         test r14, r14
0x00008253      7417           je 0x826c
0x00008255      4883fd01       cmp rbp, 1
0x00008259      7611           jbe 0x826c
0x0000825b      4c89e6         mov rsi, r12
0x0000825e      4889ea         mov rdx, rbp
0x00008261      4889df         mov rdi, rbx
0x00008264      e847eaffff     call sym.fts_sort
0x00008269      4989c4         mov r12, rax
0x0000826c      488d35d63d00.  lea rsi, [0x0000c049]
0x00008273      31d2           xor edx, edx
0x00008275      4889df         mov rdi, rbx
0x00008278      e843ebffff     call sym.fts_alloc
0x0000827d      4885c0         test rax, rax
0x00008280      488903         mov qword [rbx], rax
0x00008283      0f8407010000   je 0x8390
0x00008289      8b7b48         mov edi, dword [rbx + 0x48]
0x0000828c      ba09000000     mov edx, 9
0x00008291      488d7358       lea rsi, [rbx + 0x58]
0x00008295      4c896010       mov qword [rax + 0x10], r12
0x00008299      66895070       mov word [rax + 0x70], dx               ; ../coreutils-8.31/lib/fts.c:-901
0x0000829d      48c740580100.  mov qword [rax + 0x58], 1
0x000082a5      e816efffff     call sym.setup_dir.isra.4
0x000082aa      84c0           test al, al
0x000082ac      0f84de000000   je 0x8390                               ; ../coreutils-8.31/lib/fts.c:-707
0x000082b2      8b7348         mov esi, dword [rbx + 0x48]
0x000082b5      f7c604020000   test esi, 0x204
0x000082bb      7523           jne 0x82e0                              ; ../coreutils-8.31/lib/fts.c:-697
0x000082bd      8b7b2c         mov edi, dword [rbx + 0x2c]
0x000082c0      488d15034200.  lea rdx, [0x0000c4ca]                   ; "."
0x000082c7      e864efffff     call sym.diropen.isra.6
0x000082cc      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:-694
0x000082ce      894328         mov dword [rbx + 0x28], eax
0x000082d1      790d           jns 0x82e0                              ; ../coreutils-8.31/lib/fts.c:-697
0x000082d3      834b4804       or dword [rbx + 0x48], 4
0x000082d7      660f1f840000.  nop word [rax + rax]
0x000082e0      488d7b60       lea rdi, [rbx + 0x60]
0x000082e4      beffffffff     mov esi, 0xffffffff                     ; ../coreutils-8.31/lib/fts.c:-695 ; -1
0x000082e9      e8f2200000     call sym.i_ring_init
0x000082ee      4883c428       add rsp, 0x28
0x000082f2      4889d8         mov rax, rbx
0x000082f5      5b             pop rbx
0x000082f6      5d             pop rbp
0x000082f7      415c           pop r12                                 ; ../coreutils-8.31/lib/fts.c:-692
0x000082f9      415d           pop r13
0x000082fb      415e           pop r14
0x000082fd      415f           pop r15
0x000082ff      c3             ret                                     ; ../coreutils-8.31/lib/fts.c:-688
0x00008300      498b7d00       mov rdi, qword [r13]
0x00008304      89e8           mov eax, ebp
0x00008306      c7432c9cffff.  mov dword [rbx + 0x2c], 0xffffff9c      ; [0xffffff9c:4]=-1 ; 4294967196
0x0000830d      80e4fd         and ah, 0xfd                            ; ../coreutils-8.31/lib/fts.c:-686
0x00008310      83c804         or eax, 4
0x00008313      4885ff         test rdi, rdi
0x00008316      894348         mov dword [rbx + 0x48], eax             ; ../coreutils-8.31/lib/fts.c:-685
0x00008319      0f859ffdffff   jne 0x80be
0x0000831f      ba00100000     mov edx, 0x1000                         ; ../coreutils-8.31/lib/fts.c:-683
0x00008324      e9ccfdffff     jmp 0x80f5
0x00008329      0f1f80000000.  nop dword [rax]
0x00008330      31d2           xor edx, edx
0x00008332      4889ce         mov rsi, rcx                            ; ../coreutils-8.31/lib/fts.c:-705
0x00008335      4889df         mov rdi, rbx
0x00008338      48894c2408     mov qword [rsp + 8], rcx
0x0000833d      e89ee7ffff     call sym.fts_stat                       ; ../coreutils-8.31/lib/fts.c:-662
0x00008342      488b4c2408     mov rcx, qword [rsp + 8]
0x00008347      4d85f6         test r14, r14
0x0000834a      66894170       mov word [rcx + 0x70], ax
0x0000834e      0f8593feffff   jne 0x81e7
0x00008354      4d85e4         test r12, r12
0x00008357      48c741100000.  mov qword [rcx + 0x10], 0
0x0000835f      7517           jne 0x8378
0x00008361      48894c2418     mov qword [rsp + 0x18], rcx
0x00008366      4989cc         mov r12, rcx
0x00008369      e980feffff     jmp 0x81ee
0x0000836e      6690           nop
0x00008370      48c741100000.  mov qword [rcx + 0x10], 0
0x00008378      488b442418     mov rax, qword [rsp + 0x18]
0x0000837d      48894c2418     mov qword [rsp + 0x18], rcx
0x00008382      48894810       mov qword [rax + 0x10], rcx
0x00008386      e963feffff     jmp 0x81ee
0x0000838b      0f1f440000     nop dword [rax + rax]
0x00008390      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/fts.c:-674
0x00008393      e8b8eaffff     call sym.fts_lfree
0x00008398      4c89ff         mov rdi, r15
0x0000839b      e8409affff     call sym..plt.got
0x000083a0      488b7b20       mov rdi, qword [rbx + 0x20]
0x000083a4      e8379affff     call sym..plt.got
0x000083a9      4889df         mov rdi, rbx
0x000083ac      31db           xor ebx, ebx
0x000083ae      e82d9affff     call sym..plt.got
0x000083b3      e936ffffff     jmp 0x82ee
0x000083b8      0f1f84000000.  nop dword [rax + rax]
0x000083c0      4531ff         xor r15d, r15d
0x000083c3      4d85f6         test r14, r14
0x000083c6      0f8584fdffff   jne 0x8150
0x000083cc      4531e4         xor r12d, r12d
0x000083cf      e998feffff     jmp 0x826c
0x000083d4      0f1f4000       nop dword [rax]
0x000083d8      e8e395ffff     call sym.imp.__errno_location
0x000083dd      31db           xor ebx, ebx
0x000083df      c70016000000   mov dword [rax], 0x16                   ; ../coreutils-8.31/lib/fts.c:-692 ; [0x16:4]=0x23800000
0x000083e5      e904ffffff     jmp 0x82ee
0x000083ea      660f1f440000   nop word [rax + rax]
;-- rpl_fts_close:
0x000083f0      4154           push r12
0x000083f2      55             push rbp
0x000083f3      4889fd         mov rbp, rdi
0x000083f6      53             push rbx
0x000083f7      488b3f         mov rdi, qword [rdi]
0x000083fa      4885ff         test rdi, rdi
0x000083fd      7444           je 0x8443
0x000083ff      48837f5800     cmp qword [rdi + 0x58], 0
0x00008404      7919           jns 0x841f
0x00008406      e915010000     jmp 0x8520
0x0000840b      0f1f440000     nop dword [rax + rax]
0x00008410      e8cb99ffff     call sym..plt.got
0x00008415      48837b5800     cmp qword [rbx + 0x58], 0
0x0000841a      4889df         mov rdi, rbx
0x0000841d      781c           js 0x843b                               ; ../coreutils-8.31/lib/fts.c:-652
0x0000841f      488b5f10       mov rbx, qword [rdi + 0x10]
0x00008423      4885db         test rbx, rbx
0x00008426      75e8           jne 0x8410
0x00008428      488b5f08       mov rbx, qword [rdi + 8]
0x0000842c      e8af99ffff     call sym..plt.got
0x00008431      48837b5800     cmp qword [rbx + 0x58], 0
0x00008436      4889df         mov rdi, rbx
0x00008439      79e4           jns 0x841f
0x0000843b      4889df         mov rdi, rbx
0x0000843e      e89d99ffff     call sym..plt.got
0x00008443      488b7d08       mov rdi, qword [rbp + 8]
0x00008447      4885ff         test rdi, rdi
0x0000844a      7405           je 0x8451
0x0000844c      e8ffe9ffff     call sym.fts_lfree
0x00008451      488b7d10       mov rdi, qword [rbp + 0x10]
0x00008455      e88699ffff     call sym..plt.got
0x0000845a      488b7d20       mov rdi, qword [rbp + 0x20]
0x0000845e      e87d99ffff     call sym..plt.got
0x00008463      8b4548         mov eax, dword [rbp + 0x48]
0x00008466      f6c402         test ah, 2
0x00008469      7465           je 0x84d0
0x0000846b      8b7d2c         mov edi, dword [rbp + 0x2c]
0x0000846e      85ff           test edi, edi
0x00008470      0f898a000000   jns 0x8500
0x00008476      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fts.c:-398
0x00008478      488d7d60       lea rdi, [rbp + 0x60]
0x0000847c      e81feaffff     call sym.fd_ring_clear
0x00008481      488b7d50       mov rdi, qword [rbp + 0x50]
0x00008485      4885ff         test rdi, rdi
0x00008488      7405           je 0x848f
0x0000848a      e831170000     call sym.hash_free
0x0000848f      f74548020100.  test dword [rbp + 0x48], 0x102          ; ../coreutils-8.31/lib/fts.c:-413
0x00008496      488b7d58       mov rdi, qword [rbp + 0x58]
0x0000849a      7424           je 0x84c0
0x0000849c      4885ff         test rdi, rdi
0x0000849f      7405           je 0x84a6
0x000084a1      e81a170000     call sym.hash_free
0x000084a6      4889ef         mov rdi, rbp
0x000084a9      e83299ffff     call sym..plt.got                       ; ../coreutils-8.31/lib/fts.c:-455
0x000084ae      85db           test ebx, ebx
0x000084b0      0f85ab000000   jne 0x8561
0x000084b6      89d8           mov eax, ebx
0x000084b8      5b             pop rbx
0x000084b9      5d             pop rbp
0x000084ba      415c           pop r12
0x000084bc      c3             ret
0x000084bd      0f1f00         nop dword [rax]
0x000084c0      e81b99ffff     call sym..plt.got
0x000084c5      ebdf           jmp 0x84a6
0x000084c7      660f1f840000.  nop word [rax + rax]
0x000084d0      a804           test al, 4
0x000084d2      75a2           jne 0x8476
0x000084d4      8b7d28         mov edi, dword [rbp + 0x28]
0x000084d7      e8c497ffff     call sym.imp.fchdir                     ; ../coreutils-8.31/lib/fts.c:-449
0x000084dc      85c0           test eax, eax
0x000084de      7550           jne 0x8530
0x000084e0      8b7d28         mov edi, dword [rbp + 0x28]
0x000084e3      e88896ffff     call sym.imp.close                      ; ../coreutils-8.31/lib/fts.c:-448
0x000084e8      85c0           test eax, eax
0x000084ea      748a           je 0x8476
0x000084ec      e8cf94ffff     call sym.imp.__errno_location
0x000084f1      4989c4         mov r12, rax
0x000084f4      eb62           jmp 0x8558
0x000084f6      662e0f1f8400.  nop word cs:[rax + rax]
0x00008500      e86b96ffff     call sym.imp.close
0x00008505      85c0           test eax, eax
0x00008507      0f8469ffffff   je 0x8476
0x0000850d      e8ae94ffff     call sym.imp.__errno_location
0x00008512      8b18           mov ebx, dword [rax]
0x00008514      e95fffffff     jmp 0x8478
0x00008519      0f1f80000000.  nop dword [rax]
0x00008520      4889fb         mov rbx, rdi
0x00008523      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fts.c:-429
0x00008526      e8b598ffff     call sym..plt.got
0x0000852b      e913ffffff     jmp 0x8443
0x00008530      e88b94ffff     call sym.imp.__errno_location
0x00008535      8b7d28         mov edi, dword [rbp + 0x28]             ; ../coreutils-8.31/lib/fts.c:-664
0x00008538      4989c4         mov r12, rax                            ; ../coreutils-8.31/lib/fts.c:-665
0x0000853b      8b18           mov ebx, dword [rax]
0x0000853d      e82e96ffff     call sym.imp.close
0x00008542      85c0           test eax, eax
0x00008544      0f842effffff   je 0x8478
0x0000854a      85db           test ebx, ebx
0x0000854c      0f8526ffffff   jne 0x8478
0x00008552      660f1f440000   nop word [rax + rax]
0x00008558      418b1c24       mov ebx, dword [r12]
0x0000855c      e917ffffff     jmp 0x8478
0x00008561      e85a94ffff     call sym.imp.__errno_location
0x00008566      8918           mov dword [rax], ebx
0x00008568      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x0000856d      e944ffffff     jmp 0x84b6
0x00008572      0f1f4000       nop dword [rax]
0x00008576      662e0f1f8400.  nop word cs:[rax + rax]
;-- rpl_fts_read:
0x00008580      4156           push r14
0x00008582      4155           push r13                                ; ../coreutils-8.31/lib/fts.c:-640
0x00008584      4154           push r12
0x00008586      55             push rbp
0x00008587      53             push rbx                                ; ../coreutils-8.31/lib/fts.c:-641
0x00008588      488b2f         mov rbp, qword [rdi]
0x0000858b      4885ed         test rbp, rbp
0x0000858e      0f840a010000   je 0x869e
0x00008594      8b5748         mov edx, dword [rdi + 0x48]
0x00008597      f6c620         test dh, 0x20                           ; ../coreutils-8.31/lib/fts.c:-640 ; "@"
0x0000859a      0f85fe000000   jne 0x869e
0x000085a0      0fb74574       movzx eax, word [rbp + 0x74]
0x000085a4      bb03000000     mov ebx, 3
0x000085a9      4989fc         mov r12, rdi
0x000085ac      66895d74       mov word [rbp + 0x74], bx
0x000085b0      6683f801       cmp ax, 1
0x000085b4      0f8446020000   je 0x8800
0x000085ba      6683f802       cmp ax, 2
0x000085be      0fb74d70       movzx ecx, word [rbp + 0x70]
0x000085c2      0f84e8000000   je 0x86b0                               ; ../coreutils-8.31/lib/fts.c:-662
0x000085c8      6683f901       cmp cx, 1
0x000085cc      7532           jne 0x8600
0x000085ce      e91d020000     jmp 0x87f0
0x000085d3      0f1f440000     nop dword [rax + rax]
0x000085d8      49891c24       mov qword [r12], rbx                    ; ../coreutils-8.31/lib/fts.c:-525
0x000085dc      4889ef         mov rdi, rbp
0x000085df      e8fc97ffff     call sym..plt.got
0x000085e4      48837b5800     cmp qword [rbx + 0x58], 0
0x000085e9      0f8431020000   je 0x8820
0x000085ef      0fb74374       movzx eax, word [rbx + 0x74]
0x000085f3      4889dd         mov rbp, rbx
0x000085f6      6683f804       cmp ax, 4
0x000085fa      0f8528030000   jne 0x8928
0x00008600      488b5d10       mov rbx, qword [rbp + 0x10]
0x00008604      4885db         test rbx, rbx
0x00008607      75cf           jne 0x85d8
0x00008609      488b5d08       mov rbx, qword [rbp + 8]
0x0000860d      48837b1800     cmp qword [rbx + 0x18], 0
0x00008612      0f8568050000   jne 0x8b80
0x00008618      49891c24       mov qword [r12], rbx
0x0000861c      4889ef         mov rdi, rbp
0x0000861f      e8bc97ffff     call sym..plt.got
0x00008624      48837b58ff     cmp qword [rbx + 0x58], 0xffffffffffffffff
0x00008629      0f84b3040000   je 0x8ae2
0x0000862f      66837b700b     cmp word [rbx + 0x70], 0xb
0x00008634      0f8435010000   je 0x876f
0x0000863a      498b542420     mov rdx, qword [r12 + 0x20]
0x0000863f      488b4348       mov rax, qword [rbx + 0x48]             ; ../coreutils-8.31/lib/fts.c:-613
0x00008643      c6040200       mov byte [rdx + rax], 0
0x00008647      48837b5800     cmp qword [rbx + 0x58], 0
0x0000864c      0f84be030000   je 0x8a10
0x00008652      0fb74372       movzx eax, word [rbx + 0x72]
0x00008656      a802           test al, 2
0x00008658      0f846a030000   je 0x89c8
0x0000865e      418b442448     mov eax, dword [r12 + 0x48]
0x00008663      8b7b44         mov edi, dword [rbx + 0x44]
0x00008666      a804           test al, 4
0x00008668      0f84fe030000   je 0x8a6c
0x0000866e      e8fd94ffff     call sym.imp.close
0x00008673      418b7c2448     mov edi, dword [r12 + 0x48]
0x00008678      66837b7002     cmp word [rbx + 0x70], 2
0x0000867d      7414           je 0x8693
0x0000867f      8b4b40         mov ecx, dword [rbx + 0x40]
0x00008682      85c9           test ecx, ecx
0x00008684      0f849e030000   je 0x8a28
0x0000868a      ba07000000     mov edx, 7
0x0000868f      66895370       mov word [rbx + 0x70], dx
0x00008693      81e700200000   and edi, 0x2000                         ; ../coreutils-8.31/lib/fts.c:-428
0x00008699      4889dd         mov rbp, rbx
0x0000869c      747c           je 0x871a
0x0000869e      31ed           xor ebp, ebp
0x000086a0      5b             pop rbx
0x000086a1      4889e8         mov rax, rbp
0x000086a4      5d             pop rbp
0x000086a5      415c           pop r12                                 ; ../coreutils-8.31/lib/fts.c:-559
0x000086a7      415d           pop r13
0x000086a9      415e           pop r14
0x000086ab      c3             ret
0x000086ac      0f1f4000       nop dword [rax]
0x000086b0      8d41f4         lea eax, [rcx - 0xc]
0x000086b3      6683f801       cmp ax, 1
0x000086b7      7677           jbe 0x8730
0x000086b9      6683f901       cmp cx, 1
0x000086bd      0f853dffffff   jne 0x8600
0x000086c3      f6c240         test dl, 0x40                           ; ../coreutils-8.31/lib/fts-cycle.c:-1395 ; segment.PHDR
0x000086c6      0f84ac000000   je 0x8778
0x000086cc      498b442418     mov rax, qword [r12 + 0x18]
0x000086d1      48394578       cmp qword [rbp + 0x78], rax
0x000086d5      0f849d000000   je 0x8778
0x000086db      f6457202       test byte [rbp + 0x72], 2
0x000086df      0f85db040000   jne 0x8bc0
0x000086e5      498b7c2408     mov rdi, qword [r12 + 8]
0x000086ea      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fts.c:-985
0x000086ed      740e           je 0x86fd
0x000086ef      e85ce7ffff     call sym.fts_lfree
0x000086f4      49c744240800.  mov qword [r12 + 8], 0
0x000086fd      418b7c2448     mov edi, dword [r12 + 0x48]
0x00008702      41ba06000000   mov r10d, 6
0x00008708      498d742458     lea rsi, [r12 + 0x58]
0x0000870d      6644895570     mov word [rbp + 0x70], r10w
0x00008712      4889ea         mov rdx, rbp
0x00008715      e886eeffff     call sym.leave_dir.isra.12
0x0000871a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:-982
0x0000871b      4889e8         mov rax, rbp
0x0000871e      5d             pop rbp                                 ; ../coreutils-8.31/lib/fts.c:-983
0x0000871f      415c           pop r12
0x00008721      415d           pop r13                                 ; string_fortified.h:-1508
0x00008723      415e           pop r14
0x00008725      c3             ret
0x00008726      662e0f1f8400.  nop word cs:[rax + rax]
0x00008730      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/fts.c:-979
0x00008735      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fts.c:-553
0x00008738      e8a3e3ffff     call sym.fts_stat
0x0000873d      6683f801       cmp ax, 1
0x00008741      66894570       mov word [rbp + 0x70], ax
0x00008745      0f8441030000   je 0x8a8c
0x0000874b      6683f80b       cmp ax, 0xb
0x0000874f      49892c24       mov qword [r12], rbp
0x00008753      75c5           jne 0x871a                              ; ../coreutils-8.31/lib/fts.c:-525
0x00008755      0f1f00         nop dword [rax]
0x00008758      488b85a80000.  mov rax, qword [rbp + 0xa8]
0x0000875f      4883f802       cmp rax, 2
0x00008763      0f849f030000   je 0x8b08
0x00008769      4883f801       cmp rax, 1
0x0000876d      74ab           je 0x871a
0x0000876f      e83c92ffff     call sym.imp.abort
0x00008774      0f1f4000       nop dword [rax]
0x00008778      498b7c2408     mov rdi, qword [r12 + 8]
0x0000877d      4885ff         test rdi, rdi
0x00008780      0f8412020000   je 0x8998
0x00008786      f6c610         test dh, 0x10
0x00008789      0f85f3010000   jne 0x8982
0x0000878f      488b4d30       mov rcx, qword [rbp + 0x30]
0x00008793      baffffffff     mov edx, 0xffffffff                     ; -1
0x00008798      4889ee         mov rsi, rbp
0x0000879b      4c89e7         mov rdi, r12
0x0000879e      e8cdeaffff     call sym.fts_safe_changedir
0x000087a3      85c0           test eax, eax
0x000087a5      0f84b7020000   je 0x8a62
0x000087ab      e81092ffff     call sym.imp.__errno_location
0x000087b0      8b00           mov eax, dword [rax]
0x000087b2      66834d7201     or word [rbp + 0x72], 1
0x000087b7      894540         mov dword [rbp + 0x40], eax             ; ../coreutils-8.31/lib/fts.c:-530
0x000087ba      498b6c2408     mov rbp, qword [r12 + 8]
0x000087bf      4885ed         test rbp, rbp
0x000087c2      0f84ee010000   je 0x89b6
0x000087c8      4889e8         mov rax, rbp
0x000087cb      0f1f440000     nop dword [rax + rax]
0x000087d0      488b5008       mov rdx, qword [rax + 8]
0x000087d4      488b5230       mov rdx, qword [rdx + 0x30]
0x000087d8      48895030       mov qword [rax + 0x30], rdx
0x000087dc      488b4010       mov rax, qword [rax + 0x10]             ; ../coreutils-8.31/lib/fts.c:-529
0x000087e0      4885c0         test rax, rax
0x000087e3      75eb           jne 0x87d0
0x000087e5      e9cc010000     jmp 0x89b6
0x000087ea      660f1f440000   nop word [rax + rax]
0x000087f0      6683f804       cmp ax, 4
0x000087f4      0f85c9feffff   jne 0x86c3
0x000087fa      e9dcfeffff     jmp 0x86db
0x000087ff      90             nop
0x00008800      4889ee         mov rsi, rbp
0x00008803      31d2           xor edx, edx
0x00008805      e8d6e2ffff     call sym.fts_stat
0x0000880a      66894570       mov word [rbp + 0x70], ax
0x0000880e      4889e8         mov rax, rbp
0x00008811      5b             pop rbx
0x00008812      5d             pop rbp
0x00008813      415c           pop r12
0x00008815      415d           pop r13
0x00008817      415e           pop r14
0x00008819      c3             ret
0x0000881a      660f1f440000   nop word [rax + rax]
0x00008820      4c89e7         mov rdi, r12
0x00008823      e8c8e8ffff     call sym.restore_initial_cwd
0x00008828      85c0           test eax, eax
0x0000882a      0f8501040000   jne 0x8c31
0x00008830      41f744244802.  test dword [r12 + 0x48], 0x102
0x00008839      498b7c2458     mov rdi, qword [r12 + 0x58]
0x0000883e      0f8434010000   je 0x8978
0x00008844      4885ff         test rdi, rdi
0x00008847      7405           je 0x884e
0x00008849      e872130000     call sym.hash_free
0x0000884e      488b5360       mov rdx, qword [rbx + 0x60]
0x00008852      488dab080100.  lea rbp, [rbx + 0x108]
0x00008859      498b7c2420     mov rdi, qword [r12 + 0x20]
0x0000885e      4889ee         mov rsi, rbp
0x00008861      48895348       mov qword [rbx + 0x48], rdx
0x00008865      4883c201       add rdx, 1
0x00008869      e87294ffff     call sym.imp.memmove
0x0000886e      be2f000000     mov esi, 0x2f                           ; '/'
0x00008873      4889ef         mov rdi, rbp
0x00008876      e8b592ffff     call sym.imp.strrchr
0x0000887b      4885c0         test rax, rax
0x0000887e      742b           je 0x88ab
0x00008880      4839c5         cmp rbp, rax
0x00008883      0f84c7010000   je 0x8a50                               ; ../coreutils-8.31/lib/fts.c:-581
0x00008889      4c8d6801       lea r13, [rax + 1]
0x0000888d      4c89ef         mov rdi, r13
0x00008890      e80b92ffff     call sym.imp.strlen
0x00008895      488d5001       lea rdx, [rax + 1]
0x00008899      4989c6         mov r14, rax
0x0000889c      4c89ee         mov rsi, r13
0x0000889f      4889ef         mov rdi, rbp
0x000088a2      e83994ffff     call sym.imp.memmove
0x000088a7      4c897360       mov qword [rbx + 0x60], r14
0x000088ab      498b442420     mov rax, qword [r12 + 0x20]
0x000088b0      418b7c2448     mov edi, dword [r12 + 0x48]
0x000088b5      498d742458     lea rsi, [r12 + 0x58]
0x000088ba      4889dd         mov rbp, rbx
0x000088bd      48894338       mov qword [rbx + 0x38], rax
0x000088c1      48894330       mov qword [rbx + 0x30], rax
0x000088c5      e8f6e8ffff     call sym.setup_dir.isra.4
0x000088ca      0fb74370       movzx eax, word [rbx + 0x70]
0x000088ce      6683f80b       cmp ax, 0xb
0x000088d2      49892c24       mov qword [r12], rbp
0x000088d6      0f847cfeffff   je 0x8758
0x000088dc      6683f801       cmp ax, 1
0x000088e0      0f8534feffff   jne 0x871a
0x000088e6      48837d5800     cmp qword [rbp + 0x58], 0
0x000088eb      7509           jne 0x88f6
0x000088ed      488b4578       mov rax, qword [rbp + 0x78]
0x000088f1      4989442418     mov qword [r12 + 0x18], rax
0x000088f6      418b7c2448     mov edi, dword [r12 + 0x48]
0x000088fb      498d742458     lea rsi, [r12 + 0x58]
0x00008900      4889ea         mov rdx, rbp
0x00008903      e8e8ebffff     call sym.enter_dir.isra.10
0x00008908      84c0           test al, al
0x0000890a      0f850afeffff   jne 0x871a
0x00008910      e8ab90ffff     call sym.imp.__errno_location
0x00008915      31ed           xor ebp, ebp
0x00008917      c7000c000000   mov dword [rax], 0xc                    ; ../coreutils-8.31/lib/fts.c:-735 ; [0xc:4]=0
0x0000891d      e9f8fdffff     jmp 0x871a
0x00008922      660f1f440000   nop word [rax + rax]
0x00008928      6683f802       cmp ax, 2                               ; ../coreutils-8.31/lib/fts.c:-730
0x0000892c      0f849b020000   je 0x8bcd
0x00008932      488b4508       mov rax, qword [rbp + 8]
0x00008936      488db5080100.  lea rsi, [rbp + 0x108]
0x0000893d      488b7848       mov rdi, qword [rax + 0x48]
0x00008941      488b4038       mov rax, qword [rax + 0x38]
0x00008945      807c38ff2f     cmp byte [rax + rdi - 1], 0x2f
0x0000894a      488d57ff       lea rdx, [rdi - 1]
0x0000894e      480f44fa       cmove rdi, rdx
0x00008952      49037c2420     add rdi, qword [r12 + 0x20]
0x00008957      c6072f         mov byte [rdi], 0x2f                    ; '/'
                                                                       ; [0x2f:1]=0
0x0000895a      488b4560       mov rax, qword [rbp + 0x60]             ; ../coreutils-8.31/lib/fts.c:-598
0x0000895e      4883c701       add rdi, 1
0x00008962      488d5001       lea rdx, [rax + 1]
0x00008966      e87593ffff     call sym.imp.memmove
0x0000896b      0fb74570       movzx eax, word [rbp + 0x70]
0x0000896f      e95affffff     jmp 0x88ce
0x00008974      0f1f4000       nop dword [rax]
0x00008978      e86394ffff     call sym..plt.got
0x0000897d      e9ccfeffff     jmp 0x884e
0x00008982      80e6ef         and dh, 0xef
0x00008985      4189542448     mov dword [r12 + 0x48], edx
0x0000898a      e8c1e4ffff     call sym.fts_lfree
0x0000898f      49c744240800.  mov qword [r12 + 8], 0
0x00008998      be03000000     mov esi, 3
0x0000899d      4c89e7         mov rdi, r12
0x000089a0      e8bbecffff     call sym.fts_build
0x000089a5      4885c0         test rax, rax
0x000089a8      4989442408     mov qword [r12 + 8], rax
0x000089ad      0f84f1000000   je 0x8aa4
0x000089b3      4889c5         mov rbp, rax
0x000089b6      49c744240800.  mov qword [r12 + 8], 0
0x000089bf      e96effffff     jmp 0x8932
0x000089c4      0f1f4000       nop dword [rax]
0x000089c8      a801           test al, 1
0x000089ca      0f85a3fcffff   jne 0x8673
0x000089d0      488b7308       mov rsi, qword [rbx + 8]
0x000089d4      488d0dee3a00.  lea rcx, [0x0000c4c9]                   ; ".."
0x000089db      baffffffff     mov edx, 0xffffffff                     ; -1
0x000089e0      4c89e7         mov rdi, r12
0x000089e3      e888e8ffff     call sym.fts_safe_changedir
0x000089e8      85c0           test eax, eax
0x000089ea      0f8483fcffff   je 0x8673
0x000089f0      e8cb8fffff     call sym.imp.__errno_location
0x000089f5      418b7c2448     mov edi, dword [r12 + 0x48]
0x000089fa      8b00           mov eax, dword [rax]
0x000089fc      81cf00200000   or edi, 0x2000                          ; ../coreutils-8.31/lib/fts.c:-708
0x00008a02      894340         mov dword [rbx + 0x40], eax
0x00008a05      41897c2448     mov dword [r12 + 0x48], edi
0x00008a0a      e969fcffff     jmp 0x8678
0x00008a0f      90             nop
0x00008a10      4c89e7         mov rdi, r12
0x00008a13      e8d8e6ffff     call sym.restore_initial_cwd
0x00008a18      85c0           test eax, eax
0x00008a1a      75d4           jne 0x89f0
0x00008a1c      e952fcffff     jmp 0x8673                              ; ../coreutils-8.31/lib/fts.c:-700
0x00008a21      0f1f80000000.  nop dword [rax]
0x00008a28      b806000000     mov eax, 6
0x00008a2d      498d742458     lea rsi, [r12 + 0x58]
0x00008a32      4889da         mov rdx, rbx
0x00008a35      66894370       mov word [rbx + 0x70], ax               ; ../coreutils-8.31/lib/fts.c:-790
0x00008a39      e862ebffff     call sym.leave_dir.isra.12
0x00008a3e      418b7c2448     mov edi, dword [r12 + 0x48]
0x00008a43      e94bfcffff     jmp 0x8693
0x00008a48      0f1f84000000.  nop dword [rax + rax]
0x00008a50      80bb09010000.  cmp byte [rbx + 0x109], 0
0x00008a57      0f852cfeffff   jne 0x8889
0x00008a5d      e949feffff     jmp 0x88ab
0x00008a62      498b6c2408     mov rbp, qword [r12 + 8]
0x00008a67      e94affffff     jmp 0x89b6
0x00008a6c      f6c402         test ah, 2
0x00008a6f      0f8498010000   je 0x8c0d
0x00008a75      89fe           mov esi, edi
0x00008a77      ba01000000     mov edx, 1
0x00008a7c      4c89e7         mov rdi, r12
0x00008a7f      e8fce5ffff     call sym.cwd_advance_fd                 ; ../coreutils-8.31/lib/fts.c:-815
0x00008a84      8b7b44         mov edi, dword [rbx + 0x44]
0x00008a87      e9e2fbffff     jmp 0x866e
0x00008a8c      418b742448     mov esi, dword [r12 + 0x48]
0x00008a91      40f6c604       test sil, 4
0x00008a95      0f8401020000   je 0x8c9c
0x00008a9b      49892c24       mov qword [r12], rbp
0x00008a9f      e942feffff     jmp 0x88e6
0x00008aa4      418b7c2448     mov edi, dword [r12 + 0x48]
0x00008aa9      f7c700200000   test edi, 0x2000
0x00008aaf      0f85e9fbffff   jne 0x869e
0x00008ab5      448b4d40       mov r9d, dword [rbp + 0x40]
0x00008ab9      4585c9         test r9d, r9d
0x00008abc      7412           je 0x8ad0                               ; ../coreutils-8.31/lib/fts.c:-755
0x00008abe      66837d7004     cmp word [rbp + 0x70], 4
0x00008ac3      740b           je 0x8ad0
0x00008ac5      41b807000000   mov r8d, 7
0x00008acb      6644894570     mov word [rbp + 0x70], r8w              ; ../coreutils-8.31/lib/fts.c:-774
0x00008ad0      498d742458     lea rsi, [r12 + 0x58]
0x00008ad5      4889ea         mov rdx, rbp
0x00008ad8      e8c3eaffff     call sym.leave_dir.isra.12
0x00008add      e938fcffff     jmp 0x871a
0x00008ae2      4889df         mov rdi, rbx
0x00008ae5      31ed           xor ebp, ebp
0x00008ae7      e8f492ffff     call sym..plt.got
0x00008aec      e8cf8effff     call sym.imp.__errno_location
0x00008af1      c70000000000   mov dword [rax], 0
0x00008af7      49c704240000.  mov qword [r12], 0
0x00008aff      e916fcffff     jmp 0x871a
0x00008b04      0f1f4000       nop dword [rax]
0x00008b08      488b5d08       mov rbx, qword [rbp + 8]
0x00008b0c      48837b6800     cmp qword [rbx + 0x68], 0
0x00008b11      7511           jne 0x8b24
0x00008b13      418b442448     mov eax, dword [r12 + 0x48]
0x00008b18      83e018         and eax, 0x18
0x00008b1b      83f818         cmp eax, 0x18
0x00008b1e      0f8459010000   je 0x8c7d
0x00008b24      31d2           xor edx, edx
0x00008b26      4889ee         mov rsi, rbp
0x00008b29      4c89e7         mov rdi, r12
0x00008b2c      e8afdfffff     call sym.fts_stat
0x00008b31      8b9590000000   mov edx, dword [rbp + 0x90]
0x00008b37      66894570       mov word [rbp + 0x70], ax
0x00008b3b      81e200f00000   and edx, 0xf000
0x00008b41      81fa00400000   cmp edx, 0x4000
0x00008b47      0f858ffdffff   jne 0x88dc
0x00008b4d      48837d5800     cmp qword [rbp + 0x58], 0               ; ../coreutils-8.31/lib/fts.c:-805
0x00008b52      0f8416010000   je 0x8c6e
0x00008b58      488b4b68       mov rcx, qword [rbx + 0x68]             ; ../coreutils-8.31/lib/fts.c:-804
0x00008b5c      488d51ff       lea rdx, [rcx - 1]
0x00008b60      4883fafd       cmp rdx, 0xfffffffffffffffd
0x00008b64      7704           ja 0x8b6a
0x00008b66      48895368       mov qword [rbx + 0x68], rdx
0x00008b6a      6683f801       cmp ax, 1
0x00008b6e      0f85a6fbffff   jne 0x871a
0x00008b74      e97dfdffff     jmp 0x88f6                              ; ../coreutils-8.31/lib/fts.c:-796
0x00008b79      0f1f80000000.  nop dword [rax]
0x00008b80      488b4348       mov rax, qword [rbx + 0x48]
0x00008b84      498b542420     mov rdx, qword [r12 + 0x20]
0x00008b89      be03000000     mov esi, 3
0x00008b8e      49891c24       mov qword [r12], rbx
0x00008b92      4c89e7         mov rdi, r12
0x00008b95      c6040200       mov byte [rdx + rax], 0                 ; ../coreutils-8.31/lib/fts.c:-777
0x00008b99      e8c2eaffff     call sym.fts_build
0x00008b9e      4885c0         test rax, rax
0x00008ba1      4889c3         mov rbx, rax
0x00008ba4      7452           je 0x8bf8
0x00008ba6      4889ef         mov rdi, rbp
0x00008ba9      4889dd         mov rbp, rbx
0x00008bac      e82f92ffff     call sym..plt.got
0x00008bb1      e97cfdffff     jmp 0x8932
0x00008bb6      662e0f1f8400.  nop word cs:[rax + rax]
0x00008bc0      8b7d44         mov edi, dword [rbp + 0x44]             ; ../coreutils-8.31/lib/fts.c:-754
0x00008bc3      e8a88fffff     call sym.imp.close
0x00008bc8      e918fbffff     jmp 0x86e5                              ; ../coreutils-8.31/lib/fts.c:-757
0x00008bcd      ba01000000     mov edx, 1
0x00008bd2      4889de         mov rsi, rbx
0x00008bd5      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/fts.c:-745
0x00008bd8      e803dfffff     call sym.fts_stat
0x00008bdd      6683f801       cmp ax, 1
0x00008be1      66894370       mov word [rbx + 0x70], ax
0x00008be5      745a           je 0x8c41                               ; ../coreutils-8.31/lib/fts.c:-744
0x00008be7      be03000000     mov esi, 3
0x00008bec      4889dd         mov rbp, rbx
0x00008bef      66897374       mov word [rbx + 0x74], si
0x00008bf3      e93afdffff     jmp 0x8932
0x00008bf8      41f644244920   test byte [r12 + 0x49], 0x20
0x00008bfe      0f859afaffff   jne 0x869e
0x00008c04      488b5d08       mov rbx, qword [rbp + 8]
0x00008c08      e90bfaffff     jmp 0x8618
0x00008c0d      e88e90ffff     call sym.imp.fchdir
0x00008c12      85c0           test eax, eax
0x00008c14      7413           je 0x8c29
0x00008c16      e8a58dffff     call sym.imp.__errno_location
0x00008c1b      8b00           mov eax, dword [rax]
0x00008c1d      894340         mov dword [rbx + 0x40], eax
0x00008c20      41814c244800.  or dword [r12 + 0x48], 0x2000           ; [0x2000:4]=0xfffeabe9
0x00008c29      8b7b44         mov edi, dword [rbx + 0x44]             ; ../coreutils-8.31/lib/fts.c:-741
0x00008c2c      e93dfaffff     jmp 0x866e
0x00008c31      41814c244800.  or dword [r12 + 0x48], 0x2000           ; [0x2000:4]=0xfffeabe9
0x00008c3a      31ed           xor ebp, ebp
0x00008c3c      e9d9faffff     jmp 0x871a
0x00008c41      418b742448     mov esi, dword [r12 + 0x48]
0x00008c46      40f6c604       test sil, 4
0x00008c4a      759b           jne 0x8be7
0x00008c4c      418b7c242c     mov edi, dword [r12 + 0x2c]
0x00008c51      488d15723800.  lea rdx, [0x0000c4ca]                   ; ../coreutils-8.31/lib/fts.c:-738 ; "."
0x00008c58      e8d3e5ffff     call sym.diropen.isra.6
0x00008c5d      85c0           test eax, eax
0x00008c5f      894344         mov dword [rbx + 0x44], eax
0x00008c62      787c           js 0x8ce0
0x00008c64      66834b7202     or word [rbx + 0x72], 2
0x00008c69      e979ffffff     jmp 0x8be7
0x00008c6e      6683f801       cmp ax, 1
0x00008c72      0f85a2faffff   jne 0x871a
0x00008c78      e970fcffff     jmp 0x88ed
0x00008c7d      418b74242c     mov esi, dword [r12 + 0x2c]
0x00008c82      4889df         mov rdi, rbx
0x00008c85      e886e3ffff     call sym.leaf_optimization
0x00008c8a      83f802         cmp eax, 2
0x00008c8d      0f8591feffff   jne 0x8b24
0x00008c93      0fb74570       movzx eax, word [rbp + 0x70]
0x00008c97      e940fcffff     jmp 0x88dc
0x00008c9c      418b7c242c     mov edi, dword [r12 + 0x2c]
0x00008ca1      488d15223800.  lea rdx, [0x0000c4ca]                   ; ../coreutils-8.31/lib/fts.c:-730 ; "."
0x00008ca8      e883e5ffff     call sym.diropen.isra.6
0x00008cad      85c0           test eax, eax
0x00008caf      894544         mov dword [rbp + 0x44], eax
0x00008cb2      780e           js 0x8cc2                               ; ../coreutils-8.31/lib/fts.c:-727
0x00008cb4      66834d7202     or word [rbp + 0x72], 2
0x00008cb9      0fb74570       movzx eax, word [rbp + 0x70]
0x00008cbd      e90cfcffff     jmp 0x88ce
0x00008cc2      e8f98cffff     call sym.imp.__errno_location
0x00008cc7      8b00           mov eax, dword [rax]
0x00008cc9      41bb07000000   mov r11d, 7
0x00008ccf      6644895d70     mov word [rbp + 0x70], r11w
0x00008cd4      894540         mov dword [rbp + 0x40], eax
0x00008cd7      49892c24       mov qword [r12], rbp
0x00008cdb      e93afaffff     jmp 0x871a
0x00008ce0      e8db8cffff     call sym.imp.__errno_location
0x00008ce5      8b00           mov eax, dword [rax]
0x00008ce7      bf07000000     mov edi, 7
0x00008cec      66897b70       mov word [rbx + 0x70], di
0x00008cf0      894340         mov dword [rbx + 0x40], eax
0x00008cf3      e9effeffff     jmp 0x8be7
0x00008cf8      0f1f84000000.  nop dword [rax + rax]
;-- rpl_fts_set:
0x00008d00      83fa04         cmp edx, 4
0x00008d03      770b           ja 0x8d10
0x00008d05      66895674       mov word [rsi + 0x74], dx
0x00008d09      31c0           xor eax, eax
0x00008d0b      c3             ret
0x00008d0c      0f1f4000       nop dword [rax]
0x00008d10      4883ec08       sub rsp, 8
0x00008d14      e8a78cffff     call sym.imp.__errno_location
0x00008d19      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x23800000
0x00008d1f      b801000000     mov eax, 1
0x00008d24      4883c408       add rsp, 8
0x00008d28      c3             ret
0x00008d29      0f1f80000000.  nop dword [rax]
;-- rpl_fts_children:
0x00008d30      4156           push r14
0x00008d32      4155           push r13
0x00008d34      4154           push r12
0x00008d36      55             push rbp
0x00008d37      4189f4         mov r12d, esi
0x00008d3a      53             push rbx
0x00008d3b      4889fb         mov rbx, rdi
0x00008d3e      e87d8cffff     call sym.imp.__errno_location
0x00008d43      41f7c4ffefff.  test r12d, 0xffffefff
0x00008d4a      4989c5         mov r13, rax
0x00008d4d      0f85e5000000   jne 0x8e38
0x00008d53      488b2b         mov rbp, qword [rbx]
0x00008d56      c70000000000   mov dword [rax], 0
0x00008d5c      f6434920       test byte [rbx + 0x49], 0x20
0x00008d60      757e           jne 0x8de0
0x00008d62      0fb74570       movzx eax, word [rbp + 0x70]
0x00008d66      6683f809       cmp ax, 9
0x00008d6a      7464           je 0x8dd0
0x00008d6c      6683f801       cmp ax, 1
0x00008d70      756e           jne 0x8de0
0x00008d72      488b7b08       mov rdi, qword [rbx + 8]
0x00008d76      4885ff         test rdi, rdi
0x00008d79      7405           je 0x8d80
0x00008d7b      e8d0e0ffff     call sym.fts_lfree
0x00008d80      4181fc001000.  cmp r12d, 0x1000
0x00008d87      41be01000000   mov r14d, 1
0x00008d8d      750d           jne 0x8d9c
0x00008d8f      814b48001000.  or dword [rbx + 0x48], 0x1000           ; [0x1000:4]=8
0x00008d96      41be02000000   mov r14d, 2
0x00008d9c      48837d5800     cmp qword [rbp + 0x58], 0
0x00008da1      7512           jne 0x8db5
0x00008da3      488b4530       mov rax, qword [rbp + 0x30]
0x00008da7      80382f         cmp byte [rax], 0x2f
0x00008daa      7409           je 0x8db5
0x00008dac      8b7348         mov esi, dword [rbx + 0x48]
0x00008daf      40f6c604       test sil, 4
0x00008db3      743b           je 0x8df0
0x00008db5      4489f6         mov esi, r14d
0x00008db8      4889df         mov rdi, rbx
0x00008dbb      e8a0e8ffff     call sym.fts_build
0x00008dc0      48894308       mov qword [rbx + 8], rax
0x00008dc4      5b             pop rbx
0x00008dc5      5d             pop rbp
0x00008dc6      415c           pop r12
0x00008dc8      415d           pop r13
0x00008dca      415e           pop r14
0x00008dcc      c3             ret
0x00008dcd      0f1f00         nop dword [rax]
0x00008dd0      5b             pop rbx
0x00008dd1      488b4510       mov rax, qword [rbp + 0x10]
0x00008dd5      5d             pop rbp
0x00008dd6      415c           pop r12
0x00008dd8      415d           pop r13
0x00008dda      415e           pop r14
0x00008ddc      c3             ret
0x00008ddd      0f1f00         nop dword [rax]
0x00008de0      5b             pop rbx
0x00008de1      31c0           xor eax, eax
0x00008de3      5d             pop rbp
0x00008de4      415c           pop r12
0x00008de6      415d           pop r13
0x00008de8      415e           pop r14
0x00008dea      c3             ret
0x00008deb      0f1f440000     nop dword [rax + rax]
0x00008df0      8b7b2c         mov edi, dword [rbx + 0x2c]
0x00008df3      488d15d03600.  lea rdx, [0x0000c4ca]                   ; "."
0x00008dfa      e831e4ffff     call sym.diropen.isra.6
0x00008dff      85c0           test eax, eax
0x00008e01      89c5           mov ebp, eax
0x00008e03      7854           js 0x8e59
0x00008e05      4489f6         mov esi, r14d
0x00008e08      4889df         mov rdi, rbx
0x00008e0b      e850e8ffff     call sym.fts_build
0x00008e10      f6434902       test byte [rbx + 0x49], 2
0x00008e14      48894308       mov qword [rbx + 8], rax
0x00008e18      752e           jne 0x8e48
0x00008e1a      89ef           mov edi, ebp
0x00008e1c      e87f8effff     call sym.imp.fchdir
0x00008e21      85c0           test eax, eax
0x00008e23      7543           jne 0x8e68
0x00008e25      89ef           mov edi, ebp
0x00008e27      e8448dffff     call sym.imp.close
0x00008e2c      488b4308       mov rax, qword [rbx + 8]
0x00008e30      eb92           jmp 0x8dc4
0x00008e32      660f1f440000   nop word [rax + rax]
0x00008e38      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x23800000
0x00008e3e      31c0           xor eax, eax
0x00008e40      e97fffffff     jmp 0x8dc4
0x00008e45      0f1f00         nop dword [rax]
0x00008e48      ba01000000     mov edx, 1
0x00008e4d      89ee           mov esi, ebp
0x00008e4f      4889df         mov rdi, rbx
0x00008e52      e829e2ffff     call sym.cwd_advance_fd
0x00008e57      ebd3           jmp 0x8e2c
0x00008e59      48c743080000.  mov qword [rbx + 8], 0
0x00008e61      31c0           xor eax, eax
0x00008e63      e95cffffff     jmp 0x8dc4
0x00008e68      418b5d00       mov ebx, dword [r13]
0x00008e6c      89ef           mov edi, ebp
0x00008e6e      e8fd8cffff     call sym.imp.close
0x00008e73      31c0           xor eax, eax
0x00008e75      41895d00       mov dword [r13], ebx
0x00008e79      e946ffffff     jmp 0x8dc4
0x00008e7e      6690           nop
;-- rpl_mbrtowc:
0x00008e80      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00008e82      4154           push r12
0x00008e84      4989f5         mov r13, rsi
0x00008e87      55             push rbp
0x00008e88      53             push rbx
0x00008e89      4889fb         mov rbx, rdi
0x00008e8c      4989d4         mov r12, rdx
0x00008e8f      4883ec18       sub rsp, 0x18
0x00008e93      64488b042528.  mov rax, qword fs:[0x28]
0x00008e9c      4889442408     mov qword [rsp + 8], rax
0x00008ea1      31c0           xor eax, eax
0x00008ea3      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00008ea8      4885ff         test rdi, rdi
0x00008eab      480f44d8       cmove rbx, rax
0x00008eaf      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00008eb2      e8398cffff     call sym.imp.mbrtowc
0x00008eb7      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00008ebb      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00008ebe      7620           jbe 0x8ee0                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00008ec0      4d85e4         test r12, r12
0x00008ec3      741b           je 0x8ee0
0x00008ec5      31ff           xor edi, edi
0x00008ec7      e8d4010000     call sym.hard_locale
0x00008ecc      84c0           test al, al
0x00008ece      7510           jne 0x8ee0
0x00008ed0      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00008ed5      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x00008eda      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00008edc      0f1f4000       nop dword [rax]
0x00008ee0      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00008ee5      644833142528.  xor rdx, qword fs:[0x28]
0x00008eee      4889e8         mov rax, rbp
0x00008ef1      750b           jne 0x8efe
0x00008ef3      4883c418       add rsp, 0x18
0x00008ef7      5b             pop rbx
0x00008ef8      5d             pop rbp
0x00008ef9      415c           pop r12
0x00008efb      415d           pop r13
0x00008efd      c3             ret
0x00008efe      e8cd8bffff     call sym.imp.__stack_chk_fail
0x00008f03      662e0f1f8400.  nop word cs:[rax + rax]
0x00008f0d      0f1f00         nop dword [rax]
;-- close_stream:
0x00008f10      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00008f12      55             push rbp
0x00008f13      4889fd         mov rbp, rdi
0x00008f16      53             push rbx
0x00008f17      e8e48affff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x00008f1c      8b5d00         mov ebx, dword [rbp]
0x00008f1f      4889ef         mov rdi, rbp
0x00008f22      4989c4         mov r12, rax
0x00008f25      e8d6160000     call sym.rpl_fclose
0x00008f2a      83e320         and ebx, 0x20                           ; "@"
0x00008f2d      85db           test ebx, ebx
0x00008f2f      7517           jne 0x8f48
0x00008f31      85c0           test eax, eax
0x00008f33      740a           je 0x8f3f                               ; stdio.h:-186
0x00008f35      4d85e4         test r12, r12                           ; stdio.h:-178
0x00008f38      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00008f3d      7439           je 0x8f78
0x00008f3f      5b             pop rbx
0x00008f40      5d             pop rbp
0x00008f41      415c           pop r12
0x00008f43      c3             ret
0x00008f44      0f1f4000       nop dword [rax]
0x00008f48      85c0           test eax, eax
0x00008f4a      751c           jne 0x8f68
0x00008f4c      e86f8affff     call sym.imp.__errno_location
0x00008f51      c70000000000   mov dword [rax], 0
0x00008f57      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00008f5c      5b             pop rbx
0x00008f5d      5d             pop rbp
0x00008f5e      415c           pop r12
0x00008f60      c3             ret
0x00008f61      0f1f80000000.  nop dword [rax]
0x00008f68      5b             pop rbx
0x00008f69      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00008f6e      5d             pop rbp                                 ; stdio.h:-186
0x00008f6f      415c           pop r12
0x00008f71      c3             ret
0x00008f72      660f1f440000   nop word [rax + rax]
0x00008f78      e8438affff     call sym.imp.__errno_location
0x00008f7d      833809         cmp dword [rax], 9
0x00008f80      5b             pop rbx
0x00008f81      5d             pop rbp
0x00008f82      415c           pop r12                                 ; stdio.h:-178
0x00008f84      0f95c0         setne al
0x00008f87      0fb6c0         movzx eax, al
0x00008f8a      f7d8           neg eax
0x00008f8c      c3             ret
0x00008f8d      0f1f00         nop dword [rax]
;-- cycle_check_init:
0x00008f90      48c747100000.  mov qword [rdi + 0x10], 0               ; ../coreutils-8.31/lib/cycle-check.c:44
0x00008f98      c7471816f695.  mov dword [rdi + 0x18], 0x95f616        ; ../coreutils-8.31/lib/cycle-check.c:46 ; [0x95f616:4]=-1
0x00008f9f      c3             ret                                     ; ../coreutils-8.31/lib/cycle-check.c:47
;-- cycle_check:
0x00008fa0      817f1816f695.  cmp dword [rdi + 0x18], 0x95f616        ; ../coreutils-8.31/lib/cycle-check.c:59
0x00008fa7      755e           jne 0x9007
0x00008fa9      488b5710       mov rdx, qword [rdi + 0x10]             ; ../coreutils-8.31/lib/cycle-check.c:65
0x00008fad      488b4e08       mov rcx, qword [rsi + 8]
0x00008fb1      4885d2         test rdx, rdx
0x00008fb4      741a           je 0x8fd0
0x00008fb6      48390f         cmp qword [rdi], rcx
0x00008fb9      742d           je 0x8fe8
0x00008fbb      4c8d4201       lea r8, [rdx + 1]                       ; ../coreutils-8.31/lib/cycle-check.c:70
0x00008fbf      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/cycle-check.c:84
0x00008fc1      4c85c2         test rdx, r8                            ; ../coreutils-8.31/lib/cycle-check.c:70
0x00008fc4      4c894710       mov qword [rdi + 0x10], r8
0x00008fc8      7436           je 0x9000
0x00008fca      f3c3           ret                                     ; ../coreutils-8.31/lib/cycle-check.c:85
0x00008fcc      0f1f4000       nop dword [rax]
0x00008fd0      48c747100100.  mov qword [rdi + 0x10], 1               ; ../coreutils-8.31/lib/cycle-check.c:70
0x00008fd8      488b06         mov rax, qword [rsi]                    ; ../coreutils-8.31/lib/cycle-check.c:80
0x00008fdb      48890f         mov qword [rdi], rcx                    ; ../coreutils-8.31/lib/cycle-check.c:81
0x00008fde      48894708       mov qword [rdi + 8], rax                ; ../coreutils-8.31/lib/cycle-check.c:80
0x00008fe2      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/cycle-check.c:84
0x00008fe4      c3             ret
0x00008fe5      0f1f00         nop dword [rax]
0x00008fe8      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/cycle-check.c:65
0x00008fec      483906         cmp qword [rsi], rax
0x00008fef      75ca           jne 0x8fbb
0x00008ff1      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/cycle-check.c:66
0x00008ff6      c3             ret
0x00008ff7      660f1f840000.  nop word [rax + rax]
0x00009000      4d85c0         test r8, r8                             ; ../coreutils-8.31/lib/cycle-check.c:77
0x00009003      74ec           je 0x8ff1
0x00009005      ebd1           jmp 0x8fd8
0x00009007      488d0d423500.  lea rcx, obj.__PRETTY_FUNCTION__.3994   ; ../coreutils-8.31/lib/cycle-check.c:60 ; 0xc550 ; "cycle_check"
0x0000900e      488d35fb3400.  lea rsi, str..._coreutils_8.31_lib_cycle_check.c ; 0xc510 ; "../coreutils-8.31/lib/cycle-check.c"
0x00009015      488d3d183500.  lea rdi, str.state__magic____9827862    ; 0xc534 ; "state->magic == 9827862"
0x0000901c      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/cycle-check.c:59
0x00009020      ba3c000000     mov edx, 0x3c                           ; ../coreutils-8.31/lib/cycle-check.c:60 ; '<'
0x00009025      e8268bffff     call sym.imp.__assert_fail
0x0000902a      660f1f440000   nop word [rax + rax]
;-- open_safer:
0x00009030      4883ec58       sub rsp, 0x58                           ; ../coreutils-8.31/lib/open-safer.c:30
0x00009034      4889542430     mov qword [rsp + 0x30], rdx
0x00009039      31d2           xor edx, edx
0x0000903b      64488b042528.  mov rax, qword fs:[0x28]
0x00009044      4889442418     mov qword [rsp + 0x18], rax
0x00009049      31c0           xor eax, eax
0x0000904b      40f6c640       test sil, 0x40                          ; ../coreutils-8.31/lib/open-safer.c:33 ; segment.PHDR
0x0000904f      7527           jne 0x9078
0x00009051      31c0           xor eax, eax                            ; fcntl2.h:59   return __open_alias (__path, __oflag, __va_arg_pack ());
0x00009053      e8a88cffff     call sym.imp.open
0x00009058      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/open-safer.c:45
0x0000905a      e861150000     call sym.fd_safer
0x0000905f      488b4c2418     mov rcx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/open-safer.c:46
0x00009064      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000906d      752a           jne 0x9099
0x0000906f      4883c458       add rsp, 0x58
0x00009073      c3             ret
0x00009074      0f1f4000       nop dword [rax]
0x00009078      488d442460     lea rax, [rsp + 0x60]                   ; ../coreutils-8.31/lib/open-safer.c:36
0x0000907d      c70424100000.  mov dword [rsp], 0x10                   ; [0x10:4]=0x3e0003
0x00009084      8b542430       mov edx, dword [rsp + 0x30]             ; ../coreutils-8.31/lib/open-safer.c:40
0x00009088      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/open-safer.c:36
0x0000908d      488d442420     lea rax, [rsp + 0x20]
0x00009092      4889442410     mov qword [rsp + 0x10], rax
0x00009097      ebb8           jmp 0x9051
0x00009099      e8328affff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/open-safer.c:46
0x0000909e      6690           nop
;-- hard_locale:
0x000090a0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x000090a4      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x000090a6      e8158cffff     call sym.imp.setlocale
0x000090ab      4889c2         mov rdx, rax
0x000090ae      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x000090b3      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x000090b6      741d           je 0x90d5
0x000090b8      488d3d9d3400.  lea rdi, [0x0000c55c]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x000090bf      b902000000     mov ecx, 2
0x000090c4      4889d6         mov rsi, rdx
0x000090c7      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000090c9      0f97c1         seta cl
0x000090cc      80d900         sbb cl, 0
0x000090cf      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x000090d1      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x000090d3      750b           jne 0x90e0
0x000090d5      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x000090d9      c3             ret
0x000090da      660f1f440000   nop word [rax + rax]
0x000090e0      488d3d773400.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0xc55e ; "POSIX"
0x000090e7      b906000000     mov ecx, 6
0x000090ec      4889d6         mov rsi, rdx
0x000090ef      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000090f1      0f97c0         seta al
0x000090f4      1c00           sbb al, 0
0x000090f6      84c0           test al, al
0x000090f8      0f95c0         setne al
0x000090fb      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x000090ff      c3             ret
;-- next_prime:
0x00009100      4883ff0a       cmp rdi, 0xa
0x00009104      b80a000000     mov eax, 0xa
0x00009109      49b9abaaaaaa.  movabs r9, 0xaaaaaaaaaaaaaaab
0x00009113      480f42f8       cmovb rdi, rax
0x00009117      4883cf01       or rdi, 1                               ; ../coreutils-8.31/lib/hash.c:470
0x0000911b      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/hash.c:472
0x0000911f      746e           je 0x918f
0x00009121      0f1f80000000.  nop dword [rax]
0x00009128      4889f8         mov rax, rdi
0x0000912b      4889f9         mov rcx, rdi
0x0000912e      49f7e1         mul r9
0x00009131      4889d0         mov rax, rdx
0x00009134      48d1e8         shr rax, 1
0x00009137      488d0440       lea rax, [rax + rax*2]
0x0000913b      4829c1         sub rcx, rax
0x0000913e      4883ff09       cmp rdi, 9                              ; ../coreutils-8.31/lib/hash.c:449
0x00009142      4889c8         mov rax, rcx
0x00009145      7639           jbe 0x9180
0x00009147      4885c9         test rcx, rcx
0x0000914a      7439           je 0x9185
0x0000914c      41b810000000   mov r8d, 0x10
0x00009152      be09000000     mov esi, 9                              ; ../coreutils-8.31/lib/hash.c:447
0x00009157      b903000000     mov ecx, 3                              ; ../coreutils-8.31/lib/hash.c:446
0x0000915c      eb0b           jmp 0x9169
0x0000915e      6690           nop
0x00009160      4983c008       add r8, 8
0x00009164      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:449
0x00009167      741c           je 0x9185
0x00009169      4883c102       add rcx, 2                              ; ../coreutils-8.31/lib/hash.c:453
0x0000916d      31d2           xor edx, edx
0x0000916f      4889f8         mov rax, rdi
0x00009172      48f7f1         div rcx
0x00009175      4c01c6         add rsi, r8                             ; ../coreutils-8.31/lib/hash.c:452
0x00009178      4839fe         cmp rsi, rdi                            ; ../coreutils-8.31/lib/hash.c:449
0x0000917b      4889d0         mov rax, rdx
0x0000917e      72e0           jb 0x9160
0x00009180      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:472
0x00009183      750a           jne 0x918f
0x00009185      4883c702       add rdi, 2                              ; ../coreutils-8.31/lib/hash.c:473
0x00009189      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/hash.c:472
0x0000918d      7599           jne 0x9128
0x0000918f      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/hash.c:476
0x00009192      c3             ret
0x00009193      0f1f00         nop dword [rax]
0x00009196      662e0f1f8400.  nop word cs:[rax + rax]
;-- raw_hasher:
0x000091a0      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/hash.c:487
0x000091a3      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/hash.c:494
0x000091a5      48c1c803       ror rax, 3                              ; ../coreutils-8.31/lib/bitrotate.h:87
0x000091a9      48f7f6         div rsi                                 ; ../coreutils-8.31/lib/hash.c:494
0x000091ac      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/hash.c:495
0x000091af      c3             ret
;-- raw_comparator:
0x000091b0      4839f7         cmp rdi, rsi                            ; ../coreutils-8.31/lib/hash.c:500
0x000091b3      0f94c0         sete al
0x000091b6      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:502
0x000091b7      660f1f840000.  nop word [rax + rax]
;-- safe_hasher:
0x000091c0      53             push rbx                                ; ../coreutils-8.31/lib/hash.c:250
0x000091c1      4889fb         mov rbx, rdi
0x000091c4      4889f7         mov rdi, rsi
0x000091c7      488b7310       mov rsi, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/hash.c:251
0x000091cb      ff5330         call qword [rbx + 0x30]
0x000091ce      48394310       cmp qword [rbx + 0x10], rax             ; ../coreutils-8.31/lib/hash.c:252
0x000091d2      7609           jbe 0x91dd
0x000091d4      48c1e004       shl rax, 4                              ; ../coreutils-8.31/lib/hash.c:254
0x000091d8      480303         add rax, qword [rbx]
0x000091db      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash.c:255
0x000091dc      c3             ret
0x000091dd      e8ce87ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/hash.c:253
0x000091e2      0f1f4000       nop dword [rax]
0x000091e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_find_entry:
0x000091f0      4156           push r14                                ; ../coreutils-8.31/lib/hash.c:792
0x000091f2      4155           push r13
0x000091f4      4989d6         mov r14, rdx
0x000091f7      4154           push r12
0x000091f9      55             push rbp
0x000091fa      4989fc         mov r12, rdi
0x000091fd      53             push rbx
0x000091fe      4889f5         mov rbp, rsi
0x00009201      4189cd         mov r13d, ecx
0x00009204      e8b7ffffff     call sym.safe_hasher                    ; ../coreutils-8.31/lib/hash.c:793
0x00009209      498906         mov qword [r14], rax                    ; ../coreutils-8.31/lib/hash.c:796
0x0000920c      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:799
0x0000920f      4885f6         test rsi, rsi
0x00009212      0f84e8000000   je 0x9300
0x00009218      4839ee         cmp rsi, rbp                            ; ../coreutils-8.31/lib/hash.c:803
0x0000921b      4889c3         mov rbx, rax
0x0000921e      0f848f000000   je 0x92b3
0x00009224      4889ef         mov rdi, rbp
0x00009227      41ff542438     call qword [r12 + 0x38]
0x0000922c      84c0           test al, al
0x0000922e      0f857c000000   jne 0x92b0
0x00009234      488b4308       mov rax, qword [rbx + 8]                ; ../coreutils-8.31/lib/hash.c:828
0x00009238      4885c0         test rax, rax
0x0000923b      0f84bf000000   je 0x9300
0x00009241      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:830
0x00009244      4839f5         cmp rbp, rsi
0x00009247      7520           jne 0x9269
0x00009249      eb31           jmp 0x927c
0x0000924b      0f1f440000     nop dword [rax + rax]
0x00009250      488b5b08       mov rbx, qword [rbx + 8]                ; ../coreutils-8.31/lib/hash.c:828
0x00009254      488b4308       mov rax, qword [rbx + 8]
0x00009258      4885c0         test rax, rax
0x0000925b      0f849f000000   je 0x9300
0x00009261      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:830
0x00009264      4839ee         cmp rsi, rbp
0x00009267      7413           je 0x927c
0x00009269      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/hash.c:831
0x0000926c      41ff542438     call qword [r12 + 0x38]
0x00009271      84c0           test al, al
0x00009273      74db           je 0x9250
0x00009275      488b4308       mov rax, qword [rbx + 8]
0x00009279      488b30         mov rsi, qword [rax]
0x0000927c      4584ed         test r13b, r13b                         ; ../coreutils-8.31/lib/hash.c:835
0x0000927f      741d           je 0x929e
0x00009281      488b5008       mov rdx, qword [rax + 8]                ; ../coreutils-8.31/lib/hash.c:841
0x00009285      48895308       mov qword [rbx + 8], rdx
0x00009289      48c700000000.  mov qword [rax], 0                      ; ../coreutils-8.31/lib/hash.c:778
0x00009290      498b542448     mov rdx, qword [r12 + 0x48]             ; ../coreutils-8.31/lib/hash.c:779
0x00009295      48895008       mov qword [rax + 8], rdx
0x00009299      4989442448     mov qword [r12 + 0x48], rax             ; ../coreutils-8.31/lib/hash.c:780
0x0000929e      5b             pop rbx
0x0000929f      4889f0         mov rax, rsi
0x000092a2      5d             pop rbp
0x000092a3      415c           pop r12
0x000092a5      415d           pop r13
0x000092a7      415e           pop r14
0x000092a9      c3             ret
0x000092aa      660f1f440000   nop word [rax + rax]
0x000092b0      488b33         mov rsi, qword [rbx]
0x000092b3      4584ed         test r13b, r13b
0x000092b6      74e6           je 0x929e
0x000092b8      488b4308       mov rax, qword [rbx + 8]
0x000092bc      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:672
0x000092bf      742f           je 0x92f0
0x000092c1      f30f6f00       movdqu xmm0, xmmword [rax]
0x000092c5      0f1103         movups xmmword [rbx], xmm0
0x000092c8      48c700000000.  mov qword [rax], 0
0x000092cf      498b542448     mov rdx, qword [r12 + 0x48]             ; ../coreutils-8.31/lib/hash.c:388
0x000092d4      48895008       mov qword [rax + 8], rdx
0x000092d8      4989442448     mov qword [r12 + 0x48], rax
0x000092dd      4889f0         mov rax, rsi
0x000092e0      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash.c:398
0x000092e1      5d             pop rbp
0x000092e2      415c           pop r12
0x000092e4      415d           pop r13
0x000092e6      415e           pop r14
0x000092e8      c3             ret
0x000092e9      0f1f80000000.  nop dword [rax]
0x000092f0      48c703000000.  mov qword [rbx], 0
0x000092f7      eba5           jmp 0x929e
0x000092f9      0f1f80000000.  nop dword [rax]
0x00009300      31f6           xor esi, esi
0x00009302      5b             pop rbx
0x00009303      4889f0         mov rax, rsi
0x00009306      5d             pop rbp
0x00009307      415c           pop r12
0x00009309      415d           pop r13                                 ; ../coreutils-8.31/lib/hash.c:401
0x0000930b      415e           pop r14
0x0000930d      c3             ret
0x0000930e      6690           nop
;-- check_tuning.isra.0:
0x00009310      488b17         mov rdx, qword [rdi]
0x00009313      488d0dc63200.  lea rcx, obj.default_tuning             ; 0xc5e0
0x0000931a      b801000000     mov eax, 1
0x0000931f      4839ca         cmp rdx, rcx
0x00009322      7461           je 0x9385
0x00009324      f30f104208     movss xmm0, dword [rdx + 8]
0x00009329      0f2e05c43200.  ucomiss xmm0, dword [0x0000c5f4]
0x00009330      764e           jbe 0x9380
0x00009332      f30f100dbe32.  movss xmm1, dword [0x0000c5f8]          ; [0xc5f8:4]=0x3f666666
0x0000933a      0f2ec8         ucomiss xmm1, xmm0
0x0000933d      7641           jbe 0x9380
0x0000933f      f30f104a0c     movss xmm1, dword [rdx + 0xc]           ; ../coreutils-8.31/lib/hash.c:408
0x00009344      0f2e0db13200.  ucomiss xmm1, dword [0x0000c5fc]
0x0000934b      7633           jbe 0x9380
0x0000934d      f30f100a       movss xmm1, dword [rdx]
0x00009351      0f2e0da83200.  ucomiss xmm1, dword [0x0000c600]
0x00009358      7226           jb 0x9380
0x0000935a      f30f580d9232.  addss xmm1, dword [0x0000c5f4]          ; ../coreutils-8.31/lib/hash.c:737
0x00009362      f30f105204     movss xmm2, dword [rdx + 4]
0x00009367      0f2ed1         ucomiss xmm2, xmm1
0x0000936a      7614           jbe 0x9380
0x0000936c      f30f101d9032.  movss xmm3, dword [0x0000c604]          ; [0xc604:4]=0x3f800000
0x00009374      0f2eda         ucomiss xmm3, xmm2                      ; ../coreutils-8.31/lib/hash.c:738
0x00009377      7207           jb 0x9380
0x00009379      0f2ec1         ucomiss xmm0, xmm1
0x0000937c      7707           ja 0x9385
0x0000937e      6690           nop
0x00009380      48890f         mov qword [rdi], rcx
0x00009383      31c0           xor eax, eax
0x00009385      f3c3           ret
0x00009387      660f1f840000.  nop word [rax + rax]
;-- transfer_entries:
0x00009390      4157           push r15
0x00009392      4156           push r14
0x00009394      4155           push r13                                ; ../coreutils-8.31/lib/hash.c:760
0x00009396      4154           push r12
0x00009398      55             push rbp                                ; ../coreutils-8.31/lib/hash.c:749
0x00009399      53             push rbx
0x0000939a      4883ec08       sub rsp, 8
0x0000939e      4c8b26         mov r12, qword [rsi]
0x000093a1      4c3b6608       cmp r12, qword [rsi + 8]
0x000093a5      0f83dd000000   jae 0x9488
0x000093ab      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/hash.c:752
0x000093ae      4989f5         mov r13, rsi
0x000093b1      4189d6         mov r14d, edx
0x000093b4      0f1f4000       nop dword [rax]
0x000093b8      4d8b3c24       mov r15, qword [r12]
0x000093bc      4d85ff         test r15, r15
0x000093bf      0f84b5000000   je 0x947a
0x000093c5      498b5c2408     mov rbx, qword [r12 + 8]
0x000093ca      4885db         test rbx, rbx
0x000093cd      751d           jne 0x93ec
0x000093cf      eb5a           jmp 0x942b
0x000093d1      0f1f80000000.  nop dword [rax]
0x000093d8      488b4808       mov rcx, qword [rax + 8]
0x000093dc      4885d2         test rdx, rdx
0x000093df      48894b08       mov qword [rbx + 8], rcx                ; ../coreutils-8.31/lib/bitrotate.h:557
0x000093e3      48895808       mov qword [rax + 8], rbx
0x000093e7      4889d3         mov rbx, rdx
0x000093ea      743b           je 0x9427
0x000093ec      4c8b3b         mov r15, qword [rbx]
0x000093ef      4889ef         mov rdi, rbp
0x000093f2      4c89fe         mov rsi, r15
0x000093f5      e8c6fdffff     call sym.safe_hasher
0x000093fa      48833800       cmp qword [rax], 0
0x000093fe      488b5308       mov rdx, qword [rbx + 8]                ; ../coreutils-8.31/lib/bitrotate.h:329
0x00009402      75d4           jne 0x93d8
0x00009404      4c8938         mov qword [rax], r15
0x00009407      4883451801     add qword [rbp + 0x18], 1
0x0000940c      4885d2         test rdx, rdx
0x0000940f      48c703000000.  mov qword [rbx], 0
0x00009416      488b4548       mov rax, qword [rbp + 0x48]
0x0000941a      48894308       mov qword [rbx + 8], rax
0x0000941e      48895d48       mov qword [rbp + 0x48], rbx             ; ../coreutils-8.31/lib/bitrotate.h:-285
0x00009422      4889d3         mov rbx, rdx                            ; ../coreutils-8.31/lib/bitrotate.h:-283
0x00009425      75c5           jne 0x93ec
0x00009427      4d8b3c24       mov r15, qword [r12]
0x0000942b      4584f6         test r14b, r14b
0x0000942e      49c744240800.  mov qword [r12 + 8], 0                  ; ../coreutils-8.31/lib/bitrotate.h:-277
0x00009437      7541           jne 0x947a
0x00009439      4c89fe         mov rsi, r15
0x0000943c      4889ef         mov rdi, rbp
0x0000943f      e87cfdffff     call sym.safe_hasher
0x00009444      48833800       cmp qword [rax], 0
0x00009448      4889c3         mov rbx, rax
0x0000944b      7453           je 0x94a0
0x0000944d      488b4548       mov rax, qword [rbp + 0x48]
0x00009451      4885c0         test rax, rax
0x00009454      745a           je 0x94b0
0x00009456      488b5008       mov rdx, qword [rax + 8]
0x0000945a      48895548       mov qword [rbp + 0x48], rdx
0x0000945e      488b5308       mov rdx, qword [rbx + 8]                ; ../coreutils-8.31/lib/bitrotate.h:-255
0x00009462      4c8938         mov qword [rax], r15
0x00009465      48895008       mov qword [rax + 8], rdx
0x00009469      48894308       mov qword [rbx + 8], rax
0x0000946d      49c704240000.  mov qword [r12], 0                      ; ../coreutils-8.31/lib/bitrotate.h:-250
0x00009475      49836d1801     sub qword [r13 + 0x18], 1
0x0000947a      4983c410       add r12, 0x10                           ; ../coreutils-8.31/lib/bitrotate.h:-249
0x0000947e      4d396508       cmp qword [r13 + 8], r12                ; ../coreutils-8.31/lib/bitrotate.h:-250
0x00009482      0f8730ffffff   ja 0x93b8
0x00009488      4883c408       add rsp, 8
0x0000948c      b801000000     mov eax, 1
0x00009491      5b             pop rbx
0x00009492      5d             pop rbp
0x00009493      415c           pop r12
0x00009495      415d           pop r13                                 ; ../coreutils-8.31/lib/bitrotate.h:-241
0x00009497      415e           pop r14
0x00009499      415f           pop r15
0x0000949b      c3             ret
0x0000949c      0f1f4000       nop dword [rax]
0x000094a0      4c8938         mov qword [rax], r15
0x000094a3      4883451801     add qword [rbp + 0x18], 1
0x000094a8      ebc3           jmp 0x946d
0x000094aa      660f1f440000   nop word [rax + rax]
0x000094b0      bf10000000     mov edi, 0x10
0x000094b5      e88687ffff     call sym.imp.malloc
0x000094ba      4885c0         test rax, rax
0x000094bd      759f           jne 0x945e
0x000094bf      4883c408       add rsp, 8
0x000094c3      31c0           xor eax, eax
0x000094c5      5b             pop rbx
0x000094c6      5d             pop rbp
0x000094c7      415c           pop r12
0x000094c9      415d           pop r13
0x000094cb      415e           pop r14
0x000094cd      415f           pop r15
0x000094cf      c3             ret
;-- hash_get_n_buckets:
0x000094d0      488b4710       mov rax, qword [rdi + 0x10]
0x000094d4      c3             ret
0x000094d5      90             nop
0x000094d6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/bitrotate.h:-218
;-- hash_get_n_buckets_used:
0x000094e0      488b4718       mov rax, qword [rdi + 0x18]
0x000094e4      c3             ret                                     ; ../coreutils-8.31/lib/bitrotate.h:-210
0x000094e5      90             nop
0x000094e6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/bitrotate.h:-213
;-- hash_get_n_entries:
0x000094f0      488b4720       mov rax, qword [rdi + 0x20]
0x000094f4      c3             ret
0x000094f5      90             nop                                     ; ../coreutils-8.31/lib/bitrotate.h:-209
0x000094f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_max_bucket_length:
0x00009500      488b37         mov rsi, qword [rdi]
0x00009503      488b7f08       mov rdi, qword [rdi + 8]
0x00009507      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/bitrotate.h:-259
0x00009509      4839fe         cmp rsi, rdi                            ; ../coreutils-8.31/lib/bitrotate.h:-205
0x0000950c      7339           jae 0x9547
0x0000950e      6690           nop
0x00009510      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/bitrotate.h:-268
0x00009514      7426           je 0x953c                               ; ../coreutils-8.31/lib/bitrotate.h:-284
0x00009516      488b5608       mov rdx, qword [rsi + 8]
0x0000951a      b901000000     mov ecx, 1
0x0000951f      4885d2         test rdx, rdx
0x00009522      7411           je 0x9535
0x00009524      0f1f4000       nop dword [rax]
0x00009528      488b5208       mov rdx, qword [rdx + 8]
0x0000952c      4883c101       add rcx, 1
0x00009530      4885d2         test rdx, rdx
0x00009533      75f3           jne 0x9528
0x00009535      4839c8         cmp rax, rcx
0x00009538      480f42c1       cmovb rax, rcx                          ; ../coreutils-8.31/lib/bitrotate.h:-252
0x0000953c      4883c610       add rsi, 0x10
0x00009540      4839fe         cmp rsi, rdi
0x00009543      72cb           jb 0x9510
0x00009545      f3c3           ret
0x00009547      f3c3           ret
0x00009549      0f1f80000000.  nop dword [rax]
;-- hash_table_ok:
0x00009550      488b0f         mov rcx, qword [rdi]
0x00009553      4c8b4708       mov r8, qword [rdi + 8]
0x00009557      31d2           xor edx, edx
0x00009559      31f6           xor esi, esi
0x0000955b      4c39c1         cmp rcx, r8
0x0000955e      7336           jae 0x9596
0x00009560      48833900       cmp qword [rcx], 0
0x00009564      7427           je 0x958d
0x00009566      488b4108       mov rax, qword [rcx + 8]
0x0000956a      4883c601       add rsi, 1
0x0000956e      4883c201       add rdx, 1
0x00009572      4885c0         test rax, rax
0x00009575      7416           je 0x958d
0x00009577      660f1f840000.  nop word [rax + rax]
0x00009580      488b4008       mov rax, qword [rax + 8]
0x00009584      4883c201       add rdx, 1
0x00009588      4885c0         test rax, rax
0x0000958b      75f3           jne 0x9580
0x0000958d      4883c110       add rcx, 0x10
0x00009591      4c39c1         cmp rcx, r8
0x00009594      72ca           jb 0x9560
0x00009596      31c0           xor eax, eax
0x00009598      48397718       cmp qword [rdi + 0x18], rsi
0x0000959c      7402           je 0x95a0
0x0000959e      f3c3           ret                                     ; ../coreutils-8.31/lib/hash.c:-195
0x000095a0      48395720       cmp qword [rdi + 0x20], rdx
0x000095a4      0f94c0         sete al
0x000095a7      c3             ret
0x000095a8      0f1f84000000.  nop dword [rax + rax]
;-- hash_print_statistics:
0x000095b0      4155           push r13
0x000095b2      4154           push r12
0x000095b4      4989f4         mov r12, rsi
0x000095b7      55             push rbp
0x000095b8      53             push rbx
0x000095b9      31db           xor ebx, ebx
0x000095bb      4883ec08       sub rsp, 8
0x000095bf      488b37         mov rsi, qword [rdi]
0x000095c2      488b4f20       mov rcx, qword [rdi + 0x20]
0x000095c6      488b6f10       mov rbp, qword [rdi + 0x10]
0x000095ca      4c8b6f18       mov r13, qword [rdi + 0x18]
0x000095ce      488b7f08       mov rdi, qword [rdi + 8]
0x000095d2      4839fe         cmp rsi, rdi
0x000095d5      733e           jae 0x9615
0x000095d7      660f1f840000.  nop word [rax + rax]
0x000095e0      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/hash.c:-192
0x000095e4      7426           je 0x960c
0x000095e6      488b4608       mov rax, qword [rsi + 8]                ; stdio2.h:-339
0x000095ea      ba01000000     mov edx, 1
0x000095ef      4885c0         test rax, rax
0x000095f2      7411           je 0x9605
0x000095f4      0f1f4000       nop dword [rax]
0x000095f8      488b4008       mov rax, qword [rax + 8]
0x000095fc      4883c201       add rdx, 1
0x00009600      4885c0         test rax, rax
0x00009603      75f3           jne 0x95f8
0x00009605      4839d3         cmp rbx, rdx
0x00009608      480f42da       cmovb rbx, rdx
0x0000960c      4883c610       add rsi, 0x10
0x00009610      4839fe         cmp rsi, rdi
0x00009613      72cb           jb 0x95e0
0x00009615      488d15482f00.  lea rdx, str.entries:__________lu       ; 0xc564 ; "# entries:         %lu\n"
0x0000961c      be01000000     mov esi, 1
0x00009621      4c89e7         mov rdi, r12
0x00009624      31c0           xor eax, eax
0x00009626      e87587ffff     call sym.imp.__fprintf_chk
0x0000962b      488d154a2f00.  lea rdx, str.buckets:__________lu       ; 0xc57c ; "# buckets:         %lu\n"
0x00009632      31c0           xor eax, eax
0x00009634      4889e9         mov rcx, rbp
0x00009637      be01000000     mov esi, 1
0x0000963c      4c89e7         mov rdi, r12
0x0000963f      e85c87ffff     call sym.imp.__fprintf_chk
0x00009644      4d85ed         test r13, r13
0x00009647      7867           js 0x96b0
0x00009649      660fefc0       pxor xmm0, xmm0
0x0000964d      4885ed         test rbp, rbp
0x00009650      f2490f2ac5     cvtsi2sd xmm0, r13
0x00009655      f20f5905bb2f.  mulsd xmm0, qword [0x0000c618]          ; ../coreutils-8.31/lib/hash.c:-174
0x0000965d      787a           js 0x96d9                               ; ../coreutils-8.31/lib/hash.c:-170
0x0000965f      660fefc9       pxor xmm1, xmm1
0x00009663      f2480f2acd     cvtsi2sd xmm1, rbp
0x00009668      f20f5ec1       divsd xmm0, xmm1
0x0000966c      488d153d2f00.  lea rdx, str.buckets_used:_____lu___.2f ; 0xc5b0 ; "# buckets used:    %lu (%.2f%%)\n"
0x00009673      4c89e9         mov rcx, r13
0x00009676      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/hash.c:-166
0x00009679      be01000000     mov esi, 1
0x0000967e      b801000000     mov eax, 1
0x00009683      e81887ffff     call sym.imp.__fprintf_chk
0x00009688      4883c408       add rsp, 8
0x0000968c      4889d9         mov rcx, rbx
0x0000968f      4c89e7         mov rdi, r12
0x00009692      5b             pop rbx
0x00009693      5d             pop rbp
0x00009694      415c           pop r12
0x00009696      415d           pop r13
0x00009698      488d15f52e00.  lea rdx, str.max_bucket_length:__lu     ; 0xc594 ; "max bucket length: %lu\n"
0x0000969f      be01000000     mov esi, 1
0x000096a4      31c0           xor eax, eax
0x000096a6      e9f586ffff     jmp sym.imp.__fprintf_chk
0x000096ab      0f1f440000     nop dword [rax + rax]
0x000096b0      4c89e8         mov rax, r13
0x000096b3      4c89ea         mov rdx, r13
0x000096b6      660fefc0       pxor xmm0, xmm0
0x000096ba      48d1e8         shr rax, 1
0x000096bd      83e201         and edx, 1
0x000096c0      4809d0         or rax, rdx
0x000096c3      4885ed         test rbp, rbp
0x000096c6      f2480f2ac0     cvtsi2sd xmm0, rax
0x000096cb      f20f58c0       addsd xmm0, xmm0
0x000096cf      f20f5905412f.  mulsd xmm0, qword [0x0000c618]
0x000096d7      7986           jns 0x965f                              ; ../coreutils-8.31/lib/hash.c:-138
0x000096d9      4889e8         mov rax, rbp
0x000096dc      660fefc9       pxor xmm1, xmm1
0x000096e0      48d1e8         shr rax, 1
0x000096e3      83e501         and ebp, 1                              ; ../coreutils-8.31/lib/hash.c:-136
0x000096e6      4809e8         or rax, rbp                             ; ../coreutils-8.31/lib/hash.c:-147
0x000096e9      f2480f2ac8     cvtsi2sd xmm1, rax
0x000096ee      f20f58c9       addsd xmm1, xmm1
0x000096f2      e971ffffff     jmp 0x9668
0x000096f7      660f1f840000.  nop word [rax + rax]
;-- hash_lookup:
0x00009700      4154           push r12
0x00009702      55             push rbp
0x00009703      4989fc         mov r12, rdi
0x00009706      53             push rbx
0x00009707      4889f5         mov rbp, rsi
0x0000970a      e8b1faffff     call sym.safe_hasher                    ; ../coreutils-8.31/lib/hash.c:-127
0x0000970f      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:-123
0x00009712      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/hash.c:-127
0x00009715      7426           je 0x973d                               ; ../coreutils-8.31/lib/hash.c:-120
0x00009717      4889c3         mov rbx, rax
0x0000971a      eb07           jmp 0x9723
0x0000971c      0f1f4000       nop dword [rax]
0x00009720      488b33         mov rsi, qword [rbx]
0x00009723      4839ee         cmp rsi, rbp
0x00009726      7417           je 0x973f                               ; ../coreutils-8.31/lib/hash.c:-116
0x00009728      4889ef         mov rdi, rbp
0x0000972b      41ff542438     call qword [r12 + 0x38]                 ; ../coreutils-8.31/lib/hash.c:-120
0x00009730      84c0           test al, al
0x00009732      751c           jne 0x9750
0x00009734      488b5b08       mov rbx, qword [rbx + 8]
0x00009738      4885db         test rbx, rbx
0x0000973b      75e3           jne 0x9720
0x0000973d      31f6           xor esi, esi
0x0000973f      5b             pop rbx
0x00009740      4889f0         mov rax, rsi
0x00009743      5d             pop rbp
0x00009744      415c           pop r12
0x00009746      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:-112
0x00009747      660f1f840000.  nop word [rax + rax]
0x00009750      488b33         mov rsi, qword [rbx]
0x00009753      5b             pop rbx
0x00009754      5d             pop rbp
0x00009755      4889f0         mov rax, rsi
0x00009758      415c           pop r12
0x0000975a      c3             ret
0x0000975b      0f1f440000     nop dword [rax + rax]
;-- hash_get_first:
0x00009760      48837f2000     cmp qword [rdi + 0x20], 0
0x00009765      742c           je 0x9793
0x00009767      488b17         mov rdx, qword [rdi]
0x0000976a      488b4f08       mov rcx, qword [rdi + 8]
0x0000976e      4839ca         cmp rdx, rcx
0x00009771      7325           jae 0x9798
0x00009773      488b02         mov rax, qword [rdx]
0x00009776      4885c0         test rax, rax
0x00009779      751b           jne 0x9796
0x0000977b      0f1f440000     nop dword [rax + rax]
0x00009780      4883c210       add rdx, 0x10
0x00009784      4839ca         cmp rdx, rcx
0x00009787      730f           jae 0x9798                              ; ../coreutils-8.31/lib/hash.c:-97
0x00009789      488b02         mov rax, qword [rdx]
0x0000978c      4885c0         test rax, rax
0x0000978f      74ef           je 0x9780
0x00009791      f3c3           ret
0x00009793      31c0           xor eax, eax
0x00009795      c3             ret
0x00009796      f3c3           ret
0x00009798      4883ec08       sub rsp, 8
0x0000979c      e80f82ffff     call sym.imp.abort
0x000097a1      0f1f440000     nop dword [rax + rax]
0x000097a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_next:
0x000097b0      55             push rbp
0x000097b1      53             push rbx
0x000097b2      4889fd         mov rbp, rdi
0x000097b5      4889f3         mov rbx, rsi
0x000097b8      4883ec08       sub rsp, 8
0x000097bc      e8fff9ffff     call sym.safe_hasher
0x000097c1      4889c2         mov rdx, rax
0x000097c4      4889c1         mov rcx, rax
0x000097c7      488b02         mov rax, qword [rdx]
0x000097ca      488b5208       mov rdx, qword [rdx + 8]
0x000097ce      4839d8         cmp rax, rbx
0x000097d1      7416           je 0x97e9
0x000097d3      0f1f440000     nop dword [rax + rax]
0x000097d8      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:-79
0x000097db      7411           je 0x97ee
0x000097dd      488b02         mov rax, qword [rdx]
0x000097e0      488b5208       mov rdx, qword [rdx + 8]                ; ../coreutils-8.31/lib/hash.c:-97
0x000097e4      4839d8         cmp rax, rbx
0x000097e7      75ef           jne 0x97d8
0x000097e9      4885d2         test rdx, rdx
0x000097ec      752a           jne 0x9818
0x000097ee      488b5508       mov rdx, qword [rbp + 8]                ; ../coreutils-8.31/lib/hash.c:-66
0x000097f2      eb0c           jmp 0x9800
0x000097f4      0f1f4000       nop dword [rax]
0x000097f8      488b01         mov rax, qword [rcx]
0x000097fb      4885c0         test rax, rax
0x000097fe      750b           jne 0x980b
0x00009800      4883c110       add rcx, 0x10
0x00009804      4839ca         cmp rdx, rcx
0x00009807      77ef           ja 0x97f8
0x00009809      31c0           xor eax, eax
0x0000980b      4883c408       add rsp, 8
0x0000980f      5b             pop rbx
0x00009810      5d             pop rbp                                 ; ../coreutils-8.31/lib/hash.c:-59
0x00009811      c3             ret
0x00009812      660f1f440000   nop word [rax + rax]
0x00009818      488b02         mov rax, qword [rdx]
0x0000981b      4883c408       add rsp, 8
0x0000981f      5b             pop rbx
0x00009820      5d             pop rbp
0x00009821      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:-55
0x00009822      0f1f4000       nop dword [rax]
0x00009826      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_entries:
0x00009830      4c8b0f         mov r9, qword [rdi]
0x00009833      4c394f08       cmp qword [rdi + 8], r9                 ; ../coreutils-8.31/lib/hash.c:-57
0x00009837      7659           jbe 0x9892
0x00009839      4531c0         xor r8d, r8d
0x0000983c      498b09         mov rcx, qword [r9]
0x0000983f      4885c9         test rcx, rcx
0x00009842      7439           je 0x987d                               ; ../coreutils-8.31/lib/hash.c:-47
0x00009844      4c39c2         cmp rdx, r8
0x00009847      763e           jbe 0x9887
0x00009849      4a890cc6       mov qword [rsi + r8*8], rcx
0x0000984d      498b4908       mov rcx, qword [r9 + 8]
0x00009851      498d4001       lea rax, [r8 + 1]
0x00009855      4885c9         test rcx, rcx
0x00009858      7420           je 0x987a
0x0000985a      660f1f440000   nop word [rax + rax]
0x00009860      4839c2         cmp rdx, rax
0x00009863      742b           je 0x9890                               ; ../coreutils-8.31/lib/hash.c:-3
0x00009865      4c8b01         mov r8, qword [rcx]
0x00009868      4883c001       add rax, 1
0x0000986c      4c8944c6f8     mov qword [rsi + rax*8 - 8], r8
0x00009871      488b4908       mov rcx, qword [rcx + 8]
0x00009875      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/hash.c:-2
0x00009878      75e6           jne 0x9860
0x0000987a      4989c0         mov r8, rax
0x0000987d      4983c110       add r9, 0x10
0x00009881      4c394f08       cmp qword [rdi + 8], r9                 ; ../coreutils-8.31/lib/hash.c:-3
0x00009885      77b5           ja 0x983c
0x00009887      4c89c0         mov rax, r8
0x0000988a      c3             ret
0x0000988b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/hash.c:0
0x00009890      f3c3           ret
0x00009892      31c0           xor eax, eax
0x00009894      c3             ret
0x00009895      90             nop
0x00009896      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_do_for_each:
0x000098a0      4157           push r15
0x000098a2      4156           push r14
0x000098a4      4155           push r13
0x000098a6      4154           push r12
0x000098a8      55             push rbp
0x000098a9      53             push rbx
0x000098aa      4883ec08       sub rsp, 8
0x000098ae      4c8b37         mov r14, qword [rdi]
0x000098b1      4c397708       cmp qword [rdi + 8], r14
0x000098b5      764f           jbe 0x9906
0x000098b7      4989d5         mov r13, rdx
0x000098ba      4989f4         mov r12, rsi
0x000098bd      4989ff         mov r15, rdi                            ; ../coreutils-8.31/lib/hash.c:46
0x000098c0      31ed           xor ebp, ebp
0x000098c2      498b3e         mov rdi, qword [r14]
0x000098c5      4885ff         test rdi, rdi
0x000098c8      7420           je 0x98ea
0x000098ca      4c89f3         mov rbx, r14
0x000098cd      eb04           jmp 0x98d3
0x000098cf      90             nop
0x000098d0      488b3b         mov rdi, qword [rbx]
0x000098d3      4c89ee         mov rsi, r13                            ; ../coreutils-8.31/lib/hash.c:37
0x000098d6      41ffd4         call r12
0x000098d9      84c0           test al, al
0x000098db      7417           je 0x98f4
0x000098dd      488b5b08       mov rbx, qword [rbx + 8]
0x000098e1      4883c501       add rbp, 1
0x000098e5      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/hash.c:33
0x000098e8      75e6           jne 0x98d0
0x000098ea      4983c610       add r14, 0x10
0x000098ee      4d397708       cmp qword [r15 + 8], r14
0x000098f2      77ce           ja 0x98c2
0x000098f4      4883c408       add rsp, 8
0x000098f8      4889e8         mov rax, rbp
0x000098fb      5b             pop rbx
0x000098fc      5d             pop rbp                                 ; ../coreutils-8.31/lib/hash.c:38
0x000098fd      415c           pop r12
0x000098ff      415d           pop r13                                 ; ../coreutils-8.31/lib/hash.c:37
0x00009901      415e           pop r14
0x00009903      415f           pop r15
0x00009905      c3             ret
0x00009906      31ed           xor ebp, ebp
0x00009908      ebea           jmp 0x98f4                              ; ../coreutils-8.31/lib/hash.c:41
0x0000990a      660f1f440000   nop word [rax + rax]
;-- hash_string:
0x00009910      0fb60f         movzx ecx, byte [rdi]
0x00009913      31d2           xor edx, edx
0x00009915      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hash.c:43
0x00009917      7424           je 0x993d
0x00009919      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/hash.c:44
0x00009920      4889d0         mov rax, rdx
0x00009923      4883c701       add rdi, 1
0x00009927      48c1e005       shl rax, 5
0x0000992b      4829d0         sub rax, rdx
0x0000992e      31d2           xor edx, edx
0x00009930      4801c8         add rax, rcx
0x00009933      0fb60f         movzx ecx, byte [rdi]
0x00009936      48f7f6         div rsi
0x00009939      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hash.c:-14
0x0000993b      75e3           jne 0x9920
0x0000993d      4889d0         mov rax, rdx
0x00009940      c3             ret
0x00009941      0f1f440000     nop dword [rax + rax]
0x00009946      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_reset_tuning:
0x00009950      48b800000000.  movabs rax, 0x3f80000000000000          ; 4575657221408423936
0x0000995a      c6471000       mov byte [rdi + 0x10], 0                ; ../coreutils-8.31/lib/hash.c:-70
0x0000995e      488907         mov qword [rdi], rax
0x00009961      48b8cdcc4c3f.  movabs rax, 0x3fb4fdf43f4ccccd
0x0000996b      48894708       mov qword [rdi + 8], rax                ; ../coreutils-8.31/lib/hash.c:-65
0x0000996f      c3             ret
;-- hash_initialize:
0x00009970      4157           push r15
0x00009972      4156           push r14
0x00009974      488d0525f8ff.  lea rax, sym.raw_hasher                 ; 0x91a0 ; "H\x89\xf81\xd2H\xc1\xc8\x03H\xf7\xf6H\x89\xd0\xc3H9\xf7\x0f\x94\xc0\xc3f\x0f\x1f\x84"
0x0000997b      4155           push r13
0x0000997d      4154           push r12
0x0000997f      4989d4         mov r12, rdx
0x00009982      55             push rbp                                ; ../coreutils-8.31/lib/hash.c:-61
0x00009983      53             push rbx
0x00009984      4989cd         mov r13, rcx
0x00009987      4889fd         mov rbp, rdi
0x0000998a      bf50000000     mov edi, 0x50                           ; 'P'
0x0000998f      4989f7         mov r15, rsi
0x00009992      4883ec08       sub rsp, 8
0x00009996      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:-52
0x00009999      4d89c6         mov r14, r8
0x0000999c      4c0f44e0       cmove r12, rax
0x000099a0      488d0509f8ff.  lea rax, sym.raw_comparator             ; 0x91b0 ; "H9\xf7\x0f\x94\xc0\xc3f\x0f\x1f\x84"
0x000099a7      4885c9         test rcx, rcx
0x000099aa      4c0f44e8       cmove r13, rax
0x000099ae      e88d82ffff     call sym.imp.malloc
0x000099b3      4885c0         test rax, rax
0x000099b6      4889c3         mov rbx, rax
0x000099b9      0f84ab000000   je 0x9a6a
0x000099bf      4d85ff         test r15, r15
0x000099c2      488d7828       lea rdi, [rax + 0x28]
0x000099c6      0f84b4000000   je 0x9a80
0x000099cc      4c897828       mov qword [rax + 0x28], r15
0x000099d0      e83bf9ffff     call sym.check_tuning.isra.0
0x000099d5      84c0           test al, al
0x000099d7      0f8483000000   je 0x9a60
0x000099dd      41807f1000     cmp byte [r15 + 0x10], 0
0x000099e2      0f84f8000000   je 0x9ae0
0x000099e8      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/hash.c:-145
0x000099eb      e810f7ffff     call sym.next_prime
0x000099f0      ba08000000     mov edx, 8
0x000099f5      4889c5         mov rbp, rax
0x000099f8      31c9           xor ecx, ecx
0x000099fa      4889d0         mov rax, rdx
0x000099fd      48f7e5         mul rbp
0x00009a00      0f8014010000   jo 0x9b1a
0x00009a06      4885c0         test rax, rax
0x00009a09      7855           js 0x9a60
0x00009a0b      4885c9         test rcx, rcx
0x00009a0e      7550           jne 0x9a60
0x00009a10      4885ed         test rbp, rbp
0x00009a13      48896b10       mov qword [rbx + 0x10], rbp
0x00009a17      7447           je 0x9a60
0x00009a19      be10000000     mov esi, 0x10
0x00009a1e      4889ef         mov rdi, rbp
0x00009a21      e89a81ffff     call sym.imp.calloc
0x00009a26      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:-197
0x00009a29      488903         mov qword [rbx], rax
0x00009a2c      7432           je 0x9a60
0x00009a2e      48c1e504       shl rbp, 4
0x00009a32      48c743180000.  mov qword [rbx + 0x18], 0
0x00009a3a      48c743200000.  mov qword [rbx + 0x20], 0
0x00009a42      4801c5         add rbp, rax
0x00009a45      4c896330       mov qword [rbx + 0x30], r12
0x00009a49      4c896b38       mov qword [rbx + 0x38], r13
0x00009a4d      48896b08       mov qword [rbx + 8], rbp
0x00009a51      4c897340       mov qword [rbx + 0x40], r14
0x00009a55      48c743480000.  mov qword [rbx + 0x48], 0
0x00009a5d      eb0b           jmp 0x9a6a
0x00009a5f      90             nop
0x00009a60      4889df         mov rdi, rbx
0x00009a63      31db           xor ebx, ebx
0x00009a65      e87683ffff     call sym..plt.got
0x00009a6a      4883c408       add rsp, 8
0x00009a6e      4889d8         mov rax, rbx
0x00009a71      5b             pop rbx
0x00009a72      5d             pop rbp
0x00009a73      415c           pop r12
0x00009a75      415d           pop r13
0x00009a77      415e           pop r14
0x00009a79      415f           pop r15
0x00009a7b      c3             ret
0x00009a7c      0f1f4000       nop dword [rax]
0x00009a80      488d05592b00.  lea rax, obj.default_tuning             ; 0xc5e0
0x00009a87      48894328       mov qword [rbx + 0x28], rax             ; ../coreutils-8.31/lib/hash.c:-199
0x00009a8b      e880f8ffff     call sym.check_tuning.isra.0
0x00009a90      84c0           test al, al
0x00009a92      f30f100d6e2b.  movss xmm1, dword [0x0000c608]          ; [0xc608:4]=0x3f4ccccd
0x00009a9a      74c4           je 0x9a60
0x00009a9c      4885ed         test rbp, rbp
0x00009a9f      784a           js 0x9aeb
0x00009aa1      660fefc0       pxor xmm0, xmm0                         ; ../coreutils-8.31/lib/hash.c:-168
0x00009aa5      f3480f2ac5     cvtsi2ss xmm0, rbp
0x00009aaa      f30f5ec1       divss xmm0, xmm1
0x00009aae      0f2e05572b00.  ucomiss xmm0, dword [0x0000c60c]
0x00009ab5      73a9           jae 0x9a60
0x00009ab7      0f2e05522b00.  ucomiss xmm0, dword [0x0000c610]
0x00009abe      7250           jb 0x9b10
0x00009ac0      f30f5c05482b.  subss xmm0, dword [0x0000c610]
0x00009ac8      48b800000000.  movabs rax, 0x8000000000000000
0x00009ad2      f3480f2ce8     cvttss2si rbp, xmm0
0x00009ad7      4831c5         xor rbp, rax
0x00009ada      e909ffffff     jmp 0x99e8
0x00009adf      90             nop
0x00009ae0      4885ed         test rbp, rbp
0x00009ae3      f3410f104f08   movss xmm1, dword [r15 + 8]
0x00009ae9      79b6           jns 0x9aa1                              ; ../coreutils-8.31/lib/hash.c:-146
0x00009aeb      4889e8         mov rax, rbp
0x00009aee      660fefc0       pxor xmm0, xmm0                         ; ../coreutils-8.31/lib/hash.c:-147
0x00009af2      48d1e8         shr rax, 1
0x00009af5      83e501         and ebp, 1
0x00009af8      4809e8         or rax, rbp
0x00009afb      f3480f2ac0     cvtsi2ss xmm0, rax
0x00009b00      f30f58c0       addss xmm0, xmm0
0x00009b04      eba4           jmp 0x9aaa
0x00009b06      662e0f1f8400.  nop word cs:[rax + rax]
0x00009b10      f3480f2ce8     cvttss2si rbp, xmm0
0x00009b15      e9cefeffff     jmp 0x99e8
0x00009b1a      b901000000     mov ecx, 1
0x00009b1f      e9e2feffff     jmp 0x9a06
0x00009b24      6690           nop
0x00009b26      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/hash.c:-130
;-- hash_clear:
0x00009b30      4154           push r12
0x00009b32      55             push rbp
0x00009b33      4889fd         mov rbp, rdi
0x00009b36      53             push rbx
0x00009b37      4c8b27         mov r12, qword [rdi]                    ; ../coreutils-8.31/lib/hash.c:-134
0x00009b3a      4c3b6708       cmp r12, qword [rdi + 8]
0x00009b3e      736b           jae 0x9bab
0x00009b40      49833c2400     cmp qword [r12], 0
0x00009b45      745a           je 0x9ba1
0x00009b47      498b5c2408     mov rbx, qword [r12 + 8]
0x00009b4c      488b4540       mov rax, qword [rbp + 0x40]
0x00009b50      4885db         test rbx, rbx
0x00009b53      7430           je 0x9b85
0x00009b55      0f1f00         nop dword [rax]
0x00009b58      4885c0         test rax, rax
0x00009b5b      7409           je 0x9b66
0x00009b5d      488b3b         mov rdi, qword [rbx]
0x00009b60      ffd0           call rax
0x00009b62      488b4540       mov rax, qword [rbp + 0x40]
0x00009b66      488b5308       mov rdx, qword [rbx + 8]
0x00009b6a      488b4d48       mov rcx, qword [rbp + 0x48]
0x00009b6e      48c703000000.  mov qword [rbx], 0
0x00009b75      4885d2         test rdx, rdx
0x00009b78      48894b08       mov qword [rbx + 8], rcx
0x00009b7c      48895d48       mov qword [rbp + 0x48], rbx
0x00009b80      4889d3         mov rbx, rdx
0x00009b83      75d3           jne 0x9b58
0x00009b85      4885c0         test rax, rax
0x00009b88      7406           je 0x9b90
0x00009b8a      498b3c24       mov rdi, qword [r12]
0x00009b8e      ffd0           call rax
0x00009b90      49c704240000.  mov qword [r12], 0
0x00009b98      49c744240800.  mov qword [r12 + 8], 0
0x00009ba1      4983c410       add r12, 0x10
0x00009ba5      4c396508       cmp qword [rbp + 8], r12                ; ../coreutils-8.31/lib/hash.c:-310
0x00009ba9      7795           ja 0x9b40
0x00009bab      48c745180000.  mov qword [rbp + 0x18], 0
0x00009bb3      48c745200000.  mov qword [rbp + 0x20], 0
0x00009bbb      5b             pop rbx
0x00009bbc      5d             pop rbp
0x00009bbd      415c           pop r12
0x00009bbf      c3             ret
;-- hash_free:
0x00009bc0      4154           push r12
0x00009bc2      55             push rbp
0x00009bc3      4989fc         mov r12, rdi
0x00009bc6      53             push rbx                                ; ../coreutils-8.31/lib/hash.c:-307
0x00009bc7      48837f4000     cmp qword [rdi + 0x40], 0
0x00009bcc      488b2f         mov rbp, qword [rdi]
0x00009bcf      488b4708       mov rax, qword [rdi + 8]
0x00009bd3      744e           je 0x9c23                               ; ../coreutils-8.31/lib/hash.c:-305
0x00009bd5      48837f2000     cmp qword [rdi + 0x20], 0
0x00009bda      7447           je 0x9c23
0x00009bdc      4839c5         cmp rbp, rax
0x00009bdf      737b           jae 0x9c5c
0x00009be1      0f1f80000000.  nop dword [rax]
0x00009be8      488b7d00       mov rdi, qword [rbp]
0x00009bec      4885ff         test rdi, rdi
0x00009bef      7425           je 0x9c16
0x00009bf1      4889eb         mov rbx, rbp
0x00009bf4      eb0d           jmp 0x9c03
0x00009bf6      662e0f1f8400.  nop word cs:[rax + rax]
0x00009c00      488b3b         mov rdi, qword [rbx]
0x00009c03      41ff542440     call qword [r12 + 0x40]                 ; segment.PHDR
0x00009c08      488b5b08       mov rbx, qword [rbx + 8]
0x00009c0c      4885db         test rbx, rbx
0x00009c0f      75ef           jne 0x9c00
0x00009c11      498b442408     mov rax, qword [r12 + 8]
0x00009c16      4883c510       add rbp, 0x10
0x00009c1a      4839e8         cmp rax, rbp
0x00009c1d      77c9           ja 0x9be8
0x00009c1f      498b2c24       mov rbp, qword [r12]
0x00009c23      4839c5         cmp rbp, rax
0x00009c26      7334           jae 0x9c5c
0x00009c28      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/hash.c:93
0x00009c30      488b7d08       mov rdi, qword [rbp + 8]
0x00009c34      4885ff         test rdi, rdi
0x00009c37      7418           je 0x9c51
0x00009c39      0f1f80000000.  nop dword [rax]
0x00009c40      488b5f08       mov rbx, qword [rdi + 8]
0x00009c44      e89781ffff     call sym..plt.got                       ; ../coreutils-8.31/lib/hash.c:98
0x00009c49      4885db         test rbx, rbx
0x00009c4c      4889df         mov rdi, rbx
0x00009c4f      75ef           jne 0x9c40
0x00009c51      4883c510       add rbp, 0x10                           ; ../coreutils-8.31/lib/hash.c:99
0x00009c55      49396c2408     cmp qword [r12 + 8], rbp
0x00009c5a      77d4           ja 0x9c30
0x00009c5c      498b7c2448     mov rdi, qword [r12 + 0x48]
0x00009c61      4885ff         test rdi, rdi
0x00009c64      741b           je 0x9c81
0x00009c66      662e0f1f8400.  nop word cs:[rax + rax]
0x00009c70      488b5f08       mov rbx, qword [rdi + 8]
0x00009c74      e86781ffff     call sym..plt.got
0x00009c79      4885db         test rbx, rbx
0x00009c7c      4889df         mov rdi, rbx
0x00009c7f      75ef           jne 0x9c70
0x00009c81      498b3c24       mov rdi, qword [r12]
0x00009c85      e85681ffff     call sym..plt.got
0x00009c8a      5b             pop rbx
0x00009c8b      4c89e7         mov rdi, r12
0x00009c8e      5d             pop rbp
0x00009c8f      415c           pop r12
0x00009c91      e94a81ffff     jmp sym..plt.got                        ; ../coreutils-8.31/lib/hash.c:107
0x00009c96      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_rehash:
0x00009ca0      4154           push r12
0x00009ca2      55             push rbp
0x00009ca3      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/hash.c:108
0x00009ca6      53             push rbx
0x00009ca7      4883ec60       sub rsp, 0x60
0x00009cab      4c8b6728       mov r12, qword [rdi + 0x28]
0x00009caf      64488b042528.  mov rax, qword fs:[0x28]
0x00009cb8      4889442458     mov qword [rsp + 0x58], rax
0x00009cbd      31c0           xor eax, eax
0x00009cbf      41807c241000   cmp byte [r12 + 0x10], 0
0x00009cc5      7551           jne 0x9d18
0x00009cc7      4885f6         test rsi, rsi
0x00009cca      0f8878010000   js 0x9e48
0x00009cd0      660fefc0       pxor xmm0, xmm0
0x00009cd4      f3480f2ac6     cvtsi2ss xmm0, rsi                      ; ../coreutils-8.31/lib/hash.c:156
0x00009cd9      f3410f5e4424.  divss xmm0, dword [r12 + 8]
0x00009ce0      0f2e05252900.  ucomiss xmm0, dword [0x0000c60c]
0x00009ce7      0f8333010000   jae 0x9e20
0x00009ced      0f2e051c2900.  ucomiss xmm0, dword [0x0000c610]
0x00009cf4      0f8276010000   jb 0x9e70
0x00009cfa      f30f5c050e29.  subss xmm0, dword [0x0000c610]          ; ../coreutils-8.31/lib/hash.c:161
0x00009d02      48b800000000.  movabs rax, 0x8000000000000000
0x00009d0c      f3480f2cf0     cvttss2si rsi, xmm0
0x00009d11      4831c6         xor rsi, rax                            ; ../coreutils-8.31/lib/bitrotate.h:35
0x00009d14      0f1f4000       nop dword [rax]
0x00009d18      4889f7         mov rdi, rsi
0x00009d1b      e8e0f3ffff     call sym.next_prime
0x00009d20      ba08000000     mov edx, 8
0x00009d25      4889c3         mov rbx, rax
0x00009d28      31c9           xor ecx, ecx
0x00009d2a      4889d0         mov rax, rdx
0x00009d2d      48f7e3         mul rbx
0x00009d30      0f8099010000   jo 0x9ecf
0x00009d36      4885c0         test rax, rax
0x00009d39      b801000000     mov eax, 1
0x00009d3e      480f48c8       cmovs rcx, rax
0x00009d42      4885db         test rbx, rbx
0x00009d45      0f84d5000000   je 0x9e20
0x00009d4b      83e101         and ecx, 1
0x00009d4e      0f85cc000000   jne 0x9e20
0x00009d54      48395d10       cmp qword [rbp + 0x10], rbx
0x00009d58      0f8422010000   je 0x9e80
0x00009d5e      be10000000     mov esi, 0x10
0x00009d63      4889df         mov rdi, rbx
0x00009d66      e8557effff     call sym.imp.calloc
0x00009d6b      4885c0         test rax, rax
0x00009d6e      48890424       mov qword [rsp], rax                    ; ../coreutils-8.31/lib/bitrotate.h:-72
0x00009d72      0f84a8000000   je 0x9e20
0x00009d78      48895c2410     mov qword [rsp + 0x10], rbx
0x00009d7d      48c1e304       shl rbx, 4
0x00009d81      4c89642428     mov qword [rsp + 0x28], r12
0x00009d86      4801c3         add rbx, rax
0x00009d89      488b4530       mov rax, qword [rbp + 0x30]
0x00009d8d      4989e4         mov r12, rsp
0x00009d90      31d2           xor edx, edx
0x00009d92      4889ee         mov rsi, rbp
0x00009d95      4c89e7         mov rdi, r12
0x00009d98      48895c2408     mov qword [rsp + 8], rbx
0x00009d9d      48c744241800.  mov qword [rsp + 0x18], 0
0x00009da6      4889442430     mov qword [rsp + 0x30], rax
0x00009dab      488b4538       mov rax, qword [rbp + 0x38]
0x00009daf      48c744242000.  mov qword [rsp + 0x20], 0
0x00009db8      4889442438     mov qword [rsp + 0x38], rax
0x00009dbd      488b4540       mov rax, qword [rbp + 0x40]
0x00009dc1      4889442440     mov qword [rsp + 0x40], rax
0x00009dc6      488b4548       mov rax, qword [rbp + 0x48]
0x00009dca      4889442448     mov qword [rsp + 0x48], rax
0x00009dcf      e8bcf5ffff     call sym.transfer_entries
0x00009dd4      84c0           test al, al
0x00009dd6      89c3           mov ebx, eax
0x00009dd8      0f85b2000000   jne 0x9e90
0x00009dde      488b442448     mov rax, qword [rsp + 0x48]
0x00009de3      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/bitrotate.h:-53
0x00009de8      4c89e6         mov rsi, r12
0x00009deb      4889ef         mov rdi, rbp
0x00009dee      48894548       mov qword [rbp + 0x48], rax
0x00009df2      e899f5ffff     call sym.transfer_entries
0x00009df7      84c0           test al, al
0x00009df9      0f84da000000   je 0x9ed9
0x00009dff      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/bitrotate.h:-43
0x00009e01      4c89e6         mov rsi, r12
0x00009e04      4889ef         mov rdi, rbp
0x00009e07      e884f5ffff     call sym.transfer_entries
0x00009e0c      84c0           test al, al
0x00009e0e      0f84c5000000   je 0x9ed9
0x00009e14      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/bitrotate.h:-38
0x00009e18      e8c37fffff     call sym..plt.got
0x00009e1d      eb03           jmp 0x9e22
0x00009e1f      90             nop
0x00009e20      31db           xor ebx, ebx
0x00009e22      488b4c2458     mov rcx, qword [rsp + 0x58]
0x00009e27      6448330c2528.  xor rcx, qword fs:[0x28]
0x00009e30      89d8           mov eax, ebx
0x00009e32      0f8592000000   jne 0x9eca
0x00009e38      4883c460       add rsp, 0x60
0x00009e3c      5b             pop rbx
0x00009e3d      5d             pop rbp
0x00009e3e      415c           pop r12
0x00009e40      c3             ret
0x00009e41      0f1f80000000.  nop dword [rax]
0x00009e48      4889f0         mov rax, rsi                            ; ../coreutils-8.31/lib/bitrotate.h:-37
0x00009e4b      660fefc0       pxor xmm0, xmm0
0x00009e4f      48d1e8         shr rax, 1
0x00009e52      83e601         and esi, 1
0x00009e55      4809f0         or rax, rsi
0x00009e58      f3480f2ac0     cvtsi2ss xmm0, rax
0x00009e5d      f30f58c0       addss xmm0, xmm0
0x00009e61      e973feffff     jmp 0x9cd9
0x00009e66      662e0f1f8400.  nop word cs:[rax + rax]
0x00009e70      f3480f2cf0     cvttss2si rsi, xmm0
0x00009e75      e99efeffff     jmp 0x9d18
0x00009e7a      660f1f440000   nop word [rax + rax]
0x00009e80      bb01000000     mov ebx, 1
0x00009e85      eb9b           jmp 0x9e22
0x00009e87      660f1f840000.  nop word [rax + rax]
0x00009e90      488b7d00       mov rdi, qword [rbp]
0x00009e94      e8477fffff     call sym..plt.got
0x00009e99      488b0424       mov rax, qword [rsp]
0x00009e9d      48894500       mov qword [rbp], rax
0x00009ea1      488b442408     mov rax, qword [rsp + 8]
0x00009ea6      48894508       mov qword [rbp + 8], rax
0x00009eaa      488b442410     mov rax, qword [rsp + 0x10]
0x00009eaf      48894510       mov qword [rbp + 0x10], rax
0x00009eb3      488b442418     mov rax, qword [rsp + 0x18]
0x00009eb8      48894518       mov qword [rbp + 0x18], rax
0x00009ebc      488b442448     mov rax, qword [rsp + 0x48]             ; ../coreutils-8.31/lib/bitrotate.h:-12
0x00009ec1      48894548       mov qword [rbp + 0x48], rax
0x00009ec5      e958ffffff     jmp 0x9e22
0x00009eca      e8017cffff     call sym.imp.__stack_chk_fail
0x00009ecf      b901000000     mov ecx, 1
0x00009ed4      e95dfeffff     jmp 0x9d36
0x00009ed9      e8d27affff     call sym.imp.abort
0x00009ede      6690           nop
;-- hash_insert_if_absent:
0x00009ee0      4155           push r13
0x00009ee2      4154           push r12
0x00009ee4      55             push rbp
0x00009ee5      53             push rbx
0x00009ee6      4883ec18       sub rsp, 0x18
0x00009eea      64488b042528.  mov rax, qword fs:[0x28]
0x00009ef3      4889442408     mov qword [rsp + 8], rax
0x00009ef8      31c0           xor eax, eax
0x00009efa      4885f6         test rsi, rsi
0x00009efd      0f84ba010000   je 0xa0bd
0x00009f03      4989e4         mov r12, rsp
0x00009f06      31c9           xor ecx, ecx
0x00009f08      4989d5         mov r13, rdx
0x00009f0b      4c89e2         mov rdx, r12
0x00009f0e      4889fb         mov rbx, rdi
0x00009f11      4889f5         mov rbp, rsi
0x00009f14      e8d7f2ffff     call sym.hash_find_entry
0x00009f19      4885c0         test rax, rax
0x00009f1c      4889c2         mov rdx, rax
0x00009f1f      742f           je 0x9f50
0x00009f21      31c0           xor eax, eax
0x00009f23      4d85ed         test r13, r13
0x00009f26      7404           je 0x9f2c
0x00009f28      49895500       mov qword [r13], rdx
0x00009f2c      488b4c2408     mov rcx, qword [rsp + 8]
0x00009f31      6448330c2528.  xor rcx, qword fs:[0x28]
0x00009f3a      0f851f020000   jne 0xa15f
0x00009f40      4883c418       add rsp, 0x18
0x00009f44      5b             pop rbx
0x00009f45      5d             pop rbp
0x00009f46      415c           pop r12
0x00009f48      415d           pop r13
0x00009f4a      c3             ret
0x00009f4b      0f1f440000     nop dword [rax + rax]
0x00009f50      488b4318       mov rax, qword [rbx + 0x18]
0x00009f54      4885c0         test rax, rax
0x00009f57      7877           js 0x9fd0
0x00009f59      660fefc9       pxor xmm1, xmm1
0x00009f5d      488b5328       mov rdx, qword [rbx + 0x28]
0x00009f61      f3480f2ac8     cvtsi2ss xmm1, rax
0x00009f66      488b4310       mov rax, qword [rbx + 0x10]
0x00009f6a      4885c0         test rax, rax
0x00009f6d      0f8887000000   js 0x9ffa
0x00009f73      660fefc0       pxor xmm0, xmm0
0x00009f77      f3480f2ac0     cvtsi2ss xmm0, rax
0x00009f7c      f30f594208     mulss xmm0, dword [rdx + 8]             ; ../coreutils-8.31/lib/bitrotate.h:15
0x00009f81      0f2ec8         ucomiss xmm1, xmm0
0x00009f84      0f8796000000   ja 0xa020
0x00009f8a      4c8b2424       mov r12, qword [rsp]
0x00009f8e      49833c2400     cmp qword [r12], 0
0x00009f93      0f842f010000   je 0xa0c8
0x00009f99      488b4348       mov rax, qword [rbx + 0x48]
0x00009f9d      4885c0         test rax, rax
0x00009fa0      0f843a010000   je 0xa0e0
0x00009fa6      488b5008       mov rdx, qword [rax + 8]
0x00009faa      48895348       mov qword [rbx + 0x48], rdx
0x00009fae      498b542408     mov rdx, qword [r12 + 8]
0x00009fb3      488928         mov qword [rax], rbp
0x00009fb6      48895008       mov qword [rax + 8], rdx
0x00009fba      4989442408     mov qword [r12 + 8], rax
0x00009fbf      b801000000     mov eax, 1
0x00009fc4      4883432001     add qword [rbx + 0x20], 1
0x00009fc9      e95effffff     jmp 0x9f2c
0x00009fce      6690           nop
0x00009fd0      4889c2         mov rdx, rax
0x00009fd3      660fefc9       pxor xmm1, xmm1
0x00009fd7      83e001         and eax, 1
0x00009fda      48d1ea         shr rdx, 1
0x00009fdd      4809c2         or rdx, rax
0x00009fe0      488b4310       mov rax, qword [rbx + 0x10]
0x00009fe4      f3480f2aca     cvtsi2ss xmm1, rdx                      ; ../coreutils-8.31/lib/bitrotate.h:-3
0x00009fe9      488b5328       mov rdx, qword [rbx + 0x28]
0x00009fed      4885c0         test rax, rax
0x00009ff0      f30f58c9       addss xmm1, xmm1
0x00009ff4      0f8979ffffff   jns 0x9f73
0x00009ffa      4889c1         mov rcx, rax
0x00009ffd      660fefc0       pxor xmm0, xmm0
0x0000a001      48d1e9         shr rcx, 1
0x0000a004      83e001         and eax, 1                              ; ../coreutils-8.31/lib/bitrotate.h:1
0x0000a007      4809c1         or rcx, rax
0x0000a00a      f3480f2ac1     cvtsi2ss xmm0, rcx
0x0000a00f      f30f58c0       addss xmm0, xmm0
0x0000a013      e964ffffff     jmp 0x9f7c
0x0000a018      0f1f84000000.  nop dword [rax + rax]
0x0000a020      488d7b28       lea rdi, [rbx + 0x28]
0x0000a024      e8e7f2ffff     call sym.check_tuning.isra.0
0x0000a029      488b4310       mov rax, qword [rbx + 0x10]
0x0000a02d      488b5328       mov rdx, qword [rbx + 0x28]
0x0000a031      4885c0         test rax, rax
0x0000a034      f30f105208     movss xmm2, dword [rdx + 8]
0x0000a039      0f88c1000000   js 0xa100
0x0000a03f      660fefc0       pxor xmm0, xmm0
0x0000a043      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000a048      488b4318       mov rax, qword [rbx + 0x18]
0x0000a04c      4885c0         test rax, rax
0x0000a04f      0f88cb000000   js 0xa120
0x0000a055      660fefc9       pxor xmm1, xmm1
0x0000a059      f3480f2ac8     cvtsi2ss xmm1, rax
0x0000a05e      0f28da         movaps xmm3, xmm2
0x0000a061      f30f59d8       mulss xmm3, xmm0
0x0000a065      0f2ecb         ucomiss xmm1, xmm3
0x0000a068      0f861cffffff   jbe 0x9f8a
0x0000a06e      807a1000       cmp byte [rdx + 0x10], 0
0x0000a072      f30f59420c     mulss xmm0, dword [rdx + 0xc]
0x0000a077      7504           jne 0xa07d
0x0000a079      f30f59c2       mulss xmm0, xmm2
0x0000a07d      0f2e05882500.  ucomiss xmm0, dword [0x0000c60c]
0x0000a084      736d           jae 0xa0f3
0x0000a086      0f2e05832500.  ucomiss xmm0, dword [0x0000c610]
0x0000a08d      0f83ad000000   jae 0xa140
0x0000a093      f3480f2cf0     cvttss2si rsi, xmm0
0x0000a098      4889df         mov rdi, rbx
0x0000a09b      e800fcffff     call sym.hash_rehash
0x0000a0a0      84c0           test al, al
0x0000a0a2      744f           je 0xa0f3
0x0000a0a4      31c9           xor ecx, ecx
0x0000a0a6      4c89e2         mov rdx, r12
0x0000a0a9      4889ee         mov rsi, rbp
0x0000a0ac      4889df         mov rdi, rbx
0x0000a0af      e83cf1ffff     call sym.hash_find_entry
0x0000a0b4      4885c0         test rax, rax
0x0000a0b7      0f84cdfeffff   je 0x9f8a
0x0000a0bd      e8ee78ffff     call sym.imp.abort
0x0000a0c2      660f1f440000   nop word [rax + rax]
0x0000a0c8      49892c24       mov qword [r12], rbp
0x0000a0cc      b801000000     mov eax, 1
0x0000a0d1      4883432001     add qword [rbx + 0x20], 1
0x0000a0d6      4883431801     add qword [rbx + 0x18], 1
0x0000a0db      e94cfeffff     jmp 0x9f2c
0x0000a0e0      bf10000000     mov edi, 0x10
0x0000a0e5      e8567bffff     call sym.imp.malloc
0x0000a0ea      4885c0         test rax, rax
0x0000a0ed      0f85bbfeffff   jne 0x9fae
0x0000a0f3      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000a0f8      e92ffeffff     jmp 0x9f2c
0x0000a0fd      0f1f00         nop dword [rax]
0x0000a100      4889c1         mov rcx, rax
0x0000a103      660fefc0       pxor xmm0, xmm0
0x0000a107      48d1e9         shr rcx, 1
0x0000a10a      83e001         and eax, 1
0x0000a10d      4809c1         or rcx, rax
0x0000a110      f3480f2ac1     cvtsi2ss xmm0, rcx
0x0000a115      f30f58c0       addss xmm0, xmm0
0x0000a119      e92affffff     jmp 0xa048
0x0000a11e      6690           nop
0x0000a120      4889c1         mov rcx, rax
0x0000a123      660fefc9       pxor xmm1, xmm1
0x0000a127      48d1e9         shr rcx, 1
0x0000a12a      83e001         and eax, 1
0x0000a12d      4809c1         or rcx, rax
0x0000a130      f3480f2ac9     cvtsi2ss xmm1, rcx
0x0000a135      f30f58c9       addss xmm1, xmm1
0x0000a139      e920ffffff     jmp 0xa05e
0x0000a13e      6690           nop
0x0000a140      f30f5c05c824.  subss xmm0, dword [0x0000c610]
0x0000a148      48b800000000.  movabs rax, 0x8000000000000000
0x0000a152      f3480f2cf0     cvttss2si rsi, xmm0
0x0000a157      4831c6         xor rsi, rax
0x0000a15a      e939ffffff     jmp 0xa098
0x0000a15f      e86c79ffff     call sym.imp.__stack_chk_fail
0x0000a164      6690           nop
0x0000a166      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_insert:
0x0000a170      53             push rbx
0x0000a171      4889f3         mov rbx, rsi
0x0000a174      4883ec10       sub rsp, 0x10
0x0000a178      4889e2         mov rdx, rsp
0x0000a17b      64488b042528.  mov rax, qword fs:[0x28]
0x0000a184      4889442408     mov qword [rsp + 8], rax
0x0000a189      31c0           xor eax, eax
0x0000a18b      e850fdffff     call sym.hash_insert_if_absent
0x0000a190      83f8ff         cmp eax, 0xffffffff
0x0000a193      742b           je 0xa1c0
0x0000a195      85c0           test eax, eax
0x0000a197      7504           jne 0xa19d
0x0000a199      488b1c24       mov rbx, qword [rsp]
0x0000a19d      488b4c2408     mov rcx, qword [rsp + 8]
0x0000a1a2      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000a1ab      4889d8         mov rax, rbx
0x0000a1ae      7514           jne 0xa1c4
0x0000a1b0      4883c410       add rsp, 0x10
0x0000a1b4      5b             pop rbx
0x0000a1b5      c3             ret
0x0000a1b6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a1c0      31db           xor ebx, ebx
0x0000a1c2      ebd9           jmp 0xa19d
0x0000a1c4      e80779ffff     call sym.imp.__stack_chk_fail
0x0000a1c9      0f1f80000000.  nop dword [rax]
;-- hash_delete:
0x0000a1d0      4154           push r12
0x0000a1d2      55             push rbp
0x0000a1d3      b901000000     mov ecx, 1
0x0000a1d8      53             push rbx
0x0000a1d9      4889fb         mov rbx, rdi
0x0000a1dc      4883ec10       sub rsp, 0x10
0x0000a1e0      4889e2         mov rdx, rsp
0x0000a1e3      64488b042528.  mov rax, qword fs:[0x28]
0x0000a1ec      4889442408     mov qword [rsp + 8], rax
0x0000a1f1      31c0           xor eax, eax
0x0000a1f3      e8f8efffff     call sym.hash_find_entry
0x0000a1f8      4885c0         test rax, rax
0x0000a1fb      4889c5         mov rbp, rax
0x0000a1fe      740f           je 0xa20f
0x0000a200      488b0424       mov rax, qword [rsp]
0x0000a204      48836b2001     sub qword [rbx + 0x20], 1
0x0000a209      48833800       cmp qword [rax], 0
0x0000a20d      7421           je 0xa230
0x0000a20f      488b4c2408     mov rcx, qword [rsp + 8]
0x0000a214      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000a21d      4889e8         mov rax, rbp
0x0000a220      0f85a8010000   jne 0xa3ce
0x0000a226      4883c410       add rsp, 0x10
0x0000a22a      5b             pop rbx
0x0000a22b      5d             pop rbp
0x0000a22c      415c           pop r12
0x0000a22e      c3             ret
0x0000a22f      90             nop
0x0000a230      488b4318       mov rax, qword [rbx + 0x18]
0x0000a234      4883e801       sub rax, 1
0x0000a238      4885c0         test rax, rax
0x0000a23b      48894318       mov qword [rbx + 0x18], rax
0x0000a23f      0f88fb000000   js 0xa340
0x0000a245      660fefc0       pxor xmm0, xmm0
0x0000a249      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000a24e      488b4310       mov rax, qword [rbx + 0x10]
0x0000a252      488b5328       mov rdx, qword [rbx + 0x28]
0x0000a256      4885c0         test rax, rax
0x0000a259      0f88c1000000   js 0xa320
0x0000a25f      660fefc9       pxor xmm1, xmm1
0x0000a263      f3480f2ac8     cvtsi2ss xmm1, rax
0x0000a268      f30f590a       mulss xmm1, dword [rdx]
0x0000a26c      0f2ec8         ucomiss xmm1, xmm0
0x0000a26f      769e           jbe 0xa20f
0x0000a271      488d7b28       lea rdi, [rbx + 0x28]
0x0000a275      e896f0ffff     call sym.check_tuning.isra.0
0x0000a27a      488b4310       mov rax, qword [rbx + 0x10]
0x0000a27e      488b5328       mov rdx, qword [rbx + 0x28]
0x0000a282      4885c0         test rax, rax
0x0000a285      0f8825010000   js 0xa3b0
0x0000a28b      660fefc0       pxor xmm0, xmm0
0x0000a28f      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000a294      488b4318       mov rax, qword [rbx + 0x18]
0x0000a298      4885c0         test rax, rax
0x0000a29b      0f88ef000000   js 0xa390
0x0000a2a1      660fefc9       pxor xmm1, xmm1
0x0000a2a5      f3480f2ac8     cvtsi2ss xmm1, rax
0x0000a2aa      f30f1012       movss xmm2, dword [rdx]
0x0000a2ae      f30f59d0       mulss xmm2, xmm0
0x0000a2b2      0f2ed1         ucomiss xmm2, xmm1
0x0000a2b5      0f8654ffffff   jbe 0xa20f
0x0000a2bb      807a1000       cmp byte [rdx + 0x10], 0
0x0000a2bf      f30f594204     mulss xmm0, dword [rdx + 4]
0x0000a2c4      0f84b6000000   je 0xa380
0x0000a2ca      0f2e053f2300.  ucomiss xmm0, dword [0x0000c610]
0x0000a2d1      0f8389000000   jae 0xa360
0x0000a2d7      f3480f2cf0     cvttss2si rsi, xmm0
0x0000a2dc      4889df         mov rdi, rbx
0x0000a2df      e8bcf9ffff     call sym.hash_rehash
0x0000a2e4      84c0           test al, al
0x0000a2e6      0f8523ffffff   jne 0xa20f
0x0000a2ec      488b7b48       mov rdi, qword [rbx + 0x48]
0x0000a2f0      4885ff         test rdi, rdi
0x0000a2f3      7414           je 0xa309
0x0000a2f5      0f1f00         nop dword [rax]
0x0000a2f8      4c8b6708       mov r12, qword [rdi + 8]
0x0000a2fc      e8df7affff     call sym..plt.got
0x0000a301      4d85e4         test r12, r12
0x0000a304      4c89e7         mov rdi, r12
0x0000a307      75ef           jne 0xa2f8
0x0000a309      48c743480000.  mov qword [rbx + 0x48], 0
0x0000a311      e9f9feffff     jmp 0xa20f
0x0000a316      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a320      4889c1         mov rcx, rax
0x0000a323      660fefc9       pxor xmm1, xmm1
0x0000a327      48d1e9         shr rcx, 1
0x0000a32a      83e001         and eax, 1
0x0000a32d      4809c1         or rcx, rax
0x0000a330      f3480f2ac9     cvtsi2ss xmm1, rcx
0x0000a335      f30f58c9       addss xmm1, xmm1
0x0000a339      e92affffff     jmp 0xa268
0x0000a33e      6690           nop
0x0000a340      4889c2         mov rdx, rax
0x0000a343      660fefc0       pxor xmm0, xmm0
0x0000a347      48d1ea         shr rdx, 1
0x0000a34a      83e001         and eax, 1
0x0000a34d      4809c2         or rdx, rax
0x0000a350      f3480f2ac2     cvtsi2ss xmm0, rdx
0x0000a355      f30f58c0       addss xmm0, xmm0
0x0000a359      e9f0feffff     jmp 0xa24e
0x0000a35e      6690           nop
0x0000a360      f30f5c05a822.  subss xmm0, dword [0x0000c610]
0x0000a368      48b800000000.  movabs rax, 0x8000000000000000
0x0000a372      f3480f2cf0     cvttss2si rsi, xmm0
0x0000a377      4831c6         xor rsi, rax
0x0000a37a      e95dffffff     jmp 0xa2dc
0x0000a37f      90             nop
0x0000a380      f30f594208     mulss xmm0, dword [rdx + 8]
0x0000a385      e940ffffff     jmp 0xa2ca
0x0000a38a      660f1f440000   nop word [rax + rax]
0x0000a390      4889c1         mov rcx, rax
0x0000a393      660fefc9       pxor xmm1, xmm1
0x0000a397      48d1e9         shr rcx, 1
0x0000a39a      83e001         and eax, 1
0x0000a39d      4809c1         or rcx, rax
0x0000a3a0      f3480f2ac9     cvtsi2ss xmm1, rcx
0x0000a3a5      f30f58c9       addss xmm1, xmm1
0x0000a3a9      e9fcfeffff     jmp 0xa2aa
0x0000a3ae      6690           nop
0x0000a3b0      4889c1         mov rcx, rax
0x0000a3b3      660fefc0       pxor xmm0, xmm0
0x0000a3b7      48d1e9         shr rcx, 1
0x0000a3ba      83e001         and eax, 1
0x0000a3bd      4809c1         or rcx, rax
0x0000a3c0      f3480f2ac1     cvtsi2ss xmm0, rcx
0x0000a3c5      f30f58c0       addss xmm0, xmm0
0x0000a3c9      e9c6feffff     jmp 0xa294
0x0000a3ce      e8fd76ffff     call sym.imp.__stack_chk_fail
0x0000a3d3      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a3dd      0f1f00         nop dword [rax]
;-- i_ring_init:
0x0000a3e0      c6471c01       mov byte [rdi + 0x1c], 1                ; ../coreutils-8.31/lib/i-ring.c:26
0x0000a3e4      48c747140000.  mov qword [rdi + 0x14], 0               ; ../coreutils-8.31/lib/i-ring.c:29
0x0000a3ec      8937           mov dword [rdi], esi                    ; ../coreutils-8.31/lib/i-ring.c:32
0x0000a3ee      897704         mov dword [rdi + 4], esi
0x0000a3f1      897708         mov dword [rdi + 8], esi
0x0000a3f4      89770c         mov dword [rdi + 0xc], esi
0x0000a3f7      897710         mov dword [rdi + 0x10], esi             ; ../coreutils-8.31/lib/i-ring.c:33
0x0000a3fa      c3             ret                                     ; ../coreutils-8.31/lib/i-ring.c:34
0x0000a3fb      0f1f440000     nop dword [rax + rax]
;-- i_ring_empty:
0x0000a400      0fb6471c       movzx eax, byte [rdi + 0x1c]            ; ../coreutils-8.31/lib/i-ring.c:38
0x0000a404      c3             ret                                     ; ../coreutils-8.31/lib/i-ring.c:40
0x0000a405      90             nop
0x0000a406      662e0f1f8400.  nop word cs:[rax + rax]
;-- i_ring_push:
0x0000a410      0fb6571c       movzx edx, byte [rdi + 0x1c]            ; ../coreutils-8.31/lib/i-ring.c:44
0x0000a414      8b4f14         mov ecx, dword [rdi + 0x14]
0x0000a417      83f201         xor edx, 1
0x0000a41a      0fb6d2         movzx edx, dl
0x0000a41d      01d1           add ecx, edx
0x0000a41f      83e103         and ecx, 3
0x0000a422      89c8           mov eax, ecx
0x0000a424      4c8d0487       lea r8, [rdi + rax*4]
0x0000a428      418b00         mov eax, dword [r8]                     ; ../coreutils-8.31/lib/i-ring.c:46
0x0000a42b      418930         mov dword [r8], esi                     ; ../coreutils-8.31/lib/i-ring.c:47
0x0000a42e      8b7718         mov esi, dword [rdi + 0x18]             ; ../coreutils-8.31/lib/i-ring.c:49
0x0000a431      894f14         mov dword [rdi + 0x14], ecx             ; ../coreutils-8.31/lib/i-ring.c:48
0x0000a434      39ce           cmp esi, ecx                            ; ../coreutils-8.31/lib/i-ring.c:49
0x0000a436      7508           jne 0xa440
0x0000a438      01f2           add edx, esi                            ; ../coreutils-8.31/lib/i-ring.c:50
0x0000a43a      83e203         and edx, 3
0x0000a43d      895718         mov dword [rdi + 0x18], edx
0x0000a440      c6471c00       mov byte [rdi + 0x1c], 0                ; ../coreutils-8.31/lib/i-ring.c:51
0x0000a444      c3             ret                                     ; ../coreutils-8.31/lib/i-ring.c:53
0x0000a445      90             nop
0x0000a446      662e0f1f8400.  nop word cs:[rax + rax]
;-- i_ring_pop:
0x0000a450      807f1c00       cmp byte [rdi + 0x1c], 0                ; ../coreutils-8.31/lib/i-ring.c:57
0x0000a454      752f           jne 0xa485
0x0000a456      8b4714         mov eax, dword [rdi + 0x14]             ; ../coreutils-8.31/lib/i-ring.c:61
0x0000a459      8b7710         mov esi, dword [rdi + 0x10]             ; ../coreutils-8.31/lib/i-ring.c:62
0x0000a45c      488d0c87       lea rcx, [rdi + rax*4]
0x0000a460      4889c2         mov rdx, rax                            ; ../coreutils-8.31/lib/i-ring.c:61
0x0000a463      8b01           mov eax, dword [rcx]
0x0000a465      8931           mov dword [rcx], esi                    ; ../coreutils-8.31/lib/i-ring.c:62
0x0000a467      3b5718         cmp edx, dword [rdi + 0x18]             ; ../coreutils-8.31/lib/i-ring.c:63
0x0000a46a      7414           je 0xa480
0x0000a46c      83c203         add edx, 3                              ; ../coreutils-8.31/lib/i-ring.c:66
0x0000a46f      83e203         and edx, 3
0x0000a472      895714         mov dword [rdi + 0x14], edx
0x0000a475      c3             ret                                     ; ../coreutils-8.31/lib/i-ring.c:68
0x0000a476      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a480      c6471c01       mov byte [rdi + 0x1c], 1                ; ../coreutils-8.31/lib/i-ring.c:64
0x0000a484      c3             ret
0x0000a485      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/i-ring.c:57
0x0000a489      e82275ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/i-ring.c:60
0x0000a48e      6690           nop
;-- locale_charset:
0x0000a490      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/localcharset.c:688
0x0000a494      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x0000a499      e8c277ffff     call sym.imp.nl_langinfo
0x0000a49e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x0000a4a1      741d           je 0xa4c0
0x0000a4a3      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x0000a4a6      488d15732100.  lea rdx, [0x0000c620]                   ; "ASCII"
0x0000a4ad      480f44c2       cmove rax, rdx
0x0000a4b1      4883c408       add rsp, 8
0x0000a4b5      c3             ret
0x0000a4b6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a4c0      488d05592100.  lea rax, [0x0000c620]                   ; "ASCII"
0x0000a4c7      4883c408       add rsp, 8
0x0000a4cb      c3             ret
0x0000a4cc      0f1f4000       nop dword [rax]
;-- openat_safer:
0x0000a4d0      4883ec58       sub rsp, 0x58                           ; ../coreutils-8.31/lib/openat-safer.c:30
0x0000a4d4      48894c2438     mov qword [rsp + 0x38], rcx
0x0000a4d9      31c9           xor ecx, ecx
0x0000a4db      64488b042528.  mov rax, qword fs:[0x28]
0x0000a4e4      4889442418     mov qword [rsp + 0x18], rax
0x0000a4e9      31c0           xor eax, eax
0x0000a4eb      f6c240         test dl, 0x40                           ; ../coreutils-8.31/lib/openat-safer.c:33 ; segment.PHDR
0x0000a4ee      7528           jne 0xa518
0x0000a4f0      31c0           xor eax, eax
0x0000a4f2      e8c975ffff     call sym.imp.openat                     ; fcntl2.h:-83
0x0000a4f7      89c7           mov edi, eax
0x0000a4f9      e8c2000000     call sym.fd_safer                       ; fcntl2.h:-82
0x0000a4fe      488b742418     mov rsi, qword [rsp + 0x18]
0x0000a503      644833342528.  xor rsi, qword fs:[0x28]
0x0000a50c      752b           jne 0xa539
0x0000a50e      4883c458       add rsp, 0x58
0x0000a512      c3             ret
0x0000a513      0f1f440000     nop dword [rax + rax]                   ; fcntl2.h:-92
0x0000a518      488d442460     lea rax, [rsp + 0x60]
0x0000a51d      c70424180000.  mov dword [rsp], 0x18                   ; [0x18:4]=0x2380 rip
0x0000a524      8b4c2438       mov ecx, dword [rsp + 0x38]
0x0000a528      4889442408     mov qword [rsp + 8], rax
0x0000a52d      488d442420     lea rax, [rsp + 0x20]
0x0000a532      4889442410     mov qword [rsp + 0x10], rax
0x0000a537      ebb7           jmp 0xa4f0
0x0000a539      e89275ffff     call sym.imp.__stack_chk_fail           ; fcntl2.h:-82
0x0000a53e      6690           nop
;-- opendirat:
0x0000a540      4155           push r13                                ; ../coreutils-8.31/lib/opendirat.c:37
0x0000a542      4154           push r12
0x0000a544      81ca00090900   or edx, 0x90900                         ; ../coreutils-8.31/lib/opendirat.c:38
0x0000a54a      55             push rbp                                ; ../coreutils-8.31/lib/opendirat.c:37
0x0000a54b      53             push rbx
0x0000a54c      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/opendirat.c:40
0x0000a54e      4989cc         mov r12, rcx                            ; ../coreutils-8.31/lib/opendirat.c:37
0x0000a551      4883ec08       sub rsp, 8
0x0000a555      e876ffffff     call sym.openat_safer                   ; ../coreutils-8.31/lib/opendirat.c:40
0x0000a55a      85c0           test eax, eax                           ; ../coreutils-8.31/lib/opendirat.c:42
0x0000a55c      7852           js 0xa5b0
0x0000a55e      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/opendirat.c:44
0x0000a560      89c3           mov ebx, eax
0x0000a562      e8c977ffff     call sym.imp.fdopendir
0x0000a567      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/opendirat.c:45
0x0000a56a      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/opendirat.c:44
0x0000a56d      7419           je 0xa588                               ; ../coreutils-8.31/lib/opendirat.c:45
0x0000a56f      41891c24       mov dword [r12], ebx                    ; ../coreutils-8.31/lib/opendirat.c:46
0x0000a573      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/opendirat.c:54
0x0000a577      4889e8         mov rax, rbp
0x0000a57a      5b             pop rbx
0x0000a57b      5d             pop rbp
0x0000a57c      415c           pop r12
0x0000a57e      415d           pop r13
0x0000a580      c3             ret
0x0000a581      0f1f80000000.  nop dword [rax]
0x0000a588      e83374ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/opendirat.c:49
0x0000a58d      448b28         mov r13d, dword [rax]
0x0000a590      4989c4         mov r12, rax
0x0000a593      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/opendirat.c:50
0x0000a595      e8d675ffff     call sym.imp.close
0x0000a59a      4889e8         mov rax, rbp                            ; ../coreutils-8.31/lib/opendirat.c:54
0x0000a59d      45892c24       mov dword [r12], r13d                   ; ../coreutils-8.31/lib/opendirat.c:51
0x0000a5a1      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/opendirat.c:54
0x0000a5a5      5b             pop rbx
0x0000a5a6      5d             pop rbp
0x0000a5a7      415c           pop r12
0x0000a5a9      415d           pop r13
0x0000a5ab      c3             ret
0x0000a5ac      0f1f4000       nop dword [rax]
0x0000a5b0      4883c408       add rsp, 8
0x0000a5b4      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/opendirat.c:43
0x0000a5b6      5b             pop rbx                                 ; ../coreutils-8.31/lib/opendirat.c:54
0x0000a5b7      4889e8         mov rax, rbp
0x0000a5ba      5d             pop rbp
0x0000a5bb      415c           pop r12
0x0000a5bd      415d           pop r13
0x0000a5bf      c3             ret
;-- fd_safer:
0x0000a5c0      4155           push r13
0x0000a5c2      4154           push r12
0x0000a5c4      55             push rbp
0x0000a5c5      53             push rbx
0x0000a5c6      89fb           mov ebx, edi
0x0000a5c8      4883ec08       sub rsp, 8
0x0000a5cc      83ff02         cmp edi, 2                              ; ../coreutils-8.31/lib/fd-safer.c:39
0x0000a5cf      7721           ja 0xa5f2
0x0000a5d1      e8ca030000     call sym.dup_safer                      ; ../coreutils-8.31/lib/fd-safer.c:41
0x0000a5d6      4189c4         mov r12d, eax
0x0000a5d9      e8e273ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fd-safer.c:42
0x0000a5de      448b28         mov r13d, dword [rax]
0x0000a5e1      4889c5         mov rbp, rax
0x0000a5e4      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fd-safer.c:43
0x0000a5e6      e88575ffff     call sym.imp.close
0x0000a5eb      4489e3         mov ebx, r12d                           ; ../coreutils-8.31/lib/fd-safer.c:45
0x0000a5ee      44896d00       mov dword [rbp], r13d                   ; ../coreutils-8.31/lib/fd-safer.c:44
0x0000a5f2      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fd-safer.c:49
0x0000a5f6      89d8           mov eax, ebx
0x0000a5f8      5b             pop rbx
0x0000a5f9      5d             pop rbp
0x0000a5fa      415c           pop r12
0x0000a5fc      415d           pop r13
0x0000a5fe      c3             ret
0x0000a5ff      90             nop
;-- rpl_fclose:
0x0000a600      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x0000a602      55             push rbp
0x0000a603      53             push rbx
0x0000a604      4889fb         mov rbx, rdi
0x0000a607      e80476ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x0000a60c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x0000a60e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x0000a611      7854           js 0xa667                               ; ../coreutils-8.31/lib/fclose.c:66
0x0000a613      e87876ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x0000a618      85c0           test eax, eax
0x0000a61a      752c           jne 0xa648
0x0000a61c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x0000a61f      e8dc020000     call sym.rpl_fflush
0x0000a624      85c0           test eax, eax
0x0000a626      743c           je 0xa664
0x0000a628      e89373ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x0000a62d      448b20         mov r12d, dword [rax]
0x0000a630      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x0000a633      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x0000a636      e80574ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x0000a63b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x0000a63e      7530           jne 0xa670
0x0000a640      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x0000a641      5d             pop rbp
0x0000a642      415c           pop r12
0x0000a644      c3             ret
0x0000a645      0f1f00         nop dword [rax]
0x0000a648      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x0000a64b      e8c075ffff     call sym.imp.fileno
0x0000a650      31f6           xor esi, esi
0x0000a652      ba01000000     mov edx, 1
0x0000a657      89c7           mov edi, eax
0x0000a659      e8e274ffff     call sym.imp.lseek
0x0000a65e      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000a662      75b8           jne 0xa61c
0x0000a664      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x0000a667      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x0000a668      5d             pop rbp
0x0000a669      415c           pop r12
0x0000a66b      e9d073ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x0000a670      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x0000a674      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x0000a679      ebc5           jmp 0xa640
0x0000a67b      0f1f440000     nop dword [rax + rax]
;-- rpl_fcntl:
0x0000a680      4154           push r12                                ; ../coreutils-8.31/lib/fcntl.c:206
0x0000a682      55             push rbp
0x0000a683      89fd           mov ebp, edi
0x0000a685      53             push rbx
0x0000a686      4883ec50       sub rsp, 0x50
0x0000a68a      64488b042528.  mov rax, qword fs:[0x28]
0x0000a693      4889442418     mov qword [rsp + 0x18], rax
0x0000a698      31c0           xor eax, eax
0x0000a69a      488d442470     lea rax, [rsp + 0x70]                   ; ../coreutils-8.31/lib/fcntl.c:209
0x0000a69f      85f6           test esi, esi                           ; ../coreutils-8.31/lib/fcntl.c:210
0x0000a6a1      4889542430     mov qword [rsp + 0x30], rdx             ; ../coreutils-8.31/lib/fcntl.c:206
0x0000a6a6      48894c2438     mov qword [rsp + 0x38], rcx
0x0000a6ab      4c89442440     mov qword [rsp + 0x40], r8
0x0000a6b0      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/fcntl.c:209
0x0000a6b5      488d442420     lea rax, [rsp + 0x20]
0x0000a6ba      4c894c2448     mov qword [rsp + 0x48], r9              ; ../coreutils-8.31/lib/fcntl.c:206
0x0000a6bf      c70424100000.  mov dword [rsp], 0x10                   ; ../coreutils-8.31/lib/fcntl.c:209 ; [0x10:4]=0x3e0003
0x0000a6c6      4889442410     mov qword [rsp + 0x10], rax
0x0000a6cb      0f8401020000   je 0xa8d2                               ; ../coreutils-8.31/lib/fcntl.c:210
0x0000a6d1      81fe06040000   cmp esi, 0x406
0x0000a6d7      7547           jne 0xa720
0x0000a6d9      488b442410     mov rax, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/fcntl.c:221
0x0000a6de      833d534b2000.  cmp dword [obj.have_dupfd_cloexec.3326], 0 ; ../coreutils-8.31/lib/fcntl.c:507 ; [0x20f238:4]=0
0x0000a6e5      c70424180000.  mov dword [rsp], 0x18                   ; ../coreutils-8.31/lib/fcntl.c:221 ; [0x18:4]=0x2380 rip
0x0000a6ec      448b6010       mov r12d, dword [rax + 0x10]
0x0000a6f0      4489e2         mov edx, r12d                           ; ../coreutils-8.31/lib/fcntl.c:509
0x0000a6f3      0f882a010000   js 0xa823                               ; ../coreutils-8.31/lib/fcntl.c:507
0x0000a6f9      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x0000a6fb      be06040000     mov esi, 0x406
0x0000a700      e81b73ffff     call sym.imp.fcntl
0x0000a705      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fcntl.c:510
0x0000a707      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x0000a709      0f8889010000   js 0xa898                               ; ../coreutils-8.31/lib/fcntl.c:510
0x0000a70f      c7051f4b2000.  mov dword [obj.have_dupfd_cloexec.3326], 1 ; ../coreutils-8.31/lib/fcntl.c:512 ; [0x20f238:4]=0
0x0000a719      eb45           jmp 0xa760
0x0000a71b      0f1f440000     nop dword [rax + rax]
0x0000a720      83fe0b         cmp esi, 0xb                            ; ../coreutils-8.31/lib/fcntl.c:258
0x0000a723      742b           je 0xa750
0x0000a725      7f59           jg 0xa780
0x0000a727      83fe04         cmp esi, 4
0x0000a72a      0f84d0000000   je 0xa800
0x0000a730      0f8fba000000   jg 0xa7f0
0x0000a736      83fe02         cmp esi, 2
0x0000a739      0f84c1000000   je 0xa800
0x0000a73f      7f0f           jg 0xa750
0x0000a741      83fe01         cmp esi, 1
0x0000a744      7562           jne 0xa7a8
0x0000a746      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a750      89ef           mov edi, ebp
0x0000a752      31c0           xor eax, eax
0x0000a754      e8c772ffff     call sym.imp.fcntl
0x0000a759      89c3           mov ebx, eax
0x0000a75b      0f1f440000     nop dword [rax + rax]
0x0000a760      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0000a765      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000a76e      89d8           mov eax, ebx
0x0000a770      0f8557010000   jne 0xa8cd                              ; ../coreutils-8.31/lib/fcntl.c:355
0x0000a776      4883c450       add rsp, 0x50
0x0000a77a      5b             pop rbx
0x0000a77b      5d             pop rbp
0x0000a77c      415c           pop r12
0x0000a77e      c3             ret
0x0000a77f      90             nop
0x0000a780      81fe07040000   cmp esi, 0x407
0x0000a786      7f48           jg 0xa7d0
0x0000a788      81fe06040000   cmp esi, 0x406
0x0000a78e      7d70           jge 0xa800
0x0000a790      81fe01040000   cmp esi, 0x401
0x0000a796      74b8           je 0xa750
0x0000a798      81fe02040000   cmp esi, 0x402                          ; ../coreutils-8.31/lib/fcntl.c:183
0x0000a79e      7460           je 0xa800
0x0000a7a0      81fe00040000   cmp esi, 0x400
0x0000a7a6      7458           je 0xa800
0x0000a7a8      8b0424         mov eax, dword [rsp]
0x0000a7ab      83f82f         cmp eax, 0x2f
0x0000a7ae      0f8736010000   ja 0xa8ea
0x0000a7b4      4803442410     add rax, qword [rsp + 0x10]
0x0000a7b9      488b10         mov rdx, qword [rax]
0x0000a7bc      89ef           mov edi, ebp
0x0000a7be      31c0           xor eax, eax
0x0000a7c0      e85b72ffff     call sym.imp.fcntl
0x0000a7c5      89c3           mov ebx, eax
0x0000a7c7      eb97           jmp 0xa760
0x0000a7c9      0f1f80000000.  nop dword [rax]
0x0000a7d0      81fe09040000   cmp esi, 0x409
0x0000a7d6      7428           je 0xa800
0x0000a7d8      0f8c72ffffff   jl 0xa750
0x0000a7de      81fe0a040000   cmp esi, 0x40a
0x0000a7e4      75c2           jne 0xa7a8
0x0000a7e6      e965ffffff     jmp 0xa750                              ; ../coreutils-8.31/lib/fcntl.c:350
0x0000a7eb      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fcntl.c:406
0x0000a7f0      83fe09         cmp esi, 9
0x0000a7f3      0f8457ffffff   je 0xa750
0x0000a7f9      7f05           jg 0xa800
0x0000a7fb      83fe08         cmp esi, 8
0x0000a7fe      75a8           jne 0xa7a8
0x0000a800      8b0424         mov eax, dword [rsp]
0x0000a803      83f82f         cmp eax, 0x2f
0x0000a806      0f87e8000000   ja 0xa8f4
0x0000a80c      4803442410     add rax, qword [rsp + 0x10]
0x0000a811      8b10           mov edx, dword [rax]
0x0000a813      89ef           mov edi, ebp
0x0000a815      31c0           xor eax, eax
0x0000a817      e80472ffff     call sym.imp.fcntl
0x0000a81c      89c3           mov ebx, eax
0x0000a81e      e93dffffff     jmp 0xa760
0x0000a823      31f6           xor esi, esi
0x0000a825      31c0           xor eax, eax
0x0000a827      e8f471ffff     call sym.imp.fcntl
0x0000a82c      85c0           test eax, eax
0x0000a82e      89c3           mov ebx, eax
0x0000a830      0f882affffff   js 0xa760
0x0000a836      833dfb492000.  cmp dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x20f238:4]=0
0x0000a83d      0f851dffffff   jne 0xa760
0x0000a843      31c0           xor eax, eax
0x0000a845      be01000000     mov esi, 1
0x0000a84a      89df           mov edi, ebx
0x0000a84c      e8cf71ffff     call sym.imp.fcntl
0x0000a851      85c0           test eax, eax
0x0000a853      781c           js 0xa871
0x0000a855      83c801         or eax, 1
0x0000a858      be02000000     mov esi, 2
0x0000a85d      89df           mov edi, ebx
0x0000a85f      89c2           mov edx, eax
0x0000a861      31c0           xor eax, eax
0x0000a863      e8b871ffff     call sym.imp.fcntl
0x0000a868      83f8ff         cmp eax, 0xffffffff
0x0000a86b      0f85effeffff   jne 0xa760
0x0000a871      e84a71ffff     call sym.imp.__errno_location
0x0000a876      448b20         mov r12d, dword [rax]
0x0000a879      4889c5         mov rbp, rax
0x0000a87c      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fcntl.c:446
0x0000a87e      e8ed72ffff     call sym.imp.close                      ; ../coreutils-8.31/lib/fcntl.c:406
0x0000a883      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x0000a888      44896500       mov dword [rbp], r12d
0x0000a88c      e9cffeffff     jmp 0xa760
0x0000a891      0f1f80000000.  nop dword [rax]
0x0000a898      e82371ffff     call sym.imp.__errno_location
0x0000a89d      833816         cmp dword [rax], 0x16
0x0000a8a0      0f8569feffff   jne 0xa70f
0x0000a8a6      31f6           xor esi, esi
0x0000a8a8      31c0           xor eax, eax
0x0000a8aa      4489e2         mov edx, r12d
0x0000a8ad      89ef           mov edi, ebp                            ; ../coreutils-8.31/lib/fcntl.c:141
0x0000a8af      e86c71ffff     call sym.imp.fcntl
0x0000a8b4      85c0           test eax, eax
0x0000a8b6      89c3           mov ebx, eax
0x0000a8b8      0f88a2feffff   js 0xa760
0x0000a8be      c70570492000.  mov dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x20f238:4]=0
0x0000a8c8      e976ffffff     jmp 0xa843
0x0000a8cd      e8fe71ffff     call sym.imp.__stack_chk_fail
0x0000a8d2      488b442410     mov rax, qword [rsp + 0x10]
0x0000a8d7      31f6           xor esi, esi
0x0000a8d9      8b5010         mov edx, dword [rax + 0x10]
0x0000a8dc      31c0           xor eax, eax
0x0000a8de      e83d71ffff     call sym.imp.fcntl
0x0000a8e3      89c3           mov ebx, eax
0x0000a8e5      e976feffff     jmp 0xa760
0x0000a8ea      488b442408     mov rax, qword [rsp + 8]
0x0000a8ef      e9c5feffff     jmp 0xa7b9
0x0000a8f4      488b442408     mov rax, qword [rsp + 8]
0x0000a8f9      e913ffffff     jmp 0xa811
0x0000a8fe      6690           nop
;-- rpl_fflush:
0x0000a900      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x0000a903      53             push rbx
0x0000a904      4889fb         mov rbx, rdi
0x0000a907      7411           je 0xa91a                               ; ../coreutils-8.31/lib/fflush.c:150
0x0000a909      e88273ffff     call sym.imp.__freading
0x0000a90e      85c0           test eax, eax
0x0000a910      7408           je 0xa91a
0x0000a912      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x0000a918      750e           jne 0xa928
0x0000a91a      4889df         mov rdi, rbx
0x0000a91d      5b             pop rbx
0x0000a91e      e92d73ffff     jmp sym.imp.fflush
0x0000a923      0f1f440000     nop dword [rax + rax]
0x0000a928      4889df         mov rdi, rbx
0x0000a92b      ba01000000     mov edx, 1
0x0000a930      31f6           xor esi, esi
0x0000a932      e809000000     call sym.rpl_fseeko
0x0000a937      4889df         mov rdi, rbx
0x0000a93a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x0000a93b      e91073ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x0000a940      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x0000a944      48394710       cmp qword [rdi + 0x10], rax
0x0000a948      7406           je 0xa950                               ; ../coreutils-8.31/lib/fseeko.c:32
0x0000a94a      e9c173ffff     jmp sym.imp.fseeko
0x0000a94f      90             nop
0x0000a950      488b4720       mov rax, qword [rdi + 0x20]
0x0000a954      48394728       cmp qword [rdi + 0x28], rax
0x0000a958      75f0           jne 0xa94a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x0000a95a      48837f4800     cmp qword [rdi + 0x48], 0
0x0000a95f      75e9           jne 0xa94a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x0000a961      4154           push r12
0x0000a963      55             push rbp
0x0000a964      4189d4         mov r12d, edx
0x0000a967      53             push rbx
0x0000a968      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x0000a96b      4889fb         mov rbx, rdi
0x0000a96e      e89d72ffff     call sym.imp.fileno
0x0000a973      4489e2         mov edx, r12d
0x0000a976      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x0000a979      89c7           mov edi, eax
0x0000a97b      e8c071ffff     call sym.imp.lseek
0x0000a980      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000a984      740c           je 0xa992
0x0000a986      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x0000a989      488983900000.  mov qword [rbx + 0x90], rax
0x0000a990      31c0           xor eax, eax
0x0000a992      5b             pop rbx
0x0000a993      5d             pop rbp
0x0000a994      415c           pop r12
0x0000a996      c3             ret
0x0000a997      660f1f840000.  nop word [rax + rax]
;-- dup_safer:
0x0000a9a0      ba03000000     mov edx, 3                              ; /istd.h:32
0x0000a9a5      31f6           xor esi, esi
0x0000a9a7      31c0           xor eax, eax
0x0000a9a9      e9d2fcffff     jmp sym.rpl_fcntl
0x0000a9ae      6690           nop
;-- __libc_csu_init:
0x0000a9b0      4157           push r15
0x0000a9b2      4156           push r14
0x0000a9b4      4989d7         mov r15, rdx
0x0000a9b7      4155           push r13
0x0000a9b9      4154           push r12
0x0000a9bb      4c8d25ae3f20.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x20e970
0x0000a9c2      55             push rbp
0x0000a9c3      488d2dae3f20.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x20e978 ; "@$"
0x0000a9ca      53             push rbx
0x0000a9cb      4189fd         mov r13d, edi
0x0000a9ce      4989f6         mov r14, rsi
0x0000a9d1      4c29e5         sub rbp, r12
0x0000a9d4      4883ec08       sub rsp, 8
0x0000a9d8      48c1fd03       sar rbp, 3
0x0000a9dc      e88f6fffff     call sym._init
0x0000a9e1      4885ed         test rbp, rbp
0x0000a9e4      7420           je 0xaa06
0x0000a9e6      31db           xor ebx, ebx
0x0000a9e8      0f1f84000000.  nop dword [rax + rax]
0x0000a9f0      4c89fa         mov rdx, r15
0x0000a9f3      4c89f6         mov rsi, r14
0x0000a9f6      4489ef         mov edi, r13d
0x0000a9f9      41ff14dc       call qword [r12 + rbx*8]
0x0000a9fd      4883c301       add rbx, 1
0x0000aa01      4839dd         cmp rbp, rbx
0x0000aa04      75ea           jne 0xa9f0
0x0000aa06      4883c408       add rsp, 8
0x0000aa0a      5b             pop rbx
0x0000aa0b      5d             pop rbp
0x0000aa0c      415c           pop r12
0x0000aa0e      415d           pop r13
0x0000aa10      415e           pop r14
0x0000aa12      415f           pop r15
0x0000aa14      c3             ret
0x0000aa15      90             nop
0x0000aa16      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x0000aa20      f3c3           ret
0x0000aa22      662e0f1f8400.  nop word cs:[rax + rax]
0x0000aa2c      0f1f4000       nop dword [rax]
;-- atexit:
0x0000aa30      488b15d14520.  mov rdx, qword [obj.__dso_handle]       ; [0x20f008:8]=0x20f008 obj.__dso_handle
0x0000aa37      31f6           xor esi, esi
0x0000aa39      e92273ffff     jmp sym.imp.__cxa_atexit
0x0000aa3e      0000           add byte [rax], al
