;-- section..plt:
;-- .plt:
0x00001910      ff359a742000   push qword [0x00208db0]                 ; [12] -r-x section size 1088 named .plt
0x00001916      ff259c742000   jmp qword [0x00208db8]                  ; [0x208db8:8]=0
0x0000191c      0f1f4000       nop dword [rax]
;-- imp.sigprocmask:
0x00001920      ff259a742000   jmp qword [reloc.sigprocmask]           ; [0x208dc0:8]=0x1926 ; "&\x19"
0x00001926      6800000000     push 0
0x0000192b      e9e0ffffff     jmp sym..plt
;-- imp.__snprintf_chk:
0x00001930      ff2592742000   jmp qword [reloc.__snprintf_chk]        ; [0x208dc8:8]=0x1936 ; "6\x19"
0x00001936      6801000000     push 1
0x0000193b      e9d0ffffff     jmp sym..plt
;-- imp.raise:
0x00001940      ff258a742000   jmp qword [reloc.raise]                 ; [0x208dd0:8]=0x1946 ; "F\x19"
0x00001946      6802000000     push 2
0x0000194b      e9c0ffffff     jmp sym..plt
;-- imp.free:
0x00001950      ff2582742000   jmp qword [reloc.free]                  ; [0x208dd8:8]=0x1956 ; "V\x19"
0x00001956      6803000000     push 3
0x0000195b      e9b0ffffff     jmp sym..plt
;-- imp.abort:
0x00001960      ff257a742000   jmp qword [reloc.abort]                 ; [0x208de0:8]=0x1966 ; "f\x19"
0x00001966      6804000000     push 4
0x0000196b      e9a0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x00001970      ff2572742000   jmp qword [reloc.__errno_location]      ; [0x208de8:8]=0x1976 ; "v\x19"
0x00001976      6805000000     push 5
0x0000197b      e990ffffff     jmp sym..plt
;-- imp.strncmp:
0x00001980      ff256a742000   jmp qword [reloc.strncmp]               ; [0x208df0:8]=0x1986
0x00001986      6806000000     push 6
0x0000198b      e980ffffff     jmp sym..plt
;-- imp._exit:
0x00001990      ff2562742000   jmp qword [reloc._exit]                 ; [0x208df8:8]=0x1996
0x00001996      6807000000     push 7
0x0000199b      e970ffffff     jmp sym..plt
;-- imp.strcpy:
0x000019a0      ff255a742000   jmp qword [reloc.strcpy]                ; [0x208e00:8]=0x19a6
0x000019a6      6808000000     push 8
0x000019ab      e960ffffff     jmp sym..plt
;-- imp.__fpending:
0x000019b0      ff2552742000   jmp qword [reloc.__fpending]            ; [0x208e08:8]=0x19b6
0x000019b6      6809000000     push 9
0x000019bb      e950ffffff     jmp sym..plt
;-- imp.sigaction:
0x000019c0      ff254a742000   jmp qword [reloc.sigaction]             ; [0x208e10:8]=0x19c6
0x000019c6      680a000000     push 0xa
0x000019cb      e940ffffff     jmp sym..plt
;-- imp.strtod:
0x000019d0      ff2542742000   jmp qword [reloc.strtod]                ; [0x208e18:8]=0x19d6
0x000019d6      680b000000     push 0xb
0x000019db      e930ffffff     jmp sym..plt
;-- imp.textdomain:
0x000019e0      ff253a742000   jmp qword [reloc.textdomain]            ; [0x208e20:8]=0x19e6
0x000019e6      680c000000     push 0xc
0x000019eb      e920ffffff     jmp sym..plt
;-- imp.strtod_l:
0x000019f0      ff2532742000   jmp qword [reloc.strtod_l]              ; [0x208e28:8]=0x19f6
0x000019f6      680d000000     push 0xd
0x000019fb      e910ffffff     jmp sym..plt
;-- imp.fclose:
0x00001a00      ff252a742000   jmp qword [reloc.fclose]                ; [0x208e30:8]=0x1a06
0x00001a06      680e000000     push 0xe
0x00001a0b      e900ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001a10      ff2522742000   jmp qword [reloc.bindtextdomain]        ; [0x208e38:8]=0x1a16
0x00001a16      680f000000     push 0xf
0x00001a1b      e9f0feffff     jmp sym..plt
;-- imp.dcgettext:
0x00001a20      ff251a742000   jmp qword [reloc.dcgettext]             ; [0x208e40:8]=0x1a26 ; "&\x1a"
0x00001a26      6810000000     push 0x10
0x00001a2b      e9e0feffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001a30      ff2512742000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x208e48:8]=0x1a36 ; "6\x1a"
0x00001a36      6811000000     push 0x11
0x00001a3b      e9d0feffff     jmp sym..plt
;-- imp.strlen:
0x00001a40      ff250a742000   jmp qword [reloc.strlen]                ; [0x208e50:8]=0x1a46 ; "F\x1a"
0x00001a46      6812000000     push 0x12
0x00001a4b      e9c0feffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001a50      ff2502742000   jmp qword [reloc.__stack_chk_fail]      ; [0x208e58:8]=0x1a56 ; "V\x1a"
0x00001a56      6813000000     push 0x13
0x00001a5b      e9b0feffff     jmp sym..plt
;-- imp.getopt_long:
0x00001a60      ff25fa732000   jmp qword [reloc.getopt_long]           ; [0x208e60:8]=0x1a66 ; "f\x1a"
0x00001a66      6814000000     push 0x14
0x00001a6b      e9a0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001a70      ff25f2732000   jmp qword [reloc.mbrtowc]               ; [0x208e68:8]=0x1a76 ; "v\x1a"
0x00001a76      6815000000     push 0x15
0x00001a7b      e990feffff     jmp sym..plt
;-- imp.strchr:
0x00001a80      ff25ea732000   jmp qword [reloc.strchr]                ; [0x208e70:8]=0x1a86
0x00001a86      6816000000     push 0x16
0x00001a8b      e980feffff     jmp sym..plt
;-- imp.newlocale:
0x00001a90      ff25e2732000   jmp qword [reloc.newlocale]             ; [0x208e78:8]=0x1a96
0x00001a96      6817000000     push 0x17
0x00001a9b      e970feffff     jmp sym..plt
;-- imp.strrchr:
0x00001aa0      ff25da732000   jmp qword [reloc.strrchr]               ; [0x208e80:8]=0x1aa6
0x00001aa6      6818000000     push 0x18
0x00001aab      e960feffff     jmp sym..plt
;-- imp.lseek:
0x00001ab0      ff25d2732000   jmp qword [reloc.lseek]                 ; [0x208e88:8]=0x1ab6
0x00001ab6      6819000000     push 0x19
0x00001abb      e950feffff     jmp sym..plt
;-- imp.memset:
0x00001ac0      ff25ca732000   jmp qword [reloc.memset]                ; [0x208e90:8]=0x1ac6
0x00001ac6      681a000000     push 0x1a
0x00001acb      e940feffff     jmp sym..plt
;-- imp.alarm:
0x00001ad0      ff25c2732000   jmp qword [reloc.alarm]                 ; [0x208e98:8]=0x1ad6
0x00001ad6      681b000000     push 0x1b
0x00001adb      e930feffff     jmp sym..plt
;-- imp.memcmp:
0x00001ae0      ff25ba732000   jmp qword [reloc.memcmp]                ; [0x208ea0:8]=0x1ae6
0x00001ae6      681c000000     push 0x1c
0x00001aeb      e920feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001af0      ff25b2732000   jmp qword [reloc.fputs_unlocked]        ; [0x208ea8:8]=0x1af6
0x00001af6      681d000000     push 0x1d
0x00001afb      e910feffff     jmp sym..plt
;-- imp.calloc:
0x00001b00      ff25aa732000   jmp qword [reloc.calloc]                ; [0x208eb0:8]=0x1b06
0x00001b06      681e000000     push 0x1e
0x00001b0b      e900feffff     jmp sym..plt
;-- imp.strcmp:
0x00001b10      ff25a2732000   jmp qword [reloc.strcmp]                ; [0x208eb8:8]=0x1b16
0x00001b16      681f000000     push 0x1f
0x00001b1b      e9f0fdffff     jmp sym..plt
;-- imp.signal:
0x00001b20      ff259a732000   jmp qword [reloc.signal]                ; [0x208ec0:8]=0x1b26 ; "&\x1b"
0x00001b26      6820000000     push 0x20                               ; "@"
0x00001b2b      e9e0fdffff     jmp sym..plt
;-- imp.sigemptyset:
0x00001b30      ff2592732000   jmp qword [reloc.sigemptyset]           ; [0x208ec8:8]=0x1b36 ; "6\x1b"
0x00001b36      6821000000     push 0x21                               ; '!'
0x00001b3b      e9d0fdffff     jmp sym..plt
;-- imp.strtol:
0x00001b40      ff258a732000   jmp qword [reloc.strtol]                ; [0x208ed0:8]=0x1b46 ; "F\x1b"
0x00001b46      6822000000     push 0x22                               ; '"'
0x00001b4b      e9c0fdffff     jmp sym..plt
;-- imp.memcpy:
0x00001b50      ff2582732000   jmp qword [reloc.memcpy]                ; [0x208ed8:8]=0x1b56 ; "V\x1b"
0x00001b56      6823000000     push 0x23                               ; '#'
0x00001b5b      e9b0fdffff     jmp sym..plt
;-- imp.prctl:
0x00001b60      ff257a732000   jmp qword [reloc.prctl]                 ; [0x208ee0:8]=0x1b66 ; "f\x1b"
0x00001b66      6824000000     push 0x24                               ; '$'
0x00001b6b      e9a0fdffff     jmp sym..plt
;-- imp.kill:
0x00001b70      ff2572732000   jmp qword [reloc.kill]                  ; [0x208ee8:8]=0x1b76 ; "v\x1b"
0x00001b76      6825000000     push 0x25                               ; '%'
0x00001b7b      e990fdffff     jmp sym..plt
;-- imp.fileno:
0x00001b80      ff256a732000   jmp qword [reloc.fileno]                ; [0x208ef0:8]=0x1b86
0x00001b86      6826000000     push 0x26                               ; '&'
0x00001b8b      e980fdffff     jmp sym..plt
;-- imp.malloc:
0x00001b90      ff2562732000   jmp qword [reloc.malloc]                ; [0x208ef8:8]=0x1b96
0x00001b96      6827000000     push 0x27                               ; '''
0x00001b9b      e970fdffff     jmp sym..plt
;-- imp.fflush:
0x00001ba0      ff255a732000   jmp qword [reloc.fflush]                ; [0x208f00:8]=0x1ba6
0x00001ba6      6828000000     push 0x28                               ; '('
0x00001bab      e960fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001bb0      ff2552732000   jmp qword [reloc.nl_langinfo]           ; [0x208f08:8]=0x1bb6
0x00001bb6      6829000000     push 0x29                               ; ')'
0x00001bbb      e950fdffff     jmp sym..plt
;-- imp.sigsuspend:
0x00001bc0      ff254a732000   jmp qword [reloc.sigsuspend]            ; [0x208f10:8]=0x1bc6
0x00001bc6      682a000000     push 0x2a                               ; '*'
0x00001bcb      e940fdffff     jmp sym..plt
;-- imp.__freading:
0x00001bd0      ff2542732000   jmp qword [reloc.__freading]            ; [0x208f18:8]=0x1bd6
0x00001bd6      682b000000     push 0x2b                               ; '+'
0x00001bdb      e930fdffff     jmp sym..plt
;-- imp.realloc:
0x00001be0      ff253a732000   jmp qword [reloc.realloc]               ; [0x208f20:8]=0x1be6
0x00001be6      682c000000     push 0x2c                               ; ','
0x00001beb      e920fdffff     jmp sym..plt
;-- imp.setlocale:
0x00001bf0      ff2532732000   jmp qword [reloc.setlocale]             ; [0x208f28:8]=0x1bf6
0x00001bf6      682d000000     push 0x2d                               ; '-'
0x00001bfb      e910fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001c00      ff252a732000   jmp qword [reloc.__printf_chk]          ; [0x208f30:8]=0x1c06
0x00001c06      682e000000     push 0x2e                               ; '.'
0x00001c0b      e900fdffff     jmp sym..plt
;-- imp.error:
0x00001c10      ff2522732000   jmp qword [reloc.error]                 ; [0x208f38:8]=0x1c16
0x00001c16      682f000000     push 0x2f                               ; '/'
0x00001c1b      e9f0fcffff     jmp sym..plt
;-- imp.waitpid:
0x00001c20      ff251a732000   jmp qword [reloc.waitpid]               ; [0x208f40:8]=0x1c26 ; "&\x1c"
0x00001c26      6830000000     push 0x30                               ; '0'
0x00001c2b      e9e0fcffff     jmp sym..plt
;-- imp.fseeko:
0x00001c30      ff2512732000   jmp qword [reloc.fseeko]                ; [0x208f48:8]=0x1c36 ; "6\x1c"
0x00001c36      6831000000     push 0x31                               ; '1'
0x00001c3b      e9d0fcffff     jmp sym..plt
;-- imp.timer_settime:
0x00001c40      ff250a732000   jmp qword [reloc.timer_settime]         ; [0x208f50:8]=0x1c46 ; "F\x1c"
0x00001c46      6832000000     push 0x32                               ; '2'
0x00001c4b      e9c0fcffff     jmp sym..plt
;-- imp.timer_create:
0x00001c50      ff2502732000   jmp qword [reloc.timer_create]          ; [0x208f58:8]=0x1c56 ; "V\x1c"
0x00001c56      6833000000     push 0x33                               ; '3'
0x00001c5b      e9b0fcffff     jmp sym..plt
;-- imp.execvp:
0x00001c60      ff25fa722000   jmp qword [reloc.execvp]                ; [0x208f60:8]=0x1c66 ; "f\x1c"
0x00001c66      6834000000     push 0x34                               ; '4'
0x00001c6b      e9a0fcffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001c70      ff25f2722000   jmp qword [reloc.__cxa_atexit]          ; [0x208f68:8]=0x1c76 ; "v\x1c"
0x00001c76      6835000000     push 0x35                               ; '5'
0x00001c7b      e990fcffff     jmp sym..plt
;-- imp.setpgid:
0x00001c80      ff25ea722000   jmp qword [reloc.setpgid]               ; [0x208f70:8]=0x1c86
0x00001c86      6836000000     push 0x36                               ; '6'
0x00001c8b      e980fcffff     jmp sym..plt
;-- imp.__libc_current_sigrtmin:
0x00001c90      ff25e2722000   jmp qword [reloc.__libc_current_sigrtmin] ; [0x208f78:8]=0x1c96
0x00001c96      6837000000     push 0x37                               ; '7'
0x00001c9b      e970fcffff     jmp sym..plt
;-- imp.exit:
0x00001ca0      ff25da722000   jmp qword [reloc.exit]                  ; [0x208f80:8]=0x1ca6
0x00001ca6      6838000000     push 0x38                               ; '8'
0x00001cab      e960fcffff     jmp sym..plt
;-- imp.fwrite:
0x00001cb0      ff25d2722000   jmp qword [reloc.fwrite]                ; [0x208f88:8]=0x1cb6
0x00001cb6      6839000000     push 0x39                               ; '9'
0x00001cbb      e950fcffff     jmp sym..plt
;-- imp.timer_delete:
0x00001cc0      ff25ca722000   jmp qword [reloc.timer_delete]          ; [0x208f90:8]=0x1cc6
0x00001cc6      683a000000     push 0x3a                               ; ':'
0x00001ccb      e940fcffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001cd0      ff25c2722000   jmp qword [reloc.__fprintf_chk]         ; [0x208f98:8]=0x1cd6
0x00001cd6      683b000000     push 0x3b                               ; ';'
0x00001cdb      e930fcffff     jmp sym..plt
;-- imp.__libc_current_sigrtmax:
0x00001ce0      ff25ba722000   jmp qword [reloc.__libc_current_sigrtmax] ; [0x208fa0:8]=0x1ce6
0x00001ce6      683c000000     push 0x3c                               ; '<'
0x00001ceb      e920fcffff     jmp sym..plt
;-- imp.mbsinit:
0x00001cf0      ff25b2722000   jmp qword [reloc.mbsinit]               ; [0x208fa8:8]=0x1cf6
0x00001cf6      683d000000     push 0x3d                               ; '='
0x00001cfb      e910fcffff     jmp sym..plt
;-- imp.iswprint:
0x00001d00      ff25aa722000   jmp qword [reloc.iswprint]              ; [0x208fb0:8]=0x1d06
0x00001d06      683e000000     push 0x3e                               ; '>'
0x00001d0b      e900fcffff     jmp sym..plt
;-- imp.sigaddset:
0x00001d10      ff25a2722000   jmp qword [reloc.sigaddset]             ; [0x208fb8:8]=0x1d16
0x00001d16      683f000000     push 0x3f                               ; '?'
0x00001d1b      e9f0fbffff     jmp sym..plt
;-- imp.fork:
0x00001d20      ff259a722000   jmp qword [reloc.fork]                  ; [0x208fc0:8]=0x1d26 ; "&\x1d"
0x00001d26      6840000000     push 0x40                               ; segment.PHDR
0x00001d2b      e9e0fbffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00001d30      ff2592722000   jmp qword [reloc.__ctype_b_loc]         ; [0x208fc8:8]=0x1d36 ; "6\x1d"
0x00001d36      6841000000     push 0x41                               ; 'A'
0x00001d3b      e9d0fbffff     jmp sym..plt
;-- imp.__sprintf_chk:
0x00001d40      ff258a722000   jmp qword [reloc.__sprintf_chk]         ; [0x208fd0:8]=0x1d46 ; "F\x1d"
0x00001d46      6842000000     push 0x42                               ; 'B'
0x00001d4b      e9c0fbffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001d50      .qword 0x9066002072a225ff                              ; [13] -r-x section size 8 named .plt.got
0x00001d58      0000           add byte [rax], al
0x00001d5a      0000           add byte [rax], al
0x00001d5c      0000           add byte [rax], al
0x00001d5e      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x00001d60      4155           push r13                                ; [14] -r-x section size 16654 named .text
0x00001d62      4154           push r12
0x00001d64      55             push rbp
0x00001d65      53             push rbx
0x00001d66      89fd           mov ebp, edi
0x00001d68      4889f3         mov rbx, rsi
0x00001d6b      4881ec680100.  sub rsp, 0x168
0x00001d72      488b3e         mov rdi, qword [rsi]
0x00001d75      64488b042528.  mov rax, qword fs:[0x28]
0x00001d7e      488984245801.  mov qword [rsp + 0x158], rax
0x00001d86      31c0           xor eax, eax
0x00001d88      4c8da4244001.  lea r12, [rsp + 0x140]
0x00001d90      e8eb130000     call sym.set_program_name
0x00001d95      488d35c55000.  lea rsi, [0x00006e61]
0x00001d9c      bf06000000     mov edi, 6
0x00001da1      e84afeffff     call sym.imp.setlocale
0x00001da6      488d35e04100.  lea rsi, str.usr_local_share_locale     ; 0x5f8d ; "/usr/local/share/locale"
0x00001dad      488d3d974100.  lea rdi, [0x00005f4b]                   ; "coreutils"
0x00001db4      e857fcffff     call sym.imp.bindtextdomain
0x00001db9      488d3d8b4100.  lea rdi, [0x00005f4b]                   ; "coreutils"
0x00001dc0      e81bfcffff     call sym.imp.textdomain
0x00001dc5      488d3d441200.  lea rdi, sym.close_stdout               ; 0x3010 ; "USH\x83\xec\bH\x8b=Kb "
0x00001dcc      c7054a722000.  mov dword [obj.exit_failure], 0x7d      ; '}'
                                                                       ; [0x209020:4]=1
0x00001dd6      e885400000     call sym.atexit
0x00001ddb      0f1f440000     nop dword [rax + rax]
0x00001de0      488d0d596c20.  lea rcx, obj.long_options               ; 0x208a40
0x00001de7      488d15c54100.  lea rdx, str.k:s:v                      ; 0x5fb3 ; "+k:s:v"
0x00001dee      4531c0         xor r8d, r8d
0x00001df1      4889de         mov rsi, rbx
0x00001df4      89ef           mov edi, ebp
0x00001df6      e865fcffff     call sym.imp.getopt_long
0x00001dfb      83f8ff         cmp eax, 0xffffffff
0x00001dfe      0f84f8000000   je 0x1efc
0x00001e04      83f873         cmp eax, 0x73
0x00001e07      0f84ab000000   je 0x1eb8
0x00001e0d      7e39           jle 0x1e48
0x00001e0f      3d80000000     cmp eax, 0x80
0x00001e14      0f84d6000000   je 0x1ef0
0x00001e1a      3d81000000     cmp eax, 0x81
0x00001e1f      0f84bb000000   je 0x1ee0
0x00001e25      83f876         cmp eax, 0x76
0x00001e28      740e           je 0x1e38
0x00001e2a      bf7d000000     mov edi, 0x7d                           ; '}'
0x00001e2f      e81c0a0000     call sym.usage
0x00001e34      0f1f4000       nop dword [rax]
0x00001e38      c60579742000.  mov byte [obj.verbose], 1               ; [0x2092b8:1]=0
0x00001e3f      eb9f           jmp 0x1de0
0x00001e41      0f1f80000000.  nop dword [rax]
0x00001e48      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x00001e4d      0f84fd040000   je 0x2350
0x00001e53      83f86b         cmp eax, 0x6b
0x00001e56      7440           je 0x1e98
0x00001e58      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x00001e5d      75cb           jne 0x1e2a
0x00001e5f      488b3d027420.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209268:8]=0
0x00001e66      488b0dab7120.  mov rcx, qword [obj.Version]            ; [0x209018:8]=0x68c6 str.8.31
0x00001e6d      4c8d05314100.  lea r8, str.Padraig_Brady               ; 0x5fa5 ; "Padraig Brady"
0x00001e74      488d15cc4000.  lea rdx, str.GNU_coreutils              ; 0x5f47 ; "GNU coreutils"
0x00001e7b      488d35474000.  lea rsi, str.timeout                    ; 0x5ec9 ; "timeout"
0x00001e82      4531c9         xor r9d, r9d
0x00001e85      31c0           xor eax, eax
0x00001e87      e8e4340000     call sym.version_etc
0x00001e8c      31ff           xor edi, edi
0x00001e8e      e80dfeffff     call sym.imp.exit
0x00001e93      0f1f440000     nop dword [rax + rax]
0x00001e98      488b3dd97320.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x209278:8]=0
0x00001e9f      e8ac0d0000     call sym.parse_duration
0x00001ea4      f20f11051474.  movsd qword [obj.kill_after], xmm0      ; [0x2092c0:8]=0
0x00001eac      e92fffffff     jmp 0x1de0
0x00001eb1      0f1f80000000.  nop dword [rax]
0x00001eb8      488b3db97320.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x209278:8]=0
0x00001ebf      4c89e6         mov rsi, r12
0x00001ec2      e8790e0000     call sym.operand2sig
0x00001ec7      83f8ff         cmp eax, 0xffffffff
0x00001eca      890540712000   mov dword [obj.term_signal], eax        ; [0x209010:4]=15
0x00001ed0      0f850affffff   jne 0x1de0
0x00001ed6      e94fffffff     jmp 0x1e2a
0x00001edb      0f1f440000     nop dword [rax + rax]
0x00001ee0      c605d2732000.  mov byte [obj.preserve_status], 1       ; [0x2092b9:1]=0
0x00001ee7      e9f4feffff     jmp 0x1de0
0x00001eec      0f1f4000       nop dword [rax]
0x00001ef0      c605c3732000.  mov byte [obj.foreground], 1            ; [0x2092ba:1]=0
0x00001ef7      e9e4feffff     jmp 0x1de0
0x00001efc      4863056d7320.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x209270:4]=0
0x00001f03      29c5           sub ebp, eax
0x00001f05      83ed01         sub ebp, 1
0x00001f08      0f8e1cffffff   jle 0x1e2a
0x00001f0e      488b3cc3       mov rdi, qword [rbx + rax*8]
0x00001f12      8d5001         lea edx, [rax + 1]
0x00001f15      891555732000   mov dword [obj.optind], edx             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x209270:4]=0
0x00001f1b      e8300d0000     call sym.parse_duration
0x00001f20      486305497320.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x209270:4]=0
0x00001f27      803d8c732000.  cmp byte [obj.foreground], 0            ; [0x2092ba:1]=0
0x00001f2e      f20f11442408   movsd qword [rsp + 8], xmm0
0x00001f34      4c8d24c3       lea r12, [rbx + rax*8]
0x00001f38      498b0424       mov rax, qword [r12]
0x00001f3c      4889056d7320.  mov qword [obj.command], rax            ; [0x2092b0:8]=0
0x00001f43      0f84cd020000   je 0x2216
0x00001f49      488d9c24a000.  lea rbx, [rsp + 0xa0]
0x00001f51      448b2db87020.  mov r13d, dword [obj.term_signal]       ; [0x209010:4]=15
0x00001f58      488d6b08       lea rbp, [rbx + 8]
0x00001f5c      4889ef         mov rdi, rbp
0x00001f5f      e8ccfbffff     call sym.imp.sigemptyset
0x00001f64      488d05f50600.  lea rax, sym.cleanup                    ; 0x2660 ; "ATUS\x89\xfbH\x83\xec0dH\x8b\x04%("
0x00001f6b      31d2           xor edx, edx
0x00001f6d      4889de         mov rsi, rbx
0x00001f70      bf0e000000     mov edi, 0xe
0x00001f75      c78424280100.  mov dword [rsp + 0x128], 0x10000000     ; [0x10000000:4]=-1
0x00001f80      48898424a000.  mov qword [rsp + 0xa0], rax
0x00001f88      e833faffff     call sym.imp.sigaction
0x00001f8d      31d2           xor edx, edx
0x00001f8f      4889de         mov rsi, rbx
0x00001f92      bf02000000     mov edi, 2
0x00001f97      e824faffff     call sym.imp.sigaction
0x00001f9c      31d2           xor edx, edx
0x00001f9e      4889de         mov rsi, rbx
0x00001fa1      bf03000000     mov edi, 3
0x00001fa6      e815faffff     call sym.imp.sigaction
0x00001fab      31d2           xor edx, edx
0x00001fad      4889de         mov rsi, rbx
0x00001fb0      bf01000000     mov edi, 1
0x00001fb5      e806faffff     call sym.imp.sigaction
0x00001fba      31d2           xor edx, edx
0x00001fbc      4889de         mov rsi, rbx
0x00001fbf      bf0f000000     mov edi, 0xf
0x00001fc4      e8f7f9ffff     call sym.imp.sigaction
0x00001fc9      31d2           xor edx, edx
0x00001fcb      4889de         mov rsi, rbx
0x00001fce      4489ef         mov edi, r13d
0x00001fd1      e8eaf9ffff     call sym.imp.sigaction
0x00001fd6      be01000000     mov esi, 1
0x00001fdb      bf15000000     mov edi, 0x15
0x00001fe0      e83bfbffff     call sym.imp.signal
0x00001fe5      be01000000     mov esi, 1
0x00001fea      bf16000000     mov edi, 0x16
0x00001fef      e82cfbffff     call sym.imp.signal
0x00001ff4      4889ef         mov rdi, rbp
0x00001ff7      e834fbffff     call sym.imp.sigemptyset
0x00001ffc      488d056d0400.  lea rax, sym.chld                       ; 0x2470
0x00002003      31d2           xor edx, edx
0x00002005      4889de         mov rsi, rbx
0x00002008      bf11000000     mov edi, 0x11
0x0000200d      c78424280100.  mov dword [rsp + 0x128], 0x10000000     ; [0x10000000:4]=-1
0x00002018      48898424a000.  mov qword [rsp + 0xa0], rax
0x00002020      e89bf9ffff     call sym.imp.sigaction
0x00002025      bf11000000     mov edi, 0x11
0x0000202a      e891050000     call sym.unblock_signal
0x0000202f      e8ecfcffff     call sym.imp.fork
0x00002034      83f8ff         cmp eax, 0xffffffff
0x00002037      89058b722000   mov dword [obj.monitored_pid], eax      ; [0x2092c8:4]=0
0x0000203d      0f8418020000   je 0x225b
0x00002043      85c0           test eax, eax
0x00002045      0f8592000000   jne 0x20dd
0x0000204b      31f6           xor esi, esi
0x0000204d      bf15000000     mov edi, 0x15
0x00002052      31db           xor ebx, ebx
0x00002054      e8c7faffff     call sym.imp.signal
0x00002059      31f6           xor esi, esi
0x0000205b      bf16000000     mov edi, 0x16
0x00002060      e8bbfaffff     call sym.imp.signal
0x00002065      498b3c24       mov rdi, qword [r12]
0x00002069      4c89e6         mov rsi, r12
0x0000206c      e8effbffff     call sym.imp.execvp
0x00002071      e8faf8ffff     call sym.imp.__errno_location
0x00002076      833802         cmp dword [rax], 2
0x00002079      488b3d307220.  mov rdi, qword [obj.command]            ; [0x2092b0:8]=0
0x00002080      4889c5         mov rbp, rax
0x00002083      0f94c3         sete bl
0x00002086      e8052e0000     call sym.quote
0x0000208b      488d35403f00.  lea rsi, str.failed_to_run_command__s   ; 0x5fd2 ; "failed to run command %s"
0x00002092      ba05000000     mov edx, 5
0x00002097      31ff           xor edi, edi
0x00002099      4989c4         mov r12, rax
0x0000209c      83c37e         add ebx, 0x7e
0x0000209f      e87cf9ffff     call sym.imp.dcgettext
0x000020a4      8b7500         mov esi, dword [rbp]
0x000020a7      4889c2         mov rdx, rax
0x000020aa      4c89e1         mov rcx, r12
0x000020ad      31ff           xor edi, edi
0x000020af      31c0           xor eax, eax
0x000020b1      e85afbffff     call sym.imp.error
0x000020b6      488b8c245801.  mov rcx, qword [rsp + 0x158]
0x000020be      6448330c2528.  xor rcx, qword fs:[0x28]
0x000020c7      89d8           mov eax, ebx
0x000020c9      0f8588020000   jne 0x2357
0x000020cf      4881c4680100.  add rsp, 0x168
0x000020d6      5b             pop rbx
0x000020d7      5d             pop rbp
0x000020d8      415c           pop r12
0x000020da      415d           pop r13
0x000020dc      c3             ret
0x000020dd      bf0e000000     mov edi, 0xe
0x000020e2      e8d9040000     call sym.unblock_signal
0x000020e7      f20f10442408   movsd xmm0, qword [rsp + 8]
0x000020ed      bf01000000     mov edi, 1
0x000020f2      e889030000     call sym.settimeout
0x000020f7      4889df         mov rdi, rbx
0x000020fa      8b2d106f2000   mov ebp, dword [obj.term_signal]        ; [0x209010:4]=15
0x00002100      e82bfaffff     call sym.imp.sigemptyset
0x00002105      be0e000000     mov esi, 0xe
0x0000210a      4889df         mov rdi, rbx
0x0000210d      e8fefbffff     call sym.imp.sigaddset
0x00002112      be02000000     mov esi, 2
0x00002117      4889df         mov rdi, rbx
0x0000211a      e8f1fbffff     call sym.imp.sigaddset
0x0000211f      be03000000     mov esi, 3
0x00002124      4889df         mov rdi, rbx
0x00002127      e8e4fbffff     call sym.imp.sigaddset
0x0000212c      be01000000     mov esi, 1
0x00002131      4889df         mov rdi, rbx
0x00002134      e8d7fbffff     call sym.imp.sigaddset
0x00002139      be0f000000     mov esi, 0xf
0x0000213e      4889df         mov rdi, rbx
0x00002141      e8cafbffff     call sym.imp.sigaddset
0x00002146      89ee           mov esi, ebp
0x00002148      4889df         mov rdi, rbx
0x0000214b      488d6c2420     lea rbp, [rsp + 0x20]
0x00002150      e8bbfbffff     call sym.imp.sigaddset
0x00002155      be11000000     mov esi, 0x11
0x0000215a      4889df         mov rdi, rbx
0x0000215d      e8aefbffff     call sym.imp.sigaddset
0x00002162      31ff           xor edi, edi
0x00002164      4889ea         mov rdx, rbp
0x00002167      4889de         mov rsi, rbx
0x0000216a      e8b1f7ffff     call sym.imp.sigprocmask
0x0000216f      85c0           test eax, eax
0x00002171      0f85b6000000   jne 0x222d
0x00002177      488d5c241c     lea rbx, [rsp + 0x1c]
0x0000217c      eb08           jmp 0x2186
0x0000217e      4889ef         mov rdi, rbp
0x00002181      e83afaffff     call sym.imp.sigsuspend
0x00002186      8b3d3c712000   mov edi, dword [obj.monitored_pid]      ; [0x2092c8:4]=0
0x0000218c      ba01000000     mov edx, 1
0x00002191      4889de         mov rsi, rbx
0x00002194      e887faffff     call sym.imp.waitpid
0x00002199      85c0           test eax, eax
0x0000219b      74e1           je 0x217e
0x0000219d      0f88eb000000   js 0x228e
0x000021a3      8b5c241c       mov ebx, dword [rsp + 0x1c]
0x000021a7      89dd           mov ebp, ebx
0x000021a9      83e57f         and ebp, 0x7f
0x000021ac      7476           je 0x2224
0x000021ae      8d4501         lea eax, [rbp + 1]
0x000021b1      2c01           sub al, 1
0x000021b3      0f8e39010000   jle 0x22f2
0x000021b9      80e380         and bl, 0x80
0x000021bc      7421           je 0x21df
0x000021be      488d35334600.  lea rsi, str.the_monitored_command_dumped_core ; 0x67f8 ; "the monitored command dumped core"
0x000021c5      ba05000000     mov edx, 5
0x000021ca      31ff           xor edi, edi
0x000021cc      e84ff8ffff     call sym.imp.dcgettext
0x000021d1      31f6           xor esi, esi
0x000021d3      4889c2         mov rdx, rax
0x000021d6      31ff           xor edi, edi
0x000021d8      31c0           xor eax, eax
0x000021da      e831faffff     call sym.imp.error
0x000021df      833de6702000.  cmp dword [obj.timed_out], 0            ; [0x2092cc:4]=0
0x000021e6      0f84d8000000   je 0x22c4
0x000021ec      83ed80         sub ebp, 0xffffff80
0x000021ef      896c241c       mov dword [rsp + 0x1c], ebp
0x000021f3      833dd2702000.  cmp dword [obj.timed_out], 0            ; [0x2092cc:4]=0
0x000021fa      7411           je 0x220d
0x000021fc      803db6702000.  cmp byte [obj.preserve_status], 0       ; [0x2092b9:1]=0
0x00002203      7508           jne 0x220d
0x00002205      c744241c7c00.  mov dword [rsp + 0x1c], 0x7c            ; '|'
                                                                       ; [0x7c:4]=4
0x0000220d      8b5c241c       mov ebx, dword [rsp + 0x1c]
0x00002211      e9a0feffff     jmp 0x20b6
0x00002216      31f6           xor esi, esi
0x00002218      31ff           xor edi, edi
0x0000221a      e861faffff     call sym.imp.setpgid
0x0000221f      e925fdffff     jmp 0x1f49
0x00002224      0fb6df         movzx ebx, bh
0x00002227      895c241c       mov dword [rsp + 0x1c], ebx
0x0000222b      ebc6           jmp 0x21f3
0x0000222d      488d357d3c00.  lea rsi, str.warning:_sigprocmask       ; 0x5eb1 ; "warning: sigprocmask"
0x00002234      31ff           xor edi, edi
0x00002236      ba05000000     mov edx, 5
0x0000223b      e8e0f7ffff     call sym.imp.dcgettext
0x00002240      4889c3         mov rbx, rax
0x00002243      e828f7ffff     call sym.imp.__errno_location
0x00002248      8b30           mov esi, dword [rax]
0x0000224a      4889da         mov rdx, rbx
0x0000224d      31ff           xor edi, edi
0x0000224f      31c0           xor eax, eax
0x00002251      e8baf9ffff     call sym.imp.error
0x00002256      e91cffffff     jmp 0x2177
0x0000225b      488d35583d00.  lea rsi, str.fork_system_call_failed    ; 0x5fba ; "fork system call failed"
0x00002262      ba05000000     mov edx, 5
0x00002267      31ff           xor edi, edi
0x00002269      e8b2f7ffff     call sym.imp.dcgettext
0x0000226e      4889c3         mov rbx, rax
0x00002271      e8faf6ffff     call sym.imp.__errno_location
0x00002276      8b30           mov esi, dword [rax]
0x00002278      4889da         mov rdx, rbx
0x0000227b      31ff           xor edi, edi
0x0000227d      31c0           xor eax, eax
0x0000227f      bb7d000000     mov ebx, 0x7d                           ; '}'
0x00002284      e887f9ffff     call sym.imp.error
0x00002289      e928feffff     jmp 0x20b6
0x0000228e      488d35563d00.  lea rsi, str.error_waiting_for_command  ; 0x5feb ; "error waiting for command"
0x00002295      ba05000000     mov edx, 5
0x0000229a      31ff           xor edi, edi
0x0000229c      e87ff7ffff     call sym.imp.dcgettext
0x000022a1      4889c3         mov rbx, rax
0x000022a4      e8c7f6ffff     call sym.imp.__errno_location
0x000022a9      8b30           mov esi, dword [rax]
0x000022ab      4889da         mov rdx, rbx
0x000022ae      31ff           xor edi, edi
0x000022b0      31c0           xor eax, eax
0x000022b2      e859f9ffff     call sym.imp.error
0x000022b7      c744241c7d00.  mov dword [rsp + 0x1c], 0x7d            ; '}'
                                                                       ; [0x7d:4]=0x38000000
0x000022bf      e92fffffff     jmp 0x21f3
0x000022c4      31f6           xor esi, esi
0x000022c6      31c0           xor eax, eax
0x000022c8      bf04000000     mov edi, 4
0x000022cd      e88ef8ffff     call sym.imp.prctl
0x000022d2      85c0           test eax, eax
0x000022d4      754c           jne 0x2322
0x000022d6      31f6           xor esi, esi
0x000022d8      89ef           mov edi, ebp
0x000022da      e841f8ffff     call sym.imp.signal
0x000022df      89ef           mov edi, ebp
0x000022e1      e8da020000     call sym.unblock_signal
0x000022e6      89ef           mov edi, ebp
0x000022e8      e853f6ffff     call sym.imp.raise
0x000022ed      e9fafeffff     jmp 0x21ec
0x000022f2      488d354f4500.  lea rsi, str.unknown_status_from_command___d ; 0x6848 ; "unknown status from command (%d)"
0x000022f9      ba05000000     mov edx, 5
0x000022fe      31ff           xor edi, edi
0x00002300      e81bf7ffff     call sym.imp.dcgettext
0x00002305      89d9           mov ecx, ebx
0x00002307      4889c2         mov rdx, rax
0x0000230a      31f6           xor esi, esi
0x0000230c      31ff           xor edi, edi
0x0000230e      31c0           xor eax, eax
0x00002310      e8fbf8ffff     call sym.imp.error
0x00002315      c744241c0100.  mov dword [rsp + 0x1c], 1
0x0000231d      e9d1feffff     jmp 0x21f3
0x00002322      488d35f74400.  lea rsi, str.warning:_disabling_core_dumps_failed ; 0x6820 ; "warning: disabling core dumps failed"
0x00002329      31ff           xor edi, edi
0x0000232b      ba05000000     mov edx, 5
0x00002330      e8ebf6ffff     call sym.imp.dcgettext
0x00002335      4889c3         mov rbx, rax
0x00002338      e833f6ffff     call sym.imp.__errno_location
0x0000233d      8b30           mov esi, dword [rax]
0x0000233f      4889da         mov rdx, rbx
0x00002342      31ff           xor edi, edi
0x00002344      31c0           xor eax, eax
0x00002346      e8c5f8ffff     call sym.imp.error
0x0000234b      e99cfeffff     jmp 0x21ec
0x00002350      31ff           xor edi, edi
0x00002352      e8f9040000     call sym.usage
0x00002357      e8f4f6ffff     call sym.imp.__stack_chk_fail
0x0000235c      0f1f4000       nop dword [rax]
;-- entry0:
;-- _start:
;-- rip:
0x00002360      31ed           xor ebp, ebp
0x00002362      4989d1         mov r9, rdx
0x00002365      5e             pop rsi
0x00002366      4889e2         mov rdx, rsp
0x00002369      4883e4f0       and rsp, 0xfffffffffffffff0
0x0000236d      50             push rax
0x0000236e      54             push rsp
0x0000236f      4c8d05da3a00.  lea r8, sym.__libc_csu_fini             ; 0x5e50
0x00002376      488d0d633a00.  lea rcx, sym.__libc_csu_init            ; 0x5de0 ; "AWAVI\x89\xd7AUATL\x8d%>, "
0x0000237d      488d3ddcf9ff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1d60 ; "AUATUS\x89\xfdH\x89\xf3H\x81\xech\x01"
0x00002384      ff15566c2000   call qword [reloc.__libc_start_main]    ; [0x208fe0:8]=0
0x0000238a      f4             hlt
0x0000238b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00002390      488d3db16e20.  lea rdi, obj.__TMC_END                  ; 0x209248
0x00002397      55             push rbp
0x00002398      488d05a96e20.  lea rax, obj.__TMC_END                  ; 0x209248
0x0000239f      4839f8         cmp rax, rdi
0x000023a2      4889e5         mov rbp, rsp
0x000023a5      7419           je 0x23c0
0x000023a7      488b052a6c20.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x208fd8:8]=0
0x000023ae      4885c0         test rax, rax
0x000023b1      740d           je 0x23c0
0x000023b3      5d             pop rbp
0x000023b4      ffe0           jmp rax
0x000023b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000023c0      5d             pop rbp
0x000023c1      c3             ret
0x000023c2      0f1f4000       nop dword [rax]
0x000023c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x000023d0      488d3d716e20.  lea rdi, obj.__TMC_END                  ; 0x209248
0x000023d7      488d356a6e20.  lea rsi, obj.__TMC_END                  ; 0x209248
0x000023de      55             push rbp
0x000023df      4829fe         sub rsi, rdi
0x000023e2      4889e5         mov rbp, rsp
0x000023e5      48c1fe03       sar rsi, 3
0x000023e9      4889f0         mov rax, rsi
0x000023ec      48c1e83f       shr rax, 0x3f
0x000023f0      4801c6         add rsi, rax
0x000023f3      48d1fe         sar rsi, 1
0x000023f6      7418           je 0x2410
0x000023f8      488b05f16b20.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x208ff0:8]=0
0x000023ff      4885c0         test rax, rax
0x00002402      740c           je 0x2410
0x00002404      5d             pop rbp
0x00002405      ffe0           jmp rax
0x00002407      660f1f840000.  nop word [rax + rax]
0x00002410      5d             pop rbp
0x00002411      c3             ret
0x00002412      0f1f4000       nop dword [rax]
0x00002416      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00002420      803d816e2000.  cmp byte [obj.completed.7697], 0        ; [0x2092a8:1]=0
0x00002427      752f           jne 0x2458
0x00002429      48833dc76b20.  cmp qword [reloc.__cxa_finalize], 0     ; [0x208ff8:8]=0
0x00002431      55             push rbp
0x00002432      4889e5         mov rbp, rsp
0x00002435      740c           je 0x2443
0x00002437      488b3dca6b20.  mov rdi, qword [obj.__dso_handle]       ; [0x209008:8]=0x209008 obj.__dso_handle
0x0000243e      e80df9ffff     call sym..plt.got
0x00002443      e848ffffff     call sym.deregister_tm_clones
0x00002448      c605596e2000.  mov byte [obj.completed.7697], 1        ; [0x2092a8:1]=0
0x0000244f      5d             pop rbp
0x00002450      c3             ret
0x00002451      0f1f80000000.  nop dword [rax]
0x00002458      f3c3           ret
0x0000245a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00002460      55             push rbp
0x00002461      4889e5         mov rbp, rsp
0x00002464      5d             pop rbp
0x00002465      e966ffffff     jmp sym.register_tm_clones
0x0000246a      660f1f440000   nop word [rax + rax]
;-- chld:
0x00002470      f3c3           ret                                     ; /src:175
0x00002472      0f1f4000       nop dword [rax]
0x00002476      662e0f1f8400.  nop word cs:[rax + rax]
;-- settimeout:
0x00002480      53             push rbx                                ; /src:115
0x00002481      89fb           mov ebx, edi
0x00002483      4883ec50       sub rsp, 0x50
0x00002487      f20f11442408   movsd qword [rsp + 8], xmm0
0x0000248d      64488b042528.  mov rax, qword fs:[0x28]
0x00002496      4889442448     mov qword [rsp + 0x48], rax
0x0000249b      31c0           xor eax, eax
0x0000249d      e81e0c0000     call sym.dtotimespec                    ; /src:125
0x000024a2      4889542438     mov qword [rsp + 0x38], rdx             ; /src:126
0x000024a7      488d542418     lea rdx, [rsp + 0x18]                   ; /src:128
0x000024ac      31f6           xor esi, esi
0x000024ae      31ff           xor edi, edi
0x000024b0      48c744242000.  mov qword [rsp + 0x20], 0               ; /src:126
0x000024b9      48c744242800.  mov qword [rsp + 0x28], 0
0x000024c2      4889442430     mov qword [rsp + 0x30], rax
0x000024c7      e884f7ffff     call sym.imp.timer_create               ; /src:128
0x000024cc      85c0           test eax, eax
0x000024ce      7468           je 0x2538
0x000024d0      84db           test bl, bl                             ; /src:139
0x000024d2      740d           je 0x24e1
0x000024d4      e897f4ffff     call sym.imp.__errno_location
0x000024d9      833826         cmp dword [rax], 0x26
0x000024dc      4889c3         mov rbx, rax
0x000024df      757f           jne 0x2560
0x000024e1      f20f104c2408   movsd xmm1, qword [rsp + 8]             ; /src:144
0x000024e7      bfffffffff     mov edi, 0xffffffff                     ; /src:145 ; -1
0x000024ec      660f2e0d7c43.  ucomisd xmm1, qword [0x00006870]        ; /src:144
0x000024f4      731c           jae 0x2512
0x000024f6      f2480f2cd1     cvttsd2si rdx, xmm1                     ; /src:148
0x000024fb      660fefc0       pxor xmm0, xmm0                         ; /src:149
0x000024ff      31ff           xor edi, edi
0x00002501      89d0           mov eax, edx
0x00002503      f2480f2ac0     cvtsi2sd xmm0, rax
0x00002508      660f2ec8       ucomisd xmm1, xmm0
0x0000250c      400f97c7       seta dil
0x00002510      01d7           add edi, edx
0x00002512      e8b9f5ffff     call sym.imp.alarm                      ; /src:151
0x00002517      488b442448     mov rax, qword [rsp + 0x48]             ; /src:152
0x0000251c      644833042528.  xor rax, qword fs:[0x28]
0x00002525      0f8590000000   jne 0x25bb
0x0000252b      4883c450       add rsp, 0x50
0x0000252f      5b             pop rbx
0x00002530      c3             ret
0x00002531      0f1f80000000.  nop dword [rax]
0x00002538      488b7c2418     mov rdi, qword [rsp + 0x18]             ; /src:130
0x0000253d      488d542420     lea rdx, [rsp + 0x20]
0x00002542      31c9           xor ecx, ecx
0x00002544      31f6           xor esi, esi
0x00002546      e8f5f6ffff     call sym.imp.timer_settime
0x0000254b      85c0           test eax, eax
0x0000254d      74c8           je 0x2517
0x0000254f      84db           test bl, bl                             ; /src:134
0x00002551      753d           jne 0x2590
0x00002553      488b7c2418     mov rdi, qword [rsp + 0x18]             ; /src:136
0x00002558      e863f7ffff     call sym.imp.timer_delete
0x0000255d      eb82           jmp 0x24e1
0x0000255f      90             nop
0x00002560      488d35343900.  lea rsi, str.warning:_timer_create      ; /src:140 ; 0x5e9b ; "warning: timer_create"
0x00002567      31ff           xor edi, edi
0x00002569      ba05000000     mov edx, 5
0x0000256e      e8adf4ffff     call sym.imp.dcgettext
0x00002573      8b33           mov esi, dword [rbx]
0x00002575      4889c2         mov rdx, rax
0x00002578      31ff           xor edi, edi
0x0000257a      31c0           xor eax, eax
0x0000257c      e88ff6ffff     call sym.imp.error
0x00002581      e95bffffff     jmp 0x24e1
0x00002586      662e0f1f8400.  nop word cs:[rax + rax]
0x00002590      488d35ed3800.  lea rsi, str.warning:_timer_settime     ; /src:135 ; 0x5e84 ; "warning: timer_settime"
0x00002597      31ff           xor edi, edi
0x00002599      ba05000000     mov edx, 5
0x0000259e      e87df4ffff     call sym.imp.dcgettext
0x000025a3      4889c3         mov rbx, rax
0x000025a6      e8c5f3ffff     call sym.imp.__errno_location
0x000025ab      8b30           mov esi, dword [rax]
0x000025ad      4889da         mov rdx, rbx
0x000025b0      31ff           xor edi, edi
0x000025b2      31c0           xor eax, eax
0x000025b4      e857f6ffff     call sym.imp.error
0x000025b9      eb98           jmp 0x2553
0x000025bb      e890f4ffff     call sym.imp.__stack_chk_fail           ; /src:152
;-- unblock_signal:
0x000025c0      55             push rbp                                ; /src:341
0x000025c1      53             push rbx
0x000025c2      89fd           mov ebp, edi
0x000025c4      4881ec980000.  sub rsp, 0x98
0x000025cb      4889e3         mov rbx, rsp                            ; /src:343
0x000025ce      4889df         mov rdi, rbx
0x000025d1      64488b042528.  mov rax, qword fs:[0x28]                ; /src:341
0x000025da      488984248800.  mov qword [rsp + 0x88], rax
0x000025e2      31c0           xor eax, eax
0x000025e4      e847f5ffff     call sym.imp.sigemptyset                ; /src:343
0x000025e9      89ee           mov esi, ebp                            ; /src:344
0x000025eb      4889df         mov rdi, rbx
0x000025ee      e81df7ffff     call sym.imp.sigaddset
0x000025f3      31d2           xor edx, edx                            ; /src:345
0x000025f5      4889de         mov rsi, rbx
0x000025f8      bf01000000     mov edi, 1
0x000025fd      e81ef3ffff     call sym.imp.sigprocmask
0x00002602      85c0           test eax, eax
0x00002604      7429           je 0x262f
0x00002606      488d35a43800.  lea rsi, str.warning:_sigprocmask       ; /src:346 ; 0x5eb1 ; "warning: sigprocmask"
0x0000260d      ba05000000     mov edx, 5
0x00002612      31ff           xor edi, edi
0x00002614      e807f4ffff     call sym.imp.dcgettext
0x00002619      4889c3         mov rbx, rax
0x0000261c      e84ff3ffff     call sym.imp.__errno_location
0x00002621      8b30           mov esi, dword [rax]
0x00002623      4889da         mov rdx, rbx
0x00002626      31ff           xor edi, edi
0x00002628      31c0           xor eax, eax
0x0000262a      e8e1f5ffff     call sym.imp.error
0x0000262f      488b84248800.  mov rax, qword [rsp + 0x88]             ; /src:347
0x00002637      644833042528.  xor rax, qword fs:[0x28]
0x00002640      750a           jne 0x264c
0x00002642      4881c4980000.  add rsp, 0x98
0x00002649      5b             pop rbx
0x0000264a      5d             pop rbp
0x0000264b      c3             ret
0x0000264c      e8fff3ffff     call sym.imp.__stack_chk_fail
0x00002651      0f1f440000     nop dword [rax + rax]
0x00002656      662e0f1f8400.  nop word cs:[rax + rax]
;-- cleanup:
0x00002660      4154           push r12                                ; /src:181
0x00002662      55             push rbp
0x00002663      53             push rbx
0x00002664      89fb           mov ebx, edi
0x00002666      4883ec30       sub rsp, 0x30
0x0000266a      64488b042528.  mov rax, qword fs:[0x28]
0x00002673      4889442428     mov qword [rsp + 0x28], rax
0x00002678      31c0           xor eax, eax
0x0000267a      83ff0e         cmp edi, 0xe                            ; /src:182
0x0000267d      7510           jne 0x268f
0x0000267f      8b1d8b692000   mov ebx, dword [obj.term_signal]        ; /src:185 ; [0x209010:4]=15
0x00002685      c7053d6c2000.  mov dword [obj.timed_out], 1            ; /src:184 ; [0x2092cc:4]=0
0x0000268f      8b2d336c2000   mov ebp, dword [obj.monitored_pid]      ; /src:187 ; [0x2092c8:4]=0
0x00002695      85ed           test ebp, ebp
0x00002697      0f849b010000   je 0x2838
0x0000269d      f20f10051b6c.  movsd xmm0, qword [obj.kill_after]      ; /src:189 ; [0x2092c0:8]=0
0x000026a5      660f2e05cb41.  ucomisd xmm0, qword [0x00006878]
0x000026ad      7a41           jp 0x26f0
0x000026af      753f           jne 0x26f0
0x000026b1      803d006c2000.  cmp byte [obj.verbose], 0               ; /src:202 ; [0x2092b8:1]=0
0x000026b8      7576           jne 0x2730
0x000026ba      89de           mov esi, ebx                            ; /src:168
0x000026bc      89ef           mov edi, ebp
0x000026be      e8adf4ffff     call sym.imp.kill
0x000026c3      803df06b2000.  cmp byte [obj.foreground], 0            ; /src:214 ; [0x2092ba:1]=0
0x000026ca      0f84d0000000   je 0x27a0
0x000026d0      488b442428     mov rax, qword [rsp + 0x28]             ; /src:226
0x000026d5      644833042528.  xor rax, qword fs:[0x28]
0x000026de      0f855f010000   jne 0x2843
0x000026e4      4883c430       add rsp, 0x30
0x000026e8      5b             pop rbx
0x000026e9      5d             pop rbp
0x000026ea      415c           pop r12
0x000026ec      c3             ret
0x000026ed      0f1f00         nop dword [rax]
0x000026f0      f20f11442408   movsd qword [rsp + 8], xmm0
0x000026f6      e875f2ffff     call sym.imp.__errno_location           ; /src:191
0x000026fb      f20f10442408   movsd xmm0, qword [rsp + 8]             ; /src:194
0x00002701      31ff           xor edi, edi
0x00002703      4889c5         mov rbp, rax                            ; /src:191
0x00002706      448b20         mov r12d, dword [rax]
0x00002709      c705fd682000.  mov dword [obj.term_signal], 9          ; /src:193 ; [0x209010:4]=15
0x00002713      e868fdffff     call sym.settimeout                     ; /src:194
0x00002718      803d996b2000.  cmp byte [obj.verbose], 0               ; /src:202 ; [0x2092b8:1]=0
0x0000271f      48c705966b20.  mov qword [obj.kill_after], 0           ; /src:195 ; [0x2092c0:8]=0
0x0000272a      44896500       mov dword [rbp], r12d                   ; /src:196
0x0000272e      744d           je 0x277d                               ; /src:202
0x00002730      488d6c2410     lea rbp, [rsp + 0x10]                   ; /src:205
0x00002735      89df           mov edi, ebx
0x00002737      4889ee         mov rsi, rbp
0x0000273a      e811330000     call sym.sig2str
0x0000273f      85c0           test eax, eax
0x00002741      0f85c9000000   jne 0x2810
0x00002747      488b3d626b20.  mov rdi, qword [obj.command]            ; /src:207 ; [0x2092b0:8]=0
0x0000274e      e83d270000     call sym.quote
0x00002753      488d35e63800.  lea rsi, str.sending_signal__s_to_command__s ; 0x6040 ; "sending signal %s to command %s"
0x0000275a      4989c4         mov r12, rax
0x0000275d      ba05000000     mov edx, 5
0x00002762      31ff           xor edi, edi
0x00002764      e8b7f2ffff     call sym.imp.dcgettext
0x00002769      4d89e0         mov r8, r12
0x0000276c      4889c2         mov rdx, rax
0x0000276f      4889e9         mov rcx, rbp
0x00002772      31f6           xor esi, esi
0x00002774      31ff           xor edi, edi
0x00002776      31c0           xor eax, eax
0x00002778      e893f4ffff     call sym.imp.error
0x0000277d      8b2d456b2000   mov ebp, dword [obj.monitored_pid]      ; /src:210 ; [0x2092c8:4]=0
0x00002783      85ed           test ebp, ebp                           ; /src:166
0x00002785      0f852fffffff   jne 0x26ba
0x0000278b      be01000000     mov esi, 1                              ; /src:167
0x00002790      89df           mov edi, ebx
0x00002792      e889f3ffff     call sym.imp.signal
0x00002797      e91effffff     jmp 0x26ba
0x0000279c      0f1f4000       nop dword [rax]
0x000027a0      be01000000     mov esi, 1
0x000027a5      89df           mov edi, ebx
0x000027a7      e874f3ffff     call sym.imp.signal
0x000027ac      31ff           xor edi, edi                            ; /src:168
0x000027ae      89de           mov esi, ebx
0x000027b0      e8bbf3ffff     call sym.imp.kill
0x000027b5      83fb09         cmp ebx, 9                              ; /src:217
0x000027b8      0f8412ffffff   je 0x26d0
0x000027be      83fb12         cmp ebx, 0x12
0x000027c1      0f8409ffffff   je 0x26d0
0x000027c7      85ed           test ebp, ebp                           ; /src:166
0x000027c9      750f           jne 0x27da
0x000027cb      be01000000     mov esi, 1                              ; /src:167
0x000027d0      bf12000000     mov edi, 0x12
0x000027d5      e846f3ffff     call sym.imp.signal
0x000027da      89ef           mov edi, ebp                            ; /src:168
0x000027dc      be12000000     mov esi, 0x12
0x000027e1      e88af3ffff     call sym.imp.kill
0x000027e6      be01000000     mov esi, 1                              ; /src:167
0x000027eb      bf12000000     mov edi, 0x12
0x000027f0      e82bf3ffff     call sym.imp.signal
0x000027f5      be12000000     mov esi, 0x12                           ; /src:168
0x000027fa      31ff           xor edi, edi
0x000027fc      e86ff3ffff     call sym.imp.kill
0x00002801      e9cafeffff     jmp 0x26d0
0x00002806      662e0f1f8400.  nop word cs:[rax + rax]
0x00002810      4c8d05af3600.  lea r8, [0x00005ec6]                    ; .//coreutils-8.31/lib:64 ; "%d"
0x00002817      4189d9         mov r9d, ebx
0x0000281a      b913000000     mov ecx, 0x13
0x0000281f      ba01000000     mov edx, 1
0x00002824      be13000000     mov esi, 0x13
0x00002829      4889ef         mov rdi, rbp
0x0000282c      31c0           xor eax, eax
0x0000282e      e8fdf0ffff     call sym.imp.__snprintf_chk
0x00002833      e90fffffff     jmp 0x2747
0x00002838      8dbb80000000   lea edi, [rbx + 0x80]                   ; /src:225
0x0000283e      e84df1ffff     call sym.imp._exit
0x00002843      e808f2ffff     call sym.imp.__stack_chk_fail           ; /src:226
0x00002848      0f1f84000000.  nop dword [rax + rax]
;-- usage:
0x00002850      4155           push r13                                ; /src:230
0x00002852      4154           push r12
0x00002854      ba05000000     mov edx, 5                              ; /src:232
0x00002859      55             push rbp                                ; /src:230
0x0000285a      53             push rbx
0x0000285b      89fd           mov ebp, edi
0x0000285d      4881ec880000.  sub rsp, 0x88
0x00002864      488b1d756a20.  mov rbx, qword [obj.program_name]       ; [0x2092e0:8]=0
0x0000286b      64488b042528.  mov rax, qword fs:[0x28]
0x00002874      4889442478     mov qword [rsp + 0x78], rax
0x00002879      31c0           xor eax, eax
0x0000287b      85ff           test edi, edi                           ; /src:231
0x0000287d      742e           je 0x28ad
0x0000287f      488d35da3700.  lea rsi, str.Try___s___help__for_more_information. ; /src:232 ; 0x6060 ; "Try '%s --help' for more information.\n"
0x00002886      31ff           xor edi, edi
0x00002888      e893f1ffff     call sym.imp.dcgettext
0x0000288d      488b3d0c6a20.  mov rdi, qword [obj.stderr]             ; .//coreutils-8.31/lib:97 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2092a0:8]=0
0x00002894      4889c2         mov rdx, rax
0x00002897      4889d9         mov rcx, rbx
0x0000289a      be01000000     mov esi, 1
0x0000289f      31c0           xor eax, eax
0x000028a1      e82af4ffff     call sym.imp.__fprintf_chk
0x000028a6      89ef           mov edi, ebp                            ; /src:280
0x000028a8      e8f3f3ffff     call sym.imp.exit
0x000028ad      488d35d43700.  lea rsi, str.Usage:__s__OPTION__DURATION_COMMAND__ARG_...____or:___s__OPTION ; /src:235 ; 0x6088 ; "Usage: %s [OPTION] DURATION COMMAND [ARG]...\n  or:  %s [OPTION]\n"
0x000028b4      31ff           xor edi, edi
0x000028b6      e865f1ffff     call sym.imp.dcgettext
0x000028bb      4889d9         mov rcx, rbx                            ; .//coreutils-8.31/lib:104
0x000028be      4889da         mov rdx, rbx
0x000028c1      4889c6         mov rsi, rax
0x000028c4      bf01000000     mov edi, 1
0x000028c9      31c0           xor eax, eax
0x000028cb      e830f3ffff     call sym.imp.__printf_chk
0x000028d0      488b1d916920.  mov rbx, qword [obj.stdout]             ; /src:239 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209268:8]=0
0x000028d7      488d35f23700.  lea rsi, str.Start_COMMAND__and_kill_it_if_still_running_after_DURATION. ; 0x60d0 ; "Start COMMAND, and kill it if still running after DURATION.\n"
0x000028de      ba05000000     mov edx, 5
0x000028e3      31ff           xor edi, edi
0x000028e5      e836f1ffff     call sym.imp.dcgettext
0x000028ea      4889de         mov rsi, rbx
0x000028ed      4889c7         mov rdi, rax
0x000028f0      e8fbf1ffff     call sym.imp.fputs_unlocked
0x000028f5      488b1d6c6920.  mov rbx, qword [obj.stdout]             ; ../coreutils-8.31/src/meout.c:587 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209268:8]=0
0x000028fc      488d350d3800.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0x6110 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x00002903      ba05000000     mov edx, 5
0x00002908      31ff           xor edi, edi
0x0000290a      e811f1ffff     call sym.imp.dcgettext
0x0000290f      4889de         mov rsi, rbx
0x00002912      4889c7         mov rdi, rax
0x00002915      e8d6f1ffff     call sym.imp.fputs_unlocked
0x0000291a      488b1d476920.  mov rbx, qword [obj.stdout]             ; /src:245 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209268:8]=0
0x00002921      488d35383800.  lea rsi, str.preserve_status___________________exit_with_the_same_status_as_COMMAND__even_when_the_____________________command_times_out__________foreground___________________when_not_running_timeout_directly_from_a_shell_prompt______________________allow_COMMAND_to_read_from_the_TTY_and_get_TTY_signals______________________in_this_mode__children_of_COMMAND_will_not_be_timed_out_____k____kill_after_DURATION___________________also_send_a_KILL_signal_if_COMMAND_is_still_running_____________________this_long_after_the_initial_signal_was_sent_____s____signal_SIGNAL___________________specify_the_signal_to_be_sent_on_timeout______________________SIGNAL_may_be_a_name_like__HUP__or_a_number______________________see__kill__l__for_a_list_of_signals ; 0x6160 ; "      --preserve-status\n                 exit with the same status as COMMAND, even when the\n                   command times out\n      --foreground\n                 when not running timeout directly from a shell prompt,\n                   allow COMMAND to read from the TTY and get TTY signals;\n                   in this mode, children of COMMAND will not be timed out\n  -k, --kill-after=DURATION\n                 also send a KILL signal if COMMAND is still running\n                   this long after the initial signal was sent\n  -s, --signal=SIGNAL\n                 specify the signal to be sent on timeout;\n                   SIGNAL may be a name like 'HUP' or a number;\n                   see 'kill -l' for a list of signals\n"
0x00002928      ba05000000     mov edx, 5
0x0000292d      31ff           xor edi, edi
0x0000292f      e8ecf0ffff     call sym.imp.dcgettext
0x00002934      4889de         mov rsi, rbx
0x00002937      4889c7         mov rdi, rax
0x0000293a      e8b1f1ffff     call sym.imp.fputs_unlocked
0x0000293f      488b1d226920.  mov rbx, qword [obj.stdout]             ; /src:260 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209268:8]=0
0x00002946      488d35f33a00.  lea rsi, str.v____verbose__diagnose_to_stderr_any_signal_sent_upon_timeout ; 0x6440 ; "  -v, --verbose  diagnose to stderr any signal sent upon timeout\n"
0x0000294d      ba05000000     mov edx, 5
0x00002952      31ff           xor edi, edi
0x00002954      e8c7f0ffff     call sym.imp.dcgettext
0x00002959      4889de         mov rsi, rbx
0x0000295c      4889c7         mov rdi, rax
0x0000295f      e88cf1ffff     call sym.imp.fputs_unlocked
0x00002964      488b1dfd6820.  mov rbx, qword [obj.stdout]             ; /src:263 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209268:8]=0
0x0000296b      488d35163b00.  lea rsi, str.help_____display_this_help_and_exit ; 0x6488 ; "      --help     display this help and exit\n"
0x00002972      ba05000000     mov edx, 5
0x00002977      31ff           xor edi, edi
0x00002979      e8a2f0ffff     call sym.imp.dcgettext
0x0000297e      4889de         mov rsi, rbx
0x00002981      4889c7         mov rdi, rax
0x00002984      e867f1ffff     call sym.imp.fputs_unlocked
0x00002989      488b1dd86820.  mov rbx, qword [obj.stdout]             ; /src:264 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209268:8]=0
0x00002990      488d35213b00.  lea rsi, str.version__output_version_information_and_exit ; 0x64b8 ; "      --version  output version information and exit\n"
0x00002997      ba05000000     mov edx, 5
0x0000299c      31ff           xor edi, edi
0x0000299e      e87df0ffff     call sym.imp.dcgettext
0x000029a3      4889de         mov rsi, rbx
0x000029a6      4889c7         mov rdi, rax
0x000029a9      e842f1ffff     call sym.imp.fputs_unlocked
0x000029ae      488b1db36820.  mov rbx, qword [obj.stdout]             ; /src:266 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209268:8]=0
0x000029b5      488d35343b00.  lea rsi, str.DURATION_is_a_floating_point_number_with_an_optional_suffix:___s__for_seconds__the_default____m__for_minutes___h__for_hours_or__d__for_days.__A_duration_of_0_disables_the_associated_timeout. ; 0x64f0 ; "\nDURATION is a floating point number with an optional suffix:\n's' for seconds (the default), 'm' for minutes, 'h' for hours or 'd' for days.\nA duration of 0 disables the associated timeout.\n"
0x000029bc      ba05000000     mov edx, 5
0x000029c1      31ff           xor edi, edi
0x000029c3      e858f0ffff     call sym.imp.dcgettext
0x000029c8      4889de         mov rsi, rbx
0x000029cb      4889c7         mov rdi, rax
0x000029ce      e81df1ffff     call sym.imp.fputs_unlocked
0x000029d3      488b1d8e6820.  mov rbx, qword [obj.stdout]             ; /src:271 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209268:8]=0
0x000029da      488d35cf3b00.  lea rsi, str.If_the_command_times_out__and___preserve_status_is_not_set__then_exit_with__status_124.__Otherwise__exit_with_the_status_of_COMMAND.__If_no_signal__is_specified__send_the_TERM_signal_upon_timeout.__The_TERM_signal_kills__any_process_that_does_not_block_or_catch_that_signal.__It_may_be_necessary__to_use_the_KILL__9__signal__since_this_signal_cannot_be_caught__in_which__case_the_exit_status_is_128_9_rather_than_124. ; 0x65b0 ; "\nIf the command times out, and --preserve-status is not set, then exit with\nstatus 124.  Otherwise, exit with the status of COMMAND.  If no signal\nis specified, send the TERM signal upon timeout.  The TERM signal kills\nany process that does not block or catch that signal.  It may be necessary\nto use the KILL (9) signal, since this signal cannot be caught, in which\ncase the exit status is 128+9 rather than 124.\n"
0x000029e1      ba05000000     mov edx, 5
0x000029e6      31ff           xor edi, edi
0x000029e8      e833f0ffff     call sym.imp.dcgettext
0x000029ed      4889de         mov rsi, rbx
0x000029f0      4889c7         mov rdi, rax
0x000029f3      488d1dcf3400.  lea rbx, str.timeout                    ; 0x5ec9 ; "timeout"
0x000029fa      e8f1f0ffff     call sym.imp.fputs_unlocked
0x000029ff      488d05cb3400.  lea rax, [0x00005ed1]                   ; ../coreutils-8.31/src/meout.c:633 ; "["
0x00002a06      488d0d053500.  lea rcx, str.sha256sum                  ; 0x5f12 ; "sha256sum"
0x00002a0d      48c744246000.  mov qword [rsp + 0x60], 0
0x00002a16      48c744246800.  mov qword [rsp + 0x68], 0
0x00002a1f      4889e2         mov rdx, rsp                            ; ../coreutils-8.31/src/meout.c:644
0x00002a22      48890424       mov qword [rsp], rax                    ; ../coreutils-8.31/src/meout.c:633
0x00002a26      488d05a63400.  lea rax, str.test_invocation            ; 0x5ed3 ; "test invocation"
0x00002a2d      48894c2430     mov qword [rsp + 0x30], rcx
0x00002a32      488d0de33400.  lea rcx, str.sha384sum                  ; 0x5f1c ; "sha384sum"
0x00002a39      4889442408     mov qword [rsp + 8], rax
0x00002a3e      488d05063500.  lea rax, [0x00005f4b]                   ; "coreutils"
0x00002a45      48894c2440     mov qword [rsp + 0x40], rcx
0x00002a4a      488d0dd53400.  lea rcx, str.sha512sum                  ; 0x5f26 ; "sha512sum"
0x00002a51      4889442410     mov qword [rsp + 0x10], rax
0x00002a56      488d05863400.  lea rax, str.Multi_call_invocation      ; 0x5ee3 ; "Multi-call invocation"
0x00002a5d      48894c2450     mov qword [rsp + 0x50], rcx
0x00002a62      4889442418     mov qword [rsp + 0x18], rax
0x00002a67      488d058b3400.  lea rax, str.sha224sum                  ; 0x5ef9 ; "sha224sum"
0x00002a6e      4889442420     mov qword [rsp + 0x20], rax
0x00002a73      488d05893400.  lea rax, str.sha2_utilities             ; 0x5f03 ; "sha2 utilities"
0x00002a7a      4889442428     mov qword [rsp + 0x28], rax
0x00002a7f      4889442438     mov qword [rsp + 0x38], rax
0x00002a84      4889442448     mov qword [rsp + 0x48], rax
0x00002a89      4889442458     mov qword [rsp + 0x58], rax
0x00002a8e      6690           nop
0x00002a90      4883c210       add rdx, 0x10                           ; ../coreutils-8.31/src/meout.c:647
0x00002a94      488b3a         mov rdi, qword [rdx]                    ; ../coreutils-8.31/src/meout.c:646
0x00002a97      4885ff         test rdi, rdi
0x00002a9a      7413           je 0x2aaf
0x00002a9c      b908000000     mov ecx, 8
0x00002aa1      4889de         mov rsi, rbx
0x00002aa4      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002aa6      0f97c0         seta al
0x00002aa9      1c00           sbb al, 0
0x00002aab      84c0           test al, al
0x00002aad      75e1           jne 0x2a90
0x00002aaf      4c8b6208       mov r12, qword [rdx + 8]                ; ../coreutils-8.31/src/meout.c:649
0x00002ab3      31ff           xor edi, edi                            ; ../coreutils-8.31/src/meout.c:652
0x00002ab5      ba05000000     mov edx, 5
0x00002aba      488d356f3400.  lea rsi, str.s_online_help:___s         ; 0x5f30 ; "\n%s online help: <%s>\n"
0x00002ac1      4d85e4         test r12, r12                           ; ../coreutils-8.31/src/meout.c:649
0x00002ac4      0f84c1000000   je 0x2b8b
0x00002aca      e851efffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/src/meout.c:652
0x00002acf      488d0d7a3c00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; .//coreutils-8.31/lib:104 ; 0x6750 ; "https://www.gnu.org/software/coreutils/"
0x00002ad6      488d156a3400.  lea rdx, str.GNU_coreutils              ; 0x5f47 ; "GNU coreutils"
0x00002add      4889c6         mov rsi, rax
0x00002ae0      bf01000000     mov edi, 1
0x00002ae5      31c0           xor eax, eax
0x00002ae7      e814f1ffff     call sym.imp.__printf_chk
0x00002aec      31f6           xor esi, esi                            ; ../coreutils-8.31/src/meout.c:656
0x00002aee      bf05000000     mov edi, 5
0x00002af3      e8f8f0ffff     call sym.imp.setlocale
0x00002af8      4885c0         test rax, rax                           ; ../coreutils-8.31/src/meout.c:657
0x00002afb      741c           je 0x2b19
0x00002afd      488d35513400.  lea rsi, [0x00005f55]                   ; "en_"
0x00002b04      ba03000000     mov edx, 3
0x00002b09      4889c7         mov rdi, rax
0x00002b0c      e86feeffff     call sym.imp.strncmp
0x00002b11      85c0           test eax, eax
0x00002b13      0f8507010000   jne 0x2c20
0x00002b19      488d35393400.  lea rsi, str.Full_documentation___s_s   ; ../coreutils-8.31/src/meout.c:666 ; 0x5f59 ; "Full documentation <%s%s>\n"
0x00002b20      31ff           xor edi, edi
0x00002b22      ba05000000     mov edx, 5
0x00002b27      e8f4eeffff     call sym.imp.dcgettext
0x00002b2c      488d0d963300.  lea rcx, str.timeout                    ; .//coreutils-8.31/lib:104 ; 0x5ec9 ; "timeout"
0x00002b33      488d15163c00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x6750 ; "https://www.gnu.org/software/coreutils/"
0x00002b3a      4889c6         mov rsi, rax
0x00002b3d      bf01000000     mov edi, 1
0x00002b42      31c0           xor eax, eax
0x00002b44      e8b7f0ffff     call sym.imp.__printf_chk
0x00002b49      4939dc         cmp r12, rbx                            ; ../coreutils-8.31/src/meout.c:668
0x00002b4c      488d0d9a3300.  lea rcx, [0x00005eed]                   ; " invocation"
0x00002b53      488d1d074300.  lea rbx, [0x00006e61]
0x00002b5a      480f44d9       cmove rbx, rcx
0x00002b5e      488d355b3c00.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x67c0 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00002b65      31ff           xor edi, edi
0x00002b67      ba05000000     mov edx, 5
0x00002b6c      e8afeeffff     call sym.imp.dcgettext
0x00002b71      4889d9         mov rcx, rbx                            ; .//coreutils-8.31/lib:104
0x00002b74      4889c6         mov rsi, rax
0x00002b77      4c89e2         mov rdx, r12
0x00002b7a      bf01000000     mov edi, 1
0x00002b7f      31c0           xor eax, eax
0x00002b81      e87af0ffff     call sym.imp.__printf_chk
0x00002b86      e91bfdffff     jmp 0x28a6
0x00002b8b      e890eeffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/src/meout.c:652
0x00002b90      488d0db93b00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; .//coreutils-8.31/lib:104 ; 0x6750 ; "https://www.gnu.org/software/coreutils/"
0x00002b97      488d15a93300.  lea rdx, str.GNU_coreutils              ; 0x5f47 ; "GNU coreutils"
0x00002b9e      4889c6         mov rsi, rax
0x00002ba1      bf01000000     mov edi, 1
0x00002ba6      31c0           xor eax, eax
0x00002ba8      e853f0ffff     call sym.imp.__printf_chk
0x00002bad      31f6           xor esi, esi                            ; ../coreutils-8.31/src/meout.c:656
0x00002baf      bf05000000     mov edi, 5
0x00002bb4      e837f0ffff     call sym.imp.setlocale
0x00002bb9      4885c0         test rax, rax                           ; ../coreutils-8.31/src/meout.c:657
0x00002bbc      7418           je 0x2bd6
0x00002bbe      488d35903300.  lea rsi, [0x00005f55]                   ; "en_"
0x00002bc5      ba03000000     mov edx, 3
0x00002bca      4889c7         mov rdi, rax
0x00002bcd      e8aeedffff     call sym.imp.strncmp
0x00002bd2      85c0           test eax, eax
0x00002bd4      7543           jne 0x2c19
0x00002bd6      488d357c3300.  lea rsi, str.Full_documentation___s_s   ; ../coreutils-8.31/src/meout.c:666 ; 0x5f59 ; "Full documentation <%s%s>\n"
0x00002bdd      ba05000000     mov edx, 5
0x00002be2      31ff           xor edi, edi
0x00002be4      4c8d25de3200.  lea r12, str.timeout                    ; ../coreutils-8.31/src/meout.c:643 ; 0x5ec9 ; "timeout"
0x00002beb      488d1dfb3200.  lea rbx, [0x00005eed]                   ; ../coreutils-8.31/src/meout.c:668 ; " invocation"
0x00002bf2      e829eeffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/src/meout.c:666
0x00002bf7      488d0dcb3200.  lea rcx, str.timeout                    ; .//coreutils-8.31/lib:104 ; 0x5ec9 ; "timeout"
0x00002bfe      488d154b3b00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x6750 ; "https://www.gnu.org/software/coreutils/"
0x00002c05      4889c6         mov rsi, rax
0x00002c08      bf01000000     mov edi, 1
0x00002c0d      31c0           xor eax, eax
0x00002c0f      e8ecefffff     call sym.imp.__printf_chk
0x00002c14      e945ffffff     jmp 0x2b5e
0x00002c19      4c8d25a93200.  lea r12, str.timeout                    ; ../coreutils-8.31/src/meout.c:643 ; 0x5ec9 ; "timeout"
0x00002c20      4c8b2d416620.  mov r13, qword [obj.stdout]             ; ../coreutils-8.31/src/meout.c:663 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209268:8]=0
0x00002c27      488d354a3b00.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x6778 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x00002c2e      31ff           xor edi, edi
0x00002c30      ba05000000     mov edx, 5
0x00002c35      e8e6edffff     call sym.imp.dcgettext
0x00002c3a      4c89ee         mov rsi, r13
0x00002c3d      4889c7         mov rdi, rax
0x00002c40      e8abeeffff     call sym.imp.fputs_unlocked
0x00002c45      e9cffeffff     jmp 0x2b19
0x00002c4a      660f1f440000   nop word [rax + rax]
;-- parse_duration:
0x00002c50      53             push rbx                                ; /src:320
0x00002c51      4889fb         mov rbx, rdi
0x00002c54      4883ec20       sub rsp, 0x20
0x00002c58      488d0dd10200.  lea rcx, sym.cl_strtod                  ; /src:324 ; 0x2f30 ; "AUATUSH\x89\xf3H\x89\xfdH\x83\xec8H\x8dt$\x18dH\x8b\x04%("
0x00002c5f      488d542408     lea rdx, [rsp + 8]
0x00002c64      488d742410     lea rsi, [rsp + 0x10]
0x00002c69      64488b042528.  mov rax, qword fs:[0x28]                ; /src:320
0x00002c72      4889442418     mov qword [rsp + 0x18], rax
0x00002c77      31c0           xor eax, eax
0x00002c79      e8e22a0000     call sym.xstrtod                        ; /src:324
0x00002c7e      84c0           test al, al
0x00002c80      750a           jne 0x2c8c
0x00002c82      e8e9ecffff     call sym.imp.__errno_location
0x00002c87      833822         cmp dword [rax], 0x22
0x00002c8a      7576           jne 0x2d02
0x00002c8c      f20f10442408   movsd xmm0, qword [rsp + 8]             ; /src:326
0x00002c92      660f2e05de3b.  ucomisd xmm0, qword [0x00006878]
0x00002c9a      7266           jb 0x2d02
0x00002c9c      488b542410     mov rdx, qword [rsp + 0x10]             ; /src:328
0x00002ca1      0fb602         movzx eax, byte [rdx]
0x00002ca4      84c0           test al, al
0x00002ca6      7418           je 0x2cc0
0x00002ca8      807a0100       cmp byte [rdx + 1], 0
0x00002cac      7554           jne 0x2d02
0x00002cae      3c68           cmp al, 0x68                            ; /src:294
0x00002cb0      742e           je 0x2ce0
0x00002cb2      7f3c           jg 0x2cf0
0x00002cb4      3c64           cmp al, 0x64
0x00002cb6      754a           jne 0x2d02
0x00002cb8      f20f5905d03b.  mulsd xmm0, qword [0x00006890]
0x00002cc0      488b442418     mov rax, qword [rsp + 0x18]             ; /src:337
0x00002cc5      644833042528.  xor rax, qword fs:[0x28]
0x00002cce      756b           jne 0x2d3b
0x00002cd0      4883c420       add rsp, 0x20
0x00002cd4      5b             pop rbx
0x00002cd5      c3             ret
0x00002cd6      662e0f1f8400.  nop word cs:[rax + rax]
0x00002ce0      f20f5905a03b.  mulsd xmm0, qword [0x00006888]
0x00002ce8      ebd6           jmp 0x2cc0
0x00002cea      660f1f440000   nop word [rax + rax]
0x00002cf0      3c6d           cmp al, 0x6d                            ; /src:294
0x00002cf2      750a           jne 0x2cfe
0x00002cf4      f20f5905843b.  mulsd xmm0, qword [0x00006880]
0x00002cfc      ebc2           jmp 0x2cc0
0x00002cfe      3c73           cmp al, 0x73
0x00002d00      74be           je 0x2cc0
0x00002d02      4889df         mov rdi, rbx                            ; /src:332
0x00002d05      e886210000     call sym.quote
0x00002d0a      488d35633200.  lea rsi, str.invalid_time_interval__s   ; 0x5f74 ; "invalid time interval %s"
0x00002d11      4889c3         mov rbx, rax
0x00002d14      ba05000000     mov edx, 5
0x00002d19      31ff           xor edi, edi
0x00002d1b      e800edffff     call sym.imp.dcgettext
0x00002d20      31ff           xor edi, edi
0x00002d22      4889c2         mov rdx, rax
0x00002d25      4889d9         mov rcx, rbx
0x00002d28      31f6           xor esi, esi
0x00002d2a      31c0           xor eax, eax
0x00002d2c      e8dfeeffff     call sym.imp.error
0x00002d31      bf7d000000     mov edi, 0x7d                           ; /src:333 ; '}'
0x00002d36      e815fbffff     call sym.usage
0x00002d3b      e810edffff     call sym.imp.__stack_chk_fail           ; /src:337
;-- operand2sig:
0x00002d40      4157           push r15
0x00002d42      4156           push r14
0x00002d44      4989f6         mov r14, rsi
0x00002d47      4155           push r13
0x00002d49      4154           push r12
0x00002d4b      55             push rbp
0x00002d4c      53             push rbx
0x00002d4d      4889fd         mov rbp, rdi
0x00002d50      4883ec28       sub rsp, 0x28
0x00002d54      64488b042528.  mov rax, qword fs:[0x28]                ; /src:37
0x00002d5d      4889442418     mov qword [rsp + 0x18], rax
0x00002d62      31c0           xor eax, eax
0x00002d64      0fbe07         movsx eax, byte [rdi]                   ; /src:40
0x00002d67      83e830         sub eax, 0x30
0x00002d6a      83f809         cmp eax, 9
0x00002d6d      0f878d000000   ja 0x2e00
0x00002d73      e8f8ebffff     call sym.imp.__errno_location           ; /src:54
0x00002d78      488d742410     lea rsi, [rsp + 0x10]
0x00002d7d      ba0a000000     mov edx, 0xa
0x00002d82      c70000000000   mov dword [rax], 0
0x00002d88      4889ef         mov rdi, rbp
0x00002d8b      4889c3         mov rbx, rax
0x00002d8e      e8adedffff     call sym.imp.strtol
0x00002d93      488b542410     mov rdx, qword [rsp + 0x10]             ; /src:56
0x00002d98      4839ea         cmp rdx, rbp
0x00002d9b      741b           je 0x2db8
0x00002d9d      803a00         cmp byte [rdx], 0
0x00002da0      7516           jne 0x2db8
0x00002da2      8b13           mov edx, dword [rbx]
0x00002da4      85d2           test edx, edx
0x00002da6      7510           jne 0x2db8
0x00002da8      4863d0         movsxd rdx, eax
0x00002dab      4839c2         cmp rdx, rax
0x00002dae      0f843c010000   je 0x2ef0
0x00002db4      0f1f4000       nop dword [rax]
0x00002db8      c744240cffff.  mov dword [rsp + 0xc], 0xffffffff       ; [0xffffffff:4]=-1 ; -1
0x00002dc0      4889ef         mov rdi, rbp                            ; /src:88
0x00002dc3      e8c8200000     call sym.quote
0x00002dc8      488d35e43a00.  lea rsi, str.s:_invalid_signal          ; 0x68b3 ; "%s: invalid signal"
0x00002dcf      4889c3         mov rbx, rax
0x00002dd2      ba05000000     mov edx, 5
0x00002dd7      31ff           xor edi, edi
0x00002dd9      e842ecffff     call sym.imp.dcgettext
0x00002dde      4889d9         mov rcx, rbx
0x00002de1      4889c2         mov rdx, rax
0x00002de4      31f6           xor esi, esi
0x00002de6      31c0           xor eax, eax
0x00002de8      31ff           xor edi, edi
0x00002dea      e821eeffff     call sym.imp.error
0x00002def      b8ffffffff     mov eax, 0xffffffff                     ; /src:89 ; -1
0x00002df4      e987000000     jmp 0x2e80
0x00002df9      0f1f80000000.  nop dword [rax]
0x00002e00      e8fb280000     call sym.xstrdup                        ; /src:70
0x00002e05      0fb618         movzx ebx, byte [rax]                   ; /src:72
0x00002e08      4989c5         mov r13, rax                            ; /src:70
0x00002e0b      84db           test bl, bl                             ; /src:72
0x00002e0d      7433           je 0x2e42
0x00002e0f      4c8d25823a00.  lea r12, [0x00006898]                   ; /src:73 ; "abcdefghijklmnopqrstuvwxyz"
0x00002e16      4989c7         mov r15, rax                            ; /src:72
0x00002e19      0f1f80000000.  nop dword [rax]
0x00002e20      0fbef3         movsx esi, bl                           ; /src:73
0x00002e23      4c89e7         mov rdi, r12
0x00002e26      e855ecffff     call sym.imp.strchr
0x00002e2b      4885c0         test rax, rax
0x00002e2e      7406           je 0x2e36
0x00002e30      83eb20         sub ebx, 0x20                           ; /src:74 ; "@"
0x00002e33      41881f         mov byte [r15], bl
0x00002e36      4983c701       add r15, 1                              ; /src:72
0x00002e3a      410fb61f       movzx ebx, byte [r15]
0x00002e3e      84db           test bl, bl
0x00002e40      75de           jne 0x2e20
0x00002e42      488d5c240c     lea rbx, [rsp + 0xc]                    ; /src:78
0x00002e47      4c89ef         mov rdi, r13
0x00002e4a      4889de         mov rsi, rbx
0x00002e4d      e86e2a0000     call sym.str2sig
0x00002e52      85c0           test eax, eax
0x00002e54      7552           jne 0x2ea8
0x00002e56      8b5c240c       mov ebx, dword [rsp + 0xc]
0x00002e5a      4c89ef         mov rdi, r13                            ; /src:83
0x00002e5d      e8eeeaffff     call sym.imp.free
0x00002e62      85db           test ebx, ebx                           ; /src:86
0x00002e64      0f8856ffffff   js 0x2dc0
0x00002e6a      4c89f6         mov rsi, r14
0x00002e6d      89df           mov edi, ebx
0x00002e6f      e8dc2b0000     call sym.sig2str
0x00002e74      85c0           test eax, eax
0x00002e76      0f8544ffffff   jne 0x2dc0
0x00002e7c      8b44240c       mov eax, dword [rsp + 0xc]              ; /src:92
0x00002e80      488b4c2418     mov rcx, qword [rsp + 0x18]             ; /src:93
0x00002e85      6448330c2528.  xor rcx, qword fs:[0x28]
0x00002e8e      0f8588000000   jne 0x2f1c
0x00002e94      4883c428       add rsp, 0x28
0x00002e98      5b             pop rbx
0x00002e99      5d             pop rbp
0x00002e9a      415c           pop r12
0x00002e9c      415d           pop r13
0x00002e9e      415e           pop r14
0x00002ea0      415f           pop r15
0x00002ea2      c3             ret
0x00002ea3      0f1f440000     nop dword [rax + rax]
0x00002ea8      41807d0053     cmp byte [r13], 0x53                    ; /src:78
0x00002ead      7419           je 0x2ec8
0x00002eaf      4c89ef         mov rdi, r13                            ; /src:83
0x00002eb2      c744240cffff.  mov dword [rsp + 0xc], 0xffffffff       ; /src:81 ; [0xffffffff:4]=-1 ; -1
0x00002eba      e891eaffff     call sym.imp.free                       ; /src:83
0x00002ebf      e9fcfeffff     jmp 0x2dc0
0x00002ec4      0f1f4000       nop dword [rax]
0x00002ec8      41807d0149     cmp byte [r13 + 1], 0x49                ; /src:79
0x00002ecd      75e0           jne 0x2eaf
0x00002ecf      41807d0247     cmp byte [r13 + 2], 0x47
0x00002ed4      75d9           jne 0x2eaf
0x00002ed6      498d7d03       lea rdi, [r13 + 3]                      ; /src:80
0x00002eda      4889de         mov rsi, rbx
0x00002edd      e8de290000     call sym.str2sig
0x00002ee2      85c0           test eax, eax
0x00002ee4      75c9           jne 0x2eaf
0x00002ee6      e96bffffff     jmp 0x2e56
0x00002eeb      0f1f440000     nop dword [rax + rax]
0x00002ef0      83faff         cmp edx, 0xffffffff                     ; /src:58
0x00002ef3      741e           je 0x2f13
0x00002ef5      81faff000000   cmp edx, 0xff                           ; /src:63
0x00002efb      b87f000000     mov eax, 0x7f
0x00002f00      bbff000000     mov ebx, 0xff
0x00002f05      0f4cd8         cmovl ebx, eax
0x00002f08      21d3           and ebx, edx
0x00002f0a      895c240c       mov dword [rsp + 0xc], ebx
0x00002f0e      e957ffffff     jmp 0x2e6a
0x00002f13      8954240c       mov dword [rsp + 0xc], edx              ; /src:56
0x00002f17      e9a4feffff     jmp 0x2dc0
0x00002f1c      e82febffff     call sym.imp.__stack_chk_fail           ; /src:93
0x00002f21      662e0f1f8400.  nop word cs:[rax + rax]
0x00002f2b      0f1f440000     nop dword [rax + rax]
;-- cl_strtod:
0x00002f30      4155           push r13                                ; ../coreutils-8.31/lib/cl-strtod.c:60
0x00002f32      4154           push r12
0x00002f34      55             push rbp
0x00002f35      53             push rbx
0x00002f36      4889f3         mov rbx, rsi
0x00002f39      4889fd         mov rbp, rdi
0x00002f3c      4883ec38       sub rsp, 0x38
0x00002f40      488d742418     lea rsi, [rsp + 0x18]                   ; ../coreutils-8.31/lib/cl-strtod.c:62
0x00002f45      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/cl-strtod.c:60
0x00002f4e      4889442428     mov qword [rsp + 0x28], rax
0x00002f53      31c0           xor eax, eax
0x00002f55      e876eaffff     call sym.imp.strtod                     ; ../coreutils-8.31/lib/cl-strtod.c:62
0x00002f5a      488b442418     mov rax, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/cl-strtod.c:63
0x00002f5f      660f28c8       movapd xmm1, xmm0                       ; ../coreutils-8.31/lib/cl-strtod.c:62
0x00002f63      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/cl-strtod.c:63
0x00002f66      7530           jne 0x2f98
0x00002f68      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/cl-strtod.c:73
0x00002f6b      7408           je 0x2f75
0x00002f6d      488b442418     mov rax, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/cl-strtod.c:74
0x00002f72      488903         mov qword [rbx], rax
0x00002f75      488b442428     mov rax, qword [rsp + 0x28]             ; ../coreutils-8.31/lib/cl-strtod.c:76
0x00002f7a      644833042528.  xor rax, qword fs:[0x28]
0x00002f83      660f28c1       movapd xmm0, xmm1
0x00002f87      7555           jne 0x2fde
0x00002f89      4883c438       add rsp, 0x38
0x00002f8d      5b             pop rbx
0x00002f8e      5d             pop rbp
0x00002f8f      415c           pop r12
0x00002f91      415d           pop r13
0x00002f93      c3             ret
0x00002f94      0f1f4000       nop dword [rax]
0x00002f98      f20f11442408   movsd qword [rsp + 8], xmm0
0x00002f9e      e8cde9ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/cl-strtod.c:65
0x00002fa3      488d742420     lea rsi, [rsp + 0x20]                   ; ../coreutils-8.31/lib/cl-strtod.c:67
0x00002fa8      4889ef         mov rdi, rbp
0x00002fab      4989c4         mov r12, rax                            ; ../coreutils-8.31/lib/cl-strtod.c:65
0x00002fae      448b28         mov r13d, dword [rax]
0x00002fb1      e87a2b0000     call sym.c_strtod                       ; ../coreutils-8.31/lib/cl-strtod.c:67
0x00002fb6      488b442420     mov rax, qword [rsp + 0x20]             ; ../coreutils-8.31/lib/cl-strtod.c:68
0x00002fbb      4839442418     cmp qword [rsp + 0x18], rax
0x00002fc0      f20f104c2408   movsd xmm1, qword [rsp + 8]
0x00002fc6      7310           jae 0x2fd8
0x00002fc8      4889442418     mov qword [rsp + 0x18], rax             ; ../coreutils-8.31/lib/cl-strtod.c:69
0x00002fcd      660f28c8       movapd xmm1, xmm0
0x00002fd1      eb95           jmp 0x2f68
0x00002fd3      0f1f440000     nop dword [rax + rax]
0x00002fd8      45892c24       mov dword [r12], r13d                   ; ../coreutils-8.31/lib/cl-strtod.c:71
0x00002fdc      eb8a           jmp 0x2f68
0x00002fde      e86deaffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/cl-strtod.c:76
0x00002fe3      662e0f1f8400.  nop word cs:[rax + rax]
0x00002fed      0f1f00         nop dword [rax]
;-- close_stdout_set_file_name:
0x00002ff0      48893de16220.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x2092d8:8]=0
0x00002ff7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00002ff8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00003000      40883dc96220.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x2092d0:1]=0
0x00003007      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00003008      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00003010      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00003011      53             push rbx
0x00003012      4883ec08       sub rsp, 8
0x00003016      488b3d4b6220.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209268:8]=0
0x0000301d      e87e2b0000     call sym.close_stream
0x00003022      85c0           test eax, eax
0x00003024      7416           je 0x303c
0x00003026      e845e9ffff     call sym.imp.__errno_location
0x0000302b      803d9e622000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x2092d0:1]=0
0x00003032      4889c3         mov rbx, rax
0x00003035      741c           je 0x3053
0x00003037      833820         cmp dword [rax], 0x20
0x0000303a      7517           jne 0x3053
0x0000303c      488b3d5d6220.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2092a0:8]=0
0x00003043      e8582b0000     call sym.close_stream
0x00003048      85c0           test eax, eax
0x0000304a      7546           jne 0x3092
0x0000304c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00003050      5b             pop rbx
0x00003051      5d             pop rbp
0x00003052      c3             ret
0x00003053      488d35713800.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x68cb ; "write error"
0x0000305a      31ff           xor edi, edi
0x0000305c      ba05000000     mov edx, 5
0x00003061      e8bae9ffff     call sym.imp.dcgettext
0x00003066      488b3d6b6220.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x2092d8:8]=0
0x0000306d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00003070      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00003073      7428           je 0x309d
0x00003075      e8161c0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x0000307a      8b33           mov esi, dword [rbx]
0x0000307c      488d15543800.  lea rdx, str.s:__s                      ; 0x68d7 ; "%s: %s"
0x00003083      4889c1         mov rcx, rax
0x00003086      4989e8         mov r8, rbp
0x00003089      31ff           xor edi, edi
0x0000308b      31c0           xor eax, eax
0x0000308d      e87eebffff     call sym.imp.error
0x00003092      8b3d885f2000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x209020:4]=1
0x00003098      e8f3e8ffff     call sym.imp._exit
0x0000309d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x0000309f      488d15353800.  lea rdx, [0x000068db]                   ; "%s"
0x000030a6      4889c1         mov rcx, rax
0x000030a9      31ff           xor edi, edi
0x000030ab      31c0           xor eax, eax
0x000030ad      e85eebffff     call sym.imp.error
0x000030b2      ebde           jmp 0x3092
0x000030b4      662e0f1f8400.  nop word cs:[rax + rax]
0x000030be      6690           nop
;-- dtotimespec:
0x000030c0      660f2e051838.  ucomisd xmm0, qword [0x000068e0]        ; ../coreutils-8.31/lib/dtotimespec.c:31
0x000030c8      0f8692000000   jbe 0x3160
0x000030ce      f20f100d1238.  movsd xmm1, qword [0x000068e8]          ; ../coreutils-8.31/lib/dtotimespec.c:34 ; [0x68e8:8]=0x43e0000000000000
0x000030d6      660f2ec8       ucomisd xmm1, xmm0
0x000030da      766c           jbe 0x3148
0x000030dc      f2480f2cf0     cvttsd2si rsi, xmm0                     ; ../coreutils-8.31/lib/dtotimespec.c:38
0x000030e1      660fefc9       pxor xmm1, xmm1                         ; ../coreutils-8.31/lib/dtotimespec.c:39
0x000030e5      31c9           xor ecx, ecx                            ; ../coreutils-8.31/lib/dtotimespec.c:41
0x000030e7      f2480f2ace     cvtsi2sd xmm1, rsi                      ; ../coreutils-8.31/lib/dtotimespec.c:39
0x000030ec      f20f5cc1       subsd xmm0, xmm1
0x000030f0      660fefc9       pxor xmm1, xmm1                         ; ../coreutils-8.31/lib/dtotimespec.c:41
0x000030f4      f20f5905f437.  mulsd xmm0, qword [0x000068f0]          ; ../coreutils-8.31/lib/dtotimespec.c:39
0x000030fc      f2480f2cd0     cvttsd2si rdx, xmm0                     ; ../coreutils-8.31/lib/dtotimespec.c:40
0x00003101      f2480f2aca     cvtsi2sd xmm1, rdx                      ; ../coreutils-8.31/lib/dtotimespec.c:41
0x00003106      660f2ec1       ucomisd xmm0, xmm1
0x0000310a      0f97c1         seta cl
0x0000310d      4801d1         add rcx, rdx
0x00003110      48bab394d626.  movabs rdx, 0x112e0be826d694b3          ; ../coreutils-8.31/lib/dtotimespec.c:42
0x0000311a      4889c8         mov rax, rcx
0x0000311d      48f7ea         imul rdx
0x00003120      4889c8         mov rax, rcx
0x00003123      48c1f83f       sar rax, 0x3f
0x00003127      48c1fa1a       sar rdx, 0x1a
0x0000312b      4829c2         sub rdx, rax
0x0000312e      488d0432       lea rax, [rdx + rsi]
0x00003132      4869d200ca9a.  imul rdx, rdx, 0x3b9aca00               ; ../coreutils-8.31/lib/dtotimespec.c:43
0x00003139      4829d1         sub rcx, rdx                            ; ../coreutils-8.31/lib/dtotimespec.c:45
0x0000313c      4889ca         mov rdx, rcx
0x0000313f      782f           js 0x3170
0x00003141      f3c3           ret                                     ; ../coreutils-8.31/lib/dtotimespec.c:53
0x00003143      0f1f440000     nop dword [rax + rax]
0x00003148      48b8ffffffff.  movabs rax, 0x7fffffffffffffff          ; 9223372036854775807
0x00003152      baffc99a3b     mov edx, 0x3b9ac9ff
0x00003157      c3             ret
0x00003158      0f1f84000000.  nop dword [rax + rax]
0x00003160      48b800000000.  movabs rax, 0x8000000000000000
0x0000316a      31d2           xor edx, edx
0x0000316c      c3             ret
0x0000316d      0f1f00         nop dword [rax]
0x00003170      4883e801       sub rax, 1                              ; ../coreutils-8.31/lib/dtotimespec.c:47
0x00003174      4881c200ca9a.  add rdx, 0x3b9aca00                     ; ../coreutils-8.31/lib/dtotimespec.c:48
0x0000317b      c3             ret                                     ; ../coreutils-8.31/lib/dtotimespec.c:53
0x0000317c      0f1f4000       nop dword [rax]
;-- set_program_name:
0x00003180      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00003183      53             push rbx
0x00003184      7477           je 0x31fd                               ; ../coreutils-8.31/lib/progname.c:51
0x00003186      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x0000318b      4889fb         mov rbx, rdi
0x0000318e      e80de9ffff     call sym.imp.strrchr
0x00003193      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00003196      7455           je 0x31ed
0x00003198      4c8d4001       lea r8, [rax + 1]
0x0000319c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x0000319f      4829da         sub rdx, rbx
0x000031a2      4883fa06       cmp rdx, 6
0x000031a6      7e45           jle 0x31ed
0x000031a8      488d70fa       lea rsi, [rax - 6]
0x000031ac      488d3d7d3700.  lea rdi, str..libs                      ; 0x6930 ; "/.libs/"
0x000031b3      b907000000     mov ecx, 7
0x000031b8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000031ba      0f97c2         seta dl
0x000031bd      80da00         sbb dl, 0
0x000031c0      84d2           test dl, dl
0x000031c2      7529           jne 0x31ed
0x000031c4      488d3d6d3700.  lea rdi, [0x00006938]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x000031cb      b903000000     mov ecx, 3
0x000031d0      4c89c6         mov rsi, r8
0x000031d3      4c89c3         mov rbx, r8
0x000031d6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000031d8      0f97c2         seta dl
0x000031db      80da00         sbb dl, 0
0x000031de      84d2           test dl, dl
0x000031e0      750b           jne 0x31ed
0x000031e2      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x000031e6      48891d736020.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x209260:8]=0
0x000031ed      48891dec6020.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x2092e0:8]=0
0x000031f4      48891d856020.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x209280:8]=0
0x000031fb      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x000031fc      c3             ret
0x000031fd      488b0d9c6020.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2092a0:8]=0
0x00003204      488d3ded3600.  lea rdi, [0x000068f8]                   ; "A NULL argv[0] was passed through an exec system call.\n"
0x0000320b      ba37000000     mov edx, 0x37                           ; '7'
0x00003210      be01000000     mov esi, 1
0x00003215      e896eaffff     call sym.imp.fwrite
0x0000321a      e841e7ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x0000321f      90             nop
;-- gettext_quote.part.1:
0x00003220      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00003221      53             push rbx
0x00003222      4889fd         mov rbp, rdi
0x00003225      89f3           mov ebx, esi
0x00003227      4883ec08       sub rsp, 8
0x0000322b      e8502a0000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00003230      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00003233      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003236      80fa55         cmp dl, 0x55
0x00003239      7475           je 0x32b0
0x0000323b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x0000323e      7420           je 0x3260
0x00003240      488d05043700.  lea rax, str.l______l                   ; 0x694b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\uaa00\uffd7\u03ff\uffca\U010003d9\ue4ff\uffd7\ud4ff\uffd5\u30ff\uffd6\u85ff\uffd6\ucaff\uffd6\u04ff\uffd7\u04ff\uffd7\u04ff\uffd7\u54ff\uffcd\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u94ff\uffcd\u9cff\uffcc\u5cff\uffcc\u24ff\uffce\u14ff\uffce\u04ff\uffce\uf4ff\uffcd\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\ue4ff\uffcd\ud4ff\uffcd\ud4ff\uffcd\ua4ff\uffcd\ud4ff\uffcd\u7cff\uffcd\ud4ff\uffcd\u37ff\uffcc\ud4ff\uffcd\ud4ff\uffcd\ud4ff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\ud4ff\uffcd\ud4ff\uffcd\ud4ff\uffcd\ud4ff\uffcd\u07ff\uffcc\u3cff\uffce\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\ud4ff\uffcd\uacff\uffcc\u7cff\uffcd\ud4ff\uffcd\u7cff\uffcd\ud4ff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u37ff\uffcb\ud4ff\uffcd\u37ff\uffcb\ua4ff\uffcd\u28ff\uffcd\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u18ff\uffcd\u68ff\uffce\u50ff\uffce\xff\uffcd\u40ff\uffce\ue8ff\uffcc\u28ff\uffce\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u10ff\uffce\U010003cd\U010003cd\ue0ff\uffcd\U010003cd\uc8ff\uffcd\U010003cd\u38ff\uffca\U010003cd\U010003cd\U010003cd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\U010003cd\U010003cd\U010003cd\U010003cd\u08ff\uffca\u38ff\uffcc\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\U010003cd\uc8ff\uffcc\uc8ff\uffcd\U010003cd\uc8ff\uffcd\U010003cd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\u38ff\uffc9\U010003cd\u38ff\uffc9\ue0ff\uffcd\xff"
0x00003247      488d15ff3600.  lea rdx, [0x0000694d]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\uaa00\uffd7\u03ff\uffca\U010003d9\ue4ff\uffd7\ud4ff\uffd5\u30ff\uffd6\u85ff\uffd6\ucaff\uffd6\u04ff\uffd7\u04ff\uffd7\u04ff\uffd7"
0x0000324e      83fb09         cmp ebx, 9
0x00003251      480f45c2       cmovne rax, rdx
0x00003255      4883c408       add rsp, 8
0x00003259      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x0000325a      5d             pop rbp
0x0000325b      c3             ret
0x0000325c      0f1f4000       nop dword [rax]
0x00003260      0fb65001       movzx edx, byte [rax + 1]
0x00003264      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003267      80fa42         cmp dl, 0x42
0x0000326a      75d4           jne 0x3240
0x0000326c      80780231       cmp byte [rax + 2], 0x31
0x00003270      75ce           jne 0x3240
0x00003272      80780338       cmp byte [rax + 3], 0x38
0x00003276      75c8           jne 0x3240
0x00003278      80780430       cmp byte [rax + 4], 0x30
0x0000327c      75c2           jne 0x3240
0x0000327e      80780533       cmp byte [rax + 5], 0x33
0x00003282      75bc           jne 0x3240
0x00003284      80780630       cmp byte [rax + 6], 0x30
0x00003288      75b6           jne 0x3240
0x0000328a      80780700       cmp byte [rax + 7], 0
0x0000328e      75b0           jne 0x3240
0x00003290      807d0060       cmp byte [rbp], 0x60
0x00003294      488d05a93600.  lea rax, [0x00006944]
0x0000329b      488d15a63600.  lea rdx, [0x00006948]
0x000032a2      480f45c2       cmovne rax, rdx
0x000032a6      4883c408       add rsp, 8
0x000032aa      5b             pop rbx
0x000032ab      5d             pop rbp
0x000032ac      c3             ret
0x000032ad      0f1f00         nop dword [rax]
0x000032b0      0fb65001       movzx edx, byte [rax + 1]
0x000032b4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000032b7      80fa54         cmp dl, 0x54
0x000032ba      7584           jne 0x3240
0x000032bc      0fb65002       movzx edx, byte [rax + 2]
0x000032c0      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000032c3      80fa46         cmp dl, 0x46
0x000032c6      0f8574ffffff   jne 0x3240
0x000032cc      8078032d       cmp byte [rax + 3], 0x2d
0x000032d0      0f856affffff   jne 0x3240
0x000032d6      80780438       cmp byte [rax + 4], 0x38
0x000032da      0f8560ffffff   jne 0x3240
0x000032e0      80780500       cmp byte [rax + 5], 0
0x000032e4      0f8556ffffff   jne 0x3240
0x000032ea      807d0060       cmp byte [rbp], 0x60
0x000032ee      488d05473600.  lea rax, [0x0000693c]                   ; "\u2018"
0x000032f5      488d15443600.  lea rdx, [0x00006940]                   ; "\u2019"
0x000032fc      480f45c2       cmovne rax, rdx
0x00003300      4883c408       add rsp, 8
0x00003304      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00003305      5d             pop rbp
0x00003306      c3             ret
0x00003307      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00003310      4157           push r15
0x00003312      4156           push r14
0x00003314      4589c7         mov r15d, r8d
0x00003317      4155           push r13
0x00003319      4154           push r12
0x0000331b      4989fe         mov r14, rdi
0x0000331e      55             push rbp
0x0000331f      53             push rbx
0x00003320      4489cb         mov ebx, r9d
0x00003323      4989f5         mov r13, rsi
0x00003326      4889cd         mov rbp, rcx
0x00003329      83e302         and ebx, 2
0x0000332c      4881ecb80000.  sub rsp, 0xb8
0x00003333      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x0000333b      4889542410     mov qword [rsp + 0x10], rdx
0x00003340      4489442408     mov dword [rsp + 8], r8d
0x00003345      44894c2478     mov dword [rsp + 0x78], r9d
0x0000334a      4889442420     mov qword [rsp + 0x20], rax
0x0000334f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00003357      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x0000335c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00003364      4889442460     mov qword [rsp + 0x60], rax
0x00003369      64488b042528.  mov rax, qword fs:[0x28]
0x00003372      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000337a      31c0           xor eax, eax
0x0000337c      e8afe6ffff     call sym.imp.__ctype_get_mb_cur_max
0x00003381      4183ff0a       cmp r15d, 0xa
0x00003385      4889442458     mov qword [rsp + 0x58], rax
0x0000338a      0f87af110000   ja 0x453f
0x00003390      488d0d093600.  lea rcx, [0x000069a0]
0x00003397      4489fa         mov edx, r15d
0x0000339a      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000339e      4801c8         add rax, rcx
0x000033a1      ffe0           jmp rax
0x000033a3      c644240e01     mov byte [rsp + 0xe], 1
0x000033a8      c644247c00     mov byte [rsp + 0x7c], 0
0x000033ad      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x000033b0      48c744245000.  mov qword [rsp + 0x50], 0
0x000033b9      c644240f01     mov byte [rsp + 0xf], 1
0x000033be      c644240d00     mov byte [rsp + 0xd], 0
0x000033c3      488d05833500.  lea rax, [0x0000694d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\uaa00\uffd7\u03ff\uffca\U010003d9\ue4ff\uffd7\ud4ff\uffd5\u30ff\uffd6\u85ff\uffd6\ucaff\uffd6\u04ff\uffd7\u04ff\uffd7\u04ff\uffd7"
0x000033ca      48c744241801.  mov qword [rsp + 0x18], 1
0x000033d3      4531ff         xor r15d, r15d
0x000033d6      c74424080200.  mov dword [rsp + 8], 2
0x000033de      4889442448     mov qword [rsp + 0x48], rax
0x000033e3      4531db         xor r11d, r11d
0x000033e6      4889e8         mov rax, rbp
0x000033e9      4589e0         mov r8d, r12d
0x000033ec      4c89dd         mov rbp, r11
0x000033ef      4989c3         mov r11, rax
0x000033f2      660f1f440000   nop word [rax + rax]
0x000033f8      4939eb         cmp r11, rbp
0x000033fb      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x000033ff      4983fbff       cmp r11, 0xffffffffffffffff
0x00003403      750d           jne 0x3412
0x00003405      488b442410     mov rax, qword [rsp + 0x10]
0x0000340a      803c2800       cmp byte [rax + rbp], 0
0x0000340e      410f95c4       setne r12b
0x00003412      4584e4         test r12b, r12b
0x00003415      0f8455060000   je 0x3a70
0x0000341b      837c240802     cmp dword [rsp + 8], 2
0x00003420      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003425      4c8d0c2f       lea r9, [rdi + rbp]
0x00003429      0f95c0         setne al
0x0000342c      2244240d       and al, byte [rsp + 0xd]
0x00003430      4189c2         mov r10d, eax
0x00003433      0f84a7000000   je 0x34e0
0x00003439      488b442418     mov rax, qword [rsp + 0x18]
0x0000343e      4885c0         test rax, rax
0x00003441      0f8429040000   je 0x3870
0x00003447      4983fbff       cmp r11, 0xffffffffffffffff
0x0000344b      488d5c0500     lea rbx, [rbp + rax]
0x00003450      752e           jne 0x3480
0x00003452      4883f801       cmp rax, 1
0x00003456      7628           jbe 0x3480
0x00003458      4488442438     mov byte [rsp + 0x38], r8b
0x0000345d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00003462      4c894c2428     mov qword [rsp + 0x28], r9
0x00003467      e8d4e5ffff     call sym.imp.strlen
0x0000346c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00003472      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00003478      4989c3         mov r11, rax
0x0000347b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00003480      4c39db         cmp rbx, r11
0x00003483      4488542428     mov byte [rsp + 0x28], r10b
0x00003488      0f87b2050000   ja 0x3a40
0x0000348e      488b542418     mov rdx, qword [rsp + 0x18]
0x00003493      488b742448     mov rsi, qword [rsp + 0x48]
0x00003498      4c89cf         mov rdi, r9
0x0000349b      4c895c2440     mov qword [rsp + 0x40], r11
0x000034a0      4488442438     mov byte [rsp + 0x38], r8b
0x000034a5      4c894c2430     mov qword [rsp + 0x30], r9
0x000034aa      e831e6ffff     call sym.imp.memcmp
0x000034af      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x000034b1      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000034b6      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x000034bc      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x000034c1      0f8579050000   jne 0x3a40
0x000034c7      807c240f00     cmp byte [rsp + 0xf], 0
0x000034cc      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x000034d2      0f857d0f0000   jne 0x4455
0x000034d8      0f1f84000000.  nop dword [rax + rax]
0x000034e0      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x000034e4      80fb7e         cmp bl, 0x7e
0x000034e7      0f871b030000   ja 0x3808
0x000034ed      488d0dd83400.  lea rcx, [0x000069cc]
0x000034f4      0fb6d3         movzx edx, bl
0x000034f7      48630491       movsxd rax, dword [rcx + rdx*4]
0x000034fb      4801c8         add rax, rcx
0x000034fe      ffe0           jmp rax
0x00003500      4531d2         xor r10d, r10d
0x00003503      4983fb01       cmp r11, 1
0x00003507      0f95c0         setne al
0x0000350a      4983fbff       cmp r11, 0xffffffffffffffff
0x0000350e      750c           jne 0x351c
0x00003510      488b442410     mov rax, qword [rsp + 0x10]
0x00003515      80780100       cmp byte [rax + 1], 0
0x00003519      0f95c0         setne al
0x0000351c      837c240802     cmp dword [rsp + 8], 2
0x00003521      0f94c2         sete dl
0x00003524      84c0           test al, al
0x00003526      0f844c020000   je 0x3778
0x0000352c      4531e4         xor r12d, r12d
0x0000352f      31c0           xor eax, eax
0x00003531      0f1f80000000.  nop dword [rax]
0x00003538      807c240d01     cmp byte [rsp + 0xd], 1
0x0000353d      0f850f010000   jne 0x3652
0x00003543      84d2           test dl, dl
0x00003545      0f8507010000   jne 0x3652
0x0000354b      488b742420     mov rsi, qword [rsp + 0x20]
0x00003550      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00003553      7414           je 0x3569
0x00003555      89da           mov edx, ebx
0x00003557      c0ea05         shr dl, 5
0x0000355a      0fb6d2         movzx edx, dl
0x0000355d      8b1496         mov edx, dword [rsi + rdx*4]
0x00003560      0fa3da         bt edx, ebx
0x00003563      0f824a010000   jb 0x36b3
0x00003569      4584d2         test r10b, r10b
0x0000356c      0f8541010000   jne 0x36b3
0x00003572      83f001         xor eax, 1
0x00003575      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00003579      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x0000357c      84c0           test al, al
0x0000357e      7420           je 0x35a0                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00003580      4d39fd         cmp r13, r15
0x00003583      7605           jbe 0x358a
0x00003585      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000358a      498d4701       lea rax, [r15 + 1]
0x0000358e      4939c5         cmp r13, rax
0x00003591      7606           jbe 0x3599
0x00003593      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003599      4983c702       add r15, 2
0x0000359d      4531c0         xor r8d, r8d
0x000035a0      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x000035a3      7304           jae 0x35a9                              ; ../coreutils-8.31/lib/quotearg.c:68
0x000035a5      43881c3e       mov byte [r14 + r15], bl
0x000035a9      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x000035ae      4983c701       add r15, 1
0x000035b2      b800000000     mov eax, 0
0x000035b7      4584e4         test r12b, r12b
0x000035ba      0f44f8         cmove edi, eax
0x000035bd      40887c240e     mov byte [rsp + 0xe], dil
0x000035c2      e931feffff     jmp 0x33f8
0x000035c7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x000035d0      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x000035d3      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x000035d7      83f802         cmp eax, 2
0x000035da      0f84b8050000   je 0x3b98
0x000035e0      83f805         cmp eax, 5
0x000035e3      0f846f050000   je 0x3b58
0x000035e9      83f802         cmp eax, 2
0x000035ec      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000035f1      0f94c2         sete dl
0x000035f4      4531e4         xor r12d, r12d
0x000035f7      31c0           xor eax, eax
0x000035f9      e93affffff     jmp 0x3538
0x000035fe      6690           nop
0x00003600      4531d2         xor r10d, r10d
0x00003603      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00003608      0f8402050000   je 0x3b10
0x0000360e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00003613      31d2           xor edx, edx
0x00003615      31c0           xor eax, eax
0x00003617      bb27000000     mov ebx, 0x27                           ; '''
0x0000361c      e917ffffff     jmp 0x3538
0x00003621      0f1f80000000.  nop dword [rax]
0x00003628      ba09000000     mov edx, 9
0x0000362d      bb74000000     mov ebx, 0x74                           ; 't'
0x00003632      837c240802     cmp dword [rsp + 8], 2
0x00003637      0f94c0         sete al
0x0000363a      2244240f       and al, byte [rsp + 0xf]
0x0000363e      0f854a010000   jne 0x378e
0x00003644      807c240d00     cmp byte [rsp + 0xd], 0
0x00003649      7565           jne 0x36b0
0x0000364b      89d3           mov ebx, edx
0x0000364d      4531e4         xor r12d, r12d
0x00003650      31c0           xor eax, eax
0x00003652      807c240f00     cmp byte [rsp + 0xf], 0
0x00003657      0f85eefeffff   jne 0x354b
0x0000365d      e907ffffff     jmp 0x3569                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00003662      660f1f440000   nop word [rax + rax]
0x00003668      ba08000000     mov edx, 8
0x0000366d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003672      ebd0           jmp 0x3644
0x00003674      0f1f4000       nop dword [rax]
0x00003678      837c240802     cmp dword [rsp + 8], 2
0x0000367d      0f84cd030000   je 0x3a50
0x00003683      807c240d00     cmp byte [rsp + 0xd], 0
0x00003688      0f8412020000   je 0x38a0
0x0000368e      807c240f00     cmp byte [rsp + 0xf], 0
0x00003693      0f8407020000   je 0x38a0
0x00003699      48837c241800   cmp qword [rsp + 0x18], 0
0x0000369f      0f85b6030000   jne 0x3a5b
0x000036a5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000036aa      660f1f440000   nop word [rax + rax]
0x000036b0      4531e4         xor r12d, r12d
0x000036b3      837c240802     cmp dword [rsp + 8], 2
0x000036b8      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x000036bb      807c240f00     cmp byte [rsp + 0xf], 0
0x000036c0      89d0           mov eax, edx
0x000036c2      0f8550080000   jne 0x3f18
0x000036c8      4489c0         mov eax, r8d
0x000036cb      83f001         xor eax, 1
0x000036ce      20d0           and al, dl
0x000036d0      742f           je 0x3701
0x000036d2      4d39fd         cmp r13, r15
0x000036d5      7605           jbe 0x36dc
0x000036d7      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000036dc      498d5701       lea rdx, [r15 + 1]
0x000036e0      4939d5         cmp r13, rdx
0x000036e3      7606           jbe 0x36eb
0x000036e5      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000036eb      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x000036ef      4939d5         cmp r13, rdx
0x000036f2      7606           jbe 0x36fa
0x000036f4      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000036fa      4983c703       add r15, 3
0x000036fe      4189c0         mov r8d, eax
0x00003701      4d39fd         cmp r13, r15
0x00003704      7605           jbe 0x370b
0x00003706      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000370b      4983c701       add r15, 1
0x0000370f      4883c501       add rbp, 1
0x00003713      e988feffff     jmp 0x35a0
0x00003718      0f1f84000000.  nop dword [rax + rax]
0x00003720      807c240d00     cmp byte [rsp + 0xd], 0
0x00003725      0f85c8010000   jne 0x38f3
0x0000372b      31d2           xor edx, edx
0x0000372d      f644247801     test byte [rsp + 0x78], 1
0x00003732      0f8413ffffff   je 0x364b
0x00003738      4883c501       add rbp, 1
0x0000373c      e9b7fcffff     jmp 0x33f8
0x00003741      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00003748      837c240802     cmp dword [rsp + 8], 2
0x0000374d      0f94c2         sete dl
0x00003750      31c0           xor eax, eax
0x00003752      e9e1fdffff     jmp 0x3538
0x00003757      660f1f840000.  nop word [rax + rax]
0x00003760      ba07000000     mov edx, 7
0x00003765      bb61000000     mov ebx, 0x61                           ; 'a'
0x0000376a      e9d5feffff     jmp 0x3644
0x0000376f      90             nop
0x00003770      837c240802     cmp dword [rsp + 8], 2
0x00003775      0f94c2         sete dl
0x00003778      4885ed         test rbp, rbp
0x0000377b      0f85abfdffff   jne 0x352c
0x00003781      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003786      20d0           and al, dl
0x00003788      0f84aafdffff   je 0x3538
0x0000378e      4c89dd         mov rbp, r11
0x00003791      c74424080200.  mov dword [rsp + 8], 2
0x00003799      e9fb060000     jmp 0x3e99
0x0000379e      6690           nop
0x000037a0      837c240802     cmp dword [rsp + 8], 2
0x000037a5      0f94c2         sete dl
0x000037a8      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x000037ab      ebd4           jmp 0x3781
0x000037ad      0f1f00         nop dword [rax]
0x000037b0      837c240802     cmp dword [rsp + 8], 2
0x000037b5      bb20000000     mov ebx, 0x20                           ; "@"
0x000037ba      0f94c2         sete dl
0x000037bd      ebc2           jmp 0x3781
0x000037bf      90             nop
0x000037c0      ba0d000000     mov edx, 0xd
0x000037c5      bb72000000     mov ebx, 0x72                           ; 'r'
0x000037ca      e963feffff     jmp 0x3632
0x000037cf      90             nop
0x000037d0      ba0c000000     mov edx, 0xc
0x000037d5      bb66000000     mov ebx, 0x66                           ; 'f'
0x000037da      e965feffff     jmp 0x3644
0x000037df      90             nop
0x000037e0      ba0b000000     mov edx, 0xb
0x000037e5      bb76000000     mov ebx, 0x76                           ; 'v'
0x000037ea      e955feffff     jmp 0x3644
0x000037ef      90             nop
0x000037f0      ba0a000000     mov edx, 0xa
0x000037f5      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x000037fa      e933feffff     jmp 0x3632
0x000037ff      90             nop
0x00003800      4531d2         xor r10d, r10d
0x00003803      0f1f440000     nop dword [rax + rax]
0x00003808      48837c245801   cmp qword [rsp + 0x58], 1
0x0000380e      0f85a4030000   jne 0x3bb8
0x00003814      4c895c2438     mov qword [rsp + 0x38], r11
0x00003819      4488442430     mov byte [rsp + 0x30], r8b
0x0000381e      4488542428     mov byte [rsp + 0x28], r10b
0x00003823      e808e5ffff     call sym.imp.__ctype_b_loc
0x00003828      488b08         mov rcx, qword [rax]
0x0000382b      0fb6d3         movzx edx, bl
0x0000382e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003834      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x0000383a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0000383f      bf01000000     mov edi, 1
0x00003844      0fb70451       movzx eax, word [rcx + rdx*2]
0x00003848      66250040       and ax, 0x4000
0x0000384c      410f95c4       setne r12b
0x00003850      0f94c0         sete al
0x00003853      2244240d       and al, byte [rsp + 0xd]
0x00003857      84c0           test al, al
0x00003859      0f8592090000   jne 0x41f1
0x0000385f      837c240802     cmp dword [rsp + 8], 2
0x00003864      0f94c2         sete dl
0x00003867      e9ccfcffff     jmp 0x3538
0x0000386c      0f1f4000       nop dword [rax]
0x00003870      410fb619       movzx ebx, byte [r9]
0x00003874      80fb7e         cmp bl, 0x7e
0x00003877      7787           ja 0x3800
0x00003879      488d0d483300.  lea rcx, [0x00006bc8]
0x00003880      0fb6d3         movzx edx, bl
0x00003883      48630491       movsxd rax, dword [rcx + rdx*4]
0x00003887      4801c8         add rax, rcx
0x0000388a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x0000388c      0f1f4000       nop dword [rax]
0x00003890      4531d2         xor r10d, r10d
0x00003893      807c240d00     cmp byte [rsp + 0xd], 0
0x00003898      0f85f0fdffff   jne 0x368e
0x0000389e      6690           nop
0x000038a0      ba5c000000     mov edx, 0x5c                           ; '\'
0x000038a5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000038aa      e995fdffff     jmp 0x3644
0x000038af      90             nop
0x000038b0      ba0c000000     mov edx, 0xc
0x000038b5      4531d2         xor r10d, r10d
0x000038b8      bb66000000     mov ebx, 0x66                           ; 'f'
0x000038bd      e982fdffff     jmp 0x3644
0x000038c2      660f1f440000   nop word [rax + rax]
0x000038c8      ba0a000000     mov edx, 0xa
0x000038cd      4531d2         xor r10d, r10d
0x000038d0      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x000038d5      e958fdffff     jmp 0x3632
0x000038da      660f1f440000   nop word [rax + rax]
0x000038e0      bb61000000     mov ebx, 0x61                           ; 'a'
0x000038e5      e9c6fdffff     jmp 0x36b0
0x000038ea      660f1f440000   nop word [rax + rax]
0x000038f0      4531d2         xor r10d, r10d
0x000038f3      837c240802     cmp dword [rsp + 8], 2
0x000038f8      0f94c2         sete dl
0x000038fb      807c240f00     cmp byte [rsp + 0xf], 0
0x00003900      0f85940b0000   jne 0x449a
0x00003906      4489c0         mov eax, r8d
0x00003909      4c89f9         mov rcx, r15
0x0000390c      83f001         xor eax, 1
0x0000390f      20d0           and al, dl
0x00003911      742d           je 0x3940
0x00003913      4d39fd         cmp r13, r15
0x00003916      7605           jbe 0x391d
0x00003918      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000391d      498d4f01       lea rcx, [r15 + 1]
0x00003921      4939cd         cmp r13, rcx
0x00003924      7606           jbe 0x392c
0x00003926      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000392c      498d4f02       lea rcx, [r15 + 2]
0x00003930      4939cd         cmp r13, rcx
0x00003933      0f8730060000   ja 0x3f69
0x00003939      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x0000393d      4189c0         mov r8d, eax
0x00003940      4939cd         cmp r13, rcx
0x00003943      7605           jbe 0x394a
0x00003945      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000394a      837c240802     cmp dword [rsp + 8], 2
0x0000394f      4c8d7901       lea r15, [rcx + 1]
0x00003953      0f8400060000   je 0x3f59
0x00003959      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000395d      4c39d8         cmp rax, r11
0x00003960      7319           jae 0x397b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00003962      488b442410     mov rax, qword [rsp + 0x10]
0x00003967      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x0000396c      88442428       mov byte [rsp + 0x28], al
0x00003970      83e830         sub eax, 0x30
0x00003973      3c09           cmp al, 9
0x00003975      0f862e080000   jbe 0x41a9
0x0000397b      4489e0         mov eax, r12d
0x0000397e      bb30000000     mov ebx, 0x30                           ; '0'
0x00003983      4531e4         xor r12d, r12d
0x00003986      e9adfbffff     jmp 0x3538                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x0000398b      0f1f440000     nop dword [rax + rax]
0x00003990      837c240802     cmp dword [rsp + 8], 2
0x00003995      4589d4         mov r12d, r10d
0x00003998      0f94c2         sete dl
0x0000399b      4531d2         xor r10d, r10d
0x0000399e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x000039a0      e993fbffff     jmp 0x3538                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x000039a5      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x000039a8      837c240802     cmp dword [rsp + 8], 2
0x000039ad      0f94c2         sete dl
0x000039b0      4531d2         xor r10d, r10d
0x000039b3      e9c0fdffff     jmp 0x3778
0x000039b8      0f1f84000000.  nop dword [rax + rax]
0x000039c0      837c240802     cmp dword [rsp + 8], 2
0x000039c5      0f94c2         sete dl
0x000039c8      4531d2         xor r10d, r10d
0x000039cb      4531e4         xor r12d, r12d
0x000039ce      e9aefdffff     jmp 0x3781
0x000039d3      0f1f440000     nop dword [rax + rax]
0x000039d8      837c240802     cmp dword [rsp + 8], 2
0x000039dd      4589d4         mov r12d, r10d
0x000039e0      bb20000000     mov ebx, 0x20                           ; "@"
0x000039e5      0f94c2         sete dl
0x000039e8      4531d2         xor r10d, r10d
0x000039eb      e991fdffff     jmp 0x3781
0x000039f0      ba0d000000     mov edx, 0xd
0x000039f5      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x000039f8      bb72000000     mov ebx, 0x72                           ; 'r'
0x000039fd      e930fcffff     jmp 0x3632
0x00003a02      660f1f440000   nop word [rax + rax]
0x00003a08      bb76000000     mov ebx, 0x76                           ; 'v'
0x00003a0d      e99efcffff     jmp 0x36b0
0x00003a12      660f1f440000   nop word [rax + rax]
0x00003a18      ba09000000     mov edx, 9
0x00003a1d      4531d2         xor r10d, r10d
0x00003a20      bb74000000     mov ebx, 0x74                           ; 't'
0x00003a25      e908fcffff     jmp 0x3632
0x00003a2a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00003a30      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003a35      e976fcffff     jmp 0x36b0
0x00003a3a      660f1f440000   nop word [rax + rax]
0x00003a40      4531d2         xor r10d, r10d
0x00003a43      e998faffff     jmp 0x34e0
0x00003a48      0f1f84000000.  nop dword [rax + rax]
0x00003a50      807c240f00     cmp byte [rsp + 0xf], 0
0x00003a55      0f8565090000   jne 0x43c0
0x00003a5b      4883c501       add rbp, 1
0x00003a5f      4489c0         mov eax, r8d
0x00003a62      4531e4         xor r12d, r12d
0x00003a65      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00003a6a      e90dfbffff     jmp 0x357c
0x00003a6f      90             nop
0x00003a70      837c240802     cmp dword [rsp + 8], 2
0x00003a75      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003a7a      4589c4         mov r12d, r8d
0x00003a7d      4c89dd         mov rbp, r11
0x00003a80      0f94c2         sete dl
0x00003a83      89d8           mov eax, ebx
0x00003a85      4d85ff         test r15, r15
0x00003a88      0f94c1         sete cl
0x00003a8b      21d0           and eax, edx
0x00003a8d      20c8           and al, cl
0x00003a8f      0f85610a0000   jne 0x44f6                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00003a95      89d8           mov eax, ebx
0x00003a97      83f001         xor eax, 1
0x00003a9a      20c2           and dl, al
0x00003a9c      0f846a090000   je 0x440c
0x00003aa2      807c247c00     cmp byte [rsp + 0x7c], 0
0x00003aa7      0f845d090000   je 0x440a
0x00003aad      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00003ab2      0f85f5090000   jne 0x44ad
0x00003ab8      4d85ed         test r13, r13
0x00003abb      0f94c0         sete al
0x00003abe      48837c245000   cmp qword [rsp + 0x50], 0
0x00003ac4      0f95c2         setne dl
0x00003ac7      20d0           and al, dl
0x00003ac9      0f841d0a0000   je 0x44ec
0x00003acf      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003ad4      488d1d722e00.  lea rbx, [0x0000694d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\uaa00\uffd7\u03ff\uffca\U010003d9\ue4ff\uffd7\ud4ff\uffd5\u30ff\uffd6\u85ff\uffd6\ucaff\uffd6\u04ff\uffd7\u04ff\uffd7\u04ff\uffd7"
0x00003adb      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x00003adf      c74424080200.  mov dword [rsp + 8], 2
0x00003ae7      41bf01000000   mov r15d, 1
0x00003aed      48c744241801.  mov qword [rsp + 0x18], 1
0x00003af6      c644240f00     mov byte [rsp + 0xf], 0
0x00003afb      48895c2448     mov qword [rsp + 0x48], rbx
0x00003b00      8844247c       mov byte [rsp + 0x7c], al
0x00003b04      e9daf8ffff     jmp 0x33e3
0x00003b09      0f1f80000000.  nop dword [rax]
0x00003b10      807c240f00     cmp byte [rsp + 0xf], 0
0x00003b15      0f85a5080000   jne 0x43c0
0x00003b1b      4d85ed         test r13, r13
0x00003b1e      0f84fc030000   je 0x3f20                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00003b24      31d2           xor edx, edx
0x00003b26      48837c245000   cmp qword [rsp + 0x50], 0
0x00003b2c      0f85ee030000   jne 0x3f20                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00003b32      4c896c2450     mov qword [rsp + 0x50], r13
0x00003b37      4983c703       add r15, 3
0x00003b3b      31c0           xor eax, eax
0x00003b3d      448864247c     mov byte [rsp + 0x7c], r12b
0x00003b42      4531c0         xor r8d, r8d
0x00003b45      4989d5         mov r13, rdx
0x00003b48      bb27000000     mov ebx, 0x27                           ; '''
0x00003b4d      e917faffff     jmp 0x3569
0x00003b52      660f1f440000   nop word [rax + rax]
0x00003b58      f644247804     test byte [rsp + 0x78], 4
0x00003b5d      7421           je 0x3b80
0x00003b5f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00003b63      4c39d9         cmp rcx, r11
0x00003b66      7318           jae 0x3b80
0x00003b68      488b442410     mov rax, qword [rsp + 0x10]
0x00003b6d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00003b72      0f848a070000   je 0x4302
0x00003b78      0f1f84000000.  nop dword [rax + rax]
0x00003b80      31d2           xor edx, edx
0x00003b82      4531e4         xor r12d, r12d
0x00003b85      31c0           xor eax, eax
0x00003b87      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003b8c      e9a7f9ffff     jmp 0x3538
0x00003b91      0f1f80000000.  nop dword [rax]
0x00003b98      807c240f00     cmp byte [rsp + 0xf], 0
0x00003b9d      0f851d080000   jne 0x43c0
0x00003ba3      4531e4         xor r12d, r12d
0x00003ba6      31c0           xor eax, eax
0x00003ba8      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003bad      e9b7f9ffff     jmp 0x3569                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00003bb2      660f1f440000   nop word [rax + rax]
0x00003bb8      488d8424a000.  lea rax, [rsp + 0xa0]
0x00003bc0      4983fbff       cmp r11, 0xffffffffffffffff
0x00003bc4      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00003bd0      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00003bd5      752d           jne 0x3c04
0x00003bd7      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003bdc      4488442440     mov byte [rsp + 0x40], r8b
0x00003be1      4488542438     mov byte [rsp + 0x38], r10b
0x00003be6      4c894c2430     mov qword [rsp + 0x30], r9
0x00003beb      e850deffff     call sym.imp.strlen
0x00003bf0      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00003bf6      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x00003bfc      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x00003bff      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003c04      488d84249c00.  lea rax, [rsp + 0x9c]
0x00003c0c      31c9           xor ecx, ecx
0x00003c0e      885c247e       mov byte [rsp + 0x7e], bl
0x00003c12      448844247d     mov byte [rsp + 0x7d], r8b
0x00003c17      4889cb         mov rbx, rcx
0x00003c1a      4c898c248800.  mov qword [rsp + 0x88], r9
0x00003c22      4889442438     mov qword [rsp + 0x38], rax
0x00003c27      448854247f     mov byte [rsp + 0x7f], r10b
0x00003c2c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00003c34      4c89742440     mov qword [rsp + 0x40], r14
0x00003c39      4c896c2470     mov qword [rsp + 0x70], r13
0x00003c3e      4c895c2430     mov qword [rsp + 0x30], r11
0x00003c43      488b442410     mov rax, qword [rsp + 0x10]
0x00003c48      4c8d741d00     lea r14, [rbp + rbx]
0x00003c4d      488b542430     mov rdx, qword [rsp + 0x30]
0x00003c52      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00003c57      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00003c5c      4e8d2c30       lea r13, [rax + r14]
0x00003c60      4c29f2         sub rdx, r14
0x00003c63      4c89ee         mov rsi, r13
0x00003c66      e8c51b0000     call sym.rpl_mbrtowc
0x00003c6b      4885c0         test rax, rax
0x00003c6e      4989c7         mov r15, rax
0x00003c71      744e           je 0x3cc1
0x00003c73      4883f8ff       cmp rax, 0xffffffffffffffff
0x00003c77      0f8418060000   je 0x4295
0x00003c7d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00003c81      0f849a050000   je 0x4221
0x00003c87      837c240802     cmp dword [rsp + 8], 2
0x00003c8c      0f94c0         sete al
0x00003c8f      2244240f       and al, byte [rsp + 0xf]
0x00003c93      0f8597010000   jne 0x3e30
0x00003c99      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00003ca0      e85be0ffff     call sym.imp.iswprint
0x00003ca5      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00003caa      85c0           test eax, eax
0x00003cac      b800000000     mov eax, 0
0x00003cb1      440f44e0       cmove r12d, eax
0x00003cb5      4c01fb         add rbx, r15
0x00003cb8      e833e0ffff     call sym.imp.mbsinit
0x00003cbd      85c0           test eax, eax
0x00003cbf      7482           je 0x3c43
0x00003cc1      4489e2         mov edx, r12d
0x00003cc4      4889df         mov rdi, rbx
0x00003cc7      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003ccd      83f201         xor edx, 1
0x00003cd0      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003cd5      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00003cdb      2254240d       and dl, byte [rsp + 0xd]
0x00003cdf      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003ce7      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003cec      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003cf1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003cf6      4883ff01       cmp rdi, 1
0x00003cfa      0f86fb050000   jbe 0x42fb
0x00003d00      4889f9         mov rcx, rdi
0x00003d03      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00003d05      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x00003d0b      4801e9         add rcx, rbp
0x00003d0e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003d13      e9b6000000     jmp 0x3dce
0x00003d18      0f1f84000000.  nop dword [rax + rax]
0x00003d20      837c240802     cmp dword [rsp + 8], 2
0x00003d25      0f94c0         sete al
0x00003d28      4584c9         test r9b, r9b
0x00003d2b      0f85af040000   jne 0x41e0
0x00003d31      4489c6         mov esi, r8d
0x00003d34      83f601         xor esi, 1
0x00003d37      4020f0         and al, sil
0x00003d3a      742f           je 0x3d6b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x00003d3c      4d39fd         cmp r13, r15
0x00003d3f      7605           jbe 0x3d46
0x00003d41      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003d46      498d7701       lea rsi, [r15 + 1]
0x00003d4a      4939f5         cmp r13, rsi
0x00003d4d      7606           jbe 0x3d55                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x00003d4f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00003d55      498d7702       lea rsi, [r15 + 2]
0x00003d59      4939f5         cmp r13, rsi
0x00003d5c      7606           jbe 0x3d64
0x00003d5e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003d64      4983c703       add r15, 3
0x00003d68      4189c0         mov r8d, eax
0x00003d6b      4d39fd         cmp r13, r15
0x00003d6e      7605           jbe 0x3d75
0x00003d70      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003d75      498d4701       lea rax, [r15 + 1]
0x00003d79      4939c5         cmp r13, rax
0x00003d7c      760d           jbe 0x3d8b
0x00003d7e      89d8           mov eax, ebx
0x00003d80      c0e806         shr al, 6
0x00003d83      83c030         add eax, 0x30
0x00003d86      4388443e01     mov byte [r14 + r15 + 1], al
0x00003d8b      498d4702       lea rax, [r15 + 2]
0x00003d8f      4939c5         cmp r13, rax
0x00003d92      7610           jbe 0x3da4
0x00003d94      89d8           mov eax, ebx
0x00003d96      c0e803         shr al, 3
0x00003d99      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x00003d9c      83c030         add eax, 0x30
0x00003d9f      4388443e02     mov byte [r14 + r15 + 2], al
0x00003da4      83e307         and ebx, 7
0x00003da7      4883c501       add rbp, 1
0x00003dab      4983c703       add r15, 3
0x00003daf      83c330         add ebx, 0x30
0x00003db2      4839cd         cmp rbp, rcx
0x00003db5      0f83e5f7ffff   jae 0x35a0
0x00003dbb      89d6           mov esi, edx
0x00003dbd      4d39fd         cmp r13, r15
0x00003dc0      7604           jbe 0x3dc6
0x00003dc2      43881c3e       mov byte [r14 + r15], bl
0x00003dc6      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00003dca      4983c701       add r15, 1
0x00003dce      84d2           test dl, dl
0x00003dd0      0f854affffff   jne 0x3d20
0x00003dd6      89f0           mov eax, esi
0x00003dd8      83f001         xor eax, 1
0x00003ddb      4421c0         and eax, r8d
0x00003dde      4584d2         test r10b, r10b
0x00003de1      740e           je 0x3df1
0x00003de3      4d39fd         cmp r13, r15
0x00003de6      7605           jbe 0x3ded
0x00003de8      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003ded      4983c701       add r15, 1
0x00003df1      4883c501       add rbp, 1
0x00003df5      4839cd         cmp rbp, rcx
0x00003df8      0f837ef7ffff   jae 0x357c
0x00003dfe      84c0           test al, al
0x00003e00      0f84f8030000   je 0x41fe
0x00003e06      4d39fd         cmp r13, r15
0x00003e09      7605           jbe 0x3e10
0x00003e0b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003e10      498d4701       lea rax, [r15 + 1]
0x00003e14      4939c5         cmp r13, rax
0x00003e17      7606           jbe 0x3e1f
0x00003e19      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003e1f      4983c702       add r15, 2
0x00003e23      4531d2         xor r10d, r10d
0x00003e26      4531c0         xor r8d, r8d
0x00003e29      eb92           jmp 0x3dbd
0x00003e2b      0f1f440000     nop dword [rax + rax]
0x00003e30      4983ff01       cmp r15, 1
0x00003e34      0f845ffeffff   je 0x3c99
0x00003e3a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003e3f      4a8d0c3f       lea rcx, [rdi + r15]
0x00003e43      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00003e48      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00003e4c      eb0f           jmp 0x3e5d
0x00003e4e      6690           nop
0x00003e50      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00003e54      4939d0         cmp r8, rdx
0x00003e57      0f843cfeffff   je 0x3c99
0x00003e5d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00003e60      83e95b         sub ecx, 0x5b
0x00003e63      80f921         cmp cl, 0x21
0x00003e66      77e8           ja 0x3e50                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00003e68      be01000000     mov esi, 1
0x00003e6d      48d3e6         shl rsi, cl
0x00003e70      4889f1         mov rcx, rsi
0x00003e73      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x00003e7d      4885f1         test rcx, rsi
0x00003e80      74ce           je 0x3e50
0x00003e82      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003e87      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003e8c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00003e91      c74424080200.  mov dword [rsp + 8], 2
0x00003e99      807c240d00     cmp byte [rsp + 0xd], 0
0x00003e9e      7410           je 0x3eb0
0x00003ea0      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00003ea2      b804000000     mov eax, 4
0x00003ea7      0f44442408     cmove eax, dword [rsp + 8]
0x00003eac      89442408       mov dword [rsp + 8], eax
0x00003eb0      4883ec08       sub rsp, 8
0x00003eb4      4889e9         mov rcx, rbp
0x00003eb7      4c89ee         mov rsi, r13
0x00003eba      ff742468       push qword [rsp + 0x68]
0x00003ebe      ff742478       push qword [rsp + 0x78]
0x00003ec2      4c89f7         mov rdi, r14
0x00003ec5      6a00           push 0
0x00003ec7      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00003ecf      448b442428     mov r8d, dword [rsp + 0x28]
0x00003ed4      488b542430     mov rdx, qword [rsp + 0x30]
0x00003ed9      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x00003edd      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00003ee2      4883c420       add rsp, 0x20
0x00003ee6      4989c7         mov r15, rax
0x00003ee9      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00003ef1      6448331c2528.  xor rbx, qword fs:[0x28]
0x00003efa      4c89f8         mov rax, r15
0x00003efd      0f8500060000   jne 0x4503
0x00003f03      4881c4b80000.  add rsp, 0xb8
0x00003f0a      5b             pop rbx
0x00003f0b      5d             pop rbp
0x00003f0c      415c           pop r12
0x00003f0e      415d           pop r13
0x00003f10      415e           pop r14
0x00003f12      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00003f14      c3             ret
0x00003f15      0f1f00         nop dword [rax]
0x00003f18      4c89dd         mov rbp, r11
0x00003f1b      e979ffffff     jmp 0x3e99
0x00003f20      4d39fd         cmp r13, r15
0x00003f23      7605           jbe 0x3f2a
0x00003f25      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003f2a      498d4701       lea rax, [r15 + 1]
0x00003f2e      4939c5         cmp r13, rax
0x00003f31      7606           jbe 0x3f39
0x00003f33      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00003f39      498d4702       lea rax, [r15 + 2]
0x00003f3d      4939c5         cmp r13, rax
0x00003f40      0f86ec050000   jbe 0x4532
0x00003f46      4c89ea         mov rdx, r13
0x00003f49      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003f4f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003f54      e9d9fbffff     jmp 0x3b32
0x00003f59      4489e0         mov eax, r12d
0x00003f5c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00003f61      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00003f64      e900f6ffff     jmp 0x3569                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00003f69      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003f6f      e9c5f9ffff     jmp 0x3939
0x00003f74      85db           test ebx, ebx
0x00003f76      0f8527f4ffff   jne 0x33a3
0x00003f7c      c644240d01     mov byte [rsp + 0xd], 1
0x00003f81      4d85ed         test r13, r13
0x00003f84      0f8590050000   jne 0x451a
0x00003f8a      488d05bc2900.  lea rax, [0x0000694d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\uaa00\uffd7\u03ff\uffca\U010003d9\ue4ff\uffd7\ud4ff\uffd5\u30ff\uffd6\u85ff\uffd6\ucaff\uffd6\u04ff\uffd7\u04ff\uffd7\u04ff\uffd7"
0x00003f91      48c744245000.  mov qword [rsp + 0x50], 0
0x00003f9a      c644240e01     mov byte [rsp + 0xe], 1
0x00003f9f      c644247c00     mov byte [rsp + 0x7c], 0
0x00003fa4      4531e4         xor r12d, r12d
0x00003fa7      c644240f00     mov byte [rsp + 0xf], 0
0x00003fac      48c744241801.  mov qword [rsp + 0x18], 1
0x00003fb5      4889442448     mov qword [rsp + 0x48], rax
0x00003fba      41bf01000000   mov r15d, 1
0x00003fc0      c74424080200.  mov dword [rsp + 8], 2
0x00003fc8      e916f4ffff     jmp 0x33e3                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x00003fcd      0f1f00         nop dword [rax]
0x00003fd0      85db           test ebx, ebx
0x00003fd2      0f85f5030000   jne 0x43cd
0x00003fd8      4d85ed         test r13, r13
0x00003fdb      0f8425020000   je 0x4206
0x00003fe1      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00003fe5      c644240e01     mov byte [rsp + 0xe], 1
0x00003fea      4531e4         xor r12d, r12d
0x00003fed      c644247c00     mov byte [rsp + 0x7c], 0
0x00003ff2      48c744245000.  mov qword [rsp + 0x50], 0
0x00003ffb      488d05492900.  lea rax, str.l______l                   ; 0x694b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\uaa00\uffd7\u03ff\uffca\U010003d9\ue4ff\uffd7\ud4ff\uffd5\u30ff\uffd6\u85ff\uffd6\ucaff\uffd6\u04ff\uffd7\u04ff\uffd7\u04ff\uffd7\u54ff\uffcd\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u94ff\uffcd\u9cff\uffcc\u5cff\uffcc\u24ff\uffce\u14ff\uffce\u04ff\uffce\uf4ff\uffcd\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\ue4ff\uffcd\ud4ff\uffcd\ud4ff\uffcd\ua4ff\uffcd\ud4ff\uffcd\u7cff\uffcd\ud4ff\uffcd\u37ff\uffcc\ud4ff\uffcd\ud4ff\uffcd\ud4ff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\ud4ff\uffcd\ud4ff\uffcd\ud4ff\uffcd\ud4ff\uffcd\u07ff\uffcc\u3cff\uffce\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\ud4ff\uffcd\uacff\uffcc\u7cff\uffcd\ud4ff\uffcd\u7cff\uffcd\ud4ff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u37ff\uffcb\ud4ff\uffcd\u37ff\uffcb\ua4ff\uffcd\u28ff\uffcd\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u18ff\uffcd\u68ff\uffce\u50ff\uffce\xff\uffcd\u40ff\uffce\ue8ff\uffcc\u28ff\uffce\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u10ff\uffce\U010003cd\U010003cd\ue0ff\uffcd\U010003cd\uc8ff\uffcd\U010003cd\u38ff\uffca\U010003cd\U010003cd\U010003cd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\U010003cd\U010003cd\U010003cd\U010003cd\u08ff\uffca\u38ff\uffcc\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\U010003cd\uc8ff\uffcc\uc8ff\uffcd\U010003cd\uc8ff\uffcd\U010003cd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\u38ff\uffc9\U010003cd\u38ff\uffc9\ue0ff\uffcd\xff"
0x00004002      c644240f00     mov byte [rsp + 0xf], 0
0x00004007      c644240d01     mov byte [rsp + 0xd], 1
0x0000400c      48c744241801.  mov qword [rsp + 0x18], 1
0x00004015      41bf01000000   mov r15d, 1
0x0000401b      4889442448     mov qword [rsp + 0x48], rax
0x00004020      e9bef3ffff     jmp 0x33e3
0x00004025      488d051f2900.  lea rax, str.l______l                   ; 0x694b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\uaa00\uffd7\u03ff\uffca\U010003d9\ue4ff\uffd7\ud4ff\uffd5\u30ff\uffd6\u85ff\uffd6\ucaff\uffd6\u04ff\uffd7\u04ff\uffd7\u04ff\uffd7\u54ff\uffcd\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u94ff\uffcd\u9cff\uffcc\u5cff\uffcc\u24ff\uffce\u14ff\uffce\u04ff\uffce\uf4ff\uffcd\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\ue4ff\uffcd\ud4ff\uffcd\ud4ff\uffcd\ua4ff\uffcd\ud4ff\uffcd\u7cff\uffcd\ud4ff\uffcd\u37ff\uffcc\ud4ff\uffcd\ud4ff\uffcd\ud4ff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\ud4ff\uffcd\ud4ff\uffcd\ud4ff\uffcd\ud4ff\uffcd\u07ff\uffcc\u3cff\uffce\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\ud4ff\uffcd\uacff\uffcc\u7cff\uffcd\ud4ff\uffcd\u7cff\uffcd\ud4ff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u37ff\uffcb\ud4ff\uffcd\u37ff\uffcb\ua4ff\uffcd\u28ff\uffcd\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u18ff\uffcd\u68ff\uffce\u50ff\uffce\xff\uffcd\u40ff\uffce\ue8ff\uffcc\u28ff\uffce\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u10ff\uffce\U010003cd\U010003cd\ue0ff\uffcd\U010003cd\uc8ff\uffcd\U010003cd\u38ff\uffca\U010003cd\U010003cd\U010003cd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\U010003cd\U010003cd\U010003cd\U010003cd\u08ff\uffca\u38ff\uffcc\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\U010003cd\uc8ff\uffcc\uc8ff\uffcd\U010003cd\uc8ff\uffcd\U010003cd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\u38ff\uffc9\U010003cd\u38ff\uffc9\ue0ff\uffcd\xff"
0x0000402c      c644240e01     mov byte [rsp + 0xe], 1
0x00004031      c644247c00     mov byte [rsp + 0x7c], 0
0x00004036      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00004039      48c744245000.  mov qword [rsp + 0x50], 0
0x00004042      c644240f01     mov byte [rsp + 0xf], 1
0x00004047      c644240d01     mov byte [rsp + 0xd], 1
0x0000404c      48c744241801.  mov qword [rsp + 0x18], 1
0x00004055      4531ff         xor r15d, r15d
0x00004058      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x0000405d      c74424080500.  mov dword [rsp + 8], 5
0x00004065      e979f3ffff     jmp 0x33e3
0x0000406a      c644240e01     mov byte [rsp + 0xe], 1
0x0000406f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004074      4531e4         xor r12d, r12d
0x00004077      48c744245000.  mov qword [rsp + 0x50], 0
0x00004080      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00004085      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00004088      c644240d01     mov byte [rsp + 0xd], 1
0x0000408d      48c744241800.  mov qword [rsp + 0x18], 0
0x00004096      48c744244800.  mov qword [rsp + 0x48], 0
0x0000409f      e93ff3ffff     jmp 0x33e3
0x000040a4      837c24080a     cmp dword [rsp + 8], 0xa
0x000040a9      7456           je 0x4101
0x000040ab      488d359d2800.  lea rsi, [0x0000694f]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x000040b2      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x000040b4      ba05000000     mov edx, 5
0x000040b9      e862d9ffff     call sym.imp.dcgettext
0x000040be      4889c1         mov rcx, rax
0x000040c1      4889442468     mov qword [rsp + 0x68], rax
0x000040c6      488d05822800.  lea rax, [0x0000694f]                   ; "`"
0x000040cd      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x000040d0      0f8498030000   je 0x446e
0x000040d6      488d35702800.  lea rsi, [0x0000694d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\uaa00\uffd7\u03ff\uffca\U010003d9\ue4ff\uffd7\ud4ff\uffd5\u30ff\uffd6\u85ff\uffd6\ucaff\uffd6\u04ff\uffd7\u04ff\uffd7\u04ff\uffd7"
0x000040dd      31ff           xor edi, edi
0x000040df      ba05000000     mov edx, 5
0x000040e4      e837d9ffff     call sym.imp.dcgettext
0x000040e9      4889c1         mov rcx, rax
0x000040ec      4889442460     mov qword [rsp + 0x60], rax
0x000040f1      488d05552800.  lea rax, [0x0000694d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\uaa00\uffd7\u03ff\uffca\U010003d9\ue4ff\uffd7\ud4ff\uffd5\u30ff\uffd6\u85ff\uffd6\ucaff\uffd6\u04ff\uffd7\u04ff\uffd7\u04ff\uffd7"
0x000040f8      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x000040fb      0f8483030000   je 0x4484
0x00004101      4531ff         xor r15d, r15d
0x00004104      85db           test ebx, ebx
0x00004106      0f84c1010000   je 0x42cd
0x0000410c      85db           test ebx, ebx
0x0000410e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00004113      0f9544240f     setne byte [rsp + 0xf]
0x00004118      4531e4         xor r12d, r12d
0x0000411b      4889df         mov rdi, rbx
0x0000411e      e81dd9ffff     call sym.imp.strlen
0x00004123      48895c2448     mov qword [rsp + 0x48], rbx
0x00004128      4889442418     mov qword [rsp + 0x18], rax
0x0000412d      c644240e01     mov byte [rsp + 0xe], 1
0x00004132      c644247c00     mov byte [rsp + 0x7c], 0
0x00004137      48c744245000.  mov qword [rsp + 0x50], 0
0x00004140      c644240d01     mov byte [rsp + 0xd], 1
0x00004145      e999f2ffff     jmp 0x33e3
0x0000414a      c644240e01     mov byte [rsp + 0xe], 1
0x0000414f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004154      4531e4         xor r12d, r12d
0x00004157      48c744245000.  mov qword [rsp + 0x50], 0
0x00004160      c644240f00     mov byte [rsp + 0xf], 0
0x00004165      4531ff         xor r15d, r15d
0x00004168      c644240d00     mov byte [rsp + 0xd], 0
0x0000416d      48c744241800.  mov qword [rsp + 0x18], 0
0x00004176      48c744244800.  mov qword [rsp + 0x48], 0
0x0000417f      e95ff2ffff     jmp 0x33e3
0x00004184      c644240e01     mov byte [rsp + 0xe], 1
0x00004189      c644247c00     mov byte [rsp + 0x7c], 0
0x0000418e      4531e4         xor r12d, r12d
0x00004191      48c744245000.  mov qword [rsp + 0x50], 0
0x0000419a      c644240f01     mov byte [rsp + 0xf], 1
0x0000419f      c644240d01     mov byte [rsp + 0xd], 1
0x000041a4      e91af2ffff     jmp 0x33c3
0x000041a9      4d39fd         cmp r13, r15
0x000041ac      7605           jbe 0x41b3
0x000041ae      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x000041b3      488d4102       lea rax, [rcx + 2]
0x000041b7      4939c5         cmp r13, rax
0x000041ba      7606           jbe 0x41c2
0x000041bc      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x000041c2      4489e0         mov eax, r12d
0x000041c5      4c8d7903       lea r15, [rcx + 3]
0x000041c9      4531e4         xor r12d, r12d
0x000041cc      bb30000000     mov ebx, 0x30                           ; '0'
0x000041d1      e962f3ffff     jmp 0x3538
0x000041d6      662e0f1f8400.  nop word cs:[rax + rax]
0x000041e0      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000041e5      4c89dd         mov rbp, r11
0x000041e8      885c240d       mov byte [rsp + 0xd], bl
0x000041ec      e9a8fcffff     jmp 0x3e99
0x000041f1      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000041f6      4531e4         xor r12d, r12d
0x000041f9      e902fbffff     jmp 0x3d00
0x000041fe      4531d2         xor r10d, r10d
0x00004201      e9b7fbffff     jmp 0x3dbd
0x00004206      48c744245000.  mov qword [rsp + 0x50], 0
0x0000420f      c644240e01     mov byte [rsp + 0xe], 1
0x00004214      4531e4         xor r12d, r12d
0x00004217      c644247c00     mov byte [rsp + 0x7c], 0
0x0000421c      e9dafdffff     jmp 0x3ffb
0x00004221      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00004226      4c89f6         mov rsi, r14
0x00004229      4c89e9         mov rcx, r13
0x0000422c      4889d8         mov rax, rbx
0x0000422f      4889df         mov rdi, rbx
0x00004232      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00004238      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000423d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00004245      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00004248      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000424e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004256      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000425b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00004260      7326           jae 0x4288
0x00004262      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00004265      7510           jne 0x4277
0x00004267      eb1f           jmp 0x4288
0x00004269      0f1f80000000.  nop dword [rax]
0x00004270      41803c0100     cmp byte [r9 + rax], 0
0x00004275      740e           je 0x4285
0x00004277      4883c001       add rax, 1
0x0000427b      488d540500     lea rdx, [rbp + rax]
0x00004280      4939d3         cmp r11, rdx
0x00004283      77eb           ja 0x4270
0x00004285      4889c7         mov rdi, rax
0x00004288      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000428d      4531e4         xor r12d, r12d
0x00004290      e961faffff     jmp 0x3cf6
0x00004295      4889df         mov rdi, rbx
0x00004298      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000429e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000042a3      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000042a9      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000042b1      4531e4         xor r12d, r12d
0x000042b4      4c8b742440     mov r14, qword [rsp + 0x40]
0x000042b9      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000042be      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000042c3      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000042c8      e929faffff     jmp 0x3cf6
0x000042cd      488b542468     mov rdx, qword [rsp + 0x68]
0x000042d2      0fb602         movzx eax, byte [rdx]
0x000042d5      84c0           test al, al
0x000042d7      0f842ffeffff   je 0x410c
0x000042dd      0f1f00         nop dword [rax]
0x000042e0      4d39fd         cmp r13, r15
0x000042e3      7604           jbe 0x42e9
0x000042e5      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x000042e9      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x000042ed      420fb6043a     movzx eax, byte [rdx + r15]
0x000042f2      84c0           test al, al
0x000042f4      75ea           jne 0x42e0
0x000042f6      e911feffff     jmp 0x410c
0x000042fb      89d0           mov eax, edx
0x000042fd      e955f5ffff     jmp 0x3857
0x00004302      0fb61c08       movzx ebx, byte [rax + rcx]
0x00004306      80fb3e         cmp bl, 0x3e
0x00004309      0f8771f8ffff   ja 0x3b80
0x0000430f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00004319      480fa3d8       bt rax, rbx
0x0000431d      0f835df8ffff   jae 0x3b80
0x00004323      807c240f00     cmp byte [rsp + 0xf], 0
0x00004328      0f85e4010000   jne 0x4512                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x0000432e      4d39fd         cmp r13, r15
0x00004331      7605           jbe 0x4338
0x00004333      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00004338      498d4701       lea rax, [r15 + 1]
0x0000433c      4939c5         cmp r13, rax
0x0000433f      7606           jbe 0x4347
0x00004341      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00004347      498d4702       lea rax, [r15 + 2]
0x0000434b      4939c5         cmp r13, rax
0x0000434e      7606           jbe 0x4356
0x00004350      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00004356      498d4703       lea rax, [r15 + 3]
0x0000435a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x0000435d      7606           jbe 0x4365
0x0000435f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00004365      4983c704       add r15, 4
0x00004369      31d2           xor edx, edx
0x0000436b      4531e4         xor r12d, r12d
0x0000436e      31c0           xor eax, eax
0x00004370      4889cd         mov rbp, rcx
0x00004373      e9c0f1ffff     jmp 0x3538
0x00004378      85db           test ebx, ebx
0x0000437a      0f8488010000   je 0x4508
0x00004380      488d05c62500.  lea rax, [0x0000694d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\uaa00\uffd7\u03ff\uffca\U010003d9\ue4ff\uffd7\ud4ff\uffd5\u30ff\uffd6\u85ff\uffd6\ucaff\uffd6\u04ff\uffd7\u04ff\uffd7\u04ff\uffd7"
0x00004387      c644240e01     mov byte [rsp + 0xe], 1
0x0000438c      c644247c00     mov byte [rsp + 0x7c], 0
0x00004391      4531e4         xor r12d, r12d
0x00004394      48c744245000.  mov qword [rsp + 0x50], 0
0x0000439d      c644240f01     mov byte [rsp + 0xf], 1
0x000043a2      c644240d00     mov byte [rsp + 0xd], 0
0x000043a7      48c744241801.  mov qword [rsp + 0x18], 1
0x000043b0      4531ff         xor r15d, r15d
0x000043b3      4889442448     mov qword [rsp + 0x48], rax
0x000043b8      e926f0ffff     jmp 0x33e3
0x000043bd      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x000043c0      4c89dd         mov rbp, r11
0x000043c3      0fb644240f     movzx eax, byte [rsp + 0xf]
0x000043c8      e9ccfaffff     jmp 0x3e99
0x000043cd      488d05772500.  lea rax, str.l______l                   ; 0x694b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\uaa00\uffd7\u03ff\uffca\U010003d9\ue4ff\uffd7\ud4ff\uffd5\u30ff\uffd6\u85ff\uffd6\ucaff\uffd6\u04ff\uffd7\u04ff\uffd7\u04ff\uffd7\u54ff\uffcd\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u94ff\uffcd\u9cff\uffcc\u5cff\uffcc\u24ff\uffce\u14ff\uffce\u04ff\uffce\uf4ff\uffcd\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\u3cff\uffce\ue4ff\uffcd\ud4ff\uffcd\ud4ff\uffcd\ua4ff\uffcd\ud4ff\uffcd\u7cff\uffcd\ud4ff\uffcd\u37ff\uffcc\ud4ff\uffcd\ud4ff\uffcd\ud4ff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\ud4ff\uffcd\ud4ff\uffcd\ud4ff\uffcd\ud4ff\uffcd\u07ff\uffcc\u3cff\uffce\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\ud4ff\uffcd\uacff\uffcc\u7cff\uffcd\ud4ff\uffcd\u7cff\uffcd\ud4ff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u7cff\uffcd\u37ff\uffcb\ud4ff\uffcd\u37ff\uffcb\ua4ff\uffcd\u28ff\uffcd\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u18ff\uffcd\u68ff\uffce\u50ff\uffce\xff\uffcd\u40ff\uffce\ue8ff\uffcc\u28ff\uffce\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u38ff\uffcc\u10ff\uffce\U010003cd\U010003cd\ue0ff\uffcd\U010003cd\uc8ff\uffcd\U010003cd\u38ff\uffca\U010003cd\U010003cd\U010003cd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\U010003cd\U010003cd\U010003cd\U010003cd\u08ff\uffca\u38ff\uffcc\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\U010003cd\uc8ff\uffcc\uc8ff\uffcd\U010003cd\uc8ff\uffcd\U010003cd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\uc8ff\uffcd\u38ff\uffc9\U010003cd\u38ff\uffc9\ue0ff\uffcd\xff"
0x000043d4      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x000043d9      c644247c00     mov byte [rsp + 0x7c], 0
0x000043de      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x000043e1      48c744245000.  mov qword [rsp + 0x50], 0
0x000043ea      c644240f01     mov byte [rsp + 0xf], 1
0x000043ef      c644240d01     mov byte [rsp + 0xd], 1
0x000043f4      48c744241801.  mov qword [rsp + 0x18], 1
0x000043fd      4531ff         xor r15d, r15d
0x00004400      4889442448     mov qword [rsp + 0x48], rax
0x00004405      e9d9efffff     jmp 0x33e3
0x0000440a      89d0           mov eax, edx
0x0000440c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00004411      4885db         test rbx, rbx
0x00004414      742c           je 0x4442
0x00004416      84c0           test al, al
0x00004418      7428           je 0x4442
0x0000441a      0fb60b         movzx ecx, byte [rbx]
0x0000441d      4889d8         mov rax, rbx
0x00004420      84c9           test cl, cl
0x00004422      741e           je 0x4442
0x00004424      4c89fa         mov rdx, r15
0x00004427      4c29f8         sub rax, r15
0x0000442a      4939d5         cmp r13, rdx
0x0000442d      7604           jbe 0x4433
0x0000442f      41880c16       mov byte [r14 + rdx], cl
0x00004433      4883c201       add rdx, 1
0x00004437      0fb60c10       movzx ecx, byte [rax + rdx]
0x0000443b      84c9           test cl, cl
0x0000443d      75eb           jne 0x442a
0x0000443f      4989d7         mov r15, rdx
0x00004442      4d39fd         cmp r13, r15
0x00004445      0f869efaffff   jbe 0x3ee9
0x0000444b      43c6043e00     mov byte [r14 + r15], 0
0x00004450      e994faffff     jmp 0x3ee9
0x00004455      837c240802     cmp dword [rsp + 8], 2
0x0000445a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000445f      4c89dd         mov rbp, r11
0x00004462      0f94c0         sete al
0x00004465      885c240d       mov byte [rsp + 0xd], bl
0x00004469      e92bfaffff     jmp 0x3e99
0x0000446e      8b742408       mov esi, dword [rsp + 8]
0x00004472      4889cf         mov rdi, rcx
0x00004475      e8a6edffff     call sym.gettext_quote.part.1
0x0000447a      4889442468     mov qword [rsp + 0x68], rax
0x0000447f      e952fcffff     jmp 0x40d6
0x00004484      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00004488      4889cf         mov rdi, rcx
0x0000448b      e890edffff     call sym.gettext_quote.part.1
0x00004490      4889442460     mov qword [rsp + 0x60], rax
0x00004495      e967fcffff     jmp 0x4101
0x0000449a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000449f      4c89dd         mov rbp, r11
0x000044a2      89d0           mov eax, edx
0x000044a4      885c240d       mov byte [rsp + 0xd], bl
0x000044a8      e9ecf9ffff     jmp 0x3e99
0x000044ad      4883ec08       sub rsp, 8
0x000044b1      41b805000000   mov r8d, 5
0x000044b7      4c89d9         mov rcx, r11
0x000044ba      ff742468       push qword [rsp + 0x68]
0x000044be      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x000044c2      4c89f7         mov rdi, r14
0x000044c5      ff742438       push qword [rsp + 0x38]
0x000044c9      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x000044d1      488b542430     mov rdx, qword [rsp + 0x30]
0x000044d6      488b742470     mov rsi, qword [rsp + 0x70]
0x000044db      e830eeffff     call sym.quotearg_buffer_restyled
0x000044e0      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x000044e4      4989c7         mov r15, rax
0x000044e7      e9fdf9ffff     jmp 0x3ee9
0x000044ec      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x000044f1      e916ffffff     jmp 0x440c
0x000044f6      c74424080200.  mov dword [rsp + 8], 2
0x000044fe      e996f9ffff     jmp 0x3e99
0x00004503      e848d5ffff     call sym.imp.__stack_chk_fail
0x00004508      c644240d00     mov byte [rsp + 0xd], 0
0x0000450d      e96ffaffff     jmp 0x3f81
0x00004512      4c89dd         mov rbp, r11
0x00004515      e996f9ffff     jmp 0x3eb0
0x0000451a      c644240e01     mov byte [rsp + 0xe], 1
0x0000451f      31c0           xor eax, eax
0x00004521      4531e4         xor r12d, r12d
0x00004524      48c744245000.  mov qword [rsp + 0x50], 0
0x0000452d      e9a2f5ffff     jmp 0x3ad4
0x00004532      4c89ea         mov rdx, r13
0x00004535      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000453a      e9f3f5ffff     jmp 0x3b32
0x0000453f      e81cd4ffff     call sym.imp.abort
0x00004544      6690           nop
0x00004546      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00004550      4157           push r15
0x00004552      4156           push r14
0x00004554      4c63ff         movsxd r15, edi
0x00004557      4155           push r13
0x00004559      4154           push r12
0x0000455b      4989d6         mov r14, rdx
0x0000455e      55             push rbp
0x0000455f      53             push rbx
0x00004560      4889cd         mov rbp, rcx
0x00004563      4883ec28       sub rsp, 0x28
0x00004567      4889742408     mov qword [rsp + 8], rsi
0x0000456c      e8ffd3ffff     call sym.imp.__errno_location
0x00004571      4989c5         mov r13, rax
0x00004574      8b00           mov eax, dword [rax]
0x00004576      4585ff         test r15d, r15d
0x00004579      488b1d004b20.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x209080:8]=0x209090 obj.slotvec0
0x00004580      89442418       mov dword [rsp + 0x18], eax
0x00004584      0f8867010000   js 0x46f1
0x0000458a      44393de74a20.  cmp dword [obj.nslots], r15d            ; [0x209078:4]=1
0x00004591      7f62           jg 0x45f5
0x00004593      4181ffffffff.  cmp r15d, 0x7fffffff
0x0000459a      0f8456010000   je 0x46f6
0x000045a0      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x000045a4      488d05e54a20.  lea rax, obj.slotvec0                   ; 0x209090
0x000045ab      4963f4         movsxd rsi, r12d
0x000045ae      48c1e604       shl rsi, 4
0x000045b2      4839c3         cmp rbx, rax
0x000045b5      0f8415010000   je 0x46d0
0x000045bb      4889df         mov rdi, rbx
0x000045be      e86d0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x000045c3      4889c3         mov rbx, rax
0x000045c6      488905b34a20.  mov qword [obj.slotvec], rax            ; [0x209080:8]=0x209090 obj.slotvec0
0x000045cd      48633da44a20.  movsxd rdi, dword [obj.nslots]          ; [0x209078:4]=1
0x000045d4      4489e2         mov edx, r12d
0x000045d7      31f6           xor esi, esi
0x000045d9      29fa           sub edx, edi
0x000045db      48c1e704       shl rdi, 4
0x000045df      4863d2         movsxd rdx, edx
0x000045e2      4801df         add rdi, rbx
0x000045e5      48c1e204       shl rdx, 4
0x000045e9      e8d2d4ffff     call sym.imp.memset
0x000045ee      448925834a20.  mov dword [obj.nslots], r12d            ; [0x209078:4]=1
0x000045f5      8b4504         mov eax, dword [rbp + 4]
0x000045f8      49c1e704       shl r15, 4
0x000045fc      4883ec08       sub rsp, 8
0x00004600      4c01fb         add rbx, r15
0x00004603      4c8d7d08       lea r15, [rbp + 8]
0x00004607      448b4500       mov r8d, dword [rbp]
0x0000460b      4c8b1b         mov r11, qword [rbx]
0x0000460e      4c8b6308       mov r12, qword [rbx + 8]
0x00004612      4c89f1         mov rcx, r14
0x00004615      83c801         or eax, 1
0x00004618      89442424       mov dword [rsp + 0x24], eax
0x0000461c      ff7530         push qword [rbp + 0x30]
0x0000461f      4189c1         mov r9d, eax
0x00004622      ff7528         push qword [rbp + 0x28]
0x00004625      4157           push r15
0x00004627      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x0000462a      488b542428     mov rdx, qword [rsp + 0x28]
0x0000462f      4c89e7         mov rdi, r12
0x00004632      4c895c2430     mov qword [rsp + 0x30], r11
0x00004637      e8d4ecffff     call sym.quotearg_buffer_restyled
0x0000463c      4883c420       add rsp, 0x20
0x00004640      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00004645      4939c3         cmp r11, rax
0x00004648      7767           ja 0x46b1
0x0000464a      488d7001       lea rsi, [rax + 1]
0x0000464e      488d05ab4c20.  lea rax, obj.slot0                      ; 0x209300
0x00004655      4939c4         cmp r12, rax
0x00004658      488933         mov qword [rbx], rsi
0x0000465b      7412           je 0x466f
0x0000465d      4c89e7         mov rdi, r12
0x00004660      4889742410     mov qword [rsp + 0x10], rsi
0x00004665      e8e6d2ffff     call sym.imp.free
0x0000466a      488b742410     mov rsi, qword [rsp + 0x10]
0x0000466f      4889f7         mov rdi, rsi
0x00004672      4889742410     mov qword [rsp + 0x10], rsi
0x00004677      e8540e0000     call sym.xmalloc
0x0000467c      4883ec08       sub rsp, 8
0x00004680      48894308       mov qword [rbx + 8], rax
0x00004684      448b4500       mov r8d, dword [rbp]
0x00004688      ff7530         push qword [rbp + 0x30]
0x0000468b      ff7528         push qword [rbp + 0x28]
0x0000468e      4c89f1         mov rcx, r14
0x00004691      4157           push r15
0x00004693      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00004698      4889c7         mov rdi, rax
0x0000469b      488b542428     mov rdx, qword [rsp + 0x28]
0x000046a0      488b742430     mov rsi, qword [rsp + 0x30]
0x000046a5      4989c4         mov r12, rax
0x000046a8      e863ecffff     call sym.quotearg_buffer_restyled
0x000046ad      4883c420       add rsp, 0x20
0x000046b1      8b442418       mov eax, dword [rsp + 0x18]
0x000046b5      41894500       mov dword [r13], eax
0x000046b9      4883c428       add rsp, 0x28
0x000046bd      4c89e0         mov rax, r12
0x000046c0      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x000046c1      5d             pop rbp
0x000046c2      415c           pop r12
0x000046c4      415d           pop r13
0x000046c6      415e           pop r14
0x000046c8      415f           pop r15
0x000046ca      c3             ret
0x000046cb      0f1f440000     nop dword [rax + rax]
0x000046d0      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x000046d2      e8590e0000     call sym.xrealloc
0x000046d7      660f6f05b149.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x000046df      4889c3         mov rbx, rax
0x000046e2      488905974920.  mov qword [obj.slotvec], rax            ; [0x209080:8]=0x209090 obj.slotvec0
0x000046e9      0f1100         movups xmmword [rax], xmm0
0x000046ec      e9dcfeffff     jmp 0x45cd
0x000046f1      e86ad2ffff     call sym.imp.abort
0x000046f6      e825100000     call sym.xalloc_die
0x000046fb      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00004700      4154           push r12
0x00004702      55             push rbp
0x00004703      53             push rbx
0x00004704      4889fb         mov rbx, rdi
0x00004707      e864d2ffff     call sym.imp.__errno_location
0x0000470c      448b20         mov r12d, dword [rax]
0x0000470f      4889c5         mov rbp, rax
0x00004712      488d05e74c20.  lea rax, obj.default_quoting_options    ; 0x209400
0x00004719      4885db         test rbx, rbx
0x0000471c      be38000000     mov esi, 0x38                           ; '8'
0x00004721      480f44d8       cmove rbx, rax
0x00004725      4889df         mov rdi, rbx
0x00004728      e8a30f0000     call sym.xmemdup
0x0000472d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004731      5b             pop rbx
0x00004732      5d             pop rbp
0x00004733      415c           pop r12
0x00004735      c3             ret
0x00004736      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00004740      488d05b94c20.  lea rax, obj.default_quoting_options    ; 0x209400
0x00004747      4885ff         test rdi, rdi
0x0000474a      480f44f8       cmove rdi, rax
0x0000474e      8b07           mov eax, dword [rdi]
0x00004750      c3             ret
0x00004751      0f1f440000     nop dword [rax + rax]
0x00004756      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00004760      488d05994c20.  lea rax, obj.default_quoting_options    ; 0x209400
0x00004767      4885ff         test rdi, rdi
0x0000476a      480f44f8       cmove rdi, rax
0x0000476e      8937           mov dword [rdi], esi
0x00004770      c3             ret
0x00004771      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00004776      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00004780      488d05794c20.  lea rax, obj.default_quoting_options    ; 0x209400
0x00004787      4885ff         test rdi, rdi
0x0000478a      89f1           mov ecx, esi
0x0000478c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00004790      89f0           mov eax, esi
0x00004792      83e11f         and ecx, 0x1f
0x00004795      c0e805         shr al, 5
0x00004798      0fb6c0         movzx eax, al
0x0000479b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x000047a0      8b37           mov esi, dword [rdi]
0x000047a2      89f0           mov eax, esi
0x000047a4      d3e8           shr eax, cl
0x000047a6      31c2           xor edx, eax
0x000047a8      83e001         and eax, 1
0x000047ab      83e201         and edx, 1
0x000047ae      d3e2           shl edx, cl
0x000047b0      31f2           xor edx, esi
0x000047b2      8917           mov dword [rdi], edx
0x000047b4      c3             ret
0x000047b5      90             nop
0x000047b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x000047c0      488d05394c20.  lea rax, obj.default_quoting_options    ; 0x209400
0x000047c7      4885ff         test rdi, rdi
0x000047ca      480f44f8       cmove rdi, rax
0x000047ce      8b4704         mov eax, dword [rdi + 4]
0x000047d1      897704         mov dword [rdi + 4], esi
0x000047d4      c3             ret
0x000047d5      90             nop
0x000047d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x000047e0      488d05194c20.  lea rax, obj.default_quoting_options    ; 0x209400
0x000047e7      4885ff         test rdi, rdi
0x000047ea      480f44f8       cmove rdi, rax
0x000047ee      4885f6         test rsi, rsi
0x000047f1      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x000047f7      740e           je 0x4807
0x000047f9      4885d2         test rdx, rdx
0x000047fc      7409           je 0x4807
0x000047fe      48897728       mov qword [rdi + 0x28], rsi
0x00004802      48895730       mov qword [rdi + 0x30], rdx
0x00004806      c3             ret
0x00004807      4883ec08       sub rsp, 8
0x0000480b      e850d1ffff     call sym.imp.abort
;-- quotearg_buffer:
0x00004810      4157           push r15
0x00004812      4156           push r14
0x00004814      488d05e54b20.  lea rax, obj.default_quoting_options    ; 0x209400
0x0000481b      4155           push r13
0x0000481d      4154           push r12
0x0000481f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00004822      55             push rbp
0x00004823      53             push rbx
0x00004824      4c89c3         mov rbx, r8
0x00004827      4989f6         mov r14, rsi
0x0000482a      4989d7         mov r15, rdx
0x0000482d      4883ec18       sub rsp, 0x18
0x00004831      4d85c0         test r8, r8
0x00004834      480f44d8       cmove rbx, rax
0x00004838      48894c2408     mov qword [rsp + 8], rcx
0x0000483d      e82ed1ffff     call sym.imp.__errno_location
0x00004842      448b20         mov r12d, dword [rax]
0x00004845      4889c5         mov rbp, rax
0x00004848      488d4308       lea rax, [rbx + 8]
0x0000484c      4883ec08       sub rsp, 8
0x00004850      448b4b04       mov r9d, dword [rbx + 4]
0x00004854      ff7330         push qword [rbx + 0x30]
0x00004857      448b03         mov r8d, dword [rbx]
0x0000485a      ff7328         push qword [rbx + 0x28]
0x0000485d      4c89fa         mov rdx, r15
0x00004860      50             push rax
0x00004861      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00004866      4c89f6         mov rsi, r14
0x00004869      4c89ef         mov rdi, r13
0x0000486c      e89feaffff     call sym.quotearg_buffer_restyled
0x00004871      44896500       mov dword [rbp], r12d
0x00004875      4883c438       add rsp, 0x38
0x00004879      5b             pop rbx
0x0000487a      5d             pop rbp
0x0000487b      415c           pop r12
0x0000487d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000487f      415e           pop r14
0x00004881      415f           pop r15
0x00004883      c3             ret
0x00004884      6690           nop
0x00004886      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00004890      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00004892      4156           push r14
0x00004894      488d05654b20.  lea rax, obj.default_quoting_options    ; 0x209400
0x0000489b      4155           push r13
0x0000489d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x0000489f      4989d4         mov r12, rdx
0x000048a2      55             push rbp
0x000048a3      53             push rbx
0x000048a4      4889cb         mov rbx, rcx
0x000048a7      4989fe         mov r14, rdi
0x000048aa      4989f7         mov r15, rsi
0x000048ad      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x000048b1      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x000048b4      480f44d8       cmove rbx, rax
0x000048b8      31ed           xor ebp, ebp
0x000048ba      e8b1d0ffff     call sym.imp.__errno_location
0x000048bf      4d85e4         test r12, r12
0x000048c2      4989c5         mov r13, rax
0x000048c5      8b00           mov eax, dword [rax]
0x000048c7      400f94c5       sete bpl
0x000048cb      0b6b04         or ebp, dword [rbx + 4]
0x000048ce      4c8d5308       lea r10, [rbx + 8]
0x000048d2      4883ec08       sub rsp, 8
0x000048d6      448b03         mov r8d, dword [rbx]
0x000048d9      4c89f9         mov rcx, r15
0x000048dc      89442414       mov dword [rsp + 0x14], eax
0x000048e0      ff7330         push qword [rbx + 0x30]
0x000048e3      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x000048e6      ff7328         push qword [rbx + 0x28]
0x000048e9      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x000048eb      31f6           xor esi, esi
0x000048ed      4189e9         mov r9d, ebp
0x000048f0      31ff           xor edi, edi
0x000048f2      4c89542440     mov qword [rsp + 0x40], r10
0x000048f7      e814eaffff     call sym.quotearg_buffer_restyled
0x000048fc      488d7001       lea rsi, [rax + 1]
0x00004900      4889442448     mov qword [rsp + 0x48], rax
0x00004905      4883c420       add rsp, 0x20
0x00004909      4889f7         mov rdi, rsi
0x0000490c      4889742418     mov qword [rsp + 0x18], rsi
0x00004911      e8ba0b0000     call sym.xmalloc
0x00004916      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x0000491b      4883ec08       sub rsp, 8
0x0000491f      ff7330         push qword [rbx + 0x30]
0x00004922      ff7328         push qword [rbx + 0x28]
0x00004925      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000492a      4189e9         mov r9d, ebp
0x0000492d      448b03         mov r8d, dword [rbx]
0x00004930      4c89f9         mov rcx, r15
0x00004933      4c89f2         mov rdx, r14
0x00004936      4889c7         mov rdi, rax
0x00004939      4152           push r10
0x0000493b      488b742438     mov rsi, qword [rsp + 0x38]
0x00004940      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00004945      8b44242c       mov eax, dword [rsp + 0x2c]
0x00004949      4883c420       add rsp, 0x20
0x0000494d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00004950      41894500       mov dword [r13], eax
0x00004954      7409           je 0x495f
0x00004956      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000495b      4d891c24       mov qword [r12], r11
0x0000495f      488b442410     mov rax, qword [rsp + 0x10]
0x00004964      4883c438       add rsp, 0x38
0x00004968      5b             pop rbx
0x00004969      5d             pop rbp
0x0000496a      415c           pop r12
0x0000496c      415d           pop r13
0x0000496e      415e           pop r14
0x00004970      415f           pop r15
0x00004972      c3             ret
0x00004973      0f1f00         nop dword [rax]
0x00004976      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00004980      4889d1         mov rcx, rdx
0x00004983      31d2           xor edx, edx
0x00004985      e906ffffff     jmp sym.quotearg_alloc_mem
0x0000498a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00004990      8b05e2462000   mov eax, dword [obj.nslots]             ; [0x209078:4]=1
0x00004996      4154           push r12
0x00004998      4c8b25e14620.  mov r12, qword [obj.slotvec]            ; [0x209080:8]=0x209090 obj.slotvec0
0x0000499f      55             push rbp
0x000049a0      53             push rbx
0x000049a1      83f801         cmp eax, 1
0x000049a4      7e2b           jle 0x49d1                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x000049a6      83e802         sub eax, 2
0x000049a9      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x000049ae      48c1e004       shl rax, 4
0x000049b2      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x000049b7      660f1f840000.  nop word [rax + rax]
0x000049c0      488b3b         mov rdi, qword [rbx]
0x000049c3      4883c310       add rbx, 0x10
0x000049c7      e884cfffff     call sym.imp.free
0x000049cc      4839eb         cmp rbx, rbp
0x000049cf      75ef           jne 0x49c0
0x000049d1      498b7c2408     mov rdi, qword [r12 + 8]
0x000049d6      488d1d234920.  lea rbx, obj.slot0                      ; 0x209300
0x000049dd      4839df         cmp rdi, rbx
0x000049e0      7417           je 0x49f9
0x000049e2      e869cfffff     call sym.imp.free
0x000049e7      48c7059e4620.  mov qword [obj.slotvec0], 0x100         ; [0x209090:8]=256
0x000049f2      48891d9f4620.  mov qword [0x00209098], rbx             ; [0x209098:8]=0x209300 obj.slot0
0x000049f9      488d1d904620.  lea rbx, obj.slotvec0                   ; 0x209090
0x00004a00      4939dc         cmp r12, rbx
0x00004a03      740f           je 0x4a14
0x00004a05      4c89e7         mov rdi, r12
0x00004a08      e843cfffff     call sym.imp.free
0x00004a0d      48891d6c4620.  mov qword [obj.slotvec], rbx            ; [0x209080:8]=0x209090 obj.slotvec0
0x00004a14      5b             pop rbx
0x00004a15      c70559462000.  mov dword [obj.nslots], 1               ; [0x209078:4]=1
0x00004a1f      5d             pop rbp
0x00004a20      415c           pop r12
0x00004a22      c3             ret
0x00004a23      0f1f00         nop dword [rax]
0x00004a26      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00004a30      488d0dc94920.  lea rcx, obj.default_quoting_options    ; 0x209400
0x00004a37      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004a3e      e90dfbffff     jmp sym.quotearg_n_options
0x00004a43      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00004a46      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00004a50      488d0da94920.  lea rcx, obj.default_quoting_options    ; 0x209400
0x00004a57      e9f4faffff     jmp sym.quotearg_n_options
0x00004a5c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00004a60      488d0d994920.  lea rcx, obj.default_quoting_options    ; 0x209400
0x00004a67      4889fe         mov rsi, rdi
0x00004a6a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004a71      31ff           xor edi, edi
0x00004a73      e9d8faffff     jmp sym.quotearg_n_options
0x00004a78      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00004a80      488d0d794920.  lea rcx, obj.default_quoting_options    ; 0x209400
0x00004a87      4889f2         mov rdx, rsi
0x00004a8a      4889fe         mov rsi, rdi
0x00004a8d      31ff           xor edi, edi
0x00004a8f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00004a94      6690           nop
0x00004a96      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00004aa0      4883ec48       sub rsp, 0x48
0x00004aa4      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00004aa7      64488b142528.  mov rdx, qword fs:[0x28]
0x00004ab0      4889542438     mov qword [rsp + 0x38], rdx
0x00004ab5      31d2           xor edx, edx
0x00004ab7      83fe0a         cmp esi, 0xa
0x00004aba      7468           je 0x4b24
0x00004abc      893424         mov dword [rsp], esi
0x00004abf      4889e1         mov rcx, rsp
0x00004ac2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004ac9      4889c6         mov rsi, rax
0x00004acc      48c744240400.  mov qword [rsp + 4], 0
0x00004ad5      48c744240c00.  mov qword [rsp + 0xc], 0
0x00004ade      48c744241400.  mov qword [rsp + 0x14], 0
0x00004ae7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004af0      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00004af9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004b02      c74424340000.  mov dword [rsp + 0x34], 0
0x00004b0a      e841faffff     call sym.quotearg_n_options
0x00004b0f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004b14      6448330c2528.  xor rcx, qword fs:[0x28]
0x00004b1d      750a           jne 0x4b29                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x00004b1f      4883c448       add rsp, 0x48
0x00004b23      c3             ret
0x00004b24      e837ceffff     call sym.imp.abort
0x00004b29      e822cfffff     call sym.imp.__stack_chk_fail
0x00004b2e      6690           nop
;-- quotearg_n_style_mem:
0x00004b30      4883ec48       sub rsp, 0x48
0x00004b34      4889d0         mov rax, rdx
0x00004b37      4889ca         mov rdx, rcx
0x00004b3a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00004b43      48894c2438     mov qword [rsp + 0x38], rcx
0x00004b48      31c9           xor ecx, ecx
0x00004b4a      83fe0a         cmp esi, 0xa
0x00004b4d      7461           je 0x4bb0
0x00004b4f      893424         mov dword [rsp], esi
0x00004b52      4889e1         mov rcx, rsp
0x00004b55      4889c6         mov rsi, rax
0x00004b58      48c744240400.  mov qword [rsp + 4], 0
0x00004b61      48c744240c00.  mov qword [rsp + 0xc], 0
0x00004b6a      48c744241400.  mov qword [rsp + 0x14], 0
0x00004b73      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004b7c      48c744242400.  mov qword [rsp + 0x24], 0
0x00004b85      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004b8e      c74424340000.  mov dword [rsp + 0x34], 0
0x00004b96      e8b5f9ffff     call sym.quotearg_n_options
0x00004b9b      488b542438     mov rdx, qword [rsp + 0x38]
0x00004ba0      644833142528.  xor rdx, qword fs:[0x28]
0x00004ba9      750a           jne 0x4bb5
0x00004bab      4883c448       add rsp, 0x48
0x00004baf      c3             ret
0x00004bb0      e8abcdffff     call sym.imp.abort
0x00004bb5      e896ceffff     call sym.imp.__stack_chk_fail
0x00004bba      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00004bc0      4889f2         mov rdx, rsi
0x00004bc3      89fe           mov esi, edi
0x00004bc5      31ff           xor edi, edi
0x00004bc7      e9d4feffff     jmp sym.quotearg_n_style
0x00004bcc      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00004bd0      4889d1         mov rcx, rdx
0x00004bd3      4889f2         mov rdx, rsi
0x00004bd6      89fe           mov esi, edi
0x00004bd8      31ff           xor edi, edi
0x00004bda      e951ffffff     jmp sym.quotearg_n_style_mem
0x00004bdf      90             nop
;-- quotearg_char_mem:
0x00004be0      4883ec48       sub rsp, 0x48
0x00004be4      89d1           mov ecx, edx
0x00004be6      64488b042528.  mov rax, qword fs:[0x28]
0x00004bef      4889442438     mov qword [rsp + 0x38], rax
0x00004bf4      31c0           xor eax, eax
0x00004bf6      488b05334820.  mov rax, qword [0x00209430]             ; [0x209430:8]=0
0x00004bfd      4989e0         mov r8, rsp
0x00004c00      83e11f         and ecx, 0x1f
0x00004c03      660f6f05f547.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00004c0b      4889442430     mov qword [rsp + 0x30], rax
0x00004c10      89d0           mov eax, edx
0x00004c12      0f290424       movaps xmmword [rsp], xmm0
0x00004c16      c0e805         shr al, 5
0x00004c19      0fb6c0         movzx eax, al
0x00004c1c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00004c21      660f6f05e747.  movdqa xmm0, xmmword [0x00209410]
0x00004c29      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00004c2e      660f6f05ea47.  movdqa xmm0, xmmword [0x00209420]
0x00004c36      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00004c3b      418b11         mov edx, dword [r9]
0x00004c3e      89d0           mov eax, edx
0x00004c40      d3e8           shr eax, cl
0x00004c42      f7d0           not eax
0x00004c44      83e001         and eax, 1
0x00004c47      d3e0           shl eax, cl
0x00004c49      4c89c1         mov rcx, r8
0x00004c4c      31d0           xor eax, edx
0x00004c4e      4889f2         mov rdx, rsi
0x00004c51      4889fe         mov rsi, rdi
0x00004c54      418901         mov dword [r9], eax
0x00004c57      31ff           xor edi, edi
0x00004c59      e8f2f8ffff     call sym.quotearg_n_options
0x00004c5e      488b742438     mov rsi, qword [rsp + 0x38]
0x00004c63      644833342528.  xor rsi, qword fs:[0x28]
0x00004c6c      7505           jne 0x4c73
0x00004c6e      4883c448       add rsp, 0x48
0x00004c72      c3             ret
0x00004c73      e8d8cdffff     call sym.imp.__stack_chk_fail
0x00004c78      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00004c80      400fbed6       movsx edx, sil
0x00004c84      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00004c8b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00004c90      ba3a000000     mov edx, 0x3a                           ; ':'
0x00004c95      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00004c9c      e93fffffff     jmp sym.quotearg_char_mem
0x00004ca1      0f1f440000     nop dword [rax + rax]
0x00004ca6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00004cb0      ba3a000000     mov edx, 0x3a                           ; ':'
0x00004cb5      e926ffffff     jmp sym.quotearg_char_mem
0x00004cba      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00004cc0      4883ec48       sub rsp, 0x48
0x00004cc4      4889d0         mov rax, rdx
0x00004cc7      64488b142528.  mov rdx, qword fs:[0x28]
0x00004cd0      4889542438     mov qword [rsp + 0x38], rdx
0x00004cd5      31d2           xor edx, edx
0x00004cd7      83fe0a         cmp esi, 0xa
0x00004cda      7468           je 0x4d44
0x00004cdc      893424         mov dword [rsp], esi
0x00004cdf      4889e1         mov rcx, rsp
0x00004ce2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004ce9      4889c6         mov rsi, rax
0x00004cec      48c744240400.  mov qword [rsp + 4], 0
0x00004cf5      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x00004cfe      48c744241400.  mov qword [rsp + 0x14], 0
0x00004d07      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004d10      48c744242400.  mov qword [rsp + 0x24], 0
0x00004d19      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004d22      c74424340000.  mov dword [rsp + 0x34], 0
0x00004d2a      e821f8ffff     call sym.quotearg_n_options
0x00004d2f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004d34      6448330c2528.  xor rcx, qword fs:[0x28]
0x00004d3d      750a           jne 0x4d49
0x00004d3f      4883c448       add rsp, 0x48
0x00004d43      c3             ret
0x00004d44      e817ccffff     call sym.imp.abort
0x00004d49      e802cdffff     call sym.imp.__stack_chk_fail
0x00004d4e      6690           nop
;-- quotearg_n_custom_mem:
0x00004d50      4883ec48       sub rsp, 0x48
0x00004d54      4989c9         mov r9, rcx
0x00004d57      488b0dd24620.  mov rcx, qword [0x00209430]             ; [0x209430:8]=0
0x00004d5e      660f6f059a46.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00004d66      64488b042528.  mov rax, qword fs:[0x28]
0x00004d6f      4889442438     mov qword [rsp + 0x38], rax
0x00004d74      31c0           xor eax, eax
0x00004d76      0f290424       movaps xmmword [rsp], xmm0
0x00004d7a      4885f6         test rsi, rsi
0x00004d7d      48894c2430     mov qword [rsp + 0x30], rcx
0x00004d82      c704240a0000.  mov dword [rsp], 0xa
0x00004d89      660f6f057f46.  movdqa xmm0, xmmword [0x00209410]
0x00004d91      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00004d96      660f6f058246.  movdqa xmm0, xmmword [0x00209420]
0x00004d9e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00004da3      7432           je 0x4dd7
0x00004da5      4885d2         test rdx, rdx
0x00004da8      742d           je 0x4dd7
0x00004daa      4889742428     mov qword [rsp + 0x28], rsi
0x00004daf      4889542430     mov qword [rsp + 0x30], rdx
0x00004db4      4889e1         mov rcx, rsp
0x00004db7      4c89c2         mov rdx, r8
0x00004dba      4c89ce         mov rsi, r9
0x00004dbd      e88ef7ffff     call sym.quotearg_n_options
0x00004dc2      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00004dc7      6448333c2528.  xor rdi, qword fs:[0x28]
0x00004dd0      750a           jne 0x4ddc
0x00004dd2      4883c448       add rsp, 0x48
0x00004dd6      c3             ret
0x00004dd7      e884cbffff     call sym.imp.abort
0x00004ddc      e86fccffff     call sym.imp.__stack_chk_fail
0x00004de1      0f1f440000     nop dword [rax + rax]
0x00004de6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00004df0      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00004df7      e954ffffff     jmp sym.quotearg_n_custom_mem
0x00004dfc      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00004e00      4889d1         mov rcx, rdx
0x00004e03      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00004e0a      4889f2         mov rdx, rsi
0x00004e0d      4889fe         mov rsi, rdi
0x00004e10      31ff           xor edi, edi
0x00004e12      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00004e17      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00004e20      4989c8         mov r8, rcx
0x00004e23      4889d1         mov rcx, rdx
0x00004e26      4889f2         mov rdx, rsi
0x00004e29      4889fe         mov rsi, rdi
0x00004e2c      31ff           xor edi, edi
0x00004e2e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00004e33      0f1f00         nop dword [rax]
0x00004e36      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00004e40      488d0df94120.  lea rcx, obj.quote_quoting_options      ; 0x209040
0x00004e47      e904f7ffff     jmp sym.quotearg_n_options
0x00004e4c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00004e50      488d0de94120.  lea rcx, obj.quote_quoting_options      ; 0x209040
0x00004e57      4889f2         mov rdx, rsi
0x00004e5a      4889fe         mov rsi, rdi
0x00004e5d      31ff           xor edi, edi
0x00004e5f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00004e64      6690           nop
0x00004e66      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00004e70      488d0dc94120.  lea rcx, obj.quote_quoting_options      ; 0x209040
0x00004e77      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004e7e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00004e83      0f1f00         nop dword [rax]
0x00004e86      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00004e90      488d0da94120.  lea rcx, obj.quote_quoting_options      ; 0x209040
0x00004e97      4889fe         mov rsi, rdi
0x00004e9a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004ea1      31ff           xor edi, edi
0x00004ea3      e9a8f6ffff     jmp sym.quotearg_n_options
0x00004ea8      0f1f84000000.  nop dword [rax + rax]
;-- version_etc_arn:
0x00004eb0      4157           push r15
0x00004eb2      4156           push r14
0x00004eb4      4155           push r13
0x00004eb6      4154           push r12
0x00004eb8      4d89cc         mov r12, r9
0x00004ebb      55             push rbp
0x00004ebc      53             push rbx
0x00004ebd      4889fd         mov rbp, rdi
0x00004ec0      4c89c3         mov rbx, r8
0x00004ec3      4883ec28       sub rsp, 0x28
0x00004ec7      4885f6         test rsi, rsi
0x00004eca      0f8418010000   je 0x4fe8
0x00004ed0      4989d0         mov r8, rdx
0x00004ed3      488d152e1f00.  lea rdx, [0x00006e08]                   ; "%s (%s) %s\n"
0x00004eda      4989c9         mov r9, rcx
0x00004edd      31c0           xor eax, eax
0x00004edf      4889f1         mov rcx, rsi
0x00004ee2      be01000000     mov esi, 1
0x00004ee7      e8e4cdffff     call sym.imp.__fprintf_chk
0x00004eec      488d35281f00.  lea rsi, [0x00006e1b]                   ; "(C)"
0x00004ef3      31ff           xor edi, edi
0x00004ef5      ba05000000     mov edx, 5
0x00004efa      e821cbffff     call sym.imp.dcgettext
0x00004eff      488d153a2200.  lea rdx, obj.version_etc_copyright      ; 0x7140 ; "Copyright %s %d Free Software Foundation, Inc."
0x00004f06      4889c1         mov rcx, rax
0x00004f09      41b8e3070000   mov r8d, 0x7e3
0x00004f0f      be01000000     mov esi, 1
0x00004f14      4889ef         mov rdi, rbp
0x00004f17      31c0           xor eax, eax
0x00004f19      e8b2cdffff     call sym.imp.__fprintf_chk
0x00004f1e      488d35831f00.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x6ea8 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00004f25      31ff           xor edi, edi
0x00004f27      ba05000000     mov edx, 5
0x00004f2c      e8efcaffff     call sym.imp.dcgettext
0x00004f31      4889ee         mov rsi, rbp
0x00004f34      4889c7         mov rdi, rax
0x00004f37      e8b4cbffff     call sym.imp.fputs_unlocked
0x00004f3c      4983fc09       cmp r12, 9
0x00004f40      0f873a030000   ja 0x5280
0x00004f46      488d15bb2100.  lea rdx, [0x00007108]
0x00004f4d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00004f51      4801d0         add rax, rdx
0x00004f54      ffe0           jmp rax
0x00004f56      662e0f1f8400.  nop word cs:[rax + rax]
0x00004f60      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004f64      488b4310       mov rax, qword [rbx + 0x10]
0x00004f68      488d35a92000.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x7018 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x00004f6f      4c8b4308       mov r8, qword [rbx + 8]
0x00004f73      ba05000000     mov edx, 5
0x00004f78      31ff           xor edi, edi
0x00004f7a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004f7e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004f82      4c894c2410     mov qword [rsp + 0x10], r9
0x00004f87      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004f8b      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004f8f      48890424       mov qword [rsp], rax
0x00004f93      4c89442408     mov qword [rsp + 8], r8
0x00004f98      488b1b         mov rbx, qword [rbx]
0x00004f9b      e880caffff     call sym.imp.dcgettext
0x00004fa0      4883ec08       sub rsp, 8
0x00004fa4      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00004fa9      4889c2         mov rdx, rax
0x00004fac      4889d9         mov rcx, rbx
0x00004faf      be01000000     mov esi, 1
0x00004fb4      4889ef         mov rdi, rbp
0x00004fb7      31c0           xor eax, eax
0x00004fb9      4151           push r9
0x00004fbb      4155           push r13
0x00004fbd      4154           push r12
0x00004fbf      4157           push r15
0x00004fc1      4156           push r14
0x00004fc3      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00004fc8      4c8b442438     mov r8, qword [rsp + 0x38]
0x00004fcd      e8feccffff     call sym.imp.__fprintf_chk
0x00004fd2      4883c430       add rsp, 0x30
0x00004fd6      4883c428       add rsp, 0x28
0x00004fda      5b             pop rbx
0x00004fdb      5d             pop rbp
0x00004fdc      415c           pop r12
0x00004fde      415d           pop r13
0x00004fe0      415e           pop r14
0x00004fe2      415f           pop r15
0x00004fe4      c3             ret
0x00004fe5      0f1f00         nop dword [rax]
0x00004fe8      4989c8         mov r8, rcx
0x00004feb      4889d1         mov rcx, rdx
0x00004fee      488d151f1e00.  lea rdx, str.s__s                       ; 0x6e14 ; "%s %s\n"
0x00004ff5      be01000000     mov esi, 1
0x00004ffa      31c0           xor eax, eax
0x00004ffc      e8cfccffff     call sym.imp.__fprintf_chk
0x00005001      e9e6feffff     jmp 0x4eec
0x00005006      662e0f1f8400.  nop word cs:[rax + rax]
0x00005010      4c8b5340       mov r10, qword [rbx + 0x40]
0x00005014      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00005018      488d35292000.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x7048 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x0000501f      488b4310       mov rax, qword [rbx + 0x10]
0x00005023      4c8b4308       mov r8, qword [rbx + 8]
0x00005027      ba05000000     mov edx, 5
0x0000502c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00005030      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005034      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005038      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000503c      488b1b         mov rbx, qword [rbx]
0x0000503f      4c89542418     mov qword [rsp + 0x18], r10
0x00005044      4c894c2410     mov qword [rsp + 0x10], r9
0x00005049      48890424       mov qword [rsp], rax
0x0000504d      4c89442408     mov qword [rsp + 8], r8
0x00005052      31ff           xor edi, edi
0x00005054      e8c7c9ffff     call sym.imp.dcgettext
0x00005059      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000505e      4152           push r10
0x00005060      e93fffffff     jmp 0x4fa4
0x00005065      0f1f00         nop dword [rax]
0x00005068      488b1b         mov rbx, qword [rbx]
0x0000506b      488d35ad1d00.  lea rsi, str.Written_by__s.             ; 0x6e1f ; "Written by %s.\n"
0x00005072      ba05000000     mov edx, 5
0x00005077      31ff           xor edi, edi
0x00005079      e8a2c9ffff     call sym.imp.dcgettext
0x0000507e      4883c428       add rsp, 0x28
0x00005082      4889d9         mov rcx, rbx
0x00005085      4889ef         mov rdi, rbp
0x00005088      5b             pop rbx
0x00005089      5d             pop rbp
0x0000508a      415c           pop r12
0x0000508c      415d           pop r13
0x0000508e      415e           pop r14
0x00005090      415f           pop r15
0x00005092      4889c2         mov rdx, rax
0x00005095      be01000000     mov esi, 1
0x0000509a      31c0           xor eax, eax
0x0000509c      e92fccffff     jmp sym.imp.__fprintf_chk
0x000050a1      0f1f80000000.  nop dword [rax]
0x000050a8      4c8b6308       mov r12, qword [rbx + 8]
0x000050ac      488d357c1d00.  lea rsi, str.Written_by__s_and__s.      ; 0x6e2f ; "Written by %s and %s.\n"
0x000050b3      488b1b         mov rbx, qword [rbx]
0x000050b6      ba05000000     mov edx, 5
0x000050bb      31ff           xor edi, edi
0x000050bd      e85ec9ffff     call sym.imp.dcgettext
0x000050c2      4883c428       add rsp, 0x28
0x000050c6      4d89e0         mov r8, r12
0x000050c9      4889d9         mov rcx, rbx
0x000050cc      4889ef         mov rdi, rbp
0x000050cf      4889c2         mov rdx, rax
0x000050d2      be01000000     mov esi, 1
0x000050d7      5b             pop rbx
0x000050d8      5d             pop rbp
0x000050d9      415c           pop r12
0x000050db      415d           pop r13
0x000050dd      415e           pop r14
0x000050df      415f           pop r15
0x000050e1      31c0           xor eax, eax
0x000050e3      e9e8cbffff     jmp sym.imp.__fprintf_chk
0x000050e8      0f1f84000000.  nop dword [rax + rax]
0x000050f0      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000050f4      4c8b6308       mov r12, qword [rbx + 8]
0x000050f8      488d35471d00.  lea rsi, str.Written_by__s___s__and__s. ; 0x6e46 ; "Written by %s, %s, and %s.\n"
0x000050ff      488b1b         mov rbx, qword [rbx]
0x00005102      ba05000000     mov edx, 5
0x00005107      31ff           xor edi, edi
0x00005109      e812c9ffff     call sym.imp.dcgettext
0x0000510e      4883c428       add rsp, 0x28
0x00005112      4d89e9         mov r9, r13
0x00005115      4d89e0         mov r8, r12
0x00005118      4889d9         mov rcx, rbx
0x0000511b      4889ef         mov rdi, rbp
0x0000511e      4889c2         mov rdx, rax
0x00005121      5b             pop rbx
0x00005122      5d             pop rbp
0x00005123      415c           pop r12
0x00005125      415d           pop r13
0x00005127      415e           pop r14
0x00005129      415f           pop r15
0x0000512b      be01000000     mov esi, 1
0x00005130      31c0           xor eax, eax
0x00005132      e999cbffff     jmp sym.imp.__fprintf_chk
0x00005137      660f1f840000.  nop word [rax + rax]
0x00005140      488d35311e00.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x6f78 ; "Written by %s, %s, %s,\nand %s.\n"
0x00005147      ba05000000     mov edx, 5
0x0000514c      31ff           xor edi, edi
0x0000514e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00005152      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005156      4c8b6308       mov r12, qword [rbx + 8]
0x0000515a      488b1b         mov rbx, qword [rbx]
0x0000515d      e8bec8ffff     call sym.imp.dcgettext
0x00005162      4883ec08       sub rsp, 8
0x00005166      4156           push r14
0x00005168      4889c2         mov rdx, rax
0x0000516b      4d89e9         mov r9, r13
0x0000516e      4d89e0         mov r8, r12
0x00005171      4889d9         mov rcx, rbx
0x00005174      4889ef         mov rdi, rbp
0x00005177      be01000000     mov esi, 1
0x0000517c      31c0           xor eax, eax
0x0000517e      e84dcbffff     call sym.imp.__fprintf_chk
0x00005183      58             pop rax
0x00005184      5a             pop rdx
0x00005185      4883c428       add rsp, 0x28
0x00005189      5b             pop rbx
0x0000518a      5d             pop rbp
0x0000518b      415c           pop r12
0x0000518d      415d           pop r13
0x0000518f      415e           pop r14
0x00005191      415f           pop r15
0x00005193      c3             ret
0x00005194      0f1f4000       nop dword [rax]
0x00005198      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000519c      488d35f51d00.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x6f98 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x000051a3      ba05000000     mov edx, 5
0x000051a8      31ff           xor edi, edi
0x000051aa      4c8b7318       mov r14, qword [rbx + 0x18]
0x000051ae      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000051b2      4c8b6308       mov r12, qword [rbx + 8]
0x000051b6      488b1b         mov rbx, qword [rbx]
0x000051b9      e862c8ffff     call sym.imp.dcgettext
0x000051be      4157           push r15
0x000051c0      eba4           jmp 0x5166
0x000051c2      660f1f440000   nop word [rax + rax]
0x000051c8      4c8b4308       mov r8, qword [rbx + 8]
0x000051cc      4c8b6328       mov r12, qword [rbx + 0x28]
0x000051d0      488d35e91d00.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x6fc0 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x000051d7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000051db      4c8b7318       mov r14, qword [rbx + 0x18]
0x000051df      ba05000000     mov edx, 5
0x000051e4      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000051e8      31ff           xor edi, edi
0x000051ea      488b1b         mov rbx, qword [rbx]
0x000051ed      4c890424       mov qword [rsp], r8
0x000051f1      e82ac8ffff     call sym.imp.dcgettext
0x000051f6      4883ec08       sub rsp, 8
0x000051fa      4d89e9         mov r9, r13
0x000051fd      4154           push r12
0x000051ff      4157           push r15
0x00005201      4156           push r14
0x00005203      4c8b442420     mov r8, qword [rsp + 0x20]
0x00005208      4889d9         mov rcx, rbx
0x0000520b      4889c2         mov rdx, rax
0x0000520e      4889ef         mov rdi, rbp
0x00005211      be01000000     mov esi, 1
0x00005216      31c0           xor eax, eax
0x00005218      e8b3caffff     call sym.imp.__fprintf_chk
0x0000521d      4883c420       add rsp, 0x20
0x00005221      4883c428       add rsp, 0x28
0x00005225      5b             pop rbx
0x00005226      5d             pop rbp
0x00005227      415c           pop r12
0x00005229      415d           pop r13
0x0000522b      415e           pop r14
0x0000522d      415f           pop r15
0x0000522f      c3             ret
0x00005230      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00005234      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00005238      488d35a91d00.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x6fe8 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x0000523f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005243      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005247      ba05000000     mov edx, 5
0x0000524c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00005250      4c8b4308       mov r8, qword [rbx + 8]
0x00005254      31ff           xor edi, edi
0x00005256      4c894c2408     mov qword [rsp + 8], r9
0x0000525b      488b1b         mov rbx, qword [rbx]
0x0000525e      4c890424       mov qword [rsp], r8
0x00005262      e8b9c7ffff     call sym.imp.dcgettext
0x00005267      4155           push r13
0x00005269      4154           push r12
0x0000526b      4157           push r15
0x0000526d      4156           push r14
0x0000526f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00005274      eb8d           jmp 0x5203
0x00005276      662e0f1f8400.  nop word cs:[rax + rax]
0x00005280      4c8b5340       mov r10, qword [rbx + 0x40]
0x00005284      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00005288      ba05000000     mov edx, 5
0x0000528d      488b4310       mov rax, qword [rbx + 0x10]
0x00005291      4c8b4308       mov r8, qword [rbx + 8]
0x00005295      488d35e41d00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x7080 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x0000529c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000052a0      4c8b6328       mov r12, qword [rbx + 0x28]
0x000052a4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000052a8      4c8b7318       mov r14, qword [rbx + 0x18]
0x000052ac      4c89542418     mov qword [rsp + 0x18], r10
0x000052b1      4c894c2410     mov qword [rsp + 0x10], r9
0x000052b6      48890424       mov qword [rsp], rax
0x000052ba      4c89442408     mov qword [rsp + 8], r8
0x000052bf      488b1b         mov rbx, qword [rbx]
0x000052c2      e98bfdffff     jmp 0x5052
0x000052c7      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x000052d0      4531c9         xor r9d, r9d
0x000052d3      49833800       cmp qword [r8], 0
0x000052d7      7412           je 0x52eb
0x000052d9      0f1f80000000.  nop dword [rax]
0x000052e0      4983c101       add r9, 1
0x000052e4      4b833cc800     cmp qword [r8 + r9*8], 0
0x000052e9      75f5           jne 0x52e0
0x000052eb      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x000052f0      4883ec68       sub rsp, 0x68
0x000052f4      4d89c2         mov r10, r8
0x000052f7      4531c9         xor r9d, r9d
0x000052fa      64488b042528.  mov rax, qword fs:[0x28]
0x00005303      4889442458     mov qword [rsp + 0x58], rax
0x00005308      31c0           xor eax, eax
0x0000530a      4989e0         mov r8, rsp
0x0000530d      0f1f00         nop dword [rax]
0x00005310      418b02         mov eax, dword [r10]
0x00005313      83f82f         cmp eax, 0x2f
0x00005316      7742           ja 0x535a
0x00005318      4189c3         mov r11d, eax
0x0000531b      4d035a10       add r11, qword [r10 + 0x10]
0x0000531f      83c008         add eax, 8
0x00005322      418902         mov dword [r10], eax
0x00005325      498b03         mov rax, qword [r11]
0x00005328      4885c0         test rax, rax
0x0000532b      4b8904c8       mov qword [r8 + r9*8], rax
0x0000532f      740a           je 0x533b
0x00005331      4983c101       add r9, 1
0x00005335      4983f90a       cmp r9, 0xa
0x00005339      75d5           jne 0x5310
0x0000533b      e870fbffff     call sym.version_etc_arn
0x00005340      488b442458     mov rax, qword [rsp + 0x58]
0x00005345      644833042528.  xor rax, qword fs:[0x28]
0x0000534e      7505           jne 0x5355
0x00005350      4883c468       add rsp, 0x68
0x00005354      c3             ret
0x00005355      e8f6c6ffff     call sym.imp.__stack_chk_fail
0x0000535a      4d8b5a08       mov r11, qword [r10 + 8]
0x0000535e      498d4308       lea rax, [r11 + 8]
0x00005362      49894208       mov qword [r10 + 8], rax
0x00005366      ebbd           jmp 0x5325
0x00005368      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00005370      55             push rbp
0x00005371      53             push rbx
0x00005372      41ba20000000   mov r10d, 0x20                          ; "@"
0x00005378      4531db         xor r11d, r11d
0x0000537b      4881ecb80000.  sub rsp, 0xb8
0x00005382      64488b042528.  mov rax, qword fs:[0x28]
0x0000538b      4889442478     mov qword [rsp + 0x78], rax
0x00005390      31c0           xor eax, eax
0x00005392      488d8424d000.  lea rax, [rsp + 0xd0]
0x0000539a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x000053a2      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x000053aa      4c8d442420     lea r8, [rsp + 0x20]
0x000053af      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x000053b7      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x000053bf      4889442410     mov qword [rsp + 0x10], rax
0x000053c4      488d84248000.  lea rax, [rsp + 0x80]
0x000053cc      4531c9         xor r9d, r9d
0x000053cf      4889442418     mov qword [rsp + 0x18], rax
0x000053d4      4889c5         mov rbp, rax
0x000053d7      660f1f840000.  nop word [rax + rax]
0x000053e0      4183fa2f       cmp r10d, 0x2f
0x000053e4      7756           ja 0x543c
0x000053e6      4489d0         mov eax, r10d
0x000053e9      41bb01000000   mov r11d, 1
0x000053ef      4183c208       add r10d, 8
0x000053f3      4801e8         add rax, rbp
0x000053f6      488b00         mov rax, qword [rax]
0x000053f9      4885c0         test rax, rax
0x000053fc      4b8904c8       mov qword [r8 + r9*8], rax
0x00005400      740a           je 0x540c
0x00005402      4983c101       add r9, 1
0x00005406      4983f90a       cmp r9, 0xa
0x0000540a      75d4           jne 0x53e0
0x0000540c      4584db         test r11b, r11b
0x0000540f      7524           jne 0x5435
0x00005411      e89afaffff     call sym.version_etc_arn
0x00005416      488b442478     mov rax, qword [rsp + 0x78]
0x0000541b      644833042528.  xor rax, qword fs:[0x28]
0x00005424      750a           jne 0x5430
0x00005426      4881c4b80000.  add rsp, 0xb8
0x0000542d      5b             pop rbx
0x0000542e      5d             pop rbp
0x0000542f      c3             ret
0x00005430      e81bc6ffff     call sym.imp.__stack_chk_fail
0x00005435      4489542408     mov dword [rsp + 8], r10d
0x0000543a      ebd5           jmp 0x5411
0x0000543c      4889d8         mov rax, rbx
0x0000543f      4883c308       add rbx, 8
0x00005443      ebb1           jmp 0x53f6
0x00005445      90             nop
0x00005446      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00005450      53             push rbx
0x00005451      488d350a1a00.  lea rsi, str.Report_bugs_to:__s         ; 0x6e62 ; "\nReport bugs to: %s\n"
0x00005458      ba05000000     mov edx, 5
0x0000545d      31ff           xor edi, edi
0x0000545f      e8bcc5ffff     call sym.imp.dcgettext
0x00005464      488d150c1a00.  lea rdx, str.bug_coreutils_gnu.org      ; 0x6e77 ; "bug-coreutils@gnu.org"
0x0000546b      4889c6         mov rsi, rax
0x0000546e      bf01000000     mov edi, 1
0x00005473      31c0           xor eax, eax
0x00005475      e886c7ffff     call sym.imp.__printf_chk
0x0000547a      488d350c1a00.  lea rsi, str.s_home_page:___s           ; 0x6e8d ; "%s home page: <%s>\n"
0x00005481      ba05000000     mov edx, 5
0x00005486      31ff           xor edi, edi
0x00005488      e893c5ffff     call sym.imp.dcgettext
0x0000548d      488d0dbc1200.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x6750 ; "https://www.gnu.org/software/coreutils/"
0x00005494      488d15ac0a00.  lea rdx, str.GNU_coreutils              ; 0x5f47 ; "GNU coreutils"
0x0000549b      4889c6         mov rsi, rax
0x0000549e      bf01000000     mov edi, 1
0x000054a3      31c0           xor eax, eax
0x000054a5      e856c7ffff     call sym.imp.__printf_chk
0x000054aa      488b1db73d20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209268:8]=0
0x000054b1      488d35081c00.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x70c0 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x000054b8      31ff           xor edi, edi
0x000054ba      ba05000000     mov edx, 5
0x000054bf      e85cc5ffff     call sym.imp.dcgettext
0x000054c4      4889de         mov rsi, rbx
0x000054c7      4889c7         mov rdi, rax
0x000054ca      5b             pop rbx
0x000054cb      e920c6ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x000054d0      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x000054d1      4889fb         mov rbx, rdi
0x000054d4      e8b7c6ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x000054d9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x000054dc      7505           jne 0x54e3
0x000054de      4885db         test rbx, rbx
0x000054e1      7502           jne 0x54e5
0x000054e3      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x000054e4      c3             ret
0x000054e5      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x000054ea      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x000054f0      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x000054f3      48f7e6         mul rsi
0x000054f6      4889c7         mov rdi, rax
0x000054f9      0f90c0         seto al
0x000054fc      4885ff         test rdi, rdi
0x000054ff      780a           js 0x550b
0x00005501      0fb6c0         movzx eax, al
0x00005504      4885c0         test rax, rax
0x00005507      7502           jne 0x550b
0x00005509      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x0000550b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x0000550f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00005514      6690           nop
0x00005516      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00005520      ebae           jmp sym.xmalloc
0x00005522      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00005526      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00005530      4885f6         test rsi, rsi
0x00005533      53             push rbx
0x00005534      4889f3         mov rbx, rsi
0x00005537      7505           jne 0x553e
0x00005539      4885ff         test rdi, rdi
0x0000553c      751a           jne 0x5558
0x0000553e      4889de         mov rsi, rbx
0x00005541      e89ac6ffff     call sym.imp.realloc
0x00005546      4885c0         test rax, rax
0x00005549      7505           jne 0x5550
0x0000554b      4885db         test rbx, rbx
0x0000554e      7511           jne 0x5561                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00005550      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00005551      c3             ret
0x00005552      660f1f440000   nop word [rax + rax]
0x00005558      e8f3c3ffff     call sym.imp.free
0x0000555d      31c0           xor eax, eax
0x0000555f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00005560      c3             ret
0x00005561      e8ba010000     call sym.xalloc_die
0x00005566      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00005570      4889f0         mov rax, rsi
0x00005573      48f7e2         mul rdx
0x00005576      4889c6         mov rsi, rax
0x00005579      0f90c0         seto al
0x0000557c      4885f6         test rsi, rsi
0x0000557f      780a           js 0x558b
0x00005581      0fb6c0         movzx eax, al
0x00005584      4885c0         test rax, rax
0x00005587      7502           jne 0x558b
0x00005589      eba5           jmp sym.xrealloc
0x0000558b      4883ec08       sub rsp, 8
0x0000558f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00005594      6690           nop
0x00005596      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x000055a0      4885ff         test rdi, rdi
0x000055a3      4989d1         mov r9, rdx
0x000055a6      488b0e         mov rcx, qword [rsi]
0x000055a9      7435           je 0x55e0
0x000055ab      31d2           xor edx, edx
0x000055ad      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x000055b7      49f7f1         div r9
0x000055ba      4839c8         cmp rax, rcx
0x000055bd      763c           jbe 0x55fb
0x000055bf      4889c8         mov rax, rcx
0x000055c2      48d1e8         shr rax, 1
0x000055c5      488d4c0801     lea rcx, [rax + rcx + 1]
0x000055ca      48890e         mov qword [rsi], rcx
0x000055cd      490fafc9       imul rcx, r9
0x000055d1      4889ce         mov rsi, rcx
0x000055d4      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x000055d9      0f1f80000000.  nop dword [rax]
0x000055e0      4885c9         test rcx, rcx
0x000055e3      7423           je 0x5608
0x000055e5      4889c8         mov rax, rcx
0x000055e8      49f7e1         mul r9
0x000055eb      0f90c2         seto dl
0x000055ee      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x000055f1      0fb6d2         movzx edx, dl
0x000055f4      7805           js 0x55fb
0x000055f6      4885d2         test rdx, rdx
0x000055f9      74cf           je 0x55ca
0x000055fb      4883ec08       sub rsp, 8
0x000055ff      e81c010000     call sym.xalloc_die
0x00005604      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00005608      31d2           xor edx, edx
0x0000560a      b880000000     mov eax, 0x80
0x0000560f      4531c0         xor r8d, r8d
0x00005612      49f7f1         div r9
0x00005615      4885c0         test rax, rax
0x00005618      410f94c0       sete r8b
0x0000561c      498d0c00       lea rcx, [r8 + rax]
0x00005620      ebc3           jmp 0x55e5
0x00005622      0f1f4000       nop dword [rax]
0x00005626      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00005630      4885ff         test rdi, rdi
0x00005633      488b06         mov rax, qword [rsi]
0x00005636      7428           je 0x5660
0x00005638      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00005642      4839d0         cmp rax, rdx
0x00005645      772a           ja 0x5671
0x00005647      4889c2         mov rdx, rax
0x0000564a      48d1ea         shr rdx, 1
0x0000564d      488d440201     lea rax, [rdx + rax + 1]
0x00005652      488906         mov qword [rsi], rax
0x00005655      4889c6         mov rsi, rax
0x00005658      e9d3feffff     jmp sym.xrealloc
0x0000565d      0f1f00         nop dword [rax]
0x00005660      4885c0         test rax, rax
0x00005663      ba80000000     mov edx, 0x80
0x00005668      480f44c2       cmove rax, rdx
0x0000566c      4885c0         test rax, rax
0x0000566f      79e1           jns 0x5652
0x00005671      4883ec08       sub rsp, 8
0x00005675      e8a6000000     call sym.xalloc_die
0x0000567a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00005680      53             push rbx
0x00005681      4889fb         mov rbx, rdi
0x00005684      e847feffff     call sym.xmalloc
0x00005689      4889da         mov rdx, rbx
0x0000568c      31f6           xor esi, esi
0x0000568e      4889c7         mov rdi, rax
0x00005691      5b             pop rbx
0x00005692      e929c4ffff     jmp sym.imp.memset
0x00005697      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x000056a0      4889f8         mov rax, rdi
0x000056a3      4883ec08       sub rsp, 8
0x000056a7      48f7e6         mul rsi
0x000056aa      0f90c2         seto dl
0x000056ad      4885c0         test rax, rax
0x000056b0      7817           js 0x56c9
0x000056b2      0fb6d2         movzx edx, dl
0x000056b5      4885d2         test rdx, rdx
0x000056b8      750f           jne 0x56c9
0x000056ba      e841c4ffff     call sym.imp.calloc
0x000056bf      4885c0         test rax, rax
0x000056c2      7405           je 0x56c9
0x000056c4      4883c408       add rsp, 8
0x000056c8      c3             ret
0x000056c9      e852000000     call sym.xalloc_die
0x000056ce      6690           nop
;-- xmemdup:
0x000056d0      55             push rbp
0x000056d1      53             push rbx
0x000056d2      4889fd         mov rbp, rdi
0x000056d5      4889f7         mov rdi, rsi
0x000056d8      4889f3         mov rbx, rsi
0x000056db      4883ec08       sub rsp, 8
0x000056df      e8ecfdffff     call sym.xmalloc
0x000056e4      4883c408       add rsp, 8
0x000056e8      4889da         mov rdx, rbx
0x000056eb      4889ee         mov rsi, rbp
0x000056ee      5b             pop rbx
0x000056ef      5d             pop rbp
0x000056f0      4889c7         mov rdi, rax
0x000056f3      e958c4ffff     jmp sym.imp.memcpy
0x000056f8      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00005700      53             push rbx
0x00005701      4889fb         mov rbx, rdi
0x00005704      e837c3ffff     call sym.imp.strlen
0x00005709      4889df         mov rdi, rbx
0x0000570c      488d7001       lea rsi, [rax + 1]
0x00005710      5b             pop rbx
0x00005711      ebbd           jmp sym.xmemdup
0x00005713      662e0f1f8400.  nop word cs:[rax + rax]
0x0000571d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00005720      488d35481a00.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x716f ; "memory exhausted"
0x00005727      4883ec08       sub rsp, 8
0x0000572b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00005730      31ff           xor edi, edi
0x00005732      e8e9c2ffff     call sym.imp.dcgettext
0x00005737      8b3de3382000   mov edi, dword [obj.exit_failure]       ; [0x209020:4]=1
0x0000573d      488d15971100.  lea rdx, [0x000068db]                   ; "%s"
0x00005744      4889c1         mov rcx, rax
0x00005747      31f6           xor esi, esi
0x00005749      31c0           xor eax, eax
0x0000574b      e8c0c4ffff     call sym.imp.error
0x00005750      e80bc2ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00005755      662e0f1f8400.  nop word cs:[rax + rax]
0x0000575f      90             nop
;-- xstrtod:
0x00005760      4156           push r14                                ; ../coreutils-8.31/lib/xstrtod.c:46
0x00005762      4155           push r13
0x00005764      4989ce         mov r14, rcx
0x00005767      4154           push r12
0x00005769      55             push rbp
0x0000576a      4889fd         mov rbp, rdi
0x0000576d      53             push rbx
0x0000576e      4989d5         mov r13, rdx
0x00005771      4889f3         mov rbx, rsi
0x00005774      4883ec10       sub rsp, 0x10
0x00005778      64488b042528.  mov rax, qword fs:[0x28]
0x00005781      4889442408     mov qword [rsp + 8], rax
0x00005786      31c0           xor eax, eax
0x00005788      e8e3c1ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/xstrtod.c:51
0x0000578d      4889e6         mov rsi, rsp                            ; ../coreutils-8.31/lib/xstrtod.c:52
0x00005790      4989c4         mov r12, rax                            ; ../coreutils-8.31/lib/xstrtod.c:51
0x00005793      c70000000000   mov dword [rax], 0
0x00005799      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/xstrtod.c:52
0x0000579c      41ffd6         call r14
0x0000579f      488b0c24       mov rcx, qword [rsp]                    ; ../coreutils-8.31/lib/xstrtod.c:55
0x000057a3      4839e9         cmp rcx, rbp
0x000057a6      7470           je 0x5818
0x000057a8      4885db         test rbx, rbx
0x000057ab      744b           je 0x57f8
0x000057ad      660f2e05c310.  ucomisd xmm0, qword [0x00006878]        ; ../coreutils-8.31/lib/xstrtod.c:62
0x000057b5      7a07           jp 0x57be
0x000057b7      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/xstrtod.c:49
0x000057bc      740d           je 0x57cb                               ; ../coreutils-8.31/lib/xstrtod.c:62
0x000057be      41833c2422     cmp dword [r12], 0x22
0x000057c3      0f95c0         setne al
0x000057c6      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/xstrtod.c:66
0x000057c9      7403           je 0x57ce
0x000057cb      48890b         mov qword [rbx], rcx                    ; ../coreutils-8.31/lib/xstrtod.c:67
0x000057ce      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/xstrtod.c:71
0x000057d3      644833142528.  xor rdx, qword fs:[0x28]
0x000057dc      f2410f114500   movsd qword [r13], xmm0                 ; ../coreutils-8.31/lib/xstrtod.c:69
0x000057e2      7538           jne 0x581c                              ; ../coreutils-8.31/lib/xstrtod.c:71
0x000057e4      4883c410       add rsp, 0x10
0x000057e8      5b             pop rbx
0x000057e9      5d             pop rbp
0x000057ea      415c           pop r12
0x000057ec      415d           pop r13
0x000057ee      415e           pop r14
0x000057f0      c3             ret
0x000057f1      0f1f80000000.  nop dword [rax]
0x000057f8      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/xstrtod.c:56
0x000057fa      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/xstrtod.c:55
0x000057fd      75cf           jne 0x57ce
0x000057ff      660f2e057110.  ucomisd xmm0, qword [0x00006878]        ; ../coreutils-8.31/lib/xstrtod.c:62
0x00005807      7ab5           jp 0x57be
0x00005809      75b3           jne 0x57be
0x0000580b      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/xstrtod.c:49
0x00005810      ebbc           jmp 0x57ce
0x00005812      660f1f440000   nop word [rax + rax]
0x00005818      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/xstrtod.c:56
0x0000581a      ebaa           jmp 0x57c6
0x0000581c      e82fc2ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/xstrtod.c:71
0x00005821      662e0f1f8400.  nop word cs:[rax + rax]
0x0000582b      0f1f440000     nop dword [rax + rax]
;-- rpl_mbrtowc:
0x00005830      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00005832      4154           push r12
0x00005834      4989f5         mov r13, rsi
0x00005837      55             push rbp
0x00005838      53             push rbx
0x00005839      4889fb         mov rbx, rdi
0x0000583c      4989d4         mov r12, rdx
0x0000583f      4883ec18       sub rsp, 0x18
0x00005843      64488b042528.  mov rax, qword fs:[0x28]
0x0000584c      4889442408     mov qword [rsp + 8], rax
0x00005851      31c0           xor eax, eax
0x00005853      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00005858      4885ff         test rdi, rdi
0x0000585b      480f44d8       cmove rbx, rax
0x0000585f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00005862      e809c2ffff     call sym.imp.mbrtowc
0x00005867      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x0000586b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x0000586e      7620           jbe 0x5890                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00005870      4d85e4         test r12, r12
0x00005873      741b           je 0x5890
0x00005875      31ff           xor edi, edi
0x00005877      e8a4030000     call sym.hard_locale
0x0000587c      84c0           test al, al
0x0000587e      7510           jne 0x5890
0x00005880      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00005885      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x0000588a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x0000588c      0f1f4000       nop dword [rax]
0x00005890      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00005895      644833142528.  xor rdx, qword fs:[0x28]
0x0000589e      4889e8         mov rax, rbp
0x000058a1      750b           jne 0x58ae
0x000058a3      4883c418       add rsp, 0x18
0x000058a7      5b             pop rbx
0x000058a8      5d             pop rbp
0x000058a9      415c           pop r12
0x000058ab      415d           pop r13
0x000058ad      c3             ret
0x000058ae      e89dc1ffff     call sym.imp.__stack_chk_fail
0x000058b3      662e0f1f8400.  nop word cs:[rax + rax]
0x000058bd      0f1f00         nop dword [rax]
;-- str2sig:
0x000058c0      4155           push r13                                ; ../coreutils-8.31/lib/sig2str.c:305
0x000058c2      4154           push r12
0x000058c4      4989f5         mov r13, rsi
0x000058c7      55             push rbp
0x000058c8      53             push rbx
0x000058c9      31db           xor ebx, ebx
0x000058cb      4989fc         mov r12, rdi
0x000058ce      488d2dcf3720.  lea rbp, [0x002090a4]                   ; "HUP"
0x000058d5      4883ec18       sub rsp, 0x18
0x000058d9      64488b042528.  mov rax, qword fs:[0x28]
0x000058e2      4889442408     mov qword [rsp + 8], rax
0x000058e7      31c0           xor eax, eax
0x000058e9      0fbe07         movsx eax, byte [rdi]                   ; ../coreutils-8.31/lib/sig2str.c:263
0x000058ec      83e830         sub eax, 0x30
0x000058ef      83f809         cmp eax, 9
0x000058f2      7718           ja 0x590c
0x000058f4      eb5a           jmp 0x5950
0x000058f6      662e0f1f8400.  nop word cs:[rax + rax]
0x00005900      83c301         add ebx, 1                              ; ../coreutils-8.31/lib/sig2str.c:273
0x00005903      4883c50c       add rbp, 0xc
0x00005907      83fb23         cmp ebx, 0x23
0x0000590a      7474           je 0x5980
0x0000590c      4c89e6         mov rsi, r12                            ; ../coreutils-8.31/lib/sig2str.c:274
0x0000590f      4889ef         mov rdi, rbp
0x00005912      e8f9c1ffff     call sym.imp.strcmp
0x00005917      85c0           test eax, eax
0x00005919      75e5           jne 0x5900
0x0000591b      488d145b       lea rdx, [rbx + rbx*2]                  ; ../coreutils-8.31/lib/sig2str.c:275
0x0000591f      488d057a3720.  lea rax, obj.numname_table              ; 0x2090a0
0x00005926      8b0490         mov eax, dword [rax + rdx*4]
0x00005929      41894500       mov dword [r13], eax                    ; ../coreutils-8.31/lib/sig2str.c:306
0x0000592d      c1f81f         sar eax, 0x1f                           ; ../coreutils-8.31/lib/sig2str.c:307
0x00005930      488b4c2408     mov rcx, qword [rsp + 8]                ; ../coreutils-8.31/lib/sig2str.c:308
0x00005935      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000593e      0f85fc000000   jne 0x5a40
0x00005944      4883c418       add rsp, 0x18
0x00005948      5b             pop rbx
0x00005949      5d             pop rbp
0x0000594a      415c           pop r12
0x0000594c      415d           pop r13
0x0000594e      c3             ret
0x0000594f      90             nop
0x00005950      ba0a000000     mov edx, 0xa                            ; ../coreutils-8.31/lib/sig2str.c:266
0x00005955      4889e6         mov rsi, rsp
0x00005958      e8e3c1ffff     call sym.imp.strtol
0x0000595d      488b1424       mov rdx, qword [rsp]                    ; ../coreutils-8.31/lib/sig2str.c:267
0x00005961      803a00         cmp byte [rdx], 0
0x00005964      7506           jne 0x596c
0x00005966      4883f840       cmp rax, 0x40                           ; segment.PHDR
0x0000596a      7ebd           jle 0x5929
0x0000596c      41c74500ffff.  mov dword [r13], 0xffffffff             ; ../coreutils-8.31/lib/sig2str.c:306 ; [0xffffffff:4]=-1 ; -1
0x00005974      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/sig2str.c:307 ; -1
0x00005979      ebb5           jmp 0x5930
0x0000597b      0f1f440000     nop dword [rax + rax]
0x00005980      e80bc3ffff     call sym.imp.__libc_current_sigrtmin    ; ../coreutils-8.31/lib/sig2str.c:279
0x00005985      89c5           mov ebp, eax
0x00005987      e854c3ffff     call sym.imp.__libc_current_sigrtmax    ; ../coreutils-8.31/lib/sig2str.c:280
0x0000598c      85ed           test ebp, ebp                           ; ../coreutils-8.31/lib/sig2str.c:282
0x0000598e      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/sig2str.c:280
0x00005990      7e1a           jle 0x59ac                              ; ../coreutils-8.31/lib/sig2str.c:282
0x00005992      488d3de71700.  lea rdi, str.RTMIN                      ; 0x7180 ; "RTMIN"
0x00005999      b905000000     mov ecx, 5
0x0000599e      4c89e6         mov rsi, r12
0x000059a1      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000059a3      0f97c0         seta al
0x000059a6      1c00           sbb al, 0
0x000059a8      84c0           test al, al
0x000059aa      7457           je 0x5a03
0x000059ac      85db           test ebx, ebx                           ; ../coreutils-8.31/lib/sig2str.c:288
0x000059ae      7ebc           jle 0x596c
0x000059b0      488d3dcf1700.  lea rdi, str.RTMAX                      ; 0x7186 ; "RTMAX"
0x000059b7      b905000000     mov ecx, 5
0x000059bc      4c89e6         mov rsi, r12
0x000059bf      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000059c1      0f97c0         seta al
0x000059c4      1c00           sbb al, 0
0x000059c6      84c0           test al, al
0x000059c8      75a2           jne 0x596c
0x000059ca      498d7c2405     lea rdi, [r12 + 5]                      ; ../coreutils-8.31/lib/sig2str.c:290
0x000059cf      ba0a000000     mov edx, 0xa
0x000059d4      4889e6         mov rsi, rsp
0x000059d7      e864c1ffff     call sym.imp.strtol
0x000059dc      488b1424       mov rdx, qword [rsp]                    ; ../coreutils-8.31/lib/sig2str.c:291
0x000059e0      803a00         cmp byte [rdx], 0
0x000059e3      7587           jne 0x596c
0x000059e5      29dd           sub ebp, ebx
0x000059e7      4863ed         movsxd rbp, ebp
0x000059ea      4839e8         cmp rax, rbp
0x000059ed      0f8c79ffffff   jl 0x596c
0x000059f3      4885c0         test rax, rax
0x000059f6      0f8f70ffffff   jg 0x596c
0x000059fc      01d8           add eax, ebx                            ; ../coreutils-8.31/lib/sig2str.c:292
0x000059fe      e926ffffff     jmp 0x5929
0x00005a03      498d7c2405     lea rdi, [r12 + 5]                      ; ../coreutils-8.31/lib/sig2str.c:284
0x00005a08      ba0a000000     mov edx, 0xa
0x00005a0d      4889e6         mov rsi, rsp
0x00005a10      e82bc1ffff     call sym.imp.strtol
0x00005a15      488b1424       mov rdx, qword [rsp]                    ; ../coreutils-8.31/lib/sig2str.c:285
0x00005a19      803a00         cmp byte [rdx], 0
0x00005a1c      0f854affffff   jne 0x596c
0x00005a22      4885c0         test rax, rax
0x00005a25      0f8841ffffff   js 0x596c
0x00005a2b      29eb           sub ebx, ebp
0x00005a2d      4863d3         movsxd rdx, ebx
0x00005a30      4839d0         cmp rax, rdx
0x00005a33      0f8f33ffffff   jg 0x596c
0x00005a39      01e8           add eax, ebp                            ; ../coreutils-8.31/lib/sig2str.c:286
0x00005a3b      e9e9feffff     jmp 0x5929
0x00005a40      e80bc0ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/sig2str.c:308
0x00005a45      90             nop
0x00005a46      662e0f1f8400.  nop word cs:[rax + rax]
;-- sig2str:
0x00005a50      55             push rbp                                ; ../coreutils-8.31/lib/sig2str.c:316
0x00005a51      488d05483620.  lea rax, obj.numname_table              ; 0x2090a0
0x00005a58      53             push rbx
0x00005a59      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/sig2str.c:318
0x00005a5b      89fb           mov ebx, edi                            ; ../coreutils-8.31/lib/sig2str.c:316
0x00005a5d      4889f7         mov rdi, rsi
0x00005a60      4883ec18       sub rsp, 0x18
0x00005a64      4889c1         mov rcx, rax
0x00005a67      eb13           jmp 0x5a7c
0x00005a69      0f1f80000000.  nop dword [rax]
0x00005a70      83c201         add edx, 1                              ; ../coreutils-8.31/lib/sig2str.c:318
0x00005a73      4883c10c       add rcx, 0xc
0x00005a77      83fa23         cmp edx, 0x23
0x00005a7a      7424           je 0x5aa0
0x00005a7c      3919           cmp dword [rcx], ebx                    ; ../coreutils-8.31/lib/sig2str.c:319
0x00005a7e      75f0           jne 0x5a70
0x00005a80      488d1452       lea rdx, [rdx + rdx*2]                  ; ../coreutils-8.31/lib/sig2str.c:321
0x00005a84      488d749004     lea rsi, [rax + rdx*4 + 4]
0x00005a89      e812bfffff     call sym.imp.strcpy                     ; string_fortified.h:90   return __builtin___strcpy_chk (__dest, __src, __bos (__dest));
0x00005a8e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/sig2str.c:322
0x00005a90      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/sig2str.c:349
0x00005a94      5b             pop rbx
0x00005a95      5d             pop rbp
0x00005a96      c3             ret
0x00005a97      660f1f840000.  nop word [rax + rax]
0x00005aa0      48897c2408     mov qword [rsp + 8], rdi
0x00005aa5      e8e6c1ffff     call sym.imp.__libc_current_sigrtmin    ; ../coreutils-8.31/lib/sig2str.c:326
0x00005aaa      89c5           mov ebp, eax
0x00005aac      e82fc2ffff     call sym.imp.__libc_current_sigrtmax    ; ../coreutils-8.31/lib/sig2str.c:327
0x00005ab1      39dd           cmp ebp, ebx                            ; ../coreutils-8.31/lib/sig2str.c:330
0x00005ab3      7f6c           jg 0x5b21
0x00005ab5      39d8           cmp eax, ebx
0x00005ab7      7c68           jl 0x5b21
0x00005ab9      89c2           mov edx, eax                            ; ../coreutils-8.31/lib/sig2str.c:333
0x00005abb      488b7c2408     mov rdi, qword [rsp + 8]
0x00005ac0      29ea           sub edx, ebp
0x00005ac2      d1fa           sar edx, 1
0x00005ac4      01ea           add edx, ebp
0x00005ac6      39da           cmp edx, ebx
0x00005ac8      7d46           jge 0x5b10
0x00005aca      ba58000000     mov edx, 0x58                           ; string_fortified.h:90   return __builtin___strcpy_chk (__dest, __src, __bos (__dest)); ; 'X'
0x00005acf      c70752544d41   mov dword [rdi], 0x414d5452             ; 'RTMA'
                                                                       ; [0x414d5452:4]=-1
0x00005ad5      89c5           mov ebp, eax
0x00005ad7      66895704       mov word [rdi + 4], dx
0x00005adb      89d8           mov eax, ebx                            ; ../coreutils-8.31/lib/sig2str.c:345
0x00005add      29e8           sub eax, ebp
0x00005adf      74af           je 0x5a90
0x00005ae1      488d0da41600.  lea rcx, [0x0000718c]                   ; stdio2.h:33   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1, ; "%+d"
0x00005ae8      4189c0         mov r8d, eax
0x00005aeb      4883c705       add rdi, 5                              ; ../coreutils-8.31/lib/sig2str.c:346
0x00005aef      48c7c2ffffff.  mov rdx, 0xffffffffffffffff             ; stdio2.h:33   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
0x00005af6      be01000000     mov esi, 1
0x00005afb      31c0           xor eax, eax
0x00005afd      e83ec2ffff     call sym.imp.__sprintf_chk
0x00005b02      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/sig2str.c:349
0x00005b06      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/sig2str.c:347
0x00005b08      5b             pop rbx                                 ; ../coreutils-8.31/lib/sig2str.c:349
0x00005b09      5d             pop rbp
0x00005b0a      c3             ret
0x00005b0b      0f1f440000     nop dword [rax + rax]
0x00005b10      b94e000000     mov ecx, 0x4e                           ; string_fortified.h:90   return __builtin___strcpy_chk (__dest, __src, __bos (__dest)); ; 'N'
0x00005b15      c70752544d49   mov dword [rdi], 0x494d5452             ; 'RTMI'
                                                                       ; [0x494d5452:4]=-1
0x00005b1b      66894f04       mov word [rdi + 4], cx
0x00005b1f      ebba           jmp 0x5adb
0x00005b21      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/sig2str.c:331 ; -1
0x00005b26      e965ffffff     jmp 0x5a90
0x00005b2b      0f1f440000     nop dword [rax + rax]
;-- c_strtod:
0x00005b30      55             push rbp
0x00005b31      53             push rbx
0x00005b32      4889fd         mov rbp, rdi
0x00005b35      4889f3         mov rbx, rsi
0x00005b38      4883ec08       sub rsp, 8
0x00005b3c      488b05f53820.  mov rax, qword [obj.c_locale_cache]     ; [0x209438:8]=0
0x00005b43      4885c0         test rax, rax
0x00005b46      7438           je 0x5b80
0x00005b48      488b15e93820.  mov rdx, qword [obj.c_locale_cache]     ; [0x209438:8]=0
0x00005b4f      4885d2         test rdx, rdx
0x00005b52      7414           je 0x5b68
0x00005b54      4883c408       add rsp, 8
0x00005b58      4889de         mov rsi, rbx
0x00005b5b      4889ef         mov rdi, rbp
0x00005b5e      5b             pop rbx
0x00005b5f      5d             pop rbp
0x00005b60      e98bbeffff     jmp sym.imp.strtod_l
0x00005b65      0f1f00         nop dword [rax]
0x00005b68      4885db         test rbx, rbx
0x00005b6b      660fefc0       pxor xmm0, xmm0
0x00005b6f      7407           je 0x5b78
0x00005b71      660fefc0       pxor xmm0, xmm0
0x00005b75      48892b         mov qword [rbx], rbp
0x00005b78      4883c408       add rsp, 8
0x00005b7c      5b             pop rbx
0x00005b7d      5d             pop rbp
0x00005b7e      c3             ret
0x00005b7f      90             nop
0x00005b80      488d35091600.  lea rsi, [0x00007190]                   ; "C"
0x00005b87      31d2           xor edx, edx
0x00005b89      bfbf1f0000     mov edi, 0x1fbf
0x00005b8e      e8fdbeffff     call sym.imp.newlocale
0x00005b93      4889059e3820.  mov qword [obj.c_locale_cache], rax     ; [0x209438:8]=0
0x00005b9a      ebac           jmp 0x5b48
0x00005b9c      0f1f4000       nop dword [rax]
;-- close_stream:
0x00005ba0      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00005ba2      55             push rbp
0x00005ba3      4889fd         mov rbp, rdi
0x00005ba6      53             push rbx
0x00005ba7      e804beffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x00005bac      8b5d00         mov ebx, dword [rbp]
0x00005baf      4889ef         mov rdi, rbp
0x00005bb2      4989c4         mov r12, rax
0x00005bb5      e806010000     call sym.rpl_fclose
0x00005bba      83e320         and ebx, 0x20                           ; "@"
0x00005bbd      85db           test ebx, ebx
0x00005bbf      7517           jne 0x5bd8
0x00005bc1      85c0           test eax, eax
0x00005bc3      740a           je 0x5bcf                               ; stdio.h:-186
0x00005bc5      4d85e4         test r12, r12                           ; stdio.h:-178
0x00005bc8      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00005bcd      7439           je 0x5c08
0x00005bcf      5b             pop rbx
0x00005bd0      5d             pop rbp
0x00005bd1      415c           pop r12
0x00005bd3      c3             ret
0x00005bd4      0f1f4000       nop dword [rax]
0x00005bd8      85c0           test eax, eax
0x00005bda      751c           jne 0x5bf8
0x00005bdc      e88fbdffff     call sym.imp.__errno_location
0x00005be1      c70000000000   mov dword [rax], 0
0x00005be7      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00005bec      5b             pop rbx
0x00005bed      5d             pop rbp
0x00005bee      415c           pop r12
0x00005bf0      c3             ret
0x00005bf1      0f1f80000000.  nop dword [rax]
0x00005bf8      5b             pop rbx
0x00005bf9      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00005bfe      5d             pop rbp                                 ; stdio.h:-186
0x00005bff      415c           pop r12
0x00005c01      c3             ret
0x00005c02      660f1f440000   nop word [rax + rax]
0x00005c08      e863bdffff     call sym.imp.__errno_location
0x00005c0d      833809         cmp dword [rax], 9
0x00005c10      5b             pop rbx
0x00005c11      5d             pop rbp
0x00005c12      415c           pop r12                                 ; stdio.h:-178
0x00005c14      0f95c0         setne al
0x00005c17      0fb6c0         movzx eax, al
0x00005c1a      f7d8           neg eax
0x00005c1c      c3             ret
0x00005c1d      0f1f00         nop dword [rax]
;-- hard_locale:
0x00005c20      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00005c24      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00005c26      e8c5bfffff     call sym.imp.setlocale
0x00005c2b      4889c2         mov rdx, rax
0x00005c2e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00005c33      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00005c36      741d           je 0x5c55
0x00005c38      488d3d511500.  lea rdi, [0x00007190]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x00005c3f      b902000000     mov ecx, 2
0x00005c44      4889d6         mov rsi, rdx
0x00005c47      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005c49      0f97c1         seta cl
0x00005c4c      80d900         sbb cl, 0
0x00005c4f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00005c51      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00005c53      750b           jne 0x5c60
0x00005c55      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00005c59      c3             ret
0x00005c5a      660f1f440000   nop word [rax + rax]
0x00005c60      488d3d2b1500.  lea rdi, [0x00007192]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "POSIX"
0x00005c67      b906000000     mov ecx, 6
0x00005c6c      4889d6         mov rsi, rdx
0x00005c6f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005c71      0f97c0         seta al
0x00005c74      1c00           sbb al, 0
0x00005c76      84c0           test al, al
0x00005c78      0f95c0         setne al
0x00005c7b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00005c7f      c3             ret
;-- locale_charset:
0x00005c80      4883ec08       sub rsp, 8
0x00005c84      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00005c89      e822bfffff     call sym.imp.nl_langinfo
0x00005c8e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00005c91      741d           je 0x5cb0
0x00005c93      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00005c96      488d15fb1400.  lea rdx, str.ASCII                      ; 0x7198 ; "ASCII"
0x00005c9d      480f44c2       cmove rax, rdx
0x00005ca1      4883c408       add rsp, 8
0x00005ca5      c3             ret
0x00005ca6      662e0f1f8400.  nop word cs:[rax + rax]
0x00005cb0      488d05e11400.  lea rax, str.ASCII                      ; 0x7198 ; "ASCII"
0x00005cb7      4883c408       add rsp, 8
0x00005cbb      c3             ret
0x00005cbc      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x00005cc0      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00005cc2      55             push rbp
0x00005cc3      53             push rbx
0x00005cc4      4889fb         mov rbx, rdi
0x00005cc7      e8b4beffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x00005ccc      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x00005cce      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00005cd1      7854           js 0x5d27                               ; ../coreutils-8.31/lib/fclose.c:66
0x00005cd3      e8f8beffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00005cd8      85c0           test eax, eax
0x00005cda      752c           jne 0x5d08
0x00005cdc      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x00005cdf      e85c000000     call sym.rpl_fflush
0x00005ce4      85c0           test eax, eax
0x00005ce6      743c           je 0x5d24
0x00005ce8      e883bcffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x00005ced      448b20         mov r12d, dword [rax]
0x00005cf0      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00005cf3      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00005cf6      e805bdffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x00005cfb      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x00005cfe      7530           jne 0x5d30
0x00005d00      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00005d01      5d             pop rbp
0x00005d02      415c           pop r12
0x00005d04      c3             ret
0x00005d05      0f1f00         nop dword [rax]
0x00005d08      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x00005d0b      e870beffff     call sym.imp.fileno
0x00005d10      31f6           xor esi, esi
0x00005d12      ba01000000     mov edx, 1
0x00005d17      89c7           mov edi, eax
0x00005d19      e892bdffff     call sym.imp.lseek
0x00005d1e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005d22      75b8           jne 0x5cdc
0x00005d24      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00005d27      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00005d28      5d             pop rbp
0x00005d29      415c           pop r12
0x00005d2b      e9d0bcffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00005d30      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00005d34      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00005d39      ebc5           jmp 0x5d00
0x00005d3b      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x00005d40      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00005d43      53             push rbx
0x00005d44      4889fb         mov rbx, rdi
0x00005d47      7411           je 0x5d5a                               ; ../coreutils-8.31/lib/fflush.c:150
0x00005d49      e882beffff     call sym.imp.__freading
0x00005d4e      85c0           test eax, eax
0x00005d50      7408           je 0x5d5a
0x00005d52      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00005d58      750e           jne 0x5d68
0x00005d5a      4889df         mov rdi, rbx
0x00005d5d      5b             pop rbx
0x00005d5e      e93dbeffff     jmp sym.imp.fflush
0x00005d63      0f1f440000     nop dword [rax + rax]
0x00005d68      4889df         mov rdi, rbx
0x00005d6b      ba01000000     mov edx, 1
0x00005d70      31f6           xor esi, esi
0x00005d72      e809000000     call sym.rpl_fseeko
0x00005d77      4889df         mov rdi, rbx
0x00005d7a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x00005d7b      e920beffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00005d80      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00005d84      48394710       cmp qword [rdi + 0x10], rax
0x00005d88      7406           je 0x5d90                               ; ../coreutils-8.31/lib/fseeko.c:32
0x00005d8a      e9a1beffff     jmp sym.imp.fseeko                      ; /sys_errlist.h:9
0x00005d8f      90             nop
0x00005d90      488b4720       mov rax, qword [rdi + 0x20]
0x00005d94      48394728       cmp qword [rdi + 0x28], rax
0x00005d98      75f0           jne 0x5d8a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x00005d9a      48837f4800     cmp qword [rdi + 0x48], 0
0x00005d9f      75e9           jne 0x5d8a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00005da1      4154           push r12
0x00005da3      55             push rbp
0x00005da4      4189d4         mov r12d, edx
0x00005da7      53             push rbx
0x00005da8      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x00005dab      4889fb         mov rbx, rdi
0x00005dae      e8cdbdffff     call sym.imp.fileno
0x00005db3      4489e2         mov edx, r12d
0x00005db6      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00005db9      89c7           mov edi, eax                            ; /sys_errlist.h:17
0x00005dbb      e8f0bcffff     call sym.imp.lseek
0x00005dc0      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005dc4      740c           je 0x5dd2
0x00005dc6      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00005dc9      488983900000.  mov qword [rbx + 0x90], rax
0x00005dd0      31c0           xor eax, eax
0x00005dd2      5b             pop rbx                                 ; /sys_errlist.h:19
0x00005dd3      5d             pop rbp
0x00005dd4      415c           pop r12
0x00005dd6      c3             ret
0x00005dd7      660f1f840000.  nop word [rax + rax]
;-- __libc_csu_init:
0x00005de0      4157           push r15
0x00005de2      4156           push r14
0x00005de4      4989d7         mov r15, rdx
0x00005de7      4155           push r13
0x00005de9      4154           push r12
0x00005deb      4c8d253e2c20.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x208a30 ; "`$"
0x00005df2      55             push rbp
0x00005df3      488d2d3e2c20.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x208a38 ; " $"
0x00005dfa      53             push rbx
0x00005dfb      4189fd         mov r13d, edi
0x00005dfe      4989f6         mov r14, rsi
0x00005e01      4c29e5         sub rbp, r12
0x00005e04      4883ec08       sub rsp, 8
0x00005e08      48c1fd03       sar rbp, 3
0x00005e0c      e8e7baffff     call sym._init
0x00005e11      4885ed         test rbp, rbp
0x00005e14      7420           je 0x5e36
0x00005e16      31db           xor ebx, ebx
0x00005e18      0f1f84000000.  nop dword [rax + rax]
0x00005e20      4c89fa         mov rdx, r15
0x00005e23      4c89f6         mov rsi, r14
0x00005e26      4489ef         mov edi, r13d
0x00005e29      41ff14dc       call qword [r12 + rbx*8]
0x00005e2d      4883c301       add rbx, 1
0x00005e31      4839dd         cmp rbp, rbx
0x00005e34      75ea           jne 0x5e20
0x00005e36      4883c408       add rsp, 8
0x00005e3a      5b             pop rbx
0x00005e3b      5d             pop rbp
0x00005e3c      415c           pop r12
0x00005e3e      415d           pop r13
0x00005e40      415e           pop r14
0x00005e42      415f           pop r15
0x00005e44      c3             ret
0x00005e45      90             nop
0x00005e46      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00005e50      f3c3           ret
0x00005e52      662e0f1f8400.  nop word cs:[rax + rax]
0x00005e5c      0f1f4000       nop dword [rax]
;-- atexit:
0x00005e60      488b15a13120.  mov rdx, qword [obj.__dso_handle]       ; [0x209008:8]=0x209008 obj.__dso_handle
0x00005e67      31f6           xor esi, esi
0x00005e69      e902beffff     jmp sym.imp.__cxa_atexit
0x00005e6e      0000           add byte [rax], al
