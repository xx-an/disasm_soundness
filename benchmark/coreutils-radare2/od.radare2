;-- section..plt:
;-- .plt:
0x000017b0      ff353ae62000   push qword [0x0020fdf0]                 ; [12] -r-x section size 944 named .plt
0x000017b6      ff253ce62000   jmp qword [0x0020fdf8]                  ; [0x20fdf8:8]=0
0x000017bc      0f1f4000       nop dword [rax]
;-- imp.__snprintf_chk:
0x000017c0      ff253ae62000   jmp qword [reloc.__snprintf_chk]        ; [0x20fe00:8]=0x17c6
0x000017c6      6800000000     push 0
0x000017cb      e9e0ffffff     jmp sym..plt
;-- imp.free:
0x000017d0      ff2532e62000   jmp qword [reloc.free]                  ; [0x20fe08:8]=0x17d6
0x000017d6      6801000000     push 1
0x000017db      e9d0ffffff     jmp sym..plt
;-- imp.abort:
0x000017e0      ff252ae62000   jmp qword [reloc.abort]                 ; [0x20fe10:8]=0x17e6
0x000017e6      6802000000     push 2
0x000017eb      e9c0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x000017f0      ff2522e62000   jmp qword [reloc.__errno_location]      ; [0x20fe18:8]=0x17f6
0x000017f6      6803000000     push 3
0x000017fb      e9b0ffffff     jmp sym..plt
;-- imp.strncmp:
0x00001800      ff251ae62000   jmp qword [reloc.strncmp]               ; [0x20fe20:8]=0x1806
0x00001806      6804000000     push 4
0x0000180b      e9a0ffffff     jmp sym..plt
;-- imp._exit:
0x00001810      ff2512e62000   jmp qword [reloc._exit]                 ; [0x20fe28:8]=0x1816
0x00001816      6805000000     push 5
0x0000181b      e990ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001820      ff250ae62000   jmp qword [reloc.__fpending]            ; [0x20fe30:8]=0x1826 ; "&\x18"
0x00001826      6806000000     push 6
0x0000182b      e980ffffff     jmp sym..plt
;-- imp.puts:
0x00001830      ff2502e62000   jmp qword [reloc.puts]                  ; [0x20fe38:8]=0x1836 ; "6\x18"
0x00001836      6807000000     push 7
0x0000183b      e970ffffff     jmp sym..plt
;-- imp.ferror:
0x00001840      ff25fae52000   jmp qword [reloc.ferror]                ; [0x20fe40:8]=0x1846 ; "F\x18"
0x00001846      6808000000     push 8
0x0000184b      e960ffffff     jmp sym..plt
;-- imp.strtod:
0x00001850      ff25f2e52000   jmp qword [reloc.strtod]                ; [0x20fe48:8]=0x1856 ; "V\x18"
0x00001856      6809000000     push 9
0x0000185b      e950ffffff     jmp sym..plt
;-- imp.localeconv:
0x00001860      ff25eae52000   jmp qword [reloc.localeconv]            ; [0x20fe50:8]=0x1866 ; "f\x18"
0x00001866      680a000000     push 0xa
0x0000186b      e940ffffff     jmp sym..plt
;-- imp.fread_unlocked:
0x00001870      ff25e2e52000   jmp qword [reloc.fread_unlocked]        ; [0x20fe58:8]=0x1876 ; "v\x18"
0x00001876      680b000000     push 0xb
0x0000187b      e930ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001880      ff25dae52000   jmp qword [reloc.textdomain]            ; [0x20fe60:8]=0x1886
0x00001886      680c000000     push 0xc
0x0000188b      e920ffffff     jmp sym..plt
;-- imp.fclose:
0x00001890      ff25d2e52000   jmp qword [reloc.fclose]                ; [0x20fe68:8]=0x1896
0x00001896      680d000000     push 0xd
0x0000189b      e910ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x000018a0      ff25cae52000   jmp qword [reloc.bindtextdomain]        ; [0x20fe70:8]=0x18a6
0x000018a6      680e000000     push 0xe
0x000018ab      e900ffffff     jmp sym..plt
;-- imp.dcgettext:
0x000018b0      ff25c2e52000   jmp qword [reloc.dcgettext]             ; [0x20fe78:8]=0x18b6
0x000018b6      680f000000     push 0xf
0x000018bb      e9f0feffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x000018c0      ff25bae52000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x20fe80:8]=0x18c6
0x000018c6      6810000000     push 0x10
0x000018cb      e9e0feffff     jmp sym..plt
;-- imp.strlen:
0x000018d0      ff25b2e52000   jmp qword [reloc.strlen]                ; [0x20fe88:8]=0x18d6
0x000018d6      6811000000     push 0x11
0x000018db      e9d0feffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x000018e0      ff25aae52000   jmp qword [reloc.__stack_chk_fail]      ; [0x20fe90:8]=0x18e6
0x000018e6      6812000000     push 0x12
0x000018eb      e9c0feffff     jmp sym..plt
;-- imp.getopt_long:
0x000018f0      ff25a2e52000   jmp qword [reloc.getopt_long]           ; [0x20fe98:8]=0x18f6
0x000018f6      6813000000     push 0x13
0x000018fb      e9b0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001900      ff259ae52000   jmp qword [reloc.mbrtowc]               ; [0x20fea0:8]=0x1906
0x00001906      6814000000     push 0x14
0x0000190b      e9a0feffff     jmp sym..plt
;-- imp.strchr:
0x00001910      ff2592e52000   jmp qword [reloc.strchr]                ; [0x20fea8:8]=0x1916
0x00001916      6815000000     push 0x15
0x0000191b      e990feffff     jmp sym..plt
;-- imp.__overflow:
0x00001920      ff258ae52000   jmp qword [reloc.__overflow]            ; [0x20feb0:8]=0x1926 ; "&\x19"
0x00001926      6816000000     push 0x16
0x0000192b      e980feffff     jmp sym..plt
;-- imp.strrchr:
0x00001930      ff2582e52000   jmp qword [reloc.strrchr]               ; [0x20feb8:8]=0x1936 ; "6\x19"
0x00001936      6817000000     push 0x17
0x0000193b      e970feffff     jmp sym..plt
;-- imp.lseek:
0x00001940      ff257ae52000   jmp qword [reloc.lseek]                 ; [0x20fec0:8]=0x1946 ; "F\x19"
0x00001946      6818000000     push 0x18
0x0000194b      e960feffff     jmp sym..plt
;-- imp.__assert_fail:
0x00001950      ff2572e52000   jmp qword [reloc.__assert_fail]         ; [0x20fec8:8]=0x1956 ; "V\x19"
0x00001956      6819000000     push 0x19
0x0000195b      e950feffff     jmp sym..plt
;-- imp.__strtoul_internal:
0x00001960      ff256ae52000   jmp qword [reloc.__strtoul_internal]    ; [0x20fed0:8]=0x1966 ; "f\x19"
0x00001966      681a000000     push 0x1a
0x0000196b      e940feffff     jmp sym..plt
;-- imp.strtof:
0x00001970      ff2562e52000   jmp qword [reloc.strtof]                ; [0x20fed8:8]=0x1976 ; "v\x19"
0x00001976      681b000000     push 0x1b
0x0000197b      e930feffff     jmp sym..plt
;-- imp.memset:
0x00001980      ff255ae52000   jmp qword [reloc.memset]                ; [0x20fee0:8]=0x1986
0x00001986      681c000000     push 0x1c
0x0000198b      e920feffff     jmp sym..plt
;-- imp.fgetc:
0x00001990      ff2552e52000   jmp qword [reloc.fgetc]                 ; [0x20fee8:8]=0x1996
0x00001996      681d000000     push 0x1d
0x0000199b      e910feffff     jmp sym..plt
;-- imp.memcmp:
0x000019a0      ff254ae52000   jmp qword [reloc.memcmp]                ; [0x20fef0:8]=0x19a6
0x000019a6      681e000000     push 0x1e
0x000019ab      e900feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x000019b0      ff2542e52000   jmp qword [reloc.fputs_unlocked]        ; [0x20fef8:8]=0x19b6
0x000019b6      681f000000     push 0x1f
0x000019bb      e9f0fdffff     jmp sym..plt
;-- imp.calloc:
0x000019c0      ff253ae52000   jmp qword [reloc.calloc]                ; [0x20ff00:8]=0x19c6
0x000019c6      6820000000     push 0x20                               ; "@"
0x000019cb      e9e0fdffff     jmp sym..plt
;-- imp.memcpy:
0x000019d0      ff2532e52000   jmp qword [reloc.memcpy]                ; [0x20ff08:8]=0x19d6
0x000019d6      6821000000     push 0x21                               ; '!'
0x000019db      e9d0fdffff     jmp sym..plt
;-- imp.fileno:
0x000019e0      ff252ae52000   jmp qword [reloc.fileno]                ; [0x20ff10:8]=0x19e6
0x000019e6      6822000000     push 0x22                               ; '"'
0x000019eb      e9c0fdffff     jmp sym..plt
;-- imp.malloc:
0x000019f0      ff2522e52000   jmp qword [reloc.malloc]                ; [0x20ff18:8]=0x19f6
0x000019f6      6823000000     push 0x23                               ; '#'
0x000019fb      e9b0fdffff     jmp sym..plt
;-- imp.fflush:
0x00001a00      ff251ae52000   jmp qword [reloc.fflush]                ; [0x20ff20:8]=0x1a06
0x00001a06      6824000000     push 0x24                               ; '$'
0x00001a0b      e9a0fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001a10      ff2512e52000   jmp qword [reloc.nl_langinfo]           ; [0x20ff28:8]=0x1a16
0x00001a16      6825000000     push 0x25                               ; '%'
0x00001a1b      e990fdffff     jmp sym..plt
;-- imp.__fxstat:
0x00001a20      ff250ae52000   jmp qword [reloc.__fxstat]              ; [0x20ff30:8]=0x1a26 ; "&\x1a"
0x00001a26      6826000000     push 0x26                               ; '&'
0x00001a2b      e980fdffff     jmp sym..plt
;-- imp.__freading:
0x00001a30      ff2502e52000   jmp qword [reloc.__freading]            ; [0x20ff38:8]=0x1a36 ; "6\x1a"
0x00001a36      6827000000     push 0x27                               ; '''
0x00001a3b      e970fdffff     jmp sym..plt
;-- imp.fwrite_unlocked:
0x00001a40      ff25fae42000   jmp qword [reloc.fwrite_unlocked]       ; [0x20ff40:8]=0x1a46 ; "F\x1a"
0x00001a46      6828000000     push 0x28                               ; '('
0x00001a4b      e960fdffff     jmp sym..plt
;-- imp.realloc:
0x00001a50      ff25f2e42000   jmp qword [reloc.realloc]               ; [0x20ff48:8]=0x1a56 ; "V\x1a"
0x00001a56      6829000000     push 0x29                               ; ')'
0x00001a5b      e950fdffff     jmp sym..plt
;-- imp.setlocale:
0x00001a60      ff25eae42000   jmp qword [reloc.setlocale]             ; [0x20ff50:8]=0x1a66 ; "f\x1a"
0x00001a66      682a000000     push 0x2a                               ; '*'
0x00001a6b      e940fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001a70      ff25e2e42000   jmp qword [reloc.__printf_chk]          ; [0x20ff58:8]=0x1a76 ; "v\x1a"
0x00001a76      682b000000     push 0x2b                               ; '+'
0x00001a7b      e930fdffff     jmp sym..plt
;-- imp.setvbuf:
0x00001a80      ff25dae42000   jmp qword [reloc.setvbuf]               ; [0x20ff60:8]=0x1a86
0x00001a86      682c000000     push 0x2c                               ; ','
0x00001a8b      e920fdffff     jmp sym..plt
;-- imp.strtold:
0x00001a90      ff25d2e42000   jmp qword [reloc.strtold]               ; [0x20ff68:8]=0x1a96
0x00001a96      682d000000     push 0x2d                               ; '-'
0x00001a9b      e910fdffff     jmp sym..plt
;-- imp.error:
0x00001aa0      ff25cae42000   jmp qword [reloc.error]                 ; [0x20ff70:8]=0x1aa6
0x00001aa6      682e000000     push 0x2e                               ; '.'
0x00001aab      e900fdffff     jmp sym..plt
;-- imp.fseeko:
0x00001ab0      ff25c2e42000   jmp qword [reloc.fseeko]                ; [0x20ff78:8]=0x1ab6
0x00001ab6      682f000000     push 0x2f                               ; '/'
0x00001abb      e9f0fcffff     jmp sym..plt
;-- imp.fopen:
0x00001ac0      ff25bae42000   jmp qword [reloc.fopen]                 ; [0x20ff80:8]=0x1ac6
0x00001ac6      6830000000     push 0x30                               ; '0'
0x00001acb      e9e0fcffff     jmp sym..plt
;-- imp.__fread_unlocked_chk:
0x00001ad0      ff25b2e42000   jmp qword [reloc.__fread_unlocked_chk]  ; [0x20ff88:8]=0x1ad6
0x00001ad6      6831000000     push 0x31                               ; '1'
0x00001adb      e9d0fcffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001ae0      ff25aae42000   jmp qword [reloc.__cxa_atexit]          ; [0x20ff90:8]=0x1ae6
0x00001ae6      6832000000     push 0x32                               ; '2'
0x00001aeb      e9c0fcffff     jmp sym..plt
;-- imp.exit:
0x00001af0      ff25a2e42000   jmp qword [reloc.exit]                  ; [0x20ff98:8]=0x1af6
0x00001af6      6833000000     push 0x33                               ; '3'
0x00001afb      e9b0fcffff     jmp sym..plt
;-- imp.fwrite:
0x00001b00      ff259ae42000   jmp qword [reloc.fwrite]                ; [0x20ffa0:8]=0x1b06
0x00001b06      6834000000     push 0x34                               ; '4'
0x00001b0b      e9a0fcffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001b10      ff2592e42000   jmp qword [reloc.__fprintf_chk]         ; [0x20ffa8:8]=0x1b16
0x00001b16      6835000000     push 0x35                               ; '5'
0x00001b1b      e990fcffff     jmp sym..plt
;-- imp.mbsinit:
0x00001b20      ff258ae42000   jmp qword [reloc.mbsinit]               ; [0x20ffb0:8]=0x1b26 ; "&\x1b"
0x00001b26      6836000000     push 0x36                               ; '6'
0x00001b2b      e980fcffff     jmp sym..plt
;-- imp.iswprint:
0x00001b30      ff2582e42000   jmp qword [reloc.iswprint]              ; [0x20ffb8:8]=0x1b36 ; "6\x1b"
0x00001b36      6837000000     push 0x37                               ; '7'
0x00001b3b      e970fcffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00001b40      ff257ae42000   jmp qword [reloc.__ctype_b_loc]         ; [0x20ffc0:8]=0x1b46 ; "F\x1b"
0x00001b46      6838000000     push 0x38                               ; '8'
0x00001b4b      e960fcffff     jmp sym..plt
;-- imp.__sprintf_chk:
0x00001b50      ff2572e42000   jmp qword [reloc.__sprintf_chk]         ; [0x20ffc8:8]=0x1b56 ; "V\x1b"
0x00001b56      6839000000     push 0x39                               ; '9'
0x00001b5b      e950fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001b60      .qword 0x90660020e48a25ff                              ; [13] -r-x section size 8 named .plt.got
0x00001b68      0000           add byte [rax], al
0x00001b6a      0000           add byte [rax], al
0x00001b6c      0000           add byte [rax], al
0x00001b6e      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x00001b70      4157           push r15                                ; [14] -r-x section size 37166 named .text
0x00001b72      4156           push r14
0x00001b74      4189fe         mov r14d, edi
0x00001b77      4155           push r13
0x00001b79      4154           push r12
0x00001b7b      4989f5         mov r13, rsi
0x00001b7e      55             push rbp
0x00001b7f      53             push rbx
0x00001b80      4883ec58       sub rsp, 0x58
0x00001b84      488b3e         mov rdi, qword [rsi]
0x00001b87      64488b042528.  mov rax, qword fs:[0x28]
0x00001b90      4889442448     mov qword [rsp + 0x48], rax
0x00001b95      31c0           xor eax, eax
0x00001b97      e8743f0000     call sym.set_program_name
0x00001b9c      488d351eb200.  lea rsi, [0x0000cdc1]
0x00001ba3      bf06000000     mov edi, 6
0x00001ba8      e8b3feffff     call sym.imp.setlocale
0x00001bad      488d35af9200.  lea rsi, str.usr_local_share_locale     ; 0xae63 ; "/usr/local/share/locale"
0x00001bb4      488d3d7f9200.  lea rdi, [0x0000ae3a]                   ; "coreutils"
0x00001bbb      e8e0fcffff     call sym.imp.bindtextdomain
0x00001bc0      488d3d739200.  lea rdi, [0x0000ae3a]                   ; "coreutils"
0x00001bc7      e8b4fcffff     call sym.imp.textdomain
0x00001bcc      488d3d5d3a00.  lea rdi, sym.close_stdout               ; 0x5630 ; "USH\x83\xec\bH\x8b=k\xaa "
0x00001bd3      e8b8900000     call sym.atexit
0x00001bd8      488d05a1e520.  lea rax, obj.integral_type_size         ; 0x210180
0x00001bdf      488d5024       lea rdx, [rax + 0x24]
0x00001be3      0f1f440000     nop dword [rax + rax]
0x00001be8      c70000000000   mov dword [rax], 0
0x00001bee      4883c004       add rax, 4
0x00001bf2      4839d0         cmp rax, rdx
0x00001bf5      75f1           jne 0x1be8
0x00001bf7      488d0522e520.  lea rax, obj.fp_type_size               ; 0x210120
0x00001bfe      c7057ce52000.  mov dword [0x00210184], 1               ; [0x210184:4]=0
0x00001c08      c70576e52000.  mov dword [0x00210188], 2               ; [0x210188:4]=0
0x00001c12      c70574e52000.  mov dword [0x00210190], 3               ; [0x210190:4]=0
0x00001c1c      c7057ae52000.  mov dword [0x002101a0], 5               ; [0x2101a0:4]=0
0x00001c26      488d5044       lea rdx, [rax + 0x44]
0x00001c2a      660f1f440000   nop word [rax + rax]
0x00001c30      c70000000000   mov dword [rax], 0
0x00001c36      4883c004       add rax, 4
0x00001c3a      4839c2         cmp rdx, rax
0x00001c3d      75f1           jne 0x1c30
0x00001c3f      488d054a1200.  lea rax, sym.format_address_std         ; 0x2e90 ; "H\x83\xec8H\x89\xf9dH\x8b\x04%("
0x00001c46      488d5c2420     lea rbx, [rsp + 0x20]
0x00001c4b      488d2d1ea400.  lea rbp, [0x0000c070]
0x00001c52      c705d4e42000.  mov dword [0x00210130], 6               ; [0x210130:4]=0
0x00001c5c      c705fae42000.  mov dword [0x00210160], 8               ; [0x210160:4]=0
0x00001c66      41bc01000000   mov r12d, 1
0x00001c6c      4889058de520.  mov qword [obj.format_address], rax     ; [0x210200:8]=0
0x00001c73      488d442428     lea rax, [rsp + 0x28]
0x00001c78      c705bee42000.  mov dword [0x00210140], 7               ; [0x210140:4]=0
0x00001c82      48c70543e520.  mov qword [obj.n_specs], 0              ; [0x2101d0:8]=0
0x00001c8d      48c70530e520.  mov qword [obj.n_specs_allocated], 0    ; [0x2101c8:8]=0
0x00001c98      4531ff         xor r15d, r15d
0x00001c9b      48c70532e520.  mov qword [obj.spec], 0                 ; [0x2101d8:8]=0
0x00001ca6      c70574e52000.  mov dword [obj.address_base], 8         ; [0x210224:4]=0
0x00001cb0      c70566e52000.  mov dword [obj.address_pad_len], 7      ; [0x210220:4]=0
0x00001cba      c60551e52000.  mov byte [obj.flag_dump_strings], 0     ; [0x210212:1]=0
0x00001cc1      c6042400       mov byte [rsp], 0
0x00001cc5      4889442408     mov qword [rsp + 8], rax
0x00001cca      660f1f440000   nop word [rax + rax]
0x00001cd0      488d0d09dd20.  lea rcx, obj.long_options               ; 0x20f9e0
0x00001cd7      488d1522a800.  lea rdx, obj.short_options              ; 0xc500 ; "A:aBbcDdeFfHhIij:LlN:OoS:st:vw::Xx"
0x00001cde      4989d8         mov r8, rbx
0x00001ce1      4c89ee         mov rsi, r13
0x00001ce4      4489f7         mov edi, r14d
0x00001ce7      c7442420ffff.  mov dword [rsp + 0x20], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x00001cef      e8fcfbffff     call sym.imp.getopt_long
0x00001cf4      83f8ff         cmp eax, 0xffffffff
0x00001cf7      0f8403040000   je 0x2100
0x00001cfd      0583000000     add eax, 0x83
0x00001d02      3d04010000     cmp eax, 0x104
0x00001d07      0f87cb070000   ja 0x24d8
0x00001d0d      4863448500     movsxd rax, dword [rbp + rax*4]
0x00001d12      4801e8         add rax, rbp
0x00001d15      ffe0           jmp rax
0x00001d17      660f1f840000.  nop word [rax + rax]
0x00001d20      4c8b0df9e220.  mov r9, qword [obj.argmatch_die]        ; [0x210020:8]=0x5280 sym.__argmatch_die
0x00001d27      488b3592e320.  mov rsi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2100c0:8]=0
0x00001d2e      488d152bde20.  lea rdx, obj.endian_args                ; 0x20fb60 ; "-\xaf"
0x00001d35      488d0dbca700.  lea rcx, obj.endian_types               ; 0xc4f8
0x00001d3c      488d3d389100.  lea rdi, str.endian                     ; 0xae7b ; "--endian"
0x00001d43      41b804000000   mov r8d, 4
0x00001d49      e802380000     call sym.__xargmatch_internal
0x00001d4e      488d15a3a700.  lea rdx, obj.endian_types               ; 0xc4f8
0x00001d55      8b0482         mov eax, dword [rdx + rax*4]
0x00001d58      85c0           test eax, eax
0x00001d5a      0f8494030000   je 0x20f4
0x00001d60      83e801         sub eax, 1
0x00001d63      0f8567ffffff   jne 0x1cd0
0x00001d69      c60591e32000.  mov byte [obj.input_swap], 1            ; [0x210101:1]=0
0x00001d70      e95bffffff     jmp 0x1cd0
0x00001d75      0f1f00         nop dword [rax]
0x00001d78      c60592e42000.  mov byte [obj.traditional], 1           ; [0x210211:1]=0
0x00001d7f      e94cffffff     jmp 0x1cd0
0x00001d84      0f1f4000       nop dword [rax]
0x00001d88      488b3d31e320.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2100c0:8]=0
0x00001d8f      4885ff         test rdi, rdi
0x00001d92      0f8444030000   je 0x20dc
0x00001d98      488b4c2408     mov rcx, qword [rsp + 8]
0x00001d9d      4c8d051db000.  lea r8, [0x0000cdc1]
0x00001da4      31f6           xor esi, esi
0x00001da6      ba0a000000     mov edx, 0xa
0x00001dab      e830660000     call sym.xstrtoumax
0x00001db0      85c0           test eax, eax
0x00001db2      0f852c0f0000   jne 0x2ce4
0x00001db8      488b442428     mov rax, qword [rsp + 0x28]
0x00001dbd      c6042401       mov byte [rsp], 1
0x00001dc1      41bf01000000   mov r15d, 1
0x00001dc7      4889442410     mov qword [rsp + 0x10], rax
0x00001dcc      e9fffeffff     jmp 0x1cd0
0x00001dd1      0f1f80000000.  nop dword [rax]
0x00001dd8      c60532e22000.  mov byte [obj.abbreviate_duplicate_blocks], 0 ; [0x210011:1]=1
0x00001ddf      41bf01000000   mov r15d, 1
0x00001de5      e9e6feffff     jmp 0x1cd0
0x00001dea      660f1f440000   nop word [rax + rax]
0x00001df0      488b3dc9e220.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2100c0:8]=0
0x00001df7      41bf01000000   mov r15d, 1
0x00001dfd      e89e1c0000     call sym.decode_format_string
0x00001e02      4121c4         and r12d, eax
0x00001e05      e9c6feffff     jmp 0x1cd0
0x00001e0a      660f1f440000   nop word [rax + rax]
0x00001e10      488d3d8b9000.  lea rdi, [0x0000aea2]                   ; "d2"
0x00001e17      e8841c0000     call sym.decode_format_string
0x00001e1c      4121c4         and r12d, eax
0x00001e1f      e9acfeffff     jmp 0x1cd0
0x00001e24      0f1f4000       nop dword [rax]
0x00001e28      488b3d91e220.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2100c0:8]=0
0x00001e2f      4c8d05b2a600.  lea r8, obj.multipliers.7627            ; 0xc4e8 ; "bEGKkMmPTYZ0"
0x00001e36      488d0dbbe320.  lea rcx, obj.n_bytes_to_skip            ; 0x2101f8
0x00001e3d      31d2           xor edx, edx
0x00001e3f      31f6           xor esi, esi
0x00001e41      e89a650000     call sym.xstrtoumax
0x00001e46      85c0           test eax, eax
0x00001e48      0f85d80e0000   jne 0x2d26
0x00001e4e      41bf01000000   mov r15d, 1
0x00001e54      e977feffff     jmp 0x1cd0
0x00001e59      0f1f80000000.  nop dword [rax]
0x00001e60      488d3d2f9000.  lea rdi, [0x0000ae96]                   ; "dI"
0x00001e67      e8341c0000     call sym.decode_format_string
0x00001e6c      4121c4         and r12d, eax
0x00001e6f      e95cfeffff     jmp 0x1cd0
0x00001e74      0f1f4000       nop dword [rax]
0x00001e78      488d3d269000.  lea rdi, [0x0000aea5]                   ; "x2"
0x00001e7f      e81c1c0000     call sym.decode_format_string
0x00001e84      4121c4         and r12d, eax
0x00001e87      e944feffff     jmp 0x1cd0
0x00001e8c      0f1f4000       nop dword [rax]
0x00001e90      488d3df98f00.  lea rdi, [0x0000ae90]                   ; "fF"
0x00001e97      e8041c0000     call sym.decode_format_string
0x00001e9c      4121c4         and r12d, eax
0x00001e9f      e92cfeffff     jmp 0x1cd0
0x00001ea4      0f1f4000       nop dword [rax]
0x00001ea8      488d3ddb8f00.  lea rdi, [0x0000ae8a]                   ; "u2"
0x00001eaf      e8ec1b0000     call sym.decode_format_string
0x00001eb4      4121c4         and r12d, eax
0x00001eb7      e914feffff     jmp 0x1cd0
0x00001ebc      0f1f4000       nop dword [rax]
0x00001ec0      488d3d898e00.  lea rdi, [0x0000ad50]                   ; "c"
0x00001ec7      e8d41b0000     call sym.decode_format_string
0x00001ecc      4121c4         and r12d, eax
0x00001ecf      e9fcfdffff     jmp 0x1cd0
0x00001ed4      0f1f4000       nop dword [rax]
0x00001ed8      488d3da58f00.  lea rdi, [0x0000ae84]                   ; "o1"
0x00001edf      e8bc1b0000     call sym.decode_format_string
0x00001ee4      4121c4         and r12d, eax
0x00001ee7      e9e4fdffff     jmp 0x1cd0
0x00001eec      0f1f4000       nop dword [rax]
0x00001ef0      488d3d648e00.  lea rdi, [0x0000ad5b]                   ; "a"
0x00001ef7      e8a41b0000     call sym.decode_format_string
0x00001efc      4121c4         and r12d, eax
0x00001eff      e9ccfdffff     jmp 0x1cd0
0x00001f04      0f1f4000       nop dword [rax]
0x00001f08      488b3db1e120.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2100c0:8]=0
0x00001f0f      4885ff         test rdi, rdi
0x00001f12      0f84b4010000   je 0x20cc
0x00001f18      488b4c2408     mov rcx, qword [rsp + 8]
0x00001f1d      4c8d05c4a500.  lea r8, obj.multipliers.7627            ; 0xc4e8 ; "bEGKkMmPTYZ0"
0x00001f24      31d2           xor edx, edx
0x00001f26      31f6           xor esi, esi
0x00001f28      e8b3640000     call sym.xstrtoumax
0x00001f2d      85c0           test eax, eax
0x00001f2f      0f850f0e0000   jne 0x2d44
0x00001f35      488b442428     mov rax, qword [rsp + 0x28]
0x00001f3a      488905d7e220.  mov qword [obj.string_min], rax         ; [0x210218:8]=0
0x00001f41      c605cae22000.  mov byte [obj.flag_dump_strings], 1     ; [0x210212:1]=0
0x00001f48      41bf01000000   mov r15d, 1
0x00001f4e      e97dfdffff     jmp 0x1cd0
0x00001f53      0f1f440000     nop dword [rax + rax]
0x00001f58      488d3d3d8f00.  lea rdi, [0x0000ae9c]                   ; "o4"
0x00001f5f      e83c1b0000     call sym.decode_format_string
0x00001f64      4121c4         and r12d, eax
0x00001f67      e964fdffff     jmp 0x1cd0
0x00001f6c      0f1f4000       nop dword [rax]
0x00001f70      488b3d49e120.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2100c0:8]=0
0x00001f77      4c8d056aa500.  lea r8, obj.multipliers.7627            ; 0xc4e8 ; "bEGKkMmPTYZ0"
0x00001f7e      488d0d63e220.  lea rcx, obj.max_bytes_to_format        ; 0x2101e8
0x00001f85      31d2           xor edx, edx
0x00001f87      31f6           xor esi, esi
0x00001f89      c60560e22000.  mov byte [obj.limit_bytes_to_format], 1 ; [0x2101f0:1]=0
0x00001f90      e84b640000     call sym.xstrtoumax
0x00001f95      85c0           test eax, eax
0x00001f97      0f84b1feffff   je 0x1e4e
0x00001f9d      4c8b051ce120.  mov r8, qword [obj.optarg]              ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2100c0:8]=0
0x00001fa4      8b742420       mov esi, dword [rsp + 0x20]
0x00001fa8      488d0d31da20.  lea rcx, obj.long_options               ; 0x20f9e0
0x00001faf      ba4e000000     mov edx, 0x4e                           ; 'N'
0x00001fb4      89c7           mov edi, eax
0x00001fb6      e875630000     call sym.xstrtol_fatal
0x00001fbb      0f1f440000     nop dword [rax + rax]
0x00001fc0      488d3dd28e00.  lea rdi, [0x0000ae99]                   ; "dL"
0x00001fc7      e8d41a0000     call sym.decode_format_string
0x00001fcc      4121c4         and r12d, eax
0x00001fcf      e9fcfcffff     jmp 0x1cd0
0x00001fd4      0f1f4000       nop dword [rax]
0x00001fd8      488d3db48e00.  lea rdi, [0x0000ae93]                   ; "x4"
0x00001fdf      e8bc1a0000     call sym.decode_format_string
0x00001fe4      4121c4         and r12d, eax
0x00001fe7      e9e4fcffff     jmp 0x1cd0
0x00001fec      0f1f4000       nop dword [rax]
0x00001ff0      488d3d968e00.  lea rdi, [0x0000ae8d]                   ; "fD"
0x00001ff7      e8a41a0000     call sym.decode_format_string
0x00001ffc      4121c4         and r12d, eax
0x00001fff      e9ccfcffff     jmp 0x1cd0
0x00002004      0f1f4000       nop dword [rax]
0x00002008      488d3d788e00.  lea rdi, [0x0000ae87]                   ; "u4"
0x0000200f      e88c1a0000     call sym.decode_format_string
0x00002014      4121c4         and r12d, eax
0x00002017      e9b4fcffff     jmp 0x1cd0
0x0000201c      0f1f4000       nop dword [rax]
0x00002020      488d3d788e00.  lea rdi, [0x0000ae9f]                   ; "o2"
0x00002027      e8741a0000     call sym.decode_format_string
0x0000202c      4121c4         and r12d, eax
0x0000202f      e99cfcffff     jmp 0x1cd0
0x00002034      0f1f4000       nop dword [rax]
0x00002038      488b0581e020.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2100c0:8]=0
0x0000203f      440fb638       movzx r15d, byte [rax]
0x00002043      4180ff6e       cmp r15b, 0x6e
0x00002047      0f84df030000   je 0x242c
0x0000204d      0f8e1f020000   jle 0x2272
0x00002053      4180ff6f       cmp r15b, 0x6f
0x00002057      0f844c020000   je 0x22a9
0x0000205d      4180ff78       cmp r15b, 0x78
0x00002061      0f85550c0000   jne 0x2cbc
0x00002067      488d05220e00.  lea rax, sym.format_address_std         ; 0x2e90 ; "H\x83\xec8H\x89\xf9dH\x8b\x04%("
0x0000206e      c705ace12000.  mov dword [obj.address_base], 0x10      ; [0x210224:4]=0
0x00002078      c7059ee12000.  mov dword [obj.address_pad_len], 6      ; [0x210220:4]=0
0x00002082      41bf01000000   mov r15d, 1
0x00002088      48890571e120.  mov qword [obj.format_address], rax     ; [0x210200:8]=0
0x0000208f      e93cfcffff     jmp 0x1cd0
0x00002094      0f1f4000       nop dword [rax]
0x00002098      488b3d09e020.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100a8:8]=0
0x0000209f      488b0d72df20.  mov rcx, qword [obj.Version]            ; [0x210018:8]=0xc784
0x000020a6      4c8d05fb8d00.  lea r8, str.Jim_Meyering                ; 0xaea8 ; "Jim Meyering"
0x000020ad      488d15828d00.  lea rdx, str.GNU_coreutils              ; 0xae36 ; "GNU coreutils"
0x000020b4      488d35028d00.  lea rsi, [0x0000adbd]                   ; "od"
0x000020bb      4531c9         xor r9d, r9d
0x000020be      31c0           xor eax, eax
0x000020c0      e83b5c0000     call sym.version_etc
0x000020c5      31ff           xor edi, edi
0x000020c7      e824faffff     call sym.imp.exit
0x000020cc      48c70541e120.  mov qword [obj.string_min], 3           ; [0x210218:8]=0
0x000020d7      e965feffff     jmp 0x1f41
0x000020dc      c6042401       mov byte [rsp], 1
0x000020e0      41bf01000000   mov r15d, 1
0x000020e6      48c744241020.  mov qword [rsp + 0x10], 0x20            ; [0x20:8]=64 ; "@"
0x000020ef      e9dcfbffff     jmp 0x1cd0
0x000020f4      c60506e02000.  mov byte [obj.input_swap], 0            ; [0x210101:1]=0
0x000020fb      e9d0fbffff     jmp 0x1cd0
0x00002100      4584e4         test r12b, r12b
0x00002103      0f84cd010000   je 0x22d6
0x00002109      803d02e12000.  cmp byte [obj.flag_dump_strings], 0     ; [0x210212:1]=0
0x00002110      740e           je 0x2120
0x00002112      48833db6e020.  cmp qword [obj.n_specs], 0              ; [0x2101d0:8]=0
0x0000211a      0f85e20b0000   jne 0x2d02
0x00002120      48630591df20.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2100b8:4]=0
0x00002127      0fb615e3e020.  movzx edx, byte [obj.traditional]       ; [0x210211:1]=0
0x0000212e      4129c6         sub r14d, eax
0x00002131      4584ff         test r15b, r15b
0x00002134      0f8415030000   je 0x244f
0x0000213a      84d2           test dl, dl
0x0000213c      0f8573050000   jne 0x26b5
0x00002142      803dc7e02000.  cmp byte [obj.flag_pseudo_start], 0     ; [0x210210:1]=0
0x00002149      7422           je 0x216d
0x0000214b      488d052e0d00.  lea rax, sym.format_address_none        ; 0x2e80
0x00002152      483905a7e020.  cmp qword [obj.format_address], rax     ; [0x210200:8]=0
0x00002159      0f844a070000   je 0x28a9
0x0000215f      488d050a2b00.  lea rax, sym.format_address_label       ; 0x4c70 ; "US\x89\xf5\xbe "
0x00002166      48890593e020.  mov qword [obj.format_address], rax     ; [0x210200:8]=0
0x0000216d      803d7ce02000.  cmp byte [obj.limit_bytes_to_format], 0 ; [0x2101f0:1]=0
0x00002174      7426           je 0x219c
0x00002176      31d2           xor edx, edx
0x00002178      488b0569e020.  mov rax, qword [obj.max_bytes_to_format] ; [0x2101e8:8]=0
0x0000217f      48030572e020.  add rax, qword [obj.n_bytes_to_skip]    ; [0x2101f8:8]=0
0x00002186      0f82d40a0000   jb 0x2c60
0x0000218c      4885d2         test rdx, rdx
0x0000218f      4889054ae020.  mov qword [obj.end_offset], rax         ; [0x2101e0:8]=0
0x00002196      0f85a00a0000   jne 0x2c3c
0x0000219c      48833d2ce020.  cmp qword [obj.n_specs], 0              ; [0x2101d0:8]=0
0x000021a4      0f84b9040000   je 0x2663
0x000021aa      4585f6         test r14d, r14d
0x000021ad      0f8e9d040000   jle 0x2650
0x000021b3      486305fede20.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2100b8:4]=0
0x000021ba      498d44c500     lea rax, [r13 + rax*8]
0x000021bf      488905eadf20.  mov qword [obj.file_list], rax          ; [0x2101b0:8]=0
0x000021c6      e815240000     call sym.open_next_file
0x000021cb      48833dd5df20.  cmp qword [obj.in_stream], 0            ; [0x2101a8:8]=0
0x000021d3      4189c5         mov r13d, eax
0x000021d6      0f8436020000   je 0x2412
0x000021dc      488b3d15e020.  mov rdi, qword [obj.n_bytes_to_skip]    ; [0x2101f8:8]=0
0x000021e3      e818250000     call sym.skip
0x000021e8      4121c5         and r13d, eax
0x000021eb      48833db5df20.  cmp qword [obj.in_stream], 0            ; [0x2101a8:8]=0
0x000021f3      0f8419020000   je 0x2412
0x000021f9      31c0           xor eax, eax
0x000021fb      803d0ee02000.  cmp byte [obj.flag_pseudo_start], 0     ; [0x210210:1]=0
0x00002202      0f85f8040000   jne 0x2700
0x00002208      4c8b0dc1df20.  mov r9, qword [obj.n_specs]             ; [0x2101d0:8]=0
0x0000220f      4c8b15c2df20.  mov r10, qword [obj.spec]               ; [0x2101d8:8]=0
0x00002216      4c8d1dc3a300.  lea r11, obj.width_bytes                ; 0xc5e0
0x0000221d      488905e4df20.  mov qword [obj.pseudo_offset], rax      ; [0x210208:8]=0
0x00002224      31ff           xor edi, edi
0x00002226      41b801000000   mov r8d, 1
0x0000222c      4c39cf         cmp rdi, r9
0x0000222f      0f84ad020000   je 0x24e2
0x00002235      486bc728       imul rax, rdi, 0x28
0x00002239      4d63c0         movsxd r8, r8d
0x0000223c      418b440204     mov eax, dword [r10 + rax + 4]
0x00002241      49633483       movsxd rsi, dword [r11 + rax*4]
0x00002245      4c89c0         mov rax, r8
0x00002248      4889f1         mov rcx, rsi
0x0000224b      eb06           jmp 0x2253
0x0000224d      0f1f00         nop dword [rax]
0x00002250      4889d1         mov rcx, rdx
0x00002253      31d2           xor edx, edx
0x00002255      48f7f1         div rcx
0x00002258      4889c8         mov rax, rcx
0x0000225b      4885d2         test rdx, rdx
0x0000225e      75f0           jne 0x2250
0x00002260      4889f0         mov rax, rsi
0x00002263      31d2           xor edx, edx
0x00002265      4883c701       add rdi, 1
0x00002269      48f7f1         div rcx
0x0000226c      440fafc0       imul r8d, eax
0x00002270      ebba           jmp 0x222c
0x00002272      4180ff64       cmp r15b, 0x64
0x00002276      0f85400a0000   jne 0x2cbc
0x0000227c      488d050d0c00.  lea rax, sym.format_address_std         ; 0x2e90 ; "H\x83\xec8H\x89\xf9dH\x8b\x04%("
0x00002283      c70597df2000.  mov dword [obj.address_base], 0xa       ; [0x210224:4]=0
0x0000228d      c70589df2000.  mov dword [obj.address_pad_len], 7      ; [0x210220:4]=0
0x00002297      41bf01000000   mov r15d, 1
0x0000229d      4889055cdf20.  mov qword [obj.format_address], rax     ; [0x210200:8]=0
0x000022a4      e927faffff     jmp 0x1cd0
0x000022a9      488d05e00b00.  lea rax, sym.format_address_std         ; 0x2e90 ; "H\x83\xec8H\x89\xf9dH\x8b\x04%("
0x000022b0      c7056adf2000.  mov dword [obj.address_base], 8         ; [0x210224:4]=0
0x000022ba      c7055cdf2000.  mov dword [obj.address_pad_len], 7      ; [0x210220:4]=0
0x000022c4      41bf01000000   mov r15d, 1
0x000022ca      4889052fdf20.  mov qword [obj.format_address], rax     ; [0x210200:8]=0
0x000022d1      e9faf9ffff     jmp 0x1cd0
0x000022d6      b801000000     mov eax, 1
0x000022db      488b5c2448     mov rbx, qword [rsp + 0x48]
0x000022e0      6448331c2528.  xor rbx, qword fs:[0x28]
0x000022e9      0f85c8090000   jne 0x2cb7
0x000022ef      4883c458       add rsp, 0x58
0x000022f3      5b             pop rbx
0x000022f4      5d             pop rbp
0x000022f5      415c           pop r12
0x000022f7      415d           pop r13
0x000022f9      415e           pop r14
0x000022fb      415f           pop r15
0x000022fd      c3             ret
0x000022fe      b802000000     mov eax, 2
0x00002303      31c9           xor ecx, ecx
0x00002305      48f7e7         mul rdi
0x00002308      0f8061090000   jo 0x2c6f
0x0000230e      4885c0         test rax, rax
0x00002311      0f8853090000   js 0x2c6a
0x00002317      4885c9         test rcx, rcx
0x0000231a      0f854a090000   jne 0x2c6a
0x00002320      4801ff         add rdi, rdi
0x00002323      e8385b0000     call sym.xmalloc
0x00002328      0fb61dc1de20.  movzx ebx, byte [obj.limit_bytes_to_format] ; [0x2101f0:1]=0
0x0000232f      488b3d8ade20.  mov rdi, qword [obj.bytes_per_block]    ; [0x2101c0:8]=0
0x00002336      4889442430     mov qword [rsp + 0x30], rax
0x0000233b      4c8b35b6de20.  mov r14, qword [obj.n_bytes_to_skip]    ; [0x2101f8:8]=0
0x00002342      4801f8         add rax, rdi
0x00002345      84db           test bl, bl
0x00002347      4889442438     mov qword [rsp + 0x38], rax
0x0000234c      0f847e050000   je 0x28d0
0x00002352      4c8d642428     lea r12, [rsp + 0x28]
0x00002357      44882c24       mov byte [rsp], r13b
0x0000235b      eb5e           jmp 0x23bb
0x0000235d      400fb6d5       movzx edx, bpl
0x00002361      488b3d58de20.  mov rdi, qword [obj.bytes_per_block]    ; [0x2101c0:8]=0
0x00002368      4c29f0         sub rax, r14
0x0000236b      4c8b6cd430     mov r13, qword [rsp + rdx*8 + 0x30]
0x00002370      4989d7         mov r15, rdx
0x00002373      4c89e2         mov rdx, r12
0x00002376      4839f8         cmp rax, rdi
0x00002379      480f46f8       cmovbe rdi, rax
0x0000237d      4c89ee         mov rsi, r13
0x00002380      e81b290000     call sym.read_block
0x00002385      488b742428     mov rsi, qword [rsp + 0x28]
0x0000238a      21c3           and ebx, eax
0x0000238c      483b352dde20.  cmp rsi, qword [obj.bytes_per_block]    ; [0x2101c0:8]=0
0x00002393      0f829c050000   jb 0x2935
0x00002399      0f85da080000   jne 0x2c79
0x0000239f      83f501         xor ebp, 1
0x000023a2      4c89f7         mov rdi, r14
0x000023a5      4c89e9         mov rcx, r13
0x000023a8      400fb6c5       movzx eax, bpl
0x000023ac      488b54c430     mov rdx, qword [rsp + rax*8 + 0x30]
0x000023b1      e88a250000     call sym.write_block
0x000023b6      4c03742428     add r14, qword [rsp + 0x28]
0x000023bb      488b051ede20.  mov rax, qword [obj.end_offset]         ; [0x2101e0:8]=0
0x000023c2      4c39f0         cmp rax, r14
0x000023c5      7796           ja 0x235d
0x000023c7      440fb62c24     movzx r13d, byte [rsp]
0x000023cc      48c744242800.  mov qword [rsp + 0x28], 0
0x000023d5      be0a000000     mov esi, 0xa
0x000023da      4c89f7         mov rdi, r14
0x000023dd      ff151dde2000   call qword [obj.format_address]         ; [0x210200:8]=0
0x000023e3      803d06de2000.  cmp byte [obj.limit_bytes_to_format], 0 ; [0x2101f0:1]=0
0x000023ea      7412           je 0x23fe
0x000023ec      4c3b35eddd20.  cmp r14, qword [obj.end_offset]         ; [0x2101e0:8]=0
0x000023f3      7209           jb 0x23fe
0x000023f5      31ff           xor edi, edi
0x000023f7      e894200000     call sym.check_and_close
0x000023fc      21c3           and ebx, eax
0x000023fe      488b7c2430     mov rdi, qword [rsp + 0x30]
0x00002403      0fb6db         movzx ebx, bl
0x00002406      e8c5f3ffff     call sym.imp.free
0x0000240b      4121dd         and r13d, ebx
0x0000240e      4183e501       and r13d, 1
0x00002412      803d8bdd2000.  cmp byte [obj.have_read_stdin], 0       ; [0x2101a4:1]=0
0x00002419      0f8555020000   jne 0x2674
0x0000241f      4183f501       xor r13d, 1
0x00002423      410fb6c5       movzx eax, r13b
0x00002427      e9affeffff     jmp 0x22db
0x0000242c      488d054d0a00.  lea rax, sym.format_address_none        ; 0x2e80
0x00002433      c705e3dd2000.  mov dword [obj.address_pad_len], 0      ; [0x210220:4]=0
0x0000243d      41bf01000000   mov r15d, 1
0x00002443      488905b6dd20.  mov qword [obj.format_address], rax     ; [0x210200:8]=0
0x0000244a      e981f8ffff     jmp 0x1cd0
0x0000244f      4183fe02       cmp r14d, 2
0x00002453      0f84c7030000   je 0x2820
0x00002459      4183fe03       cmp r14d, 3
0x0000245d      0f8453030000   je 0x27b6
0x00002463      4183fe01       cmp r14d, 1
0x00002467      0f8438050000   je 0x29a5
0x0000246d      4183fe01       cmp r14d, 1
0x00002471      0f8ecbfcffff   jle 0x2142
0x00002477      84d2           test dl, dl
0x00002479      0f84c3fcffff   je 0x2142
0x0000247f      498b7cc508     mov rdi, qword [r13 + rax*8 + 8]
0x00002484      e897530000     call sym.quote
0x00002489      488d35258a00.  lea rsi, str.extra_operand__s           ; 0xaeb5 ; "extra operand %s"
0x00002490      4889c3         mov rbx, rax
0x00002493      ba05000000     mov edx, 5
0x00002498      31ff           xor edi, edi
0x0000249a      e811f4ffff     call sym.imp.dcgettext
0x0000249f      4889d9         mov rcx, rbx
0x000024a2      4889c2         mov rdx, rax
0x000024a5      31f6           xor esi, esi
0x000024a7      31ff           xor edi, edi
0x000024a9      31c0           xor eax, eax
0x000024ab      e8f0f5ffff     call sym.imp.error
0x000024b0      488d35619a00.  lea rsi, str.compatibility_mode_supports_at_most_one_file ; 0xbf18 ; "compatibility mode supports at most one file"
0x000024b7      ba05000000     mov edx, 5
0x000024bc      31ff           xor edi, edi
0x000024be      e8edf3ffff     call sym.imp.dcgettext
0x000024c3      488d1516a300.  lea rdx, [0x0000c7e0]                   ; "%s"
0x000024ca      4889c1         mov rcx, rax
0x000024cd      31f6           xor esi, esi
0x000024cf      31ff           xor edi, edi
0x000024d1      31c0           xor eax, eax
0x000024d3      e8c8f5ffff     call sym.imp.error
0x000024d8      bf01000000     mov edi, 1
0x000024dd      e88e280000     call sym.usage
0x000024e2      803c2400       cmp byte [rsp], 0
0x000024e6      0f859c020000   jne 0x2788
0x000024ec      4183f80f       cmp r8d, 0xf
0x000024f0      0f8f69050000   jg 0x2a5f
0x000024f6      b810000000     mov eax, 0x10
0x000024fb      99             cdq
0x000024fc      41f7f8         idiv r8d
0x000024ff      410fafc0       imul eax, r8d
0x00002503      4898           cdqe
0x00002505      488905b4dc20.  mov qword [obj.bytes_per_block], rax    ; [0x2101c0:8]=0
0x0000250c      4d6bc928       imul r9, r9, 0x28
0x00002510      498d4a04       lea rcx, [r10 + 4]
0x00002514      488b3da5dc20.  mov rdi, qword [obj.bytes_per_block]    ; [0x2101c0:8]=0
0x0000251b      4531c0         xor r8d, r8d
0x0000251e      4889ce         mov rsi, rcx
0x00002521      4f8d4c0a04     lea r9, [r10 + r9 + 4]
0x00002526      4c8d15b3a000.  lea r10, obj.width_bytes                ; 0xc5e0
0x0000252d      eb24           jmp 0x2553
0x0000252f      8b06           mov eax, dword [rsi]
0x00002531      31d2           xor edx, edx
0x00002533      4d631c82       movsxd r11, dword [r10 + rax*4]
0x00002537      4889f8         mov rax, rdi
0x0000253a      49f7f3         div r11
0x0000253d      8b5618         mov edx, dword [rsi + 0x18]
0x00002540      83c201         add edx, 1
0x00002543      0fafc2         imul eax, edx
0x00002546      4898           cdqe
0x00002548      4939c0         cmp r8, rax
0x0000254b      4c0f42c0       cmovb r8, rax
0x0000254f      4883c628       add rsi, 0x28
0x00002553      4939f1         cmp r9, rsi
0x00002556      75d7           jne 0x252f
0x00002558      4c8d1581a000.  lea r10, obj.width_bytes                ; 0xc5e0
0x0000255f      eb1e           jmp 0x257f
0x00002561      8b01           mov eax, dword [rcx]
0x00002563      31d2           xor edx, edx
0x00002565      4883c128       add rcx, 0x28
0x00002569      4d630c82       movsxd r9, dword [r10 + rax*4]
0x0000256d      4889f8         mov rax, rdi
0x00002570      49f7f1         div r9
0x00002573      4489c2         mov edx, r8d
0x00002576      0faf41f0       imul eax, dword [rcx - 0x10]
0x0000257a      29c2           sub edx, eax
0x0000257c      8951f4         mov dword [rcx - 0xc], edx
0x0000257f      4839ce         cmp rsi, rcx
0x00002582      75dd           jne 0x2561
0x00002584      0fb62d87dc20.  movzx ebp, byte [obj.flag_dump_strings] ; [0x210212:1]=0
0x0000258b      4084ed         test bpl, bpl
0x0000258e      0f846afdffff   je 0x22fe
0x00002594      48833d7cdc20.  cmp qword [obj.string_min], 0x64        ; [0x210218:8]=0
0x0000259c      bf64000000     mov edi, 0x64                           ; 'd'
0x000025a1      480f433d6fdc.  cmovae rdi, qword [obj.string_min]
0x000025a9      48897c2428     mov qword [rsp + 0x28], rdi
0x000025ae      e8ad580000     call sym.xmalloc
0x000025b3      4c8b353edc20.  mov r14, qword [obj.n_bytes_to_skip]    ; [0x2101f8:8]=0
0x000025ba      48890424       mov qword [rsp], rax
0x000025be      488d442428     lea rax, [rsp + 0x28]
0x000025c3      44886c2408     mov byte [rsp + 8], r13b
0x000025c8      4889442410     mov qword [rsp + 0x10], rax
0x000025cd      803d1cdc2000.  cmp byte [obj.limit_bytes_to_format], 0 ; [0x2101f0:1]=0
0x000025d4      7423           je 0x25f9
0x000025d6      488b153bdc20.  mov rdx, qword [obj.string_min]         ; [0x210218:8]=0
0x000025dd      488b05fcdb20.  mov rax, qword [obj.end_offset]         ; [0x2101e0:8]=0
0x000025e4      4839d0         cmp rax, rdx
0x000025e7      0f82b5050000   jb 0x2ba2
0x000025ed      4829d0         sub rax, rdx
0x000025f0      4c39f0         cmp rax, r14
0x000025f3      0f86a9050000   jbe 0x2ba2
0x000025f9      4c8b2c24       mov r13, qword [rsp]
0x000025fd      4d89f4         mov r12, r14
0x00002600      4d29f5         sub r13, r14
0x00002603      eb37           jmp 0x263c
0x00002605      4889df         mov rdi, rbx
0x00002608      4983c401       add r12, 1
0x0000260c      e8cf220000     call sym.read_char
0x00002611      448b7c2420     mov r15d, dword [rsp + 0x20]
0x00002616      21c5           and ebp, eax
0x00002618      4585ff         test r15d, r15d
0x0000261b      0f8822020000   js 0x2843
0x00002621      e81af5ffff     call sym.imp.__ctype_b_loc
0x00002626      488b30         mov rsi, qword [rax]
0x00002629      4963cf         movsxd rcx, r15d
0x0000262c      f6444e0140     test byte [rsi + rcx*2 + 1], 0x40
0x00002631      0f84e1010000   je 0x2818
0x00002637      47887c25ff     mov byte [r13 + r12 - 1], r15b
0x0000263c      4c89e0         mov rax, r12
0x0000263f      4c29f0         sub rax, r14
0x00002642      483905cfdb20.  cmp qword [obj.string_min], rax         ; [0x210218:8]=0
0x00002649      77ba           ja 0x2605
0x0000264b      e913010000     jmp 0x2763
0x00002650      488d0529d520.  lea rax, obj.default_file_list          ; 0x20fb80 ; "9\xd1"
0x00002657      48890552db20.  mov qword [obj.file_list], rax          ; [0x2101b0:8]=0
0x0000265e      e963fbffff     jmp 0x21c6
0x00002663      488d3d5c8800.  lea rdi, [0x0000aec6]                   ; "oS"
0x0000266a      e831140000     call sym.decode_format_string
0x0000266f      e936fbffff     jmp 0x21aa
0x00002674      488b3d35da20.  mov rdi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x2100b0:8]=0
0x0000267b      e880610000     call sym.rpl_fclose
0x00002680      83c001         add eax, 1
0x00002683      0f8596fdffff   jne 0x241f
0x00002689      488d35fa8600.  lea rsi, str.standard_input             ; 0xad8a ; "standard input"
0x00002690      ba05000000     mov edx, 5
0x00002695      31ff           xor edi, edi
0x00002697      e814f2ffff     call sym.imp.dcgettext
0x0000269c      4889c3         mov rbx, rax
0x0000269f      e84cf1ffff     call sym.imp.__errno_location
0x000026a4      8b30           mov esi, dword [rax]
0x000026a6      4889da         mov rdx, rbx
0x000026a9      bf01000000     mov edi, 1
0x000026ae      31c0           xor eax, eax
0x000026b0      e8ebf3ffff     call sym.imp.error
0x000026b5      4183fe02       cmp r14d, 2
0x000026b9      0f8461010000   je 0x2820
0x000026bf      4183fe03       cmp r14d, 3
0x000026c3      0f84ed000000   je 0x27b6
0x000026c9      4183fe01       cmp r14d, 1
0x000026cd      0f859afdffff   jne 0x246d
0x000026d3      498b7cc500     mov rdi, qword [r13 + rax*8]
0x000026d8      4889de         mov rsi, rbx
0x000026db      e8e0080000     call sym.parse_old_offset
0x000026e0      84c0           test al, al
0x000026e2      0f84d3020000   je 0x29bb
0x000026e8      488b442420     mov rax, qword [rsp + 0x20]
0x000026ed      4983c508       add r13, 8
0x000026f1      4531f6         xor r14d, r14d
0x000026f4      488905fdda20.  mov qword [obj.n_bytes_to_skip], rax    ; [0x2101f8:8]=0
0x000026fb      e942faffff     jmp 0x2142
0x00002700      488b442418     mov rax, qword [rsp + 0x18]
0x00002705      482b05ecda20.  sub rax, qword [obj.n_bytes_to_skip]    ; [0x2101f8:8]=0
0x0000270c      e9f7faffff     jmp 0x2208
0x00002711      488b742410     mov rsi, qword [rsp + 0x10]
0x00002716      488b3c24       mov rdi, qword [rsp]
0x0000271a      e8a1580000     call sym.x2realloc
0x0000271f      48890424       mov qword [rsp], rax
0x00002723      4889df         mov rdi, rbx
0x00002726      4983c401       add r12, 1
0x0000272a      e8b1210000     call sym.read_char
0x0000272f      448b7c2420     mov r15d, dword [rsp + 0x20]
0x00002734      21c5           and ebp, eax
0x00002736      4585ff         test r15d, r15d
0x00002739      0f8804010000   js 0x2843
0x0000273f      0f8434030000   je 0x2a79
0x00002745      e8f6f3ffff     call sym.imp.__ctype_b_loc
0x0000274a      488b30         mov rsi, qword [rax]
0x0000274d      4963d7         movsxd rdx, r15d
0x00002750      f644560140     test byte [rsi + rdx*2 + 1], 0x40
0x00002755      0f84bd000000   je 0x2818
0x0000275b      488b0424       mov rax, qword [rsp]
0x0000275f      46883c28       mov byte [rax + r13], r15b
0x00002763      4d89e5         mov r13, r12
0x00002766      4d29f5         sub r13, r14
0x00002769      803d80da2000.  cmp byte [obj.limit_bytes_to_format], 0 ; [0x2101f0:1]=0
0x00002770      740d           je 0x277f
0x00002772      4c3b2567da20.  cmp r12, qword [obj.end_offset]         ; [0x2101e0:8]=0
0x00002779      0f83fa020000   jae 0x2a79
0x0000277f      4c3b6c2428     cmp r13, qword [rsp + 0x28]
0x00002784      759d           jne 0x2723
0x00002786      eb89           jmp 0x2711
0x00002788      488b742410     mov rsi, qword [rsp + 0x10]
0x0000278d      4963e8         movsxd rbp, r8d
0x00002790      4885f6         test rsi, rsi
0x00002793      4889f0         mov rax, rsi
0x00002796      0f842a020000   je 0x29c6
0x0000279c      31d2           xor edx, edx
0x0000279e      48f7f5         div rbp
0x000027a1      4885d2         test rdx, rdx
0x000027a4      0f851c020000   jne 0x29c6
0x000027aa      4889350fda20.  mov qword [obj.bytes_per_block], rsi    ; [0x2101c0:8]=0
0x000027b1      e956fdffff     jmp 0x250c
0x000027b6      84d2           test dl, dl
0x000027b8      41be03000000   mov r14d, 3
0x000027be      0f847ef9ffff   je 0x2142
0x000027c4      498b7cc508     mov rdi, qword [r13 + rax*8 + 8]
0x000027c9      4889de         mov rsi, rbx
0x000027cc      e8ef070000     call sym.parse_old_offset
0x000027d1      84c0           test al, al
0x000027d3      0f85e6030000   jne 0x2bbf
0x000027d9      41be03000000   mov r14d, 3
0x000027df      803d2bda2000.  cmp byte [obj.traditional], 0           ; [0x210211:1]=0
0x000027e6      0f8456f9ffff   je 0x2142
0x000027ec      486305c5d820.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2100b8:4]=0
0x000027f3      e987fcffff     jmp 0x247f
0x000027f8      31ff           xor edi, edi
0x000027fa      e871250000     call sym.usage
0x000027ff      488b4128       mov rax, qword [rcx + 0x28]
0x00002803      483b4130       cmp rax, qword [rcx + 0x30]
0x00002807      0f830d040000   jae 0x2c1a
0x0000280d      488d5001       lea rdx, [rax + 1]
0x00002811      48895128       mov qword [rcx + 0x28], rdx
0x00002815      c6000a         mov byte [rax], 0xa
0x00002818      4d89e6         mov r14, r12
0x0000281b      e9adfdffff     jmp 0x25cd
0x00002820      84d2           test dl, dl
0x00002822      498b7cc508     mov rdi, qword [r13 + rax*8 + 8]
0x00002827      7532           jne 0x285b
0x00002829      0fbe07         movsx eax, byte [rdi]
0x0000282c      3c2b           cmp al, 0x2b
0x0000282e      742b           je 0x285b
0x00002830      83e830         sub eax, 0x30
0x00002833      83f809         cmp eax, 9
0x00002836      7623           jbe 0x285b
0x00002838      41be02000000   mov r14d, 2
0x0000283e      e9fff8ffff     jmp 0x2142
0x00002843      488b3c24       mov rdi, qword [rsp]
0x00002847      440fb66c2408   movzx r13d, byte [rsp + 8]
0x0000284d      e87eefffff     call sym.imp.free
0x00002852      400fb6dd       movzx ebx, bpl
0x00002856      e9b0fbffff     jmp 0x240b
0x0000285b      488d442428     lea rax, [rsp + 0x28]
0x00002860      4889c6         mov rsi, rax
0x00002863      e858070000     call sym.parse_old_offset
0x00002868      84c0           test al, al
0x0000286a      0f84fe010000   je 0x2a6e
0x00002870      803d9ad92000.  cmp byte [obj.traditional], 0           ; [0x210211:1]=0
0x00002877      0f85e0020000   jne 0x2b5d
0x0000287d      488b442428     mov rax, qword [rsp + 0x28]
0x00002882      41be01000000   mov r14d, 1
0x00002888      48890569d920.  mov qword [obj.n_bytes_to_skip], rax    ; [0x2101f8:8]=0
0x0000288f      48630522d820.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2100b8:4]=0
0x00002896      498b54c500     mov rdx, qword [r13 + rax*8]
0x0000289b      498954c508     mov qword [r13 + rax*8 + 8], rdx
0x000028a0      4983c508       add r13, 8
0x000028a4      e999f8ffff     jmp 0x2142
0x000028a9      488d05402300.  lea rax, sym.format_address_paren       ; 0x4bf0 ; "USH\x89\xfd\x89\xf3H\x83\xec\bH\x8b=\xa6\xb4 "
0x000028b0      c7056ad92000.  mov dword [obj.address_base], 8         ; [0x210224:4]=0
0x000028ba      c7055cd92000.  mov dword [obj.address_pad_len], 7      ; [0x210220:4]=0
0x000028c4      48890535d920.  mov qword [obj.format_address], rax     ; [0x210200:8]=0
0x000028cb      e99df8ffff     jmp 0x216d
0x000028d0      488d442428     lea rax, [rsp + 0x28]
0x000028d5      4489e3         mov ebx, r12d
0x000028d8      31ed           xor ebp, ebp
0x000028da      4531ff         xor r15d, r15d
0x000028dd      44882c24       mov byte [rsp], r13b
0x000028e1      4989c4         mov r12, rax
0x000028e4      eb2c           jmp 0x2912
0x000028e6      0f85ac030000   jne 0x2c98
0x000028ec      83f501         xor ebp, 1
0x000028ef      4c89f7         mov rdi, r14
0x000028f2      4c89e9         mov rcx, r13
0x000028f5      400fb6c5       movzx eax, bpl
0x000028f9      488b54c430     mov rdx, qword [rsp + rax*8 + 0x30]
0x000028fe      4989c7         mov r15, rax
0x00002901      e83a200000     call sym.write_block
0x00002906      4c03742428     add r14, qword [rsp + 0x28]
0x0000290b      488b3daed820.  mov rdi, qword [obj.bytes_per_block]    ; [0x2101c0:8]=0
0x00002912      4963c7         movsxd rax, r15d
0x00002915      4c89e2         mov rdx, r12
0x00002918      4c8b6cc430     mov r13, qword [rsp + rax*8 + 0x30]
0x0000291d      4c89ee         mov rsi, r13
0x00002920      e87b230000     call sym.read_block
0x00002925      488b742428     mov rsi, qword [rsp + 0x28]
0x0000292a      21c3           and ebx, eax
0x0000292c      483b358dd820.  cmp rsi, qword [obj.bytes_per_block]    ; [0x2101c0:8]=0
0x00002933      73b1           jae 0x28e6
0x00002935      4885f6         test rsi, rsi
0x00002938      440fb62c24     movzx r13d, byte [rsp]
0x0000293d      4989f0         mov r8, rsi
0x00002940      0f848ffaffff   je 0x23d5
0x00002946      4c8b1583d820.  mov r10, qword [obj.n_specs]            ; [0x2101d0:8]=0
0x0000294d      4c8b2584d820.  mov r12, qword [obj.spec]               ; [0x2101d8:8]=0
0x00002954      4c8d1d859c00.  lea r11, obj.width_bytes                ; 0xc5e0
0x0000295b      4531c9         xor r9d, r9d
0x0000295e      be01000000     mov esi, 1
0x00002963      4d39d1         cmp r9, r10
0x00002966      4863f6         movsxd rsi, esi
0x00002969      0f849f000000   je 0x2a0e
0x0000296f      496bc128       imul rax, r9, 0x28
0x00002973      418b440404     mov eax, dword [r12 + rax + 4]
0x00002978      49633c83       movsxd rdi, dword [r11 + rax*4]
0x0000297c      4889f0         mov rax, rsi
0x0000297f      4889f9         mov rcx, rdi
0x00002982      eb03           jmp 0x2987
0x00002984      4889d1         mov rcx, rdx
0x00002987      31d2           xor edx, edx
0x00002989      48f7f1         div rcx
0x0000298c      4889c8         mov rax, rcx
0x0000298f      4885d2         test rdx, rdx
0x00002992      75f0           jne 0x2984
0x00002994      4889f8         mov rax, rdi
0x00002997      31d2           xor edx, edx
0x00002999      4983c101       add r9, 1
0x0000299d      48f7f1         div rcx
0x000029a0      0faff0         imul esi, eax
0x000029a3      ebbe           jmp 0x2963
0x000029a5      84d2           test dl, dl
0x000029a7      498b4cc500     mov rcx, qword [r13 + rax*8]
0x000029ac      0f8521fdffff   jne 0x26d3
0x000029b2      80392b         cmp byte [rcx], 0x2b
0x000029b5      0f8418fdffff   je 0x26d3
0x000029bb      41be01000000   mov r14d, 1
0x000029c1      e97cf7ffff     jmp 0x2142
0x000029c6      488d35a39500.  lea rsi, str.warning:_invalid_width__lu__using__d_instead ; 0xbf70 ; "warning: invalid width %lu; using %d instead"
0x000029cd      ba05000000     mov edx, 5
0x000029d2      31ff           xor edi, edi
0x000029d4      44890424       mov dword [rsp], r8d
0x000029d8      e8d3eeffff     call sym.imp.dcgettext
0x000029dd      448b0424       mov r8d, dword [rsp]
0x000029e1      488b4c2410     mov rcx, qword [rsp + 0x10]
0x000029e6      4889c2         mov rdx, rax
0x000029e9      31f6           xor esi, esi
0x000029eb      31ff           xor edi, edi
0x000029ed      31c0           xor eax, eax
0x000029ef      e8acf0ffff     call sym.imp.error
0x000029f4      48892dc5d720.  mov qword [obj.bytes_per_block], rbp    ; [0x2101c0:8]=0
0x000029fb      4c8b0dced720.  mov r9, qword [obj.n_specs]             ; [0x2101d0:8]=0
0x00002a02      4c8b15cfd720.  mov r10, qword [obj.spec]               ; [0x2101d8:8]=0
0x00002a09      e9fefaffff     jmp 0x250c
0x00002a0e      4a8d4406ff     lea rax, [rsi + r8 - 1]
0x00002a13      31d2           xor edx, edx
0x00002a15      4e8b64fc30     mov r12, qword [rsp + r15*8 + 0x30]
0x00002a1a      4c890424       mov qword [rsp], r8
0x00002a1e      48f7f6         div rsi
0x00002a21      4b8d3c04       lea rdi, [r12 + r8]
0x00002a25      480fafc6       imul rax, rsi
0x00002a29      31f6           xor esi, esi
0x00002a2b      4c29c0         sub rax, r8
0x00002a2e      4889c2         mov rdx, rax
0x00002a31      e84aefffff     call sym.imp.memset
0x00002a36      89e8           mov eax, ebp
0x00002a38      4c8b0424       mov r8, qword [rsp]
0x00002a3c      4c89f7         mov rdi, r14
0x00002a3f      83f001         xor eax, 1
0x00002a42      4c89e1         mov rcx, r12
0x00002a45      0fb6c0         movzx eax, al
0x00002a48      488b54c430     mov rdx, qword [rsp + rax*8 + 0x30]
0x00002a4d      4c89c6         mov rsi, r8
0x00002a50      e8eb1e0000     call sym.write_block
0x00002a55      4c03742428     add r14, qword [rsp + 0x28]
0x00002a5a      e976f9ffff     jmp 0x23d5
0x00002a5f      4d63c0         movsxd r8, r8d
0x00002a62      4c890557d720.  mov qword [obj.bytes_per_block], r8     ; [0x2101c0:8]=0
0x00002a69      e99efaffff     jmp 0x250c
0x00002a6e      41be02000000   mov r14d, 2
0x00002a74      e966fdffff     jmp 0x27df
0x00002a79      4c8b3c24       mov r15, qword [rsp]
0x00002a7d      4c89ef         mov rdi, r13
0x00002a80      be20000000     mov esi, 0x20                           ; "@"
0x00002a85      48f7d7         not rdi
0x00002a88      4c01e7         add rdi, r12
0x00002a8b      43c6042f00     mov byte [r15 + r13], 0
0x00002a90      4d89fd         mov r13, r15
0x00002a93      ff1567d72000   call qword [obj.format_address]         ; [0x210200:8]=0
0x00002a99      410fb64500     movzx eax, byte [r13]
0x00002a9e      488b0d03d620.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100a8:8]=0
0x00002aa5      0fbed0         movsx edx, al
0x00002aa8      85d2           test edx, edx
0x00002aaa      89542420       mov dword [rsp + 0x20], edx
0x00002aae      0f844bfdffff   je 0x27ff
0x00002ab4      8d50f9         lea edx, [rax - 7]
0x00002ab7      80fa06         cmp dl, 6
0x00002aba      0f8783000000   ja 0x2b43
0x00002ac0      488d35bd9900.  lea rsi, [0x0000c484]
0x00002ac7      0fb6d2         movzx edx, dl
0x00002aca      48630496       movsxd rax, dword [rsi + rdx*4]
0x00002ace      ba02000000     mov edx, 2
0x00002ad3      4801f0         add rax, rsi
0x00002ad6      be01000000     mov esi, 1
0x00002adb      ffe0           jmp rax
0x00002add      488d3d7c8200.  lea rdi, [0x0000ad60]                   ; "\f"
0x00002ae4      e857efffff     call sym.imp.fwrite_unlocked
0x00002ae9      4983c501       add r13, 1
0x00002aed      ebaa           jmp 0x2a99
0x00002aef      488d3d768200.  lea rdi, [0x0000ad6c]                   ; "\v"
0x00002af6      e845efffff     call sym.imp.fwrite_unlocked
0x00002afb      ebec           jmp 0x2ae9
0x00002afd      488d3d5f8200.  lea rdi, [0x0000ad63]                   ; "\n"
0x00002b04      e837efffff     call sym.imp.fwrite_unlocked
0x00002b09      ebde           jmp 0x2ae9
0x00002b0b      488d3d578200.  lea rdi, [0x0000ad69]                   ; "\t"
0x00002b12      e829efffff     call sym.imp.fwrite_unlocked
0x00002b17      ebd0           jmp 0x2ae9
0x00002b19      488d3d3d8200.  lea rdi, [0x0000ad5d]                   ; "\b"
0x00002b20      e81befffff     call sym.imp.fwrite_unlocked
0x00002b25      ebc2           jmp 0x2ae9
0x00002b27      488d3d2c8200.  lea rdi, [0x0000ad5a]                   ; "\a"
0x00002b2e      e80defffff     call sym.imp.fwrite_unlocked
0x00002b33      ebb4           jmp 0x2ae9
0x00002b35      488d3d2a8200.  lea rdi, [0x0000ad66]                   ; "\r"
0x00002b3c      e8ffeeffff     call sym.imp.fwrite_unlocked
0x00002b41      eba6           jmp 0x2ae9
0x00002b43      488b5128       mov rdx, qword [rcx + 0x28]
0x00002b47      483b5130       cmp rdx, qword [rcx + 0x30]
0x00002b4b      0f83db000000   jae 0x2c2c
0x00002b51      488d7201       lea rsi, [rdx + 1]
0x00002b55      48897128       mov qword [rcx + 0x28], rsi
0x00002b59      8802           mov byte [rdx], al
0x00002b5b      eb8c           jmp 0x2ae9
0x00002b5d      48630554d520.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2100b8:4]=0
0x00002b64      4889de         mov rsi, rbx
0x00002b67      498b7cc500     mov rdi, qword [r13 + rax*8]
0x00002b6c      e84f040000     call sym.parse_old_offset
0x00002b71      84c0           test al, al
0x00002b73      0f8404fdffff   je 0x287d
0x00002b79      488b442420     mov rax, qword [rsp + 0x20]
0x00002b7e      c6058bd62000.  mov byte [obj.flag_pseudo_start], 1     ; [0x210210:1]=0
0x00002b85      4983c510       add r13, 0x10
0x00002b89      4531f6         xor r14d, r14d
0x00002b8c      48890565d620.  mov qword [obj.n_bytes_to_skip], rax    ; [0x2101f8:8]=0
0x00002b93      488b442428     mov rax, qword [rsp + 0x28]
0x00002b98      4889442418     mov qword [rsp + 0x18], rax
0x00002b9d      e9a0f5ffff     jmp 0x2142
0x00002ba2      488b3c24       mov rdi, qword [rsp]
0x00002ba6      440fb66c2408   movzx r13d, byte [rsp + 8]
0x00002bac      e81fecffff     call sym.imp.free
0x00002bb1      31ff           xor edi, edi
0x00002bb3      e8d8180000     call sym.check_and_close
0x00002bb8      21c5           and ebp, eax
0x00002bba      e993fcffff     jmp 0x2852
0x00002bbf      486305f2d420.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2100b8:4]=0
0x00002bc6      488d742428     lea rsi, [rsp + 0x28]
0x00002bcb      498b7cc510     mov rdi, qword [r13 + rax*8 + 0x10]
0x00002bd0      e8eb030000     call sym.parse_old_offset
0x00002bd5      84c0           test al, al
0x00002bd7      0f84fcfbffff   je 0x27d9
0x00002bdd      488b442420     mov rax, qword [rsp + 0x20]
0x00002be2      c60527d62000.  mov byte [obj.flag_pseudo_start], 1     ; [0x210210:1]=0
0x00002be9      41be01000000   mov r14d, 1
0x00002bef      48890502d620.  mov qword [obj.n_bytes_to_skip], rax    ; [0x2101f8:8]=0
0x00002bf6      488b442428     mov rax, qword [rsp + 0x28]
0x00002bfb      4889442418     mov qword [rsp + 0x18], rax
0x00002c00      486305b1d420.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2100b8:4]=0
0x00002c07      498b54c500     mov rdx, qword [r13 + rax*8]
0x00002c0c      498954c510     mov qword [r13 + rax*8 + 0x10], rdx
0x00002c11      4983c510       add r13, 0x10
0x00002c15      e928f5ffff     jmp 0x2142
0x00002c1a      be0a000000     mov esi, 0xa
0x00002c1f      4889cf         mov rdi, rcx
0x00002c22      e8f9ecffff     call sym.imp.__overflow
0x00002c27      e9ecfbffff     jmp 0x2818
0x00002c2c      0fb6f0         movzx esi, al
0x00002c2f      4889cf         mov rdi, rcx
0x00002c32      e8e9ecffff     call sym.imp.__overflow
0x00002c37      e9adfeffff     jmp 0x2ae9
0x00002c3c      488d35059300.  lea rsi, str.skip_bytes___read_bytes_is_too_large ; 0xbf48 ; "skip-bytes + read-bytes is too large"
0x00002c43      ba05000000     mov edx, 5
0x00002c48      31ff           xor edi, edi
0x00002c4a      e861ecffff     call sym.imp.dcgettext
0x00002c4f      31f6           xor esi, esi
0x00002c51      4889c2         mov rdx, rax
0x00002c54      bf01000000     mov edi, 1
0x00002c59      31c0           xor eax, eax
0x00002c5b      e840eeffff     call sym.imp.error
0x00002c60      ba01000000     mov edx, 1
0x00002c65      e922f5ffff     jmp 0x218c
0x00002c6a      e841540000     call sym.xalloc_die
0x00002c6f      b901000000     mov ecx, 1
0x00002c74      e995f6ffff     jmp 0x230e
0x00002c79      488d0d2b9800.  lea rcx, obj.__PRETTY_FUNCTION__.7577   ; 0xc4ab ; "dump"
0x00002c80      488d35658000.  lea rsi, str..._coreutils_8.31_src_od.c ; 0xacec ; "../coreutils-8.31/src/od.c"
0x00002c87      488d3d129300.  lea rdi, str.n_bytes_read____bytes_per_block ; 0xbfa0 ; "n_bytes_read == bytes_per_block"
0x00002c8e      ba76050000     mov edx, 0x576
0x00002c93      e8b8ecffff     call sym.imp.__assert_fail
0x00002c98      488d0d0c9800.  lea rcx, obj.__PRETTY_FUNCTION__.7577   ; 0xc4ab ; "dump"
0x00002c9f      488d35468000.  lea rsi, str..._coreutils_8.31_src_od.c ; 0xacec ; "../coreutils-8.31/src/od.c"
0x00002ca6      488d3df39200.  lea rdi, str.n_bytes_read____bytes_per_block ; 0xbfa0 ; "n_bytes_read == bytes_per_block"
0x00002cad      ba84050000     mov edx, 0x584
0x00002cb2      e899ecffff     call sym.imp.__assert_fail
0x00002cb7      e824ecffff     call sym.imp.__stack_chk_fail
0x00002cbc      488d35dd9100.  lea rsi, str.invalid_output_address_radix___c___it_must_be_one_character_from__doxn ; 0xbea0 ; "invalid output address radix '%c'; it must be one character from [doxn]"
0x00002cc3      ba05000000     mov edx, 5
0x00002cc8      31ff           xor edi, edi
0x00002cca      e8e1ebffff     call sym.imp.dcgettext
0x00002ccf      410fbecf       movsx ecx, r15b
0x00002cd3      4889c2         mov rdx, rax
0x00002cd6      31f6           xor esi, esi
0x00002cd8      bf01000000     mov edi, 1
0x00002cdd      31c0           xor eax, eax
0x00002cdf      e8bcedffff     call sym.imp.error
0x00002ce4      4c8b05d5d320.  mov r8, qword [obj.optarg]              ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2100c0:8]=0
0x00002ceb      8b742420       mov esi, dword [rsp + 0x20]
0x00002cef      488d0deacc20.  lea rcx, obj.long_options               ; 0x20f9e0
0x00002cf6      ba77000000     mov edx, 0x77                           ; 'w'
0x00002cfb      89c7           mov edi, eax
0x00002cfd      e82e560000     call sym.xstrtol_fatal
0x00002d02      488d35df9100.  lea rsi, str.no_type_may_be_specified_when_dumping_strings ; 0xbee8 ; "no type may be specified when dumping strings"
0x00002d09      ba05000000     mov edx, 5
0x00002d0e      31ff           xor edi, edi
0x00002d10      e89bebffff     call sym.imp.dcgettext
0x00002d15      31f6           xor esi, esi
0x00002d17      4889c2         mov rdx, rax
0x00002d1a      bf01000000     mov edi, 1
0x00002d1f      31c0           xor eax, eax
0x00002d21      e87aedffff     call sym.imp.error
0x00002d26      4c8b0593d320.  mov r8, qword [obj.optarg]              ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2100c0:8]=0
0x00002d2d      8b742420       mov esi, dword [rsp + 0x20]
0x00002d31      488d0da8cc20.  lea rcx, obj.long_options               ; 0x20f9e0
0x00002d38      ba6a000000     mov edx, 0x6a                           ; 'j'
0x00002d3d      89c7           mov edi, eax
0x00002d3f      e8ec550000     call sym.xstrtol_fatal
0x00002d44      4c8b0575d320.  mov r8, qword [obj.optarg]              ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2100c0:8]=0
0x00002d4b      8b742420       mov esi, dword [rsp + 0x20]
0x00002d4f      488d0d8acc20.  lea rcx, obj.long_options               ; 0x20f9e0
0x00002d56      ba53000000     mov edx, 0x53                           ; 'S'
0x00002d5b      89c7           mov edi, eax
0x00002d5d      e8ce550000     call sym.xstrtol_fatal
0x00002d62      662e0f1f8400.  nop word cs:[rax + rax]
0x00002d6c      0f1f4000       nop dword [rax]
;-- entry0:
;-- _start:
;-- rip:
0x00002d70      31ed           xor ebp, ebp
0x00002d72      4989d1         mov r9, rdx
0x00002d75      5e             pop rsi
0x00002d76      4889e2         mov rdx, rsp
0x00002d79      4883e4f0       and rsp, 0xfffffffffffffff0
0x00002d7d      50             push rax
0x00002d7e      54             push rsp
0x00002d7f      4c8d05fa7e00.  lea r8, sym.__libc_csu_fini             ; 0xac80
0x00002d86      488d0d837e00.  lea rcx, sym.__libc_csu_init            ; 0xac10 ; "AWAVI\x89\xd7AUATL\x8d%\xaeM "
0x00002d8d      488d3ddcedff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1b70 ; "AWAVA\x89\xfeAUATI\x89\xf5USH\x83\xecXH\x8b>dH\x8b\x04%("
0x00002d94      ff153ed22000   call qword [reloc.__libc_start_main]    ; [0x20ffd8:8]=0
0x00002d9a      f4             hlt
0x00002d9b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00002da0      488d3df9d220.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2100a0
0x00002da7      55             push rbp
0x00002da8      488d05f1d220.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2100a0
0x00002daf      4839f8         cmp rax, rdi
0x00002db2      4889e5         mov rbp, rsp
0x00002db5      7419           je 0x2dd0
0x00002db7      488b0512d220.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x20ffd0:8]=0
0x00002dbe      4885c0         test rax, rax
0x00002dc1      740d           je 0x2dd0
0x00002dc3      5d             pop rbp
0x00002dc4      ffe0           jmp rax
0x00002dc6      662e0f1f8400.  nop word cs:[rax + rax]
0x00002dd0      5d             pop rbp
0x00002dd1      c3             ret
0x00002dd2      0f1f4000       nop dword [rax]
0x00002dd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00002de0      488d3db9d220.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2100a0
0x00002de7      488d35b2d220.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2100a0
0x00002dee      55             push rbp
0x00002def      4829fe         sub rsi, rdi
0x00002df2      4889e5         mov rbp, rsp
0x00002df5      48c1fe03       sar rsi, 3
0x00002df9      4889f0         mov rax, rsi
0x00002dfc      48c1e83f       shr rax, 0x3f
0x00002e00      4801c6         add rsi, rax
0x00002e03      48d1fe         sar rsi, 1
0x00002e06      7418           je 0x2e20
0x00002e08      488b05d9d120.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x20ffe8:8]=0
0x00002e0f      4885c0         test rax, rax
0x00002e12      740c           je 0x2e20
0x00002e14      5d             pop rbp
0x00002e15      ffe0           jmp rax
0x00002e17      660f1f840000.  nop word [rax + rax]
0x00002e20      5d             pop rbp
0x00002e21      c3             ret
0x00002e22      0f1f4000       nop dword [rax]
0x00002e26      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00002e30      803db1d22000.  cmp byte [obj.completed.7697], 0        ; [0x2100e8:1]=0
0x00002e37      752f           jne 0x2e68
0x00002e39      48833dafd120.  cmp qword [reloc.__cxa_finalize], 0     ; [0x20fff0:8]=0
0x00002e41      55             push rbp
0x00002e42      4889e5         mov rbp, rsp
0x00002e45      740c           je 0x2e53
0x00002e47      488b3dbad120.  mov rdi, qword [obj.__dso_handle]       ; [0x210008:8]=0x210008 obj.__dso_handle
0x00002e4e      e80dedffff     call sym..plt.got
0x00002e53      e848ffffff     call sym.deregister_tm_clones
0x00002e58      c60589d22000.  mov byte [obj.completed.7697], 1        ; [0x2100e8:1]=0
0x00002e5f      5d             pop rbp
0x00002e60      c3             ret
0x00002e61      0f1f80000000.  nop dword [rax]
0x00002e68      f3c3           ret
0x00002e6a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00002e70      55             push rbp
0x00002e71      4889e5         mov rbp, rsp
0x00002e74      5d             pop rbp
0x00002e75      e966ffffff     jmp sym.register_tm_clones
0x00002e7a      660f1f440000   nop word [rax + rax]
;-- format_address_none:
0x00002e80      f3c3           ret                                     ; /src:1113
0x00002e82      0f1f4000       nop dword [rax]
0x00002e86      662e0f1f8400.  nop word cs:[rax + rax]
;-- format_address_std:
0x00002e90      4883ec38       sub rsp, 0x38                           ; /src:1118
0x00002e94      4889f9         mov rcx, rdi
0x00002e97      64488b042528.  mov rax, qword fs:[0x28]
0x00002ea0      4889442428     mov qword [rsp + 0x28], rax
0x00002ea5      31c0           xor eax, eax
0x00002ea7      48630572d320.  movsxd rax, dword [obj.address_pad_len] ; /src:1125 ; [0x210220:4]=0
0x00002eae      488d7c2417     lea rdi, [rsp + 0x17]
0x00002eb3      4088742417     mov byte [rsp + 0x17], sil              ; /src:1124
0x00002eb8      c644241800     mov byte [rsp + 0x18], 0                ; /src:1123
0x00002ebd      4889fe         mov rsi, rdi                            ; /src:1125
0x00002ec0      4829c6         sub rsi, rax
0x00002ec3      8b055bd32000   mov eax, dword [obj.address_base]       ; /src:1129 ; [0x210224:4]=0
0x00002ec9      83f80a         cmp eax, 0xa
0x00002ecc      7472           je 0x2f40
0x00002ece      83f810         cmp eax, 0x10
0x00002ed1      0f84a9000000   je 0x2f80
0x00002ed7      83f808         cmp eax, 8
0x00002eda      7444           je 0x2f20
0x00002edc      4839fe         cmp rsi, rdi                            ; /src:1150
0x00002edf      4889f8         mov rax, rdi
0x00002ee2      7313           jae 0x2ef7
0x00002ee4      0f1f4000       nop dword [rax]
0x00002ee8      4883e801       sub rax, 1                              ; /src:1151
0x00002eec      c60030         mov byte [rax], 0x30                    ; '0'
                                                                       ; [0x30:1]=0
0x00002eef      4839c6         cmp rsi, rax                            ; /src:1150
0x00002ef2      75f4           jne 0x2ee8
0x00002ef4      4889f7         mov rdi, rsi
0x00002ef7      488b35aad120.  mov rsi, qword [obj.stdout]             ; /src:1153 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100a8:8]=0
0x00002efe      e8adeaffff     call sym.imp.fputs_unlocked
0x00002f03      488b442428     mov rax, qword [rsp + 0x28]             ; /src:1154
0x00002f08      644833042528.  xor rax, qword fs:[0x28]
0x00002f11      0f8597000000   jne 0x2fae
0x00002f17      4883c438       add rsp, 0x38
0x00002f1b      c3             ret
0x00002f1c      0f1f4000       nop dword [rax]
0x00002f20      89c8           mov eax, ecx                            ; /src:1133
0x00002f22      48c1e903       shr rcx, 3                              ; /src:1134
0x00002f26      4883ef01       sub rdi, 1                              ; /src:1133
0x00002f2a      83e007         and eax, 7
0x00002f2d      83c030         add eax, 0x30
0x00002f30      4885c9         test rcx, rcx                           ; /src:1134
0x00002f33      8807           mov byte [rdi], al                      ; /src:1133
0x00002f35      75e9           jne 0x2f20                              ; /src:1134
0x00002f37      eba3           jmp 0x2edc
0x00002f39      0f1f80000000.  nop dword [rax]
0x00002f40      49b8cdcccccc.  movabs r8, 0xcccccccccccccccd           ; /src:1139
0x00002f4a      660f1f440000   nop word [rax + rax]
0x00002f50      4889c8         mov rax, rcx
0x00002f53      4883ef01       sub rdi, 1
0x00002f57      49f7e0         mul r8
0x00002f5a      48c1ea03       shr rdx, 3
0x00002f5e      488d0492       lea rax, [rdx + rdx*4]
0x00002f62      4801c0         add rax, rax
0x00002f65      4829c1         sub rcx, rax
0x00002f68      83c130         add ecx, 0x30
0x00002f6b      4885d2         test rdx, rdx                           ; /src:1140
0x00002f6e      880f           mov byte [rdi], cl                      ; /src:1139
0x00002f70      4889d1         mov rcx, rdx                            ; /src:1140
0x00002f73      75db           jne 0x2f50
0x00002f75      e962ffffff     jmp 0x2edc
0x00002f7a      660f1f440000   nop word [rax + rax]
0x00002f80      488d153d7d00.  lea rdx, str.0123456789abcdef           ; 0xacc4 ; "0123456789abcdef"
0x00002f87      660f1f840000.  nop word [rax + rax]
0x00002f90      4889c8         mov rax, rcx                            ; /src:1145
0x00002f93      48c1e904       shr rcx, 4                              ; /src:1146
0x00002f97      4883ef01       sub rdi, 1                              ; /src:1145
0x00002f9b      83e00f         and eax, 0xf
0x00002f9e      4885c9         test rcx, rcx                           ; /src:1146
0x00002fa1      0fb60402       movzx eax, byte [rdx + rax]             ; /src:1145
0x00002fa5      8807           mov byte [rdi], al
0x00002fa7      75e7           jne 0x2f90                              ; /src:1146
0x00002fa9      e92effffff     jmp 0x2edc
0x00002fae      e82de9ffff     call sym.imp.__stack_chk_fail           ; /src:1154
0x00002fb3      0f1f00         nop dword [rax]
0x00002fb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- parse_old_offset:
0x00002fc0      0fb617         movzx edx, byte [rdi]                   ; /src:1331
0x00002fc3      84d2           test dl, dl
0x00002fc5      7445           je 0x300c
0x00002fc7      55             push rbp
0x00002fc8      53             push rbx
0x00002fc9      4889f5         mov rbp, rsi
0x00002fcc      4889fb         mov rbx, rdi
0x00002fcf      4883ec08       sub rsp, 8
0x00002fd3      80fa2b         cmp dl, 0x2b                            ; /src:1338
0x00002fd6      7437           je 0x300f
0x00002fd8      be2e000000     mov esi, 0x2e                           ; /src:1344 ; '.'
0x00002fdd      4889df         mov rdi, rbx
0x00002fe0      e82be9ffff     call sym.imp.strchr
0x00002fe5      4885c0         test rax, rax
0x00002fe8      ba0a000000     mov edx, 0xa                            ; /src:1345
0x00002fed      7426           je 0x3015                               ; /src:1344
0x00002fef      4c8d05df7c00.  lea r8, [0x0000acd5]                    ; /src:1354 ; "Bb"
0x00002ff6      4889e9         mov rcx, rbp
0x00002ff9      31f6           xor esi, esi
0x00002ffb      4889df         mov rdi, rbx
0x00002ffe      e8dd530000     call sym.xstrtoumax
0x00003003      85c0           test eax, eax
0x00003005      5a             pop rdx                                 ; /src:1355
0x00003006      0f94c0         sete al                                 ; /src:1354
0x00003009      5b             pop rbx                                 ; /src:1355
0x0000300a      5d             pop rbp
0x0000300b      c3             ret
0x0000300c      31c0           xor eax, eax
0x0000300e      c3             ret
0x0000300f      4883c301       add rbx, 1                              ; /src:1339
0x00003013      ebc3           jmp 0x2fd8
0x00003015      803b30         cmp byte [rbx], 0x30                    ; /src:1348
0x00003018      ba08000000     mov edx, 8                              ; /src:1351
0x0000301d      75d0           jne 0x2fef                              ; /src:1348
0x0000301f      0fb64301       movzx eax, byte [rbx + 1]
0x00003023      31d2           xor edx, edx                            ; /src:1349
0x00003025      83e0df         and eax, 0xffffffdf                     ; /src:1348 ; 4294967263
0x00003028      3c58           cmp al, 0x58                            ; /src:1349
0x0000302a      0f94c2         sete dl
0x0000302d      8d14d5080000.  lea edx, [rdx*8 + 8]
0x00003034      ebb9           jmp 0x2fef
0x00003036      662e0f1f8400.  nop word cs:[rax + rax]
;-- print_named_ascii:
0x00003040      4157           push r15                                ; /src:502
0x00003042      4156           push r14
0x00003044      4155           push r13
0x00003046      4154           push r12
0x00003048      55             push rbp
0x00003049      53             push rbx
0x0000304a      4883ec28       sub rsp, 0x28
0x0000304e      64488b042528.  mov rax, qword fs:[0x28]
0x00003057      4889442418     mov qword [rsp + 0x18], rax
0x0000305c      31c0           xor eax, eax
0x0000305e      4839f7         cmp rdi, rsi                            ; /src:506
0x00003061      0f86a1000000   jbe 0x3108
0x00003067      4589c5         mov r13d, r8d
0x0000306a      4889fd         mov rbp, rdi
0x0000306d      4c8d47ff       lea r8, [rdi - 1]
0x00003071      4d63e1         movsxd r12, r9d
0x00003074      4829f5         sub rbp, rsi
0x00003077      4889fb         mov rbx, rdi
0x0000307a      488d042a       lea rax, [rdx + rbp]
0x0000307e      4989d6         mov r14, rdx
0x00003081      4d0fafc4       imul r8, r12
0x00003085      48890424       mov qword [rsp], rax
0x00003089      488d442416     lea rax, [rsp + 0x16]                   ; /src:521
0x0000308e      4889442408     mov qword [rsp + 8], rax
0x00003093      4d89c7         mov r15, r8
0x00003096      eb37           jmp 0x30cf
0x00003098      0f1f84000000.  nop dword [rax + rax]
0x000030a0      488d0d999400.  lea rcx, obj.charname                   ; /src:516 ; 0xc540 ; "nul"
0x000030a7      0fb6c0         movzx eax, al
0x000030aa      488d1481       lea rdx, [rcx + rax*4]
0x000030ae      4129e9         sub r9d, ebp                            ; /src:524
0x000030b1      488d3d247c00.  lea rdi, [0x0000acdc]                   ; "%*s"
0x000030b8      31c0           xor eax, eax
0x000030ba      438d3429       lea esi, [r9 + r13]
0x000030be      4d29e7         sub r15, r12
0x000030c1      e88a500000     call sym.xprintf
0x000030c6      4c3b3424       cmp r14, qword [rsp]                    ; /src:506
0x000030ca      4189e9         mov r9d, ebp                            ; /src:525
0x000030cd      7439           je 0x3108                               ; /src:506
0x000030cf      31d2           xor edx, edx                            ; /src:508
0x000030d1      4c89f8         mov rax, r15
0x000030d4      4983c601       add r14, 1                              ; /src:509
0x000030d8      48f7f3         div rbx                                 ; /src:508
0x000030db      488d15f67b00.  lea rdx, [0x0000acd8]                   ; /src:514 ; "del"
0x000030e2      4889c5         mov rbp, rax                            ; /src:508
0x000030e5      410fb646ff     movzx eax, byte [r14 - 1]
0x000030ea      83e07f         and eax, 0x7f
0x000030ed      3c7f           cmp al, 0x7f                            ; /src:513
0x000030ef      74bd           je 0x30ae
0x000030f1      3c20           cmp al, 0x20                            ; /src:515 ; "@"
0x000030f3      76ab           jbe 0x30a0
0x000030f5      88442416       mov byte [rsp + 0x16], al               ; /src:519
0x000030f9      c644241700     mov byte [rsp + 0x17], 0                ; /src:520
0x000030fe      488b542408     mov rdx, qword [rsp + 8]                ; /src:521
0x00003103      eba9           jmp 0x30ae
0x00003105      0f1f00         nop dword [rax]
0x00003108      488b442418     mov rax, qword [rsp + 0x18]             ; /src:527
0x0000310d      644833042528.  xor rax, qword fs:[0x28]
0x00003116      750f           jne 0x3127
0x00003118      4883c428       add rsp, 0x28
0x0000311c      5b             pop rbx
0x0000311d      5d             pop rbp
0x0000311e      415c           pop r12
0x00003120      415d           pop r13
0x00003122      415e           pop r14
0x00003124      415f           pop r15
0x00003126      c3             ret
0x00003127      e8b4e7ffff     call sym.imp.__stack_chk_fail
0x0000312c      0f1f4000       nop dword [rax]
;-- print_long_long:
0x00003130      4157           push r15                                ; /src:476
0x00003132      4156           push r14
0x00003134      4155           push r13
0x00003136      4154           push r12
0x00003138      55             push rbp
0x00003139      53             push rbx
0x0000313a      4883ec38       sub rsp, 0x38
0x0000313e      64488b042528.  mov rax, qword fs:[0x28]
0x00003147      4889442428     mov qword [rsp + 0x28], rax
0x0000314c      31c0           xor eax, eax
0x0000314e      4839f7         cmp rdi, rsi
0x00003151      48894c2408     mov qword [rsp + 8], rcx
0x00003156      4489442414     mov dword [rsp + 0x14], r8d
0x0000315b      0f869f000000   jbe 0x3200
0x00003161      488d4fff       lea rcx, [rdi - 1]
0x00003165      4963c1         movsxd rax, r9d
0x00003168      4889fb         mov rbx, rdi
0x0000316b      4889f5         mov rbp, rsi
0x0000316e      4989d7         mov r15, rdx
0x00003171      4889442418     mov qword [rsp + 0x18], rax
0x00003176      480fafc8       imul rcx, rax
0x0000317a      4989fd         mov r13, rdi
0x0000317d      4989ce         mov r14, rcx
0x00003180      eb26           jmp 0x31a8
0x00003182      660f1f440000   nop word [rax + rax]
0x00003188      498b17         mov rdx, qword [r15]
0x0000318b      488b7c2408     mov rdi, qword [rsp + 8]
0x00003190      31c0           xor eax, eax
0x00003192      4983c708       add r15, 8
0x00003196      e8b54f0000     call sym.xprintf
0x0000319b      4c2b742418     sub r14, qword [rsp + 0x18]
0x000031a0      4939ed         cmp r13, rbp
0x000031a3      4589e1         mov r9d, r12d
0x000031a6      7458           je 0x3200
0x000031a8      31d2           xor edx, edx
0x000031aa      4c89f0         mov rax, r14
0x000031ad      4983ed01       sub r13, 1
0x000031b1      48f7f3         div rbx
0x000031b4      4129c1         sub r9d, eax
0x000031b7      803d43cf2000.  cmp byte [obj.input_swap], 0            ; [0x210101:1]=0
0x000031be      4989c4         mov r12, rax
0x000031c1      8b442414       mov eax, dword [rsp + 0x14]
0x000031c5      418d3401       lea esi, [r9 + rax]
0x000031c9      74bd           je 0x3188
0x000031cb      498d5707       lea rdx, [r15 + 7]
0x000031cf      4c8d4c2420     lea r9, [rsp + 0x20]
0x000031d4      31c0           xor eax, eax
0x000031d6      662e0f1f8400.  nop word cs:[rax + rax]
0x000031e0      0fb63a         movzx edi, byte [rdx]
0x000031e3      4883ea01       sub rdx, 1
0x000031e7      41883c01       mov byte [r9 + rax], dil
0x000031eb      4883c001       add rax, 1
0x000031ef      4883f808       cmp rax, 8
0x000031f3      75eb           jne 0x31e0
0x000031f5      488b542420     mov rdx, qword [rsp + 0x20]
0x000031fa      eb8f           jmp 0x318b
0x000031fc      0f1f4000       nop dword [rax]
0x00003200      488b442428     mov rax, qword [rsp + 0x28]
0x00003205      644833042528.  xor rax, qword fs:[0x28]
0x0000320e      750f           jne 0x321f
0x00003210      4883c438       add rsp, 0x38
0x00003214      5b             pop rbx
0x00003215      5d             pop rbp
0x00003216      415c           pop r12
0x00003218      415d           pop r13
0x0000321a      415e           pop r14
0x0000321c      415f           pop r15
0x0000321e      c3             ret
0x0000321f      e8bce6ffff     call sym.imp.__stack_chk_fail
0x00003224      6690           nop
0x00003226      662e0f1f8400.  nop word cs:[rax + rax]
;-- print_long:
0x00003230      4157           push r15                                ; /src:475
0x00003232      4156           push r14
0x00003234      4155           push r13
0x00003236      4154           push r12
0x00003238      55             push rbp
0x00003239      53             push rbx
0x0000323a      4883ec38       sub rsp, 0x38
0x0000323e      64488b042528.  mov rax, qword fs:[0x28]
0x00003247      4889442428     mov qword [rsp + 0x28], rax
0x0000324c      31c0           xor eax, eax
0x0000324e      4839f7         cmp rdi, rsi
0x00003251      48894c2408     mov qword [rsp + 8], rcx
0x00003256      4489442414     mov dword [rsp + 0x14], r8d
0x0000325b      0f869f000000   jbe 0x3300
0x00003261      488d4fff       lea rcx, [rdi - 1]
0x00003265      4963c1         movsxd rax, r9d
0x00003268      4889fb         mov rbx, rdi
0x0000326b      4889f5         mov rbp, rsi
0x0000326e      4989d7         mov r15, rdx
0x00003271      4889442418     mov qword [rsp + 0x18], rax
0x00003276      480fafc8       imul rcx, rax
0x0000327a      4989fd         mov r13, rdi
0x0000327d      4989ce         mov r14, rcx
0x00003280      eb26           jmp 0x32a8
0x00003282      660f1f440000   nop word [rax + rax]
0x00003288      498b17         mov rdx, qword [r15]
0x0000328b      488b7c2408     mov rdi, qword [rsp + 8]
0x00003290      31c0           xor eax, eax
0x00003292      4983c708       add r15, 8
0x00003296      e8b54e0000     call sym.xprintf
0x0000329b      4c2b742418     sub r14, qword [rsp + 0x18]
0x000032a0      4939ed         cmp r13, rbp
0x000032a3      4589e1         mov r9d, r12d
0x000032a6      7458           je 0x3300
0x000032a8      31d2           xor edx, edx
0x000032aa      4c89f0         mov rax, r14
0x000032ad      4983ed01       sub r13, 1
0x000032b1      48f7f3         div rbx
0x000032b4      4129c1         sub r9d, eax
0x000032b7      803d43ce2000.  cmp byte [obj.input_swap], 0            ; [0x210101:1]=0
0x000032be      4989c4         mov r12, rax
0x000032c1      8b442414       mov eax, dword [rsp + 0x14]
0x000032c5      418d3401       lea esi, [r9 + rax]
0x000032c9      74bd           je 0x3288
0x000032cb      498d5707       lea rdx, [r15 + 7]
0x000032cf      4c8d4c2420     lea r9, [rsp + 0x20]
0x000032d4      31c0           xor eax, eax
0x000032d6      662e0f1f8400.  nop word cs:[rax + rax]
0x000032e0      0fb63a         movzx edi, byte [rdx]
0x000032e3      4883ea01       sub rdx, 1
0x000032e7      41883c01       mov byte [r9 + rax], dil
0x000032eb      4883c001       add rax, 1
0x000032ef      4883f808       cmp rax, 8
0x000032f3      75eb           jne 0x32e0
0x000032f5      488b542420     mov rdx, qword [rsp + 0x20]
0x000032fa      eb8f           jmp 0x328b
0x000032fc      0f1f4000       nop dword [rax]
0x00003300      488b442428     mov rax, qword [rsp + 0x28]
0x00003305      644833042528.  xor rax, qword fs:[0x28]
0x0000330e      750f           jne 0x331f
0x00003310      4883c438       add rsp, 0x38
0x00003314      5b             pop rbx
0x00003315      5d             pop rbp
0x00003316      415c           pop r12
0x00003318      415d           pop r13
0x0000331a      415e           pop r14
0x0000331c      415f           pop r15
0x0000331e      c3             ret
0x0000331f      e8bce5ffff     call sym.imp.__stack_chk_fail
0x00003324      6690           nop
0x00003326      662e0f1f8400.  nop word cs:[rax + rax]
;-- print_int:
0x00003330      4157           push r15                                ; /src:474
0x00003332      4156           push r14
0x00003334      4155           push r13
0x00003336      4154           push r12
0x00003338      55             push rbp
0x00003339      53             push rbx
0x0000333a      4889fb         mov rbx, rdi
0x0000333d      4883ec38       sub rsp, 0x38
0x00003341      64488b3c2528.  mov rdi, qword fs:[0x28]
0x0000334a      48897c2428     mov qword [rsp + 0x28], rdi
0x0000334f      31ff           xor edi, edi
0x00003351      4839f3         cmp rbx, rsi
0x00003354      48893424       mov qword [rsp], rsi
0x00003358      48894c2408     mov qword [rsp + 8], rcx
0x0000335d      4489442414     mov dword [rsp + 0x14], r8d
0x00003362      0f8698000000   jbe 0x3400
0x00003368      488d4bff       lea rcx, [rbx - 1]
0x0000336c      4963c1         movsxd rax, r9d
0x0000336f      4989d7         mov r15, rdx
0x00003372      4889442418     mov qword [rsp + 0x18], rax
0x00003377      4989dd         mov r13, rbx
0x0000337a      480fafc8       imul rcx, rax
0x0000337e      4989ce         mov r14, rcx
0x00003381      eb26           jmp 0x33a9
0x00003383      0f1f440000     nop dword [rax + rax]
0x00003388      418b17         mov edx, dword [r15]
0x0000338b      488b7c2408     mov rdi, qword [rsp + 8]
0x00003390      31c0           xor eax, eax
0x00003392      4983c704       add r15, 4
0x00003396      e8b54d0000     call sym.xprintf
0x0000339b      4c2b742418     sub r14, qword [rsp + 0x18]
0x000033a0      4c3b2c24       cmp r13, qword [rsp]
0x000033a4      4189e9         mov r9d, ebp
0x000033a7      7457           je 0x3400
0x000033a9      31d2           xor edx, edx
0x000033ab      4c89f0         mov rax, r14
0x000033ae      4983ed01       sub r13, 1
0x000033b2      48f7f3         div rbx
0x000033b5      4129c1         sub r9d, eax
0x000033b8      803d42cd2000.  cmp byte [obj.input_swap], 0            ; [0x210101:1]=0
0x000033bf      4889c5         mov rbp, rax
0x000033c2      8b442414       mov eax, dword [rsp + 0x14]
0x000033c6      418d3401       lea esi, [r9 + rax]
0x000033ca      74bc           je 0x3388
0x000033cc      458a6703       mov r12b, byte [r15 + 3]
0x000033d0      410fb64f02     movzx ecx, byte [r15 + 2]
0x000033d5      410fb65701     movzx edx, byte [r15 + 1]
0x000033da      4489e0         mov eax, r12d
0x000033dd      88cc           mov ah, cl
0x000033df      440fb7d0       movzx r10d, ax
0x000033e3      410fb607       movzx eax, byte [r15]
0x000033e7      c1e210         shl edx, 0x10
0x000033ea      4109d2         or r10d, edx
0x000033ed      c1e018         shl eax, 0x18
0x000033f0      4109c2         or r10d, eax
0x000033f3      4589d4         mov r12d, r10d
0x000033f6      4489d2         mov edx, r10d
0x000033f9      eb90           jmp 0x338b
0x000033fb      0f1f440000     nop dword [rax + rax]
0x00003400      488b442428     mov rax, qword [rsp + 0x28]
0x00003405      644833042528.  xor rax, qword fs:[0x28]
0x0000340e      750f           jne 0x341f
0x00003410      4883c438       add rsp, 0x38
0x00003414      5b             pop rbx
0x00003415      5d             pop rbp
0x00003416      415c           pop r12
0x00003418      415d           pop r13
0x0000341a      415e           pop r14
0x0000341c      415f           pop r15
0x0000341e      c3             ret
0x0000341f      e8bce4ffff     call sym.imp.__stack_chk_fail
0x00003424      6690           nop
0x00003426      662e0f1f8400.  nop word cs:[rax + rax]
;-- print_short:
0x00003430      4157           push r15                                ; /src:473
0x00003432      4156           push r14
0x00003434      4155           push r13
0x00003436      4154           push r12
0x00003438      55             push rbp
0x00003439      53             push rbx
0x0000343a      4883ec38       sub rsp, 0x38
0x0000343e      64488b042528.  mov rax, qword fs:[0x28]
0x00003447      4889442428     mov qword [rsp + 0x28], rax
0x0000344c      31c0           xor eax, eax
0x0000344e      4839f7         cmp rdi, rsi
0x00003451      48890c24       mov qword [rsp], rcx
0x00003455      448944240c     mov dword [rsp + 0xc], r8d
0x0000345a      0f8690000000   jbe 0x34f0
0x00003460      4c8d47ff       lea r8, [rdi - 1]
0x00003464      4963c1         movsxd rax, r9d
0x00003467      4889fb         mov rbx, rdi
0x0000346a      4889442418     mov qword [rsp + 0x18], rax
0x0000346f      4889d5         mov rbp, rdx
0x00003472      4531ff         xor r15d, r15d
0x00003475      4c0fafc0       imul r8, rax
0x00003479      4889f8         mov rax, rdi
0x0000347c      4829f0         sub rax, rsi
0x0000347f      4889442410     mov qword [rsp + 0x10], rax
0x00003484      4d89c5         mov r13, r8
0x00003487      eb2b           jmp 0x34b4
0x00003489      0f1f80000000.  nop dword [rax]
0x00003490      420fb7547d00   movzx edx, word [rbp + r15*2]
0x00003496      488b3c24       mov rdi, qword [rsp]
0x0000349a      31c0           xor eax, eax
0x0000349c      4983c701       add r15, 1
0x000034a0      e8ab4c0000     call sym.xprintf
0x000034a5      4c2b6c2418     sub r13, qword [rsp + 0x18]
0x000034aa      4c397c2410     cmp qword [rsp + 0x10], r15
0x000034af      4589e1         mov r9d, r12d
0x000034b2      743c           je 0x34f0
0x000034b4      31d2           xor edx, edx
0x000034b6      4c89e8         mov rax, r13
0x000034b9      48f7f3         div rbx
0x000034bc      4129c1         sub r9d, eax
0x000034bf      803d3bcc2000.  cmp byte [obj.input_swap], 0            ; [0x210101:1]=0
0x000034c6      4989c4         mov r12, rax
0x000034c9      8b44240c       mov eax, dword [rsp + 0xc]
0x000034cd      418d3401       lea esi, [r9 + rax]
0x000034d1      74bd           je 0x3490
0x000034d3      468a747d01     mov r14b, byte [rbp + r15*2 + 1]
0x000034d8      420fb6447d00   movzx eax, byte [rbp + r15*2]
0x000034de      4489f1         mov ecx, r14d
0x000034e1      88c5           mov ch, al
0x000034e3      4189ce         mov r14d, ecx
0x000034e6      0fb7d1         movzx edx, cx
0x000034e9      ebab           jmp 0x3496
0x000034eb      0f1f440000     nop dword [rax + rax]
0x000034f0      488b442428     mov rax, qword [rsp + 0x28]
0x000034f5      644833042528.  xor rax, qword fs:[0x28]
0x000034fe      750f           jne 0x350f
0x00003500      4883c438       add rsp, 0x38
0x00003504      5b             pop rbx
0x00003505      5d             pop rbp
0x00003506      415c           pop r12
0x00003508      415d           pop r13
0x0000350a      415e           pop r14
0x0000350c      415f           pop r15
0x0000350e      c3             ret
0x0000350f      e8cce3ffff     call sym.imp.__stack_chk_fail
0x00003514      6690           nop
0x00003516      662e0f1f8400.  nop word cs:[rax + rax]
;-- print_s_short:
0x00003520      4157           push r15                                ; /src:472
0x00003522      4156           push r14
0x00003524      4155           push r13
0x00003526      4154           push r12
0x00003528      55             push rbp
0x00003529      53             push rbx
0x0000352a      4883ec38       sub rsp, 0x38
0x0000352e      64488b042528.  mov rax, qword fs:[0x28]
0x00003537      4889442428     mov qword [rsp + 0x28], rax
0x0000353c      31c0           xor eax, eax
0x0000353e      4839f7         cmp rdi, rsi
0x00003541      48890c24       mov qword [rsp], rcx
0x00003545      448944240c     mov dword [rsp + 0xc], r8d
0x0000354a      0f8690000000   jbe 0x35e0
0x00003550      4c8d47ff       lea r8, [rdi - 1]
0x00003554      4963c1         movsxd rax, r9d
0x00003557      4889fb         mov rbx, rdi
0x0000355a      4889442418     mov qword [rsp + 0x18], rax
0x0000355f      4889d5         mov rbp, rdx
0x00003562      4531ff         xor r15d, r15d
0x00003565      4c0fafc0       imul r8, rax
0x00003569      4889f8         mov rax, rdi
0x0000356c      4829f0         sub rax, rsi
0x0000356f      4889442410     mov qword [rsp + 0x10], rax
0x00003574      4d89c5         mov r13, r8
0x00003577      eb2b           jmp 0x35a4
0x00003579      0f1f80000000.  nop dword [rax]
0x00003580      420fbf547d00   movsx edx, word [rbp + r15*2]
0x00003586      488b3c24       mov rdi, qword [rsp]
0x0000358a      31c0           xor eax, eax
0x0000358c      4983c701       add r15, 1
0x00003590      e8bb4b0000     call sym.xprintf
0x00003595      4c2b6c2418     sub r13, qword [rsp + 0x18]
0x0000359a      4c397c2410     cmp qword [rsp + 0x10], r15
0x0000359f      4589e1         mov r9d, r12d
0x000035a2      743c           je 0x35e0
0x000035a4      31d2           xor edx, edx
0x000035a6      4c89e8         mov rax, r13
0x000035a9      48f7f3         div rbx
0x000035ac      4129c1         sub r9d, eax
0x000035af      803d4bcb2000.  cmp byte [obj.input_swap], 0            ; [0x210101:1]=0
0x000035b6      4989c4         mov r12, rax
0x000035b9      8b44240c       mov eax, dword [rsp + 0xc]
0x000035bd      418d3401       lea esi, [r9 + rax]
0x000035c1      74bd           je 0x3580
0x000035c3      468a747d01     mov r14b, byte [rbp + r15*2 + 1]
0x000035c8      420fb6447d00   movzx eax, byte [rbp + r15*2]
0x000035ce      4489f1         mov ecx, r14d
0x000035d1      88c5           mov ch, al
0x000035d3      4189ce         mov r14d, ecx
0x000035d6      0fbfd1         movsx edx, cx
0x000035d9      ebab           jmp 0x3586
0x000035db      0f1f440000     nop dword [rax + rax]
0x000035e0      488b442428     mov rax, qword [rsp + 0x28]
0x000035e5      644833042528.  xor rax, qword fs:[0x28]
0x000035ee      750f           jne 0x35ff
0x000035f0      4883c438       add rsp, 0x38
0x000035f4      5b             pop rbx
0x000035f5      5d             pop rbp
0x000035f6      415c           pop r12
0x000035f8      415d           pop r13
0x000035fa      415e           pop r14
0x000035fc      415f           pop r15
0x000035fe      c3             ret
0x000035ff      e8dce2ffff     call sym.imp.__stack_chk_fail
0x00003604      6690           nop
0x00003606      662e0f1f8400.  nop word cs:[rax + rax]
;-- print_char:
0x00003610      4157           push r15                                ; /src:471
0x00003612      4156           push r14
0x00003614      4155           push r13
0x00003616      4154           push r12
0x00003618      55             push rbp
0x00003619      53             push rbx
0x0000361a      4883ec18       sub rsp, 0x18
0x0000361e      4839f7         cmp rdi, rsi
0x00003621      48890c24       mov qword [rsp], rcx
0x00003625      765b           jbe 0x3682
0x00003627      488d4fff       lea rcx, [rdi - 1]
0x0000362b      4d63e1         movsxd r12, r9d
0x0000362e      4889fd         mov rbp, rdi
0x00003631      4829f5         sub rbp, rsi
0x00003634      4889fb         mov rbx, rdi
0x00003637      4989d7         mov r15, rdx
0x0000363a      490fafcc       imul rcx, r12
0x0000363e      488d042a       lea rax, [rdx + rbp]
0x00003642      4589c6         mov r14d, r8d
0x00003645      4889442408     mov qword [rsp + 8], rax
0x0000364a      4989cd         mov r13, rcx
0x0000364d      0f1f00         nop dword [rax]
0x00003650      4c89e8         mov rax, r13
0x00003653      31d2           xor edx, edx
0x00003655      488b3c24       mov rdi, qword [rsp]
0x00003659      48f7f3         div rbx
0x0000365c      410fb617       movzx edx, byte [r15]
0x00003660      4d29e5         sub r13, r12
0x00003663      4983c701       add r15, 1
0x00003667      4129c1         sub r9d, eax
0x0000366a      4889c5         mov rbp, rax
0x0000366d      31c0           xor eax, eax
0x0000366f      438d3431       lea esi, [r9 + r14]
0x00003673      e8d84a0000     call sym.xprintf
0x00003678      4c3b7c2408     cmp r15, qword [rsp + 8]
0x0000367d      4189e9         mov r9d, ebp
0x00003680      75ce           jne 0x3650
0x00003682      4883c418       add rsp, 0x18
0x00003686      5b             pop rbx
0x00003687      5d             pop rbp
0x00003688      415c           pop r12
0x0000368a      415d           pop r13
0x0000368c      415e           pop r14
0x0000368e      415f           pop r15
0x00003690      c3             ret
0x00003691      0f1f440000     nop dword [rax + rax]
0x00003696      662e0f1f8400.  nop word cs:[rax + rax]
;-- print_s_char:
0x000036a0      4157           push r15                                ; /src:470
0x000036a2      4156           push r14
0x000036a4      4155           push r13
0x000036a6      4154           push r12
0x000036a8      55             push rbp
0x000036a9      53             push rbx
0x000036aa      4883ec18       sub rsp, 0x18
0x000036ae      4839f7         cmp rdi, rsi
0x000036b1      48890c24       mov qword [rsp], rcx
0x000036b5      765b           jbe 0x3712
0x000036b7      488d4fff       lea rcx, [rdi - 1]
0x000036bb      4d63e1         movsxd r12, r9d
0x000036be      4889fd         mov rbp, rdi
0x000036c1      4829f5         sub rbp, rsi
0x000036c4      4889fb         mov rbx, rdi
0x000036c7      4989d7         mov r15, rdx
0x000036ca      490fafcc       imul rcx, r12
0x000036ce      488d042a       lea rax, [rdx + rbp]
0x000036d2      4589c6         mov r14d, r8d
0x000036d5      4889442408     mov qword [rsp + 8], rax
0x000036da      4989cd         mov r13, rcx
0x000036dd      0f1f00         nop dword [rax]
0x000036e0      4c89e8         mov rax, r13
0x000036e3      31d2           xor edx, edx
0x000036e5      488b3c24       mov rdi, qword [rsp]
0x000036e9      48f7f3         div rbx
0x000036ec      410fbe17       movsx edx, byte [r15]
0x000036f0      4d29e5         sub r13, r12
0x000036f3      4983c701       add r15, 1
0x000036f7      4129c1         sub r9d, eax
0x000036fa      4889c5         mov rbp, rax
0x000036fd      31c0           xor eax, eax
0x000036ff      438d3431       lea esi, [r9 + r14]
0x00003703      e8484a0000     call sym.xprintf
0x00003708      4c3b7c2408     cmp r15, qword [rsp + 8]
0x0000370d      4189e9         mov r9d, ebp
0x00003710      75ce           jne 0x36e0
0x00003712      4883c418       add rsp, 0x18
0x00003716      5b             pop rbx
0x00003717      5d             pop rbp
0x00003718      415c           pop r12
0x0000371a      415d           pop r13
0x0000371c      415e           pop r14
0x0000371e      415f           pop r15
0x00003720      c3             ret
0x00003721      0f1f440000     nop dword [rax + rax]
0x00003726      662e0f1f8400.  nop word cs:[rax + rax]
;-- print_long_double:
0x00003730      4157           push r15                                ; /src:480
0x00003732      4156           push r14
0x00003734      4155           push r13
0x00003736      4154           push r12
0x00003738      4989fc         mov r12, rdi
0x0000373b      55             push rbp
0x0000373c      53             push rbx
0x0000373d      4883ec78       sub rsp, 0x78
0x00003741      64488b3c2528.  mov rdi, qword fs:[0x28]
0x0000374a      48897c2468     mov qword [rsp + 0x68], rdi
0x0000374f      31ff           xor edi, edi
0x00003751      4939f4         cmp r12, rsi
0x00003754      4889742408     mov qword [rsp + 8], rsi
0x00003759      4489442414     mov dword [rsp + 0x14], r8d
0x0000375e      0f86bc000000   jbe 0x3820
0x00003764      4d8d4424ff     lea r8, [r12 - 1]
0x00003769      4963c1         movsxd rax, r9d
0x0000376c      4889d3         mov rbx, rdx
0x0000376f      4889442418     mov qword [rsp + 0x18], rax
0x00003774      4d89e7         mov r15, r12
0x00003777      4c8d6c2430     lea r13, [rsp + 0x30]
0x0000377c      4c0fafc0       imul r8, rax
0x00003780      4d89c6         mov r14, r8
0x00003783      eb47           jmp 0x37cc
0x00003785      0f1f00         nop dword [rax]
0x00003788      db2b           fld xword [rbx]
0x0000378a      4883ec10       sub rsp, 0x10
0x0000378e      31c9           xor ecx, ecx
0x00003790      31d2           xor edx, edx
0x00003792      be2d000000     mov esi, 0x2d                           ; '-'
0x00003797      4c89ef         mov rdi, r13
0x0000379a      4883c310       add rbx, 0x10
0x0000379e      db3c24         fstp xword [rsp]
0x000037a1      e81a220000     call sym.ldtoastr
0x000037a6      488d3d2f7500.  lea rdi, [0x0000acdc]                   ; "%*s"
0x000037ad      4c89ea         mov rdx, r13
0x000037b0      31c0           xor eax, eax
0x000037b2      8b742420       mov esi, dword [rsp + 0x20]
0x000037b6      e895490000     call sym.xprintf
0x000037bb      4c2b742428     sub r14, qword [rsp + 0x28]
0x000037c0      4189e9         mov r9d, ebp
0x000037c3      58             pop rax
0x000037c4      5a             pop rdx
0x000037c5      4c3b7c2408     cmp r15, qword [rsp + 8]
0x000037ca      7454           je 0x3820
0x000037cc      31d2           xor edx, edx
0x000037ce      4c89f0         mov rax, r14
0x000037d1      4983ef01       sub r15, 1
0x000037d5      49f7f4         div r12
0x000037d8      4129c1         sub r9d, eax
0x000037db      44034c2414     add r9d, dword [rsp + 0x14]
0x000037e0      803d1ac92000.  cmp byte [obj.input_swap], 0            ; [0x210101:1]=0
0x000037e7      4889c5         mov rbp, rax
0x000037ea      44894c2410     mov dword [rsp + 0x10], r9d
0x000037ef      7497           je 0x3788
0x000037f1      488d530f       lea rdx, [rbx + 0xf]
0x000037f5      488d442420     lea rax, [rsp + 0x20]
0x000037fa      488d742430     lea rsi, [rsp + 0x30]
0x000037ff      90             nop
0x00003800      0fb60a         movzx ecx, byte [rdx]
0x00003803      4883c001       add rax, 1
0x00003807      4883ea01       sub rdx, 1
0x0000380b      8848ff         mov byte [rax - 1], cl
0x0000380e      4839c6         cmp rsi, rax
0x00003811      75ed           jne 0x3800
0x00003813      db6c2420       fld xword [rsp + 0x20]
0x00003817      e96effffff     jmp 0x378a
0x0000381c      0f1f4000       nop dword [rax]
0x00003820      488b442468     mov rax, qword [rsp + 0x68]
0x00003825      644833042528.  xor rax, qword fs:[0x28]
0x0000382e      750f           jne 0x383f
0x00003830      4883c478       add rsp, 0x78
0x00003834      5b             pop rbx
0x00003835      5d             pop rbp
0x00003836      415c           pop r12
0x00003838      415d           pop r13
0x0000383a      415e           pop r14
0x0000383c      415f           pop r15
0x0000383e      c3             ret
0x0000383f      e89ce0ffff     call sym.imp.__stack_chk_fail
0x00003844      6690           nop
0x00003846      662e0f1f8400.  nop word cs:[rax + rax]
;-- print_double:
0x00003850      4157           push r15                                ; /src:479
0x00003852      4156           push r14
0x00003854      4155           push r13
0x00003856      4154           push r12
0x00003858      55             push rbp
0x00003859      53             push rbx
0x0000385a      4889fd         mov rbp, rdi
0x0000385d      4883ec68       sub rsp, 0x68
0x00003861      64488b3c2528.  mov rdi, qword fs:[0x28]
0x0000386a      48897c2458     mov qword [rsp + 0x58], rdi
0x0000386f      31ff           xor edi, edi
0x00003871      4839f5         cmp rbp, rsi
0x00003874      4889742408     mov qword [rsp + 8], rsi
0x00003879      4489442414     mov dword [rsp + 0x14], r8d
0x0000387e      0f86bc000000   jbe 0x3940
0x00003884      4c8d45ff       lea r8, [rbp - 1]
0x00003888      4963c1         movsxd rax, r9d
0x0000388b      4989d5         mov r13, rdx
0x0000388e      4889442418     mov qword [rsp + 0x18], rax
0x00003893      4989ef         mov r15, rbp
0x00003896      4c8d642430     lea r12, [rsp + 0x30]
0x0000389b      4c0fafc0       imul r8, rax
0x0000389f      4d89c6         mov r14, r8
0x000038a2      eb43           jmp 0x38e7
0x000038a4      0f1f4000       nop dword [rax]
0x000038a8      f2410f104500   movsd xmm0, qword [r13]
0x000038ae      31c9           xor ecx, ecx
0x000038b0      31d2           xor edx, edx
0x000038b2      be28000000     mov esi, 0x28                           ; '('
0x000038b7      4c89e7         mov rdi, r12
0x000038ba      4983c508       add r13, 8
0x000038be      e81d1e0000     call sym.dtoastr
0x000038c3      8b742410       mov esi, dword [rsp + 0x10]
0x000038c7      488d3d0e7400.  lea rdi, [0x0000acdc]                   ; "%*s"
0x000038ce      31c0           xor eax, eax
0x000038d0      4c89e2         mov rdx, r12
0x000038d3      e878480000     call sym.xprintf
0x000038d8      4c2b742418     sub r14, qword [rsp + 0x18]
0x000038dd      4c3b7c2408     cmp r15, qword [rsp + 8]
0x000038e2      4189d9         mov r9d, ebx
0x000038e5      7459           je 0x3940
0x000038e7      31d2           xor edx, edx
0x000038e9      4c89f0         mov rax, r14
0x000038ec      4983ef01       sub r15, 1
0x000038f0      48f7f5         div rbp
0x000038f3      4129c1         sub r9d, eax
0x000038f6      44034c2414     add r9d, dword [rsp + 0x14]
0x000038fb      803dffc72000.  cmp byte [obj.input_swap], 0            ; [0x210101:1]=0
0x00003902      4889c3         mov rbx, rax
0x00003905      44894c2410     mov dword [rsp + 0x10], r9d
0x0000390a      749c           je 0x38a8
0x0000390c      498d5507       lea rdx, [r13 + 7]
0x00003910      488d742428     lea rsi, [rsp + 0x28]
0x00003915      31c0           xor eax, eax
0x00003917      660f1f840000.  nop word [rax + rax]
0x00003920      0fb60a         movzx ecx, byte [rdx]
0x00003923      4883ea01       sub rdx, 1
0x00003927      880c06         mov byte [rsi + rax], cl
0x0000392a      4883c001       add rax, 1
0x0000392e      4883f808       cmp rax, 8
0x00003932      75ec           jne 0x3920
0x00003934      f20f10442428   movsd xmm0, qword [rsp + 0x28]
0x0000393a      e96fffffff     jmp 0x38ae
0x0000393f      90             nop
0x00003940      488b442458     mov rax, qword [rsp + 0x58]
0x00003945      644833042528.  xor rax, qword fs:[0x28]
0x0000394e      750f           jne 0x395f
0x00003950      4883c468       add rsp, 0x68
0x00003954      5b             pop rbx
0x00003955      5d             pop rbp
0x00003956      415c           pop r12
0x00003958      415d           pop r13
0x0000395a      415e           pop r14
0x0000395c      415f           pop r15
0x0000395e      c3             ret
0x0000395f      e87cdfffff     call sym.imp.__stack_chk_fail
0x00003964      6690           nop
0x00003966      662e0f1f8400.  nop word cs:[rax + rax]
;-- print_float:
0x00003970      4157           push r15                                ; /src:478
0x00003972      4156           push r14
0x00003974      4889f0         mov rax, rsi
0x00003977      4155           push r13
0x00003979      4154           push r12
0x0000397b      55             push rbp
0x0000397c      53             push rbx
0x0000397d      4883ec68       sub rsp, 0x68
0x00003981      4889742410     mov qword [rsp + 0x10], rsi
0x00003986      4489442428     mov dword [rsp + 0x28], r8d
0x0000398b      64488b342528.  mov rsi, qword fs:[0x28]
0x00003994      4889742458     mov qword [rsp + 0x58], rsi
0x00003999      31f6           xor esi, esi
0x0000399b      4839c7         cmp rdi, rax
0x0000399e      0f86cc000000   jbe 0x3a70
0x000039a4      4c8d47ff       lea r8, [rdi - 1]
0x000039a8      4963c1         movsxd rax, r9d
0x000039ab      4189ec         mov r12d, ebp
0x000039ae      4889442418     mov qword [rsp + 0x18], rax
0x000039b3      4889d3         mov rbx, rdx
0x000039b6      48897c2420     mov qword [rsp + 0x20], rdi
0x000039bb      4c0fafc0       imul r8, rax
0x000039bf      488d442430     lea rax, [rsp + 0x30]
0x000039c4      4889fd         mov rbp, rdi
0x000039c7      4589cd         mov r13d, r9d
0x000039ca      4889442408     mov qword [rsp + 8], rax
0x000039cf      4d89c7         mov r15, r8
0x000039d2      eb44           jmp 0x3a18
0x000039d4      0f1f4000       nop dword [rax]
0x000039d8      f30f1003       movss xmm0, dword [rbx]
0x000039dc      488b7c2408     mov rdi, qword [rsp + 8]
0x000039e1      31c9           xor ecx, ecx
0x000039e3      31d2           xor edx, edx
0x000039e5      be1f000000     mov esi, 0x1f
0x000039ea      4883c304       add rbx, 4
0x000039ee      e85d1e0000     call sym.ftoastr
0x000039f3      488b542408     mov rdx, qword [rsp + 8]
0x000039f8      488d3ddd7200.  lea rdi, [0x0000acdc]                   ; "%*s"
0x000039ff      4489ee         mov esi, r13d
0x00003a02      31c0           xor eax, eax
0x00003a04      4589f5         mov r13d, r14d
0x00003a07      e844470000     call sym.xprintf
0x00003a0c      4c2b7c2418     sub r15, qword [rsp + 0x18]
0x00003a11      483b6c2410     cmp rbp, qword [rsp + 0x10]
0x00003a16      7458           je 0x3a70
0x00003a18      31d2           xor edx, edx
0x00003a1a      4c89f8         mov rax, r15
0x00003a1d      4883ed01       sub rbp, 1
0x00003a21      48f7742420     div qword [rsp + 0x20]
0x00003a26      4129c5         sub r13d, eax
0x00003a29      44036c2428     add r13d, dword [rsp + 0x28]
0x00003a2e      803dccc62000.  cmp byte [obj.input_swap], 0            ; [0x210101:1]=0
0x00003a35      4989c6         mov r14, rax
0x00003a38      749e           je 0x39d8
0x00003a3a      448a6303       mov r12b, byte [rbx + 3]
0x00003a3e      0fb65301       movzx edx, byte [rbx + 1]
0x00003a42      4489e0         mov eax, r12d
0x00003a45      8a6302         mov ah, byte [rbx + 2]
0x00003a48      c1e210         shl edx, 0x10
0x00003a4b      440fb7d0       movzx r10d, ax
0x00003a4f      0fb603         movzx eax, byte [rbx]
0x00003a52      4109d2         or r10d, edx
0x00003a55      c1e018         shl eax, 0x18
0x00003a58      4109c2         or r10d, eax
0x00003a5b      448954242c     mov dword [rsp + 0x2c], r10d
0x00003a60      4589d4         mov r12d, r10d
0x00003a63      f30f1044242c   movss xmm0, dword [rsp + 0x2c]
0x00003a69      e96effffff     jmp 0x39dc
0x00003a6e      6690           nop
0x00003a70      488b442458     mov rax, qword [rsp + 0x58]
0x00003a75      644833042528.  xor rax, qword fs:[0x28]
0x00003a7e      750f           jne 0x3a8f
0x00003a80      4883c468       add rsp, 0x68
0x00003a84      5b             pop rbx
0x00003a85      5d             pop rbp
0x00003a86      415c           pop r12
0x00003a88      415d           pop r13
0x00003a8a      415e           pop r14
0x00003a8c      415f           pop r15
0x00003a8e      c3             ret
0x00003a8f      e84cdeffff     call sym.imp.__stack_chk_fail
0x00003a94      6690           nop
0x00003a96      662e0f1f8400.  nop word cs:[rax + rax]
;-- decode_format_string:
0x00003aa0      4157           push r15                                ; /src:982
0x00003aa2      4156           push r14
0x00003aa4      4155           push r13
0x00003aa6      4154           push r12
0x00003aa8      55             push rbp
0x00003aa9      53             push rbx
0x00003aaa      4883ec18       sub rsp, 0x18
0x00003aae      4885ff         test rdi, rdi                           ; /src:984
0x00003ab1      48893c24       mov qword [rsp], rdi                    ; /src:982
0x00003ab5      0f84ea070000   je 0x42a5                               ; /src:984
0x00003abb      803f00         cmp byte [rdi], 0                       ; /src:986
0x00003abe      488b050bc720.  mov rax, qword [obj.n_specs]            ; [0x2101d0:8]=0
0x00003ac5      4989fc         mov r12, rdi
0x00003ac8      4c8d35f18400.  lea r14, [0x0000bfc0]                   ; /src:648
0x00003acf      0f841d020000   je 0x3cf2                               ; /src:986
0x00003ad5      0f1f00         nop dword [rax]
0x00003ad8      488b0de9c620.  mov rcx, qword [obj.n_specs_allocated]  ; /src:990 ; [0x2101c8:8]=0
0x00003adf      488b3df2c620.  mov rdi, qword [obj.spec]               ; [0x2101d8:8]=0
0x00003ae6      4839c1         cmp rcx, rax
0x00003ae9      0f8691020000   jbe 0x3d80
0x00003aef      488d0480       lea rax, [rax + rax*4]                  ; /src:993
0x00003af3      488d2cc7       lea rbp, [rdi + rax*8]
0x00003af7      4885ed         test rbp, rbp                           ; /src:646
0x00003afa      0f845d070000   je 0x425d
0x00003b00      410fb63424     movzx esi, byte [r12]                   ; /src:648
0x00003b05      8d469f         lea eax, [rsi - 0x61]
0x00003b08      3c17           cmp al, 0x17
0x00003b0a      0f8728020000   ja 0x3d38
0x00003b10      0fb6c0         movzx eax, al
0x00003b13      49630486       movsxd rax, dword [r14 + rax*4]
0x00003b17      4c01f0         add rax, r14
0x00003b1a      ffe0           jmp rax
0x00003b1c      0f1f4000       nop dword [rax]
0x00003b20      410fb6442401   movzx eax, byte [r12 + 1]               ; /src:781
0x00003b26      3c46           cmp al, 0x46
0x00003b28      0f849a050000   je 0x40c8
0x00003b2e      3c4c           cmp al, 0x4c
0x00003b30      0f847a050000   je 0x40b0
0x00003b36      3c44           cmp al, 0x44
0x00003b38      0f845a050000   je 0x4098
0x00003b3e      0fbec8         movsx ecx, al                           ; /src:602
0x00003b41      498d742401     lea rsi, [r12 + 1]                      ; /src:780
0x00003b46      83e930         sub ecx, 0x30                           ; /src:602
0x00003b49      83f909         cmp ecx, 9
0x00003b4c      0f87be040000   ja 0x4010
0x00003b52      498d5c2402     lea rbx, [r12 + 2]                      ; /src:604
0x00003b57      4863c9         movsxd rcx, ecx                         ; /src:605
0x00003b5a      4531c0         xor r8d, r8d                            ; /src:601
0x00003b5d      eb28           jmp 0x3b87
0x00003b5f      90             nop
0x00003b60      4863c8         movsxd rcx, eax                         ; /src:605
0x00003b63      48b8cdcccccc.  movabs rax, 0xcccccccccccccccd
0x00003b6d      4883c301       add rbx, 1                              ; /src:604
0x00003b71      4889ca         mov rdx, rcx                            ; /src:605
0x00003b74      48f7d2         not rdx
0x00003b77      48f7e2         mul rdx
0x00003b7a      48c1ea03       shr rdx, 3
0x00003b7e      4c39c2         cmp rdx, r8
0x00003b81      0f8219060000   jb 0x41a0
0x00003b87      4b8d0480       lea rax, [r8 + r8*4]                    ; /src:607
0x00003b8b      4c8d0441       lea r8, [rcx + rax*2]
0x00003b8f      0fbe03         movsx eax, byte [rbx]                   ; /src:602
0x00003b92      83e830         sub eax, 0x30
0x00003b95      83f809         cmp eax, 9
0x00003b98      76c6           jbe 0x3b60
0x00003b9a      4839de         cmp rsi, rbx                            ; /src:807
0x00003b9d      448b2d9cc520.  mov r13d, dword [0x00210140]            ; [0x210140:4]=0
0x00003ba4      0f8476040000   je 0x4020
0x00003baa      4983f810       cmp r8, 0x10                            ; /src:811
0x00003bae      7714           ja 0x3bc4
0x00003bb0      488d0569c520.  lea rax, obj.fp_type_size               ; /src:812 ; 0x210120
0x00003bb7      468b2c80       mov r13d, dword [rax + r8*4]
0x00003bbb      4585ed         test r13d, r13d
0x00003bbe      0f855c040000   jne 0x4020
0x00003bc4      488b3c24       mov rdi, qword [rsp]                    ; /src:814
0x00003bc8      4c89442408     mov qword [rsp + 8], r8
0x00003bcd      e84e3c0000     call sym.quote
0x00003bd2      ba05000000     mov edx, 5                              ; /src:815
0x00003bd7      4889c3         mov rbx, rax                            ; /src:814
0x00003bda      488d35df7300.  lea rsi, str.invalid_type_string__s___this_system_doesn_t_provide_a__lu_byte_floating_point_type ; /src:815 ; 0xafc0 ; "invalid type string %s;\nthis system doesn't provide a %lu-byte floating point type"
0x00003be1      e9fc030000     jmp 0x3fe2
0x00003be6      662e0f1f8400.  nop word cs:[rax + rax]
0x00003bf0      410fb6442401   movzx eax, byte [r12 + 1]               ; /src:656
0x00003bf6      3c49           cmp al, 0x49
0x00003bf8      0f8402060000   je 0x4200
0x00003bfe      0f8efc010000   jle 0x3e00
0x00003c04      3c4c           cmp al, 0x4c
0x00003c06      0f84dc050000   je 0x41e8
0x00003c0c      3c53           cmp al, 0x53
0x00003c0e      0f852c030000   jne 0x3f40
0x00003c14      4080fe6f       cmp sil, 0x6f                           ; /src:711
0x00003c18      498d5c2402     lea rbx, [r12 + 2]                      ; /src:664
0x00003c1d      448b2d64c520.  mov r13d, dword [0x00210188]            ; [0x210188:4]=0
0x00003c24      41b802000000   mov r8d, 2                              ; /src:665
0x00003c2a      0f85f4010000   jne 0x3e24                              ; /src:711
0x00003c30      418d45fc       lea eax, [r13 - 4]                      ; /src:724
0x00003c34      4c8d0d1a7100.  lea r9, [0x0000ad55]                    ; "o"
0x00003c3b      4c8d5510       lea r10, [rbp + 0x10]                   ; /src:722
0x00003c3f      488d0ddf7000.  lea rcx, str.._d_s                      ; .//ib:33 ; 0xad25 ; "%%*.%d%s"
0x00003c46      ba08000000     mov edx, 8
0x00003c4b      be01000000     mov esi, 1
0x00003c50      83f801         cmp eax, 1                              ; /src:724
0x00003c53      488d05897000.  lea rax, [0x0000ace3]                   ; "lo"
0x00003c5a      4c89d7         mov rdi, r10                            ; .//ib:33
0x00003c5d      4c89542408     mov qword [rsp + 8], r10
0x00003c62      4c0f46c8       cmovbe r9, rax                          ; /src:724
0x00003c66      488d05d38a00.  lea rax, obj.bytes_to_oct_digits        ; /src:723 ; 0xc740
0x00003c6d      468b3c80       mov r15d, dword [rax + r8*4]            ; /src:722
0x00003c71      31c0           xor eax, eax                            ; .//ib:33
0x00003c73      4589f8         mov r8d, r15d
0x00003c76      e8d5deffff     call sym.imp.__sprintf_chk
0x00003c7b      ba02000000     mov edx, 2                              ; /src:721
0x00003c80      4c8b542408     mov r10, qword [rsp + 8]
0x00003c85      e909020000     jmp 0x3e93
0x00003c8a      660f1f440000   nop word [rax + rax]
0x00003c90      498d5c2401     lea rbx, [r12 + 1]                      ; /src:865
0x00003c95      488d05340600.  lea rax, sym.print_ascii                ; /src:868 ; 0x42d0 ; "AWAVAUATUSH\x83\xec8dH\x8b\x04%("
0x00003c9c      41bf03000000   mov r15d, 3                             ; /src:869
0x00003ca2      ba06000000     mov edx, 6                              ; /src:866
0x00003ca7      41bd01000000   mov r13d, 1                             ; /src:867
0x00003cad      48894508       mov qword [rbp + 8], rax                ; /src:880
0x00003cb1      44896d04       mov dword [rbp + 4], r13d               ; /src:878
0x00003cb5      895500         mov dword [rbp], edx                    ; /src:879
0x00003cb8      44897d1c       mov dword [rbp + 0x1c], r15d            ; /src:882
0x00003cbc      803b7a         cmp byte [rbx], 0x7a                    ; /src:883
0x00003cbf      0f94c0         sete al
0x00003cc2      884518         mov byte [rbp + 0x18], al
0x00003cc5      0fb6c0         movzx eax, al                           ; /src:885
0x00003cc8      4801c3         add rbx, rax
0x00003ccb      4939dc         cmp r12, rbx
0x00003cce      0f846a050000   je 0x423e
0x00003cd4      488b05f5c420.  mov rax, qword [obj.n_specs]            ; [0x2101d0:8]=0
0x00003cdb      4989dc         mov r12, rbx
0x00003cde      4883c001       add rax, 1
0x00003ce2      803b00         cmp byte [rbx], 0
0x00003ce5      488905e4c420.  mov qword [obj.n_specs], rax            ; [0x2101d0:8]=0
0x00003cec      0f85e6fdffff   jne 0x3ad8
0x00003cf2      4883c418       add rsp, 0x18
0x00003cf6      b801000000     mov eax, 1
0x00003cfb      5b             pop rbx
0x00003cfc      5d             pop rbp
0x00003cfd      415c           pop r12
0x00003cff      415d           pop r13
0x00003d01      415e           pop r14                                 ; /src:868
0x00003d03      415f           pop r15
0x00003d05      c3             ret
0x00003d06      662e0f1f8400.  nop word cs:[rax + rax]
0x00003d10      498d5c2401     lea rbx, [r12 + 1]                      ; /src:884
0x00003d15      41bf03000000   mov r15d, 3
0x00003d1b      488d051ef3ff.  lea rax, sym.print_named_ascii          ; 0x3040 ; "AWAVAUATUSH\x83\xec(dH\x8b\x04%("
0x00003d22      ba05000000     mov edx, 5
0x00003d27      41bd01000000   mov r13d, 1
0x00003d2d      e97bffffff     jmp 0x3cad
0x00003d32      660f1f440000   nop word [rax + rax]
0x00003d38      488b3c24       mov rdi, qword [rsp]
0x00003d3c      e8df3a0000     call sym.quote                          ; /src:741
0x00003d41      410fbe1c24     movsx ebx, byte [r12]
0x00003d46      488d35cb7200.  lea rsi, str.invalid_character___c__in_type_string__s ; 0xb018 ; "invalid character '%c' in type string %s"
0x00003d4d      4889c5         mov rbp, rax                            ; /src:755
0x00003d50      ba05000000     mov edx, 5
0x00003d55      31ff           xor edi, edi
0x00003d57      e854dbffff     call sym.imp.dcgettext
0x00003d5c      4989e8         mov r8, rbp
0x00003d5f      4889c2         mov rdx, rax
0x00003d62      31f6           xor esi, esi
0x00003d64      89d9           mov ecx, ebx
0x00003d66      31c0           xor eax, eax
0x00003d68      31ff           xor edi, edi
0x00003d6a      e831ddffff     call sym.imp.error
0x00003d6f      4883c418       add rsp, 0x18
0x00003d73      31c0           xor eax, eax
0x00003d75      5b             pop rbx
0x00003d76      5d             pop rbp
0x00003d77      415c           pop r12
0x00003d79      415d           pop r13
0x00003d7b      415e           pop r14
0x00003d7d      415f           pop r15
0x00003d7f      c3             ret
0x00003d80      4885ff         test rdi, rdi
0x00003d83      744b           je 0x3dd0
0x00003d85      48b821222222.  movabs rax, 0x222222222222221
0x00003d8f      4839c1         cmp rcx, rax
0x00003d92      7765           ja 0x3df9
0x00003d94      4889c8         mov rax, rcx
0x00003d97      48d1e8         shr rax, 1
0x00003d9a      488d4c0101     lea rcx, [rcx + rax + 1]                ; ../coreutils-8.31/src/.c:82
0x00003d9f      488d3489       lea rsi, [rcx + rcx*4]
0x00003da3      48890d1ec420.  mov qword [obj.n_specs_allocated], rcx  ; [0x2101c8:8]=0
0x00003daa      48c1e603       shl rsi, 3
0x00003dae      e80d410000     call sym.xrealloc
0x00003db3      4889c7         mov rdi, rax
0x00003db6      4889051bc420.  mov qword [obj.spec], rax               ; [0x2101d8:8]=0
0x00003dbd      488b050cc420.  mov rax, qword [obj.n_specs]            ; [0x2101d0:8]=0
0x00003dc4      e926fdffff     jmp 0x3aef
0x00003dc9      0f1f80000000.  nop dword [rax]
0x00003dd0      4885c9         test rcx, rcx
0x00003dd3      b803000000     mov eax, 3
0x00003dd8      ba28000000     mov edx, 0x28                           ; '('
0x00003ddd      480f44c8       cmove rcx, rax
0x00003de1      4889d0         mov rax, rdx
0x00003de4      31f6           xor esi, esi
0x00003de6      48f7e1         mul rcx
0x00003de9      0f80ac040000   jo 0x429b
0x00003def      4885c0         test rax, rax
0x00003df2      7805           js 0x3df9                               ; ../coreutils-8.31/src/.c:71
0x00003df4      4885f6         test rsi, rsi
0x00003df7      74a6           je 0x3d9f
0x00003df9      e8b2420000     call sym.xalloc_die
0x00003dfe      6690           nop
0x00003e00      3c43           cmp al, 0x43
0x00003e02      0f8538010000   jne 0x3f40
0x00003e08      448b2d75c320.  mov r13d, dword [0x00210184]            ; [0x210184:4]=0
0x00003e0f      498d5c2402     lea rbx, [r12 + 2]
0x00003e14      41b801000000   mov r8d, 1
0x00003e1a      4080fe6f       cmp sil, 0x6f
0x00003e1e      0f840cfeffff   je 0x3c30
0x00003e24      0f8eb6020000   jle 0x40e0                              ; /src:541
0x00003e2a      4080fe75       cmp sil, 0x75
0x00003e2e      0f840c030000   je 0x4140
0x00003e34      4080fe78       cmp sil, 0x78
0x00003e38      0f850b020000   jne 0x4049
0x00003e3e      418d45fc       lea eax, [r13 - 4]
0x00003e42      4c8d0d977000.  lea r9, [0x0000aee0]                    ; "x"
0x00003e49      4c8d5510       lea r10, [rbp + 0x10]
0x00003e4d      488d0dd16e00.  lea rcx, str.._d_s                      ; 0xad25 ; "%%*.%d%s"
0x00003e54      ba08000000     mov edx, 8
0x00003e59      be01000000     mov esi, 1
0x00003e5e      83f801         cmp eax, 1                              ; /src:618
0x00003e61      488d05816e00.  lea rax, [0x0000ace9]                   ; "lx"
0x00003e68      4c89d7         mov rdi, r10
0x00003e6b      4c89542408     mov qword [rsp + 8], r10
0x00003e70      4c0f46c8       cmovbe r9, rax
0x00003e74      488d05a58700.  lea rax, obj.bytes_to_hex_digits        ; 0xc620
0x00003e7b      468b3c80       mov r15d, dword [rax + r8*4]
0x00003e7f      31c0           xor eax, eax
0x00003e81      4589f8         mov r8d, r15d
0x00003e84      e8c7dcffff     call sym.imp.__sprintf_chk
0x00003e89      4c8b542408     mov r10, qword [rsp + 8]                ; /src:619
0x00003e8e      ba03000000     mov edx, 3
0x00003e93      4c89d7         mov rdi, r10
0x00003e96      89542408       mov dword [rsp + 8], edx
0x00003e9a      e831daffff     call sym.imp.strlen
0x00003e9f      4883f807       cmp rax, 7
0x00003ea3      8b542408       mov edx, dword [rsp + 8]                ; /src:617
0x00003ea7      0f87cf030000   ja 0x427c
0x00003ead      4183fd05       cmp r13d, 5
0x00003eb1      0f8792010000   ja 0x4049
0x00003eb7      488d35628100.  lea rsi, [0x0000c020]
0x00003ebe      4489e9         mov ecx, r13d
0x00003ec1      4863048e       movsxd rax, dword [rsi + rcx*4]
0x00003ec5      4801f0         add rax, rsi
0x00003ec8      ffe0           jmp rax
0x00003eca      660f1f440000   nop word [rax + rax]
0x00003ed0      488d0559f2ff.  lea rax, sym.print_long_long            ; 0x3130 ; "AWAVAUATUSH\x83\xec8dH\x8b\x04%("
0x00003ed7      e9d1fdffff     jmp 0x3cad
0x00003edc      0f1f4000       nop dword [rax]
0x00003ee0      488d0549f3ff.  lea rax, sym.print_long                 ; 0x3230 ; "AWAVAUATUSH\x83\xec8dH\x8b\x04%("
0x00003ee7      e9c1fdffff     jmp 0x3cad
0x00003eec      0f1f4000       nop dword [rax]
0x00003ef0      488d0539f4ff.  lea rax, sym.print_int                  ; 0x3330 ; "AWAVAUATUSH\x89\xfbH\x83\xec8dH\x8b<%("
0x00003ef7      e9b1fdffff     jmp 0x3cad
0x00003efc      0f1f4000       nop dword [rax]
0x00003f00      488d0529f5ff.  lea rax, sym.print_short                ; 0x3430 ; "AWAVAUATUSH\x83\xec8dH\x8b\x04%("
0x00003f07      488d0d12f6ff.  lea rcx, sym.print_s_short              ; 0x3520 ; "AWAVAUATUSH\x83\xec8dH\x8b\x04%("
0x00003f0e      85d2           test edx, edx
0x00003f10      480f44c1       cmove rax, rcx
0x00003f14      e994fdffff     jmp 0x3cad
0x00003f19      0f1f80000000.  nop dword [rax]
0x00003f20      488d05e9f6ff.  lea rax, sym.print_char                 ; 0x3610 ; "AWAVAUATUSH\x83\xec\x18H9\xf7H\x89\f$v[H\x8dO\xffMc\xe1H\x89\xfdH)\xf5H\x89\xfbI\x89\xd7I\x0f\xaf\xccH\x8d\x04*E\x89\xc6H\x89D$\bI\x89\xcd\x0f\x1f"
0x00003f27      488d0d72f7ff.  lea rcx, sym.print_s_char               ; 0x36a0 ; "AWAVAUATUSH\x83\xec\x18H9\xf7H\x89\f$v[H\x8dO\xffMc\xe1H\x89\xfdH)\xf5H\x89\xfbI\x89\xd7I\x0f\xaf\xccH\x8d\x04*E\x89\xc6H\x89D$\bI\x89\xcd\x0f\x1f"
0x00003f2e      85d2           test edx, edx
0x00003f30      480f44c1       cmove rax, rcx
0x00003f34      e974fdffff     jmp 0x3cad
0x00003f39      0f1f80000000.  nop dword [rax]
0x00003f40      0fbec8         movsx ecx, al
0x00003f43      498d7c2401     lea rdi, [r12 + 1]
0x00003f48      83e930         sub ecx, 0x30
0x00003f4b      83f909         cmp ecx, 9
0x00003f4e      0f87d5020000   ja 0x4229
0x00003f54      498d5c2402     lea rbx, [r12 + 2]
0x00003f59      4863c9         movsxd rcx, ecx
0x00003f5c      4531c0         xor r8d, r8d
0x00003f5f      eb2e           jmp 0x3f8f
0x00003f61      0f1f80000000.  nop dword [rax]
0x00003f68      4863c8         movsxd rcx, eax
0x00003f6b      48b8cdcccccc.  movabs rax, 0xcccccccccccccccd
0x00003f75      4883c301       add rbx, 1
0x00003f79      4889ca         mov rdx, rcx
0x00003f7c      48f7d2         not rdx
0x00003f7f      48f7e2         mul rdx
0x00003f82      48c1ea03       shr rdx, 3
0x00003f86      4c39c2         cmp rdx, r8
0x00003f89      0f8211020000   jb 0x41a0
0x00003f8f      4b8d0480       lea rax, [r8 + r8*4]
0x00003f93      4c8d0441       lea r8, [rcx + rax*2]
0x00003f97      0fbe03         movsx eax, byte [rbx]
0x00003f9a      83e830         sub eax, 0x30
0x00003f9d      83f809         cmp eax, 9
0x00003fa0      76c6           jbe 0x3f68
0x00003fa2      4839df         cmp rdi, rbx
0x00003fa5      0f846c020000   je 0x4217
0x00003fab      4983f808       cmp r8, 8
0x00003faf      7714           ja 0x3fc5                               ; /src:443
0x00003fb1      488d05c8c120.  lea rax, obj.integral_type_size         ; 0x210180
0x00003fb8      468b2c80       mov r13d, dword [rax + r8*4]
0x00003fbc      4585ed         test r13d, r13d
0x00003fbf      0f8555feffff   jne 0x3e1a
0x00003fc5      488b3c24       mov rdi, qword [rsp]
0x00003fc9      4c89442408     mov qword [rsp + 8], r8
0x00003fce      e84d380000     call sym.quote
0x00003fd3      488d355e6f00.  lea rsi, str.invalid_type_string__s___this_system_doesn_t_provide_a__lu_byte_integral_type ; 0xaf38 ; "invalid type string %s;\nthis system doesn't provide a %lu-byte integral type"
0x00003fda      4889c3         mov rbx, rax
0x00003fdd      ba05000000     mov edx, 5
0x00003fe2      31ff           xor edi, edi
0x00003fe4      e8c7d8ffff     call sym.imp.dcgettext                  ; /src:401
0x00003fe9      4c8b442408     mov r8, qword [rsp + 8]
0x00003fee      4889d9         mov rcx, rbx
0x00003ff1      4889c2         mov rdx, rax
0x00003ff4      31f6           xor esi, esi
0x00003ff6      31c0           xor eax, eax
0x00003ff8      31ff           xor edi, edi
0x00003ffa      e8a1daffff     call sym.imp.error
0x00003fff      4883c418       add rsp, 0x18
0x00004003      31c0           xor eax, eax
0x00004005      5b             pop rbx
0x00004006      5d             pop rbp
0x00004007      415c           pop r12
0x00004009      415d           pop r13
0x0000400b      415e           pop r14
0x0000400d      415f           pop r15
0x0000400f      c3             ret
0x00004010      448b2d29c120.  mov r13d, dword [0x00210140]            ; [0x210140:4]=0
0x00004017      4889f3         mov rbx, rsi
0x0000401a      660f1f440000   nop word [rax + rax]
0x00004020      e83bd8ffff     call sym.imp.localeconv
0x00004025      488b38         mov rdi, qword [rax]                    ; /src:278
0x00004028      b801000000     mov eax, 1
0x0000402d      803f00         cmp byte [rdi], 0
0x00004030      7405           je 0x4037
0x00004032      e899d8ffff     call sym.imp.strlen
0x00004037      4183fd07       cmp r13d, 7
0x0000403b      7413           je 0x4050
0x0000403d      4183fd08       cmp r13d, 8                             ; /src:283
0x00004041      743d           je 0x4080
0x00004043      4183fd06       cmp r13d, 6
0x00004047      741f           je 0x4068
0x00004049      e892d7ffff     call sym.imp.abort
0x0000404e      6690           nop
0x00004050      448d7817       lea r15d, [rax + 0x17]
0x00004054      ba04000000     mov edx, 4
0x00004059      488d05f0f7ff.  lea rax, sym.print_double               ; 0x3850 ; "AWAVAUATUSH\x89\xfdH\x83\xechdH\x8b<%("
0x00004060      e948fcffff     jmp 0x3cad
0x00004065      0f1f00         nop dword [rax]
0x00004068      448d780e       lea r15d, [rax + 0xe]
0x0000406c      ba04000000     mov edx, 4
0x00004071      488d05f8f8ff.  lea rax, sym.print_float                ; 0x3970 ; "AWAVH\x89\xf0AUATUSH\x83\xechH\x89t$\x10D\x89D$(dH\x8b4%("
0x00004078      e930fcffff     jmp 0x3cad
0x0000407d      0f1f00         nop dword [rax]
0x00004080      448d781c       lea r15d, [rax + 0x1c]
0x00004084      ba04000000     mov edx, 4
0x00004089      488d05a0f6ff.  lea rax, sym.print_long_double          ; 0x3730 ; "AWAVAUATI\x89\xfcUSH\x83\xecxdH\x8b<%("
0x00004090      e918fcffff     jmp 0x3cad
0x00004095      0f1f00         nop dword [rax]
0x00004098      498d5c2402     lea rbx, [r12 + 2]
0x0000409d      448b2d9cc020.  mov r13d, dword [0x00210140]            ; [0x210140:4]=0
0x000040a4      e977ffffff     jmp 0x4020
0x000040a9      0f1f80000000.  nop dword [rax]
0x000040b0      498d5c2402     lea rbx, [r12 + 2]
0x000040b5      448b2da4c020.  mov r13d, dword [0x00210160]            ; [0x210160:4]=0
0x000040bc      e95fffffff     jmp 0x4020
0x000040c1      0f1f80000000.  nop dword [rax]
0x000040c8      498d5c2402     lea rbx, [r12 + 2]
0x000040cd      448b2d5cc020.  mov r13d, dword [0x00210130]            ; /src:218 ; [0x210130:4]=0
0x000040d4      e947ffffff     jmp 0x4020                              ; /src:219
0x000040d9      0f1f80000000.  nop dword [rax]
0x000040e0      4080fe64       cmp sil, 0x64
0x000040e4      0f855fffffff   jne 0x4049
0x000040ea      488d05ef8500.  lea rax, obj.bytes_to_signed_dec_digits ; 0xc6e0
0x000040f1      4c8d5510       lea r10, [rbp + 0x10]
0x000040f5      488d0d236c00.  lea rcx, [0x0000ad1f]                   ; "%%*%s"
0x000040fc      ba08000000     mov edx, 8
0x00004101      be01000000     mov esi, 1
0x00004106      468b3c80       mov r15d, dword [rax + r8*4]
0x0000410a      418d45fc       lea eax, [r13 - 4]
0x0000410e      4c8d05c98f00.  lea r8, [0x0000d0de]                    ; .//ib:-478 ; "d"
0x00004115      4c89d7         mov rdi, r10                            ; /src:217
0x00004118      4c89542408     mov qword [rsp + 8], r10
0x0000411d      83f801         cmp eax, 1
0x00004120      488d05b96b00.  lea rax, [0x0000ace0]                   ; "ld"
0x00004127      4c0f46c0       cmovbe r8, rax
0x0000412b      31c0           xor eax, eax
0x0000412d      e81edaffff     call sym.imp.__sprintf_chk              ; /src:173
0x00004132      31d2           xor edx, edx
0x00004134      4c8b542408     mov r10, qword [rsp + 8]
0x00004139      e955fdffff     jmp 0x3e93
0x0000413e      6690           nop
0x00004140      488d05398500.  lea rax, obj.bytes_to_unsigned_dec_digits ; 0xc680
0x00004147      4c8d5510       lea r10, [rbp + 0x10]
0x0000414b      488d0dcd6b00.  lea rcx, [0x0000ad1f]                   ; "%%*%s"
0x00004152      ba08000000     mov edx, 8
0x00004157      be01000000     mov esi, 1
0x0000415c      468b3c80       mov r15d, dword [rax + r8*4]
0x00004160      418d45fc       lea eax, [r13 - 4]
0x00004164      4c8d057c6b00.  lea r8, [0x0000ace7]                    ; "u"
0x0000416b      4c89d7         mov rdi, r10
0x0000416e      4c89542408     mov qword [rsp + 8], r10
0x00004173      83f801         cmp eax, 1
0x00004176      488d05696b00.  lea rax, [0x0000ace6]                   ; "lu"
0x0000417d      4c0f46c0       cmovbe r8, rax
0x00004181      31c0           xor eax, eax                            ; /src:164
0x00004183      e8c8d9ffff     call sym.imp.__sprintf_chk
0x00004188      ba01000000     mov edx, 1
0x0000418d      4c8b542408     mov r10, qword [rsp + 8]                ; /src:158
0x00004192      e9fcfcffff     jmp 0x3e93
0x00004197      660f1f840000.  nop word [rax + rax]
0x000041a0      488b3c24       mov rdi, qword [rsp]
0x000041a4      e877360000     call sym.quote
0x000041a9      488d35886b00.  lea rsi, str.invalid_type_string__s     ; 0xad38 ; "invalid type string %s"
0x000041b0      4889c3         mov rbx, rax
0x000041b3      ba05000000     mov edx, 5
0x000041b8      31ff           xor edi, edi
0x000041ba      e8f1d6ffff     call sym.imp.dcgettext
0x000041bf      4889d9         mov rcx, rbx
0x000041c2      4889c2         mov rdx, rax
0x000041c5      31f6           xor esi, esi
0x000041c7      31c0           xor eax, eax
0x000041c9      31ff           xor edi, edi
0x000041cb      e8d0d8ffff     call sym.imp.error                      ; /src:485
0x000041d0      4883c418       add rsp, 0x18
0x000041d4      31c0           xor eax, eax
0x000041d6      5b             pop rbx
0x000041d7      5d             pop rbp
0x000041d8      415c           pop r12
0x000041da      415d           pop r13
0x000041dc      415e           pop r14
0x000041de      415f           pop r15
0x000041e0      c3             ret
0x000041e1      0f1f80000000.  nop dword [rax]
0x000041e8      498d5c2402     lea rbx, [r12 + 2]
0x000041ed      448b2dacbf20.  mov r13d, dword [0x002101a0]            ; [0x2101a0:4]=0
0x000041f4      41b808000000   mov r8d, 8
0x000041fa      e91bfcffff     jmp 0x3e1a
0x000041ff      90             nop
0x00004200      498d5c2402     lea rbx, [r12 + 2]
0x00004205      448b2d84bf20.  mov r13d, dword [0x00210190]            ; [0x210190:4]=0
0x0000420c      41b804000000   mov r8d, 4
0x00004212      e903fcffff     jmp 0x3e1a
0x00004217      448b2d72bf20.  mov r13d, dword [0x00210190]            ; [0x210190:4]=0
0x0000421e      41b804000000   mov r8d, 4
0x00004224      e9f1fbffff     jmp 0x3e1a
0x00004229      448b2d60bf20.  mov r13d, dword [0x00210190]            ; [0x210190:4]=0
0x00004230      4889fb         mov rbx, rdi
0x00004233      41b804000000   mov r8d, 4
0x00004239      e9dcfbffff     jmp 0x3e1a
0x0000423e      488d0d8b8200.  lea rcx, obj.__PRETTY_FUNCTION__.7462   ; /src:-106 ; 0xc4d0 ; "decode_format_string"
0x00004245      488d35a06a00.  lea rsi, str..._coreutils_8.31_src_od.c ; 0xacec ; "../coreutils-8.31/src/od.c"
0x0000424c      488d3ddb6a00.  lea rdi, str.s____next                  ; 0xad2e ; "s != next"
0x00004253      bae4030000     mov edx, 0x3e4
0x00004258      e8f3d6ffff     call sym.imp.__assert_fail
0x0000425d      488d0d4c8200.  lea rcx, obj.__PRETTY_FUNCTION__.7407   ; 0xc4b0 ; "decode_one_format"
0x00004264      488d35816a00.  lea rsi, str..._coreutils_8.31_src_od.c ; /src:-102 ; 0xacec ; "../coreutils-8.31/src/od.c"
0x0000426b      488d3d9f6a00.  lea rdi, str.tspec____NULL              ; 0xad11 ; "tspec != NULL"
0x00004272      ba86020000     mov edx, 0x286
0x00004277      e8d4d6ffff     call sym.imp.__assert_fail              ; /src:-95
0x0000427c      488d0d2d8200.  lea rcx, obj.__PRETTY_FUNCTION__.7407   ; 0xc4b0 ; "decode_one_format"
0x00004283      488d35626a00.  lea rsi, str..._coreutils_8.31_src_od.c ; 0xacec ; "../coreutils-8.31/src/od.c"
0x0000428a      488d3df76c00.  lea rdi, str.strlen__tspec__fmt_string____FMT_BYTES_ALLOCATED ; 0xaf88 ; "strlen (tspec->fmt_string) < FMT_BYTES_ALLOCATED"
0x00004291      bae9020000     mov edx, 0x2e9
0x00004296      e8b5d6ffff     call sym.imp.__assert_fail              ; /src:-100
0x0000429b      be01000000     mov esi, 1                              ; /src:-99
0x000042a0      e94afbffff     jmp 0x3def
0x000042a5      488d0d248200.  lea rcx, obj.__PRETTY_FUNCTION__.7462   ; 0xc4d0 ; "decode_format_string"
0x000042ac      488d35396a00.  lea rsi, str..._coreutils_8.31_src_od.c ; 0xacec ; "../coreutils-8.31/src/od.c"
0x000042b3      488d3d4d6a00.  lea rdi, str.s____NULL                  ; 0xad07 ; "s != NULL"
0x000042ba      bad8030000     mov edx, 0x3d8
0x000042bf      e88cd6ffff     call sym.imp.__assert_fail
0x000042c4      6690           nop
0x000042c6      662e0f1f8400.  nop word cs:[rax + rax]                 ; /src:-88
;-- print_ascii:
0x000042d0      4157           push r15
0x000042d2      4156           push r14
0x000042d4      4155           push r13
0x000042d6      4154           push r12
0x000042d8      55             push rbp
0x000042d9      53             push rbx
0x000042da      4883ec38       sub rsp, 0x38
0x000042de      64488b042528.  mov rax, qword fs:[0x28]
0x000042e7      4889442428     mov qword [rsp + 0x28], rax
0x000042ec      31c0           xor eax, eax
0x000042ee      4839f7         cmp rdi, rsi                            ; /src:-55
0x000042f1      4489442418     mov dword [rsp + 0x18], r8d             ; /src:-102
0x000042f6      0f8689000000   jbe 0x4385
0x000042fc      488d5fff       lea rbx, [rdi - 1]
0x00004300      4d63f1         movsxd r14, r9d
0x00004303      4889f8         mov rax, rdi
0x00004306      4829f0         sub rax, rsi
0x00004309      4c8d2d287d00.  lea r13, [0x0000c038]
0x00004310      4989fc         mov r12, rdi
0x00004313      490fafde       imul rbx, r14
0x00004317      4801d0         add rax, rdx
0x0000431a      4989d7         mov r15, rdx
0x0000431d      48890424       mov qword [rsp], rax
0x00004321      0f1f80000000.  nop dword [rax]
0x00004328      31d2           xor edx, edx
0x0000432a      4889d8         mov rax, rbx
0x0000432d      4983c701       add r15, 1
0x00004331      450fb647ff     movzx r8d, byte [r15 - 1]
0x00004336      49f7f4         div r12
0x00004339      4180f80d       cmp r8b, 0xd
0x0000433d      410fb6d0       movzx edx, r8b
0x00004341      4889c5         mov rbp, rax
0x00004344      0f87d6000000   ja 0x4420
0x0000434a      4963449500     movsxd rax, dword [r13 + rdx*4]
0x0000434f      4c01e8         add rax, r13
0x00004352      ffe0           jmp rax
0x00004354      0f1f4000       nop dword [rax]
0x00004358      488d15fb6900.  lea rdx, [0x0000ad5a]                   ; "\a"
0x0000435f      90             nop
0x00004360      8b442418       mov eax, dword [rsp + 0x18]
0x00004364      4129e9         sub r9d, ebp
0x00004367      488d3d6e6900.  lea rdi, [0x0000acdc]                   ; "%*s"
0x0000436e      4c29f3         sub rbx, r14                            ; /src:-68
0x00004371      418d3401       lea esi, [r9 + rax]
0x00004375      31c0           xor eax, eax                            ; /src:-67
0x00004377      e8d43d0000     call sym.xprintf
0x0000437c      4c3b3c24       cmp r15, qword [rsp]
0x00004380      4189e9         mov r9d, ebp
0x00004383      75a3           jne 0x4328
0x00004385      488b442428     mov rax, qword [rsp + 0x28]             ; /src:-83
0x0000438a      644833042528.  xor rax, qword fs:[0x28]
0x00004393      0f85f0000000   jne 0x4489
0x00004399      4883c438       add rsp, 0x38
0x0000439d      5b             pop rbx                                 ; /src:-60
0x0000439e      5d             pop rbp
0x0000439f      415c           pop r12
0x000043a1      415d           pop r13
0x000043a3      415e           pop r14
0x000043a5      415f           pop r15
0x000043a7      c3             ret
0x000043a8      0f1f84000000.  nop dword [rax + rax]
0x000043b0      488d15a06900.  lea rdx, [0x0000ad57]                   ; "\0"
0x000043b7      eba7           jmp 0x4360
0x000043b9      0f1f80000000.  nop dword [rax]
0x000043c0      488d159f6900.  lea rdx, [0x0000ad66]                   ; "\r"
0x000043c7      eb97           jmp 0x4360
0x000043c9      0f1f80000000.  nop dword [rax]
0x000043d0      488d15896900.  lea rdx, [0x0000ad60]                   ; "\f"
0x000043d7      eb87           jmp 0x4360
0x000043d9      0f1f80000000.  nop dword [rax]
0x000043e0      488d15856900.  lea rdx, [0x0000ad6c]                   ; "\v"
0x000043e7      e974ffffff     jmp 0x4360
0x000043ec      0f1f4000       nop dword [rax]
0x000043f0      488d156c6900.  lea rdx, [0x0000ad63]                   ; "\n"
0x000043f7      e964ffffff     jmp 0x4360                              ; /src:-53
0x000043fc      0f1f4000       nop dword [rax]
0x00004400      488d15626900.  lea rdx, [0x0000ad69]                   ; "\t"
0x00004407      e954ffffff     jmp 0x4360
0x0000440c      0f1f4000       nop dword [rax]
0x00004410      488d15466900.  lea rdx, [0x0000ad5d]                   ; "\b"
0x00004417      e944ffffff     jmp 0x4360
0x0000441c      0f1f4000       nop dword [rax]                         ; /src:319
0x00004420      44894c241c     mov dword [rsp + 0x1c], r9d
0x00004425      4889542410     mov qword [rsp + 0x10], rdx
0x0000442a      4488442408     mov byte [rsp + 8], r8b
0x0000442f      e80cd7ffff     call sym.imp.__ctype_b_loc
0x00004434      488b542410     mov rdx, qword [rsp + 0x10]
0x00004439      488b00         mov rax, qword [rax]
0x0000443c      4c8d5c2424     lea r11, [rsp + 0x24]
0x00004441      440fb6442408   movzx r8d, byte [rsp + 8]
0x00004447      488d0d016900.  lea rcx, [0x0000ad4f]                   ; "%c"
0x0000444e      be01000000     mov esi, 1
0x00004453      4c89df         mov rdi, r11                            ; /src:328
0x00004456      4c895c2408     mov qword [rsp + 8], r11
0x0000445b      f644500140     test byte [rax + rdx*2 + 1], 0x40
0x00004460      488d05eb6800.  lea rax, str.03o                        ; 0xad52 ; "%03o"
0x00004467      ba04000000     mov edx, 4
0x0000446c      480f44c8       cmove rcx, rax
0x00004470      31c0           xor eax, eax
0x00004472      e8d9d6ffff     call sym.imp.__sprintf_chk
0x00004477      4c8b5c2408     mov r11, qword [rsp + 8]
0x0000447c      448b4c241c     mov r9d, dword [rsp + 0x1c]
0x00004481      4c89da         mov rdx, r11
0x00004484      e9d7feffff     jmp 0x4360
0x00004489      e852d4ffff     call sym.imp.__stack_chk_fail
0x0000448e      6690           nop                                     ; /src:314
;-- check_and_close:
0x00004490      55             push rbp
0x00004491      53             push rbx
0x00004492      bb01000000     mov ebx, 1
0x00004497      4883ec08       sub rsp, 8
0x0000449b      488b0506bd20.  mov rax, qword [obj.in_stream]          ; [0x2101a8:8]=0
0x000044a2      4885c0         test rax, rax
0x000044a5      743e           je 0x44e5
0x000044a7      f60020         test byte [rax], 0x20
0x000044aa      89fd           mov ebp, edi
0x000044ac      7572           jne 0x4520
0x000044ae      488b15fbbc20.  mov rdx, qword [obj.file_list]          ; [0x2101b0:8]=0
0x000044b5      488d3d7d8c00.  lea rdi, [0x0000d139]                   ; "-"
0x000044bc      b902000000     mov ecx, 2
0x000044c1      488b72f8       mov rsi, qword [rdx - 8]
0x000044c5      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000044c7      0f97c2         seta dl
0x000044ca      80da00         sbb dl, 0
0x000044cd      84d2           test dl, dl
0x000044cf      0f85c3000000   jne 0x4598
0x000044d5      bb01000000     mov ebx, 1
0x000044da      48c705c3bc20.  mov qword [obj.in_stream], 0            ; [0x2101a8:8]=0
0x000044e5      488b05bcbb20.  mov rax, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100a8:8]=0
0x000044ec      f60020         test byte [rax], 0x20
0x000044ef      7423           je 0x4514
0x000044f1      488d35866800.  lea rsi, str.write_error                ; 0xad7e ; "write error"
0x000044f8      ba05000000     mov edx, 5
0x000044fd      31ff           xor edi, edi
0x000044ff      31db           xor ebx, ebx
0x00004501      e8aad3ffff     call sym.imp.dcgettext
0x00004506      31f6           xor esi, esi                            ; /src:319
0x00004508      4889c2         mov rdx, rax
0x0000450b      31ff           xor edi, edi
0x0000450d      31c0           xor eax, eax
0x0000450f      e88cd5ffff     call sym.imp.error
0x00004514      4883c408       add rsp, 8
0x00004518      89d8           mov eax, ebx
0x0000451a      5b             pop rbx
0x0000451b      5d             pop rbp
0x0000451c      c3             ret
0x0000451d      0f1f00         nop dword [rax]
0x00004520      488b1591bc20.  mov rdx, qword [obj.input_filename]     ; [0x2101b8:8]=0
0x00004527      31ff           xor edi, edi
0x00004529      be03000000     mov esi, 3
0x0000452e      e81d310000     call sym.quotearg_n_style_colon
0x00004533      488d35356800.  lea rsi, str.s:_read_error              ; 0xad6f ; "%s: read error"
0x0000453a      4889c3         mov rbx, rax
0x0000453d      31ff           xor edi, edi
0x0000453f      ba05000000     mov edx, 5
0x00004544      e867d3ffff     call sym.imp.dcgettext
0x00004549      4889d9         mov rcx, rbx
0x0000454c      31ff           xor edi, edi
0x0000454e      4889c2         mov rdx, rax                            ; /src:263
0x00004551      89ee           mov esi, ebp
0x00004553      31c0           xor eax, eax
0x00004555      e846d5ffff     call sym.imp.error
0x0000455a      488b054fbc20.  mov rax, qword [obj.file_list]          ; [0x2101b0:8]=0
0x00004561      488d3dd18b00.  lea rdi, [0x0000d139]                   ; "-"
0x00004568      b902000000     mov ecx, 2
0x0000456d      488b70f8       mov rsi, qword [rax - 8]                ; /src:268
0x00004571      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00004573      0f97c0         seta al
0x00004576      1c00           sbb al, 0
0x00004578      31db           xor ebx, ebx
0x0000457a      84c0           test al, al                             ; /src:273
0x0000457c      0f8458ffffff   je 0x44da
0x00004582      488b3d1fbc20.  mov rdi, qword [obj.in_stream]          ; [0x2101a8:8]=0
0x00004589      e872420000     call sym.rpl_fclose
0x0000458e      e947ffffff     jmp 0x44da
0x00004593      0f1f440000     nop dword [rax + rax]
0x00004598      4889c7         mov rdi, rax
0x0000459b      e860420000     call sym.rpl_fclose                     ; /src:275
0x000045a0      85c0           test eax, eax
0x000045a2      0f842dffffff   je 0x44d5
0x000045a8      488b1509bc20.  mov rdx, qword [obj.input_filename]     ; [0x2101b8:8]=0
0x000045af      be03000000     mov esi, 3
0x000045b4      31ff           xor edi, edi
0x000045b6      e895300000     call sym.quotearg_n_style_colon
0x000045bb      4889c3         mov rbx, rax
0x000045be      e82dd2ffff     call sym.imp.__errno_location
0x000045c3      8b30           mov esi, dword [rax]                    ; /src:276
0x000045c5      488d15148200.  lea rdx, [0x0000c7e0]                   ; "%s"
0x000045cc      4889d9         mov rcx, rbx
0x000045cf      31ff           xor edi, edi
0x000045d1      31c0           xor eax, eax
0x000045d3      31db           xor ebx, ebx
0x000045d5      e8c6d4ffff     call sym.imp.error
0x000045da      e9fbfeffff     jmp 0x44da
0x000045df      90             nop
;-- open_next_file:
0x000045e0      55             push rbp
0x000045e1      53             push rbx
0x000045e2      488d1d508b00.  lea rbx, [0x0000d139]                   ; "-"
0x000045e9      bd01000000     mov ebp, 1
0x000045ee      4883ec08       sub rsp, 8
0x000045f2      488b05b7bb20.  mov rax, qword [obj.file_list]          ; [0x2101b0:8]=0
0x000045f9      488b10         mov rdx, qword [rax]
0x000045fc      4885d2         test rdx, rdx
0x000045ff      488915b2bb20.  mov qword [obj.input_filename], rdx     ; [0x2101b8:8]=0
0x00004606      0f8489000000   je 0x4695
0x0000460c      b902000000     mov ecx, 2
0x00004611      4889d6         mov rsi, rdx
0x00004614      4889df         mov rdi, rbx
0x00004617      4883c008       add rax, 8
0x0000461b      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000461d      4889058cbb20.  mov qword [obj.file_list], rax          ; [0x2101b0:8]=0
0x00004624      0f97c0         seta al
0x00004627      1c00           sbb al, 0
0x00004629      84c0           test al, al
0x0000462b      753b           jne 0x4668
0x0000462d      488d35566700.  lea rsi, str.standard_input             ; 0xad8a ; "standard input"
0x00004634      ba05000000     mov edx, 5
0x00004639      31ff           xor edi, edi                            ; /src:286
0x0000463b      e870d2ffff     call sym.imp.dcgettext                  ; /src:285
0x00004640      48890571bb20.  mov qword [obj.input_filename], rax     ; [0x2101b8:8]=0
0x00004647      488b0562ba20.  mov rax, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x2100b0:8]=0
0x0000464e      c6054fbb2000.  mov byte [obj.have_read_stdin], 1       ; /src:293 ; [0x2101a4:1]=0
0x00004655      4889054cbb20.  mov qword [obj.in_stream], rax          ; [0x2101a8:8]=0
0x0000465c      4885c0         test rax, rax
0x0000465f      7491           je 0x45f2                               ; /src:246
0x00004661      eb20           jmp 0x4683
0x00004663      0f1f440000     nop dword [rax + rax]
0x00004668      488d35f86600.  lea rsi, [0x0000ad67]                   ; "r"
0x0000466f      4889d7         mov rdi, rdx
0x00004672      e849d4ffff     call sym.imp.fopen                      ; /src:250
0x00004677      4885c0         test rax, rax
0x0000467a      48890527bb20.  mov qword [obj.in_stream], rax          ; [0x2101a8:8]=0
0x00004681      741d           je 0x46a0
0x00004683      803d66bb2000.  cmp byte [obj.limit_bytes_to_format], 0 ; [0x2101f0:1]=0
0x0000468a      7409           je 0x4695
0x0000468c      803d7fbb2000.  cmp byte [obj.flag_dump_strings], 0     ; [0x210212:1]=0
0x00004693      744b           je 0x46e0
0x00004695      4883c408       add rsp, 8
0x00004699      89e8           mov eax, ebp
0x0000469b      5b             pop rbx
0x0000469c      5d             pop rbp
0x0000469d      c3             ret
0x0000469e      6690           nop                                     ; /src:277
0x000046a0      488b1511bb20.  mov rdx, qword [obj.input_filename]     ; [0x2101b8:8]=0
0x000046a7      be03000000     mov esi, 3
0x000046ac      31ff           xor edi, edi
0x000046ae      e89d2f0000     call sym.quotearg_n_style_colon         ; stdio2.h:-63
0x000046b3      4889c5         mov rbp, rax
0x000046b6      e835d1ffff     call sym.imp.__errno_location
0x000046bb      8b30           mov esi, dword [rax]
0x000046bd      488d151c8100.  lea rdx, [0x0000c7e0]                   ; "%s"
0x000046c4      4889e9         mov rcx, rbp
0x000046c7      31c0           xor eax, eax
0x000046c9      31ff           xor edi, edi
0x000046cb      31ed           xor ebp, ebp
0x000046cd      e8ced3ffff     call sym.imp.error
0x000046d2      488b05cfba20.  mov rax, qword [obj.in_stream]          ; [0x2101a8:8]=0
0x000046d9      e97effffff     jmp 0x465c
0x000046de      6690           nop
0x000046e0      31c9           xor ecx, ecx
0x000046e2      ba02000000     mov edx, 2
0x000046e7      31f6           xor esi, esi
0x000046e9      4889c7         mov rdi, rax
0x000046ec      e88fd3ffff     call sym.imp.setvbuf
0x000046f1      eba2           jmp 0x4695                              ; /src:332
0x000046f3      0f1f00         nop dword [rax]
0x000046f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- skip:
0x00004700      4157           push r15
0x00004702      4156           push r14
0x00004704      4155           push r13
0x00004706      4154           push r12
0x00004708      55             push rbp
0x00004709      53             push rbx
0x0000470a      4881eca82000.  sub rsp, 0x20a8                         ; /src:139
0x00004711      64488b042528.  mov rax, qword fs:[0x28]
0x0000471a      488984249820.  mov qword [rsp + 0x2098], rax
0x00004722      31c0           xor eax, eax
0x00004724      4885ff         test rdi, rdi
0x00004727      0f847b010000   je 0x48a8
0x0000472d      4c8b3d74ba20.  mov r15, qword [obj.in_stream]          ; [0x2101a8:8]=0
0x00004734      4d85ff         test r15, r15
0x00004737      0f84d1000000   je 0x480e
0x0000473d      4989fd         mov r13, rdi
0x00004740      bb01000000     mov ebx, 1
0x00004745      4989e4         mov r12, rsp
0x00004748      488dac249000.  lea rbp, [rsp + 0x90]
0x00004750      49beffffffff.  movabs r14, 0x1fffffffffffffff          ; /src:201 ; 2305843009213693951
0x0000475a      eb63           jmp 0x47bf
0x0000475c      0f1f4000       nop dword [rax]
0x00004760      8b442418       mov eax, dword [rsp + 0x18]
0x00004764      2500d00000     and eax, 0xd000
0x00004769      3d00800000     cmp eax, 0x8000
0x0000476e      0f85c4000000   jne 0x4838
0x00004774      488b442438     mov rax, qword [rsp + 0x38]
0x00004779      b900020000     mov ecx, 0x200
0x0000477e      488d50ff       lea rdx, [rax - 1]
0x00004782      4c39f2         cmp rdx, r14
0x00004785      488b542430     mov rdx, qword [rsp + 0x30]
0x0000478a      480f47c1       cmova rax, rcx
0x0000478e      4839c2         cmp rdx, rax                            ; .//ib:-545
0x00004791      0f8ea1000000   jle 0x4838
0x00004797      4c39ea         cmp rdx, r13
0x0000479a      0f831e010000   jae 0x48be
0x000047a0      4929d5         sub r13, rdx
0x000047a3      31ff           xor edi, edi
0x000047a5      e8e6fcffff     call sym.check_and_close
0x000047aa      21c3           and ebx, eax
0x000047ac      e82ffeffff     call sym.open_next_file
0x000047b1      4c8b3df0b920.  mov r15, qword [obj.in_stream]          ; /src:179 ; [0x2101a8:8]=0
0x000047b8      21c3           and ebx, eax
0x000047ba      4d85ff         test r15, r15
0x000047bd      744f           je 0x480e
0x000047bf      4c89ff         mov rdi, r15                            ; /src:181
0x000047c2      e819d2ffff     call sym.imp.fileno
0x000047c7      4c89e2         mov rdx, r12                            ; /src:173
0x000047ca      89c6           mov esi, eax
0x000047cc      bf01000000     mov edi, 1                              ; /src:213
0x000047d1      e84ad2ffff     call sym.imp.__fxstat
0x000047d6      85c0           test eax, eax
0x000047d8      7486           je 0x4760
0x000047da      488b15d7b920.  mov rdx, qword [obj.input_filename]     ; [0x2101b8:8]=0
0x000047e1      be03000000     mov esi, 3
0x000047e6      31ff           xor edi, edi
0x000047e8      e8632e0000     call sym.quotearg_n_style_colon
0x000047ed      4889c3         mov rbx, rax
0x000047f0      e8fbcfffff     call sym.imp.__errno_location
0x000047f5      8b30           mov esi, dword [rax]
0x000047f7      488d15e27f00.  lea rdx, [0x0000c7e0]                   ; "%s"
0x000047fe      4889d9         mov rcx, rbx                            ; /src:194
0x00004801      31ff           xor edi, edi
0x00004803      31c0           xor eax, eax
0x00004805      31db           xor ebx, ebx
0x00004807      e894d2ffff     call sym.imp.error
0x0000480c      eb95           jmp 0x47a3
0x0000480e      488d35336800.  lea rsi, str.cannot_skip_past_end_of_combined_input ; 0xb048 ; "cannot skip past end of combined input"
0x00004815      ba05000000     mov edx, 5
0x0000481a      31ff           xor edi, edi
0x0000481c      e88fd0ffff     call sym.imp.dcgettext
0x00004821      31f6           xor esi, esi
0x00004823      4889c2         mov rdx, rax
0x00004826      bf01000000     mov edi, 1
0x0000482b      31c0           xor eax, eax                            ; /src:354
0x0000482d      e86ed2ffff     call sym.imp.error
0x00004832      660f1f440000   nop word [rax + rax]                    ; /src:357
0x00004838      41bf00200000   mov r15d, 0x2000                        ; /src:355
0x0000483e      6690           nop
0x00004840      4d39ef         cmp r15, r13
0x00004843      4c8b055eb920.  mov r8, qword [obj.in_stream]           ; [0x2101a8:8]=0
0x0000484a      ba01000000     mov edx, 1
0x0000484f      4d0f47fd       cmova r15, r13
0x00004853      be00200000     mov esi, 0x2000
0x00004858      4889ef         mov rdi, rbp
0x0000485b      4c89f9         mov rcx, r15
0x0000485e      e86dd2ffff     call sym.imp.__fread_unlocked_chk       ; /src:359
0x00004863      4929c5         sub r13, rax
0x00004866      4c39f8         cmp rax, r15
0x00004869      7411           je 0x487c
0x0000486b      488b0536b920.  mov rax, qword [obj.in_stream]          ; [0x2101a8:8]=0
0x00004872      8b00           mov eax, dword [rax]
0x00004874      a820           test al, 0x20                           ; "@"
0x00004876      7537           jne 0x48af                              ; /src:361
0x00004878      a810           test al, 0x10
0x0000487a      7537           jne 0x48b3                              ; /src:363
0x0000487c      4d85ed         test r13, r13                           ; /src:372
0x0000487f      75bf           jne 0x4840
0x00004881      488b8c249820.  mov rcx, qword [rsp + 0x2098]
0x00004889      6448330c2528.  xor rcx, qword fs:[0x28]
0x00004892      89d8           mov eax, ebx
0x00004894      7544           jne 0x48da
0x00004896      4881c4a82000.  add rsp, 0x20a8
0x0000489d      5b             pop rbx
0x0000489e      5d             pop rbp
0x0000489f      415c           pop r12
0x000048a1      415d           pop r13
0x000048a3      415e           pop r14                                 ; /src:290
0x000048a5      415f           pop r15
0x000048a7      c3             ret
0x000048a8      bb01000000     mov ebx, 1
0x000048ad      ebd2           jmp 0x4881                              ; /src:296
0x000048af      31db           xor ebx, ebx                            ; /src:297
0x000048b1      ebce           jmp 0x4881
0x000048b3      4d85ed         test r13, r13
0x000048b6      0f85e7feffff   jne 0x47a3
0x000048bc      ebc3           jmp 0x4881                              ; /src:314
0x000048be      ba01000000     mov edx, 1
0x000048c3      4c89ee         mov rsi, r13
0x000048c6      4c89ff         mov rdi, r15
0x000048c9      e8f23f0000     call sym.rpl_fseeko
0x000048ce      85c0           test eax, eax
0x000048d0      b800000000     mov eax, 0
0x000048d5      0f45d8         cmovne ebx, eax
0x000048d8      eba7           jmp 0x4881
0x000048da      e801d0ffff     call sym.imp.__stack_chk_fail
0x000048df      90             nop
;-- read_char:
0x000048e0      4154           push r12
0x000048e2      4989fc         mov r12, rdi
0x000048e5      55             push rbp
0x000048e6      53             push rbx
0x000048e7      c707ffffffff   mov dword [rdi], 0xffffffff             ; [0xffffffff:4]=-1 ; -1
0x000048ed      bd01000000     mov ebp, 1
0x000048f2      488b3dafb820.  mov rdi, qword [obj.in_stream]          ; [0x2101a8:8]=0
0x000048f9      4885ff         test rdi, rdi
0x000048fc      7525           jne 0x4923
0x000048fe      eb31           jmp 0x4931
0x00004900      e8ebceffff     call sym.imp.__errno_location           ; ../coreutils-8.31/src/system.h:-788
0x00004905      8b38           mov edi, dword [rax]
0x00004907      e884fbffff     call sym.check_and_close
0x0000490c      89c3           mov ebx, eax
0x0000490e      e8cdfcffff     call sym.open_next_file
0x00004913      488b3d8eb820.  mov rdi, qword [obj.in_stream]          ; [0x2101a8:8]=0
0x0000491a      21c3           and ebx, eax
0x0000491c      21dd           and ebp, ebx
0x0000491e      4885ff         test rdi, rdi
0x00004921      740e           je 0x4931
0x00004923      e868d0ffff     call sym.imp.fgetc
0x00004928      83f8ff         cmp eax, 0xffffffff
0x0000492b      41890424       mov dword [r12], eax
0x0000492f      74cf           je 0x4900
0x00004931      89e8           mov eax, ebp
0x00004933      5b             pop rbx
0x00004934      5d             pop rbp
0x00004935      415c           pop r12
0x00004937      c3             ret                                     ; /src:316
0x00004938      0f1f84000000.  nop dword [rax + rax]
;-- write_block:
0x00004940      4157           push r15
0x00004942      4156           push r14                                ; /src:318
0x00004944      4989f6         mov r14, rsi
0x00004947      4155           push r13                                ; /src:317
0x00004949      4154           push r12
0x0000494b      55             push rbp
0x0000494c      53             push rbx
0x0000494d      4883ec28       sub rsp, 0x28
0x00004951      803db9b62000.  cmp byte [obj.abbreviate_duplicate_blocks], 0 ; [0x210011:1]=1
0x00004958      48897c2418     mov qword [rsp + 0x18], rdi             ; /src:319
0x0000495d      48894c2408     mov qword [rsp + 8], rcx
0x00004962      740d           je 0x4971
0x00004964      803da5b62000.  cmp byte [obj.first.7524], 0            ; /src:320 ; [0x210010:1]=1
0x0000496b      0f84cf010000   je 0x4b40
0x00004971      48833d57b820.  cmp qword [obj.n_specs], 0              ; /src:323 ; [0x2101d0:8]=0
0x00004979      c60580b72000.  mov byte [obj.prev_pair_equal.7525], 0  ; [0x210100:1]=0
0x00004980      0f84f9010000   je 0x4b7f
0x00004986      488b442408     mov rax, qword [rsp + 8]                ; /src:324
0x0000498b      31ed           xor ebp, ebp
0x0000498d      4531e4         xor r12d, r12d
0x00004990      4c89742410     mov qword [rsp + 0x10], r14
0x00004995      4e8d2c30       lea r13, [rax + r14]                    ; /src:326
0x00004999      eb3a           jmp 0x49d5
0x0000499b      0f1f440000     nop dword [rax + rax]
0x000049a0      488b3d01b720.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100a8:8]=0
0x000049a7      488b4728       mov rax, qword [rdi + 0x28]
0x000049ab      483b4730       cmp rax, qword [rdi + 0x30]
0x000049af      0f83e3010000   jae 0x4b98
0x000049b5      488d5001       lea rdx, [rax + 1]
0x000049b9      48895728       mov qword [rdi + 0x28], rdx
0x000049bd      c6000a         mov byte [rax], 0xa
0x000049c0      4983c401       add r12, 1
0x000049c4      4883c528       add rbp, 0x28
0x000049c8      4c392501b820.  cmp qword [obj.n_specs], r12            ; [0x2101d0:8]=0
0x000049cf      0f86aa010000   jbe 0x4b7f
0x000049d5      488b05fcb720.  mov rax, qword [obj.spec]               ; [0x2101d8:8]=0
0x000049dc      488d35fd7b00.  lea rsi, obj.width_bytes                ; 0xc5e0
0x000049e3      488b1dd6b720.  mov rbx, qword [obj.bytes_per_block]    ; [0x2101c0:8]=0
0x000049ea      31d2           xor edx, edx
0x000049ec      8b442804       mov eax, dword [rax + rbp + 4]
0x000049f0      48630c86       movsxd rcx, dword [rsi + rax*4]
0x000049f4      4889d8         mov rax, rbx
0x000049f7      482b5c2410     sub rbx, qword [rsp + 0x10]
0x000049fc      48f7f1         div rcx
0x000049ff      31d2           xor edx, edx
0x00004a01      4989c6         mov r14, rax
0x00004a04      4189c7         mov r15d, eax
0x00004a07      4889d8         mov rax, rbx
0x00004a0a      48f7f1         div rcx
0x00004a0d      4d85e4         test r12, r12
0x00004a10      4889c3         mov rbx, rax
0x00004a13      0f8597010000   jne 0x4bb0                              ; /src:-403
0x00004a19      31f6           xor esi, esi
0x00004a1b      488b7c2418     mov rdi, qword [rsp + 0x18]             ; /src:-404
0x00004a20      ff15dab72000   call qword [obj.format_address]         ; [0x210200:8]=0
0x00004a26      488b05abb720.  mov rax, qword [obj.spec]               ; [0x2101d8:8]=0
0x00004a2d      4863f3         movsxd rsi, ebx                         ; ../coreutils-8.31/src/system.h:-788
0x00004a30      4963fe         movsxd rdi, r14d
0x00004a33      488b542408     mov rdx, qword [rsp + 8]
0x00004a38      4801e8         add rax, rbp
0x00004a3b      488d4810       lea rcx, [rax + 0x10]
0x00004a3f      448b4820       mov r9d, dword [rax + 0x20]
0x00004a43      448b401c       mov r8d, dword [rax + 0x1c]
0x00004a47      ff5008         call qword [rax + 8]
0x00004a4a      488b0d87b720.  mov rcx, qword [obj.spec]               ; [0x2101d8:8]=0
0x00004a51      4801e9         add rcx, rbp
0x00004a54      80791800       cmp byte [rcx + 0x18], 0
0x00004a58      0f8442ffffff   je 0x49a0
0x00004a5e      8b4120         mov eax, dword [rcx + 0x20]
0x00004a61      488d35746200.  lea rsi, [0x0000acdc]                   ; "%*s"
0x00004a68      bf01000000     mov edi, 1
0x00004a6d      0fafc3         imul eax, ebx
0x00004a70      0faf591c       imul ebx, dword [rcx + 0x1c]
0x00004a74      488d0d468300.  lea rcx, [0x0000cdc1]
0x00004a7b      99             cdq
0x00004a7c      41f7ff         idiv r15d
0x00004a7f      8d1418         lea edx, [rax + rbx]
0x00004a82      31c0           xor eax, eax
0x00004a84      e8e7cfffff     call sym.imp.__printf_chk
0x00004a89      488b0d18b620.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100a8:8]=0
0x00004a90      488d3d046300.  lea rdi, [0x0000ad9b]                   ; "  >"
0x00004a97      ba03000000     mov edx, 3
0x00004a9c      be01000000     mov esi, 1
0x00004aa1      e89acfffff     call sym.imp.fwrite_unlocked
0x00004aa6      48837c241000   cmp qword [rsp + 0x10], 0
0x00004aac      7454           je 0x4b02
0x00004aae      e88dd0ffff     call sym.imp.__ctype_b_loc              ; /src:300
0x00004ab3      488b5c2408     mov rbx, qword [rsp + 8]
0x00004ab8      4989c7         mov r15, rax
0x00004abb      0f1f440000     nop dword [rax + rax]
0x00004ac0      4883c301       add rbx, 1
0x00004ac4      0fb64bff       movzx ecx, byte [rbx - 1]
0x00004ac8      498b17         mov rdx, qword [r15]
0x00004acb      f6444a0140     test byte [rdx + rcx*2 + 1], 0x40
0x00004ad0      4889c8         mov rax, rcx
0x00004ad3      0fb6f1         movzx esi, cl
0x00004ad6      750a           jne 0x4ae2
0x00004ad8      be2e000000     mov esi, 0x2e                           ; '.'
0x00004add      b82e000000     mov eax, 0x2e                           ; '.'
0x00004ae2      488b3dbfb520.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100a8:8]=0
0x00004ae9      488b5728       mov rdx, qword [rdi + 0x28]
0x00004aed      483b5730       cmp rdx, qword [rdi + 0x30]
0x00004af1      733d           jae 0x4b30
0x00004af3      488d4a01       lea rcx, [rdx + 1]
0x00004af7      48894f28       mov qword [rdi + 0x28], rcx
0x00004afb      8802           mov byte [rdx], al                      ; .//ib:-791
0x00004afd      4c39eb         cmp rbx, r13
0x00004b00      75be           jne 0x4ac0
0x00004b02      488b3d9fb520.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100a8:8]=0
0x00004b09      488b4728       mov rax, qword [rdi + 0x28]
0x00004b0d      483b4730       cmp rax, qword [rdi + 0x30]
0x00004b11      0f83c1000000   jae 0x4bd8
0x00004b17      488d5001       lea rdx, [rax + 1]
0x00004b1b      48895728       mov qword [rdi + 0x28], rdx
0x00004b1f      c6003c         mov byte [rax], 0x3c                    ; '<'
                                                                       ; [0x3c:1]=37
0x00004b22      e979feffff     jmp 0x49a0
0x00004b27      660f1f840000.  nop word [rax + rax]
0x00004b30      e8ebcdffff     call sym.imp.__overflow
0x00004b35      ebc6           jmp 0x4afd
0x00004b37      660f1f840000.  nop word [rax + rax]
0x00004b40      4889d7         mov rdi, rdx
0x00004b43      488b1576b620.  mov rdx, qword [obj.bytes_per_block]    ; [0x2101c0:8]=0
0x00004b4a      4839f2         cmp rdx, rsi
0x00004b4d      0f851efeffff   jne 0x4971
0x00004b53      4889ce         mov rsi, rcx
0x00004b56      e845ceffff     call sym.imp.memcmp
0x00004b5b      85c0           test eax, eax
0x00004b5d      0f850efeffff   jne 0x4971
0x00004b63      803d96b52000.  cmp byte [obj.prev_pair_equal.7525], 0  ; [0x210100:1]=0
0x00004b6a      7513           jne 0x4b7f
0x00004b6c      488d3d266200.  lea rdi, [0x0000ad99]                   ; "*"
0x00004b73      e8b8ccffff     call sym.imp.puts                       ; ../coreutils-8.31/src/system.h:-788
0x00004b78      c60581b52000.  mov byte [obj.prev_pair_equal.7525], 1  ; [0x210100:1]=0
0x00004b7f      c6058ab42000.  mov byte [obj.first.7524], 0            ; [0x210010:1]=1
0x00004b86      4883c428       add rsp, 0x28
0x00004b8a      5b             pop rbx
0x00004b8b      5d             pop rbp
0x00004b8c      415c           pop r12
0x00004b8e      415d           pop r13                                 ; /src:268
0x00004b90      415e           pop r14
0x00004b92      415f           pop r15
0x00004b94      c3             ret
0x00004b95      0f1f00         nop dword [rax]
0x00004b98      be0a000000     mov esi, 0xa
0x00004b9d      e87ecdffff     call sym.imp.__overflow
0x00004ba2      e919feffff     jmp 0x49c0
0x00004ba7      660f1f840000.  nop word [rax + rax]
0x00004bb0      8b156ab62000   mov edx, dword [obj.address_pad_len]    ; [0x210220:4]=0
0x00004bb6      488d0d048200.  lea rcx, [0x0000cdc1]
0x00004bbd      488d35186100.  lea rsi, [0x0000acdc]                   ; "%*s"
0x00004bc4      bf01000000     mov edi, 1                              ; /src:272
0x00004bc9      31c0           xor eax, eax
0x00004bcb      e8a0ceffff     call sym.imp.__printf_chk               ; /src:273
0x00004bd0      e951feffff     jmp 0x4a26                              ; /src:274
0x00004bd5      0f1f00         nop dword [rax]
0x00004bd8      be3c000000     mov esi, 0x3c                           ; '<'
0x00004bdd      e83ecdffff     call sym.imp.__overflow
0x00004be2      e9b9fdffff     jmp 0x49a0                              ; /src:275
0x00004be7      660f1f840000.  nop word [rax + rax]                    ; /src:259
;-- format_address_paren:
0x00004bf0      55             push rbp
0x00004bf1      53             push rbx
0x00004bf2      4889fd         mov rbp, rdi
0x00004bf5      89f3           mov ebx, esi                            ; /src:262
0x00004bf7      4883ec08       sub rsp, 8
0x00004bfb      488b3da6b420.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100a8:8]=0
0x00004c02      488b4728       mov rax, qword [rdi + 0x28]
0x00004c06      483b4730       cmp rax, qword [rdi + 0x30]
0x00004c0a      7354           jae 0x4c60
0x00004c0c      488d5001       lea rdx, [rax + 1]
0x00004c10      48895728       mov qword [rdi + 0x28], rdx
0x00004c14      c60028         mov byte [rax], 0x28                    ; '('
                                                                       ; [0x28:1]=248
0x00004c17      be29000000     mov esi, 0x29                           ; ')'
0x00004c1c      4889ef         mov rdi, rbp
0x00004c1f      e86ce2ffff     call sym.format_address_std
0x00004c24      84db           test bl, bl
0x00004c26      741b           je 0x4c43
0x00004c28      488b3d79b420.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100a8:8]=0
0x00004c2f      488b4728       mov rax, qword [rdi + 0x28]
0x00004c33      483b4730       cmp rax, qword [rdi + 0x30]
0x00004c37      7317           jae 0x4c50
0x00004c39      488d5001       lea rdx, [rax + 1]
0x00004c3d      48895728       mov qword [rdi + 0x28], rdx
0x00004c41      8818           mov byte [rax], bl
0x00004c43      4883c408       add rsp, 8
0x00004c47      5b             pop rbx
0x00004c48      5d             pop rbp
0x00004c49      c3             ret
0x00004c4a      660f1f440000   nop word [rax + rax]
0x00004c50      4883c408       add rsp, 8
0x00004c54      0fb6f3         movzx esi, bl
0x00004c57      5b             pop rbx
0x00004c58      5d             pop rbp                                 ; .//ib:-647
0x00004c59      e9c2ccffff     jmp sym.imp.__overflow
0x00004c5e      6690           nop
0x00004c60      be28000000     mov esi, 0x28                           ; /src:272 ; '('
0x00004c65      e8b6ccffff     call sym.imp.__overflow
0x00004c6a      ebab           jmp 0x4c17
0x00004c6c      0f1f4000       nop dword [rax]
;-- format_address_label:
0x00004c70      55             push rbp
0x00004c71      53             push rbx
0x00004c72      89f5           mov ebp, esi
0x00004c74      be20000000     mov esi, 0x20                           ; "@"
0x00004c79      4889fb         mov rbx, rdi
0x00004c7c      4883ec08       sub rsp, 8
0x00004c80      e80be2ffff     call sym.format_address_std
0x00004c85      48031d7cb520.  add rbx, qword [obj.pseudo_offset]      ; [0x210208:8]=0
0x00004c8c      4883c408       add rsp, 8
0x00004c90      400fbef5       movsx esi, bpl
0x00004c94      4889df         mov rdi, rbx
0x00004c97      5b             pop rbx
0x00004c98      5d             pop rbp
0x00004c99      e952ffffff     jmp sym.format_address_paren
0x00004c9e      6690           nop
;-- read_block:
0x00004ca0      4885ff         test rdi, rdi
0x00004ca3      4156           push r14
0x00004ca5      4155           push r13
0x00004ca7      4154           push r12
0x00004ca9      55             push rbp
0x00004caa      53             push rbx
0x00004cab      0f8496000000   je 0x4d47
0x00004cb1      48393d08b520.  cmp qword [obj.bytes_per_block], rdi    ; [0x2101c0:8]=0
0x00004cb8      4989fc         mov r12, rdi                            ; /src:-707
0x00004cbb      0f8286000000   jb 0x4d47
0x00004cc1      488b0de0b420.  mov rcx, qword [obj.in_stream]          ; [0x2101a8:8]=0
0x00004cc8      4889d3         mov rbx, rdx
0x00004ccb      48c702000000.  mov qword [rdx], 0
0x00004cd2      4885c9         test rcx, rcx
0x00004cd5      7469           je 0x4d40
0x00004cd7      4989f5         mov r13, rsi
0x00004cda      31ff           xor edi, edi
0x00004cdc      bd01000000     mov ebp, 1
0x00004ce1      eb2e           jmp 0x4d11
0x00004ce3      0f1f440000     nop dword [rax + rax]
0x00004ce8      e803cbffff     call sym.imp.__errno_location
0x00004ced      8b38           mov edi, dword [rax]
0x00004cef      e89cf7ffff     call sym.check_and_close
0x00004cf4      4189c6         mov r14d, eax
0x00004cf7      e8e4f8ffff     call sym.open_next_file
0x00004cfc      488b0da5b420.  mov rcx, qword [obj.in_stream]          ; [0x2101a8:8]=0
0x00004d03      4121c6         and r14d, eax
0x00004d06      4421f5         and ebp, r14d
0x00004d09      4885c9         test rcx, rcx
0x00004d0c      7421           je 0x4d2f
0x00004d0e      488b3b         mov rdi, qword [rbx]
0x00004d11      4d89e6         mov r14, r12                            ; /src:-704
0x00004d14      be01000000     mov esi, 1
0x00004d19      4929fe         sub r14, rdi
0x00004d1c      4c01ef         add rdi, r13
0x00004d1f      4c89f2         mov rdx, r14                            ; .//ib:-922
0x00004d22      e849cbffff     call sym.imp.fread_unlocked
0x00004d27      480103         add qword [rbx], rax
0x00004d2a      4939c6         cmp r14, rax
0x00004d2d      75b9           jne 0x4ce8
0x00004d2f      5b             pop rbx
0x00004d30      89e8           mov eax, ebp
0x00004d32      5d             pop rbp
0x00004d33      415c           pop r12
0x00004d35      415d           pop r13
0x00004d37      415e           pop r14                                 ; /src:-698
0x00004d39      c3             ret
0x00004d3a      660f1f440000   nop word [rax + rax]
0x00004d40      bd01000000     mov ebp, 1
0x00004d45      ebe8           jmp 0x4d2f
0x00004d47      488d0d527700.  lea rcx, obj.__PRETTY_FUNCTION__.7548   ; 0xc4a0 ; "read_block"
0x00004d4e      488d35975f00.  lea rsi, str..._coreutils_8.31_src_od.c ; 0xacec ; "../coreutils-8.31/src/od.c"
0x00004d55      488d3d436000.  lea rdi, str.0___n____n____bytes_per_block ; 0xad9f ; "0 < n && n <= bytes_per_block"
0x00004d5c      ba08050000     mov edx, 0x508                          ; stdio2.h:-446
0x00004d61      e8eacbffff     call sym.imp.__assert_fail
0x00004d66      662e0f1f8400.  nop word cs:[rax + rax]
;-- usage:
0x00004d70      4155           push r13
0x00004d72      4154           push r12
0x00004d74      ba05000000     mov edx, 5
0x00004d79      55             push rbp
0x00004d7a      53             push rbx
0x00004d7b      89fd           mov ebp, edi
0x00004d7d      4881ec880000.  sub rsp, 0x88
0x00004d84      488b1dadb420.  mov rbx, qword [obj.program_name]       ; [0x210238:8]=0
0x00004d8b      64488b042528.  mov rax, qword fs:[0x28]
0x00004d94      4889442478     mov qword [rsp + 0x78], rax
0x00004d99      31c0           xor eax, eax
0x00004d9b      85ff           test edi, edi
0x00004d9d      742e           je 0x4dcd
0x00004d9f      488d35ca6200.  lea rsi, str.Try___s___help__for_more_information. ; 0xb070 ; "Try '%s --help' for more information.\n"
0x00004da6      31ff           xor edi, edi                            ; stdio2.h:-439
0x00004da8      e803cbffff     call sym.imp.dcgettext
0x00004dad      488b3d2cb320.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2100e0:8]=0
0x00004db4      4889c2         mov rdx, rax
0x00004db7      4889d9         mov rcx, rbx
0x00004dba      be01000000     mov esi, 1
0x00004dbf      31c0           xor eax, eax
0x00004dc1      e84acdffff     call sym.imp.__fprintf_chk
0x00004dc6      89ef           mov edi, ebp
0x00004dc8      e823cdffff     call sym.imp.exit
0x00004dcd      488d35c46200.  lea rsi, str.Usage:__s__OPTION_...__FILE_...____or:___s___abcdfilosx_...__FILE______OFFSET_.__b______or:___s___traditional__OPTION_...__FILE______OFFSET_.__b______LABEL__.__b ; 0xb098 ; "Usage: %s [OPTION]... [FILE]...\n  or:  %s [-abcdfilosx]... [FILE] [[+]OFFSET[.][b]]\n  or:  %s --traditional [OPTION]... [FILE] [[+]OFFSET[.][b] [+][LABEL][.][b]]\n"
0x00004dd4      31ff           xor edi, edi
0x00004dd6      e8d5caffff     call sym.imp.dcgettext
0x00004ddb      4889d9         mov rcx, rbx
0x00004dde      4989d8         mov r8, rbx
0x00004de1      4889da         mov rdx, rbx
0x00004de4      4889c6         mov rsi, rax
0x00004de7      bf01000000     mov edi, 1
0x00004dec      31c0           xor eax, eax
0x00004dee      e87dccffff     call sym.imp.__printf_chk
0x00004df3      488b1daeb220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100a8:8]=0
0x00004dfa      488d353f6300.  lea rsi, str.Write_an_unambiguous_representation__octal_bytes_by_default___of_FILE_to_standard_output.__With_more_than_one_FILE_argument___concatenate_them_in_the_listed_order_to_form_the_input. ; 0xb140 ; "\nWrite an unambiguous representation, octal bytes by default,\nof FILE to standard output.  With more than one FILE argument,\nconcatenate them in the listed order to form the input.\n"
0x00004e01      ba05000000     mov edx, 5
0x00004e06      31ff           xor edi, edi
0x00004e08      e8a3caffff     call sym.imp.dcgettext
0x00004e0d      4889de         mov rsi, rbx
0x00004e10      4889c7         mov rdi, rax
0x00004e13      e898cbffff     call sym.imp.fputs_unlocked
0x00004e18      488b1d89b220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100a8:8]=0
0x00004e1f      488d35d26300.  lea rsi, str.With_no_FILE__or_when_FILE_is____read_standard_input. ; 0xb1f8 ; "\nWith no FILE, or when FILE is -, read standard input.\n"
0x00004e26      ba05000000     mov edx, 5
0x00004e2b      31ff           xor edi, edi
0x00004e2d      e87ecaffff     call sym.imp.dcgettext
0x00004e32      4889de         mov rsi, rbx
0x00004e35      4889c7         mov rdi, rax
0x00004e38      e873cbffff     call sym.imp.fputs_unlocked
0x00004e3d      488b1d64b220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100a8:8]=0
0x00004e44      488d35e56300.  lea rsi, str.If_first_and_second_call_formats_both_apply__the_second_format_is_assumed__if_the_last_operand_begins_with___or__if_there_are_2_operands__a_digit.__An_OFFSET_operand_means__j_OFFSET.__LABEL_is_the_pseudo_address__at_first_byte_printed__incremented_when_dump_is_progressing.__For_OFFSET_and_LABEL__a_0x_or_0X_prefix_indicates_hexadecimal___suffixes_may_be_._for_octal_and_b_for_multiply_by_512. ; 0xb230 ; "\nIf first and second call formats both apply, the second format is assumed\nif the last operand begins with + or (if there are 2 operands) a digit.\nAn OFFSET operand means -j OFFSET.  LABEL is the pseudo-address\nat first byte printed, incremented when dump is progressing.\nFor OFFSET and LABEL, a 0x or 0X prefix indicates hexadecimal;\nsuffixes may be . for octal and b for multiply by 512.\n"
0x00004e4b      ba05000000     mov edx, 5
0x00004e50      31ff           xor edi, edi
0x00004e52      e859caffff     call sym.imp.dcgettext
0x00004e57      4889de         mov rsi, rbx
0x00004e5a      4889c7         mov rdi, rax
0x00004e5d      e84ecbffff     call sym.imp.fputs_unlocked
0x00004e62      488b1d3fb220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100a8:8]=0
0x00004e69      488d35486500.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0xb3b8 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x00004e70      ba05000000     mov edx, 5
0x00004e75      31ff           xor edi, edi
0x00004e77      e834caffff     call sym.imp.dcgettext
0x00004e7c      4889de         mov rsi, rbx
0x00004e7f      4889c7         mov rdi, rax
0x00004e82      e829cbffff     call sym.imp.fputs_unlocked
0x00004e87      488b1d1ab220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100a8:8]=0
0x00004e8e      488d35736500.  lea rsi, str.A____address_radix_RADIX___output_format_for_file_offsets__RADIX_is_one__________________________________of__doxn___for_Decimal__Octal__Hex_or_None__________endian__big_little____swap_input_bytes_according_the_specified_order_____j____skip_bytes_BYTES______skip_BYTES_input_bytes_first ; 0xb408 ; "  -A, --address-radix=RADIX   output format for file offsets; RADIX is one\n                                of [doxn], for Decimal, Octal, Hex or None\n      --endian={big|little}   swap input bytes according the specified order\n  -j, --skip-bytes=BYTES      skip BYTES input bytes first\n"
0x00004e95      ba05000000     mov edx, 5
0x00004e9a      31ff           xor edi, edi
0x00004e9c      e80fcaffff     call sym.imp.dcgettext
0x00004ea1      4889de         mov rsi, rbx
0x00004ea4      4889c7         mov rdi, rax
0x00004ea7      e804cbffff     call sym.imp.fputs_unlocked
0x00004eac      488b1df5b120.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100a8:8]=0
0x00004eb3      488d356e6600.  lea rsi, str.N____read_bytes_BYTES______limit_dump_to_BYTES_input_bytes_____S_BYTES____strings__BYTES___output_strings_of_at_least_BYTES_graphic_chars___________________________________3_is_implied_when_BYTES_is_not_specified_____t____format_TYPE___________select_output_format_or_formats_____v____output_duplicates_____do_not_use___to_mark_line_suppression_____w_BYTES_____width__BYTES___output_BYTES_bytes_per_output_line___________________________________32_is_implied_when_BYTES_is_not_specified__________traditional___________accept_arguments_in_third_form_above ; 0xb528 ; "  -N, --read-bytes=BYTES      limit dump to BYTES input bytes\n  -S BYTES, --strings[=BYTES]  output strings of at least BYTES graphic chars;\n                                3 is implied when BYTES is not specified\n  -t, --format=TYPE           select output format or formats\n  -v, --output-duplicates     do not use * to mark line suppression\n  -w[BYTES], --width[=BYTES]  output BYTES bytes per output line;\n                                32 is implied when BYTES is not specified\n      --traditional           accept arguments in third form above\n"
0x00004eba      ba05000000     mov edx, 5
0x00004ebf      31ff           xor edi, edi
0x00004ec1      e8eac9ffff     call sym.imp.dcgettext
0x00004ec6      4889de         mov rsi, rbx
0x00004ec9      4889c7         mov rdi, rax
0x00004ecc      e8dfcaffff     call sym.imp.fputs_unlocked
0x00004ed1      488b1dd0b120.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100a8:8]=0
0x00004ed8      488d35716800.  lea rsi, str.help_____display_this_help_and_exit ; 0xb750 ; "      --help     display this help and exit\n"
0x00004edf      ba05000000     mov edx, 5
0x00004ee4      31ff           xor edi, edi
0x00004ee6      e8c5c9ffff     call sym.imp.dcgettext
0x00004eeb      4889de         mov rsi, rbx
0x00004eee      4889c7         mov rdi, rax
0x00004ef1      e8bacaffff     call sym.imp.fputs_unlocked
0x00004ef6      488b1dabb120.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100a8:8]=0
0x00004efd      488d357c6800.  lea rsi, str.version__output_version_information_and_exit ; 0xb780 ; "      --version  output version information and exit\n"
0x00004f04      ba05000000     mov edx, 5
0x00004f09      31ff           xor edi, edi
0x00004f0b      e8a0c9ffff     call sym.imp.dcgettext
0x00004f10      4889de         mov rsi, rbx
0x00004f13      4889c7         mov rdi, rax
0x00004f16      e895caffff     call sym.imp.fputs_unlocked
0x00004f1b      488b1d86b120.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100a8:8]=0
0x00004f22      488d358f6800.  lea rsi, str.Traditional_format_specifications_may_be_intermixed__they_accumulate:_____a___same_as__t_a___select_named_characters__ignoring_high_order_bit_____b___same_as__t_o1__select_octal_bytes_____c___same_as__t_c___select_printable_characters_or_backslash_escapes_____d___same_as__t_u2__select_unsigned_decimal_2_byte_units ; 0xb7b8 ; "\n\nTraditional format specifications may be intermixed; they accumulate:\n  -a   same as -t a,  select named characters, ignoring high-order bit\n  -b   same as -t o1, select octal bytes\n  -c   same as -t c,  select printable characters or backslash escapes\n  -d   same as -t u2, select unsigned decimal 2-byte units\n"
0x00004f29      ba05000000     mov edx, 5
0x00004f2e      31ff           xor edi, edi
0x00004f30      e87bc9ffff     call sym.imp.dcgettext
0x00004f35      4889de         mov rsi, rbx
0x00004f38      4889c7         mov rdi, rax
0x00004f3b      e870caffff     call sym.imp.fputs_unlocked
0x00004f40      488b1d61b120.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100a8:8]=0
0x00004f47      488d35aa6900.  lea rsi, str.f___same_as__t_fF__select_floats_____i___same_as__t_dI__select_decimal_ints_____l___same_as__t_dL__select_decimal_longs_____o___same_as__t_o2__select_octal_2_byte_units_____s___same_as__t_d2__select_decimal_2_byte_units_____x___same_as__t_x2__select_hexadecimal_2_byte_units ; 0xb8f8 ; "  -f   same as -t fF, select floats\n  -i   same as -t dI, select decimal ints\n  -l   same as -t dL, select decimal longs\n  -o   same as -t o2, select octal 2-byte units\n  -s   same as -t d2, select decimal 2-byte units\n  -x   same as -t x2, select hexadecimal 2-byte units\n"
0x00004f4e      ba05000000     mov edx, 5
0x00004f53      31ff           xor edi, edi
0x00004f55      e856c9ffff     call sym.imp.dcgettext
0x00004f5a      4889de         mov rsi, rbx
0x00004f5d      4889c7         mov rdi, rax
0x00004f60      e84bcaffff     call sym.imp.fputs_unlocked
0x00004f65      488b1d3cb120.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100a8:8]=0
0x00004f6c      488d359d6a00.  lea rsi, str.TYPE_is_made_up_of_one_or_more_of_these_specifications:____a__________named_character__ignoring_high_order_bit____c__________printable_character_or_backslash_escape ; 0xba10 ; "\n\nTYPE is made up of one or more of these specifications:\n  a          named character, ignoring high-order bit\n  c          printable character or backslash escape\n"
0x00004f73      ba05000000     mov edx, 5
0x00004f78      31ff           xor edi, edi
0x00004f7a      e831c9ffff     call sym.imp.dcgettext
0x00004f7f      4889de         mov rsi, rbx
0x00004f82      4889c7         mov rdi, rax
0x00004f85      e826caffff     call sym.imp.fputs_unlocked
0x00004f8a      488b1d17b120.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100a8:8]=0
0x00004f91      488d35206b00.  lea rsi, str.d_SIZE_____signed_decimal__SIZE_bytes_per_integer____f_SIZE_____floating_point__SIZE_bytes_per_float____o_SIZE_____octal__SIZE_bytes_per_integer____u_SIZE_____unsigned_decimal__SIZE_bytes_per_integer____x_SIZE_____hexadecimal__SIZE_bytes_per_integer ; 0xbab8 ; "  d[SIZE]    signed decimal, SIZE bytes per integer\n  f[SIZE]    floating point, SIZE bytes per float\n  o[SIZE]    octal, SIZE bytes per integer\n  u[SIZE]    unsigned decimal, SIZE bytes per integer\n  x[SIZE]    hexadecimal, SIZE bytes per integer\n"
0x00004f98      ba05000000     mov edx, 5
0x00004f9d      31ff           xor edi, edi
0x00004f9f      e80cc9ffff     call sym.imp.dcgettext
0x00004fa4      4889de         mov rsi, rbx
0x00004fa7      4889c7         mov rdi, rax
0x00004faa      e801caffff     call sym.imp.fputs_unlocked
0x00004faf      488b1df2b020.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100a8:8]=0
0x00004fb6      488d35fb6b00.  lea rsi, str.SIZE_is_a_number.__For_TYPE_in__doux___SIZE_may_also_be_C_for__sizeof_char___S_for_sizeof_short___I_for_sizeof_int__or_L_for__sizeof_long_.__If_TYPE_is_f__SIZE_may_also_be_F_for_sizeof_float___D__for_sizeof_double__or_L_for_sizeof_long_double_. ; 0xbbb8 ; "\nSIZE is a number.  For TYPE in [doux], SIZE may also be C for\nsizeof(char), S for sizeof(short), I for sizeof(int) or L for\nsizeof(long).  If TYPE is f, SIZE may also be F for sizeof(float), D\nfor sizeof(double) or L for sizeof(long double).\n"
0x00004fbd      ba05000000     mov edx, 5
0x00004fc2      31ff           xor edi, edi
0x00004fc4      e8e7c8ffff     call sym.imp.dcgettext
0x00004fc9      4889de         mov rsi, rbx
0x00004fcc      4889c7         mov rdi, rax
0x00004fcf      e8dcc9ffff     call sym.imp.fputs_unlocked
0x00004fd4      488b1dcdb020.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100a8:8]=0
0x00004fdb      488d35ce6c00.  lea rsi, str.Adding_a_z_suffix_to_any_type_displays_printable_characters_at_the_end_of__each_output_line. ; 0xbcb0 ; "\nAdding a z suffix to any type displays printable characters at the end of\neach output line.\n"
0x00004fe2      ba05000000     mov edx, 5
0x00004fe7      31ff           xor edi, edi
0x00004fe9      e8c2c8ffff     call sym.imp.dcgettext
0x00004fee      4889de         mov rsi, rbx
0x00004ff1      4889c7         mov rdi, rax
0x00004ff4      e8b7c9ffff     call sym.imp.fputs_unlocked
0x00004ff9      488b1da8b020.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100a8:8]=0
0x00005000      488d35096d00.  lea rsi, str.BYTES_is_hex_with_0x_or_0X_prefix__and_may_have_a_multiplier_suffix:____b____512____KB___1000____K____1024____MB___1000_1000____M____1024_1024__and_so_on_for_G__T__P__E__Z__Y.__Binary_prefixes_can_be_used__too:_KiB_K__MiB_M__and_so_on. ; stdio2.h:-380 ; 0xbd10 ; "\n\nBYTES is hex with 0x or 0X prefix, and may have a multiplier suffix:\n  b    512\n  KB   1000\n  K    1024\n  MB   1000*1000\n  M    1024*1024\nand so on for G, T, P, E, Z, Y.\nBinary prefixes can be used, too: KiB=K, MiB=M, and so on.\n"
0x00005007      ba05000000     mov edx, 5
0x0000500c      31ff           xor edi, edi
0x0000500e      e89dc8ffff     call sym.imp.dcgettext
0x00005013      4889de         mov rsi, rbx
0x00005016      4889c7         mov rdi, rax
0x00005019      488d1d9d5d00.  lea rbx, [0x0000adbd]                   ; "od"
0x00005020      e88bc9ffff     call sym.imp.fputs_unlocked
0x00005025      488d05945d00.  lea rax, [0x0000adc0]                   ; "["
0x0000502c      488d0dce5d00.  lea rcx, str.sha256sum                  ; 0xae01 ; "sha256sum"
0x00005033      48c744246000.  mov qword [rsp + 0x60], 0
0x0000503c      48c744246800.  mov qword [rsp + 0x68], 0
0x00005045      4889e2         mov rdx, rsp
0x00005048      48890424       mov qword [rsp], rax
0x0000504c      488d056f5d00.  lea rax, [0x0000adc2]                   ; "test invocation"
0x00005053      48894c2430     mov qword [rsp + 0x30], rcx
0x00005058      488d0dac5d00.  lea rcx, str.sha384sum                  ; stdio2.h:-370 ; 0xae0b ; "sha384sum"
0x0000505f      4889442408     mov qword [rsp + 8], rax
0x00005064      488d05cf5d00.  lea rax, [0x0000ae3a]                   ; stdio2.h:-369 ; "coreutils"
0x0000506b      48894c2440     mov qword [rsp + 0x40], rcx
0x00005070      488d0d9e5d00.  lea rcx, str.sha512sum                  ; 0xae15 ; "sha512sum"
0x00005077      4889442410     mov qword [rsp + 0x10], rax
0x0000507c      488d054f5d00.  lea rax, [0x0000add2]                   ; "Multi-call invocation"
0x00005083      48894c2450     mov qword [rsp + 0x50], rcx
0x00005088      4889442418     mov qword [rsp + 0x18], rax
0x0000508d      488d05545d00.  lea rax, str.sha224sum                  ; 0xade8 ; "sha224sum"
0x00005094      4889442420     mov qword [rsp + 0x20], rax
0x00005099      488d05525d00.  lea rax, str.sha2_utilities             ; 0xadf2 ; "sha2 utilities"
0x000050a0      4889442428     mov qword [rsp + 0x28], rax
0x000050a5      4889442438     mov qword [rsp + 0x38], rax
0x000050aa      4889442448     mov qword [rsp + 0x48], rax
0x000050af      4889442458     mov qword [rsp + 0x58], rax
0x000050b4      0f1f4000       nop dword [rax]
0x000050b8      4883c210       add rdx, 0x10
0x000050bc      488b3a         mov rdi, qword [rdx]
0x000050bf      4885ff         test rdi, rdi
0x000050c2      7413           je 0x50d7
0x000050c4      b903000000     mov ecx, 3
0x000050c9      4889de         mov rsi, rbx
0x000050cc      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000050ce      0f97c0         seta al
0x000050d1      1c00           sbb al, 0
0x000050d3      84c0           test al, al
0x000050d5      75e1           jne 0x50b8
0x000050d7      4c8b6208       mov r12, qword [rdx + 8]
0x000050db      31ff           xor edi, edi
0x000050dd      ba05000000     mov edx, 5                              ; .//ib:-922
0x000050e2      488d35365d00.  lea rsi, str.s_online_help:___s         ; 0xae1f ; "\n%s online help: <%s>\n"
0x000050e9      4d85e4         test r12, r12
0x000050ec      0f84c1000000   je 0x51b3
0x000050f2      e8b9c7ffff     call sym.imp.dcgettext
0x000050f7      488d0dfa6c00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; stdio2.h:-374 ; 0xbdf8 ; "https://www.gnu.org/software/coreutils/"
0x000050fe      488d15315d00.  lea rdx, str.GNU_coreutils              ; 0xae36 ; "GNU coreutils"
0x00005105      4889c6         mov rsi, rax
0x00005108      bf01000000     mov edi, 1
0x0000510d      31c0           xor eax, eax
0x0000510f      e85cc9ffff     call sym.imp.__printf_chk
0x00005114      31f6           xor esi, esi
0x00005116      bf05000000     mov edi, 5
0x0000511b      e840c9ffff     call sym.imp.setlocale
0x00005120      4885c0         test rax, rax
0x00005123      741c           je 0x5141
0x00005125      488d35185d00.  lea rsi, [0x0000ae44]                   ; stdio2.h:-369 ; "en_"
0x0000512c      ba03000000     mov edx, 3
0x00005131      4889c7         mov rdi, rax
0x00005134      e8c7c6ffff     call sym.imp.strncmp
0x00005139      85c0           test eax, eax
0x0000513b      0f8507010000   jne 0x5248
0x00005141      488d35005d00.  lea rsi, str.Full_documentation___s_s   ; 0xae48 ; "Full documentation <%s%s>\n"
0x00005148      31ff           xor edi, edi
0x0000514a      ba05000000     mov edx, 5
0x0000514f      e85cc7ffff     call sym.imp.dcgettext
0x00005154      488d0d625c00.  lea rcx, [0x0000adbd]                   ; "od"
0x0000515b      488d15966c00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0xbdf8 ; "https://www.gnu.org/software/coreutils/"
0x00005162      4889c6         mov rsi, rax
0x00005165      bf01000000     mov edi, 1
0x0000516a      31c0           xor eax, eax
0x0000516c      e8ffc8ffff     call sym.imp.__printf_chk
0x00005171      4939dc         cmp r12, rbx
0x00005174      488d0d615c00.  lea rcx, [0x0000addc]                   ; " invocation"
0x0000517b      488d1d3f7c00.  lea rbx, [0x0000cdc1]
0x00005182      480f44d9       cmove rbx, rcx
0x00005186      488d35db6c00.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0xbe68 ; "or available locally via: info '(coreutils) %s%s'\n"
0x0000518d      31ff           xor edi, edi
0x0000518f      ba05000000     mov edx, 5
0x00005194      e817c7ffff     call sym.imp.dcgettext
0x00005199      4889d9         mov rcx, rbx
0x0000519c      4889c6         mov rsi, rax
0x0000519f      4c89e2         mov rdx, r12
0x000051a2      bf01000000     mov edi, 1
0x000051a7      31c0           xor eax, eax
0x000051a9      e8c2c8ffff     call sym.imp.__printf_chk
0x000051ae      e913fcffff     jmp 0x4dc6
0x000051b3      e8f8c6ffff     call sym.imp.dcgettext
0x000051b8      488d0d396c00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0xbdf8 ; "https://www.gnu.org/software/coreutils/"
0x000051bf      488d15705c00.  lea rdx, str.GNU_coreutils              ; 0xae36 ; "GNU coreutils"
0x000051c6      4889c6         mov rsi, rax
0x000051c9      bf01000000     mov edi, 1
0x000051ce      31c0           xor eax, eax
0x000051d0      e89bc8ffff     call sym.imp.__printf_chk
0x000051d5      31f6           xor esi, esi
0x000051d7      bf05000000     mov edi, 5
0x000051dc      e87fc8ffff     call sym.imp.setlocale
0x000051e1      4885c0         test rax, rax
0x000051e4      7418           je 0x51fe
0x000051e6      488d35575c00.  lea rsi, [0x0000ae44]                   ; "en_"
0x000051ed      ba03000000     mov edx, 3
0x000051f2      4889c7         mov rdi, rax
0x000051f5      e806c6ffff     call sym.imp.strncmp
0x000051fa      85c0           test eax, eax
0x000051fc      7543           jne 0x5241
0x000051fe      488d35435c00.  lea rsi, str.Full_documentation___s_s   ; 0xae48 ; "Full documentation <%s%s>\n"
0x00005205      ba05000000     mov edx, 5
0x0000520a      31ff           xor edi, edi
0x0000520c      4c8d25aa5b00.  lea r12, [0x0000adbd]                   ; "od"
0x00005213      488d1dc25b00.  lea rbx, [0x0000addc]                   ; " invocation"
0x0000521a      e891c6ffff     call sym.imp.dcgettext
0x0000521f      488d0d975b00.  lea rcx, [0x0000adbd]                   ; "od"
0x00005226      488d15cb6b00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0xbdf8 ; "https://www.gnu.org/software/coreutils/"
0x0000522d      4889c6         mov rsi, rax
0x00005230      bf01000000     mov edi, 1
0x00005235      31c0           xor eax, eax
0x00005237      e834c8ffff     call sym.imp.__printf_chk
0x0000523c      e945ffffff     jmp 0x5186
0x00005241      4c8d25755b00.  lea r12, [0x0000adbd]                   ; "od"
0x00005248      4c8b2d59ae20.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100a8:8]=0
0x0000524f      488d35ca6b00.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0xbe20 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x00005256      31ff           xor edi, edi
0x00005258      ba05000000     mov edx, 5
0x0000525d      e84ec6ffff     call sym.imp.dcgettext
0x00005262      4c89ee         mov rsi, r13
0x00005265      4889c7         mov rdi, rax
0x00005268      e843c7ffff     call sym.imp.fputs_unlocked
0x0000526d      e9cffeffff     jmp 0x5141
0x00005272      662e0f1f8400.  nop word cs:[rax + rax]
0x0000527c      0f1f4000       nop dword [rax]
;-- __argmatch_die:
0x00005280      bf01000000     mov edi, 1                              ; ../coreutils-8.31/lib/argmatch.c:63
0x00005285      e9e6faffff     jmp sym.usage
0x0000528a      660f1f440000   nop word [rax + rax]
;-- argmatch:
0x00005290      4157           push r15                                ; ../coreutils-8.31/lib/argmatch.c:86
0x00005292      4156           push r14
0x00005294      4989f7         mov r15, rsi
0x00005297      4155           push r13
0x00005299      4154           push r12
0x0000529b      4989cd         mov r13, rcx
0x0000529e      55             push rbp
0x0000529f      53             push rbx
0x000052a0      4889d5         mov rbp, rdx
0x000052a3      4883ec28       sub rsp, 0x28
0x000052a7      48897c2408     mov qword [rsp + 8], rdi
0x000052ac      4889542418     mov qword [rsp + 0x18], rdx
0x000052b1      e81ac6ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/argmatch.c:92
0x000052b6      4d8b37         mov r14, qword [r15]                    ; ../coreutils-8.31/lib/argmatch.c:95
0x000052b9      48c70424ffff.  mov qword [rsp], 0xffffffffffffffff     ; ../coreutils-8.31/lib/argmatch.c:89
0x000052c1      4d85f6         test r14, r14                           ; ../coreutils-8.31/lib/argmatch.c:95
0x000052c4      0f84b3000000   je 0x537d
0x000052ca      4989c4         mov r12, rax
0x000052cd      c644241700     mov byte [rsp + 0x17], 0                ; ../coreutils-8.31/lib/argmatch.c:90
0x000052d2      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/argmatch.c:95
0x000052d4      eb51           jmp 0x5327
0x000052d6      662e0f1f8400.  nop word cs:[rax + rax]
0x000052e0      488b442418     mov rax, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/argmatch.c:108
0x000052e5      4885c0         test rax, rax
0x000052e8      0f84a2000000   je 0x5390
0x000052ee      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/argmatch.c:109
0x000052f2      4c89ea         mov rdx, r13
0x000052f5      4889ee         mov rsi, rbp
0x000052f8      490faffd       imul rdi, r13
0x000052fc      4801c7         add rdi, rax
0x000052ff      e89cc6ffff     call sym.imp.memcmp
0x00005304      85c0           test eax, eax                           ; ../coreutils-8.31/lib/argmatch.c:114
0x00005306      0fb6442417     movzx eax, byte [rsp + 0x17]
0x0000530b      b901000000     mov ecx, 1
0x00005310      0f45c1         cmovne eax, ecx
0x00005313      88442417       mov byte [rsp + 0x17], al
0x00005317      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:95
0x0000531b      4c01ed         add rbp, r13
0x0000531e      4d8b34df       mov r14, qword [r15 + rbx*8]
0x00005322      4d85f6         test r14, r14
0x00005325      7441           je 0x5368
0x00005327      488b742408     mov rsi, qword [rsp + 8]                ; ../coreutils-8.31/lib/argmatch.c:97
0x0000532c      4c89e2         mov rdx, r12
0x0000532f      4c89f7         mov rdi, r14
0x00005332      e8c9c4ffff     call sym.imp.strncmp
0x00005337      85c0           test eax, eax
0x00005339      75dc           jne 0x5317
0x0000533b      4c89f7         mov rdi, r14                            ; ../coreutils-8.31/lib/argmatch.c:99
0x0000533e      e88dc5ffff     call sym.imp.strlen
0x00005343      4c39e0         cmp rax, r12
0x00005346      7458           je 0x53a0
0x00005348      48833c24ff     cmp qword [rsp], 0xffffffffffffffff     ; ../coreutils-8.31/lib/argmatch.c:102
0x0000534d      7591           jne 0x52e0
0x0000534f      48891c24       mov qword [rsp], rbx                    ; ../coreutils-8.31/lib/argmatch.c:104
0x00005353      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:95
0x00005357      4c01ed         add rbp, r13
0x0000535a      4d8b34df       mov r14, qword [r15 + rbx*8]
0x0000535e      4d85f6         test r14, r14
0x00005361      75c4           jne 0x5327
0x00005363      0f1f440000     nop dword [rax + rax]
0x00005368      807c241700     cmp byte [rsp + 0x17], 0                ; ../coreutils-8.31/lib/argmatch.c:120
0x0000536d      48c7c0feffff.  mov rax, 0xfffffffffffffffe
0x00005374      480f440424     cmove rax, qword [rsp]
0x00005379      48890424       mov qword [rsp], rax
0x0000537d      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/argmatch.c:123
0x00005381      4883c428       add rsp, 0x28
0x00005385      5b             pop rbx
0x00005386      5d             pop rbp
0x00005387      415c           pop r12
0x00005389      415d           pop r13
0x0000538b      415e           pop r14
0x0000538d      415f           pop r15
0x0000538f      c3             ret
0x00005390      c644241701     mov byte [rsp + 0x17], 1                ; ../coreutils-8.31/lib/argmatch.c:114
0x00005395      eb80           jmp 0x5317
0x00005397      660f1f840000.  nop word [rax + rax]
0x000053a0      48891c24       mov qword [rsp], rbx                    ; ../coreutils-8.31/lib/argmatch.c:101
0x000053a4      ebd7           jmp 0x537d
0x000053a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- argmatch_invalid:
0x000053b0      4883faff       cmp rdx, 0xffffffffffffffff             ; ../coreutils-8.31/lib/argmatch.c:132
0x000053b4      4154           push r12
0x000053b6      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/argmatch.c:133
0x000053bb      55             push rbp                                ; ../coreutils-8.31/lib/argmatch.c:132
0x000053bc      4989f4         mov r12, rsi
0x000053bf      53             push rbx
0x000053c0      4889fd         mov rbp, rdi
0x000053c3      744b           je 0x5410                               ; ../coreutils-8.31/lib/argmatch.c:133
0x000053c5      488d35d87300.  lea rsi, str.ambiguous_argument__s_for__s ; 0xc7a4 ; "ambiguous argument %s for %s"
0x000053cc      31ff           xor edi, edi
0x000053ce      e8ddc4ffff     call sym.imp.dcgettext
0x000053d3      4889c3         mov rbx, rax
0x000053d6      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/argmatch.c:137
0x000053d9      bf01000000     mov edi, 1
0x000053de      e81d240000     call sym.quote_n
0x000053e3      4c89e2         mov rdx, r12
0x000053e6      4889c5         mov rbp, rax
0x000053e9      be08000000     mov esi, 8
0x000053ee      31ff           xor edi, edi
0x000053f0      e83b200000     call sym.quotearg_n_style
0x000053f5      4989e8         mov r8, rbp
0x000053f8      4889da         mov rdx, rbx
0x000053fb      4889c1         mov rcx, rax
0x000053fe      5b             pop rbx                                 ; ../coreutils-8.31/lib/argmatch.c:139
0x000053ff      5d             pop rbp
0x00005400      415c           pop r12
0x00005402      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/argmatch.c:137
0x00005404      31ff           xor edi, edi
0x00005406      31c0           xor eax, eax
0x00005408      e993c6ffff     jmp sym.imp.error
0x0000540d      0f1f00         nop dword [rax]
0x00005410      488d35727300.  lea rsi, str.invalid_argument__s_for__s ; ../coreutils-8.31/lib/argmatch.c:133 ; 0xc789 ; "invalid argument %s for %s"
0x00005417      31ff           xor edi, edi
0x00005419      e892c4ffff     call sym.imp.dcgettext
0x0000541e      4889c3         mov rbx, rax
0x00005421      ebb3           jmp 0x53d6
0x00005423      0f1f00         nop dword [rax]
0x00005426      662e0f1f8400.  nop word cs:[rax + rax]
;-- argmatch_valid:
0x00005430      4157           push r15                                ; ../coreutils-8.31/lib/argmatch.c:148
0x00005432      4156           push r14
0x00005434      4989fe         mov r14, rdi
0x00005437      4155           push r13
0x00005439      4154           push r12
0x0000543b      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/argmatch.c:154
0x0000543d      55             push rbp                                ; ../coreutils-8.31/lib/argmatch.c:148
0x0000543e      53             push rbx
0x0000543f      4889f5         mov rbp, rsi
0x00005442      488d35787300.  lea rsi, str.Valid_arguments_are:       ; ../coreutils-8.31/lib/argmatch.c:154 ; 0xc7c1 ; "Valid arguments are:"
0x00005449      4989d4         mov r12, rdx                            ; ../coreutils-8.31/lib/argmatch.c:148
0x0000544c      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/argmatch.c:154
0x00005451      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/argmatch.c:148
0x00005455      488b1d84ac20.  mov rbx, qword [obj.stderr]             ; ../coreutils-8.31/lib/argmatch.c:154 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2100e0:8]=0
0x0000545c      e84fc4ffff     call sym.imp.dcgettext
0x00005461      4889c7         mov rdi, rax
0x00005464      4889de         mov rsi, rbx
0x00005467      e844c5ffff     call sym.imp.fputs_unlocked
0x0000546c      4d8b3e         mov r15, qword [r14]                    ; ../coreutils-8.31/lib/argmatch.c:155
0x0000546f      4d85ff         test r15, r15
0x00005472      0f8490000000   je 0x5508
0x00005478      4531ed         xor r13d, r13d                          ; ../coreutils-8.31/lib/argmatch.c:150
0x0000547b      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/argmatch.c:155
0x0000547d      eb39           jmp 0x54b8
0x0000547f      90             nop
0x00005480      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/argmatch.c:159
0x00005483      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:155
0x00005487      4989ed         mov r13, rbp                            ; ../coreutils-8.31/lib/argmatch.c:160
0x0000548a      e891230000     call sym.quote                          ; ../coreutils-8.31/lib/argmatch.c:159
0x0000548f      488b3d4aac20.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2100e0:8]=0
0x00005496      488d15397300.  lea rdx, [0x0000c7d6]                   ; "\n  - %s"
0x0000549d      4889c1         mov rcx, rax
0x000054a0      be01000000     mov esi, 1
0x000054a5      31c0           xor eax, eax
0x000054a7      4c01e5         add rbp, r12
0x000054aa      e861c6ffff     call sym.imp.__fprintf_chk
0x000054af      4d8b3cde       mov r15, qword [r14 + rbx*8]            ; ../coreutils-8.31/lib/argmatch.c:155
0x000054b3      4d85ff         test r15, r15
0x000054b6      7450           je 0x5508
0x000054b8      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/argmatch.c:156
0x000054bb      74c3           je 0x5480
0x000054bd      4c89e2         mov rdx, r12                            ; ../coreutils-8.31/lib/argmatch.c:157
0x000054c0      4889ee         mov rsi, rbp
0x000054c3      4c89ef         mov rdi, r13
0x000054c6      e8d5c4ffff     call sym.imp.memcmp
0x000054cb      85c0           test eax, eax
0x000054cd      75b1           jne 0x5480
0x000054cf      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/argmatch.c:164
0x000054d2      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:155
0x000054d6      4c01e5         add rbp, r12
0x000054d9      e842230000     call sym.quote                          ; ../coreutils-8.31/lib/argmatch.c:164
0x000054de      488b3dfbab20.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2100e0:8]=0
0x000054e5      488d15f27200.  lea rdx, str.s                          ; 0xc7de ; ", %s"
0x000054ec      4889c1         mov rcx, rax
0x000054ef      be01000000     mov esi, 1
0x000054f4      31c0           xor eax, eax
0x000054f6      e815c6ffff     call sym.imp.__fprintf_chk
0x000054fb      4d8b3cde       mov r15, qword [r14 + rbx*8]            ; ../coreutils-8.31/lib/argmatch.c:155
0x000054ff      4d85ff         test r15, r15
0x00005502      75b4           jne 0x54b8
0x00005504      0f1f4000       nop dword [rax]
0x00005508      488b3dd1ab20.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/argmatch.c:166 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2100e0:8]=0
0x0000550f      488b4728       mov rax, qword [rdi + 0x28]             ; stdio.h:100   return _IO_putc_unlocked (__c, __stream);
0x00005513      483b4730       cmp rax, qword [rdi + 0x30]
0x00005517      731f           jae 0x5538
0x00005519      488d5001       lea rdx, [rax + 1]
0x0000551d      48895728       mov qword [rdi + 0x28], rdx
0x00005521      c6000a         mov byte [rax], 0xa
0x00005524      4883c408       add rsp, 8
0x00005528      5b             pop rbx
0x00005529      5d             pop rbp
0x0000552a      415c           pop r12
0x0000552c      415d           pop r13
0x0000552e      415e           pop r14
0x00005530      415f           pop r15
0x00005532      c3             ret
0x00005533      0f1f440000     nop dword [rax + rax]
0x00005538      4883c408       add rsp, 8
0x0000553c      be0a000000     mov esi, 0xa                            ; ../coreutils-8.31/lib/argmatch.c:-204
0x00005541      5b             pop rbx
0x00005542      5d             pop rbp
0x00005543      415c           pop r12
0x00005545      415d           pop r13
0x00005547      415e           pop r14
0x00005549      415f           pop r15
0x0000554b      e9d0c3ffff     jmp sym.imp.__overflow
;-- __xargmatch_internal:
0x00005550      4157           push r15
0x00005552      4156           push r14
0x00005554      4989fe         mov r14, rdi
0x00005557      4155           push r13
0x00005559      4154           push r12
0x0000555b      4989f4         mov r12, rsi
0x0000555e      55             push rbp
0x0000555f      53             push rbx
0x00005560      4889cd         mov rbp, rcx
0x00005563      4889d3         mov rbx, rdx
0x00005566      4c89c1         mov rcx, r8
0x00005569      4889ea         mov rdx, rbp
0x0000556c      4883ec08       sub rsp, 8
0x00005570      4889de         mov rsi, rbx
0x00005573      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/argmatch.c:-196
0x00005576      4d89c7         mov r15, r8
0x00005579      4d89cd         mov r13, r9
0x0000557c      e80ffdffff     call sym.argmatch
0x00005581      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/argmatch.c:-195
0x00005584      780f           js 0x5595                               ; ../coreutils-8.31/lib/argmatch.c:-193
0x00005586      4883c408       add rsp, 8
0x0000558a      5b             pop rbx
0x0000558b      5d             pop rbp
0x0000558c      415c           pop r12
0x0000558e      415d           pop r13
0x00005590      415e           pop r14                                 ; ../coreutils-8.31/lib/argmatch.c:-184
0x00005592      415f           pop r15
0x00005594      c3             ret
0x00005595      4889c2         mov rdx, rax
0x00005598      4c89e6         mov rsi, r12                            ; ../coreutils-8.31/lib/argmatch.c:-181
0x0000559b      4c89f7         mov rdi, r14
0x0000559e      e80dfeffff     call sym.argmatch_invalid
0x000055a3      4c89fa         mov rdx, r15
0x000055a6      4889ee         mov rsi, rbp
0x000055a9      4889df         mov rdi, rbx
0x000055ac      e87ffeffff     call sym.argmatch_valid
0x000055b1      41ffd5         call r13
0x000055b4      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x000055bb      ebc9           jmp 0x5586
0x000055bd      0f1f00         nop dword [rax]
;-- argmatch_to_argument:
0x000055c0      4156           push r14
0x000055c2      4155           push r13
0x000055c4      4154           push r12
0x000055c6      55             push rbp
0x000055c7      53             push rbx
0x000055c8      4c8b36         mov r14, qword [rsi]
0x000055cb      4d85f6         test r14, r14
0x000055ce      7431           je 0x5601
0x000055d0      4989cc         mov r12, rcx
0x000055d3      4989fd         mov r13, rdi
0x000055d6      4889d5         mov rbp, rdx
0x000055d9      488d5e08       lea rbx, [rsi + 8]
0x000055dd      eb10           jmp 0x55ef                              ; ../coreutils-8.31/lib/argmatch.c:-177
0x000055df      90             nop
0x000055e0      4c8b33         mov r14, qword [rbx]
0x000055e3      4c01e5         add rbp, r12
0x000055e6      4883c308       add rbx, 8
0x000055ea      4d85f6         test r14, r14
0x000055ed      7412           je 0x5601
0x000055ef      4c89e2         mov rdx, r12
0x000055f2      4889ee         mov rsi, rbp
0x000055f5      4c89ef         mov rdi, r13
0x000055f8      e8a3c3ffff     call sym.imp.memcmp
0x000055fd      85c0           test eax, eax
0x000055ff      75df           jne 0x55e0
0x00005601      5b             pop rbx
0x00005602      4c89f0         mov rax, r14
0x00005605      5d             pop rbp
0x00005606      415c           pop r12
0x00005608      415d           pop r13
0x0000560a      415e           pop r14
0x0000560c      c3             ret
0x0000560d      0f1f00         nop dword [rax]
;-- close_stdout_set_file_name:
0x00005610      48893d19ac20.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x210230:8]=0
0x00005617      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00005618      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00005620      40883d01ac20.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x210228:1]=0
0x00005627      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00005628      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00005630      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00005631      53             push rbx
0x00005632      4883ec08       sub rsp, 8
0x00005636      488b3d6baa20.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100a8:8]=0
0x0000563d      e88e340000     call sym.close_stream
0x00005642      85c0           test eax, eax
0x00005644      7416           je 0x565c
0x00005646      e8a5c1ffff     call sym.imp.__errno_location
0x0000564b      803dd6ab2000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x210228:1]=0
0x00005652      4889c3         mov rbx, rax
0x00005655      741c           je 0x5673
0x00005657      833820         cmp dword [rax], 0x20
0x0000565a      7517           jne 0x5673
0x0000565c      488b3d7daa20.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2100e0:8]=0
0x00005663      e868340000     call sym.close_stream
0x00005668      85c0           test eax, eax
0x0000566a      7546           jne 0x56b2
0x0000566c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00005670      5b             pop rbx
0x00005671      5d             pop rbp
0x00005672      c3             ret
0x00005673      488d35045700.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0xad7e ; "write error"
0x0000567a      31ff           xor edi, edi
0x0000567c      ba05000000     mov edx, 5
0x00005681      e82ac2ffff     call sym.imp.dcgettext
0x00005686      488b3da3ab20.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x210230:8]=0
0x0000568d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00005690      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00005693      7428           je 0x56bd
0x00005695      e8861f0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x0000569a      8b33           mov esi, dword [rbx]
0x0000569c      488d15407100.  lea rdx, str.s:__s                      ; 0xc7e3 ; "%s: %s"
0x000056a3      4889c1         mov rcx, rax
0x000056a6      4989e8         mov r8, rbp
0x000056a9      31ff           xor edi, edi
0x000056ab      31c0           xor eax, eax
0x000056ad      e8eec3ffff     call sym.imp.error
0x000056b2      8b3d70a92000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x210028:4]=1
0x000056b8      e853c1ffff     call sym.imp._exit
0x000056bd      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x000056bf      488d151a7100.  lea rdx, [0x0000c7e0]                   ; "%s"
0x000056c6      4889c1         mov rcx, rax
0x000056c9      31ff           xor edi, edi
0x000056cb      31c0           xor eax, eax
0x000056cd      e8cec3ffff     call sym.imp.error
0x000056d2      ebde           jmp 0x56b2
0x000056d4      662e0f1f8400.  nop word cs:[rax + rax]
0x000056de      6690           nop
;-- dtoastr:
0x000056e0      4157           push r15
0x000056e2      4156           push r14
0x000056e4      4189ce         mov r14d, ecx
0x000056e7      4155           push r13
0x000056e9      4154           push r12
0x000056eb      4989fc         mov r12, rdi
0x000056ee      55             push rbp
0x000056ef      53             push rbx
0x000056f0      4889f5         mov rbp, rsi
0x000056f3      660f28d8       movapd xmm3, xmm0
0x000056f7      4883ec38       sub rsp, 0x38
0x000056fb      f20f110424     movsd qword [rsp], xmm0
0x00005700      660fefc0       pxor xmm0, xmm0
0x00005704      64488b042528.  mov rax, qword fs:[0x28]
0x0000570d      4889442428     mov qword [rsp + 0x28], rax
0x00005712      31c0           xor eax, eax
0x00005714      660f2ec3       ucomisd xmm0, xmm3
0x00005718      0f8712010000   ja 0x5830
0x0000571e      f20f100424     movsd xmm0, qword [rsp]
0x00005723      89d0           mov eax, edx
0x00005725      4c8d6c241d     lea r13, [rsp + 0x1d]
0x0000572a      89d1           mov ecx, edx
0x0000572c      83e001         and eax, 1
0x0000572f      d1e9           shr ecx, 1
0x00005731      be252d0000     mov esi, 0x2d25                         ; '%-'
0x00005736      498d7c0501     lea rdi, [r13 + rax + 1]
0x0000573b      83e101         and ecx, 1
0x0000573e      89d0           mov eax, edx
0x00005740      668974241d     mov word [rsp + 0x1d], si
0x00005745      c1e802         shr eax, 2
0x00005748      bb01000000     mov ebx, 1
0x0000574d      488d340f       lea rsi, [rdi + rcx]
0x00005751      83e001         and eax, 1
0x00005754      c6072b         mov byte [rdi], 0x2b                    ; '+'
                                                                       ; [0x2b:1]=0
0x00005757      f20f100da170.  movsd xmm1, qword [0x0000c800]          ; [0xc800:8]=0x10000000000000
0x0000575f      bf2a2e0000     mov edi, 0x2e2a                         ; '*.'
0x00005764      488d0c06       lea rcx, [rsi + rax]
0x00005768      89d0           mov eax, edx
0x0000576a      83e210         and edx, 0x10
0x0000576d      c1e803         shr eax, 3
0x00005770      c60620         mov byte [rsi], 0x20                    ; [0x20:1]=64 ; "@"
0x00005773      49c7c7ffffff.  mov r15, 0xffffffffffffffff
0x0000577a      83e001         and eax, 1
0x0000577d      c60130         mov byte [rcx], 0x30                    ; '0'
                                                                       ; [0x30:1]=0
0x00005780      4801c8         add rax, rcx
0x00005783      83fa01         cmp edx, 1
0x00005786      19d2           sbb edx, edx
0x00005788      668938         mov word [rax], di
0x0000578b      c640022a       mov byte [rax + 2], 0x2a                ; '*'
                                                                       ; [0x2a:1]=4
0x0000578f      83e220         and edx, 0x20                           ; "@"
0x00005792      c6400400       mov byte [rax + 4], 0
0x00005796      83c247         add edx, 0x47
0x00005799      660f2ec8       ucomisd xmm1, xmm0
0x0000579d      885003         mov byte [rax + 3], dl
0x000057a0      b80f000000     mov eax, 0xf
0x000057a5      0f46d8         cmovbe ebx, eax
0x000057a8      eb09           jmp 0x57b3
0x000057aa      660f1f440000   nop word [rax + rax]
0x000057b0      83c301         add ebx, 1
0x000057b3      4883ec08       sub rsp, 8
0x000057b7      4c89f9         mov rcx, r15
0x000057ba      ba01000000     mov edx, 1
0x000057bf      53             push rbx
0x000057c0      4589f1         mov r9d, r14d
0x000057c3      4d89e8         mov r8, r13
0x000057c6      4889ee         mov rsi, rbp
0x000057c9      4c89e7         mov rdi, r12
0x000057cc      b801000000     mov eax, 1
0x000057d1      f20f10442410   movsd xmm0, qword [rsp + 0x10]
0x000057d7      e8e4bfffff     call sym.imp.__snprintf_chk
0x000057dc      85c0           test eax, eax
0x000057de      5a             pop rdx
0x000057df      59             pop rcx
0x000057e0      7828           js 0x580a
0x000057e2      83fb10         cmp ebx, 0x10
0x000057e5      7f23           jg 0x580a
0x000057e7      4863d0         movsxd rdx, eax
0x000057ea      4839ea         cmp rdx, rbp
0x000057ed      73c1           jae 0x57b0
0x000057ef      31f6           xor esi, esi
0x000057f1      4c89e7         mov rdi, r12
0x000057f4      8944240c       mov dword [rsp + 0xc], eax
0x000057f8      e853c0ffff     call sym.imp.strtod
0x000057fd      660f2e0424     ucomisd xmm0, qword [rsp]
0x00005802      7aac           jp 0x57b0
0x00005804      8b44240c       mov eax, dword [rsp + 0xc]
0x00005808      75a6           jne 0x57b0
0x0000580a      488b742428     mov rsi, qword [rsp + 0x28]
0x0000580f      644833342528.  xor rsi, qword fs:[0x28]
0x00005818      7527           jne 0x5841
0x0000581a      4883c438       add rsp, 0x38
0x0000581e      5b             pop rbx
0x0000581f      5d             pop rbp
0x00005820      415c           pop r12
0x00005822      415d           pop r13
0x00005824      415e           pop r14
0x00005826      415f           pop r15
0x00005828      c3             ret
0x00005829      0f1f80000000.  nop dword [rax]
0x00005830      660f28c3       movapd xmm0, xmm3
0x00005834      660f5705b46f.  xorpd xmm0, xmmword [0x0000c7f0]
0x0000583c      e9e2feffff     jmp 0x5723
0x00005841      e89ac0ffff     call sym.imp.__stack_chk_fail
0x00005846      662e0f1f8400.  nop word cs:[rax + rax]
;-- ftoastr:
0x00005850      4157           push r15
0x00005852      660fefe4       pxor xmm4, xmm4
0x00005856      4156           push r14
0x00005858      4155           push r13
0x0000585a      4189cf         mov r15d, ecx
0x0000585d      4154           push r12
0x0000585f      55             push rbp
0x00005860      4989fc         mov r12, rdi
0x00005863      53             push rbx
0x00005864      0f28d8         movaps xmm3, xmm0
0x00005867      f30f5ae0       cvtss2sd xmm4, xmm0
0x0000586b      4889f5         mov rbp, rsi
0x0000586e      4883ec38       sub rsp, 0x38
0x00005872      f30f1144240c   movss dword [rsp + 0xc], xmm0
0x00005878      660fefc0       pxor xmm0, xmm0
0x0000587c      64488b042528.  mov rax, qword fs:[0x28]
0x00005885      4889442428     mov qword [rsp + 0x28], rax
0x0000588a      31c0           xor eax, eax
0x0000588c      f20f112424     movsd qword [rsp], xmm4
0x00005891      0f2ec3         ucomiss xmm0, xmm3
0x00005894      0f870e010000   ja 0x59a8
0x0000589a      f30f1044240c   movss xmm0, dword [rsp + 0xc]
0x000058a0      89d0           mov eax, edx
0x000058a2      4c8d6c241d     lea r13, [rsp + 0x1d]
0x000058a7      89d1           mov ecx, edx
0x000058a9      83e001         and eax, 1
0x000058ac      d1e9           shr ecx, 1
0x000058ae      be252d0000     mov esi, 0x2d25                         ; '%-'
0x000058b3      498d7c0501     lea rdi, [r13 + rax + 1]
0x000058b8      83e101         and ecx, 1
0x000058bb      89d0           mov eax, edx
0x000058bd      668974241d     mov word [rsp + 0x1d], si
0x000058c2      c1e802         shr eax, 2
0x000058c5      49c7c6ffffff.  mov r14, 0xffffffffffffffff
0x000058cc      488d340f       lea rsi, [rdi + rcx]
0x000058d0      83e001         and eax, 1
0x000058d3      c6072b         mov byte [rdi], 0x2b                    ; '+'
                                                                       ; [0x2b:1]=0
0x000058d6      f30f100d426f.  movss xmm1, dword [0x0000c820]          ; [0xc820:4]=0x800000
0x000058de      bf2a2e0000     mov edi, 0x2e2a                         ; '*.'
0x000058e3      488d0c06       lea rcx, [rsi + rax]
0x000058e7      89d0           mov eax, edx
0x000058e9      83e210         and edx, 0x10
0x000058ec      c1e803         shr eax, 3
0x000058ef      c60620         mov byte [rsi], 0x20                    ; [0x20:1]=64 ; "@"
0x000058f2      83e001         and eax, 1
0x000058f5      c60130         mov byte [rcx], 0x30                    ; '0'
                                                                       ; [0x30:1]=0
0x000058f8      4801c8         add rax, rcx
0x000058fb      83fa01         cmp edx, 1
0x000058fe      19d2           sbb edx, edx
0x00005900      31db           xor ebx, ebx
0x00005902      668938         mov word [rax], di
0x00005905      83e220         and edx, 0x20                           ; "@"
0x00005908      c640022a       mov byte [rax + 2], 0x2a                ; '*'
                                                                       ; [0x2a:1]=4
0x0000590c      c6400400       mov byte [rax + 4], 0
0x00005910      83c247         add edx, 0x47
0x00005913      0f2ec8         ucomiss xmm1, xmm0
0x00005916      885003         mov byte [rax + 3], dl
0x00005919      0f96c3         setbe bl
0x0000591c      8d5c9b01       lea ebx, [rbx + rbx*4 + 1]
0x00005920      eb09           jmp 0x592b
0x00005922      660f1f440000   nop word [rax + rax]
0x00005928      83c301         add ebx, 1
0x0000592b      4883ec08       sub rsp, 8
0x0000592f      4c89f1         mov rcx, r14
0x00005932      ba01000000     mov edx, 1
0x00005937      53             push rbx
0x00005938      4589f9         mov r9d, r15d
0x0000593b      4d89e8         mov r8, r13
0x0000593e      4889ee         mov rsi, rbp
0x00005941      4c89e7         mov rdi, r12
0x00005944      b801000000     mov eax, 1
0x00005949      f20f10442410   movsd xmm0, qword [rsp + 0x10]
0x0000594f      e86cbeffff     call sym.imp.__snprintf_chk
0x00005954      85c0           test eax, eax
0x00005956      5a             pop rdx
0x00005957      59             pop rcx
0x00005958      7828           js 0x5982
0x0000595a      83fb08         cmp ebx, 8
0x0000595d      7f23           jg 0x5982
0x0000595f      4863d0         movsxd rdx, eax
0x00005962      4839ea         cmp rdx, rbp
0x00005965      73c1           jae 0x5928
0x00005967      31f6           xor esi, esi
0x00005969      4c89e7         mov rdi, r12
0x0000596c      89442408       mov dword [rsp + 8], eax
0x00005970      e8fbbfffff     call sym.imp.strtof
0x00005975      0f2e44240c     ucomiss xmm0, dword [rsp + 0xc]
0x0000597a      7aac           jp 0x5928
0x0000597c      8b442408       mov eax, dword [rsp + 8]
0x00005980      75a6           jne 0x5928
0x00005982      488b742428     mov rsi, qword [rsp + 0x28]
0x00005987      644833342528.  xor rsi, qword fs:[0x28]
0x00005990      7525           jne 0x59b7
0x00005992      4883c438       add rsp, 0x38
0x00005996      5b             pop rbx
0x00005997      5d             pop rbp
0x00005998      415c           pop r12
0x0000599a      415d           pop r13
0x0000599c      415e           pop r14
0x0000599e      415f           pop r15
0x000059a0      c3             ret
0x000059a1      0f1f80000000.  nop dword [rax]
0x000059a8      0f28c3         movaps xmm0, xmm3
0x000059ab      0f57055e6e00.  xorps xmm0, xmmword [0x0000c810]
0x000059b2      e9e9feffff     jmp 0x58a0
0x000059b7      e824bfffff     call sym.imp.__stack_chk_fail
0x000059bc      0f1f4000       nop dword [rax]
;-- ldtoastr:
0x000059c0      4157           push r15
0x000059c2      4156           push r14
0x000059c4      d9ee           fldz
0x000059c6      4155           push r13
0x000059c8      4154           push r12
0x000059ca      4189ce         mov r14d, ecx
0x000059cd      55             push rbp
0x000059ce      53             push rbx
0x000059cf      4989fc         mov r12, rdi
0x000059d2      4889f5         mov rbp, rsi
0x000059d5      4883ec38       sub rsp, 0x38
0x000059d9      db6c2470       fld xword [rsp + 0x70]
0x000059dd      d9c9           fxch st(1)
0x000059df      64488b042528.  mov rax, qword fs:[0x28]
0x000059e8      4889442428     mov qword [rsp + 0x28], rax
0x000059ed      31c0           xor eax, eax
0x000059ef      dfe9           fucomip st(1)
0x000059f1      0f8709010000   ja 0x5b00
0x000059f7      ddd8           fstp st(0)
0x000059f9      db6c2470       fld xword [rsp + 0x70]
0x000059fd      b8252d0000     mov eax, 0x2d25                         ; '%-'
0x00005a02      4c8d6c241d     lea r13, [rsp + 0x1d]
0x00005a07      89d1           mov ecx, edx
0x00005a09      668944241d     mov word [rsp + 0x1d], ax
0x00005a0e      89d0           mov eax, edx
0x00005a10      d1e9           shr ecx, 1
0x00005a12      83e001         and eax, 1
0x00005a15      83e101         and ecx, 1
0x00005a18      bb01000000     mov ebx, 1
0x00005a1d      498d7c0501     lea rdi, [r13 + rax + 1]
0x00005a22      89d0           mov eax, edx
0x00005a24      49c7c7ffffff.  mov r15, 0xffffffffffffffff
0x00005a2b      c1e802         shr eax, 2
0x00005a2e      488d340f       lea rsi, [rdi + rcx]
0x00005a32      83e001         and eax, 1
0x00005a35      c6072b         mov byte [rdi], 0x2b                    ; '+'
                                                                       ; [0x2b:1]=0
0x00005a38      488d0c06       lea rcx, [rsi + rax]
0x00005a3c      89d0           mov eax, edx
0x00005a3e      83e210         and edx, 0x10
0x00005a41      db2de96d0000   fld xword [0x0000c830]
0x00005a47      c1e803         shr eax, 3
0x00005a4a      c60620         mov byte [rsi], 0x20                    ; [0x20:1]=64 ; "@"
0x00005a4d      c60130         mov byte [rcx], 0x30                    ; '0'
                                                                       ; [0x30:1]=0
0x00005a50      83e001         and eax, 1
0x00005a53      4801c8         add rax, rcx
0x00005a56      83fa01         cmp edx, 1
0x00005a59      19d2           sbb edx, edx
0x00005a5b      c7002a2e2a4c   mov dword [rax], 0x4c2a2e2a             ; '*.*L'
                                                                       ; [0x4c2a2e2a:4]=-1
0x00005a61      c6400500       mov byte [rax + 5], 0
0x00005a65      83e220         and edx, 0x20                           ; "@"
0x00005a68      83c247         add edx, 0x47
0x00005a6b      885004         mov byte [rax + 4], dl
0x00005a6e      b812000000     mov eax, 0x12
0x00005a73      dfe9           fucomip st(1)
0x00005a75      ddd8           fstp st(0)
0x00005a77      0f46d8         cmovbe ebx, eax
0x00005a7a      eb07           jmp 0x5a83
0x00005a7c      0f1f4000       nop dword [rax]
0x00005a80      83c301         add ebx, 1
0x00005a83      ff742478       push qword [rsp + 0x78]
0x00005a87      ff742478       push qword [rsp + 0x78]
0x00005a8b      31c0           xor eax, eax
0x00005a8d      4589f1         mov r9d, r14d
0x00005a90      4d89e8         mov r8, r13
0x00005a93      4c89f9         mov rcx, r15
0x00005a96      4883ec08       sub rsp, 8
0x00005a9a      ba01000000     mov edx, 1
0x00005a9f      4889ee         mov rsi, rbp
0x00005aa2      53             push rbx
0x00005aa3      4c89e7         mov rdi, r12
0x00005aa6      e815bdffff     call sym.imp.__snprintf_chk
0x00005aab      4883c420       add rsp, 0x20
0x00005aaf      85c0           test eax, eax
0x00005ab1      782d           js 0x5ae0
0x00005ab3      83fb14         cmp ebx, 0x14
0x00005ab6      7f28           jg 0x5ae0
0x00005ab8      4863d0         movsxd rdx, eax
0x00005abb      4839ea         cmp rdx, rbp
0x00005abe      73c0           jae 0x5a80
0x00005ac0      31f6           xor esi, esi
0x00005ac2      4c89e7         mov rdi, r12
0x00005ac5      8944240c       mov dword [rsp + 0xc], eax
0x00005ac9      e8c2bfffff     call sym.imp.strtold
0x00005ace      db6c2470       fld xword [rsp + 0x70]
0x00005ad2      d9c9           fxch st(1)
0x00005ad4      dfe9           fucomip st(1)
0x00005ad6      ddd8           fstp st(0)
0x00005ad8      7aa6           jp 0x5a80
0x00005ada      8b44240c       mov eax, dword [rsp + 0xc]
0x00005ade      75a0           jne 0x5a80
0x00005ae0      488b742428     mov rsi, qword [rsp + 0x28]
0x00005ae5      644833342528.  xor rsi, qword fs:[0x28]
0x00005aee      7517           jne 0x5b07
0x00005af0      4883c438       add rsp, 0x38
0x00005af4      5b             pop rbx
0x00005af5      5d             pop rbp
0x00005af6      415c           pop r12
0x00005af8      415d           pop r13
0x00005afa      415e           pop r14
0x00005afc      415f           pop r15
0x00005afe      c3             ret
0x00005aff      90             nop
0x00005b00      d9e0           fchs
0x00005b02      e9f6feffff     jmp 0x59fd
0x00005b07      e8d4bdffff     call sym.imp.__stack_chk_fail
0x00005b0c      0f1f4000       nop dword [rax]
;-- set_program_name:
0x00005b10      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00005b13      53             push rbx
0x00005b14      7477           je 0x5b8d                               ; ../coreutils-8.31/lib/progname.c:51
0x00005b16      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x00005b1b      4889fb         mov rbx, rdi
0x00005b1e      e80dbeffff     call sym.imp.strrchr
0x00005b23      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00005b26      7455           je 0x5b7d
0x00005b28      4c8d4001       lea r8, [rax + 1]
0x00005b2c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x00005b2f      4829da         sub rdx, rbx
0x00005b32      4883fa06       cmp rdx, 6
0x00005b36      7e45           jle 0x5b7d
0x00005b38      488d70fa       lea rsi, [rax - 6]
0x00005b3c      488d3d356d00.  lea rdi, str..libs                      ; 0xc878 ; "/.libs/"
0x00005b43      b907000000     mov ecx, 7
0x00005b48      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005b4a      0f97c2         seta dl
0x00005b4d      80da00         sbb dl, 0
0x00005b50      84d2           test dl, dl
0x00005b52      7529           jne 0x5b7d
0x00005b54      488d3d256d00.  lea rdi, [0x0000c880]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x00005b5b      b903000000     mov ecx, 3
0x00005b60      4c89c6         mov rsi, r8
0x00005b63      4c89c3         mov rbx, r8
0x00005b66      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005b68      0f97c2         seta dl
0x00005b6b      80da00         sbb dl, 0
0x00005b6e      84d2           test dl, dl
0x00005b70      750b           jne 0x5b7d
0x00005b72      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00005b76      48891d23a520.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x2100a0:8]=0
0x00005b7d      48891db4a620.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x210238:8]=0
0x00005b84      48891d3da520.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x2100c8:8]=0
0x00005b8b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x00005b8c      c3             ret
0x00005b8d      488b0d4ca520.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2100e0:8]=0
0x00005b94      488d3da56c00.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0xc840 ; "A NULL argv[0] was passed through an exec system call.\n"
0x00005b9b      ba37000000     mov edx, 0x37                           ; '7'
0x00005ba0      be01000000     mov esi, 1
0x00005ba5      e856bfffff     call sym.imp.fwrite
0x00005baa      e831bcffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x00005baf      90             nop
;-- gettext_quote.part.1:
0x00005bb0      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00005bb1      53             push rbx
0x00005bb2      4889fd         mov rbp, rdi
0x00005bb5      89f3           mov ebx, esi
0x00005bb7      4883ec08       sub rsp, 8
0x00005bbb      e8f02f0000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00005bc0      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00005bc3      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00005bc6      80fa55         cmp dl, 0x55
0x00005bc9      7475           je 0x5c40
0x00005bcb      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x00005bce      7420           je 0x5bf0
0x00005bd0      488d05bc6c00.  lea rax, str.l______l                   ; 0xc893 ; u"\"`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00005bd7      488d153b7500.  lea rdx, [0x0000d119]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; "'"
0x00005bde      83fb09         cmp ebx, 9
0x00005be1      480f45c2       cmovne rax, rdx
0x00005be5      4883c408       add rsp, 8
0x00005be9      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x00005bea      5d             pop rbp
0x00005beb      c3             ret
0x00005bec      0f1f4000       nop dword [rax]
0x00005bf0      0fb65001       movzx edx, byte [rax + 1]
0x00005bf4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00005bf7      80fa42         cmp dl, 0x42
0x00005bfa      75d4           jne 0x5bd0
0x00005bfc      80780231       cmp byte [rax + 2], 0x31
0x00005c00      75ce           jne 0x5bd0
0x00005c02      80780338       cmp byte [rax + 3], 0x38
0x00005c06      75c8           jne 0x5bd0
0x00005c08      80780430       cmp byte [rax + 4], 0x30
0x00005c0c      75c2           jne 0x5bd0
0x00005c0e      80780533       cmp byte [rax + 5], 0x33
0x00005c12      75bc           jne 0x5bd0
0x00005c14      80780630       cmp byte [rax + 6], 0x30
0x00005c18      75b6           jne 0x5bd0
0x00005c1a      80780700       cmp byte [rax + 7], 0
0x00005c1e      75b0           jne 0x5bd0
0x00005c20      807d0060       cmp byte [rbp], 0x60
0x00005c24      488d05616c00.  lea rax, [0x0000c88c]
0x00005c2b      488d155e6c00.  lea rdx, [0x0000c890]
0x00005c32      480f45c2       cmovne rax, rdx
0x00005c36      4883c408       add rsp, 8
0x00005c3a      5b             pop rbx
0x00005c3b      5d             pop rbp
0x00005c3c      c3             ret
0x00005c3d      0f1f00         nop dword [rax]
0x00005c40      0fb65001       movzx edx, byte [rax + 1]
0x00005c44      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00005c47      80fa54         cmp dl, 0x54
0x00005c4a      7584           jne 0x5bd0
0x00005c4c      0fb65002       movzx edx, byte [rax + 2]
0x00005c50      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00005c53      80fa46         cmp dl, 0x46
0x00005c56      0f8574ffffff   jne 0x5bd0
0x00005c5c      8078032d       cmp byte [rax + 3], 0x2d
0x00005c60      0f856affffff   jne 0x5bd0
0x00005c66      80780438       cmp byte [rax + 4], 0x38
0x00005c6a      0f8560ffffff   jne 0x5bd0
0x00005c70      80780500       cmp byte [rax + 5], 0
0x00005c74      0f8556ffffff   jne 0x5bd0
0x00005c7a      807d0060       cmp byte [rbp], 0x60
0x00005c7e      488d05ff6b00.  lea rax, [0x0000c884]                   ; "\u2018"
0x00005c85      488d15fc6b00.  lea rdx, [0x0000c888]                   ; "\u2019"
0x00005c8c      480f45c2       cmovne rax, rdx
0x00005c90      4883c408       add rsp, 8
0x00005c94      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00005c95      5d             pop rbp
0x00005c96      c3             ret
0x00005c97      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00005ca0      4157           push r15
0x00005ca2      4156           push r14
0x00005ca4      4589c7         mov r15d, r8d
0x00005ca7      4155           push r13
0x00005ca9      4154           push r12
0x00005cab      4989fe         mov r14, rdi
0x00005cae      55             push rbp
0x00005caf      53             push rbx
0x00005cb0      4489cb         mov ebx, r9d
0x00005cb3      4989f5         mov r13, rsi
0x00005cb6      4889cd         mov rbp, rcx
0x00005cb9      83e302         and ebx, 2
0x00005cbc      4881ecb80000.  sub rsp, 0xb8
0x00005cc3      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x00005ccb      4889542410     mov qword [rsp + 0x10], rdx
0x00005cd0      4489442408     mov dword [rsp + 8], r8d
0x00005cd5      44894c2478     mov dword [rsp + 0x78], r9d
0x00005cda      4889442420     mov qword [rsp + 0x20], rax
0x00005cdf      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00005ce7      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x00005cec      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00005cf4      4889442460     mov qword [rsp + 0x60], rax
0x00005cf9      64488b042528.  mov rax, qword fs:[0x28]
0x00005d02      48898424a800.  mov qword [rsp + 0xa8], rax
0x00005d0a      31c0           xor eax, eax
0x00005d0c      e8afbbffff     call sym.imp.__ctype_get_mb_cur_max
0x00005d11      4183ff0a       cmp r15d, 0xa
0x00005d15      4889442458     mov qword [rsp + 0x58], rax
0x00005d1a      0f87af110000   ja 0x6ecf
0x00005d20      488d0dd96b00.  lea rcx, [0x0000c900]
0x00005d27      4489fa         mov edx, r15d
0x00005d2a      48630491       movsxd rax, dword [rcx + rdx*4]
0x00005d2e      4801c8         add rax, rcx
0x00005d31      ffe0           jmp rax
0x00005d33      c644240e01     mov byte [rsp + 0xe], 1
0x00005d38      c644247c00     mov byte [rsp + 0x7c], 0
0x00005d3d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00005d40      48c744245000.  mov qword [rsp + 0x50], 0
0x00005d49      c644240f01     mov byte [rsp + 0xf], 1
0x00005d4e      c644240d00     mov byte [rsp + 0xd], 0
0x00005d53      488d05bf7300.  lea rax, [0x0000d119]                   ; "'"
0x00005d5a      48c744241801.  mov qword [rsp + 0x18], 1
0x00005d63      4531ff         xor r15d, r15d
0x00005d66      c74424080200.  mov dword [rsp + 8], 2
0x00005d6e      4889442448     mov qword [rsp + 0x48], rax
0x00005d73      4531db         xor r11d, r11d
0x00005d76      4889e8         mov rax, rbp
0x00005d79      4589e0         mov r8d, r12d
0x00005d7c      4c89dd         mov rbp, r11
0x00005d7f      4989c3         mov r11, rax
0x00005d82      660f1f440000   nop word [rax + rax]
0x00005d88      4939eb         cmp r11, rbp
0x00005d8b      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x00005d8f      4983fbff       cmp r11, 0xffffffffffffffff
0x00005d93      750d           jne 0x5da2
0x00005d95      488b442410     mov rax, qword [rsp + 0x10]
0x00005d9a      803c2800       cmp byte [rax + rbp], 0
0x00005d9e      410f95c4       setne r12b
0x00005da2      4584e4         test r12b, r12b
0x00005da5      0f8455060000   je 0x6400
0x00005dab      837c240802     cmp dword [rsp + 8], 2
0x00005db0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00005db5      4c8d0c2f       lea r9, [rdi + rbp]
0x00005db9      0f95c0         setne al
0x00005dbc      2244240d       and al, byte [rsp + 0xd]
0x00005dc0      4189c2         mov r10d, eax
0x00005dc3      0f84a7000000   je 0x5e70
0x00005dc9      488b442418     mov rax, qword [rsp + 0x18]
0x00005dce      4885c0         test rax, rax
0x00005dd1      0f8429040000   je 0x6200
0x00005dd7      4983fbff       cmp r11, 0xffffffffffffffff
0x00005ddb      488d5c0500     lea rbx, [rbp + rax]
0x00005de0      752e           jne 0x5e10
0x00005de2      4883f801       cmp rax, 1
0x00005de6      7628           jbe 0x5e10
0x00005de8      4488442438     mov byte [rsp + 0x38], r8b
0x00005ded      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00005df2      4c894c2428     mov qword [rsp + 0x28], r9
0x00005df7      e8d4baffff     call sym.imp.strlen
0x00005dfc      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00005e02      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00005e08      4989c3         mov r11, rax
0x00005e0b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00005e10      4c39db         cmp rbx, r11
0x00005e13      4488542428     mov byte [rsp + 0x28], r10b
0x00005e18      0f87b2050000   ja 0x63d0
0x00005e1e      488b542418     mov rdx, qword [rsp + 0x18]
0x00005e23      488b742448     mov rsi, qword [rsp + 0x48]
0x00005e28      4c89cf         mov rdi, r9
0x00005e2b      4c895c2440     mov qword [rsp + 0x40], r11
0x00005e30      4488442438     mov byte [rsp + 0x38], r8b
0x00005e35      4c894c2430     mov qword [rsp + 0x30], r9
0x00005e3a      e861bbffff     call sym.imp.memcmp
0x00005e3f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00005e41      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00005e46      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00005e4c      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00005e51      0f8579050000   jne 0x63d0
0x00005e57      807c240f00     cmp byte [rsp + 0xf], 0
0x00005e5c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00005e62      0f857d0f0000   jne 0x6de5
0x00005e68      0f1f84000000.  nop dword [rax + rax]
0x00005e70      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00005e74      80fb7e         cmp bl, 0x7e
0x00005e77      0f871b030000   ja 0x6198
0x00005e7d      488d0da86a00.  lea rcx, [0x0000c92c]
0x00005e84      0fb6d3         movzx edx, bl
0x00005e87      48630491       movsxd rax, dword [rcx + rdx*4]
0x00005e8b      4801c8         add rax, rcx
0x00005e8e      ffe0           jmp rax
0x00005e90      4531d2         xor r10d, r10d
0x00005e93      4983fb01       cmp r11, 1
0x00005e97      0f95c0         setne al
0x00005e9a      4983fbff       cmp r11, 0xffffffffffffffff
0x00005e9e      750c           jne 0x5eac
0x00005ea0      488b442410     mov rax, qword [rsp + 0x10]
0x00005ea5      80780100       cmp byte [rax + 1], 0
0x00005ea9      0f95c0         setne al
0x00005eac      837c240802     cmp dword [rsp + 8], 2
0x00005eb1      0f94c2         sete dl
0x00005eb4      84c0           test al, al
0x00005eb6      0f844c020000   je 0x6108
0x00005ebc      4531e4         xor r12d, r12d
0x00005ebf      31c0           xor eax, eax
0x00005ec1      0f1f80000000.  nop dword [rax]
0x00005ec8      807c240d01     cmp byte [rsp + 0xd], 1
0x00005ecd      0f850f010000   jne 0x5fe2
0x00005ed3      84d2           test dl, dl
0x00005ed5      0f8507010000   jne 0x5fe2
0x00005edb      488b742420     mov rsi, qword [rsp + 0x20]
0x00005ee0      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00005ee3      7414           je 0x5ef9
0x00005ee5      89da           mov edx, ebx
0x00005ee7      c0ea05         shr dl, 5
0x00005eea      0fb6d2         movzx edx, dl
0x00005eed      8b1496         mov edx, dword [rsi + rdx*4]
0x00005ef0      0fa3da         bt edx, ebx
0x00005ef3      0f824a010000   jb 0x6043
0x00005ef9      4584d2         test r10b, r10b
0x00005efc      0f8541010000   jne 0x6043
0x00005f02      83f001         xor eax, 1
0x00005f05      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00005f09      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x00005f0c      84c0           test al, al
0x00005f0e      7420           je 0x5f30                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00005f10      4d39fd         cmp r13, r15
0x00005f13      7605           jbe 0x5f1a
0x00005f15      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00005f1a      498d4701       lea rax, [r15 + 1]
0x00005f1e      4939c5         cmp r13, rax
0x00005f21      7606           jbe 0x5f29
0x00005f23      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00005f29      4983c702       add r15, 2
0x00005f2d      4531c0         xor r8d, r8d
0x00005f30      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00005f33      7304           jae 0x5f39                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00005f35      43881c3e       mov byte [r14 + r15], bl
0x00005f39      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x00005f3e      4983c701       add r15, 1
0x00005f42      b800000000     mov eax, 0
0x00005f47      4584e4         test r12b, r12b
0x00005f4a      0f44f8         cmove edi, eax
0x00005f4d      40887c240e     mov byte [rsp + 0xe], dil
0x00005f52      e931feffff     jmp 0x5d88
0x00005f57      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00005f60      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00005f63      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00005f67      83f802         cmp eax, 2
0x00005f6a      0f84b8050000   je 0x6528
0x00005f70      83f805         cmp eax, 5
0x00005f73      0f846f050000   je 0x64e8
0x00005f79      83f802         cmp eax, 2
0x00005f7c      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00005f81      0f94c2         sete dl
0x00005f84      4531e4         xor r12d, r12d
0x00005f87      31c0           xor eax, eax
0x00005f89      e93affffff     jmp 0x5ec8
0x00005f8e      6690           nop
0x00005f90      4531d2         xor r10d, r10d
0x00005f93      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00005f98      0f8402050000   je 0x64a0
0x00005f9e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00005fa3      31d2           xor edx, edx
0x00005fa5      31c0           xor eax, eax
0x00005fa7      bb27000000     mov ebx, 0x27                           ; '''
0x00005fac      e917ffffff     jmp 0x5ec8
0x00005fb1      0f1f80000000.  nop dword [rax]
0x00005fb8      ba09000000     mov edx, 9
0x00005fbd      bb74000000     mov ebx, 0x74                           ; 't'
0x00005fc2      837c240802     cmp dword [rsp + 8], 2
0x00005fc7      0f94c0         sete al
0x00005fca      2244240f       and al, byte [rsp + 0xf]
0x00005fce      0f854a010000   jne 0x611e
0x00005fd4      807c240d00     cmp byte [rsp + 0xd], 0
0x00005fd9      7565           jne 0x6040
0x00005fdb      89d3           mov ebx, edx
0x00005fdd      4531e4         xor r12d, r12d
0x00005fe0      31c0           xor eax, eax
0x00005fe2      807c240f00     cmp byte [rsp + 0xf], 0
0x00005fe7      0f85eefeffff   jne 0x5edb
0x00005fed      e907ffffff     jmp 0x5ef9                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00005ff2      660f1f440000   nop word [rax + rax]
0x00005ff8      ba08000000     mov edx, 8
0x00005ffd      bb62000000     mov ebx, 0x62                           ; 'b'
0x00006002      ebd0           jmp 0x5fd4
0x00006004      0f1f4000       nop dword [rax]
0x00006008      837c240802     cmp dword [rsp + 8], 2
0x0000600d      0f84cd030000   je 0x63e0
0x00006013      807c240d00     cmp byte [rsp + 0xd], 0
0x00006018      0f8412020000   je 0x6230
0x0000601e      807c240f00     cmp byte [rsp + 0xf], 0
0x00006023      0f8407020000   je 0x6230
0x00006029      48837c241800   cmp qword [rsp + 0x18], 0
0x0000602f      0f85b6030000   jne 0x63eb
0x00006035      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000603a      660f1f440000   nop word [rax + rax]
0x00006040      4531e4         xor r12d, r12d
0x00006043      837c240802     cmp dword [rsp + 8], 2
0x00006048      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x0000604b      807c240f00     cmp byte [rsp + 0xf], 0
0x00006050      89d0           mov eax, edx
0x00006052      0f8550080000   jne 0x68a8
0x00006058      4489c0         mov eax, r8d
0x0000605b      83f001         xor eax, 1
0x0000605e      20d0           and al, dl
0x00006060      742f           je 0x6091
0x00006062      4d39fd         cmp r13, r15
0x00006065      7605           jbe 0x606c
0x00006067      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000606c      498d5701       lea rdx, [r15 + 1]
0x00006070      4939d5         cmp r13, rdx
0x00006073      7606           jbe 0x607b
0x00006075      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000607b      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x0000607f      4939d5         cmp r13, rdx
0x00006082      7606           jbe 0x608a
0x00006084      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000608a      4983c703       add r15, 3
0x0000608e      4189c0         mov r8d, eax
0x00006091      4d39fd         cmp r13, r15
0x00006094      7605           jbe 0x609b
0x00006096      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000609b      4983c701       add r15, 1
0x0000609f      4883c501       add rbp, 1
0x000060a3      e988feffff     jmp 0x5f30
0x000060a8      0f1f84000000.  nop dword [rax + rax]
0x000060b0      807c240d00     cmp byte [rsp + 0xd], 0
0x000060b5      0f85c8010000   jne 0x6283
0x000060bb      31d2           xor edx, edx
0x000060bd      f644247801     test byte [rsp + 0x78], 1
0x000060c2      0f8413ffffff   je 0x5fdb
0x000060c8      4883c501       add rbp, 1
0x000060cc      e9b7fcffff     jmp 0x5d88
0x000060d1      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x000060d8      837c240802     cmp dword [rsp + 8], 2
0x000060dd      0f94c2         sete dl
0x000060e0      31c0           xor eax, eax
0x000060e2      e9e1fdffff     jmp 0x5ec8
0x000060e7      660f1f840000.  nop word [rax + rax]
0x000060f0      ba07000000     mov edx, 7
0x000060f5      bb61000000     mov ebx, 0x61                           ; 'a'
0x000060fa      e9d5feffff     jmp 0x5fd4
0x000060ff      90             nop
0x00006100      837c240802     cmp dword [rsp + 8], 2
0x00006105      0f94c2         sete dl
0x00006108      4885ed         test rbp, rbp
0x0000610b      0f85abfdffff   jne 0x5ebc
0x00006111      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00006116      20d0           and al, dl
0x00006118      0f84aafdffff   je 0x5ec8
0x0000611e      4c89dd         mov rbp, r11
0x00006121      c74424080200.  mov dword [rsp + 8], 2
0x00006129      e9fb060000     jmp 0x6829
0x0000612e      6690           nop
0x00006130      837c240802     cmp dword [rsp + 8], 2
0x00006135      0f94c2         sete dl
0x00006138      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x0000613b      ebd4           jmp 0x6111
0x0000613d      0f1f00         nop dword [rax]
0x00006140      837c240802     cmp dword [rsp + 8], 2
0x00006145      bb20000000     mov ebx, 0x20                           ; "@"
0x0000614a      0f94c2         sete dl
0x0000614d      ebc2           jmp 0x6111
0x0000614f      90             nop
0x00006150      ba0d000000     mov edx, 0xd
0x00006155      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000615a      e963feffff     jmp 0x5fc2
0x0000615f      90             nop
0x00006160      ba0c000000     mov edx, 0xc
0x00006165      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000616a      e965feffff     jmp 0x5fd4
0x0000616f      90             nop
0x00006170      ba0b000000     mov edx, 0xb
0x00006175      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000617a      e955feffff     jmp 0x5fd4
0x0000617f      90             nop
0x00006180      ba0a000000     mov edx, 0xa
0x00006185      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x0000618a      e933feffff     jmp 0x5fc2
0x0000618f      90             nop
0x00006190      4531d2         xor r10d, r10d
0x00006193      0f1f440000     nop dword [rax + rax]
0x00006198      48837c245801   cmp qword [rsp + 0x58], 1
0x0000619e      0f85a4030000   jne 0x6548
0x000061a4      4c895c2438     mov qword [rsp + 0x38], r11
0x000061a9      4488442430     mov byte [rsp + 0x30], r8b
0x000061ae      4488542428     mov byte [rsp + 0x28], r10b
0x000061b3      e888b9ffff     call sym.imp.__ctype_b_loc
0x000061b8      488b08         mov rcx, qword [rax]
0x000061bb      0fb6d3         movzx edx, bl
0x000061be      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x000061c4      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x000061ca      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x000061cf      bf01000000     mov edi, 1
0x000061d4      0fb70451       movzx eax, word [rcx + rdx*2]
0x000061d8      66250040       and ax, 0x4000
0x000061dc      410f95c4       setne r12b
0x000061e0      0f94c0         sete al
0x000061e3      2244240d       and al, byte [rsp + 0xd]
0x000061e7      84c0           test al, al
0x000061e9      0f8592090000   jne 0x6b81
0x000061ef      837c240802     cmp dword [rsp + 8], 2
0x000061f4      0f94c2         sete dl
0x000061f7      e9ccfcffff     jmp 0x5ec8
0x000061fc      0f1f4000       nop dword [rax]
0x00006200      410fb619       movzx ebx, byte [r9]
0x00006204      80fb7e         cmp bl, 0x7e
0x00006207      7787           ja 0x6190
0x00006209      488d0d186900.  lea rcx, [0x0000cb28]
0x00006210      0fb6d3         movzx edx, bl
0x00006213      48630491       movsxd rax, dword [rcx + rdx*4]
0x00006217      4801c8         add rax, rcx
0x0000621a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x0000621c      0f1f4000       nop dword [rax]
0x00006220      4531d2         xor r10d, r10d
0x00006223      807c240d00     cmp byte [rsp + 0xd], 0
0x00006228      0f85f0fdffff   jne 0x601e
0x0000622e      6690           nop
0x00006230      ba5c000000     mov edx, 0x5c                           ; '\'
0x00006235      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000623a      e995fdffff     jmp 0x5fd4
0x0000623f      90             nop
0x00006240      ba0c000000     mov edx, 0xc
0x00006245      4531d2         xor r10d, r10d
0x00006248      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000624d      e982fdffff     jmp 0x5fd4
0x00006252      660f1f440000   nop word [rax + rax]
0x00006258      ba0a000000     mov edx, 0xa
0x0000625d      4531d2         xor r10d, r10d
0x00006260      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00006265      e958fdffff     jmp 0x5fc2
0x0000626a      660f1f440000   nop word [rax + rax]
0x00006270      bb61000000     mov ebx, 0x61                           ; 'a'
0x00006275      e9c6fdffff     jmp 0x6040
0x0000627a      660f1f440000   nop word [rax + rax]
0x00006280      4531d2         xor r10d, r10d
0x00006283      837c240802     cmp dword [rsp + 8], 2
0x00006288      0f94c2         sete dl
0x0000628b      807c240f00     cmp byte [rsp + 0xf], 0
0x00006290      0f85940b0000   jne 0x6e2a
0x00006296      4489c0         mov eax, r8d
0x00006299      4c89f9         mov rcx, r15
0x0000629c      83f001         xor eax, 1
0x0000629f      20d0           and al, dl
0x000062a1      742d           je 0x62d0
0x000062a3      4d39fd         cmp r13, r15
0x000062a6      7605           jbe 0x62ad
0x000062a8      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000062ad      498d4f01       lea rcx, [r15 + 1]
0x000062b1      4939cd         cmp r13, rcx
0x000062b4      7606           jbe 0x62bc
0x000062b6      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000062bc      498d4f02       lea rcx, [r15 + 2]
0x000062c0      4939cd         cmp r13, rcx
0x000062c3      0f8730060000   ja 0x68f9
0x000062c9      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x000062cd      4189c0         mov r8d, eax
0x000062d0      4939cd         cmp r13, rcx
0x000062d3      7605           jbe 0x62da
0x000062d5      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000062da      837c240802     cmp dword [rsp + 8], 2
0x000062df      4c8d7901       lea r15, [rcx + 1]
0x000062e3      0f8400060000   je 0x68e9
0x000062e9      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x000062ed      4c39d8         cmp rax, r11
0x000062f0      7319           jae 0x630b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x000062f2      488b442410     mov rax, qword [rsp + 0x10]
0x000062f7      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x000062fc      88442428       mov byte [rsp + 0x28], al
0x00006300      83e830         sub eax, 0x30
0x00006303      3c09           cmp al, 9
0x00006305      0f862e080000   jbe 0x6b39
0x0000630b      4489e0         mov eax, r12d
0x0000630e      bb30000000     mov ebx, 0x30                           ; '0'
0x00006313      4531e4         xor r12d, r12d
0x00006316      e9adfbffff     jmp 0x5ec8                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x0000631b      0f1f440000     nop dword [rax + rax]
0x00006320      837c240802     cmp dword [rsp + 8], 2
0x00006325      4589d4         mov r12d, r10d
0x00006328      0f94c2         sete dl
0x0000632b      4531d2         xor r10d, r10d
0x0000632e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00006330      e993fbffff     jmp 0x5ec8                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00006335      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00006338      837c240802     cmp dword [rsp + 8], 2
0x0000633d      0f94c2         sete dl
0x00006340      4531d2         xor r10d, r10d
0x00006343      e9c0fdffff     jmp 0x6108
0x00006348      0f1f84000000.  nop dword [rax + rax]
0x00006350      837c240802     cmp dword [rsp + 8], 2
0x00006355      0f94c2         sete dl
0x00006358      4531d2         xor r10d, r10d
0x0000635b      4531e4         xor r12d, r12d
0x0000635e      e9aefdffff     jmp 0x6111
0x00006363      0f1f440000     nop dword [rax + rax]
0x00006368      837c240802     cmp dword [rsp + 8], 2
0x0000636d      4589d4         mov r12d, r10d
0x00006370      bb20000000     mov ebx, 0x20                           ; "@"
0x00006375      0f94c2         sete dl
0x00006378      4531d2         xor r10d, r10d
0x0000637b      e991fdffff     jmp 0x6111
0x00006380      ba0d000000     mov edx, 0xd
0x00006385      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00006388      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000638d      e930fcffff     jmp 0x5fc2
0x00006392      660f1f440000   nop word [rax + rax]
0x00006398      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000639d      e99efcffff     jmp 0x6040
0x000063a2      660f1f440000   nop word [rax + rax]
0x000063a8      ba09000000     mov edx, 9
0x000063ad      4531d2         xor r10d, r10d
0x000063b0      bb74000000     mov ebx, 0x74                           ; 't'
0x000063b5      e908fcffff     jmp 0x5fc2
0x000063ba      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x000063c0      bb62000000     mov ebx, 0x62                           ; 'b'
0x000063c5      e976fcffff     jmp 0x6040
0x000063ca      660f1f440000   nop word [rax + rax]
0x000063d0      4531d2         xor r10d, r10d
0x000063d3      e998faffff     jmp 0x5e70
0x000063d8      0f1f84000000.  nop dword [rax + rax]
0x000063e0      807c240f00     cmp byte [rsp + 0xf], 0
0x000063e5      0f8565090000   jne 0x6d50
0x000063eb      4883c501       add rbp, 1
0x000063ef      4489c0         mov eax, r8d
0x000063f2      4531e4         xor r12d, r12d
0x000063f5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000063fa      e90dfbffff     jmp 0x5f0c
0x000063ff      90             nop
0x00006400      837c240802     cmp dword [rsp + 8], 2
0x00006405      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000640a      4589c4         mov r12d, r8d
0x0000640d      4c89dd         mov rbp, r11
0x00006410      0f94c2         sete dl
0x00006413      89d8           mov eax, ebx
0x00006415      4d85ff         test r15, r15
0x00006418      0f94c1         sete cl
0x0000641b      21d0           and eax, edx
0x0000641d      20c8           and al, cl
0x0000641f      0f85610a0000   jne 0x6e86                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00006425      89d8           mov eax, ebx
0x00006427      83f001         xor eax, 1
0x0000642a      20c2           and dl, al
0x0000642c      0f846a090000   je 0x6d9c
0x00006432      807c247c00     cmp byte [rsp + 0x7c], 0
0x00006437      0f845d090000   je 0x6d9a
0x0000643d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00006442      0f85f5090000   jne 0x6e3d
0x00006448      4d85ed         test r13, r13
0x0000644b      0f94c0         sete al
0x0000644e      48837c245000   cmp qword [rsp + 0x50], 0
0x00006454      0f95c2         setne dl
0x00006457      20d0           and al, dl
0x00006459      0f841d0a0000   je 0x6e7c
0x0000645f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00006464      488d1dae6c00.  lea rbx, [0x0000d119]                   ; "'"
0x0000646b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x0000646f      c74424080200.  mov dword [rsp + 8], 2
0x00006477      41bf01000000   mov r15d, 1
0x0000647d      48c744241801.  mov qword [rsp + 0x18], 1
0x00006486      c644240f00     mov byte [rsp + 0xf], 0
0x0000648b      48895c2448     mov qword [rsp + 0x48], rbx
0x00006490      8844247c       mov byte [rsp + 0x7c], al
0x00006494      e9daf8ffff     jmp 0x5d73
0x00006499      0f1f80000000.  nop dword [rax]
0x000064a0      807c240f00     cmp byte [rsp + 0xf], 0
0x000064a5      0f85a5080000   jne 0x6d50
0x000064ab      4d85ed         test r13, r13
0x000064ae      0f84fc030000   je 0x68b0                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x000064b4      31d2           xor edx, edx
0x000064b6      48837c245000   cmp qword [rsp + 0x50], 0
0x000064bc      0f85ee030000   jne 0x68b0                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x000064c2      4c896c2450     mov qword [rsp + 0x50], r13
0x000064c7      4983c703       add r15, 3
0x000064cb      31c0           xor eax, eax
0x000064cd      448864247c     mov byte [rsp + 0x7c], r12b
0x000064d2      4531c0         xor r8d, r8d
0x000064d5      4989d5         mov r13, rdx
0x000064d8      bb27000000     mov ebx, 0x27                           ; '''
0x000064dd      e917faffff     jmp 0x5ef9
0x000064e2      660f1f440000   nop word [rax + rax]
0x000064e8      f644247804     test byte [rsp + 0x78], 4
0x000064ed      7421           je 0x6510
0x000064ef      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x000064f3      4c39d9         cmp rcx, r11
0x000064f6      7318           jae 0x6510
0x000064f8      488b442410     mov rax, qword [rsp + 0x10]
0x000064fd      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00006502      0f848a070000   je 0x6c92
0x00006508      0f1f84000000.  nop dword [rax + rax]
0x00006510      31d2           xor edx, edx
0x00006512      4531e4         xor r12d, r12d
0x00006515      31c0           xor eax, eax
0x00006517      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000651c      e9a7f9ffff     jmp 0x5ec8
0x00006521      0f1f80000000.  nop dword [rax]
0x00006528      807c240f00     cmp byte [rsp + 0xf], 0
0x0000652d      0f851d080000   jne 0x6d50
0x00006533      4531e4         xor r12d, r12d
0x00006536      31c0           xor eax, eax
0x00006538      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000653d      e9b7f9ffff     jmp 0x5ef9                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00006542      660f1f440000   nop word [rax + rax]
0x00006548      488d8424a000.  lea rax, [rsp + 0xa0]
0x00006550      4983fbff       cmp r11, 0xffffffffffffffff
0x00006554      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00006560      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00006565      752d           jne 0x6594
0x00006567      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000656c      4488442440     mov byte [rsp + 0x40], r8b
0x00006571      4488542438     mov byte [rsp + 0x38], r10b
0x00006576      4c894c2430     mov qword [rsp + 0x30], r9
0x0000657b      e850b3ffff     call sym.imp.strlen
0x00006580      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00006586      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x0000658c      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x0000658f      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00006594      488d84249c00.  lea rax, [rsp + 0x9c]
0x0000659c      31c9           xor ecx, ecx
0x0000659e      885c247e       mov byte [rsp + 0x7e], bl
0x000065a2      448844247d     mov byte [rsp + 0x7d], r8b
0x000065a7      4889cb         mov rbx, rcx
0x000065aa      4c898c248800.  mov qword [rsp + 0x88], r9
0x000065b2      4889442438     mov qword [rsp + 0x38], rax
0x000065b7      448854247f     mov byte [rsp + 0x7f], r10b
0x000065bc      4c89bc248000.  mov qword [rsp + 0x80], r15
0x000065c4      4c89742440     mov qword [rsp + 0x40], r14
0x000065c9      4c896c2470     mov qword [rsp + 0x70], r13
0x000065ce      4c895c2430     mov qword [rsp + 0x30], r11
0x000065d3      488b442410     mov rax, qword [rsp + 0x10]
0x000065d8      4c8d741d00     lea r14, [rbp + rbx]
0x000065dd      488b542430     mov rdx, qword [rsp + 0x30]
0x000065e2      488b4c2428     mov rcx, qword [rsp + 0x28]
0x000065e7      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000065ec      4e8d2c30       lea r13, [rax + r14]
0x000065f0      4c29f2         sub rdx, r14
0x000065f3      4c89ee         mov rsi, r13
0x000065f6      e825230000     call sym.rpl_mbrtowc
0x000065fb      4885c0         test rax, rax
0x000065fe      4989c7         mov r15, rax
0x00006601      744e           je 0x6651
0x00006603      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006607      0f8418060000   je 0x6c25
0x0000660d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00006611      0f849a050000   je 0x6bb1
0x00006617      837c240802     cmp dword [rsp + 8], 2
0x0000661c      0f94c0         sete al
0x0000661f      2244240f       and al, byte [rsp + 0xf]
0x00006623      0f8597010000   jne 0x67c0
0x00006629      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00006630      e8fbb4ffff     call sym.imp.iswprint
0x00006635      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000663a      85c0           test eax, eax
0x0000663c      b800000000     mov eax, 0
0x00006641      440f44e0       cmove r12d, eax
0x00006645      4c01fb         add rbx, r15
0x00006648      e8d3b4ffff     call sym.imp.mbsinit
0x0000664d      85c0           test eax, eax
0x0000664f      7482           je 0x65d3
0x00006651      4489e2         mov edx, r12d
0x00006654      4889df         mov rdi, rbx
0x00006657      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000665d      83f201         xor edx, 1
0x00006660      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00006665      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000666b      2254240d       and dl, byte [rsp + 0xd]
0x0000666f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00006677      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000667c      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00006681      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00006686      4883ff01       cmp rdi, 1
0x0000668a      0f86fb050000   jbe 0x6c8b
0x00006690      4889f9         mov rcx, rdi
0x00006693      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00006695      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x0000669b      4801e9         add rcx, rbp
0x0000669e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000066a3      e9b6000000     jmp 0x675e
0x000066a8      0f1f84000000.  nop dword [rax + rax]
0x000066b0      837c240802     cmp dword [rsp + 8], 2
0x000066b5      0f94c0         sete al
0x000066b8      4584c9         test r9b, r9b
0x000066bb      0f85af040000   jne 0x6b70
0x000066c1      4489c6         mov esi, r8d
0x000066c4      83f601         xor esi, 1
0x000066c7      4020f0         and al, sil
0x000066ca      742f           je 0x66fb                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x000066cc      4d39fd         cmp r13, r15
0x000066cf      7605           jbe 0x66d6
0x000066d1      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000066d6      498d7701       lea rsi, [r15 + 1]
0x000066da      4939f5         cmp r13, rsi
0x000066dd      7606           jbe 0x66e5                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x000066df      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000066e5      498d7702       lea rsi, [r15 + 2]
0x000066e9      4939f5         cmp r13, rsi
0x000066ec      7606           jbe 0x66f4
0x000066ee      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000066f4      4983c703       add r15, 3
0x000066f8      4189c0         mov r8d, eax
0x000066fb      4d39fd         cmp r13, r15
0x000066fe      7605           jbe 0x6705
0x00006700      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00006705      498d4701       lea rax, [r15 + 1]
0x00006709      4939c5         cmp r13, rax
0x0000670c      760d           jbe 0x671b
0x0000670e      89d8           mov eax, ebx
0x00006710      c0e806         shr al, 6
0x00006713      83c030         add eax, 0x30
0x00006716      4388443e01     mov byte [r14 + r15 + 1], al
0x0000671b      498d4702       lea rax, [r15 + 2]
0x0000671f      4939c5         cmp r13, rax
0x00006722      7610           jbe 0x6734
0x00006724      89d8           mov eax, ebx
0x00006726      c0e803         shr al, 3
0x00006729      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x0000672c      83c030         add eax, 0x30
0x0000672f      4388443e02     mov byte [r14 + r15 + 2], al
0x00006734      83e307         and ebx, 7
0x00006737      4883c501       add rbp, 1
0x0000673b      4983c703       add r15, 3
0x0000673f      83c330         add ebx, 0x30
0x00006742      4839cd         cmp rbp, rcx
0x00006745      0f83e5f7ffff   jae 0x5f30
0x0000674b      89d6           mov esi, edx
0x0000674d      4d39fd         cmp r13, r15
0x00006750      7604           jbe 0x6756
0x00006752      43881c3e       mov byte [r14 + r15], bl
0x00006756      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000675a      4983c701       add r15, 1
0x0000675e      84d2           test dl, dl
0x00006760      0f854affffff   jne 0x66b0
0x00006766      89f0           mov eax, esi
0x00006768      83f001         xor eax, 1
0x0000676b      4421c0         and eax, r8d
0x0000676e      4584d2         test r10b, r10b
0x00006771      740e           je 0x6781
0x00006773      4d39fd         cmp r13, r15
0x00006776      7605           jbe 0x677d
0x00006778      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000677d      4983c701       add r15, 1
0x00006781      4883c501       add rbp, 1
0x00006785      4839cd         cmp rbp, rcx
0x00006788      0f837ef7ffff   jae 0x5f0c
0x0000678e      84c0           test al, al
0x00006790      0f84f8030000   je 0x6b8e
0x00006796      4d39fd         cmp r13, r15
0x00006799      7605           jbe 0x67a0
0x0000679b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000067a0      498d4701       lea rax, [r15 + 1]
0x000067a4      4939c5         cmp r13, rax
0x000067a7      7606           jbe 0x67af
0x000067a9      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000067af      4983c702       add r15, 2
0x000067b3      4531d2         xor r10d, r10d
0x000067b6      4531c0         xor r8d, r8d
0x000067b9      eb92           jmp 0x674d
0x000067bb      0f1f440000     nop dword [rax + rax]
0x000067c0      4983ff01       cmp r15, 1
0x000067c4      0f845ffeffff   je 0x6629
0x000067ca      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000067cf      4a8d0c3f       lea rcx, [rdi + r15]
0x000067d3      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x000067d8      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x000067dc      eb0f           jmp 0x67ed
0x000067de      6690           nop
0x000067e0      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x000067e4      4939d0         cmp r8, rdx
0x000067e7      0f843cfeffff   je 0x6629
0x000067ed      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x000067f0      83e95b         sub ecx, 0x5b
0x000067f3      80f921         cmp cl, 0x21
0x000067f6      77e8           ja 0x67e0                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x000067f8      be01000000     mov esi, 1
0x000067fd      48d3e6         shl rsi, cl
0x00006800      4889f1         mov rcx, rsi
0x00006803      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x0000680d      4885f1         test rcx, rsi
0x00006810      74ce           je 0x67e0
0x00006812      4c8b742440     mov r14, qword [rsp + 0x40]
0x00006817      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000681c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00006821      c74424080200.  mov dword [rsp + 8], 2
0x00006829      807c240d00     cmp byte [rsp + 0xd], 0
0x0000682e      7410           je 0x6840
0x00006830      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00006832      b804000000     mov eax, 4
0x00006837      0f44442408     cmove eax, dword [rsp + 8]
0x0000683c      89442408       mov dword [rsp + 8], eax
0x00006840      4883ec08       sub rsp, 8
0x00006844      4889e9         mov rcx, rbp
0x00006847      4c89ee         mov rsi, r13
0x0000684a      ff742468       push qword [rsp + 0x68]
0x0000684e      ff742478       push qword [rsp + 0x78]
0x00006852      4c89f7         mov rdi, r14
0x00006855      6a00           push 0
0x00006857      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x0000685f      448b442428     mov r8d, dword [rsp + 0x28]
0x00006864      488b542430     mov rdx, qword [rsp + 0x30]
0x00006869      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x0000686d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00006872      4883c420       add rsp, 0x20
0x00006876      4989c7         mov r15, rax
0x00006879      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00006881      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000688a      4c89f8         mov rax, r15
0x0000688d      0f8500060000   jne 0x6e93
0x00006893      4881c4b80000.  add rsp, 0xb8
0x0000689a      5b             pop rbx
0x0000689b      5d             pop rbp
0x0000689c      415c           pop r12
0x0000689e      415d           pop r13
0x000068a0      415e           pop r14
0x000068a2      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x000068a4      c3             ret
0x000068a5      0f1f00         nop dword [rax]
0x000068a8      4c89dd         mov rbp, r11
0x000068ab      e979ffffff     jmp 0x6829
0x000068b0      4d39fd         cmp r13, r15
0x000068b3      7605           jbe 0x68ba
0x000068b5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000068ba      498d4701       lea rax, [r15 + 1]
0x000068be      4939c5         cmp r13, rax
0x000068c1      7606           jbe 0x68c9
0x000068c3      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x000068c9      498d4702       lea rax, [r15 + 2]
0x000068cd      4939c5         cmp r13, rax
0x000068d0      0f86ec050000   jbe 0x6ec2
0x000068d6      4c89ea         mov rdx, r13
0x000068d9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000068df      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000068e4      e9d9fbffff     jmp 0x64c2
0x000068e9      4489e0         mov eax, r12d
0x000068ec      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x000068f1      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x000068f4      e900f6ffff     jmp 0x5ef9                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x000068f9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000068ff      e9c5f9ffff     jmp 0x62c9
0x00006904      85db           test ebx, ebx
0x00006906      0f8527f4ffff   jne 0x5d33
0x0000690c      c644240d01     mov byte [rsp + 0xd], 1
0x00006911      4d85ed         test r13, r13
0x00006914      0f8590050000   jne 0x6eaa
0x0000691a      488d05f86700.  lea rax, [0x0000d119]                   ; "'"
0x00006921      48c744245000.  mov qword [rsp + 0x50], 0
0x0000692a      c644240e01     mov byte [rsp + 0xe], 1
0x0000692f      c644247c00     mov byte [rsp + 0x7c], 0
0x00006934      4531e4         xor r12d, r12d
0x00006937      c644240f00     mov byte [rsp + 0xf], 0
0x0000693c      48c744241801.  mov qword [rsp + 0x18], 1
0x00006945      4889442448     mov qword [rsp + 0x48], rax
0x0000694a      41bf01000000   mov r15d, 1
0x00006950      c74424080200.  mov dword [rsp + 8], 2
0x00006958      e916f4ffff     jmp 0x5d73                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x0000695d      0f1f00         nop dword [rax]
0x00006960      85db           test ebx, ebx
0x00006962      0f85f5030000   jne 0x6d5d
0x00006968      4d85ed         test r13, r13
0x0000696b      0f8425020000   je 0x6b96
0x00006971      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00006975      c644240e01     mov byte [rsp + 0xe], 1
0x0000697a      4531e4         xor r12d, r12d
0x0000697d      c644247c00     mov byte [rsp + 0x7c], 0
0x00006982      48c744245000.  mov qword [rsp + 0x50], 0
0x0000698b      488d05015f00.  lea rax, str.l______l                   ; 0xc893 ; u"\"`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00006992      c644240f00     mov byte [rsp + 0xf], 0
0x00006997      c644240d01     mov byte [rsp + 0xd], 1
0x0000699c      48c744241801.  mov qword [rsp + 0x18], 1
0x000069a5      41bf01000000   mov r15d, 1
0x000069ab      4889442448     mov qword [rsp + 0x48], rax
0x000069b0      e9bef3ffff     jmp 0x5d73
0x000069b5      488d05d75e00.  lea rax, str.l______l                   ; 0xc893 ; u"\"`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000069bc      c644240e01     mov byte [rsp + 0xe], 1
0x000069c1      c644247c00     mov byte [rsp + 0x7c], 0
0x000069c6      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x000069c9      48c744245000.  mov qword [rsp + 0x50], 0
0x000069d2      c644240f01     mov byte [rsp + 0xf], 1
0x000069d7      c644240d01     mov byte [rsp + 0xd], 1
0x000069dc      48c744241801.  mov qword [rsp + 0x18], 1
0x000069e5      4531ff         xor r15d, r15d
0x000069e8      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x000069ed      c74424080500.  mov dword [rsp + 8], 5
0x000069f5      e979f3ffff     jmp 0x5d73
0x000069fa      c644240e01     mov byte [rsp + 0xe], 1
0x000069ff      c644247c00     mov byte [rsp + 0x7c], 0
0x00006a04      4531e4         xor r12d, r12d
0x00006a07      48c744245000.  mov qword [rsp + 0x50], 0
0x00006a10      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00006a15      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00006a18      c644240d01     mov byte [rsp + 0xd], 1
0x00006a1d      48c744241800.  mov qword [rsp + 0x18], 0
0x00006a26      48c744244800.  mov qword [rsp + 0x48], 0
0x00006a2f      e93ff3ffff     jmp 0x5d73
0x00006a34      837c24080a     cmp dword [rsp + 8], 0xa
0x00006a39      7456           je 0x6a91
0x00006a3b      488d35535e00.  lea rsi, [0x0000c895]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00006a42      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00006a44      ba05000000     mov edx, 5
0x00006a49      e862aeffff     call sym.imp.dcgettext
0x00006a4e      4889c1         mov rcx, rax
0x00006a51      4889442468     mov qword [rsp + 0x68], rax
0x00006a56      488d05385e00.  lea rax, [0x0000c895]                   ; "`"
0x00006a5d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00006a60      0f8498030000   je 0x6dfe
0x00006a66      488d35ac6600.  lea rsi, [0x0000d119]                   ; "'"
0x00006a6d      31ff           xor edi, edi
0x00006a6f      ba05000000     mov edx, 5
0x00006a74      e837aeffff     call sym.imp.dcgettext
0x00006a79      4889c1         mov rcx, rax
0x00006a7c      4889442460     mov qword [rsp + 0x60], rax
0x00006a81      488d05916600.  lea rax, [0x0000d119]                   ; "'"
0x00006a88      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x00006a8b      0f8483030000   je 0x6e14
0x00006a91      4531ff         xor r15d, r15d
0x00006a94      85db           test ebx, ebx
0x00006a96      0f84c1010000   je 0x6c5d
0x00006a9c      85db           test ebx, ebx
0x00006a9e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00006aa3      0f9544240f     setne byte [rsp + 0xf]
0x00006aa8      4531e4         xor r12d, r12d
0x00006aab      4889df         mov rdi, rbx
0x00006aae      e81daeffff     call sym.imp.strlen
0x00006ab3      48895c2448     mov qword [rsp + 0x48], rbx
0x00006ab8      4889442418     mov qword [rsp + 0x18], rax
0x00006abd      c644240e01     mov byte [rsp + 0xe], 1
0x00006ac2      c644247c00     mov byte [rsp + 0x7c], 0
0x00006ac7      48c744245000.  mov qword [rsp + 0x50], 0
0x00006ad0      c644240d01     mov byte [rsp + 0xd], 1
0x00006ad5      e999f2ffff     jmp 0x5d73
0x00006ada      c644240e01     mov byte [rsp + 0xe], 1
0x00006adf      c644247c00     mov byte [rsp + 0x7c], 0
0x00006ae4      4531e4         xor r12d, r12d
0x00006ae7      48c744245000.  mov qword [rsp + 0x50], 0
0x00006af0      c644240f00     mov byte [rsp + 0xf], 0
0x00006af5      4531ff         xor r15d, r15d
0x00006af8      c644240d00     mov byte [rsp + 0xd], 0
0x00006afd      48c744241800.  mov qword [rsp + 0x18], 0
0x00006b06      48c744244800.  mov qword [rsp + 0x48], 0
0x00006b0f      e95ff2ffff     jmp 0x5d73
0x00006b14      c644240e01     mov byte [rsp + 0xe], 1
0x00006b19      c644247c00     mov byte [rsp + 0x7c], 0
0x00006b1e      4531e4         xor r12d, r12d
0x00006b21      48c744245000.  mov qword [rsp + 0x50], 0
0x00006b2a      c644240f01     mov byte [rsp + 0xf], 1
0x00006b2f      c644240d01     mov byte [rsp + 0xd], 1
0x00006b34      e91af2ffff     jmp 0x5d53
0x00006b39      4d39fd         cmp r13, r15
0x00006b3c      7605           jbe 0x6b43
0x00006b3e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00006b43      488d4102       lea rax, [rcx + 2]
0x00006b47      4939c5         cmp r13, rax
0x00006b4a      7606           jbe 0x6b52
0x00006b4c      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00006b52      4489e0         mov eax, r12d
0x00006b55      4c8d7903       lea r15, [rcx + 3]
0x00006b59      4531e4         xor r12d, r12d
0x00006b5c      bb30000000     mov ebx, 0x30                           ; '0'
0x00006b61      e962f3ffff     jmp 0x5ec8
0x00006b66      662e0f1f8400.  nop word cs:[rax + rax]
0x00006b70      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00006b75      4c89dd         mov rbp, r11
0x00006b78      885c240d       mov byte [rsp + 0xd], bl
0x00006b7c      e9a8fcffff     jmp 0x6829
0x00006b81      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00006b86      4531e4         xor r12d, r12d
0x00006b89      e902fbffff     jmp 0x6690
0x00006b8e      4531d2         xor r10d, r10d
0x00006b91      e9b7fbffff     jmp 0x674d
0x00006b96      48c744245000.  mov qword [rsp + 0x50], 0
0x00006b9f      c644240e01     mov byte [rsp + 0xe], 1
0x00006ba4      4531e4         xor r12d, r12d
0x00006ba7      c644247c00     mov byte [rsp + 0x7c], 0
0x00006bac      e9dafdffff     jmp 0x698b
0x00006bb1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00006bb6      4c89f6         mov rsi, r14
0x00006bb9      4c89e9         mov rcx, r13
0x00006bbc      4889d8         mov rax, rbx
0x00006bbf      4889df         mov rdi, rbx
0x00006bc2      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00006bc8      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00006bcd      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00006bd5      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00006bd8      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00006bde      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00006be6      4c8b742440     mov r14, qword [rsp + 0x40]
0x00006beb      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00006bf0      7326           jae 0x6c18
0x00006bf2      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00006bf5      7510           jne 0x6c07
0x00006bf7      eb1f           jmp 0x6c18
0x00006bf9      0f1f80000000.  nop dword [rax]
0x00006c00      41803c0100     cmp byte [r9 + rax], 0
0x00006c05      740e           je 0x6c15
0x00006c07      4883c001       add rax, 1
0x00006c0b      488d540500     lea rdx, [rbp + rax]
0x00006c10      4939d3         cmp r11, rdx
0x00006c13      77eb           ja 0x6c00
0x00006c15      4889c7         mov rdi, rax
0x00006c18      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00006c1d      4531e4         xor r12d, r12d
0x00006c20      e961faffff     jmp 0x6686
0x00006c25      4889df         mov rdi, rbx
0x00006c28      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00006c2e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00006c33      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00006c39      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00006c41      4531e4         xor r12d, r12d
0x00006c44      4c8b742440     mov r14, qword [rsp + 0x40]
0x00006c49      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00006c4e      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00006c53      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00006c58      e929faffff     jmp 0x6686
0x00006c5d      488b542468     mov rdx, qword [rsp + 0x68]
0x00006c62      0fb602         movzx eax, byte [rdx]
0x00006c65      84c0           test al, al
0x00006c67      0f842ffeffff   je 0x6a9c
0x00006c6d      0f1f00         nop dword [rax]
0x00006c70      4d39fd         cmp r13, r15
0x00006c73      7604           jbe 0x6c79
0x00006c75      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00006c79      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x00006c7d      420fb6043a     movzx eax, byte [rdx + r15]
0x00006c82      84c0           test al, al
0x00006c84      75ea           jne 0x6c70
0x00006c86      e911feffff     jmp 0x6a9c
0x00006c8b      89d0           mov eax, edx
0x00006c8d      e955f5ffff     jmp 0x61e7
0x00006c92      0fb61c08       movzx ebx, byte [rax + rcx]
0x00006c96      80fb3e         cmp bl, 0x3e
0x00006c99      0f8771f8ffff   ja 0x6510
0x00006c9f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00006ca9      480fa3d8       bt rax, rbx
0x00006cad      0f835df8ffff   jae 0x6510
0x00006cb3      807c240f00     cmp byte [rsp + 0xf], 0
0x00006cb8      0f85e4010000   jne 0x6ea2                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x00006cbe      4d39fd         cmp r13, r15
0x00006cc1      7605           jbe 0x6cc8
0x00006cc3      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00006cc8      498d4701       lea rax, [r15 + 1]
0x00006ccc      4939c5         cmp r13, rax
0x00006ccf      7606           jbe 0x6cd7
0x00006cd1      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00006cd7      498d4702       lea rax, [r15 + 2]
0x00006cdb      4939c5         cmp r13, rax
0x00006cde      7606           jbe 0x6ce6
0x00006ce0      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00006ce6      498d4703       lea rax, [r15 + 3]
0x00006cea      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x00006ced      7606           jbe 0x6cf5
0x00006cef      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00006cf5      4983c704       add r15, 4
0x00006cf9      31d2           xor edx, edx
0x00006cfb      4531e4         xor r12d, r12d
0x00006cfe      31c0           xor eax, eax
0x00006d00      4889cd         mov rbp, rcx
0x00006d03      e9c0f1ffff     jmp 0x5ec8
0x00006d08      85db           test ebx, ebx
0x00006d0a      0f8488010000   je 0x6e98
0x00006d10      488d05026400.  lea rax, [0x0000d119]                   ; "'"
0x00006d17      c644240e01     mov byte [rsp + 0xe], 1
0x00006d1c      c644247c00     mov byte [rsp + 0x7c], 0
0x00006d21      4531e4         xor r12d, r12d
0x00006d24      48c744245000.  mov qword [rsp + 0x50], 0
0x00006d2d      c644240f01     mov byte [rsp + 0xf], 1
0x00006d32      c644240d00     mov byte [rsp + 0xd], 0
0x00006d37      48c744241801.  mov qword [rsp + 0x18], 1
0x00006d40      4531ff         xor r15d, r15d
0x00006d43      4889442448     mov qword [rsp + 0x48], rax
0x00006d48      e926f0ffff     jmp 0x5d73
0x00006d4d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00006d50      4c89dd         mov rbp, r11
0x00006d53      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00006d58      e9ccfaffff     jmp 0x6829
0x00006d5d      488d052f5b00.  lea rax, str.l______l                   ; 0xc893 ; u"\"`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00006d64      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00006d69      c644247c00     mov byte [rsp + 0x7c], 0
0x00006d6e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00006d71      48c744245000.  mov qword [rsp + 0x50], 0
0x00006d7a      c644240f01     mov byte [rsp + 0xf], 1
0x00006d7f      c644240d01     mov byte [rsp + 0xd], 1
0x00006d84      48c744241801.  mov qword [rsp + 0x18], 1
0x00006d8d      4531ff         xor r15d, r15d
0x00006d90      4889442448     mov qword [rsp + 0x48], rax
0x00006d95      e9d9efffff     jmp 0x5d73
0x00006d9a      89d0           mov eax, edx
0x00006d9c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00006da1      4885db         test rbx, rbx
0x00006da4      742c           je 0x6dd2
0x00006da6      84c0           test al, al
0x00006da8      7428           je 0x6dd2
0x00006daa      0fb60b         movzx ecx, byte [rbx]
0x00006dad      4889d8         mov rax, rbx
0x00006db0      84c9           test cl, cl
0x00006db2      741e           je 0x6dd2
0x00006db4      4c89fa         mov rdx, r15
0x00006db7      4c29f8         sub rax, r15
0x00006dba      4939d5         cmp r13, rdx
0x00006dbd      7604           jbe 0x6dc3
0x00006dbf      41880c16       mov byte [r14 + rdx], cl
0x00006dc3      4883c201       add rdx, 1
0x00006dc7      0fb60c10       movzx ecx, byte [rax + rdx]
0x00006dcb      84c9           test cl, cl
0x00006dcd      75eb           jne 0x6dba
0x00006dcf      4989d7         mov r15, rdx
0x00006dd2      4d39fd         cmp r13, r15
0x00006dd5      0f869efaffff   jbe 0x6879
0x00006ddb      43c6043e00     mov byte [r14 + r15], 0
0x00006de0      e994faffff     jmp 0x6879
0x00006de5      837c240802     cmp dword [rsp + 8], 2
0x00006dea      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00006def      4c89dd         mov rbp, r11
0x00006df2      0f94c0         sete al
0x00006df5      885c240d       mov byte [rsp + 0xd], bl
0x00006df9      e92bfaffff     jmp 0x6829
0x00006dfe      8b742408       mov esi, dword [rsp + 8]
0x00006e02      4889cf         mov rdi, rcx
0x00006e05      e8a6edffff     call sym.gettext_quote.part.1
0x00006e0a      4889442468     mov qword [rsp + 0x68], rax
0x00006e0f      e952fcffff     jmp 0x6a66
0x00006e14      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00006e18      4889cf         mov rdi, rcx
0x00006e1b      e890edffff     call sym.gettext_quote.part.1
0x00006e20      4889442460     mov qword [rsp + 0x60], rax
0x00006e25      e967fcffff     jmp 0x6a91
0x00006e2a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00006e2f      4c89dd         mov rbp, r11
0x00006e32      89d0           mov eax, edx
0x00006e34      885c240d       mov byte [rsp + 0xd], bl
0x00006e38      e9ecf9ffff     jmp 0x6829
0x00006e3d      4883ec08       sub rsp, 8
0x00006e41      41b805000000   mov r8d, 5
0x00006e47      4c89d9         mov rcx, r11
0x00006e4a      ff742468       push qword [rsp + 0x68]
0x00006e4e      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00006e52      4c89f7         mov rdi, r14
0x00006e55      ff742438       push qword [rsp + 0x38]
0x00006e59      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00006e61      488b542430     mov rdx, qword [rsp + 0x30]
0x00006e66      488b742470     mov rsi, qword [rsp + 0x70]
0x00006e6b      e830eeffff     call sym.quotearg_buffer_restyled
0x00006e70      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00006e74      4989c7         mov r15, rax
0x00006e77      e9fdf9ffff     jmp 0x6879
0x00006e7c      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00006e81      e916ffffff     jmp 0x6d9c
0x00006e86      c74424080200.  mov dword [rsp + 8], 2
0x00006e8e      e996f9ffff     jmp 0x6829
0x00006e93      e848aaffff     call sym.imp.__stack_chk_fail
0x00006e98      c644240d00     mov byte [rsp + 0xd], 0
0x00006e9d      e96ffaffff     jmp 0x6911
0x00006ea2      4c89dd         mov rbp, r11
0x00006ea5      e996f9ffff     jmp 0x6840
0x00006eaa      c644240e01     mov byte [rsp + 0xe], 1
0x00006eaf      31c0           xor eax, eax
0x00006eb1      4531e4         xor r12d, r12d
0x00006eb4      48c744245000.  mov qword [rsp + 0x50], 0
0x00006ebd      e9a2f5ffff     jmp 0x6464
0x00006ec2      4c89ea         mov rdx, r13
0x00006ec5      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00006eca      e9f3f5ffff     jmp 0x64c2
0x00006ecf      e80ca9ffff     call sym.imp.abort
0x00006ed4      6690           nop
0x00006ed6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00006ee0      4157           push r15
0x00006ee2      4156           push r14
0x00006ee4      4c63ff         movsxd r15, edi
0x00006ee7      4155           push r13
0x00006ee9      4154           push r12
0x00006eeb      4989d6         mov r14, rdx
0x00006eee      55             push rbp
0x00006eef      53             push rbx
0x00006ef0      4889cd         mov rbp, rcx
0x00006ef3      4883ec28       sub rsp, 0x28
0x00006ef7      4889742408     mov qword [rsp + 8], rsi
0x00006efc      e8efa8ffff     call sym.imp.__errno_location
0x00006f01      4989c5         mov r13, rax
0x00006f04      8b00           mov eax, dword [rax]
0x00006f06      4585ff         test r15d, r15d
0x00006f09      488b1d709120.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x210080:8]=0x210090 obj.slotvec0
0x00006f10      89442418       mov dword [rsp + 0x18], eax
0x00006f14      0f8867010000   js 0x7081
0x00006f1a      44393d579120.  cmp dword [obj.nslots], r15d            ; [0x210078:4]=1
0x00006f21      7f62           jg 0x6f85
0x00006f23      4181ffffffff.  cmp r15d, 0x7fffffff
0x00006f2a      0f8456010000   je 0x7086
0x00006f30      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00006f34      488d05559120.  lea rax, obj.slotvec0                   ; 0x210090
0x00006f3b      4963f4         movsxd rsi, r12d
0x00006f3e      48c1e604       shl rsi, 4
0x00006f42      4839c3         cmp rbx, rax
0x00006f45      0f8415010000   je 0x7060
0x00006f4b      4889df         mov rdi, rbx
0x00006f4e      e86d0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00006f53      4889c3         mov rbx, rax
0x00006f56      488905239120.  mov qword [obj.slotvec], rax            ; [0x210080:8]=0x210090 obj.slotvec0
0x00006f5d      48633d149120.  movsxd rdi, dword [obj.nslots]          ; [0x210078:4]=1
0x00006f64      4489e2         mov edx, r12d
0x00006f67      31f6           xor esi, esi
0x00006f69      29fa           sub edx, edi
0x00006f6b      48c1e704       shl rdi, 4
0x00006f6f      4863d2         movsxd rdx, edx
0x00006f72      4801df         add rdi, rbx
0x00006f75      48c1e204       shl rdx, 4
0x00006f79      e802aaffff     call sym.imp.memset
0x00006f7e      448925f39020.  mov dword [obj.nslots], r12d            ; [0x210078:4]=1
0x00006f85      8b4504         mov eax, dword [rbp + 4]
0x00006f88      49c1e704       shl r15, 4
0x00006f8c      4883ec08       sub rsp, 8
0x00006f90      4c01fb         add rbx, r15
0x00006f93      4c8d7d08       lea r15, [rbp + 8]
0x00006f97      448b4500       mov r8d, dword [rbp]
0x00006f9b      4c8b1b         mov r11, qword [rbx]
0x00006f9e      4c8b6308       mov r12, qword [rbx + 8]
0x00006fa2      4c89f1         mov rcx, r14
0x00006fa5      83c801         or eax, 1
0x00006fa8      89442424       mov dword [rsp + 0x24], eax
0x00006fac      ff7530         push qword [rbp + 0x30]
0x00006faf      4189c1         mov r9d, eax
0x00006fb2      ff7528         push qword [rbp + 0x28]
0x00006fb5      4157           push r15
0x00006fb7      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00006fba      488b542428     mov rdx, qword [rsp + 0x28]
0x00006fbf      4c89e7         mov rdi, r12
0x00006fc2      4c895c2430     mov qword [rsp + 0x30], r11
0x00006fc7      e8d4ecffff     call sym.quotearg_buffer_restyled
0x00006fcc      4883c420       add rsp, 0x20
0x00006fd0      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00006fd5      4939c3         cmp r11, rax
0x00006fd8      7767           ja 0x7041
0x00006fda      488d7001       lea rsi, [rax + 1]
0x00006fde      488d055b9220.  lea rax, obj.slot0                      ; 0x210240
0x00006fe5      4939c4         cmp r12, rax
0x00006fe8      488933         mov qword [rbx], rsi
0x00006feb      7412           je 0x6fff
0x00006fed      4c89e7         mov rdi, r12
0x00006ff0      4889742410     mov qword [rsp + 0x10], rsi
0x00006ff5      e8d6a7ffff     call sym.imp.free
0x00006ffa      488b742410     mov rsi, qword [rsp + 0x10]
0x00006fff      4889f7         mov rdi, rsi
0x00007002      4889742410     mov qword [rsp + 0x10], rsi
0x00007007      e8540e0000     call sym.xmalloc
0x0000700c      4883ec08       sub rsp, 8
0x00007010      48894308       mov qword [rbx + 8], rax
0x00007014      448b4500       mov r8d, dword [rbp]
0x00007018      ff7530         push qword [rbp + 0x30]
0x0000701b      ff7528         push qword [rbp + 0x28]
0x0000701e      4c89f1         mov rcx, r14
0x00007021      4157           push r15
0x00007023      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00007028      4889c7         mov rdi, rax
0x0000702b      488b542428     mov rdx, qword [rsp + 0x28]
0x00007030      488b742430     mov rsi, qword [rsp + 0x30]
0x00007035      4989c4         mov r12, rax
0x00007038      e863ecffff     call sym.quotearg_buffer_restyled
0x0000703d      4883c420       add rsp, 0x20
0x00007041      8b442418       mov eax, dword [rsp + 0x18]
0x00007045      41894500       mov dword [r13], eax
0x00007049      4883c428       add rsp, 0x28
0x0000704d      4c89e0         mov rax, r12
0x00007050      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00007051      5d             pop rbp
0x00007052      415c           pop r12
0x00007054      415d           pop r13
0x00007056      415e           pop r14
0x00007058      415f           pop r15
0x0000705a      c3             ret
0x0000705b      0f1f440000     nop dword [rax + rax]
0x00007060      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00007062      e8590e0000     call sym.xrealloc
0x00007067      660f6f052190.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x0000706f      4889c3         mov rbx, rax
0x00007072      488905079020.  mov qword [obj.slotvec], rax            ; [0x210080:8]=0x210090 obj.slotvec0
0x00007079      0f1100         movups xmmword [rax], xmm0
0x0000707c      e9dcfeffff     jmp 0x6f5d
0x00007081      e85aa7ffff     call sym.imp.abort
0x00007086      e825100000     call sym.xalloc_die
0x0000708b      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00007090      4154           push r12
0x00007092      55             push rbp
0x00007093      53             push rbx
0x00007094      4889fb         mov rbx, rdi
0x00007097      e854a7ffff     call sym.imp.__errno_location
0x0000709c      448b20         mov r12d, dword [rax]
0x0000709f      4889c5         mov rbp, rax
0x000070a2      488d05979220.  lea rax, obj.default_quoting_options    ; 0x210340
0x000070a9      4885db         test rbx, rbx
0x000070ac      be38000000     mov esi, 0x38                           ; '8'
0x000070b1      480f44d8       cmove rbx, rax
0x000070b5      4889df         mov rdi, rbx
0x000070b8      e8a30f0000     call sym.xmemdup
0x000070bd      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x000070c1      5b             pop rbx
0x000070c2      5d             pop rbp
0x000070c3      415c           pop r12
0x000070c5      c3             ret
0x000070c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x000070d0      488d05699220.  lea rax, obj.default_quoting_options    ; 0x210340
0x000070d7      4885ff         test rdi, rdi
0x000070da      480f44f8       cmove rdi, rax
0x000070de      8b07           mov eax, dword [rdi]
0x000070e0      c3             ret
0x000070e1      0f1f440000     nop dword [rax + rax]
0x000070e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x000070f0      488d05499220.  lea rax, obj.default_quoting_options    ; 0x210340
0x000070f7      4885ff         test rdi, rdi
0x000070fa      480f44f8       cmove rdi, rax
0x000070fe      8937           mov dword [rdi], esi
0x00007100      c3             ret
0x00007101      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00007106      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00007110      488d05299220.  lea rax, obj.default_quoting_options    ; 0x210340
0x00007117      4885ff         test rdi, rdi
0x0000711a      89f1           mov ecx, esi
0x0000711c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00007120      89f0           mov eax, esi
0x00007122      83e11f         and ecx, 0x1f
0x00007125      c0e805         shr al, 5
0x00007128      0fb6c0         movzx eax, al
0x0000712b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00007130      8b37           mov esi, dword [rdi]
0x00007132      89f0           mov eax, esi
0x00007134      d3e8           shr eax, cl
0x00007136      31c2           xor edx, eax
0x00007138      83e001         and eax, 1
0x0000713b      83e201         and edx, 1
0x0000713e      d3e2           shl edx, cl
0x00007140      31f2           xor edx, esi
0x00007142      8917           mov dword [rdi], edx
0x00007144      c3             ret
0x00007145      90             nop
0x00007146      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00007150      488d05e99120.  lea rax, obj.default_quoting_options    ; 0x210340
0x00007157      4885ff         test rdi, rdi
0x0000715a      480f44f8       cmove rdi, rax
0x0000715e      8b4704         mov eax, dword [rdi + 4]
0x00007161      897704         mov dword [rdi + 4], esi
0x00007164      c3             ret
0x00007165      90             nop
0x00007166      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00007170      488d05c99120.  lea rax, obj.default_quoting_options    ; 0x210340
0x00007177      4885ff         test rdi, rdi
0x0000717a      480f44f8       cmove rdi, rax
0x0000717e      4885f6         test rsi, rsi
0x00007181      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00007187      740e           je 0x7197
0x00007189      4885d2         test rdx, rdx
0x0000718c      7409           je 0x7197
0x0000718e      48897728       mov qword [rdi + 0x28], rsi
0x00007192      48895730       mov qword [rdi + 0x30], rdx
0x00007196      c3             ret
0x00007197      4883ec08       sub rsp, 8
0x0000719b      e840a6ffff     call sym.imp.abort
;-- quotearg_buffer:
0x000071a0      4157           push r15
0x000071a2      4156           push r14
0x000071a4      488d05959120.  lea rax, obj.default_quoting_options    ; 0x210340
0x000071ab      4155           push r13
0x000071ad      4154           push r12
0x000071af      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x000071b2      55             push rbp
0x000071b3      53             push rbx
0x000071b4      4c89c3         mov rbx, r8
0x000071b7      4989f6         mov r14, rsi
0x000071ba      4989d7         mov r15, rdx
0x000071bd      4883ec18       sub rsp, 0x18
0x000071c1      4d85c0         test r8, r8
0x000071c4      480f44d8       cmove rbx, rax
0x000071c8      48894c2408     mov qword [rsp + 8], rcx
0x000071cd      e81ea6ffff     call sym.imp.__errno_location
0x000071d2      448b20         mov r12d, dword [rax]
0x000071d5      4889c5         mov rbp, rax
0x000071d8      488d4308       lea rax, [rbx + 8]
0x000071dc      4883ec08       sub rsp, 8
0x000071e0      448b4b04       mov r9d, dword [rbx + 4]
0x000071e4      ff7330         push qword [rbx + 0x30]
0x000071e7      448b03         mov r8d, dword [rbx]
0x000071ea      ff7328         push qword [rbx + 0x28]
0x000071ed      4c89fa         mov rdx, r15
0x000071f0      50             push rax
0x000071f1      488b4c2428     mov rcx, qword [rsp + 0x28]
0x000071f6      4c89f6         mov rsi, r14
0x000071f9      4c89ef         mov rdi, r13
0x000071fc      e89feaffff     call sym.quotearg_buffer_restyled
0x00007201      44896500       mov dword [rbp], r12d
0x00007205      4883c438       add rsp, 0x38
0x00007209      5b             pop rbx
0x0000720a      5d             pop rbp
0x0000720b      415c           pop r12
0x0000720d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000720f      415e           pop r14
0x00007211      415f           pop r15
0x00007213      c3             ret
0x00007214      6690           nop
0x00007216      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00007220      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00007222      4156           push r14
0x00007224      488d05159120.  lea rax, obj.default_quoting_options    ; 0x210340
0x0000722b      4155           push r13
0x0000722d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x0000722f      4989d4         mov r12, rdx
0x00007232      55             push rbp
0x00007233      53             push rbx
0x00007234      4889cb         mov rbx, rcx
0x00007237      4989fe         mov r14, rdi
0x0000723a      4989f7         mov r15, rsi
0x0000723d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00007241      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00007244      480f44d8       cmove rbx, rax
0x00007248      31ed           xor ebp, ebp
0x0000724a      e8a1a5ffff     call sym.imp.__errno_location
0x0000724f      4d85e4         test r12, r12
0x00007252      4989c5         mov r13, rax
0x00007255      8b00           mov eax, dword [rax]
0x00007257      400f94c5       sete bpl
0x0000725b      0b6b04         or ebp, dword [rbx + 4]
0x0000725e      4c8d5308       lea r10, [rbx + 8]
0x00007262      4883ec08       sub rsp, 8
0x00007266      448b03         mov r8d, dword [rbx]
0x00007269      4c89f9         mov rcx, r15
0x0000726c      89442414       mov dword [rsp + 0x14], eax
0x00007270      ff7330         push qword [rbx + 0x30]
0x00007273      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00007276      ff7328         push qword [rbx + 0x28]
0x00007279      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x0000727b      31f6           xor esi, esi
0x0000727d      4189e9         mov r9d, ebp
0x00007280      31ff           xor edi, edi
0x00007282      4c89542440     mov qword [rsp + 0x40], r10
0x00007287      e814eaffff     call sym.quotearg_buffer_restyled
0x0000728c      488d7001       lea rsi, [rax + 1]
0x00007290      4889442448     mov qword [rsp + 0x48], rax
0x00007295      4883c420       add rsp, 0x20
0x00007299      4889f7         mov rdi, rsi
0x0000729c      4889742418     mov qword [rsp + 0x18], rsi
0x000072a1      e8ba0b0000     call sym.xmalloc
0x000072a6      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x000072ab      4883ec08       sub rsp, 8
0x000072af      ff7330         push qword [rbx + 0x30]
0x000072b2      ff7328         push qword [rbx + 0x28]
0x000072b5      4c8b542438     mov r10, qword [rsp + 0x38]
0x000072ba      4189e9         mov r9d, ebp
0x000072bd      448b03         mov r8d, dword [rbx]
0x000072c0      4c89f9         mov rcx, r15
0x000072c3      4c89f2         mov rdx, r14
0x000072c6      4889c7         mov rdi, rax
0x000072c9      4152           push r10
0x000072cb      488b742438     mov rsi, qword [rsp + 0x38]
0x000072d0      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x000072d5      8b44242c       mov eax, dword [rsp + 0x2c]
0x000072d9      4883c420       add rsp, 0x20
0x000072dd      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x000072e0      41894500       mov dword [r13], eax
0x000072e4      7409           je 0x72ef
0x000072e6      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x000072eb      4d891c24       mov qword [r12], r11
0x000072ef      488b442410     mov rax, qword [rsp + 0x10]
0x000072f4      4883c438       add rsp, 0x38
0x000072f8      5b             pop rbx
0x000072f9      5d             pop rbp
0x000072fa      415c           pop r12
0x000072fc      415d           pop r13
0x000072fe      415e           pop r14
0x00007300      415f           pop r15
0x00007302      c3             ret
0x00007303      0f1f00         nop dword [rax]
0x00007306      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00007310      4889d1         mov rcx, rdx
0x00007313      31d2           xor edx, edx
0x00007315      e906ffffff     jmp sym.quotearg_alloc_mem
0x0000731a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00007320      8b05528d2000   mov eax, dword [obj.nslots]             ; [0x210078:4]=1
0x00007326      4154           push r12
0x00007328      4c8b25518d20.  mov r12, qword [obj.slotvec]            ; [0x210080:8]=0x210090 obj.slotvec0
0x0000732f      55             push rbp
0x00007330      53             push rbx
0x00007331      83f801         cmp eax, 1
0x00007334      7e2b           jle 0x7361                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00007336      83e802         sub eax, 2
0x00007339      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x0000733e      48c1e004       shl rax, 4
0x00007342      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00007347      660f1f840000.  nop word [rax + rax]
0x00007350      488b3b         mov rdi, qword [rbx]
0x00007353      4883c310       add rbx, 0x10
0x00007357      e874a4ffff     call sym.imp.free
0x0000735c      4839eb         cmp rbx, rbp
0x0000735f      75ef           jne 0x7350
0x00007361      498b7c2408     mov rdi, qword [r12 + 8]
0x00007366      488d1dd38e20.  lea rbx, obj.slot0                      ; 0x210240
0x0000736d      4839df         cmp rdi, rbx
0x00007370      7417           je 0x7389
0x00007372      e859a4ffff     call sym.imp.free
0x00007377      48c7050e8d20.  mov qword [obj.slotvec0], 0x100         ; [0x210090:8]=256
0x00007382      48891d0f8d20.  mov qword [0x00210098], rbx             ; [0x210098:8]=0x210240 obj.slot0
0x00007389      488d1d008d20.  lea rbx, obj.slotvec0                   ; 0x210090
0x00007390      4939dc         cmp r12, rbx
0x00007393      740f           je 0x73a4
0x00007395      4c89e7         mov rdi, r12
0x00007398      e833a4ffff     call sym.imp.free
0x0000739d      48891ddc8c20.  mov qword [obj.slotvec], rbx            ; [0x210080:8]=0x210090 obj.slotvec0
0x000073a4      5b             pop rbx
0x000073a5      c705c98c2000.  mov dword [obj.nslots], 1               ; [0x210078:4]=1
0x000073af      5d             pop rbp
0x000073b0      415c           pop r12
0x000073b2      c3             ret
0x000073b3      0f1f00         nop dword [rax]
0x000073b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x000073c0      488d0d798f20.  lea rcx, obj.default_quoting_options    ; 0x210340
0x000073c7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000073ce      e90dfbffff     jmp sym.quotearg_n_options
0x000073d3      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x000073d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x000073e0      488d0d598f20.  lea rcx, obj.default_quoting_options    ; 0x210340
0x000073e7      e9f4faffff     jmp sym.quotearg_n_options
0x000073ec      0f1f4000       nop dword [rax]
;-- quotearg:
0x000073f0      488d0d498f20.  lea rcx, obj.default_quoting_options    ; 0x210340
0x000073f7      4889fe         mov rsi, rdi
0x000073fa      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00007401      31ff           xor edi, edi
0x00007403      e9d8faffff     jmp sym.quotearg_n_options
0x00007408      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00007410      488d0d298f20.  lea rcx, obj.default_quoting_options    ; 0x210340
0x00007417      4889f2         mov rdx, rsi
0x0000741a      4889fe         mov rsi, rdi
0x0000741d      31ff           xor edi, edi
0x0000741f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00007424      6690           nop
0x00007426      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00007430      4883ec48       sub rsp, 0x48
0x00007434      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00007437      64488b142528.  mov rdx, qword fs:[0x28]
0x00007440      4889542438     mov qword [rsp + 0x38], rdx
0x00007445      31d2           xor edx, edx
0x00007447      83fe0a         cmp esi, 0xa
0x0000744a      7468           je 0x74b4
0x0000744c      893424         mov dword [rsp], esi
0x0000744f      4889e1         mov rcx, rsp
0x00007452      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00007459      4889c6         mov rsi, rax
0x0000745c      48c744240400.  mov qword [rsp + 4], 0
0x00007465      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000746e      48c744241400.  mov qword [rsp + 0x14], 0
0x00007477      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00007480      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00007489      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00007492      c74424340000.  mov dword [rsp + 0x34], 0
0x0000749a      e841faffff     call sym.quotearg_n_options
0x0000749f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x000074a4      6448330c2528.  xor rcx, qword fs:[0x28]
0x000074ad      750a           jne 0x74b9                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x000074af      4883c448       add rsp, 0x48
0x000074b3      c3             ret
0x000074b4      e827a3ffff     call sym.imp.abort
0x000074b9      e822a4ffff     call sym.imp.__stack_chk_fail
0x000074be      6690           nop
;-- quotearg_n_style_mem:
0x000074c0      4883ec48       sub rsp, 0x48
0x000074c4      4889d0         mov rax, rdx
0x000074c7      4889ca         mov rdx, rcx
0x000074ca      64488b0c2528.  mov rcx, qword fs:[0x28]
0x000074d3      48894c2438     mov qword [rsp + 0x38], rcx
0x000074d8      31c9           xor ecx, ecx
0x000074da      83fe0a         cmp esi, 0xa
0x000074dd      7461           je 0x7540
0x000074df      893424         mov dword [rsp], esi
0x000074e2      4889e1         mov rcx, rsp
0x000074e5      4889c6         mov rsi, rax
0x000074e8      48c744240400.  mov qword [rsp + 4], 0
0x000074f1      48c744240c00.  mov qword [rsp + 0xc], 0
0x000074fa      48c744241400.  mov qword [rsp + 0x14], 0
0x00007503      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0000750c      48c744242400.  mov qword [rsp + 0x24], 0
0x00007515      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000751e      c74424340000.  mov dword [rsp + 0x34], 0
0x00007526      e8b5f9ffff     call sym.quotearg_n_options
0x0000752b      488b542438     mov rdx, qword [rsp + 0x38]
0x00007530      644833142528.  xor rdx, qword fs:[0x28]
0x00007539      750a           jne 0x7545
0x0000753b      4883c448       add rsp, 0x48
0x0000753f      c3             ret
0x00007540      e89ba2ffff     call sym.imp.abort
0x00007545      e896a3ffff     call sym.imp.__stack_chk_fail
0x0000754a      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00007550      4889f2         mov rdx, rsi
0x00007553      89fe           mov esi, edi
0x00007555      31ff           xor edi, edi
0x00007557      e9d4feffff     jmp sym.quotearg_n_style
0x0000755c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00007560      4889d1         mov rcx, rdx
0x00007563      4889f2         mov rdx, rsi
0x00007566      89fe           mov esi, edi
0x00007568      31ff           xor edi, edi
0x0000756a      e951ffffff     jmp sym.quotearg_n_style_mem
0x0000756f      90             nop
;-- quotearg_char_mem:
0x00007570      4883ec48       sub rsp, 0x48
0x00007574      89d1           mov ecx, edx
0x00007576      64488b042528.  mov rax, qword fs:[0x28]
0x0000757f      4889442438     mov qword [rsp + 0x38], rax
0x00007584      31c0           xor eax, eax
0x00007586      488b05e38d20.  mov rax, qword [0x00210370]             ; [0x210370:8]=0
0x0000758d      4989e0         mov r8, rsp
0x00007590      83e11f         and ecx, 0x1f
0x00007593      660f6f05a58d.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x0000759b      4889442430     mov qword [rsp + 0x30], rax
0x000075a0      89d0           mov eax, edx
0x000075a2      0f290424       movaps xmmword [rsp], xmm0
0x000075a6      c0e805         shr al, 5
0x000075a9      0fb6c0         movzx eax, al
0x000075ac      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x000075b1      660f6f05978d.  movdqa xmm0, xmmword [0x00210350]
0x000075b9      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x000075be      660f6f059a8d.  movdqa xmm0, xmmword [0x00210360]
0x000075c6      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x000075cb      418b11         mov edx, dword [r9]
0x000075ce      89d0           mov eax, edx
0x000075d0      d3e8           shr eax, cl
0x000075d2      f7d0           not eax
0x000075d4      83e001         and eax, 1
0x000075d7      d3e0           shl eax, cl
0x000075d9      4c89c1         mov rcx, r8
0x000075dc      31d0           xor eax, edx
0x000075de      4889f2         mov rdx, rsi
0x000075e1      4889fe         mov rsi, rdi
0x000075e4      418901         mov dword [r9], eax
0x000075e7      31ff           xor edi, edi
0x000075e9      e8f2f8ffff     call sym.quotearg_n_options
0x000075ee      488b742438     mov rsi, qword [rsp + 0x38]
0x000075f3      644833342528.  xor rsi, qword fs:[0x28]
0x000075fc      7505           jne 0x7603
0x000075fe      4883c448       add rsp, 0x48
0x00007602      c3             ret
0x00007603      e8d8a2ffff     call sym.imp.__stack_chk_fail
0x00007608      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00007610      400fbed6       movsx edx, sil
0x00007614      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000761b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00007620      ba3a000000     mov edx, 0x3a                           ; ':'
0x00007625      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000762c      e93fffffff     jmp sym.quotearg_char_mem
0x00007631      0f1f440000     nop dword [rax + rax]
0x00007636      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00007640      ba3a000000     mov edx, 0x3a                           ; ':'
0x00007645      e926ffffff     jmp sym.quotearg_char_mem
0x0000764a      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00007650      4883ec48       sub rsp, 0x48
0x00007654      4889d0         mov rax, rdx
0x00007657      64488b142528.  mov rdx, qword fs:[0x28]
0x00007660      4889542438     mov qword [rsp + 0x38], rdx
0x00007665      31d2           xor edx, edx
0x00007667      83fe0a         cmp esi, 0xa
0x0000766a      7468           je 0x76d4
0x0000766c      893424         mov dword [rsp], esi
0x0000766f      4889e1         mov rcx, rsp
0x00007672      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00007679      4889c6         mov rsi, rax
0x0000767c      48c744240400.  mov qword [rsp + 4], 0
0x00007685      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x0000768e      48c744241400.  mov qword [rsp + 0x14], 0
0x00007697      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000076a0      48c744242400.  mov qword [rsp + 0x24], 0
0x000076a9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000076b2      c74424340000.  mov dword [rsp + 0x34], 0
0x000076ba      e821f8ffff     call sym.quotearg_n_options
0x000076bf      488b4c2438     mov rcx, qword [rsp + 0x38]
0x000076c4      6448330c2528.  xor rcx, qword fs:[0x28]
0x000076cd      750a           jne 0x76d9
0x000076cf      4883c448       add rsp, 0x48
0x000076d3      c3             ret
0x000076d4      e807a1ffff     call sym.imp.abort
0x000076d9      e802a2ffff     call sym.imp.__stack_chk_fail
0x000076de      6690           nop
;-- quotearg_n_custom_mem:
0x000076e0      4883ec48       sub rsp, 0x48
0x000076e4      4989c9         mov r9, rcx
0x000076e7      488b0d828c20.  mov rcx, qword [0x00210370]             ; [0x210370:8]=0
0x000076ee      660f6f054a8c.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x000076f6      64488b042528.  mov rax, qword fs:[0x28]
0x000076ff      4889442438     mov qword [rsp + 0x38], rax
0x00007704      31c0           xor eax, eax
0x00007706      0f290424       movaps xmmword [rsp], xmm0
0x0000770a      4885f6         test rsi, rsi
0x0000770d      48894c2430     mov qword [rsp + 0x30], rcx
0x00007712      c704240a0000.  mov dword [rsp], 0xa
0x00007719      660f6f052f8c.  movdqa xmm0, xmmword [0x00210350]
0x00007721      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00007726      660f6f05328c.  movdqa xmm0, xmmword [0x00210360]
0x0000772e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00007733      7432           je 0x7767
0x00007735      4885d2         test rdx, rdx
0x00007738      742d           je 0x7767
0x0000773a      4889742428     mov qword [rsp + 0x28], rsi
0x0000773f      4889542430     mov qword [rsp + 0x30], rdx
0x00007744      4889e1         mov rcx, rsp
0x00007747      4c89c2         mov rdx, r8
0x0000774a      4c89ce         mov rsi, r9
0x0000774d      e88ef7ffff     call sym.quotearg_n_options
0x00007752      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00007757      6448333c2528.  xor rdi, qword fs:[0x28]
0x00007760      750a           jne 0x776c
0x00007762      4883c448       add rsp, 0x48
0x00007766      c3             ret
0x00007767      e874a0ffff     call sym.imp.abort
0x0000776c      e86fa1ffff     call sym.imp.__stack_chk_fail
0x00007771      0f1f440000     nop dword [rax + rax]
0x00007776      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00007780      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00007787      e954ffffff     jmp sym.quotearg_n_custom_mem
0x0000778c      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00007790      4889d1         mov rcx, rdx
0x00007793      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0000779a      4889f2         mov rdx, rsi
0x0000779d      4889fe         mov rsi, rdi
0x000077a0      31ff           xor edi, edi
0x000077a2      e939ffffff     jmp sym.quotearg_n_custom_mem
0x000077a7      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x000077b0      4989c8         mov r8, rcx
0x000077b3      4889d1         mov rcx, rdx
0x000077b6      4889f2         mov rdx, rsi
0x000077b9      4889fe         mov rsi, rdi
0x000077bc      31ff           xor edi, edi
0x000077be      e91dffffff     jmp sym.quotearg_n_custom_mem
0x000077c3      0f1f00         nop dword [rax]
0x000077c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x000077d0      488d0d698820.  lea rcx, obj.quote_quoting_options      ; 0x210040
0x000077d7      e904f7ffff     jmp sym.quotearg_n_options
0x000077dc      0f1f4000       nop dword [rax]
;-- quote_mem:
0x000077e0      488d0d598820.  lea rcx, obj.quote_quoting_options      ; 0x210040
0x000077e7      4889f2         mov rdx, rsi
0x000077ea      4889fe         mov rsi, rdi
0x000077ed      31ff           xor edi, edi
0x000077ef      e9ecf6ffff     jmp sym.quotearg_n_options
0x000077f4      6690           nop
0x000077f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00007800      488d0d398820.  lea rcx, obj.quote_quoting_options      ; 0x210040
0x00007807      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000780e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00007813      0f1f00         nop dword [rax]
0x00007816      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00007820      488d0d198820.  lea rcx, obj.quote_quoting_options      ; 0x210040
0x00007827      4889fe         mov rsi, rdi
0x0000782a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00007831      31ff           xor edi, edi
0x00007833      e9a8f6ffff     jmp sym.quotearg_n_options
0x00007838      0f1f84000000.  nop dword [rax + rax]
;-- version_etc_arn:
0x00007840      4157           push r15
0x00007842      4156           push r14
0x00007844      4155           push r13
0x00007846      4154           push r12
0x00007848      4d89cc         mov r12, r9
0x0000784b      55             push rbp
0x0000784c      53             push rbx
0x0000784d      4889fd         mov rbp, rdi
0x00007850      4c89c3         mov rbx, r8
0x00007853      4883ec28       sub rsp, 0x28
0x00007857      4885f6         test rsi, rsi
0x0000785a      0f8418010000   je 0x7978
0x00007860      4989d0         mov r8, rdx
0x00007863      488d15fe5400.  lea rdx, [0x0000cd68]                   ; "%s (%s) %s\n"
0x0000786a      4989c9         mov r9, rcx
0x0000786d      31c0           xor eax, eax
0x0000786f      4889f1         mov rcx, rsi
0x00007872      be01000000     mov esi, 1
0x00007877      e894a2ffff     call sym.imp.__fprintf_chk
0x0000787c      488d35f85400.  lea rsi, [0x0000cd7b]                   ; "(C)"
0x00007883      31ff           xor edi, edi
0x00007885      ba05000000     mov edx, 5
0x0000788a      e821a0ffff     call sym.imp.dcgettext
0x0000788f      488d150a5800.  lea rdx, obj.version_etc_copyright      ; 0xd0a0 ; "Copyright %s %d Free Software Foundation, Inc."
0x00007896      4889c1         mov rcx, rax
0x00007899      41b8e3070000   mov r8d, 0x7e3
0x0000789f      be01000000     mov esi, 1
0x000078a4      4889ef         mov rdi, rbp
0x000078a7      31c0           xor eax, eax
0x000078a9      e862a2ffff     call sym.imp.__fprintf_chk
0x000078ae      488d35535500.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0xce08 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x000078b5      31ff           xor edi, edi
0x000078b7      ba05000000     mov edx, 5
0x000078bc      e8ef9fffff     call sym.imp.dcgettext
0x000078c1      4889ee         mov rsi, rbp
0x000078c4      4889c7         mov rdi, rax
0x000078c7      e8e4a0ffff     call sym.imp.fputs_unlocked
0x000078cc      4983fc09       cmp r12, 9
0x000078d0      0f873a030000   ja 0x7c10
0x000078d6      488d15875700.  lea rdx, [0x0000d064]
0x000078dd      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x000078e1      4801d0         add rax, rdx
0x000078e4      ffe0           jmp rax
0x000078e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000078f0      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000078f4      488b4310       mov rax, qword [rbx + 0x10]
0x000078f8      488d35795600.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0xcf78 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x000078ff      4c8b4308       mov r8, qword [rbx + 8]
0x00007903      ba05000000     mov edx, 5
0x00007908      31ff           xor edi, edi
0x0000790a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0000790e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00007912      4c894c2410     mov qword [rsp + 0x10], r9
0x00007917      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000791b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000791f      48890424       mov qword [rsp], rax
0x00007923      4c89442408     mov qword [rsp + 8], r8
0x00007928      488b1b         mov rbx, qword [rbx]
0x0000792b      e8809fffff     call sym.imp.dcgettext
0x00007930      4883ec08       sub rsp, 8
0x00007934      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00007939      4889c2         mov rdx, rax
0x0000793c      4889d9         mov rcx, rbx
0x0000793f      be01000000     mov esi, 1
0x00007944      4889ef         mov rdi, rbp
0x00007947      31c0           xor eax, eax
0x00007949      4151           push r9
0x0000794b      4155           push r13
0x0000794d      4154           push r12
0x0000794f      4157           push r15
0x00007951      4156           push r14
0x00007953      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00007958      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000795d      e8aea1ffff     call sym.imp.__fprintf_chk
0x00007962      4883c430       add rsp, 0x30
0x00007966      4883c428       add rsp, 0x28
0x0000796a      5b             pop rbx
0x0000796b      5d             pop rbp
0x0000796c      415c           pop r12
0x0000796e      415d           pop r13
0x00007970      415e           pop r14
0x00007972      415f           pop r15
0x00007974      c3             ret
0x00007975      0f1f00         nop dword [rax]
0x00007978      4989c8         mov r8, rcx
0x0000797b      4889d1         mov rcx, rdx
0x0000797e      488d15ef5300.  lea rdx, str.s__s                       ; 0xcd74 ; "%s %s\n"
0x00007985      be01000000     mov esi, 1
0x0000798a      31c0           xor eax, eax
0x0000798c      e87fa1ffff     call sym.imp.__fprintf_chk
0x00007991      e9e6feffff     jmp 0x787c
0x00007996      662e0f1f8400.  nop word cs:[rax + rax]
0x000079a0      4c8b5340       mov r10, qword [rbx + 0x40]
0x000079a4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000079a8      488d35f95500.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0xcfa8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x000079af      488b4310       mov rax, qword [rbx + 0x10]
0x000079b3      4c8b4308       mov r8, qword [rbx + 8]
0x000079b7      ba05000000     mov edx, 5
0x000079bc      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000079c0      4c8b6328       mov r12, qword [rbx + 0x28]
0x000079c4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000079c8      4c8b7318       mov r14, qword [rbx + 0x18]
0x000079cc      488b1b         mov rbx, qword [rbx]
0x000079cf      4c89542418     mov qword [rsp + 0x18], r10
0x000079d4      4c894c2410     mov qword [rsp + 0x10], r9
0x000079d9      48890424       mov qword [rsp], rax
0x000079dd      4c89442408     mov qword [rsp + 8], r8
0x000079e2      31ff           xor edi, edi
0x000079e4      e8c79effff     call sym.imp.dcgettext
0x000079e9      4c8b542418     mov r10, qword [rsp + 0x18]
0x000079ee      4152           push r10
0x000079f0      e93fffffff     jmp 0x7934
0x000079f5      0f1f00         nop dword [rax]
0x000079f8      488b1b         mov rbx, qword [rbx]
0x000079fb      488d357d5300.  lea rsi, str.Written_by__s.             ; 0xcd7f ; "Written by %s.\n"
0x00007a02      ba05000000     mov edx, 5
0x00007a07      31ff           xor edi, edi
0x00007a09      e8a29effff     call sym.imp.dcgettext
0x00007a0e      4883c428       add rsp, 0x28
0x00007a12      4889d9         mov rcx, rbx
0x00007a15      4889ef         mov rdi, rbp
0x00007a18      5b             pop rbx
0x00007a19      5d             pop rbp
0x00007a1a      415c           pop r12
0x00007a1c      415d           pop r13
0x00007a1e      415e           pop r14
0x00007a20      415f           pop r15
0x00007a22      4889c2         mov rdx, rax
0x00007a25      be01000000     mov esi, 1
0x00007a2a      31c0           xor eax, eax
0x00007a2c      e9dfa0ffff     jmp sym.imp.__fprintf_chk
0x00007a31      0f1f80000000.  nop dword [rax]
0x00007a38      4c8b6308       mov r12, qword [rbx + 8]
0x00007a3c      488d354c5300.  lea rsi, str.Written_by__s_and__s.      ; 0xcd8f ; "Written by %s and %s.\n"
0x00007a43      488b1b         mov rbx, qword [rbx]
0x00007a46      ba05000000     mov edx, 5
0x00007a4b      31ff           xor edi, edi
0x00007a4d      e85e9effff     call sym.imp.dcgettext
0x00007a52      4883c428       add rsp, 0x28
0x00007a56      4d89e0         mov r8, r12
0x00007a59      4889d9         mov rcx, rbx
0x00007a5c      4889ef         mov rdi, rbp
0x00007a5f      4889c2         mov rdx, rax
0x00007a62      be01000000     mov esi, 1
0x00007a67      5b             pop rbx
0x00007a68      5d             pop rbp
0x00007a69      415c           pop r12
0x00007a6b      415d           pop r13
0x00007a6d      415e           pop r14
0x00007a6f      415f           pop r15
0x00007a71      31c0           xor eax, eax
0x00007a73      e998a0ffff     jmp sym.imp.__fprintf_chk
0x00007a78      0f1f84000000.  nop dword [rax + rax]
0x00007a80      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00007a84      4c8b6308       mov r12, qword [rbx + 8]
0x00007a88      488d35175300.  lea rsi, str.Written_by__s___s__and__s. ; 0xcda6 ; "Written by %s, %s, and %s.\n"
0x00007a8f      488b1b         mov rbx, qword [rbx]
0x00007a92      ba05000000     mov edx, 5
0x00007a97      31ff           xor edi, edi
0x00007a99      e8129effff     call sym.imp.dcgettext
0x00007a9e      4883c428       add rsp, 0x28
0x00007aa2      4d89e9         mov r9, r13
0x00007aa5      4d89e0         mov r8, r12
0x00007aa8      4889d9         mov rcx, rbx
0x00007aab      4889ef         mov rdi, rbp
0x00007aae      4889c2         mov rdx, rax
0x00007ab1      5b             pop rbx
0x00007ab2      5d             pop rbp
0x00007ab3      415c           pop r12
0x00007ab5      415d           pop r13
0x00007ab7      415e           pop r14
0x00007ab9      415f           pop r15
0x00007abb      be01000000     mov esi, 1
0x00007ac0      31c0           xor eax, eax
0x00007ac2      e949a0ffff     jmp sym.imp.__fprintf_chk
0x00007ac7      660f1f840000.  nop word [rax + rax]
0x00007ad0      488d35015400.  lea rsi, str.Written_by__s___s___s___and__s. ; 0xced8 ; "Written by %s, %s, %s,\nand %s.\n"
0x00007ad7      ba05000000     mov edx, 5
0x00007adc      31ff           xor edi, edi
0x00007ade      4c8b7318       mov r14, qword [rbx + 0x18]
0x00007ae2      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00007ae6      4c8b6308       mov r12, qword [rbx + 8]
0x00007aea      488b1b         mov rbx, qword [rbx]
0x00007aed      e8be9dffff     call sym.imp.dcgettext
0x00007af2      4883ec08       sub rsp, 8
0x00007af6      4156           push r14
0x00007af8      4889c2         mov rdx, rax
0x00007afb      4d89e9         mov r9, r13
0x00007afe      4d89e0         mov r8, r12
0x00007b01      4889d9         mov rcx, rbx
0x00007b04      4889ef         mov rdi, rbp
0x00007b07      be01000000     mov esi, 1
0x00007b0c      31c0           xor eax, eax
0x00007b0e      e8fd9fffff     call sym.imp.__fprintf_chk
0x00007b13      58             pop rax
0x00007b14      5a             pop rdx
0x00007b15      4883c428       add rsp, 0x28
0x00007b19      5b             pop rbx
0x00007b1a      5d             pop rbp
0x00007b1b      415c           pop r12
0x00007b1d      415d           pop r13
0x00007b1f      415e           pop r14
0x00007b21      415f           pop r15
0x00007b23      c3             ret
0x00007b24      0f1f4000       nop dword [rax]
0x00007b28      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00007b2c      488d35c55300.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0xcef8 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00007b33      ba05000000     mov edx, 5
0x00007b38      31ff           xor edi, edi
0x00007b3a      4c8b7318       mov r14, qword [rbx + 0x18]
0x00007b3e      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00007b42      4c8b6308       mov r12, qword [rbx + 8]
0x00007b46      488b1b         mov rbx, qword [rbx]
0x00007b49      e8629dffff     call sym.imp.dcgettext
0x00007b4e      4157           push r15
0x00007b50      eba4           jmp 0x7af6
0x00007b52      660f1f440000   nop word [rax + rax]
0x00007b58      4c8b4308       mov r8, qword [rbx + 8]
0x00007b5c      4c8b6328       mov r12, qword [rbx + 0x28]
0x00007b60      488d35b95300.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0xcf20 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00007b67      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00007b6b      4c8b7318       mov r14, qword [rbx + 0x18]
0x00007b6f      ba05000000     mov edx, 5
0x00007b74      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00007b78      31ff           xor edi, edi
0x00007b7a      488b1b         mov rbx, qword [rbx]
0x00007b7d      4c890424       mov qword [rsp], r8
0x00007b81      e82a9dffff     call sym.imp.dcgettext
0x00007b86      4883ec08       sub rsp, 8
0x00007b8a      4d89e9         mov r9, r13
0x00007b8d      4154           push r12
0x00007b8f      4157           push r15
0x00007b91      4156           push r14
0x00007b93      4c8b442420     mov r8, qword [rsp + 0x20]
0x00007b98      4889d9         mov rcx, rbx
0x00007b9b      4889c2         mov rdx, rax
0x00007b9e      4889ef         mov rdi, rbp
0x00007ba1      be01000000     mov esi, 1
0x00007ba6      31c0           xor eax, eax
0x00007ba8      e8639fffff     call sym.imp.__fprintf_chk
0x00007bad      4883c420       add rsp, 0x20
0x00007bb1      4883c428       add rsp, 0x28
0x00007bb5      5b             pop rbx
0x00007bb6      5d             pop rbp
0x00007bb7      415c           pop r12
0x00007bb9      415d           pop r13
0x00007bbb      415e           pop r14
0x00007bbd      415f           pop r15
0x00007bbf      c3             ret
0x00007bc0      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00007bc4      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00007bc8      488d35795300.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0xcf48 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x00007bcf      4c8b6328       mov r12, qword [rbx + 0x28]
0x00007bd3      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00007bd7      ba05000000     mov edx, 5
0x00007bdc      4c8b7318       mov r14, qword [rbx + 0x18]
0x00007be0      4c8b4308       mov r8, qword [rbx + 8]
0x00007be4      31ff           xor edi, edi
0x00007be6      4c894c2408     mov qword [rsp + 8], r9
0x00007beb      488b1b         mov rbx, qword [rbx]
0x00007bee      4c890424       mov qword [rsp], r8
0x00007bf2      e8b99cffff     call sym.imp.dcgettext
0x00007bf7      4155           push r13
0x00007bf9      4154           push r12
0x00007bfb      4157           push r15
0x00007bfd      4156           push r14
0x00007bff      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00007c04      eb8d           jmp 0x7b93
0x00007c06      662e0f1f8400.  nop word cs:[rax + rax]
0x00007c10      4c8b5340       mov r10, qword [rbx + 0x40]
0x00007c14      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00007c18      ba05000000     mov edx, 5
0x00007c1d      488b4310       mov rax, qword [rbx + 0x10]
0x00007c21      4c8b4308       mov r8, qword [rbx + 8]
0x00007c25      488d35b45300.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0xcfe0 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x00007c2c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00007c30      4c8b6328       mov r12, qword [rbx + 0x28]
0x00007c34      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00007c38      4c8b7318       mov r14, qword [rbx + 0x18]
0x00007c3c      4c89542418     mov qword [rsp + 0x18], r10
0x00007c41      4c894c2410     mov qword [rsp + 0x10], r9
0x00007c46      48890424       mov qword [rsp], rax
0x00007c4a      4c89442408     mov qword [rsp + 8], r8
0x00007c4f      488b1b         mov rbx, qword [rbx]
0x00007c52      e98bfdffff     jmp 0x79e2
0x00007c57      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00007c60      4531c9         xor r9d, r9d
0x00007c63      49833800       cmp qword [r8], 0
0x00007c67      7412           je 0x7c7b
0x00007c69      0f1f80000000.  nop dword [rax]
0x00007c70      4983c101       add r9, 1
0x00007c74      4b833cc800     cmp qword [r8 + r9*8], 0
0x00007c79      75f5           jne 0x7c70
0x00007c7b      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00007c80      4883ec68       sub rsp, 0x68
0x00007c84      4d89c2         mov r10, r8
0x00007c87      4531c9         xor r9d, r9d
0x00007c8a      64488b042528.  mov rax, qword fs:[0x28]
0x00007c93      4889442458     mov qword [rsp + 0x58], rax
0x00007c98      31c0           xor eax, eax
0x00007c9a      4989e0         mov r8, rsp
0x00007c9d      0f1f00         nop dword [rax]
0x00007ca0      418b02         mov eax, dword [r10]
0x00007ca3      83f82f         cmp eax, 0x2f
0x00007ca6      7742           ja 0x7cea
0x00007ca8      4189c3         mov r11d, eax
0x00007cab      4d035a10       add r11, qword [r10 + 0x10]
0x00007caf      83c008         add eax, 8
0x00007cb2      418902         mov dword [r10], eax
0x00007cb5      498b03         mov rax, qword [r11]
0x00007cb8      4885c0         test rax, rax
0x00007cbb      4b8904c8       mov qword [r8 + r9*8], rax
0x00007cbf      740a           je 0x7ccb
0x00007cc1      4983c101       add r9, 1
0x00007cc5      4983f90a       cmp r9, 0xa
0x00007cc9      75d5           jne 0x7ca0
0x00007ccb      e870fbffff     call sym.version_etc_arn
0x00007cd0      488b442458     mov rax, qword [rsp + 0x58]
0x00007cd5      644833042528.  xor rax, qword fs:[0x28]
0x00007cde      7505           jne 0x7ce5
0x00007ce0      4883c468       add rsp, 0x68
0x00007ce4      c3             ret
0x00007ce5      e8f69bffff     call sym.imp.__stack_chk_fail
0x00007cea      4d8b5a08       mov r11, qword [r10 + 8]
0x00007cee      498d4308       lea rax, [r11 + 8]
0x00007cf2      49894208       mov qword [r10 + 8], rax
0x00007cf6      ebbd           jmp 0x7cb5
0x00007cf8      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00007d00      55             push rbp
0x00007d01      53             push rbx
0x00007d02      41ba20000000   mov r10d, 0x20                          ; "@"
0x00007d08      4531db         xor r11d, r11d
0x00007d0b      4881ecb80000.  sub rsp, 0xb8
0x00007d12      64488b042528.  mov rax, qword fs:[0x28]
0x00007d1b      4889442478     mov qword [rsp + 0x78], rax
0x00007d20      31c0           xor eax, eax
0x00007d22      488d8424d000.  lea rax, [rsp + 0xd0]
0x00007d2a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00007d32      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x00007d3a      4c8d442420     lea r8, [rsp + 0x20]
0x00007d3f      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00007d47      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x00007d4f      4889442410     mov qword [rsp + 0x10], rax
0x00007d54      488d84248000.  lea rax, [rsp + 0x80]
0x00007d5c      4531c9         xor r9d, r9d
0x00007d5f      4889442418     mov qword [rsp + 0x18], rax
0x00007d64      4889c5         mov rbp, rax
0x00007d67      660f1f840000.  nop word [rax + rax]
0x00007d70      4183fa2f       cmp r10d, 0x2f
0x00007d74      7756           ja 0x7dcc
0x00007d76      4489d0         mov eax, r10d
0x00007d79      41bb01000000   mov r11d, 1
0x00007d7f      4183c208       add r10d, 8
0x00007d83      4801e8         add rax, rbp
0x00007d86      488b00         mov rax, qword [rax]
0x00007d89      4885c0         test rax, rax
0x00007d8c      4b8904c8       mov qword [r8 + r9*8], rax
0x00007d90      740a           je 0x7d9c
0x00007d92      4983c101       add r9, 1
0x00007d96      4983f90a       cmp r9, 0xa
0x00007d9a      75d4           jne 0x7d70
0x00007d9c      4584db         test r11b, r11b
0x00007d9f      7524           jne 0x7dc5
0x00007da1      e89afaffff     call sym.version_etc_arn
0x00007da6      488b442478     mov rax, qword [rsp + 0x78]
0x00007dab      644833042528.  xor rax, qword fs:[0x28]
0x00007db4      750a           jne 0x7dc0
0x00007db6      4881c4b80000.  add rsp, 0xb8
0x00007dbd      5b             pop rbx
0x00007dbe      5d             pop rbp
0x00007dbf      c3             ret
0x00007dc0      e81b9bffff     call sym.imp.__stack_chk_fail
0x00007dc5      4489542408     mov dword [rsp + 8], r10d
0x00007dca      ebd5           jmp 0x7da1
0x00007dcc      4889d8         mov rax, rbx
0x00007dcf      4883c308       add rbx, 8
0x00007dd3      ebb1           jmp 0x7d86
0x00007dd5      90             nop
0x00007dd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00007de0      53             push rbx
0x00007de1      488d35da4f00.  lea rsi, str.Report_bugs_to:__s         ; 0xcdc2 ; "\nReport bugs to: %s\n"
0x00007de8      ba05000000     mov edx, 5
0x00007ded      31ff           xor edi, edi
0x00007def      e8bc9affff     call sym.imp.dcgettext
0x00007df4      488d15dc4f00.  lea rdx, str.bug_coreutils_gnu.org      ; 0xcdd7 ; "bug-coreutils@gnu.org"
0x00007dfb      4889c6         mov rsi, rax
0x00007dfe      bf01000000     mov edi, 1
0x00007e03      31c0           xor eax, eax
0x00007e05      e8669cffff     call sym.imp.__printf_chk
0x00007e0a      488d35dc4f00.  lea rsi, str.s_home_page:___s           ; 0xcded ; "%s home page: <%s>\n"
0x00007e11      ba05000000     mov edx, 5
0x00007e16      31ff           xor edi, edi
0x00007e18      e8939affff     call sym.imp.dcgettext
0x00007e1d      488d0dd43f00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0xbdf8 ; "https://www.gnu.org/software/coreutils/"
0x00007e24      488d150b3000.  lea rdx, str.GNU_coreutils              ; 0xae36 ; "GNU coreutils"
0x00007e2b      4889c6         mov rsi, rax
0x00007e2e      bf01000000     mov edi, 1
0x00007e33      31c0           xor eax, eax
0x00007e35      e8369cffff     call sym.imp.__printf_chk
0x00007e3a      488b1d678220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100a8:8]=0
0x00007e41      488d35d85100.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0xd020 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00007e48      31ff           xor edi, edi
0x00007e4a      ba05000000     mov edx, 5
0x00007e4f      e85c9affff     call sym.imp.dcgettext
0x00007e54      4889de         mov rsi, rbx
0x00007e57      4889c7         mov rdi, rax
0x00007e5a      5b             pop rbx
0x00007e5b      e9509bffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00007e60      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00007e61      4889fb         mov rbx, rdi
0x00007e64      e8879bffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00007e69      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x00007e6c      7505           jne 0x7e73
0x00007e6e      4885db         test rbx, rbx
0x00007e71      7502           jne 0x7e75
0x00007e73      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00007e74      c3             ret
0x00007e75      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x00007e7a      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00007e80      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00007e83      48f7e6         mul rsi
0x00007e86      4889c7         mov rdi, rax
0x00007e89      0f90c0         seto al
0x00007e8c      4885ff         test rdi, rdi
0x00007e8f      780a           js 0x7e9b
0x00007e91      0fb6c0         movzx eax, al
0x00007e94      4885c0         test rax, rax
0x00007e97      7502           jne 0x7e9b
0x00007e99      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x00007e9b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x00007e9f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00007ea4      6690           nop
0x00007ea6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00007eb0      ebae           jmp sym.xmalloc
0x00007eb2      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00007eb6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00007ec0      4885f6         test rsi, rsi
0x00007ec3      53             push rbx
0x00007ec4      4889f3         mov rbx, rsi
0x00007ec7      7505           jne 0x7ece
0x00007ec9      4885ff         test rdi, rdi
0x00007ecc      751a           jne 0x7ee8
0x00007ece      4889de         mov rsi, rbx
0x00007ed1      e87a9bffff     call sym.imp.realloc
0x00007ed6      4885c0         test rax, rax
0x00007ed9      7505           jne 0x7ee0
0x00007edb      4885db         test rbx, rbx
0x00007ede      7511           jne 0x7ef1                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00007ee0      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00007ee1      c3             ret
0x00007ee2      660f1f440000   nop word [rax + rax]
0x00007ee8      e8e398ffff     call sym.imp.free
0x00007eed      31c0           xor eax, eax
0x00007eef      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00007ef0      c3             ret
0x00007ef1      e8ba010000     call sym.xalloc_die
0x00007ef6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00007f00      4889f0         mov rax, rsi
0x00007f03      48f7e2         mul rdx
0x00007f06      4889c6         mov rsi, rax
0x00007f09      0f90c0         seto al
0x00007f0c      4885f6         test rsi, rsi
0x00007f0f      780a           js 0x7f1b
0x00007f11      0fb6c0         movzx eax, al
0x00007f14      4885c0         test rax, rax
0x00007f17      7502           jne 0x7f1b
0x00007f19      eba5           jmp sym.xrealloc
0x00007f1b      4883ec08       sub rsp, 8
0x00007f1f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00007f24      6690           nop
0x00007f26      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00007f30      4885ff         test rdi, rdi
0x00007f33      4989d1         mov r9, rdx
0x00007f36      488b0e         mov rcx, qword [rsi]
0x00007f39      7435           je 0x7f70
0x00007f3b      31d2           xor edx, edx
0x00007f3d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00007f47      49f7f1         div r9
0x00007f4a      4839c8         cmp rax, rcx
0x00007f4d      763c           jbe 0x7f8b
0x00007f4f      4889c8         mov rax, rcx
0x00007f52      48d1e8         shr rax, 1
0x00007f55      488d4c0801     lea rcx, [rax + rcx + 1]
0x00007f5a      48890e         mov qword [rsi], rcx
0x00007f5d      490fafc9       imul rcx, r9
0x00007f61      4889ce         mov rsi, rcx
0x00007f64      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00007f69      0f1f80000000.  nop dword [rax]
0x00007f70      4885c9         test rcx, rcx
0x00007f73      7423           je 0x7f98
0x00007f75      4889c8         mov rax, rcx
0x00007f78      49f7e1         mul r9
0x00007f7b      0f90c2         seto dl
0x00007f7e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00007f81      0fb6d2         movzx edx, dl
0x00007f84      7805           js 0x7f8b
0x00007f86      4885d2         test rdx, rdx
0x00007f89      74cf           je 0x7f5a
0x00007f8b      4883ec08       sub rsp, 8
0x00007f8f      e81c010000     call sym.xalloc_die
0x00007f94      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00007f98      31d2           xor edx, edx
0x00007f9a      b880000000     mov eax, 0x80
0x00007f9f      4531c0         xor r8d, r8d
0x00007fa2      49f7f1         div r9
0x00007fa5      4885c0         test rax, rax
0x00007fa8      410f94c0       sete r8b
0x00007fac      498d0c00       lea rcx, [r8 + rax]
0x00007fb0      ebc3           jmp 0x7f75
0x00007fb2      0f1f4000       nop dword [rax]
0x00007fb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00007fc0      4885ff         test rdi, rdi
0x00007fc3      488b06         mov rax, qword [rsi]
0x00007fc6      7428           je 0x7ff0
0x00007fc8      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00007fd2      4839d0         cmp rax, rdx
0x00007fd5      772a           ja 0x8001
0x00007fd7      4889c2         mov rdx, rax
0x00007fda      48d1ea         shr rdx, 1
0x00007fdd      488d440201     lea rax, [rdx + rax + 1]
0x00007fe2      488906         mov qword [rsi], rax
0x00007fe5      4889c6         mov rsi, rax
0x00007fe8      e9d3feffff     jmp sym.xrealloc
0x00007fed      0f1f00         nop dword [rax]
0x00007ff0      4885c0         test rax, rax
0x00007ff3      ba80000000     mov edx, 0x80
0x00007ff8      480f44c2       cmove rax, rdx
0x00007ffc      4885c0         test rax, rax
0x00007fff      79e1           jns 0x7fe2
0x00008001      4883ec08       sub rsp, 8
0x00008005      e8a6000000     call sym.xalloc_die
0x0000800a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00008010      53             push rbx
0x00008011      4889fb         mov rbx, rdi
0x00008014      e847feffff     call sym.xmalloc
0x00008019      4889da         mov rdx, rbx
0x0000801c      31f6           xor esi, esi
0x0000801e      4889c7         mov rdi, rax
0x00008021      5b             pop rbx
0x00008022      e95999ffff     jmp sym.imp.memset
0x00008027      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00008030      4889f8         mov rax, rdi
0x00008033      4883ec08       sub rsp, 8
0x00008037      48f7e6         mul rsi
0x0000803a      0f90c2         seto dl
0x0000803d      4885c0         test rax, rax
0x00008040      7817           js 0x8059
0x00008042      0fb6d2         movzx edx, dl
0x00008045      4885d2         test rdx, rdx
0x00008048      750f           jne 0x8059
0x0000804a      e87199ffff     call sym.imp.calloc
0x0000804f      4885c0         test rax, rax
0x00008052      7405           je 0x8059
0x00008054      4883c408       add rsp, 8
0x00008058      c3             ret
0x00008059      e852000000     call sym.xalloc_die
0x0000805e      6690           nop
;-- xmemdup:
0x00008060      55             push rbp
0x00008061      53             push rbx
0x00008062      4889fd         mov rbp, rdi
0x00008065      4889f7         mov rdi, rsi
0x00008068      4889f3         mov rbx, rsi
0x0000806b      4883ec08       sub rsp, 8
0x0000806f      e8ecfdffff     call sym.xmalloc
0x00008074      4883c408       add rsp, 8
0x00008078      4889da         mov rdx, rbx
0x0000807b      4889ee         mov rsi, rbp
0x0000807e      5b             pop rbx
0x0000807f      5d             pop rbp
0x00008080      4889c7         mov rdi, rax
0x00008083      e94899ffff     jmp sym.imp.memcpy
0x00008088      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00008090      53             push rbx
0x00008091      4889fb         mov rbx, rdi
0x00008094      e83798ffff     call sym.imp.strlen
0x00008099      4889df         mov rdi, rbx
0x0000809c      488d7001       lea rsi, [rax + 1]
0x000080a0      5b             pop rbx
0x000080a1      ebbd           jmp sym.xmemdup
0x000080a3      662e0f1f8400.  nop word cs:[rax + rax]
0x000080ad      0f1f00         nop dword [rax]
;-- xalloc_die:
0x000080b0      488d35185000.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0xd0cf ; "memory exhausted"
0x000080b7      4883ec08       sub rsp, 8
0x000080bb      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x000080c0      31ff           xor edi, edi
0x000080c2      e8e997ffff     call sym.imp.dcgettext
0x000080c7      8b3d5b7f2000   mov edi, dword [obj.exit_failure]       ; [0x210028:4]=1
0x000080cd      488d150c4700.  lea rdx, [0x0000c7e0]                   ; "%s"
0x000080d4      4889c1         mov rcx, rax
0x000080d7      31f6           xor esi, esi
0x000080d9      31c0           xor eax, eax
0x000080db      e8c099ffff     call sym.imp.error
0x000080e0      e8fb96ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x000080e5      662e0f1f8400.  nop word cs:[rax + rax]
0x000080ef      90             nop
;-- xvprintf:
0x000080f0      55             push rbp                                ; ../coreutils-8.31/lib/xprintf.c:47
0x000080f1      53             push rbx
0x000080f2      4883ec08       sub rsp, 8
0x000080f6      e8b5090000     call sym.rpl_vprintf                    ; ../coreutils-8.31/lib/xprintf.c:48
0x000080fb      85c0           test eax, eax                           ; ../coreutils-8.31/lib/xprintf.c:49
0x000080fd      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/xprintf.c:48
0x000080ff      780f           js 0x8110                               ; ../coreutils-8.31/lib/xprintf.c:49
0x00008101      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/xprintf.c:53
0x00008105      89d8           mov eax, ebx
0x00008107      5b             pop rbx
0x00008108      5d             pop rbp
0x00008109      c3             ret
0x0000810a      660f1f440000   nop word [rax + rax]
0x00008110      488b3d917f20.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/xprintf.c:49 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100a8:8]=0
0x00008117      e82497ffff     call sym.imp.ferror
0x0000811c      85c0           test eax, eax
0x0000811e      75e1           jne 0x8101
0x00008120      488d35b94f00.  lea rsi, str.cannot_perform_formatted_output ; ../coreutils-8.31/lib/xprintf.c:50 ; 0xd0e0 ; "cannot perform formatted output"
0x00008127      31ff           xor edi, edi
0x00008129      ba05000000     mov edx, 5
0x0000812e      e87d97ffff     call sym.imp.dcgettext
0x00008133      4889c5         mov rbp, rax
0x00008136      e8b596ffff     call sym.imp.__errno_location
0x0000813b      8b3de77e2000   mov edi, dword [obj.exit_failure]       ; [0x210028:4]=1
0x00008141      8b30           mov esi, dword [rax]
0x00008143      4889ea         mov rdx, rbp
0x00008146      31c0           xor eax, eax
0x00008148      e85399ffff     call sym.imp.error
0x0000814d      ebb2           jmp 0x8101                              ; ../coreutils-8.31/lib/xprintf.c:52
0x0000814f      90             nop
;-- xprintf:
0x00008150      4881ecd80000.  sub rsp, 0xd8                           ; ../coreutils-8.31/lib/xprintf.c:33
0x00008157      84c0           test al, al
0x00008159      4889742428     mov qword [rsp + 0x28], rsi
0x0000815e      4889542430     mov qword [rsp + 0x30], rdx
0x00008163      48894c2438     mov qword [rsp + 0x38], rcx
0x00008168      4c89442440     mov qword [rsp + 0x40], r8
0x0000816d      4c894c2448     mov qword [rsp + 0x48], r9
0x00008172      7437           je 0x81ab
0x00008174      0f29442450     movaps xmmword [rsp + 0x50], xmm0
0x00008179      0f294c2460     movaps xmmword [rsp + 0x60], xmm1
0x0000817e      0f29542470     movaps xmmword [rsp + 0x70], xmm2
0x00008183      0f299c248000.  movaps xmmword [rsp + 0x80], xmm3
0x0000818b      0f29a4249000.  movaps xmmword [rsp + 0x90], xmm4
0x00008193      0f29ac24a000.  movaps xmmword [rsp + 0xa0], xmm5
0x0000819b      0f29b424b000.  movaps xmmword [rsp + 0xb0], xmm6
0x000081a3      0f29bc24c000.  movaps xmmword [rsp + 0xc0], xmm7
0x000081ab      64488b042528.  mov rax, qword fs:[0x28]
0x000081b4      4889442418     mov qword [rsp + 0x18], rax
0x000081b9      31c0           xor eax, eax
0x000081bb      488d8424e000.  lea rax, [rsp + 0xe0]                   ; ../coreutils-8.31/lib/xprintf.c:36
0x000081c3      4889e6         mov rsi, rsp                            ; ../coreutils-8.31/lib/xprintf.c:37
0x000081c6      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/xprintf.c:36
0x000081cb      488d442420     lea rax, [rsp + 0x20]
0x000081d0      c70424080000.  mov dword [rsp], 8
0x000081d7      c74424043000.  mov dword [rsp + 4], 0x30               ; '0'
                                                                       ; [0x30:4]=0
0x000081df      4889442410     mov qword [rsp + 0x10], rax
0x000081e4      e807ffffff     call sym.xvprintf                       ; ../coreutils-8.31/lib/xprintf.c:37
0x000081e9      488b542418     mov rdx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/xprintf.c:41
0x000081ee      644833142528.  xor rdx, qword fs:[0x28]
0x000081f7      7508           jne 0x8201
0x000081f9      4881c4d80000.  add rsp, 0xd8
0x00008200      c3             ret
0x00008201      e8da96ffff     call sym.imp.__stack_chk_fail
0x00008206      662e0f1f8400.  nop word cs:[rax + rax]
;-- xvfprintf:
0x00008210      55             push rbp                                ; ../coreutils-8.31/lib/xprintf.c:73
0x00008211      53             push rbx
0x00008212      4889fd         mov rbp, rdi
0x00008215      4883ec08       sub rsp, 8
0x00008219      e892070000     call sym.rpl_vfprintf                   ; ../coreutils-8.31/lib/xprintf.c:74
0x0000821e      85c0           test eax, eax                           ; ../coreutils-8.31/lib/xprintf.c:75
0x00008220      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/xprintf.c:74
0x00008222      780c           js 0x8230                               ; ../coreutils-8.31/lib/xprintf.c:75
0x00008224      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/xprintf.c:79
0x00008228      89d8           mov eax, ebx
0x0000822a      5b             pop rbx
0x0000822b      5d             pop rbp
0x0000822c      c3             ret
0x0000822d      0f1f00         nop dword [rax]
0x00008230      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/xprintf.c:75
0x00008233      e80896ffff     call sym.imp.ferror
0x00008238      85c0           test eax, eax
0x0000823a      75e8           jne 0x8224
0x0000823c      488d359d4e00.  lea rsi, str.cannot_perform_formatted_output ; ../coreutils-8.31/lib/xprintf.c:76 ; 0xd0e0 ; "cannot perform formatted output"
0x00008243      31ff           xor edi, edi
0x00008245      ba05000000     mov edx, 5
0x0000824a      e86196ffff     call sym.imp.dcgettext
0x0000824f      4889c5         mov rbp, rax
0x00008252      e89995ffff     call sym.imp.__errno_location
0x00008257      8b3dcb7d2000   mov edi, dword [obj.exit_failure]       ; [0x210028:4]=1
0x0000825d      8b30           mov esi, dword [rax]
0x0000825f      4889ea         mov rdx, rbp
0x00008262      31c0           xor eax, eax
0x00008264      e83798ffff     call sym.imp.error
0x00008269      ebb9           jmp 0x8224                              ; ../coreutils-8.31/lib/xprintf.c:78
0x0000826b      0f1f440000     nop dword [rax + rax]
;-- xfprintf:
0x00008270      4881ecd80000.  sub rsp, 0xd8                           ; ../coreutils-8.31/lib/xprintf.c:59
0x00008277      84c0           test al, al
0x00008279      4889542430     mov qword [rsp + 0x30], rdx
0x0000827e      48894c2438     mov qword [rsp + 0x38], rcx
0x00008283      4c89442440     mov qword [rsp + 0x40], r8
0x00008288      4c894c2448     mov qword [rsp + 0x48], r9
0x0000828d      7437           je 0x82c6
0x0000828f      0f29442450     movaps xmmword [rsp + 0x50], xmm0
0x00008294      0f294c2460     movaps xmmword [rsp + 0x60], xmm1
0x00008299      0f29542470     movaps xmmword [rsp + 0x70], xmm2
0x0000829e      0f299c248000.  movaps xmmword [rsp + 0x80], xmm3
0x000082a6      0f29a4249000.  movaps xmmword [rsp + 0x90], xmm4
0x000082ae      0f29ac24a000.  movaps xmmword [rsp + 0xa0], xmm5
0x000082b6      0f29b424b000.  movaps xmmword [rsp + 0xb0], xmm6
0x000082be      0f29bc24c000.  movaps xmmword [rsp + 0xc0], xmm7
0x000082c6      64488b042528.  mov rax, qword fs:[0x28]
0x000082cf      4889442418     mov qword [rsp + 0x18], rax
0x000082d4      31c0           xor eax, eax
0x000082d6      488d8424e000.  lea rax, [rsp + 0xe0]                   ; ../coreutils-8.31/lib/xprintf.c:62
0x000082de      4889e2         mov rdx, rsp                            ; ../coreutils-8.31/lib/xprintf.c:63
0x000082e1      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/xprintf.c:62
0x000082e6      488d442420     lea rax, [rsp + 0x20]
0x000082eb      c70424100000.  mov dword [rsp], 0x10                   ; [0x10:4]=0x3e0003
0x000082f2      c74424043000.  mov dword [rsp + 4], 0x30               ; '0'
                                                                       ; [0x30:4]=0
0x000082fa      4889442410     mov qword [rsp + 0x10], rax
0x000082ff      e80cffffff     call sym.xvfprintf                      ; ../coreutils-8.31/lib/xprintf.c:63
0x00008304      488b4c2418     mov rcx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/xprintf.c:67
0x00008309      6448330c2528.  xor rcx, qword fs:[0x28]
0x00008312      7508           jne 0x831c
0x00008314      4881c4d80000.  add rsp, 0xd8
0x0000831b      c3             ret
0x0000831c      e8bf95ffff     call sym.imp.__stack_chk_fail
0x00008321      662e0f1f8400.  nop word cs:[rax + rax]
0x0000832b      0f1f440000     nop dword [rax + rax]
;-- xstrtol_fatal:
0x00008330      4155           push r13
0x00008332      4154           push r12
0x00008334      4189f2         mov r10d, esi
0x00008337      55             push rbp
0x00008338      53             push rbx
0x00008339      4d89c4         mov r12, r8
0x0000833c      4883ec18       sub rsp, 0x18
0x00008340      64488b042528.  mov rax, qword fs:[0x28]
0x00008349      4889442408     mov qword [rsp + 8], rax
0x0000834e      31c0           xor eax, eax
0x00008350      83ff03         cmp edi, 3
0x00008353      8b2dcf7c2000   mov ebp, dword [obj.exit_failure]       ; [0x210028:4]=1
0x00008359      7759           ja 0x83b4
0x0000835b      83ff02         cmp edi, 2
0x0000835e      734b           jae 0x83ab
0x00008360      83ef01         sub edi, 1
0x00008363      488d35b14d00.  lea rsi, str.s_s_argument___s__too_large ; 0xd11b ; "%s%s argument '%s' too large"
0x0000836a      753a           jne 0x83a6
0x0000836c      4585d2         test r10d, r10d
0x0000836f      4963c2         movsxd rax, r10d
0x00008372      784e           js 0x83c2
0x00008374      48c1e005       shl rax, 5
0x00008378      488d1db94d00.  lea rbx, [0x0000d138]                   ; "--"
0x0000837f      4c8b2c01       mov r13, qword [rcx + rax]
0x00008383      ba05000000     mov edx, 5
0x00008388      31ff           xor edi, edi
0x0000838a      e82195ffff     call sym.imp.dcgettext
0x0000838f      4d89e1         mov r9, r12
0x00008392      4889c2         mov rdx, rax
0x00008395      4d89e8         mov r8, r13
0x00008398      4889d9         mov rcx, rbx
0x0000839b      31f6           xor esi, esi
0x0000839d      89ef           mov edi, ebp
0x0000839f      31c0           xor eax, eax
0x000083a1      e8fa96ffff     call sym.imp.error
0x000083a6      e83594ffff     call sym.imp.abort
0x000083ab      488d358e4d00.  lea rsi, str.invalid_suffix_in__s_s_argument___s ; 0xd140 ; "invalid suffix in %s%s argument '%s'"
0x000083b2      ebb8           jmp 0x836c
0x000083b4      83ff04         cmp edi, 4
0x000083b7      488d35424d00.  lea rsi, str.invalid__s_s_argument___s  ; 0xd100 ; "invalid %s%s argument '%s'"
0x000083be      74ac           je 0x836c
0x000083c0      ebe4           jmp 0x83a6
0x000083c2      488d1d6f4d00.  lea rbx, [0x0000d138]                   ; "--"
0x000083c9      88542406       mov byte [rsp + 6], dl
0x000083cd      c644240700     mov byte [rsp + 7], 0
0x000083d2      4c8d6c2406     lea r13, [rsp + 6]
0x000083d7      4829c3         sub rbx, rax
0x000083da      eba7           jmp 0x8383
0x000083dc      0f1f4000       nop dword [rax]
;-- xstrtoumax:
0x000083e0      4157           push r15
0x000083e2      4156           push r14
0x000083e4      4155           push r13
0x000083e6      4154           push r12
0x000083e8      55             push rbp
0x000083e9      53             push rbx
0x000083ea      4883ec28       sub rsp, 0x28
0x000083ee      64488b042528.  mov rax, qword fs:[0x28]
0x000083f7      4889442418     mov qword [rsp + 0x18], rax
0x000083fc      31c0           xor eax, eax
0x000083fe      83fa24         cmp edx, 0x24
0x00008401      0f875e030000   ja 0x8765
0x00008407      488d442410     lea rax, [rsp + 0x10]
0x0000840c      4989f7         mov r15, rsi
0x0000840f      4885f6         test rsi, rsi
0x00008412      4889fd         mov rbp, rdi
0x00008415      89542408       mov dword [rsp + 8], edx
0x00008419      4989ce         mov r14, rcx
0x0000841c      4d89c5         mov r13, r8
0x0000841f      4c0f44f8       cmove r15, rax
0x00008423      e8c893ffff     call sym.imp.__errno_location
0x00008428      c70000000000   mov dword [rax], 0
0x0000842e      4989c4         mov r12, rax
0x00008431      0fb65d00       movzx ebx, byte [rbp]
0x00008435      e80697ffff     call sym.imp.__ctype_b_loc
0x0000843a      8b542408       mov edx, dword [rsp + 8]
0x0000843e      488b30         mov rsi, qword [rax]
0x00008441      4889e8         mov rax, rbp
0x00008444      eb11           jmp 0x8457
0x00008446      662e0f1f8400.  nop word cs:[rax + rax]
0x00008450      4883c001       add rax, 1
0x00008454      0fb618         movzx ebx, byte [rax]
0x00008457      0fb6cb         movzx ecx, bl
0x0000845a      f6444e0120     test byte [rsi + rcx*2 + 1], 0x20
0x0000845f      75ef           jne 0x8450
0x00008461      80fb2d         cmp bl, 0x2d
0x00008464      7452           je 0x84b8
0x00008466      31c9           xor ecx, ecx
0x00008468      4c89fe         mov rsi, r15
0x0000846b      4889ef         mov rdi, rbp
0x0000846e      e8ed94ffff     call sym.imp.__strtoul_internal
0x00008473      498b0f         mov rcx, qword [r15]
0x00008476      4889c3         mov rbx, rax
0x00008479      4839e9         cmp rcx, rbp
0x0000847c      742a           je 0x84a8
0x0000847e      418b0424       mov eax, dword [r12]
0x00008482      85c0           test eax, eax
0x00008484      7462           je 0x84e8
0x00008486      83f822         cmp eax, 0x22
0x00008489      bd01000000     mov ebp, 1
0x0000848e      7528           jne 0x84b8
0x00008490      4d85ed         test r13, r13
0x00008493      7409           je 0x849e
0x00008495      440fb621       movzx r12d, byte [rcx]
0x00008499      4584e4         test r12b, r12b
0x0000849c      7579           jne 0x8517
0x0000849e      49891e         mov qword [r14], rbx
0x000084a1      eb1a           jmp 0x84bd
0x000084a3      0f1f440000     nop dword [rax + rax]
0x000084a8      4d85ed         test r13, r13
0x000084ab      48894c2408     mov qword [rsp + 8], rcx
0x000084b0      753e           jne 0x84f0
0x000084b2      660f1f440000   nop word [rax + rax]
0x000084b8      bd04000000     mov ebp, 4
0x000084bd      488b7c2418     mov rdi, qword [rsp + 0x18]
0x000084c2      6448333c2528.  xor rdi, qword fs:[0x28]
0x000084cb      89e8           mov eax, ebp
0x000084cd      0f858d020000   jne 0x8760
0x000084d3      4883c428       add rsp, 0x28
0x000084d7      5b             pop rbx
0x000084d8      5d             pop rbp
0x000084d9      415c           pop r12
0x000084db      415d           pop r13
0x000084dd      415e           pop r14
0x000084df      415f           pop r15
0x000084e1      c3             ret
0x000084e2      660f1f440000   nop word [rax + rax]
0x000084e8      31ed           xor ebp, ebp
0x000084ea      eba4           jmp 0x8490
0x000084ec      0f1f4000       nop dword [rax]
0x000084f0      440fb66500     movzx r12d, byte [rbp]
0x000084f5      4584e4         test r12b, r12b
0x000084f8      74be           je 0x84b8
0x000084fa      410fbef4       movsx esi, r12b
0x000084fe      4c89ef         mov rdi, r13
0x00008501      31ed           xor ebp, ebp
0x00008503      e80894ffff     call sym.imp.strchr
0x00008508      4885c0         test rax, rax
0x0000850b      bb01000000     mov ebx, 1
0x00008510      488b4c2408     mov rcx, qword [rsp + 8]
0x00008515      74a1           je 0x84b8
0x00008517      410fbef4       movsx esi, r12b
0x0000851b      4c89ef         mov rdi, r13
0x0000851e      48894c2408     mov qword [rsp + 8], rcx
0x00008523      e8e893ffff     call sym.imp.strchr
0x00008528      4885c0         test rax, rax
0x0000852b      488b4c2408     mov rcx, qword [rsp + 8]
0x00008530      0f84c6000000   je 0x85fc
0x00008536      418d4424bb     lea eax, [r12 - 0x45]
0x0000853b      3c2f           cmp al, 0x2f
0x0000853d      7751           ja 0x8590
0x0000853f      48ba45893000.  movabs rdx, 0x814400308945
0x00008549      480fa3c2       bt rdx, rax
0x0000854d      7341           jae 0x8590
0x0000854f      be30000000     mov esi, 0x30                           ; '0'
0x00008554      4c89ef         mov rdi, r13
0x00008557      48894c2408     mov qword [rsp + 8], rcx
0x0000855c      e8af93ffff     call sym.imp.strchr
0x00008561      4885c0         test rax, rax
0x00008564      488b4c2408     mov rcx, qword [rsp + 8]
0x00008569      7425           je 0x8590
0x0000856b      0fb64101       movzx eax, byte [rcx + 1]
0x0000856f      3c44           cmp al, 0x44
0x00008571      740c           je 0x857f
0x00008573      3c69           cmp al, 0x69
0x00008575      0f84cd010000   je 0x8748
0x0000857b      3c42           cmp al, 0x42
0x0000857d      7511           jne 0x8590
0x0000857f      bf02000000     mov edi, 2
0x00008584      bee8030000     mov esi, 0x3e8
0x00008589      eb0f           jmp 0x859a
0x0000858b      0f1f440000     nop dword [rax + rax]
0x00008590      bf01000000     mov edi, 1
0x00008595      be00040000     mov esi, 0x400
0x0000859a      4183ec42       sub r12d, 0x42
0x0000859e      4180fc35       cmp r12b, 0x35
0x000085a2      7758           ja 0x85fc
0x000085a4      488d15054c00.  lea rdx, [0x0000d1b0]
0x000085ab      450fb6e4       movzx r12d, r12b
0x000085af      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x000085b3      4801d0         add rax, rdx
0x000085b6      ffe0           jmp rax
0x000085b8      4889d8         mov rax, rbx
0x000085bb      48f7e6         mul rsi
0x000085be      0f80ed010000   jo 0x87b1
0x000085c4      4531c0         xor r8d, r8d
0x000085c7      48f7e6         mul rsi
0x000085ca      0f80d2010000   jo 0x87a2
0x000085d0      4889c3         mov rbx, rax
0x000085d3      4409c5         or ebp, r8d
0x000085d6      662e0f1f8400.  nop word cs:[rax + rax]
0x000085e0      4863ff         movsxd rdi, edi
0x000085e3      89e8           mov eax, ebp
0x000085e5      4801f9         add rcx, rdi
0x000085e8      83c802         or eax, 2
0x000085eb      49890f         mov qword [r15], rcx
0x000085ee      803900         cmp byte [rcx], 0
0x000085f1      49891e         mov qword [r14], rbx
0x000085f4      0f45e8         cmovne ebp, eax
0x000085f7      e9c1feffff     jmp 0x84bd
0x000085fc      49891e         mov qword [r14], rbx
0x000085ff      83cd02         or ebp, 2
0x00008602      e9b6feffff     jmp 0x84bd
0x00008607      ba02000000     mov edx, 2
0x0000860c      4889d0         mov rax, rdx
0x0000860f      48f7e3         mul rbx
0x00008612      0f8096000000   jo 0x86ae
0x00008618      4801db         add rbx, rbx
0x0000861b      ebc3           jmp 0x85e0
0x0000861d      ba00020000     mov edx, 0x200
0x00008622      4889d0         mov rax, rdx
0x00008625      48f7e3         mul rbx
0x00008628      0f8080000000   jo 0x86ae
0x0000862e      48c1e309       shl rbx, 9
0x00008632      ebac           jmp 0x85e0
0x00008634      41b807000000   mov r8d, 7
0x0000863a      4531c9         xor r9d, r9d
0x0000863d      0f1f00         nop dword [rax]
0x00008640      4889d8         mov rax, rbx
0x00008643      48f7e6         mul rsi
0x00008646      4889c3         mov rbx, rax
0x00008649      0f808f010000   jo 0x87de
0x0000864f      4183e801       sub r8d, 1
0x00008653      75eb           jne 0x8640
0x00008655      4409cd         or ebp, r9d
0x00008658      eb86           jmp 0x85e0
0x0000865a      41b808000000   mov r8d, 8
0x00008660      4531c9         xor r9d, r9d
0x00008663      0f1f440000     nop dword [rax + rax]
0x00008668      4889d8         mov rax, rbx
0x0000866b      48f7e6         mul rsi
0x0000866e      4889c3         mov rbx, rax
0x00008671      0f8049010000   jo 0x87c0
0x00008677      4183e801       sub r8d, 1
0x0000867b      75eb           jne 0x8668
0x0000867d      ebd6           jmp 0x8655
0x0000867f      41b804000000   mov r8d, 4
0x00008685      4531c9         xor r9d, r9d
0x00008688      4889d8         mov rax, rbx
0x0000868b      48f7e6         mul rsi
0x0000868e      4889c3         mov rbx, rax
0x00008691      0f80fc000000   jo 0x8793
0x00008697      4183e801       sub r8d, 1
0x0000869b      75eb           jne 0x8688
0x0000869d      ebb6           jmp 0x8655
0x0000869f      4889d8         mov rax, rbx
0x000086a2      48f7e6         mul rsi
0x000086a5      4889c3         mov rbx, rax
0x000086a8      0f8132ffffff   jno 0x85e0
0x000086ae      bd01000000     mov ebp, 1
0x000086b3      4883cbff       or rbx, 0xffffffffffffffff
0x000086b7      e924ffffff     jmp 0x85e0
0x000086bc      0f1f4000       nop dword [rax]
0x000086c0      41b805000000   mov r8d, 5
0x000086c6      4531c9         xor r9d, r9d
0x000086c9      4889d8         mov rax, rbx
0x000086cc      48f7e6         mul rsi
0x000086cf      4889c3         mov rbx, rax
0x000086d2      0f80f7000000   jo 0x87cf
0x000086d8      4183e801       sub r8d, 1
0x000086dc      75eb           jne 0x86c9
0x000086de      e972ffffff     jmp 0x8655
0x000086e3      41b806000000   mov r8d, 6
0x000086e9      4531c9         xor r9d, r9d
0x000086ec      4889d8         mov rax, rbx
0x000086ef      48f7e6         mul rsi
0x000086f2      4889c3         mov rbx, rax
0x000086f5      0f8089000000   jo 0x8784
0x000086fb      4183e801       sub r8d, 1
0x000086ff      75eb           jne 0x86ec
0x00008701      e94fffffff     jmp 0x8655
0x00008706      ba00040000     mov edx, 0x400
0x0000870b      4889d0         mov rax, rdx
0x0000870e      48f7e3         mul rbx
0x00008711      709b           jo 0x86ae
0x00008713      48c1e30a       shl rbx, 0xa
0x00008717      e9c4feffff     jmp 0x85e0
0x0000871c      4889d8         mov rax, rbx
0x0000871f      48f7e6         mul rsi
0x00008722      0f80c5000000   jo 0x87ed
0x00008728      4531c0         xor r8d, r8d
0x0000872b      48f7e6         mul rsi
0x0000872e      0f8193feffff   jno 0x85c7
0x00008734      41b801000000   mov r8d, 1
0x0000873a      4883c8ff       or rax, 0xffffffffffffffff
0x0000873e      e984feffff     jmp 0x85c7
0x00008743      0f1f440000     nop dword [rax + rax]
0x00008748      31ff           xor edi, edi
0x0000874a      80790242       cmp byte [rcx + 2], 0x42
0x0000874e      be00040000     mov esi, 0x400
0x00008753      400f94c7       sete dil
0x00008757      8d7c3f01       lea edi, [rdi + rdi + 1]
0x0000875b      e93afeffff     jmp 0x859a
0x00008760      e87b91ffff     call sym.imp.__stack_chk_fail
0x00008765      488d0d1c4b00.  lea rcx, obj.__PRETTY_FUNCTION__.4162   ; 0xd288 ; "xstrtoumax"
0x0000876c      488d35f54900.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0xd168 ; "../coreutils-8.31/lib/xstrtol.c"
0x00008773      488d3d0e4a00.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0xd188 ; "0 <= strtol_base && strtol_base <= 36"
0x0000877a      ba54000000     mov edx, 0x54                           ; 'T'
0x0000877f      e8cc91ffff     call sym.imp.__assert_fail
0x00008784      41b901000000   mov r9d, 1
0x0000878a      4883cbff       or rbx, 0xffffffffffffffff
0x0000878e      e968ffffff     jmp 0x86fb
0x00008793      41b901000000   mov r9d, 1
0x00008799      4883cbff       or rbx, 0xffffffffffffffff
0x0000879d      e9f5feffff     jmp 0x8697
0x000087a2      41b801000000   mov r8d, 1
0x000087a8      4883cbff       or rbx, 0xffffffffffffffff
0x000087ac      e922feffff     jmp 0x85d3
0x000087b1      4883c8ff       or rax, 0xffffffffffffffff
0x000087b5      41b801000000   mov r8d, 1
0x000087bb      e907feffff     jmp 0x85c7
0x000087c0      41b901000000   mov r9d, 1
0x000087c6      4883cbff       or rbx, 0xffffffffffffffff
0x000087ca      e9a8feffff     jmp 0x8677
0x000087cf      41b901000000   mov r9d, 1
0x000087d5      4883cbff       or rbx, 0xffffffffffffffff
0x000087d9      e9fafeffff     jmp 0x86d8
0x000087de      41b901000000   mov r9d, 1
0x000087e4      4883cbff       or rbx, 0xffffffffffffffff
0x000087e8      e962feffff     jmp 0x864f
0x000087ed      41b801000000   mov r8d, 1
0x000087f3      4883c8ff       or rax, 0xffffffffffffffff
0x000087f7      e92fffffff     jmp 0x872b
0x000087fc      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x00008800      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00008802      55             push rbp
0x00008803      53             push rbx
0x00008804      4889fb         mov rbx, rdi
0x00008807      e8d491ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x0000880c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x0000880e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00008811      7854           js 0x8867                               ; ../coreutils-8.31/lib/fclose.c:66
0x00008813      e81892ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00008818      85c0           test eax, eax
0x0000881a      752c           jne 0x8848
0x0000881c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x0000881f      e85c000000     call sym.rpl_fflush
0x00008824      85c0           test eax, eax
0x00008826      743c           je 0x8864
0x00008828      e8c38fffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x0000882d      448b20         mov r12d, dword [rax]
0x00008830      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00008833      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00008836      e85590ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x0000883b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x0000883e      7530           jne 0x8870
0x00008840      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00008841      5d             pop rbp
0x00008842      415c           pop r12
0x00008844      c3             ret
0x00008845      0f1f00         nop dword [rax]
0x00008848      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x0000884b      e89091ffff     call sym.imp.fileno
0x00008850      31f6           xor esi, esi
0x00008852      ba01000000     mov edx, 1
0x00008857      89c7           mov edi, eax
0x00008859      e8e290ffff     call sym.imp.lseek
0x0000885e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00008862      75b8           jne 0x881c
0x00008864      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00008867      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00008868      5d             pop rbp
0x00008869      415c           pop r12
0x0000886b      e92090ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00008870      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00008874      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00008879      ebc5           jmp 0x8840
0x0000887b      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x00008880      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00008883      53             push rbx
0x00008884      4889fb         mov rbx, rdi
0x00008887      7411           je 0x889a                               ; ../coreutils-8.31/lib/fflush.c:150
0x00008889      e8a291ffff     call sym.imp.__freading
0x0000888e      85c0           test eax, eax
0x00008890      7408           je 0x889a
0x00008892      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00008898      750e           jne 0x88a8
0x0000889a      4889df         mov rdi, rbx
0x0000889d      5b             pop rbx
0x0000889e      e95d91ffff     jmp sym.imp.fflush
0x000088a3      0f1f440000     nop dword [rax + rax]
0x000088a8      4889df         mov rdi, rbx
0x000088ab      ba01000000     mov edx, 1
0x000088b0      31f6           xor esi, esi
0x000088b2      e809000000     call sym.rpl_fseeko
0x000088b7      4889df         mov rdi, rbx
0x000088ba      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x000088bb      e94091ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x000088c0      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x000088c4      48394710       cmp qword [rdi + 0x10], rax
0x000088c8      7406           je 0x88d0                               ; ../coreutils-8.31/lib/fseeko.c:32
0x000088ca      e9e191ffff     jmp sym.imp.fseeko
0x000088cf      90             nop
0x000088d0      488b4720       mov rax, qword [rdi + 0x20]
0x000088d4      48394728       cmp qword [rdi + 0x28], rax
0x000088d8      75f0           jne 0x88ca                              ; ../coreutils-8.31/lib/fseeko.c:33
0x000088da      48837f4800     cmp qword [rdi + 0x48], 0
0x000088df      75e9           jne 0x88ca                              ; ../coreutils-8.31/lib/fseeko.c:21
0x000088e1      4154           push r12
0x000088e3      55             push rbp
0x000088e4      4189d4         mov r12d, edx
0x000088e7      53             push rbx
0x000088e8      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x000088eb      4889fb         mov rbx, rdi
0x000088ee      e8ed90ffff     call sym.imp.fileno
0x000088f3      4489e2         mov edx, r12d
0x000088f6      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x000088f9      89c7           mov edi, eax
0x000088fb      e84090ffff     call sym.imp.lseek
0x00008900      4883f8ff       cmp rax, 0xffffffffffffffff
0x00008904      740c           je 0x8912
0x00008906      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00008909      488983900000.  mov qword [rbx + 0x90], rax
0x00008910      31c0           xor eax, eax
0x00008912      5b             pop rbx
0x00008913      5d             pop rbp
0x00008914      415c           pop r12
0x00008916      c3             ret
0x00008917      660f1f840000.  nop word [rax + rax]
;-- rpl_mbrtowc:
0x00008920      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00008922      4154           push r12
0x00008924      4989f5         mov r13, rsi
0x00008927      55             push rbp
0x00008928      53             push rbx
0x00008929      4889fb         mov rbx, rdi
0x0000892c      4989d4         mov r12, rdx
0x0000892f      4883ec18       sub rsp, 0x18
0x00008933      64488b042528.  mov rax, qword fs:[0x28]
0x0000893c      4889442408     mov qword [rsp + 8], rax
0x00008941      31c0           xor eax, eax
0x00008943      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00008948      4885ff         test rdi, rdi
0x0000894b      480f44d8       cmove rbx, rax
0x0000894f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00008952      e8a98fffff     call sym.imp.mbrtowc
0x00008957      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x0000895b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x0000895e      7620           jbe 0x8980                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00008960      4d85e4         test r12, r12
0x00008963      741b           je 0x8980
0x00008965      31ff           xor edi, edi
0x00008967      e8e4010000     call sym.hard_locale
0x0000896c      84c0           test al, al
0x0000896e      7510           jne 0x8980
0x00008970      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00008975      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x0000897a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x0000897c      0f1f4000       nop dword [rax]
0x00008980      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00008985      644833142528.  xor rdx, qword fs:[0x28]
0x0000898e      4889e8         mov rax, rbp
0x00008991      750b           jne 0x899e
0x00008993      4883c418       add rsp, 0x18
0x00008997      5b             pop rbx
0x00008998      5d             pop rbp
0x00008999      415c           pop r12
0x0000899b      415d           pop r13
0x0000899d      c3             ret
0x0000899e      e83d8fffff     call sym.imp.__stack_chk_fail
0x000089a3      662e0f1f8400.  nop word cs:[rax + rax]
0x000089ad      0f1f00         nop dword [rax]
;-- rpl_vfprintf:
0x000089b0      4155           push r13                                ; ../coreutils-8.31/lib/vfprintf.c:37
0x000089b2      4154           push r12
0x000089b4      4889f0         mov rax, rsi
0x000089b7      55             push rbp
0x000089b8      53             push rbx
0x000089b9      4989fd         mov r13, rdi
0x000089bc      4881ecf80700.  sub rsp, 0x7f8
0x000089c3      4c8d642410     lea r12, [rsp + 0x10]                   ; ../coreutils-8.31/lib/vfprintf.c:43
0x000089c8      488d742408     lea rsi, [rsp + 8]
0x000089cd      48c7442408d0.  mov qword [rsp + 8], 0x7d0              ; ../coreutils-8.31/lib/vfprintf.c:41 ; [0x7d0:8]=0
0x000089d6      64488b0c2528.  mov rcx, qword fs:[0x28]                ; ../coreutils-8.31/lib/vfprintf.c:37
0x000089df      48898c24e807.  mov qword [rsp + 0x7e8], rcx
0x000089e7      31c9           xor ecx, ecx
0x000089e9      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/vfprintf.c:43
0x000089ec      4889d1         mov rcx, rdx
0x000089ef      4889c2         mov rdx, rax
0x000089f2      e809020000     call sym.vasnprintf
0x000089f7      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vfprintf.c:46
0x000089fa      488b5c2408     mov rbx, qword [rsp + 8]                ; ../coreutils-8.31/lib/vfprintf.c:44
0x000089ff      0f8489000000   je 0x8a8e                               ; ../coreutils-8.31/lib/vfprintf.c:46
0x00008a05      4c89e9         mov rcx, r13                            ; ../coreutils-8.31/lib/vfprintf.c:52
0x00008a08      4889da         mov rdx, rbx
0x00008a0b      be01000000     mov esi, 1
0x00008a10      4889c7         mov rdi, rax
0x00008a13      4889c5         mov rbp, rax
0x00008a16      e8e590ffff     call sym.imp.fwrite
0x00008a1b      4839d8         cmp rax, rbx
0x00008a1e      7240           jb 0x8a60
0x00008a20      4c39e5         cmp rbp, r12                            ; ../coreutils-8.31/lib/vfprintf.c:63
0x00008a23      7408           je 0x8a2d
0x00008a25      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/vfprintf.c:64
0x00008a28      e8a38dffff     call sym.imp.free
0x00008a2d      4881fbffffff.  cmp rbx, 0x7fffffff                     ; ../coreutils-8.31/lib/vfprintf.c:66
0x00008a34      774d           ja 0x8a83
0x00008a36      488b8c24e807.  mov rcx, qword [rsp + 0x7e8]            ; ../coreutils-8.31/lib/vfprintf.c:74
0x00008a3e      6448330c2528.  xor rcx, qword fs:[0x28]
0x00008a47      89d8           mov eax, ebx
0x00008a49      7552           jne 0x8a9d
0x00008a4b      4881c4f80700.  add rsp, 0x7f8
0x00008a52      5b             pop rbx
0x00008a53      5d             pop rbp
0x00008a54      415c           pop r12
0x00008a56      415d           pop r13
0x00008a58      c3             ret
0x00008a59      0f1f80000000.  nop dword [rax]
0x00008a60      4c39e5         cmp rbp, r12                            ; ../coreutils-8.31/lib/vfprintf.c:54
0x00008a63      bbffffffff     mov ebx, 0xffffffff                     ; ../coreutils-8.31/lib/vfprintf.c:60 ; -1
0x00008a68      74cc           je 0x8a36                               ; ../coreutils-8.31/lib/vfprintf.c:54
0x00008a6a      e8818dffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/vfprintf.c:56
0x00008a6f      448b28         mov r13d, dword [rax]
0x00008a72      4989c4         mov r12, rax
0x00008a75      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/vfprintf.c:57
0x00008a78      e8538dffff     call sym.imp.free
0x00008a7d      45892c24       mov dword [r12], r13d                   ; ../coreutils-8.31/lib/vfprintf.c:58
0x00008a81      ebb3           jmp 0x8a36
0x00008a83      e8688dffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/vfprintf.c:68
0x00008a88      c7004b000000   mov dword [rax], 0x4b                   ; 'K'
                                                                       ; [0x4b:4]=0
0x00008a8e      4c89ef         mov rdi, r13                            ; ../coreutils-8.31/lib/vfprintf.c:69
0x00008a91      bbffffffff     mov ebx, 0xffffffff                     ; ../coreutils-8.31/lib/vfprintf.c:70 ; -1
0x00008a96      e855010000     call sym.fseterr                        ; ../coreutils-8.31/lib/vfprintf.c:69
0x00008a9b      eb99           jmp 0x8a36                              ; ../coreutils-8.31/lib/vfprintf.c:70
0x00008a9d      e83e8effff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/vfprintf.c:74
0x00008aa2      662e0f1f8400.  nop word cs:[rax + rax]
0x00008aac      0f1f4000       nop dword [rax]
;-- rpl_vprintf:
0x00008ab0      4889f2         mov rdx, rsi                            ; ../coreutils-8.31/lib/vprintf.c:31
0x00008ab3      4889fe         mov rsi, rdi                            ; ../coreutils-8.31/lib/vprintf.c:32
0x00008ab6      488b3deb7520.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2100a8:8]=0
0x00008abd      e9eefeffff     jmp sym.rpl_vfprintf
0x00008ac2      662e0f1f8400.  nop word cs:[rax + rax]
0x00008acc      0f1f4000       nop dword [rax]
;-- close_stream:
0x00008ad0      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00008ad2      55             push rbp
0x00008ad3      4889fd         mov rbp, rdi
0x00008ad6      53             push rbx
0x00008ad7      e8448dffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x00008adc      8b5d00         mov ebx, dword [rbp]
0x00008adf      4889ef         mov rdi, rbp
0x00008ae2      4989c4         mov r12, rax
0x00008ae5      e816fdffff     call sym.rpl_fclose
0x00008aea      83e320         and ebx, 0x20                           ; "@"
0x00008aed      85db           test ebx, ebx
0x00008aef      7517           jne 0x8b08
0x00008af1      85c0           test eax, eax
0x00008af3      740a           je 0x8aff                               ; stdio.h:-186
0x00008af5      4d85e4         test r12, r12                           ; stdio.h:-178
0x00008af8      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00008afd      7439           je 0x8b38
0x00008aff      5b             pop rbx
0x00008b00      5d             pop rbp
0x00008b01      415c           pop r12
0x00008b03      c3             ret
0x00008b04      0f1f4000       nop dword [rax]
0x00008b08      85c0           test eax, eax
0x00008b0a      751c           jne 0x8b28
0x00008b0c      e8df8cffff     call sym.imp.__errno_location
0x00008b11      c70000000000   mov dword [rax], 0
0x00008b17      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00008b1c      5b             pop rbx
0x00008b1d      5d             pop rbp
0x00008b1e      415c           pop r12
0x00008b20      c3             ret
0x00008b21      0f1f80000000.  nop dword [rax]
0x00008b28      5b             pop rbx
0x00008b29      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00008b2e      5d             pop rbp                                 ; stdio.h:-186
0x00008b2f      415c           pop r12
0x00008b31      c3             ret
0x00008b32      660f1f440000   nop word [rax + rax]
0x00008b38      e8b38cffff     call sym.imp.__errno_location
0x00008b3d      833809         cmp dword [rax], 9
0x00008b40      5b             pop rbx
0x00008b41      5d             pop rbp
0x00008b42      415c           pop r12                                 ; stdio.h:-178
0x00008b44      0f95c0         setne al
0x00008b47      0fb6c0         movzx eax, al
0x00008b4a      f7d8           neg eax
0x00008b4c      c3             ret
0x00008b4d      0f1f00         nop dword [rax]
;-- hard_locale:
0x00008b50      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00008b54      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00008b56      e8058fffff     call sym.imp.setlocale
0x00008b5b      4889c2         mov rdx, rax
0x00008b5e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00008b63      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00008b66      741d           je 0x8b85
0x00008b68      488d3d244700.  lea rdi, [0x0000d293]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x00008b6f      b902000000     mov ecx, 2
0x00008b74      4889d6         mov rsi, rdx
0x00008b77      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00008b79      0f97c1         seta cl
0x00008b7c      80d900         sbb cl, 0
0x00008b7f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00008b81      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00008b83      750b           jne 0x8b90
0x00008b85      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00008b89      c3             ret
0x00008b8a      660f1f440000   nop word [rax + rax]
0x00008b90      488d3dfe4600.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0xd295 ; "POSIX"
0x00008b97      b906000000     mov ecx, 6
0x00008b9c      4889d6         mov rsi, rdx
0x00008b9f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00008ba1      0f97c0         seta al
0x00008ba4      1c00           sbb al, 0
0x00008ba6      84c0           test al, al
0x00008ba8      0f95c0         setne al
0x00008bab      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00008baf      c3             ret
;-- locale_charset:
0x00008bb0      4883ec08       sub rsp, 8
0x00008bb4      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00008bb9      e8528effff     call sym.imp.nl_langinfo
0x00008bbe      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00008bc1      741d           je 0x8be0
0x00008bc3      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00008bc6      488d15ce4600.  lea rdx, str.ASCII                      ; 0xd29b ; "ASCII"
0x00008bcd      480f44c2       cmove rax, rdx
0x00008bd1      4883c408       add rsp, 8
0x00008bd5      c3             ret
0x00008bd6      662e0f1f8400.  nop word cs:[rax + rax]
0x00008be0      488d05b44600.  lea rax, str.ASCII                      ; 0xd29b ; "ASCII"
0x00008be7      4883c408       add rsp, 8
0x00008beb      c3             ret
0x00008bec      0f1f4000       nop dword [rax]
;-- fseterr:
0x00008bf0      830f20         or dword [rdi], 0x20                    ; ../coreutils-8.31/lib/fseterr.c:31 ; [0x20:4]=64 ; "@"
0x00008bf3      c3             ret                                     ; ../coreutils-8.31/lib/fseterr.c:84
0x00008bf4      662e0f1f8400.  nop word cs:[rax + rax]
0x00008bfe      6690           nop
;-- vasnprintf:
0x00008c00      55             push rbp                                ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x00008c01      4889e5         mov rbp, rsp
0x00008c04      4157           push r15
0x00008c06      4156           push r14
0x00008c08      4155           push r13
0x00008c0a      4154           push r12
0x00008c0c      4c8db550fcff.  lea r14, [rbp - 0x3b0]                  ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x00008c13      53             push rbx                                ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x00008c14      4889d3         mov rbx, rdx
0x00008c17      4989cc         mov r12, rcx
0x00008c1a      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x00008c1d      4881ec080400.  sub rsp, 0x408                          ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x00008c24      4889b5e8fbff.  mov qword [rbp - 0x418], rsi
0x00008c2b      488db540fdff.  lea rsi, [rbp - 0x2c0]                  ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x00008c32      4889bd18fcff.  mov qword [rbp - 0x3e8], rdi            ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x00008c39      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x00008c3c      4c89b5f0fbff.  mov qword [rbp - 0x410], r14
0x00008c43      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x00008c4c      488945c8       mov qword [rbp - 0x38], rax
0x00008c50      31c0           xor eax, eax
0x00008c52      4889b5f8fbff.  mov qword [rbp - 0x408], rsi            ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x00008c59      e8c2120000     call sym.printf_parse
0x00008c5e      85c0           test eax, eax
0x00008c60      0f88620e0000   js 0x9ac8
0x00008c66      4c89f6         mov rsi, r14                            ; ../coreutils-8.31/lib/vasnprintf.c:1802
0x00008c69      4c89e7         mov rdi, r12
0x00008c6c      e8af100000     call sym.printf_fetchargs
0x00008c71      85c0           test eax, eax
0x00008c73      0f88b70e0000   js 0x9b30
0x00008c79      488b8550fdff.  mov rax, qword [rbp - 0x2b0]            ; ../coreutils-8.31/lib/xsize.h:65
0x00008c80      48c7c2ffffff.  mov rdx, 0xffffffffffffffff             ; ../coreutils-8.31/lib/xsize.h:66
0x00008c87      4883c007       add rax, 7                              ; ../coreutils-8.31/lib/xsize.h:65
0x00008c8b      4883f806       cmp rax, 6                              ; ../coreutils-8.31/lib/xsize.h:66
0x00008c8f      480f46c2       cmovbe rax, rdx
0x00008c93      48038558fdff.  add rax, qword [rbp - 0x2a8]
0x00008c9a      0f82280a0000   jb 0x96c8
0x00008ca0      4889c7         mov rdi, rax
0x00008ca3      4531c0         xor r8d, r8d
0x00008ca6      4883c706       add rdi, 6
0x00008caa      410f92c0       setb r8b
0x00008cae      0f82140a0000   jb 0x96c8
0x00008cb4      4881ff9f0f00.  cmp rdi, 0xf9f                          ; ../coreutils-8.31/lib/vasnprintf.c:1826
0x00008cbb      0f8647010000   jbe 0x8e08
0x00008cc1      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/vasnprintf.c:1835
0x00008cc5      4c898538fcff.  mov qword [rbp - 0x3c8], r8
0x00008ccc      0f84f6090000   je 0x96c8
0x00008cd2      e8198dffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/vasnprintf.c:1837
0x00008cd7      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasnprintf.c:1838
0x00008cda      48898528fcff.  mov qword [rbp - 0x3d8], rax            ; ../coreutils-8.31/lib/vasnprintf.c:1837
0x00008ce1      0f84e1090000   je 0x96c8                               ; ../coreutils-8.31/lib/vasnprintf.c:1838
0x00008ce7      4c8b8538fcff.  mov r8, qword [rbp - 0x3c8]
0x00008cee      488985e0fbff.  mov qword [rbp - 0x420], rax
0x00008cf5      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/vasnprintf.c:1851
0x00008cf8      4883bd18fcff.  cmp qword [rbp - 0x3e8], 0              ; ../coreutils-8.31/lib/vasnprintf.c:1843
0x00008d00      740a           je 0x8d0c
0x00008d02      488b85e8fbff.  mov rax, qword [rbp - 0x418]            ; ../coreutils-8.31/lib/vasnprintf.c:1846
0x00008d09      4c8b20         mov r12, qword [rax]
0x00008d0c      4c8bad48fdff.  mov r13, qword [rbp - 0x2b8]            ; ../coreutils-8.31/lib/vasnprintf.c:1883
0x00008d13      488d8544fcff.  lea rax, [rbp - 0x3bc]                  ; stdio2.h:64   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
0x00008d1a      4c8bbd18fcff.  mov r15, qword [rbp - 0x3e8]            ; ../coreutils-8.31/lib/vasnprintf.c:1883
0x00008d21      48c78500fcff.  mov qword [rbp - 0x400], 0
0x00008d2c      48898510fcff.  mov qword [rbp - 0x3f0], rax            ; stdio2.h:64   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
0x00008d33      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/vasnprintf.c:1928
0x00008d36      4c89c3         mov rbx, r8
0x00008d39      498b4d00       mov rcx, qword [r13]                    ; ../coreutils-8.31/lib/vasnprintf.c:1885
0x00008d3d      4989c0         mov r8, rax                             ; ../coreutils-8.31/lib/vasnprintf.c:1928
0x00008d40      4c39c1         cmp rcx, r8                             ; ../coreutils-8.31/lib/vasnprintf.c:1885
0x00008d43      0f8468090000   je 0x96b1
0x00008d49      4c29c1         sub rcx, r8                             ; ../coreutils-8.31/lib/vasnprintf.c:1887
0x00008d4c      4889d8         mov rax, rbx
0x00008d4f      4801c8         add rax, rcx
0x00008d52      4989c6         mov r14, rax                            ; ../coreutils-8.31/lib/xsize.h:65
0x00008d55      0f83dd000000   jae 0x8e38                              ; ../coreutils-8.31/lib/xsize.h:66
0x00008d5b      4983fcff       cmp r12, 0xffffffffffffffff             ; ../coreutils-8.31/lib/vasnprintf.c:1890
0x00008d5f      0f84cb0a0000   je 0x9830
0x00008d65      e8868affff     call sym.imp.__errno_location
0x00008d6a      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x00008d71      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]            ; ../coreutils-8.31/lib/vasnprintf.c:5606
0x00008d78      7409           je 0x8d83
0x00008d7a      4d85ff         test r15, r15
0x00008d7d      0f85dd0a0000   jne 0x9860
0x00008d83      488b85e0fbff.  mov rax, qword [rbp - 0x420]            ; ../coreutils-8.31/lib/vasnprintf.c:5608
0x00008d8a      4885c0         test rax, rax
0x00008d8d      7408           je 0x8d97
0x00008d8f      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:5609
0x00008d92      e8398affff     call sym.imp.free
0x00008d97      488b85f8fbff.  mov rax, qword [rbp - 0x408]            ; ../coreutils-8.31/lib/vasnprintf.c:5611
0x00008d9e      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x00008da5      4883c020       add rax, 0x20                           ; "@"
0x00008da9      4839c7         cmp rdi, rax
0x00008dac      7405           je 0x8db3
0x00008dae      e81d8affff     call sym.imp.free
0x00008db3      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x00008dba      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x00008dc1      4883c010       add rax, 0x10
0x00008dc5      4839c7         cmp rdi, rax
0x00008dc8      7405           je 0x8dcf
0x00008dca      e8018affff     call sym.imp.free
0x00008dcf      488b8538fcff.  mov rax, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:5612
0x00008dd6      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/vasnprintf.c:5613
0x00008dd9      c7000c000000   mov dword [rax], 0xc                    ; ../coreutils-8.31/lib/vasnprintf.c:5612 ; [0xc:4]=0
0x00008ddf      488b7dc8       mov rdi, qword [rbp - 0x38]             ; ../coreutils-8.31/lib/vasnprintf.c:5615
0x00008de3      6448333c2528.  xor rdi, qword fs:[0x28]
0x00008dec      4c89f8         mov rax, r15
0x00008def      0f85020f0000   jne 0x9cf7
0x00008df5      488d65d8       lea rsp, [rbp - 0x28]
0x00008df9      5b             pop rbx
0x00008dfa      415c           pop r12
0x00008dfc      415d           pop r13
0x00008dfe      415e           pop r14
0x00008e00      415f           pop r15
0x00008e02      5d             pop rbp
0x00008e03      c3             ret
0x00008e04      0f1f4000       nop dword [rax]
0x00008e08      4883c024       add rax, 0x24                           ; ../coreutils-8.31/lib/vasnprintf.c:1828
0x00008e0c      48c785e0fbff.  mov qword [rbp - 0x420], 0              ; ../coreutils-8.31/lib/vasnprintf.c:1829
0x00008e17      4883e0f0       and rax, 0xfffffffffffffff0             ; ../coreutils-8.31/lib/vasnprintf.c:1828
0x00008e1b      4829c4         sub rsp, rax
0x00008e1e      488d44240f     lea rax, [rsp + 0xf]
0x00008e23      4883e0f0       and rax, 0xfffffffffffffff0
0x00008e27      48898528fcff.  mov qword [rbp - 0x3d8], rax
0x00008e2e      e9c2feffff     jmp 0x8cf5
0x00008e33      0f1f440000     nop dword [rax + rax]
0x00008e38      4939c4         cmp r12, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:1890
0x00008e3b      7367           jae 0x8ea4
0x00008e3d      4d85e4         test r12, r12
0x00008e40      0f852a090000   jne 0x9770
0x00008e46      4883f80c       cmp rax, 0xc
0x00008e4a      0f8732090000   ja 0x9782
0x00008e50      41bc0c000000   mov r12d, 0xc
0x00008e56      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00008e5d      0f94c2         sete dl
0x00008e60      4d85ff         test r15, r15
0x00008e63      0f843f090000   je 0x97a8
0x00008e69      84d2           test dl, dl
0x00008e6b      0f8537090000   jne 0x97a8
0x00008e71      4c89e6         mov rsi, r12
0x00008e74      4c89ff         mov rdi, r15
0x00008e77      4c898530fcff.  mov qword [rbp - 0x3d0], r8
0x00008e7e      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x00008e85      e8c68bffff     call sym.imp.realloc
0x00008e8a      4885c0         test rax, rax
0x00008e8d      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]
0x00008e94      4c8b8530fcff.  mov r8, qword [rbp - 0x3d0]
0x00008e9b      0f84aa090000   je 0x984b
0x00008ea1      4989c7         mov r15, rax
0x00008ea4      498d3c1f       lea rdi, [r15 + rbx]                    ; ../coreutils-8.31/lib/vasnprintf.c:1896
0x00008ea8      4889ca         mov rdx, rcx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00008eab      4c89c6         mov rsi, r8
0x00008eae      e81d8bffff     call sym.imp.memcpy
0x00008eb3      488b8500fcff.  mov rax, qword [rbp - 0x400]            ; ../coreutils-8.31/lib/vasnprintf.c:1906
0x00008eba      48398540fdff.  cmp qword [rbp - 0x2c0], rax
0x00008ec1      0f84b40c0000   je 0x9b7b
0x00008ec7      410fb65548     movzx edx, byte [r13 + 0x48]            ; ../coreutils-8.31/lib/vasnprintf.c:1910
0x00008ecc      498b4550       mov rax, qword [r13 + 0x50]
0x00008ed0      80fa25         cmp dl, 0x25
0x00008ed3      0f848f070000   je 0x9668
0x00008ed9      4883f8ff       cmp rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/vasnprintf.c:1923
0x00008edd      0f84430c0000   je 0x9b26
0x00008ee3      4c8b8558fcff.  mov r8, qword [rbp - 0x3a8]
0x00008eea      48c1e005       shl rax, 5
0x00008eee      4c01c0         add rax, r8
0x00008ef1      80fa6e         cmp dl, 0x6e                            ; ../coreutils-8.31/lib/vasnprintf.c:1926
0x00008ef4      8b38           mov edi, dword [rax]
0x00008ef6      89bd30fcffff   mov dword [rbp - 0x3d0], edi
0x00008efc      0f84de070000   je 0x96e0
0x00008f02      418b4510       mov eax, dword [r13 + 0x10]             ; ../coreutils-8.31/lib/vasnprintf.c:4603
0x00008f06      488bbd28fcff.  mov rdi, qword [rbp - 0x3d8]            ; ../coreutils-8.31/lib/vasnprintf.c:4770
0x00008f0d      a801           test al, 1                              ; ../coreutils-8.31/lib/vasnprintf.c:4776
0x00008f0f      c60725         mov byte [rdi], 0x25                    ; ../coreutils-8.31/lib/vasnprintf.c:4770 ; '%'
                                                                       ; [0x25:1]=0
0x00008f12      488d5f01       lea rbx, [rdi + 1]
0x00008f16      740f           je 0x8f27                               ; ../coreutils-8.31/lib/vasnprintf.c:4776
0x00008f18      488bbd28fcff.  mov rdi, qword [rbp - 0x3d8]            ; ../coreutils-8.31/lib/vasnprintf.c:4777
0x00008f1f      488d5f02       lea rbx, [rdi + 2]
0x00008f23      c6470127       mov byte [rdi + 1], 0x27                ; '''
                                                                       ; [0x27:1]=0
0x00008f27      a802           test al, 2                              ; ../coreutils-8.31/lib/vasnprintf.c:4779
0x00008f29      7407           je 0x8f32
0x00008f2b      c6032d         mov byte [rbx], 0x2d                    ; ../coreutils-8.31/lib/vasnprintf.c:4780 ; '-'
                                                                       ; [0x2d:1]=0
0x00008f2e      4883c301       add rbx, 1
0x00008f32      a804           test al, 4                              ; ../coreutils-8.31/lib/vasnprintf.c:4781
0x00008f34      7407           je 0x8f3d
0x00008f36      c6032b         mov byte [rbx], 0x2b                    ; ../coreutils-8.31/lib/vasnprintf.c:4782 ; '+'
                                                                       ; [0x2b:1]=0
0x00008f39      4883c301       add rbx, 1
0x00008f3d      a808           test al, 8                              ; ../coreutils-8.31/lib/vasnprintf.c:4783
0x00008f3f      7407           je 0x8f48
0x00008f41      c60320         mov byte [rbx], 0x20                    ; ../coreutils-8.31/lib/vasnprintf.c:4784 ; [0x20:1]=64 ; "@"
0x00008f44      4883c301       add rbx, 1
0x00008f48      a810           test al, 0x10                           ; ../coreutils-8.31/lib/vasnprintf.c:4785
0x00008f4a      7407           je 0x8f53
0x00008f4c      c60323         mov byte [rbx], 0x23                    ; ../coreutils-8.31/lib/vasnprintf.c:4786 ; '#'
                                                                       ; [0x23:1]=0
0x00008f4f      4883c301       add rbx, 1
0x00008f53      a840           test al, 0x40                           ; ../coreutils-8.31/lib/vasnprintf.c:4788 ; segment.PHDR
0x00008f55      7407           je 0x8f5e
0x00008f57      c60349         mov byte [rbx], 0x49                    ; ../coreutils-8.31/lib/vasnprintf.c:4789 ; 'I'
                                                                       ; [0x49:1]=0
0x00008f5a      4883c301       add rbx, 1
0x00008f5e      a820           test al, 0x20                           ; ../coreutils-8.31/lib/vasnprintf.c:4793 ; "@"
0x00008f60      7407           je 0x8f69
0x00008f62      c60330         mov byte [rbx], 0x30                    ; ../coreutils-8.31/lib/vasnprintf.c:4794 ; '0'
                                                                       ; [0x30:1]=0
0x00008f65      4883c301       add rbx, 1
0x00008f69      498b7518       mov rsi, qword [r13 + 0x18]             ; ../coreutils-8.31/lib/vasnprintf.c:4795
0x00008f6d      498b5520       mov rdx, qword [r13 + 0x20]
0x00008f71      4839d6         cmp rsi, rdx
0x00008f74      7430           je 0x8fa6
0x00008f76      4889d1         mov rcx, rdx                            ; ../coreutils-8.31/lib/vasnprintf.c:4797
0x00008f79      4889df         mov rdi, rbx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00008f7c      4c898520fcff.  mov qword [rbp - 0x3e0], r8
0x00008f83      4829f1         sub rcx, rsi                            ; ../coreutils-8.31/lib/vasnprintf.c:4797
0x00008f86      4889ca         mov rdx, rcx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00008f89      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x00008f90      e83b8affff     call sym.imp.memcpy
0x00008f95      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:4803
0x00008f9c      4c8b8520fcff.  mov r8, qword [rbp - 0x3e0]
0x00008fa3      4801cb         add rbx, rcx
0x00008fa6      498b7530       mov rsi, qword [r13 + 0x30]             ; ../coreutils-8.31/lib/vasnprintf.c:4816
0x00008faa      498b5538       mov rdx, qword [r13 + 0x38]
0x00008fae      4839d6         cmp rsi, rdx
0x00008fb1      7430           je 0x8fe3
0x00008fb3      4889d1         mov rcx, rdx                            ; ../coreutils-8.31/lib/vasnprintf.c:4818
0x00008fb6      4889df         mov rdi, rbx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00008fb9      4c898520fcff.  mov qword [rbp - 0x3e0], r8
0x00008fc0      4829f1         sub rcx, rsi                            ; ../coreutils-8.31/lib/vasnprintf.c:4818
0x00008fc3      4889ca         mov rdx, rcx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00008fc6      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x00008fcd      e8fe89ffff     call sym.imp.memcpy
0x00008fd2      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:4824
0x00008fd9      4c8b8520fcff.  mov r8, qword [rbp - 0x3e0]
0x00008fe0      4801cb         add rbx, rcx
0x00008fe3      8bbd30fcffff   mov edi, dword [rbp - 0x3d0]
0x00008fe9      83ff10         cmp edi, 0x10
0x00008fec      772d           ja 0x901b
0x00008fee      b801000000     mov eax, 1
0x00008ff3      89f9           mov ecx, edi
0x00008ff5      48d3e0         shl rax, cl
0x00008ff8      a980410100     test eax, 0x14180
0x00008ffd      7515           jne 0x9014
0x00008fff      f6c410         test ah, 0x10
0x00009002      0f8558090000   jne 0x9960
0x00009008      f6c406         test ah, 6
0x0000900b      740e           je 0x901b
0x0000900d      c6036c         mov byte [rbx], 0x6c                    ; ../coreutils-8.31/lib/vasnprintf.c:4847 ; 'l'
                                                                       ; [0x6c:1]=0
0x00009010      4883c301       add rbx, 1
0x00009014      c6036c         mov byte [rbx], 0x6c                    ; ../coreutils-8.31/lib/vasnprintf.c:4859 ; 'l'
                                                                       ; [0x6c:1]=0
0x00009017      4883c301       add rbx, 1
0x0000901b      410fb64548     movzx eax, byte [r13 + 0x48]            ; ../coreutils-8.31/lib/vasnprintf.c:4872
0x00009020      c6430100       mov byte [rbx + 1], 0                   ; ../coreutils-8.31/lib/vasnprintf.c:4922
0x00009024      8803           mov byte [rbx], al                      ; ../coreutils-8.31/lib/vasnprintf.c:4872
0x00009026      498b4528       mov rax, qword [r13 + 0x28]             ; ../coreutils-8.31/lib/vasnprintf.c:4930
0x0000902a      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000902e      0f842c070000   je 0x9760
0x00009034      48c1e005       shl rax, 5                              ; ../coreutils-8.31/lib/vasnprintf.c:4932
0x00009038      4c01c0         add rax, r8
0x0000903b      833805         cmp dword [rax], 5
0x0000903e      0f85e20a0000   jne 0x9b26
0x00009044      8b4010         mov eax, dword [rax + 0x10]             ; ../coreutils-8.31/lib/vasnprintf.c:4934
0x00009047      c78520fcffff.  mov dword [rbp - 0x3e0], 1
0x00009051      898548fcffff   mov dword [rbp - 0x3b8], eax
0x00009057      498b4540       mov rax, qword [r13 + 0x40]             ; ../coreutils-8.31/lib/vasnprintf.c:4936
0x0000905b      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000905f      742b           je 0x908c
0x00009061      48c1e005       shl rax, 5                              ; ../coreutils-8.31/lib/vasnprintf.c:4938
0x00009065      4901c0         add r8, rax
0x00009068      41833805       cmp dword [r8], 5
0x0000906c      0f85b40a0000   jne 0x9b26
0x00009072      8b8520fcffff   mov eax, dword [rbp - 0x3e0]            ; ../coreutils-8.31/lib/vasnprintf.c:4940
0x00009078      418b5010       mov edx, dword [r8 + 0x10]
0x0000907c      89948548fcff.  mov dword [rbp + rax*4 - 0x3b8], edx
0x00009083      8d4001         lea eax, [rax + 1]
0x00009086      898520fcffff   mov dword [rbp - 0x3e0], eax
0x0000908c      4c89f0         mov rax, r14
0x0000908f      31d2           xor edx, edx
0x00009091      4883c002       add rax, 2
0x00009095      0f82610c0000   jb 0x9cfc
0x0000909b      4939c4         cmp r12, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:4952
0x0000909e      734b           jae 0x90eb
0x000090a0      4d85e4         test r12, r12
0x000090a3      0f851f080000   jne 0x98c8
0x000090a9      4883f80c       cmp rax, 0xc
0x000090ad      0f872d080000   ja 0x98e0
0x000090b3      41bc0c000000   mov r12d, 0xc
0x000090b9      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x000090c0      0f94c2         sete dl
0x000090c3      4d85ff         test r15, r15
0x000090c6      0f8444080000   je 0x9910
0x000090cc      84d2           test dl, dl
0x000090ce      0f853c080000   jne 0x9910
0x000090d4      4c89e6         mov rsi, r12
0x000090d7      4c89ff         mov rdi, r15
0x000090da      e87189ffff     call sym.imp.realloc
0x000090df      4885c0         test rax, rax
0x000090e2      0f847dfcffff   je 0x8d65
0x000090e8      4989c7         mov r15, rax
0x000090eb      43c6043700     mov byte [r15 + r14], 0                 ; ../coreutils-8.31/lib/vasnprintf.c:4957
0x000090f0      e8fb86ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/vasnprintf.c:4960
0x000090f5      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x000090fc      8b00           mov eax, dword [rax]
0x000090fe      48899d08fcff.  mov qword [rbp - 0x3f8], rbx
0x00009105      8985dcfbffff   mov dword [rbp - 0x424], eax
0x0000910b      0f1f440000     nop dword [rax + rax]
0x00009110      488b8538fcff.  mov rax, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:5015
0x00009117      4c89e3         mov rbx, r12                            ; ../coreutils-8.31/lib/vasnprintf.c:4968
0x0000911a      41baffffff7f   mov r10d, 0x7fffffff
0x00009120      4c29f3         sub rbx, r14
0x00009123      c78544fcffff.  mov dword [rbp - 0x3bc], 0xffffffff     ; ../coreutils-8.31/lib/vasnprintf.c:4964 ; -1
0x0000912d      4881fbffffff.  cmp rbx, 0x7fffffff
0x00009134      c70000000000   mov dword [rax], 0                      ; ../coreutils-8.31/lib/vasnprintf.c:5015
0x0000913a      8b8530fcffff   mov eax, dword [rbp - 0x3d0]            ; ../coreutils-8.31/lib/vasnprintf.c:5016
0x00009140      4c0f46d3       cmovbe r10, rbx
0x00009144      83f811         cmp eax, 0x11
0x00009147      0f87d9090000   ja 0x9b26
0x0000914d      488d35504100.  lea rsi, [0x0000d2a4]
0x00009154      48630486       movsxd rax, dword [rsi + rax*4]
0x00009158      4801f0         add rax, rsi
0x0000915b      ffe0           jmp rax
0x0000915d      0f1f00         nop dword [rax]
0x00009160      498b4550       mov rax, qword [r13 + 0x50]
0x00009164      4b8d3c37       lea rdi, [r15 + r14]
0x00009168      48c1e005       shl rax, 5
0x0000916c      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00009173      4c8b4810       mov r9, qword [rax + 0x10]
0x00009177      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x0000917d      83f801         cmp eax, 1
0x00009180      0f84c2040000   je 0x9648
0x00009186      83f802         cmp eax, 2
0x00009189      0f84a1040000   je 0x9630
0x0000918f      4883ec08       sub rsp, 8
0x00009193      ffb510fcffff   push qword [rbp - 0x3f0]
0x00009199      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x000091a0      4c89d6         mov rsi, r10                            ; ../coreutils-8.31/lib/vasnprintf.c:5007
0x000091a3      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x000091aa      ba01000000     mov edx, 1
0x000091af      31c0           xor eax, eax
0x000091b1      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x000091b8      e80386ffff     call sym.imp.__snprintf_chk
0x000091bd      5e             pop rsi
0x000091be      5f             pop rdi
0x000091bf      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x000091c6      8b8d44fcffff   mov ecx, dword [rbp - 0x3bc]
0x000091cc      85c9           test ecx, ecx
0x000091ce      0f8838010000   js 0x930c
0x000091d4      4863d1         movsxd rdx, ecx
0x000091d7      4c39d2         cmp rdx, r10
0x000091da      730e           jae 0x91ea
0x000091dc      4c01fa         add rdx, r15
0x000091df      42803c3200     cmp byte [rdx + r14], 0
0x000091e4      0f853c090000   jne 0x9b26
0x000091ea      39c1           cmp ecx, eax
0x000091ec      7d08           jge 0x91f6
0x000091ee      898544fcffff   mov dword [rbp - 0x3bc], eax
0x000091f4      89c1           mov ecx, eax
0x000091f6      8d4101         lea eax, [rcx + 1]
0x000091f9      4c39d0         cmp rax, r10
0x000091fc      0f822e080000   jb 0x9a30
0x00009202      4881fbfeffff.  cmp rbx, 0x7ffffffe
0x00009209      0f8741080000   ja 0x9a50
0x0000920f      4b8d3424       lea rsi, [r12 + r12]
0x00009213      8d5102         lea edx, [rcx + 2]
0x00009216      4d85e4         test r12, r12
0x00009219      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00009220      480f49c6       cmovns rax, rsi
0x00009224      4c01f2         add rdx, r14
0x00009227      0f82bb0a0000   jb 0x9ce8
0x0000922d      4839d0         cmp rax, rdx
0x00009230      480f42c2       cmovb rax, rdx
0x00009234      4939c4         cmp r12, rax
0x00009237      0f83d3feffff   jae 0x9110
0x0000923d      4d85e4         test r12, r12
0x00009240      0f882bfbffff   js 0x8d71
0x00009246      4839c6         cmp rsi, rax
0x00009249      4989f4         mov r12, rsi
0x0000924c      730d           jae 0x925b
0x0000924e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00009252      0f8419fbffff   je 0x8d71
0x00009258      4989c4         mov r12, rax
0x0000925b      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00009262      0f94c3         sete bl
0x00009265      4d85ff         test r15, r15
0x00009268      0f8482030000   je 0x95f0
0x0000926e      84db           test bl, bl
0x00009270      0f857a030000   jne 0x95f0
0x00009276      4c89e6         mov rsi, r12
0x00009279      4c89ff         mov rdi, r15
0x0000927c      e8cf87ffff     call sym.imp.realloc
0x00009281      4885c0         test rax, rax
0x00009284      0f84e7faffff   je 0x8d71
0x0000928a      4989c7         mov r15, rax
0x0000928d      e97efeffff     jmp 0x9110                              ; stdio2.h:-211
0x00009292      660f1f440000   nop word [rax + rax]
0x00009298      498b4550       mov rax, qword [r13 + 0x50]
0x0000929c      4b8d3c37       lea rdi, [r15 + r14]
0x000092a0      48c1e005       shl rax, 5
0x000092a4      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x000092ab      448b4810       mov r9d, dword [rax + 0x10]
0x000092af      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x000092b5      83f801         cmp eax, 1
0x000092b8      0f8432020000   je 0x94f0
0x000092be      83f802         cmp eax, 2
0x000092c1      0f8471020000   je 0x9538
0x000092c7      4883ec08       sub rsp, 8
0x000092cb      ffb510fcffff   push qword [rbp - 0x3f0]
0x000092d1      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x000092d8      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x000092df      ba01000000     mov edx, 1
0x000092e4      4c89d6         mov rsi, r10
0x000092e7      31c0           xor eax, eax
0x000092e9      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x000092f0      e8cb84ffff     call sym.imp.__snprintf_chk
0x000092f5      5a             pop rdx
0x000092f6      59             pop rcx
0x000092f7      8b8d44fcffff   mov ecx, dword [rbp - 0x3bc]
0x000092fd      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]            ; ../coreutils-8.31/lib/vasnprintf.c:4942
0x00009304      85c9           test ecx, ecx
0x00009306      0f89c8feffff   jns 0x91d4
0x0000930c      488bbd08fcff.  mov rdi, qword [rbp - 0x3f8]
0x00009313      807f0100       cmp byte [rdi + 1], 0
0x00009317      0f853b030000   jne 0x9658
0x0000931d      85c0           test eax, eax
0x0000931f      0f89c9feffff   jns 0x91ee
0x00009325      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x0000932c      8b18           mov ebx, dword [rax]
0x0000932e      85db           test ebx, ebx
0x00009330      751e           jne 0x9350
0x00009332      410fb64548     movzx eax, byte [r13 + 0x48]
0x00009337      bb16000000     mov ebx, 0x16
0x0000933c      83e0ef         and eax, 0xffffffef                     ; ../coreutils-8.31/lib/vasnprintf.c:4951 ; 4294967279
0x0000933f      3c63           cmp al, 0x63
0x00009341      b854000000     mov eax, 0x54                           ; 'T'
0x00009346      0f44d8         cmove ebx, eax
0x00009349      0f1f80000000.  nop dword [rax]
0x00009350      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00009357      7409           je 0x9362
0x00009359      4d85ff         test r15, r15
0x0000935c      0f85aa070000   jne 0x9b0c
0x00009362      488b85e0fbff.  mov rax, qword [rbp - 0x420]
0x00009369      4885c0         test rax, rax
0x0000936c      7408           je 0x9376
0x0000936e      4889c7         mov rdi, rax
0x00009371      e85a84ffff     call sym.imp.free
0x00009376      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x0000937d      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x00009384      4883c020       add rax, 0x20                           ; "@"
0x00009388      4839c7         cmp rdi, rax
0x0000938b      7405           je 0x9392
0x0000938d      e83e84ffff     call sym.imp.free
0x00009392      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x00009399      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x000093a0      4883c010       add rax, 0x10
0x000093a4      4839c7         cmp rdi, rax
0x000093a7      7405           je 0x93ae
0x000093a9      e82284ffff     call sym.imp.free
0x000093ae      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x000093b5      4531ff         xor r15d, r15d
0x000093b8      8918           mov dword [rax], ebx
0x000093ba      e920faffff     jmp 0x8ddf
0x000093bf      90             nop
0x000093c0      498b4550       mov rax, qword [r13 + 0x50]
0x000093c4      4b8d3c37       lea rdi, [r15 + r14]
0x000093c8      48c1e005       shl rax, 5
0x000093cc      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x000093d3      db6810         fld xword [rax + 0x10]
0x000093d6      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x000093dc      83f801         cmp eax, 1
0x000093df      0f842b060000   je 0x9a10
0x000093e5      83f802         cmp eax, 2
0x000093e8      0f85c2040000   jne 0x98b0
0x000093ee      8b854cfcffff   mov eax, dword [rbp - 0x3b4]
0x000093f4      4883ec08       sub rsp, 8
0x000093f8      ffb510fcffff   push qword [rbp - 0x3f0]                ; ../coreutils-8.31/lib/vasnprintf.c:4814
0x000093fe      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]
0x00009405      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x0000940c      4c89d6         mov rsi, r10
0x0000940f      4883ec18       sub rsp, 0x18
0x00009413      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x0000941a      ba01000000     mov edx, 1
0x0000941f      db7c2408       fstp xword [rsp + 8]
0x00009423      50             push rax
0x00009424      31c0           xor eax, eax
0x00009426      4c8995d0fbff.  mov qword [rbp - 0x430], r10            ; ../coreutils-8.31/lib/vasnprintf.c:4808
0x0000942d      e88e83ffff     call sym.imp.__snprintf_chk
0x00009432      4883c430       add rsp, 0x30
0x00009436      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x0000943d      e984fdffff     jmp 0x91c6
0x00009442      660f1f440000   nop word [rax + rax]
0x00009448      498b4550       mov rax, qword [r13 + 0x50]
0x0000944c      4b8d3c37       lea rdi, [r15 + r14]
0x00009450      48c1e005       shl rax, 5
0x00009454      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x0000945b      f20f104010     movsd xmm0, qword [rax + 0x10]
0x00009460      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00009466      83f801         cmp eax, 1
0x00009469      0f8491050000   je 0x9a00
0x0000946f      83f802         cmp eax, 2
0x00009472      0f85f8030000   jne 0x9870
0x00009478      8b854cfcffff   mov eax, dword [rbp - 0x3b4]
0x0000947e      ffb510fcffff   push qword [rbp - 0x3f0]
0x00009484      50             push rax
0x00009485      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]
0x0000948c      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x00009493      4c89d6         mov rsi, r10
0x00009496      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x0000949d      ba01000000     mov edx, 1
0x000094a2      b801000000     mov eax, 1
0x000094a7      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x000094ae      e80d83ffff     call sym.imp.__snprintf_chk
0x000094b3      4158           pop r8
0x000094b5      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x000094bc      4159           pop r9
0x000094be      e903fdffff     jmp 0x91c6
0x000094c3      0f1f440000     nop dword [rax + rax]
0x000094c8      498b4550       mov rax, qword [r13 + 0x50]
0x000094cc      4b8d3c37       lea rdi, [r15 + r14]
0x000094d0      48c1e005       shl rax, 5
0x000094d4      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x000094db      440fb74810     movzx r9d, word [rax + 0x10]
0x000094e0      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x000094e6      83f801         cmp eax, 1                              ; ../coreutils-8.31/lib/vasnprintf.c:4758
0x000094e9      0f85cffdffff   jne 0x92be
0x000094ef      90             nop
0x000094f0      ffb510fcffff   push qword [rbp - 0x3f0]
0x000094f6      4151           push r9
0x000094f8      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]
0x000094ff      e9cdfdffff     jmp 0x92d1
0x00009504      0f1f4000       nop dword [rax]
0x00009508      498b4550       mov rax, qword [r13 + 0x50]
0x0000950c      4b8d3c37       lea rdi, [r15 + r14]
0x00009510      48c1e005       shl rax, 5
0x00009514      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x0000951b      440fbf4810     movsx r9d, word [rax + 0x10]
0x00009520      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00009526      83f801         cmp eax, 1
0x00009529      74c5           je 0x94f0
0x0000952b      83f802         cmp eax, 2
0x0000952e      0f8593fdffff   jne 0x92c7
0x00009534      0f1f4000       nop dword [rax]
0x00009538      4883ec08       sub rsp, 8
0x0000953c      ffb510fcffff   push qword [rbp - 0x3f0]
0x00009542      4151           push r9
0x00009544      8b854cfcffff   mov eax, dword [rbp - 0x3b4]
0x0000954a      50             push rax
0x0000954b      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]            ; ../coreutils-8.31/lib/vasnprintf.c:4623
0x00009552      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x00009559      4c89d6         mov rsi, r10
0x0000955c      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x00009563      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/vasnprintf.c:4624
0x00009568      31c0           xor eax, eax
0x0000956a      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x00009571      e84a82ffff     call sym.imp.__snprintf_chk
0x00009576      4883c420       add rsp, 0x20
0x0000957a      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x00009581      e940fcffff     jmp 0x91c6
0x00009586      662e0f1f8400.  nop word cs:[rax + rax]
0x00009590      498b4550       mov rax, qword [r13 + 0x50]
0x00009594      4b8d3c37       lea rdi, [r15 + r14]
0x00009598      48c1e005       shl rax, 5
0x0000959c      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x000095a3      440fb64810     movzx r9d, byte [rax + 0x10]
0x000095a8      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x000095ae      83f801         cmp eax, 1
0x000095b1      0f8507fdffff   jne 0x92be
0x000095b7      e934ffffff     jmp 0x94f0
0x000095bc      0f1f4000       nop dword [rax]
0x000095c0      498b4550       mov rax, qword [r13 + 0x50]
0x000095c4      4b8d3c37       lea rdi, [r15 + r14]
0x000095c8      48c1e005       shl rax, 5
0x000095cc      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x000095d3      440fbe4810     movsx r9d, byte [rax + 0x10]
0x000095d8      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x000095de      83f801         cmp eax, 1
0x000095e1      0f85d7fcffff   jne 0x92be
0x000095e7      e904ffffff     jmp 0x94f0
0x000095ec      0f1f4000       nop dword [rax]
0x000095f0      4c89e7         mov rdi, r12
0x000095f3      e8f883ffff     call sym.imp.malloc
0x000095f8      4885c0         test rax, rax
0x000095fb      4889c1         mov rcx, rax
0x000095fe      0f846df7ffff   je 0x8d71
0x00009604      4d85f6         test r14, r14
0x00009607      0f84b3000000   je 0x96c0
0x0000960d      84db           test bl, bl
0x0000960f      0f84ab000000   je 0x96c0
0x00009615      4c89fe         mov rsi, r15
0x00009618      4c89f2         mov rdx, r14
0x0000961b      4889c7         mov rdi, rax
0x0000961e      e8ad83ffff     call sym.imp.memcpy
0x00009623      4989c7         mov r15, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:1511
0x00009626      e9e5faffff     jmp 0x9110
0x0000962b      0f1f440000     nop dword [rax + rax]
0x00009630      4883ec08       sub rsp, 8
0x00009634      ffb510fcffff   push qword [rbp - 0x3f0]                ; ../coreutils-8.31/lib/xsize.h:-338
0x0000963a      4151           push r9
0x0000963c      e903ffffff     jmp 0x9544
0x00009641      0f1f80000000.  nop dword [rax]
0x00009648      ffb510fcffff   push qword [rbp - 0x3f0]
0x0000964e      4151           push r9
0x00009650      e9a3feffff     jmp 0x94f8
0x00009655      0f1f00         nop dword [rax]
0x00009658      c6470100       mov byte [rdi + 1], 0
0x0000965c      e9affaffff     jmp 0x9110
0x00009661      0f1f80000000.  nop dword [rax]
0x00009668      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000966c      0f85b4040000   jne 0x9b26
0x00009672      4c89f0         mov rax, r14
0x00009675      4883c001       add rax, 1
0x00009679      4889c3         mov rbx, rax
0x0000967c      0f8386000000   jae 0x9708
0x00009682      4983fcff       cmp r12, 0xffffffffffffffff
0x00009686      0f85d9f6ffff   jne 0x8d65
0x0000968c      4c89e3         mov rbx, r12
0x0000968f      43c6043725     mov byte [r15 + r14], 0x25              ; '%'
                                                                       ; [0x25:1]=0
0x00009694      4d8b4508       mov r8, qword [r13 + 8]
0x00009698      4983c558       add r13, 0x58
0x0000969c      498b4d00       mov rcx, qword [r13]
0x000096a0      48838500fcff.  add qword [rbp - 0x400], 1
0x000096a8      4c39c1         cmp rcx, r8
0x000096ab      0f8598f6ffff   jne 0x8d49
0x000096b1      4989de         mov r14, rbx
0x000096b4      e9faf7ffff     jmp 0x8eb3                              ; ../coreutils-8.31/lib/vasnprintf.c:1525
0x000096b9      0f1f80000000.  nop dword [rax]
0x000096c0      4989cf         mov r15, rcx
0x000096c3      e948faffff     jmp 0x9110                              ; ../coreutils-8.31/lib/vasnprintf.c:1514
0x000096c8      e82381ffff     call sym.imp.__errno_location
0x000096cd      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x000096d4      e9bef6ffff     jmp 0x8d97
0x000096d9      0f1f80000000.  nop dword [rax]
0x000096e0      89fa           mov edx, edi
0x000096e2      83ea12         sub edx, 0x12
0x000096e5      83fa04         cmp edx, 4
0x000096e8      0f8738040000   ja 0x9b26
0x000096ee      488d3df73b00.  lea rdi, [0x0000d2ec]
0x000096f5      488b4010       mov rax, qword [rax + 0x10]
0x000096f9      48631497       movsxd rdx, dword [rdi + rdx*4]
0x000096fd      4801fa         add rdx, rdi
0x00009700      ffe2           jmp rdx
0x00009702      660f1f440000   nop word [rax + rax]
0x00009708      4939c4         cmp r12, rax
0x0000970b      7382           jae 0x968f
0x0000970d      4d85e4         test r12, r12
0x00009710      0f85ca030000   jne 0x9ae0
0x00009716      4883f80c       cmp rax, 0xc
0x0000971a      0f87d2030000   ja 0x9af2
0x00009720      41bc0c000000   mov r12d, 0xc
0x00009726      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x0000972d      0f94c2         sete dl
0x00009730      4d85ff         test r15, r15
0x00009733      0f8467020000   je 0x99a0
0x00009739      84d2           test dl, dl
0x0000973b      0f855f020000   jne 0x99a0
0x00009741      4c89e6         mov rsi, r12
0x00009744      4c89ff         mov rdi, r15
0x00009747      e80483ffff     call sym.imp.realloc                    ; ../coreutils-8.31/lib/vasnprintf.c:1487
0x0000974c      4885c0         test rax, rax
0x0000974f      0f84f6000000   je 0x984b
0x00009755      4989c7         mov r15, rax
0x00009758      e932ffffff     jmp 0x968f
0x0000975d      0f1f00         nop dword [rax]
0x00009760      c78520fcffff.  mov dword [rbp - 0x3e0], 0
0x0000976a      e9e8f8ffff     jmp 0x9057
0x0000976f      90             nop
0x00009770      0f88eff5ffff   js 0x8d65
0x00009776      4d01e4         add r12, r12
0x00009779      4939c4         cmp r12, rax
0x0000977c      0f83d4f6ffff   jae 0x8e56
0x00009782      4883f8ff       cmp rax, 0xffffffffffffffff
0x00009786      0f84d9f5ffff   je 0x8d65
0x0000978c      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00009793      4989c4         mov r12, rax
0x00009796      0f94c2         sete dl
0x00009799      4d85ff         test r15, r15
0x0000979c      0f85c7f6ffff   jne 0x8e69
0x000097a2      660f1f440000   nop word [rax + rax]
0x000097a8      4c89e7         mov rdi, r12
0x000097ab      4c898520fcff.  mov qword [rbp - 0x3e0], r8
0x000097b2      889530fcffff   mov byte [rbp - 0x3d0], dl
0x000097b8      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x000097bf      e82c82ffff     call sym.imp.malloc
0x000097c4      4885c0         test rax, rax
0x000097c7      4989c1         mov r9, rax
0x000097ca      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]
0x000097d1      0fb69530fcff.  movzx edx, byte [rbp - 0x3d0]
0x000097d8      4c8b8520fcff.  mov r8, qword [rbp - 0x3e0]
0x000097df      0f8480f5ffff   je 0x8d65
0x000097e5      4885db         test rbx, rbx
0x000097e8      0f8402020000   je 0x99f0
0x000097ee      84d2           test dl, dl
0x000097f0      0f84fa010000   je 0x99f0
0x000097f6      4c89fe         mov rsi, r15
0x000097f9      4889da         mov rdx, rbx
0x000097fc      4889c7         mov rdi, rax
0x000097ff      4c898530fcff.  mov qword [rbp - 0x3d0], r8
0x00009806      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x0000980d      e8be81ffff     call sym.imp.memcpy
0x00009812      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]
0x00009819      4989c7         mov r15, rax
0x0000981c      4c8b8530fcff.  mov r8, qword [rbp - 0x3d0]
0x00009823      e97cf6ffff     jmp 0x8ea4
0x00009828      0f1f84000000.  nop dword [rax + rax]
0x00009830      4d89e6         mov r14, r12
0x00009833      e96cf6ffff     jmp 0x8ea4
0x00009838      0f1f84000000.  nop dword [rax + rax]
0x00009840      4c8930         mov qword [rax], r14
0x00009843      4c89f3         mov rbx, r14
0x00009846      e949feffff     jmp 0x9694
0x0000984b      e8a07fffff     call sym.imp.__errno_location
0x00009850      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x00009857      660f1f840000.  nop word [rax + rax]
0x00009860      4c89ff         mov rdi, r15
0x00009863      e8687fffff     call sym.imp.free
0x00009868      e916f5ffff     jmp 0x8d83
0x0000986d      0f1f00         nop dword [rax]
0x00009870      4c8b8d10fcff.  mov r9, qword [rbp - 0x3f0]
0x00009877      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x0000987e      4c89d6         mov rsi, r10
0x00009881      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x00009888      ba01000000     mov edx, 1
0x0000988d      b801000000     mov eax, 1
0x00009892      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x00009899      e8227fffff     call sym.imp.__snprintf_chk
0x0000989e      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x000098a5      e91cf9ffff     jmp 0x91c6
0x000098aa      660f1f440000   nop word [rax + rax]
0x000098b0      4883ec10       sub rsp, 0x10
0x000098b4      4c8b8d10fcff.  mov r9, qword [rbp - 0x3f0]
0x000098bb      db3c24         fstp xword [rsp]
0x000098be      e9d6f8ffff     jmp 0x9199
0x000098c3      0f1f440000     nop dword [rax + rax]
0x000098c8      0f8897f4ffff   js 0x8d65
0x000098ce      4d01e4         add r12, r12
0x000098d1      4939c4         cmp r12, rax
0x000098d4      0f83dff7ffff   jae 0x90b9
0x000098da      660f1f440000   nop word [rax + rax]
0x000098e0      4885d2         test rdx, rdx
0x000098e3      0f857cf4ffff   jne 0x8d65
0x000098e9      4883f8ff       cmp rax, 0xffffffffffffffff
0x000098ed      0f8472f4ffff   je 0x8d65
0x000098f3      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x000098fa      4989c4         mov r12, rax
0x000098fd      0f94c2         sete dl                                 ; string_fortified.h:-369
0x00009900      4d85ff         test r15, r15
0x00009903      0f85c3f7ffff   jne 0x90cc
0x00009909      0f1f80000000.  nop dword [rax]
0x00009910      4c89e7         mov rdi, r12
0x00009913      889538fcffff   mov byte [rbp - 0x3c8], dl
0x00009919      e8d280ffff     call sym.imp.malloc
0x0000991e      4885c0         test rax, rax
0x00009921      4889c1         mov rcx, rax
0x00009924      0fb69538fcff.  movzx edx, byte [rbp - 0x3c8]
0x0000992b      0f8434f4ffff   je 0x8d65                               ; ../coreutils-8.31/lib/vasnprintf.c:1528
0x00009931      4d85f6         test r14, r14
0x00009934      0f8496010000   je 0x9ad0
0x0000993a      84d2           test dl, dl
0x0000993c      0f848e010000   je 0x9ad0
0x00009942      4c89fe         mov rsi, r15
0x00009945      4c89f2         mov rdx, r14
0x00009948      4889c7         mov rdi, rax
0x0000994b      e88080ffff     call sym.imp.memcpy                     ; ../coreutils-8.31/lib/vasnprintf.c:1531
0x00009950      4989c7         mov r15, rax
0x00009953      e993f7ffff     jmp 0x90eb
0x00009958      0f1f84000000.  nop dword [rax + rax]
0x00009960      c6034c         mov byte [rbx], 0x4c                    ; 'L'
                                                                       ; [0x4c:1]=0
0x00009963      4883c301       add rbx, 1
0x00009967      e9aff6ffff     jmp 0x901b
0x0000996c      0f1f4000       nop dword [rax]
0x00009970      448830         mov byte [rax], r14b
0x00009973      4c89f3         mov rbx, r14
0x00009976      e919fdffff     jmp 0x9694
0x0000997b      0f1f440000     nop dword [rax + rax]
0x00009980      448930         mov dword [rax], r14d
0x00009983      4c89f3         mov rbx, r14
0x00009986      e909fdffff     jmp 0x9694
0x0000998b      0f1f440000     nop dword [rax + rax]
0x00009990      66448930       mov word [rax], r14w
0x00009994      4c89f3         mov rbx, r14
0x00009997      e9f8fcffff     jmp 0x9694
0x0000999c      0f1f4000       nop dword [rax]
0x000099a0      4c89e7         mov rdi, r12
0x000099a3      889538fcffff   mov byte [rbp - 0x3c8], dl
0x000099a9      e84280ffff     call sym.imp.malloc
0x000099ae      4885c0         test rax, rax
0x000099b1      4889c1         mov rcx, rax
0x000099b4      0fb69538fcff.  movzx edx, byte [rbp - 0x3c8]
0x000099bb      0f84a4f3ffff   je 0x8d65                               ; stdio2.h:-339
0x000099c1      4d85f6         test r14, r14
0x000099c4      0f843a010000   je 0x9b04
0x000099ca      84d2           test dl, dl
0x000099cc      0f8432010000   je 0x9b04
0x000099d2      4c89fe         mov rsi, r15
0x000099d5      4c89f2         mov rdx, r14
0x000099d8      4889c7         mov rdi, rax
0x000099db      e8f07fffff     call sym.imp.memcpy
0x000099e0      4989c7         mov r15, rax
0x000099e3      e9a7fcffff     jmp 0x968f
0x000099e8      0f1f84000000.  nop dword [rax + rax]
0x000099f0      4d89cf         mov r15, r9
0x000099f3      e9acf4ffff     jmp 0x8ea4
0x000099f8      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/vasnprintf.c:5157
0x00009a00      4883ec08       sub rsp, 8
0x00009a04      ffb510fcffff   push qword [rbp - 0x3f0]
0x00009a0a      e976faffff     jmp 0x9485
0x00009a0f      90             nop
0x00009a10      4883ec08       sub rsp, 8
0x00009a14      ffb510fcffff   push qword [rbp - 0x3f0]
0x00009a1a      4883ec10       sub rsp, 0x10
0x00009a1e      db3c24         fstp xword [rsp]
0x00009a21      e925fbffff     jmp 0x954b
0x00009a26      662e0f1f8400.  nop word cs:[rax + rax]
0x00009a30      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x00009a37      8bbddcfbffff   mov edi, dword [rbp - 0x424]
0x00009a3d      4863d9         movsxd rbx, ecx
0x00009a40      4c01f3         add rbx, r14
0x00009a43      8938           mov dword [rax], edi
0x00009a45      e94afcffff     jmp 0x9694
0x00009a4a      660f1f440000   nop word [rax + rax]
0x00009a50      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00009a57      7409           je 0x9a62
0x00009a59      4d85ff         test r15, r15
0x00009a5c      0f85b7000000   jne 0x9b19
0x00009a62      488b85e0fbff.  mov rax, qword [rbp - 0x420]
0x00009a69      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasnprintf.c:5198
0x00009a6c      7408           je 0x9a76
0x00009a6e      4889c7         mov rdi, rax
0x00009a71      e85a7dffff     call sym.imp.free
0x00009a76      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x00009a7d      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x00009a84      4883c020       add rax, 0x20                           ; "@"
0x00009a88      4839c7         cmp rdi, rax
0x00009a8b      7405           je 0x9a92
0x00009a8d      e83e7dffff     call sym.imp.free
0x00009a92      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x00009a99      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x00009aa0      4883c010       add rax, 0x10
0x00009aa4      4839c7         cmp rdi, rax
0x00009aa7      7405           je 0x9aae
0x00009aa9      e8227dffff     call sym.imp.free
0x00009aae      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x00009ab5      4531ff         xor r15d, r15d
0x00009ab8      c7004b000000   mov dword [rax], 0x4b                   ; 'K'
                                                                       ; [0x4b:4]=0
0x00009abe      e91cf3ffff     jmp 0x8ddf
0x00009ac3      0f1f440000     nop dword [rax + rax]
0x00009ac8      4531ff         xor r15d, r15d
0x00009acb      e90ff3ffff     jmp 0x8ddf
0x00009ad0      4989cf         mov r15, rcx
0x00009ad3      e913f6ffff     jmp 0x90eb                              ; ../coreutils-8.31/lib/vasnprintf.c:1273
0x00009ad8      0f1f84000000.  nop dword [rax + rax]
0x00009ae0      0f887ff2ffff   js 0x8d65
0x00009ae6      4d01e4         add r12, r12
0x00009ae9      4939c4         cmp r12, rax
0x00009aec      0f8334fcffff   jae 0x9726
0x00009af2      4883f8ff       cmp rax, 0xffffffffffffffff
0x00009af6      0f8469f2ffff   je 0x8d65
0x00009afc      4989c4         mov r12, rax
0x00009aff      e922fcffff     jmp 0x9726
0x00009b04      4989cf         mov r15, rcx
0x00009b07      e983fbffff     jmp 0x968f
0x00009b0c      4c89ff         mov rdi, r15
0x00009b0f      e8bc7cffff     call sym.imp.free
0x00009b14      e949f8ffff     jmp 0x9362
0x00009b19      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/vasnprintf.c:1275
0x00009b1c      e8af7cffff     call sym.imp.free
0x00009b21      e93cffffff     jmp 0x9a62
0x00009b26      e8b57cffff     call sym.imp.abort
0x00009b2b      0f1f440000     nop dword [rax + rax]
0x00009b30      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x00009b37      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x00009b3e      4883c020       add rax, 0x20                           ; "@"
0x00009b42      4839c7         cmp rdi, rax
0x00009b45      7405           je 0x9b4c
0x00009b47      e8847cffff     call sym.imp.free
0x00009b4c      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x00009b53      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x00009b5a      4883c010       add rax, 0x10
0x00009b5e      4839c7         cmp rdi, rax
0x00009b61      7405           je 0x9b68
0x00009b63      e8687cffff     call sym.imp.free
0x00009b68      e8837cffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/vasnprintf.c:5040
0x00009b6d      4531ff         xor r15d, r15d
0x00009b70      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x2d700000
0x00009b76      e964f2ffff     jmp 0x8ddf
0x00009b7b      4c89f3         mov rbx, r14
0x00009b7e      31c0           xor eax, eax
0x00009b80      4883c301       add rbx, 1
0x00009b84      0f8206010000   jb 0x9c90
0x00009b8a      4939dc         cmp r12, rbx
0x00009b8d      734d           jae 0x9bdc
0x00009b8f      4d85e4         test r12, r12
0x00009b92      0f8531010000   jne 0x9cc9                              ; ../coreutils-8.31/lib/vasnprintf.c:5048
0x00009b98      4883fb0c       cmp rbx, 0xc
0x00009b9c      0f870c010000   ja 0x9cae
0x00009ba2      41bc0c000000   mov r12d, 0xc
0x00009ba8      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00009baf      410f94c5       sete r13b
0x00009bb3      4d85ff         test r15, r15
0x00009bb6      0f84a0000000   je 0x9c5c
0x00009bbc      4584ed         test r13b, r13b
0x00009bbf      0f8597000000   jne 0x9c5c
0x00009bc5      4c89e6         mov rsi, r12
0x00009bc8      4c89ff         mov rdi, r15
0x00009bcb      e8807effff     call sym.imp.realloc
0x00009bd0      4885c0         test rax, rax
0x00009bd3      0f8472fcffff   je 0x984b
0x00009bd9      4989c7         mov r15, rax
0x00009bdc      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00009be3      43c6043700     mov byte [r15 + r14], 0
0x00009be8      7417           je 0x9c01
0x00009bea      4939dc         cmp r12, rbx
0x00009bed      7612           jbe 0x9c01
0x00009bef      4c89ff         mov rdi, r15
0x00009bf2      4889de         mov rsi, rbx
0x00009bf5      e8567effff     call sym.imp.realloc
0x00009bfa      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasnprintf.c:5061
0x00009bfd      4c0f45f8       cmovne r15, rax
0x00009c01      488b85e0fbff.  mov rax, qword [rbp - 0x420]
0x00009c08      4885c0         test rax, rax
0x00009c0b      7408           je 0x9c15
0x00009c0d      4889c7         mov rdi, rax
0x00009c10      e8bb7bffff     call sym.imp.free
0x00009c15      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x00009c1c      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x00009c23      4883c020       add rax, 0x20                           ; "@"
0x00009c27      4839c7         cmp rdi, rax
0x00009c2a      7405           je 0x9c31
0x00009c2c      e89f7bffff     call sym.imp.free
0x00009c31      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x00009c38      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x00009c3f      4883c010       add rax, 0x10
0x00009c43      4839c7         cmp rdi, rax
0x00009c46      7405           je 0x9c4d
0x00009c48      e8837bffff     call sym.imp.free
0x00009c4d      488b85e8fbff.  mov rax, qword [rbp - 0x418]
0x00009c54      4c8930         mov qword [rax], r14
0x00009c57      e983f1ffff     jmp 0x8ddf
0x00009c5c      4c89e7         mov rdi, r12
0x00009c5f      e88c7dffff     call sym.imp.malloc
0x00009c64      4885c0         test rax, rax
0x00009c67      4889c1         mov rcx, rax
0x00009c6a      0f84f5f0ffff   je 0x8d65
0x00009c70      4d85f6         test r14, r14
0x00009c73      746b           je 0x9ce0
0x00009c75      4584ed         test r13b, r13b
0x00009c78      7466           je 0x9ce0
0x00009c7a      4c89fe         mov rsi, r15
0x00009c7d      4c89f2         mov rdx, r14
0x00009c80      4889c7         mov rdi, rax
0x00009c83      e8487dffff     call sym.imp.memcpy
0x00009c88      4989c7         mov r15, rax
0x00009c8b      e94cffffff     jmp 0x9bdc                              ; ../coreutils-8.31/lib/vasnprintf.c:4732
0x00009c90      4983fcff       cmp r12, 0xffffffffffffffff
0x00009c94      b801000000     mov eax, 1
0x00009c99      0f843dffffff   je 0x9bdc
0x00009c9f      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/vasnprintf.c:4421
0x00009ca2      0f84bdf0ffff   je 0x8d65
0x00009ca8      0f88b7f0ffff   js 0x8d65
0x00009cae      4885c0         test rax, rax
0x00009cb1      0f85aef0ffff   jne 0x8d65
0x00009cb7      4883fbff       cmp rbx, 0xffffffffffffffff
0x00009cbb      0f84a4f0ffff   je 0x8d65
0x00009cc1      4989dc         mov r12, rbx
0x00009cc4      e9dffeffff     jmp 0x9ba8
0x00009cc9      0f8896f0ffff   js 0x8d65
0x00009ccf      4d01e4         add r12, r12
0x00009cd2      4939dc         cmp r12, rbx
0x00009cd5      0f83cdfeffff   jae 0x9ba8
0x00009cdb      ebd1           jmp 0x9cae
0x00009cdd      0f1f00         nop dword [rax]
0x00009ce0      4989cf         mov r15, rcx
0x00009ce3      e9f4feffff     jmp 0x9bdc
0x00009ce8      4983fcff       cmp r12, 0xffffffffffffffff
0x00009cec      0f841ef4ffff   je 0x9110
0x00009cf2      e97af0ffff     jmp 0x8d71
0x00009cf7      e8e47bffff     call sym.imp.__stack_chk_fail
0x00009cfc      4983fcff       cmp r12, 0xffffffffffffffff
0x00009d00      ba01000000     mov edx, 1
0x00009d05      0f84e0f3ffff   je 0x90eb
0x00009d0b      4d85e4         test r12, r12
0x00009d0e      0f8451f0ffff   je 0x8d65
0x00009d14      0f89c6fbffff   jns 0x98e0
0x00009d1a      e946f0ffff     jmp 0x8d65
0x00009d1f      90             nop
;-- printf_fetchargs:
0x00009d20      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/printf-args.c:37
0x00009d24      488b4608       mov rax, qword [rsi + 8]
0x00009d28      7463           je 0x9d8d
0x00009d2a      4c8d05df3500.  lea r8, [0x0000d310]                    ; ../coreutils-8.31/lib/printf-args.c:42
0x00009d31      4c8d15383600.  lea r10, obj.wide_null_string.2696      ; 0xd370 ; U"(NULL)"
0x00009d38      4c8d0dc13500.  lea r9, [0x0000d300]                    ; "(NULL)"
0x00009d3f      31c9           xor ecx, ecx
0x00009d41      0f1f80000000.  nop dword [rax]
0x00009d48      833816         cmp dword [rax], 0x16
0x00009d4b      7743           ja 0x9d90
0x00009d4d      8b10           mov edx, dword [rax]
0x00009d4f      49631490       movsxd rdx, dword [r8 + rdx*4]
0x00009d53      4c01c2         add rdx, r8
0x00009d56      ffe2           jmp rdx
0x00009d58      0f1f84000000.  nop dword [rax + rax]
0x00009d60      488b5708       mov rdx, qword [rdi + 8]                ; stddef.h:38      && !defined(__need_wint_t))
0x00009d64      4883c20f       add rdx, 0xf
0x00009d68      4883e2f0       and rdx, 0xfffffffffffffff0
0x00009d6c      4c8d5a10       lea r11, [rdx + 0x10]
0x00009d70      4c895f08       mov qword [rdi + 8], r11
0x00009d74      db2a           fld xword [rdx]
0x00009d76      db7810         fstp xword [rax + 0x10]
0x00009d79      0f1f80000000.  nop dword [rax]
0x00009d80      4883c101       add rcx, 1
0x00009d84      4883c020       add rax, 0x20                           ; stddef.h:-9 ; "@"
0x00009d88      48390e         cmp qword [rsi], rcx
0x00009d8b      77bb           ja 0x9d48
0x00009d8d      31c0           xor eax, eax
0x00009d8f      c3             ret
0x00009d90      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00009d95      c3             ret
0x00009d96      448b1f         mov r11d, dword [rdi]
0x00009d99      4183fb2f       cmp r11d, 0x2f
0x00009d9d      0f8737010000   ja 0x9eda
0x00009da3      4489da         mov edx, r11d
0x00009da6      48035710       add rdx, qword [rdi + 0x10]             ; stddef.h:-54
0x00009daa      4183c308       add r11d, 8
0x00009dae      44891f         mov dword [rdi], r11d
0x00009db1      488b12         mov rdx, qword [rdx]
0x00009db4      48895010       mov qword [rax + 0x10], rdx
0x00009db8      ebc6           jmp 0x9d80
0x00009dba      448b1f         mov r11d, dword [rdi]
0x00009dbd      4183fb2f       cmp r11d, 0x2f
0x00009dc1      0f8735010000   ja 0x9efc
0x00009dc7      4489da         mov edx, r11d
0x00009dca      48035710       add rdx, qword [rdi + 0x10]
0x00009dce      4183c308       add r11d, 8
0x00009dd2      44891f         mov dword [rdi], r11d
0x00009dd5      8b12           mov edx, dword [rdx]
0x00009dd7      895010         mov dword [rax + 0x10], edx
0x00009dda      eba4           jmp 0x9d80
0x00009ddc      448b1f         mov r11d, dword [rdi]
0x00009ddf      4183fb2f       cmp r11d, 0x2f
0x00009de3      0f8702010000   ja 0x9eeb
0x00009de9      4489da         mov edx, r11d                           ; stddef.h:-47
0x00009dec      48035710       add rdx, qword [rdi + 0x10]
0x00009df0      4183c308       add r11d, 8
0x00009df4      44891f         mov dword [rdi], r11d
0x00009df7      8b12           mov edx, dword [rdx]
0x00009df9      885010         mov byte [rax + 0x10], dl
0x00009dfc      eb82           jmp 0x9d80
0x00009dfe      448b1f         mov r11d, dword [rdi]
0x00009e01      4183fb2f       cmp r11d, 0x2f
0x00009e05      0f879f000000   ja 0x9eaa
0x00009e0b      4489da         mov edx, r11d
0x00009e0e      48035710       add rdx, qword [rdi + 0x10]
0x00009e12      4183c308       add r11d, 8
0x00009e16      44891f         mov dword [rdi], r11d
0x00009e19      8b12           mov edx, dword [rdx]
0x00009e1b      66895010       mov word [rax + 0x10], dx
0x00009e1f      e95cffffff     jmp 0x9d80
0x00009e24      448b1f         mov r11d, dword [rdi]
0x00009e27      4183fb2f       cmp r11d, 0x2f
0x00009e2b      0f878a000000   ja 0x9ebb
0x00009e31      4489da         mov edx, r11d
0x00009e34      48035710       add rdx, qword [rdi + 0x10]
0x00009e38      4183c308       add r11d, 8
0x00009e3c      44891f         mov dword [rdi], r11d
0x00009e3f      488b12         mov rdx, qword [rdx]
0x00009e42      4885d2         test rdx, rdx
0x00009e45      490f44d1       cmove rdx, r9                           ; stddef.h:-24
0x00009e49      48895010       mov qword [rax + 0x10], rdx
0x00009e4d      e92effffff     jmp 0x9d80
0x00009e52      448b5f04       mov r11d, dword [rdi + 4]
0x00009e56      4181fbaf0000.  cmp r11d, 0xaf
0x00009e5d      0f87aa000000   ja 0x9f0d
0x00009e63      4489da         mov edx, r11d
0x00009e66      48035710       add rdx, qword [rdi + 0x10]
0x00009e6a      4183c310       add r11d, 0x10
0x00009e6e      44895f04       mov dword [rdi + 4], r11d
0x00009e72      f20f1002       movsd xmm0, qword [rdx]
0x00009e76      f20f114010     movsd qword [rax + 0x10], xmm0
0x00009e7b      e900ffffff     jmp 0x9d80
0x00009e80      448b1f         mov r11d, dword [rdi]
0x00009e83      4183fb2f       cmp r11d, 0x2f
0x00009e87      7743           ja 0x9ecc
0x00009e89      4489da         mov edx, r11d
0x00009e8c      48035710       add rdx, qword [rdi + 0x10]
0x00009e90      4183c308       add r11d, 8
0x00009e94      44891f         mov dword [rdi], r11d
0x00009e97      488b12         mov rdx, qword [rdx]
0x00009e9a      4885d2         test rdx, rdx
0x00009e9d      490f44d2       cmove rdx, r10
0x00009ea1      48895010       mov qword [rax + 0x10], rdx
0x00009ea5      e9d6feffff     jmp 0x9d80
0x00009eaa      488b5708       mov rdx, qword [rdi + 8]
0x00009eae      4c8d5a08       lea r11, [rdx + 8]
0x00009eb2      4c895f08       mov qword [rdi + 8], r11
0x00009eb6      e95effffff     jmp 0x9e19
0x00009ebb      488b5708       mov rdx, qword [rdi + 8]
0x00009ebf      4c8d5a08       lea r11, [rdx + 8]
0x00009ec3      4c895f08       mov qword [rdi + 8], r11
0x00009ec7      e973ffffff     jmp 0x9e3f
0x00009ecc      488b5708       mov rdx, qword [rdi + 8]
0x00009ed0      4c8d5a08       lea r11, [rdx + 8]
0x00009ed4      4c895f08       mov qword [rdi + 8], r11
0x00009ed8      ebbd           jmp 0x9e97
0x00009eda      488b5708       mov rdx, qword [rdi + 8]
0x00009ede      4c8d5a08       lea r11, [rdx + 8]
0x00009ee2      4c895f08       mov qword [rdi + 8], r11
0x00009ee6      e9c6feffff     jmp 0x9db1
0x00009eeb      488b5708       mov rdx, qword [rdi + 8]
0x00009eef      4c8d5a08       lea r11, [rdx + 8]
0x00009ef3      4c895f08       mov qword [rdi + 8], r11
0x00009ef7      e9fbfeffff     jmp 0x9df7
0x00009efc      488b5708       mov rdx, qword [rdi + 8]
0x00009f00      4c8d5a08       lea r11, [rdx + 8]
0x00009f04      4c895f08       mov qword [rdi + 8], r11
0x00009f08      e9c8feffff     jmp 0x9dd5
0x00009f0d      488b5708       mov rdx, qword [rdi + 8]
0x00009f11      4c8d5a08       lea r11, [rdx + 8]
0x00009f15      4c895f08       mov qword [rdi + 8], r11
0x00009f19      e954ffffff     jmp 0x9e72
0x00009f1e      6690           nop
;-- printf_parse:
0x00009f20      4157           push r15
0x00009f22      4156           push r14
0x00009f24      488d4e20       lea rcx, [rsi + 0x20]
0x00009f28      4155           push r13
0x00009f2a      4154           push r12
0x00009f2c      488d4210       lea rax, [rdx + 0x10]
0x00009f30      55             push rbp
0x00009f31      53             push rbx
0x00009f32      4989f6         mov r14, rsi
0x00009f35      4989d7         mov r15, rdx
0x00009f38      31db           xor ebx, ebx
0x00009f3a      41b907000000   mov r9d, 7
0x00009f40      4883ec58       sub rsp, 0x58
0x00009f44      41ba07000000   mov r10d, 7
0x00009f4a      48c706000000.  mov qword [rsi], 0
0x00009f51      48894e08       mov qword [rsi + 8], rcx
0x00009f55      48894c2428     mov qword [rsp + 0x28], rcx
0x00009f5a      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00009f61      48c702000000.  mov qword [rdx], 0
0x00009f68      4889442408     mov qword [rsp + 8], rax
0x00009f6d      48894208       mov qword [rdx + 8], rax
0x00009f71      48c744241800.  mov qword [rsp + 0x18], 0
0x00009f7a      48c744241000.  mov qword [rsp + 0x10], 0
0x00009f83      48c744242000.  mov qword [rsp + 0x20], 0
0x00009f8c      eb0d           jmp 0x9f9b
0x00009f8e      6690           nop
0x00009f90      3c25           cmp al, 0x25
0x00009f92      488d6f01       lea rbp, [rdi + 1]
0x00009f96      7440           je 0x9fd8
0x00009f98      4889ef         mov rdi, rbp
0x00009f9b      0fb607         movzx eax, byte [rdi]
0x00009f9e      84c0           test al, al
0x00009fa0      75ee           jne 0x9f90
0x00009fa2      488d049b       lea rax, [rbx + rbx*4]
0x00009fa6      488d0443       lea rax, [rbx + rax*2]
0x00009faa      48893cc1       mov qword [rcx + rax*8], rdi
0x00009fae      488b442410     mov rax, qword [rsp + 0x10]
0x00009fb3      49894610       mov qword [r14 + 0x10], rax
0x00009fb7      488b442418     mov rax, qword [rsp + 0x18]
0x00009fbc      49894618       mov qword [r14 + 0x18], rax
0x00009fc0      31c0           xor eax, eax
0x00009fc2      4883c458       add rsp, 0x58
0x00009fc6      5b             pop rbx
0x00009fc7      5d             pop rbp
0x00009fc8      415c           pop r12
0x00009fca      415d           pop r13
0x00009fcc      415e           pop r14
0x00009fce      415f           pop r15
0x00009fd0      c3             ret
0x00009fd1      0f1f80000000.  nop dword [rax]
0x00009fd8      488d049b       lea rax, [rbx + rbx*4]
0x00009fdc      4d89c5         mov r13, r8
0x00009fdf      488d0443       lea rax, [rbx + rax*2]
0x00009fe3      4c8d24c1       lea r12, [rcx + rax*8]
0x00009fe7      49893c24       mov qword [r12], rdi
0x00009feb      41c744241000.  mov dword [r12 + 0x10], 0
0x00009ff4      49c744241800.  mov qword [r12 + 0x18], 0
0x00009ffd      49c744242000.  mov qword [r12 + 0x20], 0
0x0000a006      4d89442428     mov qword [r12 + 0x28], r8
0x0000a00b      49c744243000.  mov qword [r12 + 0x30], 0
0x0000a014      49c744243800.  mov qword [r12 + 0x38], 0
0x0000a01d      4d89442440     mov qword [r12 + 0x40], r8
0x0000a022      4d89442450     mov qword [r12 + 0x50], r8
0x0000a027      0fb65f01       movzx ebx, byte [rdi + 1]
0x0000a02b      8d43d0         lea eax, [rbx - 0x30]
0x0000a02e      3c09           cmp al, 9
0x0000a030      773c           ja 0xa06e
0x0000a032      e933040000     jmp 0xa46a
0x0000a037      660f1f840000.  nop word [rax + rax]
0x0000a040      80fb2d         cmp bl, 0x2d
0x0000a043      7443           je 0xa088
0x0000a045      80fb2b         cmp bl, 0x2b
0x0000a048      7446           je 0xa090
0x0000a04a      80fb20         cmp bl, 0x20                            ; "@"
0x0000a04d      7451           je 0xa0a0
0x0000a04f      80fb23         cmp bl, 0x23
0x0000a052      745c           je 0xa0b0
0x0000a054      80fb30         cmp bl, 0x30
0x0000a057      7467           je 0xa0c0
0x0000a059      80fb49         cmp bl, 0x49
0x0000a05c      7572           jne 0xa0d0
0x0000a05e      41834c241040   or dword [r12 + 0x10], 0x40             ; segment.PHDR
                                                                       ; [0x40:4]=6
0x0000a064      0f1f4000       nop dword [rax]
0x0000a068      0fb618         movzx ebx, byte [rax]
0x0000a06b      4889c5         mov rbp, rax
0x0000a06e      488d4501       lea rax, [rbp + 1]
0x0000a072      80fb27         cmp bl, 0x27
0x0000a075      4889c2         mov rdx, rax
0x0000a078      75c6           jne 0xa040
0x0000a07a      41834c241001   or dword [r12 + 0x10], 1
0x0000a080      ebe6           jmp 0xa068
0x0000a082      660f1f440000   nop word [rax + rax]
0x0000a088      41834c241002   or dword [r12 + 0x10], 2
0x0000a08e      ebd8           jmp 0xa068
0x0000a090      41834c241004   or dword [r12 + 0x10], 4
0x0000a096      ebd0           jmp 0xa068
0x0000a098      0f1f84000000.  nop dword [rax + rax]
0x0000a0a0      41834c241008   or dword [r12 + 0x10], 8
0x0000a0a6      ebc0           jmp 0xa068
0x0000a0a8      0f1f84000000.  nop dword [rax + rax]
0x0000a0b0      41834c241010   or dword [r12 + 0x10], 0x10             ; [0x10:4]=0x3e0003
0x0000a0b6      ebb0           jmp 0xa068
0x0000a0b8      0f1f84000000.  nop dword [rax + rax]
0x0000a0c0      41834c241020   or dword [r12 + 0x10], 0x20             ; [0x20:4]=64 ; "@"
0x0000a0c6      eba0           jmp 0xa068
0x0000a0c8      0f1f84000000.  nop dword [rax + rax]
0x0000a0d0      80fb2a         cmp bl, 0x2a
0x0000a0d3      0f84b0010000   je 0xa289
0x0000a0d9      8d4bd0         lea ecx, [rbx - 0x30]
0x0000a0dc      80f909         cmp cl, 9
0x0000a0df      0f8612040000   jbe 0xa4f7
0x0000a0e5      80fb2e         cmp bl, 0x2e
0x0000a0e8      0f84d1020000   je 0xa3bf
0x0000a0ee      31c0           xor eax, eax
0x0000a0f0      be01000000     mov esi, 1
0x0000a0f5      eb30           jmp 0xa127
0x0000a0f7      660f1f840000.  nop word [rax + rax]
0x0000a100      80fb4c         cmp bl, 0x4c
0x0000a103      743b           je 0xa140
0x0000a105      80fb6c         cmp bl, 0x6c
0x0000a108      7416           je 0xa120
0x0000a10a      80fb6a         cmp bl, 0x6a
0x0000a10d      7411           je 0xa120
0x0000a10f      89da           mov edx, ebx
0x0000a111      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x0000a114      80fa5a         cmp dl, 0x5a
0x0000a117      7407           je 0xa120
0x0000a119      80fb74         cmp bl, 0x74
0x0000a11c      752a           jne 0xa148
0x0000a11e      6690           nop
0x0000a120      83c008         add eax, 8
0x0000a123      0fb65d00       movzx ebx, byte [rbp]
0x0000a127      4883c501       add rbp, 1
0x0000a12b      80fb68         cmp bl, 0x68
0x0000a12e      75d0           jne 0xa100
0x0000a130      89c1           mov ecx, eax
0x0000a132      89f2           mov edx, esi
0x0000a134      83e101         and ecx, 1
0x0000a137      d3e2           shl edx, cl
0x0000a139      09d0           or eax, edx
0x0000a13b      ebe6           jmp 0xa123
0x0000a13d      0f1f00         nop dword [rax]
0x0000a140      83c804         or eax, 4
0x0000a143      ebde           jmp 0xa123
0x0000a145      0f1f00         nop dword [rax]
0x0000a148      8d53db         lea edx, [rbx - 0x25]
0x0000a14b      80fa53         cmp dl, 0x53
0x0000a14e      0f8717060000   ja 0xa76b
0x0000a154      488d0d313200.  lea rcx, [0x0000d38c]
0x0000a15b      0fb6d2         movzx edx, dl
0x0000a15e      48631491       movsxd rdx, dword [rcx + rdx*4]
0x0000a162      4801ca         add rdx, rcx
0x0000a165      ffe2           jmp rdx
0x0000a167      41bb10000000   mov r11d, 0x10
0x0000a16d      bb73000000     mov ebx, 0x73                           ; 's'
0x0000a172      660f1f440000   nop word [rax + rax]
0x0000a178      4983fdff       cmp r13, 0xffffffffffffffff
0x0000a17c      0f84b5060000   je 0xa837
0x0000a182      4d896c2450     mov qword [r12 + 0x50], r13
0x0000a187      4d39e9         cmp r9, r13
0x0000a18a      498b4f08       mov rcx, qword [r15 + 8]
0x0000a18e      0f861c060000   jbe 0xa7b0
0x0000a194      498b07         mov rax, qword [r15]
0x0000a197      4889c2         mov rdx, rax
0x0000a19a      48c1e205       shl rdx, 5
0x0000a19e      4801ca         add rdx, rcx
0x0000a1a1      4c39e8         cmp rax, r13
0x0000a1a4      7720           ja 0xa1c6
0x0000a1a6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a1b0      4883c001       add rax, 1
0x0000a1b4      c70200000000   mov dword [rdx], 0
0x0000a1ba      4883c220       add rdx, 0x20                           ; "@"
0x0000a1be      4c39e8         cmp rax, r13
0x0000a1c1      76ed           jbe 0xa1b0
0x0000a1c3      498907         mov qword [r15], rax
0x0000a1c6      49c1e505       shl r13, 5
0x0000a1ca      4a8d0429       lea rax, [rcx + r13]
0x0000a1ce      8b10           mov edx, dword [rax]
0x0000a1d0      85d2           test edx, edx
0x0000a1d2      0f85cb050000   jne 0xa7a3
0x0000a1d8      448918         mov dword [rax], r11d
0x0000a1db      41885c2448     mov byte [r12 + 0x48], bl
0x0000a1e0      498b06         mov rax, qword [r14]
0x0000a1e3      49896c2408     mov qword [r12 + 8], rbp
0x0000a1e8      488d5801       lea rbx, [rax + 1]
0x0000a1ec      4939da         cmp r10, rbx
0x0000a1ef      49891e         mov qword [r14], rbx
0x0000a1f2      0f8788000000   ja 0xa280
0x0000a1f8      4d85d2         test r10, r10
0x0000a1fb      0f88a6090000   js 0xaba7
0x0000a201      4d01d2         add r10, r10
0x0000a204      48b8bae8a28b.  movabs rax, 0x2e8ba2e8ba2e8ba
0x0000a20e      4939c2         cmp r10, rax
0x0000a211      0f8790090000   ja 0xaba7
0x0000a217      4b8d0492       lea rax, [r10 + r10*4]
0x0000a21b      498b7e08       mov rdi, qword [r14 + 8]
0x0000a21f      48397c2428     cmp qword [rsp + 0x28], rdi
0x0000a224      4c894c2440     mov qword [rsp + 0x40], r9
0x0000a229      4c89542438     mov qword [rsp + 0x38], r10
0x0000a22e      498d0442       lea rax, [r10 + rax*2]
0x0000a232      4c89442430     mov qword [rsp + 0x30], r8
0x0000a237      488d34c50000.  lea rsi, [rax*8]
0x0000a23f      0f84b8060000   je 0xa8fd
0x0000a245      e80678ffff     call sym.imp.realloc
0x0000a24a      4885c0         test rax, rax
0x0000a24d      4889c1         mov rcx, rax
0x0000a250      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000a255      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000a25a      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x0000a25f      0f8442090000   je 0xaba7
0x0000a265      488b442428     mov rax, qword [rsp + 0x28]
0x0000a26a      493b4608       cmp rax, qword [r14 + 8]
0x0000a26e      498b1e         mov rbx, qword [r14]
0x0000a271      0f84a9060000   je 0xa920
0x0000a277      49894e08       mov qword [r14 + 8], rcx
0x0000a27b      e918fdffff     jmp 0x9f98
0x0000a280      498b4e08       mov rcx, qword [r14 + 8]
0x0000a284      e90ffdffff     jmp 0x9f98
0x0000a289      488b742410     mov rsi, qword [rsp + 0x10]
0x0000a28e      b901000000     mov ecx, 1
0x0000a293      49896c2418     mov qword [r12 + 0x18], rbp
0x0000a298      4989442420     mov qword [r12 + 0x20], rax
0x0000a29d      4885f6         test rsi, rsi
0x0000a2a0      480f45ce       cmovne rcx, rsi
0x0000a2a4      48894c2410     mov qword [rsp + 0x10], rcx
0x0000a2a9      0fb64d01       movzx ecx, byte [rbp + 1]
0x0000a2ad      8d71d0         lea esi, [rcx - 0x30]
0x0000a2b0      4080fe09       cmp sil, 9
0x0000a2b4      0f86db020000   jbe 0xa595
0x0000a2ba      488b742420     mov rsi, qword [rsp + 0x20]
0x0000a2bf      4883feff       cmp rsi, 0xffffffffffffffff
0x0000a2c3      488d5601       lea rdx, [rsi + 1]
0x0000a2c7      4989742428     mov qword [r12 + 0x28], rsi
0x0000a2cc      0f8499040000   je 0xa76b
0x0000a2d2      488b5c2420     mov rbx, qword [rsp + 0x20]
0x0000a2d7      4889c5         mov rbp, rax
0x0000a2da      4889542420     mov qword [rsp + 0x20], rdx
0x0000a2df      4939d9         cmp r9, rbx
0x0000a2e2      498b4f08       mov rcx, qword [r15 + 8]
0x0000a2e6      0f8776060000   ja 0xa962
0x0000a2ec      4d01c9         add r9, r9
0x0000a2ef      488d4301       lea rax, [rbx + 1]
0x0000a2f3      4939d9         cmp r9, rbx
0x0000a2f6      4c0f46c8       cmovbe r9, rax
0x0000a2fa      48b8ffffffff.  movabs rax, 0x7ffffffffffffff           ; 576460752303423487
0x0000a304      4939c1         cmp r9, rax
0x0000a307      0f879e080000   ja 0xabab
0x0000a30d      4c89ce         mov rsi, r9
0x0000a310      4c894c2440     mov qword [rsp + 0x40], r9
0x0000a315      4c89542438     mov qword [rsp + 0x38], r10
0x0000a31a      48c1e605       shl rsi, 5
0x0000a31e      48394c2408     cmp qword [rsp + 8], rcx
0x0000a323      4c89442430     mov qword [rsp + 0x30], r8
0x0000a328      0f8413070000   je 0xaa41
0x0000a32e      4889cf         mov rdi, rcx
0x0000a331      e81a77ffff     call sym.imp.realloc
0x0000a336      498b5708       mov rdx, qword [r15 + 8]
0x0000a33a      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000a33f      4889c1         mov rcx, rax
0x0000a342      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000a347      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x0000a34c      4885c9         test rcx, rcx
0x0000a34f      0f84b2080000   je 0xac07
0x0000a355      4839542408     cmp qword [rsp + 8], rdx
0x0000a35a      498b07         mov rax, qword [r15]
0x0000a35d      0f84b8070000   je 0xab1b
0x0000a363      49894f08       mov qword [r15 + 8], rcx
0x0000a367      4889c2         mov rdx, rax
0x0000a36a      48c1e205       shl rdx, 5
0x0000a36e      4801ca         add rdx, rcx
0x0000a371      4839d8         cmp rax, rbx
0x0000a374      7720           ja 0xa396
0x0000a376      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a380      4883c001       add rax, 1
0x0000a384      c70200000000   mov dword [rdx], 0
0x0000a38a      4883c220       add rdx, 0x20                           ; "@"
0x0000a38e      4839d8         cmp rax, rbx
0x0000a391      76ed           jbe 0xa380
0x0000a393      498907         mov qword [r15], rax
0x0000a396      48c1e305       shl rbx, 5
0x0000a39a      488d0419       lea rax, [rcx + rbx]
0x0000a39e      8b10           mov edx, dword [rax]
0x0000a3a0      85d2           test edx, edx
0x0000a3a2      0f85d3040000   jne 0xa87b
0x0000a3a8      c70005000000   mov dword [rax], 5
0x0000a3ae      0fb65d00       movzx ebx, byte [rbp]
0x0000a3b2      488d5501       lea rdx, [rbp + 1]
0x0000a3b6      80fb2e         cmp bl, 0x2e
0x0000a3b9      0f852ffdffff   jne 0xa0ee
0x0000a3bf      807d012a       cmp byte [rbp + 1], 0x2a
0x0000a3c3      49896c2430     mov qword [r12 + 0x30], rbp
0x0000a3c8      0f8580010000   jne 0xa54e
0x0000a3ce      488b742418     mov rsi, qword [rsp + 0x18]
0x0000a3d3      4c8d5d02       lea r11, [rbp + 2]
0x0000a3d7      b802000000     mov eax, 2
0x0000a3dc      4d895c2438     mov qword [r12 + 0x38], r11
0x0000a3e1      4883fe02       cmp rsi, 2
0x0000a3e5      480f43c6       cmovae rax, rsi
0x0000a3e9      4889442418     mov qword [rsp + 0x18], rax
0x0000a3ee      0fbe4502       movsx eax, byte [rbp + 2]
0x0000a3f2      8d50d0         lea edx, [rax - 0x30]
0x0000a3f5      80fa09         cmp dl, 9
0x0000a3f8      0f868e060000   jbe 0xaa8c
0x0000a3fe      498b5c2440     mov rbx, qword [r12 + 0x40]
0x0000a403      4883fbff       cmp rbx, 0xffffffffffffffff
0x0000a407      0f8458060000   je 0xaa65
0x0000a40d      4939d9         cmp r9, rbx
0x0000a410      498b4f08       mov rcx, qword [r15 + 8]
0x0000a414      0f8665050000   jbe 0xa97f
0x0000a41a      498b07         mov rax, qword [r15]
0x0000a41d      4889c2         mov rdx, rax
0x0000a420      48c1e205       shl rdx, 5
0x0000a424      4801ca         add rdx, rcx
0x0000a427      4839d8         cmp rax, rbx
0x0000a42a      771a           ja 0xa446
0x0000a42c      0f1f4000       nop dword [rax]
0x0000a430      4883c001       add rax, 1
0x0000a434      c70200000000   mov dword [rdx], 0
0x0000a43a      4883c220       add rdx, 0x20                           ; "@"
0x0000a43e      4839d8         cmp rax, rbx
0x0000a441      76ed           jbe 0xa430
0x0000a443      498907         mov qword [r15], rax
0x0000a446      48c1e305       shl rbx, 5
0x0000a44a      488d0419       lea rax, [rcx + rbx]
0x0000a44e      8b10           mov edx, dword [rax]
0x0000a450      85d2           test edx, edx
0x0000a452      0f8512050000   jne 0xa96a
0x0000a458      c70005000000   mov dword [rax], 5
0x0000a45e      4c89dd         mov rbp, r11
0x0000a461      410fb61b       movzx ebx, byte [r11]
0x0000a465      e984fcffff     jmp 0xa0ee
0x0000a46a      4889e8         mov rax, rbp
0x0000a46d      0f1f00         nop dword [rax]
0x0000a470      4883c001       add rax, 1
0x0000a474      0fb610         movzx edx, byte [rax]
0x0000a477      8d4ad0         lea ecx, [rdx - 0x30]
0x0000a47a      80f909         cmp cl, 9
0x0000a47d      76f1           jbe 0xa470
0x0000a47f      80fa24         cmp dl, 0x24
0x0000a482      4d89c5         mov r13, r8
0x0000a485      0f85e3fbffff   jne 0xa06e
0x0000a48b      31d2           xor edx, edx
0x0000a48d      0fbec3         movsx eax, bl
0x0000a490      48bf99999999.  movabs rdi, 0x1999999999999999
0x0000a49a      4c89c6         mov rsi, r8
0x0000a49d      83e830         sub eax, 0x30
0x0000a4a0      4839fa         cmp rdx, rdi
0x0000a4a3      4898           cdqe
0x0000a4a5      7707           ja 0xa4ae
0x0000a4a7      488d3492       lea rsi, [rdx + rdx*4]
0x0000a4ab      4801f6         add rsi, rsi
0x0000a4ae      4889e9         mov rcx, rbp
0x0000a4b1      4801f0         add rax, rsi
0x0000a4b4      0fb65d01       movzx ebx, byte [rbp + 1]
0x0000a4b8      400f92c6       setb sil
0x0000a4bc      4883c501       add rbp, 1
0x0000a4c0      4889c2         mov rdx, rax
0x0000a4c3      400fb6f6       movzx esi, sil
0x0000a4c7      4885f6         test rsi, rsi
0x0000a4ca      8d7bd0         lea edi, [rbx - 0x30]
0x0000a4cd      0f858b030000   jne 0xa85e
0x0000a4d3      4080ff09       cmp dil, 9
0x0000a4d7      76b4           jbe 0xa48d
0x0000a4d9      4989c5         mov r13, rax
0x0000a4dc      4983ed01       sub r13, 1
0x0000a4e0      4983fdfd       cmp r13, 0xfffffffffffffffd
0x0000a4e4      0f8781020000   ja 0xa76b
0x0000a4ea      488d6902       lea rbp, [rcx + 2]
0x0000a4ee      0fb65902       movzx ebx, byte [rcx + 2]
0x0000a4f2      e977fbffff     jmp 0xa06e
0x0000a4f7      49896c2418     mov qword [r12 + 0x18], rbp
0x0000a4fc      0fb67d00       movzx edi, byte [rbp]
0x0000a500      4889ee         mov rsi, rbp
0x0000a503      8d4fd0         lea ecx, [rdi - 0x30]
0x0000a506      80f909         cmp cl, 9
0x0000a509      760c           jbe 0xa517
0x0000a50b      eb33           jmp 0xa540
0x0000a50d      0f1f00         nop dword [rax]
0x0000a510      4889c5         mov rbp, rax
0x0000a513      4883c001       add rax, 1
0x0000a517      0fb638         movzx edi, byte [rax]
0x0000a51a      8d57d0         lea edx, [rdi - 0x30]
0x0000a51d      80fa09         cmp dl, 9
0x0000a520      76ee           jbe 0xa510
0x0000a522      4889c1         mov rcx, rax
0x0000a525      488d5502       lea rdx, [rbp + 2]
0x0000a529      4889c5         mov rbp, rax
0x0000a52c      4829f1         sub rcx, rsi
0x0000a52f      488b742410     mov rsi, qword [rsp + 0x10]
0x0000a534      4839ce         cmp rsi, rcx
0x0000a537      480f43ce       cmovae rcx, rsi
0x0000a53b      48894c2410     mov qword [rsp + 0x10], rcx
0x0000a540      49896c2420     mov qword [r12 + 0x20], rbp
0x0000a545      0fb65d00       movzx ebx, byte [rbp]
0x0000a549      e997fbffff     jmp 0xa0e5
0x0000a54e      0fb64501       movzx eax, byte [rbp + 1]
0x0000a552      83e830         sub eax, 0x30
0x0000a555      3c09           cmp al, 9
0x0000a557      7715           ja 0xa56e
0x0000a559      0f1f80000000.  nop dword [rax]
0x0000a560      4883c201       add rdx, 1
0x0000a564      0fb602         movzx eax, byte [rdx]
0x0000a567      83e830         sub eax, 0x30
0x0000a56a      3c09           cmp al, 9
0x0000a56c      76f2           jbe 0xa560
0x0000a56e      488b742418     mov rsi, qword [rsp + 0x18]
0x0000a573      4889d0         mov rax, rdx
0x0000a576      4989542438     mov qword [r12 + 0x38], rdx
0x0000a57b      4829e8         sub rax, rbp
0x0000a57e      0fb61a         movzx ebx, byte [rdx]
0x0000a581      4889d5         mov rbp, rdx
0x0000a584      4839c6         cmp rsi, rax
0x0000a587      480f43c6       cmovae rax, rsi
0x0000a58b      4889442418     mov qword [rsp + 0x18], rax
0x0000a590      e959fbffff     jmp 0xa0ee
0x0000a595      4889c6         mov rsi, rax
0x0000a598      4883c601       add rsi, 1
0x0000a59c      0fb63e         movzx edi, byte [rsi]
0x0000a59f      448d5fd0       lea r11d, [rdi - 0x30]
0x0000a5a3      4180fb09       cmp r11b, 9
0x0000a5a7      76ef           jbe 0xa598
0x0000a5a9      4080ff24       cmp dil, 0x24
0x0000a5ad      0f8507fdffff   jne 0xa2ba
0x0000a5b3      31f6           xor esi, esi
0x0000a5b5      0fbec1         movsx eax, cl
0x0000a5b8      48bf99999999.  movabs rdi, 0x1999999999999999
0x0000a5c2      4c89c1         mov rcx, r8
0x0000a5c5      83e830         sub eax, 0x30
0x0000a5c8      4839fe         cmp rsi, rdi
0x0000a5cb      4898           cdqe
0x0000a5cd      7707           ja 0xa5d6
0x0000a5cf      488d0cb6       lea rcx, [rsi + rsi*4]
0x0000a5d3      4801c9         add rcx, rcx
0x0000a5d6      4889d5         mov rbp, rdx
0x0000a5d9      4531db         xor r11d, r11d
0x0000a5dc      4801c8         add rax, rcx
0x0000a5df      0fb64a01       movzx ecx, byte [rdx + 1]
0x0000a5e3      410f92c3       setb r11b
0x0000a5e7      4883c201       add rdx, 1
0x0000a5eb      4889c6         mov rsi, rax
0x0000a5ee      4d85db         test r11, r11
0x0000a5f1      8d79d0         lea edi, [rcx - 0x30]
0x0000a5f4      0f8504050000   jne 0xaafe
0x0000a5fa      4080ff09       cmp dil, 9
0x0000a5fe      76b5           jbe 0xa5b5
0x0000a600      488d58ff       lea rbx, [rax - 1]
0x0000a604      4883fbfd       cmp rbx, 0xfffffffffffffffd
0x0000a608      0f875d010000   ja 0xa76b
0x0000a60e      49895c2428     mov qword [r12 + 0x28], rbx
0x0000a613      4883c502       add rbp, 2
0x0000a617      e9c3fcffff     jmp 0xa2df
0x0000a61c      83f80f         cmp eax, 0xf
0x0000a61f      41bb16000000   mov r11d, 0x16
0x0000a625      0f8f4dfbffff   jg 0xa178
0x0000a62b      a804           test al, 4
0x0000a62d      0f8545fbffff   jne 0xa178
0x0000a633      83f807         cmp eax, 7
0x0000a636      41bb15000000   mov r11d, 0x15
0x0000a63c      0f8f36fbffff   jg 0xa178
0x0000a642      a802           test al, 2
0x0000a644      41bb12000000   mov r11d, 0x12
0x0000a64a      0f8528fbffff   jne 0xa178
0x0000a650      4531db         xor r11d, r11d
0x0000a653      a801           test al, 1
0x0000a655      410f94c3       sete r11b
0x0000a659      4183c313       add r11d, 0x13
0x0000a65d      e916fbffff     jmp 0xa178
0x0000a662      660f1f440000   nop word [rax + rax]
0x0000a668      4531db         xor r11d, r11d
0x0000a66b      83f807         cmp eax, 7
0x0000a66e      410f9fc3       setg r11b
0x0000a672      4183c30d       add r11d, 0xd
0x0000a676      e9fdfaffff     jmp 0xa178
0x0000a67b      83f80f         cmp eax, 0xf
0x0000a67e      41bb09000000   mov r11d, 9
0x0000a684      0f8feefaffff   jg 0xa178
0x0000a68a      a804           test al, 4
0x0000a68c      0f85e6faffff   jne 0xa178
0x0000a692      83f807         cmp eax, 7
0x0000a695      41bb07000000   mov r11d, 7
0x0000a69b      0f8fd7faffff   jg 0xa178
0x0000a6a1      a802           test al, 2
0x0000a6a3      41bb01000000   mov r11d, 1
0x0000a6a9      0f85c9faffff   jne 0xa178
0x0000a6af      83e001         and eax, 1
0x0000a6b2      83f801         cmp eax, 1
0x0000a6b5      4519db         sbb r11d, r11d
0x0000a6b8      4183e302       and r11d, 2
0x0000a6bc      4183c303       add r11d, 3
0x0000a6c0      e9b3faffff     jmp 0xa178
0x0000a6c5      0f1f00         nop dword [rax]
0x0000a6c8      4531db         xor r11d, r11d
0x0000a6cb      83f807         cmp eax, 7
0x0000a6ce      410f9fc3       setg r11b
0x0000a6d2      4183c30f       add r11d, 0xf
0x0000a6d6      e99dfaffff     jmp 0xa178
0x0000a6db      83f80f         cmp eax, 0xf
0x0000a6de      41bb0c000000   mov r11d, 0xc
0x0000a6e4      0f8f8efaffff   jg 0xa178
0x0000a6ea      4531db         xor r11d, r11d
0x0000a6ed      a804           test al, 4
0x0000a6ef      410f95c3       setne r11b
0x0000a6f3      4183c30b       add r11d, 0xb
0x0000a6f7      e97cfaffff     jmp 0xa178
0x0000a6fc      41bb0e000000   mov r11d, 0xe
0x0000a702      bb63000000     mov ebx, 0x63                           ; 'c'
0x0000a707      e96cfaffff     jmp 0xa178
0x0000a70c      83f80f         cmp eax, 0xf
0x0000a70f      41bb0a000000   mov r11d, 0xa
0x0000a715      0f8f5dfaffff   jg 0xa178
0x0000a71b      a804           test al, 4
0x0000a71d      0f8555faffff   jne 0xa178
0x0000a723      83f807         cmp eax, 7
0x0000a726      41bb08000000   mov r11d, 8
0x0000a72c      0f8f46faffff   jg 0xa178
0x0000a732      a802           test al, 2
0x0000a734      41bb02000000   mov r11d, 2
0x0000a73a      0f8538faffff   jne 0xa178
0x0000a740      83e001         and eax, 1
0x0000a743      83f801         cmp eax, 1
0x0000a746      4519db         sbb r11d, r11d
0x0000a749      4183e302       and r11d, 2
0x0000a74d      4183c304       add r11d, 4
0x0000a751      e922faffff     jmp 0xa178
0x0000a756      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a760      41bb11000000   mov r11d, 0x11
0x0000a766      e90dfaffff     jmp 0xa178
0x0000a76b      498b4f08       mov rcx, qword [r15 + 8]
0x0000a76f      48394c2408     cmp qword [rsp + 8], rcx
0x0000a774      7408           je 0xa77e
0x0000a776      4889cf         mov rdi, rcx
0x0000a779      e85270ffff     call sym.imp.free
0x0000a77e      498b7e08       mov rdi, qword [r14 + 8]
0x0000a782      48397c2428     cmp qword [rsp + 0x28], rdi
0x0000a787      7405           je 0xa78e
0x0000a789      e84270ffff     call sym.imp.free
0x0000a78e      e85d70ffff     call sym.imp.__errno_location
0x0000a793      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x2d700000
0x0000a799      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000a79e      e91ff8ffff     jmp 0x9fc2
0x0000a7a3      4439da         cmp edx, r11d
0x0000a7a6      0f842ffaffff   je 0xa1db
0x0000a7ac      ebc1           jmp 0xa76f
0x0000a7ae      6690           nop
0x0000a7b0      4d01c9         add r9, r9
0x0000a7b3      498d4501       lea rax, [r13 + 1]
0x0000a7b7      4d39e9         cmp r9, r13
0x0000a7ba      4c0f46c8       cmovbe r9, rax
0x0000a7be      48b8ffffffff.  movabs rax, 0x7ffffffffffffff           ; 576460752303423487
0x0000a7c8      4939c1         cmp r9, rax
0x0000a7cb      0f87da030000   ja 0xabab
0x0000a7d1      4c89ce         mov rsi, r9
0x0000a7d4      4c894c2448     mov qword [rsp + 0x48], r9
0x0000a7d9      4c89542440     mov qword [rsp + 0x40], r10
0x0000a7de      48c1e605       shl rsi, 5
0x0000a7e2      48394c2408     cmp qword [rsp + 8], rcx
0x0000a7e7      4c89442438     mov qword [rsp + 0x38], r8
0x0000a7ec      44895c2430     mov dword [rsp + 0x30], r11d
0x0000a7f1      0f849a000000   je 0xa891
0x0000a7f7      4889cf         mov rdi, rcx
0x0000a7fa      e85172ffff     call sym.imp.realloc
0x0000a7ff      4885c0         test rax, rax
0x0000a802      4889c1         mov rcx, rax
0x0000a805      448b5c2430     mov r11d, dword [rsp + 0x30]
0x0000a80a      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000a80f      4c8b542440     mov r10, qword [rsp + 0x40]
0x0000a814      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x0000a819      0f8488030000   je 0xaba7
0x0000a81f      488b442408     mov rax, qword [rsp + 8]
0x0000a824      493b4708       cmp rax, qword [r15 + 8]
0x0000a828      0f848b000000   je 0xa8b9
0x0000a82e      49894f08       mov qword [r15 + 8], rcx
0x0000a832      e95df9ffff     jmp 0xa194
0x0000a837      488b742420     mov rsi, qword [rsp + 0x20]
0x0000a83c      4883feff       cmp rsi, 0xffffffffffffffff
0x0000a840      488d4601       lea rax, [rsi + 1]
0x0000a844      4989742450     mov qword [r12 + 0x50], rsi
0x0000a849      0f841cffffff   je 0xa76b
0x0000a84f      4c8b6c2420     mov r13, qword [rsp + 0x20]
0x0000a854      4889442420     mov qword [rsp + 0x20], rax
0x0000a859      e929f9ffff     jmp 0xa187
0x0000a85e      4080ff09       cmp dil, 9
0x0000a862      0f8703ffffff   ja 0xa76b
0x0000a868      0fbec3         movsx eax, bl
0x0000a86b      4c89c6         mov rsi, r8
0x0000a86e      4889e9         mov rcx, rbp
0x0000a871      83e830         sub eax, 0x30
0x0000a874      4898           cdqe
0x0000a876      e936fcffff     jmp 0xa4b1
0x0000a87b      83fa05         cmp edx, 5
0x0000a87e      0f85ebfeffff   jne 0xa76f
0x0000a884      0fb65d00       movzx ebx, byte [rbp]
0x0000a888      488d5501       lea rdx, [rbp + 1]
0x0000a88c      e954f8ffff     jmp 0xa0e5
0x0000a891      4889f7         mov rdi, rsi
0x0000a894      e85771ffff     call sym.imp.malloc
0x0000a899      4885c0         test rax, rax
0x0000a89c      4889c1         mov rcx, rax
0x0000a89f      448b5c2430     mov r11d, dword [rsp + 0x30]
0x0000a8a4      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000a8a9      4c8b542440     mov r10, qword [rsp + 0x40]
0x0000a8ae      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x0000a8b3      0f8463010000   je 0xaa1c
0x0000a8b9      498b17         mov rdx, qword [r15]
0x0000a8bc      488b742408     mov rsi, qword [rsp + 8]
0x0000a8c1      4889cf         mov rdi, rcx
0x0000a8c4      4c894c2448     mov qword [rsp + 0x48], r9
0x0000a8c9      4c89542440     mov qword [rsp + 0x40], r10
0x0000a8ce      4c89442438     mov qword [rsp + 0x38], r8
0x0000a8d3      44895c2430     mov dword [rsp + 0x30], r11d
0x0000a8d8      48c1e205       shl rdx, 5
0x0000a8dc      e8ef70ffff     call sym.imp.memcpy
0x0000a8e1      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x0000a8e6      4c8b542440     mov r10, qword [rsp + 0x40]
0x0000a8eb      4889c1         mov rcx, rax
0x0000a8ee      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000a8f3      448b5c2430     mov r11d, dword [rsp + 0x30]
0x0000a8f8      e931ffffff     jmp 0xa82e
0x0000a8fd      4889f7         mov rdi, rsi
0x0000a900      e8eb70ffff     call sym.imp.malloc
0x0000a905      4885c0         test rax, rax
0x0000a908      4889c1         mov rcx, rax
0x0000a90b      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000a910      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000a915      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x0000a91a      0f84e9000000   je 0xaa09
0x0000a920      488d049b       lea rax, [rbx + rbx*4]
0x0000a924      488b742428     mov rsi, qword [rsp + 0x28]
0x0000a929      4889cf         mov rdi, rcx
0x0000a92c      4c894c2440     mov qword [rsp + 0x40], r9
0x0000a931      4c89542438     mov qword [rsp + 0x38], r10
0x0000a936      488d1443       lea rdx, [rbx + rax*2]
0x0000a93a      4c89442430     mov qword [rsp + 0x30], r8
0x0000a93f      48c1e203       shl rdx, 3
0x0000a943      e88870ffff     call sym.imp.memcpy
0x0000a948      498b1e         mov rbx, qword [r14]
0x0000a94b      4889c1         mov rcx, rax
0x0000a94e      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x0000a953      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000a958      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000a95d      e915f9ffff     jmp 0xa277
0x0000a962      498b07         mov rax, qword [r15]
0x0000a965      e9fdf9ffff     jmp 0xa367
0x0000a96a      83fa05         cmp edx, 5
0x0000a96d      0f85fcfdffff   jne 0xa76f
0x0000a973      410fb61b       movzx ebx, byte [r11]
0x0000a977      4c89dd         mov rbp, r11
0x0000a97a      e96ff7ffff     jmp 0xa0ee
0x0000a97f      4d01c9         add r9, r9
0x0000a982      488d4301       lea rax, [rbx + 1]
0x0000a986      4939d9         cmp r9, rbx
0x0000a989      4c0f46c8       cmovbe r9, rax
0x0000a98d      48b8ffffffff.  movabs rax, 0x7ffffffffffffff           ; 576460752303423487
0x0000a997      4939c1         cmp r9, rax
0x0000a99a      0f870b020000   ja 0xabab
0x0000a9a0      4c89ce         mov rsi, r9
0x0000a9a3      4c894c2448     mov qword [rsp + 0x48], r9
0x0000a9a8      4c89542440     mov qword [rsp + 0x40], r10
0x0000a9ad      48c1e605       shl rsi, 5
0x0000a9b1      48394c2408     cmp qword [rsp + 8], rcx
0x0000a9b6      4c89442438     mov qword [rsp + 0x38], r8
0x0000a9bb      4c895c2430     mov qword [rsp + 0x30], r11
0x0000a9c0      0f84b8010000   je 0xab7e
0x0000a9c6      4889cf         mov rdi, rcx
0x0000a9c9      e88270ffff     call sym.imp.realloc
0x0000a9ce      498b5708       mov rdx, qword [r15 + 8]
0x0000a9d2      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x0000a9d7      4889c1         mov rcx, rax
0x0000a9da      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000a9df      4c8b542440     mov r10, qword [rsp + 0x40]
0x0000a9e4      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x0000a9e9      4885c9         test rcx, rcx
0x0000a9ec      0f8415020000   je 0xac07
0x0000a9f2      4839542408     cmp qword [rsp + 8], rdx
0x0000a9f7      498b07         mov rax, qword [r15]
0x0000a9fa      0f84c0010000   je 0xabc0
0x0000aa00      49894f08       mov qword [r15 + 8], rcx
0x0000aa04      e914faffff     jmp 0xa41d
0x0000aa09      498b4f08       mov rcx, qword [r15 + 8]
0x0000aa0d      48394c2408     cmp qword [rsp + 8], rcx
0x0000aa12      7418           je 0xaa2c
0x0000aa14      4889cf         mov rdi, rcx
0x0000aa17      e8b46dffff     call sym.imp.free
0x0000aa1c      498b7e08       mov rdi, qword [r14 + 8]
0x0000aa20      48397c2428     cmp qword [rsp + 0x28], rdi
0x0000aa25      7405           je 0xaa2c
0x0000aa27      e8a46dffff     call sym.imp.free
0x0000aa2c      e8bf6dffff     call sym.imp.__errno_location
0x0000aa31      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0000aa37      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000aa3c      e981f5ffff     jmp 0x9fc2
0x0000aa41      4889f7         mov rdi, rsi
0x0000aa44      e8a76fffff     call sym.imp.malloc
0x0000aa49      488b542408     mov rdx, qword [rsp + 8]
0x0000aa4e      4889c1         mov rcx, rax
0x0000aa51      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x0000aa56      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000aa5b      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000aa60      e9e7f8ffff     jmp 0xa34c
0x0000aa65      488b742420     mov rsi, qword [rsp + 0x20]
0x0000aa6a      4883feff       cmp rsi, 0xffffffffffffffff
0x0000aa6e      488d4601       lea rax, [rsi + 1]
0x0000aa72      4989742440     mov qword [r12 + 0x40], rsi
0x0000aa77      0f84eefcffff   je 0xa76b
0x0000aa7d      488b5c2420     mov rbx, qword [rsp + 0x20]
0x0000aa82      4889442420     mov qword [rsp + 0x20], rax
0x0000aa87      e981f9ffff     jmp 0xa40d
0x0000aa8c      4c89da         mov rdx, r11
0x0000aa8f      4883c201       add rdx, 1
0x0000aa93      0fb60a         movzx ecx, byte [rdx]
0x0000aa96      8d71d0         lea esi, [rcx - 0x30]
0x0000aa99      4080fe09       cmp sil, 9
0x0000aa9d      76f0           jbe 0xaa8f
0x0000aa9f      80f924         cmp cl, 0x24
0x0000aaa2      0f8556f9ffff   jne 0xa3fe
0x0000aaa8      31c9           xor ecx, ecx
0x0000aaaa      48be99999999.  movabs rsi, 0x1999999999999999
0x0000aab4      83e830         sub eax, 0x30
0x0000aab7      4c89c2         mov rdx, r8
0x0000aaba      4839f1         cmp rcx, rsi
0x0000aabd      4898           cdqe
0x0000aabf      7707           ja 0xaac8
0x0000aac1      488d1489       lea rdx, [rcx + rcx*4]
0x0000aac5      4801d2         add rdx, rdx
0x0000aac8      4c89de         mov rsi, r11
0x0000aacb      31db           xor ebx, ebx
0x0000aacd      4801c2         add rdx, rax
0x0000aad0      410fbe4301     movsx eax, byte [r11 + 1]
0x0000aad5      0f92c3         setb bl
0x0000aad8      4983c301       add r11, 1
0x0000aadc      4889d1         mov rcx, rdx
0x0000aadf      4885db         test rbx, rbx
0x0000aae2      8d78d0         lea edi, [rax - 0x30]
0x0000aae5      7471           je 0xab58
0x0000aae7      4080ff09       cmp dil, 9
0x0000aaeb      0f877afcffff   ja 0xa76b
0x0000aaf1      83e830         sub eax, 0x30
0x0000aaf4      4c89c2         mov rdx, r8
0x0000aaf7      4c89de         mov rsi, r11
0x0000aafa      4898           cdqe
0x0000aafc      ebcd           jmp 0xaacb
0x0000aafe      4080ff09       cmp dil, 9
0x0000ab02      0f8763fcffff   ja 0xa76b
0x0000ab08      0fbec1         movsx eax, cl
0x0000ab0b      4889d5         mov rbp, rdx
0x0000ab0e      4c89c1         mov rcx, r8
0x0000ab11      83e830         sub eax, 0x30
0x0000ab14      4898           cdqe
0x0000ab16      e9befaffff     jmp 0xa5d9
0x0000ab1b      488b742408     mov rsi, qword [rsp + 8]
0x0000ab20      48c1e005       shl rax, 5
0x0000ab24      4889cf         mov rdi, rcx
0x0000ab27      4889c2         mov rdx, rax
0x0000ab2a      4c894c2440     mov qword [rsp + 0x40], r9
0x0000ab2f      4c89542438     mov qword [rsp + 0x38], r10
0x0000ab34      4c89442430     mov qword [rsp + 0x30], r8
0x0000ab39      e8926effff     call sym.imp.memcpy
0x0000ab3e      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x0000ab43      4889c1         mov rcx, rax
0x0000ab46      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000ab4b      498b07         mov rax, qword [r15]
0x0000ab4e      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000ab53      e90bf8ffff     jmp 0xa363
0x0000ab58      4080ff09       cmp dil, 9
0x0000ab5c      0f8648ffffff   jbe 0xaaaa
0x0000ab62      488d5aff       lea rbx, [rdx - 1]
0x0000ab66      4883fbfd       cmp rbx, 0xfffffffffffffffd
0x0000ab6a      0f87fbfbffff   ja 0xa76b
0x0000ab70      49895c2440     mov qword [r12 + 0x40], rbx
0x0000ab75      4c8d5e02       lea r11, [rsi + 2]
0x0000ab79      e98ff8ffff     jmp 0xa40d
0x0000ab7e      4889f7         mov rdi, rsi
0x0000ab81      e86a6effff     call sym.imp.malloc
0x0000ab86      488b542408     mov rdx, qword [rsp + 8]
0x0000ab8b      4889c1         mov rcx, rax
0x0000ab8e      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x0000ab93      4c8b542440     mov r10, qword [rsp + 0x40]
0x0000ab98      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000ab9d      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x0000aba2      e942feffff     jmp 0xa9e9
0x0000aba7      498b4f08       mov rcx, qword [r15 + 8]
0x0000abab      48394c2408     cmp qword [rsp + 8], rcx
0x0000abb0      0f855efeffff   jne 0xaa14
0x0000abb6      e961feffff     jmp 0xaa1c
0x0000abbb      0f1f440000     nop dword [rax + rax]
0x0000abc0      488b742408     mov rsi, qword [rsp + 8]
0x0000abc5      48c1e005       shl rax, 5
0x0000abc9      4889cf         mov rdi, rcx
0x0000abcc      4889c2         mov rdx, rax
0x0000abcf      4c894c2448     mov qword [rsp + 0x48], r9
0x0000abd4      4c89542440     mov qword [rsp + 0x40], r10
0x0000abd9      4c89442438     mov qword [rsp + 0x38], r8
0x0000abde      4c895c2430     mov qword [rsp + 0x30], r11
0x0000abe3      e8e86dffff     call sym.imp.memcpy
0x0000abe8      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x0000abed      4889c1         mov rcx, rax
0x0000abf0      4c8b542440     mov r10, qword [rsp + 0x40]
0x0000abf5      498b07         mov rax, qword [r15]
0x0000abf8      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000abfd      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x0000ac02      e9f9fdffff     jmp 0xaa00
0x0000ac07      4889d1         mov rcx, rdx
0x0000ac0a      eb9f           jmp 0xabab
0x0000ac0c      0f1f4000       nop dword [rax]
;-- __libc_csu_init:
0x0000ac10      4157           push r15
0x0000ac12      4156           push r14
0x0000ac14      4989d7         mov r15, rdx
0x0000ac17      4155           push r13
0x0000ac19      4154           push r12
0x0000ac1b      4c8d25ae4d20.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x20f9d0 ; "p."
0x0000ac22      55             push rbp
0x0000ac23      488d2dae4d20.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x20f9d8 ; "0."
0x0000ac2a      53             push rbx
0x0000ac2b      4189fd         mov r13d, edi
0x0000ac2e      4989f6         mov r14, rsi
0x0000ac31      4c29e5         sub rbp, r12
0x0000ac34      4883ec08       sub rsp, 8
0x0000ac38      48c1fd03       sar rbp, 3
0x0000ac3c      e84f6bffff     call sym._init
0x0000ac41      4885ed         test rbp, rbp
0x0000ac44      7420           je 0xac66
0x0000ac46      31db           xor ebx, ebx
0x0000ac48      0f1f84000000.  nop dword [rax + rax]
0x0000ac50      4c89fa         mov rdx, r15
0x0000ac53      4c89f6         mov rsi, r14
0x0000ac56      4489ef         mov edi, r13d
0x0000ac59      41ff14dc       call qword [r12 + rbx*8]
0x0000ac5d      4883c301       add rbx, 1
0x0000ac61      4839dd         cmp rbp, rbx
0x0000ac64      75ea           jne 0xac50
0x0000ac66      4883c408       add rsp, 8
0x0000ac6a      5b             pop rbx
0x0000ac6b      5d             pop rbp
0x0000ac6c      415c           pop r12
0x0000ac6e      415d           pop r13
0x0000ac70      415e           pop r14
0x0000ac72      415f           pop r15
0x0000ac74      c3             ret
0x0000ac75      90             nop
0x0000ac76      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x0000ac80      f3c3           ret
0x0000ac82      662e0f1f8400.  nop word cs:[rax + rax]
0x0000ac8c      0f1f4000       nop dword [rax]
;-- atexit:
0x0000ac90      488b15715320.  mov rdx, qword [obj.__dso_handle]       ; [0x210008:8]=0x210008 obj.__dso_handle
0x0000ac97      31f6           xor esi, esi
0x0000ac99      e9426effff     jmp sym.imp.__cxa_atexit
0x0000ac9e      0000           add byte [rax], al
