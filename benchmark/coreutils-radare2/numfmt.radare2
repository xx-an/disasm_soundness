;-- section..plt:
;-- .plt:
0x00001990      ff355ac42000   push qword [0x0020ddf0]                 ; [12] -r-x section size 944 named .plt
0x00001996      ff255cc42000   jmp qword [0x0020ddf8]                  ; [0x20ddf8:8]=0
0x0000199c      0f1f4000       nop dword [rax]
;-- imp.__snprintf_chk:
0x000019a0      ff255ac42000   jmp qword [reloc.__snprintf_chk]        ; [0x20de00:8]=0x19a6
0x000019a6      6800000000     push 0
0x000019ab      e9e0ffffff     jmp sym..plt
;-- imp.free:
0x000019b0      ff2552c42000   jmp qword [reloc.free]                  ; [0x20de08:8]=0x19b6
0x000019b6      6801000000     push 1
0x000019bb      e9d0ffffff     jmp sym..plt
;-- imp.abort:
0x000019c0      ff254ac42000   jmp qword [reloc.abort]                 ; [0x20de10:8]=0x19c6
0x000019c6      6802000000     push 2
0x000019cb      e9c0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x000019d0      ff2542c42000   jmp qword [reloc.__errno_location]      ; [0x20de18:8]=0x19d6
0x000019d6      6803000000     push 3
0x000019db      e9b0ffffff     jmp sym..plt
;-- imp.strncmp:
0x000019e0      ff253ac42000   jmp qword [reloc.strncmp]               ; [0x20de20:8]=0x19e6
0x000019e6      6804000000     push 4
0x000019eb      e9a0ffffff     jmp sym..plt
;-- imp._exit:
0x000019f0      ff2532c42000   jmp qword [reloc._exit]                 ; [0x20de28:8]=0x19f6
0x000019f6      6805000000     push 5
0x000019fb      e990ffffff     jmp sym..plt
;-- imp.strcpy:
0x00001a00      ff252ac42000   jmp qword [reloc.strcpy]                ; [0x20de30:8]=0x1a06
0x00001a06      6806000000     push 6
0x00001a0b      e980ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001a10      ff2522c42000   jmp qword [reloc.__fpending]            ; [0x20de38:8]=0x1a16
0x00001a16      6807000000     push 7
0x00001a1b      e970ffffff     jmp sym..plt
;-- imp.qsort:
0x00001a20      ff251ac42000   jmp qword [reloc.qsort]                 ; [0x20de40:8]=0x1a26 ; "&\x1a"
0x00001a26      6808000000     push 8
0x00001a2b      e960ffffff     jmp sym..plt
;-- imp.wcswidth:
0x00001a30      ff2512c42000   jmp qword [reloc.wcswidth]              ; [0x20de48:8]=0x1a36 ; "6\x1a"
0x00001a36      6809000000     push 9
0x00001a3b      e950ffffff     jmp sym..plt
;-- imp.mbstowcs:
0x00001a40      ff250ac42000   jmp qword [reloc.mbstowcs]              ; [0x20de50:8]=0x1a46 ; "F\x1a"
0x00001a46      680a000000     push 0xa
0x00001a4b      e940ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001a50      ff2502c42000   jmp qword [reloc.textdomain]            ; [0x20de58:8]=0x1a56 ; "V\x1a"
0x00001a56      680b000000     push 0xb
0x00001a5b      e930ffffff     jmp sym..plt
;-- imp.fclose:
0x00001a60      ff25fac32000   jmp qword [reloc.fclose]                ; [0x20de60:8]=0x1a66 ; "f\x1a"
0x00001a66      680c000000     push 0xc
0x00001a6b      e920ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001a70      ff25f2c32000   jmp qword [reloc.bindtextdomain]        ; [0x20de68:8]=0x1a76 ; "v\x1a"
0x00001a76      680d000000     push 0xd
0x00001a7b      e910ffffff     jmp sym..plt
;-- imp.dcgettext:
0x00001a80      ff25eac32000   jmp qword [reloc.dcgettext]             ; [0x20de70:8]=0x1a86
0x00001a86      680e000000     push 0xe
0x00001a8b      e900ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001a90      ff25e2c32000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x20de78:8]=0x1a96
0x00001a96      680f000000     push 0xf
0x00001a9b      e9f0feffff     jmp sym..plt
;-- imp.strlen:
0x00001aa0      ff25dac32000   jmp qword [reloc.strlen]                ; [0x20de80:8]=0x1aa6
0x00001aa6      6810000000     push 0x10
0x00001aab      e9e0feffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001ab0      ff25d2c32000   jmp qword [reloc.__stack_chk_fail]      ; [0x20de88:8]=0x1ab6
0x00001ab6      6811000000     push 0x11
0x00001abb      e9d0feffff     jmp sym..plt
;-- imp.getopt_long:
0x00001ac0      ff25cac32000   jmp qword [reloc.getopt_long]           ; [0x20de90:8]=0x1ac6
0x00001ac6      6812000000     push 0x12
0x00001acb      e9c0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001ad0      ff25c2c32000   jmp qword [reloc.mbrtowc]               ; [0x20de98:8]=0x1ad6
0x00001ad6      6813000000     push 0x13
0x00001adb      e9b0feffff     jmp sym..plt
;-- imp.strchr:
0x00001ae0      ff25bac32000   jmp qword [reloc.strchr]                ; [0x20dea0:8]=0x1ae6
0x00001ae6      6814000000     push 0x14
0x00001aeb      e9a0feffff     jmp sym..plt
;-- imp.__overflow:
0x00001af0      ff25b2c32000   jmp qword [reloc.__overflow]            ; [0x20dea8:8]=0x1af6
0x00001af6      6815000000     push 0x15
0x00001afb      e990feffff     jmp sym..plt
;-- imp.strrchr:
0x00001b00      ff25aac32000   jmp qword [reloc.strrchr]               ; [0x20deb0:8]=0x1b06
0x00001b06      6816000000     push 0x16
0x00001b0b      e980feffff     jmp sym..plt
;-- imp.lseek:
0x00001b10      ff25a2c32000   jmp qword [reloc.lseek]                 ; [0x20deb8:8]=0x1b16
0x00001b16      6817000000     push 0x17
0x00001b1b      e970feffff     jmp sym..plt
;-- imp.__assert_fail:
0x00001b20      ff259ac32000   jmp qword [reloc.__assert_fail]         ; [0x20dec0:8]=0x1b26 ; "&\x1b"
0x00001b26      6818000000     push 0x18
0x00001b2b      e960feffff     jmp sym..plt
;-- imp.__strtoul_internal:
0x00001b30      ff2592c32000   jmp qword [reloc.__strtoul_internal]    ; [0x20dec8:8]=0x1b36 ; "6\x1b"
0x00001b36      6819000000     push 0x19
0x00001b3b      e950feffff     jmp sym..plt
;-- imp.memset:
0x00001b40      ff258ac32000   jmp qword [reloc.memset]                ; [0x20ded0:8]=0x1b46 ; "F\x1b"
0x00001b46      681a000000     push 0x1a
0x00001b4b      e940feffff     jmp sym..plt
;-- imp.strspn:
0x00001b50      ff2582c32000   jmp qword [reloc.strspn]                ; [0x20ded8:8]=0x1b56 ; "V\x1b"
0x00001b56      681b000000     push 0x1b
0x00001b5b      e930feffff     jmp sym..plt
;-- imp.strndup:
0x00001b60      ff257ac32000   jmp qword [reloc.strndup]               ; [0x20dee0:8]=0x1b66 ; "f\x1b"
0x00001b66      681c000000     push 0x1c
0x00001b6b      e920feffff     jmp sym..plt
;-- imp.memcmp:
0x00001b70      ff2572c32000   jmp qword [reloc.memcmp]                ; [0x20dee8:8]=0x1b76 ; "v\x1b"
0x00001b76      681d000000     push 0x1d
0x00001b7b      e910feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001b80      ff256ac32000   jmp qword [reloc.fputs_unlocked]        ; [0x20def0:8]=0x1b86
0x00001b86      681e000000     push 0x1e
0x00001b8b      e900feffff     jmp sym..plt
;-- imp.calloc:
0x00001b90      ff2562c32000   jmp qword [reloc.calloc]                ; [0x20def8:8]=0x1b96
0x00001b96      681f000000     push 0x1f
0x00001b9b      e9f0fdffff     jmp sym..plt
;-- imp.strcmp:
0x00001ba0      ff255ac32000   jmp qword [reloc.strcmp]                ; [0x20df00:8]=0x1ba6
0x00001ba6      6820000000     push 0x20                               ; "@"
0x00001bab      e9e0fdffff     jmp sym..plt
;-- imp.strtol:
0x00001bb0      ff2552c32000   jmp qword [reloc.strtol]                ; [0x20df08:8]=0x1bb6
0x00001bb6      6821000000     push 0x21                               ; '!'
0x00001bbb      e9d0fdffff     jmp sym..plt
;-- imp.memcpy:
0x00001bc0      ff254ac32000   jmp qword [reloc.memcpy]                ; [0x20df10:8]=0x1bc6
0x00001bc6      6822000000     push 0x22                               ; '"'
0x00001bcb      e9c0fdffff     jmp sym..plt
;-- imp.fileno:
0x00001bd0      ff2542c32000   jmp qword [reloc.fileno]                ; [0x20df18:8]=0x1bd6
0x00001bd6      6823000000     push 0x23                               ; '#'
0x00001bdb      e9b0fdffff     jmp sym..plt
;-- imp.wcwidth:
0x00001be0      ff253ac32000   jmp qword [reloc.wcwidth]               ; [0x20df20:8]=0x1be6
0x00001be6      6824000000     push 0x24                               ; '$'
0x00001beb      e9a0fdffff     jmp sym..plt
;-- imp.malloc:
0x00001bf0      ff2532c32000   jmp qword [reloc.malloc]                ; [0x20df28:8]=0x1bf6
0x00001bf6      6825000000     push 0x25                               ; '%'
0x00001bfb      e990fdffff     jmp sym..plt
;-- imp.fflush:
0x00001c00      ff252ac32000   jmp qword [reloc.fflush]                ; [0x20df30:8]=0x1c06
0x00001c06      6826000000     push 0x26                               ; '&'
0x00001c0b      e980fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001c10      ff2522c32000   jmp qword [reloc.nl_langinfo]           ; [0x20df38:8]=0x1c16
0x00001c16      6827000000     push 0x27                               ; '''
0x00001c1b      e970fdffff     jmp sym..plt
;-- imp.__freading:
0x00001c20      ff251ac32000   jmp qword [reloc.__freading]            ; [0x20df40:8]=0x1c26 ; "&\x1c"
0x00001c26      6828000000     push 0x28                               ; '('
0x00001c2b      e960fdffff     jmp sym..plt
;-- imp.realloc:
0x00001c30      ff2512c32000   jmp qword [reloc.realloc]               ; [0x20df48:8]=0x1c36 ; "6\x1c"
0x00001c36      6829000000     push 0x29                               ; ')'
0x00001c3b      e950fdffff     jmp sym..plt
;-- imp.setlocale:
0x00001c40      ff250ac32000   jmp qword [reloc.setlocale]             ; [0x20df50:8]=0x1c46 ; "F\x1c"
0x00001c46      682a000000     push 0x2a                               ; '*'
0x00001c4b      e940fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001c50      ff2502c32000   jmp qword [reloc.__printf_chk]          ; [0x20df58:8]=0x1c56 ; "V\x1c"
0x00001c56      682b000000     push 0x2b                               ; '+'
0x00001c5b      e930fdffff     jmp sym..plt
;-- imp.mempcpy:
0x00001c60      ff25fac22000   jmp qword [reloc.mempcpy]               ; [0x20df60:8]=0x1c66 ; "f\x1c"
0x00001c66      682c000000     push 0x2c                               ; ','
0x00001c6b      e920fdffff     jmp sym..plt
;-- imp.memmove:
0x00001c70      ff25f2c22000   jmp qword [reloc.memmove]               ; [0x20df68:8]=0x1c76 ; "v\x1c"
0x00001c76      682d000000     push 0x2d                               ; '-'
0x00001c7b      e910fdffff     jmp sym..plt
;-- imp.error:
0x00001c80      ff25eac22000   jmp qword [reloc.error]                 ; [0x20df70:8]=0x1c86
0x00001c86      682e000000     push 0x2e                               ; '.'
0x00001c8b      e900fdffff     jmp sym..plt
;-- imp.fseeko:
0x00001c90      ff25e2c22000   jmp qword [reloc.fseeko]                ; [0x20df78:8]=0x1c96
0x00001c96      682f000000     push 0x2f                               ; '/'
0x00001c9b      e9f0fcffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001ca0      ff25dac22000   jmp qword [reloc.__cxa_atexit]          ; [0x20df80:8]=0x1ca6
0x00001ca6      6830000000     push 0x30                               ; '0'
0x00001cab      e9e0fcffff     jmp sym..plt
;-- imp.wcstombs:
0x00001cb0      ff25d2c22000   jmp qword [reloc.wcstombs]              ; [0x20df88:8]=0x1cb6
0x00001cb6      6831000000     push 0x31                               ; '1'
0x00001cbb      e9d0fcffff     jmp sym..plt
;-- imp.exit:
0x00001cc0      ff25cac22000   jmp qword [reloc.exit]                  ; [0x20df90:8]=0x1cc6
0x00001cc6      6832000000     push 0x32                               ; '2'
0x00001ccb      e9c0fcffff     jmp sym..plt
;-- imp.fwrite:
0x00001cd0      ff25c2c22000   jmp qword [reloc.fwrite]                ; [0x20df98:8]=0x1cd6
0x00001cd6      6833000000     push 0x33                               ; '3'
0x00001cdb      e9b0fcffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001ce0      ff25bac22000   jmp qword [reloc.__fprintf_chk]         ; [0x20dfa0:8]=0x1ce6
0x00001ce6      6834000000     push 0x34                               ; '4'
0x00001ceb      e9a0fcffff     jmp sym..plt
;-- imp.__strncat_chk:
0x00001cf0      ff25b2c22000   jmp qword [reloc.__strncat_chk]         ; [0x20dfa8:8]=0x1cf6
0x00001cf6      6835000000     push 0x35                               ; '5'
0x00001cfb      e990fcffff     jmp sym..plt
;-- imp.mbsinit:
0x00001d00      ff25aac22000   jmp qword [reloc.mbsinit]               ; [0x20dfb0:8]=0x1d06
0x00001d06      6836000000     push 0x36                               ; '6'
0x00001d0b      e980fcffff     jmp sym..plt
;-- imp.iswprint:
0x00001d10      ff25a2c22000   jmp qword [reloc.iswprint]              ; [0x20dfb8:8]=0x1d16
0x00001d16      6837000000     push 0x37                               ; '7'
0x00001d1b      e970fcffff     jmp sym..plt
;-- imp.getdelim:
0x00001d20      ff259ac22000   jmp qword [reloc.getdelim]              ; [0x20dfc0:8]=0x1d26 ; "&\x1d"
0x00001d26      6838000000     push 0x38                               ; '8'
0x00001d2b      e960fcffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00001d30      ff2592c22000   jmp qword [reloc.__ctype_b_loc]         ; [0x20dfc8:8]=0x1d36 ; "6\x1d"
0x00001d36      6839000000     push 0x39                               ; '9'
0x00001d3b      e950fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001d40      .qword 0x90660020c2aa25ff                              ; [13] -r-x section size 8 named .plt.got
0x00001d48      0000           add byte [rax], al
0x00001d4a      0000           add byte [rax], al
0x00001d4c      0000           add byte [rax], al
0x00001d4e      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x00001d50      4157           push r15                                ; [14] -r-x section size 30510 named .text
0x00001d52      4156           push r14
0x00001d54      4155           push r13
0x00001d56      4154           push r12
0x00001d58      55             push rbp
0x00001d59      53             push rbx
0x00001d5a      89fd           mov ebp, edi
0x00001d5c      4889f3         mov rbx, rsi
0x00001d5f      4883ec48       sub rsp, 0x48
0x00001d63      488b3e         mov rdi, qword [rsi]
0x00001d66      64488b042528.  mov rax, qword fs:[0x28]
0x00001d6f      4889442438     mov qword [rsp + 0x38], rax
0x00001d74      31c0           xor eax, eax
0x00001d76      e8c5420000     call sym.set_program_name
0x00001d7b      488d35f47700.  lea rsi, [0x00009576]
0x00001d82      bf06000000     mov edi, 6
0x00001d87      e8b4feffff     call sym.imp.setlocale
0x00001d8c      488d35f37800.  lea rsi, str.usr_local_share_locale     ; 0x9686 ; "/usr/local/share/locale"
0x00001d93      488d3db17800.  lea rdi, [0x0000964b]                   ; "coreutils"
0x00001d9a      4989c5         mov r13, rax
0x00001d9d      e8cefcffff     call sym.imp.bindtextdomain
0x00001da2      488d3da27800.  lea rdi, [0x0000964b]                   ; "coreutils"
0x00001da9      e8a2fcffff     call sym.imp.textdomain
0x00001dae      bf00000100     mov edi, 0x10000
0x00001db3      e858feffff     call sym.imp.nl_langinfo
0x00001db8      4885c0         test rax, rax
0x00001dbb      48890556c320.  mov qword [obj.decimal_point], rax      ; [0x20e118:8]=0
0x00001dc2      0f84c1000000   je 0x1e89
0x00001dc8      803800         cmp byte [rax], 0
0x00001dcb      0f84b8000000   je 0x1e89
0x00001dd1      488b3d40c320.  mov rdi, qword [obj.decimal_point]      ; [0x20e118:8]=0
0x00001dd8      4c8d2561ba20.  lea r12, obj.longopts                   ; 0x20d840
0x00001ddf      e8bcfcffff     call sym.imp.strlen
0x00001de4      488d3d353d00.  lea rdi, sym.close_stdout               ; 0x5b20 ; "USH\x83\xec\bH\x8b=\x9b\x85 "
0x00001deb      890523c32000   mov dword [obj.decimal_point_length], eax ; [0x20e114:4]=0
0x00001df1      e87a760000     call sym.atexit
0x00001df6      662e0f1f8400.  nop word cs:[rax + rax]
0x00001e00      488d15997800.  lea rdx, [0x000096a0]                   ; "d:z"
0x00001e07      4531c0         xor r8d, r8d
0x00001e0a      4c89e1         mov rcx, r12
0x00001e0d      4889de         mov rsi, rbx
0x00001e10      89ef           mov edi, ebp
0x00001e12      e8a9fcffff     call sym.imp.getopt_long
0x00001e17      83f8ff         cmp eax, 0xffffffff
0x00001e1a      0f840e040000   je 0x222e
0x00001e20      3d84000000     cmp eax, 0x84
0x00001e25      0f8415030000   je 0x2140
0x00001e2b      7e73           jle 0x1ea0
0x00001e2d      3d89000000     cmp eax, 0x89
0x00001e32      0f848f010000   je 0x1fc7
0x00001e38      0f8fb2000000   jg 0x1ef0
0x00001e3e      3d86000000     cmp eax, 0x86
0x00001e43      0f840f020000   je 0x2058
0x00001e49      0f8cf1010000   jl 0x2040
0x00001e4f      3d87000000     cmp eax, 0x87
0x00001e54      0f8486020000   je 0x20e0
0x00001e5a      3d88000000     cmp eax, 0x88
0x00001e5f      0f8516010000   jne 0x1f7b
0x00001e65      48833d93c420.  cmp qword [obj.n_frp], 0                ; [0x20e300:8]=0
0x00001e6d      0f85f90c0000   jne 0x2b6c
0x00001e73      488b3d66c220.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20e0e0:8]=0
0x00001e7a      be01000000     mov esi, 1
0x00001e7f      e8ec320000     call sym.set_fields
0x00001e84      e977ffffff     jmp 0x1e00
0x00001e89      488d050e7800.  lea rax, [0x0000969e]                   ; "."
0x00001e90      48890581c220.  mov qword [obj.decimal_point], rax      ; [0x20e118:8]=0
0x00001e97      e935ffffff     jmp 0x1dd1
0x00001e9c      0f1f4000       nop dword [rax]
0x00001ea0      83f87a         cmp eax, 0x7a
0x00001ea3      0f84df020000   je 0x2188
0x00001ea9      0f8eb1000000   jle 0x1f60
0x00001eaf      3d81000000     cmp eax, 0x81
0x00001eb4      0f8466010000   je 0x2020
0x00001eba      0f8e18010000   jle 0x1fd8
0x00001ec0      3d82000000     cmp eax, 0x82
0x00001ec5      0f84cd010000   je 0x2098
0x00001ecb      3d83000000     cmp eax, 0x83
0x00001ed0      0f85a5000000   jne 0x1f7b
0x00001ed6      488b3d03c220.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20e0e0:8]=0
0x00001edd      e8ee0e0000     call sym.unit_to_umax
0x00001ee2      4889053fc120.  mov qword [obj.to_unit_size], rax       ; [0x20e028:8]=1
0x00001ee9      e912ffffff     jmp 0x1e00
0x00001eee      6690           nop
0x00001ef0      3d8b000000     cmp eax, 0x8b
0x00001ef5      0f84b5020000   je 0x21b0
0x00001efb      0f8cbf000000   jl 0x1fc0
0x00001f01      3d8c000000     cmp eax, 0x8c
0x00001f06      0f848c020000   je 0x2198
0x00001f0c      3d8d000000     cmp eax, 0x8d
0x00001f11      7568           jne 0x1f7b
0x00001f13      4c8b0d2ec120.  mov r9, qword [obj.argmatch_die]        ; [0x20e048:8]=0x5770 sym.__argmatch_die ; "pW"
0x00001f1a      488b35bfc120.  mov rsi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20e0e0:8]=0
0x00001f21      488d1578bb20.  lea rdx, obj.inval_args                 ; 0x20daa0
0x00001f28      488d0d319200.  lea rcx, obj.inval_types                ; 0xb160
0x00001f2f      488d3dd17700.  lea rdi, str.invalid                    ; 0x9707 ; "--invalid"
0x00001f36      41b804000000   mov r8d, 4
0x00001f3c      e8ff3a0000     call sym.__xargmatch_internal
0x00001f41      488d15189200.  lea rdx, obj.inval_types                ; 0xb160
0x00001f48      8b0482         mov eax, dword [rdx + rax*4]
0x00001f4b      89052fc22000   mov dword [obj.inval_style], eax        ; [0x20e180:4]=0
0x00001f51      e9aafeffff     jmp 0x1e00
0x00001f56      662e0f1f8400.  nop word cs:[rax + rax]
0x00001f60      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x00001f65      0f84270a0000   je 0x2992
0x00001f6b      83f864         cmp eax, 0x64
0x00001f6e      0f84fc000000   je 0x2070
0x00001f74      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x00001f79      740d           je 0x1f88
0x00001f7b      bf01000000     mov edi, 1
0x00001f80      e8bb290000     call sym.usage
0x00001f85      0f1f00         nop dword [rax]
0x00001f88      488b3d39c120.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0c8:8]=0
0x00001f8f      488b0daac020.  mov rcx, qword [obj.Version]            ; [0x20e040:8]=0xb3a1 str.8.31
0x00001f96      4c8d05747700.  lea r8, str.Assaf_Gordon                ; 0x9711 ; "Assaf Gordon"
0x00001f9d      488d15a37600.  lea rdx, str.GNU_coreutils              ; 0x9647 ; "GNU coreutils"
0x00001fa4      488d350f7600.  lea rsi, str.numfmt                     ; 0x95ba ; "numfmt"
0x00001fab      4531c9         xor r9d, r9d
0x00001fae      31c0           xor eax, eax
0x00001fb0      e87b620000     call sym.version_etc
0x00001fb5      31ff           xor edi, edi
0x00001fb7      e804fdffff     call sym.imp.exit
0x00001fbc      0f1f4000       nop dword [rax]
0x00001fc0      c60549c12000.  mov byte [obj.dev_debug], 1             ; [0x20e110:1]=0
0x00001fc7      c60552c12000.  mov byte [obj.debug], 1                 ; [0x20e120:1]=0
0x00001fce      e92dfeffff     jmp 0x1e00
0x00001fd3      0f1f440000     nop dword [rax + rax]
0x00001fd8      83c080         add eax, 0xffffff80
0x00001fdb      759e           jne 0x1f7b
0x00001fdd      4c8b0d64c020.  mov r9, qword [obj.argmatch_die]        ; [0x20e048:8]=0x5770 sym.__argmatch_die ; "pW"
0x00001fe4      488b35f5c020.  mov rsi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20e0e0:8]=0
0x00001feb      488d156ebb20.  lea rdx, obj.scale_from_args            ; 0x20db60 ; "&\x98"
0x00001ff2      488d0da79100.  lea rcx, obj.scale_from_types           ; 0xb1a0
0x00001ff9      488d3da47600.  lea rdi, str.from                       ; 0x96a4 ; "--from"
0x00002000      41b804000000   mov r8d, 4
0x00002006      e8353a0000     call sym.__xargmatch_internal
0x0000200b      488d158e9100.  lea rdx, obj.scale_from_types           ; 0xb1a0
0x00002012      8b0482         mov eax, dword [rdx + rax*4]
0x00002015      89056dc12000   mov dword [obj.scale_from], eax         ; [0x20e188:4]=0
0x0000201b      e9e0fdffff     jmp 0x1e00
0x00002020      488b3db9c020.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20e0e0:8]=0
0x00002027      e8a40d0000     call sym.unit_to_umax
0x0000202c      488905fdbf20.  mov qword [obj.from_unit_size], rax     ; [0x20e030:8]=1
0x00002033      e9c8fdffff     jmp 0x1e00
0x00002038      0f1f84000000.  nop dword [rax + rax]
0x00002040      488b0599c020.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20e0e0:8]=0
0x00002047      4889052ac120.  mov qword [obj.suffix], rax             ; [0x20e178:8]=0
0x0000204e      e9adfdffff     jmp 0x1e00
0x00002053      0f1f440000     nop dword [rax + rax]
0x00002058      c7050ec12000.  mov dword [obj.grouping], 1             ; [0x20e170:4]=0
0x00002062      e999fdffff     jmp 0x1e00
0x00002067      660f1f840000.  nop word [rax + rax]
0x00002070      488b1569c020.  mov rdx, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20e0e0:8]=0
0x00002077      0fbe02         movsx eax, byte [rdx]
0x0000207a      84c0           test al, al
0x0000207c      740a           je 0x2088
0x0000207e      807a0100       cmp byte [rdx + 1], 0
0x00002082      0f85dd090000   jne 0x2a65
0x00002088      890586bf2000   mov dword [obj.delimiter], eax          ; [0x20e014:4]=128
0x0000208e      e96dfdffff     jmp 0x1e00
0x00002093      0f1f440000     nop dword [rax + rax]
0x00002098      4c8b0da9bf20.  mov r9, qword [obj.argmatch_die]        ; [0x20e048:8]=0x5770 sym.__argmatch_die ; "pW"
0x0000209f      488b353ac020.  mov rsi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20e0e0:8]=0
0x000020a6      488d1573ba20.  lea rdx, obj.scale_to_args              ; 0x20db20 ; "&\x98"
0x000020ad      488d0ddc9000.  lea rcx, obj.scale_to_types             ; 0xb190
0x000020b4      488d3df07500.  lea rdi, str.to                         ; 0x96ab ; "--to"
0x000020bb      41b804000000   mov r8d, 4
0x000020c1      e87a390000     call sym.__xargmatch_internal
0x000020c6      488d15c39000.  lea rdx, obj.scale_to_types             ; 0xb190
0x000020cd      8b0482         mov eax, dword [rdx + rax*4]
0x000020d0      8905aec02000   mov dword [obj.scale_to], eax           ; [0x20e184:4]=0
0x000020d6      e925fdffff     jmp 0x1e00
0x000020db      0f1f440000     nop dword [rax + rax]
0x000020e0      488b3df9bf20.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20e0e0:8]=0
0x000020e7      4c8d05887400.  lea r8, [0x00009576]
0x000020ee      488d0d63c020.  lea rcx, obj.padding_width              ; 0x20e158
0x000020f5      31f6           xor esi, esi
0x000020f7      ba0a000000     mov edx, 0xa
0x000020fc      e83f650000     call sym.xstrtol
0x00002101      85c0           test eax, eax
0x00002103      0f8526090000   jne 0x2a2f
0x00002109      488b0548c020.  mov rax, qword [obj.padding_width]      ; [0x20e158:8]=0
0x00002110      4885c0         test rax, rax
0x00002113      0f8416090000   je 0x2a2f
0x00002119      0f89e1fcffff   jns 0x1e00
0x0000211f      48f7d8         neg rax
0x00002122      c705ecbe2000.  mov dword [obj.padding_alignment], 0    ; [0x20e018:4]=1
0x0000212c      48890525c020.  mov qword [obj.padding_width], rax      ; [0x20e158:8]=0
0x00002133      e9c8fcffff     jmp 0x1e00
0x00002138      0f1f84000000.  nop dword [rax + rax]
0x00002140      4c8b0d01bf20.  mov r9, qword [obj.argmatch_die]        ; [0x20e048:8]=0x5770 sym.__argmatch_die ; "pW"
0x00002147      488b3592bf20.  mov rsi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20e0e0:8]=0
0x0000214e      488d158bb920.  lea rdx, obj.round_args                 ; 0x20dae0
0x00002155      488d0d149000.  lea rcx, obj.round_types                ; 0xb170
0x0000215c      488d3d4d7500.  lea rdi, str.round                      ; 0x96b0 ; "--round"
0x00002163      41b804000000   mov r8d, 4
0x00002169      e8d2380000     call sym.__xargmatch_internal
0x0000216e      488d15fb8f00.  lea rdx, obj.round_types                ; 0xb170
0x00002175      8b0482         mov eax, dword [rdx + rax*4]
0x00002178      8905babe2000   mov dword [obj.round_style], eax        ; [0x20e038:4]=2
0x0000217e      e97dfcffff     jmp 0x1e00
0x00002183      0f1f440000     nop dword [rax + rax]
0x00002188      c60581be2000.  mov byte [obj.line_delim], 0            ; [0x20e010:1]=10 ; "\n"
0x0000218f      e96cfcffff     jmp 0x1e00
0x00002194      0f1f4000       nop dword [rax]
0x00002198      488b0541bf20.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20e0e0:8]=0
0x0000219f      488905a2bf20.  mov qword [obj.format_str], rax         ; [0x20e148:8]=0
0x000021a6      e955fcffff     jmp 0x1e00
0x000021ab      0f1f440000     nop dword [rax + rax]
0x000021b0      488b3d29bf20.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20e0e0:8]=0
0x000021b7      4885ff         test rdi, rdi
0x000021ba      7462           je 0x221e
0x000021bc      4c8d05b37300.  lea r8, [0x00009576]
0x000021c3      488d0d5ebf20.  lea rcx, obj.header                     ; 0x20e128
0x000021ca      31f6           xor esi, esi
0x000021cc      ba0a000000     mov edx, 0xa
0x000021d1      e82a6b0000     call sym.xstrtoumax
0x000021d6      85c0           test eax, eax
0x000021d8      750e           jne 0x21e8
0x000021da      48833d46bf20.  cmp qword [obj.header], 0               ; [0x20e128:8]=0
0x000021e2      0f8518fcffff   jne 0x1e00
0x000021e8      488b3df1be20.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20e0e0:8]=0
0x000021ef      e85c5b0000     call sym.quote
0x000021f4      488d35f47400.  lea rsi, str.invalid_header_value__s    ; 0x96ef ; "invalid header value %s"
0x000021fb      4889c3         mov rbx, rax
0x000021fe      ba05000000     mov edx, 5
0x00002203      31ff           xor edi, edi
0x00002205      e876f8ffff     call sym.imp.dcgettext
0x0000220a      4889d9         mov rcx, rbx
0x0000220d      4889c2         mov rdx, rax
0x00002210      31f6           xor esi, esi
0x00002212      bf01000000     mov edi, 1
0x00002217      31c0           xor eax, eax
0x00002219      e862faffff     call sym.imp.error
0x0000221e      48c705ffbe20.  mov qword [obj.header], 1               ; [0x20e128:8]=0
0x00002229      e9d2fbffff     jmp 0x1e00
0x0000222e      48833d12bf20.  cmp qword [obj.format_str], 0           ; [0x20e148:8]=0
0x00002236      740d           je 0x2245
0x00002238      833d31bf2000.  cmp dword [obj.grouping], 0             ; [0x20e170:4]=0
0x0000223f      0f85d1080000   jne 0x2b16
0x00002245      4d85ed         test r13, r13
0x00002248      750d           jne 0x2257
0x0000224a      803dcfbe2000.  cmp byte [obj.debug], 0                 ; [0x20e120:1]=0
0x00002251      0f85ba050000   jne 0x2811
0x00002257      803dc2be2000.  cmp byte [obj.debug], 0                 ; [0x20e120:1]=0
0x0000225e      745a           je 0x22ba
0x00002260      833d21bf2000.  cmp dword [obj.scale_from], 0           ; [0x20e188:4]=0
0x00002267      7551           jne 0x22ba
0x00002269      833d14bf2000.  cmp dword [obj.scale_to], 0             ; [0x20e184:4]=0
0x00002270      7548           jne 0x22ba
0x00002272      833df7be2000.  cmp dword [obj.grouping], 0             ; [0x20e170:4]=0
0x00002279      4c8b25c8be20.  mov r12, qword [obj.format_str]         ; [0x20e148:8]=0
0x00002280      0f85e2060000   jne 0x2968
0x00002286      48833dcabe20.  cmp qword [obj.padding_width], 0        ; [0x20e158:8]=0
0x0000228e      0f85f0060000   jne 0x2984
0x00002294      4d85e4         test r12, r12
0x00002297      7531           jne 0x22ca
0x00002299      488d35608b00.  lea rsi, str.no_conversion_option_specified ; 0xae00 ; "no conversion option specified"
0x000022a0      ba05000000     mov edx, 5
0x000022a5      31ff           xor edi, edi
0x000022a7      e8d4f7ffff     call sym.imp.dcgettext
0x000022ac      31f6           xor esi, esi
0x000022ae      4889c2         mov rdx, rax
0x000022b1      31ff           xor edi, edi
0x000022b3      31c0           xor eax, eax
0x000022b5      e8c6f9ffff     call sym.imp.error
0x000022ba      4c8b2587be20.  mov r12, qword [obj.format_str]         ; [0x20e148:8]=0
0x000022c1      4d85e4         test r12, r12
0x000022c4      0f843c010000   je 0x2406
0x000022ca      48c744243000.  mov qword [rsp + 0x30], 0
0x000022d3      4531ff         xor r15d, r15d
0x000022d6      31c0           xor eax, eax
0x000022d8      eb1a           jmp 0x22f4
0x000022da      660f1f440000   nop word [rax + rax]
0x000022e0      84d2           test dl, dl
0x000022e2      0f84b1060000   je 0x2999
0x000022e8      ba01000000     mov edx, 1
0x000022ed      4801d0         add rax, rdx
0x000022f0      4983c701       add r15, 1
0x000022f4      410fb61404     movzx edx, byte [r12 + rax]
0x000022f9      80fa25         cmp dl, 0x25
0x000022fc      75e2           jne 0x22e0
0x000022fe      41807c040125   cmp byte [r12 + rax + 1], 0x25
0x00002304      4c8d6801       lea r13, [rax + 1]
0x00002308      0f854a030000   jne 0x2658
0x0000230e      ba02000000     mov edx, 2
0x00002313      ebd8           jmp 0x22ed
0x00002315      4d85ff         test r15, r15
0x00002318      0f844d050000   je 0x286b
0x0000231e      4c89fe         mov rsi, r15
0x00002321      4c89e7         mov rdi, r12
0x00002324      e8f7620000     call sym.xstrndup
0x00002329      41807d0000     cmp byte [r13], 0
0x0000232e      4889050bbe20.  mov qword [obj.format_str_prefix], rax  ; [0x20e140:8]=0
0x00002335      0f8530050000   jne 0x286b
0x0000233b      803dcebd2000.  cmp byte [obj.dev_debug], 0             ; [0x20e110:1]=0
0x00002342      0f84be000000   je 0x2406
0x00002348      488b35e9bd20.  mov rsi, qword [obj.format_str_suffix]  ; [0x20e138:8]=0
0x0000234f      4885f6         test rsi, rsi
0x00002352      0f84eb050000   je 0x2943
0x00002358      bf02000000     mov edi, 2
0x0000235d      e8ce590000     call sym.quote_n
0x00002362      488b35d7bd20.  mov rsi, qword [obj.format_str_prefix]  ; [0x20e140:8]=0
0x00002369      4889c1         mov rcx, rax
0x0000236c      4885f6         test rsi, rsi
0x0000236f      0f84c2050000   je 0x2937
0x00002375      bf01000000     mov edi, 1
0x0000237a      48894c2410     mov qword [rsp + 0x10], rcx
0x0000237f      4c8d35f37200.  lea r14, str.Right                      ; 0x9679 ; "Right"
0x00002386      e8a5590000     call sym.quote_n
0x0000238b      833d86bc2000.  cmp dword [obj.padding_alignment], 0    ; [0x20e018:4]=1
0x00002392      4989c7         mov r15, rax
0x00002395      488d05d87200.  lea rax, str.Left                       ; 0x9674 ; "Left"
0x0000239c      4c8b0db5bd20.  mov r9, qword [obj.padding_width]       ; [0x20e158:8]=0
0x000023a3      4c8d2dd97200.  lea r13, [0x00009683]                   ; "no"
0x000023aa      4c89e6         mov rsi, r12
0x000023ad      4c0f44f0       cmove r14, rax
0x000023b1      833db8bd2000.  cmp dword [obj.grouping], 0             ; [0x20e170:4]=0
0x000023b8      488d05c07200.  lea rax, [0x0000967f]                   ; "yes"
0x000023bf      4c894c2408     mov qword [rsp + 8], r9
0x000023c4      4c0f45e8       cmovne r13, rax
0x000023c8      31ff           xor edi, edi
0x000023ca      e861590000     call sym.quote_n
0x000023cf      4883ec08       sub rsp, 8
0x000023d3      488b3d26bd20.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e100:8]=0
0x000023da      488d15178b00.  lea rdx, str.format_String:____input:__s____grouping:__s____padding_width:__ld____alignment:__s____prefix:__s____suffix:__s ; 0xaef8 ; "format String:\n  input: %s\n  grouping: %s\n  padding width: %ld\n  alignment: %s\n  prefix: %s\n  suffix: %s\n"
0x000023e1      488b4c2418     mov rcx, qword [rsp + 0x18]
0x000023e6      4d89e8         mov r8, r13
0x000023e9      be01000000     mov esi, 1
0x000023ee      51             push rcx
0x000023ef      4157           push r15
0x000023f1      4889c1         mov rcx, rax
0x000023f4      4156           push r14
0x000023f6      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x000023fb      31c0           xor eax, eax
0x000023fd      e8def8ffff     call sym.imp.__fprintf_chk
0x00002402      4883c420       add rsp, 0x20
0x00002406      833d63bd2000.  cmp dword [obj.grouping], 0             ; [0x20e170:4]=0
0x0000240d      0f85e8010000   jne 0x25fb
0x00002413      488b3d3ebd20.  mov rdi, qword [obj.padding_width]      ; [0x20e158:8]=0
0x0000241a      483b3d3fbd20.  cmp rdi, qword [obj.padding_buffer_size] ; [0x20e160:8]=0
0x00002421      0f8327020000   jae 0x264e
0x00002427      31c0           xor eax, eax
0x00002429      48833d27bd20.  cmp qword [obj.padding_width], 0        ; [0x20e158:8]=0
0x00002431      750f           jne 0x2442
0x00002433      31c0           xor eax, eax
0x00002435      813dd5bb2000.  cmp dword [obj.delimiter], 0x80         ; [0x20e014:4]=128
0x0000243f      0f94c0         sete al
0x00002442      833d37bd2000.  cmp dword [obj.inval_style], 0          ; [0x20e180:4]=0
0x00002449      8905e1bc2000   mov dword [obj.auto_padding], eax       ; [0x20e130:4]=0
0x0000244f      740a           je 0x245b
0x00002451      c705c1bb2000.  mov dword [obj.conv_exit_code], 0       ; [0x20e01c:4]=2
0x0000245b      8b0577bc2000   mov eax, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20e0d8:4]=0
0x00002461      39e8           cmp eax, ebp
0x00002463      0f8c45010000   jl 0x25ae
0x00002469      488b05b8bc20.  mov rax, qword [obj.header]             ; [0x20e128:8]=0
0x00002470      48c744242800.  mov qword [rsp + 0x28], 0
0x00002479      4c8d6c2430     lea r13, [rsp + 0x30]
0x0000247e      48c744243000.  mov qword [rsp + 0x30], 0
0x00002487      488d5c2428     lea rbx, [rsp + 0x28]
0x0000248c      488d50ff       lea rdx, [rax - 1]
0x00002490      4885c0         test rax, rax
0x00002493      4889158ebc20.  mov qword [obj.header], rdx             ; [0x20e128:8]=0
0x0000249a      752c           jne 0x24c8
0x0000249c      eb48           jmp 0x24e6
0x0000249e      6690           nop
0x000024a0      488b3521bc20.  mov rsi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0c8:8]=0
0x000024a7      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000024ac      e8cff6ffff     call sym.imp.fputs_unlocked
0x000024b1      488b0570bc20.  mov rax, qword [obj.header]             ; [0x20e128:8]=0
0x000024b8      488d50ff       lea rdx, [rax - 1]
0x000024bc      4885c0         test rax, rax
0x000024bf      48891562bc20.  mov qword [obj.header], rdx             ; [0x20e128:8]=0
0x000024c6      741e           je 0x24e6
0x000024c8      0fb61541bb20.  movzx edx, byte [obj.line_delim]        ; [0x20e010:1]=10 ; "\n"
0x000024cf      488b0dfabb20.  mov rcx, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20e0d0:8]=0
0x000024d6      4c89ee         mov rsi, r13
0x000024d9      4889df         mov rdi, rbx
0x000024dc      e83ff8ffff     call sym.imp.getdelim
0x000024e1      4885c0         test rax, rax
0x000024e4      7fba           jg 0x24a0
0x000024e6      41bc01000000   mov r12d, 1
0x000024ec      eb32           jmp 0x2520
0x000024ee      6690           nop
0x000024f0      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000024f5      488d4c07ff     lea rcx, [rdi + rax - 1]
0x000024fa      0fb6050fbb20.  movzx eax, byte [obj.line_delim]        ; [0x20e010:1]=10 ; "\n"
0x00002501      0fbe11         movsx edx, byte [rcx]
0x00002504      39c2           cmp edx, eax
0x00002506      400f94c6       sete sil
0x0000250a      7508           jne 0x2514
0x0000250c      c60100         mov byte [rcx], 0
0x0000250f      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00002514      400fb6f6       movzx esi, sil
0x00002518      e853220000     call sym.process_line
0x0000251d      4121c4         and r12d, eax
0x00002520      0fb615e9ba20.  movzx edx, byte [obj.line_delim]        ; [0x20e010:1]=10 ; "\n"
0x00002527      488b0da2bb20.  mov rcx, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20e0d0:8]=0
0x0000252e      4c89ee         mov rsi, r13
0x00002531      4889df         mov rdi, rbx
0x00002534      e8e7f7ffff     call sym.imp.getdelim
0x00002539      4885c0         test rax, rax
0x0000253c      7fb2           jg 0x24f0
0x0000253e      488b058bbb20.  mov rax, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20e0d0:8]=0
0x00002545      f60020         test byte [rax], 0x20
0x00002548      7429           je 0x2573
0x0000254a      488d35177200.  lea rsi, str.error_reading_input        ; 0x9768 ; "error reading input"
0x00002551      ba05000000     mov edx, 5
0x00002556      31ff           xor edi, edi
0x00002558      e823f5ffff     call sym.imp.dcgettext
0x0000255d      4889c3         mov rbx, rax
0x00002560      e86bf4ffff     call sym.imp.__errno_location
0x00002565      8b30           mov esi, dword [rax]
0x00002567      4889da         mov rdx, rbx
0x0000256a      31ff           xor edi, edi
0x0000256c      31c0           xor eax, eax
0x0000256e      e80df7ffff     call sym.imp.error
0x00002573      803da6bb2000.  cmp byte [obj.debug], 0                 ; [0x20e120:1]=0
0x0000257a      0f8449020000   je 0x27c9
0x00002580      4585e4         test r12d, r12d
0x00002583      0f8465020000   je 0x27ee
0x00002589      31c0           xor eax, eax
0x0000258b      488b5c2438     mov rbx, qword [rsp + 0x38]
0x00002590      6448331c2528.  xor rbx, qword fs:[0x28]
0x00002599      0f854e050000   jne 0x2aed
0x0000259f      4883c448       add rsp, 0x48
0x000025a3      5b             pop rbx
0x000025a4      5d             pop rbp
0x000025a5      415c           pop r12
0x000025a7      415d           pop r13
0x000025a9      415e           pop r14
0x000025ab      415f           pop r15
0x000025ad      c3             ret
0x000025ae      803d6bbb2000.  cmp byte [obj.debug], 0                 ; [0x20e120:1]=0
0x000025b5      740e           je 0x25c5
0x000025b7      48833d69bb20.  cmp qword [obj.header], 0               ; [0x20e128:8]=0
0x000025bf      0f8572020000   jne 0x2837
0x000025c5      41bc01000000   mov r12d, 1
0x000025cb      0f1f440000     nop dword [rax + rax]
0x000025d0      4898           cdqe
0x000025d2      be01000000     mov esi, 1
0x000025d7      488b3cc3       mov rdi, qword [rbx + rax*8]
0x000025db      e890210000     call sym.process_line
0x000025e0      4121c4         and r12d, eax
0x000025e3      8b05efba2000   mov eax, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20e0d8:4]=0
0x000025e9      83c001         add eax, 1
0x000025ec      39e8           cmp eax, ebp
0x000025ee      8905e4ba2000   mov dword [obj.optind], eax             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20e0d8:4]=0
0x000025f4      7cda           jl 0x25d0
0x000025f6      e978ffffff     jmp 0x2573
0x000025fb      833d82bb2000.  cmp dword [obj.scale_to], 0             ; [0x20e184:4]=0
0x00002602      0f85ea040000   jne 0x2af2
0x00002608      803d11bb2000.  cmp byte [obj.debug], 0                 ; [0x20e120:1]=0
0x0000260f      0f84fefdffff   je 0x2413
0x00002615      bf01000100     mov edi, 0x10001
0x0000261a      e8f1f5ffff     call sym.imp.nl_langinfo
0x0000261f      803800         cmp byte [rax], 0
0x00002622      0f85ebfdffff   jne 0x2413
0x00002628      488d35618900.  lea rsi, str.grouping_has_no_effect_in_this_locale ; 0xaf90 ; "grouping has no effect in this locale"
0x0000262f      31ff           xor edi, edi
0x00002631      ba05000000     mov edx, 5
0x00002636      e845f4ffff     call sym.imp.dcgettext
0x0000263b      31f6           xor esi, esi
0x0000263d      4889c2         mov rdx, rax
0x00002640      31ff           xor edi, edi
0x00002642      31c0           xor eax, eax
0x00002644      e837f6ffff     call sym.imp.error
0x00002649      e9c5fdffff     jmp 0x2413
0x0000264e      e8ed080000     call sym.setup_padding_buffer.part.0
0x00002653      e9cffdffff     jmp 0x2427
0x00002658      4f8d042c       lea r8, [r12 + r13]
0x0000265c      4c8d35ee7000.  lea r14, [0x00009751]                   ; " "
0x00002663      c644240800     mov byte [rsp + 8], 0
0x00002668      0f1f84000000.  nop dword [rax + rax]
0x00002670      4c89c7         mov rdi, r8
0x00002673      4c89f6         mov rsi, r14
0x00002676      e8d5f4ffff     call sym.imp.strspn
0x0000267b      4901c5         add r13, rax
0x0000267e      4f8d042c       lea r8, [r12 + r13]
0x00002682      410fb610       movzx edx, byte [r8]
0x00002686      80fa27         cmp dl, 0x27
0x00002689      0f8411010000   je 0x27a0
0x0000268f      80fa30         cmp dl, 0x30
0x00002692      0f841f010000   je 0x27b7
0x00002698      4885c0         test rax, rax
0x0000269b      75d3           jne 0x2670
0x0000269d      4c89442410     mov qword [rsp + 0x10], r8
0x000026a2      4c8d6c2430     lea r13, [rsp + 0x30]
0x000026a7      e824f3ffff     call sym.imp.__errno_location
0x000026ac      4c8b442410     mov r8, qword [rsp + 0x10]
0x000026b1      c70000000000   mov dword [rax], 0
0x000026b7      ba0a000000     mov edx, 0xa
0x000026bc      4c89ee         mov rsi, r13
0x000026bf      4889442418     mov qword [rsp + 0x18], rax
0x000026c4      4c89c7         mov rdi, r8
0x000026c7      e8e4f4ffff     call sym.imp.strtol
0x000026cc      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x000026d1      4989c6         mov r14, rax
0x000026d4      4c8b442410     mov r8, qword [rsp + 0x10]
0x000026d9      41833922       cmp dword [r9], 0x22
0x000026dd      0f8457040000   je 0x2b3a
0x000026e3      4c39442430     cmp qword [rsp + 0x30], r8
0x000026e8      743b           je 0x2725
0x000026ea      4885c0         test rax, rax
0x000026ed      7436           je 0x2725
0x000026ef      803d2aba2000.  cmp byte [obj.debug], 0                 ; [0x20e120:1]=0
0x000026f6      0f84ae010000   je 0x28aa
0x000026fc      48833d54ba20.  cmp qword [obj.padding_width], 0        ; [0x20e158:8]=0
0x00002704      0f84a0010000   je 0x28aa
0x0000270a      807c240800     cmp byte [rsp + 8], 0
0x0000270f      0f846a010000   je 0x287f
0x00002715      4885c0         test rax, rax
0x00002718      0f8e61010000   jle 0x287f
0x0000271e      4c89352bba20.  mov qword [obj.zero_padding_width], r14 ; [0x20e150:8]=0
0x00002725      488b542430     mov rdx, qword [rsp + 0x30]
0x0000272a      4889d0         mov rax, rdx
0x0000272d      0fb612         movzx edx, byte [rdx]
0x00002730      4c29e0         sub rax, r12
0x00002733      84d2           test dl, dl
0x00002735      0f84c2020000   je 0x29fd
0x0000273b      80fa2e         cmp dl, 0x2e
0x0000273e      0f8486010000   je 0x28ca
0x00002744      41803c0466     cmp byte [r12 + rax], 0x66
0x00002749      0f856c030000   jne 0x2abb
0x0000274f      4883c001       add rax, 1
0x00002753      4d8d2c04       lea r13, [r12 + rax]
0x00002757      410fb65500     movzx edx, byte [r13]
0x0000275c      84d2           test dl, dl
0x0000275e      7515           jne 0x2775
0x00002760      e911020000     jmp 0x2976
0x00002765      0f1f00         nop dword [rax]
0x00002768      89fa           mov edx, edi
0x0000276a      84d2           test dl, dl
0x0000276c      4889f0         mov rax, rsi
0x0000276f      0f84a0fbffff   je 0x2315
0x00002775      80fa25         cmp dl, 0x25
0x00002778      488d7001       lea rsi, [rax + 1]
0x0000277c      410fb67c0401   movzx edi, byte [r12 + rax + 1]
0x00002782      75e4           jne 0x2768
0x00002784      4080ff25       cmp dil, 0x25
0x00002788      0f85fb020000   jne 0x2a89
0x0000278e      488d7002       lea rsi, [rax + 2]
0x00002792      410fb6540402   movzx edx, byte [r12 + rax + 2]
0x00002798      ebd0           jmp 0x276a
0x0000279a      660f1f440000   nop word [rax + rax]
0x000027a0      4983c501       add r13, 1
0x000027a4      c705c2b92000.  mov dword [obj.grouping], 1             ; [0x20e170:4]=0
0x000027ae      4f8d042c       lea r8, [r12 + r13]
0x000027b2      e9b9feffff     jmp 0x2670
0x000027b7      4983c501       add r13, 1
0x000027bb      c644240801     mov byte [rsp + 8], 1
0x000027c0      4f8d042c       lea r8, [r12 + r13]
0x000027c4      e9a7feffff     jmp 0x2670
0x000027c9      4585e4         test r12d, r12d
0x000027cc      0f85b7fdffff   jne 0x2589
0x000027d2      8b05a8b92000   mov eax, dword [obj.inval_style]        ; [0x20e180:4]=0
0x000027d8      83e802         sub eax, 2
0x000027db      83f801         cmp eax, 1
0x000027de      0f86a5fdffff   jbe 0x2589
0x000027e4      b802000000     mov eax, 2
0x000027e9      e99dfdffff     jmp 0x258b
0x000027ee      488d35f38700.  lea rsi, str.failed_to_convert_some_of_the_input_numbers ; 0xafe8 ; "failed to convert some of the input numbers"
0x000027f5      31ff           xor edi, edi
0x000027f7      ba05000000     mov edx, 5
0x000027fc      e87ff2ffff     call sym.imp.dcgettext
0x00002801      31f6           xor esi, esi
0x00002803      4889c2         mov rdx, rax
0x00002806      31ff           xor edi, edi
0x00002808      31c0           xor eax, eax
0x0000280a      e871f4ffff     call sym.imp.error
0x0000280f      ebc1           jmp 0x27d2
0x00002811      488d35066f00.  lea rsi, str.failed_to_set_locale       ; 0x971e ; "failed to set locale"
0x00002818      31ff           xor edi, edi
0x0000281a      ba05000000     mov edx, 5
0x0000281f      e85cf2ffff     call sym.imp.dcgettext
0x00002824      31f6           xor esi, esi
0x00002826      4889c2         mov rdx, rax
0x00002829      31ff           xor edi, edi
0x0000282b      31c0           xor eax, eax
0x0000282d      e84ef4ffff     call sym.imp.error
0x00002832      e920faffff     jmp 0x2257
0x00002837      488d357a8700.  lea rsi, str.header_ignored_with_command_line_input ; 0xafb8 ; "--header ignored with command-line input"
0x0000283e      31ff           xor edi, edi
0x00002840      ba05000000     mov edx, 5
0x00002845      e836f2ffff     call sym.imp.dcgettext
0x0000284a      31f6           xor esi, esi
0x0000284c      4889c2         mov rdx, rax
0x0000284f      31ff           xor edi, edi
0x00002851      31c0           xor eax, eax
0x00002853      e828f4ffff     call sym.imp.error
0x00002858      8b057ab82000   mov eax, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20e0d8:4]=0
0x0000285e      39c5           cmp ebp, eax
0x00002860      0f8e23fdffff   jle 0x2589
0x00002866      e95afdffff     jmp 0x25c5
0x0000286b      4c89ef         mov rdi, r13
0x0000286e      e84d5d0000     call sym.xstrdup
0x00002873      488905beb820.  mov qword [obj.format_str_suffix], rax  ; [0x20e138:8]=0
0x0000287a      e9bcfaffff     jmp 0x233b
0x0000287f      488d35c28500.  lea rsi, str.format_padding_overriding___padding ; 0xae48 ; "--format padding overriding --padding"
0x00002886      ba05000000     mov edx, 5
0x0000288b      31ff           xor edi, edi
0x0000288d      4c894c2410     mov qword [rsp + 0x10], r9
0x00002892      e8e9f1ffff     call sym.imp.dcgettext
0x00002897      31f6           xor esi, esi
0x00002899      4889c2         mov rdx, rax
0x0000289c      31ff           xor edi, edi
0x0000289e      31c0           xor eax, eax
0x000028a0      e8dbf3ffff     call sym.imp.error
0x000028a5      4c8b4c2410     mov r9, qword [rsp + 0x10]
0x000028aa      4d85f6         test r14, r14
0x000028ad      0f889c000000   js 0x294f
0x000028b3      807c240800     cmp byte [rsp + 8], 0
0x000028b8      0f8560feffff   jne 0x271e
0x000028be      4c893593b820.  mov qword [obj.padding_width], r14      ; [0x20e158:8]=0
0x000028c5      e95bfeffff     jmp 0x2725
0x000028ca      4d8d740401     lea r14, [r12 + rax + 1]
0x000028cf      41c701000000.  mov dword [r9], 0
0x000028d6      ba0a000000     mov edx, 0xa
0x000028db      4c89ee         mov rsi, r13
0x000028de      4c894c2408     mov qword [rsp + 8], r9
0x000028e3      4c89f7         mov rdi, r14
0x000028e6      e8c5f2ffff     call sym.imp.strtol
0x000028eb      4c8b4c2408     mov r9, qword [rsp + 8]
0x000028f0      48890529b720.  mov qword [obj.user_precision], rax     ; [0x20e020:8]=-1
0x000028f7      41833922       cmp dword [r9], 0x22
0x000028fb      0f84ca000000   je 0x29cb
0x00002901      4885c0         test rax, rax
0x00002904      0f88c1000000   js 0x29cb
0x0000290a      e821f4ffff     call sym.imp.__ctype_b_loc
0x0000290f      490fbe36       movsx rsi, byte [r14]
0x00002913      488b00         mov rax, qword [rax]
0x00002916      f6047001       test byte [rax + rsi*2], 1
0x0000291a      0f85ab000000   jne 0x29cb
0x00002920      4080fe2b       cmp sil, 0x2b
0x00002924      0f84a1000000   je 0x29cb
0x0000292a      488b442430     mov rax, qword [rsp + 0x30]
0x0000292f      4c29e0         sub rax, r12
0x00002932      e90dfeffff     jmp 0x2744
0x00002937      488d35386c00.  lea rsi, [0x00009576]
0x0000293e      e932faffff     jmp 0x2375
0x00002943      488d352c6c00.  lea rsi, [0x00009576]
0x0000294a      e909faffff     jmp 0x2358
0x0000294f      49f7de         neg r14
0x00002952      c705bcb62000.  mov dword [obj.padding_alignment], 0    ; [0x20e018:4]=1
0x0000295c      4c8935f5b720.  mov qword [obj.padding_width], r14      ; [0x20e158:8]=0
0x00002963      e9bdfdffff     jmp 0x2725
0x00002968      4d85e4         test r12, r12
0x0000296b      0f8559f9ffff   jne 0x22ca
0x00002971      e992fcffff     jmp 0x2608
0x00002976      4d85ff         test r15, r15
0x00002979      0f84bcf9ffff   je 0x233b
0x0000297f      e99af9ffff     jmp 0x231e
0x00002984      4d85e4         test r12, r12
0x00002987      0f853df9ffff   jne 0x22ca
0x0000298d      e981faffff     jmp 0x2413
0x00002992      31ff           xor edi, edi
0x00002994      e8a71f0000     call sym.usage
0x00002999      4c89e7         mov rdi, r12
0x0000299c      e8af530000     call sym.quote
0x000029a1      488d358b6d00.  lea rsi, str.format__s_has_no____directive ; 0x9733 ; "format %s has no %% directive"
0x000029a8      4889c3         mov rbx, rax
0x000029ab      ba05000000     mov edx, 5
0x000029b0      31ff           xor edi, edi
0x000029b2      e8c9f0ffff     call sym.imp.dcgettext
0x000029b7      4889d9         mov rcx, rbx
0x000029ba      4889c2         mov rdx, rax
0x000029bd      31f6           xor esi, esi
0x000029bf      bf01000000     mov edi, 1
0x000029c4      31c0           xor eax, eax
0x000029c6      e8b5f2ffff     call sym.imp.error
0x000029cb      4c89e7         mov rdi, r12
0x000029ce      e87d530000     call sym.quote
0x000029d3      488d35968400.  lea rsi, str.invalid_precision_in_format__s ; 0xae70 ; "invalid precision in format %s"
0x000029da      4889c3         mov rbx, rax
0x000029dd      ba05000000     mov edx, 5
0x000029e2      31ff           xor edi, edi
0x000029e4      e897f0ffff     call sym.imp.dcgettext
0x000029e9      4889d9         mov rcx, rbx
0x000029ec      4889c2         mov rdx, rax
0x000029ef      31f6           xor esi, esi
0x000029f1      bf01000000     mov edi, 1
0x000029f6      31c0           xor eax, eax
0x000029f8      e883f2ffff     call sym.imp.error
0x000029fd      4c89e7         mov rdi, r12
0x00002a00      e84b530000     call sym.quote
0x00002a05      488d35476d00.  lea rsi, str.format__s_ends_in          ; 0x9753 ; "format %s ends in %%"
0x00002a0c      4889c3         mov rbx, rax
0x00002a0f      ba05000000     mov edx, 5
0x00002a14      31ff           xor edi, edi
0x00002a16      e865f0ffff     call sym.imp.dcgettext
0x00002a1b      4889d9         mov rcx, rbx
0x00002a1e      4889c2         mov rdx, rax
0x00002a21      31f6           xor esi, esi
0x00002a23      bf01000000     mov edi, 1
0x00002a28      31c0           xor eax, eax
0x00002a2a      e851f2ffff     call sym.imp.error
0x00002a2f      488b3daab620.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20e0e0:8]=0
0x00002a36      e815530000     call sym.quote
0x00002a3b      488d35766c00.  lea rsi, str.invalid_padding_value__s   ; 0x96b8 ; "invalid padding value %s"
0x00002a42      4889c3         mov rbx, rax
0x00002a45      ba05000000     mov edx, 5
0x00002a4a      31ff           xor edi, edi
0x00002a4c      e82ff0ffff     call sym.imp.dcgettext
0x00002a51      4889d9         mov rcx, rbx
0x00002a54      4889c2         mov rdx, rax
0x00002a57      31f6           xor esi, esi
0x00002a59      bf01000000     mov edi, 1
0x00002a5e      31c0           xor eax, eax
0x00002a60      e81bf2ffff     call sym.imp.error
0x00002a65      488d35348300.  lea rsi, str.the_delimiter_must_be_a_single_character ; 0xada0 ; "the delimiter must be a single character"
0x00002a6c      ba05000000     mov edx, 5
0x00002a71      31ff           xor edi, edi
0x00002a73      e808f0ffff     call sym.imp.dcgettext
0x00002a78      31f6           xor esi, esi
0x00002a7a      4889c2         mov rdx, rax
0x00002a7d      bf01000000     mov edi, 1
0x00002a82      31c0           xor eax, eax
0x00002a84      e8f7f1ffff     call sym.imp.error
0x00002a89      4c89e7         mov rdi, r12
0x00002a8c      e8bf520000     call sym.quote
0x00002a91      488d35388400.  lea rsi, str.format__s_has_too_many____directives ; 0xaed0 ; "format %s has too many %% directives"
0x00002a98      4889c3         mov rbx, rax
0x00002a9b      ba05000000     mov edx, 5
0x00002aa0      31ff           xor edi, edi
0x00002aa2      e8d9efffff     call sym.imp.dcgettext
0x00002aa7      4889d9         mov rcx, rbx
0x00002aaa      4889c2         mov rdx, rax
0x00002aad      31f6           xor esi, esi
0x00002aaf      bf01000000     mov edi, 1
0x00002ab4      31c0           xor eax, eax
0x00002ab6      e8c5f1ffff     call sym.imp.error
0x00002abb      4c89e7         mov rdi, r12
0x00002abe      e88d520000     call sym.quote
0x00002ac3      488d35c68300.  lea rsi, str.invalid_format__s__directive_must_be____0________N__.__N_f ; 0xae90 ; "invalid format %s, directive must be %%[0]['][-][N][.][N]f"
0x00002aca      4889c3         mov rbx, rax
0x00002acd      ba05000000     mov edx, 5
0x00002ad2      31ff           xor edi, edi
0x00002ad4      e8a7efffff     call sym.imp.dcgettext
0x00002ad9      4889d9         mov rcx, rbx
0x00002adc      4889c2         mov rdx, rax
0x00002adf      31f6           xor esi, esi
0x00002ae1      bf01000000     mov edi, 1
0x00002ae6      31c0           xor eax, eax
0x00002ae8      e893f1ffff     call sym.imp.error
0x00002aed      e8beefffff     call sym.imp.__stack_chk_fail
0x00002af2      488d356f8400.  lea rsi, str.grouping_cannot_be_combined_with___to ; 0xaf68 ; "grouping cannot be combined with --to"
0x00002af9      ba05000000     mov edx, 5
0x00002afe      31ff           xor edi, edi
0x00002b00      e87befffff     call sym.imp.dcgettext
0x00002b05      31f6           xor esi, esi
0x00002b07      4889c2         mov rdx, rax
0x00002b0a      bf01000000     mov edi, 1
0x00002b0f      31c0           xor eax, eax
0x00002b11      e86af1ffff     call sym.imp.error
0x00002b16      488d35b38200.  lea rsi, str.grouping_cannot_be_combined_with___format ; 0xadd0 ; "--grouping cannot be combined with --format"
0x00002b1d      ba05000000     mov edx, 5
0x00002b22      31ff           xor edi, edi
0x00002b24      e857efffff     call sym.imp.dcgettext
0x00002b29      31f6           xor esi, esi
0x00002b2b      4889c2         mov rdx, rax
0x00002b2e      bf01000000     mov edi, 1
0x00002b33      31c0           xor eax, eax
0x00002b35      e846f1ffff     call sym.imp.error
0x00002b3a      4c89e7         mov rdi, r12
0x00002b3d      e80e520000     call sym.quote
0x00002b42      488d35d78200.  lea rsi, str.invalid_format__s__width_overflow ; 0xae20 ; "invalid format %s (width overflow)"
0x00002b49      4889c3         mov rbx, rax
0x00002b4c      ba05000000     mov edx, 5
0x00002b51      31ff           xor edi, edi
0x00002b53      e828efffff     call sym.imp.dcgettext
0x00002b58      4889d9         mov rcx, rbx
0x00002b5b      4889c2         mov rdx, rax
0x00002b5e      31f6           xor esi, esi
0x00002b60      bf01000000     mov edi, 1
0x00002b65      31c0           xor eax, eax
0x00002b67      e814f1ffff     call sym.imp.error
0x00002b6c      488d355e6b00.  lea rsi, str.multiple_field_specifications ; 0x96d1 ; "multiple field specifications"
0x00002b73      ba05000000     mov edx, 5
0x00002b78      31ff           xor edi, edi
0x00002b7a      e801efffff     call sym.imp.dcgettext
0x00002b7f      31f6           xor esi, esi
0x00002b81      4889c2         mov rdx, rax
0x00002b84      bf01000000     mov edi, 1
0x00002b89      31c0           xor eax, eax
0x00002b8b      e8f0f0ffff     call sym.imp.error
;-- entry0:
;-- _start:
;-- rip:
0x00002b90      31ed           xor ebp, ebp
0x00002b92      4989d1         mov r9, rdx
0x00002b95      5e             pop rsi
0x00002b96      4889e2         mov rdx, rsp
0x00002b99      4883e4f0       and rsp, 0xfffffffffffffff0
0x00002b9d      50             push rax
0x00002b9e      54             push rsp
0x00002b9f      4c8d05ba6800.  lea r8, sym.__libc_csu_fini             ; 0x9460
0x00002ba6      488d0d436800.  lea rcx, sym.__libc_csu_init            ; 0x93f0 ; "AWAVI\x89\xd7AUATL\x8d%.D "
0x00002bad      488d3d9cf1ff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1d50 ; "AWAVAUATUS\x89\xfdH\x89\xf3H\x83\xecHH\x8b>dH\x8b\x04%("
0x00002bb4      ff151eb42000   call qword [reloc.__libc_start_main]    ; [0x20dfd8:8]=0
0x00002bba      f4             hlt
0x00002bbb      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00002bc0      488d3df9b420.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20e0c0
0x00002bc7      55             push rbp
0x00002bc8      488d05f1b420.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20e0c0
0x00002bcf      4839f8         cmp rax, rdi
0x00002bd2      4889e5         mov rbp, rsp
0x00002bd5      7419           je 0x2bf0
0x00002bd7      488b05f2b320.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x20dfd0:8]=0
0x00002bde      4885c0         test rax, rax
0x00002be1      740d           je 0x2bf0
0x00002be3      5d             pop rbp
0x00002be4      ffe0           jmp rax
0x00002be6      662e0f1f8400.  nop word cs:[rax + rax]
0x00002bf0      5d             pop rbp
0x00002bf1      c3             ret
0x00002bf2      0f1f4000       nop dword [rax]
0x00002bf6      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00002c00      488d3db9b420.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20e0c0
0x00002c07      488d35b2b420.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20e0c0
0x00002c0e      55             push rbp
0x00002c0f      4829fe         sub rsi, rdi
0x00002c12      4889e5         mov rbp, rsp
0x00002c15      48c1fe03       sar rsi, 3
0x00002c19      4889f0         mov rax, rsi
0x00002c1c      48c1e83f       shr rax, 0x3f
0x00002c20      4801c6         add rsi, rax
0x00002c23      48d1fe         sar rsi, 1
0x00002c26      7418           je 0x2c40
0x00002c28      488b05b9b320.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x20dfe8:8]=0
0x00002c2f      4885c0         test rax, rax
0x00002c32      740c           je 0x2c40
0x00002c34      5d             pop rbp
0x00002c35      ffe0           jmp rax
0x00002c37      660f1f840000.  nop word [rax + rax]
0x00002c40      5d             pop rbp
0x00002c41      c3             ret
0x00002c42      0f1f4000       nop dword [rax]
0x00002c46      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00002c50      803db1b42000.  cmp byte [obj.completed.7697], 0        ; [0x20e108:1]=0
0x00002c57      752f           jne 0x2c88
0x00002c59      48833d8fb320.  cmp qword [reloc.__cxa_finalize], 0     ; [0x20dff0:8]=0
0x00002c61      55             push rbp
0x00002c62      4889e5         mov rbp, rsp
0x00002c65      740c           je 0x2c73
0x00002c67      488b3d9ab320.  mov rdi, qword [obj.__dso_handle]       ; [0x20e008:8]=0x20e008 obj.__dso_handle
0x00002c6e      e8cdf0ffff     call sym..plt.got
0x00002c73      e848ffffff     call sym.deregister_tm_clones
0x00002c78      c60589b42000.  mov byte [obj.completed.7697], 1        ; [0x20e108:1]=0
0x00002c7f      5d             pop rbp
0x00002c80      c3             ret
0x00002c81      0f1f80000000.  nop dword [rax]
0x00002c88      f3c3           ret
0x00002c8a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00002c90      55             push rbp
0x00002c91      4889e5         mov rbp, rsp
0x00002c94      5d             pop rbp
0x00002c95      e966ffffff     jmp sym.register_tm_clones
0x00002c9a      660f1f440000   nop word [rax + rax]
;-- simple_strtod_int:
0x00002ca0      55             push rbp                                ; .//src:468
0x00002ca1      53             push rbx
0x00002ca2      4889d5         mov rbp, rdx
0x00002ca5      4883ec28       sub rsp, 0x28
0x00002ca9      803f2d         cmp byte [rdi], 0x2d                    ; .//src:475
0x00002cac      0f84ce000000   je 0x2d80
0x00002cb2      c60100         mov byte [rcx], 0                       ; .//src:481
0x00002cb5      48893e         mov qword [rsi], rdi                    ; .//src:483
0x00002cb8      d9ee           fldz                                    ; .//src:494
0x00002cba      4531c9         xor r9d, r9d
0x00002cbd      4531c0         xor r8d, r8d
0x00002cc0      31db           xor ebx, ebx
0x00002cc2      41ba01000000   mov r10d, 1                             ; .//src:490
0x00002cc8      d905e6840000   fld dword [0x0000b1b4]                  ; .//src:499
0x00002cce      eb35           jmp 0x2d05
0x00002cd0      85c0           test eax, eax                           ; .//src:490
0x00002cd2      7550           jne 0x2d24
0x00002cd4      4183f812       cmp r8d, 0x12                           ; .//src:493
0x00002cd8      760f           jbe 0x2ce9
0x00002cda      4183f81b       cmp r8d, 0x1b                           ; .//src:496
0x00002cde      0f87bc000000   ja 0x2da0
0x00002ce4      bb01000000     mov ebx, 1                              ; .//src:494
0x00002ce9      890424         mov dword [rsp], eax                    ; .//src:500
0x00002cec      4883c701       add rdi, 1                              ; .//src:502
0x00002cf0      4885ff         test rdi, rdi                           ; .//src:484
0x00002cf3      48893e         mov qword [rsi], rdi                    ; .//src:502
0x00002cf6      41b901000000   mov r9d, 1                              ; .//src:488
0x00002cfc      dcc9           fmul st(1), st(0)                       ; .//src:499
0x00002cfe      db0424         fild dword [rsp]                        ; .//src:500
0x00002d01      dec2           faddp st(2)
0x00002d03      745b           je 0x2d60                               ; .//src:484
0x00002d05      0fbe07         movsx eax, byte [rdi]
0x00002d08      89c2           mov edx, eax
0x00002d0a      83ea30         sub edx, 0x30                           ; ../coreutils-8.31/src/mfmt.c:235
0x00002d0d      80fa09         cmp dl, 9
0x00002d10      771e           ja 0x2d30
0x00002d12      d9ee           fldz                                    ; .//src:490
0x00002d14      83e830         sub eax, 0x30                           ; .//src:486
0x00002d17      dfea           fucomip st(2)                           ; .//src:490
0x00002d19      0f9ac2         setp dl
0x00002d1c      410f45d2       cmovne edx, r10d
0x00002d20      84d2           test dl, dl
0x00002d22      74ac           je 0x2cd0
0x00002d24      4183c001       add r8d, 1                              ; .//src:491
0x00002d28      ebaa           jmp 0x2cd4
0x00002d2a      660f1f440000   nop word [rax + rax]
0x00002d30      ddd8           fstp st(0)
0x00002d32      4584c9         test r9b, r9b                           ; .//src:504
0x00002d35      752b           jne 0x2d62
0x00002d37      db3c24         fstp xword [rsp]
0x00002d3a      486315d3b320.  movsxd rdx, dword [obj.decimal_point_length] ; .//src:505 ; [0x20e114:4]=0
0x00002d41      488b35d0b320.  mov rsi, qword [obj.decimal_point]      ; [0x20e118:8]=0
0x00002d48      48894c2418     mov qword [rsp + 0x18], rcx
0x00002d4d      e88eecffff     call sym.imp.strncmp
0x00002d52      85c0           test eax, eax
0x00002d54      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00002d59      db2c24         fld xword [rsp]
0x00002d5c      755a           jne 0x2db8
0x00002d5e      eb02           jmp 0x2d62
0x00002d60      ddd8           fstp st(0)
0x00002d62      803900         cmp byte [rcx], 0                       ; .//src:507
0x00002d65      7511           jne 0x2d78
0x00002d67      89d8           mov eax, ebx                            ; .//src:514
0x00002d69      db7d00         fstp xword [rbp]                        ; .//src:511
0x00002d6c      4883c428       add rsp, 0x28                           ; .//src:514
0x00002d70      5b             pop rbx
0x00002d71      5d             pop rbp
0x00002d72      c3             ret
0x00002d73      0f1f440000     nop dword [rax + rax]
0x00002d78      d9e0           fchs                                    ; .//src:508
0x00002d7a      ebeb           jmp 0x2d67
0x00002d7c      0f1f4000       nop dword [rax]
0x00002d80      4883c701       add rdi, 1                              ; .//src:477
0x00002d84      c60101         mov byte [rcx], 1                       ; .//src:478
0x00002d87      4885ff         test rdi, rdi                           ; .//src:484
0x00002d8a      48893e         mov qword [rsi], rdi                    ; .//src:483
0x00002d8d      0f8525ffffff   jne 0x2cb8                              ; .//src:484
0x00002d93      31db           xor ebx, ebx                            ; .//src:469
0x00002d95      d9ee           fldz                                    ; .//src:471
0x00002d97      eb9e           jmp 0x2d37
0x00002d99      0f1f80000000.  nop dword [rax]
0x00002da0      ddd8           fstp st(0)
0x00002da2      ddd8           fstp st(0)
0x00002da4      bb02000000     mov ebx, 2                              ; .//src:497
0x00002da9      4883c428       add rsp, 0x28                           ; .//src:514
0x00002dad      89d8           mov eax, ebx
0x00002daf      5b             pop rbx
0x00002db0      5d             pop rbp
0x00002db1      c3             ret
0x00002db2      660f1f440000   nop word [rax + rax]
0x00002db8      ddd8           fstp st(0)
0x00002dba      bb03000000     mov ebx, 3                              ; .//src:506
0x00002dbf      4883c428       add rsp, 0x28                           ; .//src:514
0x00002dc3      89d8           mov eax, ebx
0x00002dc5      5b             pop rbx
0x00002dc6      5d             pop rbp
0x00002dc7      c3             ret
0x00002dc8      0f1f84000000.  nop dword [rax + rax]
;-- unit_to_umax:
0x00002dd0      4154           push r12                                ; .//src:825
0x00002dd2      55             push rbp
0x00002dd3      53             push rbx
0x00002dd4      4889fb         mov rbx, rdi
0x00002dd7      4883ec20       sub rsp, 0x20
0x00002ddb      64488b042528.  mov rax, qword fs:[0x28]
0x00002de4      4889442418     mov qword [rsp + 0x18], rax
0x00002de9      31c0           xor eax, eax
0x00002deb      e8b0ecffff     call sym.imp.strlen                     ; .//src:829
0x00002df0      4885c0         test rax, rax                           ; .//src:835
0x00002df3      48c744240800.  mov qword [rsp + 8], 0                  ; .//src:830
0x00002dfc      7413           je 0x2e11                               ; .//src:835
0x00002dfe      4889c5         mov rbp, rax
0x00002e01      4c8d60ff       lea r12, [rax - 1]
0x00002e05      0fb64403ff     movzx eax, byte [rbx + rax - 1]         ; ../coreutils-8.31/src/mfmt.c:235
0x00002e0a      83e830         sub eax, 0x30
0x00002e0d      3c09           cmp al, 9
0x00002e0f      7777           ja 0x2e88
0x00002e11      4c8d058c6600.  lea r8, str.KMGTPEZY                    ; .//src:832 ; 0x94a4 ; "KMGTPEZY"
0x00002e18      4989d9         mov r9, rbx                             ; ../coreutils-8.31/src/mfmt.c:235
0x00002e1b      4531e4         xor r12d, r12d                          ; .//src:828
0x00002e1e      488d4c2410     lea rcx, [rsp + 0x10]                   ; .//src:853
0x00002e23      488d742408     lea rsi, [rsp + 8]
0x00002e28      ba0a000000     mov edx, 0xa
0x00002e2d      4c89cf         mov rdi, r9
0x00002e30      e8cb5e0000     call sym.xstrtoumax
0x00002e35      85c0           test eax, eax                           ; .//src:855
0x00002e37      0f85c4000000   jne 0x2f01
0x00002e3d      488b442408     mov rax, qword [rsp + 8]
0x00002e42      803800         cmp byte [rax], 0
0x00002e45      0f85b6000000   jne 0x2f01
0x00002e4b      488b6c2410     mov rbp, qword [rsp + 0x10]
0x00002e50      4885ed         test rbp, rbp
0x00002e53      0f84a8000000   je 0x2f01
0x00002e59      4c89e7         mov rdi, r12                            ; .//src:861
0x00002e5c      e84febffff     call sym.imp.free
0x00002e61      488b542418     mov rdx, qword [rsp + 0x18]             ; .//src:864
0x00002e66      644833142528.  xor rdx, qword fs:[0x28]
0x00002e6f      4889e8         mov rax, rbp
0x00002e72      0f85c3000000   jne 0x2f3b
0x00002e78      4883c420       add rsp, 0x20
0x00002e7c      5b             pop rbx
0x00002e7d      5d             pop rbp
0x00002e7e      415c           pop r12
0x00002e80      c3             ret
0x00002e81      0f1f80000000.  nop dword [rax]
0x00002e88      488d7d02       lea rdi, [rbp + 2]                      ; .//src:837
0x00002e8c      e8ff540000     call sym.xmalloc
0x00002e91      4889ea         mov rdx, rbp                            ; ../coreutils-8.31/lib/c-ctype.h:34
0x00002e94      4901c4         add r12, rax                            ; .//src:838
0x00002e97      4889de         mov rsi, rbx                            ; ../coreutils-8.31/lib/c-ctype.h:34
0x00002e9a      4889c7         mov rdi, rax
0x00002e9d      4c89642408     mov qword [rsp + 8], r12                ; .//src:838
0x00002ea2      e819edffff     call sym.imp.memcpy                     ; ../coreutils-8.31/lib/c-ctype.h:34
0x00002ea7      41803c2469     cmp byte [r12], 0x69                    ; .//src:841
0x00002eac      4989c1         mov r9, rax                             ; ../coreutils-8.31/lib/c-ctype.h:34
0x00002eaf      7506           jne 0x2eb7                              ; .//src:841
0x00002eb1      4883fd01       cmp rbp, 1
0x00002eb5      7529           jne 0x2ee0
0x00002eb7      498d442402     lea rax, [r12 + 2]                      ; .//src:846
0x00002ebc      4c8d05ea6500.  lea r8, str.KMGTPEZY0                   ; .//src:847 ; 0x94ad ; "KMGTPEZY0"
0x00002ec3      4889442408     mov qword [rsp + 8], rax                ; .//src:846
0x00002ec8      b842000000     mov eax, 0x42                           ; .//src:845 ; 'B'
0x00002ecd      664189442401   mov word [r12 + 1], ax
0x00002ed3      4d89cc         mov r12, r9
0x00002ed6      e943ffffff     jmp 0x2e1e
0x00002edb      0f1f440000     nop dword [rax + rax]
0x00002ee0      410fb64424ff   movzx eax, byte [r12 - 1]               ; ../coreutils-8.31/src/mfmt.c:235
0x00002ee6      83e830         sub eax, 0x30
0x00002ee9      3c09           cmp al, 9
0x00002eeb      76ca           jbe 0x2eb7
0x00002eed      41c6042400     mov byte [r12], 0                       ; .//src:842
0x00002ef2      4c8d05ab6500.  lea r8, str.KMGTPEZY                    ; .//src:832 ; 0x94a4 ; "KMGTPEZY"
0x00002ef9      4d89cc         mov r12, r9                             ; .//src:842
0x00002efc      e91dffffff     jmp 0x2e1e
0x00002f01      4c89e7         mov rdi, r12                            ; .//src:857
0x00002f04      e8a7eaffff     call sym.imp.free
0x00002f09      4889df         mov rdi, rbx                            ; .//src:858
0x00002f0c      e83f4e0000     call sym.quote
0x00002f11      488d359f6500.  lea rsi, str.invalid_unit_size:__s      ; 0x94b7 ; "invalid unit size: %s"
0x00002f18      4889c3         mov rbx, rax
0x00002f1b      ba05000000     mov edx, 5
0x00002f20      31ff           xor edi, edi
0x00002f22      e859ebffff     call sym.imp.dcgettext
0x00002f27      4889d9         mov rcx, rbx
0x00002f2a      4889c2         mov rdx, rax
0x00002f2d      31f6           xor esi, esi
0x00002f2f      bf01000000     mov edi, 1
0x00002f34      31c0           xor eax, eax
0x00002f36      e845edffff     call sym.imp.error
0x00002f3b      e870ebffff     call sym.imp.__stack_chk_fail           ; .//src:864
;-- setup_padding_buffer.part.0:
0x00002f40      4883ec08       sub rsp, 8                              ; .//src:868
0x00002f44      488d7701       lea rsi, [rdi + 1]                      ; .//src:873
0x00002f48      488b3d19b220.  mov rdi, qword [obj.padding_buffer]     ; .//src:874 ; [0x20e168:8]=0
0x00002f4f      4889350ab220.  mov qword [obj.padding_buffer_size], rsi ; .//src:873 ; [0x20e160:8]=0
0x00002f56      e895540000     call sym.xrealloc                       ; .//src:874
0x00002f5b      48890506b220.  mov qword [obj.padding_buffer], rax     ; [0x20e168:8]=0
0x00002f62      4883c408       add rsp, 8                              ; .//src:875
0x00002f66      c3             ret
0x00002f67      660f1f840000.  nop word [rax + rax]
;-- process_field:
0x00002f70      4157           push r15                                ; .//src:1373
0x00002f72      4156           push r14
0x00002f74      4155           push r13
0x00002f76      4154           push r12
0x00002f78      4989f5         mov r13, rsi
0x00002f7b      55             push rbp
0x00002f7c      53             push rbx
0x00002f7d      4989fc         mov r12, rdi
0x00002f80      4881ec680100.  sub rsp, 0x168
0x00002f87      64488b042528.  mov rax, qword fs:[0x28]
0x00002f90      488984245801.  mov qword [rsp + 0x158], rax
0x00002f98      31c0           xor eax, eax
0x00002f9a      488b0557b320.  mov rax, qword [obj.frp]                ; .//src:1356 ; [0x20e2f8:8]=0
0x00002fa1      4885c0         test rax, rax                           ; .//src:1357
0x00002fa4      7519           jne 0x2fbf
0x00002fa6      eb68           jmp 0x3010
0x00002fa8      0f1f84000000.  nop dword [rax + rax]
0x00002fb0      4939d5         cmp r13, rdx                            ; .//src:1362
0x00002fb3      7206           jb 0x2fbb
0x00002fb5      4c3b6808       cmp r13, qword [rax + 8]
0x00002fb9      765b           jbe 0x3016
0x00002fbb      4883c010       add rax, 0x10                           ; .//src:1364
0x00002fbf      488b10         mov rdx, qword [rax]                    ; .//src:1360
0x00002fc2      4883faff       cmp rdx, 0xffffffffffffffff
0x00002fc6      75e8           jne 0x2fb0
0x00002fc8      488b35f9b020.  mov rsi, qword [obj.stdout]             ; .//src:1392 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0c8:8]=0
0x00002fcf      4c89e7         mov rdi, r12
0x00002fd2      bb01000000     mov ebx, 1                              ; .//src:1376
0x00002fd7      e8a4ebffff     call sym.imp.fputs_unlocked             ; .//src:1392
0x00002fdc      488b8c245801.  mov rcx, qword [rsp + 0x158]            ; .//src:1395
0x00002fe4      6448330c2528.  xor rcx, qword fs:[0x28]
0x00002fed      89d8           mov eax, ebx
0x00002fef      0f8567160000   jne 0x465c
0x00002ff5      4881c4680100.  add rsp, 0x168
0x00002ffc      5b             pop rbx
0x00002ffd      5d             pop rbp
0x00002ffe      415c           pop r12
0x00003000      415d           pop r13
0x00003002      415e           pop r14
0x00003004      415f           pop r15
0x00003006      c3             ret
0x00003007      660f1f840000.  nop word [rax + rax]
0x00003010      4883fe01       cmp rsi, 1                              ; .//src:1378
0x00003014      75b2           jne 0x2fc8
0x00003016      488b2d5bb120.  mov rbp, qword [obj.suffix]             ; .//src:1273 ; [0x20e178:8]=0
0x0000301d      4885ed         test rbp, rbp
0x00003020      7446           je 0x3068
0x00003022      4c89e7         mov rdi, r12
0x00003025      e876eaffff     call sym.imp.strlen
0x0000302a      4889ef         mov rdi, rbp
0x0000302d      4889c3         mov rbx, rax
0x00003030      e86beaffff     call sym.imp.strlen
0x00003035      4839c3         cmp rbx, rax
0x00003038      762e           jbe 0x3068
0x0000303a      4829c3         sub rbx, rax                            ; .//src:1275
0x0000303d      4889ef         mov rdi, rbp                            ; .//src:1277
0x00003040      4c01e3         add rbx, r12                            ; .//src:1275
0x00003043      4889de         mov rsi, rbx                            ; .//src:1277
0x00003046      e855ebffff     call sym.imp.strcmp
0x0000304b      85c0           test eax, eax
0x0000304d      0fb615bcb020.  movzx edx, byte [obj.dev_debug]         ; [0x20e110:1]=0
0x00003054      0f85d6060000   jne 0x3730
0x0000305a      84d2           test dl, dl                             ; .//src:1281
0x0000305c      c60300         mov byte [rbx], 0                       ; .//src:1280
0x0000305f      0f850f080000   jne 0x3874                              ; .//src:1281
0x00003065      0f1f00         nop dword [rax]
0x00003068      410fb61c24     movzx ebx, byte [r12]                   ; .//src:1289
0x0000306d      84db           test bl, bl
0x0000306f      0f84e2070000   je 0x3857
0x00003075      e8b6ecffff     call sym.imp.__ctype_b_loc
0x0000307a      4c89e5         mov rbp, r12
0x0000307d      488b00         mov rax, qword [rax]
0x00003080      eb12           jmp 0x3094
0x00003082      660f1f440000   nop word [rax + rax]
0x00003088      4883c501       add rbp, 1                              ; .//src:1290
0x0000308c      0fb65d00       movzx ebx, byte [rbp]                   ; .//src:1289
0x00003090      84db           test bl, bl
0x00003092      7406           je 0x309a
0x00003094      f6045801       test byte [rax + rbx*2], 1
0x00003098      75ee           jne 0x3088
0x0000309a      4489e0         mov eax, r12d
0x0000309d      29e8           sub eax, ebp
0x0000309f      448b1d8ab020.  mov r11d, dword [obj.auto_padding]      ; .//src:1294 ; [0x20e130:4]=0
0x000030a6      4585db         test r11d, r11d
0x000030a9      0f840a010000   je 0x31b9
0x000030af      85c0           test eax, eax                           ; .//src:1296
0x000030b1      0f8519020000   jne 0x32d0
0x000030b7      4983fd01       cmp r13, 1
0x000030bb      0f8f0f020000   jg 0x32d0
0x000030c1      48c7058cb020.  mov qword [obj.padding_width], 0        ; .//src:1303 ; [0x20e158:8]=0
0x000030cc      0fb6053db020.  movzx eax, byte [obj.dev_debug]         ; .//src:1305 ; [0x20e110:1]=0
0x000030d3      84c0           test al, al
0x000030d5      0f85bd000000   jne 0x3198
0x000030db      660fefd2       pxor xmm2, xmm2                         ; .//src:1308
0x000030df      448b2da2b020.  mov r13d, dword [obj.scale_from]        ; .//src:1173 ; [0x20e188:4]=0
0x000030e6      48c744246000.  mov qword [rsp + 0x60], 0               ; .//src:1170
0x000030ef      41bfe8030000   mov r15d, 0x3e8                         ; .//src:229
0x000030f5      f30f111424     movss dword [rsp], xmm2                 ; .//src:1308
0x000030fa      418d55fd       lea edx, [r13 - 3]                      ; .//src:219
0x000030fe      d90424         fld dword [rsp]                         ; .//src:1308
0x00003101      83fa01         cmp edx, 1                              ; .//src:219
0x00003104      db7c2470       fstp xword [rsp + 0x70]                 ; .//src:1308
0x00003108      774e           ja 0x3158                               ; .//src:219
0x0000310a      41bf00040000   mov r15d, 0x400                         ; .//src:223
0x00003110      84c0           test al, al                             ; .//src:615
0x00003112      7444           je 0x3158
0x00003114      488b35fdaf20.  mov rsi, qword [obj.decimal_point]      ; [0x20e118:8]=0
0x0000311b      bf01000000     mov edi, 1
0x00003120      e80b4c0000     call sym.quote_n
0x00003125      4889ee         mov rsi, rbp
0x00003128      31ff           xor edi, edi
0x0000312a      4889c3         mov rbx, rax
0x0000312d      e8fe4b0000     call sym.quote_n
0x00003132      488b3dc7af20.  mov rdi, qword [obj.stderr]             ; string_fortified.h:97   return __builtin___stpcpy_chk (__dest, __src, __bos (__dest)); ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e100:8]=0
0x00003139      488d15186800.  lea rdx, str.simple_strtod_human:____input_string:__s____locale_decimal_point:__s____MAX_UNSCALED_DIGITS:__d ; 0x9958 ; "simple_strtod_human:\n  input string: %s\n  locale decimal-point: %s\n  MAX_UNSCALED_DIGITS: %d\n"
0x00003140      4889c1         mov rcx, rax
0x00003143      41b912000000   mov r9d, 0x12
0x00003149      4989d8         mov r8, rbx
0x0000314c      be01000000     mov esi, 1
0x00003151      31c0           xor eax, eax
0x00003153      e888ebffff     call sym.imp.__fprintf_chk
0x00003158      488d4c245e     lea rcx, [rsp + 0x5e]                   ; .//src:543
0x0000315d      488d542470     lea rdx, [rsp + 0x70]
0x00003162      488d742460     lea rsi, [rsp + 0x60]
0x00003167      4889ef         mov rdi, rbp
0x0000316a      e831fbffff     call sym.simple_strtod_int
0x0000316f      83f801         cmp eax, 1                              ; .//src:544
0x00003172      89c3           mov ebx, eax                            ; .//src:543
0x00003174      0f86b6010000   jbe 0x3330                              ; .//src:544
0x0000317a      83fb06         cmp ebx, 6                              ; .//src:686
0x0000317d      0f879d010000   ja 0x3320
0x00003183      488d0d967e00.  lea rcx, [0x0000b020]
0x0000318a      89da           mov edx, ebx
0x0000318c      48630491       movsxd rax, dword [rcx + rdx*4]
0x00003190      4801c8         add rax, rcx
0x00003193      ffe0           jmp rax
0x00003195      0f1f00         nop dword [rax]
0x00003198      488b0db9af20.  mov rcx, qword [obj.padding_width]      ; string_fortified.h:97   return __builtin___stpcpy_chk (__dest, __src, __bos (__dest)); ; [0x20e158:8]=0
0x0000319f      488b3d5aaf20.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e100:8]=0
0x000031a6      488d15836700.  lea rdx, str.setting_Auto_Padding_to__ld_characters ; 0x9930 ; "setting Auto-Padding to %ld characters\n"
0x000031ad      be01000000     mov esi, 1
0x000031b2      31c0           xor eax, eax
0x000031b4      e827ebffff     call sym.imp.__fprintf_chk
0x000031b9      660fefc9       pxor xmm1, xmm1                         ; .//src:1308
0x000031bd      448b2dc4af20.  mov r13d, dword [obj.scale_from]        ; .//src:1173 ; [0x20e188:4]=0
0x000031c4      0fb60545af20.  movzx eax, byte [obj.dev_debug]         ; [0x20e110:1]=0
0x000031cb      48c744246000.  mov qword [rsp + 0x60], 0               ; .//src:1170
0x000031d4      41bfe8030000   mov r15d, 0x3e8                         ; .//src:229
0x000031da      f30f110c24     movss dword [rsp], xmm1                 ; .//src:1308
0x000031df      418d55fd       lea edx, [r13 - 3]                      ; .//src:219
0x000031e3      d90424         fld dword [rsp]                         ; .//src:1308
0x000031e6      83fa01         cmp edx, 1                              ; .//src:219
0x000031e9      db7c2470       fstp xword [rsp + 0x70]                 ; .//src:1308
0x000031ed      0f871dffffff   ja 0x3110                               ; .//src:219
0x000031f3      41bf00040000   mov r15d, 0x400                         ; .//src:223
0x000031f9      e912ffffff     jmp 0x3110
0x000031fe      6690           nop
0x00003200      4c8d2d396600.  lea r13, str.value_too_large_to_be_converted:__s ; .//src:694 ; 0x9840 ; "value too large to be converted: %s"
0x00003207      4531f6         xor r14d, r14d                          ; .//src:686
0x0000320a      660f1f440000   nop word [rax + rax]
0x00003210      833d69af2000.  cmp dword [obj.inval_style], 3          ; .//src:715 ; [0x20e180:4]=0
0x00003217      742f           je 0x3248
0x00003219      4889ef         mov rdi, rbp                            ; .//src:716
0x0000321c      e82f4b0000     call sym.quote
0x00003221      ba05000000     mov edx, 5
0x00003226      4c89ee         mov rsi, r13
0x00003229      31ff           xor edi, edi
0x0000322b      4889c5         mov rbp, rax
0x0000322e      e84de8ffff     call sym.imp.dcgettext
0x00003233      8b3de3ad2000   mov edi, dword [obj.conv_exit_code]     ; [0x20e01c:4]=2
0x00003239      4889c2         mov rdx, rax
0x0000323c      4889e9         mov rcx, rbp
0x0000323f      31f6           xor esi, esi
0x00003241      31c0           xor eax, eax
0x00003243      e838eaffff     call sym.imp.error
0x00003248      488b05e1ad20.  mov rax, qword [obj.from_unit_size]     ; .//src:1314 ; [0x20e030:8]=1
0x0000324f      488b15d2ad20.  mov rdx, qword [obj.to_unit_size]       ; [0x20e028:8]=1
0x00003256      db6c2470       fld xword [rsp + 0x70]
0x0000325a      4883f801       cmp rax, 1
0x0000325e      0f841c020000   je 0x3480
0x00003264      4889442410     mov qword [rsp + 0x10], rax             ; .//src:1315
0x00003269      4885c0         test rax, rax
0x0000326c      df6c2410       fild qword [rsp + 0x10]
0x00003270      7906           jns 0x3278
0x00003272      d805447f0000   fadd dword [0x0000b1bc]
0x00003278      dec9           fmulp st(1)
0x0000327a      4889542410     mov qword [rsp + 0x10], rdx             ; .//src:1261
0x0000327f      4885d2         test rdx, rdx
0x00003282      df6c2410       fild qword [rsp + 0x10]
0x00003286      7838           js 0x32c0
0x00003288      def9           fdivp st(1)
0x0000328a      83fb01         cmp ebx, 1
0x0000328d      0f86fd010000   jbe 0x3490
0x00003293      ddd8           fstp st(0)
0x00003295      eb09           jmp 0x32a0
0x00003297      ddd8           fstp st(0)
0x00003299      0f1f80000000.  nop dword [rax]
0x000032a0      488b3521ae20.  mov rsi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0c8:8]=0
0x000032a7      4c89e7         mov rdi, r12
0x000032aa      31db           xor ebx, ebx                            ; .//src:1170
0x000032ac      e8cfe8ffff     call sym.imp.fputs_unlocked
0x000032b1      e926fdffff     jmp 0x2fdc
0x000032b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000032c0      d805f67e0000   fadd dword [0x0000b1bc]                 ; .//src:742
0x000032c6      ebc0           jmp 0x3288
0x000032c8      0f1f84000000.  nop dword [rax + rax]
0x000032d0      4c89e7         mov rdi, r12
0x000032d3      e8c8e7ffff     call sym.imp.strlen                     ; .//src:558
0x000032d8      483b0581ae20.  cmp rax, qword [obj.padding_buffer_size] ; [0x20e160:8]=0
0x000032df      48890572ae20.  mov qword [obj.padding_width], rax      ; [0x20e158:8]=0
0x000032e6      0f82e0fdffff   jb 0x30cc
0x000032ec      4889c7         mov rdi, rax
0x000032ef      e84cfcffff     call sym.setup_padding_buffer.part.0
0x000032f4      e9d3fdffff     jmp 0x30cc
0x000032f9      4531f6         xor r14d, r14d
0x000032fc      4c8d2ddd6100.  lea r13, str.invalid_suffix_in_input:__s ; 0x94e0 ; "invalid suffix in input: %s"
0x00003303      e908ffffff     jmp 0x3210
0x00003308      4531f6         xor r14d, r14d
0x0000330b      4c8d2d8e6500.  lea r13, str.missing__i__suffix_in_input:__s__e.g_Ki_Mi_Gi ; 0x98a0 ; "missing 'i' suffix in input: %s (e.g Ki/Mi/Gi)"
0x00003312      e9f9feffff     jmp 0x3210
0x00003317      660f1f840000.  nop word [rax + rax]
0x00003320      4531f6         xor r14d, r14d
0x00003323      4531ed         xor r13d, r13d
0x00003326      e9e5feffff     jmp 0x3210                              ; .//src:374
0x0000332b      0f1f440000     nop dword [rax + rax]
0x00003330      4c6305ddad20.  movsxd r8, dword [obj.decimal_point_length] ; [0x20e114:4]=0
0x00003337      488b4c2460     mov rcx, qword [rsp + 0x60]
0x0000333c      4531f6         xor r14d, r14d
0x0000333f      488b35d2ad20.  mov rsi, qword [obj.decimal_point]      ; .//src:379 ; [0x20e118:8]=0
0x00003346      4889cf         mov rdi, rcx
0x00003349      48894c2410     mov qword [rsp + 0x10], rcx
0x0000334e      4c89c2         mov rdx, r8
0x00003351      4c89442420     mov qword [rsp + 0x20], r8
0x00003356      e885e6ffff     call sym.imp.strncmp
0x0000335b      85c0           test eax, eax
0x0000335d      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00003362      4c8b442420     mov r8, qword [rsp + 0x20]
0x00003367      0f84f3030000   je 0x3760
0x0000336d      803d9cad2000.  cmp byte [obj.dev_debug], 0             ; [0x20e110:1]=0
0x00003374      0f8526040000   jne 0x37a0
0x0000337a      488b542460     mov rdx, qword [rsp + 0x60]
0x0000337f      0fb60a         movzx ecx, byte [rdx]
0x00003382      4889542420     mov qword [rsp + 0x20], rdx
0x00003387      84c9           test cl, cl
0x00003389      884c2410       mov byte [rsp + 0x10], cl               ; .//src:-19
0x0000338d      0f84ad020000   je 0x3640
0x00003393      e898e9ffff     call sym.imp.__ctype_b_loc
0x00003398      488b542420     mov rdx, qword [rsp + 0x20]
0x0000339d      488b30         mov rsi, qword [rax]
0x000033a0      0fb64c2410     movzx ecx, byte [rsp + 0x10]
0x000033a5      4889d0         mov rax, rdx
0x000033a8      eb10           jmp 0x33ba
0x000033aa      660f1f440000   nop word [rax + rax]
0x000033b0      4889442460     mov qword [rsp + 0x60], rax
0x000033b5      410fb64901     movzx ecx, byte [r9 + 1]
0x000033ba      0fb6d1         movzx edx, cl
0x000033bd      4989c1         mov r9, rax                             ; .//src:391
0x000033c0      488d4001       lea rax, [rax + 1]
0x000033c4      f6045601       test byte [rsi + rdx*2], 1
0x000033c8      75e6           jne 0x33b0
0x000033ca      488d3dd36000.  lea rdi, str.KMGTPEZY                   ; 0x94a4 ; "KMGTPEZY"
0x000033d1      0fbef1         movsx esi, cl
0x000033d4      4c894c2420     mov qword [rsp + 0x20], r9
0x000033d9      884c2410       mov byte [rsp + 0x10], cl
0x000033dd      e8fee6ffff     call sym.imp.strchr                     ; .//src:407
0x000033e2      4885c0         test rax, rax
0x000033e5      0f84470e0000   je 0x4232
0x000033eb      4585ed         test r13d, r13d
0x000033ee      0f84ed080000   je 0x3ce1
0x000033f4      0fb64c2410     movzx ecx, byte [rsp + 0x10]
0x000033f9      4531c0         xor r8d, r8d
0x000033fc      4c8b4c2420     mov r9, qword [rsp + 0x20]
0x00003401      83e945         sub ecx, 0x45
0x00003404      80f915         cmp cl, 0x15
0x00003407      0f8654040000   jbe 0x3861                              ; .//src:66
0x0000340d      498d4101       lea rax, [r9 + 1]
0x00003411      4183fd01       cmp r13d, 1
0x00003415      4889442460     mov qword [rsp + 0x60], rax
0x0000341a      0f84ee040000   je 0x390e
0x00003420      4183fd04       cmp r13d, 4
0x00003424      7514           jne 0x343a
0x00003426      4180790169     cmp byte [r9 + 1], 0x69
0x0000342b      0f85a3120000   jne 0x46d4
0x00003431      498d4102       lea rax, [r9 + 2]
0x00003435      4889442460     mov qword [rsp + 0x60], rax
0x0000343a      44897c2410     mov dword [rsp + 0x10], r15d
0x0000343f      0fb615caac20.  movzx edx, byte [obj.dev_debug]         ; [0x20e110:1]=0
0x00003446      db442410       fild dword [rsp + 0x10]
0x0000344a      4585c0         test r8d, r8d
0x0000344d      0f840e120000   je 0x4661
0x00003453      4489c0         mov eax, r8d                            ; .//src:87
0x00003456      83e801         sub eax, 1
0x00003459      d9c0           fld st(0)
0x0000345b      740e           je 0x346b
0x0000345d      0f1f00         nop dword [rax]
0x00003460      83e801         sub eax, 1
0x00003463      d8c9           fmul st(1)
0x00003465      75f9           jne 0x3460
0x00003467      ddd9           fstp st(1)
0x00003469      eb05           jmp 0x3470
0x0000346b      ddd9           fstp st(1)
0x0000346d      0f1f00         nop dword [rax]                         ; .//src:85
0x00003470      4531f6         xor r14d, r14d
0x00003473      e9de010000     jmp 0x3656
0x00003478      0f1f84000000.  nop dword [rax + rax]
0x00003480      4883fa01       cmp rdx, 1
0x00003484      0f85dafdffff   jne 0x3264
0x0000348a      e9fbfdffff     jmp 0x328a
0x0000348f      90             nop
0x00003490      db2d4a7d0000   fld xword [0x0000b1e0]
0x00003496      d9c9           fxch st(1)
0x00003498      488b0581ab20.  mov rax, qword [obj.user_precision]     ; [0x20e020:8]=-1
0x0000349f      4883f8ff       cmp rax, 0xffffffffffffffff
0x000034a3      4c0f45f0       cmovne r14, rax
0x000034a7      dbe9           fucomi st(1)
0x000034a9      ddd9           fstp st(1)                              ; .//src:966
0x000034ab      0f829f000000   jb 0x3550
0x000034b1      db2d397d0000   fld xword [0x0000b1f0]
0x000034b7      dfe9           fucomip st(1)
0x000034b9      0f8291000000   jb 0x3550
0x000034bf      d9c0           fld st(0)
0x000034c1      31c0           xor eax, eax
0x000034c3      d905eb7c0000   fld dword [0x0000b1b4]
0x000034c9      eb0a           jmp 0x34d5
0x000034cb      0f1f440000     nop dword [rax + rax]
0x000034d0      defa           fdivp st(2)
0x000034d2      83c001         add eax, 1
0x000034d5      d9ee           fldz
0x000034d7      d9c2           fld st(2)
0x000034d9      d9c9           fxch st(1)
0x000034db      dfeb           fucomip st(3)
0x000034dd      7602           jbe 0x34e1
0x000034df      d9e0           fchs
0x000034e1      d9c1           fld st(1)
0x000034e3      d9c9           fxch st(1)
0x000034e5      dfe9           fucomip st(1)
0x000034e7      73e7           jae 0x34d0
0x000034e9      ddd8           fstp st(0)
0x000034eb      ddd8           fstp st(0)
0x000034ed      ddd8           fstp st(0)
0x000034ef      8b1d8fac2000   mov ebx, dword [obj.scale_to]           ; [0x20e184:4]=0
0x000034f5      85db           test ebx, ebx
0x000034f7      0f84f6020000   je 0x37f3
0x000034fd      83f81a         cmp eax, 0x1a
0x00003500      7662           jbe 0x3564
0x00003502      833d77ac2000.  cmp dword [obj.inval_style], 3          ; [0x20e180:4]=0
0x00003509      db3c24         fstp xword [rsp]
0x0000350c      0f848efdffff   je 0x32a0
0x00003512      488d35ef6500.  lea rsi, str.value_too_large_to_be_printed:___Lg___cannot_handle_values___999Y ; 0x9b08 ; "value too large to be printed: '%Lg' (cannot handle values > 999Y)"
0x00003519      ba05000000     mov edx, 5
0x0000351e      31ff           xor edi, edi                            ; .//src:476
0x00003520      e85be5ffff     call sym.imp.dcgettext
0x00003525      db2c24         fld xword [rsp]
0x00003528      8b3deeaa2000   mov edi, dword [obj.conv_exit_code]     ; [0x20e01c:4]=2
0x0000352e      4883ec10       sub rsp, 0x10
0x00003532      4889c2         mov rdx, rax
0x00003535      31f6           xor esi, esi
0x00003537      31c0           xor eax, eax
0x00003539      db3c24         fstp xword [rsp]
0x0000353c      e83fe7ffff     call sym.imp.error
0x00003541      415f           pop r15
0x00003543      58             pop rax
0x00003544      e957fdffff     jmp 0x32a0                              ; .//src:481
0x00003549      0f1f80000000.  nop dword [rax]
0x00003550      8b1d2eac2000   mov ebx, dword [obj.scale_to]           ; [0x20e184:4]=0
0x00003556      85db           test ebx, ebx
0x00003558      750a           jne 0x3564
0x0000355a      4983fe12       cmp r14, 0x12
0x0000355e      0f879e020000   ja 0x3802
0x00003564      448b2d05ac20.  mov r13d, dword [obj.grouping]          ; [0x20e170:4]=0
0x0000356b      448b3dc6aa20.  mov r15d, dword [obj.round_style]       ; .//src:60 ; [0x20e038:4]=2
0x00003572      c68424900000.  mov byte [rsp + 0x90], 0x25             ; '%'
                                                                       ; [0x25:1]=0
0x0000357a      4585ed         test r13d, r13d
0x0000357d      0f849d0c0000   je 0x4220
0x00003583      4c8da4249000.  lea r12, [rsp + 0x90]                   ; .//src:59
0x0000358b      c68424910000.  mov byte [rsp + 0x91], 0x27             ; '''
                                                                       ; [0x27:1]=0
0x00003593      498d6c2402     lea rbp, [r12 + 2]
0x00003598      4c8b0db1ab20.  mov r9, qword [obj.zero_padding_width]  ; [0x20e150:8]=0
0x0000359f      4d85c9         test r9, r9
0x000035a2      0f85030d0000   jne 0x42ab
0x000035a8      0fb61561ab20.  movzx edx, byte [obj.dev_debug]         ; .//src:150 ; [0x20e110:1]=0
0x000035af      84d2           test dl, dl
0x000035b1      0f85c30c0000   jne 0x427a
0x000035b7      85db           test ebx, ebx
0x000035b9      0f8533070000   jne 0x3cf2
0x000035bf      4585f6         test r14d, r14d
0x000035c2      4489f6         mov esi, r14d
0x000035c5      0f84b50d0000   je 0x4380
0x000035cb      4489f0         mov eax, r14d
0x000035ce      83e801         sub eax, 1
0x000035d1      0f8406100000   je 0x45dd
0x000035d7      d905d77b0000   fld dword [0x0000b1b4]
0x000035dd      89c1           mov ecx, eax
0x000035df      d9c0           fld st(0)
0x000035e1      83e901         sub ecx, 1
0x000035e4      d8c9           fmul st(1)
0x000035e6      75f9           jne 0x35e1
0x000035e8      d8ca           fmul st(2)
0x000035ea      d97c244e       fnstcw word [rsp + 0x4e]
0x000035ee      0fb74c244e     movzx ecx, word [rsp + 0x4e]
0x000035f3      db2d077c0000   fld xword [0x0000b200]
0x000035f9      80cd0c         or ch, 0xc
0x000035fc      4183ff04       cmp r15d, 4
0x00003600      66894c244c     mov word [rsp + 0x4c], cx
0x00003605      d9c1           fld st(1)
0x00003607      d8f1           fdiv st(1)
0x00003609      d96c244c       fldcw word [rsp + 0x4c]
0x0000360d      df7c2410       fistp qword [rsp + 0x10]
0x00003611      d96c244e       fldcw word [rsp + 0x4e]
0x00003615      df6c2410       fild qword [rsp + 0x10]
0x00003619      dec9           fmulp st(1)
0x0000361b      dce9           fsub st(1), st(0)
0x0000361d      0f87fe100000   ja 0x4721
0x00003623      ddda           fstp st(2)
0x00003625      d9c9           fxch st(1)
0x00003627      488d0d0e7a00.  lea rcx, [0x0000b03c]
0x0000362e      4a6304b9       movsxd rax, dword [rcx + r15*4]
0x00003632      4801c8         add rax, rcx                            ; .//src:929
0x00003635      ffe0           jmp rax
0x00003637      660f1f840000.  nop word [rax + rax]                    ; .//src:926
0x00003640      4183fd04       cmp r13d, 4
0x00003644      0f8486060000   je 0x3cd0
0x0000364a      0fb615bfaa20.  movzx edx, byte [obj.dev_debug]         ; [0x20e110:1]=0
0x00003651      d9e8           fld1
0x00003653      4531c0         xor r8d, r8d                            ; .//src:927
0x00003656      84d2           test dl, dl
0x00003658      0f85f2050000   jne 0x3c50
0x0000365e      db6c2470       fld xword [rsp + 0x70]
0x00003662      dec9           fmulp st(1)
0x00003664      db7c2470       fstp xword [rsp + 0x70]
0x00003668      eb06           jmp 0x3670
0x0000366a      ddd8           fstp st(0)
0x0000366c      0f1f4000       nop dword [rax]
0x00003670      488b742460     mov rsi, qword [rsp + 0x60]
0x00003675      4885f6         test rsi, rsi
0x00003678      7466           je 0x36e0
0x0000367a      803e00         cmp byte [rsi], 0
0x0000367d      7461           je 0x36e0
0x0000367f      833dfaaa2000.  cmp dword [obj.inval_style], 3          ; [0x20e180:4]=0
0x00003686      bb05000000     mov ebx, 5
0x0000368b      0f84b7fbffff   je 0x3248
0x00003691      bf01000000     mov edi, 1
0x00003696      e895460000     call sym.quote_n
0x0000369b      4889ee         mov rsi, rbp
0x0000369e      31ff           xor edi, edi
0x000036a0      4989c5         mov r13, rax
0x000036a3      e888460000     call sym.quote_n
0x000036a8      488d35796300.  lea rsi, str.invalid_suffix_in_input__s:__s ; 0x9a28 ; "invalid suffix in input %s: %s"
0x000036af      31ff           xor edi, edi
0x000036b1      ba05000000     mov edx, 5
0x000036b6      4889c5         mov rbp, rax
0x000036b9      e8c2e3ffff     call sym.imp.dcgettext
0x000036be      8b3d58a92000   mov edi, dword [obj.conv_exit_code]     ; [0x20e01c:4]=2
0x000036c4      4889c2         mov rdx, rax                            ; .//src:171
0x000036c7      4d89e8         mov r8, r13
0x000036ca      4889e9         mov rcx, rbp
0x000036cd      31f6           xor esi, esi
0x000036cf      31c0           xor eax, eax
0x000036d1      e8aae5ffff     call sym.imp.error
0x000036d6      e96dfbffff     jmp 0x3248                              ; .//src:167
0x000036db      0f1f440000     nop dword [rax + rax]
0x000036e0      83fb01         cmp ebx, 1
0x000036e3      0f8531100000   jne 0x471a
0x000036e9      803d30aa2000.  cmp byte [obj.debug], 0                 ; [0x20e120:1]=0
0x000036f0      0f8452fbffff   je 0x3248                               ; .//src:174
0x000036f6      4889ef         mov rdi, rbp
0x000036f9      e852460000     call sym.quote
0x000036fe      488d35436300.  lea rsi, str.large_input_value__s:_possible_precision_loss ; 0x9a48 ; "large input value %s: possible precision loss"
0x00003705      4889c5         mov rbp, rax
0x00003708      31ff           xor edi, edi
0x0000370a      ba05000000     mov edx, 5
0x0000370f      e86ce3ffff     call sym.imp.dcgettext
0x00003714      4889e9         mov rcx, rbp
0x00003717      4889c2         mov rdx, rax
0x0000371a      31f6           xor esi, esi
0x0000371c      31ff           xor edi, edi
0x0000371e      31c0           xor eax, eax
0x00003720      e85be5ffff     call sym.imp.error
0x00003725      e91efbffff     jmp 0x3248
0x0000372a      660f1f440000   nop word [rax + rax]
0x00003730      84d2           test dl, dl
0x00003732      0f8430f9ffff   je 0x3068
0x00003738      488b0dc1a920.  mov rcx, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e100:8]=0
0x0000373f      488d3de05d00.  lea rdi, [0x00009526]                   ; "no valid suffix found\n"
0x00003746      ba16000000     mov edx, 0x16
0x0000374b      be01000000     mov esi, 1
0x00003750      e87be5ffff     call sym.imp.fwrite                     ; .//src:822
0x00003755      e90ef9ffff     jmp 0x3068
0x0000375a      660f1f440000   nop word [rax + rax]
0x00003760      4a8d3c01       lea rdi, [rcx + r8]
0x00003764      d90424         fld dword [rsp]
0x00003767      488d4c245f     lea rcx, [rsp + 0x5f]
0x0000376c      488d94248000.  lea rdx, [rsp + 0x80]                   ; .//src:826
0x00003774      488d742468     lea rsi, [rsp + 0x68]
0x00003779      dbbc24800000.  fstp xword [rsp + 0x80]
0x00003780      48897c2460     mov qword [rsp + 0x60], rdi
0x00003785      e816f5ffff     call sym.simple_strtod_int
0x0000378a      83f801         cmp eax, 1
0x0000378d      0f860b010000   jbe 0x389e
0x00003793      89c3           mov ebx, eax
0x00003795      e9e0f9ffff     jmp 0x317a
0x0000379a      660f1f440000   nop word [rax + rax]
0x000037a0      488b3d59a920.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e100:8]=0
0x000037a7      ff742478       push qword [rsp + 0x78]
0x000037ab      488d15066200.  lea rdx, str.parsed_numeric_value:__Lf____input_precision____d ; 0x99b8 ; "  parsed numeric value: %Lf\n  input precision = %d\n"
0x000037b2      ff742478       push qword [rsp + 0x78]
0x000037b6      4489f1         mov ecx, r14d                           ; string_fortified.h:-415
0x000037b9      be01000000     mov esi, 1
0x000037be      31c0           xor eax, eax
0x000037c0      e81be5ffff     call sym.imp.__fprintf_chk
0x000037c5      4159           pop r9
0x000037c7      415a           pop r10
0x000037c9      e9acfbffff     jmp 0x337a
0x000037ce      6690           nop
0x000037d0      4531f6         xor r14d, r14d
0x000037d3      bb03000000     mov ebx, 3
0x000037d8      4c8d2dee5c00.  lea r13, str.invalid_number:__s         ; .//src:47 ; 0x94cd ; "invalid number: %s"
0x000037df      e92cfaffff     jmp 0x3210
0x000037e4      4531f6         xor r14d, r14d
0x000037e7      4c8d2d7a6000.  lea r13, str.rejecting_suffix_in_input:__s__consider_using___from ; 0x9868 ; "rejecting suffix in input: %s (consider using --from)"
0x000037ee      e91dfaffff     jmp 0x3210
0x000037f3      89c2           mov edx, eax
0x000037f5      4c01f2         add rdx, r14
0x000037f8      4883fa12       cmp rdx, 0x12
0x000037fc      0f86fbfcffff   jbe 0x34fd
0x00003802      833d77a92000.  cmp dword [obj.inval_style], 3          ; [0x20e180:4]=0
0x00003809      0f8488faffff   je 0x3297
0x0000380f      4d85f6         test r14, r14
0x00003812      8b1d04a82000   mov ebx, dword [obj.conv_exit_code]     ; [0x20e01c:4]=2
0x00003818      ba05000000     mov edx, 5                              ; .//src:-190
0x0000381d      db3c24         fstp xword [rsp]
0x00003820      0f84270a0000   je 0x424d
0x00003826      488d354b6200.  lea rsi, str.value_precision_too_large_to_be_printed:___Lg__lu___consider_using___to ; 0x9a78 ; "value/precision too large to be printed: '%Lg/%lu' (consider using --to)"
0x0000382d      31ff           xor edi, edi
0x0000382f      e84ce2ffff     call sym.imp.dcgettext
0x00003834      4883ec10       sub rsp, 0x10
0x00003838      4c89f1         mov rcx, r14
0x0000383b      4889c2         mov rdx, rax
0x0000383e      db6c2410       fld xword [rsp + 0x10]
0x00003842      31f6           xor esi, esi
0x00003844      89df           mov edi, ebx                            ; .//src:2
0x00003846      31c0           xor eax, eax
0x00003848      db3c24         fstp xword [rsp]
0x0000384b      e830e4ffff     call sym.imp.error
0x00003850      59             pop rcx
0x00003851      5e             pop rsi
0x00003852      e949faffff     jmp 0x32a0
0x00003857      4c89e5         mov rbp, r12
0x0000385a      31c0           xor eax, eax
0x0000385c      e93ef8ffff     jmp 0x309f
0x00003861      488d05987800.  lea rax, obj.CSWTCH.317                 ; 0xb100
0x00003868      0fb6c9         movzx ecx, cl
0x0000386b      448b0488       mov r8d, dword [rax + rcx*4]
0x0000386f      e999fbffff     jmp 0x340d
0x00003874      4889ef         mov rdi, rbp
0x00003877      e8d4440000     call sym.quote                          ; .//src:3
0x0000387c      488b3d7da820.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e100:8]=0
0x00003883      488d15885c00.  lea rdx, [0x00009512]                   ; "trimming suffix %s\n"
0x0000388a      4889c1         mov rcx, rax
0x0000388d      be01000000     mov esi, 1
0x00003892      31c0           xor eax, eax
0x00003894      e847e4ffff     call sym.imp.__fprintf_chk
0x00003899      e9caf7ffff     jmp 0x3068
0x0000389e      0f45c3         cmovne eax, ebx                         ; .//src:264
0x000038a1      807c245f00     cmp byte [rsp + 0x5f], 0
0x000038a6      0f8524ffffff   jne 0x37d0
0x000038ac      488b4c2468     mov rcx, qword [rsp + 0x68]
0x000038b1      dbac24800000.  fld xword [rsp + 0x80]
0x000038b8      4989ce         mov r14, rcx
0x000038bb      4c2b742460     sub r14, qword [rsp + 0x60]
0x000038c0      4585f6         test r14d, r14d
0x000038c3      741f           je 0x38e4
0x000038c5      4489f2         mov edx, r14d
0x000038c8      83ea01         sub edx, 1
0x000038cb      0f84800d0000   je 0x4651
0x000038d1      d905dd780000   fld dword [0x0000b1b4]
0x000038d7      d9c0           fld st(0)
0x000038d9      83ea01         sub edx, 1
0x000038dc      d8c9           fmul st(1)
0x000038de      75f9           jne 0x38d9
0x000038e0      ddd9           fstp st(1)
0x000038e2      def9           fdivp st(1)
0x000038e4      d9c0           fld st(0)
0x000038e6      dbbc24800000.  fstp xword [rsp + 0x80]
0x000038ed      807c245e00     cmp byte [rsp + 0x5e], 0
0x000038f2      db6c2470       fld xword [rsp + 0x70]
0x000038f6      0f843a0c0000   je 0x4536
0x000038fc      dee1           fsubrp st(1)                            ; ../coreutils-8.31/lib/c-ctype.h:-387
0x000038fe      db7c2470       fstp xword [rsp + 0x70]
0x00003902      48894c2460     mov qword [rsp + 0x60], rcx
0x00003907      89c3           mov ebx, eax                            ; string_fortified.h:-420
0x00003909      e95ffaffff     jmp 0x336d
0x0000390e      4180790169     cmp byte [r9 + 1], 0x69
0x00003913      0fb615f6a720.  movzx edx, byte [obj.dev_debug]         ; [0x20e110:1]=0
0x0000391a      0f84f80b0000   je 0x4518
0x00003920      44897c2410     mov dword [rsp + 0x10], r15d
0x00003925      db442410       fild dword [rsp + 0x10]
0x00003929      e91cfbffff     jmp 0x344a
0x0000392e      d9c9           fxch st(1)
0x00003930      eb02           jmp 0x3934
0x00003932      d9c9           fxch st(1)
0x00003934      d9c0           fld st(0)
0x00003936      d96c244c       fldcw word [rsp + 0x4c]
0x0000393a      df3c24         fistp qword [rsp]
0x0000393d      d96c244e       fldcw word [rsp + 0x4e]
0x00003941      df2c24         fild qword [rsp]
0x00003944      d9c9           fxch st(1)
0x00003946      dfe9           fucomip st(1)
0x00003948      7611           jbe 0x395b
0x0000394a      ddd8           fstp st(0)
0x0000394c      488b0424       mov rax, qword [rsp]
0x00003950      4883c001       add rax, 1
0x00003954      48890424       mov qword [rsp], rax
0x00003958      df2c24         fild qword [rsp]                        ; .//src:748
0x0000395b      85f6           test esi, esi
0x0000395d      dec1           faddp st(1)
0x0000395f      741e           je 0x397f
0x00003961      89f0           mov eax, esi
0x00003963      d9054b780000   fld dword [0x0000b1b4]
0x00003969      83e801         sub eax, 1
0x0000396c      0f84d7020000   je 0x3c49
0x00003972      d9c0           fld st(0)
0x00003974      83e801         sub eax, 1
0x00003977      d8c9           fmul st(1)
0x00003979      75f9           jne 0x3974
0x0000397b      ddd9           fstp st(1)
0x0000397d      def9           fdivp st(1)
0x0000397f      84d2           test dl, dl
0x00003981      4589f1         mov r9d, r14d
0x00003984      7455           je 0x39db
0x00003986      d9c9           fxch st(1)
0x00003988      db7c2410       fstp xword [rsp + 0x10]
0x0000398c      488d053d5f00.  lea rax, str.no_scaling__returning__grouped__value:___._Lf ; 0x98d0 ; "  no scaling, returning (grouped) value: %'.*Lf\n"
0x00003993      488d156e5f00.  lea rdx, str.no_scaling__returning_value:__._Lf ; 0x9908 ; "  no scaling, returning value: %.*Lf\n"
0x0000399a      4585ed         test r13d, r13d
0x0000399d      4489f1         mov ecx, r14d
0x000039a0      be01000000     mov esi, 1
0x000039a5      4489742420     mov dword [rsp + 0x20], r14d
0x000039aa      480f45d0       cmovne rdx, rax                         ; .//src:749
0x000039ae      4883ec10       sub rsp, 0x10
0x000039b2      488b3d47a720.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e100:8]=0
0x000039b9      31c0           xor eax, eax                            ; .//src:751
0x000039bb      d9c0           fld st(0)
0x000039bd      db3c24         fstp xword [rsp]
0x000039c0      db7c2410       fstp xword [rsp + 0x10]
0x000039c4      e817e3ffff     call sym.imp.__fprintf_chk
0x000039c9      415d           pop r13
0x000039cb      415e           pop r14
0x000039cd      448b4c2420     mov r9d, dword [rsp + 0x20]
0x000039d2      db2c24         fld xword [rsp]
0x000039d5      db6c2410       fld xword [rsp + 0x10]
0x000039d9      eb02           jmp 0x39dd
0x000039db      d9c9           fxch st(1)
0x000039dd      c745002e2a4c.  mov dword [rbp], 0x664c2a2e             ; '.*Lf'
0x000039e4      c6450400       mov byte [rbp + 4], 0
0x000039e8      488dac24d000.  lea rbp, [rsp + 0xd0]
0x000039f0      4883ec10       sub rsp, 0x10
0x000039f4      31c0           xor eax, eax
0x000039f6      4d89e0         mov r8, r12                             ; .//src:754
0x000039f9      b980000000     mov ecx, 0x80
0x000039fe      ba01000000     mov edx, 1
0x00003a03      be80000000     mov esi, 0x80
0x00003a08      4889ef         mov rdi, rbp
0x00003a0b      db7c2420       fstp xword [rsp + 0x20]
0x00003a0f      d9c0           fld st(0)
0x00003a11      db3c24         fstp xword [rsp]
0x00003a14      db7c2410       fstp xword [rsp + 0x10]
0x00003a18      e883dfffff     call sym.imp.__snprintf_chk
0x00003a1d      83f87f         cmp eax, 0x7f
0x00003a20      415b           pop r11
0x00003a22      5b             pop rbx
0x00003a23      db2c24         fld xword [rsp]
0x00003a26      0f87bc0c0000   ja 0x46e8
0x00003a2c      ddd8           fstp st(0)
0x00003a2e      0fb61ddba620.  movzx ebx, byte [obj.dev_debug]         ; [0x20e110:1]=0
0x00003a35      db6c2410       fld xword [rsp + 0x10]
0x00003a39      488b3538a720.  mov rsi, qword [obj.suffix]             ; [0x20e178:8]=0
0x00003a40      4885f6         test rsi, rsi
0x00003a43      7455           je 0x3a9a
0x00003a45      4889ea         mov rdx, rbp
0x00003a48      8b0a           mov ecx, dword [rdx]
0x00003a4a      4883c204       add rdx, 4
0x00003a4e      8d81fffefefe   lea eax, [rcx - 0x1010101]
0x00003a54      f7d1           not ecx
0x00003a56      21c8           and eax, ecx
0x00003a58      2580808080     and eax, 0x80808080
0x00003a5d      74e9           je 0x3a48                               ; ../coreutils-8.31/lib/c-ctype.h:-394
0x00003a5f      89c1           mov ecx, eax
0x00003a61      c1e910         shr ecx, 0x10
0x00003a64      a980800000     test eax, 0x8080
0x00003a69      db3c24         fstp xword [rsp]
0x00003a6c      0f44c1         cmove eax, ecx                          ; .//src:774
0x00003a6f      488d4a02       lea rcx, [rdx + 2]
0x00003a73      89c7           mov edi, eax
0x00003a75      480f44d1       cmove rdx, rcx
0x00003a79      4000c7         add dil, al
0x00003a7c      4889e8         mov rax, rbp
0x00003a7f      4883da03       sbb rdx, 3                              ; .//src:775
0x00003a83      b980000000     mov ecx, 0x80
0x00003a88      4889ef         mov rdi, rbp
0x00003a8b      4829d0         sub rax, rdx                            ; .//src:777
0x00003a8e      488d507f       lea rdx, [rax + 0x7f]
0x00003a92      e859e2ffff     call sym.imp.__strncat_chk              ; .//src:779
0x00003a97      db2c24         fld xword [rsp]                         ; .//src:777
0x00003a9a      84db           test bl, bl
0x00003a9c      7437           je 0x3ad5                               ; .//src:779
0x00003a9e      4889ef         mov rdi, rbp
0x00003aa1      db3c24         fstp xword [rsp]
0x00003aa4      e8a7420000     call sym.quote
0x00003aa9      488d15286100.  lea rdx, str.formatting_output:____value:__Lf____humanized:__s ; 0x9bd8 ; "formatting output:\n  value: %Lf\n  humanized: %s\n"
0x00003ab0      4883ec10       sub rsp, 0x10
0x00003ab4      4889c1         mov rcx, rax
0x00003ab7      488b3d42a620.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e100:8]=0
0x00003abe      be01000000     mov esi, 1
0x00003ac3      31c0           xor eax, eax                            ; .//src:-96
0x00003ac5      db6c2410       fld xword [rsp + 0x10]
0x00003ac9      db3c24         fstp xword [rsp]
0x00003acc      e80fe2ffff     call sym.imp.__fprintf_chk
0x00003ad1      58             pop rax
0x00003ad2      5a             pop rdx
0x00003ad3      eb02           jmp 0x3ad7
0x00003ad5      ddd8           fstp st(0)
0x00003ad7      488b357aa620.  mov rsi, qword [obj.padding_width]      ; [0x20e158:8]=0
0x00003ade      4889e8         mov rax, rbp
0x00003ae1      8b08           mov ecx, dword [rax]
0x00003ae3      4883c004       add rax, 4
0x00003ae7      8d91fffefefe   lea edx, [rcx - 0x1010101]
0x00003aed      f7d1           not ecx
0x00003aef      21ca           and edx, ecx
0x00003af1      81e280808080   and edx, 0x80808080
0x00003af7      74e8           je 0x3ae1
0x00003af9      89d1           mov ecx, edx
0x00003afb      c1e910         shr ecx, 0x10                           ; .//src:-121
0x00003afe      f7c280800000   test edx, 0x8080
0x00003b04      0f44d1         cmove edx, ecx
0x00003b07      488d4802       lea rcx, [rax + 2]
0x00003b0b      89d7           mov edi, edx
0x00003b0d      480f44c1       cmove rax, rcx
0x00003b11      4000d7         add dil, dl
0x00003b14      488b1545a620.  mov rdx, qword [obj.padding_buffer_size] ; [0x20e160:8]=0
0x00003b1b      4883d803       sbb rax, 3
0x00003b1f      4829e8         sub rax, rbp
0x00003b22      4885f6         test rsi, rsi
0x00003b25      7409           je 0x3b30                               ; .//src:-88
0x00003b27      4839c6         cmp rsi, rax
0x00003b2a      0f87ff080000   ja 0x442f
0x00003b30      488d7801       lea rdi, [rax + 1]
0x00003b34      4839d7         cmp rdi, rdx
0x00003b37      7205           jb 0x3b3e
0x00003b39      e802f4ffff     call sym.setup_padding_buffer.part.0
0x00003b3e      488b3d23a620.  mov rdi, qword [obj.padding_buffer]     ; [0x20e168:8]=0
0x00003b45      4889ee         mov rsi, rbp
0x00003b48      e8b3deffff     call sym.imp.strcpy
0x00003b4d      488b3deca520.  mov rdi, qword [obj.format_str_prefix]  ; [0x20e140:8]=0
0x00003b54      488b356da520.  mov rsi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0c8:8]=0
0x00003b5b      4885ff         test rdi, rdi                           ; string_fortified.h:-515
0x00003b5e      740c           je 0x3b6c
0x00003b60      e81be0ffff     call sym.imp.fputs_unlocked
0x00003b65      488b355ca520.  mov rsi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0c8:8]=0
0x00003b6c      488b3df5a520.  mov rdi, qword [obj.padding_buffer]     ; [0x20e168:8]=0
0x00003b73      bb01000000     mov ebx, 1
0x00003b78      e803e0ffff     call sym.imp.fputs_unlocked
0x00003b7d      488b3db4a520.  mov rdi, qword [obj.format_str_suffix]  ; [0x20e138:8]=0
0x00003b84      4885ff         test rdi, rdi
0x00003b87      0f844ff4ffff   je 0x2fdc
0x00003b8d      488b3534a520.  mov rsi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0c8:8]=0
0x00003b94      e8e7dfffff     call sym.imp.fputs_unlocked
0x00003b99      e93ef4ffff     jmp 0x2fdc
0x00003b9e      d9c9           fxch st(1)
0x00003ba0      eb02           jmp 0x3ba4
0x00003ba2      d9c9           fxch st(1)                              ; .//src:63
0x00003ba4      d96c244c       fldcw word [rsp + 0x4c]
0x00003ba8      df3c24         fistp qword [rsp]
0x00003bab      d96c244e       fldcw word [rsp + 0x4e]                 ; string_fortified.h:-515
0x00003baf      df2c24         fild qword [rsp]
0x00003bb2      e9a4fdffff     jmp 0x395b
0x00003bb7      d9c9           fxch st(1)
0x00003bb9      eb02           jmp 0x3bbd
0x00003bbb      d9c9           fxch st(1)
0x00003bbd      d9ee           fldz
0x00003bbf      dfe9           fucomip st(1)
0x00003bc1      0f866dfdffff   jbe 0x3934
0x00003bc7      d9e0           fchs
0x00003bc9      d9c0           fld st(0)
0x00003bcb      d96c244c       fldcw word [rsp + 0x4c]
0x00003bcf      df7c2440       fistp qword [rsp + 0x40]
0x00003bd3      d96c244e       fldcw word [rsp + 0x4e]
0x00003bd7      488b442440     mov rax, qword [rsp + 0x40]
0x00003bdc      31c9           xor ecx, ecx
0x00003bde      48890424       mov qword [rsp], rax
0x00003be2      df2c24         fild qword [rsp]
0x00003be5      d9c9           fxch st(1)
0x00003be7      dfe9           fucomip st(1)
0x00003be9      ddd8           fstp st(0)
0x00003beb      0f97c1         seta cl
0x00003bee      4801c8         add rax, rcx
0x00003bf1      48f7d8         neg rax                                 ; .//src:90
0x00003bf4      48890424       mov qword [rsp], rax
0x00003bf8      df2c24         fild qword [rsp]
0x00003bfb      e95bfdffff     jmp 0x395b
0x00003c00      d9c9           fxch st(1)
0x00003c02      eb02           jmp 0x3c06
0x00003c04      d9c9           fxch st(1)
0x00003c06      d9ee           fldz
0x00003c08      dfe9           fucomip st(1)
0x00003c0a      0f87b4090000   ja 0x45c4
0x00003c10      d805aa750000   fadd dword [0x0000b1c0]
0x00003c16      d96c244c       fldcw word [rsp + 0x4c]
0x00003c1a      df3c24         fistp qword [rsp]
0x00003c1d      d96c244e       fldcw word [rsp + 0x4e]
0x00003c21      df2c24         fild qword [rsp]
0x00003c24      e932fdffff     jmp 0x395b
0x00003c29      d9c9           fxch st(1)
0x00003c2b      eb02           jmp 0x3c2f
0x00003c2d      d9c9           fxch st(1)
0x00003c2f      d9e0           fchs
0x00003c31      d9c0           fld st(0)
0x00003c33      d96c244c       fldcw word [rsp + 0x4c]
0x00003c37      df7c2440       fistp qword [rsp + 0x40]
0x00003c3b      d96c244e       fldcw word [rsp + 0x4e]
0x00003c3f      eb96           jmp 0x3bd7
0x00003c41      ddd8           fstp st(0)
0x00003c43      ddd8           fstp st(0)
0x00003c45      d9ee           fldz
0x00003c47      d9c9           fxch st(1)
0x00003c49      def9           fdivp st(1)
0x00003c4b      e92ffdffff     jmp 0x397f
0x00003c50      4883ec10       sub rsp, 0x10
0x00003c54      488b3da5a420.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e100:8]=0
0x00003c5b      488d15db5800.  lea rdx, str.suffix_power__d__d____Lf   ; 0x953d ; "  suffix power=%d^%d = %Lf\n"
0x00003c62      d9c0           fld st(0)
0x00003c64      db3c24         fstp xword [rsp]
0x00003c67      31c0           xor eax, eax
0x00003c69      4489f9         mov ecx, r15d
0x00003c6c      be01000000     mov esi, 1
0x00003c71      db7c2420       fstp xword [rsp + 0x20]
0x00003c75      e866e0ffff     call sym.imp.__fprintf_chk
0x00003c7a      803d8fa42000.  cmp byte [obj.dev_debug], 0             ; [0x20e110:1]=0
0x00003c81      dbac24800000.  fld xword [rsp + 0x80]
0x00003c88      db6c2420       fld xword [rsp + 0x20]
0x00003c8c      dec9           fmulp st(1)
0x00003c8e      d9c0           fld st(0)
0x00003c90      dbbc24800000.  fstp xword [rsp + 0x80]
0x00003c97      5f             pop rdi
0x00003c98      4158           pop r8
0x00003c9a      0f84caf9ffff   je 0x366a
0x00003ca0      4883ec20       sub rsp, 0x20
0x00003ca4      488b3d55a420.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e100:8]=0
0x00003cab      488d15a75800.  lea rdx, str.returning_value:__Lf___LG  ; 0x9559 ; "  returning value: %Lf (%LG)\n"
0x00003cb2      d9c0           fld st(0)
0x00003cb4      db7c2410       fstp xword [rsp + 0x10]
0x00003cb8      be01000000     mov esi, 1
0x00003cbd      31c0           xor eax, eax
0x00003cbf      db3c24         fstp xword [rsp]
0x00003cc2      e819e0ffff     call sym.imp.__fprintf_chk
0x00003cc7      4883c420       add rsp, 0x20
0x00003ccb      e9a0f9ffff     jmp 0x3670
0x00003cd0      bb06000000     mov ebx, 6
0x00003cd5      4c8d2dc45b00.  lea r13, str.missing__i__suffix_in_input:__s__e.g_Ki_Mi_Gi ; 0x98a0 ; "missing 'i' suffix in input: %s (e.g Ki/Mi/Gi)"
0x00003cdc      e92ff5ffff     jmp 0x3210
0x00003ce1      bb04000000     mov ebx, 4
0x00003ce6      4c8d2d7b5b00.  lea r13, str.rejecting_suffix_in_input:__s__consider_using___from ; 0x9868 ; "rejecting suffix in input: %s (consider using --from)"
0x00003ced      e91ef5ffff     jmp 0x3210
0x00003cf2      8d43fd         lea eax, [rbx - 3]
0x00003cf5      83f801         cmp eax, 1
0x00003cf8      0f8767060000   ja 0x4365
0x00003cfe      f20f101dc274.  movsd xmm3, qword [0x0000b1c8]          ; [0xb1c8:8]=0x4090000000000000
0x00003d06      c74424200004.  mov dword [rsp + 0x20], 0x400           ; [0x400:4]=95
0x00003d0e      f20f115c2410   movsd qword [rsp + 0x10], xmm3
0x00003d14      db2dc6740000   fld xword [0x0000b1e0]
0x00003d1a      d9c9           fxch st(1)
0x00003d1c      dbe9           fucomi st(1)
0x00003d1e      ddd9           fstp st(1)
0x00003d20      0f821d050000   jb 0x4243
0x00003d26      db2dc4740000   fld xword [0x0000b1f0]
0x00003d2c      dfe9           fucomip st(1)
0x00003d2e      0f820f050000   jb 0x4243
0x00003d34      db442420       fild dword [rsp + 0x20]
0x00003d38      4531ed         xor r13d, r13d
0x00003d3b      d9c1           fld st(1)
0x00003d3d      eb06           jmp 0x3d45
0x00003d3f      d8f1           fdiv st(1)
0x00003d41      4183c501       add r13d, 1
0x00003d45      d9ee           fldz
0x00003d47      dfe9           fucomip st(1)
0x00003d49      d9c0           fld st(0)
0x00003d4b      7602           jbe 0x3d4f
0x00003d4d      d9e0           fchs
0x00003d4f      dfea           fucomip st(2)
0x00003d51      73ec           jae 0x3d3f
0x00003d53      ddd9           fstp st(1)
0x00003d55      84d2           test dl, dl
0x00003d57      744c           je 0x3da5
0x00003d59      d9c9           fxch st(1)
0x00003d5b      db7c2430       fstp xword [rsp + 0x30]
0x00003d5f      4883ec10       sub rsp, 0x10
0x00003d63      488b3d96a320.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e100:8]=0
0x00003d6a      488d150f5e00.  lea rdx, str.scaled_value_to__Lf____0.f____u ; 0x9b80 ; "  scaled value to %Lf * %0.f ^ %u\n"
0x00003d71      4489e9         mov ecx, r13d
0x00003d74      be01000000     mov esi, 1
0x00003d79      b801000000     mov eax, 1
0x00003d7e      f20f10442420   movsd xmm0, qword [rsp + 0x20]
0x00003d84      d9c0           fld st(0)
0x00003d86      db3c24         fstp xword [rsp]
0x00003d89      db7c2430       fstp xword [rsp + 0x30]
0x00003d8d      e84edfffff     call sym.imp.__fprintf_chk
0x00003d92      4159           pop r9
0x00003d94      415a           pop r10
0x00003d96      0fb61573a320.  movzx edx, byte [obj.dev_debug]         ; [0x20e110:1]=0
0x00003d9d      db6c2430       fld xword [rsp + 0x30]
0x00003da1      db6c2420       fld xword [rsp + 0x20]
0x00003da5      488b3574a220.  mov rsi, qword [obj.user_precision]     ; [0x20e020:8]=-1
0x00003dac      4883feff       cmp rsi, 0xffffffffffffffff
0x00003db0      dd442410       fld qword [rsp + 0x10]
0x00003db4      0f84dc060000   je 0x4496
0x00003dba      438d446d00     lea eax, [r13 + r13*2]
0x00003dbf      4839f0         cmp rax, rsi
0x00003dc2      480f4fc6       cmovg rax, rsi
0x00003dc6      85c0           test eax, eax
0x00003dc8      89c7           mov edi, eax
0x00003dca      0f8411050000   je 0x42e1
0x00003dd0      83e801         sub eax, 1
0x00003dd3      0f84aa080000   je 0x4683
0x00003dd9      d905d5730000   fld dword [0x0000b1b4]
0x00003ddf      89c1           mov ecx, eax
0x00003de1      d9c0           fld st(0)
0x00003de3      83e901         sub ecx, 1
0x00003de6      d8c9           fmul st(1)
0x00003de8      75f9           jne 0x3de3
0x00003dea      decb           fmulp st(3)
0x00003dec      d97c244e       fnstcw word [rsp + 0x4e]
0x00003df0      0fb74c244e     movzx ecx, word [rsp + 0x4e]
0x00003df5      db2d05740000   fld xword [0x0000b200]
0x00003dfb      80cd0c         or ch, 0xc
0x00003dfe      4183ff04       cmp r15d, 4
0x00003e02      66894c244c     mov word [rsp + 0x4c], cx
0x00003e07      d9c3           fld st(3)
0x00003e09      d8f1           fdiv st(1)
0x00003e0b      d96c244c       fldcw word [rsp + 0x4c]
0x00003e0f      df7c2420       fistp qword [rsp + 0x20]
0x00003e13      d96c244e       fldcw word [rsp + 0x4e]
0x00003e17      df6c2420       fild qword [rsp + 0x20]
0x00003e1b      dec9           fmulp st(1)
0x00003e1d      dceb           fsub st(3), st(0)
0x00003e1f      0f8736090000   ja 0x475b
0x00003e25      488d0d247200.  lea rcx, [0x0000b050]
0x00003e2c      4a6304b9       movsxd rax, dword [rcx + r15*4]
0x00003e30      4801c8         add rax, rcx
0x00003e33      ffe0           jmp rax
0x00003e35      dddb           fstp st(3)
0x00003e37      d9c9           fxch st(1)
0x00003e39      d9ca           fxch st(2)
0x00003e3b      eb08           jmp 0x3e45
0x00003e3d      ddd9           fstp st(1)
0x00003e3f      d9c9           fxch st(1)
0x00003e41      d9ca           fxch st(2)
0x00003e43      d9c9           fxch st(1)
0x00003e45      d9ca           fxch st(2)
0x00003e47      d9c9           fxch st(1)
0x00003e49      bf01000000     mov edi, 1
0x00003e4e      eb08           jmp 0x3e58
0x00003e50      ddd9           fstp st(1)
0x00003e52      d9ca           fxch st(2)
0x00003e54      eb02           jmp 0x3e58
0x00003e56      d9ca           fxch st(2)
0x00003e58      d9c0           fld st(0)
0x00003e5a      d96c244c       fldcw word [rsp + 0x4c]
0x00003e5e      df7c2420       fistp qword [rsp + 0x20]
0x00003e62      d96c244e       fldcw word [rsp + 0x4e]
0x00003e66      df6c2420       fild qword [rsp + 0x20]
0x00003e6a      d9c9           fxch st(1)
0x00003e6c      dfe9           fucomip st(1)
0x00003e6e      7614           jbe 0x3e84
0x00003e70      ddd8           fstp st(0)
0x00003e72      488b442420     mov rax, qword [rsp + 0x20]
0x00003e77      4883c001       add rax, 1
0x00003e7b      4889442420     mov qword [rsp + 0x20], rax
0x00003e80      df6c2420       fild qword [rsp + 0x20]
0x00003e84      85ff           test edi, edi
0x00003e86      dec2           faddp st(2)
0x00003e88      0f85b3060000   jne 0x4541
0x00003e8e      d9e8           fld1
0x00003e90      defa           fdivp st(2)
0x00003e92      d9ee           fldz
0x00003e94      dfea           fucomip st(2)
0x00003e96      0f8766050000   ja 0x4402
0x00003e9c      d9c9           fxch st(1)
0x00003e9e      dbe9           fucomi st(1)
0x00003ea0      720e           jb 0x3eb0
0x00003ea2      eb04           jmp 0x3ea8
0x00003ea4      ddd8           fstp st(0)
0x00003ea6      d9c9           fxch st(1)
0x00003ea8      def1           fdivrp st(1)
0x00003eaa      4183c501       add r13d, 1
0x00003eae      eb02           jmp 0x3eb2
0x00003eb0      ddd9           fstp st(1)
0x00003eb2      d9ee           fldz
0x00003eb4      d9c9           fxch st(1)
0x00003eb6      dbe9           fucomi st(1)
0x00003eb8      ddd9           fstp st(1)
0x00003eba      0f8a41060000   jp 0x4501
0x00003ec0      0f853b060000   jne 0x4501
0x00003ec6      4531c9         xor r9d, r9d
0x00003ec9      84d2           test dl, dl
0x00003ecb      7454           je 0x3f21
0x00003ecd      d9c9           fxch st(1)
0x00003ecf      db7c2420       fstp xword [rsp + 0x20]
0x00003ed3      44894c2430     mov dword [rsp + 0x30], r9d
0x00003ed8      4883ec10       sub rsp, 0x10
0x00003edc      488b3d1da220.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e100:8]=0
0x00003ee3      488d15be5c00.  lea rdx, str.after_rounding__value__Lf____0.f____u ; 0x9ba8 ; "  after rounding, value=%Lf * %0.f ^ %u\n"
0x00003eea      be01000000     mov esi, 1
0x00003eef      4489e9         mov ecx, r13d
0x00003ef2      b801000000     mov eax, 1
0x00003ef7      d9c0           fld st(0)
0x00003ef9      db3c24         fstp xword [rsp]
0x00003efc      f20f10442420   movsd xmm0, qword [rsp + 0x20]
0x00003f02      db7c2410       fstp xword [rsp + 0x10]
0x00003f06      e8d5ddffff     call sym.imp.__fprintf_chk
0x00003f0b      5f             pop rdi
0x00003f0c      4158           pop r8
0x00003f0e      488b350ba120.  mov rsi, qword [obj.user_precision]     ; [0x20e020:8]=-1
0x00003f15      448b4c2430     mov r9d, dword [rsp + 0x30]
0x00003f1a      db6c2420       fld xword [rsp + 0x20]
0x00003f1e      db2c24         fld xword [rsp]
0x00003f21      4883feff       cmp rsi, 0xffffffffffffffff
0x00003f25      b925730000     mov ecx, 0x7325                         ; '%s'
0x00003f2a      c745002e2a4c.  mov dword [rbp], 0x664c2a2e             ; '.*Lf'
0x00003f31      440f45ce       cmovne r9d, esi
0x00003f35      4183fd08       cmp r13d, 8
0x00003f39      66894d04       mov word [rbp + 4], cx
0x00003f3d      c6450600       mov byte [rbp + 6], 0
0x00003f41      0f872e060000   ja 0x4575
0x00003f47      488d15167100.  lea rdx, [0x0000b064]
0x00003f4e      4489e8         mov eax, r13d
0x00003f51      48630482       movsxd rax, dword [rdx + rax*4]
0x00003f55      4801d0         add rax, rdx
0x00003f58      ffe0           jmp rax
0x00003f5a      d9c9           fxch st(1)
0x00003f5c      488d05a15500.  lea rax, str.KMGTPEZ                    ; 0x9504 ; u"KMGTPEZ\u7274\u6d69\u696d\u676e\u7320\u6675\u6966\u2078\u7325\n\u6f6e\u7620\u6c61\u6469\u7320\u6675\u6966\u2078\u6f66\u6e75\u0a64\u2000\u7320\u6675\u6966\u2078\u6f70\u6577\u3d72\u6425\u255e\u2064\u203d\u4c25\u0a66\u2000\u7220\u7465\u7275\u696e\u676e\u7620\u6c61\u6575\u203a\u4c25\u2066\u2528\u474c\u0a29\u3000\u6c25d\u6f64\u6275\u656c\u745f\u5f6f\u7568\u616d\u3a6e\n\u2020\u6572\u7574\u6e72\u6e69\u2067\u6176\u756c\u3a65\u2520\u0a73\u2000\u4120\u7466\u7265\u7020\u6461\u6964\u676e\u203a\u7325\n\u756e\u666d\u746d\u0a00\u4e55\u5449\u6f20\u7470\u6f69\u736e\u0a3a\u5b00\u7400\u7365\u2074\u6e69\u6f76\u6163\u6974\u6e6f\u4d00\u6c75\u6974\u632d\u6c61\u206c\u6e69\u6f76\u6163\u6974\u6e6f\u7300\u6168\u3232\u7334\u6d75\u7300\u6168\u2032\u7475\u6c69\u7469\u6569s\u6873\u3261\u3635\u7573m\u6873\u3361\u3438\u7573m\u6873\u3561\u3231\u7573m\u250a\u2073\u6e6f\u696c\u656e\u6820\u6c65\u3a70\u3c20\u7325\u0a3e\u4700\u554e\u6320\u726f\u7565\u6974\u736c\u6500\u5f6e\u4600\u6c75\u206c\u6f64\u7563\u656d\u746e\u7461\u6f69\u206e\u253c\u2573\u3e73\n\u654c\u7466\u5200\u6769\u7468\u7900\u7365\u6e00o\u752f\u7273\u6c2f\u636f\u6c61\u732f\u6168\u6572\u6c2f\u636f\u6c61e.\u3a64z\u2d2d\u7266\u6d6f\u2d00\u742do\u2d2d\u6f72\u6e75d\u6e69\u6176\u696c\u2064\u6170\u6464\u6e69\u2067\u6176\u756c\u2065\u7325\u6d00\u6c75\u6974\u6c70\u2065\u6966\u6c65\u2064\u7073\u6365\u6669\u6369\u7461\u6f69\u736e\u6900\u766e\u6c61\u6469\u6820\u6165\u6564\u2072\u6176\u756c\u2065\u7325\u2d00\u692d\u766e\u6c61\u6469\u4100\u7373\u6661\u4720\u726f\u6f64n\u6166\u6c69\u6465\u7420\u206f\u6573\u2074\u6f6c\u6163\u656c\u6600\u726f\u616d\u2074\u7325\u6820\u7361\u6e20\u206f\u2525\u6420\u7269\u6365\u6974\u6576\u2000\u6600\u726f\u616d\u2074\u7325\u6520\u646e\u2073\u6e69\u2520%\u7265\u6f72\u2072\u6572\u6461\u6e69\u2067\u6e69\u7570t\u7266\u6d6f\u752d\u696et\u6f74\u752d\u696et\u6170\u6464\u6e69g\u7573\u6666\u7869\u6700\u6f72\u7075\u6e69g\u6564\u696c\u696d\u6574r\u6966\u6c65d\u642d\u6265\u6775\u6800\u6165\u6564r\u6f66\u6d72\u7461\u7a00\u7265\u2d6f\u6574\u6d72\u6e69\u7461\u6465\u6800\u6c65p\u6576\u7372\u6f69n\u6261\u726ft\u6166\u6c69\u7700\u7261n\u6769\u6f6e\u6572\u7500p\u6f64\u6e77\u6600\u6f72\u2d6d\u657a\u6f72\u7400\u776f\u7261\u7364\u7a2d\u7265o\u656e\u7261\u7365t\u6f6e\u656e\u7300i\u6569c\u6569\u2d63i\u7561\u6f74"
0x00003f63      db7c2410       fstp xword [rsp + 0x10]
0x00003f67      488dac24d000.  lea rbp, [rsp + 0xd0]
0x00003f6f      4883ec08       sub rsp, 8
0x00003f73      4d89e0         mov r8, r12
0x00003f76      b980000000     mov ecx, 0x80
0x00003f7b      ba01000000     mov edx, 1
0x00003f80      be7f000000     mov esi, 0x7f
0x00003f85      50             push rax
0x00003f86      4889ef         mov rdi, rbp
0x00003f89      31c0           xor eax, eax
0x00003f8b      4883ec10       sub rsp, 0x10
0x00003f8f      d9c0           fld st(0)
0x00003f91      db3c24         fstp xword [rsp]
0x00003f94      db7c2420       fstp xword [rsp + 0x20]
0x00003f98      e803daffff     call sym.imp.__snprintf_chk
0x00003f9d      4883c420       add rsp, 0x20
0x00003fa1      83f87e         cmp eax, 0x7e
0x00003fa4      db2c24         fld xword [rsp]
0x00003fa7      db6c2410       fld xword [rsp + 0x10]
0x00003fab      0f8791000000   ja 0x4042
0x00003fb1      ddd9           fstp st(1)
0x00003fb3      83fb04         cmp ebx, 4
0x00003fb6      750d           jne 0x3fc5
0x00003fb8      4585ed         test r13d, r13d
0x00003fbb      0f858b050000   jne 0x454c
0x00003fc1      eb02           jmp 0x3fc5
0x00003fc3      ddd9           fstp st(1)
0x00003fc5      0fb61d44a120.  movzx ebx, byte [obj.dev_debug]         ; [0x20e110:1]=0
0x00003fcc      84db           test bl, bl
0x00003fce      0f85f7030000   jne 0x43cb
0x00003fd4      488b359da120.  mov rsi, qword [obj.suffix]             ; [0x20e178:8]=0
0x00003fdb      4885f6         test rsi, rsi
0x00003fde      0f8561faffff   jne 0x3a45
0x00003fe4      ddd8           fstp st(0)
0x00003fe6      e9ecfaffff     jmp 0x3ad7
0x00003feb      d9c9           fxch st(1)
0x00003fed      db7c2410       fstp xword [rsp + 0x10]
0x00003ff1      488d057e5500.  lea rax, [0x00009576]
0x00003ff8      488dac24d000.  lea rbp, [rsp + 0xd0]
0x00004000      4883ec08       sub rsp, 8
0x00004004      4d89e0         mov r8, r12
0x00004007      b980000000     mov ecx, 0x80
0x0000400c      ba01000000     mov edx, 1
0x00004011      50             push rax
0x00004012      be7f000000     mov esi, 0x7f
0x00004017      31c0           xor eax, eax
0x00004019      4889ef         mov rdi, rbp
0x0000401c      4883ec10       sub rsp, 0x10
0x00004020      d9c0           fld st(0)
0x00004022      db3c24         fstp xword [rsp]
0x00004025      db7c2420       fstp xword [rsp + 0x20]
0x00004029      e872d9ffff     call sym.imp.__snprintf_chk
0x0000402e      4883c420       add rsp, 0x20
0x00004032      83f87e         cmp eax, 0x7e
0x00004035      db2c24         fld xword [rsp]
0x00004038      db6c2410       fld xword [rsp + 0x10]
0x0000403c      7685           jbe 0x3fc3
0x0000403e      ddd8           fstp st(0)
0x00004040      eb02           jmp 0x4044
0x00004042      ddd8           fstp st(0)
0x00004044      db3c24         fstp xword [rsp]
0x00004047      488d35025b00.  lea rsi, str.failed_to_prepare_value___Lf__for_printing ; 0x9b50 ; "failed to prepare value '%Lf' for printing"
0x0000404e      ba05000000     mov edx, 5
0x00004053      31ff           xor edi, edi
0x00004055      e826daffff     call sym.imp.dcgettext
0x0000405a      4883ec10       sub rsp, 0x10
0x0000405e      4889c2         mov rdx, rax
0x00004061      31f6           xor esi, esi
0x00004063      bf01000000     mov edi, 1
0x00004068      31c0           xor eax, eax
0x0000406a      db6c2410       fld xword [rsp + 0x10]
0x0000406e      db3c24         fstp xword [rsp]
0x00004071      e80adcffff     call sym.imp.error
0x00004076      662e0f1f8400.  nop word cs:[rax + rax]
0x00004080      d9c9           fxch st(1)
0x00004082      488d05225400.  lea rax, [0x000094ab]                   ; "Y"
0x00004089      e9d5feffff     jmp 0x3f63
0x0000408e      d9c9           fxch st(1)
0x00004090      488d05795400.  lea rax, [0x00009510]                   ; "Z"
0x00004097      e9c7feffff     jmp 0x3f63
0x0000409c      d9c9           fxch st(1)
0x0000409e      488d05695400.  lea rax, [0x0000950e]                   ; u"EZ\u7274\u6d69\u696d\u676e\u7320\u6675\u6966\u2078\u7325\n\u6f6e\u7620\u6c61\u6469\u7320\u6675\u6966\u2078\u6f66\u6e75\u0a64\u2000\u7320\u6675\u6966\u2078\u6f70\u6577\u3d72\u6425\u255e\u2064\u203d\u4c25\u0a66\u2000\u7220\u7465\u7275\u696e\u676e\u7620\u6c61\u6575\u203a\u4c25\u2066\u2528\u474c\u0a29\u3000\u6c25d\u6f64\u6275\u656c\u745f\u5f6f\u7568\u616d\u3a6e"
0x000040a5      e9b9feffff     jmp 0x3f63
0x000040aa      d9c9           fxch st(1)
0x000040ac      488d05595400.  lea rax, [0x0000950c]                   ; u"PEZ\u7274\u6d69\u696d\u676e\u7320\u6675\u6966\u2078\u7325\n\u6f6e\u7620\u6c61\u6469\u7320\u6675\u6966\u2078\u6f66\u6e75\u0a64\u2000\u7320\u6675\u6966\u2078\u6f70\u6577\u3d72\u6425\u255e\u2064\u203d\u4c25\u0a66\u2000\u7220\u7465\u7275\u696e\u676e\u7620\u6c61\u6575\u203a\u4c25\u2066\u2528\u474c\u0a29\u3000\u6c25d\u6f64\u6275\u656c\u745f\u5f6f\u7568\u616d"
0x000040b3      e9abfeffff     jmp 0x3f63
0x000040b8      d9c9           fxch st(1)
0x000040ba      488d05495400.  lea rax, [0x0000950a]                   ; u"TPEZ\u7274\u6d69\u696d\u676e\u7320\u6675\u6966\u2078\u7325\n\u6f6e\u7620\u6c61\u6469\u7320\u6675\u6966\u2078\u6f66\u6e75\u0a64\u2000\u7320\u6675\u6966\u2078\u6f70\u6577\u3d72\u6425\u255e\u2064\u203d\u4c25\u0a66\u2000\u7220\u7465\u7275\u696e\u676e\u7620\u6c61\u6575\u203a\u4c25\u2066\u2528\u474c\u0a29\u3000\u6c25d\u6f64\u6275\u656c\u745f\u5f6f\u7568"
0x000040c1      e99dfeffff     jmp 0x3f63
0x000040c6      d9c9           fxch st(1)
0x000040c8      488d05395400.  lea rax, [0x00009508]                   ; u"GTPEZ\u7274\u6d69\u696d\u676e\u7320\u6675\u6966\u2078\u7325\n\u6f6e\u7620\u6c61\u6469\u7320\u6675\u6966\u2078\u6f66\u6e75\u0a64\u2000\u7320\u6675\u6966\u2078\u6f70\u6577\u3d72\u6425\u255e\u2064\u203d\u4c25\u0a66\u2000\u7220\u7465\u7275\u696e\u676e\u7620\u6c61\u6575\u203a\u4c25\u2066\u2528\u474c\u0a29\u3000\u6c25d\u6f64\u6275\u656c\u745f\u5f6f"
0x000040cf      e98ffeffff     jmp 0x3f63
0x000040d4      d9c9           fxch st(1)
0x000040d6      488d05295400.  lea rax, [0x00009506]                   ; u"MGTPEZ\u7274\u6d69\u696d\u676e\u7320\u6675\u6966\u2078\u7325\n\u6f6e\u7620\u6c61\u6469\u7320\u6675\u6966\u2078\u6f66\u6e75\u0a64\u2000\u7320\u6675\u6966\u2078\u6f70\u6577\u3d72\u6425\u255e\u2064\u203d\u4c25\u0a66\u2000\u7220\u7465\u7275\u696e\u676e\u7620\u6c61\u6575\u203a\u4c25\u2066\u2528\u474c\u0a29\u3000\u6c25d\u6f64\u6275\u656c\u745f"
0x000040dd      e981feffff     jmp 0x3f63
0x000040e2      dddb           fstp st(3)
0x000040e4      d9c9           fxch st(1)
0x000040e6      d9ca           fxch st(2)
0x000040e8      eb08           jmp 0x40f2
0x000040ea      ddd9           fstp st(1)
0x000040ec      d9c9           fxch st(1)
0x000040ee      d9ca           fxch st(2)
0x000040f0      d9c9           fxch st(1)
0x000040f2      d9c9           fxch st(1)
0x000040f4      d9ca           fxch st(2)
0x000040f6      d9c9           fxch st(1)
0x000040f8      bf01000000     mov edi, 1
0x000040fd      eb03           jmp 0x4102
0x000040ff      90             nop
0x00004100      ddd9           fstp st(1)
0x00004102      d9ee           fldz
0x00004104      dfeb           fucomip st(3)
0x00004106      0f8728050000   ja 0x4634
0x0000410c      d9ca           fxch st(2)
0x0000410e      d805ac700000   fadd dword [0x0000b1c0]
0x00004114      d96c244c       fldcw word [rsp + 0x4c]
0x00004118      df7c2420       fistp qword [rsp + 0x20]
0x0000411c      d96c244e       fldcw word [rsp + 0x4e]
0x00004120      df6c2420       fild qword [rsp + 0x20]
0x00004124      e95bfdffff     jmp 0x3e84
0x00004129      dddb           fstp st(3)
0x0000412b      d9c9           fxch st(1)
0x0000412d      d9ca           fxch st(2)
0x0000412f      eb08           jmp 0x4139
0x00004131      ddd9           fstp st(1)
0x00004133      d9c9           fxch st(1)
0x00004135      d9ca           fxch st(2)
0x00004137      d9c9           fxch st(1)
0x00004139      d9c9           fxch st(1)
0x0000413b      d9ca           fxch st(2)
0x0000413d      d9c9           fxch st(1)
0x0000413f      bf01000000     mov edi, 1
0x00004144      eb0c           jmp 0x4152
0x00004146      662e0f1f8400.  nop word cs:[rax + rax]
0x00004150      ddd9           fstp st(1)
0x00004152      d9ee           fldz
0x00004154      dfeb           fucomip st(3)
0x00004156      0f86fafcffff   jbe 0x3e56
0x0000415c      d9ca           fxch st(2)
0x0000415e      d9e0           fchs
0x00004160      d9c0           fld st(0)
0x00004162      d96c244c       fldcw word [rsp + 0x4c]
0x00004166      df7c2440       fistp qword [rsp + 0x40]
0x0000416a      d96c244e       fldcw word [rsp + 0x4e]
0x0000416e      488b442440     mov rax, qword [rsp + 0x40]
0x00004173      31c9           xor ecx, ecx
0x00004175      4889442420     mov qword [rsp + 0x20], rax
0x0000417a      df6c2420       fild qword [rsp + 0x20]
0x0000417e      d9c9           fxch st(1)
0x00004180      dfe9           fucomip st(1)
0x00004182      ddd8           fstp st(0)
0x00004184      0f97c1         seta cl
0x00004187      4801c8         add rax, rcx
0x0000418a      48f7d8         neg rax
0x0000418d      4889442420     mov qword [rsp + 0x20], rax
0x00004192      df6c2420       fild qword [rsp + 0x20]
0x00004196      e9e9fcffff     jmp 0x3e84
0x0000419b      dddb           fstp st(3)
0x0000419d      d9c9           fxch st(1)
0x0000419f      d9ca           fxch st(2)
0x000041a1      eb08           jmp 0x41ab
0x000041a3      ddd9           fstp st(1)
0x000041a5      d9c9           fxch st(1)
0x000041a7      d9ca           fxch st(2)
0x000041a9      d9c9           fxch st(1)
0x000041ab      d9ca           fxch st(2)
0x000041ad      d9c9           fxch st(1)
0x000041af      bf01000000     mov edi, 1
0x000041b4      eb0e           jmp 0x41c4
0x000041b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000041c0      ddd9           fstp st(1)
0x000041c2      d9ca           fxch st(2)
0x000041c4      d9e0           fchs
0x000041c6      d9c0           fld st(0)
0x000041c8      d96c244c       fldcw word [rsp + 0x4c]
0x000041cc      df7c2440       fistp qword [rsp + 0x40]
0x000041d0      d96c244e       fldcw word [rsp + 0x4e]
0x000041d4      eb98           jmp 0x416e
0x000041d6      d9cb           fxch st(3)
0x000041d8      eb02           jmp 0x41dc
0x000041da      d9cb           fxch st(3)
0x000041dc      d96c244c       fldcw word [rsp + 0x4c]
0x000041e0      df7c2420       fistp qword [rsp + 0x20]
0x000041e4      d96c244e       fldcw word [rsp + 0x4e]
0x000041e8      df6c2420       fild qword [rsp + 0x20]
0x000041ec      dec3           faddp st(3)
0x000041ee      89f8           mov eax, edi
0x000041f0      83e801         sub eax, 1
0x000041f3      741c           je 0x4211
0x000041f5      d9c0           fld st(0)
0x000041f7      83e801         sub eax, 1
0x000041fa      d8c9           fmul st(1)
0x000041fc      75f9           jne 0x41f7
0x000041fe      ddd9           fstp st(1)
0x00004200      e98bfcffff     jmp 0x3e90
0x00004205      ddd8           fstp st(0)
0x00004207      ddda           fstp st(2)
0x00004209      d9c9           fxch st(1)
0x0000420b      d9ee           fldz
0x0000420d      d9ca           fxch st(2)
0x0000420f      d9c9           fxch st(1)
0x00004211      e97afcffff     jmp 0x3e90
0x00004216      662e0f1f8400.  nop word cs:[rax + rax]
0x00004220      4c8da4249000.  lea r12, [rsp + 0x90]
0x00004228      498d6c2401     lea rbp, [r12 + 1]
0x0000422d      e966f3ffff     jmp 0x3598
0x00004232      bb05000000     mov ebx, 5
0x00004237      4c8d2da25200.  lea r13, str.invalid_suffix_in_input:__s ; 0x94e0 ; "invalid suffix in input: %s"
0x0000423e      e9cdefffff     jmp 0x3210
0x00004243      d9c0           fld st(0)
0x00004245      4531ed         xor r13d, r13d
0x00004248      e908fbffff     jmp 0x3d55
0x0000424d      488d35745800.  lea rsi, str.value_too_large_to_be_printed:___Lg___consider_using___to ; 0x9ac8 ; "value too large to be printed: '%Lg' (consider using --to)"
0x00004254      31ff           xor edi, edi
0x00004256      e825d8ffff     call sym.imp.dcgettext
0x0000425b      db2c24         fld xword [rsp]
0x0000425e      4889c2         mov rdx, rax
0x00004261      4883ec10       sub rsp, 0x10
0x00004265      31c0           xor eax, eax
0x00004267      31f6           xor esi, esi
0x00004269      89df           mov edi, ebx
0x0000426b      db3c24         fstp xword [rsp]
0x0000426e      e80ddaffff     call sym.imp.error
0x00004273      58             pop rax
0x00004274      5a             pop rdx
0x00004275      e926f0ffff     jmp 0x32a0
0x0000427a      db7c2410       fstp xword [rsp + 0x10]
0x0000427e      488b0d7b9e20.  mov rcx, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e100:8]=0
0x00004285      488d3df05200.  lea rdi, str.double_to_human:           ; 0x957c ; "double_to_human:\n"
0x0000428c      ba11000000     mov edx, 0x11
0x00004291      be01000000     mov esi, 1
0x00004296      e835daffff     call sym.imp.fwrite
0x0000429b      0fb6156e9e20.  movzx edx, byte [obj.dev_debug]         ; [0x20e110:1]=0
0x000042a2      db6c2410       fld xword [rsp + 0x10]
0x000042a6      e90cf3ffff     jmp 0x35b7
0x000042ab      db7c2410       fstp xword [rsp + 0x10]
0x000042af      4c8d05c15200.  lea r8, str.0_ld                        ; 0x9577 ; "0%ld"
0x000042b6      4889ef         mov rdi, rbp
0x000042b9      b93f000000     mov ecx, 0x3f                           ; '?'
0x000042be      ba01000000     mov edx, 1
0x000042c3      be3e000000     mov esi, 0x3e                           ; '>'
0x000042c8      31c0           xor eax, eax
0x000042ca      e8d1d6ffff     call sym.imp.__snprintf_chk
0x000042cf      4898           cdqe
0x000042d1      4801c5         add rbp, rax
0x000042d4      db6c2410       fld xword [rsp + 0x10]
0x000042d8      e9cbf2ffff     jmp 0x35a8
0x000042dd      ddd8           fstp st(0)
0x000042df      ddd8           fstp st(0)
0x000042e1      db2d196f0000   fld xword [0x0000b200]
0x000042e7      d97c244e       fnstcw word [rsp + 0x4e]
0x000042eb      0fb744244e     movzx eax, word [rsp + 0x4e]
0x000042f0      80cc0c         or ah, 0xc
0x000042f3      4183ff04       cmp r15d, 4
0x000042f7      668944244c     mov word [rsp + 0x4c], ax
0x000042fc      d9c2           fld st(2)
0x000042fe      d8f1           fdiv st(1)
0x00004300      d96c244c       fldcw word [rsp + 0x4c]
0x00004304      df7c2420       fistp qword [rsp + 0x20]
0x00004308      d96c244e       fldcw word [rsp + 0x4e]
0x0000430c      df6c2420       fild qword [rsp + 0x20]
0x00004310      dec9           fmulp st(1)
0x00004312      dcea           fsub st(2), st(0)
0x00004314      0f875e030000   ja 0x4678
0x0000431a      488d0d676d00.  lea rcx, [0x0000b088]
0x00004321      4a6304b9       movsxd rax, dword [rcx + r15*4]
0x00004325      4801c8         add rax, rcx
0x00004328      ffe0           jmp rax
0x0000432a      d9ca           fxch st(2)
0x0000432c      d96c244c       fldcw word [rsp + 0x4c]
0x00004330      df7c2420       fistp qword [rsp + 0x20]
0x00004334      d96c244e       fldcw word [rsp + 0x4e]
0x00004338      df6c2420       fild qword [rsp + 0x20]
0x0000433c      dec2           faddp st(2)
0x0000433e      d9e8           fld1
0x00004340      e94bfbffff     jmp 0x3e90
0x00004345      31ff           xor edi, edi
0x00004347      e906feffff     jmp 0x4152
0x0000434c      d9ca           fxch st(2)
0x0000434e      31ff           xor edi, edi
0x00004350      e96ffeffff     jmp 0x41c4
0x00004355      d9ca           fxch st(2)
0x00004357      31ff           xor edi, edi
0x00004359      e9fafaffff     jmp 0x3e58
0x0000435e      31ff           xor edi, edi
0x00004360      e99dfdffff     jmp 0x4102
0x00004365      f20f1025636e.  movsd xmm4, qword [0x0000b1d0]          ; [0xb1d0:8]=0x408f400000000000
0x0000436d      c7442420e803.  mov dword [rsp + 0x20], 0x3e8           ; [0x3e8:4]=315
0x00004375      f20f11642410   movsd qword [rsp + 0x10], xmm4
0x0000437b      e994f9ffff     jmp 0x3d14
0x00004380      db2d7a6e0000   fld xword [0x0000b200]
0x00004386      d97c244e       fnstcw word [rsp + 0x4e]
0x0000438a      0fb744244e     movzx eax, word [rsp + 0x4e]
0x0000438f      80cc0c         or ah, 0xc
0x00004392      4183ff04       cmp r15d, 4
0x00004396      668944244c     mov word [rsp + 0x4c], ax
0x0000439b      d9c1           fld st(1)
0x0000439d      d8f1           fdiv st(1)
0x0000439f      d96c244c       fldcw word [rsp + 0x4c]
0x000043a3      df7c2410       fistp qword [rsp + 0x10]
0x000043a7      d96c244e       fldcw word [rsp + 0x4e]
0x000043ab      df6c2410       fild qword [rsp + 0x10]
0x000043af      dec9           fmulp st(1)
0x000043b1      d9c1           fld st(1)
0x000043b3      d8e1           fsub st(1)
0x000043b5      0f87b2020000   ja 0x466d
0x000043bb      488d0dda6c00.  lea rcx, [0x0000b09c]
0x000043c2      4a6304b9       movsxd rax, dword [rcx + r15*4]
0x000043c6      4801c8         add rax, rcx
0x000043c9      ffe0           jmp rax
0x000043cb      db3c24         fstp xword [rsp]
0x000043ce      4889ef         mov rdi, rbp
0x000043d1      e87a390000     call sym.quote
0x000043d6      488b3d239d20.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e100:8]=0
0x000043dd      488d15aa5100.  lea rdx, str.returning_value:__s        ; 0x958e ; "  returning value: %s\n"
0x000043e4      4889c1         mov rcx, rax
0x000043e7      be01000000     mov esi, 1
0x000043ec      31c0           xor eax, eax
0x000043ee      e8edd8ffff     call sym.imp.__fprintf_chk
0x000043f3      0fb61d169d20.  movzx ebx, byte [obj.dev_debug]         ; [0x20e110:1]=0
0x000043fa      db2c24         fld xword [rsp]
0x000043fd      e937f6ffff     jmp 0x3a39
0x00004402      d9c1           fld st(1)
0x00004404      d9e0           fchs
0x00004406      dbe9           fucomi st(1)
0x00004408      0f8396faffff   jae 0x3ea4
0x0000440e      ddd9           fstp st(1)
0x00004410      d9059e6d0000   fld dword [0x0000b1b4]
0x00004416      4585ed         test r13d, r13d
0x00004419      0f95c0         setne al
0x0000441c      4531c9         xor r9d, r9d
0x0000441f      dfe9           fucomip st(1)
0x00004421      ddd8           fstp st(0)
0x00004423      410f97c1       seta r9b
0x00004427      4121c1         and r9d, eax
0x0000442a      e99afaffff     jmp 0x3ec9
0x0000442f      4889b4248000.  mov qword [rsp + 0x80], rsi
0x00004437      448b05da9b20.  mov r8d, dword [obj.padding_alignment]  ; [0x20e018:4]=1
0x0000443e      488d8c248000.  lea rcx, [rsp + 0x80]
0x00004446      488b351b9d20.  mov rsi, qword [obj.padding_buffer]     ; [0x20e168:8]=0
0x0000444d      41b902000000   mov r9d, 2
0x00004453      4889ef         mov rdi, rbp
0x00004456      e875170000     call sym.mbsalign
0x0000445b      803dae9c2000.  cmp byte [obj.dev_debug], 0             ; [0x20e110:1]=0
0x00004462      0f84e5f6ffff   je 0x3b4d
0x00004468      488b3df99c20.  mov rdi, qword [obj.padding_buffer]     ; [0x20e168:8]=0
0x0000446f      e8dc380000     call sym.quote
0x00004474      488b3d859c20.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e100:8]=0
0x0000447b      488d15235100.  lea rdx, str.After_padding:__s          ; 0x95a5 ; "  After padding: %s\n"
0x00004482      4889c1         mov rcx, rax
0x00004485      be01000000     mov esi, 1
0x0000448a      31c0           xor eax, eax
0x0000448c      e84fd8ffff     call sym.imp.__fprintf_chk
0x00004491      e9b7f6ffff     jmp 0x3b4d
0x00004496      d9ee           fldz
0x00004498      d9c2           fld st(2)
0x0000449a      d9c9           fxch st(1)
0x0000449c      dfeb           fucomip st(3)
0x0000449e      7602           jbe 0x44a2
0x000044a0      d9e0           fchs
0x000044a2      d9050c6d0000   fld dword [0x0000b1b4]
0x000044a8      d9c0           fld st(0)
0x000044aa      dbea           fucomi st(2)
0x000044ac      ddda           fstp st(2)
0x000044ae      0f8629feffff   jbe 0x42dd
0x000044b4      d9cb           fxch st(3)
0x000044b6      dec9           fmulp st(1)
0x000044b8      d97c244e       fnstcw word [rsp + 0x4e]
0x000044bc      0fb744244e     movzx eax, word [rsp + 0x4e]
0x000044c1      db2d396d0000   fld xword [0x0000b200]
0x000044c7      80cc0c         or ah, 0xc
0x000044ca      4183ff04       cmp r15d, 4
0x000044ce      668944244c     mov word [rsp + 0x4c], ax
0x000044d3      d9c1           fld st(1)
0x000044d5      d8f1           fdiv st(1)
0x000044d7      d96c244c       fldcw word [rsp + 0x4c]
0x000044db      df7c2420       fistp qword [rsp + 0x20]
0x000044df      d96c244e       fldcw word [rsp + 0x4e]
0x000044e3      df6c2420       fild qword [rsp + 0x20]
0x000044e7      dec9           fmulp st(1)
0x000044e9      dce9           fsub st(1), st(0)
0x000044eb      0f873d020000   ja 0x472e
0x000044f1      488d0db86b00.  lea rcx, [0x0000b0b0]
0x000044f8      4a6304b9       movsxd rax, dword [rcx + r15*4]
0x000044fc      4801c8         add rax, rcx
0x000044ff      ffe0           jmp rax
0x00004501      d9ee           fldz
0x00004503      dfe9           fucomip st(1)
0x00004505      d9c0           fld st(0)
0x00004507      0f8603ffffff   jbe 0x4410
0x0000450d      d9e0           fchs
0x0000450f      e9fcfeffff     jmp 0x4410
0x00004514      0f1f4000       nop dword [rax]
0x00004518      498d4102       lea rax, [r9 + 2]
0x0000451c      84d2           test dl, dl
0x0000451e      4889442460     mov qword [rsp + 0x60], rax
0x00004523      755e           jne 0x4583
0x00004525      d9058d6c0000   fld dword [0x0000b1b8]
0x0000452b      41bf00040000   mov r15d, 0x400
0x00004531      e914efffff     jmp 0x344a
0x00004536      dec1           faddp st(1)
0x00004538      db7c2470       fstp xword [rsp + 0x70]
0x0000453c      e9c1f3ffff     jmp 0x3902
0x00004541      d9056d6c0000   fld dword [0x0000b1b4]
0x00004547      e9a2fcffff     jmp 0x41ee
0x0000454c      db3c24         fstp xword [rsp]
0x0000454f      4898           cdqe
0x00004551      ba7f000000     mov edx, 0x7f
0x00004556      488d35d95200.  lea rsi, [0x00009836]                   ; "i"
0x0000455d      4829c2         sub rdx, rax
0x00004560      b980000000     mov ecx, 0x80
0x00004565      4889ef         mov rdi, rbp
0x00004568      e883d7ffff     call sym.imp.__strncat_chk
0x0000456d      db2c24         fld xword [rsp]
0x00004570      e950faffff     jmp 0x3fc5
0x00004575      d9c9           fxch st(1)
0x00004577      488d057e4f00.  lea rax, str.error                      ; 0x94fc ; "(error)"
0x0000457e      e9e0f9ffff     jmp 0x3f63
0x00004583      488b3d769b20.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e100:8]=0
0x0000458a      488d155f5400.  lea rdx, str.Auto_scaling__found__i___switching_to_base__d ; 0x99f0 ; "  Auto-scaling, found 'i', switching to base %d\n"
0x00004591      b900040000     mov ecx, 0x400
0x00004596      be01000000     mov esi, 1
0x0000459b      31c0           xor eax, eax
0x0000459d      4489442410     mov dword [rsp + 0x10], r8d
0x000045a2      41bf00040000   mov r15d, 0x400
0x000045a8      e833d7ffff     call sym.imp.__fprintf_chk
0x000045ad      0fb6155c9b20.  movzx edx, byte [obj.dev_debug]         ; [0x20e110:1]=0
0x000045b4      d905fe6b0000   fld dword [0x0000b1b8]
0x000045ba      448b442410     mov r8d, dword [rsp + 0x10]
0x000045bf      e986eeffff     jmp 0x344a
0x000045c4      d825f66b0000   fsub dword [0x0000b1c0]
0x000045ca      d96c244c       fldcw word [rsp + 0x4c]
0x000045ce      df3c24         fistp qword [rsp]
0x000045d1      d96c244e       fldcw word [rsp + 0x4e]
0x000045d5      df2c24         fild qword [rsp]
0x000045d8      e97ef3ffff     jmp 0x395b
0x000045dd      d905d16b0000   fld dword [0x0000b1b4]
0x000045e3      d97c244e       fnstcw word [rsp + 0x4e]
0x000045e7      0fb744244e     movzx eax, word [rsp + 0x4e]
0x000045ec      d9c1           fld st(1)
0x000045ee      d8c9           fmul st(1)
0x000045f0      80cc0c         or ah, 0xc
0x000045f3      4183ff04       cmp r15d, 4
0x000045f7      668944244c     mov word [rsp + 0x4c], ax
0x000045fc      db2dfe6b0000   fld xword [0x0000b200]
0x00004602      d9c1           fld st(1)
0x00004604      d8f1           fdiv st(1)
0x00004606      d96c244c       fldcw word [rsp + 0x4c]
0x0000460a      df7c2410       fistp qword [rsp + 0x10]
0x0000460e      d96c244e       fldcw word [rsp + 0x4e]
0x00004612      df6c2410       fild qword [rsp + 0x10]
0x00004616      dec9           fmulp st(1)
0x00004618      dce9           fsub st(1), st(0)
0x0000461a      0f8721f6ffff   ja 0x3c41
0x00004620      ddda           fstp st(2)
0x00004622      d9c9           fxch st(1)
0x00004624      488d0d996a00.  lea rcx, [0x0000b0c4]
0x0000462b      4a6304b9       movsxd rax, dword [rcx + r15*4]
0x0000462f      4801c8         add rax, rcx
0x00004632      ffe0           jmp rax
0x00004634      d9ca           fxch st(2)
0x00004636      d825846b0000   fsub dword [0x0000b1c0]
0x0000463c      d96c244c       fldcw word [rsp + 0x4c]
0x00004640      df7c2420       fistp qword [rsp + 0x20]
0x00004644      d96c244e       fldcw word [rsp + 0x4e]
0x00004648      df6c2420       fild qword [rsp + 0x20]
0x0000464c      e933f8ffff     jmp 0x3e84
0x00004651      d8355d6b0000   fdiv dword [0x0000b1b4]
0x00004657      e988f2ffff     jmp 0x38e4
0x0000465c      e84fd4ffff     call sym.imp.__stack_chk_fail
0x00004661      ddd8           fstp st(0)
0x00004663      4531f6         xor r14d, r14d
0x00004666      d9e8           fld1
0x00004668      e9e9efffff     jmp 0x3656
0x0000466d      ddd8           fstp st(0)
0x0000466f      ddd8           fstp st(0)
0x00004671      d9ee           fldz
0x00004673      e907f3ffff     jmp 0x397f
0x00004678      ddd8           fstp st(0)
0x0000467a      ddd9           fstp st(1)
0x0000467c      d9ee           fldz
0x0000467e      e91bf8ffff     jmp 0x3e9e
0x00004683      d9052b6b0000   fld dword [0x0000b1b4]
0x00004689      d97c244e       fnstcw word [rsp + 0x4e]
0x0000468d      0fb744244e     movzx eax, word [rsp + 0x4e]
0x00004692      dcca           fmul st(2), st(0)
0x00004694      80cc0c         or ah, 0xc
0x00004697      4183ff04       cmp r15d, 4
0x0000469b      668944244c     mov word [rsp + 0x4c], ax
0x000046a0      db2d5a6b0000   fld xword [0x0000b200]
0x000046a6      d9c3           fld st(3)
0x000046a8      d8f1           fdiv st(1)
0x000046aa      d96c244c       fldcw word [rsp + 0x4c]
0x000046ae      df7c2420       fistp qword [rsp + 0x20]
0x000046b2      d96c244e       fldcw word [rsp + 0x4e]
0x000046b6      df6c2420       fild qword [rsp + 0x20]
0x000046ba      dec9           fmulp st(1)
0x000046bc      dceb           fsub st(3), st(0)
0x000046be      0f8741fbffff   ja 0x4205
0x000046c4      488d0d0d6a00.  lea rcx, [0x0000b0d8]
0x000046cb      4a6304b9       movsxd rax, dword [rcx + r15*4]
0x000046cf      4801c8         add rax, rcx
0x000046d2      ffe0           jmp rax
0x000046d4      4531f6         xor r14d, r14d
0x000046d7      bb06000000     mov ebx, 6
0x000046dc      4c8d2dbd5100.  lea r13, str.missing__i__suffix_in_input:__s__e.g_Ki_Mi_Gi ; 0x98a0 ; "missing 'i' suffix in input: %s (e.g Ki/Mi/Gi)"
0x000046e3      e928ebffff     jmp 0x3210
0x000046e8      db3c24         fstp xword [rsp]
0x000046eb      488d355e5400.  lea rsi, str.failed_to_prepare_value___Lf__for_printing ; 0x9b50 ; "failed to prepare value '%Lf' for printing"
0x000046f2      ba05000000     mov edx, 5
0x000046f7      31ff           xor edi, edi
0x000046f9      e882d3ffff     call sym.imp.dcgettext
0x000046fe      4883ec10       sub rsp, 0x10
0x00004702      4889c2         mov rdx, rax
0x00004705      31f6           xor esi, esi
0x00004707      bf01000000     mov edi, 1
0x0000470c      31c0           xor eax, eax
0x0000470e      db6c2410       fld xword [rsp + 0x10]
0x00004712      db3c24         fstp xword [rsp]
0x00004715      e866d5ffff     call sym.imp.error
0x0000471a      31db           xor ebx, ebx
0x0000471c      e927ebffff     jmp 0x3248
0x00004721      ddd8           fstp st(0)
0x00004723      ddd8           fstp st(0)
0x00004725      d9ee           fldz
0x00004727      d9c9           fxch st(1)
0x00004729      e944f2ffff     jmp 0x3972
0x0000472e      ddd8           fstp st(0)
0x00004730      ddd8           fstp st(0)
0x00004732      d9ee           fldz
0x00004734      d9ca           fxch st(2)
0x00004736      bf01000000     mov edi, 1
0x0000473b      e9aefaffff     jmp 0x41ee
0x00004740      d9c9           fxch st(1)
0x00004742      d96c244c       fldcw word [rsp + 0x4c]
0x00004746      df7c2420       fistp qword [rsp + 0x20]
0x0000474a      d96c244e       fldcw word [rsp + 0x4e]
0x0000474e      df6c2420       fild qword [rsp + 0x20]
0x00004752      dec1           faddp st(1)
0x00004754      d9ca           fxch st(2)
0x00004756      e935f7ffff     jmp 0x3e90
0x0000475b      ddd8           fstp st(0)
0x0000475d      ddda           fstp st(2)
0x0000475f      d9c9           fxch st(1)
0x00004761      d9ee           fldz
0x00004763      d9ca           fxch st(2)
0x00004765      d9c9           fxch st(1)
0x00004767      e989faffff     jmp 0x41f5
0x0000476c      0f1f4000       nop dword [rax]
;-- process_line:
0x00004770      4157           push r15
0x00004772      4156           push r14
0x00004774      4189f6         mov r14d, esi
0x00004777      4155           push r13
0x00004779      4154           push r12
0x0000477b      4531ed         xor r13d, r13d
0x0000477e      55             push rbp
0x0000477f      53             push rbx
0x00004780      41bc01000000   mov r12d, 1
0x00004786      31ed           xor ebp, ebp
0x00004788      4883ec18       sub rsp, 0x18
0x0000478c      8b0582982000   mov eax, dword [obj.delimiter]          ; [0x20e014:4]=128
0x00004792      660f1f440000   nop word [rax + rax]
0x00004798      4883c501       add rbp, 1
0x0000479c      3d80000000     cmp eax, 0x80
0x000047a1      440fb63f       movzx r15d, byte [rdi]
0x000047a5      0f8485000000   je 0x4830
0x000047ab      410fbed7       movsx edx, r15b
0x000047af      39c2           cmp edx, eax
0x000047b1      0f8459010000   je 0x4910
0x000047b7      4584ff         test r15b, r15b
0x000047ba      741f           je 0x47db
0x000047bc      4889fb         mov rbx, rdi
0x000047bf      eb0f           jmp 0x47d0
0x000047c1      0f1f80000000.  nop dword [rax]
0x000047c8      39c2           cmp edx, eax
0x000047ca      0f84d1000000   je 0x48a1
0x000047d0      4883c301       add rbx, 1
0x000047d4      0fbe13         movsx edx, byte [rbx]
0x000047d7      84d2           test dl, dl
0x000047d9      75ed           jne 0x47c8
0x000047db      4889ee         mov rsi, rbp
0x000047de      e88de7ffff     call sym.process_field
0x000047e3      84c0           test al, al
0x000047e5      b800000000     mov eax, 0
0x000047ea      440f44e0       cmove r12d, eax
0x000047ee      4584f6         test r14b, r14b
0x000047f1      7426           je 0x4819
0x000047f3      488b3dce9820.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0c8:8]=0
0x000047fa      0fb6150f9820.  movzx edx, byte [obj.line_delim]        ; [0x20e010:1]=10 ; "\n"
0x00004801      488b4728       mov rax, qword [rdi + 0x28]
0x00004805      483b4730       cmp rax, qword [rdi + 0x30]
0x00004809      0f831a010000   jae 0x4929
0x0000480f      488d4801       lea rcx, [rax + 1]
0x00004813      48894f28       mov qword [rdi + 0x28], rcx
0x00004817      8810           mov byte [rax], dl
0x00004819      4883c418       add rsp, 0x18
0x0000481d      4489e0         mov eax, r12d
0x00004820      5b             pop rbx
0x00004821      5d             pop rbp
0x00004822      415c           pop r12
0x00004824      415d           pop r13
0x00004826      415e           pop r14
0x00004828      415f           pop r15
0x0000482a      c3             ret
0x0000482b      0f1f440000     nop dword [rax + rax]
0x00004830      4584ff         test r15b, r15b
0x00004833      74a6           je 0x47db
0x00004835      48897c2408     mov qword [rsp + 8], rdi
0x0000483a      e8f1d4ffff     call sym.imp.__ctype_b_loc
0x0000483f      488b7c2408     mov rdi, qword [rsp + 8]
0x00004844      488b10         mov rdx, qword [rax]
0x00004847      4889fb         mov rbx, rdi
0x0000484a      660f1f440000   nop word [rax + rax]
0x00004850      410fb6c7       movzx eax, r15b
0x00004854      f6044201       test byte [rdx + rax*2], 1
0x00004858      0f8592000000   jne 0x48f0
0x0000485e      4180ff0a       cmp r15b, 0xa
0x00004862      0f8488000000   je 0x48f0
0x00004868      0fb603         movzx eax, byte [rbx]
0x0000486b      84c0           test al, al
0x0000486d      751c           jne 0x488b
0x0000486f      e967ffffff     jmp 0x47db
0x00004874      0f1f4000       nop dword [rax]
0x00004878      3c0a           cmp al, 0xa
0x0000487a      7418           je 0x4894
0x0000487c      4883c301       add rbx, 1
0x00004880      0fb603         movzx eax, byte [rbx]
0x00004883      84c0           test al, al
0x00004885      0f8450ffffff   je 0x47db
0x0000488b      0fb6c8         movzx ecx, al
0x0000488e      f6044a01       test byte [rdx + rcx*2], 1
0x00004892      74e4           je 0x4878
0x00004894      440fb63b       movzx r15d, byte [rbx]
0x00004898      4584ff         test r15b, r15b
0x0000489b      0f843affffff   je 0x47db
0x000048a1      4889ee         mov rsi, rbp
0x000048a4      c60300         mov byte [rbx], 0
0x000048a7      e8c4e6ffff     call sym.process_field
0x000048ac      84c0           test al, al
0x000048ae      8b0560972000   mov eax, dword [obj.delimiter]          ; [0x20e014:4]=128
0x000048b4      488b3d0d9820.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0c8:8]=0
0x000048bb      450f44e5       cmove r12d, r13d
0x000048bf      be20000000     mov esi, 0x20                           ; "@"
0x000048c4      3d80000000     cmp eax, 0x80
0x000048c9      488b5728       mov rdx, qword [rdi + 0x28]
0x000048cd      0f45f0         cmovne esi, eax
0x000048d0      483b5730       cmp rdx, qword [rdi + 0x30]
0x000048d4      7342           jae 0x4918
0x000048d6      488d4a01       lea rcx, [rdx + 1]
0x000048da      48894f28       mov qword [rdi + 0x28], rcx
0x000048de      408832         mov byte [rdx], sil
0x000048e1      488d7b01       lea rdi, [rbx + 1]
0x000048e5      e9aefeffff     jmp 0x4798
0x000048ea      660f1f440000   nop word [rax + rax]
0x000048f0      4883c301       add rbx, 1
0x000048f4      440fb63b       movzx r15d, byte [rbx]
0x000048f8      4584ff         test r15b, r15b
0x000048fb      0f854fffffff   jne 0x4850
0x00004901      e9d5feffff     jmp 0x47db
0x00004906      662e0f1f8400.  nop word cs:[rax + rax]
0x00004910      4889fb         mov rbx, rdi
0x00004913      eb83           jmp 0x4898
0x00004915      0f1f00         nop dword [rax]
0x00004918      400fb6f6       movzx esi, sil
0x0000491c      e8cfd1ffff     call sym.imp.__overflow
0x00004921      8b05ed962000   mov eax, dword [obj.delimiter]          ; [0x20e014:4]=128
0x00004927      ebb8           jmp 0x48e1
0x00004929      0fb6f2         movzx esi, dl
0x0000492c      e8bfd1ffff     call sym.imp.__overflow
0x00004931      e9e3feffff     jmp 0x4819
0x00004936      662e0f1f8400.  nop word cs:[rax + rax]
;-- usage:
0x00004940      4155           push r13
0x00004942      4154           push r12
0x00004944      ba05000000     mov edx, 5
0x00004949      55             push rbp
0x0000494a      53             push rbx
0x0000494b      89fd           mov ebp, edi
0x0000494d      4881ec880000.  sub rsp, 0x88
0x00004954      488b1d559820.  mov rbx, qword [obj.program_name]       ; [0x20e1b0:8]=0
0x0000495b      64488b042528.  mov rax, qword fs:[0x28]
0x00004964      4889442478     mov qword [rsp + 0x78], rax
0x00004969      31c0           xor eax, eax
0x0000496b      85ff           test edi, edi
0x0000496d      742e           je 0x499d
0x0000496f      488d359a5200.  lea rsi, str.Try___s___help__for_more_information. ; 0x9c10 ; "Try '%s --help' for more information.\n"
0x00004976      31ff           xor edi, edi
0x00004978      e803d1ffff     call sym.imp.dcgettext
0x0000497d      488b3d7c9720.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e100:8]=0
0x00004984      4889c2         mov rdx, rax
0x00004987      4889d9         mov rcx, rbx
0x0000498a      be01000000     mov esi, 1
0x0000498f      31c0           xor eax, eax
0x00004991      e84ad3ffff     call sym.imp.__fprintf_chk
0x00004996      89ef           mov edi, ebp
0x00004998      e823d3ffff     call sym.imp.exit
0x0000499d      488d35945200.  lea rsi, str.Usage:__s__OPTION_...__NUMBER_... ; 0x9c38 ; "Usage: %s [OPTION]... [NUMBER]...\n"
0x000049a4      31ff           xor edi, edi
0x000049a6      e8d5d0ffff     call sym.imp.dcgettext
0x000049ab      4889da         mov rdx, rbx
0x000049ae      4889c6         mov rsi, rax
0x000049b1      bf01000000     mov edi, 1
0x000049b6      31c0           xor eax, eax
0x000049b8      e893d2ffff     call sym.imp.__printf_chk
0x000049bd      488b1d049720.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0c8:8]=0
0x000049c4      488d35955200.  lea rsi, str.Reformat_NUMBER_s___or_the_numbers_from_standard_input_if_none_are_specified. ; 0x9c60 ; "Reformat NUMBER(s), or the numbers from standard input if none are specified.\n"
0x000049cb      ba05000000     mov edx, 5
0x000049d0      31ff           xor edi, edi
0x000049d2      e8a9d0ffff     call sym.imp.dcgettext
0x000049d7      4889de         mov rsi, rbx
0x000049da      4889c7         mov rdi, rax
0x000049dd      e89ed1ffff     call sym.imp.fputs_unlocked
0x000049e2      488b1ddf9620.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0c8:8]=0
0x000049e9      488d35c05200.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0x9cb0 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x000049f0      ba05000000     mov edx, 5
0x000049f5      31ff           xor edi, edi
0x000049f7      e884d0ffff     call sym.imp.dcgettext
0x000049fc      4889de         mov rsi, rbx
0x000049ff      4889c7         mov rdi, rax
0x00004a02      e879d1ffff     call sym.imp.fputs_unlocked
0x00004a07      488b1dba9620.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0c8:8]=0
0x00004a0e      488d35eb5200.  lea rsi, str.debug__________print_warnings_about_invalid_input ; 0x9d00 ; "      --debug          print warnings about invalid input\n"
0x00004a15      ba05000000     mov edx, 5
0x00004a1a      31ff           xor edi, edi
0x00004a1c      e85fd0ffff     call sym.imp.dcgettext
0x00004a21      4889de         mov rsi, rbx
0x00004a24      4889c7         mov rdi, rax
0x00004a27      e854d1ffff     call sym.imp.fputs_unlocked
0x00004a2c      488b1d959620.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0c8:8]=0
0x00004a33      488d35065300.  lea rsi, str.d____delimiter_X____use_X_instead_of_whitespace_for_field_delimiter ; 0x9d40 ; "  -d, --delimiter=X    use X instead of whitespace for field delimiter\n"
0x00004a3a      ba05000000     mov edx, 5
0x00004a3f      31ff           xor edi, edi
0x00004a41      e83ad0ffff     call sym.imp.dcgettext
0x00004a46      4889de         mov rsi, rbx
0x00004a49      4889c7         mov rdi, rax
0x00004a4c      e82fd1ffff     call sym.imp.fputs_unlocked
0x00004a51      488b1d709620.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0c8:8]=0
0x00004a58      488d35295300.  lea rsi, str.field_FIELDS___replace_the_numbers_in_these_input_fields__default_1____________________________see_FIELDS_below ; 0x9d88 ; "      --field=FIELDS   replace the numbers in these input fields (default=1)\n                         see FIELDS below\n"
0x00004a5f      ba05000000     mov edx, 5
0x00004a64      31ff           xor edi, edi
0x00004a66      e815d0ffff     call sym.imp.dcgettext
0x00004a6b      4889de         mov rsi, rbx
0x00004a6e      4889c7         mov rdi, rax
0x00004a71      e80ad1ffff     call sym.imp.fputs_unlocked
0x00004a76      488b1d4b9620.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0c8:8]=0
0x00004a7d      488d357c5300.  lea rsi, str.format_FORMAT__use_printf_style_floating_point_FORMAT____________________________see_FORMAT_below_for_details ; 0x9e00 ; "      --format=FORMAT  use printf style floating-point FORMAT;\n                         see FORMAT below for details\n"
0x00004a84      ba05000000     mov edx, 5
0x00004a89      31ff           xor edi, edi
0x00004a8b      e8f0cfffff     call sym.imp.dcgettext
0x00004a90      4889de         mov rsi, rbx
0x00004a93      4889c7         mov rdi, rax
0x00004a96      e8e5d0ffff     call sym.imp.fputs_unlocked
0x00004a9b      488b1d269620.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0c8:8]=0
0x00004aa2      488d35cf5300.  lea rsi, str.from_UNIT______auto_scale_input_numbers_to_UNITs__default_is__none_____________________________see_UNIT_below ; 0x9e78 ; "      --from=UNIT      auto-scale input numbers to UNITs; default is 'none';\n                         see UNIT below\n"
0x00004aa9      ba05000000     mov edx, 5
0x00004aae      31ff           xor edi, edi
0x00004ab0      e8cbcfffff     call sym.imp.dcgettext
0x00004ab5      4889de         mov rsi, rbx
0x00004ab8      4889c7         mov rdi, rax
0x00004abb      e8c0d0ffff     call sym.imp.fputs_unlocked
0x00004ac0      488b1d019620.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0c8:8]=0
0x00004ac7      488d35225400.  lea rsi, str.from_unit_N____specify_the_input_unit_size__instead_of_the_default_1 ; 0x9ef0 ; "      --from-unit=N    specify the input unit size (instead of the default 1)\n"
0x00004ace      ba05000000     mov edx, 5
0x00004ad3      31ff           xor edi, edi
0x00004ad5      e8a6cfffff     call sym.imp.dcgettext
0x00004ada      4889de         mov rsi, rbx
0x00004add      4889c7         mov rdi, rax
0x00004ae0      e89bd0ffff     call sym.imp.fputs_unlocked
0x00004ae5      488b1ddc9520.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0c8:8]=0
0x00004aec      488d354d5400.  lea rsi, str.grouping_______use_locale_defined_grouping_of_digits__e.g._1_000_000____________________________which_means_it_has_no_effect_in_the_C_POSIX_locale ; 0x9f40 ; "      --grouping       use locale-defined grouping of digits, e.g. 1,000,000\n                         (which means it has no effect in the C/POSIX locale)\n"
0x00004af3      ba05000000     mov edx, 5
0x00004af8      31ff           xor edi, edi
0x00004afa      e881cfffff     call sym.imp.dcgettext
0x00004aff      4889de         mov rsi, rbx
0x00004b02      4889c7         mov rdi, rax
0x00004b05      e876d0ffff     call sym.imp.fputs_unlocked
0x00004b0a      488b1db79520.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0c8:8]=0
0x00004b11      488d35c85400.  lea rsi, str.header__N______print__without_converting__the_first_N_header_lines____________________________N_defaults_to_1_if_not_specified ; 0x9fe0 ; "      --header[=N]     print (without converting) the first N header lines;\n                         N defaults to 1 if not specified\n"
0x00004b18      ba05000000     mov edx, 5
0x00004b1d      31ff           xor edi, edi
0x00004b1f      e85ccfffff     call sym.imp.dcgettext
0x00004b24      4889de         mov rsi, rbx
0x00004b27      4889c7         mov rdi, rax
0x00004b2a      e851d0ffff     call sym.imp.fputs_unlocked
0x00004b2f      488b1d929520.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0c8:8]=0
0x00004b36      488d352b5500.  lea rsi, str.invalid_MODE___failure_mode_for_invalid_numbers:_MODE_can_be:___________________________abort__default___fail__warn__ignore ; 0xa068 ; "      --invalid=MODE   failure mode for invalid numbers: MODE can be:\n                         abort (default), fail, warn, ignore\n"
0x00004b3d      ba05000000     mov edx, 5
0x00004b42      31ff           xor edi, edi
0x00004b44      e837cfffff     call sym.imp.dcgettext
0x00004b49      4889de         mov rsi, rbx
0x00004b4c      4889c7         mov rdi, rax
0x00004b4f      e82cd0ffff     call sym.imp.fputs_unlocked
0x00004b54      488b1d6d9520.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0c8:8]=0
0x00004b5b      488d358e5500.  lea rsi, str.padding_N______pad_the_output_to_N_characters__positive_N_will___________________________right_align__negative_N_will_left_align____________________________padding_is_ignored_if_the_output_is_wider_than_N____________________________the_default_is_to_automatically_pad_if_a_whitespace___________________________is_found ; 0xa0f0 ; "      --padding=N      pad the output to N characters; positive N will\n                         right-align; negative N will left-align;\n                         padding is ignored if the output is wider than N;\n                         the default is to automatically pad if a whitespace\n                         is found\n"
0x00004b62      ba05000000     mov edx, 5
0x00004b67      31ff           xor edi, edi
0x00004b69      e812cfffff     call sym.imp.dcgettext
0x00004b6e      4889de         mov rsi, rbx
0x00004b71      4889c7         mov rdi, rax
0x00004b74      e807d0ffff     call sym.imp.fputs_unlocked
0x00004b79      488b1d489520.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0c8:8]=0
0x00004b80      488d35b15600.  lea rsi, str.round_METHOD___use_METHOD_for_rounding_when_scaling__METHOD_can_be:___________________________up__down__from_zero__default___towards_zero__nearest ; 0xa238 ; "      --round=METHOD   use METHOD for rounding when scaling; METHOD can be:\n                         up, down, from-zero (default), towards-zero, nearest\n"
0x00004b87      ba05000000     mov edx, 5
0x00004b8c      31ff           xor edi, edi
0x00004b8e      e8edceffff     call sym.imp.dcgettext
0x00004b93      4889de         mov rsi, rbx
0x00004b96      4889c7         mov rdi, rax
0x00004b99      e8e2cfffff     call sym.imp.fputs_unlocked
0x00004b9e      488b1d239520.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0c8:8]=0
0x00004ba5      488d352c5700.  lea rsi, str.suffix_SUFFIX__add_SUFFIX_to_output_numbers__and_accept_optional___________________________SUFFIX_in_input_numbers ; 0xa2d8 ; "      --suffix=SUFFIX  add SUFFIX to output numbers, and accept optional\n                         SUFFIX in input numbers\n"
0x00004bac      ba05000000     mov edx, 5
0x00004bb1      31ff           xor edi, edi
0x00004bb3      e8c8ceffff     call sym.imp.dcgettext
0x00004bb8      4889de         mov rsi, rbx
0x00004bbb      4889c7         mov rdi, rax
0x00004bbe      e8bdcfffff     call sym.imp.fputs_unlocked
0x00004bc3      488b1dfe9420.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0c8:8]=0
0x00004bca      488d35875700.  lea rsi, str.to_UNIT________auto_scale_output_numbers_to_UNITs__see_UNIT_below ; 0xa358 ; "      --to=UNIT        auto-scale output numbers to UNITs; see UNIT below\n"
0x00004bd1      ba05000000     mov edx, 5
0x00004bd6      31ff           xor edi, edi
0x00004bd8      e8a3ceffff     call sym.imp.dcgettext
0x00004bdd      4889de         mov rsi, rbx
0x00004be0      4889c7         mov rdi, rax
0x00004be3      e898cfffff     call sym.imp.fputs_unlocked
0x00004be8      488b1dd99420.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0c8:8]=0
0x00004bef      488d35b25700.  lea rsi, str.to_unit_N______the_output_unit_size__instead_of_the_default_1 ; 0xa3a8 ; "      --to-unit=N      the output unit size (instead of the default 1)\n"
0x00004bf6      ba05000000     mov edx, 5
0x00004bfb      31ff           xor edi, edi
0x00004bfd      e87eceffff     call sym.imp.dcgettext
0x00004c02      4889de         mov rsi, rbx
0x00004c05      4889c7         mov rdi, rax
0x00004c08      e873cfffff     call sym.imp.fputs_unlocked
0x00004c0d      488b1db49420.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0c8:8]=0
0x00004c14      488d35d55700.  lea rsi, str.z____zero_terminated____line_delimiter_is_NUL__not_newline ; 0xa3f0 ; "  -z, --zero-terminated    line delimiter is NUL, not newline\n"
0x00004c1b      ba05000000     mov edx, 5
0x00004c20      31ff           xor edi, edi
0x00004c22      e859ceffff     call sym.imp.dcgettext
0x00004c27      4889de         mov rsi, rbx
0x00004c2a      4889c7         mov rdi, rax
0x00004c2d      e84ecfffff     call sym.imp.fputs_unlocked
0x00004c32      488b1d8f9420.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0c8:8]=0
0x00004c39      488d35f05700.  lea rsi, str.help_____display_this_help_and_exit ; 0xa430 ; "      --help     display this help and exit\n"
0x00004c40      ba05000000     mov edx, 5
0x00004c45      31ff           xor edi, edi
0x00004c47      e834ceffff     call sym.imp.dcgettext
0x00004c4c      4889de         mov rsi, rbx
0x00004c4f      4889c7         mov rdi, rax
0x00004c52      e829cfffff     call sym.imp.fputs_unlocked
0x00004c57      488b1d6a9420.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0c8:8]=0
0x00004c5e      488d35fb5700.  lea rsi, str.version__output_version_information_and_exit ; 0xa460 ; "      --version  output version information and exit\n"
0x00004c65      ba05000000     mov edx, 5
0x00004c6a      31ff           xor edi, edi
0x00004c6c      e80fceffff     call sym.imp.dcgettext
0x00004c71      4889de         mov rsi, rbx
0x00004c74      4889c7         mov rdi, rax
0x00004c77      e804cfffff     call sym.imp.fputs_unlocked
0x00004c7c      488b1d459420.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0c8:8]=0
0x00004c83      488d35374900.  lea rsi, str.UNIT_options:              ; 0x95c1 ; "\nUNIT options:\n"
0x00004c8a      ba05000000     mov edx, 5
0x00004c8f      31ff           xor edi, edi
0x00004c91      e8eacdffff     call sym.imp.dcgettext
0x00004c96      4889de         mov rsi, rbx
0x00004c99      4889c7         mov rdi, rax
0x00004c9c      e8dfceffff     call sym.imp.fputs_unlocked
0x00004ca1      488b1d209420.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0c8:8]=0
0x00004ca8      488d35e95700.  lea rsi, str.none_______no_auto_scaling_is_done__suffixes_will_trigger_an_error ; 0xa498 ; "  none       no auto-scaling is done; suffixes will trigger an error\n"
0x00004caf      31ff           xor edi, edi
0x00004cb1      ba05000000     mov edx, 5
0x00004cb6      e8c5cdffff     call sym.imp.dcgettext
0x00004cbb      4889de         mov rsi, rbx
0x00004cbe      4889c7         mov rdi, rax
0x00004cc1      e8baceffff     call sym.imp.fputs_unlocked
0x00004cc6      488b1dfb9320.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0c8:8]=0
0x00004ccd      488d350c5800.  lea rsi, str.auto_______accept_optional_single_two_letter_suffix:_________________1K___1000__________________1Ki___1024__________________1M___1000000__________________1Mi___1048576 ; 0xa4e0 ; "  auto       accept optional single/two letter suffix:\n               1K = 1000,\n               1Ki = 1024,\n               1M = 1000000,\n               1Mi = 1048576,\n"
0x00004cd4      ba05000000     mov edx, 5
0x00004cd9      31ff           xor edi, edi
0x00004cdb      e8a0cdffff     call sym.imp.dcgettext
0x00004ce0      4889de         mov rsi, rbx
0x00004ce3      4889c7         mov rdi, rax
0x00004ce6      e895ceffff     call sym.imp.fputs_unlocked
0x00004ceb      488b1dd69320.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0c8:8]=0
0x00004cf2      488d358f5800.  lea rsi, str.si_________accept_optional_single_letter_suffix:_________________1K___1000__________________1M___1000000__________________... ; 0xa588 ; "  si         accept optional single letter suffix:\n               1K = 1000,\n               1M = 1000000,\n               ...\n"
0x00004cf9      ba05000000     mov edx, 5
0x00004cfe      31ff           xor edi, edi
0x00004d00      e87bcdffff     call sym.imp.dcgettext
0x00004d05      4889de         mov rsi, rbx
0x00004d08      4889c7         mov rdi, rax
0x00004d0b      e870ceffff     call sym.imp.fputs_unlocked
0x00004d10      488b1db19320.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0c8:8]=0
0x00004d17      488d35ea5800.  lea rsi, str.iec________accept_optional_single_letter_suffix:_________________1K___1024__________________1M___1048576__________________... ; 0xa608 ; "  iec        accept optional single letter suffix:\n               1K = 1024,\n               1M = 1048576,\n               ...\n"
0x00004d1e      ba05000000     mov edx, 5
0x00004d23      31ff           xor edi, edi
0x00004d25      e856cdffff     call sym.imp.dcgettext
0x00004d2a      4889de         mov rsi, rbx
0x00004d2d      4889c7         mov rdi, rax
0x00004d30      e84bceffff     call sym.imp.fputs_unlocked
0x00004d35      488b1d8c9320.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0c8:8]=0
0x00004d3c      488d35455900.  lea rsi, str.iec_i______accept_optional_two_letter_suffix:_________________1Ki___1024__________________1Mi___1048576__________________... ; 0xa688 ; "  iec-i      accept optional two-letter suffix:\n               1Ki = 1024,\n               1Mi = 1048576,\n               ...\n"
0x00004d43      ba05000000     mov edx, 5
0x00004d48      31ff           xor edi, edi
0x00004d4a      e831cdffff     call sym.imp.dcgettext
0x00004d4f      4889de         mov rsi, rbx
0x00004d52      4889c7         mov rdi, rax
0x00004d55      e826ceffff     call sym.imp.fputs_unlocked
0x00004d5a      488b1d679320.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0c8:8]=0
0x00004d61      488d35a05900.  lea rsi, str.FIELDS_supports_cut_1__style_field_ranges:____N____N_th_field__counted_from_1____N____from_N_th_field__to_end_of_line____N_M__from_N_th_to_M_th_field__inclusive______M___from_first_to_M_th_field__inclusive__________all_fields__Multiple_fields_ranges_can_be_separated_with_commas ; 0xa708 ; "\nFIELDS supports cut(1) style field ranges:\n  N    N'th field, counted from 1\n  N-   from N'th field, to end of line\n  N-M  from N'th to M'th field (inclusive)\n  -M   from first to M'th field (inclusive)\n  -    all fields\nMultiple fields/ranges can be separated with commas\n"
0x00004d68      ba05000000     mov edx, 5
0x00004d6d      31ff           xor edi, edi
0x00004d6f      e80ccdffff     call sym.imp.dcgettext
0x00004d74      4889de         mov rsi, rbx
0x00004d77      4889c7         mov rdi, rax
0x00004d7a      e801ceffff     call sym.imp.fputs_unlocked
0x00004d7f      488b1d429320.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0c8:8]=0
0x00004d86      488d35935a00.  lea rsi, str.FORMAT_must_be_suitable_for_printing_one_floating_point_argument___f_.__Optional_quote____f__will_enable___grouping__if_supported_by_current_locale_.__Optional_width_value___10f__will_pad_output._Optional_zero___010f__width__will_zero_pad_the_number._Optional_negative_values____10f__will_left_align.__Optional_precision___.1f__will_override_the_input_determined_precision. ; 0xa820 ; "\nFORMAT must be suitable for printing one floating-point argument '%f'.\nOptional quote (%'f) will enable --grouping (if supported by current locale).\nOptional width value (%10f) will pad output. Optional zero (%010f) width\nwill zero pad the number. Optional negative values (%-10f) will left align.\nOptional precision (%.1f) will override the input determined precision.\n"
0x00004d8d      ba05000000     mov edx, 5
0x00004d92      31ff           xor edi, edi
0x00004d94      e8e7ccffff     call sym.imp.dcgettext
0x00004d99      4889de         mov rsi, rbx
0x00004d9c      4889c7         mov rdi, rax
0x00004d9f      e8dccdffff     call sym.imp.fputs_unlocked
0x00004da4      488b1d059420.  mov rbx, qword [obj.program_name]       ; [0x20e1b0:8]=0
0x00004dab      488d35e65b00.  lea rsi, str.Exit_status_is_0_if_all_input_numbers_were_successfully_converted.__By_default___s_will_stop_at_the_first_conversion_error_with_exit_status_2.__With___invalid__fail__a_warning_is_printed_for_each_conversion_error__and_the_exit_status_is_2.__With___invalid__warn__each_conversion_error_is__diagnosed__but_the_exit_status_is_0.__With___invalid__ignore__conversion__errors_are_not_diagnosed_and_the_exit_status_is_0. ; 0xa998 ; "\nExit status is 0 if all input numbers were successfully converted.\nBy default, %s will stop at the first conversion error with exit status 2.\nWith --invalid='fail' a warning is printed for each conversion error\nand the exit status is 2.  With --invalid='warn' each conversion error is\ndiagnosed, but the exit status is 0.  With --invalid='ignore' conversion\nerrors are not diagnosed and the exit status is 0.\n"
0x00004db2      ba05000000     mov edx, 5
0x00004db7      31ff           xor edi, edi
0x00004db9      e8c2ccffff     call sym.imp.dcgettext
0x00004dbe      4889da         mov rdx, rbx
0x00004dc1      4889c6         mov rsi, rax
0x00004dc4      bf01000000     mov edi, 1
0x00004dc9      31c0           xor eax, eax
0x00004dcb      e880ceffff     call sym.imp.__printf_chk
0x00004dd0      488b1dd99320.  mov rbx, qword [obj.program_name]       ; [0x20e1b0:8]=0
0x00004dd7      488d355a5d00.  lea rsi, str.Examples:_______s___to_si_1000__________________1.0K________s___to_iec_2048_________________2.0K________s___to_iec_i_4096_________________4.0Ki_______echo_1K____s___from_si_________________1000_______echo_1K____s___from_iec_________________1024_______df__B1____s___header___field_2_4___to_si______ls__l_____s___header___field_5___to_iec______ls__lh____s___header___field_5___from_iec___padding_10______ls__lh____s___header___field_5___from_iec___format___10f ; 0xab38 ; "\nExamples:\n  $ %s --to=si 1000\n            -> \"1.0K\"\n  $ %s --to=iec 2048\n           -> \"2.0K\"\n  $ %s --to=iec-i 4096\n           -> \"4.0Ki\"\n  $ echo 1K | %s --from=si\n           -> \"1000\"\n  $ echo 1K | %s --from=iec\n           -> \"1024\"\n  $ df -B1 | %s --header --field 2-4 --to=si\n  $ ls -l  | %s --header --field 5 --to=iec\n  $ ls -lh | %s --header --field 5 --from=iec --padding=10\n  $ ls -lh | %s --header --field 5 --from=iec --format %%10f\n"
0x00004dde      ba05000000     mov edx, 5
0x00004de3      31ff           xor edi, edi
0x00004de5      e896ccffff     call sym.imp.dcgettext
0x00004dea      4883ec08       sub rsp, 8
0x00004dee      4889d9         mov rcx, rbx
0x00004df1      4889da         mov rdx, rbx
0x00004df4      53             push rbx
0x00004df5      53             push rbx
0x00004df6      4989d9         mov r9, rbx
0x00004df9      53             push rbx
0x00004dfa      53             push rbx
0x00004dfb      4989d8         mov r8, rbx
0x00004dfe      53             push rbx
0x00004dff      4889c6         mov rsi, rax
0x00004e02      bf01000000     mov edi, 1
0x00004e07      31c0           xor eax, eax
0x00004e09      488d1daa4700.  lea rbx, str.numfmt                     ; 0x95ba ; "numfmt"
0x00004e10      e83bceffff     call sym.imp.__printf_chk
0x00004e15      488d05b54700.  lea rax, [0x000095d1]                   ; "["
0x00004e1c      488d0def4700.  lea rcx, str.sha256sum                  ; 0x9612 ; "sha256sum"
0x00004e23      48c784249000.  mov qword [rsp + 0x90], 0
0x00004e2f      48c784249800.  mov qword [rsp + 0x98], 0
0x00004e3b      4889442430     mov qword [rsp + 0x30], rax
0x00004e40      488d058c4700.  lea rax, str.test_invocation            ; 0x95d3 ; "test invocation"
0x00004e47      48894c2460     mov qword [rsp + 0x60], rcx
0x00004e4c      488d0dc94700.  lea rcx, str.sha384sum                  ; 0x961c ; "sha384sum"
0x00004e53      4889442438     mov qword [rsp + 0x38], rax
0x00004e58      488d05ec4700.  lea rax, [0x0000964b]                   ; "coreutils"
0x00004e5f      48894c2470     mov qword [rsp + 0x70], rcx
0x00004e64      488d0dbb4700.  lea rcx, str.sha512sum                  ; 0x9626 ; "sha512sum"
0x00004e6b      4889442440     mov qword [rsp + 0x40], rax
0x00004e70      488d056c4700.  lea rax, str.Multi_call_invocation      ; 0x95e3 ; "Multi-call invocation"
0x00004e77      48898c248000.  mov qword [rsp + 0x80], rcx
0x00004e7f      4889442448     mov qword [rsp + 0x48], rax
0x00004e84      488d056e4700.  lea rax, str.sha224sum                  ; 0x95f9 ; "sha224sum"
0x00004e8b      4889442450     mov qword [rsp + 0x50], rax
0x00004e90      488d056c4700.  lea rax, str.sha2_utilities             ; 0x9603 ; "sha2 utilities"
0x00004e97      4889442458     mov qword [rsp + 0x58], rax
0x00004e9c      4889442468     mov qword [rsp + 0x68], rax
0x00004ea1      4889442478     mov qword [rsp + 0x78], rax
0x00004ea6      488984248800.  mov qword [rsp + 0x88], rax
0x00004eae      4883c430       add rsp, 0x30
0x00004eb2      4889e2         mov rdx, rsp
0x00004eb5      0f1f00         nop dword [rax]
0x00004eb8      4883c210       add rdx, 0x10
0x00004ebc      488b3a         mov rdi, qword [rdx]
0x00004ebf      4885ff         test rdi, rdi
0x00004ec2      7413           je 0x4ed7
0x00004ec4      b907000000     mov ecx, 7
0x00004ec9      4889de         mov rsi, rbx
0x00004ecc      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00004ece      0f97c0         seta al
0x00004ed1      1c00           sbb al, 0
0x00004ed3      84c0           test al, al
0x00004ed5      75e1           jne 0x4eb8
0x00004ed7      4c8b6208       mov r12, qword [rdx + 8]
0x00004edb      31ff           xor edi, edi
0x00004edd      ba05000000     mov edx, 5
0x00004ee2      488d35474700.  lea rsi, str.s_online_help:___s         ; 0x9630 ; "\n%s online help: <%s>\n"
0x00004ee9      4d85e4         test r12, r12
0x00004eec      0f84c1000000   je 0x4fb3
0x00004ef2      e889cbffff     call sym.imp.dcgettext
0x00004ef7      488d0dfa5d00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0xacf8 ; "https://www.gnu.org/software/coreutils/"
0x00004efe      488d15424700.  lea rdx, str.GNU_coreutils              ; 0x9647 ; "GNU coreutils"
0x00004f05      4889c6         mov rsi, rax
0x00004f08      bf01000000     mov edi, 1
0x00004f0d      31c0           xor eax, eax
0x00004f0f      e83ccdffff     call sym.imp.__printf_chk
0x00004f14      31f6           xor esi, esi
0x00004f16      bf05000000     mov edi, 5
0x00004f1b      e820cdffff     call sym.imp.setlocale
0x00004f20      4885c0         test rax, rax
0x00004f23      741c           je 0x4f41
0x00004f25      488d35294700.  lea rsi, [0x00009655]                   ; "en_"
0x00004f2c      ba03000000     mov edx, 3
0x00004f31      4889c7         mov rdi, rax
0x00004f34      e8a7caffff     call sym.imp.strncmp
0x00004f39      85c0           test eax, eax
0x00004f3b      0f8507010000   jne 0x5048
0x00004f41      488d35114700.  lea rsi, str.Full_documentation___s_s   ; 0x9659 ; "Full documentation <%s%s>\n"
0x00004f48      31ff           xor edi, edi
0x00004f4a      ba05000000     mov edx, 5
0x00004f4f      e82ccbffff     call sym.imp.dcgettext
0x00004f54      488d0d5f4600.  lea rcx, str.numfmt                     ; 0x95ba ; "numfmt"
0x00004f5b      488d15965d00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0xacf8 ; "https://www.gnu.org/software/coreutils/"
0x00004f62      4889c6         mov rsi, rax
0x00004f65      bf01000000     mov edi, 1
0x00004f6a      31c0           xor eax, eax
0x00004f6c      e8dfccffff     call sym.imp.__printf_chk
0x00004f71      4939dc         cmp r12, rbx
0x00004f74      488d0d724600.  lea rcx, [0x000095ed]                   ; " invocation"
0x00004f7b      488d1df44500.  lea rbx, [0x00009576]
0x00004f82      480f44d9       cmove rbx, rcx
0x00004f86      488d35db5d00.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0xad68 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00004f8d      31ff           xor edi, edi
0x00004f8f      ba05000000     mov edx, 5
0x00004f94      e8e7caffff     call sym.imp.dcgettext
0x00004f99      4889d9         mov rcx, rbx
0x00004f9c      4889c6         mov rsi, rax
0x00004f9f      4c89e2         mov rdx, r12
0x00004fa2      bf01000000     mov edi, 1
0x00004fa7      31c0           xor eax, eax
0x00004fa9      e8a2ccffff     call sym.imp.__printf_chk
0x00004fae      e9e3f9ffff     jmp 0x4996
0x00004fb3      e8c8caffff     call sym.imp.dcgettext
0x00004fb8      488d0d395d00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0xacf8 ; "https://www.gnu.org/software/coreutils/"
0x00004fbf      488d15814600.  lea rdx, str.GNU_coreutils              ; 0x9647 ; "GNU coreutils"
0x00004fc6      4889c6         mov rsi, rax
0x00004fc9      bf01000000     mov edi, 1
0x00004fce      31c0           xor eax, eax
0x00004fd0      e87bccffff     call sym.imp.__printf_chk
0x00004fd5      31f6           xor esi, esi
0x00004fd7      bf05000000     mov edi, 5
0x00004fdc      e85fccffff     call sym.imp.setlocale
0x00004fe1      4885c0         test rax, rax
0x00004fe4      7418           je 0x4ffe
0x00004fe6      488d35684600.  lea rsi, [0x00009655]                   ; "en_"
0x00004fed      ba03000000     mov edx, 3
0x00004ff2      4889c7         mov rdi, rax
0x00004ff5      e8e6c9ffff     call sym.imp.strncmp
0x00004ffa      85c0           test eax, eax
0x00004ffc      7543           jne 0x5041
0x00004ffe      488d35544600.  lea rsi, str.Full_documentation___s_s   ; 0x9659 ; "Full documentation <%s%s>\n"
0x00005005      ba05000000     mov edx, 5
0x0000500a      31ff           xor edi, edi
0x0000500c      4c8d25a74500.  lea r12, str.numfmt                     ; 0x95ba ; "numfmt"
0x00005013      488d1dd34500.  lea rbx, [0x000095ed]                   ; " invocation"
0x0000501a      e861caffff     call sym.imp.dcgettext
0x0000501f      488d0d944500.  lea rcx, str.numfmt                     ; 0x95ba ; "numfmt"
0x00005026      488d15cb5c00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0xacf8 ; "https://www.gnu.org/software/coreutils/"
0x0000502d      4889c6         mov rsi, rax
0x00005030      bf01000000     mov edi, 1
0x00005035      31c0           xor eax, eax
0x00005037      e814ccffff     call sym.imp.__printf_chk
0x0000503c      e945ffffff     jmp 0x4f86
0x00005041      4c8d25724500.  lea r12, str.numfmt                     ; 0x95ba ; "numfmt"
0x00005048      4c8b2d799020.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0c8:8]=0
0x0000504f      488d35ca5c00.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0xad20 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x00005056      31ff           xor edi, edi
0x00005058      ba05000000     mov edx, 5
0x0000505d      e81ecaffff     call sym.imp.dcgettext
0x00005062      4c89ee         mov rsi, r13
0x00005065      4889c7         mov rdi, rax
0x00005068      e813cbffff     call sym.imp.fputs_unlocked
0x0000506d      e9cffeffff     jmp 0x4f41
0x00005072      662e0f1f8400.  nop word cs:[rax + rax]
0x0000507c      0f1f4000       nop dword [rax]
;-- compare_ranges:
0x00005080      8b06           mov eax, dword [rsi]                    ; .//src:62
0x00005082      3907           cmp dword [rdi], eax
0x00005084      7c0a           jl 0x5090
0x00005086      0f9fc0         setg al                                 ; .//src:65
0x00005089      0fb6c0         movzx eax, al
0x0000508c      c3             ret
0x0000508d      0f1f00         nop dword [rax]
0x00005090      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00005095      c3             ret                                     ; .//src:66
0x00005096      662e0f1f8400.  nop word cs:[rax + rax]
;-- add_range_pair:
0x000050a0      55             push rbp                                ; .//src:49
0x000050a1      53             push rbx
0x000050a2      4889f3         mov rbx, rsi
0x000050a5      4889fd         mov rbp, rdi
0x000050a8      4883ec08       sub rsp, 8
0x000050ac      488b354d9220.  mov rsi, qword [obj.n_frp]              ; .//src:50 ; [0x20e300:8]=0
0x000050b3      483b35de9020.  cmp rsi, qword [obj.n_frp_allocated]    ; [0x20e198:8]=0
0x000050ba      488b3d379220.  mov rdi, qword [obj.frp]                ; [0x20e2f8:8]=0
0x000050c1      742d           je 0x50f0
0x000050c3      4889f0         mov rax, rsi                            ; .//src:52
0x000050c6      4883c601       add rsi, 1                              ; .//src:54
0x000050ca      48c1e004       shl rax, 4                              ; .//src:52
0x000050ce      4801c7         add rdi, rax
0x000050d1      48892f         mov qword [rdi], rbp
0x000050d4      48895f08       mov qword [rdi + 8], rbx                ; .//src:53
0x000050d8      488935219220.  mov qword [obj.n_frp], rsi              ; .//src:54 ; [0x20e300:8]=0
0x000050df      4883c408       add rsp, 8                              ; .//src:55
0x000050e3      5b             pop rbx
0x000050e4      5d             pop rbp                                 ; ../coreutils-8.31/src/t-fields.c:72
0x000050e5      c3             ret
0x000050e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000050f0      4885ff         test rdi, rdi
0x000050f3      7443           je 0x5138                               ; ../coreutils-8.31/src/t-fields.c:75
0x000050f5      48b854555555.  movabs rax, 0x555555555555554
0x000050ff      4839c6         cmp rsi, rax
0x00005102      7759           ja 0x515d
0x00005104      4889f0         mov rax, rsi
0x00005107      48d1e8         shr rax, 1
0x0000510a      488d740601     lea rsi, [rsi + rax + 1]
0x0000510f      488935829020.  mov qword [obj.n_frp_allocated], rsi    ; [0x20e198:8]=0
0x00005116      48c1e604       shl rsi, 4
0x0000511a      e8d1320000     call sym.xrealloc
0x0000511f      488b35da9120.  mov rsi, qword [obj.n_frp]              ; [0x20e300:8]=0
0x00005126      4889c7         mov rdi, rax
0x00005129      488905c89120.  mov qword [obj.frp], rax                ; [0x20e2f8:8]=0
0x00005130      eb91           jmp 0x50c3
0x00005132      660f1f440000   nop word [rax + rax]
0x00005138      4885f6         test rsi, rsi                           ; ../coreutils-8.31/src/t-fields.c:63
0x0000513b      b808000000     mov eax, 8
0x00005140      ba10000000     mov edx, 0x10
0x00005145      480f44f0       cmove rsi, rax
0x00005149      4889d0         mov rax, rdx
0x0000514c      31c9           xor ecx, ecx                            ; ../coreutils-8.31/src/t-fields.c:64
0x0000514e      48f7e6         mul rsi
0x00005151      700f           jo 0x5162                               ; ../coreutils-8.31/src/t-fields.c:63
0x00005153      4885c0         test rax, rax
0x00005156      7805           js 0x515d
0x00005158      4885c9         test rcx, rcx
0x0000515b      74b2           je 0x510f
0x0000515d      e87e340000     call sym.xalloc_die
0x00005162      b901000000     mov ecx, 1
0x00005167      ebea           jmp 0x5153
0x00005169      0f1f80000000.  nop dword [rax]
;-- set_fields:
0x00005170      4157           push r15
0x00005172      4156           push r14                                ; .//src:23
0x00005174      89f0           mov eax, esi
0x00005176      4155           push r13
0x00005178      4154           push r12
0x0000517a      4989fe         mov r14, rdi
0x0000517d      55             push rbp
0x0000517e      53             push rbx
0x0000517f      4883ec28       sub rsp, 0x28
0x00005183      83e001         and eax, 1
0x00005186      8974241c       mov dword [rsp + 0x1c], esi
0x0000518a      89442418       mov dword [rsp + 0x18], eax
0x0000518e      741e           je 0x51ae
0x00005190      488d3dc36200.  lea rdi, [0x0000b45a]                   ; "-"
0x00005197      b902000000     mov ecx, 2
0x0000519c      4c89f6         mov rsi, r14
0x0000519f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000051a1      0f97c0         seta al
0x000051a4      1c00           sbb al, 0
0x000051a6      84c0           test al, al
0x000051a8      0f84fb020000   je 0x54a9
0x000051ae      4531ff         xor r15d, r15d
0x000051b1      31db           xor ebx, ebx
0x000051b3      89dd           mov ebp, ebx
0x000051b5      4531ed         xor r13d, r13d
0x000051b8      4531e4         xor r12d, r12d
0x000051bb      48c744241001.  mov qword [rsp + 0x10], 1
0x000051c4      e985000000     jmp 0x524e
0x000051c9      0f1f80000000.  nop dword [rax]
0x000051d0      4180f82c       cmp r8b, 0x2c
0x000051d4      4488442408     mov byte [rsp + 8], r8b
0x000051d9      741c           je 0x51f7
0x000051db      e850cbffff     call sym.imp.__ctype_b_loc
0x000051e0      0fb6542408     movzx edx, byte [rsp + 8]
0x000051e5      4c8b10         mov r10, qword [rax]
0x000051e8      41f6045201     test byte [r10 + rdx*2], 1
0x000051ed      7508           jne 0x51f7
0x000051ef      84d2           test dl, dl                             ; .//src:62
0x000051f1      0f8539020000   jne 0x5430
0x000051f7      4084ed         test bpl, bpl
0x000051fa      0f84a0000000   je 0x52a0
0x00005200      84db           test bl, bl                             ; .//src:65
0x00005202      0f85e8010000   jne 0x53f0
0x00005208      4584e4         test r12b, r12b
0x0000520b      0f85ef010000   jne 0x5400
0x00005211      8b442418       mov eax, dword [rsp + 0x18]
0x00005215      85c0           test eax, eax                           ; .//src:76
0x00005217      0f845c040000   je 0x5679
0x0000521d      48c744241001.  mov qword [rsp + 0x10], 1
0x00005226      488b7c2410     mov rdi, qword [rsp + 0x10]             ; .//src:100
0x0000522b      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00005232      e869feffff     call sym.add_range_pair
0x00005237      41803e00       cmp byte [r14], 0                       ; .//src:104
0x0000523b      747d           je 0x52ba
0x0000523d      4531ff         xor r15d, r15d                          ; .//src:33
0x00005240      4531ed         xor r13d, r13d
0x00005243      31ed           xor ebp, ebp
0x00005245      4531e4         xor r12d, r12d
0x00005248      31db           xor ebx, ebx
0x0000524a      4983c601       add r14, 1
0x0000524e      450fb606       movzx r8d, byte [r14]
0x00005252      4180f82d       cmp r8b, 0x2d
0x00005256      0f8574ffffff   jne 0x51d0
0x0000525c      4084ed         test bpl, bpl
0x0000525f      0f8588030000   jne 0x55ed
0x00005265      4d85ff         test r15, r15
0x00005268      410f94c1       sete r9b
0x0000526c      4120d9         and r9b, bl
0x0000526f      4589cd         mov r13d, r9d                           ; .//src:35
0x00005272      0f851e030000   jne 0x5596                              ; .//src:51
0x00005278      84db           test bl, bl
0x0000527a      0f85a0010000   jne 0x5420                              ; .//src:50
0x00005280      4189dd         mov r13d, ebx
0x00005283      4531ff         xor r15d, r15d
0x00005286      bd01000000     mov ebp, 1
0x0000528b      48c744241001.  mov qword [rsp + 0x10], 1
0x00005294      ebb4           jmp 0x524a
0x00005296      662e0f1f8400.  nop word cs:[rax + rax]
0x000052a0      4d85ff         test r15, r15
0x000052a3      0f84ed020000   je 0x5596                               ; .//src:100
0x000052a9      4c89fe         mov rsi, r15                            ; .//src:150
0x000052ac      4c89ff         mov rdi, r15
0x000052af      e8ecfdffff     call sym.add_range_pair
0x000052b4      41803e00       cmp byte [r14], 0
0x000052b8      7583           jne 0x523d
0x000052ba      488b353f9020.  mov rsi, qword [obj.n_frp]              ; [0x20e300:8]=0
0x000052c1      4885f6         test rsi, rsi
0x000052c4      0f84e3030000   je 0x56ad
0x000052ca      488b3d279020.  mov rdi, qword [obj.frp]                ; [0x20e2f8:8]=0
0x000052d1      488d0da8fdff.  lea rcx, sym.compare_ranges             ; .//src:155 ; 0x5080
0x000052d8      ba10000000     mov edx, 0x10
0x000052dd      4531ff         xor r15d, r15d
0x000052e0      31ed           xor ebp, ebp
0x000052e2      e839c7ffff     call sym.imp.qsort
0x000052e7      488b1d129020.  mov rbx, qword [obj.n_frp]              ; [0x20e300:8]=0
0x000052ee      488b0d039020.  mov rcx, qword [obj.frp]                ; [0x20e2f8:8]=0
0x000052f5      4939df         cmp r15, rbx
0x000052f8      0f838f000000   jae 0x538d                              ; .//src:162
0x000052fe      6690           nop
0x00005300      4983c701       add r15, 1
0x00005304      4939df         cmp r15, rbx
0x00005307      7377           jae 0x5380
0x00005309      4d89fd         mov r13, r15
0x0000530c      488d1429       lea rdx, [rcx + rbp]
0x00005310      49c1e504       shl r13, 4
0x00005314      4a8d3c29       lea rdi, [rcx + r13]
0x00005318      488b4208       mov rax, qword [rdx + 8]
0x0000531c      483b07         cmp rax, qword [rdi]
0x0000531f      725f           jb 0x5380
0x00005321      4c8d7520       lea r14, [rbp + 0x20]
0x00005325      eb1a           jmp 0x5341
0x00005327      660f1f840000.  nop word [rax + rax]
0x00005330      4a8d3c29       lea rdi, [rcx + r13]                    ; .//src:164
0x00005334      488d1429       lea rdx, [rcx + rbp]                    ; .//src:165
0x00005338      488b4208       mov rax, qword [rdx + 8]                ; .//src:164
0x0000533c      483907         cmp qword [rdi], rax
0x0000533f      773f           ja 0x5380
0x00005341      48394708       cmp qword [rdi + 8], rax
0x00005345      4a8d3431       lea rsi, [rcx + r14]
0x00005349      480f434708     cmovae rax, qword [rdi + 8]
0x0000534e      4c29fb         sub rbx, r15
0x00005351      48c1e304       shl rbx, 4                              ; .//src:166
0x00005355      48894208       mov qword [rdx + 8], rax
0x00005359      488d53f0       lea rdx, [rbx - 0x10]
0x0000535d      e80ec9ffff     call sym.imp.memmove
0x00005362      488b05978f20.  mov rax, qword [obj.n_frp]              ; [0x20e300:8]=0
0x00005369      488b0d888f20.  mov rcx, qword [obj.frp]                ; [0x20e2f8:8]=0
0x00005370      488d58ff       lea rbx, [rax - 1]
0x00005374      4c39fb         cmp rbx, r15
0x00005377      48891d828f20.  mov qword [obj.n_frp], rbx              ; [0x20e300:8]=0
0x0000537e      77b0           ja 0x5330
0x00005380      4883c510       add rbp, 0x10
0x00005384      4939df         cmp r15, rbx
0x00005387      0f8273ffffff   jb 0x5300                               ; .//src:180
0x0000538d      f644241c02     test byte [rsp + 0x1c], 2
0x00005392      0f8525010000   jne 0x54bd
0x00005398      4883c301       add rbx, 1                              ; .//src:181
0x0000539c      4889cf         mov rdi, rcx
0x0000539f      4889de         mov rsi, rbx
0x000053a2      48891d578f20.  mov qword [obj.n_frp], rbx              ; [0x20e300:8]=0
0x000053a9      48c1e604       shl rsi, 4
0x000053ad      e83e300000     call sym.xrealloc
0x000053b2      488b15478f20.  mov rdx, qword [obj.n_frp]              ; [0x20e300:8]=0
0x000053b9      488905388f20.  mov qword [obj.frp], rax                ; [0x20e2f8:8]=0
0x000053c0      48c1e204       shl rdx, 4
0x000053c4      488d4410f0     lea rax, [rax + rdx - 0x10]
0x000053c9      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000053d0      48895008       mov qword [rax + 8], rdx
0x000053d4      488910         mov qword [rax], rdx
0x000053d7      4883c428       add rsp, 0x28
0x000053db      5b             pop rbx
0x000053dc      5d             pop rbp
0x000053dd      415c           pop r12
0x000053df      415d           pop r13                                 ; .//src:73
0x000053e1      415e           pop r14
0x000053e3      415f           pop r15
0x000053e5      c3             ret
0x000053e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000053f0      4584e4         test r12b, r12b
0x000053f3      0f842dfeffff   je 0x5226
0x000053f9      0f1f80000000.  nop dword [rax]
0x00005400      4c397c2410     cmp qword [rsp + 0x10], r15
0x00005405      0f87cd010000   ja 0x55d8
0x0000540b      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00005410      4c89fe         mov rsi, r15
0x00005413      e888fcffff     call sym.add_range_pair
0x00005418      e91afeffff     jmp 0x5237
0x0000541d      0f1f00         nop dword [rax]
0x00005420      4c897c2410     mov qword [rsp + 0x10], r15
0x00005425      89dd           mov ebp, ebx
0x00005427      4531ff         xor r15d, r15d
0x0000542a      e91bfeffff     jmp 0x524a
0x0000542f      90             nop
0x00005430      0fbec2         movsx eax, dl
0x00005433      8d50d0         lea edx, [rax - 0x30]                   ; .//src:112
0x00005436      83fa09         cmp edx, 9
0x00005439      0f878d020000   ja 0x56cc
0x0000543f      4584ed         test r13b, r13b
0x00005442      745c           je 0x54a0
0x00005444      48833d448d20.  cmp qword [obj.num_start.6877], 0       ; [0x20e190:8]=0
0x0000544c      7452           je 0x54a0
0x0000544e      4084ed         test bpl, bpl
0x00005451      ba01000000     mov edx, 1
0x00005456      48b999999999.  movabs rcx, 0x1999999999999999          ; .//src:122
0x00005460      440f45e5       cmovne r12d, ebp
0x00005464      0f44da         cmove ebx, edx
0x00005467      4939cf         cmp r15, rcx
0x0000546a      0f879d010000   ja 0x560d
0x00005470      83e830         sub eax, 0x30
0x00005473      4b8d14bf       lea rdx, [r15 + r15*4]
0x00005477      4898           cdqe
0x00005479      488d0450       lea rax, [rax + rdx*2]
0x0000547d      4c39f8         cmp rax, r15
0x00005480      0f8287010000   jb 0x560d
0x00005486      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000548a      0f847d010000   je 0x560d
0x00005490      4989c7         mov r15, rax
0x00005493      41bd01000000   mov r13d, 1
0x00005499      e9acfdffff     jmp 0x524a
0x0000549e      6690           nop
0x000054a0      4c8935e98c20.  mov qword [obj.num_start.6877], r14     ; [0x20e190:8]=0
0x000054a7      eba5           jmp 0x544e
0x000054a9      4983c601       add r14, 1
0x000054ad      41bf01000000   mov r15d, 1
0x000054b3      bb01000000     mov ebx, 1
0x000054b8      e9f6fcffff     jmp 0x51b3
0x000054bd      488b01         mov rax, qword [rcx]
0x000054c0      48c7052d8e20.  mov qword [obj.frp], 0                  ; [0x20e2f8:8]=0
0x000054cb      48c7052a8e20.  mov qword [obj.n_frp], 0                ; [0x20e300:8]=0
0x000054d6      48c705b78c20.  mov qword [obj.n_frp_allocated], 0      ; [0x20e198:8]=0
0x000054e1      4883f801       cmp rax, 1
0x000054e5      0f878e000000   ja 0x5579
0x000054eb      4883fb01       cmp rbx, 1
0x000054ef      7644           jbe 0x5535
0x000054f1      4889d8         mov rax, rbx
0x000054f4      488d6908       lea rbp, [rcx + 8]
0x000054f8      48c1e004       shl rax, 4
0x000054fc      4c8d6401f8     lea r12, [rcx + rax - 8]
0x00005501      0f1f80000000.  nop dword [rax]
0x00005508      488b4500       mov rax, qword [rbp]                    ; .//src:-39
0x0000550c      488d7801       lea rdi, [rax + 1]
0x00005510      488b4508       mov rax, qword [rbp + 8]
0x00005514      4839c7         cmp rdi, rax
0x00005517      7413           je 0x552c
0x00005519      488d70ff       lea rsi, [rax - 1]
0x0000551d      48894c2408     mov qword [rsp + 8], rcx
0x00005522      e879fbffff     call sym.add_range_pair
0x00005527      488b4c2408     mov rcx, qword [rsp + 8]
0x0000552c      4883c510       add rbp, 0x10
0x00005530      4939ec         cmp r12, rbp
0x00005533      75d3           jne 0x5508                              ; .//src:-35
0x00005535      48c1e304       shl rbx, 4
0x00005539      488b4419f8     mov rax, qword [rcx + rbx - 8]
0x0000553e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005542      741a           je 0x555e
0x00005544      488d7801       lea rdi, [rax + 1]
0x00005548      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000554f      48894c2408     mov qword [rsp + 8], rcx
0x00005554      e847fbffff     call sym.add_range_pair
0x00005559      488b4c2408     mov rcx, qword [rsp + 8]
0x0000555e      4889cf         mov rdi, rcx
0x00005561      e84ac4ffff     call sym.imp.free
0x00005566      488b1d938d20.  mov rbx, qword [obj.n_frp]              ; [0x20e300:8]=0
0x0000556d      488b0d848d20.  mov rcx, qword [obj.frp]                ; [0x20e2f8:8]=0
0x00005574      e91ffeffff     jmp 0x5398
0x00005579      488d70ff       lea rsi, [rax - 1]
0x0000557d      bf01000000     mov edi, 1
0x00005582      48894c2408     mov qword [rsp + 8], rcx
0x00005587      e814fbffff     call sym.add_range_pair
0x0000558c      488b4c2408     mov rcx, qword [rsp + 8]
0x00005591      e955ffffff     jmp 0x54eb                              ; .//src:92
0x00005596      f644241c04     test byte [rsp + 0x1c], 4
0x0000559b      ba05000000     mov edx, 5
0x000055a0      7426           je 0x55c8
0x000055a2      488d35275d00.  lea rsi, str.byte_character_positions_are_numbered_from_1 ; 0xb2d0 ; "byte/character positions are numbered from 1"
0x000055a9      31ff           xor edi, edi
0x000055ab      e8d0c4ffff     call sym.imp.dcgettext
0x000055b0      4889c2         mov rdx, rax
0x000055b3      31ff           xor edi, edi
0x000055b5      31f6           xor esi, esi
0x000055b7      31c0           xor eax, eax
0x000055b9      e8c2c6ffff     call sym.imp.error
0x000055be      bf01000000     mov edi, 1
0x000055c3      e878f3ffff     call sym.usage
0x000055c8      488d35555c00.  lea rsi, str.fields_are_numbered_from_1 ; 0xb224 ; "fields are numbered from 1"
0x000055cf      31ff           xor edi, edi                            ; .//src:20
0x000055d1      e8aac4ffff     call sym.imp.dcgettext
0x000055d6      ebd8           jmp 0x55b0
0x000055d8      488d35605c00.  lea rsi, str.invalid_decreasing_range   ; 0xb23f ; "invalid decreasing range"
0x000055df      ba05000000     mov edx, 5
0x000055e4      31ff           xor edi, edi
0x000055e6      e895c4ffff     call sym.imp.dcgettext
0x000055eb      ebc3           jmp 0x55b0
0x000055ed      f644241c04     test byte [rsp + 0x1c], 4
0x000055f2      ba05000000     mov edx, 5
0x000055f7      0f848d000000   je 0x568a
0x000055fd      488d35ac5c00.  lea rsi, str.invalid_byte_or_character_range ; 0xb2b0 ; "invalid byte or character range"
0x00005604      31ff           xor edi, edi
0x00005606      e875c4ffff     call sym.imp.dcgettext
0x0000560b      eba3           jmp 0x55b0
0x0000560d      488b1d7c8b20.  mov rbx, qword [obj.num_start.6877]     ; .//src:-17 ; [0x20e190:8]=0
0x00005614      488d353d5c00.  lea rsi, str.0123456789                 ; 0xb258 ; "0123456789"
0x0000561b      4889df         mov rdi, rbx
0x0000561e      e82dc5ffff     call sym.imp.strspn
0x00005623      4889df         mov rdi, rbx
0x00005626      4889c6         mov rsi, rax
0x00005629      e8f22f0000     call sym.xstrndup
0x0000562e      4889c7         mov rdi, rax
0x00005631      4889c3         mov rbx, rax
0x00005634      e817270000     call sym.quote                          ; .//src:-12
0x00005639      f644241c04     test byte [rsp + 0x1c], 4
0x0000563e      4889c5         mov rbp, rax                            ; .//src:-79
0x00005641      ba05000000     mov edx, 5
0x00005646      7455           je 0x569d
0x00005648      488d35d95c00.  lea rsi, str.byte_character_offset__s_is_too_large ; 0xb328 ; "byte/character offset %s is too large"
0x0000564f      31ff           xor edi, edi                            ; .//src:-109
0x00005651      e82ac4ffff     call sym.imp.dcgettext
0x00005656      4889c2         mov rdx, rax
0x00005659      4889e9         mov rcx, rbp
0x0000565c      31f6           xor esi, esi
0x0000565e      31ff           xor edi, edi
0x00005660      31c0           xor eax, eax
0x00005662      e819c6ffff     call sym.imp.error
0x00005667      4889df         mov rdi, rbx
0x0000566a      e841c3ffff     call sym.imp.free
0x0000566f      bf01000000     mov edi, 1
0x00005674      e8c7f2ffff     call sym.usage
0x00005679      ba05000000     mov edx, 5
0x0000567e      488d357b5c00.  lea rsi, str.invalid_range_with_no_endpoint: ; .//src:-133 ; 0xb300 ; "invalid range with no endpoint: -"
0x00005685      e95affffff     jmp 0x55e4
0x0000568a      488d357f5b00.  lea rsi, str.invalid_field_range        ; 0xb210 ; "invalid field range"
0x00005691      31ff           xor edi, edi
0x00005693      e8e8c3ffff     call sym.imp.dcgettext
0x00005698      e913ffffff     jmp 0x55b0
0x0000569d      488d35bf5b00.  lea rsi, str.field_number__s_is_too_large ; 0xb263 ; "field number %s is too large"
0x000056a4      31ff           xor edi, edi
0x000056a6      e8d5c3ffff     call sym.imp.dcgettext
0x000056ab      eba9           jmp 0x5656
0x000056ad      f644241c04     test byte [rsp + 0x1c], 4
0x000056b2      ba05000000     mov edx, 5
0x000056b7      7453           je 0x570c
0x000056b9      488d35b85c00.  lea rsi, str.missing_list_of_byte_character_positions ; 0xb378 ; "missing list of byte/character positions"
0x000056c0      31ff           xor edi, edi
0x000056c2      e8b9c3ffff     call sym.imp.dcgettext
0x000056c7      e9e4feffff     jmp 0x55b0
0x000056cc      4c89f7         mov rdi, r14
0x000056cf      e87c260000     call sym.quote
0x000056d4      f644241c04     test byte [rsp + 0x1c], 4
0x000056d9      4889c3         mov rbx, rax
0x000056dc      ba05000000     mov edx, 5
0x000056e1      7435           je 0x5718
0x000056e3      488d35665c00.  lea rsi, str.invalid_byte_character_position__s ; 0xb350 ; "invalid byte/character position %s"
0x000056ea      31ff           xor edi, edi
0x000056ec      e88fc3ffff     call sym.imp.dcgettext
0x000056f1      4889c2         mov rdx, rax
0x000056f4      31ff           xor edi, edi
0x000056f6      4889d9         mov rcx, rbx
0x000056f9      31f6           xor esi, esi
0x000056fb      31c0           xor eax, eax
0x000056fd      e87ec5ffff     call sym.imp.error
0x00005702      bf01000000     mov edi, 1
0x00005707      e834f2ffff     call sym.usage
0x0000570c      488d35845b00.  lea rsi, str.missing_list_of_fields     ; 0xb297 ; "missing list of fields"
0x00005713      e9ccfeffff     jmp 0x55e4                              ; .//src:-83
0x00005718      488d35615b00.  lea rsi, str.invalid_field_value__s     ; 0xb280 ; "invalid field value %s"
0x0000571f      31ff           xor edi, edi
0x00005721      e85ac3ffff     call sym.imp.dcgettext
0x00005726      ebc9           jmp 0x56f1
0x00005728      0f1f84000000.  nop dword [rax + rax]
;-- reset_fields:
0x00005730      4883ec08       sub rsp, 8
0x00005734      488b3dbd8b20.  mov rdi, qword [obj.frp]                ; [0x20e2f8:8]=0
0x0000573b      48c705ba8b20.  mov qword [obj.n_frp], 0                ; [0x20e300:8]=0
0x00005746      48c705478a20.  mov qword [obj.n_frp_allocated], 0      ; [0x20e198:8]=0
0x00005751      e85ac2ffff     call sym.imp.free
0x00005756      48c705978b20.  mov qword [obj.frp], 0                  ; [0x20e2f8:8]=0
0x00005761      4883c408       add rsp, 8
0x00005765      c3             ret
0x00005766      662e0f1f8400.  nop word cs:[rax + rax]
;-- __argmatch_die:
0x00005770      bf01000000     mov edi, 1                              ; ../coreutils-8.31/lib/argmatch.c:63
0x00005775      e9c6f1ffff     jmp sym.usage
0x0000577a      660f1f440000   nop word [rax + rax]
;-- argmatch:
0x00005780      4157           push r15                                ; ../coreutils-8.31/lib/argmatch.c:86
0x00005782      4156           push r14
0x00005784      4989f7         mov r15, rsi
0x00005787      4155           push r13
0x00005789      4154           push r12
0x0000578b      4989cd         mov r13, rcx
0x0000578e      55             push rbp
0x0000578f      53             push rbx
0x00005790      4889d5         mov rbp, rdx
0x00005793      4883ec28       sub rsp, 0x28
0x00005797      48897c2408     mov qword [rsp + 8], rdi
0x0000579c      4889542418     mov qword [rsp + 0x18], rdx
0x000057a1      e8fac2ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/argmatch.c:92
0x000057a6      4d8b37         mov r14, qword [r15]                    ; ../coreutils-8.31/lib/argmatch.c:95
0x000057a9      48c70424ffff.  mov qword [rsp], 0xffffffffffffffff     ; ../coreutils-8.31/lib/argmatch.c:89
0x000057b1      4d85f6         test r14, r14                           ; ../coreutils-8.31/lib/argmatch.c:95
0x000057b4      0f84b3000000   je 0x586d
0x000057ba      4989c4         mov r12, rax
0x000057bd      c644241700     mov byte [rsp + 0x17], 0                ; ../coreutils-8.31/lib/argmatch.c:90
0x000057c2      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/argmatch.c:95
0x000057c4      eb51           jmp 0x5817
0x000057c6      662e0f1f8400.  nop word cs:[rax + rax]
0x000057d0      488b442418     mov rax, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/argmatch.c:108
0x000057d5      4885c0         test rax, rax
0x000057d8      0f84a2000000   je 0x5880
0x000057de      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/argmatch.c:109
0x000057e2      4c89ea         mov rdx, r13
0x000057e5      4889ee         mov rsi, rbp
0x000057e8      490faffd       imul rdi, r13
0x000057ec      4801c7         add rdi, rax
0x000057ef      e87cc3ffff     call sym.imp.memcmp
0x000057f4      85c0           test eax, eax                           ; ../coreutils-8.31/lib/argmatch.c:114
0x000057f6      0fb6442417     movzx eax, byte [rsp + 0x17]
0x000057fb      b901000000     mov ecx, 1
0x00005800      0f45c1         cmovne eax, ecx
0x00005803      88442417       mov byte [rsp + 0x17], al
0x00005807      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:95
0x0000580b      4c01ed         add rbp, r13
0x0000580e      4d8b34df       mov r14, qword [r15 + rbx*8]
0x00005812      4d85f6         test r14, r14
0x00005815      7441           je 0x5858
0x00005817      488b742408     mov rsi, qword [rsp + 8]                ; ../coreutils-8.31/lib/argmatch.c:97
0x0000581c      4c89e2         mov rdx, r12
0x0000581f      4c89f7         mov rdi, r14
0x00005822      e8b9c1ffff     call sym.imp.strncmp
0x00005827      85c0           test eax, eax
0x00005829      75dc           jne 0x5807
0x0000582b      4c89f7         mov rdi, r14                            ; ../coreutils-8.31/lib/argmatch.c:99
0x0000582e      e86dc2ffff     call sym.imp.strlen
0x00005833      4c39e0         cmp rax, r12
0x00005836      7458           je 0x5890
0x00005838      48833c24ff     cmp qword [rsp], 0xffffffffffffffff     ; ../coreutils-8.31/lib/argmatch.c:102
0x0000583d      7591           jne 0x57d0
0x0000583f      48891c24       mov qword [rsp], rbx                    ; ../coreutils-8.31/lib/argmatch.c:104
0x00005843      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:95
0x00005847      4c01ed         add rbp, r13
0x0000584a      4d8b34df       mov r14, qword [r15 + rbx*8]
0x0000584e      4d85f6         test r14, r14
0x00005851      75c4           jne 0x5817
0x00005853      0f1f440000     nop dword [rax + rax]
0x00005858      807c241700     cmp byte [rsp + 0x17], 0                ; ../coreutils-8.31/lib/argmatch.c:120
0x0000585d      48c7c0feffff.  mov rax, 0xfffffffffffffffe
0x00005864      480f440424     cmove rax, qword [rsp]
0x00005869      48890424       mov qword [rsp], rax
0x0000586d      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/argmatch.c:123
0x00005871      4883c428       add rsp, 0x28
0x00005875      5b             pop rbx
0x00005876      5d             pop rbp
0x00005877      415c           pop r12
0x00005879      415d           pop r13
0x0000587b      415e           pop r14
0x0000587d      415f           pop r15
0x0000587f      c3             ret
0x00005880      c644241701     mov byte [rsp + 0x17], 1                ; ../coreutils-8.31/lib/argmatch.c:114
0x00005885      eb80           jmp 0x5807
0x00005887      660f1f840000.  nop word [rax + rax]
0x00005890      48891c24       mov qword [rsp], rbx                    ; ../coreutils-8.31/lib/argmatch.c:101
0x00005894      ebd7           jmp 0x586d
0x00005896      662e0f1f8400.  nop word cs:[rax + rax]
;-- argmatch_invalid:
0x000058a0      4883faff       cmp rdx, 0xffffffffffffffff             ; ../coreutils-8.31/lib/argmatch.c:132
0x000058a4      4154           push r12
0x000058a6      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/argmatch.c:133
0x000058ab      55             push rbp                                ; ../coreutils-8.31/lib/argmatch.c:132
0x000058ac      4989f4         mov r12, rsi
0x000058af      53             push rbx
0x000058b0      4889fd         mov rbp, rdi
0x000058b3      744b           je 0x5900                               ; ../coreutils-8.31/lib/argmatch.c:133
0x000058b5      488d35055b00.  lea rsi, str.ambiguous_argument__s_for__s ; 0xb3c1 ; "ambiguous argument %s for %s"
0x000058bc      31ff           xor edi, edi
0x000058be      e8bdc1ffff     call sym.imp.dcgettext
0x000058c3      4889c3         mov rbx, rax
0x000058c6      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/argmatch.c:137
0x000058c9      bf01000000     mov edi, 1
0x000058ce      e85d240000     call sym.quote_n
0x000058d3      4c89e2         mov rdx, r12
0x000058d6      4889c5         mov rbp, rax
0x000058d9      be08000000     mov esi, 8
0x000058de      31ff           xor edi, edi
0x000058e0      e87b200000     call sym.quotearg_n_style
0x000058e5      4989e8         mov r8, rbp
0x000058e8      4889da         mov rdx, rbx
0x000058eb      4889c1         mov rcx, rax
0x000058ee      5b             pop rbx                                 ; ../coreutils-8.31/lib/argmatch.c:139
0x000058ef      5d             pop rbp
0x000058f0      415c           pop r12
0x000058f2      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/argmatch.c:137
0x000058f4      31ff           xor edi, edi
0x000058f6      31c0           xor eax, eax
0x000058f8      e983c3ffff     jmp sym.imp.error
0x000058fd      0f1f00         nop dword [rax]
0x00005900      488d359f5a00.  lea rsi, str.invalid_argument__s_for__s ; ../coreutils-8.31/lib/argmatch.c:133 ; 0xb3a6 ; "invalid argument %s for %s"
0x00005907      31ff           xor edi, edi
0x00005909      e872c1ffff     call sym.imp.dcgettext
0x0000590e      4889c3         mov rbx, rax
0x00005911      ebb3           jmp 0x58c6
0x00005913      0f1f00         nop dword [rax]
0x00005916      662e0f1f8400.  nop word cs:[rax + rax]
;-- argmatch_valid:
0x00005920      4157           push r15                                ; ../coreutils-8.31/lib/argmatch.c:148
0x00005922      4156           push r14
0x00005924      4989fe         mov r14, rdi
0x00005927      4155           push r13
0x00005929      4154           push r12
0x0000592b      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/argmatch.c:154
0x0000592d      55             push rbp                                ; ../coreutils-8.31/lib/argmatch.c:148
0x0000592e      53             push rbx
0x0000592f      4889f5         mov rbp, rsi
0x00005932      488d35a55a00.  lea rsi, str.Valid_arguments_are:       ; ../coreutils-8.31/lib/argmatch.c:154 ; 0xb3de ; "Valid arguments are:"
0x00005939      4989d4         mov r12, rdx                            ; ../coreutils-8.31/lib/argmatch.c:148
0x0000593c      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/argmatch.c:154
0x00005941      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/argmatch.c:148
0x00005945      488b1db48720.  mov rbx, qword [obj.stderr]             ; ../coreutils-8.31/lib/argmatch.c:154 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e100:8]=0
0x0000594c      e82fc1ffff     call sym.imp.dcgettext
0x00005951      4889c7         mov rdi, rax
0x00005954      4889de         mov rsi, rbx
0x00005957      e824c2ffff     call sym.imp.fputs_unlocked
0x0000595c      4d8b3e         mov r15, qword [r14]                    ; ../coreutils-8.31/lib/argmatch.c:155
0x0000595f      4d85ff         test r15, r15
0x00005962      0f8490000000   je 0x59f8
0x00005968      4531ed         xor r13d, r13d                          ; ../coreutils-8.31/lib/argmatch.c:150
0x0000596b      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/argmatch.c:155
0x0000596d      eb39           jmp 0x59a8
0x0000596f      90             nop
0x00005970      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/argmatch.c:159
0x00005973      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:155
0x00005977      4989ed         mov r13, rbp                            ; ../coreutils-8.31/lib/argmatch.c:160
0x0000597a      e8d1230000     call sym.quote                          ; ../coreutils-8.31/lib/argmatch.c:159
0x0000597f      488b3d7a8720.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e100:8]=0
0x00005986      488d15665a00.  lea rdx, [0x0000b3f3]                   ; "\n  - %s"
0x0000598d      4889c1         mov rcx, rax
0x00005990      be01000000     mov esi, 1
0x00005995      31c0           xor eax, eax
0x00005997      4c01e5         add rbp, r12
0x0000599a      e841c3ffff     call sym.imp.__fprintf_chk
0x0000599f      4d8b3cde       mov r15, qword [r14 + rbx*8]            ; ../coreutils-8.31/lib/argmatch.c:155
0x000059a3      4d85ff         test r15, r15
0x000059a6      7450           je 0x59f8
0x000059a8      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/argmatch.c:156
0x000059ab      74c3           je 0x5970
0x000059ad      4c89e2         mov rdx, r12                            ; ../coreutils-8.31/lib/argmatch.c:157
0x000059b0      4889ee         mov rsi, rbp
0x000059b3      4c89ef         mov rdi, r13
0x000059b6      e8b5c1ffff     call sym.imp.memcmp
0x000059bb      85c0           test eax, eax
0x000059bd      75b1           jne 0x5970
0x000059bf      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/argmatch.c:164
0x000059c2      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:155
0x000059c6      4c01e5         add rbp, r12
0x000059c9      e882230000     call sym.quote                          ; ../coreutils-8.31/lib/argmatch.c:164
0x000059ce      488b3d2b8720.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e100:8]=0
0x000059d5      488d151f5a00.  lea rdx, str.s                          ; 0xb3fb ; ", %s"
0x000059dc      4889c1         mov rcx, rax
0x000059df      be01000000     mov esi, 1
0x000059e4      31c0           xor eax, eax
0x000059e6      e8f5c2ffff     call sym.imp.__fprintf_chk
0x000059eb      4d8b3cde       mov r15, qword [r14 + rbx*8]            ; ../coreutils-8.31/lib/argmatch.c:155
0x000059ef      4d85ff         test r15, r15
0x000059f2      75b4           jne 0x59a8
0x000059f4      0f1f4000       nop dword [rax]
0x000059f8      488b3d018720.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/argmatch.c:166 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e100:8]=0
0x000059ff      488b4728       mov rax, qword [rdi + 0x28]             ; stdio.h:100   return _IO_putc_unlocked (__c, __stream);
0x00005a03      483b4730       cmp rax, qword [rdi + 0x30]
0x00005a07      731f           jae 0x5a28
0x00005a09      488d5001       lea rdx, [rax + 1]
0x00005a0d      48895728       mov qword [rdi + 0x28], rdx
0x00005a11      c6000a         mov byte [rax], 0xa
0x00005a14      4883c408       add rsp, 8
0x00005a18      5b             pop rbx
0x00005a19      5d             pop rbp
0x00005a1a      415c           pop r12
0x00005a1c      415d           pop r13
0x00005a1e      415e           pop r14
0x00005a20      415f           pop r15
0x00005a22      c3             ret
0x00005a23      0f1f440000     nop dword [rax + rax]
0x00005a28      4883c408       add rsp, 8
0x00005a2c      be0a000000     mov esi, 0xa                            ; ../coreutils-8.31/lib/argmatch.c:-204
0x00005a31      5b             pop rbx
0x00005a32      5d             pop rbp
0x00005a33      415c           pop r12
0x00005a35      415d           pop r13
0x00005a37      415e           pop r14
0x00005a39      415f           pop r15
0x00005a3b      e9b0c0ffff     jmp sym.imp.__overflow
;-- __xargmatch_internal:
0x00005a40      4157           push r15
0x00005a42      4156           push r14
0x00005a44      4989fe         mov r14, rdi
0x00005a47      4155           push r13
0x00005a49      4154           push r12
0x00005a4b      4989f4         mov r12, rsi
0x00005a4e      55             push rbp
0x00005a4f      53             push rbx
0x00005a50      4889cd         mov rbp, rcx
0x00005a53      4889d3         mov rbx, rdx
0x00005a56      4c89c1         mov rcx, r8
0x00005a59      4889ea         mov rdx, rbp
0x00005a5c      4883ec08       sub rsp, 8
0x00005a60      4889de         mov rsi, rbx
0x00005a63      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/argmatch.c:-196
0x00005a66      4d89c7         mov r15, r8
0x00005a69      4d89cd         mov r13, r9
0x00005a6c      e80ffdffff     call sym.argmatch
0x00005a71      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/argmatch.c:-195
0x00005a74      780f           js 0x5a85                               ; ../coreutils-8.31/lib/argmatch.c:-193
0x00005a76      4883c408       add rsp, 8
0x00005a7a      5b             pop rbx
0x00005a7b      5d             pop rbp
0x00005a7c      415c           pop r12
0x00005a7e      415d           pop r13
0x00005a80      415e           pop r14                                 ; ../coreutils-8.31/lib/argmatch.c:-184
0x00005a82      415f           pop r15
0x00005a84      c3             ret
0x00005a85      4889c2         mov rdx, rax
0x00005a88      4c89e6         mov rsi, r12                            ; ../coreutils-8.31/lib/argmatch.c:-181
0x00005a8b      4c89f7         mov rdi, r14
0x00005a8e      e80dfeffff     call sym.argmatch_invalid
0x00005a93      4c89fa         mov rdx, r15
0x00005a96      4889ee         mov rsi, rbp
0x00005a99      4889df         mov rdi, rbx
0x00005a9c      e87ffeffff     call sym.argmatch_valid
0x00005aa1      41ffd5         call r13
0x00005aa4      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00005aab      ebc9           jmp 0x5a76
0x00005aad      0f1f00         nop dword [rax]
;-- argmatch_to_argument:
0x00005ab0      4156           push r14
0x00005ab2      4155           push r13
0x00005ab4      4154           push r12
0x00005ab6      55             push rbp
0x00005ab7      53             push rbx
0x00005ab8      4c8b36         mov r14, qword [rsi]
0x00005abb      4d85f6         test r14, r14
0x00005abe      7431           je 0x5af1
0x00005ac0      4989cc         mov r12, rcx
0x00005ac3      4989fd         mov r13, rdi
0x00005ac6      4889d5         mov rbp, rdx
0x00005ac9      488d5e08       lea rbx, [rsi + 8]
0x00005acd      eb10           jmp 0x5adf                              ; ../coreutils-8.31/lib/argmatch.c:-177
0x00005acf      90             nop
0x00005ad0      4c8b33         mov r14, qword [rbx]
0x00005ad3      4c01e5         add rbp, r12
0x00005ad6      4883c308       add rbx, 8
0x00005ada      4d85f6         test r14, r14
0x00005add      7412           je 0x5af1
0x00005adf      4c89e2         mov rdx, r12
0x00005ae2      4889ee         mov rsi, rbp
0x00005ae5      4c89ef         mov rdi, r13
0x00005ae8      e883c0ffff     call sym.imp.memcmp
0x00005aed      85c0           test eax, eax
0x00005aef      75df           jne 0x5ad0
0x00005af1      5b             pop rbx
0x00005af2      4c89f0         mov rax, r14
0x00005af5      5d             pop rbp
0x00005af6      415c           pop r12
0x00005af8      415d           pop r13
0x00005afa      415e           pop r14
0x00005afc      c3             ret
0x00005afd      0f1f00         nop dword [rax]
;-- close_stdout_set_file_name:
0x00005b00      48893da18620.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x20e1a8:8]=0
0x00005b07      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00005b08      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00005b10      40883d898620.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x20e1a0:1]=0
0x00005b17      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00005b18      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00005b20      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00005b21      53             push rbx
0x00005b22      4883ec08       sub rsp, 8
0x00005b26      488b3d9b8520.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0c8:8]=0
0x00005b2d      e87e360000     call sym.close_stream
0x00005b32      85c0           test eax, eax
0x00005b34      7416           je 0x5b4c
0x00005b36      e895beffff     call sym.imp.__errno_location
0x00005b3b      803d5e862000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x20e1a0:1]=0
0x00005b42      4889c3         mov rbx, rax
0x00005b45      741c           je 0x5b63
0x00005b47      833820         cmp dword [rax], 0x20
0x00005b4a      7517           jne 0x5b63
0x00005b4c      488b3dad8520.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e100:8]=0
0x00005b53      e858360000     call sym.close_stream
0x00005b58      85c0           test eax, eax
0x00005b5a      7546           jne 0x5ba2
0x00005b5c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00005b60      5b             pop rbx
0x00005b61      5d             pop rbp
0x00005b62      c3             ret
0x00005b63      488d35965800.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0xb400 ; "write error"
0x00005b6a      31ff           xor edi, edi
0x00005b6c      ba05000000     mov edx, 5
0x00005b71      e80abfffff     call sym.imp.dcgettext
0x00005b76      488b3d2b8620.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x20e1a8:8]=0
0x00005b7d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00005b80      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00005b83      7428           je 0x5bad
0x00005b85      e8c61f0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x00005b8a      8b33           mov esi, dword [rbx]
0x00005b8c      488d15795800.  lea rdx, str.s:__s                      ; 0xb40c ; "%s: %s"
0x00005b93      4889c1         mov rcx, rax
0x00005b96      4989e8         mov r8, rbp
0x00005b99      31ff           xor edi, edi
0x00005b9b      31c0           xor eax, eax
0x00005b9d      e8dec0ffff     call sym.imp.error
0x00005ba2      8b3da8842000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x20e050:4]=1
0x00005ba8      e843beffff     call sym.imp._exit
0x00005bad      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x00005baf      488d15475800.  lea rdx, [0x0000b3fd]                   ; "%s"
0x00005bb6      4889c1         mov rcx, rax
0x00005bb9      31ff           xor edi, edi
0x00005bbb      31c0           xor eax, eax
0x00005bbd      e8bec0ffff     call sym.imp.error
0x00005bc2      ebde           jmp 0x5ba2
0x00005bc4      662e0f1f8400.  nop word cs:[rax + rax]
0x00005bce      6690           nop
;-- mbsalign:
0x00005bd0      4157           push r15
0x00005bd2      4156           push r14
0x00005bd4      4989fe         mov r14, rdi
0x00005bd7      4155           push r13
0x00005bd9      4154           push r12
0x00005bdb      4989f5         mov r13, rsi
0x00005bde      55             push rbp
0x00005bdf      53             push rbx
0x00005be0      4489cb         mov ebx, r9d
0x00005be3      4989cc         mov r12, rcx
0x00005be6      4883ec38       sub rsp, 0x38
0x00005bea      4889542410     mov qword [rsp + 0x10], rdx
0x00005bef      448944241c     mov dword [rsp + 0x1c], r8d
0x00005bf4      e8a7beffff     call sym.imp.strlen
0x00005bf9      f6c302         test bl, 2
0x00005bfc      4989c7         mov r15, rax
0x00005bff      4889442408     mov qword [rsp + 8], rax
0x00005c04      0f8466010000   je 0x5d70
0x00005c0a      4c89fd         mov rbp, r15
0x00005c0d      48c704240000.  mov qword [rsp], 0
0x00005c15      48c744240800.  mov qword [rsp + 8], 0
0x00005c1e      498b0424       mov rax, qword [r12]
0x00005c22      4839e8         cmp rax, rbp
0x00005c25      0f830e010000   jae 0x5d39
0x00005c2b      4989c7         mov r15, rax
0x00005c2e      31d2           xor edx, edx
0x00005c30      49890424       mov qword [r12], rax
0x00005c34      8b44241c       mov eax, dword [rsp + 0x1c]
0x00005c38      85c0           test eax, eax
0x00005c3a      0f841b010000   je 0x5d5b
0x00005c40      31ed           xor ebp, ebp
0x00005c42      83f801         cmp eax, 1
0x00005c45      740c           je 0x5c53
0x00005c47      4889d5         mov rbp, rdx
0x00005c4a      83e201         and edx, 1
0x00005c4d      48d1ed         shr rbp, 1
0x00005c50      4801ea         add rdx, rbp
0x00005c53      f6c304         test bl, 4
0x00005c56      4e8d243a       lea r12, [rdx + r15]
0x00005c5a      7405           je 0x5c61
0x00005c5c      4d89fc         mov r12, r15
0x00005c5f      31d2           xor edx, edx
0x00005c61      83e308         and ebx, 8
0x00005c64      0f85fe000000   jne 0x5d68
0x00005c6a      4901ec         add r12, rbp
0x00005c6d      488b442410     mov rax, qword [rsp + 0x10]
0x00005c72      4885c0         test rax, rax
0x00005c75      0f8486000000   je 0x5d01
0x00005c7b      498d5c05ff     lea rbx, [r13 + rax - 1]
0x00005c80      488d42ff       lea rax, [rdx - 1]
0x00005c84      4939dd         cmp r13, rbx
0x00005c87      7326           jae 0x5caf
0x00005c89      4885d2         test rdx, rdx
0x00005c8c      7421           je 0x5caf
0x00005c8e      6690           nop
0x00005c90      4983c501       add r13, 1
0x00005c94      41c645ff20     mov byte [r13 - 1], 0x20                ; [0x20:1]=64 ; "@"
0x00005c99      4c39eb         cmp rbx, r13
0x00005c9c      400f97c6       seta sil
0x00005ca0      4885c0         test rax, rax
0x00005ca3      0f95c2         setne dl
0x00005ca6      4883e801       sub rax, 1
0x00005caa      4084d6         test sil, dl
0x00005cad      75e1           jne 0x5c90
0x00005caf      4889da         mov rdx, rbx
0x00005cb2      41c6450000     mov byte [r13], 0
0x00005cb7      4c89f6         mov rsi, r14
0x00005cba      4c29ea         sub rdx, r13
0x00005cbd      4c89ef         mov rdi, r13
0x00005cc0      4c39fa         cmp rdx, r15
0x00005cc3      490f47d7       cmova rdx, r15
0x00005cc7      e894bfffff     call sym.imp.mempcpy
0x00005ccc      4839c3         cmp rbx, rax
0x00005ccf      488d55ff       lea rdx, [rbp - 1]
0x00005cd3      7629           jbe 0x5cfe
0x00005cd5      4885ed         test rbp, rbp
0x00005cd8      7424           je 0x5cfe
0x00005cda      660f1f440000   nop word [rax + rax]
0x00005ce0      4883c001       add rax, 1
0x00005ce4      4885d2         test rdx, rdx
0x00005ce7      c640ff20       mov byte [rax - 1], 0x20                ; [0x20:1]=64 ; "@"
0x00005ceb      400f95c6       setne sil
0x00005cef      4839c3         cmp rbx, rax
0x00005cf2      0f97c1         seta cl
0x00005cf5      4883ea01       sub rdx, 1
0x00005cf9      4084ce         test sil, cl
0x00005cfc      75e2           jne 0x5ce0
0x00005cfe      c60000         mov byte [rax], 0
0x00005d01      488b3c24       mov rdi, qword [rsp]
0x00005d05      e8a6bcffff     call sym.imp.free
0x00005d0a      488b7c2408     mov rdi, qword [rsp + 8]
0x00005d0f      e89cbcffff     call sym.imp.free
0x00005d14      4883c438       add rsp, 0x38
0x00005d18      4c89e0         mov rax, r12
0x00005d1b      5b             pop rbx
0x00005d1c      5d             pop rbp
0x00005d1d      415c           pop r12
0x00005d1f      415d           pop r13
0x00005d21      415e           pop r14
0x00005d23      415f           pop r15
0x00005d25      c3             ret
0x00005d26      662e0f1f8400.  nop word cs:[rax + rax]
0x00005d30      48c744240800.  mov qword [rsp + 8], 0
0x00005d39      4839c5         cmp rbp, rax
0x00005d3c      0f8348020000   jae 0x5f8a
0x00005d42      4829e8         sub rax, rbp
0x00005d45      4889c2         mov rdx, rax
0x00005d48      4889e8         mov rax, rbp
0x00005d4b      49890424       mov qword [r12], rax
0x00005d4f      8b44241c       mov eax, dword [rsp + 0x1c]
0x00005d53      85c0           test eax, eax
0x00005d55      0f85e5feffff   jne 0x5c40
0x00005d5b      4889d5         mov rbp, rdx
0x00005d5e      31d2           xor edx, edx
0x00005d60      e9eefeffff     jmp 0x5c53
0x00005d65      0f1f00         nop dword [rax]
0x00005d68      31ed           xor ebp, ebp
0x00005d6a      e9fefeffff     jmp 0x5c6d
0x00005d6f      90             nop
0x00005d70      e81bbdffff     call sym.imp.__ctype_get_mb_cur_max
0x00005d75      4883f801       cmp rax, 1
0x00005d79      0f868bfeffff   jbe 0x5c0a
0x00005d7f      31d2           xor edx, edx
0x00005d81      31ff           xor edi, edi
0x00005d83      4c89f6         mov rsi, r14
0x00005d86      e8b5bcffff     call sym.imp.mbstowcs
0x00005d8b      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005d8f      752f           jne 0x5dc0
0x00005d91      f6c301         test bl, 1
0x00005d94      0f8570feffff   jne 0x5c0a
0x00005d9a      48c704240000.  mov qword [rsp], 0
0x00005da2      48c744240800.  mov qword [rsp + 8], 0
0x00005dab      49c7c4ffffff.  mov r12, 0xffffffffffffffff
0x00005db2      e94affffff     jmp 0x5d01
0x00005db7      660f1f840000.  nop word [rax + rax]
0x00005dc0      488d6801       lea rbp, [rax + 1]
0x00005dc4      488d04ad0000.  lea rax, [rbp*4]
0x00005dcc      4889c7         mov rdi, rax
0x00005dcf      4889442420     mov qword [rsp + 0x20], rax
0x00005dd4      e817beffff     call sym.imp.malloc
0x00005dd9      4885c0         test rax, rax
0x00005ddc      48890424       mov qword [rsp], rax
0x00005de0      0f847f010000   je 0x5f65
0x00005de6      488b3c24       mov rdi, qword [rsp]
0x00005dea      4889ea         mov rdx, rbp
0x00005ded      4c89f6         mov rsi, r14
0x00005df0      e84bbcffff     call sym.imp.mbstowcs
0x00005df5      4885c0         test rax, rax
0x00005df8      0f8406010000   je 0x5f04
0x00005dfe      488b0424       mov rax, qword [rsp]
0x00005e02      488b4c2420     mov rcx, qword [rsp + 0x20]
0x00005e07      c74408fc0000.  mov dword [rax + rcx - 4], 0
0x00005e0f      8b38           mov edi, dword [rax]
0x00005e11      4889c2         mov rdx, rax
0x00005e14      85ff           test edi, edi
0x00005e16      0f84f9000000   je 0x5f15
0x00005e1c      c644242000     mov byte [rsp + 0x20], 0
0x00005e21      0f1f80000000.  nop dword [rax]
0x00005e28      4889542428     mov qword [rsp + 0x28], rdx
0x00005e2d      e8debeffff     call sym.imp.iswprint
0x00005e32      85c0           test eax, eax
0x00005e34      488b542428     mov rdx, qword [rsp + 0x28]
0x00005e39      750b           jne 0x5e46
0x00005e3b      c702fdff0000   mov dword [rdx], 0xfffd                 ; [0xfffd:4]=-1
0x00005e41      c644242001     mov byte [rsp + 0x20], 1
0x00005e46      4883c204       add rdx, 4
0x00005e4a      8b3a           mov edi, dword [rdx]
0x00005e4c      85ff           test edi, edi
0x00005e4e      75d8           jne 0x5e28
0x00005e50      488b3c24       mov rdi, qword [rsp]
0x00005e54      4889ee         mov rsi, rbp
0x00005e57      e8d4bbffff     call sym.imp.wcswidth
0x00005e5c      807c242000     cmp byte [rsp + 0x20], 0
0x00005e61      4863e8         movsxd rbp, eax
0x00005e64      0f84be000000   je 0x5f28
0x00005e6a      488b3424       mov rsi, qword [rsp]
0x00005e6e      31d2           xor edx, edx
0x00005e70      31ff           xor edi, edi
0x00005e72      e839beffff     call sym.imp.wcstombs
0x00005e77      4883c001       add rax, 1
0x00005e7b      4889442420     mov qword [rsp + 0x20], rax
0x00005e80      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00005e85      e866bdffff     call sym.imp.malloc
0x00005e8a      4885c0         test rax, rax
0x00005e8d      4889442408     mov qword [rsp + 8], rax
0x00005e92      0f84b8000000   je 0x5f50
0x00005e98      4c8b3c24       mov r15, qword [rsp]
0x00005e9c      4d8b3424       mov r14, qword [r12]
0x00005ea0      418b3f         mov edi, dword [r15]
0x00005ea3      85ff           test edi, edi
0x00005ea5      0f84d4000000   je 0x5f7f
0x00005eab      31ed           xor ebp, ebp
0x00005ead      eb0f           jmp 0x5ebe
0x00005eaf      90             nop
0x00005eb0      4983c704       add r15, 4
0x00005eb4      418b3f         mov edi, dword [r15]
0x00005eb7      4889d5         mov rbp, rdx
0x00005eba      85ff           test edi, edi
0x00005ebc      7421           je 0x5edf
0x00005ebe      e81dbdffff     call sym.imp.wcwidth
0x00005ec3      83f8ff         cmp eax, 0xffffffff
0x00005ec6      4863d0         movsxd rdx, eax
0x00005ec9      750c           jne 0x5ed7
0x00005ecb      41c707fdff00.  mov dword [r15], 0xfffd                 ; [0xfffd:4]=-1
0x00005ed2      ba01000000     mov edx, 1
0x00005ed7      4801ea         add rdx, rbp
0x00005eda      4939d6         cmp r14, rdx
0x00005edd      73d1           jae 0x5eb0
0x00005edf      4c8b742408     mov r14, qword [rsp + 8]
0x00005ee4      488b542420     mov rdx, qword [rsp + 0x20]
0x00005ee9      488b3424       mov rsi, qword [rsp]
0x00005eed      41c707000000.  mov dword [r15], 0
0x00005ef4      4c89f7         mov rdi, r14
0x00005ef7      e8b4bdffff     call sym.imp.wcstombs
0x00005efc      4989c7         mov r15, rax
0x00005eff      e91afdffff     jmp 0x5c1e
0x00005f04      4c89fd         mov rbp, r15
0x00005f07      48c744240800.  mov qword [rsp + 8], 0
0x00005f10      e909fdffff     jmp 0x5c1e
0x00005f15      488b3c24       mov rdi, qword [rsp]
0x00005f19      4889ee         mov rsi, rbp
0x00005f1c      e80fbbffff     call sym.imp.wcswidth
0x00005f21      4863e8         movsxd rbp, eax
0x00005f24      0f1f4000       nop dword [rax]
0x00005f28      498b0424       mov rax, qword [r12]
0x00005f2c      4839e8         cmp rax, rbp
0x00005f2f      0f83fbfdffff   jae 0x5d30
0x00005f35      488b442408     mov rax, qword [rsp + 8]
0x00005f3a      4883c001       add rax, 1
0x00005f3e      4889442420     mov qword [rsp + 0x20], rax
0x00005f43      e938ffffff     jmp 0x5e80
0x00005f48      0f1f84000000.  nop dword [rax + rax]
0x00005f50      f6c301         test bl, 1
0x00005f53      0f85c5fcffff   jne 0x5c1e
0x00005f59      49c7c4ffffff.  mov r12, 0xffffffffffffffff
0x00005f60      e99cfdffff     jmp 0x5d01
0x00005f65      f6c301         test bl, 1
0x00005f68      4c89fd         mov rbp, r15
0x00005f6b      48c744240800.  mov qword [rsp + 8], 0
0x00005f74      0f85a4fcffff   jne 0x5c1e
0x00005f7a      e91bfeffff     jmp 0x5d9a
0x00005f7f      4c8b3c24       mov r15, qword [rsp]
0x00005f83      31ed           xor ebp, ebp
0x00005f85      e955ffffff     jmp 0x5edf
0x00005f8a      4889e8         mov rax, rbp
0x00005f8d      31d2           xor edx, edx
0x00005f8f      e99cfcffff     jmp 0x5c30
0x00005f94      6690           nop
0x00005f96      662e0f1f8400.  nop word cs:[rax + rax]
;-- ambsalign:
0x00005fa0      4157           push r15
0x00005fa2      4156           push r14
0x00005fa4      4989ff         mov r15, rdi
0x00005fa7      4155           push r13
0x00005fa9      4154           push r12
0x00005fab      4531e4         xor r12d, r12d
0x00005fae      55             push rbp
0x00005faf      53             push rbx
0x00005fb0      4889f5         mov rbp, rsi
0x00005fb3      4883ec18       sub rsp, 0x18
0x00005fb7      4c8b2e         mov r13, qword [rsi]
0x00005fba      89542408       mov dword [rsp + 8], edx
0x00005fbe      894c240c       mov dword [rsp + 0xc], ecx
0x00005fc2      4c89e8         mov rax, r13
0x00005fc5      0f1f00         nop dword [rax]
0x00005fc8      488d5801       lea rbx, [rax + 1]
0x00005fcc      4c89e7         mov rdi, r12
0x00005fcf      4889de         mov rsi, rbx
0x00005fd2      e859bcffff     call sym.imp.realloc
0x00005fd7      4885c0         test rax, rax
0x00005fda      4989c6         mov r14, rax
0x00005fdd      7441           je 0x6020
0x00005fdf      448b4c240c     mov r9d, dword [rsp + 0xc]
0x00005fe4      448b442408     mov r8d, dword [rsp + 8]
0x00005fe9      4889e9         mov rcx, rbp
0x00005fec      4c896d00       mov qword [rbp], r13
0x00005ff0      4889da         mov rdx, rbx
0x00005ff3      4889c6         mov rsi, rax
0x00005ff6      4c89ff         mov rdi, r15
0x00005ff9      e8d2fbffff     call sym.mbsalign
0x00005ffe      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006002      742c           je 0x6030
0x00006004      4839c3         cmp rbx, rax
0x00006007      4d89f4         mov r12, r14
0x0000600a      76bc           jbe 0x5fc8
0x0000600c      4883c418       add rsp, 0x18
0x00006010      4c89f0         mov rax, r14
0x00006013      5b             pop rbx
0x00006014      5d             pop rbp
0x00006015      415c           pop r12
0x00006017      415d           pop r13
0x00006019      415e           pop r14
0x0000601b      415f           pop r15
0x0000601d      c3             ret
0x0000601e      6690           nop
0x00006020      4c89e7         mov rdi, r12
0x00006023      e888b9ffff     call sym.imp.free
0x00006028      ebe2           jmp 0x600c
0x0000602a      660f1f440000   nop word [rax + rax]
0x00006030      4c89f7         mov rdi, r14
0x00006033      4531f6         xor r14d, r14d
0x00006036      e875b9ffff     call sym.imp.free
0x0000603b      ebcf           jmp 0x600c
0x0000603d      0f1f00         nop dword [rax]
;-- set_program_name:
0x00006040      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00006043      53             push rbx
0x00006044      7477           je 0x60bd                               ; ../coreutils-8.31/lib/progname.c:51
0x00006046      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x0000604b      4889fb         mov rbx, rdi
0x0000604e      e8adbaffff     call sym.imp.strrchr
0x00006053      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00006056      7455           je 0x60ad
0x00006058      4c8d4001       lea r8, [rax + 1]
0x0000605c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x0000605f      4829da         sub rdx, rbx
0x00006062      4883fa06       cmp rdx, 6
0x00006066      7e45           jle 0x60ad
0x00006068      488d70fa       lea rsi, [rax - 6]
0x0000606c      488d3ddd5300.  lea rdi, str..libs                      ; 0xb450 ; "/.libs/"
0x00006073      b907000000     mov ecx, 7
0x00006078      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000607a      0f97c2         seta dl
0x0000607d      80da00         sbb dl, 0
0x00006080      84d2           test dl, dl
0x00006082      7529           jne 0x60ad
0x00006084      488d3dcd5300.  lea rdi, [0x0000b458]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x0000608b      b903000000     mov ecx, 3
0x00006090      4c89c6         mov rsi, r8
0x00006093      4c89c3         mov rbx, r8
0x00006096      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00006098      0f97c2         seta dl
0x0000609b      80da00         sbb dl, 0
0x0000609e      84d2           test dl, dl
0x000060a0      750b           jne 0x60ad
0x000060a2      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x000060a6      48891d138020.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x20e0c0:8]=0
0x000060ad      48891dfc8020.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x20e1b0:8]=0
0x000060b4      48891d2d8020.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x20e0e8:8]=0
0x000060bb      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x000060bc      c3             ret
0x000060bd      488b0d3c8020.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e100:8]=0
0x000060c4      488d3d4d5300.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0xb418 ; "A NULL argv[0] was passed through an exec system call.\n"
0x000060cb      ba37000000     mov edx, 0x37                           ; '7'
0x000060d0      be01000000     mov esi, 1
0x000060d5      e8f6bbffff     call sym.imp.fwrite
0x000060da      e8e1b8ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x000060df      90             nop
;-- gettext_quote.part.1:
0x000060e0      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x000060e1      53             push rbx
0x000060e2      4889fd         mov rbp, rdi
0x000060e5      89f3           mov ebx, esi
0x000060e7      4883ec08       sub rsp, 8
0x000060eb      e8a0310000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x000060f0      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x000060f3      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000060f6      80fa55         cmp dl, 0x55
0x000060f9      7475           je 0x6170
0x000060fb      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x000060fe      7420           je 0x6120
0x00006100      488d05645300.  lea rax, str.l______l                   ; 0xb46b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00006107      488d155f5300.  lea rdx, [0x0000b46d]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000610e      83fb09         cmp ebx, 9
0x00006111      480f45c2       cmovne rax, rdx
0x00006115      4883c408       add rsp, 8
0x00006119      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x0000611a      5d             pop rbp
0x0000611b      c3             ret
0x0000611c      0f1f4000       nop dword [rax]
0x00006120      0fb65001       movzx edx, byte [rax + 1]
0x00006124      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00006127      80fa42         cmp dl, 0x42
0x0000612a      75d4           jne 0x6100
0x0000612c      80780231       cmp byte [rax + 2], 0x31
0x00006130      75ce           jne 0x6100
0x00006132      80780338       cmp byte [rax + 3], 0x38
0x00006136      75c8           jne 0x6100
0x00006138      80780430       cmp byte [rax + 4], 0x30
0x0000613c      75c2           jne 0x6100
0x0000613e      80780533       cmp byte [rax + 5], 0x33
0x00006142      75bc           jne 0x6100
0x00006144      80780630       cmp byte [rax + 6], 0x30
0x00006148      75b6           jne 0x6100
0x0000614a      80780700       cmp byte [rax + 7], 0
0x0000614e      75b0           jne 0x6100
0x00006150      807d0060       cmp byte [rbp], 0x60
0x00006154      488d05095300.  lea rax, [0x0000b464]
0x0000615b      488d15065300.  lea rdx, [0x0000b468]
0x00006162      480f45c2       cmovne rax, rdx
0x00006166      4883c408       add rsp, 8
0x0000616a      5b             pop rbx
0x0000616b      5d             pop rbp
0x0000616c      c3             ret
0x0000616d      0f1f00         nop dword [rax]
0x00006170      0fb65001       movzx edx, byte [rax + 1]
0x00006174      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00006177      80fa54         cmp dl, 0x54
0x0000617a      7584           jne 0x6100
0x0000617c      0fb65002       movzx edx, byte [rax + 2]
0x00006180      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00006183      80fa46         cmp dl, 0x46
0x00006186      0f8574ffffff   jne 0x6100
0x0000618c      8078032d       cmp byte [rax + 3], 0x2d
0x00006190      0f856affffff   jne 0x6100
0x00006196      80780438       cmp byte [rax + 4], 0x38
0x0000619a      0f8560ffffff   jne 0x6100
0x000061a0      80780500       cmp byte [rax + 5], 0
0x000061a4      0f8556ffffff   jne 0x6100
0x000061aa      807d0060       cmp byte [rbp], 0x60
0x000061ae      488d05a75200.  lea rax, [0x0000b45c]                   ; "\u2018"
0x000061b5      488d15a45200.  lea rdx, [0x0000b460]                   ; "\u2019"
0x000061bc      480f45c2       cmovne rax, rdx
0x000061c0      4883c408       add rsp, 8
0x000061c4      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x000061c5      5d             pop rbp
0x000061c6      c3             ret
0x000061c7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x000061d0      4157           push r15
0x000061d2      4156           push r14
0x000061d4      4589c7         mov r15d, r8d
0x000061d7      4155           push r13
0x000061d9      4154           push r12
0x000061db      4989fe         mov r14, rdi
0x000061de      55             push rbp
0x000061df      53             push rbx
0x000061e0      4489cb         mov ebx, r9d
0x000061e3      4989f5         mov r13, rsi
0x000061e6      4889cd         mov rbp, rcx
0x000061e9      83e302         and ebx, 2
0x000061ec      4881ecb80000.  sub rsp, 0xb8
0x000061f3      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x000061fb      4889542410     mov qword [rsp + 0x10], rdx
0x00006200      4489442408     mov dword [rsp + 8], r8d
0x00006205      44894c2478     mov dword [rsp + 0x78], r9d
0x0000620a      4889442420     mov qword [rsp + 0x20], rax
0x0000620f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00006217      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x0000621c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00006224      4889442460     mov qword [rsp + 0x60], rax
0x00006229      64488b042528.  mov rax, qword fs:[0x28]
0x00006232      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000623a      31c0           xor eax, eax
0x0000623c      e84fb8ffff     call sym.imp.__ctype_get_mb_cur_max
0x00006241      4183ff0a       cmp r15d, 0xa
0x00006245      4889442458     mov qword [rsp + 0x58], rax
0x0000624a      0f87af110000   ja 0x73ff
0x00006250      488d0d695200.  lea rcx, [0x0000b4c0]
0x00006257      4489fa         mov edx, r15d
0x0000625a      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000625e      4801c8         add rax, rcx
0x00006261      ffe0           jmp rax
0x00006263      c644240e01     mov byte [rsp + 0xe], 1
0x00006268      c644247c00     mov byte [rsp + 0x7c], 0
0x0000626d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00006270      48c744245000.  mov qword [rsp + 0x50], 0
0x00006279      c644240f01     mov byte [rsp + 0xf], 1
0x0000627e      c644240d00     mov byte [rsp + 0xd], 0
0x00006283      488d05e35100.  lea rax, [0x0000b46d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000628a      48c744241801.  mov qword [rsp + 0x18], 1
0x00006293      4531ff         xor r15d, r15d
0x00006296      c74424080200.  mov dword [rsp + 8], 2
0x0000629e      4889442448     mov qword [rsp + 0x48], rax
0x000062a3      4531db         xor r11d, r11d
0x000062a6      4889e8         mov rax, rbp
0x000062a9      4589e0         mov r8d, r12d
0x000062ac      4c89dd         mov rbp, r11
0x000062af      4989c3         mov r11, rax
0x000062b2      660f1f440000   nop word [rax + rax]
0x000062b8      4939eb         cmp r11, rbp
0x000062bb      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x000062bf      4983fbff       cmp r11, 0xffffffffffffffff
0x000062c3      750d           jne 0x62d2
0x000062c5      488b442410     mov rax, qword [rsp + 0x10]
0x000062ca      803c2800       cmp byte [rax + rbp], 0
0x000062ce      410f95c4       setne r12b
0x000062d2      4584e4         test r12b, r12b
0x000062d5      0f8455060000   je 0x6930
0x000062db      837c240802     cmp dword [rsp + 8], 2
0x000062e0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000062e5      4c8d0c2f       lea r9, [rdi + rbp]
0x000062e9      0f95c0         setne al
0x000062ec      2244240d       and al, byte [rsp + 0xd]
0x000062f0      4189c2         mov r10d, eax
0x000062f3      0f84a7000000   je 0x63a0
0x000062f9      488b442418     mov rax, qword [rsp + 0x18]
0x000062fe      4885c0         test rax, rax
0x00006301      0f8429040000   je 0x6730
0x00006307      4983fbff       cmp r11, 0xffffffffffffffff
0x0000630b      488d5c0500     lea rbx, [rbp + rax]
0x00006310      752e           jne 0x6340
0x00006312      4883f801       cmp rax, 1
0x00006316      7628           jbe 0x6340
0x00006318      4488442438     mov byte [rsp + 0x38], r8b
0x0000631d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00006322      4c894c2428     mov qword [rsp + 0x28], r9
0x00006327      e874b7ffff     call sym.imp.strlen
0x0000632c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00006332      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00006338      4989c3         mov r11, rax
0x0000633b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00006340      4c39db         cmp rbx, r11
0x00006343      4488542428     mov byte [rsp + 0x28], r10b
0x00006348      0f87b2050000   ja 0x6900
0x0000634e      488b542418     mov rdx, qword [rsp + 0x18]
0x00006353      488b742448     mov rsi, qword [rsp + 0x48]
0x00006358      4c89cf         mov rdi, r9
0x0000635b      4c895c2440     mov qword [rsp + 0x40], r11
0x00006360      4488442438     mov byte [rsp + 0x38], r8b
0x00006365      4c894c2430     mov qword [rsp + 0x30], r9
0x0000636a      e801b8ffff     call sym.imp.memcmp
0x0000636f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00006371      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00006376      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x0000637c      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00006381      0f8579050000   jne 0x6900
0x00006387      807c240f00     cmp byte [rsp + 0xf], 0
0x0000638c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00006392      0f857d0f0000   jne 0x7315
0x00006398      0f1f84000000.  nop dword [rax + rax]
0x000063a0      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x000063a4      80fb7e         cmp bl, 0x7e
0x000063a7      0f871b030000   ja 0x66c8
0x000063ad      488d0d385100.  lea rcx, [0x0000b4ec]
0x000063b4      0fb6d3         movzx edx, bl
0x000063b7      48630491       movsxd rax, dword [rcx + rdx*4]
0x000063bb      4801c8         add rax, rcx
0x000063be      ffe0           jmp rax
0x000063c0      4531d2         xor r10d, r10d
0x000063c3      4983fb01       cmp r11, 1
0x000063c7      0f95c0         setne al
0x000063ca      4983fbff       cmp r11, 0xffffffffffffffff
0x000063ce      750c           jne 0x63dc
0x000063d0      488b442410     mov rax, qword [rsp + 0x10]
0x000063d5      80780100       cmp byte [rax + 1], 0
0x000063d9      0f95c0         setne al
0x000063dc      837c240802     cmp dword [rsp + 8], 2
0x000063e1      0f94c2         sete dl
0x000063e4      84c0           test al, al
0x000063e6      0f844c020000   je 0x6638
0x000063ec      4531e4         xor r12d, r12d
0x000063ef      31c0           xor eax, eax
0x000063f1      0f1f80000000.  nop dword [rax]
0x000063f8      807c240d01     cmp byte [rsp + 0xd], 1
0x000063fd      0f850f010000   jne 0x6512
0x00006403      84d2           test dl, dl
0x00006405      0f8507010000   jne 0x6512
0x0000640b      488b742420     mov rsi, qword [rsp + 0x20]
0x00006410      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00006413      7414           je 0x6429
0x00006415      89da           mov edx, ebx
0x00006417      c0ea05         shr dl, 5
0x0000641a      0fb6d2         movzx edx, dl
0x0000641d      8b1496         mov edx, dword [rsi + rdx*4]
0x00006420      0fa3da         bt edx, ebx
0x00006423      0f824a010000   jb 0x6573
0x00006429      4584d2         test r10b, r10b
0x0000642c      0f8541010000   jne 0x6573
0x00006432      83f001         xor eax, 1
0x00006435      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00006439      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x0000643c      84c0           test al, al
0x0000643e      7420           je 0x6460                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00006440      4d39fd         cmp r13, r15
0x00006443      7605           jbe 0x644a
0x00006445      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000644a      498d4701       lea rax, [r15 + 1]
0x0000644e      4939c5         cmp r13, rax
0x00006451      7606           jbe 0x6459
0x00006453      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00006459      4983c702       add r15, 2
0x0000645d      4531c0         xor r8d, r8d
0x00006460      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00006463      7304           jae 0x6469                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00006465      43881c3e       mov byte [r14 + r15], bl
0x00006469      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x0000646e      4983c701       add r15, 1
0x00006472      b800000000     mov eax, 0
0x00006477      4584e4         test r12b, r12b
0x0000647a      0f44f8         cmove edi, eax
0x0000647d      40887c240e     mov byte [rsp + 0xe], dil
0x00006482      e931feffff     jmp 0x62b8
0x00006487      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00006490      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00006493      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00006497      83f802         cmp eax, 2
0x0000649a      0f84b8050000   je 0x6a58
0x000064a0      83f805         cmp eax, 5
0x000064a3      0f846f050000   je 0x6a18
0x000064a9      83f802         cmp eax, 2
0x000064ac      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000064b1      0f94c2         sete dl
0x000064b4      4531e4         xor r12d, r12d
0x000064b7      31c0           xor eax, eax
0x000064b9      e93affffff     jmp 0x63f8
0x000064be      6690           nop
0x000064c0      4531d2         xor r10d, r10d
0x000064c3      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x000064c8      0f8402050000   je 0x69d0
0x000064ce      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x000064d3      31d2           xor edx, edx
0x000064d5      31c0           xor eax, eax
0x000064d7      bb27000000     mov ebx, 0x27                           ; '''
0x000064dc      e917ffffff     jmp 0x63f8
0x000064e1      0f1f80000000.  nop dword [rax]
0x000064e8      ba09000000     mov edx, 9
0x000064ed      bb74000000     mov ebx, 0x74                           ; 't'
0x000064f2      837c240802     cmp dword [rsp + 8], 2
0x000064f7      0f94c0         sete al
0x000064fa      2244240f       and al, byte [rsp + 0xf]
0x000064fe      0f854a010000   jne 0x664e
0x00006504      807c240d00     cmp byte [rsp + 0xd], 0
0x00006509      7565           jne 0x6570
0x0000650b      89d3           mov ebx, edx
0x0000650d      4531e4         xor r12d, r12d
0x00006510      31c0           xor eax, eax
0x00006512      807c240f00     cmp byte [rsp + 0xf], 0
0x00006517      0f85eefeffff   jne 0x640b
0x0000651d      e907ffffff     jmp 0x6429                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00006522      660f1f440000   nop word [rax + rax]
0x00006528      ba08000000     mov edx, 8
0x0000652d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00006532      ebd0           jmp 0x6504
0x00006534      0f1f4000       nop dword [rax]
0x00006538      837c240802     cmp dword [rsp + 8], 2
0x0000653d      0f84cd030000   je 0x6910
0x00006543      807c240d00     cmp byte [rsp + 0xd], 0
0x00006548      0f8412020000   je 0x6760
0x0000654e      807c240f00     cmp byte [rsp + 0xf], 0
0x00006553      0f8407020000   je 0x6760
0x00006559      48837c241800   cmp qword [rsp + 0x18], 0
0x0000655f      0f85b6030000   jne 0x691b
0x00006565      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000656a      660f1f440000   nop word [rax + rax]
0x00006570      4531e4         xor r12d, r12d
0x00006573      837c240802     cmp dword [rsp + 8], 2
0x00006578      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x0000657b      807c240f00     cmp byte [rsp + 0xf], 0
0x00006580      89d0           mov eax, edx
0x00006582      0f8550080000   jne 0x6dd8
0x00006588      4489c0         mov eax, r8d
0x0000658b      83f001         xor eax, 1
0x0000658e      20d0           and al, dl
0x00006590      742f           je 0x65c1
0x00006592      4d39fd         cmp r13, r15
0x00006595      7605           jbe 0x659c
0x00006597      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000659c      498d5701       lea rdx, [r15 + 1]
0x000065a0      4939d5         cmp r13, rdx
0x000065a3      7606           jbe 0x65ab
0x000065a5      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000065ab      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x000065af      4939d5         cmp r13, rdx
0x000065b2      7606           jbe 0x65ba
0x000065b4      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000065ba      4983c703       add r15, 3
0x000065be      4189c0         mov r8d, eax
0x000065c1      4d39fd         cmp r13, r15
0x000065c4      7605           jbe 0x65cb
0x000065c6      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000065cb      4983c701       add r15, 1
0x000065cf      4883c501       add rbp, 1
0x000065d3      e988feffff     jmp 0x6460
0x000065d8      0f1f84000000.  nop dword [rax + rax]
0x000065e0      807c240d00     cmp byte [rsp + 0xd], 0
0x000065e5      0f85c8010000   jne 0x67b3
0x000065eb      31d2           xor edx, edx
0x000065ed      f644247801     test byte [rsp + 0x78], 1
0x000065f2      0f8413ffffff   je 0x650b
0x000065f8      4883c501       add rbp, 1
0x000065fc      e9b7fcffff     jmp 0x62b8
0x00006601      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00006608      837c240802     cmp dword [rsp + 8], 2
0x0000660d      0f94c2         sete dl
0x00006610      31c0           xor eax, eax
0x00006612      e9e1fdffff     jmp 0x63f8
0x00006617      660f1f840000.  nop word [rax + rax]
0x00006620      ba07000000     mov edx, 7
0x00006625      bb61000000     mov ebx, 0x61                           ; 'a'
0x0000662a      e9d5feffff     jmp 0x6504
0x0000662f      90             nop
0x00006630      837c240802     cmp dword [rsp + 8], 2
0x00006635      0f94c2         sete dl
0x00006638      4885ed         test rbp, rbp
0x0000663b      0f85abfdffff   jne 0x63ec
0x00006641      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00006646      20d0           and al, dl
0x00006648      0f84aafdffff   je 0x63f8
0x0000664e      4c89dd         mov rbp, r11
0x00006651      c74424080200.  mov dword [rsp + 8], 2
0x00006659      e9fb060000     jmp 0x6d59
0x0000665e      6690           nop
0x00006660      837c240802     cmp dword [rsp + 8], 2
0x00006665      0f94c2         sete dl
0x00006668      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x0000666b      ebd4           jmp 0x6641
0x0000666d      0f1f00         nop dword [rax]
0x00006670      837c240802     cmp dword [rsp + 8], 2
0x00006675      bb20000000     mov ebx, 0x20                           ; "@"
0x0000667a      0f94c2         sete dl
0x0000667d      ebc2           jmp 0x6641
0x0000667f      90             nop
0x00006680      ba0d000000     mov edx, 0xd
0x00006685      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000668a      e963feffff     jmp 0x64f2
0x0000668f      90             nop
0x00006690      ba0c000000     mov edx, 0xc
0x00006695      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000669a      e965feffff     jmp 0x6504
0x0000669f      90             nop
0x000066a0      ba0b000000     mov edx, 0xb
0x000066a5      bb76000000     mov ebx, 0x76                           ; 'v'
0x000066aa      e955feffff     jmp 0x6504
0x000066af      90             nop
0x000066b0      ba0a000000     mov edx, 0xa
0x000066b5      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x000066ba      e933feffff     jmp 0x64f2
0x000066bf      90             nop
0x000066c0      4531d2         xor r10d, r10d
0x000066c3      0f1f440000     nop dword [rax + rax]
0x000066c8      48837c245801   cmp qword [rsp + 0x58], 1
0x000066ce      0f85a4030000   jne 0x6a78
0x000066d4      4c895c2438     mov qword [rsp + 0x38], r11
0x000066d9      4488442430     mov byte [rsp + 0x30], r8b
0x000066de      4488542428     mov byte [rsp + 0x28], r10b
0x000066e3      e848b6ffff     call sym.imp.__ctype_b_loc
0x000066e8      488b08         mov rcx, qword [rax]
0x000066eb      0fb6d3         movzx edx, bl
0x000066ee      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x000066f4      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x000066fa      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x000066ff      bf01000000     mov edi, 1
0x00006704      0fb70451       movzx eax, word [rcx + rdx*2]
0x00006708      66250040       and ax, 0x4000                          ; "H\x83\xec\bM\x89\u0e40"
0x0000670c      410f95c4       setne r12b
0x00006710      0f94c0         sete al
0x00006713      2244240d       and al, byte [rsp + 0xd]
0x00006717      84c0           test al, al
0x00006719      0f8592090000   jne 0x70b1
0x0000671f      837c240802     cmp dword [rsp + 8], 2
0x00006724      0f94c2         sete dl
0x00006727      e9ccfcffff     jmp 0x63f8
0x0000672c      0f1f4000       nop dword [rax]
0x00006730      410fb619       movzx ebx, byte [r9]
0x00006734      80fb7e         cmp bl, 0x7e
0x00006737      7787           ja 0x66c0
0x00006739      488d0da84f00.  lea rcx, [0x0000b6e8]
0x00006740      0fb6d3         movzx edx, bl
0x00006743      48630491       movsxd rax, dword [rcx + rdx*4]
0x00006747      4801c8         add rax, rcx
0x0000674a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x0000674c      0f1f4000       nop dword [rax]
0x00006750      4531d2         xor r10d, r10d
0x00006753      807c240d00     cmp byte [rsp + 0xd], 0
0x00006758      0f85f0fdffff   jne 0x654e
0x0000675e      6690           nop
0x00006760      ba5c000000     mov edx, 0x5c                           ; '\'
0x00006765      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000676a      e995fdffff     jmp 0x6504
0x0000676f      90             nop
0x00006770      ba0c000000     mov edx, 0xc
0x00006775      4531d2         xor r10d, r10d
0x00006778      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000677d      e982fdffff     jmp 0x6504
0x00006782      660f1f440000   nop word [rax + rax]
0x00006788      ba0a000000     mov edx, 0xa
0x0000678d      4531d2         xor r10d, r10d
0x00006790      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00006795      e958fdffff     jmp 0x64f2
0x0000679a      660f1f440000   nop word [rax + rax]
0x000067a0      bb61000000     mov ebx, 0x61                           ; 'a'
0x000067a5      e9c6fdffff     jmp 0x6570
0x000067aa      660f1f440000   nop word [rax + rax]
0x000067b0      4531d2         xor r10d, r10d
0x000067b3      837c240802     cmp dword [rsp + 8], 2
0x000067b8      0f94c2         sete dl
0x000067bb      807c240f00     cmp byte [rsp + 0xf], 0
0x000067c0      0f85940b0000   jne 0x735a
0x000067c6      4489c0         mov eax, r8d
0x000067c9      4c89f9         mov rcx, r15
0x000067cc      83f001         xor eax, 1
0x000067cf      20d0           and al, dl
0x000067d1      742d           je 0x6800
0x000067d3      4d39fd         cmp r13, r15
0x000067d6      7605           jbe 0x67dd
0x000067d8      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000067dd      498d4f01       lea rcx, [r15 + 1]
0x000067e1      4939cd         cmp r13, rcx
0x000067e4      7606           jbe 0x67ec
0x000067e6      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000067ec      498d4f02       lea rcx, [r15 + 2]
0x000067f0      4939cd         cmp r13, rcx
0x000067f3      0f8730060000   ja 0x6e29
0x000067f9      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x000067fd      4189c0         mov r8d, eax
0x00006800      4939cd         cmp r13, rcx
0x00006803      7605           jbe 0x680a
0x00006805      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000680a      837c240802     cmp dword [rsp + 8], 2
0x0000680f      4c8d7901       lea r15, [rcx + 1]
0x00006813      0f8400060000   je 0x6e19
0x00006819      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000681d      4c39d8         cmp rax, r11
0x00006820      7319           jae 0x683b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00006822      488b442410     mov rax, qword [rsp + 0x10]
0x00006827      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x0000682c      88442428       mov byte [rsp + 0x28], al
0x00006830      83e830         sub eax, 0x30
0x00006833      3c09           cmp al, 9
0x00006835      0f862e080000   jbe 0x7069
0x0000683b      4489e0         mov eax, r12d
0x0000683e      bb30000000     mov ebx, 0x30                           ; '0'
0x00006843      4531e4         xor r12d, r12d
0x00006846      e9adfbffff     jmp 0x63f8                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x0000684b      0f1f440000     nop dword [rax + rax]
0x00006850      837c240802     cmp dword [rsp + 8], 2
0x00006855      4589d4         mov r12d, r10d
0x00006858      0f94c2         sete dl
0x0000685b      4531d2         xor r10d, r10d
0x0000685e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00006860      e993fbffff     jmp 0x63f8                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00006865      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00006868      837c240802     cmp dword [rsp + 8], 2
0x0000686d      0f94c2         sete dl
0x00006870      4531d2         xor r10d, r10d
0x00006873      e9c0fdffff     jmp 0x6638
0x00006878      0f1f84000000.  nop dword [rax + rax]
0x00006880      837c240802     cmp dword [rsp + 8], 2
0x00006885      0f94c2         sete dl
0x00006888      4531d2         xor r10d, r10d
0x0000688b      4531e4         xor r12d, r12d
0x0000688e      e9aefdffff     jmp 0x6641
0x00006893      0f1f440000     nop dword [rax + rax]
0x00006898      837c240802     cmp dword [rsp + 8], 2
0x0000689d      4589d4         mov r12d, r10d
0x000068a0      bb20000000     mov ebx, 0x20                           ; "@"
0x000068a5      0f94c2         sete dl
0x000068a8      4531d2         xor r10d, r10d
0x000068ab      e991fdffff     jmp 0x6641
0x000068b0      ba0d000000     mov edx, 0xd
0x000068b5      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x000068b8      bb72000000     mov ebx, 0x72                           ; 'r'
0x000068bd      e930fcffff     jmp 0x64f2
0x000068c2      660f1f440000   nop word [rax + rax]
0x000068c8      bb76000000     mov ebx, 0x76                           ; 'v'
0x000068cd      e99efcffff     jmp 0x6570
0x000068d2      660f1f440000   nop word [rax + rax]
0x000068d8      ba09000000     mov edx, 9
0x000068dd      4531d2         xor r10d, r10d
0x000068e0      bb74000000     mov ebx, 0x74                           ; 't'
0x000068e5      e908fcffff     jmp 0x64f2
0x000068ea      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x000068f0      bb62000000     mov ebx, 0x62                           ; 'b'
0x000068f5      e976fcffff     jmp 0x6570
0x000068fa      660f1f440000   nop word [rax + rax]
0x00006900      4531d2         xor r10d, r10d
0x00006903      e998faffff     jmp 0x63a0
0x00006908      0f1f84000000.  nop dword [rax + rax]
0x00006910      807c240f00     cmp byte [rsp + 0xf], 0
0x00006915      0f8565090000   jne 0x7280
0x0000691b      4883c501       add rbp, 1
0x0000691f      4489c0         mov eax, r8d
0x00006922      4531e4         xor r12d, r12d
0x00006925      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000692a      e90dfbffff     jmp 0x643c
0x0000692f      90             nop
0x00006930      837c240802     cmp dword [rsp + 8], 2
0x00006935      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000693a      4589c4         mov r12d, r8d
0x0000693d      4c89dd         mov rbp, r11
0x00006940      0f94c2         sete dl
0x00006943      89d8           mov eax, ebx
0x00006945      4d85ff         test r15, r15
0x00006948      0f94c1         sete cl
0x0000694b      21d0           and eax, edx
0x0000694d      20c8           and al, cl
0x0000694f      0f85610a0000   jne 0x73b6                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00006955      89d8           mov eax, ebx
0x00006957      83f001         xor eax, 1
0x0000695a      20c2           and dl, al
0x0000695c      0f846a090000   je 0x72cc
0x00006962      807c247c00     cmp byte [rsp + 0x7c], 0
0x00006967      0f845d090000   je 0x72ca
0x0000696d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00006972      0f85f5090000   jne 0x736d
0x00006978      4d85ed         test r13, r13
0x0000697b      0f94c0         sete al
0x0000697e      48837c245000   cmp qword [rsp + 0x50], 0
0x00006984      0f95c2         setne dl
0x00006987      20d0           and al, dl
0x00006989      0f841d0a0000   je 0x73ac
0x0000698f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00006994      488d1dd24a00.  lea rbx, [0x0000b46d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000699b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x0000699f      c74424080200.  mov dword [rsp + 8], 2
0x000069a7      41bf01000000   mov r15d, 1
0x000069ad      48c744241801.  mov qword [rsp + 0x18], 1
0x000069b6      c644240f00     mov byte [rsp + 0xf], 0
0x000069bb      48895c2448     mov qword [rsp + 0x48], rbx
0x000069c0      8844247c       mov byte [rsp + 0x7c], al
0x000069c4      e9daf8ffff     jmp 0x62a3
0x000069c9      0f1f80000000.  nop dword [rax]
0x000069d0      807c240f00     cmp byte [rsp + 0xf], 0
0x000069d5      0f85a5080000   jne 0x7280
0x000069db      4d85ed         test r13, r13
0x000069de      0f84fc030000   je 0x6de0                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x000069e4      31d2           xor edx, edx
0x000069e6      48837c245000   cmp qword [rsp + 0x50], 0
0x000069ec      0f85ee030000   jne 0x6de0                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x000069f2      4c896c2450     mov qword [rsp + 0x50], r13
0x000069f7      4983c703       add r15, 3
0x000069fb      31c0           xor eax, eax
0x000069fd      448864247c     mov byte [rsp + 0x7c], r12b
0x00006a02      4531c0         xor r8d, r8d
0x00006a05      4989d5         mov r13, rdx
0x00006a08      bb27000000     mov ebx, 0x27                           ; '''
0x00006a0d      e917faffff     jmp 0x6429
0x00006a12      660f1f440000   nop word [rax + rax]
0x00006a18      f644247804     test byte [rsp + 0x78], 4
0x00006a1d      7421           je 0x6a40
0x00006a1f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00006a23      4c39d9         cmp rcx, r11
0x00006a26      7318           jae 0x6a40
0x00006a28      488b442410     mov rax, qword [rsp + 0x10]
0x00006a2d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00006a32      0f848a070000   je 0x71c2
0x00006a38      0f1f84000000.  nop dword [rax + rax]
0x00006a40      31d2           xor edx, edx
0x00006a42      4531e4         xor r12d, r12d
0x00006a45      31c0           xor eax, eax
0x00006a47      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00006a4c      e9a7f9ffff     jmp 0x63f8
0x00006a51      0f1f80000000.  nop dword [rax]
0x00006a58      807c240f00     cmp byte [rsp + 0xf], 0
0x00006a5d      0f851d080000   jne 0x7280
0x00006a63      4531e4         xor r12d, r12d
0x00006a66      31c0           xor eax, eax
0x00006a68      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00006a6d      e9b7f9ffff     jmp 0x6429                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00006a72      660f1f440000   nop word [rax + rax]
0x00006a78      488d8424a000.  lea rax, [rsp + 0xa0]
0x00006a80      4983fbff       cmp r11, 0xffffffffffffffff
0x00006a84      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00006a90      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00006a95      752d           jne 0x6ac4
0x00006a97      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00006a9c      4488442440     mov byte [rsp + 0x40], r8b
0x00006aa1      4488542438     mov byte [rsp + 0x38], r10b
0x00006aa6      4c894c2430     mov qword [rsp + 0x30], r9
0x00006aab      e8f0afffff     call sym.imp.strlen
0x00006ab0      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00006ab6      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x00006abc      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x00006abf      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00006ac4      488d84249c00.  lea rax, [rsp + 0x9c]
0x00006acc      31c9           xor ecx, ecx
0x00006ace      885c247e       mov byte [rsp + 0x7e], bl
0x00006ad2      448844247d     mov byte [rsp + 0x7d], r8b
0x00006ad7      4889cb         mov rbx, rcx
0x00006ada      4c898c248800.  mov qword [rsp + 0x88], r9
0x00006ae2      4889442438     mov qword [rsp + 0x38], rax
0x00006ae7      448854247f     mov byte [rsp + 0x7f], r10b
0x00006aec      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00006af4      4c89742440     mov qword [rsp + 0x40], r14
0x00006af9      4c896c2470     mov qword [rsp + 0x70], r13
0x00006afe      4c895c2430     mov qword [rsp + 0x30], r11
0x00006b03      488b442410     mov rax, qword [rsp + 0x10]
0x00006b08      4c8d741d00     lea r14, [rbp + rbx]
0x00006b0d      488b542430     mov rdx, qword [rsp + 0x30]
0x00006b12      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00006b17      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00006b1c      4e8d2c30       lea r13, [rax + r14]
0x00006b20      4c29f2         sub rdx, r14
0x00006b23      4c89ee         mov rsi, r13
0x00006b26      e8f5250000     call sym.rpl_mbrtowc
0x00006b2b      4885c0         test rax, rax
0x00006b2e      4989c7         mov r15, rax
0x00006b31      744e           je 0x6b81
0x00006b33      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006b37      0f8418060000   je 0x7155
0x00006b3d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00006b41      0f849a050000   je 0x70e1
0x00006b47      837c240802     cmp dword [rsp + 8], 2
0x00006b4c      0f94c0         sete al
0x00006b4f      2244240f       and al, byte [rsp + 0xf]
0x00006b53      0f8597010000   jne 0x6cf0
0x00006b59      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00006b60      e8abb1ffff     call sym.imp.iswprint
0x00006b65      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00006b6a      85c0           test eax, eax
0x00006b6c      b800000000     mov eax, 0
0x00006b71      440f44e0       cmove r12d, eax
0x00006b75      4c01fb         add rbx, r15
0x00006b78      e883b1ffff     call sym.imp.mbsinit
0x00006b7d      85c0           test eax, eax
0x00006b7f      7482           je 0x6b03
0x00006b81      4489e2         mov edx, r12d
0x00006b84      4889df         mov rdi, rbx
0x00006b87      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00006b8d      83f201         xor edx, 1
0x00006b90      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00006b95      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00006b9b      2254240d       and dl, byte [rsp + 0xd]
0x00006b9f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00006ba7      4c8b742440     mov r14, qword [rsp + 0x40]
0x00006bac      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00006bb1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00006bb6      4883ff01       cmp rdi, 1
0x00006bba      0f86fb050000   jbe 0x71bb
0x00006bc0      4889f9         mov rcx, rdi
0x00006bc3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00006bc5      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x00006bcb      4801e9         add rcx, rbp
0x00006bce      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00006bd3      e9b6000000     jmp 0x6c8e
0x00006bd8      0f1f84000000.  nop dword [rax + rax]
0x00006be0      837c240802     cmp dword [rsp + 8], 2
0x00006be5      0f94c0         sete al
0x00006be8      4584c9         test r9b, r9b
0x00006beb      0f85af040000   jne 0x70a0
0x00006bf1      4489c6         mov esi, r8d
0x00006bf4      83f601         xor esi, 1
0x00006bf7      4020f0         and al, sil
0x00006bfa      742f           je 0x6c2b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x00006bfc      4d39fd         cmp r13, r15
0x00006bff      7605           jbe 0x6c06
0x00006c01      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00006c06      498d7701       lea rsi, [r15 + 1]
0x00006c0a      4939f5         cmp r13, rsi
0x00006c0d      7606           jbe 0x6c15                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x00006c0f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00006c15      498d7702       lea rsi, [r15 + 2]
0x00006c19      4939f5         cmp r13, rsi
0x00006c1c      7606           jbe 0x6c24
0x00006c1e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00006c24      4983c703       add r15, 3
0x00006c28      4189c0         mov r8d, eax
0x00006c2b      4d39fd         cmp r13, r15
0x00006c2e      7605           jbe 0x6c35
0x00006c30      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00006c35      498d4701       lea rax, [r15 + 1]
0x00006c39      4939c5         cmp r13, rax
0x00006c3c      760d           jbe 0x6c4b
0x00006c3e      89d8           mov eax, ebx
0x00006c40      c0e806         shr al, 6
0x00006c43      83c030         add eax, 0x30
0x00006c46      4388443e01     mov byte [r14 + r15 + 1], al
0x00006c4b      498d4702       lea rax, [r15 + 2]
0x00006c4f      4939c5         cmp r13, rax
0x00006c52      7610           jbe 0x6c64
0x00006c54      89d8           mov eax, ebx
0x00006c56      c0e803         shr al, 3
0x00006c59      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x00006c5c      83c030         add eax, 0x30
0x00006c5f      4388443e02     mov byte [r14 + r15 + 2], al
0x00006c64      83e307         and ebx, 7
0x00006c67      4883c501       add rbp, 1
0x00006c6b      4983c703       add r15, 3
0x00006c6f      83c330         add ebx, 0x30
0x00006c72      4839cd         cmp rbp, rcx
0x00006c75      0f83e5f7ffff   jae 0x6460
0x00006c7b      89d6           mov esi, edx
0x00006c7d      4d39fd         cmp r13, r15
0x00006c80      7604           jbe 0x6c86
0x00006c82      43881c3e       mov byte [r14 + r15], bl
0x00006c86      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00006c8a      4983c701       add r15, 1
0x00006c8e      84d2           test dl, dl
0x00006c90      0f854affffff   jne 0x6be0
0x00006c96      89f0           mov eax, esi
0x00006c98      83f001         xor eax, 1
0x00006c9b      4421c0         and eax, r8d
0x00006c9e      4584d2         test r10b, r10b
0x00006ca1      740e           je 0x6cb1
0x00006ca3      4d39fd         cmp r13, r15
0x00006ca6      7605           jbe 0x6cad
0x00006ca8      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00006cad      4983c701       add r15, 1
0x00006cb1      4883c501       add rbp, 1
0x00006cb5      4839cd         cmp rbp, rcx
0x00006cb8      0f837ef7ffff   jae 0x643c
0x00006cbe      84c0           test al, al
0x00006cc0      0f84f8030000   je 0x70be
0x00006cc6      4d39fd         cmp r13, r15
0x00006cc9      7605           jbe 0x6cd0
0x00006ccb      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00006cd0      498d4701       lea rax, [r15 + 1]
0x00006cd4      4939c5         cmp r13, rax
0x00006cd7      7606           jbe 0x6cdf
0x00006cd9      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00006cdf      4983c702       add r15, 2
0x00006ce3      4531d2         xor r10d, r10d
0x00006ce6      4531c0         xor r8d, r8d
0x00006ce9      eb92           jmp 0x6c7d
0x00006ceb      0f1f440000     nop dword [rax + rax]
0x00006cf0      4983ff01       cmp r15, 1
0x00006cf4      0f845ffeffff   je 0x6b59
0x00006cfa      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00006cff      4a8d0c3f       lea rcx, [rdi + r15]
0x00006d03      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00006d08      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00006d0c      eb0f           jmp 0x6d1d
0x00006d0e      6690           nop
0x00006d10      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00006d14      4939d0         cmp r8, rdx
0x00006d17      0f843cfeffff   je 0x6b59
0x00006d1d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00006d20      83e95b         sub ecx, 0x5b
0x00006d23      80f921         cmp cl, 0x21
0x00006d26      77e8           ja 0x6d10                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00006d28      be01000000     mov esi, 1
0x00006d2d      48d3e6         shl rsi, cl
0x00006d30      4889f1         mov rcx, rsi
0x00006d33      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x00006d3d      4885f1         test rcx, rsi
0x00006d40      74ce           je 0x6d10
0x00006d42      4c8b742440     mov r14, qword [rsp + 0x40]
0x00006d47      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00006d4c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00006d51      c74424080200.  mov dword [rsp + 8], 2
0x00006d59      807c240d00     cmp byte [rsp + 0xd], 0
0x00006d5e      7410           je 0x6d70
0x00006d60      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00006d62      b804000000     mov eax, 4
0x00006d67      0f44442408     cmove eax, dword [rsp + 8]
0x00006d6c      89442408       mov dword [rsp + 8], eax
0x00006d70      4883ec08       sub rsp, 8
0x00006d74      4889e9         mov rcx, rbp
0x00006d77      4c89ee         mov rsi, r13
0x00006d7a      ff742468       push qword [rsp + 0x68]
0x00006d7e      ff742478       push qword [rsp + 0x78]
0x00006d82      4c89f7         mov rdi, r14
0x00006d85      6a00           push 0
0x00006d87      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00006d8f      448b442428     mov r8d, dword [rsp + 0x28]
0x00006d94      488b542430     mov rdx, qword [rsp + 0x30]
0x00006d99      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x00006d9d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00006da2      4883c420       add rsp, 0x20
0x00006da6      4989c7         mov r15, rax
0x00006da9      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00006db1      6448331c2528.  xor rbx, qword fs:[0x28]
0x00006dba      4c89f8         mov rax, r15
0x00006dbd      0f8500060000   jne 0x73c3
0x00006dc3      4881c4b80000.  add rsp, 0xb8
0x00006dca      5b             pop rbx
0x00006dcb      5d             pop rbp
0x00006dcc      415c           pop r12
0x00006dce      415d           pop r13
0x00006dd0      415e           pop r14
0x00006dd2      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00006dd4      c3             ret
0x00006dd5      0f1f00         nop dword [rax]
0x00006dd8      4c89dd         mov rbp, r11
0x00006ddb      e979ffffff     jmp 0x6d59
0x00006de0      4d39fd         cmp r13, r15
0x00006de3      7605           jbe 0x6dea
0x00006de5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00006dea      498d4701       lea rax, [r15 + 1]
0x00006dee      4939c5         cmp r13, rax
0x00006df1      7606           jbe 0x6df9
0x00006df3      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00006df9      498d4702       lea rax, [r15 + 2]
0x00006dfd      4939c5         cmp r13, rax
0x00006e00      0f86ec050000   jbe 0x73f2
0x00006e06      4c89ea         mov rdx, r13
0x00006e09      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00006e0f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00006e14      e9d9fbffff     jmp 0x69f2
0x00006e19      4489e0         mov eax, r12d
0x00006e1c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00006e21      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00006e24      e900f6ffff     jmp 0x6429                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00006e29      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00006e2f      e9c5f9ffff     jmp 0x67f9
0x00006e34      85db           test ebx, ebx
0x00006e36      0f8527f4ffff   jne 0x6263
0x00006e3c      c644240d01     mov byte [rsp + 0xd], 1
0x00006e41      4d85ed         test r13, r13
0x00006e44      0f8590050000   jne 0x73da
0x00006e4a      488d051c4600.  lea rax, [0x0000b46d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00006e51      48c744245000.  mov qword [rsp + 0x50], 0
0x00006e5a      c644240e01     mov byte [rsp + 0xe], 1
0x00006e5f      c644247c00     mov byte [rsp + 0x7c], 0
0x00006e64      4531e4         xor r12d, r12d
0x00006e67      c644240f00     mov byte [rsp + 0xf], 0
0x00006e6c      48c744241801.  mov qword [rsp + 0x18], 1
0x00006e75      4889442448     mov qword [rsp + 0x48], rax
0x00006e7a      41bf01000000   mov r15d, 1
0x00006e80      c74424080200.  mov dword [rsp + 8], 2
0x00006e88      e916f4ffff     jmp 0x62a3                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x00006e8d      0f1f00         nop dword [rax]
0x00006e90      85db           test ebx, ebx
0x00006e92      0f85f5030000   jne 0x728d
0x00006e98      4d85ed         test r13, r13
0x00006e9b      0f8425020000   je 0x70c6
0x00006ea1      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00006ea5      c644240e01     mov byte [rsp + 0xe], 1
0x00006eaa      4531e4         xor r12d, r12d
0x00006ead      c644247c00     mov byte [rsp + 0x7c], 0
0x00006eb2      48c744245000.  mov qword [rsp + 0x50], 0
0x00006ebb      488d05a94500.  lea rax, str.l______l                   ; 0xb46b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00006ec2      c644240f00     mov byte [rsp + 0xf], 0
0x00006ec7      c644240d01     mov byte [rsp + 0xd], 1
0x00006ecc      48c744241801.  mov qword [rsp + 0x18], 1
0x00006ed5      41bf01000000   mov r15d, 1
0x00006edb      4889442448     mov qword [rsp + 0x48], rax
0x00006ee0      e9bef3ffff     jmp 0x62a3
0x00006ee5      488d057f4500.  lea rax, str.l______l                   ; 0xb46b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00006eec      c644240e01     mov byte [rsp + 0xe], 1
0x00006ef1      c644247c00     mov byte [rsp + 0x7c], 0
0x00006ef6      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00006ef9      48c744245000.  mov qword [rsp + 0x50], 0
0x00006f02      c644240f01     mov byte [rsp + 0xf], 1
0x00006f07      c644240d01     mov byte [rsp + 0xd], 1
0x00006f0c      48c744241801.  mov qword [rsp + 0x18], 1
0x00006f15      4531ff         xor r15d, r15d
0x00006f18      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x00006f1d      c74424080500.  mov dword [rsp + 8], 5
0x00006f25      e979f3ffff     jmp 0x62a3
0x00006f2a      c644240e01     mov byte [rsp + 0xe], 1
0x00006f2f      c644247c00     mov byte [rsp + 0x7c], 0
0x00006f34      4531e4         xor r12d, r12d
0x00006f37      48c744245000.  mov qword [rsp + 0x50], 0
0x00006f40      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00006f45      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00006f48      c644240d01     mov byte [rsp + 0xd], 1
0x00006f4d      48c744241800.  mov qword [rsp + 0x18], 0
0x00006f56      48c744244800.  mov qword [rsp + 0x48], 0
0x00006f5f      e93ff3ffff     jmp 0x62a3
0x00006f64      837c24080a     cmp dword [rsp + 8], 0xa
0x00006f69      7456           je 0x6fc1
0x00006f6b      488d35fd4400.  lea rsi, [0x0000b46f]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00006f72      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00006f74      ba05000000     mov edx, 5
0x00006f79      e802abffff     call sym.imp.dcgettext
0x00006f7e      4889c1         mov rcx, rax
0x00006f81      4889442468     mov qword [rsp + 0x68], rax
0x00006f86      488d05e24400.  lea rax, [0x0000b46f]                   ; "`"
0x00006f8d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00006f90      0f8498030000   je 0x732e
0x00006f96      488d35d04400.  lea rsi, [0x0000b46d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00006f9d      31ff           xor edi, edi
0x00006f9f      ba05000000     mov edx, 5
0x00006fa4      e8d7aaffff     call sym.imp.dcgettext
0x00006fa9      4889c1         mov rcx, rax
0x00006fac      4889442460     mov qword [rsp + 0x60], rax
0x00006fb1      488d05b54400.  lea rax, [0x0000b46d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00006fb8      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x00006fbb      0f8483030000   je 0x7344
0x00006fc1      4531ff         xor r15d, r15d
0x00006fc4      85db           test ebx, ebx
0x00006fc6      0f84c1010000   je 0x718d
0x00006fcc      85db           test ebx, ebx
0x00006fce      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00006fd3      0f9544240f     setne byte [rsp + 0xf]
0x00006fd8      4531e4         xor r12d, r12d
0x00006fdb      4889df         mov rdi, rbx
0x00006fde      e8bdaaffff     call sym.imp.strlen
0x00006fe3      48895c2448     mov qword [rsp + 0x48], rbx
0x00006fe8      4889442418     mov qword [rsp + 0x18], rax
0x00006fed      c644240e01     mov byte [rsp + 0xe], 1
0x00006ff2      c644247c00     mov byte [rsp + 0x7c], 0
0x00006ff7      48c744245000.  mov qword [rsp + 0x50], 0
0x00007000      c644240d01     mov byte [rsp + 0xd], 1
0x00007005      e999f2ffff     jmp 0x62a3
0x0000700a      c644240e01     mov byte [rsp + 0xe], 1
0x0000700f      c644247c00     mov byte [rsp + 0x7c], 0
0x00007014      4531e4         xor r12d, r12d
0x00007017      48c744245000.  mov qword [rsp + 0x50], 0
0x00007020      c644240f00     mov byte [rsp + 0xf], 0
0x00007025      4531ff         xor r15d, r15d
0x00007028      c644240d00     mov byte [rsp + 0xd], 0
0x0000702d      48c744241800.  mov qword [rsp + 0x18], 0
0x00007036      48c744244800.  mov qword [rsp + 0x48], 0
0x0000703f      e95ff2ffff     jmp 0x62a3
0x00007044      c644240e01     mov byte [rsp + 0xe], 1
0x00007049      c644247c00     mov byte [rsp + 0x7c], 0
0x0000704e      4531e4         xor r12d, r12d
0x00007051      48c744245000.  mov qword [rsp + 0x50], 0
0x0000705a      c644240f01     mov byte [rsp + 0xf], 1
0x0000705f      c644240d01     mov byte [rsp + 0xd], 1
0x00007064      e91af2ffff     jmp 0x6283
0x00007069      4d39fd         cmp r13, r15
0x0000706c      7605           jbe 0x7073
0x0000706e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00007073      488d4102       lea rax, [rcx + 2]
0x00007077      4939c5         cmp r13, rax
0x0000707a      7606           jbe 0x7082
0x0000707c      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00007082      4489e0         mov eax, r12d
0x00007085      4c8d7903       lea r15, [rcx + 3]
0x00007089      4531e4         xor r12d, r12d
0x0000708c      bb30000000     mov ebx, 0x30                           ; '0'
0x00007091      e962f3ffff     jmp 0x63f8
0x00007096      662e0f1f8400.  nop word cs:[rax + rax]
0x000070a0      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000070a5      4c89dd         mov rbp, r11
0x000070a8      885c240d       mov byte [rsp + 0xd], bl
0x000070ac      e9a8fcffff     jmp 0x6d59
0x000070b1      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000070b6      4531e4         xor r12d, r12d
0x000070b9      e902fbffff     jmp 0x6bc0
0x000070be      4531d2         xor r10d, r10d
0x000070c1      e9b7fbffff     jmp 0x6c7d
0x000070c6      48c744245000.  mov qword [rsp + 0x50], 0
0x000070cf      c644240e01     mov byte [rsp + 0xe], 1
0x000070d4      4531e4         xor r12d, r12d
0x000070d7      c644247c00     mov byte [rsp + 0x7c], 0
0x000070dc      e9dafdffff     jmp 0x6ebb
0x000070e1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000070e6      4c89f6         mov rsi, r14
0x000070e9      4c89e9         mov rcx, r13
0x000070ec      4889d8         mov rax, rbx
0x000070ef      4889df         mov rdi, rbx
0x000070f2      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000070f8      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000070fd      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00007105      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00007108      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000710e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00007116      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000711b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00007120      7326           jae 0x7148
0x00007122      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00007125      7510           jne 0x7137
0x00007127      eb1f           jmp 0x7148
0x00007129      0f1f80000000.  nop dword [rax]
0x00007130      41803c0100     cmp byte [r9 + rax], 0
0x00007135      740e           je 0x7145
0x00007137      4883c001       add rax, 1
0x0000713b      488d540500     lea rdx, [rbp + rax]
0x00007140      4939d3         cmp r11, rdx
0x00007143      77eb           ja 0x7130
0x00007145      4889c7         mov rdi, rax
0x00007148      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000714d      4531e4         xor r12d, r12d
0x00007150      e961faffff     jmp 0x6bb6
0x00007155      4889df         mov rdi, rbx
0x00007158      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000715e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00007163      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00007169      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00007171      4531e4         xor r12d, r12d
0x00007174      4c8b742440     mov r14, qword [rsp + 0x40]
0x00007179      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000717e      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00007183      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00007188      e929faffff     jmp 0x6bb6
0x0000718d      488b542468     mov rdx, qword [rsp + 0x68]
0x00007192      0fb602         movzx eax, byte [rdx]
0x00007195      84c0           test al, al
0x00007197      0f842ffeffff   je 0x6fcc
0x0000719d      0f1f00         nop dword [rax]
0x000071a0      4d39fd         cmp r13, r15
0x000071a3      7604           jbe 0x71a9
0x000071a5      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x000071a9      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x000071ad      420fb6043a     movzx eax, byte [rdx + r15]
0x000071b2      84c0           test al, al
0x000071b4      75ea           jne 0x71a0
0x000071b6      e911feffff     jmp 0x6fcc
0x000071bb      89d0           mov eax, edx
0x000071bd      e955f5ffff     jmp 0x6717
0x000071c2      0fb61c08       movzx ebx, byte [rax + rcx]
0x000071c6      80fb3e         cmp bl, 0x3e
0x000071c9      0f8771f8ffff   ja 0x6a40
0x000071cf      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x000071d9      480fa3d8       bt rax, rbx
0x000071dd      0f835df8ffff   jae 0x6a40
0x000071e3      807c240f00     cmp byte [rsp + 0xf], 0
0x000071e8      0f85e4010000   jne 0x73d2                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x000071ee      4d39fd         cmp r13, r15
0x000071f1      7605           jbe 0x71f8
0x000071f3      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x000071f8      498d4701       lea rax, [r15 + 1]
0x000071fc      4939c5         cmp r13, rax
0x000071ff      7606           jbe 0x7207
0x00007201      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00007207      498d4702       lea rax, [r15 + 2]
0x0000720b      4939c5         cmp r13, rax
0x0000720e      7606           jbe 0x7216
0x00007210      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00007216      498d4703       lea rax, [r15 + 3]
0x0000721a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x0000721d      7606           jbe 0x7225
0x0000721f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00007225      4983c704       add r15, 4
0x00007229      31d2           xor edx, edx
0x0000722b      4531e4         xor r12d, r12d
0x0000722e      31c0           xor eax, eax
0x00007230      4889cd         mov rbp, rcx
0x00007233      e9c0f1ffff     jmp 0x63f8
0x00007238      85db           test ebx, ebx
0x0000723a      0f8488010000   je 0x73c8
0x00007240      488d05264200.  lea rax, [0x0000b46d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00007247      c644240e01     mov byte [rsp + 0xe], 1
0x0000724c      c644247c00     mov byte [rsp + 0x7c], 0
0x00007251      4531e4         xor r12d, r12d
0x00007254      48c744245000.  mov qword [rsp + 0x50], 0
0x0000725d      c644240f01     mov byte [rsp + 0xf], 1
0x00007262      c644240d00     mov byte [rsp + 0xd], 0
0x00007267      48c744241801.  mov qword [rsp + 0x18], 1
0x00007270      4531ff         xor r15d, r15d
0x00007273      4889442448     mov qword [rsp + 0x48], rax
0x00007278      e926f0ffff     jmp 0x62a3
0x0000727d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00007280      4c89dd         mov rbp, r11
0x00007283      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00007288      e9ccfaffff     jmp 0x6d59
0x0000728d      488d05d74100.  lea rax, str.l______l                   ; 0xb46b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00007294      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00007299      c644247c00     mov byte [rsp + 0x7c], 0
0x0000729e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x000072a1      48c744245000.  mov qword [rsp + 0x50], 0
0x000072aa      c644240f01     mov byte [rsp + 0xf], 1
0x000072af      c644240d01     mov byte [rsp + 0xd], 1
0x000072b4      48c744241801.  mov qword [rsp + 0x18], 1
0x000072bd      4531ff         xor r15d, r15d
0x000072c0      4889442448     mov qword [rsp + 0x48], rax
0x000072c5      e9d9efffff     jmp 0x62a3
0x000072ca      89d0           mov eax, edx
0x000072cc      488b5c2448     mov rbx, qword [rsp + 0x48]
0x000072d1      4885db         test rbx, rbx
0x000072d4      742c           je 0x7302
0x000072d6      84c0           test al, al
0x000072d8      7428           je 0x7302
0x000072da      0fb60b         movzx ecx, byte [rbx]
0x000072dd      4889d8         mov rax, rbx
0x000072e0      84c9           test cl, cl
0x000072e2      741e           je 0x7302
0x000072e4      4c89fa         mov rdx, r15
0x000072e7      4c29f8         sub rax, r15
0x000072ea      4939d5         cmp r13, rdx
0x000072ed      7604           jbe 0x72f3
0x000072ef      41880c16       mov byte [r14 + rdx], cl
0x000072f3      4883c201       add rdx, 1
0x000072f7      0fb60c10       movzx ecx, byte [rax + rdx]
0x000072fb      84c9           test cl, cl
0x000072fd      75eb           jne 0x72ea
0x000072ff      4989d7         mov r15, rdx
0x00007302      4d39fd         cmp r13, r15
0x00007305      0f869efaffff   jbe 0x6da9
0x0000730b      43c6043e00     mov byte [r14 + r15], 0
0x00007310      e994faffff     jmp 0x6da9
0x00007315      837c240802     cmp dword [rsp + 8], 2
0x0000731a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000731f      4c89dd         mov rbp, r11
0x00007322      0f94c0         sete al
0x00007325      885c240d       mov byte [rsp + 0xd], bl
0x00007329      e92bfaffff     jmp 0x6d59
0x0000732e      8b742408       mov esi, dword [rsp + 8]
0x00007332      4889cf         mov rdi, rcx
0x00007335      e8a6edffff     call sym.gettext_quote.part.1
0x0000733a      4889442468     mov qword [rsp + 0x68], rax
0x0000733f      e952fcffff     jmp 0x6f96
0x00007344      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00007348      4889cf         mov rdi, rcx
0x0000734b      e890edffff     call sym.gettext_quote.part.1
0x00007350      4889442460     mov qword [rsp + 0x60], rax
0x00007355      e967fcffff     jmp 0x6fc1
0x0000735a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000735f      4c89dd         mov rbp, r11
0x00007362      89d0           mov eax, edx
0x00007364      885c240d       mov byte [rsp + 0xd], bl
0x00007368      e9ecf9ffff     jmp 0x6d59
0x0000736d      4883ec08       sub rsp, 8
0x00007371      41b805000000   mov r8d, 5
0x00007377      4c89d9         mov rcx, r11
0x0000737a      ff742468       push qword [rsp + 0x68]
0x0000737e      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00007382      4c89f7         mov rdi, r14
0x00007385      ff742438       push qword [rsp + 0x38]
0x00007389      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00007391      488b542430     mov rdx, qword [rsp + 0x30]
0x00007396      488b742470     mov rsi, qword [rsp + 0x70]
0x0000739b      e830eeffff     call sym.quotearg_buffer_restyled
0x000073a0      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x000073a4      4989c7         mov r15, rax
0x000073a7      e9fdf9ffff     jmp 0x6da9
0x000073ac      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x000073b1      e916ffffff     jmp 0x72cc
0x000073b6      c74424080200.  mov dword [rsp + 8], 2
0x000073be      e996f9ffff     jmp 0x6d59
0x000073c3      e8e8a6ffff     call sym.imp.__stack_chk_fail
0x000073c8      c644240d00     mov byte [rsp + 0xd], 0
0x000073cd      e96ffaffff     jmp 0x6e41
0x000073d2      4c89dd         mov rbp, r11
0x000073d5      e996f9ffff     jmp 0x6d70
0x000073da      c644240e01     mov byte [rsp + 0xe], 1
0x000073df      31c0           xor eax, eax
0x000073e1      4531e4         xor r12d, r12d
0x000073e4      48c744245000.  mov qword [rsp + 0x50], 0
0x000073ed      e9a2f5ffff     jmp 0x6994
0x000073f2      4c89ea         mov rdx, r13
0x000073f5      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000073fa      e9f3f5ffff     jmp 0x69f2
0x000073ff      e8bca5ffff     call sym.imp.abort
0x00007404      6690           nop
0x00007406      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00007410      4157           push r15
0x00007412      4156           push r14
0x00007414      4c63ff         movsxd r15, edi
0x00007417      4155           push r13
0x00007419      4154           push r12
0x0000741b      4989d6         mov r14, rdx
0x0000741e      55             push rbp
0x0000741f      53             push rbx
0x00007420      4889cd         mov rbp, rcx
0x00007423      4883ec28       sub rsp, 0x28
0x00007427      4889742408     mov qword [rsp + 8], rsi
0x0000742c      e89fa5ffff     call sym.imp.__errno_location
0x00007431      4989c5         mov r13, rax
0x00007434      8b00           mov eax, dword [rax]
0x00007436      4585ff         test r15d, r15d
0x00007439      488b1d606c20.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x20e0a0:8]=0x20e0b0 obj.slotvec0
0x00007440      89442418       mov dword [rsp + 0x18], eax
0x00007444      0f8867010000   js 0x75b1
0x0000744a      44393d476c20.  cmp dword [obj.nslots], r15d            ; [0x20e098:4]=1
0x00007451      7f62           jg 0x74b5
0x00007453      4181ffffffff.  cmp r15d, 0x7fffffff
0x0000745a      0f8456010000   je 0x75b6
0x00007460      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00007464      488d05456c20.  lea rax, obj.slotvec0                   ; 0x20e0b0
0x0000746b      4963f4         movsxd rsi, r12d
0x0000746e      48c1e604       shl rsi, 4
0x00007472      4839c3         cmp rbx, rax
0x00007475      0f8415010000   je 0x7590
0x0000747b      4889df         mov rdi, rbx
0x0000747e      e86d0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00007483      4889c3         mov rbx, rax
0x00007486      488905136c20.  mov qword [obj.slotvec], rax            ; [0x20e0a0:8]=0x20e0b0 obj.slotvec0
0x0000748d      48633d046c20.  movsxd rdi, dword [obj.nslots]          ; [0x20e098:4]=1
0x00007494      4489e2         mov edx, r12d
0x00007497      31f6           xor esi, esi
0x00007499      29fa           sub edx, edi
0x0000749b      48c1e704       shl rdi, 4
0x0000749f      4863d2         movsxd rdx, edx
0x000074a2      4801df         add rdi, rbx
0x000074a5      48c1e204       shl rdx, 4
0x000074a9      e892a6ffff     call sym.imp.memset
0x000074ae      448925e36b20.  mov dword [obj.nslots], r12d            ; [0x20e098:4]=1
0x000074b5      8b4504         mov eax, dword [rbp + 4]
0x000074b8      49c1e704       shl r15, 4
0x000074bc      4883ec08       sub rsp, 8
0x000074c0      4c01fb         add rbx, r15
0x000074c3      4c8d7d08       lea r15, [rbp + 8]
0x000074c7      448b4500       mov r8d, dword [rbp]
0x000074cb      4c8b1b         mov r11, qword [rbx]
0x000074ce      4c8b6308       mov r12, qword [rbx + 8]
0x000074d2      4c89f1         mov rcx, r14
0x000074d5      83c801         or eax, 1
0x000074d8      89442424       mov dword [rsp + 0x24], eax
0x000074dc      ff7530         push qword [rbp + 0x30]
0x000074df      4189c1         mov r9d, eax
0x000074e2      ff7528         push qword [rbp + 0x28]
0x000074e5      4157           push r15
0x000074e7      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x000074ea      488b542428     mov rdx, qword [rsp + 0x28]
0x000074ef      4c89e7         mov rdi, r12
0x000074f2      4c895c2430     mov qword [rsp + 0x30], r11
0x000074f7      e8d4ecffff     call sym.quotearg_buffer_restyled
0x000074fc      4883c420       add rsp, 0x20
0x00007500      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00007505      4939c3         cmp r11, rax
0x00007508      7767           ja 0x7571
0x0000750a      488d7001       lea rsi, [rax + 1]
0x0000750e      488d05ab6c20.  lea rax, obj.slot0                      ; 0x20e1c0
0x00007515      4939c4         cmp r12, rax
0x00007518      488933         mov qword [rbx], rsi
0x0000751b      7412           je 0x752f
0x0000751d      4c89e7         mov rdi, r12
0x00007520      4889742410     mov qword [rsp + 0x10], rsi
0x00007525      e886a4ffff     call sym.imp.free
0x0000752a      488b742410     mov rsi, qword [rsp + 0x10]
0x0000752f      4889f7         mov rdi, rsi
0x00007532      4889742410     mov qword [rsp + 0x10], rsi
0x00007537      e8540e0000     call sym.xmalloc
0x0000753c      4883ec08       sub rsp, 8
0x00007540      48894308       mov qword [rbx + 8], rax
0x00007544      448b4500       mov r8d, dword [rbp]
0x00007548      ff7530         push qword [rbp + 0x30]
0x0000754b      ff7528         push qword [rbp + 0x28]
0x0000754e      4c89f1         mov rcx, r14
0x00007551      4157           push r15
0x00007553      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00007558      4889c7         mov rdi, rax
0x0000755b      488b542428     mov rdx, qword [rsp + 0x28]
0x00007560      488b742430     mov rsi, qword [rsp + 0x30]
0x00007565      4989c4         mov r12, rax
0x00007568      e863ecffff     call sym.quotearg_buffer_restyled
0x0000756d      4883c420       add rsp, 0x20
0x00007571      8b442418       mov eax, dword [rsp + 0x18]
0x00007575      41894500       mov dword [r13], eax
0x00007579      4883c428       add rsp, 0x28
0x0000757d      4c89e0         mov rax, r12
0x00007580      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00007581      5d             pop rbp
0x00007582      415c           pop r12
0x00007584      415d           pop r13
0x00007586      415e           pop r14
0x00007588      415f           pop r15
0x0000758a      c3             ret
0x0000758b      0f1f440000     nop dword [rax + rax]
0x00007590      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00007592      e8590e0000     call sym.xrealloc
0x00007597      660f6f05116b.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x0000759f      4889c3         mov rbx, rax
0x000075a2      488905f76a20.  mov qword [obj.slotvec], rax            ; [0x20e0a0:8]=0x20e0b0 obj.slotvec0
0x000075a9      0f1100         movups xmmword [rax], xmm0
0x000075ac      e9dcfeffff     jmp 0x748d
0x000075b1      e80aa4ffff     call sym.imp.abort
0x000075b6      e825100000     call sym.xalloc_die
0x000075bb      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x000075c0      4154           push r12
0x000075c2      55             push rbp
0x000075c3      53             push rbx
0x000075c4      4889fb         mov rbx, rdi
0x000075c7      e804a4ffff     call sym.imp.__errno_location
0x000075cc      448b20         mov r12d, dword [rax]
0x000075cf      4889c5         mov rbp, rax
0x000075d2      488d05e76c20.  lea rax, obj.default_quoting_options    ; 0x20e2c0
0x000075d9      4885db         test rbx, rbx
0x000075dc      be38000000     mov esi, 0x38                           ; '8'
0x000075e1      480f44d8       cmove rbx, rax
0x000075e5      4889df         mov rdi, rbx
0x000075e8      e8a30f0000     call sym.xmemdup
0x000075ed      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x000075f1      5b             pop rbx
0x000075f2      5d             pop rbp
0x000075f3      415c           pop r12
0x000075f5      c3             ret
0x000075f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00007600      488d05b96c20.  lea rax, obj.default_quoting_options    ; 0x20e2c0
0x00007607      4885ff         test rdi, rdi
0x0000760a      480f44f8       cmove rdi, rax
0x0000760e      8b07           mov eax, dword [rdi]
0x00007610      c3             ret
0x00007611      0f1f440000     nop dword [rax + rax]
0x00007616      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00007620      488d05996c20.  lea rax, obj.default_quoting_options    ; 0x20e2c0
0x00007627      4885ff         test rdi, rdi
0x0000762a      480f44f8       cmove rdi, rax
0x0000762e      8937           mov dword [rdi], esi
0x00007630      c3             ret
0x00007631      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00007636      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00007640      488d05796c20.  lea rax, obj.default_quoting_options    ; 0x20e2c0
0x00007647      4885ff         test rdi, rdi
0x0000764a      89f1           mov ecx, esi
0x0000764c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00007650      89f0           mov eax, esi
0x00007652      83e11f         and ecx, 0x1f
0x00007655      c0e805         shr al, 5
0x00007658      0fb6c0         movzx eax, al
0x0000765b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00007660      8b37           mov esi, dword [rdi]
0x00007662      89f0           mov eax, esi
0x00007664      d3e8           shr eax, cl
0x00007666      31c2           xor edx, eax
0x00007668      83e001         and eax, 1
0x0000766b      83e201         and edx, 1
0x0000766e      d3e2           shl edx, cl
0x00007670      31f2           xor edx, esi
0x00007672      8917           mov dword [rdi], edx
0x00007674      c3             ret
0x00007675      90             nop
0x00007676      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00007680      488d05396c20.  lea rax, obj.default_quoting_options    ; 0x20e2c0
0x00007687      4885ff         test rdi, rdi
0x0000768a      480f44f8       cmove rdi, rax
0x0000768e      8b4704         mov eax, dword [rdi + 4]
0x00007691      897704         mov dword [rdi + 4], esi
0x00007694      c3             ret
0x00007695      90             nop
0x00007696      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x000076a0      488d05196c20.  lea rax, obj.default_quoting_options    ; 0x20e2c0
0x000076a7      4885ff         test rdi, rdi
0x000076aa      480f44f8       cmove rdi, rax
0x000076ae      4885f6         test rsi, rsi
0x000076b1      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x000076b7      740e           je 0x76c7
0x000076b9      4885d2         test rdx, rdx
0x000076bc      7409           je 0x76c7
0x000076be      48897728       mov qword [rdi + 0x28], rsi
0x000076c2      48895730       mov qword [rdi + 0x30], rdx
0x000076c6      c3             ret
0x000076c7      4883ec08       sub rsp, 8
0x000076cb      e8f0a2ffff     call sym.imp.abort
;-- quotearg_buffer:
0x000076d0      4157           push r15
0x000076d2      4156           push r14
0x000076d4      488d05e56b20.  lea rax, obj.default_quoting_options    ; 0x20e2c0
0x000076db      4155           push r13
0x000076dd      4154           push r12
0x000076df      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x000076e2      55             push rbp
0x000076e3      53             push rbx
0x000076e4      4c89c3         mov rbx, r8
0x000076e7      4989f6         mov r14, rsi
0x000076ea      4989d7         mov r15, rdx
0x000076ed      4883ec18       sub rsp, 0x18
0x000076f1      4d85c0         test r8, r8
0x000076f4      480f44d8       cmove rbx, rax
0x000076f8      48894c2408     mov qword [rsp + 8], rcx
0x000076fd      e8cea2ffff     call sym.imp.__errno_location
0x00007702      448b20         mov r12d, dword [rax]
0x00007705      4889c5         mov rbp, rax
0x00007708      488d4308       lea rax, [rbx + 8]
0x0000770c      4883ec08       sub rsp, 8
0x00007710      448b4b04       mov r9d, dword [rbx + 4]
0x00007714      ff7330         push qword [rbx + 0x30]
0x00007717      448b03         mov r8d, dword [rbx]
0x0000771a      ff7328         push qword [rbx + 0x28]
0x0000771d      4c89fa         mov rdx, r15
0x00007720      50             push rax
0x00007721      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00007726      4c89f6         mov rsi, r14
0x00007729      4c89ef         mov rdi, r13
0x0000772c      e89feaffff     call sym.quotearg_buffer_restyled
0x00007731      44896500       mov dword [rbp], r12d
0x00007735      4883c438       add rsp, 0x38
0x00007739      5b             pop rbx
0x0000773a      5d             pop rbp
0x0000773b      415c           pop r12
0x0000773d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000773f      415e           pop r14
0x00007741      415f           pop r15
0x00007743      c3             ret
0x00007744      6690           nop
0x00007746      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00007750      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00007752      4156           push r14
0x00007754      488d05656b20.  lea rax, obj.default_quoting_options    ; 0x20e2c0
0x0000775b      4155           push r13
0x0000775d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x0000775f      4989d4         mov r12, rdx
0x00007762      55             push rbp
0x00007763      53             push rbx
0x00007764      4889cb         mov rbx, rcx
0x00007767      4989fe         mov r14, rdi
0x0000776a      4989f7         mov r15, rsi
0x0000776d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00007771      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00007774      480f44d8       cmove rbx, rax
0x00007778      31ed           xor ebp, ebp
0x0000777a      e851a2ffff     call sym.imp.__errno_location
0x0000777f      4d85e4         test r12, r12
0x00007782      4989c5         mov r13, rax
0x00007785      8b00           mov eax, dword [rax]
0x00007787      400f94c5       sete bpl
0x0000778b      0b6b04         or ebp, dword [rbx + 4]
0x0000778e      4c8d5308       lea r10, [rbx + 8]
0x00007792      4883ec08       sub rsp, 8
0x00007796      448b03         mov r8d, dword [rbx]
0x00007799      4c89f9         mov rcx, r15
0x0000779c      89442414       mov dword [rsp + 0x14], eax
0x000077a0      ff7330         push qword [rbx + 0x30]
0x000077a3      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x000077a6      ff7328         push qword [rbx + 0x28]
0x000077a9      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x000077ab      31f6           xor esi, esi
0x000077ad      4189e9         mov r9d, ebp
0x000077b0      31ff           xor edi, edi
0x000077b2      4c89542440     mov qword [rsp + 0x40], r10
0x000077b7      e814eaffff     call sym.quotearg_buffer_restyled
0x000077bc      488d7001       lea rsi, [rax + 1]
0x000077c0      4889442448     mov qword [rsp + 0x48], rax
0x000077c5      4883c420       add rsp, 0x20
0x000077c9      4889f7         mov rdi, rsi
0x000077cc      4889742418     mov qword [rsp + 0x18], rsi
0x000077d1      e8ba0b0000     call sym.xmalloc
0x000077d6      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x000077db      4883ec08       sub rsp, 8
0x000077df      ff7330         push qword [rbx + 0x30]
0x000077e2      ff7328         push qword [rbx + 0x28]
0x000077e5      4c8b542438     mov r10, qword [rsp + 0x38]
0x000077ea      4189e9         mov r9d, ebp
0x000077ed      448b03         mov r8d, dword [rbx]
0x000077f0      4c89f9         mov rcx, r15
0x000077f3      4c89f2         mov rdx, r14
0x000077f6      4889c7         mov rdi, rax
0x000077f9      4152           push r10
0x000077fb      488b742438     mov rsi, qword [rsp + 0x38]
0x00007800      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00007805      8b44242c       mov eax, dword [rsp + 0x2c]
0x00007809      4883c420       add rsp, 0x20
0x0000780d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00007810      41894500       mov dword [r13], eax
0x00007814      7409           je 0x781f
0x00007816      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000781b      4d891c24       mov qword [r12], r11
0x0000781f      488b442410     mov rax, qword [rsp + 0x10]
0x00007824      4883c438       add rsp, 0x38
0x00007828      5b             pop rbx
0x00007829      5d             pop rbp
0x0000782a      415c           pop r12
0x0000782c      415d           pop r13
0x0000782e      415e           pop r14
0x00007830      415f           pop r15
0x00007832      c3             ret
0x00007833      0f1f00         nop dword [rax]
0x00007836      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00007840      4889d1         mov rcx, rdx
0x00007843      31d2           xor edx, edx
0x00007845      e906ffffff     jmp sym.quotearg_alloc_mem
0x0000784a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00007850      8b0542682000   mov eax, dword [obj.nslots]             ; [0x20e098:4]=1
0x00007856      4154           push r12
0x00007858      4c8b25416820.  mov r12, qword [obj.slotvec]            ; [0x20e0a0:8]=0x20e0b0 obj.slotvec0
0x0000785f      55             push rbp
0x00007860      53             push rbx
0x00007861      83f801         cmp eax, 1
0x00007864      7e2b           jle 0x7891                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00007866      83e802         sub eax, 2
0x00007869      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x0000786e      48c1e004       shl rax, 4
0x00007872      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00007877      660f1f840000.  nop word [rax + rax]
0x00007880      488b3b         mov rdi, qword [rbx]
0x00007883      4883c310       add rbx, 0x10
0x00007887      e824a1ffff     call sym.imp.free
0x0000788c      4839eb         cmp rbx, rbp
0x0000788f      75ef           jne 0x7880
0x00007891      498b7c2408     mov rdi, qword [r12 + 8]
0x00007896      488d1d236920.  lea rbx, obj.slot0                      ; 0x20e1c0
0x0000789d      4839df         cmp rdi, rbx
0x000078a0      7417           je 0x78b9
0x000078a2      e809a1ffff     call sym.imp.free
0x000078a7      48c705fe6720.  mov qword [obj.slotvec0], 0x100         ; [0x20e0b0:8]=256
0x000078b2      48891dff6720.  mov qword [0x0020e0b8], rbx             ; [0x20e0b8:8]=0x20e1c0 obj.slot0
0x000078b9      488d1df06720.  lea rbx, obj.slotvec0                   ; 0x20e0b0
0x000078c0      4939dc         cmp r12, rbx
0x000078c3      740f           je 0x78d4
0x000078c5      4c89e7         mov rdi, r12
0x000078c8      e8e3a0ffff     call sym.imp.free
0x000078cd      48891dcc6720.  mov qword [obj.slotvec], rbx            ; [0x20e0a0:8]=0x20e0b0 obj.slotvec0
0x000078d4      5b             pop rbx
0x000078d5      c705b9672000.  mov dword [obj.nslots], 1               ; [0x20e098:4]=1
0x000078df      5d             pop rbp
0x000078e0      415c           pop r12
0x000078e2      c3             ret
0x000078e3      0f1f00         nop dword [rax]
0x000078e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x000078f0      488d0dc96920.  lea rcx, obj.default_quoting_options    ; 0x20e2c0
0x000078f7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000078fe      e90dfbffff     jmp sym.quotearg_n_options
0x00007903      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00007906      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00007910      488d0da96920.  lea rcx, obj.default_quoting_options    ; 0x20e2c0
0x00007917      e9f4faffff     jmp sym.quotearg_n_options
0x0000791c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00007920      488d0d996920.  lea rcx, obj.default_quoting_options    ; 0x20e2c0
0x00007927      4889fe         mov rsi, rdi
0x0000792a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00007931      31ff           xor edi, edi
0x00007933      e9d8faffff     jmp sym.quotearg_n_options
0x00007938      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00007940      488d0d796920.  lea rcx, obj.default_quoting_options    ; 0x20e2c0
0x00007947      4889f2         mov rdx, rsi
0x0000794a      4889fe         mov rsi, rdi
0x0000794d      31ff           xor edi, edi
0x0000794f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00007954      6690           nop
0x00007956      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00007960      4883ec48       sub rsp, 0x48
0x00007964      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00007967      64488b142528.  mov rdx, qword fs:[0x28]
0x00007970      4889542438     mov qword [rsp + 0x38], rdx
0x00007975      31d2           xor edx, edx
0x00007977      83fe0a         cmp esi, 0xa
0x0000797a      7468           je 0x79e4
0x0000797c      893424         mov dword [rsp], esi
0x0000797f      4889e1         mov rcx, rsp
0x00007982      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00007989      4889c6         mov rsi, rax
0x0000798c      48c744240400.  mov qword [rsp + 4], 0
0x00007995      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000799e      48c744241400.  mov qword [rsp + 0x14], 0
0x000079a7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000079b0      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x000079b9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000079c2      c74424340000.  mov dword [rsp + 0x34], 0
0x000079ca      e841faffff     call sym.quotearg_n_options
0x000079cf      488b4c2438     mov rcx, qword [rsp + 0x38]
0x000079d4      6448330c2528.  xor rcx, qword fs:[0x28]
0x000079dd      750a           jne 0x79e9                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x000079df      4883c448       add rsp, 0x48
0x000079e3      c3             ret
0x000079e4      e8d79fffff     call sym.imp.abort
0x000079e9      e8c2a0ffff     call sym.imp.__stack_chk_fail
0x000079ee      6690           nop
;-- quotearg_n_style_mem:
0x000079f0      4883ec48       sub rsp, 0x48
0x000079f4      4889d0         mov rax, rdx
0x000079f7      4889ca         mov rdx, rcx
0x000079fa      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00007a03      48894c2438     mov qword [rsp + 0x38], rcx
0x00007a08      31c9           xor ecx, ecx
0x00007a0a      83fe0a         cmp esi, 0xa
0x00007a0d      7461           je 0x7a70
0x00007a0f      893424         mov dword [rsp], esi
0x00007a12      4889e1         mov rcx, rsp
0x00007a15      4889c6         mov rsi, rax
0x00007a18      48c744240400.  mov qword [rsp + 4], 0
0x00007a21      48c744240c00.  mov qword [rsp + 0xc], 0
0x00007a2a      48c744241400.  mov qword [rsp + 0x14], 0
0x00007a33      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00007a3c      48c744242400.  mov qword [rsp + 0x24], 0
0x00007a45      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00007a4e      c74424340000.  mov dword [rsp + 0x34], 0
0x00007a56      e8b5f9ffff     call sym.quotearg_n_options
0x00007a5b      488b542438     mov rdx, qword [rsp + 0x38]
0x00007a60      644833142528.  xor rdx, qword fs:[0x28]
0x00007a69      750a           jne 0x7a75
0x00007a6b      4883c448       add rsp, 0x48
0x00007a6f      c3             ret
0x00007a70      e84b9fffff     call sym.imp.abort
0x00007a75      e836a0ffff     call sym.imp.__stack_chk_fail
0x00007a7a      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00007a80      4889f2         mov rdx, rsi
0x00007a83      89fe           mov esi, edi
0x00007a85      31ff           xor edi, edi
0x00007a87      e9d4feffff     jmp sym.quotearg_n_style
0x00007a8c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00007a90      4889d1         mov rcx, rdx
0x00007a93      4889f2         mov rdx, rsi
0x00007a96      89fe           mov esi, edi
0x00007a98      31ff           xor edi, edi
0x00007a9a      e951ffffff     jmp sym.quotearg_n_style_mem
0x00007a9f      90             nop
;-- quotearg_char_mem:
0x00007aa0      4883ec48       sub rsp, 0x48
0x00007aa4      89d1           mov ecx, edx
0x00007aa6      64488b042528.  mov rax, qword fs:[0x28]
0x00007aaf      4889442438     mov qword [rsp + 0x38], rax
0x00007ab4      31c0           xor eax, eax
0x00007ab6      488b05336820.  mov rax, qword [0x0020e2f0]             ; [0x20e2f0:8]=0
0x00007abd      4989e0         mov r8, rsp
0x00007ac0      83e11f         and ecx, 0x1f
0x00007ac3      660f6f05f567.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00007acb      4889442430     mov qword [rsp + 0x30], rax
0x00007ad0      89d0           mov eax, edx
0x00007ad2      0f290424       movaps xmmword [rsp], xmm0
0x00007ad6      c0e805         shr al, 5
0x00007ad9      0fb6c0         movzx eax, al
0x00007adc      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00007ae1      660f6f05e767.  movdqa xmm0, xmmword [0x0020e2d0]
0x00007ae9      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00007aee      660f6f05ea67.  movdqa xmm0, xmmword [0x0020e2e0]
0x00007af6      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00007afb      418b11         mov edx, dword [r9]
0x00007afe      89d0           mov eax, edx
0x00007b00      d3e8           shr eax, cl
0x00007b02      f7d0           not eax
0x00007b04      83e001         and eax, 1
0x00007b07      d3e0           shl eax, cl
0x00007b09      4c89c1         mov rcx, r8
0x00007b0c      31d0           xor eax, edx
0x00007b0e      4889f2         mov rdx, rsi
0x00007b11      4889fe         mov rsi, rdi
0x00007b14      418901         mov dword [r9], eax
0x00007b17      31ff           xor edi, edi
0x00007b19      e8f2f8ffff     call sym.quotearg_n_options
0x00007b1e      488b742438     mov rsi, qword [rsp + 0x38]
0x00007b23      644833342528.  xor rsi, qword fs:[0x28]
0x00007b2c      7505           jne 0x7b33
0x00007b2e      4883c448       add rsp, 0x48
0x00007b32      c3             ret
0x00007b33      e8789fffff     call sym.imp.__stack_chk_fail
0x00007b38      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00007b40      400fbed6       movsx edx, sil
0x00007b44      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00007b4b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00007b50      ba3a000000     mov edx, 0x3a                           ; ':'
0x00007b55      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00007b5c      e93fffffff     jmp sym.quotearg_char_mem
0x00007b61      0f1f440000     nop dword [rax + rax]
0x00007b66      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00007b70      ba3a000000     mov edx, 0x3a                           ; ':'
0x00007b75      e926ffffff     jmp sym.quotearg_char_mem
0x00007b7a      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00007b80      4883ec48       sub rsp, 0x48
0x00007b84      4889d0         mov rax, rdx
0x00007b87      64488b142528.  mov rdx, qword fs:[0x28]
0x00007b90      4889542438     mov qword [rsp + 0x38], rdx
0x00007b95      31d2           xor edx, edx
0x00007b97      83fe0a         cmp esi, 0xa
0x00007b9a      7468           je 0x7c04
0x00007b9c      893424         mov dword [rsp], esi
0x00007b9f      4889e1         mov rcx, rsp
0x00007ba2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00007ba9      4889c6         mov rsi, rax
0x00007bac      48c744240400.  mov qword [rsp + 4], 0
0x00007bb5      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x00007bbe      48c744241400.  mov qword [rsp + 0x14], 0
0x00007bc7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00007bd0      48c744242400.  mov qword [rsp + 0x24], 0
0x00007bd9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00007be2      c74424340000.  mov dword [rsp + 0x34], 0
0x00007bea      e821f8ffff     call sym.quotearg_n_options
0x00007bef      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00007bf4      6448330c2528.  xor rcx, qword fs:[0x28]
0x00007bfd      750a           jne 0x7c09
0x00007bff      4883c448       add rsp, 0x48
0x00007c03      c3             ret
0x00007c04      e8b79dffff     call sym.imp.abort
0x00007c09      e8a29effff     call sym.imp.__stack_chk_fail
0x00007c0e      6690           nop
;-- quotearg_n_custom_mem:
0x00007c10      4883ec48       sub rsp, 0x48
0x00007c14      4989c9         mov r9, rcx
0x00007c17      488b0dd26620.  mov rcx, qword [0x0020e2f0]             ; [0x20e2f0:8]=0
0x00007c1e      660f6f059a66.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00007c26      64488b042528.  mov rax, qword fs:[0x28]
0x00007c2f      4889442438     mov qword [rsp + 0x38], rax
0x00007c34      31c0           xor eax, eax
0x00007c36      0f290424       movaps xmmword [rsp], xmm0
0x00007c3a      4885f6         test rsi, rsi
0x00007c3d      48894c2430     mov qword [rsp + 0x30], rcx
0x00007c42      c704240a0000.  mov dword [rsp], 0xa
0x00007c49      660f6f057f66.  movdqa xmm0, xmmword [0x0020e2d0]
0x00007c51      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00007c56      660f6f058266.  movdqa xmm0, xmmword [0x0020e2e0]
0x00007c5e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00007c63      7432           je 0x7c97
0x00007c65      4885d2         test rdx, rdx
0x00007c68      742d           je 0x7c97
0x00007c6a      4889742428     mov qword [rsp + 0x28], rsi
0x00007c6f      4889542430     mov qword [rsp + 0x30], rdx
0x00007c74      4889e1         mov rcx, rsp
0x00007c77      4c89c2         mov rdx, r8
0x00007c7a      4c89ce         mov rsi, r9
0x00007c7d      e88ef7ffff     call sym.quotearg_n_options
0x00007c82      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00007c87      6448333c2528.  xor rdi, qword fs:[0x28]
0x00007c90      750a           jne 0x7c9c
0x00007c92      4883c448       add rsp, 0x48
0x00007c96      c3             ret
0x00007c97      e8249dffff     call sym.imp.abort
0x00007c9c      e80f9effff     call sym.imp.__stack_chk_fail
0x00007ca1      0f1f440000     nop dword [rax + rax]
0x00007ca6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00007cb0      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00007cb7      e954ffffff     jmp sym.quotearg_n_custom_mem
0x00007cbc      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00007cc0      4889d1         mov rcx, rdx
0x00007cc3      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00007cca      4889f2         mov rdx, rsi
0x00007ccd      4889fe         mov rsi, rdi
0x00007cd0      31ff           xor edi, edi
0x00007cd2      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00007cd7      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00007ce0      4989c8         mov r8, rcx
0x00007ce3      4889d1         mov rcx, rdx
0x00007ce6      4889f2         mov rdx, rsi
0x00007ce9      4889fe         mov rsi, rdi
0x00007cec      31ff           xor edi, edi
0x00007cee      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00007cf3      0f1f00         nop dword [rax]
0x00007cf6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00007d00      488d0d596320.  lea rcx, obj.quote_quoting_options      ; 0x20e060
0x00007d07      e904f7ffff     jmp sym.quotearg_n_options
0x00007d0c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00007d10      488d0d496320.  lea rcx, obj.quote_quoting_options      ; 0x20e060
0x00007d17      4889f2         mov rdx, rsi
0x00007d1a      4889fe         mov rsi, rdi
0x00007d1d      31ff           xor edi, edi
0x00007d1f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00007d24      6690           nop
0x00007d26      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00007d30      488d0d296320.  lea rcx, obj.quote_quoting_options      ; 0x20e060
0x00007d37      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00007d3e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00007d43      0f1f00         nop dword [rax]
0x00007d46      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00007d50      488d0d096320.  lea rcx, obj.quote_quoting_options      ; 0x20e060
0x00007d57      4889fe         mov rsi, rdi
0x00007d5a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00007d61      31ff           xor edi, edi
0x00007d63      e9a8f6ffff     jmp sym.quotearg_n_options
0x00007d68      0f1f84000000.  nop dword [rax + rax]
;-- version_etc_arn:
0x00007d70      4157           push r15
0x00007d72      4156           push r14
0x00007d74      4155           push r13
0x00007d76      4154           push r12
0x00007d78      4d89cc         mov r12, r9
0x00007d7b      55             push rbp
0x00007d7c      53             push rbx
0x00007d7d      4889fd         mov rbp, rdi
0x00007d80      4c89c3         mov rbx, r8
0x00007d83      4883ec28       sub rsp, 0x28
0x00007d87      4885f6         test rsi, rsi
0x00007d8a      0f8418010000   je 0x7ea8
0x00007d90      4989d0         mov r8, rdx
0x00007d93      488d158e3b00.  lea rdx, [0x0000b928]                   ; "%s (%s) %s\n"
0x00007d9a      4989c9         mov r9, rcx
0x00007d9d      31c0           xor eax, eax
0x00007d9f      4889f1         mov rcx, rsi
0x00007da2      be01000000     mov esi, 1
0x00007da7      e8349fffff     call sym.imp.__fprintf_chk
0x00007dac      488d35883b00.  lea rsi, [0x0000b93b]                   ; "(C)"
0x00007db3      31ff           xor edi, edi
0x00007db5      ba05000000     mov edx, 5
0x00007dba      e8c19cffff     call sym.imp.dcgettext
0x00007dbf      488d159a3e00.  lea rdx, obj.version_etc_copyright      ; 0xbc60 ; "Copyright %s %d Free Software Foundation, Inc."
0x00007dc6      4889c1         mov rcx, rax
0x00007dc9      41b8e3070000   mov r8d, 0x7e3
0x00007dcf      be01000000     mov esi, 1
0x00007dd4      4889ef         mov rdi, rbp
0x00007dd7      31c0           xor eax, eax
0x00007dd9      e8029fffff     call sym.imp.__fprintf_chk
0x00007dde      488d35e33b00.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0xb9c8 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00007de5      31ff           xor edi, edi
0x00007de7      ba05000000     mov edx, 5
0x00007dec      e88f9cffff     call sym.imp.dcgettext
0x00007df1      4889ee         mov rsi, rbp
0x00007df4      4889c7         mov rdi, rax
0x00007df7      e8849dffff     call sym.imp.fputs_unlocked
0x00007dfc      4983fc09       cmp r12, 9
0x00007e00      0f873a030000   ja 0x8140
0x00007e06      488d15173e00.  lea rdx, [0x0000bc24]
0x00007e0d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00007e11      4801d0         add rax, rdx
0x00007e14      ffe0           jmp rax
0x00007e16      662e0f1f8400.  nop word cs:[rax + rax]
0x00007e20      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00007e24      488b4310       mov rax, qword [rbx + 0x10]
0x00007e28      488d35093d00.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0xbb38 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x00007e2f      4c8b4308       mov r8, qword [rbx + 8]
0x00007e33      ba05000000     mov edx, 5
0x00007e38      31ff           xor edi, edi
0x00007e3a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00007e3e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00007e42      4c894c2410     mov qword [rsp + 0x10], r9
0x00007e47      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00007e4b      4c8b7318       mov r14, qword [rbx + 0x18]
0x00007e4f      48890424       mov qword [rsp], rax
0x00007e53      4c89442408     mov qword [rsp + 8], r8
0x00007e58      488b1b         mov rbx, qword [rbx]
0x00007e5b      e8209cffff     call sym.imp.dcgettext
0x00007e60      4883ec08       sub rsp, 8
0x00007e64      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00007e69      4889c2         mov rdx, rax
0x00007e6c      4889d9         mov rcx, rbx
0x00007e6f      be01000000     mov esi, 1
0x00007e74      4889ef         mov rdi, rbp
0x00007e77      31c0           xor eax, eax
0x00007e79      4151           push r9
0x00007e7b      4155           push r13
0x00007e7d      4154           push r12
0x00007e7f      4157           push r15
0x00007e81      4156           push r14
0x00007e83      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00007e88      4c8b442438     mov r8, qword [rsp + 0x38]
0x00007e8d      e84e9effff     call sym.imp.__fprintf_chk
0x00007e92      4883c430       add rsp, 0x30
0x00007e96      4883c428       add rsp, 0x28
0x00007e9a      5b             pop rbx
0x00007e9b      5d             pop rbp
0x00007e9c      415c           pop r12
0x00007e9e      415d           pop r13
0x00007ea0      415e           pop r14
0x00007ea2      415f           pop r15
0x00007ea4      c3             ret
0x00007ea5      0f1f00         nop dword [rax]
0x00007ea8      4989c8         mov r8, rcx
0x00007eab      4889d1         mov rcx, rdx
0x00007eae      488d157f3a00.  lea rdx, str.s__s                       ; 0xb934 ; "%s %s\n"
0x00007eb5      be01000000     mov esi, 1
0x00007eba      31c0           xor eax, eax
0x00007ebc      e81f9effff     call sym.imp.__fprintf_chk
0x00007ec1      e9e6feffff     jmp 0x7dac
0x00007ec6      662e0f1f8400.  nop word cs:[rax + rax]
0x00007ed0      4c8b5340       mov r10, qword [rbx + 0x40]
0x00007ed4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00007ed8      488d35893c00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0xbb68 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x00007edf      488b4310       mov rax, qword [rbx + 0x10]
0x00007ee3      4c8b4308       mov r8, qword [rbx + 8]
0x00007ee7      ba05000000     mov edx, 5
0x00007eec      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00007ef0      4c8b6328       mov r12, qword [rbx + 0x28]
0x00007ef4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00007ef8      4c8b7318       mov r14, qword [rbx + 0x18]
0x00007efc      488b1b         mov rbx, qword [rbx]
0x00007eff      4c89542418     mov qword [rsp + 0x18], r10
0x00007f04      4c894c2410     mov qword [rsp + 0x10], r9
0x00007f09      48890424       mov qword [rsp], rax
0x00007f0d      4c89442408     mov qword [rsp + 8], r8
0x00007f12      31ff           xor edi, edi
0x00007f14      e8679bffff     call sym.imp.dcgettext
0x00007f19      4c8b542418     mov r10, qword [rsp + 0x18]
0x00007f1e      4152           push r10
0x00007f20      e93fffffff     jmp 0x7e64
0x00007f25      0f1f00         nop dword [rax]
0x00007f28      488b1b         mov rbx, qword [rbx]
0x00007f2b      488d350d3a00.  lea rsi, str.Written_by__s.             ; 0xb93f ; "Written by %s.\n"
0x00007f32      ba05000000     mov edx, 5
0x00007f37      31ff           xor edi, edi
0x00007f39      e8429bffff     call sym.imp.dcgettext
0x00007f3e      4883c428       add rsp, 0x28
0x00007f42      4889d9         mov rcx, rbx
0x00007f45      4889ef         mov rdi, rbp
0x00007f48      5b             pop rbx
0x00007f49      5d             pop rbp
0x00007f4a      415c           pop r12
0x00007f4c      415d           pop r13
0x00007f4e      415e           pop r14
0x00007f50      415f           pop r15
0x00007f52      4889c2         mov rdx, rax
0x00007f55      be01000000     mov esi, 1
0x00007f5a      31c0           xor eax, eax
0x00007f5c      e97f9dffff     jmp sym.imp.__fprintf_chk
0x00007f61      0f1f80000000.  nop dword [rax]
0x00007f68      4c8b6308       mov r12, qword [rbx + 8]
0x00007f6c      488d35dc3900.  lea rsi, str.Written_by__s_and__s.      ; 0xb94f ; "Written by %s and %s.\n"
0x00007f73      488b1b         mov rbx, qword [rbx]
0x00007f76      ba05000000     mov edx, 5
0x00007f7b      31ff           xor edi, edi
0x00007f7d      e8fe9affff     call sym.imp.dcgettext
0x00007f82      4883c428       add rsp, 0x28
0x00007f86      4d89e0         mov r8, r12
0x00007f89      4889d9         mov rcx, rbx
0x00007f8c      4889ef         mov rdi, rbp
0x00007f8f      4889c2         mov rdx, rax
0x00007f92      be01000000     mov esi, 1
0x00007f97      5b             pop rbx
0x00007f98      5d             pop rbp
0x00007f99      415c           pop r12
0x00007f9b      415d           pop r13
0x00007f9d      415e           pop r14
0x00007f9f      415f           pop r15
0x00007fa1      31c0           xor eax, eax
0x00007fa3      e9389dffff     jmp sym.imp.__fprintf_chk
0x00007fa8      0f1f84000000.  nop dword [rax + rax]
0x00007fb0      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00007fb4      4c8b6308       mov r12, qword [rbx + 8]
0x00007fb8      488d35a73900.  lea rsi, str.Written_by__s___s__and__s. ; 0xb966 ; "Written by %s, %s, and %s.\n"
0x00007fbf      488b1b         mov rbx, qword [rbx]
0x00007fc2      ba05000000     mov edx, 5
0x00007fc7      31ff           xor edi, edi
0x00007fc9      e8b29affff     call sym.imp.dcgettext
0x00007fce      4883c428       add rsp, 0x28
0x00007fd2      4d89e9         mov r9, r13
0x00007fd5      4d89e0         mov r8, r12
0x00007fd8      4889d9         mov rcx, rbx
0x00007fdb      4889ef         mov rdi, rbp
0x00007fde      4889c2         mov rdx, rax
0x00007fe1      5b             pop rbx
0x00007fe2      5d             pop rbp
0x00007fe3      415c           pop r12
0x00007fe5      415d           pop r13
0x00007fe7      415e           pop r14
0x00007fe9      415f           pop r15
0x00007feb      be01000000     mov esi, 1
0x00007ff0      31c0           xor eax, eax
0x00007ff2      e9e99cffff     jmp sym.imp.__fprintf_chk
0x00007ff7      660f1f840000.  nop word [rax + rax]
0x00008000      488d35913a00.  lea rsi, str.Written_by__s___s___s___and__s. ; 0xba98 ; "Written by %s, %s, %s,\nand %s.\n"
0x00008007      ba05000000     mov edx, 5
0x0000800c      31ff           xor edi, edi
0x0000800e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00008012      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00008016      4c8b6308       mov r12, qword [rbx + 8]
0x0000801a      488b1b         mov rbx, qword [rbx]
0x0000801d      e85e9affff     call sym.imp.dcgettext
0x00008022      4883ec08       sub rsp, 8
0x00008026      4156           push r14
0x00008028      4889c2         mov rdx, rax
0x0000802b      4d89e9         mov r9, r13
0x0000802e      4d89e0         mov r8, r12
0x00008031      4889d9         mov rcx, rbx
0x00008034      4889ef         mov rdi, rbp
0x00008037      be01000000     mov esi, 1
0x0000803c      31c0           xor eax, eax
0x0000803e      e89d9cffff     call sym.imp.__fprintf_chk
0x00008043      58             pop rax
0x00008044      5a             pop rdx
0x00008045      4883c428       add rsp, 0x28
0x00008049      5b             pop rbx
0x0000804a      5d             pop rbp
0x0000804b      415c           pop r12
0x0000804d      415d           pop r13
0x0000804f      415e           pop r14
0x00008051      415f           pop r15
0x00008053      c3             ret
0x00008054      0f1f4000       nop dword [rax]
0x00008058      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000805c      488d35553a00.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0xbab8 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00008063      ba05000000     mov edx, 5
0x00008068      31ff           xor edi, edi
0x0000806a      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000806e      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00008072      4c8b6308       mov r12, qword [rbx + 8]
0x00008076      488b1b         mov rbx, qword [rbx]
0x00008079      e8029affff     call sym.imp.dcgettext
0x0000807e      4157           push r15
0x00008080      eba4           jmp 0x8026
0x00008082      660f1f440000   nop word [rax + rax]
0x00008088      4c8b4308       mov r8, qword [rbx + 8]
0x0000808c      4c8b6328       mov r12, qword [rbx + 0x28]
0x00008090      488d35493a00.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0xbae0 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00008097      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000809b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000809f      ba05000000     mov edx, 5
0x000080a4      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000080a8      31ff           xor edi, edi
0x000080aa      488b1b         mov rbx, qword [rbx]
0x000080ad      4c890424       mov qword [rsp], r8
0x000080b1      e8ca99ffff     call sym.imp.dcgettext
0x000080b6      4883ec08       sub rsp, 8
0x000080ba      4d89e9         mov r9, r13
0x000080bd      4154           push r12
0x000080bf      4157           push r15
0x000080c1      4156           push r14
0x000080c3      4c8b442420     mov r8, qword [rsp + 0x20]
0x000080c8      4889d9         mov rcx, rbx
0x000080cb      4889c2         mov rdx, rax
0x000080ce      4889ef         mov rdi, rbp
0x000080d1      be01000000     mov esi, 1
0x000080d6      31c0           xor eax, eax
0x000080d8      e8039cffff     call sym.imp.__fprintf_chk
0x000080dd      4883c420       add rsp, 0x20
0x000080e1      4883c428       add rsp, 0x28
0x000080e5      5b             pop rbx
0x000080e6      5d             pop rbp
0x000080e7      415c           pop r12
0x000080e9      415d           pop r13
0x000080eb      415e           pop r14
0x000080ed      415f           pop r15
0x000080ef      c3             ret
0x000080f0      4c8b4b10       mov r9, qword [rbx + 0x10]
0x000080f4      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000080f8      488d35093a00.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0xbb08 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x000080ff      4c8b6328       mov r12, qword [rbx + 0x28]
0x00008103      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00008107      ba05000000     mov edx, 5
0x0000810c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00008110      4c8b4308       mov r8, qword [rbx + 8]
0x00008114      31ff           xor edi, edi
0x00008116      4c894c2408     mov qword [rsp + 8], r9
0x0000811b      488b1b         mov rbx, qword [rbx]
0x0000811e      4c890424       mov qword [rsp], r8
0x00008122      e85999ffff     call sym.imp.dcgettext
0x00008127      4155           push r13
0x00008129      4154           push r12
0x0000812b      4157           push r15
0x0000812d      4156           push r14
0x0000812f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00008134      eb8d           jmp 0x80c3
0x00008136      662e0f1f8400.  nop word cs:[rax + rax]
0x00008140      4c8b5340       mov r10, qword [rbx + 0x40]
0x00008144      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00008148      ba05000000     mov edx, 5
0x0000814d      488b4310       mov rax, qword [rbx + 0x10]
0x00008151      4c8b4308       mov r8, qword [rbx + 8]
0x00008155      488d35443a00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0xbba0 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x0000815c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00008160      4c8b6328       mov r12, qword [rbx + 0x28]
0x00008164      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00008168      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000816c      4c89542418     mov qword [rsp + 0x18], r10
0x00008171      4c894c2410     mov qword [rsp + 0x10], r9
0x00008176      48890424       mov qword [rsp], rax
0x0000817a      4c89442408     mov qword [rsp + 8], r8
0x0000817f      488b1b         mov rbx, qword [rbx]
0x00008182      e98bfdffff     jmp 0x7f12
0x00008187      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00008190      4531c9         xor r9d, r9d
0x00008193      49833800       cmp qword [r8], 0
0x00008197      7412           je 0x81ab
0x00008199      0f1f80000000.  nop dword [rax]
0x000081a0      4983c101       add r9, 1
0x000081a4      4b833cc800     cmp qword [r8 + r9*8], 0
0x000081a9      75f5           jne 0x81a0
0x000081ab      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x000081b0      4883ec68       sub rsp, 0x68
0x000081b4      4d89c2         mov r10, r8
0x000081b7      4531c9         xor r9d, r9d
0x000081ba      64488b042528.  mov rax, qword fs:[0x28]
0x000081c3      4889442458     mov qword [rsp + 0x58], rax
0x000081c8      31c0           xor eax, eax
0x000081ca      4989e0         mov r8, rsp
0x000081cd      0f1f00         nop dword [rax]
0x000081d0      418b02         mov eax, dword [r10]
0x000081d3      83f82f         cmp eax, 0x2f
0x000081d6      7742           ja 0x821a
0x000081d8      4189c3         mov r11d, eax
0x000081db      4d035a10       add r11, qword [r10 + 0x10]
0x000081df      83c008         add eax, 8
0x000081e2      418902         mov dword [r10], eax
0x000081e5      498b03         mov rax, qword [r11]
0x000081e8      4885c0         test rax, rax
0x000081eb      4b8904c8       mov qword [r8 + r9*8], rax
0x000081ef      740a           je 0x81fb
0x000081f1      4983c101       add r9, 1
0x000081f5      4983f90a       cmp r9, 0xa
0x000081f9      75d5           jne 0x81d0
0x000081fb      e870fbffff     call sym.version_etc_arn
0x00008200      488b442458     mov rax, qword [rsp + 0x58]
0x00008205      644833042528.  xor rax, qword fs:[0x28]
0x0000820e      7505           jne 0x8215
0x00008210      4883c468       add rsp, 0x68
0x00008214      c3             ret
0x00008215      e89698ffff     call sym.imp.__stack_chk_fail
0x0000821a      4d8b5a08       mov r11, qword [r10 + 8]
0x0000821e      498d4308       lea rax, [r11 + 8]
0x00008222      49894208       mov qword [r10 + 8], rax
0x00008226      ebbd           jmp 0x81e5
0x00008228      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00008230      55             push rbp
0x00008231      53             push rbx
0x00008232      41ba20000000   mov r10d, 0x20                          ; "@"
0x00008238      4531db         xor r11d, r11d
0x0000823b      4881ecb80000.  sub rsp, 0xb8
0x00008242      64488b042528.  mov rax, qword fs:[0x28]
0x0000824b      4889442478     mov qword [rsp + 0x78], rax
0x00008250      31c0           xor eax, eax
0x00008252      488d8424d000.  lea rax, [rsp + 0xd0]
0x0000825a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00008262      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x0000826a      4c8d442420     lea r8, [rsp + 0x20]
0x0000826f      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00008277      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x0000827f      4889442410     mov qword [rsp + 0x10], rax
0x00008284      488d84248000.  lea rax, [rsp + 0x80]
0x0000828c      4531c9         xor r9d, r9d
0x0000828f      4889442418     mov qword [rsp + 0x18], rax
0x00008294      4889c5         mov rbp, rax
0x00008297      660f1f840000.  nop word [rax + rax]
0x000082a0      4183fa2f       cmp r10d, 0x2f
0x000082a4      7756           ja 0x82fc
0x000082a6      4489d0         mov eax, r10d
0x000082a9      41bb01000000   mov r11d, 1
0x000082af      4183c208       add r10d, 8
0x000082b3      4801e8         add rax, rbp
0x000082b6      488b00         mov rax, qword [rax]
0x000082b9      4885c0         test rax, rax
0x000082bc      4b8904c8       mov qword [r8 + r9*8], rax
0x000082c0      740a           je 0x82cc
0x000082c2      4983c101       add r9, 1
0x000082c6      4983f90a       cmp r9, 0xa
0x000082ca      75d4           jne 0x82a0
0x000082cc      4584db         test r11b, r11b
0x000082cf      7524           jne 0x82f5
0x000082d1      e89afaffff     call sym.version_etc_arn
0x000082d6      488b442478     mov rax, qword [rsp + 0x78]
0x000082db      644833042528.  xor rax, qword fs:[0x28]
0x000082e4      750a           jne 0x82f0
0x000082e6      4881c4b80000.  add rsp, 0xb8
0x000082ed      5b             pop rbx
0x000082ee      5d             pop rbp
0x000082ef      c3             ret
0x000082f0      e8bb97ffff     call sym.imp.__stack_chk_fail
0x000082f5      4489542408     mov dword [rsp + 8], r10d
0x000082fa      ebd5           jmp 0x82d1
0x000082fc      4889d8         mov rax, rbx
0x000082ff      4883c308       add rbx, 8
0x00008303      ebb1           jmp 0x82b6
0x00008305      90             nop
0x00008306      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00008310      53             push rbx
0x00008311      488d356a3600.  lea rsi, str.Report_bugs_to:__s         ; 0xb982 ; "\nReport bugs to: %s\n"
0x00008318      ba05000000     mov edx, 5
0x0000831d      31ff           xor edi, edi
0x0000831f      e85c97ffff     call sym.imp.dcgettext
0x00008324      488d156c3600.  lea rdx, str.bug_coreutils_gnu.org      ; 0xb997 ; "bug-coreutils@gnu.org"
0x0000832b      4889c6         mov rsi, rax
0x0000832e      bf01000000     mov edi, 1
0x00008333      31c0           xor eax, eax
0x00008335      e81699ffff     call sym.imp.__printf_chk
0x0000833a      488d356c3600.  lea rsi, str.s_home_page:___s           ; 0xb9ad ; "%s home page: <%s>\n"
0x00008341      ba05000000     mov edx, 5
0x00008346      31ff           xor edi, edi
0x00008348      e83397ffff     call sym.imp.dcgettext
0x0000834d      488d0da42900.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0xacf8 ; "https://www.gnu.org/software/coreutils/"
0x00008354      488d15ec1200.  lea rdx, str.GNU_coreutils              ; 0x9647 ; "GNU coreutils"
0x0000835b      4889c6         mov rsi, rax
0x0000835e      bf01000000     mov edi, 1
0x00008363      31c0           xor eax, eax
0x00008365      e8e698ffff     call sym.imp.__printf_chk
0x0000836a      488b1d575d20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0c8:8]=0
0x00008371      488d35683800.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0xbbe0 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00008378      31ff           xor edi, edi
0x0000837a      ba05000000     mov edx, 5
0x0000837f      e8fc96ffff     call sym.imp.dcgettext
0x00008384      4889de         mov rsi, rbx
0x00008387      4889c7         mov rdi, rax
0x0000838a      5b             pop rbx
0x0000838b      e9f097ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00008390      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00008391      4889fb         mov rbx, rdi
0x00008394      e85798ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00008399      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x0000839c      7505           jne 0x83a3
0x0000839e      4885db         test rbx, rbx
0x000083a1      7502           jne 0x83a5
0x000083a3      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x000083a4      c3             ret
0x000083a5      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x000083aa      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x000083b0      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x000083b3      48f7e6         mul rsi
0x000083b6      4889c7         mov rdi, rax
0x000083b9      0f90c0         seto al
0x000083bc      4885ff         test rdi, rdi
0x000083bf      780a           js 0x83cb
0x000083c1      0fb6c0         movzx eax, al
0x000083c4      4885c0         test rax, rax
0x000083c7      7502           jne 0x83cb
0x000083c9      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x000083cb      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x000083cf      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x000083d4      6690           nop
0x000083d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x000083e0      ebae           jmp sym.xmalloc
0x000083e2      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x000083e6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x000083f0      4885f6         test rsi, rsi
0x000083f3      53             push rbx
0x000083f4      4889f3         mov rbx, rsi
0x000083f7      7505           jne 0x83fe
0x000083f9      4885ff         test rdi, rdi
0x000083fc      751a           jne 0x8418
0x000083fe      4889de         mov rsi, rbx
0x00008401      e82a98ffff     call sym.imp.realloc
0x00008406      4885c0         test rax, rax
0x00008409      7505           jne 0x8410
0x0000840b      4885db         test rbx, rbx
0x0000840e      7511           jne 0x8421                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00008410      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00008411      c3             ret
0x00008412      660f1f440000   nop word [rax + rax]
0x00008418      e89395ffff     call sym.imp.free
0x0000841d      31c0           xor eax, eax
0x0000841f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00008420      c3             ret
0x00008421      e8ba010000     call sym.xalloc_die
0x00008426      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00008430      4889f0         mov rax, rsi
0x00008433      48f7e2         mul rdx
0x00008436      4889c6         mov rsi, rax
0x00008439      0f90c0         seto al
0x0000843c      4885f6         test rsi, rsi
0x0000843f      780a           js 0x844b
0x00008441      0fb6c0         movzx eax, al
0x00008444      4885c0         test rax, rax
0x00008447      7502           jne 0x844b
0x00008449      eba5           jmp sym.xrealloc
0x0000844b      4883ec08       sub rsp, 8
0x0000844f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00008454      6690           nop
0x00008456      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00008460      4885ff         test rdi, rdi
0x00008463      4989d1         mov r9, rdx
0x00008466      488b0e         mov rcx, qword [rsi]
0x00008469      7435           je 0x84a0
0x0000846b      31d2           xor edx, edx
0x0000846d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00008477      49f7f1         div r9
0x0000847a      4839c8         cmp rax, rcx
0x0000847d      763c           jbe 0x84bb
0x0000847f      4889c8         mov rax, rcx
0x00008482      48d1e8         shr rax, 1
0x00008485      488d4c0801     lea rcx, [rax + rcx + 1]
0x0000848a      48890e         mov qword [rsi], rcx
0x0000848d      490fafc9       imul rcx, r9
0x00008491      4889ce         mov rsi, rcx
0x00008494      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00008499      0f1f80000000.  nop dword [rax]
0x000084a0      4885c9         test rcx, rcx
0x000084a3      7423           je 0x84c8
0x000084a5      4889c8         mov rax, rcx
0x000084a8      49f7e1         mul r9
0x000084ab      0f90c2         seto dl
0x000084ae      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x000084b1      0fb6d2         movzx edx, dl
0x000084b4      7805           js 0x84bb
0x000084b6      4885d2         test rdx, rdx
0x000084b9      74cf           je 0x848a
0x000084bb      4883ec08       sub rsp, 8
0x000084bf      e81c010000     call sym.xalloc_die
0x000084c4      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x000084c8      31d2           xor edx, edx
0x000084ca      b880000000     mov eax, 0x80
0x000084cf      4531c0         xor r8d, r8d
0x000084d2      49f7f1         div r9
0x000084d5      4885c0         test rax, rax
0x000084d8      410f94c0       sete r8b
0x000084dc      498d0c00       lea rcx, [r8 + rax]
0x000084e0      ebc3           jmp 0x84a5
0x000084e2      0f1f4000       nop dword [rax]
0x000084e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x000084f0      4885ff         test rdi, rdi
0x000084f3      488b06         mov rax, qword [rsi]
0x000084f6      7428           je 0x8520
0x000084f8      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00008502      4839d0         cmp rax, rdx
0x00008505      772a           ja 0x8531
0x00008507      4889c2         mov rdx, rax
0x0000850a      48d1ea         shr rdx, 1
0x0000850d      488d440201     lea rax, [rdx + rax + 1]
0x00008512      488906         mov qword [rsi], rax
0x00008515      4889c6         mov rsi, rax
0x00008518      e9d3feffff     jmp sym.xrealloc
0x0000851d      0f1f00         nop dword [rax]
0x00008520      4885c0         test rax, rax
0x00008523      ba80000000     mov edx, 0x80
0x00008528      480f44c2       cmove rax, rdx
0x0000852c      4885c0         test rax, rax
0x0000852f      79e1           jns 0x8512
0x00008531      4883ec08       sub rsp, 8
0x00008535      e8a6000000     call sym.xalloc_die
0x0000853a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00008540      53             push rbx
0x00008541      4889fb         mov rbx, rdi
0x00008544      e847feffff     call sym.xmalloc
0x00008549      4889da         mov rdx, rbx
0x0000854c      31f6           xor esi, esi
0x0000854e      4889c7         mov rdi, rax
0x00008551      5b             pop rbx
0x00008552      e9e995ffff     jmp sym.imp.memset
0x00008557      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00008560      4889f8         mov rax, rdi
0x00008563      4883ec08       sub rsp, 8
0x00008567      48f7e6         mul rsi
0x0000856a      0f90c2         seto dl
0x0000856d      4885c0         test rax, rax
0x00008570      7817           js 0x8589
0x00008572      0fb6d2         movzx edx, dl
0x00008575      4885d2         test rdx, rdx
0x00008578      750f           jne 0x8589
0x0000857a      e81196ffff     call sym.imp.calloc
0x0000857f      4885c0         test rax, rax
0x00008582      7405           je 0x8589
0x00008584      4883c408       add rsp, 8
0x00008588      c3             ret
0x00008589      e852000000     call sym.xalloc_die
0x0000858e      6690           nop
;-- xmemdup:
0x00008590      55             push rbp
0x00008591      53             push rbx
0x00008592      4889fd         mov rbp, rdi
0x00008595      4889f7         mov rdi, rsi
0x00008598      4889f3         mov rbx, rsi
0x0000859b      4883ec08       sub rsp, 8
0x0000859f      e8ecfdffff     call sym.xmalloc
0x000085a4      4883c408       add rsp, 8
0x000085a8      4889da         mov rdx, rbx
0x000085ab      4889ee         mov rsi, rbp
0x000085ae      5b             pop rbx
0x000085af      5d             pop rbp
0x000085b0      4889c7         mov rdi, rax
0x000085b3      e90896ffff     jmp sym.imp.memcpy
0x000085b8      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x000085c0      53             push rbx
0x000085c1      4889fb         mov rbx, rdi
0x000085c4      e8d794ffff     call sym.imp.strlen
0x000085c9      4889df         mov rdi, rbx
0x000085cc      488d7001       lea rsi, [rax + 1]
0x000085d0      5b             pop rbx
0x000085d1      ebbd           jmp sym.xmemdup
0x000085d3      662e0f1f8400.  nop word cs:[rax + rax]
0x000085dd      0f1f00         nop dword [rax]
;-- xalloc_die:
0x000085e0      488d35a83600.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0xbc8f ; "memory exhausted"
0x000085e7      4883ec08       sub rsp, 8
0x000085eb      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x000085f0      31ff           xor edi, edi
0x000085f2      e88994ffff     call sym.imp.dcgettext
0x000085f7      8b3d535a2000   mov edi, dword [obj.exit_failure]       ; [0x20e050:4]=1
0x000085fd      488d15f92d00.  lea rdx, [0x0000b3fd]                   ; "%s"
0x00008604      4889c1         mov rcx, rax
0x00008607      31f6           xor esi, esi
0x00008609      31c0           xor eax, eax
0x0000860b      e87096ffff     call sym.imp.error
0x00008610      e8ab93ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00008615      662e0f1f8400.  nop word cs:[rax + rax]
0x0000861f      90             nop
;-- xstrndup:
0x00008620      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xstrndup.c:31
0x00008624      e83795ffff     call sym.imp.strndup                    ; ../coreutils-8.31/lib/xstrndup.c:32
0x00008629      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xstrndup.c:33
0x0000862c      7405           je 0x8633
0x0000862e      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/xstrndup.c:36
0x00008632      c3             ret
0x00008633      e8a8ffffff     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xstrndup.c:34
0x00008638      0f1f84000000.  nop dword [rax + rax]
;-- xstrtol:
0x00008640      4157           push r15
0x00008642      4156           push r14
0x00008644      4155           push r13
0x00008646      4154           push r12
0x00008648      55             push rbp
0x00008649      53             push rbx
0x0000864a      4883ec28       sub rsp, 0x28
0x0000864e      64488b042528.  mov rax, qword fs:[0x28]
0x00008657      4889442418     mov qword [rsp + 0x18], rax
0x0000865c      31c0           xor eax, eax
0x0000865e      83fa24         cmp edx, 0x24
0x00008661      0f8768060000   ja 0x8ccf
0x00008667      488d442410     lea rax, [rsp + 0x10]
0x0000866c      4885f6         test rsi, rsi
0x0000866f      4889f3         mov rbx, rsi
0x00008672      4989fc         mov r12, rdi
0x00008675      89d5           mov ebp, edx
0x00008677      4989ce         mov r14, rcx
0x0000867a      480f44d8       cmove rbx, rax
0x0000867e      4d89c7         mov r15, r8
0x00008681      e84a93ffff     call sym.imp.__errno_location
0x00008686      89ea           mov edx, ebp
0x00008688      c70000000000   mov dword [rax], 0
0x0000868e      4889de         mov rsi, rbx
0x00008691      4c89e7         mov rdi, r12
0x00008694      4989c5         mov r13, rax
0x00008697      e81495ffff     call sym.imp.strtol
0x0000869c      488b0b         mov rcx, qword [rbx]
0x0000869f      4889c5         mov rbp, rax
0x000086a2      4c39e1         cmp rcx, r12
0x000086a5      7461           je 0x8708
0x000086a7      418b4500       mov eax, dword [r13]
0x000086ab      85c0           test eax, eax
0x000086ad      7541           jne 0x86f0
0x000086af      4531e4         xor r12d, r12d
0x000086b2      4d85ff         test r15, r15
0x000086b5      740d           je 0x86c4
0x000086b7      440fb629       movzx r13d, byte [rcx]
0x000086bb      4584ed         test r13b, r13b
0x000086be      0f857f000000   jne 0x8743
0x000086c4      49892e         mov qword [r14], rbp
0x000086c7      488b7c2418     mov rdi, qword [rsp + 0x18]
0x000086cc      6448333c2528.  xor rdi, qword fs:[0x28]
0x000086d5      4489e0         mov eax, r12d
0x000086d8      0f8510060000   jne 0x8cee
0x000086de      4883c428       add rsp, 0x28
0x000086e2      5b             pop rbx
0x000086e3      5d             pop rbp
0x000086e4      415c           pop r12
0x000086e6      415d           pop r13
0x000086e8      415e           pop r14
0x000086ea      415f           pop r15
0x000086ec      c3             ret
0x000086ed      0f1f00         nop dword [rax]
0x000086f0      83f822         cmp eax, 0x22
0x000086f3      41bc04000000   mov r12d, 4
0x000086f9      75cc           jne 0x86c7
0x000086fb      41bc01000000   mov r12d, 1
0x00008701      ebaf           jmp 0x86b2
0x00008703      0f1f440000     nop dword [rax + rax]
0x00008708      4d85ff         test r15, r15
0x0000870b      0f848f040000   je 0x8ba0
0x00008711      440fb629       movzx r13d, byte [rcx]
0x00008715      48894c2408     mov qword [rsp + 8], rcx
0x0000871a      41bc04000000   mov r12d, 4
0x00008720      4584ed         test r13b, r13b
0x00008723      74a2           je 0x86c7
0x00008725      410fbef5       movsx esi, r13b
0x00008729      4c89ff         mov rdi, r15
0x0000872c      e8af93ffff     call sym.imp.strchr
0x00008731      4885c0         test rax, rax
0x00008734      488b4c2408     mov rcx, qword [rsp + 8]
0x00008739      748c           je 0x86c7
0x0000873b      bd01000000     mov ebp, 1
0x00008740      4531e4         xor r12d, r12d
0x00008743      410fbef5       movsx esi, r13b
0x00008747      4c89ff         mov rdi, r15
0x0000874a      48894c2408     mov qword [rsp + 8], rcx
0x0000874f      e88c93ffff     call sym.imp.strchr
0x00008754      4885c0         test rax, rax
0x00008757      488b4c2408     mov rcx, qword [rsp + 8]
0x0000875c      745a           je 0x87b8
0x0000875e      418d45bb       lea eax, [r13 - 0x45]
0x00008762      3c2f           cmp al, 0x2f
0x00008764      7762           ja 0x87c8
0x00008766      48ba45893000.  movabs rdx, 0x814400308945
0x00008770      480fa3c2       bt rdx, rax
0x00008774      7352           jae 0x87c8
0x00008776      be30000000     mov esi, 0x30                           ; '0'
0x0000877b      4c89ff         mov rdi, r15
0x0000877e      48894c2408     mov qword [rsp + 8], rcx
0x00008783      e85893ffff     call sym.imp.strchr
0x00008788      4885c0         test rax, rax
0x0000878b      488b4c2408     mov rcx, qword [rsp + 8]
0x00008790      7436           je 0x87c8
0x00008792      0fb64101       movzx eax, byte [rcx + 1]
0x00008796      3c44           cmp al, 0x44
0x00008798      740c           je 0x87a6
0x0000879a      3c69           cmp al, 0x69
0x0000879c      0f84e6040000   je 0x8c88
0x000087a2      3c42           cmp al, 0x42
0x000087a4      7522           jne 0x87c8
0x000087a6      bf02000000     mov edi, 2
0x000087ab      b8e8030000     mov eax, 0x3e8
0x000087b0      eb20           jmp 0x87d2
0x000087b2      660f1f440000   nop word [rax + rax]
0x000087b8      49892e         mov qword [r14], rbp
0x000087bb      4183cc02       or r12d, 2
0x000087bf      e903ffffff     jmp 0x86c7
0x000087c4      0f1f4000       nop dword [rax]
0x000087c8      bf01000000     mov edi, 1
0x000087cd      b800040000     mov eax, 0x400
0x000087d2      4183ed42       sub r13d, 0x42
0x000087d6      4180fd35       cmp r13b, 0x35
0x000087da      77dc           ja 0x87b8
0x000087dc      488d35053500.  lea rsi, [0x0000bce8]
0x000087e3      450fb6ed       movzx r13d, r13b
0x000087e7      4a6314ae       movsxd rdx, dword [rsi + r13*4]
0x000087eb      4801f2         add rdx, rsi
0x000087ee      ffe2           jmp rdx
0x000087f0      49b800000000.  movabs r8, 0x8000000000000000
0x000087fa      4863f0         movsxd rsi, eax
0x000087fd      4c89c0         mov rax, r8
0x00008800      4899           cqo
0x00008802      48f7fe         idiv rsi
0x00008805      4839c5         cmp rbp, rax
0x00008808      4989c1         mov r9, rax
0x0000880b      0f8ca4040000   jl 0x8cb5
0x00008811      49baffffffff.  movabs r10, 0x7fffffffffffffff          ; 9223372036854775807
0x0000881b      4c89d0         mov rax, r10
0x0000881e      4899           cqo
0x00008820      48f7fe         idiv rsi
0x00008823      4839c5         cmp rbp, rax
0x00008826      0f8f96040000   jg 0x8cc2
0x0000882c      480fafee       imul rbp, rsi
0x00008830      4939e9         cmp r9, rbp
0x00008833      0f8f7c040000   jg 0x8cb5
0x00008839      4839e8         cmp rax, rbp
0x0000883c      0f8c80040000   jl 0x8cc2
0x00008842      480fafee       imul rbp, rsi
0x00008846      31c0           xor eax, eax
0x00008848      4109c4         or r12d, eax
0x0000884b      0f1f440000     nop dword [rax + rax]
0x00008850      4863c7         movsxd rax, edi
0x00008853      4801c1         add rcx, rax
0x00008856      4489e0         mov eax, r12d
0x00008859      83c802         or eax, 2
0x0000885c      48890b         mov qword [rbx], rcx
0x0000885f      803900         cmp byte [rcx], 0
0x00008862      440f45e0       cmovne r12d, eax
0x00008866      e959feffff     jmp 0x86c4
0x0000886b      0f1f440000     nop dword [rax + rax]
0x00008870      48b800000000.  movabs rax, 0xc000000000000000
0x0000887a      4839c5         cmp rbp, rax
0x0000887d      0f8c2d030000   jl 0x8bb0
0x00008883      48b8ffffffff.  movabs rax, 0x3fffffffffffffff          ; 4611686018427387903
0x0000888d      4839c5         cmp rbp, rax
0x00008890      0f8fda030000   jg 0x8c70
0x00008896      4801ed         add rbp, rbp
0x00008899      ebb5           jmp 0x8850
0x0000889b      0f1f440000     nop dword [rax + rax]
0x000088a0      48b800000000.  movabs rax, 0xffc0000000000000
0x000088aa      4839c5         cmp rbp, rax
0x000088ad      0f8cfd020000   jl 0x8bb0
0x000088b3      48b8ffffffff.  movabs rax, 0x3fffffffffffff            ; 18014398509481983
0x000088bd      4839c5         cmp rbp, rax
0x000088c0      0f8faa030000   jg 0x8c70
0x000088c6      48c1e509       shl rbp, 9
0x000088ca      eb84           jmp 0x8850
0x000088cc      0f1f4000       nop dword [rax]
0x000088d0      4863f0         movsxd rsi, eax
0x000088d3      48b800000000.  movabs rax, 0x8000000000000000
0x000088dd      41b807000000   mov r8d, 7
0x000088e3      4899           cqo
0x000088e5      4531db         xor r11d, r11d
0x000088e8      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x000088f2      48f7fe         idiv rsi
0x000088f5      4989c2         mov r10, rax
0x000088f8      eb25           jmp 0x891f
0x000088fa      660f1f440000   nop word [rax + rax]
0x00008900      4c89c8         mov rax, r9
0x00008903      4899           cqo
0x00008905      48f7fe         idiv rsi
0x00008908      4839e8         cmp rax, rbp
0x0000890b      0f8ce7020000   jl 0x8bf8
0x00008911      480fafee       imul rbp, rsi
0x00008915      4183e801       sub r8d, 1
0x00008919      0f8421010000   je 0x8a40
0x0000891f      4939ea         cmp r10, rbp
0x00008922      7edc           jle 0x8900
0x00008924      41bb01000000   mov r11d, 1
0x0000892a      48bd00000000.  movabs rbp, 0x8000000000000000
0x00008934      ebdf           jmp 0x8915
0x00008936      662e0f1f8400.  nop word cs:[rax + rax]
0x00008940      4863f0         movsxd rsi, eax
0x00008943      48b800000000.  movabs rax, 0x8000000000000000
0x0000894d      41b808000000   mov r8d, 8
0x00008953      4899           cqo
0x00008955      4531db         xor r11d, r11d
0x00008958      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x00008962      48f7fe         idiv rsi
0x00008965      4989c2         mov r10, rax
0x00008968      eb25           jmp 0x898f
0x0000896a      660f1f440000   nop word [rax + rax]
0x00008970      4c89c8         mov rax, r9
0x00008973      4899           cqo
0x00008975      48f7fe         idiv rsi
0x00008978      4839e8         cmp rax, rbp
0x0000897b      0f8c47020000   jl 0x8bc8
0x00008981      480fafee       imul rbp, rsi
0x00008985      4183e801       sub r8d, 1
0x00008989      0f84b1000000   je 0x8a40
0x0000898f      4939ea         cmp r10, rbp
0x00008992      7edc           jle 0x8970
0x00008994      41bb01000000   mov r11d, 1
0x0000899a      48bd00000000.  movabs rbp, 0x8000000000000000
0x000089a4      ebdf           jmp 0x8985
0x000089a6      662e0f1f8400.  nop word cs:[rax + rax]
0x000089b0      49b800000000.  movabs r8, 0x8000000000000000
0x000089ba      4863f0         movsxd rsi, eax
0x000089bd      4c89c0         mov rax, r8
0x000089c0      4899           cqo
0x000089c2      48f7fe         idiv rsi
0x000089c5      4839c5         cmp rbp, rax
0x000089c8      0f8ce2010000   jl 0x8bb0
0x000089ce      4983e801       sub r8, 1
0x000089d2      4c89c0         mov rax, r8
0x000089d5      4899           cqo
0x000089d7      48f7fe         idiv rsi
0x000089da      4839c5         cmp rbp, rax
0x000089dd      0f8f8d020000   jg 0x8c70
0x000089e3      480fafee       imul rbp, rsi
0x000089e7      e964feffff     jmp 0x8850
0x000089ec      0f1f4000       nop dword [rax]
0x000089f0      4863f0         movsxd rsi, eax
0x000089f3      48b800000000.  movabs rax, 0x8000000000000000
0x000089fd      41b803000000   mov r8d, 3
0x00008a03      4899           cqo
0x00008a05      4531db         xor r11d, r11d
0x00008a08      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x00008a12      48f7fe         idiv rsi
0x00008a15      4989c2         mov r10, rax
0x00008a18      4939ea         cmp r10, rbp
0x00008a1b      0f8fef010000   jg 0x8c10
0x00008a21      4c89c8         mov rax, r9
0x00008a24      4899           cqo
0x00008a26      48f7fe         idiv rsi
0x00008a29      4839e8         cmp rax, rbp
0x00008a2c      0f8c6e020000   jl 0x8ca0
0x00008a32      480fafee       imul rbp, rsi
0x00008a36      4183e801       sub r8d, 1
0x00008a3a      75dc           jne 0x8a18
0x00008a3c      0f1f4000       nop dword [rax]
0x00008a40      4509dc         or r12d, r11d
0x00008a43      e908feffff     jmp 0x8850
0x00008a48      0f1f84000000.  nop dword [rax + rax]
0x00008a50      4863f0         movsxd rsi, eax
0x00008a53      48b800000000.  movabs rax, 0x8000000000000000
0x00008a5d      41b806000000   mov r8d, 6
0x00008a63      4899           cqo
0x00008a65      4531db         xor r11d, r11d
0x00008a68      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x00008a72      48f7fe         idiv rsi
0x00008a75      4989c2         mov r10, rax
0x00008a78      eb21           jmp 0x8a9b
0x00008a7a      660f1f440000   nop word [rax + rax]
0x00008a80      4c89c8         mov rax, r9
0x00008a83      4899           cqo
0x00008a85      48f7fe         idiv rsi
0x00008a88      4839e8         cmp rax, rbp
0x00008a8b      0f8c97010000   jl 0x8c28
0x00008a91      480fafee       imul rbp, rsi
0x00008a95      4183e801       sub r8d, 1
0x00008a99      74a5           je 0x8a40
0x00008a9b      4939ea         cmp r10, rbp
0x00008a9e      7ee0           jle 0x8a80
0x00008aa0      41bb01000000   mov r11d, 1
0x00008aa6      48bd00000000.  movabs rbp, 0x8000000000000000
0x00008ab0      ebe3           jmp 0x8a95
0x00008ab2      660f1f440000   nop word [rax + rax]
0x00008ab8      4863f0         movsxd rsi, eax
0x00008abb      48b800000000.  movabs rax, 0x8000000000000000
0x00008ac5      41b805000000   mov r8d, 5
0x00008acb      4899           cqo
0x00008acd      4531db         xor r11d, r11d
0x00008ad0      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x00008ada      48f7fe         idiv rsi
0x00008add      4989c2         mov r10, rax
0x00008ae0      eb25           jmp 0x8b07
0x00008ae2      660f1f440000   nop word [rax + rax]
0x00008ae8      4c89c8         mov rax, r9
0x00008aeb      4899           cqo
0x00008aed      48f7fe         idiv rsi
0x00008af0      4839e8         cmp rax, rbp
0x00008af3      0f8c47010000   jl 0x8c40
0x00008af9      480fafee       imul rbp, rsi
0x00008afd      4183e801       sub r8d, 1
0x00008b01      0f8439ffffff   je 0x8a40
0x00008b07      4939ea         cmp r10, rbp
0x00008b0a      7edc           jle 0x8ae8
0x00008b0c      41bb01000000   mov r11d, 1
0x00008b12      48bd00000000.  movabs rbp, 0x8000000000000000
0x00008b1c      ebdf           jmp 0x8afd
0x00008b1e      6690           nop
0x00008b20      48b800000000.  movabs rax, 0xffe0000000000000
0x00008b2a      4839c5         cmp rbp, rax
0x00008b2d      0f8c7d000000   jl 0x8bb0
0x00008b33      48b8ffffffff.  movabs rax, 0x1fffffffffffff            ; 9007199254740991
0x00008b3d      4839c5         cmp rbp, rax
0x00008b40      0f8f2a010000   jg 0x8c70
0x00008b46      48c1e50a       shl rbp, 0xa
0x00008b4a      e901fdffff     jmp 0x8850
0x00008b4f      90             nop
0x00008b50      4863f0         movsxd rsi, eax
0x00008b53      48b800000000.  movabs rax, 0x8000000000000000
0x00008b5d      41b804000000   mov r8d, 4
0x00008b63      4899           cqo
0x00008b65      4531db         xor r11d, r11d
0x00008b68      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x00008b72      48f7fe         idiv rsi
0x00008b75      4989c2         mov r10, rax
0x00008b78      4939ea         cmp r10, rbp
0x00008b7b      7f63           jg 0x8be0
0x00008b7d      4c89c8         mov rax, r9
0x00008b80      4899           cqo
0x00008b82      48f7fe         idiv rsi
0x00008b85      4839e8         cmp rax, rbp
0x00008b88      0f8cca000000   jl 0x8c58
0x00008b8e      480fafee       imul rbp, rsi
0x00008b92      4183e801       sub r8d, 1
0x00008b96      75e0           jne 0x8b78
0x00008b98      e9a3feffff     jmp 0x8a40
0x00008b9d      0f1f00         nop dword [rax]
0x00008ba0      41bc04000000   mov r12d, 4
0x00008ba6      e91cfbffff     jmp 0x86c7
0x00008bab      0f1f440000     nop dword [rax + rax]
0x00008bb0      41bc01000000   mov r12d, 1
0x00008bb6      48bd00000000.  movabs rbp, 0x8000000000000000
0x00008bc0      e98bfcffff     jmp 0x8850
0x00008bc5      0f1f00         nop dword [rax]
0x00008bc8      41bb01000000   mov r11d, 1
0x00008bce      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x00008bd8      e9a8fdffff     jmp 0x8985
0x00008bdd      0f1f00         nop dword [rax]
0x00008be0      41bb01000000   mov r11d, 1
0x00008be6      48bd00000000.  movabs rbp, 0x8000000000000000
0x00008bf0      eba0           jmp 0x8b92
0x00008bf2      660f1f440000   nop word [rax + rax]
0x00008bf8      41bb01000000   mov r11d, 1
0x00008bfe      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x00008c08      e908fdffff     jmp 0x8915
0x00008c0d      0f1f00         nop dword [rax]
0x00008c10      41bb01000000   mov r11d, 1
0x00008c16      48bd00000000.  movabs rbp, 0x8000000000000000
0x00008c20      e911feffff     jmp 0x8a36
0x00008c25      0f1f00         nop dword [rax]
0x00008c28      41bb01000000   mov r11d, 1
0x00008c2e      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x00008c38      e958feffff     jmp 0x8a95
0x00008c3d      0f1f00         nop dword [rax]
0x00008c40      41bb01000000   mov r11d, 1
0x00008c46      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x00008c50      e9a8feffff     jmp 0x8afd
0x00008c55      0f1f00         nop dword [rax]
0x00008c58      41bb01000000   mov r11d, 1
0x00008c5e      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x00008c68      e925ffffff     jmp 0x8b92
0x00008c6d      0f1f00         nop dword [rax]
0x00008c70      41bc01000000   mov r12d, 1
0x00008c76      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x00008c80      e9cbfbffff     jmp 0x8850
0x00008c85      0f1f00         nop dword [rax]
0x00008c88      31ff           xor edi, edi
0x00008c8a      80790242       cmp byte [rcx + 2], 0x42
0x00008c8e      b800040000     mov eax, 0x400
0x00008c93      400f94c7       sete dil
0x00008c97      8d7c3f01       lea edi, [rdi + rdi + 1]
0x00008c9b      e932fbffff     jmp 0x87d2
0x00008ca0      41bb01000000   mov r11d, 1
0x00008ca6      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x00008cb0      e981fdffff     jmp 0x8a36
0x00008cb5      b801000000     mov eax, 1
0x00008cba      4c89c5         mov rbp, r8
0x00008cbd      e986fbffff     jmp 0x8848
0x00008cc2      b801000000     mov eax, 1
0x00008cc7      4c89d5         mov rbp, r10
0x00008cca      e979fbffff     jmp 0x8848
0x00008ccf      488d0dea3000.  lea rcx, obj.__PRETTY_FUNCTION__.4162   ; 0xbdc0 ; "xstrtol"
0x00008cd6      488d35c32f00.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0xbca0 ; "../coreutils-8.31/lib/xstrtol.c"
0x00008cdd      488d3ddc2f00.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0xbcc0 ; "0 <= strtol_base && strtol_base <= 36"
0x00008ce4      ba54000000     mov edx, 0x54                           ; 'T'
0x00008ce9      e8328effff     call sym.imp.__assert_fail
0x00008cee      e8bd8dffff     call sym.imp.__stack_chk_fail
0x00008cf3      662e0f1f8400.  nop word cs:[rax + rax]
0x00008cfd      0f1f00         nop dword [rax]
;-- xstrtoumax:
0x00008d00      4157           push r15
0x00008d02      4156           push r14
0x00008d04      4155           push r13
0x00008d06      4154           push r12
0x00008d08      55             push rbp
0x00008d09      53             push rbx
0x00008d0a      4883ec28       sub rsp, 0x28
0x00008d0e      64488b042528.  mov rax, qword fs:[0x28]
0x00008d17      4889442418     mov qword [rsp + 0x18], rax
0x00008d1c      31c0           xor eax, eax
0x00008d1e      83fa24         cmp edx, 0x24
0x00008d21      0f875e030000   ja 0x9085
0x00008d27      488d442410     lea rax, [rsp + 0x10]
0x00008d2c      4989f7         mov r15, rsi
0x00008d2f      4885f6         test rsi, rsi
0x00008d32      4889fd         mov rbp, rdi
0x00008d35      89542408       mov dword [rsp + 8], edx
0x00008d39      4989ce         mov r14, rcx
0x00008d3c      4d89c5         mov r13, r8
0x00008d3f      4c0f44f8       cmove r15, rax
0x00008d43      e8888cffff     call sym.imp.__errno_location
0x00008d48      c70000000000   mov dword [rax], 0
0x00008d4e      4989c4         mov r12, rax
0x00008d51      0fb65d00       movzx ebx, byte [rbp]
0x00008d55      e8d68fffff     call sym.imp.__ctype_b_loc
0x00008d5a      8b542408       mov edx, dword [rsp + 8]
0x00008d5e      488b30         mov rsi, qword [rax]
0x00008d61      4889e8         mov rax, rbp
0x00008d64      eb11           jmp 0x8d77
0x00008d66      662e0f1f8400.  nop word cs:[rax + rax]
0x00008d70      4883c001       add rax, 1
0x00008d74      0fb618         movzx ebx, byte [rax]
0x00008d77      0fb6cb         movzx ecx, bl
0x00008d7a      f6444e0120     test byte [rsi + rcx*2 + 1], 0x20
0x00008d7f      75ef           jne 0x8d70
0x00008d81      80fb2d         cmp bl, 0x2d
0x00008d84      7452           je 0x8dd8
0x00008d86      31c9           xor ecx, ecx
0x00008d88      4c89fe         mov rsi, r15
0x00008d8b      4889ef         mov rdi, rbp
0x00008d8e      e89d8dffff     call sym.imp.__strtoul_internal
0x00008d93      498b0f         mov rcx, qword [r15]
0x00008d96      4889c3         mov rbx, rax
0x00008d99      4839e9         cmp rcx, rbp
0x00008d9c      742a           je 0x8dc8
0x00008d9e      418b0424       mov eax, dword [r12]
0x00008da2      85c0           test eax, eax
0x00008da4      7462           je 0x8e08
0x00008da6      83f822         cmp eax, 0x22
0x00008da9      bd01000000     mov ebp, 1
0x00008dae      7528           jne 0x8dd8
0x00008db0      4d85ed         test r13, r13
0x00008db3      7409           je 0x8dbe
0x00008db5      440fb621       movzx r12d, byte [rcx]
0x00008db9      4584e4         test r12b, r12b
0x00008dbc      7579           jne 0x8e37
0x00008dbe      49891e         mov qword [r14], rbx
0x00008dc1      eb1a           jmp 0x8ddd
0x00008dc3      0f1f440000     nop dword [rax + rax]
0x00008dc8      4d85ed         test r13, r13
0x00008dcb      48894c2408     mov qword [rsp + 8], rcx
0x00008dd0      753e           jne 0x8e10
0x00008dd2      660f1f440000   nop word [rax + rax]
0x00008dd8      bd04000000     mov ebp, 4
0x00008ddd      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00008de2      6448333c2528.  xor rdi, qword fs:[0x28]
0x00008deb      89e8           mov eax, ebp
0x00008ded      0f858d020000   jne 0x9080
0x00008df3      4883c428       add rsp, 0x28
0x00008df7      5b             pop rbx
0x00008df8      5d             pop rbp
0x00008df9      415c           pop r12
0x00008dfb      415d           pop r13
0x00008dfd      415e           pop r14
0x00008dff      415f           pop r15
0x00008e01      c3             ret
0x00008e02      660f1f440000   nop word [rax + rax]
0x00008e08      31ed           xor ebp, ebp
0x00008e0a      eba4           jmp 0x8db0
0x00008e0c      0f1f4000       nop dword [rax]
0x00008e10      440fb66500     movzx r12d, byte [rbp]
0x00008e15      4584e4         test r12b, r12b
0x00008e18      74be           je 0x8dd8
0x00008e1a      410fbef4       movsx esi, r12b
0x00008e1e      4c89ef         mov rdi, r13
0x00008e21      31ed           xor ebp, ebp
0x00008e23      e8b88cffff     call sym.imp.strchr
0x00008e28      4885c0         test rax, rax
0x00008e2b      bb01000000     mov ebx, 1
0x00008e30      488b4c2408     mov rcx, qword [rsp + 8]
0x00008e35      74a1           je 0x8dd8
0x00008e37      410fbef4       movsx esi, r12b
0x00008e3b      4c89ef         mov rdi, r13
0x00008e3e      48894c2408     mov qword [rsp + 8], rcx
0x00008e43      e8988cffff     call sym.imp.strchr
0x00008e48      4885c0         test rax, rax
0x00008e4b      488b4c2408     mov rcx, qword [rsp + 8]
0x00008e50      0f84c6000000   je 0x8f1c
0x00008e56      418d4424bb     lea eax, [r12 - 0x45]
0x00008e5b      3c2f           cmp al, 0x2f
0x00008e5d      7751           ja 0x8eb0
0x00008e5f      48ba45893000.  movabs rdx, 0x814400308945
0x00008e69      480fa3c2       bt rdx, rax
0x00008e6d      7341           jae 0x8eb0
0x00008e6f      be30000000     mov esi, 0x30                           ; '0'
0x00008e74      4c89ef         mov rdi, r13
0x00008e77      48894c2408     mov qword [rsp + 8], rcx
0x00008e7c      e85f8cffff     call sym.imp.strchr
0x00008e81      4885c0         test rax, rax
0x00008e84      488b4c2408     mov rcx, qword [rsp + 8]
0x00008e89      7425           je 0x8eb0
0x00008e8b      0fb64101       movzx eax, byte [rcx + 1]
0x00008e8f      3c44           cmp al, 0x44
0x00008e91      740c           je 0x8e9f
0x00008e93      3c69           cmp al, 0x69
0x00008e95      0f84cd010000   je 0x9068
0x00008e9b      3c42           cmp al, 0x42
0x00008e9d      7511           jne 0x8eb0
0x00008e9f      bf02000000     mov edi, 2
0x00008ea4      bee8030000     mov esi, 0x3e8
0x00008ea9      eb0f           jmp 0x8eba
0x00008eab      0f1f440000     nop dword [rax + rax]
0x00008eb0      bf01000000     mov edi, 1
0x00008eb5      be00040000     mov esi, 0x400
0x00008eba      4183ec42       sub r12d, 0x42
0x00008ebe      4180fc35       cmp r12b, 0x35
0x00008ec2      7758           ja 0x8f1c
0x00008ec4      488d15fd2e00.  lea rdx, [0x0000bdc8]
0x00008ecb      450fb6e4       movzx r12d, r12b
0x00008ecf      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00008ed3      4801d0         add rax, rdx
0x00008ed6      ffe0           jmp rax
0x00008ed8      4889d8         mov rax, rbx
0x00008edb      48f7e6         mul rsi
0x00008ede      0f80ed010000   jo 0x90d1
0x00008ee4      4531c0         xor r8d, r8d
0x00008ee7      48f7e6         mul rsi
0x00008eea      0f80d2010000   jo 0x90c2
0x00008ef0      4889c3         mov rbx, rax
0x00008ef3      4409c5         or ebp, r8d
0x00008ef6      662e0f1f8400.  nop word cs:[rax + rax]
0x00008f00      4863ff         movsxd rdi, edi
0x00008f03      89e8           mov eax, ebp
0x00008f05      4801f9         add rcx, rdi
0x00008f08      83c802         or eax, 2
0x00008f0b      49890f         mov qword [r15], rcx
0x00008f0e      803900         cmp byte [rcx], 0
0x00008f11      49891e         mov qword [r14], rbx
0x00008f14      0f45e8         cmovne ebp, eax
0x00008f17      e9c1feffff     jmp 0x8ddd
0x00008f1c      49891e         mov qword [r14], rbx
0x00008f1f      83cd02         or ebp, 2
0x00008f22      e9b6feffff     jmp 0x8ddd
0x00008f27      ba02000000     mov edx, 2
0x00008f2c      4889d0         mov rax, rdx
0x00008f2f      48f7e3         mul rbx
0x00008f32      0f8096000000   jo 0x8fce
0x00008f38      4801db         add rbx, rbx
0x00008f3b      ebc3           jmp 0x8f00
0x00008f3d      ba00020000     mov edx, 0x200
0x00008f42      4889d0         mov rax, rdx
0x00008f45      48f7e3         mul rbx
0x00008f48      0f8080000000   jo 0x8fce
0x00008f4e      48c1e309       shl rbx, 9
0x00008f52      ebac           jmp 0x8f00
0x00008f54      41b807000000   mov r8d, 7
0x00008f5a      4531c9         xor r9d, r9d
0x00008f5d      0f1f00         nop dword [rax]
0x00008f60      4889d8         mov rax, rbx
0x00008f63      48f7e6         mul rsi
0x00008f66      4889c3         mov rbx, rax
0x00008f69      0f808f010000   jo 0x90fe
0x00008f6f      4183e801       sub r8d, 1
0x00008f73      75eb           jne 0x8f60
0x00008f75      4409cd         or ebp, r9d
0x00008f78      eb86           jmp 0x8f00
0x00008f7a      41b808000000   mov r8d, 8
0x00008f80      4531c9         xor r9d, r9d
0x00008f83      0f1f440000     nop dword [rax + rax]
0x00008f88      4889d8         mov rax, rbx
0x00008f8b      48f7e6         mul rsi
0x00008f8e      4889c3         mov rbx, rax
0x00008f91      0f8049010000   jo 0x90e0
0x00008f97      4183e801       sub r8d, 1
0x00008f9b      75eb           jne 0x8f88
0x00008f9d      ebd6           jmp 0x8f75
0x00008f9f      41b804000000   mov r8d, 4
0x00008fa5      4531c9         xor r9d, r9d
0x00008fa8      4889d8         mov rax, rbx
0x00008fab      48f7e6         mul rsi
0x00008fae      4889c3         mov rbx, rax
0x00008fb1      0f80fc000000   jo 0x90b3
0x00008fb7      4183e801       sub r8d, 1
0x00008fbb      75eb           jne 0x8fa8
0x00008fbd      ebb6           jmp 0x8f75
0x00008fbf      4889d8         mov rax, rbx
0x00008fc2      48f7e6         mul rsi
0x00008fc5      4889c3         mov rbx, rax
0x00008fc8      0f8132ffffff   jno 0x8f00
0x00008fce      bd01000000     mov ebp, 1
0x00008fd3      4883cbff       or rbx, 0xffffffffffffffff
0x00008fd7      e924ffffff     jmp 0x8f00
0x00008fdc      0f1f4000       nop dword [rax]
0x00008fe0      41b805000000   mov r8d, 5
0x00008fe6      4531c9         xor r9d, r9d
0x00008fe9      4889d8         mov rax, rbx
0x00008fec      48f7e6         mul rsi
0x00008fef      4889c3         mov rbx, rax
0x00008ff2      0f80f7000000   jo 0x90ef
0x00008ff8      4183e801       sub r8d, 1
0x00008ffc      75eb           jne 0x8fe9
0x00008ffe      e972ffffff     jmp 0x8f75
0x00009003      41b806000000   mov r8d, 6
0x00009009      4531c9         xor r9d, r9d
0x0000900c      4889d8         mov rax, rbx
0x0000900f      48f7e6         mul rsi
0x00009012      4889c3         mov rbx, rax
0x00009015      0f8089000000   jo 0x90a4
0x0000901b      4183e801       sub r8d, 1
0x0000901f      75eb           jne 0x900c
0x00009021      e94fffffff     jmp 0x8f75
0x00009026      ba00040000     mov edx, 0x400
0x0000902b      4889d0         mov rax, rdx
0x0000902e      48f7e3         mul rbx
0x00009031      709b           jo 0x8fce
0x00009033      48c1e30a       shl rbx, 0xa
0x00009037      e9c4feffff     jmp 0x8f00
0x0000903c      4889d8         mov rax, rbx
0x0000903f      48f7e6         mul rsi
0x00009042      0f80c5000000   jo 0x910d
0x00009048      4531c0         xor r8d, r8d
0x0000904b      48f7e6         mul rsi
0x0000904e      0f8193feffff   jno 0x8ee7
0x00009054      41b801000000   mov r8d, 1
0x0000905a      4883c8ff       or rax, 0xffffffffffffffff
0x0000905e      e984feffff     jmp 0x8ee7
0x00009063      0f1f440000     nop dword [rax + rax]
0x00009068      31ff           xor edi, edi
0x0000906a      80790242       cmp byte [rcx + 2], 0x42
0x0000906e      be00040000     mov esi, 0x400
0x00009073      400f94c7       sete dil
0x00009077      8d7c3f01       lea edi, [rdi + rdi + 1]
0x0000907b      e93afeffff     jmp 0x8eba
0x00009080      e82b8affff     call sym.imp.__stack_chk_fail
0x00009085      488d0d142e00.  lea rcx, obj.__PRETTY_FUNCTION__.4162_1 ; 0xbea0 ; "xstrtoumax"
0x0000908c      488d350d2c00.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0xbca0 ; "../coreutils-8.31/lib/xstrtol.c"
0x00009093      488d3d262c00.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0xbcc0 ; "0 <= strtol_base && strtol_base <= 36"
0x0000909a      ba54000000     mov edx, 0x54                           ; 'T'
0x0000909f      e87c8affff     call sym.imp.__assert_fail
0x000090a4      41b901000000   mov r9d, 1
0x000090aa      4883cbff       or rbx, 0xffffffffffffffff
0x000090ae      e968ffffff     jmp 0x901b
0x000090b3      41b901000000   mov r9d, 1
0x000090b9      4883cbff       or rbx, 0xffffffffffffffff
0x000090bd      e9f5feffff     jmp 0x8fb7
0x000090c2      41b801000000   mov r8d, 1
0x000090c8      4883cbff       or rbx, 0xffffffffffffffff
0x000090cc      e922feffff     jmp 0x8ef3
0x000090d1      4883c8ff       or rax, 0xffffffffffffffff
0x000090d5      41b801000000   mov r8d, 1
0x000090db      e907feffff     jmp 0x8ee7
0x000090e0      41b901000000   mov r9d, 1
0x000090e6      4883cbff       or rbx, 0xffffffffffffffff
0x000090ea      e9a8feffff     jmp 0x8f97
0x000090ef      41b901000000   mov r9d, 1
0x000090f5      4883cbff       or rbx, 0xffffffffffffffff
0x000090f9      e9fafeffff     jmp 0x8ff8
0x000090fe      41b901000000   mov r9d, 1
0x00009104      4883cbff       or rbx, 0xffffffffffffffff
0x00009108      e962feffff     jmp 0x8f6f
0x0000910d      41b801000000   mov r8d, 1
0x00009113      4883c8ff       or rax, 0xffffffffffffffff
0x00009117      e92fffffff     jmp 0x904b
0x0000911c      0f1f4000       nop dword [rax]
;-- rpl_mbrtowc:
0x00009120      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00009122      4154           push r12
0x00009124      4989f5         mov r13, rsi
0x00009127      55             push rbp
0x00009128      53             push rbx
0x00009129      4889fb         mov rbx, rdi
0x0000912c      4989d4         mov r12, rdx
0x0000912f      4883ec18       sub rsp, 0x18
0x00009133      64488b042528.  mov rax, qword fs:[0x28]
0x0000913c      4889442408     mov qword [rsp + 8], rax
0x00009141      31c0           xor eax, eax
0x00009143      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00009148      4885ff         test rdi, rdi
0x0000914b      480f44d8       cmove rbx, rax
0x0000914f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00009152      e87989ffff     call sym.imp.mbrtowc
0x00009157      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x0000915b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x0000915e      7620           jbe 0x9180                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00009160      4d85e4         test r12, r12
0x00009163      741b           je 0x9180
0x00009165      31ff           xor edi, edi
0x00009167      e8c4000000     call sym.hard_locale
0x0000916c      84c0           test al, al
0x0000916e      7510           jne 0x9180
0x00009170      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00009175      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x0000917a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x0000917c      0f1f4000       nop dword [rax]
0x00009180      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00009185      644833142528.  xor rdx, qword fs:[0x28]
0x0000918e      4889e8         mov rax, rbp
0x00009191      750b           jne 0x919e
0x00009193      4883c418       add rsp, 0x18
0x00009197      5b             pop rbx
0x00009198      5d             pop rbp
0x00009199      415c           pop r12
0x0000919b      415d           pop r13
0x0000919d      c3             ret
0x0000919e      e80d89ffff     call sym.imp.__stack_chk_fail
0x000091a3      662e0f1f8400.  nop word cs:[rax + rax]
0x000091ad      0f1f00         nop dword [rax]
;-- close_stream:
0x000091b0      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x000091b2      55             push rbp
0x000091b3      4889fd         mov rbp, rdi
0x000091b6      53             push rbx
0x000091b7      e85488ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x000091bc      8b5d00         mov ebx, dword [rbp]
0x000091bf      4889ef         mov rdi, rbp
0x000091c2      4989c4         mov r12, rax
0x000091c5      e806010000     call sym.rpl_fclose
0x000091ca      83e320         and ebx, 0x20                           ; "@"
0x000091cd      85db           test ebx, ebx
0x000091cf      7517           jne 0x91e8
0x000091d1      85c0           test eax, eax
0x000091d3      740a           je 0x91df                               ; stdio.h:-186
0x000091d5      4d85e4         test r12, r12                           ; stdio.h:-178
0x000091d8      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000091dd      7439           je 0x9218
0x000091df      5b             pop rbx
0x000091e0      5d             pop rbp
0x000091e1      415c           pop r12
0x000091e3      c3             ret
0x000091e4      0f1f4000       nop dword [rax]
0x000091e8      85c0           test eax, eax
0x000091ea      751c           jne 0x9208
0x000091ec      e8df87ffff     call sym.imp.__errno_location
0x000091f1      c70000000000   mov dword [rax], 0
0x000091f7      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000091fc      5b             pop rbx
0x000091fd      5d             pop rbp
0x000091fe      415c           pop r12
0x00009200      c3             ret
0x00009201      0f1f80000000.  nop dword [rax]
0x00009208      5b             pop rbx
0x00009209      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000920e      5d             pop rbp                                 ; stdio.h:-186
0x0000920f      415c           pop r12
0x00009211      c3             ret
0x00009212      660f1f440000   nop word [rax + rax]
0x00009218      e8b387ffff     call sym.imp.__errno_location
0x0000921d      833809         cmp dword [rax], 9
0x00009220      5b             pop rbx
0x00009221      5d             pop rbp
0x00009222      415c           pop r12                                 ; stdio.h:-178
0x00009224      0f95c0         setne al
0x00009227      0fb6c0         movzx eax, al
0x0000922a      f7d8           neg eax
0x0000922c      c3             ret
0x0000922d      0f1f00         nop dword [rax]
;-- hard_locale:
0x00009230      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00009234      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00009236      e8058affff     call sym.imp.setlocale
0x0000923b      4889c2         mov rdx, rax
0x0000923e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00009243      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00009246      741d           je 0x9265
0x00009248      488d3d5c2c00.  lea rdi, [0x0000beab]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x0000924f      b902000000     mov ecx, 2
0x00009254      4889d6         mov rsi, rdx
0x00009257      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00009259      0f97c1         seta cl
0x0000925c      80d900         sbb cl, 0
0x0000925f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00009261      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00009263      750b           jne 0x9270
0x00009265      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00009269      c3             ret
0x0000926a      660f1f440000   nop word [rax + rax]
0x00009270      488d3d362c00.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0xbead ; "POSIX"
0x00009277      b906000000     mov ecx, 6
0x0000927c      4889d6         mov rsi, rdx
0x0000927f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00009281      0f97c0         seta al
0x00009284      1c00           sbb al, 0
0x00009286      84c0           test al, al
0x00009288      0f95c0         setne al
0x0000928b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0000928f      c3             ret
;-- locale_charset:
0x00009290      4883ec08       sub rsp, 8
0x00009294      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00009299      e87289ffff     call sym.imp.nl_langinfo
0x0000929e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x000092a1      741d           je 0x92c0
0x000092a3      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x000092a6      488d15062c00.  lea rdx, str.ASCII                      ; 0xbeb3 ; "ASCII"
0x000092ad      480f44c2       cmove rax, rdx
0x000092b1      4883c408       add rsp, 8
0x000092b5      c3             ret
0x000092b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000092c0      488d05ec2b00.  lea rax, str.ASCII                      ; 0xbeb3 ; "ASCII"
0x000092c7      4883c408       add rsp, 8
0x000092cb      c3             ret
0x000092cc      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x000092d0      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x000092d2      55             push rbp
0x000092d3      53             push rbx
0x000092d4      4889fb         mov rbx, rdi
0x000092d7      e8f488ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x000092dc      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x000092de      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x000092e1      7854           js 0x9337                               ; ../coreutils-8.31/lib/fclose.c:66
0x000092e3      e83889ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x000092e8      85c0           test eax, eax
0x000092ea      752c           jne 0x9318
0x000092ec      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x000092ef      e85c000000     call sym.rpl_fflush
0x000092f4      85c0           test eax, eax
0x000092f6      743c           je 0x9334
0x000092f8      e8d386ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x000092fd      448b20         mov r12d, dword [rax]
0x00009300      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00009303      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00009306      e85587ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x0000930b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x0000930e      7530           jne 0x9340
0x00009310      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00009311      5d             pop rbp
0x00009312      415c           pop r12
0x00009314      c3             ret
0x00009315      0f1f00         nop dword [rax]
0x00009318      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x0000931b      e8b088ffff     call sym.imp.fileno
0x00009320      31f6           xor esi, esi
0x00009322      ba01000000     mov edx, 1
0x00009327      89c7           mov edi, eax
0x00009329      e8e287ffff     call sym.imp.lseek
0x0000932e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00009332      75b8           jne 0x92ec
0x00009334      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00009337      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00009338      5d             pop rbp
0x00009339      415c           pop r12
0x0000933b      e92087ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00009340      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00009344      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00009349      ebc5           jmp 0x9310
0x0000934b      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x00009350      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00009353      53             push rbx
0x00009354      4889fb         mov rbx, rdi
0x00009357      7411           je 0x936a                               ; ../coreutils-8.31/lib/fflush.c:150
0x00009359      e8c288ffff     call sym.imp.__freading
0x0000935e      85c0           test eax, eax
0x00009360      7408           je 0x936a
0x00009362      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00009368      750e           jne 0x9378
0x0000936a      4889df         mov rdi, rbx
0x0000936d      5b             pop rbx
0x0000936e      e98d88ffff     jmp sym.imp.fflush
0x00009373      0f1f440000     nop dword [rax + rax]
0x00009378      4889df         mov rdi, rbx
0x0000937b      ba01000000     mov edx, 1
0x00009380      31f6           xor esi, esi
0x00009382      e809000000     call sym.rpl_fseeko
0x00009387      4889df         mov rdi, rbx
0x0000938a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x0000938b      e97088ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00009390      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00009394      48394710       cmp qword [rdi + 0x10], rax
0x00009398      7406           je 0x93a0                               ; ../coreutils-8.31/lib/fseeko.c:32
0x0000939a      e9f188ffff     jmp sym.imp.fseeko                      ; /sys_errlist.h:9
0x0000939f      90             nop
0x000093a0      488b4720       mov rax, qword [rdi + 0x20]
0x000093a4      48394728       cmp qword [rdi + 0x28], rax
0x000093a8      75f0           jne 0x939a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x000093aa      48837f4800     cmp qword [rdi + 0x48], 0
0x000093af      75e9           jne 0x939a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x000093b1      4154           push r12
0x000093b3      55             push rbp
0x000093b4      4189d4         mov r12d, edx
0x000093b7      53             push rbx
0x000093b8      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x000093bb      4889fb         mov rbx, rdi
0x000093be      e80d88ffff     call sym.imp.fileno
0x000093c3      4489e2         mov edx, r12d
0x000093c6      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x000093c9      89c7           mov edi, eax                            ; /sys_errlist.h:17
0x000093cb      e84087ffff     call sym.imp.lseek
0x000093d0      4883f8ff       cmp rax, 0xffffffffffffffff
0x000093d4      740c           je 0x93e2
0x000093d6      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x000093d9      488983900000.  mov qword [rbx + 0x90], rax
0x000093e0      31c0           xor eax, eax
0x000093e2      5b             pop rbx                                 ; /sys_errlist.h:19
0x000093e3      5d             pop rbp
0x000093e4      415c           pop r12
0x000093e6      c3             ret
0x000093e7      660f1f840000.  nop word [rax + rax]
;-- __libc_csu_init:
0x000093f0      4157           push r15
0x000093f2      4156           push r14
0x000093f4      4989d7         mov r15, rdx
0x000093f7      4155           push r13
0x000093f9      4154           push r12
0x000093fb      4c8d252e4420.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x20d830
0x00009402      55             push rbp
0x00009403      488d2d2e4420.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x20d838 ; "P,"
0x0000940a      53             push rbx
0x0000940b      4189fd         mov r13d, edi
0x0000940e      4989f6         mov r14, rsi
0x00009411      4c29e5         sub rbp, r12
0x00009414      4883ec08       sub rsp, 8
0x00009418      48c1fd03       sar rbp, 3
0x0000941c      e84f85ffff     call sym._init
0x00009421      4885ed         test rbp, rbp
0x00009424      7420           je 0x9446
0x00009426      31db           xor ebx, ebx
0x00009428      0f1f84000000.  nop dword [rax + rax]
0x00009430      4c89fa         mov rdx, r15
0x00009433      4c89f6         mov rsi, r14
0x00009436      4489ef         mov edi, r13d
0x00009439      41ff14dc       call qword [r12 + rbx*8]
0x0000943d      4883c301       add rbx, 1
0x00009441      4839dd         cmp rbp, rbx
0x00009444      75ea           jne 0x9430
0x00009446      4883c408       add rsp, 8
0x0000944a      5b             pop rbx
0x0000944b      5d             pop rbp
0x0000944c      415c           pop r12
0x0000944e      415d           pop r13
0x00009450      415e           pop r14
0x00009452      415f           pop r15
0x00009454      c3             ret
0x00009455      90             nop
0x00009456      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00009460      f3c3           ret
0x00009462      662e0f1f8400.  nop word cs:[rax + rax]
0x0000946c      0f1f4000       nop dword [rax]
;-- atexit:
0x00009470      488b15914b20.  mov rdx, qword [obj.__dso_handle]       ; [0x20e008:8]=0x20e008 obj.__dso_handle
0x00009477      31f6           xor esi, esi
0x00009479      e92288ffff     jmp sym.imp.__cxa_atexit
0x0000947e      0000           add byte [rax], al
