;-- section..plt:
;-- .plt:
0x00001260      ff350a5c2000   push qword [0x00206e70]                 ; [12] -r-x section size 672 named .plt
0x00001266      ff250c5c2000   jmp qword [0x00206e78]                  ; [0x206e78:8]=0
0x0000126c      0f1f4000       nop dword [rax]
;-- imp.free:
0x00001270      ff250a5c2000   jmp qword [reloc.free]                  ; [0x206e80:8]=0x1276 ; "v\x12"
0x00001276      6800000000     push 0
0x0000127b      e9e0ffffff     jmp sym..plt
;-- imp.abort:
0x00001280      ff25025c2000   jmp qword [reloc.abort]                 ; [0x206e88:8]=0x1286
0x00001286      6801000000     push 1
0x0000128b      e9d0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x00001290      ff25fa5b2000   jmp qword [reloc.__errno_location]      ; [0x206e90:8]=0x1296
0x00001296      6802000000     push 2
0x0000129b      e9c0ffffff     jmp sym..plt
;-- imp.strncmp:
0x000012a0      ff25f25b2000   jmp qword [reloc.strncmp]               ; [0x206e98:8]=0x12a6
0x000012a6      6803000000     push 3
0x000012ab      e9b0ffffff     jmp sym..plt
;-- imp._exit:
0x000012b0      ff25ea5b2000   jmp qword [reloc._exit]                 ; [0x206ea0:8]=0x12b6
0x000012b6      6804000000     push 4
0x000012bb      e9a0ffffff     jmp sym..plt
;-- imp.__fpending:
0x000012c0      ff25e25b2000   jmp qword [reloc.__fpending]            ; [0x206ea8:8]=0x12c6
0x000012c6      6805000000     push 5
0x000012cb      e990ffffff     jmp sym..plt
;-- imp.textdomain:
0x000012d0      ff25da5b2000   jmp qword [reloc.textdomain]            ; [0x206eb0:8]=0x12d6
0x000012d6      6806000000     push 6
0x000012db      e980ffffff     jmp sym..plt
;-- imp.fclose:
0x000012e0      ff25d25b2000   jmp qword [reloc.fclose]                ; [0x206eb8:8]=0x12e6
0x000012e6      6807000000     push 7
0x000012eb      e970ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x000012f0      ff25ca5b2000   jmp qword [reloc.bindtextdomain]        ; [0x206ec0:8]=0x12f6
0x000012f6      6808000000     push 8
0x000012fb      e960ffffff     jmp sym..plt
;-- imp.dcgettext:
0x00001300      ff25c25b2000   jmp qword [reloc.dcgettext]             ; [0x206ec8:8]=0x1306
0x00001306      6809000000     push 9
0x0000130b      e950ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001310      ff25ba5b2000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x206ed0:8]=0x1316
0x00001316      680a000000     push 0xa
0x0000131b      e940ffffff     jmp sym..plt
;-- imp.strlen:
0x00001320      ff25b25b2000   jmp qword [reloc.strlen]                ; [0x206ed8:8]=0x1326 ; "&\x13"
0x00001326      680b000000     push 0xb
0x0000132b      e930ffffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001330      ff25aa5b2000   jmp qword [reloc.__stack_chk_fail]      ; [0x206ee0:8]=0x1336 ; "6\x13"
0x00001336      680c000000     push 0xc
0x0000133b      e920ffffff     jmp sym..plt
;-- imp.getopt_long:
0x00001340      ff25a25b2000   jmp qword [reloc.getopt_long]           ; [0x206ee8:8]=0x1346 ; "F\x13"
0x00001346      680d000000     push 0xd
0x0000134b      e910ffffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001350      ff259a5b2000   jmp qword [reloc.mbrtowc]               ; [0x206ef0:8]=0x1356 ; "V\x13"
0x00001356      680e000000     push 0xe
0x0000135b      e900ffffff     jmp sym..plt
;-- imp.__overflow:
0x00001360      ff25925b2000   jmp qword [reloc.__overflow]            ; [0x206ef8:8]=0x1366 ; "f\x13"
0x00001366      680f000000     push 0xf
0x0000136b      e9f0feffff     jmp sym..plt
;-- imp.strrchr:
0x00001370      ff258a5b2000   jmp qword [reloc.strrchr]               ; [0x206f00:8]=0x1376 ; "v\x13"
0x00001376      6810000000     push 0x10
0x0000137b      e9e0feffff     jmp sym..plt
;-- imp.lseek:
0x00001380      ff25825b2000   jmp qword [reloc.lseek]                 ; [0x206f08:8]=0x1386
0x00001386      6811000000     push 0x11
0x0000138b      e9d0feffff     jmp sym..plt
;-- imp.memset:
0x00001390      ff257a5b2000   jmp qword [reloc.memset]                ; [0x206f10:8]=0x1396
0x00001396      6812000000     push 0x12
0x0000139b      e9c0feffff     jmp sym..plt
;-- imp.strndup:
0x000013a0      ff25725b2000   jmp qword [reloc.strndup]               ; [0x206f18:8]=0x13a6
0x000013a6      6813000000     push 0x13
0x000013ab      e9b0feffff     jmp sym..plt
;-- imp.memcmp:
0x000013b0      ff256a5b2000   jmp qword [reloc.memcmp]                ; [0x206f20:8]=0x13b6
0x000013b6      6814000000     push 0x14
0x000013bb      e9a0feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x000013c0      ff25625b2000   jmp qword [reloc.fputs_unlocked]        ; [0x206f28:8]=0x13c6
0x000013c6      6815000000     push 0x15
0x000013cb      e990feffff     jmp sym..plt
;-- imp.calloc:
0x000013d0      ff255a5b2000   jmp qword [reloc.calloc]                ; [0x206f30:8]=0x13d6
0x000013d6      6816000000     push 0x16
0x000013db      e980feffff     jmp sym..plt
;-- imp.memcpy:
0x000013e0      ff25525b2000   jmp qword [reloc.memcpy]                ; [0x206f38:8]=0x13e6
0x000013e6      6817000000     push 0x17
0x000013eb      e970feffff     jmp sym..plt
;-- imp.fileno:
0x000013f0      ff254a5b2000   jmp qword [reloc.fileno]                ; [0x206f40:8]=0x13f6
0x000013f6      6818000000     push 0x18
0x000013fb      e960feffff     jmp sym..plt
;-- imp.malloc:
0x00001400      ff25425b2000   jmp qword [reloc.malloc]                ; [0x206f48:8]=0x1406
0x00001406      6819000000     push 0x19
0x0000140b      e950feffff     jmp sym..plt
;-- imp.fflush:
0x00001410      ff253a5b2000   jmp qword [reloc.fflush]                ; [0x206f50:8]=0x1416
0x00001416      681a000000     push 0x1a
0x0000141b      e940feffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001420      ff25325b2000   jmp qword [reloc.nl_langinfo]           ; [0x206f58:8]=0x1426 ; "&\x14"
0x00001426      681b000000     push 0x1b
0x0000142b      e930feffff     jmp sym..plt
;-- imp.__freading:
0x00001430      ff252a5b2000   jmp qword [reloc.__freading]            ; [0x206f60:8]=0x1436 ; "6\x14"
0x00001436      681c000000     push 0x1c
0x0000143b      e920feffff     jmp sym..plt
;-- imp.realloc:
0x00001440      ff25225b2000   jmp qword [reloc.realloc]               ; [0x206f68:8]=0x1446 ; "F\x14"
0x00001446      681d000000     push 0x1d
0x0000144b      e910feffff     jmp sym..plt
;-- imp.setlocale:
0x00001450      ff251a5b2000   jmp qword [reloc.setlocale]             ; [0x206f70:8]=0x1456 ; "V\x14"
0x00001456      681e000000     push 0x1e
0x0000145b      e900feffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001460      ff25125b2000   jmp qword [reloc.__printf_chk]          ; [0x206f78:8]=0x1466 ; "f\x14"
0x00001466      681f000000     push 0x1f
0x0000146b      e9f0fdffff     jmp sym..plt
;-- imp.error:
0x00001470      ff250a5b2000   jmp qword [reloc.error]                 ; [0x206f80:8]=0x1476 ; "v\x14"
0x00001476      6820000000     push 0x20                               ; "@"
0x0000147b      e9e0fdffff     jmp sym..plt
;-- imp.fseeko:
0x00001480      ff25025b2000   jmp qword [reloc.fseeko]                ; [0x206f88:8]=0x1486
0x00001486      6821000000     push 0x21                               ; '!'
0x0000148b      e9d0fdffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001490      ff25fa5a2000   jmp qword [reloc.__cxa_atexit]          ; [0x206f90:8]=0x1496
0x00001496      6822000000     push 0x22                               ; '"'
0x0000149b      e9c0fdffff     jmp sym..plt
;-- imp.exit:
0x000014a0      ff25f25a2000   jmp qword [reloc.exit]                  ; [0x206f98:8]=0x14a6
0x000014a6      6823000000     push 0x23                               ; '#'
0x000014ab      e9b0fdffff     jmp sym..plt
;-- imp.fwrite:
0x000014b0      ff25ea5a2000   jmp qword [reloc.fwrite]                ; [0x206fa0:8]=0x14b6
0x000014b6      6824000000     push 0x24                               ; '$'
0x000014bb      e9a0fdffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x000014c0      ff25e25a2000   jmp qword [reloc.__fprintf_chk]         ; [0x206fa8:8]=0x14c6
0x000014c6      6825000000     push 0x25                               ; '%'
0x000014cb      e990fdffff     jmp sym..plt
;-- imp.mbsinit:
0x000014d0      ff25da5a2000   jmp qword [reloc.mbsinit]               ; [0x206fb0:8]=0x14d6
0x000014d6      6826000000     push 0x26                               ; '&'
0x000014db      e980fdffff     jmp sym..plt
;-- imp.iswprint:
0x000014e0      ff25d25a2000   jmp qword [reloc.iswprint]              ; [0x206fb8:8]=0x14e6
0x000014e6      6827000000     push 0x27                               ; '''
0x000014eb      e970fdffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x000014f0      ff25ca5a2000   jmp qword [reloc.__ctype_b_loc]         ; [0x206fc0:8]=0x14f6
0x000014f6      6828000000     push 0x28                               ; '(' ; "x1\x02"
0x000014fb      e960fdffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001500      .qword 0x906600205ae225ff                              ; [13] -r-x section size 8 named .plt.got
0x00001508      0000           add byte [rax], al
0x0000150a      0000           add byte [rax], al
0x0000150c      0000           add byte [rax], al
0x0000150e      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x00001510      4156           push r14                                ; [14] -r-x section size 13070 named .text
0x00001512      4155           push r13
0x00001514      4531f6         xor r14d, r14d
0x00001517      4154           push r12
0x00001519      55             push rbp
0x0000151a      89fd           mov ebp, edi
0x0000151c      53             push rbx
0x0000151d      488b3e         mov rdi, qword [rsi]
0x00001520      4889f3         mov rbx, rsi
0x00001523      4531ed         xor r13d, r13d
0x00001526      4531e4         xor r12d, r12d
0x00001529      e892090000     call sym.set_program_name
0x0000152e      488d356c3d00.  lea rsi, [0x000052a1]
0x00001535      bf06000000     mov edi, 6
0x0000153a      e811ffffff     call sym.imp.setlocale
0x0000153f      488d35aa3300.  lea rsi, str.usr_local_share_locale     ; 0x48f0 ; "/usr/local/share/locale"
0x00001546      488d3d7a3300.  lea rdi, [0x000048c7]                   ; "coreutils"
0x0000154d      e89efdffff     call sym.imp.bindtextdomain
0x00001552      488d3d6e3300.  lea rdi, [0x000048c7]                   ; "coreutils"
0x00001559      e872fdffff     call sym.imp.textdomain
0x0000155e      488d3d5b0700.  lea rdi, sym.close_stdout               ; 0x1cc0 ; "USH\x83\xec\bH\x8b=\xbbS "
0x00001565      e8a6320000     call sym.atexit
0x0000156a      488d0def5520.  lea rcx, obj.longopts                   ; 0x206b60 ; "?I"
0x00001571      488d15903300.  lea rdx, str.as:z                       ; 0x4908 ; "+as:z"
0x00001578      4531c0         xor r8d, r8d
0x0000157b      4889de         mov rsi, rbx
0x0000157e      89ef           mov edi, ebp
0x00001580      e8bbfdffff     call sym.imp.getopt_long
0x00001585      83f8ff         cmp eax, 0xffffffff
0x00001588      0f8484000000   je 0x1612
0x0000158e      83f861         cmp eax, 0x61
0x00001591      745d           je 0x15f0
0x00001593      7e1b           jle 0x15b0
0x00001595      83f873         cmp eax, 0x73
0x00001598      7466           je 0x1600
0x0000159a      83f87a         cmp eax, 0x7a
0x0000159d      0f8507010000   jne 0x16aa
0x000015a3      41bd01000000   mov r13d, 1
0x000015a9      ebbf           jmp 0x156a
0x000015ab      0f1f440000     nop dword [rax + rax]
0x000015b0      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x000015b5      0f85c0000000   jne 0x167b
0x000015bb      488b3dc65a20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x207088:8]=0
0x000015c2      488b0d475a20.  mov rcx, qword [obj.Version]            ; [0x207010:8]=0x4d1b str.8.31
0x000015c9      4c8d053e3300.  lea r8, str.David_MacKenzie             ; 0x490e ; "David MacKenzie"
0x000015d0      488d15ec3200.  lea rdx, str.GNU_coreutils              ; 0x48c3 ; "GNU coreutils"
0x000015d7      488d35663200.  lea rsi, str.basename                   ; 0x4844 ; "basename"
0x000015de      4531c9         xor r9d, r9d
0x000015e1      31c0           xor eax, eax
0x000015e3      e8c82a0000     call sym.version_etc
0x000015e8      31ff           xor edi, edi
0x000015ea      e8b1feffff     call sym.imp.exit
0x000015ef      90             nop
0x000015f0      41bc01000000   mov r12d, 1
0x000015f6      e96fffffff     jmp 0x156a
0x000015fb      0f1f440000     nop dword [rax + rax]
0x00001600      4c8b35915a20.  mov r14, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x207098:8]=0
0x00001607      41bc01000000   mov r12d, 1
0x0000160d      e958ffffff     jmp 0x156a
0x00001612      8b05785a2000   mov eax, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x207090:4]=0
0x00001618      39e8           cmp eax, ebp
0x0000161a      7d6d           jge 0x1689
0x0000161c      4584e4         test r12b, r12b
0x0000161f      752d           jne 0x164e
0x00001621      4863c8         movsxd rcx, eax
0x00001624      83c002         add eax, 2
0x00001627      39e8           cmp eax, ebp
0x00001629      0f8c85000000   jl 0x16b4
0x0000162f      410fb6d5       movzx edx, r13b
0x00001633      be00000000     mov esi, 0
0x00001638      743a           je 0x1674
0x0000163a      488b3ccb       mov rdi, qword [rbx + rcx*8]
0x0000163e      e8bd010000     call sym.perform_basename
0x00001643      5b             pop rbx
0x00001644      31c0           xor eax, eax
0x00001646      5d             pop rbp
0x00001647      415c           pop r12
0x00001649      415d           pop r13
0x0000164b      415e           pop r14
0x0000164d      c3             ret
0x0000164e      4898           cdqe
0x00001650      4489ea         mov edx, r13d
0x00001653      4c89f6         mov rsi, r14
0x00001656      488b3cc3       mov rdi, qword [rbx + rax*8]
0x0000165a      e8a1010000     call sym.perform_basename
0x0000165f      8b052b5a2000   mov eax, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x207090:4]=0
0x00001665      83c001         add eax, 1
0x00001668      39e8           cmp eax, ebp
0x0000166a      8905205a2000   mov dword [obj.optind], eax             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x207090:4]=0
0x00001670      7cdc           jl 0x164e
0x00001672      ebcf           jmp 0x1643
0x00001674      488b74cb08     mov rsi, qword [rbx + rcx*8 + 8]
0x00001679      ebbf           jmp 0x163a
0x0000167b      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x00001680      7528           jne 0x16aa
0x00001682      31ff           xor edi, edi
0x00001684      e847020000     call sym.usage
0x00001689      488d358e3200.  lea rsi, str.missing_operand            ; 0x491e ; "missing operand"
0x00001690      ba05000000     mov edx, 5
0x00001695      31ff           xor edi, edi
0x00001697      e864fcffff     call sym.imp.dcgettext
0x0000169c      31f6           xor esi, esi
0x0000169e      4889c2         mov rdx, rax
0x000016a1      31ff           xor edi, edi
0x000016a3      31c0           xor eax, eax
0x000016a5      e8c6fdffff     call sym.imp.error
0x000016aa      bf01000000     mov edi, 1
0x000016af      e81c020000     call sym.usage
0x000016b4      488b7ccb10     mov rdi, qword [rbx + rcx*8 + 0x10]
0x000016b9      e812250000     call sym.quote
0x000016be      488d35693200.  lea rsi, str.extra_operand__s           ; 0x492e ; "extra operand %s"
0x000016c5      4889c3         mov rbx, rax
0x000016c8      ba05000000     mov edx, 5
0x000016cd      31ff           xor edi, edi
0x000016cf      e82cfcffff     call sym.imp.dcgettext
0x000016d4      31ff           xor edi, edi
0x000016d6      4889c2         mov rdx, rax
0x000016d9      4889d9         mov rcx, rbx
0x000016dc      31f6           xor esi, esi
0x000016de      31c0           xor eax, eax
0x000016e0      e88bfdffff     call sym.imp.error
0x000016e5      bf01000000     mov edi, 1
0x000016ea      e8e1010000     call sym.usage
0x000016ef      90             nop
;-- entry0:
;-- _start:
;-- rip:
0x000016f0      31ed           xor ebp, ebp
0x000016f2      4989d1         mov r9, rdx
0x000016f5      5e             pop rsi
0x000016f6      4889e2         mov rdx, rsp
0x000016f9      4883e4f0       and rsp, 0xfffffffffffffff0
0x000016fd      50             push rax
0x000016fe      54             push rsp
0x000016ff      4c8d05fa3000.  lea r8, sym.__libc_csu_fini             ; 0x4800
0x00001706      488d0d833000.  lea rcx, sym.__libc_csu_init            ; 0x4790 ; "AWAVI\x89\xd7AUATL\x8d%\xae# "
0x0000170d      488d3dfcfdff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1510 ; "AVAUE1\xf6ATU\x89\xfdSH\x8b>H\x89\xf3E1\xedE1\xe4\xe8\x92\t"
0x00001714      ff15b6582000   call qword [reloc.__libc_start_main]    ; [0x206fd0:8]=0
0x0000171a      f4             hlt
0x0000171b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00001720      488d3d595920.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x207080
0x00001727      55             push rbp
0x00001728      488d05515920.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x207080
0x0000172f      4839f8         cmp rax, rdi
0x00001732      4889e5         mov rbp, rsp
0x00001735      7419           je 0x1750
0x00001737      488b058a5820.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x206fc8:8]=0
0x0000173e      4885c0         test rax, rax
0x00001741      740d           je 0x1750
0x00001743      5d             pop rbp
0x00001744      ffe0           jmp rax
0x00001746      662e0f1f8400.  nop word cs:[rax + rax]
0x00001750      5d             pop rbp
0x00001751      c3             ret
0x00001752      0f1f4000       nop dword [rax]
0x00001756      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00001760      488d3d195920.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x207080
0x00001767      488d35125920.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x207080
0x0000176e      55             push rbp
0x0000176f      4829fe         sub rsi, rdi
0x00001772      4889e5         mov rbp, rsp
0x00001775      48c1fe03       sar rsi, 3
0x00001779      4889f0         mov rax, rsi
0x0000177c      48c1e83f       shr rax, 0x3f
0x00001780      4801c6         add rsi, rax
0x00001783      48d1fe         sar rsi, 1
0x00001786      7418           je 0x17a0
0x00001788      488b05515820.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x206fe0:8]=0
0x0000178f      4885c0         test rax, rax
0x00001792      740c           je 0x17a0
0x00001794      5d             pop rbp
0x00001795      ffe0           jmp rax
0x00001797      660f1f840000.  nop word [rax + rax]
0x000017a0      5d             pop rbp
0x000017a1      c3             ret
0x000017a2      0f1f4000       nop dword [rax]
0x000017a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x000017b0      803d11592000.  cmp byte [obj.completed.7697], 0        ; [0x2070c8:1]=0
0x000017b7      752f           jne 0x17e8
0x000017b9      48833d275820.  cmp qword [reloc.__cxa_finalize], 0     ; [0x206fe8:8]=0
0x000017c1      55             push rbp
0x000017c2      4889e5         mov rbp, rsp
0x000017c5      740c           je 0x17d3
0x000017c7      488b3d3a5820.  mov rdi, qword [obj.__dso_handle]       ; [0x207008:8]=0x207008 obj.__dso_handle
0x000017ce      e82dfdffff     call sym..plt.got
0x000017d3      e848ffffff     call sym.deregister_tm_clones
0x000017d8      c605e9582000.  mov byte [obj.completed.7697], 1        ; [0x2070c8:1]=0
0x000017df      5d             pop rbp
0x000017e0      c3             ret
0x000017e1      0f1f80000000.  nop dword [rax]
0x000017e8      f3c3           ret
0x000017ea      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x000017f0      55             push rbp
0x000017f1      4889e5         mov rbp, rsp
0x000017f4      5d             pop rbp
0x000017f5      e966ffffff     jmp sym.register_tm_clones
0x000017fa      660f1f440000   nop word [rax + rax]
;-- perform_basename:
0x00001800      4155           push r13
0x00001802      4154           push r12
0x00001804      4989f5         mov r13, rsi
0x00001807      55             push rbp
0x00001808      53             push rbx
0x00001809      4189d4         mov r12d, edx
0x0000180c      4883ec08       sub rsp, 8
0x00001810      e85b050000     call sym.base_name
0x00001815      4889c7         mov rdi, rax
0x00001818      4889c5         mov rbp, rax
0x0000181b      e860060000     call sym.strip_trailing_slashes
0x00001820      4d85ed         test r13, r13
0x00001823      7406           je 0x182b
0x00001825      807d002f       cmp byte [rbp], 0x2f
0x00001829      754d           jne 0x1878
0x0000182b      488b35565820.  mov rsi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x207088:8]=0
0x00001832      4889ef         mov rdi, rbp
0x00001835      e886fbffff     call sym.imp.fputs_unlocked
0x0000183a      488b3d475820.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x207088:8]=0
0x00001841      4180fc01       cmp r12b, 1
0x00001845      19f6           sbb esi, esi
0x00001847      83e60a         and esi, 0xa
0x0000184a      488b4728       mov rax, qword [rdi + 0x28]
0x0000184e      483b4730       cmp rax, qword [rdi + 0x30]
0x00001852      7374           jae 0x18c8
0x00001854      488d5001       lea rdx, [rax + 1]
0x00001858      48895728       mov qword [rdi + 0x28], rdx
0x0000185c      408830         mov byte [rax], sil
0x0000185f      4883c408       add rsp, 8
0x00001863      4889ef         mov rdi, rbp
0x00001866      5b             pop rbx
0x00001867      5d             pop rbp
0x00001868      415c           pop r12
0x0000186a      415d           pop r13
0x0000186c      e9fff9ffff     jmp sym.imp.free
0x00001871      0f1f80000000.  nop dword [rax]
0x00001878      4889ef         mov rdi, rbp
0x0000187b      e8a0faffff     call sym.imp.strlen
0x00001880      4c89ef         mov rdi, r13
0x00001883      488d5c0500     lea rbx, [rbp + rax]
0x00001888      e893faffff     call sym.imp.strlen
0x0000188d      4c01e8         add rax, r13
0x00001890      4839dd         cmp rbp, rbx
0x00001893      731b           jae 0x18b0
0x00001895      4939c5         cmp r13, rax
0x00001898      7316           jae 0x18b0
0x0000189a      4883e801       sub rax, 1
0x0000189e      4883eb01       sub rbx, 1
0x000018a2      0fb608         movzx ecx, byte [rax]
0x000018a5      380b           cmp byte [rbx], cl
0x000018a7      74e7           je 0x1890
0x000018a9      eb80           jmp 0x182b
0x000018ab      0f1f440000     nop dword [rax + rax]
0x000018b0      4839dd         cmp rbp, rbx
0x000018b3      0f8372ffffff   jae 0x182b
0x000018b9      c60300         mov byte [rbx], 0
0x000018bc      e96affffff     jmp 0x182b
0x000018c1      0f1f80000000.  nop dword [rax]
0x000018c8      e893faffff     call sym.imp.__overflow
0x000018cd      eb90           jmp 0x185f
0x000018cf      90             nop
;-- usage:
0x000018d0      4155           push r13
0x000018d2      4154           push r12
0x000018d4      ba05000000     mov edx, 5
0x000018d9      55             push rbp
0x000018da      53             push rbx
0x000018db      89fd           mov ebp, edi
0x000018dd      4881ec880000.  sub rsp, 0x88
0x000018e4      488b1df55720.  mov rbx, qword [obj.program_name]       ; [0x2070e0:8]=0
0x000018eb      64488b042528.  mov rax, qword fs:[0x28]
0x000018f4      4889442478     mov qword [rsp + 0x78], rax
0x000018f9      31c0           xor eax, eax
0x000018fb      85ff           test edi, edi
0x000018fd      742e           je 0x192d
0x000018ff      488d35623000.  lea rsi, str.Try___s___help__for_more_information. ; 0x4968 ; "Try '%s --help' for more information.\n"
0x00001906      31ff           xor edi, edi
0x00001908      e8f3f9ffff     call sym.imp.dcgettext
0x0000190d      488b3dac5720.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2070c0:8]=0
0x00001914      4889c2         mov rdx, rax
0x00001917      4889d9         mov rcx, rbx
0x0000191a      be01000000     mov esi, 1
0x0000191f      31c0           xor eax, eax
0x00001921      e89afbffff     call sym.imp.__fprintf_chk
0x00001926      89ef           mov edi, ebp
0x00001928      e873fbffff     call sym.imp.exit
0x0000192d      488d355c3000.  lea rsi, str.Usage:__s_NAME__SUFFIX_____or:___s_OPTION..._NAME... ; 0x4990 ; "Usage: %s NAME [SUFFIX]\n  or:  %s OPTION... NAME...\n"
0x00001934      31ff           xor edi, edi
0x00001936      e8c5f9ffff     call sym.imp.dcgettext
0x0000193b      4889d9         mov rcx, rbx
0x0000193e      4889da         mov rdx, rbx
0x00001941      4889c6         mov rsi, rax
0x00001944      bf01000000     mov edi, 1
0x00001949      31c0           xor eax, eax
0x0000194b      e810fbffff     call sym.imp.__printf_chk
0x00001950      488b1d315720.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x207088:8]=0
0x00001957      488d356a3000.  lea rsi, str.Print_NAME_with_any_leading_directory_components_removed.__If_specified__also_remove_a_trailing_SUFFIX. ; 0x49c8 ; "Print NAME with any leading directory components removed.\nIf specified, also remove a trailing SUFFIX.\n"
0x0000195e      ba05000000     mov edx, 5
0x00001963      31ff           xor edi, edi
0x00001965      e896f9ffff     call sym.imp.dcgettext
0x0000196a      4889de         mov rsi, rbx
0x0000196d      4889c7         mov rdi, rax
0x00001970      e84bfaffff     call sym.imp.fputs_unlocked
0x00001975      488b1d0c5720.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x207088:8]=0
0x0000197c      488d35ad3000.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0x4a30 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x00001983      ba05000000     mov edx, 5
0x00001988      31ff           xor edi, edi
0x0000198a      e871f9ffff     call sym.imp.dcgettext
0x0000198f      4889de         mov rsi, rbx
0x00001992      4889c7         mov rdi, rax
0x00001995      e826faffff     call sym.imp.fputs_unlocked
0x0000199a      488b1de75620.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x207088:8]=0
0x000019a1      488d35d83000.  lea rsi, str.a____multiple_______support_multiple_arguments_and_treat_each_as_a_NAME_____s____suffix_SUFFIX__remove_a_trailing_SUFFIX__implies__a_____z____zero___________end_each_output_line_with_NUL__not_newline ; 0x4a80 ; "  -a, --multiple       support multiple arguments and treat each as a NAME\n  -s, --suffix=SUFFIX  remove a trailing SUFFIX; implies -a\n  -z, --zero           end each output line with NUL, not newline\n"
0x000019a8      ba05000000     mov edx, 5
0x000019ad      31ff           xor edi, edi
0x000019af      e84cf9ffff     call sym.imp.dcgettext
0x000019b4      4889de         mov rsi, rbx
0x000019b7      4889c7         mov rdi, rax
0x000019ba      e801faffff     call sym.imp.fputs_unlocked
0x000019bf      488b1dc25620.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x207088:8]=0
0x000019c6      488d35833100.  lea rsi, str.help_____display_this_help_and_exit ; 0x4b50 ; "      --help     display this help and exit\n"
0x000019cd      ba05000000     mov edx, 5
0x000019d2      31ff           xor edi, edi
0x000019d4      e827f9ffff     call sym.imp.dcgettext
0x000019d9      4889de         mov rsi, rbx
0x000019dc      4889c7         mov rdi, rax
0x000019df      e8dcf9ffff     call sym.imp.fputs_unlocked
0x000019e4      488b1d9d5620.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x207088:8]=0
0x000019eb      488d358e3100.  lea rsi, str.version__output_version_information_and_exit ; 0x4b80 ; "      --version  output version information and exit\n"
0x000019f2      ba05000000     mov edx, 5
0x000019f7      31ff           xor edi, edi
0x000019f9      e802f9ffff     call sym.imp.dcgettext
0x000019fe      4889de         mov rsi, rbx
0x00001a01      4889c7         mov rdi, rax
0x00001a04      e8b7f9ffff     call sym.imp.fputs_unlocked
0x00001a09      488b1dd05620.  mov rbx, qword [obj.program_name]       ; [0x2070e0:8]=0
0x00001a10      488d35a13100.  lea rsi, str.Examples:_____s__usr_bin_sort______________sort______s_include_stdio.h_.h_________stdio______s__s_.h_include_stdio.h______stdio______s__a_any_str1_any_str2_______str1__followed_by__str2 ; 0x4bb8 ; "\nExamples:\n  %s /usr/bin/sort          -> \"sort\"\n  %s include/stdio.h .h     -> \"stdio\"\n  %s -s .h include/stdio.h  -> \"stdio\"\n  %s -a any/str1 any/str2   -> \"str1\" followed by \"str2\"\n"
0x00001a17      ba05000000     mov edx, 5
0x00001a1c      31ff           xor edi, edi
0x00001a1e      e8ddf8ffff     call sym.imp.dcgettext
0x00001a23      4889d9         mov rcx, rbx
0x00001a26      4889da         mov rdx, rbx
0x00001a29      4989d9         mov r9, rbx
0x00001a2c      4989d8         mov r8, rbx
0x00001a2f      4889c6         mov rsi, rax
0x00001a32      bf01000000     mov edi, 1
0x00001a37      31c0           xor eax, eax
0x00001a39      488d1d042e00.  lea rbx, str.basename                   ; 0x4844 ; "basename"
0x00001a40      e81bfaffff     call sym.imp.__printf_chk
0x00001a45      488d05012e00.  lea rax, [0x0000484d]                   ; "["
0x00001a4c      488d0d3b2e00.  lea rcx, str.sha256sum                  ; 0x488e ; "sha256sum"
0x00001a53      48c744246000.  mov qword [rsp + 0x60], 0
0x00001a5c      48c744246800.  mov qword [rsp + 0x68], 0
0x00001a65      4889e2         mov rdx, rsp
0x00001a68      48890424       mov qword [rsp], rax
0x00001a6c      488d05dc2d00.  lea rax, str.test_invocation            ; 0x484f ; "test invocation"
0x00001a73      48894c2430     mov qword [rsp + 0x30], rcx
0x00001a78      488d0d192e00.  lea rcx, str.sha384sum                  ; 0x4898 ; "sha384sum"
0x00001a7f      4889442408     mov qword [rsp + 8], rax
0x00001a84      488d053c2e00.  lea rax, [0x000048c7]                   ; "coreutils"
0x00001a8b      48894c2440     mov qword [rsp + 0x40], rcx
0x00001a90      488d0d0b2e00.  lea rcx, str.sha512sum                  ; 0x48a2 ; "sha512sum"
0x00001a97      4889442410     mov qword [rsp + 0x10], rax
0x00001a9c      488d05bc2d00.  lea rax, str.Multi_call_invocation      ; 0x485f ; "Multi-call invocation"
0x00001aa3      48894c2450     mov qword [rsp + 0x50], rcx
0x00001aa8      4889442418     mov qword [rsp + 0x18], rax
0x00001aad      488d05c12d00.  lea rax, str.sha224sum                  ; 0x4875 ; "sha224sum"
0x00001ab4      4889442420     mov qword [rsp + 0x20], rax
0x00001ab9      488d05bf2d00.  lea rax, str.sha2_utilities             ; 0x487f ; "sha2 utilities"
0x00001ac0      4889442428     mov qword [rsp + 0x28], rax
0x00001ac5      4889442438     mov qword [rsp + 0x38], rax
0x00001aca      4889442448     mov qword [rsp + 0x48], rax
0x00001acf      4889442458     mov qword [rsp + 0x58], rax
0x00001ad4      0f1f4000       nop dword [rax]
0x00001ad8      4883c210       add rdx, 0x10
0x00001adc      488b3a         mov rdi, qword [rdx]
0x00001adf      4885ff         test rdi, rdi
0x00001ae2      7413           je 0x1af7
0x00001ae4      b909000000     mov ecx, 9
0x00001ae9      4889de         mov rsi, rbx
0x00001aec      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001aee      0f97c0         seta al
0x00001af1      1c00           sbb al, 0
0x00001af3      84c0           test al, al
0x00001af5      75e1           jne 0x1ad8
0x00001af7      4c8b6208       mov r12, qword [rdx + 8]
0x00001afb      31ff           xor edi, edi
0x00001afd      ba05000000     mov edx, 5
0x00001b02      488d35a32d00.  lea rsi, str.s_online_help:___s         ; 0x48ac ; "\n%s online help: <%s>\n"
0x00001b09      4d85e4         test r12, r12
0x00001b0c      0f84c1000000   je 0x1bd3
0x00001b12      e8e9f7ffff     call sym.imp.dcgettext
0x00001b17      488d0d5a3100.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x4c78 ; "https://www.gnu.org/software/coreutils/"
0x00001b1e      488d159e2d00.  lea rdx, str.GNU_coreutils              ; 0x48c3 ; "GNU coreutils"
0x00001b25      4889c6         mov rsi, rax
0x00001b28      bf01000000     mov edi, 1
0x00001b2d      31c0           xor eax, eax
0x00001b2f      e82cf9ffff     call sym.imp.__printf_chk
0x00001b34      31f6           xor esi, esi
0x00001b36      bf05000000     mov edi, 5
0x00001b3b      e810f9ffff     call sym.imp.setlocale
0x00001b40      4885c0         test rax, rax
0x00001b43      741c           je 0x1b61
0x00001b45      488d35852d00.  lea rsi, [0x000048d1]                   ; "en_"
0x00001b4c      ba03000000     mov edx, 3
0x00001b51      4889c7         mov rdi, rax
0x00001b54      e847f7ffff     call sym.imp.strncmp
0x00001b59      85c0           test eax, eax
0x00001b5b      0f8507010000   jne 0x1c68
0x00001b61      488d356d2d00.  lea rsi, str.Full_documentation___s_s   ; 0x48d5 ; "Full documentation <%s%s>\n"
0x00001b68      31ff           xor edi, edi
0x00001b6a      ba05000000     mov edx, 5
0x00001b6f      e88cf7ffff     call sym.imp.dcgettext
0x00001b74      488d0dc92c00.  lea rcx, str.basename                   ; 0x4844 ; "basename"
0x00001b7b      488d15f63000.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x4c78 ; "https://www.gnu.org/software/coreutils/"
0x00001b82      4889c6         mov rsi, rax
0x00001b85      bf01000000     mov edi, 1
0x00001b8a      31c0           xor eax, eax
0x00001b8c      e8cff8ffff     call sym.imp.__printf_chk
0x00001b91      4939dc         cmp r12, rbx
0x00001b94      488d0dce2c00.  lea rcx, [0x00004869]                   ; " invocation"
0x00001b9b      488d1dff3600.  lea rbx, [0x000052a1]
0x00001ba2      480f44d9       cmove rbx, rcx
0x00001ba6      488d353b3100.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x4ce8 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00001bad      31ff           xor edi, edi
0x00001baf      ba05000000     mov edx, 5
0x00001bb4      e847f7ffff     call sym.imp.dcgettext
0x00001bb9      4889d9         mov rcx, rbx
0x00001bbc      4889c6         mov rsi, rax
0x00001bbf      4c89e2         mov rdx, r12
0x00001bc2      bf01000000     mov edi, 1
0x00001bc7      31c0           xor eax, eax
0x00001bc9      e892f8ffff     call sym.imp.__printf_chk
0x00001bce      e953fdffff     jmp 0x1926
0x00001bd3      e828f7ffff     call sym.imp.dcgettext
0x00001bd8      488d0d993000.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x4c78 ; "https://www.gnu.org/software/coreutils/"
0x00001bdf      488d15dd2c00.  lea rdx, str.GNU_coreutils              ; 0x48c3 ; "GNU coreutils"
0x00001be6      4889c6         mov rsi, rax
0x00001be9      bf01000000     mov edi, 1
0x00001bee      31c0           xor eax, eax
0x00001bf0      e86bf8ffff     call sym.imp.__printf_chk
0x00001bf5      31f6           xor esi, esi
0x00001bf7      bf05000000     mov edi, 5
0x00001bfc      e84ff8ffff     call sym.imp.setlocale
0x00001c01      4885c0         test rax, rax
0x00001c04      7418           je 0x1c1e
0x00001c06      488d35c42c00.  lea rsi, [0x000048d1]                   ; "en_"
0x00001c0d      ba03000000     mov edx, 3
0x00001c12      4889c7         mov rdi, rax
0x00001c15      e886f6ffff     call sym.imp.strncmp
0x00001c1a      85c0           test eax, eax
0x00001c1c      7543           jne 0x1c61
0x00001c1e      488d35b02c00.  lea rsi, str.Full_documentation___s_s   ; 0x48d5 ; "Full documentation <%s%s>\n"
0x00001c25      ba05000000     mov edx, 5
0x00001c2a      31ff           xor edi, edi
0x00001c2c      4c8d25112c00.  lea r12, str.basename                   ; 0x4844 ; "basename"
0x00001c33      488d1d2f2c00.  lea rbx, [0x00004869]                   ; " invocation"
0x00001c3a      e8c1f6ffff     call sym.imp.dcgettext
0x00001c3f      488d0dfe2b00.  lea rcx, str.basename                   ; 0x4844 ; "basename"
0x00001c46      488d152b3000.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x4c78 ; "https://www.gnu.org/software/coreutils/"
0x00001c4d      4889c6         mov rsi, rax
0x00001c50      bf01000000     mov edi, 1
0x00001c55      31c0           xor eax, eax
0x00001c57      e804f8ffff     call sym.imp.__printf_chk
0x00001c5c      e945ffffff     jmp 0x1ba6
0x00001c61      4c8d25dc2b00.  lea r12, str.basename                   ; 0x4844 ; "basename"
0x00001c68      4c8b2d195420.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x207088:8]=0
0x00001c6f      488d352a3000.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x4ca0 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x00001c76      31ff           xor edi, edi
0x00001c78      ba05000000     mov edx, 5
0x00001c7d      e87ef6ffff     call sym.imp.dcgettext
0x00001c82      4c89ee         mov rsi, r13
0x00001c85      4889c7         mov rdi, rax
0x00001c88      e833f7ffff     call sym.imp.fputs_unlocked
0x00001c8d      e9cffeffff     jmp 0x1b61
0x00001c92      662e0f1f8400.  nop word cs:[rax + rax]
0x00001c9c      0f1f4000       nop dword [rax]
;-- close_stdout_set_file_name:
0x00001ca0      48893d315420.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x2070d8:8]=0
0x00001ca7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00001ca8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00001cb0      40883d195420.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x2070d0:1]=0
0x00001cb7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00001cb8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00001cc0      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00001cc1      53             push rbx
0x00001cc2      4883ec08       sub rsp, 8
0x00001cc6      488b3dbb5320.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x207088:8]=0
0x00001ccd      e87e280000     call sym.close_stream
0x00001cd2      85c0           test eax, eax
0x00001cd4      7416           je 0x1cec
0x00001cd6      e8b5f5ffff     call sym.imp.__errno_location
0x00001cdb      803dee532000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x2070d0:1]=0
0x00001ce2      4889c3         mov rbx, rax
0x00001ce5      741c           je 0x1d03
0x00001ce7      833820         cmp dword [rax], 0x20
0x00001cea      7517           jne 0x1d03
0x00001cec      488b3dcd5320.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2070c0:8]=0
0x00001cf3      e858280000     call sym.close_stream
0x00001cf8      85c0           test eax, eax
0x00001cfa      7546           jne 0x1d42
0x00001cfc      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00001d00      5b             pop rbx
0x00001d01      5d             pop rbp
0x00001d02      c3             ret
0x00001d03      488d35163000.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x4d20 ; "write error"
0x00001d0a      31ff           xor edi, edi
0x00001d0c      ba05000000     mov edx, 5
0x00001d11      e8eaf5ffff     call sym.imp.dcgettext
0x00001d16      488b3dbb5320.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x2070d8:8]=0
0x00001d1d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00001d20      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00001d23      7428           je 0x1d4d
0x00001d25      e8a61c0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x00001d2a      8b33           mov esi, dword [rbx]
0x00001d2c      488d15f92f00.  lea rdx, str.s:__s                      ; 0x4d2c ; "%s: %s"
0x00001d33      4889c1         mov rcx, rax
0x00001d36      4989e8         mov r8, rbp
0x00001d39      31ff           xor edi, edi
0x00001d3b      31c0           xor eax, eax
0x00001d3d      e82ef7ffff     call sym.imp.error
0x00001d42      8b3dd0522000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x207018:4]=1
0x00001d48      e863f5ffff     call sym.imp._exit
0x00001d4d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x00001d4f      488d15da2f00.  lea rdx, [0x00004d30]                   ; "%s"
0x00001d56      4889c1         mov rcx, rax
0x00001d59      31ff           xor edi, edi
0x00001d5b      31c0           xor eax, eax
0x00001d5d      e80ef7ffff     call sym.imp.error
0x00001d62      ebde           jmp 0x1d42
0x00001d64      662e0f1f8400.  nop word cs:[rax + rax]
0x00001d6e      6690           nop
;-- base_name:
0x00001d70      55             push rbp                                ; ../coreutils-8.31/lib/basename.c:29
0x00001d71      53             push rbx
0x00001d72      4889fd         mov rbp, rdi
0x00001d75      4883ec08       sub rsp, 8
0x00001d79      e852000000     call sym.last_component                 ; ../coreutils-8.31/lib/basename.c:30
0x00001d7e      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/basename.c:35
0x00001d81      742d           je 0x1db0
0x00001d83      4889c3         mov rbx, rax
0x00001d86      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/basename.c:39
0x00001d89      e8a2000000     call sym.base_len
0x00001d8e      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/basename.c:41
0x00001d90      803c032f       cmp byte [rbx + rax], 0x2f
0x00001d94      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/basename.c:57
0x00001d97      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/basename.c:41
0x00001d9a      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/basename.c:58
0x00001d9e      5b             pop rbx
0x00001d9f      5d             pop rbp
0x00001da0      4801d0         add rax, rdx                            ; ../coreutils-8.31/lib/basename.c:41
0x00001da3      4889c6         mov rsi, rax                            ; ../coreutils-8.31/lib/basename.c:57
0x00001da6      e9f5260000     jmp sym.xstrndup
0x00001dab      0f1f440000     nop dword [rax + rax]
0x00001db0      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/basename.c:36
0x00001db3      e878000000     call sym.base_len
0x00001db8      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/basename.c:58
0x00001dbc      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/basename.c:36
0x00001dbf      4889c6         mov rsi, rax
0x00001dc2      5b             pop rbx                                 ; ../coreutils-8.31/lib/basename.c:58
0x00001dc3      5d             pop rbp
0x00001dc4      e9d7260000     jmp sym.xstrndup                        ; ../coreutils-8.31/lib/basename.c:36
0x00001dc9      0f1f80000000.  nop dword [rax]
;-- last_component:
0x00001dd0      0fb617         movzx edx, byte [rdi]                   ; ../coreutils-8.31/lib/basename-lgpl.c:31
0x00001dd3      4889f8         mov rax, rdi
0x00001dd6      80fa2f         cmp dl, 0x2f                            ; ../coreutils-8.31/lib/basename-lgpl.c:36
0x00001dd9      7511           jne 0x1dec
0x00001ddb      0f1f440000     nop dword [rax + rax]
0x00001de0      4883c001       add rax, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:37
0x00001de4      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/basename-lgpl.c:36
0x00001de7      80fa2f         cmp dl, 0x2f
0x00001dea      74f4           je 0x1de0
0x00001dec      84d2           test dl, dl                             ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x00001dee      743a           je 0x1e2a
0x00001df0      4889c1         mov rcx, rax
0x00001df3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/basename-lgpl.c:34
0x00001df5      eb1e           jmp 0x1e15
0x00001df7      660f1f840000.  nop word [rax + rax]
0x00001e00      4084f6         test sil, sil                           ; ../coreutils-8.31/lib/basename-lgpl.c:43
0x00001e03      7405           je 0x1e0a
0x00001e05      4889c8         mov rax, rcx
0x00001e08      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/basename-lgpl.c:46
0x00001e0a      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x00001e0e      0fb611         movzx edx, byte [rcx]
0x00001e11      84d2           test dl, dl
0x00001e13      7415           je 0x1e2a
0x00001e15      80fa2f         cmp dl, 0x2f                            ; ../coreutils-8.31/lib/basename-lgpl.c:41
0x00001e18      75e6           jne 0x1e00
0x00001e1a      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x00001e1e      0fb611         movzx edx, byte [rcx]
0x00001e21      be01000000     mov esi, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:42
0x00001e26      84d2           test dl, dl                             ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x00001e28      75eb           jne 0x1e15
0x00001e2a      f3c3           ret                                     ; ../coreutils-8.31/lib/basename-lgpl.c:51
0x00001e2c      0f1f4000       nop dword [rax]
;-- base_len:
0x00001e30      53             push rbx                                ; ../coreutils-8.31/lib/basename-lgpl.c:59
0x00001e31      4889fb         mov rbx, rdi
0x00001e34      e8e7f4ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/basename-lgpl.c:63
0x00001e39      4883f801       cmp rax, 1
0x00001e3d      760b           jbe 0x1e4a
0x00001e3f      807c03ff2f     cmp byte [rbx + rax - 1], 0x2f
0x00001e44      488d50ff       lea rdx, [rax - 1]
0x00001e48      740e           je 0x1e58
0x00001e4a      5b             pop rbx                                 ; ../coreutils-8.31/lib/basename-lgpl.c:75
0x00001e4b      c3             ret
0x00001e4c      0f1f4000       nop dword [rax]
0x00001e50      4889c2         mov rdx, rax                            ; ../coreutils-8.31/lib/basename-lgpl.c:63
0x00001e53      0f1f440000     nop dword [rax + rax]
0x00001e58      4883fa01       cmp rdx, 1
0x00001e5c      7412           je 0x1e70
0x00001e5e      807c13ff2f     cmp byte [rbx + rdx - 1], 0x2f
0x00001e63      488d42ff       lea rax, [rdx - 1]
0x00001e67      74e7           je 0x1e50
0x00001e69      4889d0         mov rax, rdx
0x00001e6c      5b             pop rbx                                 ; ../coreutils-8.31/lib/basename-lgpl.c:75
0x00001e6d      c3             ret
0x00001e6e      6690           nop
0x00001e70      b801000000     mov eax, 1
0x00001e75      5b             pop rbx
0x00001e76      c3             ret
0x00001e77      660f1f840000.  nop word [rax + rax]
;-- strip_trailing_slashes:
0x00001e80      55             push rbp                                ; ../coreutils-8.31/lib/stripslash.c:32
0x00001e81      53             push rbx
0x00001e82      4889fd         mov rbp, rdi
0x00001e85      4883ec08       sub rsp, 8
0x00001e89      e842ffffff     call sym.last_component                 ; ../coreutils-8.31/lib/stripslash.c:33
0x00001e8e      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/stripslash.c:40
0x00001e91      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/stripslash.c:33
0x00001e94      480f44dd       cmove rbx, rbp                          ; ../coreutils-8.31/lib/stripslash.c:40
0x00001e98      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/stripslash.c:41
0x00001e9b      e890ffffff     call sym.base_len
0x00001ea0      4801c3         add rbx, rax
0x00001ea3      803b00         cmp byte [rbx], 0                       ; ../coreutils-8.31/lib/stripslash.c:42
0x00001ea6      c60300         mov byte [rbx], 0                       ; ../coreutils-8.31/lib/stripslash.c:43
0x00001ea9      0f95c0         setne al                                ; ../coreutils-8.31/lib/stripslash.c:42
0x00001eac      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/stripslash.c:45
0x00001eb0      5b             pop rbx
0x00001eb1      5d             pop rbp
0x00001eb2      c3             ret
0x00001eb3      662e0f1f8400.  nop word cs:[rax + rax]
0x00001ebd      0f1f00         nop dword [rax]
;-- set_program_name:
0x00001ec0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00001ec3      53             push rbx
0x00001ec4      7477           je 0x1f3d                               ; ../coreutils-8.31/lib/progname.c:51
0x00001ec6      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x00001ecb      4889fb         mov rbx, rdi
0x00001ece      e89df4ffff     call sym.imp.strrchr
0x00001ed3      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00001ed6      7455           je 0x1f2d
0x00001ed8      4c8d4001       lea r8, [rax + 1]
0x00001edc      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x00001edf      4829da         sub rdx, rbx
0x00001ee2      4883fa06       cmp rdx, 6
0x00001ee6      7e45           jle 0x1f2d
0x00001ee8      488d70fa       lea rsi, [rax - 6]
0x00001eec      488d3d7d2e00.  lea rdi, str..libs                      ; 0x4d70 ; "/.libs/"
0x00001ef3      b907000000     mov ecx, 7
0x00001ef8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001efa      0f97c2         seta dl
0x00001efd      80da00         sbb dl, 0
0x00001f00      84d2           test dl, dl
0x00001f02      7529           jne 0x1f2d
0x00001f04      488d3d6d2e00.  lea rdi, [0x00004d78]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x00001f0b      b903000000     mov ecx, 3
0x00001f10      4c89c6         mov rsi, r8
0x00001f13      4c89c3         mov rbx, r8
0x00001f16      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001f18      0f97c2         seta dl
0x00001f1b      80da00         sbb dl, 0
0x00001f1e      84d2           test dl, dl
0x00001f20      750b           jne 0x1f2d
0x00001f22      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00001f26      48891d535120.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x207080:8]=0
0x00001f2d      48891dac5120.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x2070e0:8]=0
0x00001f34      48891d655120.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x2070a0:8]=0
0x00001f3b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x00001f3c      c3             ret
0x00001f3d      488b0d7c5120.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2070c0:8]=0
0x00001f44      488d3ded2d00.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x4d38 ; "A NULL argv[0] was passed through an exec system call.\n"
0x00001f4b      ba37000000     mov edx, 0x37                           ; '7'
0x00001f50      be01000000     mov esi, 1
0x00001f55      e856f5ffff     call sym.imp.fwrite
0x00001f5a      e821f3ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x00001f5f      90             nop
;-- gettext_quote.part.1:
0x00001f60      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00001f61      53             push rbx
0x00001f62      4889fd         mov rbp, rdi
0x00001f65      89f3           mov ebx, esi
0x00001f67      4883ec08       sub rsp, 8
0x00001f6b      e8c0260000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00001f70      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00001f73      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00001f76      80fa55         cmp dl, 0x55
0x00001f79      7475           je 0x1ff0
0x00001f7b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x00001f7e      7420           je 0x1fa0
0x00001f80      488d05042e00.  lea rax, str.l______l                   ; 0x4d8b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\uaa00\uffe0\u03ff\uffd3\U010003e2\ue4ff\uffe0\ud4ff\uffde\u30ff\uffdf\u85ff\uffdf\ucaff\uffdf\u04ff\uffe0\u04ff\uffe0\u04ff\uffe0\u54ff\uffd6\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u94ff\uffd6\u9cff\uffd5\u5cff\uffd5\u24ff\uffd7\u14ff\uffd7\u04ff\uffd7\uf4ff\uffd6\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\ue4ff\uffd6\ud4ff\uffd6\ud4ff\uffd6\ua4ff\uffd6\ud4ff\uffd6\u7cff\uffd6\ud4ff\uffd6\u37ff\uffd5\ud4ff\uffd6\ud4ff\uffd6\ud4ff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\ud4ff\uffd6\ud4ff\uffd6\ud4ff\uffd6\ud4ff\uffd6\u07ff\uffd5\u3cff\uffd7\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\ud4ff\uffd6\uacff\uffd5\u7cff\uffd6\ud4ff\uffd6\u7cff\uffd6\ud4ff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u37ff\uffd4\ud4ff\uffd6\u37ff\uffd4\ua4ff\uffd6\u28ff\uffd6\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u18ff\uffd6\u68ff\uffd7\u50ff\uffd7\xff\uffd6\u40ff\uffd7\ue8ff\uffd5\u28ff\uffd7\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u10ff\uffd7\U010003d6\U010003d6\ue0ff\uffd6\U010003d6\uc8ff\uffd6\U010003d6\u38ff\uffd3\U010003d6\U010003d6\U010003d6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\U010003d6\U010003d6\U010003d6\U010003d6\u08ff\uffd3\u38ff\uffd5\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\U010003d6\uc8ff\uffd5\uc8ff\uffd6\U010003d6\uc8ff\uffd6\U010003d6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\u38ff\uffd2\U010003d6\u38ff\uffd2\ue0ff\uffd6\xff"
0x00001f87      488d15ff2d00.  lea rdx, [0x00004d8d]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\uaa00\uffe0\u03ff\uffd3\U010003e2\ue4ff\uffe0\ud4ff\uffde\u30ff\uffdf\u85ff\uffdf\ucaff\uffdf\u04ff\uffe0\u04ff\uffe0\u04ff\uffe0"
0x00001f8e      83fb09         cmp ebx, 9
0x00001f91      480f45c2       cmovne rax, rdx
0x00001f95      4883c408       add rsp, 8
0x00001f99      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x00001f9a      5d             pop rbp
0x00001f9b      c3             ret
0x00001f9c      0f1f4000       nop dword [rax]
0x00001fa0      0fb65001       movzx edx, byte [rax + 1]
0x00001fa4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00001fa7      80fa42         cmp dl, 0x42
0x00001faa      75d4           jne 0x1f80
0x00001fac      80780231       cmp byte [rax + 2], 0x31
0x00001fb0      75ce           jne 0x1f80
0x00001fb2      80780338       cmp byte [rax + 3], 0x38
0x00001fb6      75c8           jne 0x1f80
0x00001fb8      80780430       cmp byte [rax + 4], 0x30
0x00001fbc      75c2           jne 0x1f80
0x00001fbe      80780533       cmp byte [rax + 5], 0x33
0x00001fc2      75bc           jne 0x1f80
0x00001fc4      80780630       cmp byte [rax + 6], 0x30
0x00001fc8      75b6           jne 0x1f80
0x00001fca      80780700       cmp byte [rax + 7], 0
0x00001fce      75b0           jne 0x1f80
0x00001fd0      807d0060       cmp byte [rbp], 0x60
0x00001fd4      488d05a92d00.  lea rax, [0x00004d84]
0x00001fdb      488d15a62d00.  lea rdx, [0x00004d88]
0x00001fe2      480f45c2       cmovne rax, rdx
0x00001fe6      4883c408       add rsp, 8
0x00001fea      5b             pop rbx
0x00001feb      5d             pop rbp
0x00001fec      c3             ret
0x00001fed      0f1f00         nop dword [rax]
0x00001ff0      0fb65001       movzx edx, byte [rax + 1]
0x00001ff4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00001ff7      80fa54         cmp dl, 0x54
0x00001ffa      7584           jne 0x1f80
0x00001ffc      0fb65002       movzx edx, byte [rax + 2]
0x00002000      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002003      80fa46         cmp dl, 0x46
0x00002006      0f8574ffffff   jne 0x1f80
0x0000200c      8078032d       cmp byte [rax + 3], 0x2d
0x00002010      0f856affffff   jne 0x1f80
0x00002016      80780438       cmp byte [rax + 4], 0x38
0x0000201a      0f8560ffffff   jne 0x1f80
0x00002020      80780500       cmp byte [rax + 5], 0
0x00002024      0f8556ffffff   jne 0x1f80
0x0000202a      807d0060       cmp byte [rbp], 0x60
0x0000202e      488d05472d00.  lea rax, [0x00004d7c]                   ; "\u2018"
0x00002035      488d15442d00.  lea rdx, [0x00004d80]                   ; "\u2019"
0x0000203c      480f45c2       cmovne rax, rdx
0x00002040      4883c408       add rsp, 8
0x00002044      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00002045      5d             pop rbp
0x00002046      c3             ret
0x00002047      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00002050      4157           push r15
0x00002052      4156           push r14
0x00002054      4589c7         mov r15d, r8d
0x00002057      4155           push r13
0x00002059      4154           push r12
0x0000205b      4989fe         mov r14, rdi
0x0000205e      55             push rbp
0x0000205f      53             push rbx
0x00002060      4489cb         mov ebx, r9d
0x00002063      4989f5         mov r13, rsi
0x00002066      4889cd         mov rbp, rcx
0x00002069      83e302         and ebx, 2
0x0000206c      4881ecb80000.  sub rsp, 0xb8
0x00002073      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x0000207b      4889542410     mov qword [rsp + 0x10], rdx
0x00002080      4489442408     mov dword [rsp + 8], r8d
0x00002085      44894c2478     mov dword [rsp + 0x78], r9d
0x0000208a      4889442420     mov qword [rsp + 0x20], rax
0x0000208f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00002097      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x0000209c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x000020a4      4889442460     mov qword [rsp + 0x60], rax
0x000020a9      64488b042528.  mov rax, qword fs:[0x28]
0x000020b2      48898424a800.  mov qword [rsp + 0xa8], rax
0x000020ba      31c0           xor eax, eax
0x000020bc      e84ff2ffff     call sym.imp.__ctype_get_mb_cur_max
0x000020c1      4183ff0a       cmp r15d, 0xa
0x000020c5      4889442458     mov qword [rsp + 0x58], rax
0x000020ca      0f87af110000   ja 0x327f
0x000020d0      488d0d092d00.  lea rcx, [0x00004de0]
0x000020d7      4489fa         mov edx, r15d
0x000020da      48630491       movsxd rax, dword [rcx + rdx*4]
0x000020de      4801c8         add rax, rcx
0x000020e1      ffe0           jmp rax
0x000020e3      c644240e01     mov byte [rsp + 0xe], 1
0x000020e8      c644247c00     mov byte [rsp + 0x7c], 0
0x000020ed      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x000020f0      48c744245000.  mov qword [rsp + 0x50], 0
0x000020f9      c644240f01     mov byte [rsp + 0xf], 1
0x000020fe      c644240d00     mov byte [rsp + 0xd], 0
0x00002103      488d05832c00.  lea rax, [0x00004d8d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\uaa00\uffe0\u03ff\uffd3\U010003e2\ue4ff\uffe0\ud4ff\uffde\u30ff\uffdf\u85ff\uffdf\ucaff\uffdf\u04ff\uffe0\u04ff\uffe0\u04ff\uffe0"
0x0000210a      48c744241801.  mov qword [rsp + 0x18], 1
0x00002113      4531ff         xor r15d, r15d
0x00002116      c74424080200.  mov dword [rsp + 8], 2
0x0000211e      4889442448     mov qword [rsp + 0x48], rax
0x00002123      4531db         xor r11d, r11d
0x00002126      4889e8         mov rax, rbp
0x00002129      4589e0         mov r8d, r12d
0x0000212c      4c89dd         mov rbp, r11
0x0000212f      4989c3         mov r11, rax
0x00002132      660f1f440000   nop word [rax + rax]
0x00002138      4939eb         cmp r11, rbp
0x0000213b      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x0000213f      4983fbff       cmp r11, 0xffffffffffffffff
0x00002143      750d           jne 0x2152
0x00002145      488b442410     mov rax, qword [rsp + 0x10]
0x0000214a      803c2800       cmp byte [rax + rbp], 0
0x0000214e      410f95c4       setne r12b
0x00002152      4584e4         test r12b, r12b
0x00002155      0f8455060000   je 0x27b0
0x0000215b      837c240802     cmp dword [rsp + 8], 2
0x00002160      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002165      4c8d0c2f       lea r9, [rdi + rbp]
0x00002169      0f95c0         setne al
0x0000216c      2244240d       and al, byte [rsp + 0xd]
0x00002170      4189c2         mov r10d, eax
0x00002173      0f84a7000000   je 0x2220
0x00002179      488b442418     mov rax, qword [rsp + 0x18]
0x0000217e      4885c0         test rax, rax
0x00002181      0f8429040000   je 0x25b0
0x00002187      4983fbff       cmp r11, 0xffffffffffffffff
0x0000218b      488d5c0500     lea rbx, [rbp + rax]
0x00002190      752e           jne 0x21c0
0x00002192      4883f801       cmp rax, 1
0x00002196      7628           jbe 0x21c0
0x00002198      4488442438     mov byte [rsp + 0x38], r8b
0x0000219d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x000021a2      4c894c2428     mov qword [rsp + 0x28], r9
0x000021a7      e874f1ffff     call sym.imp.strlen
0x000021ac      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x000021b2      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x000021b8      4989c3         mov r11, rax
0x000021bb      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x000021c0      4c39db         cmp rbx, r11
0x000021c3      4488542428     mov byte [rsp + 0x28], r10b
0x000021c8      0f87b2050000   ja 0x2780
0x000021ce      488b542418     mov rdx, qword [rsp + 0x18]
0x000021d3      488b742448     mov rsi, qword [rsp + 0x48]
0x000021d8      4c89cf         mov rdi, r9
0x000021db      4c895c2440     mov qword [rsp + 0x40], r11
0x000021e0      4488442438     mov byte [rsp + 0x38], r8b
0x000021e5      4c894c2430     mov qword [rsp + 0x30], r9
0x000021ea      e8c1f1ffff     call sym.imp.memcmp
0x000021ef      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x000021f1      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000021f6      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x000021fc      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00002201      0f8579050000   jne 0x2780
0x00002207      807c240f00     cmp byte [rsp + 0xf], 0
0x0000220c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00002212      0f857d0f0000   jne 0x3195
0x00002218      0f1f84000000.  nop dword [rax + rax]
0x00002220      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00002224      80fb7e         cmp bl, 0x7e
0x00002227      0f871b030000   ja 0x2548
0x0000222d      488d0dd82b00.  lea rcx, [0x00004e0c]
0x00002234      0fb6d3         movzx edx, bl
0x00002237      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000223b      4801c8         add rax, rcx
0x0000223e      ffe0           jmp rax
0x00002240      4531d2         xor r10d, r10d
0x00002243      4983fb01       cmp r11, 1
0x00002247      0f95c0         setne al
0x0000224a      4983fbff       cmp r11, 0xffffffffffffffff
0x0000224e      750c           jne 0x225c
0x00002250      488b442410     mov rax, qword [rsp + 0x10]
0x00002255      80780100       cmp byte [rax + 1], 0
0x00002259      0f95c0         setne al
0x0000225c      837c240802     cmp dword [rsp + 8], 2
0x00002261      0f94c2         sete dl
0x00002264      84c0           test al, al
0x00002266      0f844c020000   je 0x24b8
0x0000226c      4531e4         xor r12d, r12d
0x0000226f      31c0           xor eax, eax
0x00002271      0f1f80000000.  nop dword [rax]
0x00002278      807c240d01     cmp byte [rsp + 0xd], 1
0x0000227d      0f850f010000   jne 0x2392
0x00002283      84d2           test dl, dl
0x00002285      0f8507010000   jne 0x2392
0x0000228b      488b742420     mov rsi, qword [rsp + 0x20]
0x00002290      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00002293      7414           je 0x22a9
0x00002295      89da           mov edx, ebx
0x00002297      c0ea05         shr dl, 5
0x0000229a      0fb6d2         movzx edx, dl
0x0000229d      8b1496         mov edx, dword [rsi + rdx*4]
0x000022a0      0fa3da         bt edx, ebx
0x000022a3      0f824a010000   jb 0x23f3
0x000022a9      4584d2         test r10b, r10b
0x000022ac      0f8541010000   jne 0x23f3
0x000022b2      83f001         xor eax, 1
0x000022b5      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x000022b9      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x000022bc      84c0           test al, al
0x000022be      7420           je 0x22e0                               ; ../coreutils-8.31/lib/quotearg.c:338
0x000022c0      4d39fd         cmp r13, r15
0x000022c3      7605           jbe 0x22ca
0x000022c5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000022ca      498d4701       lea rax, [r15 + 1]
0x000022ce      4939c5         cmp r13, rax
0x000022d1      7606           jbe 0x22d9
0x000022d3      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000022d9      4983c702       add r15, 2
0x000022dd      4531c0         xor r8d, r8d
0x000022e0      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x000022e3      7304           jae 0x22e9                              ; ../coreutils-8.31/lib/quotearg.c:68
0x000022e5      43881c3e       mov byte [r14 + r15], bl
0x000022e9      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x000022ee      4983c701       add r15, 1
0x000022f2      b800000000     mov eax, 0
0x000022f7      4584e4         test r12b, r12b
0x000022fa      0f44f8         cmove edi, eax
0x000022fd      40887c240e     mov byte [rsp + 0xe], dil
0x00002302      e931feffff     jmp 0x2138
0x00002307      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00002310      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00002313      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00002317      83f802         cmp eax, 2
0x0000231a      0f84b8050000   je 0x28d8
0x00002320      83f805         cmp eax, 5
0x00002323      0f846f050000   je 0x2898
0x00002329      83f802         cmp eax, 2
0x0000232c      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00002331      0f94c2         sete dl
0x00002334      4531e4         xor r12d, r12d
0x00002337      31c0           xor eax, eax
0x00002339      e93affffff     jmp 0x2278
0x0000233e      6690           nop
0x00002340      4531d2         xor r10d, r10d
0x00002343      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00002348      0f8402050000   je 0x2850
0x0000234e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00002353      31d2           xor edx, edx
0x00002355      31c0           xor eax, eax
0x00002357      bb27000000     mov ebx, 0x27                           ; '''
0x0000235c      e917ffffff     jmp 0x2278
0x00002361      0f1f80000000.  nop dword [rax]
0x00002368      ba09000000     mov edx, 9
0x0000236d      bb74000000     mov ebx, 0x74                           ; 't'
0x00002372      837c240802     cmp dword [rsp + 8], 2
0x00002377      0f94c0         sete al
0x0000237a      2244240f       and al, byte [rsp + 0xf]
0x0000237e      0f854a010000   jne 0x24ce
0x00002384      807c240d00     cmp byte [rsp + 0xd], 0
0x00002389      7565           jne 0x23f0
0x0000238b      89d3           mov ebx, edx
0x0000238d      4531e4         xor r12d, r12d
0x00002390      31c0           xor eax, eax
0x00002392      807c240f00     cmp byte [rsp + 0xf], 0
0x00002397      0f85eefeffff   jne 0x228b
0x0000239d      e907ffffff     jmp 0x22a9                              ; ../coreutils-8.31/lib/quotearg.c:210
0x000023a2      660f1f440000   nop word [rax + rax]
0x000023a8      ba08000000     mov edx, 8
0x000023ad      bb62000000     mov ebx, 0x62                           ; 'b'
0x000023b2      ebd0           jmp 0x2384
0x000023b4      0f1f4000       nop dword [rax]
0x000023b8      837c240802     cmp dword [rsp + 8], 2
0x000023bd      0f84cd030000   je 0x2790
0x000023c3      807c240d00     cmp byte [rsp + 0xd], 0
0x000023c8      0f8412020000   je 0x25e0
0x000023ce      807c240f00     cmp byte [rsp + 0xf], 0
0x000023d3      0f8407020000   je 0x25e0
0x000023d9      48837c241800   cmp qword [rsp + 0x18], 0
0x000023df      0f85b6030000   jne 0x279b
0x000023e5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000023ea      660f1f440000   nop word [rax + rax]
0x000023f0      4531e4         xor r12d, r12d
0x000023f3      837c240802     cmp dword [rsp + 8], 2
0x000023f8      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x000023fb      807c240f00     cmp byte [rsp + 0xf], 0
0x00002400      89d0           mov eax, edx
0x00002402      0f8550080000   jne 0x2c58
0x00002408      4489c0         mov eax, r8d
0x0000240b      83f001         xor eax, 1
0x0000240e      20d0           and al, dl
0x00002410      742f           je 0x2441
0x00002412      4d39fd         cmp r13, r15
0x00002415      7605           jbe 0x241c
0x00002417      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000241c      498d5701       lea rdx, [r15 + 1]
0x00002420      4939d5         cmp r13, rdx
0x00002423      7606           jbe 0x242b
0x00002425      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000242b      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x0000242f      4939d5         cmp r13, rdx
0x00002432      7606           jbe 0x243a
0x00002434      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000243a      4983c703       add r15, 3
0x0000243e      4189c0         mov r8d, eax
0x00002441      4d39fd         cmp r13, r15
0x00002444      7605           jbe 0x244b
0x00002446      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000244b      4983c701       add r15, 1
0x0000244f      4883c501       add rbp, 1
0x00002453      e988feffff     jmp 0x22e0
0x00002458      0f1f84000000.  nop dword [rax + rax]
0x00002460      807c240d00     cmp byte [rsp + 0xd], 0
0x00002465      0f85c8010000   jne 0x2633
0x0000246b      31d2           xor edx, edx
0x0000246d      f644247801     test byte [rsp + 0x78], 1
0x00002472      0f8413ffffff   je 0x238b
0x00002478      4883c501       add rbp, 1
0x0000247c      e9b7fcffff     jmp 0x2138
0x00002481      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00002488      837c240802     cmp dword [rsp + 8], 2
0x0000248d      0f94c2         sete dl
0x00002490      31c0           xor eax, eax
0x00002492      e9e1fdffff     jmp 0x2278
0x00002497      660f1f840000.  nop word [rax + rax]
0x000024a0      ba07000000     mov edx, 7
0x000024a5      bb61000000     mov ebx, 0x61                           ; 'a'
0x000024aa      e9d5feffff     jmp 0x2384
0x000024af      90             nop
0x000024b0      837c240802     cmp dword [rsp + 8], 2
0x000024b5      0f94c2         sete dl
0x000024b8      4885ed         test rbp, rbp
0x000024bb      0f85abfdffff   jne 0x226c
0x000024c1      0fb644240f     movzx eax, byte [rsp + 0xf]
0x000024c6      20d0           and al, dl
0x000024c8      0f84aafdffff   je 0x2278
0x000024ce      4c89dd         mov rbp, r11
0x000024d1      c74424080200.  mov dword [rsp + 8], 2
0x000024d9      e9fb060000     jmp 0x2bd9
0x000024de      6690           nop
0x000024e0      837c240802     cmp dword [rsp + 8], 2
0x000024e5      0f94c2         sete dl
0x000024e8      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x000024eb      ebd4           jmp 0x24c1
0x000024ed      0f1f00         nop dword [rax]
0x000024f0      837c240802     cmp dword [rsp + 8], 2
0x000024f5      bb20000000     mov ebx, 0x20                           ; "@"
0x000024fa      0f94c2         sete dl
0x000024fd      ebc2           jmp 0x24c1
0x000024ff      90             nop
0x00002500      ba0d000000     mov edx, 0xd
0x00002505      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000250a      e963feffff     jmp 0x2372
0x0000250f      90             nop
0x00002510      ba0c000000     mov edx, 0xc
0x00002515      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000251a      e965feffff     jmp 0x2384
0x0000251f      90             nop
0x00002520      ba0b000000     mov edx, 0xb
0x00002525      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000252a      e955feffff     jmp 0x2384
0x0000252f      90             nop
0x00002530      ba0a000000     mov edx, 0xa
0x00002535      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x0000253a      e933feffff     jmp 0x2372
0x0000253f      90             nop
0x00002540      4531d2         xor r10d, r10d
0x00002543      0f1f440000     nop dword [rax + rax]
0x00002548      48837c245801   cmp qword [rsp + 0x58], 1
0x0000254e      0f85a4030000   jne 0x28f8
0x00002554      4c895c2438     mov qword [rsp + 0x38], r11
0x00002559      4488442430     mov byte [rsp + 0x30], r8b
0x0000255e      4488542428     mov byte [rsp + 0x28], r10b
0x00002563      e888efffff     call sym.imp.__ctype_b_loc
0x00002568      488b08         mov rcx, qword [rax]
0x0000256b      0fb6d3         movzx edx, bl
0x0000256e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00002574      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x0000257a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0000257f      bf01000000     mov edi, 1
0x00002584      0fb70451       movzx eax, word [rcx + rdx*2]
0x00002588      66250040       and ax, 0x4000
0x0000258c      410f95c4       setne r12b
0x00002590      0f94c0         sete al
0x00002593      2244240d       and al, byte [rsp + 0xd]
0x00002597      84c0           test al, al
0x00002599      0f8592090000   jne 0x2f31
0x0000259f      837c240802     cmp dword [rsp + 8], 2
0x000025a4      0f94c2         sete dl
0x000025a7      e9ccfcffff     jmp 0x2278
0x000025ac      0f1f4000       nop dword [rax]
0x000025b0      410fb619       movzx ebx, byte [r9]
0x000025b4      80fb7e         cmp bl, 0x7e
0x000025b7      7787           ja 0x2540
0x000025b9      488d0d482a00.  lea rcx, [0x00005008]
0x000025c0      0fb6d3         movzx edx, bl
0x000025c3      48630491       movsxd rax, dword [rcx + rdx*4]
0x000025c7      4801c8         add rax, rcx
0x000025ca      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x000025cc      0f1f4000       nop dword [rax]
0x000025d0      4531d2         xor r10d, r10d
0x000025d3      807c240d00     cmp byte [rsp + 0xd], 0
0x000025d8      0f85f0fdffff   jne 0x23ce
0x000025de      6690           nop
0x000025e0      ba5c000000     mov edx, 0x5c                           ; '\'
0x000025e5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000025ea      e995fdffff     jmp 0x2384
0x000025ef      90             nop
0x000025f0      ba0c000000     mov edx, 0xc
0x000025f5      4531d2         xor r10d, r10d
0x000025f8      bb66000000     mov ebx, 0x66                           ; 'f'
0x000025fd      e982fdffff     jmp 0x2384
0x00002602      660f1f440000   nop word [rax + rax]
0x00002608      ba0a000000     mov edx, 0xa
0x0000260d      4531d2         xor r10d, r10d
0x00002610      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00002615      e958fdffff     jmp 0x2372
0x0000261a      660f1f440000   nop word [rax + rax]
0x00002620      bb61000000     mov ebx, 0x61                           ; 'a'
0x00002625      e9c6fdffff     jmp 0x23f0
0x0000262a      660f1f440000   nop word [rax + rax]
0x00002630      4531d2         xor r10d, r10d
0x00002633      837c240802     cmp dword [rsp + 8], 2
0x00002638      0f94c2         sete dl
0x0000263b      807c240f00     cmp byte [rsp + 0xf], 0
0x00002640      0f85940b0000   jne 0x31da
0x00002646      4489c0         mov eax, r8d
0x00002649      4c89f9         mov rcx, r15
0x0000264c      83f001         xor eax, 1
0x0000264f      20d0           and al, dl
0x00002651      742d           je 0x2680
0x00002653      4d39fd         cmp r13, r15
0x00002656      7605           jbe 0x265d
0x00002658      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000265d      498d4f01       lea rcx, [r15 + 1]
0x00002661      4939cd         cmp r13, rcx
0x00002664      7606           jbe 0x266c
0x00002666      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000266c      498d4f02       lea rcx, [r15 + 2]
0x00002670      4939cd         cmp r13, rcx
0x00002673      0f8730060000   ja 0x2ca9
0x00002679      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x0000267d      4189c0         mov r8d, eax
0x00002680      4939cd         cmp r13, rcx
0x00002683      7605           jbe 0x268a
0x00002685      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000268a      837c240802     cmp dword [rsp + 8], 2
0x0000268f      4c8d7901       lea r15, [rcx + 1]
0x00002693      0f8400060000   je 0x2c99
0x00002699      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000269d      4c39d8         cmp rax, r11
0x000026a0      7319           jae 0x26bb                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x000026a2      488b442410     mov rax, qword [rsp + 0x10]
0x000026a7      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x000026ac      88442428       mov byte [rsp + 0x28], al
0x000026b0      83e830         sub eax, 0x30
0x000026b3      3c09           cmp al, 9
0x000026b5      0f862e080000   jbe 0x2ee9
0x000026bb      4489e0         mov eax, r12d
0x000026be      bb30000000     mov ebx, 0x30                           ; '0'
0x000026c3      4531e4         xor r12d, r12d
0x000026c6      e9adfbffff     jmp 0x2278                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x000026cb      0f1f440000     nop dword [rax + rax]
0x000026d0      837c240802     cmp dword [rsp + 8], 2
0x000026d5      4589d4         mov r12d, r10d
0x000026d8      0f94c2         sete dl
0x000026db      4531d2         xor r10d, r10d
0x000026de      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x000026e0      e993fbffff     jmp 0x2278                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x000026e5      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x000026e8      837c240802     cmp dword [rsp + 8], 2
0x000026ed      0f94c2         sete dl
0x000026f0      4531d2         xor r10d, r10d
0x000026f3      e9c0fdffff     jmp 0x24b8
0x000026f8      0f1f84000000.  nop dword [rax + rax]
0x00002700      837c240802     cmp dword [rsp + 8], 2
0x00002705      0f94c2         sete dl
0x00002708      4531d2         xor r10d, r10d
0x0000270b      4531e4         xor r12d, r12d
0x0000270e      e9aefdffff     jmp 0x24c1
0x00002713      0f1f440000     nop dword [rax + rax]
0x00002718      837c240802     cmp dword [rsp + 8], 2
0x0000271d      4589d4         mov r12d, r10d
0x00002720      bb20000000     mov ebx, 0x20                           ; "@"
0x00002725      0f94c2         sete dl
0x00002728      4531d2         xor r10d, r10d
0x0000272b      e991fdffff     jmp 0x24c1
0x00002730      ba0d000000     mov edx, 0xd
0x00002735      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00002738      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000273d      e930fcffff     jmp 0x2372
0x00002742      660f1f440000   nop word [rax + rax]
0x00002748      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000274d      e99efcffff     jmp 0x23f0
0x00002752      660f1f440000   nop word [rax + rax]
0x00002758      ba09000000     mov edx, 9
0x0000275d      4531d2         xor r10d, r10d
0x00002760      bb74000000     mov ebx, 0x74                           ; 't'
0x00002765      e908fcffff     jmp 0x2372
0x0000276a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00002770      bb62000000     mov ebx, 0x62                           ; 'b'
0x00002775      e976fcffff     jmp 0x23f0
0x0000277a      660f1f440000   nop word [rax + rax]
0x00002780      4531d2         xor r10d, r10d
0x00002783      e998faffff     jmp 0x2220
0x00002788      0f1f84000000.  nop dword [rax + rax]
0x00002790      807c240f00     cmp byte [rsp + 0xf], 0
0x00002795      0f8565090000   jne 0x3100
0x0000279b      4883c501       add rbp, 1
0x0000279f      4489c0         mov eax, r8d
0x000027a2      4531e4         xor r12d, r12d
0x000027a5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000027aa      e90dfbffff     jmp 0x22bc
0x000027af      90             nop
0x000027b0      837c240802     cmp dword [rsp + 8], 2
0x000027b5      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000027ba      4589c4         mov r12d, r8d
0x000027bd      4c89dd         mov rbp, r11
0x000027c0      0f94c2         sete dl
0x000027c3      89d8           mov eax, ebx
0x000027c5      4d85ff         test r15, r15
0x000027c8      0f94c1         sete cl
0x000027cb      21d0           and eax, edx
0x000027cd      20c8           and al, cl
0x000027cf      0f85610a0000   jne 0x3236                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x000027d5      89d8           mov eax, ebx
0x000027d7      83f001         xor eax, 1
0x000027da      20c2           and dl, al
0x000027dc      0f846a090000   je 0x314c
0x000027e2      807c247c00     cmp byte [rsp + 0x7c], 0
0x000027e7      0f845d090000   je 0x314a
0x000027ed      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x000027f2      0f85f5090000   jne 0x31ed
0x000027f8      4d85ed         test r13, r13
0x000027fb      0f94c0         sete al
0x000027fe      48837c245000   cmp qword [rsp + 0x50], 0
0x00002804      0f95c2         setne dl
0x00002807      20d0           and al, dl
0x00002809      0f841d0a0000   je 0x322c
0x0000280f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00002814      488d1d722500.  lea rbx, [0x00004d8d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\uaa00\uffe0\u03ff\uffd3\U010003e2\ue4ff\uffe0\ud4ff\uffde\u30ff\uffdf\u85ff\uffdf\ucaff\uffdf\u04ff\uffe0\u04ff\uffe0\u04ff\uffe0"
0x0000281b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x0000281f      c74424080200.  mov dword [rsp + 8], 2
0x00002827      41bf01000000   mov r15d, 1
0x0000282d      48c744241801.  mov qword [rsp + 0x18], 1
0x00002836      c644240f00     mov byte [rsp + 0xf], 0
0x0000283b      48895c2448     mov qword [rsp + 0x48], rbx
0x00002840      8844247c       mov byte [rsp + 0x7c], al
0x00002844      e9daf8ffff     jmp 0x2123
0x00002849      0f1f80000000.  nop dword [rax]
0x00002850      807c240f00     cmp byte [rsp + 0xf], 0
0x00002855      0f85a5080000   jne 0x3100
0x0000285b      4d85ed         test r13, r13
0x0000285e      0f84fc030000   je 0x2c60                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00002864      31d2           xor edx, edx
0x00002866      48837c245000   cmp qword [rsp + 0x50], 0
0x0000286c      0f85ee030000   jne 0x2c60                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00002872      4c896c2450     mov qword [rsp + 0x50], r13
0x00002877      4983c703       add r15, 3
0x0000287b      31c0           xor eax, eax
0x0000287d      448864247c     mov byte [rsp + 0x7c], r12b
0x00002882      4531c0         xor r8d, r8d
0x00002885      4989d5         mov r13, rdx
0x00002888      bb27000000     mov ebx, 0x27                           ; '''
0x0000288d      e917faffff     jmp 0x22a9
0x00002892      660f1f440000   nop word [rax + rax]
0x00002898      f644247804     test byte [rsp + 0x78], 4
0x0000289d      7421           je 0x28c0
0x0000289f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x000028a3      4c39d9         cmp rcx, r11
0x000028a6      7318           jae 0x28c0
0x000028a8      488b442410     mov rax, qword [rsp + 0x10]
0x000028ad      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x000028b2      0f848a070000   je 0x3042
0x000028b8      0f1f84000000.  nop dword [rax + rax]
0x000028c0      31d2           xor edx, edx
0x000028c2      4531e4         xor r12d, r12d
0x000028c5      31c0           xor eax, eax
0x000028c7      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000028cc      e9a7f9ffff     jmp 0x2278
0x000028d1      0f1f80000000.  nop dword [rax]
0x000028d8      807c240f00     cmp byte [rsp + 0xf], 0
0x000028dd      0f851d080000   jne 0x3100
0x000028e3      4531e4         xor r12d, r12d
0x000028e6      31c0           xor eax, eax
0x000028e8      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000028ed      e9b7f9ffff     jmp 0x22a9                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x000028f2      660f1f440000   nop word [rax + rax]
0x000028f8      488d8424a000.  lea rax, [rsp + 0xa0]
0x00002900      4983fbff       cmp r11, 0xffffffffffffffff
0x00002904      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00002910      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00002915      752d           jne 0x2944
0x00002917      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000291c      4488442440     mov byte [rsp + 0x40], r8b
0x00002921      4488542438     mov byte [rsp + 0x38], r10b
0x00002926      4c894c2430     mov qword [rsp + 0x30], r9
0x0000292b      e8f0e9ffff     call sym.imp.strlen
0x00002930      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00002936      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x0000293c      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x0000293f      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00002944      488d84249c00.  lea rax, [rsp + 0x9c]
0x0000294c      31c9           xor ecx, ecx
0x0000294e      885c247e       mov byte [rsp + 0x7e], bl
0x00002952      448844247d     mov byte [rsp + 0x7d], r8b
0x00002957      4889cb         mov rbx, rcx
0x0000295a      4c898c248800.  mov qword [rsp + 0x88], r9
0x00002962      4889442438     mov qword [rsp + 0x38], rax
0x00002967      448854247f     mov byte [rsp + 0x7f], r10b
0x0000296c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00002974      4c89742440     mov qword [rsp + 0x40], r14
0x00002979      4c896c2470     mov qword [rsp + 0x70], r13
0x0000297e      4c895c2430     mov qword [rsp + 0x30], r11
0x00002983      488b442410     mov rax, qword [rsp + 0x10]
0x00002988      4c8d741d00     lea r14, [rbp + rbx]
0x0000298d      488b542430     mov rdx, qword [rsp + 0x30]
0x00002992      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00002997      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000299c      4e8d2c30       lea r13, [rax + r14]
0x000029a0      4c29f2         sub rdx, r14
0x000029a3      4c89ee         mov rsi, r13
0x000029a6      e8151b0000     call sym.rpl_mbrtowc
0x000029ab      4885c0         test rax, rax
0x000029ae      4989c7         mov r15, rax
0x000029b1      744e           je 0x2a01
0x000029b3      4883f8ff       cmp rax, 0xffffffffffffffff
0x000029b7      0f8418060000   je 0x2fd5
0x000029bd      4883f8fe       cmp rax, 0xfffffffffffffffe
0x000029c1      0f849a050000   je 0x2f61
0x000029c7      837c240802     cmp dword [rsp + 8], 2
0x000029cc      0f94c0         sete al
0x000029cf      2244240f       and al, byte [rsp + 0xf]
0x000029d3      0f8597010000   jne 0x2b70
0x000029d9      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x000029e0      e8fbeaffff     call sym.imp.iswprint
0x000029e5      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000029ea      85c0           test eax, eax
0x000029ec      b800000000     mov eax, 0
0x000029f1      440f44e0       cmove r12d, eax
0x000029f5      4c01fb         add rbx, r15
0x000029f8      e8d3eaffff     call sym.imp.mbsinit
0x000029fd      85c0           test eax, eax
0x000029ff      7482           je 0x2983
0x00002a01      4489e2         mov edx, r12d
0x00002a04      4889df         mov rdi, rbx
0x00002a07      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00002a0d      83f201         xor edx, 1
0x00002a10      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00002a15      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00002a1b      2254240d       and dl, byte [rsp + 0xd]
0x00002a1f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00002a27      4c8b742440     mov r14, qword [rsp + 0x40]
0x00002a2c      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00002a31      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00002a36      4883ff01       cmp rdi, 1
0x00002a3a      0f86fb050000   jbe 0x303b
0x00002a40      4889f9         mov rcx, rdi
0x00002a43      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00002a45      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x00002a4b      4801e9         add rcx, rbp
0x00002a4e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002a53      e9b6000000     jmp 0x2b0e
0x00002a58      0f1f84000000.  nop dword [rax + rax]
0x00002a60      837c240802     cmp dword [rsp + 8], 2
0x00002a65      0f94c0         sete al
0x00002a68      4584c9         test r9b, r9b
0x00002a6b      0f85af040000   jne 0x2f20
0x00002a71      4489c6         mov esi, r8d
0x00002a74      83f601         xor esi, 1
0x00002a77      4020f0         and al, sil
0x00002a7a      742f           je 0x2aab                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x00002a7c      4d39fd         cmp r13, r15
0x00002a7f      7605           jbe 0x2a86
0x00002a81      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00002a86      498d7701       lea rsi, [r15 + 1]
0x00002a8a      4939f5         cmp r13, rsi
0x00002a8d      7606           jbe 0x2a95                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x00002a8f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00002a95      498d7702       lea rsi, [r15 + 2]
0x00002a99      4939f5         cmp r13, rsi
0x00002a9c      7606           jbe 0x2aa4
0x00002a9e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00002aa4      4983c703       add r15, 3
0x00002aa8      4189c0         mov r8d, eax
0x00002aab      4d39fd         cmp r13, r15
0x00002aae      7605           jbe 0x2ab5
0x00002ab0      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00002ab5      498d4701       lea rax, [r15 + 1]
0x00002ab9      4939c5         cmp r13, rax
0x00002abc      760d           jbe 0x2acb
0x00002abe      89d8           mov eax, ebx
0x00002ac0      c0e806         shr al, 6
0x00002ac3      83c030         add eax, 0x30
0x00002ac6      4388443e01     mov byte [r14 + r15 + 1], al
0x00002acb      498d4702       lea rax, [r15 + 2]
0x00002acf      4939c5         cmp r13, rax
0x00002ad2      7610           jbe 0x2ae4
0x00002ad4      89d8           mov eax, ebx
0x00002ad6      c0e803         shr al, 3
0x00002ad9      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x00002adc      83c030         add eax, 0x30
0x00002adf      4388443e02     mov byte [r14 + r15 + 2], al
0x00002ae4      83e307         and ebx, 7
0x00002ae7      4883c501       add rbp, 1
0x00002aeb      4983c703       add r15, 3
0x00002aef      83c330         add ebx, 0x30
0x00002af2      4839cd         cmp rbp, rcx
0x00002af5      0f83e5f7ffff   jae 0x22e0
0x00002afb      89d6           mov esi, edx
0x00002afd      4d39fd         cmp r13, r15
0x00002b00      7604           jbe 0x2b06
0x00002b02      43881c3e       mov byte [r14 + r15], bl
0x00002b06      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00002b0a      4983c701       add r15, 1
0x00002b0e      84d2           test dl, dl
0x00002b10      0f854affffff   jne 0x2a60
0x00002b16      89f0           mov eax, esi
0x00002b18      83f001         xor eax, 1
0x00002b1b      4421c0         and eax, r8d
0x00002b1e      4584d2         test r10b, r10b
0x00002b21      740e           je 0x2b31
0x00002b23      4d39fd         cmp r13, r15
0x00002b26      7605           jbe 0x2b2d
0x00002b28      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00002b2d      4983c701       add r15, 1
0x00002b31      4883c501       add rbp, 1
0x00002b35      4839cd         cmp rbp, rcx
0x00002b38      0f837ef7ffff   jae 0x22bc
0x00002b3e      84c0           test al, al
0x00002b40      0f84f8030000   je 0x2f3e
0x00002b46      4d39fd         cmp r13, r15
0x00002b49      7605           jbe 0x2b50
0x00002b4b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00002b50      498d4701       lea rax, [r15 + 1]
0x00002b54      4939c5         cmp r13, rax
0x00002b57      7606           jbe 0x2b5f
0x00002b59      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00002b5f      4983c702       add r15, 2
0x00002b63      4531d2         xor r10d, r10d
0x00002b66      4531c0         xor r8d, r8d
0x00002b69      eb92           jmp 0x2afd
0x00002b6b      0f1f440000     nop dword [rax + rax]
0x00002b70      4983ff01       cmp r15, 1
0x00002b74      0f845ffeffff   je 0x29d9
0x00002b7a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002b7f      4a8d0c3f       lea rcx, [rdi + r15]
0x00002b83      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00002b88      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00002b8c      eb0f           jmp 0x2b9d
0x00002b8e      6690           nop
0x00002b90      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00002b94      4939d0         cmp r8, rdx
0x00002b97      0f843cfeffff   je 0x29d9
0x00002b9d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00002ba0      83e95b         sub ecx, 0x5b
0x00002ba3      80f921         cmp cl, 0x21
0x00002ba6      77e8           ja 0x2b90                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00002ba8      be01000000     mov esi, 1
0x00002bad      48d3e6         shl rsi, cl
0x00002bb0      4889f1         mov rcx, rsi
0x00002bb3      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x00002bbd      4885f1         test rcx, rsi
0x00002bc0      74ce           je 0x2b90
0x00002bc2      4c8b742440     mov r14, qword [rsp + 0x40]
0x00002bc7      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00002bcc      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00002bd1      c74424080200.  mov dword [rsp + 8], 2
0x00002bd9      807c240d00     cmp byte [rsp + 0xd], 0
0x00002bde      7410           je 0x2bf0
0x00002be0      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00002be2      b804000000     mov eax, 4
0x00002be7      0f44442408     cmove eax, dword [rsp + 8]
0x00002bec      89442408       mov dword [rsp + 8], eax
0x00002bf0      4883ec08       sub rsp, 8
0x00002bf4      4889e9         mov rcx, rbp
0x00002bf7      4c89ee         mov rsi, r13
0x00002bfa      ff742468       push qword [rsp + 0x68]
0x00002bfe      ff742478       push qword [rsp + 0x78]
0x00002c02      4c89f7         mov rdi, r14
0x00002c05      6a00           push 0
0x00002c07      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00002c0f      448b442428     mov r8d, dword [rsp + 0x28]
0x00002c14      488b542430     mov rdx, qword [rsp + 0x30]
0x00002c19      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x00002c1d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00002c22      4883c420       add rsp, 0x20
0x00002c26      4989c7         mov r15, rax
0x00002c29      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00002c31      6448331c2528.  xor rbx, qword fs:[0x28]
0x00002c3a      4c89f8         mov rax, r15
0x00002c3d      0f8500060000   jne 0x3243
0x00002c43      4881c4b80000.  add rsp, 0xb8
0x00002c4a      5b             pop rbx
0x00002c4b      5d             pop rbp
0x00002c4c      415c           pop r12
0x00002c4e      415d           pop r13
0x00002c50      415e           pop r14
0x00002c52      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00002c54      c3             ret
0x00002c55      0f1f00         nop dword [rax]
0x00002c58      4c89dd         mov rbp, r11
0x00002c5b      e979ffffff     jmp 0x2bd9
0x00002c60      4d39fd         cmp r13, r15
0x00002c63      7605           jbe 0x2c6a
0x00002c65      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00002c6a      498d4701       lea rax, [r15 + 1]
0x00002c6e      4939c5         cmp r13, rax
0x00002c71      7606           jbe 0x2c79
0x00002c73      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00002c79      498d4702       lea rax, [r15 + 2]
0x00002c7d      4939c5         cmp r13, rax
0x00002c80      0f86ec050000   jbe 0x3272
0x00002c86      4c89ea         mov rdx, r13
0x00002c89      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00002c8f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00002c94      e9d9fbffff     jmp 0x2872
0x00002c99      4489e0         mov eax, r12d
0x00002c9c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00002ca1      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00002ca4      e900f6ffff     jmp 0x22a9                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00002ca9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00002caf      e9c5f9ffff     jmp 0x2679
0x00002cb4      85db           test ebx, ebx
0x00002cb6      0f8527f4ffff   jne 0x20e3
0x00002cbc      c644240d01     mov byte [rsp + 0xd], 1
0x00002cc1      4d85ed         test r13, r13
0x00002cc4      0f8590050000   jne 0x325a
0x00002cca      488d05bc2000.  lea rax, [0x00004d8d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\uaa00\uffe0\u03ff\uffd3\U010003e2\ue4ff\uffe0\ud4ff\uffde\u30ff\uffdf\u85ff\uffdf\ucaff\uffdf\u04ff\uffe0\u04ff\uffe0\u04ff\uffe0"
0x00002cd1      48c744245000.  mov qword [rsp + 0x50], 0
0x00002cda      c644240e01     mov byte [rsp + 0xe], 1
0x00002cdf      c644247c00     mov byte [rsp + 0x7c], 0
0x00002ce4      4531e4         xor r12d, r12d
0x00002ce7      c644240f00     mov byte [rsp + 0xf], 0
0x00002cec      48c744241801.  mov qword [rsp + 0x18], 1
0x00002cf5      4889442448     mov qword [rsp + 0x48], rax
0x00002cfa      41bf01000000   mov r15d, 1
0x00002d00      c74424080200.  mov dword [rsp + 8], 2
0x00002d08      e916f4ffff     jmp 0x2123                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x00002d0d      0f1f00         nop dword [rax]
0x00002d10      85db           test ebx, ebx
0x00002d12      0f85f5030000   jne 0x310d
0x00002d18      4d85ed         test r13, r13
0x00002d1b      0f8425020000   je 0x2f46
0x00002d21      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00002d25      c644240e01     mov byte [rsp + 0xe], 1
0x00002d2a      4531e4         xor r12d, r12d
0x00002d2d      c644247c00     mov byte [rsp + 0x7c], 0
0x00002d32      48c744245000.  mov qword [rsp + 0x50], 0
0x00002d3b      488d05492000.  lea rax, str.l______l                   ; 0x4d8b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\uaa00\uffe0\u03ff\uffd3\U010003e2\ue4ff\uffe0\ud4ff\uffde\u30ff\uffdf\u85ff\uffdf\ucaff\uffdf\u04ff\uffe0\u04ff\uffe0\u04ff\uffe0\u54ff\uffd6\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u94ff\uffd6\u9cff\uffd5\u5cff\uffd5\u24ff\uffd7\u14ff\uffd7\u04ff\uffd7\uf4ff\uffd6\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\ue4ff\uffd6\ud4ff\uffd6\ud4ff\uffd6\ua4ff\uffd6\ud4ff\uffd6\u7cff\uffd6\ud4ff\uffd6\u37ff\uffd5\ud4ff\uffd6\ud4ff\uffd6\ud4ff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\ud4ff\uffd6\ud4ff\uffd6\ud4ff\uffd6\ud4ff\uffd6\u07ff\uffd5\u3cff\uffd7\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\ud4ff\uffd6\uacff\uffd5\u7cff\uffd6\ud4ff\uffd6\u7cff\uffd6\ud4ff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u37ff\uffd4\ud4ff\uffd6\u37ff\uffd4\ua4ff\uffd6\u28ff\uffd6\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u18ff\uffd6\u68ff\uffd7\u50ff\uffd7\xff\uffd6\u40ff\uffd7\ue8ff\uffd5\u28ff\uffd7\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u10ff\uffd7\U010003d6\U010003d6\ue0ff\uffd6\U010003d6\uc8ff\uffd6\U010003d6\u38ff\uffd3\U010003d6\U010003d6\U010003d6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\U010003d6\U010003d6\U010003d6\U010003d6\u08ff\uffd3\u38ff\uffd5\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\U010003d6\uc8ff\uffd5\uc8ff\uffd6\U010003d6\uc8ff\uffd6\U010003d6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\u38ff\uffd2\U010003d6\u38ff\uffd2\ue0ff\uffd6\xff"
0x00002d42      c644240f00     mov byte [rsp + 0xf], 0
0x00002d47      c644240d01     mov byte [rsp + 0xd], 1
0x00002d4c      48c744241801.  mov qword [rsp + 0x18], 1
0x00002d55      41bf01000000   mov r15d, 1
0x00002d5b      4889442448     mov qword [rsp + 0x48], rax
0x00002d60      e9bef3ffff     jmp 0x2123
0x00002d65      488d051f2000.  lea rax, str.l______l                   ; 0x4d8b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\uaa00\uffe0\u03ff\uffd3\U010003e2\ue4ff\uffe0\ud4ff\uffde\u30ff\uffdf\u85ff\uffdf\ucaff\uffdf\u04ff\uffe0\u04ff\uffe0\u04ff\uffe0\u54ff\uffd6\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u94ff\uffd6\u9cff\uffd5\u5cff\uffd5\u24ff\uffd7\u14ff\uffd7\u04ff\uffd7\uf4ff\uffd6\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\ue4ff\uffd6\ud4ff\uffd6\ud4ff\uffd6\ua4ff\uffd6\ud4ff\uffd6\u7cff\uffd6\ud4ff\uffd6\u37ff\uffd5\ud4ff\uffd6\ud4ff\uffd6\ud4ff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\ud4ff\uffd6\ud4ff\uffd6\ud4ff\uffd6\ud4ff\uffd6\u07ff\uffd5\u3cff\uffd7\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\ud4ff\uffd6\uacff\uffd5\u7cff\uffd6\ud4ff\uffd6\u7cff\uffd6\ud4ff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u37ff\uffd4\ud4ff\uffd6\u37ff\uffd4\ua4ff\uffd6\u28ff\uffd6\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u18ff\uffd6\u68ff\uffd7\u50ff\uffd7\xff\uffd6\u40ff\uffd7\ue8ff\uffd5\u28ff\uffd7\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u10ff\uffd7\U010003d6\U010003d6\ue0ff\uffd6\U010003d6\uc8ff\uffd6\U010003d6\u38ff\uffd3\U010003d6\U010003d6\U010003d6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\U010003d6\U010003d6\U010003d6\U010003d6\u08ff\uffd3\u38ff\uffd5\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\U010003d6\uc8ff\uffd5\uc8ff\uffd6\U010003d6\uc8ff\uffd6\U010003d6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\u38ff\uffd2\U010003d6\u38ff\uffd2\ue0ff\uffd6\xff"
0x00002d6c      c644240e01     mov byte [rsp + 0xe], 1
0x00002d71      c644247c00     mov byte [rsp + 0x7c], 0
0x00002d76      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00002d79      48c744245000.  mov qword [rsp + 0x50], 0
0x00002d82      c644240f01     mov byte [rsp + 0xf], 1
0x00002d87      c644240d01     mov byte [rsp + 0xd], 1
0x00002d8c      48c744241801.  mov qword [rsp + 0x18], 1
0x00002d95      4531ff         xor r15d, r15d
0x00002d98      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x00002d9d      c74424080500.  mov dword [rsp + 8], 5
0x00002da5      e979f3ffff     jmp 0x2123
0x00002daa      c644240e01     mov byte [rsp + 0xe], 1
0x00002daf      c644247c00     mov byte [rsp + 0x7c], 0
0x00002db4      4531e4         xor r12d, r12d
0x00002db7      48c744245000.  mov qword [rsp + 0x50], 0
0x00002dc0      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00002dc5      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00002dc8      c644240d01     mov byte [rsp + 0xd], 1
0x00002dcd      48c744241800.  mov qword [rsp + 0x18], 0
0x00002dd6      48c744244800.  mov qword [rsp + 0x48], 0
0x00002ddf      e93ff3ffff     jmp 0x2123
0x00002de4      837c24080a     cmp dword [rsp + 8], 0xa
0x00002de9      7456           je 0x2e41
0x00002deb      488d359d1f00.  lea rsi, [0x00004d8f]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00002df2      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00002df4      ba05000000     mov edx, 5
0x00002df9      e802e5ffff     call sym.imp.dcgettext
0x00002dfe      4889c1         mov rcx, rax
0x00002e01      4889442468     mov qword [rsp + 0x68], rax
0x00002e06      488d05821f00.  lea rax, [0x00004d8f]                   ; "`"
0x00002e0d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00002e10      0f8498030000   je 0x31ae
0x00002e16      488d35701f00.  lea rsi, [0x00004d8d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\uaa00\uffe0\u03ff\uffd3\U010003e2\ue4ff\uffe0\ud4ff\uffde\u30ff\uffdf\u85ff\uffdf\ucaff\uffdf\u04ff\uffe0\u04ff\uffe0\u04ff\uffe0"
0x00002e1d      31ff           xor edi, edi
0x00002e1f      ba05000000     mov edx, 5
0x00002e24      e8d7e4ffff     call sym.imp.dcgettext
0x00002e29      4889c1         mov rcx, rax
0x00002e2c      4889442460     mov qword [rsp + 0x60], rax
0x00002e31      488d05551f00.  lea rax, [0x00004d8d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\uaa00\uffe0\u03ff\uffd3\U010003e2\ue4ff\uffe0\ud4ff\uffde\u30ff\uffdf\u85ff\uffdf\ucaff\uffdf\u04ff\uffe0\u04ff\uffe0\u04ff\uffe0"
0x00002e38      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x00002e3b      0f8483030000   je 0x31c4
0x00002e41      4531ff         xor r15d, r15d
0x00002e44      85db           test ebx, ebx
0x00002e46      0f84c1010000   je 0x300d
0x00002e4c      85db           test ebx, ebx
0x00002e4e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00002e53      0f9544240f     setne byte [rsp + 0xf]
0x00002e58      4531e4         xor r12d, r12d
0x00002e5b      4889df         mov rdi, rbx
0x00002e5e      e8bde4ffff     call sym.imp.strlen
0x00002e63      48895c2448     mov qword [rsp + 0x48], rbx
0x00002e68      4889442418     mov qword [rsp + 0x18], rax
0x00002e6d      c644240e01     mov byte [rsp + 0xe], 1
0x00002e72      c644247c00     mov byte [rsp + 0x7c], 0
0x00002e77      48c744245000.  mov qword [rsp + 0x50], 0
0x00002e80      c644240d01     mov byte [rsp + 0xd], 1
0x00002e85      e999f2ffff     jmp 0x2123
0x00002e8a      c644240e01     mov byte [rsp + 0xe], 1
0x00002e8f      c644247c00     mov byte [rsp + 0x7c], 0
0x00002e94      4531e4         xor r12d, r12d
0x00002e97      48c744245000.  mov qword [rsp + 0x50], 0
0x00002ea0      c644240f00     mov byte [rsp + 0xf], 0
0x00002ea5      4531ff         xor r15d, r15d
0x00002ea8      c644240d00     mov byte [rsp + 0xd], 0
0x00002ead      48c744241800.  mov qword [rsp + 0x18], 0
0x00002eb6      48c744244800.  mov qword [rsp + 0x48], 0
0x00002ebf      e95ff2ffff     jmp 0x2123
0x00002ec4      c644240e01     mov byte [rsp + 0xe], 1
0x00002ec9      c644247c00     mov byte [rsp + 0x7c], 0
0x00002ece      4531e4         xor r12d, r12d
0x00002ed1      48c744245000.  mov qword [rsp + 0x50], 0
0x00002eda      c644240f01     mov byte [rsp + 0xf], 1
0x00002edf      c644240d01     mov byte [rsp + 0xd], 1
0x00002ee4      e91af2ffff     jmp 0x2103
0x00002ee9      4d39fd         cmp r13, r15
0x00002eec      7605           jbe 0x2ef3
0x00002eee      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00002ef3      488d4102       lea rax, [rcx + 2]
0x00002ef7      4939c5         cmp r13, rax
0x00002efa      7606           jbe 0x2f02
0x00002efc      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00002f02      4489e0         mov eax, r12d
0x00002f05      4c8d7903       lea r15, [rcx + 3]
0x00002f09      4531e4         xor r12d, r12d
0x00002f0c      bb30000000     mov ebx, 0x30                           ; '0'
0x00002f11      e962f3ffff     jmp 0x2278
0x00002f16      662e0f1f8400.  nop word cs:[rax + rax]
0x00002f20      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00002f25      4c89dd         mov rbp, r11
0x00002f28      885c240d       mov byte [rsp + 0xd], bl
0x00002f2c      e9a8fcffff     jmp 0x2bd9
0x00002f31      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00002f36      4531e4         xor r12d, r12d
0x00002f39      e902fbffff     jmp 0x2a40
0x00002f3e      4531d2         xor r10d, r10d
0x00002f41      e9b7fbffff     jmp 0x2afd
0x00002f46      48c744245000.  mov qword [rsp + 0x50], 0
0x00002f4f      c644240e01     mov byte [rsp + 0xe], 1
0x00002f54      4531e4         xor r12d, r12d
0x00002f57      c644247c00     mov byte [rsp + 0x7c], 0
0x00002f5c      e9dafdffff     jmp 0x2d3b
0x00002f61      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00002f66      4c89f6         mov rsi, r14
0x00002f69      4c89e9         mov rcx, r13
0x00002f6c      4889d8         mov rax, rbx
0x00002f6f      4889df         mov rdi, rbx
0x00002f72      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00002f78      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00002f7d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00002f85      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00002f88      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00002f8e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00002f96      4c8b742440     mov r14, qword [rsp + 0x40]
0x00002f9b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00002fa0      7326           jae 0x2fc8
0x00002fa2      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00002fa5      7510           jne 0x2fb7
0x00002fa7      eb1f           jmp 0x2fc8
0x00002fa9      0f1f80000000.  nop dword [rax]
0x00002fb0      41803c0100     cmp byte [r9 + rax], 0
0x00002fb5      740e           je 0x2fc5
0x00002fb7      4883c001       add rax, 1
0x00002fbb      488d540500     lea rdx, [rbp + rax]
0x00002fc0      4939d3         cmp r11, rdx
0x00002fc3      77eb           ja 0x2fb0
0x00002fc5      4889c7         mov rdi, rax
0x00002fc8      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00002fcd      4531e4         xor r12d, r12d
0x00002fd0      e961faffff     jmp 0x2a36
0x00002fd5      4889df         mov rdi, rbx
0x00002fd8      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00002fde      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00002fe3      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00002fe9      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00002ff1      4531e4         xor r12d, r12d
0x00002ff4      4c8b742440     mov r14, qword [rsp + 0x40]
0x00002ff9      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00002ffe      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003003      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003008      e929faffff     jmp 0x2a36
0x0000300d      488b542468     mov rdx, qword [rsp + 0x68]
0x00003012      0fb602         movzx eax, byte [rdx]
0x00003015      84c0           test al, al
0x00003017      0f842ffeffff   je 0x2e4c
0x0000301d      0f1f00         nop dword [rax]
0x00003020      4d39fd         cmp r13, r15
0x00003023      7604           jbe 0x3029
0x00003025      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00003029      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x0000302d      420fb6043a     movzx eax, byte [rdx + r15]
0x00003032      84c0           test al, al
0x00003034      75ea           jne 0x3020
0x00003036      e911feffff     jmp 0x2e4c
0x0000303b      89d0           mov eax, edx
0x0000303d      e955f5ffff     jmp 0x2597
0x00003042      0fb61c08       movzx ebx, byte [rax + rcx]
0x00003046      80fb3e         cmp bl, 0x3e
0x00003049      0f8771f8ffff   ja 0x28c0
0x0000304f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00003059      480fa3d8       bt rax, rbx
0x0000305d      0f835df8ffff   jae 0x28c0
0x00003063      807c240f00     cmp byte [rsp + 0xf], 0
0x00003068      0f85e4010000   jne 0x3252                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x0000306e      4d39fd         cmp r13, r15
0x00003071      7605           jbe 0x3078
0x00003073      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00003078      498d4701       lea rax, [r15 + 1]
0x0000307c      4939c5         cmp r13, rax
0x0000307f      7606           jbe 0x3087
0x00003081      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003087      498d4702       lea rax, [r15 + 2]
0x0000308b      4939c5         cmp r13, rax
0x0000308e      7606           jbe 0x3096
0x00003090      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003096      498d4703       lea rax, [r15 + 3]
0x0000309a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x0000309d      7606           jbe 0x30a5
0x0000309f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x000030a5      4983c704       add r15, 4
0x000030a9      31d2           xor edx, edx
0x000030ab      4531e4         xor r12d, r12d
0x000030ae      31c0           xor eax, eax
0x000030b0      4889cd         mov rbp, rcx
0x000030b3      e9c0f1ffff     jmp 0x2278
0x000030b8      85db           test ebx, ebx
0x000030ba      0f8488010000   je 0x3248
0x000030c0      488d05c61c00.  lea rax, [0x00004d8d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\uaa00\uffe0\u03ff\uffd3\U010003e2\ue4ff\uffe0\ud4ff\uffde\u30ff\uffdf\u85ff\uffdf\ucaff\uffdf\u04ff\uffe0\u04ff\uffe0\u04ff\uffe0"
0x000030c7      c644240e01     mov byte [rsp + 0xe], 1
0x000030cc      c644247c00     mov byte [rsp + 0x7c], 0
0x000030d1      4531e4         xor r12d, r12d
0x000030d4      48c744245000.  mov qword [rsp + 0x50], 0
0x000030dd      c644240f01     mov byte [rsp + 0xf], 1
0x000030e2      c644240d00     mov byte [rsp + 0xd], 0
0x000030e7      48c744241801.  mov qword [rsp + 0x18], 1
0x000030f0      4531ff         xor r15d, r15d
0x000030f3      4889442448     mov qword [rsp + 0x48], rax
0x000030f8      e926f0ffff     jmp 0x2123
0x000030fd      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00003100      4c89dd         mov rbp, r11
0x00003103      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003108      e9ccfaffff     jmp 0x2bd9
0x0000310d      488d05771c00.  lea rax, str.l______l                   ; 0x4d8b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\uaa00\uffe0\u03ff\uffd3\U010003e2\ue4ff\uffe0\ud4ff\uffde\u30ff\uffdf\u85ff\uffdf\ucaff\uffdf\u04ff\uffe0\u04ff\uffe0\u04ff\uffe0\u54ff\uffd6\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u94ff\uffd6\u9cff\uffd5\u5cff\uffd5\u24ff\uffd7\u14ff\uffd7\u04ff\uffd7\uf4ff\uffd6\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\u3cff\uffd7\ue4ff\uffd6\ud4ff\uffd6\ud4ff\uffd6\ua4ff\uffd6\ud4ff\uffd6\u7cff\uffd6\ud4ff\uffd6\u37ff\uffd5\ud4ff\uffd6\ud4ff\uffd6\ud4ff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\ud4ff\uffd6\ud4ff\uffd6\ud4ff\uffd6\ud4ff\uffd6\u07ff\uffd5\u3cff\uffd7\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\ud4ff\uffd6\uacff\uffd5\u7cff\uffd6\ud4ff\uffd6\u7cff\uffd6\ud4ff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u7cff\uffd6\u37ff\uffd4\ud4ff\uffd6\u37ff\uffd4\ua4ff\uffd6\u28ff\uffd6\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u18ff\uffd6\u68ff\uffd7\u50ff\uffd7\xff\uffd6\u40ff\uffd7\ue8ff\uffd5\u28ff\uffd7\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u38ff\uffd5\u10ff\uffd7\U010003d6\U010003d6\ue0ff\uffd6\U010003d6\uc8ff\uffd6\U010003d6\u38ff\uffd3\U010003d6\U010003d6\U010003d6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\U010003d6\U010003d6\U010003d6\U010003d6\u08ff\uffd3\u38ff\uffd5\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\U010003d6\uc8ff\uffd5\uc8ff\uffd6\U010003d6\uc8ff\uffd6\U010003d6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\uc8ff\uffd6\u38ff\uffd2\U010003d6\u38ff\uffd2\ue0ff\uffd6\xff"
0x00003114      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00003119      c644247c00     mov byte [rsp + 0x7c], 0
0x0000311e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00003121      48c744245000.  mov qword [rsp + 0x50], 0
0x0000312a      c644240f01     mov byte [rsp + 0xf], 1
0x0000312f      c644240d01     mov byte [rsp + 0xd], 1
0x00003134      48c744241801.  mov qword [rsp + 0x18], 1
0x0000313d      4531ff         xor r15d, r15d
0x00003140      4889442448     mov qword [rsp + 0x48], rax
0x00003145      e9d9efffff     jmp 0x2123
0x0000314a      89d0           mov eax, edx
0x0000314c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00003151      4885db         test rbx, rbx
0x00003154      742c           je 0x3182
0x00003156      84c0           test al, al
0x00003158      7428           je 0x3182
0x0000315a      0fb60b         movzx ecx, byte [rbx]
0x0000315d      4889d8         mov rax, rbx
0x00003160      84c9           test cl, cl
0x00003162      741e           je 0x3182
0x00003164      4c89fa         mov rdx, r15
0x00003167      4c29f8         sub rax, r15
0x0000316a      4939d5         cmp r13, rdx
0x0000316d      7604           jbe 0x3173
0x0000316f      41880c16       mov byte [r14 + rdx], cl
0x00003173      4883c201       add rdx, 1
0x00003177      0fb60c10       movzx ecx, byte [rax + rdx]
0x0000317b      84c9           test cl, cl
0x0000317d      75eb           jne 0x316a
0x0000317f      4989d7         mov r15, rdx
0x00003182      4d39fd         cmp r13, r15
0x00003185      0f869efaffff   jbe 0x2c29
0x0000318b      43c6043e00     mov byte [r14 + r15], 0
0x00003190      e994faffff     jmp 0x2c29
0x00003195      837c240802     cmp dword [rsp + 8], 2
0x0000319a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000319f      4c89dd         mov rbp, r11
0x000031a2      0f94c0         sete al
0x000031a5      885c240d       mov byte [rsp + 0xd], bl
0x000031a9      e92bfaffff     jmp 0x2bd9
0x000031ae      8b742408       mov esi, dword [rsp + 8]
0x000031b2      4889cf         mov rdi, rcx
0x000031b5      e8a6edffff     call sym.gettext_quote.part.1
0x000031ba      4889442468     mov qword [rsp + 0x68], rax
0x000031bf      e952fcffff     jmp 0x2e16
0x000031c4      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x000031c8      4889cf         mov rdi, rcx
0x000031cb      e890edffff     call sym.gettext_quote.part.1
0x000031d0      4889442460     mov qword [rsp + 0x60], rax
0x000031d5      e967fcffff     jmp 0x2e41
0x000031da      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000031df      4c89dd         mov rbp, r11
0x000031e2      89d0           mov eax, edx
0x000031e4      885c240d       mov byte [rsp + 0xd], bl
0x000031e8      e9ecf9ffff     jmp 0x2bd9
0x000031ed      4883ec08       sub rsp, 8
0x000031f1      41b805000000   mov r8d, 5
0x000031f7      4c89d9         mov rcx, r11
0x000031fa      ff742468       push qword [rsp + 0x68]
0x000031fe      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00003202      4c89f7         mov rdi, r14
0x00003205      ff742438       push qword [rsp + 0x38]
0x00003209      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00003211      488b542430     mov rdx, qword [rsp + 0x30]
0x00003216      488b742470     mov rsi, qword [rsp + 0x70]
0x0000321b      e830eeffff     call sym.quotearg_buffer_restyled
0x00003220      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00003224      4989c7         mov r15, rax
0x00003227      e9fdf9ffff     jmp 0x2c29
0x0000322c      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00003231      e916ffffff     jmp 0x314c
0x00003236      c74424080200.  mov dword [rsp + 8], 2
0x0000323e      e996f9ffff     jmp 0x2bd9
0x00003243      e8e8e0ffff     call sym.imp.__stack_chk_fail
0x00003248      c644240d00     mov byte [rsp + 0xd], 0
0x0000324d      e96ffaffff     jmp 0x2cc1
0x00003252      4c89dd         mov rbp, r11
0x00003255      e996f9ffff     jmp 0x2bf0
0x0000325a      c644240e01     mov byte [rsp + 0xe], 1
0x0000325f      31c0           xor eax, eax
0x00003261      4531e4         xor r12d, r12d
0x00003264      48c744245000.  mov qword [rsp + 0x50], 0
0x0000326d      e9a2f5ffff     jmp 0x2814
0x00003272      4c89ea         mov rdx, r13
0x00003275      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000327a      e9f3f5ffff     jmp 0x2872
0x0000327f      e8fcdfffff     call sym.imp.abort
0x00003284      6690           nop
0x00003286      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00003290      4157           push r15
0x00003292      4156           push r14
0x00003294      4c63ff         movsxd r15, edi
0x00003297      4155           push r13
0x00003299      4154           push r12
0x0000329b      4989d6         mov r14, rdx
0x0000329e      55             push rbp
0x0000329f      53             push rbx
0x000032a0      4889cd         mov rbp, rcx
0x000032a3      4883ec28       sub rsp, 0x28
0x000032a7      4889742408     mov qword [rsp + 8], rsi
0x000032ac      e8dfdfffff     call sym.imp.__errno_location
0x000032b1      4989c5         mov r13, rax
0x000032b4      8b00           mov eax, dword [rax]
0x000032b6      4585ff         test r15d, r15d
0x000032b9      488b1da03d20.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x207060:8]=0x207070 obj.slotvec0 ; "pp "
0x000032c0      89442418       mov dword [rsp + 0x18], eax
0x000032c4      0f8867010000   js 0x3431
0x000032ca      44393d873d20.  cmp dword [obj.nslots], r15d            ; [0x207058:4]=1
0x000032d1      7f62           jg 0x3335
0x000032d3      4181ffffffff.  cmp r15d, 0x7fffffff
0x000032da      0f8456010000   je 0x3436
0x000032e0      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x000032e4      488d05853d20.  lea rax, obj.slotvec0                   ; 0x207070
0x000032eb      4963f4         movsxd rsi, r12d
0x000032ee      48c1e604       shl rsi, 4
0x000032f2      4839c3         cmp rbx, rax
0x000032f5      0f8415010000   je 0x3410
0x000032fb      4889df         mov rdi, rbx
0x000032fe      e86d0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00003303      4889c3         mov rbx, rax
0x00003306      488905533d20.  mov qword [obj.slotvec], rax            ; [0x207060:8]=0x207070 obj.slotvec0 ; "pp "
0x0000330d      48633d443d20.  movsxd rdi, dword [obj.nslots]          ; [0x207058:4]=1
0x00003314      4489e2         mov edx, r12d
0x00003317      31f6           xor esi, esi
0x00003319      29fa           sub edx, edi
0x0000331b      48c1e704       shl rdi, 4
0x0000331f      4863d2         movsxd rdx, edx
0x00003322      4801df         add rdi, rbx
0x00003325      48c1e204       shl rdx, 4
0x00003329      e862e0ffff     call sym.imp.memset
0x0000332e      448925233d20.  mov dword [obj.nslots], r12d            ; [0x207058:4]=1
0x00003335      8b4504         mov eax, dword [rbp + 4]
0x00003338      49c1e704       shl r15, 4
0x0000333c      4883ec08       sub rsp, 8
0x00003340      4c01fb         add rbx, r15
0x00003343      4c8d7d08       lea r15, [rbp + 8]
0x00003347      448b4500       mov r8d, dword [rbp]
0x0000334b      4c8b1b         mov r11, qword [rbx]
0x0000334e      4c8b6308       mov r12, qword [rbx + 8]
0x00003352      4c89f1         mov rcx, r14
0x00003355      83c801         or eax, 1
0x00003358      89442424       mov dword [rsp + 0x24], eax
0x0000335c      ff7530         push qword [rbp + 0x30]
0x0000335f      4189c1         mov r9d, eax
0x00003362      ff7528         push qword [rbp + 0x28]
0x00003365      4157           push r15
0x00003367      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x0000336a      488b542428     mov rdx, qword [rsp + 0x28]
0x0000336f      4c89e7         mov rdi, r12
0x00003372      4c895c2430     mov qword [rsp + 0x30], r11
0x00003377      e8d4ecffff     call sym.quotearg_buffer_restyled
0x0000337c      4883c420       add rsp, 0x20
0x00003380      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00003385      4939c3         cmp r11, rax
0x00003388      7767           ja 0x33f1
0x0000338a      488d7001       lea rsi, [rax + 1]
0x0000338e      488d056b3d20.  lea rax, obj.slot0                      ; 0x207100
0x00003395      4939c4         cmp r12, rax
0x00003398      488933         mov qword [rbx], rsi
0x0000339b      7412           je 0x33af
0x0000339d      4c89e7         mov rdi, r12
0x000033a0      4889742410     mov qword [rsp + 0x10], rsi
0x000033a5      e8c6deffff     call sym.imp.free
0x000033aa      488b742410     mov rsi, qword [rsp + 0x10]
0x000033af      4889f7         mov rdi, rsi
0x000033b2      4889742410     mov qword [rsp + 0x10], rsi
0x000033b7      e8540e0000     call sym.xmalloc
0x000033bc      4883ec08       sub rsp, 8
0x000033c0      48894308       mov qword [rbx + 8], rax
0x000033c4      448b4500       mov r8d, dword [rbp]
0x000033c8      ff7530         push qword [rbp + 0x30]
0x000033cb      ff7528         push qword [rbp + 0x28]
0x000033ce      4c89f1         mov rcx, r14
0x000033d1      4157           push r15
0x000033d3      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x000033d8      4889c7         mov rdi, rax
0x000033db      488b542428     mov rdx, qword [rsp + 0x28]
0x000033e0      488b742430     mov rsi, qword [rsp + 0x30]
0x000033e5      4989c4         mov r12, rax
0x000033e8      e863ecffff     call sym.quotearg_buffer_restyled
0x000033ed      4883c420       add rsp, 0x20
0x000033f1      8b442418       mov eax, dword [rsp + 0x18]
0x000033f5      41894500       mov dword [r13], eax
0x000033f9      4883c428       add rsp, 0x28
0x000033fd      4c89e0         mov rax, r12
0x00003400      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00003401      5d             pop rbp
0x00003402      415c           pop r12
0x00003404      415d           pop r13
0x00003406      415e           pop r14
0x00003408      415f           pop r15
0x0000340a      c3             ret
0x0000340b      0f1f440000     nop dword [rax + rax]
0x00003410      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00003412      e8590e0000     call sym.xrealloc
0x00003417      660f6f05513c.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x0000341f      4889c3         mov rbx, rax
0x00003422      488905373c20.  mov qword [obj.slotvec], rax            ; [0x207060:8]=0x207070 obj.slotvec0 ; "pp "
0x00003429      0f1100         movups xmmword [rax], xmm0
0x0000342c      e9dcfeffff     jmp 0x330d
0x00003431      e84adeffff     call sym.imp.abort
0x00003436      e825100000     call sym.xalloc_die
0x0000343b      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00003440      4154           push r12
0x00003442      55             push rbp
0x00003443      53             push rbx
0x00003444      4889fb         mov rbx, rdi
0x00003447      e844deffff     call sym.imp.__errno_location
0x0000344c      448b20         mov r12d, dword [rax]
0x0000344f      4889c5         mov rbp, rax
0x00003452      488d05a73d20.  lea rax, obj.default_quoting_options    ; 0x207200
0x00003459      4885db         test rbx, rbx
0x0000345c      be38000000     mov esi, 0x38                           ; '8'
0x00003461      480f44d8       cmove rbx, rax
0x00003465      4889df         mov rdi, rbx
0x00003468      e8a30f0000     call sym.xmemdup
0x0000346d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00003471      5b             pop rbx
0x00003472      5d             pop rbp
0x00003473      415c           pop r12
0x00003475      c3             ret
0x00003476      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00003480      488d05793d20.  lea rax, obj.default_quoting_options    ; 0x207200
0x00003487      4885ff         test rdi, rdi
0x0000348a      480f44f8       cmove rdi, rax
0x0000348e      8b07           mov eax, dword [rdi]
0x00003490      c3             ret
0x00003491      0f1f440000     nop dword [rax + rax]
0x00003496      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x000034a0      488d05593d20.  lea rax, obj.default_quoting_options    ; 0x207200
0x000034a7      4885ff         test rdi, rdi
0x000034aa      480f44f8       cmove rdi, rax
0x000034ae      8937           mov dword [rdi], esi
0x000034b0      c3             ret
0x000034b1      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x000034b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x000034c0      488d05393d20.  lea rax, obj.default_quoting_options    ; 0x207200
0x000034c7      4885ff         test rdi, rdi
0x000034ca      89f1           mov ecx, esi
0x000034cc      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x000034d0      89f0           mov eax, esi
0x000034d2      83e11f         and ecx, 0x1f
0x000034d5      c0e805         shr al, 5
0x000034d8      0fb6c0         movzx eax, al
0x000034db      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x000034e0      8b37           mov esi, dword [rdi]
0x000034e2      89f0           mov eax, esi
0x000034e4      d3e8           shr eax, cl
0x000034e6      31c2           xor edx, eax
0x000034e8      83e001         and eax, 1
0x000034eb      83e201         and edx, 1
0x000034ee      d3e2           shl edx, cl
0x000034f0      31f2           xor edx, esi
0x000034f2      8917           mov dword [rdi], edx
0x000034f4      c3             ret
0x000034f5      90             nop
0x000034f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00003500      488d05f93c20.  lea rax, obj.default_quoting_options    ; 0x207200
0x00003507      4885ff         test rdi, rdi
0x0000350a      480f44f8       cmove rdi, rax
0x0000350e      8b4704         mov eax, dword [rdi + 4]
0x00003511      897704         mov dword [rdi + 4], esi
0x00003514      c3             ret
0x00003515      90             nop
0x00003516      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00003520      488d05d93c20.  lea rax, obj.default_quoting_options    ; 0x207200
0x00003527      4885ff         test rdi, rdi
0x0000352a      480f44f8       cmove rdi, rax
0x0000352e      4885f6         test rsi, rsi
0x00003531      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00003537      740e           je 0x3547
0x00003539      4885d2         test rdx, rdx
0x0000353c      7409           je 0x3547
0x0000353e      48897728       mov qword [rdi + 0x28], rsi
0x00003542      48895730       mov qword [rdi + 0x30], rdx
0x00003546      c3             ret
0x00003547      4883ec08       sub rsp, 8
0x0000354b      e830ddffff     call sym.imp.abort
;-- quotearg_buffer:
0x00003550      4157           push r15
0x00003552      4156           push r14
0x00003554      488d05a53c20.  lea rax, obj.default_quoting_options    ; 0x207200
0x0000355b      4155           push r13
0x0000355d      4154           push r12
0x0000355f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00003562      55             push rbp
0x00003563      53             push rbx
0x00003564      4c89c3         mov rbx, r8
0x00003567      4989f6         mov r14, rsi
0x0000356a      4989d7         mov r15, rdx
0x0000356d      4883ec18       sub rsp, 0x18
0x00003571      4d85c0         test r8, r8
0x00003574      480f44d8       cmove rbx, rax
0x00003578      48894c2408     mov qword [rsp + 8], rcx
0x0000357d      e80eddffff     call sym.imp.__errno_location
0x00003582      448b20         mov r12d, dword [rax]
0x00003585      4889c5         mov rbp, rax
0x00003588      488d4308       lea rax, [rbx + 8]
0x0000358c      4883ec08       sub rsp, 8
0x00003590      448b4b04       mov r9d, dword [rbx + 4]
0x00003594      ff7330         push qword [rbx + 0x30]
0x00003597      448b03         mov r8d, dword [rbx]
0x0000359a      ff7328         push qword [rbx + 0x28]
0x0000359d      4c89fa         mov rdx, r15
0x000035a0      50             push rax
0x000035a1      488b4c2428     mov rcx, qword [rsp + 0x28]
0x000035a6      4c89f6         mov rsi, r14
0x000035a9      4c89ef         mov rdi, r13
0x000035ac      e89feaffff     call sym.quotearg_buffer_restyled
0x000035b1      44896500       mov dword [rbp], r12d
0x000035b5      4883c438       add rsp, 0x38
0x000035b9      5b             pop rbx
0x000035ba      5d             pop rbp
0x000035bb      415c           pop r12
0x000035bd      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x000035bf      415e           pop r14
0x000035c1      415f           pop r15
0x000035c3      c3             ret
0x000035c4      6690           nop
0x000035c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x000035d0      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x000035d2      4156           push r14
0x000035d4      488d05253c20.  lea rax, obj.default_quoting_options    ; 0x207200
0x000035db      4155           push r13
0x000035dd      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x000035df      4989d4         mov r12, rdx
0x000035e2      55             push rbp
0x000035e3      53             push rbx
0x000035e4      4889cb         mov rbx, rcx
0x000035e7      4989fe         mov r14, rdi
0x000035ea      4989f7         mov r15, rsi
0x000035ed      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x000035f1      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x000035f4      480f44d8       cmove rbx, rax
0x000035f8      31ed           xor ebp, ebp
0x000035fa      e891dcffff     call sym.imp.__errno_location
0x000035ff      4d85e4         test r12, r12
0x00003602      4989c5         mov r13, rax
0x00003605      8b00           mov eax, dword [rax]
0x00003607      400f94c5       sete bpl
0x0000360b      0b6b04         or ebp, dword [rbx + 4]
0x0000360e      4c8d5308       lea r10, [rbx + 8]
0x00003612      4883ec08       sub rsp, 8
0x00003616      448b03         mov r8d, dword [rbx]
0x00003619      4c89f9         mov rcx, r15
0x0000361c      89442414       mov dword [rsp + 0x14], eax
0x00003620      ff7330         push qword [rbx + 0x30]
0x00003623      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00003626      ff7328         push qword [rbx + 0x28]
0x00003629      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x0000362b      31f6           xor esi, esi
0x0000362d      4189e9         mov r9d, ebp
0x00003630      31ff           xor edi, edi
0x00003632      4c89542440     mov qword [rsp + 0x40], r10
0x00003637      e814eaffff     call sym.quotearg_buffer_restyled
0x0000363c      488d7001       lea rsi, [rax + 1]
0x00003640      4889442448     mov qword [rsp + 0x48], rax
0x00003645      4883c420       add rsp, 0x20
0x00003649      4889f7         mov rdi, rsi
0x0000364c      4889742418     mov qword [rsp + 0x18], rsi
0x00003651      e8ba0b0000     call sym.xmalloc
0x00003656      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x0000365b      4883ec08       sub rsp, 8
0x0000365f      ff7330         push qword [rbx + 0x30]
0x00003662      ff7328         push qword [rbx + 0x28]
0x00003665      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000366a      4189e9         mov r9d, ebp
0x0000366d      448b03         mov r8d, dword [rbx]
0x00003670      4c89f9         mov rcx, r15
0x00003673      4c89f2         mov rdx, r14
0x00003676      4889c7         mov rdi, rax
0x00003679      4152           push r10
0x0000367b      488b742438     mov rsi, qword [rsp + 0x38]
0x00003680      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00003685      8b44242c       mov eax, dword [rsp + 0x2c]
0x00003689      4883c420       add rsp, 0x20
0x0000368d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00003690      41894500       mov dword [r13], eax
0x00003694      7409           je 0x369f
0x00003696      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000369b      4d891c24       mov qword [r12], r11
0x0000369f      488b442410     mov rax, qword [rsp + 0x10]
0x000036a4      4883c438       add rsp, 0x38
0x000036a8      5b             pop rbx
0x000036a9      5d             pop rbp
0x000036aa      415c           pop r12
0x000036ac      415d           pop r13
0x000036ae      415e           pop r14
0x000036b0      415f           pop r15
0x000036b2      c3             ret
0x000036b3      0f1f00         nop dword [rax]
0x000036b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x000036c0      4889d1         mov rcx, rdx
0x000036c3      31d2           xor edx, edx
0x000036c5      e906ffffff     jmp sym.quotearg_alloc_mem
0x000036ca      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x000036d0      8b0582392000   mov eax, dword [obj.nslots]             ; [0x207058:4]=1
0x000036d6      4154           push r12
0x000036d8      4c8b25813920.  mov r12, qword [obj.slotvec]            ; [0x207060:8]=0x207070 obj.slotvec0 ; "pp "
0x000036df      55             push rbp
0x000036e0      53             push rbx
0x000036e1      83f801         cmp eax, 1
0x000036e4      7e2b           jle 0x3711                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x000036e6      83e802         sub eax, 2
0x000036e9      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x000036ee      48c1e004       shl rax, 4
0x000036f2      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x000036f7      660f1f840000.  nop word [rax + rax]
0x00003700      488b3b         mov rdi, qword [rbx]
0x00003703      4883c310       add rbx, 0x10
0x00003707      e864dbffff     call sym.imp.free
0x0000370c      4839eb         cmp rbx, rbp
0x0000370f      75ef           jne 0x3700
0x00003711      498b7c2408     mov rdi, qword [r12 + 8]
0x00003716      488d1de33920.  lea rbx, obj.slot0                      ; 0x207100
0x0000371d      4839df         cmp rdi, rbx
0x00003720      7417           je 0x3739
0x00003722      e849dbffff     call sym.imp.free
0x00003727      48c7053e3920.  mov qword [obj.slotvec0], 0x100         ; [0x207070:8]=256
0x00003732      48891d3f3920.  mov qword [0x00207078], rbx             ; [0x207078:8]=0x207100 obj.slot0
0x00003739      488d1d303920.  lea rbx, obj.slotvec0                   ; 0x207070
0x00003740      4939dc         cmp r12, rbx
0x00003743      740f           je 0x3754
0x00003745      4c89e7         mov rdi, r12
0x00003748      e823dbffff     call sym.imp.free
0x0000374d      48891d0c3920.  mov qword [obj.slotvec], rbx            ; [0x207060:8]=0x207070 obj.slotvec0 ; "pp "
0x00003754      5b             pop rbx
0x00003755      c705f9382000.  mov dword [obj.nslots], 1               ; [0x207058:4]=1
0x0000375f      5d             pop rbp
0x00003760      415c           pop r12
0x00003762      c3             ret
0x00003763      0f1f00         nop dword [rax]
0x00003766      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00003770      488d0d893a20.  lea rcx, obj.default_quoting_options    ; 0x207200
0x00003777      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000377e      e90dfbffff     jmp sym.quotearg_n_options
0x00003783      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00003786      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00003790      488d0d693a20.  lea rcx, obj.default_quoting_options    ; 0x207200
0x00003797      e9f4faffff     jmp sym.quotearg_n_options
0x0000379c      0f1f4000       nop dword [rax]
;-- quotearg:
0x000037a0      488d0d593a20.  lea rcx, obj.default_quoting_options    ; 0x207200
0x000037a7      4889fe         mov rsi, rdi
0x000037aa      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000037b1      31ff           xor edi, edi
0x000037b3      e9d8faffff     jmp sym.quotearg_n_options
0x000037b8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x000037c0      488d0d393a20.  lea rcx, obj.default_quoting_options    ; 0x207200
0x000037c7      4889f2         mov rdx, rsi
0x000037ca      4889fe         mov rsi, rdi
0x000037cd      31ff           xor edi, edi
0x000037cf      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x000037d4      6690           nop
0x000037d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x000037e0      4883ec48       sub rsp, 0x48
0x000037e4      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x000037e7      64488b142528.  mov rdx, qword fs:[0x28]
0x000037f0      4889542438     mov qword [rsp + 0x38], rdx
0x000037f5      31d2           xor edx, edx
0x000037f7      83fe0a         cmp esi, 0xa
0x000037fa      7468           je 0x3864
0x000037fc      893424         mov dword [rsp], esi
0x000037ff      4889e1         mov rcx, rsp
0x00003802      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00003809      4889c6         mov rsi, rax
0x0000380c      48c744240400.  mov qword [rsp + 4], 0
0x00003815      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000381e      48c744241400.  mov qword [rsp + 0x14], 0
0x00003827      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00003830      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00003839      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00003842      c74424340000.  mov dword [rsp + 0x34], 0
0x0000384a      e841faffff     call sym.quotearg_n_options
0x0000384f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00003854      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000385d      750a           jne 0x3869                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x0000385f      4883c448       add rsp, 0x48
0x00003863      c3             ret
0x00003864      e817daffff     call sym.imp.abort
0x00003869      e8c2daffff     call sym.imp.__stack_chk_fail
0x0000386e      6690           nop
;-- quotearg_n_style_mem:
0x00003870      4883ec48       sub rsp, 0x48
0x00003874      4889d0         mov rax, rdx
0x00003877      4889ca         mov rdx, rcx
0x0000387a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00003883      48894c2438     mov qword [rsp + 0x38], rcx
0x00003888      31c9           xor ecx, ecx
0x0000388a      83fe0a         cmp esi, 0xa
0x0000388d      7461           je 0x38f0
0x0000388f      893424         mov dword [rsp], esi
0x00003892      4889e1         mov rcx, rsp
0x00003895      4889c6         mov rsi, rax
0x00003898      48c744240400.  mov qword [rsp + 4], 0
0x000038a1      48c744240c00.  mov qword [rsp + 0xc], 0
0x000038aa      48c744241400.  mov qword [rsp + 0x14], 0
0x000038b3      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000038bc      48c744242400.  mov qword [rsp + 0x24], 0
0x000038c5      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000038ce      c74424340000.  mov dword [rsp + 0x34], 0
0x000038d6      e8b5f9ffff     call sym.quotearg_n_options
0x000038db      488b542438     mov rdx, qword [rsp + 0x38]
0x000038e0      644833142528.  xor rdx, qword fs:[0x28]
0x000038e9      750a           jne 0x38f5
0x000038eb      4883c448       add rsp, 0x48
0x000038ef      c3             ret
0x000038f0      e88bd9ffff     call sym.imp.abort
0x000038f5      e836daffff     call sym.imp.__stack_chk_fail
0x000038fa      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00003900      4889f2         mov rdx, rsi
0x00003903      89fe           mov esi, edi
0x00003905      31ff           xor edi, edi
0x00003907      e9d4feffff     jmp sym.quotearg_n_style
0x0000390c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00003910      4889d1         mov rcx, rdx
0x00003913      4889f2         mov rdx, rsi
0x00003916      89fe           mov esi, edi
0x00003918      31ff           xor edi, edi
0x0000391a      e951ffffff     jmp sym.quotearg_n_style_mem
0x0000391f      90             nop
;-- quotearg_char_mem:
0x00003920      4883ec48       sub rsp, 0x48
0x00003924      89d1           mov ecx, edx
0x00003926      64488b042528.  mov rax, qword fs:[0x28]
0x0000392f      4889442438     mov qword [rsp + 0x38], rax
0x00003934      31c0           xor eax, eax
0x00003936      488b05f33820.  mov rax, qword [0x00207230]             ; [0x207230:8]=0
0x0000393d      4989e0         mov r8, rsp
0x00003940      83e11f         and ecx, 0x1f
0x00003943      660f6f05b538.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x0000394b      4889442430     mov qword [rsp + 0x30], rax
0x00003950      89d0           mov eax, edx
0x00003952      0f290424       movaps xmmword [rsp], xmm0
0x00003956      c0e805         shr al, 5
0x00003959      0fb6c0         movzx eax, al
0x0000395c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00003961      660f6f05a738.  movdqa xmm0, xmmword [0x00207210]
0x00003969      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000396e      660f6f05aa38.  movdqa xmm0, xmmword [0x00207220]
0x00003976      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000397b      418b11         mov edx, dword [r9]
0x0000397e      89d0           mov eax, edx
0x00003980      d3e8           shr eax, cl
0x00003982      f7d0           not eax
0x00003984      83e001         and eax, 1
0x00003987      d3e0           shl eax, cl
0x00003989      4c89c1         mov rcx, r8
0x0000398c      31d0           xor eax, edx
0x0000398e      4889f2         mov rdx, rsi
0x00003991      4889fe         mov rsi, rdi
0x00003994      418901         mov dword [r9], eax
0x00003997      31ff           xor edi, edi
0x00003999      e8f2f8ffff     call sym.quotearg_n_options
0x0000399e      488b742438     mov rsi, qword [rsp + 0x38]
0x000039a3      644833342528.  xor rsi, qword fs:[0x28]
0x000039ac      7505           jne 0x39b3
0x000039ae      4883c448       add rsp, 0x48
0x000039b2      c3             ret
0x000039b3      e878d9ffff     call sym.imp.__stack_chk_fail
0x000039b8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x000039c0      400fbed6       movsx edx, sil
0x000039c4      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x000039cb      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x000039d0      ba3a000000     mov edx, 0x3a                           ; ':'
0x000039d5      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x000039dc      e93fffffff     jmp sym.quotearg_char_mem
0x000039e1      0f1f440000     nop dword [rax + rax]
0x000039e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x000039f0      ba3a000000     mov edx, 0x3a                           ; ':'
0x000039f5      e926ffffff     jmp sym.quotearg_char_mem
0x000039fa      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00003a00      4883ec48       sub rsp, 0x48
0x00003a04      4889d0         mov rax, rdx
0x00003a07      64488b142528.  mov rdx, qword fs:[0x28]
0x00003a10      4889542438     mov qword [rsp + 0x38], rdx
0x00003a15      31d2           xor edx, edx
0x00003a17      83fe0a         cmp esi, 0xa
0x00003a1a      7468           je 0x3a84
0x00003a1c      893424         mov dword [rsp], esi
0x00003a1f      4889e1         mov rcx, rsp
0x00003a22      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00003a29      4889c6         mov rsi, rax
0x00003a2c      48c744240400.  mov qword [rsp + 4], 0
0x00003a35      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x00003a3e      48c744241400.  mov qword [rsp + 0x14], 0
0x00003a47      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00003a50      48c744242400.  mov qword [rsp + 0x24], 0
0x00003a59      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00003a62      c74424340000.  mov dword [rsp + 0x34], 0
0x00003a6a      e821f8ffff     call sym.quotearg_n_options
0x00003a6f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00003a74      6448330c2528.  xor rcx, qword fs:[0x28]
0x00003a7d      750a           jne 0x3a89
0x00003a7f      4883c448       add rsp, 0x48
0x00003a83      c3             ret
0x00003a84      e8f7d7ffff     call sym.imp.abort
0x00003a89      e8a2d8ffff     call sym.imp.__stack_chk_fail
0x00003a8e      6690           nop
;-- quotearg_n_custom_mem:
0x00003a90      4883ec48       sub rsp, 0x48
0x00003a94      4989c9         mov r9, rcx
0x00003a97      488b0d923720.  mov rcx, qword [0x00207230]             ; [0x207230:8]=0
0x00003a9e      660f6f055a37.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00003aa6      64488b042528.  mov rax, qword fs:[0x28]
0x00003aaf      4889442438     mov qword [rsp + 0x38], rax
0x00003ab4      31c0           xor eax, eax
0x00003ab6      0f290424       movaps xmmword [rsp], xmm0
0x00003aba      4885f6         test rsi, rsi
0x00003abd      48894c2430     mov qword [rsp + 0x30], rcx
0x00003ac2      c704240a0000.  mov dword [rsp], 0xa
0x00003ac9      660f6f053f37.  movdqa xmm0, xmmword [0x00207210]
0x00003ad1      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00003ad6      660f6f054237.  movdqa xmm0, xmmword [0x00207220]
0x00003ade      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00003ae3      7432           je 0x3b17
0x00003ae5      4885d2         test rdx, rdx
0x00003ae8      742d           je 0x3b17
0x00003aea      4889742428     mov qword [rsp + 0x28], rsi
0x00003aef      4889542430     mov qword [rsp + 0x30], rdx
0x00003af4      4889e1         mov rcx, rsp
0x00003af7      4c89c2         mov rdx, r8
0x00003afa      4c89ce         mov rsi, r9
0x00003afd      e88ef7ffff     call sym.quotearg_n_options
0x00003b02      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00003b07      6448333c2528.  xor rdi, qword fs:[0x28]
0x00003b10      750a           jne 0x3b1c
0x00003b12      4883c448       add rsp, 0x48
0x00003b16      c3             ret
0x00003b17      e864d7ffff     call sym.imp.abort
0x00003b1c      e80fd8ffff     call sym.imp.__stack_chk_fail
0x00003b21      0f1f440000     nop dword [rax + rax]
0x00003b26      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00003b30      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00003b37      e954ffffff     jmp sym.quotearg_n_custom_mem
0x00003b3c      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00003b40      4889d1         mov rcx, rdx
0x00003b43      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00003b4a      4889f2         mov rdx, rsi
0x00003b4d      4889fe         mov rsi, rdi
0x00003b50      31ff           xor edi, edi
0x00003b52      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00003b57      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00003b60      4989c8         mov r8, rcx
0x00003b63      4889d1         mov rcx, rdx
0x00003b66      4889f2         mov rdx, rsi
0x00003b69      4889fe         mov rsi, rdi
0x00003b6c      31ff           xor edi, edi
0x00003b6e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00003b73      0f1f00         nop dword [rax]
0x00003b76      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00003b80      488d0d993420.  lea rcx, obj.quote_quoting_options      ; 0x207020
0x00003b87      e904f7ffff     jmp sym.quotearg_n_options
0x00003b8c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00003b90      488d0d893420.  lea rcx, obj.quote_quoting_options      ; 0x207020
0x00003b97      4889f2         mov rdx, rsi
0x00003b9a      4889fe         mov rsi, rdi
0x00003b9d      31ff           xor edi, edi
0x00003b9f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00003ba4      6690           nop
0x00003ba6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00003bb0      488d0d693420.  lea rcx, obj.quote_quoting_options      ; 0x207020
0x00003bb7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00003bbe      e9cdf6ffff     jmp sym.quotearg_n_options
0x00003bc3      0f1f00         nop dword [rax]
0x00003bc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00003bd0      488d0d493420.  lea rcx, obj.quote_quoting_options      ; 0x207020
0x00003bd7      4889fe         mov rsi, rdi
0x00003bda      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00003be1      31ff           xor edi, edi
0x00003be3      e9a8f6ffff     jmp sym.quotearg_n_options
0x00003be8      0f1f84000000.  nop dword [rax + rax]
;-- version_etc_arn:
0x00003bf0      4157           push r15
0x00003bf2      4156           push r14
0x00003bf4      4155           push r13
0x00003bf6      4154           push r12
0x00003bf8      4d89cc         mov r12, r9
0x00003bfb      55             push rbp
0x00003bfc      53             push rbx
0x00003bfd      4889fd         mov rbp, rdi
0x00003c00      4c89c3         mov rbx, r8
0x00003c03      4883ec28       sub rsp, 0x28
0x00003c07      4885f6         test rsi, rsi
0x00003c0a      0f8418010000   je 0x3d28
0x00003c10      4989d0         mov r8, rdx
0x00003c13      488d152e1600.  lea rdx, [0x00005248]                   ; "%s (%s) %s\n"
0x00003c1a      4989c9         mov r9, rcx
0x00003c1d      31c0           xor eax, eax
0x00003c1f      4889f1         mov rcx, rsi
0x00003c22      be01000000     mov esi, 1
0x00003c27      e894d8ffff     call sym.imp.__fprintf_chk
0x00003c2c      488d35281600.  lea rsi, [0x0000525b]                   ; "(C)"
0x00003c33      31ff           xor edi, edi
0x00003c35      ba05000000     mov edx, 5
0x00003c3a      e8c1d6ffff     call sym.imp.dcgettext
0x00003c3f      488d153a1900.  lea rdx, obj.version_etc_copyright      ; 0x5580 ; "Copyright %s %d Free Software Foundation, Inc."
0x00003c46      4889c1         mov rcx, rax
0x00003c49      41b8e3070000   mov r8d, 0x7e3
0x00003c4f      be01000000     mov esi, 1
0x00003c54      4889ef         mov rdi, rbp
0x00003c57      31c0           xor eax, eax
0x00003c59      e862d8ffff     call sym.imp.__fprintf_chk
0x00003c5e      488d35831600.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x52e8 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00003c65      31ff           xor edi, edi
0x00003c67      ba05000000     mov edx, 5
0x00003c6c      e88fd6ffff     call sym.imp.dcgettext
0x00003c71      4889ee         mov rsi, rbp
0x00003c74      4889c7         mov rdi, rax
0x00003c77      e844d7ffff     call sym.imp.fputs_unlocked
0x00003c7c      4983fc09       cmp r12, 9
0x00003c80      0f873a030000   ja 0x3fc0
0x00003c86      488d15bb1800.  lea rdx, [0x00005548]
0x00003c8d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00003c91      4801d0         add rax, rdx
0x00003c94      ffe0           jmp rax
0x00003c96      662e0f1f8400.  nop word cs:[rax + rax]
0x00003ca0      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00003ca4      488b4310       mov rax, qword [rbx + 0x10]
0x00003ca8      488d35a91700.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x5458 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x00003caf      4c8b4308       mov r8, qword [rbx + 8]
0x00003cb3      ba05000000     mov edx, 5
0x00003cb8      31ff           xor edi, edi
0x00003cba      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00003cbe      4c8b6328       mov r12, qword [rbx + 0x28]
0x00003cc2      4c894c2410     mov qword [rsp + 0x10], r9
0x00003cc7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00003ccb      4c8b7318       mov r14, qword [rbx + 0x18]
0x00003ccf      48890424       mov qword [rsp], rax
0x00003cd3      4c89442408     mov qword [rsp + 8], r8
0x00003cd8      488b1b         mov rbx, qword [rbx]
0x00003cdb      e820d6ffff     call sym.imp.dcgettext
0x00003ce0      4883ec08       sub rsp, 8
0x00003ce4      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00003ce9      4889c2         mov rdx, rax
0x00003cec      4889d9         mov rcx, rbx
0x00003cef      be01000000     mov esi, 1
0x00003cf4      4889ef         mov rdi, rbp
0x00003cf7      31c0           xor eax, eax
0x00003cf9      4151           push r9
0x00003cfb      4155           push r13
0x00003cfd      4154           push r12
0x00003cff      4157           push r15
0x00003d01      4156           push r14
0x00003d03      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003d08      4c8b442438     mov r8, qword [rsp + 0x38]
0x00003d0d      e8aed7ffff     call sym.imp.__fprintf_chk
0x00003d12      4883c430       add rsp, 0x30
0x00003d16      4883c428       add rsp, 0x28
0x00003d1a      5b             pop rbx
0x00003d1b      5d             pop rbp
0x00003d1c      415c           pop r12
0x00003d1e      415d           pop r13
0x00003d20      415e           pop r14
0x00003d22      415f           pop r15
0x00003d24      c3             ret
0x00003d25      0f1f00         nop dword [rax]
0x00003d28      4989c8         mov r8, rcx
0x00003d2b      4889d1         mov rcx, rdx
0x00003d2e      488d151f1500.  lea rdx, str.s__s                       ; 0x5254 ; "%s %s\n"
0x00003d35      be01000000     mov esi, 1
0x00003d3a      31c0           xor eax, eax
0x00003d3c      e87fd7ffff     call sym.imp.__fprintf_chk
0x00003d41      e9e6feffff     jmp 0x3c2c
0x00003d46      662e0f1f8400.  nop word cs:[rax + rax]
0x00003d50      4c8b5340       mov r10, qword [rbx + 0x40]
0x00003d54      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00003d58      488d35291700.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x5488 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x00003d5f      488b4310       mov rax, qword [rbx + 0x10]
0x00003d63      4c8b4308       mov r8, qword [rbx + 8]
0x00003d67      ba05000000     mov edx, 5
0x00003d6c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00003d70      4c8b6328       mov r12, qword [rbx + 0x28]
0x00003d74      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00003d78      4c8b7318       mov r14, qword [rbx + 0x18]
0x00003d7c      488b1b         mov rbx, qword [rbx]
0x00003d7f      4c89542418     mov qword [rsp + 0x18], r10
0x00003d84      4c894c2410     mov qword [rsp + 0x10], r9
0x00003d89      48890424       mov qword [rsp], rax
0x00003d8d      4c89442408     mov qword [rsp + 8], r8
0x00003d92      31ff           xor edi, edi
0x00003d94      e867d5ffff     call sym.imp.dcgettext
0x00003d99      4c8b542418     mov r10, qword [rsp + 0x18]
0x00003d9e      4152           push r10
0x00003da0      e93fffffff     jmp 0x3ce4
0x00003da5      0f1f00         nop dword [rax]
0x00003da8      488b1b         mov rbx, qword [rbx]
0x00003dab      488d35ad1400.  lea rsi, str.Written_by__s.             ; 0x525f ; "Written by %s.\n"
0x00003db2      ba05000000     mov edx, 5
0x00003db7      31ff           xor edi, edi
0x00003db9      e842d5ffff     call sym.imp.dcgettext
0x00003dbe      4883c428       add rsp, 0x28
0x00003dc2      4889d9         mov rcx, rbx
0x00003dc5      4889ef         mov rdi, rbp
0x00003dc8      5b             pop rbx
0x00003dc9      5d             pop rbp
0x00003dca      415c           pop r12
0x00003dcc      415d           pop r13
0x00003dce      415e           pop r14
0x00003dd0      415f           pop r15
0x00003dd2      4889c2         mov rdx, rax
0x00003dd5      be01000000     mov esi, 1
0x00003dda      31c0           xor eax, eax
0x00003ddc      e9dfd6ffff     jmp sym.imp.__fprintf_chk
0x00003de1      0f1f80000000.  nop dword [rax]
0x00003de8      4c8b6308       mov r12, qword [rbx + 8]
0x00003dec      488d357c1400.  lea rsi, str.Written_by__s_and__s.      ; 0x526f ; "Written by %s and %s.\n"
0x00003df3      488b1b         mov rbx, qword [rbx]
0x00003df6      ba05000000     mov edx, 5
0x00003dfb      31ff           xor edi, edi
0x00003dfd      e8fed4ffff     call sym.imp.dcgettext
0x00003e02      4883c428       add rsp, 0x28
0x00003e06      4d89e0         mov r8, r12
0x00003e09      4889d9         mov rcx, rbx
0x00003e0c      4889ef         mov rdi, rbp
0x00003e0f      4889c2         mov rdx, rax
0x00003e12      be01000000     mov esi, 1
0x00003e17      5b             pop rbx
0x00003e18      5d             pop rbp
0x00003e19      415c           pop r12
0x00003e1b      415d           pop r13
0x00003e1d      415e           pop r14
0x00003e1f      415f           pop r15
0x00003e21      31c0           xor eax, eax
0x00003e23      e998d6ffff     jmp sym.imp.__fprintf_chk
0x00003e28      0f1f84000000.  nop dword [rax + rax]
0x00003e30      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00003e34      4c8b6308       mov r12, qword [rbx + 8]
0x00003e38      488d35471400.  lea rsi, str.Written_by__s___s__and__s. ; 0x5286 ; "Written by %s, %s, and %s.\n"
0x00003e3f      488b1b         mov rbx, qword [rbx]
0x00003e42      ba05000000     mov edx, 5
0x00003e47      31ff           xor edi, edi
0x00003e49      e8b2d4ffff     call sym.imp.dcgettext
0x00003e4e      4883c428       add rsp, 0x28
0x00003e52      4d89e9         mov r9, r13
0x00003e55      4d89e0         mov r8, r12
0x00003e58      4889d9         mov rcx, rbx
0x00003e5b      4889ef         mov rdi, rbp
0x00003e5e      4889c2         mov rdx, rax
0x00003e61      5b             pop rbx
0x00003e62      5d             pop rbp
0x00003e63      415c           pop r12
0x00003e65      415d           pop r13
0x00003e67      415e           pop r14
0x00003e69      415f           pop r15
0x00003e6b      be01000000     mov esi, 1
0x00003e70      31c0           xor eax, eax
0x00003e72      e949d6ffff     jmp sym.imp.__fprintf_chk
0x00003e77      660f1f840000.  nop word [rax + rax]
0x00003e80      488d35311500.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x53b8 ; "Written by %s, %s, %s,\nand %s.\n"
0x00003e87      ba05000000     mov edx, 5
0x00003e8c      31ff           xor edi, edi
0x00003e8e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00003e92      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00003e96      4c8b6308       mov r12, qword [rbx + 8]
0x00003e9a      488b1b         mov rbx, qword [rbx]
0x00003e9d      e85ed4ffff     call sym.imp.dcgettext
0x00003ea2      4883ec08       sub rsp, 8
0x00003ea6      4156           push r14
0x00003ea8      4889c2         mov rdx, rax
0x00003eab      4d89e9         mov r9, r13
0x00003eae      4d89e0         mov r8, r12
0x00003eb1      4889d9         mov rcx, rbx
0x00003eb4      4889ef         mov rdi, rbp
0x00003eb7      be01000000     mov esi, 1
0x00003ebc      31c0           xor eax, eax
0x00003ebe      e8fdd5ffff     call sym.imp.__fprintf_chk
0x00003ec3      58             pop rax
0x00003ec4      5a             pop rdx
0x00003ec5      4883c428       add rsp, 0x28
0x00003ec9      5b             pop rbx
0x00003eca      5d             pop rbp
0x00003ecb      415c           pop r12
0x00003ecd      415d           pop r13
0x00003ecf      415e           pop r14
0x00003ed1      415f           pop r15
0x00003ed3      c3             ret
0x00003ed4      0f1f4000       nop dword [rax]
0x00003ed8      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00003edc      488d35f51400.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x53d8 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00003ee3      ba05000000     mov edx, 5
0x00003ee8      31ff           xor edi, edi
0x00003eea      4c8b7318       mov r14, qword [rbx + 0x18]
0x00003eee      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00003ef2      4c8b6308       mov r12, qword [rbx + 8]
0x00003ef6      488b1b         mov rbx, qword [rbx]
0x00003ef9      e802d4ffff     call sym.imp.dcgettext
0x00003efe      4157           push r15
0x00003f00      eba4           jmp 0x3ea6
0x00003f02      660f1f440000   nop word [rax + rax]
0x00003f08      4c8b4308       mov r8, qword [rbx + 8]
0x00003f0c      4c8b6328       mov r12, qword [rbx + 0x28]
0x00003f10      488d35e91400.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x5400 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00003f17      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00003f1b      4c8b7318       mov r14, qword [rbx + 0x18]
0x00003f1f      ba05000000     mov edx, 5
0x00003f24      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00003f28      31ff           xor edi, edi
0x00003f2a      488b1b         mov rbx, qword [rbx]
0x00003f2d      4c890424       mov qword [rsp], r8
0x00003f31      e8cad3ffff     call sym.imp.dcgettext
0x00003f36      4883ec08       sub rsp, 8
0x00003f3a      4d89e9         mov r9, r13
0x00003f3d      4154           push r12
0x00003f3f      4157           push r15
0x00003f41      4156           push r14
0x00003f43      4c8b442420     mov r8, qword [rsp + 0x20]
0x00003f48      4889d9         mov rcx, rbx
0x00003f4b      4889c2         mov rdx, rax
0x00003f4e      4889ef         mov rdi, rbp
0x00003f51      be01000000     mov esi, 1
0x00003f56      31c0           xor eax, eax
0x00003f58      e863d5ffff     call sym.imp.__fprintf_chk
0x00003f5d      4883c420       add rsp, 0x20
0x00003f61      4883c428       add rsp, 0x28
0x00003f65      5b             pop rbx
0x00003f66      5d             pop rbp
0x00003f67      415c           pop r12
0x00003f69      415d           pop r13
0x00003f6b      415e           pop r14
0x00003f6d      415f           pop r15
0x00003f6f      c3             ret
0x00003f70      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00003f74      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00003f78      488d35a91400.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x5428 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x00003f7f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00003f83      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00003f87      ba05000000     mov edx, 5
0x00003f8c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00003f90      4c8b4308       mov r8, qword [rbx + 8]
0x00003f94      31ff           xor edi, edi
0x00003f96      4c894c2408     mov qword [rsp + 8], r9
0x00003f9b      488b1b         mov rbx, qword [rbx]
0x00003f9e      4c890424       mov qword [rsp], r8
0x00003fa2      e859d3ffff     call sym.imp.dcgettext
0x00003fa7      4155           push r13
0x00003fa9      4154           push r12
0x00003fab      4157           push r15
0x00003fad      4156           push r14
0x00003faf      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00003fb4      eb8d           jmp 0x3f43
0x00003fb6      662e0f1f8400.  nop word cs:[rax + rax]
0x00003fc0      4c8b5340       mov r10, qword [rbx + 0x40]
0x00003fc4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00003fc8      ba05000000     mov edx, 5
0x00003fcd      488b4310       mov rax, qword [rbx + 0x10]
0x00003fd1      4c8b4308       mov r8, qword [rbx + 8]
0x00003fd5      488d35e41400.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x54c0 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x00003fdc      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00003fe0      4c8b6328       mov r12, qword [rbx + 0x28]
0x00003fe4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00003fe8      4c8b7318       mov r14, qword [rbx + 0x18]
0x00003fec      4c89542418     mov qword [rsp + 0x18], r10
0x00003ff1      4c894c2410     mov qword [rsp + 0x10], r9
0x00003ff6      48890424       mov qword [rsp], rax
0x00003ffa      4c89442408     mov qword [rsp + 8], r8
0x00003fff      488b1b         mov rbx, qword [rbx]
0x00004002      e98bfdffff     jmp 0x3d92
0x00004007      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00004010      4531c9         xor r9d, r9d
0x00004013      49833800       cmp qword [r8], 0
0x00004017      7412           je 0x402b
0x00004019      0f1f80000000.  nop dword [rax]
0x00004020      4983c101       add r9, 1
0x00004024      4b833cc800     cmp qword [r8 + r9*8], 0
0x00004029      75f5           jne 0x4020
0x0000402b      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00004030      4883ec68       sub rsp, 0x68
0x00004034      4d89c2         mov r10, r8
0x00004037      4531c9         xor r9d, r9d
0x0000403a      64488b042528.  mov rax, qword fs:[0x28]
0x00004043      4889442458     mov qword [rsp + 0x58], rax
0x00004048      31c0           xor eax, eax
0x0000404a      4989e0         mov r8, rsp
0x0000404d      0f1f00         nop dword [rax]
0x00004050      418b02         mov eax, dword [r10]
0x00004053      83f82f         cmp eax, 0x2f
0x00004056      7742           ja 0x409a
0x00004058      4189c3         mov r11d, eax
0x0000405b      4d035a10       add r11, qword [r10 + 0x10]
0x0000405f      83c008         add eax, 8
0x00004062      418902         mov dword [r10], eax
0x00004065      498b03         mov rax, qword [r11]
0x00004068      4885c0         test rax, rax
0x0000406b      4b8904c8       mov qword [r8 + r9*8], rax
0x0000406f      740a           je 0x407b
0x00004071      4983c101       add r9, 1
0x00004075      4983f90a       cmp r9, 0xa
0x00004079      75d5           jne 0x4050
0x0000407b      e870fbffff     call sym.version_etc_arn
0x00004080      488b442458     mov rax, qword [rsp + 0x58]
0x00004085      644833042528.  xor rax, qword fs:[0x28]
0x0000408e      7505           jne 0x4095
0x00004090      4883c468       add rsp, 0x68
0x00004094      c3             ret
0x00004095      e896d2ffff     call sym.imp.__stack_chk_fail
0x0000409a      4d8b5a08       mov r11, qword [r10 + 8]
0x0000409e      498d4308       lea rax, [r11 + 8]
0x000040a2      49894208       mov qword [r10 + 8], rax
0x000040a6      ebbd           jmp 0x4065
0x000040a8      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x000040b0      55             push rbp
0x000040b1      53             push rbx
0x000040b2      41ba20000000   mov r10d, 0x20                          ; "@"
0x000040b8      4531db         xor r11d, r11d
0x000040bb      4881ecb80000.  sub rsp, 0xb8
0x000040c2      64488b042528.  mov rax, qword fs:[0x28]
0x000040cb      4889442478     mov qword [rsp + 0x78], rax
0x000040d0      31c0           xor eax, eax
0x000040d2      488d8424d000.  lea rax, [rsp + 0xd0]
0x000040da      4c898424a000.  mov qword [rsp + 0xa0], r8
0x000040e2      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x000040ea      4c8d442420     lea r8, [rsp + 0x20]
0x000040ef      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x000040f7      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x000040ff      4889442410     mov qword [rsp + 0x10], rax
0x00004104      488d84248000.  lea rax, [rsp + 0x80]
0x0000410c      4531c9         xor r9d, r9d
0x0000410f      4889442418     mov qword [rsp + 0x18], rax
0x00004114      4889c5         mov rbp, rax
0x00004117      660f1f840000.  nop word [rax + rax]
0x00004120      4183fa2f       cmp r10d, 0x2f
0x00004124      7756           ja 0x417c
0x00004126      4489d0         mov eax, r10d
0x00004129      41bb01000000   mov r11d, 1
0x0000412f      4183c208       add r10d, 8
0x00004133      4801e8         add rax, rbp
0x00004136      488b00         mov rax, qword [rax]
0x00004139      4885c0         test rax, rax
0x0000413c      4b8904c8       mov qword [r8 + r9*8], rax
0x00004140      740a           je 0x414c
0x00004142      4983c101       add r9, 1
0x00004146      4983f90a       cmp r9, 0xa
0x0000414a      75d4           jne 0x4120
0x0000414c      4584db         test r11b, r11b
0x0000414f      7524           jne 0x4175
0x00004151      e89afaffff     call sym.version_etc_arn
0x00004156      488b442478     mov rax, qword [rsp + 0x78]
0x0000415b      644833042528.  xor rax, qword fs:[0x28]
0x00004164      750a           jne 0x4170
0x00004166      4881c4b80000.  add rsp, 0xb8
0x0000416d      5b             pop rbx
0x0000416e      5d             pop rbp
0x0000416f      c3             ret
0x00004170      e8bbd1ffff     call sym.imp.__stack_chk_fail
0x00004175      4489542408     mov dword [rsp + 8], r10d
0x0000417a      ebd5           jmp 0x4151
0x0000417c      4889d8         mov rax, rbx
0x0000417f      4883c308       add rbx, 8
0x00004183      ebb1           jmp 0x4136
0x00004185      90             nop
0x00004186      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00004190      53             push rbx
0x00004191      488d350a1100.  lea rsi, str.Report_bugs_to:__s         ; 0x52a2 ; "\nReport bugs to: %s\n"
0x00004198      ba05000000     mov edx, 5
0x0000419d      31ff           xor edi, edi
0x0000419f      e85cd1ffff     call sym.imp.dcgettext
0x000041a4      488d150c1100.  lea rdx, str.bug_coreutils_gnu.org      ; 0x52b7 ; "bug-coreutils@gnu.org"
0x000041ab      4889c6         mov rsi, rax
0x000041ae      bf01000000     mov edi, 1
0x000041b3      31c0           xor eax, eax
0x000041b5      e8a6d2ffff     call sym.imp.__printf_chk
0x000041ba      488d350c1100.  lea rsi, str.s_home_page:___s           ; 0x52cd ; "%s home page: <%s>\n"
0x000041c1      ba05000000     mov edx, 5
0x000041c6      31ff           xor edi, edi
0x000041c8      e833d1ffff     call sym.imp.dcgettext
0x000041cd      488d0da40a00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x4c78 ; "https://www.gnu.org/software/coreutils/"
0x000041d4      488d15e80600.  lea rdx, str.GNU_coreutils              ; 0x48c3 ; "GNU coreutils"
0x000041db      4889c6         mov rsi, rax
0x000041de      bf01000000     mov edi, 1
0x000041e3      31c0           xor eax, eax
0x000041e5      e876d2ffff     call sym.imp.__printf_chk
0x000041ea      488b1d972e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x207088:8]=0
0x000041f1      488d35081300.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x5500 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x000041f8      31ff           xor edi, edi
0x000041fa      ba05000000     mov edx, 5
0x000041ff      e8fcd0ffff     call sym.imp.dcgettext
0x00004204      4889de         mov rsi, rbx
0x00004207      4889c7         mov rdi, rax
0x0000420a      5b             pop rbx
0x0000420b      e9b0d1ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00004210      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00004211      4889fb         mov rbx, rdi
0x00004214      e8e7d1ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00004219      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x0000421c      7505           jne 0x4223
0x0000421e      4885db         test rbx, rbx
0x00004221      7502           jne 0x4225
0x00004223      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00004224      c3             ret
0x00004225      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x0000422a      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00004230      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00004233      48f7e6         mul rsi
0x00004236      4889c7         mov rdi, rax
0x00004239      0f90c0         seto al
0x0000423c      4885ff         test rdi, rdi
0x0000423f      780a           js 0x424b
0x00004241      0fb6c0         movzx eax, al
0x00004244      4885c0         test rax, rax
0x00004247      7502           jne 0x424b
0x00004249      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x0000424b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x0000424f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00004254      6690           nop
0x00004256      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00004260      ebae           jmp sym.xmalloc
0x00004262      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00004266      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00004270      4885f6         test rsi, rsi
0x00004273      53             push rbx
0x00004274      4889f3         mov rbx, rsi
0x00004277      7505           jne 0x427e
0x00004279      4885ff         test rdi, rdi
0x0000427c      751a           jne 0x4298
0x0000427e      4889de         mov rsi, rbx
0x00004281      e8bad1ffff     call sym.imp.realloc
0x00004286      4885c0         test rax, rax
0x00004289      7505           jne 0x4290
0x0000428b      4885db         test rbx, rbx
0x0000428e      7511           jne 0x42a1                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00004290      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00004291      c3             ret
0x00004292      660f1f440000   nop word [rax + rax]
0x00004298      e8d3cfffff     call sym.imp.free
0x0000429d      31c0           xor eax, eax
0x0000429f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x000042a0      c3             ret
0x000042a1      e8ba010000     call sym.xalloc_die
0x000042a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x000042b0      4889f0         mov rax, rsi
0x000042b3      48f7e2         mul rdx
0x000042b6      4889c6         mov rsi, rax
0x000042b9      0f90c0         seto al
0x000042bc      4885f6         test rsi, rsi
0x000042bf      780a           js 0x42cb
0x000042c1      0fb6c0         movzx eax, al
0x000042c4      4885c0         test rax, rax
0x000042c7      7502           jne 0x42cb
0x000042c9      eba5           jmp sym.xrealloc
0x000042cb      4883ec08       sub rsp, 8
0x000042cf      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x000042d4      6690           nop
0x000042d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x000042e0      4885ff         test rdi, rdi
0x000042e3      4989d1         mov r9, rdx
0x000042e6      488b0e         mov rcx, qword [rsi]
0x000042e9      7435           je 0x4320
0x000042eb      31d2           xor edx, edx
0x000042ed      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x000042f7      49f7f1         div r9
0x000042fa      4839c8         cmp rax, rcx
0x000042fd      763c           jbe 0x433b
0x000042ff      4889c8         mov rax, rcx
0x00004302      48d1e8         shr rax, 1
0x00004305      488d4c0801     lea rcx, [rax + rcx + 1]
0x0000430a      48890e         mov qword [rsi], rcx
0x0000430d      490fafc9       imul rcx, r9
0x00004311      4889ce         mov rsi, rcx
0x00004314      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00004319      0f1f80000000.  nop dword [rax]
0x00004320      4885c9         test rcx, rcx
0x00004323      7423           je 0x4348
0x00004325      4889c8         mov rax, rcx
0x00004328      49f7e1         mul r9
0x0000432b      0f90c2         seto dl
0x0000432e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00004331      0fb6d2         movzx edx, dl
0x00004334      7805           js 0x433b
0x00004336      4885d2         test rdx, rdx
0x00004339      74cf           je 0x430a
0x0000433b      4883ec08       sub rsp, 8
0x0000433f      e81c010000     call sym.xalloc_die
0x00004344      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00004348      31d2           xor edx, edx
0x0000434a      b880000000     mov eax, 0x80
0x0000434f      4531c0         xor r8d, r8d
0x00004352      49f7f1         div r9
0x00004355      4885c0         test rax, rax
0x00004358      410f94c0       sete r8b
0x0000435c      498d0c00       lea rcx, [r8 + rax]
0x00004360      ebc3           jmp 0x4325
0x00004362      0f1f4000       nop dword [rax]
0x00004366      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00004370      4885ff         test rdi, rdi
0x00004373      488b06         mov rax, qword [rsi]
0x00004376      7428           je 0x43a0
0x00004378      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00004382      4839d0         cmp rax, rdx
0x00004385      772a           ja 0x43b1
0x00004387      4889c2         mov rdx, rax
0x0000438a      48d1ea         shr rdx, 1
0x0000438d      488d440201     lea rax, [rdx + rax + 1]
0x00004392      488906         mov qword [rsi], rax
0x00004395      4889c6         mov rsi, rax
0x00004398      e9d3feffff     jmp sym.xrealloc
0x0000439d      0f1f00         nop dword [rax]
0x000043a0      4885c0         test rax, rax
0x000043a3      ba80000000     mov edx, 0x80
0x000043a8      480f44c2       cmove rax, rdx
0x000043ac      4885c0         test rax, rax
0x000043af      79e1           jns 0x4392
0x000043b1      4883ec08       sub rsp, 8
0x000043b5      e8a6000000     call sym.xalloc_die
0x000043ba      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x000043c0      53             push rbx
0x000043c1      4889fb         mov rbx, rdi
0x000043c4      e847feffff     call sym.xmalloc
0x000043c9      4889da         mov rdx, rbx
0x000043cc      31f6           xor esi, esi
0x000043ce      4889c7         mov rdi, rax
0x000043d1      5b             pop rbx
0x000043d2      e9b9cfffff     jmp sym.imp.memset
0x000043d7      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x000043e0      4889f8         mov rax, rdi
0x000043e3      4883ec08       sub rsp, 8
0x000043e7      48f7e6         mul rsi
0x000043ea      0f90c2         seto dl
0x000043ed      4885c0         test rax, rax
0x000043f0      7817           js 0x4409
0x000043f2      0fb6d2         movzx edx, dl
0x000043f5      4885d2         test rdx, rdx
0x000043f8      750f           jne 0x4409
0x000043fa      e8d1cfffff     call sym.imp.calloc
0x000043ff      4885c0         test rax, rax
0x00004402      7405           je 0x4409
0x00004404      4883c408       add rsp, 8
0x00004408      c3             ret
0x00004409      e852000000     call sym.xalloc_die
0x0000440e      6690           nop
;-- xmemdup:
0x00004410      55             push rbp
0x00004411      53             push rbx
0x00004412      4889fd         mov rbp, rdi
0x00004415      4889f7         mov rdi, rsi
0x00004418      4889f3         mov rbx, rsi
0x0000441b      4883ec08       sub rsp, 8
0x0000441f      e8ecfdffff     call sym.xmalloc
0x00004424      4883c408       add rsp, 8
0x00004428      4889da         mov rdx, rbx
0x0000442b      4889ee         mov rsi, rbp
0x0000442e      5b             pop rbx
0x0000442f      5d             pop rbp
0x00004430      4889c7         mov rdi, rax
0x00004433      e9a8cfffff     jmp sym.imp.memcpy
0x00004438      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00004440      53             push rbx
0x00004441      4889fb         mov rbx, rdi
0x00004444      e8d7ceffff     call sym.imp.strlen
0x00004449      4889df         mov rdi, rbx
0x0000444c      488d7001       lea rsi, [rax + 1]
0x00004450      5b             pop rbx
0x00004451      ebbd           jmp sym.xmemdup
0x00004453      662e0f1f8400.  nop word cs:[rax + rax]
0x0000445d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00004460      488d35481100.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x55af ; "memory exhausted"
0x00004467      4883ec08       sub rsp, 8
0x0000446b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00004470      31ff           xor edi, edi
0x00004472      e889ceffff     call sym.imp.dcgettext
0x00004477      8b3d9b2b2000   mov edi, dword [obj.exit_failure]       ; [0x207018:4]=1
0x0000447d      488d15ac0800.  lea rdx, [0x00004d30]                   ; "%s"
0x00004484      4889c1         mov rcx, rax
0x00004487      31f6           xor esi, esi
0x00004489      31c0           xor eax, eax
0x0000448b      e8e0cfffff     call sym.imp.error
0x00004490      e8ebcdffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00004495      662e0f1f8400.  nop word cs:[rax + rax]
0x0000449f      90             nop
;-- xstrndup:
0x000044a0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xstrndup.c:31
0x000044a4      e8f7ceffff     call sym.imp.strndup                    ; ../coreutils-8.31/lib/xstrndup.c:32
0x000044a9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xstrndup.c:33
0x000044ac      7405           je 0x44b3
0x000044ae      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/xstrndup.c:36
0x000044b2      c3             ret
0x000044b3      e8a8ffffff     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xstrndup.c:34
0x000044b8      0f1f84000000.  nop dword [rax + rax]
;-- rpl_mbrtowc:
0x000044c0      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x000044c2      4154           push r12
0x000044c4      4989f5         mov r13, rsi
0x000044c7      55             push rbp
0x000044c8      53             push rbx
0x000044c9      4889fb         mov rbx, rdi
0x000044cc      4989d4         mov r12, rdx
0x000044cf      4883ec18       sub rsp, 0x18
0x000044d3      64488b042528.  mov rax, qword fs:[0x28]
0x000044dc      4889442408     mov qword [rsp + 8], rax
0x000044e1      31c0           xor eax, eax
0x000044e3      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x000044e8      4885ff         test rdi, rdi
0x000044eb      480f44d8       cmove rbx, rax
0x000044ef      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x000044f2      e859ceffff     call sym.imp.mbrtowc
0x000044f7      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x000044fb      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x000044fe      7620           jbe 0x4520                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00004500      4d85e4         test r12, r12
0x00004503      741b           je 0x4520
0x00004505      31ff           xor edi, edi
0x00004507      e8c4000000     call sym.hard_locale
0x0000450c      84c0           test al, al
0x0000450e      7510           jne 0x4520
0x00004510      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00004515      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x0000451a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x0000451c      0f1f4000       nop dword [rax]
0x00004520      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00004525      644833142528.  xor rdx, qword fs:[0x28]
0x0000452e      4889e8         mov rax, rbp
0x00004531      750b           jne 0x453e
0x00004533      4883c418       add rsp, 0x18
0x00004537      5b             pop rbx
0x00004538      5d             pop rbp
0x00004539      415c           pop r12
0x0000453b      415d           pop r13
0x0000453d      c3             ret
0x0000453e      e8edcdffff     call sym.imp.__stack_chk_fail
0x00004543      662e0f1f8400.  nop word cs:[rax + rax]
0x0000454d      0f1f00         nop dword [rax]
;-- close_stream:
0x00004550      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00004552      55             push rbp
0x00004553      4889fd         mov rbp, rdi
0x00004556      53             push rbx
0x00004557      e864cdffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x0000455c      8b5d00         mov ebx, dword [rbp]
0x0000455f      4889ef         mov rdi, rbp
0x00004562      4989c4         mov r12, rax
0x00004565      e806010000     call sym.rpl_fclose
0x0000456a      83e320         and ebx, 0x20                           ; "@"
0x0000456d      85db           test ebx, ebx
0x0000456f      7517           jne 0x4588
0x00004571      85c0           test eax, eax
0x00004573      740a           je 0x457f                               ; stdio.h:-186
0x00004575      4d85e4         test r12, r12                           ; stdio.h:-178
0x00004578      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000457d      7439           je 0x45b8
0x0000457f      5b             pop rbx
0x00004580      5d             pop rbp
0x00004581      415c           pop r12
0x00004583      c3             ret
0x00004584      0f1f4000       nop dword [rax]
0x00004588      85c0           test eax, eax
0x0000458a      751c           jne 0x45a8
0x0000458c      e8ffccffff     call sym.imp.__errno_location
0x00004591      c70000000000   mov dword [rax], 0
0x00004597      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000459c      5b             pop rbx
0x0000459d      5d             pop rbp
0x0000459e      415c           pop r12
0x000045a0      c3             ret
0x000045a1      0f1f80000000.  nop dword [rax]
0x000045a8      5b             pop rbx
0x000045a9      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000045ae      5d             pop rbp                                 ; stdio.h:-186
0x000045af      415c           pop r12
0x000045b1      c3             ret
0x000045b2      660f1f440000   nop word [rax + rax]
0x000045b8      e8d3ccffff     call sym.imp.__errno_location
0x000045bd      833809         cmp dword [rax], 9
0x000045c0      5b             pop rbx
0x000045c1      5d             pop rbp
0x000045c2      415c           pop r12                                 ; stdio.h:-178
0x000045c4      0f95c0         setne al
0x000045c7      0fb6c0         movzx eax, al
0x000045ca      f7d8           neg eax
0x000045cc      c3             ret
0x000045cd      0f1f00         nop dword [rax]
;-- hard_locale:
0x000045d0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x000045d4      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x000045d6      e875ceffff     call sym.imp.setlocale
0x000045db      4889c2         mov rdx, rax
0x000045de      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x000045e3      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x000045e6      741d           je 0x4605
0x000045e8      488d3dd10f00.  lea rdi, [0x000055c0]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x000045ef      b902000000     mov ecx, 2
0x000045f4      4889d6         mov rsi, rdx
0x000045f7      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000045f9      0f97c1         seta cl
0x000045fc      80d900         sbb cl, 0
0x000045ff      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00004601      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00004603      750b           jne 0x4610
0x00004605      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00004609      c3             ret
0x0000460a      660f1f440000   nop word [rax + rax]
0x00004610      488d3dab0f00.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x55c2 ; "POSIX"
0x00004617      b906000000     mov ecx, 6
0x0000461c      4889d6         mov rsi, rdx
0x0000461f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00004621      0f97c0         seta al
0x00004624      1c00           sbb al, 0
0x00004626      84c0           test al, al
0x00004628      0f95c0         setne al
0x0000462b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0000462f      c3             ret
;-- locale_charset:
0x00004630      4883ec08       sub rsp, 8
0x00004634      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00004639      e8e2cdffff     call sym.imp.nl_langinfo
0x0000463e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00004641      741d           je 0x4660
0x00004643      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00004646      488d157b0f00.  lea rdx, str.ASCII                      ; 0x55c8 ; "ASCII"
0x0000464d      480f44c2       cmove rax, rdx
0x00004651      4883c408       add rsp, 8
0x00004655      c3             ret
0x00004656      662e0f1f8400.  nop word cs:[rax + rax]
0x00004660      488d05610f00.  lea rax, str.ASCII                      ; 0x55c8 ; "ASCII"
0x00004667      4883c408       add rsp, 8
0x0000466b      c3             ret
0x0000466c      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x00004670      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00004672      55             push rbp
0x00004673      53             push rbx
0x00004674      4889fb         mov rbx, rdi
0x00004677      e874cdffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x0000467c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x0000467e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00004681      7854           js 0x46d7                               ; ../coreutils-8.31/lib/fclose.c:66
0x00004683      e8a8cdffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00004688      85c0           test eax, eax
0x0000468a      752c           jne 0x46b8
0x0000468c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x0000468f      e85c000000     call sym.rpl_fflush
0x00004694      85c0           test eax, eax
0x00004696      743c           je 0x46d4
0x00004698      e8f3cbffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x0000469d      448b20         mov r12d, dword [rax]
0x000046a0      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x000046a3      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x000046a6      e835ccffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x000046ab      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x000046ae      7530           jne 0x46e0
0x000046b0      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x000046b1      5d             pop rbp
0x000046b2      415c           pop r12
0x000046b4      c3             ret
0x000046b5      0f1f00         nop dword [rax]
0x000046b8      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x000046bb      e830cdffff     call sym.imp.fileno
0x000046c0      31f6           xor esi, esi
0x000046c2      ba01000000     mov edx, 1
0x000046c7      89c7           mov edi, eax
0x000046c9      e8b2ccffff     call sym.imp.lseek
0x000046ce      4883f8ff       cmp rax, 0xffffffffffffffff
0x000046d2      75b8           jne 0x468c
0x000046d4      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x000046d7      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x000046d8      5d             pop rbp
0x000046d9      415c           pop r12
0x000046db      e900ccffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x000046e0      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x000046e4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x000046e9      ebc5           jmp 0x46b0
0x000046eb      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x000046f0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x000046f3      53             push rbx
0x000046f4      4889fb         mov rbx, rdi
0x000046f7      7411           je 0x470a                               ; ../coreutils-8.31/lib/fflush.c:150
0x000046f9      e832cdffff     call sym.imp.__freading
0x000046fe      85c0           test eax, eax
0x00004700      7408           je 0x470a
0x00004702      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00004708      750e           jne 0x4718
0x0000470a      4889df         mov rdi, rbx
0x0000470d      5b             pop rbx
0x0000470e      e9fdccffff     jmp sym.imp.fflush
0x00004713      0f1f440000     nop dword [rax + rax]
0x00004718      4889df         mov rdi, rbx
0x0000471b      ba01000000     mov edx, 1
0x00004720      31f6           xor esi, esi
0x00004722      e809000000     call sym.rpl_fseeko
0x00004727      4889df         mov rdi, rbx
0x0000472a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x0000472b      e9e0ccffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00004730      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00004734      48394710       cmp qword [rdi + 0x10], rax
0x00004738      7406           je 0x4740                               ; ../coreutils-8.31/lib/fseeko.c:32
0x0000473a      e941cdffff     jmp sym.imp.fseeko                      ; /sys_errlist.h:9
0x0000473f      90             nop
0x00004740      488b4720       mov rax, qword [rdi + 0x20]
0x00004744      48394728       cmp qword [rdi + 0x28], rax
0x00004748      75f0           jne 0x473a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x0000474a      48837f4800     cmp qword [rdi + 0x48], 0
0x0000474f      75e9           jne 0x473a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00004751      4154           push r12
0x00004753      55             push rbp
0x00004754      4189d4         mov r12d, edx
0x00004757      53             push rbx
0x00004758      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x0000475b      4889fb         mov rbx, rdi
0x0000475e      e88dccffff     call sym.imp.fileno
0x00004763      4489e2         mov edx, r12d
0x00004766      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00004769      89c7           mov edi, eax                            ; /sys_errlist.h:17
0x0000476b      e810ccffff     call sym.imp.lseek
0x00004770      4883f8ff       cmp rax, 0xffffffffffffffff
0x00004774      740c           je 0x4782
0x00004776      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00004779      488983900000.  mov qword [rbx + 0x90], rax
0x00004780      31c0           xor eax, eax
0x00004782      5b             pop rbx                                 ; /sys_errlist.h:19
0x00004783      5d             pop rbp
0x00004784      415c           pop r12
0x00004786      c3             ret
0x00004787      660f1f840000.  nop word [rax + rax]
;-- __libc_csu_init:
0x00004790      4157           push r15
0x00004792      4156           push r14
0x00004794      4989d7         mov r15, rdx
0x00004797      4155           push r13
0x00004799      4154           push r12
0x0000479b      4c8d25ae2320.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x206b50
0x000047a2      55             push rbp
0x000047a3      488d2dae2320.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x206b58
0x000047aa      53             push rbx
0x000047ab      4189fd         mov r13d, edi
0x000047ae      4989f6         mov r14, rsi
0x000047b1      4c29e5         sub rbp, r12
0x000047b4      4883ec08       sub rsp, 8
0x000047b8      48c1fd03       sar rbp, 3
0x000047bc      e87fcaffff     call sym._init
0x000047c1      4885ed         test rbp, rbp
0x000047c4      7420           je 0x47e6
0x000047c6      31db           xor ebx, ebx
0x000047c8      0f1f84000000.  nop dword [rax + rax]
0x000047d0      4c89fa         mov rdx, r15
0x000047d3      4c89f6         mov rsi, r14
0x000047d6      4489ef         mov edi, r13d
0x000047d9      41ff14dc       call qword [r12 + rbx*8]
0x000047dd      4883c301       add rbx, 1
0x000047e1      4839dd         cmp rbp, rbx
0x000047e4      75ea           jne 0x47d0
0x000047e6      4883c408       add rsp, 8
0x000047ea      5b             pop rbx
0x000047eb      5d             pop rbp
0x000047ec      415c           pop r12
0x000047ee      415d           pop r13
0x000047f0      415e           pop r14
0x000047f2      415f           pop r15
0x000047f4      c3             ret
0x000047f5      90             nop
0x000047f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00004800      f3c3           ret
0x00004802      662e0f1f8400.  nop word cs:[rax + rax]
0x0000480c      0f1f4000       nop dword [rax]
;-- atexit:
0x00004810      488b15f12720.  mov rdx, qword [obj.__dso_handle]       ; [0x207008:8]=0x207008 obj.__dso_handle
0x00004817      31f6           xor esi, esi
0x00004819      e972ccffff     jmp sym.imp.__cxa_atexit
0x0000481e      0000           add byte [rax], al
