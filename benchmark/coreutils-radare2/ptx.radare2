;-- section..plt:
;-- .plt:
0x00001c40      ff350af12100   push qword [0x00220d50]                 ; [12] -r-x section size 1232 named .plt
0x00001c46      ff250cf12100   jmp qword [0x00220d58]                  ; [0x220d58:8]=0
0x00001c4c      0f1f4000       nop dword [rax]
;-- imp.__ctype_toupper_loc:
0x00001c50      ff250af12100   jmp qword [reloc.__ctype_toupper_loc]   ; [0x220d60:8]=0x1c56 ; "V\x1c"
0x00001c56      6800000000     push 0
0x00001c5b      e9e0ffffff     jmp sym..plt
;-- imp.free:
0x00001c60      ff2502f12100   jmp qword [reloc.free]                  ; [0x220d68:8]=0x1c66 ; "f\x1c"
0x00001c66      6801000000     push 1
0x00001c6b      e9d0ffffff     jmp sym..plt
;-- imp.abort:
0x00001c70      ff25faf02100   jmp qword [reloc.abort]                 ; [0x220d70:8]=0x1c76 ; "v\x1c"
0x00001c76      6802000000     push 2
0x00001c7b      e9c0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x00001c80      ff25f2f02100   jmp qword [reloc.__errno_location]      ; [0x220d78:8]=0x1c86
0x00001c86      6803000000     push 3
0x00001c8b      e9b0ffffff     jmp sym..plt
;-- imp.strncmp:
0x00001c90      ff25eaf02100   jmp qword [reloc.strncmp]               ; [0x220d80:8]=0x1c96
0x00001c96      6804000000     push 4
0x00001c9b      e9a0ffffff     jmp sym..plt
;-- imp._exit:
0x00001ca0      ff25e2f02100   jmp qword [reloc._exit]                 ; [0x220d88:8]=0x1ca6
0x00001ca6      6805000000     push 5
0x00001cab      e990ffffff     jmp sym..plt
;-- imp.ftello:
0x00001cb0      ff25daf02100   jmp qword [reloc.ftello]                ; [0x220d90:8]=0x1cb6
0x00001cb6      6806000000     push 6
0x00001cbb      e980ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001cc0      ff25d2f02100   jmp qword [reloc.__fpending]            ; [0x220d98:8]=0x1cc6
0x00001cc6      6807000000     push 7
0x00001ccb      e970ffffff     jmp sym..plt
;-- imp.iconv:
0x00001cd0      ff25caf02100   jmp qword [reloc.iconv]                 ; [0x220da0:8]=0x1cd6
0x00001cd6      6808000000     push 8
0x00001cdb      e960ffffff     jmp sym..plt
;-- imp.ferror:
0x00001ce0      ff25c2f02100   jmp qword [reloc.ferror]                ; [0x220da8:8]=0x1ce6
0x00001ce6      6809000000     push 9
0x00001ceb      e950ffffff     jmp sym..plt
;-- imp.qsort:
0x00001cf0      ff25baf02100   jmp qword [reloc.qsort]                 ; [0x220db0:8]=0x1cf6
0x00001cf6      680a000000     push 0xa
0x00001cfb      e940ffffff     jmp sym..plt
;-- imp.fread:
0x00001d00      ff25b2f02100   jmp qword [reloc.fread]                 ; [0x220db8:8]=0x1d06
0x00001d06      680b000000     push 0xb
0x00001d0b      e930ffffff     jmp sym..plt
;-- imp.iswcntrl:
0x00001d10      ff25aaf02100   jmp qword [reloc.iswcntrl]              ; [0x220dc0:8]=0x1d16
0x00001d16      680c000000     push 0xc
0x00001d1b      e920ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001d20      ff25a2f02100   jmp qword [reloc.textdomain]            ; [0x220dc8:8]=0x1d26 ; "&\x1d"
0x00001d26      680d000000     push 0xd
0x00001d2b      e910ffffff     jmp sym..plt
;-- imp.__strtol_internal:
0x00001d30      ff259af02100   jmp qword [reloc.__strtol_internal]     ; [0x220dd0:8]=0x1d36 ; "6\x1d"
0x00001d36      680e000000     push 0xe
0x00001d3b      e900ffffff     jmp sym..plt
;-- imp.iswctype:
0x00001d40      ff2592f02100   jmp qword [reloc.iswctype]              ; [0x220dd8:8]=0x1d46 ; "F\x1d"
0x00001d46      680f000000     push 0xf
0x00001d4b      e9f0feffff     jmp sym..plt
;-- imp.fclose:
0x00001d50      ff258af02100   jmp qword [reloc.fclose]                ; [0x220de0:8]=0x1d56 ; "V\x1d"
0x00001d56      6810000000     push 0x10
0x00001d5b      e9e0feffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001d60      ff2582f02100   jmp qword [reloc.bindtextdomain]        ; [0x220de8:8]=0x1d66 ; "f\x1d"
0x00001d66      6811000000     push 0x11
0x00001d6b      e9d0feffff     jmp sym..plt
;-- imp.stpcpy:
0x00001d70      ff257af02100   jmp qword [reloc.stpcpy]                ; [0x220df0:8]=0x1d76 ; "v\x1d"
0x00001d76      6812000000     push 0x12
0x00001d7b      e9c0feffff     jmp sym..plt
;-- imp.dcgettext:
0x00001d80      ff2572f02100   jmp qword [reloc.dcgettext]             ; [0x220df8:8]=0x1d86
0x00001d86      6813000000     push 0x13
0x00001d8b      e9b0feffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001d90      ff256af02100   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x220e00:8]=0x1d96
0x00001d96      6814000000     push 0x14
0x00001d9b      e9a0feffff     jmp sym..plt
;-- imp.strlen:
0x00001da0      ff2562f02100   jmp qword [reloc.strlen]                ; [0x220e08:8]=0x1da6
0x00001da6      6815000000     push 0x15
0x00001dab      e990feffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001db0      ff255af02100   jmp qword [reloc.__stack_chk_fail]      ; [0x220e10:8]=0x1db6
0x00001db6      6816000000     push 0x16
0x00001dbb      e980feffff     jmp sym..plt
;-- imp.getopt_long:
0x00001dc0      ff2552f02100   jmp qword [reloc.getopt_long]           ; [0x220e18:8]=0x1dc6
0x00001dc6      6817000000     push 0x17
0x00001dcb      e970feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001dd0      ff254af02100   jmp qword [reloc.mbrtowc]               ; [0x220e20:8]=0x1dd6
0x00001dd6      6818000000     push 0x18
0x00001ddb      e960feffff     jmp sym..plt
;-- imp.dup2:
0x00001de0      ff2542f02100   jmp qword [reloc.dup2]                  ; [0x220e28:8]=0x1de6
0x00001de6      6819000000     push 0x19
0x00001deb      e950feffff     jmp sym..plt
;-- imp.strchr:
0x00001df0      ff253af02100   jmp qword [reloc.strchr]                ; [0x220e30:8]=0x1df6
0x00001df6      681a000000     push 0x1a
0x00001dfb      e940feffff     jmp sym..plt
;-- imp.__overflow:
0x00001e00      ff2532f02100   jmp qword [reloc.__overflow]            ; [0x220e38:8]=0x1e06
0x00001e06      681b000000     push 0x1b
0x00001e0b      e930feffff     jmp sym..plt
;-- imp.strrchr:
0x00001e10      ff252af02100   jmp qword [reloc.strrchr]               ; [0x220e40:8]=0x1e16
0x00001e16      681c000000     push 0x1c
0x00001e1b      e920feffff     jmp sym..plt
;-- imp.lseek:
0x00001e20      ff2522f02100   jmp qword [reloc.lseek]                 ; [0x220e48:8]=0x1e26 ; "&\x1e"
0x00001e26      681d000000     push 0x1d
0x00001e2b      e910feffff     jmp sym..plt
;-- imp.__assert_fail:
0x00001e30      ff251af02100   jmp qword [reloc.__assert_fail]         ; [0x220e50:8]=0x1e36 ; "6\x1e"
0x00001e36      681e000000     push 0x1e
0x00001e3b      e900feffff     jmp sym..plt
;-- imp.memset:
0x00001e40      ff2512f02100   jmp qword [reloc.memset]                ; [0x220e58:8]=0x1e46 ; "F\x1e"
0x00001e46      681f000000     push 0x1f
0x00001e4b      e9f0fdffff     jmp sym..plt
;-- imp.freopen:
0x00001e50      ff250af02100   jmp qword [reloc.freopen]               ; [0x220e60:8]=0x1e56 ; "V\x1e"
0x00001e56      6820000000     push 0x20                               ; "@"
0x00001e5b      e9e0fdffff     jmp sym..plt
;-- imp.strnlen:
0x00001e60      ff2502f02100   jmp qword [reloc.strnlen]               ; [0x220e68:8]=0x1e66 ; "f\x1e"
0x00001e66      6821000000     push 0x21                               ; '!'
0x00001e6b      e9d0fdffff     jmp sym..plt
;-- imp.close:
0x00001e70      ff25faef2100   jmp qword [reloc.close]                 ; [0x220e70:8]=0x1e76 ; "v\x1e"
0x00001e76      6822000000     push 0x22                               ; '"'
0x00001e7b      e9c0fdffff     jmp sym..plt
;-- imp.memchr:
0x00001e80      ff25f2ef2100   jmp qword [reloc.memchr]                ; [0x220e78:8]=0x1e86
0x00001e86      6823000000     push 0x23                               ; '#'
0x00001e8b      e9b0fdffff     jmp sym..plt
;-- imp.memcmp:
0x00001e90      ff25eaef2100   jmp qword [reloc.memcmp]                ; [0x220e80:8]=0x1e96
0x00001e96      6824000000     push 0x24                               ; '$'
0x00001e9b      e9a0fdffff     jmp sym..plt
;-- imp.wctype:
0x00001ea0      ff25e2ef2100   jmp qword [reloc.wctype]                ; [0x220e88:8]=0x1ea6
0x00001ea6      6825000000     push 0x25                               ; '%'
0x00001eab      e990fdffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001eb0      ff25daef2100   jmp qword [reloc.fputs_unlocked]        ; [0x220e90:8]=0x1eb6
0x00001eb6      6826000000     push 0x26                               ; '&'
0x00001ebb      e980fdffff     jmp sym..plt
;-- imp.calloc:
0x00001ec0      ff25d2ef2100   jmp qword [reloc.calloc]                ; [0x220e98:8]=0x1ec6
0x00001ec6      6827000000     push 0x27                               ; '''
0x00001ecb      e970fdffff     jmp sym..plt
;-- imp.strcmp:
0x00001ed0      ff25caef2100   jmp qword [reloc.strcmp]                ; [0x220ea0:8]=0x1ed6
0x00001ed6      6828000000     push 0x28                               ; '('
0x00001edb      e960fdffff     jmp sym..plt
;-- imp.memcpy:
0x00001ee0      ff25c2ef2100   jmp qword [reloc.memcpy]                ; [0x220ea8:8]=0x1ee6
0x00001ee6      6829000000     push 0x29                               ; ')'
0x00001eeb      e950fdffff     jmp sym..plt
;-- imp.fileno:
0x00001ef0      ff25baef2100   jmp qword [reloc.fileno]                ; [0x220eb0:8]=0x1ef6
0x00001ef6      682a000000     push 0x2a                               ; '*'
0x00001efb      e940fdffff     jmp sym..plt
;-- imp.wcwidth:
0x00001f00      ff25b2ef2100   jmp qword [reloc.wcwidth]               ; [0x220eb8:8]=0x1f06
0x00001f06      682b000000     push 0x2b                               ; '+'
0x00001f0b      e930fdffff     jmp sym..plt
;-- imp.iswalnum:
0x00001f10      ff25aaef2100   jmp qword [reloc.iswalnum]              ; [0x220ec0:8]=0x1f16
0x00001f16      682c000000     push 0x2c                               ; ','
0x00001f1b      e920fdffff     jmp sym..plt
;-- imp.malloc:
0x00001f20      ff25a2ef2100   jmp qword [reloc.malloc]                ; [0x220ec8:8]=0x1f26 ; "&\x1f"
0x00001f26      682d000000     push 0x2d                               ; '-'
0x00001f2b      e910fdffff     jmp sym..plt
;-- imp.wcrtomb:
0x00001f30      ff259aef2100   jmp qword [reloc.wcrtomb]               ; [0x220ed0:8]=0x1f36 ; "6\x1f"
0x00001f36      682e000000     push 0x2e                               ; '.'
0x00001f3b      e900fdffff     jmp sym..plt
;-- imp.fflush:
0x00001f40      ff2592ef2100   jmp qword [reloc.fflush]                ; [0x220ed8:8]=0x1f46 ; "F\x1f"
0x00001f46      682f000000     push 0x2f                               ; '/'
0x00001f4b      e9f0fcffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001f50      ff258aef2100   jmp qword [reloc.nl_langinfo]           ; [0x220ee0:8]=0x1f56 ; "V\x1f"
0x00001f56      6830000000     push 0x30                               ; '0'
0x00001f5b      e9e0fcffff     jmp sym..plt
;-- imp.__fxstat:
0x00001f60      ff2582ef2100   jmp qword [reloc.__fxstat]              ; [0x220ee8:8]=0x1f66 ; "f\x1f"
0x00001f66      6831000000     push 0x31                               ; '1'
0x00001f6b      e9d0fcffff     jmp sym..plt
;-- imp.__freading:
0x00001f70      ff257aef2100   jmp qword [reloc.__freading]            ; [0x220ef0:8]=0x1f76 ; "v\x1f"
0x00001f76      6832000000     push 0x32                               ; '2'
0x00001f7b      e9c0fcffff     jmp sym..plt
;-- imp.fwrite_unlocked:
0x00001f80      ff2572ef2100   jmp qword [reloc.fwrite_unlocked]       ; [0x220ef8:8]=0x1f86
0x00001f86      6833000000     push 0x33                               ; '3'
0x00001f8b      e9b0fcffff     jmp sym..plt
;-- imp.realloc:
0x00001f90      ff256aef2100   jmp qword [reloc.realloc]               ; [0x220f00:8]=0x1f96
0x00001f96      6834000000     push 0x34                               ; '4'
0x00001f9b      e9a0fcffff     jmp sym..plt
;-- imp.setlocale:
0x00001fa0      ff2562ef2100   jmp qword [reloc.setlocale]             ; [0x220f08:8]=0x1fa6
0x00001fa6      6835000000     push 0x35                               ; '5'
0x00001fab      e990fcffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001fb0      ff255aef2100   jmp qword [reloc.__printf_chk]          ; [0x220f10:8]=0x1fb6
0x00001fb6      6836000000     push 0x36                               ; '6'
0x00001fbb      e980fcffff     jmp sym..plt
;-- imp.iconv_close:
0x00001fc0      ff2552ef2100   jmp qword [reloc.iconv_close]           ; [0x220f18:8]=0x1fc6
0x00001fc6      6837000000     push 0x37                               ; '7'
0x00001fcb      e970fcffff     jmp sym..plt
;-- imp.iswspace:
0x00001fd0      ff254aef2100   jmp qword [reloc.iswspace]              ; [0x220f20:8]=0x1fd6
0x00001fd6      6838000000     push 0x38                               ; '8'
0x00001fdb      e960fcffff     jmp sym..plt
;-- imp.btowc:
0x00001fe0      ff2542ef2100   jmp qword [reloc.btowc]                 ; [0x220f28:8]=0x1fe6
0x00001fe6      6839000000     push 0x39                               ; '9'
0x00001feb      e950fcffff     jmp sym..plt
;-- imp.memmove:
0x00001ff0      ff253aef2100   jmp qword [reloc.memmove]               ; [0x220f30:8]=0x1ff6
0x00001ff6      683a000000     push 0x3a                               ; ':'
0x00001ffb      e940fcffff     jmp sym..plt
;-- imp.error:
0x00002000      ff2532ef2100   jmp qword [reloc.error]                 ; [0x220f38:8]=0x2006
0x00002006      683b000000     push 0x3b                               ; ';'
0x0000200b      e930fcffff     jmp sym..plt
;-- imp.open:
0x00002010      ff252aef2100   jmp qword [reloc.open]                  ; [0x220f40:8]=0x2016
0x00002016      683c000000     push 0x3c                               ; '<'
0x0000201b      e920fcffff     jmp sym..plt
;-- imp.fseeko:
0x00002020      ff2522ef2100   jmp qword [reloc.fseeko]                ; [0x220f48:8]=0x2026 ; "& "
0x00002026      683d000000     push 0x3d                               ; '='
0x0000202b      e910fcffff     jmp sym..plt
;-- imp.fopen:
0x00002030      ff251aef2100   jmp qword [reloc.fopen]                 ; [0x220f50:8]=0x2036 ; "6 "
0x00002036      683e000000     push 0x3e                               ; '>'
0x0000203b      e900fcffff     jmp sym..plt
;-- imp.towlower:
0x00002040      ff2512ef2100   jmp qword [reloc.towlower]              ; [0x220f58:8]=0x2046 ; "F "
0x00002046      683f000000     push 0x3f                               ; '?'
0x0000204b      e9f0fbffff     jmp sym..plt
;-- imp.towupper:
0x00002050      ff250aef2100   jmp qword [reloc.towupper]              ; [0x220f60:8]=0x2056 ; "V "
0x00002056      6840000000     push 0x40                               ; segment.PHDR
0x0000205b      e9e0fbffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00002060      ff2502ef2100   jmp qword [reloc.__cxa_atexit]          ; [0x220f68:8]=0x2066 ; "f "
0x00002066      6841000000     push 0x41                               ; 'A'
0x0000206b      e9d0fbffff     jmp sym..plt
;-- imp.exit:
0x00002070      ff25faee2100   jmp qword [reloc.exit]                  ; [0x220f70:8]=0x2076 ; "v "
0x00002076      6842000000     push 0x42                               ; 'B'
0x0000207b      e9c0fbffff     jmp sym..plt
;-- imp.fwrite:
0x00002080      ff25f2ee2100   jmp qword [reloc.fwrite]                ; [0x220f78:8]=0x2086
0x00002086      6843000000     push 0x43                               ; 'C'
0x0000208b      e9b0fbffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00002090      ff25eaee2100   jmp qword [reloc.__fprintf_chk]         ; [0x220f80:8]=0x2096
0x00002096      6844000000     push 0x44                               ; 'D'
0x0000209b      e9a0fbffff     jmp sym..plt
;-- imp.strdup:
0x000020a0      ff25e2ee2100   jmp qword [reloc.strdup]                ; [0x220f88:8]=0x20a6
0x000020a6      6845000000     push 0x45                               ; 'E'
0x000020ab      e990fbffff     jmp sym..plt
;-- imp.mbsinit:
0x000020b0      ff25daee2100   jmp qword [reloc.mbsinit]               ; [0x220f90:8]=0x20b6
0x000020b6      6846000000     push 0x46                               ; 'F'
0x000020bb      e980fbffff     jmp sym..plt
;-- imp.iswprint:
0x000020c0      ff25d2ee2100   jmp qword [reloc.iswprint]              ; [0x220f98:8]=0x20c6
0x000020c6      6847000000     push 0x47                               ; 'G'
0x000020cb      e970fbffff     jmp sym..plt
;-- imp.__ctype_tolower_loc:
0x000020d0      ff25caee2100   jmp qword [reloc.__ctype_tolower_loc]   ; [0x220fa0:8]=0x20d6
0x000020d6      6848000000     push 0x48                               ; 'H'
0x000020db      e960fbffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x000020e0      ff25c2ee2100   jmp qword [reloc.__ctype_b_loc]         ; [0x220fa8:8]=0x20e6
0x000020e6      6849000000     push 0x49                               ; 'I'
0x000020eb      e950fbffff     jmp sym..plt
;-- imp.iconv_open:
0x000020f0      ff25baee2100   jmp qword [reloc.iconv_open]            ; [0x220fb0:8]=0x20f6
0x000020f6      684a000000     push 0x4a                               ; 'J'
0x000020fb      e940fbffff     jmp sym..plt
;-- imp.__sprintf_chk:
0x00002100      ff25b2ee2100   jmp qword [reloc.__sprintf_chk]         ; [0x220fb8:8]=0x2106
0x00002106      684b000000     push 0x4b                               ; 'K'
0x0000210b      e930fbffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00002110      .qword 0x90660021eeca25ff                              ; [13] -r-x section size 8 named .plt.got
0x00002118      0000           add byte [rax], al
0x0000211a      0000           add byte [rax], al
0x0000211c      0000           add byte [rax], al
0x0000211e      0000           add byte [rax], al
;-- section..text:
;-- .text:
;-- mbuiter_multi_next.part.0:
0x00002120      488d0de99b01.  lea rcx, obj.__PRETTY_FUNCTION__.5159   ; ../coreutils-8.31/lib/mbuiter.h:132 ; 0x1bd10 ; "mbuiter_multi_next" ; [14] -r-x section size 101822 named .text
0x00002127      488d356a9b01.  lea rsi, str..._coreutils_8.31_lib_mbuiter.h ; 0x1bc98 ; "../coreutils-8.31/lib/mbuiter.h"
0x0000212e      488d3d839b01.  lea rdi, str.iter__cur.wc____0          ; 0x1bcb8 ; "iter->cur.wc == 0"
0x00002135      4883ec08       sub rsp, 8
0x00002139      bab3000000     mov edx, 0xb3                           ; ../coreutils-8.31/lib/mbuiter.h:179
0x0000213e      e8edfcffff     call sym.imp.__assert_fail
;-- mbiter_multi_next.part.0:
0x00002143      488d0dc6a001.  lea rcx, obj.__PRETTY_FUNCTION__.5134   ; 0x1c210 ; "mbiter_multi_next"
0x0000214a      488d359fa001.  lea rsi, str..._coreutils_8.31_lib_mbiter.h ; 0x1c1f0 ; "../coreutils-8.31/lib/mbiter.h"
0x00002151      488d3d609b01.  lea rdi, str.iter__cur.wc____0          ; 0x1bcb8 ; "iter->cur.wc == 0"
0x00002158      4883ec08       sub rsp, 8
0x0000215c      baaa000000     mov edx, 0xaa
0x00002161      e8cafcffff     call sym.imp.__assert_fail
;-- mbuiter_multi_next.part.0:
0x00002166      488d0d13ae01.  lea rcx, obj.__PRETTY_FUNCTION__.5056   ; 0x1cf80 ; "mbuiter_multi_next"
0x0000216d      488d35249b01.  lea rsi, str..._coreutils_8.31_lib_mbuiter.h ; 0x1bc98 ; "../coreutils-8.31/lib/mbuiter.h"
0x00002174      488d3d3d9b01.  lea rdi, str.iter__cur.wc____0          ; 0x1bcb8 ; "iter->cur.wc == 0"
0x0000217b      4883ec08       sub rsp, 8
0x0000217f      bab3000000     mov edx, 0xb3
0x00002184      e8a7fcffff     call sym.imp.__assert_fail
0x00002189      0f1f80000000.  nop dword [rax]
;-- main:
0x00002190      4157           push r15
0x00002192      4156           push r14
0x00002194      4c8d35159801.  lea r14, obj.format_vals                ; 0x1b9b0
0x0000219b      4155           push r13
0x0000219d      4154           push r12
0x0000219f      4c8d2dfae621.  lea r13, obj.long_options               ; 0x2208a0
0x000021a6      55             push rbp
0x000021a7      53             push rbx
0x000021a8      89fb           mov ebx, edi
0x000021aa      4889f5         mov rbp, rsi
0x000021ad      4c8d25bd9601.  lea r12, str.AF:GM:ORS:TW:b:i:fg:o:trw: ; 0x1b871 ; "AF:GM:ORS:TW:b:i:fg:o:trw:"
0x000021b4      4881ec980000.  sub rsp, 0x98
0x000021bb      488b3e         mov rdi, qword [rsi]
0x000021be      64488b042528.  mov rax, qword fs:[0x28]
0x000021c7      488984248800.  mov qword [rsp + 0x88], rax
0x000021cf      31c0           xor eax, eax
0x000021d1      4c8d7c2460     lea r15, [rsp + 0x60]
0x000021d6      e8b53d0000     call sym.set_program_name
0x000021db      488d3599a001.  lea rsi, [0x0001c27b]
0x000021e2      bf06000000     mov edi, 6
0x000021e7      e8b4fdffff     call sym.imp.setlocale
0x000021ec      488d35159601.  lea rsi, str.usr_local_share_locale     ; 0x1b808 ; "/usr/local/share/locale"
0x000021f3      488d3ddc9501.  lea rdi, [0x0001b7d6]                   ; "coreutils"
0x000021fa      e861fbffff     call sym.imp.bindtextdomain
0x000021ff      488d3dd09501.  lea rdi, [0x0001b7d6]                   ; "coreutils"
0x00002206      e815fbffff     call sym.imp.textdomain
0x0000220b      488d3dce3a00.  lea rdi, sym.close_stdout               ; 0x5ce0 ; "USH\x83\xec\bH\x8b=\u06f3!"
0x00002212      e8b98c0100     call sym.atexit
0x00002217      660f1f840000.  nop word [rax + rax]
0x00002220      4531c0         xor r8d, r8d
0x00002223      4c89e9         mov rcx, r13
0x00002226      4c89e2         mov rdx, r12
0x00002229      4889ee         mov rsi, rbp
0x0000222c      89df           mov edi, ebx
0x0000222e      e88dfbffff     call sym.imp.getopt_long
0x00002233      83f8ff         cmp eax, 0xffffffff
0x00002236      0f84c1020000   je 0x24fd
0x0000223c      83f853         cmp eax, 0x53
0x0000223f      0f8475020000   je 0x24ba
0x00002245      7e33           jle 0x227a
0x00002247      83f867         cmp eax, 0x67
0x0000224a      0f8426020000   je 0x2476
0x00002250      7e5a           jle 0x22ac
0x00002252      83f872         cmp eax, 0x72
0x00002255      0f8453020000   je 0x24ae
0x0000225b      0f8fc9000000   jg 0x232a
0x00002261      83f869         cmp eax, 0x69
0x00002264      0f850a010000   jne 0x2374
0x0000226a      488b056fee21.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2210e0:8]=0
0x00002271      488905f0f521.  mov qword [obj.ignore_file], rax        ; [0x221868:8]=0
0x00002278      eba6           jmp 0x2220
0x0000227a      83f846         cmp eax, 0x46
0x0000227d      0f8462020000   je 0x24e5
0x00002283      7e52           jle 0x22d7
0x00002285      83f84d         cmp eax, 0x4d
0x00002288      0f8444020000   je 0x24d2
0x0000228e      0f8efc000000   jle 0x2390
0x00002294      83f84f         cmp eax, 0x4f
0x00002297      0f8535010000   jne 0x23d2
0x0000229d      c705ddf52100.  mov dword [obj.output_format], 2        ; [0x221884:4]=0
0x000022a7      e974ffffff     jmp 0x2220
0x000022ac      83f857         cmp eax, 0x57
0x000022af      0f8495010000   je 0x244a
0x000022b5      0f8eff000000   jle 0x23ba
0x000022bb      83f862         cmp eax, 0x62
0x000022be      0f85e1000000   jne 0x23a5
0x000022c4      488b0515ee21.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2210e0:8]=0
0x000022cb      488905a6f521.  mov qword [obj.break_file], rax         ; [0x221878:8]=0
0x000022d2      e949ffffff     jmp 0x2220
0x000022d7      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x000022dc      0f8413230000   je 0x45f5
0x000022e2      0f8e14010000   jle 0x23fc
0x000022e8      83f80a         cmp eax, 0xa
0x000022eb      0f85f6000000   jne 0x23e7
0x000022f1      4c8b0d48ed21.  mov r9, qword [obj.argmatch_die]        ; [0x221040:8]=0x5930 sym.__argmatch_die ; "0Y"
0x000022f8      488b35e1ed21.  mov rsi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2210e0:8]=0
0x000022ff      488d157ae521.  lea rdx, obj.format_args                ; 0x220880
0x00002306      488d3d409501.  lea rdi, str.format                     ; 0x1b84d ; "--format"
0x0000230d      41b804000000   mov r8d, 4
0x00002313      4c89f1         mov rcx, r14
0x00002316      e8e5380000     call sym.__xargmatch_internal
0x0000231b      418b0486       mov eax, dword [r14 + rax*4]
0x0000231f      89055ff52100   mov dword [obj.output_format], eax      ; [0x221884:4]=0
0x00002325      e9f6feffff     jmp 0x2220
0x0000232a      83f874         cmp eax, 0x74
0x0000232d      0f84edfeffff   je 0x2220
0x00002333      83f877         cmp eax, 0x77
0x00002336      0f85ac210000   jne 0x44e8
0x0000233c      488b3d9ded21.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2210e0:8]=0
0x00002343      4531c0         xor r8d, r8d
0x00002346      31d2           xor edx, edx
0x00002348      31f6           xor esi, esi
0x0000234a      4c89f9         mov rcx, r15
0x0000234d      e87e780000     call sym.xstrtoimax
0x00002352      85c0           test eax, eax
0x00002354      0f85e2220000   jne 0x463c
0x0000235a      488b442460     mov rax, qword [rsp + 0x60]
0x0000235f      4885c0         test rax, rax
0x00002362      0f8ed4220000   jle 0x463c
0x00002368      488905a9ec21.  mov qword [obj.line_width], rax         ; [0x221018:8]=72 ; "H"
0x0000236f      e9acfeffff     jmp 0x2220
0x00002374      83f86f         cmp eax, 0x6f
0x00002377      0f856b210000   jne 0x44e8
0x0000237d      488b055ced21.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2210e0:8]=0
0x00002384      488905e5f421.  mov qword [obj.only_file], rax          ; [0x221870:8]=0
0x0000238b      e990feffff     jmp 0x2220
0x00002390      83f847         cmp eax, 0x47
0x00002393      0f854f210000   jne 0x44e8
0x00002399      c60580ec2100.  mov byte [obj.gnu_extensions], 0        ; [0x221020:1]=1
0x000023a0      e97bfeffff     jmp 0x2220
0x000023a5      83f866         cmp eax, 0x66
0x000023a8      0f853a210000   jne 0x44e8
0x000023ae      c605cbf42100.  mov byte [obj.ignore_case], 1           ; [0x221880:1]=0
0x000023b5      e966feffff     jmp 0x2220
0x000023ba      83f854         cmp eax, 0x54
0x000023bd      0f8525210000   jne 0x44e8
0x000023c3      c705b7f42100.  mov dword [obj.output_format], 3        ; [0x221884:4]=0
0x000023cd      e94efeffff     jmp 0x2220
0x000023d2      83f852         cmp eax, 0x52
0x000023d5      0f850d210000   jne 0x44e8
0x000023db      c605a6f42100.  mov byte [obj.right_reference], 1       ; [0x221888:1]=0
0x000023e2      e939feffff     jmp 0x2220
0x000023e7      83f841         cmp eax, 0x41
0x000023ea      0f85f8200000   jne 0x44e8
0x000023f0      c60593f42100.  mov byte [obj.auto_reference], 1        ; [0x22188a:1]=0
0x000023f7      e924feffff     jmp 0x2220
0x000023fc      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x00002401      0f85e1200000   jne 0x44e8
0x00002407      488d35489401.  lea rsi, str.Fran__ois_Pinard           ; 0x1b856 ; "Fran\u00e7ois Pinard"
0x0000240e      488d3d529401.  lea rdi, str.F._Pinard                  ; 0x1b867 ; "F. Pinard"
0x00002415      e816460000     call sym.proper_name_utf8
0x0000241a      488b3da7ec21.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x00002421      488b0d10ec21.  mov rcx, qword [obj.Version]            ; [0x221038:8]=0x1b9b8 str.8.31
0x00002428      488d15a39301.  lea rdx, str.GNU_coreutils              ; 0x1b7d2 ; "GNU coreutils"
0x0000242f      488d35229301.  lea rsi, [0x0001b758]                   ; "ptx"
0x00002436      4989c0         mov r8, rax
0x00002439      4531c9         xor r9d, r9d
0x0000243c      31c0           xor eax, eax
0x0000243e      e81d730000     call sym.version_etc
0x00002443      31ff           xor edi, edi
0x00002445      e826fcffff     call sym.imp.exit
0x0000244a      488b3d8fec21.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2210e0:8]=0
0x00002451      e8da250000     call sym.copy_unescaped_string
0x00002456      48890563f121.  mov qword [obj.word_regex], rax         ; [0x2215c0:8]=0
0x0000245d      803800         cmp byte [rax], 0
0x00002460      0f85bafdffff   jne 0x2220
0x00002466      48c7054ff121.  mov qword [obj.word_regex], 0           ; [0x2215c0:8]=0
0x00002471      e9aafdffff     jmp 0x2220
0x00002476      488b3d63ec21.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2210e0:8]=0
0x0000247d      4531c0         xor r8d, r8d
0x00002480      31d2           xor edx, edx
0x00002482      31f6           xor esi, esi
0x00002484      4c89f9         mov rcx, r15
0x00002487      e844770000     call sym.xstrtoimax
0x0000248c      85c0           test eax, eax
0x0000248e      0f8572210000   jne 0x4606
0x00002494      488b442460     mov rax, qword [rsp + 0x60]
0x00002499      4885c0         test rax, rax
0x0000249c      0f8e64210000   jle 0x4606
0x000024a2      48890567eb21.  mov qword [obj.gap_size], rax           ; [0x221010:8]=3
0x000024a9      e972fdffff     jmp 0x2220
0x000024ae      c605d4f32100.  mov byte [obj.input_reference], 1       ; [0x221889:1]=0
0x000024b5      e966fdffff     jmp 0x2220
0x000024ba      488b3d1fec21.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2210e0:8]=0
0x000024c1      e86a250000     call sym.copy_unescaped_string
0x000024c6      48890553f221.  mov qword [obj.context_regex], rax      ; [0x221720:8]=0
0x000024cd      e94efdffff     jmp 0x2220
0x000024d2      488b0507ec21.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2210e0:8]=0
0x000024d9      48890548eb21.  mov qword [obj.macro_name], rax         ; [0x221028:8]=0x1b97e ; "~\xb9\x01"
0x000024e0      e93bfdffff     jmp 0x2220
0x000024e5      488b3df4eb21.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2210e0:8]=0
0x000024ec      e83f250000     call sym.copy_unescaped_string
0x000024f1      48890538eb21.  mov qword [obj.truncation_string], rax  ; [0x221030:8]=0x1bc8e
0x000024f8      e923fdffff     jmp 0x2220
0x000024fd      8b05d5eb2100   mov eax, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2210d8:4]=0
0x00002503      39d8           cmp eax, ebx
0x00002505      0f8450010000   je 0x265b
0x0000250b      803d0eeb2100.  cmp byte [obj.gnu_extensions], 0        ; [0x221020:1]=1
0x00002512      0f84d11e0000   je 0x43e9
0x00002518      89d9           mov ecx, ebx
0x0000251a      ba08000000     mov edx, 8
0x0000251f      31f6           xor esi, esi
0x00002521      29c1           sub ecx, eax
0x00002523      4889d0         mov rax, rdx
0x00002526      890deced2100   mov dword [obj.number_input_files], ecx ; [0x221318:4]=0
0x0000252c      4863c9         movsxd rcx, ecx
0x0000252f      48f7e1         mul rcx
0x00002532      0f80c4200000   jo 0x45fc
0x00002538      4885c0         test rax, rax
0x0000253b      0f88a40c0000   js 0x31e5
0x00002541      4885f6         test rsi, rsi
0x00002544      0f859b0c0000   jne 0x31e5
0x0000254a      488d3ccd0000.  lea rdi, [rcx*8]
0x00002552      e869730000     call sym.xmalloc
0x00002557      48630dbaed21.  movsxd rcx, dword [obj.number_input_files] ; [0x221318:4]=0
0x0000255e      ba08000000     mov edx, 8
0x00002563      4889059eed21.  mov qword [obj.input_file_name], rax    ; [0x221308:8]=0
0x0000256a      4889d0         mov rax, rdx
0x0000256d      31f6           xor esi, esi
0x0000256f      48f7e1         mul rcx
0x00002572      0f80d41f0000   jo 0x454c
0x00002578      4885c0         test rax, rax
0x0000257b      0f88640c0000   js 0x31e5
0x00002581      4885f6         test rsi, rsi
0x00002584      0f855b0c0000   jne 0x31e5
0x0000258a      488d3ccd0000.  lea rdi, [rcx*8]
0x00002592      e829730000     call sym.xmalloc
0x00002597      48630d7aed21.  movsxd rcx, dword [obj.number_input_files] ; [0x221318:4]=0
0x0000259e      ba10000000     mov edx, 0x10
0x000025a3      48890556ed21.  mov qword [obj.file_line_count], rax    ; [0x221300:8]=0
0x000025aa      4889d0         mov rax, rdx
0x000025ad      31f6           xor esi, esi
0x000025af      48f7e1         mul rcx
0x000025b2      0f808a1f0000   jo 0x4542
0x000025b8      4885c0         test rax, rax
0x000025bb      0f88240c0000   js 0x31e5
0x000025c1      4885f6         test rsi, rsi
0x000025c4      0f851b0c0000   jne 0x31e5
0x000025ca      4889cf         mov rdi, rcx
0x000025cd      48c1e704       shl rdi, 4
0x000025d1      e8ea720000     call sym.xmalloc
0x000025d6      8b153ced2100   mov edx, dword [obj.number_input_files] ; [0x221318:4]=0
0x000025dc      48890515ed21.  mov qword [obj.text_buffers], rax       ; [0x2212f8:8]=0
0x000025e3      85d2           test edx, edx
0x000025e5      0f8ebb000000   jle 0x26a6
0x000025eb      8b05e7ea2100   mov eax, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2210d8:4]=0
0x000025f1      448d6aff       lea r13d, [rdx - 1]
0x000025f5      8d5801         lea ebx, [rax + 1]
0x000025f8      4863d0         movsxd rdx, eax
0x000025fb      4863db         movsxd rbx, ebx
0x000025fe      486bc3f8       imul rax, rbx, 0xfffffffffffffff8
0x00002602      4c8d6301       lea r12, [rbx + 1]
0x00002606      4d01e5         add r13, r12
0x00002609      4c8d34d0       lea r14, [rax + rdx*8]
0x0000260d      480305f4ec21.  add rax, qword [obj.input_file_name]    ; [0x221308:8]=0
0x00002614      4901ee         add r14, rbp
0x00002617      4889c5         mov rbp, rax
0x0000261a      eb2a           jmp 0x2646
0x0000261c      488d356f9601.  lea rsi, [0x0001bc92]                   ; "-"
0x00002623      4c89ff         mov rdi, r15
0x00002626      e8a5f8ffff     call sym.imp.strcmp
0x0000262b      85c0           test eax, eax
0x0000262d      7421           je 0x2650
0x0000262f      4c897cdd00     mov qword [rbp + rbx*8], r15
0x00002634      4d39e5         cmp r13, r12
0x00002637      891d9bea2100   mov dword [obj.optind], ebx             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2210d8:4]=0
0x0000263d      4c89e3         mov rbx, r12
0x00002640      7464           je 0x26a6
0x00002642      4983c401       add r12, 1
0x00002646      4d8b3cde       mov r15, qword [r14 + rbx*8]
0x0000264a      41803f00       cmp byte [r15], 0
0x0000264e      75cc           jne 0x261c
0x00002650      48c744dd0000.  mov qword [rbp + rbx*8], 0
0x00002659      ebd9           jmp 0x2634
0x0000265b      bf08000000     mov edi, 8
0x00002660      e85b720000     call sym.xmalloc
0x00002665      bf08000000     mov edi, 8
0x0000266a      48890597ec21.  mov qword [obj.input_file_name], rax    ; [0x221308:8]=0
0x00002671      e84a720000     call sym.xmalloc
0x00002676      bf10000000     mov edi, 0x10
0x0000267b      4889057eec21.  mov qword [obj.file_line_count], rax    ; [0x221300:8]=0
0x00002682      e839720000     call sym.xmalloc
0x00002687      4889056aec21.  mov qword [obj.text_buffers], rax       ; [0x2212f8:8]=0
0x0000268e      488b0573ec21.  mov rax, qword [obj.input_file_name]    ; [0x221308:8]=0
0x00002695      c70579ec2100.  mov dword [obj.number_input_files], 1   ; [0x221318:4]=0
0x0000269f      48c700000000.  mov qword [rax], 0
0x000026a6      833dd7f12100.  cmp dword [obj.output_format], 0        ; [0x221884:4]=0
0x000026ad      7514           jne 0x26c3
0x000026af      803d6ae92100.  cmp byte [obj.gnu_extensions], 1        ; [0x221020:1]=1
0x000026b6      19c0           sbb eax, eax
0x000026b8      f7d0           not eax
0x000026ba      83c002         add eax, 2
0x000026bd      8905c1f12100   mov dword [obj.output_format], eax      ; [0x221884:4]=0
0x000026c3      803db6f12100.  cmp byte [obj.ignore_case], 0           ; [0x221880:1]=0
0x000026ca      742f           je 0x26fb
0x000026cc      e87ff5ffff     call sym.imp.__ctype_toupper_loc
0x000026d1      488d0de8ed21.  lea rcx, obj.folded_chars               ; 0x2214c0
0x000026d8      31d2           xor edx, edx
0x000026da      660f1f440000   nop word [rax + rax]
0x000026e0      488b30         mov rsi, qword [rax]
0x000026e3      4883c101       add rcx, 1
0x000026e7      8b3416         mov esi, dword [rsi + rdx]
0x000026ea      4883c204       add rdx, 4
0x000026ee      408871ff       mov byte [rcx - 1], sil
0x000026f2      4881fa000400.  cmp rdx, 0x400
0x000026f9      75e5           jne 0x26e0
0x000026fb      488b051ef021.  mov rax, qword [obj.context_regex]      ; [0x221720:8]=0
0x00002702      4885c0         test rax, rax
0x00002705      0f84fa1d0000   je 0x4505
0x0000270b      803800         cmp byte [rax], 0
0x0000270e      0f847e0c0000   je 0x3392
0x00002714      488d3d05f021.  lea rdi, obj.context_regex              ; 0x221720
0x0000271b      e890250000     call sym.compile_regex
0x00002720      48833d98ee21.  cmp qword [obj.word_regex], 0           ; [0x2215c0:8]=0
0x00002728      0f85f80a0000   jne 0x3226
0x0000272e      488b3d43f121.  mov rdi, qword [obj.break_file]         ; [0x221878:8]=0
0x00002735      4885ff         test rdi, rdi
0x00002738      0f84120c0000   je 0x3350
0x0000273e      488d742460     lea rsi, [rsp + 0x60]
0x00002743      e808260000     call sym.swallow_file_in_memory
0x00002748      488d1531ec21.  lea rdx, obj.word_fastmap               ; 0x221380
0x0000274f      b920000000     mov ecx, 0x20                           ; "@"
0x00002754      48b801010101.  movabs rax, 0x101010101010101
0x0000275e      4889d7         mov rdi, rdx
0x00002761      f348ab         rep stosq qword [rdi], rax
0x00002764      488b7c2460     mov rdi, qword [rsp + 0x60]
0x00002769      488b4c2468     mov rcx, qword [rsp + 0x68]
0x0000276e      4839cf         cmp rdi, rcx
0x00002771      7313           jae 0x2786
0x00002773      4889f8         mov rax, rdi
0x00002776      0fb630         movzx esi, byte [rax]
0x00002779      4883c001       add rax, 1
0x0000277d      4839c8         cmp rax, rcx
0x00002780      c6043200       mov byte [rdx + rsi], 0
0x00002784      75f0           jne 0x2776
0x00002786      803d93e82100.  cmp byte [obj.gnu_extensions], 0        ; [0x221020:1]=1
0x0000278d      7510           jne 0x279f
0x0000278f      c6050aec2100.  mov byte [0x002213a0], 0                ; [0x2213a0:1]=0
0x00002796      66c705eaeb21.  mov word [0x00221389], 0                ; [0x221389:2]=0
0x0000279f      e8bcf4ffff     call sym.imp.free
0x000027a4      488b3dbdf021.  mov rdi, qword [obj.ignore_file]        ; [0x221868:8]=0
0x000027ab      4885ff         test rdi, rdi
0x000027ae      741a           je 0x27ca
0x000027b0      488d3589eb21.  lea rsi, obj.ignore_table               ; 0x221340
0x000027b7      e874260000     call sym.digest_word_file
0x000027bc      48833d8ceb21.  cmp qword [0x00221350], 0               ; [0x221350:8]=0
0x000027c4      0f84760b0000   je 0x3340
0x000027ca      488b3d9ff021.  mov rdi, qword [obj.only_file]          ; [0x221870:8]=0
0x000027d1      4885ff         test rdi, rdi
0x000027d4      741a           je 0x27f0
0x000027d6      488d3543eb21.  lea rsi, obj.only_table                 ; 0x221320
0x000027dd      e84e260000     call sym.digest_word_file
0x000027e2      48833d46eb21.  cmp qword [0x00221330], 0               ; [0x221330:8]=0
0x000027ea      0f84400b0000   je 0x3330
0x000027f0      833d21eb2100.  cmp dword [obj.number_input_files], 0   ; [0x221318:4]=0
0x000027f7      48c705deea21.  mov qword [obj.number_of_occurs], 0     ; [0x2212e0:8]=0
0x00002802      48c70503eb21.  mov qword [obj.total_line_count], 0     ; [0x221310:8]=0
0x0000280d      48c70548eb21.  mov qword [obj.maximum_word_length], 0  ; [0x221360:8]=0
0x00002818      48c70535eb21.  mov qword [obj.reference_max_width], 0  ; [0x221358:8]=0
0x00002823      0f8eb4030000   jle 0x2bdd
0x00002829      4c8d3d50eb21.  lea r15, obj.word_fastmap               ; 0x221380
0x00002830      48c744245800.  mov qword [rsp + 0x58], 0
0x00002839      c74424380000.  mov dword [rsp + 0x38], 0
0x00002841      488b7c2458     mov rdi, qword [rsp + 0x58]
0x00002846      488b05bbea21.  mov rax, qword [obj.input_file_name]    ; [0x221308:8]=0
0x0000284d      488b35a4ea21.  mov rsi, qword [obj.text_buffers]       ; [0x2212f8:8]=0
0x00002854      488d1c3f       lea rbx, [rdi + rdi]
0x00002858      488b3c38       mov rdi, qword [rax + rdi]
0x0000285c      4801de         add rsi, rbx
0x0000285f      e8ec240000     call sym.swallow_file_in_memory
0x00002864      488b058dea21.  mov rax, qword [obj.text_buffers]       ; [0x2212f8:8]=0
0x0000286b      4801d8         add rax, rbx
0x0000286e      803d14f02100.  cmp byte [obj.input_reference], 0       ; [0x221889:1]=0
0x00002875      4889442418     mov qword [rsp + 0x18], rax
0x0000287a      4c8b20         mov r12, qword [rax]
0x0000287d      0f8489090000   je 0x320c
0x00002883      488b6808       mov rbp, qword [rax + 8]
0x00002887      4939ec         cmp r12, rbp
0x0000288a      4889eb         mov rbx, rbp
0x0000288d      0f83b4090000   jae 0x3247
0x00002893      e848f8ffff     call sym.imp.__ctype_b_loc
0x00002898      4d89e6         mov r14, r12
0x0000289b      488b00         mov rax, qword [rax]
0x0000289e      eb0d           jmp 0x28ad
0x000028a0      4983c601       add r14, 1
0x000028a4      4939ee         cmp r14, rbp
0x000028a7      0f849d090000   je 0x324a
0x000028ad      410fb616       movzx edx, byte [r14]
0x000028b1      f644500120     test byte [rax + rdx*2 + 1], 0x20
0x000028b6      74e8           je 0x28a0
0x000028b8      4c89f6         mov rsi, r14
0x000028bb      4c29e6         sub rsi, r12
0x000028be      4939ee         cmp r14, rbp
0x000028c1      4889742420     mov qword [rsp + 0x20], rsi
0x000028c6      7211           jb 0x28d9
0x000028c8      eb1a           jmp 0x28e4
0x000028ca      660f1f440000   nop word [rax + rax]
0x000028d0      4983c601       add r14, 1
0x000028d4      4939ee         cmp r14, rbp
0x000028d7      740b           je 0x28e4
0x000028d9      410fb616       movzx edx, byte [r14]
0x000028dd      f644500120     test byte [rax + rdx*2 + 1], 0x20
0x000028e2      75ec           jne 0x28d0
0x000028e4      488d442460     lea rax, [rsp + 0x60]
0x000028e9      4c39e5         cmp rbp, r12
0x000028ec      4c892424       mov qword [rsp], r12
0x000028f0      48896c2450     mov qword [rsp + 0x50], rbp
0x000028f5      4889442408     mov qword [rsp + 8], rax
0x000028fa      0f868d020000   jbe 0x2b8d
0x00002900      48833d18ee21.  cmp qword [obj.context_regex], 0        ; [0x221720:8]=0
0x00002908      745a           je 0x2964
0x0000290a      488b542450     mov rdx, qword [rsp + 0x50]
0x0000290f      4c8d0d8aeb21.  lea r9, obj.context_regs                ; 0x2214a0
0x00002916      488d3d0bee21.  lea rdi, [0x00221728]
0x0000291d      31c9           xor ecx, ecx
0x0000291f      4c89e6         mov rsi, r12
0x00002922      4c29e2         sub rdx, r12
0x00002925      4989d0         mov r8, rdx
0x00002928      e8735c0100     call sym.rpl_re_search
0x0000292d      4883f8ff       cmp rax, 0xffffffffffffffff
0x00002931      7425           je 0x2958
0x00002933      4885c0         test rax, rax
0x00002936      0f844b1c0000   je 0x4587
0x0000293c      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00002940      0f84e41b0000   je 0x452a
0x00002946      488b0563eb21.  mov rax, qword [0x002214b0]             ; [0x2214b0:8]=0
0x0000294d      488b30         mov rsi, qword [rax]
0x00002950      4c01e6         add rsi, r12
0x00002953      4889742450     mov qword [rsp + 0x50], rsi
0x00002958      4c3b642450     cmp r12, qword [rsp + 0x50]
0x0000295d      488b6c2450     mov rbp, qword [rsp + 0x50]
0x00002962      7328           jae 0x298c
0x00002964      e877f7ffff     call sym.imp.__ctype_b_loc
0x00002969      488b6c2450     mov rbp, qword [rsp + 0x50]
0x0000296e      488b10         mov rdx, qword [rax]
0x00002971      eb0e           jmp 0x2981
0x00002973      0f1f440000     nop dword [rax + rax]
0x00002978      4883ed01       sub rbp, 1
0x0000297c      4939ec         cmp r12, rbp
0x0000297f      730b           jae 0x298c
0x00002981      0fb645ff       movzx eax, byte [rbp - 1]
0x00002985      f644420120     test byte [rdx + rax*2 + 1], 0x20
0x0000298a      75ec           jne 0x2978
0x0000298c      488d052dec21.  lea rax, obj.word_regex                 ; 0x2215c0
0x00002993      4c89642410     mov qword [rsp + 0x10], r12
0x00002998      488b10         mov rdx, qword [rax]
0x0000299b      0f1f440000     nop dword [rax + rax]
0x000029a0      4885d2         test rdx, rdx
0x000029a3      0f8492010000   je 0x2b3b
0x000029a9      4889ea         mov rdx, rbp
0x000029ac      4c8d0dcdea21.  lea r9, obj.word_regs                   ; 0x221480
0x000029b3      488d3d0eec21.  lea rdi, [0x002215c8]
0x000029ba      4c29e2         sub rdx, r12
0x000029bd      31c9           xor ecx, ecx
0x000029bf      4c89e6         mov rsi, r12
0x000029c2      4989d0         mov r8, rdx
0x000029c5      e8d65b0100     call sym.rpl_re_search
0x000029ca      4883f8fe       cmp rax, 0xfffffffffffffffe
0x000029ce      0f84561b0000   je 0x452a
0x000029d4      4883f8ff       cmp rax, 0xffffffffffffffff
0x000029d8      0f8493010000   je 0x2b71
0x000029de      488b05a3ea21.  mov rax, qword [0x00221488]             ; [0x221488:8]=0
0x000029e5      488b18         mov rbx, qword [rax]
0x000029e8      488b05a1ea21.  mov rax, qword [0x00221490]             ; [0x221490:8]=0
0x000029ef      4c01e3         add rbx, r12
0x000029f2      4c0320         add r12, qword [rax]
0x000029f5      4c39e3         cmp rbx, r12
0x000029f8      0f84a2060000   je 0x30a0
0x000029fe      4c89e0         mov rax, r12
0x00002a01      48895c2460     mov qword [rsp + 0x60], rbx
0x00002a06      4829d8         sub rax, rbx
0x00002a09      483b0550e921.  cmp rax, qword [obj.maximum_word_length] ; [0x221360:8]=0
0x00002a10      4889442468     mov qword [rsp + 0x68], rax
0x00002a15      7e07           jle 0x2a1e
0x00002a17      48890542e921.  mov qword [obj.maximum_word_length], rax ; [0x221360:8]=0
0x00002a1e      440fb62d63ee.  movzx r13d, byte [obj.input_reference]  ; [0x221889:1]=0
0x00002a26      4584ed         test r13b, r13b
0x00002a29      0f85f9040000   jne 0x2f28
0x00002a2f      48833d31ee21.  cmp qword [obj.ignore_file], 0          ; [0x221868:8]=0
0x00002a37      7420           je 0x2a59
0x00002a39      488b1510e921.  mov rdx, qword [0x00221350]             ; [0x221350:8]=0
0x00002a40      488b35f9e821.  mov rsi, qword [obj.ignore_table]       ; [0x221340:8]=0
0x00002a47      488b7c2408     mov rdi, qword [rsp + 8]
0x00002a4c      e8ff290000     call sym.search_table.isra.1
0x00002a51      84c0           test al, al
0x00002a53      0f8570040000   jne 0x2ec9
0x00002a59      48833d0fee21.  cmp qword [obj.only_file], 0            ; [0x221870:8]=0
0x00002a61      7420           je 0x2a83
0x00002a63      488b15c6e821.  mov rdx, qword [0x00221330]             ; [0x221330:8]=0
0x00002a6a      488b35afe821.  mov rsi, qword [obj.only_table]         ; [0x221320:8]=0
0x00002a71      488b7c2408     mov rdi, qword [rsp + 8]
0x00002a76      e8d5290000     call sym.search_table.isra.1
0x00002a7b      84c0           test al, al
0x00002a7d      0f8446040000   je 0x2ec9
0x00002a83      488b0d56e821.  mov rcx, qword [obj.number_of_occurs]   ; [0x2212e0:8]=0
0x00002a8a      483b0d57e821.  cmp rcx, qword [obj.occurs_alloc]       ; [0x2212e8:8]=0
0x00002a91      4c8b0558e821.  mov r8, qword [obj.occurs_table]        ; [0x2212f0:8]=0
0x00002a98      0f842a060000   je 0x30c8
0x00002a9e      488d3c49       lea rdi, [rcx + rcx*2]
0x00002aa2      4889f8         mov rax, rdi
0x00002aa5      48c1e004       shl rax, 4
0x00002aa9      498d3c00       lea rdi, [r8 + rax]
0x00002aad      440fb605d5ed.  movzx r8d, byte [obj.auto_reference]    ; [0x22188a:1]=0
0x00002ab5      4584c0         test r8b, r8b
0x00002ab8      0f8502050000   jne 0x2fc0
0x00002abe      4584ed         test r13b, r13b
0x00002ac1      7434           je 0x2af7
0x00002ac3      488b0424       mov rax, qword [rsp]
0x00002ac7      4829d8         sub rax, rbx
0x00002aca      48894720       mov qword [rdi + 0x20], rax
0x00002ace      488b442420     mov rax, qword [rsp + 0x20]
0x00002ad3      4839057ee821.  cmp qword [obj.reference_max_width], rax ; [0x221358:8]=0
0x00002ada      7d07           jge 0x2ae3
0x00002adc      48890575e821.  mov qword [obj.reference_max_width], rax ; [0x221358:8]=0
0x00002ae3      488b742410     mov rsi, qword [rsp + 0x10]
0x00002ae8      48393424       cmp qword [rsp], rsi
0x00002aec      7509           jne 0x2af7
0x00002aee      4584ed         test r13b, r13b
0x00002af1      0f8549060000   jne 0x3140
0x00002af7      488b442410     mov rax, qword [rsp + 0x10]
0x00002afc      4883c101       add rcx, 1
0x00002b00      660f6f442460   movdqa xmm0, xmmword [rsp + 0x60]
0x00002b06      48890dd3e721.  mov qword [obj.number_of_occurs], rcx   ; [0x2212e0:8]=0
0x00002b0d      4829d8         sub rax, rbx
0x00002b10      48894710       mov qword [rdi + 0x10], rax
0x00002b14      4889e8         mov rax, rbp
0x00002b17      4829d8         sub rax, rbx
0x00002b1a      48894718       mov qword [rdi + 0x18], rax
0x00002b1e      8b442438       mov eax, dword [rsp + 0x38]
0x00002b22      0f1107         movups xmmword [rdi], xmm0
0x00002b25      894728         mov dword [rdi + 0x28], eax
0x00002b28      488d0591ea21.  lea rax, obj.word_regex                 ; 0x2215c0
0x00002b2f      488b10         mov rdx, qword [rax]
0x00002b32      4885d2         test rdx, rdx
0x00002b35      0f856efeffff   jne 0x29a9
0x00002b3b      4939ec         cmp r12, rbp
0x00002b3e      0f83e4050000   jae 0x3128
0x00002b44      410fb60424     movzx eax, byte [r12]
0x00002b49      41803c0700     cmp byte [r15 + rax], 0
0x00002b4e      7418           je 0x2b68
0x00002b50      e994030000     jmp 0x2ee9
0x00002b55      0f1f00         nop dword [rax]
0x00002b58      410fb60424     movzx eax, byte [r12]
0x00002b5d      41803c0700     cmp byte [r15 + rax], 0
0x00002b62      0f8578030000   jne 0x2ee0
0x00002b68      4983c401       add r12, 1
0x00002b6c      4939ec         cmp r12, rbp
0x00002b6f      75e7           jne 0x2b58
0x00002b71      488b442418     mov rax, qword [rsp + 0x18]
0x00002b76      4c8b642450     mov r12, qword [rsp + 0x50]
0x00002b7b      488b6808       mov rbp, qword [rax + 8]
0x00002b7f      4c39e5         cmp rbp, r12
0x00002b82      48896c2450     mov qword [rsp + 0x50], rbp
0x00002b87      0f8773fdffff   ja 0x2900
0x00002b8d      488b057ce721.  mov rax, qword [obj.total_line_count]   ; [0x221310:8]=0
0x00002b94      488b742458     mov rsi, qword [rsp + 0x58]
0x00002b99      488b1560e721.  mov rdx, qword [obj.file_line_count]    ; [0x221300:8]=0
0x00002ba0      8344243801     add dword [rsp + 0x38], 1
0x00002ba5      4883c001       add rax, 1
0x00002ba9      48890432       mov qword [rdx + rsi], rax
0x00002bad      4883c608       add rsi, 8
0x00002bb1      48890558e721.  mov qword [obj.total_line_count], rax   ; [0x221310:8]=0
0x00002bb8      8b442438       mov eax, dword [rsp + 0x38]
0x00002bbc      390556e72100   cmp dword [obj.number_input_files], eax ; [0x221318:4]=0
0x00002bc2      4889742458     mov qword [rsp + 0x58], rsi
0x00002bc7      0f8f74fcffff   jg 0x2841
0x00002bcd      488b350ce721.  mov rsi, qword [obj.number_of_occurs]   ; [0x2212e0:8]=0
0x00002bd4      4885f6         test rsi, rsi
0x00002bd7      0f85c5070000   jne 0x33a2
0x00002bdd      803da6ec2100.  cmp byte [obj.auto_reference], 0        ; [0x22188a:1]=0
0x00002be4      0f8573060000   jne 0x325d
0x00002bea      803d98ec2100.  cmp byte [obj.input_reference], 0       ; [0x221889:1]=0
0x00002bf1      741e           je 0x2c11
0x00002bf3      803d8eec2100.  cmp byte [obj.right_reference], 0       ; [0x221888:1]=0
0x00002bfa      7515           jne 0x2c11
0x00002bfc      488b050de421.  mov rax, qword [obj.gap_size]           ; [0x221010:8]=3
0x00002c03      4803054ee721.  add rax, qword [obj.reference_max_width] ; [0x221358:8]=0
0x00002c0a      48290507e421.  sub qword [obj.line_width], rax         ; [0x221018:8]=72 ; "H"
0x00002c11      48833dffe321.  cmp qword [obj.line_width], 0           ; [0x221018:8]=72 ; "H"
0x00002c19      790b           jns 0x2c26
0x00002c1b      48c705f2e321.  mov qword [obj.line_width], 0           ; [0x221018:8]=72 ; "H"
0x00002c26      488b05ebe321.  mov rax, qword [obj.line_width]         ; [0x221018:8]=72 ; "H"
0x00002c2d      b902000000     mov ecx, 2
0x00002c32      488b3df7e321.  mov rdi, qword [obj.truncation_string]  ; [0x221030:8]=0x1bc8e
0x00002c39      4899           cqo
0x00002c3b      48f7f9         idiv rcx
0x00002c3e      4889c2         mov rdx, rax
0x00002c41      482b15c8e321.  sub rdx, qword [obj.gap_size]           ; [0x221010:8]=3
0x00002c48      4885ff         test rdi, rdi
0x00002c4b      4889c6         mov rsi, rax
0x00002c4e      48890573e521.  mov qword [obj.half_line_width], rax    ; [0x2211c8:8]=0
0x00002c55      4889055ce521.  mov qword [obj.keyafter_max_width], rax ; [0x2211b8:8]=0
0x00002c5c      4889155de521.  mov qword [obj.before_max_width], rdx   ; [0x2211c0:8]=0
0x00002c63      0f8468170000   je 0x43d1
0x00002c69      803f00         cmp byte [rdi], 0
0x00002c6c      0f845f170000   je 0x43d1
0x00002c72      31c0           xor eax, eax
0x00002c74      4883c9ff       or rcx, 0xffffffffffffffff
0x00002c78      f2ae           repne scasb al, byte [rdi]
0x00002c7a      4889c8         mov rax, rcx
0x00002c7d      48f7d0         not rax
0x00002c80      4883e801       sub rax, 1
0x00002c84      48890525e521.  mov qword [obj.truncation_string_length], rax ; [0x2211b0:8]=0
0x00002c8b      488b051ee521.  mov rax, qword [obj.truncation_string_length] ; [0x2211b0:8]=0
0x00002c92      4801c0         add rax, rax
0x00002c95      803d84e32100.  cmp byte [obj.gnu_extensions], 0        ; [0x221020:1]=1
0x00002c9c      0f8426170000   je 0x43c8
0x00002ca2      4829c2         sub rdx, rax
0x00002ca5      4885d2         test rdx, rdx
0x00002ca8      48891511e521.  mov qword [obj.before_max_width], rdx   ; [0x2211c0:8]=0
0x00002caf      0f888f1a0000   js 0x4744
0x00002cb5      4829c6         sub rsi, rax
0x00002cb8      488935f9e421.  mov qword [obj.keyafter_max_width], rsi ; [0x2211b8:8]=0
0x00002cbf      e81cf4ffff     call sym.imp.__ctype_b_loc
0x00002cc4      488b30         mov rsi, qword [rax]
0x00002cc7      488d0d12e521.  lea rcx, obj.edited_flag                ; 0x2211e0
0x00002cce      48890424       mov qword [rsp], rax
0x00002cd2      31d2           xor edx, edx
0x00002cd4      0f1f4000       nop dword [rax]
0x00002cd8      0fb70456       movzx eax, word [rsi + rdx*2]
0x00002cdc      66c1e80d       shr ax, 0xd
0x00002ce0      83e001         and eax, 1
0x00002ce3      880411         mov byte [rcx + rdx], al
0x00002ce6      4883c201       add rdx, 1
0x00002cea      4881fa000100.  cmp rdx, 0x100
0x00002cf1      75e5           jne 0x2cd8
0x00002cf3      8b058beb2100   mov eax, dword [obj.output_format]      ; [0x221884:4]=0
0x00002cf9      c605ece42100.  mov byte [0x002211ec], 1                ; [0x2211ec:1]=0
0x00002d00      83f802         cmp eax, 2
0x00002d03      0f84b3160000   je 0x43bc
0x00002d09      83f803         cmp eax, 3
0x00002d0c      753b           jne 0x2d49
0x00002d0e      488d15ea8a01.  lea rdx, [0x0001b7ff]                   ; "$%&#_{}\"
0x00002d15      b824000000     mov eax, 0x24                           ; '$'
0x00002d1a      4883c201       add rdx, 1
0x00002d1e      c6040101       mov byte [rcx + rax], 1
0x00002d22      0fb602         movzx eax, byte [rdx]
0x00002d25      84c0           test al, al
0x00002d27      75f1           jne 0x2d1a
0x00002d29      488d15108d01.  lea rdx, obj.diacrit_diac               ; 0x1ba40
0x00002d30      b880000000     mov eax, 0x80
0x00002d35      803c0200       cmp byte [rdx + rax], 0
0x00002d39      0f950401       setne byte [rcx + rax]
0x00002d3d      4883c001       add rax, 1
0x00002d41      483d00010000   cmp rax, 0x100
0x00002d47      75ec           jne 0x2d35
0x00002d49      48833d8fe521.  cmp qword [obj.number_of_occurs], 0     ; [0x2212e0:8]=0
0x00002d51      48c70544e421.  mov qword [obj.tail], 0                 ; [0x2211a0:8]=0
0x00002d5c      48c70541e421.  mov qword [0x002211a8], 0               ; [0x2211a8:8]=0
0x00002d67      c60522e42100.  mov byte [obj.tail_truncation], 0       ; [0x221190:1]=0
0x00002d6e      48c705c7e321.  mov qword [obj.head], 0                 ; [0x221140:8]=0
0x00002d79      48c705c4e321.  mov qword [0x00221148], 0               ; [0x221148:8]=0
0x00002d84      c605a5e32100.  mov byte [obj.head_truncation], 0       ; [0x221130:1]=0
0x00002d8b      4c8b255ee521.  mov r12, qword [obj.occurs_table]       ; [0x2212f0:8]=0
0x00002d92      0f8ea10e0000   jle 0x3c39
0x00002d98      48c744241000.  mov qword [rsp + 0x10], 0
0x00002da1      498b1424       mov rdx, qword [r12]
0x00002da5      498b4c2410     mov rcx, qword [r12 + 0x10]
0x00002daa      488d05afe321.  lea rax, obj.keyafter                   ; 0x221160
0x00002db1      498b5c2408     mov rbx, qword [r12 + 8]
0x00002db6      498b6c2418     mov rbp, qword [r12 + 0x18]
0x00002dbb      488910         mov qword [rax], rdx
0x00002dbe      488d040a       lea rax, [rdx + rcx]
0x00002dc2      4801d3         add rbx, rdx
0x00002dc5      4801d5         add rbp, rdx
0x00002dc8      4889442418     mov qword [rsp + 0x18], rax
0x00002dcd      4963442428     movsxd rax, dword [r12 + 0x28]
0x00002dd2      48891d8fe321.  mov qword [0x00221168], rbx             ; [0x221168:8]=0
0x00002dd9      48c1e004       shl rax, 4
0x00002ddd      48030514e521.  add rax, qword [obj.text_buffers]       ; [0x2212f8:8]=0
0x00002de4      4c8b28         mov r13, qword [rax]
0x00002de7      4c8b7008       mov r14, qword [rax + 8]
0x00002deb      488b05c6e321.  mov rax, qword [obj.keyafter_max_width] ; [0x2211b8:8]=0
0x00002df2      4801c2         add rdx, rax
0x00002df5      4839eb         cmp rbx, rbp
0x00002df8      0f83f7050000   jae 0x33f5
0x00002dfe      4839d3         cmp rbx, rdx
0x00002e01      7667           jbe 0x2e6a
0x00002e03      e9500f0000     jmp 0x3d58
0x00002e08      0f1f84000000.  nop dword [rax + rax]
0x00002e10      4889ea         mov rdx, rbp
0x00002e13      488d3daee721.  lea rdi, [0x002215c8]
0x00002e1a      4531c0         xor r8d, r8d
0x00002e1d      4829da         sub rdx, rbx
0x00002e20      31c9           xor ecx, ecx
0x00002e22      4889de         mov rsi, rbx
0x00002e25      e856570100     call sym.rpl_re_match
0x00002e2a      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00002e2e      0f84f6160000   je 0x452a
0x00002e34      4883f8ff       cmp rax, 0xffffffffffffffff
0x00002e38      ba01000000     mov edx, 1
0x00002e3d      480f44c2       cmove rax, rdx
0x00002e41      4801c3         add rbx, rax
0x00002e44      488b056de321.  mov rax, qword [obj.keyafter_max_width] ; [0x2211b8:8]=0
0x00002e4b      4839dd         cmp rbp, rbx
0x00002e4e      0f869c050000   jbe 0x33f0
0x00002e54      488d3505e321.  lea rsi, obj.keyafter                   ; 0x221160
0x00002e5b      488b16         mov rdx, qword [rsi]
0x00002e5e      4801c2         add rdx, rax
0x00002e61      4839d3         cmp rbx, rdx
0x00002e64      0f87e90e0000   ja 0x3d53
0x00002e6a      488d354fe721.  lea rsi, obj.word_regex                 ; 0x2215c0
0x00002e71      48891df0e221.  mov qword [0x00221168], rbx             ; [0x221168:8]=0
0x00002e78      48833e00       cmp qword [rsi], 0
0x00002e7c      7592           jne 0x2e10
0x00002e7e      0fb613         movzx edx, byte [rbx]
0x00002e81      488d35f8e421.  lea rsi, obj.word_fastmap               ; 0x221380
0x00002e88      803c1600       cmp byte [rsi + rdx], 0
0x00002e8c      0f852e050000   jne 0x33c0
0x00002e92      4883c301       add rbx, 1
0x00002e96      ebb3           jmp 0x2e4b
0x00002e98      0f1f84000000.  nop dword [rax + rax]
0x00002ea0      84d2           test dl, dl
0x00002ea2      4c89eb         mov rbx, r13
0x00002ea5      4c89e7         mov rdi, r12
0x00002ea8      4189ed         mov r13d, ebp
0x00002eab      4c8b642430     mov r12, qword [rsp + 0x30]
0x00002eb0      488b6c2428     mov rbp, qword [rsp + 0x28]
0x00002eb5      7409           je 0x2ec0
0x00002eb7      48893d52e421.  mov qword [obj.total_line_count], rdi   ; [0x221310:8]=0
0x00002ebe      6690           nop
0x00002ec0      4939de         cmp r14, rbx
0x00002ec3      0f8666fbffff   jbe 0x2a2f
0x00002ec9      488d05f0e621.  lea rax, obj.word_regex                 ; 0x2215c0
0x00002ed0      488b10         mov rdx, qword [rax]
0x00002ed3      e9c8faffff     jmp 0x29a0
0x00002ed8      0f1f84000000.  nop dword [rax + rax]
0x00002ee0      4939ec         cmp r12, rbp
0x00002ee3      0f8345020000   jae 0x312e
0x00002ee9      410fb60424     movzx eax, byte [r12]
0x00002eee      41803c0700     cmp byte [r15 + rax], 0
0x00002ef3      0f8435020000   je 0x312e
0x00002ef9      4c89e0         mov rax, r12
0x00002efc      eb10           jmp 0x2f0e
0x00002efe      6690           nop
0x00002f00      0fb610         movzx edx, byte [rax]
0x00002f03      41803c1700     cmp byte [r15 + rdx], 0
0x00002f08      0f84aa010000   je 0x30b8
0x00002f0e      4883c001       add rax, 1
0x00002f12      4839e8         cmp rax, rbp
0x00002f15      75e9           jne 0x2f00
0x00002f17      4c89e3         mov rbx, r12
0x00002f1a      4989ec         mov r12, rbp
0x00002f1d      e9dcfaffff     jmp 0x29fe
0x00002f22      660f1f440000   nop word [rax + rax]
0x00002f28      4939de         cmp r14, rbx
0x00002f2b      7393           jae 0x2ec0
0x00002f2d      488b3ddce321.  mov rdi, qword [obj.total_line_count]   ; [0x221310:8]=0
0x00002f34      48896c2428     mov qword [rsp + 0x28], rbp
0x00002f39      31d2           xor edx, edx
0x00002f3b      4c89642430     mov qword [rsp + 0x30], r12
0x00002f40      4489ed         mov ebp, r13d
0x00002f43      4989dd         mov r13, rbx
0x00002f46      4989fc         mov r12, rdi
0x00002f49      eb0e           jmp 0x2f59
0x00002f4b      0f1f440000     nop dword [rax + rax]
0x00002f50      4d39ee         cmp r14, r13
0x00002f53      0f8347ffffff   jae 0x2ea0
0x00002f59      410fb606       movzx eax, byte [r14]
0x00002f5d      4983c601       add r14, 1
0x00002f61      3c0a           cmp al, 0xa
0x00002f63      75eb           jne 0x2f50
0x00002f65      488b442418     mov rax, qword [rsp + 0x18]
0x00002f6a      4983c401       add r12, 1
0x00002f6e      488b5808       mov rbx, qword [rax + 8]
0x00002f72      4c39f3         cmp rbx, r14
0x00002f75      0f8675020000   jbe 0x31f0
0x00002f7b      e860f1ffff     call sym.imp.__ctype_b_loc
0x00002f80      488b08         mov rcx, qword [rax]
0x00002f83      4c89f0         mov rax, r14
0x00002f86      eb11           jmp 0x2f99
0x00002f88      0f1f84000000.  nop dword [rax + rax]
0x00002f90      4883c001       add rax, 1
0x00002f94      4839d8         cmp rax, rbx
0x00002f97      740a           je 0x2fa3
0x00002f99      0fb610         movzx edx, byte [rax]
0x00002f9c      f644510120     test byte [rcx + rdx*2 + 1], 0x20
0x00002fa1      74ed           je 0x2f90
0x00002fa3      4889c6         mov rsi, rax
0x00002fa6      4c29f6         sub rsi, r14
0x00002fa9      4889742420     mov qword [rsp + 0x20], rsi
0x00002fae      4c893424       mov qword [rsp], r14
0x00002fb2      89ea           mov edx, ebp
0x00002fb4      4989c6         mov r14, rax
0x00002fb7      eb97           jmp 0x2f50
0x00002fb9      0f1f80000000.  nop dword [rax]
0x00002fc0      4939de         cmp r14, rbx
0x00002fc3      4c8b1546e321.  mov r10, qword [obj.total_line_count]   ; [0x221310:8]=0
0x00002fca      0f83c4000000   jae 0x3094
0x00002fd0      48896c2428     mov qword [rsp + 0x28], rbp
0x00002fd5      4c89642430     mov qword [rsp + 0x30], r12
0x00002fda      31f6           xor esi, esi
0x00002fdc      4d89d4         mov r12, r10
0x00002fdf      4c89542448     mov qword [rsp + 0x48], r10
0x00002fe4      44886c243f     mov byte [rsp + 0x3f], r13b
0x00002fe9      4d89f2         mov r10, r14
0x00002fec      48894c2440     mov qword [rsp + 0x40], rcx
0x00002ff1      4489c5         mov ebp, r8d
0x00002ff4      4989fe         mov r14, rdi
0x00002ff7      eb0c           jmp 0x3005
0x00002ff9      0f1f80000000.  nop dword [rax]
0x00003000      4939da         cmp r10, rbx
0x00003003      7363           jae 0x3068
0x00003005      410fb602       movzx eax, byte [r10]
0x00003009      4983c201       add r10, 1
0x0000300d      3c0a           cmp al, 0xa
0x0000300f      75ef           jne 0x3000
0x00003011      488b442418     mov rax, qword [rsp + 0x18]
0x00003016      4983c401       add r12, 1
0x0000301a      4c8b6808       mov r13, qword [rax + 8]
0x0000301e      4d39d5         cmp r13, r10
0x00003021      0f86da010000   jbe 0x3201
0x00003027      4c891424       mov qword [rsp], r10
0x0000302b      e8b0f0ffff     call sym.imp.__ctype_b_loc
0x00003030      4c8b1424       mov r10, qword [rsp]
0x00003034      4c8b00         mov r8, qword [rax]
0x00003037      4c89d0         mov rax, r10
0x0000303a      eb0d           jmp 0x3049
0x0000303c      0f1f4000       nop dword [rax]
0x00003040      4883c001       add rax, 1
0x00003044      4c39e8         cmp rax, r13
0x00003047      740b           je 0x3054
0x00003049      0fb610         movzx edx, byte [rax]
0x0000304c      41f644500120   test byte [r8 + rdx*2 + 1], 0x20
0x00003052      74ec           je 0x3040
0x00003054      4c891424       mov qword [rsp], r10
0x00003058      4989c2         mov r10, rax
0x0000305b      89ee           mov esi, ebp
0x0000305d      4939da         cmp r10, rbx
0x00003060      72a3           jb 0x3005
0x00003062      660f1f440000   nop word [rax + rax]
0x00003068      4084f6         test sil, sil
0x0000306b      4c89f7         mov rdi, r14
0x0000306e      4d89e1         mov r9, r12
0x00003071      4d89d6         mov r14, r10
0x00003074      488b6c2428     mov rbp, qword [rsp + 0x28]
0x00003079      440fb66c243f   movzx r13d, byte [rsp + 0x3f]
0x0000307f      488b4c2440     mov rcx, qword [rsp + 0x40]
0x00003084      4c8b642430     mov r12, qword [rsp + 0x30]
0x00003089      4c8b542448     mov r10, qword [rsp + 0x48]
0x0000308e      0f8597170000   jne 0x482b
0x00003094      4c895720       mov qword [rdi + 0x20], r10
0x00003098      e946faffff     jmp 0x2ae3
0x0000309d      0f1f00         nop dword [rax]
0x000030a0      488d0519e521.  lea rax, obj.word_regex                 ; 0x2215c0
0x000030a7      488b10         mov rdx, qword [rax]
0x000030aa      4c8d6301       lea r12, [rbx + 1]
0x000030ae      e9edf8ffff     jmp 0x29a0
0x000030b3      0f1f440000     nop dword [rax + rax]
0x000030b8      4c89e3         mov rbx, r12
0x000030bb      4989c4         mov r12, rax
0x000030be      e932f9ffff     jmp 0x29f5
0x000030c3      0f1f440000     nop dword [rax + rax]
0x000030c8      4d85c0         test r8, r8
0x000030cb      0f84e7000000   je 0x31b8
0x000030d1      48b8c6711cc7.  movabs rax, 0x1c71c71c71c71c6
0x000030db      4839c1         cmp rcx, rax
0x000030de      0f8701010000   ja 0x31e5
0x000030e4      4889c8         mov rax, rcx
0x000030e7      48d1e8         shr rax, 1
0x000030ea      488d4c0101     lea rcx, [rcx + rax + 1]
0x000030ef      488d3449       lea rsi, [rcx + rcx*2]
0x000030f3      4c89c7         mov rdi, r8
0x000030f6      48890debe121.  mov qword [obj.occurs_alloc], rcx       ; [0x2212e8:8]=0
0x000030fd      48c1e604       shl rsi, 4
0x00003101      e81a680000     call sym.xrealloc
0x00003106      488b0dd3e121.  mov rcx, qword [obj.number_of_occurs]   ; [0x2212e0:8]=0
0x0000310d      4989c0         mov r8, rax
0x00003110      488905d9e121.  mov qword [obj.occurs_table], rax       ; [0x2212f0:8]=0
0x00003117      440fb62d6ae7.  movzx r13d, byte [obj.input_reference]  ; [0x221889:1]=0
0x0000311f      e97af9ffff     jmp 0x2a9e
0x00003124      0f1f4000       nop dword [rax]
0x00003128      0f8443faffff   je 0x2b71
0x0000312e      4c89e3         mov rbx, r12
0x00003131      e974ffffff     jmp 0x30aa
0x00003136      662e0f1f8400.  nop word cs:[rax + rax]
0x00003140      4839ee         cmp rsi, rbp
0x00003143      4989f5         mov r13, rsi
0x00003146      0f83abf9ffff   jae 0x2af7
0x0000314c      48897c2428     mov qword [rsp + 0x28], rdi
0x00003151      48894c2410     mov qword [rsp + 0x10], rcx
0x00003156      e885efffff     call sym.imp.__ctype_b_loc
0x0000315b      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00003160      488b00         mov rax, qword [rax]
0x00003163      4c89ea         mov rdx, r13
0x00003166      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000316b      eb0c           jmp 0x3179
0x0000316d      0f1f00         nop dword [rax]
0x00003170      4883c201       add rdx, 1
0x00003174      4839ea         cmp rdx, rbp
0x00003177      7432           je 0x31ab
0x00003179      0fb632         movzx esi, byte [rdx]
0x0000317c      f644700120     test byte [rax + rsi*2 + 1], 0x20
0x00003181      74ed           je 0x3170
0x00003183      4839ea         cmp rdx, rbp
0x00003186      4889542410     mov qword [rsp + 0x10], rdx
0x0000318b      0f8366f9ffff   jae 0x2af7
0x00003191      0f1f80000000.  nop dword [rax]
0x00003198      4883c201       add rdx, 1
0x0000319c      4839ea         cmp rdx, rbp
0x0000319f      740a           je 0x31ab
0x000031a1      0fb632         movzx esi, byte [rdx]
0x000031a4      f644700120     test byte [rax + rsi*2 + 1], 0x20
0x000031a9      75ed           jne 0x3198
0x000031ab      4889542410     mov qword [rsp + 0x10], rdx
0x000031b0      e942f9ffff     jmp 0x2af7
0x000031b5      0f1f00         nop dword [rax]
0x000031b8      4885c9         test rcx, rcx
0x000031bb      b802000000     mov eax, 2
0x000031c0      ba30000000     mov edx, 0x30                           ; '0'
0x000031c5      480f44c8       cmove rcx, rax
0x000031c9      4889d0         mov rax, rdx
0x000031cc      31f6           xor esi, esi
0x000031ce      48f7e1         mul rcx
0x000031d1      0f804a160000   jo 0x4821
0x000031d7      4885c0         test rax, rax
0x000031da      7809           js 0x31e5
0x000031dc      4885f6         test rsi, rsi
0x000031df      0f840affffff   je 0x30ef
0x000031e5      e826690000     call sym.xalloc_die
0x000031ea      660f1f440000   nop word [rax + rax]
0x000031f0      4c89f0         mov rax, r14
0x000031f3      48c744242000.  mov qword [rsp + 0x20], 0
0x000031fc      e9adfdffff     jmp 0x2fae
0x00003201      89ee           mov esi, ebp
0x00003203      4c891424       mov qword [rsp], r10
0x00003207      e9f4fdffff     jmp 0x3000
0x0000320c      488b442418     mov rax, qword [rsp + 0x18]
0x00003211      4d89e6         mov r14, r12
0x00003214      48c744242000.  mov qword [rsp + 0x20], 0
0x0000321d      488b6808       mov rbp, qword [rax + 8]
0x00003221      e9bef6ffff     jmp 0x28e4
0x00003226      488d3d93e321.  lea rdi, obj.word_regex                 ; 0x2215c0
0x0000322d      e87e1a0000     call sym.compile_regex
0x00003232      488b3d3fe621.  mov rdi, qword [obj.break_file]         ; [0x221878:8]=0
0x00003239      4885ff         test rdi, rdi
0x0000323c      0f8462f5ffff   je 0x27a4
0x00003242      e9f7f4ffff     jmp 0x273e
0x00003247      4c89e3         mov rbx, r12
0x0000324a      4889d8         mov rax, rbx
0x0000324d      4989de         mov r14, rbx
0x00003250      4c29e0         sub rax, r12
0x00003253      4889442420     mov qword [rsp + 0x20], rax
0x00003258      e987f6ffff     jmp 0x28e4
0x0000325d      48c705f0e021.  mov qword [obj.reference_max_width], 0  ; [0x221358:8]=0
0x00003268      4531ed         xor r13d, r13d
0x0000326b      4c8d642470     lea r12, [rsp + 0x70]
0x00003270      488d2d298601.  lea rbp, [0x0001b8a0]                   ; "%ld"
0x00003277      4883cbff       or rbx, 0xffffffffffffffff
0x0000327b      eb73           jmp 0x32f0
0x0000327d      488b057ce021.  mov rax, qword [obj.file_line_count]    ; [0x221300:8]=0
0x00003284      4d85ed         test r13, r13
0x00003287      4e8d34ed0000.  lea r14, [r13*8]
0x0000328f      4a8b34e8       mov rsi, qword [rax + r13*8]
0x00003293      4c8d4601       lea r8, [rsi + 1]
0x00003297      7405           je 0x329e
0x00003299      4e2b4430f8     sub r8, qword [rax + r14 - 8]
0x0000329e      ba15000000     mov edx, 0x15
0x000032a3      4c89e7         mov rdi, r12
0x000032a6      31c0           xor eax, eax
0x000032a8      4889e9         mov rcx, rbp
0x000032ab      be01000000     mov esi, 1
0x000032b0      e84beeffff     call sym.imp.__sprintf_chk
0x000032b5      89c2           mov edx, eax
0x000032b7      488b054ae021.  mov rax, qword [obj.input_file_name]    ; [0x221308:8]=0
0x000032be      4a8b3c30       mov rdi, qword [rax + r14]
0x000032c2      4863c2         movsxd rax, edx
0x000032c5      4885ff         test rdi, rdi
0x000032c8      7412           je 0x32dc
0x000032ca      31c0           xor eax, eax
0x000032cc      4889d9         mov rcx, rbx
0x000032cf      f2ae           repne scasb al, byte [rdi]
0x000032d1      4863c2         movsxd rax, edx
0x000032d4      48f7d1         not rcx
0x000032d7      488d4401ff     lea rax, [rcx + rax - 1]
0x000032dc      48390575e021.  cmp qword [obj.reference_max_width], rax ; [0x221358:8]=0
0x000032e3      7d07           jge 0x32ec
0x000032e5      4889056ce021.  mov qword [obj.reference_max_width], rax ; [0x221358:8]=0
0x000032ec      4983c501       add r13, 1
0x000032f0      48630521e021.  movsxd rax, dword [obj.number_input_files] ; [0x221318:4]=0
0x000032f7      4939c5         cmp r13, rax
0x000032fa      7281           jb 0x327d
0x000032fc      488b0555e021.  mov rax, qword [obj.reference_max_width] ; [0x221358:8]=0
0x00003303      488d5001       lea rdx, [rax + 1]
0x00003307      488d7802       lea rdi, [rax + 2]
0x0000330b      48891546e021.  mov qword [obj.reference_max_width], rdx ; [0x221358:8]=0
0x00003312      e8a9650000     call sym.xmalloc
0x00003317      803d6ce52100.  cmp byte [obj.auto_reference], 0        ; [0x22188a:1]=0
0x0000331e      488905fbdd21.  mov qword [obj.reference], rax          ; [0x221120:8]=0
0x00003325      0f85c8f8ffff   jne 0x2bf3
0x0000332b      e9baf8ffff     jmp 0x2bea
0x00003330      48c70535e521.  mov qword [obj.only_file], 0            ; [0x221870:8]=0
0x0000333b      e9b0f4ffff     jmp 0x27f0
0x00003340      48c7051de521.  mov qword [obj.ignore_file], 0          ; [0x221868:8]=0
0x0000334b      e97af4ffff     jmp 0x27ca
0x00003350      803dc9dc2100.  cmp byte [obj.gnu_extensions], 0        ; [0x221020:1]=1
0x00003357      0f84f9110000   je 0x4556
0x0000335d      e87eedffff     call sym.imp.__ctype_b_loc
0x00003362      488d3517e021.  lea rsi, obj.word_fastmap               ; 0x221380
0x00003369      31c9           xor ecx, ecx
0x0000336b      488b10         mov rdx, qword [rax]
0x0000336e      4883c601       add rsi, 1
0x00003372      0fb7140a       movzx edx, word [rdx + rcx]
0x00003376      4883c102       add rcx, 2
0x0000337a      66c1ea0a       shr dx, 0xa
0x0000337e      83e201         and edx, 1
0x00003381      8856ff         mov byte [rsi - 1], dl
0x00003384      4881f9000200.  cmp rcx, 0x200
0x0000338b      75de           jne 0x336b
0x0000338d      e912f4ffff     jmp 0x27a4
0x00003392      48c70583e321.  mov qword [obj.context_regex], 0        ; [0x221720:8]=0
0x0000339d      e97ef3ffff     jmp 0x2720
0x000033a2      488b3d47df21.  mov rdi, qword [obj.occurs_table]       ; [0x2212f0:8]=0
0x000033a9      488d0d702000.  lea rcx, sym.compare_occurs             ; 0x5420 ; "USH\x89\xfdH\x89\xf3\xe8#\xf5\xff\xff\x85\xc0u\x0fH\x8b\x03H9E"
0x000033b0      ba30000000     mov edx, 0x30                           ; '0'
0x000033b5      e836e9ffff     call sym.imp.qsort
0x000033ba      e91ef8ffff     jmp 0x2bdd
0x000033bf      90             nop
0x000033c0      4839dd         cmp rbp, rbx
0x000033c3      771f           ja 0x33e4
0x000033c5      eb29           jmp 0x33f0
0x000033c7      660f1f840000.  nop word [rax + rax]
0x000033d0      0fb613         movzx edx, byte [rbx]
0x000033d3      488d35a6df21.  lea rsi, obj.word_fastmap               ; 0x221380
0x000033da      803c1600       cmp byte [rsi + rdx], 0
0x000033de      0f8470faffff   je 0x2e54
0x000033e4      4883c301       add rbx, 1
0x000033e8      4839dd         cmp rbp, rbx
0x000033eb      75e3           jne 0x33d0
0x000033ed      4889eb         mov rbx, rbp
0x000033f0      498b4c2410     mov rcx, qword [r12 + 0x10]
0x000033f5      488d3564dd21.  lea rsi, obj.keyafter                   ; 0x221160
0x000033fc      488b36         mov rsi, qword [rsi]
0x000033ff      4801f0         add rax, rsi
0x00003402      4839c3         cmp rbx, rax
0x00003405      7707           ja 0x340e
0x00003407      48891d5add21.  mov qword [0x00221168], rbx             ; [0x221168:8]=0
0x0000340e      31ff           xor edi, edi
0x00003410      48833d18dc21.  cmp qword [obj.truncation_string], 0    ; [0x221030:8]=0x1bc8e
0x00003418      488b1549dd21.  mov rdx, qword [0x00221168]             ; [0x221168:8]=0
0x0000341f      4889d0         mov rax, rdx
0x00003422      7409           je 0x342d
0x00003424      31ff           xor edi, edi
0x00003426      4839d5         cmp rbp, rdx
0x00003429      400f97c7       seta dil
0x0000342d      40883d1cdd21.  mov byte [obj.keyafter_truncation], dil ; [0x221150:1]=0
0x00003434      802515dd2100.  and byte [obj.keyafter_truncation], 1   ; [0x221150:1]=0
0x0000343b      4839d6         cmp rsi, rdx
0x0000343e      7332           jae 0x3472
0x00003440      488b3c24       mov rdi, qword [rsp]
0x00003444      4c8b07         mov r8, qword [rdi]
0x00003447      31ff           xor edi, edi
0x00003449      eb12           jmp 0x345d
0x0000344b      4883e801       sub rax, 1
0x0000344f      bf01000000     mov edi, 1
0x00003454      4839f0         cmp rax, rsi
0x00003457      0f84b8130000   je 0x4815
0x0000345d      0fb650ff       movzx edx, byte [rax - 1]
0x00003461      41f644500120   test byte [r8 + rdx*2 + 1], 0x20
0x00003467      75e2           jne 0x344b
0x00003469      4084ff         test dil, dil
0x0000346c      0f8588130000   jne 0x47fa
0x00003472      488b15e7de21.  mov rdx, qword [obj.maximum_word_length] ; [0x221360:8]=0
0x00003479      48031548dd21.  add rdx, qword [obj.half_line_width]    ; [0x2211c8:8]=0
0x00003480      4889c8         mov rax, rcx
0x00003483      48f7d8         neg rax
0x00003486      4839d0         cmp rax, rdx
0x00003489      0f8ebb080000   jle 0x3d4a
0x0000348f      488d052ae121.  lea rax, obj.word_regex                 ; 0x2215c0
0x00003496      4889f3         mov rbx, rsi
0x00003499      4829d3         sub rbx, rdx
0x0000349c      48833800       cmp qword [rax], 0
0x000034a0      0f84240d0000   je 0x41ca
0x000034a6      488d7808       lea rdi, [rax + 8]
0x000034aa      4531c0         xor r8d, r8d
0x000034ad      31c9           xor ecx, ecx
0x000034af      4889de         mov rsi, rbx
0x000034b2      e8c9500100     call sym.rpl_re_match
0x000034b7      4883f8fe       cmp rax, 0xfffffffffffffffe
0x000034bb      0f8469100000   je 0x452a
0x000034c1      4883f8ff       cmp rax, 0xffffffffffffffff
0x000034c5      7505           jne 0x34cc
0x000034c7      b801000000     mov eax, 1
0x000034cc      4801c3         add rbx, rax
0x000034cf      488d058adc21.  lea rax, obj.keyafter                   ; 0x221160
0x000034d6      4c8d3da3dc21.  lea r15, obj.before                     ; 0x221180
0x000034dd      48891d9cdc21.  mov qword [obj.before], rbx             ; [0x221180:8]=0
0x000034e4      488b00         mov rax, qword [rax]
0x000034e7      4839c3         cmp rbx, rax
0x000034ea      48890597dc21.  mov qword [0x00221188], rax             ; [0x221188:8]=0
0x000034f1      7330           jae 0x3523
0x000034f3      488b3424       mov rsi, qword [rsp]
0x000034f7      31c9           xor ecx, ecx
0x000034f9      488b36         mov rsi, qword [rsi]
0x000034fc      eb12           jmp 0x3510
0x000034fe      4883e801       sub rax, 1
0x00003502      b901000000     mov ecx, 1
0x00003507      4839c3         cmp rbx, rax
0x0000350a      0f84de120000   je 0x47ee
0x00003510      0fb650ff       movzx edx, byte [rax - 1]
0x00003514      f644560120     test byte [rsi + rdx*2 + 1], 0x20
0x00003519      75e3           jne 0x34fe
0x0000351b      84c9           test cl, cl
0x0000351d      0f85e0110000   jne 0x4703
0x00003523      488b0d96dc21.  mov rcx, qword [obj.before_max_width]   ; [0x2211c0:8]=0
0x0000352a      488b1557dc21.  mov rdx, qword [0x00221188]             ; [0x221188:8]=0
0x00003531      4889de         mov rsi, rbx
0x00003534      488d040b       lea rax, [rbx + rcx]
0x00003538      4839c2         cmp rdx, rax
0x0000353b      7659           jbe 0x3596
0x0000353d      488d3d7ce021.  lea rdi, obj.word_regex                 ; 0x2215c0
0x00003544      48833f00       cmp qword [rdi], 0
0x00003548      0f84d5010000   je 0x3723
0x0000354e      4829f2         sub rdx, rsi
0x00003551      4531c0         xor r8d, r8d
0x00003554      31c9           xor ecx, ecx
0x00003556      4883c708       add rdi, 8
0x0000355a      e821500100     call sym.rpl_re_match
0x0000355f      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00003563      0f84c10f0000   je 0x452a
0x00003569      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000356d      ba01000000     mov edx, 1
0x00003572      488b0d47dc21.  mov rcx, qword [obj.before_max_width]   ; [0x2211c0:8]=0
0x00003579      480f44c2       cmove rax, rdx
0x0000357d      490307         add rax, qword [r15]
0x00003580      488b1501dc21.  mov rdx, qword [0x00221188]             ; [0x221188:8]=0
0x00003587      4889c6         mov rsi, rax
0x0000358a      498907         mov qword [r15], rax
0x0000358d      488d0408       lea rax, [rax + rcx]
0x00003591      4839c2         cmp rdx, rax
0x00003594      77a7           ja 0x353d
0x00003596      48833d92da21.  cmp qword [obj.truncation_string], 0    ; [0x221030:8]=0x1bc8e
0x0000359e      0f8417080000   je 0x3dbb
0x000035a4      4939f5         cmp r13, rsi
0x000035a7      0f83340e0000   jae 0x43e1
0x000035ad      488b0424       mov rax, qword [rsp]
0x000035b1      4c8b00         mov r8, qword [rax]
0x000035b4      4889f0         mov rax, rsi
0x000035b7      eb0d           jmp 0x35c6
0x000035b9      4883e801       sub rax, 1
0x000035bd      4939c5         cmp r13, rax
0x000035c0      0f8401080000   je 0x3dc7
0x000035c6      0fb678ff       movzx edi, byte [rax - 1]
0x000035ca      41f644780120   test byte [r8 + rdi*2 + 1], 0x20
0x000035d0      75e7           jne 0x35b9
0x000035d2      4839442418     cmp qword [rsp + 0x18], rax
0x000035d7      0f920592db21.  setb byte [obj.before_truncation]
0x000035de      4939f6         cmp r14, rsi
0x000035e1      7631           jbe 0x3614
0x000035e3      488b0424       mov rax, qword [rsp]
0x000035e7      31ff           xor edi, edi
0x000035e9      4c8b00         mov r8, qword [rax]
0x000035ec      eb12           jmp 0x3600
0x000035ee      4883c601       add rsi, 1
0x000035f2      bf01000000     mov edi, 1
0x000035f7      4939f6         cmp r14, rsi
0x000035fa      0f8467070000   je 0x3d67
0x00003600      0fb606         movzx eax, byte [rsi]
0x00003603      41f644400120   test byte [r8 + rax*2 + 1], 0x20
0x00003609      75e3           jne 0x35ee
0x0000360b      4084ff         test dil, dil
0x0000360e      0f8558110000   jne 0x476c
0x00003614      4829f2         sub rdx, rsi
0x00003617      4829d1         sub rcx, rdx
0x0000361a      482b0defd921.  sub rcx, qword [obj.gap_size]           ; [0x221010:8]=3
0x00003621      4885c9         test rcx, rcx
0x00003624      4989ca         mov r10, rcx
0x00003627      0f8e46070000   jle 0x3d73
0x0000362d      488b1534db21.  mov rdx, qword [0x00221168]             ; [0x221168:8]=0
0x00003634      4c8d1d65db21.  lea r11, obj.tail                       ; 0x2211a0
0x0000363b      4939d6         cmp r14, rdx
0x0000363e      4989d1         mov r9, rdx
0x00003641      48891558db21.  mov qword [obj.tail], rdx               ; [0x2211a0:8]=0
0x00003648      7630           jbe 0x367a
0x0000364a      488b0424       mov rax, qword [rsp]
0x0000364e      31c9           xor ecx, ecx
0x00003650      488b30         mov rsi, qword [rax]
0x00003653      eb12           jmp 0x3667
0x00003655      4983c101       add r9, 1
0x00003659      b901000000     mov ecx, 1
0x0000365e      4d39ce         cmp r14, r9
0x00003661      0f8435070000   je 0x3d9c
0x00003667      410fb601       movzx eax, byte [r9]
0x0000366b      f644460120     test byte [rsi + rax*2 + 1], 0x20
0x00003670      75e3           jne 0x3655
0x00003672      84c9           test cl, cl
0x00003674      0f8522070000   jne 0x3d9c
0x0000367a      488b051fdb21.  mov rax, qword [obj.tail]               ; [0x2211a0:8]=0
0x00003681      4c890d20db21.  mov qword [0x002211a8], r9              ; [0x2211a8:8]=0
0x00003688      4c01d0         add rax, r10
0x0000368b      4c39cd         cmp rbp, r9
0x0000368e      0f862f010000   jbe 0x37c3
0x00003694      4939c1         cmp r9, rax
0x00003697      0f8312070000   jae 0x3daf
0x0000369d      4d89d7         mov r15, r10
0x000036a0      4d89ce         mov r14, r9
0x000036a3      eb53           jmp 0x36f8
0x000036a5      4889ea         mov rdx, rbp
0x000036a8      488d7808       lea rdi, [rax + 8]
0x000036ac      4531c0         xor r8d, r8d
0x000036af      4c29f2         sub rdx, r14
0x000036b2      31c9           xor ecx, ecx
0x000036b4      4c89f6         mov rsi, r14
0x000036b7      4c895c2408     mov qword [rsp + 8], r11
0x000036bc      e8bf4e0100     call sym.rpl_re_match
0x000036c1      4883f8fe       cmp rax, 0xfffffffffffffffe
0x000036c5      0f845f0e0000   je 0x452a
0x000036cb      4883f8ff       cmp rax, 0xffffffffffffffff
0x000036cf      ba01000000     mov edx, 1
0x000036d4      4c8b5c2408     mov r11, qword [rsp + 8]
0x000036d9      480f44c2       cmove rax, rdx
0x000036dd      4901c6         add r14, rax
0x000036e0      4c39f5         cmp rbp, r14
0x000036e3      0f86c10c0000   jbe 0x43aa
0x000036e9      498b03         mov rax, qword [r11]
0x000036ec      4c01f8         add rax, r15
0x000036ef      4939c6         cmp r14, rax
0x000036f2      0f83b0060000   jae 0x3da8
0x000036f8      488d05c1de21.  lea rax, obj.word_regex                 ; 0x2215c0
0x000036ff      4c8935a2da21.  mov qword [0x002211a8], r14             ; [0x2211a8:8]=0
0x00003706      48833800       cmp qword [rax], 0
0x0000370a      7599           jne 0x36a5
0x0000370c      410fb606       movzx eax, byte [r14]
0x00003710      488d3569dc21.  lea rsi, obj.word_fastmap               ; 0x221380
0x00003717      803c0600       cmp byte [rsi + rax], 0
0x0000371b      756b           jne 0x3788
0x0000371d      4983c601       add r14, 1
0x00003721      ebbd           jmp 0x36e0
0x00003723      0fb63e         movzx edi, byte [rsi]
0x00003726      4c8d1d53dc21.  lea r11, obj.word_fastmap               ; 0x221380
0x0000372d      41803c3b00     cmp byte [r11 + rdi], 0
0x00003732      7510           jne 0x3744
0x00003734      4883c601       add rsi, 1
0x00003738      498937         mov qword [r15], rsi
0x0000373b      488d040e       lea rax, [rsi + rcx]
0x0000373f      e9f4fdffff     jmp 0x3538
0x00003744      4839d6         cmp rsi, rdx
0x00003747      0f83ebfdffff   jae 0x3538
0x0000374d      488d4601       lea rax, [rsi + 1]
0x00003751      eb1e           jmp 0x3771
0x00003753      0f1f440000     nop dword [rax + rax]
0x00003758      0fb63e         movzx edi, byte [rsi]
0x0000375b      4c8d1d1edc21.  lea r11, obj.word_fastmap               ; 0x221380
0x00003762      488d4001       lea rax, [rax + 1]
0x00003766      41803c3b00     cmp byte [r11 + rdi], 0
0x0000376b      0f84aa0f0000   je 0x471b
0x00003771      4839c2         cmp rdx, rax
0x00003774      4889c6         mov rsi, rax
0x00003777      75df           jne 0x3758
0x00003779      498917         mov qword [r15], rdx
0x0000377c      488d040a       lea rax, [rdx + rcx]
0x00003780      e9b3fdffff     jmp 0x3538
0x00003785      0f1f00         nop dword [rax]
0x00003788      4c39f5         cmp rbp, r14
0x0000378b      7720           ja 0x37ad
0x0000378d      e9180c0000     jmp 0x43aa
0x00003792      660f1f440000   nop word [rax + rax]
0x00003798      410fb606       movzx eax, byte [r14]
0x0000379c      488d35dddb21.  lea rsi, obj.word_fastmap               ; 0x221380
0x000037a3      803c0600       cmp byte [rsi + rax], 0
0x000037a7      0f843cffffff   je 0x36e9
0x000037ad      4983c601       add r14, 1
0x000037b1      4c39f5         cmp rbp, r14
0x000037b4      75e2           jne 0x3798
0x000037b6      488b15abd921.  mov rdx, qword [0x00221168]             ; [0x221168:8]=0
0x000037bd      4d89fa         mov r10, r15
0x000037c0      4989e9         mov r9, rbp
0x000037c3      488b0dd6d921.  mov rcx, qword [obj.tail]               ; [0x2211a0:8]=0
0x000037ca      4901ca         add r10, rcx
0x000037cd      4d39d1         cmp r9, r10
0x000037d0      7307           jae 0x37d9
0x000037d2      4c890dcfd921.  mov qword [0x002211a8], r9              ; [0x2211a8:8]=0
0x000037d9      488b05c8d921.  mov rax, qword [0x002211a8]             ; [0x2211a8:8]=0
0x000037e0      4839c8         cmp rax, rcx
0x000037e3      0f86e6050000   jbe 0x3dcf
0x000037e9      48833d3fd821.  cmp qword [obj.truncation_string], 0    ; [0x221030:8]=0x1bc8e
0x000037f1      c60558d92100.  mov byte [obj.keyafter_truncation], 0   ; [0x221150:1]=0
0x000037f8      4c8b05a1d921.  mov r8, qword [obj.tail]                ; [0x2211a0:8]=0
0x000037ff      0f95c1         setne cl
0x00003802      4839c5         cmp rbp, rax
0x00003805      400f97c6       seta sil
0x00003809      21f1           and ecx, esi
0x0000380b      488b3424       mov rsi, qword [rsp]
0x0000380f      880d7bd92100   mov byte [obj.tail_truncation], cl      ; [0x221190:1]=0
0x00003815      488b3e         mov rdi, qword [rsi]
0x00003818      31f6           xor esi, esi
0x0000381a      eb16           jmp 0x3832
0x0000381c      0f1f4000       nop dword [rax]
0x00003820      4883e801       sub rax, 1
0x00003824      be01000000     mov esi, 1
0x00003829      4939c0         cmp r8, rax
0x0000382c      0f83dd0e0000   jae 0x470f
0x00003832      0fb648ff       movzx ecx, byte [rax - 1]
0x00003836      f6444f0120     test byte [rdi + rcx*2 + 1], 0x20
0x0000383b      75e3           jne 0x3820
0x0000383d      4084f6         test sil, sil
0x00003840      0f85c90e0000   jne 0x470f
0x00003846      488d0513d921.  lea rax, obj.keyafter                   ; 0x221160
0x0000384d      4c8b3564d921.  mov r14, qword [obj.keyafter_max_width] ; [0x2211b8:8]=0
0x00003854      482b10         sub rdx, qword [rax]
0x00003857      4929d6         sub r14, rdx
0x0000385a      4c2b35afd721.  sub r14, qword [obj.gap_size]           ; [0x221010:8]=3
0x00003861      4d85f6         test r14, r14
0x00003864      0f8e53040000   jle 0x3cbd
0x0000386a      488b050fd921.  mov rax, qword [obj.before]             ; [0x221180:8]=0
0x00003871      4939c5         cmp r13, rax
0x00003874      488905cdd821.  mov qword [0x00221148], rax             ; [0x221148:8]=0
0x0000387b      7330           jae 0x38ad
0x0000387d      488b3424       mov rsi, qword [rsp]
0x00003881      31c9           xor ecx, ecx
0x00003883      488b36         mov rsi, qword [rsi]
0x00003886      eb12           jmp 0x389a
0x00003888      4883e801       sub rax, 1
0x0000388c      b901000000     mov ecx, 1
0x00003891      4939c5         cmp r13, rax
0x00003894      0f848d0e0000   je 0x4727
0x0000389a      0fb650ff       movzx edx, byte [rax - 1]
0x0000389e      f644560120     test byte [rsi + rdx*2 + 1], 0x20
0x000038a3      75e3           jne 0x3888
0x000038a5      84c9           test cl, cl
0x000038a7      0f85b30e0000   jne 0x4760
0x000038ad      488b1594d821.  mov rdx, qword [0x00221148]             ; [0x221148:8]=0
0x000038b4      4c8d2d85d821.  lea r13, obj.head                       ; 0x221140
0x000038bb      4a8d0433       lea rax, [rbx + r14]
0x000038bf      48891d7ad821.  mov qword [obj.head], rbx               ; [0x221140:8]=0
0x000038c6      4889de         mov rsi, rbx
0x000038c9      4839c2         cmp rdx, rax
0x000038cc      7654           jbe 0x3922
0x000038ce      488d3debdc21.  lea rdi, obj.word_regex                 ; 0x2215c0
0x000038d5      48833f00       cmp qword [rdi], 0
0x000038d9      0f8485030000   je 0x3c64
0x000038df      4829f2         sub rdx, rsi
0x000038e2      4531c0         xor r8d, r8d
0x000038e5      31c9           xor ecx, ecx
0x000038e7      4883c708       add rdi, 8
0x000038eb      e8904c0100     call sym.rpl_re_match
0x000038f0      4883f8fe       cmp rax, 0xfffffffffffffffe
0x000038f4      0f84300c0000   je 0x452a
0x000038fa      4883f8ff       cmp rax, 0xffffffffffffffff
0x000038fe      ba01000000     mov edx, 1
0x00003903      480f44c2       cmove rax, rdx
0x00003907      49034500       add rax, qword [r13]
0x0000390b      488b1536d821.  mov rdx, qword [0x00221148]             ; [0x221148:8]=0
0x00003912      4889c6         mov rsi, rax
0x00003915      49894500       mov qword [r13], rax
0x00003919      4a8d0430       lea rax, [rax + r14]
0x0000391d      4839c2         cmp rdx, rax
0x00003920      77ac           ja 0x38ce
0x00003922      4839f2         cmp rdx, rsi
0x00003925      4889f3         mov rbx, rsi
0x00003928      0f86a5030000   jbe 0x3cd3
0x0000392e      48833dfad621.  cmp qword [obj.truncation_string], 0    ; [0x221030:8]=0x1bc8e
0x00003936      c60533d82100.  mov byte [obj.before_truncation], 0     ; [0x221170:1]=0
0x0000393d      0f95c0         setne al
0x00003940      4839742418     cmp qword [rsp + 0x18], rsi
0x00003945      0f92c1         setb cl
0x00003948      21c8           and eax, ecx
0x0000394a      31c9           xor ecx, ecx
0x0000394c      8805ded72100   mov byte [obj.head_truncation], al      ; [0x221130:1]=0
0x00003952      488b0424       mov rax, qword [rsp]
0x00003956      488b30         mov rsi, qword [rax]
0x00003959      eb17           jmp 0x3972
0x0000395b      0f1f440000     nop dword [rax + rax]
0x00003960      4883c301       add rbx, 1
0x00003964      b901000000     mov ecx, 1
0x00003969      4839d3         cmp rbx, rdx
0x0000396c      0f84c10d0000   je 0x4733
0x00003972      0fb603         movzx eax, byte [rbx]
0x00003975      f644460120     test byte [rsi + rax*2 + 1], 0x20
0x0000397a      75e4           jne 0x3960
0x0000397c      84c9           test cl, cl
0x0000397e      0f85af0d0000   jne 0x4733
0x00003984      0fb615ffde21.  movzx edx, byte [obj.auto_reference]    ; [0x22188a:1]=0
0x0000398b      84d2           test dl, dl
0x0000398d      0f844c030000   je 0x3cdf
0x00003993      4963542428     movsxd rdx, dword [r12 + 0x28]
0x00003998      488b3569d921.  mov rsi, qword [obj.input_file_name]    ; [0x221308:8]=0
0x0000399f      488d3dd58801.  lea rdi, [0x0001c27b]
0x000039a6      488b34d6       mov rsi, qword [rsi + rdx*8]
0x000039aa      488d0cd50000.  lea rcx, [rdx*8]
0x000039b2      4885f6         test rsi, rsi
0x000039b5      480f44f7       cmove rsi, rdi
0x000039b9      498b7c2420     mov rdi, qword [r12 + 0x20]
0x000039be      85d2           test edx, edx
0x000039c0      488d5f01       lea rbx, [rdi + 1]
0x000039c4      7e0c           jle 0x39d2
0x000039c6      488b0533d921.  mov rax, qword [obj.file_line_count]    ; [0x221300:8]=0
0x000039cd      482b5c08f8     sub rbx, qword [rax + rcx - 8]
0x000039d2      488b3d47d721.  mov rdi, qword [obj.reference]          ; [0x221120:8]=0
0x000039d9      e892e3ffff     call sym.imp.stpcpy
0x000039de      488d0dba7e01.  lea rcx, str.:_ld                       ; 0x1b89f ; ":%ld"
0x000039e5      4889c5         mov rbp, rax
0x000039e8      4889c7         mov rdi, rax
0x000039eb      4989d8         mov r8, rbx
0x000039ee      4883caff       or rdx, 0xffffffffffffffff
0x000039f2      be01000000     mov esi, 1
0x000039f7      31c0           xor eax, eax
0x000039f9      e802e7ffff     call sym.imp.__sprintf_chk
0x000039fe      4898           cdqe
0x00003a00      4801c5         add rbp, rax
0x00003a03      48892d1ed721.  mov qword [0x00221128], rbp             ; [0x221128:8]=0
0x00003a0a      8b0574de2100   mov eax, dword [obj.output_format]      ; [0x221884:4]=0
0x00003a10      83f802         cmp eax, 2
0x00003a13      0f84c2030000   je 0x3ddb
0x00003a19      0f82d7050000   jb 0x3ff6
0x00003a1f      83f803         cmp eax, 3
0x00003a22      0f85f5010000   jne 0x3c1d
0x00003a28      488b15f9d521.  mov rdx, qword [obj.macro_name]         ; [0x221028:8]=0x1b97e ; "~\xb9\x01"
0x00003a2f      488d35747e01.  lea rsi, [0x0001b8aa]                   ; "\%s "
0x00003a36      bf01000000     mov edi, 1
0x00003a3b      31c0           xor eax, eax
0x00003a3d      e86ee5ffff     call sym.imp.__printf_chk
0x00003a42      488b3d7fd621.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x00003a49      488b4728       mov rax, qword [rdi + 0x28]
0x00003a4d      483b4730       cmp rax, qword [rdi + 0x30]
0x00003a51      0f831b0c0000   jae 0x4672
0x00003a57      488d5001       lea rdx, [rax + 1]
0x00003a5b      48895728       mov qword [rdi + 0x28], rdx
0x00003a5f      c6007b         mov byte [rax], 0x7b                    ; '{'
                                                                       ; [0x7b:1]=0
0x00003a62      488b3d37d721.  mov rdi, qword [obj.tail]               ; [0x2211a0:8]=0
0x00003a69      488b3538d721.  mov rsi, qword [0x002211a8]             ; [0x2211a8:8]=0
0x00003a70      e82b150000     call sym.print_field
0x00003a75      488b0d4cd621.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x00003a7c      488d3d2c7e01.  lea rdi, [0x0001b8af]                   ; "}{"
0x00003a83      ba02000000     mov edx, 2
0x00003a88      be01000000     mov esi, 1
0x00003a8d      e8eee4ffff     call sym.imp.fwrite_unlocked
0x00003a92      488b3de7d621.  mov rdi, qword [obj.before]             ; [0x221180:8]=0
0x00003a99      488b35e8d621.  mov rsi, qword [0x00221188]             ; [0x221188:8]=0
0x00003aa0      e8fb140000     call sym.print_field
0x00003aa5      488b0d1cd621.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x00003aac      488d3dfc7d01.  lea rdi, [0x0001b8af]                   ; "}{"
0x00003ab3      ba02000000     mov edx, 2
0x00003ab8      be01000000     mov esi, 1
0x00003abd      e8bee4ffff     call sym.imp.fwrite_unlocked
0x00003ac2      488d0597d621.  lea rax, obj.keyafter                   ; 0x221160
0x00003ac9      488b2d98d621.  mov rbp, qword [0x00221168]             ; [0x221168:8]=0
0x00003ad0      488b18         mov rbx, qword [rax]
0x00003ad3      488d05e6da21.  lea rax, obj.word_regex                 ; 0x2215c0
0x00003ada      48833800       cmp qword [rax], 0
0x00003ade      4989dd         mov r13, rbx
0x00003ae1      0f8487080000   je 0x436e
0x00003ae7      4889ea         mov rdx, rbp
0x00003aea      488d7808       lea rdi, [rax + 8]
0x00003aee      4531c0         xor r8d, r8d
0x00003af1      4829da         sub rdx, rbx
0x00003af4      31c9           xor ecx, ecx
0x00003af6      4889de         mov rsi, rbx
0x00003af9      e8824a0100     call sym.rpl_re_match
0x00003afe      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00003b02      0f84220a0000   je 0x452a
0x00003b08      4883f8ff       cmp rax, 0xffffffffffffffff
0x00003b0c      0f84c90b0000   je 0x46db
0x00003b12      4801c3         add rbx, rax
0x00003b15      4c89ef         mov rdi, r13
0x00003b18      4889de         mov rsi, rbx
0x00003b1b      e880140000     call sym.print_field
0x00003b20      488b0da1d521.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x00003b27      488d3d817d01.  lea rdi, [0x0001b8af]                   ; "}{"
0x00003b2e      ba02000000     mov edx, 2
0x00003b33      be01000000     mov esi, 1
0x00003b38      e843e4ffff     call sym.imp.fwrite_unlocked
0x00003b3d      4889df         mov rdi, rbx
0x00003b40      4889ee         mov rsi, rbp
0x00003b43      e858140000     call sym.print_field
0x00003b48      488b0d79d521.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x00003b4f      488d3d597d01.  lea rdi, [0x0001b8af]                   ; "}{"
0x00003b56      ba02000000     mov edx, 2
0x00003b5b      be01000000     mov esi, 1
0x00003b60      e81be4ffff     call sym.imp.fwrite_unlocked
0x00003b65      488b3dd4d521.  mov rdi, qword [obj.head]               ; [0x221140:8]=0
0x00003b6c      488b35d5d521.  mov rsi, qword [0x00221148]             ; [0x221148:8]=0
0x00003b73      e828140000     call sym.print_field
0x00003b78      488b3d49d521.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x00003b7f      488b4728       mov rax, qword [rdi + 0x28]
0x00003b83      483b4730       cmp rax, qword [rdi + 0x30]
0x00003b87      0f833f0b0000   jae 0x46cc
0x00003b8d      488d5001       lea rdx, [rax + 1]
0x00003b91      48895728       mov qword [rdi + 0x28], rdx
0x00003b95      c6007d         mov byte [rax], 0x7d                    ; '}'
                                                                       ; [0x7d:1]=0
0x00003b98      803debdc2100.  cmp byte [obj.auto_reference], 0        ; [0x22188a:1]=0
0x00003b9f      7509           jne 0x3baa
0x00003ba1      803de1dc2100.  cmp byte [obj.input_reference], 0       ; [0x221889:1]=0
0x00003ba8      7453           je 0x3bfd
0x00003baa      488b3d17d521.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x00003bb1      488b4728       mov rax, qword [rdi + 0x28]
0x00003bb5      483b4730       cmp rax, qword [rdi + 0x30]
0x00003bb9      0f83c20a0000   jae 0x4681
0x00003bbf      488d5001       lea rdx, [rax + 1]
0x00003bc3      48895728       mov qword [rdi + 0x28], rdx
0x00003bc7      c6007b         mov byte [rax], 0x7b                    ; '{'
                                                                       ; [0x7b:1]=0
0x00003bca      488b3d4fd521.  mov rdi, qword [obj.reference]          ; [0x221120:8]=0
0x00003bd1      488b3550d521.  mov rsi, qword [0x00221128]             ; [0x221128:8]=0
0x00003bd8      e8c3130000     call sym.print_field
0x00003bdd      488b3de4d421.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x00003be4      488b4728       mov rax, qword [rdi + 0x28]
0x00003be8      483b4730       cmp rax, qword [rdi + 0x30]
0x00003bec      0f839e0a0000   jae 0x4690
0x00003bf2      488d5001       lea rdx, [rax + 1]
0x00003bf6      48895728       mov qword [rdi + 0x28], rdx
0x00003bfa      c6007d         mov byte [rax], 0x7d                    ; '}'
                                                                       ; [0x7d:1]=0
0x00003bfd      488b3dc4d421.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x00003c04      488b4728       mov rax, qword [rdi + 0x28]
0x00003c08      483b4730       cmp rax, qword [rdi + 0x30]
0x00003c0c      0f83f40b0000   jae 0x4806
0x00003c12      488d5001       lea rdx, [rax + 1]
0x00003c16      48895728       mov qword [rdi + 0x28], rdx
0x00003c1a      c6000a         mov byte [rax], 0xa
0x00003c1d      488344241001   add qword [rsp + 0x10], 1
0x00003c23      4983c430       add r12, 0x30
0x00003c27      488b442410     mov rax, qword [rsp + 0x10]
0x00003c2c      483b05add621.  cmp rax, qword [obj.number_of_occurs]   ; [0x2212e0:8]=0
0x00003c33      0f8c68f1ffff   jl 0x2da1
0x00003c39      31c0           xor eax, eax
0x00003c3b      488bb4248800.  mov rsi, qword [rsp + 0x88]
0x00003c43      644833342528.  xor rsi, qword fs:[0x28]
0x00003c4c      0f85ed0a0000   jne 0x473f
0x00003c52      4881c4980000.  add rsp, 0x98
0x00003c59      5b             pop rbx
0x00003c5a      5d             pop rbp
0x00003c5b      415c           pop r12
0x00003c5d      415d           pop r13
0x00003c5f      415e           pop r14
0x00003c61      415f           pop r15
0x00003c63      c3             ret
0x00003c64      0fb60e         movzx ecx, byte [rsi]
0x00003c67      488d3d12d721.  lea rdi, obj.word_fastmap               ; 0x221380
0x00003c6e      803c0f00       cmp byte [rdi + rcx], 0
0x00003c72      7511           jne 0x3c85
0x00003c74      4883c601       add rsi, 1
0x00003c78      49897500       mov qword [r13], rsi
0x00003c7c      4a8d0436       lea rax, [rsi + r14]
0x00003c80      e944fcffff     jmp 0x38c9
0x00003c85      4839f2         cmp rdx, rsi
0x00003c88      0f863bfcffff   jbe 0x38c9
0x00003c8e      488d4601       lea rax, [rsi + 1]
0x00003c92      eb14           jmp 0x3ca8
0x00003c94      0fb60e         movzx ecx, byte [rsi]
0x00003c97      488d3de2d621.  lea rdi, obj.word_fastmap               ; 0x221380
0x00003c9e      488d4001       lea rax, [rax + 1]
0x00003ca2      803c0f00       cmp byte [rdi + rcx], 0
0x00003ca6      74d0           je 0x3c78
0x00003ca8      4839c2         cmp rdx, rax
0x00003cab      4889c6         mov rsi, rax
0x00003cae      75e4           jne 0x3c94
0x00003cb0      49895500       mov qword [r13], rdx
0x00003cb4      4a8d0432       lea rax, [rdx + r14]
0x00003cb8      e90cfcffff     jmp 0x38c9
0x00003cbd      48c70578d421.  mov qword [obj.head], 0                 ; [0x221140:8]=0
0x00003cc8      48c70575d421.  mov qword [0x00221148], 0               ; [0x221148:8]=0
0x00003cd3      c60556d42100.  mov byte [obj.head_truncation], 0       ; [0x221130:1]=0
0x00003cda      e9a5fcffff     jmp 0x3984
0x00003cdf      0fb60da3db21.  movzx ecx, byte [obj.input_reference]   ; [0x221889:1]=0
0x00003ce6      84c9           test cl, cl
0x00003ce8      0f841cfdffff   je 0x3a0a
0x00003cee      488d356bd421.  lea rsi, obj.keyafter                   ; 0x221160
0x00003cf5      498b442420     mov rax, qword [r12 + 0x20]
0x00003cfa      480306         add rax, qword [rsi]
0x00003cfd      4839c5         cmp rbp, rax
0x00003d00      48890519d421.  mov qword [obj.reference], rax          ; [0x221120:8]=0
0x00003d07      4889051ad421.  mov qword [0x00221128], rax             ; [0x221128:8]=0
0x00003d0e      0f86f6fcffff   jbe 0x3a0a
0x00003d14      488b3424       mov rsi, qword [rsp]
0x00003d18      488b36         mov rsi, qword [rsi]
0x00003d1b      eb0f           jmp 0x3d2c
0x00003d1d      4883c001       add rax, 1
0x00003d21      89ca           mov edx, ecx
0x00003d23      4839c5         cmp rbp, rax
0x00003d26      0f84280a0000   je 0x4754
0x00003d2c      0fb638         movzx edi, byte [rax]
0x00003d2f      f6447e0120     test byte [rsi + rdi*2 + 1], 0x20
0x00003d34      74e7           je 0x3d1d
0x00003d36      84d2           test dl, dl
0x00003d38      0f84ccfcffff   je 0x3a0a
0x00003d3e      488905e3d321.  mov qword [0x00221128], rax             ; [0x221128:8]=0
0x00003d45      e9c0fcffff     jmp 0x3a0a
0x00003d4a      488d1c0e       lea rbx, [rsi + rcx]
0x00003d4e      e97cf7ffff     jmp 0x34cf
0x00003d53      498b4c2410     mov rcx, qword [r12 + 0x10]
0x00003d58      488d0501d421.  lea rax, obj.keyafter                   ; 0x221160
0x00003d5f      488b30         mov rsi, qword [rax]
0x00003d62      e9a7f6ffff     jmp 0x340e
0x00003d67      4c893512d421.  mov qword [obj.before], r14             ; [0x221180:8]=0
0x00003d6e      e9a1f8ffff     jmp 0x3614
0x00003d73      48c70522d421.  mov qword [obj.tail], 0                 ; [0x2211a0:8]=0
0x00003d7e      48c7051fd421.  mov qword [0x002211a8], 0               ; [0x2211a8:8]=0
0x00003d89      c60500d42100.  mov byte [obj.tail_truncation], 0       ; [0x221190:1]=0
0x00003d90      488b15d1d321.  mov rdx, qword [0x00221168]             ; [0x221168:8]=0
0x00003d97      e9aafaffff     jmp 0x3846
0x00003d9c      4c890dfdd321.  mov qword [obj.tail], r9                ; [0x2211a0:8]=0
0x00003da3      e9d2f8ffff     jmp 0x367a
0x00003da8      488b15b9d321.  mov rdx, qword [0x00221168]             ; [0x221168:8]=0
0x00003daf      488b0dead321.  mov rcx, qword [obj.tail]               ; [0x2211a0:8]=0
0x00003db6      e91efaffff     jmp 0x37d9
0x00003dbb      c605aed32100.  mov byte [obj.before_truncation], 0     ; [0x221170:1]=0
0x00003dc2      e917f8ffff     jmp 0x35de
0x00003dc7      4c89e8         mov rax, r13
0x00003dca      e903f8ffff     jmp 0x35d2
0x00003dcf      c605bad32100.  mov byte [obj.tail_truncation], 0       ; [0x221190:1]=0
0x00003dd6      e96bfaffff     jmp 0x3846
0x00003ddb      488b1546d221.  mov rdx, qword [obj.macro_name]         ; [0x221028:8]=0x1b97e ; "~\xb9\x01"
0x00003de2      488d35bb7a01.  lea rsi, str.._s                        ; 0x1b8a4 ; ".%s \""
0x00003de9      bf01000000     mov edi, 1
0x00003dee      31c0           xor eax, eax
0x00003df0      e8bbe1ffff     call sym.imp.__printf_chk
0x00003df5      488b3da4d321.  mov rdi, qword [obj.tail]               ; [0x2211a0:8]=0
0x00003dfc      488b35a5d321.  mov rsi, qword [0x002211a8]             ; [0x2211a8:8]=0
0x00003e03      e898110000     call sym.print_field
0x00003e08      803d81d32100.  cmp byte [obj.tail_truncation], 0       ; [0x221190:1]=0
0x00003e0f      7413           je 0x3e24
0x00003e11      488b35b0d221.  mov rsi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x00003e18      488b3d11d221.  mov rdi, qword [obj.truncation_string]  ; [0x221030:8]=0x1bc8e
0x00003e1f      e88ce0ffff     call sym.imp.fputs_unlocked
0x00003e24      488b3d9dd221.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x00003e2b      488b4728       mov rax, qword [rdi + 0x28]
0x00003e2f      483b4730       cmp rax, qword [rdi + 0x30]
0x00003e33      0f83bb080000   jae 0x46f4
0x00003e39      488d5001       lea rdx, [rax + 1]
0x00003e3d      48895728       mov qword [rdi + 0x28], rdx
0x00003e41      c60022         mov byte [rax], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00003e44      488b0d7dd221.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x00003e4b      488d3d557a01.  lea rdi, [0x0001b8a7]                   ; " \""
0x00003e52      ba02000000     mov edx, 2
0x00003e57      be01000000     mov esi, 1
0x00003e5c      e81fe1ffff     call sym.imp.fwrite_unlocked
0x00003e61      803d08d32100.  cmp byte [obj.before_truncation], 0     ; [0x221170:1]=0
0x00003e68      7413           je 0x3e7d
0x00003e6a      488b3557d221.  mov rsi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x00003e71      488b3db8d121.  mov rdi, qword [obj.truncation_string]  ; [0x221030:8]=0x1bc8e
0x00003e78      e833e0ffff     call sym.imp.fputs_unlocked
0x00003e7d      488b3dfcd221.  mov rdi, qword [obj.before]             ; [0x221180:8]=0
0x00003e84      488b35fdd221.  mov rsi, qword [0x00221188]             ; [0x221188:8]=0
0x00003e8b      e810110000     call sym.print_field
0x00003e90      488b3d31d221.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x00003e97      488b4728       mov rax, qword [rdi + 0x28]
0x00003e9b      483b4730       cmp rax, qword [rdi + 0x30]
0x00003e9f      0f8340080000   jae 0x46e5
0x00003ea5      488d5001       lea rdx, [rax + 1]
0x00003ea9      48895728       mov qword [rdi + 0x28], rdx
0x00003ead      c60022         mov byte [rax], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00003eb0      488b0d11d221.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x00003eb7      488d3de97901.  lea rdi, [0x0001b8a7]                   ; " \""
0x00003ebe      ba02000000     mov edx, 2
0x00003ec3      be01000000     mov esi, 1
0x00003ec8      e8b3e0ffff     call sym.imp.fwrite_unlocked
0x00003ecd      488d058cd221.  lea rax, obj.keyafter                   ; 0x221160
0x00003ed4      488b358dd221.  mov rsi, qword [0x00221168]             ; [0x221168:8]=0
0x00003edb      488b38         mov rdi, qword [rax]
0x00003ede      e8bd100000     call sym.print_field
0x00003ee3      803d66d22100.  cmp byte [obj.keyafter_truncation], 0   ; [0x221150:1]=0
0x00003eea      7413           je 0x3eff
0x00003eec      488b35d5d121.  mov rsi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x00003ef3      488b3d36d121.  mov rdi, qword [obj.truncation_string]  ; [0x221030:8]=0x1bc8e
0x00003efa      e8b1dfffff     call sym.imp.fputs_unlocked
0x00003eff      488b3dc2d121.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x00003f06      488b4728       mov rax, qword [rdi + 0x28]
0x00003f0a      483b4730       cmp rax, qword [rdi + 0x30]
0x00003f0e      0f83a9070000   jae 0x46bd
0x00003f14      488d5001       lea rdx, [rax + 1]
0x00003f18      48895728       mov qword [rdi + 0x28], rdx
0x00003f1c      c60022         mov byte [rax], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00003f1f      488b0da2d121.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x00003f26      488d3d7a7901.  lea rdi, [0x0001b8a7]                   ; " \""
0x00003f2d      ba02000000     mov edx, 2
0x00003f32      be01000000     mov esi, 1
0x00003f37      e844e0ffff     call sym.imp.fwrite_unlocked
0x00003f3c      803dedd12100.  cmp byte [obj.head_truncation], 0       ; [0x221130:1]=0
0x00003f43      7413           je 0x3f58
0x00003f45      488b357cd121.  mov rsi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x00003f4c      488b3dddd021.  mov rdi, qword [obj.truncation_string]  ; [0x221030:8]=0x1bc8e
0x00003f53      e858dfffff     call sym.imp.fputs_unlocked
0x00003f58      488b3de1d121.  mov rdi, qword [obj.head]               ; [0x221140:8]=0
0x00003f5f      488b35e2d121.  mov rsi, qword [0x00221148]             ; [0x221148:8]=0
0x00003f66      e835100000     call sym.print_field
0x00003f6b      488b3d56d121.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x00003f72      488b4728       mov rax, qword [rdi + 0x28]
0x00003f76      483b4730       cmp rax, qword [rdi + 0x30]
0x00003f7a      0f832e070000   jae 0x46ae
0x00003f80      488d5001       lea rdx, [rax + 1]
0x00003f84      48895728       mov qword [rdi + 0x28], rdx
0x00003f88      c60022         mov byte [rax], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00003f8b      803df8d82100.  cmp byte [obj.auto_reference], 0        ; [0x22188a:1]=0
0x00003f92      750d           jne 0x3fa1
0x00003f94      803deed82100.  cmp byte [obj.input_reference], 0       ; [0x221889:1]=0
0x00003f9b      0f845cfcffff   je 0x3bfd
0x00003fa1      488b0d20d121.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x00003fa8      488d3df87801.  lea rdi, [0x0001b8a7]                   ; " \""
0x00003faf      ba02000000     mov edx, 2
0x00003fb4      be01000000     mov esi, 1
0x00003fb9      e8c2dfffff     call sym.imp.fwrite_unlocked
0x00003fbe      488b3d5bd121.  mov rdi, qword [obj.reference]          ; [0x221120:8]=0
0x00003fc5      488b355cd121.  mov rsi, qword [0x00221128]             ; [0x221128:8]=0
0x00003fcc      e8cf0f0000     call sym.print_field
0x00003fd1      488b3df0d021.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x00003fd8      488b4728       mov rax, qword [rdi + 0x28]
0x00003fdc      483b4730       cmp rax, qword [rdi + 0x30]
0x00003fe0      0f83b9060000   jae 0x469f
0x00003fe6      488d5001       lea rdx, [rax + 1]
0x00003fea      48895728       mov qword [rdi + 0x28], rdx
0x00003fee      c60022         mov byte [rax], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00003ff1      e907fcffff     jmp 0x3bfd
0x00003ff6      803d8bd82100.  cmp byte [obj.right_reference], 0       ; [0x221888:1]=0
0x00003ffd      7568           jne 0x4067
0x00003fff      803d84d82100.  cmp byte [obj.auto_reference], 0        ; [0x22188a:1]=0
0x00004006      488b3d13d121.  mov rdi, qword [obj.reference]          ; [0x221120:8]=0
0x0000400d      488b3514d121.  mov rsi, qword [0x00221128]             ; [0x221128:8]=0
0x00004014      0f8402020000   je 0x421c
0x0000401a      e8810f0000     call sym.print_field
0x0000401f      488b3da2d021.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x00004026      488b4728       mov rax, qword [rdi + 0x28]
0x0000402a      483b4730       cmp rax, qword [rdi + 0x30]
0x0000402e      0f8381070000   jae 0x47b5
0x00004034      488d5001       lea rdx, [rax + 1]
0x00004038      48895728       mov qword [rdi + 0x28], rdx
0x0000403c      c6003a         mov byte [rax], 0x3a                    ; ':'
                                                                       ; [0x3a:1]=64
0x0000403f      488b3dcacf21.  mov rdi, qword [obj.gap_size]           ; [0x221010:8]=3
0x00004046      488b05dbd021.  mov rax, qword [0x00221128]             ; [0x221128:8]=0
0x0000404d      48033d04d321.  add rdi, qword [obj.reference_max_width] ; [0x221358:8]=0
0x00004054      482b05c5d021.  sub rax, qword [obj.reference]          ; [0x221120:8]=0
0x0000405b      4829c7         sub rdi, rax
0x0000405e      4883ef01       sub rdi, 1
0x00004062      e8e90e0000     call sym.print_spaces
0x00004067      488b3d32d121.  mov rdi, qword [obj.tail]               ; [0x2211a0:8]=0
0x0000406e      483b3d33d121.  cmp rdi, qword [0x002211a8]             ; [0x2211a8:8]=0
0x00004075      0f8278020000   jb 0x42f3
0x0000407b      488b3d46d121.  mov rdi, qword [obj.half_line_width]    ; [0x2211c8:8]=0
0x00004082      488b05ffd021.  mov rax, qword [0x00221188]             ; [0x221188:8]=0
0x00004089      482b3d80cf21.  sub rdi, qword [obj.gap_size]           ; [0x221010:8]=3
0x00004090      482b05e9d021.  sub rax, qword [obj.before]             ; [0x221180:8]=0
0x00004097      4829c7         sub rdi, rax
0x0000409a      31c0           xor eax, eax
0x0000409c      803dcdd02100.  cmp byte [obj.before_truncation], 0     ; [0x221170:1]=0
0x000040a3      7407           je 0x40ac
0x000040a5      488b0504d121.  mov rax, qword [obj.truncation_string_length] ; [0x2211b0:8]=0
0x000040ac      4829c7         sub rdi, rax
0x000040af      e89c0e0000     call sym.print_spaces
0x000040b4      803db5d02100.  cmp byte [obj.before_truncation], 0     ; [0x221170:1]=0
0x000040bb      7413           je 0x40d0
0x000040bd      488b3504d021.  mov rsi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x000040c4      488b3d65cf21.  mov rdi, qword [obj.truncation_string]  ; [0x221030:8]=0x1bc8e
0x000040cb      e8e0ddffff     call sym.imp.fputs_unlocked
0x000040d0      488b35b1d021.  mov rsi, qword [0x00221188]             ; [0x221188:8]=0
0x000040d7      488b3da2d021.  mov rdi, qword [obj.before]             ; [0x221180:8]=0
0x000040de      e8bd0e0000     call sym.print_field
0x000040e3      488b3d26cf21.  mov rdi, qword [obj.gap_size]           ; [0x221010:8]=3
0x000040ea      e8610e0000     call sym.print_spaces
0x000040ef      488d056ad021.  lea rax, obj.keyafter                   ; 0x221160
0x000040f6      488b356bd021.  mov rsi, qword [0x00221168]             ; [0x221168:8]=0
0x000040fd      488b38         mov rdi, qword [rax]
0x00004100      e89b0e0000     call sym.print_field
0x00004105      803d44d02100.  cmp byte [obj.keyafter_truncation], 0   ; [0x221150:1]=0
0x0000410c      0f8538010000   jne 0x424a
0x00004112      488b0d27d021.  mov rcx, qword [obj.head]               ; [0x221140:8]=0
0x00004119      488b1528d021.  mov rdx, qword [0x00221148]             ; [0x221148:8]=0
0x00004120      4c8d2d19d021.  lea r13, obj.head                       ; 0x221140
0x00004127      4839d1         cmp rcx, rdx
0x0000412a      0f8260060000   jb 0x4790
0x00004130      803d53d72100.  cmp byte [obj.auto_reference], 0        ; [0x22188a:1]=0
0x00004137      0f85cd000000   jne 0x420a
0x0000413d      803d45d72100.  cmp byte [obj.input_reference], 0       ; [0x221889:1]=0
0x00004144      0f84b3faffff   je 0x3bfd
0x0000414a      803d37d72100.  cmp byte [obj.right_reference], 0       ; [0x221888:1]=0
0x00004151      0f8485060000   je 0x47dc
0x00004157      488d3502d021.  lea rsi, obj.keyafter                   ; 0x221160
0x0000415e      488b0503d021.  mov rax, qword [0x00221168]             ; [0x221168:8]=0
0x00004165      488b3d5cd021.  mov rdi, qword [obj.half_line_width]    ; [0x2211c8:8]=0
0x0000416c      482b06         sub rax, qword [rsi]
0x0000416f      4829c7         sub rdi, rax
0x00004172      31c0           xor eax, eax
0x00004174      803dd5cf2100.  cmp byte [obj.keyafter_truncation], 0   ; [0x221150:1]=0
0x0000417b      7407           je 0x4184
0x0000417d      488b052cd021.  mov rax, qword [obj.truncation_string_length] ; [0x2211b0:8]=0
0x00004184      4829c7         sub rdi, rax
0x00004187      e8c40d0000     call sym.print_spaces
0x0000418c      803df7d62100.  cmp byte [obj.auto_reference], 0        ; [0x22188a:1]=0
0x00004193      0f8443060000   je 0x47dc
0x00004199      803de8d62100.  cmp byte [obj.right_reference], 0       ; [0x221888:1]=0
0x000041a0      0f8457faffff   je 0x3bfd
0x000041a6      488b3d63ce21.  mov rdi, qword [obj.gap_size]           ; [0x221010:8]=3
0x000041ad      e89e0d0000     call sym.print_spaces
0x000041b2      488b3d67cf21.  mov rdi, qword [obj.reference]          ; [0x221120:8]=0
0x000041b9      488b3568cf21.  mov rsi, qword [0x00221128]             ; [0x221128:8]=0
0x000041c0      e8db0d0000     call sym.print_field
0x000041c5      e933faffff     jmp 0x3bfd
0x000041ca      0fb603         movzx eax, byte [rbx]
0x000041cd      488d3dacd121.  lea rdi, obj.word_fastmap               ; 0x221380
0x000041d4      803c0700       cmp byte [rdi + rax], 0
0x000041d8      0f8487010000   je 0x4365
0x000041de      4839f3         cmp rbx, rsi
0x000041e1      7219           jb 0x41fc
0x000041e3      e9e7f2ffff     jmp 0x34cf
0x000041e8      0fb603         movzx eax, byte [rbx]
0x000041eb      488d3d8ed121.  lea rdi, obj.word_fastmap               ; 0x221380
0x000041f2      803c0700       cmp byte [rdi + rax], 0
0x000041f6      0f84d3f2ffff   je 0x34cf
0x000041fc      4883c301       add rbx, 1
0x00004200      4839f3         cmp rbx, rsi
0x00004203      75e3           jne 0x41e8
0x00004205      e9c5f2ffff     jmp 0x34cf
0x0000420a      803d77d62100.  cmp byte [obj.right_reference], 0       ; [0x221888:1]=0
0x00004211      0f8540ffffff   jne 0x4157
0x00004217      e9e1f9ffff     jmp 0x3bfd
0x0000421c      e87f0d0000     call sym.print_field
0x00004221      488b3de8cd21.  mov rdi, qword [obj.gap_size]           ; [0x221010:8]=3
0x00004228      488b05f9ce21.  mov rax, qword [0x00221128]             ; [0x221128:8]=0
0x0000422f      48033d22d121.  add rdi, qword [obj.reference_max_width] ; [0x221358:8]=0
0x00004236      482b05e3ce21.  sub rax, qword [obj.reference]          ; [0x221120:8]=0
0x0000423d      4829c7         sub rdi, rax
0x00004240      e80b0d0000     call sym.print_spaces
0x00004245      e91dfeffff     jmp 0x4067
0x0000424a      488b3577ce21.  mov rsi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x00004251      488b3dd8cd21.  mov rdi, qword [obj.truncation_string]  ; [0x221030:8]=0x1bc8e
0x00004258      4c8d2de1ce21.  lea r13, obj.head                       ; 0x221140
0x0000425f      e84cdcffff     call sym.imp.fputs_unlocked
0x00004264      488b0dd5ce21.  mov rcx, qword [obj.head]               ; [0x221140:8]=0
0x0000426b      488b15d6ce21.  mov rdx, qword [0x00221148]             ; [0x221148:8]=0
0x00004272      4839d1         cmp rcx, rdx
0x00004275      0f83b5feffff   jae 0x4130
0x0000427b      488d35dece21.  lea rsi, obj.keyafter                   ; 0x221160
0x00004282      488b05dfce21.  mov rax, qword [0x00221168]             ; [0x221168:8]=0
0x00004289      482b06         sub rax, qword [rsi]
0x0000428c      488b3535cf21.  mov rsi, qword [obj.half_line_width]    ; [0x2211c8:8]=0
0x00004293      4829c6         sub rsi, rax
0x00004296      4889f0         mov rax, rsi
0x00004299      31f6           xor esi, esi
0x0000429b      803daece2100.  cmp byte [obj.keyafter_truncation], 0   ; [0x221150:1]=0
0x000042a2      7407           je 0x42ab
0x000042a4      488b3505cf21.  mov rsi, qword [obj.truncation_string_length] ; [0x2211b0:8]=0
0x000042ab      4829f0         sub rax, rsi
0x000042ae      4829ca         sub rdx, rcx
0x000042b1      4889c7         mov rdi, rax
0x000042b4      31c0           xor eax, eax
0x000042b6      4829d7         sub rdi, rdx
0x000042b9      803d70ce2100.  cmp byte [obj.head_truncation], 0       ; [0x221130:1]=0
0x000042c0      7407           je 0x42c9
0x000042c2      488b05e7ce21.  mov rax, qword [obj.truncation_string_length] ; [0x2211b0:8]=0
0x000042c9      4829c7         sub rdi, rax
0x000042cc      e87f0c0000     call sym.print_spaces
0x000042d1      803d58ce2100.  cmp byte [obj.head_truncation], 0       ; [0x221130:1]=0
0x000042d8      0f85e6040000   jne 0x47c4
0x000042de      498b7d00       mov rdi, qword [r13]
0x000042e2      488b355fce21.  mov rsi, qword [0x00221148]             ; [0x221148:8]=0
0x000042e9      e8b20c0000     call sym.print_field
0x000042ee      e999feffff     jmp 0x418c
0x000042f3      488b35aece21.  mov rsi, qword [0x002211a8]             ; [0x2211a8:8]=0
0x000042fa      e8a10c0000     call sym.print_field
0x000042ff      803d8ace2100.  cmp byte [obj.tail_truncation], 0       ; [0x221190:1]=0
0x00004306      0f856c040000   jne 0x4778
0x0000430c      488b3db5ce21.  mov rdi, qword [obj.half_line_width]    ; [0x2211c8:8]=0
0x00004313      488b056ece21.  mov rax, qword [0x00221188]             ; [0x221188:8]=0
0x0000431a      482b3defcc21.  sub rdi, qword [obj.gap_size]           ; [0x221010:8]=3
0x00004321      482b0558ce21.  sub rax, qword [obj.before]             ; [0x221180:8]=0
0x00004328      4829c7         sub rdi, rax
0x0000432b      31c0           xor eax, eax
0x0000432d      803d3cce2100.  cmp byte [obj.before_truncation], 0     ; [0x221170:1]=0
0x00004334      7407           je 0x433d
0x00004336      488b0573ce21.  mov rax, qword [obj.truncation_string_length] ; [0x2211b0:8]=0
0x0000433d      4829c7         sub rdi, rax
0x00004340      488b0561ce21.  mov rax, qword [0x002211a8]             ; [0x2211a8:8]=0
0x00004347      482b0552ce21.  sub rax, qword [obj.tail]               ; [0x2211a0:8]=0
0x0000434e      4829c7         sub rdi, rax
0x00004351      31c0           xor eax, eax
0x00004353      803d36ce2100.  cmp byte [obj.tail_truncation], 0       ; [0x221190:1]=0
0x0000435a      0f844cfdffff   je 0x40ac
0x00004360      e940fdffff     jmp 0x40a5
0x00004365      4883c301       add rbx, 1
0x00004369      e961f1ffff     jmp 0x34cf
0x0000436e      0fb603         movzx eax, byte [rbx]
0x00004371      488d3508d021.  lea rsi, obj.word_fastmap               ; 0x221380
0x00004378      803c0600       cmp byte [rsi + rax], 0
0x0000437c      7509           jne 0x4387
0x0000437e      4883c301       add rbx, 1
0x00004382      e98ef7ffff     jmp 0x3b15
0x00004387      4839dd         cmp rbp, rbx
0x0000438a      0f8685f7ffff   jbe 0x3b15
0x00004390      0fb603         movzx eax, byte [rbx]
0x00004393      488d35e6cf21.  lea rsi, obj.word_fastmap               ; 0x221380
0x0000439a      803c0600       cmp byte [rsi + rax], 0
0x0000439e      0f8471f7ffff   je 0x3b15
0x000043a4      4883c301       add rbx, 1
0x000043a8      ebdd           jmp 0x4387
0x000043aa      4d89fa         mov r10, r15
0x000043ad      4d89f1         mov r9, r14
0x000043b0      488b15b1cd21.  mov rdx, qword [0x00221168]             ; [0x221168:8]=0
0x000043b7      e907f4ffff     jmp 0x37c3
0x000043bc      c6053fce2100.  mov byte [0x00221202], 1                ; [0x221202:1]=0
0x000043c3      e981e9ffff     jmp 0x2d49
0x000043c8      4883c001       add rax, 1
0x000043cc      e9e4e8ffff     jmp 0x2cb5
0x000043d1      48c70554cc21.  mov qword [obj.truncation_string], 0    ; [0x221030:8]=0x1bc8e
0x000043dc      e9aae8ffff     jmp 0x2c8b
0x000043e1      4889f0         mov rax, rsi
0x000043e4      e9e9f1ffff     jmp 0x35d2
0x000043e9      bf08000000     mov edi, 8
0x000043ee      c70520cf2100.  mov dword [obj.number_input_files], 1   ; [0x221318:4]=0
0x000043f8      e8c3540000     call sym.xmalloc
0x000043fd      bf08000000     mov edi, 8
0x00004402      488905ffce21.  mov qword [obj.input_file_name], rax    ; [0x221308:8]=0
0x00004409      e8b2540000     call sym.xmalloc
0x0000440e      bf10000000     mov edi, 0x10
0x00004413      488905e6ce21.  mov qword [obj.file_line_count], rax    ; [0x221300:8]=0
0x0000441a      e8a1540000     call sym.xmalloc
0x0000441f      488905d2ce21.  mov qword [obj.text_buffers], rax       ; [0x2212f8:8]=0
0x00004426      486305abcc21.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2210d8:4]=0
0x0000442d      4c8b6cc500     mov r13, qword [rbp + rax*8]
0x00004432      4989c4         mov r12, rax
0x00004435      4c8d34c50000.  lea r14, [rax*8]
0x0000443d      41807d0000     cmp byte [r13], 0
0x00004442      0f84aa000000   je 0x44f2
0x00004448      488d35437801.  lea rsi, [0x0001bc92]                   ; "-"
0x0000444f      4c89ef         mov rdi, r13
0x00004452      e879daffff     call sym.imp.strcmp
0x00004457      85c0           test eax, eax
0x00004459      488b15a8ce21.  mov rdx, qword [obj.input_file_name]    ; [0x221308:8]=0
0x00004460      0f8493000000   je 0x44f9
0x00004466      4c892a         mov qword [rdx], r13
0x00004469      4183c401       add r12d, 1
0x0000446d      4139dc         cmp r12d, ebx
0x00004470      44892561cc21.  mov dword [obj.optind], r12d            ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2210d8:4]=0
0x00004477      0f8d29e2ffff   jge 0x26a6
0x0000447d      4a8b7c3508     mov rdi, qword [rbp + r14 + 8]
0x00004482      488b153fcc21.  mov rdx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x00004489      488d35fc7301.  lea rsi, [0x0001b88c]                   ; "w"
0x00004490      e84b190000     call sym.freopen_safer
0x00004495      4885c0         test rax, rax
0x00004498      0f841f010000   je 0x45bd
0x0000449e      8b0534cc2100   mov eax, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2210d8:4]=0
0x000044a4      83c001         add eax, 1
0x000044a7      39d8           cmp eax, ebx
0x000044a9      890529cc2100   mov dword [obj.optind], eax             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2210d8:4]=0
0x000044af      0f8df1e1ffff   jge 0x26a6
0x000044b5      4898           cdqe
0x000044b7      488b7cc500     mov rdi, qword [rbp + rax*8]
0x000044bc      e8cf440000     call sym.quote
0x000044c1      488d35c67301.  lea rsi, str.extra_operand__s           ; 0x1b88e ; "extra operand %s"
0x000044c8      4889c3         mov rbx, rax
0x000044cb      ba05000000     mov edx, 5
0x000044d0      31ff           xor edi, edi
0x000044d2      e8a9d8ffff     call sym.imp.dcgettext
0x000044d7      4889d9         mov rcx, rbx
0x000044da      4889c2         mov rdx, rax
0x000044dd      31f6           xor esi, esi
0x000044df      31ff           xor edi, edi
0x000044e1      31c0           xor eax, eax
0x000044e3      e818dbffff     call sym.imp.error
0x000044e8      bf01000000     mov edi, 1
0x000044ed      e8ee0f0000     call sym.usage
0x000044f2      488b150fce21.  mov rdx, qword [obj.input_file_name]    ; [0x221308:8]=0
0x000044f9      48c702000000.  mov qword [rdx], 0
0x00004500      e964ffffff     jmp 0x4469
0x00004505      803d14cb2100.  cmp byte [obj.gnu_extensions], 0        ; [0x221020:1]=1
0x0000450c      7421           je 0x452f
0x0000450e      803d74d32100.  cmp byte [obj.input_reference], 0       ; [0x221889:1]=0
0x00004515      7518           jne 0x452f
0x00004517      488d056a7101.  lea rax, str..                          ; 0x1b688 ; "[.?!][]\"')}]*\($\|\t\|  \)[ \t\n]*"
0x0000451e      488905fbd121.  mov qword [obj.context_regex], rax      ; [0x221720:8]=0
0x00004525      e9eae1ffff     jmp 0x2714
0x0000452a      e8d1040000     call sym.matcher_error
0x0000452f      488d05447d01.  lea rax, [0x0001c27a]                   ; "\n"
0x00004536      488905e3d121.  mov qword [obj.context_regex], rax      ; [0x221720:8]=0
0x0000453d      e9d2e1ffff     jmp 0x2714
0x00004542      be01000000     mov esi, 1
0x00004547      e96ce0ffff     jmp 0x25b8
0x0000454c      be01000000     mov esi, 1
0x00004551      e922e0ffff     jmp 0x2578
0x00004556      488d1523ce21.  lea rdx, obj.word_fastmap               ; 0x221380
0x0000455d      b920000000     mov ecx, 0x20                           ; "@"
0x00004562      48b801010101.  movabs rax, 0x101010101010101
0x0000456c      4889d7         mov rdi, rdx
0x0000456f      f348ab         rep stosq qword [rdi], rax
0x00004572      c60527ce2100.  mov byte [0x002213a0], 0                ; [0x2213a0:1]=0
0x00004579      66c70507ce21.  mov word [0x00221389], 0                ; [0x221389:2]=0
0x00004582      e91de2ffff     jmp 0x27a4
0x00004587      488b3d92d121.  mov rdi, qword [obj.context_regex]      ; [0x221720:8]=0
0x0000458e      e8fd430000     call sym.quote
0x00004593      488d350e7101.  lea rsi, str.error:_regular_expression_has_a_match_of_length_zero:__s ; 0x1b6a8 ; "error: regular expression has a match of length zero: %s"
0x0000459a      4889c3         mov rbx, rax
0x0000459d      ba05000000     mov edx, 5
0x000045a2      31ff           xor edi, edi
0x000045a4      e8d7d7ffff     call sym.imp.dcgettext
0x000045a9      4889d9         mov rcx, rbx
0x000045ac      4889c2         mov rdx, rax
0x000045af      31f6           xor esi, esi
0x000045b1      bf01000000     mov edi, 1
0x000045b6      31c0           xor eax, eax
0x000045b8      e843daffff     call sym.imp.error
0x000045bd      48630514cb21.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2210d8:4]=0
0x000045c4      be03000000     mov esi, 3
0x000045c9      31ff           xor edi, edi
0x000045cb      488b54c500     mov rdx, qword [rbp + rax*8]
0x000045d0      e8eb410000     call sym.quotearg_n_style_colon
0x000045d5      4889c3         mov rbx, rax
0x000045d8      e8a3d6ffff     call sym.imp.__errno_location
0x000045dd      8b30           mov esi, dword [rax]
0x000045df      488d152e7401.  lea rdx, [0x0001ba14]                   ; "%s"
0x000045e6      4889d9         mov rcx, rbx
0x000045e9      bf01000000     mov edi, 1
0x000045ee      31c0           xor eax, eax
0x000045f0      e80bdaffff     call sym.imp.error
0x000045f5      31ff           xor edi, edi
0x000045f7      e8e40e0000     call sym.usage
0x000045fc      be01000000     mov esi, 1
0x00004601      e932dfffff     jmp 0x2538
0x00004606      488b3dd3ca21.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2210e0:8]=0
0x0000460d      e87e430000     call sym.quote
0x00004612      488d35077201.  lea rsi, str.invalid_gap_width:__s      ; 0x1b820 ; "invalid gap width: %s"
0x00004619      4889c3         mov rbx, rax
0x0000461c      ba05000000     mov edx, 5
0x00004621      31ff           xor edi, edi
0x00004623      e858d7ffff     call sym.imp.dcgettext
0x00004628      4889d9         mov rcx, rbx
0x0000462b      4889c2         mov rdx, rax
0x0000462e      31f6           xor esi, esi
0x00004630      bf01000000     mov edi, 1
0x00004635      31c0           xor eax, eax
0x00004637      e8c4d9ffff     call sym.imp.error
0x0000463c      488b3d9dca21.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2210e0:8]=0
0x00004643      e848430000     call sym.quote
0x00004648      488d35e77101.  lea rsi, str.invalid_line_width:__s     ; 0x1b836 ; "invalid line width: %s"
0x0000464f      4889c3         mov rbx, rax
0x00004652      ba05000000     mov edx, 5
0x00004657      31ff           xor edi, edi
0x00004659      e822d7ffff     call sym.imp.dcgettext
0x0000465e      4889d9         mov rcx, rbx
0x00004661      4889c2         mov rdx, rax
0x00004664      31f6           xor esi, esi
0x00004666      bf01000000     mov edi, 1
0x0000466b      31c0           xor eax, eax
0x0000466d      e88ed9ffff     call sym.imp.error
0x00004672      be7b000000     mov esi, 0x7b                           ; '{'
0x00004677      e884d7ffff     call sym.imp.__overflow
0x0000467c      e9e1f3ffff     jmp 0x3a62
0x00004681      be7b000000     mov esi, 0x7b                           ; '{'
0x00004686      e875d7ffff     call sym.imp.__overflow
0x0000468b      e93af5ffff     jmp 0x3bca
0x00004690      be7d000000     mov esi, 0x7d                           ; '}'
0x00004695      e866d7ffff     call sym.imp.__overflow
0x0000469a      e95ef5ffff     jmp 0x3bfd
0x0000469f      be22000000     mov esi, 0x22                           ; '"'
0x000046a4      e857d7ffff     call sym.imp.__overflow
0x000046a9      e94ff5ffff     jmp 0x3bfd
0x000046ae      be22000000     mov esi, 0x22                           ; '"'
0x000046b3      e848d7ffff     call sym.imp.__overflow
0x000046b8      e9cef8ffff     jmp 0x3f8b
0x000046bd      be22000000     mov esi, 0x22                           ; '"'
0x000046c2      e839d7ffff     call sym.imp.__overflow
0x000046c7      e953f8ffff     jmp 0x3f1f
0x000046cc      be7d000000     mov esi, 0x7d                           ; '}'
0x000046d1      e82ad7ffff     call sym.imp.__overflow
0x000046d6      e9bdf4ffff     jmp 0x3b98
0x000046db      b801000000     mov eax, 1
0x000046e0      e92df4ffff     jmp 0x3b12
0x000046e5      be22000000     mov esi, 0x22                           ; '"'
0x000046ea      e811d7ffff     call sym.imp.__overflow
0x000046ef      e9bcf7ffff     jmp 0x3eb0
0x000046f4      be22000000     mov esi, 0x22                           ; '"'
0x000046f9      e802d7ffff     call sym.imp.__overflow
0x000046fe      e941f7ffff     jmp 0x3e44
0x00004703      4889057eca21.  mov qword [0x00221188], rax             ; [0x221188:8]=0
0x0000470a      e914eeffff     jmp 0x3523
0x0000470f      48890592ca21.  mov qword [0x002211a8], rax             ; [0x2211a8:8]=0
0x00004716      e92bf1ffff     jmp 0x3846
0x0000471b      498937         mov qword [r15], rsi
0x0000471e      488d040e       lea rax, [rsi + rcx]
0x00004722      e911eeffff     jmp 0x3538
0x00004727      4c892d1aca21.  mov qword [0x00221148], r13             ; [0x221148:8]=0
0x0000472e      e97af1ffff     jmp 0x38ad
0x00004733      48891d06ca21.  mov qword [obj.head], rbx               ; [0x221140:8]=0
0x0000473a      e945f2ffff     jmp 0x3984
0x0000473f      e86cd6ffff     call sym.imp.__stack_chk_fail
0x00004744      48c70571ca21.  mov qword [obj.before_max_width], 0     ; [0x2211c0:8]=0
0x0000474f      e961e5ffff     jmp 0x2cb5
0x00004754      48892dcdc921.  mov qword [0x00221128], rbp             ; [0x221128:8]=0
0x0000475b      e9aaf2ffff     jmp 0x3a0a
0x00004760      488905e1c921.  mov qword [0x00221148], rax             ; [0x221148:8]=0
0x00004767      e941f1ffff     jmp 0x38ad
0x0000476c      4889350dca21.  mov qword [obj.before], rsi             ; [0x221180:8]=0
0x00004773      e99ceeffff     jmp 0x3614
0x00004778      488b3549c921.  mov rsi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x0000477f      488b3daac821.  mov rdi, qword [obj.truncation_string]  ; [0x221030:8]=0x1bc8e
0x00004786      e825d7ffff     call sym.imp.fputs_unlocked
0x0000478b      e97cfbffff     jmp 0x430c
0x00004790      488d35c9c921.  lea rsi, obj.keyafter                   ; 0x221160
0x00004797      488b05cac921.  mov rax, qword [0x00221168]             ; [0x221168:8]=0
0x0000479e      482b06         sub rax, qword [rsi]
0x000047a1      488b3520ca21.  mov rsi, qword [obj.half_line_width]    ; [0x2211c8:8]=0
0x000047a8      4829c6         sub rsi, rax
0x000047ab      4889f0         mov rax, rsi
0x000047ae      31f6           xor esi, esi
0x000047b0      e9f6faffff     jmp 0x42ab
0x000047b5      be3a000000     mov esi, 0x3a                           ; ':'
0x000047ba      e841d6ffff     call sym.imp.__overflow
0x000047bf      e97bf8ffff     jmp 0x403f
0x000047c4      488b35fdc821.  mov rsi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x000047cb      488b3d5ec821.  mov rdi, qword [obj.truncation_string]  ; [0x221030:8]=0x1bc8e
0x000047d2      e8d9d6ffff     call sym.imp.fputs_unlocked
0x000047d7      e902fbffff     jmp 0x42de
0x000047dc      803da6d02100.  cmp byte [obj.input_reference], 0       ; [0x221889:1]=0
0x000047e3      0f85b0f9ffff   jne 0x4199
0x000047e9      e90ff4ffff     jmp 0x3bfd
0x000047ee      48891d93c921.  mov qword [0x00221188], rbx             ; [0x221188:8]=0
0x000047f5      e929edffff     jmp 0x3523
0x000047fa      48890567c921.  mov qword [0x00221168], rax             ; [0x221168:8]=0
0x00004801      e96cecffff     jmp 0x3472
0x00004806      be0a000000     mov esi, 0xa
0x0000480b      e8f0d5ffff     call sym.imp.__overflow
0x00004810      e908f4ffff     jmp 0x3c1d
0x00004815      4889354cc921.  mov qword [0x00221168], rsi             ; [0x221168:8]=0
0x0000481c      e951ecffff     jmp 0x3472
0x00004821      be01000000     mov esi, 1
0x00004826      e9ace9ffff     jmp 0x31d7
0x0000482b      4c890ddeca21.  mov qword [obj.total_line_count], r9    ; [0x221310:8]=0
0x00004832      4d89ca         mov r10, r9
0x00004835      e95ae8ffff     jmp 0x3094
0x0000483a      660f1f440000   nop word [rax + rax]
;-- entry0:
;-- _start:
;-- rip:
0x00004840      31ed           xor ebp, ebp
0x00004842      4989d1         mov r9, rdx
0x00004845      5e             pop rsi
0x00004846      4889e2         mov rdx, rsp
0x00004849      4883e4f0       and rsp, 0xfffffffffffffff0
0x0000484d      50             push rax
0x0000484e      54             push rsp
0x0000484f      4c8d056a6601.  lea r8, sym.__libc_csu_fini             ; 0x1aec0
0x00004856      488d0df36501.  lea rcx, sym.__libc_csu_init            ; 0x1ae50 ; "AWAVI\x89\xd7AUATL\x8d%\x0eZ "
0x0000485d      488d3d2cd9ff.  lea rdi, main                           ; sym.main
                                                                       ; 0x2190 ; "AWAVL\x8d5\x15\x98\x01"
0x00004864      ff155ec72100   call qword [reloc.__libc_start_main]    ; [0x220fc8:8]=0
0x0000486a      f4             hlt
0x0000486b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00004870      488d3d49c821.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2210c0
0x00004877      55             push rbp
0x00004878      488d0541c821.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2210c0
0x0000487f      4839f8         cmp rax, rdi
0x00004882      4889e5         mov rbp, rsp
0x00004885      7419           je 0x48a0
0x00004887      488b0532c721.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x220fc0:8]=0
0x0000488e      4885c0         test rax, rax
0x00004891      740d           je 0x48a0
0x00004893      5d             pop rbp
0x00004894      ffe0           jmp rax
0x00004896      662e0f1f8400.  nop word cs:[rax + rax]
0x000048a0      5d             pop rbp
0x000048a1      c3             ret
0x000048a2      0f1f4000       nop dword [rax]
0x000048a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x000048b0      488d3d09c821.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2210c0
0x000048b7      488d3502c821.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2210c0
0x000048be      55             push rbp
0x000048bf      4829fe         sub rsi, rdi
0x000048c2      4889e5         mov rbp, rsp
0x000048c5      48c1fe03       sar rsi, 3
0x000048c9      4889f0         mov rax, rsi
0x000048cc      48c1e83f       shr rax, 0x3f
0x000048d0      4801c6         add rsi, rax
0x000048d3      48d1fe         sar rsi, 1
0x000048d6      7418           je 0x48f0
0x000048d8      488b05f9c621.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x220fd8:8]=0
0x000048df      4885c0         test rax, rax
0x000048e2      740c           je 0x48f0
0x000048e4      5d             pop rbp
0x000048e5      ffe0           jmp rax
0x000048e7      660f1f840000.  nop word [rax + rax]
0x000048f0      5d             pop rbp
0x000048f1      c3             ret
0x000048f2      0f1f4000       nop dword [rax]
0x000048f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00004900      803d01c82100.  cmp byte [obj.completed.7697], 0        ; [0x221108:1]=0
0x00004907      752f           jne 0x4938
0x00004909      48833dcfc621.  cmp qword [reloc.__cxa_finalize], 0     ; [0x220fe0:8]=0
0x00004911      55             push rbp
0x00004912      4889e5         mov rbp, rsp
0x00004915      740c           je 0x4923
0x00004917      488b3deac621.  mov rdi, qword [obj.__dso_handle]       ; [0x221008:8]=0x221008 obj.__dso_handle
0x0000491e      e8edd7ffff     call sym..plt.got
0x00004923      e848ffffff     call sym.deregister_tm_clones
0x00004928      c605d9c72100.  mov byte [obj.completed.7697], 1        ; [0x221108:1]=0
0x0000492f      5d             pop rbp
0x00004930      c3             ret
0x00004931      0f1f80000000.  nop dword [rax]
0x00004938      f3c3           ret
0x0000493a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00004940      55             push rbp
0x00004941      4889e5         mov rbp, rsp
0x00004944      5d             pop rbp
0x00004945      e966ffffff     jmp sym.register_tm_clones
0x0000494a      660f1f440000   nop word [rax + rax]
;-- compare_words:
0x00004950      4c8b5608       mov r10, qword [rsi + 8]                ; .//src:545
0x00004954      4c8b4f08       mov r9, qword [rdi + 8]
0x00004958      4d39ca         cmp r10, r9
0x0000495b      4d89c8         mov r8, r9
0x0000495e      4d0f4ec2       cmovle r8, r10
0x00004962      803d17cf2100.  cmp byte [obj.ignore_case], 0           ; .//src:554 ; [0x221880:1]=0
0x00004969      7545           jne 0x49b0
0x0000496b      4d85c0         test r8, r8                             ; .//src:566
0x0000496e      7e2d           jle 0x499d
0x00004970      488b3f         mov rdi, qword [rdi]                    ; .//src:568
0x00004973      488b36         mov rsi, qword [rsi]                    ; .//src:569
0x00004976      0fb607         movzx eax, byte [rdi]                   ; .//src:568
0x00004979      0fb616         movzx edx, byte [rsi]                   ; .//src:569
0x0000497c      29d0           sub eax, edx                            ; .//src:570
0x0000497e      752e           jne 0x49ae
0x00004980      31d2           xor edx, edx                            ; .//src:566
0x00004982      eb10           jmp 0x4994
0x00004984      0f1f4000       nop dword [rax]
0x00004988      0fb60417       movzx eax, byte [rdi + rdx]             ; .//src:568
0x0000498c      0fb60c16       movzx ecx, byte [rsi + rdx]             ; .//src:569
0x00004990      29c8           sub eax, ecx                            ; .//src:570
0x00004992      751a           jne 0x49ae
0x00004994      4883c201       add rdx, 1                              ; .//src:566
0x00004998      4939d0         cmp r8, rdx
0x0000499b      75eb           jne 0x4988
0x0000499d      4d39ca         cmp r10, r9                             ; .//src:575
0x000049a0      7f07           jg 0x49a9
0x000049a2      0f9cc0         setl al
0x000049a5      0fb6c0         movzx eax, al
0x000049a8      c3             ret
0x000049a9      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000049ae      f3c3           ret                                     ; .//src:578
0x000049b0      4d85c0         test r8, r8                             ; .//src:556
0x000049b3      7ee8           jle 0x499d
0x000049b5      4c8b1e         mov r11, qword [rsi]                    ; .//src:559
0x000049b8      488b3f         mov rdi, qword [rdi]                    ; .//src:558
0x000049bb      488d35feca21.  lea rsi, obj.folded_chars               ; 0x2214c0
0x000049c2      0fb607         movzx eax, byte [rdi]
0x000049c5      410fb613       movzx edx, byte [r11]                   ; .//src:559
0x000049c9      0fb60406       movzx eax, byte [rsi + rax]             ; .//src:558
0x000049cd      0fb61416       movzx edx, byte [rsi + rdx]             ; .//src:559
0x000049d1      29d0           sub eax, edx                            ; .//src:560
0x000049d3      75d9           jne 0x49ae
0x000049d5      31d2           xor edx, edx                            ; .//src:556
0x000049d7      eb1c           jmp 0x49f5
0x000049d9      0f1f80000000.  nop dword [rax]
0x000049e0      0fb60417       movzx eax, byte [rdi + rdx]             ; .//src:558
0x000049e4      410fb60c13     movzx ecx, byte [r11 + rdx]             ; .//src:559
0x000049e9      0fb60406       movzx eax, byte [rsi + rax]             ; .//src:558
0x000049ed      0fb60c0e       movzx ecx, byte [rsi + rcx]             ; .//src:559
0x000049f1      29c8           sub eax, ecx                            ; .//src:560
0x000049f3      75b9           jne 0x49ae
0x000049f5      4883c201       add rdx, 1                              ; .//src:556
0x000049f9      4939d0         cmp r8, rdx
0x000049fc      75e2           jne 0x49e0
0x000049fe      eb9d           jmp 0x499d
;-- matcher_error:
0x00004a00      53             push rbx                                ; .//src:288
0x00004a01      488d35006501.  lea rsi, str.error_in_regular_expression_matcher ; .//src:289 ; 0x1af08 ; "error in regular expression matcher"
0x00004a08      ba05000000     mov edx, 5
0x00004a0d      31ff           xor edi, edi
0x00004a0f      e86cd3ffff     call sym.imp.dcgettext
0x00004a14      4889c3         mov rbx, rax
0x00004a17      e864d2ffff     call sym.imp.__errno_location
0x00004a1c      8b30           mov esi, dword [rax]
0x00004a1e      4889da         mov rdx, rbx
0x00004a21      bf01000000     mov edi, 1
0x00004a26      31c0           xor eax, eax
0x00004a28      e8d3d5ffff     call sym.imp.error
0x00004a2d      0f1f00         nop dword [rax]
;-- copy_unescaped_string:
0x00004a30      4154           push r12                                ; .//src:300
0x00004a32      55             push rbp
0x00004a33      53             push rbx
0x00004a34      4889fb         mov rbx, rdi
0x00004a37      e864d3ffff     call sym.imp.strlen                     ; .//src:306
0x00004a3c      488d7801       lea rdi, [rax + 1]
0x00004a40      e87b4e0000     call sym.xmalloc
0x00004a45      4989c4         mov r12, rax
0x00004a48      0fb603         movzx eax, byte [rbx]
0x00004a4b      4c89e5         mov rbp, r12                            ; .//src:307
0x00004a4e      84c0           test al, al                             ; .//src:309
0x00004a50      741c           je 0x4a6e
0x00004a52      3c5c           cmp al, 0x5c                            ; .//src:311
0x00004a54      0fb65301       movzx edx, byte [rbx + 1]
0x00004a58      488d4b01       lea rcx, [rbx + 1]
0x00004a5c      7422           je 0x4a80
0x00004a5e      884500         mov byte [rbp], al
0x00004a61      89d0           mov eax, edx
0x00004a63      4883c501       add rbp, 1                              ; .//src:268
0x00004a67      84c0           test al, al                             ; .//src:232
0x00004a69      4889cb         mov rbx, rcx
0x00004a6c      75e4           jne 0x4a52
0x00004a6e      c6450000       mov byte [rbp], 0
0x00004a72      4c89e0         mov rax, r12
0x00004a75      5b             pop rbx                                 ; .//src:142
0x00004a76      5d             pop rbp
0x00004a77      415c           pop r12
0x00004a79      c3             ret
0x00004a7a      660f1f440000   nop word [rax + rax]
0x00004a80      80fa66         cmp dl, 0x66
0x00004a83      0f8497010000   je 0x4c20
0x00004a89      7f3d           jg 0x4ac8
0x00004a8b      80fa61         cmp dl, 0x61
0x00004a8e      0f84a4010000   je 0x4c38
0x00004a94      0f8ece000000   jle 0x4b68
0x00004a9a      80fa62         cmp dl, 0x62
0x00004a9d      0f84c5010000   je 0x4c68
0x00004aa3      80fa63         cmp dl, 0x63
0x00004aa6      0f850c010000   jne 0x4bb8
0x00004aac      0f1f4000       nop dword [rax]
0x00004ab0      4883c101       add rcx, 1
0x00004ab4      803900         cmp byte [rcx], 0
0x00004ab7      74b5           je 0x4a6e
0x00004ab9      4883c101       add rcx, 1
0x00004abd      803900         cmp byte [rcx], 0
0x00004ac0      75ee           jne 0x4ab0
0x00004ac2      ebaa           jmp 0x4a6e
0x00004ac4      0f1f4000       nop dword [rax]
0x00004ac8      80fa74         cmp dl, 0x74
0x00004acb      0f847f010000   je 0x4c50
0x00004ad1      7e6d           jle 0x4b40
0x00004ad3      80fa76         cmp dl, 0x76
0x00004ad6      0f8414010000   je 0x4bf0
0x00004adc      80fa78         cmp dl, 0x78
0x00004adf      0f85d3000000   jne 0x4bb8
0x00004ae5      e8f6d5ffff     call sym.imp.__ctype_b_loc
0x00004aea      4c8b00         mov r8, qword [rax]                     ; .//src:147
0x00004aed      4883c302       add rbx, 2
0x00004af1      31ff           xor edi, edi
0x00004af3      31c9           xor ecx, ecx
0x00004af5      0fbe13         movsx edx, byte [rbx]
0x00004af8      0fb6f2         movzx esi, dl
0x00004afb      89d0           mov eax, edx
0x00004afd      41f644700110   test byte [r8 + rsi*2 + 1], 0x10
0x00004b03      0f8487010000   je 0x4c90
0x00004b09      89ce           mov esi, ecx
0x00004b0b      8d489f         lea ecx, [rax - 0x61]
0x00004b0e      c1e604         shl esi, 4
0x00004b11      80f905         cmp cl, 5
0x00004b14      0f87b6000000   ja 0x4bd0
0x00004b1a      8d42a9         lea eax, [rdx - 0x57]
0x00004b1d      83c701         add edi, 1
0x00004b20      4883c301       add rbx, 1
0x00004b24      8d0c06         lea ecx, [rsi + rax]
0x00004b27      83ff03         cmp edi, 3
0x00004b2a      75c9           jne 0x4af5
0x00004b2c      884d00         mov byte [rbp], cl
0x00004b2f      0fb603         movzx eax, byte [rbx]
0x00004b32      4883c501       add rbp, 1
0x00004b36      e913ffffff     jmp 0x4a4e
0x00004b3b      0f1f440000     nop dword [rax + rax]
0x00004b40      80fa6e         cmp dl, 0x6e
0x00004b43      0f84bf000000   je 0x4c08                               ; .//src:198
0x00004b49      80fa72         cmp dl, 0x72
0x00004b4c      756a           jne 0x4bb8
0x00004b4e      c645000d       mov byte [rbp], 0xd
0x00004b52      0fb64302       movzx eax, byte [rbx + 2]
0x00004b56      4883c501       add rbp, 1
0x00004b5a      4883c302       add rbx, 2
0x00004b5e      e9ebfeffff     jmp 0x4a4e
0x00004b63      0f1f440000     nop dword [rax + rax]
0x00004b68      84d2           test dl, dl
0x00004b6a      0f84fefeffff   je 0x4a6e                               ; .//src:161
0x00004b70      80fa30         cmp dl, 0x30
0x00004b73      7543           jne 0x4bb8
0x00004b75      488d5302       lea rdx, [rbx + 2]
0x00004b79      0fbe02         movsx eax, byte [rdx]
0x00004b7c      31c9           xor ecx, ecx
0x00004b7e      488d7b05       lea rdi, [rbx + 5]
0x00004b82      8d70d0         lea esi, [rax - 0x30]
0x00004b85      4080fe07       cmp sil, 7
0x00004b89      7720           ja 0x4bab
0x00004b8b      488d5a01       lea rbx, [rdx + 1]
0x00004b8f      8d4cc8d0       lea ecx, [rax + rcx*8 - 0x30]
0x00004b93      4839df         cmp rdi, rbx
0x00004b96      0f84e4000000   je 0x4c80
0x00004b9c      4889da         mov rdx, rbx
0x00004b9f      0fbe02         movsx eax, byte [rdx]
0x00004ba2      8d70d0         lea esi, [rax - 0x30]
0x00004ba5      4080fe07       cmp sil, 7
0x00004ba9      76e0           jbe 0x4b8b
0x00004bab      4889d3         mov rbx, rdx
0x00004bae      e9d1000000     jmp 0x4c84
0x00004bb3      0f1f440000     nop dword [rax + rax]
0x00004bb8      c645005c       mov byte [rbp], 0x5c                    ; '\'
0x00004bbc      885501         mov byte [rbp + 1], dl
0x00004bbf      4883c302       add rbx, 2                              ; .//src:223
0x00004bc3      0fb603         movzx eax, byte [rbx]
0x00004bc6      4883c502       add rbp, 2
0x00004bca      e97ffeffff     jmp 0x4a4e
0x00004bcf      90             nop
0x00004bd0      448d48bf       lea r9d, [rax - 0x41]
0x00004bd4      8d4ad0         lea ecx, [rdx - 0x30]
0x00004bd7      8d42c9         lea eax, [rdx - 0x37]
0x00004bda      4180f905       cmp r9b, 5
0x00004bde      0f47c1         cmova eax, ecx
0x00004be1      e937ffffff     jmp 0x4b1d
0x00004be6      662e0f1f8400.  nop word cs:[rax + rax]
0x00004bf0      c645000b       mov byte [rbp], 0xb
0x00004bf4      0fb64302       movzx eax, byte [rbx + 2]
0x00004bf8      4883c501       add rbp, 1
0x00004bfc      4883c302       add rbx, 2
0x00004c00      e949feffff     jmp 0x4a4e
0x00004c05      0f1f00         nop dword [rax]
0x00004c08      c645000a       mov byte [rbp], 0xa
0x00004c0c      0fb64302       movzx eax, byte [rbx + 2]
0x00004c10      4883c501       add rbp, 1
0x00004c14      4883c302       add rbx, 2
0x00004c18      e931feffff     jmp 0x4a4e
0x00004c1d      0f1f00         nop dword [rax]
0x00004c20      c645000c       mov byte [rbp], 0xc
0x00004c24      0fb64302       movzx eax, byte [rbx + 2]
0x00004c28      4883c501       add rbp, 1
0x00004c2c      4883c302       add rbx, 2
0x00004c30      e919feffff     jmp 0x4a4e
0x00004c35      0f1f00         nop dword [rax]
0x00004c38      c6450007       mov byte [rbp], 7
0x00004c3c      0fb64302       movzx eax, byte [rbx + 2]
0x00004c40      4883c501       add rbp, 1
0x00004c44      4883c302       add rbx, 2
0x00004c48      e901feffff     jmp 0x4a4e
0x00004c4d      0f1f00         nop dword [rax]
0x00004c50      c6450009       mov byte [rbp], 9
0x00004c54      0fb64302       movzx eax, byte [rbx + 2]
0x00004c58      4883c501       add rbp, 1
0x00004c5c      4883c302       add rbx, 2
0x00004c60      e9e9fdffff     jmp 0x4a4e
0x00004c65      0f1f00         nop dword [rax]
0x00004c68      c6450008       mov byte [rbp], 8
0x00004c6c      0fb64302       movzx eax, byte [rbx + 2]
0x00004c70      4883c501       add rbp, 1
0x00004c74      4883c302       add rbx, 2
0x00004c78      e9d1fdffff     jmp 0x4a4e
0x00004c7d      0f1f00         nop dword [rax]
0x00004c80      0fb64201       movzx eax, byte [rdx + 1]               ; .//src:166
0x00004c84      884d00         mov byte [rbp], cl
0x00004c87      4883c501       add rbp, 1
0x00004c8b      e9befdffff     jmp 0x4a4e
0x00004c90      85ff           test edi, edi
0x00004c92      0f8594feffff   jne 0x4b2c                              ; .//src:153
0x00004c98      ba5c780000     mov edx, 0x785c                         ; '\x' ; "v\x06C\xc6D>\x02'I\x83\xc7\x03A\x89\xc0M9\xfdv\x05C\xc6\x04>\I\x8dG\x01I9\xc5v\r\x89\xd8\xc0\xe8\x06\x83\xc00C\x88D>\x01I\x8dG\x02I9\xc5v\x10\x89\xd8\xc0\xe8\x03\x83\xe0\a\x83\xc00C\x88D>\x02\x83\xe3\aH\x83\xc5\x01I\x83\xc7\x03\x83\xc30H9\xcd\x0f\x83\xe5\xf7\xff\xff\x89\xd6M9\xfdv\x04C\x88\x1c>\x0f\xb6\x1c/I\x83\xc7\x01\x84\xd2\x0f\x85J\xff\xff\xff\x89\xf0\x83\xf0\x01D!\xc0E\x84\xd2t\x0eM9\xfdv\x05C\xc6\x04>\I\x83\xc7\x01H\x83\xc5\x01H9\xcd\x0f\x83~\xf7\xff\xff\x84\xc0\x0f\x84\xf8\x03"
0x00004c9d      4883c502       add rbp, 2
0x00004ca1      668955fe       mov word [rbp - 2], dx
0x00004ca5      e9a4fdffff     jmp 0x4a4e
0x00004caa      660f1f440000   nop word [rax + rax]                    ; .//src:113
;-- compile_regex:
0x00004cb0      803dc9cb2100.  cmp byte [obj.ignore_case], 0           ; [0x221880:1]=0
0x00004cb7      488d4748       lea rax, [rdi + 0x48]
0x00004cbb      4154           push r12
0x00004cbd      55             push rbp                                ; .//src:111
0x00004cbe      53             push rbx
0x00004cbf      ba00000000     mov edx, 0
0x00004cc4      488b1f         mov rbx, qword [rdi]
0x00004cc7      48894728       mov qword [rdi + 0x28], rax
0x00004ccb      488d05eec721.  lea rax, obj.folded_chars               ; 0x2214c0
0x00004cd2      488d6f08       lea rbp, [rdi + 8]
0x00004cd6      48c747080000.  mov qword [rdi + 8], 0
0x00004cde      48c747100000.  mov qword [rdi + 0x10], 0
0x00004ce6      480f44c2       cmove rax, rdx
0x00004cea      48894730       mov qword [rdi + 0x30], rax
0x00004cee      4889df         mov rdi, rbx
0x00004cf1      e8aad0ffff     call sym.imp.strlen
0x00004cf6      4889ea         mov rdx, rbp
0x00004cf9      4889c6         mov rsi, rax
0x00004cfc      4889df         mov rdi, rbx
0x00004cff      e8fc2e0100     call sym.rpl_re_compile_pattern
0x00004d04      4885c0         test rax, rax
0x00004d07      750c           jne 0x4d15
0x00004d09      5b             pop rbx
0x00004d0a      4889ef         mov rdi, rbp
0x00004d0d      5d             pop rbp                                 ; .//src:86
0x00004d0e      415c           pop r12
0x00004d10      e96b2f0100     jmp sym.rpl_re_compile_fastmap
0x00004d15      4889df         mov rdi, rbx
0x00004d18      4989c4         mov r12, rax
0x00004d1b      e8703c0000     call sym.quote
0x00004d20      488d35ba6901.  lea rsi, str.s__for_regexp__s           ; 0x1b6e1 ; "%s (for regexp %s)"
0x00004d27      4889c3         mov rbx, rax
0x00004d2a      ba05000000     mov edx, 5
0x00004d2f      31ff           xor edi, edi
0x00004d31      e84ad0ffff     call sym.imp.dcgettext
0x00004d36      4989d8         mov r8, rbx                             ; .//src:95
0x00004d39      4889c2         mov rdx, rax
0x00004d3c      4c89e1         mov rcx, r12
0x00004d3f      31f6           xor esi, esi
0x00004d41      bf01000000     mov edi, 1
0x00004d46      31c0           xor eax, eax
0x00004d48      e8b3d2ffff     call sym.imp.error
0x00004d4d      0f1f00         nop dword [rax]
;-- swallow_file_in_memory:
0x00004d50      55             push rbp
0x00004d51      53             push rbx
0x00004d52      4889f5         mov rbp, rsi
0x00004d55      4883ec18       sub rsp, 0x18
0x00004d59      64488b042528.  mov rax, qword fs:[0x28]
0x00004d62      4889442408     mov qword [rsp + 8], rax
0x00004d67      31c0           xor eax, eax
0x00004d69      4885ff         test rdi, rdi
0x00004d6c      7408           je 0x4d76
0x00004d6e      803f00         cmp byte [rdi], 0
0x00004d71      4889fb         mov rbx, rdi
0x00004d74      7542           jne 0x4db8
0x00004d76      488b3d53c321.  mov rdi, qword [obj.stdin]              ; .//src:90 ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x2210d0:8]=0
0x00004d7d      4889e6         mov rsi, rsp
0x00004d80      e82b3c0000     call sym.fread_file
0x00004d85      4885c0         test rax, rax
0x00004d88      48894500       mov qword [rbp], rax                    ; .//src:92
0x00004d8c      0f8488000000   je 0x4e1a
0x00004d92      48030424       add rax, qword [rsp]
0x00004d96      48894508       mov qword [rbp + 8], rax
0x00004d9a      488b442408     mov rax, qword [rsp + 8]
0x00004d9f      644833042528.  xor rax, qword fs:[0x28]
0x00004da8      756b           jne 0x4e15
0x00004daa      4883c418       add rsp, 0x18
0x00004dae      5b             pop rbx
0x00004daf      5d             pop rbp
0x00004db0      c3             ret
0x00004db1      0f1f80000000.  nop dword [rax]
0x00004db8      488d3dd36e01.  lea rdi, [0x0001bc92]                   ; "-"
0x00004dbf      b902000000     mov ecx, 2
0x00004dc4      4889de         mov rsi, rbx
0x00004dc7      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00004dc9      0f97c0         seta al
0x00004dcc      1c00           sbb al, 0
0x00004dce      84c0           test al, al
0x00004dd0      74a4           je 0x4d76
0x00004dd2      4889e6         mov rsi, rsp
0x00004dd5      4889df         mov rdi, rbx
0x00004dd8      e8333e0000     call sym.read_file
0x00004ddd      4885c0         test rax, rax                           ; .//src:286
0x00004de0      48894500       mov qword [rbp], rax
0x00004de4      75ac           jne 0x4d92
0x00004de6      4889da         mov rdx, rbx                            ; .//src:263
0x00004de9      be03000000     mov esi, 3                              ; .//src:258
0x00004dee      31ff           xor edi, edi
0x00004df0      e8cb390000     call sym.quotearg_n_style_colon
0x00004df5      4889c3         mov rbx, rax
0x00004df8      e883ceffff     call sym.imp.__errno_location
0x00004dfd      8b30           mov esi, dword [rax]
0x00004dff      488d150e6c01.  lea rdx, [0x0001ba14]                   ; "%s"
0x00004e06      4889d9         mov rcx, rbx
0x00004e09      bf01000000     mov edi, 1                              ; .//src:265
0x00004e0e      31c0           xor eax, eax
0x00004e10      e8ebd1ffff     call sym.imp.error
0x00004e15      e896cfffff     call sym.imp.__stack_chk_fail
0x00004e1a      488d1d716e01.  lea rbx, [0x0001bc92]                   ; .//src:272 ; "-"
0x00004e21      ebc3           jmp 0x4de6
0x00004e23      0f1f00         nop dword [rax]
0x00004e26      662e0f1f8400.  nop word cs:[rax + rax]
;-- digest_word_file:
0x00004e30      4155           push r13
0x00004e32      4154           push r12
0x00004e34      4989f4         mov r12, rsi
0x00004e37      55             push rbp
0x00004e38      53             push rbx
0x00004e39      4d8d6c2408     lea r13, [r12 + 8]
0x00004e3e      4883ec28       sub rsp, 0x28
0x00004e42      4889e6         mov rsi, rsp
0x00004e45      64488b042528.  mov rax, qword fs:[0x28]                ; .//src:278
0x00004e4e      4889442418     mov qword [rsp + 0x18], rax
0x00004e53      31c0           xor eax, eax
0x00004e55      e8f6feffff     call sym.swallow_file_in_memory
0x00004e5a      488b2c24       mov rbp, qword [rsp]
0x00004e5e      488b542408     mov rdx, qword [rsp + 8]
0x00004e63      31f6           xor esi, esi
0x00004e65      49c704240000.  mov qword [r12], 0
0x00004e6d      49c744240800.  mov qword [r12 + 8], 0
0x00004e76      31ff           xor edi, edi
0x00004e78      49c744241000.  mov qword [r12 + 0x10], 0
0x00004e81      4839d5         cmp rbp, rdx
0x00004e84      732d           jae 0x4eb3                              ; .//src:283
0x00004e86      807d000a       cmp byte [rbp], 0xa
0x00004e8a      4889eb         mov rbx, rbp
0x00004e8d      750e           jne 0x4e9d
0x00004e8f      e97d000000     jmp 0x4f11
0x00004e94      0f1f4000       nop dword [rax]
0x00004e98      803b0a         cmp byte [rbx], 0xa
0x00004e9b      7443           je 0x4ee0
0x00004e9d      4883c301       add rbx, 1
0x00004ea1      4839d3         cmp rbx, rdx                            ; .//src:288
0x00004ea4      75f2           jne 0x4e98                              ; .//src:295
0x00004ea6      4839d5         cmp rbp, rdx
0x00004ea9      723a           jb 0x4ee5
0x00004eab      4889d5         mov rbp, rdx
0x00004eae      4839d5         cmp rbp, rdx                            ; .//src:290
0x00004eb1      72d3           jb 0x4e86
0x00004eb3      488d0d96faff.  lea rcx, sym.compare_words              ; .//src:295 ; 0x4950 ; "L\x8bV\bL\x8bO\bM9\xcaM\x89\xc8M\x0fN\u0080=\x17\xcf!"
0x00004eba      ba10000000     mov edx, 0x10
0x00004ebf      e82cceffff     call sym.imp.qsort
0x00004ec4      488b442418     mov rax, qword [rsp + 0x18]
0x00004ec9      644833042528.  xor rax, qword fs:[0x28]
0x00004ed2      756e           jne 0x4f42
0x00004ed4      4883c428       add rsp, 0x28
0x00004ed8      5b             pop rbx
0x00004ed9      5d             pop rbp
0x00004eda      415c           pop r12
0x00004edc      415d           pop r13
0x00004ede      c3             ret
0x00004edf      90             nop
0x00004ee0      4839dd         cmp rbp, rbx
0x00004ee3      732c           jae 0x4f11
0x00004ee5      493b742408     cmp rsi, qword [r12 + 8]
0x00004eea      742e           je 0x4f1a
0x00004eec      4889f1         mov rcx, rsi
0x00004eef      4889d8         mov rax, rbx
0x00004ef2      4883c601       add rsi, 1
0x00004ef6      48c1e104       shl rcx, 4
0x00004efa      4829e8         sub rax, rbp
0x00004efd      4801f9         add rcx, rdi
0x00004f00      4839d3         cmp rbx, rdx
0x00004f03      488929         mov qword [rcx], rbp
0x00004f06      48894108       mov qword [rcx + 8], rax
0x00004f0a      4989742410     mov qword [r12 + 0x10], rsi
0x00004f0f      7329           jae 0x4f3a
0x00004f11      488d6b01       lea rbp, [rbx + 1]
0x00004f15      e967ffffff     jmp 0x4e81
0x00004f1a      ba10000000     mov edx, 0x10
0x00004f1f      4c89ee         mov rsi, r13
0x00004f22      e8694a0000     call sym.x2nrealloc
0x00004f27      498b742410     mov rsi, qword [r12 + 0x10]
0x00004f2c      4889c7         mov rdi, rax                            ; ../coreutils-8.31/src/x.c:-328
0x00004f2f      49890424       mov qword [r12], rax
0x00004f33      488b542408     mov rdx, qword [rsp + 8]
0x00004f38      ebb2           jmp 0x4eec
0x00004f3a      4889dd         mov rbp, rbx
0x00004f3d      e93fffffff     jmp 0x4e81
0x00004f42      e869ceffff     call sym.imp.__stack_chk_fail
0x00004f47      660f1f840000.  nop word [rax + rax]
;-- print_spaces:
0x00004f50      4885ff         test rdi, rdi
0x00004f53      7e43           jle 0x4f98
0x00004f55      53             push rbx
0x00004f56      4889fb         mov rbx, rdi
0x00004f59      0f1f80000000.  nop dword [rax]
0x00004f60      488b3d61c121.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x00004f67      488b4728       mov rax, qword [rdi + 0x28]
0x00004f6b      483b4730       cmp rax, qword [rdi + 0x30]
0x00004f6f      7317           jae 0x4f88
0x00004f71      488d5001       lea rdx, [rax + 1]
0x00004f75      48895728       mov qword [rdi + 0x28], rdx
0x00004f79      c60020         mov byte [rax], 0x20                    ; [0x20:1]=64 ; "@"
0x00004f7c      4883eb01       sub rbx, 1                              ; .//src:609
0x00004f80      75de           jne 0x4f60
0x00004f82      5b             pop rbx
0x00004f83      c3             ret
0x00004f84      0f1f4000       nop dword [rax]                         ; .//src:610
0x00004f88      be20000000     mov esi, 0x20                           ; "@"
0x00004f8d      e86eceffff     call sym.imp.__overflow
0x00004f92      ebe8           jmp 0x4f7c
0x00004f94      0f1f4000       nop dword [rax]
0x00004f98      f3c3           ret
0x00004f9a      660f1f440000   nop word [rax + rax]                    ; .//src:619
;-- print_field:
0x00004fa0      4839fe         cmp rsi, rdi
0x00004fa3      0f8617020000   jbe 0x51c0
0x00004fa9      4157           push r15
0x00004fab      4156           push r14
0x00004fad      4c8d358c6a01.  lea r14, obj.diacrit_diac               ; 0x1ba40
0x00004fb4      4155           push r13
0x00004fb6      4154           push r12
0x00004fb8      4c8d2d21c221.  lea r13, obj.edited_flag                ; 0x2211e0
0x00004fbf      55             push rbp
0x00004fc0      53             push rbx
0x00004fc1      4c8d25c06901.  lea r12, [0x0001b988]
0x00004fc8      4889fb         mov rbx, rdi
0x00004fcb      4989f7         mov r15, rsi
0x00004fce      4883ec18       sub rsp, 0x18
0x00004fd2      660f1f440000   nop word [rax + rax]
0x00004fd8      0fb613         movzx edx, byte [rbx]
0x00004fdb      4863c2         movsxd rax, edx
0x00004fde      89d5           mov ebp, edx
0x00004fe0      41807c050000   cmp byte [r13 + rax], 0
0x00004fe6      0f84b4000000   je 0x50a0
0x00004fec      410fb63406     movzx esi, byte [r14 + rax]
0x00004ff1      4084f6         test sil, sil
0x00004ff4      740d           je 0x5003
0x00004ff6      833d87c82100.  cmp dword [obj.output_format], 3        ; [0x221884:4]=0
0x00004ffd      0f842d010000   je 0x5130
0x00005003      4080fd5c       cmp bpl, 0x5c
0x00005007      0f844b010000   je 0x5158
0x0000500d      0f8fcd000000   jg 0x50e0
0x00005013      4080fd22       cmp bpl, 0x22
0x00005017      755f           jne 0x5078
0x00005019      488b3da8c021.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x00005020      488b4728       mov rax, qword [rdi + 0x28]
0x00005024      483b4730       cmp rax, qword [rdi + 0x30]
0x00005028      0f83fa020000   jae 0x5328
0x0000502e      488d5001       lea rdx, [rax + 1]
0x00005032      48895728       mov qword [rdi + 0x28], rdx
0x00005036      c60022         mov byte [rax], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00005039      488b3d88c021.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x00005040      488b4728       mov rax, qword [rdi + 0x28]
0x00005044      483b4730       cmp rax, qword [rdi + 0x30]
0x00005048      0f83e9020000   jae 0x5337
0x0000504e      488d5001       lea rdx, [rax + 1]
0x00005052      4883c301       add rbx, 1
0x00005056      4939df         cmp r15, rbx
0x00005059      48895728       mov qword [rdi + 0x28], rdx
0x0000505d      c60022         mov byte [rax], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00005060      0f8572ffffff   jne 0x4fd8
0x00005066      4883c418       add rsp, 0x18
0x0000506a      5b             pop rbx
0x0000506b      5d             pop rbp
0x0000506c      415c           pop r12
0x0000506e      415d           pop r13
0x00005070      415e           pop r14
0x00005072      415f           pop r15
0x00005074      c3             ret
0x00005075      0f1f00         nop dword [rax]
0x00005078      7c78           jl 0x50f2
0x0000507a      4080fd26       cmp bpl, 0x26
0x0000507e      7f72           jg 0x50f2
0x00005080      488b3d41c021.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x00005087      488b4728       mov rax, qword [rdi + 0x28]
0x0000508b      483b4730       cmp rax, qword [rdi + 0x30]
0x0000508f      0f837c020000   jae 0x5311
0x00005095      488d4801       lea rcx, [rax + 1]
0x00005099      48894f28       mov qword [rdi + 0x28], rcx
0x0000509d      c6005c         mov byte [rax], 0x5c                    ; '\'
                                                                       ; [0x5c:1]=0
0x000050a0      488b3d21c021.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x000050a7      488b4728       mov rax, qword [rdi + 0x28]
0x000050ab      483b4730       cmp rax, qword [rdi + 0x30]
0x000050af      0f83cb000000   jae 0x5180
0x000050b5      488d5001       lea rdx, [rax + 1]
0x000050b9      48895728       mov qword [rdi + 0x28], rdx
0x000050bd      408828         mov byte [rax], bpl
0x000050c0      4883c301       add rbx, 1
0x000050c4      4939df         cmp r15, rbx
0x000050c7      0f850bffffff   jne 0x4fd8
0x000050cd      4883c418       add rsp, 0x18
0x000050d1      5b             pop rbx
0x000050d2      5d             pop rbp
0x000050d3      415c           pop r12
0x000050d5      415d           pop r13
0x000050d7      415e           pop r14
0x000050d9      415f           pop r15
0x000050db      c3             ret
0x000050dc      0f1f4000       nop dword [rax]
0x000050e0      4080fd7b       cmp bpl, 0x7b
0x000050e4      7432           je 0x5118
0x000050e6      4080fd7d       cmp bpl, 0x7d
0x000050ea      742c           je 0x5118
0x000050ec      4080fd5f       cmp bpl, 0x5f
0x000050f0      748e           je 0x5080
0x000050f2      488b3dcfbf21.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x000050f9      488b4728       mov rax, qword [rdi + 0x28]
0x000050fd      483b4730       cmp rax, qword [rdi + 0x30]
0x00005101      0f833f020000   jae 0x5346
0x00005107      488d5001       lea rdx, [rax + 1]
0x0000510b      48895728       mov qword [rdi + 0x28], rdx
0x0000510f      c60020         mov byte [rax], 0x20                    ; [0x20:1]=64 ; "@"
0x00005112      ebac           jmp 0x50c0
0x00005114      0f1f4000       nop dword [rax]
0x00005118      488d35266601.  lea rsi, str.c                          ; 0x1b745 ; "$\%c$"
0x0000511f      bf01000000     mov edi, 1
0x00005124      31c0           xor eax, eax
0x00005126      e885ceffff     call sym.imp.__printf_chk
0x0000512b      eb93           jmp 0x50c0
0x0000512d      0f1f00         nop dword [rax]
0x00005130      488d0d096a01.  lea rcx, obj.diacrit_base               ; 0x1bb40
0x00005137      4080fe09       cmp sil, 9
0x0000513b      0fbe0c01       movsx ecx, byte [rcx + rax]
0x0000513f      4189ca         mov r10d, ecx
0x00005142      0f8778ffffff   ja 0x50c0
0x00005148      496304b4       movsxd rax, dword [r12 + rsi*4]
0x0000514c      4c01e0         add rax, r12
0x0000514f      ffe0           jmp rax
0x00005151      0f1f80000000.  nop dword [rax]
0x00005158      488b0d69bf21.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x0000515f      488d3de56501.  lea rdi, str.ackslash                   ; 0x1b74b ; "\backslash{}"
0x00005166      ba0c000000     mov edx, 0xc
0x0000516b      be01000000     mov esi, 1
0x00005170      e80bceffff     call sym.imp.fwrite_unlocked
0x00005175      e946ffffff     jmp 0x50c0
0x0000517a      660f1f440000   nop word [rax + rax]
0x00005180      89d6           mov esi, edx
0x00005182      e879ccffff     call sym.imp.__overflow
0x00005187      e934ffffff     jmp 0x50c0
0x0000518c      0f1f4000       nop dword [rax]
0x00005190      488d05e47001.  lea rax, [0x0001c27b]
0x00005197      488d15686601.  lea rdx, [0x0001b806]                   ; "\"
0x0000519e      83f969         cmp ecx, 0x69
0x000051a1      488d35646501.  lea rsi, [0x0001b70c]                   ; "\'%s%c"
0x000051a8      bf01000000     mov edi, 1
0x000051ad      480f45d0       cmovne rdx, rax
0x000051b1      31c0           xor eax, eax
0x000051b3      e8f8cdffff     call sym.imp.__printf_chk
0x000051b8      e903ffffff     jmp 0x50c0
0x000051bd      0f1f00         nop dword [rax]
0x000051c0      f3c3           ret
0x000051c2      4180fa4f       cmp r10b, 0x4f
0x000051c6      488b0dfbbe21.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x000051cd      0f84a0010000   je 0x5373
0x000051d3      4180fa6f       cmp r10b, 0x6f
0x000051d7      0f8578010000   jne 0x5355
0x000051dd      488d3d576501.  lea rdi, str.o                          ; 0x1b73b ; "\o{}"
0x000051e4      ba04000000     mov edx, 4
0x000051e9      be01000000     mov esi, 1
0x000051ee      e88dcdffff     call sym.imp.fwrite_unlocked
0x000051f3      e9c8feffff     jmp 0x50c0
0x000051f8      488d057c7001.  lea rax, [0x0001c27b]
0x000051ff      488d15006601.  lea rdx, [0x0001b806]                   ; "\"
0x00005206      83f969         cmp ecx, 0x69
0x00005209      488d35036501.  lea rsi, [0x0001b713]                   ; "\^%s%c"
0x00005210      bf01000000     mov edi, 1
0x00005215      480f45d0       cmovne rdx, rax
0x00005219      31c0           xor eax, eax
0x0000521b      e890cdffff     call sym.imp.__printf_chk
0x00005220      e99bfeffff     jmp 0x50c0
0x00005225      488d054f7001.  lea rax, [0x0001c27b]
0x0000522c      488d15d36501.  lea rdx, [0x0001b806]                   ; "\"
0x00005233      83f969         cmp ecx, 0x69
0x00005236      488d35dd6401.  lea rsi, [0x0001b71a]                   ; "\\"%s%c"
0x0000523d      bf01000000     mov edi, 1
0x00005242      480f45d0       cmovne rdx, rax
0x00005246      31c0           xor eax, eax
0x00005248      e863cdffff     call sym.imp.__printf_chk
0x0000524d      e96efeffff     jmp 0x50c0
0x00005252      488d05227001.  lea rax, [0x0001c27b]
0x00005259      488d15a66501.  lea rdx, [0x0001b806]                   ; "\"
0x00005260      83f969         cmp ecx, 0x69
0x00005263      488d35b76401.  lea rsi, str.s_c                        ; 0x1b721 ; "\~%s%c"
0x0000526a      bf01000000     mov edi, 1
0x0000526f      480f45d0       cmovne rdx, rax
0x00005273      31c0           xor eax, eax
0x00005275      e836cdffff     call sym.imp.__printf_chk
0x0000527a      e941feffff     jmp 0x50c0
0x0000527f      488d35a26401.  lea rsi, str.c__c                       ; 0x1b728 ; "\c{%c}"
0x00005286      89ca           mov edx, ecx
0x00005288      bf01000000     mov edi, 1
0x0000528d      31c0           xor eax, eax
0x0000528f      e81ccdffff     call sym.imp.__printf_chk
0x00005294      e927feffff     jmp 0x50c0
0x00005299      4180fa41       cmp r10b, 0x41
0x0000529d      488b0d24be21.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x000052a4      0f84e4000000   je 0x538e
0x000052aa      4180fa61       cmp r10b, 0x61
0x000052ae      0f85a1000000   jne 0x5355
0x000052b4      488d3d746401.  lea rdi, str.a                          ; 0x1b72f ; "\aa{}"
0x000052bb      ba05000000     mov edx, 5
0x000052c0      be01000000     mov esi, 1
0x000052c5      e8b6ccffff     call sym.imp.fwrite_unlocked
0x000052ca      e9f1fdffff     jmp 0x50c0
0x000052cf      4180fa4f       cmp r10b, 0x4f
0x000052d3      488b0deebd21.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x000052da      0f84ea000000   je 0x53ca
0x000052e0      0f8ec3000000   jle 0x53a9
0x000052e6      4180fa61       cmp r10b, 0x61
0x000052ea      0f84f5000000   je 0x53e5
0x000052f0      4180fa6f       cmp r10b, 0x6f
0x000052f4      755f           jne 0x5355
0x000052f6      488d3df76301.  lea rdi, str.oe                         ; 0x1b6f4 ; "\oe{}"
0x000052fd      ba05000000     mov edx, 5
0x00005302      be01000000     mov esi, 1
0x00005307      e874ccffff     call sym.imp.fwrite_unlocked
0x0000530c      e9affdffff     jmp 0x50c0
0x00005311      be5c000000     mov esi, 0x5c                           ; '\'
0x00005316      8954240c       mov dword [rsp + 0xc], edx
0x0000531a      e8e1caffff     call sym.imp.__overflow
0x0000531f      8b54240c       mov edx, dword [rsp + 0xc]
0x00005323      e978fdffff     jmp 0x50a0
0x00005328      be22000000     mov esi, 0x22                           ; '"'
0x0000532d      e8cecaffff     call sym.imp.__overflow
0x00005332      e902fdffff     jmp 0x5039
0x00005337      be22000000     mov esi, 0x22                           ; '"'
0x0000533c      e8bfcaffff     call sym.imp.__overflow
0x00005341      e97afdffff     jmp 0x50c0
0x00005346      be20000000     mov esi, 0x20                           ; "@"
0x0000534b      e8b0caffff     call sym.imp.__overflow
0x00005350      e96bfdffff     jmp 0x50c0
0x00005355      488b4128       mov rax, qword [rcx + 0x28]
0x00005359      483b4130       cmp rax, qword [rcx + 0x30]
0x0000535d      0f839d000000   jae 0x5400
0x00005363      488d5001       lea rdx, [rax + 1]
0x00005367      48895128       mov qword [rcx + 0x28], rdx
0x0000536b      c60020         mov byte [rax], 0x20                    ; [0x20:1]=64 ; "@"
0x0000536e      e94dfdffff     jmp 0x50c0
0x00005373      488d3dc66301.  lea rdi, str.O                          ; 0x1b740 ; "\O{}"
0x0000537a      ba04000000     mov edx, 4
0x0000537f      be01000000     mov esi, 1
0x00005384      e8f7cbffff     call sym.imp.fwrite_unlocked
0x00005389      e932fdffff     jmp 0x50c0
0x0000538e      488d3da06301.  lea rdi, str.AA                         ; 0x1b735 ; "\AA{}"
0x00005395      ba05000000     mov edx, 5
0x0000539a      be01000000     mov esi, 1
0x0000539f      e8dccbffff     call sym.imp.fwrite_unlocked
0x000053a4      e917fdffff     jmp 0x50c0
0x000053a9      4180fa41       cmp r10b, 0x41
0x000053ad      75a6           jne 0x5355
0x000053af      488d3d506301.  lea rdi, str.AE                         ; 0x1b706 ; "\AE{}"
0x000053b6      ba05000000     mov edx, 5
0x000053bb      be01000000     mov esi, 1
0x000053c0      e8bbcbffff     call sym.imp.fwrite_unlocked
0x000053c5      e9f6fcffff     jmp 0x50c0
0x000053ca      488d3d296301.  lea rdi, str.OE                         ; 0x1b6fa ; "\OE{}"
0x000053d1      ba05000000     mov edx, 5
0x000053d6      be01000000     mov esi, 1
0x000053db      e8a0cbffff     call sym.imp.fwrite_unlocked
0x000053e0      e9dbfcffff     jmp 0x50c0
0x000053e5      488d3d146301.  lea rdi, str.e                          ; 0x1b700 ; "\ae{}"
0x000053ec      ba05000000     mov edx, 5
0x000053f1      be01000000     mov esi, 1
0x000053f6      e885cbffff     call sym.imp.fwrite_unlocked
0x000053fb      e9c0fcffff     jmp 0x50c0
0x00005400      be20000000     mov esi, 0x20                           ; "@"
0x00005405      4889cf         mov rdi, rcx
0x00005408      e8f3c9ffff     call sym.imp.__overflow
0x0000540d      e9aefcffff     jmp 0x50c0
0x00005412      0f1f4000       nop dword [rax]
0x00005416      662e0f1f8400.  nop word cs:[rax + rax]
;-- compare_occurs:
0x00005420      55             push rbp
0x00005421      53             push rbx
0x00005422      4889fd         mov rbp, rdi
0x00005425      4889f3         mov rbx, rsi
0x00005428      e823f5ffff     call sym.compare_words
0x0000542d      85c0           test eax, eax
0x0000542f      750f           jne 0x5440
0x00005431      488b03         mov rax, qword [rbx]
0x00005434      48394500       cmp qword [rbp], rax
0x00005438      720e           jb 0x5448
0x0000543a      0f97c0         seta al
0x0000543d      0fb6c0         movzx eax, al
0x00005440      5b             pop rbx
0x00005441      5d             pop rbp
0x00005442      c3             ret
0x00005443      0f1f440000     nop dword [rax + rax]
0x00005448      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000544d      ebf1           jmp 0x5440
0x0000544f      90             nop
;-- search_table.isra.1:
0x00005450      4883ea01       sub rdx, 1
0x00005454      7878           js 0x54ce
0x00005456      4156           push r14
0x00005458      4531f6         xor r14d, r14d
0x0000545b      4155           push r13
0x0000545d      4989d5         mov r13, rdx
0x00005460      4154           push r12
0x00005462      4989f4         mov r12, rsi
0x00005465      55             push rbp
0x00005466      4889fd         mov rbp, rdi
0x00005469      53             push rbx
0x0000546a      eb0f           jmp 0x547b
0x0000546c      0f1f4000       nop dword [rax]
0x00005470      744e           je 0x54c0
0x00005472      4c8d7301       lea r14, [rbx + 1]
0x00005476      4d39ee         cmp r14, r13
0x00005479      7f30           jg 0x54ab
0x0000547b      4b8d042e       lea rax, [r14 + r13]
0x0000547f      4889ef         mov rdi, rbp
0x00005482      4889c3         mov rbx, rax
0x00005485      48c1eb3f       shr rbx, 0x3f
0x00005489      4801c3         add rbx, rax
0x0000548c      48d1fb         sar rbx, 1
0x0000548f      4889de         mov rsi, rbx
0x00005492      48c1e604       shl rsi, 4
0x00005496      4c01e6         add rsi, r12
0x00005499      e8b2f4ffff     call sym.compare_words
0x0000549e      85c0           test eax, eax
0x000054a0      79ce           jns 0x5470
0x000054a2      4c8d6bff       lea r13, [rbx - 1]
0x000054a6      4d39ee         cmp r14, r13
0x000054a9      7ed0           jle 0x547b
0x000054ab      5b             pop rbx
0x000054ac      31c0           xor eax, eax
0x000054ae      5d             pop rbp
0x000054af      415c           pop r12
0x000054b1      415d           pop r13
0x000054b3      415e           pop r14
0x000054b5      c3             ret
0x000054b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000054c0      5b             pop rbx
0x000054c1      b801000000     mov eax, 1
0x000054c6      5d             pop rbp
0x000054c7      415c           pop r12
0x000054c9      415d           pop r13
0x000054cb      415e           pop r14
0x000054cd      c3             ret
0x000054ce      31c0           xor eax, eax
0x000054d0      c3             ret
0x000054d1      0f1f440000     nop dword [rax + rax]
0x000054d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- usage:
0x000054e0      4155           push r13
0x000054e2      4154           push r12
0x000054e4      ba05000000     mov edx, 5
0x000054e9      55             push rbp
0x000054ea      53             push rbx
0x000054eb      89fd           mov ebp, edi
0x000054ed      4881ec880000.  sub rsp, 0x88
0x000054f4      488b1da5c321.  mov rbx, qword [obj.program_name]       ; [0x2218a0:8]=0
0x000054fb      64488b042528.  mov rax, qword fs:[0x28]
0x00005504      4889442478     mov qword [rsp + 0x78], rax
0x00005509      31c0           xor eax, eax
0x0000550b      85ff           test edi, edi
0x0000550d      742e           je 0x553d
0x0000550f      488d351a5a01.  lea rsi, str.Try___s___help__for_more_information. ; 0x1af30 ; "Try '%s --help' for more information.\n"
0x00005516      31ff           xor edi, edi
0x00005518      e863c8ffff     call sym.imp.dcgettext
0x0000551d      488b3ddcbb21.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x221100:8]=0
0x00005524      4889c2         mov rdx, rax
0x00005527      4889d9         mov rcx, rbx
0x0000552a      be01000000     mov esi, 1
0x0000552f      31c0           xor eax, eax
0x00005531      e85acbffff     call sym.imp.__fprintf_chk
0x00005536      89ef           mov edi, ebp
0x00005538      e833cbffff     call sym.imp.exit
0x0000553d      488d35145a01.  lea rsi, str.Usage:__s__OPTION_...__INPUT_...____without__G_____or:___s__G__OPTION_...__INPUT__OUTPUT ; 0x1af58 ; "Usage: %s [OPTION]... [INPUT]...   (without -G)\n  or:  %s -G [OPTION]... [INPUT [OUTPUT]]\n"
0x00005544      31ff           xor edi, edi
0x00005546      e835c8ffff     call sym.imp.dcgettext
0x0000554b      4889d9         mov rcx, rbx
0x0000554e      4889da         mov rdx, rbx
0x00005551      4889c6         mov rsi, rax
0x00005554      bf01000000     mov edi, 1
0x00005559      31c0           xor eax, eax
0x0000555b      e850caffff     call sym.imp.__printf_chk
0x00005560      488b1d61bb21.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x00005567      488d354a5a01.  lea rsi, str.Output_a_permuted_index__including_context__of_the_words_in_the_input_files. ; 0x1afb8 ; "Output a permuted index, including context, of the words in the input files.\n"
0x0000556e      ba05000000     mov edx, 5
0x00005573      31ff           xor edi, edi
0x00005575      e806c8ffff     call sym.imp.dcgettext
0x0000557a      4889de         mov rsi, rbx
0x0000557d      4889c7         mov rdi, rax
0x00005580      e82bc9ffff     call sym.imp.fputs_unlocked
0x00005585      488b1d3cbb21.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x0000558c      488d35755a01.  lea rsi, str.With_no_FILE__or_when_FILE_is____read_standard_input. ; 0x1b008 ; "\nWith no FILE, or when FILE is -, read standard input.\n"
0x00005593      ba05000000     mov edx, 5
0x00005598      31ff           xor edi, edi
0x0000559a      e8e1c7ffff     call sym.imp.dcgettext
0x0000559f      4889de         mov rsi, rbx
0x000055a2      4889c7         mov rdi, rax
0x000055a5      e806c9ffff     call sym.imp.fputs_unlocked
0x000055aa      488b1d17bb21.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x000055b1      488d35885a01.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0x1b040 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x000055b8      ba05000000     mov edx, 5
0x000055bd      31ff           xor edi, edi
0x000055bf      e8bcc7ffff     call sym.imp.dcgettext
0x000055c4      4889de         mov rsi, rbx
0x000055c7      4889c7         mov rdi, rax
0x000055ca      e8e1c8ffff     call sym.imp.fputs_unlocked
0x000055cf      488b1df2ba21.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x000055d6      488d35b35a01.  lea rsi, str.A____auto_reference___________output_automatically_generated_references_____G____traditional______________behave_more_like_System_V__ptx ; 0x1b090 ; "  -A, --auto-reference           output automatically generated references\n  -G, --traditional              behave more like System V 'ptx'\n"
0x000055dd      ba05000000     mov edx, 5
0x000055e2      31ff           xor edi, edi
0x000055e4      e897c7ffff     call sym.imp.dcgettext
0x000055e9      4889de         mov rsi, rbx
0x000055ec      4889c7         mov rdi, rax
0x000055ef      e8bcc8ffff     call sym.imp.fputs_unlocked
0x000055f4      488b1dcdba21.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x000055fb      488d351e5b01.  lea rsi, str.F____flag_truncation_STRING___use_STRING_for_flagging_line_truncations.___________________________________The_default_is ; 0x1b120 ; "  -F, --flag-truncation=STRING   use STRING for flagging line truncations.\n                                 The default is '/'\n"
0x00005602      ba05000000     mov edx, 5
0x00005607      31ff           xor edi, edi
0x00005609      e872c7ffff     call sym.imp.dcgettext
0x0000560e      4889de         mov rsi, rbx
0x00005611      4889c7         mov rdi, rax
0x00005614      e897c8ffff     call sym.imp.fputs_unlocked
0x00005619      488b1da8ba21.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x00005620      488d35795b01.  lea rsi, str.M____macro_name_STRING________macro_name_to_use_instead_of__xx______O____format_roff______________generate_output_as_roff_directives_____R____right_side_refs__________put_references_at_right__not_counted_in__w_____S____sentence_regexp_REGEXP___for_end_of_lines_or_end_of_sentences_____T____format_tex_______________generate_output_as_TeX_directives ; 0x1b1a0 ; "  -M, --macro-name=STRING        macro name to use instead of 'xx'\n  -O, --format=roff              generate output as roff directives\n  -R, --right-side-refs          put references at right, not counted in -w\n  -S, --sentence-regexp=REGEXP   for end of lines or end of sentences\n  -T, --format=tex               generate output as TeX directives\n"
0x00005627      ba05000000     mov edx, 5
0x0000562c      31ff           xor edi, edi
0x0000562e      e84dc7ffff     call sym.imp.dcgettext
0x00005633      4889de         mov rsi, rbx
0x00005636      4889c7         mov rdi, rax
0x00005639      e872c8ffff     call sym.imp.fputs_unlocked
0x0000563e      488b1d83ba21.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x00005645      488d35b45c01.  lea rsi, str.W____word_regexp_REGEXP_______use_REGEXP_to_match_each_keyword_____b____break_file_FILE__________word_break_characters_in_this_FILE_____f____ignore_case______________fold_lower_case_to_upper_case_for_sorting_____g____gap_size_NUMBER__________gap_size_in_columns_between_output_fields_____i____ignore_file_FILE_________read_ignore_word_list_from_FILE_____o____only_file_FILE___________read_only_word_list_from_this_FILE ; 0x1b300 ; "  -W, --word-regexp=REGEXP       use REGEXP to match each keyword\n  -b, --break-file=FILE          word break characters in this FILE\n  -f, --ignore-case              fold lower case to upper case for sorting\n  -g, --gap-size=NUMBER          gap size in columns between output fields\n  -i, --ignore-file=FILE         read ignore word list from FILE\n  -o, --only-file=FILE           read only word list from this FILE\n"
0x0000564c      ba05000000     mov edx, 5
0x00005651      31ff           xor edi, edi
0x00005653      e828c7ffff     call sym.imp.dcgettext
0x00005658      4889de         mov rsi, rbx
0x0000565b      4889c7         mov rdi, rax
0x0000565e      e84dc8ffff     call sym.imp.fputs_unlocked
0x00005663      488b1d5eba21.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x0000566a      488d35375e01.  lea rsi, str.r____references_______________first_field_of_each_line_is_a_reference_____t____typeset_mode_________________not_implemented_______w____width_NUMBER_____________output_width_in_columns__reference_excluded ; 0x1b4a8 ; "  -r, --references               first field of each line is a reference\n  -t, --typeset-mode               - not implemented -\n  -w, --width=NUMBER             output width in columns, reference excluded\n"
0x00005671      ba05000000     mov edx, 5
0x00005676      31ff           xor edi, edi
0x00005678      e803c7ffff     call sym.imp.dcgettext
0x0000567d      4889de         mov rsi, rbx
0x00005680      4889c7         mov rdi, rax
0x00005683      e828c8ffff     call sym.imp.fputs_unlocked
0x00005688      488b1d39ba21.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x0000568f      488d35e25e01.  lea rsi, str.help_____display_this_help_and_exit ; 0x1b578 ; "      --help     display this help and exit\n"
0x00005696      ba05000000     mov edx, 5
0x0000569b      31ff           xor edi, edi
0x0000569d      e8dec6ffff     call sym.imp.dcgettext
0x000056a2      4889de         mov rsi, rbx
0x000056a5      4889c7         mov rdi, rax
0x000056a8      e803c8ffff     call sym.imp.fputs_unlocked
0x000056ad      488b1d14ba21.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x000056b4      488d35ed5e01.  lea rsi, str.version__output_version_information_and_exit ; 0x1b5a8 ; "      --version  output version information and exit\n"
0x000056bb      ba05000000     mov edx, 5
0x000056c0      31ff           xor edi, edi
0x000056c2      e8b9c6ffff     call sym.imp.dcgettext
0x000056c7      4889de         mov rsi, rbx
0x000056ca      4889c7         mov rdi, rax
0x000056cd      488d1d846001.  lea rbx, [0x0001b758]                   ; "ptx"
0x000056d4      e8d7c7ffff     call sym.imp.fputs_unlocked
0x000056d9      488d057c6001.  lea rax, [0x0001b75c]                   ; "["
0x000056e0      488d0db66001.  lea rcx, str.sha256sum                  ; 0x1b79d ; "sha256sum"
0x000056e7      48c744246000.  mov qword [rsp + 0x60], 0
0x000056f0      48c744246800.  mov qword [rsp + 0x68], 0
0x000056f9      4889e2         mov rdx, rsp
0x000056fc      48890424       mov qword [rsp], rax
0x00005700      488d05576001.  lea rax, [0x0001b75e]                   ; "test invocation"
0x00005707      48894c2430     mov qword [rsp + 0x30], rcx
0x0000570c      488d0d946001.  lea rcx, str.sha384sum                  ; 0x1b7a7 ; "sha384sum"
0x00005713      4889442408     mov qword [rsp + 8], rax
0x00005718      488d05b76001.  lea rax, [0x0001b7d6]                   ; "coreutils"
0x0000571f      48894c2440     mov qword [rsp + 0x40], rcx
0x00005724      488d0d866001.  lea rcx, str.sha512sum                  ; 0x1b7b1 ; "sha512sum"
0x0000572b      4889442410     mov qword [rsp + 0x10], rax
0x00005730      488d05376001.  lea rax, [0x0001b76e]                   ; "Multi-call invocation"
0x00005737      48894c2450     mov qword [rsp + 0x50], rcx
0x0000573c      4889442418     mov qword [rsp + 0x18], rax
0x00005741      488d053c6001.  lea rax, str.sha224sum                  ; 0x1b784 ; "sha224sum"
0x00005748      4889442420     mov qword [rsp + 0x20], rax
0x0000574d      488d053a6001.  lea rax, str.sha2_utilities             ; 0x1b78e ; "sha2 utilities"
0x00005754      4889442428     mov qword [rsp + 0x28], rax
0x00005759      4889442438     mov qword [rsp + 0x38], rax
0x0000575e      4889442448     mov qword [rsp + 0x48], rax
0x00005763      4889442458     mov qword [rsp + 0x58], rax
0x00005768      0f1f84000000.  nop dword [rax + rax]
0x00005770      4883c210       add rdx, 0x10
0x00005774      488b3a         mov rdi, qword [rdx]
0x00005777      4885ff         test rdi, rdi
0x0000577a      7413           je 0x578f
0x0000577c      b904000000     mov ecx, 4
0x00005781      4889de         mov rsi, rbx
0x00005784      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005786      0f97c0         seta al
0x00005789      1c00           sbb al, 0
0x0000578b      84c0           test al, al
0x0000578d      75e1           jne 0x5770
0x0000578f      4c8b6208       mov r12, qword [rdx + 8]
0x00005793      31ff           xor edi, edi
0x00005795      ba05000000     mov edx, 5
0x0000579a      488d351a6001.  lea rsi, str.s_online_help:___s         ; 0x1b7bb ; "\n%s online help: <%s>\n"
0x000057a1      4d85e4         test r12, r12
0x000057a4      0f84c1000000   je 0x586b
0x000057aa      e8d1c5ffff     call sym.imp.dcgettext
0x000057af      488d0d2a5e01.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x1b5e0 ; "https://www.gnu.org/software/coreutils/"
0x000057b6      488d15156001.  lea rdx, str.GNU_coreutils              ; 0x1b7d2 ; "GNU coreutils"
0x000057bd      4889c6         mov rsi, rax
0x000057c0      bf01000000     mov edi, 1
0x000057c5      31c0           xor eax, eax
0x000057c7      e8e4c7ffff     call sym.imp.__printf_chk
0x000057cc      31f6           xor esi, esi
0x000057ce      bf05000000     mov edi, 5
0x000057d3      e8c8c7ffff     call sym.imp.setlocale
0x000057d8      4885c0         test rax, rax
0x000057db      741c           je 0x57f9
0x000057dd      488d35fc5f01.  lea rsi, [0x0001b7e0]                   ; "en_"
0x000057e4      ba03000000     mov edx, 3
0x000057e9      4889c7         mov rdi, rax
0x000057ec      e89fc4ffff     call sym.imp.strncmp
0x000057f1      85c0           test eax, eax
0x000057f3      0f8507010000   jne 0x5900
0x000057f9      488d35e45f01.  lea rsi, str.Full_documentation___s_s   ; 0x1b7e4 ; "Full documentation <%s%s>\n"
0x00005800      31ff           xor edi, edi
0x00005802      ba05000000     mov edx, 5
0x00005807      e874c5ffff     call sym.imp.dcgettext
0x0000580c      488d0d455f01.  lea rcx, [0x0001b758]                   ; "ptx"
0x00005813      488d15c65d01.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x1b5e0 ; "https://www.gnu.org/software/coreutils/"
0x0000581a      4889c6         mov rsi, rax
0x0000581d      bf01000000     mov edi, 1
0x00005822      31c0           xor eax, eax
0x00005824      e887c7ffff     call sym.imp.__printf_chk
0x00005829      4939dc         cmp r12, rbx
0x0000582c      488d0d455f01.  lea rcx, [0x0001b778]                   ; " invocation"
0x00005833      488d1d416a01.  lea rbx, [0x0001c27b]
0x0000583a      480f44d9       cmove rbx, rcx
0x0000583e      488d350b5e01.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x1b650 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00005845      31ff           xor edi, edi
0x00005847      ba05000000     mov edx, 5
0x0000584c      e82fc5ffff     call sym.imp.dcgettext
0x00005851      4889d9         mov rcx, rbx
0x00005854      4889c6         mov rsi, rax
0x00005857      4c89e2         mov rdx, r12
0x0000585a      bf01000000     mov edi, 1
0x0000585f      31c0           xor eax, eax
0x00005861      e84ac7ffff     call sym.imp.__printf_chk
0x00005866      e9cbfcffff     jmp 0x5536
0x0000586b      e810c5ffff     call sym.imp.dcgettext
0x00005870      488d0d695d01.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x1b5e0 ; "https://www.gnu.org/software/coreutils/"
0x00005877      488d15545f01.  lea rdx, str.GNU_coreutils              ; 0x1b7d2 ; "GNU coreutils"
0x0000587e      4889c6         mov rsi, rax
0x00005881      bf01000000     mov edi, 1
0x00005886      31c0           xor eax, eax
0x00005888      e823c7ffff     call sym.imp.__printf_chk
0x0000588d      31f6           xor esi, esi
0x0000588f      bf05000000     mov edi, 5
0x00005894      e807c7ffff     call sym.imp.setlocale
0x00005899      4885c0         test rax, rax
0x0000589c      7418           je 0x58b6
0x0000589e      488d353b5f01.  lea rsi, [0x0001b7e0]                   ; "en_"
0x000058a5      ba03000000     mov edx, 3
0x000058aa      4889c7         mov rdi, rax
0x000058ad      e8dec3ffff     call sym.imp.strncmp
0x000058b2      85c0           test eax, eax
0x000058b4      7543           jne 0x58f9
0x000058b6      488d35275f01.  lea rsi, str.Full_documentation___s_s   ; 0x1b7e4 ; "Full documentation <%s%s>\n"
0x000058bd      ba05000000     mov edx, 5
0x000058c2      31ff           xor edi, edi
0x000058c4      4c8d258d5e01.  lea r12, [0x0001b758]                   ; "ptx"
0x000058cb      488d1da65e01.  lea rbx, [0x0001b778]                   ; " invocation"
0x000058d2      e8a9c4ffff     call sym.imp.dcgettext
0x000058d7      488d0d7a5e01.  lea rcx, [0x0001b758]                   ; "ptx"
0x000058de      488d15fb5c01.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x1b5e0 ; "https://www.gnu.org/software/coreutils/"
0x000058e5      4889c6         mov rsi, rax
0x000058e8      bf01000000     mov edi, 1
0x000058ed      31c0           xor eax, eax
0x000058ef      e8bcc6ffff     call sym.imp.__printf_chk
0x000058f4      e945ffffff     jmp 0x583e
0x000058f9      4c8d25585e01.  lea r12, [0x0001b758]                   ; "ptx"
0x00005900      4c8b2dc1b721.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x00005907      488d35fa5c01.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x1b608 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x0000590e      31ff           xor edi, edi
0x00005910      ba05000000     mov edx, 5
0x00005915      e866c4ffff     call sym.imp.dcgettext
0x0000591a      4c89ee         mov rsi, r13
0x0000591d      4889c7         mov rdi, rax
0x00005920      e88bc5ffff     call sym.imp.fputs_unlocked
0x00005925      e9cffeffff     jmp 0x57f9
0x0000592a      660f1f440000   nop word [rax + rax]
;-- __argmatch_die:
0x00005930      bf01000000     mov edi, 1                              ; ../coreutils-8.31/lib/argmatch.c:63
0x00005935      e9a6fbffff     jmp sym.usage
0x0000593a      660f1f440000   nop word [rax + rax]
;-- argmatch:
0x00005940      4157           push r15                                ; ../coreutils-8.31/lib/argmatch.c:86
0x00005942      4156           push r14
0x00005944      4989f7         mov r15, rsi
0x00005947      4155           push r13
0x00005949      4154           push r12
0x0000594b      4989cd         mov r13, rcx
0x0000594e      55             push rbp
0x0000594f      53             push rbx
0x00005950      4889d5         mov rbp, rdx
0x00005953      4883ec28       sub rsp, 0x28
0x00005957      48897c2408     mov qword [rsp + 8], rdi
0x0000595c      4889542418     mov qword [rsp + 0x18], rdx
0x00005961      e83ac4ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/argmatch.c:92
0x00005966      4d8b37         mov r14, qword [r15]                    ; ../coreutils-8.31/lib/argmatch.c:95
0x00005969      48c70424ffff.  mov qword [rsp], 0xffffffffffffffff     ; ../coreutils-8.31/lib/argmatch.c:89
0x00005971      4d85f6         test r14, r14                           ; ../coreutils-8.31/lib/argmatch.c:95
0x00005974      0f84b3000000   je 0x5a2d
0x0000597a      4989c4         mov r12, rax
0x0000597d      c644241700     mov byte [rsp + 0x17], 0                ; ../coreutils-8.31/lib/argmatch.c:90
0x00005982      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/argmatch.c:95
0x00005984      eb51           jmp 0x59d7
0x00005986      662e0f1f8400.  nop word cs:[rax + rax]
0x00005990      488b442418     mov rax, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/argmatch.c:108
0x00005995      4885c0         test rax, rax
0x00005998      0f84a2000000   je 0x5a40
0x0000599e      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/argmatch.c:109
0x000059a2      4c89ea         mov rdx, r13
0x000059a5      4889ee         mov rsi, rbp
0x000059a8      490faffd       imul rdi, r13
0x000059ac      4801c7         add rdi, rax
0x000059af      e8dcc4ffff     call sym.imp.memcmp
0x000059b4      85c0           test eax, eax                           ; ../coreutils-8.31/lib/argmatch.c:114
0x000059b6      0fb6442417     movzx eax, byte [rsp + 0x17]
0x000059bb      b901000000     mov ecx, 1
0x000059c0      0f45c1         cmovne eax, ecx
0x000059c3      88442417       mov byte [rsp + 0x17], al
0x000059c7      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:95
0x000059cb      4c01ed         add rbp, r13
0x000059ce      4d8b34df       mov r14, qword [r15 + rbx*8]
0x000059d2      4d85f6         test r14, r14
0x000059d5      7441           je 0x5a18
0x000059d7      488b742408     mov rsi, qword [rsp + 8]                ; ../coreutils-8.31/lib/argmatch.c:97
0x000059dc      4c89e2         mov rdx, r12
0x000059df      4c89f7         mov rdi, r14
0x000059e2      e8a9c2ffff     call sym.imp.strncmp
0x000059e7      85c0           test eax, eax
0x000059e9      75dc           jne 0x59c7
0x000059eb      4c89f7         mov rdi, r14                            ; ../coreutils-8.31/lib/argmatch.c:99
0x000059ee      e8adc3ffff     call sym.imp.strlen
0x000059f3      4c39e0         cmp rax, r12
0x000059f6      7458           je 0x5a50
0x000059f8      48833c24ff     cmp qword [rsp], 0xffffffffffffffff     ; ../coreutils-8.31/lib/argmatch.c:102
0x000059fd      7591           jne 0x5990
0x000059ff      48891c24       mov qword [rsp], rbx                    ; ../coreutils-8.31/lib/argmatch.c:104
0x00005a03      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:95
0x00005a07      4c01ed         add rbp, r13
0x00005a0a      4d8b34df       mov r14, qword [r15 + rbx*8]
0x00005a0e      4d85f6         test r14, r14
0x00005a11      75c4           jne 0x59d7
0x00005a13      0f1f440000     nop dword [rax + rax]
0x00005a18      807c241700     cmp byte [rsp + 0x17], 0                ; ../coreutils-8.31/lib/argmatch.c:120
0x00005a1d      48c7c0feffff.  mov rax, 0xfffffffffffffffe
0x00005a24      480f440424     cmove rax, qword [rsp]
0x00005a29      48890424       mov qword [rsp], rax
0x00005a2d      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/argmatch.c:123
0x00005a31      4883c428       add rsp, 0x28
0x00005a35      5b             pop rbx
0x00005a36      5d             pop rbp
0x00005a37      415c           pop r12
0x00005a39      415d           pop r13
0x00005a3b      415e           pop r14
0x00005a3d      415f           pop r15
0x00005a3f      c3             ret
0x00005a40      c644241701     mov byte [rsp + 0x17], 1                ; ../coreutils-8.31/lib/argmatch.c:114
0x00005a45      eb80           jmp 0x59c7
0x00005a47      660f1f840000.  nop word [rax + rax]
0x00005a50      48891c24       mov qword [rsp], rbx                    ; ../coreutils-8.31/lib/argmatch.c:101
0x00005a54      ebd7           jmp 0x5a2d
0x00005a56      662e0f1f8400.  nop word cs:[rax + rax]
;-- argmatch_invalid:
0x00005a60      4883faff       cmp rdx, 0xffffffffffffffff             ; ../coreutils-8.31/lib/argmatch.c:132
0x00005a64      4154           push r12
0x00005a66      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/argmatch.c:133
0x00005a6b      55             push rbp                                ; ../coreutils-8.31/lib/argmatch.c:132
0x00005a6c      4989f4         mov r12, rsi
0x00005a6f      53             push rbx
0x00005a70      4889fd         mov rbp, rdi
0x00005a73      744b           je 0x5ac0                               ; ../coreutils-8.31/lib/argmatch.c:133
0x00005a75      488d355c5f01.  lea rsi, str.ambiguous_argument__s_for__s ; 0x1b9d8 ; "ambiguous argument %s for %s"
0x00005a7c      31ff           xor edi, edi
0x00005a7e      e8fdc2ffff     call sym.imp.dcgettext
0x00005a83      4889c3         mov rbx, rax
0x00005a86      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/argmatch.c:137
0x00005a89      bf01000000     mov edi, 1
0x00005a8e      e8dd2e0000     call sym.quote_n
0x00005a93      4c89e2         mov rdx, r12
0x00005a96      4889c5         mov rbp, rax
0x00005a99      be08000000     mov esi, 8
0x00005a9e      31ff           xor edi, edi
0x00005aa0      e8fb2a0000     call sym.quotearg_n_style
0x00005aa5      4989e8         mov r8, rbp
0x00005aa8      4889da         mov rdx, rbx
0x00005aab      4889c1         mov rcx, rax
0x00005aae      5b             pop rbx                                 ; ../coreutils-8.31/lib/argmatch.c:139
0x00005aaf      5d             pop rbp
0x00005ab0      415c           pop r12
0x00005ab2      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/argmatch.c:137
0x00005ab4      31ff           xor edi, edi
0x00005ab6      31c0           xor eax, eax
0x00005ab8      e943c5ffff     jmp sym.imp.error
0x00005abd      0f1f00         nop dword [rax]
0x00005ac0      488d35f65e01.  lea rsi, str.invalid_argument__s_for__s ; ../coreutils-8.31/lib/argmatch.c:133 ; 0x1b9bd ; "invalid argument %s for %s"
0x00005ac7      31ff           xor edi, edi
0x00005ac9      e8b2c2ffff     call sym.imp.dcgettext
0x00005ace      4889c3         mov rbx, rax
0x00005ad1      ebb3           jmp 0x5a86
0x00005ad3      0f1f00         nop dword [rax]
0x00005ad6      662e0f1f8400.  nop word cs:[rax + rax]
;-- argmatch_valid:
0x00005ae0      4157           push r15                                ; ../coreutils-8.31/lib/argmatch.c:148
0x00005ae2      4156           push r14
0x00005ae4      4989fe         mov r14, rdi
0x00005ae7      4155           push r13
0x00005ae9      4154           push r12
0x00005aeb      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/argmatch.c:154
0x00005aed      55             push rbp                                ; ../coreutils-8.31/lib/argmatch.c:148
0x00005aee      53             push rbx
0x00005aef      4889f5         mov rbp, rsi
0x00005af2      488d35fc5e01.  lea rsi, str.Valid_arguments_are:       ; ../coreutils-8.31/lib/argmatch.c:154 ; 0x1b9f5 ; "Valid arguments are:"
0x00005af9      4989d4         mov r12, rdx                            ; ../coreutils-8.31/lib/argmatch.c:148
0x00005afc      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/argmatch.c:154
0x00005b01      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/argmatch.c:148
0x00005b05      488b1df4b521.  mov rbx, qword [obj.stderr]             ; ../coreutils-8.31/lib/argmatch.c:154 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x221100:8]=0
0x00005b0c      e86fc2ffff     call sym.imp.dcgettext
0x00005b11      4889c7         mov rdi, rax
0x00005b14      4889de         mov rsi, rbx
0x00005b17      e894c3ffff     call sym.imp.fputs_unlocked
0x00005b1c      4d8b3e         mov r15, qword [r14]                    ; ../coreutils-8.31/lib/argmatch.c:155
0x00005b1f      4d85ff         test r15, r15
0x00005b22      0f8490000000   je 0x5bb8
0x00005b28      4531ed         xor r13d, r13d                          ; ../coreutils-8.31/lib/argmatch.c:150
0x00005b2b      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/argmatch.c:155
0x00005b2d      eb39           jmp 0x5b68
0x00005b2f      90             nop
0x00005b30      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/argmatch.c:159
0x00005b33      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:155
0x00005b37      4989ed         mov r13, rbp                            ; ../coreutils-8.31/lib/argmatch.c:160
0x00005b3a      e8512e0000     call sym.quote                          ; ../coreutils-8.31/lib/argmatch.c:159
0x00005b3f      488b3dbab521.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x221100:8]=0
0x00005b46      488d15bd5e01.  lea rdx, [0x0001ba0a]                   ; "\n  - %s"
0x00005b4d      4889c1         mov rcx, rax
0x00005b50      be01000000     mov esi, 1
0x00005b55      31c0           xor eax, eax
0x00005b57      4c01e5         add rbp, r12
0x00005b5a      e831c5ffff     call sym.imp.__fprintf_chk
0x00005b5f      4d8b3cde       mov r15, qword [r14 + rbx*8]            ; ../coreutils-8.31/lib/argmatch.c:155
0x00005b63      4d85ff         test r15, r15
0x00005b66      7450           je 0x5bb8
0x00005b68      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/argmatch.c:156
0x00005b6b      74c3           je 0x5b30
0x00005b6d      4c89e2         mov rdx, r12                            ; ../coreutils-8.31/lib/argmatch.c:157
0x00005b70      4889ee         mov rsi, rbp
0x00005b73      4c89ef         mov rdi, r13
0x00005b76      e815c3ffff     call sym.imp.memcmp
0x00005b7b      85c0           test eax, eax
0x00005b7d      75b1           jne 0x5b30
0x00005b7f      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/argmatch.c:164
0x00005b82      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:155
0x00005b86      4c01e5         add rbp, r12
0x00005b89      e8022e0000     call sym.quote                          ; ../coreutils-8.31/lib/argmatch.c:164
0x00005b8e      488b3d6bb521.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x221100:8]=0
0x00005b95      488d15765e01.  lea rdx, str.s                          ; 0x1ba12 ; ", %s"
0x00005b9c      4889c1         mov rcx, rax
0x00005b9f      be01000000     mov esi, 1
0x00005ba4      31c0           xor eax, eax
0x00005ba6      e8e5c4ffff     call sym.imp.__fprintf_chk
0x00005bab      4d8b3cde       mov r15, qword [r14 + rbx*8]            ; ../coreutils-8.31/lib/argmatch.c:155
0x00005baf      4d85ff         test r15, r15
0x00005bb2      75b4           jne 0x5b68
0x00005bb4      0f1f4000       nop dword [rax]
0x00005bb8      488b3d41b521.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/argmatch.c:166 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x221100:8]=0
0x00005bbf      488b4728       mov rax, qword [rdi + 0x28]             ; stdio.h:100   return _IO_putc_unlocked (__c, __stream);
0x00005bc3      483b4730       cmp rax, qword [rdi + 0x30]
0x00005bc7      731f           jae 0x5be8
0x00005bc9      488d5001       lea rdx, [rax + 1]
0x00005bcd      48895728       mov qword [rdi + 0x28], rdx
0x00005bd1      c6000a         mov byte [rax], 0xa
0x00005bd4      4883c408       add rsp, 8
0x00005bd8      5b             pop rbx
0x00005bd9      5d             pop rbp
0x00005bda      415c           pop r12
0x00005bdc      415d           pop r13
0x00005bde      415e           pop r14
0x00005be0      415f           pop r15
0x00005be2      c3             ret
0x00005be3      0f1f440000     nop dword [rax + rax]
0x00005be8      4883c408       add rsp, 8
0x00005bec      be0a000000     mov esi, 0xa                            ; ../coreutils-8.31/lib/argmatch.c:-204
0x00005bf1      5b             pop rbx
0x00005bf2      5d             pop rbp
0x00005bf3      415c           pop r12
0x00005bf5      415d           pop r13
0x00005bf7      415e           pop r14
0x00005bf9      415f           pop r15
0x00005bfb      e900c2ffff     jmp sym.imp.__overflow
;-- __xargmatch_internal:
0x00005c00      4157           push r15
0x00005c02      4156           push r14
0x00005c04      4989fe         mov r14, rdi
0x00005c07      4155           push r13
0x00005c09      4154           push r12
0x00005c0b      4989f4         mov r12, rsi
0x00005c0e      55             push rbp
0x00005c0f      53             push rbx
0x00005c10      4889cd         mov rbp, rcx
0x00005c13      4889d3         mov rbx, rdx
0x00005c16      4c89c1         mov rcx, r8
0x00005c19      4889ea         mov rdx, rbp
0x00005c1c      4883ec08       sub rsp, 8
0x00005c20      4889de         mov rsi, rbx
0x00005c23      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/argmatch.c:-196
0x00005c26      4d89c7         mov r15, r8
0x00005c29      4d89cd         mov r13, r9
0x00005c2c      e80ffdffff     call sym.argmatch
0x00005c31      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/argmatch.c:-195
0x00005c34      780f           js 0x5c45                               ; ../coreutils-8.31/lib/argmatch.c:-193
0x00005c36      4883c408       add rsp, 8
0x00005c3a      5b             pop rbx
0x00005c3b      5d             pop rbp
0x00005c3c      415c           pop r12
0x00005c3e      415d           pop r13
0x00005c40      415e           pop r14                                 ; ../coreutils-8.31/lib/argmatch.c:-184
0x00005c42      415f           pop r15
0x00005c44      c3             ret
0x00005c45      4889c2         mov rdx, rax
0x00005c48      4c89e6         mov rsi, r12                            ; ../coreutils-8.31/lib/argmatch.c:-181
0x00005c4b      4c89f7         mov rdi, r14
0x00005c4e      e80dfeffff     call sym.argmatch_invalid
0x00005c53      4c89fa         mov rdx, r15
0x00005c56      4889ee         mov rsi, rbp
0x00005c59      4889df         mov rdi, rbx
0x00005c5c      e87ffeffff     call sym.argmatch_valid
0x00005c61      41ffd5         call r13
0x00005c64      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00005c6b      ebc9           jmp 0x5c36
0x00005c6d      0f1f00         nop dword [rax]
;-- argmatch_to_argument:
0x00005c70      4156           push r14
0x00005c72      4155           push r13
0x00005c74      4154           push r12
0x00005c76      55             push rbp
0x00005c77      53             push rbx
0x00005c78      4c8b36         mov r14, qword [rsi]
0x00005c7b      4d85f6         test r14, r14
0x00005c7e      7431           je 0x5cb1
0x00005c80      4989cc         mov r12, rcx
0x00005c83      4989fd         mov r13, rdi
0x00005c86      4889d5         mov rbp, rdx
0x00005c89      488d5e08       lea rbx, [rsi + 8]
0x00005c8d      eb10           jmp 0x5c9f                              ; ../coreutils-8.31/lib/argmatch.c:-177
0x00005c8f      90             nop
0x00005c90      4c8b33         mov r14, qword [rbx]
0x00005c93      4c01e5         add rbp, r12
0x00005c96      4883c308       add rbx, 8
0x00005c9a      4d85f6         test r14, r14
0x00005c9d      7412           je 0x5cb1
0x00005c9f      4c89e2         mov rdx, r12
0x00005ca2      4889ee         mov rsi, rbp
0x00005ca5      4c89ef         mov rdi, r13
0x00005ca8      e8e3c1ffff     call sym.imp.memcmp
0x00005cad      85c0           test eax, eax
0x00005caf      75df           jne 0x5c90
0x00005cb1      5b             pop rbx
0x00005cb2      4c89f0         mov rax, r14
0x00005cb5      5d             pop rbp
0x00005cb6      415c           pop r12
0x00005cb8      415d           pop r13
0x00005cba      415e           pop r14
0x00005cbc      c3             ret
0x00005cbd      0f1f00         nop dword [rax]
;-- close_stdout_set_file_name:
0x00005cc0      48893dd1bb21.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x221898:8]=0
0x00005cc7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00005cc8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00005cd0      40883db9bb21.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x221890:1]=0
0x00005cd7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00005cd8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00005ce0      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00005ce1      53             push rbx
0x00005ce2      4883ec08       sub rsp, 8
0x00005ce6      488b3ddbb321.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x00005ced      e8ae290100     call sym.close_stream
0x00005cf2      85c0           test eax, eax
0x00005cf4      7416           je 0x5d0c
0x00005cf6      e885bfffff     call sym.imp.__errno_location
0x00005cfb      803d8ebb2100.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x221890:1]=0
0x00005d02      4889c3         mov rbx, rax
0x00005d05      741c           je 0x5d23
0x00005d07      833820         cmp dword [rax], 0x20
0x00005d0a      7517           jne 0x5d23
0x00005d0c      488b3dedb321.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x221100:8]=0
0x00005d13      e888290100     call sym.close_stream
0x00005d18      85c0           test eax, eax
0x00005d1a      7546           jne 0x5d62
0x00005d1c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00005d20      5b             pop rbx
0x00005d21      5d             pop rbp
0x00005d22      c3             ret
0x00005d23      488d35ed5c01.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x1ba17 ; "write error"
0x00005d2a      31ff           xor edi, edi
0x00005d2c      ba05000000     mov edx, 5
0x00005d31      e84ac0ffff     call sym.imp.dcgettext
0x00005d36      488b3d5bbb21.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x221898:8]=0
0x00005d3d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00005d40      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00005d43      7428           je 0x5d6d
0x00005d45      e8462a0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x00005d4a      8b33           mov esi, dword [rbx]
0x00005d4c      488d15d05c01.  lea rdx, str.s:__s                      ; 0x1ba23 ; "%s: %s"
0x00005d53      4889c1         mov rcx, rax
0x00005d56      4989e8         mov r8, rbp
0x00005d59      31ff           xor edi, edi
0x00005d5b      31c0           xor eax, eax
0x00005d5d      e89ec2ffff     call sym.imp.error
0x00005d62      8b3de0b22100   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x221048:4]=1
0x00005d68      e833bfffff     call sym.imp._exit
0x00005d6d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x00005d6f      488d159e5c01.  lea rdx, [0x0001ba14]                   ; "%s"
0x00005d76      4889c1         mov rcx, rax
0x00005d79      31ff           xor edi, edi
0x00005d7b      31c0           xor eax, eax
0x00005d7d      e87ec2ffff     call sym.imp.error
0x00005d82      ebde           jmp 0x5d62
0x00005d84      662e0f1f8400.  nop word cs:[rax + rax]
0x00005d8e      6690           nop
;-- protect_fd:
0x00005d90      55             push rbp                                ; ../coreutils-8.31/lib/freopen-safer.c:41
0x00005d91      53             push rbx
0x00005d92      89fd           mov ebp, edi
0x00005d94      488d3da55e01.  lea rdi, [0x0001bc40]                   ; fcntl2.h:53       return __open_alias (__path, __oflag, __va_arg_pack ()); ; "/dev/null"
0x00005d9b      31f6           xor esi, esi
0x00005d9d      31c0           xor eax, eax
0x00005d9f      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/freopen-safer.c:41
0x00005da3      bb01000000     mov ebx, 1                              ; ../coreutils-8.31/lib/freopen-safer.c:52
0x00005da8      e863c2ffff     call sym.imp.open                       ; fcntl2.h:53       return __open_alias (__path, __oflag, __va_arg_pack ());
0x00005dad      39c5           cmp ebp, eax                            ; ../coreutils-8.31/lib/freopen-safer.c:43
0x00005daf      7418           je 0x5dc9
0x00005db1      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/freopen-safer.c:50
0x00005db3      85c0           test eax, eax                           ; ../coreutils-8.31/lib/freopen-safer.c:45
0x00005db5      7812           js 0x5dc9
0x00005db7      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/freopen-safer.c:47
0x00005db9      e8b2c0ffff     call sym.imp.close
0x00005dbe      e8bdbeffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/freopen-safer.c:48
0x00005dc3      c70009000000   mov dword [rax], 9
0x00005dc9      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/freopen-safer.c:53
0x00005dcd      89d8           mov eax, ebx
0x00005dcf      5b             pop rbx
0x00005dd0      5d             pop rbp
0x00005dd1      c3             ret
0x00005dd2      0f1f4000       nop dword [rax]
0x00005dd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- freopen_safer:
0x00005de0      4157           push r15                                ; ../coreutils-8.31/lib/freopen-safer.c:63
0x00005de2      4156           push r14
0x00005de4      4989f7         mov r15, rsi
0x00005de7      4155           push r13
0x00005de9      4154           push r12
0x00005deb      4989d4         mov r12, rdx
0x00005dee      55             push rbp
0x00005def      53             push rbx
0x00005df0      4883ec18       sub rsp, 0x18
0x00005df4      48897c2408     mov qword [rsp + 8], rdi
0x00005df9      4889d7         mov rdi, rdx                            ; ../coreutils-8.31/lib/freopen-safer.c:75
0x00005dfc      e8efc0ffff     call sym.imp.fileno
0x00005e01      89c3           mov ebx, eax
0x00005e03      e878beffff     call sym.imp.__errno_location
0x00005e08      83fb01         cmp ebx, 1
0x00005e0b      4989c6         mov r14, rax
0x00005e0e      0f845c010000   je 0x5f70
0x00005e14      83fb02         cmp ebx, 2
0x00005e17      0f8443010000   je 0x5f60
0x00005e1d      85db           test ebx, ebx
0x00005e1f      0f84b3000000   je 0x5ed8
0x00005e25      be02000000     mov esi, 2                              ; ../coreutils-8.31/lib/freopen-safer.c:78
0x00005e2a      bf02000000     mov edi, 2
0x00005e2f      e8acbfffff     call sym.imp.dup2
0x00005e34      83f802         cmp eax, 2
0x00005e37      0f95c3         setne bl
0x00005e3a      be01000000     mov esi, 1                              ; ../coreutils-8.31/lib/freopen-safer.c:82
0x00005e3f      bf01000000     mov edi, 1
0x00005e44      e897bfffff     call sym.imp.dup2
0x00005e49      83f801         cmp eax, 1
0x00005e4c      400f95c5       setne bpl
0x00005e50      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/freopen-safer.c:86
0x00005e52      31ff           xor edi, edi
0x00005e54      e887bfffff     call sym.imp.dup2
0x00005e59      85c0           test eax, eax
0x00005e5b      0f8487000000   je 0x5ee8
0x00005e61      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/freopen-safer.c:93
0x00005e63      e828ffffff     call sym.protect_fd
0x00005e68      84c0           test al, al
0x00005e6a      4189c5         mov r13d, eax
0x00005e6d      0f840d010000   je 0x5f80
0x00005e73      4084ed         test bpl, bpl                           ; ../coreutils-8.31/lib/freopen-safer.c:95
0x00005e76      7578           jne 0x5ef0
0x00005e78      84db           test bl, bl                             ; ../coreutils-8.31/lib/freopen-safer.c:97
0x00005e7a      7414           je 0x5e90
0x00005e7c      bf02000000     mov edi, 2
0x00005e81      e80affffff     call sym.protect_fd
0x00005e86      84c0           test al, al
0x00005e88      89c3           mov ebx, eax
0x00005e8a      0f84b0000000   je 0x5f40
0x00005e90      488b7c2408     mov rdi, qword [rsp + 8]                ; ../coreutils-8.31/lib/freopen-safer.c:100
0x00005e95      4c89e2         mov rdx, r12
0x00005e98      4c89fe         mov rsi, r15
0x00005e9b      e8b0bfffff     call sym.imp.freopen
0x00005ea0      4989c4         mov r12, rax
0x00005ea3      84db           test bl, bl                             ; ../coreutils-8.31/lib/freopen-safer.c:102
0x00005ea5      458b3e         mov r15d, dword [r14]                   ; ../coreutils-8.31/lib/freopen-safer.c:101
0x00005ea8      0f85a2000000   jne 0x5f50                              ; ../coreutils-8.31/lib/freopen-safer.c:102
0x00005eae      4084ed         test bpl, bpl                           ; ../coreutils-8.31/lib/freopen-safer.c:104
0x00005eb1      756d           jne 0x5f20
0x00005eb3      4584ed         test r13b, r13b                         ; ../coreutils-8.31/lib/freopen-safer.c:106
0x00005eb6      7577           jne 0x5f2f
0x00005eb8      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/freopen-safer.c:108
0x00005ebb      7503           jne 0x5ec0
0x00005ebd      45893e         mov dword [r14], r15d                   ; ../coreutils-8.31/lib/freopen-safer.c:109
0x00005ec0      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/freopen-safer.c:111
0x00005ec4      4c89e0         mov rax, r12
0x00005ec7      5b             pop rbx
0x00005ec8      5d             pop rbp
0x00005ec9      415c           pop r12
0x00005ecb      415d           pop r13
0x00005ecd      415e           pop r14
0x00005ecf      415f           pop r15
0x00005ed1      c3             ret
0x00005ed2      660f1f440000   nop word [rax + rax]
0x00005ed8      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/freopen-safer.c:72
0x00005eda      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/freopen-safer.c:71
0x00005edc      4531ed         xor r13d, r13d                          ; ../coreutils-8.31/lib/freopen-safer.c:70
0x00005edf      ebaf           jmp 0x5e90
0x00005ee1      0f1f80000000.  nop dword [rax]
0x00005ee8      4531ed         xor r13d, r13d
0x00005eeb      4084ed         test bpl, bpl                           ; ../coreutils-8.31/lib/freopen-safer.c:95
0x00005eee      7488           je 0x5e78
0x00005ef0      bf01000000     mov edi, 1
0x00005ef5      e896feffff     call sym.protect_fd
0x00005efa      84c0           test al, al
0x00005efc      89c5           mov ebp, eax
0x00005efe      0f8574ffffff   jne 0x5e78
0x00005f04      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/freopen-safer.c:96
0x00005f07      84db           test bl, bl                             ; ../coreutils-8.31/lib/freopen-safer.c:102
0x00005f09      458b3e         mov r15d, dword [r14]                   ; ../coreutils-8.31/lib/freopen-safer.c:101
0x00005f0c      7412           je 0x5f20                               ; ../coreutils-8.31/lib/freopen-safer.c:102
0x00005f0e      bf02000000     mov edi, 2                              ; ../coreutils-8.31/lib/freopen-safer.c:103
0x00005f13      e858bfffff     call sym.imp.close
0x00005f18      0f1f84000000.  nop dword [rax + rax]
0x00005f20      bf01000000     mov edi, 1                              ; ../coreutils-8.31/lib/freopen-safer.c:105
0x00005f25      e846bfffff     call sym.imp.close
0x00005f2a      4584ed         test r13b, r13b                         ; ../coreutils-8.31/lib/freopen-safer.c:106
0x00005f2d      7489           je 0x5eb8
0x00005f2f      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/freopen-safer.c:107
0x00005f31      e83abfffff     call sym.imp.close
0x00005f36      eb80           jmp 0x5eb8
0x00005f38      0f1f84000000.  nop dword [rax + rax]
0x00005f40      458b3e         mov r15d, dword [r14]                   ; ../coreutils-8.31/lib/freopen-safer.c:101
0x00005f43      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/freopen-safer.c:98
0x00005f46      662e0f1f8400.  nop word cs:[rax + rax]
0x00005f50      bf02000000     mov edi, 2                              ; ../coreutils-8.31/lib/freopen-safer.c:103
0x00005f55      e816bfffff     call sym.imp.close
0x00005f5a      e94fffffff     jmp 0x5eae
0x00005f5f      90             nop
0x00005f60      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/freopen-safer.c:72
0x00005f62      e9d3feffff     jmp 0x5e3a
0x00005f67      660f1f840000.  nop word [rax + rax]
0x00005f70      31db           xor ebx, ebx
0x00005f72      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/freopen-safer.c:71
0x00005f74      e9d7feffff     jmp 0x5e50
0x00005f79      0f1f80000000.  nop dword [rax]
0x00005f80      41bd01000000   mov r13d, 1                             ; ../coreutils-8.31/lib/freopen-safer.c:87
0x00005f86      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/freopen-safer.c:94
0x00005f89      e915ffffff     jmp 0x5ea3
0x00005f8e      6690           nop
;-- set_program_name:
0x00005f90      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00005f93      53             push rbx
0x00005f94      7477           je 0x600d                               ; ../coreutils-8.31/lib/progname.c:51
0x00005f96      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x00005f9b      4889fb         mov rbx, rdi
0x00005f9e      e86dbeffff     call sym.imp.strrchr
0x00005fa3      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00005fa6      7455           je 0x5ffd
0x00005fa8      4c8d4001       lea r8, [rax + 1]
0x00005fac      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x00005faf      4829da         sub rdx, rbx
0x00005fb2      4883fa06       cmp rdx, 6
0x00005fb6      7e45           jle 0x5ffd
0x00005fb8      488d70fa       lea rsi, [rax - 6]
0x00005fbc      488d3dc55c01.  lea rdi, str..libs                      ; 0x1bc88 ; "/.libs/"
0x00005fc3      b907000000     mov ecx, 7
0x00005fc8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005fca      0f97c2         seta dl
0x00005fcd      80da00         sbb dl, 0
0x00005fd0      84d2           test dl, dl
0x00005fd2      7529           jne 0x5ffd
0x00005fd4      488d3db55c01.  lea rdi, [0x0001bc90]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x00005fdb      b903000000     mov ecx, 3
0x00005fe0      4c89c6         mov rsi, r8
0x00005fe3      4c89c3         mov rbx, r8
0x00005fe6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005fe8      0f97c2         seta dl
0x00005feb      80da00         sbb dl, 0
0x00005fee      84d2           test dl, dl
0x00005ff0      750b           jne 0x5ffd
0x00005ff2      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00005ff6      48891dc3b021.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x2210c0:8]=0
0x00005ffd      48891d9cb821.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x2218a0:8]=0
0x00006004      48891dddb021.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x2210e8:8]=0
0x0000600b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x0000600c      c3             ret
0x0000600d      488b0decb021.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x221100:8]=0
0x00006014      488d3d355c01.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x1bc50 ; "A NULL argv[0] was passed through an exec system call.\n"
0x0000601b      ba37000000     mov edx, 0x37                           ; '7'
0x00006020      be01000000     mov esi, 1
0x00006025      e856c0ffff     call sym.imp.fwrite
0x0000602a      e841bcffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x0000602f      90             nop
;-- mbsstr_trimmed_wordbounded:
0x00006030      4157           push r15
0x00006032      4156           push r14
0x00006034      4989ff         mov r15, rdi
0x00006037      4155           push r13
0x00006039      4154           push r12
0x0000603b      4889f7         mov rdi, rsi
0x0000603e      55             push rbp
0x0000603f      53             push rbx
0x00006040      be02000000     mov esi, 2
0x00006045      4c8d2d146f01.  lea r13, obj.is_basic_table             ; 0x1cf60
0x0000604c      4881ecb80000.  sub rsp, 0xb8
0x00006053      488d5c2420     lea rbx, [rsp + 0x20]
0x00006058      4c8d642460     lea r12, [rsp + 0x60]
0x0000605d      64488b042528.  mov rax, qword fs:[0x28]
0x00006066      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000606e      31c0           xor eax, eax
0x00006070      4c8d7324       lea r14, [rbx + 0x24]
0x00006074      e8f72b0000     call sym.trim2
0x00006079      4889442408     mov qword [rsp + 8], rax
0x0000607e      6690           nop
0x00006080      41803f00       cmp byte [r15], 0
0x00006084      747f           je 0x6105
0x00006086      488b742408     mov rsi, qword [rsp + 8]
0x0000608b      4c89ff         mov rdi, r15
0x0000608e      e80d340100     call sym.mbsstr
0x00006093      4885c0         test rax, rax
0x00006096      4889c5         mov rbp, rax
0x00006099      746a           je 0x6105
0x0000609b      e8f0bcffff     call sym.imp.__ctype_get_mb_cur_max
0x000060a0      4883f801       cmp rax, 1
0x000060a4      0f879e000000   ja 0x6148
0x000060aa      4939ef         cmp r15, rbp
0x000060ad      0f8365060000   jae 0x6718
0x000060b3      e828c0ffff     call sym.imp.__ctype_b_loc
0x000060b8      0fb655ff       movzx edx, byte [rbp - 1]
0x000060bc      488b00         mov rax, qword [rax]
0x000060bf      488b7c2408     mov rdi, qword [rsp + 8]
0x000060c4      440fb73c50     movzx r15d, word [rax + rdx*2]
0x000060c9      6641c1ef03     shr r15w, 3
0x000060ce      4183f701       xor r15d, 1
0x000060d2      4489f8         mov eax, r15d
0x000060d5      83e001         and eax, 1
0x000060d8      88442410       mov byte [rsp + 0x10], al
0x000060dc      e8bfbcffff     call sym.imp.strlen
0x000060e1      0fb6540500     movzx edx, byte [rbp + rax]
0x000060e6      84d2           test dl, dl
0x000060e8      0f8546060000   jne 0x6734
0x000060ee      807c241000     cmp byte [rsp + 0x10], 0
0x000060f3      7515           jne 0x610a
0x000060f5      807d0000       cmp byte [rbp], 0
0x000060f9      740a           je 0x6105
0x000060fb      4c8d7d01       lea r15, [rbp + 1]
0x000060ff      41803f00       cmp byte [r15], 0
0x00006103      7581           jne 0x6086
0x00006105      c644241000     mov byte [rsp + 0x10], 0
0x0000610a      488b7c2408     mov rdi, qword [rsp + 8]
0x0000610f      e84cbbffff     call sym.imp.free
0x00006114      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x0000611c      6448331c2528.  xor rbx, qword fs:[0x28]
0x00006125      0fb6442410     movzx eax, byte [rsp + 0x10]
0x0000612a      0f8546080000   jne 0x6976
0x00006130      4881c4b80000.  add rsp, 0xb8
0x00006137      5b             pop rbx
0x00006138      5d             pop rbp
0x00006139      415c           pop r12
0x0000613b      415d           pop r13
0x0000613d      415e           pop r14
0x0000613f      415f           pop r15
0x00006141      c3             ret
0x00006142      660f1f440000   nop word [rax + rax]
0x00006148      4939ef         cmp r15, rbp
0x0000614b      4c897c2430     mov qword [rsp + 0x30], r15
0x00006150      c644242000     mov byte [rsp + 0x20], 0
0x00006155      48c743040000.  mov qword [rbx + 4], 0
0x0000615d      c644242c00     mov byte [rsp + 0x2c], 0
0x00006162      7273           jb 0x61d7
0x00006164      e99f050000     jmp 0x6708
0x00006169      0f1f80000000.  nop dword [rax]
0x00006170      4c8b7c2430     mov r15, qword [rsp + 0x30]
0x00006175      410fb617       movzx edx, byte [r15]
0x00006179      89d0           mov eax, edx
0x0000617b      c0e805         shr al, 5
0x0000617e      83e007         and eax, 7
0x00006181      418b448500     mov eax, dword [r13 + rax*4]
0x00006186      0fa3d0         bt eax, edx
0x00006189      0f83e9000000   jae 0x6278
0x0000618f      48c744243801.  mov qword [rsp + 0x38], 1
0x00006198      410fbe17       movsx edx, byte [r15]
0x0000619c      c644244001     mov byte [rsp + 0x40], 1
0x000061a1      c644242c01     mov byte [rsp + 0x2c], 1
0x000061a6      89542444       mov dword [rsp + 0x44], edx
0x000061aa      85d2           test edx, edx
0x000061ac      0f84a0070000   je 0x6952
0x000061b2      4c8b7c2430     mov r15, qword [rsp + 0x30]
0x000061b7      488b442438     mov rax, qword [rsp + 0x38]
0x000061bc      0fb64c2440     movzx ecx, byte [rsp + 0x40]
0x000061c1      c644242c00     mov byte [rsp + 0x2c], 0
0x000061c6      4c01f8         add rax, r15
0x000061c9      4839e8         cmp rax, rbp
0x000061cc      4889442430     mov qword [rsp + 0x30], rax
0x000061d1      0f8329010000   jae 0x6300
0x000061d7      807c242000     cmp byte [rsp + 0x20], 0
0x000061dc      7492           je 0x6170
0x000061de      e8adbbffff     call sym.imp.__ctype_get_mb_cur_max
0x000061e3      4c8b7c2430     mov r15, qword [rsp + 0x30]
0x000061e8      4889c6         mov rsi, rax
0x000061eb      4c89ff         mov rdi, r15
0x000061ee      e83d2a0000     call sym.strnlen1
0x000061f3      488d4b04       lea rcx, [rbx + 4]
0x000061f7      4889c2         mov rdx, rax
0x000061fa      4c89fe         mov rsi, r15
0x000061fd      4c89f7         mov rdi, r14
0x00006200      e8ab410000     call sym.rpl_mbrtowc
0x00006205      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006209      4889442438     mov qword [rsp + 0x38], rax
0x0000620e      0f8484000000   je 0x6298
0x00006214      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00006218      0f849a000000   je 0x62b8
0x0000621e      4885c0         test rax, rax
0x00006221      0f85c9000000   jne 0x62f0
0x00006227      4c8b7c2430     mov r15, qword [rsp + 0x30]
0x0000622c      48c744243801.  mov qword [rsp + 0x38], 1
0x00006235      41803f00       cmp byte [r15], 0
0x00006239      0f853c070000   jne 0x697b
0x0000623f      8b542444       mov edx, dword [rsp + 0x44]
0x00006243      85d2           test edx, edx
0x00006245      0f85b1060000   jne 0x68fc
0x0000624b      488d7b04       lea rdi, [rbx + 4]
0x0000624f      89542410       mov dword [rsp + 0x10], edx
0x00006253      c644244001     mov byte [rsp + 0x40], 1
0x00006258      e853beffff     call sym.imp.mbsinit
0x0000625d      85c0           test eax, eax
0x0000625f      8b542410       mov edx, dword [rsp + 0x10]
0x00006263      747b           je 0x62e0
0x00006265      c644242000     mov byte [rsp + 0x20], 0
0x0000626a      c644242c01     mov byte [rsp + 0x2c], 1
0x0000626f      e936ffffff     jmp 0x61aa
0x00006274      0f1f4000       nop dword [rax]
0x00006278      488d7b04       lea rdi, [rbx + 4]
0x0000627c      e82fbeffff     call sym.imp.mbsinit
0x00006281      85c0           test eax, eax
0x00006283      0f84ce060000   je 0x6957
0x00006289      c644242001     mov byte [rsp + 0x20], 1
0x0000628e      e94bffffff     jmp 0x61de
0x00006293      0f1f440000     nop dword [rax + rax]
0x00006298      48c744243801.  mov qword [rsp + 0x38], 1
0x000062a1      c644244000     mov byte [rsp + 0x40], 0
0x000062a6      8b542444       mov edx, dword [rsp + 0x44]
0x000062aa      4c8b7c2430     mov r15, qword [rsp + 0x30]
0x000062af      e903ffffff     jmp 0x61b7
0x000062b4      0f1f4000       nop dword [rax]
0x000062b8      4c8b7c2430     mov r15, qword [rsp + 0x30]
0x000062bd      4c89ff         mov rdi, r15
0x000062c0      e8dbbaffff     call sym.imp.strlen
0x000062c5      c644244000     mov byte [rsp + 0x40], 0
0x000062ca      4889442438     mov qword [rsp + 0x38], rax
0x000062cf      8b542444       mov edx, dword [rsp + 0x44]
0x000062d3      e9dffeffff     jmp 0x61b7
0x000062d8      0f1f84000000.  nop dword [rax + rax]
0x000062e0      c644242c01     mov byte [rsp + 0x2c], 1
0x000062e5      e9c0feffff     jmp 0x61aa
0x000062ea      660f1f440000   nop word [rax + rax]
0x000062f0      8b542444       mov edx, dword [rsp + 0x44]
0x000062f4      e952ffffff     jmp 0x624b
0x000062f9      0f1f80000000.  nop dword [rax]
0x00006300      84c9           test cl, cl
0x00006302      0f8400040000   je 0x6708
0x00006308      89d7           mov edi, edx
0x0000630a      e801bcffff     call sym.imp.iswalnum
0x0000630f      85c0           test eax, eax
0x00006311      0f94442410     sete byte [rsp + 0x10]
0x00006316      488b442408     mov rax, qword [rsp + 8]
0x0000631b      48896c2430     mov qword [rsp + 0x30], rbp
0x00006320      c644242000     mov byte [rsp + 0x20], 0
0x00006325      48c743040000.  mov qword [rbx + 4], 0
0x0000632d      c644242c00     mov byte [rsp + 0x2c], 0
0x00006332      c644246000     mov byte [rsp + 0x60], 0
0x00006337      4889442470     mov qword [rsp + 0x70], rax
0x0000633c      49c744240400.  mov qword [r12 + 4], 0
0x00006345      c644246c00     mov byte [rsp + 0x6c], 0
0x0000634a      eb71           jmp 0x63bd
0x0000634c      0f1f4000       nop dword [rax]
0x00006350      807c242000     cmp byte [rsp + 0x20], 0
0x00006355      0f857b020000   jne 0x65d6
0x0000635b      488b4c2430     mov rcx, qword [rsp + 0x30]
0x00006360      0fb611         movzx edx, byte [rcx]
0x00006363      89d0           mov eax, edx
0x00006365      c0e805         shr al, 5
0x00006368      83e007         and eax, 7
0x0000636b      418b448500     mov eax, dword [r13 + rax*4]
0x00006370      0fa3d0         bt eax, edx
0x00006373      0f8347020000   jae 0x65c0
0x00006379      48c744243801.  mov qword [rsp + 0x38], 1
0x00006382      0fbe01         movsx eax, byte [rcx]
0x00006385      c644244001     mov byte [rsp + 0x40], 1
0x0000638a      c644242c01     mov byte [rsp + 0x2c], 1
0x0000638f      89442444       mov dword [rsp + 0x44], eax
0x00006393      8b7c2444       mov edi, dword [rsp + 0x44]
0x00006397      85ff           test edi, edi
0x00006399      0f84b3050000   je 0x6952
0x0000639f      488b442438     mov rax, qword [rsp + 0x38]
0x000063a4      4801442430     add qword [rsp + 0x30], rax
0x000063a9      488b442478     mov rax, qword [rsp + 0x78]
0x000063ae      4801442470     add qword [rsp + 0x70], rax
0x000063b3      c644242c00     mov byte [rsp + 0x2c], 0
0x000063b8      c644246c00     mov byte [rsp + 0x6c], 0
0x000063bd      807c246000     cmp byte [rsp + 0x60], 0
0x000063c2      757b           jne 0x643f
0x000063c4      488b4c2470     mov rcx, qword [rsp + 0x70]
0x000063c9      0fb611         movzx edx, byte [rcx]
0x000063cc      89d0           mov eax, edx
0x000063ce      c0e805         shr al, 5
0x000063d1      83e007         and eax, 7
0x000063d4      418b448500     mov eax, dword [r13 + rax*4]
0x000063d9      0fa3d0         bt eax, edx
0x000063dc      734a           jae 0x6428
0x000063de      48c744247801.  mov qword [rsp + 0x78], 1
0x000063e7      0fbe01         movsx eax, byte [rcx]
0x000063ea      c68424800000.  mov byte [rsp + 0x80], 1
0x000063f2      c644246c01     mov byte [rsp + 0x6c], 1
0x000063f7      898424840000.  mov dword [rsp + 0x84], eax
0x000063fe      8b8c24840000.  mov ecx, dword [rsp + 0x84]
0x00006405      85c9           test ecx, ecx
0x00006407      0f84d3000000   je 0x64e0
0x0000640d      807c242c00     cmp byte [rsp + 0x2c], 0
0x00006412      0f8438ffffff   je 0x6350
0x00006418      807c244000     cmp byte [rsp + 0x40], 0
0x0000641d      7480           je 0x639f
0x0000641f      e96fffffff     jmp 0x6393
0x00006424      0f1f4000       nop dword [rax]
0x00006428      498d7c2404     lea rdi, [r12 + 4]
0x0000642d      e87ebcffff     call sym.imp.mbsinit
0x00006432      85c0           test eax, eax
0x00006434      0f841d050000   je 0x6957
0x0000643a      c644246001     mov byte [rsp + 0x60], 1
0x0000643f      e84cb9ffff     call sym.imp.__ctype_get_mb_cur_max
0x00006444      4c8b7c2470     mov r15, qword [rsp + 0x70]
0x00006449      4889c6         mov rsi, rax
0x0000644c      4c89ff         mov rdi, r15
0x0000644f      e8dc270000     call sym.strnlen1
0x00006454      498d4c2404     lea rcx, [r12 + 4]
0x00006459      498d7c2424     lea rdi, [r12 + 0x24]
0x0000645e      4889c2         mov rdx, rax
0x00006461      4c89fe         mov rsi, r15
0x00006464      e8473f0000     call sym.rpl_mbrtowc
0x00006469      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000646d      4889442478     mov qword [rsp + 0x78], rax
0x00006472      0f84f0010000   je 0x6668
0x00006478      4883f8fe       cmp rax, 0xfffffffffffffffe
0x0000647c      0f841e020000   je 0x66a0
0x00006482      4885c0         test rax, rax
0x00006485      7526           jne 0x64ad
0x00006487      488b442470     mov rax, qword [rsp + 0x70]
0x0000648c      48c744247801.  mov qword [rsp + 0x78], 1
0x00006495      803800         cmp byte [rax], 0
0x00006498      0f85dd040000   jne 0x697b
0x0000649e      8bb424840000.  mov esi, dword [rsp + 0x84]
0x000064a5      85f6           test esi, esi
0x000064a7      0f854f040000   jne 0x68fc
0x000064ad      498d7c2404     lea rdi, [r12 + 4]
0x000064b2      c68424800000.  mov byte [rsp + 0x80], 1
0x000064ba      e8f1bbffff     call sym.imp.mbsinit
0x000064bf      85c0           test eax, eax
0x000064c1      0f8401020000   je 0x66c8
0x000064c7      8b8c24840000.  mov ecx, dword [rsp + 0x84]
0x000064ce      c644246000     mov byte [rsp + 0x60], 0
0x000064d3      c644246c01     mov byte [rsp + 0x6c], 1
0x000064d8      85c9           test ecx, ecx
0x000064da      0f852dffffff   jne 0x640d
0x000064e0      807c242c00     cmp byte [rsp + 0x2c], 0
0x000064e5      0f856d020000   jne 0x6758
0x000064eb      807c242000     cmp byte [rsp + 0x20], 0
0x000064f0      0f858c020000   jne 0x6782
0x000064f6      488b4c2430     mov rcx, qword [rsp + 0x30]
0x000064fb      0fb611         movzx edx, byte [rcx]
0x000064fe      89d0           mov eax, edx
0x00006500      c0e805         shr al, 5
0x00006503      83e007         and eax, 7
0x00006506      418b448500     mov eax, dword [r13 + rax*4]
0x0000650b      0fa3d0         bt eax, edx
0x0000650e      0f8358020000   jae 0x676c
0x00006514      48c744243801.  mov qword [rsp + 0x38], 1
0x0000651d      0fbe11         movsx edx, byte [rcx]
0x00006520      c644244001     mov byte [rsp + 0x40], 1
0x00006525      c644242c01     mov byte [rsp + 0x2c], 1
0x0000652a      89542444       mov dword [rsp + 0x44], edx
0x0000652e      85d2           test edx, edx
0x00006530      7412           je 0x6544
0x00006532      807c244000     cmp byte [rsp + 0x40], 0
0x00006537      740b           je 0x6544
0x00006539      89d7           mov edi, edx
0x0000653b      e8d0b9ffff     call sym.imp.iswalnum
0x00006540      85c0           test eax, eax
0x00006542      750b           jne 0x654f
0x00006544      807c241000     cmp byte [rsp + 0x10], 0
0x00006549      0f85bbfbffff   jne 0x610a
0x0000654f      48896c2430     mov qword [rsp + 0x30], rbp
0x00006554      c644242000     mov byte [rsp + 0x20], 0
0x00006559      4c8d7b04       lea r15, [rbx + 4]
0x0000655d      48c743040000.  mov qword [rbx + 4], 0
0x00006565      c644242c00     mov byte [rsp + 0x2c], 0
0x0000656a      0fb65500       movzx edx, byte [rbp]
0x0000656e      89d0           mov eax, edx
0x00006570      c0e805         shr al, 5
0x00006573      83e007         and eax, 7
0x00006576      418b448500     mov eax, dword [r13 + rax*4]
0x0000657b      0fa3d0         bt eax, edx
0x0000657e      0f838c020000   jae 0x6810
0x00006584      48c744243801.  mov qword [rsp + 0x38], 1
0x0000658d      0fbe4500       movsx eax, byte [rbp]
0x00006591      c644244001     mov byte [rsp + 0x40], 1
0x00006596      c644242c01     mov byte [rsp + 0x2c], 1
0x0000659b      89442444       mov dword [rsp + 0x44], eax
0x0000659f      8b442444       mov eax, dword [rsp + 0x44]
0x000065a3      85c0           test eax, eax
0x000065a5      0f845afbffff   je 0x6105
0x000065ab      4c8b7c2438     mov r15, qword [rsp + 0x38]
0x000065b0      4901ef         add r15, rbp
0x000065b3      e9c8faffff     jmp 0x6080
0x000065b8      0f1f84000000.  nop dword [rax + rax]
0x000065c0      488d7b04       lea rdi, [rbx + 4]
0x000065c4      e8e7baffff     call sym.imp.mbsinit
0x000065c9      85c0           test eax, eax
0x000065cb      0f8486030000   je 0x6957
0x000065d1      c644242001     mov byte [rsp + 0x20], 1
0x000065d6      e8b5b7ffff     call sym.imp.__ctype_get_mb_cur_max
0x000065db      4c8b7c2430     mov r15, qword [rsp + 0x30]
0x000065e0      4889c6         mov rsi, rax
0x000065e3      4c89ff         mov rdi, r15
0x000065e6      e845260000     call sym.strnlen1
0x000065eb      488d4b04       lea rcx, [rbx + 4]
0x000065ef      4889c2         mov rdx, rax
0x000065f2      4c89fe         mov rsi, r15
0x000065f5      4c89f7         mov rdi, r14
0x000065f8      e8b33d0000     call sym.rpl_mbrtowc
0x000065fd      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006601      4889442438     mov qword [rsp + 0x38], rax
0x00006606      0f847c000000   je 0x6688
0x0000660c      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00006610      0f84c2000000   je 0x66d8
0x00006616      4885c0         test rax, rax
0x00006619      7525           jne 0x6640
0x0000661b      488b442430     mov rax, qword [rsp + 0x30]
0x00006620      48c744243801.  mov qword [rsp + 0x38], 1
0x00006629      803800         cmp byte [rax], 0
0x0000662c      0f8549030000   jne 0x697b
0x00006632      448b442444     mov r8d, dword [rsp + 0x44]
0x00006637      4585c0         test r8d, r8d
0x0000663a      0f85bc020000   jne 0x68fc
0x00006640      488d7b04       lea rdi, [rbx + 4]
0x00006644      c644244001     mov byte [rsp + 0x40], 1
0x00006649      e862baffff     call sym.imp.mbsinit
0x0000664e      85c0           test eax, eax
0x00006650      0f84a2000000   je 0x66f8
0x00006656      c644242000     mov byte [rsp + 0x20], 0
0x0000665b      c644242c01     mov byte [rsp + 0x2c], 1
0x00006660      e92efdffff     jmp 0x6393
0x00006665      0f1f00         nop dword [rax]
0x00006668      48c744247801.  mov qword [rsp + 0x78], 1
0x00006671      c68424800000.  mov byte [rsp + 0x80], 0
0x00006679      c644246c01     mov byte [rsp + 0x6c], 1
0x0000667e      e98afdffff     jmp 0x640d
0x00006683      0f1f440000     nop dword [rax + rax]
0x00006688      48c744243801.  mov qword [rsp + 0x38], 1
0x00006691      c644244000     mov byte [rsp + 0x40], 0
0x00006696      e904fdffff     jmp 0x639f
0x0000669b      0f1f440000     nop dword [rax + rax]
0x000066a0      488b7c2470     mov rdi, qword [rsp + 0x70]
0x000066a5      e8f6b6ffff     call sym.imp.strlen
0x000066aa      c68424800000.  mov byte [rsp + 0x80], 0
0x000066b2      4889442478     mov qword [rsp + 0x78], rax
0x000066b7      c644246c01     mov byte [rsp + 0x6c], 1
0x000066bc      e94cfdffff     jmp 0x640d
0x000066c1      0f1f80000000.  nop dword [rax]
0x000066c8      c644246c01     mov byte [rsp + 0x6c], 1
0x000066cd      e92cfdffff     jmp 0x63fe
0x000066d2      660f1f440000   nop word [rax + rax]
0x000066d8      488b7c2430     mov rdi, qword [rsp + 0x30]
0x000066dd      e8beb6ffff     call sym.imp.strlen
0x000066e2      c644244000     mov byte [rsp + 0x40], 0
0x000066e7      4889442438     mov qword [rsp + 0x38], rax
0x000066ec      e9aefcffff     jmp 0x639f
0x000066f1      0f1f80000000.  nop dword [rax]
0x000066f8      c644242c01     mov byte [rsp + 0x2c], 1
0x000066fd      e991fcffff     jmp 0x6393
0x00006702      660f1f440000   nop word [rax + rax]
0x00006708      c644241001     mov byte [rsp + 0x10], 1
0x0000670d      e904fcffff     jmp 0x6316
0x00006712      660f1f440000   nop word [rax + rax]
0x00006718      488b7c2408     mov rdi, qword [rsp + 8]
0x0000671d      e87eb6ffff     call sym.imp.strlen
0x00006722      0fb6540500     movzx edx, byte [rbp + rax]
0x00006727      c644241001     mov byte [rsp + 0x10], 1
0x0000672c      84d2           test dl, dl
0x0000672e      0f84d6f9ffff   je 0x610a
0x00006734      88542418       mov byte [rsp + 0x18], dl
0x00006738      e8a3b9ffff     call sym.imp.__ctype_b_loc
0x0000673d      0fb6542418     movzx edx, byte [rsp + 0x18]
0x00006742      488b00         mov rax, qword [rax]
0x00006745      f6045008       test byte [rax + rdx*2], 8
0x00006749      0f85a6f9ffff   jne 0x60f5
0x0000674f      e99af9ffff     jmp 0x60ee
0x00006754      0f1f4000       nop dword [rax]
0x00006758      807c244000     cmp byte [rsp + 0x40], 0
0x0000675d      8b542444       mov edx, dword [rsp + 0x44]
0x00006761      0f84cbfdffff   je 0x6532
0x00006767      e9c2fdffff     jmp 0x652e
0x0000676c      488d7b04       lea rdi, [rbx + 4]
0x00006770      e83bb9ffff     call sym.imp.mbsinit
0x00006775      85c0           test eax, eax
0x00006777      0f84da010000   je 0x6957
0x0000677d      c644242001     mov byte [rsp + 0x20], 1
0x00006782      e809b6ffff     call sym.imp.__ctype_get_mb_cur_max
0x00006787      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000678c      4889c6         mov rsi, rax
0x0000678f      4c89c7         mov rdi, r8
0x00006792      4c89442418     mov qword [rsp + 0x18], r8
0x00006797      e894240000     call sym.strnlen1
0x0000679c      4c8b442418     mov r8, qword [rsp + 0x18]
0x000067a1      488d4b04       lea rcx, [rbx + 4]
0x000067a5      4889c2         mov rdx, rax
0x000067a8      4c89f7         mov rdi, r14
0x000067ab      4c89c6         mov rsi, r8
0x000067ae      e8fd3b0000     call sym.rpl_mbrtowc
0x000067b3      4883f8ff       cmp rax, 0xffffffffffffffff
0x000067b7      4889442438     mov qword [rsp + 0x38], rax
0x000067bc      0f84ed000000   je 0x68af
0x000067c2      4883f8fe       cmp rax, 0xfffffffffffffffe
0x000067c6      0f8464010000   je 0x6930
0x000067cc      4885c0         test rax, rax
0x000067cf      0f8404010000   je 0x68d9
0x000067d5      8b542444       mov edx, dword [rsp + 0x44]
0x000067d9      488d7b04       lea rdi, [rbx + 4]
0x000067dd      89542418       mov dword [rsp + 0x18], edx
0x000067e1      c644244001     mov byte [rsp + 0x40], 1
0x000067e6      e8c5b8ffff     call sym.imp.mbsinit
0x000067eb      85c0           test eax, eax
0x000067ed      8b542418       mov edx, dword [rsp + 0x18]
0x000067f1      0f841b010000   je 0x6912
0x000067f7      c644242000     mov byte [rsp + 0x20], 0
0x000067fc      c644242c01     mov byte [rsp + 0x2c], 1
0x00006801      e928fdffff     jmp 0x652e
0x00006806      662e0f1f8400.  nop word cs:[rax + rax]
0x00006810      4c89ff         mov rdi, r15
0x00006813      e898b8ffff     call sym.imp.mbsinit
0x00006818      85c0           test eax, eax
0x0000681a      0f8437010000   je 0x6957
0x00006820      c644242001     mov byte [rsp + 0x20], 1
0x00006825      e866b5ffff     call sym.imp.__ctype_get_mb_cur_max
0x0000682a      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000682f      4889c6         mov rsi, rax
0x00006832      4c89c7         mov rdi, r8
0x00006835      4c89442410     mov qword [rsp + 0x10], r8
0x0000683a      e8f1230000     call sym.strnlen1
0x0000683f      4c8b442410     mov r8, qword [rsp + 0x10]
0x00006844      4c89f9         mov rcx, r15
0x00006847      4889c2         mov rdx, rax
0x0000684a      4c89f7         mov rdi, r14
0x0000684d      4c89c6         mov rsi, r8
0x00006850      e85b3b0000     call sym.rpl_mbrtowc
0x00006855      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006859      4889442438     mov qword [rsp + 0x38], rax
0x0000685e      746b           je 0x68cb
0x00006860      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00006864      0f84b2000000   je 0x691c
0x0000686a      4885c0         test rax, rax
0x0000686d      751f           jne 0x688e
0x0000686f      488b442430     mov rax, qword [rsp + 0x30]
0x00006874      48c744243801.  mov qword [rsp + 0x38], 1
0x0000687d      803800         cmp byte [rax], 0
0x00006880      0f85f5000000   jne 0x697b
0x00006886      8b542444       mov edx, dword [rsp + 0x44]
0x0000688a      85d2           test edx, edx
0x0000688c      756e           jne 0x68fc
0x0000688e      488d7b04       lea rdi, [rbx + 4]
0x00006892      c644244001     mov byte [rsp + 0x40], 1
0x00006897      e814b8ffff     call sym.imp.mbsinit
0x0000689c      85c0           test eax, eax
0x0000689e      7468           je 0x6908
0x000068a0      c644242000     mov byte [rsp + 0x20], 0
0x000068a5      c644242c01     mov byte [rsp + 0x2c], 1
0x000068aa      e9f0fcffff     jmp 0x659f
0x000068af      48c744243801.  mov qword [rsp + 0x38], 1
0x000068b8      c644244000     mov byte [rsp + 0x40], 0
0x000068bd      8b542444       mov edx, dword [rsp + 0x44]
0x000068c1      c644242c01     mov byte [rsp + 0x2c], 1
0x000068c6      e967fcffff     jmp 0x6532
0x000068cb      48c744243801.  mov qword [rsp + 0x38], 1
0x000068d4      e9d2fcffff     jmp 0x65ab
0x000068d9      488b442430     mov rax, qword [rsp + 0x30]
0x000068de      48c744243801.  mov qword [rsp + 0x38], 1
0x000068e7      803800         cmp byte [rax], 0
0x000068ea      0f858b000000   jne 0x697b
0x000068f0      8b542444       mov edx, dword [rsp + 0x44]
0x000068f4      85d2           test edx, edx
0x000068f6      0f84ddfeffff   je 0x67d9
0x000068fc      e81fb8ffff     call sym.mbuiter_multi_next.part.0
0x00006901      0f1f80000000.  nop dword [rax]
0x00006908      c644242c01     mov byte [rsp + 0x2c], 1
0x0000690d      e98dfcffff     jmp 0x659f
0x00006912      c644242c01     mov byte [rsp + 0x2c], 1
0x00006917      e912fcffff     jmp 0x652e
0x0000691c      488b7c2430     mov rdi, qword [rsp + 0x30]
0x00006921      e87ab4ffff     call sym.imp.strlen
0x00006926      4889442438     mov qword [rsp + 0x38], rax
0x0000692b      e97bfcffff     jmp 0x65ab
0x00006930      488b7c2430     mov rdi, qword [rsp + 0x30]
0x00006935      e866b4ffff     call sym.imp.strlen
0x0000693a      c644244000     mov byte [rsp + 0x40], 0
0x0000693f      4889442438     mov qword [rsp + 0x38], rax
0x00006944      8b542444       mov edx, dword [rsp + 0x44]
0x00006948      c644242c01     mov byte [rsp + 0x2c], 1
0x0000694d      e9e0fbffff     jmp 0x6532
0x00006952      e819b3ffff     call sym.imp.abort
0x00006957      488d0db25301.  lea rcx, obj.__PRETTY_FUNCTION__.5159   ; 0x1bd10 ; "mbuiter_multi_next"
0x0000695e      488d35335301.  lea rsi, str..._coreutils_8.31_lib_mbuiter.h ; 0x1bc98 ; "../coreutils-8.31/lib/mbuiter.h"
0x00006965      488d3d5e5301.  lea rdi, str.mbsinit___iter__state      ; 0x1bcca ; "mbsinit (&iter->state)"
0x0000696c      ba96000000     mov edx, 0x96
0x00006971      e8bab4ffff     call sym.imp.__assert_fail
0x00006976      e835b4ffff     call sym.imp.__stack_chk_fail
0x0000697b      488d0d8e5301.  lea rcx, obj.__PRETTY_FUNCTION__.5159   ; 0x1bd10 ; "mbuiter_multi_next"
0x00006982      488d350f5301.  lea rsi, str..._coreutils_8.31_lib_mbuiter.h ; 0x1bc98 ; "../coreutils-8.31/lib/mbuiter.h"
0x00006989      488d3d515301.  lea rdi, str.iter__cur.ptr_______0      ; 0x1bce1 ; "*iter->cur.ptr == '\0'"
0x00006990      bab2000000     mov edx, 0xb2
0x00006995      e896b4ffff     call sym.imp.__assert_fail
0x0000699a      660f1f440000   nop word [rax + rax]
;-- proper_name:
0x000069a0      4154           push r12
0x000069a2      55             push rbp
0x000069a3      4889fe         mov rsi, rdi
0x000069a6      53             push rbx
0x000069a7      4889fd         mov rbp, rdi
0x000069aa      ba05000000     mov edx, 5
0x000069af      31ff           xor edi, edi
0x000069b1      e8cab3ffff     call sym.imp.dcgettext
0x000069b6      4839c5         cmp rbp, rax
0x000069b9      4889c3         mov rbx, rax
0x000069bc      740f           je 0x69cd
0x000069be      4889ee         mov rsi, rbp
0x000069c1      4889c7         mov rdi, rax
0x000069c4      e867f6ffff     call sym.mbsstr_trimmed_wordbounded
0x000069c9      84c0           test al, al
0x000069cb      740b           je 0x69d8
0x000069cd      4889d8         mov rax, rbx
0x000069d0      5b             pop rbx
0x000069d1      5d             pop rbp
0x000069d2      415c           pop r12
0x000069d4      c3             ret
0x000069d5      0f1f00         nop dword [rax]
0x000069d8      4889df         mov rdi, rbx
0x000069db      e8c0b3ffff     call sym.imp.strlen
0x000069e0      4889ef         mov rdi, rbp
0x000069e3      4989c4         mov r12, rax
0x000069e6      e8b5b3ffff     call sym.imp.strlen
0x000069eb      498d7c0404     lea rdi, [r12 + rax + 4]
0x000069f0      e8cb2e0000     call sym.xmalloc
0x000069f5      488d0dfc5201.  lea rcx, str.s___s                      ; 0x1bcf8 ; "%s (%s)"
0x000069fc      4989c4         mov r12, rax
0x000069ff      4989e9         mov r9, rbp
0x00006a02      4989d8         mov r8, rbx
0x00006a05      4889c7         mov rdi, rax
0x00006a08      4c89e3         mov rbx, r12
0x00006a0b      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00006a12      be01000000     mov esi, 1
0x00006a17      31c0           xor eax, eax
0x00006a19      e8e2b6ffff     call sym.imp.__sprintf_chk
0x00006a1e      4889d8         mov rax, rbx
0x00006a21      5b             pop rbx
0x00006a22      5d             pop rbp
0x00006a23      415c           pop r12
0x00006a25      c3             ret
0x00006a26      662e0f1f8400.  nop word cs:[rax + rax]
;-- proper_name_utf8:
0x00006a30      4157           push r15
0x00006a32      4156           push r14
0x00006a34      ba05000000     mov edx, 5
0x00006a39      4155           push r13
0x00006a3b      4154           push r12
0x00006a3d      4989fd         mov r13, rdi
0x00006a40      55             push rbp
0x00006a41      53             push rbx
0x00006a42      4889f5         mov rbp, rsi
0x00006a45      4889fe         mov rsi, rdi
0x00006a48      31ff           xor edi, edi
0x00006a4a      4883ec18       sub rsp, 0x18
0x00006a4e      e82db3ffff     call sym.imp.dcgettext
0x00006a53      4989c6         mov r14, rax
0x00006a56      e8251d0100     call sym.locale_charset
0x00006a5b      488d359e5201.  lea rsi, str.UTF_8                      ; 0x1bd00 ; "UTF-8"
0x00006a62      4889c7         mov rdi, rax
0x00006a65      4989c4         mov r12, rax
0x00006a68      e8e31b0100     call sym.c_strcasecmp
0x00006a6d      85c0           test eax, eax
0x00006a6f      0f85e3000000   jne 0x6b58
0x00006a75      4885ed         test rbp, rbp
0x00006a78      7456           je 0x6ad0
0x00006a7a      48896c2408     mov qword [rsp + 8], rbp
0x00006a7f      4889eb         mov rbx, rbp
0x00006a82      4531e4         xor r12d, r12d
0x00006a85      4531ff         xor r15d, r15d
0x00006a88      4c89ee         mov rsi, r13
0x00006a8b      4c89f7         mov rdi, r14
0x00006a8e      e83db4ffff     call sym.imp.strcmp
0x00006a93      85c0           test eax, eax
0x00006a95      755a           jne 0x6af1
0x00006a97      4d85ff         test r15, r15
0x00006a9a      740d           je 0x6aa9
0x00006a9c      4c39fb         cmp rbx, r15
0x00006a9f      7408           je 0x6aa9
0x00006aa1      4c89ff         mov rdi, r15
0x00006aa4      e8b7b1ffff     call sym.imp.free
0x00006aa9      4d85e4         test r12, r12
0x00006aac      740d           je 0x6abb
0x00006aae      4c39e3         cmp rbx, r12
0x00006ab1      7408           je 0x6abb
0x00006ab3      4c89e7         mov rdi, r12
0x00006ab6      e8a5b1ffff     call sym.imp.free
0x00006abb      4883c418       add rsp, 0x18
0x00006abf      4889d8         mov rax, rbx
0x00006ac2      5b             pop rbx
0x00006ac3      5d             pop rbp
0x00006ac4      415c           pop r12
0x00006ac6      415d           pop r13
0x00006ac8      415e           pop r14
0x00006aca      415f           pop r15
0x00006acc      c3             ret
0x00006acd      0f1f00         nop dword [rax]
0x00006ad0      4c89ee         mov rsi, r13
0x00006ad3      4c89f7         mov rdi, r14
0x00006ad6      48c744240800.  mov qword [rsp + 8], 0
0x00006adf      4531e4         xor r12d, r12d
0x00006ae2      4531ff         xor r15d, r15d
0x00006ae5      4c89eb         mov rbx, r13
0x00006ae8      e8e3b3ffff     call sym.imp.strcmp
0x00006aed      85c0           test eax, eax
0x00006aef      74a6           je 0x6a97
0x00006af1      4c89ee         mov rsi, r13
0x00006af4      4c89f7         mov rdi, r14
0x00006af7      e834f5ffff     call sym.mbsstr_trimmed_wordbounded
0x00006afc      84c0           test al, al
0x00006afe      7538           jne 0x6b38
0x00006b00      4885ed         test rbp, rbp
0x00006b03      740f           je 0x6b14
0x00006b05      4889ee         mov rsi, rbp
0x00006b08      4c89f7         mov rdi, r14
0x00006b0b      e820f5ffff     call sym.mbsstr_trimmed_wordbounded
0x00006b10      84c0           test al, al
0x00006b12      7524           jne 0x6b38
0x00006b14      48837c240800   cmp qword [rsp + 8], 0
0x00006b1a      0f8470010000   je 0x6c90
0x00006b20      488b742408     mov rsi, qword [rsp + 8]
0x00006b25      4c89f7         mov rdi, r14
0x00006b28      e803f5ffff     call sym.mbsstr_trimmed_wordbounded
0x00006b2d      84c0           test al, al
0x00006b2f      0f845b010000   je 0x6c90
0x00006b35      0f1f00         nop dword [rax]
0x00006b38      4d85ff         test r15, r15
0x00006b3b      0f85ef000000   jne 0x6c30
0x00006b41      4d85e4         test r12, r12
0x00006b44      4c89f3         mov rbx, r14
0x00006b47      0f8566ffffff   jne 0x6ab3
0x00006b4d      e969ffffff     jmp 0x6abb
0x00006b52      660f1f440000   nop word [rax + rax]
0x00006b58      488d35a15101.  lea rsi, str.UTF_8                      ; 0x1bd00 ; "UTF-8"
0x00006b5f      4c89e2         mov rdx, r12
0x00006b62      4889ef         mov rdi, rbp
0x00006b65      e836300000     call sym.xstr_iconv
0x00006b6a      4c89e7         mov rdi, r12
0x00006b6d      4889c3         mov rbx, rax
0x00006b70      e82bb2ffff     call sym.imp.strlen
0x00006b75      488d780b       lea rdi, [rax + 0xb]
0x00006b79      4989c7         mov r15, rax
0x00006b7c      e83f2d0000     call sym.xmalloc
0x00006b81      4c89fa         mov rdx, r15
0x00006b84      4c89e6         mov rsi, r12
0x00006b87      4889c7         mov rdi, rax
0x00006b8a      e851b3ffff     call sym.imp.memcpy
0x00006b8f      4889c1         mov rcx, rax
0x00006b92      4901c7         add r15, rax
0x00006b95      48b82f2f5452.  movabs rax, 0x4c534e4152542f2f          ; '//TRANSL'
0x00006b9f      498907         mov qword [r15], rax
0x00006ba2      488d35575101.  lea rsi, str.UTF_8                      ; 0x1bd00 ; "UTF-8"
0x00006ba9      b849540000     mov eax, 0x5449                         ; 'IT'
0x00006bae      4889ca         mov rdx, rcx
0x00006bb1      4889ef         mov rdi, rbp
0x00006bb4      6641894708     mov word [r15 + 8], ax
0x00006bb9      41c6470a00     mov byte [r15 + 0xa], 0
0x00006bbe      48894c2408     mov qword [rsp + 8], rcx
0x00006bc3      e8d82f0000     call sym.xstr_iconv
0x00006bc8      488b4c2408     mov rcx, qword [rsp + 8]
0x00006bcd      4989c4         mov r12, rax
0x00006bd0      4889cf         mov rdi, rcx
0x00006bd3      e888b0ffff     call sym.imp.free
0x00006bd8      4d85e4         test r12, r12
0x00006bdb      741a           je 0x6bf7
0x00006bdd      be3f000000     mov esi, 0x3f                           ; '?'
0x00006be2      4c89e7         mov rdi, r12
0x00006be5      e806b2ffff     call sym.imp.strchr
0x00006bea      4885c0         test rax, rax
0x00006bed      7461           je 0x6c50
0x00006bef      4c89e7         mov rdi, r12
0x00006bf2      e869b0ffff     call sym.imp.free
0x00006bf7      4885db         test rbx, rbx
0x00006bfa      7474           je 0x6c70
0x00006bfc      4c89ee         mov rsi, r13
0x00006bff      4c89f7         mov rdi, r14
0x00006c02      e8c9b2ffff     call sym.imp.strcmp
0x00006c07      85c0           test eax, eax
0x00006c09      0f84acfeffff   je 0x6abb
0x00006c0f      4c89ee         mov rsi, r13
0x00006c12      4c89f7         mov rdi, r14
0x00006c15      e816f4ffff     call sym.mbsstr_trimmed_wordbounded
0x00006c1a      84c0           test al, al
0x00006c1c      0f84d6000000   je 0x6cf8
0x00006c22      4989df         mov r15, rbx
0x00006c25      4531e4         xor r12d, r12d
0x00006c28      0f1f84000000.  nop dword [rax + rax]
0x00006c30      4c89ff         mov rdi, r15
0x00006c33      4c89f3         mov rbx, r14
0x00006c36      e825b0ffff     call sym.imp.free
0x00006c3b      4d85e4         test r12, r12
0x00006c3e      0f856ffeffff   jne 0x6ab3
0x00006c44      e972feffff     jmp 0x6abb
0x00006c49      0f1f80000000.  nop dword [rax]
0x00006c50      4885db         test rbx, rbx
0x00006c53      4c89642408     mov qword [rsp + 8], r12
0x00006c58      0f84b2000000   je 0x6d10
0x00006c5e      4889dd         mov rbp, rbx
0x00006c61      4989df         mov r15, rbx
0x00006c64      e91ffeffff     jmp 0x6a88
0x00006c69      0f1f80000000.  nop dword [rax]
0x00006c70      4c89eb         mov rbx, r13
0x00006c73      48c744240800.  mov qword [rsp + 8], 0
0x00006c7c      31ed           xor ebp, ebp
0x00006c7e      4531e4         xor r12d, r12d
0x00006c81      4531ff         xor r15d, r15d
0x00006c84      e9fffdffff     jmp 0x6a88
0x00006c89      0f1f80000000.  nop dword [rax]
0x00006c90      4c89f7         mov rdi, r14
0x00006c93      e808b1ffff     call sym.imp.strlen
0x00006c98      4889df         mov rdi, rbx
0x00006c9b      4889c5         mov rbp, rax
0x00006c9e      e8fdb0ffff     call sym.imp.strlen
0x00006ca3      488d7c0504     lea rdi, [rbp + rax + 4]
0x00006ca8      e8132c0000     call sym.xmalloc
0x00006cad      488d0d445001.  lea rcx, str.s___s                      ; 0x1bcf8 ; "%s (%s)"
0x00006cb4      4889c7         mov rdi, rax
0x00006cb7      4889c5         mov rbp, rax
0x00006cba      4989d9         mov r9, rbx
0x00006cbd      31c0           xor eax, eax
0x00006cbf      4d89f0         mov r8, r14
0x00006cc2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00006cc9      be01000000     mov esi, 1
0x00006cce      e82db4ffff     call sym.imp.__sprintf_chk
0x00006cd3      4d85ff         test r15, r15
0x00006cd6      7408           je 0x6ce0
0x00006cd8      4c89ff         mov rdi, r15
0x00006cdb      e880afffff     call sym.imp.free
0x00006ce0      4d85e4         test r12, r12
0x00006ce3      4889eb         mov rbx, rbp
0x00006ce6      0f85c7fdffff   jne 0x6ab3
0x00006cec      e9cafdffff     jmp 0x6abb
0x00006cf1      0f1f80000000.  nop dword [rax]
0x00006cf8      4889dd         mov rbp, rbx
0x00006cfb      4989df         mov r15, rbx
0x00006cfe      48c744240800.  mov qword [rsp + 8], 0
0x00006d07      4531e4         xor r12d, r12d
0x00006d0a      e9f1fdffff     jmp 0x6b00
0x00006d0f      90             nop
0x00006d10      31ed           xor ebp, ebp
0x00006d12      4531ff         xor r15d, r15d
0x00006d15      4c89e3         mov rbx, r12
0x00006d18      e96bfdffff     jmp 0x6a88
0x00006d1d      0f1f00         nop dword [rax]
;-- gettext_quote.part.1:
0x00006d20      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00006d21      53             push rbx
0x00006d22      4889fd         mov rbp, rdi
0x00006d25      89f3           mov ebx, esi
0x00006d27      4883ec08       sub rsp, 8
0x00006d2b      e8501a0100     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00006d30      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00006d33      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00006d36      80fa55         cmp dl, 0x55
0x00006d39      7475           je 0x6db0
0x00006d3b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x00006d3e      7420           je 0x6d60
0x00006d40      488d05614b01.  lea rax, [0x0001b8a8]                   ; "\""
0x00006d47      488d15a84f01.  lea rdx, [0x0001bcf6]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; "'"
0x00006d4e      83fb09         cmp ebx, 9
0x00006d51      480f45c2       cmovne rax, rdx
0x00006d55      4883c408       add rsp, 8
0x00006d59      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x00006d5a      5d             pop rbp
0x00006d5b      c3             ret
0x00006d5c      0f1f4000       nop dword [rax]
0x00006d60      0fb65001       movzx edx, byte [rax + 1]
0x00006d64      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00006d67      80fa42         cmp dl, 0x42
0x00006d6a      75d4           jne 0x6d40
0x00006d6c      80780231       cmp byte [rax + 2], 0x31
0x00006d70      75ce           jne 0x6d40
0x00006d72      80780338       cmp byte [rax + 3], 0x38
0x00006d76      75c8           jne 0x6d40
0x00006d78      80780430       cmp byte [rax + 4], 0x30
0x00006d7c      75c2           jne 0x6d40
0x00006d7e      80780533       cmp byte [rax + 5], 0x33
0x00006d82      75bc           jne 0x6d40
0x00006d84      80780630       cmp byte [rax + 6], 0x30
0x00006d88      75b6           jne 0x6d40
0x00006d8a      80780700       cmp byte [rax + 7], 0
0x00006d8e      75b0           jne 0x6d40
0x00006d90      807d0060       cmp byte [rbp], 0x60
0x00006d94      488d05904f01.  lea rax, [0x0001bd2b]
0x00006d9b      488d158d4f01.  lea rdx, [0x0001bd2f]
0x00006da2      480f45c2       cmovne rax, rdx
0x00006da6      4883c408       add rsp, 8
0x00006daa      5b             pop rbx
0x00006dab      5d             pop rbp
0x00006dac      c3             ret
0x00006dad      0f1f00         nop dword [rax]
0x00006db0      0fb65001       movzx edx, byte [rax + 1]
0x00006db4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00006db7      80fa54         cmp dl, 0x54
0x00006dba      7584           jne 0x6d40
0x00006dbc      0fb65002       movzx edx, byte [rax + 2]
0x00006dc0      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00006dc3      80fa46         cmp dl, 0x46
0x00006dc6      0f8574ffffff   jne 0x6d40
0x00006dcc      8078032d       cmp byte [rax + 3], 0x2d
0x00006dd0      0f856affffff   jne 0x6d40
0x00006dd6      80780438       cmp byte [rax + 4], 0x38
0x00006dda      0f8560ffffff   jne 0x6d40
0x00006de0      80780500       cmp byte [rax + 5], 0
0x00006de4      0f8556ffffff   jne 0x6d40
0x00006dea      807d0060       cmp byte [rbp], 0x60
0x00006dee      488d052e4f01.  lea rax, [0x0001bd23]                   ; "\u2018"
0x00006df5      488d152b4f01.  lea rdx, [0x0001bd27]                   ; "\u2019"
0x00006dfc      480f45c2       cmovne rax, rdx
0x00006e00      4883c408       add rsp, 8
0x00006e04      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00006e05      5d             pop rbp
0x00006e06      c3             ret
0x00006e07      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00006e10      4157           push r15
0x00006e12      4156           push r14
0x00006e14      4589c7         mov r15d, r8d
0x00006e17      4155           push r13
0x00006e19      4154           push r12
0x00006e1b      4989fe         mov r14, rdi
0x00006e1e      55             push rbp
0x00006e1f      53             push rbx
0x00006e20      4489cb         mov ebx, r9d
0x00006e23      4989f5         mov r13, rsi
0x00006e26      4889cd         mov rbp, rcx
0x00006e29      83e302         and ebx, 2
0x00006e2c      4881ecb80000.  sub rsp, 0xb8
0x00006e33      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x00006e3b      4889542410     mov qword [rsp + 0x10], rdx
0x00006e40      4489442408     mov dword [rsp + 8], r8d
0x00006e45      44894c2478     mov dword [rsp + 0x78], r9d
0x00006e4a      4889442420     mov qword [rsp + 0x20], rax
0x00006e4f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00006e57      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x00006e5c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00006e64      4889442460     mov qword [rsp + 0x60], rax
0x00006e69      64488b042528.  mov rax, qword fs:[0x28]
0x00006e72      48898424a800.  mov qword [rsp + 0xa8], rax
0x00006e7a      31c0           xor eax, eax
0x00006e7c      e80fafffff     call sym.imp.__ctype_get_mb_cur_max
0x00006e81      4183ff0a       cmp r15d, 0xa
0x00006e85      4889442458     mov qword [rsp + 0x58], rax
0x00006e8a      0f87af110000   ja 0x803f
0x00006e90      488d0de94e01.  lea rcx, [0x0001bd80]
0x00006e97      4489fa         mov edx, r15d
0x00006e9a      48630491       movsxd rax, dword [rcx + rdx*4]
0x00006e9e      4801c8         add rax, rcx
0x00006ea1      ffe0           jmp rax
0x00006ea3      c644240e01     mov byte [rsp + 0xe], 1
0x00006ea8      c644247c00     mov byte [rsp + 0x7c], 0
0x00006ead      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00006eb0      48c744245000.  mov qword [rsp + 0x50], 0
0x00006eb9      c644240f01     mov byte [rsp + 0xf], 1
0x00006ebe      c644240d00     mov byte [rsp + 0xd], 0
0x00006ec3      488d052c4e01.  lea rax, [0x0001bcf6]                   ; "'"
0x00006eca      48c744241801.  mov qword [rsp + 0x18], 1
0x00006ed3      4531ff         xor r15d, r15d
0x00006ed6      c74424080200.  mov dword [rsp + 8], 2
0x00006ede      4889442448     mov qword [rsp + 0x48], rax
0x00006ee3      4531db         xor r11d, r11d
0x00006ee6      4889e8         mov rax, rbp
0x00006ee9      4589e0         mov r8d, r12d
0x00006eec      4c89dd         mov rbp, r11
0x00006eef      4989c3         mov r11, rax
0x00006ef2      660f1f440000   nop word [rax + rax]
0x00006ef8      4939eb         cmp r11, rbp
0x00006efb      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x00006eff      4983fbff       cmp r11, 0xffffffffffffffff
0x00006f03      750d           jne 0x6f12
0x00006f05      488b442410     mov rax, qword [rsp + 0x10]
0x00006f0a      803c2800       cmp byte [rax + rbp], 0
0x00006f0e      410f95c4       setne r12b
0x00006f12      4584e4         test r12b, r12b
0x00006f15      0f8455060000   je 0x7570
0x00006f1b      837c240802     cmp dword [rsp + 8], 2
0x00006f20      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00006f25      4c8d0c2f       lea r9, [rdi + rbp]
0x00006f29      0f95c0         setne al
0x00006f2c      2244240d       and al, byte [rsp + 0xd]
0x00006f30      4189c2         mov r10d, eax
0x00006f33      0f84a7000000   je 0x6fe0
0x00006f39      488b442418     mov rax, qword [rsp + 0x18]
0x00006f3e      4885c0         test rax, rax
0x00006f41      0f8429040000   je 0x7370
0x00006f47      4983fbff       cmp r11, 0xffffffffffffffff
0x00006f4b      488d5c0500     lea rbx, [rbp + rax]
0x00006f50      752e           jne 0x6f80
0x00006f52      4883f801       cmp rax, 1
0x00006f56      7628           jbe 0x6f80
0x00006f58      4488442438     mov byte [rsp + 0x38], r8b
0x00006f5d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00006f62      4c894c2428     mov qword [rsp + 0x28], r9
0x00006f67      e834aeffff     call sym.imp.strlen
0x00006f6c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00006f72      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00006f78      4989c3         mov r11, rax
0x00006f7b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00006f80      4c39db         cmp rbx, r11
0x00006f83      4488542428     mov byte [rsp + 0x28], r10b
0x00006f88      0f87b2050000   ja 0x7540
0x00006f8e      488b542418     mov rdx, qword [rsp + 0x18]
0x00006f93      488b742448     mov rsi, qword [rsp + 0x48]
0x00006f98      4c89cf         mov rdi, r9
0x00006f9b      4c895c2440     mov qword [rsp + 0x40], r11
0x00006fa0      4488442438     mov byte [rsp + 0x38], r8b
0x00006fa5      4c894c2430     mov qword [rsp + 0x30], r9
0x00006faa      e8e1aeffff     call sym.imp.memcmp
0x00006faf      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00006fb1      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00006fb6      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00006fbc      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00006fc1      0f8579050000   jne 0x7540
0x00006fc7      807c240f00     cmp byte [rsp + 0xf], 0
0x00006fcc      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00006fd2      0f857d0f0000   jne 0x7f55
0x00006fd8      0f1f84000000.  nop dword [rax + rax]
0x00006fe0      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00006fe4      80fb7e         cmp bl, 0x7e
0x00006fe7      0f871b030000   ja 0x7308
0x00006fed      488d0db84d01.  lea rcx, [0x0001bdac]
0x00006ff4      0fb6d3         movzx edx, bl
0x00006ff7      48630491       movsxd rax, dword [rcx + rdx*4]
0x00006ffb      4801c8         add rax, rcx
0x00006ffe      ffe0           jmp rax
0x00007000      4531d2         xor r10d, r10d
0x00007003      4983fb01       cmp r11, 1
0x00007007      0f95c0         setne al
0x0000700a      4983fbff       cmp r11, 0xffffffffffffffff
0x0000700e      750c           jne 0x701c
0x00007010      488b442410     mov rax, qword [rsp + 0x10]
0x00007015      80780100       cmp byte [rax + 1], 0
0x00007019      0f95c0         setne al
0x0000701c      837c240802     cmp dword [rsp + 8], 2
0x00007021      0f94c2         sete dl
0x00007024      84c0           test al, al
0x00007026      0f844c020000   je 0x7278
0x0000702c      4531e4         xor r12d, r12d
0x0000702f      31c0           xor eax, eax
0x00007031      0f1f80000000.  nop dword [rax]
0x00007038      807c240d01     cmp byte [rsp + 0xd], 1
0x0000703d      0f850f010000   jne 0x7152
0x00007043      84d2           test dl, dl
0x00007045      0f8507010000   jne 0x7152
0x0000704b      488b742420     mov rsi, qword [rsp + 0x20]
0x00007050      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00007053      7414           je 0x7069
0x00007055      89da           mov edx, ebx
0x00007057      c0ea05         shr dl, 5
0x0000705a      0fb6d2         movzx edx, dl
0x0000705d      8b1496         mov edx, dword [rsi + rdx*4]
0x00007060      0fa3da         bt edx, ebx
0x00007063      0f824a010000   jb 0x71b3
0x00007069      4584d2         test r10b, r10b
0x0000706c      0f8541010000   jne 0x71b3
0x00007072      83f001         xor eax, 1
0x00007075      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00007079      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x0000707c      84c0           test al, al
0x0000707e      7420           je 0x70a0                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00007080      4d39fd         cmp r13, r15
0x00007083      7605           jbe 0x708a
0x00007085      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000708a      498d4701       lea rax, [r15 + 1]
0x0000708e      4939c5         cmp r13, rax
0x00007091      7606           jbe 0x7099
0x00007093      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00007099      4983c702       add r15, 2
0x0000709d      4531c0         xor r8d, r8d
0x000070a0      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x000070a3      7304           jae 0x70a9                              ; ../coreutils-8.31/lib/quotearg.c:68
0x000070a5      43881c3e       mov byte [r14 + r15], bl
0x000070a9      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x000070ae      4983c701       add r15, 1
0x000070b2      b800000000     mov eax, 0
0x000070b7      4584e4         test r12b, r12b
0x000070ba      0f44f8         cmove edi, eax
0x000070bd      40887c240e     mov byte [rsp + 0xe], dil
0x000070c2      e931feffff     jmp 0x6ef8
0x000070c7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x000070d0      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x000070d3      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x000070d7      83f802         cmp eax, 2
0x000070da      0f84b8050000   je 0x7698
0x000070e0      83f805         cmp eax, 5
0x000070e3      0f846f050000   je 0x7658
0x000070e9      83f802         cmp eax, 2
0x000070ec      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000070f1      0f94c2         sete dl
0x000070f4      4531e4         xor r12d, r12d
0x000070f7      31c0           xor eax, eax
0x000070f9      e93affffff     jmp 0x7038
0x000070fe      6690           nop
0x00007100      4531d2         xor r10d, r10d
0x00007103      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00007108      0f8402050000   je 0x7610
0x0000710e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00007113      31d2           xor edx, edx
0x00007115      31c0           xor eax, eax
0x00007117      bb27000000     mov ebx, 0x27                           ; '''
0x0000711c      e917ffffff     jmp 0x7038
0x00007121      0f1f80000000.  nop dword [rax]
0x00007128      ba09000000     mov edx, 9
0x0000712d      bb74000000     mov ebx, 0x74                           ; 't'
0x00007132      837c240802     cmp dword [rsp + 8], 2
0x00007137      0f94c0         sete al
0x0000713a      2244240f       and al, byte [rsp + 0xf]
0x0000713e      0f854a010000   jne 0x728e
0x00007144      807c240d00     cmp byte [rsp + 0xd], 0
0x00007149      7565           jne 0x71b0
0x0000714b      89d3           mov ebx, edx
0x0000714d      4531e4         xor r12d, r12d
0x00007150      31c0           xor eax, eax
0x00007152      807c240f00     cmp byte [rsp + 0xf], 0
0x00007157      0f85eefeffff   jne 0x704b
0x0000715d      e907ffffff     jmp 0x7069                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00007162      660f1f440000   nop word [rax + rax]
0x00007168      ba08000000     mov edx, 8
0x0000716d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00007172      ebd0           jmp 0x7144
0x00007174      0f1f4000       nop dword [rax]
0x00007178      837c240802     cmp dword [rsp + 8], 2
0x0000717d      0f84cd030000   je 0x7550
0x00007183      807c240d00     cmp byte [rsp + 0xd], 0
0x00007188      0f8412020000   je 0x73a0
0x0000718e      807c240f00     cmp byte [rsp + 0xf], 0
0x00007193      0f8407020000   je 0x73a0
0x00007199      48837c241800   cmp qword [rsp + 0x18], 0
0x0000719f      0f85b6030000   jne 0x755b
0x000071a5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000071aa      660f1f440000   nop word [rax + rax]
0x000071b0      4531e4         xor r12d, r12d
0x000071b3      837c240802     cmp dword [rsp + 8], 2
0x000071b8      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x000071bb      807c240f00     cmp byte [rsp + 0xf], 0
0x000071c0      89d0           mov eax, edx
0x000071c2      0f8550080000   jne 0x7a18
0x000071c8      4489c0         mov eax, r8d
0x000071cb      83f001         xor eax, 1
0x000071ce      20d0           and al, dl
0x000071d0      742f           je 0x7201
0x000071d2      4d39fd         cmp r13, r15
0x000071d5      7605           jbe 0x71dc
0x000071d7      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000071dc      498d5701       lea rdx, [r15 + 1]
0x000071e0      4939d5         cmp r13, rdx
0x000071e3      7606           jbe 0x71eb
0x000071e5      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000071eb      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x000071ef      4939d5         cmp r13, rdx
0x000071f2      7606           jbe 0x71fa
0x000071f4      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000071fa      4983c703       add r15, 3
0x000071fe      4189c0         mov r8d, eax
0x00007201      4d39fd         cmp r13, r15
0x00007204      7605           jbe 0x720b
0x00007206      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000720b      4983c701       add r15, 1
0x0000720f      4883c501       add rbp, 1
0x00007213      e988feffff     jmp 0x70a0
0x00007218      0f1f84000000.  nop dword [rax + rax]
0x00007220      807c240d00     cmp byte [rsp + 0xd], 0
0x00007225      0f85c8010000   jne 0x73f3
0x0000722b      31d2           xor edx, edx
0x0000722d      f644247801     test byte [rsp + 0x78], 1
0x00007232      0f8413ffffff   je 0x714b
0x00007238      4883c501       add rbp, 1
0x0000723c      e9b7fcffff     jmp 0x6ef8
0x00007241      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00007248      837c240802     cmp dword [rsp + 8], 2
0x0000724d      0f94c2         sete dl
0x00007250      31c0           xor eax, eax
0x00007252      e9e1fdffff     jmp 0x7038
0x00007257      660f1f840000.  nop word [rax + rax]
0x00007260      ba07000000     mov edx, 7
0x00007265      bb61000000     mov ebx, 0x61                           ; 'a'
0x0000726a      e9d5feffff     jmp 0x7144
0x0000726f      90             nop
0x00007270      837c240802     cmp dword [rsp + 8], 2
0x00007275      0f94c2         sete dl
0x00007278      4885ed         test rbp, rbp
0x0000727b      0f85abfdffff   jne 0x702c
0x00007281      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00007286      20d0           and al, dl
0x00007288      0f84aafdffff   je 0x7038
0x0000728e      4c89dd         mov rbp, r11
0x00007291      c74424080200.  mov dword [rsp + 8], 2
0x00007299      e9fb060000     jmp 0x7999
0x0000729e      6690           nop
0x000072a0      837c240802     cmp dword [rsp + 8], 2
0x000072a5      0f94c2         sete dl
0x000072a8      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x000072ab      ebd4           jmp 0x7281
0x000072ad      0f1f00         nop dword [rax]
0x000072b0      837c240802     cmp dword [rsp + 8], 2
0x000072b5      bb20000000     mov ebx, 0x20                           ; "@"
0x000072ba      0f94c2         sete dl
0x000072bd      ebc2           jmp 0x7281
0x000072bf      90             nop
0x000072c0      ba0d000000     mov edx, 0xd
0x000072c5      bb72000000     mov ebx, 0x72                           ; 'r'
0x000072ca      e963feffff     jmp 0x7132
0x000072cf      90             nop
0x000072d0      ba0c000000     mov edx, 0xc
0x000072d5      bb66000000     mov ebx, 0x66                           ; 'f'
0x000072da      e965feffff     jmp 0x7144
0x000072df      90             nop
0x000072e0      ba0b000000     mov edx, 0xb
0x000072e5      bb76000000     mov ebx, 0x76                           ; 'v'
0x000072ea      e955feffff     jmp 0x7144
0x000072ef      90             nop
0x000072f0      ba0a000000     mov edx, 0xa
0x000072f5      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x000072fa      e933feffff     jmp 0x7132
0x000072ff      90             nop
0x00007300      4531d2         xor r10d, r10d
0x00007303      0f1f440000     nop dword [rax + rax]
0x00007308      48837c245801   cmp qword [rsp + 0x58], 1
0x0000730e      0f85a4030000   jne 0x76b8
0x00007314      4c895c2438     mov qword [rsp + 0x38], r11
0x00007319      4488442430     mov byte [rsp + 0x30], r8b
0x0000731e      4488542428     mov byte [rsp + 0x28], r10b
0x00007323      e8b8adffff     call sym.imp.__ctype_b_loc
0x00007328      488b08         mov rcx, qword [rax]
0x0000732b      0fb6d3         movzx edx, bl
0x0000732e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00007334      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x0000733a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0000733f      bf01000000     mov edi, 1
0x00007344      0fb70451       movzx eax, word [rcx + rdx*2]
0x00007348      66250040       and ax, 0x4000                          ; "=\x84\xd8!"
0x0000734c      410f95c4       setne r12b
0x00007350      0f94c0         sete al
0x00007353      2244240d       and al, byte [rsp + 0xd]
0x00007357      84c0           test al, al
0x00007359      0f8592090000   jne 0x7cf1
0x0000735f      837c240802     cmp dword [rsp + 8], 2
0x00007364      0f94c2         sete dl
0x00007367      e9ccfcffff     jmp 0x7038
0x0000736c      0f1f4000       nop dword [rax]
0x00007370      410fb619       movzx ebx, byte [r9]
0x00007374      80fb7e         cmp bl, 0x7e
0x00007377      7787           ja 0x7300
0x00007379      488d0d284c01.  lea rcx, [0x0001bfa8]
0x00007380      0fb6d3         movzx edx, bl
0x00007383      48630491       movsxd rax, dword [rcx + rdx*4]
0x00007387      4801c8         add rax, rcx
0x0000738a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x0000738c      0f1f4000       nop dword [rax]
0x00007390      4531d2         xor r10d, r10d
0x00007393      807c240d00     cmp byte [rsp + 0xd], 0
0x00007398      0f85f0fdffff   jne 0x718e
0x0000739e      6690           nop
0x000073a0      ba5c000000     mov edx, 0x5c                           ; '\'
0x000073a5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000073aa      e995fdffff     jmp 0x7144
0x000073af      90             nop
0x000073b0      ba0c000000     mov edx, 0xc
0x000073b5      4531d2         xor r10d, r10d
0x000073b8      bb66000000     mov ebx, 0x66                           ; 'f'
0x000073bd      e982fdffff     jmp 0x7144
0x000073c2      660f1f440000   nop word [rax + rax]
0x000073c8      ba0a000000     mov edx, 0xa
0x000073cd      4531d2         xor r10d, r10d
0x000073d0      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x000073d5      e958fdffff     jmp 0x7132
0x000073da      660f1f440000   nop word [rax + rax]
0x000073e0      bb61000000     mov ebx, 0x61                           ; 'a'
0x000073e5      e9c6fdffff     jmp 0x71b0
0x000073ea      660f1f440000   nop word [rax + rax]
0x000073f0      4531d2         xor r10d, r10d
0x000073f3      837c240802     cmp dword [rsp + 8], 2
0x000073f8      0f94c2         sete dl
0x000073fb      807c240f00     cmp byte [rsp + 0xf], 0
0x00007400      0f85940b0000   jne 0x7f9a
0x00007406      4489c0         mov eax, r8d
0x00007409      4c89f9         mov rcx, r15
0x0000740c      83f001         xor eax, 1
0x0000740f      20d0           and al, dl
0x00007411      742d           je 0x7440
0x00007413      4d39fd         cmp r13, r15
0x00007416      7605           jbe 0x741d
0x00007418      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000741d      498d4f01       lea rcx, [r15 + 1]
0x00007421      4939cd         cmp r13, rcx
0x00007424      7606           jbe 0x742c
0x00007426      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000742c      498d4f02       lea rcx, [r15 + 2]
0x00007430      4939cd         cmp r13, rcx
0x00007433      0f8730060000   ja 0x7a69
0x00007439      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x0000743d      4189c0         mov r8d, eax
0x00007440      4939cd         cmp r13, rcx
0x00007443      7605           jbe 0x744a
0x00007445      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000744a      837c240802     cmp dword [rsp + 8], 2
0x0000744f      4c8d7901       lea r15, [rcx + 1]
0x00007453      0f8400060000   je 0x7a59
0x00007459      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000745d      4c39d8         cmp rax, r11
0x00007460      7319           jae 0x747b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00007462      488b442410     mov rax, qword [rsp + 0x10]
0x00007467      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x0000746c      88442428       mov byte [rsp + 0x28], al
0x00007470      83e830         sub eax, 0x30
0x00007473      3c09           cmp al, 9
0x00007475      0f862e080000   jbe 0x7ca9
0x0000747b      4489e0         mov eax, r12d
0x0000747e      bb30000000     mov ebx, 0x30                           ; '0'
0x00007483      4531e4         xor r12d, r12d
0x00007486      e9adfbffff     jmp 0x7038                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x0000748b      0f1f440000     nop dword [rax + rax]
0x00007490      837c240802     cmp dword [rsp + 8], 2
0x00007495      4589d4         mov r12d, r10d
0x00007498      0f94c2         sete dl
0x0000749b      4531d2         xor r10d, r10d
0x0000749e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x000074a0      e993fbffff     jmp 0x7038                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x000074a5      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x000074a8      837c240802     cmp dword [rsp + 8], 2
0x000074ad      0f94c2         sete dl
0x000074b0      4531d2         xor r10d, r10d
0x000074b3      e9c0fdffff     jmp 0x7278
0x000074b8      0f1f84000000.  nop dword [rax + rax]
0x000074c0      837c240802     cmp dword [rsp + 8], 2
0x000074c5      0f94c2         sete dl
0x000074c8      4531d2         xor r10d, r10d
0x000074cb      4531e4         xor r12d, r12d
0x000074ce      e9aefdffff     jmp 0x7281
0x000074d3      0f1f440000     nop dword [rax + rax]
0x000074d8      837c240802     cmp dword [rsp + 8], 2
0x000074dd      4589d4         mov r12d, r10d
0x000074e0      bb20000000     mov ebx, 0x20                           ; "@"
0x000074e5      0f94c2         sete dl
0x000074e8      4531d2         xor r10d, r10d
0x000074eb      e991fdffff     jmp 0x7281
0x000074f0      ba0d000000     mov edx, 0xd
0x000074f5      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x000074f8      bb72000000     mov ebx, 0x72                           ; 'r'
0x000074fd      e930fcffff     jmp 0x7132
0x00007502      660f1f440000   nop word [rax + rax]
0x00007508      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000750d      e99efcffff     jmp 0x71b0
0x00007512      660f1f440000   nop word [rax + rax]
0x00007518      ba09000000     mov edx, 9
0x0000751d      4531d2         xor r10d, r10d
0x00007520      bb74000000     mov ebx, 0x74                           ; 't'
0x00007525      e908fcffff     jmp 0x7132
0x0000752a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00007530      bb62000000     mov ebx, 0x62                           ; 'b'
0x00007535      e976fcffff     jmp 0x71b0
0x0000753a      660f1f440000   nop word [rax + rax]
0x00007540      4531d2         xor r10d, r10d
0x00007543      e998faffff     jmp 0x6fe0
0x00007548      0f1f84000000.  nop dword [rax + rax]
0x00007550      807c240f00     cmp byte [rsp + 0xf], 0
0x00007555      0f8565090000   jne 0x7ec0
0x0000755b      4883c501       add rbp, 1
0x0000755f      4489c0         mov eax, r8d
0x00007562      4531e4         xor r12d, r12d
0x00007565      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000756a      e90dfbffff     jmp 0x707c
0x0000756f      90             nop
0x00007570      837c240802     cmp dword [rsp + 8], 2
0x00007575      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000757a      4589c4         mov r12d, r8d
0x0000757d      4c89dd         mov rbp, r11
0x00007580      0f94c2         sete dl
0x00007583      89d8           mov eax, ebx
0x00007585      4d85ff         test r15, r15
0x00007588      0f94c1         sete cl
0x0000758b      21d0           and eax, edx
0x0000758d      20c8           and al, cl
0x0000758f      0f85610a0000   jne 0x7ff6                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00007595      89d8           mov eax, ebx
0x00007597      83f001         xor eax, 1
0x0000759a      20c2           and dl, al
0x0000759c      0f846a090000   je 0x7f0c
0x000075a2      807c247c00     cmp byte [rsp + 0x7c], 0
0x000075a7      0f845d090000   je 0x7f0a
0x000075ad      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x000075b2      0f85f5090000   jne 0x7fad
0x000075b8      4d85ed         test r13, r13
0x000075bb      0f94c0         sete al
0x000075be      48837c245000   cmp qword [rsp + 0x50], 0
0x000075c4      0f95c2         setne dl
0x000075c7      20d0           and al, dl
0x000075c9      0f841d0a0000   je 0x7fec
0x000075cf      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000075d4      488d1d1b4701.  lea rbx, [0x0001bcf6]                   ; "'"
0x000075db      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x000075df      c74424080200.  mov dword [rsp + 8], 2
0x000075e7      41bf01000000   mov r15d, 1
0x000075ed      48c744241801.  mov qword [rsp + 0x18], 1
0x000075f6      c644240f00     mov byte [rsp + 0xf], 0
0x000075fb      48895c2448     mov qword [rsp + 0x48], rbx
0x00007600      8844247c       mov byte [rsp + 0x7c], al
0x00007604      e9daf8ffff     jmp 0x6ee3
0x00007609      0f1f80000000.  nop dword [rax]
0x00007610      807c240f00     cmp byte [rsp + 0xf], 0
0x00007615      0f85a5080000   jne 0x7ec0
0x0000761b      4d85ed         test r13, r13
0x0000761e      0f84fc030000   je 0x7a20                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00007624      31d2           xor edx, edx
0x00007626      48837c245000   cmp qword [rsp + 0x50], 0
0x0000762c      0f85ee030000   jne 0x7a20                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00007632      4c896c2450     mov qword [rsp + 0x50], r13
0x00007637      4983c703       add r15, 3
0x0000763b      31c0           xor eax, eax
0x0000763d      448864247c     mov byte [rsp + 0x7c], r12b
0x00007642      4531c0         xor r8d, r8d
0x00007645      4989d5         mov r13, rdx
0x00007648      bb27000000     mov ebx, 0x27                           ; '''
0x0000764d      e917faffff     jmp 0x7069
0x00007652      660f1f440000   nop word [rax + rax]
0x00007658      f644247804     test byte [rsp + 0x78], 4
0x0000765d      7421           je 0x7680
0x0000765f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00007663      4c39d9         cmp rcx, r11
0x00007666      7318           jae 0x7680
0x00007668      488b442410     mov rax, qword [rsp + 0x10]
0x0000766d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00007672      0f848a070000   je 0x7e02
0x00007678      0f1f84000000.  nop dword [rax + rax]
0x00007680      31d2           xor edx, edx
0x00007682      4531e4         xor r12d, r12d
0x00007685      31c0           xor eax, eax
0x00007687      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000768c      e9a7f9ffff     jmp 0x7038
0x00007691      0f1f80000000.  nop dword [rax]
0x00007698      807c240f00     cmp byte [rsp + 0xf], 0
0x0000769d      0f851d080000   jne 0x7ec0
0x000076a3      4531e4         xor r12d, r12d
0x000076a6      31c0           xor eax, eax
0x000076a8      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000076ad      e9b7f9ffff     jmp 0x7069                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x000076b2      660f1f440000   nop word [rax + rax]
0x000076b8      488d8424a000.  lea rax, [rsp + 0xa0]
0x000076c0      4983fbff       cmp r11, 0xffffffffffffffff
0x000076c4      48c78424a000.  mov qword [rsp + 0xa0], 0
0x000076d0      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x000076d5      752d           jne 0x7704
0x000076d7      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000076dc      4488442440     mov byte [rsp + 0x40], r8b
0x000076e1      4488542438     mov byte [rsp + 0x38], r10b
0x000076e6      4c894c2430     mov qword [rsp + 0x30], r9
0x000076eb      e8b0a6ffff     call sym.imp.strlen
0x000076f0      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x000076f6      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x000076fc      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x000076ff      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00007704      488d84249c00.  lea rax, [rsp + 0x9c]
0x0000770c      31c9           xor ecx, ecx
0x0000770e      885c247e       mov byte [rsp + 0x7e], bl
0x00007712      448844247d     mov byte [rsp + 0x7d], r8b
0x00007717      4889cb         mov rbx, rcx
0x0000771a      4c898c248800.  mov qword [rsp + 0x88], r9
0x00007722      4889442438     mov qword [rsp + 0x38], rax
0x00007727      448854247f     mov byte [rsp + 0x7f], r10b
0x0000772c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00007734      4c89742440     mov qword [rsp + 0x40], r14
0x00007739      4c896c2470     mov qword [rsp + 0x70], r13
0x0000773e      4c895c2430     mov qword [rsp + 0x30], r11
0x00007743      488b442410     mov rax, qword [rsp + 0x10]
0x00007748      4c8d741d00     lea r14, [rbp + rbx]
0x0000774d      488b542430     mov rdx, qword [rsp + 0x30]
0x00007752      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00007757      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000775c      4e8d2c30       lea r13, [rax + r14]
0x00007760      4c29f2         sub rdx, r14
0x00007763      4c89ee         mov rsi, r13
0x00007766      e8452c0000     call sym.rpl_mbrtowc
0x0000776b      4885c0         test rax, rax
0x0000776e      4989c7         mov r15, rax
0x00007771      744e           je 0x77c1
0x00007773      4883f8ff       cmp rax, 0xffffffffffffffff
0x00007777      0f8418060000   je 0x7d95
0x0000777d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00007781      0f849a050000   je 0x7d21
0x00007787      837c240802     cmp dword [rsp + 8], 2
0x0000778c      0f94c0         sete al
0x0000778f      2244240f       and al, byte [rsp + 0xf]
0x00007793      0f8597010000   jne 0x7930
0x00007799      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x000077a0      e81ba9ffff     call sym.imp.iswprint
0x000077a5      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000077aa      85c0           test eax, eax
0x000077ac      b800000000     mov eax, 0
0x000077b1      440f44e0       cmove r12d, eax
0x000077b5      4c01fb         add rbx, r15
0x000077b8      e8f3a8ffff     call sym.imp.mbsinit
0x000077bd      85c0           test eax, eax
0x000077bf      7482           je 0x7743
0x000077c1      4489e2         mov edx, r12d
0x000077c4      4889df         mov rdi, rbx
0x000077c7      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000077cd      83f201         xor edx, 1
0x000077d0      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000077d5      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000077db      2254240d       and dl, byte [rsp + 0xd]
0x000077df      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000077e7      4c8b742440     mov r14, qword [rsp + 0x40]
0x000077ec      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000077f1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000077f6      4883ff01       cmp rdi, 1
0x000077fa      0f86fb050000   jbe 0x7dfb
0x00007800      4889f9         mov rcx, rdi
0x00007803      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00007805      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x0000780b      4801e9         add rcx, rbp
0x0000780e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00007813      e9b6000000     jmp 0x78ce
0x00007818      0f1f84000000.  nop dword [rax + rax]
0x00007820      837c240802     cmp dword [rsp + 8], 2
0x00007825      0f94c0         sete al
0x00007828      4584c9         test r9b, r9b
0x0000782b      0f85af040000   jne 0x7ce0
0x00007831      4489c6         mov esi, r8d
0x00007834      83f601         xor esi, 1
0x00007837      4020f0         and al, sil
0x0000783a      742f           je 0x786b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x0000783c      4d39fd         cmp r13, r15
0x0000783f      7605           jbe 0x7846
0x00007841      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00007846      498d7701       lea rsi, [r15 + 1]
0x0000784a      4939f5         cmp r13, rsi
0x0000784d      7606           jbe 0x7855                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x0000784f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00007855      498d7702       lea rsi, [r15 + 2]
0x00007859      4939f5         cmp r13, rsi
0x0000785c      7606           jbe 0x7864
0x0000785e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00007864      4983c703       add r15, 3
0x00007868      4189c0         mov r8d, eax
0x0000786b      4d39fd         cmp r13, r15
0x0000786e      7605           jbe 0x7875
0x00007870      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00007875      498d4701       lea rax, [r15 + 1]
0x00007879      4939c5         cmp r13, rax
0x0000787c      760d           jbe 0x788b
0x0000787e      89d8           mov eax, ebx
0x00007880      c0e806         shr al, 6
0x00007883      83c030         add eax, 0x30
0x00007886      4388443e01     mov byte [r14 + r15 + 1], al
0x0000788b      498d4702       lea rax, [r15 + 2]
0x0000788f      4939c5         cmp r13, rax
0x00007892      7610           jbe 0x78a4
0x00007894      89d8           mov eax, ebx
0x00007896      c0e803         shr al, 3
0x00007899      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x0000789c      83c030         add eax, 0x30
0x0000789f      4388443e02     mov byte [r14 + r15 + 2], al
0x000078a4      83e307         and ebx, 7
0x000078a7      4883c501       add rbp, 1
0x000078ab      4983c703       add r15, 3
0x000078af      83c330         add ebx, 0x30
0x000078b2      4839cd         cmp rbp, rcx
0x000078b5      0f83e5f7ffff   jae 0x70a0
0x000078bb      89d6           mov esi, edx
0x000078bd      4d39fd         cmp r13, r15
0x000078c0      7604           jbe 0x78c6
0x000078c2      43881c3e       mov byte [r14 + r15], bl
0x000078c6      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x000078ca      4983c701       add r15, 1
0x000078ce      84d2           test dl, dl
0x000078d0      0f854affffff   jne 0x7820
0x000078d6      89f0           mov eax, esi
0x000078d8      83f001         xor eax, 1
0x000078db      4421c0         and eax, r8d
0x000078de      4584d2         test r10b, r10b
0x000078e1      740e           je 0x78f1
0x000078e3      4d39fd         cmp r13, r15
0x000078e6      7605           jbe 0x78ed
0x000078e8      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000078ed      4983c701       add r15, 1
0x000078f1      4883c501       add rbp, 1
0x000078f5      4839cd         cmp rbp, rcx
0x000078f8      0f837ef7ffff   jae 0x707c
0x000078fe      84c0           test al, al
0x00007900      0f84f8030000   je 0x7cfe
0x00007906      4d39fd         cmp r13, r15
0x00007909      7605           jbe 0x7910
0x0000790b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00007910      498d4701       lea rax, [r15 + 1]
0x00007914      4939c5         cmp r13, rax
0x00007917      7606           jbe 0x791f
0x00007919      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000791f      4983c702       add r15, 2
0x00007923      4531d2         xor r10d, r10d
0x00007926      4531c0         xor r8d, r8d
0x00007929      eb92           jmp 0x78bd
0x0000792b      0f1f440000     nop dword [rax + rax]
0x00007930      4983ff01       cmp r15, 1
0x00007934      0f845ffeffff   je 0x7799
0x0000793a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000793f      4a8d0c3f       lea rcx, [rdi + r15]
0x00007943      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00007948      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000794c      eb0f           jmp 0x795d
0x0000794e      6690           nop
0x00007950      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00007954      4939d0         cmp r8, rdx
0x00007957      0f843cfeffff   je 0x7799
0x0000795d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00007960      83e95b         sub ecx, 0x5b
0x00007963      80f921         cmp cl, 0x21
0x00007966      77e8           ja 0x7950                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00007968      be01000000     mov esi, 1
0x0000796d      48d3e6         shl rsi, cl
0x00007970      4889f1         mov rcx, rsi
0x00007973      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x0000797d      4885f1         test rcx, rsi
0x00007980      74ce           je 0x7950
0x00007982      4c8b742440     mov r14, qword [rsp + 0x40]
0x00007987      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000798c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00007991      c74424080200.  mov dword [rsp + 8], 2
0x00007999      807c240d00     cmp byte [rsp + 0xd], 0
0x0000799e      7410           je 0x79b0
0x000079a0      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x000079a2      b804000000     mov eax, 4
0x000079a7      0f44442408     cmove eax, dword [rsp + 8]
0x000079ac      89442408       mov dword [rsp + 8], eax
0x000079b0      4883ec08       sub rsp, 8
0x000079b4      4889e9         mov rcx, rbp
0x000079b7      4c89ee         mov rsi, r13
0x000079ba      ff742468       push qword [rsp + 0x68]
0x000079be      ff742478       push qword [rsp + 0x78]
0x000079c2      4c89f7         mov rdi, r14
0x000079c5      6a00           push 0
0x000079c7      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x000079cf      448b442428     mov r8d, dword [rsp + 0x28]
0x000079d4      488b542430     mov rdx, qword [rsp + 0x30]
0x000079d9      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x000079dd      e82ef4ffff     call sym.quotearg_buffer_restyled
0x000079e2      4883c420       add rsp, 0x20
0x000079e6      4989c7         mov r15, rax
0x000079e9      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x000079f1      6448331c2528.  xor rbx, qword fs:[0x28]
0x000079fa      4c89f8         mov rax, r15
0x000079fd      0f8500060000   jne 0x8003
0x00007a03      4881c4b80000.  add rsp, 0xb8
0x00007a0a      5b             pop rbx
0x00007a0b      5d             pop rbp
0x00007a0c      415c           pop r12
0x00007a0e      415d           pop r13
0x00007a10      415e           pop r14
0x00007a12      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00007a14      c3             ret
0x00007a15      0f1f00         nop dword [rax]
0x00007a18      4c89dd         mov rbp, r11
0x00007a1b      e979ffffff     jmp 0x7999
0x00007a20      4d39fd         cmp r13, r15
0x00007a23      7605           jbe 0x7a2a
0x00007a25      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00007a2a      498d4701       lea rax, [r15 + 1]
0x00007a2e      4939c5         cmp r13, rax
0x00007a31      7606           jbe 0x7a39
0x00007a33      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00007a39      498d4702       lea rax, [r15 + 2]
0x00007a3d      4939c5         cmp r13, rax
0x00007a40      0f86ec050000   jbe 0x8032
0x00007a46      4c89ea         mov rdx, r13
0x00007a49      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00007a4f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00007a54      e9d9fbffff     jmp 0x7632
0x00007a59      4489e0         mov eax, r12d
0x00007a5c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00007a61      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00007a64      e900f6ffff     jmp 0x7069                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00007a69      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00007a6f      e9c5f9ffff     jmp 0x7439
0x00007a74      85db           test ebx, ebx
0x00007a76      0f8527f4ffff   jne 0x6ea3
0x00007a7c      c644240d01     mov byte [rsp + 0xd], 1
0x00007a81      4d85ed         test r13, r13
0x00007a84      0f8590050000   jne 0x801a
0x00007a8a      488d05654201.  lea rax, [0x0001bcf6]                   ; "'"
0x00007a91      48c744245000.  mov qword [rsp + 0x50], 0
0x00007a9a      c644240e01     mov byte [rsp + 0xe], 1
0x00007a9f      c644247c00     mov byte [rsp + 0x7c], 0
0x00007aa4      4531e4         xor r12d, r12d
0x00007aa7      c644240f00     mov byte [rsp + 0xf], 0
0x00007aac      48c744241801.  mov qword [rsp + 0x18], 1
0x00007ab5      4889442448     mov qword [rsp + 0x48], rax
0x00007aba      41bf01000000   mov r15d, 1
0x00007ac0      c74424080200.  mov dword [rsp + 8], 2
0x00007ac8      e916f4ffff     jmp 0x6ee3                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x00007acd      0f1f00         nop dword [rax]
0x00007ad0      85db           test ebx, ebx
0x00007ad2      0f85f5030000   jne 0x7ecd
0x00007ad8      4d85ed         test r13, r13
0x00007adb      0f8425020000   je 0x7d06
0x00007ae1      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00007ae5      c644240e01     mov byte [rsp + 0xe], 1
0x00007aea      4531e4         xor r12d, r12d
0x00007aed      c644247c00     mov byte [rsp + 0x7c], 0
0x00007af2      48c744245000.  mov qword [rsp + 0x50], 0
0x00007afb      488d05a63d01.  lea rax, [0x0001b8a8]                   ; "\""
0x00007b02      c644240f00     mov byte [rsp + 0xf], 0
0x00007b07      c644240d01     mov byte [rsp + 0xd], 1
0x00007b0c      48c744241801.  mov qword [rsp + 0x18], 1
0x00007b15      41bf01000000   mov r15d, 1
0x00007b1b      4889442448     mov qword [rsp + 0x48], rax
0x00007b20      e9bef3ffff     jmp 0x6ee3
0x00007b25      488d057c3d01.  lea rax, [0x0001b8a8]                   ; "\""
0x00007b2c      c644240e01     mov byte [rsp + 0xe], 1
0x00007b31      c644247c00     mov byte [rsp + 0x7c], 0
0x00007b36      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00007b39      48c744245000.  mov qword [rsp + 0x50], 0
0x00007b42      c644240f01     mov byte [rsp + 0xf], 1
0x00007b47      c644240d01     mov byte [rsp + 0xd], 1
0x00007b4c      48c744241801.  mov qword [rsp + 0x18], 1
0x00007b55      4531ff         xor r15d, r15d
0x00007b58      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x00007b5d      c74424080500.  mov dword [rsp + 8], 5
0x00007b65      e979f3ffff     jmp 0x6ee3
0x00007b6a      c644240e01     mov byte [rsp + 0xe], 1
0x00007b6f      c644247c00     mov byte [rsp + 0x7c], 0
0x00007b74      4531e4         xor r12d, r12d
0x00007b77      48c744245000.  mov qword [rsp + 0x50], 0
0x00007b80      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00007b85      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00007b88      c644240d01     mov byte [rsp + 0xd], 1
0x00007b8d      48c744241800.  mov qword [rsp + 0x18], 0
0x00007b96      48c744244800.  mov qword [rsp + 0x48], 0
0x00007b9f      e93ff3ffff     jmp 0x6ee3
0x00007ba4      837c24080a     cmp dword [rsp + 8], 0xa
0x00007ba9      7456           je 0x7c01
0x00007bab      488d35804101.  lea rsi, [0x0001bd32]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00007bb2      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00007bb4      ba05000000     mov edx, 5
0x00007bb9      e8c2a1ffff     call sym.imp.dcgettext
0x00007bbe      4889c1         mov rcx, rax
0x00007bc1      4889442468     mov qword [rsp + 0x68], rax
0x00007bc6      488d05654101.  lea rax, [0x0001bd32]                   ; "`"
0x00007bcd      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00007bd0      0f8498030000   je 0x7f6e
0x00007bd6      488d35194101.  lea rsi, [0x0001bcf6]                   ; "'"
0x00007bdd      31ff           xor edi, edi
0x00007bdf      ba05000000     mov edx, 5
0x00007be4      e897a1ffff     call sym.imp.dcgettext
0x00007be9      4889c1         mov rcx, rax
0x00007bec      4889442460     mov qword [rsp + 0x60], rax
0x00007bf1      488d05fe4001.  lea rax, [0x0001bcf6]                   ; "'"
0x00007bf8      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x00007bfb      0f8483030000   je 0x7f84
0x00007c01      4531ff         xor r15d, r15d
0x00007c04      85db           test ebx, ebx
0x00007c06      0f84c1010000   je 0x7dcd
0x00007c0c      85db           test ebx, ebx
0x00007c0e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00007c13      0f9544240f     setne byte [rsp + 0xf]
0x00007c18      4531e4         xor r12d, r12d
0x00007c1b      4889df         mov rdi, rbx
0x00007c1e      e87da1ffff     call sym.imp.strlen
0x00007c23      48895c2448     mov qword [rsp + 0x48], rbx
0x00007c28      4889442418     mov qword [rsp + 0x18], rax
0x00007c2d      c644240e01     mov byte [rsp + 0xe], 1
0x00007c32      c644247c00     mov byte [rsp + 0x7c], 0
0x00007c37      48c744245000.  mov qword [rsp + 0x50], 0
0x00007c40      c644240d01     mov byte [rsp + 0xd], 1
0x00007c45      e999f2ffff     jmp 0x6ee3
0x00007c4a      c644240e01     mov byte [rsp + 0xe], 1
0x00007c4f      c644247c00     mov byte [rsp + 0x7c], 0
0x00007c54      4531e4         xor r12d, r12d
0x00007c57      48c744245000.  mov qword [rsp + 0x50], 0
0x00007c60      c644240f00     mov byte [rsp + 0xf], 0
0x00007c65      4531ff         xor r15d, r15d
0x00007c68      c644240d00     mov byte [rsp + 0xd], 0
0x00007c6d      48c744241800.  mov qword [rsp + 0x18], 0
0x00007c76      48c744244800.  mov qword [rsp + 0x48], 0
0x00007c7f      e95ff2ffff     jmp 0x6ee3
0x00007c84      c644240e01     mov byte [rsp + 0xe], 1
0x00007c89      c644247c00     mov byte [rsp + 0x7c], 0
0x00007c8e      4531e4         xor r12d, r12d
0x00007c91      48c744245000.  mov qword [rsp + 0x50], 0
0x00007c9a      c644240f01     mov byte [rsp + 0xf], 1
0x00007c9f      c644240d01     mov byte [rsp + 0xd], 1
0x00007ca4      e91af2ffff     jmp 0x6ec3
0x00007ca9      4d39fd         cmp r13, r15
0x00007cac      7605           jbe 0x7cb3
0x00007cae      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00007cb3      488d4102       lea rax, [rcx + 2]
0x00007cb7      4939c5         cmp r13, rax
0x00007cba      7606           jbe 0x7cc2
0x00007cbc      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00007cc2      4489e0         mov eax, r12d
0x00007cc5      4c8d7903       lea r15, [rcx + 3]
0x00007cc9      4531e4         xor r12d, r12d
0x00007ccc      bb30000000     mov ebx, 0x30                           ; '0'
0x00007cd1      e962f3ffff     jmp 0x7038
0x00007cd6      662e0f1f8400.  nop word cs:[rax + rax]
0x00007ce0      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00007ce5      4c89dd         mov rbp, r11
0x00007ce8      885c240d       mov byte [rsp + 0xd], bl
0x00007cec      e9a8fcffff     jmp 0x7999
0x00007cf1      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00007cf6      4531e4         xor r12d, r12d
0x00007cf9      e902fbffff     jmp 0x7800
0x00007cfe      4531d2         xor r10d, r10d
0x00007d01      e9b7fbffff     jmp 0x78bd
0x00007d06      48c744245000.  mov qword [rsp + 0x50], 0
0x00007d0f      c644240e01     mov byte [rsp + 0xe], 1
0x00007d14      4531e4         xor r12d, r12d
0x00007d17      c644247c00     mov byte [rsp + 0x7c], 0
0x00007d1c      e9dafdffff     jmp 0x7afb
0x00007d21      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00007d26      4c89f6         mov rsi, r14
0x00007d29      4c89e9         mov rcx, r13
0x00007d2c      4889d8         mov rax, rbx
0x00007d2f      4889df         mov rdi, rbx
0x00007d32      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00007d38      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00007d3d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00007d45      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00007d48      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00007d4e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00007d56      4c8b742440     mov r14, qword [rsp + 0x40]
0x00007d5b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00007d60      7326           jae 0x7d88
0x00007d62      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00007d65      7510           jne 0x7d77
0x00007d67      eb1f           jmp 0x7d88
0x00007d69      0f1f80000000.  nop dword [rax]
0x00007d70      41803c0100     cmp byte [r9 + rax], 0
0x00007d75      740e           je 0x7d85
0x00007d77      4883c001       add rax, 1
0x00007d7b      488d540500     lea rdx, [rbp + rax]
0x00007d80      4939d3         cmp r11, rdx
0x00007d83      77eb           ja 0x7d70
0x00007d85      4889c7         mov rdi, rax
0x00007d88      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00007d8d      4531e4         xor r12d, r12d
0x00007d90      e961faffff     jmp 0x77f6
0x00007d95      4889df         mov rdi, rbx
0x00007d98      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00007d9e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00007da3      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00007da9      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00007db1      4531e4         xor r12d, r12d
0x00007db4      4c8b742440     mov r14, qword [rsp + 0x40]
0x00007db9      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00007dbe      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00007dc3      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00007dc8      e929faffff     jmp 0x77f6
0x00007dcd      488b542468     mov rdx, qword [rsp + 0x68]
0x00007dd2      0fb602         movzx eax, byte [rdx]
0x00007dd5      84c0           test al, al
0x00007dd7      0f842ffeffff   je 0x7c0c
0x00007ddd      0f1f00         nop dword [rax]
0x00007de0      4d39fd         cmp r13, r15
0x00007de3      7604           jbe 0x7de9
0x00007de5      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00007de9      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x00007ded      420fb6043a     movzx eax, byte [rdx + r15]
0x00007df2      84c0           test al, al
0x00007df4      75ea           jne 0x7de0
0x00007df6      e911feffff     jmp 0x7c0c
0x00007dfb      89d0           mov eax, edx
0x00007dfd      e955f5ffff     jmp 0x7357
0x00007e02      0fb61c08       movzx ebx, byte [rax + rcx]
0x00007e06      80fb3e         cmp bl, 0x3e
0x00007e09      0f8771f8ffff   ja 0x7680
0x00007e0f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00007e19      480fa3d8       bt rax, rbx
0x00007e1d      0f835df8ffff   jae 0x7680
0x00007e23      807c240f00     cmp byte [rsp + 0xf], 0
0x00007e28      0f85e4010000   jne 0x8012                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x00007e2e      4d39fd         cmp r13, r15
0x00007e31      7605           jbe 0x7e38
0x00007e33      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00007e38      498d4701       lea rax, [r15 + 1]
0x00007e3c      4939c5         cmp r13, rax
0x00007e3f      7606           jbe 0x7e47
0x00007e41      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00007e47      498d4702       lea rax, [r15 + 2]
0x00007e4b      4939c5         cmp r13, rax
0x00007e4e      7606           jbe 0x7e56
0x00007e50      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00007e56      498d4703       lea rax, [r15 + 3]
0x00007e5a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x00007e5d      7606           jbe 0x7e65
0x00007e5f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00007e65      4983c704       add r15, 4
0x00007e69      31d2           xor edx, edx
0x00007e6b      4531e4         xor r12d, r12d
0x00007e6e      31c0           xor eax, eax
0x00007e70      4889cd         mov rbp, rcx
0x00007e73      e9c0f1ffff     jmp 0x7038
0x00007e78      85db           test ebx, ebx
0x00007e7a      0f8488010000   je 0x8008
0x00007e80      488d056f3e01.  lea rax, [0x0001bcf6]                   ; "'"
0x00007e87      c644240e01     mov byte [rsp + 0xe], 1
0x00007e8c      c644247c00     mov byte [rsp + 0x7c], 0
0x00007e91      4531e4         xor r12d, r12d
0x00007e94      48c744245000.  mov qword [rsp + 0x50], 0
0x00007e9d      c644240f01     mov byte [rsp + 0xf], 1
0x00007ea2      c644240d00     mov byte [rsp + 0xd], 0
0x00007ea7      48c744241801.  mov qword [rsp + 0x18], 1
0x00007eb0      4531ff         xor r15d, r15d
0x00007eb3      4889442448     mov qword [rsp + 0x48], rax
0x00007eb8      e926f0ffff     jmp 0x6ee3
0x00007ebd      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00007ec0      4c89dd         mov rbp, r11
0x00007ec3      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00007ec8      e9ccfaffff     jmp 0x7999
0x00007ecd      488d05d43901.  lea rax, [0x0001b8a8]                   ; "\""
0x00007ed4      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00007ed9      c644247c00     mov byte [rsp + 0x7c], 0
0x00007ede      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00007ee1      48c744245000.  mov qword [rsp + 0x50], 0
0x00007eea      c644240f01     mov byte [rsp + 0xf], 1
0x00007eef      c644240d01     mov byte [rsp + 0xd], 1
0x00007ef4      48c744241801.  mov qword [rsp + 0x18], 1
0x00007efd      4531ff         xor r15d, r15d
0x00007f00      4889442448     mov qword [rsp + 0x48], rax
0x00007f05      e9d9efffff     jmp 0x6ee3
0x00007f0a      89d0           mov eax, edx
0x00007f0c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00007f11      4885db         test rbx, rbx
0x00007f14      742c           je 0x7f42
0x00007f16      84c0           test al, al
0x00007f18      7428           je 0x7f42
0x00007f1a      0fb60b         movzx ecx, byte [rbx]
0x00007f1d      4889d8         mov rax, rbx
0x00007f20      84c9           test cl, cl
0x00007f22      741e           je 0x7f42
0x00007f24      4c89fa         mov rdx, r15
0x00007f27      4c29f8         sub rax, r15
0x00007f2a      4939d5         cmp r13, rdx
0x00007f2d      7604           jbe 0x7f33
0x00007f2f      41880c16       mov byte [r14 + rdx], cl
0x00007f33      4883c201       add rdx, 1
0x00007f37      0fb60c10       movzx ecx, byte [rax + rdx]
0x00007f3b      84c9           test cl, cl
0x00007f3d      75eb           jne 0x7f2a
0x00007f3f      4989d7         mov r15, rdx
0x00007f42      4d39fd         cmp r13, r15
0x00007f45      0f869efaffff   jbe 0x79e9
0x00007f4b      43c6043e00     mov byte [r14 + r15], 0
0x00007f50      e994faffff     jmp 0x79e9
0x00007f55      837c240802     cmp dword [rsp + 8], 2
0x00007f5a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00007f5f      4c89dd         mov rbp, r11
0x00007f62      0f94c0         sete al
0x00007f65      885c240d       mov byte [rsp + 0xd], bl
0x00007f69      e92bfaffff     jmp 0x7999
0x00007f6e      8b742408       mov esi, dword [rsp + 8]
0x00007f72      4889cf         mov rdi, rcx
0x00007f75      e8a6edffff     call sym.gettext_quote.part.1
0x00007f7a      4889442468     mov qword [rsp + 0x68], rax
0x00007f7f      e952fcffff     jmp 0x7bd6
0x00007f84      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00007f88      4889cf         mov rdi, rcx
0x00007f8b      e890edffff     call sym.gettext_quote.part.1
0x00007f90      4889442460     mov qword [rsp + 0x60], rax
0x00007f95      e967fcffff     jmp 0x7c01
0x00007f9a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00007f9f      4c89dd         mov rbp, r11
0x00007fa2      89d0           mov eax, edx
0x00007fa4      885c240d       mov byte [rsp + 0xd], bl
0x00007fa8      e9ecf9ffff     jmp 0x7999
0x00007fad      4883ec08       sub rsp, 8
0x00007fb1      41b805000000   mov r8d, 5
0x00007fb7      4c89d9         mov rcx, r11
0x00007fba      ff742468       push qword [rsp + 0x68]
0x00007fbe      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00007fc2      4c89f7         mov rdi, r14
0x00007fc5      ff742438       push qword [rsp + 0x38]
0x00007fc9      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00007fd1      488b542430     mov rdx, qword [rsp + 0x30]
0x00007fd6      488b742470     mov rsi, qword [rsp + 0x70]
0x00007fdb      e830eeffff     call sym.quotearg_buffer_restyled
0x00007fe0      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00007fe4      4989c7         mov r15, rax
0x00007fe7      e9fdf9ffff     jmp 0x79e9
0x00007fec      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00007ff1      e916ffffff     jmp 0x7f0c
0x00007ff6      c74424080200.  mov dword [rsp + 8], 2
0x00007ffe      e996f9ffff     jmp 0x7999
0x00008003      e8a89dffff     call sym.imp.__stack_chk_fail
0x00008008      c644240d00     mov byte [rsp + 0xd], 0
0x0000800d      e96ffaffff     jmp 0x7a81
0x00008012      4c89dd         mov rbp, r11
0x00008015      e996f9ffff     jmp 0x79b0
0x0000801a      c644240e01     mov byte [rsp + 0xe], 1
0x0000801f      31c0           xor eax, eax
0x00008021      4531e4         xor r12d, r12d
0x00008024      48c744245000.  mov qword [rsp + 0x50], 0
0x0000802d      e9a2f5ffff     jmp 0x75d4
0x00008032      4c89ea         mov rdx, r13
0x00008035      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000803a      e9f3f5ffff     jmp 0x7632
0x0000803f      e82c9cffff     call sym.imp.abort
0x00008044      6690           nop
0x00008046      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00008050      4157           push r15
0x00008052      4156           push r14
0x00008054      4c63ff         movsxd r15, edi
0x00008057      4155           push r13
0x00008059      4154           push r12
0x0000805b      4989d6         mov r14, rdx
0x0000805e      55             push rbp
0x0000805f      53             push rbx
0x00008060      4889cd         mov rbp, rcx
0x00008063      4883ec28       sub rsp, 0x28
0x00008067      4889742408     mov qword [rsp + 8], rsi
0x0000806c      e80f9cffff     call sym.imp.__errno_location
0x00008071      4989c5         mov r13, rax
0x00008074      8b00           mov eax, dword [rax]
0x00008076      4585ff         test r15d, r15d
0x00008079      488b1d209021.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x2210a0:8]=0x2210b0 obj.slotvec0
0x00008080      89442418       mov dword [rsp + 0x18], eax
0x00008084      0f8867010000   js 0x81f1
0x0000808a      44393d079021.  cmp dword [obj.nslots], r15d            ; [0x221098:4]=1
0x00008091      7f62           jg 0x80f5
0x00008093      4181ffffffff.  cmp r15d, 0x7fffffff
0x0000809a      0f8456010000   je 0x81f6
0x000080a0      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x000080a4      488d05059021.  lea rax, obj.slotvec0                   ; 0x2210b0
0x000080ab      4963f4         movsxd rsi, r12d
0x000080ae      48c1e604       shl rsi, 4
0x000080b2      4839c3         cmp rbx, rax
0x000080b5      0f8415010000   je 0x81d0
0x000080bb      4889df         mov rdi, rbx
0x000080be      e85d180000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x000080c3      4889c3         mov rbx, rax
0x000080c6      488905d38f21.  mov qword [obj.slotvec], rax            ; [0x2210a0:8]=0x2210b0 obj.slotvec0
0x000080cd      48633dc48f21.  movsxd rdi, dword [obj.nslots]          ; [0x221098:4]=1
0x000080d4      4489e2         mov edx, r12d
0x000080d7      31f6           xor esi, esi
0x000080d9      29fa           sub edx, edi
0x000080db      48c1e704       shl rdi, 4
0x000080df      4863d2         movsxd rdx, edx
0x000080e2      4801df         add rdi, rbx
0x000080e5      48c1e204       shl rdx, 4
0x000080e9      e8529dffff     call sym.imp.memset
0x000080ee      448925a38f21.  mov dword [obj.nslots], r12d            ; [0x221098:4]=1
0x000080f5      8b4504         mov eax, dword [rbp + 4]
0x000080f8      49c1e704       shl r15, 4
0x000080fc      4883ec08       sub rsp, 8
0x00008100      4c01fb         add rbx, r15
0x00008103      4c8d7d08       lea r15, [rbp + 8]
0x00008107      448b4500       mov r8d, dword [rbp]
0x0000810b      4c8b1b         mov r11, qword [rbx]
0x0000810e      4c8b6308       mov r12, qword [rbx + 8]
0x00008112      4c89f1         mov rcx, r14
0x00008115      83c801         or eax, 1
0x00008118      89442424       mov dword [rsp + 0x24], eax
0x0000811c      ff7530         push qword [rbp + 0x30]
0x0000811f      4189c1         mov r9d, eax
0x00008122      ff7528         push qword [rbp + 0x28]
0x00008125      4157           push r15
0x00008127      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x0000812a      488b542428     mov rdx, qword [rsp + 0x28]
0x0000812f      4c89e7         mov rdi, r12
0x00008132      4c895c2430     mov qword [rsp + 0x30], r11
0x00008137      e8d4ecffff     call sym.quotearg_buffer_restyled
0x0000813c      4883c420       add rsp, 0x20
0x00008140      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00008145      4939c3         cmp r11, rax
0x00008148      7767           ja 0x81b1
0x0000814a      488d7001       lea rsi, [rax + 1]
0x0000814e      488d056b9721.  lea rax, obj.slot0                      ; 0x2218c0
0x00008155      4939c4         cmp r12, rax
0x00008158      488933         mov qword [rbx], rsi
0x0000815b      7412           je 0x816f
0x0000815d      4c89e7         mov rdi, r12
0x00008160      4889742410     mov qword [rsp + 0x10], rsi
0x00008165      e8f69affff     call sym.imp.free
0x0000816a      488b742410     mov rsi, qword [rsp + 0x10]
0x0000816f      4889f7         mov rdi, rsi
0x00008172      4889742410     mov qword [rsp + 0x10], rsi
0x00008177      e844170000     call sym.xmalloc
0x0000817c      4883ec08       sub rsp, 8
0x00008180      48894308       mov qword [rbx + 8], rax
0x00008184      448b4500       mov r8d, dword [rbp]
0x00008188      ff7530         push qword [rbp + 0x30]
0x0000818b      ff7528         push qword [rbp + 0x28]
0x0000818e      4c89f1         mov rcx, r14
0x00008191      4157           push r15
0x00008193      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00008198      4889c7         mov rdi, rax
0x0000819b      488b542428     mov rdx, qword [rsp + 0x28]
0x000081a0      488b742430     mov rsi, qword [rsp + 0x30]
0x000081a5      4989c4         mov r12, rax
0x000081a8      e863ecffff     call sym.quotearg_buffer_restyled
0x000081ad      4883c420       add rsp, 0x20
0x000081b1      8b442418       mov eax, dword [rsp + 0x18]
0x000081b5      41894500       mov dword [r13], eax
0x000081b9      4883c428       add rsp, 0x28
0x000081bd      4c89e0         mov rax, r12
0x000081c0      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x000081c1      5d             pop rbp
0x000081c2      415c           pop r12
0x000081c4      415d           pop r13
0x000081c6      415e           pop r14
0x000081c8      415f           pop r15
0x000081ca      c3             ret
0x000081cb      0f1f440000     nop dword [rax + rax]
0x000081d0      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x000081d2      e849170000     call sym.xrealloc
0x000081d7      660f6f05d18e.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x000081df      4889c3         mov rbx, rax
0x000081e2      488905b78e21.  mov qword [obj.slotvec], rax            ; [0x2210a0:8]=0x2210b0 obj.slotvec0
0x000081e9      0f1100         movups xmmword [rax], xmm0
0x000081ec      e9dcfeffff     jmp 0x80cd
0x000081f1      e87a9affff     call sym.imp.abort
0x000081f6      e815190000     call sym.xalloc_die
0x000081fb      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00008200      4154           push r12
0x00008202      55             push rbp
0x00008203      53             push rbx
0x00008204      4889fb         mov rbx, rdi
0x00008207      e8749affff     call sym.imp.__errno_location
0x0000820c      448b20         mov r12d, dword [rax]
0x0000820f      4889c5         mov rbp, rax
0x00008212      488d05a79721.  lea rax, obj.default_quoting_options    ; 0x2219c0
0x00008219      4885db         test rbx, rbx
0x0000821c      be38000000     mov esi, 0x38                           ; '8'
0x00008221      480f44d8       cmove rbx, rax
0x00008225      4889df         mov rdi, rbx
0x00008228      e893180000     call sym.xmemdup
0x0000822d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00008231      5b             pop rbx
0x00008232      5d             pop rbp
0x00008233      415c           pop r12
0x00008235      c3             ret
0x00008236      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00008240      488d05799721.  lea rax, obj.default_quoting_options    ; 0x2219c0
0x00008247      4885ff         test rdi, rdi
0x0000824a      480f44f8       cmove rdi, rax
0x0000824e      8b07           mov eax, dword [rdi]
0x00008250      c3             ret
0x00008251      0f1f440000     nop dword [rax + rax]
0x00008256      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00008260      488d05599721.  lea rax, obj.default_quoting_options    ; 0x2219c0
0x00008267      4885ff         test rdi, rdi
0x0000826a      480f44f8       cmove rdi, rax
0x0000826e      8937           mov dword [rdi], esi
0x00008270      c3             ret
0x00008271      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00008276      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00008280      488d05399721.  lea rax, obj.default_quoting_options    ; 0x2219c0
0x00008287      4885ff         test rdi, rdi
0x0000828a      89f1           mov ecx, esi
0x0000828c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00008290      89f0           mov eax, esi
0x00008292      83e11f         and ecx, 0x1f
0x00008295      c0e805         shr al, 5
0x00008298      0fb6c0         movzx eax, al
0x0000829b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x000082a0      8b37           mov esi, dword [rdi]
0x000082a2      89f0           mov eax, esi
0x000082a4      d3e8           shr eax, cl
0x000082a6      31c2           xor edx, eax
0x000082a8      83e001         and eax, 1
0x000082ab      83e201         and edx, 1
0x000082ae      d3e2           shl edx, cl
0x000082b0      31f2           xor edx, esi
0x000082b2      8917           mov dword [rdi], edx
0x000082b4      c3             ret
0x000082b5      90             nop
0x000082b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x000082c0      488d05f99621.  lea rax, obj.default_quoting_options    ; 0x2219c0
0x000082c7      4885ff         test rdi, rdi
0x000082ca      480f44f8       cmove rdi, rax
0x000082ce      8b4704         mov eax, dword [rdi + 4]
0x000082d1      897704         mov dword [rdi + 4], esi
0x000082d4      c3             ret
0x000082d5      90             nop
0x000082d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x000082e0      488d05d99621.  lea rax, obj.default_quoting_options    ; 0x2219c0
0x000082e7      4885ff         test rdi, rdi
0x000082ea      480f44f8       cmove rdi, rax
0x000082ee      4885f6         test rsi, rsi
0x000082f1      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x000082f7      740e           je 0x8307
0x000082f9      4885d2         test rdx, rdx
0x000082fc      7409           je 0x8307
0x000082fe      48897728       mov qword [rdi + 0x28], rsi
0x00008302      48895730       mov qword [rdi + 0x30], rdx
0x00008306      c3             ret
0x00008307      4883ec08       sub rsp, 8
0x0000830b      e86099ffff     call sym.imp.abort
;-- quotearg_buffer:
0x00008310      4157           push r15
0x00008312      4156           push r14
0x00008314      488d05a59621.  lea rax, obj.default_quoting_options    ; 0x2219c0
0x0000831b      4155           push r13
0x0000831d      4154           push r12
0x0000831f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00008322      55             push rbp
0x00008323      53             push rbx
0x00008324      4c89c3         mov rbx, r8
0x00008327      4989f6         mov r14, rsi
0x0000832a      4989d7         mov r15, rdx
0x0000832d      4883ec18       sub rsp, 0x18
0x00008331      4d85c0         test r8, r8
0x00008334      480f44d8       cmove rbx, rax
0x00008338      48894c2408     mov qword [rsp + 8], rcx
0x0000833d      e83e99ffff     call sym.imp.__errno_location
0x00008342      448b20         mov r12d, dword [rax]
0x00008345      4889c5         mov rbp, rax
0x00008348      488d4308       lea rax, [rbx + 8]
0x0000834c      4883ec08       sub rsp, 8
0x00008350      448b4b04       mov r9d, dword [rbx + 4]
0x00008354      ff7330         push qword [rbx + 0x30]
0x00008357      448b03         mov r8d, dword [rbx]
0x0000835a      ff7328         push qword [rbx + 0x28]
0x0000835d      4c89fa         mov rdx, r15
0x00008360      50             push rax
0x00008361      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00008366      4c89f6         mov rsi, r14
0x00008369      4c89ef         mov rdi, r13
0x0000836c      e89feaffff     call sym.quotearg_buffer_restyled
0x00008371      44896500       mov dword [rbp], r12d
0x00008375      4883c438       add rsp, 0x38
0x00008379      5b             pop rbx
0x0000837a      5d             pop rbp
0x0000837b      415c           pop r12
0x0000837d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000837f      415e           pop r14
0x00008381      415f           pop r15
0x00008383      c3             ret
0x00008384      6690           nop
0x00008386      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00008390      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00008392      4156           push r14
0x00008394      488d05259621.  lea rax, obj.default_quoting_options    ; 0x2219c0
0x0000839b      4155           push r13
0x0000839d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x0000839f      4989d4         mov r12, rdx
0x000083a2      55             push rbp
0x000083a3      53             push rbx
0x000083a4      4889cb         mov rbx, rcx
0x000083a7      4989fe         mov r14, rdi
0x000083aa      4989f7         mov r15, rsi
0x000083ad      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x000083b1      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x000083b4      480f44d8       cmove rbx, rax
0x000083b8      31ed           xor ebp, ebp
0x000083ba      e8c198ffff     call sym.imp.__errno_location
0x000083bf      4d85e4         test r12, r12
0x000083c2      4989c5         mov r13, rax
0x000083c5      8b00           mov eax, dword [rax]
0x000083c7      400f94c5       sete bpl
0x000083cb      0b6b04         or ebp, dword [rbx + 4]
0x000083ce      4c8d5308       lea r10, [rbx + 8]
0x000083d2      4883ec08       sub rsp, 8
0x000083d6      448b03         mov r8d, dword [rbx]
0x000083d9      4c89f9         mov rcx, r15
0x000083dc      89442414       mov dword [rsp + 0x14], eax
0x000083e0      ff7330         push qword [rbx + 0x30]
0x000083e3      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x000083e6      ff7328         push qword [rbx + 0x28]
0x000083e9      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x000083eb      31f6           xor esi, esi
0x000083ed      4189e9         mov r9d, ebp
0x000083f0      31ff           xor edi, edi
0x000083f2      4c89542440     mov qword [rsp + 0x40], r10
0x000083f7      e814eaffff     call sym.quotearg_buffer_restyled
0x000083fc      488d7001       lea rsi, [rax + 1]
0x00008400      4889442448     mov qword [rsp + 0x48], rax
0x00008405      4883c420       add rsp, 0x20
0x00008409      4889f7         mov rdi, rsi
0x0000840c      4889742418     mov qword [rsp + 0x18], rsi
0x00008411      e8aa140000     call sym.xmalloc
0x00008416      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x0000841b      4883ec08       sub rsp, 8
0x0000841f      ff7330         push qword [rbx + 0x30]
0x00008422      ff7328         push qword [rbx + 0x28]
0x00008425      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000842a      4189e9         mov r9d, ebp
0x0000842d      448b03         mov r8d, dword [rbx]
0x00008430      4c89f9         mov rcx, r15
0x00008433      4c89f2         mov rdx, r14
0x00008436      4889c7         mov rdi, rax
0x00008439      4152           push r10
0x0000843b      488b742438     mov rsi, qword [rsp + 0x38]
0x00008440      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00008445      8b44242c       mov eax, dword [rsp + 0x2c]
0x00008449      4883c420       add rsp, 0x20
0x0000844d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00008450      41894500       mov dword [r13], eax
0x00008454      7409           je 0x845f
0x00008456      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000845b      4d891c24       mov qword [r12], r11
0x0000845f      488b442410     mov rax, qword [rsp + 0x10]
0x00008464      4883c438       add rsp, 0x38
0x00008468      5b             pop rbx
0x00008469      5d             pop rbp
0x0000846a      415c           pop r12
0x0000846c      415d           pop r13
0x0000846e      415e           pop r14
0x00008470      415f           pop r15
0x00008472      c3             ret
0x00008473      0f1f00         nop dword [rax]
0x00008476      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00008480      4889d1         mov rcx, rdx
0x00008483      31d2           xor edx, edx
0x00008485      e906ffffff     jmp sym.quotearg_alloc_mem
0x0000848a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00008490      8b05028c2100   mov eax, dword [obj.nslots]             ; [0x221098:4]=1
0x00008496      4154           push r12
0x00008498      4c8b25018c21.  mov r12, qword [obj.slotvec]            ; [0x2210a0:8]=0x2210b0 obj.slotvec0
0x0000849f      55             push rbp
0x000084a0      53             push rbx
0x000084a1      83f801         cmp eax, 1
0x000084a4      7e2b           jle 0x84d1                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x000084a6      83e802         sub eax, 2
0x000084a9      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x000084ae      48c1e004       shl rax, 4
0x000084b2      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x000084b7      660f1f840000.  nop word [rax + rax]
0x000084c0      488b3b         mov rdi, qword [rbx]
0x000084c3      4883c310       add rbx, 0x10
0x000084c7      e89497ffff     call sym.imp.free
0x000084cc      4839eb         cmp rbx, rbp
0x000084cf      75ef           jne 0x84c0
0x000084d1      498b7c2408     mov rdi, qword [r12 + 8]
0x000084d6      488d1de39321.  lea rbx, obj.slot0                      ; 0x2218c0
0x000084dd      4839df         cmp rdi, rbx
0x000084e0      7417           je 0x84f9
0x000084e2      e87997ffff     call sym.imp.free
0x000084e7      48c705be8b21.  mov qword [obj.slotvec0], 0x100         ; [0x2210b0:8]=256
0x000084f2      48891dbf8b21.  mov qword [0x002210b8], rbx             ; [0x2210b8:8]=0x2218c0 obj.slot0
0x000084f9      488d1db08b21.  lea rbx, obj.slotvec0                   ; 0x2210b0
0x00008500      4939dc         cmp r12, rbx
0x00008503      740f           je 0x8514
0x00008505      4c89e7         mov rdi, r12
0x00008508      e85397ffff     call sym.imp.free
0x0000850d      48891d8c8b21.  mov qword [obj.slotvec], rbx            ; [0x2210a0:8]=0x2210b0 obj.slotvec0
0x00008514      5b             pop rbx
0x00008515      c705798b2100.  mov dword [obj.nslots], 1               ; [0x221098:4]=1
0x0000851f      5d             pop rbp
0x00008520      415c           pop r12
0x00008522      c3             ret
0x00008523      0f1f00         nop dword [rax]
0x00008526      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00008530      488d0d899421.  lea rcx, obj.default_quoting_options    ; 0x2219c0
0x00008537      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000853e      e90dfbffff     jmp sym.quotearg_n_options
0x00008543      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00008546      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00008550      488d0d699421.  lea rcx, obj.default_quoting_options    ; 0x2219c0
0x00008557      e9f4faffff     jmp sym.quotearg_n_options
0x0000855c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00008560      488d0d599421.  lea rcx, obj.default_quoting_options    ; 0x2219c0
0x00008567      4889fe         mov rsi, rdi
0x0000856a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00008571      31ff           xor edi, edi
0x00008573      e9d8faffff     jmp sym.quotearg_n_options
0x00008578      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00008580      488d0d399421.  lea rcx, obj.default_quoting_options    ; 0x2219c0
0x00008587      4889f2         mov rdx, rsi
0x0000858a      4889fe         mov rsi, rdi
0x0000858d      31ff           xor edi, edi
0x0000858f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00008594      6690           nop
0x00008596      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x000085a0      4883ec48       sub rsp, 0x48
0x000085a4      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x000085a7      64488b142528.  mov rdx, qword fs:[0x28]
0x000085b0      4889542438     mov qword [rsp + 0x38], rdx
0x000085b5      31d2           xor edx, edx
0x000085b7      83fe0a         cmp esi, 0xa
0x000085ba      7468           je 0x8624
0x000085bc      893424         mov dword [rsp], esi
0x000085bf      4889e1         mov rcx, rsp
0x000085c2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000085c9      4889c6         mov rsi, rax
0x000085cc      48c744240400.  mov qword [rsp + 4], 0
0x000085d5      48c744240c00.  mov qword [rsp + 0xc], 0
0x000085de      48c744241400.  mov qword [rsp + 0x14], 0
0x000085e7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000085f0      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x000085f9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00008602      c74424340000.  mov dword [rsp + 0x34], 0
0x0000860a      e841faffff     call sym.quotearg_n_options
0x0000860f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00008614      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000861d      750a           jne 0x8629                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x0000861f      4883c448       add rsp, 0x48
0x00008623      c3             ret
0x00008624      e84796ffff     call sym.imp.abort
0x00008629      e88297ffff     call sym.imp.__stack_chk_fail
0x0000862e      6690           nop
;-- quotearg_n_style_mem:
0x00008630      4883ec48       sub rsp, 0x48
0x00008634      4889d0         mov rax, rdx
0x00008637      4889ca         mov rdx, rcx
0x0000863a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00008643      48894c2438     mov qword [rsp + 0x38], rcx
0x00008648      31c9           xor ecx, ecx
0x0000864a      83fe0a         cmp esi, 0xa
0x0000864d      7461           je 0x86b0
0x0000864f      893424         mov dword [rsp], esi
0x00008652      4889e1         mov rcx, rsp
0x00008655      4889c6         mov rsi, rax
0x00008658      48c744240400.  mov qword [rsp + 4], 0
0x00008661      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000866a      48c744241400.  mov qword [rsp + 0x14], 0
0x00008673      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0000867c      48c744242400.  mov qword [rsp + 0x24], 0
0x00008685      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000868e      c74424340000.  mov dword [rsp + 0x34], 0
0x00008696      e8b5f9ffff     call sym.quotearg_n_options
0x0000869b      488b542438     mov rdx, qword [rsp + 0x38]
0x000086a0      644833142528.  xor rdx, qword fs:[0x28]
0x000086a9      750a           jne 0x86b5
0x000086ab      4883c448       add rsp, 0x48
0x000086af      c3             ret
0x000086b0      e8bb95ffff     call sym.imp.abort
0x000086b5      e8f696ffff     call sym.imp.__stack_chk_fail
0x000086ba      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x000086c0      4889f2         mov rdx, rsi
0x000086c3      89fe           mov esi, edi
0x000086c5      31ff           xor edi, edi
0x000086c7      e9d4feffff     jmp sym.quotearg_n_style
0x000086cc      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x000086d0      4889d1         mov rcx, rdx
0x000086d3      4889f2         mov rdx, rsi
0x000086d6      89fe           mov esi, edi
0x000086d8      31ff           xor edi, edi
0x000086da      e951ffffff     jmp sym.quotearg_n_style_mem
0x000086df      90             nop
;-- quotearg_char_mem:
0x000086e0      4883ec48       sub rsp, 0x48
0x000086e4      89d1           mov ecx, edx
0x000086e6      64488b042528.  mov rax, qword fs:[0x28]
0x000086ef      4889442438     mov qword [rsp + 0x38], rax
0x000086f4      31c0           xor eax, eax
0x000086f6      488b05f39221.  mov rax, qword [0x002219f0]             ; [0x2219f0:8]=0
0x000086fd      4989e0         mov r8, rsp
0x00008700      83e11f         and ecx, 0x1f
0x00008703      660f6f05b592.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x0000870b      4889442430     mov qword [rsp + 0x30], rax
0x00008710      89d0           mov eax, edx
0x00008712      0f290424       movaps xmmword [rsp], xmm0
0x00008716      c0e805         shr al, 5
0x00008719      0fb6c0         movzx eax, al
0x0000871c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00008721      660f6f05a792.  movdqa xmm0, xmmword [0x002219d0]
0x00008729      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000872e      660f6f05aa92.  movdqa xmm0, xmmword [0x002219e0]
0x00008736      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000873b      418b11         mov edx, dword [r9]
0x0000873e      89d0           mov eax, edx
0x00008740      d3e8           shr eax, cl
0x00008742      f7d0           not eax
0x00008744      83e001         and eax, 1
0x00008747      d3e0           shl eax, cl
0x00008749      4c89c1         mov rcx, r8
0x0000874c      31d0           xor eax, edx
0x0000874e      4889f2         mov rdx, rsi
0x00008751      4889fe         mov rsi, rdi
0x00008754      418901         mov dword [r9], eax
0x00008757      31ff           xor edi, edi
0x00008759      e8f2f8ffff     call sym.quotearg_n_options
0x0000875e      488b742438     mov rsi, qword [rsp + 0x38]
0x00008763      644833342528.  xor rsi, qword fs:[0x28]
0x0000876c      7505           jne 0x8773
0x0000876e      4883c448       add rsp, 0x48
0x00008772      c3             ret
0x00008773      e83896ffff     call sym.imp.__stack_chk_fail
0x00008778      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00008780      400fbed6       movsx edx, sil
0x00008784      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000878b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00008790      ba3a000000     mov edx, 0x3a                           ; ':'
0x00008795      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000879c      e93fffffff     jmp sym.quotearg_char_mem
0x000087a1      0f1f440000     nop dword [rax + rax]
0x000087a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x000087b0      ba3a000000     mov edx, 0x3a                           ; ':'
0x000087b5      e926ffffff     jmp sym.quotearg_char_mem
0x000087ba      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x000087c0      4883ec48       sub rsp, 0x48
0x000087c4      4889d0         mov rax, rdx
0x000087c7      64488b142528.  mov rdx, qword fs:[0x28]
0x000087d0      4889542438     mov qword [rsp + 0x38], rdx
0x000087d5      31d2           xor edx, edx
0x000087d7      83fe0a         cmp esi, 0xa
0x000087da      7468           je 0x8844
0x000087dc      893424         mov dword [rsp], esi
0x000087df      4889e1         mov rcx, rsp
0x000087e2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000087e9      4889c6         mov rsi, rax
0x000087ec      48c744240400.  mov qword [rsp + 4], 0
0x000087f5      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x000087fe      48c744241400.  mov qword [rsp + 0x14], 0
0x00008807      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00008810      48c744242400.  mov qword [rsp + 0x24], 0
0x00008819      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00008822      c74424340000.  mov dword [rsp + 0x34], 0
0x0000882a      e821f8ffff     call sym.quotearg_n_options
0x0000882f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00008834      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000883d      750a           jne 0x8849
0x0000883f      4883c448       add rsp, 0x48
0x00008843      c3             ret
0x00008844      e82794ffff     call sym.imp.abort
0x00008849      e86295ffff     call sym.imp.__stack_chk_fail
0x0000884e      6690           nop
;-- quotearg_n_custom_mem:
0x00008850      4883ec48       sub rsp, 0x48
0x00008854      4989c9         mov r9, rcx
0x00008857      488b0d929121.  mov rcx, qword [0x002219f0]             ; [0x2219f0:8]=0
0x0000885e      660f6f055a91.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00008866      64488b042528.  mov rax, qword fs:[0x28]
0x0000886f      4889442438     mov qword [rsp + 0x38], rax
0x00008874      31c0           xor eax, eax
0x00008876      0f290424       movaps xmmword [rsp], xmm0
0x0000887a      4885f6         test rsi, rsi
0x0000887d      48894c2430     mov qword [rsp + 0x30], rcx
0x00008882      c704240a0000.  mov dword [rsp], 0xa
0x00008889      660f6f053f91.  movdqa xmm0, xmmword [0x002219d0]
0x00008891      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00008896      660f6f054291.  movdqa xmm0, xmmword [0x002219e0]
0x0000889e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x000088a3      7432           je 0x88d7
0x000088a5      4885d2         test rdx, rdx
0x000088a8      742d           je 0x88d7
0x000088aa      4889742428     mov qword [rsp + 0x28], rsi
0x000088af      4889542430     mov qword [rsp + 0x30], rdx
0x000088b4      4889e1         mov rcx, rsp
0x000088b7      4c89c2         mov rdx, r8
0x000088ba      4c89ce         mov rsi, r9
0x000088bd      e88ef7ffff     call sym.quotearg_n_options
0x000088c2      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000088c7      6448333c2528.  xor rdi, qword fs:[0x28]
0x000088d0      750a           jne 0x88dc
0x000088d2      4883c448       add rsp, 0x48
0x000088d6      c3             ret
0x000088d7      e89493ffff     call sym.imp.abort
0x000088dc      e8cf94ffff     call sym.imp.__stack_chk_fail
0x000088e1      0f1f440000     nop dword [rax + rax]
0x000088e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x000088f0      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x000088f7      e954ffffff     jmp sym.quotearg_n_custom_mem
0x000088fc      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00008900      4889d1         mov rcx, rdx
0x00008903      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0000890a      4889f2         mov rdx, rsi
0x0000890d      4889fe         mov rsi, rdi
0x00008910      31ff           xor edi, edi
0x00008912      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00008917      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00008920      4989c8         mov r8, rcx
0x00008923      4889d1         mov rcx, rdx
0x00008926      4889f2         mov rdx, rsi
0x00008929      4889fe         mov rsi, rdi
0x0000892c      31ff           xor edi, edi
0x0000892e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00008933      0f1f00         nop dword [rax]
0x00008936      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00008940      488d0d198721.  lea rcx, obj.quote_quoting_options      ; 0x221060
0x00008947      e904f7ffff     jmp sym.quotearg_n_options
0x0000894c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00008950      488d0d098721.  lea rcx, obj.quote_quoting_options      ; 0x221060
0x00008957      4889f2         mov rdx, rsi
0x0000895a      4889fe         mov rsi, rdi
0x0000895d      31ff           xor edi, edi
0x0000895f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00008964      6690           nop
0x00008966      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00008970      488d0de98621.  lea rcx, obj.quote_quoting_options      ; 0x221060
0x00008977      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000897e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00008983      0f1f00         nop dword [rax]
0x00008986      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00008990      488d0dc98621.  lea rcx, obj.quote_quoting_options      ; 0x221060
0x00008997      4889fe         mov rsi, rdi
0x0000899a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000089a1      31ff           xor edi, edi
0x000089a3      e9a8f6ffff     jmp sym.quotearg_n_options
0x000089a8      0f1f84000000.  nop dword [rax + rax]
;-- fread_file:
0x000089b0      4157           push r15                                ; ../coreutils-8.31/lib/read-file.c:44
0x000089b2      4156           push r14
0x000089b4      4155           push r13
0x000089b6      4154           push r12
0x000089b8      4989fd         mov r13, rdi
0x000089bb      55             push rbp
0x000089bc      53             push rbx
0x000089bd      4881ecb80000.  sub rsp, 0xb8
0x000089c4      4889742408     mov qword [rsp + 8], rsi
0x000089c9      64488b042528.  mov rax, qword fs:[0x28]
0x000089d2      48898424a800.  mov qword [rsp + 0xa8], rax
0x000089da      31c0           xor eax, eax
0x000089dc      e80f95ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/read-file.c:53
0x000089e1      488d542410     lea rdx, [rsp + 0x10]                   ; stat.h:465   return __fxstat (_STAT_VER, __fd, __statbuf);
0x000089e6      89c6           mov esi, eax
0x000089e8      bf01000000     mov edi, 1
0x000089ed      e86e95ffff     call sym.imp.__fxstat
0x000089f2      85c0           test eax, eax                           ; ../coreutils-8.31/lib/read-file.c:53
0x000089f4      7814           js 0x8a0a
0x000089f6      8b442428       mov eax, dword [rsp + 0x28]
0x000089fa      2500f00000     and eax, 0xf000
0x000089ff      3d00800000     cmp eax, 0x8000
0x00008a04      0f844e010000   je 0x8b58
0x00008a0a      bb00200000     mov ebx, sym.imp.error                  ; ../coreutils-8.31/lib/read-file.c:46 ; 0x2000
0x00008a0f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/read-file.c:73
0x00008a12      e80995ffff     call sym.imp.malloc
0x00008a17      4885c0         test rax, rax
0x00008a1a      4989c4         mov r12, rax
0x00008a1d      0f849d000000   je 0x8ac0
0x00008a23      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/read-file.c:77
0x00008a25      49c7c7ffffff.  mov r15, 0xffffffffffffffff             ; ../coreutils-8.31/lib/read-file.c:117
0x00008a2c      eb3c           jmp 0x8a6a
0x00008a2e      6690           nop
0x00008a30      4883fbff       cmp rbx, 0xffffffffffffffff             ; ../coreutils-8.31/lib/read-file.c:110
0x00008a34      0f84d6000000   je 0x8b10
0x00008a3a      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/read-file.c:116
0x00008a3d      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/read-file.c:121
0x00008a40      48d1e8         shr rax, 1                              ; ../coreutils-8.31/lib/read-file.c:116
0x00008a43      4889c2         mov rdx, rax
0x00008a46      4801d8         add rax, rbx                            ; ../coreutils-8.31/lib/read-file.c:117
0x00008a49      48f7d2         not rdx                                 ; ../coreutils-8.31/lib/read-file.c:116
0x00008a4c      4839da         cmp rdx, rbx                            ; ../coreutils-8.31/lib/read-file.c:117
0x00008a4f      490f46c7       cmovbe rax, r15
0x00008a53      4889c6         mov rsi, rax                            ; ../coreutils-8.31/lib/read-file.c:121
0x00008a56      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/read-file.c:117
0x00008a59      e83295ffff     call sym.imp.realloc                    ; ../coreutils-8.31/lib/read-file.c:121
0x00008a5e      4885c0         test rax, rax
0x00008a61      0f8489000000   je 0x8af0
0x00008a67      4989c4         mov r12, rax
0x00008a6a      4989de         mov r14, rbx                            ; ../coreutils-8.31/lib/read-file.c:84
0x00008a6d      498d3c2c       lea rdi, [r12 + rbp]                    ; ../coreutils-8.31/lib/read-file.c:85
0x00008a71      4c89e9         mov rcx, r13                            ; stdio2.h:294   return __fread_alias (__ptr, __size, __n, __stream);
0x00008a74      4929ee         sub r14, rbp                            ; ../coreutils-8.31/lib/read-file.c:84
0x00008a77      be01000000     mov esi, 1                              ; stdio2.h:294   return __fread_alias (__ptr, __size, __n, __stream);
0x00008a7c      4c89f2         mov rdx, r14
0x00008a7f      e87c92ffff     call sym.imp.fread
0x00008a84      4801c5         add rbp, rax                            ; ../coreutils-8.31/lib/read-file.c:86
0x00008a87      4939c6         cmp r14, rax                            ; ../coreutils-8.31/lib/read-file.c:88
0x00008a8a      74a4           je 0x8a30
0x00008a8c      e8ef91ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/read-file.c:90
0x00008a91      4c89ef         mov rdi, r13                            ; ../coreutils-8.31/lib/read-file.c:91
0x00008a94      4989c6         mov r14, rax                            ; ../coreutils-8.31/lib/read-file.c:90
0x00008a97      448b38         mov r15d, dword [rax]
0x00008a9a      e84192ffff     call sym.imp.ferror                     ; ../coreutils-8.31/lib/read-file.c:91
0x00008a9f      85c0           test eax, eax
0x00008aa1      7558           jne 0x8afb
0x00008aa3      4883eb01       sub rbx, 1                              ; ../coreutils-8.31/lib/read-file.c:95
0x00008aa7      4839eb         cmp rbx, rbp
0x00008aaa      0f8780000000   ja 0x8b30
0x00008ab0      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/read-file.c:103
0x00008ab5      41c6042c00     mov byte [r12 + rbp], 0                 ; ../coreutils-8.31/lib/read-file.c:102
0x00008aba      488928         mov qword [rax], rbp                    ; ../coreutils-8.31/lib/read-file.c:103
0x00008abd      0f1f00         nop dword [rax]
0x00008ac0      488b8c24a800.  mov rcx, qword [rsp + 0xa8]             ; ../coreutils-8.31/lib/read-file.c:135
0x00008ac8      6448330c2528.  xor rcx, qword fs:[0x28]
0x00008ad1      4c89e0         mov rax, r12
0x00008ad4      0f85a9000000   jne 0x8b83
0x00008ada      4881c4b80000.  add rsp, 0xb8
0x00008ae1      5b             pop rbx
0x00008ae2      5d             pop rbp
0x00008ae3      415c           pop r12
0x00008ae5      415d           pop r13
0x00008ae7      415e           pop r14
0x00008ae9      415f           pop r15
0x00008aeb      c3             ret
0x00008aec      0f1f4000       nop dword [rax]
0x00008af0      e88b91ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/read-file.c:123
0x00008af5      448b38         mov r15d, dword [rax]
0x00008af8      4989c6         mov r14, rax
0x00008afb      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/read-file.c:131
0x00008afe      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/read-file.c:133
0x00008b01      e85a91ffff     call sym.imp.free                       ; ../coreutils-8.31/lib/read-file.c:131
0x00008b06      45893e         mov dword [r14], r15d                   ; ../coreutils-8.31/lib/read-file.c:132
0x00008b09      ebb5           jmp 0x8ac0                              ; ../coreutils-8.31/lib/read-file.c:133
0x00008b0b      0f1f440000     nop dword [rax + rax]
0x00008b10      e86b91ffff     call sym.imp.__errno_location
0x00008b15      41bf0c000000   mov r15d, 0xc                           ; ../coreutils-8.31/lib/read-file.c:112
0x00008b1b      4989c6         mov r14, rax
0x00008b1e      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/read-file.c:131
0x00008b21      e83a91ffff     call sym.imp.free
0x00008b26      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/read-file.c:133
0x00008b29      45893e         mov dword [r14], r15d                   ; ../coreutils-8.31/lib/read-file.c:132
0x00008b2c      eb92           jmp 0x8ac0
0x00008b2e      6690           nop
0x00008b30      488d7501       lea rsi, [rbp + 1]                      ; ../coreutils-8.31/lib/read-file.c:97
0x00008b34      4c89e7         mov rdi, r12
0x00008b37      e85494ffff     call sym.imp.realloc
0x00008b3c      4885c0         test rax, rax
0x00008b3f      4c0f45e0       cmovne r12, rax
0x00008b43      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/read-file.c:103
0x00008b48      41c6042c00     mov byte [r12 + rbp], 0                 ; ../coreutils-8.31/lib/read-file.c:102
0x00008b4d      488928         mov qword [rax], rbp                    ; ../coreutils-8.31/lib/read-file.c:103
0x00008b50      e96bffffff     jmp 0x8ac0
0x00008b55      0f1f00         nop dword [rax]
0x00008b58      4c89ef         mov rdi, r13                            ; ../coreutils-8.31/lib/read-file.c:55
0x00008b5b      e85091ffff     call sym.imp.ftello
0x00008b60      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/read-file.c:57
0x00008b63      0f88a1feffff   js 0x8a0a
0x00008b69      488b5c2440     mov rbx, qword [rsp + 0x40]
0x00008b6e      4839c3         cmp rbx, rax
0x00008b71      0f8e93feffff   jle 0x8a0a
0x00008b77      4829c3         sub rbx, rax                            ; ../coreutils-8.31/lib/read-file.c:59
0x00008b7a      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/read-file.c:68
0x00008b7e      e98cfeffff     jmp 0x8a0f
0x00008b83      e82892ffff     call sym.imp.__stack_chk_fail
0x00008b88      0f1f84000000.  nop dword [rax + rax]
;-- internal_read_file:
0x00008b90      4155           push r13
0x00008b92      4154           push r12
0x00008b94      55             push rbp
0x00008b95      53             push rbx                                ; ../coreutils-8.31/lib/read-file.c:16
0x00008b96      4889f5         mov rbp, rsi
0x00008b99      4889d6         mov rsi, rdx
0x00008b9c      4883ec08       sub rsp, 8
0x00008ba0      e88b94ffff     call sym.imp.fopen
0x00008ba5      4885c0         test rax, rax
0x00008ba8      7456           je 0x8c00
0x00008baa      4889ee         mov rsi, rbp
0x00008bad      4889c7         mov rdi, rax
0x00008bb0      4889c3         mov rbx, rax
0x00008bb3      e8f8fdffff     call sym.fread_file
0x00008bb8      4889c5         mov rbp, rax
0x00008bbb      e8c090ffff     call sym.imp.__errno_location
0x00008bc0      4889df         mov rdi, rbx
0x00008bc3      4989c4         mov r12, rax
0x00008bc6      448b28         mov r13d, dword [rax]                   ; ../coreutils-8.31/lib/read-file.c:23
0x00008bc9      e8c2160000     call sym.rpl_fclose
0x00008bce      85c0           test eax, eax
0x00008bd0      750e           jne 0x8be0
0x00008bd2      4883c408       add rsp, 8
0x00008bd6      4889e8         mov rax, rbp
0x00008bd9      5b             pop rbx
0x00008bda      5d             pop rbp                                 ; ../coreutils-8.31/lib/read-file.c:12
0x00008bdb      415c           pop r12
0x00008bdd      415d           pop r13
0x00008bdf      c3             ret
0x00008be0      4885ed         test rbp, rbp
0x00008be3      740c           je 0x8bf1
0x00008be5      4889ef         mov rdi, rbp
0x00008be8      458b2c24       mov r13d, dword [r12]
0x00008bec      e86f90ffff     call sym.imp.free
0x00008bf1      45892c24       mov dword [r12], r13d
0x00008bf5      31ed           xor ebp, ebp
0x00008bf7      ebd9           jmp 0x8bd2
0x00008bf9      0f1f80000000.  nop dword [rax]
0x00008c00      31ed           xor ebp, ebp
0x00008c02      ebce           jmp 0x8bd2
0x00008c04      6690           nop
0x00008c06      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/read-file.c:54
;-- read_file:
0x00008c10      488d15343b01.  lea rdx, [0x0001c74b]                   ; "r"
0x00008c17      e974ffffff     jmp sym.internal_read_file
0x00008c1c      0f1f4000       nop dword [rax]
;-- read_binary_file:
0x00008c20      488d15c13501.  lea rdx, [0x0001c1e8]                   ; "rb"
0x00008c27      e964ffffff     jmp sym.internal_read_file
0x00008c2c      0f1f4000       nop dword [rax]
;-- strnlen1:
0x00008c30      55             push rbp                                ; ../coreutils-8.31/lib/strnlen1.c:29
0x00008c31      53             push rbx
0x00008c32      4889f2         mov rdx, rsi                            ; ../coreutils-8.31/lib/strnlen1.c:30
0x00008c35      4889f3         mov rbx, rsi                            ; ../coreutils-8.31/lib/strnlen1.c:29
0x00008c38      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/strnlen1.c:30
0x00008c3a      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/strnlen1.c:29
0x00008c3d      4883ec08       sub rsp, 8
0x00008c41      e83a92ffff     call sym.imp.memchr                     ; ../coreutils-8.31/lib/strnlen1.c:30
0x00008c46      4889c2         mov rdx, rax                            ; ../coreutils-8.31/lib/strnlen1.c:32
0x00008c49      4829ea         sub rdx, rbp
0x00008c4c      4883c201       add rdx, 1
0x00008c50      4885c0         test rax, rax
0x00008c53      4889d8         mov rax, rbx
0x00008c56      480f45c2       cmovne rax, rdx
0x00008c5a      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/strnlen1.c:35
0x00008c5e      5b             pop rbx
0x00008c5f      5d             pop rbp
0x00008c60      c3             ret
0x00008c61      662e0f1f8400.  nop word cs:[rax + rax]
0x00008c6b      0f1f440000     nop dword [rax + rax]
;-- trim2:
0x00008c70      4157           push r15
0x00008c72      4156           push r14
0x00008c74      4155           push r13
0x00008c76      4154           push r12
0x00008c78      4189f4         mov r12d, esi
0x00008c7b      55             push rbp
0x00008c7c      53             push rbx
0x00008c7d      4883ec78       sub rsp, 0x78
0x00008c81      64488b042528.  mov rax, qword fs:[0x28]
0x00008c8a      4889442468     mov qword [rsp + 0x68], rax
0x00008c8f      31c0           xor eax, eax
0x00008c91      e80a94ffff     call sym.imp.strdup
0x00008c96      4885c0         test rax, rax
0x00008c99      0f84b8050000   je 0x9257
0x00008c9f      4889c3         mov rbx, rax
0x00008ca2      e8e990ffff     call sym.imp.__ctype_get_mb_cur_max
0x00008ca7      4883f801       cmp rax, 1
0x00008cab      0f86ff020000   jbe 0x8fb0
0x00008cb1      4585e4         test r12d, r12d
0x00008cb4      0f854e010000   jne 0x8e08
0x00008cba      48895c2438     mov qword [rsp + 0x38], rbx
0x00008cbf      4889da         mov rdx, rbx
0x00008cc2      8b0a           mov ecx, dword [rdx]
0x00008cc4      4883c204       add rdx, 4
0x00008cc8      8d81fffefefe   lea eax, [rcx - 0x1010101]
0x00008cce      f7d1           not ecx
0x00008cd0      21c8           and eax, ecx
0x00008cd2      2580808080     and eax, 0x80808080
0x00008cd7      74e9           je 0x8cc2
0x00008cd9      89c1           mov ecx, eax
0x00008cdb      c644242800     mov byte [rsp + 0x28], 0
0x00008ce0      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00008ce9      c1e910         shr ecx, 0x10
0x00008cec      a980800000     test eax, 0x8080
0x00008cf1      c644243400     mov byte [rsp + 0x34], 0
0x00008cf6      0f44c1         cmove eax, ecx
0x00008cf9      488d4a02       lea rcx, [rdx + 2]
0x00008cfd      89c6           mov esi, eax
0x00008cff      480f44d1       cmove rdx, rcx
0x00008d03      4000c6         add sil, al
0x00008d06      4889de         mov rsi, rbx
0x00008d09      4883da03       sbb rdx, 3
0x00008d0d      4531ff         xor r15d, r15d
0x00008d10      4839da         cmp rdx, rbx
0x00008d13      4989d6         mov r14, rdx
0x00008d16      4889542420     mov qword [rsp + 0x20], rdx
0x00008d1b      0f865f020000   jbe 0x8f80
0x00008d21      488d6c2420     lea rbp, [rsp + 0x20]
0x00008d26      488d450c       lea rax, [rbp + 0xc]
0x00008d2a      4889442418     mov qword [rsp + 0x18], rax
0x00008d2f      eb3d           jmp 0x8d6e
0x00008d31      0f1f80000000.  nop dword [rax]
0x00008d38      807c244800     cmp byte [rsp + 0x48], 0
0x00008d3d      41bf01000000   mov r15d, 1
0x00008d43      7412           je 0x8d57
0x00008d45      8b7c244c       mov edi, dword [rsp + 0x4c]
0x00008d49      4531ff         xor r15d, r15d
0x00008d4c      e87f92ffff     call sym.imp.iswspace
0x00008d51      85c0           test eax, eax
0x00008d53      410f94c7       sete r15b
0x00008d57      4b8d342c       lea rsi, [r12 + r13]
0x00008d5b      c644243400     mov byte [rsp + 0x34], 0
0x00008d60      4c39f6         cmp rsi, r14
0x00008d63      4889742438     mov qword [rsp + 0x38], rsi
0x00008d68      0f8302020000   jae 0x8f70
0x00008d6e      807c242800     cmp byte [rsp + 0x28], 0
0x00008d73      0f8528030000   jne 0x90a1
0x00008d79      0fb60e         movzx ecx, byte [rsi]
0x00008d7c      488d3ddd4101.  lea rdi, obj.is_basic_table             ; 0x1cf60
0x00008d83      89c8           mov eax, ecx
0x00008d85      c0e805         shr al, 5
0x00008d88      83e007         and eax, 7
0x00008d8b      8b0487         mov eax, dword [rdi + rax*4]
0x00008d8e      0fa3c8         bt eax, ecx
0x00008d91      0f83e9020000   jae 0x9080
0x00008d97      48c744244001.  mov qword [rsp + 0x40], 1
0x00008da0      0fbe06         movsx eax, byte [rsi]
0x00008da3      41bd01000000   mov r13d, 1
0x00008da9      4c8b642438     mov r12, qword [rsp + 0x38]
0x00008dae      4c8b742420     mov r14, qword [rsp + 0x20]
0x00008db3      c644244801     mov byte [rsp + 0x48], 1
0x00008db8      8944244c       mov dword [rsp + 0x4c], eax
0x00008dbc      4585ff         test r15d, r15d
0x00008dbf      c644243401     mov byte [rsp + 0x34], 1
0x00008dc4      0f846effffff   je 0x8d38
0x00008dca      4183ff01       cmp r15d, 1
0x00008dce      0f844c030000   je 0x9120
0x00008dd4      4183ff02       cmp r15d, 2
0x00008dd8      0f8512040000   jne 0x91f0
0x00008dde      807c244800     cmp byte [rsp + 0x48], 0
0x00008de3      0f8407040000   je 0x91f0
0x00008de9      8b7c244c       mov edi, dword [rsp + 0x4c]
0x00008ded      e8de91ffff     call sym.imp.iswspace
0x00008df2      85c0           test eax, eax
0x00008df4      b801000000     mov eax, 1
0x00008df9      440f44f8       cmove r15d, eax
0x00008dfd      e955ffffff     jmp 0x8d57
0x00008e02      660f1f440000   nop word [rax + rax]
0x00008e08      48895c2438     mov qword [rsp + 0x38], rbx
0x00008e0d      4889da         mov rdx, rbx
0x00008e10      8b0a           mov ecx, dword [rdx]
0x00008e12      4883c204       add rdx, 4
0x00008e16      8d81fffefefe   lea eax, [rcx - 0x1010101]
0x00008e1c      f7d1           not ecx
0x00008e1e      21c8           and eax, ecx
0x00008e20      2580808080     and eax, 0x80808080
0x00008e25      74e9           je 0x8e10
0x00008e27      89c1           mov ecx, eax
0x00008e29      c644242800     mov byte [rsp + 0x28], 0
0x00008e2e      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00008e37      c1e910         shr ecx, 0x10
0x00008e3a      a980800000     test eax, 0x8080
0x00008e3f      c644243400     mov byte [rsp + 0x34], 0
0x00008e44      0f44c1         cmove eax, ecx
0x00008e47      488d4a02       lea rcx, [rdx + 2]
0x00008e4b      4989df         mov r15, rbx
0x00008e4e      89c6           mov esi, eax
0x00008e50      480f44d1       cmove rdx, rcx
0x00008e54      4000c6         add sil, al
0x00008e57      4883da03       sbb rdx, 3
0x00008e5b      4839da         cmp rdx, rbx
0x00008e5e      4889542420     mov qword [rsp + 0x20], rdx
0x00008e63      0f8657030000   jbe 0x91c0
0x00008e69      488d6c2420     lea rbp, [rsp + 0x20]
0x00008e6e      4c8d35eb4001.  lea r14, obj.is_basic_table             ; 0x1cf60
0x00008e75      4c8d6d0c       lea r13, [rbp + 0xc]
0x00008e79      eb6c           jmp 0x8ee7
0x00008e7b      0f1f440000     nop dword [rax + rax]
0x00008e80      410fb60f       movzx ecx, byte [r15]
0x00008e84      89c8           mov eax, ecx
0x00008e86      c0e805         shr al, 5
0x00008e89      83e007         and eax, 7
0x00008e8c      418b0486       mov eax, dword [r14 + rax*4]
0x00008e90      0fa3c8         bt eax, ecx
0x00008e93      0f83bf020000   jae 0x9158
0x00008e99      48c744244001.  mov qword [rsp + 0x40], 1
0x00008ea2      410fbe07       movsx eax, byte [r15]
0x00008ea6      4c8b7c2438     mov r15, qword [rsp + 0x38]
0x00008eab      c644244801     mov byte [rsp + 0x48], 1
0x00008eb0      c644243401     mov byte [rsp + 0x34], 1
0x00008eb5      8944244c       mov dword [rsp + 0x4c], eax
0x00008eb9      8b7c244c       mov edi, dword [rsp + 0x4c]
0x00008ebd      e80e91ffff     call sym.imp.iswspace
0x00008ec2      85c0           test eax, eax
0x00008ec4      0f84f6020000   je 0x91c0
0x00008eca      4c037c2440     add r15, qword [rsp + 0x40]
0x00008ecf      488b542420     mov rdx, qword [rsp + 0x20]
0x00008ed4      c644243400     mov byte [rsp + 0x34], 0
0x00008ed9      4939d7         cmp r15, rdx
0x00008edc      4c897c2438     mov qword [rsp + 0x38], r15
0x00008ee1      0f83d9020000   jae 0x91c0
0x00008ee7      807c242800     cmp byte [rsp + 0x28], 0
0x00008eec      7492           je 0x8e80
0x00008eee      488d4d0c       lea rcx, [rbp + 0xc]
0x00008ef2      488d7d2c       lea rdi, [rbp + 0x2c]
0x00008ef6      4c29fa         sub rdx, r15
0x00008ef9      4c89fe         mov rsi, r15
0x00008efc      e8af140000     call sym.rpl_mbrtowc
0x00008f01      4883f8ff       cmp rax, 0xffffffffffffffff
0x00008f05      4889442440     mov qword [rsp + 0x40], rax
0x00008f0a      0f8498020000   je 0x91a8
0x00008f10      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00008f14      4c8b7c2438     mov r15, qword [rsp + 0x38]
0x00008f19      0f8401030000   je 0x9220
0x00008f1f      4885c0         test rax, rax
0x00008f22      751f           jne 0x8f43
0x00008f24      48c744244001.  mov qword [rsp + 0x40], 1
0x00008f2d      41803f00       cmp byte [r15], 0
0x00008f31      0f8549030000   jne 0x9280
0x00008f37      8b54244c       mov edx, dword [rsp + 0x4c]
0x00008f3b      85d2           test edx, edx
0x00008f3d      0f8538030000   jne 0x927b
0x00008f43      488d7d0c       lea rdi, [rbp + 0xc]
0x00008f47      c644244801     mov byte [rsp + 0x48], 1
0x00008f4c      e85f91ffff     call sym.imp.mbsinit
0x00008f51      85c0           test eax, eax
0x00008f53      0f84e7020000   je 0x9240
0x00008f59      c644242800     mov byte [rsp + 0x28], 0
0x00008f5e      c644243401     mov byte [rsp + 0x34], 1
0x00008f63      e951ffffff     jmp 0x8eb9
0x00008f68      0f1f84000000.  nop dword [rax + rax]
0x00008f70      4183ff02       cmp r15d, 2
0x00008f74      750a           jne 0x8f80
0x00008f76      488b442408     mov rax, qword [rsp + 8]
0x00008f7b      c60000         mov byte [rax], 0
0x00008f7e      6690           nop
0x00008f80      4889d8         mov rax, rbx
0x00008f83      488b5c2468     mov rbx, qword [rsp + 0x68]
0x00008f88      6448331c2528.  xor rbx, qword fs:[0x28]
0x00008f91      0f85bb020000   jne 0x9252
0x00008f97      4883c478       add rsp, 0x78
0x00008f9b      5b             pop rbx
0x00008f9c      5d             pop rbp
0x00008f9d      415c           pop r12
0x00008f9f      415d           pop r13
0x00008fa1      415e           pop r14
0x00008fa3      415f           pop r15
0x00008fa5      c3             ret
0x00008fa6      662e0f1f8400.  nop word cs:[rax + rax]
0x00008fb0      4585e4         test r12d, r12d
0x00008fb3      7451           je 0x9006
0x00008fb5      0fb62b         movzx ebp, byte [rbx]
0x00008fb8      4084ed         test bpl, bpl
0x00008fbb      0f8489020000   je 0x924a
0x00008fc1      e81a91ffff     call sym.imp.__ctype_b_loc
0x00008fc6      4989dd         mov r13, rbx
0x00008fc9      488b00         mov rax, qword [rax]
0x00008fcc      eb10           jmp 0x8fde
0x00008fce      6690           nop
0x00008fd0      4983c501       add r13, 1
0x00008fd4      410fb66d00     movzx ebp, byte [r13]
0x00008fd9      4084ed         test bpl, bpl
0x00008fdc      7407           je 0x8fe5
0x00008fde      f644680120     test byte [rax + rbp*2 + 1], 0x20
0x00008fe3      75eb           jne 0x8fd0
0x00008fe5      4c89ef         mov rdi, r13
0x00008fe8      e8b38dffff     call sym.imp.strlen
0x00008fed      488d5001       lea rdx, [rax + 1]
0x00008ff1      4c89ee         mov rsi, r13
0x00008ff4      4889df         mov rdi, rbx
0x00008ff7      e8f48fffff     call sym.imp.memmove
0x00008ffc      4183fc01       cmp r12d, 1
0x00009000      0f847affffff   je 0x8f80
0x00009006      4889da         mov rdx, rbx
0x00009009      8b0a           mov ecx, dword [rdx]
0x0000900b      4883c204       add rdx, 4
0x0000900f      8d81fffefefe   lea eax, [rcx - 0x1010101]
0x00009015      f7d1           not ecx
0x00009017      21c8           and eax, ecx
0x00009019      2580808080     and eax, 0x80808080
0x0000901e      74e9           je 0x9009
0x00009020      89c1           mov ecx, eax
0x00009022      c1e910         shr ecx, 0x10
0x00009025      a980800000     test eax, 0x8080
0x0000902a      0f44c1         cmove eax, ecx
0x0000902d      488d4a02       lea rcx, [rdx + 2]
0x00009031      89c6           mov esi, eax
0x00009033      480f44d1       cmove rdx, rcx
0x00009037      4000c6         add sil, al
0x0000903a      4883da03       sbb rdx, 3
0x0000903e      488d6aff       lea rbp, [rdx - 1]
0x00009042      4839eb         cmp rbx, rbp
0x00009045      0f8735ffffff   ja 0x8f80
0x0000904b      e89090ffff     call sym.imp.__ctype_b_loc
0x00009050      488b10         mov rdx, qword [rax]
0x00009053      eb14           jmp 0x9069
0x00009055      0f1f00         nop dword [rax]
0x00009058      c6450000       mov byte [rbp], 0
0x0000905c      4883ed01       sub rbp, 1
0x00009060      4839eb         cmp rbx, rbp
0x00009063      0f8717ffffff   ja 0x8f80
0x00009069      0fb64500       movzx eax, byte [rbp]
0x0000906d      f644420120     test byte [rdx + rax*2 + 1], 0x20
0x00009072      75e4           jne 0x9058
0x00009074      e907ffffff     jmp 0x8f80
0x00009079      0f1f80000000.  nop dword [rax]
0x00009080      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00009085      4889742410     mov qword [rsp + 0x10], rsi
0x0000908a      e82190ffff     call sym.imp.mbsinit
0x0000908f      85c0           test eax, eax
0x00009091      0f84c5010000   je 0x925c
0x00009097      488b742410     mov rsi, qword [rsp + 0x10]
0x0000909c      c644242801     mov byte [rsp + 0x28], 1
0x000090a1      488d4d0c       lea rcx, [rbp + 0xc]
0x000090a5      4c89f2         mov rdx, r14
0x000090a8      488d7d2c       lea rdi, [rbp + 0x2c]
0x000090ac      4829f2         sub rdx, rsi
0x000090af      e8fc120000     call sym.rpl_mbrtowc
0x000090b4      4883f8ff       cmp rax, 0xffffffffffffffff
0x000090b8      4889442440     mov qword [rsp + 0x40], rax
0x000090bd      0f84bd000000   je 0x9180
0x000090c3      4883f8fe       cmp rax, 0xfffffffffffffffe
0x000090c7      4c8b642438     mov r12, qword [rsp + 0x38]
0x000090cc      0f842e010000   je 0x9200
0x000090d2      4885c0         test rax, rax
0x000090d5      7520           jne 0x90f7
0x000090d7      48c744244001.  mov qword [rsp + 0x40], 1
0x000090e0      41803c2400     cmp byte [r12], 0
0x000090e5      0f8595010000   jne 0x9280
0x000090eb      8b44244c       mov eax, dword [rsp + 0x4c]
0x000090ef      85c0           test eax, eax
0x000090f1      0f8584010000   jne 0x927b
0x000090f7      488d7d0c       lea rdi, [rbp + 0xc]
0x000090fb      c644244801     mov byte [rsp + 0x48], 1
0x00009100      e8ab8fffff     call sym.imp.mbsinit
0x00009105      85c0           test eax, eax
0x00009107      4c8b742420     mov r14, qword [rsp + 0x20]
0x0000910c      7405           je 0x9113
0x0000910e      c644242800     mov byte [rsp + 0x28], 0
0x00009113      4c8b6c2440     mov r13, qword [rsp + 0x40]
0x00009118      e99ffcffff     jmp 0x8dbc
0x0000911d      0f1f00         nop dword [rax]
0x00009120      807c244800     cmp byte [rsp + 0x48], 0
0x00009125      0f842cfcffff   je 0x8d57
0x0000912b      8b7c244c       mov edi, dword [rsp + 0x4c]
0x0000912f      e89c8effff     call sym.imp.iswspace
0x00009134      488b742408     mov rsi, qword [rsp + 8]
0x00009139      85c0           test eax, eax
0x0000913b      b802000000     mov eax, 2
0x00009140      440f45f8       cmovne r15d, eax
0x00009144      490f45f4       cmovne rsi, r12
0x00009148      4889742408     mov qword [rsp + 8], rsi
0x0000914d      e905fcffff     jmp 0x8d57
0x00009152      660f1f440000   nop word [rax + rax]
0x00009158      4c89ef         mov rdi, r13
0x0000915b      4889542410     mov qword [rsp + 0x10], rdx
0x00009160      e84b8fffff     call sym.imp.mbsinit
0x00009165      85c0           test eax, eax
0x00009167      488b542410     mov rdx, qword [rsp + 0x10]
0x0000916c      0f84ea000000   je 0x925c
0x00009172      c644242801     mov byte [rsp + 0x28], 1
0x00009177      e972fdffff     jmp 0x8eee
0x0000917c      0f1f4000       nop dword [rax]
0x00009180      48c744244001.  mov qword [rsp + 0x40], 1
0x00009189      c644244800     mov byte [rsp + 0x48], 0
0x0000918e      41bd01000000   mov r13d, 1
0x00009194      4c8b642438     mov r12, qword [rsp + 0x38]
0x00009199      4c8b742420     mov r14, qword [rsp + 0x20]
0x0000919e      e919fcffff     jmp 0x8dbc
0x000091a3      0f1f440000     nop dword [rax + rax]
0x000091a8      4c8b7c2438     mov r15, qword [rsp + 0x38]
0x000091ad      48c744244001.  mov qword [rsp + 0x40], 1
0x000091b6      c644244800     mov byte [rsp + 0x48], 0
0x000091bb      c644243401     mov byte [rsp + 0x34], 1
0x000091c0      4c89ff         mov rdi, r15
0x000091c3      e8d88bffff     call sym.imp.strlen
0x000091c8      488d5001       lea rdx, [rax + 1]
0x000091cc      4c89fe         mov rsi, r15
0x000091cf      4889df         mov rdi, rbx
0x000091d2      e8198effff     call sym.imp.memmove
0x000091d7      4183fc01       cmp r12d, 1
0x000091db      0f849ffdffff   je 0x8f80
0x000091e1      e9d4faffff     jmp 0x8cba
0x000091e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000091f0      41bf01000000   mov r15d, 1
0x000091f6      e95cfbffff     jmp 0x8d57
0x000091fb      0f1f440000     nop dword [rax + rax]
0x00009200      4c8b742420     mov r14, qword [rsp + 0x20]
0x00009205      c644244800     mov byte [rsp + 0x48], 0
0x0000920a      4d89f5         mov r13, r14
0x0000920d      4d29e5         sub r13, r12
0x00009210      4c896c2440     mov qword [rsp + 0x40], r13
0x00009215      e9a2fbffff     jmp 0x8dbc
0x0000921a      660f1f440000   nop word [rax + rax]
0x00009220      488b442420     mov rax, qword [rsp + 0x20]
0x00009225      c644244800     mov byte [rsp + 0x48], 0
0x0000922a      c644243401     mov byte [rsp + 0x34], 1
0x0000922f      4c29f8         sub rax, r15
0x00009232      4889442440     mov qword [rsp + 0x40], rax
0x00009237      eb87           jmp 0x91c0
0x00009239      0f1f80000000.  nop dword [rax]
0x00009240      c644243401     mov byte [rsp + 0x34], 1
0x00009245      e96ffcffff     jmp 0x8eb9
0x0000924a      4989dd         mov r13, rbx
0x0000924d      e993fdffff     jmp 0x8fe5
0x00009252      e8598bffff     call sym.imp.__stack_chk_fail
0x00009257      e8b4080000     call sym.xalloc_die
0x0000925c      488d0dad2f01.  lea rcx, obj.__PRETTY_FUNCTION__.5134   ; 0x1c210 ; "mbiter_multi_next"
0x00009263      488d35862f01.  lea rsi, str..._coreutils_8.31_lib_mbiter.h ; 0x1c1f0 ; "../coreutils-8.31/lib/mbiter.h"
0x0000926a      488d3d592a01.  lea rdi, str.mbsinit___iter__state      ; 0x1bcca ; "mbsinit (&iter->state)"
0x00009271      ba8e000000     mov edx, 0x8e
0x00009276      e8b58bffff     call sym.imp.__assert_fail
0x0000927b      e8c38effff     call sym.mbiter_multi_next.part.0
0x00009280      488d0d892f01.  lea rcx, obj.__PRETTY_FUNCTION__.5134   ; 0x1c210 ; "mbiter_multi_next"
0x00009287      488d35622f01.  lea rsi, str..._coreutils_8.31_lib_mbiter.h ; 0x1c1f0 ; "../coreutils-8.31/lib/mbiter.h"
0x0000928e      488d3d4c2a01.  lea rdi, str.iter__cur.ptr_______0      ; 0x1bce1 ; "*iter->cur.ptr == '\0'"
0x00009295      baa9000000     mov edx, 0xa9
0x0000929a      e8918bffff     call sym.imp.__assert_fail
0x0000929f      90             nop
;-- version_etc_arn:
0x000092a0      4157           push r15
0x000092a2      4156           push r14
0x000092a4      4155           push r13
0x000092a6      4154           push r12
0x000092a8      4d89cc         mov r12, r9
0x000092ab      55             push rbp
0x000092ac      53             push rbx
0x000092ad      4889fd         mov rbp, rdi
0x000092b0      4c89c3         mov rbx, r8
0x000092b3      4883ec28       sub rsp, 0x28
0x000092b7      4885f6         test rsi, rsi
0x000092ba      0f8418010000   je 0x93d8
0x000092c0      4989d0         mov r8, rdx
0x000092c3      488d15582f01.  lea rdx, str.s___s___s                  ; 0x1c222 ; "%s (%s) %s\n"
0x000092ca      4989c9         mov r9, rcx
0x000092cd      31c0           xor eax, eax
0x000092cf      4889f1         mov rcx, rsi
0x000092d2      be01000000     mov esi, 1
0x000092d7      e8b48dffff     call sym.imp.__fprintf_chk
0x000092dc      488d35522f01.  lea rsi, [0x0001c235]                   ; "(C)"
0x000092e3      31ff           xor edi, edi
0x000092e5      ba05000000     mov edx, 5
0x000092ea      e8918affff     call sym.imp.dcgettext
0x000092ef      488d156a3201.  lea rdx, obj.version_etc_copyright      ; 0x1c560 ; "Copyright %s %d Free Software Foundation, Inc."
0x000092f6      4889c1         mov rcx, rax
0x000092f9      41b8e3070000   mov r8d, 0x7e3
0x000092ff      be01000000     mov esi, 1
0x00009304      4889ef         mov rdi, rbp
0x00009307      31c0           xor eax, eax
0x00009309      e8828dffff     call sym.imp.__fprintf_chk
0x0000930e      488d35ab2f01.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x1c2c0 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00009315      31ff           xor edi, edi
0x00009317      ba05000000     mov edx, 5
0x0000931c      e85f8affff     call sym.imp.dcgettext
0x00009321      4889ee         mov rsi, rbp
0x00009324      4889c7         mov rdi, rax
0x00009327      e8848bffff     call sym.imp.fputs_unlocked
0x0000932c      4983fc09       cmp r12, 9
0x00009330      0f873a030000   ja 0x9670
0x00009336      488d15df3101.  lea rdx, [0x0001c51c]
0x0000933d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00009341      4801d0         add rax, rdx
0x00009344      ffe0           jmp rax
0x00009346      662e0f1f8400.  nop word cs:[rax + rax]
0x00009350      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00009354      488b4310       mov rax, qword [rbx + 0x10]
0x00009358      488d35d13001.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x1c430 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x0000935f      4c8b4308       mov r8, qword [rbx + 8]
0x00009363      ba05000000     mov edx, 5
0x00009368      31ff           xor edi, edi
0x0000936a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0000936e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00009372      4c894c2410     mov qword [rsp + 0x10], r9
0x00009377      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000937b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000937f      48890424       mov qword [rsp], rax
0x00009383      4c89442408     mov qword [rsp + 8], r8
0x00009388      488b1b         mov rbx, qword [rbx]
0x0000938b      e8f089ffff     call sym.imp.dcgettext
0x00009390      4883ec08       sub rsp, 8
0x00009394      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00009399      4889c2         mov rdx, rax
0x0000939c      4889d9         mov rcx, rbx
0x0000939f      be01000000     mov esi, 1
0x000093a4      4889ef         mov rdi, rbp
0x000093a7      31c0           xor eax, eax
0x000093a9      4151           push r9
0x000093ab      4155           push r13
0x000093ad      4154           push r12
0x000093af      4157           push r15
0x000093b1      4156           push r14
0x000093b3      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000093b8      4c8b442438     mov r8, qword [rsp + 0x38]
0x000093bd      e8ce8cffff     call sym.imp.__fprintf_chk
0x000093c2      4883c430       add rsp, 0x30
0x000093c6      4883c428       add rsp, 0x28
0x000093ca      5b             pop rbx
0x000093cb      5d             pop rbp
0x000093cc      415c           pop r12
0x000093ce      415d           pop r13
0x000093d0      415e           pop r14
0x000093d2      415f           pop r15
0x000093d4      c3             ret
0x000093d5      0f1f00         nop dword [rax]
0x000093d8      4989c8         mov r8, rcx
0x000093db      4889d1         mov rcx, rdx
0x000093de      488d15492e01.  lea rdx, str.s__s                       ; 0x1c22e ; "%s %s\n"
0x000093e5      be01000000     mov esi, 1
0x000093ea      31c0           xor eax, eax
0x000093ec      e89f8cffff     call sym.imp.__fprintf_chk
0x000093f1      e9e6feffff     jmp 0x92dc
0x000093f6      662e0f1f8400.  nop word cs:[rax + rax]
0x00009400      4c8b5340       mov r10, qword [rbx + 0x40]
0x00009404      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00009408      488d35513001.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x1c460 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x0000940f      488b4310       mov rax, qword [rbx + 0x10]
0x00009413      4c8b4308       mov r8, qword [rbx + 8]
0x00009417      ba05000000     mov edx, 5
0x0000941c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00009420      4c8b6328       mov r12, qword [rbx + 0x28]
0x00009424      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00009428      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000942c      488b1b         mov rbx, qword [rbx]
0x0000942f      4c89542418     mov qword [rsp + 0x18], r10
0x00009434      4c894c2410     mov qword [rsp + 0x10], r9
0x00009439      48890424       mov qword [rsp], rax
0x0000943d      4c89442408     mov qword [rsp + 8], r8
0x00009442      31ff           xor edi, edi
0x00009444      e83789ffff     call sym.imp.dcgettext
0x00009449      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000944e      4152           push r10
0x00009450      e93fffffff     jmp 0x9394
0x00009455      0f1f00         nop dword [rax]
0x00009458      488b1b         mov rbx, qword [rbx]
0x0000945b      488d35d72d01.  lea rsi, str.Written_by__s.             ; 0x1c239 ; "Written by %s.\n"
0x00009462      ba05000000     mov edx, 5
0x00009467      31ff           xor edi, edi
0x00009469      e81289ffff     call sym.imp.dcgettext
0x0000946e      4883c428       add rsp, 0x28
0x00009472      4889d9         mov rcx, rbx
0x00009475      4889ef         mov rdi, rbp
0x00009478      5b             pop rbx
0x00009479      5d             pop rbp
0x0000947a      415c           pop r12
0x0000947c      415d           pop r13
0x0000947e      415e           pop r14
0x00009480      415f           pop r15
0x00009482      4889c2         mov rdx, rax
0x00009485      be01000000     mov esi, 1
0x0000948a      31c0           xor eax, eax
0x0000948c      e9ff8bffff     jmp sym.imp.__fprintf_chk
0x00009491      0f1f80000000.  nop dword [rax]
0x00009498      4c8b6308       mov r12, qword [rbx + 8]
0x0000949c      488d35a62d01.  lea rsi, str.Written_by__s_and__s.      ; 0x1c249 ; "Written by %s and %s.\n"
0x000094a3      488b1b         mov rbx, qword [rbx]
0x000094a6      ba05000000     mov edx, 5
0x000094ab      31ff           xor edi, edi
0x000094ad      e8ce88ffff     call sym.imp.dcgettext
0x000094b2      4883c428       add rsp, 0x28
0x000094b6      4d89e0         mov r8, r12
0x000094b9      4889d9         mov rcx, rbx
0x000094bc      4889ef         mov rdi, rbp
0x000094bf      4889c2         mov rdx, rax
0x000094c2      be01000000     mov esi, 1
0x000094c7      5b             pop rbx
0x000094c8      5d             pop rbp
0x000094c9      415c           pop r12
0x000094cb      415d           pop r13
0x000094cd      415e           pop r14
0x000094cf      415f           pop r15
0x000094d1      31c0           xor eax, eax
0x000094d3      e9b88bffff     jmp sym.imp.__fprintf_chk
0x000094d8      0f1f84000000.  nop dword [rax + rax]
0x000094e0      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000094e4      4c8b6308       mov r12, qword [rbx + 8]
0x000094e8      488d35712d01.  lea rsi, str.Written_by__s___s__and__s. ; 0x1c260 ; "Written by %s, %s, and %s.\n"
0x000094ef      488b1b         mov rbx, qword [rbx]
0x000094f2      ba05000000     mov edx, 5
0x000094f7      31ff           xor edi, edi
0x000094f9      e88288ffff     call sym.imp.dcgettext
0x000094fe      4883c428       add rsp, 0x28
0x00009502      4d89e9         mov r9, r13
0x00009505      4d89e0         mov r8, r12
0x00009508      4889d9         mov rcx, rbx
0x0000950b      4889ef         mov rdi, rbp
0x0000950e      4889c2         mov rdx, rax
0x00009511      5b             pop rbx
0x00009512      5d             pop rbp
0x00009513      415c           pop r12
0x00009515      415d           pop r13
0x00009517      415e           pop r14
0x00009519      415f           pop r15
0x0000951b      be01000000     mov esi, 1
0x00009520      31c0           xor eax, eax
0x00009522      e9698bffff     jmp sym.imp.__fprintf_chk
0x00009527      660f1f840000.  nop word [rax + rax]
0x00009530      488d35592e01.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x1c390 ; "Written by %s, %s, %s,\nand %s.\n"
0x00009537      ba05000000     mov edx, 5
0x0000953c      31ff           xor edi, edi
0x0000953e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00009542      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00009546      4c8b6308       mov r12, qword [rbx + 8]
0x0000954a      488b1b         mov rbx, qword [rbx]
0x0000954d      e82e88ffff     call sym.imp.dcgettext
0x00009552      4883ec08       sub rsp, 8
0x00009556      4156           push r14
0x00009558      4889c2         mov rdx, rax
0x0000955b      4d89e9         mov r9, r13
0x0000955e      4d89e0         mov r8, r12
0x00009561      4889d9         mov rcx, rbx
0x00009564      4889ef         mov rdi, rbp
0x00009567      be01000000     mov esi, 1
0x0000956c      31c0           xor eax, eax
0x0000956e      e81d8bffff     call sym.imp.__fprintf_chk
0x00009573      58             pop rax
0x00009574      5a             pop rdx
0x00009575      4883c428       add rsp, 0x28
0x00009579      5b             pop rbx
0x0000957a      5d             pop rbp
0x0000957b      415c           pop r12
0x0000957d      415d           pop r13
0x0000957f      415e           pop r14
0x00009581      415f           pop r15
0x00009583      c3             ret
0x00009584      0f1f4000       nop dword [rax]
0x00009588      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000958c      488d351d2e01.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x1c3b0 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00009593      ba05000000     mov edx, 5
0x00009598      31ff           xor edi, edi
0x0000959a      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000959e      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000095a2      4c8b6308       mov r12, qword [rbx + 8]
0x000095a6      488b1b         mov rbx, qword [rbx]
0x000095a9      e8d287ffff     call sym.imp.dcgettext
0x000095ae      4157           push r15
0x000095b0      eba4           jmp 0x9556
0x000095b2      660f1f440000   nop word [rax + rax]
0x000095b8      4c8b4308       mov r8, qword [rbx + 8]
0x000095bc      4c8b6328       mov r12, qword [rbx + 0x28]
0x000095c0      488d35112e01.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x1c3d8 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x000095c7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000095cb      4c8b7318       mov r14, qword [rbx + 0x18]
0x000095cf      ba05000000     mov edx, 5
0x000095d4      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000095d8      31ff           xor edi, edi
0x000095da      488b1b         mov rbx, qword [rbx]
0x000095dd      4c890424       mov qword [rsp], r8
0x000095e1      e89a87ffff     call sym.imp.dcgettext
0x000095e6      4883ec08       sub rsp, 8
0x000095ea      4d89e9         mov r9, r13
0x000095ed      4154           push r12
0x000095ef      4157           push r15
0x000095f1      4156           push r14
0x000095f3      4c8b442420     mov r8, qword [rsp + 0x20]
0x000095f8      4889d9         mov rcx, rbx
0x000095fb      4889c2         mov rdx, rax
0x000095fe      4889ef         mov rdi, rbp
0x00009601      be01000000     mov esi, 1
0x00009606      31c0           xor eax, eax
0x00009608      e8838affff     call sym.imp.__fprintf_chk
0x0000960d      4883c420       add rsp, 0x20
0x00009611      4883c428       add rsp, 0x28
0x00009615      5b             pop rbx
0x00009616      5d             pop rbp
0x00009617      415c           pop r12
0x00009619      415d           pop r13
0x0000961b      415e           pop r14
0x0000961d      415f           pop r15
0x0000961f      c3             ret
0x00009620      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00009624      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00009628      488d35d12d01.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x1c400 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x0000962f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00009633      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00009637      ba05000000     mov edx, 5
0x0000963c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00009640      4c8b4308       mov r8, qword [rbx + 8]
0x00009644      31ff           xor edi, edi
0x00009646      4c894c2408     mov qword [rsp + 8], r9
0x0000964b      488b1b         mov rbx, qword [rbx]
0x0000964e      4c890424       mov qword [rsp], r8
0x00009652      e82987ffff     call sym.imp.dcgettext
0x00009657      4155           push r13
0x00009659      4154           push r12
0x0000965b      4157           push r15
0x0000965d      4156           push r14
0x0000965f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00009664      eb8d           jmp 0x95f3
0x00009666      662e0f1f8400.  nop word cs:[rax + rax]
0x00009670      4c8b5340       mov r10, qword [rbx + 0x40]
0x00009674      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00009678      ba05000000     mov edx, 5
0x0000967d      488b4310       mov rax, qword [rbx + 0x10]
0x00009681      4c8b4308       mov r8, qword [rbx + 8]
0x00009685      488d350c2e01.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x1c498 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x0000968c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00009690      4c8b6328       mov r12, qword [rbx + 0x28]
0x00009694      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00009698      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000969c      4c89542418     mov qword [rsp + 0x18], r10
0x000096a1      4c894c2410     mov qword [rsp + 0x10], r9
0x000096a6      48890424       mov qword [rsp], rax
0x000096aa      4c89442408     mov qword [rsp + 8], r8
0x000096af      488b1b         mov rbx, qword [rbx]
0x000096b2      e98bfdffff     jmp 0x9442
0x000096b7      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x000096c0      4531c9         xor r9d, r9d
0x000096c3      49833800       cmp qword [r8], 0
0x000096c7      7412           je 0x96db
0x000096c9      0f1f80000000.  nop dword [rax]
0x000096d0      4983c101       add r9, 1
0x000096d4      4b833cc800     cmp qword [r8 + r9*8], 0
0x000096d9      75f5           jne 0x96d0
0x000096db      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x000096e0      4883ec68       sub rsp, 0x68
0x000096e4      4d89c2         mov r10, r8
0x000096e7      4531c9         xor r9d, r9d
0x000096ea      64488b042528.  mov rax, qword fs:[0x28]
0x000096f3      4889442458     mov qword [rsp + 0x58], rax
0x000096f8      31c0           xor eax, eax
0x000096fa      4989e0         mov r8, rsp
0x000096fd      0f1f00         nop dword [rax]
0x00009700      418b02         mov eax, dword [r10]
0x00009703      83f82f         cmp eax, 0x2f
0x00009706      7742           ja 0x974a
0x00009708      4189c3         mov r11d, eax
0x0000970b      4d035a10       add r11, qword [r10 + 0x10]
0x0000970f      83c008         add eax, 8
0x00009712      418902         mov dword [r10], eax
0x00009715      498b03         mov rax, qword [r11]
0x00009718      4885c0         test rax, rax
0x0000971b      4b8904c8       mov qword [r8 + r9*8], rax
0x0000971f      740a           je 0x972b
0x00009721      4983c101       add r9, 1
0x00009725      4983f90a       cmp r9, 0xa
0x00009729      75d5           jne 0x9700
0x0000972b      e870fbffff     call sym.version_etc_arn
0x00009730      488b442458     mov rax, qword [rsp + 0x58]
0x00009735      644833042528.  xor rax, qword fs:[0x28]
0x0000973e      7505           jne 0x9745
0x00009740      4883c468       add rsp, 0x68
0x00009744      c3             ret
0x00009745      e86686ffff     call sym.imp.__stack_chk_fail
0x0000974a      4d8b5a08       mov r11, qword [r10 + 8]
0x0000974e      498d4308       lea rax, [r11 + 8]
0x00009752      49894208       mov qword [r10 + 8], rax
0x00009756      ebbd           jmp 0x9715
0x00009758      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00009760      55             push rbp
0x00009761      53             push rbx
0x00009762      41ba20000000   mov r10d, 0x20                          ; "@"
0x00009768      4531db         xor r11d, r11d
0x0000976b      4881ecb80000.  sub rsp, 0xb8
0x00009772      64488b042528.  mov rax, qword fs:[0x28]
0x0000977b      4889442478     mov qword [rsp + 0x78], rax
0x00009780      31c0           xor eax, eax
0x00009782      488d8424d000.  lea rax, [rsp + 0xd0]
0x0000978a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00009792      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x0000979a      4c8d442420     lea r8, [rsp + 0x20]
0x0000979f      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x000097a7      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x000097af      4889442410     mov qword [rsp + 0x10], rax
0x000097b4      488d84248000.  lea rax, [rsp + 0x80]
0x000097bc      4531c9         xor r9d, r9d
0x000097bf      4889442418     mov qword [rsp + 0x18], rax
0x000097c4      4889c5         mov rbp, rax
0x000097c7      660f1f840000.  nop word [rax + rax]
0x000097d0      4183fa2f       cmp r10d, 0x2f
0x000097d4      7756           ja 0x982c
0x000097d6      4489d0         mov eax, r10d
0x000097d9      41bb01000000   mov r11d, 1
0x000097df      4183c208       add r10d, 8
0x000097e3      4801e8         add rax, rbp
0x000097e6      488b00         mov rax, qword [rax]
0x000097e9      4885c0         test rax, rax
0x000097ec      4b8904c8       mov qword [r8 + r9*8], rax
0x000097f0      740a           je 0x97fc
0x000097f2      4983c101       add r9, 1
0x000097f6      4983f90a       cmp r9, 0xa
0x000097fa      75d4           jne 0x97d0
0x000097fc      4584db         test r11b, r11b
0x000097ff      7524           jne 0x9825
0x00009801      e89afaffff     call sym.version_etc_arn
0x00009806      488b442478     mov rax, qword [rsp + 0x78]
0x0000980b      644833042528.  xor rax, qword fs:[0x28]
0x00009814      750a           jne 0x9820
0x00009816      4881c4b80000.  add rsp, 0xb8
0x0000981d      5b             pop rbx
0x0000981e      5d             pop rbp
0x0000981f      c3             ret
0x00009820      e88b85ffff     call sym.imp.__stack_chk_fail
0x00009825      4489542408     mov dword [rsp + 8], r10d
0x0000982a      ebd5           jmp 0x9801
0x0000982c      4889d8         mov rax, rbx
0x0000982f      4883c308       add rbx, 8
0x00009833      ebb1           jmp 0x97e6
0x00009835      90             nop
0x00009836      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00009840      53             push rbx
0x00009841      488d35342a01.  lea rsi, str.Report_bugs_to:__s         ; 0x1c27c ; "\nReport bugs to: %s\n"
0x00009848      ba05000000     mov edx, 5
0x0000984d      31ff           xor edi, edi
0x0000984f      e82c85ffff     call sym.imp.dcgettext
0x00009854      488d15362a01.  lea rdx, str.bug_coreutils_gnu.org      ; 0x1c291 ; "bug-coreutils@gnu.org"
0x0000985b      4889c6         mov rsi, rax
0x0000985e      bf01000000     mov edi, 1
0x00009863      31c0           xor eax, eax
0x00009865      e84687ffff     call sym.imp.__printf_chk
0x0000986a      488d35362a01.  lea rsi, str.s_home_page:___s           ; 0x1c2a7 ; "%s home page: <%s>\n"
0x00009871      ba05000000     mov edx, 5
0x00009876      31ff           xor edi, edi
0x00009878      e80385ffff     call sym.imp.dcgettext
0x0000987d      488d0d5c1d01.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x1b5e0 ; "https://www.gnu.org/software/coreutils/"
0x00009884      488d15471f01.  lea rdx, str.GNU_coreutils              ; 0x1b7d2 ; "GNU coreutils"
0x0000988b      4889c6         mov rsi, rax
0x0000988e      bf01000000     mov edi, 1
0x00009893      31c0           xor eax, eax
0x00009895      e81687ffff     call sym.imp.__printf_chk
0x0000989a      488b1d277821.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2210c8:8]=0
0x000098a1      488d35302c01.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x1c4d8 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x000098a8      31ff           xor edi, edi
0x000098aa      ba05000000     mov edx, 5
0x000098af      e8cc84ffff     call sym.imp.dcgettext
0x000098b4      4889de         mov rsi, rbx
0x000098b7      4889c7         mov rdi, rax
0x000098ba      5b             pop rbx
0x000098bb      e9f085ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x000098c0      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x000098c1      4889fb         mov rbx, rdi
0x000098c4      e85786ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x000098c9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x000098cc      7505           jne 0x98d3
0x000098ce      4885db         test rbx, rbx
0x000098d1      7502           jne 0x98d5
0x000098d3      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x000098d4      c3             ret
0x000098d5      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x000098da      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x000098e0      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x000098e3      48f7e6         mul rsi
0x000098e6      4889c7         mov rdi, rax
0x000098e9      0f90c0         seto al
0x000098ec      4885ff         test rdi, rdi
0x000098ef      780a           js 0x98fb
0x000098f1      0fb6c0         movzx eax, al
0x000098f4      4885c0         test rax, rax
0x000098f7      7502           jne 0x98fb
0x000098f9      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x000098fb      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x000098ff      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00009904      6690           nop
0x00009906      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00009910      ebae           jmp sym.xmalloc
0x00009912      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00009916      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00009920      4885f6         test rsi, rsi
0x00009923      53             push rbx
0x00009924      4889f3         mov rbx, rsi
0x00009927      7505           jne 0x992e
0x00009929      4885ff         test rdi, rdi
0x0000992c      751a           jne 0x9948
0x0000992e      4889de         mov rsi, rbx
0x00009931      e85a86ffff     call sym.imp.realloc
0x00009936      4885c0         test rax, rax
0x00009939      7505           jne 0x9940
0x0000993b      4885db         test rbx, rbx
0x0000993e      7511           jne 0x9951                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00009940      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00009941      c3             ret
0x00009942      660f1f440000   nop word [rax + rax]
0x00009948      e81383ffff     call sym.imp.free
0x0000994d      31c0           xor eax, eax
0x0000994f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00009950      c3             ret
0x00009951      e8ba010000     call sym.xalloc_die
0x00009956      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00009960      4889f0         mov rax, rsi
0x00009963      48f7e2         mul rdx
0x00009966      4889c6         mov rsi, rax
0x00009969      0f90c0         seto al
0x0000996c      4885f6         test rsi, rsi
0x0000996f      780a           js 0x997b
0x00009971      0fb6c0         movzx eax, al
0x00009974      4885c0         test rax, rax
0x00009977      7502           jne 0x997b
0x00009979      eba5           jmp sym.xrealloc
0x0000997b      4883ec08       sub rsp, 8
0x0000997f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00009984      6690           nop
0x00009986      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00009990      4885ff         test rdi, rdi
0x00009993      4989d1         mov r9, rdx
0x00009996      488b0e         mov rcx, qword [rsi]
0x00009999      7435           je 0x99d0
0x0000999b      31d2           xor edx, edx
0x0000999d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x000099a7      49f7f1         div r9
0x000099aa      4839c8         cmp rax, rcx
0x000099ad      763c           jbe 0x99eb
0x000099af      4889c8         mov rax, rcx
0x000099b2      48d1e8         shr rax, 1
0x000099b5      488d4c0801     lea rcx, [rax + rcx + 1]
0x000099ba      48890e         mov qword [rsi], rcx
0x000099bd      490fafc9       imul rcx, r9
0x000099c1      4889ce         mov rsi, rcx
0x000099c4      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x000099c9      0f1f80000000.  nop dword [rax]
0x000099d0      4885c9         test rcx, rcx
0x000099d3      7423           je 0x99f8
0x000099d5      4889c8         mov rax, rcx
0x000099d8      49f7e1         mul r9
0x000099db      0f90c2         seto dl
0x000099de      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x000099e1      0fb6d2         movzx edx, dl
0x000099e4      7805           js 0x99eb
0x000099e6      4885d2         test rdx, rdx
0x000099e9      74cf           je 0x99ba
0x000099eb      4883ec08       sub rsp, 8
0x000099ef      e81c010000     call sym.xalloc_die
0x000099f4      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x000099f8      31d2           xor edx, edx
0x000099fa      b880000000     mov eax, 0x80
0x000099ff      4531c0         xor r8d, r8d
0x00009a02      49f7f1         div r9
0x00009a05      4885c0         test rax, rax
0x00009a08      410f94c0       sete r8b
0x00009a0c      498d0c00       lea rcx, [r8 + rax]
0x00009a10      ebc3           jmp 0x99d5
0x00009a12      0f1f4000       nop dword [rax]
0x00009a16      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00009a20      4885ff         test rdi, rdi
0x00009a23      488b06         mov rax, qword [rsi]
0x00009a26      7428           je 0x9a50
0x00009a28      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00009a32      4839d0         cmp rax, rdx
0x00009a35      772a           ja 0x9a61
0x00009a37      4889c2         mov rdx, rax
0x00009a3a      48d1ea         shr rdx, 1
0x00009a3d      488d440201     lea rax, [rdx + rax + 1]
0x00009a42      488906         mov qword [rsi], rax
0x00009a45      4889c6         mov rsi, rax
0x00009a48      e9d3feffff     jmp sym.xrealloc
0x00009a4d      0f1f00         nop dword [rax]
0x00009a50      4885c0         test rax, rax
0x00009a53      ba80000000     mov edx, 0x80
0x00009a58      480f44c2       cmove rax, rdx
0x00009a5c      4885c0         test rax, rax
0x00009a5f      79e1           jns 0x9a42
0x00009a61      4883ec08       sub rsp, 8
0x00009a65      e8a6000000     call sym.xalloc_die
0x00009a6a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00009a70      53             push rbx
0x00009a71      4889fb         mov rbx, rdi
0x00009a74      e847feffff     call sym.xmalloc
0x00009a79      4889da         mov rdx, rbx
0x00009a7c      31f6           xor esi, esi
0x00009a7e      4889c7         mov rdi, rax
0x00009a81      5b             pop rbx
0x00009a82      e9b983ffff     jmp sym.imp.memset
0x00009a87      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00009a90      4889f8         mov rax, rdi
0x00009a93      4883ec08       sub rsp, 8
0x00009a97      48f7e6         mul rsi
0x00009a9a      0f90c2         seto dl
0x00009a9d      4885c0         test rax, rax
0x00009aa0      7817           js 0x9ab9
0x00009aa2      0fb6d2         movzx edx, dl
0x00009aa5      4885d2         test rdx, rdx
0x00009aa8      750f           jne 0x9ab9
0x00009aaa      e81184ffff     call sym.imp.calloc
0x00009aaf      4885c0         test rax, rax
0x00009ab2      7405           je 0x9ab9
0x00009ab4      4883c408       add rsp, 8
0x00009ab8      c3             ret
0x00009ab9      e852000000     call sym.xalloc_die
0x00009abe      6690           nop
;-- xmemdup:
0x00009ac0      55             push rbp
0x00009ac1      53             push rbx
0x00009ac2      4889fd         mov rbp, rdi
0x00009ac5      4889f7         mov rdi, rsi
0x00009ac8      4889f3         mov rbx, rsi
0x00009acb      4883ec08       sub rsp, 8
0x00009acf      e8ecfdffff     call sym.xmalloc
0x00009ad4      4883c408       add rsp, 8
0x00009ad8      4889da         mov rdx, rbx
0x00009adb      4889ee         mov rsi, rbp
0x00009ade      5b             pop rbx
0x00009adf      5d             pop rbp
0x00009ae0      4889c7         mov rdi, rax
0x00009ae3      e9f883ffff     jmp sym.imp.memcpy
0x00009ae8      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00009af0      53             push rbx
0x00009af1      4889fb         mov rbx, rdi
0x00009af4      e8a782ffff     call sym.imp.strlen
0x00009af9      4889df         mov rdi, rbx
0x00009afc      488d7001       lea rsi, [rax + 1]
0x00009b00      5b             pop rbx
0x00009b01      ebbd           jmp sym.xmemdup
0x00009b03      662e0f1f8400.  nop word cs:[rax + rax]
0x00009b0d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00009b10      488d35782a01.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x1c58f ; "memory exhausted"
0x00009b17      4883ec08       sub rsp, 8
0x00009b1b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00009b20      31ff           xor edi, edi
0x00009b22      e85982ffff     call sym.imp.dcgettext
0x00009b27      8b3d1b752100   mov edi, dword [obj.exit_failure]       ; [0x221048:4]=1
0x00009b2d      488d15e01e01.  lea rdx, [0x0001ba14]                   ; "%s"
0x00009b34      4889c1         mov rcx, rax
0x00009b37      31f6           xor esi, esi
0x00009b39      31c0           xor eax, eax
0x00009b3b      e8c084ffff     call sym.imp.error
0x00009b40      e82b81ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00009b45      662e0f1f8400.  nop word cs:[rax + rax]
0x00009b4f      90             nop
;-- xmem_cd_iconv:
0x00009b50      53             push rbx                                ; ../coreutils-8.31/lib/xstriconv.c:34
0x00009b51      e85a0a0100     call sym.mem_cd_iconv                   ; ../coreutils-8.31/lib/xstriconv.c:35
0x00009b56      85c0           test eax, eax                           ; ../coreutils-8.31/lib/xstriconv.c:37
0x00009b58      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/xstriconv.c:35
0x00009b5a      7804           js 0x9b60                               ; ../coreutils-8.31/lib/xstriconv.c:37
0x00009b5c      89d8           mov eax, ebx                            ; ../coreutils-8.31/lib/xstriconv.c:40
0x00009b5e      5b             pop rbx
0x00009b5f      c3             ret
0x00009b60      e81b81ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/xstriconv.c:37
0x00009b65      83380c         cmp dword [rax], 0xc
0x00009b68      75f2           jne 0x9b5c
0x00009b6a      e8a1ffffff     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xstriconv.c:38
0x00009b6f      90             nop
;-- xstr_cd_iconv:
0x00009b70      53             push rbx                                ; ../coreutils-8.31/lib/xstriconv.c:44
0x00009b71      e8fa0c0100     call sym.str_cd_iconv                   ; ../coreutils-8.31/lib/xstriconv.c:45
0x00009b76      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xstriconv.c:47
0x00009b79      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/xstriconv.c:45
0x00009b7c      740a           je 0x9b88                               ; ../coreutils-8.31/lib/xstriconv.c:47
0x00009b7e      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/xstriconv.c:50
0x00009b81      5b             pop rbx
0x00009b82      c3             ret
0x00009b83      0f1f440000     nop dword [rax + rax]
0x00009b88      e8f380ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/xstriconv.c:47
0x00009b8d      83380c         cmp dword [rax], 0xc
0x00009b90      75ec           jne 0x9b7e
0x00009b92      e879ffffff     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xstriconv.c:48
0x00009b97      660f1f840000.  nop word [rax + rax]
;-- xstr_iconv:
0x00009ba0      53             push rbx                                ; ../coreutils-8.31/lib/xstriconv.c:56
0x00009ba1      e81a0f0100     call sym.str_iconv                      ; ../coreutils-8.31/lib/xstriconv.c:57
0x00009ba6      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xstriconv.c:59
0x00009ba9      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/xstriconv.c:57
0x00009bac      740a           je 0x9bb8                               ; ../coreutils-8.31/lib/xstriconv.c:59
0x00009bae      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/xstriconv.c:62
0x00009bb1      5b             pop rbx
0x00009bb2      c3             ret
0x00009bb3      0f1f440000     nop dword [rax + rax]
0x00009bb8      e8c380ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/xstriconv.c:59
0x00009bbd      83380c         cmp dword [rax], 0xc
0x00009bc0      75ec           jne 0x9bae
0x00009bc2      e849ffffff     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xstriconv.c:60
0x00009bc7      660f1f840000.  nop word [rax + rax]
;-- xstrtoimax:
0x00009bd0      4157           push r15
0x00009bd2      4156           push r14
0x00009bd4      4155           push r13
0x00009bd6      4154           push r12
0x00009bd8      55             push rbp
0x00009bd9      53             push rbx
0x00009bda      4883ec28       sub rsp, 0x28
0x00009bde      64488b042528.  mov rax, qword fs:[0x28]
0x00009be7      4889442418     mov qword [rsp + 0x18], rax
0x00009bec      31c0           xor eax, eax
0x00009bee      83fa24         cmp edx, 0x24
0x00009bf1      0f8768060000   ja 0xa25f
0x00009bf7      488d442410     lea rax, [rsp + 0x10]
0x00009bfc      4885f6         test rsi, rsi
0x00009bff      4889f3         mov rbx, rsi
0x00009c02      4989fc         mov r12, rdi
0x00009c05      89d5           mov ebp, edx
0x00009c07      4989ce         mov r14, rcx
0x00009c0a      480f44d8       cmove rbx, rax
0x00009c0e      4d89c7         mov r15, r8
0x00009c11      e86a80ffff     call sym.imp.__errno_location
0x00009c16      31c9           xor ecx, ecx
0x00009c18      89ea           mov edx, ebp
0x00009c1a      c70000000000   mov dword [rax], 0
0x00009c20      4889de         mov rsi, rbx
0x00009c23      4c89e7         mov rdi, r12
0x00009c26      4989c5         mov r13, rax
0x00009c29      e80281ffff     call sym.imp.__strtol_internal
0x00009c2e      488b0b         mov rcx, qword [rbx]
0x00009c31      4889c5         mov rbp, rax
0x00009c34      4c39e1         cmp rcx, r12
0x00009c37      745f           je 0x9c98
0x00009c39      418b4500       mov eax, dword [r13]
0x00009c3d      85c0           test eax, eax
0x00009c3f      753f           jne 0x9c80
0x00009c41      4531e4         xor r12d, r12d
0x00009c44      4d85ff         test r15, r15
0x00009c47      740d           je 0x9c56
0x00009c49      440fb629       movzx r13d, byte [rcx]
0x00009c4d      4584ed         test r13b, r13b
0x00009c50      0f857d000000   jne 0x9cd3
0x00009c56      49892e         mov qword [r14], rbp
0x00009c59      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00009c5e      6448333c2528.  xor rdi, qword fs:[0x28]
0x00009c67      4489e0         mov eax, r12d
0x00009c6a      0f850e060000   jne 0xa27e
0x00009c70      4883c428       add rsp, 0x28
0x00009c74      5b             pop rbx
0x00009c75      5d             pop rbp
0x00009c76      415c           pop r12
0x00009c78      415d           pop r13
0x00009c7a      415e           pop r14
0x00009c7c      415f           pop r15
0x00009c7e      c3             ret
0x00009c7f      90             nop
0x00009c80      83f822         cmp eax, 0x22
0x00009c83      41bc04000000   mov r12d, 4
0x00009c89      75ce           jne 0x9c59
0x00009c8b      41bc01000000   mov r12d, 1
0x00009c91      ebb1           jmp 0x9c44
0x00009c93      0f1f440000     nop dword [rax + rax]
0x00009c98      4d85ff         test r15, r15
0x00009c9b      0f848f040000   je 0xa130
0x00009ca1      440fb629       movzx r13d, byte [rcx]
0x00009ca5      48894c2408     mov qword [rsp + 8], rcx
0x00009caa      41bc04000000   mov r12d, 4
0x00009cb0      4584ed         test r13b, r13b
0x00009cb3      74a4           je 0x9c59
0x00009cb5      410fbef5       movsx esi, r13b
0x00009cb9      4c89ff         mov rdi, r15
0x00009cbc      e82f81ffff     call sym.imp.strchr
0x00009cc1      4885c0         test rax, rax
0x00009cc4      488b4c2408     mov rcx, qword [rsp + 8]
0x00009cc9      748e           je 0x9c59
0x00009ccb      bd01000000     mov ebp, 1
0x00009cd0      4531e4         xor r12d, r12d
0x00009cd3      410fbef5       movsx esi, r13b
0x00009cd7      4c89ff         mov rdi, r15
0x00009cda      48894c2408     mov qword [rsp + 8], rcx
0x00009cdf      e80c81ffff     call sym.imp.strchr
0x00009ce4      4885c0         test rax, rax
0x00009ce7      488b4c2408     mov rcx, qword [rsp + 8]
0x00009cec      745a           je 0x9d48
0x00009cee      418d45bb       lea eax, [r13 - 0x45]
0x00009cf2      3c2f           cmp al, 0x2f
0x00009cf4      7762           ja 0x9d58
0x00009cf6      48ba45893000.  movabs rdx, 0x814400308945
0x00009d00      480fa3c2       bt rdx, rax
0x00009d04      7352           jae 0x9d58
0x00009d06      be30000000     mov esi, 0x30                           ; '0'
0x00009d0b      4c89ff         mov rdi, r15
0x00009d0e      48894c2408     mov qword [rsp + 8], rcx
0x00009d13      e8d880ffff     call sym.imp.strchr
0x00009d18      4885c0         test rax, rax
0x00009d1b      488b4c2408     mov rcx, qword [rsp + 8]
0x00009d20      7436           je 0x9d58
0x00009d22      0fb64101       movzx eax, byte [rcx + 1]
0x00009d26      3c44           cmp al, 0x44
0x00009d28      740c           je 0x9d36
0x00009d2a      3c69           cmp al, 0x69
0x00009d2c      0f84e6040000   je 0xa218
0x00009d32      3c42           cmp al, 0x42
0x00009d34      7522           jne 0x9d58
0x00009d36      bf02000000     mov edi, 2
0x00009d3b      b8e8030000     mov eax, 0x3e8
0x00009d40      eb20           jmp 0x9d62
0x00009d42      660f1f440000   nop word [rax + rax]
0x00009d48      49892e         mov qword [r14], rbp
0x00009d4b      4183cc02       or r12d, 2
0x00009d4f      e905ffffff     jmp 0x9c59
0x00009d54      0f1f4000       nop dword [rax]
0x00009d58      bf01000000     mov edi, 1
0x00009d5d      b800040000     mov eax, 0x400
0x00009d62      4183ed42       sub r13d, 0x42
0x00009d66      4180fd35       cmp r13b, 0x35
0x00009d6a      77dc           ja 0x9d48
0x00009d6c      488d35752801.  lea rsi, [0x0001c5e8]
0x00009d73      450fb6ed       movzx r13d, r13b
0x00009d77      4a6314ae       movsxd rdx, dword [rsi + r13*4]
0x00009d7b      4801f2         add rdx, rsi
0x00009d7e      ffe2           jmp rdx
0x00009d80      49b800000000.  movabs r8, 0x8000000000000000
0x00009d8a      4863f0         movsxd rsi, eax
0x00009d8d      4c89c0         mov rax, r8
0x00009d90      4899           cqo
0x00009d92      48f7fe         idiv rsi
0x00009d95      4839c5         cmp rbp, rax
0x00009d98      4989c1         mov r9, rax
0x00009d9b      0f8ca4040000   jl 0xa245
0x00009da1      49baffffffff.  movabs r10, 0x7fffffffffffffff          ; 9223372036854775807
0x00009dab      4c89d0         mov rax, r10
0x00009dae      4899           cqo
0x00009db0      48f7fe         idiv rsi
0x00009db3      4839c5         cmp rbp, rax
0x00009db6      0f8f96040000   jg 0xa252
0x00009dbc      480fafee       imul rbp, rsi
0x00009dc0      4939e9         cmp r9, rbp
0x00009dc3      0f8f7c040000   jg 0xa245
0x00009dc9      4839e8         cmp rax, rbp
0x00009dcc      0f8c80040000   jl 0xa252
0x00009dd2      480fafee       imul rbp, rsi
0x00009dd6      31c0           xor eax, eax
0x00009dd8      4109c4         or r12d, eax
0x00009ddb      0f1f440000     nop dword [rax + rax]
0x00009de0      4863c7         movsxd rax, edi
0x00009de3      4801c1         add rcx, rax
0x00009de6      4489e0         mov eax, r12d
0x00009de9      83c802         or eax, 2
0x00009dec      48890b         mov qword [rbx], rcx
0x00009def      803900         cmp byte [rcx], 0
0x00009df2      440f45e0       cmovne r12d, eax
0x00009df6      e95bfeffff     jmp 0x9c56
0x00009dfb      0f1f440000     nop dword [rax + rax]
0x00009e00      48b800000000.  movabs rax, 0xc000000000000000
0x00009e0a      4839c5         cmp rbp, rax
0x00009e0d      0f8c2d030000   jl 0xa140
0x00009e13      48b8ffffffff.  movabs rax, 0x3fffffffffffffff          ; 4611686018427387903
0x00009e1d      4839c5         cmp rbp, rax
0x00009e20      0f8fda030000   jg 0xa200
0x00009e26      4801ed         add rbp, rbp
0x00009e29      ebb5           jmp 0x9de0
0x00009e2b      0f1f440000     nop dword [rax + rax]
0x00009e30      48b800000000.  movabs rax, 0xffc0000000000000
0x00009e3a      4839c5         cmp rbp, rax
0x00009e3d      0f8cfd020000   jl 0xa140
0x00009e43      48b8ffffffff.  movabs rax, 0x3fffffffffffff            ; 18014398509481983
0x00009e4d      4839c5         cmp rbp, rax
0x00009e50      0f8faa030000   jg 0xa200
0x00009e56      48c1e509       shl rbp, 9
0x00009e5a      eb84           jmp 0x9de0
0x00009e5c      0f1f4000       nop dword [rax]
0x00009e60      4863f0         movsxd rsi, eax
0x00009e63      48b800000000.  movabs rax, 0x8000000000000000
0x00009e6d      41b807000000   mov r8d, 7
0x00009e73      4899           cqo
0x00009e75      4531db         xor r11d, r11d
0x00009e78      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x00009e82      48f7fe         idiv rsi
0x00009e85      4989c2         mov r10, rax
0x00009e88      eb25           jmp 0x9eaf
0x00009e8a      660f1f440000   nop word [rax + rax]
0x00009e90      4c89c8         mov rax, r9
0x00009e93      4899           cqo
0x00009e95      48f7fe         idiv rsi
0x00009e98      4839e8         cmp rax, rbp
0x00009e9b      0f8ce7020000   jl 0xa188
0x00009ea1      480fafee       imul rbp, rsi
0x00009ea5      4183e801       sub r8d, 1
0x00009ea9      0f8421010000   je 0x9fd0
0x00009eaf      4939ea         cmp r10, rbp
0x00009eb2      7edc           jle 0x9e90
0x00009eb4      41bb01000000   mov r11d, 1
0x00009eba      48bd00000000.  movabs rbp, 0x8000000000000000
0x00009ec4      ebdf           jmp 0x9ea5
0x00009ec6      662e0f1f8400.  nop word cs:[rax + rax]
0x00009ed0      4863f0         movsxd rsi, eax
0x00009ed3      48b800000000.  movabs rax, 0x8000000000000000
0x00009edd      41b808000000   mov r8d, 8
0x00009ee3      4899           cqo
0x00009ee5      4531db         xor r11d, r11d
0x00009ee8      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x00009ef2      48f7fe         idiv rsi
0x00009ef5      4989c2         mov r10, rax
0x00009ef8      eb25           jmp 0x9f1f
0x00009efa      660f1f440000   nop word [rax + rax]
0x00009f00      4c89c8         mov rax, r9
0x00009f03      4899           cqo
0x00009f05      48f7fe         idiv rsi
0x00009f08      4839e8         cmp rax, rbp
0x00009f0b      0f8c47020000   jl 0xa158
0x00009f11      480fafee       imul rbp, rsi
0x00009f15      4183e801       sub r8d, 1
0x00009f19      0f84b1000000   je 0x9fd0
0x00009f1f      4939ea         cmp r10, rbp
0x00009f22      7edc           jle 0x9f00
0x00009f24      41bb01000000   mov r11d, 1
0x00009f2a      48bd00000000.  movabs rbp, 0x8000000000000000
0x00009f34      ebdf           jmp 0x9f15
0x00009f36      662e0f1f8400.  nop word cs:[rax + rax]
0x00009f40      49b800000000.  movabs r8, 0x8000000000000000
0x00009f4a      4863f0         movsxd rsi, eax
0x00009f4d      4c89c0         mov rax, r8
0x00009f50      4899           cqo
0x00009f52      48f7fe         idiv rsi
0x00009f55      4839c5         cmp rbp, rax
0x00009f58      0f8ce2010000   jl 0xa140
0x00009f5e      4983e801       sub r8, 1
0x00009f62      4c89c0         mov rax, r8
0x00009f65      4899           cqo
0x00009f67      48f7fe         idiv rsi
0x00009f6a      4839c5         cmp rbp, rax
0x00009f6d      0f8f8d020000   jg 0xa200
0x00009f73      480fafee       imul rbp, rsi
0x00009f77      e964feffff     jmp 0x9de0
0x00009f7c      0f1f4000       nop dword [rax]
0x00009f80      4863f0         movsxd rsi, eax
0x00009f83      48b800000000.  movabs rax, 0x8000000000000000
0x00009f8d      41b803000000   mov r8d, 3
0x00009f93      4899           cqo
0x00009f95      4531db         xor r11d, r11d
0x00009f98      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x00009fa2      48f7fe         idiv rsi
0x00009fa5      4989c2         mov r10, rax
0x00009fa8      4939ea         cmp r10, rbp
0x00009fab      0f8fef010000   jg 0xa1a0
0x00009fb1      4c89c8         mov rax, r9
0x00009fb4      4899           cqo
0x00009fb6      48f7fe         idiv rsi
0x00009fb9      4839e8         cmp rax, rbp
0x00009fbc      0f8c6e020000   jl 0xa230
0x00009fc2      480fafee       imul rbp, rsi
0x00009fc6      4183e801       sub r8d, 1
0x00009fca      75dc           jne 0x9fa8
0x00009fcc      0f1f4000       nop dword [rax]
0x00009fd0      4509dc         or r12d, r11d
0x00009fd3      e908feffff     jmp 0x9de0
0x00009fd8      0f1f84000000.  nop dword [rax + rax]
0x00009fe0      4863f0         movsxd rsi, eax
0x00009fe3      48b800000000.  movabs rax, 0x8000000000000000
0x00009fed      41b806000000   mov r8d, 6
0x00009ff3      4899           cqo
0x00009ff5      4531db         xor r11d, r11d
0x00009ff8      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x0000a002      48f7fe         idiv rsi
0x0000a005      4989c2         mov r10, rax
0x0000a008      eb21           jmp 0xa02b
0x0000a00a      660f1f440000   nop word [rax + rax]
0x0000a010      4c89c8         mov rax, r9
0x0000a013      4899           cqo
0x0000a015      48f7fe         idiv rsi
0x0000a018      4839e8         cmp rax, rbp
0x0000a01b      0f8c97010000   jl 0xa1b8
0x0000a021      480fafee       imul rbp, rsi
0x0000a025      4183e801       sub r8d, 1
0x0000a029      74a5           je 0x9fd0
0x0000a02b      4939ea         cmp r10, rbp
0x0000a02e      7ee0           jle 0xa010
0x0000a030      41bb01000000   mov r11d, 1
0x0000a036      48bd00000000.  movabs rbp, 0x8000000000000000
0x0000a040      ebe3           jmp 0xa025
0x0000a042      660f1f440000   nop word [rax + rax]
0x0000a048      4863f0         movsxd rsi, eax
0x0000a04b      48b800000000.  movabs rax, 0x8000000000000000
0x0000a055      41b805000000   mov r8d, 5
0x0000a05b      4899           cqo
0x0000a05d      4531db         xor r11d, r11d
0x0000a060      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x0000a06a      48f7fe         idiv rsi
0x0000a06d      4989c2         mov r10, rax
0x0000a070      eb25           jmp 0xa097
0x0000a072      660f1f440000   nop word [rax + rax]
0x0000a078      4c89c8         mov rax, r9
0x0000a07b      4899           cqo
0x0000a07d      48f7fe         idiv rsi
0x0000a080      4839e8         cmp rax, rbp
0x0000a083      0f8c47010000   jl 0xa1d0
0x0000a089      480fafee       imul rbp, rsi
0x0000a08d      4183e801       sub r8d, 1
0x0000a091      0f8439ffffff   je 0x9fd0
0x0000a097      4939ea         cmp r10, rbp
0x0000a09a      7edc           jle 0xa078
0x0000a09c      41bb01000000   mov r11d, 1
0x0000a0a2      48bd00000000.  movabs rbp, 0x8000000000000000
0x0000a0ac      ebdf           jmp 0xa08d
0x0000a0ae      6690           nop
0x0000a0b0      48b800000000.  movabs rax, 0xffe0000000000000
0x0000a0ba      4839c5         cmp rbp, rax
0x0000a0bd      0f8c7d000000   jl 0xa140
0x0000a0c3      48b8ffffffff.  movabs rax, 0x1fffffffffffff            ; 9007199254740991
0x0000a0cd      4839c5         cmp rbp, rax
0x0000a0d0      0f8f2a010000   jg 0xa200
0x0000a0d6      48c1e50a       shl rbp, 0xa
0x0000a0da      e901fdffff     jmp 0x9de0
0x0000a0df      90             nop
0x0000a0e0      4863f0         movsxd rsi, eax
0x0000a0e3      48b800000000.  movabs rax, 0x8000000000000000
0x0000a0ed      41b804000000   mov r8d, 4
0x0000a0f3      4899           cqo
0x0000a0f5      4531db         xor r11d, r11d
0x0000a0f8      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x0000a102      48f7fe         idiv rsi
0x0000a105      4989c2         mov r10, rax
0x0000a108      4939ea         cmp r10, rbp
0x0000a10b      7f63           jg 0xa170
0x0000a10d      4c89c8         mov rax, r9
0x0000a110      4899           cqo
0x0000a112      48f7fe         idiv rsi
0x0000a115      4839e8         cmp rax, rbp
0x0000a118      0f8cca000000   jl 0xa1e8
0x0000a11e      480fafee       imul rbp, rsi
0x0000a122      4183e801       sub r8d, 1
0x0000a126      75e0           jne 0xa108
0x0000a128      e9a3feffff     jmp 0x9fd0
0x0000a12d      0f1f00         nop dword [rax]
0x0000a130      41bc04000000   mov r12d, 4
0x0000a136      e91efbffff     jmp 0x9c59
0x0000a13b      0f1f440000     nop dword [rax + rax]
0x0000a140      41bc01000000   mov r12d, 1
0x0000a146      48bd00000000.  movabs rbp, 0x8000000000000000
0x0000a150      e98bfcffff     jmp 0x9de0
0x0000a155      0f1f00         nop dword [rax]
0x0000a158      41bb01000000   mov r11d, 1
0x0000a15e      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x0000a168      e9a8fdffff     jmp 0x9f15
0x0000a16d      0f1f00         nop dword [rax]
0x0000a170      41bb01000000   mov r11d, 1
0x0000a176      48bd00000000.  movabs rbp, 0x8000000000000000
0x0000a180      eba0           jmp 0xa122
0x0000a182      660f1f440000   nop word [rax + rax]
0x0000a188      41bb01000000   mov r11d, 1
0x0000a18e      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x0000a198      e908fdffff     jmp 0x9ea5
0x0000a19d      0f1f00         nop dword [rax]
0x0000a1a0      41bb01000000   mov r11d, 1
0x0000a1a6      48bd00000000.  movabs rbp, 0x8000000000000000
0x0000a1b0      e911feffff     jmp 0x9fc6
0x0000a1b5      0f1f00         nop dword [rax]
0x0000a1b8      41bb01000000   mov r11d, 1
0x0000a1be      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x0000a1c8      e958feffff     jmp 0xa025
0x0000a1cd      0f1f00         nop dword [rax]
0x0000a1d0      41bb01000000   mov r11d, 1
0x0000a1d6      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x0000a1e0      e9a8feffff     jmp 0xa08d
0x0000a1e5      0f1f00         nop dword [rax]
0x0000a1e8      41bb01000000   mov r11d, 1
0x0000a1ee      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x0000a1f8      e925ffffff     jmp 0xa122
0x0000a1fd      0f1f00         nop dword [rax]
0x0000a200      41bc01000000   mov r12d, 1
0x0000a206      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x0000a210      e9cbfbffff     jmp 0x9de0
0x0000a215      0f1f00         nop dword [rax]
0x0000a218      31ff           xor edi, edi
0x0000a21a      80790242       cmp byte [rcx + 2], 0x42
0x0000a21e      b800040000     mov eax, 0x400
0x0000a223      400f94c7       sete dil
0x0000a227      8d7c3f01       lea edi, [rdi + rdi + 1]
0x0000a22b      e932fbffff     jmp 0x9d62
0x0000a230      41bb01000000   mov r11d, 1
0x0000a236      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x0000a240      e981fdffff     jmp 0x9fc6
0x0000a245      b801000000     mov eax, 1
0x0000a24a      4c89c5         mov rbp, r8
0x0000a24d      e986fbffff     jmp 0x9dd8
0x0000a252      b801000000     mov eax, 1
0x0000a257      4c89d5         mov rbp, r10
0x0000a25a      e979fbffff     jmp 0x9dd8
0x0000a25f      488d0d5a2401.  lea rcx, obj.__PRETTY_FUNCTION__.4162   ; 0x1c6c0 ; "xstrtoimax"
0x0000a266      488d35332301.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0x1c5a0 ; "../coreutils-8.31/lib/xstrtol.c"
0x0000a26d      488d3d4c2301.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0x1c5c0 ; "0 <= strtol_base && strtol_base <= 36"
0x0000a274      ba54000000     mov edx, 0x54                           ; 'T'
0x0000a279      e8b27bffff     call sym.imp.__assert_fail
0x0000a27e      e82d7bffff     call sym.imp.__stack_chk_fail
0x0000a283      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a28d      0f1f00         nop dword [rax]
;-- rpl_fclose:
0x0000a290      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x0000a292      55             push rbp
0x0000a293      53             push rbx
0x0000a294      4889fb         mov rbx, rdi
0x0000a297      e8547cffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x0000a29c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x0000a29e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x0000a2a1      7854           js 0xa2f7                               ; ../coreutils-8.31/lib/fclose.c:66
0x0000a2a3      e8c87cffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x0000a2a8      85c0           test eax, eax
0x0000a2aa      752c           jne 0xa2d8
0x0000a2ac      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x0000a2af      e85c000000     call sym.rpl_fflush
0x0000a2b4      85c0           test eax, eax
0x0000a2b6      743c           je 0xa2f4
0x0000a2b8      e8c379ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x0000a2bd      448b20         mov r12d, dword [rax]
0x0000a2c0      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x0000a2c3      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x0000a2c6      e8857affff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x0000a2cb      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x0000a2ce      7530           jne 0xa300
0x0000a2d0      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x0000a2d1      5d             pop rbp
0x0000a2d2      415c           pop r12
0x0000a2d4      c3             ret
0x0000a2d5      0f1f00         nop dword [rax]
0x0000a2d8      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x0000a2db      e8107cffff     call sym.imp.fileno
0x0000a2e0      31f6           xor esi, esi
0x0000a2e2      ba01000000     mov edx, 1
0x0000a2e7      89c7           mov edi, eax
0x0000a2e9      e8327bffff     call sym.imp.lseek
0x0000a2ee      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000a2f2      75b8           jne 0xa2ac
0x0000a2f4      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x0000a2f7      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x0000a2f8      5d             pop rbp
0x0000a2f9      415c           pop r12
0x0000a2fb      e9507affff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x0000a300      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x0000a304      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x0000a309      ebc5           jmp 0xa2d0
0x0000a30b      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x0000a310      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x0000a313      53             push rbx
0x0000a314      4889fb         mov rbx, rdi
0x0000a317      7411           je 0xa32a                               ; ../coreutils-8.31/lib/fflush.c:150
0x0000a319      e8527cffff     call sym.imp.__freading
0x0000a31e      85c0           test eax, eax
0x0000a320      7408           je 0xa32a
0x0000a322      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x0000a328      750e           jne 0xa338
0x0000a32a      4889df         mov rdi, rbx
0x0000a32d      5b             pop rbx
0x0000a32e      e90d7cffff     jmp sym.imp.fflush
0x0000a333      0f1f440000     nop dword [rax + rax]
0x0000a338      4889df         mov rdi, rbx
0x0000a33b      ba01000000     mov edx, 1
0x0000a340      31f6           xor esi, esi
0x0000a342      e809000000     call sym.rpl_fseeko
0x0000a347      4889df         mov rdi, rbx
0x0000a34a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x0000a34b      e9f07bffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x0000a350      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x0000a354      48394710       cmp qword [rdi + 0x10], rax
0x0000a358      7406           je 0xa360                               ; ../coreutils-8.31/lib/fseeko.c:32
0x0000a35a      e9c17cffff     jmp sym.imp.fseeko
0x0000a35f      90             nop
0x0000a360      488b4720       mov rax, qword [rdi + 0x20]
0x0000a364      48394728       cmp qword [rdi + 0x28], rax
0x0000a368      75f0           jne 0xa35a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x0000a36a      48837f4800     cmp qword [rdi + 0x48], 0
0x0000a36f      75e9           jne 0xa35a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x0000a371      4154           push r12
0x0000a373      55             push rbp
0x0000a374      4189d4         mov r12d, edx
0x0000a377      53             push rbx
0x0000a378      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x0000a37b      4889fb         mov rbx, rdi
0x0000a37e      e86d7bffff     call sym.imp.fileno
0x0000a383      4489e2         mov edx, r12d
0x0000a386      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x0000a389      89c7           mov edi, eax
0x0000a38b      e8907affff     call sym.imp.lseek
0x0000a390      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000a394      740c           je 0xa3a2
0x0000a396      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x0000a399      488983900000.  mov qword [rbx + 0x90], rax
0x0000a3a0      31c0           xor eax, eax
0x0000a3a2      5b             pop rbx
0x0000a3a3      5d             pop rbp
0x0000a3a4      415c           pop r12
0x0000a3a6      c3             ret
0x0000a3a7      660f1f840000.  nop word [rax + rax]
;-- rpl_mbrtowc:
0x0000a3b0      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x0000a3b2      4154           push r12
0x0000a3b4      4989f5         mov r13, rsi
0x0000a3b7      55             push rbp
0x0000a3b8      53             push rbx
0x0000a3b9      4889fb         mov rbx, rdi
0x0000a3bc      4989d4         mov r12, rdx
0x0000a3bf      4883ec18       sub rsp, 0x18
0x0000a3c3      64488b042528.  mov rax, qword fs:[0x28]
0x0000a3cc      4889442408     mov qword [rsp + 8], rax
0x0000a3d1      31c0           xor eax, eax
0x0000a3d3      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x0000a3d8      4885ff         test rdi, rdi
0x0000a3db      480f44d8       cmove rbx, rax
0x0000a3df      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x0000a3e2      e8e979ffff     call sym.imp.mbrtowc
0x0000a3e7      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x0000a3eb      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x0000a3ee      7620           jbe 0xa410                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x0000a3f0      4d85e4         test r12, r12
0x0000a3f3      741b           je 0xa410
0x0000a3f5      31ff           xor edi, edi
0x0000a3f7      e824e30000     call sym.hard_locale
0x0000a3fc      84c0           test al, al
0x0000a3fe      7510           jne 0xa410
0x0000a400      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x0000a405      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x0000a40a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x0000a40c      0f1f4000       nop dword [rax]
0x0000a410      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x0000a415      644833142528.  xor rdx, qword fs:[0x28]
0x0000a41e      4889e8         mov rax, rbp
0x0000a421      750b           jne 0xa42e
0x0000a423      4883c418       add rsp, 0x18
0x0000a427      5b             pop rbx
0x0000a428      5d             pop rbp
0x0000a429      415c           pop r12
0x0000a42b      415d           pop r13
0x0000a42d      c3             ret
0x0000a42e      e87d79ffff     call sym.imp.__stack_chk_fail
0x0000a433      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a43d      0f1f00         nop dword [rax]
;-- peek_token_bracket:
0x0000a440      488b4648       mov rax, qword [rsi + 0x48]             ; ../coreutils-8.31/lib/regcomp.c:2026
0x0000a444      48394668       cmp qword [rsi + 0x68], rax
0x0000a448      7e56           jle 0xa4a0
0x0000a44a      4c8b4608       mov r8, qword [rsi + 8]                 ; ../coreutils-8.31/lib/regcomp.c:2033
0x0000a44e      83be90000000.  cmp dword [rsi + 0x90], 1               ; ../coreutils-8.31/lib/regcomp.c:2037
0x0000a455      410fb60c00     movzx ecx, byte [r8 + rax]              ; ../coreutils-8.31/lib/regcomp.c:2033
0x0000a45a      880f           mov byte [rdi], cl                      ; ../coreutils-8.31/lib/regcomp.c:2034
0x0000a45c      7e15           jle 0xa473                              ; ../coreutils-8.31/lib/regcomp.c:2037
0x0000a45e      483b4630       cmp rax, qword [rsi + 0x30]
0x0000a462      740f           je 0xa473
0x0000a464      4c8b4e10       mov r9, qword [rsi + 0x10]              ; ../coreutils-8.31/lib/regcomp.c:2038
0x0000a468      41833c81ff     cmp dword [r9 + rax*4], 0xffffffff
0x0000a46d      0f847c000000   je 0xa4ef
0x0000a473      80f95c         cmp cl, 0x5c                            ; ../coreutils-8.31/lib/regcomp.c:2045
0x0000a476      7468           je 0xa4e0
0x0000a478      80f95b         cmp cl, 0x5b                            ; ../coreutils-8.31/lib/regcomp.c:2056
0x0000a47b      7433           je 0xa4b0
0x0000a47d      80f95d         cmp cl, 0x5d                            ; ../coreutils-8.31/lib/regcomp.c:2091
0x0000a480      0f849a000000   je 0xa520
0x0000a486      80f95e         cmp cl, 0x5e
0x0000a489      0f8481000000   je 0xa510
0x0000a48f      80f92d         cmp cl, 0x2d
0x0000a492      755b           jne 0xa4ef
0x0000a494      c6470816       mov byte [rdi + 8], 0x16                ; ../coreutils-8.31/lib/regcomp.c:2094 ; [0x16:1]=0
0x0000a498      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regcomp.c:2105
0x0000a49d      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2095
0x0000a49e      6690           nop
0x0000a4a0      c6470802       mov byte [rdi + 8], 2                   ; ../coreutils-8.31/lib/regcomp.c:2030
0x0000a4a4      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/regcomp.c:2031
0x0000a4a6      c3             ret
0x0000a4a7      660f1f840000.  nop word [rax + rax]
0x0000a4b0      488d4801       lea rcx, [rax + 1]                      ; ../coreutils-8.31/lib/regcomp.c:2060
0x0000a4b4      483b4e58       cmp rcx, qword [rsi + 0x58]
0x0000a4b8      7d46           jge 0xa500
0x0000a4ba      410fb6440001   movzx eax, byte [r8 + rax + 1]          ; ../coreutils-8.31/lib/regcomp.c:2061
0x0000a4c0      3c3a           cmp al, 0x3a                            ; ../coreutils-8.31/lib/regcomp.c:2066
0x0000a4c2      8807           mov byte [rdi], al                      ; ../coreutils-8.31/lib/regcomp.c:2064
0x0000a4c4      0f8496000000   je 0xa560                               ; ../coreutils-8.31/lib/regcomp.c:2066
0x0000a4ca      3c3d           cmp al, 0x3d
0x0000a4cc      0f847e000000   je 0xa550
0x0000a4d2      3c2e           cmp al, 0x2e
0x0000a4d4      752a           jne 0xa500
0x0000a4d6      c647081a       mov byte [rdi + 8], 0x1a                ; ../coreutils-8.31/lib/regcomp.c:2069 ; [0x1a:1]=0
0x0000a4da      b802000000     mov eax, 2                              ; ../coreutils-8.31/lib/regcomp.c:2065
0x0000a4df      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2070
0x0000a4e0      83e201         and edx, 1                              ; ../coreutils-8.31/lib/regcomp.c:2045
0x0000a4e3      740a           je 0xa4ef
0x0000a4e5      488d5001       lea rdx, [rax + 1]                      ; ../coreutils-8.31/lib/regcomp.c:2046
0x0000a4e9      483b5658       cmp rdx, qword [rsi + 0x58]
0x0000a4ed      7c41           jl 0xa530
0x0000a4ef      c6470801       mov byte [rdi + 8], 1                   ; ../coreutils-8.31/lib/regcomp.c:2103
0x0000a4f3      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regcomp.c:2105
0x0000a4f8      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2106
0x0000a4f9      0f1f80000000.  nop dword [rax]
0x0000a500      c6470801       mov byte [rdi + 8], 1                   ; ../coreutils-8.31/lib/regcomp.c:2084
0x0000a504      c6075b         mov byte [rdi], 0x5b                    ; ../coreutils-8.31/lib/regcomp.c:2085 ; '['
                                                                       ; [0x5b:1]=0
0x0000a507      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regcomp.c:2086
0x0000a50c      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2087
0x0000a50d      0f1f00         nop dword [rax]
0x0000a510      c6470819       mov byte [rdi + 8], 0x19                ; ../coreutils-8.31/lib/regcomp.c:2100 ; [0x19:1]=72
0x0000a514      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regcomp.c:2105
0x0000a519      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2101
0x0000a51a      660f1f440000   nop word [rax + rax]
0x0000a520      c6470815       mov byte [rdi + 8], 0x15                ; ../coreutils-8.31/lib/regcomp.c:2097 ; [0x15:1]=0
0x0000a524      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regcomp.c:2105
0x0000a529      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2098
0x0000a52a      660f1f440000   nop word [rax + rax]
0x0000a530      48895648       mov qword [rsi + 0x48], rdx             ; ../coreutils-8.31/lib/regcomp.c:2050
0x0000a534      410fb6440001   movzx eax, byte [r8 + rax + 1]          ; ../coreutils-8.31/lib/regcomp.c:2051
0x0000a53a      c6470801       mov byte [rdi + 8], 1                   ; ../coreutils-8.31/lib/regcomp.c:2053
0x0000a53e      8807           mov byte [rdi], al                      ; ../coreutils-8.31/lib/regcomp.c:2052
0x0000a540      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regcomp.c:2054
0x0000a545      c3             ret
0x0000a546      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a550      c647081c       mov byte [rdi + 8], 0x1c                ; ../coreutils-8.31/lib/regcomp.c:2073 ; [0x1c:1]=0
0x0000a554      b802000000     mov eax, 2                              ; ../coreutils-8.31/lib/regcomp.c:2065
0x0000a559      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2074
0x0000a55a      660f1f440000   nop word [rax + rax]
0x0000a560      83e204         and edx, 4                              ; ../coreutils-8.31/lib/regcomp.c:2077
0x0000a563      749b           je 0xa500
0x0000a565      c647081e       mov byte [rdi + 8], 0x1e                ; ../coreutils-8.31/lib/regcomp.c:2079 ; [0x1e:1]=0
0x0000a569      b802000000     mov eax, 2                              ; ../coreutils-8.31/lib/regcomp.c:2065
0x0000a56e      c3             ret                                     ; ../coreutils-8.31/lib/regcomp.c:2080
0x0000a56f      90             nop
;-- mark_opt_subexp:
0x0000a570      807e3011       cmp byte [rsi + 0x30], 0x11             ; ../coreutils-8.31/lib/regcomp.c:3858
0x0000a574      740a           je 0xa580
0x0000a576      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/regcomp.c:3864
0x0000a578      c3             ret
0x0000a579      0f1f80000000.  nop dword [rax]
0x0000a580      483b7e28       cmp rdi, qword [rsi + 0x28]             ; ../coreutils-8.31/lib/regcomp.c:3860
0x0000a584      75f0           jne 0xa576
0x0000a586      804e3208       or byte [rsi + 0x32], 8                 ; ../coreutils-8.31/lib/regcomp.c:3861
0x0000a58a      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/regcomp.c:3864
0x0000a58c      c3             ret
0x0000a58d      0f1f00         nop dword [rax]
;-- check_dst_limits_calc_pos_1:
0x0000a590      4157           push r15                                ; ../coreutils-8.31/lib/regexec.c:1905
0x0000a592      4156           push r14
0x0000a594      4989d1         mov r9, rdx
0x0000a597      4155           push r13
0x0000a599      4154           push r12
0x0000a59b      488d1449       lea rdx, [rcx + rcx*2]                  ; ../coreutils-8.31/lib/regexec.c:1907
0x0000a59f      55             push rbp                                ; ../coreutils-8.31/lib/regexec.c:1905
0x0000a5a0      53             push rbx
0x0000a5a1      4189f7         mov r15d, esi
0x0000a5a4      4883ec48       sub rsp, 0x48
0x0000a5a8      4c8bb7980000.  mov r14, qword [rdi + 0x98]             ; ../coreutils-8.31/lib/regexec.c:1906
0x0000a5af      48893c24       mov qword [rsp], rdi                    ; ../coreutils-8.31/lib/regexec.c:1905
0x0000a5b3      498b4630       mov rax, qword [r14 + 0x30]             ; ../coreutils-8.31/lib/regexec.c:1907
0x0000a5b7      4c8d24d0       lea r12, [rax + rdx*8]
0x0000a5bb      49837c240800   cmp qword [r12 + 8], 0                  ; ../coreutils-8.31/lib/regexec.c:1912
0x0000a5c1      0f8e8e010000   jle 0xa755
0x0000a5c7      4b8d0480       lea rax, [r8 + r8*4]                    ; ../coreutils-8.31/lib/regexec.c:1920
0x0000a5cb      4989cb         mov r11, rcx
0x0000a5ce      4489c9         mov ecx, r9d
0x0000a5d1      4d89c2         mov r10, r8
0x0000a5d4      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/regexec.c:1912
0x0000a5d6      89742420       mov dword [rsp + 0x20], esi             ; ../coreutils-8.31/lib/regexec.c:1971
0x0000a5da      48c1e003       shl rax, 3                              ; ../coreutils-8.31/lib/regexec.c:1920
0x0000a5de      4d89cf         mov r15, r9                             ; ../coreutils-8.31/lib/regexec.c:1971
0x0000a5e1      4c895c2410     mov qword [rsp + 0x10], r11
0x0000a5e6      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/regexec.c:1920
0x0000a5eb      b801000000     mov eax, 1
0x0000a5f0      48d3e0         shl rax, cl
0x0000a5f3      4889442418     mov qword [rsp + 0x18], rax
0x0000a5f8      f7d0           not eax                                 ; ../coreutils-8.31/lib/regexec.c:1959
0x0000a5fa      6689442426     mov word [rsp + 0x26], ax
0x0000a5ff      89f0           mov eax, esi                            ; ../coreutils-8.31/lib/regexec.c:1966
0x0000a601      83e001         and eax, 1
0x0000a604      8944240c       mov dword [rsp + 0xc], eax
0x0000a608      89f0           mov eax, esi                            ; ../coreutils-8.31/lib/regexec.c:1971
0x0000a60a      83e002         and eax, 2
0x0000a60d      89442408       mov dword [rsp + 8], eax
0x0000a611      eb22           jmp 0xa635
0x0000a613      0f1f440000     nop dword [rax + rax]
0x0000a618      80fa09         cmp dl, 9                               ; ../coreutils-8.31/lib/regexec.c:1915
0x0000a61b      0f844f010000   je 0xa770
0x0000a621      80fa04         cmp dl, 4
0x0000a624      7452           je 0xa678
0x0000a626      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/regexec.c:1912
0x0000a62a      49395c2408     cmp qword [r12 + 8], rbx
0x0000a62f      0f8e1b010000   jle 0xa750
0x0000a635      498b442410     mov rax, qword [r12 + 0x10]             ; ../coreutils-8.31/lib/regexec.c:1914
0x0000a63a      488b2cd8       mov rbp, qword [rax + rbx*8]
0x0000a63e      4889e8         mov rax, rbp                            ; ../coreutils-8.31/lib/regexec.c:1915
0x0000a641      48c1e004       shl rax, 4
0x0000a645      490306         add rax, qword [r14]
0x0000a648      0fb65008       movzx edx, byte [rax + 8]
0x0000a64c      80fa08         cmp dl, 8
0x0000a64f      75c7           jne 0xa618
0x0000a651      8b4c240c       mov ecx, dword [rsp + 0xc]              ; ../coreutils-8.31/lib/regexec.c:1966
0x0000a655      85c9           test ecx, ecx
0x0000a657      74cd           je 0xa626
0x0000a659      4c3938         cmp qword [rax], r15
0x0000a65c      75c8           jne 0xa626
0x0000a65e      4883c448       add rsp, 0x48                           ; ../coreutils-8.31/lib/regexec.c:1981
0x0000a662      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/regexec.c:1953 ; -1
0x0000a667      5b             pop rbx                                 ; ../coreutils-8.31/lib/regexec.c:1981
0x0000a668      5d             pop rbp
0x0000a669      415c           pop r12
0x0000a66b      415d           pop r13
0x0000a66d      415e           pop r14
0x0000a66f      415f           pop r15
0x0000a671      c3             ret
0x0000a672      660f1f440000   nop word [rax + rax]
0x0000a678      4983faff       cmp r10, 0xffffffffffffffff             ; ../coreutils-8.31/lib/regexec.c:1918
0x0000a67c      74a8           je 0xa626
0x0000a67e      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/regexec.c:1920
0x0000a682      4c8b6c2428     mov r13, qword [rsp + 0x28]
0x0000a687      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/regexec.c:1940
0x0000a68a      4c89642430     mov qword [rsp + 0x30], r12
0x0000a68f      48895c2438     mov qword [rsp + 0x38], rbx
0x0000a694      4d89d4         mov r12, r10
0x0000a697      4c03a8d80000.  add r13, qword [rax + 0xd8]             ; ../coreutils-8.31/lib/regexec.c:1920
0x0000a69e      488d446d00     lea rax, [rbp + rbp*2]                  ; ../coreutils-8.31/lib/regexec.c:1940
0x0000a6a3      4c89f5         mov rbp, r14
0x0000a6a6      4989fe         mov r14, rdi
0x0000a6a9      48c1e003       shl rax, 3
0x0000a6ad      4889c3         mov rbx, rax
0x0000a6b0      4d397500       cmp qword [r13], r14                    ; ../coreutils-8.31/lib/regexec.c:1926
0x0000a6b4      756a           jne 0xa720
0x0000a6b6      4983ff3f       cmp r15, 0x3f                           ; ../coreutils-8.31/lib/regexec.c:1929
0x0000a6ba      7f0c           jg 0xa6c8
0x0000a6bc      410fb74522     movzx eax, word [r13 + 0x22]            ; ../coreutils-8.31/lib/regexec.c:1930
0x0000a6c1      4885442418     test qword [rsp + 0x18], rax
0x0000a6c6      7458           je 0xa720
0x0000a6c8      488b4528       mov rax, qword [rbp + 0x28]             ; ../coreutils-8.31/lib/regexec.c:1940
0x0000a6cc      488b441810     mov rax, qword [rax + rbx + 0x10]
0x0000a6d1      488b08         mov rcx, qword [rax]
0x0000a6d4      48394c2410     cmp qword [rsp + 0x10], rcx             ; ../coreutils-8.31/lib/regexec.c:1941
0x0000a6d9      0f84c1000000   je 0xa7a0
0x0000a6df      8b742420       mov esi, dword [rsp + 0x20]             ; ../coreutils-8.31/lib/regexec.c:1949
0x0000a6e3      488b3c24       mov rdi, qword [rsp]
0x0000a6e7      4d89e0         mov r8, r12
0x0000a6ea      4c89fa         mov rdx, r15
0x0000a6ed      e89efeffff     call sym.check_dst_limits_calc_pos_1
0x0000a6f2      83f8ff         cmp eax, 0xffffffff                     ; ../coreutils-8.31/lib/regexec.c:1952
0x0000a6f5      0f8463ffffff   je 0xa65e
0x0000a6fb      85c0           test eax, eax                           ; ../coreutils-8.31/lib/regexec.c:1954
0x0000a6fd      7508           jne 0xa707
0x0000a6ff      8b742408       mov esi, dword [rsp + 8]
0x0000a703      85f6           test esi, esi
0x0000a705      757e           jne 0xa785
0x0000a707      4983ff3f       cmp r15, 0x3f                           ; ../coreutils-8.31/lib/regexec.c:1957
0x0000a70b      7f13           jg 0xa720
0x0000a70d      0fb7442426     movzx eax, word [rsp + 0x26]            ; ../coreutils-8.31/lib/regexec.c:1959
0x0000a712      6641214522     and word [r13 + 0x22], ax
0x0000a717      660f1f840000.  nop word [rax + rax]
0x0000a720      4983c528       add r13, 0x28                           ; ../coreutils-8.31/lib/regexec.c:1961
0x0000a724      41807df800     cmp byte [r13 - 8], 0
0x0000a729      7585           jne 0xa6b0
0x0000a72b      488b5c2438     mov rbx, qword [rsp + 0x38]
0x0000a730      4d89e2         mov r10, r12
0x0000a733      4c8b642430     mov r12, qword [rsp + 0x30]
0x0000a738      4989ee         mov r14, rbp
0x0000a73b      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/regexec.c:1912
0x0000a73f      49395c2408     cmp qword [r12 + 8], rbx                ; ../coreutils-8.31/lib/regexec.c:1852
0x0000a744      0f8febfeffff   jg 0xa635
0x0000a74a      660f1f440000   nop word [rax + rax]
0x0000a750      448b7c2420     mov r15d, dword [rsp + 0x20]
0x0000a755      4883c448       add rsp, 0x48
0x0000a759      4489f8         mov eax, r15d
0x0000a75c      5b             pop rbx
0x0000a75d      d1f8           sar eax, 1
0x0000a75f      5d             pop rbp
0x0000a760      415c           pop r12
0x0000a762      415d           pop r13                                 ; ../coreutils-8.31/lib/regexec.c:1843
0x0000a764      415e           pop r14
0x0000a766      415f           pop r15
0x0000a768      c3             ret
0x0000a769      0f1f80000000.  nop dword [rax]
0x0000a770      8b542408       mov edx, dword [rsp + 8]
0x0000a774      85d2           test edx, edx
0x0000a776      0f84aafeffff   je 0xa626
0x0000a77c      4c3938         cmp qword [rax], r15
0x0000a77f      0f85a1feffff   jne 0xa626
0x0000a785      4883c448       add rsp, 0x48
0x0000a789      31c0           xor eax, eax
0x0000a78b      5b             pop rbx
0x0000a78c      5d             pop rbp
0x0000a78d      415c           pop r12
0x0000a78f      415d           pop r13
0x0000a791      415e           pop r14                                 ; ../coreutils-8.31/lib/regexec.c:1815
0x0000a793      415f           pop r15
0x0000a795      c3             ret
0x0000a796      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a7a0      448b7c2420     mov r15d, dword [rsp + 0x20]
0x0000a7a5      4883c448       add rsp, 0x48
0x0000a7a9      5b             pop rbx
0x0000a7aa      5d             pop rbp
0x0000a7ab      4489f8         mov eax, r15d
0x0000a7ae      83e001         and eax, 1
0x0000a7b1      415c           pop r12
0x0000a7b3      f7d8           neg eax
0x0000a7b5      415d           pop r13                                 ; ../coreutils-8.31/lib/regexec.c:1864
0x0000a7b7      415e           pop r14
0x0000a7b9      415f           pop r15
0x0000a7bb      c3             ret
0x0000a7bc      0f1f4000       nop dword [rax]
;-- check_dst_limits_calc_pos:
0x0000a7c0      488b87d80000.  mov rax, qword [rdi + 0xd8]
0x0000a7c7      488d34b6       lea rsi, [rsi + rsi*4]                  ; ../coreutils-8.31/lib/regexec.c:1871
0x0000a7cb      488d04f0       lea rax, [rax + rsi*8]
0x0000a7cf      4c8b5010       mov r10, qword [rax + 0x10]
0x0000a7d3      4d39c2         cmp r10, r8                             ; ../coreutils-8.31/lib/regexec.c:1872
0x0000a7d6      7f48           jg 0xa820
0x0000a7d8      488b4018       mov rax, qword [rax + 0x18]             ; ../coreutils-8.31/lib/regexec.c:1874
0x0000a7dc      4c39c0         cmp rax, r8
0x0000a7df      7c1f           jl 0xa800                               ; ../coreutils-8.31/lib/regexec.c:1879
0x0000a7e1      31f6           xor esi, esi
0x0000a7e3      4d39c2         cmp r10, r8
0x0000a7e6      400f94c6       sete sil                                ; ../coreutils-8.31/lib/regexec.c:1868
0x0000a7ea      83ce02         or esi, 2
0x0000a7ed      4c39c0         cmp rax, r8
0x0000a7f0      7423           je 0xa815
0x0000a7f2      31c0           xor eax, eax
0x0000a7f4      4d39c2         cmp r10, r8
0x0000a7f7      7417           je 0xa810
0x0000a7f9      f3c3           ret
0x0000a7fb      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/regexec.c:1877
0x0000a800      b801000000     mov eax, 1
0x0000a805      c3             ret
0x0000a806      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/regexec.c:1865
0x0000a810      be01000000     mov esi, 1
0x0000a815      4d89c8         mov r8, r9
0x0000a818      e973fdffff     jmp sym.check_dst_limits_calc_pos_1
0x0000a81d      0f1f00         nop dword [rax]
0x0000a820      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/regcomp.c:1100 ; -1
0x0000a825      c3             ret
0x0000a826      662e0f1f8400.  nop word cs:[rax + rax]
;-- postorder:
0x0000a830      4154           push r12
0x0000a832      4989f4         mov r12, rsi                            ; ../coreutils-8.31/lib/regcomp.c:1107
0x0000a835      55             push rbp
0x0000a836      4889d5         mov rbp, rdx
0x0000a839      53             push rbx
0x0000a83a      4889fb         mov rbx, rdi
0x0000a83d      eb04           jmp 0xa843
0x0000a83f      90             nop
0x0000a840      4889c3         mov rbx, rax
0x0000a843      488b4308       mov rax, qword [rbx + 8]
0x0000a847      4885c0         test rax, rax
0x0000a84a      75f4           jne 0xa840
0x0000a84c      488b4310       mov rax, qword [rbx + 0x10]
0x0000a850      4885c0         test rax, rax
0x0000a853      75eb           jne 0xa840
0x0000a855      4889de         mov rsi, rbx
0x0000a858      4889ef         mov rdi, rbp
0x0000a85b      41ffd4         call r12
0x0000a85e      85c0           test eax, eax
0x0000a860      7534           jne 0xa896
0x0000a862      660f1f440000   nop word [rax + rax]
0x0000a868      488b13         mov rdx, qword [rbx]
0x0000a86b      4885d2         test rdx, rdx
0x0000a86e      7426           je 0xa896
0x0000a870      488b4210       mov rax, qword [rdx + 0x10]
0x0000a874      4839d8         cmp rax, rbx
0x0000a877      4889d3         mov rbx, rdx
0x0000a87a      400f94c6       sete sil
0x0000a87e      4885c0         test rax, rax
0x0000a881      0f94c1         sete cl
0x0000a884      4008ce         or sil, cl
0x0000a887      74b7           je 0xa840
0x0000a889      4889de         mov rsi, rbx
0x0000a88c      4889ef         mov rdi, rbp
0x0000a88f      41ffd4         call r12
0x0000a892      85c0           test eax, eax
0x0000a894      74d2           je 0xa868
0x0000a896      5b             pop rbx
0x0000a897      5d             pop rbp
0x0000a898      415c           pop r12
0x0000a89a      c3             ret
0x0000a89b      0f1f440000     nop dword [rax + rax]
;-- preorder:
0x0000a8a0      4154           push r12
0x0000a8a2      4989f4         mov r12, rsi                            ; ../coreutils-8.31/lib/regcomp.c:1138
0x0000a8a5      55             push rbp
0x0000a8a6      4889d5         mov rbp, rdx                            ; ../coreutils-8.31/lib/regcomp.c:1142
0x0000a8a9      53             push rbx
0x0000a8aa      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/regcomp.c:1146
0x0000a8ad      eb04           jmp 0xa8b3
0x0000a8af      90             nop
0x0000a8b0      4889d3         mov rbx, rdx
0x0000a8b3      4889de         mov rsi, rbx
0x0000a8b6      4889ef         mov rdi, rbp
0x0000a8b9      41ffd4         call r12                                ; ../coreutils-8.31/lib/regcomp.c:1147
0x0000a8bc      85c0           test eax, eax
0x0000a8be      752c           jne 0xa8ec
0x0000a8c0      488b5308       mov rdx, qword [rbx + 8]
0x0000a8c4      31c9           xor ecx, ecx
0x0000a8c6      4885d2         test rdx, rdx
0x0000a8c9      75e5           jne 0xa8b0
0x0000a8cb      eb06           jmp 0xa8d3
0x0000a8cd      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/regcomp.c:1151
0x0000a8d0      4889d3         mov rbx, rdx
0x0000a8d3      488b5310       mov rdx, qword [rbx + 0x10]
0x0000a8d7      4839ca         cmp rdx, rcx
0x0000a8da      7405           je 0xa8e1
0x0000a8dc      4885d2         test rdx, rdx
0x0000a8df      75cf           jne 0xa8b0
0x0000a8e1      488b13         mov rdx, qword [rbx]
0x0000a8e4      4889d9         mov rcx, rbx
0x0000a8e7      4885d2         test rdx, rdx
0x0000a8ea      75e4           jne 0xa8d0
0x0000a8ec      5b             pop rbx
0x0000a8ed      5d             pop rbp
0x0000a8ee      415c           pop r12
0x0000a8f0      c3             ret
0x0000a8f1      0f1f440000     nop dword [rax + rax]
0x0000a8f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_string_realloc_buffers:
0x0000a900      55             push rbp
0x0000a901      53             push rbx
0x0000a902      4889f5         mov rbp, rsi
0x0000a905      4889fb         mov rbx, rdi
0x0000a908      4883ec08       sub rsp, 8
0x0000a90c      83bf90000000.  cmp dword [rdi + 0x90], 1
0x0000a913      7e48           jle 0xa95d
0x0000a915      48b8ffffffff.  movabs rax, 0x1fffffffffffffff          ; 2305843009213693951
0x0000a91f      4839c6         cmp rsi, rax
0x0000a922      776c           ja 0xa990
0x0000a924      488b7f10       mov rdi, qword [rdi + 0x10]             ; ../coreutils-8.31/lib/regex_internal.c:28
0x0000a928      488d34b50000.  lea rsi, [rsi*4]                        ; ../coreutils-8.31/lib/regex_internal.c:29
0x0000a930      e85b76ffff     call sym.imp.realloc
0x0000a935      4885c0         test rax, rax
0x0000a938      7456           je 0xa990
0x0000a93a      488b7b18       mov rdi, qword [rbx + 0x18]             ; ../coreutils-8.31/lib/regex_internal.c:32
0x0000a93e      48894310       mov qword [rbx + 0x10], rax
0x0000a942      4885ff         test rdi, rdi
0x0000a945      7416           je 0xa95d
0x0000a947      488d34ed0000.  lea rsi, [rbp*8]
0x0000a94f      e83c76ffff     call sym.imp.realloc
0x0000a954      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/regex_internal.c:47
0x0000a957      7437           je 0xa990
0x0000a959      48894318       mov qword [rbx + 0x18], rax
0x0000a95d      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x0000a964      7512           jne 0xa978
0x0000a966      48896b40       mov qword [rbx + 0x40], rbp
0x0000a96a      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/regex_internal.c:42
0x0000a96e      31c0           xor eax, eax
0x0000a970      5b             pop rbx
0x0000a971      5d             pop rbp
0x0000a972      c3             ret
0x0000a973      0f1f440000     nop dword [rax + rax]
0x0000a978      488b7b08       mov rdi, qword [rbx + 8]
0x0000a97c      4889ee         mov rsi, rbp
0x0000a97f      e80c76ffff     call sym.imp.realloc                    ; ../coreutils-8.31/lib/regex_internal.c:48
0x0000a984      4885c0         test rax, rax
0x0000a987      7407           je 0xa990
0x0000a989      48894308       mov qword [rbx + 8], rax
0x0000a98d      ebd7           jmp 0xa966
0x0000a98f      90             nop
0x0000a990      4883c408       add rsp, 8
0x0000a994      b80c000000     mov eax, 0xc
0x0000a999      5b             pop rbx
0x0000a99a      5d             pop rbp
0x0000a99b      c3             ret
0x0000a99c      0f1f4000       nop dword [rax]
;-- re_node_set_insert_last:
0x0000a9a0      55             push rbp
0x0000a9a1      53             push rbx
0x0000a9a2      4889f5         mov rbp, rsi
0x0000a9a5      4889fb         mov rbx, rdi
0x0000a9a8      4883ec08       sub rsp, 8
0x0000a9ac      488b7708       mov rsi, qword [rdi + 8]
0x0000a9b0      483937         cmp qword [rdi], rsi                    ; ../coreutils-8.31/lib/regex_internal.c:1224
0x0000a9b3      488b4710       mov rax, qword [rdi + 0x10]
0x0000a9b7      741f           je 0xa9d8
0x0000a9b9      488d5601       lea rdx, [rsi + 1]
0x0000a9bd      48895308       mov qword [rbx + 8], rdx
0x0000a9c1      48892cf0       mov qword [rax + rsi*8], rbp
0x0000a9c5      b801000000     mov eax, 1
0x0000a9ca      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/regex_internal.c:1214
0x0000a9ce      5b             pop rbx
0x0000a9cf      5d             pop rbp
0x0000a9d0      c3             ret
0x0000a9d1      0f1f80000000.  nop dword [rax]
0x0000a9d8      4883c601       add rsi, 1
0x0000a9dc      488d1436       lea rdx, [rsi + rsi]
0x0000a9e0      48c1e604       shl rsi, 4
0x0000a9e4      488917         mov qword [rdi], rdx
0x0000a9e7      4889c7         mov rdi, rax
0x0000a9ea      e8a175ffff     call sym.imp.realloc
0x0000a9ef      4885c0         test rax, rax
0x0000a9f2      740c           je 0xaa00
0x0000a9f4      48894310       mov qword [rbx + 0x10], rax
0x0000a9f8      488b7308       mov rsi, qword [rbx + 8]
0x0000a9fc      ebbb           jmp 0xa9b9
0x0000a9fe      6690           nop
0x0000aa00      31c0           xor eax, eax
0x0000aa02      ebc6           jmp 0xa9ca                              ; ../coreutils-8.31/lib/regex_internal.c:1160
0x0000aa04      6690           nop
0x0000aa06      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_node_set_insert:
0x0000aa10      55             push rbp
0x0000aa11      53             push rbx
0x0000aa12      4889f5         mov rbp, rsi
0x0000aa15      4889fb         mov rbx, rdi
0x0000aa18      4883ec08       sub rsp, 8
0x0000aa1c      488b17         mov rdx, qword [rdi]
0x0000aa1f      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/regex_internal.c:1168
0x0000aa22      7424           je 0xaa48
0x0000aa24      488b7708       mov rsi, qword [rdi + 8]                ; ../coreutils-8.31/lib/regex_internal.c:1200
0x0000aa28      488b4710       mov rax, qword [rdi + 0x10]
0x0000aa2c      4885f6         test rsi, rsi
0x0000aa2f      754f           jne 0xaa80
0x0000aa31      488928         mov qword [rax], rbp
0x0000aa34      4883470801     add qword [rdi + 8], 1
0x0000aa39      b801000000     mov eax, 1
0x0000aa3e      4883c408       add rsp, 8
0x0000aa42      5b             pop rbx
0x0000aa43      5d             pop rbp
0x0000aa44      c3             ret
0x0000aa45      0f1f00         nop dword [rax]
0x0000aa48      48c707010000.  mov qword [rdi], 1
0x0000aa4f      48c747080100.  mov qword [rdi + 8], 1
0x0000aa57      bf08000000     mov edi, 8
0x0000aa5c      e8bf74ffff     call sym.imp.malloc
0x0000aa61      4885c0         test rax, rax
0x0000aa64      48894310       mov qword [rbx + 0x10], rax
0x0000aa68      0f848a000000   je 0xaaf8
0x0000aa6e      488928         mov qword [rax], rbp
0x0000aa71      4883c408       add rsp, 8
0x0000aa75      b801000000     mov eax, 1
0x0000aa7a      5b             pop rbx
0x0000aa7b      5d             pop rbp
0x0000aa7c      c3             ret                                     ; ../coreutils-8.31/lib/regex_internal.c:1187
0x0000aa7d      0f1f00         nop dword [rax]
0x0000aa80      4839f2         cmp rdx, rsi
0x0000aa83      0f8487000000   je 0xab10
0x0000aa89      483928         cmp qword [rax], rbp
0x0000aa8c      488d14f50000.  lea rdx, [rsi*8]
0x0000aa94      7e3a           jle 0xaad0
0x0000aa96      4885f6         test rsi, rsi
0x0000aa99      7e18           jle 0xaab3                              ; ../coreutils-8.31/lib/regex_internal.c:1197
0x0000aa9b      4801c2         add rdx, rax
0x0000aa9e      6690           nop
0x0000aaa0      488b4af8       mov rcx, qword [rdx - 8]
0x0000aaa4      4883ea08       sub rdx, 8
0x0000aaa8      48894a08       mov qword [rdx + 8], rcx
0x0000aaac      4839d0         cmp rax, rdx
0x0000aaaf      75ef           jne 0xaaa0
0x0000aab1      31d2           xor edx, edx
0x0000aab3      48892c10       mov qword [rax + rdx], rbp
0x0000aab7      b801000000     mov eax, 1
0x0000aabc      4883430801     add qword [rbx + 8], 1
0x0000aac1      e978ffffff     jmp 0xaa3e
0x0000aac6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/regex_internal.c:1193
0x0000aad0      488b4c10f8     mov rcx, qword [rax + rdx - 8]
0x0000aad5      4839cd         cmp rbp, rcx
0x0000aad8      7dd9           jge 0xaab3
0x0000aada      660f1f440000   nop word [rax + rax]
0x0000aae0      48890c10       mov qword [rax + rdx], rcx
0x0000aae4      4883ea08       sub rdx, 8
0x0000aae8      488b4c10f8     mov rcx, qword [rax + rdx - 8]
0x0000aaed      4839e9         cmp rcx, rbp
0x0000aaf0      7fee           jg 0xaae0
0x0000aaf2      ebbf           jmp 0xaab3
0x0000aaf4      0f1f4000       nop dword [rax]
0x0000aaf8      48c743080000.  mov qword [rbx + 8], 0
0x0000ab00      48c703000000.  mov qword [rbx], 0
0x0000ab07      e932ffffff     jmp 0xaa3e
0x0000ab0c      0f1f4000       nop dword [rax]
0x0000ab10      488d1436       lea rdx, [rsi + rsi]
0x0000ab14      48c1e604       shl rsi, 4
0x0000ab18      488917         mov qword [rdi], rdx
0x0000ab1b      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/regex_internal.c:1178
0x0000ab1e      e86d74ffff     call sym.imp.realloc
0x0000ab23      4885c0         test rax, rax
0x0000ab26      740d           je 0xab35                               ; ../coreutils-8.31/lib/regex_internal.c:1446
0x0000ab28      48894310       mov qword [rbx + 0x10], rax
0x0000ab2c      488b7308       mov rsi, qword [rbx + 8]
0x0000ab30      e954ffffff     jmp 0xaa89
0x0000ab35      31c0           xor eax, eax
0x0000ab37      e902ffffff     jmp 0xaa3e
0x0000ab3c      0f1f4000       nop dword [rax]
;-- register_state:
0x0000ab40      4156           push r14
0x0000ab42      4155           push r13
0x0000ab44      4989fe         mov r14, rdi
0x0000ab47      4154           push r12
0x0000ab49      55             push rbp
0x0000ab4a      4989d4         mov r12, rdx                            ; ../coreutils-8.31/lib/regex_internal.c:849
0x0000ab4d      53             push rbx
0x0000ab4e      488b5e10       mov rbx, qword [rsi + 0x10]
0x0000ab52      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/regex_internal.c:847
0x0000ab55      488916         mov qword [rsi], rdx
0x0000ab58      48c746280000.  mov qword [rsi + 0x28], 0
0x0000ab60      4c8d6e20       lea r13, [rsi + 0x20]
0x0000ab64      488d3cdd0000.  lea rdi, [rbx*8]                        ; ../coreutils-8.31/lib/regex_internal.c:1455
0x0000ab6c      48895e20       mov qword [rsi + 0x20], rbx
0x0000ab70      e8ab73ffff     call sym.imp.malloc
0x0000ab75      4885c0         test rax, rax
0x0000ab78      48894530       mov qword [rbp + 0x30], rax
0x0000ab7c      7440           je 0xabbe
0x0000ab7e      4885db         test rbx, rbx
0x0000ab81      7e4d           jle 0xabd0
0x0000ab83      31db           xor ebx, ebx
0x0000ab85      eb13           jmp 0xab9a
0x0000ab87      660f1f840000.  nop word [rax + rax]
0x0000ab90      4883c301       add rbx, 1
0x0000ab94      48395d10       cmp qword [rbp + 0x10], rbx
0x0000ab98      7e36           jle 0xabd0                              ; ../coreutils-8.31/lib/regex_internal.c:1459
0x0000ab9a      488b4518       mov rax, qword [rbp + 0x18]
0x0000ab9e      488b34d8       mov rsi, qword [rax + rbx*8]
0x0000aba2      4889f0         mov rax, rsi
0x0000aba5      48c1e004       shl rax, 4                              ; ../coreutils-8.31/lib/regex_internal.c:1454
0x0000aba9      490306         add rax, qword [r14]
0x0000abac      f6400808       test byte [rax + 8], 8
0x0000abb0      75de           jne 0xab90
0x0000abb2      4c89ef         mov rdi, r13
0x0000abb5      e8e6fdffff     call sym.re_node_set_insert_last
0x0000abba      84c0           test al, al
0x0000abbc      75d2           jne 0xab90
0x0000abbe      5b             pop rbx
0x0000abbf      b80c000000     mov eax, 0xc
0x0000abc4      5d             pop rbp
0x0000abc5      415c           pop r12
0x0000abc7      415d           pop r13
0x0000abc9      415e           pop r14                                 ; ../coreutils-8.31/lib/regex_internal.c:1464
0x0000abcb      c3             ret
0x0000abcc      0f1f4000       nop dword [rax]
0x0000abd0      4d23a6880000.  and r12, qword [r14 + 0x88]
0x0000abd7      498b4640       mov rax, qword [r14 + 0x40]
0x0000abdb      4b8d1464       lea rdx, [r12 + r12*2]
0x0000abdf      488d1cd0       lea rbx, [rax + rdx*8]
0x0000abe3      488b13         mov rdx, qword [rbx]                    ; ../coreutils-8.31/lib/regex_internal.c:1476
0x0000abe6      48395308       cmp qword [rbx + 8], rdx
0x0000abea      488b4310       mov rax, qword [rbx + 0x10]
0x0000abee      488d7201       lea rsi, [rdx + 1]
0x0000abf2      7e12           jle 0xac06
0x0000abf4      488933         mov qword [rbx], rsi
0x0000abf7      48892cd0       mov qword [rax + rdx*8], rbp
0x0000abfb      31c0           xor eax, eax
0x0000abfd      5b             pop rbx
0x0000abfe      5d             pop rbp
0x0000abff      415c           pop r12
0x0000ac01      415d           pop r13
0x0000ac03      415e           pop r14
0x0000ac05      c3             ret
0x0000ac06      4c8d2436       lea r12, [rsi + rsi]
0x0000ac0a      4889c7         mov rdi, rax
0x0000ac0d      48c1e604       shl rsi, 4
0x0000ac11      e87a73ffff     call sym.imp.realloc
0x0000ac16      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/regex_internal.c:411
0x0000ac19      74a3           je 0xabbe
0x0000ac1b      488b13         mov rdx, qword [rbx]
0x0000ac1e      48894310       mov qword [rbx + 0x10], rax
0x0000ac22      4c896308       mov qword [rbx + 8], r12
0x0000ac26      488d7201       lea rsi, [rdx + 1]
0x0000ac2a      ebc8           jmp 0xabf4                              ; ../coreutils-8.31/lib/regex_internal.c:415
0x0000ac2c      0f1f4000       nop dword [rax]
;-- build_upper_buffer:
0x0000ac30      4154           push r12
0x0000ac32      4c8b6758       mov r12, qword [rdi + 0x58]
0x0000ac36      4c396740       cmp qword [rdi + 0x40], r12
0x0000ac3a      55             push rbp
0x0000ac3b      4889fd         mov rbp, rdi
0x0000ac3e      4c0f4e6740     cmovle r12, qword [rdi + 0x40]          ; ../coreutils-8.31/lib/regex_internal.c:417
0x0000ac43      53             push rbx
0x0000ac44      488b5f30       mov rbx, qword [rdi + 0x30]
0x0000ac48      4939dc         cmp r12, rbx
0x0000ac4b      7e38           jle 0xac85
0x0000ac4d      e8fe6fffff     call sym.imp.__ctype_toupper_loc        ; ../coreutils-8.31/lib/regex_internal.c:418
0x0000ac52      660f1f440000   nop word [rax + rax]
0x0000ac58      488b5500       mov rdx, qword [rbp]                    ; ../coreutils-8.31/lib/regex_internal.c:420
0x0000ac5c      488b4d78       mov rcx, qword [rbp + 0x78]
0x0000ac60      4801da         add rdx, rbx
0x0000ac63      48035528       add rdx, qword [rbp + 0x28]
0x0000ac67      4885c9         test rcx, rcx
0x0000ac6a      0fb612         movzx edx, byte [rdx]
0x0000ac6d      7529           jne 0xac98
0x0000ac6f      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/regex_internal.c:423
0x0000ac72      488b4d08       mov rcx, qword [rbp + 8]
0x0000ac76      8b1496         mov edx, dword [rsi + rdx*4]
0x0000ac79      881419         mov byte [rcx + rbx], dl
0x0000ac7c      4883c301       add rbx, 1
0x0000ac80      4939dc         cmp r12, rbx
0x0000ac83      75d3           jne 0xac58
0x0000ac85      48895d30       mov qword [rbp + 0x30], rbx
0x0000ac89      48895d38       mov qword [rbp + 0x38], rbx
0x0000ac8d      5b             pop rbx
0x0000ac8e      5d             pop rbp
0x0000ac8f      415c           pop r12
0x0000ac91      c3             ret
0x0000ac92      660f1f440000   nop word [rax + rax]
0x0000ac98      0fb61411       movzx edx, byte [rcx + rdx]
0x0000ac9c      ebd1           jmp 0xac6f
0x0000ac9e      6690           nop
;-- build_wcs_buffer:
0x0000aca0      4157           push r15
0x0000aca2      4156           push r14
0x0000aca4      4155           push r13
0x0000aca6      4154           push r12
0x0000aca8      55             push rbp
0x0000aca9      53             push rbx
0x0000acaa      4889fb         mov rbx, rdi
0x0000acad      4883ec68       sub rsp, 0x68
0x0000acb1      4c8b6758       mov r12, qword [rdi + 0x58]
0x0000acb5      488b6f30       mov rbp, qword [rdi + 0x30]
0x0000acb9      64488b042528.  mov rax, qword fs:[0x28]
0x0000acc2      4889442458     mov qword [rsp + 0x58], rax
0x0000acc7      31c0           xor eax, eax
0x0000acc9      4c396740       cmp qword [rdi + 0x40], r12
0x0000accd      4c0f4e6740     cmovle r12, qword [rdi + 0x40]
0x0000acd2      4939ec         cmp r12, rbp                            ; ../coreutils-8.31/lib/regex_internal.c:103
0x0000acd5      0f8e89000000   jle 0xad64                              ; ../coreutils-8.31/lib/regex_internal.c:104
0x0000acdb      4c8d7720       lea r14, [rdi + 0x20]
0x0000acdf      4c8d6c240c     lea r13, [rsp + 0xc]
0x0000ace4      0f1f4000       nop dword [rax]
0x0000ace8      488b7b78       mov rdi, qword [rbx + 0x78]
0x0000acec      4c89e2         mov rdx, r12
0x0000acef      4c8b7b20       mov r15, qword [rbx + 0x20]             ; ../coreutils-8.31/lib/regex_internal.c:119
0x0000acf3      4829ea         sub rdx, rbp
0x0000acf6      4885ff         test rdi, rdi
0x0000acf9      0f85e1000000   jne 0xade0
0x0000acff      488b7328       mov rsi, qword [rbx + 0x28]
0x0000ad03      4801ee         add rsi, rbp
0x0000ad06      480333         add rsi, qword [rbx]
0x0000ad09      4c89f1         mov rcx, r14
0x0000ad0c      4c89ef         mov rdi, r13
0x0000ad0f      e89cf6ffff     call sym.rpl_mbrtowc
0x0000ad14      488d50ff       lea rdx, [rax - 1]
0x0000ad18      4883fafd       cmp rdx, 0xfffffffffffffffd
0x0000ad1c      0f878e000000   ja 0xadb0
0x0000ad22      4883f8fe       cmp rax, 0xfffffffffffffffe
0x0000ad26      8b54240c       mov edx, dword [rsp + 0xc]
0x0000ad2a      7474           je 0xada0
0x0000ad2c      488b4b10       mov rcx, qword [rbx + 0x10]
0x0000ad30      488d7501       lea rsi, [rbp + 1]
0x0000ad34      488d3cad0000.  lea rdi, [rbp*4]
0x0000ad3c      8914a9         mov dword [rcx + rbp*4], edx
0x0000ad3f      4801c5         add rbp, rax
0x0000ad42      4839ee         cmp rsi, rbp
0x0000ad45      7d49           jge 0xad90                              ; ../coreutils-8.31/lib/regex_internal.c:98
0x0000ad47      488d543904     lea rdx, [rcx + rdi + 4]
0x0000ad4c      488d04a9       lea rax, [rcx + rbp*4]
0x0000ad50      c702ffffffff   mov dword [rdx], 0xffffffff             ; [0xffffffff:4]=-1 ; -1
0x0000ad56      4883c204       add rdx, 4
0x0000ad5a      4839d0         cmp rax, rdx
0x0000ad5d      75f1           jne 0xad50
0x0000ad5f      4c39e5         cmp rbp, r12
0x0000ad62      7c84           jl 0xace8
0x0000ad64      488b442458     mov rax, qword [rsp + 0x58]
0x0000ad69      644833042528.  xor rax, qword fs:[0x28]
0x0000ad72      48896b30       mov qword [rbx + 0x30], rbp
0x0000ad76      48896b38       mov qword [rbx + 0x38], rbp             ; ../coreutils-8.31/lib/regex_internal.c:141
0x0000ad7a      0f85de000000   jne 0xae5e
0x0000ad80      4883c468       add rsp, 0x68
0x0000ad84      5b             pop rbx
0x0000ad85      5d             pop rbp
0x0000ad86      415c           pop r12                                 ; ../coreutils-8.31/lib/regex_internal.c:120
0x0000ad88      415d           pop r13
0x0000ad8a      415e           pop r14
0x0000ad8c      415f           pop r15
0x0000ad8e      c3             ret
0x0000ad8f      90             nop
0x0000ad90      4889f5         mov rbp, rsi
0x0000ad93      4c39e5         cmp rbp, r12
0x0000ad96      0f8c4cffffff   jl 0xace8                               ; ../coreutils-8.31/lib/regex_internal.c:126
0x0000ad9c      ebc6           jmp 0xad64
0x0000ad9e      6690           nop
0x0000ada0      488b4358       mov rax, qword [rbx + 0x58]
0x0000ada4      48394340       cmp qword [rbx + 0x40], rax             ; ../coreutils-8.31/lib/regex_internal.c:127
0x0000ada8      0f8c9a000000   jl 0xae48
0x0000adae      6690           nop
0x0000adb0      488b03         mov rax, qword [rbx]
0x0000adb3      488b4b78       mov rcx, qword [rbx + 0x78]
0x0000adb7      4801e8         add rax, rbp
0x0000adba      48034328       add rax, qword [rbx + 0x28]
0x0000adbe      4885c9         test rcx, rcx
0x0000adc1      0fb610         movzx edx, byte [rax]
0x0000adc4      8954240c       mov dword [rsp + 0xc], edx
0x0000adc8      0f8583000000   jne 0xae51
0x0000adce      4c897b20       mov qword [rbx + 0x20], r15
0x0000add2      b801000000     mov eax, 1
0x0000add7      e950ffffff     jmp 0xad2c
0x0000addc      0f1f4000       nop dword [rax]
0x0000ade0      8b8b90000000   mov ecx, dword [rbx + 0x90]
0x0000ade6      31c0           xor eax, eax
0x0000ade8      488d742410     lea rsi, [rsp + 0x10]
0x0000aded      85c9           test ecx, ecx
0x0000adef      7f20           jg 0xae11
0x0000adf1      e913ffffff     jmp 0xad09
0x0000adf6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000ae00      4883c001       add rax, 1
0x0000ae04      4839c2         cmp rdx, rax                            ; ../coreutils-8.31/lib/regex_internal.c:113
0x0000ae07      0f84fcfeffff   je 0xad09
0x0000ae0d      488b7b78       mov rdi, qword [rbx + 0x78]
0x0000ae11      488b0b         mov rcx, qword [rbx]
0x0000ae14      4801e9         add rcx, rbp
0x0000ae17      4801c1         add rcx, rax
0x0000ae1a      48034b28       add rcx, qword [rbx + 0x28]
0x0000ae1e      0fb609         movzx ecx, byte [rcx]
0x0000ae21      0fb60c0f       movzx ecx, byte [rdi + rcx]
0x0000ae25      488b7b08       mov rdi, qword [rbx + 8]
0x0000ae29      4801ef         add rdi, rbp
0x0000ae2c      880c07         mov byte [rdi + rax], cl
0x0000ae2f      880c06         mov byte [rsi + rax], cl
0x0000ae32      8d4801         lea ecx, [rax + 1]
0x0000ae35      3b8b90000000   cmp ecx, dword [rbx + 0x90]
0x0000ae3b      7cc3           jl 0xae00
0x0000ae3d      e9c7feffff     jmp 0xad09
0x0000ae42      660f1f440000   nop word [rax + rax]
0x0000ae48      4c897b20       mov qword [rbx + 0x20], r15
0x0000ae4c      e913ffffff     jmp 0xad64
0x0000ae51      0fb61411       movzx edx, byte [rcx + rdx]
0x0000ae55      8954240c       mov dword [rsp + 0xc], edx
0x0000ae59      e970ffffff     jmp 0xadce
0x0000ae5e      e84d6fffff     call sym.imp.__stack_chk_fail
0x0000ae63      0f1f00         nop dword [rax]
0x0000ae66      662e0f1f8400.  nop word cs:[rax + rax]
;-- build_wcs_upper_buffer:
0x0000ae70      4157           push r15
0x0000ae72      4156           push r14                                ; ../coreutils-8.31/lib/regex_internal.c:154
0x0000ae74      4989fe         mov r14, rdi
0x0000ae77      4155           push r13
0x0000ae79      4154           push r12
0x0000ae7b      55             push rbp
0x0000ae7c      53             push rbx
0x0000ae7d      4881eca80000.  sub rsp, 0xa8
0x0000ae84      488b5f58       mov rbx, qword [rdi + 0x58]
0x0000ae88      4c8b7f30       mov r15, qword [rdi + 0x30]
0x0000ae8c      64488b042528.  mov rax, qword fs:[0x28]
0x0000ae95      488984249800.  mov qword [rsp + 0x98], rax
0x0000ae9d      31c0           xor eax, eax
0x0000ae9f      48395f40       cmp qword [rdi + 0x40], rbx             ; ../coreutils-8.31/lib/regex_internal.c:114
0x0000aea3      480f4e5f40     cmovle rbx, qword [rdi + 0x40]          ; ../coreutils-8.31/lib/regex_internal.c:105
0x0000aea8      80bf8a000000.  cmp byte [rdi + 0x8a], 0
0x0000aeaf      750b           jne 0xaebc
0x0000aeb1      48837f7800     cmp qword [rdi + 0x78], 0
0x0000aeb6      0f8484010000   je 0xb040
0x0000aebc      4d8b6e38       mov r13, qword [r14 + 0x38]
0x0000aec0      4939df         cmp r15, rbx
0x0000aec3      7c3b           jl 0xaf00
0x0000aec5      4d897e30       mov qword [r14 + 0x30], r15
0x0000aec9      4d896e38       mov qword [r14 + 0x38], r13
0x0000aecd      31c0           xor eax, eax
0x0000aecf      488b8c249800.  mov rcx, qword [rsp + 0x98]
0x0000aed7      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000aee0      0f8584050000   jne 0xb46a
0x0000aee6      4881c4a80000.  add rsp, 0xa8
0x0000aeed      5b             pop rbx
0x0000aeee      5d             pop rbp
0x0000aeef      415c           pop r12
0x0000aef1      415d           pop r13
0x0000aef3      415e           pop r14
0x0000aef5      415f           pop r15
0x0000aef7      c3             ret
0x0000aef8      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/regex_internal.c:-9
0x0000af00      498d4620       lea rax, [r14 + 0x20]
0x0000af04      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/regex_internal.c:-8
0x0000af09      4889d8         mov rax, rbx
0x0000af0c      4c29f8         sub rax, r15
0x0000af0f      4889442410     mov qword [rsp + 0x10], rax
0x0000af14      488d442444     lea rax, [rsp + 0x44]
0x0000af19      4889442420     mov qword [rsp + 0x20], rax             ; ../coreutils-8.31/lib/regex_internal.c:5
0x0000af1e      498b5678       mov rdx, qword [r14 + 0x78]
0x0000af22      498b4620       mov rax, qword [r14 + 0x20]
0x0000af26      4885d2         test rdx, rdx
0x0000af29      4889442448     mov qword [rsp + 0x48], rax
0x0000af2e      0f8505030000   jne 0xb239
0x0000af34      498b6e28       mov rbp, qword [r14 + 0x28]
0x0000af38      4c01ed         add rbp, r13
0x0000af3b      49032e         add rbp, qword [r14]
0x0000af3e      48896c2418     mov qword [rsp + 0x18], rbp
0x0000af43      488b4c2408     mov rcx, qword [rsp + 8]
0x0000af48      488b542410     mov rdx, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/regex_internal.c:8
0x0000af4d      488b742418     mov rsi, qword [rsp + 0x18]
0x0000af52      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0000af57      e854f4ffff     call sym.rpl_mbrtowc                    ; ../coreutils-8.31/lib/regex_internal.c:9
0x0000af5c      4889c5         mov rbp, rax
0x0000af5f      488d40ff       lea rax, [rax - 1]
0x0000af63      4883f8fc       cmp rax, 0xfffffffffffffffc
0x0000af67      4889442420     mov qword [rsp + 0x20], rax
0x0000af6c      0f8737030000   ja 0xb2a9
0x0000af72      8b542444       mov edx, dword [rsp + 0x44]
0x0000af76      89d7           mov edi, edx
0x0000af78      89542410       mov dword [rsp + 0x10], edx
0x0000af7c      e8cf70ffff     call sym.imp.towupper
0x0000af81      8b542410       mov edx, dword [rsp + 0x10]
0x0000af85      4189c4         mov r12d, eax
0x0000af88      4c897c2408     mov qword [rsp + 8], r15
0x0000af8d      39c2           cmp edx, eax
0x0000af8f      0f84fb020000   je 0xb290
0x0000af95      488d4c2450     lea rcx, [rsp + 0x50]                   ; ../coreutils-8.31/lib/regex_internal.c:15
0x0000af9a      488d542448     lea rdx, [rsp + 0x48]
0x0000af9f      89c6           mov esi, eax
0x0000afa1      4889cf         mov rdi, rcx
0x0000afa4      48894c2410     mov qword [rsp + 0x10], rcx
0x0000afa9      e8826fffff     call sym.imp.wcrtomb
0x0000afae      4839c5         cmp rbp, rax
0x0000afb1      4989c3         mov r11, rax
0x0000afb4      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0000afb9      0f8587030000   jne 0xb346
0x0000afbf      498b7e08       mov rdi, qword [r14 + 8]
0x0000afc3      4889ea         mov rdx, rbp
0x0000afc6      4889ce         mov rsi, rcx
0x0000afc9      4c01ff         add rdi, r15
0x0000afcc      e80f6fffff     call sym.imp.memcpy                     ; ../coreutils-8.31/lib/regex_internal.c:70
0x0000afd1      4180be8c0000.  cmp byte [r14 + 0x8c], 0
0x0000afd9      4a8d442d00     lea rax, [rbp + r13]
0x0000afde      0f8531030000   jne 0xb315                              ; ../coreutils-8.31/lib/regex_internal.c:74
0x0000afe4      4983c701       add r15, 1
0x0000afe8      488b742408     mov rsi, qword [rsp + 8]
0x0000afed      498b5610       mov rdx, qword [r14 + 0x10]
0x0000aff1      498d4c2fff     lea rcx, [r15 + rbp - 1]
0x0000aff6      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/regex_internal.c:75
0x0000aff9      4939cf         cmp r15, rcx
0x0000affc      488d04b50000.  lea rax, [rsi*4]
0x0000b004      448924b2       mov dword [rdx + rsi*4], r12d
0x0000b008      0f8db2feffff   jge 0xaec0
0x0000b00e      488d440204     lea rax, [rdx + rax + 4]
0x0000b013      488d148a       lea rdx, [rdx + rcx*4]
0x0000b017      660f1f840000.  nop word [rax + rax]
0x0000b020      c700ffffffff   mov dword [rax], 0xffffffff             ; [0xffffffff:4]=-1 ; -1
0x0000b026      4883c004       add rax, 4
0x0000b02a      4839c2         cmp rdx, rax
0x0000b02d      75f1           jne 0xb020
0x0000b02f      4989cf         mov r15, rcx
0x0000b032      e989feffff     jmp 0xaec0
0x0000b037      660f1f840000.  nop word [rax + rax]
0x0000b040      80bf8c000000.  cmp byte [rdi + 0x8c], 0
0x0000b047      0f856ffeffff   jne 0xaebc
0x0000b04d      4939df         cmp r15, rbx
0x0000b050      0f8d92010000   jge 0xb1e8
0x0000b056      488d4720       lea rax, [rdi + 0x20]                   ; ../coreutils-8.31/lib/regex_internal.c:-81
0x0000b05a      4889442408     mov qword [rsp + 8], rax
0x0000b05f      488d442444     lea rax, [rsp + 0x44]
0x0000b064      4889442430     mov qword [rsp + 0x30], rax
0x0000b069      488d442448     lea rax, [rsp + 0x48]
0x0000b06e      4889442438     mov qword [rsp + 0x38], rax             ; ../coreutils-8.31/lib/regex_internal.c:-80
0x0000b073      488d442450     lea rax, [rsp + 0x50]
0x0000b078      4889442428     mov qword [rsp + 0x28], rax
0x0000b07d      0f1f00         nop dword [rax]
0x0000b080      498b6e28       mov rbp, qword [r14 + 0x28]             ; ../coreutils-8.31/lib/regex_internal.c:-67
0x0000b084      4d89fd         mov r13, r15                            ; ../coreutils-8.31/lib/regex_internal.c:-66
0x0000b087      4c01fd         add rbp, r15
0x0000b08a      49032e         add rbp, qword [r14]
0x0000b08d      440fb66500     movzx r12d, byte [rbp]
0x0000b092      41f6c480       test r12b, 0x80
0x0000b096      7512           jne 0xb0aa
0x0000b098      488b7c2408     mov rdi, qword [rsp + 8]
0x0000b09d      e80e70ffff     call sym.imp.mbsinit
0x0000b0a2      85c0           test eax, eax
0x0000b0a4      0f85ee000000   jne 0xb198
0x0000b0aa      498b4620       mov rax, qword [r14 + 0x20]
0x0000b0ae      488b7c2430     mov rdi, qword [rsp + 0x30]             ; ../coreutils-8.31/lib/regex_internal.c:-63
0x0000b0b3      4889da         mov rdx, rbx
0x0000b0b6      488b4c2408     mov rcx, qword [rsp + 8]
0x0000b0bb      4c29fa         sub rdx, r15
0x0000b0be      4889ee         mov rsi, rbp
0x0000b0c1      4889542410     mov qword [rsp + 0x10], rdx
0x0000b0c6      4889442448     mov qword [rsp + 0x48], rax
0x0000b0cb      48897c2420     mov qword [rsp + 0x20], rdi             ; ../coreutils-8.31/lib/regex_internal.c:-60
0x0000b0d0      e8dbf2ffff     call sym.rpl_mbrtowc
0x0000b0d5      4889c5         mov rbp, rax
0x0000b0d8      488d40ff       lea rax, [rax - 1]
0x0000b0dc      4883f8fc       cmp rax, 0xfffffffffffffffc
0x0000b0e0      0f87e2000000   ja 0xb1c8
0x0000b0e6      8b542444       mov edx, dword [rsp + 0x44]
0x0000b0ea      89d7           mov edi, edx
0x0000b0ec      89542418       mov dword [rsp + 0x18], edx             ; wchar2.h:-182
0x0000b0f0      e85b6fffff     call sym.imp.towupper                   ; string_fortified.h:-479
0x0000b0f5      8b542418       mov edx, dword [rsp + 0x18]
0x0000b0f9      4189c4         mov r12d, eax
0x0000b0fc      39c2           cmp edx, eax
0x0000b0fe      7478           je 0xb178
0x0000b100      488b542438     mov rdx, qword [rsp + 0x38]             ; ../coreutils-8.31/lib/regex_internal.c:-172
0x0000b105      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000b10a      89c6           mov esi, eax
0x0000b10c      e81f6effff     call sym.imp.wcrtomb
0x0000b111      4839c5         cmp rbp, rax
0x0000b114      0f856e010000   jne 0xb288
0x0000b11a      498b7e08       mov rdi, qword [r14 + 8]
0x0000b11e      488b742428     mov rsi, qword [rsp + 0x28]
0x0000b123      4889ea         mov rdx, rbp
0x0000b126      4c01ff         add rdi, r15
0x0000b129      e8b26dffff     call sym.imp.memcpy
0x0000b12e      4983c701       add r15, 1
0x0000b132      498b5610       mov rdx, qword [r14 + 0x10]
0x0000b136      4a8d04ad0000.  lea rax, [r13*4]
0x0000b13e      498d4c2fff     lea rcx, [r15 + rbp - 1]
0x0000b143      4939cf         cmp r15, rcx
0x0000b146      468924aa       mov dword [rdx + r13*4], r12d
0x0000b14a      7d1e           jge 0xb16a                              ; ../coreutils-8.31/lib/regex_internal.c:-173
0x0000b14c      488d440204     lea rax, [rdx + rax + 4]
0x0000b151      488d148a       lea rdx, [rdx + rcx*4]
0x0000b155      0f1f00         nop dword [rax]
0x0000b158      c700ffffffff   mov dword [rax], 0xffffffff             ; [0xffffffff:4]=-1 ; -1
0x0000b15e      4883c004       add rax, 4                              ; string_fortified.h:-479
0x0000b162      4839c2         cmp rdx, rax
0x0000b165      75f1           jne 0xb158
0x0000b167      4989cf         mov r15, rcx
0x0000b16a      4c39fb         cmp rbx, r15                            ; ../coreutils-8.31/lib/regex_internal.c:-204
0x0000b16d      0f8f0dffffff   jg 0xb080
0x0000b173      eb73           jmp 0xb1e8
0x0000b175      0f1f00         nop dword [rax]
0x0000b178      498b7628       mov rsi, qword [r14 + 0x28]
0x0000b17c      498b7e08       mov rdi, qword [r14 + 8]
0x0000b180      4889ea         mov rdx, rbp
0x0000b183      4c01fe         add rsi, r15
0x0000b186      490336         add rsi, qword [r14]
0x0000b189      4c01ff         add rdi, r15
0x0000b18c      e84f6dffff     call sym.imp.memcpy
0x0000b191      eb9b           jmp 0xb12e
0x0000b193      0f1f440000     nop dword [rax + rax]
0x0000b198      e8b36affff     call sym.imp.__ctype_toupper_loc
0x0000b19d      488b00         mov rax, qword [rax]
0x0000b1a0      498b5608       mov rdx, qword [r14 + 8]                ; ../coreutils-8.31/lib/regex_internal.c:-166
0x0000b1a4      428b04a0       mov eax, dword [rax + r12*4]
0x0000b1a8      4288043a       mov byte [rdx + r15], al
0x0000b1ac      498b5608       mov rdx, qword [r14 + 8]
0x0000b1b0      498b4610       mov rax, qword [r14 + 0x10]
0x0000b1b4      420fb6143a     movzx edx, byte [rdx + r15]
0x0000b1b9      428914b8       mov dword [rax + r15*4], edx
0x0000b1bd      4983c701       add r15, 1
0x0000b1c1      eba7           jmp 0xb16a
0x0000b1c3      0f1f440000     nop dword [rax + rax]
0x0000b1c8      4883f8fd       cmp rax, 0xfffffffffffffffd
0x0000b1cc      7532           jne 0xb200
0x0000b1ce      498b4658       mov rax, qword [r14 + 0x58]
0x0000b1d2      49394640       cmp qword [r14 + 0x40], rax             ; ../coreutils-8.31/lib/regex_internal.c:-162
0x0000b1d6      7d28           jge 0xb200
0x0000b1d8      488b442448     mov rax, qword [rsp + 0x48]
0x0000b1dd      49894620       mov qword [r14 + 0x20], rax
0x0000b1e1      0f1f80000000.  nop dword [rax]
0x0000b1e8      4d897e30       mov qword [r14 + 0x30], r15
0x0000b1ec      4d897e38       mov qword [r14 + 0x38], r15
0x0000b1f0      31c0           xor eax, eax
0x0000b1f2      e9d8fcffff     jmp 0xaecf
0x0000b1f7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/regex_internal.c:-158
0x0000b200      498b06         mov rax, qword [r14]
0x0000b203      498b5608       mov rdx, qword [r14 + 8]
0x0000b207      4c01f8         add rax, r15
0x0000b20a      49034628       add rax, qword [r14 + 0x28]
0x0000b20e      0fb600         movzx eax, byte [rax]
0x0000b211      4288043a       mov byte [rdx + r15], al
0x0000b215      498b5610       mov rdx, qword [r14 + 0x10]
0x0000b219      4983c701       add r15, 1
0x0000b21d      4883fdff       cmp rbp, 0xffffffffffffffff
0x0000b221      428904aa       mov dword [rdx + r13*4], eax
0x0000b225      0f853fffffff   jne 0xb16a
0x0000b22b      488b442448     mov rax, qword [rsp + 0x48]
0x0000b230      49894620       mov qword [r14 + 0x20], rax
0x0000b234      e931ffffff     jmp 0xb16a
0x0000b239      418b86900000.  mov eax, dword [r14 + 0x90]
0x0000b240      85c0           test eax, eax                           ; ../coreutils-8.31/lib/regex_internal.c:-132
0x0000b242      0f8e18020000   jle 0xb460
0x0000b248      498b7e28       mov rdi, qword [r14 + 0x28]
0x0000b24c      448d58ff       lea r11d, [rax - 1]
0x0000b250      488d4c2450     lea rcx, [rsp + 0x50]
0x0000b255      31c0           xor eax, eax
0x0000b257      4c01ef         add rdi, r13
0x0000b25a      49033e         add rdi, qword [r14]                    ; ../coreutils-8.31/lib/regex_internal.c:-178
0x0000b25d      eb0b           jmp 0xb26a
0x0000b25f      4883c001       add rax, 1
0x0000b263      4839442410     cmp qword [rsp + 0x10], rax
0x0000b268      7411           je 0xb27b
0x0000b26a      0fb63407       movzx esi, byte [rdi + rax]
0x0000b26e      4939c3         cmp r11, rax
0x0000b271      0fb63432       movzx esi, byte [rdx + rsi]
0x0000b275      40883401       mov byte [rcx + rax], sil
0x0000b279      75e4           jne 0xb25f
0x0000b27b      48894c2418     mov qword [rsp + 0x18], rcx
0x0000b280      e9befcffff     jmp 0xaf43
0x0000b285      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/regex_internal.c:-175
0x0000b288      4d89fd         mov r13, r15                            ; ../coreutils-8.31/lib/regex_internal.c:-173
0x0000b28b      e98efcffff     jmp 0xaf1e
0x0000b290      498b7e08       mov rdi, qword [r14 + 8]
0x0000b294      488b742418     mov rsi, qword [rsp + 0x18]
0x0000b299      4889ea         mov rdx, rbp
0x0000b29c      4c01ff         add rdi, r15
0x0000b29f      e83c6cffff     call sym.imp.memcpy                     ; ../coreutils-8.31/lib/regex_internal.c:-171
0x0000b2a4      e928fdffff     jmp 0xafd1
0x0000b2a9      48837c2420fd   cmp qword [rsp + 0x20], 0xfffffffffffffffd
0x0000b2af      750a           jne 0xb2bb
0x0000b2b1      498b4658       mov rax, qword [r14 + 0x58]
0x0000b2b5      49394640       cmp qword [r14 + 0x40], rax
0x0000b2b9      7c7d           jl 0xb338
0x0000b2bb      498b06         mov rax, qword [r14]
0x0000b2be      498b5678       mov rdx, qword [r14 + 0x78]
0x0000b2c2      4c01e8         add rax, r13
0x0000b2c5      49034628       add rax, qword [r14 + 0x28]
0x0000b2c9      4885d2         test rdx, rdx
0x0000b2cc      0fb600         movzx eax, byte [rax]
0x0000b2cf      0f85a7010000   jne 0xb47c
0x0000b2d5      498b5608       mov rdx, qword [r14 + 8]
0x0000b2d9      4c89f9         mov rcx, r15
0x0000b2dc      4288043a       mov byte [rdx + r15], al
0x0000b2e0      4180be8c0000.  cmp byte [r14 + 0x8c], 0
0x0000b2e8      0f8581010000   jne 0xb46f
0x0000b2ee      498b5610       mov rdx, qword [r14 + 0x10]
0x0000b2f2      4983c501       add r13, 1
0x0000b2f6      4983c701       add r15, 1
0x0000b2fa      4883fdff       cmp rbp, 0xffffffffffffffff
0x0000b2fe      89048a         mov dword [rdx + rcx*4], eax
0x0000b301      0f85b9fbffff   jne 0xaec0
0x0000b307      488b442448     mov rax, qword [rsp + 0x48]
0x0000b30c      49894620       mov qword [r14 + 0x20], rax
0x0000b310      e9abfbffff     jmp 0xaec0                              ; ../coreutils-8.31/lib/regex_internal.c:-240
0x0000b315      498b5618       mov rdx, qword [r14 + 0x18]
0x0000b319      4c89f9         mov rcx, r15
0x0000b31c      4d89ea         mov r10, r13
0x0000b31f      4c29e9         sub rcx, r13
0x0000b322      488d14ca       lea rdx, [rdx + rcx*8]
0x0000b326      4e8914d2       mov qword [rdx + r10*8], r10
0x0000b32a      4983c201       add r10, 1
0x0000b32e      4c39d0         cmp rax, r10
0x0000b331      75f3           jne 0xb326
0x0000b333      e9acfcffff     jmp 0xafe4
0x0000b338      488b442448     mov rax, qword [rsp + 0x48]
0x0000b33d      49894620       mov qword [r14 + 0x20], rax
0x0000b341      e97ffbffff     jmp 0xaec5
0x0000b346      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000b34a      0f8440ffffff   je 0xb290
0x0000b350      4a8d0438       lea rax, [rax + r15]
0x0000b354      4889c6         mov rsi, rax
0x0000b357      4889442408     mov qword [rsp + 8], rax
0x0000b35c      498b4640       mov rax, qword [r14 + 0x40]             ; ../coreutils-8.31/lib/regex_internal.c:-219
0x0000b360      4839c6         cmp rsi, rax
0x0000b363      77d3           ja 0xb338
0x0000b365      49837e1800     cmp qword [r14 + 0x18], 0
0x0000b36a      0f84b8000000   je 0xb428
0x0000b370      4180be8c0000.  cmp byte [r14 + 0x8c], 0
0x0000b378      7520           jne 0xb39a
0x0000b37a      4d85ff         test r15, r15
0x0000b37d      7413           je 0xb392
0x0000b37f      498b5618       mov rdx, qword [r14 + 0x18]             ; ../coreutils-8.31/lib/regex_internal.c:-213
0x0000b383      31c0           xor eax, eax
0x0000b385      488904c2       mov qword [rdx + rax*8], rax
0x0000b389      4883c001       add rax, 1
0x0000b38d      4c39f8         cmp rax, r15
0x0000b390      75f3           jne 0xb385                              ; ../coreutils-8.31/lib/regex_internal.c:-215
0x0000b392      41c6868c0000.  mov byte [r14 + 0x8c], 1
0x0000b39a      498b7e08       mov rdi, qword [r14 + 8]                ; ../coreutils-8.31/lib/regex_internal.c:-213
0x0000b39e      4889ce         mov rsi, rcx
0x0000b3a1      4c89da         mov rdx, r11                            ; ../coreutils-8.31/lib/regex_internal.c:-210
0x0000b3a4      4c895c2410     mov qword [rsp + 0x10], r11
0x0000b3a9      4c01ff         add rdi, r15
0x0000b3ac      e82f6bffff     call sym.imp.memcpy
0x0000b3b1      498b4610       mov rax, qword [r14 + 0x10]
0x0000b3b5      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x0000b3ba      4a8d0cb8       lea rcx, [rax + r15*4]
0x0000b3be      498b4618       mov rax, qword [r14 + 0x18]
0x0000b3c2      4983fb01       cmp r11, 1
0x0000b3c6      448921         mov dword [rcx], r12d
0x0000b3c9      4a8d34f8       lea rsi, [rax + r15*8]
0x0000b3cd      4c892e         mov qword [rsi], r13
0x0000b3d0      7628           jbe 0xb3fa
0x0000b3d2      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/regex_internal.c:-207
0x0000b3d7      488b542420     mov rdx, qword [rsp + 0x20]
0x0000b3dc      4839e8         cmp rax, rbp                            ; ../coreutils-8.31/lib/regex_internal.c:-204
0x0000b3df      480f42d0       cmovb rdx, rax
0x0000b3e3      4c01ea         add rdx, r13
0x0000b3e6      488914c6       mov qword [rsi + rax*8], rdx
0x0000b3ea      c70481ffffff.  mov dword [rcx + rax*4], 0xffffffff     ; ../coreutils-8.31/lib/regex_internal.c:-201 ; [0xffffffff:4]=-1 ; -1
0x0000b3f1      4883c001       add rax, 1
0x0000b3f5      4c39d8         cmp rax, r11
0x0000b3f8      75dd           jne 0xb3d7
0x0000b3fa      498b5e58       mov rbx, qword [r14 + 0x58]
0x0000b3fe      4929eb         sub r11, rbp
0x0000b401      4c01db         add rbx, r11
0x0000b404      4d3b6e60       cmp r13, qword [r14 + 0x60]
0x0000b408      49895e58       mov qword [r14 + 0x58], rbx
0x0000b40c      7d04           jge 0xb412                              ; ../coreutils-8.31/lib/regex_internal.c:-228
0x0000b40e      4d015e68       add qword [r14 + 0x68], r11
0x0000b412      49395e40       cmp qword [r14 + 0x40], rbx
0x0000b416      4c8b7c2408     mov r15, qword [rsp + 8]
0x0000b41b      490f4e5e40     cmovle rbx, qword [r14 + 0x40]
0x0000b420      4901ed         add r13, rbp                            ; ../coreutils-8.31/lib/regex_internal.c:-225
0x0000b423      e998faffff     jmp 0xaec0
0x0000b428      488d3cc50000.  lea rdi, [rax*8]
0x0000b430      48894c2418     mov qword [rsp + 0x18], rcx
0x0000b435      4c895c2410     mov qword [rsp + 0x10], r11
0x0000b43a      e8e16affff     call sym.imp.malloc
0x0000b43f      4885c0         test rax, rax
0x0000b442      49894618       mov qword [r14 + 0x18], rax
0x0000b446      4c8b5c2410     mov r11, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/regexec.c:3290
0x0000b44b      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0000b450      0f851affffff   jne 0xb370
0x0000b456      b80c000000     mov eax, 0xc                            ; ../coreutils-8.31/lib/regexec.c:3295
0x0000b45b      e96ffaffff     jmp 0xaecf
0x0000b460      488d4c2450     lea rcx, [rsp + 0x50]
0x0000b465      e911feffff     jmp 0xb27b
0x0000b46a      e84169ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/regexec.c:3300
0x0000b46f      498b5618       mov rdx, qword [r14 + 0x18]
0x0000b473      4e892cfa       mov qword [rdx + r15*8], r13
0x0000b477      e972feffff     jmp 0xb2ee
0x0000b47c      0fb60402       movzx eax, byte [rdx + rax]
0x0000b480      e950feffff     jmp 0xb2d5
0x0000b485      90             nop
0x0000b486      662e0f1f8400.  nop word cs:[rax + rax]
;-- extend_buffers:
0x0000b490      55             push rbp
0x0000b491      53             push rbx
0x0000b492      48bafeffffff.  movabs rdx, 0xffffffffffffffe           ; 1152921504606846974
0x0000b49c      4883ec08       sub rsp, 8
0x0000b4a0      488b4740       mov rax, qword [rdi + 0x40]
0x0000b4a4      4839d0         cmp rax, rdx
0x0000b4a7      0f870b010000   ja 0xb5b8
0x0000b4ad      488b5758       mov rdx, qword [rdi + 0x58]
0x0000b4b1      4801c0         add rax, rax
0x0000b4b4      4863f6         movsxd rsi, esi
0x0000b4b7      4889fb         mov rbx, rdi
0x0000b4ba      4839d0         cmp rax, rdx                            ; ../coreutils-8.31/lib/regexec.c:3320
0x0000b4bd      480f4fc2       cmovg rax, rdx
0x0000b4c1      4839f0         cmp rax, rsi
0x0000b4c4      480f4df0       cmovge rsi, rax
0x0000b4c8      e833f4ffff     call sym.re_string_realloc_buffers
0x0000b4cd      85c0           test eax, eax
0x0000b4cf      89c5           mov ebp, eax                            ; ../coreutils-8.31/lib/regexec.c:3323
0x0000b4d1      0f85b6000000   jne 0xb58d
0x0000b4d7      488bbbb80000.  mov rdi, qword [rbx + 0xb8]
0x0000b4de      4885ff         test rdi, rdi
0x0000b4e1      7421           je 0xb504
0x0000b4e3      488b4340       mov rax, qword [rbx + 0x40]
0x0000b4e7      488d34c50800.  lea rsi, [rax*8 + 8]
0x0000b4ef      e89c6affff     call sym.imp.realloc
0x0000b4f4      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/regex_internal.c:-209
0x0000b4f7      0f84bb000000   je 0xb5b8
0x0000b4fd      488983b80000.  mov qword [rbx + 0xb8], rax
0x0000b504      80bb88000000.  cmp byte [rbx + 0x88], 0
0x0000b50b      8b8390000000   mov eax, dword [rbx + 0x90]
0x0000b511      741d           je 0xb530
0x0000b513      83f801         cmp eax, 1
0x0000b516      4889df         mov rdi, rbx
0x0000b519      0f8eb1000000   jle 0xb5d0
0x0000b51f      4883c408       add rsp, 8
0x0000b523      5b             pop rbx
0x0000b524      5d             pop rbp                                 ; ../coreutils-8.31/lib/regex_internal.c:-204
0x0000b525      e946f9ffff     jmp sym.build_wcs_upper_buffer
0x0000b52a      660f1f440000   nop word [rax + rax]
0x0000b530      83f801         cmp eax, 1
0x0000b533      7f6b           jg 0xb5a0
0x0000b535      488b4b78       mov rcx, qword [rbx + 0x78]
0x0000b539      4885c9         test rcx, rcx
0x0000b53c      744f           je 0xb58d
0x0000b53e      488b7358       mov rsi, qword [rbx + 0x58]
0x0000b542      48397340       cmp qword [rbx + 0x40], rsi
0x0000b546      480f4e7340     cmovle rsi, qword [rbx + 0x40]
0x0000b54b      488b4330       mov rax, qword [rbx + 0x30]
0x0000b54f      4839c6         cmp rsi, rax
0x0000b552      7f10           jg 0xb564
0x0000b554      eb2f           jmp 0xb585
0x0000b556      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/regexec.c:3337
0x0000b560      488b4b78       mov rcx, qword [rbx + 0x78]
0x0000b564      488b13         mov rdx, qword [rbx]
0x0000b567      4801c2         add rdx, rax
0x0000b56a      48035328       add rdx, qword [rbx + 0x28]
0x0000b56e      0fb612         movzx edx, byte [rdx]                   ; ../coreutils-8.31/lib/regexec.c:3297
0x0000b571      0fb60c11       movzx ecx, byte [rcx + rdx]
0x0000b575      488b5308       mov rdx, qword [rbx + 8]
0x0000b579      880c02         mov byte [rdx + rax], cl
0x0000b57c      4883c001       add rax, 1
0x0000b580      4839c6         cmp rsi, rax
0x0000b583      75db           jne 0xb560
0x0000b585      48894330       mov qword [rbx + 0x30], rax
0x0000b589      48894338       mov qword [rbx + 0x38], rax
0x0000b58d      4883c408       add rsp, 8
0x0000b591      89e8           mov eax, ebp
0x0000b593      5b             pop rbx
0x0000b594      5d             pop rbp
0x0000b595      c3             ret
0x0000b596      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/regexec.c:925
0x0000b5a0      4889df         mov rdi, rbx
0x0000b5a3      e8f8f6ffff     call sym.build_wcs_buffer
0x0000b5a8      4883c408       add rsp, 8
0x0000b5ac      89e8           mov eax, ebp
0x0000b5ae      5b             pop rbx
0x0000b5af      5d             pop rbp
0x0000b5b0      c3             ret                                     ; ../coreutils-8.31/lib/regexec.c:929
0x0000b5b1      0f1f80000000.  nop dword [rax]
0x0000b5b8      bd0c000000     mov ebp, 0xc
0x0000b5bd      4883c408       add rsp, 8
0x0000b5c1      89e8           mov eax, ebp                            ; ../coreutils-8.31/lib/regexec.c:935
0x0000b5c3      5b             pop rbx
0x0000b5c4      5d             pop rbp
0x0000b5c5      c3             ret                                     ; ../coreutils-8.31/lib/regexec.c:939
0x0000b5c6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000b5d0      e85bf6ffff     call sym.build_upper_buffer
0x0000b5d5      4883c408       add rsp, 8
0x0000b5d9      89e8           mov eax, ebp
0x0000b5db      5b             pop rbx
0x0000b5dc      5d             pop rbp
0x0000b5dd      c3             ret
0x0000b5de      6690           nop
;-- clean_state_log_if_needed:
0x0000b5e0      4154           push r12
0x0000b5e2      55             push rbp
0x0000b5e3      4889f5         mov rbp, rsi
0x0000b5e6      53             push rbx
0x0000b5e7      488b4740       mov rax, qword [rdi + 0x40]
0x0000b5eb      4889fb         mov rbx, rdi
0x0000b5ee      4c8ba7c00000.  mov r12, qword [rdi + 0xc0]
0x0000b5f5      4839f0         cmp rax, rsi
0x0000b5f8      7f26           jg 0xb620
0x0000b5fa      483b4758       cmp rax, qword [rdi + 0x58]
0x0000b5fe      7d20           jge 0xb620
0x0000b600      8d7501         lea esi, [rbp + 1]                      ; string_fortified.h:-698
0x0000b603      4889df         mov rdi, rbx
0x0000b606      e885feffff     call sym.extend_buffers
0x0000b60b      85c0           test eax, eax
0x0000b60d      7507           jne 0xb616
0x0000b60f      4939ec         cmp r12, rbp
0x0000b612      7c2c           jl 0xb640
0x0000b614      31c0           xor eax, eax
0x0000b616      5b             pop rbx
0x0000b617      5d             pop rbp
0x0000b618      415c           pop r12
0x0000b61a      c3             ret
0x0000b61b      0f1f440000     nop dword [rax + rax]
0x0000b620      488b4330       mov rax, qword [rbx + 0x30]
0x0000b624      4839e8         cmp rax, rbp
0x0000b627      7fe6           jg 0xb60f                               ; ../coreutils-8.31/lib/regcomp.c:3021
0x0000b629      483b4358       cmp rax, qword [rbx + 0x58]
0x0000b62d      7de0           jge 0xb60f
0x0000b62f      8d7501         lea esi, [rbp + 1]
0x0000b632      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/regcomp.c:3027
0x0000b635      e856feffff     call sym.extend_buffers
0x0000b63a      85c0           test eax, eax
0x0000b63c      74d1           je 0xb60f
0x0000b63e      ebd6           jmp 0xb616
0x0000b640      488b83b80000.  mov rax, qword [rbx + 0xb8]
0x0000b647      4889ea         mov rdx, rbp
0x0000b64a      31f6           xor esi, esi
0x0000b64c      4c29e2         sub rdx, r12
0x0000b64f      48c1e203       shl rdx, 3
0x0000b653      4a8d7ce008     lea rdi, [rax + r12*8 + 8]
0x0000b658      e8e367ffff     call sym.imp.memset
0x0000b65d      4889abc00000.  mov qword [rbx + 0xc0], rbp
0x0000b664      ebae           jmp 0xb614
0x0000b666      662e0f1f8400.  nop word cs:[rax + rax]
;-- free_charset:
0x0000b670      53             push rbx
0x0000b671      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/regcomp.c:2974
0x0000b674      488b3f         mov rdi, qword [rdi]
0x0000b677      e8e465ffff     call sym.imp.free
0x0000b67c      488b7b08       mov rdi, qword [rbx + 8]
0x0000b680      e8db65ffff     call sym.imp.free
0x0000b685      488b7b10       mov rdi, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/regcomp.c:2986
0x0000b689      e8d265ffff     call sym.imp.free                       ; ../coreutils-8.31/lib/regcomp.c:2987
0x0000b68e      488b7b18       mov rdi, qword [rbx + 0x18]             ; ../coreutils-8.31/lib/regcomp.c:2989
0x0000b692      e8c965ffff     call sym.imp.free
0x0000b697      4889df         mov rdi, rbx
0x0000b69a      5b             pop rbx
0x0000b69b      e9c065ffff     jmp sym.imp.free
;-- free_token:
0x0000b6a0      8b4708         mov eax, dword [rdi + 8]
0x0000b6a3      25ff000400     and eax, 0x400ff
0x0000b6a8      83f806         cmp eax, 6
0x0000b6ab      7413           je 0xb6c0
0x0000b6ad      83f803         cmp eax, 3
0x0000b6b0      7406           je 0xb6b8
0x0000b6b2      f3c3           ret
0x0000b6b4      0f1f4000       nop dword [rax]
0x0000b6b8      488b3f         mov rdi, qword [rdi]
0x0000b6bb      e9a065ffff     jmp sym.imp.free
0x0000b6c0      488b3f         mov rdi, qword [rdi]
0x0000b6c3      ebab           jmp sym.free_charset
0x0000b6c5      90             nop
0x0000b6c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- free_tree:
0x0000b6d0      488d7e28       lea rdi, [rsi + 0x28]
0x0000b6d4      4883ec08       sub rsp, 8
0x0000b6d8      e8c3ffffff     call sym.free_token
0x0000b6dd      31c0           xor eax, eax
0x0000b6df      4883c408       add rsp, 8
0x0000b6e3      c3             ret
0x0000b6e4      6690           nop                                     ; ../coreutils-8.31/lib/regex_internal.c:551
0x0000b6e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_dfa_add_node:
0x0000b6f0      4157           push r15
0x0000b6f2      4156           push r14
0x0000b6f4      4989f6         mov r14, rsi
0x0000b6f7      4155           push r13                                ; ../coreutils-8.31/lib/regex_internal.c:554
0x0000b6f9      4154           push r12
0x0000b6fb      55             push rbp
0x0000b6fc      53             push rbx
0x0000b6fd      4889fb         mov rbx, rdi
0x0000b700      4883ec18       sub rsp, 0x18
0x0000b704      488b7710       mov rsi, qword [rdi + 0x10]
0x0000b708      488b6f08       mov rbp, qword [rdi + 8]
0x0000b70c      4839ee         cmp rsi, rbp
0x0000b70f      0f83ab000000   jae 0xb7c0
0x0000b715      4c8b6718       mov r12, qword [rdi + 0x18]
0x0000b719      488b6f28       mov rbp, qword [rdi + 0x28]
0x0000b71d      4889f0         mov rax, rsi
0x0000b720      89d1           mov ecx, edx
0x0000b722      48c1e004       shl rax, 4
0x0000b726      480303         add rax, qword [rbx]
0x0000b729      81e1ff00fcff   and ecx, 0xfffc00ff
0x0000b72f      48895008       mov qword [rax + 8], rdx
0x0000b733      894808         mov dword [rax + 8], ecx
0x0000b736      31c9           xor ecx, ecx                            ; ../coreutils-8.31/lib/regex_internal.c:559
0x0000b738      80fa06         cmp dl, 6
0x0000b73b      4c8930         mov qword [rax], r14
0x0000b73e      0f94c1         sete cl
0x0000b741      80fa05         cmp dl, 5
0x0000b744      750c           jne 0xb752
0x0000b746      31c9           xor ecx, ecx                            ; string_fortified.h:-828
0x0000b748      83bbb4000000.  cmp dword [rbx + 0xb4], 1
0x0000b74f      0f9fc1         setg cl
0x0000b752      0fb6500a       movzx edx, byte [rax + 0xa]
0x0000b756      c1e104         shl ecx, 4
0x0000b759      660fefc0       pxor xmm0, xmm0
0x0000b75d      83e2ef         and edx, 0xffffffef                     ; ../coreutils-8.31/lib/regex_internal.c:561 ; 4294967279
0x0000b760      09ca           or edx, ecx
0x0000b762      88500a         mov byte [rax + 0xa], dl
0x0000b765      49c704f4ffff.  mov qword [r12 + rsi*8], 0xffffffffffffffff
0x0000b76d      488b4310       mov rax, qword [rbx + 0x10]
0x0000b771      488d0440       lea rax, [rax + rax*2]                  ; ../coreutils-8.31/lib/regex_internal.c:514
0x0000b775      488d44c500     lea rax, [rbp + rax*8]
0x0000b77a      0f1100         movups xmmword [rax], xmm0
0x0000b77d      48c740100000.  mov qword [rax + 0x10], 0
0x0000b785      488b4310       mov rax, qword [rbx + 0x10]
0x0000b789      488d1440       lea rdx, [rax + rax*2]                  ; ../coreutils-8.31/lib/regex_internal.c:527
0x0000b78d      488b4330       mov rax, qword [rbx + 0x30]
0x0000b791      488d04d0       lea rax, [rax + rdx*8]
0x0000b795      0f1100         movups xmmword [rax], xmm0
0x0000b798      48c740100000.  mov qword [rax + 0x10], 0
0x0000b7a0      488b4310       mov rax, qword [rbx + 0x10]
0x0000b7a4      488d5001       lea rdx, [rax + 1]
0x0000b7a8      48895310       mov qword [rbx + 0x10], rdx
0x0000b7ac      4883c418       add rsp, 0x18
0x0000b7b0      5b             pop rbx                                 ; ../coreutils-8.31/lib/regex_internal.c:531
0x0000b7b1      5d             pop rbp
0x0000b7b2      415c           pop r12
0x0000b7b4      415d           pop r13
0x0000b7b6      415e           pop r14
0x0000b7b8      415f           pop r15
0x0000b7ba      c3             ret
0x0000b7bb      0f1f440000     nop dword [rax + rax]
0x0000b7c0      4c8d6c2d00     lea r13, [rbp + rbp]
0x0000b7c5      48b8aaaaaaaa.  movabs rax, 0xaaaaaaaaaaaaaaa
0x0000b7cf      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/regex_internal.c:532
0x0000b7d2      0f87da000000   ja 0xb8b2
0x0000b7d8      488b3f         mov rdi, qword [rdi]
0x0000b7db      4889ee         mov rsi, rbp
0x0000b7de      4889542408     mov qword [rsp + 8], rdx
0x0000b7e3      48c1e605       shl rsi, 5
0x0000b7e7      e8a467ffff     call sym.imp.realloc
0x0000b7ec      4885c0         test rax, rax
0x0000b7ef      0f84bd000000   je 0xb8b2
0x0000b7f5      4989ef         mov r15, rbp
0x0000b7f8      488b7b18       mov rdi, qword [rbx + 0x18]
0x0000b7fc      488903         mov qword [rbx], rax
0x0000b7ff      49c1e704       shl r15, 4
0x0000b803      4c89fe         mov rsi, r15
0x0000b806      e88567ffff     call sym.imp.realloc
0x0000b80b      488b7b20       mov rdi, qword [rbx + 0x20]
0x0000b80f      4c89fe         mov rsi, r15
0x0000b812      4d8d7cad00     lea r15, [r13 + rbp*4]
0x0000b817      4989c4         mov r12, rax
0x0000b81a      49c1e703       shl r15, 3
0x0000b81e      e86d67ffff     call sym.imp.realloc
0x0000b823      488b7b28       mov rdi, qword [rbx + 0x28]
0x0000b827      4c89fe         mov rsi, r15
0x0000b82a      48890424       mov qword [rsp], rax
0x0000b82e      e85d67ffff     call sym.imp.realloc
0x0000b833      488b7b30       mov rdi, qword [rbx + 0x30]
0x0000b837      4c89fe         mov rsi, r15
0x0000b83a      4889c5         mov rbp, rax
0x0000b83d      e84e67ffff     call sym.imp.realloc
0x0000b842      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/regex_internal.c:539
0x0000b845      488b0c24       mov rcx, qword [rsp]
0x0000b849      7435           je 0xb880
0x0000b84b      4885c9         test rcx, rcx
0x0000b84e      7430           je 0xb880                               ; ../coreutils-8.31/lib/regex_internal.c:540
0x0000b850      4885ed         test rbp, rbp
0x0000b853      742b           je 0xb880
0x0000b855      4885c0         test rax, rax
0x0000b858      488b542408     mov rdx, qword [rsp + 8]
0x0000b85d      7421           je 0xb880
0x0000b85f      4c896318       mov qword [rbx + 0x18], r12
0x0000b863      48894b20       mov qword [rbx + 0x20], rcx             ; ../coreutils-8.31/lib/regex_internal.c:542
0x0000b867      48896b28       mov qword [rbx + 0x28], rbp
0x0000b86b      48894330       mov qword [rbx + 0x30], rax
0x0000b86f      4c896b08       mov qword [rbx + 8], r13
0x0000b873      488b7310       mov rsi, qword [rbx + 0x10]
0x0000b877      e9a1feffff     jmp 0xb71d
0x0000b87c      0f1f4000       nop dword [rax]
0x0000b880      4c89e7         mov rdi, r12
0x0000b883      4889442408     mov qword [rsp + 8], rax
0x0000b888      48890c24       mov qword [rsp], rcx
0x0000b88c      e8cf63ffff     call sym.imp.free
0x0000b891      488b0c24       mov rcx, qword [rsp]
0x0000b895      4889cf         mov rdi, rcx
0x0000b898      e8c363ffff     call sym.imp.free
0x0000b89d      4889ef         mov rdi, rbp
0x0000b8a0      e8bb63ffff     call sym.imp.free
0x0000b8a5      488b442408     mov rax, qword [rsp + 8]
0x0000b8aa      4889c7         mov rdi, rax
0x0000b8ad      e8ae63ffff     call sym.imp.free
0x0000b8b2      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x0000b8b9      e9eefeffff     jmp 0xb7ac
0x0000b8be      6690           nop
;-- duplicate_node:
0x0000b8c0      4155           push r13
0x0000b8c2      4154           push r12
0x0000b8c4      4989f5         mov r13, rsi
0x0000b8c7      55             push rbp
0x0000b8c8      53             push rbx
0x0000b8c9      49c1e504       shl r13, 4
0x0000b8cd      4889f5         mov rbp, rsi
0x0000b8d0      4189d4         mov r12d, edx
0x0000b8d3      4889fb         mov rbx, rdi
0x0000b8d6      4883ec08       sub rsp, 8
0x0000b8da      488b07         mov rax, qword [rdi]
0x0000b8dd      4a8b3428       mov rsi, qword [rax + r13]
0x0000b8e1      4a8b542808     mov rdx, qword [rax + r13 + 8]
0x0000b8e6      e805feffff     call sym.re_dfa_add_node
0x0000b8eb      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000b8ef      7463           je 0xb954
0x0000b8f1      4489e7         mov edi, r12d
0x0000b8f4      4c8b03         mov r8, qword [rbx]
0x0000b8f7      4889c6         mov rsi, rax
0x0000b8fa      6681e7ff03     and di, 0x3ff
0x0000b8ff      48c1e604       shl rsi, 4
0x0000b903      89f9           mov ecx, edi
0x0000b905      81e1ff030000   and ecx, 0x3ff                          ; ../coreutils-8.31/lib/regcomp.c:726
0x0000b90b      4c01c6         add rsi, r8
0x0000b90e      c1e108         shl ecx, 8
0x0000b911      89ca           mov edx, ecx                            ; ../coreutils-8.31/lib/regcomp.c:590
0x0000b913      8b4e08         mov ecx, dword [rsi + 8]
0x0000b916      81e1ff00fcff   and ecx, 0xfffc00ff
0x0000b91c      09d1           or ecx, edx
0x0000b91e      894e08         mov dword [rsi + 8], ecx
0x0000b921      438b542808     mov edx, dword [r8 + r13 + 8]
0x0000b926      81e1ff00fcff   and ecx, 0xfffc00ff
0x0000b92c      c1ea08         shr edx, 8
0x0000b92f      09fa           or edx, edi
0x0000b931      81e2ff030000   and edx, 0x3ff
0x0000b937      c1e208         shl edx, 8
0x0000b93a      09ca           or edx, ecx
0x0000b93c      89d1           mov ecx, edx
0x0000b93e      895608         mov dword [rsi + 8], edx
0x0000b941      c1e910         shr ecx, 0x10
0x0000b944      89ca           mov edx, ecx
0x0000b946      83ca04         or edx, 4
0x0000b949      88560a         mov byte [rsi + 0xa], dl
0x0000b94c      488b5320       mov rdx, qword [rbx + 0x20]
0x0000b950      48892cc2       mov qword [rdx + rax*8], rbp
0x0000b954      4883c408       add rsp, 8
0x0000b958      5b             pop rbx
0x0000b959      5d             pop rbp
0x0000b95a      415c           pop r12
0x0000b95c      415d           pop r13
0x0000b95e      c3             ret
0x0000b95f      90             nop
;-- duplicate_node_closure:
0x0000b960      4157           push r15
0x0000b962      4156           push r14
0x0000b964      4989f1         mov r9, rsi
0x0000b967      4155           push r13
0x0000b969      4154           push r12
0x0000b96b      4989fe         mov r14, rdi
0x0000b96e      55             push rbp
0x0000b96f      53             push rbx
0x0000b970      4989d5         mov r13, rdx
0x0000b973      4489c5         mov ebp, r8d
0x0000b976      4883ec18       sub rsp, 0x18
0x0000b97a      48894c2408     mov qword [rsp + 8], rcx
0x0000b97f      4d8b06         mov r8, qword [r14]
0x0000b982      4c89c8         mov rax, r9
0x0000b985      498b7e28       mov rdi, qword [r14 + 0x28]
0x0000b989      48c1e004       shl rax, 4
0x0000b98d      4d89ec         mov r12, r13
0x0000b990      4c01c0         add rax, r8
0x0000b993      80780804       cmp byte [rax + 8], 4
0x0000b997      0f84b3010000   je 0xbb50
0x0000b99d      4f8d2449       lea r12, [r9 + r9*2]
0x0000b9a1      49c1e403       shl r12, 3
0x0000b9a5      4a8d3427       lea rsi, [rdi + r12]
0x0000b9a9      488b4e08       mov rcx, qword [rsi + 8]
0x0000b9ad      4885c9         test rcx, rcx
0x0000b9b0      0f84f3010000   je 0xbba9
0x0000b9b6      4b8d5c6d00     lea rbx, [r13 + r13*2]
0x0000b9bb      488b7610       mov rsi, qword [rsi + 0x10]
0x0000b9bf      48c1e303       shl rbx, 3
0x0000b9c3      4801df         add rdi, rbx
0x0000b9c6      4883f901       cmp rcx, 1
0x0000b9ca      4c8b3e         mov r15, qword [rsi]
0x0000b9cd      48c747080000.  mov qword [rdi + 8], 0
0x0000b9d5      0f8415010000   je 0xbaf0
0x0000b9db      498b5610       mov rdx, qword [r14 + 0x10]
0x0000b9df      488d72ff       lea rsi, [rdx - 1]
0x0000b9e3      4889f0         mov rax, rsi
0x0000b9e6      48c1e004       shl rax, 4
0x0000b9ea      4c01c0         add rax, r8
0x0000b9ed      f6400a04       test byte [rax + 0xa], 4
0x0000b9f1      0f84a9000000   je 0xbaa0
0x0000b9f7      4885f6         test rsi, rsi
0x0000b9fa      0f8ea0000000   jle 0xbaa0
0x0000ba00      48c1e204       shl rdx, 4
0x0000ba04      4929c0         sub r8, rax
0x0000ba07      498b4e20       mov rcx, qword [r14 + 0x20]
0x0000ba0b      4d8d4410e0     lea r8, [r8 + rdx - 0x20]
0x0000ba10      eb18           jmp 0xba2a
0x0000ba12      660f1f440000   nop word [rax + rax]
0x0000ba18      4c01c0         add rax, r8
0x0000ba1b      4883ee01       sub rsi, 1
0x0000ba1f      f6400a04       test byte [rax + 0xa], 4
0x0000ba23      747b           je 0xbaa0
0x0000ba25      4885f6         test rsi, rsi
0x0000ba28      7e76           jle 0xbaa0
0x0000ba2a      4c393cf1       cmp qword [rcx + rsi*8], r15
0x0000ba2e      75e8           jne 0xba18
0x0000ba30      8b5008         mov edx, dword [rax + 8]
0x0000ba33      c1ea08         shr edx, 8
0x0000ba36      81e2ff030000   and edx, 0x3ff
0x0000ba3c      39d5           cmp ebp, edx
0x0000ba3e      75d8           jne 0xba18
0x0000ba40      e8cbefffff     call sym.re_node_set_insert
0x0000ba45      84c0           test al, al
0x0000ba47      7442           je 0xba8b
0x0000ba49      498b4628       mov rax, qword [r14 + 0x28]
0x0000ba4d      89ea           mov edx, ebp
0x0000ba4f      4c89f7         mov rdi, r14
0x0000ba52      4a8b442010     mov rax, qword [rax + r12 + 0x10]
0x0000ba57      4c8b4808       mov r9, qword [rax + 8]
0x0000ba5b      4c89ce         mov rsi, r9
0x0000ba5e      4c890c24       mov qword [rsp], r9
0x0000ba62      e859feffff     call sym.duplicate_node
0x0000ba67      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000ba6b      4989c5         mov r13, rax
0x0000ba6e      741b           je 0xba8b
0x0000ba70      49035e28       add rbx, qword [r14 + 0x28]
0x0000ba74      4c89ee         mov rsi, r13
0x0000ba77      4889df         mov rdi, rbx
0x0000ba7a      e891efffff     call sym.re_node_set_insert
0x0000ba7f      84c0           test al, al
0x0000ba81      4c8b0c24       mov r9, qword [rsp]
0x0000ba85      0f85f4feffff   jne 0xb97f
0x0000ba8b      b80c000000     mov eax, 0xc
0x0000ba90      4883c418       add rsp, 0x18
0x0000ba94      5b             pop rbx
0x0000ba95      5d             pop rbp
0x0000ba96      415c           pop r12
0x0000ba98      415d           pop r13
0x0000ba9a      415e           pop r14
0x0000ba9c      415f           pop r15
0x0000ba9e      c3             ret
0x0000ba9f      90             nop
0x0000baa0      89ea           mov edx, ebp
0x0000baa2      4c89fe         mov rsi, r15
0x0000baa5      4c89f7         mov rdi, r14
0x0000baa8      e813feffff     call sym.duplicate_node
0x0000baad      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000bab1      4989c5         mov r13, rax
0x0000bab4      74d5           je 0xba8b
0x0000bab6      498b7e28       mov rdi, qword [r14 + 0x28]
0x0000baba      4c89ee         mov rsi, r13
0x0000babd      4801df         add rdi, rbx
0x0000bac0      e84befffff     call sym.re_node_set_insert
0x0000bac5      84c0           test al, al
0x0000bac7      74c2           je 0xba8b
0x0000bac9      488b4c2408     mov rcx, qword [rsp + 8]
0x0000bace      4189e8         mov r8d, ebp
0x0000bad1      4c89ea         mov rdx, r13
0x0000bad4      4c89fe         mov rsi, r15
0x0000bad7      4c89f7         mov rdi, r14
0x0000bada      e881feffff     call sym.duplicate_node_closure
0x0000badf      85c0           test eax, eax
0x0000bae1      0f8462ffffff   je 0xba49
0x0000bae7      eba7           jmp 0xba90
0x0000bae9      0f1f80000000.  nop dword [rax]
0x0000baf0      4c3b4c2408     cmp r9, qword [rsp + 8]
0x0000baf5      7509           jne 0xbb00
0x0000baf7      4d39e9         cmp r9, r13
0x0000bafa      0f85bc000000   jne 0xbbbc
0x0000bb00      8b4008         mov eax, dword [rax + 8]
0x0000bb03      4c89fe         mov rsi, r15
0x0000bb06      4c89f7         mov rdi, r14
0x0000bb09      c1e808         shr eax, 8
0x0000bb0c      25ff030000     and eax, 0x3ff
0x0000bb11      09c5           or ebp, eax
0x0000bb13      89ea           mov edx, ebp
0x0000bb15      e8a6fdffff     call sym.duplicate_node
0x0000bb1a      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000bb1e      4989c5         mov r13, rax
0x0000bb21      0f8464ffffff   je 0xba8b
0x0000bb27      49035e28       add rbx, qword [r14 + 0x28]
0x0000bb2b      4889c6         mov rsi, rax
0x0000bb2e      4889df         mov rdi, rbx
0x0000bb31      e8daeeffff     call sym.re_node_set_insert
0x0000bb36      84c0           test al, al
0x0000bb38      0f844dffffff   je 0xba8b
0x0000bb3e      4d89f9         mov r9, r15
0x0000bb41      e939feffff     jmp 0xb97f
0x0000bb46      662e0f1f8400.  nop word cs:[rax + rax]
0x0000bb50      498b4618       mov rax, qword [r14 + 0x18]
0x0000bb54      4b8d5c6d00     lea rbx, [r13 + r13*2]
0x0000bb59      4e8d3ccd0000.  lea r15, [r9*8]
0x0000bb61      89ea           mov edx, ebp
0x0000bb63      48c1e303       shl rbx, 3
0x0000bb67      4e8b0cc8       mov r9, qword [rax + r9*8]
0x0000bb6b      48c7441f0800.  mov qword [rdi + rbx + 8], 0
0x0000bb74      4c89f7         mov rdi, r14
0x0000bb77      4c89ce         mov rsi, r9
0x0000bb7a      4c890c24       mov qword [rsp], r9
0x0000bb7e      e83dfdffff     call sym.duplicate_node
0x0000bb83      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000bb87      4989c5         mov r13, rax
0x0000bb8a      4c8b0c24       mov r9, qword [rsp]
0x0000bb8e      0f84f7feffff   je 0xba8b
0x0000bb94      498b4618       mov rax, qword [r14 + 0x18]
0x0000bb98      4c890c24       mov qword [rsp], r9
0x0000bb9c      4a8b0c38       mov rcx, qword [rax + r15]
0x0000bba0      4a890ce0       mov qword [rax + r12*8], rcx
0x0000bba4      e9c7feffff     jmp 0xba70
0x0000bba9      498b4618       mov rax, qword [r14 + 0x18]
0x0000bbad      4a8b0cc8       mov rcx, qword [rax + r9*8]
0x0000bbb1      4a890ce8       mov qword [rax + r13*8], rcx
0x0000bbb5      31c0           xor eax, eax
0x0000bbb7      e9d4feffff     jmp 0xba90
0x0000bbbc      4c89fe         mov rsi, r15
0x0000bbbf      e84ceeffff     call sym.re_node_set_insert
0x0000bbc4      89c2           mov edx, eax
0x0000bbc6      31c0           xor eax, eax
0x0000bbc8      84d2           test dl, dl
0x0000bbca      0f85c0feffff   jne 0xba90
0x0000bbd0      e9b6feffff     jmp 0xba8b
0x0000bbd5      90             nop
0x0000bbd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- free_state:
0x0000bbe0      53             push rbx
0x0000bbe1      4889fb         mov rbx, rdi
0x0000bbe4      488b7f30       mov rdi, qword [rdi + 0x30]
0x0000bbe8      e87360ffff     call sym.imp.free
0x0000bbed      488b7b48       mov rdi, qword [rbx + 0x48]
0x0000bbf1      e86a60ffff     call sym.imp.free
0x0000bbf6      488b4350       mov rax, qword [rbx + 0x50]
0x0000bbfa      488d5308       lea rdx, [rbx + 8]
0x0000bbfe      4839d0         cmp rax, rdx
0x0000bc01      7412           je 0xbc15
0x0000bc03      488b7810       mov rdi, qword [rax + 0x10]
0x0000bc07      e85460ffff     call sym.imp.free
0x0000bc0c      488b7b50       mov rdi, qword [rbx + 0x50]
0x0000bc10      e84b60ffff     call sym.imp.free
0x0000bc15      488b7b18       mov rdi, qword [rbx + 0x18]
0x0000bc19      e84260ffff     call sym.imp.free
0x0000bc1e      488b7b60       mov rdi, qword [rbx + 0x60]
0x0000bc22      e83960ffff     call sym.imp.free
0x0000bc27      488b7b58       mov rdi, qword [rbx + 0x58]
0x0000bc2b      e83060ffff     call sym.imp.free
0x0000bc30      4889df         mov rdi, rbx
0x0000bc33      5b             pop rbx
0x0000bc34      e92760ffff     jmp sym.imp.free
0x0000bc39      0f1f80000000.  nop dword [rax]
;-- re_string_destruct:
0x0000bc40      53             push rbx
0x0000bc41      4889fb         mov rbx, rdi
0x0000bc44      488b7f10       mov rdi, qword [rdi + 0x10]
0x0000bc48      e81360ffff     call sym.imp.free
0x0000bc4d      488b7b18       mov rdi, qword [rbx + 0x18]
0x0000bc51      e80a60ffff     call sym.imp.free
0x0000bc56      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x0000bc5d      7509           jne 0xbc68
0x0000bc5f      5b             pop rbx
0x0000bc60      c3             ret
0x0000bc61      0f1f80000000.  nop dword [rax]
0x0000bc68      488b7b08       mov rdi, qword [rbx + 8]
0x0000bc6c      5b             pop rbx
0x0000bc6d      e9ee5fffff     jmp sym.imp.free
0x0000bc72      0f1f4000       nop dword [rax]
0x0000bc76      662e0f1f8400.  nop word cs:[rax + rax]
;-- free_dfa_content:
0x0000bc80      4156           push r14
0x0000bc82      4155           push r13
0x0000bc84      4154           push r12
0x0000bc86      4989fc         mov r12, rdi
0x0000bc89      55             push rbp
0x0000bc8a      53             push rbx
0x0000bc8b      488b3f         mov rdi, qword [rdi]
0x0000bc8e      4885ff         test rdi, rdi
0x0000bc91      742b           je 0xbcbe
0x0000bc93      49837c241000   cmp qword [r12 + 0x10], 0
0x0000bc99      7423           je 0xbcbe
0x0000bc9b      31db           xor ebx, ebx
0x0000bc9d      eb05           jmp 0xbca4
0x0000bc9f      90             nop
0x0000bca0      498b3c24       mov rdi, qword [r12]
0x0000bca4      4889d8         mov rax, rbx
0x0000bca7      4883c301       add rbx, 1
0x0000bcab      48c1e004       shl rax, 4
0x0000bcaf      4801c7         add rdi, rax
0x0000bcb2      e8e9f9ffff     call sym.free_token
0x0000bcb7      49395c2410     cmp qword [r12 + 0x10], rbx
0x0000bcbc      77e2           ja 0xbca0
0x0000bcbe      498b7c2418     mov rdi, qword [r12 + 0x18]
0x0000bcc3      e8985fffff     call sym.imp.free
0x0000bcc8      49837c241000   cmp qword [r12 + 0x10], 0
0x0000bcce      7453           je 0xbd23
0x0000bcd0      31db           xor ebx, ebx
0x0000bcd2      31ed           xor ebp, ebp
0x0000bcd4      0f1f4000       nop dword [rax]
0x0000bcd8      498b442430     mov rax, qword [r12 + 0x30]
0x0000bcdd      4885c0         test rax, rax
0x0000bce0      740a           je 0xbcec
0x0000bce2      488b7c1810     mov rdi, qword [rax + rbx + 0x10]
0x0000bce7      e8745fffff     call sym.imp.free
0x0000bcec      498b442438     mov rax, qword [r12 + 0x38]
0x0000bcf1      4885c0         test rax, rax
0x0000bcf4      740a           je 0xbd00
0x0000bcf6      488b7c1810     mov rdi, qword [rax + rbx + 0x10]
0x0000bcfb      e8605fffff     call sym.imp.free
0x0000bd00      498b442428     mov rax, qword [r12 + 0x28]
0x0000bd05      4885c0         test rax, rax
0x0000bd08      740a           je 0xbd14
0x0000bd0a      488b7c1810     mov rdi, qword [rax + rbx + 0x10]
0x0000bd0f      e84c5fffff     call sym.imp.free
0x0000bd14      4883c501       add rbp, 1
0x0000bd18      4883c318       add rbx, 0x18
0x0000bd1c      49396c2410     cmp qword [r12 + 0x10], rbp
0x0000bd21      77b5           ja 0xbcd8
0x0000bd23      498b7c2428     mov rdi, qword [r12 + 0x28]
0x0000bd28      e8335fffff     call sym.imp.free
0x0000bd2d      498b7c2430     mov rdi, qword [r12 + 0x30]
0x0000bd32      e8295fffff     call sym.imp.free
0x0000bd37      498b7c2438     mov rdi, qword [r12 + 0x38]
0x0000bd3c      e81f5fffff     call sym.imp.free
0x0000bd41      498b3c24       mov rdi, qword [r12]
0x0000bd45      e8165fffff     call sym.imp.free
0x0000bd4a      498b7c2440     mov rdi, qword [r12 + 0x40]
0x0000bd4f      4885ff         test rdi, rdi
0x0000bd52      7453           je 0xbda7
0x0000bd54      4531f6         xor r14d, r14d
0x0000bd57      4531ed         xor r13d, r13d
0x0000bd5a      660f1f440000   nop word [rax + rax]
0x0000bd60      4a8d2c37       lea rbp, [rdi + r14]
0x0000bd64      48837d0000     cmp qword [rbp], 0
0x0000bd69      7e1c           jle 0xbd87
0x0000bd6b      31db           xor ebx, ebx
0x0000bd6d      0f1f00         nop dword [rax]
0x0000bd70      488b4510       mov rax, qword [rbp + 0x10]
0x0000bd74      488b3cd8       mov rdi, qword [rax + rbx*8]
0x0000bd78      4883c301       add rbx, 1
0x0000bd7c      e85ffeffff     call sym.free_state
0x0000bd81      48395d00       cmp qword [rbp], rbx
0x0000bd85      7fe9           jg 0xbd70
0x0000bd87      488b7d10       mov rdi, qword [rbp + 0x10]
0x0000bd8b      4983c501       add r13, 1
0x0000bd8f      4983c618       add r14, 0x18
0x0000bd93      e8c85effff     call sym.imp.free
0x0000bd98      4d39ac248800.  cmp qword [r12 + 0x88], r13
0x0000bda0      498b7c2440     mov rdi, qword [r12 + 0x40]
0x0000bda5      73b9           jae 0xbd60
0x0000bda7      e8b45effff     call sym.imp.free
0x0000bdac      498b7c2478     mov rdi, qword [r12 + 0x78]
0x0000bdb1      488d05480f01.  lea rax, obj.utf8_sb_map                ; 0x1cd00
0x0000bdb8      4839c7         cmp rdi, rax
0x0000bdbb      7405           je 0xbdc2
0x0000bdbd      e89e5effff     call sym.imp.free
0x0000bdc2      498bbc24e000.  mov rdi, qword [r12 + 0xe0]
0x0000bdca      e8915effff     call sym.imp.free
0x0000bdcf      5b             pop rbx
0x0000bdd0      4c89e7         mov rdi, r12
0x0000bdd3      5d             pop rbp
0x0000bdd4      415c           pop r12
0x0000bdd6      415d           pop r13
0x0000bdd8      415e           pop r14
0x0000bdda      e9815effff     jmp sym.imp.free
0x0000bddf      90             nop
;-- match_ctx_clean:
0x0000bde0      4156           push r14
0x0000bde2      4155           push r13
0x0000bde4      4989fe         mov r14, rdi
0x0000bde7      4154           push r12
0x0000bde9      55             push rbp
0x0000bdea      53             push rbx
0x0000bdeb      4883bfe80000.  cmp qword [rdi + 0xe8], 0
0x0000bdf3      0f8e80000000   jle 0xbe79
0x0000bdf9      4531ed         xor r13d, r13d
0x0000bdfc      0f1f4000       nop dword [rax]
0x0000be00      498b86f80000.  mov rax, qword [r14 + 0xf8]
0x0000be07      4e8b24e8       mov r12, qword [rax + r13*8]
0x0000be0b      49837c242000   cmp qword [r12 + 0x20], 0
0x0000be11      7e2a           jle 0xbe3d
0x0000be13      31db           xor ebx, ebx
0x0000be15      0f1f00         nop dword [rax]
0x0000be18      498b442428     mov rax, qword [r12 + 0x28]
0x0000be1d      488b2cd8       mov rbp, qword [rax + rbx*8]
0x0000be21      4883c301       add rbx, 1
0x0000be25      488b7d20       mov rdi, qword [rbp + 0x20]
0x0000be29      e8325effff     call sym.imp.free
0x0000be2e      4889ef         mov rdi, rbp
0x0000be31      e82a5effff     call sym.imp.free
0x0000be36      49395c2420     cmp qword [r12 + 0x20], rbx
0x0000be3b      7fdb           jg 0xbe18
0x0000be3d      498b7c2428     mov rdi, qword [r12 + 0x28]
0x0000be42      e8195effff     call sym.imp.free
0x0000be47      498b442410     mov rax, qword [r12 + 0x10]
0x0000be4c      4885c0         test rax, rax
0x0000be4f      7413           je 0xbe64
0x0000be51      488b7810       mov rdi, qword [rax + 0x10]
0x0000be55      e8065effff     call sym.imp.free
0x0000be5a      498b7c2410     mov rdi, qword [r12 + 0x10]
0x0000be5f      e8fc5dffff     call sym.imp.free
0x0000be64      4c89e7         mov rdi, r12
0x0000be67      4983c501       add r13, 1
0x0000be6b      e8f05dffff     call sym.imp.free
0x0000be70      4d39aee80000.  cmp qword [r14 + 0xe8], r13
0x0000be77      7f87           jg 0xbe00
0x0000be79      5b             pop rbx
0x0000be7a      49c786e80000.  mov qword [r14 + 0xe8], 0
0x0000be85      49c786c80000.  mov qword [r14 + 0xc8], 0
0x0000be90      5d             pop rbp
0x0000be91      415c           pop r12
0x0000be93      415d           pop r13
0x0000be95      415e           pop r14
0x0000be97      c3             ret
0x0000be98      0f1f84000000.  nop dword [rax + rax]
;-- re_string_char_size_at.part.0:
0x0000bea0      488b4f30       mov rcx, qword [rdi + 0x30]
0x0000bea4      488d4601       lea rax, [rsi + 1]
0x0000bea8      4839c8         cmp rax, rcx
0x0000beab      7d3b           jge 0xbee8
0x0000bead      488b5710       mov rdx, qword [rdi + 0x10]
0x0000beb1      488d3c850000.  lea rdi, [rax*4]
0x0000beb9      833c82ff       cmp dword [rdx + rax*4], 0xffffffff
0x0000bebd      7529           jne 0xbee8
0x0000bebf      4829f1         sub rcx, rsi
0x0000bec2      488d743afc     lea rsi, [rdx + rdi - 4]
0x0000bec7      ba02000000     mov edx, 2
0x0000becc      eb0d           jmp 0xbedb
0x0000bece      6690           nop
0x0000bed0      4883c201       add rdx, 1
0x0000bed4      837c96fcff     cmp dword [rsi + rdx*4 - 4], 0xffffffff
0x0000bed9      7512           jne 0xbeed
0x0000bedb      4839ca         cmp rdx, rcx
0x0000bede      89d0           mov eax, edx
0x0000bee0      75ee           jne 0xbed0
0x0000bee2      f3c3           ret
0x0000bee4      0f1f4000       nop dword [rax]
0x0000bee8      b801000000     mov eax, 1
0x0000beed      f3c3           ret
0x0000beef      90             nop
;-- re_node_set_compare.part.2:
0x0000bef0      488b5708       mov rdx, qword [rdi + 8]
0x0000bef4      31c0           xor eax, eax
0x0000bef6      483b5608       cmp rdx, qword [rsi + 8]
0x0000befa      7404           je 0xbf00
0x0000befc      f3c3           ret
0x0000befe      6690           nop
0x0000bf00      488d42ff       lea rax, [rdx - 1]
0x0000bf04      488d14c50000.  lea rdx, [rax*8]
0x0000bf0c      eb1f           jmp 0xbf2d
0x0000bf0e      6690           nop
0x0000bf10      488b4f10       mov rcx, qword [rdi + 0x10]
0x0000bf14      4c8b0411       mov r8, qword [rcx + rdx]
0x0000bf18      488b4e10       mov rcx, qword [rsi + 0x10]
0x0000bf1c      488b0c11       mov rcx, qword [rcx + rdx]
0x0000bf20      4883ea08       sub rdx, 8
0x0000bf24      4939c8         cmp r8, rcx
0x0000bf27      7517           jne 0xbf40
0x0000bf29      4883e801       sub rax, 1
0x0000bf2d      4885c0         test rax, rax
0x0000bf30      79de           jns 0xbf10
0x0000bf32      b801000000     mov eax, 1
0x0000bf37      c3             ret
0x0000bf38      0f1f84000000.  nop dword [rax + rax]
0x0000bf40      31c0           xor eax, eax
0x0000bf42      c3             ret
0x0000bf43      0f1f00         nop dword [rax]
0x0000bf46      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_node_set_contains.isra.3:
0x0000bf50      31c0           xor eax, eax
0x0000bf52      4885ff         test rdi, rdi
0x0000bf55      7e3e           jle 0xbf95
0x0000bf57      4c8b06         mov r8, qword [rsi]
0x0000bf5a      4883ef01       sub rdi, 1
0x0000bf5e      31f6           xor esi, esi
0x0000bf60      4839fe         cmp rsi, rdi
0x0000bf63      7328           jae 0xbf8d
0x0000bf65      488d0c3e       lea rcx, [rsi + rdi]
0x0000bf69      48d1e9         shr rcx, 1
0x0000bf6c      493b14c8       cmp rdx, qword [r8 + rcx*8]
0x0000bf70      7e16           jle 0xbf88
0x0000bf72      eb2c           jmp 0xbfa0
0x0000bf74      0f1f4000       nop dword [rax]
0x0000bf78      488d040e       lea rax, [rsi + rcx]
0x0000bf7c      48d1e8         shr rax, 1
0x0000bf7f      493914c0       cmp qword [r8 + rax*8], rdx
0x0000bf83      7c2b           jl 0xbfb0
0x0000bf85      4889c1         mov rcx, rax
0x0000bf88      4839ce         cmp rsi, rcx
0x0000bf8b      72eb           jb 0xbf78
0x0000bf8d      31c0           xor eax, eax
0x0000bf8f      493b14f0       cmp rdx, qword [r8 + rsi*8]
0x0000bf93      742b           je 0xbfc0
0x0000bf95      f3c3           ret
0x0000bf97      660f1f840000.  nop word [rax + rax]
0x0000bfa0      4889c8         mov rax, rcx
0x0000bfa3      4889f9         mov rcx, rdi
0x0000bfa6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000bfb0      488d7001       lea rsi, [rax + 1]
0x0000bfb4      4889cf         mov rdi, rcx
0x0000bfb7      eba7           jmp 0xbf60
0x0000bfb9      0f1f80000000.  nop dword [rax]
0x0000bfc0      488d4601       lea rax, [rsi + 1]
0x0000bfc4      c3             ret
0x0000bfc5      90             nop
0x0000bfc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- check_arrival_expand_ecl_sub:
0x0000bfd0      4157           push r15
0x0000bfd2      4156           push r14
0x0000bfd4      4c8d7610       lea r14, [rsi + 0x10]
0x0000bfd8      4155           push r13
0x0000bfda      4154           push r12
0x0000bfdc      4989cf         mov r15, rcx
0x0000bfdf      55             push rbp
0x0000bfe0      53             push rbx
0x0000bfe1      4989fc         mov r12, rdi
0x0000bfe4      4889f5         mov rbp, rsi
0x0000bfe7      4889d3         mov rbx, rdx
0x0000bfea      4589c5         mov r13d, r8d
0x0000bfed      4883ec08       sub rsp, 8
0x0000bff1      488b7d08       mov rdi, qword [rbp + 8]
0x0000bff5      4889da         mov rdx, rbx
0x0000bff8      4c89f6         mov rsi, r14
0x0000bffb      e850ffffff     call sym.re_node_set_contains.isra.3
0x0000c000      4885c0         test rax, rax
0x0000c003      756b           jne 0xc070
0x0000c005      4889d8         mov rax, rbx
0x0000c008      48c1e004       shl rax, 4
0x0000c00c      49030424       add rax, qword [r12]
0x0000c010      0fb65008       movzx edx, byte [rax + 8]
0x0000c014      4439ea         cmp edx, r13d
0x0000c017      7505           jne 0xc01e
0x0000c019      4c3938         cmp qword [rax], r15
0x0000c01c      743a           je 0xc058
0x0000c01e      4889de         mov rsi, rbx
0x0000c021      4889ef         mov rdi, rbp
0x0000c024      e8e7e9ffff     call sym.re_node_set_insert
0x0000c029      84c0           test al, al
0x0000c02b      745b           je 0xc088
0x0000c02d      488d1c5b       lea rbx, [rbx + rbx*2]
0x0000c031      498b542428     mov rdx, qword [r12 + 0x28]
0x0000c036      48c1e303       shl rbx, 3
0x0000c03a      4801da         add rdx, rbx
0x0000c03d      488b4208       mov rax, qword [rdx + 8]
0x0000c041      4885c0         test rax, rax
0x0000c044      742a           je 0xc070
0x0000c046      4883f802       cmp rax, 2
0x0000c04a      488b5210       mov rdx, qword [rdx + 0x10]
0x0000c04e      7450           je 0xc0a0
0x0000c050      488b1a         mov rbx, qword [rdx]
0x0000c053      eb9c           jmp 0xbff1
0x0000c055      0f1f00         nop dword [rax]
0x0000c058      4183fd09       cmp r13d, 9
0x0000c05c      7512           jne 0xc070
0x0000c05e      4889de         mov rsi, rbx
0x0000c061      4889ef         mov rdi, rbp
0x0000c064      e8a7e9ffff     call sym.re_node_set_insert
0x0000c069      84c0           test al, al
0x0000c06b      741b           je 0xc088
0x0000c06d      0f1f00         nop dword [rax]
0x0000c070      31c0           xor eax, eax
0x0000c072      4883c408       add rsp, 8
0x0000c076      5b             pop rbx
0x0000c077      5d             pop rbp
0x0000c078      415c           pop r12
0x0000c07a      415d           pop r13
0x0000c07c      415e           pop r14
0x0000c07e      415f           pop r15
0x0000c080      c3             ret
0x0000c081      0f1f80000000.  nop dword [rax]
0x0000c088      4883c408       add rsp, 8
0x0000c08c      b80c000000     mov eax, 0xc
0x0000c091      5b             pop rbx
0x0000c092      5d             pop rbp
0x0000c093      415c           pop r12
0x0000c095      415d           pop r13
0x0000c097      415e           pop r14
0x0000c099      415f           pop r15
0x0000c09b      c3             ret
0x0000c09c      0f1f4000       nop dword [rax]
0x0000c0a0      488b5208       mov rdx, qword [rdx + 8]
0x0000c0a4      4589e8         mov r8d, r13d
0x0000c0a7      4c89f9         mov rcx, r15
0x0000c0aa      4889ee         mov rsi, rbp
0x0000c0ad      4c89e7         mov rdi, r12
0x0000c0b0      e81bffffff     call sym.check_arrival_expand_ecl_sub
0x0000c0b5      85c0           test eax, eax
0x0000c0b7      75b9           jne 0xc072
0x0000c0b9      498b442428     mov rax, qword [r12 + 0x28]
0x0000c0be      488b541810     mov rdx, qword [rax + rbx + 0x10]
0x0000c0c3      eb8b           jmp 0xc050
0x0000c0c5      90             nop
0x0000c0c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_node_set_remove_at.isra.4.part.5:
0x0000c0d0      488b07         mov rax, qword [rdi]
0x0000c0d3      4839d0         cmp rax, rdx
0x0000c0d6      7e2a           jle 0xc102
0x0000c0d8      4883e801       sub rax, 1
0x0000c0dc      4839c2         cmp rdx, rax
0x0000c0df      488907         mov qword [rdi], rax
0x0000c0e2      7d1e           jge 0xc102
0x0000c0e4      488b06         mov rax, qword [rsi]
0x0000c0e7      660f1f840000.  nop word [rax + rax]
0x0000c0f0      488b4cd008     mov rcx, qword [rax + rdx*8 + 8]
0x0000c0f5      48890cd0       mov qword [rax + rdx*8], rcx
0x0000c0f9      4883c201       add rdx, 1
0x0000c0fd      483b17         cmp rdx, qword [rdi]
0x0000c100      7cee           jl 0xc0f0
0x0000c102      f3c3           ret
0x0000c104      6690           nop
0x0000c106      662e0f1f8400.  nop word cs:[rax + rax]
;-- optimize_subexps:
0x0000c110      0fb64630       movzx eax, byte [rsi + 0x30]
0x0000c114      3c04           cmp al, 4
0x0000c116      7458           je 0xc170
0x0000c118      3c11           cmp al, 0x11
0x0000c11a      7404           je 0xc120
0x0000c11c      31c0           xor eax, eax
0x0000c11e      c3             ret
0x0000c11f      90             nop
0x0000c120      488b4608       mov rax, qword [rsi + 8]
0x0000c124      4885c0         test rax, rax
0x0000c127      74f3           je 0xc11c
0x0000c129      80783011       cmp byte [rax + 0x30], 0x11
0x0000c12d      75ed           jne 0xc11c
0x0000c12f      488b4828       mov rcx, qword [rax + 0x28]
0x0000c133      488b4008       mov rax, qword [rax + 8]
0x0000c137      4885c0         test rax, rax
0x0000c13a      48894608       mov qword [rsi + 8], rax
0x0000c13e      7403           je 0xc143
0x0000c140      488930         mov qword [rax], rsi
0x0000c143      488b87e00000.  mov rax, qword [rdi + 0xe0]
0x0000c14a      488b5628       mov rdx, qword [rsi + 0x28]
0x0000c14e      4883f93f       cmp rcx, 0x3f
0x0000c152      488b14d0       mov rdx, qword [rax + rdx*8]
0x0000c156      488914c8       mov qword [rax + rcx*8], rdx
0x0000c15a      7fc0           jg 0xc11c
0x0000c15c      48c7c0feffff.  mov rax, 0xfffffffffffffffe
0x0000c163      48d3c0         rol rax, cl
0x0000c166      482187a00000.  and qword [rdi + 0xa0], rax
0x0000c16d      ebad           jmp 0xc11c
0x0000c16f      90             nop
0x0000c170      488b87e00000.  mov rax, qword [rdi + 0xe0]
0x0000c177      4885c0         test rax, rax
0x0000c17a      74a0           je 0xc11c
0x0000c17c      48635628       movsxd rdx, dword [rsi + 0x28]
0x0000c180      488b0cd0       mov rcx, qword [rax + rdx*8]
0x0000c184      b801000000     mov eax, 1
0x0000c189      d3e0           shl eax, cl
0x0000c18b      48894e28       mov qword [rsi + 0x28], rcx
0x0000c18f      4898           cdqe
0x0000c191      480987a00000.  or qword [rdi + 0xa0], rax
0x0000c198      31c0           xor eax, eax
0x0000c19a      c3             ret
0x0000c19b      0f1f440000     nop dword [rax + rax]
;-- calc_next:
0x0000c1a0      0fb64630       movzx eax, byte [rsi + 0x30]
0x0000c1a4      488b5608       mov rdx, qword [rsi + 8]
0x0000c1a8      3c0b           cmp al, 0xb
0x0000c1aa      7444           je 0xc1f0
0x0000c1ac      3c10           cmp al, 0x10
0x0000c1ae      7428           je 0xc1d8
0x0000c1b0      4885d2         test rdx, rdx
0x0000c1b3      7408           je 0xc1bd
0x0000c1b5      488b4620       mov rax, qword [rsi + 0x20]
0x0000c1b9      48894220       mov qword [rdx + 0x20], rax
0x0000c1bd      488b4610       mov rax, qword [rsi + 0x10]
0x0000c1c1      4885c0         test rax, rax
0x0000c1c4      7408           je 0xc1ce
0x0000c1c6      488b5620       mov rdx, qword [rsi + 0x20]
0x0000c1ca      48895020       mov qword [rax + 0x20], rdx
0x0000c1ce      31c0           xor eax, eax
0x0000c1d0      c3             ret
0x0000c1d1      0f1f80000000.  nop dword [rax]
0x0000c1d8      488b4610       mov rax, qword [rsi + 0x10]
0x0000c1dc      488b4818       mov rcx, qword [rax + 0x18]
0x0000c1e0      48894a20       mov qword [rdx + 0x20], rcx
0x0000c1e4      488b5620       mov rdx, qword [rsi + 0x20]
0x0000c1e8      48895020       mov qword [rax + 0x20], rdx
0x0000c1ec      31c0           xor eax, eax
0x0000c1ee      c3             ret
0x0000c1ef      90             nop
0x0000c1f0      48897220       mov qword [rdx + 0x20], rsi
0x0000c1f4      31c0           xor eax, eax
0x0000c1f6      c3             ret
0x0000c1f7      660f1f840000.  nop word [rax + rax]
;-- check_dst_limits.isra.13:
0x0000c200      4157           push r15
0x0000c202      4156           push r14
0x0000c204      4155           push r13
0x0000c206      4154           push r12
0x0000c208      55             push rbp
0x0000c209      53             push rbx
0x0000c20a      31db           xor ebx, ebx
0x0000c20c      4883ec48       sub rsp, 0x48
0x0000c210      488b87980000.  mov rax, qword [rdi + 0x98]
0x0000c217      4c8bbfc80000.  mov r15, qword [rdi + 0xc8]
0x0000c21e      4c8ba4248000.  mov r12, qword [rsp + 0x80]
0x0000c226      4889442408     mov qword [rsp + 8], rax
0x0000c22b      4c89fd         mov rbp, r15
0x0000c22e      4839eb         cmp rbx, rbp
0x0000c231      7d58           jge 0xc28b
0x0000c233      488d042b       lea rax, [rbx + rbp]
0x0000c237      4c8bafd80000.  mov r13, qword [rdi + 0xd8]
0x0000c23e      4989c2         mov r10, rax
0x0000c241      49c1ea3f       shr r10, 0x3f
0x0000c245      4901c2         add r10, rax
0x0000c248      49d1fa         sar r10, 1
0x0000c24b      4b8d0492       lea rax, [r10 + r10*4]
0x0000c24f      4d3b44c508     cmp r8, qword [r13 + rax*8 + 8]
0x0000c254      7e30           jle 0xc286
0x0000c256      e995010000     jmp 0xc3f0
0x0000c25b      0f1f440000     nop dword [rax + rax]
0x0000c260      4e8d1c13       lea r11, [rbx + r10]
0x0000c264      4c89d8         mov rax, r11
0x0000c267      48c1e83f       shr rax, 0x3f
0x0000c26b      4c01d8         add rax, r11
0x0000c26e      48d1f8         sar rax, 1
0x0000c271      4c8d1c80       lea r11, [rax + rax*4]
0x0000c275      4989c6         mov r14, rax
0x0000c278      4f3944dd08     cmp qword [r13 + r11*8 + 8], r8
0x0000c27d      0f8c7d010000   jl 0xc400
0x0000c283      4989c2         mov r10, rax
0x0000c286      4c39d3         cmp rbx, r10
0x0000c289      7cd5           jl 0xc260
0x0000c28b      4939df         cmp r15, rbx
0x0000c28e      0f8e9c010000   jle 0xc430
0x0000c294      4c8b9fd80000.  mov r11, qword [rdi + 0xd8]
0x0000c29b      488d049b       lea rax, [rbx + rbx*4]
0x0000c29f      498d04c3       lea rax, [r11 + rax*8]
0x0000c2a3      4c3b4008       cmp r8, qword [rax + 8]
0x0000c2a7      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x0000c2ae      480f45d8       cmovne rbx, rax
0x0000c2b2      4c89f8         mov rax, r15
0x0000c2b5      31ed           xor ebp, ebp
0x0000c2b7      4839c5         cmp rbp, rax
0x0000c2ba      7d58           jge 0xc314
0x0000c2bc      4c8d5c0500     lea r11, [rbp + rax]
0x0000c2c1      4d89da         mov r10, r11
0x0000c2c4      49c1ea3f       shr r10, 0x3f
0x0000c2c8      4d01da         add r10, r11
0x0000c2cb      4c8b9fd80000.  mov r11, qword [rdi + 0xd8]
0x0000c2d2      49d1fa         sar r10, 1
0x0000c2d5      4f8d2c92       lea r13, [r10 + r10*4]
0x0000c2d9      4f3b64eb08     cmp r12, qword [r11 + r13*8 + 8]
0x0000c2de      7e2f           jle 0xc30f
0x0000c2e0      e92b010000     jmp 0xc410
0x0000c2e5      0f1f00         nop dword [rax]
0x0000c2e8      4e8d6c1500     lea r13, [rbp + r10]
0x0000c2ed      4c89e8         mov rax, r13
0x0000c2f0      48c1e83f       shr rax, 0x3f
0x0000c2f4      4c01e8         add rax, r13
0x0000c2f7      48d1f8         sar rax, 1
0x0000c2fa      4c8d2c80       lea r13, [rax + rax*4]
0x0000c2fe      4989c6         mov r14, rax
0x0000c301      4f3964eb08     cmp qword [r11 + r13*8 + 8], r12
0x0000c306      0f8c14010000   jl 0xc420
0x0000c30c      4989c2         mov r10, rax
0x0000c30f      4c39d5         cmp rbp, r10
0x0000c312      7cd4           jl 0xc2e8
0x0000c314      4939ef         cmp r15, rbp
0x0000c317      0f8e23010000   jle 0xc440
0x0000c31d      4c8b97d80000.  mov r10, qword [rdi + 0xd8]
0x0000c324      488d44ad00     lea rax, [rbp + rbp*4]
0x0000c329      498d04c2       lea rax, [r10 + rax*8]
0x0000c32d      4c3b6008       cmp r12, qword [rax + 8]
0x0000c331      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x0000c338      480f45e8       cmovne rbp, rax
0x0000c33c      48833e00       cmp qword [rsi], 0
0x0000c340      0f8e1c010000   jle 0xc462
0x0000c346      48896c2430     mov qword [rsp + 0x30], rbp
0x0000c34b      4c894c2420     mov qword [rsp + 0x20], r9
0x0000c350      4989fd         mov r13, rdi
0x0000c353      4c89442418     mov qword [rsp + 0x18], r8
0x0000c358      48894c2410     mov qword [rsp + 0x10], rcx
0x0000c35d      4531f6         xor r14d, r14d
0x0000c360      4889742438     mov qword [rsp + 0x38], rsi
0x0000c365      48895c2428     mov qword [rsp + 0x28], rbx
0x0000c36a      4889d5         mov rbp, rdx
0x0000c36d      4d89e7         mov r15, r12
0x0000c370      488b4500       mov rax, qword [rbp]
0x0000c374      498b95d80000.  mov rdx, qword [r13 + 0xd8]
0x0000c37b      4c89ef         mov rdi, r13
0x0000c37e      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x0000c383      4c8b442418     mov r8, qword [rsp + 0x18]
0x0000c388      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0000c38d      4a8b34f0       mov rsi, qword [rax + r14*8]
0x0000c391      488d04b6       lea rax, [rsi + rsi*4]
0x0000c395      488d04c2       lea rax, [rdx + rax*8]
0x0000c399      488b542408     mov rdx, qword [rsp + 8]
0x0000c39e      488b00         mov rax, qword [rax]
0x0000c3a1      48c1e004       shl rax, 4
0x0000c3a5      480302         add rax, qword [rdx]
0x0000c3a8      4c8b20         mov r12, qword [rax]
0x0000c3ab      4c89e2         mov rdx, r12
0x0000c3ae      e80de4ffff     call sym.check_dst_limits_calc_pos
0x0000c3b3      89c3           mov ebx, eax
0x0000c3b5      488b4500       mov rax, qword [rbp]
0x0000c3b9      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x0000c3be      488b4c2420     mov rcx, qword [rsp + 0x20]
0x0000c3c3      4d89f8         mov r8, r15
0x0000c3c6      4c89e2         mov rdx, r12
0x0000c3c9      4c89ef         mov rdi, r13
0x0000c3cc      4a8b34f0       mov rsi, qword [rax + r14*8]
0x0000c3d0      e8ebe3ffff     call sym.check_dst_limits_calc_pos
0x0000c3d5      39c3           cmp ebx, eax
0x0000c3d7      7477           je 0xc450
0x0000c3d9      b801000000     mov eax, 1
0x0000c3de      4883c448       add rsp, 0x48
0x0000c3e2      5b             pop rbx
0x0000c3e3      5d             pop rbp
0x0000c3e4      415c           pop r12
0x0000c3e6      415d           pop r13
0x0000c3e8      415e           pop r14
0x0000c3ea      415f           pop r15
0x0000c3ec      c3             ret
0x0000c3ed      0f1f00         nop dword [rax]
0x0000c3f0      4d89d6         mov r14, r10
0x0000c3f3      4989ea         mov r10, rbp
0x0000c3f6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000c400      498d5e01       lea rbx, [r14 + 1]
0x0000c404      4c89d5         mov rbp, r10
0x0000c407      e922feffff     jmp 0xc22e
0x0000c40c      0f1f4000       nop dword [rax]
0x0000c410      4d89d6         mov r14, r10
0x0000c413      4989c2         mov r10, rax
0x0000c416      662e0f1f8400.  nop word cs:[rax + rax]
0x0000c420      498d6e01       lea rbp, [r14 + 1]
0x0000c424      4c89d0         mov rax, r10
0x0000c427      e98bfeffff     jmp 0xc2b7
0x0000c42c      0f1f4000       nop dword [rax]
0x0000c430      48c7c3ffffff.  mov rbx, 0xffffffffffffffff
0x0000c437      e976feffff     jmp 0xc2b2
0x0000c43c      0f1f4000       nop dword [rax]
0x0000c440      48c7c5ffffff.  mov rbp, 0xffffffffffffffff
0x0000c447      e9f0feffff     jmp 0xc33c
0x0000c44c      0f1f4000       nop dword [rax]
0x0000c450      488b442438     mov rax, qword [rsp + 0x38]
0x0000c455      4983c601       add r14, 1
0x0000c459      4c3b30         cmp r14, qword [rax]
0x0000c45c      0f8c0effffff   jl 0xc370
0x0000c462      31c0           xor eax, eax
0x0000c464      e975ffffff     jmp 0xc3de
0x0000c469      0f1f80000000.  nop dword [rax]
;-- re_node_set_merge:
0x0000c470      4885f6         test rsi, rsi
0x0000c473      0f84ef000000   je 0xc568
0x0000c479      488b5608       mov rdx, qword [rsi + 8]
0x0000c47d      4885d2         test rdx, rdx
0x0000c480      0f84e2000000   je 0xc568
0x0000c486      4154           push r12
0x0000c488      55             push rbp
0x0000c489      4989f4         mov r12, rsi
0x0000c48c      53             push rbx
0x0000c48d      488b4708       mov rax, qword [rdi + 8]
0x0000c491      4889fb         mov rbx, rdi
0x0000c494      488b37         mov rsi, qword [rdi]
0x0000c497      488d0c50       lea rcx, [rax + rdx*2]
0x0000c49b      4839ce         cmp rsi, rcx
0x0000c49e      0f8c44010000   jl 0xc5e8
0x0000c4a4      4885c0         test rax, rax
0x0000c4a7      0f8473010000   je 0xc620
0x0000c4ad      488d2c50       lea rbp, [rax + rdx*2]
0x0000c4b1      4883ea01       sub rdx, 1
0x0000c4b5      4883e801       sub rax, 1
0x0000c4b9      4889d7         mov rdi, rdx
0x0000c4bc      48f7d7         not rdi
0x0000c4bf      4885ff         test rdi, rdi
0x0000c4c2      793c           jns 0xc500
0x0000c4c4      4885c0         test rax, rax
0x0000c4c7      7837           js 0xc500
0x0000c4c9      488b4b10       mov rcx, qword [rbx + 0x10]
0x0000c4cd      498b742410     mov rsi, qword [r12 + 0x10]
0x0000c4d2      488b34d6       mov rsi, qword [rsi + rdx*8]
0x0000c4d6      483934c1       cmp qword [rcx + rax*8], rsi
0x0000c4da      0f8490000000   je 0xc570
0x0000c4e0      0f8da2000000   jge 0xc588
0x0000c4e6      4883ea01       sub rdx, 1
0x0000c4ea      4883ed01       sub rbp, 1
0x0000c4ee      4889d7         mov rdi, rdx
0x0000c4f1      488934e9       mov qword [rcx + rbp*8], rsi
0x0000c4f5      48f7d7         not rdi
0x0000c4f8      4885ff         test rdi, rdi
0x0000c4fb      78c7           js 0xc4c4
0x0000c4fd      0f1f00         nop dword [rax]
0x0000c500      4885d2         test rdx, rdx
0x0000c503      0f898f000000   jns 0xc598
0x0000c509      488b4b08       mov rcx, qword [rbx + 8]
0x0000c50d      498b442408     mov rax, qword [r12 + 8]
0x0000c512      4c8d4441ff     lea r8, [rcx + rax*2 - 1]
0x0000c517      4c89c2         mov rdx, r8
0x0000c51a      4829ea         sub rdx, rbp
0x0000c51d      4883c201       add rdx, 1
0x0000c521      7437           je 0xc55a
0x0000c523      488b7b10       mov rdi, qword [rbx + 0x10]
0x0000c527      488d41ff       lea rax, [rcx - 1]
0x0000c52b      4801d1         add rcx, rdx
0x0000c52e      48894b08       mov qword [rbx + 8], rcx
0x0000c532      660f1f440000   nop word [rax + rax]
0x0000c538      4a8b34c7       mov rsi, qword [rdi + r8*8]
0x0000c53c      488b0cc7       mov rcx, qword [rdi + rax*8]
0x0000c540      4c8d0c10       lea r9, [rax + rdx]
0x0000c544      4e8d0ccf       lea r9, [rdi + r9*8]
0x0000c548      4839ce         cmp rsi, rcx
0x0000c54b      7e73           jle 0xc5c0
0x0000c54d      4983e801       sub r8, 1
0x0000c551      4883ea01       sub rdx, 1
0x0000c555      498931         mov qword [r9], rsi
0x0000c558      75de           jne 0xc538
0x0000c55a      31c0           xor eax, eax
0x0000c55c      5b             pop rbx
0x0000c55d      5d             pop rbp
0x0000c55e      415c           pop r12
0x0000c560      c3             ret
0x0000c561      0f1f80000000.  nop dword [rax]
0x0000c568      31c0           xor eax, eax
0x0000c56a      c3             ret
0x0000c56b      0f1f440000     nop dword [rax + rax]
0x0000c570      4883ea01       sub rdx, 1
0x0000c574      4883e801       sub rax, 1
0x0000c578      4889d7         mov rdi, rdx
0x0000c57b      48f7d7         not rdi
0x0000c57e      e93cffffff     jmp 0xc4bf
0x0000c583      0f1f440000     nop dword [rax + rax]
0x0000c588      4883e801       sub rax, 1
0x0000c58c      e92effffff     jmp 0xc4bf
0x0000c591      0f1f80000000.  nop dword [rax]
0x0000c598      488b4310       mov rax, qword [rbx + 0x10]
0x0000c59c      4883c201       add rdx, 1
0x0000c5a0      498b742410     mov rsi, qword [r12 + 0x10]
0x0000c5a5      4829d5         sub rbp, rdx
0x0000c5a8      48c1e203       shl rdx, 3
0x0000c5ac      488d3ce8       lea rdi, [rax + rbp*8]
0x0000c5b0      e82b59ffff     call sym.imp.memcpy
0x0000c5b5      e94fffffff     jmp 0xc509
0x0000c5ba      660f1f440000   nop word [rax + rax]
0x0000c5c0      4883e801       sub rax, 1
0x0000c5c4      498909         mov qword [r9], rcx
0x0000c5c7      0f896bffffff   jns 0xc538
0x0000c5cd      488d34ef       lea rsi, [rdi + rbp*8]
0x0000c5d1      48c1e203       shl rdx, 3
0x0000c5d5      e80659ffff     call sym.imp.memcpy
0x0000c5da      31c0           xor eax, eax
0x0000c5dc      e97bffffff     jmp 0xc55c
0x0000c5e1      0f1f80000000.  nop dword [rax]
0x0000c5e8      4801f2         add rdx, rsi
0x0000c5eb      488b7f10       mov rdi, qword [rdi + 0x10]
0x0000c5ef      488d2c12       lea rbp, [rdx + rdx]
0x0000c5f3      48c1e204       shl rdx, 4
0x0000c5f7      4889d6         mov rsi, rdx
0x0000c5fa      e89159ffff     call sym.imp.realloc
0x0000c5ff      4885c0         test rax, rax
0x0000c602      7440           je 0xc644
0x0000c604      48894310       mov qword [rbx + 0x10], rax
0x0000c608      48892b         mov qword [rbx], rbp
0x0000c60b      488b4308       mov rax, qword [rbx + 8]
0x0000c60f      498b542408     mov rdx, qword [r12 + 8]
0x0000c614      e98bfeffff     jmp 0xc4a4
0x0000c619      0f1f80000000.  nop dword [rax]
0x0000c620      48895308       mov qword [rbx + 8], rdx
0x0000c624      498b442408     mov rax, qword [r12 + 8]
0x0000c629      488b7b10       mov rdi, qword [rbx + 0x10]
0x0000c62d      498b742410     mov rsi, qword [r12 + 0x10]
0x0000c632      488d14c50000.  lea rdx, [rax*8]
0x0000c63a      e8a158ffff     call sym.imp.memcpy
0x0000c63f      e916ffffff     jmp 0xc55a
0x0000c644      b80c000000     mov eax, 0xc
0x0000c649      e90effffff     jmp 0xc55c
0x0000c64e      6690           nop
;-- calc_eclosure_iter:
0x0000c650      4157           push r15
0x0000c652      4156           push r14
0x0000c654      4989f7         mov r15, rsi
0x0000c657      4155           push r13
0x0000c659      4154           push r12
0x0000c65b      55             push rbp
0x0000c65c      53             push rbx
0x0000c65d      488d1c52       lea rbx, [rdx + rdx*2]
0x0000c661      4889d5         mov rbp, rdx
0x0000c664      4883ec68       sub rsp, 0x68
0x0000c668      4c8b6628       mov r12, qword [rsi + 0x28]
0x0000c66c      48c1e303       shl rbx, 3
0x0000c670      64488b042528.  mov rax, qword fs:[0x28]
0x0000c679      4889442458     mov qword [rsp + 0x58], rax
0x0000c67e      31c0           xor eax, eax
0x0000c680      48897c2410     mov qword [rsp + 0x10], rdi
0x0000c685      894c241c       mov dword [rsp + 0x1c], ecx
0x0000c689      4901dc         add r12, rbx
0x0000c68c      498b442408     mov rax, qword [r12 + 8]
0x0000c691      48c744242800.  mov qword [rsp + 0x28], 0
0x0000c69a      488d7801       lea rdi, [rax + 1]
0x0000c69e      48897c2420     mov qword [rsp + 0x20], rdi
0x0000c6a3      48c1e703       shl rdi, 3
0x0000c6a7      e87458ffff     call sym.imp.malloc
0x0000c6ac      4885c0         test rax, rax
0x0000c6af      4889442430     mov qword [rsp + 0x30], rax
0x0000c6b4      0f8436020000   je 0xc8f0
0x0000c6ba      498b4730       mov rax, qword [r15 + 0x30]
0x0000c6be      498b17         mov rdx, qword [r15]
0x0000c6c1      4989ed         mov r13, rbp
0x0000c6c4      49c1e504       shl r13, 4
0x0000c6c8      48c7441808ff.  mov qword [rax + rbx + 8], 0xffffffffffffffff
0x0000c6d1      4a8d042a       lea rax, [rdx + r13]
0x0000c6d5      448b4008       mov r8d, dword [rax + 8]
0x0000c6d9      41f7c000ff03.  test r8d, 0x3ff00
0x0000c6e0      0f859a010000   jne 0xc880
0x0000c6e6      f6400808       test byte [rax + 8], 8
0x0000c6ea      0f84c0000000   je 0xc7b0
0x0000c6f0      498b7728       mov rsi, qword [r15 + 0x28]
0x0000c6f4      488d041e       lea rax, [rsi + rbx]
0x0000c6f8      4883780800     cmp qword [rax + 8], 0
0x0000c6fd      0f8ead000000   jle 0xc7b0
0x0000c703      488d542420     lea rdx, [rsp + 0x20]
0x0000c708      c644241b00     mov byte [rsp + 0x1b], 0
0x0000c70d      4531f6         xor r14d, r14d
0x0000c710      4c8d642440     lea r12, [rsp + 0x40]
0x0000c715      4889542408     mov qword [rsp + 8], rdx
0x0000c71a      eb1a           jmp 0xc736
0x0000c71c      0f1f4000       nop dword [rax]
0x0000c720      498b7728       mov rsi, qword [r15 + 0x28]
0x0000c724      4983c601       add r14, 1
0x0000c728      488d041e       lea rax, [rsi + rbx]
0x0000c72c      4c397008       cmp qword [rax + 8], r14
0x0000c730      0f8e01010000   jle 0xc837
0x0000c736      488b4010       mov rax, qword [rax + 0x10]
0x0000c73a      4a8b14f0       mov rdx, qword [rax + r14*8]
0x0000c73e      498b4730       mov rax, qword [r15 + 0x30]
0x0000c742      4c8d0452       lea r8, [rdx + rdx*2]
0x0000c746      4e8d2cc50000.  lea r13, [r8*8]
0x0000c74e      4c01e8         add rax, r13
0x0000c751      488b4808       mov rcx, qword [rax + 8]
0x0000c755      4883f9ff       cmp rcx, 0xffffffffffffffff
0x0000c759      0f84c1000000   je 0xc820
0x0000c75f      4885c9         test rcx, rcx
0x0000c762      0f8470010000   je 0xc8d8
0x0000c768      f30f6f00       movdqu xmm0, xmmword [rax]
0x0000c76c      0f29442440     movaps xmmword [rsp + 0x40], xmm0
0x0000c771      488b4010       mov rax, qword [rax + 0x10]
0x0000c775      4889442450     mov qword [rsp + 0x50], rax
0x0000c77a      488b7c2408     mov rdi, qword [rsp + 8]
0x0000c77f      4c89e6         mov rsi, r12
0x0000c782      e8e9fcffff     call sym.re_node_set_merge
0x0000c787      85c0           test eax, eax
0x0000c789      756b           jne 0xc7f6
0x0000c78b      498b4730       mov rax, qword [r15 + 0x30]
0x0000c78f      4a837c280800   cmp qword [rax + r13 + 8], 0
0x0000c795      7589           jne 0xc720
0x0000c797      488b7c2450     mov rdi, qword [rsp + 0x50]
0x0000c79c      e8bf54ffff     call sym.imp.free
0x0000c7a1      c644241b01     mov byte [rsp + 0x1b], 1
0x0000c7a6      e975ffffff     jmp 0xc720
0x0000c7ab      0f1f440000     nop dword [rax + rax]
0x0000c7b0      488d7c2420     lea rdi, [rsp + 0x20]
0x0000c7b5      4889ee         mov rsi, rbp
0x0000c7b8      e853e2ffff     call sym.re_node_set_insert
0x0000c7bd      84c0           test al, al
0x0000c7bf      0f842b010000   je 0xc8f0
0x0000c7c5      498b4730       mov rax, qword [r15 + 0x30]
0x0000c7c9      660f6f442420   movdqa xmm0, xmmword [rsp + 0x20]
0x0000c7cf      0f110418       movups xmmword [rax + rbx], xmm0
0x0000c7d3      488b542430     mov rdx, qword [rsp + 0x30]
0x0000c7d8      4889541810     mov qword [rax + rbx + 0x10], rdx
0x0000c7dd      488b5c2410     mov rbx, qword [rsp + 0x10]
0x0000c7e2      488b442430     mov rax, qword [rsp + 0x30]
0x0000c7e7      660f6f442420   movdqa xmm0, xmmword [rsp + 0x20]
0x0000c7ed      0f2903         movaps xmmword [rbx], xmm0
0x0000c7f0      48894310       mov qword [rbx + 0x10], rax
0x0000c7f4      31c0           xor eax, eax
0x0000c7f6      488b742458     mov rsi, qword [rsp + 0x58]
0x0000c7fb      644833342528.  xor rsi, qword fs:[0x28]
0x0000c804      0f85f0000000   jne 0xc8fa
0x0000c80a      4883c468       add rsp, 0x68
0x0000c80e      5b             pop rbx
0x0000c80f      5d             pop rbp
0x0000c810      415c           pop r12
0x0000c812      415d           pop r13
0x0000c814      415e           pop r14
0x0000c816      415f           pop r15
0x0000c818      c3             ret
0x0000c819      0f1f80000000.  nop dword [rax]
0x0000c820      488d041e       lea rax, [rsi + rbx]
0x0000c824      4983c601       add r14, 1
0x0000c828      c644241b01     mov byte [rsp + 0x1b], 1
0x0000c82d      4c397008       cmp qword [rax + 8], r14
0x0000c831      0f8ffffeffff   jg 0xc736
0x0000c837      488d7c2420     lea rdi, [rsp + 0x20]
0x0000c83c      4889ee         mov rsi, rbp
0x0000c83f      e8cce1ffff     call sym.re_node_set_insert
0x0000c844      84c0           test al, al
0x0000c846      0f84a4000000   je 0xc8f0
0x0000c84c      807c241c01     cmp byte [rsp + 0x1c], 1
0x0000c851      498b4730       mov rax, qword [r15 + 0x30]
0x0000c855      488d1418       lea rdx, [rax + rbx]
0x0000c859      0f846affffff   je 0xc7c9
0x0000c85f      807c241b00     cmp byte [rsp + 0x1b], 0
0x0000c864      0f845fffffff   je 0xc7c9
0x0000c86a      48c742080000.  mov qword [rdx + 8], 0
0x0000c872      e966ffffff     jmp 0xc7dd
0x0000c877      660f1f840000.  nop word [rax + rax]
0x0000c880      49837c240800   cmp qword [r12 + 8], 0
0x0000c886      0f8424ffffff   je 0xc7b0
0x0000c88c      498b4c2410     mov rcx, qword [r12 + 0x10]
0x0000c891      488b09         mov rcx, qword [rcx]
0x0000c894      48c1e104       shl rcx, 4
0x0000c898      f6440a0a04     test byte [rdx + rcx + 0xa], 4
0x0000c89d      0f8543feffff   jne 0xc6e6
0x0000c8a3      41c1e808       shr r8d, 8
0x0000c8a7      4889e9         mov rcx, rbp
0x0000c8aa      4889ea         mov rdx, rbp
0x0000c8ad      4181e0ff0300.  and r8d, 0x3ff
0x0000c8b4      4889ee         mov rsi, rbp
0x0000c8b7      4c89ff         mov rdi, r15
0x0000c8ba      e8a1f0ffff     call sym.duplicate_node_closure
0x0000c8bf      85c0           test eax, eax
0x0000c8c1      0f852fffffff   jne 0xc7f6
0x0000c8c7      498b07         mov rax, qword [r15]
0x0000c8ca      4c01e8         add rax, r13
0x0000c8cd      e914feffff     jmp 0xc6e6
0x0000c8d2      660f1f440000   nop word [rax + rax]
0x0000c8d8      4c89fe         mov rsi, r15
0x0000c8db      4c89e7         mov rdi, r12
0x0000c8de      e86dfdffff     call sym.calc_eclosure_iter
0x0000c8e3      85c0           test eax, eax
0x0000c8e5      0f848ffeffff   je 0xc77a
0x0000c8eb      e906ffffff     jmp 0xc7f6
0x0000c8f0      b80c000000     mov eax, 0xc
0x0000c8f5      e9fcfeffff     jmp 0xc7f6
0x0000c8fa      e8b154ffff     call sym.imp.__stack_chk_fail
0x0000c8ff      90             nop
;-- check_arrival_expand_ecl:
0x0000c900      4157           push r15
0x0000c902      4156           push r14
0x0000c904      4989fe         mov r14, rdi
0x0000c907      4155           push r13
0x0000c909      4154           push r12
0x0000c90b      4989f7         mov r15, rsi
0x0000c90e      55             push rbp
0x0000c90f      53             push rbx
0x0000c910      4889d5         mov rbp, rdx
0x0000c913      89cb           mov ebx, ecx
0x0000c915      4883ec38       sub rsp, 0x38
0x0000c919      4c8b6608       mov r12, qword [rsi + 8]
0x0000c91d      64488b042528.  mov rax, qword fs:[0x28]
0x0000c926      4889442428     mov qword [rsp + 0x28], rax
0x0000c92b      31c0           xor eax, eax
0x0000c92d      48c744241800.  mov qword [rsp + 0x18], 0
0x0000c936      4a8d3ce50000.  lea rdi, [r12*8]
0x0000c93e      4c89642410     mov qword [rsp + 0x10], r12
0x0000c943      e8d855ffff     call sym.imp.malloc
0x0000c948      4885c0         test rax, rax
0x0000c94b      4889442420     mov qword [rsp + 0x20], rax
0x0000c950      0f84f7000000   je 0xca4d
0x0000c956      4d85e4         test r12, r12
0x0000c959      0f8e8c000000   jle 0xc9eb
0x0000c95f      4c8d642410     lea r12, [rsp + 0x10]
0x0000c964      4531ed         xor r13d, r13d
0x0000c967      660f1f840000.  nop word [rax + rax]
0x0000c970      498b4710       mov rax, qword [r15 + 0x10]
0x0000c974      4a8b14e8       mov rdx, qword [rax + r13*8]
0x0000c978      498b4630       mov rax, qword [r14 + 0x30]
0x0000c97c      488d0c52       lea rcx, [rdx + rdx*2]
0x0000c980      488d34c8       lea rsi, [rax + rcx*8]
0x0000c984      4c8b4608       mov r8, qword [rsi + 8]
0x0000c988      4d85c0         test r8, r8
0x0000c98b      0f8e7f000000   jle 0xca10
0x0000c991      4c8b5610       mov r10, qword [rsi + 0x10]
0x0000c995      4d8b0e         mov r9, qword [r14]
0x0000c998      31c9           xor ecx, ecx
0x0000c99a      eb0d           jmp 0xc9a9
0x0000c99c      0f1f4000       nop dword [rax]
0x0000c9a0      4883c101       add rcx, 1
0x0000c9a4      4939c8         cmp r8, rcx
0x0000c9a7      7467           je 0xca10
0x0000c9a9      498b3cca       mov rdi, qword [r10 + rcx*8]
0x0000c9ad      4889f8         mov rax, rdi
0x0000c9b0      48c1e004       shl rax, 4
0x0000c9b4      4c01c8         add rax, r9
0x0000c9b7      440fb65808     movzx r11d, byte [rax + 8]
0x0000c9bc      4439db         cmp ebx, r11d
0x0000c9bf      75df           jne 0xc9a0
0x0000c9c1      483b28         cmp rbp, qword [rax]
0x0000c9c4      75da           jne 0xc9a0
0x0000c9c6      4883ffff       cmp rdi, 0xffffffffffffffff
0x0000c9ca      7444           je 0xca10
0x0000c9cc      4189d8         mov r8d, ebx
0x0000c9cf      4889e9         mov rcx, rbp
0x0000c9d2      4c89e6         mov rsi, r12
0x0000c9d5      4c89f7         mov rdi, r14
0x0000c9d8      e8f3f5ffff     call sym.check_arrival_expand_ecl_sub
0x0000c9dd      85c0           test eax, eax
0x0000c9df      753b           jne 0xca1c
0x0000c9e1      4983c501       add r13, 1
0x0000c9e5      4d396f08       cmp qword [r15 + 8], r13
0x0000c9e9      7f85           jg 0xc970
0x0000c9eb      498b7f10       mov rdi, qword [r15 + 0x10]
0x0000c9ef      e86c52ffff     call sym.imp.free
0x0000c9f4      488b442420     mov rax, qword [rsp + 0x20]
0x0000c9f9      660f6f442410   movdqa xmm0, xmmword [rsp + 0x10]
0x0000c9ff      49894710       mov qword [r15 + 0x10], rax
0x0000ca03      31c0           xor eax, eax
0x0000ca05      410f2907       movaps xmmword [r15], xmm0
0x0000ca09      eb23           jmp 0xca2e
0x0000ca0b      0f1f440000     nop dword [rax + rax]
0x0000ca10      4c89e7         mov rdi, r12
0x0000ca13      e858faffff     call sym.re_node_set_merge
0x0000ca18      85c0           test eax, eax
0x0000ca1a      74c5           je 0xc9e1
0x0000ca1c      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0000ca21      8944240c       mov dword [rsp + 0xc], eax
0x0000ca25      e83652ffff     call sym.imp.free
0x0000ca2a      8b44240c       mov eax, dword [rsp + 0xc]
0x0000ca2e      488b542428     mov rdx, qword [rsp + 0x28]
0x0000ca33      644833142528.  xor rdx, qword fs:[0x28]
0x0000ca3c      7516           jne 0xca54
0x0000ca3e      4883c438       add rsp, 0x38
0x0000ca42      5b             pop rbx
0x0000ca43      5d             pop rbp
0x0000ca44      415c           pop r12
0x0000ca46      415d           pop r13
0x0000ca48      415e           pop r14
0x0000ca4a      415f           pop r15
0x0000ca4c      c3             ret
0x0000ca4d      b80c000000     mov eax, 0xc
0x0000ca52      ebda           jmp 0xca2e
0x0000ca54      e85753ffff     call sym.imp.__stack_chk_fail
0x0000ca59      0f1f80000000.  nop dword [rax]
;-- re_node_set_add_intersect:
0x0000ca60      4c8b4e08       mov r9, qword [rsi + 8]
0x0000ca64      31c0           xor eax, eax
0x0000ca66      4d85c9         test r9, r9
0x0000ca69      0f84b9000000   je 0xcb28
0x0000ca6f      4c8b5a08       mov r11, qword [rdx + 8]
0x0000ca73      4d85db         test r11, r11
0x0000ca76      0f84ac000000   je 0xcb28
0x0000ca7c      4155           push r13
0x0000ca7e      4154           push r12
0x0000ca80      4b8d0419       lea rax, [r9 + r11]
0x0000ca84      55             push rbp
0x0000ca85      53             push rbx
0x0000ca86      4989d4         mov r12, rdx
0x0000ca89      4889fb         mov rbx, rdi
0x0000ca8c      4889f5         mov rbp, rsi
0x0000ca8f      4883ec08       sub rsp, 8
0x0000ca93      488b4f08       mov rcx, qword [rdi + 8]
0x0000ca97      4c8b2f         mov r13, qword [rdi]
0x0000ca9a      488b7f10       mov rdi, qword [rdi + 0x10]
0x0000ca9e      488d1408       lea rdx, [rax + rcx]
0x0000caa2      4c39ea         cmp rdx, r13
0x0000caa5      0f8f25010000   jg 0xcbd0
0x0000caab      4a8d3409       lea rsi, [rcx + r9]
0x0000caaf      4c8b6d10       mov r13, qword [rbp + 0x10]
0x0000cab3      498b542410     mov rdx, qword [r12 + 0x10]
0x0000cab8      4983e901       sub r9, 1
0x0000cabc      4883e901       sub rcx, 1
0x0000cac0      4c01de         add rsi, r11
0x0000cac3      4983eb01       sub r11, 1
0x0000cac7      4b8b44cd00     mov rax, qword [r13 + r9*8]
0x0000cacc      4e8b04da       mov r8, qword [rdx + r11*8]
0x0000cad0      4c39c0         cmp rax, r8
0x0000cad3      7411           je 0xcae6
0x0000cad5      7d59           jge 0xcb30
0x0000cad7      4983eb01       sub r11, 1
0x0000cadb      7863           js 0xcb40
0x0000cadd      4e8b04da       mov r8, qword [rdx + r11*8]
0x0000cae1      4c39c0         cmp rax, r8
0x0000cae4      75ef           jne 0xcad5
0x0000cae6      4885c9         test rcx, rcx
0x0000cae9      790f           jns 0xcafa
0x0000caeb      eb1b           jmp 0xcb08
0x0000caed      0f1f00         nop dword [rax]
0x0000caf0      4883e901       sub rcx, 1
0x0000caf4      4883f9ff       cmp rcx, 0xffffffffffffffff
0x0000caf8      740e           je 0xcb08
0x0000cafa      4c8b14cf       mov r10, qword [rdi + rcx*8]
0x0000cafe      4d39c2         cmp r10, r8
0x0000cb01      7fed           jg 0xcaf0
0x0000cb03      4d39c2         cmp r10, r8
0x0000cb06      7408           je 0xcb10
0x0000cb08      4883ee01       sub rsi, 1
0x0000cb0c      4c8904f7       mov qword [rdi + rsi*8], r8
0x0000cb10      4983e901       sub r9, 1
0x0000cb14      782a           js 0xcb40
0x0000cb16      4983eb01       sub r11, 1
0x0000cb1a      7824           js 0xcb40
0x0000cb1c      4b8b44cd00     mov rax, qword [r13 + r9*8]
0x0000cb21      ebba           jmp 0xcadd
0x0000cb23      0f1f440000     nop dword [rax + rax]
0x0000cb28      f3c3           ret
0x0000cb2a      660f1f440000   nop word [rax + rax]
0x0000cb30      4983e901       sub r9, 1
0x0000cb34      780a           js 0xcb40
0x0000cb36      4b8b44cd00     mov rax, qword [r13 + r9*8]
0x0000cb3b      eb93           jmp 0xcad0
0x0000cb3d      0f1f00         nop dword [rax]
0x0000cb40      488b4b08       mov rcx, qword [rbx + 8]
0x0000cb44      488b5508       mov rdx, qword [rbp + 8]
0x0000cb48      4801ca         add rdx, rcx
0x0000cb4b      4903542408     add rdx, qword [r12 + 8]
0x0000cb50      488d41ff       lea rax, [rcx - 1]
0x0000cb54      4c8d4aff       lea r9, [rdx - 1]
0x0000cb58      4829f2         sub rdx, rsi
0x0000cb5b      4801d1         add rcx, rdx
0x0000cb5e      4885d2         test rdx, rdx
0x0000cb61      48894b08       mov qword [rbx + 8], rcx
0x0000cb65      7e46           jle 0xcbad
0x0000cb67      4885c0         test rax, rax
0x0000cb6a      7841           js 0xcbad
0x0000cb6c      0f1f4000       nop dword [rax]
0x0000cb70      4e8b04cf       mov r8, qword [rdi + r9*8]
0x0000cb74      488b0cc7       mov rcx, qword [rdi + rax*8]
0x0000cb78      4c8d1410       lea r10, [rax + rdx]
0x0000cb7c      4e8d14d7       lea r10, [rdi + r10*8]
0x0000cb80      4939c8         cmp r8, rcx
0x0000cb83      7e1b           jle 0xcba0
0x0000cb85      4983e901       sub r9, 1
0x0000cb89      4883ea01       sub rdx, 1
0x0000cb8d      4d8902         mov qword [r10], r8
0x0000cb90      75de           jne 0xcb70
0x0000cb92      31d2           xor edx, edx
0x0000cb94      eb1b           jmp 0xcbb1
0x0000cb96      662e0f1f8400.  nop word cs:[rax + rax]
0x0000cba0      4883e801       sub rax, 1
0x0000cba4      49890a         mov qword [r10], rcx
0x0000cba7      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000cbab      75c3           jne 0xcb70
0x0000cbad      48c1e203       shl rdx, 3
0x0000cbb1      488d34f7       lea rsi, [rdi + rsi*8]
0x0000cbb5      e82653ffff     call sym.imp.memcpy
0x0000cbba      31c0           xor eax, eax
0x0000cbbc      4883c408       add rsp, 8
0x0000cbc0      5b             pop rbx
0x0000cbc1      5d             pop rbp
0x0000cbc2      415c           pop r12
0x0000cbc4      415d           pop r13
0x0000cbc6      c3             ret
0x0000cbc7      660f1f840000.  nop word [rax + rax]
0x0000cbd0      4901c5         add r13, rax
0x0000cbd3      4a8d34ed0000.  lea rsi, [r13*8]
0x0000cbdb      e8b053ffff     call sym.imp.realloc
0x0000cbe0      4885c0         test rax, rax
0x0000cbe3      4889c7         mov rdi, rax
0x0000cbe6      7419           je 0xcc01
0x0000cbe8      48894310       mov qword [rbx + 0x10], rax
0x0000cbec      4c892b         mov qword [rbx], r13
0x0000cbef      488b4b08       mov rcx, qword [rbx + 8]
0x0000cbf3      4c8b4d08       mov r9, qword [rbp + 8]
0x0000cbf7      4d8b5c2408     mov r11, qword [r12 + 8]
0x0000cbfc      e9aafeffff     jmp 0xcaab
0x0000cc01      b80c000000     mov eax, 0xc
0x0000cc06      ebb4           jmp 0xcbbc
0x0000cc08      0f1f84000000.  nop dword [rax + rax]
;-- create_token_tree.isra.16:
0x0000cc10      53             push rbx
0x0000cc11      4889fb         mov rbx, rdi
0x0000cc14      4883ec20       sub rsp, 0x20
0x0000cc18      8b06           mov eax, dword [rsi]
0x0000cc1a      83f80f         cmp eax, 0xf
0x0000cc1d      7479           je 0xcc98
0x0000cc1f      4c63c8         movsxd r9, eax
0x0000cc22      448d5001       lea r10d, [rax + 1]
0x0000cc26      488b3f         mov rdi, qword [rdi]
0x0000cc29      4c89c8         mov rax, r9
0x0000cc2c      48c1e006       shl rax, 6
0x0000cc30      4883c008       add rax, 8
0x0000cc34      49c1e106       shl r9, 6
0x0000cc38      448916         mov dword [rsi], r10d
0x0000cc3b      4801f8         add rax, rdi
0x0000cc3e      4a8d340f       lea rsi, [rdi + r9]
0x0000cc42      48c746080000.  mov qword [rsi + 8], 0
0x0000cc4a      48895610       mov qword [rsi + 0x10], rdx
0x0000cc4e      488d7e20       lea rdi, [rsi + 0x20]
0x0000cc52      48894e18       mov qword [rsi + 0x18], rcx
0x0000cc56      f3410f6f00     movdqu xmm0, xmmword [r8]
0x0000cc5b      0f114630       movups xmmword [rsi + 0x30], xmm0
0x0000cc5f      80671af3       and byte [rdi + 0x1a], 0xf3             ; [0xf3:1]=0
0x0000cc63      4885d2         test rdx, rdx
0x0000cc66      48c746200000.  mov qword [rsi + 0x20], 0
0x0000cc6e      48c746280000.  mov qword [rsi + 0x28], 0
0x0000cc76      48c74640ffff.  mov qword [rsi + 0x40], 0xffffffffffffffff
0x0000cc7e      7403           je 0xcc83
0x0000cc80      488902         mov qword [rdx], rax
0x0000cc83      4885c9         test rcx, rcx
0x0000cc86      7403           je 0xcc8b
0x0000cc88      488901         mov qword [rcx], rax
0x0000cc8b      4883c420       add rsp, 0x20
0x0000cc8f      5b             pop rbx
0x0000cc90      c3             ret
0x0000cc91      0f1f80000000.  nop dword [rax]
0x0000cc98      bfc8030000     mov edi, 0x3c8
0x0000cc9d      4c89442418     mov qword [rsp + 0x18], r8
0x0000cca2      48894c2410     mov qword [rsp + 0x10], rcx
0x0000cca7      4889542408     mov qword [rsp + 8], rdx
0x0000ccac      48893424       mov qword [rsp], rsi
0x0000ccb0      e86b52ffff     call sym.imp.malloc
0x0000ccb5      4885c0         test rax, rax
0x0000ccb8      4889c7         mov rdi, rax
0x0000ccbb      742f           je 0xccec
0x0000ccbd      488b03         mov rax, qword [rbx]
0x0000ccc0      41ba01000000   mov r10d, 1
0x0000ccc6      48893b         mov qword [rbx], rdi
0x0000ccc9      4531c9         xor r9d, r9d
0x0000cccc      4c8b442418     mov r8, qword [rsp + 0x18]
0x0000ccd1      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0000ccd6      488b542408     mov rdx, qword [rsp + 8]
0x0000ccdb      488b3424       mov rsi, qword [rsp]
0x0000ccdf      488907         mov qword [rdi], rax
0x0000cce2      b808000000     mov eax, 8
0x0000cce7      e948ffffff     jmp 0xcc34
0x0000ccec      31c0           xor eax, eax
0x0000ccee      eb9b           jmp 0xcc8b
;-- duplicate_tree:
0x0000ccf0      4156           push r14
0x0000ccf2      4155           push r13
0x0000ccf4      4c8d6e70       lea r13, [rsi + 0x70]
0x0000ccf8      4154           push r12
0x0000ccfa      55             push rbp
0x0000ccfb      4c8da6800000.  lea r12, [rsi + 0x80]
0x0000cd02      53             push rbx
0x0000cd03      4889fb         mov rbx, rdi
0x0000cd06      4883ec10       sub rsp, 0x10
0x0000cd0a      488b2f         mov rbp, qword [rdi]
0x0000cd0d      64488b042528.  mov rax, qword fs:[0x28]
0x0000cd16      4889442408     mov qword [rsp + 8], rax
0x0000cd1b      31c0           xor eax, eax
0x0000cd1d      4989e6         mov r14, rsp
0x0000cd20      4c8d4328       lea r8, [rbx + 0x28]
0x0000cd24      31c9           xor ecx, ecx
0x0000cd26      31d2           xor edx, edx
0x0000cd28      4c89e6         mov rsi, r12
0x0000cd2b      4c89ef         mov rdi, r13
0x0000cd2e      e8ddfeffff     call sym.create_token_tree.isra.16
0x0000cd33      4885c0         test rax, rax
0x0000cd36      498906         mov qword [r14], rax
0x0000cd39      7451           je 0xcd8c
0x0000cd3b      488928         mov qword [rax], rbp
0x0000cd3e      498b2e         mov rbp, qword [r14]
0x0000cd41      804d3204       or byte [rbp + 0x32], 4
0x0000cd45      488b4308       mov rax, qword [rbx + 8]
0x0000cd49      4885c0         test rax, rax
0x0000cd4c      7412           je 0xcd60
0x0000cd4e      4c8d7508       lea r14, [rbp + 8]
0x0000cd52      4889c3         mov rbx, rax
0x0000cd55      ebc9           jmp 0xcd20
0x0000cd57      660f1f840000.  nop word [rax + rax]
0x0000cd60      31d2           xor edx, edx
0x0000cd62      eb07           jmp 0xcd6b
0x0000cd64      0f1f4000       nop dword [rax]
0x0000cd68      4889c3         mov rbx, rax
0x0000cd6b      488b4310       mov rax, qword [rbx + 0x10]
0x0000cd6f      4885c0         test rax, rax
0x0000cd72      7405           je 0xcd79
0x0000cd74      4839d0         cmp rax, rdx
0x0000cd77      7537           jne 0xcdb0
0x0000cd79      488b03         mov rax, qword [rbx]
0x0000cd7c      488b6d00       mov rbp, qword [rbp]
0x0000cd80      4889da         mov rdx, rbx
0x0000cd83      4885c0         test rax, rax
0x0000cd86      75e0           jne 0xcd68
0x0000cd88      488b0424       mov rax, qword [rsp]
0x0000cd8c      488b4c2408     mov rcx, qword [rsp + 8]
0x0000cd91      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000cd9a      7520           jne 0xcdbc
0x0000cd9c      4883c410       add rsp, 0x10
0x0000cda0      5b             pop rbx
0x0000cda1      5d             pop rbp
0x0000cda2      415c           pop r12
0x0000cda4      415d           pop r13
0x0000cda6      415e           pop r14
0x0000cda8      c3             ret
0x0000cda9      0f1f80000000.  nop dword [rax]
0x0000cdb0      4c8d7510       lea r14, [rbp + 0x10]
0x0000cdb4      4889c3         mov rbx, rax
0x0000cdb7      e964ffffff     jmp 0xcd20
0x0000cdbc      e8ef4fffff     call sym.imp.__stack_chk_fail
0x0000cdc1      0f1f440000     nop dword [rax + rax]
0x0000cdc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- lower_subexp:
0x0000cdd0      4157           push r15
0x0000cdd2      4156           push r14
0x0000cdd4      4155           push r13
0x0000cdd6      4154           push r12
0x0000cdd8      4989d5         mov r13, rdx
0x0000cddb      55             push rbp
0x0000cddc      53             push rbx
0x0000cddd      4883ec48       sub rsp, 0x48
0x0000cde1      488b1e         mov rbx, qword [rsi]
0x0000cde4      488b6a08       mov rbp, qword [rdx + 8]
0x0000cde8      64488b042528.  mov rax, qword fs:[0x28]
0x0000cdf1      4889442438     mov qword [rsp + 0x38], rax
0x0000cdf6      31c0           xor eax, eax
0x0000cdf8      f6463810       test byte [rsi + 0x38], 0x10
0x0000cdfc      48897c2418     mov qword [rsp + 0x18], rdi
0x0000ce01      0f8471010000   je 0xcf78
0x0000ce07      4885ed         test rbp, rbp
0x0000ce0a      7474           je 0xce80
0x0000ce0c      488b4228       mov rax, qword [rdx + 0x28]
0x0000ce10      4883f83f       cmp rax, 0x3f
0x0000ce14      0f8f33010000   jg 0xcf4d
0x0000ce1a      488b93a00000.  mov rdx, qword [rbx + 0xa0]
0x0000ce21      480fa3c2       bt rdx, rax
0x0000ce25      0f8322010000   jae 0xcf4d
0x0000ce2b      488d4370       lea rax, [rbx + 0x70]
0x0000ce2f      4c8d742420     lea r14, [rsp + 0x20]
0x0000ce34      4883eb80       sub rbx, 0xffffffffffffff80
0x0000ce38      31c9           xor ecx, ecx
0x0000ce3a      31d2           xor edx, edx
0x0000ce3c      4889de         mov rsi, rbx
0x0000ce3f      4989c7         mov r15, rax
0x0000ce42      4d89f0         mov r8, r14
0x0000ce45      4889c7         mov rdi, rax
0x0000ce48      c644242808     mov byte [rsp + 0x28], 8
0x0000ce4d      4889442408     mov qword [rsp + 8], rax
0x0000ce52      e8b9fdffff     call sym.create_token_tree.isra.16
0x0000ce57      4c89ff         mov rdi, r15
0x0000ce5a      4d89f0         mov r8, r14
0x0000ce5d      31c9           xor ecx, ecx
0x0000ce5f      31d2           xor edx, edx
0x0000ce61      4889de         mov rsi, rbx
0x0000ce64      4989c4         mov r12, rax
0x0000ce67      c644242809     mov byte [rsp + 0x28], 9
0x0000ce6c      e89ffdffff     call sym.create_token_tree.isra.16
0x0000ce71      4989c7         mov r15, rax
0x0000ce74      e954010000     jmp 0xcfcd
0x0000ce79      0f1f80000000.  nop dword [rax]
0x0000ce80      488d4370       lea rax, [rbx + 0x70]
0x0000ce84      4c8d742420     lea r14, [rsp + 0x20]
0x0000ce89      4883eb80       sub rbx, 0xffffffffffffff80
0x0000ce8d      31c9           xor ecx, ecx
0x0000ce8f      31d2           xor edx, edx
0x0000ce91      4889de         mov rsi, rbx
0x0000ce94      4989c7         mov r15, rax
0x0000ce97      4d89f0         mov r8, r14
0x0000ce9a      4889c7         mov rdi, rax
0x0000ce9d      c644242808     mov byte [rsp + 0x28], 8
0x0000cea2      4889442408     mov qword [rsp + 8], rax
0x0000cea7      e864fdffff     call sym.create_token_tree.isra.16
0x0000ceac      4c89ff         mov rdi, r15
0x0000ceaf      4d89f0         mov r8, r14
0x0000ceb2      31c9           xor ecx, ecx
0x0000ceb4      31d2           xor edx, edx
0x0000ceb6      4889de         mov rsi, rbx
0x0000ceb9      4989c4         mov r12, rax
0x0000cebc      c644242809     mov byte [rsp + 0x28], 9
0x0000cec1      e84afdffff     call sym.create_token_tree.isra.16
0x0000cec6      4989c3         mov r11, rax
0x0000cec9      4989c7         mov r15, rax
0x0000cecc      488b7c2408     mov rdi, qword [rsp + 8]
0x0000ced1      4d89f0         mov r8, r14
0x0000ced4      4c89d9         mov rcx, r11
0x0000ced7      4c89e2         mov rdx, r12
0x0000ceda      4889de         mov rsi, rbx
0x0000cedd      c644242810     mov byte [rsp + 0x28], 0x10             ; [0x10:1]=3
0x0000cee2      4c895c2410     mov qword [rsp + 0x10], r11
0x0000cee7      e824fdffff     call sym.create_token_tree.isra.16
0x0000ceec      4885c0         test rax, rax
0x0000ceef      4889c5         mov rbp, rax
0x0000cef2      0f84f8000000   je 0xcff0
0x0000cef8      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x0000cefd      4d85db         test r11, r11
0x0000cf00      0f84ea000000   je 0xcff0
0x0000cf06      4d85e4         test r12, r12
0x0000cf09      0f84e1000000   je 0xcff0
0x0000cf0f      4d85ff         test r15, r15
0x0000cf12      0f84d8000000   je 0xcff0
0x0000cf18      498b4528       mov rax, qword [r13 + 0x28]
0x0000cf1c      49894728       mov qword [r15 + 0x28], rax
0x0000cf20      4989442428     mov qword [r12 + 0x28], rax
0x0000cf25      410fb64532     movzx eax, byte [r13 + 0x32]
0x0000cf2a      410fb65732     movzx edx, byte [r15 + 0x32]
0x0000cf2f      83e008         and eax, 8
0x0000cf32      83e2f7         and edx, 0xfffffff7                     ; 4294967287
0x0000cf35      89c1           mov ecx, eax
0x0000cf37      09ca           or edx, ecx
0x0000cf39      41885732       mov byte [r15 + 0x32], dl
0x0000cf3d      410fb6442432   movzx eax, byte [r12 + 0x32]
0x0000cf43      83e0f7         and eax, 0xfffffff7                     ; 4294967287
0x0000cf46      09c8           or eax, ecx
0x0000cf48      4188442432     mov byte [r12 + 0x32], al
0x0000cf4d      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000cf52      6448333c2528.  xor rdi, qword fs:[0x28]
0x0000cf5b      4889e8         mov rax, rbp
0x0000cf5e      0f859e000000   jne 0xd002
0x0000cf64      4883c448       add rsp, 0x48
0x0000cf68      5b             pop rbx
0x0000cf69      5d             pop rbp
0x0000cf6a      415c           pop r12
0x0000cf6c      415d           pop r13
0x0000cf6e      415e           pop r14
0x0000cf70      415f           pop r15
0x0000cf72      c3             ret
0x0000cf73      0f1f440000     nop dword [rax + rax]
0x0000cf78      488d4370       lea rax, [rbx + 0x70]
0x0000cf7c      4c8d742420     lea r14, [rsp + 0x20]
0x0000cf81      4883eb80       sub rbx, 0xffffffffffffff80
0x0000cf85      31c9           xor ecx, ecx
0x0000cf87      31d2           xor edx, edx
0x0000cf89      4889de         mov rsi, rbx
0x0000cf8c      4989c7         mov r15, rax
0x0000cf8f      4d89f0         mov r8, r14
0x0000cf92      4889c7         mov rdi, rax
0x0000cf95      c644242808     mov byte [rsp + 0x28], 8
0x0000cf9a      4889442408     mov qword [rsp + 8], rax
0x0000cf9f      e86cfcffff     call sym.create_token_tree.isra.16
0x0000cfa4      31c9           xor ecx, ecx
0x0000cfa6      31d2           xor edx, edx
0x0000cfa8      4c89ff         mov rdi, r15
0x0000cfab      4d89f0         mov r8, r14
0x0000cfae      4889de         mov rsi, rbx
0x0000cfb1      4989c4         mov r12, rax
0x0000cfb4      c644242809     mov byte [rsp + 0x28], 9
0x0000cfb9      e852fcffff     call sym.create_token_tree.isra.16
0x0000cfbe      4885ed         test rbp, rbp
0x0000cfc1      4989c7         mov r15, rax
0x0000cfc4      4989c3         mov r11, rax
0x0000cfc7      0f84fffeffff   je 0xcecc
0x0000cfcd      488b7c2408     mov rdi, qword [rsp + 8]
0x0000cfd2      4d89f0         mov r8, r14
0x0000cfd5      4c89f9         mov rcx, r15
0x0000cfd8      4889ea         mov rdx, rbp
0x0000cfdb      4889de         mov rsi, rbx
0x0000cfde      c644242810     mov byte [rsp + 0x28], 0x10             ; [0x10:1]=3
0x0000cfe3      e828fcffff     call sym.create_token_tree.isra.16
0x0000cfe8      4989c3         mov r11, rax
0x0000cfeb      e9dcfeffff     jmp 0xcecc
0x0000cff0      488b442418     mov rax, qword [rsp + 0x18]
0x0000cff5      31ed           xor ebp, ebp
0x0000cff7      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0000cffd      e94bffffff     jmp 0xcf4d
0x0000d002      e8a94dffff     call sym.imp.__stack_chk_fail
0x0000d007      660f1f840000.  nop word [rax + rax]
;-- lower_subexps:
0x0000d010      55             push rbp
0x0000d011      53             push rbx
0x0000d012      4889fd         mov rbp, rdi
0x0000d015      4889f3         mov rbx, rsi
0x0000d018      4883ec18       sub rsp, 0x18
0x0000d01c      488b5608       mov rdx, qword [rsi + 8]
0x0000d020      64488b042528.  mov rax, qword fs:[0x28]
0x0000d029      4889442408     mov qword [rsp + 8], rax
0x0000d02e      31c0           xor eax, eax
0x0000d030      c74424040000.  mov dword [rsp + 4], 0
0x0000d038      4885d2         test rdx, rdx
0x0000d03b      7406           je 0xd043
0x0000d03d      807a3011       cmp byte [rdx + 0x30], 0x11
0x0000d041      744d           je 0xd090
0x0000d043      488b5310       mov rdx, qword [rbx + 0x10]
0x0000d047      4885d2         test rdx, rdx
0x0000d04a      7406           je 0xd052
0x0000d04c      807a3011       cmp byte [rdx + 0x30], 0x11
0x0000d050      741e           je 0xd070
0x0000d052      488b4c2408     mov rcx, qword [rsp + 8]
0x0000d057      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000d060      8b442404       mov eax, dword [rsp + 4]
0x0000d064      7545           jne 0xd0ab
0x0000d066      4883c418       add rsp, 0x18
0x0000d06a      5b             pop rbx
0x0000d06b      5d             pop rbp
0x0000d06c      c3             ret
0x0000d06d      0f1f00         nop dword [rax]
0x0000d070      488d7c2404     lea rdi, [rsp + 4]
0x0000d075      4889ee         mov rsi, rbp
0x0000d078      e853fdffff     call sym.lower_subexp
0x0000d07d      4885c0         test rax, rax
0x0000d080      48894310       mov qword [rbx + 0x10], rax
0x0000d084      74cc           je 0xd052
0x0000d086      488918         mov qword [rax], rbx
0x0000d089      ebc7           jmp 0xd052
0x0000d08b      0f1f440000     nop dword [rax + rax]
0x0000d090      488d7c2404     lea rdi, [rsp + 4]
0x0000d095      4889ee         mov rsi, rbp
0x0000d098      e833fdffff     call sym.lower_subexp
0x0000d09d      4885c0         test rax, rax
0x0000d0a0      48894308       mov qword [rbx + 8], rax
0x0000d0a4      749d           je 0xd043
0x0000d0a6      488918         mov qword [rax], rbx
0x0000d0a9      eb98           jmp 0xd043
0x0000d0ab      e8004dffff     call sym.imp.__stack_chk_fail
;-- re_node_set_init_copy:
0x0000d0b0      4154           push r12
0x0000d0b2      55             push rbp
0x0000d0b3      53             push rbx
0x0000d0b4      488b4608       mov rax, qword [rsi + 8]
0x0000d0b8      48894708       mov qword [rdi + 8], rax
0x0000d0bc      4c8b6608       mov r12, qword [rsi + 8]
0x0000d0c0      4d85e4         test r12, r12
0x0000d0c3      7e3b           jle 0xd100
0x0000d0c5      4889fb         mov rbx, rdi
0x0000d0c8      488907         mov qword [rdi], rax
0x0000d0cb      488d3cc50000.  lea rdi, [rax*8]
0x0000d0d3      4889f5         mov rbp, rsi
0x0000d0d6      e8454effff     call sym.imp.malloc
0x0000d0db      4885c0         test rax, rax
0x0000d0de      48894310       mov qword [rbx + 0x10], rax
0x0000d0e2      743c           je 0xd120
0x0000d0e4      488b7510       mov rsi, qword [rbp + 0x10]
0x0000d0e8      4a8d14e50000.  lea rdx, [r12*8]
0x0000d0f0      4889c7         mov rdi, rax
0x0000d0f3      e8e84dffff     call sym.imp.memcpy
0x0000d0f8      31c0           xor eax, eax
0x0000d0fa      5b             pop rbx
0x0000d0fb      5d             pop rbp
0x0000d0fc      415c           pop r12
0x0000d0fe      c3             ret
0x0000d0ff      90             nop
0x0000d100      660fefc0       pxor xmm0, xmm0
0x0000d104      48c747100000.  mov qword [rdi + 0x10], 0
0x0000d10c      31c0           xor eax, eax
0x0000d10e      0f1107         movups xmmword [rdi], xmm0
0x0000d111      5b             pop rbx
0x0000d112      5d             pop rbp
0x0000d113      415c           pop r12
0x0000d115      c3             ret
0x0000d116      662e0f1f8400.  nop word cs:[rax + rax]
0x0000d120      48c743080000.  mov qword [rbx + 8], 0
0x0000d128      48c703000000.  mov qword [rbx], 0
0x0000d12f      b80c000000     mov eax, 0xc
0x0000d134      ebc4           jmp 0xd0fa
0x0000d136      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_node_set_init_union:
0x0000d140      4885f6         test rsi, rsi
0x0000d143      4156           push r14
0x0000d145      4155           push r13
0x0000d147      4154           push r12
0x0000d149      55             push rbp
0x0000d14a      53             push rbx
0x0000d14b      0f84a4000000   je 0xd1f5
0x0000d151      4885d2         test rdx, rdx
0x0000d154      4c8b6e08       mov r13, qword [rsi + 8]
0x0000d158      0f8492000000   je 0xd1f0
0x0000d15e      4d85ed         test r13, r13
0x0000d161      0f8e89000000   jle 0xd1f0
0x0000d167      4c8b7208       mov r14, qword [rdx + 8]
0x0000d16b      4d85f6         test r14, r14
0x0000d16e      0f8eaf000000   jle 0xd223
0x0000d174      4989fc         mov r12, rdi
0x0000d177      4b8d7c3500     lea rdi, [r13 + r14]
0x0000d17c      4889d3         mov rbx, rdx
0x0000d17f      4889f5         mov rbp, rsi
0x0000d182      49893c24       mov qword [r12], rdi
0x0000d186      48c1e703       shl rdi, 3
0x0000d18a      e8914dffff     call sym.imp.malloc
0x0000d18f      4885c0         test rax, rax
0x0000d192      4989442410     mov qword [r12 + 0x10], rax
0x0000d197      0f84eb000000   je 0xd288
0x0000d19d      4c8b4b10       mov r9, qword [rbx + 0x10]
0x0000d1a1      4c8b4510       mov r8, qword [rbp + 0x10]
0x0000d1a5      31db           xor ebx, ebx
0x0000d1a7      31c9           xor ecx, ecx
0x0000d1a9      31f6           xor esi, esi
0x0000d1ab      eb21           jmp 0xd1ce
0x0000d1ad      0f1f00         nop dword [rax]
0x0000d1b0      400f94c7       sete dil
0x0000d1b4      488954d8f8     mov qword [rax + rbx*8 - 8], rdx
0x0000d1b9      4883c601       add rsi, 1
0x0000d1bd      400fb6ff       movzx edi, dil
0x0000d1c1      4801f9         add rcx, rdi
0x0000d1c4      4939f5         cmp r13, rsi
0x0000d1c7      7e67           jle 0xd230
0x0000d1c9      4939ce         cmp r14, rcx
0x0000d1cc      7e7a           jle 0xd248
0x0000d1ce      498b14f0       mov rdx, qword [r8 + rsi*8]
0x0000d1d2      498b3cc9       mov rdi, qword [r9 + rcx*8]
0x0000d1d6      4883c301       add rbx, 1
0x0000d1da      4839fa         cmp rdx, rdi
0x0000d1dd      7ed1           jle 0xd1b0
0x0000d1df      4883c101       add rcx, 1
0x0000d1e3      48897cd8f8     mov qword [rax + rbx*8 - 8], rdi
0x0000d1e8      ebda           jmp 0xd1c4
0x0000d1ea      660f1f440000   nop word [rax + rax]
0x0000d1f0      4d85ed         test r13, r13
0x0000d1f3      7f2e           jg 0xd223
0x0000d1f5      4885d2         test rdx, rdx
0x0000d1f8      7407           je 0xd201
0x0000d1fa      48837a0800     cmp qword [rdx + 8], 0
0x0000d1ff      7f1f           jg 0xd220
0x0000d201      660fefc0       pxor xmm0, xmm0
0x0000d205      48c747100000.  mov qword [rdi + 0x10], 0
0x0000d20d      31c0           xor eax, eax
0x0000d20f      0f2907         movaps xmmword [rdi], xmm0
0x0000d212      5b             pop rbx
0x0000d213      5d             pop rbp
0x0000d214      415c           pop r12
0x0000d216      415d           pop r13
0x0000d218      415e           pop r14
0x0000d21a      c3             ret
0x0000d21b      0f1f440000     nop dword [rax + rax]
0x0000d220      4889d6         mov rsi, rdx
0x0000d223      5b             pop rbx
0x0000d224      5d             pop rbp
0x0000d225      415c           pop r12
0x0000d227      415d           pop r13
0x0000d229      415e           pop r14
0x0000d22b      e980feffff     jmp sym.re_node_set_init_copy
0x0000d230      4939ce         cmp r14, rcx
0x0000d233      7f33           jg 0xd268
0x0000d235      49895c2408     mov qword [r12 + 8], rbx
0x0000d23a      31c0           xor eax, eax
0x0000d23c      5b             pop rbx
0x0000d23d      5d             pop rbp
0x0000d23e      415c           pop r12
0x0000d240      415d           pop r13
0x0000d242      415e           pop r14
0x0000d244      c3             ret
0x0000d245      0f1f00         nop dword [rax]
0x0000d248      4929f5         sub r13, rsi
0x0000d24b      488d3cd8       lea rdi, [rax + rbx*8]
0x0000d24f      498d34f0       lea rsi, [r8 + rsi*8]
0x0000d253      4a8d14ed0000.  lea rdx, [r13*8]
0x0000d25b      4c01eb         add rbx, r13
0x0000d25e      e87d4cffff     call sym.imp.memcpy
0x0000d263      ebd0           jmp 0xd235
0x0000d265      0f1f00         nop dword [rax]
0x0000d268      4929ce         sub r14, rcx
0x0000d26b      488d3cd8       lea rdi, [rax + rbx*8]
0x0000d26f      498d34c9       lea rsi, [r9 + rcx*8]
0x0000d273      4a8d14f50000.  lea rdx, [r14*8]
0x0000d27b      4c01f3         add rbx, r14
0x0000d27e      e85d4cffff     call sym.imp.memcpy
0x0000d283      ebb0           jmp 0xd235
0x0000d285      0f1f00         nop dword [rax]
0x0000d288      b80c000000     mov eax, 0xc
0x0000d28d      e980ffffff     jmp 0xd212
0x0000d292      0f1f4000       nop dword [rax]
0x0000d296      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_acquire_state_context:
0x0000d2a0      4157           push r15
0x0000d2a2      4156           push r14
0x0000d2a4      4155           push r13
0x0000d2a6      4154           push r12
0x0000d2a8      55             push rbp
0x0000d2a9      53             push rbx
0x0000d2aa      4883ec28       sub rsp, 0x28
0x0000d2ae      4c8b5208       mov r10, qword [rdx + 8]
0x0000d2b2      4d85d2         test r10, r10
0x0000d2b5      0f8484020000   je 0xd53f
0x0000d2bb      4189c8         mov r8d, ecx
0x0000d2be      4d85d2         test r10, r10
0x0000d2c1      4f8d2410       lea r12, [r8 + r10]
0x0000d2c5      7e15           jle 0xd2dc
0x0000d2c7      488b4210       mov rax, qword [rdx + 0x10]
0x0000d2cb      4e8d14d0       lea r10, [rax + r10*8]
0x0000d2cf      90             nop
0x0000d2d0      4c0320         add r12, qword [rax]
0x0000d2d3      4883c008       add rax, 8
0x0000d2d7      4939c2         cmp r10, rax
0x0000d2da      75f4           jne 0xd2d0
0x0000d2dc      488b86880000.  mov rax, qword [rsi + 0x88]
0x0000d2e3      4889d5         mov rbp, rdx
0x0000d2e6      894c2404       mov dword [rsp + 4], ecx
0x0000d2ea      4989f5         mov r13, rsi
0x0000d2ed      48897c2418     mov qword [rsp + 0x18], rdi
0x0000d2f2      4c21e0         and rax, r12
0x0000d2f5      488d1440       lea rdx, [rax + rax*2]
0x0000d2f9      488b4640       mov rax, qword [rsi + 0x40]
0x0000d2fd      488d04d0       lea rax, [rax + rdx*8]
0x0000d301      4c8b18         mov r11, qword [rax]
0x0000d304      4d85db         test r11, r11
0x0000d307      7e57           jle 0xd360
0x0000d309      488b5810       mov rbx, qword [rax + 0x10]
0x0000d30d      4531d2         xor r10d, r10d
0x0000d310      4189c9         mov r9d, ecx
0x0000d313      eb0c           jmp 0xd321
0x0000d315      0f1f00         nop dword [rax]
0x0000d318      4983c201       add r10, 1
0x0000d31c      4d39da         cmp r10, r11
0x0000d31f      743f           je 0xd360
0x0000d321      4e8b34d3       mov r14, qword [rbx + r10*8]
0x0000d325      4d3926         cmp qword [r14], r12
0x0000d328      75ee           jne 0xd318
0x0000d32a      410fb64668     movzx eax, byte [r14 + 0x68]
0x0000d32f      83e00f         and eax, 0xf
0x0000d332      4439c8         cmp eax, r9d
0x0000d335      75e1           jne 0xd318
0x0000d337      498b7e50       mov rdi, qword [r14 + 0x50]
0x0000d33b      4885ff         test rdi, rdi
0x0000d33e      74d8           je 0xd318
0x0000d340      4889ee         mov rsi, rbp
0x0000d343      e8a8ebffff     call sym.re_node_set_compare.part.2
0x0000d348      84c0           test al, al
0x0000d34a      74cc           je 0xd318
0x0000d34c      4883c428       add rsp, 0x28
0x0000d350      4c89f0         mov rax, r14
0x0000d353      5b             pop rbx
0x0000d354      5d             pop rbp
0x0000d355      415c           pop r12
0x0000d357      415d           pop r13
0x0000d359      415e           pop r14
0x0000d35b      415f           pop r15
0x0000d35d      c3             ret
0x0000d35e      6690           nop
0x0000d360      be01000000     mov esi, 1
0x0000d365      bf70000000     mov edi, 0x70                           ; 'p'
0x0000d36a      e8514bffff     call sym.imp.calloc
0x0000d36f      4885c0         test rax, rax
0x0000d372      4989c6         mov r14, rax
0x0000d375      0f843b010000   je 0xd4b6
0x0000d37b      488d4008       lea rax, [rax + 8]
0x0000d37f      4889ee         mov rsi, rbp
0x0000d382      4889c7         mov rdi, rax
0x0000d385      4889c3         mov rbx, rax
0x0000d388      e823fdffff     call sym.re_node_set_init_copy
0x0000d38d      85c0           test eax, eax
0x0000d38f      0f85b8010000   jne 0xd54d
0x0000d395      410fb64668     movzx eax, byte [r14 + 0x68]
0x0000d39a      0fb6542404     movzx edx, byte [rsp + 4]
0x0000d39f      49895e50       mov qword [r14 + 0x50], rbx
0x0000d3a3      83e20f         and edx, 0xf
0x0000d3a6      83e0f0         and eax, 0xfffffff0                     ; 4294967280
0x0000d3a9      09d0           or eax, edx
0x0000d3ab      48837d0800     cmp qword [rbp + 8], 0
0x0000d3b0      41884668       mov byte [r14 + 0x68], al
0x0000d3b4      0f8ede000000   jle 0xd498
0x0000d3ba      498d4e18       lea rcx, [r14 + 0x18]
0x0000d3be      4531ff         xor r15d, r15d
0x0000d3c1      4c89642410     mov qword [rsp + 0x10], r12
0x0000d3c6      4531d2         xor r10d, r10d
0x0000d3c9      4d89ec         mov r12, r13
0x0000d3cc      4d89fd         mov r13, r15
0x0000d3cf      48894c2408     mov qword [rsp + 8], rcx
0x0000d3d4      4989df         mov r15, rbx
0x0000d3d7      660f1f840000.  nop word [rax + rax]
0x0000d3e0      488b4510       mov rax, qword [rbp + 0x10]
0x0000d3e4      4a8b04e8       mov rax, qword [rax + r13*8]
0x0000d3e8      48c1e004       shl rax, 4
0x0000d3ec      49030424       add rax, qword [r12]
0x0000d3f0      0fb67008       movzx esi, byte [rax + 8]
0x0000d3f4      8b5808         mov ebx, dword [rax + 8]
0x0000d3f7      c1eb08         shr ebx, 8
0x0000d3fa      6681e3ff03     and bx, 0x3ff
0x0000d3ff      83fe01         cmp esi, 1
0x0000d402      0fb7fb         movzx edi, bx
0x0000d405      7504           jne 0xd40b
0x0000d407      85ff           test edi, edi
0x0000d409      7477           je 0xd482
0x0000d40b      410fb65668     movzx edx, byte [r14 + 0x68]
0x0000d410      0fb6400a       movzx eax, byte [rax + 0xa]
0x0000d414      4189d1         mov r9d, edx
0x0000d417      c0e804         shr al, 4
0x0000d41a      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x0000d41d      41c0e905       shr r9b, 5
0x0000d421      4409c8         or eax, r9d
0x0000d424      83e001         and eax, 1
0x0000d427      c1e005         shl eax, 5
0x0000d42a      09d0           or eax, edx
0x0000d42c      83fe02         cmp esi, 2
0x0000d42f      41884668       mov byte [r14 + 0x68], al
0x0000d433      0f84c7000000   je 0xd500
0x0000d439      83fe04         cmp esi, 4
0x0000d43c      7507           jne 0xd445
0x0000d43e      83c840         or eax, 0x40                            ; segment.PHDR
0x0000d441      41884668       mov byte [r14 + 0x68], al
0x0000d445      85ff           test edi, edi
0x0000d447      7439           je 0xd482
0x0000d449      4d3b7e50       cmp r15, qword [r14 + 0x50]
0x0000d44d      0f84bd000000   je 0xd510
0x0000d453      f6c301         test bl, 1
0x0000d456      7478           je 0xd4d0
0x0000d458      f644240401     test byte [rsp + 4], 1
0x0000d45d      7409           je 0xd468
0x0000d45f      f6c302         test bl, 2
0x0000d462      7478           je 0xd4dc
0x0000d464      0f1f4000       nop dword [rax]
0x0000d468      4c89ea         mov rdx, r13
0x0000d46b      4c29d2         sub rdx, r10
0x0000d46e      780e           js 0xd47e
0x0000d470      488b742408     mov rsi, qword [rsp + 8]
0x0000d475      498d7e10       lea rdi, [r14 + 0x10]
0x0000d479      e852ecffff     call sym.re_node_set_remove_at.isra.4.part.5
0x0000d47e      4983c201       add r10, 1
0x0000d482      4983c501       add r13, 1
0x0000d486      4c3b6d08       cmp r13, qword [rbp + 8]
0x0000d48a      0f8c50ffffff   jl 0xd3e0
0x0000d490      4d89e5         mov r13, r12
0x0000d493      4c8b642410     mov r12, qword [rsp + 0x10]
0x0000d498      4c89e2         mov rdx, r12
0x0000d49b      4c89f6         mov rsi, r14
0x0000d49e      4c89ef         mov rdi, r13
0x0000d4a1      e89ad6ffff     call sym.register_state
0x0000d4a6      85c0           test eax, eax
0x0000d4a8      0f849efeffff   je 0xd34c
0x0000d4ae      4c89f7         mov rdi, r14
0x0000d4b1      e82ae7ffff     call sym.free_state
0x0000d4b6      488b442418     mov rax, qword [rsp + 0x18]
0x0000d4bb      4531f6         xor r14d, r14d
0x0000d4be      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0000d4c4      e983feffff     jmp 0xd34c
0x0000d4c9      0f1f80000000.  nop dword [rax]
0x0000d4d0      f6c302         test bl, 2
0x0000d4d3      7407           je 0xd4dc
0x0000d4d5      f644240401     test byte [rsp + 4], 1
0x0000d4da      758c           jne 0xd468
0x0000d4dc      f6c310         test bl, 0x10
0x0000d4df      7407           je 0xd4e8
0x0000d4e1      f644240402     test byte [rsp + 4], 2
0x0000d4e6      7480           je 0xd468
0x0000d4e8      83e340         and ebx, 0x40                           ; segment.PHDR
0x0000d4eb      7495           je 0xd482
0x0000d4ed      f644240404     test byte [rsp + 4], 4
0x0000d4f2      758e           jne 0xd482
0x0000d4f4      e96fffffff     jmp 0xd468
0x0000d4f9      0f1f80000000.  nop dword [rax]
0x0000d500      83c810         or eax, 0x10
0x0000d503      41884668       mov byte [r14 + 0x68], al
0x0000d507      e939ffffff     jmp 0xd445
0x0000d50c      0f1f4000       nop dword [rax]
0x0000d510      bf18000000     mov edi, 0x18
0x0000d515      e8064affff     call sym.imp.malloc
0x0000d51a      4885c0         test rax, rax
0x0000d51d      49894650       mov qword [r14 + 0x50], rax
0x0000d521      748b           je 0xd4ae
0x0000d523      4889ee         mov rsi, rbp
0x0000d526      4889c7         mov rdi, rax
0x0000d529      e882fbffff     call sym.re_node_set_init_copy
0x0000d52e      85c0           test eax, eax
0x0000d530      7584           jne 0xd4b6
0x0000d532      41804e6880     or byte [r14 + 0x68], 0x80              ; [0x80:1]=56
0x0000d537      4531d2         xor r10d, r10d
0x0000d53a      e914ffffff     jmp 0xd453
0x0000d53f      c70700000000   mov dword [rdi], 0
0x0000d545      4531f6         xor r14d, r14d
0x0000d548      e9fffdffff     jmp 0xd34c
0x0000d54d      4c89f7         mov rdi, r14
0x0000d550      e80b47ffff     call sym.imp.free
0x0000d555      e95cffffff     jmp 0xd4b6
0x0000d55a      660f1f440000   nop word [rax + rax]
;-- re_acquire_state:
0x0000d560      4157           push r15
0x0000d562      4156           push r14
0x0000d564      4155           push r13
0x0000d566      4154           push r12
0x0000d568      55             push rbp
0x0000d569      53             push rbx
0x0000d56a      4883ec08       sub rsp, 8
0x0000d56e      488b6a08       mov rbp, qword [rdx + 8]
0x0000d572      4885ed         test rbp, rbp
0x0000d575      0f84d5010000   je 0xd750
0x0000d57b      4885ed         test rbp, rbp
0x0000d57e      7e1c           jle 0xd59c
0x0000d580      488b4210       mov rax, qword [rdx + 0x10]
0x0000d584      488d0ce8       lea rcx, [rax + rbp*8]
0x0000d588      0f1f84000000.  nop dword [rax + rax]
0x0000d590      480328         add rbp, qword [rax]
0x0000d593      4883c008       add rax, 8
0x0000d597      4839c1         cmp rcx, rax
0x0000d59a      75f4           jne 0xd590
0x0000d59c      488b86880000.  mov rax, qword [rsi + 0x88]
0x0000d5a3      4989d6         mov r14, rdx
0x0000d5a6      4989f4         mov r12, rsi
0x0000d5a9      4989fd         mov r13, rdi
0x0000d5ac      4821e8         and rax, rbp
0x0000d5af      488d1440       lea rdx, [rax + rax*2]
0x0000d5b3      488b4640       mov rax, qword [rsi + 0x40]
0x0000d5b7      488d04d0       lea rax, [rax + rdx*8]
0x0000d5bb      4c8b10         mov r10, qword [rax]
0x0000d5be      4d85d2         test r10, r10
0x0000d5c1      7e33           jle 0xd5f6
0x0000d5c3      4c8b5810       mov r11, qword [rax + 0x10]
0x0000d5c7      4531c9         xor r9d, r9d
0x0000d5ca      660f1f440000   nop word [rax + rax]
0x0000d5d0      4b8b1ccb       mov rbx, qword [r11 + r9*8]
0x0000d5d4      48392b         cmp qword [rbx], rbp
0x0000d5d7      7514           jne 0xd5ed
0x0000d5d9      488d7b08       lea rdi, [rbx + 8]
0x0000d5dd      4c89f6         mov rsi, r14
0x0000d5e0      e80be9ffff     call sym.re_node_set_compare.part.2
0x0000d5e5      84c0           test al, al
0x0000d5e7      0f8502010000   jne 0xd6ef
0x0000d5ed      4983c101       add r9, 1
0x0000d5f1      4d39ca         cmp r10, r9
0x0000d5f4      75da           jne 0xd5d0
0x0000d5f6      be01000000     mov esi, 1
0x0000d5fb      bf70000000     mov edi, 0x70                           ; 'p'
0x0000d600      e8bb48ffff     call sym.imp.calloc
0x0000d605      4885c0         test rax, rax
0x0000d608      4889c3         mov rbx, rax
0x0000d60b      0f8427010000   je 0xd738
0x0000d611      4c8d7808       lea r15, [rax + 8]
0x0000d615      4c89f6         mov rsi, r14
0x0000d618      4c89ff         mov rdi, r15
0x0000d61b      e890faffff     call sym.re_node_set_init_copy
0x0000d620      85c0           test eax, eax
0x0000d622      0f8508010000   jne 0xd730
0x0000d628      498b4608       mov rax, qword [r14 + 8]
0x0000d62c      4c897b50       mov qword [rbx + 0x50], r15
0x0000d630      4885c0         test rax, rax
0x0000d633      0f8ea4000000   jle 0xd6dd
0x0000d639      498b7610       mov rsi, qword [r14 + 0x10]
0x0000d63d      4d8b0424       mov r8, qword [r12]
0x0000d641      4c8d0cc6       lea r9, [rsi + rax*8]
0x0000d645      eb4d           jmp 0xd694
0x0000d647      660f1f840000.  nop word [rax + rax]
0x0000d650      0fb64b68       movzx ecx, byte [rbx + 0x68]
0x0000d654      0fb6500a       movzx edx, byte [rax + 0xa]
0x0000d658      4189ca         mov r10d, ecx
0x0000d65b      c0ea04         shr dl, 4
0x0000d65e      83e1df         and ecx, 0xffffffdf                     ; 4294967263
0x0000d661      41c0ea05       shr r10b, 5
0x0000d665      4409d2         or edx, r10d
0x0000d668      83e201         and edx, 1
0x0000d66b      c1e205         shl edx, 5
0x0000d66e      09ca           or edx, ecx
0x0000d670      83ff02         cmp edi, 2
0x0000d673      885368         mov byte [rbx + 0x68], dl
0x0000d676      0f848c000000   je 0xd708
0x0000d67c      83ff04         cmp edi, 4
0x0000d67f      0f8593000000   jne 0xd718
0x0000d685      83ca40         or edx, 0x40                            ; segment.PHDR
0x0000d688      885368         mov byte [rbx + 0x68], dl
0x0000d68b      4883c608       add rsi, 8
0x0000d68f      4939f1         cmp r9, rsi
0x0000d692      7449           je 0xd6dd
0x0000d694      488b06         mov rax, qword [rsi]
0x0000d697      48c1e004       shl rax, 4
0x0000d69b      4c01c0         add rax, r8
0x0000d69e      0fb67808       movzx edi, byte [rax + 8]
0x0000d6a2      83ff01         cmp edi, 1
0x0000d6a5      75a9           jne 0xd650
0x0000d6a7      f7400800ff03.  test dword [rax + 8], 0x3ff00
0x0000d6ae      74db           je 0xd68b
0x0000d6b0      0fb65368       movzx edx, byte [rbx + 0x68]
0x0000d6b4      0fb6400a       movzx eax, byte [rax + 0xa]
0x0000d6b8      89d1           mov ecx, edx
0x0000d6ba      c0e804         shr al, 4
0x0000d6bd      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x0000d6c0      c0e905         shr cl, 5
0x0000d6c3      09c8           or eax, ecx
0x0000d6c5      83e001         and eax, 1
0x0000d6c8      c1e005         shl eax, 5
0x0000d6cb      09d0           or eax, edx
0x0000d6cd      884368         mov byte [rbx + 0x68], al
0x0000d6d0      4883c608       add rsi, 8
0x0000d6d4      804b6880       or byte [rbx + 0x68], 0x80              ; [0x80:1]=56
0x0000d6d8      4939f1         cmp r9, rsi
0x0000d6db      75b7           jne 0xd694
0x0000d6dd      4889ea         mov rdx, rbp
0x0000d6e0      4889de         mov rsi, rbx
0x0000d6e3      4c89e7         mov rdi, r12
0x0000d6e6      e855d4ffff     call sym.register_state
0x0000d6eb      85c0           test eax, eax
0x0000d6ed      7555           jne 0xd744
0x0000d6ef      4883c408       add rsp, 8
0x0000d6f3      4889d8         mov rax, rbx
0x0000d6f6      5b             pop rbx
0x0000d6f7      5d             pop rbp
0x0000d6f8      415c           pop r12
0x0000d6fa      415d           pop r13
0x0000d6fc      415e           pop r14
0x0000d6fe      415f           pop r15
0x0000d700      c3             ret
0x0000d701      0f1f80000000.  nop dword [rax]
0x0000d708      83ca10         or edx, 0x10
0x0000d70b      885368         mov byte [rbx + 0x68], dl
0x0000d70e      e978ffffff     jmp 0xd68b
0x0000d713      0f1f440000     nop dword [rax + rax]
0x0000d718      83ff0c         cmp edi, 0xc
0x0000d71b      74b3           je 0xd6d0
0x0000d71d      f7400800ff03.  test dword [rax + 8], 0x3ff00
0x0000d724      0f8461ffffff   je 0xd68b
0x0000d72a      eba4           jmp 0xd6d0
0x0000d72c      0f1f4000       nop dword [rax]
0x0000d730      4889df         mov rdi, rbx
0x0000d733      e82845ffff     call sym.imp.free
0x0000d738      41c745000c00.  mov dword [r13], 0xc                    ; [0xc:4]=0
0x0000d740      31db           xor ebx, ebx
0x0000d742      ebab           jmp 0xd6ef
0x0000d744      4889df         mov rdi, rbx
0x0000d747      e894e4ffff     call sym.free_state
0x0000d74c      ebea           jmp 0xd738
0x0000d74e      6690           nop
0x0000d750      c70700000000   mov dword [rdi], 0
0x0000d756      31db           xor ebx, ebx
0x0000d758      eb95           jmp 0xd6ef
0x0000d75a      660f1f440000   nop word [rax + rax]
;-- merge_state_array:
0x0000d760      4157           push r15
0x0000d762      4156           push r14
0x0000d764      4155           push r13
0x0000d766      4154           push r12
0x0000d768      55             push rbp
0x0000d769      53             push rbx
0x0000d76a      4883ec48       sub rsp, 0x48
0x0000d76e      64488b042528.  mov rax, qword fs:[0x28]
0x0000d777      4889442438     mov qword [rsp + 0x38], rax
0x0000d77c      31c0           xor eax, eax
0x0000d77e      4885c9         test rcx, rcx
0x0000d781      0f8e8f000000   jle 0xd816
0x0000d787      488d44241c     lea rax, [rsp + 0x1c]
0x0000d78c      4989fe         mov r14, rdi
0x0000d78f      4889f3         mov rbx, rsi
0x0000d792      4989d4         mov r12, rdx
0x0000d795      4889cd         mov rbp, rcx
0x0000d798      4531ff         xor r15d, r15d
0x0000d79b      4c8d6c2420     lea r13, [rsp + 0x20]
0x0000d7a0      4889442408     mov qword [rsp + 8], rax
0x0000d7a5      eb55           jmp 0xd7fc
0x0000d7a7      660f1f840000.  nop word [rax + rax]
0x0000d7b0      4885d2         test rdx, rdx
0x0000d7b3      743e           je 0xd7f3
0x0000d7b5      4883c208       add rdx, 8
0x0000d7b9      4883c608       add rsi, 8
0x0000d7bd      4c89ef         mov rdi, r13
0x0000d7c0      e87bf9ffff     call sym.re_node_set_init_union
0x0000d7c5      85c0           test eax, eax
0x0000d7c7      8944241c       mov dword [rsp + 0x1c], eax
0x0000d7cb      754b           jne 0xd818
0x0000d7cd      488b7c2408     mov rdi, qword [rsp + 8]
0x0000d7d2      4c89ea         mov rdx, r13
0x0000d7d5      4c89f6         mov rsi, r14
0x0000d7d8      e883fdffff     call sym.re_acquire_state
0x0000d7dd      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000d7e2      4a8904fb       mov qword [rbx + r15*8], rax
0x0000d7e6      e87544ffff     call sym.imp.free
0x0000d7eb      8b44241c       mov eax, dword [rsp + 0x1c]
0x0000d7ef      85c0           test eax, eax
0x0000d7f1      7525           jne 0xd818
0x0000d7f3      4983c701       add r15, 1
0x0000d7f7      4c39fd         cmp rbp, r15
0x0000d7fa      741a           je 0xd816
0x0000d7fc      4a8b34fb       mov rsi, qword [rbx + r15*8]
0x0000d800      4b8b14fc       mov rdx, qword [r12 + r15*8]
0x0000d804      4885f6         test rsi, rsi
0x0000d807      75a7           jne 0xd7b0
0x0000d809      4a8914fb       mov qword [rbx + r15*8], rdx
0x0000d80d      4983c701       add r15, 1
0x0000d811      4c39fd         cmp rbp, r15
0x0000d814      75e6           jne 0xd7fc
0x0000d816      31c0           xor eax, eax
0x0000d818      488b4c2438     mov rcx, qword [rsp + 0x38]
0x0000d81d      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000d826      750f           jne 0xd837
0x0000d828      4883c448       add rsp, 0x48
0x0000d82c      5b             pop rbx
0x0000d82d      5d             pop rbp
0x0000d82e      415c           pop r12
0x0000d830      415d           pop r13
0x0000d832      415e           pop r14
0x0000d834      415f           pop r15
0x0000d836      c3             ret
0x0000d837      e87445ffff     call sym.imp.__stack_chk_fail
0x0000d83c      0f1f4000       nop dword [rax]
;-- expand_bkref_cache:
0x0000d840      4157           push r15
0x0000d842      4156           push r14
0x0000d844      4155           push r13
0x0000d846      4154           push r12
0x0000d848      4989d4         mov r12, rdx
0x0000d84b      55             push rbp
0x0000d84c      53             push rbx
0x0000d84d      4889fb         mov rbx, rdi
0x0000d850      4889f5         mov rbp, rsi
0x0000d853      31f6           xor esi, esi
0x0000d855      4883ec78       sub rsp, 0x78
0x0000d859      488bbfc80000.  mov rdi, qword [rdi + 0xc8]
0x0000d860      64488b042528.  mov rax, qword fs:[0x28]
0x0000d869      4889442468     mov qword [rsp + 0x68], rax
0x0000d86e      31c0           xor eax, eax
0x0000d870      48894c2420     mov qword [rsp + 0x20], rcx
0x0000d875      448944242c     mov dword [rsp + 0x2c], r8d
0x0000d87a      4889fa         mov rdx, rdi
0x0000d87d      4839d6         cmp rsi, rdx
0x0000d880      7d55           jge 0xd8d7
0x0000d882      488d0416       lea rax, [rsi + rdx]
0x0000d886      4c8b83d80000.  mov r8, qword [rbx + 0xd8]
0x0000d88d      4889c1         mov rcx, rax
0x0000d890      48c1e93f       shr rcx, 0x3f
0x0000d894      4801c1         add rcx, rax
0x0000d897      48d1f9         sar rcx, 1
0x0000d89a      488d0489       lea rax, [rcx + rcx*4]
0x0000d89e      4d3b64c008     cmp r12, qword [r8 + rax*8 + 8]
0x0000d8a3      7e2d           jle 0xd8d2
0x0000d8a5      e97e000000     jmp 0xd928
0x0000d8aa      660f1f440000   nop word [rax + rax]
0x0000d8b0      488d140e       lea rdx, [rsi + rcx]
0x0000d8b4      4889d0         mov rax, rdx
0x0000d8b7      48c1e83f       shr rax, 0x3f
0x0000d8bb      4801d0         add rax, rdx
0x0000d8be      48d1f8         sar rax, 1
0x0000d8c1      488d1480       lea rdx, [rax + rax*4]
0x0000d8c5      4989c1         mov r9, rax
0x0000d8c8      4d3b64d008     cmp r12, qword [r8 + rdx*8 + 8]
0x0000d8cd      7f61           jg 0xd930
0x0000d8cf      4889c1         mov rcx, rax
0x0000d8d2      4839ce         cmp rsi, rcx
0x0000d8d5      7cd9           jl 0xd8b0
0x0000d8d7      4839f7         cmp rdi, rsi
0x0000d8da      7e21           jle 0xd8fd
0x0000d8dc      488b8bd80000.  mov rcx, qword [rbx + 0xd8]
0x0000d8e3      488d04b6       lea rax, [rsi + rsi*4]
0x0000d8e7      48c1e003       shl rax, 3
0x0000d8eb      4c39640108     cmp qword [rcx + rax + 8], r12
0x0000d8f0      4889442430     mov qword [rsp + 0x30], rax
0x0000d8f5      7506           jne 0xd8fd
0x0000d8f7      4883feff       cmp rsi, 0xffffffffffffffff
0x0000d8fb      7543           jne 0xd940
0x0000d8fd      31c0           xor eax, eax
0x0000d8ff      488b5c2468     mov rbx, qword [rsp + 0x68]
0x0000d904      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000d90d      0f85c6020000   jne 0xdbd9
0x0000d913      4883c478       add rsp, 0x78
0x0000d917      5b             pop rbx
0x0000d918      5d             pop rbp
0x0000d919      415c           pop r12
0x0000d91b      415d           pop r13
0x0000d91d      415e           pop r14
0x0000d91f      415f           pop r15
0x0000d921      c3             ret
0x0000d922      660f1f440000   nop word [rax + rax]
0x0000d928      4989c9         mov r9, rcx
0x0000d92b      4889d1         mov rcx, rdx
0x0000d92e      6690           nop
0x0000d930      498d7101       lea rsi, [r9 + 1]
0x0000d934      4889ca         mov rdx, rcx
0x0000d937      e941ffffff     jmp 0xd87d
0x0000d93c      0f1f4000       nop dword [rax]
0x0000d940      488d4510       lea rax, [rbp + 0x10]
0x0000d944      4c8bab980000.  mov r13, qword [rbx + 0x98]
0x0000d94b      48890424       mov qword [rsp], rax
0x0000d94f      488d44244c     lea rax, [rsp + 0x4c]
0x0000d954      4889442438     mov qword [rsp + 0x38], rax
0x0000d959      488d442450     lea rax, [rsp + 0x50]
0x0000d95e      4889442410     mov qword [rsp + 0x10], rax
0x0000d963      488b442430     mov rax, qword [rsp + 0x30]
0x0000d968      4c8d3c01       lea r15, [rcx + rax]
0x0000d96c      e9d7000000     jmp 0xda48
0x0000d971      0f1f80000000.  nop dword [rax]
0x0000d978      498b4518       mov rax, qword [r13 + 0x18]
0x0000d97c      4a8b0cd0       mov rcx, qword [rax + r10*8]
0x0000d980      4c8b93b80000.  mov r10, qword [rbx + 0xb8]
0x0000d987      4a8d04f50000.  lea rax, [r14*8]
0x0000d98f      4889442418     mov qword [rsp + 0x18], rax
0x0000d994      4901c2         add r10, rax
0x0000d997      48894c2408     mov qword [rsp + 8], rcx
0x0000d99c      4d8b0a         mov r9, qword [r10]
0x0000d99f      4d85c9         test r9, r9
0x0000d9a2      0f8488010000   je 0xdb30
0x0000d9a8      498b7910       mov rdi, qword [r9 + 0x10]
0x0000d9ac      498d7118       lea rsi, [r9 + 0x18]
0x0000d9b0      4889ca         mov rdx, rcx
0x0000d9b3      e898e5ffff     call sym.re_node_set_contains.isra.3
0x0000d9b8      4885c0         test rax, rax
0x0000d9bb      757c           jne 0xda39
0x0000d9bd      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000d9c2      498d7108       lea rsi, [r9 + 8]
0x0000d9c6      e8e5f6ffff     call sym.re_node_set_init_copy
0x0000d9cb      488b742408     mov rsi, qword [rsp + 8]
0x0000d9d0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000d9d5      8944244c       mov dword [rsp + 0x4c], eax
0x0000d9d9      e832d0ffff     call sym.re_node_set_insert
0x0000d9de      8b54244c       mov edx, dword [rsp + 0x4c]
0x0000d9e2      85d2           test edx, edx
0x0000d9e4      0f859c010000   jne 0xdb86
0x0000d9ea      3c01           cmp al, 1
0x0000d9ec      0f8594010000   jne 0xdb86
0x0000d9f2      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000d9f7      4c0393b80000.  add r10, qword [rbx + 0xb8]
0x0000d9fe      488b542410     mov rdx, qword [rsp + 0x10]
0x0000da03      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000da08      4c89ee         mov rsi, r13
0x0000da0b      4c89542408     mov qword [rsp + 8], r10
0x0000da10      e84bfbffff     call sym.re_acquire_state
0x0000da15      4c8b542408     mov r10, qword [rsp + 8]
0x0000da1a      488b7c2460     mov rdi, qword [rsp + 0x60]
0x0000da1f      498902         mov qword [r10], rax
0x0000da22      e83942ffff     call sym.imp.free
0x0000da27      488b83b80000.  mov rax, qword [rbx + 0xb8]
0x0000da2e      4a833cf000     cmp qword [rax + r14*8], 0
0x0000da33      0f843c010000   je 0xdb75
0x0000da39      4983c728       add r15, 0x28
0x0000da3d      41807ff800     cmp byte [r15 - 8], 0
0x0000da42      0f84b5feffff   je 0xd8fd
0x0000da48      4d8b17         mov r10, qword [r15]
0x0000da4b      4c8b4d08       mov r9, qword [rbp + 8]
0x0000da4f      488b3424       mov rsi, qword [rsp]
0x0000da53      4c89d2         mov rdx, r10
0x0000da56      4c89cf         mov rdi, r9
0x0000da59      e8f2e4ffff     call sym.re_node_set_contains.isra.3
0x0000da5e      4885c0         test rax, rax
0x0000da61      74d6           je 0xda39
0x0000da63      4d8b4718       mov r8, qword [r15 + 0x18]
0x0000da67      4d01e0         add r8, r12
0x0000da6a      4d89c6         mov r14, r8
0x0000da6d      4d2b7710       sub r14, qword [r15 + 0x10]
0x0000da71      4d39f4         cmp r12, r14
0x0000da74      0f85fefeffff   jne 0xd978
0x0000da7a      498b4d28       mov rcx, qword [r13 + 0x28]
0x0000da7e      4b8d0452       lea rax, [r10 + r10*2]
0x0000da82      488b3424       mov rsi, qword [rsp]
0x0000da86      4c89cf         mov rdi, r9
0x0000da89      488d04c1       lea rax, [rcx + rax*8]
0x0000da8d      488b4010       mov rax, qword [rax + 0x10]
0x0000da91      4c8b30         mov r14, qword [rax]
0x0000da94      4c89f2         mov rdx, r14
0x0000da97      e8b4e4ffff     call sym.re_node_set_contains.isra.3
0x0000da9c      4885c0         test rax, rax
0x0000da9f      7598           jne 0xda39
0x0000daa1      bf08000000     mov edi, 8
0x0000daa6      48c744245001.  mov qword [rsp + 0x50], 1
0x0000daaf      48c744245801.  mov qword [rsp + 0x58], 1
0x0000dab8      e86344ffff     call sym.imp.malloc
0x0000dabd      4885c0         test rax, rax
0x0000dac0      4889442460     mov qword [rsp + 0x60], rax
0x0000dac5      0f84f2000000   je 0xdbbd
0x0000dacb      4c8930         mov qword [rax], r14
0x0000dace      31c0           xor eax, eax
0x0000dad0      4c8b7c2410     mov r15, qword [rsp + 0x10]
0x0000dad5      488b542420     mov rdx, qword [rsp + 0x20]
0x0000dada      4c89ef         mov rdi, r13
0x0000dadd      8b4c242c       mov ecx, dword [rsp + 0x2c]
0x0000dae1      8944244c       mov dword [rsp + 0x4c], eax
0x0000dae5      4c89fe         mov rsi, r15
0x0000dae8      e813eeffff     call sym.check_arrival_expand_ecl
0x0000daed      4c89fe         mov rsi, r15
0x0000daf0      4889ef         mov rdi, rbp
0x0000daf3      4189c6         mov r14d, eax
0x0000daf6      e875e9ffff     call sym.re_node_set_merge
0x0000dafb      488b7c2460     mov rdi, qword [rsp + 0x60]
0x0000db00      4189c7         mov r15d, eax
0x0000db03      e85841ffff     call sym.imp.free
0x0000db08      8b44244c       mov eax, dword [rsp + 0x4c]
0x0000db0c      4489f2         mov edx, r14d
0x0000db0f      4409fa         or edx, r15d
0x0000db12      09c2           or edx, eax
0x0000db14      0f858c000000   jne 0xdba6
0x0000db1a      488b8bd80000.  mov rcx, qword [rbx + 0xd8]
0x0000db21      e93dfeffff     jmp 0xd963
0x0000db26      662e0f1f8400.  nop word cs:[rax + rax]
0x0000db30      bf08000000     mov edi, 8
0x0000db35      4c89542418     mov qword [rsp + 0x18], r10
0x0000db3a      48c744245001.  mov qword [rsp + 0x50], 1
0x0000db43      48c744245801.  mov qword [rsp + 0x58], 1
0x0000db4c      e8cf43ffff     call sym.imp.malloc
0x0000db51      4885c0         test rax, rax
0x0000db54      4889442460     mov qword [rsp + 0x60], rax
0x0000db59      7441           je 0xdb9c
0x0000db5b      488b7c2408     mov rdi, qword [rsp + 8]
0x0000db60      c744244c0000.  mov dword [rsp + 0x4c], 0
0x0000db68      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000db6d      488938         mov qword [rax], rdi
0x0000db70      e989feffff     jmp 0xd9fe
0x0000db75      8b44244c       mov eax, dword [rsp + 0x4c]
0x0000db79      85c0           test eax, eax
0x0000db7b      0f84b8feffff   je 0xda39
0x0000db81      e979fdffff     jmp 0xd8ff
0x0000db86      488b7c2460     mov rdi, qword [rsp + 0x60]
0x0000db8b      e8d040ffff     call sym.imp.free
0x0000db90      8b44244c       mov eax, dword [rsp + 0x4c]
0x0000db94      85c0           test eax, eax
0x0000db96      0f8563fdffff   jne 0xd8ff
0x0000db9c      b80c000000     mov eax, 0xc
0x0000dba1      e959fdffff     jmp 0xd8ff
0x0000dba6      85c0           test eax, eax
0x0000dba8      0f8551fdffff   jne 0xd8ff
0x0000dbae      4585f6         test r14d, r14d
0x0000dbb1      4489f0         mov eax, r14d
0x0000dbb4      410f44c7       cmove eax, r15d
0x0000dbb8      e942fdffff     jmp 0xd8ff
0x0000dbbd      48c744245800.  mov qword [rsp + 0x58], 0
0x0000dbc6      48c744245000.  mov qword [rsp + 0x50], 0
0x0000dbcf      b80c000000     mov eax, 0xc
0x0000dbd4      e9f7feffff     jmp 0xdad0
0x0000dbd9      e8d241ffff     call sym.imp.__stack_chk_fail
0x0000dbde      6690           nop
;-- check_subexp_matching_top.isra.18:
0x0000dbe0      4157           push r15
0x0000dbe2      4156           push r14
0x0000dbe4      4155           push r13
0x0000dbe6      4154           push r12
0x0000dbe8      55             push rbp
0x0000dbe9      53             push rbx
0x0000dbea      4883ec28       sub rsp, 0x28
0x0000dbee      48833e00       cmp qword [rsi], 0
0x0000dbf2      4c8baf980000.  mov r13, qword [rdi + 0x98]
0x0000dbf9      0f8ec1000000   jle 0xdcc0
0x0000dbff      4989d6         mov r14, rdx
0x0000dc02      4989f4         mov r12, rsi
0x0000dc05      4989ff         mov r15, rdi
0x0000dc08      31db           xor ebx, ebx
0x0000dc0a      eb12           jmp 0xdc1e
0x0000dc0c      0f1f4000       nop dword [rax]
0x0000dc10      4883c301       add rbx, 1
0x0000dc14      493b1c24       cmp rbx, qword [r12]
0x0000dc18      0f8da2000000   jge 0xdcc0
0x0000dc1e      498b06         mov rax, qword [r14]
0x0000dc21      488b2cd8       mov rbp, qword [rax + rbx*8]
0x0000dc25      4889e8         mov rax, rbp
0x0000dc28      48c1e004       shl rax, 4
0x0000dc2c      49034500       add rax, qword [r13]
0x0000dc30      80780808       cmp byte [rax + 8], 8
0x0000dc34      75da           jne 0xdc10
0x0000dc36      488b00         mov rax, qword [rax]
0x0000dc39      4883f83f       cmp rax, 0x3f
0x0000dc3d      7fd1           jg 0xdc10
0x0000dc3f      498bb5a00000.  mov rsi, qword [r13 + 0xa0]
0x0000dc46      480fa3c6       bt rsi, rax
0x0000dc4a      73c4           jae 0xdc10
0x0000dc4c      4d8b87e80000.  mov r8, qword [r15 + 0xe8]
0x0000dc53      4d3b87f00000.  cmp r8, qword [r15 + 0xf0]
0x0000dc5a      4d8b8ff80000.  mov r9, qword [r15 + 0xf8]
0x0000dc61      7475           je 0xdcd8
0x0000dc63      be30000000     mov esi, 0x30                           ; '0'
0x0000dc68      bf01000000     mov edi, 1
0x0000dc6d      4c894c2410     mov qword [rsp + 0x10], r9
0x0000dc72      4c89442408     mov qword [rsp + 8], r8
0x0000dc77      48894c2418     mov qword [rsp + 0x18], rcx
0x0000dc7c      e83f42ffff     call sym.imp.calloc
0x0000dc81      4c8b442408     mov r8, qword [rsp + 8]
0x0000dc86      4c8b4c2410     mov r9, qword [rsp + 0x10]
0x0000dc8b      4885c0         test rax, rax
0x0000dc8e      4b8904c1       mov qword [r9 + r8*8], rax
0x0000dc92      743d           je 0xdcd1
0x0000dc94      4983c001       add r8, 1
0x0000dc98      4883c301       add rbx, 1
0x0000dc9c      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0000dca1      4d8987e80000.  mov qword [r15 + 0xe8], r8
0x0000dca8      493b1c24       cmp rbx, qword [r12]
0x0000dcac      48896808       mov qword [rax + 8], rbp
0x0000dcb0      488908         mov qword [rax], rcx
0x0000dcb3      0f8c65ffffff   jl 0xdc1e
0x0000dcb9      0f1f80000000.  nop dword [rax]
0x0000dcc0      31c0           xor eax, eax
0x0000dcc2      4883c428       add rsp, 0x28
0x0000dcc6      5b             pop rbx
0x0000dcc7      5d             pop rbp
0x0000dcc8      415c           pop r12
0x0000dcca      415d           pop r13
0x0000dccc      415e           pop r14
0x0000dcce      415f           pop r15
0x0000dcd0      c3             ret
0x0000dcd1      b80c000000     mov eax, 0xc
0x0000dcd6      ebea           jmp 0xdcc2
0x0000dcd8      4b8d0400       lea rax, [r8 + r8]
0x0000dcdc      4c89c6         mov rsi, r8
0x0000dcdf      4c89cf         mov rdi, r9
0x0000dce2      48c1e604       shl rsi, 4
0x0000dce6      48894c2408     mov qword [rsp + 8], rcx
0x0000dceb      4889442410     mov qword [rsp + 0x10], rax
0x0000dcf0      e89b42ffff     call sym.imp.realloc
0x0000dcf5      4885c0         test rax, rax
0x0000dcf8      4989c1         mov r9, rax
0x0000dcfb      488b4c2408     mov rcx, qword [rsp + 8]
0x0000dd00      74cf           je 0xdcd1
0x0000dd02      498987f80000.  mov qword [r15 + 0xf8], rax
0x0000dd09      488b442410     mov rax, qword [rsp + 0x10]
0x0000dd0e      4d8b87e80000.  mov r8, qword [r15 + 0xe8]
0x0000dd15      498987f00000.  mov qword [r15 + 0xf0], rax
0x0000dd1c      e942ffffff     jmp 0xdc63
0x0000dd21      0f1f440000     nop dword [rax + rax]
0x0000dd26      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_string_context_at:
0x0000dd30      55             push rbp
0x0000dd31      53             push rbx
0x0000dd32      4889fd         mov rbp, rdi
0x0000dd35      4883ec08       sub rsp, 8
0x0000dd39      4885f6         test rsi, rsi
0x0000dd3c      7852           js 0xdd90
0x0000dd3e      48397758       cmp qword [rdi + 0x58], rsi
0x0000dd42      0f84a0000000   je 0xdde8
0x0000dd48      83bf90000000.  cmp dword [rdi + 0x90], 1
0x0000dd4f      7e4f           jle 0xdda0
0x0000dd51      488b4710       mov rax, qword [rdi + 0x10]
0x0000dd55      eb13           jmp 0xdd6a
0x0000dd57      660f1f840000.  nop word [rax + rax]
0x0000dd60      4883ee01       sub rsi, 1
0x0000dd64      4883feff       cmp rsi, 0xffffffffffffffff
0x0000dd68      7426           je 0xdd90
0x0000dd6a      8b1cb0         mov ebx, dword [rax + rsi*4]
0x0000dd6d      83fbff         cmp ebx, 0xffffffff
0x0000dd70      74ee           je 0xdd60
0x0000dd72      80bd8e000000.  cmp byte [rbp + 0x8e], 0
0x0000dd79      757d           jne 0xddf8
0x0000dd7b      31c0           xor eax, eax
0x0000dd7d      83fb0a         cmp ebx, 0xa
0x0000dd80      744a           je 0xddcc
0x0000dd82      4883c408       add rsp, 8
0x0000dd86      5b             pop rbx
0x0000dd87      5d             pop rbp
0x0000dd88      c3             ret
0x0000dd89      0f1f80000000.  nop dword [rax]
0x0000dd90      8b4570         mov eax, dword [rbp + 0x70]
0x0000dd93      4883c408       add rsp, 8
0x0000dd97      5b             pop rbx
0x0000dd98      5d             pop rbp
0x0000dd99      c3             ret
0x0000dd9a      660f1f440000   nop word [rax + rax]
0x0000dda0      488b4708       mov rax, qword [rdi + 8]
0x0000dda4      488b8f800000.  mov rcx, qword [rdi + 0x80]
0x0000ddab      0fb60430       movzx eax, byte [rax + rsi]
0x0000ddaf      4889c2         mov rdx, rax
0x0000ddb2      48c1f806       sar rax, 6
0x0000ddb6      488b0cc1       mov rcx, qword [rcx + rax*8]
0x0000ddba      b801000000     mov eax, 1
0x0000ddbf      480fa3d1       bt rcx, rdx
0x0000ddc3      72bd           jb 0xdd82
0x0000ddc5      31c0           xor eax, eax
0x0000ddc7      80fa0a         cmp dl, 0xa
0x0000ddca      75b6           jne 0xdd82
0x0000ddcc      31c0           xor eax, eax
0x0000ddce      80bd8d000000.  cmp byte [rbp + 0x8d], 0
0x0000ddd5      0f95c0         setne al
0x0000ddd8      4883c408       add rsp, 8
0x0000dddc      01c0           add eax, eax
0x0000ddde      5b             pop rbx
0x0000dddf      5d             pop rbp
0x0000dde0      c3             ret
0x0000dde1      0f1f80000000.  nop dword [rax]
0x0000dde8      83e202         and edx, 2
0x0000ddeb      83fa01         cmp edx, 1
0x0000ddee      19c0           sbb eax, eax
0x0000ddf0      83e002         and eax, 2
0x0000ddf3      83c008         add eax, 8
0x0000ddf6      eb8a           jmp 0xdd82
0x0000ddf8      89df           mov edi, ebx
0x0000ddfa      e81141ffff     call sym.imp.iswalnum
0x0000ddff      85c0           test eax, eax
0x0000de01      7509           jne 0xde0c
0x0000de03      83fb5f         cmp ebx, 0x5f
0x0000de06      0f856fffffff   jne 0xdd7b
0x0000de0c      b801000000     mov eax, 1
0x0000de11      e96cffffff     jmp 0xdd82
0x0000de16      662e0f1f8400.  nop word cs:[rax + rax]
;-- check_node_accept:
0x0000de20      488b4708       mov rax, qword [rdi + 8]
0x0000de24      0fb60c10       movzx ecx, byte [rax + rdx]
0x0000de28      0fb64608       movzx eax, byte [rsi + 8]
0x0000de2c      3c03           cmp al, 3
0x0000de2e      0f84b4000000   je 0xdee8
0x0000de34      0f8696000000   jbe 0xded0
0x0000de3a      3c05           cmp al, 5
0x0000de3c      7412           je 0xde50
0x0000de3e      3c07           cmp al, 7
0x0000de40      0f859a000000   jne 0xdee0
0x0000de46      31c0           xor eax, eax
0x0000de48      84c9           test cl, cl
0x0000de4a      0f888a000000   js 0xdeda
0x0000de50      80f90a         cmp cl, 0xa
0x0000de53      0f84bf000000   je 0xdf18
0x0000de59      84c9           test cl, cl
0x0000de5b      7513           jne 0xde70
0x0000de5d      488b8f980000.  mov rcx, qword [rdi + 0x98]
0x0000de64      31c0           xor eax, eax
0x0000de66      f681d8000000.  test byte [rcx + 0xd8], 0x80
0x0000de6d      756b           jne 0xdeda
0x0000de6f      90             nop
0x0000de70      53             push rbx
0x0000de71      8b5e08         mov ebx, dword [rsi + 8]
0x0000de74      b801000000     mov eax, 1
0x0000de79      f7c300ff0300   test ebx, 0x3ff00
0x0000de7f      744b           je 0xdecc
0x0000de81      4889d6         mov rsi, rdx
0x0000de84      8b97a0000000   mov edx, dword [rdi + 0xa0]
0x0000de8a      c1eb08         shr ebx, 8
0x0000de8d      e89efeffff     call sym.re_string_context_at
0x0000de92      89d9           mov ecx, ebx
0x0000de94      89c2           mov edx, eax
0x0000de96      6681e1ff03     and cx, 0x3ff
0x0000de9b      f6c304         test bl, 4
0x0000de9e      7468           je 0xdf08
0x0000dea0      31c0           xor eax, eax
0x0000dea2      f6c201         test dl, 1
0x0000dea5      7425           je 0xdecc
0x0000dea7      83e308         and ebx, 8
0x0000deaa      7520           jne 0xdecc
0x0000deac      f6c120         test cl, 0x20                           ; "@"
0x0000deaf      7407           je 0xdeb8
0x0000deb1      31c0           xor eax, eax
0x0000deb3      f6c202         test dl, 2
0x0000deb6      7414           je 0xdecc
0x0000deb8      c1ea03         shr edx, 3
0x0000debb      b801000000     mov eax, 1
0x0000dec0      83e201         and edx, 1
0x0000dec3      81e180000000   and ecx, 0x80
0x0000dec9      0f45c2         cmovne eax, edx
0x0000decc      5b             pop rbx
0x0000decd      c3             ret
0x0000dece      6690           nop
0x0000ded0      3c01           cmp al, 1
0x0000ded2      750c           jne 0xdee0
0x0000ded4      31c0           xor eax, eax
0x0000ded6      380e           cmp byte [rsi], cl
0x0000ded8      7496           je 0xde70
0x0000deda      f3c3           ret
0x0000dedc      0f1f4000       nop dword [rax]
0x0000dee0      31c0           xor eax, eax
0x0000dee2      c3             ret
0x0000dee3      0f1f440000     nop dword [rax + rax]
0x0000dee8      4c8b06         mov r8, qword [rsi]
0x0000deeb      0fb6c1         movzx eax, cl
0x0000deee      48c1f806       sar rax, 6
0x0000def2      4d8b04c0       mov r8, qword [r8 + rax*8]
0x0000def6      31c0           xor eax, eax
0x0000def8      490fa3c8       bt r8, rcx
0x0000defc      0f826effffff   jb 0xde70
0x0000df02      f3c3           ret
0x0000df04      0f1f4000       nop dword [rax]
0x0000df08      83e308         and ebx, 8
0x0000df0b      749f           je 0xdeac
0x0000df0d      a801           test al, 1
0x0000df0f      749b           je 0xdeac
0x0000df11      31c0           xor eax, eax
0x0000df13      5b             pop rbx
0x0000df14      c3             ret
0x0000df15      0f1f00         nop dword [rax]
0x0000df18      488b8f980000.  mov rcx, qword [rdi + 0x98]
0x0000df1f      31c0           xor eax, eax
0x0000df21      f681d8000000.  test byte [rcx + 0xd8], 0x40
0x0000df28      0f8542ffffff   jne 0xde70
0x0000df2e      f3c3           ret
;-- check_halt_state_context.isra.20:
0x0000df30      4154           push r12
0x0000df32      4989d4         mov r12, rdx
0x0000df35      55             push rbp
0x0000df36      53             push rbx
0x0000df37      8b97a0000000   mov edx, dword [rdi + 0xa0]
0x0000df3d      4889f3         mov rbx, rsi
0x0000df40      4889ce         mov rsi, rcx
0x0000df43      4889fd         mov rbp, rdi
0x0000df46      e8e5fdffff     call sym.re_string_context_at
0x0000df4b      4885db         test rbx, rbx
0x0000df4e      0f8ea4000000   jle 0xdff8
0x0000df54      488b95980000.  mov rdx, qword [rbp + 0x98]
0x0000df5b      4189c3         mov r11d, eax
0x0000df5e      89c5           mov ebp, eax
0x0000df60      83e001         and eax, 1
0x0000df63      4d8b0c24       mov r9, qword [r12]
0x0000df67      31f6           xor esi, esi
0x0000df69      83e508         and ebp, 8
0x0000df6c      4183e302       and r11d, 2
0x0000df70      4189c2         mov r10d, eax
0x0000df73      4c8b02         mov r8, qword [rdx]
0x0000df76      eb11           jmp 0xdf89
0x0000df78      0f1f84000000.  nop dword [rax + rax]
0x0000df80      4883c601       add rsi, 1
0x0000df84      4839de         cmp rsi, rbx
0x0000df87      746f           je 0xdff8
0x0000df89      498b04f1       mov rax, qword [r9 + rsi*8]
0x0000df8d      4889c2         mov rdx, rax
0x0000df90      48c1e204       shl rdx, 4
0x0000df94      4c01c2         add rdx, r8
0x0000df97      8b4a08         mov ecx, dword [rdx + 8]
0x0000df9a      c1e908         shr ecx, 8
0x0000df9d      89cf           mov edi, ecx
0x0000df9f      6681e7ff03     and di, 0x3ff
0x0000dfa4      807a0802       cmp byte [rdx + 8], 2
0x0000dfa8      75d6           jne 0xdf80
0x0000dfaa      6685ff         test di, di
0x0000dfad      7426           je 0xdfd5
0x0000dfaf      f6c104         test cl, 4
0x0000dfb2      742c           je 0xdfe0
0x0000dfb4      4585d2         test r10d, r10d
0x0000dfb7      74c7           je 0xdf80
0x0000dfb9      83e108         and ecx, 8
0x0000dfbc      75c2           jne 0xdf80
0x0000dfbe      40f6c720       test dil, 0x20                          ; "@"
0x0000dfc2      7405           je 0xdfc9
0x0000dfc4      4585db         test r11d, r11d
0x0000dfc7      74b7           je 0xdf80
0x0000dfc9      81e780000000   and edi, 0x80
0x0000dfcf      7404           je 0xdfd5
0x0000dfd1      85ed           test ebp, ebp
0x0000dfd3      74ab           je 0xdf80
0x0000dfd5      5b             pop rbx
0x0000dfd6      5d             pop rbp
0x0000dfd7      415c           pop r12
0x0000dfd9      c3             ret
0x0000dfda      660f1f440000   nop word [rax + rax]
0x0000dfe0      83e108         and ecx, 8
0x0000dfe3      74d9           je 0xdfbe
0x0000dfe5      4585d2         test r10d, r10d
0x0000dfe8      7596           jne 0xdf80
0x0000dfea      40f6c720       test dil, 0x20                          ; "@"
0x0000dfee      74d9           je 0xdfc9
0x0000dff0      ebd2           jmp 0xdfc4
0x0000dff2      660f1f440000   nop word [rax + rax]
0x0000dff8      5b             pop rbx
0x0000dff9      31c0           xor eax, eax
0x0000dffb      5d             pop rbp
0x0000dffc      415c           pop r12
0x0000dffe      c3             ret
0x0000dfff      90             nop
;-- re_string_reconstruct:
0x0000e000      4157           push r15
0x0000e002      4156           push r14
0x0000e004      4989f7         mov r15, rsi
0x0000e007      4155           push r13
0x0000e009      4154           push r12
0x0000e00b      4189d2         mov r10d, edx
0x0000e00e      55             push rbp
0x0000e00f      53             push rbx
0x0000e010      4889f5         mov rbp, rsi
0x0000e013      4889fb         mov rbx, rdi
0x0000e016      4883ec48       sub rsp, 0x48
0x0000e01a      64488b042528.  mov rax, qword fs:[0x28]
0x0000e023      4889442438     mov qword [rsp + 0x38], rax
0x0000e028      31c0           xor eax, eax
0x0000e02a      488b4728       mov rax, qword [rdi + 0x28]
0x0000e02e      4829c5         sub rbp, rax
0x0000e031      4839f0         cmp rax, rsi
0x0000e034      7e60           jle 0xe096
0x0000e036      83bf90000000.  cmp dword [rdi + 0x90], 1
0x0000e03d      0f8f2d010000   jg 0xe170
0x0000e043      488b4350       mov rax, qword [rbx + 0x50]
0x0000e047      48c743300000.  mov qword [rbx + 0x30], 0
0x0000e04f      4c89fd         mov rbp, r15
0x0000e052      48c743280000.  mov qword [rbx + 0x28], 0
0x0000e05a      48c743380000.  mov qword [rbx + 0x38], 0
0x0000e062      c6838c000000.  mov byte [rbx + 0x8c], 0
0x0000e069      48894358       mov qword [rbx + 0x58], rax
0x0000e06d      488b4360       mov rax, qword [rbx + 0x60]
0x0000e071      48894368       mov qword [rbx + 0x68], rax
0x0000e075      4489d0         mov eax, r10d
0x0000e078      83e001         and eax, 1
0x0000e07b      83f801         cmp eax, 1
0x0000e07e      19c0           sbb eax, eax
0x0000e080      83e002         and eax, 2
0x0000e083      83c004         add eax, 4
0x0000e086      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x0000e08d      894370         mov dword [rbx + 0x70], eax
0x0000e090      0f84ca000000   je 0xe160
0x0000e096      4885ed         test rbp, rbp
0x0000e099      7463           je 0xe0fe
0x0000e09b      488b4338       mov rax, qword [rbx + 0x38]
0x0000e09f      0fb6938c0000.  movzx edx, byte [rbx + 0x8c]
0x0000e0a6      4c8b4330       mov r8, qword [rbx + 0x30]
0x0000e0aa      4839e8         cmp rax, rbp
0x0000e0ad      0f8e1d010000   jle 0xe1d0
0x0000e0b3      84d2           test dl, dl
0x0000e0b5      0f850d020000   jne 0xe2c8
0x0000e0bb      488d75ff       lea rsi, [rbp - 1]
0x0000e0bf      4489d2         mov edx, r10d
0x0000e0c2      4889df         mov rdi, rbx
0x0000e0c5      4c890424       mov qword [rsp], r8
0x0000e0c9      e862fcffff     call sym.re_string_context_at
0x0000e0ce      4c8b0424       mov r8, qword [rsp]
0x0000e0d2      894370         mov dword [rbx + 0x70], eax
0x0000e0d5      4929e8         sub r8, rbp
0x0000e0d8      83bb90000000.  cmp dword [rbx + 0x90], 1
0x0000e0df      0f8f9b000000   jg 0xe180
0x0000e0e5      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x0000e0ec      0f859e030000   jne 0xe490
0x0000e0f2      48296b38       sub qword [rbx + 0x38], rbp
0x0000e0f6      4c894330       mov qword [rbx + 0x30], r8
0x0000e0fa      48016b08       add qword [rbx + 8], rbp
0x0000e0fe      488b4358       mov rax, qword [rbx + 0x58]
0x0000e102      48296b68       sub qword [rbx + 0x68], rbp
0x0000e106      4c897b28       mov qword [rbx + 0x28], r15
0x0000e10a      4829e8         sub rax, rbp
0x0000e10d      83bb90000000.  cmp dword [rbx + 0x90], 1
0x0000e114      48894358       mov qword [rbx + 0x58], rax
0x0000e118      0f8e9a000000   jle 0xe1b8
0x0000e11e      80bb88000000.  cmp byte [rbx + 0x88], 0
0x0000e125      4889df         mov rdi, rbx
0x0000e128      747e           je 0xe1a8
0x0000e12a      e841cdffff     call sym.build_wcs_upper_buffer
0x0000e12f      85c0           test eax, eax
0x0000e131      750a           jne 0xe13d
0x0000e133      48c743480000.  mov qword [rbx + 0x48], 0
0x0000e13b      31c0           xor eax, eax
0x0000e13d      488b4c2438     mov rcx, qword [rsp + 0x38]
0x0000e142      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000e14b      0f8549060000   jne 0xe79a
0x0000e151      4883c448       add rsp, 0x48
0x0000e155      5b             pop rbx
0x0000e156      5d             pop rbp
0x0000e157      415c           pop r12
0x0000e159      415d           pop r13
0x0000e15b      415e           pop r14
0x0000e15d      415f           pop r15
0x0000e15f      c3             ret
0x0000e160      488b03         mov rax, qword [rbx]
0x0000e163      48894308       mov qword [rbx + 8], rax
0x0000e167      e92affffff     jmp 0xe096
0x0000e16c      0f1f4000       nop dword [rax]
0x0000e170      48c747200000.  mov qword [rdi + 0x20], 0
0x0000e178      e9c6feffff     jmp 0xe043
0x0000e17d      0f1f00         nop dword [rax]
0x0000e180      488b7b10       mov rdi, qword [rbx + 0x10]
0x0000e184      4a8d14850000.  lea rdx, [r8*4]
0x0000e18c      488d34af       lea rsi, [rdi + rbp*4]
0x0000e190      e85b3effff     call sym.imp.memmove
0x0000e195      4c8b4330       mov r8, qword [rbx + 0x30]
0x0000e199      4929e8         sub r8, rbp
0x0000e19c      e944ffffff     jmp 0xe0e5
0x0000e1a1      0f1f80000000.  nop dword [rax]
0x0000e1a8      e8f3caffff     call sym.build_wcs_buffer
0x0000e1ad      e981ffffff     jmp 0xe133
0x0000e1b2      660f1f440000   nop word [rax + rax]
0x0000e1b8      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x0000e1bf      0f85ab030000   jne 0xe570
0x0000e1c5      48894330       mov qword [rbx + 0x30], rax
0x0000e1c9      e965ffffff     jmp 0xe133
0x0000e1ce      6690           nop
0x0000e1d0      84d2           test dl, dl
0x0000e1d2      0f85a5040000   jne 0xe67d
0x0000e1d8      486393900000.  movsxd rdx, dword [rbx + 0x90]
0x0000e1df      48c743300000.  mov qword [rbx + 0x30], 0
0x0000e1e7      4c8b5b28       mov r11, qword [rbx + 0x28]
0x0000e1eb      83fa01         cmp edx, 1
0x0000e1ee      0f8ee4030000   jle 0xe5d8
0x0000e1f4      80bb89000000.  cmp byte [rbx + 0x89], 0
0x0000e1fb      0f85b7020000   jne 0xe4b8
0x0000e201      4d8d3403       lea r14, [r11 + rax]
0x0000e205      4d39f7         cmp r15, r14
0x0000e208      0f8e41040000   jle 0xe64f
0x0000e20e      488d4320       lea rax, [rbx + 0x20]
0x0000e212      4c8d6c2424     lea r13, [rsp + 0x24]
0x0000e217      4889442410     mov qword [rsp + 0x10], rax
0x0000e21c      0f1f4000       nop dword [rax]
0x0000e220      4c8b6350       mov r12, qword [rbx + 0x50]
0x0000e224      488b33         mov rsi, qword [rbx]
0x0000e227      4c89ef         mov rdi, r13
0x0000e22a      488b4320       mov rax, qword [rbx + 0x20]
0x0000e22e      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0000e233      448954240c     mov dword [rsp + 0xc], r10d
0x0000e238      4c890424       mov qword [rsp], r8
0x0000e23c      4d29f4         sub r12, r14
0x0000e23f      4c01f6         add rsi, r14
0x0000e242      4c89e2         mov rdx, r12
0x0000e245      4889442418     mov qword [rsp + 0x18], rax
0x0000e24a      e861c1ffff     call sym.rpl_mbrtowc
0x0000e24f      488d48ff       lea rcx, [rax - 1]
0x0000e253      8b542424       mov edx, dword [rsp + 0x24]
0x0000e257      4c8b0424       mov r8, qword [rsp]
0x0000e25b      448b54240c     mov r10d, dword [rsp + 0xc]
0x0000e260      4883f9fc       cmp rcx, 0xfffffffffffffffc
0x0000e264      0f873b040000   ja 0xe6a5
0x0000e26a      4901c6         add r14, rax
0x0000e26d      4d39f7         cmp r15, r14
0x0000e270      7fae           jg 0xe220
0x0000e272      4d29fe         sub r14, r15
0x0000e275      83faff         cmp edx, 0xffffffff
0x0000e278      4d89f4         mov r12, r14
0x0000e27b      4c897330       mov qword [rbx + 0x30], r14
0x0000e27f      0f84d4030000   je 0xe659
0x0000e285      80bb8e000000.  cmp byte [rbx + 0x8e], 0
0x0000e28c      0f8567040000   jne 0xe6f9
0x0000e292      31c0           xor eax, eax
0x0000e294      83fa0a         cmp edx, 0xa
0x0000e297      750e           jne 0xe2a7
0x0000e299      31c0           xor eax, eax
0x0000e29b      80bb8d000000.  cmp byte [rbx + 0x8d], 0
0x0000e2a2      0f95c0         setne al
0x0000e2a5      01c0           add eax, eax
0x0000e2a7      894370         mov dword [rbx + 0x70], eax
0x0000e2aa      4983fc00       cmp r12, 0
0x0000e2ae      0f8516040000   jne 0xe6ca
0x0000e2b4      0fb6838b0000.  movzx eax, byte [rbx + 0x8b]
0x0000e2bb      4c896338       mov qword [rbx + 0x38], r12
0x0000e2bf      e9b8010000     jmp 0xe47c
0x0000e2c4      0f1f4000       nop dword [rax]
0x0000e2c8      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000e2cc      4c89c1         mov rcx, r8
0x0000e2cf      31f6           xor esi, esi
0x0000e2d1      eb10           jmp 0xe2e3
0x0000e2d3      0f1f440000     nop dword [rax + rax]
0x0000e2d8      7d39           jge 0xe313
0x0000e2da      488d7001       lea rsi, [rax + 1]
0x0000e2de      4839ce         cmp rsi, rcx
0x0000e2e1      7d25           jge 0xe308
0x0000e2e3      488d140e       lea rdx, [rsi + rcx]
0x0000e2e7      4889d0         mov rax, rdx
0x0000e2ea      48c1e83f       shr rax, 0x3f
0x0000e2ee      4801d0         add rax, rdx
0x0000e2f1      48d1f8         sar rax, 1
0x0000e2f4      498b14c6       mov rdx, qword [r14 + rax*8]
0x0000e2f8      4989c4         mov r12, rax
0x0000e2fb      4839ea         cmp rdx, rbp
0x0000e2fe      7ed8           jle 0xe2d8
0x0000e300      4889c1         mov rcx, rax
0x0000e303      ebd9           jmp 0xe2de
0x0000e305      0f1f00         nop dword [rax]
0x0000e308      4c8d6001       lea r12, [rax + 1]
0x0000e30c      4839ea         cmp rdx, rbp
0x0000e30f      4c0f4de0       cmovge r12, rax
0x0000e313      4d8d6c24ff     lea r13, [r12 - 1]
0x0000e318      4489d2         mov edx, r10d
0x0000e31b      4889df         mov rdi, rbx
0x0000e31e      4c890424       mov qword [rsp], r8
0x0000e322      4c89ee         mov rsi, r13
0x0000e325      e806faffff     call sym.re_string_context_at
0x0000e32a      4c39e5         cmp rbp, r12
0x0000e32d      894370         mov dword [rbx + 0x70], eax
0x0000e330      4c8b0424       mov r8, qword [rsp]
0x0000e334      0f857e000000   jne 0xe3b8
0x0000e33a      4c39c5         cmp rbp, r8
0x0000e33d      7d79           jge 0xe3b8
0x0000e33f      4b392ce6       cmp qword [r14 + r12*8], rbp
0x0000e343      7573           jne 0xe3b8
0x0000e345      488b7b10       mov rdi, qword [rbx + 0x10]
0x0000e349      4929e8         sub r8, rbp
0x0000e34c      4a8d14850000.  lea rdx, [r8*4]
0x0000e354      488d34af       lea rsi, [rdi + rbp*4]
0x0000e358      e8933cffff     call sym.imp.memmove
0x0000e35d      488b7b08       mov rdi, qword [rbx + 8]
0x0000e361      488b5330       mov rdx, qword [rbx + 0x30]
0x0000e365      488d342f       lea rsi, [rdi + rbp]
0x0000e369      4829ea         sub rdx, rbp
0x0000e36c      e87f3cffff     call sym.imp.memmove
0x0000e371      488b4330       mov rax, qword [rbx + 0x30]
0x0000e375      48296b38       sub qword [rbx + 0x38], rbp
0x0000e379      4829e8         sub rax, rbp
0x0000e37c      4885c0         test rax, rax
0x0000e37f      48894330       mov qword [rbx + 0x30], rax
0x0000e383      7e23           jle 0xe3a8
0x0000e385      488b4b18       mov rcx, qword [rbx + 0x18]
0x0000e389      31c0           xor eax, eax
0x0000e38b      488d34e9       lea rsi, [rcx + rbp*8]
0x0000e38f      90             nop
0x0000e390      488b14c6       mov rdx, qword [rsi + rax*8]
0x0000e394      4829ea         sub rdx, rbp
0x0000e397      488914c1       mov qword [rcx + rax*8], rdx
0x0000e39b      4883c001       add rax, 1
0x0000e39f      48394330       cmp qword [rbx + 0x30], rax
0x0000e3a3      7feb           jg 0xe390
0x0000e3a5      0f1f00         nop dword [rax]
0x0000e3a8      0fb6838b0000.  movzx eax, byte [rbx + 0x8b]
0x0000e3af      e9c8000000     jmp 0xe47c
0x0000e3b4      0f1f4000       nop dword [rax]
0x0000e3b8      488b4350       mov rax, qword [rbx + 0x50]
0x0000e3bc      c6838c000000.  mov byte [rbx + 0x8c], 0
0x0000e3c3      4801e8         add rax, rbp
0x0000e3c6      4c29f8         sub rax, r15
0x0000e3c9      48894358       mov qword [rbx + 0x58], rax
0x0000e3cd      488b4360       mov rax, qword [rbx + 0x60]
0x0000e3d1      4801e8         add rax, rbp
0x0000e3d4      4c29f8         sub rax, r15
0x0000e3d7      4d85e4         test r12, r12
0x0000e3da      48894368       mov qword [rbx + 0x68], rax
0x0000e3de      7e23           jle 0xe403
0x0000e3e0      4b396ce6f8     cmp qword [r14 + r12*8 - 8], rbp
0x0000e3e5      7414           je 0xe3fb
0x0000e3e7      eb1a           jmp 0xe403
0x0000e3e9      0f1f80000000.  nop dword [rax]
0x0000e3f0      4b396ceef8     cmp qword [r14 + r13*8 - 8], rbp
0x0000e3f5      750c           jne 0xe403
0x0000e3f7      4983ed01       sub r13, 1
0x0000e3fb      4d85ed         test r13, r13
0x0000e3fe      4d89ec         mov r12, r13
0x0000e401      75ed           jne 0xe3f0
0x0000e403      4d39c4         cmp r12, r8
0x0000e406      0f8d2c020000   jge 0xe638
0x0000e40c      488b4310       mov rax, qword [rbx + 0x10]
0x0000e410      eb13           jmp 0xe425
0x0000e412      660f1f440000   nop word [rax + rax]
0x0000e418      4983c401       add r12, 1
0x0000e41c      4d39c4         cmp r12, r8
0x0000e41f      0f841b020000   je 0xe640
0x0000e425      42833ca0ff     cmp dword [rax + r12*4], 0xffffffff
0x0000e42a      74ec           je 0xe418
0x0000e42c      4b8b14e6       mov rdx, qword [r14 + r12*8]
0x0000e430      4829ea         sub rdx, rbp
0x0000e433      4883fa00       cmp rdx, 0
0x0000e437      48895330       mov qword [rbx + 0x30], rdx
0x0000e43b      7434           je 0xe471
0x0000e43d      7e20           jle 0xe45f
0x0000e43f      488b4310       mov rax, qword [rbx + 0x10]
0x0000e443      488d0c90       lea rcx, [rax + rdx*4]
0x0000e447      660f1f840000.  nop word [rax + rax]
0x0000e450      c700ffffffff   mov dword [rax], 0xffffffff             ; [0xffffffff:4]=-1 ; -1
0x0000e456      4883c004       add rax, 4
0x0000e45a      4839c1         cmp rcx, rax
0x0000e45d      75f1           jne 0xe450
0x0000e45f      488b7b08       mov rdi, qword [rbx + 8]
0x0000e463      beff000000     mov esi, 0xff
0x0000e468      e8d339ffff     call sym.imp.memset
0x0000e46d      488b5330       mov rdx, qword [rbx + 0x30]
0x0000e471      0fb6838b0000.  movzx eax, byte [rbx + 0x8b]
0x0000e478      48895338       mov qword [rbx + 0x38], rdx
0x0000e47c      84c0           test al, al
0x0000e47e      0f8476fcffff   je 0xe0fa
0x0000e484      e975fcffff     jmp 0xe0fe
0x0000e489      0f1f80000000.  nop dword [rax]
0x0000e490      488b7b08       mov rdi, qword [rbx + 8]
0x0000e494      4c89c2         mov rdx, r8
0x0000e497      488d342f       lea rsi, [rdi + rbp]
0x0000e49b      e8503bffff     call sym.imp.memmove
0x0000e4a0      0fb6838b0000.  movzx eax, byte [rbx + 0x8b]
0x0000e4a7      48296b30       sub qword [rbx + 0x30], rbp
0x0000e4ab      48296b38       sub qword [rbx + 0x38], rbp
0x0000e4af      ebcb           jmp 0xe47c
0x0000e4b1      0f1f80000000.  nop dword [rax]
0x0000e4b8      488b0b         mov rcx, qword [rbx]
0x0000e4bb      4889ef         mov rdi, rbp
0x0000e4be      4829d7         sub rdi, rdx
0x0000e4c1      4889fa         mov rdx, rdi
0x0000e4c4      4e8d2419       lea r12, [rcx + r11]
0x0000e4c8      4c01e2         add rdx, r12
0x0000e4cb      498d742cff     lea rsi, [r12 + rbp - 1]
0x0000e4d0      4839d1         cmp rcx, rdx
0x0000e4d3      480f42ca       cmovb rcx, rdx
0x0000e4d7      4839f1         cmp rcx, rsi
0x0000e4da      7619           jbe 0xe4f5
0x0000e4dc      e920fdffff     jmp 0xe201
0x0000e4e1      0f1f80000000.  nop dword [rax]
0x0000e4e8      4883ee01       sub rsi, 1
0x0000e4ec      4839f1         cmp rcx, rsi
0x0000e4ef      0f870cfdffff   ja 0xe201
0x0000e4f5      0fb616         movzx edx, byte [rsi]
0x0000e4f8      83e2c0         and edx, 0xffffffc0                     ; 4294967232
0x0000e4fb      80fa80         cmp dl, 0x80
0x0000e4fe      74e8           je 0xe4e8
0x0000e500      488b5358       mov rdx, qword [rbx + 0x58]
0x0000e504      488b4b78       mov rcx, qword [rbx + 0x78]
0x0000e508      4989f6         mov r14, rsi
0x0000e50b      4c01e2         add rdx, r12
0x0000e50e      4829f2         sub rdx, rsi
0x0000e511      4885c9         test rcx, rcx
0x0000e514      0f8548020000   jne 0xe762
0x0000e51a      4c8d6c2424     lea r13, [rsp + 0x24]
0x0000e51f      4901ec         add r12, rbp
0x0000e522      488d4c2428     lea rcx, [rsp + 0x28]
0x0000e527      4d29f4         sub r12, r14
0x0000e52a      448954240c     mov dword [rsp + 0xc], r10d
0x0000e52f      4c890424       mov qword [rsp], r8
0x0000e533      4c89ef         mov rdi, r13
0x0000e536      48c744242800.  mov qword [rsp + 0x28], 0
0x0000e53f      e86cbeffff     call sym.rpl_mbrtowc
0x0000e544      4939c4         cmp r12, rax
0x0000e547      4c8b0424       mov r8, qword [rsp]
0x0000e54b      448b54240c     mov r10d, dword [rsp + 0xc]
0x0000e550      770a           ja 0xe55c
0x0000e552      4883f8fd       cmp rax, 0xfffffffffffffffd
0x0000e556      0f86c5010000   jbe 0xe721
0x0000e55c      4c8b5b28       mov r11, qword [rbx + 0x28]
0x0000e560      488b4338       mov rax, qword [rbx + 0x38]
0x0000e564      e998fcffff     jmp 0xe201
0x0000e569      0f1f80000000.  nop dword [rax]
0x0000e570      80bb88000000.  cmp byte [rbx + 0x88], 0
0x0000e577      0f85f3000000   jne 0xe670
0x0000e57d      488b4b78       mov rcx, qword [rbx + 0x78]
0x0000e581      4885c9         test rcx, rcx
0x0000e584      0f84a9fbffff   je 0xe133
0x0000e58a      48394340       cmp qword [rbx + 0x40], rax
0x0000e58e      488b5330       mov rdx, qword [rbx + 0x30]
0x0000e592      480f4e4340     cmovle rax, qword [rbx + 0x40]
0x0000e597      4839d0         cmp rax, rdx
0x0000e59a      7f0c           jg 0xe5a8
0x0000e59c      eb2a           jmp 0xe5c8
0x0000e59e      6690           nop
0x0000e5a0      4c8b7b28       mov r15, qword [rbx + 0x28]
0x0000e5a4      488b4b78       mov rcx, qword [rbx + 0x78]
0x0000e5a8      488b33         mov rsi, qword [rbx]
0x0000e5ab      4801d6         add rsi, rdx
0x0000e5ae      420fb6343e     movzx esi, byte [rsi + r15]
0x0000e5b3      0fb63431       movzx esi, byte [rcx + rsi]
0x0000e5b7      488b4b08       mov rcx, qword [rbx + 8]
0x0000e5bb      40883411       mov byte [rcx + rdx], sil
0x0000e5bf      4883c201       add rdx, 1
0x0000e5c3      4839d0         cmp rax, rdx
0x0000e5c6      75d8           jne 0xe5a0
0x0000e5c8      48895330       mov qword [rbx + 0x30], rdx
0x0000e5cc      48895338       mov qword [rbx + 0x38], rdx
0x0000e5d0      e95efbffff     jmp 0xe133
0x0000e5d5      0f1f00         nop dword [rax]
0x0000e5d8      488b03         mov rax, qword [rbx]
0x0000e5db      488b5378       mov rdx, qword [rbx + 0x78]
0x0000e5df      4801e8         add rax, rbp
0x0000e5e2      4885d2         test rdx, rdx
0x0000e5e5      410fb64403ff   movzx eax, byte [r11 + rax - 1]
0x0000e5eb      48c743380000.  mov qword [rbx + 0x38], 0
0x0000e5f3      7404           je 0xe5f9
0x0000e5f5      0fb60402       movzx eax, byte [rdx + rax]
0x0000e5f9      488b8b800000.  mov rcx, qword [rbx + 0x80]
0x0000e600      0fb6d0         movzx edx, al
0x0000e603      48c1fa06       sar rdx, 6
0x0000e607      488b0cd1       mov rcx, qword [rcx + rdx*8]
0x0000e60b      ba01000000     mov edx, 1
0x0000e610      480fa3c1       bt rcx, rax
0x0000e614      721a           jb 0xe630
0x0000e616      31d2           xor edx, edx
0x0000e618      3c0a           cmp al, 0xa
0x0000e61a      7514           jne 0xe630
0x0000e61c      31d2           xor edx, edx
0x0000e61e      80bb8d000000.  cmp byte [rbx + 0x8d], 0
0x0000e625      0f95c2         setne dl
0x0000e628      01d2           add edx, edx
0x0000e62a      660f1f440000   nop word [rax + rax]
0x0000e630      895370         mov dword [rbx + 0x70], edx
0x0000e633      e970fdffff     jmp 0xe3a8
0x0000e638      0f85eefdffff   jne 0xe42c
0x0000e63e      6690           nop
0x0000e640      48c743300000.  mov qword [rbx + 0x30], 0
0x0000e648      31d2           xor edx, edx
0x0000e64a      e922feffff     jmp 0xe471
0x0000e64f      4d29fe         sub r14, r15
0x0000e652      4d89f4         mov r12, r14
0x0000e655      4c897330       mov qword [rbx + 0x30], r14
0x0000e659      498d70ff       lea rsi, [r8 - 1]
0x0000e65d      4489d2         mov edx, r10d
0x0000e660      4889df         mov rdi, rbx
0x0000e663      e8c8f6ffff     call sym.re_string_context_at
0x0000e668      894370         mov dword [rbx + 0x70], eax
0x0000e66b      e93afcffff     jmp 0xe2aa
0x0000e670      4889df         mov rdi, rbx
0x0000e673      e8b8c5ffff     call sym.build_upper_buffer
0x0000e678      e9b6faffff     jmp 0xe133
0x0000e67d      488b5350       mov rdx, qword [rbx + 0x50]
0x0000e681      c6838c000000.  mov byte [rbx + 0x8c], 0
0x0000e688      4801ea         add rdx, rbp
0x0000e68b      4c29fa         sub rdx, r15
0x0000e68e      48895358       mov qword [rbx + 0x58], rdx
0x0000e692      488b5360       mov rdx, qword [rbx + 0x60]
0x0000e696      4801ea         add rdx, rbp
0x0000e699      4c29fa         sub rdx, r15
0x0000e69c      48895368       mov qword [rbx + 0x68], rdx
0x0000e6a0      e933fbffff     jmp 0xe1d8
0x0000e6a5      4885c0         test rax, rax
0x0000e6a8      7473           je 0xe71d
0x0000e6aa      4d85e4         test r12, r12
0x0000e6ad      746e           je 0xe71d
0x0000e6af      488b03         mov rax, qword [rbx]
0x0000e6b2      420fb61430     movzx edx, byte [rax + r14]
0x0000e6b7      488b442418     mov rax, qword [rsp + 0x18]
0x0000e6bc      48894320       mov qword [rbx + 0x20], rax
0x0000e6c0      b801000000     mov eax, 1
0x0000e6c5      e9a0fbffff     jmp 0xe26a
0x0000e6ca      7e1b           jle 0xe6e7
0x0000e6cc      488b4310       mov rax, qword [rbx + 0x10]
0x0000e6d0      4a8d14a0       lea rdx, [rax + r12*4]
0x0000e6d4      0f1f4000       nop dword [rax]
0x0000e6d8      c700ffffffff   mov dword [rax], 0xffffffff             ; [0xffffffff:4]=-1 ; -1
0x0000e6de      4883c004       add rax, 4
0x0000e6e2      4839c2         cmp rdx, rax
0x0000e6e5      75f1           jne 0xe6d8
0x0000e6e7      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x0000e6ee      7558           jne 0xe748
0x0000e6f0      4c896338       mov qword [rbx + 0x38], r12
0x0000e6f4      e901faffff     jmp 0xe0fa
0x0000e6f9      89d7           mov edi, edx
0x0000e6fb      891424         mov dword [rsp], edx
0x0000e6fe      e80d38ffff     call sym.imp.iswalnum
0x0000e703      85c0           test eax, eax
0x0000e705      750c           jne 0xe713
0x0000e707      8b1424         mov edx, dword [rsp]
0x0000e70a      83fa5f         cmp edx, 0x5f
0x0000e70d      0f857ffbffff   jne 0xe292
0x0000e713      b801000000     mov eax, 1
0x0000e718      e98afbffff     jmp 0xe2a7
0x0000e71d      31d2           xor edx, edx
0x0000e71f      eb96           jmp 0xe6b7
0x0000e721      8b542424       mov edx, dword [rsp + 0x24]
0x0000e725      4c29e0         sub rax, r12
0x0000e728      48c743200000.  mov qword [rbx + 0x20], 0
0x0000e730      4989c4         mov r12, rax
0x0000e733      48894330       mov qword [rbx + 0x30], rax
0x0000e737      83faff         cmp edx, 0xffffffff
0x0000e73a      0f8545fbffff   jne 0xe285
0x0000e740      e917feffff     jmp 0xe55c
0x0000e745      0f1f00         nop dword [rax]
0x0000e748      488b7b08       mov rdi, qword [rbx + 8]
0x0000e74c      4c89e2         mov rdx, r12
0x0000e74f      beff000000     mov esi, 0xff
0x0000e754      e8e736ffff     call sym.imp.memset
0x0000e759      4c8b6330       mov r12, qword [rbx + 0x30]
0x0000e75d      e952fbffff     jmp 0xe2b4
0x0000e762      4883fa06       cmp rdx, 6
0x0000e766      bf06000000     mov edi, 6
0x0000e76b      4c8d5c2432     lea r11, [rsp + 0x32]
0x0000e770      480f4efa       cmovle rdi, rdx
0x0000e774      83ef01         sub edi, 1
0x0000e777      85ff           test edi, edi
0x0000e779      4863c7         movsxd rax, edi
0x0000e77c      7814           js 0xe792
0x0000e77e      0fb63c06       movzx edi, byte [rsi + rax]
0x0000e782      0fb63c39       movzx edi, byte [rcx + rdi]
0x0000e786      41883c03       mov byte [r11 + rax], dil
0x0000e78a      4883e801       sub rax, 1
0x0000e78e      85c0           test eax, eax
0x0000e790      79ec           jns 0xe77e
0x0000e792      4c89de         mov rsi, r11
0x0000e795      e980fdffff     jmp 0xe51a
0x0000e79a      e81136ffff     call sym.imp.__stack_chk_fail
0x0000e79f      90             nop
;-- sub_epsilon_src_nodes:
0x0000e7a0      4157           push r15
0x0000e7a2      4156           push r14
0x0000e7a4      4989d6         mov r14, rdx
0x0000e7a7      4155           push r13
0x0000e7a9      4154           push r12
0x0000e7ab      488d1476       lea rdx, [rsi + rsi*2]
0x0000e7af      55             push rbp
0x0000e7b0      53             push rbx
0x0000e7b1      660fefc0       pxor xmm0, xmm0
0x0000e7b5      4883ec48       sub rsp, 0x48
0x0000e7b9      64488b042528.  mov rax, qword fs:[0x28]
0x0000e7c2      4889442438     mov qword [rsp + 0x38], rax
0x0000e7c7      31c0           xor eax, eax
0x0000e7c9      488b4738       mov rax, qword [rdi + 0x38]
0x0000e7cd      48c744243000.  mov qword [rsp + 0x30], 0
0x0000e7d6      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000e7db      48894c2410     mov qword [rsp + 0x10], rcx
0x0000e7e0      488d2cd0       lea rbp, [rax + rdx*8]
0x0000e7e4      4c8b5508       mov r10, qword [rbp + 8]
0x0000e7e8      4d85d2         test r10, r10
0x0000e7eb      0f8ee1010000   jle 0xe9d2
0x0000e7f1      488d442420     lea rax, [rsp + 0x20]
0x0000e7f6      4989fc         mov r12, rdi
0x0000e7f9      4989f5         mov r13, rsi
0x0000e7fc      31db           xor ebx, ebx
0x0000e7fe      4889442418     mov qword [rsp + 0x18], rax
0x0000e803      eb58           jmp 0xe85d
0x0000e805      0f1f00         nop dword [rax]
0x0000e808      4885c0         test rax, rax
0x0000e80b      0f85d7000000   jne 0xe8e8
0x0000e811      498b7e08       mov rdi, qword [r14 + 8]
0x0000e815      498d7610       lea rsi, [r14 + 0x10]
0x0000e819      4c89c2         mov rdx, r8
0x0000e81c      e82fd7ffff     call sym.re_node_set_contains.isra.3
0x0000e821      4885c0         test rax, rax
0x0000e824      0f84be000000   je 0xe8e8
0x0000e82a      498b542438     mov rdx, qword [r12 + 0x38]
0x0000e82f      488b742410     mov rsi, qword [rsp + 0x10]
0x0000e834      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000e839      4c01ca         add rdx, r9
0x0000e83c      e81fe2ffff     call sym.re_node_set_add_intersect
0x0000e841      85c0           test eax, eax
0x0000e843      0f8577010000   jne 0xe9c0
0x0000e849      4c8b5508       mov r10, qword [rbp + 8]
0x0000e84d      0f1f00         nop dword [rax]
0x0000e850      4883c301       add rbx, 1
0x0000e854      4939da         cmp r10, rbx
0x0000e857      0f8ed3000000   jle 0xe930
0x0000e85d      488b4510       mov rax, qword [rbp + 0x10]
0x0000e861      488b04d8       mov rax, qword [rax + rbx*8]
0x0000e865      4939c5         cmp r13, rax
0x0000e868      74e6           je 0xe850
0x0000e86a      4889c2         mov rdx, rax
0x0000e86d      48c1e204       shl rdx, 4
0x0000e871      49031424       add rdx, qword [r12]
0x0000e875      f6420808       test byte [rdx + 8], 8
0x0000e879      74d5           je 0xe850
0x0000e87b      4c8d0c40       lea r9, [rax + rax*2]
0x0000e87f      498b4c2428     mov rcx, qword [r12 + 0x28]
0x0000e884      4c8d5d10       lea r11, [rbp + 0x10]
0x0000e888      4c89d7         mov rdi, r10
0x0000e88b      49c1e103       shl r9, 3
0x0000e88f      4c89de         mov rsi, r11
0x0000e892      4c01c9         add rcx, r9
0x0000e895      4c8b7910       mov r15, qword [rcx + 0x10]
0x0000e899      48894c2408     mov qword [rsp + 8], rcx
0x0000e89e      4d8b07         mov r8, qword [r15]
0x0000e8a1      4c89c2         mov rdx, r8
0x0000e8a4      4c890424       mov qword [rsp], r8
0x0000e8a8      e8a3d6ffff     call sym.re_node_set_contains.isra.3
0x0000e8ad      488b4c2408     mov rcx, qword [rsp + 8]
0x0000e8b2      4c8b0424       mov r8, qword [rsp]
0x0000e8b6      4883790801     cmp qword [rcx + 8], 1
0x0000e8bb      0f8f47ffffff   jg 0xe808
0x0000e8c1      4885c0         test rax, rax
0x0000e8c4      758a           jne 0xe850
0x0000e8c6      498b7e08       mov rdi, qword [r14 + 8]
0x0000e8ca      498d7610       lea rsi, [r14 + 0x10]
0x0000e8ce      4c89c2         mov rdx, r8
0x0000e8d1      e87ad6ffff     call sym.re_node_set_contains.isra.3
0x0000e8d6      4885c0         test rax, rax
0x0000e8d9      0f854bffffff   jne 0xe82a
0x0000e8df      e96cffffff     jmp 0xe850
0x0000e8e4      0f1f4000       nop dword [rax]
0x0000e8e8      4d8b7f08       mov r15, qword [r15 + 8]
0x0000e8ec      4d85ff         test r15, r15
0x0000e8ef      0f8e5bffffff   jle 0xe850
0x0000e8f5      4c89fa         mov rdx, r15
0x0000e8f8      4c89de         mov rsi, r11
0x0000e8fb      4c89d7         mov rdi, r10
0x0000e8fe      e84dd6ffff     call sym.re_node_set_contains.isra.3
0x0000e903      4885c0         test rax, rax
0x0000e906      0f8544ffffff   jne 0xe850
0x0000e90c      498b7e08       mov rdi, qword [r14 + 8]
0x0000e910      498d7610       lea rsi, [r14 + 0x10]
0x0000e914      e837d6ffff     call sym.re_node_set_contains.isra.3
0x0000e919      4885c0         test rax, rax
0x0000e91c      0f842effffff   je 0xe850
0x0000e922      e903ffffff     jmp 0xe82a
0x0000e927      660f1f840000.  nop word [rax + rax]
0x0000e930      4531c9         xor r9d, r9d
0x0000e933      4d85d2         test r10, r10
0x0000e936      4c8d5c2430     lea r11, [rsp + 0x30]
0x0000e93b      7e4f           jle 0xe98c
0x0000e93d      0f1f00         nop dword [rax]
0x0000e940      488b4510       mov rax, qword [rbp + 0x10]
0x0000e944      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000e949      4c89de         mov rsi, r11
0x0000e94c      4e8b14c8       mov r10, qword [rax + r9*8]
0x0000e950      4c89d2         mov rdx, r10
0x0000e953      e8f8d5ffff     call sym.re_node_set_contains.isra.3
0x0000e958      4885c0         test rax, rax
0x0000e95b      7525           jne 0xe982
0x0000e95d      498d5e10       lea rbx, [r14 + 0x10]
0x0000e961      498b7e08       mov rdi, qword [r14 + 8]
0x0000e965      4889de         mov rsi, rbx
0x0000e968      e8e3d5ffff     call sym.re_node_set_contains.isra.3
0x0000e96d      4883e801       sub rax, 1
0x0000e971      4889c2         mov rdx, rax
0x0000e974      780c           js 0xe982
0x0000e976      498d7e08       lea rdi, [r14 + 8]
0x0000e97a      4889de         mov rsi, rbx
0x0000e97d      e84ed7ffff     call sym.re_node_set_remove_at.isra.4.part.5
0x0000e982      4983c101       add r9, 1
0x0000e986      4c394d08       cmp qword [rbp + 8], r9
0x0000e98a      7fb4           jg 0xe940
0x0000e98c      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000e991      e8ca32ffff     call sym.imp.free
0x0000e996      31c0           xor eax, eax
0x0000e998      488b742438     mov rsi, qword [rsp + 0x38]
0x0000e99d      644833342528.  xor rsi, qword fs:[0x28]
0x0000e9a6      752e           jne 0xe9d6
0x0000e9a8      4883c448       add rsp, 0x48
0x0000e9ac      5b             pop rbx
0x0000e9ad      5d             pop rbp
0x0000e9ae      415c           pop r12
0x0000e9b0      415d           pop r13
0x0000e9b2      415e           pop r14
0x0000e9b4      415f           pop r15
0x0000e9b6      c3             ret
0x0000e9b7      660f1f840000.  nop word [rax + rax]
0x0000e9c0      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000e9c5      890424         mov dword [rsp], eax
0x0000e9c8      e89332ffff     call sym.imp.free
0x0000e9cd      8b0424         mov eax, dword [rsp]
0x0000e9d0      ebc6           jmp 0xe998
0x0000e9d2      31ff           xor edi, edi
0x0000e9d4      ebbb           jmp 0xe991
0x0000e9d6      e8d533ffff     call sym.imp.__stack_chk_fail
0x0000e9db      0f1f440000     nop dword [rax + rax]
;-- build_trtable:
0x0000e9e0      4157           push r15
0x0000e9e2      4156           push r14
0x0000e9e4      4989ff         mov r15, rdi
0x0000e9e7      4155           push r13
0x0000e9e9      4154           push r12
0x0000e9eb      bf00380000     mov edi, 0x3800
0x0000e9f0      55             push rbp
0x0000e9f1      53             push rbx
0x0000e9f2      4881ec080100.  sub rsp, 0x108
0x0000e9f9      64488b042528.  mov rax, qword fs:[0x28]
0x0000ea02      48898424f800.  mov qword [rsp + 0xf8], rax
0x0000ea0a      31c0           xor eax, eax
0x0000ea0c      4889742408     mov qword [rsp + 8], rsi
0x0000ea11      e80a35ffff     call sym.imp.malloc
0x0000ea16      4885c0         test rax, rax
0x0000ea19      4889442418     mov qword [rsp + 0x18], rax
0x0000ea1e      0f84cc030000   je 0xedf0
0x0000ea24      488b442418     mov rax, qword [rsp + 0x18]
0x0000ea29      660fefc0       pxor xmm0, xmm0
0x0000ea2d      488d98001800.  lea rbx, [rax + 0x1800]
0x0000ea34      488b442408     mov rax, qword [rsp + 8]
0x0000ea39      0f2984249000.  movaps xmmword [rsp + 0x90], xmm0
0x0000ea41      48895c2440     mov qword [rsp + 0x40], rbx
0x0000ea46      0f298424a000.  movaps xmmword [rsp + 0xa0], xmm0
0x0000ea4e      4883781000     cmp qword [rax + 0x10], 0
0x0000ea53      48c740580000.  mov qword [rax + 0x58], 0
0x0000ea5b      48c740600000.  mov qword [rax + 0x60], 0
0x0000ea63      0f8e710a0000   jle 0xf4da
0x0000ea69      4c897c2430     mov qword [rsp + 0x30], r15
0x0000ea6e      31ed           xor ebp, ebp
0x0000ea70      48c744241000.  mov qword [rsp + 0x10], 0
0x0000ea79      4989df         mov r15, rbx
0x0000ea7c      488b5c2410     mov rbx, qword [rsp + 0x10]
0x0000ea81      488d04dd0000.  lea rax, [rbx*8]
0x0000ea89      4889442420     mov qword [rsp + 0x20], rax
0x0000ea8e      488b442408     mov rax, qword [rsp + 8]
0x0000ea93      488b4018       mov rax, qword [rax + 0x18]
0x0000ea97      4c8b2cd8       mov r13, qword [rax + rbx*8]
0x0000ea9b      488b442430     mov rax, qword [rsp + 0x30]
0x0000eaa0      49c1e504       shl r13, 4
0x0000eaa4      4c0328         add r13, qword [rax]
0x0000eaa7      450fb67508     movzx r14d, byte [r13 + 8]
0x0000eaac      418b4508       mov eax, dword [r13 + 8]
0x0000eab0      c1e808         shr eax, 8
0x0000eab3      6625ff03       and ax, 0x3ff
0x0000eab7      4183fe01       cmp r14d, 1
0x0000eabb      0f845f030000   je 0xee20
0x0000eac1      4183fe03       cmp r14d, 3
0x0000eac5      0f84c5070000   je 0xf290
0x0000eacb      4183fe05       cmp r14d, 5
0x0000eacf      0f847b060000   je 0xf150
0x0000ead5      4183fe07       cmp r14d, 7
0x0000ead9      0f84da070000   je 0xf2b9
0x0000eadf      488b5c2408     mov rbx, qword [rsp + 8]
0x0000eae4      488344241001   add qword [rsp + 0x10], 1
0x0000eaea      488b442410     mov rax, qword [rsp + 0x10]
0x0000eaef      483b4310       cmp rax, qword [rbx + 0x10]
0x0000eaf3      7c87           jl 0xea7c
0x0000eaf5      4885ed         test rbp, rbp
0x0000eaf8      4c8b7c2430     mov r15, qword [rsp + 0x30]
0x0000eafd      0f8e560a0000   jle 0xf559
0x0000eb03      488d5d01       lea rbx, [rbp + 1]
0x0000eb07      48c744247800.  mov qword [rsp + 0x78], 0
0x0000eb10      48895c2470     mov qword [rsp + 0x70], rbx
0x0000eb15      48c1e303       shl rbx, 3
0x0000eb19      4889df         mov rdi, rbx
0x0000eb1c      e8ff33ffff     call sym.imp.malloc
0x0000eb21      4885c0         test rax, rax
0x0000eb24      4989c4         mov r12, rax
0x0000eb27      488984248000.  mov qword [rsp + 0x80], rax
0x0000eb2f      0f84fa070000   je 0xf32f
0x0000eb35      48b855a8aaaa.  movabs rax, 0xaaaaaaaaaaaa855
0x0000eb3f      c744246c0000.  mov dword [rsp + 0x6c], 0
0x0000eb47      4839c5         cmp rbp, rax
0x0000eb4a      0f8fdf070000   jg 0xf32f
0x0000eb50      488d446d00     lea rax, [rbp + rbp*2]
0x0000eb55      48c1e003       shl rax, 3
0x0000eb59      4889c7         mov rdi, rax
0x0000eb5c      4889442458     mov qword [rsp + 0x58], rax
0x0000eb61      e8ba33ffff     call sym.imp.malloc
0x0000eb66      4885c0         test rax, rax
0x0000eb69      4889442410     mov qword [rsp + 0x10], rax
0x0000eb6e      0f84bb070000   je 0xf32f
0x0000eb74      488b442410     mov rax, qword [rsp + 0x10]
0x0000eb79      4883eb08       sub rbx, 8
0x0000eb7d      4c8b642440     mov r12, qword [rsp + 0x40]
0x0000eb82      660fefc0       pxor xmm0, xmm0
0x0000eb86      4c8d742470     lea r14, [rsp + 0x70]
0x0000eb8b      48896c2420     mov qword [rsp + 0x20], rbp
0x0000eb90      c644244f00     mov byte [rsp + 0x4f], 0
0x0000eb95      4c89fd         mov rbp, r15
0x0000eb98      4801d8         add rax, rbx
0x0000eb9b      4c89642450     mov qword [rsp + 0x50], r12
0x0000eba0      4801c3         add rbx, rax
0x0000eba3      4889442430     mov qword [rsp + 0x30], rax
0x0000eba8      488b442418     mov rax, qword [rsp + 0x18]
0x0000ebad      0f298424d000.  movaps xmmword [rsp + 0xd0], xmm0
0x0000ebb5      48895c2438     mov qword [rsp + 0x38], rbx
0x0000ebba      31db           xor ebx, ebx
0x0000ebbc      4c8d6808       lea r13, [rax + 8]
0x0000ebc0      488d44246c     lea rax, [rsp + 0x6c]
0x0000ebc5      0f298424e000.  movaps xmmword [rsp + 0xe0], xmm0
0x0000ebcd      4889442428     mov qword [rsp + 0x28], rax
0x0000ebd2      48c744247800.  mov qword [rsp + 0x78], 0
0x0000ebdb      49837d0000     cmp qword [r13], 0
0x0000ebe0      7e46           jle 0xec28
0x0000ebe2      4531ff         xor r15d, r15d
0x0000ebe5      0f1f00         nop dword [rax]
0x0000ebe8      498b4508       mov rax, qword [r13 + 8]
0x0000ebec      4a8b14f8       mov rdx, qword [rax + r15*8]
0x0000ebf0      488b4518       mov rax, qword [rbp + 0x18]
0x0000ebf4      488b04d0       mov rax, qword [rax + rdx*8]
0x0000ebf8      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000ebfc      7420           je 0xec1e
0x0000ebfe      488d1440       lea rdx, [rax + rax*2]
0x0000ec02      488b4530       mov rax, qword [rbp + 0x30]
0x0000ec06      4c89f7         mov rdi, r14
0x0000ec09      488d34d0       lea rsi, [rax + rdx*8]
0x0000ec0d      e85ed8ffff     call sym.re_node_set_merge
0x0000ec12      85c0           test eax, eax
0x0000ec14      8944246c       mov dword [rsp + 0x6c], eax
0x0000ec18      0f85fa060000   jne 0xf318
0x0000ec1e      4983c701       add r15, 1
0x0000ec22      4d397d00       cmp qword [r13], r15
0x0000ec26      7fc0           jg 0xebe8
0x0000ec28      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000ec2d      31c9           xor ecx, ecx
0x0000ec2f      4889ee         mov rsi, rbp
0x0000ec32      4c89f2         mov rdx, r14
0x0000ec35      e866e6ffff     call sym.re_acquire_state_context
0x0000ec3a      488b742410     mov rsi, qword [rsp + 0x10]
0x0000ec3f      4885c0         test rax, rax
0x0000ec42      488904de       mov qword [rsi + rbx*8], rax
0x0000ec46      0f84ac070000   je 0xf3f8
0x0000ec4c      80786800       cmp byte [rax + 0x68], 0
0x0000ec50      0f881a070000   js 0xf370
0x0000ec56      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000ec5b      488b742438     mov rsi, qword [rsp + 0x38]
0x0000ec60      488904df       mov qword [rdi + rbx*8], rax
0x0000ec64      488b442410     mov rax, qword [rsp + 0x10]
0x0000ec69      488b04d8       mov rax, qword [rax + rbx*8]
0x0000ec6d      488904de       mov qword [rsi + rbx*8], rax
0x0000ec71      488d9424d000.  lea rdx, [rsp + 0xd0]
0x0000ec79      31c0           xor eax, eax
0x0000ec7b      488b0c02       mov rcx, qword [rdx + rax]
0x0000ec7f      490b0c04       or rcx, qword [r12 + rax]
0x0000ec83      48890c02       mov qword [rdx + rax], rcx
0x0000ec87      4883c008       add rax, 8
0x0000ec8b      4883f820       cmp rax, 0x20                           ; "@"
0x0000ec8f      75ea           jne 0xec7b
0x0000ec91      4883c301       add rbx, 1
0x0000ec95      4983c518       add r13, 0x18
0x0000ec99      4983c420       add r12, 0x20                           ; "@"
0x0000ec9d      483b5c2420     cmp rbx, qword [rsp + 0x20]
0x0000eca2      0f852affffff   jne 0xebd2
0x0000eca8      807c244f00     cmp byte [rsp + 0x4f], 0
0x0000ecad      4989ef         mov r15, rbp
0x0000ecb0      488b6c2420     mov rbp, qword [rsp + 0x20]
0x0000ecb5      4889542420     mov qword [rsp + 0x20], rdx
0x0000ecba      0f8549070000   jne 0xf409
0x0000ecc0      be00010000     mov esi, 0x100
0x0000ecc5      bf08000000     mov edi, 8
0x0000ecca      e8f131ffff     call sym.imp.calloc
0x0000eccf      4989c3         mov r11, rax
0x0000ecd2      488b442408     mov rax, qword [rsp + 8]
0x0000ecd7      4d85db         test r11, r11
0x0000ecda      4c895858       mov qword [rax + 0x58], r11
0x0000ecde      0f8439060000   je 0xf31d
0x0000ece4      488b5c2440     mov rbx, qword [rsp + 0x40]
0x0000ece9      4c8b642410     mov r12, qword [rsp + 0x10]
0x0000ecee      4531c9         xor r9d, r9d
0x0000ecf1      4c8b6c2430     mov r13, qword [rsp + 0x30]
0x0000ecf6      488b542420     mov rdx, qword [rsp + 0x20]
0x0000ecfb      4883c320       add rbx, 0x20                           ; "@"
0x0000ecff      4a8b040a       mov rax, qword [rdx + r9]
0x0000ed03      4885c0         test rax, rax
0x0000ed06      742c           je 0xed34
0x0000ed08      4c89ce         mov rsi, r9
0x0000ed0b      b901000000     mov ecx, 1
0x0000ed10      48c1e606       shl rsi, 6
0x0000ed14      4c01de         add rsi, r11
0x0000ed17      660f1f840000.  nop word [rax + rax]
0x0000ed20      a801           test al, 1
0x0000ed22      0f8560070000   jne 0xf488
0x0000ed28      4801c9         add rcx, rcx
0x0000ed2b      4883c608       add rsi, 8
0x0000ed2f      48d1e8         shr rax, 1
0x0000ed32      75ec           jne 0xed20
0x0000ed34      4983c108       add r9, 8
0x0000ed38      4983f920       cmp r9, 0x20                            ; "@"
0x0000ed3c      75c1           jne 0xecff
0x0000ed3e      f68424d10000.  test byte [rsp + 0xd1], 4
0x0000ed46      743a           je 0xed82
0x0000ed48      31c0           xor eax, eax
0x0000ed4a      488b542450     mov rdx, qword [rsp + 0x50]
0x0000ed4f      eb0d           jmp 0xed5e
0x0000ed51      4883c001       add rax, 1
0x0000ed55      4883c220       add rdx, 0x20                           ; "@"
0x0000ed59      4839e8         cmp rax, rbp
0x0000ed5c      7424           je 0xed82
0x0000ed5e      48f702000400.  test qword [rdx], 0x400
0x0000ed65      74ea           je 0xed51
0x0000ed67      488b5c2438     mov rbx, qword [rsp + 0x38]
0x0000ed6c      807c244f00     cmp byte [rsp + 0x4f], 0
0x0000ed71      488b04c3       mov rax, qword [rbx + rax*8]
0x0000ed75      49894350       mov qword [r11 + 0x50], rax
0x0000ed79      7407           je 0xed82
0x0000ed7b      498983500800.  mov qword [r11 + 0x850], rax
0x0000ed82      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000ed87      e8d42effff     call sym.imp.free
0x0000ed8c      488bbc248000.  mov rdi, qword [rsp + 0x80]
0x0000ed94      e8c72effff     call sym.imp.free
0x0000ed99      488b442418     mov rax, qword [rsp + 0x18]
0x0000ed9e      488b5c2458     mov rbx, qword [rsp + 0x58]
0x0000eda3      488d6810       lea rbp, [rax + 0x10]
0x0000eda7      4801eb         add rbx, rbp
0x0000edaa      488b7d00       mov rdi, qword [rbp]
0x0000edae      4883c518       add rbp, 0x18
0x0000edb2      e8a92effff     call sym.imp.free
0x0000edb7      4839eb         cmp rbx, rbp
0x0000edba      75ee           jne 0xedaa
0x0000edbc      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000edc1      e89a2effff     call sym.imp.free
0x0000edc6      b801000000     mov eax, 1
0x0000edcb      eb25           jmp 0xedf2
0x0000edcd      4885ed         test rbp, rbp
0x0000edd0      48c743080000.  mov qword [rbx + 8], 0
0x0000edd8      48c703000000.  mov qword [rbx], 0
0x0000eddf      0f852b030000   jne 0xf110
0x0000ede5      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000edea      e8712effff     call sym.imp.free
0x0000edef      90             nop
0x0000edf0      31c0           xor eax, eax
0x0000edf2      488b9c24f800.  mov rbx, qword [rsp + 0xf8]
0x0000edfa      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000ee03      0f854b070000   jne 0xf554
0x0000ee09      4881c4080100.  add rsp, 0x108
0x0000ee10      5b             pop rbx
0x0000ee11      5d             pop rbp
0x0000ee12      415c           pop r12
0x0000ee14      415d           pop r13
0x0000ee16      415e           pop r14
0x0000ee18      415f           pop r15
0x0000ee1a      c3             ret
0x0000ee1b      0f1f440000     nop dword [rax + rax]
0x0000ee20      410fb64d00     movzx ecx, byte [r13]
0x0000ee25      4c8da4249000.  lea r12, [rsp + 0x90]
0x0000ee2d      bf01000000     mov edi, 1
0x0000ee32      4889ca         mov rdx, rcx
0x0000ee35      83e13f         and ecx, 0x3f
0x0000ee38      48c1ea03       shr rdx, 3
0x0000ee3c      48d3e7         shl rdi, cl
0x0000ee3f      83e218         and edx, 0x18
0x0000ee42      49093c14       or qword [r12 + rdx], rdi
0x0000ee46      6685c0         test ax, ax
0x0000ee49      0f84c1000000   je 0xef10
0x0000ee4f      a820           test al, 0x20                           ; "@"
0x0000ee51      0f8569030000   jne 0xf1c0
0x0000ee57      a880           test al, 0x80
0x0000ee59      0f8595020000   jne 0xf0f4
0x0000ee5f      a804           test al, 4
0x0000ee61      7452           je 0xeeb5
0x0000ee63      4183fe01       cmp r14d, 1
0x0000ee67      0f84d8030000   je 0xf245
0x0000ee6d      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000ee72      4183b8b40000.  cmp dword [r8 + 0xb4], 1
0x0000ee7a      0f8e52040000   jle 0xf2d2
0x0000ee80      498b7878       mov rdi, qword [r8 + 0x78]
0x0000ee84      31f6           xor esi, esi
0x0000ee86      31c9           xor ecx, ecx
0x0000ee88      488b14cf       mov rdx, qword [rdi + rcx*8]
0x0000ee8c      48f7d2         not rdx
0x0000ee8f      490b94c8b800.  or rdx, qword [r8 + rcx*8 + 0xb8]
0x0000ee97      492314cc       and rdx, qword [r12 + rcx*8]
0x0000ee9b      498914cc       mov qword [r12 + rcx*8], rdx
0x0000ee9f      4883c101       add rcx, 1
0x0000eea3      4809d6         or rsi, rdx
0x0000eea6      4883f904       cmp rcx, 4
0x0000eeaa      75dc           jne 0xee88
0x0000eeac      4885f6         test rsi, rsi
0x0000eeaf      0f842afcffff   je 0xeadf
0x0000eeb5      a808           test al, 8
0x0000eeb7      7457           je 0xef10
0x0000eeb9      4183fe01       cmp r14d, 1
0x0000eebd      0f842e030000   je 0xf1f1
0x0000eec3      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000eec8      83bfb4000000.  cmp dword [rdi + 0xb4], 1
0x0000eecf      0f8e39030000   jle 0xf20e
0x0000eed5      488b7778       mov rsi, qword [rdi + 0x78]
0x0000eed9      31c9           xor ecx, ecx
0x0000eedb      31d2           xor edx, edx
0x0000eedd      488b84d7b800.  mov rax, qword [rdi + rdx*8 + 0xb8]
0x0000eee5      482304d6       and rax, qword [rsi + rdx*8]
0x0000eee9      48f7d0         not rax
0x0000eeec      492304d4       and rax, qword [r12 + rdx*8]
0x0000eef0      498904d4       mov qword [r12 + rdx*8], rax
0x0000eef4      4883c201       add rdx, 1
0x0000eef8      4809c1         or rcx, rax
0x0000eefb      4883fa04       cmp rdx, 4
0x0000eeff      75dc           jne 0xeedd
0x0000ef01      4885c9         test rcx, rcx
0x0000ef04      0f84d5fbffff   je 0xeadf
0x0000ef0a      660f1f440000   nop word [rax + rax]
0x0000ef10      31db           xor ebx, ebx
0x0000ef12      4885ed         test rbp, rbp
0x0000ef15      0f8e60010000   jle 0xf07b
0x0000ef1b      4c896c2428     mov qword [rsp + 0x28], r13
0x0000ef20      4d89fd         mov r13, r15
0x0000ef23      0f1f440000     nop dword [rax + rax]
0x0000ef28      4989da         mov r10, rbx
0x0000ef2b      49c1e205       shl r10, 5
0x0000ef2f      4183fe01       cmp r14d, 1
0x0000ef33      7523           jne 0xef58
0x0000ef35      488b442428     mov rax, qword [rsp + 0x28]
0x0000ef3a      0fb610         movzx edx, byte [rax]
0x0000ef3d      4889d0         mov rax, rdx
0x0000ef40      48c1e803       shr rax, 3
0x0000ef44      83e018         and eax, 0x18
0x0000ef47      4c01e8         add rax, r13
0x0000ef4a      4a8b0410       mov rax, qword [rax + r10]
0x0000ef4e      480fa3d0       bt rax, rdx
0x0000ef52      0f8313010000   jae 0xf06b
0x0000ef58      4b8d7c1500     lea rdi, [r13 + r10]
0x0000ef5d      488db424b000.  lea rsi, [rsp + 0xb0]
0x0000ef65      31c9           xor ecx, ecx
0x0000ef67      31c0           xor eax, eax
0x0000ef69      498b14c4       mov rdx, qword [r12 + rax*8]
0x0000ef6d      482314c7       and rdx, qword [rdi + rax*8]
0x0000ef71      488914c6       mov qword [rsi + rax*8], rdx
0x0000ef75      4883c001       add rax, 1
0x0000ef79      4809d1         or rcx, rdx
0x0000ef7c      4883f804       cmp rax, 4
0x0000ef80      75e7           jne 0xef69
0x0000ef82      4885c9         test rcx, rcx
0x0000ef85      0f84e0000000   je 0xf06b
0x0000ef8b      4c8d9c24d000.  lea r11, [rsp + 0xd0]
0x0000ef93      4531ff         xor r15d, r15d
0x0000ef96      4531c9         xor r9d, r9d
0x0000ef99      31c9           xor ecx, ecx
0x0000ef9b      498b34cc       mov rsi, qword [r12 + rcx*8]
0x0000ef9f      488b04cf       mov rax, qword [rdi + rcx*8]
0x0000efa3      4889f2         mov rdx, rsi
0x0000efa6      48f7d2         not rdx
0x0000efa9      4821c2         and rdx, rax
0x0000efac      48f7d0         not rax
0x0000efaf      4821f0         and rax, rsi
0x0000efb2      498914cb       mov qword [r11 + rcx*8], rdx
0x0000efb6      4909d1         or r9, rdx
0x0000efb9      498904cc       mov qword [r12 + rcx*8], rax
0x0000efbd      4883c101       add rcx, 1
0x0000efc1      4909c7         or r15, rax
0x0000efc4      4883f904       cmp rcx, 4
0x0000efc8      75d1           jne 0xef9b
0x0000efca      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000efcf      488d045b       lea rax, [rbx + rbx*2]
0x0000efd3      4d85c9         test r9, r9
0x0000efd6      488d14c7       lea rdx, [rdi + rax*8]
0x0000efda      7468           je 0xf044
0x0000efdc      4889e8         mov rax, rbp
0x0000efdf      660f6f8424d0.  movdqa xmm0, xmmword [rsp + 0xd0]
0x0000efe8      48c1e005       shl rax, 5
0x0000efec      4889d6         mov rsi, rdx
0x0000efef      4889542438     mov qword [rsp + 0x38], rdx
0x0000eff4      4c01e8         add rax, r13
0x0000eff7      0f1100         movups xmmword [rax], xmm0
0x0000effa      660f6f8424e0.  movdqa xmm0, xmmword [rsp + 0xe0]
0x0000f003      0f114010       movups xmmword [rax + 0x10], xmm0
0x0000f007      488d446d00     lea rax, [rbp + rbp*2]
0x0000f00c      488d3cc7       lea rdi, [rdi + rax*8]
0x0000f010      660f6f8424b0.  movdqa xmm0, xmmword [rsp + 0xb0]
0x0000f019      430f11441500   movups xmmword [r13 + r10], xmm0
0x0000f01f      660f6f8424c0.  movdqa xmm0, xmmword [rsp + 0xc0]
0x0000f028      430f11441510   movups xmmword [r13 + r10 + 0x10], xmm0
0x0000f02e      e87de0ffff     call sym.re_node_set_init_copy
0x0000f033      85c0           test eax, eax
0x0000f035      0f85d5000000   jne 0xf110
0x0000f03b      488b542438     mov rdx, qword [rsp + 0x38]
0x0000f040      4883c501       add rbp, 1
0x0000f044      488b442408     mov rax, qword [rsp + 8]
0x0000f049      488b742420     mov rsi, qword [rsp + 0x20]
0x0000f04e      4889d7         mov rdi, rdx
0x0000f051      488b4018       mov rax, qword [rax + 0x18]
0x0000f055      488b3430       mov rsi, qword [rax + rsi]
0x0000f059      e8b2b9ffff     call sym.re_node_set_insert
0x0000f05e      84c0           test al, al
0x0000f060      0f84aa000000   je 0xf110
0x0000f066      4d85ff         test r15, r15
0x0000f069      740d           je 0xf078
0x0000f06b      4883c301       add rbx, 1
0x0000f06f      4839eb         cmp rbx, rbp
0x0000f072      0f8cb0feffff   jl 0xef28
0x0000f078      4d89ef         mov r15, r13
0x0000f07b      4839dd         cmp rbp, rbx
0x0000f07e      0f855bfaffff   jne 0xeadf
0x0000f084      4889e8         mov rax, rbp
0x0000f087      660f6f842490.  movdqa xmm0, xmmword [rsp + 0x90]
0x0000f090      48c1e005       shl rax, 5
0x0000f094      488b5c2420     mov rbx, qword [rsp + 0x20]
0x0000f099      bf08000000     mov edi, 8
0x0000f09e      4c01f8         add rax, r15
0x0000f0a1      0f1100         movups xmmword [rax], xmm0
0x0000f0a4      660f6f8424a0.  movdqa xmm0, xmmword [rsp + 0xa0]
0x0000f0ad      0f114010       movups xmmword [rax + 0x10], xmm0
0x0000f0b1      488b442408     mov rax, qword [rsp + 8]
0x0000f0b6      488b4018       mov rax, qword [rax + 0x18]
0x0000f0ba      4c8b2c18       mov r13, qword [rax + rbx]
0x0000f0be      488b5c2418     mov rbx, qword [rsp + 0x18]
0x0000f0c3      488d446d00     lea rax, [rbp + rbp*2]
0x0000f0c8      488d1cc3       lea rbx, [rbx + rax*8]
0x0000f0cc      48c703010000.  mov qword [rbx], 1
0x0000f0d3      48c743080100.  mov qword [rbx + 8], 1
0x0000f0db      e8402effff     call sym.imp.malloc
0x0000f0e0      4885c0         test rax, rax
0x0000f0e3      48894310       mov qword [rbx + 0x10], rax
0x0000f0e7      0f84e0fcffff   je 0xedcd
0x0000f0ed      4c8928         mov qword [rax], r13
0x0000f0f0      4883c501       add rbp, 1
0x0000f0f4      660fefc0       pxor xmm0, xmm0
0x0000f0f8      410f290424     movaps xmmword [r12], xmm0
0x0000f0fd      410f29442410   movaps xmmword [r12 + 0x10], xmm0
0x0000f103      e9d7f9ffff     jmp 0xeadf
0x0000f108      0f1f84000000.  nop dword [rax + rax]
0x0000f110      488b442418     mov rax, qword [rsp + 0x18]
0x0000f115      488d5810       lea rbx, [rax + 0x10]
0x0000f119      488d446d00     lea rax, [rbp + rbp*2]
0x0000f11e      488d2cc3       lea rbp, [rbx + rax*8]
0x0000f122      660f1f440000   nop word [rax + rax]
0x0000f128      488b3b         mov rdi, qword [rbx]
0x0000f12b      4883c318       add rbx, 0x18
0x0000f12f      e82c2bffff     call sym.imp.free
0x0000f134      4839dd         cmp rbp, rbx
0x0000f137      75ef           jne 0xf128
0x0000f139      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000f13e      e81d2bffff     call sym.imp.free
0x0000f143      e9a8fcffff     jmp 0xedf0
0x0000f148      0f1f84000000.  nop dword [rax + rax]
0x0000f150      488b742430     mov rsi, qword [rsp + 0x30]
0x0000f155      83beb4000000.  cmp dword [rsi + 0xb4], 1
0x0000f15c      0f8e03010000   jle 0xf265
0x0000f162      488b7678       mov rsi, qword [rsi + 0x78]
0x0000f166      4c8da4249000.  lea r12, [rsp + 0x90]
0x0000f16e      31d2           xor edx, edx
0x0000f170      498b0c14       mov rcx, qword [r12 + rdx]
0x0000f174      480b0c16       or rcx, qword [rsi + rdx]
0x0000f178      49890c14       mov qword [r12 + rdx], rcx
0x0000f17c      4883c208       add rdx, 8
0x0000f180      4883fa20       cmp rdx, 0x20                           ; "@"
0x0000f184      75ea           jne 0xf170
0x0000f186      488b5c2430     mov rbx, qword [rsp + 0x30]
0x0000f18b      488b93d80000.  mov rdx, qword [rbx + 0xd8]
0x0000f192      f6c240         test dl, 0x40                           ; segment.PHDR
0x0000f195      750c           jne 0xf1a3
0x0000f197      4881a4249000.  and qword [rsp + 0x90], 0xfffffffffffffbff
0x0000f1a3      81e280000000   and edx, 0x80
0x0000f1a9      0f8497fcffff   je 0xee46
0x0000f1af      4883a4249000.  and qword [rsp + 0x90], 0xfffffffffffffffe
0x0000f1b8      e989fcffff     jmp 0xee46
0x0000f1bd      0f1f00         nop dword [rax]
0x0000f1c0      488b94249000.  mov rdx, qword [rsp + 0x90]
0x0000f1c8      660fefc0       pxor xmm0, xmm0
0x0000f1cc      80e604         and dh, 4
0x0000f1cf      410f290424     movaps xmmword [r12], xmm0
0x0000f1d4      410f29442410   movaps xmmword [r12 + 0x10], xmm0
0x0000f1da      0f84fff8ffff   je 0xeadf
0x0000f1e0      48c784249000.  mov qword [rsp + 0x90], 0x400           ; [0x400:8]=0x1200000254
0x0000f1ec      e966fcffff     jmp 0xee57
0x0000f1f1      41f6450a40     test byte [r13 + 0xa], 0x40
0x0000f1f6      0f85f8feffff   jne 0xf0f4
0x0000f1fc      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000f201      83bfb4000000.  cmp dword [rdi + 0xb4], 1
0x0000f208      0f8fc7fcffff   jg 0xeed5
0x0000f20e      488b742430     mov rsi, qword [rsp + 0x30]
0x0000f213      31c9           xor ecx, ecx
0x0000f215      31d2           xor edx, edx
0x0000f217      488b84d6b800.  mov rax, qword [rsi + rdx*8 + 0xb8]
0x0000f21f      48f7d0         not rax
0x0000f222      492304d4       and rax, qword [r12 + rdx*8]
0x0000f226      498904d4       mov qword [r12 + rdx*8], rax
0x0000f22a      4883c201       add rdx, 1
0x0000f22e      4809c1         or rcx, rax
0x0000f231      4883fa04       cmp rdx, 4
0x0000f235      75e0           jne 0xf217
0x0000f237      4885c9         test rcx, rcx
0x0000f23a      0f85d0fcffff   jne 0xef10
0x0000f240      e99af8ffff     jmp 0xeadf
0x0000f245      41f6450a40     test byte [r13 + 0xa], 0x40
0x0000f24a      0f84a4feffff   je 0xf0f4
0x0000f250      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000f255      4183b8b40000.  cmp dword [r8 + 0xb4], 1
0x0000f25d      0f8f1dfcffff   jg 0xee80
0x0000f263      eb6d           jmp 0xf2d2
0x0000f265      660f76c0       pcmpeqd xmm0, xmm0
0x0000f269      4c8da4249000.  lea r12, [rsp + 0x90]
0x0000f271      0f2984249000.  movaps xmmword [rsp + 0x90], xmm0
0x0000f279      0f298424a000.  movaps xmmword [rsp + 0xa0], xmm0
0x0000f281      e900ffffff     jmp 0xf186
0x0000f286      662e0f1f8400.  nop word cs:[rax + rax]
0x0000f290      498b7500       mov rsi, qword [r13]
0x0000f294      4c8da4249000.  lea r12, [rsp + 0x90]
0x0000f29c      31d2           xor edx, edx
0x0000f29e      498b0c14       mov rcx, qword [r12 + rdx]
0x0000f2a2      480b0c16       or rcx, qword [rsi + rdx]
0x0000f2a6      49890c14       mov qword [r12 + rdx], rcx
0x0000f2aa      4883c208       add rdx, 8
0x0000f2ae      4883fa20       cmp rdx, 0x20                           ; "@"
0x0000f2b2      75ea           jne 0xf29e
0x0000f2b4      e98dfbffff     jmp 0xee46
0x0000f2b9      660f76c0       pcmpeqd xmm0, xmm0
0x0000f2bd      4c8da4249000.  lea r12, [rsp + 0x90]
0x0000f2c5      0f2984249000.  movaps xmmword [rsp + 0x90], xmm0
0x0000f2cd      e9b4feffff     jmp 0xf186
0x0000f2d2      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000f2d7      31f6           xor esi, esi
0x0000f2d9      31d2           xor edx, edx
0x0000f2db      498b0cd4       mov rcx, qword [r12 + rdx*8]
0x0000f2df      48238cd7b800.  and rcx, qword [rdi + rdx*8 + 0xb8]
0x0000f2e7      49890cd4       mov qword [r12 + rdx*8], rcx
0x0000f2eb      4883c201       add rdx, 1
0x0000f2ef      4809ce         or rsi, rcx
0x0000f2f2      4883fa04       cmp rdx, 4
0x0000f2f6      75e3           jne 0xf2db
0x0000f2f8      4885f6         test rsi, rsi
0x0000f2fb      0f85b4fbffff   jne 0xeeb5
0x0000f301      e9d9f7ffff     jmp 0xeadf
0x0000f306      8b54246c       mov edx, dword [rsp + 0x6c]
0x0000f30a      85d2           test edx, edx
0x0000f30c      0f8485000000   je 0xf397
0x0000f312      660f1f440000   nop word [rax + rax]
0x0000f318      488b6c2420     mov rbp, qword [rsp + 0x20]
0x0000f31d      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000f322      e83929ffff     call sym.imp.free
0x0000f327      4c8ba4248000.  mov r12, qword [rsp + 0x80]
0x0000f32f      4c89e7         mov rdi, r12
0x0000f332      e82929ffff     call sym.imp.free
0x0000f337      488b442418     mov rax, qword [rsp + 0x18]
0x0000f33c      488d5810       lea rbx, [rax + 0x10]
0x0000f340      488d446d00     lea rax, [rbp + rbp*2]
0x0000f345      488d2cc3       lea rbp, [rbx + rax*8]
0x0000f349      0f1f80000000.  nop dword [rax]
0x0000f350      488b3b         mov rdi, qword [rbx]
0x0000f353      4883c318       add rbx, 0x18
0x0000f357      e80429ffff     call sym.imp.free
0x0000f35c      4839dd         cmp rbp, rbx
0x0000f35f      75ef           jne 0xf350
0x0000f361      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000f366      e8f528ffff     call sym.imp.free
0x0000f36b      e980faffff     jmp 0xedf0
0x0000f370      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000f375      b901000000     mov ecx, 1
0x0000f37a      4c89f2         mov rdx, r14
0x0000f37d      4889ee         mov rsi, rbp
0x0000f380      e81bdfffff     call sym.re_acquire_state_context
0x0000f385      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000f38a      4885c0         test rax, rax
0x0000f38d      488904df       mov qword [rdi + rbx*8], rax
0x0000f391      0f846fffffff   je 0xf306
0x0000f397      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000f39c      483b04df       cmp rax, qword [rdi + rbx*8]
0x0000f3a0      7419           je 0xf3bb
0x0000f3a2      0fb67c244f     movzx edi, byte [rsp + 0x4f]
0x0000f3a7      83bdb4000000.  cmp dword [rbp + 0xb4], 2
0x0000f3ae      b801000000     mov eax, 1
0x0000f3b3      0f4df8         cmovge edi, eax
0x0000f3b6      40887c244f     mov byte [rsp + 0x4f], dil
0x0000f3bb      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000f3c0      4889ee         mov rsi, rbp
0x0000f3c3      b902000000     mov ecx, 2
0x0000f3c8      4c89f2         mov rdx, r14
0x0000f3cb      e8d0deffff     call sym.re_acquire_state_context
0x0000f3d0      488b742438     mov rsi, qword [rsp + 0x38]
0x0000f3d5      4885c0         test rax, rax
0x0000f3d8      488904de       mov qword [rsi + rbx*8], rax
0x0000f3dc      0f858ff8ffff   jne 0xec71
0x0000f3e2      8b44246c       mov eax, dword [rsp + 0x6c]
0x0000f3e6      85c0           test eax, eax
0x0000f3e8      0f8483f8ffff   je 0xec71
0x0000f3ee      e925ffffff     jmp 0xf318
0x0000f3f3      0f1f440000     nop dword [rax + rax]
0x0000f3f8      8b4c246c       mov ecx, dword [rsp + 0x6c]
0x0000f3fc      85c9           test ecx, ecx
0x0000f3fe      0f8448f8ffff   je 0xec4c
0x0000f404      e90fffffff     jmp 0xf318
0x0000f409      be00020000     mov esi, 0x200
0x0000f40e      bf08000000     mov edi, 8
0x0000f413      e8a82affff     call sym.imp.calloc
0x0000f418      4989c3         mov r11, rax
0x0000f41b      488b442408     mov rax, qword [rsp + 8]
0x0000f420      4d85db         test r11, r11
0x0000f423      4c895860       mov qword [rax + 0x60], r11
0x0000f427      0f84f0feffff   je 0xf31d
0x0000f42d      4c8b6c2440     mov r13, qword [rsp + 0x40]
0x0000f432      4c8b542410     mov r10, qword [rsp + 0x10]
0x0000f437      4d89dc         mov r12, r11
0x0000f43a      4c8b742430     mov r14, qword [rsp + 0x30]
0x0000f43f      488b542420     mov rdx, qword [rsp + 0x20]
0x0000f444      31db           xor ebx, ebx
0x0000f446      4983c520       add r13, 0x20                           ; "@"
0x0000f44a      488b041a       mov rax, qword [rdx + rbx]
0x0000f44e      4885c0         test rax, rax
0x0000f451      741c           je 0xf46f
0x0000f453      4c89e6         mov rsi, r12
0x0000f456      b901000000     mov ecx, 1
0x0000f45b      a801           test al, 1
0x0000f45d      0f85a9000000   jne 0xf50c
0x0000f463      4801c9         add rcx, rcx
0x0000f466      4883c608       add rsi, 8
0x0000f46a      48d1e8         shr rax, 1
0x0000f46d      75ec           jne 0xf45b
0x0000f46f      4883c308       add rbx, 8
0x0000f473      4981c4000200.  add r12, 0x200
0x0000f47a      4883fb20       cmp rbx, 0x20                           ; "@"
0x0000f47e      75ca           jne 0xf44a
0x0000f480      e9b9f8ffff     jmp 0xed3e
0x0000f485      0f1f00         nop dword [rax]
0x0000f488      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000f48d      4a858c0f0018.  test qword [rdi + r9 + 0x1800], rcx
0x0000f495      7570           jne 0xf507
0x0000f497      4a8d3c0b       lea rdi, [rbx + r9]
0x0000f49b      4531c0         xor r8d, r8d
0x0000f49e      6690           nop
0x0000f4a0      4c8b17         mov r10, qword [rdi]
0x0000f4a3      4983c001       add r8, 1
0x0000f4a7      4883c720       add rdi, 0x20                           ; "@"
0x0000f4ab      4921ca         and r10, rcx
0x0000f4ae      4d85d2         test r10, r10
0x0000f4b1      74ed           je 0xf4a0
0x0000f4b3      49c1e003       shl r8, 3
0x0000f4b7      4b858c0fb800.  test qword [r15 + r9 + 0xb8], rcx
0x0000f4bf      740d           je 0xf4ce
0x0000f4c1      4b8b7c0500     mov rdi, qword [r13 + r8]
0x0000f4c6      48893e         mov qword [rsi], rdi
0x0000f4c9      e95af8ffff     jmp 0xed28
0x0000f4ce      4b8b3c04       mov rdi, qword [r12 + r8]
0x0000f4d2      48893e         mov qword [rsi], rdi
0x0000f4d5      e94ef8ffff     jmp 0xed28
0x0000f4da      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000f4df      e87c27ffff     call sym.imp.free
0x0000f4e4      be00010000     mov esi, 0x100
0x0000f4e9      bf08000000     mov edi, 8
0x0000f4ee      e8cd29ffff     call sym.imp.calloc
0x0000f4f3      488b5c2408     mov rbx, qword [rsp + 8]
0x0000f4f8      4885c0         test rax, rax
0x0000f4fb      48894358       mov qword [rbx + 0x58], rax
0x0000f4ff      0f95c0         setne al
0x0000f502      e9ebf8ffff     jmp 0xedf2
0x0000f507      4531c0         xor r8d, r8d
0x0000f50a      ebab           jmp 0xf4b7
0x0000f50c      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000f511      48858c1f0018.  test qword [rdi + rbx + 0x1800], rcx
0x0000f519      7535           jne 0xf550
0x0000f51b      4d8d4c1d00     lea r9, [r13 + rbx]
0x0000f520      4531c0         xor r8d, r8d
0x0000f523      4d8b39         mov r15, qword [r9]
0x0000f526      4983c001       add r8, 1
0x0000f52a      4983c120       add r9, 0x20                            ; "@"
0x0000f52e      4c89c7         mov rdi, r8
0x0000f531      4921cf         and r15, rcx
0x0000f534      4d85ff         test r15, r15
0x0000f537      74ea           je 0xf523
0x0000f539      4d8b04fa       mov r8, qword [r10 + rdi*8]
0x0000f53d      4c8906         mov qword [rsi], r8
0x0000f540      498b3cfe       mov rdi, qword [r14 + rdi*8]
0x0000f544      4889be000800.  mov qword [rsi + 0x800], rdi
0x0000f54b      e913ffffff     jmp 0xf463
0x0000f550      31ff           xor edi, edi
0x0000f552      ebe5           jmp 0xf539
0x0000f554      e85728ffff     call sym.imp.__stack_chk_fail
0x0000f559      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000f55e      e8fd26ffff     call sym.imp.free
0x0000f563      4885ed         test rbp, rbp
0x0000f566      0f8584f8ffff   jne 0xedf0
0x0000f56c      e973ffffff     jmp 0xf4e4
0x0000f571      0f1f440000     nop dword [rax + rax]
0x0000f576      662e0f1f8400.  nop word cs:[rax + rax]
;-- calc_first:
0x0000f580      807e3010       cmp byte [rsi + 0x30], 0x10
0x0000f584      7462           je 0xf5e8
0x0000f586      55             push rbp
0x0000f587      53             push rbx
0x0000f588      4889f3         mov rbx, rsi
0x0000f58b      4889fd         mov rbp, rdi
0x0000f58e      4883ec08       sub rsp, 8
0x0000f592      48897318       mov qword [rbx + 0x18], rsi
0x0000f596      488b5330       mov rdx, qword [rbx + 0x30]
0x0000f59a      488b7628       mov rsi, qword [rsi + 0x28]
0x0000f59e      e84dc1ffff     call sym.re_dfa_add_node
0x0000f5a3      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000f5a7      4889c2         mov rdx, rax
0x0000f5aa      48894338       mov qword [rbx + 0x38], rax
0x0000f5ae      7450           je 0xf600
0x0000f5b0      31c0           xor eax, eax
0x0000f5b2      807b300c       cmp byte [rbx + 0x30], 0xc
0x0000f5b6      7524           jne 0xf5dc
0x0000f5b8      8b4b28         mov ecx, dword [rbx + 0x28]
0x0000f5bb      48c1e204       shl rdx, 4
0x0000f5bf      48035500       add rdx, qword [rbp]
0x0000f5c3      81e1ff030000   and ecx, 0x3ff
0x0000f5c9      c1e108         shl ecx, 8
0x0000f5cc      89ce           mov esi, ecx
0x0000f5ce      8b4a08         mov ecx, dword [rdx + 8]
0x0000f5d1      81e1ff00fcff   and ecx, 0xfffc00ff
0x0000f5d7      09f1           or ecx, esi
0x0000f5d9      894a08         mov dword [rdx + 8], ecx
0x0000f5dc      4883c408       add rsp, 8
0x0000f5e0      5b             pop rbx
0x0000f5e1      5d             pop rbp
0x0000f5e2      c3             ret
0x0000f5e3      0f1f440000     nop dword [rax + rax]
0x0000f5e8      488b4608       mov rax, qword [rsi + 8]
0x0000f5ec      488b5018       mov rdx, qword [rax + 0x18]
0x0000f5f0      488b4038       mov rax, qword [rax + 0x38]
0x0000f5f4      48895618       mov qword [rsi + 0x18], rdx
0x0000f5f8      48894638       mov qword [rsi + 0x38], rax
0x0000f5fc      31c0           xor eax, eax
0x0000f5fe      c3             ret
0x0000f5ff      90             nop
0x0000f600      b80c000000     mov eax, 0xc
0x0000f605      ebd5           jmp 0xf5dc
0x0000f607      660f1f840000.  nop word [rax + rax]
;-- free_fail_stack_return.part.24:
0x0000f610      4154           push r12
0x0000f612      55             push rbp
0x0000f613      4889fd         mov rbp, rdi
0x0000f616      53             push rbx
0x0000f617      48833f00       cmp qword [rdi], 0
0x0000f61b      7e35           jle 0xf652
0x0000f61d      31db           xor ebx, ebx
0x0000f61f      4531e4         xor r12d, r12d
0x0000f622      660f1f440000   nop word [rax + rax]
0x0000f628      488b4510       mov rax, qword [rbp + 0x10]
0x0000f62c      4983c401       add r12, 1
0x0000f630      488b7c1828     mov rdi, qword [rax + rbx + 0x28]
0x0000f635      e82626ffff     call sym.imp.free
0x0000f63a      488b4510       mov rax, qword [rbp + 0x10]
0x0000f63e      488b7c1810     mov rdi, qword [rax + rbx + 0x10]
0x0000f643      4883c330       add rbx, 0x30
0x0000f647      e81426ffff     call sym.imp.free
0x0000f64c      4c3b6500       cmp r12, qword [rbp]
0x0000f650      7cd6           jl 0xf628
0x0000f652      5b             pop rbx
0x0000f653      488b7d10       mov rdi, qword [rbp + 0x10]
0x0000f657      5d             pop rbp
0x0000f658      415c           pop r12
0x0000f65a      e90126ffff     jmp sym.imp.free
0x0000f65f      90             nop
;-- pop_fail_stack.isra.25:
0x0000f660      4154           push r12
0x0000f662      55             push rbp
0x0000f663      53             push rbx
0x0000f664      488b07         mov rax, qword [rdi]
0x0000f667      4883e801       sub rax, 1
0x0000f66b      4885c0         test rax, rax
0x0000f66e      488907         mov qword [rdi], rax
0x0000f671      7862           js 0xf6d5
0x0000f673      488d1c40       lea rbx, [rax + rax*2]
0x0000f677      488b06         mov rax, qword [rsi]
0x0000f67a      4989f4         mov r12, rsi
0x0000f67d      48c1e104       shl rcx, 4
0x0000f681      4c89cd         mov rbp, r9
0x0000f684      4c89c7         mov rdi, r8
0x0000f687      48c1e304       shl rbx, 4
0x0000f68b      4801d8         add rax, rbx
0x0000f68e      488b30         mov rsi, qword [rax]
0x0000f691      488932         mov qword [rdx], rsi
0x0000f694      488b7010       mov rsi, qword [rax + 0x10]
0x0000f698      4889ca         mov rdx, rcx
0x0000f69b      e84028ffff     call sym.imp.memcpy
0x0000f6a0      488b7d10       mov rdi, qword [rbp + 0x10]
0x0000f6a4      e8b725ffff     call sym.imp.free
0x0000f6a9      498b0424       mov rax, qword [r12]
0x0000f6ad      488b7c1810     mov rdi, qword [rax + rbx + 0x10]
0x0000f6b2      e8a925ffff     call sym.imp.free
0x0000f6b7      49031c24       add rbx, qword [r12]
0x0000f6bb      f30f6f4318     movdqu xmm0, xmmword [rbx + 0x18]
0x0000f6c0      0f294500       movaps xmmword [rbp], xmm0
0x0000f6c4      488b4328       mov rax, qword [rbx + 0x28]
0x0000f6c8      48894510       mov qword [rbp + 0x10], rax
0x0000f6cc      488b4308       mov rax, qword [rbx + 8]
0x0000f6d0      5b             pop rbx
0x0000f6d1      5d             pop rbp
0x0000f6d2      415c           pop r12
0x0000f6d4      c3             ret
0x0000f6d5      488d0dc4d500.  lea rcx, obj.__PRETTY_FUNCTION__.8040   ; 0x1cca0 ; "pop_fail_stack"
0x0000f6dc      488d35edcf00.  lea rsi, str..._coreutils_8.31_lib_regexec.c ; 0x1c6d0 ; "../coreutils-8.31/lib/regexec.c"
0x0000f6e3      488d3d4ed000.  lea rdi, str.num____0                   ; 0x1c738 ; "num >= 0"
0x0000f6ea      ba55050000     mov edx, 0x555
0x0000f6ef      e83c27ffff     call sym.imp.__assert_fail
0x0000f6f4      6690           nop
0x0000f6f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- build_equiv_class.isra.27:
;-- build_collating_symbol.isra.28:
0x0000f700      55             push rbp
0x0000f701      53             push rbx
0x0000f702      4889fd         mov rbp, rdi
0x0000f705      4889f7         mov rdi, rsi
0x0000f708      4889f3         mov rbx, rsi
0x0000f70b      4883ec08       sub rsp, 8
0x0000f70f      e88c26ffff     call sym.imp.strlen
0x0000f714      4883f801       cmp rax, 1
0x0000f718      7526           jne 0xf740
0x0000f71a      0fb60b         movzx ecx, byte [rbx]
0x0000f71d      4889ca         mov rdx, rcx
0x0000f720      83e13f         and ecx, 0x3f
0x0000f723      48c1ea03       shr rdx, 3
0x0000f727      48d3e0         shl rax, cl
0x0000f72a      83e218         and edx, 0x18
0x0000f72d      4809441500     or qword [rbp + rdx], rax
0x0000f732      4883c408       add rsp, 8
0x0000f736      31c0           xor eax, eax
0x0000f738      5b             pop rbx
0x0000f739      5d             pop rbp
0x0000f73a      c3             ret
0x0000f73b      0f1f440000     nop dword [rax + rax]
0x0000f740      4883c408       add rsp, 8
0x0000f744      b803000000     mov eax, 3
0x0000f749      5b             pop rbx
0x0000f74a      5d             pop rbp
0x0000f74b      c3             ret
0x0000f74c      0f1f4000       nop dword [rax]
;-- build_charclass.isra.29:
0x0000f750      4156           push r14
0x0000f752      4155           push r13
0x0000f754      4989cd         mov r13, rcx
0x0000f757      4154           push r12
0x0000f759      55             push rbp
0x0000f75a      4d89cc         mov r12, r9
0x0000f75d      53             push rbx
0x0000f75e      4889fd         mov rbp, rdi
0x0000f761      4889f3         mov rbx, rsi
0x0000f764      4883ec10       sub rsp, 0x10
0x0000f768      48f744244000.  test qword [rsp + 0x40], 0x400000
0x0000f771      7425           je 0xf798
0x0000f773      488d3dcdcf00.  lea rdi, str.upper                      ; 0x1c747 ; "upper"
0x0000f77a      b906000000     mov ecx, 6
0x0000f77f      4c89ce         mov rsi, r9
0x0000f782      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000f784      0f97c0         seta al
0x0000f787      1c00           sbb al, 0
0x0000f789      84c0           test al, al
0x0000f78b      0f85f5000000   jne 0xf886
0x0000f791      4c8d25a9cf00.  lea r12, str.alpha                      ; 0x1c741 ; "alpha"
0x0000f798      498b4d00       mov rcx, qword [r13]
0x0000f79c      493908         cmp qword [r8], rcx
0x0000f79f      488b02         mov rax, qword [rdx]
0x0000f7a2      0f8411010000   je 0xf8b9
0x0000f7a8      488d5101       lea rdx, [rcx + 1]
0x0000f7ac      4c89e7         mov rdi, r12
0x0000f7af      49895500       mov qword [r13], rdx
0x0000f7b3      4c8d2cc8       lea r13, [rax + rcx*8]
0x0000f7b7      e8e426ffff     call sym.imp.wctype
0x0000f7bc      488d3d90cf00.  lea rdi, str.alnum                      ; 0x1c753 ; "alnum"
0x0000f7c3      49894500       mov qword [r13], rax
0x0000f7c7      b906000000     mov ecx, 6
0x0000f7cc      4c89e6         mov rsi, r12
0x0000f7cf      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000f7d1      0f97c0         seta al
0x0000f7d4      1c00           sbb al, 0
0x0000f7d6      84c0           test al, al
0x0000f7d8      746e           je 0xf848
0x0000f7da      488d3d78cf00.  lea rdi, str.cntrl                      ; 0x1c759 ; "cntrl"
0x0000f7e1      b906000000     mov ecx, 6
0x0000f7e6      4c89e6         mov rsi, r12
0x0000f7e9      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000f7eb      0f97c0         seta al
0x0000f7ee      1c00           sbb al, 0
0x0000f7f0      84c0           test al, al
0x0000f7f2      0f8500010000   jne 0xf8f8
0x0000f7f8      e8e328ffff     call sym.imp.__ctype_b_loc
0x0000f7fd      31c9           xor ecx, ecx
0x0000f7ff      4885ed         test rbp, rbp
0x0000f802      488b10         mov rdx, qword [rax]
0x0000f805      bf01000000     mov edi, 1
0x0000f80a      0f85ba020000   jne 0xfaca
0x0000f810      f6044a02       test byte [rdx + rcx*2], 2
0x0000f814      7411           je 0xf827
0x0000f816      4889c8         mov rax, rcx
0x0000f819      4889fe         mov rsi, rdi
0x0000f81c      48c1f806       sar rax, 6
0x0000f820      48d3e6         shl rsi, cl
0x0000f823      480934c3       or qword [rbx + rax*8], rsi
0x0000f827      4883c101       add rcx, 1
0x0000f82b      4881f9000100.  cmp rcx, 0x100
0x0000f832      75dc           jne 0xf810
0x0000f834      31c0           xor eax, eax
0x0000f836      4883c410       add rsp, 0x10
0x0000f83a      5b             pop rbx
0x0000f83b      5d             pop rbp
0x0000f83c      415c           pop r12
0x0000f83e      415d           pop r13
0x0000f840      415e           pop r14
0x0000f842      c3             ret
0x0000f843      0f1f440000     nop dword [rax + rax]
0x0000f848      e89328ffff     call sym.imp.__ctype_b_loc
0x0000f84d      31c9           xor ecx, ecx
0x0000f84f      4885ed         test rbp, rbp
0x0000f852      488b10         mov rdx, qword [rax]
0x0000f855      bf01000000     mov edi, 1
0x0000f85a      0f85ea010000   jne 0xfa4a
0x0000f860      f6044a08       test byte [rdx + rcx*2], 8
0x0000f864      7411           je 0xf877
0x0000f866      4889c8         mov rax, rcx
0x0000f869      4889fe         mov rsi, rdi
0x0000f86c      48c1f806       sar rax, 6
0x0000f870      48d3e6         shl rsi, cl
0x0000f873      480934c3       or qword [rbx + rax*8], rsi
0x0000f877      4883c101       add rcx, 1
0x0000f87b      4881f9000100.  cmp rcx, 0x100
0x0000f882      75dc           jne 0xf860
0x0000f884      ebae           jmp 0xf834
0x0000f886      488d3dc0ce00.  lea rdi, str.lower                      ; 0x1c74d ; "lower"
0x0000f88d      b906000000     mov ecx, 6
0x0000f892      4c89ce         mov rsi, r9
0x0000f895      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000f897      498b4d00       mov rcx, qword [r13]
0x0000f89b      0f97c0         seta al
0x0000f89e      1c00           sbb al, 0
0x0000f8a0      84c0           test al, al
0x0000f8a2      488d0598ce00.  lea rax, str.alpha                      ; 0x1c741 ; "alpha"
0x0000f8a9      4c0f44e0       cmove r12, rax
0x0000f8ad      493908         cmp qword [r8], rcx
0x0000f8b0      488b02         mov rax, qword [rdx]
0x0000f8b3      0f85effeffff   jne 0xf7a8
0x0000f8b9      4c8d740901     lea r14, [rcx + rcx + 1]
0x0000f8be      4889c7         mov rdi, rax
0x0000f8c1      4c89442408     mov qword [rsp + 8], r8
0x0000f8c6      48891424       mov qword [rsp], rdx
0x0000f8ca      4a8d34f50000.  lea rsi, [r14*8]
0x0000f8d2      e8b926ffff     call sym.imp.realloc
0x0000f8d7      4885c0         test rax, rax
0x0000f8da      0f8418030000   je 0xfbf8
0x0000f8e0      488b1424       mov rdx, qword [rsp]
0x0000f8e4      4c8b442408     mov r8, qword [rsp + 8]
0x0000f8e9      488902         mov qword [rdx], rax
0x0000f8ec      4d8930         mov qword [r8], r14
0x0000f8ef      498b4d00       mov rcx, qword [r13]
0x0000f8f3      e9b0feffff     jmp 0xf7a8
0x0000f8f8      488d3d4ece00.  lea rdi, str.lower                      ; 0x1c74d ; "lower"
0x0000f8ff      b906000000     mov ecx, 6
0x0000f904      4c89e6         mov rsi, r12
0x0000f907      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000f909      0f97c0         seta al
0x0000f90c      1c00           sbb al, 0
0x0000f90e      84c0           test al, al
0x0000f910      7468           je 0xf97a
0x0000f912      488d3d46ce00.  lea rdi, str.space                      ; 0x1c75f ; "space"
0x0000f919      b906000000     mov ecx, 6
0x0000f91e      4c89e6         mov rsi, r12
0x0000f921      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000f923      0f97c0         seta al
0x0000f926      1c00           sbb al, 0
0x0000f928      84c0           test al, al
0x0000f92a      0f8592000000   jne 0xf9c2
0x0000f930      e8ab27ffff     call sym.imp.__ctype_b_loc
0x0000f935      31c9           xor ecx, ecx
0x0000f937      4885ed         test rbp, rbp
0x0000f93a      488b10         mov rdx, qword [rax]
0x0000f93d      bf01000000     mov edi, 1
0x0000f942      0f8556030000   jne 0xfc9e
0x0000f948      0f1f84000000.  nop dword [rax + rax]
0x0000f950      f6444a0120     test byte [rdx + rcx*2 + 1], 0x20
0x0000f955      7411           je 0xf968
0x0000f957      4889c8         mov rax, rcx
0x0000f95a      4889fe         mov rsi, rdi
0x0000f95d      48c1f806       sar rax, 6
0x0000f961      48d3e6         shl rsi, cl
0x0000f964      480934c3       or qword [rbx + rax*8], rsi
0x0000f968      4883c101       add rcx, 1
0x0000f96c      4881f9000100.  cmp rcx, 0x100
0x0000f973      75db           jne 0xf950
0x0000f975      e9bafeffff     jmp 0xf834
0x0000f97a      e86127ffff     call sym.imp.__ctype_b_loc
0x0000f97f      31c9           xor ecx, ecx
0x0000f981      4885ed         test rbp, rbp
0x0000f984      488b10         mov rdx, qword [rax]
0x0000f987      bf01000000     mov edi, 1
0x0000f98c      0f85d0010000   jne 0xfb62
0x0000f992      660f1f440000   nop word [rax + rax]
0x0000f998      f6444a0102     test byte [rdx + rcx*2 + 1], 2
0x0000f99d      7411           je 0xf9b0
0x0000f99f      4889c8         mov rax, rcx
0x0000f9a2      4889fe         mov rsi, rdi
0x0000f9a5      48c1f806       sar rax, 6
0x0000f9a9      48d3e6         shl rsi, cl
0x0000f9ac      480934c3       or qword [rbx + rax*8], rsi
0x0000f9b0      4883c101       add rcx, 1
0x0000f9b4      4881f9000100.  cmp rcx, 0x100
0x0000f9bb      75db           jne 0xf998
0x0000f9bd      e972feffff     jmp 0xf834
0x0000f9c2      488d3d78cd00.  lea rdi, str.alpha                      ; 0x1c741 ; "alpha"
0x0000f9c9      b906000000     mov ecx, 6
0x0000f9ce      4c89e6         mov rsi, r12
0x0000f9d1      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000f9d3      0f97c0         seta al
0x0000f9d6      1c00           sbb al, 0
0x0000f9d8      84c0           test al, al
0x0000f9da      0f84a3000000   je 0xfa83
0x0000f9e0      488d3d97cd00.  lea rdi, [0x0001c77e]                   ; "digit"
0x0000f9e7      b906000000     mov ecx, 6
0x0000f9ec      4c89e6         mov rsi, r12
0x0000f9ef      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000f9f1      0f97c0         seta al
0x0000f9f4      1c00           sbb al, 0
0x0000f9f6      84c0           test al, al
0x0000f9f8      0f8505010000   jne 0xfb03
0x0000f9fe      e8dd26ffff     call sym.imp.__ctype_b_loc
0x0000fa03      31c9           xor ecx, ecx
0x0000fa05      4885ed         test rbp, rbp
0x0000fa08      488b10         mov rdx, qword [rax]
0x0000fa0b      bf01000000     mov edi, 1
0x0000fa10      0f85a4040000   jne 0xfeba
0x0000fa16      662e0f1f8400.  nop word cs:[rax + rax]
0x0000fa20      f6444a0108     test byte [rdx + rcx*2 + 1], 8
0x0000fa25      7411           je 0xfa38
0x0000fa27      4889c8         mov rax, rcx
0x0000fa2a      4889fe         mov rsi, rdi
0x0000fa2d      48c1f806       sar rax, 6
0x0000fa31      48d3e6         shl rsi, cl
0x0000fa34      480934c3       or qword [rbx + rax*8], rsi
0x0000fa38      4883c101       add rcx, 1
0x0000fa3c      4881f9000100.  cmp rcx, 0x100
0x0000fa43      75db           jne 0xfa20
0x0000fa45      e9eafdffff     jmp 0xf834
0x0000fa4a      31c0           xor eax, eax
0x0000fa4c      0f1f4000       nop dword [rax]
0x0000fa50      f6044208       test byte [rdx + rax*2], 8
0x0000fa54      741c           je 0xfa72
0x0000fa56      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000fa5b      4989fa         mov r10, rdi
0x0000fa5e      4889ce         mov rsi, rcx
0x0000fa61      83e13f         and ecx, 0x3f
0x0000fa64      48c1ee03       shr rsi, 3
0x0000fa68      49d3e2         shl r10, cl
0x0000fa6b      83e618         and esi, 0x18
0x0000fa6e      4c091433       or qword [rbx + rsi], r10
0x0000fa72      4883c001       add rax, 1
0x0000fa76      483d00010000   cmp rax, 0x100
0x0000fa7c      75d2           jne 0xfa50
0x0000fa7e      e9b1fdffff     jmp 0xf834
0x0000fa83      e85826ffff     call sym.imp.__ctype_b_loc
0x0000fa88      31c9           xor ecx, ecx
0x0000fa8a      4885ed         test rbp, rbp
0x0000fa8d      488b10         mov rdx, qword [rax]
0x0000fa90      bf01000000     mov edi, 1
0x0000fa95      0f85cd010000   jne 0xfc68
0x0000fa9b      0f1f440000     nop dword [rax + rax]
0x0000faa0      f6444a0104     test byte [rdx + rcx*2 + 1], 4
0x0000faa5      7411           je 0xfab8
0x0000faa7      4889c8         mov rax, rcx
0x0000faaa      4889fe         mov rsi, rdi
0x0000faad      48c1f806       sar rax, 6
0x0000fab1      48d3e6         shl rsi, cl
0x0000fab4      480934c3       or qword [rbx + rax*8], rsi
0x0000fab8      4883c101       add rcx, 1
0x0000fabc      4881f9000100.  cmp rcx, 0x100
0x0000fac3      75db           jne 0xfaa0
0x0000fac5      e96afdffff     jmp 0xf834
0x0000faca      31c0           xor eax, eax
0x0000facc      0f1f4000       nop dword [rax]
0x0000fad0      f6044202       test byte [rdx + rax*2], 2
0x0000fad4      741c           je 0xfaf2
0x0000fad6      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000fadb      4989fb         mov r11, rdi
0x0000fade      4889ce         mov rsi, rcx
0x0000fae1      83e13f         and ecx, 0x3f
0x0000fae4      48c1ee03       shr rsi, 3
0x0000fae8      49d3e3         shl r11, cl
0x0000faeb      83e618         and esi, 0x18
0x0000faee      4c091c33       or qword [rbx + rsi], r11
0x0000faf2      4883c001       add rax, 1
0x0000faf6      483d00010000   cmp rax, 0x100
0x0000fafc      75d2           jne 0xfad0
0x0000fafe      e931fdffff     jmp 0xf834
0x0000fb03      488d3d5bcc00.  lea rdi, str.print                      ; 0x1c765 ; "print"
0x0000fb0a      b906000000     mov ecx, 6
0x0000fb0f      4c89e6         mov rsi, r12
0x0000fb12      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000fb14      0f97c0         seta al
0x0000fb17      1c00           sbb al, 0
0x0000fb19      84c0           test al, al
0x0000fb1b      757f           jne 0xfb9c
0x0000fb1d      e8be25ffff     call sym.imp.__ctype_b_loc
0x0000fb22      31c9           xor ecx, ecx
0x0000fb24      4885ed         test rbp, rbp
0x0000fb27      488b10         mov rdx, qword [rax]
0x0000fb2a      bf01000000     mov edi, 1
0x0000fb2f      0f85f2030000   jne 0xff27
0x0000fb35      0f1f00         nop dword [rax]
0x0000fb38      f6444a0140     test byte [rdx + rcx*2 + 1], 0x40
0x0000fb3d      7411           je 0xfb50
0x0000fb3f      4889c8         mov rax, rcx
0x0000fb42      4889fe         mov rsi, rdi
0x0000fb45      48c1f806       sar rax, 6
0x0000fb49      48d3e6         shl rsi, cl
0x0000fb4c      480934c3       or qword [rbx + rax*8], rsi
0x0000fb50      4883c101       add rcx, 1
0x0000fb54      4881f9000100.  cmp rcx, 0x100
0x0000fb5b      75db           jne 0xfb38
0x0000fb5d      e9d2fcffff     jmp 0xf834
0x0000fb62      31c0           xor eax, eax
0x0000fb64      0f1f4000       nop dword [rax]
0x0000fb68      f644420102     test byte [rdx + rax*2 + 1], 2
0x0000fb6d      741c           je 0xfb8b
0x0000fb6f      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000fb74      4989fe         mov r14, rdi
0x0000fb77      4889ce         mov rsi, rcx
0x0000fb7a      83e13f         and ecx, 0x3f
0x0000fb7d      48c1ee03       shr rsi, 3
0x0000fb81      49d3e6         shl r14, cl
0x0000fb84      83e618         and esi, 0x18
0x0000fb87      4c093433       or qword [rbx + rsi], r14
0x0000fb8b      4883c001       add rax, 1
0x0000fb8f      483d00010000   cmp rax, 0x100
0x0000fb95      75d1           jne 0xfb68
0x0000fb97      e998fcffff     jmp 0xf834
0x0000fb9c      488d3da4cb00.  lea rdi, str.upper                      ; 0x1c747 ; "upper"
0x0000fba3      b906000000     mov ecx, 6
0x0000fba8      4c89e6         mov rsi, r12
0x0000fbab      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000fbad      0f97c0         seta al
0x0000fbb0      1c00           sbb al, 0
0x0000fbb2      84c0           test al, al
0x0000fbb4      754c           jne 0xfc02
0x0000fbb6      e82525ffff     call sym.imp.__ctype_b_loc
0x0000fbbb      31c9           xor ecx, ecx
0x0000fbbd      4885ed         test rbp, rbp
0x0000fbc0      488b00         mov rax, qword [rax]
0x0000fbc3      bf01000000     mov edi, 1
0x0000fbc8      0f8522030000   jne 0xfef0
0x0000fbce      f644480101     test byte [rax + rcx*2 + 1], 1
0x0000fbd3      7411           je 0xfbe6
0x0000fbd5      4889ca         mov rdx, rcx
0x0000fbd8      4889fe         mov rsi, rdi
0x0000fbdb      48c1fa06       sar rdx, 6
0x0000fbdf      48d3e6         shl rsi, cl
0x0000fbe2      480934d3       or qword [rbx + rdx*8], rsi
0x0000fbe6      4883c101       add rcx, 1
0x0000fbea      4881f9000100.  cmp rcx, 0x100
0x0000fbf1      75db           jne 0xfbce
0x0000fbf3      e93cfcffff     jmp 0xf834
0x0000fbf8      b80c000000     mov eax, 0xc
0x0000fbfd      e934fcffff     jmp 0xf836
0x0000fc02      488d3d62cb00.  lea rdi, str.blank                      ; 0x1c76b ; "blank"
0x0000fc09      b906000000     mov ecx, 6
0x0000fc0e      4c89e6         mov rsi, r12
0x0000fc11      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000fc13      0f97c0         seta al
0x0000fc16      1c00           sbb al, 0
0x0000fc18      84c0           test al, al
0x0000fc1a      0f85ee000000   jne 0xfd0e
0x0000fc20      e8bb24ffff     call sym.imp.__ctype_b_loc
0x0000fc25      31c9           xor ecx, ecx
0x0000fc27      4885ed         test rbp, rbp
0x0000fc2a      488b10         mov rdx, qword [rax]
0x0000fc2d      be01000000     mov esi, 1
0x0000fc32      0f859c000000   jne 0xfcd4
0x0000fc38      f6044a01       test byte [rdx + rcx*2], 1
0x0000fc3c      7411           je 0xfc4f
0x0000fc3e      4889c8         mov rax, rcx
0x0000fc41      4889f7         mov rdi, rsi
0x0000fc44      48c1f806       sar rax, 6
0x0000fc48      48d3e7         shl rdi, cl
0x0000fc4b      48093cc3       or qword [rbx + rax*8], rdi
0x0000fc4f      4883c101       add rcx, 1
0x0000fc53      4881f9000100.  cmp rcx, 0x100
0x0000fc5a      75dc           jne 0xfc38
0x0000fc5c      e9d3fbffff     jmp 0xf834
0x0000fc61      0f1f80000000.  nop dword [rax]
0x0000fc68      31c0           xor eax, eax
0x0000fc6a      f644420104     test byte [rdx + rax*2 + 1], 4
0x0000fc6f      741c           je 0xfc8d
0x0000fc71      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000fc76      4989f9         mov r9, rdi
0x0000fc79      4889ce         mov rsi, rcx
0x0000fc7c      83e13f         and ecx, 0x3f
0x0000fc7f      48c1ee03       shr rsi, 3
0x0000fc83      49d3e1         shl r9, cl
0x0000fc86      83e618         and esi, 0x18
0x0000fc89      4c090c33       or qword [rbx + rsi], r9
0x0000fc8d      4883c001       add rax, 1
0x0000fc91      483d00010000   cmp rax, 0x100
0x0000fc97      75d1           jne 0xfc6a
0x0000fc99      e996fbffff     jmp 0xf834
0x0000fc9e      31c0           xor eax, eax
0x0000fca0      f644420120     test byte [rdx + rax*2 + 1], 0x20
0x0000fca5      741c           je 0xfcc3
0x0000fca7      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000fcac      4989f9         mov r9, rdi
0x0000fcaf      4889ce         mov rsi, rcx
0x0000fcb2      83e13f         and ecx, 0x3f
0x0000fcb5      48c1ee03       shr rsi, 3
0x0000fcb9      49d3e1         shl r9, cl
0x0000fcbc      83e618         and esi, 0x18
0x0000fcbf      4c090c33       or qword [rbx + rsi], r9
0x0000fcc3      4883c001       add rax, 1
0x0000fcc7      483d00010000   cmp rax, 0x100
0x0000fccd      75d1           jne 0xfca0
0x0000fccf      e960fbffff     jmp 0xf834
0x0000fcd4      31c0           xor eax, eax
0x0000fcd6      bf01000000     mov edi, 1
0x0000fcdb      f6044201       test byte [rdx + rax*2], 1
0x0000fcdf      741c           je 0xfcfd
0x0000fce1      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000fce6      4989fe         mov r14, rdi
0x0000fce9      4889ce         mov rsi, rcx
0x0000fcec      83e13f         and ecx, 0x3f
0x0000fcef      48c1ee03       shr rsi, 3
0x0000fcf3      49d3e6         shl r14, cl
0x0000fcf6      83e618         and esi, 0x18
0x0000fcf9      4c093433       or qword [rbx + rsi], r14
0x0000fcfd      4883c001       add rax, 1
0x0000fd01      483d00010000   cmp rax, 0x100
0x0000fd07      75d2           jne 0xfcdb
0x0000fd09      e926fbffff     jmp 0xf834
0x0000fd0e      488d355cca00.  lea rsi, str.graph                      ; 0x1c771 ; "graph"
0x0000fd15      4c89e7         mov rdi, r12
0x0000fd18      e8b321ffff     call sym.imp.strcmp
0x0000fd1d      85c0           test eax, eax
0x0000fd1f      7579           jne 0xfd9a
0x0000fd21      e8ba23ffff     call sym.imp.__ctype_b_loc
0x0000fd26      31c9           xor ecx, ecx
0x0000fd28      4885ed         test rbp, rbp
0x0000fd2b      488b30         mov rsi, qword [rax]
0x0000fd2e      ba01000000     mov edx, 1
0x0000fd33      752a           jne 0xfd5f
0x0000fd35      66833c4e00     cmp word [rsi + rcx*2], 0
0x0000fd3a      7911           jns 0xfd4d
0x0000fd3c      4889c8         mov rax, rcx
0x0000fd3f      4889d7         mov rdi, rdx
0x0000fd42      48c1f806       sar rax, 6
0x0000fd46      48d3e7         shl rdi, cl
0x0000fd49      48093cc3       or qword [rbx + rax*8], rdi
0x0000fd4d      4883c101       add rcx, 1
0x0000fd51      4881f9000100.  cmp rcx, 0x100
0x0000fd58      75db           jne 0xfd35
0x0000fd5a      e9d5faffff     jmp 0xf834
0x0000fd5f      31c0           xor eax, eax
0x0000fd61      bf01000000     mov edi, 1
0x0000fd66      66833c4600     cmp word [rsi + rax*2], 0
0x0000fd6b      791c           jns 0xfd89
0x0000fd6d      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000fd72      4989f9         mov r9, rdi
0x0000fd75      4889ca         mov rdx, rcx
0x0000fd78      83e13f         and ecx, 0x3f
0x0000fd7b      48c1ea03       shr rdx, 3
0x0000fd7f      49d3e1         shl r9, cl
0x0000fd82      83e218         and edx, 0x18
0x0000fd85      4c090c13       or qword [rbx + rdx], r9
0x0000fd89      4883c001       add rax, 1
0x0000fd8d      483d00010000   cmp rax, 0x100
0x0000fd93      75d1           jne 0xfd66
0x0000fd95      e99afaffff     jmp 0xf834
0x0000fd9a      488d35d6c900.  lea rsi, str.punct                      ; 0x1c777 ; "punct"
0x0000fda1      4c89e7         mov rdi, r12
0x0000fda4      e82721ffff     call sym.imp.strcmp
0x0000fda9      85c0           test eax, eax
0x0000fdab      7577           jne 0xfe24
0x0000fdad      e82e23ffff     call sym.imp.__ctype_b_loc
0x0000fdb2      31c9           xor ecx, ecx
0x0000fdb4      4885ed         test rbp, rbp
0x0000fdb7      488b30         mov rsi, qword [rax]
0x0000fdba      ba01000000     mov edx, 1
0x0000fdbf      7529           jne 0xfdea
0x0000fdc1      f6044e04       test byte [rsi + rcx*2], 4
0x0000fdc5      7411           je 0xfdd8
0x0000fdc7      4889c8         mov rax, rcx
0x0000fdca      4889d7         mov rdi, rdx
0x0000fdcd      48c1f806       sar rax, 6
0x0000fdd1      48d3e7         shl rdi, cl
0x0000fdd4      48093cc3       or qword [rbx + rax*8], rdi
0x0000fdd8      4883c101       add rcx, 1
0x0000fddc      4881f9000100.  cmp rcx, 0x100
0x0000fde3      75dc           jne 0xfdc1
0x0000fde5      e94afaffff     jmp 0xf834
0x0000fdea      31c0           xor eax, eax
0x0000fdec      bf01000000     mov edi, 1
0x0000fdf1      f6044604       test byte [rsi + rax*2], 4
0x0000fdf5      741c           je 0xfe13
0x0000fdf7      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000fdfc      4989fe         mov r14, rdi
0x0000fdff      4889ca         mov rdx, rcx
0x0000fe02      83e13f         and ecx, 0x3f
0x0000fe05      48c1ea03       shr rdx, 3
0x0000fe09      49d3e6         shl r14, cl
0x0000fe0c      83e218         and edx, 0x18
0x0000fe0f      4c093413       or qword [rbx + rdx], r14
0x0000fe13      4883c001       add rax, 1
0x0000fe17      483d00010000   cmp rax, 0x100
0x0000fe1d      75d2           jne 0xfdf1
0x0000fe1f      e910faffff     jmp 0xf834
0x0000fe24      488d3552c900.  lea rsi, str.xdigit                     ; 0x1c77d ; "xdigit"
0x0000fe2b      4c89e7         mov rdi, r12
0x0000fe2e      e89d20ffff     call sym.imp.strcmp
0x0000fe33      85c0           test eax, eax
0x0000fe35      7579           jne 0xfeb0
0x0000fe37      e8a422ffff     call sym.imp.__ctype_b_loc
0x0000fe3c      31c9           xor ecx, ecx
0x0000fe3e      4885ed         test rbp, rbp
0x0000fe41      488b30         mov rsi, qword [rax]
0x0000fe44      ba01000000     mov edx, 1
0x0000fe49      752a           jne 0xfe75
0x0000fe4b      f6444e0110     test byte [rsi + rcx*2 + 1], 0x10
0x0000fe50      7411           je 0xfe63
0x0000fe52      4889c8         mov rax, rcx
0x0000fe55      4889d7         mov rdi, rdx
0x0000fe58      48c1f806       sar rax, 6
0x0000fe5c      48d3e7         shl rdi, cl
0x0000fe5f      48093cc3       or qword [rbx + rax*8], rdi
0x0000fe63      4883c101       add rcx, 1
0x0000fe67      4881f9000100.  cmp rcx, 0x100
0x0000fe6e      75db           jne 0xfe4b
0x0000fe70      e9bff9ffff     jmp 0xf834
0x0000fe75      31c0           xor eax, eax
0x0000fe77      bf01000000     mov edi, 1
0x0000fe7c      f644460110     test byte [rsi + rax*2 + 1], 0x10
0x0000fe81      741c           je 0xfe9f
0x0000fe83      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000fe88      4989f9         mov r9, rdi
0x0000fe8b      4889ca         mov rdx, rcx
0x0000fe8e      83e13f         and ecx, 0x3f
0x0000fe91      48c1ea03       shr rdx, 3
0x0000fe95      49d3e1         shl r9, cl
0x0000fe98      83e218         and edx, 0x18
0x0000fe9b      4c090c13       or qword [rbx + rdx], r9
0x0000fe9f      4883c001       add rax, 1
0x0000fea3      483d00010000   cmp rax, 0x100
0x0000fea9      75d1           jne 0xfe7c
0x0000feab      e984f9ffff     jmp 0xf834
0x0000feb0      b804000000     mov eax, 4
0x0000feb5      e97cf9ffff     jmp 0xf836
0x0000feba      31c0           xor eax, eax
0x0000febc      f644420108     test byte [rdx + rax*2 + 1], 8
0x0000fec1      741c           je 0xfedf
0x0000fec3      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000fec8      4989fe         mov r14, rdi
0x0000fecb      4889ce         mov rsi, rcx
0x0000fece      83e13f         and ecx, 0x3f
0x0000fed1      48c1ee03       shr rsi, 3
0x0000fed5      49d3e6         shl r14, cl
0x0000fed8      83e618         and esi, 0x18
0x0000fedb      4c093433       or qword [rbx + rsi], r14
0x0000fedf      4883c001       add rax, 1
0x0000fee3      483d00010000   cmp rax, 0x100
0x0000fee9      75d1           jne 0xfebc
0x0000feeb      e944f9ffff     jmp 0xf834
0x0000fef0      31d2           xor edx, edx
0x0000fef2      f644500101     test byte [rax + rdx*2 + 1], 1
0x0000fef7      741c           je 0xff15
0x0000fef9      0fb64c1500     movzx ecx, byte [rbp + rdx]
0x0000fefe      4989f9         mov r9, rdi
0x0000ff01      4889ce         mov rsi, rcx
0x0000ff04      83e13f         and ecx, 0x3f
0x0000ff07      48c1ee03       shr rsi, 3
0x0000ff0b      49d3e1         shl r9, cl
0x0000ff0e      83e618         and esi, 0x18
0x0000ff11      4c090c33       or qword [rbx + rsi], r9
0x0000ff15      4883c201       add rdx, 1
0x0000ff19      4881fa000100.  cmp rdx, 0x100
0x0000ff20      75d0           jne 0xfef2
0x0000ff22      e90df9ffff     jmp 0xf834
0x0000ff27      31c0           xor eax, eax
0x0000ff29      f644420140     test byte [rdx + rax*2 + 1], 0x40
0x0000ff2e      741c           je 0xff4c
0x0000ff30      0fb64c0500     movzx ecx, byte [rbp + rax]
0x0000ff35      4989fe         mov r14, rdi
0x0000ff38      4889ce         mov rsi, rcx
0x0000ff3b      83e13f         and ecx, 0x3f
0x0000ff3e      48c1ee03       shr rsi, 3
0x0000ff42      49d3e6         shl r14, cl
0x0000ff45      83e618         and esi, 0x18
0x0000ff48      4c093433       or qword [rbx + rsi], r14
0x0000ff4c      4883c001       add rax, 1
0x0000ff50      483d00010000   cmp rax, 0x100
0x0000ff56      75d1           jne 0xff29
0x0000ff58      e9d7f8ffff     jmp 0xf834
0x0000ff5d      0f1f00         nop dword [rax]
;-- build_charclass_op:
0x0000ff60      4157           push r15
0x0000ff62      4156           push r14
0x0000ff64      4989d6         mov r14, rdx
0x0000ff67      4155           push r13
0x0000ff69      4154           push r12
0x0000ff6b      4989cd         mov r13, rcx
0x0000ff6e      55             push rbp
0x0000ff6f      53             push rbx
0x0000ff70      4889fd         mov rbp, rdi
0x0000ff73      bf20000000     mov edi, 0x20                           ; "@"
0x0000ff78      4589c4         mov r12d, r8d
0x0000ff7b      4883ec58       sub rsp, 0x58
0x0000ff7f      48893424       mov qword [rsp], rsi
0x0000ff83      be01000000     mov esi, 1
0x0000ff88      4c894c2408     mov qword [rsp + 8], r9
0x0000ff8d      64488b042528.  mov rax, qword fs:[0x28]
0x0000ff96      4889442448     mov qword [rsp + 0x48], rax
0x0000ff9b      31c0           xor eax, eax
0x0000ff9d      48c744241800.  mov qword [rsp + 0x18], 0
0x0000ffa6      e8151fffff     call sym.imp.calloc
0x0000ffab      4885c0         test rax, rax
0x0000ffae      0f84bc010000   je 0x10170
0x0000ffb4      be01000000     mov esi, 1
0x0000ffb9      bf50000000     mov edi, 0x50                           ; 'P'
0x0000ffbe      4889c3         mov rbx, rax
0x0000ffc1      e8fa1effff     call sym.imp.calloc
0x0000ffc6      4885c0         test rax, rax
0x0000ffc9      4989c7         mov r15, rax
0x0000ffcc      0f84ae010000   je 0x10180
0x0000ffd2      0fb64020       movzx eax, byte [rax + 0x20]
0x0000ffd6      4883ec08       sub rsp, 8
0x0000ffda      4489e2         mov edx, r12d
0x0000ffdd      6a00           push 0
0x0000ffdf      83e201         and edx, 1
0x0000ffe2      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000ffe7      498d4f48       lea rcx, [r15 + 0x48]
0x0000ffeb      4d89f1         mov r9, r14
0x0000ffee      4889de         mov rsi, rbx
0x0000fff1      4c8d442428     lea r8, [rsp + 0x28]
0x0000fff6      83e0fe         and eax, 0xfffffffe                     ; 4294967294
0x0000fff9      09d0           or eax, edx
0x0000fffb      498d5718       lea rdx, [r15 + 0x18]
0x0000ffff      41884720       mov byte [r15 + 0x20], al
0x00010003      e848f7ffff     call sym.build_charclass.isra.29
0x00010008      85c0           test eax, eax
0x0001000a      5a             pop rdx
0x0001000b      59             pop rcx
0x0001000c      0f858e010000   jne 0x101a0
0x00010012      490fbe4d00     movsx rcx, byte [r13]
0x00010017      be01000000     mov esi, 1
0x0001001c      84c9           test cl, cl
0x0001001e      743a           je 0x1005a
0x00010020      488d413f       lea rax, [rcx + 0x3f]
0x00010024      4885c9         test rcx, rcx
0x00010027      4889ca         mov rdx, rcx
0x0001002a      480f49c1       cmovns rax, rcx
0x0001002e      48c1fa3f       sar rdx, 0x3f
0x00010032      4983c501       add r13, 1
0x00010036      48c1ea3a       shr rdx, 0x3a
0x0001003a      48c1f806       sar rax, 6
0x0001003e      4801d1         add rcx, rdx
0x00010041      83e13f         and ecx, 0x3f
0x00010044      4829d1         sub rcx, rdx
0x00010047      4889f2         mov rdx, rsi
0x0001004a      48d3e2         shl rdx, cl
0x0001004d      490fbe4d00     movsx rcx, byte [r13]
0x00010052      480914c3       or qword [rbx + rax*8], rdx
0x00010056      84c9           test cl, cl
0x00010058      75c6           jne 0x10020
0x0001005a      4584e4         test r12b, r12b
0x0001005d      7413           je 0x10072
0x0001005f      488d5320       lea rdx, [rbx + 0x20]
0x00010063      4889d8         mov rax, rbx
0x00010066      48f710         not qword [rax]
0x00010069      4883c008       add rax, 8
0x0001006d      4839c2         cmp rdx, rax
0x00010070      75f4           jne 0x10066
0x00010072      83bdb4000000.  cmp dword [rbp + 0xb4], 1
0x00010079      7e18           jle 0x10093
0x0001007b      488b4d78       mov rcx, qword [rbp + 0x78]
0x0001007f      31c0           xor eax, eax
0x00010081      488b1401       mov rdx, qword [rcx + rax]
0x00010085      48211403       and qword [rbx + rax], rdx
0x00010089      4883c008       add rax, 8
0x0001008d      4883f820       cmp rax, 0x20                           ; "@"
0x00010091      75ee           jne 0x10081
0x00010093      4c8d4c2420     lea r9, [rsp + 0x20]
0x00010098      4c8d6570       lea r12, [rbp + 0x70]
0x0001009c      4c8dad800000.  lea r13, [rbp + 0x80]
0x000100a3      31c9           xor ecx, ecx
0x000100a5      31d2           xor edx, edx
0x000100a7      c644242803     mov byte [rsp + 0x28], 3
0x000100ac      4d89c8         mov r8, r9
0x000100af      4c89ee         mov rsi, r13
0x000100b2      4c89e7         mov rdi, r12
0x000100b5      48895c2420     mov qword [rsp + 0x20], rbx
0x000100ba      4c890c24       mov qword [rsp], r9
0x000100be      e84dcbffff     call sym.create_token_tree.isra.16
0x000100c3      4885c0         test rax, rax
0x000100c6      4989c6         mov r14, rax
0x000100c9      0f8491000000   je 0x10160
0x000100cf      83bdb4000000.  cmp dword [rbp + 0xb4], 1
0x000100d6      7e78           jle 0x10150
0x000100d8      808db0000000.  or byte [rbp + 0xb0], 2
0x000100df      4c8b0c24       mov r9, qword [rsp]
0x000100e3      31c9           xor ecx, ecx
0x000100e5      31d2           xor edx, edx
0x000100e7      4c89ee         mov rsi, r13
0x000100ea      4c89e7         mov rdi, r12
0x000100ed      c644242806     mov byte [rsp + 0x28], 6
0x000100f2      4c897c2420     mov qword [rsp + 0x20], r15
0x000100f7      4d89c8         mov r8, r9
0x000100fa      e811cbffff     call sym.create_token_tree.isra.16
0x000100ff      4885c0         test rax, rax
0x00010102      745c           je 0x10160
0x00010104      4c8d442430     lea r8, [rsp + 0x30]
0x00010109      4c89f2         mov rdx, r14
0x0001010c      4889c1         mov rcx, rax
0x0001010f      4c89ee         mov rsi, r13
0x00010112      4c89e7         mov rdi, r12
0x00010115      c64424380a     mov byte [rsp + 0x38], 0xa
0x0001011a      e8f1caffff     call sym.create_token_tree.isra.16
0x0001011f      4989c6         mov r14, rax
0x00010122      488b7c2448     mov rdi, qword [rsp + 0x48]
0x00010127      6448333c2528.  xor rdi, qword fs:[0x28]
0x00010130      4c89f0         mov rax, r14
0x00010133      0f858c000000   jne 0x101c5
0x00010139      4883c458       add rsp, 0x58
0x0001013d      5b             pop rbx
0x0001013e      5d             pop rbp
0x0001013f      415c           pop r12
0x00010141      415d           pop r13
0x00010143      415e           pop r14
0x00010145      415f           pop r15
0x00010147      c3             ret
0x00010148      0f1f84000000.  nop dword [rax + rax]
0x00010150      4c89ff         mov rdi, r15
0x00010153      e818b5ffff     call sym.free_charset
0x00010158      ebc8           jmp 0x10122
0x0001015a      660f1f440000   nop word [rax + rax]
0x00010160      4889df         mov rdi, rbx
0x00010163      e8f81affff     call sym.imp.free
0x00010168      4c89ff         mov rdi, r15
0x0001016b      e800b5ffff     call sym.free_charset
0x00010170      488b442408     mov rax, qword [rsp + 8]
0x00010175      4531f6         xor r14d, r14d
0x00010178      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0001017e      eba2           jmp 0x10122
0x00010180      4889df         mov rdi, rbx
0x00010183      4531f6         xor r14d, r14d
0x00010186      e8d51affff     call sym.imp.free
0x0001018b      488b442408     mov rax, qword [rsp + 8]
0x00010190      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x00010196      eb8a           jmp 0x10122
0x00010198      0f1f84000000.  nop dword [rax + rax]
0x000101a0      4889df         mov rdi, rbx
0x000101a3      890424         mov dword [rsp], eax
0x000101a6      4531f6         xor r14d, r14d
0x000101a9      e8b21affff     call sym.imp.free
0x000101ae      4c89ff         mov rdi, r15
0x000101b1      e8bab4ffff     call sym.free_charset
0x000101b6      488b7c2408     mov rdi, qword [rsp + 8]
0x000101bb      8b0424         mov eax, dword [rsp]
0x000101be      8907           mov dword [rdi], eax
0x000101c0      e95dffffff     jmp 0x10122
0x000101c5      e8e61bffff     call sym.imp.__stack_chk_fail
0x000101ca      660f1f440000   nop word [rax + rax]
;-- re_compile_fastmap_iter.isra.30:
0x000101d0      4157           push r15
0x000101d2      4156           push r14
0x000101d4      4889f8         mov rax, rdi
0x000101d7      4155           push r13
0x000101d9      4154           push r12
0x000101db      55             push rbp
0x000101dc      53             push rbx
0x000101dd      31db           xor ebx, ebx
0x000101df      4889cd         mov rbp, rcx
0x000101e2      4881ec780100.  sub rsp, 0x178
0x000101e9      488b00         mov rax, qword [rax]
0x000101ec      48897c2430     mov qword [rsp + 0x30], rdi
0x000101f1      4889742420     mov qword [rsp + 0x20], rsi
0x000101f6      64488b3c2528.  mov rdi, qword fs:[0x28]
0x000101ff      4889bc246801.  mov qword [rsp + 0x168], rdi
0x00010207      31ff           xor edi, edi
0x00010209      83b8b4000000.  cmp dword [rax + 0xb4], 1
0x00010210      4889542428     mov qword [rsp + 0x28], rdx
0x00010215      4889442408     mov qword [rsp + 8], rax
0x0001021a      7517           jne 0x10233
0x0001021c      488b442430     mov rax, qword [rsp + 0x30]
0x00010221      488b4018       mov rax, qword [rax + 0x18]
0x00010225      4889c3         mov rbx, rax
0x00010228      48890424       mov qword [rsp], rax
0x0001022c      48c1eb16       shr rbx, 0x16
0x00010230      83e301         and ebx, 1
0x00010233      488b442420     mov rax, qword [rsp + 0x20]
0x00010238      48833800       cmp qword [rax], 0
0x0001023c      0f8e0b040000   jle 0x1064d
0x00010242      488d442458     lea rax, [rsp + 0x58]
0x00010247      48c704240000.  mov qword [rsp], 0
0x0001024f      4889442440     mov qword [rsp + 0x40], rax
0x00010254      488d442454     lea rax, [rsp + 0x54]
0x00010259      4889442448     mov qword [rsp + 0x48], rax
0x0001025e      488d442460     lea rax, [rsp + 0x60]
0x00010263      4889442438     mov qword [rsp + 0x38], rax
0x00010268      eb44           jmp 0x102ae
0x0001026a      660f1f440000   nop word [rax + rax]
0x00010270      83f803         cmp eax, 3
0x00010273      0f84ed020000   je 0x10566
0x00010279      83f806         cmp eax, 6
0x0001027c      0f8486010000   je 0x10408
0x00010282      83e2fd         and edx, 0xfffffffd                     ; 4294967293
0x00010285      80fa05         cmp dl, 5
0x00010288      0f84f6030000   je 0x10684
0x0001028e      83f802         cmp eax, 2
0x00010291      0f844d030000   je 0x105e4
0x00010297      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0001029c      4883042401     add qword [rsp], 1
0x000102a1      488b0424       mov rax, qword [rsp]
0x000102a5      483b07         cmp rax, qword [rdi]
0x000102a8      0f8d9f030000   jge 0x1064d
0x000102ae      488b442428     mov rax, qword [rsp + 0x28]
0x000102b3      488b3c24       mov rdi, qword [rsp]
0x000102b7      488b00         mov rax, qword [rax]
0x000102ba      4c8b24f8       mov r12, qword [rax + rdi*8]
0x000102be      488b442408     mov rax, qword [rsp + 8]
0x000102c3      488b08         mov rcx, qword [rax]
0x000102c6      4c89e0         mov rax, r12
0x000102c9      48c1e004       shl rax, 4
0x000102cd      4889442410     mov qword [rsp + 0x10], rax
0x000102d2      488d3401       lea rsi, [rcx + rax]
0x000102d6      0fb64608       movzx eax, byte [rsi + 8]
0x000102da      83f801         cmp eax, 1
0x000102dd      89c2           mov edx, eax
0x000102df      758f           jne 0x10270
0x000102e1      440fb62e       movzx r13d, byte [rsi]
0x000102e5      85db           test ebx, ebx
0x000102e7      42c6442d0001   mov byte [rbp + r13], 1
0x000102ed      7411           je 0x10300
0x000102ef      e8dc1dffff     call sym.imp.__ctype_tolower_loc
0x000102f4      488b00         mov rax, qword [rax]
0x000102f7      4a6304a8       movsxd rax, dword [rax + r13*4]
0x000102fb      c644050001     mov byte [rbp + rax], 1
0x00010300      488b442430     mov rax, qword [rsp + 0x30]
0x00010305      f6401a40       test byte [rax + 0x1a], 0x40
0x00010309      748c           je 0x10297
0x0001030b      488b742408     mov rsi, qword [rsp + 8]
0x00010310      83beb4000000.  cmp dword [rsi + 0xb4], 1
0x00010317      0f8e7affffff   jle 0x10297
0x0001031d      488b06         mov rax, qword [rsi]
0x00010320      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00010325      0fb61438       movzx edx, byte [rax + rdi]
0x00010329      88542460       mov byte [rsp + 0x60], dl
0x0001032d      498d542401     lea rdx, [r12 + 1]
0x00010332      48395610       cmp qword [rsi + 0x10], rdx
0x00010336      0f863a030000   jbe 0x10676
0x0001033c      488d4c3810     lea rcx, [rax + rdi + 0x10]
0x00010341      8b4108         mov eax, dword [rcx + 8]
0x00010344      25ff002000     and eax, 0x2000ff
0x00010349      3d01002000     cmp eax, 0x200001
0x0001034e      0f8522030000   jne 0x10676
0x00010354      4883c720       add rdi, 0x20                           ; "@"
0x00010358      4989fd         mov r13, rdi
0x0001035b      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00010360      488d4701       lea rax, [rdi + 1]
0x00010364      eb25           jmp 0x1038b
0x00010366      662e0f1f8400.  nop word cs:[rax + rax]
0x00010370      488b0e         mov rcx, qword [rsi]
0x00010373      4c01e9         add rcx, r13
0x00010376      4983c510       add r13, 0x10
0x0001037a      8b5108         mov edx, dword [rcx + 8]
0x0001037d      81e2ff002000   and edx, 0x2000ff
0x00010383      81fa01002000   cmp edx, 0x200001
0x00010389      7519           jne 0x103a4
0x0001038b      0fb611         movzx edx, byte [rcx]
0x0001038e      4883c001       add rax, 1
0x00010392      8850ff         mov byte [rax - 1], dl
0x00010395      4889c2         mov rdx, rax
0x00010398      4829fa         sub rdx, rdi
0x0001039b      4c01e2         add rdx, r12
0x0001039e      48395610       cmp qword [rsi + 0x10], rdx
0x000103a2      77cc           ja 0x10370
0x000103a4      488b742438     mov rsi, qword [rsp + 0x38]
0x000103a9      488b4c2440     mov rcx, qword [rsp + 0x40]
0x000103ae      488b7c2448     mov rdi, qword [rsp + 0x48]
0x000103b3      4829f0         sub rax, rsi
0x000103b6      48c701000000.  mov qword [rcx], 0
0x000103bd      4989c4         mov r12, rax
0x000103c0      4889c2         mov rdx, rax
0x000103c3      e8e89fffff     call sym.rpl_mbrtowc
0x000103c8      4939c4         cmp r12, rax
0x000103cb      0f85c6feffff   jne 0x10297
0x000103d1      8b7c2454       mov edi, dword [rsp + 0x54]
0x000103d5      e8661cffff     call sym.imp.towlower
0x000103da      488b542440     mov rdx, qword [rsp + 0x40]
0x000103df      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000103e4      89c6           mov esi, eax
0x000103e6      e8451bffff     call sym.imp.wcrtomb
0x000103eb      4883f8ff       cmp rax, 0xffffffffffffffff
0x000103ef      0f84a2feffff   je 0x10297
0x000103f5      0fb6442460     movzx eax, byte [rsp + 0x60]
0x000103fa      c644050001     mov byte [rbp + rax], 1
0x000103ff      e993feffff     jmp 0x10297
0x00010404      0f1f4000       nop dword [rax]
0x00010408      488b442408     mov rax, qword [rsp + 8]
0x0001040d      4c8b26         mov r12, qword [rsi]
0x00010410      83b8b4000000.  cmp dword [rax + 0xb4], 1
0x00010417      7e24           jle 0x1043d
0x00010419      49837c244800   cmp qword [r12 + 0x48], 0
0x0001041f      0f85fa000000   jne 0x1051f
0x00010425      41f644242001   test byte [r12 + 0x20], 1
0x0001042b      0f85ee000000   jne 0x1051f
0x00010431      49837c244000   cmp qword [r12 + 0x40], 0
0x00010437      0f85e2000000   jne 0x1051f
0x0001043d      4531ed         xor r13d, r13d
0x00010440      49837c242800   cmp qword [r12 + 0x28], 0
0x00010446      0f8e4bfeffff   jle 0x10297
0x0001044c      4d89e7         mov r15, r12
0x0001044f      4c8b742440     mov r14, qword [rsp + 0x40]
0x00010454      4989ec         mov r12, rbp
0x00010457      4c89ed         mov rbp, r13
0x0001045a      4189dd         mov r13d, ebx
0x0001045d      eb0e           jmp 0x1046d
0x0001045f      4883c501       add rbp, 1
0x00010463      493b6f28       cmp rbp, qword [r15 + 0x28]
0x00010467      0f8da7000000   jge 0x10514
0x0001046d      49c706000000.  mov qword [r14], 0
0x00010474      498b07         mov rax, qword [r15]
0x00010477      4c89f2         mov rdx, r14
0x0001047a      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0001047f      488d1cad0000.  lea rbx, [rbp*4]
0x00010487      8b34a8         mov esi, dword [rax + rbp*4]
0x0001048a      e8a11affff     call sym.imp.wcrtomb
0x0001048f      4883f8ff       cmp rax, 0xffffffffffffffff
0x00010493      742a           je 0x104bf
0x00010495      0fb6542460     movzx edx, byte [rsp + 0x60]
0x0001049a      4585ed         test r13d, r13d
0x0001049d      41c6041401     mov byte [r12 + rdx], 1
0x000104a2      4889542410     mov qword [rsp + 0x10], rdx
0x000104a7      7416           je 0x104bf
0x000104a9      e8221cffff     call sym.imp.__ctype_tolower_loc
0x000104ae      488b542410     mov rdx, qword [rsp + 0x10]
0x000104b3      488b00         mov rax, qword [rax]
0x000104b6      48630490       movsxd rax, dword [rax + rdx*4]
0x000104ba      41c6040401     mov byte [r12 + rax], 1
0x000104bf      488b442430     mov rax, qword [rsp + 0x30]
0x000104c4      f6401a40       test byte [rax + 0x1a], 0x40
0x000104c8      7495           je 0x1045f
0x000104ca      488b442408     mov rax, qword [rsp + 8]
0x000104cf      83b8b4000000.  cmp dword [rax + 0xb4], 1
0x000104d6      7e87           jle 0x1045f
0x000104d8      498b07         mov rax, qword [r15]
0x000104db      8b3c18         mov edi, dword [rax + rbx]
0x000104de      e85d1bffff     call sym.imp.towlower
0x000104e3      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000104e8      4c89f2         mov rdx, r14
0x000104eb      89c6           mov esi, eax
0x000104ed      e83e1affff     call sym.imp.wcrtomb
0x000104f2      4883f8ff       cmp rax, 0xffffffffffffffff
0x000104f6      0f8463ffffff   je 0x1045f
0x000104fc      0fb6442460     movzx eax, byte [rsp + 0x60]
0x00010501      4883c501       add rbp, 1
0x00010505      41c6040401     mov byte [r12 + rax], 1
0x0001050a      493b6f28       cmp rbp, qword [r15 + 0x28]
0x0001050e      0f8c59ffffff   jl 0x1046d
0x00010514      4489eb         mov ebx, r13d
0x00010517      4c89e5         mov rbp, r12
0x0001051a      e978fdffff     jmp 0x10297
0x0001051f      4c8b642440     mov r12, qword [rsp + 0x40]
0x00010524      4c8b6c2448     mov r13, qword [rsp + 0x48]
0x00010529      c644245400     mov byte [rsp + 0x54], 0
0x0001052e      6690           nop
0x00010530      31ff           xor edi, edi
0x00010532      49c704240000.  mov qword [r12], 0
0x0001053a      4c89e1         mov rcx, r12
0x0001053d      ba01000000     mov edx, 1
0x00010542      4c89ee         mov rsi, r13
0x00010545      e8669effff     call sym.rpl_mbrtowc
0x0001054a      4883f8fe       cmp rax, 0xfffffffffffffffe
0x0001054e      750a           jne 0x1055a
0x00010550      0fb6442454     movzx eax, byte [rsp + 0x54]
0x00010555      c644050001     mov byte [rbp + rax], 1
0x0001055a      8044245401     add byte [rsp + 0x54], 1
0x0001055f      75cf           jne 0x10530
0x00010561      e931fdffff     jmp 0x10297
0x00010566      4989ed         mov r13, rbp
0x00010569      4531e4         xor r12d, r12d
0x0001056c      48c744241800.  mov qword [rsp + 0x18], 0
0x00010575      488b442410     mov rax, qword [rsp + 0x10]
0x0001057a      488b742418     mov rsi, qword [rsp + 0x18]
0x0001057f      4531f6         xor r14d, r14d
0x00010582      488b0401       mov rax, qword [rcx + rax]
0x00010586      4c8b3c30       mov r15, qword [rax + rsi]
0x0001058a      660f1f440000   nop word [rax + rax]
0x00010590      4d0fa3f7       bt r15, r14
0x00010594      731f           jae 0x105b5
0x00010596      85db           test ebx, ebx
0x00010598      43c644350001   mov byte [r13 + r14], 1
0x0001059e      7415           je 0x105b5
0x000105a0      e82b1bffff     call sym.imp.__ctype_tolower_loc
0x000105a5      488b00         mov rax, qword [rax]
0x000105a8      4b8d1434       lea rdx, [r12 + r14]
0x000105ac      48630490       movsxd rax, dword [rax + rdx*4]
0x000105b0      c644050001     mov byte [rbp + rax], 1
0x000105b5      4983c601       add r14, 1
0x000105b9      4983fe40       cmp r14, 0x40                           ; segment.PHDR
0x000105bd      75d1           jne 0x10590
0x000105bf      4983c440       add r12, 0x40                           ; segment.PHDR
0x000105c3      488344241808   add qword [rsp + 0x18], 8
0x000105c9      4983c540       add r13, 0x40                           ; segment.PHDR
0x000105cd      4981fc000100.  cmp r12, 0x100
0x000105d4      0f84bdfcffff   je 0x10297
0x000105da      488b442408     mov rax, qword [rsp + 8]
0x000105df      488b08         mov rcx, qword [rax]
0x000105e2      eb91           jmp 0x10575
0x000105e4      660f6f0554c9.  movdqa xmm0, xmmword [0x0001cf40]
0x000105ec      0f114500       movups xmmword [rbp], xmm0
0x000105f0      0f114510       movups xmmword [rbp + 0x10], xmm0
0x000105f4      0f114520       movups xmmword [rbp + 0x20], xmm0
0x000105f8      0f114530       movups xmmword [rbp + 0x30], xmm0
0x000105fc      0f114540       movups xmmword [rbp + 0x40], xmm0
0x00010600      0f114550       movups xmmword [rbp + 0x50], xmm0
0x00010604      0f114560       movups xmmword [rbp + 0x60], xmm0
0x00010608      0f114570       movups xmmword [rbp + 0x70], xmm0
0x0001060c      0f1185800000.  movups xmmword [rbp + 0x80], xmm0
0x00010613      0f1185900000.  movups xmmword [rbp + 0x90], xmm0
0x0001061a      0f1185a00000.  movups xmmword [rbp + 0xa0], xmm0
0x00010621      0f1185b00000.  movups xmmword [rbp + 0xb0], xmm0
0x00010628      0f1185c00000.  movups xmmword [rbp + 0xc0], xmm0
0x0001062f      0f1185d00000.  movups xmmword [rbp + 0xd0], xmm0
0x00010636      0f1185e00000.  movups xmmword [rbp + 0xe0], xmm0
0x0001063d      0f1185f00000.  movups xmmword [rbp + 0xf0], xmm0
0x00010644      488b442430     mov rax, qword [rsp + 0x30]
0x00010649      80483801       or byte [rax + 0x38], 1
0x0001064d      488b84246801.  mov rax, qword [rsp + 0x168]
0x00010655      644833042528.  xor rax, qword fs:[0x28]
0x0001065e      0f858e000000   jne 0x106f2
0x00010664      4881c4780100.  add rsp, 0x178
0x0001066b      5b             pop rbx
0x0001066c      5d             pop rbp
0x0001066d      415c           pop r12
0x0001066f      415d           pop r13
0x00010671      415e           pop r14
0x00010673      415f           pop r15
0x00010675      c3             ret
0x00010676      488b442438     mov rax, qword [rsp + 0x38]
0x0001067b      4883c001       add rax, 1
0x0001067f      e920fdffff     jmp 0x103a4
0x00010684      660f6f05b4c8.  movdqa xmm0, xmmword [0x0001cf40]
0x0001068c      83f802         cmp eax, 2
0x0001068f      0f114500       movups xmmword [rbp], xmm0
0x00010693      0f114510       movups xmmword [rbp + 0x10], xmm0
0x00010697      0f114520       movups xmmword [rbp + 0x20], xmm0
0x0001069b      0f114530       movups xmmword [rbp + 0x30], xmm0
0x0001069f      0f114540       movups xmmword [rbp + 0x40], xmm0
0x000106a3      0f114550       movups xmmword [rbp + 0x50], xmm0
0x000106a7      0f114560       movups xmmword [rbp + 0x60], xmm0
0x000106ab      0f114570       movups xmmword [rbp + 0x70], xmm0
0x000106af      0f1185800000.  movups xmmword [rbp + 0x80], xmm0
0x000106b6      0f1185900000.  movups xmmword [rbp + 0x90], xmm0
0x000106bd      0f1185a00000.  movups xmmword [rbp + 0xa0], xmm0
0x000106c4      0f1185b00000.  movups xmmword [rbp + 0xb0], xmm0
0x000106cb      0f1185c00000.  movups xmmword [rbp + 0xc0], xmm0
0x000106d2      0f1185d00000.  movups xmmword [rbp + 0xd0], xmm0
0x000106d9      0f1185e00000.  movups xmmword [rbp + 0xe0], xmm0
0x000106e0      0f1185f00000.  movups xmmword [rbp + 0xf0], xmm0
0x000106e7      0f8560ffffff   jne 0x1064d
0x000106ed      e952ffffff     jmp 0x10644
0x000106f2      e8b916ffff     call sym.imp.__stack_chk_fail
0x000106f7      660f1f840000.  nop word [rax + rax]
;-- check_node_accept_bytes.isra.31:
0x00010700      48c1e204       shl rdx, 4
0x00010704      4155           push r13
0x00010706      4154           push r12
0x00010708      4c8d0c17       lea r9, [rdi + rdx]
0x0001070c      55             push rbp
0x0001070d      53             push rbx
0x0001070e      4883ec08       sub rsp, 8
0x00010712      450fb65908     movzx r11d, byte [r9 + 8]
0x00010717      4180fb07       cmp r11b, 7
0x0001071b      0f840f010000   je 0x10830
0x00010721      83b990000000.  cmp dword [rcx + 0x90], 1
0x00010728      0f84c2000000   je 0x107f0
0x0001072e      4889f3         mov rbx, rsi
0x00010731      4889cf         mov rdi, rcx
0x00010734      4c89c6         mov rsi, r8
0x00010737      4989ca         mov r10, rcx
0x0001073a      e861b7ffff     call sym.re_string_char_size_at.part.0
0x0001073f      4180fb05       cmp r11b, 5
0x00010743      89c5           mov ebp, eax
0x00010745      0f84b5000000   je 0x10800
0x0001074b      4180fb06       cmp r11b, 6
0x0001074f      0f859b000000   jne 0x107f0
0x00010755      83f801         cmp eax, 1
0x00010758      0f8e92000000   jle 0x107f0
0x0001075e      4d8b29         mov r13, qword [r9]
0x00010761      498b7540       mov rsi, qword [r13 + 0x40]
0x00010765      498b5528       mov rdx, qword [r13 + 0x28]
0x00010769      4885f6         test rsi, rsi
0x0001076c      750b           jne 0x10779
0x0001076e      49837d4800     cmp qword [r13 + 0x48], 0
0x00010773      0f84ef000000   je 0x10868
0x00010779      498b4210       mov rax, qword [r10 + 0x10]
0x0001077d      4885d2         test rdx, rdx
0x00010780      468b2480       mov r12d, dword [rax + r8*4]
0x00010784      7e21           jle 0x107a7
0x00010786      498b4d00       mov rcx, qword [r13]
0x0001078a      443b21         cmp r12d, dword [rcx]
0x0001078d      7453           je 0x107e2
0x0001078f      31c0           xor eax, eax
0x00010791      eb0b           jmp 0x1079e
0x00010793      0f1f440000     nop dword [rax + rax]
0x00010798      443b2481       cmp r12d, dword [rcx + rax*4]
0x0001079c      7444           je 0x107e2
0x0001079e      4883c001       add rax, 1
0x000107a2      4839d0         cmp rax, rdx
0x000107a5      75f1           jne 0x10798
0x000107a7      498b4548       mov rax, qword [r13 + 0x48]
0x000107ab      4885c0         test rax, rax
0x000107ae      0f8ed8000000   jle 0x1088c
0x000107b4      31db           xor ebx, ebx
0x000107b6      eb16           jmp 0x107ce
0x000107b8      0f1f84000000.  nop dword [rax + rax]
0x000107c0      4883c301       add rbx, 1
0x000107c4      493b5d48       cmp rbx, qword [r13 + 0x48]
0x000107c8      0f8dba000000   jge 0x10888
0x000107ce      498b4518       mov rax, qword [r13 + 0x18]
0x000107d2      4489e7         mov edi, r12d
0x000107d5      488b34d8       mov rsi, qword [rax + rbx*8]
0x000107d9      e86215ffff     call sym.imp.iswctype
0x000107de      85c0           test eax, eax
0x000107e0      74de           je 0x107c0
0x000107e2      41f6452001     test byte [r13 + 0x20], 1
0x000107e7      7409           je 0x107f2
0x000107e9      0f1f80000000.  nop dword [rax]
0x000107f0      31ed           xor ebp, ebp
0x000107f2      4883c408       add rsp, 8
0x000107f6      89e8           mov eax, ebp
0x000107f8      5b             pop rbx
0x000107f9      5d             pop rbp
0x000107fa      415c           pop r12
0x000107fc      415d           pop r13
0x000107fe      c3             ret
0x000107ff      90             nop
0x00010800      83f801         cmp eax, 1
0x00010803      7eeb           jle 0x107f0
0x00010805      488b03         mov rax, qword [rbx]
0x00010808      a840           test al, 0x40                           ; segment.PHDR
0x0001080a      7414           je 0x10820
0x0001080c      a880           test al, 0x80
0x0001080e      74e2           je 0x107f2
0x00010810      498b4208       mov rax, qword [r10 + 8]
0x00010814      42803c0000     cmp byte [rax + r8], 0
0x00010819      74d5           je 0x107f0
0x0001081b      ebd5           jmp 0x107f2
0x0001081d      0f1f00         nop dword [rax]
0x00010820      498b5208       mov rdx, qword [r10 + 8]
0x00010824      42803c020a     cmp byte [rdx + r8], 0xa
0x00010829      75e1           jne 0x1080c
0x0001082b      ebc3           jmp 0x107f0
0x0001082d      0f1f00         nop dword [rax]
0x00010830      488b5108       mov rdx, qword [rcx + 8]
0x00010834      4a8d3402       lea rsi, [rdx + r8]
0x00010838      0fb606         movzx eax, byte [rsi]
0x0001083b      3cc1           cmp al, 0xc1
0x0001083d      76b1           jbe 0x107f0
0x0001083f      488b4958       mov rcx, qword [rcx + 0x58]
0x00010843      498d7801       lea rdi, [r8 + 1]
0x00010847      4839cf         cmp rdi, rcx
0x0001084a      7da4           jge 0x107f0
0x0001084c      3cdf           cmp al, 0xdf
0x0001084e      420fb6540201   movzx edx, byte [rdx + r8 + 1]
0x00010854      7768           ja 0x108be
0x00010856      83c280         add edx, 0xffffff80
0x00010859      bd02000000     mov ebp, 2
0x0001085e      80fa3f         cmp dl, 0x3f
0x00010861      778d           ja 0x107f0
0x00010863      eb8d           jmp 0x107f2
0x00010865      0f1f00         nop dword [rax]
0x00010868      4885d2         test rdx, rdx
0x0001086b      0f8508ffffff   jne 0x10779
0x00010871      41f6452001     test byte [r13 + 0x20], 1
0x00010876      0f8576ffffff   jne 0x107f2
0x0001087c      e96fffffff     jmp 0x107f0
0x00010881      0f1f80000000.  nop dword [rax]
0x00010888      498b7540       mov rsi, qword [r13 + 0x40]
0x0001088c      4885f6         test rsi, rsi
0x0001088f      7ee0           jle 0x10871
0x00010891      498b5508       mov rdx, qword [r13 + 8]
0x00010895      31c0           xor eax, eax
0x00010897      eb10           jmp 0x108a9
0x00010899      0f1f80000000.  nop dword [rax]
0x000108a0      4883c001       add rax, 1
0x000108a4      4839f0         cmp rax, rsi
0x000108a7      74c8           je 0x10871
0x000108a9      443b2482       cmp r12d, dword [rdx + rax*4]
0x000108ad      7cf1           jl 0x108a0
0x000108af      498b4d10       mov rcx, qword [r13 + 0x10]
0x000108b3      443b2481       cmp r12d, dword [rcx + rax*4]
0x000108b7      7fe7           jg 0x108a0
0x000108b9      e924ffffff     jmp 0x107e2
0x000108be      3cef           cmp al, 0xef
0x000108c0      7746           ja 0x10908
0x000108c2      3ce0           cmp al, 0xe0
0x000108c4      7509           jne 0x108cf
0x000108c6      80fa9f         cmp dl, 0x9f
0x000108c9      0f8621ffffff   jbe 0x107f0
0x000108cf      bd03000000     mov ebp, 3
0x000108d4      4863fd         movsxd rdi, ebp
0x000108d7      4901f8         add r8, rdi
0x000108da      4c39c1         cmp rcx, r8
0x000108dd      0f8c0dffffff   jl 0x107f0
0x000108e3      b801000000     mov eax, 1
0x000108e8      eb0d           jmp 0x108f7
0x000108ea      4883c001       add rax, 1
0x000108ee      4839c7         cmp rdi, rax
0x000108f1      0f8efbfeffff   jle 0x107f2
0x000108f7      0fb61c06       movzx ebx, byte [rsi + rax]
0x000108fb      8d5380         lea edx, [rbx - 0x80]
0x000108fe      80fa3f         cmp dl, 0x3f
0x00010901      76e7           jbe 0x108ea
0x00010903      e9e8feffff     jmp 0x107f0
0x00010908      3cf7           cmp al, 0xf7
0x0001090a      7714           ja 0x10920
0x0001090c      3cf0           cmp al, 0xf0
0x0001090e      7509           jne 0x10919
0x00010910      80fa8f         cmp dl, 0x8f
0x00010913      0f86d7feffff   jbe 0x107f0
0x00010919      bd04000000     mov ebp, 4
0x0001091e      ebb4           jmp 0x108d4
0x00010920      3cfb           cmp al, 0xfb
0x00010922      7714           ja 0x10938
0x00010924      3cf8           cmp al, 0xf8
0x00010926      7509           jne 0x10931
0x00010928      80fa87         cmp dl, 0x87
0x0001092b      0f86bffeffff   jbe 0x107f0
0x00010931      bd05000000     mov ebp, 5
0x00010936      eb9c           jmp 0x108d4
0x00010938      3cfd           cmp al, 0xfd
0x0001093a      0f87b0feffff   ja 0x107f0
0x00010940      3cfc           cmp al, 0xfc
0x00010942      7509           jne 0x1094d
0x00010944      80fa83         cmp dl, 0x83
0x00010947      0f86a3feffff   jbe 0x107f0
0x0001094d      bd06000000     mov ebp, 6
0x00010952      eb80           jmp 0x108d4
0x00010954      6690           nop
0x00010956      662e0f1f8400.  nop word cs:[rax + rax]
;-- check_arrival:
0x00010960      4157           push r15
0x00010962      4156           push r14
0x00010964      4989ff         mov r15, rdi
0x00010967      4155           push r13
0x00010969      4154           push r12
0x0001096b      55             push rbp
0x0001096c      53             push rbx
0x0001096d      4889cd         mov rbp, rcx
0x00010970      4889d3         mov rbx, rdx
0x00010973      4881ecd80000.  sub rsp, 0xd8
0x0001097a      488b8f980000.  mov rcx, qword [rdi + 0x98]
0x00010981      4c8b6e08       mov r13, qword [rsi + 8]
0x00010985      64488b042528.  mov rax, qword fs:[0x28]
0x0001098e      48898424c800.  mov qword [rsp + 0xc8], rax
0x00010996      31c0           xor eax, eax
0x00010998      4889d0         mov rax, rdx
0x0001099b      4889742460     mov qword [rsp + 0x60], rsi
0x000109a0      4c89442478     mov qword [rsp + 0x78], r8
0x000109a5      48c1e004       shl rax, 4
0x000109a9      480301         add rax, qword [rcx]
0x000109ac      4c894c2440     mov qword [rsp + 0x40], r9
0x000109b1      48894c2430     mov qword [rsp + 0x30], rcx
0x000109b6      c78424880000.  mov dword [rsp + 0x88], 0
0x000109c1      488b00         mov rax, qword [rax]
0x000109c4      4889442448     mov qword [rsp + 0x48], rax
0x000109c9      486387e00000.  movsxd rax, dword [rdi + 0xe0]
0x000109d0      4c01c8         add rax, r9
0x000109d3      4c39e8         cmp rax, r13
0x000109d6      0f8d1a060000   jge 0x10ff6
0x000109dc      488b442460     mov rax, qword [rsp + 0x60]
0x000109e1      498b97b80000.  mov rdx, qword [r15 + 0xb8]
0x000109e8      498b4f48       mov rcx, qword [r15 + 0x48]
0x000109ec      4c8b20         mov r12, qword [rax]
0x000109ef      4c8b7010       mov r14, qword [rax + 0x10]
0x000109f3      4889542468     mov qword [rsp + 0x68], rdx
0x000109f8      48894c2470     mov qword [rsp + 0x70], rcx
0x000109fd      418b97a00000.  mov edx, dword [r15 + 0xa0]
0x00010a04      4d85e4         test r12, r12
0x00010a07      4d89b7b80000.  mov qword [r15 + 0xb8], r14
0x00010a0e      0f84dc030000   je 0x10df0
0x00010a14      498d7424ff     lea rsi, [r12 - 1]
0x00010a19      4d896748       mov qword [r15 + 0x48], r12
0x00010a1d      4c89ff         mov rdi, r15
0x00010a20      e80bd3ffff     call sym.re_string_context_at
0x00010a25      4939ec         cmp r12, rbp
0x00010a28      4189c5         mov r13d, eax
0x00010a2b      0f84d2030000   je 0x10e03
0x00010a31      4b8b2ce6       mov rbp, qword [r14 + r12*8]
0x00010a35      4885ed         test rbp, rbp
0x00010a38      740a           je 0x10a44
0x00010a3a      f6456840       test byte [rbp + 0x68], 0x40
0x00010a3e      0f851c050000   jne 0x10f60
0x00010a44      660fefc0       pxor xmm0, xmm0
0x00010a48      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00010a54      0f2984249000.  movaps xmmword [rsp + 0x90], xmm0
0x00010a5c      4c3b642440     cmp r12, qword [rsp + 0x40]
0x00010a61      0f8d21030000   jge 0x10d88
0x00010a67      418b8fe00000.  mov ecx, dword [r15 + 0xe0]
0x00010a6e      85c9           test ecx, ecx
0x00010a70      0f8812030000   js 0x10d88
0x00010a76      488d9c249000.  lea rbx, [rsp + 0x90]
0x00010a7e      4a8d04e50800.  lea rax, [r12*8 + 8]
0x00010a86      4c892424       mov qword [rsp], r12
0x00010a8a      48c744242000.  mov qword [rsp + 0x20], 0
0x00010a93      48895c2408     mov qword [rsp + 8], rbx
0x00010a98      488d9c24b000.  lea rbx, [rsp + 0xb0]
0x00010aa0      4889442410     mov qword [rsp + 0x10], rax
0x00010aa5      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x00010aac      48895c2418     mov qword [rsp + 0x18], rbx
0x00010ab1      488d9c248c00.  lea rbx, [rsp + 0x8c]
0x00010ab9      48895c2458     mov qword [rsp + 0x58], rbx
0x00010abe      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00010ac3      48c784249800.  mov qword [rsp + 0x98], 0
0x00010acf      488b3408       mov rsi, qword [rax + rcx]
0x00010ad3      4885f6         test rsi, rsi
0x00010ad6      0f84bc030000   je 0x10e98
0x00010adc      488b7c2408     mov rdi, qword [rsp + 8]
0x00010ae1      4883c608       add rsi, 8
0x00010ae5      e886b9ffff     call sym.re_node_set_merge
0x00010aea      85c0           test eax, eax
0x00010aec      898424880000.  mov dword [rsp + 0x88], eax
0x00010af3      0f85d7030000   jne 0x10ed0
0x00010af9      4885ed         test rbp, rbp
0x00010afc      0f84a6010000   je 0x10ca8
0x00010b02      48837d2800     cmp qword [rbp + 0x28], 0
0x00010b07      488b442418     mov rax, qword [rsp + 0x18]
0x00010b0c      660fefc0       pxor xmm0, xmm0
0x00010b10      4d8ba7980000.  mov r12, qword [r15 + 0x98]
0x00010b17      c784248c0000.  mov dword [rsp + 0x8c], 0
0x00010b22      48c740100000.  mov qword [rax + 0x10], 0
0x00010b2a      0f2900         movaps xmmword [rax], xmm0
0x00010b2d      0f8e2d050000   jle 0x11060
0x00010b33      498d8424d800.  lea rax, [r12 + 0xd8]
0x00010b3b      31db           xor ebx, ebx
0x00010b3d      4889442428     mov qword [rsp + 0x28], rax
0x00010b42      eb45           jmp 0x10b89
0x00010b44      0f1f4000       nop dword [rax]
0x00010b48      488b1424       mov rdx, qword [rsp]
0x00010b4c      4c89ff         mov rdi, r15
0x00010b4f      e8ccd2ffff     call sym.check_node_accept
0x00010b54      84c0           test al, al
0x00010b56      7423           je 0x10b7b
0x00010b58      4e8d2cf50000.  lea r13, [r14*8]
0x00010b60      498b442418     mov rax, qword [r12 + 0x18]
0x00010b65      488b7c2408     mov rdi, qword [rsp + 8]
0x00010b6a      4a8b3428       mov rsi, qword [rax + r13]
0x00010b6e      e89d9effff     call sym.re_node_set_insert
0x00010b73      84c0           test al, al
0x00010b75      0f843d030000   je 0x10eb8
0x00010b7b      4883c301       add rbx, 1
0x00010b7f      483b5d28       cmp rbx, qword [rbp + 0x28]
0x00010b83      0f8d87030000   jge 0x10f10
0x00010b89      488b4530       mov rax, qword [rbp + 0x30]
0x00010b8d      498b3c24       mov rdi, qword [r12]
0x00010b91      4c8b34d8       mov r14, qword [rax + rbx*8]
0x00010b95      4d89f5         mov r13, r14
0x00010b98      49c1e504       shl r13, 4
0x00010b9c      4a8d342f       lea rsi, [rdi + r13]
0x00010ba0      f6460a10       test byte [rsi + 0xa], 0x10
0x00010ba4      74a2           je 0x10b48
0x00010ba6      4c8b0424       mov r8, qword [rsp]
0x00010baa      488b742428     mov rsi, qword [rsp + 0x28]
0x00010baf      4c89f9         mov rcx, r15
0x00010bb2      4c89f2         mov rdx, r14
0x00010bb5      e846fbffff     call sym.check_node_accept_bytes.isra.31
0x00010bba      83f801         cmp eax, 1
0x00010bbd      0f8ebd020000   jle 0x10e80
0x00010bc3      4898           cdqe
0x00010bc5      48030424       add rax, qword [rsp]
0x00010bc9      498b542418     mov rdx, qword [r12 + 0x18]
0x00010bce      4e8d2cf50000.  lea r13, [r14*8]
0x00010bd6      4a8b14f2       mov rdx, qword [rdx + r14*8]
0x00010bda      4889c1         mov rcx, rax
0x00010bdd      4889442438     mov qword [rsp + 0x38], rax
0x00010be2      4c8d34c50000.  lea r14, [rax*8]
0x00010bea      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x00010bf1      488b34c8       mov rsi, qword [rax + rcx*8]
0x00010bf5      48c78424b800.  mov qword [rsp + 0xb8], 0
0x00010c01      4885f6         test rsi, rsi
0x00010c04      7423           je 0x10c29
0x00010c06      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00010c0b      4883c608       add rsi, 8
0x00010c0f      4889542450     mov qword [rsp + 0x50], rdx
0x00010c14      e857b8ffff     call sym.re_node_set_merge
0x00010c19      85c0           test eax, eax
0x00010c1b      8984248c0000.  mov dword [rsp + 0x8c], eax
0x00010c22      488b542450     mov rdx, qword [rsp + 0x50]
0x00010c27      7557           jne 0x10c80
0x00010c29      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00010c2e      4889d6         mov rsi, rdx
0x00010c31      e8da9dffff     call sym.re_node_set_insert
0x00010c36      84c0           test al, al
0x00010c38      0f847a020000   je 0x10eb8
0x00010c3e      4d03b7b80000.  add r14, qword [r15 + 0xb8]
0x00010c45      488b542418     mov rdx, qword [rsp + 0x18]
0x00010c4a      4c89e6         mov rsi, r12
0x00010c4d      488b7c2458     mov rdi, qword [rsp + 0x58]
0x00010c52      e809c9ffff     call sym.re_acquire_state
0x00010c57      488b542438     mov rdx, qword [rsp + 0x38]
0x00010c5c      498906         mov qword [r14], rax
0x00010c5f      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x00010c66      48833cd000     cmp qword [rax + rdx*8], 0
0x00010c6b      0f85effeffff   jne 0x10b60
0x00010c71      8b94248c0000.  mov edx, dword [rsp + 0x8c]
0x00010c78      85d2           test edx, edx
0x00010c7a      0f84e0feffff   je 0x10b60
0x00010c80      488bbc24c000.  mov rdi, qword [rsp + 0xc0]
0x00010c88      e8d30fffff     call sym.imp.free
0x00010c8d      8b84248c0000.  mov eax, dword [rsp + 0x8c]
0x00010c94      85c0           test eax, eax
0x00010c96      898424880000.  mov dword [rsp + 0x88], eax
0x00010c9d      0f852d020000   jne 0x10ed0
0x00010ca3      0f1f440000     nop dword [rax + rax]
0x00010ca8      488b0424       mov rax, qword [rsp]
0x00010cac      4883bc249800.  cmp qword [rsp + 0x98], 0
0x00010cb5      488d5801       lea rbx, [rax + 1]
0x00010cb9      4989dc         mov r12, rbx
0x00010cbc      7456           je 0x10d14
0x00010cbe      8b8c24100100.  mov ecx, dword [rsp + 0x110]
0x00010cc5      488b542448     mov rdx, qword [rsp + 0x48]
0x00010cca      488b742408     mov rsi, qword [rsp + 8]
0x00010ccf      488b7c2430     mov rdi, qword [rsp + 0x30]
0x00010cd4      e827bcffff     call sym.check_arrival_expand_ecl
0x00010cd9      85c0           test eax, eax
0x00010cdb      898424880000.  mov dword [rsp + 0x88], eax
0x00010ce2      0f85e8010000   jne 0x10ed0
0x00010ce8      448b84241001.  mov r8d, dword [rsp + 0x110]
0x00010cf0      488b4c2448     mov rcx, qword [rsp + 0x48]
0x00010cf5      4889da         mov rdx, rbx
0x00010cf8      488b742408     mov rsi, qword [rsp + 8]
0x00010cfd      4c89ff         mov rdi, r15
0x00010d00      e83bcbffff     call sym.expand_bkref_cache
0x00010d05      85c0           test eax, eax
0x00010d07      898424880000.  mov dword [rsp + 0x88], eax
0x00010d0e      0f85bc010000   jne 0x10ed0
0x00010d14      418b97a00000.  mov edx, dword [r15 + 0xa0]
0x00010d1b      488b3424       mov rsi, qword [rsp]
0x00010d1f      4c89ff         mov rdi, r15
0x00010d22      e809d0ffff     call sym.re_string_context_at
0x00010d27      488b542408     mov rdx, qword [rsp + 8]
0x00010d2c      488b742430     mov rsi, qword [rsp + 0x30]
0x00010d31      488dbc248800.  lea rdi, [rsp + 0x88]
0x00010d39      89c1           mov ecx, eax
0x00010d3b      e860c5ffff     call sym.re_acquire_state_context
0x00010d40      4885c0         test rax, rax
0x00010d43      4889c5         mov rbp, rax
0x00010d46      0f84e4010000   je 0x10f30
0x00010d4c      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x00010d53      488b542410     mov rdx, qword [rsp + 0x10]
0x00010d58      48c744242000.  mov qword [rsp + 0x20], 0
0x00010d61      48892c10       mov qword [rax + rdx], rbp
0x00010d65      48395c2440     cmp qword [rsp + 0x40], rbx
0x00010d6a      7e1c           jle 0x10d88
0x00010d6c      496397e00000.  movsxd rdx, dword [r15 + 0xe0]
0x00010d73      488344241008   add qword [rsp + 0x10], 8
0x00010d79      483b542420     cmp rdx, qword [rsp + 0x20]
0x00010d7e      48891c24       mov qword [rsp], rbx
0x00010d82      0f8d36fdffff   jge 0x10abe
0x00010d88      488bbc24a000.  mov rdi, qword [rsp + 0xa0]
0x00010d90      e8cb0effff     call sym.imp.free
0x00010d95      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x00010d9c      488b5c2440     mov rbx, qword [rsp + 0x40]
0x00010da1      488b04d8       mov rax, qword [rax + rbx*8]
0x00010da5      4885c0         test rax, rax
0x00010da8      0f84d7020000   je 0x11085
0x00010dae      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00010db3      488b542478     mov rdx, qword [rsp + 0x78]
0x00010db8      488d7018       lea rsi, [rax + 0x18]
0x00010dbc      4c8923         mov qword [rbx], r12
0x00010dbf      488b5c2468     mov rbx, qword [rsp + 0x68]
0x00010dc4      49899fb80000.  mov qword [r15 + 0xb8], rbx
0x00010dcb      488b5c2470     mov rbx, qword [rsp + 0x70]
0x00010dd0      49895f48       mov qword [r15 + 0x48], rbx
0x00010dd4      488b7810       mov rdi, qword [rax + 0x10]
0x00010dd8      e873b1ffff     call sym.re_node_set_contains.isra.3
0x00010ddd      4885c0         test rax, rax
0x00010de0      0f94c0         sete al
0x00010de3      0fb6c0         movzx eax, al
0x00010de6      e9f9000000     jmp 0x10ee4
0x00010deb      0f1f440000     nop dword [rax + rax]
0x00010df0      488d75ff       lea rsi, [rbp - 1]
0x00010df4      49896f48       mov qword [r15 + 0x48], rbp
0x00010df8      4c89ff         mov rdi, r15
0x00010dfb      e830cfffff     call sym.re_string_context_at
0x00010e00      4189c5         mov r13d, eax
0x00010e03      bf08000000     mov edi, 8
0x00010e08      48c784249000.  mov qword [rsp + 0x90], 1
0x00010e14      48c784249800.  mov qword [rsp + 0x98], 1
0x00010e20      e8fb10ffff     call sym.imp.malloc
0x00010e25      4885c0         test rax, rax
0x00010e28      48898424a000.  mov qword [rsp + 0xa0], rax
0x00010e30      0f8445020000   je 0x1107b
0x00010e36      488918         mov qword [rax], rbx
0x00010e39      8b8c24100100.  mov ecx, dword [rsp + 0x110]
0x00010e40      488d9c249000.  lea rbx, [rsp + 0x90]
0x00010e48      488b542448     mov rdx, qword [rsp + 0x48]
0x00010e4d      488b7c2430     mov rdi, qword [rsp + 0x30]
0x00010e52      4989ec         mov r12, rbp
0x00010e55      4889de         mov rsi, rbx
0x00010e58      c78424880000.  mov dword [rsp + 0x88], 0
0x00010e63      e898baffff     call sym.check_arrival_expand_ecl
0x00010e68      85c0           test eax, eax
0x00010e6a      898424880000.  mov dword [rsp + 0x88], eax
0x00010e71      0f8416010000   je 0x10f8d
0x00010e77      eb57           jmp 0x10ed0
0x00010e79      0f1f80000000.  nop dword [rax]
0x00010e80      85c0           test eax, eax
0x00010e82      0f85d0fcffff   jne 0x10b58
0x00010e88      498b3424       mov rsi, qword [r12]
0x00010e8c      4c01ee         add rsi, r13
0x00010e8f      e9b4fcffff     jmp 0x10b48
0x00010e94      0f1f4000       nop dword [rax]
0x00010e98      4885ed         test rbp, rbp
0x00010e9b      0f8561fcffff   jne 0x10b02
0x00010ea1      488b0424       mov rax, qword [rsp]
0x00010ea5      488d5801       lea rbx, [rax + 1]
0x00010ea9      4989dc         mov r12, rbx
0x00010eac      e963feffff     jmp 0x10d14
0x00010eb1      0f1f80000000.  nop dword [rax]
0x00010eb8      488bbc24c000.  mov rdi, qword [rsp + 0xc0]
0x00010ec0      e89b0dffff     call sym.imp.free
0x00010ec5      c78424880000.  mov dword [rsp + 0x88], 0xc             ; [0xc:4]=0
0x00010ed0      488bbc24a000.  mov rdi, qword [rsp + 0xa0]
0x00010ed8      e8830dffff     call sym.imp.free
0x00010edd      8b8424880000.  mov eax, dword [rsp + 0x88]
0x00010ee4      488b9c24c800.  mov rbx, qword [rsp + 0xc8]
0x00010eec      6448331c2528.  xor rbx, qword fs:[0x28]
0x00010ef5      0f85b1010000   jne 0x110ac
0x00010efb      4881c4d80000.  add rsp, 0xd8
0x00010f02      5b             pop rbx
0x00010f03      5d             pop rbp
0x00010f04      415c           pop r12
0x00010f06      415d           pop r13
0x00010f08      415e           pop r14
0x00010f0a      415f           pop r15
0x00010f0c      c3             ret
0x00010f0d      0f1f00         nop dword [rax]
0x00010f10      488bbc24c000.  mov rdi, qword [rsp + 0xc0]
0x00010f18      e8430dffff     call sym.imp.free
0x00010f1d      c78424880000.  mov dword [rsp + 0x88], 0
0x00010f28      e97bfdffff     jmp 0x10ca8
0x00010f2d      0f1f00         nop dword [rax]
0x00010f30      8b8424880000.  mov eax, dword [rsp + 0x88]
0x00010f37      85c0           test eax, eax
0x00010f39      7595           jne 0x10ed0
0x00010f3b      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x00010f42      488b542410     mov rdx, qword [rsp + 0x10]
0x00010f47      488344242001   add qword [rsp + 0x20], 1
0x00010f4d      48c704100000.  mov qword [rax + rdx], 0
0x00010f55      e90bfeffff     jmp 0x10d65
0x00010f5a      660f1f440000   nop word [rax + rax]
0x00010f60      488d9c249000.  lea rbx, [rsp + 0x90]
0x00010f68      488d7508       lea rsi, [rbp + 8]
0x00010f6c      4889df         mov rdi, rbx
0x00010f6f      e83cc1ffff     call sym.re_node_set_init_copy
0x00010f74      85c0           test eax, eax
0x00010f76      898424880000.  mov dword [rsp + 0x88], eax
0x00010f7d      0f8561ffffff   jne 0x10ee4
0x00010f83      f6456840       test byte [rbp + 0x68], 0x40
0x00010f87      0f84cffaffff   je 0x10a5c
0x00010f8d      4883bc249800.  cmp qword [rsp + 0x98], 0
0x00010f96      742a           je 0x10fc2
0x00010f98      448b84241001.  mov r8d, dword [rsp + 0x110]
0x00010fa0      488b4c2448     mov rcx, qword [rsp + 0x48]
0x00010fa5      4c89e2         mov rdx, r12
0x00010fa8      4889de         mov rsi, rbx
0x00010fab      4c89ff         mov rdi, r15
0x00010fae      e88dc8ffff     call sym.expand_bkref_cache
0x00010fb3      85c0           test eax, eax
0x00010fb5      898424880000.  mov dword [rsp + 0x88], eax
0x00010fbc      0f850effffff   jne 0x10ed0
0x00010fc2      488b742430     mov rsi, qword [rsp + 0x30]
0x00010fc7      488dbc248800.  lea rdi, [rsp + 0x88]
0x00010fcf      4489e9         mov ecx, r13d
0x00010fd2      4889da         mov rdx, rbx
0x00010fd5      e8c6c2ffff     call sym.re_acquire_state_context
0x00010fda      4885c0         test rax, rax
0x00010fdd      4889c5         mov rbp, rax
0x00010fe0      0f8481000000   je 0x11067
0x00010fe6      498b87b80000.  mov rax, qword [r15 + 0xb8]
0x00010fed      4a892ce0       mov qword [rax + r12*8], rbp
0x00010ff1      e966faffff     jmp 0x10a5c
0x00010ff6      4c8d6001       lea r12, [rax + 1]
0x00010ffa      48b8ffffffff.  movabs rax, 0x7fffffffffffffff          ; 9223372036854775807
0x00011004      4c29e8         sub rax, r13
0x00011007      4c39e0         cmp rax, r12
0x0001100a      7c6f           jl 0x1107b
0x0001100c      4f8d742500     lea r14, [r13 + r12]
0x00011011      48b8ffffffff.  movabs rax, 0x1fffffffffffffff          ; 2305843009213693951
0x0001101b      4939c6         cmp r14, rax
0x0001101e      775b           ja 0x1107b
0x00011020      488b442460     mov rax, qword [rsp + 0x60]
0x00011025      4a8d34f50000.  lea rsi, [r14*8]
0x0001102d      488b7810       mov rdi, qword [rax + 0x10]
0x00011031      e85a0fffff     call sym.imp.realloc
0x00011036      4885c0         test rax, rax
0x00011039      7440           je 0x1107b
0x0001103b      488b4c2460     mov rcx, qword [rsp + 0x60]
0x00011040      4a8d14e50000.  lea rdx, [r12*8]
0x00011048      4a8d3ce8       lea rdi, [rax + r13*8]
0x0001104c      31f6           xor esi, esi
0x0001104e      48894110       mov qword [rcx + 0x10], rax
0x00011052      4c897108       mov qword [rcx + 8], r14
0x00011056      e8e50dffff     call sym.imp.memset
0x0001105b      e97cf9ffff     jmp 0x109dc
0x00011060      31ff           xor edi, edi
0x00011062      e9b1feffff     jmp 0x10f18
0x00011067      8bb424880000.  mov esi, dword [rsp + 0x88]
0x0001106e      85f6           test esi, esi
0x00011070      0f8470ffffff   je 0x10fe6
0x00011076      e955feffff     jmp 0x10ed0
0x0001107b      b80c000000     mov eax, 0xc
0x00011080      e95ffeffff     jmp 0x10ee4
0x00011085      488b442460     mov rax, qword [rsp + 0x60]
0x0001108a      4c8920         mov qword [rax], r12
0x0001108d      488b442468     mov rax, qword [rsp + 0x68]
0x00011092      498987b80000.  mov qword [r15 + 0xb8], rax
0x00011099      488b442470     mov rax, qword [rsp + 0x70]
0x0001109e      49894748       mov qword [r15 + 0x48], rax
0x000110a2      b801000000     mov eax, 1
0x000110a7      e938feffff     jmp 0x10ee4
0x000110ac      e8ff0cffff     call sym.imp.__stack_chk_fail
0x000110b1      0f1f440000     nop dword [rax + rax]
0x000110b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_regs:
0x000110c0      55             push rbp
0x000110c1      4889e5         mov rbp, rsp
0x000110c4      4157           push r15
0x000110c6      4156           push r14
0x000110c8      4155           push r13
0x000110ca      4154           push r12
0x000110cc      4989cd         mov r13, rcx
0x000110cf      53             push rbx
0x000110d0      4989f4         mov r12, rsi
0x000110d3      4881ecb80000.  sub rsp, 0xb8
0x000110da      48899568ffff.  mov qword [rbp - 0x98], rdx
0x000110e1      48c745b00000.  mov qword [rbp - 0x50], 0
0x000110e9      64488b042528.  mov rax, qword fs:[0x28]
0x000110f2      488945c8       mov qword [rbp - 0x38], rax
0x000110f6      31c0           xor eax, eax
0x000110f8      488b07         mov rax, qword [rdi]
0x000110fb      4584c0         test r8b, r8b
0x000110fe      48c745b80200.  mov qword [rbp - 0x48], 2
0x00011106      48c745c00000.  mov qword [rbp - 0x40], 0
0x0001110e      48898570ffff.  mov qword [rbp - 0x90], rax
0x00011115      0f84a2070000   je 0x118bd
0x0001111b      bf60000000     mov edi, 0x60                           ; '`'
0x00011120      e8fb0dffff     call sym.imp.malloc
0x00011125      488d4db0       lea rcx, [rbp - 0x50]
0x00011129      4885c0         test rax, rax
0x0001112c      488945c0       mov qword [rbp - 0x40], rax
0x00011130      48898d78ffff.  mov qword [rbp - 0x88], rcx
0x00011137      0f841f070000   je 0x1185c
0x0001113d      488b8570ffff.  mov rax, qword [rbp - 0x90]
0x00011144      660fefc0       pxor xmm0, xmm0
0x00011148      48c745a00000.  mov qword [rbp - 0x60], 0
0x00011150      488b98900000.  mov rbx, qword [rax + 0x90]
0x00011157      488b8568ffff.  mov rax, qword [rbp - 0x98]
0x0001115e      0f294590       movaps xmmword [rbp - 0x70], xmm0
0x00011162      48c1e004       shl rax, 4
0x00011166      483dbf0f0000   cmp rax, 0xfbf
0x0001116c      48898548ffff.  mov qword [rbp - 0xb8], rax
0x00011173      0f87ed060000   ja 0x11866
0x00011179      4883c010       add rax, 0x10
0x0001117d      c68537ffffff.  mov byte [rbp - 0xc9], 0
0x00011184      4829c4         sub rsp, rax
0x00011187      488d44240f     lea rax, [rsp + 0xf]
0x0001118c      4883e0f0       and rax, 0xfffffffffffffff0
0x00011190      48898540ffff.  mov qword [rbp - 0xc0], rax
0x00011197      488b9548ffff.  mov rdx, qword [rbp - 0xb8]
0x0001119e      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x000111a5      4c89ee         mov rsi, r13
0x000111a8      e8330dffff     call sym.imp.memcpy
0x000111ad      488d4590       lea rax, [rbp - 0x70]
0x000111b1      498b4d00       mov rcx, qword [r13]
0x000111b5      48898558ffff.  mov qword [rbp - 0xa8], rax
0x000111bc      4883c010       add rax, 0x10
0x000111c0      48894d88       mov qword [rbp - 0x78], rcx
0x000111c4      48898538ffff.  mov qword [rbp - 0xc8], rax
0x000111cb      488d4588       lea rax, [rbp - 0x78]
0x000111cf      48898550ffff.  mov qword [rbp - 0xb0], rax
0x000111d6      e9de000000     jmp 0x112b9
0x000111db      0f1f440000     nop dword [rax + rax]
0x000111e0      83fe09         cmp esi, 9
0x000111e3      0f84e7010000   je 0x113d0
0x000111e9      4839c8         cmp rax, rcx
0x000111ec      750e           jne 0x111fc
0x000111ee      49399c24b000.  cmp qword [r12 + 0xb0], rbx
0x000111f6      0f84d4030000   je 0x115d0
0x000111fc      4d8bb4249800.  mov r14, qword [r12 + 0x98]
0x00011204      498b3e         mov rdi, qword [r14]
0x00011207      4a8d340f       lea rsi, [rdi + r9]
0x0001120b      0fb64608       movzx eax, byte [rsi + 8]
0x0001120f      a808           test al, 8
0x00011211      0f8509010000   jne 0x11320
0x00011217      f6460a10       test byte [rsi + 0xa], 0x10
0x0001121b      0f85ff010000   jne 0x11420
0x00011221      3c04           cmp al, 4
0x00011223      0f8437020000   je 0x11460
0x00011229      488b4d88       mov rcx, qword [rbp - 0x78]
0x0001122d      4889ca         mov rdx, rcx
0x00011230      4c89e7         mov rdi, r12
0x00011233      48898d60ffff.  mov qword [rbp - 0xa0], rcx
0x0001123a      e8e1cbffff     call sym.check_node_accept
0x0001123f      84c0           test al, al
0x00011241      488b8d60ffff.  mov rcx, qword [rbp - 0xa0]
0x00011248      0f844a040000   je 0x11698
0x0001124e      498b4618       mov rax, qword [r14 + 0x18]
0x00011252      488d5101       lea rdx, [rcx + 1]
0x00011256      4a8b1cf8       mov rbx, qword [rax + r15*8]
0x0001125a      4883bd78ffff.  cmp qword [rbp - 0x88], 0
0x00011262      48895588       mov qword [rbp - 0x78], rdx
0x00011266      743c           je 0x112a4
0x00011268      493b9424a800.  cmp rdx, qword [r12 + 0xa8]
0x00011270      0f8f30040000   jg 0x116a6
0x00011276      498b8424b800.  mov rax, qword [r12 + 0xb8]
0x0001127e      488b04d0       mov rax, qword [rax + rdx*8]
0x00011282      4885c0         test rax, rax
0x00011285      0f841b040000   je 0x116a6
0x0001128b      488b7810       mov rdi, qword [rax + 0x10]
0x0001128f      488d7018       lea rsi, [rax + 0x18]
0x00011293      4889da         mov rdx, rbx
0x00011296      e8b5acffff     call sym.re_node_set_contains.isra.3
0x0001129b      4885c0         test rax, rax
0x0001129e      0f8402040000   je 0x116a6
0x000112a4      48c745980000.  mov qword [rbp - 0x68], 0
0x000112ac      4885db         test rbx, rbx
0x000112af      0f88d5030000   js 0x1168a
0x000112b5      488b4d88       mov rcx, qword [rbp - 0x78]
0x000112b9      498b4508       mov rax, qword [r13 + 8]
0x000112bd      4839c8         cmp rax, rcx
0x000112c0      0f8cea040000   jl 0x117b0
0x000112c6      488bbd70ffff.  mov rdi, qword [rbp - 0x90]
0x000112cd      4989d9         mov r9, rbx
0x000112d0      4989df         mov r15, rbx
0x000112d3      49c1e104       shl r9, 4
0x000112d7      488b17         mov rdx, qword [rdi]
0x000112da      4c01ca         add rdx, r9
0x000112dd      0fb67208       movzx esi, byte [rdx + 8]
0x000112e1      83fe08         cmp esi, 8
0x000112e4      0f85f6feffff   jne 0x111e0
0x000112ea      488b12         mov rdx, qword [rdx]
0x000112ed      4883c201       add rdx, 1
0x000112f1      48399568ffff.  cmp qword [rbp - 0x98], rdx
0x000112f8      0f8eebfeffff   jle 0x111e9
0x000112fe      48c1e204       shl rdx, 4
0x00011302      4c01ea         add rdx, r13
0x00011305      48c74208ffff.  mov qword [rdx + 8], 0xffffffffffffffff
0x0001130d      48890a         mov qword [rdx], rcx
0x00011310      498b4508       mov rax, qword [r13 + 8]
0x00011314      e9d0feffff     jmp 0x111e9
0x00011319      0f1f80000000.  nop dword [rax]
0x00011320      498b8424b800.  mov rax, qword [r12 + 0xb8]
0x00011328      488b5588       mov rdx, qword [rbp - 0x78]
0x0001132c      4889de         mov rsi, rbx
0x0001132f      488bbd58ffff.  mov rdi, qword [rbp - 0xa8]
0x00011336      4c8b0cd0       mov r9, qword [rax + rdx*8]
0x0001133a      498b4628       mov rax, qword [r14 + 0x28]
0x0001133e      488d145b       lea rdx, [rbx + rbx*2]
0x00011342      4c898d60ffff.  mov qword [rbp - 0xa0], r9
0x00011349      4c8d3cd0       lea r15, [rax + rdx*8]
0x0001134d      e8be96ffff     call sym.re_node_set_insert
0x00011352      84c0           test al, al
0x00011354      4c8b8d60ffff.  mov r9, qword [rbp - 0xa0]
0x0001135b      0f84d7040000   je 0x11838
0x00011361      4d8b5708       mov r10, qword [r15 + 8]
0x00011365      4d85d2         test r10, r10
0x00011368      0f8e2a030000   jle 0x11698
0x0001136e      4d8b7f10       mov r15, qword [r15 + 0x10]
0x00011372      4d8b5910       mov r11, qword [r9 + 0x10]
0x00011376      4d8d7118       lea r14, [r9 + 0x18]
0x0001137a      48c7c3ffffff.  mov rbx, 0xffffffffffffffff
0x00011381      4531c9         xor r9d, r9d
0x00011384      4c89a560ffff.  mov qword [rbp - 0xa0], r12
0x0001138b      0f1f440000     nop dword [rax + rax]
0x00011390      4f8b24cf       mov r12, qword [r15 + r9*8]
0x00011394      4c89f6         mov rsi, r14
0x00011397      4c89df         mov rdi, r11
0x0001139a      4c89e2         mov rdx, r12
0x0001139d      e8aeabffff     call sym.re_node_set_contains.isra.3
0x000113a2      4885c0         test rax, rax
0x000113a5      740d           je 0x113b4
0x000113a7      4883fbff       cmp rbx, 0xffffffffffffffff
0x000113ab      0f854f010000   jne 0x11500
0x000113b1      4c89e3         mov rbx, r12
0x000113b4      4983c101       add r9, 1
0x000113b8      4d39ca         cmp r10, r9
0x000113bb      75d3           jne 0x11390
0x000113bd      4c8ba560ffff.  mov r12, qword [rbp - 0xa0]
0x000113c4      e9e3feffff     jmp 0x112ac
0x000113c9      0f1f80000000.  nop dword [rax]
0x000113d0      488b3a         mov rdi, qword [rdx]
0x000113d3      488d7701       lea rsi, [rdi + 1]
0x000113d7      4839b568ffff.  cmp qword [rbp - 0x98], rsi
0x000113de      0f8e05feffff   jle 0x111e9
0x000113e4      48c1e604       shl rsi, 4
0x000113e8      498d443500     lea rax, [r13 + rsi]
0x000113ed      483908         cmp qword [rax], rcx
0x000113f0      0f8c7a030000   jl 0x11770
0x000113f6      f6420a08       test byte [rdx + 0xa], 8
0x000113fa      7412           je 0x1140e
0x000113fc      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x00011403      48833c37ff     cmp qword [rdi + rsi], 0xffffffffffffffff
0x00011408      0f85ed030000   jne 0x117fb
0x0001140e      48894808       mov qword [rax + 8], rcx
0x00011412      498b4508       mov rax, qword [r13 + 8]
0x00011416      e9cefdffff     jmp 0x111e9
0x0001141b      0f1f440000     nop dword [rax + rax]
0x00011420      4c8b4588       mov r8, qword [rbp - 0x78]
0x00011424      498db6d80000.  lea rsi, [r14 + 0xd8]
0x0001142b      4c89e1         mov rcx, r12
0x0001142e      4889da         mov rdx, rbx
0x00011431      4c898d60ffff.  mov qword [rbp - 0xa0], r9
0x00011438      e8c3f2ffff     call sym.check_node_accept_bytes.isra.31
0x0001143d      4863c8         movsxd rcx, eax
0x00011440      4885c9         test rcx, rcx
0x00011443      0f85f8010000   jne 0x11641
0x00011449      4c8b8d60ffff.  mov r9, qword [rbp - 0xa0]
0x00011450      498b36         mov rsi, qword [r14]
0x00011453      488b4d88       mov rcx, qword [rbp - 0x78]
0x00011457      4c01ce         add rsi, r9
0x0001145a      e9cefdffff     jmp 0x1122d
0x0001145f      90             nop
0x00011460      488b06         mov rax, qword [rsi]
0x00011463      4883c001       add rax, 1
0x00011467      48c1e004       shl rax, 4
0x0001146b      4c01e8         add rax, r13
0x0001146e      488b5008       mov rdx, qword [rax + 8]
0x00011472      488b38         mov rdi, qword [rax]
0x00011475      4889d1         mov rcx, rdx
0x00011478      4829f9         sub rcx, rdi
0x0001147b      4883bd78ffff.  cmp qword [rbp - 0x88], 0
0x00011483      0f84af010000   je 0x11638
0x00011489      4883ffff       cmp rdi, 0xffffffffffffffff
0x0001148d      0f8413020000   je 0x116a6
0x00011493      4883faff       cmp rdx, 0xffffffffffffffff
0x00011497      0f8409020000   je 0x116a6
0x0001149d      4885c9         test rcx, rcx
0x000114a0      0f844a020000   je 0x116f0
0x000114a6      4c8b7d88       mov r15, qword [rbp - 0x78]
0x000114aa      498b542430     mov rdx, qword [r12 + 0x30]
0x000114af      498b442408     mov rax, qword [r12 + 8]
0x000114b4      4c29fa         sub rdx, r15
0x000114b7      4839d1         cmp rcx, rdx
0x000114ba      0f8fe6010000   jg 0x116a6
0x000114c0      4a8d3438       lea rsi, [rax + r15]
0x000114c4      4801c7         add rdi, rax
0x000114c7      4889ca         mov rdx, rcx
0x000114ca      48898d60ffff.  mov qword [rbp - 0xa0], rcx
0x000114d1      e8ba09ffff     call sym.imp.memcmp
0x000114d6      85c0           test eax, eax
0x000114d8      488b8d60ffff.  mov rcx, qword [rbp - 0xa0]
0x000114df      0f85c1010000   jne 0x116a6
0x000114e5      498b4618       mov rax, qword [r14 + 0x18]
0x000114e9      498d140f       lea rdx, [r15 + rcx]
0x000114ed      488b1cd8       mov rbx, qword [rax + rbx*8]
0x000114f1      e964fdffff     jmp 0x1125a
0x000114f6      662e0f1f8400.  nop word cs:[rax + rax]
0x00011500      488bb538ffff.  mov rsi, qword [rbp - 0xc8]
0x00011507      488b7d98       mov rdi, qword [rbp - 0x68]
0x0001150b      4889da         mov rdx, rbx
0x0001150e      4d89e6         mov r14, r12
0x00011511      4c8ba560ffff.  mov r12, qword [rbp - 0xa0]
0x00011518      e833aaffff     call sym.re_node_set_contains.isra.3
0x0001151d      4885c0         test rax, rax
0x00011520      0f85ba010000   jne 0x116e0
0x00011526      488b8d78ffff.  mov rcx, qword [rbp - 0x88]
0x0001152d      4885c9         test rcx, rcx
0x00011530      0f8476fdffff   je 0x112ac
0x00011536      4c8b39         mov r15, qword [rcx]
0x00011539      488b5588       mov rdx, qword [rbp - 0x78]
0x0001153d      498d4701       lea rax, [r15 + 1]
0x00011541      483b4108       cmp rax, qword [rcx + 8]
0x00011545      488901         mov qword [rcx], rax
0x00011548      0f847f030000   je 0x118cd
0x0001154e      488b4110       mov rax, qword [rcx + 0x10]
0x00011552      4f8d3c7f       lea r15, [r15 + r15*2]
0x00011556      49c1e704       shl r15, 4
0x0001155a      4901c7         add r15, rax
0x0001155d      4d897708       mov qword [r15 + 8], r14
0x00011561      4c8bb548ffff.  mov r14, qword [rbp - 0xb8]
0x00011568      498917         mov qword [r15], rdx
0x0001156b      4c89f7         mov rdi, r14
0x0001156e      e8ad09ffff     call sym.imp.malloc
0x00011573      4885c0         test rax, rax
0x00011576      49894710       mov qword [r15 + 0x10], rax
0x0001157a      7426           je 0x115a2
0x0001157c      4c89f2         mov rdx, r14
0x0001157f      4c89ee         mov rsi, r13
0x00011582      4889c7         mov rdi, rax
0x00011585      e85609ffff     call sym.imp.memcpy
0x0001158a      488bb558ffff.  mov rsi, qword [rbp - 0xa8]
0x00011591      498d7f18       lea rdi, [r15 + 0x18]
0x00011595      e816bbffff     call sym.re_node_set_init_copy
0x0001159a      85c0           test eax, eax
0x0001159c      0f840afdffff   je 0x112ac
0x000115a2      488b7da0       mov rdi, qword [rbp - 0x60]
0x000115a6      e8b506ffff     call sym.imp.free
0x000115ab      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x000115b2      0f8593030000   jne 0x1194b
0x000115b8      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x000115bf      e84ce0ffff     call sym.free_fail_stack_return.part.24
0x000115c4      b80c000000     mov eax, 0xc
0x000115c9      e90b020000     jmp 0x117d9
0x000115ce      6690           nop
0x000115d0      4883bd78ffff.  cmp qword [rbp - 0x88], 0
0x000115d8      0f842e030000   je 0x1190c
0x000115de      488b8d68ffff.  mov rcx, qword [rbp - 0x98]
0x000115e5      4885c9         test rcx, rcx
0x000115e8      7420           je 0x1160a
0x000115ea      4c89e8         mov rax, r13
0x000115ed      31d2           xor edx, edx
0x000115ef      90             nop
0x000115f0      48833800       cmp qword [rax], 0
0x000115f4      7807           js 0x115fd
0x000115f6      48837808ff     cmp qword [rax + 8], 0xffffffffffffffff
0x000115fb      7453           je 0x11650
0x000115fd      4883c201       add rdx, 1
0x00011601      4883c010       add rax, 0x10
0x00011605      4839d1         cmp rcx, rdx
0x00011608      75e6           jne 0x115f0
0x0001160a      488b7da0       mov rdi, qword [rbp - 0x60]
0x0001160e      e84d06ffff     call sym.imp.free
0x00011613      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x0001161a      0f8574030000   jne 0x11994
0x00011620      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x00011627      e8e4dfffff     call sym.free_fail_stack_return.part.24
0x0001162c      31c0           xor eax, eax
0x0001162e      e9a6010000     jmp 0x117d9
0x00011633      0f1f440000     nop dword [rax + rax]
0x00011638      4885c9         test rcx, rcx
0x0001163b      0f84af000000   je 0x116f0
0x00011641      4c8b7d88       mov r15, qword [rbp - 0x78]
0x00011645      e99bfeffff     jmp 0x114e5
0x0001164a      660f1f440000   nop word [rax + rax]
0x00011650      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x00011657      4c8b8d58ffff.  mov r9, qword [rbp - 0xa8]
0x0001165e      4d89e8         mov r8, r13
0x00011661      488b8d68ffff.  mov rcx, qword [rbp - 0x98]
0x00011668      488b9550ffff.  mov rdx, qword [rbp - 0xb0]
0x0001166f      488d7710       lea rsi, [rdi + 0x10]
0x00011673      e8e8dfffff     call sym.pop_fail_stack.isra.25
0x00011678      4989c1         mov r9, rax
0x0001167b      4889c3         mov rbx, rax
0x0001167e      4989c7         mov r15, rax
0x00011681      49c1e104       shl r9, 4
0x00011685      e972fbffff     jmp 0x111fc
0x0001168a      4883fbfe       cmp rbx, 0xfffffffffffffffe
0x0001168e      0f84a4010000   je 0x11838
0x00011694      0f1f4000       nop dword [rax]
0x00011698      4883bd78ffff.  cmp qword [rbp - 0x88], 0
0x000116a0      0f84b6020000   je 0x1195c
0x000116a6      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x000116ad      488b8d68ffff.  mov rcx, qword [rbp - 0x98]
0x000116b4      488d5588       lea rdx, [rbp - 0x78]
0x000116b8      4c8b8d58ffff.  mov r9, qword [rbp - 0xa8]
0x000116bf      4d89e8         mov r8, r13
0x000116c2      488d7710       lea rsi, [rdi + 0x10]
0x000116c6      e895dfffff     call sym.pop_fail_stack.isra.25
0x000116cb      488b4d88       mov rcx, qword [rbp - 0x78]
0x000116cf      4889c3         mov rbx, rax
0x000116d2      e9f4faffff     jmp 0x111cb
0x000116d7      660f1f840000.  nop word [rax + rax]
0x000116e0      4c89f3         mov rbx, r14
0x000116e3      e9c4fbffff     jmp 0x112ac
0x000116e8      0f1f84000000.  nop dword [rax + rax]
0x000116f0      488bbd58ffff.  mov rdi, qword [rbp - 0xa8]
0x000116f7      4889de         mov rsi, rbx
0x000116fa      4c898d60ffff.  mov qword [rbp - 0xa0], r9
0x00011701      e80a93ffff     call sym.re_node_set_insert
0x00011706      84c0           test al, al
0x00011708      0f842a010000   je 0x11838
0x0001170e      498b5628       mov rdx, qword [r14 + 0x28]
0x00011712      488d045b       lea rax, [rbx + rbx*2]
0x00011716      488b4d88       mov rcx, qword [rbp - 0x78]
0x0001171a      488d04c2       lea rax, [rdx + rax*8]
0x0001171e      48898d28ffff.  mov qword [rbp - 0xd8], rcx
0x00011725      488b4010       mov rax, qword [rax + 0x10]
0x00011729      488b18         mov rbx, qword [rax]
0x0001172c      498b8424b800.  mov rax, qword [r12 + 0xb8]
0x00011734      488b04c8       mov rax, qword [rax + rcx*8]
0x00011738      4889da         mov rdx, rbx
0x0001173b      488b7810       mov rdi, qword [rax + 0x10]
0x0001173f      488d7018       lea rsi, [rax + 0x18]
0x00011743      e808a8ffff     call sym.re_node_set_contains.isra.3
0x00011748      4885c0         test rax, rax
0x0001174b      0f855bfbffff   jne 0x112ac
0x00011751      4c8b8d60ffff.  mov r9, qword [rbp - 0xa0]
0x00011758      498b36         mov rsi, qword [r14]
0x0001175b      488b8d28ffff.  mov rcx, qword [rbp - 0xd8]
0x00011762      4c01ce         add rsi, r9
0x00011765      e9c3faffff     jmp 0x1122d
0x0001176a      660f1f440000   nop word [rax + rax]
0x00011770      488b9548ffff.  mov rdx, qword [rbp - 0xb8]
0x00011777      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x0001177e      4c89ee         mov rsi, r13
0x00011781      48894808       mov qword [rax + 8], rcx
0x00011785      4c898d28ffff.  mov qword [rbp - 0xd8], r9
0x0001178c      48898d60ffff.  mov qword [rbp - 0xa0], rcx
0x00011793      e84807ffff     call sym.imp.memcpy
0x00011798      498b4508       mov rax, qword [r13 + 8]
0x0001179c      488b8d60ffff.  mov rcx, qword [rbp - 0xa0]
0x000117a3      4c8b8d28ffff.  mov r9, qword [rbp - 0xd8]
0x000117aa      e93afaffff     jmp 0x111e9
0x000117af      90             nop
0x000117b0      488b7da0       mov rdi, qword [rbp - 0x60]
0x000117b4      e8a704ffff     call sym.imp.free
0x000117b9      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x000117c0      0f85d6000000   jne 0x1189c
0x000117c6      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x000117cd      4885ff         test rdi, rdi
0x000117d0      7405           je 0x117d7
0x000117d2      e839deffff     call sym.free_fail_stack_return.part.24
0x000117d7      31c0           xor eax, eax
0x000117d9      488b5dc8       mov rbx, qword [rbp - 0x38]
0x000117dd      6448331c2528.  xor rbx, qword fs:[0x28]
0x000117e6      0f85b9010000   jne 0x119a5
0x000117ec      488d65d8       lea rsp, [rbp - 0x28]
0x000117f0      5b             pop rbx
0x000117f1      415c           pop r12
0x000117f3      415d           pop r13
0x000117f5      415e           pop r14
0x000117f7      415f           pop r15
0x000117f9      5d             pop rbp
0x000117fa      c3             ret
0x000117fb      488b9548ffff.  mov rdx, qword [rbp - 0xb8]
0x00011802      4889fe         mov rsi, rdi
0x00011805      4c89ef         mov rdi, r13
0x00011808      48898d28ffff.  mov qword [rbp - 0xd8], rcx
0x0001180f      4c898d60ffff.  mov qword [rbp - 0xa0], r9
0x00011816      e8c506ffff     call sym.imp.memcpy
0x0001181b      498b4508       mov rax, qword [r13 + 8]
0x0001181f      4c8b8d60ffff.  mov r9, qword [rbp - 0xa0]
0x00011826      488b8d28ffff.  mov rcx, qword [rbp - 0xd8]
0x0001182d      e9b7f9ffff     jmp 0x111e9
0x00011832      660f1f440000   nop word [rax + rax]
0x00011838      488b7da0       mov rdi, qword [rbp - 0x60]
0x0001183c      e81f04ffff     call sym.imp.free
0x00011841      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x00011848      0f85fd000000   jne 0x1194b
0x0001184e      4883bd78ffff.  cmp qword [rbp - 0x88], 0
0x00011856      0f855cfdffff   jne 0x115b8
0x0001185c      b80c000000     mov eax, 0xc
0x00011861      e973ffffff     jmp 0x117d9
0x00011866      488bbd48ffff.  mov rdi, qword [rbp - 0xb8]
0x0001186d      e8ae06ffff     call sym.imp.malloc
0x00011872      4885c0         test rax, rax
0x00011875      48898540ffff.  mov qword [rbp - 0xc0], rax
0x0001187c      c68537ffffff.  mov byte [rbp - 0xc9], 1
0x00011883      0f850ef9ffff   jne 0x11197
0x00011889      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x00011890      4885ff         test rdi, rdi
0x00011893      74c7           je 0x1185c
0x00011895      e876ddffff     call sym.free_fail_stack_return.part.24
0x0001189a      ebc0           jmp 0x1185c
0x0001189c      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x000118a3      e8b803ffff     call sym.imp.free
0x000118a8      488bbd78ffff.  mov rdi, qword [rbp - 0x88]
0x000118af      4885ff         test rdi, rdi
0x000118b2      0f851affffff   jne 0x117d2
0x000118b8      e91affffff     jmp 0x117d7
0x000118bd      48c78578ffff.  mov qword [rbp - 0x88], 0
0x000118c8      e970f8ffff     jmp 0x1113d
0x000118cd      488d3440       lea rsi, [rax + rax*2]
0x000118d1      488b8578ffff.  mov rax, qword [rbp - 0x88]
0x000118d8      48899560ffff.  mov qword [rbp - 0xa0], rdx
0x000118df      48c1e605       shl rsi, 5
0x000118e3      488b7810       mov rdi, qword [rax + 0x10]
0x000118e7      e8a406ffff     call sym.imp.realloc
0x000118ec      4885c0         test rax, rax
0x000118ef      7444           je 0x11935
0x000118f1      488b8d78ffff.  mov rcx, qword [rbp - 0x88]
0x000118f8      488b9560ffff.  mov rdx, qword [rbp - 0xa0]
0x000118ff      48d16108       shl qword [rcx + 8], 1
0x00011903      48894110       mov qword [rcx + 0x10], rax
0x00011907      e946fcffff     jmp 0x11552
0x0001190c      488b7da0       mov rdi, qword [rbp - 0x60]
0x00011910      e84b03ffff     call sym.imp.free
0x00011915      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x0001191c      0f84b5feffff   je 0x117d7
0x00011922      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x00011929      e83203ffff     call sym.imp.free
0x0001192e      31c0           xor eax, eax
0x00011930      e9a4feffff     jmp 0x117d9
0x00011935      488b7da0       mov rdi, qword [rbp - 0x60]
0x00011939      e82203ffff     call sym.imp.free
0x0001193e      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x00011945      0f846dfcffff   je 0x115b8
0x0001194b      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x00011952      e80903ffff     call sym.imp.free
0x00011957      e9f2feffff     jmp 0x1184e
0x0001195c      488b7da0       mov rdi, qword [rbp - 0x60]
0x00011960      e8fb02ffff     call sym.imp.free
0x00011965      80bd37ffffff.  cmp byte [rbp - 0xc9], 0
0x0001196c      b801000000     mov eax, 1
0x00011971      0f8462feffff   je 0x117d9
0x00011977      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x0001197e      898578ffffff   mov dword [rbp - 0x88], eax
0x00011984      e8d702ffff     call sym.imp.free
0x00011989      8b8578ffffff   mov eax, dword [rbp - 0x88]
0x0001198f      e945feffff     jmp 0x117d9
0x00011994      488bbd40ffff.  mov rdi, qword [rbp - 0xc0]
0x0001199b      e8c002ffff     call sym.imp.free
0x000119a0      e97bfcffff     jmp 0x11620
0x000119a5      e80604ffff     call sym.imp.__stack_chk_fail
0x000119aa      660f1f440000   nop word [rax + rax]
;-- get_subexp_sub.isra.32:
0x000119b0      4157           push r15
0x000119b2      4156           push r14
0x000119b4      4989ce         mov r14, rcx
0x000119b7      4155           push r13
0x000119b9      4154           push r12
0x000119bb      4989f5         mov r13, rsi
0x000119be      55             push rbp
0x000119bf      53             push rbx
0x000119c0      488d7210       lea rsi, [rdx + 0x10]
0x000119c4      4889d5         mov rbp, rdx
0x000119c7      4d89c1         mov r9, r8
0x000119ca      4d89c4         mov r12, r8
0x000119cd      4883ec20       sub rsp, 0x20
0x000119d1      488b4a08       mov rcx, qword [rdx + 8]
0x000119d5      4d89f0         mov r8, r14
0x000119d8      6a08           push 8
0x000119da      488b12         mov rdx, qword [rdx]
0x000119dd      4889fb         mov rbx, rdi
0x000119e0      e87befffff     call sym.check_arrival
0x000119e5      85c0           test eax, eax
0x000119e7      5a             pop rdx
0x000119e8      59             pop rcx
0x000119e9      7415           je 0x11a00
0x000119eb      4883c418       add rsp, 0x18
0x000119ef      5b             pop rbx
0x000119f0      5d             pop rbp
0x000119f1      415c           pop r12
0x000119f3      415d           pop r13
0x000119f5      415e           pop r14
0x000119f7      415f           pop r15
0x000119f9      c3             ret
0x000119fa      660f1f440000   nop word [rax + rax]
0x00011a00      488b83c80000.  mov rax, qword [rbx + 0xc8]
0x00011a07      488b93d00000.  mov rdx, qword [rbx + 0xd0]
0x00011a0e      4c8b7d08       mov r15, qword [rbp + 8]
0x00011a12      498b4d00       mov rcx, qword [r13]
0x00011a16      488bbbd80000.  mov rdi, qword [rbx + 0xd8]
0x00011a1d      4839d0         cmp rax, rdx
0x00011a20      4c89fe         mov rsi, r15
0x00011a23      0f8d97000000   jge 0x11ac0
0x00011a29      488d1480       lea rdx, [rax + rax*4]
0x00011a2d      48c1e203       shl rdx, 3
0x00011a31      4885c0         test rax, rax
0x00011a34      7e0b           jle 0x11a41
0x00011a36      4c8d4417d8     lea r8, [rdi + rdx - 0x28]
0x00011a3b      4d3b6008       cmp r12, qword [r8 + 8]
0x00011a3f      746f           je 0x11ab0
0x00011a41      4801d7         add rdi, rdx
0x00011a44      31d2           xor edx, edx
0x00011a46      4939cf         cmp r15, rcx
0x00011a49      0f94c2         sete dl
0x00011a4c      4883c001       add rax, 1
0x00011a50      4c8937         mov qword [rdi], r14
0x00011a53      f7da           neg edx
0x00011a55      4c896708       mov qword [rdi + 8], r12
0x00011a59      48894f10       mov qword [rdi + 0x10], rcx
0x00011a5d      66895722       mov word [rdi + 0x22], dx
0x00011a61      4c897f18       mov qword [rdi + 0x18], r15
0x00011a65      488983c80000.  mov qword [rbx + 0xc8], rax
0x00011a6c      c6472000       mov byte [rdi + 0x20], 0
0x00011a70      4c89f8         mov rax, r15
0x00011a73      486393e00000.  movsxd rdx, dword [rbx + 0xe0]
0x00011a7a      4829c8         sub rax, rcx
0x00011a7d      4839c2         cmp rdx, rax
0x00011a80      7d0a           jge 0x11a8c
0x00011a82      4129cf         sub r15d, ecx
0x00011a85      4489bbe00000.  mov dword [rbx + 0xe0], r15d
0x00011a8c      4c01e6         add rsi, r12
0x00011a8f      492b7500       sub rsi, qword [r13]
0x00011a93      4883c418       add rsp, 0x18
0x00011a97      4889df         mov rdi, rbx
0x00011a9a      5b             pop rbx
0x00011a9b      5d             pop rbp
0x00011a9c      415c           pop r12
0x00011a9e      415d           pop r13
0x00011aa0      415e           pop r14
0x00011aa2      415f           pop r15
0x00011aa4      e9379bffff     jmp sym.clean_state_log_if_needed
0x00011aa9      0f1f80000000.  nop dword [rax]
0x00011ab0      41c6402001     mov byte [r8 + 0x20], 1
0x00011ab5      eb8a           jmp 0x11a41
0x00011ab7      660f1f840000.  nop word [rax + rax]
0x00011ac0      488d3492       lea rsi, [rdx + rdx*4]
0x00011ac4      48894c2408     mov qword [rsp + 8], rcx
0x00011ac9      48c1e604       shl rsi, 4
0x00011acd      e8be04ffff     call sym.imp.realloc
0x00011ad2      4885c0         test rax, rax
0x00011ad5      488b4c2408     mov rcx, qword [rsp + 8]
0x00011ada      7454           je 0x11b30
0x00011adc      488bb3c80000.  mov rsi, qword [rbx + 0xc8]
0x00011ae3      488b93d00000.  mov rdx, qword [rbx + 0xd0]
0x00011aea      488983d80000.  mov qword [rbx + 0xd8], rax
0x00011af1      48894c2408     mov qword [rsp + 8], rcx
0x00011af6      488d34b6       lea rsi, [rsi + rsi*4]
0x00011afa      488d1492       lea rdx, [rdx + rdx*4]
0x00011afe      488d3cf0       lea rdi, [rax + rsi*8]
0x00011b02      48c1e203       shl rdx, 3
0x00011b06      31f6           xor esi, esi
0x00011b08      e83303ffff     call sym.imp.memset
0x00011b0d      48d1a3d00000.  shl qword [rbx + 0xd0], 1
0x00011b14      488b83c80000.  mov rax, qword [rbx + 0xc8]
0x00011b1b      488bbbd80000.  mov rdi, qword [rbx + 0xd8]
0x00011b22      488b7508       mov rsi, qword [rbp + 8]
0x00011b26      488b4c2408     mov rcx, qword [rsp + 8]
0x00011b2b      e9f9feffff     jmp 0x11a29
0x00011b30      488bbbd80000.  mov rdi, qword [rbx + 0xd8]
0x00011b37      e82401ffff     call sym.imp.free
0x00011b3c      b80c000000     mov eax, 0xc
0x00011b41      e9a5feffff     jmp 0x119eb
0x00011b46      662e0f1f8400.  nop word cs:[rax + rax]
;-- transit_state_bkref.isra.34:
0x00011b50      4157           push r15
0x00011b52      4156           push r14
0x00011b54      4155           push r13
0x00011b56      4154           push r12
0x00011b58      55             push rbp
0x00011b59      53             push rbx
0x00011b5a      4881ecb80000.  sub rsp, 0xb8
0x00011b61      4c8b7f48       mov r15, qword [rdi + 0x48]
0x00011b65      64488b042528.  mov rax, qword fs:[0x28]
0x00011b6e      48898424a800.  mov qword [rsp + 0xa8], rax
0x00011b76      31c0           xor eax, eax
0x00011b78      48833e00       cmp qword [rsi], 0
0x00011b7c      488b87980000.  mov rax, qword [rdi + 0x98]
0x00011b83      4889742448     mov qword [rsp + 0x48], rsi
0x00011b88      4889542440     mov qword [rsp + 0x40], rdx
0x00011b8d      4889442438     mov qword [rsp + 0x38], rax
0x00011b92      0f8e28030000   jle 0x11ec0
0x00011b98      4a8d04fd0000.  lea rax, [r15*8]
0x00011ba0      4989fe         mov r14, rdi
0x00011ba3      48c704240000.  mov qword [rsp], 0
0x00011bab      4c897c2408     mov qword [rsp + 8], r15
0x00011bb0      4889442460     mov qword [rsp + 0x60], rax
0x00011bb5      488d84249000.  lea rax, [rsp + 0x90]
0x00011bbd      4889442468     mov qword [rsp + 0x68], rax
0x00011bc2      488d84248c00.  lea rax, [rsp + 0x8c]
0x00011bca      4889442478     mov qword [rsp + 0x78], rax
0x00011bcf      eb46           jmp 0x11c17
0x00011bd1      0f1f80000000.  nop dword [rax]
0x00011bd8      a801           test al, 1
0x00011bda      7424           je 0x11c00
0x00011bdc      83e208         and edx, 8
0x00011bdf      751f           jne 0x11c00
0x00011be1      f6c120         test cl, 0x20                           ; "@"
0x00011be4      7404           je 0x11bea
0x00011be6      a802           test al, 2
0x00011be8      7416           je 0x11c00
0x00011bea      81e180000000   and ecx, 0x80
0x00011bf0      0f849a000000   je 0x11c90
0x00011bf6      a808           test al, 8
0x00011bf8      0f8592000000   jne 0x11c90
0x00011bfe      6690           nop
0x00011c00      488b7c2448     mov rdi, qword [rsp + 0x48]
0x00011c05      4883042401     add qword [rsp], 1
0x00011c0a      488b0424       mov rax, qword [rsp]
0x00011c0e      483b07         cmp rax, qword [rdi]
0x00011c11      0f8da9020000   jge 0x11ec0
0x00011c17      488b442440     mov rax, qword [rsp + 0x40]
0x00011c1c      488b3c24       mov rdi, qword [rsp]
0x00011c20      488b00         mov rax, qword [rax]
0x00011c23      4c8b2cf8       mov r13, qword [rax + rdi*8]
0x00011c27      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00011c2c      488b07         mov rax, qword [rdi]
0x00011c2f      4c89eb         mov rbx, r13
0x00011c32      48c1e304       shl rbx, 4
0x00011c36      4801d8         add rax, rbx
0x00011c39      80780804       cmp byte [rax + 8], 4
0x00011c3d      75c1           jne 0x11c00
0x00011c3f      8b6808         mov ebp, dword [rax + 8]
0x00011c42      f7c500ff0300   test ebp, 0x3ff00
0x00011c48      7446           je 0x11c90
0x00011c4a      418b96a00000.  mov edx, dword [r14 + 0xa0]
0x00011c51      488b742408     mov rsi, qword [rsp + 8]
0x00011c56      4c89f7         mov rdi, r14
0x00011c59      e8d2c0ffff     call sym.re_string_context_at
0x00011c5e      89ea           mov edx, ebp
0x00011c60      c1ea08         shr edx, 8
0x00011c63      89d1           mov ecx, edx
0x00011c65      6681e1ff03     and cx, 0x3ff
0x00011c6a      f6c204         test dl, 4
0x00011c6d      0f8565ffffff   jne 0x11bd8
0x00011c73      83e208         and edx, 8
0x00011c76      0f8465ffffff   je 0x11be1
0x00011c7c      a801           test al, 1
0x00011c7e      0f845dffffff   je 0x11be1
0x00011c84      e977ffffff     jmp 0x11c00
0x00011c89      0f1f80000000.  nop dword [rax]
0x00011c90      498bbec80000.  mov rdi, qword [r14 + 0xc8]
0x00011c97      498b86980000.  mov rax, qword [r14 + 0x98]
0x00011c9e      31c9           xor ecx, ecx
0x00011ca0      4d8b5608       mov r10, qword [r14 + 8]
0x00011ca4      4c8b4c2408     mov r9, qword [rsp + 8]
0x00011ca9      48897c2470     mov qword [rsp + 0x70], rdi
0x00011cae      4889442450     mov qword [rsp + 0x50], rax
0x00011cb3      4839f9         cmp rcx, rdi
0x00011cb6      7d53           jge 0x11d0b
0x00011cb8      488d0439       lea rax, [rcx + rdi]
0x00011cbc      4d8b9ed80000.  mov r11, qword [r14 + 0xd8]
0x00011cc3      4889c6         mov rsi, rax
0x00011cc6      48c1ee3f       shr rsi, 0x3f
0x00011cca      4801c6         add rsi, rax
0x00011ccd      48d1fe         sar rsi, 1
0x00011cd0      488d04b6       lea rax, [rsi + rsi*4]
0x00011cd4      4d3b4cc308     cmp r9, qword [r11 + rax*8 + 8]
0x00011cd9      7e2b           jle 0x11d06
0x00011cdb      e9c8010000     jmp 0x11ea8
0x00011ce0      488d140e       lea rdx, [rsi + rcx]
0x00011ce4      4889d0         mov rax, rdx
0x00011ce7      48c1e83f       shr rax, 0x3f
0x00011ceb      4801d0         add rax, rdx
0x00011cee      48d1f8         sar rax, 1
0x00011cf1      488d1480       lea rdx, [rax + rax*4]
0x00011cf5      4989c0         mov r8, rax
0x00011cf8      4d3b4cd308     cmp r9, qword [r11 + rdx*8 + 8]
0x00011cfd      0f8fad010000   jg 0x11eb0
0x00011d03      4889c6         mov rsi, rax
0x00011d06      4839ce         cmp rsi, rcx
0x00011d09      7fd5           jg 0x11ce0
0x00011d0b      48394c2470     cmp qword [rsp + 0x70], rcx
0x00011d10      7e24           jle 0x11d36
0x00011d12      498b96d80000.  mov rdx, qword [r14 + 0xd8]
0x00011d19      488d0489       lea rax, [rcx + rcx*4]
0x00011d1d      488b7c2408     mov rdi, qword [rsp + 8]
0x00011d22      488d04c2       lea rax, [rdx + rax*8]
0x00011d26      48397808       cmp qword [rax + 8], rdi
0x00011d2a      750a           jne 0x11d36
0x00011d2c      4883f9ff       cmp rcx, 0xffffffffffffffff
0x00011d30      0f85d0010000   jne 0x11f06
0x00011d36      488b442450     mov rax, qword [rsp + 0x50]
0x00011d3b      4983bee80000.  cmp qword [r14 + 0xe8], 0
0x00011d43      488b10         mov rdx, qword [rax]
0x00011d46      488b041a       mov rax, qword [rdx + rbx]
0x00011d4a      4889442458     mov qword [rsp + 0x58], rax
0x00011d4f      0f8eb6010000   jle 0x11f0b
0x00011d55      4c896c2430     mov qword [rsp + 0x30], r13
0x00011d5a      48c744242800.  mov qword [rsp + 0x28], 0
0x00011d63      4d89d5         mov r13, r10
0x00011d66      498b86f80000.  mov rax, qword [r14 + 0xf8]
0x00011d6d      488b5c2428     mov rbx, qword [rsp + 0x28]
0x00011d72      488b7c2458     mov rdi, qword [rsp + 0x58]
0x00011d77      488b1cd8       mov rbx, qword [rax + rbx*8]
0x00011d7b      488b4308       mov rax, qword [rbx + 8]
0x00011d7f      48c1e004       shl rax, 4
0x00011d83      483b3c02       cmp rdi, qword [rdx + rax]
0x00011d87      7427           je 0x11db0
0x00011d89      488344242801   add qword [rsp + 0x28], 1
0x00011d8f      488b442428     mov rax, qword [rsp + 0x28]
0x00011d94      493b86e80000.  cmp rax, qword [r14 + 0xe8]
0x00011d9b      0f8d70060000   jge 0x12411
0x00011da1      488b442450     mov rax, qword [rsp + 0x50]
0x00011da6      488b10         mov rdx, qword [rax]
0x00011da9      ebbb           jmp 0x11d66
0x00011dab      0f1f440000     nop dword [rax + rax]
0x00011db0      48837b2000     cmp qword [rbx + 0x20], 0
0x00011db5      4c8b1b         mov r11, qword [rbx]
0x00011db8      0f8e64060000   jle 0x12422
0x00011dbe      488b4c2408     mov rcx, qword [rsp + 8]
0x00011dc3      4d89e8         mov r8, r13
0x00011dc6      31ed           xor ebp, ebp
0x00011dc8      4989dd         mov r13, rbx
0x00011dcb      4889cb         mov rbx, rcx
0x00011dce      eb6c           jmp 0x11e3c
0x00011dd0      4b8d3418       lea rsi, [r8 + r11]
0x00011dd4      498d3c18       lea rdi, [r8 + rbx]
0x00011dd8      4c894c2420     mov qword [rsp + 0x20], r9
0x00011ddd      4c895c2418     mov qword [rsp + 0x18], r11
0x00011de2      4c89442410     mov qword [rsp + 0x10], r8
0x00011de7      e8a400ffff     call sym.imp.memcmp
0x00011dec      85c0           test eax, eax
0x00011dee      4c8b442410     mov r8, qword [rsp + 0x10]
0x00011df3      4c8b5c2418     mov r11, qword [rsp + 0x18]
0x00011df8      4c8b4c2420     mov r9, qword [rsp + 0x20]
0x00011dfd      0f85c5040000   jne 0x122c8
0x00011e03      4c8b442408     mov r8, qword [rsp + 8]
0x00011e08      488b4c2430     mov rcx, qword [rsp + 0x30]
0x00011e0d      4c89ca         mov rdx, r9
0x00011e10      4c89ee         mov rsi, r13
0x00011e13      4c89f7         mov rdi, r14
0x00011e16      e895fbffff     call sym.get_subexp_sub.isra.32
0x00011e1b      83f801         cmp eax, 1
0x00011e1e      4d8b4608       mov r8, qword [r14 + 8]
0x00011e22      0f87a0000000   ja 0x11ec8
0x00011e28      4883c501       add rbp, 1
0x00011e2c      493b6d20       cmp rbp, qword [r13 + 0x20]
0x00011e30      4d89fb         mov r11, r15
0x00011e33      4c89e3         mov rbx, r12
0x00011e36      0f8dac020000   jge 0x120e8
0x00011e3c      498b4528       mov rax, qword [r13 + 0x28]
0x00011e40      4c8b0ce8       mov r9, qword [rax + rbp*8]
0x00011e44      4d8b7908       mov r15, qword [r9 + 8]
0x00011e48      4c89fa         mov rdx, r15
0x00011e4b      4c29da         sub rdx, r11
0x00011e4e      4885d2         test rdx, rdx
0x00011e51      4c8d241a       lea r12, [rdx + rbx]
0x00011e55      7eac           jle 0x11e03
0x00011e57      4d396630       cmp qword [r14 + 0x30], r12
0x00011e5b      0f8d6fffffff   jge 0x11dd0
0x00011e61      4d396658       cmp qword [r14 + 0x58], r12
0x00011e65      4889542418     mov qword [rsp + 0x18], rdx
0x00011e6a      4c894c2410     mov qword [rsp + 0x10], r9
0x00011e6f      0f8c53040000   jl 0x122c8
0x00011e75      4c89e6         mov rsi, r12
0x00011e78      4c89f7         mov rdi, r14
0x00011e7b      4c895c2420     mov qword [rsp + 0x20], r11
0x00011e80      e85b97ffff     call sym.clean_state_log_if_needed
0x00011e85      85c0           test eax, eax
0x00011e87      753f           jne 0x11ec8
0x00011e89      4d8b4608       mov r8, qword [r14 + 8]
0x00011e8d      488b542418     mov rdx, qword [rsp + 0x18]
0x00011e92      4c8b4c2410     mov r9, qword [rsp + 0x10]
0x00011e97      4c8b5c2420     mov r11, qword [rsp + 0x20]
0x00011e9c      e92fffffff     jmp 0x11dd0
0x00011ea1      0f1f80000000.  nop dword [rax]
0x00011ea8      4989f0         mov r8, rsi
0x00011eab      4889fe         mov rsi, rdi
0x00011eae      6690           nop
0x00011eb0      498d4801       lea rcx, [r8 + 1]
0x00011eb4      4889f7         mov rdi, rsi
0x00011eb7      e9f7fdffff     jmp 0x11cb3
0x00011ebc      0f1f4000       nop dword [rax]
0x00011ec0      31c0           xor eax, eax
0x00011ec2      660f1f440000   nop word [rax + rax]
0x00011ec8      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00011ed0      6448331c2528.  xor rbx, qword fs:[0x28]
0x00011ed9      0f854d050000   jne 0x1242c
0x00011edf      4881c4b80000.  add rsp, 0xb8
0x00011ee6      5b             pop rbx
0x00011ee7      5d             pop rbp
0x00011ee8      415c           pop r12
0x00011eea      415d           pop r13
0x00011eec      415e           pop r14
0x00011eee      415f           pop r15
0x00011ef0      c3             ret
0x00011ef1      0f1f80000000.  nop dword [rax]
0x00011ef8      4883c028       add rax, 0x28
0x00011efc      8078f800       cmp byte [rax - 8], 0
0x00011f00      0f8430feffff   je 0x11d36
0x00011f06      4c3b28         cmp r13, qword [rax]
0x00011f09      75ed           jne 0x11ef8
0x00011f0b      488b442470     mov rax, qword [rsp + 0x70]
0x00011f10      4839442470     cmp qword [rsp + 0x70], rax
0x00011f15      c784248c0000.  mov dword [rsp + 0x8c], 0
0x00011f20      0f8ddafcffff   jge 0x11c00
0x00011f26      4a8d04ed0000.  lea rax, [r13*8]
0x00011f2e      4c8b642470     mov r12, qword [rsp + 0x70]
0x00011f33      488b6c2438     mov rbp, qword [rsp + 0x38]
0x00011f38      4889442450     mov qword [rsp + 0x50], rax
0x00011f3d      4b8d446d00     lea rax, [r13 + r13*2]
0x00011f42      4f8d04a4       lea r8, [r12 + r12*4]
0x00011f46      48c1e003       shl rax, 3
0x00011f4a      4889442458     mov qword [rsp + 0x58], rax
0x00011f4f      4e8d3cc50000.  lea r15, [r8*8]
0x00011f57      e931010000     jmp 0x1208d
0x00011f5c      0f1f4000       nop dword [rax]
0x00011f60      488b4d28       mov rcx, qword [rbp + 0x28]
0x00011f64      488b7c2458     mov rdi, qword [rsp + 0x58]
0x00011f69      488b4c3910     mov rcx, qword [rcx + rdi + 0x10]
0x00011f6e      488b09         mov rcx, qword [rcx]
0x00011f71      488d0c49       lea rcx, [rcx + rcx*2]
0x00011f75      488d0cca       lea rcx, [rdx + rcx*8]
0x00011f79      48894c2418     mov qword [rsp + 0x18], rcx
0x00011f7e      48035c2408     add rbx, qword [rsp + 8]
0x00011f83      418b96a00000.  mov edx, dword [r14 + 0xa0]
0x00011f8a      4c89f7         mov rdi, r14
0x00011f8d      4829c3         sub rbx, rax
0x00011f90      488d73ff       lea rsi, [rbx - 1]
0x00011f94      e897bdffff     call sym.re_string_context_at
0x00011f99      488b742460     mov rsi, qword [rsp + 0x60]
0x00011f9e      89c1           mov ecx, eax
0x00011fa0      498b86b80000.  mov rax, qword [r14 + 0xb8]
0x00011fa7      4c8d14dd0000.  lea r10, [rbx*8]
0x00011faf      48c744241000.  mov qword [rsp + 0x10], 0
0x00011fb8      4e8d1c10       lea r11, [rax + r10]
0x00011fbc      488b0430       mov rax, qword [rax + rsi]
0x00011fc0      498b13         mov rdx, qword [r11]
0x00011fc3      4885c0         test rax, rax
0x00011fc6      7409           je 0x11fd1
0x00011fc8      488b4010       mov rax, qword [rax + 0x10]
0x00011fcc      4889442410     mov qword [rsp + 0x10], rax
0x00011fd1      4885d2         test rdx, rdx
0x00011fd4      0f8416030000   je 0x122f0
0x00011fda      488b7250       mov rsi, qword [rdx + 0x50]
0x00011fde      488b7c2468     mov rdi, qword [rsp + 0x68]
0x00011fe3      488b542418     mov rdx, qword [rsp + 0x18]
0x00011fe8      4c89542430     mov qword [rsp + 0x30], r10
0x00011fed      894c2428       mov dword [rsp + 0x28], ecx
0x00011ff1      e84ab1ffff     call sym.re_node_set_init_union
0x00011ff6      85c0           test eax, eax
0x00011ff8      8984248c0000.  mov dword [rsp + 0x8c], eax
0x00011fff      8b4c2428       mov ecx, dword [rsp + 0x28]
0x00012003      4c8b542430     mov r10, qword [rsp + 0x30]
0x00012008      0f858a030000   jne 0x12398
0x0001200e      4d0396b80000.  add r10, qword [r14 + 0xb8]
0x00012015      488b542468     mov rdx, qword [rsp + 0x68]
0x0001201a      4889ee         mov rsi, rbp
0x0001201d      488b7c2478     mov rdi, qword [rsp + 0x78]
0x00012022      4c89542428     mov qword [rsp + 0x28], r10
0x00012027      e874b2ffff     call sym.re_acquire_state_context
0x0001202c      4c8b542428     mov r10, qword [rsp + 0x28]
0x00012031      488bbc24a000.  mov rdi, qword [rsp + 0xa0]
0x00012039      498902         mov qword [r10], rax
0x0001203c      e81ffcfeff     call sym.imp.free
0x00012041      498b96b80000.  mov rdx, qword [r14 + 0xb8]
0x00012048      48833cda00     cmp qword [rdx + rbx*8], 0
0x0001204d      0f84ce020000   je 0x12321
0x00012053      48837c242000   cmp qword [rsp + 0x20], 0
0x00012059      751d           jne 0x12078
0x0001205b      488b442460     mov rax, qword [rsp + 0x60]
0x00012060      488b5c2410     mov rbx, qword [rsp + 0x10]
0x00012065      488b0402       mov rax, qword [rdx + rax]
0x00012069      48395810       cmp qword [rax + 0x10], rbx
0x0001206d      0f8fc5020000   jg 0x12338
0x00012073      0f1f440000     nop dword [rax + rax]
0x00012078      4983c401       add r12, 1
0x0001207c      4983c728       add r15, 0x28
0x00012080      4d3ba6c80000.  cmp r12, qword [r14 + 0xc8]
0x00012087      0f8d73fbffff   jge 0x11c00
0x0001208d      498b86d80000.  mov rax, qword [r14 + 0xd8]
0x00012094      4c01f8         add rax, r15
0x00012097      4c3b28         cmp r13, qword [rax]
0x0001209a      75dc           jne 0x12078
0x0001209c      488b7c2408     mov rdi, qword [rsp + 8]
0x000120a1      483b7808       cmp rdi, qword [rax + 8]
0x000120a5      75d1           jne 0x12078
0x000120a7      488b5818       mov rbx, qword [rax + 0x18]
0x000120ab      488b4010       mov rax, qword [rax + 0x10]
0x000120af      488b5530       mov rdx, qword [rbp + 0x30]
0x000120b3      4889d9         mov rcx, rbx
0x000120b6      4829c1         sub rcx, rax
0x000120b9      48894c2420     mov qword [rsp + 0x20], rcx
0x000120be      0f849cfeffff   je 0x11f60
0x000120c4      488b4d18       mov rcx, qword [rbp + 0x18]
0x000120c8      488b7c2450     mov rdi, qword [rsp + 0x50]
0x000120cd      488b0c39       mov rcx, qword [rcx + rdi]
0x000120d1      488d0c49       lea rcx, [rcx + rcx*2]
0x000120d5      488d0cca       lea rcx, [rdx + rcx*8]
0x000120d9      48894c2418     mov qword [rsp + 0x18], rcx
0x000120de      e99bfeffff     jmp 0x11f7e
0x000120e3      0f1f440000     nop dword [rax + rax]
0x000120e8      4c89eb         mov rbx, r13
0x000120eb      4d89c5         mov r13, r8
0x000120ee      4d8d5f01       lea r11, [r15 + 1]
0x000120f2      4c395c2408     cmp qword [rsp + 8], r11
0x000120f7      0f8c8cfcffff   jl 0x11d89
0x000120fd      4c89e0         mov rax, r12
0x00012100      4e8d3cdd0000.  lea r15, [r11*8]
0x00012108      4989dc         mov r12, rbx
0x0001210b      4c89db         mov rbx, r11
0x0001210e      4d89eb         mov r11, r13
0x00012111      4989c5         mov r13, rax
0x00012114      0f1f4000       nop dword [rax]
0x00012118      4889d8         mov rax, rbx
0x0001211b      492b0424       sub rax, qword [r12]
0x0001211f      4885c0         test rax, rax
0x00012122      7e21           jle 0x12145
0x00012124      4d396e30       cmp qword [r14 + 0x30], r13
0x00012128      0f8e83020000   jle 0x123b1
0x0001212e      410fb64c1bff   movzx ecx, byte [r11 + rbx - 1]
0x00012134      498d4501       lea rax, [r13 + 1]
0x00012138      43380c2b       cmp byte [r11 + r13], cl
0x0001213c      0f8530010000   jne 0x12272
0x00012142      4989c5         mov r13, rax
0x00012145      498b86b80000.  mov rax, qword [r14 + 0xb8]
0x0001214c      4a8b0438       mov rax, qword [rax + r15]
0x00012150      4885c0         test rax, rax
0x00012153      0f8406010000   je 0x1225f
0x00012159      488b4810       mov rcx, qword [rax + 0x10]
0x0001215d      4885c9         test rcx, rcx
0x00012160      0f8ef9000000   jle 0x1225f
0x00012166      488b7818       mov rdi, qword [rax + 0x18]
0x0001216a      488b442450     mov rax, qword [rsp + 0x50]
0x0001216f      31d2           xor edx, edx
0x00012171      4c8b442458     mov r8, qword [rsp + 0x58]
0x00012176      488b30         mov rsi, qword [rax]
0x00012179      eb12           jmp 0x1218d
0x0001217b      0f1f440000     nop dword [rax + rax]
0x00012180      4883c201       add rdx, 1
0x00012184      4839d1         cmp rcx, rdx
0x00012187      0f84d2000000   je 0x1225f
0x0001218d      488b2cd7       mov rbp, qword [rdi + rdx*8]
0x00012191      4889e8         mov rax, rbp
0x00012194      48c1e004       shl rax, 4
0x00012198      4801f0         add rax, rsi
0x0001219b      80780809       cmp byte [rax + 8], 9
0x0001219f      75df           jne 0x12180
0x000121a1      4c3b00         cmp r8, qword [rax]
0x000121a4      75da           jne 0x12180
0x000121a6      4883fdff       cmp rbp, 0xffffffffffffffff
0x000121aa      0f84af000000   je 0x1225f
0x000121b0      498b742410     mov rsi, qword [r12 + 0x10]
0x000121b5      498b0c24       mov rcx, qword [r12]
0x000121b9      4885f6         test rsi, rsi
0x000121bc      0f84be000000   je 0x12280
0x000121c2      4c895c2410     mov qword [rsp + 0x10], r11
0x000121c7      498b542408     mov rdx, qword [r12 + 8]
0x000121cc      4883ec08       sub rsp, 8
0x000121d0      6a09           push 9
0x000121d2      4989d9         mov r9, rbx
0x000121d5      4989e8         mov r8, rbp
0x000121d8      4c89f7         mov rdi, r14
0x000121db      e880e7ffff     call sym.check_arrival
0x000121e0      5a             pop rdx
0x000121e1      83f801         cmp eax, 1
0x000121e4      59             pop rcx
0x000121e5      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x000121ea      7473           je 0x1225f
0x000121ec      85c0           test eax, eax
0x000121ee      0f85d4fcffff   jne 0x11ec8
0x000121f4      498b442420     mov rax, qword [r12 + 0x20]
0x000121f9      493b442418     cmp rax, qword [r12 + 0x18]
0x000121fe      0f84d4010000   je 0x123d8
0x00012204      be28000000     mov esi, 0x28                           ; '('
0x00012209      bf01000000     mov edi, 1
0x0001220e      e8adfcfeff     call sym.imp.calloc
0x00012213      4885c0         test rax, rax
0x00012216      0f849d000000   je 0x122b9
0x0001221c      498b542420     mov rdx, qword [r12 + 0x20]
0x00012221      498b4c2428     mov rcx, qword [r12 + 0x28]
0x00012226      4c89e6         mov rsi, r12
0x00012229      4c8b442408     mov r8, qword [rsp + 8]
0x0001222e      4c89f7         mov rdi, r14
0x00012231      488904d1       mov qword [rcx + rdx*8], rax
0x00012235      488b4c2430     mov rcx, qword [rsp + 0x30]
0x0001223a      4883c201       add rdx, 1
0x0001223e      488928         mov qword [rax], rbp
0x00012241      48895808       mov qword [rax + 8], rbx
0x00012245      4989542420     mov qword [r12 + 0x20], rdx
0x0001224a      4889c2         mov rdx, rax
0x0001224d      e85ef7ffff     call sym.get_subexp_sub.isra.32
0x00012252      83f801         cmp eax, 1
0x00012255      4d8b5e08       mov r11, qword [r14 + 8]
0x00012259      0f8769fcffff   ja 0x11ec8
0x0001225f      4883c301       add rbx, 1
0x00012263      4983c708       add r15, 8
0x00012267      48395c2408     cmp qword [rsp + 8], rbx
0x0001226c      0f8da6feffff   jge 0x12118
0x00012272      4d89dd         mov r13, r11
0x00012275      e90ffbffff     jmp 0x11d89
0x0001227a      660f1f440000   nop word [rax + rax]
0x00012280      4889de         mov rsi, rbx
0x00012283      bf18000000     mov edi, 0x18
0x00012288      4c895c2418     mov qword [rsp + 0x18], r11
0x0001228d      4829ce         sub rsi, rcx
0x00012290      48894c2410     mov qword [rsp + 0x10], rcx
0x00012295      4883c601       add rsi, 1
0x00012299      e822fcfeff     call sym.imp.calloc
0x0001229e      4885c0         test rax, rax
0x000122a1      4889c6         mov rsi, rax
0x000122a4      4989442410     mov qword [r12 + 0x10], rax
0x000122a9      488b4c2410     mov rcx, qword [rsp + 0x10]
0x000122ae      4c8b5c2418     mov r11, qword [rsp + 0x18]
0x000122b3      0f8509ffffff   jne 0x121c2
0x000122b9      b80c000000     mov eax, 0xc
0x000122be      e905fcffff     jmp 0x11ec8
0x000122c3      0f1f440000     nop dword [rax + rax]
0x000122c8      4889d9         mov rcx, rbx
0x000122cb      4c89eb         mov rbx, r13
0x000122ce      4d89c5         mov r13, r8
0x000122d1      48396b20       cmp qword [rbx + 0x20], rbp
0x000122d5      0f8faefaffff   jg 0x11d89
0x000122db      4885ed         test rbp, rbp
0x000122de      4989cc         mov r12, rcx
0x000122e1      0f840bfeffff   je 0x120f2
0x000122e7      4d89df         mov r15, r11
0x000122ea      e9fffdffff     jmp 0x120ee
0x000122ef      90             nop
0x000122f0      488b542418     mov rdx, qword [rsp + 0x18]
0x000122f5      488b7c2478     mov rdi, qword [rsp + 0x78]
0x000122fa      4889ee         mov rsi, rbp
0x000122fd      4c895c2428     mov qword [rsp + 0x28], r11
0x00012302      e899afffff     call sym.re_acquire_state_context
0x00012307      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0001230c      498b96b80000.  mov rdx, qword [r14 + 0xb8]
0x00012313      498903         mov qword [r11], rax
0x00012316      48833cda00     cmp qword [rdx + rbx*8], 0
0x0001231b      0f8532fdffff   jne 0x12053
0x00012321      8b84248c0000.  mov eax, dword [rsp + 0x8c]
0x00012328      85c0           test eax, eax
0x0001232a      0f8423fdffff   je 0x12053
0x00012330      e993fbffff     jmp 0x11ec8
0x00012335      0f1f00         nop dword [rax]
0x00012338      488b442418     mov rax, qword [rsp + 0x18]
0x0001233d      488b4c2408     mov rcx, qword [rsp + 8]
0x00012342      4c89f7         mov rdi, r14
0x00012345      4c8d4010       lea r8, [rax + 0x10]
0x00012349      488d5808       lea rbx, [rax + 8]
0x0001234d      4c89c2         mov rdx, r8
0x00012350      4889de         mov rsi, rbx
0x00012353      4c89442410     mov qword [rsp + 0x10], r8
0x00012358      e883b8ffff     call sym.check_subexp_matching_top.isra.18
0x0001235d      85c0           test eax, eax
0x0001235f      8984248c0000.  mov dword [rsp + 0x8c], eax
0x00012366      0f855cfbffff   jne 0x11ec8
0x0001236c      4c8b442410     mov r8, qword [rsp + 0x10]
0x00012371      4889de         mov rsi, rbx
0x00012374      4c89f7         mov rdi, r14
0x00012377      4c89c2         mov rdx, r8
0x0001237a      e8d1f7ffff     call sym.transit_state_bkref.isra.34
0x0001237f      85c0           test eax, eax
0x00012381      8984248c0000.  mov dword [rsp + 0x8c], eax
0x00012388      0f84eafcffff   je 0x12078
0x0001238e      e935fbffff     jmp 0x11ec8
0x00012393      0f1f440000     nop dword [rax + rax]
0x00012398      488bbc24a000.  mov rdi, qword [rsp + 0xa0]
0x000123a0      e8bbf8feff     call sym.imp.free
0x000123a5      8b84248c0000.  mov eax, dword [rsp + 0x8c]
0x000123ac      e917fbffff     jmp 0x11ec8
0x000123b1      4d396e58       cmp qword [r14 + 0x58], r13
0x000123b5      0f8eb7feffff   jle 0x12272
0x000123bb      418d7501       lea esi, [r13 + 1]
0x000123bf      4c89f7         mov rdi, r14
0x000123c2      e8c990ffff     call sym.extend_buffers
0x000123c7      85c0           test eax, eax
0x000123c9      0f85f9faffff   jne 0x11ec8
0x000123cf      4d8b5e08       mov r11, qword [r14 + 8]
0x000123d3      e956fdffff     jmp 0x1212e
0x000123d8      488d540001     lea rdx, [rax + rax + 1]
0x000123dd      498b7c2428     mov rdi, qword [r12 + 0x28]
0x000123e2      488d34d50000.  lea rsi, [rdx*8]
0x000123ea      4889542410     mov qword [rsp + 0x10], rdx
0x000123ef      e89cfbfeff     call sym.imp.realloc
0x000123f4      4885c0         test rax, rax
0x000123f7      0f84bcfeffff   je 0x122b9
0x000123fd      488b542410     mov rdx, qword [rsp + 0x10]
0x00012402      4989442428     mov qword [r12 + 0x28], rax
0x00012407      4989542418     mov qword [r12 + 0x18], rdx
0x0001240c      e9f3fdffff     jmp 0x12204
0x00012411      4c8b6c2430     mov r13, qword [rsp + 0x30]
0x00012416      498b86c80000.  mov rax, qword [r14 + 0xc8]
0x0001241d      e9eefaffff     jmp 0x11f10
0x00012422      4c8b642408     mov r12, qword [rsp + 8]
0x00012427      e9c6fcffff     jmp 0x120f2
0x0001242c      e87ff9feff     call sym.imp.__stack_chk_fail
0x00012431      0f1f440000     nop dword [rax + rax]
0x00012436      662e0f1f8400.  nop word cs:[rax + rax]
;-- merge_state_with_log:
0x00012440      4157           push r15
0x00012442      4156           push r14
0x00012444      4155           push r13
0x00012446      4154           push r12
0x00012448      4989fd         mov r13, rdi
0x0001244b      55             push rbp
0x0001244c      53             push rbx
0x0001244d      4889f3         mov rbx, rsi
0x00012450      4883ec38       sub rsp, 0x38
0x00012454      4c8b6648       mov r12, qword [rsi + 0x48]
0x00012458      4c8bb6b80000.  mov r14, qword [rsi + 0xb8]
0x0001245f      64488b042528.  mov rax, qword fs:[0x28]
0x00012468      4889442428     mov qword [rsp + 0x28], rax
0x0001246d      31c0           xor eax, eax
0x0001246f      4c8bbe980000.  mov r15, qword [rsi + 0x98]
0x00012476      4a8d2ce50000.  lea rbp, [r12*8]
0x0001247e      4901ee         add r14, rbp
0x00012481      4c39a6c00000.  cmp qword [rsi + 0xc0], r12
0x00012488      7d46           jge 0x124d0
0x0001248a      498916         mov qword [r14], rdx
0x0001248d      4889d5         mov rbp, rdx
0x00012490      4c89a6c00000.  mov qword [rsi + 0xc0], r12
0x00012497      4983bf980000.  cmp qword [r15 + 0x98], 0
0x0001249f      0f8523010000   jne 0x125c8
0x000124a5      488b4c2428     mov rcx, qword [rsp + 0x28]
0x000124aa      6448330c2528.  xor rcx, qword fs:[0x28]
0x000124b3      4889e8         mov rax, rbp
0x000124b6      0f856b010000   jne 0x12627
0x000124bc      4883c438       add rsp, 0x38
0x000124c0      5b             pop rbx
0x000124c1      5d             pop rbp
0x000124c2      415c           pop r12
0x000124c4      415d           pop r13
0x000124c6      415e           pop r14
0x000124c8      415f           pop r15
0x000124ca      c3             ret
0x000124cb      0f1f440000     nop dword [rax + rax]
0x000124d0      498b06         mov rax, qword [r14]
0x000124d3      4885c0         test rax, rax
0x000124d6      0f84dc000000   je 0x125b8
0x000124dc      4885d2         test rdx, rdx
0x000124df      488b4050       mov rax, qword [rax + 0x50]
0x000124e3      0f8487000000   je 0x12570
0x000124e9      4c8b7250       mov r14, qword [rdx + 0x50]
0x000124ed      488d7c2410     lea rdi, [rsp + 0x10]
0x000124f2      4889c2         mov rdx, rax
0x000124f5      48893c24       mov qword [rsp], rdi
0x000124f9      4c89f6         mov rsi, r14
0x000124fc      e83facffff     call sym.re_node_set_init_union
0x00012501      85c0           test eax, eax
0x00012503      41894500       mov dword [r13], eax
0x00012507      0f8513010000   jne 0x12620
0x0001250d      488b4348       mov rax, qword [rbx + 0x48]
0x00012511      8b93a0000000   mov edx, dword [rbx + 0xa0]
0x00012517      4889df         mov rdi, rbx
0x0001251a      488d70ff       lea rsi, [rax - 1]
0x0001251e      e80db8ffff     call sym.re_string_context_at
0x00012523      4c8b83b80000.  mov r8, qword [rbx + 0xb8]
0x0001252a      488b1424       mov rdx, qword [rsp]
0x0001252e      89c1           mov ecx, eax
0x00012530      4c89fe         mov rsi, r15
0x00012533      4c89ef         mov rdi, r13
0x00012536      4901e8         add r8, rbp
0x00012539      4c89442408     mov qword [rsp + 8], r8
0x0001253e      e85dadffff     call sym.re_acquire_state_context
0x00012543      4c8b442408     mov r8, qword [rsp + 8]
0x00012548      4d85f6         test r14, r14
0x0001254b      4889c5         mov rbp, rax
0x0001254e      498900         mov qword [r8], rax
0x00012551      0f8440ffffff   je 0x12497
0x00012557      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0001255c      e8fff6feff     call sym.imp.free
0x00012561      e931ffffff     jmp 0x12497
0x00012566      662e0f1f8400.  nop word cs:[rax + rax]
0x00012570      f30f6f00       movdqu xmm0, xmmword [rax]
0x00012574      4889df         mov rdi, rbx
0x00012577      8b96a0000000   mov edx, dword [rsi + 0xa0]
0x0001257d      498d7424ff     lea rsi, [r12 - 1]
0x00012582      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00012587      488b4010       mov rax, qword [rax + 0x10]
0x0001258b      4889442420     mov qword [rsp + 0x20], rax
0x00012590      e89bb7ffff     call sym.re_string_context_at
0x00012595      488d542410     lea rdx, [rsp + 0x10]
0x0001259a      89c1           mov ecx, eax
0x0001259c      4c89fe         mov rsi, r15
0x0001259f      4c89ef         mov rdi, r13
0x000125a2      e8f9acffff     call sym.re_acquire_state_context
0x000125a7      4889c5         mov rbp, rax
0x000125aa      498906         mov qword [r14], rax
0x000125ad      e9e5feffff     jmp 0x12497
0x000125b2      660f1f440000   nop word [rax + rax]
0x000125b8      498916         mov qword [r14], rdx
0x000125bb      4889d5         mov rbp, rdx
0x000125be      e9d4feffff     jmp 0x12497
0x000125c3      0f1f440000     nop dword [rax + rax]
0x000125c8      4885ed         test rbp, rbp
0x000125cb      7453           je 0x12620
0x000125cd      4c8d7510       lea r14, [rbp + 0x10]
0x000125d1      4c8d7d18       lea r15, [rbp + 0x18]
0x000125d5      4c89e1         mov rcx, r12
0x000125d8      4889df         mov rdi, rbx
0x000125db      4c89fa         mov rdx, r15
0x000125de      4c89f6         mov rsi, r14
0x000125e1      e8fab5ffff     call sym.check_subexp_matching_top.isra.18
0x000125e6      85c0           test eax, eax
0x000125e8      41894500       mov dword [r13], eax
0x000125ec      7532           jne 0x12620
0x000125ee      f6456840       test byte [rbp + 0x68], 0x40
0x000125f2      0f84adfeffff   je 0x124a5
0x000125f8      4c89fa         mov rdx, r15
0x000125fb      4c89f6         mov rsi, r14
0x000125fe      4889df         mov rdi, rbx
0x00012601      e84af5ffff     call sym.transit_state_bkref.isra.34
0x00012606      85c0           test eax, eax
0x00012608      41894500       mov dword [r13], eax
0x0001260c      7512           jne 0x12620
0x0001260e      488b83b80000.  mov rax, qword [rbx + 0xb8]
0x00012615      4a8b2ce0       mov rbp, qword [rax + r12*8]
0x00012619      e987feffff     jmp 0x124a5
0x0001261e      6690           nop
0x00012620      31ed           xor ebp, ebp
0x00012622      e97efeffff     jmp 0x124a5
0x00012627      e884f7feff     call sym.imp.__stack_chk_fail
0x0001262c      0f1f4000       nop dword [rax]
;-- sift_states_backward:
0x00012630      4157           push r15
0x00012632      4156           push r14
0x00012634      4989fe         mov r14, rdi
0x00012637      4155           push r13
0x00012639      4154           push r12
0x0001263b      4989f5         mov r13, rsi
0x0001263e      55             push rbp
0x0001263f      53             push rbx
0x00012640      4883ec68       sub rsp, 0x68
0x00012644      4c8b7e18       mov r15, qword [rsi + 0x18]
0x00012648      488b5e10       mov rbx, qword [rsi + 0x10]
0x0001264c      48893c24       mov qword [rsp], rdi
0x00012650      bf08000000     mov edi, 8
0x00012655      48c744244001.  mov qword [rsp + 0x40], 1
0x0001265e      64488b042528.  mov rax, qword fs:[0x28]
0x00012667      4889442458     mov qword [rsp + 0x58], rax
0x0001266c      31c0           xor eax, eax
0x0001266e      48c744244801.  mov qword [rsp + 0x48], 1
0x00012677      e8a4f8feff     call sym.imp.malloc
0x0001267c      4885c0         test rax, rax
0x0001267f      4889442450     mov qword [rsp + 0x50], rax
0x00012684      0f84da020000   je 0x12964
0x0001268a      488d4c2440     lea rcx, [rsp + 0x40]
0x0001268f      488918         mov qword [rax], rbx
0x00012692      4c89fa         mov rdx, r15
0x00012695      4c89ee         mov rsi, r13
0x00012698      4c89f7         mov rdi, r14
0x0001269b      48894c2410     mov qword [rsp + 0x10], rcx
0x000126a0      e8fb190000     call sym.update_cur_sifted_state
0x000126a5      85c0           test eax, eax
0x000126a7      0f8588020000   jne 0x12935
0x000126ad      4a8d04fd0000.  lea rax, [r15*8]
0x000126b5      4d85ff         test r15, r15
0x000126b8      c744242c0000.  mov dword [rsp + 0x2c], 0
0x000126c0      4889442408     mov qword [rsp + 8], rax
0x000126c5      498d4530       lea rax, [r13 + 0x30]
0x000126c9      4889442438     mov qword [rsp + 0x38], rax
0x000126ce      0f8e03020000   jle 0x128d7
0x000126d4      498b7d00       mov rdi, qword [r13]
0x000126d8      488b442408     mov rax, qword [rsp + 8]
0x000126dd      48833c0700     cmp qword [rdi + rax], 0
0x000126e2      0f8410020000   je 0x128f8
0x000126e8      488b0424       mov rax, qword [rsp]
0x000126ec      c744242c0000.  mov dword [rsp + 0x2c], 0
0x000126f4      8b4c242c       mov ecx, dword [rsp + 0x2c]
0x000126f8      3988e0000000   cmp dword [rax + 0xe0], ecx
0x000126fe      0f8c0d020000   jl 0x12911
0x00012704      488b1c24       mov rbx, qword [rsp]
0x00012708      488b7c2408     mov rdi, qword [rsp + 8]
0x0001270d      4983ef01       sub r15, 1
0x00012711      48c744244800.  mov qword [rsp + 0x48], 0
0x0001271a      488b83b80000.  mov rax, qword [rbx + 0xb8]
0x00012721      4c8b6438f8     mov r12, qword [rax + rdi - 8]
0x00012726      4d85e4         test r12, r12
0x00012729      0f8481010000   je 0x128b0
0x0001272f      49837c242800   cmp qword [r12 + 0x28], 0
0x00012735      4c8bb3980000.  mov r14, qword [rbx + 0x98]
0x0001273c      0f8e6e010000   jle 0x128b0
0x00012742      31db           xor ebx, ebx
0x00012744      e9a2000000     jmp 0x127eb
0x00012749      0f1f80000000.  nop dword [rax]
0x00012750      488b3c24       mov rdi, qword [rsp]
0x00012754      4c89fa         mov rdx, r15
0x00012757      e8c4b6ffff     call sym.check_node_accept
0x0001275c      84c0           test al, al
0x0001275e      747c           je 0x127dc
0x00012760      498b4500       mov rax, qword [r13]
0x00012764      488b4c2408     mov rcx, qword [rsp + 8]
0x00012769      488b0408       mov rax, qword [rax + rcx]
0x0001276d      4885c0         test rax, rax
0x00012770      746a           je 0x127dc
0x00012772      498b5618       mov rdx, qword [r14 + 0x18]
0x00012776      488b7810       mov rdi, qword [rax + 0x10]
0x0001277a      488d7018       lea rsi, [rax + 0x18]
0x0001277e      488b14ea       mov rdx, qword [rdx + rbp*8]
0x00012782      e8c997ffff     call sym.re_node_set_contains.isra.3
0x00012787      4885c0         test rax, rax
0x0001278a      7450           je 0x127dc
0x0001278c      41ba01000000   mov r10d, 1
0x00012792      49837d2800     cmp qword [r13 + 0x28], 0
0x00012797      742e           je 0x127c7
0x00012799      498b4618       mov rax, qword [r14 + 0x18]
0x0001279d      4883ec08       sub rsp, 8
0x000127a1      498d7528       lea rsi, [r13 + 0x28]
0x000127a5      4f8d043a       lea r8, [r10 + r15]
0x000127a9      4989e9         mov r9, rbp
0x000127ac      488b0ce8       mov rcx, qword [rax + rbp*8]
0x000127b0      4157           push r15
0x000127b2      488b542448     mov rdx, qword [rsp + 0x48]
0x000127b7      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000127bc      e83f9affff     call sym.check_dst_limits.isra.13
0x000127c1      84c0           test al, al
0x000127c3      5a             pop rdx
0x000127c4      59             pop rcx
0x000127c5      7515           jne 0x127dc
0x000127c7      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000127cc      4889ee         mov rsi, rbp
0x000127cf      e83c82ffff     call sym.re_node_set_insert
0x000127d4      84c0           test al, al
0x000127d6      0f8454010000   je 0x12930
0x000127dc      4883c301       add rbx, 1
0x000127e0      493b5c2428     cmp rbx, qword [r12 + 0x28]
0x000127e5      0f8dc5000000   jge 0x128b0
0x000127eb      498b442430     mov rax, qword [r12 + 0x30]
0x000127f0      498b36         mov rsi, qword [r14]
0x000127f3      488b2cd8       mov rbp, qword [rax + rbx*8]
0x000127f7      4989e9         mov r9, rbp
0x000127fa      49c1e104       shl r9, 4
0x000127fe      4c01ce         add rsi, r9
0x00012801      f6460a10       test byte [rsi + 0xa], 0x10
0x00012805      0f8445ffffff   je 0x12750
0x0001280b      488b0c24       mov rcx, qword [rsp]
0x0001280f      498b4518       mov rax, qword [r13 + 0x18]
0x00012813      4d89f8         mov r8, r15
0x00012816      4889ea         mov rdx, rbp
0x00012819      4c894c2418     mov qword [rsp + 0x18], r9
0x0001281e      4c8b99980000.  mov r11, qword [rcx + 0x98]
0x00012825      4889442420     mov qword [rsp + 0x20], rax
0x0001282a      498b3b         mov rdi, qword [r11]
0x0001282d      498db3d80000.  lea rsi, [r11 + 0xd8]
0x00012834      4c895c2430     mov qword [rsp + 0x30], r11
0x00012839      e8c2deffff     call sym.check_node_accept_bytes.isra.31
0x0001283e      4c63d0         movsxd r10, eax
0x00012841      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00012846      4183fa00       cmp r10d, 0
0x0001284a      0f8e90000000   jle 0x128e0
0x00012850      4963c2         movsxd rax, r10d
0x00012853      4c01f8         add rax, r15
0x00012856      4839442420     cmp qword [rsp + 0x20], rax
0x0001285b      0f8c31ffffff   jl 0x12792
0x00012861      498b5500       mov rdx, qword [r13]
0x00012865      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x0001286a      488b04c2       mov rax, qword [rdx + rax*8]
0x0001286e      4885c0         test rax, rax
0x00012871      7473           je 0x128e6
0x00012873      498b5318       mov rdx, qword [r11 + 0x18]
0x00012877      488b7810       mov rdi, qword [rax + 0x10]
0x0001287b      488d7018       lea rsi, [rax + 0x18]
0x0001287f      4c894c2418     mov qword [rsp + 0x18], r9
0x00012884      488b14ea       mov rdx, qword [rdx + rbp*8]
0x00012888      e8c396ffff     call sym.re_node_set_contains.isra.3
0x0001288d      4885c0         test rax, rax
0x00012890      0f85fcfeffff   jne 0x12792
0x00012896      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x0001289b      498b36         mov rsi, qword [r14]
0x0001289e      4c01ce         add rsi, r9
0x000128a1      e9aafeffff     jmp 0x12750
0x000128a6      662e0f1f8400.  nop word cs:[rax + rax]
0x000128b0      488b4c2410     mov rcx, qword [rsp + 0x10]
0x000128b5      488b3c24       mov rdi, qword [rsp]
0x000128b9      4c89fa         mov rdx, r15
0x000128bc      4c89ee         mov rsi, r13
0x000128bf      e8dc170000     call sym.update_cur_sifted_state
0x000128c4      85c0           test eax, eax
0x000128c6      756d           jne 0x12935
0x000128c8      48836c240808   sub qword [rsp + 8], 8
0x000128ce      4d85ff         test r15, r15
0x000128d1      0f85fdfdffff   jne 0x126d4
0x000128d7      31c0           xor eax, eax
0x000128d9      eb5a           jmp 0x12935
0x000128db      0f1f440000     nop dword [rax + rax]
0x000128e0      0f85acfeffff   jne 0x12792
0x000128e6      498b36         mov rsi, qword [r14]
0x000128e9      4c01ce         add rsi, r9
0x000128ec      e95ffeffff     jmp 0x12750
0x000128f1      0f1f80000000.  nop dword [rax]
0x000128f8      488b0424       mov rax, qword [rsp]
0x000128fc      8344242c01     add dword [rsp + 0x2c], 1
0x00012901      8b4c242c       mov ecx, dword [rsp + 0x2c]
0x00012905      3988e0000000   cmp dword [rax + 0xe0], ecx
0x0001290b      0f8df3fdffff   jge 0x12704
0x00012911      488b542408     mov rdx, qword [rsp + 8]
0x00012916      31f6           xor esi, esi
0x00012918      e823f5feff     call sym.imp.memset
0x0001291d      488b7c2450     mov rdi, qword [rsp + 0x50]
0x00012922      e839f3feff     call sym.imp.free
0x00012927      31c0           xor eax, eax
0x00012929      eb1a           jmp 0x12945
0x0001292b      0f1f440000     nop dword [rax + rax]
0x00012930      b80c000000     mov eax, 0xc
0x00012935      488b7c2450     mov rdi, qword [rsp + 0x50]
0x0001293a      890424         mov dword [rsp], eax
0x0001293d      e81ef3feff     call sym.imp.free
0x00012942      8b0424         mov eax, dword [rsp]
0x00012945      488b542458     mov rdx, qword [rsp + 0x58]
0x0001294a      644833142528.  xor rdx, qword fs:[0x28]
0x00012953      7516           jne 0x1296b
0x00012955      4883c468       add rsp, 0x68
0x00012959      5b             pop rbx
0x0001295a      5d             pop rbp
0x0001295b      415c           pop r12
0x0001295d      415d           pop r13
0x0001295f      415e           pop r14
0x00012961      415f           pop r15
0x00012963      c3             ret
0x00012964      b80c000000     mov eax, 0xc
0x00012969      ebda           jmp 0x12945
0x0001296b      e840f4feff     call sym.imp.__stack_chk_fail
;-- re_search_internal:
0x00012970      4157           push r15
0x00012972      4156           push r14
0x00012974      4155           push r13
0x00012976      4154           push r12
0x00012978      4d89cd         mov r13, r9
0x0001297b      55             push rbp
0x0001297c      53             push rbx
0x0001297d      4889cd         mov rbp, rcx
0x00012980      b920000000     mov ecx, 0x20                           ; "@"
0x00012985      4d89c4         mov r12, r8
0x00012988      4881ec380200.  sub rsp, sym..interp
0x0001298f      488b1f         mov rbx, qword [rdi]
0x00012992      488b84247802.  mov rax, qword [rsp + 0x278]
0x0001299a      48897c2448     mov qword [rsp + 0x48], rdi
0x0001299f      4889742478     mov qword [rsp + 0x78], rsi
0x000129a4      4889fe         mov rsi, rdi
0x000129a7      488dbc242001.  lea rdi, [rsp + 0x120]
0x000129af      488994248800.  mov qword [rsp + 0x88], rdx
0x000129b7      48895c2438     mov qword [rsp + 0x38], rbx
0x000129bc      48898424b800.  mov qword [rsp + 0xb8], rax
0x000129c4      48893c24       mov qword [rsp], rdi
0x000129c8      64488b042528.  mov rax, qword fs:[0x28]
0x000129d1      488984242802.  mov qword [rsp + 0x228], rax
0x000129d9      31c0           xor eax, eax
0x000129db      f348ab         rep stosq qword [rdi], rax
0x000129de      488b7e20       mov rdi, qword [rsi + 0x20]
0x000129e2      48899c24b801.  mov qword [rsp + 0x1b8], rbx
0x000129ea      4885ff         test rdi, rdi
0x000129ed      48897c2468     mov qword [rsp + 0x68], rdi
0x000129f2      7422           je 0x12a16
0x000129f4      0fb65638       movzx edx, byte [rsi + 0x38]
0x000129f8      f6c208         test dl, 8
0x000129fb      0f848f040000   je 0x12e90
0x00012a01      4c39c5         cmp rbp, r8
0x00012a04      0f8486040000   je 0x12e90
0x00012a0a      83e201         and edx, 1
0x00012a0d      480f44c7       cmove rax, rdi
0x00012a11      4889442468     mov qword [rsp + 0x68], rax
0x00012a16      488b442448     mov rax, qword [rsp + 0x48]
0x00012a1b      48c784249800.  mov qword [rsp + 0x98], 0
0x00012a27      488b4030       mov rax, qword [rax + 0x30]
0x00012a2b      483b84247002.  cmp rax, qword [rsp + 0x270]
0x00012a33      731f           jae 0x12a54
0x00012a35      488b8c247002.  mov rcx, qword [rsp + 0x270]
0x00012a3d      488d51ff       lea rdx, [rcx - 1]
0x00012a41      4829c2         sub rdx, rax
0x00012a44      482994247002.  sub qword [rsp + 0x270], rdx
0x00012a4c      488994249800.  mov qword [rsp + 0x98], rdx
0x00012a54      488b742448     mov rsi, qword [rsp + 0x48]
0x00012a59      48837e1000     cmp qword [rsi + 0x10], 0
0x00012a5e      0f848c0e0000   je 0x138f0
0x00012a64      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00012a69      488b4748       mov rax, qword [rdi + 0x48]
0x00012a6d      4885c0         test rax, rax
0x00012a70      0f847a0e0000   je 0x138f0
0x00012a76      488b5750       mov rdx, qword [rdi + 0x50]
0x00012a7a      4885d2         test rdx, rdx
0x00012a7d      0f846d0e0000   je 0x138f0
0x00012a83      488b4f58       mov rcx, qword [rdi + 0x58]
0x00012a87      4885c9         test rcx, rcx
0x00012a8a      0f84600e0000   je 0x138f0
0x00012a90      48837f6000     cmp qword [rdi + 0x60], 0
0x00012a95      0f84550e0000   je 0x138f0
0x00012a9b      4883781000     cmp qword [rax + 0x10], 0
0x00012aa0      7536           jne 0x12ad8
0x00012aa2      48837a1000     cmp qword [rdx + 0x10], 0
0x00012aa7      752f           jne 0x12ad8
0x00012aa9      4883791000     cmp qword [rcx + 0x10], 0
0x00012aae      7406           je 0x12ab6
0x00012ab0      807e3800       cmp byte [rsi + 0x38], 0
0x00012ab4      7822           js 0x12ad8
0x00012ab6      4885ed         test rbp, rbp
0x00012ab9      7411           je 0x12acc
0x00012abb      4d85e4         test r12, r12
0x00012abe      c744245c0100.  mov dword [rsp + 0x5c], 1
0x00012ac6      0f851d0a0000   jne 0x134e9
0x00012acc      4531e4         xor r12d, r12d
0x00012acf      31ed           xor ebp, ebp
0x00012ad1      0f1f80000000.  nop dword [rax]
0x00012ad8      4883bc247002.  cmp qword [rsp + 0x270], 0
0x00012ae1      c74424580100.  mov dword [rsp + 0x58], 1
0x00012ae9      0f8481030000   je 0x12e70
0x00012aef      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x00012af4      488b442448     mov rax, qword [rsp + 0x48]
0x00012af9      488bbc248800.  mov rdi, qword [rsp + 0x88]
0x00012b01      498b7310       mov rsi, qword [r11 + 0x10]
0x00012b05      488b5828       mov rbx, qword [rax + 0x28]
0x00012b09      418b93b40000.  mov edx, dword [r11 + 0xb4]
0x00012b10      488b4018       mov rax, qword [rax + 0x18]
0x00012b14      4889bc247801.  mov qword [rsp + 0x178], rdi
0x00012b1c      4889bc247001.  mov qword [rsp + 0x170], rdi
0x00012b24      4889742408     mov qword [rsp + 8], rsi
0x00012b29      488d7601       lea rsi, [rsi + 1]
0x00012b2d      48899c24b000.  mov qword [rsp + 0xb0], rbx
0x00012b35      4863ca         movsxd rcx, edx
0x00012b38      48c1e816       shr rax, 0x16
0x00012b3c      48899c249801.  mov qword [rsp + 0x198], rbx
0x00012b44      83e001         and eax, 1
0x00012b47      4839ce         cmp rsi, rcx
0x00012b4a      899424b00100.  mov dword [rsp + 0x1b0], edx
0x00012b51      480f4cf1       cmovl rsi, rcx
0x00012b55      488d4f01       lea rcx, [rdi + 1]
0x00012b59      888424a80100.  mov byte [rsp + 0x1a8], al
0x00012b60      4889bc248801.  mov qword [rsp + 0x188], rdi
0x00012b68      4889bc248001.  mov qword [rsp + 0x180], rdi
0x00012b70      4839ce         cmp rsi, rcx
0x00012b73      488b3c24       mov rdi, qword [rsp]
0x00012b77      480f4ff1       cmovg rsi, rcx
0x00012b7b      4885db         test rbx, rbx
0x00012b7e      488b4c2478     mov rcx, qword [rsp + 0x78]
0x00012b83      0f95c3         setne bl
0x00012b86      09d8           or eax, ebx
0x00012b88      888424ab0100.  mov byte [rsp + 0x1ab], al
0x00012b8f      410fb683b000.  movzx eax, byte [r11 + 0xb0]
0x00012b97      48898c242001.  mov qword [rsp + 0x120], rcx
0x00012b9f      89c2           mov edx, eax
0x00012ba1      c0e803         shr al, 3
0x00012ba4      c0ea02         shr dl, 2
0x00012ba7      83e001         and eax, 1
0x00012baa      83e201         and edx, 1
0x00012bad      888424aa0100.  mov byte [rsp + 0x1aa], al
0x00012bb4      889424a90100.  mov byte [rsp + 0x1a9], dl
0x00012bbb      e8407dffff     call sym.re_string_realloc_buffers
0x00012bc0      85c0           test eax, eax
0x00012bc2      8944245c       mov dword [rsp + 0x5c], eax
0x00012bc6      0f85f4080000   jne 0x134c0
0x00012bcc      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00012bd1      488d87b80000.  lea rax, [rdi + 0xb8]
0x00012bd8      48898424a001.  mov qword [rsp + 0x1a0], rax
0x00012be0      0fb687b00000.  movzx eax, byte [rdi + 0xb0]
0x00012be7      88442408       mov byte [rsp + 8], al
0x00012beb      c0e804         shr al, 4
0x00012bee      83e001         and eax, 1
0x00012bf1      80bc24ab0100.  cmp byte [rsp + 0x1ab], 0
0x00012bf9      888424ae0100.  mov byte [rsp + 0x1ae], al
0x00012c00      7523           jne 0x12c25
0x00012c02      488b742438     mov rsi, qword [rsp + 0x38]
0x00012c07      488b442478     mov rax, qword [rsp + 0x78]
0x00012c0c      83beb4000000.  cmp dword [rsi + 0xb4], 1
0x00012c13      488984242801.  mov qword [rsp + 0x128], rax
0x00012c1b      488b84248800.  mov rax, qword [rsp + 0x88]
0x00012c23      7e02           jle 0x12c27
0x00012c25      31c0           xor eax, eax
0x00012c27      488984245001.  mov qword [rsp + 0x150], rax
0x00012c2f      488984245801.  mov qword [rsp + 0x158], rax
0x00012c37      488b442448     mov rax, qword [rsp + 0x48]
0x00012c3c      4c89ac248801.  mov qword [rsp + 0x188], r13
0x00012c44      4c89ac248001.  mov qword [rsp + 0x180], r13
0x00012c4c      0fb64038       movzx eax, byte [rax + 0x38]
0x00012c50      88442408       mov byte [rsp + 8], al
0x00012c54      c0e807         shr al, 7
0x00012c57      888424ad0100.  mov byte [rsp + 0x1ad], al
0x00012c5e      488b442438     mov rax, qword [rsp + 0x38]
0x00012c63      4c8bb0980000.  mov r14, qword [rax + 0x98]
0x00012c6a      8b8424800200.  mov eax, dword [rsp + 0x280]
0x00012c71      48c78424c801.  mov qword [rsp + 0x1c8], 0xffffffffffffffff
0x00012c7d      4f8d2c36       lea r13, [r14 + r14]
0x00012c81      898424c00100.  mov dword [rsp + 0x1c0], eax
0x00012c88      4d85ed         test r13, r13
0x00012c8b      7e52           jle 0x12cdf
0x00012c8d      48b866666666.  movabs rax, 0x666666666666666
0x00012c97      4939c5         cmp r13, rax
0x00012c9a      0f8f400d0000   jg 0x139e0
0x00012ca0      4b8d7cf500     lea rdi, [r13 + r14*8]
0x00012ca5      48c1e703       shl rdi, 3
0x00012ca9      e872f2feff     call sym.imp.malloc
0x00012cae      4c89f7         mov rdi, r14
0x00012cb1      4989c7         mov r15, rax
0x00012cb4      48898424f801.  mov qword [rsp + 0x1f8], rax
0x00012cbc      48c1e704       shl rdi, 4
0x00012cc0      e85bf2feff     call sym.imp.malloc
0x00012cc5      4885c0         test rax, rax
0x00012cc8      488984241802.  mov qword [rsp + 0x218], rax
0x00012cd0      0f840a0d0000   je 0x139e0
0x00012cd6      4d85ff         test r15, r15
0x00012cd9      0f84010d0000   je 0x139e0
0x00012cdf      4883bc247002.  cmp qword [rsp + 0x270], 1
0x00012ce8      4c89ac24f001.  mov qword [rsp + 0x1f0], r13
0x00012cf0      c78424000200.  mov dword [rsp + 0x200], 1
0x00012cfb      4c89ac241002.  mov qword [rsp + 0x210], r13
0x00012d03      0f861f110000   jbe 0x13e28
0x00012d09      488b84246001.  mov rax, qword [rsp + 0x160]
0x00012d11      48bafeffffff.  movabs rdx, 0x1ffffffffffffffe          ; 2305843009213693950
0x00012d1b      4839d0         cmp rax, rdx
0x00012d1e      0f87bc0c0000   ja 0x139e0
0x00012d24      488d3cc50800.  lea rdi, [rax*8 + 8]
0x00012d2c      e8eff1feff     call sym.imp.malloc
0x00012d31      4885c0         test rax, rax
0x00012d34      4889c7         mov rdi, rax
0x00012d37      48898424d801.  mov qword [rsp + 0x1d8], rax
0x00012d3f      0f84eb0c0000   je 0x13a30
0x00012d45      8b8424800200.  mov eax, dword [rsp + 0x280]
0x00012d4c      4889ac24d800.  mov qword [rsp + 0xd8], rbp
0x00012d54      83e001         and eax, 1
0x00012d57      83f801         cmp eax, 1
0x00012d5a      19c0           sbb eax, eax
0x00012d5c      83e002         and eax, 2
0x00012d5f      83c004         add eax, 4
0x00012d62      898424900100.  mov dword [rsp + 0x190], eax
0x00012d69      31c0           xor eax, eax
0x00012d6b      4c39e5         cmp rbp, r12
0x00012d6e      0f9ec0         setle al
0x00012d71      8d4400ff       lea eax, [rax + rax - 1]
0x00012d75      898424ac0000.  mov dword [rsp + 0xac], eax
0x00012d7c      4c89e0         mov rax, r12
0x00012d7f      480f4ec5       cmovle rax, rbp
0x00012d83      488984249000.  mov qword [rsp + 0x90], rax
0x00012d8b      4c89e0         mov rax, r12
0x00012d8e      480f4dc5       cmovge rax, rbp
0x00012d92      48837c246800   cmp qword [rsp + 0x68], 0
0x00012d98      4889442470     mov qword [rsp + 0x70], rax
0x00012d9d      488b442438     mov rax, qword [rsp + 0x38]
0x00012da2      8bb0b4000000   mov esi, dword [rax + 0xb4]
0x00012da8      b808000000     mov eax, 8
0x00012dad      89b424c80000.  mov dword [rsp + 0xc8], esi
0x00012db4      7439           je 0x12def
0x00012db6      83fe01         cmp esi, 1
0x00012db9      b904000000     mov ecx, 4
0x00012dbe      741e           je 0x12dde
0x00012dc0      488b442448     mov rax, qword [rsp + 0x48]
0x00012dc5      f6401a40       test byte [rax + 0x1a], 0x40
0x00012dc9      0f857f0d0000   jne 0x13b4e
0x00012dcf      4883bc24b000.  cmp qword [rsp + 0xb0], 0
0x00012dd8      0f85700d0000   jne 0x13b4e
0x00012dde      31d2           xor edx, edx
0x00012de0      4c39e5         cmp rbp, r12
0x00012de3      0fb6c3         movzx eax, bl
0x00012de6      0f9ec2         setle dl
0x00012de9      09c8           or eax, ecx
0x00012deb      01d2           add edx, edx
0x00012ded      09d0           or eax, edx
0x00012def      483b6c2470     cmp rbp, qword [rsp + 0x70]
0x00012df4      0f9fc1         setg cl
0x00012df7      483bac249000.  cmp rbp, qword [rsp + 0x90]
0x00012dff      0f9cc2         setl dl
0x00012e02      08d1           or cl, dl
0x00012e04      0f85cf0a0000   jne 0x138d9
0x00012e0a      488d8c24d800.  lea rcx, [rsp + 0xd8]
0x00012e12      4c39e5         cmp rbp, r12
0x00012e15      ba00000000     mov edx, 0
0x00012e1a      480f4ed1       cmovle rdx, rcx
0x00012e1e      4885d2         test rdx, rdx
0x00012e21      48899424c000.  mov qword [rsp + 0xc0], rdx
0x00012e29      0f958424cf00.  setne byte [rsp + 0xcf]
0x00012e31      83e804         sub eax, 4
0x00012e34      898424a80000.  mov dword [rsp + 0xa8], eax
0x00012e3b      488d8424d000.  lea rax, [rsp + 0xd0]
0x00012e43      4889442428     mov qword [rsp + 0x28], rax
0x00012e48      8b8424a80000.  mov eax, dword [rsp + 0xa8]
0x00012e4f      83f804         cmp eax, 4
0x00012e52      0f87e50b0000   ja 0x13a3d
0x00012e58      488d0dc19900.  lea rcx, [0x0001c820]
0x00012e5f      48630481       movsxd rax, dword [rcx + rax*4]
0x00012e63      4801c8         add rax, rcx
0x00012e66      ffe0           jmp rax
0x00012e68      0f1f84000000.  nop dword [rax + rax]
0x00012e70      488b442438     mov rax, qword [rsp + 0x38]
0x00012e75      4883b8980000.  cmp qword [rax + 0x98], 0
0x00012e7d      0f95c0         setne al
0x00012e80      0fb6c0         movzx eax, al
0x00012e83      89442458       mov dword [rsp + 0x58], eax
0x00012e87      e963fcffff     jmp 0x12aef
0x00012e8c      0f1f4000       nop dword [rax]
0x00012e90      48c744246800.  mov qword [rsp + 0x68], 0
0x00012e99      e978fbffff     jmp 0x12a16
0x00012e9e      48396c2470     cmp qword [rsp + 0x70], rbp
0x00012ea3      7e5a           jle 0x12eff
0x00012ea5      488b442478     mov rax, qword [rsp + 0x78]
0x00012eaa      488b7c2468     mov rdi, qword [rsp + 0x68]
0x00012eaf      0fb61428       movzx edx, byte [rax + rbp]
0x00012eb3      488d4501       lea rax, [rbp + 1]
0x00012eb7      803c1700       cmp byte [rdi + rdx], 0
0x00012ebb      0f8587000000   jne 0x12f48
0x00012ec1      488b742468     mov rsi, qword [rsp + 0x68]
0x00012ec6      488b4c2470     mov rcx, qword [rsp + 0x70]
0x00012ecb      488b7c2478     mov rdi, qword [rsp + 0x78]
0x00012ed0      eb18           jmp 0x12eea
0x00012ed2      660f1f440000   nop word [rax + rax]
0x00012ed8      0fb61407       movzx edx, byte [rdi + rax]
0x00012edc      488d4001       lea rax, [rax + 1]
0x00012ee0      803c1600       cmp byte [rsi + rdx], 0
0x00012ee4      0f8597110000   jne 0x14081
0x00012eea      4839c1         cmp rcx, rax
0x00012eed      4889c5         mov rbp, rax
0x00012ef0      75e6           jne 0x12ed8
0x00012ef2      488b442470     mov rax, qword [rsp + 0x70]
0x00012ef7      48898424d800.  mov qword [rsp + 0xd8], rax
0x00012eff      48396c2470     cmp qword [rsp + 0x70], rbp
0x00012f04      7542           jne 0x12f48
0x00012f06      31c0           xor eax, eax
0x00012f08      488b742470     mov rsi, qword [rsp + 0x70]
0x00012f0d      4839b4248800.  cmp qword [rsp + 0x88], rsi
0x00012f15      7e09           jle 0x12f20
0x00012f17      488b442478     mov rax, qword [rsp + 0x78]
0x00012f1c      0fb60430       movzx eax, byte [rax + rsi]
0x00012f20      488bb424b000.  mov rsi, qword [rsp + 0xb0]
0x00012f28      4885f6         test rsi, rsi
0x00012f2b      7404           je 0x12f31
0x00012f2d      0fb60406       movzx eax, byte [rsi + rax]
0x00012f31      488b7c2468     mov rdi, qword [rsp + 0x68]
0x00012f36      803c0700       cmp byte [rdi + rax], 0
0x00012f3a      0f8499090000   je 0x138d9
0x00012f40      488b6c2470     mov rbp, qword [rsp + 0x70]
0x00012f45      0f1f00         nop dword [rax]
0x00012f48      8b9424800200.  mov edx, dword [rsp + 0x280]
0x00012f4f      488b3c24       mov rdi, qword [rsp]
0x00012f53      4889ee         mov rsi, rbp
0x00012f56      e8a5b0ffff     call sym.re_string_reconstruct
0x00012f5b      85c0           test eax, eax
0x00012f5d      8944245c       mov dword [rsp + 0x5c], eax
0x00012f61      0f8559050000   jne 0x134c0
0x00012f67      83bc24c80000.  cmp dword [rsp + 0xc8], 1
0x00012f6f      741c           je 0x12f8d
0x00012f71      4883bc245001.  cmp qword [rsp + 0x150], 0
0x00012f7a      7411           je 0x12f8d
0x00012f7c      488b84243001.  mov rax, qword [rsp + 0x130]
0x00012f84      8338ff         cmp dword [rax], 0xffffffff
0x00012f87      0f8424090000   je 0x138b1
0x00012f8d      488b9c24b801.  mov rbx, qword [rsp + 0x1b8]
0x00012f95      0fb6442458     movzx eax, byte [rsp + 0x58]
0x00012f9a      c78424000200.  mov dword [rsp + 0x200], 0
0x00012fa5      48c78424e801.  mov qword [rsp + 0x1e8], 0
0x00012fb1      48c78424e001.  mov qword [rsp + 0x1e0], 0
0x00012fbd      c78424d00000.  mov dword [rsp + 0xd0], 0
0x00012fc8      4c8b7348       mov r14, qword [rbx + 0x48]
0x00012fcc      83e001         and eax, 1
0x00012fcf      888424ce0000.  mov byte [rsp + 0xce], al
0x00012fd6      488b84246801.  mov rax, qword [rsp + 0x168]
0x00012fde      41807e6800     cmp byte [r14 + 0x68], 0
0x00012fe3      4889442408     mov qword [rsp + 8], rax
0x00012fe8      0f8872090000   js 0x13960
0x00012fee      488b8424d801.  mov rax, qword [rsp + 0x1d8]
0x00012ff6      4885c0         test rax, rax
0x00012ff9      7417           je 0x13012
0x00012ffb      4883bb980000.  cmp qword [rbx + 0x98], 0
0x00013003      488b7c2408     mov rdi, qword [rsp + 8]
0x00013008      4c8934f8       mov qword [rax + rdi*8], r14
0x0001300c      0f85e90e0000   jne 0x13efb
0x00013012      0fb68424cf00.  movzx eax, byte [rsp + 0xcf]
0x0001301a      88442418       mov byte [rsp + 0x18], al
0x0001301e      410fb64668     movzx eax, byte [r14 + 0x68]
0x00013023      a810           test al, 0x10
0x00013025      48c7442420ff.  mov qword [rsp + 0x20], 0xffffffffffffffff
0x0001302e      48c744243000.  mov qword [rsp + 0x30], 0
0x00013037      0f85830e0000   jne 0x13ec0
0x0001303d      488b8424c000.  mov rax, qword [rsp + 0xc0]
0x00013045      4c8b84246801.  mov r8, qword [rsp + 0x168]
0x0001304d      4889442450     mov qword [rsp + 0x50], rax
0x00013052      488d8424e000.  lea rax, [rsp + 0xe0]
0x0001305a      4889442460     mov qword [rsp + 0x60], rax
0x0001305f      488d8424d400.  lea rax, [rsp + 0xd4]
0x00013067      488984248000.  mov qword [rsp + 0x80], rax
0x0001306f      eb5b           jmp 0x130cc
0x00013071      0f1f80000000.  nop dword [rax]
0x00013078      4d39ee         cmp r14, r13
0x0001307b      4c8b84246801.  mov r8, qword [rsp + 0x168]
0x00013083      0f94c0         sete al
0x00013086      20442418       and byte [rsp + 0x18], al
0x0001308a      410fb64568     movzx eax, byte [r13 + 0x68]
0x0001308f      480f445c2408   cmove rbx, qword [rsp + 8]
0x00013095      a810           test al, 0x10
0x00013097      48895c2408     mov qword [rsp + 8], rbx
0x0001309c      742b           je 0x130c9
0x0001309e      84c0           test al, al
0x000130a0      0f88ba040000   js 0x13560
0x000130a6      8b442458       mov eax, dword [rsp + 0x58]
0x000130aa      4c89442420     mov qword [rsp + 0x20], r8
0x000130af      85c0           test eax, eax
0x000130b1      0f841f010000   je 0x131d6
0x000130b7      48c744243001.  mov qword [rsp + 0x30], 1
0x000130c0      48c744245000.  mov qword [rsp + 0x50], 0
0x000130c9      4d89ee         mov r14, r13
0x000130cc      4c3984248801.  cmp qword [rsp + 0x188], r8
0x000130d4      0f8eea000000   jle 0x131c4
0x000130da      488b84246001.  mov rax, qword [rsp + 0x160]
0x000130e2      498d5801       lea rbx, [r8 + 1]
0x000130e6      4839c3         cmp rbx, rax
0x000130e9      0f8da1040000   jge 0x13590
0x000130ef      488b84245001.  mov rax, qword [rsp + 0x150]
0x000130f7      4839c3         cmp rbx, rax
0x000130fa      0f8d80070000   jge 0x13880
0x00013100      41f6466820     test byte [r14 + 0x68], 0x20
0x00013105      0f85c5040000   jne 0x135d0
0x0001310b      498d4001       lea rax, [r8 + 1]
0x0001310f      488984246801.  mov qword [rsp + 0x168], rax
0x00013117      488b84242801.  mov rax, qword [rsp + 0x128]
0x0001311f      460fb62c00     movzx r13d, byte [rax + r8]
0x00013124      498b4658       mov rax, qword [r14 + 0x58]
0x00013128      4885c0         test rax, rax
0x0001312b      0f840f070000   je 0x13840
0x00013131      4e8b2ce8       mov r13, qword [rax + r13*8]
0x00013135      4883bc24d801.  cmp qword [rsp + 0x1d8], 0
0x0001313e      7414           je 0x13154
0x00013140      488b3424       mov rsi, qword [rsp]
0x00013144      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00013149      4c89ea         mov rdx, r13
0x0001314c      e8eff2ffff     call sym.merge_state_with_log
0x00013151      4989c5         mov r13, rax
0x00013154      4d85ed         test r13, r13
0x00013157      0f851bffffff   jne 0x13078
0x0001315d      8b8c24d00000.  mov ecx, dword [rsp + 0xd0]
0x00013164      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x0001316c      85c9           test ecx, ecx
0x0001316e      0f85bc080000   jne 0x13a30
0x00013174      4885ff         test rdi, rdi
0x00013177      744b           je 0x131c4
0x00013179      0fb68424ce00.  movzx eax, byte [rsp + 0xce]
0x00013181      83f001         xor eax, 1
0x00013184      84442430       test byte [rsp + 0x30], al
0x00013188      753a           jne 0x131c4
0x0001318a      488bb424e001.  mov rsi, qword [rsp + 0x1e0]
0x00013192      488b84246801.  mov rax, qword [rsp + 0x168]
0x0001319a      31c9           xor ecx, ecx
0x0001319c      eb15           jmp 0x131b3
0x0001319e      6690           nop
0x000131a0      48833cd700     cmp qword [rdi + rdx*8], 0
0x000131a5      4889d0         mov rax, rdx
0x000131a8      b901000000     mov ecx, 1
0x000131ad      0f856d030000   jne 0x13520
0x000131b3      488d5001       lea rdx, [rax + 1]
0x000131b7      4839d6         cmp rsi, rdx
0x000131ba      7de4           jge 0x131a0
0x000131bc      84c9           test cl, cl
0x000131be      0f85ca0e0000   jne 0x1408e
0x000131c4      488b442450     mov rax, qword [rsp + 0x50]
0x000131c9      4885c0         test rax, rax
0x000131cc      7408           je 0x131d6
0x000131ce      488b7c2408     mov rdi, qword [rsp + 8]
0x000131d3      480138         add qword [rax], rdi
0x000131d6      488b442420     mov rax, qword [rsp + 0x20]
0x000131db      4883f8ff       cmp rax, 0xffffffffffffffff
0x000131df      0f84bb060000   je 0x138a0
0x000131e5      4883f8fe       cmp rax, 0xfffffffffffffffe
0x000131e9      0f84f1070000   je 0x139e0
0x000131ef      488b442420     mov rax, qword [rsp + 0x20]
0x000131f4      48898424c801.  mov qword [rsp + 0x1c8], rax
0x000131fc      488b442448     mov rax, qword [rsp + 0x48]
0x00013201      f6403810       test byte [rax + 0x38], 0x10
0x00013205      0f85b5070000   jne 0x139c0
0x0001320b      4883bc247002.  cmp qword [rsp + 0x270], 1
0x00013214      0f86f2080000   jbe 0x13b0c
0x0001321a      488b4c2420     mov rcx, qword [rsp + 0x20]
0x0001321f      488b9c24d801.  mov rbx, qword [rsp + 0x1d8]
0x00013227      488b3c24       mov rdi, qword [rsp]
0x0001322b      488b04cb       mov rax, qword [rbx + rcx*8]
0x0001322f      488b7010       mov rsi, qword [rax + 0x10]
0x00013233      488d5018       lea rdx, [rax + 0x18]
0x00013237      e8f4acffff     call sym.check_halt_state_context.isra.20
0x0001323c      4989c5         mov r13, rax
0x0001323f      48898424d001.  mov qword [rsp + 0x1d0], rax
0x00013247      488b442438     mov rax, qword [rsp + 0x38]
0x0001324c      f680b0000000.  test byte [rax + 0xb0], 1
0x00013253      751b           jne 0x13270
0x00013255      488b442438     mov rax, qword [rsp + 0x38]
0x0001325a      4883b8980000.  cmp qword [rax + 0x98], 0
0x00013262      0f8494090000   je 0x13bfc
0x00013268      4c8bac24d001.  mov r13, qword [rsp + 0x1d0]
0x00013270      48befeffffff.  movabs rsi, 0x1ffffffffffffffe          ; 2305843009213693950
0x0001327a      4839742420     cmp qword [rsp + 0x20], rsi
0x0001327f      4c8bbc24b801.  mov r15, qword [rsp + 0x1b8]
0x00013287      0f875e0c0000   ja 0x13eeb
0x0001328d      488b442420     mov rax, qword [rsp + 0x20]
0x00013292      4883c001       add rax, 1
0x00013296      488d1cc50000.  lea rbx, [rax*8]
0x0001329e      4889442408     mov qword [rsp + 8], rax
0x000132a3      4889df         mov rdi, rbx
0x000132a6      e875ecfeff     call sym.imp.malloc
0x000132ab      4885c0         test rax, rax
0x000132ae      4989c4         mov r12, rax
0x000132b1      0f8429070000   je 0x139e0
0x000132b7      4983bf980000.  cmp qword [r15 + 0x98], 0
0x000132bf      0f8490080000   je 0x13b55
0x000132c5      4889df         mov rdi, rbx
0x000132c8      e853ecfeff     call sym.imp.malloc
0x000132cd      4885c0         test rax, rax
0x000132d0      4889c5         mov rbp, rax
0x000132d3      0f84ff060000   je 0x139d8
0x000132d9      4c8b742420     mov r14, qword [rsp + 0x20]
0x000132de      488d9c24e000.  lea rbx, [rsp + 0xe0]
0x000132e6      4c897c2410     mov qword [rsp + 0x10], r15
0x000132eb      4889442418     mov qword [rsp + 0x18], rax
0x000132f0      488b442408     mov rax, qword [rsp + 8]
0x000132f5      31f6           xor esi, esi
0x000132f7      4889ef         mov rdi, rbp
0x000132fa      488d14c50000.  lea rdx, [rax*8]
0x00013302      e839ebfeff     call sym.imp.memset
0x00013307      660fefc0       pxor xmm0, xmm0
0x0001330b      4c89a424e000.  mov qword [rsp + 0xe0], r12
0x00013313      4889ac24e800.  mov qword [rsp + 0xe8], rbp
0x0001331b      4c89ac24f000.  mov qword [rsp + 0xf0], r13
0x00013323      4889de         mov rsi, rbx
0x00013326      4c89b424f800.  mov qword [rsp + 0xf8], r14
0x0001332e      488b3c24       mov rdi, qword [rsp]
0x00013332      0f294320       movaps xmmword [rbx + 0x20], xmm0
0x00013336      48c743300000.  mov qword [rbx + 0x30], 0
0x0001333e      e8edf2ffff     call sym.sift_states_backward
0x00013343      488bbc241001.  mov rdi, qword [rsp + 0x110]
0x0001334b      4189c7         mov r15d, eax
0x0001334e      e80de9feff     call sym.imp.free
0x00013353      4585ff         test r15d, r15d
0x00013356      0f85180c0000   jne 0x13f74
0x0001335c      49833c2400     cmp qword [r12], 0
0x00013361      0f856c0c0000   jne 0x13fd3
0x00013367      48837d0000     cmp qword [rbp], 0
0x0001336c      0f85610c0000   jne 0x13fd3
0x00013372      488b9424d801.  mov rdx, qword [rsp + 0x1d8]
0x0001337a      660f1f440000   nop word [rax + rax]
0x00013380      4983ee01       sub r14, 1
0x00013384      4983feff       cmp r14, 0xffffffffffffffff
0x00013388      0f84bd0a0000   je 0x13e4b
0x0001338e      4a8b04f2       mov rax, qword [rdx + r14*8]
0x00013392      4885c0         test rax, rax
0x00013395      74e9           je 0x13380
0x00013397      f6406810       test byte [rax + 0x68], 0x10
0x0001339b      74e3           je 0x13380
0x0001339d      488b7010       mov rsi, qword [rax + 0x10]
0x000133a1      488b3c24       mov rdi, qword [rsp]
0x000133a5      488d5018       lea rdx, [rax + 0x18]
0x000133a9      4c89f1         mov rcx, r14
0x000133ac      e87fabffff     call sym.check_halt_state_context.isra.20
0x000133b1      4989c5         mov r13, rax
0x000133b4      498d4601       lea rax, [r14 + 1]
0x000133b8      4889442408     mov qword [rsp + 8], rax
0x000133bd      e92effffff     jmp 0x132f0
0x000133c2      48396c2470     cmp qword [rsp + 0x70], rbp
0x000133c7      0f8e32fbffff   jle 0x12eff
0x000133cd      488b442478     mov rax, qword [rsp + 0x78]
0x000133d2      488bbc24b000.  mov rdi, qword [rsp + 0xb0]
0x000133da      488b742468     mov rsi, qword [rsp + 0x68]
0x000133df      0fb60428       movzx eax, byte [rax + rbp]
0x000133e3      0fb61407       movzx edx, byte [rdi + rax]
0x000133e7      488d4501       lea rax, [rbp + 1]
0x000133eb      803c1600       cmp byte [rsi + rdx], 0
0x000133ef      0f8553fbffff   jne 0x12f48
0x000133f5      488b742468     mov rsi, qword [rsp + 0x68]
0x000133fa      488bbc24b000.  mov rdi, qword [rsp + 0xb0]
0x00013402      488b4c2470     mov rcx, qword [rsp + 0x70]
0x00013407      4c8b442478     mov r8, qword [rsp + 0x78]
0x0001340c      eb19           jmp 0x13427
0x0001340e      6690           nop
0x00013410      410fb60400     movzx eax, byte [r8 + rax]
0x00013415      0fb61407       movzx edx, byte [rdi + rax]
0x00013419      488d4501       lea rax, [rbp + 1]
0x0001341d      803c1600       cmp byte [rsi + rdx], 0
0x00013421      0f855a0c0000   jne 0x14081
0x00013427      4839c1         cmp rcx, rax
0x0001342a      4889c5         mov rbp, rax
0x0001342d      75e1           jne 0x13410
0x0001342f      e9befaffff     jmp 0x12ef2
0x00013434      4839ac249000.  cmp qword [rsp + 0x90], rbp
0x0001343c      0f8f97040000   jg 0x138d9
0x00013442      31c9           xor ecx, ecx
0x00013444      4889e8         mov rax, rbp
0x00013447      488b7c2468     mov rdi, qword [rsp + 0x68]
0x0001344c      488bb424b000.  mov rsi, qword [rsp + 0xb0]
0x00013454      4c8b8c249000.  mov r9, qword [rsp + 0x90]
0x0001345c      4c8b542478     mov r10, qword [rsp + 0x78]
0x00013461      4c8b84248800.  mov r8, qword [rsp + 0x88]
0x00013469      eb17           jmp 0x13482
0x0001346b      0f1f440000     nop dword [rax + rax]
0x00013470      4883e801       sub rax, 1
0x00013474      b901000000     mov ecx, 1
0x00013479      4c39c8         cmp rax, r9
0x0001347c      0f8cde090000   jl 0x13e60
0x00013482      31d2           xor edx, edx
0x00013484      4939c0         cmp r8, rax
0x00013487      7e05           jle 0x1348e
0x00013489      410fb61402     movzx edx, byte [r10 + rax]
0x0001348e      4885f6         test rsi, rsi
0x00013491      7404           je 0x13497
0x00013493      0fb61416       movzx edx, byte [rsi + rdx]
0x00013497      803c1700       cmp byte [rdi + rdx], 0
0x0001349b      74d3           je 0x13470
0x0001349d      84c9           test cl, cl
0x0001349f      0f84a3faffff   je 0x12f48
0x000134a5      48898424d800.  mov qword [rsp + 0xd8], rax
0x000134ad      4889c5         mov rbp, rax
0x000134b0      e993faffff     jmp 0x12f48
0x000134b5      0f1f00         nop dword [rax]
0x000134b8      8944245c       mov dword [rsp + 0x5c], eax
0x000134bc      0f1f4000       nop dword [rax]
0x000134c0      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x000134c8      e893e7feff     call sym.imp.free
0x000134cd      488b442438     mov rax, qword [rsp + 0x38]
0x000134d2      4883b8980000.  cmp qword [rax + 0x98], 0
0x000134da      0f8520090000   jne 0x13e00
0x000134e0      488b3c24       mov rdi, qword [rsp]
0x000134e4      e85787ffff     call sym.re_string_destruct
0x000134e9      488bb4242802.  mov rsi, qword [rsp + 0x228]
0x000134f1      644833342528.  xor rsi, qword fs:[0x28]
0x000134fa      8b44245c       mov eax, dword [rsp + 0x5c]
0x000134fe      0f85970b0000   jne 0x1409b
0x00013504      4881c4380200.  add rsp, sym..interp
0x0001350b      5b             pop rbx
0x0001350c      5d             pop rbp
0x0001350d      415c           pop r12
0x0001350f      415d           pop r13
0x00013511      415e           pop r14
0x00013513      415f           pop r15
0x00013515      c3             ret
0x00013516      662e0f1f8400.  nop word cs:[rax + rax]
0x00013520      488b3424       mov rsi, qword [rsp]
0x00013524      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00013529      488994246801.  mov qword [rsp + 0x168], rdx
0x00013531      31d2           xor edx, edx
0x00013533      e808efffff     call sym.merge_state_with_log
0x00013538      8b9424d00000.  mov edx, dword [rsp + 0xd0]
0x0001353f      85d2           test edx, edx
0x00013541      0f8536090000   jne 0x13e7d
0x00013547      4885c0         test rax, rax
0x0001354a      0f8540090000   jne 0x13e90
0x00013550      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x00013558      e92dfcffff     jmp 0x1318a
0x0001355d      0f1f00         nop dword [rax]
0x00013560      498b7510       mov rsi, qword [r13 + 0x10]
0x00013564      488b3c24       mov rdi, qword [rsp]
0x00013568      498d5518       lea rdx, [r13 + 0x18]
0x0001356c      4c89c1         mov rcx, r8
0x0001356f      4c89442410     mov qword [rsp + 0x10], r8
0x00013574      e8b7a9ffff     call sym.check_halt_state_context.isra.20
0x00013579      4885c0         test rax, rax
0x0001357c      4c8b442410     mov r8, qword [rsp + 0x10]
0x00013581      0f8442fbffff   je 0x130c9
0x00013587      e91afbffff     jmp 0x130a6
0x0001358c      0f1f4000       nop dword [rax]
0x00013590      483b84247801.  cmp rax, qword [rsp + 0x178]
0x00013598      0f8d51fbffff   jge 0x130ef
0x0001359e      488b3c24       mov rdi, qword [rsp]
0x000135a2      8d7301         lea esi, [rbx + 1]
0x000135a5      e8e67effff     call sym.extend_buffers
0x000135aa      85c0           test eax, eax
0x000135ac      898424d00000.  mov dword [rsp + 0xd0], eax
0x000135b3      0f85df080000   jne 0x13e98
0x000135b9      41f6466820     test byte [r14 + 0x68], 0x20
0x000135be      4c8b84246801.  mov r8, qword [rsp + 0x168]
0x000135c6      0f843ffbffff   je 0x1310b
0x000135cc      0f1f4000       nop dword [rax]
0x000135d0      49837e1000     cmp qword [r14 + 0x10], 0
0x000135d5      4c8bac24b801.  mov r13, qword [rsp + 0x1b8]
0x000135dd      0f8e28030000   jle 0x1390b
0x000135e3      498d85d80000.  lea rax, [r13 + 0xd8]
0x000135ea      4531e4         xor r12d, r12d
0x000135ed      48899c24a000.  mov qword [rsp + 0xa0], rbx
0x000135f5      4c89e3         mov rbx, r12
0x000135f8      4d89c4         mov r12, r8
0x000135fb      4889442440     mov qword [rsp + 0x40], rax
0x00013600      e953010000     jmp 0x13758
0x00013605      0f1f00         nop dword [rax]
0x00013608      a801           test al, 1
0x0001360a      0f843a010000   je 0x1374a
0x00013610      83e108         and ecx, 8
0x00013613      0f8531010000   jne 0x1374a
0x00013619      f6c220         test dl, 0x20                           ; "@"
0x0001361c      7408           je 0x13626
0x0001361e      a802           test al, 2
0x00013620      0f8424010000   je 0x1374a
0x00013626      81e280000000   and edx, 0x80
0x0001362c      7412           je 0x13640
0x0001362e      a808           test al, 8
0x00013630      0f8414010000   je 0x1374a
0x00013636      662e0f1f8400.  nop word cs:[rax + rax]
0x00013640      488b0c24       mov rcx, qword [rsp]
0x00013644      488b742440     mov rsi, qword [rsp + 0x40]
0x00013649      4d89e0         mov r8, r12
0x0001364c      4c89fa         mov rdx, r15
0x0001364f      4889ef         mov rdi, rbp
0x00013652      e8a9d0ffff     call sym.check_node_accept_bytes.isra.31
0x00013657      85c0           test eax, eax
0x00013659      0f84e3000000   je 0x13742
0x0001365f      4863e8         movsxd rbp, eax
0x00013662      4803ac246801.  add rbp, qword [rsp + 0x168]
0x0001366a      398424000200.  cmp dword [rsp + 0x200], eax
0x00013671      0f4d84240002.  cmovge eax, dword [rsp + 0x200]
0x00013679      488b3c24       mov rdi, qword [rsp]
0x0001367d      4889ee         mov rsi, rbp
0x00013680      898424000200.  mov dword [rsp + 0x200], eax
0x00013687      e8547fffff     call sym.clean_state_log_if_needed
0x0001368c      85c0           test eax, eax
0x0001368e      898424d40000.  mov dword [rsp + 0xd4], eax
0x00013695      0f8595020000   jne 0x13930
0x0001369b      498b4518       mov rax, qword [r13 + 0x18]
0x0001369f      4c8d24ed0000.  lea r12, [rbp*8]
0x000136a7      4a8b04f8       mov rax, qword [rax + r15*8]
0x000136ab      4c8bbc24d801.  mov r15, qword [rsp + 0x1d8]
0x000136b3      488d1440       lea rdx, [rax + rax*2]
0x000136b7      498b4530       mov rax, qword [r13 + 0x30]
0x000136bb      4d01e7         add r15, r12
0x000136be      488d14d0       lea rdx, [rax + rdx*8]
0x000136c2      498b07         mov rax, qword [r15]
0x000136c5      4885c0         test rax, rax
0x000136c8      0f84fa000000   je 0x137c8
0x000136ce      488b7050       mov rsi, qword [rax + 0x50]
0x000136d2      488b7c2460     mov rdi, qword [rsp + 0x60]
0x000136d7      e8649affff     call sym.re_node_set_init_union
0x000136dc      85c0           test eax, eax
0x000136de      898424d40000.  mov dword [rsp + 0xd4], eax
0x000136e5      0f8545020000   jne 0x13930
0x000136eb      8b9424c00100.  mov edx, dword [rsp + 0x1c0]
0x000136f2      488b3c24       mov rdi, qword [rsp]
0x000136f6      488d75ff       lea rsi, [rbp - 1]
0x000136fa      e831a6ffff     call sym.re_string_context_at
0x000136ff      488b542460     mov rdx, qword [rsp + 0x60]
0x00013704      488bbc248000.  mov rdi, qword [rsp + 0x80]
0x0001370c      89c1           mov ecx, eax
0x0001370e      4c03a424d801.  add r12, qword [rsp + 0x1d8]
0x00013716      4c89ee         mov rsi, r13
0x00013719      e8829bffff     call sym.re_acquire_state_context
0x0001371e      488bbc24f000.  mov rdi, qword [rsp + 0xf0]
0x00013726      49890424       mov qword [r12], rax
0x0001372a      e831e5feff     call sym.imp.free
0x0001372f      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x00013737      48833cef00     cmp qword [rdi + rbp*8], 0
0x0001373c      0f84df000000   je 0x13821
0x00013742      4c8ba4246801.  mov r12, qword [rsp + 0x168]
0x0001374a      4883c301       add rbx, 1
0x0001374e      493b5e10       cmp rbx, qword [r14 + 0x10]
0x00013752      0f8da8010000   jge 0x13900
0x00013758      498b4618       mov rax, qword [r14 + 0x18]
0x0001375c      498b6d00       mov rbp, qword [r13]
0x00013760      4c8b3cd8       mov r15, qword [rax + rbx*8]
0x00013764      4c89f8         mov rax, r15
0x00013767      48c1e004       shl rax, 4
0x0001376b      4801e8         add rax, rbp
0x0001376e      f6400a10       test byte [rax + 0xa], 0x10
0x00013772      74d6           je 0x1374a
0x00013774      8b4808         mov ecx, dword [rax + 8]
0x00013777      f7c100ff0300   test ecx, 0x3ff00
0x0001377d      894c2410       mov dword [rsp + 0x10], ecx
0x00013781      0f84b9feffff   je 0x13640
0x00013787      8b9424c00100.  mov edx, dword [rsp + 0x1c0]
0x0001378e      488b3c24       mov rdi, qword [rsp]
0x00013792      4c89e6         mov rsi, r12
0x00013795      e896a5ffff     call sym.re_string_context_at
0x0001379a      8b4c2410       mov ecx, dword [rsp + 0x10]
0x0001379e      c1e908         shr ecx, 8
0x000137a1      89ca           mov edx, ecx
0x000137a3      6681e2ff03     and dx, 0x3ff
0x000137a8      f6c104         test cl, 4
0x000137ab      0f8557feffff   jne 0x13608
0x000137b1      83e108         and ecx, 8
0x000137b4      0f845ffeffff   je 0x13619
0x000137ba      a801           test al, 1
0x000137bc      0f8457feffff   je 0x13619
0x000137c2      eb86           jmp 0x1374a
0x000137c4      0f1f4000       nop dword [rax]
0x000137c8      f30f6f02       movdqu xmm0, xmmword [rdx]
0x000137cc      488d75ff       lea rsi, [rbp - 1]
0x000137d0      488b3c24       mov rdi, qword [rsp]
0x000137d4      0f298424e000.  movaps xmmword [rsp + 0xe0], xmm0
0x000137dc      488b4210       mov rax, qword [rdx + 0x10]
0x000137e0      8b9424c00100.  mov edx, dword [rsp + 0x1c0]
0x000137e7      48898424f000.  mov qword [rsp + 0xf0], rax
0x000137ef      e83ca5ffff     call sym.re_string_context_at
0x000137f4      488bbc248000.  mov rdi, qword [rsp + 0x80]
0x000137fc      488b542460     mov rdx, qword [rsp + 0x60]
0x00013801      89c1           mov ecx, eax
0x00013803      4c89ee         mov rsi, r13
0x00013806      e8959affff     call sym.re_acquire_state_context
0x0001380b      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x00013813      498907         mov qword [r15], rax
0x00013816      48833cef00     cmp qword [rdi + rbp*8], 0
0x0001381b      0f8521ffffff   jne 0x13742
0x00013821      8b8424d40000.  mov eax, dword [rsp + 0xd4]
0x00013828      85c0           test eax, eax
0x0001382a      0f8412ffffff   je 0x13742
0x00013830      488b9c24a000.  mov rbx, qword [rsp + 0xa0]
0x00013838      e903010000     jmp 0x13940
0x0001383d      0f1f00         nop dword [rax]
0x00013840      498b6e60       mov rbp, qword [r14 + 0x60]
0x00013844      4885ed         test rbp, rbp
0x00013847      0f84a8010000   je 0x139f5
0x0001384d      488b84246801.  mov rax, qword [rsp + 0x168]
0x00013855      8b9424c00100.  mov edx, dword [rsp + 0x1c0]
0x0001385c      488b3c24       mov rdi, qword [rsp]
0x00013860      488d70ff       lea rsi, [rax - 1]
0x00013864      e8c7a4ffff     call sym.re_string_context_at
0x00013869      a801           test al, 1
0x0001386b      0f84af000000   je 0x13920
0x00013871      4e8baced0008.  mov r13, qword [rbp + r13*8 + 0x800]
0x00013879      e9b7f8ffff     jmp 0x13135
0x0001387e      6690           nop
0x00013880      483b84247801.  cmp rax, qword [rsp + 0x178]
0x00013888      0f8d72f8ffff   jge 0x13100
0x0001388e      e90bfdffff     jmp 0x1359e
0x00013893      4c89e7         mov rdi, r12
0x00013896      e8c5e3feff     call sym.imp.free
0x0001389b      0f1f440000     nop dword [rax + rax]
0x000138a0      488b3c24       mov rdi, qword [rsp]
0x000138a4      e83785ffff     call sym.match_ctx_clean
0x000138a9      488bac24d800.  mov rbp, qword [rsp + 0xd8]
0x000138b1      48638424ac00.  movsxd rax, dword [rsp + 0xac]
0x000138b9      4801c5         add rbp, rax
0x000138bc      483bac249000.  cmp rbp, qword [rsp + 0x90]
0x000138c4      4889ac24d800.  mov qword [rsp + 0xd8], rbp
0x000138cc      7c0b           jl 0x138d9
0x000138ce      483b6c2470     cmp rbp, qword [rsp + 0x70]
0x000138d3      0f8e6ff5ffff   jle 0x12e48
0x000138d9      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x000138e1      c744245c0100.  mov dword [rsp + 0x5c], 1
0x000138e9      e9dafbffff     jmp 0x134c8
0x000138ee      6690           nop
0x000138f0      c744245c0100.  mov dword [rsp + 0x5c], 1
0x000138f8      e9ecfbffff     jmp 0x134e9
0x000138fd      0f1f00         nop dword [rax]
0x00013900      488b9c24a000.  mov rbx, qword [rsp + 0xa0]
0x00013908      4d89e0         mov r8, r12
0x0001390b      c78424d00000.  mov dword [rsp + 0xd0], 0
0x00013916      e9f0f7ffff     jmp 0x1310b
0x0001391b      0f1f440000     nop dword [rax + rax]
0x00013920      4e8b6ced00     mov r13, qword [rbp + r13*8]
0x00013925      e90bf8ffff     jmp 0x13135
0x0001392a      660f1f440000   nop word [rax + rax]
0x00013930      488b9c24a000.  mov rbx, qword [rsp + 0xa0]
0x00013938      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x00013940      4885ff         test rdi, rdi
0x00013943      898424d00000.  mov dword [rsp + 0xd0], eax
0x0001394a      0f84e0000000   je 0x13a30
0x00013950      4531ed         xor r13d, r13d
0x00013953      e9e8f7ffff     jmp 0x13140
0x00013958      0f1f84000000.  nop dword [rax + rax]
0x00013960      8b9424c00100.  mov edx, dword [rsp + 0x1c0]
0x00013967      488b3c24       mov rdi, qword [rsp]
0x0001396b      488d70ff       lea rsi, [rax - 1]
0x0001396f      e8bca3ffff     call sym.re_string_context_at
0x00013974      a801           test al, 1
0x00013976      0f8469010000   je 0x13ae5
0x0001397c      4c8b7350       mov r14, qword [rbx + 0x50]
0x00013980      4d85f6         test r14, r14
0x00013983      0f8565f6ffff   jne 0x12fee
0x00013989      8b8424d00000.  mov eax, dword [rsp + 0xd0]
0x00013990      83f80c         cmp eax, 0xc
0x00013993      8944245c       mov dword [rsp + 0x5c], eax
0x00013997      0f8423fbffff   je 0x134c0
0x0001399d      488d0d0c9300.  lea rcx, obj.__PRETTY_FUNCTION__.7972   ; 0x1ccb0 ; "check_matching"
0x000139a4      488d35258d00.  lea rsi, str..._coreutils_8.31_lib_regexec.c ; 0x1c6d0 ; "../coreutils-8.31/lib/regexec.c"
0x000139ab      488d3dd28d00.  lea rdi, str.err____REG_ESPACE          ; 0x1c784 ; "err == REG_ESPACE"
0x000139b2      ba35040000     mov edx, 0x435
0x000139b7      e874e4feff     call sym.imp.__assert_fail
0x000139bc      0f1f4000       nop dword [rax]
0x000139c0      488b442438     mov rax, qword [rsp + 0x38]
0x000139c5      4883b8980000.  cmp qword [rax + 0x98], 0
0x000139cd      0f8429020000   je 0x13bfc
0x000139d3      e947010000     jmp 0x13b1f
0x000139d8      4c89e7         mov rdi, r12
0x000139db      e880e2feff     call sym.imp.free
0x000139e0      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x000139e8      c744245c0c00.  mov dword [rsp + 0x5c], 0xc             ; [0xc:4]=0
0x000139f0      e9d3faffff     jmp 0x134c8
0x000139f5      488bbc24b801.  mov rdi, qword [rsp + 0x1b8]
0x000139fd      4c89f6         mov rsi, r14
0x00013a00      e8dbafffff     call sym.build_trtable
0x00013a05      84c0           test al, al
0x00013a07      0f8517f7ffff   jne 0x13124
0x00013a0d      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x00013a15      c78424d00000.  mov dword [rsp + 0xd0], 0xc             ; [0xc:4]=0
0x00013a20      4885ff         test rdi, rdi
0x00013a23      0f8527ffffff   jne 0x13950
0x00013a29      0f1f80000000.  nop dword [rax]
0x00013a30      c744245c0c00.  mov dword [rsp + 0x5c], 0xc             ; [0xc:4]=0
0x00013a38      e98bfaffff     jmp 0x134c8
0x00013a3d      488b5c2468     mov rbx, qword [rsp + 0x68]
0x00013a42      448bac24ac00.  mov r13d, dword [rsp + 0xac]
0x00013a4a      4c8bb4249000.  mov r14, qword [rsp + 0x90]
0x00013a52      4c8b7c2470     mov r15, qword [rsp + 0x70]
0x00013a57      4c8ba4248800.  mov r12, qword [rsp + 0x88]
0x00013a5f      eb47           jmp 0x13aa8
0x00013a61      0f1f80000000.  nop dword [rax]
0x00013a68      4939ec         cmp r12, rbp
0x00013a6b      4889d8         mov rax, rbx
0x00013a6e      7e0f           jle 0x13a7f
0x00013a70      488b84242801.  mov rax, qword [rsp + 0x128]
0x00013a78      0fb60410       movzx eax, byte [rax + rdx]
0x00013a7c      4801d8         add rax, rbx
0x00013a7f      803800         cmp byte [rax], 0
0x00013a82      0f85c0f4ffff   jne 0x12f48
0x00013a88      4963c5         movsxd rax, r13d
0x00013a8b      4801c5         add rbp, rax
0x00013a8e      4c39f5         cmp rbp, r14
0x00013a91      4889ac24d800.  mov qword [rsp + 0xd8], rbp
0x00013a99      0f8c3afeffff   jl 0x138d9
0x00013a9f      4c39fd         cmp rbp, r15
0x00013aa2      0f8f31feffff   jg 0x138d9
0x00013aa8      4889ea         mov rdx, rbp
0x00013aab      482b94244801.  sub rdx, qword [rsp + 0x148]
0x00013ab3      483994245801.  cmp qword [rsp + 0x158], rdx
0x00013abb      77ab           ja 0x13a68
0x00013abd      8b9424800200.  mov edx, dword [rsp + 0x280]
0x00013ac4      488b3c24       mov rdi, qword [rsp]
0x00013ac8      4889ee         mov rsi, rbp
0x00013acb      e830a5ffff     call sym.re_string_reconstruct
0x00013ad0      85c0           test eax, eax
0x00013ad2      0f85e0f9ffff   jne 0x134b8
0x00013ad8      4889ea         mov rdx, rbp
0x00013adb      482b94244801.  sub rdx, qword [rsp + 0x148]
0x00013ae3      eb83           jmp 0x13a68
0x00013ae5      85c0           test eax, eax
0x00013ae7      0f8401f5ffff   je 0x12fee
0x00013aed      89c2           mov edx, eax
0x00013aef      83e206         and edx, 6
0x00013af2      83fa06         cmp edx, 6
0x00013af5      0f8464040000   je 0x13f5f
0x00013afb      a802           test al, 2
0x00013afd      0f84ad040000   je 0x13fb0
0x00013b03      4c8b7358       mov r14, qword [rbx + 0x58]
0x00013b07      e974feffff     jmp 0x13980
0x00013b0c      488b442438     mov rax, qword [rsp + 0x38]
0x00013b11      4883b8980000.  cmp qword [rax + 0x98], 0
0x00013b19      0f84dd000000   je 0x13bfc
0x00013b1f      488b4c2420     mov rcx, qword [rsp + 0x20]
0x00013b24      488b9c24d801.  mov rbx, qword [rsp + 0x1d8]
0x00013b2c      488b3c24       mov rdi, qword [rsp]
0x00013b30      488b04cb       mov rax, qword [rbx + rcx*8]
0x00013b34      488b7010       mov rsi, qword [rax + 0x10]
0x00013b38      488d5018       lea rdx, [rax + 0x18]
0x00013b3c      e8efa3ffff     call sym.check_halt_state_context.isra.20
0x00013b41      48898424d001.  mov qword [rsp + 0x1d0], rax
0x00013b49      e91af7ffff     jmp 0x13268
0x00013b4e      31c9           xor ecx, ecx
0x00013b50      e989f2ffff     jmp 0x12dde
0x00013b55      660fefc0       pxor xmm0, xmm0
0x00013b59      48898424e000.  mov qword [rsp + 0xe0], rax
0x00013b61      488b3c24       mov rdi, qword [rsp]
0x00013b65      488b442420     mov rax, qword [rsp + 0x20]
0x00013b6a      488d9c24e000.  lea rbx, [rsp + 0xe0]
0x00013b72      48c78424e800.  mov qword [rsp + 0xe8], 0
0x00013b7e      4c89ac24f000.  mov qword [rsp + 0xf0], r13
0x00013b86      4889de         mov rsi, rbx
0x00013b89      48c784241001.  mov qword [rsp + 0x110], 0
0x00013b95      0f2984240001.  movaps xmmword [rsp + 0x100], xmm0
0x00013b9d      48898424f800.  mov qword [rsp + 0xf8], rax
0x00013ba5      e886eaffff     call sym.sift_states_backward
0x00013baa      488bbc241001.  mov rdi, qword [rsp + 0x110]
0x00013bb2      89442408       mov dword [rsp + 8], eax
0x00013bb6      e8a5e0feff     call sym.imp.free
0x00013bbb      8b442408       mov eax, dword [rsp + 8]
0x00013bbf      85c0           test eax, eax
0x00013bc1      0f8541040000   jne 0x14008
0x00013bc7      49833c2400     cmp qword [r12], 0
0x00013bcc      0f84c1fcffff   je 0x13893
0x00013bd2      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x00013bda      e881e0feff     call sym.imp.free
0x00013bdf      488b442420     mov rax, qword [rsp + 0x20]
0x00013be4      4c89a424d801.  mov qword [rsp + 0x1d8], r12
0x00013bec      4c89ac24d001.  mov qword [rsp + 0x1d0], r13
0x00013bf4      48898424c801.  mov qword [rsp + 0x1c8], rax
0x00013bfc      4883bc247002.  cmp qword [rsp + 0x270], 0
0x00013c05      0f84b5f8ffff   je 0x134c0
0x00013c0b      4883bc247002.  cmp qword [rsp + 0x270], 1
0x00013c14      0f841e040000   je 0x14038
0x00013c1a      488bb424b800.  mov rsi, qword [rsp + 0xb8]
0x00013c22      488b8c247002.  mov rcx, qword [rsp + 0x270]
0x00013c2a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00013c31      48c1e104       shl rcx, 4
0x00013c35      488d4610       lea rax, [rsi + 0x10]
0x00013c39      4801f1         add rcx, rsi
0x00013c3c      48895008       mov qword [rax + 8], rdx
0x00013c40      488910         mov qword [rax], rdx
0x00013c43      4883c010       add rax, 0x10
0x00013c47      4839c1         cmp rcx, rax
0x00013c4a      75f0           jne 0x13c3c
0x00013c4c      488bbc24b800.  mov rdi, qword [rsp + 0xb8]
0x00013c54      488b8424c801.  mov rax, qword [rsp + 0x1c8]
0x00013c5c      48894708       mov qword [rdi + 8], rax
0x00013c60      488b442448     mov rax, qword [rsp + 0x48]
0x00013c65      48c707000000.  mov qword [rdi], 0
0x00013c6c      f6403810       test byte [rax + 0x38], 0x10
0x00013c70      0f85dd030000   jne 0x14053
0x00013c76      4883bc247002.  cmp qword [rsp + 0x270], 1
0x00013c7f      0f84ce030000   je 0x14053
0x00013c85      488b442438     mov rax, qword [rsp + 0x38]
0x00013c8a      4531c0         xor r8d, r8d
0x00013c8d      f680b0000000.  test byte [rax + 0xb0], 1
0x00013c94      740f           je 0x13ca5
0x00013c96      4531c0         xor r8d, r8d
0x00013c99      4883b8980000.  cmp qword [rax + 0x98], 0
0x00013ca1      410f9fc0       setg r8b
0x00013ca5      488b9c24b800.  mov rbx, qword [rsp + 0xb8]
0x00013cad      488b94247002.  mov rdx, qword [rsp + 0x270]
0x00013cb5      488b3424       mov rsi, qword [rsp]
0x00013cb9      488b7c2448     mov rdi, qword [rsp + 0x48]
0x00013cbe      4889d9         mov rcx, rbx
0x00013cc1      e8fad3ffff     call sym.set_regs
0x00013cc6      85c0           test eax, eax
0x00013cc8      0f85cf020000   jne 0x13f9d
0x00013cce      488b03         mov rax, qword [rbx]
0x00013cd1      440fb69c24ac.  movzx r11d, byte [rsp + 0x1ac]
0x00013cda      4c8b94245001.  mov r10, qword [rsp + 0x150]
0x00013ce2      31c9           xor ecx, ecx
0x00013ce4      4c8b8c243801.  mov r9, qword [rsp + 0x138]
0x00013cec      4c8b84245801.  mov r8, qword [rsp + 0x158]
0x00013cf4      488bbc24d800.  mov rdi, qword [rsp + 0xd8]
0x00013cfc      488b9424b800.  mov rdx, qword [rsp + 0xb8]
0x00013d04      eb03           jmp 0x13d09
0x00013d06      488b02         mov rax, qword [rdx]
0x00013d09      4883f8ff       cmp rax, 0xffffffffffffffff
0x00013d0d      741a           je 0x13d29
0x00013d0f      4584db         test r11b, r11b
0x00013d12      488b7208       mov rsi, qword [rdx + 8]
0x00013d16      0f853e030000   jne 0x1405a
0x00013d1c      4801f8         add rax, rdi
0x00013d1f      4801fe         add rsi, rdi
0x00013d22      488902         mov qword [rdx], rax
0x00013d25      48897208       mov qword [rdx + 8], rsi
0x00013d29      4883c101       add rcx, 1
0x00013d2d      4883c210       add rdx, 0x10
0x00013d31      483b8c247002.  cmp rcx, qword [rsp + 0x270]
0x00013d39      75cb           jne 0x13d06
0x00013d3b      4883bc249800.  cmp qword [rsp + 0x98], 0
0x00013d44      7e3f           jle 0x13d85
0x00013d46      488b94249800.  mov rdx, qword [rsp + 0x98]
0x00013d4e      488bbc24b800.  mov rdi, qword [rsp + 0xb8]
0x00013d56      4889c8         mov rax, rcx
0x00013d59      48c1e004       shl rax, 4
0x00013d5d      4801ca         add rdx, rcx
0x00013d60      488d440708     lea rax, [rdi + rax + 8]
0x00013d65      48c1e204       shl rdx, 4
0x00013d69      488d741708     lea rsi, [rdi + rdx + 8]
0x00013d6e      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00013d75      488950f8       mov qword [rax - 8], rdx
0x00013d79      488910         mov qword [rax], rdx
0x00013d7c      4883c010       add rax, 0x10
0x00013d80      4839c6         cmp rsi, rax
0x00013d83      75f0           jne 0x13d75
0x00013d85      488b442438     mov rax, qword [rsp + 0x38]
0x00013d8a      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x00013d92      4c8b88e00000.  mov r9, qword [rax + 0xe0]
0x00013d99      4d85c9         test r9, r9
0x00013d9c      0f8426f7ffff   je 0x134c8
0x00013da2      4c8b9424b800.  mov r10, qword [rsp + 0xb8]
0x00013daa      4531c0         xor r8d, r8d
0x00013dad      498d5210       lea rdx, [r10 + 0x10]
0x00013db1      eb36           jmp 0x13de9
0x00013db3      498b44f1f8     mov rax, qword [r9 + rsi*8 - 8]
0x00013db8      4c39c0         cmp rax, r8
0x00013dbb      7425           je 0x13de2
0x00013dbd      4883c001       add rax, 1
0x00013dc1      48c1e004       shl rax, 4
0x00013dc5      498b0402       mov rax, qword [r10 + rax]
0x00013dc9      488902         mov qword [rdx], rax
0x00013dcc      498b44f1f8     mov rax, qword [r9 + rsi*8 - 8]
0x00013dd1      4883c001       add rax, 1
0x00013dd5      48c1e004       shl rax, 4
0x00013dd9      498b440208     mov rax, qword [r10 + rax + 8]
0x00013dde      48894208       mov qword [rdx + 8], rax
0x00013de2      4883c210       add rdx, 0x10
0x00013de6      4989f0         mov r8, rsi
0x00013de9      498d7001       lea rsi, [r8 + 1]
0x00013ded      4839ce         cmp rsi, rcx
0x00013df0      75c1           jne 0x13db3
0x00013df2      e9d1f6ffff     jmp 0x134c8
0x00013df7      660f1f840000.  nop word [rax + rax]
0x00013e00      488b3c24       mov rdi, qword [rsp]
0x00013e04      e8d77fffff     call sym.match_ctx_clean
0x00013e09      488bbc241802.  mov rdi, qword [rsp + 0x218]
0x00013e11      e84adefeff     call sym.imp.free
0x00013e16      488bbc24f801.  mov rdi, qword [rsp + 0x1f8]
0x00013e1e      e83ddefeff     call sym.imp.free
0x00013e23      e9b8f6ffff     jmp 0x134e0
0x00013e28      488b442438     mov rax, qword [rsp + 0x38]
0x00013e2d      f680b0000000.  test byte [rax + 0xb0], 2
0x00013e34      0f85cfeeffff   jne 0x12d09
0x00013e3a      48c78424d801.  mov qword [rsp + 0x1d8], 0
0x00013e46      e9faeeffff     jmp 0x12d45
0x00013e4b      4c89e7         mov rdi, r12
0x00013e4e      e80ddefeff     call sym.imp.free
0x00013e53      4889ef         mov rdi, rbp
0x00013e56      e805defeff     call sym.imp.free
0x00013e5b      e940faffff     jmp 0x138a0
0x00013e60      48898424d800.  mov qword [rsp + 0xd8], rax
0x00013e68      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x00013e70      c744245c0100.  mov dword [rsp + 0x5c], 1
0x00013e78      e94bf6ffff     jmp 0x134c8
0x00013e7d      4885c0         test rax, rax
0x00013e80      4989c5         mov r13, rax
0x00013e83      0f85eff1ffff   jne 0x13078
0x00013e89      e936f3ffff     jmp 0x131c4
0x00013e8e      6690           nop
0x00013e90      4989c5         mov r13, rax
0x00013e93      e9e0f1ffff     jmp 0x13078
0x00013e98      83f80c         cmp eax, 0xc
0x00013e9b      0f843ffbffff   je 0x139e0
0x00013ea1      488d0d088e00.  lea rcx, obj.__PRETTY_FUNCTION__.7972   ; 0x1ccb0 ; "check_matching"
0x00013ea8      488d35218800.  lea rsi, str..._coreutils_8.31_lib_regexec.c ; 0x1c6d0 ; "../coreutils-8.31/lib/regexec.c"
0x00013eaf      488d3dce8800.  lea rdi, str.err____REG_ESPACE          ; 0x1c784 ; "err == REG_ESPACE"
0x00013eb6      ba6c040000     mov edx, 0x46c
0x00013ebb      e870dffeff     call sym.imp.__assert_fail
0x00013ec0      41807e6800     cmp byte [r14 + 0x68], 0
0x00013ec5      786f           js 0x13f36
0x00013ec7      8b742458       mov esi, dword [rsp + 0x58]
0x00013ecb      488b442408     mov rax, qword [rsp + 8]
0x00013ed0      85f6           test esi, esi
0x00013ed2      4889442420     mov qword [rsp + 0x20], rax
0x00013ed7      0f84f9f2ffff   je 0x131d6
0x00013edd      48c744243001.  mov qword [rsp + 0x30], 1
0x00013ee6      e952f1ffff     jmp 0x1303d
0x00013eeb      4889df         mov rdi, rbx
0x00013eee      c744245c0c00.  mov dword [rsp + 0x5c], 0xc             ; [0xc:4]=0
0x00013ef6      e9cdf5ffff     jmp 0x134c8
0x00013efb      498d5e10       lea rbx, [r14 + 0x10]
0x00013eff      498d6e18       lea rbp, [r14 + 0x18]
0x00013f03      488b3c24       mov rdi, qword [rsp]
0x00013f07      31c9           xor ecx, ecx
0x00013f09      4889ea         mov rdx, rbp
0x00013f0c      4889de         mov rsi, rbx
0x00013f0f      e8cc9cffff     call sym.check_subexp_matching_top.isra.18
0x00013f14      85c0           test eax, eax
0x00013f16      898424d00000.  mov dword [rsp + 0xd0], eax
0x00013f1d      7549           jne 0x13f68
0x00013f1f      410fb64668     movzx eax, byte [r14 + 0x68]
0x00013f24      a840           test al, 0x40                           ; segment.PHDR
0x00013f26      0f85e4000000   jne 0x14010
0x00013f2c      c644241800     mov byte [rsp + 0x18], 0
0x00013f31      e9edf0ffff     jmp 0x13023
0x00013f36      498b7610       mov rsi, qword [r14 + 0x10]
0x00013f3a      488b4c2408     mov rcx, qword [rsp + 8]
0x00013f3f      498d5618       lea rdx, [r14 + 0x18]
0x00013f43      488b3c24       mov rdi, qword [rsp]
0x00013f47      e8e49fffff     call sym.check_halt_state_context.isra.20
0x00013f4c      4885c0         test rax, rax
0x00013f4f      4889442430     mov qword [rsp + 0x30], rax
0x00013f54      0f84e3f0ffff   je 0x1303d
0x00013f5a      e968ffffff     jmp 0x13ec7
0x00013f5f      4c8b7360       mov r14, qword [rbx + 0x60]
0x00013f63      e918faffff     jmp 0x13980
0x00013f68      4898           cdqe
0x00013f6a      4889442420     mov qword [rsp + 0x20], rax
0x00013f6f      e962f2ffff     jmp 0x131d6
0x00013f74      4c8b742418     mov r14, qword [rsp + 0x18]
0x00013f79      4489f8         mov eax, r15d
0x00013f7c      4c89e7         mov rdi, r12
0x00013f7f      89442408       mov dword [rsp + 8], eax
0x00013f83      e8d8dcfeff     call sym.imp.free
0x00013f88      4c89f7         mov rdi, r14
0x00013f8b      e8d0dcfeff     call sym.imp.free
0x00013f90      8b442408       mov eax, dword [rsp + 8]
0x00013f94      83f801         cmp eax, 1
0x00013f97      0f8403f9ffff   je 0x138a0
0x00013f9d      488bbc24d801.  mov rdi, qword [rsp + 0x1d8]
0x00013fa5      8944245c       mov dword [rsp + 0x5c], eax
0x00013fa9      e91af5ffff     jmp 0x134c8
0x00013fae      6690           nop
0x00013fb0      a804           test al, 4
0x00013fb2      0f8436f0ffff   je 0x12fee
0x00013fb8      498b5650       mov rdx, qword [r14 + 0x50]
0x00013fbc      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00013fc1      89c1           mov ecx, eax
0x00013fc3      4889de         mov rsi, rbx
0x00013fc6      e8d592ffff     call sym.re_acquire_state_context
0x00013fcb      4989c6         mov r14, rax
0x00013fce      e9adf9ffff     jmp 0x13980
0x00013fd3      4c8b7c2410     mov r15, qword [rsp + 0x10]
0x00013fd8      488b4c2408     mov rcx, qword [rsp + 8]
0x00013fdd      4889ea         mov rdx, rbp
0x00013fe0      4c89e6         mov rsi, r12
0x00013fe3      4c89742420     mov qword [rsp + 0x20], r14
0x00013fe8      4c89ff         mov rdi, r15
0x00013feb      e87097ffff     call sym.merge_state_array
0x00013ff0      4889ef         mov rdi, rbp
0x00013ff3      89442408       mov dword [rsp + 8], eax
0x00013ff7      e864dcfeff     call sym.imp.free
0x00013ffc      8b442408       mov eax, dword [rsp + 8]
0x00014000      85c0           test eax, eax
0x00014002      0f84cafbffff   je 0x13bd2
0x00014008      4531f6         xor r14d, r14d
0x0001400b      e96cffffff     jmp 0x13f7c
0x00014010      488b3c24       mov rdi, qword [rsp]
0x00014014      4889ea         mov rdx, rbp
0x00014017      4889de         mov rsi, rbx
0x0001401a      e831dbffff     call sym.transit_state_bkref.isra.34
0x0001401f      85c0           test eax, eax
0x00014021      898424d00000.  mov dword [rsp + 0xd0], eax
0x00014028      0f853affffff   jne 0x13f68
0x0001402e      410fb64668     movzx eax, byte [r14 + 0x68]
0x00014033      e9f4feffff     jmp 0x13f2c
0x00014038      488bb424b800.  mov rsi, qword [rsp + 0xb8]
0x00014040      488b8424c801.  mov rax, qword [rsp + 0x1c8]
0x00014048      48c706000000.  mov qword [rsi], 0
0x0001404f      48894608       mov qword [rsi + 8], rax
0x00014053      31c0           xor eax, eax
0x00014055      e977fcffff     jmp 0x13cd1
0x0001405a      4939c2         cmp r10, rax
0x0001405d      741d           je 0x1407c
0x0001405f      498b04c1       mov rax, qword [r9 + rax*8]
0x00014063      4939f2         cmp r10, rsi
0x00014066      488902         mov qword [rdx], rax
0x00014069      7409           je 0x14074
0x0001406b      498b34f1       mov rsi, qword [r9 + rsi*8]
0x0001406f      e9a8fcffff     jmp 0x13d1c
0x00014074      4c89c6         mov rsi, r8
0x00014077      e9a0fcffff     jmp 0x13d1c
0x0001407c      4c89c0         mov rax, r8
0x0001407f      ebe2           jmp 0x14063
0x00014081      4889ac24d800.  mov qword [rsp + 0xd8], rbp
0x00014089      e9baeeffff     jmp 0x12f48
0x0001408e      488984246801.  mov qword [rsp + 0x168], rax
0x00014096      e929f1ffff     jmp 0x131c4
0x0001409b      e810ddfeff     call sym.imp.__stack_chk_fail
;-- update_cur_sifted_state:
0x000140a0      4157           push r15
0x000140a2      4156           push r14
0x000140a4      4889f8         mov rax, rdi
0x000140a7      4155           push r13
0x000140a9      4154           push r12
0x000140ab      4989f5         mov r13, rsi
0x000140ae      55             push rbp
0x000140af      53             push rbx
0x000140b0      4889d5         mov rbp, rdx
0x000140b3      4889cb         mov rbx, rcx
0x000140b6      488d0cd50000.  lea rcx, [rdx*8]
0x000140be      4881eca80000.  sub rsp, 0xa8
0x000140c5      4c8ba0980000.  mov r12, qword [rax + 0x98]
0x000140cc      488b80b80000.  mov rax, qword [rax + 0xb8]
0x000140d3      48897c2408     mov qword [rsp + 8], rdi
0x000140d8      48894c2418     mov qword [rsp + 0x18], rcx
0x000140dd      64488b3c2528.  mov rdi, qword fs:[0x28]
0x000140e6      4889bc249800.  mov qword [rsp + 0x98], rdi
0x000140ee      31ff           xor edi, edi
0x000140f0      488b14d0       mov rdx, qword [rax + rdx*8]
0x000140f4      c744245c0000.  mov dword [rsp + 0x5c], 0
0x000140fc      488b4b08       mov rcx, qword [rbx + 8]
0x00014100      4885d2         test rdx, rdx
0x00014103      0f844f020000   je 0x14358
0x00014109      488d7a08       lea rdi, [rdx + 8]
0x0001410d      4885c9         test rcx, rcx
0x00014110      48897c2410     mov qword [rsp + 0x10], rdi
0x00014115      7551           jne 0x14168
0x00014117      488b16         mov rdx, qword [rsi]
0x0001411a      48c704ea0000.  mov qword [rdx + rbp*8], 0
0x00014122      488b14e8       mov rdx, qword [rax + rbp*8]
0x00014126      31c0           xor eax, eax
0x00014128      f6426840       test byte [rdx + 0x68], 0x40
0x0001412c      0f85dd000000   jne 0x1420f
0x00014132      660f1f440000   nop word [rax + rax]
0x00014138      488bbc249800.  mov rdi, qword [rsp + 0x98]
0x00014140      6448333c2528.  xor rdi, qword fs:[0x28]
0x00014149      0f859c070000   jne 0x148eb
0x0001414f      4881c4a80000.  add rsp, 0xa8
0x00014156      5b             pop rbx
0x00014157      5d             pop rbp
0x00014158      415c           pop r12
0x0001415a      415d           pop r13
0x0001415c      415e           pop r14
0x0001415e      415f           pop r15
0x00014160      c3             ret
0x00014161      0f1f80000000.  nop dword [rax]
0x00014168      488d7c2460     lea rdi, [rsp + 0x60]
0x0001416d      4889da         mov rdx, rbx
0x00014170      4c89e6         mov rsi, r12
0x00014173      c74424600000.  mov dword [rsp + 0x60], 0
0x0001417b      e8e093ffff     call sym.re_acquire_state
0x00014180      4889c2         mov rdx, rax
0x00014183      8b442460       mov eax, dword [rsp + 0x60]
0x00014187      85c0           test eax, eax
0x00014189      75ad           jne 0x14138
0x0001418b      4c8b7a38       mov r15, qword [rdx + 0x38]
0x0001418f      4c8d7238       lea r14, [rdx + 0x38]
0x00014193      4d85ff         test r15, r15
0x00014196      0f8404020000   je 0x143a0
0x0001419c      488b742410     mov rsi, qword [rsp + 0x10]
0x000141a1      4c89f2         mov rdx, r14
0x000141a4      4889df         mov rdi, rbx
0x000141a7      e8b488ffff     call sym.re_node_set_add_intersect
0x000141ac      85c0           test eax, eax
0x000141ae      8944245c       mov dword [rsp + 0x5c], eax
0x000141b2      7584           jne 0x14138
0x000141b4      49837d2800     cmp qword [r13 + 0x28], 0
0x000141b9      0f8571020000   jne 0x14430
0x000141bf      4c8b742418     mov r14, qword [rsp + 0x18]
0x000141c4      4d037500       add r14, qword [r13]
0x000141c8      488d7c245c     lea rdi, [rsp + 0x5c]
0x000141cd      4889da         mov rdx, rbx
0x000141d0      4c89e6         mov rsi, r12
0x000141d3      e88893ffff     call sym.re_acquire_state
0x000141d8      498906         mov qword [r14], rax
0x000141db      8b44245c       mov eax, dword [rsp + 0x5c]
0x000141df      85c0           test eax, eax
0x000141e1      0f8551ffffff   jne 0x14138
0x000141e7      48837c241000   cmp qword [rsp + 0x10], 0
0x000141ed      0f8445ffffff   je 0x14138
0x000141f3      488b442408     mov rax, qword [rsp + 8]
0x000141f8      488b80b80000.  mov rax, qword [rax + 0xb8]
0x000141ff      488b14e8       mov rdx, qword [rax + rbp*8]
0x00014203      31c0           xor eax, eax
0x00014205      f6426840       test byte [rdx + 0x68], 0x40
0x00014209      0f8429ffffff   je 0x14138
0x0001420f      488b442408     mov rax, qword [rsp + 8]
0x00014214      31db           xor ebx, ebx
0x00014216      488bb0c80000.  mov rsi, qword [rax + 0xc8]
0x0001421d      4889f2         mov rdx, rsi
0x00014220      4839d3         cmp rbx, rdx
0x00014223      7d5e           jge 0x14283
0x00014225      488d0413       lea rax, [rbx + rdx]
0x00014229      4889c1         mov rcx, rax
0x0001422c      48c1e93f       shr rcx, 0x3f
0x00014230      4801c1         add rcx, rax
0x00014233      488b442408     mov rax, qword [rsp + 8]
0x00014238      48d1f9         sar rcx, 1
0x0001423b      488bb8d80000.  mov rdi, qword [rax + 0xd8]
0x00014242      488d0489       lea rax, [rcx + rcx*4]
0x00014246      483b6cc708     cmp rbp, qword [rdi + rax*8 + 8]
0x0001424b      7e31           jle 0x1427e
0x0001424d      e935010000     jmp 0x14387
0x00014252      660f1f440000   nop word [rax + rax]
0x00014258      488d140b       lea rdx, [rbx + rcx]
0x0001425c      4889d0         mov rax, rdx
0x0001425f      48c1e83f       shr rax, 0x3f
0x00014263      4801d0         add rax, rdx
0x00014266      48d1f8         sar rax, 1
0x00014269      488d1480       lea rdx, [rax + rax*4]
0x0001426d      4989c0         mov r8, rax
0x00014270      483b6cd708     cmp rbp, qword [rdi + rdx*8 + 8]
0x00014275      0f8f15010000   jg 0x14390
0x0001427b      4889c1         mov rcx, rax
0x0001427e      4839cb         cmp rbx, rcx
0x00014281      7cd5           jl 0x14258
0x00014283      4839de         cmp rsi, rbx
0x00014286      0f8ef4000000   jle 0x14380
0x0001428c      488d049b       lea rax, [rbx + rbx*4]
0x00014290      488d34c50000.  lea rsi, [rax*8]
0x00014298      488b442408     mov rax, qword [rsp + 8]
0x0001429d      4889742440     mov qword [rsp + 0x40], rsi
0x000142a2      488b80d80000.  mov rax, qword [rax + 0xd8]
0x000142a9      483b6c3008     cmp rbp, qword [rax + rsi + 8]
0x000142ae      0f85cc000000   jne 0x14380
0x000142b4      4883fbff       cmp rbx, 0xffffffffffffffff
0x000142b8      0f84c2000000   je 0x14380
0x000142be      488b442408     mov rax, qword [rsp + 8]
0x000142c3      48c744246000.  mov qword [rsp + 0x60], 0
0x000142cc      4c8ba0980000.  mov r12, qword [rax + 0x98]
0x000142d3      488b442410     mov rax, qword [rsp + 0x10]
0x000142d8      4883780800     cmp qword [rax + 8], 0
0x000142dd      0f8e9d000000   jle 0x14380
0x000142e3      488d442460     lea rax, [rsp + 0x60]
0x000142e8      48c744242000.  mov qword [rsp + 0x20], 0
0x000142f1      48895c2448     mov qword [rsp + 0x48], rbx
0x000142f6      4d89ef         mov r15, r13
0x000142f9      4889442438     mov qword [rsp + 0x38], rax
0x000142fe      eb22           jmp 0x14322
0x00014300      3c04           cmp al, 4
0x00014302      0f8480030000   je 0x14688
0x00014308      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0001430d      488344242001   add qword [rsp + 0x20], 1
0x00014313      488b442420     mov rax, qword [rsp + 0x20]
0x00014318      483b4108       cmp rax, qword [rcx + 8]
0x0001431c      0f8db9050000   jge 0x148db
0x00014322      488b442410     mov rax, qword [rsp + 0x10]
0x00014327      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0001432c      488b4010       mov rax, qword [rax + 0x10]
0x00014330      4c8b34f8       mov r14, qword [rax + rdi*8]
0x00014334      4c89f0         mov rax, r14
0x00014337      48c1e004       shl rax, 4
0x0001433b      49030424       add rax, qword [r12]
0x0001433f      4d3b7710       cmp r14, qword [r15 + 0x10]
0x00014343      0fb64008       movzx eax, byte [rax + 8]
0x00014347      75b7           jne 0x14300
0x00014349      493b6f18       cmp rbp, qword [r15 + 0x18]
0x0001434d      75b1           jne 0x14300
0x0001434f      ebb7           jmp 0x14308
0x00014351      0f1f80000000.  nop dword [rax]
0x00014358      4c8d34ed0000.  lea r14, [rbp*8]
0x00014360      4c0336         add r14, qword [rsi]
0x00014363      4885c9         test rcx, rcx
0x00014366      0f85b4000000   jne 0x14420
0x0001436c      49c706000000.  mov qword [r14], 0
0x00014373      31c0           xor eax, eax
0x00014375      e9befdffff     jmp 0x14138
0x0001437a      660f1f440000   nop word [rax + rax]
0x00014380      31c0           xor eax, eax
0x00014382      e9b1fdffff     jmp 0x14138
0x00014387      4989c8         mov r8, rcx
0x0001438a      4889d1         mov rcx, rdx
0x0001438d      0f1f00         nop dword [rax]
0x00014390      498d5801       lea rbx, [r8 + 1]
0x00014394      4889ca         mov rdx, rcx
0x00014397      e984feffff     jmp 0x14220
0x0001439c      0f1f4000       nop dword [rax]
0x000143a0      488b7b08       mov rdi, qword [rbx + 8]
0x000143a4      48c742400000.  mov qword [rdx + 0x40], 0
0x000143ac      4889542420     mov qword [rsp + 0x20], rdx
0x000143b1      48897a38       mov qword [rdx + 0x38], rdi
0x000143b5      48c1e703       shl rdi, 3
0x000143b9      e862dbfeff     call sym.imp.malloc
0x000143be      488b542420     mov rdx, qword [rsp + 0x20]
0x000143c3      4885c0         test rax, rax
0x000143c6      48894248       mov qword [rdx + 0x48], rax
0x000143ca      7447           je 0x14413
0x000143cc      48837b0800     cmp qword [rbx + 8], 0
0x000143d1      c74424600000.  mov dword [rsp + 0x60], 0
0x000143d9      7f13           jg 0x143ee
0x000143db      e9bcfdffff     jmp 0x1419c
0x000143e0      4983c701       add r15, 1
0x000143e4      4c3b7b08       cmp r15, qword [rbx + 8]
0x000143e8      0f8daefdffff   jge 0x1419c
0x000143ee      488b4310       mov rax, qword [rbx + 0x10]
0x000143f2      4c89f7         mov rdi, r14
0x000143f5      4a8b04f8       mov rax, qword [rax + r15*8]
0x000143f9      488d1440       lea rdx, [rax + rax*2]
0x000143fd      498b442438     mov rax, qword [r12 + 0x38]
0x00014402      488d34d0       lea rsi, [rax + rdx*8]
0x00014406      e86580ffff     call sym.re_node_set_merge
0x0001440b      85c0           test eax, eax
0x0001440d      89442460       mov dword [rsp + 0x60], eax
0x00014411      74cd           je 0x143e0
0x00014413      b80c000000     mov eax, 0xc
0x00014418      e91bfdffff     jmp 0x14138
0x0001441d      0f1f00         nop dword [rax]
0x00014420      48c744241000.  mov qword [rsp + 0x10], 0
0x00014429      e99afdffff     jmp 0x141c8
0x0001442e      6690           nop
0x00014430      488b442408     mov rax, qword [rsp + 8]
0x00014435      488b80d80000.  mov rax, qword [rax + 0xd8]
0x0001443c      4889442420     mov qword [rsp + 0x20], rax
0x00014441      0f8ed4000000   jle 0x1451b
0x00014447      4531ff         xor r15d, r15d
0x0001444a      660f1f440000   nop word [rax + rax]
0x00014450      498b4530       mov rax, qword [r13 + 0x30]
0x00014454      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00014459      4a8b04f8       mov rax, qword [rax + r15*8]
0x0001445d      488d0480       lea rax, [rax + rax*4]
0x00014461      488d14c7       lea rdx, [rdi + rax*8]
0x00014465      483b6a10       cmp rbp, qword [rdx + 0x10]
0x00014469      0f8e9e000000   jle 0x1450d
0x0001446f      483b6a08       cmp rbp, qword [rdx + 8]
0x00014473      0f8f94000000   jg 0x1450d
0x00014479      488b0a         mov rcx, qword [rdx]
0x0001447c      498b0424       mov rax, qword [r12]
0x00014480      488b7308       mov rsi, qword [rbx + 8]
0x00014484      48c1e104       shl rcx, 4
0x00014488      483b6a18       cmp rbp, qword [rdx + 0x18]
0x0001448c      4c8b0408       mov r8, qword [rax + rcx]
0x00014490      0f849a000000   je 0x14530
0x00014496      4531f6         xor r14d, r14d
0x00014499      4885f6         test rsi, rsi
0x0001449c      7e6f           jle 0x1450d
0x0001449e      48896c2428     mov qword [rsp + 0x28], rbp
0x000144a3      4c89c5         mov rbp, r8
0x000144a6      eb16           jmp 0x144be
0x000144a8      0f1f84000000.  nop dword [rax + rax]
0x000144b0      4983c601       add r14, 1
0x000144b4      4c3b7308       cmp r14, qword [rbx + 8]
0x000144b8      7d4e           jge 0x14508
0x000144ba      498b0424       mov rax, qword [r12]
0x000144be      488b5310       mov rdx, qword [rbx + 0x10]
0x000144c2      4a8b34f2       mov rsi, qword [rdx + r14*8]
0x000144c6      4889f2         mov rdx, rsi
0x000144c9      48c1e204       shl rdx, 4
0x000144cd      4801d0         add rax, rdx
0x000144d0      0fb65008       movzx edx, byte [rax + 8]
0x000144d4      83ea08         sub edx, 8
0x000144d7      83fa01         cmp edx, 1
0x000144da      77d4           ja 0x144b0
0x000144dc      483b28         cmp rbp, qword [rax]
0x000144df      75cf           jne 0x144b0
0x000144e1      488b4c2410     mov rcx, qword [rsp + 0x10]
0x000144e6      4889da         mov rdx, rbx
0x000144e9      4c89e7         mov rdi, r12
0x000144ec      e8afa2ffff     call sym.sub_epsilon_src_nodes
0x000144f1      85c0           test eax, eax
0x000144f3      0f853ffcffff   jne 0x14138
0x000144f9      4983c601       add r14, 1
0x000144fd      4c3b7308       cmp r14, qword [rbx + 8]
0x00014501      7cb7           jl 0x144ba
0x00014503      0f1f440000     nop dword [rax + rax]
0x00014508      488b6c2428     mov rbp, qword [rsp + 0x28]
0x0001450d      4983c701       add r15, 1
0x00014511      4d3b7d28       cmp r15, qword [r13 + 0x28]
0x00014515      0f8c35ffffff   jl 0x14450
0x0001451b      c744245c0000.  mov dword [rsp + 0x5c], 0
0x00014523      e997fcffff     jmp 0x141bf
0x00014528      0f1f84000000.  nop dword [rax + rax]
0x00014530      4885f6         test rsi, rsi
0x00014533      7ed8           jle 0x1450d
0x00014535      4c8b5310       mov r10, qword [rbx + 0x10]
0x00014539      49c7c1ffffff.  mov r9, 0xffffffffffffffff
0x00014540      4d8d1cf2       lea r11, [r10 + rsi*8]
0x00014544      4c89d1         mov rcx, r10
0x00014547      4c89ce         mov rsi, r9
0x0001454a      eb1a           jmp 0x14566
0x0001454c      0f1f4000       nop dword [rax]
0x00014550      4183fe09       cmp r14d, 9
0x00014554      7507           jne 0x1455d
0x00014556      4c3b02         cmp r8, qword [rdx]
0x00014559      4c0f44cf       cmove r9, rdi
0x0001455d      4883c108       add rcx, 8
0x00014561      4939cb         cmp r11, rcx
0x00014564      7428           je 0x1458e
0x00014566      488b39         mov rdi, qword [rcx]
0x00014569      4889fa         mov rdx, rdi
0x0001456c      48c1e204       shl rdx, 4
0x00014570      4801c2         add rdx, rax
0x00014573      440fb67208     movzx r14d, byte [rdx + 8]
0x00014578      4183fe08       cmp r14d, 8
0x0001457c      75d2           jne 0x14550
0x0001457e      4c3b02         cmp r8, qword [rdx]
0x00014581      480f44f7       cmove rsi, rdi
0x00014585      4883c108       add rcx, 8
0x00014589      4939cb         cmp r11, rcx
0x0001458c      75d8           jne 0x14566
0x0001458e      4885f6         test rsi, rsi
0x00014591      4d89ce         mov r14, r9
0x00014594      4c894c2428     mov qword [rsp + 0x28], r9
0x00014599      0f88c1000000   js 0x14660
0x0001459f      488b4c2410     mov rcx, qword [rsp + 0x10]
0x000145a4      4889da         mov rdx, rbx
0x000145a7      4c89e7         mov rdi, r12
0x000145aa      e8f1a1ffff     call sym.sub_epsilon_src_nodes
0x000145af      85c0           test eax, eax
0x000145b1      0f8581fbffff   jne 0x14138
0x000145b7      4d85f6         test r14, r14
0x000145ba      0f884dffffff   js 0x1450d
0x000145c0      48837b0800     cmp qword [rbx + 8], 0
0x000145c5      0f8e42ffffff   jle 0x1450d
0x000145cb      4c8b5310       mov r10, qword [rbx + 0x10]
0x000145cf      4531f6         xor r14d, r14d
0x000145d2      48896c2430     mov qword [rsp + 0x30], rbp
0x000145d7      4c89f5         mov rbp, r14
0x000145da      4c8b742428     mov r14, qword [rsp + 0x28]
0x000145df      eb19           jmp 0x145fa
0x000145e1      0f1f80000000.  nop dword [rax]
0x000145e8      4883c501       add rbp, 1
0x000145ec      483b6b08       cmp rbp, qword [rbx + 8]
0x000145f0      0f8d82000000   jge 0x14678
0x000145f6      4c8b5310       mov r10, qword [rbx + 0x10]
0x000145fa      4d8b14ea       mov r10, qword [r10 + rbp*8]
0x000145fe      498b442438     mov rax, qword [r12 + 0x38]
0x00014603      4c89f2         mov rdx, r14
0x00014606      4f8d0c52       lea r9, [r10 + r10*2]
0x0001460a      49c1e103       shl r9, 3
0x0001460e      4c01c8         add rax, r9
0x00014611      488b7808       mov rdi, qword [rax + 8]
0x00014615      488d7010       lea rsi, [rax + 0x10]
0x00014619      e83279ffff     call sym.re_node_set_contains.isra.3
0x0001461e      4885c0         test rax, rax
0x00014621      75c5           jne 0x145e8
0x00014623      4d034c2430     add r9, qword [r12 + 0x30]
0x00014628      498b7908       mov rdi, qword [r9 + 8]
0x0001462c      498d7110       lea rsi, [r9 + 0x10]
0x00014630      e81b79ffff     call sym.re_node_set_contains.isra.3
0x00014635      4885c0         test rax, rax
0x00014638      75ae           jne 0x145e8
0x0001463a      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0001463f      4889da         mov rdx, rbx
0x00014642      4c89d6         mov rsi, r10
0x00014645      4c89e7         mov rdi, r12
0x00014648      e853a1ffff     call sym.sub_epsilon_src_nodes
0x0001464d      85c0           test eax, eax
0x0001464f      0f85e3faffff   jne 0x14138
0x00014655      4883ed01       sub rbp, 1
0x00014659      eb8d           jmp 0x145e8
0x0001465b      0f1f440000     nop dword [rax + rax]
0x00014660      48837c242800   cmp qword [rsp + 0x28], 0
0x00014666      0f8963ffffff   jns 0x145cf
0x0001466c      e99cfeffff     jmp 0x1450d
0x00014671      0f1f80000000.  nop dword [rax]
0x00014678      488b6c2430     mov rbp, qword [rsp + 0x30]
0x0001467d      e98bfeffff     jmp 0x1450d
0x00014682      660f1f440000   nop word [rax + rax]
0x00014688      488b442408     mov rax, qword [rsp + 8]
0x0001468d      4c8b6c2440     mov r13, qword [rsp + 0x40]
0x00014692      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00014697      4c03a8d80000.  add r13, qword [rax + 0xd8]
0x0001469e      4b8d0476       lea rax, [r14 + r14*2]
0x000146a2      48c1e003       shl rax, 3
0x000146a6      4889442430     mov qword [rsp + 0x30], rax
0x000146ab      4a8d04f50000.  lea rax, [r14*8]
0x000146b3      4889442428     mov qword [rsp + 0x28], rax
0x000146b8      4c89f8         mov rax, r15
0x000146bb      4d89ef         mov r15, r13
0x000146be      4989dd         mov r13, rbx
0x000146c1      4889c3         mov rbx, rax
0x000146c4      e965010000     jmp 0x1482e
0x000146c9      0f1f80000000.  nop dword [rax]
0x000146d0      498b4718       mov rax, qword [r15 + 0x18]
0x000146d4      492b4710       sub rax, qword [r15 + 0x10]
0x000146d8      4885c0         test rax, rax
0x000146db      4c8d4c0500     lea r9, [rbp + rax]
0x000146e0      0f845a010000   je 0x14840
0x000146e6      498b442418     mov rax, qword [r12 + 0x18]
0x000146eb      488b742428     mov rsi, qword [rsp + 0x28]
0x000146f0      4c8b1430       mov r10, qword [rax + rsi]
0x000146f4      4c3b4b18       cmp r9, qword [rbx + 0x18]
0x000146f8      0f8f39010000   jg 0x14837
0x000146fe      488b03         mov rax, qword [rbx]
0x00014701      4a8b04c8       mov rax, qword [rax + r9*8]
0x00014705      4885c0         test rax, rax
0x00014708      0f8429010000   je 0x14837
0x0001470e      488b7810       mov rdi, qword [rax + 0x10]
0x00014712      488d7018       lea rsi, [rax + 0x18]
0x00014716      4c89d2         mov rdx, r10
0x00014719      e83278ffff     call sym.re_node_set_contains.isra.3
0x0001471e      4885c0         test rax, rax
0x00014721      0f8410010000   je 0x14837
0x00014727      4883ec08       sub rsp, 8
0x0001472b      488d5330       lea rdx, [rbx + 0x30]
0x0001472f      488d7328       lea rsi, [rbx + 0x28]
0x00014733      4151           push r9
0x00014735      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0001473a      4c89f1         mov rcx, r14
0x0001473d      4d89d1         mov r9, r10
0x00014740      4989e8         mov r8, rbp
0x00014743      e8b87affff     call sym.check_dst_limits.isra.13
0x00014748      84c0           test al, al
0x0001474a      5a             pop rdx
0x0001474b      59             pop rcx
0x0001474c      0f85e5000000   jne 0x14837
0x00014752      48837c246000   cmp qword [rsp + 0x60], 0
0x00014758      0f840a010000   je 0x14868
0x0001475e      488b442438     mov rax, qword [rsp + 0x38]
0x00014763      4c89ee         mov rsi, r13
0x00014766      4c89742470     mov qword [rsp + 0x70], r14
0x0001476b      48896c2478     mov qword [rsp + 0x78], rbp
0x00014770      488d7820       lea rdi, [rax + 0x20]
0x00014774      e89762ffff     call sym.re_node_set_insert
0x00014779      84c0           test al, al
0x0001477b      0f8453010000   je 0x148d4
0x00014781      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00014786      488b442460     mov rax, qword [rsp + 0x60]
0x0001478b      488b742438     mov rsi, qword [rsp + 0x38]
0x00014790      4c8b3c38       mov r15, qword [rax + rdi]
0x00014794      488b7c2408     mov rdi, qword [rsp + 8]
0x00014799      e892deffff     call sym.sift_states_backward
0x0001479e      85c0           test eax, eax
0x000147a0      0f8508010000   jne 0x148ae
0x000147a6      488b7308       mov rsi, qword [rbx + 8]
0x000147aa      488b542460     mov rdx, qword [rsp + 0x60]
0x000147af      4885f6         test rsi, rsi
0x000147b2      7419           je 0x147cd
0x000147b4      488d4d01       lea rcx, [rbp + 1]
0x000147b8      4c89e7         mov rdi, r12
0x000147bb      e8a08fffff     call sym.merge_state_array
0x000147c0      85c0           test eax, eax
0x000147c2      0f85e6000000   jne 0x148ae
0x000147c8      488b542460     mov rdx, qword [rsp + 0x60]
0x000147cd      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x000147d2      488b442418     mov rax, qword [rsp + 0x18]
0x000147d7      488bbc248800.  mov rdi, qword [rsp + 0x88]
0x000147df      4d8d4b30       lea r9, [r11 + 0x30]
0x000147e3      4c893c02       mov qword [rdx + rax], r15
0x000147e7      4c89ea         mov rdx, r13
0x000147ea      4c89ce         mov rsi, r9
0x000147ed      e85e77ffff     call sym.re_node_set_contains.isra.3
0x000147f2      4883e801       sub rax, 1
0x000147f6      4889c2         mov rdx, rax
0x000147f9      780c           js 0x14807
0x000147fb      498d7b28       lea rdi, [r11 + 0x28]
0x000147ff      4c89ce         mov rsi, r9
0x00014802      e8c978ffff     call sym.re_node_set_remove_at.isra.4.part.5
0x00014807      488b4c2408     mov rcx, qword [rsp + 8]
0x0001480c      4b8d44ad00     lea rax, [r13 + r13*4]
0x00014811      488b91d80000.  mov rdx, qword [rcx + 0xd8]
0x00014818      488d04c2       lea rax, [rdx + rax*8]
0x0001481c      0f1f4000       nop dword [rax]
0x00014820      4983c501       add r13, 1
0x00014824      80782000       cmp byte [rax + 0x20], 0
0x00014828      4c8d7828       lea r15, [rax + 0x28]
0x0001482c      7432           je 0x14860
0x0001482e      4d3b37         cmp r14, qword [r15]
0x00014831      0f8499feffff   je 0x146d0
0x00014837      4c89f8         mov rax, r15
0x0001483a      ebe4           jmp 0x14820
0x0001483c      0f1f4000       nop dword [rax]
0x00014840      498b442428     mov rax, qword [r12 + 0x28]
0x00014845      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0001484a      488b443810     mov rax, qword [rax + rdi + 0x10]
0x0001484f      4c8b10         mov r10, qword [rax]
0x00014852      e99dfeffff     jmp 0x146f4
0x00014857      660f1f840000.  nop word [rax + rax]
0x00014860      4989df         mov r15, rbx
0x00014863      e9a0faffff     jmp 0x14308
0x00014868      488b4330       mov rax, qword [rbx + 0x30]
0x0001486c      488d7320       lea rsi, [rbx + 0x20]
0x00014870      660f6f03       movdqa xmm0, xmmword [rbx]
0x00014874      488984249000.  mov qword [rsp + 0x90], rax
0x0001487c      488b442438     mov rax, qword [rsp + 0x38]
0x00014881      0f29442460     movaps xmmword [rsp + 0x60], xmm0
0x00014886      488d7820       lea rdi, [rax + 0x20]
0x0001488a      660f6f4310     movdqa xmm0, xmmword [rbx + 0x10]
0x0001488f      0f29442470     movaps xmmword [rsp + 0x70], xmm0
0x00014894      660f6f4320     movdqa xmm0, xmmword [rbx + 0x20]
0x00014899      0f2984248000.  movaps xmmword [rsp + 0x80], xmm0
0x000148a1      e80a88ffff     call sym.re_node_set_init_copy
0x000148a6      85c0           test eax, eax
0x000148a8      0f84b0feffff   je 0x1475e
0x000148ae      48837c246000   cmp qword [rsp + 0x60], 0
0x000148b4      0f847ef8ffff   je 0x14138
0x000148ba      488bbc249000.  mov rdi, qword [rsp + 0x90]
0x000148c2      89442408       mov dword [rsp + 8], eax
0x000148c6      e895d3feff     call sym.imp.free
0x000148cb      8b442408       mov eax, dword [rsp + 8]
0x000148cf      e964f8ffff     jmp 0x14138
0x000148d4      b80c000000     mov eax, 0xc
0x000148d9      ebd3           jmp 0x148ae
0x000148db      48837c246000   cmp qword [rsp + 0x60], 0
0x000148e1      0f8499faffff   je 0x14380
0x000148e7      31c0           xor eax, eax
0x000148e9      ebcf           jmp 0x148ba
0x000148eb      e8c0d4feff     call sym.imp.__stack_chk_fail
;-- parse_bracket_element.constprop.37:
0x000148f0      4156           push r14
0x000148f2      4155           push r13
0x000148f4      4989f2         mov r10, rsi
0x000148f7      4154           push r12
0x000148f9      55             push rbp
0x000148fa      4c63d9         movsxd r11, ecx
0x000148fd      53             push rbx
0x000148fe      4889d5         mov rbp, rdx
0x00014901      4889fb         mov rbx, rdi
0x00014904      4883ec20       sub rsp, 0x20
0x00014908      4c8b6648       mov r12, qword [rsi + 0x48]
0x0001490c      64488b042528.  mov rax, qword fs:[0x28]
0x00014915      4889442418     mov qword [rsp + 0x18], rax
0x0001491a      31c0           xor eax, eax
0x0001491c      83be90000000.  cmp dword [rsi + 0x90], 1
0x00014923      7453           je 0x14978
0x00014925      4c89e6         mov rsi, r12
0x00014928      4c89d7         mov rdi, r10
0x0001492b      e87075ffff     call sym.re_string_char_size_at.part.0
0x00014930      83f801         cmp eax, 1
0x00014933      7e43           jle 0x14978
0x00014935      498b5210       mov rdx, qword [r10 + 0x10]
0x00014939      4898           cdqe
0x0001493b      c70301000000   mov dword [rbx], 1
0x00014941      4c01e0         add rax, r12
0x00014944      428b14a2       mov edx, dword [rdx + r12*4]
0x00014948      895308         mov dword [rbx + 8], edx
0x0001494b      49894248       mov qword [r10 + 0x48], rax
0x0001494f      31c0           xor eax, eax
0x00014951      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00014956      6448330c2528.  xor rcx, qword fs:[0x28]
0x0001495f      0f85e3010000   jne 0x14b48
0x00014965      4883c420       add rsp, 0x20
0x00014969      5b             pop rbx
0x0001496a      5d             pop rbp
0x0001496b      415c           pop r12
0x0001496d      415d           pop r13
0x0001496f      415e           pop r14
0x00014971      c3             ret
0x00014972      660f1f440000   nop word [rax + rax]
0x00014978      0fb64508       movzx eax, byte [rbp + 8]
0x0001497c      4d01e3         add r11, r12
0x0001497f      4d895a48       mov qword [r10 + 0x48], r11
0x00014983      89c2           mov edx, eax
0x00014985      83e2fb         and edx, 0xfffffffb                     ; 4294967291
0x00014988      80fa1a         cmp dl, 0x1a
0x0001498b      7423           je 0x149b0
0x0001498d      3c1c           cmp al, 0x1c
0x0001498f      741f           je 0x149b0
0x00014991      3c16           cmp al, 0x16
0x00014993      7509           jne 0x1499e
0x00014995      4584c9         test r9b, r9b
0x00014998      0f8444010000   je 0x14ae2
0x0001499e      0fb64500       movzx eax, byte [rbp]
0x000149a2      c70300000000   mov dword [rbx], 0
0x000149a8      884308         mov byte [rbx + 8], al
0x000149ab      31c0           xor eax, eax
0x000149ad      eba2           jmp 0x14951
0x000149af      90             nop
0x000149b0      4d8b6268       mov r12, qword [r10 + 0x68]
0x000149b4      4d39e3         cmp r11, r12
0x000149b7      0f8d1b010000   jge 0x14ad8
0x000149bd      440fb66d00     movzx r13d, byte [rbp]
0x000149c2      4531c0         xor r8d, r8d
0x000149c5      eb2b           jmp 0x149f2
0x000149c7      660f1f840000.  nop word [rax + rax]
0x000149d0      488b4308       mov rax, qword [rbx + 8]
0x000149d4      46880c00       mov byte [rax + r8], r9b
0x000149d8      4983c001       add r8, 1
0x000149dc      4983f820       cmp r8, 0x20                            ; "@"
0x000149e0      0f84f2000000   je 0x14ad8
0x000149e6      0fb64508       movzx eax, byte [rbp + 8]
0x000149ea      4d8b5a48       mov r11, qword [r10 + 0x48]
0x000149ee      4d8b6268       mov r12, qword [r10 + 0x68]
0x000149f2      3c1e           cmp al, 0x1e
0x000149f4      4d63f0         movsxd r14, r8d
0x000149f7      7467           je 0x14a60
0x000149f9      498b5208       mov rdx, qword [r10 + 8]
0x000149fd      498d4301       lea rax, [r11 + 1]
0x00014a01      49894248       mov qword [r10 + 0x48], rax
0x00014a05      460fb60c1a     movzx r9d, byte [rdx + r11]
0x00014a0a      4c39e0         cmp rax, r12
0x00014a0d      0f8dc5000000   jge 0x14ad8
0x00014a13      4538cd         cmp r13b, r9b
0x00014a16      75b8           jne 0x149d0
0x00014a18      498b5208       mov rdx, qword [r10 + 8]
0x00014a1c      803c025d       cmp byte [rdx + rax], 0x5d
0x00014a20      75ae           jne 0x149d0
0x00014a22      4883c001       add rax, 1
0x00014a26      49894248       mov qword [r10 + 0x48], rax
0x00014a2a      488b4308       mov rax, qword [rbx + 8]
0x00014a2e      42c6043000     mov byte [rax + r14], 0
0x00014a33      0fb64508       movzx eax, byte [rbp + 8]
0x00014a37      3c1c           cmp al, 0x1c
0x00014a39      0f84fc000000   je 0x14b3b
0x00014a3f      3c1e           cmp al, 0x1e
0x00014a41      0f84e7000000   je 0x14b2e
0x00014a47      3c1a           cmp al, 0x1a
0x00014a49      0f84d2000000   je 0x14b21
0x00014a4f      31c0           xor eax, eax
0x00014a51      e9fbfeffff     jmp 0x14951
0x00014a56      662e0f1f8400.  nop word cs:[rax + rax]
0x00014a60      4180ba8b0000.  cmp byte [r10 + 0x8b], 0
0x00014a68      748f           je 0x149f9
0x00014a6a      4180ba8c0000.  cmp byte [r10 + 0x8c], 0
0x00014a72      0f8490000000   je 0x14b08
0x00014a78      4d3b5a30       cmp r11, qword [r10 + 0x30]
0x00014a7c      740f           je 0x14a8d
0x00014a7e      498b4210       mov rax, qword [r10 + 0x10]
0x00014a82      42833c98ff     cmp dword [rax + r11*4], 0xffffffff
0x00014a87      0f846cffffff   je 0x149f9
0x00014a8d      498b4218       mov rax, qword [r10 + 0x18]
0x00014a91      4a8b04d8       mov rax, qword [rax + r11*8]
0x00014a95      490302         add rax, qword [r10]
0x00014a98      49034228       add rax, qword [r10 + 0x28]
0x00014a9c      440fb608       movzx r9d, byte [rax]
0x00014aa0      41f6c180       test r9b, 0x80
0x00014aa4      0f854fffffff   jne 0x149f9
0x00014aaa      4183ba900000.  cmp dword [r10 + 0x90], 1
0x00014ab2      b801000000     mov eax, 1
0x00014ab7      740d           je 0x14ac6
0x00014ab9      4c89de         mov rsi, r11
0x00014abc      4c89d7         mov rdi, r10
0x00014abf      e8dc73ffff     call sym.re_string_char_size_at.part.0
0x00014ac4      4898           cdqe
0x00014ac6      4c01d8         add rax, r11
0x00014ac9      49894248       mov qword [r10 + 0x48], rax
0x00014acd      e938ffffff     jmp 0x14a0a
0x00014ad2      660f1f440000   nop word [rax + rax]
0x00014ad8      b807000000     mov eax, 7
0x00014add      e96ffeffff     jmp 0x14951
0x00014ae2      4889e7         mov rdi, rsp
0x00014ae5      4c89c2         mov rdx, r8
0x00014ae8      4c89d6         mov rsi, r10
0x00014aeb      e85059ffff     call sym.peek_token_bracket
0x00014af0      807c240815     cmp byte [rsp + 8], 0x15
0x00014af5      b80b000000     mov eax, 0xb
0x00014afa      0f849efeffff   je 0x1499e
0x00014b00      e94cfeffff     jmp 0x14951
0x00014b05      0f1f00         nop dword [rax]
0x00014b08      498d4301       lea rax, [r11 + 1]
0x00014b0c      4d031a         add r11, qword [r10]
0x00014b0f      498b5228       mov rdx, qword [r10 + 0x28]
0x00014b13      49894248       mov qword [r10 + 0x48], rax
0x00014b17      450fb60c13     movzx r9d, byte [r11 + rdx]
0x00014b1c      e9e9feffff     jmp 0x14a0a
0x00014b21      c70303000000   mov dword [rbx], 3
0x00014b27      31c0           xor eax, eax
0x00014b29      e923feffff     jmp 0x14951
0x00014b2e      c70304000000   mov dword [rbx], 4
0x00014b34      31c0           xor eax, eax
0x00014b36      e916feffff     jmp 0x14951
0x00014b3b      c70302000000   mov dword [rbx], 2
0x00014b41      31c0           xor eax, eax
0x00014b43      e909feffff     jmp 0x14951
0x00014b48      e863d2feff     call sym.imp.__stack_chk_fail
0x00014b4d      0f1f00         nop dword [rax]
;-- peek_token:
0x00014b50      4157           push r15
0x00014b52      4156           push r14
0x00014b54      4155           push r13
0x00014b56      4154           push r12
0x00014b58      55             push rbp
0x00014b59      53             push rbx
0x00014b5a      4889fd         mov rbp, rdi
0x00014b5d      4883ec38       sub rsp, 0x38
0x00014b61      4c8b7648       mov r14, qword [rsi + 0x48]
0x00014b65      64488b042528.  mov rax, qword fs:[0x28]
0x00014b6e      4889442428     mov qword [rsp + 0x28], rax
0x00014b73      31c0           xor eax, eax
0x00014b75      4c397668       cmp qword [rsi + 0x68], r14
0x00014b79      0f8e91000000   jle 0x14c10
0x00014b7f      440fb66f0a     movzx r13d, byte [rdi + 0xa]
0x00014b84      4989d7         mov r15, rdx
0x00014b87      488b5608       mov rdx, qword [rsi + 8]
0x00014b8b      4889f3         mov rbx, rsi
0x00014b8e      460fb62432     movzx r12d, byte [rdx + r14]
0x00014b93      4183e59f       and r13d, 0xffffff9f                    ; 4294967199
0x00014b97      44886f0a       mov byte [rdi + 0xa], r13b
0x00014b9b      8b8690000000   mov eax, dword [rsi + 0x90]
0x00014ba1      448827         mov byte [rdi], r12b
0x00014ba4      83f801         cmp eax, 1
0x00014ba7      0f8e93000000   jle 0x14c40
0x00014bad      4c3b7630       cmp r14, qword [rsi + 0x30]
0x00014bb1      0f8499010000   je 0x14d50
0x00014bb7      488b4e10       mov rcx, qword [rsi + 0x10]
0x00014bbb      428b0cb1       mov ecx, dword [rcx + r14*4]
0x00014bbf      83f9ff         cmp ecx, 0xffffffff
0x00014bc2      0f84d8000000   je 0x14ca0
0x00014bc8      4180fc5c       cmp r12b, 0x5c
0x00014bcc      0f84ee000000   je 0x14cc0
0x00014bd2      c6470801       mov byte [rdi + 8], 1
0x00014bd6      89cf           mov edi, ecx
0x00014bd8      4889542408     mov qword [rsp + 8], rdx
0x00014bdd      890c24         mov dword [rsp], ecx
0x00014be0      e82bd3feff     call sym.imp.iswalnum
0x00014be5      8b0c24         mov ecx, dword [rsp]
0x00014be8      85c0           test eax, eax
0x00014bea      0f95c0         setne al
0x00014bed      83f95f         cmp ecx, 0x5f
0x00014bf0      0f94c1         sete cl
0x00014bf3      09c8           or eax, ecx
0x00014bf5      c1e006         shl eax, 6
0x00014bf8      4109c5         or r13d, eax
0x00014bfb      44886d0a       mov byte [rbp + 0xa], r13b
0x00014bff      488b542408     mov rdx, qword [rsp + 8]
0x00014c04      eb76           jmp 0x14c7c
0x00014c06      662e0f1f8400.  nop word cs:[rax + rax]
0x00014c10      c6470802       mov byte [rdi + 8], 2
0x00014c14      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00014c19      6448333c2528.  xor rdi, qword fs:[0x28]
0x00014c22      0f8520060000   jne 0x15248
0x00014c28      4883c438       add rsp, 0x38
0x00014c2c      5b             pop rbx
0x00014c2d      5d             pop rbp
0x00014c2e      415c           pop r12
0x00014c30      415d           pop r13
0x00014c32      415e           pop r14
0x00014c34      415f           pop r15
0x00014c36      c3             ret
0x00014c37      660f1f840000.  nop word [rax + rax]
0x00014c40      4180fc5c       cmp r12b, 0x5c
0x00014c44      747a           je 0x14cc0
0x00014c46      c6450801       mov byte [rbp + 8], 1
0x00014c4a      48891424       mov qword [rsp], rdx
0x00014c4e      e88dd4feff     call sym.imp.__ctype_b_loc
0x00014c53      488b30         mov rsi, qword [rax]
0x00014c56      410fb6cc       movzx ecx, r12b
0x00014c5a      0fb7044e       movzx eax, word [rsi + rcx*2]
0x00014c5e      66c1e803       shr ax, 3
0x00014c62      83e001         and eax, 1
0x00014c65      4180fc5f       cmp r12b, 0x5f
0x00014c69      0f94c1         sete cl
0x00014c6c      09c8           or eax, ecx
0x00014c6e      c1e006         shl eax, 6
0x00014c71      4109c5         or r13d, eax
0x00014c74      44886d0a       mov byte [rbp + 0xa], r13b
0x00014c78      488b1424       mov rdx, qword [rsp]
0x00014c7c      4183ec0a       sub r12d, 0xa
0x00014c80      4180fc73       cmp r12b, 0x73
0x00014c84      0f8732010000   ja 0x14dbc
0x00014c8a      488d0da37b00.  lea rcx, [0x0001c834]
0x00014c91      450fb6e4       movzx r12d, r12b
0x00014c95      4a6304a1       movsxd rax, dword [rcx + r12*4]
0x00014c99      4801c8         add rax, rcx
0x00014c9c      ffe0           jmp rax
0x00014c9e      6690           nop
0x00014ca0      4183cd20       or r13d, 0x20                           ; "@"
0x00014ca4      c6470801       mov byte [rdi + 8], 1
0x00014ca8      b801000000     mov eax, 1
0x00014cad      44886f0a       mov byte [rdi + 0xa], r13b
0x00014cb1      e95effffff     jmp 0x14c14
0x00014cb6      662e0f1f8400.  nop word cs:[rax + rax]
0x00014cc0      498d7601       lea rsi, [r14 + 1]
0x00014cc4      483b7358       cmp rsi, qword [rbx + 0x58]
0x00014cc8      0f8da2000000   jge 0x14d70
0x00014cce      80bb8b000000.  cmp byte [rbx + 0x8b], 0
0x00014cd5      0f8585040000   jne 0x15160
0x00014cdb      420fb67c3201   movzx edi, byte [rdx + r14 + 1]
0x00014ce1      4189fc         mov r12d, edi
0x00014ce4      897c2408       mov dword [rsp + 8], edi
0x00014ce8      83f801         cmp eax, 1
0x00014ceb      44886500       mov byte [rbp], r12b
0x00014cef      c6450801       mov byte [rbp + 8], 1
0x00014cf3      0f8e47040000   jle 0x15140
0x00014cf9      488b4310       mov rax, qword [rbx + 0x10]
0x00014cfd      448b04b0       mov r8d, dword [rax + rsi*4]
0x00014d01      4489c7         mov edi, r8d
0x00014d04      44890424       mov dword [rsp], r8d
0x00014d08      e803d2feff     call sym.imp.iswalnum
0x00014d0d      448b0424       mov r8d, dword [rsp]
0x00014d11      85c0           test eax, eax
0x00014d13      0f95c0         setne al
0x00014d16      4183f85f       cmp r8d, 0x5f
0x00014d1a      0f94c2         sete dl
0x00014d1d      418d4c24d9     lea ecx, [r12 - 0x27]
0x00014d22      09d0           or eax, edx
0x00014d24      c1e006         shl eax, 6
0x00014d27      4109c5         or r13d, eax
0x00014d2a      80f956         cmp cl, 0x56
0x00014d2d      44886d0a       mov byte [rbp + 0xa], r13b
0x00014d31      0f87fe030000   ja 0x15135
0x00014d37      488d15c67c00.  lea rdx, [0x0001ca04]
0x00014d3e      0fb6c9         movzx ecx, cl
0x00014d41      4863048a       movsxd rax, dword [rdx + rcx*4]
0x00014d45      4801d0         add rax, rdx
0x00014d48      ffe0           jmp rax
0x00014d4a      660f1f440000   nop word [rax + rax]
0x00014d50      4180fc5c       cmp r12b, 0x5c
0x00014d54      0f8466ffffff   je 0x14cc0
0x00014d5a      488b4310       mov rax, qword [rbx + 0x10]
0x00014d5e      c6450801       mov byte [rbp + 8], 1
0x00014d62      428b0cb0       mov ecx, dword [rax + r14*4]
0x00014d66      e96bfeffff     jmp 0x14bd6
0x00014d6b      0f1f440000     nop dword [rax + rax]
0x00014d70      c6450824       mov byte [rbp + 8], 0x24                ; '$'
0x00014d74      b801000000     mov eax, 1
0x00014d79      e996feffff     jmp 0x14c14
0x00014d7e      6690           nop
0x00014d80      4181e7001200.  and r15d, 0x1200
0x00014d87      b801000000     mov eax, 1
0x00014d8c      4981ff001200.  cmp r15, 0x1200
0x00014d93      0f857bfeffff   jne 0x14c14
0x00014d99      c6450818       mov byte [rbp + 8], 0x18
0x00014d9d      e972feffff     jmp 0x14c14
0x00014da2      660f1f440000   nop word [rax + rax]
0x00014da8      4181e7008400.  and r15d, 0x8400
0x00014daf      4981ff008000.  cmp r15, 0x8000
0x00014db6      0f84d6000000   je 0x14e92
0x00014dbc      b801000000     mov eax, 1
0x00014dc1      e94efeffff     jmp 0x14c14
0x00014dc6      662e0f1f8400.  nop word cs:[rax + rax]
0x00014dd0      4181e7001200.  and r15d, 0x1200
0x00014dd7      b801000000     mov eax, 1
0x00014ddc      4981ff001200.  cmp r15, 0x1200
0x00014de3      0f852bfeffff   jne 0x14c14
0x00014de9      c6450817       mov byte [rbp + 8], 0x17
0x00014ded      e922feffff     jmp 0x14c14
0x00014df2      660f1f440000   nop word [rax + rax]
0x00014df8      41f7c7080080.  test r15d, 0x800008
0x00014dff      7509           jne 0x14e0a
0x00014e01      4d85f6         test r14, r14
0x00014e04      0f85c0030000   jne 0x151ca
0x00014e0a      c645080c       mov byte [rbp + 8], 0xc
0x00014e0e      c74500100000.  mov dword [rbp], 0x10
0x00014e15      b801000000     mov eax, 1
0x00014e1a      e9f5fdffff     jmp 0x14c14
0x00014e1f      90             nop
0x00014e20      c6450814       mov byte [rbp + 8], 0x14
0x00014e24      b801000000     mov eax, 1
0x00014e29      e9e6fdffff     jmp 0x14c14
0x00014e2e      6690           nop
0x00014e30      41f7c7020400.  test r15d, 0x402
0x00014e37      b801000000     mov eax, 1
0x00014e3c      0f85d2fdffff   jne 0x14c14
0x00014e42      c6450813       mov byte [rbp + 8], 0x13
0x00014e46      e9c9fdffff     jmp 0x14c14
0x00014e4b      0f1f440000     nop dword [rax + rax]
0x00014e50      c6450805       mov byte [rbp + 8], 5
0x00014e54      b801000000     mov eax, 1
0x00014e59      e9b6fdffff     jmp 0x14c14
0x00014e5e      6690           nop
0x00014e60      41f7c7020400.  test r15d, 0x402
0x00014e67      b801000000     mov eax, 1
0x00014e6c      0f85a2fdffff   jne 0x14c14
0x00014e72      c6450812       mov byte [rbp + 8], 0x12
0x00014e76      e999fdffff     jmp 0x14c14
0x00014e7b      0f1f440000     nop dword [rax + rax]
0x00014e80      41f7c7000800.  test r15d, 0x800
0x00014e87      b801000000     mov eax, 1
0x00014e8c      0f8482fdffff   je 0x14c14
0x00014e92      c645080a       mov byte [rbp + 8], 0xa
0x00014e96      b801000000     mov eax, 1
0x00014e9b      e974fdffff     jmp 0x14c14
0x00014ea0      c645080b       mov byte [rbp + 8], 0xb
0x00014ea4      b801000000     mov eax, 1
0x00014ea9      e966fdffff     jmp 0x14c14
0x00014eae      6690           nop
0x00014eb0      41f7c7002000.  test r15d, sym.imp.error                ; 0x2000
0x00014eb7      b801000000     mov eax, 1
0x00014ebc      0f8452fdffff   je 0x14c14
0x00014ec2      c6450809       mov byte [rbp + 8], 9
0x00014ec6      e949fdffff     jmp 0x14c14
0x00014ecb      0f1f440000     nop dword [rax + rax]
0x00014ed0      41f7c7002000.  test r15d, sym.imp.error                ; 0x2000
0x00014ed7      b801000000     mov eax, 1
0x00014edc      0f8432fdffff   je 0x14c14
0x00014ee2      c6450808       mov byte [rbp + 8], 8
0x00014ee6      e929fdffff     jmp 0x14c14
0x00014eeb      0f1f440000     nop dword [rax + rax]
0x00014ef0      41f6c708       test r15b, 8
0x00014ef4      750e           jne 0x14f04
0x00014ef6      4983c601       add r14, 1
0x00014efa      4c3b7358       cmp r14, qword [rbx + 0x58]
0x00014efe      0f85f7020000   jne 0x151fb
0x00014f04      c645080c       mov byte [rbp + 8], 0xc
0x00014f08      c74500200000.  mov dword [rbp], 0x20                   ; "@"
0x00014f0f      b801000000     mov eax, 1
0x00014f14      e9fbfcffff     jmp 0x14c14
0x00014f19      41f7c7008400.  test r15d, 0x8400
0x00014f20      b802000000     mov eax, 2
0x00014f25      0f85e9fcffff   jne 0x14c14
0x00014f2b      c645080a       mov byte [rbp + 8], 0xa
0x00014f2f      e9e0fcffff     jmp 0x14c14
0x00014f34      4181e7001200.  and r15d, 0x1200
0x00014f3b      b802000000     mov eax, 2
0x00014f40      4981ff000200.  cmp r15, 0x200
0x00014f47      0f85c7fcffff   jne 0x14c14
0x00014f4d      e997feffff     jmp 0x14de9
0x00014f52      41f7c7000008.  test r15d, 0x80000
0x00014f59      b802000000     mov eax, 2
0x00014f5e      0f85b0fcffff   jne 0x14c14
0x00014f64      c6450820       mov byte [rbp + 8], 0x20                ; "@"
0x00014f68      e9a7fcffff     jmp 0x14c14
0x00014f6d      41f7c7000008.  test r15d, 0x80000
0x00014f74      b802000000     mov eax, 2
0x00014f79      0f8595fcffff   jne 0x14c14
0x00014f7f      c6450822       mov byte [rbp + 8], 0x22                ; '"'
0x00014f83      e98cfcffff     jmp 0x14c14
0x00014f88      4181e7001200.  and r15d, 0x1200
0x00014f8f      b802000000     mov eax, 2
0x00014f94      4981ff000200.  cmp r15, 0x200
0x00014f9b      0f8573fcffff   jne 0x14c14
0x00014fa1      e9f3fdffff     jmp 0x14d99
0x00014fa6      41f7c7000008.  test r15d, 0x80000
0x00014fad      b802000000     mov eax, 2
0x00014fb2      0f855cfcffff   jne 0x14c14
0x00014fb8      c645080c       mov byte [rbp + 8], 0xc
0x00014fbc      c74500000100.  mov dword [rbp], obj.__frame_dummy_init_array_entry ; 0x100
0x00014fc3      e94cfcffff     jmp 0x14c14
0x00014fc8      41f7c7000008.  test r15d, 0x80000
0x00014fcf      b802000000     mov eax, 2
0x00014fd4      0f853afcffff   jne 0x14c14
0x00014fda      c645080c       mov byte [rbp + 8], 0xc
0x00014fde      c74500400000.  mov dword [rbp], 0x40                   ; segment.PHDR
0x00014fe5      e92afcffff     jmp 0x14c14
0x00014fea      41f7c7000008.  test r15d, 0x80000
0x00014ff1      b802000000     mov eax, 2
0x00014ff6      0f8518fcffff   jne 0x14c14
0x00014ffc      c6450821       mov byte [rbp + 8], 0x21                ; '!'
0x00015000      e90ffcffff     jmp 0x14c14
0x00015005      41f7c7000008.  test r15d, 0x80000
0x0001500c      b802000000     mov eax, 2
0x00015011      0f85fdfbffff   jne 0x14c14
0x00015017      c6450823       mov byte [rbp + 8], 0x23                ; '#'
0x0001501b      e9f4fbffff     jmp 0x14c14
0x00015020      41f7c7000008.  test r15d, 0x80000
0x00015027      b802000000     mov eax, 2
0x0001502c      0f85e2fbffff   jne 0x14c14
0x00015032      c645080c       mov byte [rbp + 8], 0xc
0x00015036      c74500000200.  mov dword [rbp], 0x200
0x0001503d      e9d2fbffff     jmp 0x14c14
0x00015042      4181e7020400.  and r15d, 0x402
0x00015049      b802000000     mov eax, 2
0x0001504e      4983ff02       cmp r15, 2
0x00015052      0f85bcfbffff   jne 0x14c14
0x00015058      e9e5fdffff     jmp 0x14e42
0x0001505d      41f7c7000008.  test r15d, 0x80000
0x00015064      b802000000     mov eax, 2
0x00015069      0f85a5fbffff   jne 0x14c14
0x0001506f      c645080c       mov byte [rbp + 8], 0xc
0x00015073      c74500090000.  mov dword [rbp], 9
0x0001507a      e995fbffff     jmp 0x14c14
0x0001507f      41f7c7000008.  test r15d, 0x80000
0x00015086      b802000000     mov eax, 2
0x0001508b      0f8583fbffff   jne 0x14c14
0x00015091      c645080c       mov byte [rbp + 8], 0xc
0x00015095      c74500060000.  mov dword [rbp], 6
0x0001509c      e973fbffff     jmp 0x14c14
0x000150a1      41f7c7004000.  test r15d, 0x4000                       ; "=\x84\xd8!"
0x000150a8      b802000000     mov eax, 2
0x000150ad      0f8561fbffff   jne 0x14c14
0x000150b3      8b542408       mov edx, dword [rsp + 8]
0x000150b7      c6450804       mov byte [rbp + 8], 4
0x000150bb      83ea31         sub edx, 0x31
0x000150be      4863d2         movsxd rdx, edx
0x000150c1      48895500       mov qword [rbp], rdx
0x000150c5      e94afbffff     jmp 0x14c14
0x000150ca      4181e7020400.  and r15d, 0x402
0x000150d1      b802000000     mov eax, 2
0x000150d6      4983ff02       cmp r15, 2
0x000150da      0f8534fbffff   jne 0x14c14
0x000150e0      e98dfdffff     jmp 0x14e72
0x000150e5      41f7c7002000.  test r15d, sym.imp.error                ; 0x2000
0x000150ec      b802000000     mov eax, 2
0x000150f1      0f851dfbffff   jne 0x14c14
0x000150f7      e9c6fdffff     jmp 0x14ec2
0x000150fc      41f7c7002000.  test r15d, sym.imp.error                ; 0x2000
0x00015103      b802000000     mov eax, 2
0x00015108      0f8506fbffff   jne 0x14c14
0x0001510e      e9cffdffff     jmp 0x14ee2
0x00015113      41f7c7000008.  test r15d, 0x80000
0x0001511a      b802000000     mov eax, 2
0x0001511f      0f85effaffff   jne 0x14c14
0x00015125      c645080c       mov byte [rbp + 8], 0xc
0x00015129      c74500800000.  mov dword [rbp], 0x80
0x00015130      e9dffaffff     jmp 0x14c14
0x00015135      b802000000     mov eax, 2
0x0001513a      e9d5faffff     jmp 0x14c14
0x0001513f      90             nop
0x00015140      e89bcffeff     call sym.imp.__ctype_b_loc
0x00015145      488b30         mov rsi, qword [rax]
0x00015148      410fb6d4       movzx edx, r12b
0x0001514c      0fb70456       movzx eax, word [rsi + rdx*2]
0x00015150      66c1e803       shr ax, 3
0x00015154      83e001         and eax, 1
0x00015157      4180fc5f       cmp r12b, 0x5f
0x0001515b      e9bafbffff     jmp 0x14d1a
0x00015160      83f801         cmp eax, 1
0x00015163      7e2f           jle 0x15194
0x00015165      488b4b10       mov rcx, qword [rbx + 0x10]
0x00015169      488d3cb50000.  lea rdi, [rsi*4]
0x00015171      448b04b1       mov r8d, dword [rcx + rsi*4]
0x00015175      4183f8ff       cmp r8d, 0xffffffff
0x00015179      0f84b0000000   je 0x1522f
0x0001517f      4d8d4e02       lea r9, [r14 + 2]
0x00015183      4c394b30       cmp qword [rbx + 0x30], r9
0x00015187      740b           je 0x15194
0x00015189      837c3904ff     cmp dword [rcx + rdi + 4], 0xffffffff
0x0001518e      0f849b000000   je 0x1522f
0x00015194      80bb8c000000.  cmp byte [rbx + 0x8c], 0
0x0001519b      488b0b         mov rcx, qword [rbx]
0x0001519e      488b7b28       mov rdi, qword [rbx + 0x28]
0x000151a2      7444           je 0x151e8
0x000151a4      4c8b4318       mov r8, qword [rbx + 0x18]
0x000151a8      4801f9         add rcx, rdi
0x000151ab      49030cf0       add rcx, qword [r8 + rsi*8]
0x000151af      0fb639         movzx edi, byte [rcx]
0x000151b2      4189fc         mov r12d, edi
0x000151b5      897c2408       mov dword [rsp + 8], edi
0x000151b9      81e780000000   and edi, 0x80
0x000151bf      0f8516fbffff   jne 0x14cdb
0x000151c5      e91efbffff     jmp 0x14ce8
0x000151ca      42807c32ff0a   cmp byte [rdx + r14 - 1], 0xa
0x000151d0      0f85e6fbffff   jne 0x14dbc
0x000151d6      41f7c7000800.  test r15d, 0x800
0x000151dd      0f84d9fbffff   je 0x14dbc
0x000151e3      e922fcffff     jmp 0x14e0a
0x000151e8      4801f1         add rcx, rsi
0x000151eb      0fb63c39       movzx edi, byte [rcx + rdi]
0x000151ef      4189fc         mov r12d, edi
0x000151f2      897c2408       mov dword [rsp + 8], edi
0x000151f6      e9edfaffff     jmp 0x14ce8
0x000151fb      488d7c2410     lea rdi, [rsp + 0x10]
0x00015200      4c89fa         mov rdx, r15
0x00015203      4c897348       mov qword [rbx + 0x48], r14
0x00015207      4889de         mov rsi, rbx
0x0001520a      e841f9ffff     call sym.peek_token
0x0001520f      0fb6442418     movzx eax, byte [rsp + 0x18]
0x00015214      48836b4801     sub qword [rbx + 0x48], 1
0x00015219      8d50f7         lea edx, [rax - 9]
0x0001521c      b801000000     mov eax, 1
0x00015221      80fa01         cmp dl, 1
0x00015224      0f87eaf9ffff   ja 0x14c14
0x0001522a      e9d5fcffff     jmp 0x14f04
0x0001522f      420fb6443201   movzx eax, byte [rdx + r14 + 1]
0x00015235      c6450801       mov byte [rbp + 8], 1
0x00015239      4189c4         mov r12d, eax
0x0001523c      884500         mov byte [rbp], al
0x0001523f      89442408       mov dword [rsp + 8], eax
0x00015243      e9b9faffff     jmp 0x14d01
0x00015248      e863cbfeff     call sym.imp.__stack_chk_fail
0x0001524d      0f1f00         nop dword [rax]
;-- fetch_number:
0x00015250      4156           push r14
0x00015252      4989fe         mov r14, rdi
0x00015255      4155           push r13
0x00015257      4989f5         mov r13, rsi
0x0001525a      4154           push r12
0x0001525c      49c7c4feffff.  mov r12, 0xfffffffffffffffe
0x00015263      55             push rbp
0x00015264      4889d5         mov rbp, rdx
0x00015267      53             push rbx
0x00015268      48c7c3ffffff.  mov rbx, 0xffffffffffffffff
0x0001526f      90             nop
0x00015270      4889ea         mov rdx, rbp
0x00015273      4c89f6         mov rsi, r14
0x00015276      4c89ef         mov rdi, r13
0x00015279      e8d2f8ffff     call sym.peek_token
0x0001527e      4898           cdqe
0x00015280      49014648       add qword [r14 + 0x48], rax
0x00015284      410fb64508     movzx eax, byte [r13 + 8]
0x00015289      410fb65500     movzx edx, byte [r13]
0x0001528e      3c02           cmp al, 2
0x00015290      744e           je 0x152e0
0x00015292      3c18           cmp al, 0x18
0x00015294      7451           je 0x152e7
0x00015296      80fa2c         cmp dl, 0x2c
0x00015299      744c           je 0x152e7
0x0001529b      3c01           cmp al, 1
0x0001529d      7409           je 0x152a8
0x0001529f      4c89e3         mov rbx, r12
0x000152a2      ebcc           jmp 0x15270
0x000152a4      0f1f4000       nop dword [rax]
0x000152a8      8d42d0         lea eax, [rdx - 0x30]
0x000152ab      3c09           cmp al, 9
0x000152ad      77f0           ja 0x1529f
0x000152af      4883fbfe       cmp rbx, 0xfffffffffffffffe
0x000152b3      74ea           je 0x1529f
0x000152b5      4883fbff       cmp rbx, 0xffffffffffffffff
0x000152b9      743d           je 0x152f8
0x000152bb      488d049b       lea rax, [rbx + rbx*4]
0x000152bf      488d1c42       lea rbx, [rdx + rax*2]
0x000152c3      b830800000     mov eax, 0x8030
0x000152c8      4881fb308000.  cmp rbx, 0x8030
0x000152cf      480f4fd8       cmovg rbx, rax
0x000152d3      4883eb30       sub rbx, 0x30
0x000152d7      eb97           jmp 0x15270
0x000152d9      0f1f80000000.  nop dword [rax]
0x000152e0      48c7c3feffff.  mov rbx, 0xfffffffffffffffe
0x000152e7      4889d8         mov rax, rbx
0x000152ea      5b             pop rbx
0x000152eb      5d             pop rbp
0x000152ec      415c           pop r12
0x000152ee      415d           pop r13
0x000152f0      415e           pop r14
0x000152f2      c3             ret
0x000152f3      0f1f440000     nop dword [rax + rax]
0x000152f8      0fb6da         movzx ebx, dl
0x000152fb      83eb30         sub ebx, 0x30
0x000152fe      4863db         movsxd rbx, ebx
0x00015301      e96affffff     jmp 0x15270
0x00015306      662e0f1f8400.  nop word cs:[rax + rax]
;-- parse_expression:
0x00015310      4157           push r15
0x00015312      4156           push r14
0x00015314      4155           push r13
0x00015316      4154           push r12
0x00015318      55             push rbp
0x00015319      53             push rbx
0x0001531a      4881ec280100.  sub rsp, 0x128
0x00015321      48894c2420     mov qword [rsp + 0x20], rcx
0x00015326      0fb64a08       movzx ecx, byte [rdx + 8]
0x0001532a      64488b042528.  mov rax, qword fs:[0x28]
0x00015333      488984241801.  mov qword [rsp + 0x118], rax
0x0001533b      31c0           xor eax, eax
0x0001533d      488b06         mov rax, qword [rsi]
0x00015340      4889542418     mov qword [rsp + 0x18], rdx
0x00015345      4c894c2440     mov qword [rsp + 0x40], r9
0x0001534a      80f924         cmp cl, 0x24
0x0001534d      4889442410     mov qword [rsp + 0x10], rax
0x00015352      0f87b8000000   ja 0x15410
0x00015358      4889f5         mov rbp, rsi
0x0001535b      488d35fe7700.  lea rsi, [0x0001cb60]
0x00015362      0fb6d1         movzx edx, cl
0x00015365      4989fe         mov r14, rdi
0x00015368      48630496       movsxd rax, dword [rsi + rdx*4]
0x0001536c      4801f0         add rax, rsi
0x0001536f      ffe0           jmp rax
0x00015371      488b5d30       mov rbx, qword [rbp + 0x30]
0x00015375      4c8b7c2420     mov r15, qword [rsp + 0x20]
0x0001537a      4889fe         mov rsi, rdi
0x0001537d      4c8b6c2418     mov r13, qword [rsp + 0x18]
0x00015382      4c890424       mov qword [rsp], r8
0x00015386      488d4301       lea rax, [rbx + 1]
0x0001538a      4c89fa         mov rdx, r15
0x0001538d      4881ca000080.  or rdx, 0x800000
0x00015394      4c89ef         mov rdi, r13
0x00015397      48894530       mov qword [rbp + 0x30], rax
0x0001539b      e8b0f7ffff     call sym.peek_token
0x000153a0      4898           cdqe
0x000153a2      49014648       add qword [r14 + 0x48], rax
0x000153a6      31c0           xor eax, eax
0x000153a8      41807d0809     cmp byte [r13 + 8], 9
0x000153ad      4c89ea         mov rdx, r13
0x000153b0      0f84fa0a0000   je 0x15eb0
0x000153b6      4c8b6c2440     mov r13, qword [rsp + 0x40]
0x000153bb      4c8b0424       mov r8, qword [rsp]
0x000153bf      4c89f9         mov rcx, r15
0x000153c2      4889ee         mov rsi, rbp
0x000153c5      4c89f7         mov rdi, r14
0x000153c8      4983c001       add r8, 1
0x000153cc      4d89e9         mov r9, r13
0x000153cf      e8ac150000     call sym.parse_reg_exp
0x000153d4      458b5d00       mov r11d, dword [r13]
0x000153d8      4585db         test r11d, r11d
0x000153db      7533           jne 0x15410
0x000153dd      488b542418     mov rdx, qword [rsp + 0x18]
0x000153e2      807a0809       cmp byte [rdx + 8], 9
0x000153e6      0f84c40a0000   je 0x15eb0
0x000153ec      4885c0         test rax, rax
0x000153ef      7411           je 0x15402
0x000153f1      488d35d862ff.  lea rsi, sym.free_tree                  ; 0xb6d0 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x000153f8      31d2           xor edx, edx
0x000153fa      4889c7         mov rdi, rax
0x000153fd      e82e54ffff     call sym.postorder
0x00015402      488b442440     mov rax, qword [rsp + 0x40]
0x00015407      c70008000000   mov dword [rax], 8
0x0001540d      0f1f00         nop dword [rax]
0x00015410      48c744242800.  mov qword [rsp + 0x28], 0
0x00015419      0f1f80000000.  nop dword [rax]
0x00015420      488bbc241801.  mov rdi, qword [rsp + 0x118]
0x00015428      6448333c2528.  xor rdi, qword fs:[0x28]
0x00015431      488b442428     mov rax, qword [rsp + 0x28]
0x00015436      0f8572130000   jne 0x167ae
0x0001543c      4881c4280100.  add rsp, 0x128
0x00015443      5b             pop rbx
0x00015444      5d             pop rbp
0x00015445      415c           pop r12
0x00015447      415d           pop r13
0x00015449      415e           pop r14
0x0001544b      415f           pop r15
0x0001544d      c3             ret
0x0001544e      48f744242000.  test qword [rsp + 0x20], 0x1000000
0x00015457      0f8550020000   jne 0x156ad
0x0001545d      488b442420     mov rax, qword [rsp + 0x20]
0x00015462      a820           test al, 0x20                           ; "@"
0x00015464      0f8543020000   jne 0x156ad
0x0001546a      a810           test al, 0x10
0x0001546c      0f85630e0000   jne 0x162d5
0x00015472      80f909         cmp cl, 9
0x00015475      0f840d0a0000   je 0x15e88
0x0001547b      488b442410     mov rax, qword [rsp + 0x10]
0x00015480      4c8b442418     mov r8, qword [rsp + 0x18]
0x00015485      31c9           xor ecx, ecx
0x00015487      31d2           xor edx, edx
0x00015489      488db0800000.  lea rsi, [rax + 0x80]
0x00015490      488d7870       lea rdi, [rax + 0x70]
0x00015494      41c6400801     mov byte [r8 + 8], 1
0x00015499      e87277ffff     call sym.create_token_tree.isra.16
0x0001549e      4885c0         test rax, rax
0x000154a1      4889442428     mov qword [rsp + 0x28], rax
0x000154a6      0f84cc090000   je 0x15e78
0x000154ac      488b5c2418     mov rbx, qword [rsp + 0x18]
0x000154b1      488b542420     mov rdx, qword [rsp + 0x20]
0x000154b6      4c89f6         mov rsi, r14
0x000154b9      4c8dbc24c000.  lea r15, [rsp + 0xc0]
0x000154c1      4889df         mov rdi, rbx
0x000154c4      e887f6ffff     call sym.peek_token
0x000154c9      4898           cdqe
0x000154cb      49014648       add qword [r14 + 0x48], rax
0x000154cf      0fb64308       movzx eax, byte [rbx + 8]
0x000154d3      0f1f440000     nop dword [rax + rax]
0x000154d8      3c17           cmp al, 0x17
0x000154da      0f8740ffffff   ja 0x15420
0x000154e0      3c12           cmp al, 0x12
0x000154e2      b900088c00     mov ecx, 0x8c0800
0x000154e7      0f94c3         sete bl
0x000154ea      480fa3c1       bt rcx, rax
0x000154ee      0f832cffffff   jae 0x15420
0x000154f4      488b4c2418     mov rcx, qword [rsp + 0x18]
0x000154f9      3c17           cmp al, 0x17
0x000154fb      498b6e48       mov rbp, qword [r14 + 0x48]
0x000154ff      660f6f01       movdqa xmm0, xmmword [rcx]
0x00015503      0f841f030000   je 0x15828
0x00015509      3c13           cmp al, 0x13
0x0001550b      0fb6db         movzx ebx, bl
0x0001550e      0f84ac020000   je 0x157c0
0x00015514      488b542420     mov rdx, qword [rsp + 0x20]
0x00015519      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0001551e      4c89f6         mov rsi, r14
0x00015521      e82af6ffff     call sym.peek_token
0x00015526      4898           cdqe
0x00015528      49014648       add qword [r14 + 0x48], rax
0x0001552c      48837c242800   cmp qword [rsp + 0x28], 0
0x00015532      0f8488030000   je 0x158c0
0x00015538      48c70424ffff.  mov qword [rsp], 0xffffffffffffffff
0x00015540      4885db         test rbx, rbx
0x00015543      488b6c2428     mov rbp, qword [rsp + 0x28]
0x00015548      48c744243000.  mov qword [rsp + 0x30], 0
0x00015551      0f8f79010000   jg 0x156d0
0x00015557      807d3011       cmp byte [rbp + 0x30], 0x11
0x0001555b      0f843f030000   je 0x158a0
0x00015561      48833c24ff     cmp qword [rsp], 0xffffffffffffffff
0x00015566      4889ea         mov rdx, rbp
0x00015569      4d89f8         mov r8, r15
0x0001556c      0f94c0         sete al
0x0001556f      31c9           xor ecx, ecx
0x00015571      83c00a         add eax, 0xa
0x00015574      888424c80000.  mov byte [rsp + 0xc8], al
0x0001557b      488b442410     mov rax, qword [rsp + 0x10]
0x00015580      4c8d6070       lea r12, [rax + 0x70]
0x00015584      4c8da8800000.  lea r13, [rax + 0x80]
0x0001558b      4c89e7         mov rdi, r12
0x0001558e      4c89ee         mov rsi, r13
0x00015591      e87a76ffff     call sym.create_token_tree.isra.16
0x00015596      4885c0         test rax, rax
0x00015599      4889c2         mov rdx, rax
0x0001559c      0f84ee010000   je 0x15790
0x000155a2      4883c302       add rbx, 2
0x000155a6      483b1c24       cmp rbx, qword [rsp]
0x000155aa      7f7f           jg 0x1562b
0x000155ac      4c89742448     mov qword [rsp + 0x48], r14
0x000155b1      4989c6         mov r14, rax
0x000155b4      488b742410     mov rsi, qword [rsp + 0x10]
0x000155b9      4889ef         mov rdi, rbp
0x000155bc      e82f77ffff     call sym.duplicate_tree
0x000155c1      4d89f8         mov r8, r15
0x000155c4      4889c5         mov rbp, rax
0x000155c7      4889c1         mov rcx, rax
0x000155ca      4c89f2         mov rdx, r14
0x000155cd      4c89ee         mov rsi, r13
0x000155d0      4c89e7         mov rdi, r12
0x000155d3      c68424c80000.  mov byte [rsp + 0xc8], 0x10             ; [0x10:1]=3
0x000155db      e83076ffff     call sym.create_token_tree.isra.16
0x000155e0      4885ed         test rbp, rbp
0x000155e3      0f84a7010000   je 0x15790
0x000155e9      4885c0         test rax, rax
0x000155ec      0f849e010000   je 0x15790
0x000155f2      31c9           xor ecx, ecx
0x000155f4      4d89f8         mov r8, r15
0x000155f7      4889c2         mov rdx, rax
0x000155fa      4c89ee         mov rsi, r13
0x000155fd      4c89e7         mov rdi, r12
0x00015600      c68424c80000.  mov byte [rsp + 0xc8], 0xa
0x00015608      e80376ffff     call sym.create_token_tree.isra.16
0x0001560d      4885c0         test rax, rax
0x00015610      4989c6         mov r14, rax
0x00015613      0f8477010000   je 0x15790
0x00015619      4883c301       add rbx, 1
0x0001561d      483b1c24       cmp rbx, qword [rsp]
0x00015621      7e91           jle 0x155b4
0x00015623      4c8b742448     mov r14, qword [rsp + 0x48]
0x00015628      4889c2         mov rdx, rax
0x0001562b      488b442430     mov rax, qword [rsp + 0x30]
0x00015630      4885c0         test rax, rax
0x00015633      0f84a7020000   je 0x158e0
0x00015639      4889d1         mov rcx, rdx
0x0001563c      4d89f8         mov r8, r15
0x0001563f      4889c2         mov rdx, rax
0x00015642      4c89ee         mov rsi, r13
0x00015645      4c89e7         mov rdi, r12
0x00015648      c68424c80000.  mov byte [rsp + 0xc8], 0x10             ; [0x10:1]=3
0x00015650      e8bb75ffff     call sym.create_token_tree.isra.16
0x00015655      488b7c2440     mov rdi, qword [rsp + 0x40]
0x0001565a      8b17           mov edx, dword [rdi]
0x0001565c      85d2           test edx, edx
0x0001565e      7409           je 0x15669
0x00015660      4885c0         test rax, rax
0x00015663      0f8452030000   je 0x159bb
0x00015669      4889442428     mov qword [rsp + 0x28], rax
0x0001566e      48f744242000.  test qword [rsp + 0x20], 0x1000000
0x00015677      488b442418     mov rax, qword [rsp + 0x18]
0x0001567c      0fb64008       movzx eax, byte [rax + 8]
0x00015680      0f8452feffff   je 0x154d8
0x00015686      3c0b           cmp al, 0xb
0x00015688      7408           je 0x15692
0x0001568a      3c17           cmp al, 0x17
0x0001568c      0f8546feffff   jne 0x154d8
0x00015692      488b442428     mov rax, qword [rsp + 0x28]
0x00015697      4885c0         test rax, rax
0x0001569a      7411           je 0x156ad
0x0001569c      488d352d60ff.  lea rsi, sym.free_tree                  ; 0xb6d0 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x000156a3      31d2           xor edx, edx
0x000156a5      4889c7         mov rdi, rax
0x000156a8      e88351ffff     call sym.postorder
0x000156ad      488b442440     mov rax, qword [rsp + 0x40]
0x000156b2      48c744242800.  mov qword [rsp + 0x28], 0
0x000156bb      c7000d000000   mov dword [rax], 0xd                    ; [0xd:4]=0x3000000
0x000156c1      e95afdffff     jmp 0x15420
0x000156c6      662e0f1f8400.  nop word cs:[rax + rax]
0x000156d0      4883fb01       cmp rbx, 1
0x000156d4      0f8432080000   je 0x15f0c
0x000156da      488b442410     mov rax, qword [rsp + 0x10]
0x000156df      4989ed         mov r13, rbp
0x000156e2      4c89742448     mov qword [rsp + 0x48], r14
0x000156e7      4c8da0800000.  lea r12, [rax + 0x80]
0x000156ee      488d7870       lea rdi, [rax + 0x70]
0x000156f2      4889e8         mov rax, rbp
0x000156f5      4989c6         mov r14, rax
0x000156f8      bd02000000     mov ebp, 2
0x000156fd      4c89e6         mov rsi, r12
0x00015700      48897c2430     mov qword [rsp + 0x30], rdi
0x00015705      4d89ec         mov r12, r13
0x00015708      4989dd         mov r13, rbx
0x0001570b      4889f3         mov rbx, rsi
0x0001570e      6690           nop
0x00015710      488b742410     mov rsi, qword [rsp + 0x10]
0x00015715      4c89e7         mov rdi, r12
0x00015718      e8d375ffff     call sym.duplicate_tree
0x0001571d      488b7c2430     mov rdi, qword [rsp + 0x30]
0x00015722      4989c4         mov r12, rax
0x00015725      4c89f2         mov rdx, r14
0x00015728      4d89f8         mov r8, r15
0x0001572b      4889c1         mov rcx, rax
0x0001572e      4889de         mov rsi, rbx
0x00015731      c68424c80000.  mov byte [rsp + 0xc8], 0x10             ; [0x10:1]=3
0x00015739      e8d274ffff     call sym.create_token_tree.isra.16
0x0001573e      4d85e4         test r12, r12
0x00015741      4989c6         mov r14, rax
0x00015744      744a           je 0x15790
0x00015746      4885c0         test rax, rax
0x00015749      7445           je 0x15790
0x0001574b      4883c501       add rbp, 1
0x0001574f      4c39ed         cmp rbp, r13
0x00015752      7ebc           jle 0x15710
0x00015754      4c8b742448     mov r14, qword [rsp + 0x48]
0x00015759      4c89eb         mov rbx, r13
0x0001575c      4889442430     mov qword [rsp + 0x30], rax
0x00015761      4d89e5         mov r13, r12
0x00015764      48391c24       cmp qword [rsp], rbx
0x00015768      0f8466010000   je 0x158d4
0x0001576e      488b742410     mov rsi, qword [rsp + 0x10]
0x00015773      4c89ef         mov rdi, r13
0x00015776      e87575ffff     call sym.duplicate_tree
0x0001577b      4885c0         test rax, rax
0x0001577e      4889c5         mov rbp, rax
0x00015781      0f85d0fdffff   jne 0x15557
0x00015787      660f1f840000.  nop word [rax + rax]
0x00015790      488b442440     mov rax, qword [rsp + 0x40]
0x00015795      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0001579b      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000157a0      488d35295fff.  lea rsi, sym.free_tree                  ; 0xb6d0 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x000157a7      31d2           xor edx, edx
0x000157a9      e88250ffff     call sym.postorder
0x000157ae      48c744242800.  mov qword [rsp + 0x28], 0
0x000157b7      e964fcffff     jmp 0x15420
0x000157bc      0f1f4000       nop dword [rax]
0x000157c0      48c704240100.  mov qword [rsp], 1
0x000157c8      488b542420     mov rdx, qword [rsp + 0x20]
0x000157cd      488b7c2418     mov rdi, qword [rsp + 0x18]
0x000157d2      4c89f6         mov rsi, r14
0x000157d5      e876f3ffff     call sym.peek_token
0x000157da      4898           cdqe
0x000157dc      49014648       add qword [r14 + 0x48], rax
0x000157e0      48837c242800   cmp qword [rsp + 0x28], 0
0x000157e6      0f84d4000000   je 0x158c0
0x000157ec      488b0424       mov rax, qword [rsp]
0x000157f0      4809d8         or rax, rbx
0x000157f3      0f8547fdffff   jne 0x15540
0x000157f9      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000157fe      488d35cb5eff.  lea rsi, sym.free_tree                  ; 0xb6d0 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x00015805      31d2           xor edx, edx
0x00015807      e82450ffff     call sym.postorder
0x0001580c      488b442440     mov rax, qword [rsp + 0x40]
0x00015811      8b30           mov esi, dword [rax]
0x00015813      85f6           test esi, esi
0x00015815      7584           jne 0x1579b
0x00015817      48c744242800.  mov qword [rsp + 0x28], 0
0x00015820      e949feffff     jmp 0x1566e
0x00015825      0f1f00         nop dword [rax]
0x00015828      488b542420     mov rdx, qword [rsp + 0x20]
0x0001582d      4889ce         mov rsi, rcx
0x00015830      4c89f7         mov rdi, r14
0x00015833      0f290424       movaps xmmword [rsp], xmm0
0x00015837      e814faffff     call sym.fetch_number
0x0001583c      4883f8ff       cmp rax, 0xffffffffffffffff
0x00015840      4889c3         mov rbx, rax
0x00015843      660f6f0424     movdqa xmm0, xmmword [rsp]
0x00015848      0f84a2000000   je 0x158f0
0x0001584e      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00015852      7419           je 0x1586d
0x00015854      488b442418     mov rax, qword [rsp + 0x18]
0x00015859      0fb64008       movzx eax, byte [rax + 8]
0x0001585d      3c18           cmp al, 0x18
0x0001585f      0f841b010000   je 0x15980
0x00015865      3c01           cmp al, 1
0x00015867      0f8426010000   je 0x15993
0x0001586d      48f744242000.  test qword [rsp + 0x20], 0x200000
0x00015876      0f84370f0000   je 0x167b3
0x0001587c      488b442418     mov rax, qword [rsp + 0x18]
0x00015881      49896e48       mov qword [r14 + 0x48], rbp
0x00015885      0f2900         movaps xmmword [rax], xmm0
0x00015888      c6400801       mov byte [rax + 8], 1
0x0001588c      488b442428     mov rax, qword [rsp + 0x28]
0x00015891      e9bffdffff     jmp 0x15655
0x00015896      662e0f1f8400.  nop word cs:[rax + rax]
0x000158a0      488b5528       mov rdx, qword [rbp + 0x28]
0x000158a4      488d35c54cff.  lea rsi, sym.mark_opt_subexp            ; 0xa570
0x000158ab      4889ef         mov rdi, rbp
0x000158ae      e87d4fffff     call sym.postorder
0x000158b3      e9a9fcffff     jmp 0x15561
0x000158b8      0f1f84000000.  nop dword [rax + rax]
0x000158c0      488b442440     mov rax, qword [rsp + 0x40]
0x000158c5      8b08           mov ecx, dword [rax]
0x000158c7      85c9           test ecx, ecx
0x000158c9      0f8448ffffff   je 0x15817
0x000158cf      e93cfbffff     jmp 0x15410
0x000158d4      488b542430     mov rdx, qword [rsp + 0x30]
0x000158d9      0f1f80000000.  nop dword [rax]
0x000158e0      4889542428     mov qword [rsp + 0x28], rdx
0x000158e5      e984fdffff     jmp 0x1566e
0x000158ea      660f1f440000   nop word [rax + rax]
0x000158f0      488b442418     mov rax, qword [rsp + 0x18]
0x000158f5      80780801       cmp byte [rax + 8], 1
0x000158f9      0f85b1000000   jne 0x159b0
0x000158ff      488b442418     mov rax, qword [rsp + 0x18]
0x00015904      80382c         cmp byte [rax], 0x2c
0x00015907      0f85a3000000   jne 0x159b0
0x0001590d      31db           xor ebx, ebx
0x0001590f      488b542420     mov rdx, qword [rsp + 0x20]
0x00015914      488b742418     mov rsi, qword [rsp + 0x18]
0x00015919      4c89f7         mov rdi, r14
0x0001591c      0f29442430     movaps xmmword [rsp + 0x30], xmm0
0x00015921      e82af9ffff     call sym.fetch_number
0x00015926      4883f8fe       cmp rax, 0xfffffffffffffffe
0x0001592a      48890424       mov qword [rsp], rax
0x0001592e      660f6f442430   movdqa xmm0, xmmword [rsp + 0x30]
0x00015934      0f8433ffffff   je 0x1586d
0x0001593a      488b0424       mov rax, qword [rsp]
0x0001593e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00015942      7405           je 0x15949
0x00015944      4839d8         cmp rax, rbx
0x00015947      7c67           jl 0x159b0
0x00015949      488b442418     mov rax, qword [rsp + 0x18]
0x0001594e      80780818       cmp byte [rax + 8], 0x18
0x00015952      755c           jne 0x159b0
0x00015954      48833c24ff     cmp qword [rsp], 0xffffffffffffffff
0x00015959      7529           jne 0x15984
0x0001595b      31c0           xor eax, eax
0x0001595d      4881fbff7f00.  cmp rbx, 0x7fff
0x00015964      0f9fc0         setg al
0x00015967      4885c0         test rax, rax
0x0001596a      0f8458feffff   je 0x157c8
0x00015970      488b442440     mov rax, qword [rsp + 0x40]
0x00015975      c7000f000000   mov dword [rax], 0xf                    ; [0xf:4]=0x3e000300
0x0001597b      eb3e           jmp 0x159bb
0x0001597d      0f1f00         nop dword [rax]
0x00015980      48891c24       mov qword [rsp], rbx
0x00015984      31c0           xor eax, eax
0x00015986      48813c24ff7f.  cmp qword [rsp], 0x7fff
0x0001598e      0f9fc0         setg al
0x00015991      ebd4           jmp 0x15967
0x00015993      488b442418     mov rax, qword [rsp + 0x18]
0x00015998      80382c         cmp byte [rax], 0x2c
0x0001599b      0f846effffff   je 0x1590f
0x000159a1      48f744242000.  test qword [rsp + 0x20], 0x200000
0x000159aa      0f85ccfeffff   jne 0x1587c
0x000159b0      488b442440     mov rax, qword [rsp + 0x40]
0x000159b5      c7000a000000   mov dword [rax], 0xa
0x000159bb      48837c242800   cmp qword [rsp + 0x28], 0
0x000159c1      0f85d4fdffff   jne 0x1579b
0x000159c7      e944faffff     jmp 0x15410
0x000159cc      0f1f4000       nop dword [rax]
0x000159d0      488b442418     mov rax, qword [rsp + 0x18]
0x000159d5      8b28           mov ebp, dword [rax]
0x000159d7      f7c50f030000   test ebp, 0x30f
0x000159dd      7462           je 0x15a41
0x000159df      488b442410     mov rax, qword [rsp + 0x10]
0x000159e4      0fb680b00000.  movzx eax, byte [rax + 0xb0]
0x000159eb      a810           test al, 0x10
0x000159ed      7552           jne 0x15a41
0x000159ef      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000159f4      83c810         or eax, 0x10
0x000159f7      a808           test al, 8
0x000159f9      8887b0000000   mov byte [rdi + 0xb0], al
0x000159ff      0f85fe0b0000   jne 0x16603
0x00015a05      48ba00000000.  movabs rdx, 0x3ff000000000000           ; 287948901175001088
0x00015a0f      a804           test al, 4
0x00015a11      488997b80000.  mov qword [rdi + 0xb8], rdx
0x00015a18      48bafeffff87.  movabs rdx, 0x7fffffe87fffffe
0x00015a22      488997c00000.  mov qword [rdi + 0xc0], rdx
0x00015a29      0f84590b0000   je 0x16588
0x00015a2f      660fefc0       pxor xmm0, xmm0
0x00015a33      488b442418     mov rax, qword [rsp + 0x18]
0x00015a38      0f1187c80000.  movups xmmword [rdi + 0xc8], xmm0
0x00015a3f      8b28           mov ebp, dword [rax]
0x00015a41      488b442410     mov rax, qword [rsp + 0x10]
0x00015a46      488d5870       lea rbx, [rax + 0x70]
0x00015a4a      4c8da0800000.  lea r12, [rax + 0x80]
0x00015a51      8d8500ffffff   lea eax, [rbp - 0x100]
0x00015a57      a9fffeffff     test eax, 0xfffffeff                    ; 4294967039
0x00015a5c      0f8568060000   jne 0x160ca
0x00015a62      81fd00010000   cmp ebp, 0x100
0x00015a68      4c8b7c2418     mov r15, qword [rsp + 0x18]
0x00015a6d      0f842f060000   je 0x160a2
0x00015a73      41c707050000.  mov dword [r15], 5
0x00015a7a      4d89f8         mov r8, r15
0x00015a7d      31c9           xor ecx, ecx
0x00015a7f      31d2           xor edx, edx
0x00015a81      4c89e6         mov rsi, r12
0x00015a84      4889df         mov rdi, rbx
0x00015a87      e88471ffff     call sym.create_token_tree.isra.16
0x00015a8c      41c7070a0000.  mov dword [r15], 0xa
0x00015a93      4889c5         mov rbp, rax
0x00015a96      4c8b442418     mov r8, qword [rsp + 0x18]
0x00015a9b      31c9           xor ecx, ecx
0x00015a9d      31d2           xor edx, edx
0x00015a9f      4c89e6         mov rsi, r12
0x00015aa2      4889df         mov rdi, rbx
0x00015aa5      e86671ffff     call sym.create_token_tree.isra.16
0x00015aaa      4c8d8424c000.  lea r8, [rsp + 0xc0]
0x00015ab2      4889ea         mov rdx, rbp
0x00015ab5      4889df         mov rdi, rbx
0x00015ab8      4889c1         mov rcx, rax
0x00015abb      4c89e6         mov rsi, r12
0x00015abe      4989c5         mov r13, rax
0x00015ac1      c68424c80000.  mov byte [rsp + 0xc8], 0xa
0x00015ac9      e84271ffff     call sym.create_token_tree.isra.16
0x00015ace      4885ed         test rbp, rbp
0x00015ad1      4889c7         mov rdi, rax
0x00015ad4      4889442428     mov qword [rsp + 0x28], rax
0x00015ad9      0f94c2         sete dl
0x00015adc      4d85ed         test r13, r13
0x00015adf      0f94c0         sete al
0x00015ae2      08c2           or dl, al
0x00015ae4      0f858e030000   jne 0x15e78
0x00015aea      4885ff         test rdi, rdi
0x00015aed      0f8485030000   je 0x15e78
0x00015af3      488b542420     mov rdx, qword [rsp + 0x20]
0x00015af8      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00015afd      4c89f6         mov rsi, r14
0x00015b00      e84bf0ffff     call sym.peek_token
0x00015b05      4898           cdqe
0x00015b07      49014648       add qword [r14 + 0x48], rax
0x00015b0b      e910f9ffff     jmp 0x15420
0x00015b10      be01000000     mov esi, 1
0x00015b15      bf20000000     mov edi, 0x20                           ; "@"
0x00015b1a      48c784249800.  mov qword [rsp + 0x98], 0
0x00015b26      e895c3feff     call sym.imp.calloc
0x00015b2b      be01000000     mov esi, 1
0x00015b30      4989c4         mov r12, rax
0x00015b33      bf50000000     mov edi, 0x50                           ; 'P'
0x00015b38      e883c3feff     call sym.imp.calloc
0x00015b3d      4d85e4         test r12, r12
0x00015b40      4989c5         mov r13, rax
0x00015b43      0f94c2         sete dl
0x00015b46      4885c0         test rax, rax
0x00015b49      0f94c0         sete al
0x00015b4c      08c2           or dl, al
0x00015b4e      0f85d5070000   jne 0x16329
0x00015b54      4c8b542418     mov r10, qword [rsp + 0x18]
0x00015b59      488b542420     mov rdx, qword [rsp + 0x20]
0x00015b5e      4c89f6         mov rsi, r14
0x00015b61      4c89d7         mov rdi, r10
0x00015b64      e8d748ffff     call sym.peek_token_bracket
0x00015b69      4863d8         movsxd rbx, eax
0x00015b6c      410fb64208     movzx eax, byte [r10 + 8]
0x00015b71      3c02           cmp al, 2
0x00015b73      0f84a0070000   je 0x16319
0x00015b79      3c19           cmp al, 0x19
0x00015b7b      c644245700     mov byte [rsp + 0x57], 0
0x00015b80      0f84c4040000   je 0x1604a
0x00015b86      3c15           cmp al, 0x15
0x00015b88      0f8406050000   je 0x16094
0x00015b8e      488d8424d000.  lea rax, [rsp + 0xd0]
0x00015b96      4c8b7c2418     mov r15, qword [rsp + 0x18]
0x00015b9b      488d2d527000.  lea rbp, [0x0001cbf4]
0x00015ba2      48c744244800.  mov qword [rsp + 0x48], 0
0x00015bab      41b901000000   mov r9d, 1
0x00015bb1      48c744243000.  mov qword [rsp + 0x30], 0
0x00015bba      4889442428     mov qword [rsp + 0x28], rax
0x00015bbf      488d8424a000.  lea rax, [rsp + 0xa0]
0x00015bc7      48890424       mov qword [rsp], rax
0x00015bcb      488d84249800.  lea rax, [rsp + 0x98]
0x00015bd3      4889442458     mov qword [rsp + 0x58], rax
0x00015bd8      488d8424c000.  lea rax, [rsp + 0xc0]
0x00015be0      4889442460     mov qword [rsp + 0x60], rax
0x00015be5      488d8424f000.  lea rax, [rsp + 0xf0]
0x00015bed      4889442468     mov qword [rsp + 0x68], rax
0x00015bf2      488b442428     mov rax, qword [rsp + 0x28]
0x00015bf7      4c8b442420     mov r8, qword [rsp + 0x20]
0x00015bfc      4183e101       and r9d, 1
0x00015c00      488b3c24       mov rdi, qword [rsp]
0x00015c04      89d9           mov ecx, ebx
0x00015c06      4c89fa         mov rdx, r15
0x00015c09      4c89f6         mov rsi, r14
0x00015c0c      c78424a00000.  mov dword [rsp + 0xa0], 3
0x00015c17      48898424a800.  mov qword [rsp + 0xa8], rax
0x00015c1f      e8ccecffff     call sym.parse_bracket_element.constprop.37
0x00015c24      85c0           test eax, eax
0x00015c26      0f85df040000   jne 0x1610b
0x00015c2c      488b542420     mov rdx, qword [rsp + 0x20]
0x00015c31      4c89f6         mov rsi, r14
0x00015c34      4c89ff         mov rdi, r15
0x00015c37      e80448ffff     call sym.peek_token_bracket
0x00015c3c      4863d8         movsxd rbx, eax
0x00015c3f      8b8424a00000.  mov eax, dword [rsp + 0xa0]
0x00015c46      8d50fe         lea edx, [rax - 2]
0x00015c49      83e2fd         and edx, 0xfffffffd                     ; 4294967293
0x00015c4c      7417           je 0x15c65
0x00015c4e      410fb65708     movzx edx, byte [r15 + 8]
0x00015c53      80fa02         cmp dl, 2
0x00015c56      0f8495040000   je 0x160f1
0x00015c5c      80fa16         cmp dl, 0x16
0x00015c5f      0f84b2040000   je 0x16117
0x00015c65      83f804         cmp eax, 4
0x00015c68      0f879c090000   ja 0x1660a
0x00015c6e      4863448500     movsxd rax, dword [rbp + rax*4]
0x00015c73      4801e8         add rax, rbp
0x00015c76      ffe0           jmp rax
0x00015c78      488b5c2440     mov rbx, qword [rsp + 0x40]
0x00015c7d      80f923         cmp cl, 0x23
0x00015c80      488b7778       mov rsi, qword [rdi + 0x78]
0x00015c84      410f94c0       sete r8b
0x00015c88      488d0dec6500.  lea rcx, [0x0001c27b]
0x00015c8f      488d15c96a00.  lea rdx, str.space                      ; 0x1c75f ; "space"
0x00015c96      450fb6c0       movzx r8d, r8b
0x00015c9a      4989d9         mov r9, rbx
0x00015c9d      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00015ca2      e8b9a2ffff     call sym.build_charclass_op
0x00015ca7      8b3b           mov edi, dword [rbx]
0x00015ca9      4889442428     mov qword [rsp + 0x28], rax
0x00015cae      85ff           test edi, edi
0x00015cb0      0f84f6f7ffff   je 0x154ac
0x00015cb6      4885c0         test rax, rax
0x00015cb9      0f85edf7ffff   jne 0x154ac
0x00015cbf      e94cf7ffff     jmp 0x15410
0x00015cc4      0f1f4000       nop dword [rax]
0x00015cc8      488b5c2440     mov rbx, qword [rsp + 0x40]
0x00015ccd      80f921         cmp cl, 0x21
0x00015cd0      488b7778       mov rsi, qword [rdi + 0x78]
0x00015cd4      410f94c0       sete r8b
0x00015cd8      488d0d035b00.  lea rcx, [0x0001b7e2]                   ; "_"
0x00015cdf      488d156d6a00.  lea rdx, str.alnum                      ; 0x1c753 ; "alnum"
0x00015ce6      450fb6c0       movzx r8d, r8b
0x00015cea      4989d9         mov r9, rbx
0x00015ced      ebae           jmp 0x15c9d
0x00015cef      488b442418     mov rax, qword [rsp + 0x18]
0x00015cf4      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00015cf9      488b08         mov rcx, qword [rax]
0x00015cfc      b801000000     mov eax, 1
0x00015d01      d3e0           shl eax, cl
0x00015d03      4898           cdqe
0x00015d05      488587a80000.  test qword [rdi + 0xa8], rax
0x00015d0c      0f842c060000   je 0x1633e
0x00015d12      488b5c2410     mov rbx, qword [rsp + 0x10]
0x00015d17      4c8b442418     mov r8, qword [rsp + 0x18]
0x00015d1c      31c9           xor ecx, ecx
0x00015d1e      31d2           xor edx, edx
0x00015d20      480983a00000.  or qword [rbx + 0xa0], rax
0x00015d27      488db3800000.  lea rsi, [rbx + 0x80]
0x00015d2e      488d7b70       lea rdi, [rbx + 0x70]
0x00015d32      e8d96effff     call sym.create_token_tree.isra.16
0x00015d37      4885c0         test rax, rax
0x00015d3a      4889442428     mov qword [rsp + 0x28], rax
0x00015d3f      0f8433010000   je 0x15e78
0x00015d45      488383980000.  add qword [rbx + 0x98], 1
0x00015d4d      808bb0000000.  or byte [rbx + 0xb0], 2
0x00015d54      e953f7ffff     jmp 0x154ac
0x00015d59      488b5c2410     mov rbx, qword [rsp + 0x10]
0x00015d5e      4c8b442418     mov r8, qword [rsp + 0x18]
0x00015d63      31c9           xor ecx, ecx
0x00015d65      31d2           xor edx, edx
0x00015d67      488db3800000.  lea rsi, [rbx + 0x80]
0x00015d6e      488d7b70       lea rdi, [rbx + 0x70]
0x00015d72      e8996effff     call sym.create_token_tree.isra.16
0x00015d77      4885c0         test rax, rax
0x00015d7a      4889442428     mov qword [rsp + 0x28], rax
0x00015d7f      0f84f3000000   je 0x15e78
0x00015d85      83bbb4000000.  cmp dword [rbx + 0xb4], 1
0x00015d8c      0f8e1af7ffff   jle 0x154ac
0x00015d92      808bb0000000.  or byte [rbx + 0xb0], 2
0x00015d99      e90ef7ffff     jmp 0x154ac
0x00015d9e      488b442410     mov rax, qword [rsp + 0x10]
0x00015da3      4c8b442418     mov r8, qword [rsp + 0x18]
0x00015da8      31c9           xor ecx, ecx
0x00015daa      31d2           xor edx, edx
0x00015dac      488d5870       lea rbx, [rax + 0x70]
0x00015db0      488da8800000.  lea rbp, [rax + 0x80]
0x00015db7      4889df         mov rdi, rbx
0x00015dba      4889ee         mov rsi, rbp
0x00015dbd      e84e6effff     call sym.create_token_tree.isra.16
0x00015dc2      4885c0         test rax, rax
0x00015dc5      4889442428     mov qword [rsp + 0x28], rax
0x00015dca      0f84a8000000   je 0x15e78
0x00015dd0      488b442410     mov rax, qword [rsp + 0x10]
0x00015dd5      4c8da424c000.  lea r12, [rsp + 0xc0]
0x00015ddd      4c8b7c2428     mov r15, qword [rsp + 0x28]
0x00015de2      83b8b4000000.  cmp dword [rax + 0xb4], 1
0x00015de9      0f8ebdf6ffff   jle 0x154ac
0x00015def      498b4648       mov rax, qword [r14 + 0x48]
0x00015df3      49394668       cmp qword [r14 + 0x68], rax
0x00015df7      0f8e04030000   jle 0x16101
0x00015dfd      493b4630       cmp rax, qword [r14 + 0x30]
0x00015e01      0f84fa020000   je 0x16101
0x00015e07      498b5610       mov rdx, qword [r14 + 0x10]
0x00015e0b      833c82ff       cmp dword [rdx + rax*4], 0xffffffff
0x00015e0f      0f85ec020000   jne 0x16101
0x00015e15      4c8b6c2418     mov r13, qword [rsp + 0x18]
0x00015e1a      488b542420     mov rdx, qword [rsp + 0x20]
0x00015e1f      4c89f6         mov rsi, r14
0x00015e22      4c89ef         mov rdi, r13
0x00015e25      e826edffff     call sym.peek_token
0x00015e2a      4898           cdqe
0x00015e2c      49014648       add qword [r14 + 0x48], rax
0x00015e30      4d89e8         mov r8, r13
0x00015e33      31c9           xor ecx, ecx
0x00015e35      31d2           xor edx, edx
0x00015e37      4889ee         mov rsi, rbp
0x00015e3a      4889df         mov rdi, rbx
0x00015e3d      e8ce6dffff     call sym.create_token_tree.isra.16
0x00015e42      4c89fa         mov rdx, r15
0x00015e45      4989c5         mov r13, rax
0x00015e48      4d89e0         mov r8, r12
0x00015e4b      4889c1         mov rcx, rax
0x00015e4e      4889ee         mov rsi, rbp
0x00015e51      4889df         mov rdi, rbx
0x00015e54      c68424c80000.  mov byte [rsp + 0xc8], 0x10             ; [0x10:1]=3
0x00015e5c      e8af6dffff     call sym.create_token_tree.isra.16
0x00015e61      4d85ed         test r13, r13
0x00015e64      4989c7         mov r15, rax
0x00015e67      0f94c2         sete dl
0x00015e6a      4885c0         test rax, rax
0x00015e6d      0f94c0         sete al
0x00015e70      08c2           or dl, al
0x00015e72      0f8477ffffff   je 0x15def
0x00015e78      488b442440     mov rax, qword [rsp + 0x40]
0x00015e7d      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x00015e83      e988f5ffff     jmp 0x15410
0x00015e88      48f744242000.  test qword [rsp + 0x20], 0x20000
0x00015e91      0f85e4f5ffff   jne 0x1547b
0x00015e97      488b442440     mov rax, qword [rsp + 0x40]
0x00015e9c      48c744242800.  mov qword [rsp + 0x28], 0
0x00015ea5      c70010000000   mov dword [rax], 0x10                   ; [0x10:4]=0x3e0003
0x00015eab      e970f5ffff     jmp 0x15420
0x00015eb0      4883fb08       cmp rbx, 8
0x00015eb4      7665           jbe 0x15f1b
0x00015eb6      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00015ebb      4c8d8424c000.  lea r8, [rsp + 0xc0]
0x00015ec3      31c9           xor ecx, ecx
0x00015ec5      4889c2         mov rdx, rax
0x00015ec8      c68424c80000.  mov byte [rsp + 0xc8], 0x11             ; [0x11:1]=0
0x00015ed0      488db7800000.  lea rsi, [rdi + 0x80]
0x00015ed7      4883c770       add rdi, 0x70
0x00015edb      e8306dffff     call sym.create_token_tree.isra.16
0x00015ee0      4885c0         test rax, rax
0x00015ee3      4889442428     mov qword [rsp + 0x28], rax
0x00015ee8      748e           je 0x15e78
0x00015eea      48895828       mov qword [rax + 0x28], rbx
0x00015eee      e9b9f5ffff     jmp 0x154ac
0x00015ef3      488b442440     mov rax, qword [rsp + 0x40]
0x00015ef8      48c744242800.  mov qword [rsp + 0x28], 0
0x00015f01      c70005000000   mov dword [rax], 5
0x00015f07      e914f5ffff     jmp 0x15420
0x00015f0c      4c8b6c2428     mov r13, qword [rsp + 0x28]
0x00015f11      4c896c2430     mov qword [rsp + 0x30], r13
0x00015f16      e949f8ffff     jmp 0x15764
0x00015f1b      488b742410     mov rsi, qword [rsp + 0x10]
0x00015f20      ba01000000     mov edx, 1
0x00015f25      89d9           mov ecx, ebx
0x00015f27      d3e2           shl edx, cl
0x00015f29      4863d2         movsxd rdx, edx
0x00015f2c      480996a80000.  or qword [rsi + 0xa8], rdx
0x00015f33      eb81           jmp 0x15eb6
0x00015f35      488bb424a800.  mov rsi, qword [rsp + 0xa8]
0x00015f3d      4c89e7         mov rdi, r12
0x00015f40      e8bb97ffff     call sym.build_equiv_class.isra.27
0x00015f45      488b542440     mov rdx, qword [rsp + 0x40]
0x00015f4a      85c0           test eax, eax
0x00015f4c      8902           mov dword [rdx], eax
0x00015f4e      7538           jne 0x15f88
0x00015f50      410fb64708     movzx eax, byte [r15 + 8]
0x00015f55      3c02           cmp al, 2
0x00015f57      0f8494010000   je 0x160f1
0x00015f5d      3c15           cmp al, 0x15
0x00015f5f      0f840d040000   je 0x16372
0x00015f65      4531c9         xor r9d, r9d
0x00015f68      e985fcffff     jmp 0x15bf2
0x00015f6d      488bb424a800.  mov rsi, qword [rsp + 0xa8]
0x00015f75      4c89e7         mov rdi, r12
0x00015f78      e88397ffff     call sym.build_equiv_class.isra.27
0x00015f7d      488b542440     mov rdx, qword [rsp + 0x40]
0x00015f82      85c0           test eax, eax
0x00015f84      8902           mov dword [rdx], eax
0x00015f86      74c8           je 0x15f50
0x00015f88      4c89e7         mov rdi, r12
0x00015f8b      e8d0bcfeff     call sym.imp.free
0x00015f90      4c89ef         mov rdi, r13
0x00015f93      e8d856ffff     call sym.free_charset
0x00015f98      488b442440     mov rax, qword [rsp + 0x40]
0x00015f9d      448b00         mov r8d, dword [rax]
0x00015fa0      4585c0         test r8d, r8d
0x00015fa3      0f8567f4ffff   jne 0x15410
0x00015fa9      48c744242800.  mov qword [rsp + 0x28], 0
0x00015fb2      e9f5f4ffff     jmp 0x154ac
0x00015fb7      498b5528       mov rdx, qword [r13 + 0x28]
0x00015fbb      483b542430     cmp rdx, qword [rsp + 0x30]
0x00015fc0      498b4500       mov rax, qword [r13]
0x00015fc4      0f84f4040000   je 0x164be
0x00015fca      488d4a01       lea rcx, [rdx + 1]
0x00015fce      49894d28       mov qword [r13 + 0x28], rcx
0x00015fd2      8b8c24a80000.  mov ecx, dword [rsp + 0xa8]
0x00015fd9      890c90         mov dword [rax + rdx*4], ecx
0x00015fdc      e96fffffff     jmp 0x15f50
0x00015fe1      0fb69424a800.  movzx edx, byte [rsp + 0xa8]
0x00015fe9      be01000000     mov esi, 1
0x00015fee      4889d0         mov rax, rdx
0x00015ff1      83e23f         and edx, 0x3f
0x00015ff4      48c1e803       shr rax, 3
0x00015ff8      89d1           mov ecx, edx
0x00015ffa      83e018         and eax, 0x18
0x00015ffd      48d3e6         shl rsi, cl
0x00016000      49093404       or qword [r12 + rax], rsi
0x00016004      e947ffffff     jmp 0x15f50
0x00016009      4883ec08       sub rsp, 8
0x0001600d      498b7e78       mov rdi, qword [r14 + 0x78]
0x00016011      498d5518       lea rdx, [r13 + 0x18]
0x00016015      ff742428       push qword [rsp + 0x28]
0x00016019      4c8b8c24b800.  mov r9, qword [rsp + 0xb8]
0x00016021      498d4d48       lea rcx, [r13 + 0x48]
0x00016025      4c8b442468     mov r8, qword [rsp + 0x68]
0x0001602a      4c89e6         mov rsi, r12
0x0001602d      e81e97ffff     call sym.build_charclass.isra.29
0x00016032      488b542450     mov rdx, qword [rsp + 0x50]
0x00016037      85c0           test eax, eax
0x00016039      8902           mov dword [rdx], eax
0x0001603b      4159           pop r9
0x0001603d      415a           pop r10
0x0001603f      0f840bffffff   je 0x15f50
0x00016045      e93effffff     jmp 0x15f88
0x0001604a      41804d2001     or byte [r13 + 0x20], 1
0x0001604f      48f744242000.  test qword [rsp + 0x20], 0x100
0x00016058      7408           je 0x16062
0x0001605a      49810c240004.  or qword [r12], 0x400                   ; [0x400:8]=0x1200000254
0x00016062      49015e48       add qword [r14 + 0x48], rbx
0x00016066      4c8b5c2418     mov r11, qword [rsp + 0x18]
0x0001606b      4c89f6         mov rsi, r14
0x0001606e      488b542420     mov rdx, qword [rsp + 0x20]
0x00016073      4c89df         mov rdi, r11
0x00016076      e8c543ffff     call sym.peek_token_bracket
0x0001607b      89c3           mov ebx, eax
0x0001607d      410fb64308     movzx eax, byte [r11 + 8]
0x00016082      3c02           cmp al, 2
0x00016084      0f848f020000   je 0x16319
0x0001608a      c644245701     mov byte [rsp + 0x57], 1
0x0001608f      e9f2faffff     jmp 0x15b86
0x00016094      488b442418     mov rax, qword [rsp + 0x18]
0x00016099      c6400801       mov byte [rax + 8], 1
0x0001609d      e9ecfaffff     jmp 0x15b8e
0x000160a2      41c707060000.  mov dword [r15], 6
0x000160a9      4d89f8         mov r8, r15
0x000160ac      31c9           xor ecx, ecx
0x000160ae      31d2           xor edx, edx
0x000160b0      4c89e6         mov rsi, r12
0x000160b3      4889df         mov rdi, rbx
0x000160b6      e8556bffff     call sym.create_token_tree.isra.16
0x000160bb      41c707090000.  mov dword [r15], 9
0x000160c2      4889c5         mov rbp, rax
0x000160c5      e9ccf9ffff     jmp 0x15a96
0x000160ca      4c8b442418     mov r8, qword [rsp + 0x18]
0x000160cf      31c9           xor ecx, ecx
0x000160d1      31d2           xor edx, edx
0x000160d3      4c89e6         mov rsi, r12
0x000160d6      4889df         mov rdi, rbx
0x000160d9      e8326bffff     call sym.create_token_tree.isra.16
0x000160de      4885c0         test rax, rax
0x000160e1      4889442428     mov qword [rsp + 0x28], rax
0x000160e6      0f8507faffff   jne 0x15af3
0x000160ec      e987fdffff     jmp 0x15e78
0x000160f1      488b442440     mov rax, qword [rsp + 0x40]
0x000160f6      c70007000000   mov dword [rax], 7
0x000160fc      e987feffff     jmp 0x15f88
0x00016101      4c897c2428     mov qword [rsp + 0x28], r15
0x00016106      e9a1f3ffff     jmp 0x154ac
0x0001610b      488b542440     mov rdx, qword [rsp + 0x40]
0x00016110      8902           mov dword [rdx], eax
0x00016112      e971feffff     jmp 0x15f88
0x00016117      4863c3         movsxd rax, ebx
0x0001611a      4c8b5c2420     mov r11, qword [rsp + 0x20]
0x0001611f      49014648       add qword [r14 + 0x48], rax
0x00016123      4c8b542460     mov r10, qword [rsp + 0x60]
0x00016128      4c89da         mov rdx, r11
0x0001612b      4c89d7         mov rdi, r10
0x0001612e      e80d43ffff     call sym.peek_token_bracket
0x00016133      0fb69424c800.  movzx edx, byte [rsp + 0xc8]
0x0001613b      80fa02         cmp dl, 2
0x0001613e      74b1           je 0x160f1
0x00016140      80fa15         cmp dl, 0x15
0x00016143      0f840e020000   je 0x16357
0x00016149      488b542468     mov rdx, qword [rsp + 0x68]
0x0001614e      488dbc24b000.  lea rdi, [rsp + 0xb0]
0x00016156      41b901000000   mov r9d, 1
0x0001615c      4d89d8         mov r8, r11
0x0001615f      89c1           mov ecx, eax
0x00016161      c78424b00000.  mov dword [rsp + 0xb0], 3
0x0001616c      48899424b800.  mov qword [rsp + 0xb8], rdx
0x00016174      4c89d2         mov rdx, r10
0x00016177      e874e7ffff     call sym.parse_bracket_element.constprop.37
0x0001617c      85c0           test eax, eax
0x0001617e      758b           jne 0x1610b
0x00016180      488b542420     mov rdx, qword [rsp + 0x20]
0x00016185      4c89f6         mov rsi, r14
0x00016188      4c89ff         mov rdi, r15
0x0001618b      e8b042ffff     call sym.peek_token_bracket
0x00016190      4863d8         movsxd rbx, eax
0x00016193      488b442410     mov rax, qword [rsp + 0x10]
0x00016198      8bb424a00000.  mov esi, dword [rsp + 0xa0]
0x0001619f      41b900000000   mov r9d, 0
0x000161a5      83b8b4000000.  cmp dword [rax + 0xb4], 1
0x000161ac      8d46fe         lea eax, [rsi - 2]
0x000161af      4d0f4fcd       cmovg r9, r13
0x000161b3      83e0fd         and eax, 0xfffffffd                     ; 4294967293
0x000161b6      0f846d040000   je 0x16629
0x000161bc      448b9424b000.  mov r10d, dword [rsp + 0xb0]
0x000161c4      418d42fe       lea eax, [r10 - 2]
0x000161c8      83e0fd         and eax, 0xfffffffd                     ; 4294967293
0x000161cb      0f8458040000   je 0x16629
0x000161d1      83fe03         cmp esi, 3
0x000161d4      410f94c3       sete r11b
0x000161d8      0f848f040000   je 0x1666d
0x000161de      4183fa03       cmp r10d, 3
0x000161e2      0f8451040000   je 0x16639
0x000161e8      85f6           test esi, esi
0x000161ea      0f8569030000   jne 0x16559
0x000161f0      0fb69424a800.  movzx edx, byte [rsp + 0xa8]
0x000161f8      4585d2         test r10d, r10d
0x000161fb      0f853c030000   jne 0x1653d
0x00016201      440fb68424b8.  movzx r8d, byte [rsp + 0xb8]
0x0001620a      85f6           test esi, esi
0x0001620c      0f84e4020000   je 0x164f6
0x00016212      4584db         test r11b, r11b
0x00016215      0f85db020000   jne 0x164f6
0x0001621b      4d85c9         test r9, r9
0x0001621e      8b9424a80000.  mov edx, dword [rsp + 0xa8]
0x00016225      741d           je 0x16244
0x00016227      4489c7         mov edi, r8d
0x0001622a      89542478       mov dword [rsp + 0x78], edx
0x0001622e      4c894c2470     mov qword [rsp + 0x70], r9
0x00016233      e8a8bdfeff     call sym.imp.btowc
0x00016238      4c8b4c2470     mov r9, qword [rsp + 0x70]
0x0001623d      8b542478       mov edx, dword [rsp + 0x78]
0x00016241      4189c0         mov r8d, eax
0x00016244      83faff         cmp edx, 0xffffffff
0x00016247      0f8410040000   je 0x1665d
0x0001624d      4183f8ff       cmp r8d, 0xffffffff
0x00016251      0f8406040000   je 0x1665d
0x00016257      48f744242000.  test qword [rsp + 0x20], 0x10000
0x00016260      7409           je 0x1626b
0x00016262      4139d0         cmp r8d, edx
0x00016265      0f82be030000   jb 0x16629
0x0001626b      4d85c9         test r9, r9
0x0001626e      7426           je 0x16296
0x00016270      498b4140       mov rax, qword [r9 + 0x40]
0x00016274      483b442448     cmp rax, qword [rsp + 0x48]
0x00016279      498b4908       mov rcx, qword [r9 + 8]
0x0001627d      0f8410040000   je 0x16693
0x00016283      891481         mov dword [rcx + rax*4], edx
0x00016286      498b4910       mov rcx, qword [r9 + 0x10]
0x0001628a      488d7001       lea rsi, [rax + 1]
0x0001628e      49897140       mov qword [r9 + 0x40], rsi
0x00016292      44890481       mov dword [rcx + rax*4], r8d
0x00016296      31c0           xor eax, eax
0x00016298      bf01000000     mov edi, 1
0x0001629d      39c2           cmp edx, eax
0x0001629f      89c1           mov ecx, eax
0x000162a1      7716           ja 0x162b9
0x000162a3      4139c0         cmp r8d, eax
0x000162a6      7211           jb 0x162b9
0x000162a8      4889c6         mov rsi, rax
0x000162ab      4989fb         mov r11, rdi
0x000162ae      48c1fe06       sar rsi, 6
0x000162b2      49d3e3         shl r11, cl
0x000162b5      4d091cf4       or qword [r12 + rsi*8], r11
0x000162b9      4883c001       add rax, 1
0x000162bd      483d00010000   cmp rax, 0x100
0x000162c3      75d8           jne 0x1629d
0x000162c5      488b442440     mov rax, qword [rsp + 0x40]
0x000162ca      c70000000000   mov dword [rax], 0
0x000162d0      e97bfcffff     jmp 0x15f50
0x000162d5      488b5c2418     mov rbx, qword [rsp + 0x18]
0x000162da      4889c2         mov rdx, rax
0x000162dd      4c89f6         mov rsi, r14
0x000162e0      4c890424       mov qword [rsp], r8
0x000162e4      4989c7         mov r15, rax
0x000162e7      4889df         mov rdi, rbx
0x000162ea      e861e8ffff     call sym.peek_token
0x000162ef      4898           cdqe
0x000162f1      49014648       add qword [r14 + 0x48], rax
0x000162f5      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x000162fa      4c8b0424       mov r8, qword [rsp]
0x000162fe      4c89f9         mov rcx, r15
0x00016301      4889da         mov rdx, rbx
0x00016304      4889ee         mov rsi, rbp
0x00016307      4c89f7         mov rdi, r14
0x0001630a      e801f0ffff     call sym.parse_expression
0x0001630f      4889442428     mov qword [rsp + 0x28], rax
0x00016314      e907f1ffff     jmp 0x15420
0x00016319      488b442440     mov rax, qword [rsp + 0x40]
0x0001631e      c70002000000   mov dword [rax], 2
0x00016324      e95ffcffff     jmp 0x15f88
0x00016329      4c89e7         mov rdi, r12
0x0001632c      e82fb9feff     call sym.imp.free
0x00016331      4c89ef         mov rdi, r13
0x00016334      e827b9feff     call sym.imp.free
0x00016339      e93afbffff     jmp 0x15e78
0x0001633e      488b442440     mov rax, qword [rsp + 0x40]
0x00016343      48c744242800.  mov qword [rsp + 0x28], 0
0x0001634c      c70006000000   mov dword [rax], 6
0x00016352      e9c9f0ffff     jmp 0x15420
0x00016357      89d8           mov eax, ebx
0x00016359      f7d8           neg eax
0x0001635b      4898           cdqe
0x0001635d      49014648       add qword [r14 + 0x48], rax
0x00016361      41c6470801     mov byte [r15 + 8], 1
0x00016366      8b8424a00000.  mov eax, dword [rsp + 0xa0]
0x0001636d      e9f3f8ffff     jmp 0x15c65
0x00016372      49015e48       add qword [r14 + 0x48], rbx
0x00016376      807c245700     cmp byte [rsp + 0x57], 0
0x0001637b      7414           je 0x16391
0x0001637d      498d542420     lea rdx, [r12 + 0x20]
0x00016382      4c89e0         mov rax, r12
0x00016385      48f710         not qword [rax]
0x00016388      4883c008       add rax, 8
0x0001638c      4839c2         cmp rdx, rax
0x0001638f      75f4           jne 0x16385
0x00016391      488b442410     mov rax, qword [rsp + 0x10]
0x00016396      8b90b4000000   mov edx, dword [rax + 0xb4]
0x0001639c      83fa01         cmp edx, 1
0x0001639f      7e18           jle 0x163b9
0x000163a1      488b4878       mov rcx, qword [rax + 0x78]
0x000163a5      31c0           xor eax, eax
0x000163a7      488b3401       mov rsi, qword [rcx + rax]
0x000163ab      49213404       and qword [r12 + rax], rsi
0x000163af      4883c008       add rax, 8
0x000163b3      4883f820       cmp rax, 0x20                           ; "@"
0x000163b7      75ee           jne 0x163a7
0x000163b9      49837d2800     cmp qword [r13 + 0x28], 0
0x000163be      0f8584000000   jne 0x16448
0x000163c4      49837d3000     cmp qword [r13 + 0x30], 0
0x000163c9      757d           jne 0x16448
0x000163cb      49837d3800     cmp qword [r13 + 0x38], 0
0x000163d0      7576           jne 0x16448
0x000163d2      49837d4000     cmp qword [r13 + 0x40], 0
0x000163d7      756f           jne 0x16448
0x000163d9      83ea01         sub edx, 1
0x000163dc      7e0e           jle 0x163ec
0x000163de      49837d4800     cmp qword [r13 + 0x48], 0
0x000163e3      7563           jne 0x16448
0x000163e5      41f6452001     test byte [r13 + 0x20], 1
0x000163ea      755c           jne 0x16448
0x000163ec      4c89ef         mov rdi, r13
0x000163ef      e87c52ffff     call sym.free_charset
0x000163f4      488b442410     mov rax, qword [rsp + 0x10]
0x000163f9      4c8d8424b000.  lea r8, [rsp + 0xb0]
0x00016401      31c9           xor ecx, ecx
0x00016403      31d2           xor edx, edx
0x00016405      c68424b80000.  mov byte [rsp + 0xb8], 3
0x0001640d      4c89a424b000.  mov qword [rsp + 0xb0], r12
0x00016415      488db0800000.  lea rsi, [rax + 0x80]
0x0001641c      488d7870       lea rdi, [rax + 0x70]
0x00016420      e8eb67ffff     call sym.create_token_tree.isra.16
0x00016425      4885c0         test rax, rax
0x00016428      4889442428     mov qword [rsp + 0x28], rax
0x0001642d      0f8579f0ffff   jne 0x154ac
0x00016433      488b442440     mov rax, qword [rsp + 0x40]
0x00016438      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0001643e      e945fbffff     jmp 0x15f88
0x00016443      0f1f440000     nop dword [rax + rax]
0x00016448      488b442410     mov rax, qword [rsp + 0x10]
0x0001644d      4c8dbc24b000.  lea r15, [rsp + 0xb0]
0x00016455      31d2           xor edx, edx
0x00016457      31c9           xor ecx, ecx
0x00016459      4d89f8         mov r8, r15
0x0001645c      8088b0000000.  or byte [rax + 0xb0], 2
0x00016463      488d5870       lea rbx, [rax + 0x70]
0x00016467      488da8800000.  lea rbp, [rax + 0x80]
0x0001646e      c68424b80000.  mov byte [rsp + 0xb8], 6
0x00016476      4c89ac24b000.  mov qword [rsp + 0xb0], r13
0x0001647e      4889df         mov rdi, rbx
0x00016481      4889ee         mov rsi, rbp
0x00016484      e88767ffff     call sym.create_token_tree.isra.16
0x00016489      4889c7         mov rdi, rax
0x0001648c      4889442428     mov qword [rsp + 0x28], rax
0x00016491      498d542420     lea rdx, [r12 + 0x20]
0x00016496      4885ff         test rdi, rdi
0x00016499      4c89e0         mov rax, r12
0x0001649c      7495           je 0x16433
0x0001649e      48833800       cmp qword [rax], 0
0x000164a2      0f85a5020000   jne 0x1674d
0x000164a8      4883c008       add rax, 8
0x000164ac      4839c2         cmp rdx, rax
0x000164af      75ed           jne 0x1649e
0x000164b1      4c89e7         mov rdi, r12
0x000164b4      e8a7b7feff     call sym.imp.free
0x000164b9      e9eeefffff     jmp 0x154ac
0x000164be      488b542430     mov rdx, qword [rsp + 0x30]
0x000164c3      488d7c1201     lea rdi, [rdx + rdx + 1]
0x000164c8      488d34bd0000.  lea rsi, [rdi*4]
0x000164d0      48897c2430     mov qword [rsp + 0x30], rdi
0x000164d5      4889c7         mov rdi, rax
0x000164d8      e8b3bafeff     call sym.imp.realloc
0x000164dd      4885c0         test rax, rax
0x000164e0      0f844dffffff   je 0x16433
0x000164e6      49894500       mov qword [r13], rax
0x000164ea      498b5528       mov rdx, qword [r13 + 0x28]
0x000164ee      e9d7faffff     jmp 0x15fca
0x000164f3      4531c0         xor r8d, r8d
0x000164f6      4d85c9         test r9, r9
0x000164f9      7479           je 0x16574
0x000164fb      89d7           mov edi, edx
0x000164fd      4489442478     mov dword [rsp + 0x78], r8d
0x00016502      4c894c2470     mov qword [rsp + 0x70], r9
0x00016507      e8d4bafeff     call sym.imp.btowc
0x0001650c      89c2           mov edx, eax
0x0001650e      8b8424b00000.  mov eax, dword [rsp + 0xb0]
0x00016515      4c8b4c2470     mov r9, qword [rsp + 0x70]
0x0001651a      448b442478     mov r8d, dword [rsp + 0x78]
0x0001651f      83f803         cmp eax, 3
0x00016522      0f84fffcffff   je 0x16227
0x00016528      85c0           test eax, eax
0x0001652a      0f84f7fcffff   je 0x16227
0x00016530      448b8424b800.  mov r8d, dword [rsp + 0xb8]
0x00016538      e907fdffff     jmp 0x16244
0x0001653d      4183fa03       cmp r10d, 3
0x00016541      0f848b020000   je 0x167d2
0x00016547      85f6           test esi, esi
0x00016549      74a8           je 0x164f3
0x0001654b      4584db         test r11b, r11b
0x0001654e      75a3           jne 0x164f3
0x00016550      8b9424a80000.  mov edx, dword [rsp + 0xa8]
0x00016557      ebd7           jmp 0x16530
0x00016559      31d2           xor edx, edx
0x0001655b      83fe03         cmp esi, 3
0x0001655e      0f8594fcffff   jne 0x161f8
0x00016564      488b8424a800.  mov rax, qword [rsp + 0xa8]
0x0001656c      0fb610         movzx edx, byte [rax]
0x0001656f      e984fcffff     jmp 0x161f8
0x00016574      4585d2         test r10d, r10d
0x00016577      0f84dafcffff   je 0x16257
0x0001657d      4183fa03       cmp r10d, 3
0x00016581      75ad           jne 0x16530
0x00016583      e9cffcffff     jmp 0x16257
0x00016588      bb80000000     mov ebx, 0x80
0x0001658d      41bc02000000   mov r12d, 2
0x00016593      e848bbfeff     call sym.imp.__ctype_b_loc
0x00016598      4863d3         movsxd rdx, ebx
0x0001659b      4d63cc         movsxd r9, r12d
0x0001659e      41b801000000   mov r8d, 1
0x000165a4      4801d2         add rdx, rdx
0x000165a7      480310         add rdx, qword [rax]
0x000165aa      488b442410     mov rax, qword [rsp + 0x10]
0x000165af      4a8d3cc8       lea rdi, [rax + r9*8]
0x000165b3      31c0           xor eax, eax
0x000165b5      eb1b           jmp 0x165d2
0x000165b7      660f1f840000.  nop word [rax + rax]
0x000165c0      8d3403         lea esi, [rbx + rax]
0x000165c3      83fe5f         cmp esi, 0x5f
0x000165c6      7412           je 0x165da
0x000165c8      4883c001       add rax, 1
0x000165cc      4883f840       cmp rax, 0x40                           ; segment.PHDR
0x000165d0      7417           je 0x165e9
0x000165d2      f6044208       test byte [rdx + rax*2], 8
0x000165d6      89c1           mov ecx, eax
0x000165d8      74e6           je 0x165c0
0x000165da      4c89c6         mov rsi, r8
0x000165dd      48d3e6         shl rsi, cl
0x000165e0      4809b7b80000.  or qword [rdi + 0xb8], rsi
0x000165e7      ebdf           jmp 0x165c8
0x000165e9      4983c101       add r9, 1
0x000165ed      83c340         add ebx, 0x40                           ; segment.PHDR
0x000165f0      4883ea80       sub rdx, 0xffffffffffffff80
0x000165f4      4883c708       add rdi, 8
0x000165f8      4183f903       cmp r9d, 3
0x000165fc      7eb5           jle 0x165b3
0x000165fe      e93ef4ffff     jmp 0x15a41
0x00016603      31db           xor ebx, ebx
0x00016605      4531e4         xor r12d, r12d
0x00016608      eb89           jmp 0x16593
0x0001660a      488d0dbf6600.  lea rcx, obj.__PRETTY_FUNCTION__.7327   ; 0x1ccd0 ; "parse_bracket_exp"
0x00016611      488d35d86000.  lea rsi, str..._coreutils_8.31_lib_regcomp.c ; 0x1c6f0 ; "../coreutils-8.31/lib/regcomp.c"
0x00016618      488d3da95600.  lea rdi, [0x0001bcc8]                   ; "0"
0x0001661f      baed0c0000     mov edx, 0xced
0x00016624      e807b8feff     call sym.imp.__assert_fail
0x00016629      488b442440     mov rax, qword [rsp + 0x40]
0x0001662e      c7000b000000   mov dword [rax], 0xb                    ; [0xb:4]=0
0x00016634      e94ff9ffff     jmp 0x15f88
0x00016639      488bbc24b800.  mov rdi, qword [rsp + 0xb8]
0x00016641      31c0           xor eax, eax
0x00016643      4883c9ff       or rcx, 0xffffffffffffffff
0x00016647      f2ae           repne scasb al, byte [rdi]
0x00016649      4889c8         mov rax, rcx
0x0001664c      48f7d0         not rax
0x0001664f      4883e801       sub rax, 1
0x00016653      4883f801       cmp rax, 1
0x00016657      0f868bfbffff   jbe 0x161e8
0x0001665d      488b442440     mov rax, qword [rsp + 0x40]
0x00016662      c70003000000   mov dword [rax], 3
0x00016668      e91bf9ffff     jmp 0x15f88
0x0001666d      488bbc24a800.  mov rdi, qword [rsp + 0xa8]
0x00016675      31c0           xor eax, eax
0x00016677      4883c9ff       or rcx, 0xffffffffffffffff
0x0001667b      f2ae           repne scasb al, byte [rdi]
0x0001667d      4889c8         mov rax, rcx
0x00016680      48f7d0         not rax
0x00016683      4883e801       sub rax, 1
0x00016687      4883f801       cmp rax, 1
0x0001668b      0f864dfbffff   jbe 0x161de
0x00016691      ebca           jmp 0x1665d
0x00016693      488b442448     mov rax, qword [rsp + 0x48]
0x00016698      4889cf         mov rdi, rcx
0x0001669b      448984248c00.  mov dword [rsp + 0x8c], r8d
0x000166a3      899424880000.  mov dword [rsp + 0x88], edx
0x000166aa      4c894c2470     mov qword [rsp + 0x70], r9
0x000166af      4801c0         add rax, rax
0x000166b2      4883c001       add rax, 1
0x000166b6      4c8d14850000.  lea r10, [rax*4]
0x000166be      4889442448     mov qword [rsp + 0x48], rax
0x000166c3      4c89d6         mov rsi, r10
0x000166c6      4c8994248000.  mov qword [rsp + 0x80], r10
0x000166ce      e8bdb8feff     call sym.imp.realloc
0x000166d3      4c8b4c2470     mov r9, qword [rsp + 0x70]
0x000166d8      4c8b94248000.  mov r10, qword [rsp + 0x80]
0x000166e0      4889442478     mov qword [rsp + 0x78], rax
0x000166e5      498b7910       mov rdi, qword [r9 + 0x10]
0x000166e9      4c89d6         mov rsi, r10
0x000166ec      e89fb8feff     call sym.imp.realloc
0x000166f1      488b4c2478     mov rcx, qword [rsp + 0x78]
0x000166f6      4885c9         test rcx, rcx
0x000166f9      742a           je 0x16725
0x000166fb      4885c0         test rax, rax
0x000166fe      4c8b4c2470     mov r9, qword [rsp + 0x70]
0x00016703      8b9424880000.  mov edx, dword [rsp + 0x88]
0x0001670a      448b84248c00.  mov r8d, dword [rsp + 0x8c]
0x00016712      7411           je 0x16725
0x00016714      49894110       mov qword [r9 + 0x10], rax
0x00016718      49894908       mov qword [r9 + 8], rcx
0x0001671c      498b4140       mov rax, qword [r9 + 0x40]
0x00016720      e95efbffff     jmp 0x16283
0x00016725      4889cf         mov rdi, rcx
0x00016728      48890424       mov qword [rsp], rax
0x0001672c      e82fb5feff     call sym.imp.free
0x00016731      488b0424       mov rax, qword [rsp]
0x00016735      4889c7         mov rdi, rax
0x00016738      e823b5feff     call sym.imp.free
0x0001673d      488b442440     mov rax, qword [rsp + 0x40]
0x00016742      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x00016748      e93bf8ffff     jmp 0x15f88
0x0001674d      31c9           xor ecx, ecx
0x0001674f      31d2           xor edx, edx
0x00016751      4d89f8         mov r8, r15
0x00016754      4889ee         mov rsi, rbp
0x00016757      4889df         mov rdi, rbx
0x0001675a      c68424b80000.  mov byte [rsp + 0xb8], 3
0x00016762      4c89a424b000.  mov qword [rsp + 0xb0], r12
0x0001676a      e8a164ffff     call sym.create_token_tree.isra.16
0x0001676f      4885c0         test rax, rax
0x00016772      0f84bbfcffff   je 0x16433
0x00016778      488b4c2428     mov rcx, qword [rsp + 0x28]
0x0001677d      4c8d8424c000.  lea r8, [rsp + 0xc0]
0x00016785      4889c2         mov rdx, rax
0x00016788      4889ee         mov rsi, rbp
0x0001678b      4889df         mov rdi, rbx
0x0001678e      c68424c80000.  mov byte [rsp + 0xc8], 0xa
0x00016796      e87564ffff     call sym.create_token_tree.isra.16
0x0001679b      4885c0         test rax, rax
0x0001679e      4889442428     mov qword [rsp + 0x28], rax
0x000167a3      0f8503edffff   jne 0x154ac
0x000167a9      e985fcffff     jmp 0x16433
0x000167ae      e8fdb5feff     call sym.imp.__stack_chk_fail
0x000167b3      488b442418     mov rax, qword [rsp + 0x18]
0x000167b8      80780802       cmp byte [rax + 8], 2
0x000167bc      0f85eef1ffff   jne 0x159b0
0x000167c2      488b442440     mov rax, qword [rsp + 0x40]
0x000167c7      c70009000000   mov dword [rax], 9
0x000167cd      e9e9f1ffff     jmp 0x159bb
0x000167d2      488b8424b800.  mov rax, qword [rsp + 0xb8]
0x000167da      440fb600       movzx r8d, byte [rax]
0x000167de      e927faffff     jmp 0x1620a
0x000167e3      0f1f00         nop dword [rax]
0x000167e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- parse_branch:
0x000167f0      4157           push r15
0x000167f2      4156           push r14
0x000167f4      4989cf         mov r15, rcx
0x000167f7      4155           push r13
0x000167f9      4154           push r12
0x000167fb      4989f5         mov r13, rsi
0x000167fe      55             push rbp
0x000167ff      53             push rbx
0x00016800      4c89cb         mov rbx, r9
0x00016803      4889d5         mov rbp, rdx
0x00016806      4d89c4         mov r12, r8
0x00016809      4883ec48       sub rsp, 0x48
0x0001680d      64488b042528.  mov rax, qword fs:[0x28]
0x00016816      4889442438     mov qword [rsp + 0x38], rax
0x0001681b      31c0           xor eax, eax
0x0001681d      488b06         mov rax, qword [rsi]
0x00016820      48893c24       mov qword [rsp], rdi
0x00016824      4889442410     mov qword [rsp + 0x10], rax
0x00016829      e8e2eaffff     call sym.parse_expression
0x0001682e      8b13           mov edx, dword [rbx]
0x00016830      4989c6         mov r14, rax
0x00016833      85d2           test edx, edx
0x00016835      7409           je 0x16840
0x00016837      4885c0         test rax, rax
0x0001683a      0f84fa000000   je 0x1693a
0x00016840      488d442420     lea rax, [rsp + 0x20]
0x00016845      4889442418     mov qword [rsp + 0x18], rax
0x0001684a      660f1f440000   nop word [rax + rax]
0x00016850      0fb64508       movzx eax, byte [rbp + 8]
0x00016854      89c2           mov edx, eax
0x00016856      83e2f7         and edx, 0xfffffff7                     ; 4294967287
0x00016859      80fa02         cmp dl, 2
0x0001685c      0f848e000000   je 0x168f0
0x00016862      3c09           cmp al, 9
0x00016864      7509           jne 0x1686f
0x00016866      4d85e4         test r12, r12
0x00016869      0f8581000000   jne 0x168f0
0x0001686f      488b3c24       mov rdi, qword [rsp]
0x00016873      4989d9         mov r9, rbx
0x00016876      4d89e0         mov r8, r12
0x00016879      4c89f9         mov rcx, r15
0x0001687c      4889ea         mov rdx, rbp
0x0001687f      4c89ee         mov rsi, r13
0x00016882      e889eaffff     call sym.parse_expression
0x00016887      4989c1         mov r9, rax
0x0001688a      8b03           mov eax, dword [rbx]
0x0001688c      85c0           test eax, eax
0x0001688e      7409           je 0x16899
0x00016890      4d85c9         test r9, r9
0x00016893      0f848b000000   je 0x16924
0x00016899      4d85f6         test r14, r14
0x0001689c      747a           je 0x16918
0x0001689e      4d85c9         test r9, r9
0x000168a1      7475           je 0x16918
0x000168a3      488b442410     mov rax, qword [rsp + 0x10]
0x000168a8      4c8b442418     mov r8, qword [rsp + 0x18]
0x000168ad      4c89c9         mov rcx, r9
0x000168b0      4c89f2         mov rdx, r14
0x000168b3      4c894c2408     mov qword [rsp + 8], r9
0x000168b8      c644242810     mov byte [rsp + 0x28], 0x10             ; [0x10:1]=3
0x000168bd      488db0800000.  lea rsi, [rax + 0x80]
0x000168c4      488d7870       lea rdi, [rax + 0x70]
0x000168c8      e84363ffff     call sym.create_token_tree.isra.16
0x000168cd      4885c0         test rax, rax
0x000168d0      4c8b4c2408     mov r9, qword [rsp + 8]
0x000168d5      7469           je 0x16940
0x000168d7      4989c6         mov r14, rax
0x000168da      0fb64508       movzx eax, byte [rbp + 8]
0x000168de      89c2           mov edx, eax
0x000168e0      83e2f7         and edx, 0xfffffff7                     ; 4294967287
0x000168e3      80fa02         cmp dl, 2
0x000168e6      0f8576ffffff   jne 0x16862
0x000168ec      0f1f4000       nop dword [rax]
0x000168f0      488b4c2438     mov rcx, qword [rsp + 0x38]
0x000168f5      6448330c2528.  xor rcx, qword fs:[0x28]
0x000168fe      4c89f0         mov rax, r14
0x00016901      756a           jne 0x1696d
0x00016903      4883c448       add rsp, 0x48
0x00016907      5b             pop rbx
0x00016908      5d             pop rbp
0x00016909      415c           pop r12
0x0001690b      415d           pop r13
0x0001690d      415e           pop r14
0x0001690f      415f           pop r15
0x00016911      c3             ret
0x00016912      660f1f440000   nop word [rax + rax]
0x00016918      4d85f6         test r14, r14
0x0001691b      4d0f44f1       cmove r14, r9
0x0001691f      e92cffffff     jmp 0x16850
0x00016924      4d85f6         test r14, r14
0x00016927      7411           je 0x1693a
0x00016929      488d35a04dff.  lea rsi, sym.free_tree                  ; 0xb6d0 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x00016930      31d2           xor edx, edx
0x00016932      4c89f7         mov rdi, r14
0x00016935      e8f63effff     call sym.postorder
0x0001693a      4531f6         xor r14d, r14d
0x0001693d      ebb1           jmp 0x168f0
0x0001693f      90             nop
0x00016940      488d35894dff.  lea rsi, sym.free_tree                  ; 0xb6d0 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x00016947      4c89cf         mov rdi, r9
0x0001694a      31d2           xor edx, edx
0x0001694c      e8df3effff     call sym.postorder
0x00016951      488d35784dff.  lea rsi, sym.free_tree                  ; 0xb6d0 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x00016958      4c89f7         mov rdi, r14
0x0001695b      31d2           xor edx, edx
0x0001695d      4531f6         xor r14d, r14d
0x00016960      e8cb3effff     call sym.postorder
0x00016965      c7030c000000   mov dword [rbx], 0xc                    ; [0xc:4]=0
0x0001696b      eb83           jmp 0x168f0
0x0001696d      e83eb4feff     call sym.imp.__stack_chk_fail
0x00016972      0f1f4000       nop dword [rax]
0x00016976      662e0f1f8400.  nop word cs:[rax + rax]
;-- parse_reg_exp:
0x00016980      4157           push r15
0x00016982      4156           push r14
0x00016984      4989ce         mov r14, rcx
0x00016987      4155           push r13
0x00016989      4154           push r12
0x0001698b      4d89cd         mov r13, r9
0x0001698e      55             push rbp
0x0001698f      53             push rbx
0x00016990      4889d5         mov rbp, rdx
0x00016993      4989fc         mov r12, rdi
0x00016996      4883ec58       sub rsp, 0x58
0x0001699a      488b1e         mov rbx, qword [rsi]
0x0001699d      64488b042528.  mov rax, qword fs:[0x28]
0x000169a6      4889442448     mov qword [rsp + 0x48], rax
0x000169ab      31c0           xor eax, eax
0x000169ad      4889742428     mov qword [rsp + 0x28], rsi
0x000169b2      4c89442410     mov qword [rsp + 0x10], r8
0x000169b7      488b83a80000.  mov rax, qword [rbx + 0xa8]
0x000169be      4889442420     mov qword [rsp + 0x20], rax
0x000169c3      e828feffff     call sym.parse_branch
0x000169c8      418b5500       mov edx, dword [r13]
0x000169cc      4989c7         mov r15, rax
0x000169cf      85d2           test edx, edx
0x000169d1      7409           je 0x169dc
0x000169d3      4885c0         test rax, rax
0x000169d6      0f84e6000000   je 0x16ac2
0x000169dc      488d442430     lea rax, [rsp + 0x30]
0x000169e1      4889442408     mov qword [rsp + 8], rax
0x000169e6      e989000000     jmp 0x16a74
0x000169eb      0f1f440000     nop dword [rax + rax]
0x000169f0      3c09           cmp al, 9
0x000169f2      750c           jne 0x16a00
0x000169f4      48837c241000   cmp qword [rsp + 0x10], 0
0x000169fa      0f85a8000000   jne 0x16aa8
0x00016a00      488b83a80000.  mov rax, qword [rbx + 0xa8]
0x00016a07      4c8b442410     mov r8, qword [rsp + 0x10]
0x00016a0c      4c89f1         mov rcx, r14
0x00016a0f      488b742428     mov rsi, qword [rsp + 0x28]
0x00016a14      4d89e9         mov r9, r13
0x00016a17      4889ea         mov rdx, rbp
0x00016a1a      4c89e7         mov rdi, r12
0x00016a1d      4889442418     mov qword [rsp + 0x18], rax
0x00016a22      488b442420     mov rax, qword [rsp + 0x20]
0x00016a27      488983a80000.  mov qword [rbx + 0xa8], rax
0x00016a2e      e8bdfdffff     call sym.parse_branch
0x00016a33      4889c1         mov rcx, rax
0x00016a36      418b4500       mov eax, dword [r13]
0x00016a3a      85c0           test eax, eax
0x00016a3c      7405           je 0x16a43
0x00016a3e      4885c9         test rcx, rcx
0x00016a41      7469           je 0x16aac
0x00016a43      488b442418     mov rax, qword [rsp + 0x18]
0x00016a48      480983a80000.  or qword [rbx + 0xa8], rax
0x00016a4f      4c8b442408     mov r8, qword [rsp + 8]
0x00016a54      488db3800000.  lea rsi, [rbx + 0x80]
0x00016a5b      488d7b70       lea rdi, [rbx + 0x70]
0x00016a5f      4c89fa         mov rdx, r15
0x00016a62      c64424380a     mov byte [rsp + 0x38], 0xa
0x00016a67      e8a461ffff     call sym.create_token_tree.isra.16
0x00016a6c      4885c0         test rax, rax
0x00016a6f      4989c7         mov r15, rax
0x00016a72      747c           je 0x16af0
0x00016a74      807d080a       cmp byte [rbp + 8], 0xa
0x00016a78      754e           jne 0x16ac8
0x00016a7a      4c89f2         mov rdx, r14
0x00016a7d      4c89e6         mov rsi, r12
0x00016a80      4889ef         mov rdi, rbp
0x00016a83      4881ca000080.  or rdx, 0x800000
0x00016a8a      e8c1e0ffff     call sym.peek_token
0x00016a8f      4898           cdqe
0x00016a91      4901442448     add qword [r12 + 0x48], rax
0x00016a96      0fb64508       movzx eax, byte [rbp + 8]
0x00016a9a      89c2           mov edx, eax
0x00016a9c      83e2f7         and edx, 0xfffffff7                     ; 4294967287
0x00016a9f      80fa02         cmp dl, 2
0x00016aa2      0f8548ffffff   jne 0x169f0
0x00016aa8      31c9           xor ecx, ecx
0x00016aaa      eba3           jmp 0x16a4f
0x00016aac      4d85ff         test r15, r15
0x00016aaf      7411           je 0x16ac2
0x00016ab1      488d35184cff.  lea rsi, sym.free_tree                  ; 0xb6d0 ; "H\x8d~(H\x83\xec\b\xe8\xc3\xff\xff\xff1\xc0H\x83\xc4\b\xc3f\x90f.\x0f\x1f\x84"
0x00016ab8      31d2           xor edx, edx
0x00016aba      4c89ff         mov rdi, r15
0x00016abd      e86e3dffff     call sym.postorder
0x00016ac2      4531ff         xor r15d, r15d
0x00016ac5      0f1f00         nop dword [rax]
0x00016ac8      488b4c2448     mov rcx, qword [rsp + 0x48]
0x00016acd      6448330c2528.  xor rcx, qword fs:[0x28]
0x00016ad6      4c89f8         mov rax, r15
0x00016ad9      751f           jne 0x16afa
0x00016adb      4883c458       add rsp, 0x58
0x00016adf      5b             pop rbx
0x00016ae0      5d             pop rbp
0x00016ae1      415c           pop r12
0x00016ae3      415d           pop r13
0x00016ae5      415e           pop r14
0x00016ae7      415f           pop r15
0x00016ae9      c3             ret
0x00016aea      660f1f440000   nop word [rax + rax]
0x00016af0      41c745000c00.  mov dword [r13], 0xc                    ; [0xc:4]=0
0x00016af8      ebce           jmp 0x16ac8
0x00016afa      e8b1b2feff     call sym.imp.__stack_chk_fail
0x00016aff      90             nop
;-- re_compile_internal:
0x00016b00      4157           push r15
0x00016b02      4156           push r14
0x00016b04      4155           push r13
0x00016b06      4154           push r12
0x00016b08      55             push rbp
0x00016b09      53             push rbx
0x00016b0a      4881ec280100.  sub rsp, 0x128
0x00016b11      48894f18       mov qword [rdi + 0x18], rcx
0x00016b15      48c747100000.  mov qword [rdi + 0x10], 0
0x00016b1d      64488b042528.  mov rax, qword fs:[0x28]
0x00016b26      488984241801.  mov qword [rsp + 0x118], rax
0x00016b2e      31c0           xor eax, eax
0x00016b30      0fb64738       movzx eax, byte [rdi + 0x38]
0x00016b34      48897c2408     mov qword [rsp + 8], rdi
0x00016b39      4889742410     mov qword [rsp + 0x10], rsi
0x00016b3e      48891424       mov qword [rsp], rdx
0x00016b42      48894c2418     mov qword [rsp + 0x18], rcx
0x00016b47      c744244c0000.  mov dword [rsp + 0x4c], 0
0x00016b4f      48c747300000.  mov qword [rdi + 0x30], 0
0x00016b57      488b1f         mov rbx, qword [rdi]
0x00016b5a      88442420       mov byte [rsp + 0x20], al
0x00016b5e      83e090         and eax, 0xffffff90                     ; 4294967184
0x00016b61      48817f08e700.  cmp qword [rdi + 8], 0xe7
0x00016b69      884738         mov byte [rdi + 0x38], al
0x00016b6c      0f86f40d0000   jbe 0x17966
0x00016b72      488d7b08       lea rdi, [rbx + 8]
0x00016b76      488b442408     mov rax, qword [rsp + 8]
0x00016b7b      4889d9         mov rcx, rbx
0x00016b7e      4883e7f8       and rdi, 0xfffffffffffffff8
0x00016b82      4829f9         sub rcx, rdi
0x00016b85      48c74010e800.  mov qword [rax + 0x10], 0xe8            ; [0xe8:8]=0x600000001
0x00016b8d      31c0           xor eax, eax
0x00016b8f      81c1e8000000   add ecx, 0xe8
0x00016b95      48c703000000.  mov qword [rbx], 0
0x00016b9c      48c783e00000.  mov qword [rbx + 0xe0], 0
0x00016ba7      c1e903         shr ecx, 3
0x00016baa      f348ab         rep stosq qword [rdi], rax
0x00016bad      48b854555555.  movabs rax, 0x555555555555554
0x00016bb7      c78380000000.  mov dword [rbx + 0x80], 0xf             ; [0xf:4]=0x3e000300
0x00016bc1      48390424       cmp qword [rsp], rax
0x00016bc5      0f873b060000   ja 0x17206
0x00016bcb      4c8b3424       mov r14, qword [rsp]
0x00016bcf      498d4601       lea rax, [r14 + 1]
0x00016bd3      4889c7         mov rdi, rax
0x00016bd6      48894308       mov qword [rbx + 8], rax
0x00016bda      4889442428     mov qword [rsp + 0x28], rax
0x00016bdf      48c1e704       shl rdi, 4
0x00016be3      e838b3feff     call sym.imp.malloc
0x00016be8      4d85f6         test r14, r14
0x00016beb      488903         mov qword [rbx], rax
0x00016bee      0f84e10c0000   je 0x178d5
0x00016bf4      be01000000     mov esi, 1
0x00016bf9      0f1f80000000.  nop dword [rax]
0x00016c00      4801f6         add rsi, rsi
0x00016c03      48393424       cmp qword [rsp], rsi
0x00016c07      73f7           jae 0x16c00
0x00016c09      488d6eff       lea rbp, [rsi - 1]
0x00016c0d      bf18000000     mov edi, 0x18
0x00016c12      e8a9b2feff     call sym.imp.calloc
0x00016c17      4889ab880000.  mov qword [rbx + 0x88], rbp
0x00016c1e      48894340       mov qword [rbx + 0x40], rax
0x00016c22      e869b1feff     call sym.imp.__ctype_get_mb_cur_max
0x00016c27      bf0e000000     mov edi, 0xe
0x00016c2c      8983b4000000   mov dword [rbx + 0xb4], eax
0x00016c32      e819b3feff     call sym.imp.nl_langinfo
0x00016c37      0fb610         movzx edx, byte [rax]
0x00016c3a      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00016c3d      80fa55         cmp dl, 0x55
0x00016c40      754e           jne 0x16c90
0x00016c42      0fb65001       movzx edx, byte [rax + 1]
0x00016c46      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00016c49      80fa54         cmp dl, 0x54
0x00016c4c      7542           jne 0x16c90
0x00016c4e      0fb65002       movzx edx, byte [rax + 2]
0x00016c52      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00016c55      80fa46         cmp dl, 0x46
0x00016c58      7536           jne 0x16c90
0x00016c5a      31d2           xor edx, edx
0x00016c5c      8078032d       cmp byte [rax + 3], 0x2d
0x00016c60      488d3d9d5000.  lea rdi, [0x0001bd04]                   ; "8"
0x00016c67      b902000000     mov ecx, 2
0x00016c6c      0f94c2         sete dl
0x00016c6f      488d741003     lea rsi, [rax + rdx + 3]
0x00016c74      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00016c76      0f97c0         seta al
0x00016c79      1c00           sbb al, 0
0x00016c7b      84c0           test al, al
0x00016c7d      7511           jne 0x16c90
0x00016c7f      808bb0000000.  or byte [rbx + 0xb0], 4
0x00016c86      662e0f1f8400.  nop word cs:[rax + rax]
0x00016c90      0fb683b00000.  movzx eax, byte [rbx + 0xb0]
0x00016c97      89c2           mov edx, eax
0x00016c99      83e2f7         and edx, 0xfffffff7                     ; 4294967287
0x00016c9c      83bbb4000000.  cmp dword [rbx + 0xb4], 1
0x00016ca3      8893b0000000   mov byte [rbx + 0xb0], dl
0x00016ca9      7e13           jle 0x16cbe
0x00016cab      a804           test al, 4
0x00016cad      0f8460050000   je 0x17213
0x00016cb3      488d05466000.  lea rax, obj.utf8_sb_map                ; 0x1cd00
0x00016cba      48894378       mov qword [rbx + 0x78], rax
0x00016cbe      48833b00       cmp qword [rbx], 0
0x00016cc2      0f843e050000   je 0x17206
0x00016cc8      48837b4000     cmp qword [rbx + 0x40], 0
0x00016ccd      0f8433050000   je 0x17206
0x00016cd3      488b442418     mov rax, qword [rsp + 0x18]
0x00016cd8      488dac248000.  lea rbp, [rsp + 0x80]
0x00016ce0      b912000000     mov ecx, 0x12
0x00016ce5      c744244c0000.  mov dword [rsp + 0x4c], 0
0x00016ced      4c8d4508       lea r8, [rbp + 8]
0x00016cf1      2500004000     and eax, 0x400000
0x00016cf6      4889442420     mov qword [rsp + 0x20], rax
0x00016cfb      488b442408     mov rax, qword [rsp + 8]
0x00016d00      0f95c2         setne dl
0x00016d03      4c89c7         mov rdi, r8
0x00016d06      488b7028       mov rsi, qword [rax + 0x28]
0x00016d0a      31c0           xor eax, eax
0x00016d0c      f348ab         rep stosq qword [rdi], rax
0x00016d0f      488b442410     mov rax, qword [rsp + 0x10]
0x00016d14      488b3c24       mov rdi, qword [rsp]
0x00016d18      4885f6         test rsi, rsi
0x00016d1b      889424080100.  mov byte [rsp + 0x108], dl
0x00016d22      8b8bb4000000   mov ecx, dword [rbx + 0xb4]
0x00016d28      410f95c4       setne r12b
0x00016d2c      4889b424f800.  mov qword [rsp + 0xf8], rsi
0x00016d34      488984248000.  mov qword [rsp + 0x80], rax
0x00016d3c      0fb683b00000.  movzx eax, byte [rbx + 0xb0]
0x00016d43      4109d4         or r12d, edx
0x00016d46      4889bc24d800.  mov qword [rsp + 0xd8], rdi
0x00016d4e      4889bc24d000.  mov qword [rsp + 0xd0], rdi
0x00016d56      4489e6         mov esi, r12d
0x00016d59      4488a4240b01.  mov byte [rsp + 0x10b], r12b
0x00016d61      898c24100100.  mov dword [rsp + 0x110], ecx
0x00016d68      4889bc24e800.  mov qword [rsp + 0xe8], rdi
0x00016d70      4889bc24e000.  mov qword [rsp + 0xe0], rdi
0x00016d78      89c2           mov edx, eax
0x00016d7a      c0e803         shr al, 3
0x00016d7d      c0ea02         shr dl, 2
0x00016d80      83e001         and eax, 1
0x00016d83      83e201         and edx, 1
0x00016d86      4885ff         test rdi, rdi
0x00016d89      8884240a0100.  mov byte [rsp + 0x10a], al
0x00016d90      889424090100.  mov byte [rsp + 0x109], dl
0x00016d97      0f8538040000   jne 0x171d5
0x00016d9d      4084f6         test sil, sil
0x00016da0      740d           je 0x16daf
0x00016da2      488b84248800.  mov rax, qword [rsp + 0x88]
0x00016daa      4889442410     mov qword [rsp + 0x10], rax
0x00016daf      48837c242000   cmp qword [rsp + 0x20], 0
0x00016db5      488b442410     mov rax, qword [rsp + 0x10]
0x00016dba      488984248800.  mov qword [rsp + 0x88], rax
0x00016dc2      0f84fd000000   je 0x16ec5
0x00016dc8      83f901         cmp ecx, 1
0x00016dcb      0f8eec0b0000   jle 0x179bd
0x00016dd1      4889ef         mov rdi, rbp
0x00016dd4      e89740ffff     call sym.build_wcs_upper_buffer
0x00016dd9      85c0           test eax, eax
0x00016ddb      7543           jne 0x16e20
0x00016ddd      488b0424       mov rax, qword [rsp]
0x00016de1      483b8424b800.  cmp rax, qword [rsp + 0xb8]
0x00016de9      0f8eb10b0000   jle 0x179a0
0x00016def      486383b40000.  movsxd rax, dword [rbx + 0xb4]
0x00016df6      488bb424c000.  mov rsi, qword [rsp + 0xc0]
0x00016dfe      48038424b000.  add rax, qword [rsp + 0xb0]
0x00016e06      4839c6         cmp rsi, rax
0x00016e09      0f8f910b0000   jg 0x179a0
0x00016e0f      4801f6         add rsi, rsi
0x00016e12      4889ef         mov rdi, rbp
0x00016e15      e8e63affff     call sym.re_string_realloc_buffers
0x00016e1a      85c0           test eax, eax
0x00016e1c      74b3           je 0x16dd1
0x00016e1e      6690           nop
0x00016e20      8944244c       mov dword [rsp + 0x4c], eax
0x00016e24      488b442408     mov rax, qword [rsp + 8]
0x00016e29      4c8b28         mov r13, qword [rax]
0x00016e2c      498b7d70       mov rdi, qword [r13 + 0x70]
0x00016e30      4885ff         test rdi, rdi
0x00016e33      7413           je 0x16e48
0x00016e35      0f1f00         nop dword [rax]
0x00016e38      4c8b27         mov r12, qword [rdi]
0x00016e3b      e820aefeff     call sym.imp.free
0x00016e40      4d85e4         test r12, r12
0x00016e43      4c89e7         mov rdi, r12
0x00016e46      75f0           jne 0x16e38
0x00016e48      498b7d20       mov rdi, qword [r13 + 0x20]
0x00016e4c      49c745700000.  mov qword [r13 + 0x70], 0
0x00016e54      41c785800000.  mov dword [r13 + 0x80], 0xf             ; [0xf:4]=0x3e000300
0x00016e5f      49c745680000.  mov qword [r13 + 0x68], 0
0x00016e67      e8f4adfeff     call sym.imp.free
0x00016e6c      49c745200000.  mov qword [r13 + 0x20], 0
0x00016e74      4889ef         mov rdi, rbp
0x00016e77      e8c44dffff     call sym.re_string_destruct
0x00016e7c      4889df         mov rdi, rbx
0x00016e7f      e8fc4dffff     call sym.free_dfa_content
0x00016e84      488b442408     mov rax, qword [rsp + 8]
0x00016e89      48c700000000.  mov qword [rax], 0
0x00016e90      48c740080000.  mov qword [rax + 8], 0
0x00016e98      8b44244c       mov eax, dword [rsp + 0x4c]
0x00016e9c      488b9c241801.  mov rbx, qword [rsp + 0x118]
0x00016ea4      6448331c2528.  xor rbx, qword fs:[0x28]
0x00016ead      0f853d0d0000   jne 0x17bf0
0x00016eb3      4881c4280100.  add rsp, 0x128
0x00016eba      5b             pop rbx
0x00016ebb      5d             pop rbp
0x00016ebc      415c           pop r12
0x00016ebe      415d           pop r13
0x00016ec0      415e           pop r14
0x00016ec2      415f           pop r15
0x00016ec4      c3             ret
0x00016ec5      83f901         cmp ecx, 1
0x00016ec8      0f8fac090000   jg 0x1787a
0x00016ece      4584e4         test r12b, r12b
0x00016ed1      488bb424c000.  mov rsi, qword [rsp + 0xc0]
0x00016ed9      0f8415060000   je 0x174f4
0x00016edf      4839b424d800.  cmp qword [rsp + 0xd8], rsi
0x00016ee7      488b8424b000.  mov rax, qword [rsp + 0xb0]
0x00016eef      480f4eb424d8.  cmovle rsi, qword [rsp + 0xd8]
0x00016ef8      4839c6         cmp rsi, rax
0x00016efb      7f10           jg 0x16f0d
0x00016efd      eb41           jmp 0x16f40
0x00016eff      90             nop
0x00016f00      488b94248800.  mov rdx, qword [rsp + 0x88]
0x00016f08      4889542410     mov qword [rsp + 0x10], rdx
0x00016f0d      488b94248000.  mov rdx, qword [rsp + 0x80]
0x00016f15      488b8c24f800.  mov rcx, qword [rsp + 0xf8]
0x00016f1d      4801c2         add rdx, rax
0x00016f20      48039424a800.  add rdx, qword [rsp + 0xa8]
0x00016f28      0fb612         movzx edx, byte [rdx]
0x00016f2b      0fb61411       movzx edx, byte [rcx + rdx]
0x00016f2f      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00016f34      881401         mov byte [rcx + rax], dl
0x00016f37      4883c001       add rax, 1
0x00016f3b      4839c6         cmp rsi, rax
0x00016f3e      75c0           jne 0x16f00
0x00016f40      48898424b000.  mov qword [rsp + 0xb0], rax
0x00016f48      48898424b800.  mov qword [rsp + 0xb8], rax
0x00016f50      c744244c0000.  mov dword [rsp + 0x4c], 0
0x00016f58      4c8b642408     mov r12, qword [rsp + 8]
0x00016f5d      4c8b742418     mov r14, qword [rsp + 0x18]
0x00016f62      4c8d6c2450     lea r13, [rsp + 0x50]
0x00016f67      4889ee         mov rsi, rbp
0x00016f6a      4c89ef         mov rdi, r13
0x00016f6d      4c896c2428     mov qword [rsp + 0x28], r13
0x00016f72      4d8b3c24       mov r15, qword [r12]
0x00016f76      4c89f2         mov rdx, r14
0x00016f79      49c744243000.  mov qword [r12 + 0x30], 0
0x00016f82      4881ca000080.  or rdx, 0x800000
0x00016f89      4d89b7d80000.  mov qword [r15 + 0xd8], r14
0x00016f90      e8bbdbffff     call sym.peek_token
0x00016f95      4c8d4c244c     lea r9, [rsp + 0x4c]
0x00016f9a      4531c0         xor r8d, r8d
0x00016f9d      4c89f1         mov rcx, r14
0x00016fa0      4c89ea         mov rdx, r13
0x00016fa3      4c89e6         mov rsi, r12
0x00016fa6      4889ef         mov rdi, rbp
0x00016fa9      4898           cdqe
0x00016fab      48018424c800.  add qword [rsp + 0xc8], rax
0x00016fb3      e8c8f9ffff     call sym.parse_reg_exp
0x00016fb8      8b4c244c       mov ecx, dword [rsp + 0x4c]
0x00016fbc      85c9           test ecx, ecx
0x00016fbe      0f85230a0000   jne 0x179e7
0x00016fc4      4d8d6f70       lea r13, [r15 + 0x70]
0x00016fc8      4c8d642460     lea r12, [rsp + 0x60]
0x00016fcd      4983ef80       sub r15, 0xffffffffffffff80
0x00016fd1      31d2           xor edx, edx
0x00016fd3      31c9           xor ecx, ecx
0x00016fd5      4c89fe         mov rsi, r15
0x00016fd8      4d89e0         mov r8, r12
0x00016fdb      4c89ef         mov rdi, r13
0x00016fde      48890424       mov qword [rsp], rax
0x00016fe2      c644246802     mov byte [rsp + 0x68], 2
0x00016fe7      e8245cffff     call sym.create_token_tree.isra.16
0x00016fec      4c8b0c24       mov r9, qword [rsp]
0x00016ff0      4989c3         mov r11, rax
0x00016ff3      4889c2         mov rdx, rax
0x00016ff6      4d85c9         test r9, r9
0x00016ff9      7427           je 0x17022
0x00016ffb      4c89d9         mov rcx, r11
0x00016ffe      4c89ca         mov rdx, r9
0x00017001      4d89e0         mov r8, r12
0x00017004      4c89fe         mov rsi, r15
0x00017007      4c89ef         mov rdi, r13
0x0001700a      4c891c24       mov qword [rsp], r11
0x0001700e      c644246810     mov byte [rsp + 0x68], 0x10             ; [0x10:1]=3
0x00017013      e8f85bffff     call sym.create_token_tree.isra.16
0x00017018      4c8b1c24       mov r11, qword [rsp]
0x0001701c      4c89da         mov rdx, r11
0x0001701f      4989c3         mov r11, rax
0x00017022      4885d2         test rdx, rdx
0x00017025      488b4c2408     mov rcx, qword [rsp + 8]
0x0001702a      0f94c2         sete dl
0x0001702d      4d85db         test r11, r11
0x00017030      0f94c0         sete al
0x00017033      08c2           or dl, al
0x00017035      4c8b29         mov r13, qword [rcx]
0x00017038      0f8594090000   jne 0x179d2
0x0001703e      4d8b7d08       mov r15, qword [r13 + 8]
0x00017042      4c895b68       mov qword [rbx + 0x68], r11
0x00017046      4a8d0cfd0000.  lea rcx, [r15*8]
0x0001704e      4f8d3c7f       lea r15, [r15 + r15*2]
0x00017052      4889cf         mov rdi, rcx
0x00017055      48890c24       mov qword [rsp], rcx
0x00017059      49c1e703       shl r15, 3
0x0001705d      e8beaefeff     call sym.imp.malloc
0x00017062      488b0c24       mov rcx, qword [rsp]
0x00017066      49894518       mov qword [r13 + 0x18], rax
0x0001706a      4889442418     mov qword [rsp + 0x18], rax
0x0001706f      4889cf         mov rdi, rcx
0x00017072      e8a9aefeff     call sym.imp.malloc
0x00017077      4c89ff         mov rdi, r15
0x0001707a      49894520       mov qword [r13 + 0x20], rax
0x0001707e      4889442410     mov qword [rsp + 0x10], rax
0x00017083      e898aefeff     call sym.imp.malloc
0x00017088      4c89ff         mov rdi, r15
0x0001708b      49894528       mov qword [r13 + 0x28], rax
0x0001708f      48890424       mov qword [rsp], rax
0x00017093      e888aefeff     call sym.imp.malloc
0x00017098      488b542418     mov rdx, qword [rsp + 0x18]
0x0001709d      49894530       mov qword [r13 + 0x30], rax
0x000170a1      488b3424       mov rsi, qword [rsp]
0x000170a5      488b4c2410     mov rcx, qword [rsp + 0x10]
0x000170aa      4885d2         test rdx, rdx
0x000170ad      0f84ba070000   je 0x1786d
0x000170b3      4885c9         test rcx, rcx
0x000170b6      0f84b1070000   je 0x1786d
0x000170bc      4885f6         test rsi, rsi
0x000170bf      0f84a8070000   je 0x1786d
0x000170c5      4885c0         test rax, rax
0x000170c8      0f849f070000   je 0x1786d
0x000170ce      488b442408     mov rax, qword [rsp + 8]
0x000170d3      4c8b7830       mov r15, qword [rax + 0x30]
0x000170d7      4a8d3cfd0000.  lea rdi, [r15*8]
0x000170df      e83caefeff     call sym.imp.malloc
0x000170e4      4885c0         test rax, rax
0x000170e7      498985e00000.  mov qword [r13 + 0xe0], rax
0x000170ee      746d           je 0x1715d
0x000170f0      4d85ff         test r15, r15
0x000170f3      7418           je 0x1710d
0x000170f5      31d2           xor edx, edx
0x000170f7      660f1f840000.  nop word [rax + rax]
0x00017100      488914d0       mov qword [rax + rdx*8], rdx
0x00017104      4883c201       add rdx, 1
0x00017108      4c39fa         cmp rdx, r15
0x0001710b      75f3           jne 0x17100
0x0001710d      498b7d68       mov rdi, qword [r13 + 0x68]
0x00017111      488d35f84fff.  lea rsi, sym.optimize_subexps           ; 0xc110
0x00017118      4c89ea         mov rdx, r13
0x0001711b      e88037ffff     call sym.preorder
0x00017120      488b442408     mov rax, qword [rsp + 8]
0x00017125      498bbde00000.  mov rdi, qword [r13 + 0xe0]
0x0001712c      488b5030       mov rdx, qword [rax + 0x30]
0x00017130      4885d2         test rdx, rdx
0x00017133      0f84eb080000   je 0x17a24
0x00017139      488b07         mov rax, qword [rdi]
0x0001713c      4885c0         test rax, rax
0x0001713f      740d           je 0x1714e
0x00017141      eb1a           jmp 0x1715d
0x00017143      0f1f440000     nop dword [rax + rax]
0x00017148      483904c7       cmp qword [rdi + rax*8], rax
0x0001714c      750f           jne 0x1715d
0x0001714e      4883c001       add rax, 1
0x00017152      4839c2         cmp rdx, rax
0x00017155      77f1           ja 0x17148
0x00017157      0f84c7080000   je 0x17a24
0x0001715d      498b7d68       mov rdi, qword [r13 + 0x68]
0x00017161      488b542408     mov rdx, qword [rsp + 8]
0x00017166      488d35a35eff.  lea rsi, sym.lower_subexps              ; 0xd010 ; "USH\x89\xfdH\x89\xf3H\x83\xec\x18H\x8bV\bdH\x8b\x04%("
0x0001716d      e8be36ffff     call sym.postorder
0x00017172      85c0           test eax, eax
0x00017174      0f85a6fcffff   jne 0x16e20
0x0001717a      498b7d68       mov rdi, qword [r13 + 0x68]
0x0001717e      488d35fb83ff.  lea rsi, sym.calc_first                 ; 0xf580
0x00017185      4c89ea         mov rdx, r13
0x00017188      e8a336ffff     call sym.postorder
0x0001718d      85c0           test eax, eax
0x0001718f      0f858bfcffff   jne 0x16e20
0x00017195      498b7d68       mov rdi, qword [r13 + 0x68]
0x00017199      488d350050ff.  lea rsi, sym.calc_next                  ; 0xc1a0
0x000171a0      4c89ea         mov rdx, r13
0x000171a3      e8f836ffff     call sym.preorder
0x000171a8      498b5568       mov rdx, qword [r13 + 0x68]
0x000171ac      488d35555a00.  lea rsi, [0x0001cc08]
0x000171b3      0f1f440000     nop dword [rax + rax]
0x000171b8      0fb64a30       movzx ecx, byte [rdx + 0x30]
0x000171bc      488b7a38       mov rdi, qword [rdx + 0x38]
0x000171c0      80f910         cmp cl, 0x10
0x000171c3      0f87cf000000   ja 0x17298
0x000171c9      0fb6c1         movzx eax, cl
0x000171cc      48630486       movsxd rax, dword [rsi + rax*4]
0x000171d0      4801f0         add rax, rsi
0x000171d3      ffe0           jmp rax
0x000171d5      488b742428     mov rsi, qword [rsp + 0x28]
0x000171da      4889ef         mov rdi, rbp
0x000171dd      e81e37ffff     call sym.re_string_realloc_buffers
0x000171e2      85c0           test eax, eax
0x000171e4      0f8536fcffff   jne 0x16e20
0x000171ea      0fb6b4240b01.  movzx esi, byte [rsp + 0x10b]
0x000171f2      8b8bb4000000   mov ecx, dword [rbx + 0xb4]
0x000171f8      4084f6         test sil, sil
0x000171fb      0f84aefbffff   je 0x16daf
0x00017201      e99cfbffff     jmp 0x16da2
0x00017206      c744244c0c00.  mov dword [rsp + 0x4c], 0xc             ; [0xc:4]=0
0x0001720e      e969fcffff     jmp 0x16e7c
0x00017213      be01000000     mov esi, 1
0x00017218      bf20000000     mov edi, 0x20                           ; "@"
0x0001721d      e89eacfeff     call sym.imp.calloc
0x00017222      4885c0         test rax, rax
0x00017225      48894378       mov qword [rbx + 0x78], rax
0x00017229      74db           je 0x17206
0x0001722b      4531e4         xor r12d, r12d
0x0001722e      31ed           xor ebp, ebp
0x00017230      41bd01000000   mov r13d, 1
0x00017236      4531ff         xor r15d, r15d
0x00017239      0f1f80000000.  nop dword [rax]
0x00017240      468d743d00     lea r14d, [rbp + r15]
0x00017245      4489f7         mov edi, r14d
0x00017248      e893adfeff     call sym.imp.btowc
0x0001724d      83f8ff         cmp eax, 0xffffffff
0x00017250      7413           je 0x17265
0x00017252      488b7378       mov rsi, qword [rbx + 0x78]
0x00017256      4c89ef         mov rdi, r13
0x00017259      4489f9         mov ecx, r15d
0x0001725c      48d3e7         shl rdi, cl
0x0001725f      4c01e6         add rsi, r12
0x00017262      48093e         or qword [rsi], rdi
0x00017265      41f7c680ffff.  test r14d, 0xffffff80                   ; 4294967168
0x0001726c      750c           jne 0x1727a
0x0001726e      4439f0         cmp eax, r14d
0x00017271      7407           je 0x1727a
0x00017273      808bb0000000.  or byte [rbx + 0xb0], 8
0x0001727a      4983c701       add r15, 1
0x0001727e      4983ff40       cmp r15, 0x40                           ; segment.PHDR
0x00017282      75bc           jne 0x17240
0x00017284      83c540         add ebp, 0x40                           ; segment.PHDR
0x00017287      4983c408       add r12, 8
0x0001728b      81fd00010000   cmp ebp, 0x100
0x00017291      75a3           jne 0x17236
0x00017293      e926faffff     jmp 0x16cbe
0x00017298      83e108         and ecx, 8
0x0001729b      0f8511090000   jne 0x17bb2
0x000172a1      488b4220       mov rax, qword [rdx + 0x20]
0x000172a5      488b4838       mov rcx, qword [rax + 0x38]
0x000172a9      498b4518       mov rax, qword [r13 + 0x18]
0x000172ad      48890cf8       mov qword [rax + rdi*8], rcx
0x000172b1      4c8b7a08       mov r15, qword [rdx + 8]
0x000172b5      31ff           xor edi, edi
0x000172b7      4d85ff         test r15, r15
0x000172ba      740f           je 0x172cb
0x000172bc      4c89fa         mov rdx, r15
0x000172bf      e9f4feffff     jmp 0x171b8
0x000172c4      0f1f4000       nop dword [rax]
0x000172c8      4889c2         mov rdx, rax
0x000172cb      4c8b7a10       mov r15, qword [rdx + 0x10]
0x000172cf      4d85ff         test r15, r15
0x000172d2      0f94c1         sete cl
0x000172d5      4939ff         cmp r15, rdi
0x000172d8      0f94c0         sete al
0x000172db      08c1           or cl, al
0x000172dd      884c2410       mov byte [rsp + 0x10], cl
0x000172e1      74d9           je 0x172bc
0x000172e3      488b02         mov rax, qword [rdx]
0x000172e6      4889d7         mov rdi, rdx
0x000172e9      4885c0         test rax, rax
0x000172ec      75da           jne 0x172c8
0x000172ee      4531f6         xor r14d, r14d
0x000172f1      4531ff         xor r15d, r15d
0x000172f4      0f1f4000       nop dword [rax]
0x000172f8      498b5510       mov rdx, qword [r13 + 0x10]
0x000172fc      4c39fa         cmp rdx, r15
0x000172ff      7425           je 0x17326
0x00017301      4f8d147f       lea r10, [r15 + r15*2]
0x00017305      498b4530       mov rax, qword [r13 + 0x30]
0x00017309      49c1e203       shl r10, 3
0x0001730d      4a837c100800   cmp qword [rax + r10 + 8], 0
0x00017313      0f84ff010000   je 0x17518
0x00017319      498b5510       mov rdx, qword [r13 + 0x10]
0x0001731d      4983c701       add r15, 1
0x00017321      4c39fa         cmp rdx, r15
0x00017324      75db           jne 0x17301
0x00017326      4584f6         test r14b, r14b
0x00017329      0f843f020000   je 0x1756e
0x0001732f      4531f6         xor r14d, r14d
0x00017332      4531ff         xor r15d, r15d
0x00017335      ebca           jmp 0x17301
0x00017337      41808db00000.  or byte [r13 + 0xb0], 1
0x0001733f      4c8b7a08       mov r15, qword [rdx + 8]
0x00017343      4d85ff         test r15, r15
0x00017346      0f840d060000   je 0x17959
0x0001734c      498b4718       mov rax, qword [r15 + 0x18]
0x00017350      488b4838       mov rcx, qword [rax + 0x38]
0x00017354      488b4210       mov rax, qword [rdx + 0x10]
0x00017358      4885c0         test rax, rax
0x0001735b      0f84eb050000   je 0x1794c
0x00017361      488b4018       mov rax, qword [rax + 0x18]
0x00017365      4c8b4838       mov r9, qword [rax + 0x38]
0x00017369      4885c9         test rcx, rcx
0x0001736c      0f885f080000   js 0x17bd1
0x00017372      4d85c9         test r9, r9
0x00017375      0f8818080000   js 0x17b93
0x0001737b      498b4528       mov rax, qword [r13 + 0x28]
0x0001737f      488d3c7f       lea rdi, [rdi + rdi*2]
0x00017383      4889742438     mov qword [rsp + 0x38], rsi
0x00017388      4c894c2430     mov qword [rsp + 0x30], r9
0x0001738d      48894c2418     mov qword [rsp + 0x18], rcx
0x00017392      4889542410     mov qword [rsp + 0x10], rdx
0x00017397      4c8d14f8       lea r10, [rax + rdi*8]
0x0001739b      bf10000000     mov edi, 0x10
0x000173a0      49c702020000.  mov qword [r10], 2
0x000173a7      4c891424       mov qword [rsp], r10
0x000173ab      e870abfeff     call sym.imp.malloc
0x000173b0      4c8b1424       mov r10, qword [rsp]
0x000173b4      4885c0         test rax, rax
0x000173b7      488b542410     mov rdx, qword [rsp + 0x10]
0x000173bc      488b4c2418     mov rcx, qword [rsp + 0x18]
0x000173c1      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000173c6      488b742438     mov rsi, qword [rsp + 0x38]
0x000173cb      49894210       mov qword [r10 + 0x10], rax
0x000173cf      0f8495020000   je 0x1766a
0x000173d5      4c39c9         cmp rcx, r9
0x000173d8      0f84cf050000   je 0x179ad
0x000173de      49c742080200.  mov qword [r10 + 8], 2
0x000173e6      0f8ca8050000   jl 0x17994
0x000173ec      4c8908         mov qword [rax], r9
0x000173ef      48894808       mov qword [rax + 8], rcx
0x000173f3      e9bdfeffff     jmp 0x172b5
0x000173f8      488b4220       mov rax, qword [rdx + 0x20]
0x000173fc      488d0c7f       lea rcx, [rdi + rdi*2]
0x00017400      bf08000000     mov edi, 8
0x00017405      4889742410     mov qword [rsp + 0x10], rsi
0x0001740a      48891424       mov qword [rsp], rdx
0x0001740e      4c8b7038       mov r14, qword [rax + 0x38]
0x00017412      498b4528       mov rax, qword [r13 + 0x28]
0x00017416      4c8d3cc8       lea r15, [rax + rcx*8]
0x0001741a      49c707010000.  mov qword [r15], 1
0x00017421      49c747080100.  mov qword [r15 + 8], 1
0x00017429      e8f2aafeff     call sym.imp.malloc
0x0001742e      4885c0         test rax, rax
0x00017431      49894710       mov qword [r15 + 0x10], rax
0x00017435      488b1424       mov rdx, qword [rsp]
0x00017439      488b742410     mov rsi, qword [rsp + 0x10]
0x0001743e      0f84a4060000   je 0x17ae8
0x00017444      4c8930         mov qword [rax], r14
0x00017447      4c8b7a08       mov r15, qword [rdx + 8]
0x0001744b      e965feffff     jmp 0x172b5
0x00017450      48837a2000     cmp qword [rdx + 0x20], 0
0x00017455      0f8456feffff   je 0x172b1
0x0001745b      488d0d5e5800.  lea rcx, obj.__PRETTY_FUNCTION__.6981   ; 0x1ccc0 ; "link_nfa_nodes"
0x00017462      488d35875200.  lea rsi, str..._coreutils_8.31_lib_regcomp.c ; 0x1c6f0 ; "../coreutils-8.31/lib/regcomp.c"
0x00017469      488d3d265300.  lea rdi, str.node__next____NULL         ; 0x1c796 ; "node->next == NULL"
0x00017470      ba9f050000     mov edx, 0x59f
0x00017475      e8b6a9feff     call sym.imp.__assert_fail
0x0001747a      660f1f440000   nop word [rax + rax]
0x00017480      488b4220       mov rax, qword [rdx + 0x20]
0x00017484      4c8b7838       mov r15, qword [rax + 0x38]
0x00017488      498b4518       mov rax, qword [r13 + 0x18]
0x0001748c      4c893cf8       mov qword [rax + rdi*8], r15
0x00017490      807a3004       cmp byte [rdx + 0x30], 4
0x00017494      0f8517feffff   jne 0x172b1
0x0001749a      498b4528       mov rax, qword [r13 + 0x28]
0x0001749e      488d0c7f       lea rcx, [rdi + rdi*2]
0x000174a2      bf08000000     mov edi, 8
0x000174a7      4889742418     mov qword [rsp + 0x18], rsi
0x000174ac      4889542410     mov qword [rsp + 0x10], rdx
0x000174b1      488d0cc8       lea rcx, [rax + rcx*8]
0x000174b5      48c701010000.  mov qword [rcx], 1
0x000174bc      48c741080100.  mov qword [rcx + 8], 1
0x000174c4      48890c24       mov qword [rsp], rcx
0x000174c8      e853aafeff     call sym.imp.malloc
0x000174cd      488b0c24       mov rcx, qword [rsp]
0x000174d1      4885c0         test rax, rax
0x000174d4      488b542410     mov rdx, qword [rsp + 0x10]
0x000174d9      488b742418     mov rsi, qword [rsp + 0x18]
0x000174de      48894110       mov qword [rcx + 0x10], rax
0x000174e2      0f8448060000   je 0x17b30
0x000174e8      4c8938         mov qword [rax], r15
0x000174eb      4c8b7a08       mov r15, qword [rdx + 8]
0x000174ef      e9c1fdffff     jmp 0x172b5
0x000174f4      4889b424b000.  mov qword [rsp + 0xb0], rsi
0x000174fc      4889b424b800.  mov qword [rsp + 0xb8], rsi
0x00017504      c744244c0000.  mov dword [rsp + 0x4c], 0
0x0001750c      e947faffff     jmp 0x16f58
0x00017511      0f1f80000000.  nop dword [rax]
0x00017518      b901000000     mov ecx, 1
0x0001751d      4c89fa         mov rdx, r15
0x00017520      4c89ee         mov rsi, r13
0x00017523      4c89e7         mov rdi, r12
0x00017526      4c891424       mov qword [rsp], r10
0x0001752a      e82151ffff     call sym.calc_eclosure_iter
0x0001752f      85c0           test eax, eax
0x00017531      0f85e9f8ffff   jne 0x16e20
0x00017537      498b4530       mov rax, qword [r13 + 0x30]
0x0001753b      4c8b1424       mov r10, qword [rsp]
0x0001753f      4983c701       add r15, 1
0x00017543      4a837c100800   cmp qword [rax + r10 + 8], 0
0x00017549      0f85a9fdffff   jne 0x172f8
0x0001754f      488b7c2470     mov rdi, qword [rsp + 0x70]
0x00017554      e807a7feff     call sym.imp.free
0x00017559      4d397d10       cmp qword [r13 + 0x10], r15
0x0001755d      0f84ccfdffff   je 0x1732f
0x00017563      440fb6742410   movzx r14d, byte [rsp + 0x10]
0x00017569      e993fdffff     jmp 0x17301
0x0001756e      488b442408     mov rax, qword [rsp + 8]
0x00017573      f6403810       test byte [rax + 0x38], 0x10
0x00017577      7511           jne 0x1758a
0x00017579      4883783000     cmp qword [rax + 0x30], 0
0x0001757e      740a           je 0x1758a
0x00017580      41f685b00000.  test byte [r13 + 0xb0], 1
0x00017588      750e           jne 0x17598
0x0001758a      4983bd980000.  cmp qword [r13 + 0x98], 0
0x00017592      0f84f3000000   je 0x1768b
0x00017598      488d3c52       lea rdi, [rdx + rdx*2]
0x0001759c      48891424       mov qword [rsp], rdx
0x000175a0      48c1e703       shl rdi, 3
0x000175a4      e877a9feff     call sym.imp.malloc
0x000175a9      4885c0         test rax, rax
0x000175ac      49894538       mov qword [r13 + 0x38], rax
0x000175b0      0f8446050000   je 0x17afc
0x000175b6      488b1424       mov rdx, qword [rsp]
0x000175ba      31f6           xor esi, esi
0x000175bc      31c9           xor ecx, ecx
0x000175be      4885d2         test rdx, rdx
0x000175c1      7511           jne 0x175d4
0x000175c3      e9c3000000     jmp 0x1768b
0x000175c8      0f1f84000000.  nop dword [rax + rax]
0x000175d0      498b4538       mov rax, qword [r13 + 0x38]
0x000175d4      660fefc0       pxor xmm0, xmm0
0x000175d8      4801f0         add rax, rsi
0x000175db      4883c101       add rcx, 1
0x000175df      48c740100000.  mov qword [rax + 0x10], 0
0x000175e7      4883c618       add rsi, 0x18
0x000175eb      0f1100         movups xmmword [rax], xmm0
0x000175ee      498b4510       mov rax, qword [r13 + 0x10]
0x000175f2      4839c1         cmp rcx, rax
0x000175f5      72d9           jb 0x175d0
0x000175f7      4885c0         test rax, rax
0x000175fa      0f848b000000   je 0x1768b
0x00017600      498b4530       mov rax, qword [r13 + 0x30]
0x00017604      48c744241800.  mov qword [rsp + 0x18], 0
0x0001760d      48c744241000.  mov qword [rsp + 0x10], 0
0x00017616      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0001761b      488d1408       lea rdx, [rax + rcx]
0x0001761f      48837a0800     cmp qword [rdx + 8], 0
0x00017624      488b4a10       mov rcx, qword [rdx + 0x10]
0x00017628      7e4a           jle 0x17674
0x0001762a      4531ff         xor r15d, r15d
0x0001762d      eb19           jmp 0x17648
0x0001762f      90             nop
0x00017630      498b4530       mov rax, qword [r13 + 0x30]
0x00017634      488b542418     mov rdx, qword [rsp + 0x18]
0x00017639      4983c701       add r15, 1
0x0001763d      488b0c24       mov rcx, qword [rsp]
0x00017641      4c3b7c1008     cmp r15, qword [rax + rdx + 8]
0x00017646      7d2c           jge 0x17674
0x00017648      4a8b04f9       mov rax, qword [rcx + r15*8]
0x0001764c      48890c24       mov qword [rsp], rcx
0x00017650      488d3440       lea rsi, [rax + rax*2]
0x00017654      498b4538       mov rax, qword [r13 + 0x38]
0x00017658      488d3cf0       lea rdi, [rax + rsi*8]
0x0001765c      488b742410     mov rsi, qword [rsp + 0x10]
0x00017661      e83a33ffff     call sym.re_node_set_insert_last
0x00017666      84c0           test al, al
0x00017668      75c6           jne 0x17630
0x0001766a      b80c000000     mov eax, 0xc
0x0001766f      e9acf7ffff     jmp 0x16e20
0x00017674      488344241001   add qword [rsp + 0x10], 1
0x0001767a      488344241818   add qword [rsp + 0x18], 0x18            ; [0x18:8]=0x4840 rip
0x00017680      488b542410     mov rdx, qword [rsp + 0x10]
0x00017685      493b5510       cmp rdx, qword [r13 + 0x10]
0x00017689      728b           jb 0x17616
0x0001768b      0fb683b00000.  movzx eax, byte [rbx + 0xb0]
0x00017692      c744244c0000.  mov dword [rsp + 0x4c], 0
0x0001769a      c0e802         shr al, 2
0x0001769d      48837c242000   cmp qword [rsp + 0x20], 0
0x000176a3      0f94c2         sete dl
0x000176a6      20d0           and al, dl
0x000176a8      0f85e1010000   jne 0x1788f
0x000176ae      488b4368       mov rax, qword [rbx + 0x68]
0x000176b2      4c89e7         mov rdi, r12
0x000176b5      488b4018       mov rax, qword [rax + 0x18]
0x000176b9      488b4038       mov rax, qword [rax + 0x38]
0x000176bd      488d1440       lea rdx, [rax + rax*2]
0x000176c1      488983900000.  mov qword [rbx + 0x90], rax
0x000176c8      488b4330       mov rax, qword [rbx + 0x30]
0x000176cc      488d34d0       lea rsi, [rax + rdx*8]
0x000176d0      e8db59ffff     call sym.re_node_set_init_copy
0x000176d5      85c0           test eax, eax
0x000176d7      4189c7         mov r15d, eax
0x000176da      89442450       mov dword [rsp + 0x50], eax
0x000176de      0f851b010000   jne 0x177ff
0x000176e4      4883bb980000.  cmp qword [rbx + 0x98], 0
0x000176ec      0f8ece000000   jle 0x177c0
0x000176f2      4c8b4c2468     mov r9, qword [rsp + 0x68]
0x000176f7      4d85c9         test r9, r9
0x000176fa      0f8ec0000000   jle 0x177c0
0x00017700      4531d2         xor r10d, r10d
0x00017703      4d8d6c2410     lea r13, [r12 + 0x10]
0x00017708      eb13           jmp 0x1771d
0x0001770a      660f1f440000   nop word [rax + rax]
0x00017710      4983c201       add r10, 1
0x00017714      4d39d1         cmp r9, r10
0x00017717      0f8ea3000000   jle 0x177c0
0x0001771d      488b4c2470     mov rcx, qword [rsp + 0x70]
0x00017722      488b33         mov rsi, qword [rbx]
0x00017725      4e8b04d1       mov r8, qword [rcx + r10*8]
0x00017729      4c89c7         mov rdi, r8
0x0001772c      48c1e704       shl rdi, 4
0x00017730      4801f7         add rdi, rsi
0x00017733      807f0804       cmp byte [rdi + 8], 4
0x00017737      75d7           jne 0x17710
0x00017739      31d2           xor edx, edx
0x0001773b      eb0c           jmp 0x17749
0x0001773d      0f1f00         nop dword [rax]
0x00017740      4883c201       add rdx, 1
0x00017744      4939d1         cmp r9, rdx
0x00017747      74c7           je 0x17710
0x00017749      488b04d1       mov rax, qword [rcx + rdx*8]
0x0001774d      48c1e004       shl rax, 4
0x00017751      4801f0         add rax, rsi
0x00017754      80780809       cmp byte [rax + 8], 9
0x00017758      75e6           jne 0x17740
0x0001775a      4c8b1f         mov r11, qword [rdi]
0x0001775d      4c3918         cmp qword [rax], r11
0x00017760      75de           jne 0x17740
0x00017762      488b5328       mov rdx, qword [rbx + 0x28]
0x00017766      4b8d0440       lea rax, [r8 + r8*2]
0x0001776a      4c89ee         mov rsi, r13
0x0001776d      4c89cf         mov rdi, r9
0x00017770      488d04c2       lea rax, [rdx + rax*8]
0x00017774      488b4010       mov rax, qword [rax + 0x10]
0x00017778      4c8b18         mov r11, qword [rax]
0x0001777b      4c89da         mov rdx, r11
0x0001777e      e8cd47ffff     call sym.re_node_set_contains.isra.3
0x00017783      4885c0         test rax, rax
0x00017786      7588           jne 0x17710
0x00017788      488b4330       mov rax, qword [rbx + 0x30]
0x0001778c      4b8d145b       lea rdx, [r11 + r11*2]
0x00017790      4c89e7         mov rdi, r12
0x00017793      488d34d0       lea rsi, [rax + rdx*8]
0x00017797      e8d44cffff     call sym.re_node_set_merge
0x0001779c      85c0           test eax, eax
0x0001779e      0f853c030000   jne 0x17ae0
0x000177a4      4c8b4c2468     mov r9, qword [rsp + 0x68]
0x000177a9      41ba01000000   mov r10d, 1
0x000177af      4d39d1         cmp r9, r10
0x000177b2      0f8f65ffffff   jg 0x1771d
0x000177b8      0f1f84000000.  nop dword [rax + rax]
0x000177c0      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000177c5      31c9           xor ecx, ecx
0x000177c7      4c89e2         mov rdx, r12
0x000177ca      4889de         mov rsi, rbx
0x000177cd      e8ce5affff     call sym.re_acquire_state_context
0x000177d2      4885c0         test rax, rax
0x000177d5      48894348       mov qword [rbx + 0x48], rax
0x000177d9      0f8463010000   je 0x17942
0x000177df      80786800       cmp byte [rax + 0x68], 0
0x000177e3      0f88f8000000   js 0x178e1
0x000177e9      48894360       mov qword [rbx + 0x60], rax
0x000177ed      48894358       mov qword [rbx + 0x58], rax
0x000177f1      48894350       mov qword [rbx + 0x50], rax
0x000177f5      488b7c2470     mov rdi, qword [rsp + 0x70]
0x000177fa      e861a4feff     call sym.imp.free
0x000177ff      488b442408     mov rax, qword [rsp + 8]
0x00017804      44897c244c     mov dword [rsp + 0x4c], r15d
0x00017809      4c8b28         mov r13, qword [rax]
0x0001780c      498b7d70       mov rdi, qword [r13 + 0x70]
0x00017810      4885ff         test rdi, rdi
0x00017813      7413           je 0x17828
0x00017815      0f1f00         nop dword [rax]
0x00017818      4c8b27         mov r12, qword [rdi]
0x0001781b      e840a4feff     call sym.imp.free
0x00017820      4d85e4         test r12, r12
0x00017823      4c89e7         mov rdi, r12
0x00017826      75f0           jne 0x17818
0x00017828      498b7d20       mov rdi, qword [r13 + 0x20]
0x0001782c      49c745700000.  mov qword [r13 + 0x70], 0
0x00017834      41c785800000.  mov dword [r13 + 0x80], 0xf             ; [0xf:4]=0x3e000300
0x0001783f      49c745680000.  mov qword [r13 + 0x68], 0
0x00017847      e814a4feff     call sym.imp.free
0x0001784c      49c745200000.  mov qword [r13 + 0x20], 0
0x00017854      4889ef         mov rdi, rbp
0x00017857      e8e443ffff     call sym.re_string_destruct
0x0001785c      8b44244c       mov eax, dword [rsp + 0x4c]
0x00017860      85c0           test eax, eax
0x00017862      0f8434f6ffff   je 0x16e9c
0x00017868      e90ff6ffff     jmp 0x16e7c
0x0001786d      c744244c0c00.  mov dword [rsp + 0x4c], 0xc             ; [0xc:4]=0
0x00017875      e9b2f5ffff     jmp 0x16e2c
0x0001787a      4889ef         mov rdi, rbp
0x0001787d      e81e34ffff     call sym.build_wcs_buffer
0x00017882      c744244c0000.  mov dword [rsp + 0x4c], 0
0x0001788a      e9c9f6ffff     jmp 0x16f58
0x0001788f      488b4c2408     mov rcx, qword [rsp + 8]
0x00017894      4883792800     cmp qword [rcx + 0x28], 0
0x00017899      0f850ffeffff   jne 0x176ae
0x0001789f      4c8b5310       mov r10, qword [rbx + 0x10]
0x000178a3      4d85d2         test r10, r10
0x000178a6      0f84ae020000   je 0x17b5a
0x000178ac      488b33         mov rsi, qword [rbx]
0x000178af      4c8d0d965300.  lea r9, [0x0001cc4c]
0x000178b6      4531c0         xor r8d, r8d
0x000178b9      31d2           xor edx, edx
0x000178bb      4889f1         mov rcx, rsi
0x000178be      8079080c       cmp byte [rcx + 8], 0xc
0x000178c2      0f87c6020000   ja 0x17b8e
0x000178c8      0fb67908       movzx edi, byte [rcx + 8]
0x000178cc      49633cb9       movsxd rdi, dword [r9 + rdi*4]
0x000178d0      4c01cf         add rdi, r9
0x000178d3      ffe7           jmp rdi
0x000178d5      31ed           xor ebp, ebp
0x000178d7      be01000000     mov esi, 1
0x000178dc      e92cf3ffff     jmp 0x16c0d
0x000178e1      4c8b742428     mov r14, qword [rsp + 0x28]
0x000178e6      b901000000     mov ecx, 1
0x000178eb      4c89e2         mov rdx, r12
0x000178ee      4889de         mov rsi, rbx
0x000178f1      4c89f7         mov rdi, r14
0x000178f4      e8a759ffff     call sym.re_acquire_state_context
0x000178f9      b902000000     mov ecx, 2
0x000178fe      4c89e2         mov rdx, r12
0x00017901      4889de         mov rsi, rbx
0x00017904      4c89f7         mov rdi, r14
0x00017907      48894350       mov qword [rbx + 0x50], rax
0x0001790b      e89059ffff     call sym.re_acquire_state_context
0x00017910      b906000000     mov ecx, 6
0x00017915      48894358       mov qword [rbx + 0x58], rax
0x00017919      4c89e2         mov rdx, r12
0x0001791c      4889de         mov rsi, rbx
0x0001791f      4c89f7         mov rdi, r14
0x00017922      e87959ffff     call sym.re_acquire_state_context
0x00017927      48837b5000     cmp qword [rbx + 0x50], 0
0x0001792c      48894360       mov qword [rbx + 0x60], rax
0x00017930      7410           je 0x17942
0x00017932      48837b5800     cmp qword [rbx + 0x58], 0
0x00017937      7409           je 0x17942
0x00017939      4885c0         test rax, rax
0x0001793c      0f85b3feffff   jne 0x177f5
0x00017942      448b7c2450     mov r15d, dword [rsp + 0x50]
0x00017947      e9b3feffff     jmp 0x177ff
0x0001794c      488b4220       mov rax, qword [rdx + 0x20]
0x00017950      4c8b4838       mov r9, qword [rax + 0x38]
0x00017954      e910faffff     jmp 0x17369
0x00017959      488b4220       mov rax, qword [rdx + 0x20]
0x0001795d      488b4838       mov rcx, qword [rax + 0x38]
0x00017961      e9eef9ffff     jmp 0x17354
0x00017966      4889df         mov rdi, rbx
0x00017969      bee8000000     mov esi, 0xe8
0x0001796e      e81da6feff     call sym.imp.realloc
0x00017973      4885c0         test rax, rax
0x00017976      4889c3         mov rbx, rax
0x00017979      0f8492010000   je 0x17b11
0x0001797f      488b442408     mov rax, qword [rsp + 8]
0x00017984      48c74008e800.  mov qword [rax + 8], 0xe8               ; [0xe8:8]=0x600000001
0x0001798c      488918         mov qword [rax], rbx
0x0001798f      e9def1ffff     jmp 0x16b72
0x00017994      488908         mov qword [rax], rcx
0x00017997      4c894808       mov qword [rax + 8], r9
0x0001799b      e915f9ffff     jmp 0x172b5
0x000179a0      c744244c0000.  mov dword [rsp + 0x4c], 0
0x000179a8      e9abf5ffff     jmp 0x16f58
0x000179ad      49c742080100.  mov qword [r10 + 8], 1
0x000179b5      488908         mov qword [rax], rcx
0x000179b8      e9f8f8ffff     jmp 0x172b5
0x000179bd      4889ef         mov rdi, rbp
0x000179c0      e86b32ffff     call sym.build_upper_buffer
0x000179c5      c744244c0000.  mov dword [rsp + 0x4c], 0
0x000179cd      e986f5ffff     jmp 0x16f58
0x000179d2      c744244c0c00.  mov dword [rsp + 0x4c], 0xc             ; [0xc:4]=0
0x000179da      48c743680000.  mov qword [rbx + 0x68], 0
0x000179e2      e945f4ffff     jmp 0x16e2c
0x000179e7      4885c0         test rax, rax
0x000179ea      0f842b010000   je 0x17b1b
0x000179f0      4d8d6f70       lea r13, [r15 + 0x70]
0x000179f4      4c8d642460     lea r12, [rsp + 0x60]
0x000179f9      4983ef80       sub r15, 0xffffffffffffff80
0x000179fd      31c9           xor ecx, ecx
0x000179ff      31d2           xor edx, edx
0x00017a01      4c89fe         mov rsi, r15
0x00017a04      4d89e0         mov r8, r12
0x00017a07      4c89ef         mov rdi, r13
0x00017a0a      48890424       mov qword [rsp], rax
0x00017a0e      c644246802     mov byte [rsp + 0x68], 2
0x00017a13      e8f851ffff     call sym.create_token_tree.isra.16
0x00017a18      4c8b0c24       mov r9, qword [rsp]
0x00017a1c      4989c3         mov r11, rax
0x00017a1f      e9d7f5ffff     jmp 0x16ffb
0x00017a24      e837a2feff     call sym.imp.free
0x00017a29      49c785e00000.  mov qword [r13 + 0xe0], 0
0x00017a34      e924f7ffff     jmp 0x1715d
0x00017a39      4189c0         mov r8d, eax
0x00017a3c      4883c201       add rdx, 1
0x00017a40      4883c110       add rcx, 0x10
0x00017a44      4c39d2         cmp rdx, r10
0x00017a47      0f8571feffff   jne 0x178be
0x00017a4d      4508c6         or r14b, r8b
0x00017a50      0f8404010000   je 0x17b5a
0x00017a56      4889d0         mov rax, rdx
0x00017a59      48c1e004       shl rax, 4
0x00017a5d      4801f0         add rax, rsi
0x00017a60      eb16           jmp 0x17a78
0x00017a62      80fa05         cmp dl, 5
0x00017a65      7504           jne 0x17a6b
0x00017a67      c6460807       mov byte [rsi + 8], 7
0x00017a6b      4883c610       add rsi, 0x10
0x00017a6f      4839f0         cmp rax, rsi
0x00017a72      0f84df000000   je 0x17b57
0x00017a78      0fb65608       movzx edx, byte [rsi + 8]
0x00017a7c      80fa01         cmp dl, 1
0x00017a7f      75e1           jne 0x17a62
0x00017a81      803e00         cmp byte [rsi], 0
0x00017a84      79e5           jns 0x17a6b
0x00017a86      80660adf       and byte [rsi + 0xa], 0xdf              ; [0xdf:1]=0
0x00017a8a      ebdf           jmp 0x17a6b
0x00017a8c      0f1f4000       nop dword [rax]
0x00017a90      803900         cmp byte [rcx], 0
0x00017a93      440f48f0       cmovs r14d, eax
0x00017a97      eba3           jmp 0x17a3c
0x00017a99      8b39           mov edi, dword [rcx]
0x00017a9b      83ff20         cmp edi, 0x20                           ; "@"
0x00017a9e      749c           je 0x17a3c
0x00017aa0      0f86a3000000   jbe 0x17b49
0x00017aa6      83ff40         cmp edi, 0x40                           ; segment.PHDR
0x00017aa9      7491           je 0x17a3c
0x00017aab      83c780         add edi, 0xffffff80
0x00017aae      748c           je 0x17a3c
0x00017ab0      e9f9fbffff     jmp 0x176ae
0x00017ab5      0f1f00         nop dword [rax]
0x00017ab8      488b39         mov rdi, qword [rcx]
0x00017abb      48837f1000     cmp qword [rdi + 0x10], 0
0x00017ac0      0f85e8fbffff   jne 0x176ae
0x00017ac6      48837f1800     cmp qword [rdi + 0x18], 0
0x00017acb      0f846bffffff   je 0x17a3c
0x00017ad1      e9d8fbffff     jmp 0x176ae
0x00017ad6      662e0f1f8400.  nop word cs:[rax + rax]
0x00017ae0      4189c7         mov r15d, eax
0x00017ae3      e917fdffff     jmp 0x177ff
0x00017ae8      49c747080000.  mov qword [r15 + 8], 0
0x00017af0      49c707000000.  mov qword [r15], 0
0x00017af7      e96efbffff     jmp 0x1766a
0x00017afc      488b442408     mov rax, qword [rsp + 8]
0x00017b01      c744244c0c00.  mov dword [rsp + 0x4c], 0xc             ; [0xc:4]=0
0x00017b09      4c8b28         mov r13, qword [rax]
0x00017b0c      e91bf3ffff     jmp 0x16e2c
0x00017b11      b80c000000     mov eax, 0xc
0x00017b16      e981f3ffff     jmp 0x16e9c
0x00017b1b      488b442408     mov rax, qword [rsp + 8]
0x00017b20      48c743680000.  mov qword [rbx + 0x68], 0
0x00017b28      4c8b28         mov r13, qword [rax]
0x00017b2b      e9fcf2ffff     jmp 0x16e2c
0x00017b30      48c741080000.  mov qword [rcx + 8], 0
0x00017b38      48c701000000.  mov qword [rcx], 0
0x00017b3f      b80c000000     mov eax, 0xc
0x00017b44      e9d7f2ffff     jmp 0x16e20
0x00017b49      83ff10         cmp edi, 0x10
0x00017b4c      0f84eafeffff   je 0x17a3c
0x00017b52      e957fbffff     jmp 0x176ae
0x00017b57      4589c6         mov r14d, r8d
0x00017b5a      4883bb980000.  cmp qword [rbx + 0x98], 0
0x00017b62      0fb693b00000.  movzx edx, byte [rbx + 0xb0]
0x00017b69      c783b4000000.  mov dword [rbx + 0xb4], 1
0x00017b73      0f9fc0         setg al
0x00017b76      83e2f9         and edx, 0xfffffff9                     ; 4294967289
0x00017b79      4409f0         or eax, r14d
0x00017b7c      83e001         and eax, 1
0x00017b7f      01c0           add eax, eax
0x00017b81      09d0           or eax, edx
0x00017b83      8883b0000000   mov byte [rbx + 0xb0], al
0x00017b89      e920fbffff     jmp 0x176ae
0x00017b8e      e8dda0feff     call sym.imp.abort
0x00017b93      488d0d265100.  lea rcx, obj.__PRETTY_FUNCTION__.6981   ; 0x1ccc0 ; "link_nfa_nodes"
0x00017b9a      488d354f4b00.  lea rsi, str..._coreutils_8.31_lib_regcomp.c ; 0x1c6f0 ; "../coreutils-8.31/lib/regcomp.c"
0x00017ba1      488d3d0b4c00.  lea rdi, str.right____1                 ; 0x1c7b3 ; "right > -1"
0x00017ba8      bab0050000     mov edx, 0x5b0
0x00017bad      e87ea2feff     call sym.imp.__assert_fail
0x00017bb2      488d0d075100.  lea rcx, obj.__PRETTY_FUNCTION__.6981   ; 0x1ccc0 ; "link_nfa_nodes"
0x00017bb9      488d35304b00.  lea rsi, str..._coreutils_8.31_lib_regcomp.c ; 0x1c6f0 ; "../coreutils-8.31/lib/regcomp.c"
0x00017bc0      488d3d494b00.  lea rdi, str.IS_EPSILON_NODE__node__token.type ; 0x1c710 ; "!IS_EPSILON_NODE (node->token.type)"
0x00017bc7      bac2050000     mov edx, 0x5c2
0x00017bcc      e85fa2feff     call sym.imp.__assert_fail
0x00017bd1      488d0de85000.  lea rcx, obj.__PRETTY_FUNCTION__.6981   ; 0x1ccc0 ; "link_nfa_nodes"
0x00017bd8      488d35114b00.  lea rsi, str..._coreutils_8.31_lib_regcomp.c ; 0x1c6f0 ; "../coreutils-8.31/lib/regcomp.c"
0x00017bdf      488d3dc34b00.  lea rdi, str.left____1                  ; 0x1c7a9 ; "left > -1"
0x00017be6      baaf050000     mov edx, 0x5af
0x00017beb      e840a2feff     call sym.imp.__assert_fail
0x00017bf0      e8bba1feff     call sym.imp.__stack_chk_fail
0x00017bf5      90             nop
0x00017bf6      662e0f1f8400.  nop word cs:[rax + rax]
;-- rpl_re_compile_pattern:
0x00017c00      4883ec08       sub rsp, 8
0x00017c04      488b0ded9d20.  mov rcx, qword [obj.rpl_re_syntax_options] ; [0x2219f8:8]=0
0x00017c0b      4989f8         mov r8, rdi
0x00017c0e      4889d7         mov rdi, rdx
0x00017c11      4889c8         mov rax, rcx
0x00017c14      48c1e819       shr rax, 0x19
0x00017c18      83e001         and eax, 1
0x00017c1b      c1e004         shl eax, 4
0x00017c1e      89c2           mov edx, eax
0x00017c20      0fb64738       movzx eax, byte [rdi + 0x38]
0x00017c24      83e0ef         and eax, 0xffffffef                     ; 4294967279
0x00017c27      09d0           or eax, edx
0x00017c29      4889f2         mov rdx, rsi
0x00017c2c      4c89c6         mov rsi, r8
0x00017c2f      83c880         or eax, 0xffffff80                      ; 4294967168
0x00017c32      884738         mov byte [rdi + 0x38], al
0x00017c35      e8c6eeffff     call sym.re_compile_internal
0x00017c3a      85c0           test eax, eax
0x00017c3c      742a           je 0x17c68
0x00017c3e      488d15db5000.  lea rdx, obj.__re_error_msgid_idx       ; 0x1cd20
0x00017c45      4898           cdqe
0x00017c47      488d35725100.  lea rsi, obj.__re_error_msgid           ; 0x1cdc0 ; "Success"
0x00017c4e      31ff           xor edi, edi
0x00017c50      480334c2       add rsi, qword [rdx + rax*8]
0x00017c54      ba05000000     mov edx, 5
0x00017c59      4883c408       add rsp, 8
0x00017c5d      e91ea1feff     jmp sym.imp.dcgettext
0x00017c62      660f1f440000   nop word [rax + rax]
0x00017c68      31c0           xor eax, eax
0x00017c6a      4883c408       add rsp, 8
0x00017c6e      c3             ret
0x00017c6f      90             nop
;-- rpl_re_set_syntax:
0x00017c70      488b05819d20.  mov rax, qword [obj.rpl_re_syntax_options] ; [0x2219f8:8]=0
0x00017c77      48893d7a9d20.  mov qword [obj.rpl_re_syntax_options], rdi ; [0x2219f8:8]=0
0x00017c7e      c3             ret
0x00017c7f      90             nop
;-- rpl_re_compile_fastmap:
0x00017c80      4154           push r12
0x00017c82      55             push rbp
0x00017c83      31c0           xor eax, eax
0x00017c85      53             push rbx
0x00017c86      488b6f20       mov rbp, qword [rdi + 0x20]
0x00017c8a      4889fb         mov rbx, rdi
0x00017c8d      4c8b27         mov r12, qword [rdi]
0x00017c90      488d7d08       lea rdi, [rbp + 8]
0x00017c94      4889e9         mov rcx, rbp
0x00017c97      48c745000000.  mov qword [rbp], 0
0x00017c9f      48c785f80000.  mov qword [rbp + 0xf8], 0
0x00017caa      4883e7f8       and rdi, 0xfffffffffffffff8
0x00017cae      4829f9         sub rcx, rdi
0x00017cb1      81c100010000   add ecx, 0x100
0x00017cb7      c1e903         shr ecx, 3
0x00017cba      f348ab         rep stosq qword [rdi], rax
0x00017cbd      4889e9         mov rcx, rbp
0x00017cc0      4889df         mov rdi, rbx
0x00017cc3      498b742448     mov rsi, qword [r12 + 0x48]
0x00017cc8      488d5618       lea rdx, [rsi + 0x18]
0x00017ccc      4883c610       add rsi, 0x10
0x00017cd0      e8fb84ffff     call sym.re_compile_fastmap_iter.isra.30
0x00017cd5      498b442450     mov rax, qword [r12 + 0x50]
0x00017cda      4939442448     cmp qword [r12 + 0x48], rax
0x00017cdf      7418           je 0x17cf9
0x00017ce1      488d5018       lea rdx, [rax + 0x18]
0x00017ce5      488d7010       lea rsi, [rax + 0x10]
0x00017ce9      4889e9         mov rcx, rbp
0x00017cec      4889df         mov rdi, rbx
0x00017cef      e8dc84ffff     call sym.re_compile_fastmap_iter.isra.30
0x00017cf4      498b442448     mov rax, qword [r12 + 0x48]
0x00017cf9      498b742458     mov rsi, qword [r12 + 0x58]
0x00017cfe      4839c6         cmp rsi, rax
0x00017d01      7418           je 0x17d1b
0x00017d03      488d5618       lea rdx, [rsi + 0x18]
0x00017d07      4889e9         mov rcx, rbp
0x00017d0a      4883c610       add rsi, 0x10
0x00017d0e      4889df         mov rdi, rbx
0x00017d11      e8ba84ffff     call sym.re_compile_fastmap_iter.isra.30
0x00017d16      498b442448     mov rax, qword [r12 + 0x48]
0x00017d1b      498b742460     mov rsi, qword [r12 + 0x60]
0x00017d20      4839c6         cmp rsi, rax
0x00017d23      7413           je 0x17d38
0x00017d25      488d5618       lea rdx, [rsi + 0x18]
0x00017d29      4889e9         mov rcx, rbp
0x00017d2c      4883c610       add rsi, 0x10
0x00017d30      4889df         mov rdi, rbx
0x00017d33      e89884ffff     call sym.re_compile_fastmap_iter.isra.30
0x00017d38      804b3808       or byte [rbx + 0x38], 8
0x00017d3c      31c0           xor eax, eax
0x00017d3e      5b             pop rbx
0x00017d3f      5d             pop rbp
0x00017d40      415c           pop r12
0x00017d42      c3             ret
0x00017d43      0f1f00         nop dword [rax]
0x00017d46      662e0f1f8400.  nop word cs:[rax + rax]
;-- re_search_stub:
0x00017d50      4157           push r15
0x00017d52      4156           push r14
0x00017d54      4c89c0         mov rax, r8
0x00017d57      4155           push r13
0x00017d59      4154           push r12
0x00017d5b      4901c8         add r8, rcx
0x00017d5e      55             push rbp
0x00017d5f      53             push rbx
0x00017d60      4883ec38       sub rsp, 0x38
0x00017d64      4885c9         test rcx, rcx
0x00017d67      8b5c2478       mov ebx, dword [rsp + 0x78]
0x00017d6b      4c8b642470     mov r12, qword [rsp + 0x70]
0x00017d70      895c2428       mov dword [rsp + 0x28], ebx
0x00017d74      0f8836030000   js 0x180b0
0x00017d7a      4839d1         cmp rcx, rdx
0x00017d7d      0f8f2d030000   jg 0x180b0
0x00017d83      4939d0         cmp r8, rdx
0x00017d86      4889cb         mov rbx, rcx
0x00017d89      4989ff         mov r15, rdi
0x00017d8c      0f8f7e020000   jg 0x18010
0x00017d92      4885c0         test rax, rax
0x00017d95      7809           js 0x17da0
0x00017d97      4c39c1         cmp rcx, r8
0x00017d9a      0f8f70020000   jg 0x18010
0x00017da0      4d85c0         test r8, r8
0x00017da3      0f88df020000   js 0x18088
0x00017da9      4885c0         test rax, rax
0x00017dac      7909           jns 0x17db7
0x00017dae      4c39c3         cmp rbx, r8
0x00017db1      0f8ed1020000   jle 0x18088
0x00017db7      410fb64738     movzx eax, byte [r15 + 0x38]
0x00017dbc      4189c5         mov r13d, eax
0x00017dbf      41c0ed05       shr r13b, 5
0x00017dc3      4489ef         mov edi, r13d
0x00017dc6      83e703         and edi, 3
0x00017dc9      4939d8         cmp r8, rbx
0x00017dcc      897c242c       mov dword [rsp + 0x2c], edi
0x00017dd0      7e0f           jle 0x17de1
0x00017dd2      49837f2000     cmp qword [r15 + 0x20], 0
0x00017dd7      7408           je 0x17de1
0x00017dd9      a808           test al, 8
0x00017ddb      0f84ef010000   je 0x17fd0
0x00017de1      a810           test al, 0x10
0x00017de3      0f85c7010000   jne 0x17fb0
0x00017de9      4d85e4         test r12, r12
0x00017dec      0f84be010000   je 0x17fb0
0x00017df2      83e006         and eax, 6
0x00017df5      498b4f30       mov rcx, qword [r15 + 0x30]
0x00017df9      3c04           cmp al, 4
0x00017dfb      0f848f010000   je 0x17f90
0x00017e01      4c8d7101       lea r14, [rcx + 1]
0x00017e05      4d89f5         mov r13, r14
0x00017e08      4c89f7         mov rdi, r14
0x00017e0b      48c1e704       shl rdi, 4
0x00017e0f      4c894c2420     mov qword [rsp + 0x20], r9
0x00017e14      4889542418     mov qword [rsp + 0x18], rdx
0x00017e19      4889742410     mov qword [rsp + 0x10], rsi
0x00017e1e      4c89442408     mov qword [rsp + 8], r8
0x00017e23      e8f8a0feff     call sym.imp.malloc
0x00017e28      4885c0         test rax, rax
0x00017e2b      4889c5         mov rbp, rax
0x00017e2e      0f848c020000   je 0x180c0
0x00017e34      4883ec08       sub rsp, 8
0x00017e38      4889d9         mov rcx, rbx
0x00017e3b      4c89ff         mov rdi, r15
0x00017e3e      8b442434       mov eax, dword [rsp + 0x34]
0x00017e42      50             push rax
0x00017e43      55             push rbp
0x00017e44      4156           push r14
0x00017e46      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x00017e4b      4c8b442428     mov r8, qword [rsp + 0x28]
0x00017e50      488b542438     mov rdx, qword [rsp + 0x38]
0x00017e55      488b742430     mov rsi, qword [rsp + 0x30]
0x00017e5a      e811abffff     call sym.re_search_internal
0x00017e5f      4883c420       add rsp, 0x20
0x00017e63      85c0           test eax, eax
0x00017e65      7431           je 0x17e98
0x00017e67      83f801         cmp eax, 1
0x00017e6a      49c7c4ffffff.  mov r12, 0xffffffffffffffff
0x00017e71      7407           je 0x17e7a
0x00017e73      49c7c4feffff.  mov r12, 0xfffffffffffffffe
0x00017e7a      4889ef         mov rdi, rbp
0x00017e7d      e8de9dfeff     call sym.imp.free
0x00017e82      4883c438       add rsp, 0x38
0x00017e86      4c89e0         mov rax, r12
0x00017e89      5b             pop rbx
0x00017e8a      5d             pop rbp
0x00017e8b      415c           pop r12
0x00017e8d      415d           pop r13
0x00017e8f      415e           pop r14
0x00017e91      415f           pop r15
0x00017e93      c3             ret
0x00017e94      0f1f4000       nop dword [rax]
0x00017e98      4d85e4         test r12, r12
0x00017e9b      0f84c7000000   je 0x17f68
0x00017ea1      410fb64738     movzx eax, byte [r15 + 0x38]
0x00017ea6      498d5501       lea rdx, [r13 + 1]
0x00017eaa      d0e8           shr al, 1
0x00017eac      83e003         and eax, 3
0x00017eaf      0f846b010000   je 0x18020
0x00017eb5      83f801         cmp eax, 1
0x00017eb8      0f8412020000   je 0x180d0
0x00017ebe      83f802         cmp eax, 2
0x00017ec1      0f85e9020000   jne 0x181b0
0x00017ec7      4d3b3424       cmp r14, qword [r12]
0x00017ecb      0f87c0020000   ja 0x18191
0x00017ed1      41b902000000   mov r9d, 2
0x00017ed7      4d85ed         test r13, r13
0x00017eda      0f8e68020000   jle 0x18148
0x00017ee0      4d8b442408     mov r8, qword [r12 + 8]
0x00017ee5      498b7c2410     mov rdi, qword [r12 + 0x10]
0x00017eea      4a8d34ed0000.  lea rsi, [r13*8]
0x00017ef2      4c89ea         mov rdx, r13
0x00017ef5      31c0           xor eax, eax
0x00017ef7      660f1f840000.  nop word [rax + rax]
0x00017f00      488b4c4500     mov rcx, qword [rbp + rax*2]
0x00017f05      49890c00       mov qword [r8 + rax], rcx
0x00017f09      488b4c4508     mov rcx, qword [rbp + rax*2 + 8]
0x00017f0e      48890c07       mov qword [rdi + rax], rcx
0x00017f12      4883c008       add rax, 8
0x00017f16      4839c6         cmp rsi, rax
0x00017f19      75e5           jne 0x17f00
0x00017f1b      49391424       cmp qword [r12], rdx
0x00017f1f      762c           jbe 0x17f4d
0x00017f21      498b742410     mov rsi, qword [r12 + 0x10]
0x00017f26      498b4c2408     mov rcx, qword [r12 + 8]
0x00017f2b      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00017f32      660f1f440000   nop word [rax + rax]
0x00017f38      488904d6       mov qword [rsi + rdx*8], rax
0x00017f3c      4983c501       add r13, 1
0x00017f40      488904d1       mov qword [rcx + rdx*8], rax
0x00017f44      4d3b2c24       cmp r13, qword [r12]
0x00017f48      4c89ea         mov rdx, r13
0x00017f4b      72eb           jb 0x17f38
0x00017f4d      410fb64738     movzx eax, byte [r15 + 0x38]
0x00017f52      478d2c09       lea r13d, [r9 + r9]
0x00017f56      83e0f9         and eax, 0xfffffff9                     ; 4294967289
0x00017f59      4409e8         or eax, r13d
0x00017f5c      a806           test al, 6
0x00017f5e      41884738       mov byte [r15 + 0x38], al
0x00017f62      0f840bffffff   je 0x17e73
0x00017f68      807c242800     cmp byte [rsp + 0x28], 0
0x00017f6d      4c8b6500       mov r12, qword [rbp]
0x00017f71      0f8403ffffff   je 0x17e7a
0x00017f77      4939dc         cmp r12, rbx
0x00017f7a      0f85f2010000   jne 0x18172
0x00017f80      4c8b6508       mov r12, qword [rbp + 8]
0x00017f84      4929dc         sub r12, rbx
0x00017f87      e9eefeffff     jmp 0x17e7a
0x00017f8c      0f1f4000       nop dword [rax]
0x00017f90      4d8b3424       mov r14, qword [r12]
0x00017f94      4939ce         cmp r14, rcx
0x00017f97      0f8764feffff   ja 0x17e01
0x00017f9d      4d85f6         test r14, r14
0x00017fa0      4d89f5         mov r13, r14
0x00017fa3      0f8f5ffeffff   jg 0x17e08
0x00017fa9      0f1f80000000.  nop dword [rax]
0x00017fb0      bf10000000     mov edi, 0x10
0x00017fb5      41be01000000   mov r14d, 1
0x00017fbb      41bd01000000   mov r13d, 1
0x00017fc1      4531e4         xor r12d, r12d
0x00017fc4      e946feffff     jmp 0x17e0f
0x00017fc9      0f1f80000000.  nop dword [rax]
0x00017fd0      4c89ff         mov rdi, r15
0x00017fd3      4c894c2420     mov qword [rsp + 0x20], r9
0x00017fd8      4889542418     mov qword [rsp + 0x18], rdx
0x00017fdd      4889742410     mov qword [rsp + 0x10], rsi
0x00017fe2      4c89442408     mov qword [rsp + 8], r8
0x00017fe7      e894fcffff     call sym.rpl_re_compile_fastmap
0x00017fec      410fb64738     movzx eax, byte [r15 + 0x38]
0x00017ff1      4c8b4c2420     mov r9, qword [rsp + 0x20]
0x00017ff6      488b542418     mov rdx, qword [rsp + 0x18]
0x00017ffb      488b742410     mov rsi, qword [rsp + 0x10]
0x00018000      4c8b442408     mov r8, qword [rsp + 8]
0x00018005      e9d7fdffff     jmp 0x17de1
0x0001800a      660f1f440000   nop word [rax + rax]
0x00018010      4989d0         mov r8, rdx
0x00018013      e99ffdffff     jmp 0x17db7
0x00018018      0f1f84000000.  nop dword [rax + rax]
0x00018020      4c8d34d50000.  lea r14, [rdx*8]
0x00018028      4889542408     mov qword [rsp + 8], rdx
0x0001802d      4c89f7         mov rdi, r14
0x00018030      e8eb9efeff     call sym.imp.malloc
0x00018035      4885c0         test rax, rax
0x00018038      4989442408     mov qword [r12 + 8], rax
0x0001803d      488b542408     mov rdx, qword [rsp + 8]
0x00018042      0f8412010000   je 0x1815a
0x00018048      4c89f7         mov rdi, r14
0x0001804b      4889542408     mov qword [rsp + 8], rdx
0x00018050      4889442410     mov qword [rsp + 0x10], rax
0x00018055      e8c69efeff     call sym.imp.malloc
0x0001805a      4885c0         test rax, rax
0x0001805d      4989442410     mov qword [r12 + 0x10], rax
0x00018062      488b542408     mov rdx, qword [rsp + 8]
0x00018067      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0001806c      0f84e0000000   je 0x18152
0x00018072      49891424       mov qword [r12], rdx
0x00018076      41b901000000   mov r9d, 1
0x0001807c      e956feffff     jmp 0x17ed7
0x00018081      0f1f80000000.  nop dword [rax]
0x00018088      410fb64738     movzx eax, byte [r15 + 0x38]
0x0001808d      4531c0         xor r8d, r8d
0x00018090      4189c5         mov r13d, eax
0x00018093      41c0ed05       shr r13b, 5
0x00018097      4489ef         mov edi, r13d
0x0001809a      83e703         and edi, 3
0x0001809d      897c242c       mov dword [rsp + 0x2c], edi
0x000180a1      e93bfdffff     jmp 0x17de1
0x000180a6      662e0f1f8400.  nop word cs:[rax + rax]
0x000180b0      49c7c4ffffff.  mov r12, 0xffffffffffffffff
0x000180b7      e9c6fdffff     jmp 0x17e82
0x000180bc      0f1f4000       nop dword [rax]
0x000180c0      49c7c4feffff.  mov r12, 0xfffffffffffffffe
0x000180c7      e9b6fdffff     jmp 0x17e82
0x000180cc      0f1f4000       nop dword [rax]
0x000180d0      49391424       cmp qword [r12], rdx
0x000180d4      41b901000000   mov r9d, 1
0x000180da      0f83f7fdffff   jae 0x17ed7
0x000180e0      488d0cd50000.  lea rcx, [rdx*8]
0x000180e8      498b7c2408     mov rdi, qword [r12 + 8]
0x000180ed      44884c2418     mov byte [rsp + 0x18], r9b
0x000180f2      4889542410     mov qword [rsp + 0x10], rdx
0x000180f7      4889ce         mov rsi, rcx
0x000180fa      48894c2408     mov qword [rsp + 8], rcx
0x000180ff      e88c9efeff     call sym.imp.realloc
0x00018104      4885c0         test rax, rax
0x00018107      4989c6         mov r14, rax
0x0001810a      744e           je 0x1815a
0x0001810c      488b4c2408     mov rcx, qword [rsp + 8]
0x00018111      498b7c2410     mov rdi, qword [r12 + 0x10]
0x00018116      4889ce         mov rsi, rcx
0x00018119      e8729efeff     call sym.imp.realloc
0x0001811e      4885c0         test rax, rax
0x00018121      488b542410     mov rdx, qword [rsp + 0x10]
0x00018126      440fb64c2418   movzx r9d, byte [rsp + 0x18]
0x0001812c      7434           je 0x18162
0x0001812e      4d89742408     mov qword [r12 + 8], r14
0x00018133      4989442410     mov qword [r12 + 0x10], rax
0x00018138      49891424       mov qword [r12], rdx
0x0001813c      e996fdffff     jmp 0x17ed7
0x00018141      0f1f80000000.  nop dword [rax]
0x00018148      31d2           xor edx, edx
0x0001814a      4531ed         xor r13d, r13d
0x0001814d      e9c9fdffff     jmp 0x17f1b
0x00018152      4889cf         mov rdi, rcx
0x00018155      e8069bfeff     call sym.imp.free
0x0001815a      4531c9         xor r9d, r9d
0x0001815d      e9ebfdffff     jmp 0x17f4d
0x00018162      4c89f7         mov rdi, r14
0x00018165      e8f69afeff     call sym.imp.free
0x0001816a      4531c9         xor r9d, r9d
0x0001816d      e9dbfdffff     jmp 0x17f4d
0x00018172      488d0d174b00.  lea rcx, obj.__PRETTY_FUNCTION__.7847   ; 0x1cc90 ; "re_search_stub"
0x00018179      488d35504500.  lea rsi, str..._coreutils_8.31_lib_regexec.c ; 0x1c6d0 ; "../coreutils-8.31/lib/regexec.c"
0x00018180      488d3d6c4600.  lea rdi, str.pmatch_0_.rm_so____start   ; 0x1c7f3 ; "pmatch[0].rm_so == start"
0x00018187      babe010000     mov edx, 0x1be
0x0001818c      e89f9cfeff     call sym.imp.__assert_fail
0x00018191      488d0de84a00.  lea rcx, obj.__PRETTY_FUNCTION__.7859   ; 0x1cc80 ; "re_copy_regs"
0x00018198      488d35314500.  lea rsi, str..._coreutils_8.31_lib_regexec.c ; 0x1c6d0 ; "../coreutils-8.31/lib/regexec.c"
0x0001819f      488d3d354600.  lea rdi, str.regs__num_regs____nregs    ; 0x1c7db ; "regs->num_regs >= nregs"
0x000181a6      bafb010000     mov edx, 0x1fb
0x000181ab      e8809cfeff     call sym.imp.__assert_fail
0x000181b0      488d0dc94a00.  lea rcx, obj.__PRETTY_FUNCTION__.7859   ; 0x1cc80 ; "re_copy_regs"
0x000181b7      488d35124500.  lea rsi, str..._coreutils_8.31_lib_regexec.c ; 0x1c6d0 ; "../coreutils-8.31/lib/regexec.c"
0x000181be      488d3df94500.  lea rdi, str.regs_allocated____REGS_FIXED ; 0x1c7be ; "regs_allocated == REGS_FIXED"
0x000181c5      baf9010000     mov edx, 0x1f9
0x000181ca      e8619cfeff     call sym.imp.__assert_fail
0x000181cf      90             nop
;-- re_search_2_stub:
0x000181d0      4157           push r15
0x000181d2      4156           push r14
0x000181d4      4155           push r13
0x000181d6      4154           push r12
0x000181d8      4989fc         mov r12, rdi
0x000181db      55             push rbp
0x000181dc      53             push rbx
0x000181dd      4c89c5         mov rbp, r8
0x000181e0      4889d3         mov rbx, rdx
0x000181e3      4889ea         mov rdx, rbp
0x000181e6      4883ec28       sub rsp, 0x28
0x000181ea      48c1ea3f       shr rdx, 0x3f
0x000181ee      488b442470     mov rax, qword [rsp + 0x70]
0x000181f3      89d7           mov edi, edx
0x000181f5      448b442478     mov r8d, dword [rsp + 0x78]
0x000181fa      48c1e83f       shr rax, 0x3f
0x000181fe      4008c7         or dil, al
0x00018201      0f85c9000000   jne 0x182d0
0x00018207      4885db         test rbx, rbx
0x0001820a      0f88c0000000   js 0x182d0
0x00018210      4989df         mov r15, rbx
0x00018213      4901ef         add r15, rbp
0x00018216      0f80b4000000   jo 0x182d0
0x0001821c      4885ed         test rbp, rbp
0x0001821f      4989ce         mov r14, rcx
0x00018222      4c89c9         mov rcx, r9
0x00018225      0f84b5000000   je 0x182e0
0x0001822b      4531ed         xor r13d, r13d
0x0001822e      4885db         test rbx, rbx
0x00018231      4889742408     mov qword [rsp + 8], rsi
0x00018236      7548           jne 0x18280
0x00018238      450fb6c0       movzx r8d, r8b
0x0001823c      4c89fa         mov rdx, r15
0x0001823f      4c89f6         mov rsi, r14
0x00018242      4150           push r8
0x00018244      ff742470       push qword [rsp + 0x70]
0x00018248      4c89e7         mov rdi, r12
0x0001824b      4c8b8c248000.  mov r9, qword [rsp + 0x80]
0x00018253      4c8b442470     mov r8, qword [rsp + 0x70]
0x00018258      e8f3faffff     call sym.re_search_stub
0x0001825d      4c89ef         mov rdi, r13
0x00018260      4889c3         mov rbx, rax
0x00018263      e8f899feff     call sym.imp.free
0x00018268      58             pop rax
0x00018269      5a             pop rdx
0x0001826a      4883c428       add rsp, 0x28
0x0001826e      4889d8         mov rax, rbx
0x00018271      5b             pop rbx
0x00018272      5d             pop rbp
0x00018273      415c           pop r12
0x00018275      415d           pop r13
0x00018277      415e           pop r14
0x00018279      415f           pop r15
0x0001827b      c3             ret
0x0001827c      0f1f4000       nop dword [rax]
0x00018280      4c89ff         mov rdi, r15
0x00018283      448944241c     mov dword [rsp + 0x1c], r8d
0x00018288      4c894c2410     mov qword [rsp + 0x10], r9
0x0001828d      e88e9cfeff     call sym.imp.malloc
0x00018292      4885c0         test rax, rax
0x00018295      4989c5         mov r13, rax
0x00018298      7436           je 0x182d0
0x0001829a      488b742408     mov rsi, qword [rsp + 8]
0x0001829f      4889da         mov rdx, rbx
0x000182a2      4889c7         mov rdi, rax
0x000182a5      e8369cfeff     call sym.imp.memcpy
0x000182aa      498d7c1d00     lea rdi, [r13 + rbx]
0x000182af      4c89f6         mov rsi, r14
0x000182b2      4889ea         mov rdx, rbp
0x000182b5      4d89ee         mov r14, r13
0x000182b8      e8239cfeff     call sym.imp.memcpy
0x000182bd      488b4c2410     mov rcx, qword [rsp + 0x10]
0x000182c2      448b44241c     mov r8d, dword [rsp + 0x1c]
0x000182c7      e96cffffff     jmp 0x18238
0x000182cc      0f1f4000       nop dword [rax]
0x000182d0      48c7c3feffff.  mov rbx, 0xfffffffffffffffe
0x000182d7      eb91           jmp 0x1826a
0x000182d9      0f1f80000000.  nop dword [rax]
0x000182e0      4989f6         mov r14, rsi
0x000182e3      4531ed         xor r13d, r13d
0x000182e6      e94dffffff     jmp 0x18238
0x000182eb      0f1f440000     nop dword [rax + rax]
;-- rpl_regcomp:
0x000182f0      89d0           mov eax, edx
0x000182f2      4156           push r14
0x000182f4      4155           push r13
0x000182f6      83e001         and eax, 1
0x000182f9      4154           push r12
0x000182fb      55             push rbp
0x000182fc      83f801         cmp eax, 1
0x000182ff      53             push rbx
0x00018300      4889fb         mov rbx, rdi
0x00018303      4d19f6         sbb r14, r14
0x00018306      48c707000000.  mov qword [rdi], 0
0x0001830d      48c747080000.  mov qword [rdi + 8], 0
0x00018315      4181e6ca4ffd.  and r14d, 0xfd4fca
0x0001831c      48c747100000.  mov qword [rdi + 0x10], 0
0x00018324      bf00010000     mov edi, 0x100
0x00018329      4989f4         mov r12, rsi
0x0001832c      89d5           mov ebp, edx
0x0001832e      4981c6fcb203.  add r14, 0x3b2fc
0x00018335      e8e69bfeff     call sym.imp.malloc
0x0001833a      4885c0         test rax, rax
0x0001833d      48894320       mov qword [rbx + 0x20], rax
0x00018341      0f84a9000000   je 0x183f0
0x00018347      4989ed         mov r13, rbp
0x0001834a      49c1e515       shl r13, 0x15
0x0001834e      4181e5000040.  and r13d, 0x400000
0x00018355      4d09f5         or r13, r14
0x00018358      40f6c504       test bpl, 4
0x0001835c      7562           jne 0x183c0
0x0001835e      8063387f       and byte [rbx + 0x38], 0x7f             ; [0x7f:1]=0
0x00018362      0fb65338       movzx edx, byte [rbx + 0x38]
0x00018366      c1ed03         shr ebp, 3
0x00018369      4c89e7         mov rdi, r12
0x0001836c      83e501         and ebp, 1
0x0001836f      48c743280000.  mov qword [rbx + 0x28], 0
0x00018377      c1e504         shl ebp, 4
0x0001837a      83e2ef         and edx, 0xffffffef                     ; 4294967279
0x0001837d      09d5           or ebp, edx
0x0001837f      40886b38       mov byte [rbx + 0x38], bpl
0x00018383      e8189afeff     call sym.imp.strlen
0x00018388      4c89e9         mov rcx, r13
0x0001838b      4889c2         mov rdx, rax
0x0001838e      4c89e6         mov rsi, r12
0x00018391      4889df         mov rdi, rbx
0x00018394      e867e7ffff     call sym.re_compile_internal
0x00018399      83f810         cmp eax, 0x10
0x0001839c      89c5           mov ebp, eax
0x0001839e      7438           je 0x183d8
0x000183a0      85c0           test eax, eax
0x000183a2      7539           jne 0x183dd
0x000183a4      4889df         mov rdi, rbx
0x000183a7      e8d4f8ffff     call sym.rpl_re_compile_fastmap
0x000183ac      5b             pop rbx
0x000183ad      89e8           mov eax, ebp
0x000183af      5d             pop rbp
0x000183b0      415c           pop r12
0x000183b2      415d           pop r13
0x000183b4      415e           pop r14
0x000183b6      c3             ret
0x000183b7      660f1f840000.  nop word [rax + rax]
0x000183c0      4983e5bf       and r13, 0xffffffffffffffbf
0x000183c4      804b3880       or byte [rbx + 0x38], 0x80              ; [0x80:1]=56
0x000183c8      4981cd000100.  or r13, 0x100
0x000183cf      eb91           jmp 0x18362
0x000183d1      0f1f80000000.  nop dword [rax]
0x000183d8      bd08000000     mov ebp, 8
0x000183dd      488b7b20       mov rdi, qword [rbx + 0x20]
0x000183e1      e87a98feff     call sym.imp.free
0x000183e6      48c743200000.  mov qword [rbx + 0x20], 0
0x000183ee      ebbc           jmp 0x183ac
0x000183f0      bd0c000000     mov ebp, 0xc
0x000183f5      5b             pop rbx
0x000183f6      89e8           mov eax, ebp
0x000183f8      5d             pop rbp
0x000183f9      415c           pop r12
0x000183fb      415d           pop r13
0x000183fd      415e           pop r14
0x000183ff      c3             ret
;-- rpl_regerror:
0x00018400      4155           push r13
0x00018402      4154           push r12
0x00018404      55             push rbp
0x00018405      53             push rbx
0x00018406      4883ec08       sub rsp, 8
0x0001840a      83ff10         cmp edi, 0x10
0x0001840d      7761           ja 0x18470
0x0001840f      488d050a4900.  lea rax, obj.__re_error_msgid_idx       ; 0x1cd20
0x00018416      4863ff         movsxd rdi, edi
0x00018419      488d35a04900.  lea rsi, obj.__re_error_msgid           ; 0x1cdc0 ; "Success"
0x00018420      4889d5         mov rbp, rdx
0x00018423      ba05000000     mov edx, 5
0x00018428      4989cc         mov r12, rcx
0x0001842b      480334f8       add rsi, qword [rax + rdi*8]
0x0001842f      31ff           xor edi, edi
0x00018431      e84a99feff     call sym.imp.dcgettext
0x00018436      4889c7         mov rdi, rax
0x00018439      4989c5         mov r13, rax
0x0001843c      e85f99feff     call sym.imp.strlen
0x00018441      4d85e4         test r12, r12
0x00018444      488d5801       lea rbx, [rax + 1]
0x00018448      7413           je 0x1845d
0x0001844a      4c39e3         cmp rbx, r12
0x0001844d      4889da         mov rdx, rbx
0x00018450      7726           ja 0x18478
0x00018452      4c89ee         mov rsi, r13
0x00018455      4889ef         mov rdi, rbp
0x00018458      e8839afeff     call sym.imp.memcpy
0x0001845d      4883c408       add rsp, 8
0x00018461      4889d8         mov rax, rbx
0x00018464      5b             pop rbx
0x00018465      5d             pop rbp
0x00018466      415c           pop r12
0x00018468      415d           pop r13
0x0001846a      c3             ret
0x0001846b      0f1f440000     nop dword [rax + rax]
0x00018470      e8fb97feff     call sym.imp.abort
0x00018475      0f1f00         nop dword [rax]
0x00018478      498d5424ff     lea rdx, [r12 - 1]
0x0001847d      42c64425ff00   mov byte [rbp + r12 - 1], 0
0x00018483      ebcd           jmp 0x18452
0x00018485      90             nop
0x00018486      662e0f1f8400.  nop word cs:[rax + rax]
;-- rpl_regfree:
0x00018490      53             push rbx
0x00018491      4889fb         mov rbx, rdi
0x00018494      488b3f         mov rdi, qword [rdi]
0x00018497      4885ff         test rdi, rdi
0x0001849a      7405           je 0x184a1
0x0001849c      e8df37ffff     call sym.free_dfa_content
0x000184a1      488b7b20       mov rdi, qword [rbx + 0x20]
0x000184a5      48c703000000.  mov qword [rbx], 0
0x000184ac      48c743080000.  mov qword [rbx + 8], 0
0x000184b4      e8a797feff     call sym.imp.free
0x000184b9      488b7b28       mov rdi, qword [rbx + 0x28]
0x000184bd      48c743200000.  mov qword [rbx + 0x20], 0
0x000184c5      e89697feff     call sym.imp.free
0x000184ca      48c743280000.  mov qword [rbx + 0x28], 0
0x000184d2      5b             pop rbx
0x000184d3      c3             ret
0x000184d4      6690           nop
0x000184d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- rpl_regexec:
0x000184e0      41f7c0f8ffff.  test r8d, 0xfffffff8                    ; 4294967288
0x000184e7      0f858b000000   jne 0x18578
0x000184ed      4155           push r13
0x000184ef      4154           push r12
0x000184f1      4989d5         mov r13, rdx
0x000184f4      55             push rbp
0x000184f5      53             push rbx
0x000184f6      4989cc         mov r12, rcx
0x000184f9      4489c3         mov ebx, r8d
0x000184fc      4889fd         mov rbp, rdi
0x000184ff      4883ec18       sub rsp, 0x18
0x00018503      41f6c004       test r8b, 4
0x00018507      754f           jne 0x18558
0x00018509      4889f7         mov rdi, rsi
0x0001850c      4889742408     mov qword [rsp + 8], rsi
0x00018511      e88a98feff     call sym.imp.strlen
0x00018516      31c9           xor ecx, ecx
0x00018518      f6453810       test byte [rbp + 0x38], 0x10
0x0001851c      4889c2         mov rdx, rax
0x0001851f      488b742408     mov rsi, qword [rsp + 8]
0x00018524      7440           je 0x18566
0x00018526      4883ec08       sub rsp, 8
0x0001852a      53             push rbx
0x0001852b      6a00           push 0
0x0001852d      6a00           push 0
0x0001852f      4889ef         mov rdi, rbp
0x00018532      4989d1         mov r9, rdx
0x00018535      4989d0         mov r8, rdx
0x00018538      e833a4ffff     call sym.re_search_internal
0x0001853d      4883c420       add rsp, 0x20
0x00018541      85c0           test eax, eax
0x00018543      0f95c0         setne al
0x00018546      4883c418       add rsp, 0x18
0x0001854a      5b             pop rbx
0x0001854b      0fb6c0         movzx eax, al
0x0001854e      5d             pop rbp
0x0001854f      415c           pop r12
0x00018551      415d           pop r13
0x00018553      c3             ret
0x00018554      0f1f4000       nop dword [rax]
0x00018558      f6453810       test byte [rbp + 0x38], 0x10
0x0001855c      488b09         mov rcx, qword [rcx]
0x0001855f      498b542408     mov rdx, qword [r12 + 8]
0x00018564      75c0           jne 0x18526
0x00018566      4883ec08       sub rsp, 8
0x0001856a      53             push rbx
0x0001856b      4154           push r12
0x0001856d      4155           push r13
0x0001856f      ebbe           jmp 0x1852f
0x00018571      0f1f80000000.  nop dword [rax]
0x00018578      b802000000     mov eax, 2
0x0001857d      c3             ret
0x0001857e      6690           nop
;-- rpl_re_match:
0x00018580      4883ec08       sub rsp, 8
0x00018584      4989d1         mov r9, rdx
0x00018587      6a01           push 1
0x00018589      4150           push r8
0x0001858b      4531c0         xor r8d, r8d
0x0001858e      e8bdf7ffff     call sym.re_search_stub
0x00018593      4883c418       add rsp, 0x18
0x00018597      c3             ret
0x00018598      0f1f84000000.  nop dword [rax + rax]
;-- rpl_re_search:
0x000185a0      4883ec08       sub rsp, 8
0x000185a4      6a00           push 0
0x000185a6      4151           push r9
0x000185a8      4989d1         mov r9, rdx
0x000185ab      e8a0f7ffff     call sym.re_search_stub
0x000185b0      4883c418       add rsp, 0x18
0x000185b4      c3             ret
0x000185b5      90             nop
0x000185b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- rpl_re_match_2:
0x000185c0      4883ec08       sub rsp, 8
0x000185c4      6a01           push 1
0x000185c6      ff742420       push qword [rsp + 0x20]
0x000185ca      ff742420       push qword [rsp + 0x20]
0x000185ce      6a00           push 0
0x000185d0      e8fbfbffff     call sym.re_search_2_stub
0x000185d5      4883c428       add rsp, 0x28
0x000185d9      c3             ret
0x000185da      660f1f440000   nop word [rax + rax]
;-- rpl_re_search_2:
0x000185e0      4883ec08       sub rsp, 8
0x000185e4      6a00           push 0
0x000185e6      ff742428       push qword [rsp + 0x28]
0x000185ea      ff742428       push qword [rsp + 0x28]
0x000185ee      ff742428       push qword [rsp + 0x28]
0x000185f2      e8d9fbffff     call sym.re_search_2_stub
0x000185f7      4883c428       add rsp, 0x28
0x000185fb      c3             ret
0x000185fc      0f1f4000       nop dword [rax]
;-- rpl_re_set_registers:
0x00018600      4885d2         test rdx, rdx
0x00018603      7523           jne 0x18628
0x00018605      806738f9       and byte [rdi + 0x38], 0xf9             ; [0xf9:1]=8
0x00018609      48c706000000.  mov qword [rsi], 0
0x00018610      48c746100000.  mov qword [rsi + 0x10], 0
0x00018618      48c746080000.  mov qword [rsi + 8], 0
0x00018620      c3             ret
0x00018621      0f1f80000000.  nop dword [rax]
0x00018628      0fb64738       movzx eax, byte [rdi + 0x38]
0x0001862c      83e0f9         and eax, 0xfffffff9                     ; 4294967289
0x0001862f      83c802         or eax, 2
0x00018632      884738         mov byte [rdi + 0x38], al
0x00018635      488916         mov qword [rsi], rdx
0x00018638      48894e08       mov qword [rsi + 8], rcx
0x0001863c      4c894610       mov qword [rsi + 0x10], r8
0x00018640      c3             ret
0x00018641      662e0f1f8400.  nop word cs:[rax + rax]
0x0001864b      0f1f440000     nop dword [rax + rax]
;-- c_strcasecmp:
0x00018650      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/c-strcasecmp.c:28
0x00018652      4839f7         cmp rdi, rsi                            ; ../coreutils-8.31/lib/c-strcasecmp.c:33
0x00018655      7515           jne 0x1866c
0x00018657      eb43           jmp 0x1869c
0x00018659      0f1f80000000.  nop dword [rax]
0x00018660      4883c701       add rdi, 1                              ; ../coreutils-8.31/lib/c-strcasecmp.c:44
0x00018664      4883c601       add rsi, 1                              ; ../coreutils-8.31/lib/c-strcasecmp.c:45
0x00018668      38d0           cmp al, dl                              ; ../coreutils-8.31/lib/c-strcasecmp.c:47
0x0001866a      7528           jne 0x18694
0x0001866c      0fb607         movzx eax, byte [rdi]                   ; ../coreutils-8.31/lib/c-strcasecmp.c:38
0x0001866f      89c2           mov edx, eax
0x00018671      8d4820         lea ecx, [rax + 0x20]                   ; ../coreutils-8.31/lib/c-ctype.h:342
0x00018674      83ea41         sub edx, 0x41                           ; ../coreutils-8.31/lib/c-ctype.h:339
0x00018677      80fa1a         cmp dl, 0x1a                            ; ../coreutils-8.31/lib/c-ctype.h:342
0x0001867a      0fb616         movzx edx, byte [rsi]                   ; ../coreutils-8.31/lib/c-strcasecmp.c:39
0x0001867d      0f42c1         cmovb eax, ecx                          ; ../coreutils-8.31/lib/c-ctype.h:342
0x00018680      89d1           mov ecx, edx                            ; ../coreutils-8.31/lib/c-strcasecmp.c:39
0x00018682      448d4a20       lea r9d, [rdx + 0x20]                   ; ../coreutils-8.31/lib/c-ctype.h:342
0x00018686      83e941         sub ecx, 0x41                           ; ../coreutils-8.31/lib/c-ctype.h:339
0x00018689      80f91a         cmp cl, 0x1a                            ; ../coreutils-8.31/lib/c-ctype.h:342
0x0001868c      410f42d1       cmovb edx, r9d
0x00018690      84c0           test al, al                             ; ../coreutils-8.31/lib/c-strcasecmp.c:41
0x00018692      75cc           jne 0x18660
0x00018694      0fb6c0         movzx eax, al                           ; ../coreutils-8.31/lib/c-strcasecmp.c:50
0x00018697      0fb6d2         movzx edx, dl
0x0001869a      29d0           sub eax, edx
0x0001869c      f3c3           ret                                     ; ../coreutils-8.31/lib/c-strcasecmp.c:56
0x0001869e      6690           nop
;-- close_stream:
0x000186a0      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x000186a2      55             push rbp
0x000186a3      4889fd         mov rbp, rdi
0x000186a6      53             push rbx
0x000186a7      e81496feff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x000186ac      8b5d00         mov ebx, dword [rbp]
0x000186af      4889ef         mov rdi, rbp
0x000186b2      4989c4         mov r12, rax
0x000186b5      e8d61bffff     call sym.rpl_fclose
0x000186ba      83e320         and ebx, 0x20                           ; "@"
0x000186bd      85db           test ebx, ebx
0x000186bf      7517           jne 0x186d8
0x000186c1      85c0           test eax, eax
0x000186c3      740a           je 0x186cf                              ; stdio.h:-186
0x000186c5      4d85e4         test r12, r12                           ; stdio.h:-178
0x000186c8      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000186cd      7439           je 0x18708
0x000186cf      5b             pop rbx
0x000186d0      5d             pop rbp
0x000186d1      415c           pop r12
0x000186d3      c3             ret
0x000186d4      0f1f4000       nop dword [rax]
0x000186d8      85c0           test eax, eax
0x000186da      751c           jne 0x186f8
0x000186dc      e89f95feff     call sym.imp.__errno_location
0x000186e1      c70000000000   mov dword [rax], 0
0x000186e7      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000186ec      5b             pop rbx
0x000186ed      5d             pop rbp
0x000186ee      415c           pop r12
0x000186f0      c3             ret
0x000186f1      0f1f80000000.  nop dword [rax]
0x000186f8      5b             pop rbx
0x000186f9      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000186fe      5d             pop rbp                                 ; stdio.h:-186
0x000186ff      415c           pop r12
0x00018701      c3             ret
0x00018702      660f1f440000   nop word [rax + rax]
0x00018708      e87395feff     call sym.imp.__errno_location
0x0001870d      833809         cmp dword [rax], 9
0x00018710      5b             pop rbx
0x00018711      5d             pop rbp
0x00018712      415c           pop r12                                 ; stdio.h:-178
0x00018714      0f95c0         setne al
0x00018717      0fb6c0         movzx eax, al
0x0001871a      f7d8           neg eax
0x0001871c      c3             ret
0x0001871d      0f1f00         nop dword [rax]
;-- hard_locale:
0x00018720      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00018724      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00018726      e87598feff     call sym.imp.setlocale
0x0001872b      4889c2         mov rdx, rax
0x0001872e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00018733      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00018736      741d           je 0x18755
0x00018738      488d3d114800.  lea rdi, [0x0001cf50]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x0001873f      b902000000     mov ecx, 2
0x00018744      4889d6         mov rsi, rdx
0x00018747      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00018749      0f97c1         seta cl
0x0001874c      80d900         sbb cl, 0
0x0001874f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00018751      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00018753      750b           jne 0x18760
0x00018755      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00018759      c3             ret
0x0001875a      660f1f440000   nop word [rax + rax]
0x00018760      488d3deb4700.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x1cf52 ; "POSIX"
0x00018767      b906000000     mov ecx, 6
0x0001876c      4889d6         mov rsi, rdx
0x0001876f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00018771      0f97c0         seta al
0x00018774      1c00           sbb al, 0
0x00018776      84c0           test al, al
0x00018778      0f95c0         setne al
0x0001877b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0001877f      c3             ret
;-- locale_charset:
0x00018780      4883ec08       sub rsp, 8
0x00018784      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00018789      e8c297feff     call sym.imp.nl_langinfo
0x0001878e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00018791      741d           je 0x187b0
0x00018793      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00018796      488d15bb4700.  lea rdx, str.ASCII                      ; 0x1cf58 ; "ASCII"
0x0001879d      480f44c2       cmove rax, rdx
0x000187a1      4883c408       add rsp, 8
0x000187a5      c3             ret
0x000187a6      662e0f1f8400.  nop word cs:[rax + rax]
0x000187b0      488d05a14700.  lea rax, str.ASCII                      ; 0x1cf58 ; "ASCII"
0x000187b7      4883c408       add rsp, 8
0x000187bb      c3             ret
0x000187bc      0f1f4000       nop dword [rax]
;-- mb_width_aux:
0x000187c0      53             push rbx                                ; ../coreutils-8.31/lib/mbchar.h:248
0x000187c1      89fb           mov ebx, edi
0x000187c3      e83897feff     call sym.imp.wcwidth                    ; ../coreutils-8.31/lib/mbchar.h:249
0x000187c8      85c0           test eax, eax                           ; ../coreutils-8.31/lib/mbchar.h:252
0x000187ca      7804           js 0x187d0
0x000187cc      5b             pop rbx                                 ; ../coreutils-8.31/lib/mbchar.h:253
0x000187cd      c3             ret
0x000187ce      6690           nop
0x000187d0      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/mbchar.h:252
0x000187d2      e83995feff     call sym.imp.iswcntrl
0x000187d7      85c0           test eax, eax
0x000187d9      0f94c0         sete al
0x000187dc      0fb6c0         movzx eax, al
0x000187df      5b             pop rbx                                 ; ../coreutils-8.31/lib/mbchar.h:253
0x000187e0      c3             ret
0x000187e1      0f1f440000     nop dword [rax + rax]
0x000187e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- mb_copy:
0x000187f0      55             push rbp                                ; ../coreutils-8.31/lib/mbchar.h:269
0x000187f1      53             push rbx
0x000187f2      4889f3         mov rbx, rsi
0x000187f5      488d4318       lea rax, [rbx + 0x18]                   ; ../coreutils-8.31/lib/mbchar.h:270
0x000187f9      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/mbchar.h:269
0x000187fc      4883ec08       sub rsp, 8
0x00018800      488b36         mov rsi, qword [rsi]                    ; ../coreutils-8.31/lib/mbchar.h:270
0x00018803      488b5308       mov rdx, qword [rbx + 8]
0x00018807      4839c6         cmp rsi, rax
0x0001880a      7424           je 0x18830
0x0001880c      488937         mov qword [rdi], rsi                    ; ../coreutils-8.31/lib/mbchar.h:276
0x0001880f      0fb64310       movzx eax, byte [rbx + 0x10]            ; ../coreutils-8.31/lib/mbchar.h:278
0x00018813      48895508       mov qword [rbp + 8], rdx                ; ../coreutils-8.31/lib/mbchar.h:277
0x00018817      84c0           test al, al                             ; ../coreutils-8.31/lib/mbchar.h:278
0x00018819      884510         mov byte [rbp + 0x10], al
0x0001881c      7406           je 0x18824
0x0001881e      8b4314         mov eax, dword [rbx + 0x14]             ; ../coreutils-8.31/lib/mbchar.h:279
0x00018821      894514         mov dword [rbp + 0x14], eax
0x00018824      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/mbchar.h:280
0x00018828      5b             pop rbx
0x00018829      5d             pop rbp
0x0001882a      c3             ret
0x0001882b      0f1f440000     nop dword [rax + rax]
0x00018830      488d4f18       lea rcx, [rdi + 0x18]                   ; ../coreutils-8.31/lib/mbchar.h:272
0x00018834      4889cf         mov rdi, rcx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00018837      e8a496feff     call sym.imp.memcpy
0x0001883c      488b5308       mov rdx, qword [rbx + 8]
0x00018840      48894500       mov qword [rbp], rax                    ; ../coreutils-8.31/lib/mbchar.h:273
0x00018844      ebc9           jmp 0x1880f
0x00018846      662e0f1f8400.  nop word cs:[rax + rax]
;-- is_basic:
0x00018850      89f8           mov eax, edi                            ; ../coreutils-8.31/lib/mbchar.h:317
0x00018852      488d15074700.  lea rdx, obj.is_basic_table             ; 0x1cf60
0x00018859      89f9           mov ecx, edi
0x0001885b      c0e805         shr al, 5
0x0001885e      83e11f         and ecx, 0x1f
0x00018861      83e007         and eax, 7
0x00018864      8b0482         mov eax, dword [rdx + rax*4]
0x00018867      d3e8           shr eax, cl
0x00018869      83e001         and eax, 1                              ; ../coreutils-8.31/lib/mbchar.h:319
0x0001886c      c3             ret                                     ; ../coreutils-8.31/lib/mbchar.h:320
0x0001886d      0f1f00         nop dword [rax]
;-- knuth_morris_pratt:
0x00018870      55             push rbp                                ; ../coreutils-8.31/lib/str-kmp.h:38
0x00018871      4889e5         mov rbp, rsp
0x00018874      4154           push r12
0x00018876      53             push rbx
0x00018877      4989d4         mov r12, rdx
0x0001887a      ba08000000     mov edx, 8                              ; ../coreutils-8.31/lib/str-kmp.h:42
0x0001887f      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/str-kmp.h:38
0x00018882      4883ec20       sub rsp, 0x20
0x00018886      64488b042528.  mov rax, qword fs:[0x28]
0x0001888f      488945e8       mov qword [rbp - 0x18], rax
0x00018893      31c0           xor eax, eax
0x00018895      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/str-kmp.h:42
0x00018898      49f7e4         mul r12
0x0001889b      0f806c010000   jo 0x18a0d
0x000188a1      31ff           xor edi, edi
0x000188a3      4885c0         test rax, rax
0x000188a6      0f88d4000000   js 0x18980
0x000188ac      4885ff         test rdi, rdi
0x000188af      0f85cb000000   jne 0x18980
0x000188b5      4a8d3ce50000.  lea rdi, [r12*8]
0x000188bd      4881ffa00f00.  cmp rdi, 0xfa0
0x000188c4      0f871e010000   ja 0x189e8
0x000188ca      4883c73d       add rdi, 0x3d
0x000188ce      4883e7f0       and rdi, 0xfffffffffffffff0
0x000188d2      4829fc         sub rsp, rdi
0x000188d5      488d7c240f     lea rdi, [rsp + 0xf]
0x000188da      4883e7f0       and rdi, 0xfffffffffffffff0
0x000188de      4883c71f       add rdi, 0x1f
0x000188e2      4883e7e0       and rdi, 0xffffffffffffffe0
0x000188e6      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/str-kmp.h:43
0x000188e9      0f8491000000   je 0x18980
0x000188ef      4983fc02       cmp r12, 2                              ; ../coreutils-8.31/lib/str-kmp.h:67
0x000188f3      48c747080100.  mov qword [rdi + 8], 1                  ; ../coreutils-8.31/lib/str-kmp.h:64
0x000188fb      7644           jbe 0x18941                             ; ../coreutils-8.31/lib/str-kmp.h:67
0x000188fd      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/str-kmp.h:65
0x000188ff      41b802000000   mov r8d, 2                              ; ../coreutils-8.31/lib/str-kmp.h:67
0x00018905      0f1f00         nop dword [rax]
0x00018908      420fb64406ff   movzx eax, byte [rsi + r8 - 1]          ; ../coreutils-8.31/lib/str-kmp.h:73
0x0001890e      3a0416         cmp al, byte [rsi + rdx]                ; ../coreutils-8.31/lib/str-kmp.h:80
0x00018911      751a           jne 0x1892d
0x00018913      e9b8000000     jmp 0x189d0
0x00018918      0f1f84000000.  nop dword [rax + rax]
0x00018920      482b14d7       sub rdx, qword [rdi + rdx*8]            ; ../coreutils-8.31/lib/str-kmp.h:106
0x00018924      380416         cmp byte [rsi + rdx], al                ; ../coreutils-8.31/lib/str-kmp.h:80
0x00018927      0f84a3000000   je 0x189d0
0x0001892d      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/str-kmp.h:89
0x00018930      75ee           jne 0x18920
0x00018932      4e8904c7       mov qword [rdi + r8*8], r8              ; ../coreutils-8.31/lib/str-kmp.h:92
0x00018936      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/str-kmp.h:93
0x00018938      4983c001       add r8, 1                               ; ../coreutils-8.31/lib/str-kmp.h:67
0x0001893c      4d39c4         cmp r12, r8
0x0001893f      75c7           jne 0x18908
0x00018941      48c701000000.  mov qword [rcx], 0                      ; ../coreutils-8.31/lib/str-kmp.h:118
0x00018948      0fb613         movzx edx, byte [rbx]
0x0001894b      4989d8         mov r8, rbx                             ; ../coreutils-8.31/lib/str-kmp.h:123
0x0001894e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/str-kmp.h:119
0x00018950      84d2           test dl, dl                             ; ../coreutils-8.31/lib/str-kmp.h:123
0x00018952      7418           je 0x1896c
0x00018954      381406         cmp byte [rsi + rax], dl                ; ../coreutils-8.31/lib/str-kmp.h:124
0x00018957      7447           je 0x189a0
0x00018959      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/str-kmp.h:135
0x0001895c      7462           je 0x189c0
0x0001895e      4c8b0cc7       mov r9, qword [rdi + rax*8]             ; ../coreutils-8.31/lib/str-kmp.h:138
0x00018962      4c01cb         add rbx, r9
0x00018965      4c29c8         sub rax, r9                             ; ../coreutils-8.31/lib/str-kmp.h:139
0x00018968      84d2           test dl, dl                             ; ../coreutils-8.31/lib/str-kmp.h:123
0x0001896a      75e8           jne 0x18954
0x0001896c      e87f220000     call sym.freea                          ; ../coreutils-8.31/lib/str-kmp.h:149
0x00018971      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/str-kmp.h:150
0x00018976      eb0a           jmp 0x18982
0x00018978      0f1f84000000.  nop dword [rax + rax]
0x00018980      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/str-kmp.h:44
0x00018982      488b4de8       mov rcx, qword [rbp - 0x18]
0x00018986      6448330c2528.  xor rcx, qword fs:[0x28]
0x0001898f      0f8582000000   jne 0x18a17
0x00018995      488d65f0       lea rsp, [rbp - 0x10]                   ; string_fortified.h:-57
0x00018999      5b             pop rbx
0x0001899a      415c           pop r12                                 ; string_fortified.h:-147
0x0001899c      5d             pop rbp
0x0001899d      c3             ret
0x0001899e      6690           nop
0x000189a0      4883c001       add rax, 1
0x000189a4      4d8d4801       lea r9, [r8 + 1]
0x000189a8      4939c4         cmp r12, rax
0x000189ab      7458           je 0x18a05
0x000189ad      410fb65001     movzx edx, byte [r8 + 1]
0x000189b2      4d89c8         mov r8, r9
0x000189b5      eb99           jmp 0x18950
0x000189b7      660f1f840000.  nop word [rax + rax]
0x000189c0      410fb65001     movzx edx, byte [r8 + 1]
0x000189c5      4883c301       add rbx, 1
0x000189c9      4983c001       add r8, 1
0x000189cd      eb81           jmp 0x18950
0x000189cf      90             nop
0x000189d0      4883c201       add rdx, 1
0x000189d4      4c89c0         mov rax, r8
0x000189d7      4829d0         sub rax, rdx
0x000189da      4a8904c7       mov qword [rdi + r8*8], rax
0x000189de      e955ffffff     jmp 0x18938
0x000189e3      0f1f440000     nop dword [rax + rax]
0x000189e8      48894dd0       mov qword [rbp - 0x30], rcx
0x000189ec      488975d8       mov qword [rbp - 0x28], rsi
0x000189f0      e8bb210000     call sym.mmalloca
0x000189f5      488b4dd0       mov rcx, qword [rbp - 0x30]
0x000189f9      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/str-kmp.h:-164
0x000189fc      488b75d8       mov rsi, qword [rbp - 0x28]
0x00018a00      e9e1feffff     jmp 0x188e6
0x00018a05      488919         mov qword [rcx], rbx
0x00018a08      e95fffffff     jmp 0x1896c
0x00018a0d      bf01000000     mov edi, 1
0x00018a12      e98cfeffff     jmp 0x188a3
0x00018a17      e89493feff     call sym.imp.__stack_chk_fail
0x00018a1c      0f1f4000       nop dword [rax]
;-- knuth_morris_pratt_multibyte:
0x00018a20      55             push rbp
0x00018a21      4889e5         mov rbp, rsp
0x00018a24      4157           push r15
0x00018a26      4156           push r14
0x00018a28      4155           push r13
0x00018a2a      4154           push r12
0x00018a2c      53             push rbx                                ; ../coreutils-8.31/lib/mbsstr.c:-152
0x00018a2d      4889f3         mov rbx, rsi
0x00018a30      4881ec080100.  sub rsp, 0x108
0x00018a37      4889bde8feff.  mov qword [rbp - 0x118], rdi
0x00018a3e      4889f7         mov rdi, rsi
0x00018a41      488995d8feff.  mov qword [rbp - 0x128], rdx
0x00018a48      64488b042528.  mov rax, qword fs:[0x28]
0x00018a51      488945c8       mov qword [rbp - 0x38], rax
0x00018a55      31c0           xor eax, eax
0x00018a57      e8c4210000     call sym.mbslen
0x00018a5c      ba38000000     mov edx, 0x38                           ; '8'
0x00018a61      4889c6         mov rsi, rax
0x00018a64      488985f8feff.  mov qword [rbp - 0x108], rax
0x00018a6b      4889d0         mov rax, rdx
0x00018a6e      48f7e6         mul rsi
0x00018a71      0f80100a0000   jo 0x19487
0x00018a77      31c9           xor ecx, ecx                            ; ../coreutils-8.31/lib/mbuiter.h:-453
0x00018a79      4885c0         test rax, rax
0x00018a7c      0f881e040000   js 0x18ea0
0x00018a82      4885c9         test rcx, rcx
0x00018a85      0f8515040000   jne 0x18ea0
0x00018a8b      488b85f8feff.  mov rax, qword [rbp - 0x108]
0x00018a92      488d3cc50000.  lea rdi, [rax*8]
0x00018a9a      4829c7         sub rdi, rax
0x00018a9d      48c1e703       shl rdi, 3
0x00018aa1      4881ffa00f00.  cmp rdi, 0xfa0
0x00018aa8      0f8736090000   ja 0x193e4
0x00018aae      4883c73d       add rdi, 0x3d
0x00018ab2      4883e7f0       and rdi, 0xfffffffffffffff0
0x00018ab6      4829fc         sub rsp, rdi
0x00018ab9      4c8d64240f     lea r12, [rsp + 0xf]
0x00018abe      4983e4f0       and r12, 0xfffffffffffffff0             ; ../coreutils-8.31/lib/mbchar.h:-322
0x00018ac2      4983c41f       add r12, 0x1f
0x00018ac6      4983e4e0       and r12, 0xffffffffffffffe0
0x00018aca      4d85e4         test r12, r12
0x00018acd      0f84cd030000   je 0x18ea0                              ; ../coreutils-8.31/lib/mbchar.h:-319
0x00018ad3      488b85f8feff.  mov rax, qword [rbp - 0x108]
0x00018ada      48899d10ffff.  mov qword [rbp - 0xf0], rbx
0x00018ae1      488d9d00ffff.  lea rbx, [rbp - 0x100]
0x00018ae8      c68500ffffff.  mov byte [rbp - 0x100], 0
0x00018aef      48c78504ffff.  mov qword [rbp - 0xfc], 0
0x00018afa      4d89e7         mov r15, r12
0x00018afd      c6850cffffff.  mov byte [rbp - 0xf4], 0
0x00018b04      41be01000000   mov r14d, 1
0x00018b0a      4c8d2c40       lea r13, [rax + rax*2]
0x00018b0e      488d4304       lea rax, [rbx + 4]
0x00018b12      49c1e504       shl r13, 4
0x00018b16      488985e0feff.  mov qword [rbp - 0x120], rax
0x00018b1d      4d01e5         add r13, r12
0x00018b20      e9ac000000     jmp 0x18bd1                             ; ../coreutils-8.31/lib/mbuiter.h:-573
0x00018b25      0f1f00         nop dword [rax]
0x00018b28      488b8d10ffff.  mov rcx, qword [rbp - 0xf0]
0x00018b2f      488d352a4400.  lea rsi, obj.is_basic_table             ; 0x1cf60
0x00018b36      0fb611         movzx edx, byte [rcx]
0x00018b39      89d0           mov eax, edx
0x00018b3b      c0e805         shr al, 5
0x00018b3e      83e007         and eax, 7
0x00018b41      8b0486         mov eax, dword [rsi + rax*4]
0x00018b44      0fa3d0         bt eax, edx
0x00018b47      0f837b030000   jae 0x18ec8
0x00018b4d      48c78518ffff.  mov qword [rbp - 0xe8], 1
0x00018b58      0fbe01         movsx eax, byte [rcx]
0x00018b5b      4488b520ffff.  mov byte [rbp - 0xe0], r14b
0x00018b62      4488b50cffff.  mov byte [rbp - 0xf4], r14b
0x00018b69      898524ffffff   mov dword [rbp - 0xdc], eax
0x00018b6f      448b8524ffff.  mov r8d, dword [rbp - 0xdc]
0x00018b76      4585c0         test r8d, r8d
0x00018b79      0f8421010000   je 0x18ca0
0x00018b7f      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/mbsstr.c:-664
0x00018b84      488bb510ffff.  mov rsi, qword [rbp - 0xf0]
0x00018b8b      488d4b28       lea rcx, [rbx + 0x28]
0x00018b8f      488b9518ffff.  mov rdx, qword [rbp - 0xe8]
0x00018b96      4839ce         cmp rsi, rcx
0x00018b99      0f8451030000   je 0x18ef0
0x00018b9f      498937         mov qword [r15], rsi
0x00018ba2      84c0           test al, al
0x00018ba4      49895708       mov qword [r15 + 8], rdx
0x00018ba8      41884710       mov byte [r15 + 0x10], al               ; ../coreutils-8.31/lib/mbsstr.c:-769
0x00018bac      740a           je 0x18bb8
0x00018bae      8b8524ffffff   mov eax, dword [rbp - 0xdc]
0x00018bb4      41894714       mov dword [r15 + 0x14], eax
0x00018bb8      488b8518ffff.  mov rax, qword [rbp - 0xe8]
0x00018bbf      48018510ffff.  add qword [rbp - 0xf0], rax
0x00018bc6      4983c730       add r15, 0x30
0x00018bca      c6850cffffff.  mov byte [rbp - 0xf4], 0
0x00018bd1      80bd00ffffff.  cmp byte [rbp - 0x100], 0
0x00018bd8      0f844affffff   je 0x18b28
0x00018bde      e8ad91feff     call sym.imp.__ctype_get_mb_cur_max
0x00018be3      4c8b8d10ffff.  mov r9, qword [rbp - 0xf0]
0x00018bea      4889c6         mov rsi, rax
0x00018bed      4c89cf         mov rdi, r9
0x00018bf0      4c898df0feff.  mov qword [rbp - 0x110], r9             ; ../coreutils-8.31/lib/mbsstr.c:-756
0x00018bf7      e83400ffff     call sym.strnlen1
0x00018bfc      4c8b8df0feff.  mov r9, qword [rbp - 0x110]
0x00018c03      488d4b04       lea rcx, [rbx + 4]
0x00018c07      488d7b24       lea rdi, [rbx + 0x24]
0x00018c0b      4889c2         mov rdx, rax
0x00018c0e      4c89ce         mov rsi, r9
0x00018c11      e89a17ffff     call sym.rpl_mbrtowc
0x00018c16      4883f8ff       cmp rax, 0xffffffffffffffff
0x00018c1a      48898518ffff.  mov qword [rbp - 0xe8], rax             ; ../coreutils-8.31/lib/mbsstr.c:-753
0x00018c21      0f84f1020000   je 0x18f18
0x00018c27      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00018c2b      0f8468070000   je 0x19399
0x00018c31      4885c0         test rax, rax
0x00018c34      752b           jne 0x18c61
0x00018c36      488b8510ffff.  mov rax, qword [rbp - 0xf0]
0x00018c3d      48c78518ffff.  mov qword [rbp - 0xe8], 1
0x00018c48      803800         cmp byte [rax], 0
0x00018c4b      0f8512080000   jne 0x19463
0x00018c51      448b8d24ffff.  mov r9d, dword [rbp - 0xdc]
0x00018c58      4585c9         test r9d, r9d
0x00018c5b      0f8521080000   jne 0x19482                             ; ../coreutils-8.31/lib/mbsstr.c:-966
0x00018c61      488d7b04       lea rdi, [rbx + 4]
0x00018c65      4488b520ffff.  mov byte [rbp - 0xe0], r14b
0x00018c6c      e83f94feff     call sym.imp.mbsinit
0x00018c71      85c0           test eax, eax
0x00018c73      0f8448070000   je 0x193c1
0x00018c79      448b8524ffff.  mov r8d, dword [rbp - 0xdc]
0x00018c80      c68500ffffff.  mov byte [rbp - 0x100], 0
0x00018c87      4488b50cffff.  mov byte [rbp - 0xf4], r14b
0x00018c8e      4585c0         test r8d, r8d
0x00018c91      0f85e8feffff   jne 0x18b7f
0x00018c97      660f1f840000.  nop word [rax + rax]
0x00018ca0      4883bdf8feff.  cmp qword [rbp - 0x108], 2
0x00018ca8      49c745080100.  mov qword [r13 + 8], 1
0x00018cb0      0f8690000000   jbe 0x18d46
0x00018cb6      4d8d742430     lea r14, [r12 + 0x30]
0x00018cbb      31db           xor ebx, ebx
0x00018cbd      41bf02000000   mov r15d, 2
0x00018cc3      0f1f440000     nop dword [rax + rax]
0x00018cc8      410fb64e10     movzx ecx, byte [r14 + 0x10]
0x00018ccd      eb1e           jmp 0x18ced
0x00018ccf      90             nop
0x00018cd0      80781000       cmp byte [rax + 0x10], 0
0x00018cd4      7426           je 0x18cfc
0x00018cd6      8b4014         mov eax, dword [rax + 0x14]
0x00018cd9      41394614       cmp dword [r14 + 0x14], eax             ; ../coreutils-8.31/lib/mbsstr.c:-955
0x00018cdd      7443           je 0x18d22
0x00018cdf      4885db         test rbx, rbx
0x00018ce2      0f84b0050000   je 0x19298
0x00018ce8      492b5cdd00     sub rbx, qword [r13 + rbx*8]
0x00018ced      488d045b       lea rax, [rbx + rbx*2]                  ; ../coreutils-8.31/lib/mbsstr.c:-951
0x00018cf1      48c1e004       shl rax, 4
0x00018cf5      4c01e0         add rax, r12
0x00018cf8      84c9           test cl, cl
0x00018cfa      75d4           jne 0x18cd0
0x00018cfc      498b5608       mov rdx, qword [r14 + 8]
0x00018d00      483b5008       cmp rdx, qword [rax + 8]
0x00018d04      75d9           jne 0x18cdf
0x00018d06      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/mbsstr.c:-955
0x00018d09      498b3e         mov rdi, qword [r14]
0x00018d0c      888df0feffff   mov byte [rbp - 0x110], cl              ; ../coreutils-8.31/lib/mbuiter.h:-980
0x00018d12      e87991feff     call sym.imp.memcmp
0x00018d17      85c0           test eax, eax
0x00018d19      0fb68df0feff.  movzx ecx, byte [rbp - 0x110]           ; ../coreutils-8.31/lib/mbuiter.h:-977
0x00018d20      75bd           jne 0x18cdf                             ; ../coreutils-8.31/lib/mbchar.h:-798
0x00018d22      4883c301       add rbx, 1
0x00018d26      4c89f8         mov rax, r15
0x00018d29      4829d8         sub rax, rbx
0x00018d2c      4b8944fd00     mov qword [r13 + r15*8], rax
0x00018d31      4983c701       add r15, 1
0x00018d35      4983c630       add r14, 0x30                           ; ../coreutils-8.31/lib/mbuiter.h:-977
0x00018d39      4c39bdf8feff.  cmp qword [rbp - 0x108], r15
0x00018d40      0f8582ffffff   jne 0x18cc8
0x00018d46      488b85d8feff.  mov rax, qword [rbp - 0x128]
0x00018d4d      488d5d80       lea rbx, [rbp - 0x80]
0x00018d51      c68540ffffff.  mov byte [rbp - 0xc0], 0
0x00018d58      48c78544ffff.  mov qword [rbp - 0xbc], 0
0x00018d63      c6854cffffff.  mov byte [rbp - 0xb4], 0
0x00018d6a      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/mbsstr.c:-952
0x00018d6d      c6458000       mov byte [rbp - 0x80], 0
0x00018d71      48c745840000.  mov qword [rbp - 0x7c], 0
0x00018d79      48c700000000.  mov qword [rax], 0
0x00018d80      488b85e8feff.  mov rax, qword [rbp - 0x118]
0x00018d87      48899de8feff.  mov qword [rbp - 0x118], rbx
0x00018d8e      4883c304       add rbx, 4
0x00018d92      c6458c00       mov byte [rbp - 0x74], 0
0x00018d96      48899de0feff.  mov qword [rbp - 0x120], rbx
0x00018d9d      488d9d40ffff.  lea rbx, [rbp - 0xc0]
0x00018da4      48898550ffff.  mov qword [rbp - 0xb0], rax
0x00018dab      48894590       mov qword [rbp - 0x70], rax
0x00018daf      31c0           xor eax, eax
0x00018db1      0f1f80000000.  nop dword [rax]
0x00018db8      84c0           test al, al
0x00018dba      0f84dc010000   je 0x18f9c
0x00018dc0      807da000       cmp byte [rbp - 0x60], 0
0x00018dc4      0f858c010000   jne 0x18f56
0x00018dca      4b8d047f       lea rax, [r15 + r15*2]
0x00018dce      48c1e004       shl rax, 4
0x00018dd2      4c01e0         add rax, r12
0x00018dd5      488b5008       mov rdx, qword [rax + 8]
0x00018dd9      483b5598       cmp rdx, qword [rbp - 0x68]
0x00018ddd      0f848d030000   je 0x19170
0x00018de3      4d85ff         test r15, r15
0x00018de6      0f84d4030000   je 0x191c0
0x00018dec      4f8b74fd00     mov r14, qword [r13 + r15*8]            ; ../coreutils-8.31/lib/mbuiter.h:-957
0x00018df1      4c89f8         mov rax, r15
0x00018df4      4c29f0         sub rax, r14
0x00018df7      4d85f6         test r14, r14                           ; ../coreutils-8.31/lib/mbuiter.h:-956
0x00018dfa      488985f0feff.  mov qword [rbp - 0x110], rax
0x00018e01      0fb6458c       movzx eax, byte [rbp - 0x74]
0x00018e05      74b1           je 0x18db8
0x00018e07      80bd4cffffff.  cmp byte [rbp - 0xb4], 0
0x00018e0e      7428           je 0x18e38
0x00018e10      80bd60ffffff.  cmp byte [rbp - 0xa0], 0
0x00018e17      7573           jne 0x18e8c
0x00018e19      488b8558ffff.  mov rax, qword [rbp - 0xa8]
0x00018e20      48018550ffff.  add qword [rbp - 0xb0], rax
0x00018e27      4983ee01       sub r14, 1                              ; ../coreutils-8.31/lib/mbuiter.h:-971
0x00018e2b      c6854cffffff.  mov byte [rbp - 0xb4], 0
0x00018e32      0f8420040000   je 0x19258
0x00018e38      80bd40ffffff.  cmp byte [rbp - 0xc0], 0
0x00018e3f      0f856b020000   jne 0x190b0
0x00018e45      488b8d50ffff.  mov rcx, qword [rbp - 0xb0]
0x00018e4c      488d350d4100.  lea rsi, obj.is_basic_table             ; 0x1cf60
0x00018e53      0fb611         movzx edx, byte [rcx]                   ; ../coreutils-8.31/lib/mbsstr.c:-969
0x00018e56      89d0           mov eax, edx
0x00018e58      c0e805         shr al, 5
0x00018e5b      83e007         and eax, 7
0x00018e5e      8b0486         mov eax, dword [rsi + rax*4]
0x00018e61      0fa3d0         bt eax, edx
0x00018e64      0f832e020000   jae 0x19098
0x00018e6a      48c78558ffff.  mov qword [rbp - 0xa8], 1               ; ../coreutils-8.31/lib/mbsstr.c:-967
0x00018e75      0fbe01         movsx eax, byte [rcx]
0x00018e78      c68560ffffff.  mov byte [rbp - 0xa0], 1
0x00018e7f      c6854cffffff.  mov byte [rbp - 0xb4], 1
0x00018e86      898564ffffff   mov dword [rbp - 0x9c], eax
0x00018e8c      8bb564ffffff   mov esi, dword [rbp - 0x9c]
0x00018e92      85f6           test esi, esi
0x00018e94      7583           jne 0x18e19                             ; ../coreutils-8.31/lib/mbuiter.h:-966
0x00018e96      e8d58dfeff     call sym.imp.abort
0x00018e9b      0f1f440000     nop dword [rax + rax]
0x00018ea0      31c0           xor eax, eax
0x00018ea2      488b5dc8       mov rbx, qword [rbp - 0x38]
0x00018ea6      6448331c2528.  xor rbx, qword fs:[0x28]
0x00018eaf      0f85a9050000   jne 0x1945e
0x00018eb5      488d65d8       lea rsp, [rbp - 0x28]
0x00018eb9      5b             pop rbx
0x00018eba      415c           pop r12
0x00018ebc      415d           pop r13
0x00018ebe      415e           pop r14
0x00018ec0      415f           pop r15
0x00018ec2      5d             pop rbp
0x00018ec3      c3             ret
0x00018ec4      0f1f4000       nop dword [rax]
0x00018ec8      488bbde0feff.  mov rdi, qword [rbp - 0x120]
0x00018ecf      e8dc91feff     call sym.imp.mbsinit
0x00018ed4      85c0           test eax, eax
0x00018ed6      0f8463050000   je 0x1943f
0x00018edc      4488b500ffff.  mov byte [rbp - 0x100], r14b
0x00018ee3      e9f6fcffff     jmp 0x18bde
0x00018ee8      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/mbuiter.h:-960
0x00018ef0      498d4f18       lea rcx, [r15 + 0x18]
0x00018ef4      4889cf         mov rdi, rcx
0x00018ef7      e8e48ffeff     call sym.imp.memcpy
0x00018efc      488b9518ffff.  mov rdx, qword [rbp - 0xe8]
0x00018f03      498907         mov qword [r15], rax
0x00018f06      0fb68520ffff.  movzx eax, byte [rbp - 0xe0]
0x00018f0d      e990fcffff     jmp 0x18ba2
0x00018f12      660f1f440000   nop word [rax + rax]
0x00018f18      48c78518ffff.  mov qword [rbp - 0xe8], 1
0x00018f23      c68520ffffff.  mov byte [rbp - 0xe0], 0
0x00018f2a      31c0           xor eax, eax
0x00018f2c      4488b50cffff.  mov byte [rbp - 0xf4], r14b             ; ../coreutils-8.31/lib/mbuiter.h:-935
0x00018f33      e94cfcffff     jmp 0x18b84
0x00018f38      0f1f84000000.  nop dword [rax + rax]
0x00018f40      48c745980100.  mov qword [rbp - 0x68], 1
0x00018f48      0fbe01         movsx eax, byte [rcx]                   ; ../coreutils-8.31/lib/mbuiter.h:-927
0x00018f4b      c645a001       mov byte [rbp - 0x60], 1
0x00018f4f      c6458c01       mov byte [rbp - 0x74], 1
0x00018f53      8945a4         mov dword [rbp - 0x5c], eax
0x00018f56      8b55a4         mov edx, dword [rbp - 0x5c]
0x00018f59      85d2           test edx, edx
0x00018f5b      0f841f010000   je 0x19080
0x00018f61      4b8d047f       lea rax, [r15 + r15*2]
0x00018f65      48c1e004       shl rax, 4
0x00018f69      4c01e0         add rax, r12
0x00018f6c      80781000       cmp byte [rax + 0x10], 0                ; ../coreutils-8.31/lib/mbuiter.h:-966
0x00018f70      0f845ffeffff   je 0x18dd5
0x00018f76      395014         cmp dword [rax + 0x14], edx
0x00018f79      0f8564feffff   jne 0x18de3
0x00018f7f      4983c701       add r15, 1
0x00018f83      488b4598       mov rax, qword [rbp - 0x68]
0x00018f87      48014590       add qword [rbp - 0x70], rax
0x00018f8b      4c39bdf8feff.  cmp qword [rbp - 0x108], r15
0x00018f92      c6458c00       mov byte [rbp - 0x74], 0
0x00018f96      0f8480040000   je 0x1941c
0x00018f9c      807d8000       cmp byte [rbp - 0x80], 0
0x00018fa0      7536           jne 0x18fd8
0x00018fa2      488b4d90       mov rcx, qword [rbp - 0x70]
0x00018fa6      488d35b33f00.  lea rsi, obj.is_basic_table             ; 0x1cf60
0x00018fad      0fb611         movzx edx, byte [rcx]
0x00018fb0      89d0           mov eax, edx
0x00018fb2      c0e805         shr al, 5                               ; ../coreutils-8.31/lib/mbuiter.h:-963
0x00018fb5      83e007         and eax, 7
0x00018fb8      8b0486         mov eax, dword [rsi + rax*4]
0x00018fbb      0fa3d0         bt eax, edx                             ; ../coreutils-8.31/lib/mbuiter.h:-952
0x00018fbe      7280           jb 0x18f40
0x00018fc0      488bbde0feff.  mov rdi, qword [rbp - 0x120]
0x00018fc7      e8e490feff     call sym.imp.mbsinit
0x00018fcc      85c0           test eax, eax
0x00018fce      0f846b040000   je 0x1943f
0x00018fd4      c6458001       mov byte [rbp - 0x80], 1
0x00018fd8      e8b38dfeff     call sym.imp.__ctype_get_mb_cur_max
0x00018fdd      4c8b4590       mov r8, qword [rbp - 0x70]
0x00018fe1      4889c6         mov rsi, rax
0x00018fe4      4c89c7         mov rdi, r8
0x00018fe7      4c8985f0feff.  mov qword [rbp - 0x110], r8
0x00018fee      e83dfcfeff     call sym.strnlen1
0x00018ff3      488bb5e8feff.  mov rsi, qword [rbp - 0x118]            ; ../coreutils-8.31/lib/mbuiter.h:-931
0x00018ffa      4c8b85f0feff.  mov r8, qword [rbp - 0x110]
0x00019001      4889c2         mov rdx, rax
0x00019004      488d4e04       lea rcx, [rsi + 4]
0x00019008      488d7e24       lea rdi, [rsi + 0x24]
0x0001900c      4c89c6         mov rsi, r8
0x0001900f      e89c13ffff     call sym.rpl_mbrtowc
0x00019014      4883f8ff       cmp rax, 0xffffffffffffffff
0x00019018      48894598       mov qword [rbp - 0x68], rax
0x0001901c      0f844e020000   je 0x19270
0x00019022      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00019026      0f8444030000   je 0x19370
0x0001902c      4885c0         test rax, rax
0x0001902f      7520           jne 0x19051                             ; ../coreutils-8.31/lib/mbuiter.h:-956
0x00019031      488b4590       mov rax, qword [rbp - 0x70]
0x00019035      48c745980100.  mov qword [rbp - 0x68], 1
0x0001903d      803800         cmp byte [rax], 0
0x00019040      0f851d040000   jne 0x19463
0x00019046      8b45a4         mov eax, dword [rbp - 0x5c]
0x00019049      85c0           test eax, eax
0x0001904b      0f8531040000   jne 0x19482
0x00019051      488b85e8feff.  mov rax, qword [rbp - 0x118]
0x00019058      c645a001       mov byte [rbp - 0x60], 1
0x0001905c      488d7804       lea rdi, [rax + 4]
0x00019060      e84b90feff     call sym.imp.mbsinit
0x00019065      85c0           test eax, eax
0x00019067      0f8423030000   je 0x19390
0x0001906d      8b55a4         mov edx, dword [rbp - 0x5c]
0x00019070      c6458000       mov byte [rbp - 0x80], 0                ; ../coreutils-8.31/lib/mbuiter.h:-948
0x00019074      c6458c01       mov byte [rbp - 0x74], 1
0x00019078      85d2           test edx, edx
0x0001907a      0f85e1feffff   jne 0x18f61
0x00019080      4c89e7         mov rdi, r12
0x00019083      e8681b0000     call sym.freea
0x00019088      b801000000     mov eax, 1
0x0001908d      e910feffff     jmp 0x18ea2
0x00019092      660f1f440000   nop word [rax + rax]
0x00019098      488d7b04       lea rdi, [rbx + 4]
0x0001909c      e80f90feff     call sym.imp.mbsinit
0x000190a1      85c0           test eax, eax                           ; ../coreutils-8.31/lib/mbuiter.h:-980
0x000190a3      0f8496030000   je 0x1943f
0x000190a9      c68540ffffff.  mov byte [rbp - 0xc0], 1
0x000190b0      e8db8cfeff     call sym.imp.__ctype_get_mb_cur_max
0x000190b5      4c8bbd50ffff.  mov r15, qword [rbp - 0xb0]             ; ../coreutils-8.31/lib/mbchar.h:-798
0x000190bc      4889c6         mov rsi, rax
0x000190bf      4c89ff         mov rdi, r15
0x000190c2      e869fbfeff     call sym.strnlen1
0x000190c7      488d4b04       lea rcx, [rbx + 4]
0x000190cb      488d7b24       lea rdi, [rbx + 0x24]
0x000190cf      4889c2         mov rdx, rax
0x000190d2      4c89fe         mov rsi, r15
0x000190d5      e8d612ffff     call sym.rpl_mbrtowc
0x000190da      4883f8ff       cmp rax, 0xffffffffffffffff
0x000190de      48898558ffff.  mov qword [rbp - 0xa8], rax             ; ../coreutils-8.31/lib/mbuiter.h:-971
0x000190e5      7469           je 0x19150
0x000190e7      4883f8fe       cmp rax, 0xfffffffffffffffe
0x000190eb      0f849f000000   je 0x19190
0x000190f1      4885c0         test rax, rax
0x000190f4      7529           jne 0x1911f
0x000190f6      488b8550ffff.  mov rax, qword [rbp - 0xb0]
0x000190fd      48c78558ffff.  mov qword [rbp - 0xa8], 1
0x00019108      803800         cmp byte [rax], 0
0x0001910b      0f8552030000   jne 0x19463
0x00019111      8bbd64ffffff   mov edi, dword [rbp - 0x9c]
0x00019117      85ff           test edi, edi
0x00019119      0f8563030000   jne 0x19482
0x0001911f      488d7b04       lea rdi, [rbx + 4]
0x00019123      c68560ffffff.  mov byte [rbp - 0xa0], 1
0x0001912a      e8818ffeff     call sym.imp.mbsinit
0x0001912f      85c0           test eax, eax
0x00019131      747d           je 0x191b0
0x00019133      c68540ffffff.  mov byte [rbp - 0xc0], 0
0x0001913a      c6854cffffff.  mov byte [rbp - 0xb4], 1
0x00019141      e946fdffff     jmp 0x18e8c
0x00019146      662e0f1f8400.  nop word cs:[rax + rax]
0x00019150      48c78558ffff.  mov qword [rbp - 0xa8], 1               ; ../coreutils-8.31/lib/mbuiter.h:-927
0x0001915b      c68560ffffff.  mov byte [rbp - 0xa0], 0
0x00019162      e9b2fcffff     jmp 0x18e19
0x00019167      660f1f840000.  nop word [rax + rax]
0x00019170      488b7590       mov rsi, qword [rbp - 0x70]
0x00019174      488b38         mov rdi, qword [rax]
0x00019177      e8148dfeff     call sym.imp.memcmp
0x0001917c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/mbuiter.h:-966
0x0001917e      0f855ffcffff   jne 0x18de3
0x00019184      e9f6fdffff     jmp 0x18f7f
0x00019189      0f1f80000000.  nop dword [rax]
0x00019190      488bbd50ffff.  mov rdi, qword [rbp - 0xb0]
0x00019197      e8048cfeff     call sym.imp.strlen
0x0001919c      c68560ffffff.  mov byte [rbp - 0xa0], 0
0x000191a3      48898558ffff.  mov qword [rbp - 0xa8], rax
0x000191aa      e96afcffff     jmp 0x18e19
0x000191af      90             nop
0x000191b0      c6854cffffff.  mov byte [rbp - 0xb4], 1
0x000191b7      e9d0fcffff     jmp 0x18e8c
0x000191bc      0f1f4000       nop dword [rax]
0x000191c0      80bd4cffffff.  cmp byte [rbp - 0xb4], 0
0x000191c7      0f85bb000000   jne 0x19288
0x000191cd      80bd40ffffff.  cmp byte [rbp - 0xc0], 0
0x000191d4      0f85e6000000   jne 0x192c0
0x000191da      488b8d50ffff.  mov rcx, qword [rbp - 0xb0]
0x000191e1      488d35783d00.  lea rsi, obj.is_basic_table             ; 0x1cf60
0x000191e8      0fb611         movzx edx, byte [rcx]
0x000191eb      89d0           mov eax, edx
0x000191ed      c0e805         shr al, 5
0x000191f0      83e007         and eax, 7
0x000191f3      8b0486         mov eax, dword [rsi + rax*4]            ; ../coreutils-8.31/lib/mbuiter.h:-939
0x000191f6      0fa3d0         bt eax, edx
0x000191f9      0f83a9000000   jae 0x192a8
0x000191ff      48c78558ffff.  mov qword [rbp - 0xa8], 1
0x0001920a      0fbe01         movsx eax, byte [rcx]
0x0001920d      c68560ffffff.  mov byte [rbp - 0xa0], 1
0x00019214      c6854cffffff.  mov byte [rbp - 0xb4], 1
0x0001921b      898564ffffff   mov dword [rbp - 0x9c], eax
0x00019221      8b9564ffffff   mov edx, dword [rbp - 0x9c]
0x00019227      85d2           test edx, edx
0x00019229      0f8467fcffff   je 0x18e96
0x0001922f      488b8558ffff.  mov rax, qword [rbp - 0xa8]
0x00019236      c6854cffffff.  mov byte [rbp - 0xb4], 0
0x0001923d      48018550ffff.  add qword [rbp - 0xb0], rax
0x00019244      c6458c00       mov byte [rbp - 0x74], 0                ; ../coreutils-8.31/lib/mbuiter.h:-949
0x00019248      488b4598       mov rax, qword [rbp - 0x68]
0x0001924c      48014590       add qword [rbp - 0x70], rax
0x00019250      e947fdffff     jmp 0x18f9c
0x00019255      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/mbuiter.h:-927
0x00019258      0fb6458c       movzx eax, byte [rbp - 0x74]
0x0001925c      4c8bbdf0feff.  mov r15, qword [rbp - 0x110]
0x00019263      e950fbffff     jmp 0x18db8
0x00019268      0f1f84000000.  nop dword [rax + rax]
0x00019270      48c745980100.  mov qword [rbp - 0x68], 1
0x00019278      c645a000       mov byte [rbp - 0x60], 0
0x0001927c      c6458c01       mov byte [rbp - 0x74], 1
0x00019280      e945fbffff     jmp 0x18dca                             ; ../coreutils-8.31/lib/mbuiter.h:-949
0x00019285      0f1f00         nop dword [rax]
0x00019288      80bd60ffffff.  cmp byte [rbp - 0xa0], 0
0x0001928f      749e           je 0x1922f
0x00019291      eb8e           jmp 0x19221
0x00019293      0f1f440000     nop dword [rax + rax]
0x00019298      4f897cfd00     mov qword [r13 + r15*8], r15
0x0001929d      e98ffaffff     jmp 0x18d31
0x000192a2      660f1f440000   nop word [rax + rax]
0x000192a8      488d7b04       lea rdi, [rbx + 4]
0x000192ac      e8ff8dfeff     call sym.imp.mbsinit                    ; ../coreutils-8.31/lib/mbuiter.h:-956
0x000192b1      85c0           test eax, eax
0x000192b3      0f8486010000   je 0x1943f
0x000192b9      c68540ffffff.  mov byte [rbp - 0xc0], 1
0x000192c0      e8cb8afeff     call sym.imp.__ctype_get_mb_cur_max
0x000192c5      4c8b8550ffff.  mov r8, qword [rbp - 0xb0]              ; ../coreutils-8.31/lib/mbuiter.h:-927
0x000192cc      4889c6         mov rsi, rax
0x000192cf      4c89c7         mov rdi, r8
0x000192d2      4c8985f0feff.  mov qword [rbp - 0x110], r8
0x000192d9      e852f9feff     call sym.strnlen1
0x000192de      4c8b85f0feff.  mov r8, qword [rbp - 0x110]
0x000192e5      488d4b04       lea rcx, [rbx + 4]
0x000192e9      488d7b24       lea rdi, [rbx + 0x24]
0x000192ed      4889c2         mov rdx, rax
0x000192f0      4c89c6         mov rsi, r8                             ; ../coreutils-8.31/lib/mbsstr.c:-964
0x000192f3      e8b810ffff     call sym.rpl_mbrtowc
0x000192f8      4883f8ff       cmp rax, 0xffffffffffffffff
0x000192fc      48898558ffff.  mov qword [rbp - 0xa8], rax
0x00019303      0f84c4000000   je 0x193cd
0x00019309      4883f8fe       cmp rax, 0xfffffffffffffffe             ; ../coreutils-8.31/lib/mbsstr.c:-937
0x0001930d      0f84ea000000   je 0x193fd
0x00019313      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/mbuiter.h:-966
0x00019316      7529           jne 0x19341
0x00019318      488b8550ffff.  mov rax, qword [rbp - 0xb0]
0x0001931f      48c78558ffff.  mov qword [rbp - 0xa8], 1
0x0001932a      803800         cmp byte [rax], 0
0x0001932d      0f8530010000   jne 0x19463
0x00019333      8b8d64ffffff   mov ecx, dword [rbp - 0x9c]
0x00019339      85c9           test ecx, ecx
0x0001933b      0f8541010000   jne 0x19482
0x00019341      488d7b04       lea rdi, [rbx + 4]
0x00019345      c68560ffffff.  mov byte [rbp - 0xa0], 1
0x0001934c      e85f8dfeff     call sym.imp.mbsinit
0x00019351      85c0           test eax, eax
0x00019353      0f8498000000   je 0x193f1
0x00019359      c68540ffffff.  mov byte [rbp - 0xc0], 0
0x00019360      c6854cffffff.  mov byte [rbp - 0xb4], 1
0x00019367      e9b5feffff     jmp 0x19221
0x0001936c      0f1f4000       nop dword [rax]
0x00019370      488b7d90       mov rdi, qword [rbp - 0x70]
0x00019374      e8278afeff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/mbsstr.c:-930
0x00019379      c645a000       mov byte [rbp - 0x60], 0
0x0001937d      48894598       mov qword [rbp - 0x68], rax
0x00019381      c6458c01       mov byte [rbp - 0x74], 1
0x00019385      e940faffff     jmp 0x18dca
0x0001938a      660f1f440000   nop word [rax + rax]
0x00019390      c6458c01       mov byte [rbp - 0x74], 1
0x00019394      e9bdfbffff     jmp 0x18f56
0x00019399      488bbd10ffff.  mov rdi, qword [rbp - 0xf0]
0x000193a0      e8fb89feff     call sym.imp.strlen
0x000193a5      c68520ffffff.  mov byte [rbp - 0xe0], 0
0x000193ac      48898518ffff.  mov qword [rbp - 0xe8], rax
0x000193b3      31c0           xor eax, eax
0x000193b5      4488b50cffff.  mov byte [rbp - 0xf4], r14b
0x000193bc      e9c3f7ffff     jmp 0x18b84
0x000193c1      4488b50cffff.  mov byte [rbp - 0xf4], r14b
0x000193c8      e9a2f7ffff     jmp 0x18b6f
0x000193cd      48c78558ffff.  mov qword [rbp - 0xa8], 1
0x000193d8      c68560ffffff.  mov byte [rbp - 0xa0], 0                ; ../coreutils-8.31/lib/mbsstr.c:-963
0x000193df      e94bfeffff     jmp 0x1922f
0x000193e4      e8c7170000     call sym.mmalloca
0x000193e9      4989c4         mov r12, rax                            ; ../coreutils-8.31/lib/mbsstr.c:-913
0x000193ec      e9d9f6ffff     jmp 0x18aca                             ; ../coreutils-8.31/lib/mbsstr.c:-914
0x000193f1      c6854cffffff.  mov byte [rbp - 0xb4], 1
0x000193f8      e924feffff     jmp 0x19221
0x000193fd      488bbd50ffff.  mov rdi, qword [rbp - 0xb0]
0x00019404      e89789feff     call sym.imp.strlen
0x00019409      c68560ffffff.  mov byte [rbp - 0xa0], 0
0x00019410      48898558ffff.  mov qword [rbp - 0xa8], rax
0x00019417      e913feffff     jmp 0x1922f
0x0001941c      488b8550ffff.  mov rax, qword [rbp - 0xb0]
0x00019423      488b9dd8feff.  mov rbx, qword [rbp - 0x128]
0x0001942a      4c89e7         mov rdi, r12
0x0001942d      488903         mov qword [rbx], rax
0x00019430      e8bb170000     call sym.freea
0x00019435      b801000000     mov eax, 1
0x0001943a      e963faffff     jmp 0x18ea2                             ; ../coreutils-8.31/lib/mbsstr.c:-937
0x0001943f      488d0d3a3b00.  lea rcx, obj.__PRETTY_FUNCTION__.5056   ; 0x1cf80 ; "mbuiter_multi_next"
0x00019446      488d354b2800.  lea rsi, str..._coreutils_8.31_lib_mbuiter.h ; 0x1bc98 ; "../coreutils-8.31/lib/mbuiter.h"
0x0001944d      488d3d762800.  lea rdi, str.mbsinit___iter__state      ; 0x1bcca ; "mbsinit (&iter->state)"
0x00019454      ba96000000     mov edx, 0x96
0x00019459      e8d289feff     call sym.imp.__assert_fail
0x0001945e      e84d89feff     call sym.imp.__stack_chk_fail
0x00019463      488d0d163b00.  lea rcx, obj.__PRETTY_FUNCTION__.5056   ; 0x1cf80 ; "mbuiter_multi_next"
0x0001946a      488d35272800.  lea rsi, str..._coreutils_8.31_lib_mbuiter.h ; 0x1bc98 ; "../coreutils-8.31/lib/mbuiter.h"
0x00019471      488d3d692800.  lea rdi, str.iter__cur.ptr_______0      ; 0x1bce1 ; "*iter->cur.ptr == '\0'"
0x00019478      bab2000000     mov edx, 0xb2
0x0001947d      e8ae89feff     call sym.imp.__assert_fail
0x00019482      e8df8cfeff     call sym.mbuiter_multi_next.part.0_1
0x00019487      b901000000     mov ecx, 1
0x0001948c      e9e8f5ffff     jmp 0x18a79                             ; ../coreutils-8.31/lib/mbchar.h:-1204
0x00019491      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/mbuiter.h:-1261
0x00019496      662e0f1f8400.  nop word cs:[rax + rax]
;-- mbsstr:
0x000194a0      4157           push r15
0x000194a2      4156           push r14
0x000194a4      4155           push r13
0x000194a6      4154           push r12
0x000194a8      4989fc         mov r12, rdi
0x000194ab      55             push rbp
0x000194ac      53             push rbx
0x000194ad      4889f3         mov rbx, rsi
0x000194b0      4881ec980100.  sub rsp, 0x198
0x000194b7      64488b042528.  mov rax, qword fs:[0x28]
0x000194c0      488984248801.  mov qword [rsp + 0x188], rax
0x000194c8      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/mbuiter.h:-1389
0x000194ca      4889742408     mov qword [rsp + 8], rsi
0x000194cf      e8bc88feff     call sym.imp.__ctype_get_mb_cur_max
0x000194d4      4883f801       cmp rax, 1
0x000194d8      0f87e2000000   ja 0x195c0
0x000194de      488b442408     mov rax, qword [rsp + 8]
0x000194e3      440fb638       movzx r15d, byte [rax]
0x000194e7      4c89e0         mov rax, r12
0x000194ea      4584ff         test r15b, r15b                         ; ../coreutils-8.31/lib/mbsstr.c:-1149
0x000194ed      0f8433010000   je 0x19626
0x000194f3      410fb63424     movzx esi, byte [r12]
0x000194f8      4084f6         test sil, sil
0x000194fb      0f849f070000   je 0x19ca0
0x00019501      488d5c2438     lea rbx, [rsp + 0x38]
0x00019506      488b6c2408     mov rbp, qword [rsp + 8]
0x0001950b      4531ed         xor r13d, r13d
0x0001950e      31d2           xor edx, edx
0x00019510      4531c0         xor r8d, r8d
0x00019513      b801000000     mov eax, 1
0x00019518      48895c2410     mov qword [rsp + 0x10], rbx
0x0001951d      0f1f00         nop dword [rax]
0x00019520      4983c501       add r13, 1
0x00019524      4438fe         cmp sil, r15b
0x00019527      488d5a01       lea rbx, [rdx + 1]
0x0001952b      4d8d742401     lea r14, [r12 + 1]
0x00019530      0f84da080000   je 0x19e10
0x00019536      41807c240100   cmp byte [r12 + 1], 0
0x0001953c      0f845e070000   je 0x19ca0
0x00019542      4983fd09       cmp r13, 9
0x00019546      0f97c2         seta dl
0x00019549      20c2           and dl, al
0x0001954b      0f8401010000   je 0x19652
0x00019551      4b8d44ad00     lea rax, [r13 + r13*4]                  ; ../coreutils-8.31/lib/mbuiter.h:-1397
0x00019556      4839d8         cmp rax, rbx
0x00019559      0f87f1000000   ja 0x19650
0x0001955f      4885ed         test rbp, rbp
0x00019562      881424         mov byte [rsp], dl
0x00019565      7422           je 0x19589
0x00019567      4889de         mov rsi, rbx
0x0001956a      4889ef         mov rdi, rbp
0x0001956d      4c29c6         sub rsi, r8
0x00019570      e8eb88feff     call sym.imp.strnlen                    ; ../coreutils-8.31/lib/mbsstr.c:-1438
0x00019575      4801c5         add rbp, rax
0x00019578      4989d8         mov r8, rbx
0x0001957b      0fb61424       movzx edx, byte [rsp]
0x0001957f      807d0000       cmp byte [rbp], 0
0x00019583      0f85c7000000   jne 0x19650
0x00019589      488b6c2408     mov rbp, qword [rsp + 8]
0x0001958e      4c890424       mov qword [rsp], r8
0x00019592      4889ef         mov rdi, rbp
0x00019595      e80688feff     call sym.imp.strlen
0x0001959a      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0001959f      4889c2         mov rdx, rax
0x000195a2      4889ee         mov rsi, rbp
0x000195a5      4c89f7         mov rdi, r14
0x000195a8      e8c3f2ffff     call sym.knuth_morris_pratt
0x000195ad      84c0           test al, al                             ; ../coreutils-8.31/lib/mbsstr.c:-1287
0x000195af      4c8b0424       mov r8, qword [rsp]
0x000195b3      0f85e60e0000   jne 0x1a49f
0x000195b9      31ed           xor ebp, ebp
0x000195bb      e992000000     jmp 0x19652
0x000195c0      4889d8         mov rax, rbx
0x000195c3      4c8d2d963900.  lea r13, obj.is_basic_table             ; 0x1cf60
0x000195ca      48895c2450     mov qword [rsp + 0x50], rbx             ; ../coreutils-8.31/lib/mbuiter.h:-1529
0x000195cf      0fbe10         movsx edx, byte [rax]
0x000195d2      488d5c2440     lea rbx, [rsp + 0x40]                   ; ../coreutils-8.31/lib/mbchar.h:-1350
0x000195d7      c644244000     mov byte [rsp + 0x40], 0
0x000195dc      48c744244400.  mov qword [rsp + 0x44], 0
0x000195e5      c644244c00     mov byte [rsp + 0x4c], 0
0x000195ea      488d6b04       lea rbp, [rbx + 4]
0x000195ee      89d0           mov eax, edx
0x000195f0      c0e805         shr al, 5
0x000195f3      83e007         and eax, 7
0x000195f6      418b448500     mov eax, dword [r13 + rax*4]
0x000195fb      0fa3d0         bt eax, edx
0x000195fe      0f839c0c0000   jae 0x1a2a0
0x00019604      48c744245801.  mov qword [rsp + 0x58], 1
0x0001960d      89542464       mov dword [rsp + 0x64], edx
0x00019611      c644246001     mov byte [rsp + 0x60], 1                ; ../coreutils-8.31/lib/mbsstr.c:-1572
0x00019616      c644244c01     mov byte [rsp + 0x4c], 1
0x0001961b      8b442464       mov eax, dword [rsp + 0x64]             ; ../coreutils-8.31/lib/mbsstr.c:-1570
0x0001961f      85c0           test eax, eax
0x00019621      7558           jne 0x1967b
0x00019623      4c89e0         mov rax, r12
0x00019626      488b9c248801.  mov rbx, qword [rsp + 0x188]
0x0001962e      6448331c2528.  xor rbx, qword fs:[0x28]
0x00019637      0f85430f0000   jne 0x1a580
0x0001963d      4881c4980100.  add rsp, 0x198
0x00019644      5b             pop rbx
0x00019645      5d             pop rbp
0x00019646      415c           pop r12
0x00019648      415d           pop r13
0x0001964a      415e           pop r14
0x0001964c      415f           pop r15
0x0001964e      c3             ret
0x0001964f      90             nop
0x00019650      89d0           mov eax, edx
0x00019652      410fb636       movzx esi, byte [r14]
0x00019656      4d89f4         mov r12, r14
0x00019659      4889da         mov rdx, rbx                            ; ../coreutils-8.31/lib/mbsstr.c:-1536
0x0001965c      e9bffeffff     jmp 0x19520
0x00019661      0f1f80000000.  nop dword [rax]                         ; string_fortified.h:-1732
0x00019668      48c744245801.  mov qword [rsp + 0x58], 1
0x00019671      c644246000     mov byte [rsp + 0x60], 0                ; ../coreutils-8.31/lib/mbsstr.c:-1536
0x00019676      c644244c01     mov byte [rsp + 0x4c], 1
0x0001967b      488b442408     mov rax, qword [rsp + 8]
0x00019680      c68424c00000.  mov byte [rsp + 0xc0], 0
0x00019688      4531f6         xor r14d, r14d
0x0001968b      31db           xor ebx, ebx
0x0001968d      80bc24c00000.  cmp byte [rsp + 0xc0], 0
0x00019695      c68424800000.  mov byte [rsp + 0x80], 0
0x0001969d      48c784248400.  mov qword [rsp + 0x84], 0
0x000196a9      c684248c0000.  mov byte [rsp + 0x8c], 0
0x000196b1      488dac244001.  lea rbp, [rsp + 0x140]
0x000196b9      488984249000.  mov qword [rsp + 0x90], rax
0x000196c1      488d442438     lea rax, [rsp + 0x38]
0x000196c6      4c89a424d000.  mov qword [rsp + 0xd0], r12
0x000196ce      48c78424c400.  mov qword [rsp + 0xc4], 0
0x000196da      c68424cc0000.  mov byte [rsp + 0xcc], 0
0x000196e2      4c8dbc240001.  lea r15, [rsp + 0x100]
0x000196ea      48c744242000.  mov qword [rsp + 0x20], 0               ; ../coreutils-8.31/lib/mbuiter.h:-1659
0x000196f3      c644241001     mov byte [rsp + 0x10], 1
0x000196f8      4889442428     mov qword [rsp + 0x28], rax
0x000196fd      0f8510030000   jne 0x19a13                             ; ../coreutils-8.31/lib/mbuiter.h:-1657
0x00019703      0f1f440000     nop dword [rax + rax]
0x00019708      488b8c24d000.  mov rcx, qword [rsp + 0xd0]
0x00019710      0fb611         movzx edx, byte [rcx]
0x00019713      89d0           mov eax, edx
0x00019715      c0e805         shr al, 5
0x00019718      83e007         and eax, 7
0x0001971b      418b448500     mov eax, dword [r13 + rax*4]
0x00019720      0fa3d0         bt eax, edx
0x00019723      0f8357070000   jae 0x19e80
0x00019729      48c78424d800.  mov qword [rsp + 0xd8], 1
0x00019735      0fbe01         movsx eax, byte [rcx]
0x00019738      c68424e00000.  mov byte [rsp + 0xe0], 1
0x00019740      c68424cc0000.  mov byte [rsp + 0xcc], 1
0x00019748      898424e40000.  mov dword [rsp + 0xe4], eax
0x0001974f      8b8424e40000.  mov eax, dword [rsp + 0xe4]
0x00019756      85c0           test eax, eax
0x00019758      0f8442050000   je 0x19ca0
0x0001975e      4983fe09       cmp r14, 9
0x00019762      0f97c0         seta al
0x00019765      22442410       and al, byte [rsp + 0x10]
0x00019769      0f84080e0000   je 0x1a577
0x0001976f      4b8d14b6       lea rdx, [r14 + r14*4]
0x00019773      4839d3         cmp rbx, rdx
0x00019776      0f8334070000   jae 0x19eb0
0x0001977c      4883c301       add rbx, 1
0x00019780      88442410       mov byte [rsp + 0x10], al
0x00019784      807c246000     cmp byte [rsp + 0x60], 0
0x00019789      0f8472050000   je 0x19d01
0x0001978f      8b442464       mov eax, dword [rsp + 0x64]
0x00019793      398424e40000.  cmp dword [rsp + 0xe4], eax
0x0001979a      0f8549020000   jne 0x199e9
0x000197a0      660f6f8424c0.  movdqa xmm0, xmmword [rsp + 0xc0]
0x000197a9      488d4d04       lea rcx, [rbp + 4]
0x000197ad      c68424400100.  mov byte [rsp + 0x140], 0
0x000197b5      48c745040000.  mov qword [rbp + 4], 0
0x000197bd      0f2984240001.  movaps xmmword [rsp + 0x100], xmm0
0x000197c5      c684244c0100.  mov byte [rsp + 0x14c], 0
0x000197cd      c684240c0100.  mov byte [rsp + 0x10c], 0
0x000197d5      660f6f8424d0.  movdqa xmm0, xmmword [rsp + 0xd0]
0x000197de      0f2984241001.  movaps xmmword [rsp + 0x110], xmm0
0x000197e6      488b84241801.  mov rax, qword [rsp + 0x118]
0x000197ee      480184241001.  add qword [rsp + 0x110], rax
0x000197f6      488b442408     mov rax, qword [rsp + 8]
0x000197fb      660f6f8424e0.  movdqa xmm0, xmmword [rsp + 0xe0]
0x00019804      0fbe10         movsx edx, byte [rax]
0x00019807      488984245001.  mov qword [rsp + 0x150], rax
0x0001980f      0f2984242001.  movaps xmmword [rsp + 0x120], xmm0
0x00019817      89d0           mov eax, edx
0x00019819      c0e805         shr al, 5
0x0001981c      660f6f8424f0.  movdqa xmm0, xmmword [rsp + 0xf0]
0x00019825      83e007         and eax, 7
0x00019828      418b448500     mov eax, dword [r13 + rax*4]
0x0001982d      0f2984243001.  movaps xmmword [rsp + 0x130], xmm0
0x00019835      0fa3d0         bt eax, edx
0x00019838      0f838a090000   jae 0x1a1c8
0x0001983e      48c784245801.  mov qword [rsp + 0x158], 1
0x0001984a      899424640100.  mov dword [rsp + 0x164], edx
0x00019851      c68424600100.  mov byte [rsp + 0x160], 1
0x00019859      c684244c0100.  mov byte [rsp + 0x14c], 1
0x00019861      8bb424640100.  mov esi, dword [rsp + 0x164]
0x00019868      85f6           test esi, esi
0x0001986a      0f84340d0000   je 0x1a5a4
0x00019870      488b84245801.  mov rax, qword [rsp + 0x158]
0x00019878      c684244c0100.  mov byte [rsp + 0x14c], 0
0x00019880      4883c301       add rbx, 1
0x00019884      480184245001.  add qword [rsp + 0x150], rax
0x0001988c      e9c2000000     jmp 0x19953
0x00019891      0f1f80000000.  nop dword [rax]
0x00019898      80bc24000100.  cmp byte [rsp + 0x100], 0
0x000198a0      0f853b030000   jne 0x19be1
0x000198a6      488b8c241001.  mov rcx, qword [rsp + 0x110]
0x000198ae      0fb611         movzx edx, byte [rcx]
0x000198b1      89d0           mov eax, edx
0x000198b3      c0e805         shr al, 5
0x000198b6      83e007         and eax, 7
0x000198b9      418b448500     mov eax, dword [r13 + rax*4]
0x000198be      0fa3d0         bt eax, edx
0x000198c1      0f8301030000   jae 0x19bc8
0x000198c7      48c784241801.  mov qword [rsp + 0x118], 1
0x000198d3      0fbe01         movsx eax, byte [rcx]
0x000198d6      c68424200100.  mov byte [rsp + 0x120], 1
0x000198de      c684240c0100.  mov byte [rsp + 0x10c], 1
0x000198e6      898424240100.  mov dword [rsp + 0x124], eax
0x000198ed      8b8424240100.  mov eax, dword [rsp + 0x124]
0x000198f4      85c0           test eax, eax
0x000198f6      0f84a4030000   je 0x19ca0
0x000198fc      80bc24600100.  cmp byte [rsp + 0x160], 0
0x00019904      0f84c9000000   je 0x199d3
0x0001990a      398424640100.  cmp dword [rsp + 0x164], eax
0x00019911      0f95c0         setne al
0x00019914      84c0           test al, al
0x00019916      488d5301       lea rdx, [rbx + 1]
0x0001991a      0f85c9000000   jne 0x199e9
0x00019920      488b84241801.  mov rax, qword [rsp + 0x118]
0x00019928      480184241001.  add qword [rsp + 0x110], rax
0x00019930      4889d3         mov rbx, rdx
0x00019933      488b84245801.  mov rax, qword [rsp + 0x158]
0x0001993b      480184245001.  add qword [rsp + 0x150], rax
0x00019943      c684240c0100.  mov byte [rsp + 0x10c], 0
0x0001994b      c684244c0100.  mov byte [rsp + 0x14c], 0
0x00019953      80bc24400100.  cmp byte [rsp + 0x140], 0
0x0001995b      0f8598010000   jne 0x19af9
0x00019961      488b8c245001.  mov rcx, qword [rsp + 0x150]
0x00019969      0fb611         movzx edx, byte [rcx]
0x0001996c      89d0           mov eax, edx
0x0001996e      c0e805         shr al, 5
0x00019971      83e007         and eax, 7
0x00019974      418b448500     mov eax, dword [r13 + rax*4]
0x00019979      0fa3d0         bt eax, edx
0x0001997c      0f835e010000   jae 0x19ae0
0x00019982      48c784245801.  mov qword [rsp + 0x158], 1
0x0001998e      0fbe01         movsx eax, byte [rcx]
0x00019991      c68424600100.  mov byte [rsp + 0x160], 1
0x00019999      c684244c0100.  mov byte [rsp + 0x14c], 1
0x000199a1      898424640100.  mov dword [rsp + 0x164], eax
0x000199a8      8b9424640100.  mov edx, dword [rsp + 0x164]
0x000199af      85d2           test edx, edx
0x000199b1      0f8401020000   je 0x19bb8
0x000199b7      80bc240c0100.  cmp byte [rsp + 0x10c], 0
0x000199bf      0f84d3feffff   je 0x19898
0x000199c5      80bc24200100.  cmp byte [rsp + 0x120], 0
0x000199cd      0f851affffff   jne 0x198ed
0x000199d3      488b94241801.  mov rdx, qword [rsp + 0x118]
0x000199db      483b94245801.  cmp rdx, qword [rsp + 0x158]
0x000199e3      0f84c7020000   je 0x19cb0
0x000199e9      488b8c24d800.  mov rcx, qword [rsp + 0xd8]
0x000199f1      48018c24d000.  add qword [rsp + 0xd0], rcx
0x000199f9      4983c601       add r14, 1
0x000199fd      80bc24c00000.  cmp byte [rsp + 0xc0], 0
0x00019a05      c68424cc0000.  mov byte [rsp + 0xcc], 0
0x00019a0d      0f84f5fcffff   je 0x19708
0x00019a13      488d8424c000.  lea rax, [rsp + 0xc0]
0x00019a1b      48890424       mov qword [rsp], rax
0x00019a1f      e86c83feff     call sym.imp.__ctype_get_mb_cur_max
0x00019a24      4c8b8424d000.  mov r8, qword [rsp + 0xd0]
0x00019a2c      4889c6         mov rsi, rax
0x00019a2f      4c89c7         mov rdi, r8
0x00019a32      4c89442418     mov qword [rsp + 0x18], r8
0x00019a37      e8f4f1feff     call sym.strnlen1
0x00019a3c      488b3424       mov rsi, qword [rsp]
0x00019a40      4c8b442418     mov r8, qword [rsp + 0x18]
0x00019a45      4889c2         mov rdx, rax
0x00019a48      488d4e04       lea rcx, [rsi + 4]
0x00019a4c      488d7e24       lea rdi, [rsi + 0x24]
0x00019a50      4c89c6         mov rsi, r8
0x00019a53      e85809ffff     call sym.rpl_mbrtowc
0x00019a58      4883f8ff       cmp rax, 0xffffffffffffffff
0x00019a5c      48898424d800.  mov qword [rsp + 0xd8], rax
0x00019a64      0f8466020000   je 0x19cd0
0x00019a6a      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00019a6e      0f8424070000   je 0x1a198
0x00019a74      4885c0         test rax, rax
0x00019a77      752c           jne 0x19aa5
0x00019a79      488b8424d000.  mov rax, qword [rsp + 0xd0]
0x00019a81      48c78424d800.  mov qword [rsp + 0xd8], 1
0x00019a8d      803800         cmp byte [rax], 0
0x00019a90      0f85ef0a0000   jne 0x1a585
0x00019a96      8b8424e40000.  mov eax, dword [rsp + 0xe4]
0x00019a9d      85c0           test eax, eax
0x00019a9f      0f85bd070000   jne 0x1a262
0x00019aa5      488b3c24       mov rdi, qword [rsp]
0x00019aa9      c68424e00000.  mov byte [rsp + 0xe0], 1
0x00019ab1      4883c704       add rdi, 4
0x00019ab5      e8f685feff     call sym.imp.mbsinit
0x00019aba      85c0           test eax, eax
0x00019abc      0f840e060000   je 0x1a0d0
0x00019ac2      c68424c00000.  mov byte [rsp + 0xc0], 0
0x00019aca      c68424cc0000.  mov byte [rsp + 0xcc], 1
0x00019ad2      e978fcffff     jmp 0x1974f
0x00019ad7      660f1f840000.  nop word [rax + rax]
0x00019ae0      488d7d04       lea rdi, [rbp + 4]
0x00019ae4      e8c785feff     call sym.imp.mbsinit
0x00019ae9      85c0           test eax, eax
0x00019aeb      0f84670a0000   je 0x1a558
0x00019af1      c68424400100.  mov byte [rsp + 0x140], 1
0x00019af9      e89282feff     call sym.imp.__ctype_get_mb_cur_max
0x00019afe      4c8b84245001.  mov r8, qword [rsp + 0x150]
0x00019b06      4889c6         mov rsi, rax
0x00019b09      4c89c7         mov rdi, r8
0x00019b0c      4c890424       mov qword [rsp], r8
0x00019b10      e81bf1feff     call sym.strnlen1
0x00019b15      4c8b0424       mov r8, qword [rsp]
0x00019b19      488d4d04       lea rcx, [rbp + 4]
0x00019b1d      488d7d24       lea rdi, [rbp + 0x24]
0x00019b21      4889c2         mov rdx, rax
0x00019b24      4c89c6         mov rsi, r8
0x00019b27      e88408ffff     call sym.rpl_mbrtowc
0x00019b2c      4883f8ff       cmp rax, 0xffffffffffffffff
0x00019b30      488984245801.  mov qword [rsp + 0x158], rax
0x00019b38      0f8402020000   je 0x19d40
0x00019b3e      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00019b42      0f8448020000   je 0x19d90
0x00019b48      4885c0         test rax, rax
0x00019b4b      752c           jne 0x19b79
0x00019b4d      488b84245001.  mov rax, qword [rsp + 0x150]
0x00019b55      48c784245801.  mov qword [rsp + 0x158], 1
0x00019b61      803800         cmp byte [rax], 0
0x00019b64      0f851b0a0000   jne 0x1a585
0x00019b6a      8b8c24640100.  mov ecx, dword [rsp + 0x164]
0x00019b71      85c9           test ecx, ecx
0x00019b73      0f85e9060000   jne 0x1a262
0x00019b79      488d7d04       lea rdi, [rbp + 4]
0x00019b7d      c68424600100.  mov byte [rsp + 0x160], 1
0x00019b85      e82685feff     call sym.imp.mbsinit
0x00019b8a      85c0           test eax, eax
0x00019b8c      0f842e020000   je 0x19dc0
0x00019b92      8b9424640100.  mov edx, dword [rsp + 0x164]
0x00019b99      c68424400100.  mov byte [rsp + 0x140], 0
0x00019ba1      c684244c0100.  mov byte [rsp + 0x14c], 1
0x00019ba9      85d2           test edx, edx
0x00019bab      0f8506feffff   jne 0x199b7
0x00019bb1      0f1f80000000.  nop dword [rax]
0x00019bb8      488b8424d000.  mov rax, qword [rsp + 0xd0]
0x00019bc0      e961faffff     jmp 0x19626
0x00019bc5      0f1f00         nop dword [rax]
0x00019bc8      498d7f04       lea rdi, [r15 + 4]
0x00019bcc      e8df84feff     call sym.imp.mbsinit
0x00019bd1      85c0           test eax, eax
0x00019bd3      0f847f090000   je 0x1a558
0x00019bd9      c68424000100.  mov byte [rsp + 0x100], 1
0x00019be1      e8aa81feff     call sym.imp.__ctype_get_mb_cur_max
0x00019be6      4c8b84241001.  mov r8, qword [rsp + 0x110]
0x00019bee      4889c6         mov rsi, rax
0x00019bf1      4c89c7         mov rdi, r8
0x00019bf4      4c890424       mov qword [rsp], r8
0x00019bf8      e833f0feff     call sym.strnlen1
0x00019bfd      4c8b0424       mov r8, qword [rsp]
0x00019c01      498d4f04       lea rcx, [r15 + 4]
0x00019c05      498d7f24       lea rdi, [r15 + 0x24]
0x00019c09      4889c2         mov rdx, rax
0x00019c0c      4c89c6         mov rsi, r8
0x00019c0f      e89c07ffff     call sym.rpl_mbrtowc
0x00019c14      4883f8ff       cmp rax, 0xffffffffffffffff
0x00019c18      488984241801.  mov qword [rsp + 0x118], rax
0x00019c20      0f8442010000   je 0x19d68
0x00019c26      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00019c2a      0f84a0010000   je 0x19dd0
0x00019c30      4885c0         test rax, rax
0x00019c33      752c           jne 0x19c61
0x00019c35      488b84241001.  mov rax, qword [rsp + 0x110]
0x00019c3d      48c784241801.  mov qword [rsp + 0x118], 1
0x00019c49      803800         cmp byte [rax], 0
0x00019c4c      0f8533090000   jne 0x1a585
0x00019c52      8b8424240100.  mov eax, dword [rsp + 0x124]
0x00019c59      85c0           test eax, eax
0x00019c5b      0f8501060000   jne 0x1a262
0x00019c61      498d7f04       lea rdi, [r15 + 4]
0x00019c65      c68424200100.  mov byte [rsp + 0x120], 1
0x00019c6d      e83e84feff     call sym.imp.mbsinit
0x00019c72      85c0           test eax, eax
0x00019c74      0f8486010000   je 0x19e00
0x00019c7a      8b8424240100.  mov eax, dword [rsp + 0x124]
0x00019c81      c68424000100.  mov byte [rsp + 0x100], 0
0x00019c89      c684240c0100.  mov byte [rsp + 0x10c], 1
0x00019c91      85c0           test eax, eax
0x00019c93      0f8563fcffff   jne 0x198fc
0x00019c99      0f1f80000000.  nop dword [rax]
0x00019ca0      31c0           xor eax, eax
0x00019ca2      e97ff9ffff     jmp 0x19626
0x00019ca7      660f1f840000.  nop word [rax + rax]
0x00019cb0      488bb4245001.  mov rsi, qword [rsp + 0x150]
0x00019cb8      488bbc241001.  mov rdi, qword [rsp + 0x110]
0x00019cc0      e8cb81feff     call sym.imp.memcmp
0x00019cc5      85c0           test eax, eax
0x00019cc7      0f95c0         setne al
0x00019cca      e945fcffff     jmp 0x19914
0x00019ccf      90             nop
0x00019cd0      48c78424d800.  mov qword [rsp + 0xd8], 1
0x00019cdc      c68424e00000.  mov byte [rsp + 0xe0], 0
0x00019ce4      c68424cc0000.  mov byte [rsp + 0xcc], 1
0x00019cec      4983fe09       cmp r14, 9
0x00019cf0      0f97c0         seta al
0x00019cf3      22442410       and al, byte [rsp + 0x10]
0x00019cf7      0f853b080000   jne 0x1a538
0x00019cfd      4883c301       add rbx, 1
0x00019d01      488b8c24d800.  mov rcx, qword [rsp + 0xd8]
0x00019d09      483b4c2458     cmp rcx, qword [rsp + 0x58]
0x00019d0e      0f85ddfcffff   jne 0x199f1
0x00019d14      488b742450     mov rsi, qword [rsp + 0x50]
0x00019d19      488bbc24d000.  mov rdi, qword [rsp + 0xd0]
0x00019d21      4889ca         mov rdx, rcx
0x00019d24      48890c24       mov qword [rsp], rcx
0x00019d28      e86381feff     call sym.imp.memcmp
0x00019d2d      85c0           test eax, eax
0x00019d2f      488b0c24       mov rcx, qword [rsp]
0x00019d33      0f85b8fcffff   jne 0x199f1
0x00019d39      e962faffff     jmp 0x197a0
0x00019d3e      6690           nop
0x00019d40      48c784245801.  mov qword [rsp + 0x158], 1
0x00019d4c      c68424600100.  mov byte [rsp + 0x160], 0
0x00019d54      c684244c0100.  mov byte [rsp + 0x14c], 1
0x00019d5c      e956fcffff     jmp 0x199b7
0x00019d61      0f1f80000000.  nop dword [rax]
0x00019d68      48c784241801.  mov qword [rsp + 0x118], 1
0x00019d74      c68424200100.  mov byte [rsp + 0x120], 0
0x00019d7c      c684240c0100.  mov byte [rsp + 0x10c], 1
0x00019d84      e94afcffff     jmp 0x199d3
0x00019d89      0f1f80000000.  nop dword [rax]
0x00019d90      488bbc245001.  mov rdi, qword [rsp + 0x150]
0x00019d98      e80380feff     call sym.imp.strlen
0x00019d9d      c68424600100.  mov byte [rsp + 0x160], 0
0x00019da5      488984245801.  mov qword [rsp + 0x158], rax
0x00019dad      c684244c0100.  mov byte [rsp + 0x14c], 1
0x00019db5      e9fdfbffff     jmp 0x199b7
0x00019dba      660f1f440000   nop word [rax + rax]
0x00019dc0      c684244c0100.  mov byte [rsp + 0x14c], 1
0x00019dc8      e9dbfbffff     jmp 0x199a8
0x00019dcd      0f1f00         nop dword [rax]
0x00019dd0      488bbc241001.  mov rdi, qword [rsp + 0x110]
0x00019dd8      e8c37ffeff     call sym.imp.strlen
0x00019ddd      c68424200100.  mov byte [rsp + 0x120], 0
0x00019de5      488984241801.  mov qword [rsp + 0x118], rax
0x00019ded      c684240c0100.  mov byte [rsp + 0x10c], 1
0x00019df5      e9d9fbffff     jmp 0x199d3
0x00019dfa      660f1f440000   nop word [rax + rax]
0x00019e00      c684240c0100.  mov byte [rsp + 0x10c], 1
0x00019e08      e9e0faffff     jmp 0x198ed
0x00019e0d      0f1f00         nop dword [rax]
0x00019e10      488b4c2408     mov rcx, qword [rsp + 8]
0x00019e15      0fb67101       movzx esi, byte [rcx + 1]
0x00019e19      4084f6         test sil, sil
0x00019e1c      0f8401f8ffff   je 0x19623
0x00019e22      410fb63e       movzx edi, byte [r14]
0x00019e26      4084ff         test dil, dil
0x00019e29      0f8471feffff   je 0x19ca0
0x00019e2f      4038fe         cmp sil, dil
0x00019e32      488d5a02       lea rbx, [rdx + 2]
0x00019e36      0f8506f7ffff   jne 0x19542
0x00019e3c      48f7da         neg rdx
0x00019e3f      4c8d0c11       lea r9, [rcx + rdx]
0x00019e43      4c01e2         add rdx, r12
0x00019e46      eb22           jmp 0x19e6a
0x00019e48      0f1f84000000.  nop dword [rax + rax]
0x00019e50      0fb63c1a       movzx edi, byte [rdx + rbx]
0x00019e54      4084ff         test dil, dil
0x00019e57      0f8443feffff   je 0x19ca0
0x00019e5d      4883c301       add rbx, 1
0x00019e61      4038fe         cmp sil, dil
0x00019e64      0f85d8f6ffff   jne 0x19542
0x00019e6a      410fb63419     movzx esi, byte [r9 + rbx]
0x00019e6f      4084f6         test sil, sil
0x00019e72      75dc           jne 0x19e50
0x00019e74      e9aaf7ffff     jmp 0x19623
0x00019e79      0f1f80000000.  nop dword [rax]
0x00019e80      488d8424c000.  lea rax, [rsp + 0xc0]
0x00019e88      488dbc24c400.  lea rdi, [rsp + 0xc4]
0x00019e90      48890424       mov qword [rsp], rax
0x00019e94      e81782feff     call sym.imp.mbsinit
0x00019e99      85c0           test eax, eax
0x00019e9b      0f84b7060000   je 0x1a558
0x00019ea1      c68424c00000.  mov byte [rsp + 0xc0], 1
0x00019ea9      e971fbffff     jmp 0x19a1f
0x00019eae      6690           nop
0x00019eb0      4889de         mov rsi, rbx
0x00019eb3      482b742420     sub rsi, qword [rsp + 0x20]
0x00019eb8      0fb684248c00.  movzx eax, byte [rsp + 0x8c]
0x00019ec0      48893424       mov qword [rsp], rsi
0x00019ec4      0f844d060000   je 0x1a517
0x00019eca      84c0           test al, al
0x00019ecc      742d           je 0x19efb
0x00019ece      80bc24a00000.  cmp byte [rsp + 0xa0], 0
0x00019ed6      7574           jne 0x19f4c
0x00019ed8      488b84249800.  mov rax, qword [rsp + 0x98]
0x00019ee0      480184249000.  add qword [rsp + 0x90], rax
0x00019ee8      48832c2401     sub qword [rsp], 1
0x00019eed      c684248c0000.  mov byte [rsp + 0x8c], 0
0x00019ef5      0f840d020000   je 0x1a108
0x00019efb      80bc24800000.  cmp byte [rsp + 0x80], 0
0x00019f03      0f857f010000   jne 0x1a088
0x00019f09      488b8c249000.  mov rcx, qword [rsp + 0x90]
0x00019f11      0fb611         movzx edx, byte [rcx]
0x00019f14      89d0           mov eax, edx
0x00019f16      c0e805         shr al, 5
0x00019f19      83e007         and eax, 7
0x00019f1c      418b448500     mov eax, dword [r13 + rax*4]
0x00019f21      0fa3d0         bt eax, edx
0x00019f24      737a           jae 0x19fa0
0x00019f26      48c784249800.  mov qword [rsp + 0x98], 1
0x00019f32      0fbe01         movsx eax, byte [rcx]
0x00019f35      c68424a00000.  mov byte [rsp + 0xa0], 1
0x00019f3d      c684248c0000.  mov byte [rsp + 0x8c], 1
0x00019f45      898424a40000.  mov dword [rsp + 0xa4], eax
0x00019f4c      448b9424a400.  mov r10d, dword [rsp + 0xa4]
0x00019f54      4585d2         test r10d, r10d
0x00019f57      0f857bffffff   jne 0x19ed8
0x00019f5d      80bc248c0000.  cmp byte [rsp + 0x8c], 0
0x00019f65      0f849d010000   je 0x1a108
0x00019f6b      488b542428     mov rdx, qword [rsp + 0x28]
0x00019f70      488b742408     mov rsi, qword [rsp + 8]
0x00019f75      4c89e7         mov rdi, r12
0x00019f78      e8a3eaffff     call sym.knuth_morris_pratt_multibyte
0x00019f7d      84c0           test al, al
0x00019f7f      88442410       mov byte [rsp + 0x10], al
0x00019f83      0f8516050000   jne 0x1a49f
0x00019f89      0fb69424e000.  movzx edx, byte [rsp + 0xe0]
0x00019f91      e9e5010000     jmp 0x1a17b
0x00019f96      662e0f1f8400.  nop word cs:[rax + rax]
0x00019fa0      488d84248000.  lea rax, [rsp + 0x80]
0x00019fa8      488dbc248400.  lea rdi, [rsp + 0x84]
0x00019fb0      4889442410     mov qword [rsp + 0x10], rax
0x00019fb5      e8f680feff     call sym.imp.mbsinit
0x00019fba      85c0           test eax, eax
0x00019fbc      0f8496050000   je 0x1a558
0x00019fc2      c68424800000.  mov byte [rsp + 0x80], 1
0x00019fca      e8c17dfeff     call sym.imp.__ctype_get_mb_cur_max
0x00019fcf      4c8b84249000.  mov r8, qword [rsp + 0x90]
0x00019fd7      4889c6         mov rsi, rax
0x00019fda      4c89c7         mov rdi, r8
0x00019fdd      4c89442418     mov qword [rsp + 0x18], r8
0x00019fe2      e849ecfeff     call sym.strnlen1
0x00019fe7      488b742410     mov rsi, qword [rsp + 0x10]
0x00019fec      4c8b442418     mov r8, qword [rsp + 0x18]
0x00019ff1      4889c2         mov rdx, rax
0x00019ff4      488d4e04       lea rcx, [rsi + 4]
0x00019ff8      488d7e24       lea rdi, [rsi + 0x24]
0x00019ffc      4c89c6         mov rsi, r8
0x00019fff      e8ac03ffff     call sym.rpl_mbrtowc
0x0001a004      4883f8ff       cmp rax, 0xffffffffffffffff
0x0001a008      488984249800.  mov qword [rsp + 0x98], rax
0x0001a010      0f848a000000   je 0x1a0a0
0x0001a016      4883f8fe       cmp rax, 0xfffffffffffffffe
0x0001a01a      0f84c0000000   je 0x1a0e0
0x0001a020      4885c0         test rax, rax
0x0001a023      752e           jne 0x1a053
0x0001a025      488b84249000.  mov rax, qword [rsp + 0x90]
0x0001a02d      48c784249800.  mov qword [rsp + 0x98], 1
0x0001a039      803800         cmp byte [rax], 0
0x0001a03c      0f8543050000   jne 0x1a585
0x0001a042      448b9c24a400.  mov r11d, dword [rsp + 0xa4]
0x0001a04a      4585db         test r11d, r11d
0x0001a04d      0f850f020000   jne 0x1a262
0x0001a053      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0001a058      c68424a00000.  mov byte [rsp + 0xa0], 1
0x0001a060      4883c704       add rdi, 4
0x0001a064      e84780feff     call sym.imp.mbsinit
0x0001a069      85c0           test eax, eax
0x0001a06b      7453           je 0x1a0c0
0x0001a06d      c68424800000.  mov byte [rsp + 0x80], 0
0x0001a075      c684248c0000.  mov byte [rsp + 0x8c], 1
0x0001a07d      e9cafeffff     jmp 0x19f4c
0x0001a082      660f1f440000   nop word [rax + rax]
0x0001a088      488d84248000.  lea rax, [rsp + 0x80]
0x0001a090      4889442410     mov qword [rsp + 0x10], rax
0x0001a095      e930ffffff     jmp 0x19fca
0x0001a09a      660f1f440000   nop word [rax + rax]
0x0001a0a0      48c784249800.  mov qword [rsp + 0x98], 1
0x0001a0ac      c68424a00000.  mov byte [rsp + 0xa0], 0
0x0001a0b4      e91ffeffff     jmp 0x19ed8
0x0001a0b9      0f1f80000000.  nop dword [rax]
0x0001a0c0      c684248c0000.  mov byte [rsp + 0x8c], 1
0x0001a0c8      e97ffeffff     jmp 0x19f4c
0x0001a0cd      0f1f00         nop dword [rax]
0x0001a0d0      c68424cc0000.  mov byte [rsp + 0xcc], 1
0x0001a0d8      e972f6ffff     jmp 0x1974f
0x0001a0dd      0f1f00         nop dword [rax]
0x0001a0e0      488bbc249000.  mov rdi, qword [rsp + 0x90]
0x0001a0e8      e8b37cfeff     call sym.imp.strlen
0x0001a0ed      c68424a00000.  mov byte [rsp + 0xa0], 0
0x0001a0f5      488984249800.  mov qword [rsp + 0x98], rax
0x0001a0fd      e9d6fdffff     jmp 0x19ed8
0x0001a102      660f1f440000   nop word [rax + rax]
0x0001a108      80bc24800000.  cmp byte [rsp + 0x80], 0
0x0001a110      0f8552020000   jne 0x1a368
0x0001a116      488b8c249000.  mov rcx, qword [rsp + 0x90]
0x0001a11e      0fb611         movzx edx, byte [rcx]
0x0001a121      89d0           mov eax, edx
0x0001a123      c0e805         shr al, 5
0x0001a126      83e007         and eax, 7
0x0001a129      418b448500     mov eax, dword [r13 + rax*4]
0x0001a12e      0fa3d0         bt eax, edx
0x0001a131      0f83f8020000   jae 0x1a42f
0x0001a137      48c784249800.  mov qword [rsp + 0x98], 1
0x0001a143      0fbe01         movsx eax, byte [rcx]
0x0001a146      c68424a00000.  mov byte [rsp + 0xa0], 1
0x0001a14e      c684248c0000.  mov byte [rsp + 0x8c], 1
0x0001a156      898424a40000.  mov dword [rsp + 0xa4], eax
0x0001a15d      448b8424a400.  mov r8d, dword [rsp + 0xa4]
0x0001a165      4585c0         test r8d, r8d
0x0001a168      0f84fdfdffff   je 0x19f6b
0x0001a16e      0fb69424e000.  movzx edx, byte [rsp + 0xe0]
0x0001a176      c644241001     mov byte [rsp + 0x10], 1
0x0001a17b      488d4301       lea rax, [rbx + 1]
0x0001a17f      84d2           test dl, dl
0x0001a181      48895c2420     mov qword [rsp + 0x20], rbx
0x0001a186      4889c3         mov rbx, rax
0x0001a189      0f85f5f5ffff   jne 0x19784
0x0001a18f      e96dfbffff     jmp 0x19d01
0x0001a194      0f1f4000       nop dword [rax]
0x0001a198      488bbc24d000.  mov rdi, qword [rsp + 0xd0]
0x0001a1a0      e8fb7bfeff     call sym.imp.strlen
0x0001a1a5      c68424e00000.  mov byte [rsp + 0xe0], 0
0x0001a1ad      48898424d800.  mov qword [rsp + 0xd8], rax
0x0001a1b5      c68424cc0000.  mov byte [rsp + 0xcc], 1
0x0001a1bd      e92afbffff     jmp 0x19cec
0x0001a1c2      660f1f440000   nop word [rax + rax]
0x0001a1c8      4889cf         mov rdi, rcx
0x0001a1cb      48894c2418     mov qword [rsp + 0x18], rcx
0x0001a1d0      e8db7efeff     call sym.imp.mbsinit
0x0001a1d5      85c0           test eax, eax
0x0001a1d7      0f847b030000   je 0x1a558
0x0001a1dd      c68424400100.  mov byte [rsp + 0x140], 1
0x0001a1e5      e8a67bfeff     call sym.imp.__ctype_get_mb_cur_max
0x0001a1ea      4c8b84245001.  mov r8, qword [rsp + 0x150]
0x0001a1f2      4889c6         mov rsi, rax
0x0001a1f5      4c89c7         mov rdi, r8
0x0001a1f8      4c890424       mov qword [rsp], r8
0x0001a1fc      e82feafeff     call sym.strnlen1
0x0001a201      4c8b0424       mov r8, qword [rsp]
0x0001a205      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0001a20a      488d7d24       lea rdi, [rbp + 0x24]
0x0001a20e      4889c2         mov rdx, rax
0x0001a211      4c89c6         mov rsi, r8
0x0001a214      e89701ffff     call sym.rpl_mbrtowc
0x0001a219      4883f8ff       cmp rax, 0xffffffffffffffff
0x0001a21d      488984245801.  mov qword [rsp + 0x158], rax
0x0001a225      0f841d010000   je 0x1a348
0x0001a22b      4883f8fe       cmp rax, 0xfffffffffffffffe
0x0001a22f      0f8474020000   je 0x1a4a9
0x0001a235      4885c0         test rax, rax
0x0001a238      7536           jne 0x1a270
0x0001a23a      488b84245001.  mov rax, qword [rsp + 0x150]
0x0001a242      48c784245801.  mov qword [rsp + 0x158], 1
0x0001a24e      803800         cmp byte [rax], 0
0x0001a251      0f852e030000   jne 0x1a585
0x0001a257      8bbc24640100.  mov edi, dword [rsp + 0x164]
0x0001a25e      85ff           test edi, edi
0x0001a260      740e           je 0x1a270
0x0001a262      e8ff7efeff     call sym.mbuiter_multi_next.part.0_1
0x0001a267      660f1f840000.  nop word [rax + rax]
0x0001a270      488d7d04       lea rdi, [rbp + 4]
0x0001a274      c68424600100.  mov byte [rsp + 0x160], 1
0x0001a27c      e82f7efeff     call sym.imp.mbsinit
0x0001a281      85c0           test eax, eax
0x0001a283      0f84d5010000   je 0x1a45e
0x0001a289      c68424400100.  mov byte [rsp + 0x140], 0
0x0001a291      c684244c0100.  mov byte [rsp + 0x14c], 1
0x0001a299      e9c3f5ffff     jmp 0x19861
0x0001a29e      6690           nop
0x0001a2a0      4889ef         mov rdi, rbp
0x0001a2a3      e8087efeff     call sym.imp.mbsinit
0x0001a2a8      85c0           test eax, eax
0x0001a2aa      0f84a8020000   je 0x1a558
0x0001a2b0      c644244001     mov byte [rsp + 0x40], 1
0x0001a2b5      e8d67afeff     call sym.imp.__ctype_get_mb_cur_max
0x0001a2ba      4c8b742450     mov r14, qword [rsp + 0x50]
0x0001a2bf      4889c6         mov rsi, rax
0x0001a2c2      4c89f7         mov rdi, r14
0x0001a2c5      e866e9feff     call sym.strnlen1
0x0001a2ca      488d7b24       lea rdi, [rbx + 0x24]
0x0001a2ce      4889e9         mov rcx, rbp
0x0001a2d1      4889c2         mov rdx, rax
0x0001a2d4      4c89f6         mov rsi, r14
0x0001a2d7      e8d400ffff     call sym.rpl_mbrtowc
0x0001a2dc      4883f8ff       cmp rax, 0xffffffffffffffff
0x0001a2e0      4889442458     mov qword [rsp + 0x58], rax
0x0001a2e5      0f847df3ffff   je 0x19668
0x0001a2eb      4883f8fe       cmp rax, 0xfffffffffffffffe
0x0001a2ef      0f84d6010000   je 0x1a4cb
0x0001a2f5      4885c0         test rax, rax
0x0001a2f8      7523           jne 0x1a31d
0x0001a2fa      488b442450     mov rax, qword [rsp + 0x50]
0x0001a2ff      48c744245801.  mov qword [rsp + 0x58], 1
0x0001a308      803800         cmp byte [rax], 0
0x0001a30b      0f8574020000   jne 0x1a585
0x0001a311      8b442464       mov eax, dword [rsp + 0x64]
0x0001a315      85c0           test eax, eax
0x0001a317      0f8545ffffff   jne 0x1a262
0x0001a31d      488d7b04       lea rdi, [rbx + 4]
0x0001a321      c644246001     mov byte [rsp + 0x60], 1
0x0001a326      e8857dfeff     call sym.imp.mbsinit
0x0001a32b      85c0           test eax, eax
0x0001a32d      0f8438010000   je 0x1a46b
0x0001a333      c644244000     mov byte [rsp + 0x40], 0
0x0001a338      c644244c01     mov byte [rsp + 0x4c], 1
0x0001a33d      e9d9f2ffff     jmp 0x1961b
0x0001a342      660f1f440000   nop word [rax + rax]
0x0001a348      48c784245801.  mov qword [rsp + 0x158], 1
0x0001a354      c68424600100.  mov byte [rsp + 0x160], 0
0x0001a35c      e90ff5ffff     jmp 0x19870
0x0001a361      0f1f80000000.  nop dword [rax]
0x0001a368      488d84248000.  lea rax, [rsp + 0x80]
0x0001a370      4889442410     mov qword [rsp + 0x10], rax
0x0001a375      e8167afeff     call sym.imp.__ctype_get_mb_cur_max
0x0001a37a      4c8b84249000.  mov r8, qword [rsp + 0x90]
0x0001a382      4889c6         mov rsi, rax
0x0001a385      4c89c7         mov rdi, r8
0x0001a388      4c890424       mov qword [rsp], r8
0x0001a38c      e89fe8feff     call sym.strnlen1
0x0001a391      488b742410     mov rsi, qword [rsp + 0x10]
0x0001a396      4c8b0424       mov r8, qword [rsp]
0x0001a39a      4889c2         mov rdx, rax
0x0001a39d      488d4e04       lea rcx, [rsi + 4]
0x0001a3a1      488d7e24       lea rdi, [rsi + 0x24]
0x0001a3a5      4c89c6         mov rsi, r8
0x0001a3a8      e80300ffff     call sym.rpl_mbrtowc
0x0001a3ad      4883f8ff       cmp rax, 0xffffffffffffffff
0x0001a3b1      488984249800.  mov qword [rsp + 0x98], rax
0x0001a3b9      0f842a010000   je 0x1a4e9
0x0001a3bf      4883f8fe       cmp rax, 0xfffffffffffffffe
0x0001a3c3      0f84ac000000   je 0x1a475
0x0001a3c9      4885c0         test rax, rax
0x0001a3cc      752e           jne 0x1a3fc
0x0001a3ce      488b84249000.  mov rax, qword [rsp + 0x90]
0x0001a3d6      48c784249800.  mov qword [rsp + 0x98], 1
0x0001a3e2      803800         cmp byte [rax], 0
0x0001a3e5      0f859a010000   jne 0x1a585
0x0001a3eb      448b8c24a400.  mov r9d, dword [rsp + 0xa4]
0x0001a3f3      4585c9         test r9d, r9d
0x0001a3f6      0f8566feffff   jne 0x1a262
0x0001a3fc      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0001a401      c68424a00000.  mov byte [rsp + 0xa0], 1
0x0001a409      4883c704       add rdi, 4
0x0001a40d      e89e7cfeff     call sym.imp.mbsinit
0x0001a412      85c0           test eax, eax
0x0001a414      0f84f0000000   je 0x1a50a
0x0001a41a      c68424800000.  mov byte [rsp + 0x80], 0
0x0001a422      c684248c0000.  mov byte [rsp + 0x8c], 1
0x0001a42a      e92efdffff     jmp 0x1a15d
0x0001a42f      488d84248000.  lea rax, [rsp + 0x80]
0x0001a437      488dbc248400.  lea rdi, [rsp + 0x84]
0x0001a43f      4889442410     mov qword [rsp + 0x10], rax
0x0001a444      e8677cfeff     call sym.imp.mbsinit
0x0001a449      85c0           test eax, eax
0x0001a44b      0f8407010000   je 0x1a558
0x0001a451      c68424800000.  mov byte [rsp + 0x80], 1
0x0001a459      e917ffffff     jmp 0x1a375
0x0001a45e      c684244c0100.  mov byte [rsp + 0x14c], 1
0x0001a466      e9f6f3ffff     jmp 0x19861
0x0001a46b      c644244c01     mov byte [rsp + 0x4c], 1
0x0001a470      e9a6f1ffff     jmp 0x1961b
0x0001a475      488bbc249000.  mov rdi, qword [rsp + 0x90]
0x0001a47d      e81e79feff     call sym.imp.strlen
0x0001a482      c68424a00000.  mov byte [rsp + 0xa0], 0
0x0001a48a      488984249800.  mov qword [rsp + 0x98], rax
0x0001a492      c684248c0000.  mov byte [rsp + 0x8c], 1
0x0001a49a      e9cffcffff     jmp 0x1a16e
0x0001a49f      488b442438     mov rax, qword [rsp + 0x38]
0x0001a4a4      e97df1ffff     jmp 0x19626
0x0001a4a9      488bbc245001.  mov rdi, qword [rsp + 0x150]
0x0001a4b1      e8ea78feff     call sym.imp.strlen
0x0001a4b6      c68424600100.  mov byte [rsp + 0x160], 0
0x0001a4be      488984245801.  mov qword [rsp + 0x158], rax
0x0001a4c6      e9a5f3ffff     jmp 0x19870
0x0001a4cb      488b7c2450     mov rdi, qword [rsp + 0x50]
0x0001a4d0      e8cb78feff     call sym.imp.strlen
0x0001a4d5      c644246000     mov byte [rsp + 0x60], 0
0x0001a4da      4889442458     mov qword [rsp + 0x58], rax
0x0001a4df      c644244c01     mov byte [rsp + 0x4c], 1
0x0001a4e4      e992f1ffff     jmp 0x1967b
0x0001a4e9      48c784249800.  mov qword [rsp + 0x98], 1
0x0001a4f5      c68424a00000.  mov byte [rsp + 0xa0], 0
0x0001a4fd      c684248c0000.  mov byte [rsp + 0x8c], 1
0x0001a505      e964fcffff     jmp 0x1a16e
0x0001a50a      c684248c0000.  mov byte [rsp + 0x8c], 1
0x0001a512      e946fcffff     jmp 0x1a15d
0x0001a517      84c0           test al, al
0x0001a519      0f84e9fbffff   je 0x1a108
0x0001a51f      80bc24a00000.  cmp byte [rsp + 0xa0], 0
0x0001a527      0f8441fcffff   je 0x1a16e
0x0001a52d      e92bfcffff     jmp 0x1a15d
0x0001a532      660f1f440000   nop word [rax + rax]
0x0001a538      4b8d14b6       lea rdx, [r14 + r14*4]
0x0001a53c      4839d3         cmp rbx, rdx
0x0001a53f      0f836bf9ffff   jae 0x19eb0
0x0001a545      4883c301       add rbx, 1
0x0001a549      88442410       mov byte [rsp + 0x10], al
0x0001a54d      e9aff7ffff     jmp 0x19d01
0x0001a552      660f1f440000   nop word [rax + rax]
0x0001a558      488d0d212a00.  lea rcx, obj.__PRETTY_FUNCTION__.5056   ; 0x1cf80 ; "mbuiter_multi_next"
0x0001a55f      488d35321700.  lea rsi, str..._coreutils_8.31_lib_mbuiter.h ; 0x1bc98 ; "../coreutils-8.31/lib/mbuiter.h"
0x0001a566      488d3d5d1700.  lea rdi, str.mbsinit___iter__state      ; 0x1bcca ; "mbsinit (&iter->state)"
0x0001a56d      ba96000000     mov edx, 0x96
0x0001a572      e8b978feff     call sym.imp.__assert_fail
0x0001a577      4883c301       add rbx, 1
0x0001a57b      e904f2ffff     jmp 0x19784
0x0001a580      e82b78feff     call sym.imp.__stack_chk_fail
0x0001a585      488d0df42900.  lea rcx, obj.__PRETTY_FUNCTION__.5056   ; 0x1cf80 ; "mbuiter_multi_next"
0x0001a58c      488d35051700.  lea rsi, str..._coreutils_8.31_lib_mbuiter.h ; 0x1bc98 ; "../coreutils-8.31/lib/mbuiter.h"
0x0001a593      488d3d471700.  lea rdi, str.iter__cur.ptr_______0      ; 0x1bce1 ; "*iter->cur.ptr == '\0'"
0x0001a59a      bab2000000     mov edx, 0xb2
0x0001a59f      e88c78feff     call sym.imp.__assert_fail
0x0001a5a4      e8c776feff     call sym.imp.abort
0x0001a5a9      0f1f80000000.  nop dword [rax]
;-- mem_cd_iconv:
0x0001a5b0      4157           push r15                                ; ../coreutils-8.31/lib/striconv.c:45
0x0001a5b2      4156           push r14
0x0001a5b4      4989ff         mov r15, rdi
0x0001a5b7      4155           push r13
0x0001a5b9      4154           push r12
0x0001a5bb      4989f5         mov r13, rsi
0x0001a5be      55             push rbp
0x0001a5bf      53             push rbx
0x0001a5c0      4889d3         mov rbx, rdx
0x0001a5c3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/striconv.c:55
0x0001a5c5      31d2           xor edx, edx
0x0001a5c7      4881ec681000.  sub rsp, 0x1068                         ; ../coreutils-8.31/lib/striconv.c:45
0x0001a5ce      48897c2428     mov qword [rsp + 0x28], rdi
0x0001a5d3      48894c2418     mov qword [rsp + 0x18], rcx
0x0001a5d8      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/striconv.c:55
0x0001a5db      4c89442410     mov qword [rsp + 0x10], r8              ; ../coreutils-8.31/lib/striconv.c:45
0x0001a5e0      31c9           xor ecx, ecx                            ; ../coreutils-8.31/lib/striconv.c:55
0x0001a5e2      4531c0         xor r8d, r8d
0x0001a5e5      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/striconv.c:45
0x0001a5ee      488984245810.  mov qword [rsp + 0x1058], rax
0x0001a5f6      31c0           xor eax, eax
0x0001a5f8      e8d376feff     call sym.imp.iconv                      ; ../coreutils-8.31/lib/striconv.c:55
0x0001a5fd      4c897c2430     mov qword [rsp + 0x30], r15             ; ../coreutils-8.31/lib/striconv.c:65
0x0001a602      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/striconv.c:60
0x0001a605      4d85ed         test r13, r13                           ; ../coreutils-8.31/lib/striconv.c:68
0x0001a608      4c896c2438     mov qword [rsp + 0x38], r13             ; ../coreutils-8.31/lib/striconv.c:66
0x0001a60d      4c8d742450     lea r14, [rsp + 0x50]
0x0001a612      4c8d642448     lea r12, [rsp + 0x48]
0x0001a617      488d6c2440     lea rbp, [rsp + 0x40]
0x0001a61c      747d           je 0x1a69b                              ; ../coreutils-8.31/lib/striconv.c:68
0x0001a61e      488d442438     lea rax, [rsp + 0x38]
0x0001a623      488d742430     lea rsi, [rsp + 0x30]
0x0001a628      4c896c2420     mov qword [rsp + 0x20], r13
0x0001a62d      4889742408     mov qword [rsp + 8], rsi
0x0001a632      4989c5         mov r13, rax
0x0001a635      eb20           jmp 0x1a657
0x0001a637      660f1f840000.  nop word [rax + rax]
0x0001a640      488b442440     mov rax, qword [rsp + 0x40]             ; ../coreutils-8.31/lib/striconv.c:96
0x0001a645      4c29f0         sub rax, r14
0x0001a648      4901c7         add r15, rax
0x0001a64b      48837c243800   cmp qword [rsp + 0x38], 0               ; ../coreutils-8.31/lib/striconv.c:68
0x0001a651      0f8499010000   je 0x1a7f0
0x0001a657      488b742408     mov rsi, qword [rsp + 8]                ; ../coreutils-8.31/lib/striconv.c:72
0x0001a65c      4d89e0         mov r8, r12
0x0001a65f      4889e9         mov rcx, rbp
0x0001a662      4c89ea         mov rdx, r13
0x0001a665      4889df         mov rdi, rbx
0x0001a668      4c89742440     mov qword [rsp + 0x40], r14             ; ../coreutils-8.31/lib/striconv.c:70
0x0001a66d      48c744244800.  mov qword [rsp + 0x48], 0x1000          ; ../coreutils-8.31/lib/striconv.c:71 ; [0x1000:8]=0x5000006969194
0x0001a676      e85576feff     call sym.imp.iconv                      ; ../coreutils-8.31/lib/striconv.c:72
0x0001a67b      4883f8ff       cmp rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/striconv.c:76
0x0001a67f      75bf           jne 0x1a640
0x0001a681      e8fa75feff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/striconv.c:78
0x0001a686      8b00           mov eax, dword [rax]
0x0001a688      83f807         cmp eax, 7
0x0001a68b      74b3           je 0x1a640
0x0001a68d      83f816         cmp eax, 0x16                           ; ../coreutils-8.31/lib/striconv.c:80
0x0001a690      4c8b6c2420     mov r13, qword [rsp + 0x20]
0x0001a695      0f85be010000   jne 0x1a859
0x0001a69b      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/striconv.c:105
0x0001a69d      31f6           xor esi, esi
0x0001a69f      4d89e0         mov r8, r12
0x0001a6a2      4889e9         mov rcx, rbp
0x0001a6a5      4889df         mov rdi, rbx
0x0001a6a8      4c89742440     mov qword [rsp + 0x40], r14             ; ../coreutils-8.31/lib/striconv.c:103
0x0001a6ad      48c744244800.  mov qword [rsp + 0x48], 0x1000          ; ../coreutils-8.31/lib/striconv.c:104 ; [0x1000:8]=0x5000006969194
0x0001a6b6      e81576feff     call sym.imp.iconv                      ; ../coreutils-8.31/lib/striconv.c:105
0x0001a6bb      4883f8ff       cmp rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/striconv.c:107
0x0001a6bf      0f8494010000   je 0x1a859
0x0001a6c5      488b442440     mov rax, qword [rsp + 0x40]             ; ../coreutils-8.31/lib/striconv.c:109
0x0001a6ca      4c29f0         sub rax, r14
0x0001a6cd      4c01f8         add rax, r15                            ; ../coreutils-8.31/lib/striconv.c:116
0x0001a6d0      4889442408     mov qword [rsp + 8], rax
0x0001a6d5      0f8425010000   je 0x1a800
0x0001a6db      488b442418     mov rax, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/striconv.c:121
0x0001a6e0      488b00         mov rax, qword [rax]
0x0001a6e3      4885c0         test rax, rax
0x0001a6e6      4889442420     mov qword [rsp + 0x20], rax
0x0001a6eb      740f           je 0x1a6fc
0x0001a6ed      488b442410     mov rax, qword [rsp + 0x10]
0x0001a6f2      488b4c2408     mov rcx, qword [rsp + 8]
0x0001a6f7      483908         cmp qword [rax], rcx
0x0001a6fa      7318           jae 0x1a714
0x0001a6fc      488b7c2408     mov rdi, qword [rsp + 8]                ; ../coreutils-8.31/lib/striconv.c:125
0x0001a701      e81a78feff     call sym.imp.malloc
0x0001a706      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/striconv.c:126
0x0001a709      4889442420     mov qword [rsp + 0x20], rax             ; ../coreutils-8.31/lib/striconv.c:125
0x0001a70e      0f843a010000   je 0x1a84e                              ; ../coreutils-8.31/lib/striconv.c:126
0x0001a714      4531c0         xor r8d, r8d                            ; ../coreutils-8.31/lib/striconv.c:138
0x0001a717      31c9           xor ecx, ecx
0x0001a719      31d2           xor edx, edx
0x0001a71b      31f6           xor esi, esi
0x0001a71d      4889df         mov rdi, rbx
0x0001a720      4c8d7c2438     lea r15, [rsp + 0x38]                   ; ../coreutils-8.31/lib/striconv.c:150
0x0001a725      e8a675feff     call sym.imp.iconv                      ; ../coreutils-8.31/lib/striconv.c:138
0x0001a72a      488b442428     mov rax, qword [rsp + 0x28]             ; ../coreutils-8.31/lib/striconv.c:143
0x0001a72f      4c896c2438     mov qword [rsp + 0x38], r13             ; ../coreutils-8.31/lib/striconv.c:144
0x0001a734      4c8d742430     lea r14, [rsp + 0x30]                   ; ../coreutils-8.31/lib/striconv.c:150
0x0001a739      4889442430     mov qword [rsp + 0x30], rax             ; ../coreutils-8.31/lib/striconv.c:143
0x0001a73e      488b442420     mov rax, qword [rsp + 0x20]             ; ../coreutils-8.31/lib/striconv.c:145
0x0001a743      4889442440     mov qword [rsp + 0x40], rax
0x0001a748      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/striconv.c:146
0x0001a74d      4889442448     mov qword [rsp + 0x48], rax
0x0001a752      eb27           jmp 0x1a77b                             ; ../coreutils-8.31/lib/striconv.c:148
0x0001a754      0f1f4000       nop dword [rax]
0x0001a758      4d89e0         mov r8, r12                             ; ../coreutils-8.31/lib/striconv.c:150
0x0001a75b      4889e9         mov rcx, rbp
0x0001a75e      4c89fa         mov rdx, r15
0x0001a761      4c89f6         mov rsi, r14
0x0001a764      4889df         mov rdi, rbx
0x0001a767      e86475feff     call sym.imp.iconv
0x0001a76c      4883f8ff       cmp rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/striconv.c:154
0x0001a770      0f849a000000   je 0x1a810
0x0001a776      4c8b6c2438     mov r13, qword [rsp + 0x38]
0x0001a77b      4d85ed         test r13, r13                           ; ../coreutils-8.31/lib/striconv.c:148
0x0001a77e      75d8           jne 0x1a758
0x0001a780      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/striconv.c:178
0x0001a782      31f6           xor esi, esi
0x0001a784      4d89e0         mov r8, r12
0x0001a787      4889e9         mov rcx, rbp
0x0001a78a      4889df         mov rdi, rbx
0x0001a78d      e83e75feff     call sym.imp.iconv
0x0001a792      4883f8ff       cmp rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/striconv.c:180
0x0001a796      0f8482000000   je 0x1a81e
0x0001a79c      48837c244800   cmp qword [rsp + 0x48], 0               ; ../coreutils-8.31/lib/striconv.c:184
0x0001a7a2      0f85bb000000   jne 0x1a863
0x0001a7a8      488b442418     mov rax, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/striconv.c:188
0x0001a7ad      488b742420     mov rsi, qword [rsp + 0x20]
0x0001a7b2      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/striconv.c:191
0x0001a7b4      488b7c2408     mov rdi, qword [rsp + 8]                ; ../coreutils-8.31/lib/striconv.c:189
0x0001a7b9      488930         mov qword [rax], rsi                    ; ../coreutils-8.31/lib/striconv.c:188
0x0001a7bc      488b442410     mov rax, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/striconv.c:189
0x0001a7c1      488938         mov qword [rax], rdi
0x0001a7c4      488b94245810.  mov rdx, qword [rsp + 0x1058]           ; ../coreutils-8.31/lib/striconv.c:204
0x0001a7cc      644833142528.  xor rdx, qword fs:[0x28]
0x0001a7d5      89d8           mov eax, ebx
0x0001a7d7      0f858b000000   jne 0x1a868
0x0001a7dd      4881c4681000.  add rsp, 0x1068
0x0001a7e4      5b             pop rbx
0x0001a7e5      5d             pop rbp
0x0001a7e6      415c           pop r12
0x0001a7e8      415d           pop r13
0x0001a7ea      415e           pop r14
0x0001a7ec      415f           pop r15
0x0001a7ee      c3             ret
0x0001a7ef      90             nop
0x0001a7f0      4c8b6c2420     mov r13, qword [rsp + 0x20]
0x0001a7f5      e9a1feffff     jmp 0x1a69b
0x0001a7fa      660f1f440000   nop word [rax + rax]
0x0001a800      488b442410     mov rax, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/striconv.c:118
0x0001a805      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/striconv.c:119
0x0001a807      48c700000000.  mov qword [rax], 0                      ; ../coreutils-8.31/lib/striconv.c:118
0x0001a80e      ebb4           jmp 0x1a7c4                             ; ../coreutils-8.31/lib/striconv.c:119
0x0001a810      e86b74feff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/striconv.c:156
0x0001a815      833816         cmp dword [rax], 0x16
0x0001a818      0f8462ffffff   je 0x1a780
0x0001a81e      488b442418     mov rax, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/striconv.c:195
0x0001a823      4c8b7c2420     mov r15, qword [rsp + 0x20]
0x0001a828      bbffffffff     mov ebx, 0xffffffff                     ; ../coreutils-8.31/lib/striconv.c:201 ; -1
0x0001a82d      4c3938         cmp qword [rax], r15                    ; ../coreutils-8.31/lib/striconv.c:195
0x0001a830      7492           je 0x1a7c4
0x0001a832      e84974feff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/striconv.c:197
0x0001a837      448b20         mov r12d, dword [rax]
0x0001a83a      4889c5         mov rbp, rax
0x0001a83d      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/striconv.c:198
0x0001a840      e81b74feff     call sym.imp.free
0x0001a845      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/striconv.c:199
0x0001a849      e976ffffff     jmp 0x1a7c4
0x0001a84e      e82d74feff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/striconv.c:128
0x0001a853      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0001a859      bbffffffff     mov ebx, 0xffffffff                     ; ../coreutils-8.31/lib/striconv.c:129 ; -1
0x0001a85e      e961ffffff     jmp 0x1a7c4
0x0001a863      e80874feff     call sym.imp.abort                      ; ../coreutils-8.31/lib/striconv.c:185
0x0001a868      e84375feff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/striconv.c:204
0x0001a86d      0f1f00         nop dword [rax]
;-- str_cd_iconv:
0x0001a870      4157           push r15                                ; ../coreutils-8.31/lib/striconv.c:208
0x0001a872      4156           push r14
0x0001a874      4155           push r13
0x0001a876      4154           push r12
0x0001a878      4989f4         mov r12, rsi
0x0001a87b      55             push rbp
0x0001a87c      53             push rbx
0x0001a87d      4883ec58       sub rsp, 0x58
0x0001a881      64488b042528.  mov rax, qword fs:[0x28]
0x0001a88a      4889442448     mov qword [rsp + 0x48], rax
0x0001a88f      31c0           xor eax, eax
0x0001a891      48897c2428     mov qword [rsp + 0x28], rdi             ; ../coreutils-8.31/lib/striconv.c:255
0x0001a896      e80575feff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/striconv.c:256
0x0001a89b      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/striconv.c:265
0x0001a89e      4889442430     mov qword [rsp + 0x30], rax             ; ../coreutils-8.31/lib/striconv.c:256
0x0001a8a3      49c1e504       shl r13, 4                              ; ../coreutils-8.31/lib/striconv.c:265
0x0001a8a7      483d00000010   cmp rax, 0x10000000
0x0001a8ad      4c0f43e8       cmovae r13, rax
0x0001a8b1      498d6d01       lea rbp, [r13 + 1]                      ; ../coreutils-8.31/lib/striconv.c:267
0x0001a8b5      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/striconv.c:269
0x0001a8b8      e86376feff     call sym.imp.malloc
0x0001a8bd      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/striconv.c:270
0x0001a8c0      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/striconv.c:269
0x0001a8c3      0f84d7010000   je 0x1aaa0                              ; ../coreutils-8.31/lib/striconv.c:270
0x0001a8c9      4531c0         xor r8d, r8d                            ; ../coreutils-8.31/lib/striconv.c:281
0x0001a8cc      31c9           xor ecx, ecx
0x0001a8ce      31d2           xor edx, edx
0x0001a8d0      31f6           xor esi, esi
0x0001a8d2      4c89e7         mov rdi, r12
0x0001a8d5      e8f673feff     call sym.imp.iconv
0x0001a8da      488d442440     lea rax, [rsp + 0x40]
0x0001a8df      48895c2438     mov qword [rsp + 0x38], rbx             ; ../coreutils-8.31/lib/striconv.c:286
0x0001a8e4      4c896c2440     mov qword [rsp + 0x40], r13             ; ../coreutils-8.31/lib/striconv.c:287
0x0001a8e9      4889442408     mov qword [rsp + 8], rax
0x0001a8ee      488d442438     lea rax, [rsp + 0x38]
0x0001a8f3      48890424       mov qword [rsp], rax
0x0001a8f7      488d442430     lea rax, [rsp + 0x30]
0x0001a8fc      4889442418     mov qword [rsp + 0x18], rax
0x0001a901      488d442428     lea rax, [rsp + 0x28]
0x0001a906      4889442410     mov qword [rsp + 0x10], rax
0x0001a90b      eb67           jmp 0x1a974
0x0001a90d      0f1f00         nop dword [rax]
0x0001a910      e86b73feff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/striconv.c:299
0x0001a915      4989c7         mov r15, rax
0x0001a918      8b00           mov eax, dword [rax]
0x0001a91a      83f816         cmp eax, 0x16
0x0001a91d      0f84e3000000   je 0x1aa06
0x0001a923      83f807         cmp eax, 7                              ; ../coreutils-8.31/lib/striconv.c:301
0x0001a926      0f8532010000   jne 0x1aa5e
0x0001a92c      4c8b742438     mov r14, qword [rsp + 0x38]             ; ../coreutils-8.31/lib/striconv.c:303
0x0001a931      4c8d6c2d00     lea r13, [rbp + rbp]                    ; ../coreutils-8.31/lib/striconv.c:304
0x0001a936      4929de         sub r14, rbx                            ; ../coreutils-8.31/lib/striconv.c:303
0x0001a939      4c39ed         cmp rbp, r13                            ; ../coreutils-8.31/lib/striconv.c:307
0x0001a93c      0f834e010000   jae 0x1aa90
0x0001a942      4c89ee         mov rsi, r13                            ; ../coreutils-8.31/lib/striconv.c:312
0x0001a945      4889df         mov rdi, rbx
0x0001a948      e84376feff     call sym.imp.realloc
0x0001a94d      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/striconv.c:313
0x0001a950      0f843a010000   je 0x1aa90
0x0001a956      4a8d3430       lea rsi, [rax + r14]                    ; ../coreutils-8.31/lib/striconv.c:320
0x0001a95a      4889c3         mov rbx, rax
0x0001a95d      4c89ed         mov rbp, r13
0x0001a960      4889742438     mov qword [rsp + 0x38], rsi
0x0001a965      498d75ff       lea rsi, [r13 - 1]                      ; ../coreutils-8.31/lib/striconv.c:321
0x0001a969      4889f2         mov rdx, rsi
0x0001a96c      4c29f2         sub rdx, r14
0x0001a96f      4889542440     mov qword [rsp + 0x40], rdx
0x0001a974      4c8b442408     mov r8, qword [rsp + 8]                 ; ../coreutils-8.31/lib/striconv.c:293
0x0001a979      488b0c24       mov rcx, qword [rsp]
0x0001a97d      4c89e7         mov rdi, r12
0x0001a980      488b542418     mov rdx, qword [rsp + 0x18]
0x0001a985      488b742410     mov rsi, qword [rsp + 0x10]
0x0001a98a      e84173feff     call sym.imp.iconv
0x0001a98f      4883f8ff       cmp rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/striconv.c:297
0x0001a993      0f8477ffffff   je 0x1a910
0x0001a999      eb6b           jmp 0x1aa06
0x0001a99b      0f1f440000     nop dword [rax + rax]
0x0001a9a0      e8db72feff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/striconv.c:340
0x0001a9a5      833807         cmp dword [rax], 7
0x0001a9a8      4889c1         mov rcx, rax
0x0001a9ab      0f85ad000000   jne 0x1aa5e
0x0001a9b1      4c8b7c2438     mov r15, qword [rsp + 0x38]             ; ../coreutils-8.31/lib/striconv.c:342
0x0001a9b6      488d542d00     lea rdx, [rbp + rbp]                    ; ../coreutils-8.31/lib/striconv.c:343
0x0001a9bb      4929df         sub r15, rbx                            ; ../coreutils-8.31/lib/striconv.c:342
0x0001a9be      4839d5         cmp rbp, rdx                            ; ../coreutils-8.31/lib/striconv.c:346
0x0001a9c1      0f8391000000   jae 0x1aa58
0x0001a9c7      4889d6         mov rsi, rdx                            ; ../coreutils-8.31/lib/striconv.c:351
0x0001a9ca      4889df         mov rdi, rbx
0x0001a9cd      4889542410     mov qword [rsp + 0x10], rdx
0x0001a9d2      4889442418     mov qword [rsp + 0x18], rax
0x0001a9d7      e8b475feff     call sym.imp.realloc
0x0001a9dc      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/striconv.c:352
0x0001a9df      488b542410     mov rdx, qword [rsp + 0x10]
0x0001a9e4      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0001a9e9      746d           je 0x1aa58
0x0001a9eb      4a8d0c38       lea rcx, [rax + r15]                    ; ../coreutils-8.31/lib/striconv.c:359
0x0001a9ef      4889d5         mov rbp, rdx
0x0001a9f2      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/striconv.c:334
0x0001a9f5      48894c2438     mov qword [rsp + 0x38], rcx             ; ../coreutils-8.31/lib/striconv.c:359
0x0001a9fa      488d4aff       lea rcx, [rdx - 1]                      ; ../coreutils-8.31/lib/striconv.c:360
0x0001a9fe      4c29f9         sub rcx, r15
0x0001aa01      48894c2440     mov qword [rsp + 0x40], rcx
0x0001aa06      4c8b442408     mov r8, qword [rsp + 8]                 ; ../coreutils-8.31/lib/striconv.c:336
0x0001aa0b      488b0c24       mov rcx, qword [rsp]
0x0001aa0f      31d2           xor edx, edx
0x0001aa11      31f6           xor esi, esi
0x0001aa13      4c89e7         mov rdi, r12
0x0001aa16      e8b572feff     call sym.imp.iconv
0x0001aa1b      4883f8ff       cmp rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/striconv.c:338
0x0001aa1f      0f847bffffff   je 0x1a9a0
0x0001aa25      488b442438     mov rax, qword [rsp + 0x38]             ; ../coreutils-8.31/lib/striconv.c:371
0x0001aa2a      488d5001       lea rdx, [rax + 1]
0x0001aa2e      4889542438     mov qword [rsp + 0x38], rdx
0x0001aa33      c60000         mov byte [rax], 0
0x0001aa36      488b742438     mov rsi, qword [rsp + 0x38]             ; ../coreutils-8.31/lib/striconv.c:373
0x0001aa3b      4829de         sub rsi, rbx
0x0001aa3e      4839f5         cmp rbp, rsi                            ; ../coreutils-8.31/lib/striconv.c:377
0x0001aa41      7625           jbe 0x1aa68
0x0001aa43      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/striconv.c:379
0x0001aa46      e84575feff     call sym.imp.realloc
0x0001aa4b      4885c0         test rax, rax
0x0001aa4e      480f45d8       cmovne rbx, rax
0x0001aa52      eb14           jmp 0x1aa68
0x0001aa54      0f1f4000       nop dword [rax]
0x0001aa58      c7010c000000   mov dword [rcx], 0xc                    ; ../coreutils-8.31/lib/striconv.c:354 ; [0xc:4]=0
0x0001aa5e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/striconv.c:390
0x0001aa61      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/striconv.c:392
0x0001aa63      e8f871feff     call sym.imp.free                       ; ../coreutils-8.31/lib/striconv.c:390
0x0001aa68      488b7c2448     mov rdi, qword [rsp + 0x48]             ; ../coreutils-8.31/lib/striconv.c:396
0x0001aa6d      6448333c2528.  xor rdi, qword fs:[0x28]
0x0001aa76      4889d8         mov rax, rbx
0x0001aa79      7532           jne 0x1aaad
0x0001aa7b      4883c458       add rsp, 0x58
0x0001aa7f      5b             pop rbx
0x0001aa80      5d             pop rbp
0x0001aa81      415c           pop r12
0x0001aa83      415d           pop r13
0x0001aa85      415e           pop r14
0x0001aa87      415f           pop r15
0x0001aa89      c3             ret
0x0001aa8a      660f1f440000   nop word [rax + rax]
0x0001aa90      41c7070c0000.  mov dword [r15], 0xc                    ; ../coreutils-8.31/lib/striconv.c:315 ; [0xc:4]=0
0x0001aa97      ebc5           jmp 0x1aa5e                             ; ../coreutils-8.31/lib/striconv.c:316
0x0001aa99      0f1f80000000.  nop dword [rax]
0x0001aaa0      e8db71feff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/striconv.c:272
0x0001aaa5      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0001aaab      ebbb           jmp 0x1aa68                             ; ../coreutils-8.31/lib/striconv.c:273
0x0001aaad      e8fe72feff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/striconv.c:274
0x0001aab2      0f1f4000       nop dword [rax]
0x0001aab6      662e0f1f8400.  nop word cs:[rax + rax]
;-- str_iconv:
0x0001aac0      4155           push r13
0x0001aac2      4154           push r12                                ; ../coreutils-8.31/lib/striconv.c:275
0x0001aac4      55             push rbp
0x0001aac5      53             push rbx
0x0001aac6      4889fb         mov rbx, rdi
0x0001aac9      4883ec08       sub rsp, 8
0x0001aacd      803f00         cmp byte [rdi], 0
0x0001aad0      7415           je 0x1aae7
0x0001aad2      4989f4         mov r12, rsi
0x0001aad5      4889d6         mov rsi, rdx
0x0001aad8      4889d5         mov rbp, rdx
0x0001aadb      4c89e7         mov rdi, r12
0x0001aade      e86ddbffff     call sym.c_strcasecmp
0x0001aae3      85c0           test eax, eax
0x0001aae5      7521           jne 0x1ab08
0x0001aae7      4889df         mov rdi, rbx
0x0001aaea      e8b175feff     call sym.imp.strdup
0x0001aaef      4885c0         test rax, rax
0x0001aaf2      4889c3         mov rbx, rax
0x0001aaf5      7469           je 0x1ab60                              ; ../coreutils-8.31/lib/striconv.c:299
0x0001aaf7      4883c408       add rsp, 8
0x0001aafb      4889d8         mov rax, rbx
0x0001aafe      5b             pop rbx
0x0001aaff      5d             pop rbp
0x0001ab00      415c           pop r12                                 ; ../coreutils-8.31/lib/striconv.c:300
0x0001ab02      415d           pop r13
0x0001ab04      c3             ret                                     ; ../coreutils-8.31/lib/striconv.c:299
0x0001ab05      0f1f00         nop dword [rax]
0x0001ab08      4889ef         mov rdi, rbp
0x0001ab0b      4c89e6         mov rsi, r12
0x0001ab0e      e8dd75feff     call sym.imp.iconv_open
0x0001ab13      4883f8ff       cmp rax, 0xffffffffffffffff
0x0001ab17      4889c5         mov rbp, rax
0x0001ab1a      0f8480000000   je 0x1aba0
0x0001ab20      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/striconv.c:314
0x0001ab23      4889c6         mov rsi, rax
0x0001ab26      e845fdffff     call sym.str_cd_iconv
0x0001ab2b      4885c0         test rax, rax
0x0001ab2e      4889c3         mov rbx, rax
0x0001ab31      744d           je 0x1ab80
0x0001ab33      4889ef         mov rdi, rbp
0x0001ab36      e88574feff     call sym.imp.iconv_close
0x0001ab3b      85c0           test eax, eax
0x0001ab3d      79b8           jns 0x1aaf7
0x0001ab3f      e83c71feff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/striconv.c:321
0x0001ab44      448b20         mov r12d, dword [rax]
0x0001ab47      4889c5         mov rbp, rax
0x0001ab4a      4889df         mov rdi, rbx
0x0001ab4d      e80e71feff     call sym.imp.free                       ; ../coreutils-8.31/lib/striconv.c:280
0x0001ab52      31db           xor ebx, ebx
0x0001ab54      44896500       mov dword [rbp], r12d
0x0001ab58      eb9d           jmp 0x1aaf7                             ; ../coreutils-8.31/lib/striconv.c:335
0x0001ab5a      660f1f440000   nop word [rax + rax]
0x0001ab60      e81b71feff     call sym.imp.__errno_location
0x0001ab65      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0001ab6b      4883c408       add rsp, 8
0x0001ab6f      4889d8         mov rax, rbx
0x0001ab72      5b             pop rbx
0x0001ab73      5d             pop rbp
0x0001ab74      415c           pop r12
0x0001ab76      415d           pop r13
0x0001ab78      c3             ret                                     ; ../coreutils-8.31/lib/striconv.c:309
0x0001ab79      0f1f80000000.  nop dword [rax]
0x0001ab80      e8fb70feff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/striconv.c:310
0x0001ab85      448b28         mov r13d, dword [rax]
0x0001ab88      4989c4         mov r12, rax
0x0001ab8b      4889ef         mov rdi, rbp
0x0001ab8e      e82d74feff     call sym.imp.iconv_close
0x0001ab93      45892c24       mov dword [r12], r13d
0x0001ab97      e95bffffff     jmp 0x1aaf7
0x0001ab9c      0f1f4000       nop dword [rax]
0x0001aba0      31db           xor ebx, ebx
0x0001aba2      e950ffffff     jmp 0x1aaf7
0x0001aba7      660f1f840000.  nop word [rax + rax]
;-- mmalloca:
0x0001abb0      4883c720       add rdi, 0x20                           ; ../coreutils-8.31/lib/malloca.c:44 ; "@"
0x0001abb4      722d           jb 0x1abe3
0x0001abb6      4883ec08       sub rsp, 8
0x0001abba      e86173feff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/malloca.c:52
0x0001abbf      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/malloca.c:71
0x0001abc1      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/malloca.c:54
0x0001abc4      7415           je 0x1abdb
0x0001abc6      488d5010       lea rdx, [rax + 0x10]                   ; ../coreutils-8.31/lib/malloca.c:57
0x0001abca      4883e2e0       and rdx, 0xffffffffffffffe0             ; ../coreutils-8.31/lib/malloca.c:58
0x0001abce      4883c210       add rdx, 0x10                           ; ../coreutils-8.31/lib/malloca.c:56
0x0001abd2      4889d1         mov rcx, rdx                            ; ../coreutils-8.31/lib/malloca.c:65
0x0001abd5      4829c1         sub rcx, rax
0x0001abd8      884aff         mov byte [rdx - 1], cl
0x0001abdb      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/malloca.c:79
0x0001abde      4883c408       add rsp, 8
0x0001abe2      c3             ret
0x0001abe3      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/malloca.c:71
0x0001abe5      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/malloca.c:79
0x0001abe8      c3             ret
0x0001abe9      0f1f80000000.  nop dword [rax]
;-- freea:
0x0001abf0      40f6c70f       test dil, 0xf                           ; ../coreutils-8.31/lib/malloca.c:84
0x0001abf4      7516           jne 0x1ac0c
0x0001abf6      40f6c710       test dil, 0x10                          ; ../coreutils-8.31/lib/malloca.c:92
0x0001abfa      7504           jne 0x1ac00
0x0001abfc      f3c3           ret
0x0001abfe      6690           nop
0x0001ac00      0fb647ff       movzx eax, byte [rdi - 1]               ; ../coreutils-8.31/lib/malloca.c:94
0x0001ac04      4829c7         sub rdi, rax
0x0001ac07      e95470feff     jmp sym.imp.free                        ; ../coreutils-8.31/lib/malloca.c:95
0x0001ac0c      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/malloca.c:84
0x0001ac10      e85b70feff     call sym.imp.abort                      ; ../coreutils-8.31/lib/malloca.c:89
0x0001ac15      662e0f1f8400.  nop word cs:[rax + rax]
0x0001ac1f      90             nop
;-- mbslen:
0x0001ac20      4156           push r14                                ; ../coreutils-8.31/lib/mbslen.c:30
0x0001ac22      4155           push r13                                ; /tring.h:87
0x0001ac24      4154           push r12                                ; /strnlen1.h:9
0x0001ac26      55             push rbp
0x0001ac27      53             push rbx
0x0001ac28      4889fb         mov rbx, rdi
0x0001ac2b      4883ec50       sub rsp, 0x50
0x0001ac2f      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/mbslen.c:30
0x0001ac38      4889442448     mov qword [rsp + 0x48], rax
0x0001ac3d      31c0           xor eax, eax
0x0001ac3f      e84c71feff     call sym.imp.__ctype_get_mb_cur_max     ; ../coreutils-8.31/lib/mbslen.c:31
0x0001ac44      4883f801       cmp rax, 1
0x0001ac48      7736           ja 0x1ac80
0x0001ac4a      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbslen.c:43
0x0001ac4d      e84e71feff     call sym.imp.strlen
0x0001ac52      4889c3         mov rbx, rax
0x0001ac55      488b742448     mov rsi, qword [rsp + 0x48]             ; ../coreutils-8.31/lib/mbslen.c:44
0x0001ac5a      644833342528.  xor rsi, qword fs:[0x28]
0x0001ac63      4889d8         mov rax, rbx
0x0001ac66      0f859d010000   jne 0x1ae09
0x0001ac6c      4883c450       add rsp, 0x50
0x0001ac70      5b             pop rbx
0x0001ac71      5d             pop rbp                                 ; ../coreutils-8.31/lib/mbchar.h:190
0x0001ac72      415c           pop r12                                 ; /strnlen1.h:13
0x0001ac74      415d           pop r13                                 ; /strnlen1.h:16
0x0001ac76      415e           pop r14
0x0001ac78      c3             ret                                     ; ../coreutils-8.31/lib/mbuiter.h:22
0x0001ac79      0f1f80000000.  nop dword [rax]
0x0001ac80      4889e5         mov rbp, rsp
0x0001ac83      48895c2410     mov qword [rsp + 0x10], rbx
0x0001ac88      c6042400       mov byte [rsp], 0
0x0001ac8c      48c744240400.  mov qword [rsp + 4], 0                  ; ../coreutils-8.31/lib/mbuiter.h:-110
0x0001ac95      c644240c00     mov byte [rsp + 0xc], 0
0x0001ac9a      31db           xor ebx, ebx
0x0001ac9c      4c8d25bd2200.  lea r12, obj.is_basic_table             ; 0x1cf60
0x0001aca3      4c8d6d04       lea r13, [rbp + 4]
0x0001aca7      eb5d           jmp 0x1ad06
0x0001aca9      0f1f80000000.  nop dword [rax]
0x0001acb0      488b4c2410     mov rcx, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/mbuiter.h:-282
0x0001acb5      0fb611         movzx edx, byte [rcx]                   ; ../coreutils-8.31/lib/mbuiter.h:-239
0x0001acb8      89d0           mov eax, edx
0x0001acba      c0e805         shr al, 5                               ; ../coreutils-8.31/lib/mbuiter.h:-283
0x0001acbd      83e007         and eax, 7
0x0001acc0      418b0484       mov eax, dword [r12 + rax*4]
0x0001acc4      0fa3d0         bt eax, edx
0x0001acc7      0f83c3000000   jae 0x1ad90
0x0001accd      48c744241801.  mov qword [rsp + 0x18], 1
0x0001acd6      0fbe01         movsx eax, byte [rcx]
0x0001acd9      c644242001     mov byte [rsp + 0x20], 1
0x0001acde      c644240c01     mov byte [rsp + 0xc], 1
0x0001ace3      89442424       mov dword [rsp + 0x24], eax
0x0001ace7      8b442424       mov eax, dword [rsp + 0x24]
0x0001aceb      85c0           test eax, eax
0x0001aced      0f8462ffffff   je 0x1ac55
0x0001acf3      488b442418     mov rax, qword [rsp + 0x18]
0x0001acf8      4801442410     add qword [rsp + 0x10], rax
0x0001acfd      4883c301       add rbx, 1
0x0001ad01      c644240c00     mov byte [rsp + 0xc], 0
0x0001ad06      803c2400       cmp byte [rsp], 0
0x0001ad0a      74a4           je 0x1acb0
0x0001ad0c      e87f70feff     call sym.imp.__ctype_get_mb_cur_max
0x0001ad11      4c8b742410     mov r14, qword [rsp + 0x10]
0x0001ad16      4889c6         mov rsi, rax
0x0001ad19      4c89f7         mov rdi, r14
0x0001ad1c      e80fdffeff     call sym.strnlen1
0x0001ad21      488d4d04       lea rcx, [rbp + 4]
0x0001ad25      488d7d24       lea rdi, [rbp + 0x24]
0x0001ad29      4889c2         mov rdx, rax
0x0001ad2c      4c89f6         mov rsi, r14
0x0001ad2f      e87cf6feff     call sym.rpl_mbrtowc
0x0001ad34      4883f8ff       cmp rax, 0xffffffffffffffff
0x0001ad38      4889442418     mov qword [rsp + 0x18], rax
0x0001ad3d      7469           je 0x1ada8
0x0001ad3f      4883f8fe       cmp rax, 0xfffffffffffffffe
0x0001ad43      747b           je 0x1adc0
0x0001ad45      4885c0         test rax, rax
0x0001ad48      7523           jne 0x1ad6d
0x0001ad4a      488b442410     mov rax, qword [rsp + 0x10]
0x0001ad4f      48c744241801.  mov qword [rsp + 0x18], 1
0x0001ad58      803800         cmp byte [rax], 0
0x0001ad5b      0f85ad000000   jne 0x1ae0e                             ; /strnlen1.h:78
0x0001ad61      8b542424       mov edx, dword [rsp + 0x24]
0x0001ad65      85d2           test edx, edx
0x0001ad67      0f85c0000000   jne 0x1ae2d
0x0001ad6d      488d7d04       lea rdi, [rbp + 4]
0x0001ad71      c644242001     mov byte [rsp + 0x20], 1
0x0001ad76      e83573feff     call sym.imp.mbsinit
0x0001ad7b      85c0           test eax, eax                           ; /strnlen1.h:99
0x0001ad7d      7461           je 0x1ade0
0x0001ad7f      c6042400       mov byte [rsp], 0
0x0001ad83      c644240c01     mov byte [rsp + 0xc], 1
0x0001ad88      e95affffff     jmp 0x1ace7
0x0001ad8d      0f1f00         nop dword [rax]
0x0001ad90      4c89ef         mov rdi, r13
0x0001ad93      e81873feff     call sym.imp.mbsinit
0x0001ad98      85c0           test eax, eax
0x0001ad9a      744e           je 0x1adea
0x0001ad9c      c6042401       mov byte [rsp], 1
0x0001ada0      e967ffffff     jmp 0x1ad0c
0x0001ada5      0f1f00         nop dword [rax]
0x0001ada8      48c744241801.  mov qword [rsp + 0x18], 1
0x0001adb1      c644242000     mov byte [rsp + 0x20], 0
0x0001adb6      e938ffffff     jmp 0x1acf3
0x0001adbb      0f1f440000     nop dword [rax + rax]
0x0001adc0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0001adc5      e8d66ffeff     call sym.imp.strlen
0x0001adca      c644242000     mov byte [rsp + 0x20], 0
0x0001adcf      4889442418     mov qword [rsp + 0x18], rax
0x0001add4      e91affffff     jmp 0x1acf3
0x0001add9      0f1f80000000.  nop dword [rax]
0x0001ade0      c644240c01     mov byte [rsp + 0xc], 1
0x0001ade5      e9fdfeffff     jmp 0x1ace7
0x0001adea      488d0daf2100.  lea rcx, obj.__PRETTY_FUNCTION__.5021   ; 0x1cfa0 ; "mbuiter_multi_next"
0x0001adf1      488d35a00e00.  lea rsi, str..._coreutils_8.31_lib_mbuiter.h ; 0x1bc98 ; "../coreutils-8.31/lib/mbuiter.h"
0x0001adf8      488d3dcb0e00.  lea rdi, str.mbsinit___iter__state      ; 0x1bcca ; "mbsinit (&iter->state)"
0x0001adff      ba96000000     mov edx, 0x96                           ; /strnlen1.h:126
0x0001ae04      e82770feff     call sym.imp.__assert_fail
0x0001ae09      e8a26ffeff     call sym.imp.__stack_chk_fail
0x0001ae0e      488d0d8b2100.  lea rcx, obj.__PRETTY_FUNCTION__.5021   ; 0x1cfa0 ; "mbuiter_multi_next"
0x0001ae15      488d357c0e00.  lea rsi, str..._coreutils_8.31_lib_mbuiter.h ; 0x1bc98 ; "../coreutils-8.31/lib/mbuiter.h"
0x0001ae1c      488d3dbe0e00.  lea rdi, str.iter__cur.ptr_______0      ; 0x1bce1 ; "*iter->cur.ptr == '\0'"
0x0001ae23      bab2000000     mov edx, 0xb2
0x0001ae28      e80370feff     call sym.imp.__assert_fail
0x0001ae2d      488d0d6c2100.  lea rcx, obj.__PRETTY_FUNCTION__.5021   ; 0x1cfa0 ; "mbuiter_multi_next"
0x0001ae34      488d355d0e00.  lea rsi, str..._coreutils_8.31_lib_mbuiter.h ; 0x1bc98 ; "../coreutils-8.31/lib/mbuiter.h"
0x0001ae3b      488d3d760e00.  lea rdi, str.iter__cur.wc____0          ; 0x1bcb8 ; "iter->cur.wc == 0"
0x0001ae42      bab3000000     mov edx, 0xb3                           ; /strnlen1.h:142
0x0001ae47      e8e46ffeff     call sym.imp.__assert_fail
0x0001ae4c      0f1f4000       nop dword [rax]
;-- __libc_csu_init:
0x0001ae50      4157           push r15                                ; /strnlen1.h:147
0x0001ae52      4156           push r14
0x0001ae54      4989d7         mov r15, rdx
0x0001ae57      4155           push r13
0x0001ae59      4154           push r12
0x0001ae5b      4c8d250e5a20.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x220870 ; "@I"
0x0001ae62      55             push rbp
0x0001ae63      488d2d0e5a20.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x220878
0x0001ae6a      53             push rbx
0x0001ae6b      4189fd         mov r13d, edi
0x0001ae6e      4989f6         mov r14, rsi
0x0001ae71      4c29e5         sub rbp, r12
0x0001ae74      4883ec08       sub rsp, 8
0x0001ae78      48c1fd03       sar rbp, 3
0x0001ae7c      e8a76dfeff     call sym._init
0x0001ae81      4885ed         test rbp, rbp
0x0001ae84      7420           je 0x1aea6
0x0001ae86      31db           xor ebx, ebx
0x0001ae88      0f1f84000000.  nop dword [rax + rax]
0x0001ae90      4c89fa         mov rdx, r15
0x0001ae93      4c89f6         mov rsi, r14
0x0001ae96      4489ef         mov edi, r13d
0x0001ae99      41ff14dc       call qword [r12 + rbx*8]
0x0001ae9d      4883c301       add rbx, 1
0x0001aea1      4839dd         cmp rbp, rbx
0x0001aea4      75ea           jne 0x1ae90
0x0001aea6      4883c408       add rsp, 8
0x0001aeaa      5b             pop rbx
0x0001aeab      5d             pop rbp
0x0001aeac      415c           pop r12
0x0001aeae      415d           pop r13
0x0001aeb0      415e           pop r14
0x0001aeb2      415f           pop r15
0x0001aeb4      c3             ret
0x0001aeb5      90             nop
0x0001aeb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x0001aec0      f3c3           ret
0x0001aec2      662e0f1f8400.  nop word cs:[rax + rax]
0x0001aecc      0f1f4000       nop dword [rax]
;-- atexit:
0x0001aed0      488b15316120.  mov rdx, qword [obj.__dso_handle]       ; [0x221008:8]=0x221008 obj.__dso_handle
0x0001aed7      31f6           xor esi, esi
0x0001aed9      e98271feff     jmp sym.imp.__cxa_atexit
0x0001aede      0000           add byte [rax], al
