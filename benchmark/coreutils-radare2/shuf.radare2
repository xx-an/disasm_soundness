;-- section..plt:
;-- .plt:
0x00001980      ff350ab42000   push qword [0x0020cd90]                 ; [12] -r-x section size 1104 named .plt
0x00001986      ff250cb42000   jmp qword [0x0020cd98]                  ; [0x20cd98:8]=0
0x0000198c      0f1f4000       nop dword [rax]
;-- imp.__uflow:
0x00001990      ff250ab42000   jmp qword [reloc.__uflow]               ; [0x20cda0:8]=0x1996
0x00001996      6800000000     push 0
0x0000199b      e9e0ffffff     jmp sym..plt
;-- imp.abort:
0x000019a0      ff2502b42000   jmp qword [reloc.abort]                 ; [0x20cda8:8]=0x19a6
0x000019a6      6801000000     push 1
0x000019ab      e9d0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x000019b0      ff25fab32000   jmp qword [reloc.__errno_location]      ; [0x20cdb0:8]=0x19b6
0x000019b6      6802000000     push 2
0x000019bb      e9c0ffffff     jmp sym..plt
;-- imp.strncmp:
0x000019c0      ff25f2b32000   jmp qword [reloc.strncmp]               ; [0x20cdb8:8]=0x19c6
0x000019c6      6803000000     push 3
0x000019cb      e9b0ffffff     jmp sym..plt
;-- imp._exit:
0x000019d0      ff25eab32000   jmp qword [reloc._exit]                 ; [0x20cdc0:8]=0x19d6
0x000019d6      6804000000     push 4
0x000019db      e9a0ffffff     jmp sym..plt
;-- imp.ftello:
0x000019e0      ff25e2b32000   jmp qword [reloc.ftello]                ; [0x20cdc8:8]=0x19e6
0x000019e6      6805000000     push 5
0x000019eb      e990ffffff     jmp sym..plt
;-- imp.__fpending:
0x000019f0      ff25dab32000   jmp qword [reloc.__fpending]            ; [0x20cdd0:8]=0x19f6
0x000019f6      6806000000     push 6
0x000019fb      e980ffffff     jmp sym..plt
;-- imp.__read_chk:
0x00001a00      ff25d2b32000   jmp qword [reloc.__read_chk]            ; [0x20cdd8:8]=0x1a06
0x00001a06      6807000000     push 7
0x00001a0b      e970ffffff     jmp sym..plt
;-- imp.ferror:
0x00001a10      ff25cab32000   jmp qword [reloc.ferror]                ; [0x20cde0:8]=0x1a16
0x00001a16      6808000000     push 8
0x00001a1b      e960ffffff     jmp sym..plt
;-- imp.fread:
0x00001a20      ff25c2b32000   jmp qword [reloc.fread]                 ; [0x20cde8:8]=0x1a26 ; "&\x1a"
0x00001a26      6809000000     push 9
0x00001a2b      e950ffffff     jmp sym..plt
;-- imp.fcntl:
0x00001a30      ff25bab32000   jmp qword [reloc.fcntl]                 ; [0x20cdf0:8]=0x1a36 ; "6\x1a"
0x00001a36      680a000000     push 0xa
0x00001a3b      e940ffffff     jmp sym..plt
;-- imp.getpid:
0x00001a40      ff25b2b32000   jmp qword [reloc.getpid]                ; [0x20cdf8:8]=0x1a46 ; "F\x1a"
0x00001a46      680b000000     push 0xb
0x00001a4b      e930ffffff     jmp sym..plt
;-- imp.fread_unlocked:
0x00001a50      ff25aab32000   jmp qword [reloc.fread_unlocked]        ; [0x20ce00:8]=0x1a56 ; "V\x1a"
0x00001a56      680c000000     push 0xc
0x00001a5b      e920ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001a60      ff25a2b32000   jmp qword [reloc.textdomain]            ; [0x20ce08:8]=0x1a66 ; "f\x1a"
0x00001a66      680d000000     push 0xd
0x00001a6b      e910ffffff     jmp sym..plt
;-- imp.fclose:
0x00001a70      ff259ab32000   jmp qword [reloc.fclose]                ; [0x20ce10:8]=0x1a76 ; "v\x1a"
0x00001a76      680e000000     push 0xe
0x00001a7b      e900ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001a80      ff2592b32000   jmp qword [reloc.bindtextdomain]        ; [0x20ce18:8]=0x1a86
0x00001a86      680f000000     push 0xf
0x00001a8b      e9f0feffff     jmp sym..plt
;-- imp.stpcpy:
0x00001a90      ff258ab32000   jmp qword [reloc.stpcpy]                ; [0x20ce20:8]=0x1a96
0x00001a96      6810000000     push 0x10
0x00001a9b      e9e0feffff     jmp sym..plt
;-- imp.dcgettext:
0x00001aa0      ff2582b32000   jmp qword [reloc.dcgettext]             ; [0x20ce28:8]=0x1aa6
0x00001aa6      6811000000     push 0x11
0x00001aab      e9d0feffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001ab0      ff257ab32000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x20ce30:8]=0x1ab6
0x00001ab6      6812000000     push 0x12
0x00001abb      e9c0feffff     jmp sym..plt
;-- imp.strlen:
0x00001ac0      ff2572b32000   jmp qword [reloc.strlen]                ; [0x20ce38:8]=0x1ac6
0x00001ac6      6813000000     push 0x13
0x00001acb      e9b0feffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001ad0      ff256ab32000   jmp qword [reloc.__stack_chk_fail]      ; [0x20ce40:8]=0x1ad6
0x00001ad6      6814000000     push 0x14
0x00001adb      e9a0feffff     jmp sym..plt
;-- imp.getuid:
0x00001ae0      ff2562b32000   jmp qword [reloc.getuid]                ; [0x20ce48:8]=0x1ae6
0x00001ae6      6815000000     push 0x15
0x00001aeb      e990feffff     jmp sym..plt
;-- imp.getopt_long:
0x00001af0      ff255ab32000   jmp qword [reloc.getopt_long]           ; [0x20ce50:8]=0x1af6
0x00001af6      6816000000     push 0x16
0x00001afb      e980feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001b00      ff2552b32000   jmp qword [reloc.mbrtowc]               ; [0x20ce58:8]=0x1b06
0x00001b06      6817000000     push 0x17
0x00001b0b      e970feffff     jmp sym..plt
;-- imp.dup2:
0x00001b10      ff254ab32000   jmp qword [reloc.dup2]                  ; [0x20ce60:8]=0x1b16
0x00001b16      6818000000     push 0x18
0x00001b1b      e960feffff     jmp sym..plt
;-- imp.strchr:
0x00001b20      ff2542b32000   jmp qword [reloc.strchr]                ; [0x20ce68:8]=0x1b26 ; "&\x1b"
0x00001b26      6819000000     push 0x19
0x00001b2b      e950feffff     jmp sym..plt
;-- imp.strrchr:
0x00001b30      ff253ab32000   jmp qword [reloc.strrchr]               ; [0x20ce70:8]=0x1b36 ; "6\x1b"
0x00001b36      681a000000     push 0x1a
0x00001b3b      e940feffff     jmp sym..plt
;-- imp.lseek:
0x00001b40      ff2532b32000   jmp qword [reloc.lseek]                 ; [0x20ce78:8]=0x1b46 ; "F\x1b"
0x00001b46      681b000000     push 0x1b
0x00001b4b      e930feffff     jmp sym..plt
;-- imp.gettimeofday:
0x00001b50      ff252ab32000   jmp qword [reloc.gettimeofday]          ; [0x20ce80:8]=0x1b56 ; "V\x1b"
0x00001b56      681c000000     push 0x1c
0x00001b5b      e920feffff     jmp sym..plt
;-- imp.__assert_fail:
0x00001b60      ff2522b32000   jmp qword [reloc.__assert_fail]         ; [0x20ce88:8]=0x1b66 ; "f\x1b"
0x00001b66      681d000000     push 0x1d
0x00001b6b      e910feffff     jmp sym..plt
;-- imp.__strtoul_internal:
0x00001b70      ff251ab32000   jmp qword [reloc.__strtoul_internal]    ; [0x20ce90:8]=0x1b76 ; "v\x1b"
0x00001b76      681e000000     push 0x1e
0x00001b7b      e900feffff     jmp sym..plt
;-- imp.memset:
0x00001b80      ff2512b32000   jmp qword [reloc.memset]                ; [0x20ce98:8]=0x1b86
0x00001b86      681f000000     push 0x1f
0x00001b8b      e9f0fdffff     jmp sym..plt
;-- imp.freopen:
0x00001b90      ff250ab32000   jmp qword [reloc.freopen]               ; [0x20cea0:8]=0x1b96
0x00001b96      6820000000     push 0x20                               ; "@"
0x00001b9b      e9e0fdffff     jmp sym..plt
;-- imp.close:
0x00001ba0      ff2502b32000   jmp qword [reloc.close]                 ; [0x20cea8:8]=0x1ba6
0x00001ba6      6821000000     push 0x21                               ; '!'
0x00001bab      e9d0fdffff     jmp sym..plt
;-- imp.posix_fadvise:
0x00001bb0      ff25fab22000   jmp qword [reloc.posix_fadvise]         ; [0x20ceb0:8]=0x1bb6
0x00001bb6      6822000000     push 0x22                               ; '"'
0x00001bbb      e9c0fdffff     jmp sym..plt
;-- imp.memchr:
0x00001bc0      ff25f2b22000   jmp qword [reloc.memchr]                ; [0x20ceb8:8]=0x1bc6
0x00001bc6      6823000000     push 0x23                               ; '#'
0x00001bcb      e9b0fdffff     jmp sym..plt
;-- imp.memcmp:
0x00001bd0      ff25eab22000   jmp qword [reloc.memcmp]                ; [0x20cec0:8]=0x1bd6
0x00001bd6      6824000000     push 0x24                               ; '$'
0x00001bdb      e9a0fdffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001be0      ff25e2b22000   jmp qword [reloc.fputs_unlocked]        ; [0x20cec8:8]=0x1be6
0x00001be6      6825000000     push 0x25                               ; '%'
0x00001beb      e990fdffff     jmp sym..plt
;-- imp.calloc:
0x00001bf0      ff25dab22000   jmp qword [reloc.calloc]                ; [0x20ced0:8]=0x1bf6
0x00001bf6      6826000000     push 0x26                               ; '&'
0x00001bfb      e980fdffff     jmp sym..plt
;-- imp.strcmp:
0x00001c00      ff25d2b22000   jmp qword [reloc.strcmp]                ; [0x20ced8:8]=0x1c06
0x00001c06      6827000000     push 0x27                               ; '''
0x00001c0b      e970fdffff     jmp sym..plt
;-- imp.memcpy:
0x00001c10      ff25cab22000   jmp qword [reloc.memcpy]                ; [0x20cee0:8]=0x1c16
0x00001c16      6828000000     push 0x28                               ; '('
0x00001c1b      e960fdffff     jmp sym..plt
;-- imp.fileno:
0x00001c20      ff25c2b22000   jmp qword [reloc.fileno]                ; [0x20cee8:8]=0x1c26 ; "&\x1c"
0x00001c26      6829000000     push 0x29                               ; ')'
0x00001c2b      e950fdffff     jmp sym..plt
;-- imp.getgid:
0x00001c30      ff25bab22000   jmp qword [reloc.getgid]                ; [0x20cef0:8]=0x1c36 ; "6\x1c"
0x00001c36      682a000000     push 0x2a                               ; '*'
0x00001c3b      e940fdffff     jmp sym..plt
;-- imp.malloc:
0x00001c40      ff25b2b22000   jmp qword [reloc.malloc]                ; [0x20cef8:8]=0x1c46 ; "F\x1c"
0x00001c46      682b000000     push 0x2b                               ; '+'
0x00001c4b      e930fdffff     jmp sym..plt
;-- imp.fflush:
0x00001c50      ff25aab22000   jmp qword [reloc.fflush]                ; [0x20cf00:8]=0x1c56 ; "V\x1c"
0x00001c56      682c000000     push 0x2c                               ; ','
0x00001c5b      e920fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001c60      ff25a2b22000   jmp qword [reloc.nl_langinfo]           ; [0x20cf08:8]=0x1c66 ; "f\x1c"
0x00001c66      682d000000     push 0x2d                               ; '-'
0x00001c6b      e910fdffff     jmp sym..plt
;-- imp.__fxstat:
0x00001c70      ff259ab22000   jmp qword [reloc.__fxstat]              ; [0x20cf10:8]=0x1c76 ; "v\x1c"
0x00001c76      682e000000     push 0x2e                               ; '.'
0x00001c7b      e900fdffff     jmp sym..plt
;-- imp.__freading:
0x00001c80      ff2592b22000   jmp qword [reloc.__freading]            ; [0x20cf18:8]=0x1c86
0x00001c86      682f000000     push 0x2f                               ; '/'
0x00001c8b      e9f0fcffff     jmp sym..plt
;-- imp.fwrite_unlocked:
0x00001c90      ff258ab22000   jmp qword [reloc.fwrite_unlocked]       ; [0x20cf20:8]=0x1c96
0x00001c96      6830000000     push 0x30                               ; '0'
0x00001c9b      e9e0fcffff     jmp sym..plt
;-- imp.realloc:
0x00001ca0      ff2582b22000   jmp qword [reloc.realloc]               ; [0x20cf28:8]=0x1ca6
0x00001ca6      6831000000     push 0x31                               ; '1'
0x00001cab      e9d0fcffff     jmp sym..plt
;-- imp.fdopen:
0x00001cb0      ff257ab22000   jmp qword [reloc.fdopen]                ; [0x20cf30:8]=0x1cb6
0x00001cb6      6832000000     push 0x32                               ; '2'
0x00001cbb      e9c0fcffff     jmp sym..plt
;-- imp.setlocale:
0x00001cc0      ff2572b22000   jmp qword [reloc.setlocale]             ; [0x20cf38:8]=0x1cc6
0x00001cc6      6833000000     push 0x33                               ; '3'
0x00001ccb      e9b0fcffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001cd0      ff256ab22000   jmp qword [reloc.__printf_chk]          ; [0x20cf40:8]=0x1cd6
0x00001cd6      6834000000     push 0x34                               ; '4'
0x00001cdb      e9a0fcffff     jmp sym..plt
;-- imp.setvbuf:
0x00001ce0      ff2562b22000   jmp qword [reloc.setvbuf]               ; [0x20cf48:8]=0x1ce6
0x00001ce6      6835000000     push 0x35                               ; '5'
0x00001ceb      e990fcffff     jmp sym..plt
;-- imp.error:
0x00001cf0      ff255ab22000   jmp qword [reloc.error]                 ; [0x20cf50:8]=0x1cf6
0x00001cf6      6836000000     push 0x36                               ; '6'
0x00001cfb      e980fcffff     jmp sym..plt
;-- imp.__explicit_bzero_chk:
0x00001d00      ff2552b22000   jmp qword [reloc.__explicit_bzero_chk]  ; [0x20cf58:8]=0x1d06
0x00001d06      6837000000     push 0x37                               ; '7'
0x00001d0b      e970fcffff     jmp sym..plt
;-- imp.open:
0x00001d10      ff254ab22000   jmp qword [reloc.open]                  ; [0x20cf60:8]=0x1d16
0x00001d16      6838000000     push 0x38                               ; '8'
0x00001d1b      e960fcffff     jmp sym..plt
;-- imp.fseeko:
0x00001d20      ff2542b22000   jmp qword [reloc.fseeko]                ; [0x20cf68:8]=0x1d26 ; "&\x1d"
0x00001d26      6839000000     push 0x39                               ; '9'
0x00001d2b      e950fcffff     jmp sym..plt
;-- imp.fopen:
0x00001d30      ff253ab22000   jmp qword [reloc.fopen]                 ; [0x20cf70:8]=0x1d36 ; "6\x1d"
0x00001d36      683a000000     push 0x3a                               ; ':'
0x00001d3b      e940fcffff     jmp sym..plt
;-- imp.strtoul:
0x00001d40      ff2532b22000   jmp qword [reloc.strtoul]               ; [0x20cf78:8]=0x1d46 ; "F\x1d"
0x00001d46      683b000000     push 0x3b                               ; ';'
0x00001d4b      e930fcffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001d50      ff252ab22000   jmp qword [reloc.__cxa_atexit]          ; [0x20cf80:8]=0x1d56 ; "V\x1d"
0x00001d56      683c000000     push 0x3c                               ; '<'
0x00001d5b      e920fcffff     jmp sym..plt
;-- imp.getppid:
0x00001d60      ff2522b22000   jmp qword [reloc.getppid]               ; [0x20cf88:8]=0x1d66 ; "f\x1d"
0x00001d66      683d000000     push 0x3d                               ; '='
0x00001d6b      e910fcffff     jmp sym..plt
;-- imp.exit:
0x00001d70      ff251ab22000   jmp qword [reloc.exit]                  ; [0x20cf90:8]=0x1d76 ; "v\x1d"
0x00001d76      683e000000     push 0x3e                               ; '>'
0x00001d7b      e900fcffff     jmp sym..plt
;-- imp.fwrite:
0x00001d80      ff2512b22000   jmp qword [reloc.fwrite]                ; [0x20cf98:8]=0x1d86
0x00001d86      683f000000     push 0x3f                               ; '?'
0x00001d8b      e9f0fbffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001d90      ff250ab22000   jmp qword [reloc.__fprintf_chk]         ; [0x20cfa0:8]=0x1d96
0x00001d96      6840000000     push 0x40                               ; segment.PHDR
0x00001d9b      e9e0fbffff     jmp sym..plt
;-- imp.mbsinit:
0x00001da0      ff2502b22000   jmp qword [reloc.mbsinit]               ; [0x20cfa8:8]=0x1da6
0x00001da6      6841000000     push 0x41                               ; 'A'
0x00001dab      e9d0fbffff     jmp sym..plt
;-- imp.iswprint:
0x00001db0      ff25fab12000   jmp qword [reloc.iswprint]              ; [0x20cfb0:8]=0x1db6
0x00001db6      6842000000     push 0x42                               ; 'B'
0x00001dbb      e9c0fbffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00001dc0      ff25f2b12000   jmp qword [reloc.__ctype_b_loc]         ; [0x20cfb8:8]=0x1dc6
0x00001dc6      6843000000     push 0x43                               ; 'C'
0x00001dcb      e9b0fbffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001dd0      .qword 0x90660020b1ea25ff                              ; [13] -r-x section size 16 named .plt.got
0x00001dd8      .qword 0x90660020b20a25ff
;-- main:
;-- section..text:
;-- .text:
0x00001de0      4157           push r15                                ; [14] -r-x section size 29454 named .text
0x00001de2      4156           push r14
0x00001de4      4531ff         xor r15d, r15d
0x00001de7      4155           push r13
0x00001de9      4154           push r12
0x00001deb      49c7c4ffffff.  mov r12, 0xffffffffffffffff
0x00001df2      55             push rbp
0x00001df3      53             push rbx
0x00001df4      89fd           mov ebp, edi
0x00001df6      4889f3         mov rbx, rsi
0x00001df9      4531ed         xor r13d, r13d
0x00001dfc      4d89e6         mov r14, r12
0x00001dff      4881ec180100.  sub rsp, 0x118
0x00001e06      488b3e         mov rdi, qword [rsi]
0x00001e09      64488b042528.  mov rax, qword fs:[0x28]
0x00001e12      488984240801.  mov qword [rsp + 0x108], rax
0x00001e1a      31c0           xor eax, eax
0x00001e1c      e85f170000     call sym.set_program_name
0x00001e21      488d35e87e00.  lea rsi, [0x00009d10]
0x00001e28      bf06000000     mov edi, 6
0x00001e2d      e88efeffff     call sym.imp.setlocale
0x00001e32      488d35737300.  lea rsi, str.usr_local_share_locale     ; 0x91ac ; "/usr/local/share/locale"
0x00001e39      488d3d437300.  lea rdi, [0x00009183]                   ; "coreutils"
0x00001e40      e83bfcffff     call sym.imp.bindtextdomain
0x00001e45      488d3d377300.  lea rdi, [0x00009183]                   ; "coreutils"
0x00001e4c      e80ffcffff     call sym.imp.textdomain
0x00001e51      488d3df81200.  lea rdi, sym.close_stdout               ; 0x3150 ; "USH\x83\xec\bH\x8b=+\x9f "
0x00001e58      e883720000     call sym.atexit
0x00001e5d      488d442450     lea rax, [rsp + 0x50]
0x00001e62      c644241e00     mov byte [rsp + 0x1e], 0
0x00001e67      c644241f0a     mov byte [rsp + 0x1f], 0xa
0x00001e6c      48c744242800.  mov qword [rsp + 0x28], 0
0x00001e75      c644240800     mov byte [rsp + 8], 0
0x00001e7a      c644241000     mov byte [rsp + 0x10], 0
0x00001e7f      4889442420     mov qword [rsp + 0x20], rax
0x00001e84      0f1f4000       nop dword [rax]
0x00001e88      488d0d71ab20.  lea rcx, obj.long_opts                  ; 0x20ca00 ; "w\x92"
0x00001e8f      488d158a7300.  lea rdx, str.ei:n:o:rz                  ; 0x9220 ; "ei:n:o:rz"
0x00001e96      4531c0         xor r8d, r8d
0x00001e99      4889de         mov rsi, rbx
0x00001e9c      89ef           mov edi, ebp
0x00001e9e      e84dfcffff     call sym.imp.getopt_long
0x00001ea3      83f8ff         cmp eax, 0xffffffff
0x00001ea6      0f84ed020000   je 0x2199
0x00001eac      83f86e         cmp eax, 0x6e
0x00001eaf      0f845b010000   je 0x2010
0x00001eb5      7e59           jle 0x1f10
0x00001eb7      83f872         cmp eax, 0x72
0x00001eba      0f84c8010000   je 0x2088
0x00001ec0      0f8e82010000   jle 0x2048
0x00001ec6      83f87a         cmp eax, 0x7a
0x00001ec9      0f8431010000   je 0x2000
0x00001ecf      83c080         add eax, 0xffffff80
0x00001ed2      0f850a0b0000   jne 0x29e2
0x00001ed8      4d85ed         test r13, r13
0x00001edb      488b15beb120.  mov rdx, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20d0a0:8]=0
0x00001ee2      741d           je 0x1f01
0x00001ee4      4889d6         mov rsi, rdx
0x00001ee7      4c89ef         mov rdi, r13
0x00001eea      4889542430     mov qword [rsp + 0x30], rdx
0x00001eef      e80cfdffff     call sym.imp.strcmp
0x00001ef4      85c0           test eax, eax
0x00001ef6      488b542430     mov rdx, qword [rsp + 0x30]
0x00001efb      0f85ee0c0000   jne 0x2bef
0x00001f01      4989d5         mov r13, rdx
0x00001f04      eb82           jmp 0x1e88
0x00001f06      662e0f1f8400.  nop word cs:[rax + rax]
0x00001f10      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x00001f15      0f84d10a0000   je 0x29ec
0x00001f1b      0f8e87010000   jle 0x20a8
0x00001f21      83f865         cmp eax, 0x65
0x00001f24      0f846e010000   je 0x2098
0x00001f2a      83f869         cmp eax, 0x69
0x00001f2d      0f85af0a0000   jne 0x29e2
0x00001f33      4c8b3566b120.  mov r14, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20d0a0:8]=0
0x00001f3a      be2d000000     mov esi, 0x2d                           ; '-'
0x00001f3f      4c89f7         mov rdi, r14
0x00001f42      e8d9fbffff     call sym.imp.strchr
0x00001f47      807c240800     cmp byte [rsp + 8], 0
0x00001f4c      0f85c10c0000   jne 0x2c13
0x00001f52      4885c0         test rax, rax
0x00001f55      0f84cb010000   je 0x2126
0x00001f5b      488d35807200.  lea rsi, str.invalid_input_range        ; 0x91e2 ; "invalid input range"
0x00001f62      31ff           xor edi, edi
0x00001f64      ba05000000     mov edx, 5
0x00001f69      c60000         mov byte [rax], 0
0x00001f6c      4889442408     mov qword [rsp + 8], rax
0x00001f71      e82afbffff     call sym.imp.dcgettext
0x00001f76      488b3d23b120.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20d0a0:8]=0
0x00001f7d      488d0d8c7d00.  lea rcx, [0x00009d10]
0x00001f84      4531c9         xor r9d, r9d
0x00001f87      4989c0         mov r8, rax
0x00001f8a      4883caff       or rdx, 0xffffffffffffffff
0x00001f8e      31f6           xor esi, esi
0x00001f90      e87b4f0000     call sym.xdectoumax
0x00001f95      4c8b542408     mov r10, qword [rsp + 8]
0x00001f9a      488d35417200.  lea rsi, str.invalid_input_range        ; 0x91e2 ; "invalid input range"
0x00001fa1      31ff           xor edi, edi
0x00001fa3      ba05000000     mov edx, 5
0x00001fa8      4989c6         mov r14, rax
0x00001fab      41c6022d       mov byte [r10], 0x2d                    ; '-'
                                                                       ; [0x2d:1]=0
0x00001faf      e8ecfaffff     call sym.imp.dcgettext
0x00001fb4      4c8b542408     mov r10, qword [rsp + 8]
0x00001fb9      488d0d507d00.  lea rcx, [0x00009d10]
0x00001fc0      4883caff       or rdx, 0xffffffffffffffff
0x00001fc4      4531c9         xor r9d, r9d
0x00001fc7      31f6           xor esi, esi
0x00001fc9      4989c0         mov r8, rax
0x00001fcc      498d7a01       lea rdi, [r10 + 1]
0x00001fd0      e83b4f0000     call sym.xdectoumax
0x00001fd5      4939c6         cmp r14, rax
0x00001fd8      4889442428     mov qword [rsp + 0x28], rax
0x00001fdd      0f97c2         seta dl
0x00001fe0      4c29f0         sub rax, r14
0x00001fe3      4883c001       add rax, 1
0x00001fe7      0f94c0         sete al
0x00001fea      38c2           cmp dl, al
0x00001fec      0f8562010000   jne 0x2154
0x00001ff2      c644240801     mov byte [rsp + 8], 1
0x00001ff7      e98cfeffff     jmp 0x1e88
0x00001ffc      0f1f4000       nop dword [rax]
0x00002000      c644241f00     mov byte [rsp + 0x1f], 0
0x00002005      e97efeffff     jmp 0x1e88
0x0000200a      660f1f440000   nop word [rax + rax]
0x00002010      488b4c2420     mov rcx, qword [rsp + 0x20]
0x00002015      488b3d84b020.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20d0a0:8]=0
0x0000201c      4531c0         xor r8d, r8d
0x0000201f      31f6           xor esi, esi
0x00002021      ba0a000000     mov edx, 0xa
0x00002026      e8154f0000     call sym.xstrtoul
0x0000202b      85c0           test eax, eax
0x0000202d      0f85b4000000   jne 0x20e7
0x00002033      488b442450     mov rax, qword [rsp + 0x50]
0x00002038      4939c4         cmp r12, rax
0x0000203b      4c0f47e0       cmova r12, rax
0x0000203f      e944feffff     jmp 0x1e88
0x00002044      0f1f4000       nop dword [rax]
0x00002048      83f86f         cmp eax, 0x6f
0x0000204b      0f8591090000   jne 0x29e2
0x00002051      4d85ff         test r15, r15
0x00002054      488b1545b020.  mov rdx, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20d0a0:8]=0
0x0000205b      741d           je 0x207a
0x0000205d      4889d6         mov rsi, rdx
0x00002060      4c89ff         mov rdi, r15
0x00002063      4889542430     mov qword [rsp + 0x30], rdx
0x00002068      e893fbffff     call sym.imp.strcmp
0x0000206d      85c0           test eax, eax
0x0000206f      488b542430     mov rdx, qword [rsp + 0x30]
0x00002074      0f85000a0000   jne 0x2a7a
0x0000207a      4989d7         mov r15, rdx
0x0000207d      e906feffff     jmp 0x1e88
0x00002082      660f1f440000   nop word [rax + rax]
0x00002088      c644241e01     mov byte [rsp + 0x1e], 1
0x0000208d      e9f6fdffff     jmp 0x1e88
0x00002092      660f1f440000   nop word [rax + rax]
0x00002098      c644241001     mov byte [rsp + 0x10], 1
0x0000209d      e9e6fdffff     jmp 0x1e88
0x000020a2      660f1f440000   nop word [rax + rax]
0x000020a8      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x000020ad      0f852f090000   jne 0x29e2
0x000020b3      488b3dceaf20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d088:8]=0
0x000020ba      488b0d4faf20.  mov rcx, qword [obj.Version]            ; [0x20d010:8]=0x9759 str.8.31 ; "Y\x97"
0x000020c1      4c8d054c7100.  lea r8, str.Paul_Eggert                 ; 0x9214 ; "Paul Eggert"
0x000020c8      488d15b07000.  lea rdx, str.GNU_coreutils              ; 0x917f ; "GNU coreutils"
0x000020cf      488d352e7000.  lea rsi, str.shuf                       ; 0x9104 ; "shuf"
0x000020d6      4531c9         xor r9d, r9d
0x000020d9      31c0           xor eax, eax
0x000020db      e840490000     call sym.version_etc
0x000020e0      31ff           xor edi, edi
0x000020e2      e889fcffff     call sym.imp.exit
0x000020e7      83e801         sub eax, 1
0x000020ea      0f8498fdffff   je 0x1e88
0x000020f0      488b3da9af20.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20d0a0:8]=0
0x000020f7      e894310000     call sym.quote
0x000020fc      488d35fa7000.  lea rsi, str.invalid_line_count:__s     ; 0x91fd ; "invalid line count: %s"
0x00002103      4889c3         mov rbx, rax
0x00002106      ba05000000     mov edx, 5
0x0000210b      31ff           xor edi, edi
0x0000210d      e88ef9ffff     call sym.imp.dcgettext
0x00002112      4889d9         mov rcx, rbx
0x00002115      4889c2         mov rdx, rax
0x00002118      31f6           xor esi, esi
0x0000211a      bf01000000     mov edi, 1
0x0000211f      31c0           xor eax, eax
0x00002121      e8cafbffff     call sym.imp.error
0x00002126      488d35b57000.  lea rsi, str.invalid_input_range        ; 0x91e2 ; "invalid input range"
0x0000212d      ba05000000     mov edx, 5
0x00002132      31ff           xor edi, edi
0x00002134      e867f9ffff     call sym.imp.dcgettext
0x00002139      488d0dd07b00.  lea rcx, [0x00009d10]
0x00002140      4989c0         mov r8, rax
0x00002143      4531c9         xor r9d, r9d
0x00002146      4883caff       or rdx, 0xffffffffffffffff
0x0000214a      31f6           xor esi, esi
0x0000214c      4c89f7         mov rdi, r14
0x0000214f      e8bc4d0000     call sym.xdectoumax
0x00002154      488b3d45af20.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20d0a0:8]=0
0x0000215b      e830310000     call sym.quote
0x00002160      488d357b7000.  lea rsi, str.invalid_input_range        ; 0x91e2 ; "invalid input range"
0x00002167      ba05000000     mov edx, 5
0x0000216c      31ff           xor edi, edi
0x0000216e      4889c5         mov rbp, rax
0x00002171      e82af9ffff     call sym.imp.dcgettext
0x00002176      4889c3         mov rbx, rax
0x00002179      e832f8ffff     call sym.imp.__errno_location
0x0000217e      8b30           mov esi, dword [rax]
0x00002180      488d156f7000.  lea rdx, str.s:__s                      ; 0x91f6 ; "%s: %s"
0x00002187      4989e8         mov r8, rbp
0x0000218a      4889d9         mov rcx, rbx
0x0000218d      bf01000000     mov edi, 1
0x00002192      31c0           xor eax, eax
0x00002194      e857fbffff     call sym.imp.error
0x00002199      486305f8ae20.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20d098:4]=0
0x000021a0      29c5           sub ebp, eax
0x000021a2      807c241000     cmp byte [rsp + 0x10], 0
0x000021a7      488d1cc3       lea rbx, [rbx + rax*8]
0x000021ab      0f846f010000   je 0x2320
0x000021b1      807c240800     cmp byte [rsp + 8], 0
0x000021b6      0f8505080000   jne 0x29c1
0x000021bc      807c241000     cmp byte [rsp + 0x10], 0
0x000021c1      0f859a020000   jne 0x2461
0x000021c7      83fd01         cmp ebp, 1
0x000021ca      b808000000     mov eax, 8
0x000021cf      0f8f3c080000   jg 0x2a11
0x000021d5      807c241000     cmp byte [rsp + 0x10], 0
0x000021da      0f8581020000   jne 0x2461
0x000021e0      83ed01         sub ebp, 1
0x000021e3      488b15a6ae20.  mov rdx, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20d090:8]=0
0x000021ea      0f8548040000   jne 0x2638
0x000021f0      488b2b         mov rbp, qword [rbx]
0x000021f3      488d35b07500.  lea rsi, [0x000097aa]                   ; "-"
0x000021fa      4889542420     mov qword [rsp + 0x20], rdx
0x000021ff      4889ef         mov rdi, rbp
0x00002202      e8f9f9ffff     call sym.imp.strcmp
0x00002207      85c0           test eax, eax
0x00002209      488b542420     mov rdx, qword [rsp + 0x20]
0x0000220e      0f8424040000   je 0x2638
0x00002214      4d85e4         test r12, r12
0x00002217      0f8561070000   jne 0x297e
0x0000221d      be02000000     mov esi, 2
0x00002222      4889d7         mov rdi, rdx
0x00002225      e8e60f0000     call sym.fadvise
0x0000222a      807c241e00     cmp byte [rsp + 0x1e], 0
0x0000222f      0f8585040000   jne 0x26ba
0x00002235      4883ceff       or rsi, 0xffffffffffffffff
0x00002239      4c89ef         mov rdi, r13
0x0000223c      e89f300000     call sym.randint_all_new
0x00002241      4885c0         test rax, rax
0x00002244      4889442420     mov qword [rsp + 0x20], rax
0x00002249      0f8418010000   je 0x2367
0x0000224f      0fbe44241f     movsx eax, byte [rsp + 0x1f]
0x00002254      4981fc000400.  cmp r12, 0x400
0x0000225b      bb00040000     mov ebx, 0x400
0x00002260      490f46dc       cmovbe rbx, r12
0x00002264      be18000000     mov esi, 0x18
0x00002269      31ed           xor ebp, ebp
0x0000226b      4889df         mov rdi, rbx
0x0000226e      89442430       mov dword [rsp + 0x30], eax
0x00002272      488b0517ae20.  mov rax, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20d090:8]=0
0x00002279      4889442410     mov qword [rsp + 0x10], rax
0x0000227e      e8cd4a0000     call sym.xcalloc
0x00002283      4c89742440     mov qword [rsp + 0x40], r14
0x00002288      4531c0         xor r8d, r8d
0x0000228b      4989de         mov r14, rbx
0x0000228e      4889c3         mov rbx, rax
0x00002291      4939ec         cmp r12, rbp
0x00002294      0f844c050000   je 0x27e6
0x0000229a      4c6bed18       imul r13, rbp, 0x18
0x0000229e      8b542430       mov edx, dword [rsp + 0x30]
0x000022a2      488b742410     mov rsi, qword [rsp + 0x10]
0x000022a7      4a8d3c2b       lea rdi, [rbx + r13]
0x000022ab      e8a0110000     call sym.readlinebuffer_delim
0x000022b0      4885c0         test rax, rax
0x000022b3      4989c0         mov r8, rax
0x000022b6      0f8448060000   je 0x2904
0x000022bc      4883c501       add rbp, 1
0x000022c0      4c39f5         cmp rbp, r14
0x000022c3      72cc           jb 0x2291
0x000022c5      ba18000000     mov edx, 0x18
0x000022ca      4981c6000400.  add r14, 0x400
0x000022d1      31f6           xor esi, esi
0x000022d3      4889d0         mov rax, rdx
0x000022d6      49f7e6         mul r14
0x000022d9      0f8026070000   jo 0x2a05
0x000022df      4885c0         test rax, rax
0x000022e2      4c89442438     mov qword [rsp + 0x38], r8
0x000022e7      0f8813070000   js 0x2a00
0x000022ed      4885f6         test rsi, rsi
0x000022f0      0f850a070000   jne 0x2a00
0x000022f6      496bf618       imul rsi, r14, 0x18
0x000022fa      4889df         mov rdi, rbx
0x000022fd      e8de480000     call sym.xrealloc
0x00002302      4a8d7c2818     lea rdi, [rax + r13 + 0x18]
0x00002307      ba00600000     mov edx, 0x6000                         ; "@\x10I\x89\xcbH\x03\x90\x10\xfc\xff\xffL\x89\u0041\xe1\xf8\a"
0x0000230c      31f6           xor esi, esi
0x0000230e      4889c3         mov rbx, rax
0x00002311      e86af8ffff     call sym.imp.memset
0x00002316      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000231b      e971ffffff     jmp 0x2291
0x00002320      807c240800     cmp byte [rsp + 8], 0
0x00002325      0f8491feffff   je 0x21bc
0x0000232b      85ed           test ebp, ebp
0x0000232d      0f8fdc060000   jg 0x2a0f
0x00002333      488b442428     mov rax, qword [rsp + 0x28]
0x00002338      31db           xor ebx, ebx
0x0000233a      4883c001       add rax, 1
0x0000233e      4c29f0         sub rax, r14
0x00002341      4889442430     mov qword [rsp + 0x30], rax
0x00002346      807c241e00     cmp byte [rsp + 0x1e], 0
0x0000234b      7449           je 0x2396
0x0000234d      4883ceff       or rsi, 0xffffffffffffffff
0x00002351      4c89ef         mov rdi, r13
0x00002354      e8872f0000     call sym.randint_all_new
0x00002359      4885c0         test rax, rax
0x0000235c      4889442420     mov qword [rsp + 0x20], rax
0x00002361      0f8593010000   jne 0x24fa
0x00002367      4c89ea         mov rdx, r13
0x0000236a      be03000000     mov esi, 3
0x0000236f      31ff           xor edi, edi
0x00002371      e84a2d0000     call sym.quotearg_n_style_colon
0x00002376      4889c3         mov rbx, rax
0x00002379      e832f6ffff     call sym.imp.__errno_location
0x0000237e      8b30           mov esi, dword [rax]
0x00002380      488d15736e00.  lea rdx, [0x000091fa]                   ; "%s"
0x00002387      4889d9         mov rcx, rbx
0x0000238a      bf01000000     mov edi, 1
0x0000238f      31c0           xor eax, eax
0x00002391      e85af9ffff     call sym.imp.error
0x00002396      488b442430     mov rax, qword [rsp + 0x30]
0x0000239b      4939c4         cmp r12, rax
0x0000239e      4889c6         mov rsi, rax
0x000023a1      4c0f47e0       cmova r12, rax
0x000023a5      4c89e7         mov rdi, r12
0x000023a8      e843310000     call sym.randperm_bound
0x000023ad      4c89ef         mov rdi, r13
0x000023b0      4889c6         mov rsi, rax
0x000023b3      e8282f0000     call sym.randint_all_new
0x000023b8      4885c0         test rax, rax
0x000023bb      4889442420     mov qword [rsp + 0x20], rax
0x000023c0      74a5           je 0x2367
0x000023c2      0fb64c2410     movzx ecx, byte [rsp + 0x10]
0x000023c7      0a4c2408       or cl, byte [rsp + 8]
0x000023cb      0f8434010000   je 0x2505
0x000023d1      488b542430     mov rdx, qword [rsp + 0x30]
0x000023d6      488b7c2420     mov rdi, qword [rsp + 0x20]
0x000023db      4c89e6         mov rsi, r12
0x000023de      e83d310000     call sym.randperm_new
0x000023e3      4d85ff         test r15, r15
0x000023e6      4989c5         mov r13, rax
0x000023e9      0f85b3040000   jne 0x28a2
0x000023ef      807c240800     cmp byte [rsp + 8], 0
0x000023f4      0f84d4010000   je 0x25ce
0x000023fa      440fbe7c241f   movsx r15d, byte [rsp + 0x1f]
0x00002400      31db           xor ebx, ebx
0x00002402      488d2d5a6e00.  lea rbp, str.lu_c                       ; 0x9263 ; "%lu%c"
0x00002409      eb26           jmp 0x2431
0x0000240b      498b54dd00     mov rdx, qword [r13 + rbx*8]
0x00002410      31c0           xor eax, eax
0x00002412      4489f9         mov ecx, r15d
0x00002415      4889ee         mov rsi, rbp
0x00002418      bf01000000     mov edi, 1
0x0000241d      4c01f2         add rdx, r14
0x00002420      e8abf8ffff     call sym.imp.__printf_chk
0x00002425      85c0           test eax, eax
0x00002427      0f88df010000   js 0x260c
0x0000242d      4883c301       add rbx, 1
0x00002431      4c39e3         cmp rbx, r12
0x00002434      75d5           jne 0x240b
0x00002436      31c0           xor eax, eax
0x00002438      488b8c240801.  mov rcx, qword [rsp + 0x108]
0x00002440      6448330c2528.  xor rcx, qword fs:[0x28]
0x00002449      0f85a4050000   jne 0x29f3
0x0000244f      4881c4180100.  add rsp, 0x118
0x00002456      5b             pop rbx
0x00002457      5d             pop rbp
0x00002458      415c           pop r12
0x0000245a      415d           pop r13
0x0000245c      415e           pop r14
0x0000245e      415f           pop r15
0x00002460      c3             ret
0x00002461      4863c5         movsxd rax, ebp
0x00002464      31d2           xor edx, edx
0x00002466      4983c8ff       or r8, 0xffffffffffffffff
0x0000246a      4889442430     mov qword [rsp + 0x30], rax
0x0000246f      4889c6         mov rsi, rax
0x00002472      31c0           xor eax, eax
0x00002474      eb15           jmp 0x248b
0x00002476      488b3cd3       mov rdi, qword [rbx + rdx*8]
0x0000247a      4c89c1         mov rcx, r8
0x0000247d      4883c201       add rdx, 1
0x00002481      f2ae           repne scasb al, byte [rdi]
0x00002483      48f7d1         not rcx
0x00002486      488d740eff     lea rsi, [rsi + rcx - 1]
0x0000248b      39d5           cmp ebp, edx
0x0000248d      7fe7           jg 0x2476
0x0000248f      4889f7         mov rdi, rsi
0x00002492      e8e9460000     call sym.xmalloc
0x00002497      31d2           xor edx, edx
0x00002499      4c89742420     mov qword [rsp + 0x20], r14
0x0000249e      4c896c2438     mov qword [rsp + 0x38], r13
0x000024a3      4c89642440     mov qword [rsp + 0x40], r12
0x000024a8      4989c5         mov r13, rax
0x000024ab      4989dc         mov r12, rbx
0x000024ae      4989d6         mov r14, rdx
0x000024b1      0fb65c241f     movzx ebx, byte [rsp + 0x1f]
0x000024b6      eb1a           jmp 0x24d2
0x000024b8      4b8b34f4       mov rsi, qword [r12 + r14*8]
0x000024bc      4c89ef         mov rdi, r13
0x000024bf      e8ccf5ffff     call sym.imp.stpcpy
0x000024c4      4f892cf4       mov qword [r12 + r14*8], r13
0x000024c8      4c8d6801       lea r13, [rax + 1]
0x000024cc      8818           mov byte [rax], bl
0x000024ce      4983c601       add r14, 1
0x000024d2      4439f5         cmp ebp, r14d
0x000024d5      7fe1           jg 0x24b8
0x000024d7      488b442430     mov rax, qword [rsp + 0x30]
0x000024dc      4c89e3         mov rbx, r12
0x000024df      4c89e9         mov rcx, r13
0x000024e2      4c8b742420     mov r14, qword [rsp + 0x20]
0x000024e7      4c8b6c2438     mov r13, qword [rsp + 0x38]
0x000024ec      4c8b642440     mov r12, qword [rsp + 0x40]
0x000024f1      48890cc3       mov qword [rbx + rax*8], rcx
0x000024f5      e94cfeffff     jmp 0x2346
0x000024fa      0fb64c2410     movzx ecx, byte [rsp + 0x10]
0x000024ff      0a4c2408       or cl, byte [rsp + 8]
0x00002503      7531           jne 0x2536
0x00002505      48c744243800.  mov qword [rsp + 0x38], 0
0x0000250e      488b3d7bab20.  mov rdi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20d090:8]=0
0x00002515      884c2410       mov byte [rsp + 0x10], cl
0x00002519      e862520000     call sym.rpl_fclose
0x0000251e      85c0           test eax, eax
0x00002520      0fb64c2410     movzx ecx, byte [rsp + 0x10]
0x00002525      0f85eb050000   jne 0x2b16
0x0000252b      807c241e00     cmp byte [rsp + 0x1e], 0
0x00002530      0f8468050000   je 0x2a9e
0x00002536      4d85ff         test r15, r15
0x00002539      741f           je 0x255a
0x0000253b      488b1546ab20.  mov rdx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d088:8]=0
0x00002542      488d352c6d00.  lea rsi, [0x00009275]                   ; "w"
0x00002549      4c89ff         mov rdi, r15
0x0000254c      e83f0d0000     call sym.freopen_safer
0x00002551      4885c0         test rax, rax
0x00002554      0f847b030000   je 0x28d5
0x0000255a      4d85e4         test r12, r12
0x0000255d      0f84d3feffff   je 0x2436
0x00002563      48837c243000   cmp qword [rsp + 0x30], 0
0x00002569      0f8409060000   je 0x2b78
0x0000256f      807c240800     cmp byte [rsp + 8], 0
0x00002574      0f8499030000   je 0x2913
0x0000257a      4c8b6c2428     mov r13, qword [rsp + 0x28]
0x0000257f      0fbe6c241f     movsx ebp, byte [rsp + 0x1f]
0x00002584      4531ff         xor r15d, r15d
0x00002587      4c89e0         mov rax, r12
0x0000258a      488d1dd26c00.  lea rbx, str.lu_c                       ; 0x9263 ; "%lu%c"
0x00002591      4d89fc         mov r12, r15
0x00002594      4989c7         mov r15, rax
0x00002597      4d29f5         sub r13, r14
0x0000259a      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0000259f      4c89ee         mov rsi, r13
0x000025a2      e8892d0000     call sym.randint_genmax
0x000025a7      498d1406       lea rdx, [r14 + rax]
0x000025ab      89e9           mov ecx, ebp
0x000025ad      31c0           xor eax, eax
0x000025af      4889de         mov rsi, rbx
0x000025b2      bf01000000     mov edi, 1
0x000025b7      e814f7ffff     call sym.imp.__printf_chk
0x000025bc      85c0           test eax, eax
0x000025be      784c           js 0x260c
0x000025c0      4983c401       add r12, 1
0x000025c4      4d39e7         cmp r15, r12
0x000025c7      75d1           jne 0x259a
0x000025c9      e968feffff     jmp 0x2436
0x000025ce      4531f6         xor r14d, r14d
0x000025d1      eb04           jmp 0x25d7
0x000025d3      4983c601       add r14, 1
0x000025d7      4d39e6         cmp r14, r12
0x000025da      0f8456feffff   je 0x2436
0x000025e0      4b8b44f500     mov rax, qword [r13 + r14*8]
0x000025e5      488b0d9caa20.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d088:8]=0
0x000025ec      be01000000     mov esi, 1
0x000025f1      488d04c3       lea rax, [rbx + rax*8]
0x000025f5      488b38         mov rdi, qword [rax]
0x000025f8      488b6808       mov rbp, qword [rax + 8]
0x000025fc      4829fd         sub rbp, rdi
0x000025ff      4889ea         mov rdx, rbp
0x00002602      e889f6ffff     call sym.imp.fwrite_unlocked
0x00002607      4839c5         cmp rbp, rax
0x0000260a      74c7           je 0x25d3
0x0000260c      488d35566c00.  lea rsi, str.write_error                ; 0x9269 ; "write error"
0x00002613      ba05000000     mov edx, 5
0x00002618      31ff           xor edi, edi
0x0000261a      e881f4ffff     call sym.imp.dcgettext
0x0000261f      4889c3         mov rbx, rax
0x00002622      e889f3ffff     call sym.imp.__errno_location
0x00002627      8b30           mov esi, dword [rax]
0x00002629      4889da         mov rdx, rbx
0x0000262c      bf01000000     mov edi, 1
0x00002631      31c0           xor eax, eax
0x00002633      e8b8f6ffff     call sym.imp.error
0x00002638      be02000000     mov esi, 2
0x0000263d      4889d7         mov rdi, rdx
0x00002640      e8cb0b0000     call sym.fadvise
0x00002645      807c241e00     cmp byte [rsp + 0x1e], 0
0x0000264a      756e           jne 0x26ba
0x0000264c      4983fcff       cmp r12, 0xffffffffffffffff
0x00002650      7468           je 0x26ba
0x00002652      4d85e4         test r12, r12
0x00002655      0f84dafbffff   je 0x2235
0x0000265b      488d542470     lea rdx, [rsp + 0x70]
0x00002660      31f6           xor esi, esi
0x00002662      bf01000000     mov edi, 1
0x00002667      e804f6ffff     call sym.imp.__fxstat
0x0000266c      85c0           test eax, eax
0x0000266e      0f85c1fbffff   jne 0x2235
0x00002674      8b8424880000.  mov eax, dword [rsp + 0x88]
0x0000267b      2500d00000     and eax, 0xd000
0x00002680      3d00800000     cmp eax, 0x8000
0x00002685      0f85aafbffff   jne 0x2235
0x0000268b      31f6           xor esi, esi
0x0000268d      31ff           xor edi, edi
0x0000268f      ba01000000     mov edx, 1
0x00002694      488b9c24a000.  mov rbx, qword [rsp + 0xa0]
0x0000269c      e89ff4ffff     call sym.imp.lseek
0x000026a1      4885c0         test rax, rax
0x000026a4      0f888bfbffff   js 0x2235
0x000026aa      4829c3         sub rbx, rax
0x000026ad      4881fb000080.  cmp rbx, 0x800000
0x000026b4      0f8f7bfbffff   jg 0x2235
0x000026ba      0fbe44241f     movsx eax, byte [rsp + 0x1f]
0x000026bf      488b3dcaa920.  mov rdi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20d090:8]=0
0x000026c6      488d742450     lea rsi, [rsp + 0x50]
0x000026cb      89442420       mov dword [rsp + 0x20], eax
0x000026cf      e80c3c0000     call sym.fread_file
0x000026d4      4885c0         test rax, rax
0x000026d7      4889c1         mov rcx, rax
0x000026da      0f846c040000   je 0x2b4c
0x000026e0      488b6c2450     mov rbp, qword [rsp + 0x50]
0x000026e5      4885ed         test rbp, rbp
0x000026e8      741c           je 0x2706
0x000026ea      0fb65c241f     movzx ebx, byte [rsp + 0x1f]
0x000026ef      3a5c28ff       cmp bl, byte [rax + rbp - 1]
0x000026f3      7411           je 0x2706
0x000026f5      488d4501       lea rax, [rbp + 1]
0x000026f9      4889442450     mov qword [rsp + 0x50], rax
0x000026fe      881c29         mov byte [rcx + rbp], bl
0x00002701      488b6c2450     mov rbp, qword [rsp + 0x50]
0x00002706      4801cd         add rbp, rcx
0x00002709      4889cf         mov rdi, rcx
0x0000270c      31c0           xor eax, eax
0x0000270e      8b5c2420       mov ebx, dword [rsp + 0x20]
0x00002712      48894c2438     mov qword [rsp + 0x38], rcx
0x00002717      4c89642440     mov qword [rsp + 0x40], r12
0x0000271c      eb14           jmp 0x2732
0x0000271e      4889ea         mov rdx, rbp
0x00002721      89de           mov esi, ebx
0x00002723      4829fa         sub rdx, rdi
0x00002726      e895f4ffff     call sym.imp.memchr
0x0000272b      488d7801       lea rdi, [rax + 1]
0x0000272f      4c89e0         mov rax, r12
0x00002732      4839fd         cmp rbp, rdi
0x00002735      4c8d6001       lea r12, [rax + 1]
0x00002739      77e3           ja 0x271e
0x0000273b      ba08000000     mov edx, 8
0x00002740      4c89e3         mov rbx, r12
0x00002743      4889442430     mov qword [rsp + 0x30], rax
0x00002748      4889d0         mov rax, rdx
0x0000274b      31f6           xor esi, esi
0x0000274d      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00002752      48f7e3         mul rbx
0x00002755      4c8b642440     mov r12, qword [rsp + 0x40]
0x0000275a      0f80e2030000   jo 0x2b42
0x00002760      4885c0         test rax, rax
0x00002763      0f8897020000   js 0x2a00
0x00002769      4885f6         test rsi, rsi
0x0000276c      0f858e020000   jne 0x2a00
0x00002772      488d3cdd0000.  lea rdi, [rbx*8]
0x0000277a      48894c2438     mov qword [rsp + 0x38], rcx
0x0000277f      e8fc430000     call sym.xmalloc
0x00002784      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00002789      4889c3         mov rbx, rax
0x0000278c      4c897c2438     mov qword [rsp + 0x38], r15
0x00002791      4c89642448     mov qword [rsp + 0x48], r12
0x00002796      48895c2440     mov qword [rsp + 0x40], rbx
0x0000279b      448b642420     mov r12d, dword [rsp + 0x20]
0x000027a0      488908         mov qword [rax], rcx
0x000027a3      488b442430     mov rax, qword [rsp + 0x30]
0x000027a8      4889cf         mov rdi, rcx
0x000027ab      488d04c3       lea rax, [rbx + rax*8]
0x000027af      4989c7         mov r15, rax
0x000027b2      eb19           jmp 0x27cd
0x000027b4      4889ea         mov rdx, rbp
0x000027b7      4489e6         mov esi, r12d
0x000027ba      4883c308       add rbx, 8
0x000027be      4829fa         sub rdx, rdi
0x000027c1      e8faf3ffff     call sym.imp.memchr
0x000027c6      488d7801       lea rdi, [rax + 1]
0x000027ca      48893b         mov qword [rbx], rdi
0x000027cd      4939df         cmp r15, rbx
0x000027d0      75e2           jne 0x27b4
0x000027d2      4c8b7c2438     mov r15, qword [rsp + 0x38]
0x000027d7      488b5c2440     mov rbx, qword [rsp + 0x40]
0x000027dc      4c8b642448     mov r12, qword [rsp + 0x48]
0x000027e1      e960fbffff     jmp 0x2346
0x000027e6      4d85c0         test r8, r8
0x000027e9      4c8b742440     mov r14, qword [rsp + 0x40]
0x000027ee      48895c2438     mov qword [rsp + 0x38], rbx
0x000027f3      0f84ff010000   je 0x29f8
0x000027f9      4c8d6c2450     lea r13, [rsp + 0x50]
0x000027fe      4c89e5         mov rbp, r12
0x00002801      4c89ef         mov rdi, r13
0x00002804      e8370c0000     call sym.initbuffer
0x00002809      4c897c2440     mov qword [rsp + 0x40], r15
0x0000280e      4c89742448     mov qword [rsp + 0x48], r14
0x00002813      4c8b7c2410     mov r15, qword [rsp + 0x10]
0x00002818      448b742430     mov r14d, dword [rsp + 0x30]
0x0000281d      eb0c           jmp 0x282b
0x0000281f      4885ed         test rbp, rbp
0x00002822      0f8442010000   je 0x296a
0x00002828      4889dd         mov rbp, rbx
0x0000282b      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00002830      4889ee         mov rsi, rbp
0x00002833      488d5d01       lea rbx, [rbp + 1]
0x00002837      e8f42a0000     call sym.randint_genmax
0x0000283c      4939c4         cmp r12, rax
0x0000283f      4c89ef         mov rdi, r13
0x00002842      760d           jbe 0x2851
0x00002844      486bc018       imul rax, rax, 0x18
0x00002848      488b4c2438     mov rcx, qword [rsp + 0x38]
0x0000284d      488d3c01       lea rdi, [rcx + rax]
0x00002851      4489f2         mov edx, r14d
0x00002854      4c89fe         mov rsi, r15
0x00002857      e8f40b0000     call sym.readlinebuffer_delim
0x0000285c      4885c0         test rax, rax
0x0000285f      75be           jne 0x281f
0x00002861      4885ed         test rbp, rbp
0x00002864      4c8b7c2440     mov r15, qword [rsp + 0x40]
0x00002869      4c8b742448     mov r14, qword [rsp + 0x48]
0x0000286e      0f8454030000   je 0x2bc8
0x00002874      4c89ef         mov rdi, r13
0x00002877      e8f40c0000     call sym.freebuffer
0x0000287c      488b442410     mov rax, qword [rsp + 0x10]
0x00002881      f60020         test byte [rax], 0x20
0x00002884      0f8512030000   jne 0x2b9c
0x0000288a      4939ec         cmp r12, rbp
0x0000288d      b901000000     mov ecx, 1
0x00002892      4c0f47e5       cmova r12, rbp
0x00002896      31db           xor ebx, ebx
0x00002898      4c89642430     mov qword [rsp + 0x30], r12
0x0000289d      e96cfcffff     jmp 0x250e
0x000028a2      31c9           xor ecx, ecx
0x000028a4      48c744243800.  mov qword [rsp + 0x38], 0
0x000028ad      488b15d4a720.  mov rdx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d088:8]=0
0x000028b4      488d35ba6900.  lea rsi, [0x00009275]                   ; "w"
0x000028bb      4c89ff         mov rdi, r15
0x000028be      884c2410       mov byte [rsp + 0x10], cl
0x000028c2      e8c9090000     call sym.freopen_safer
0x000028c7      4885c0         test rax, rax
0x000028ca      0fb64c2410     movzx ecx, byte [rsp + 0x10]
0x000028cf      0f85f0010000   jne 0x2ac5
0x000028d5      4c89fa         mov rdx, r15
0x000028d8      be03000000     mov esi, 3
0x000028dd      31ff           xor edi, edi
0x000028df      e8dc270000     call sym.quotearg_n_style_colon
0x000028e4      4889c3         mov rbx, rax
0x000028e7      e8c4f0ffff     call sym.imp.__errno_location
0x000028ec      8b30           mov esi, dword [rax]
0x000028ee      488d15056900.  lea rdx, [0x000091fa]                   ; "%s"
0x000028f5      4889d9         mov rcx, rbx
0x000028f8      bf01000000     mov edi, 1
0x000028fd      31c0           xor eax, eax
0x000028ff      e8ecf3ffff     call sym.imp.error
0x00002904      4c8b742440     mov r14, qword [rsp + 0x40]
0x00002909      48895c2438     mov qword [rsp + 0x38], rbx
0x0000290e      e969ffffff     jmp 0x287c
0x00002913      488b442430     mov rax, qword [rsp + 0x30]
0x00002918      4531f6         xor r14d, r14d
0x0000291b      4c8b7c2420     mov r15, qword [rsp + 0x20]
0x00002920      4c8d68ff       lea r13, [rax - 1]
0x00002924      eb0d           jmp 0x2933
0x00002926      4983c601       add r14, 1
0x0000292a      4d39f4         cmp r12, r14
0x0000292d      0f8403fbffff   je 0x2436
0x00002933      4c89ee         mov rsi, r13
0x00002936      4c89ff         mov rdi, r15
0x00002939      e8f2290000     call sym.randint_genmax
0x0000293e      488d04c3       lea rax, [rbx + rax*8]
0x00002942      488b0d3fa720.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d088:8]=0
0x00002949      be01000000     mov esi, 1
0x0000294e      488b38         mov rdi, qword [rax]
0x00002951      488b6808       mov rbp, qword [rax + 8]
0x00002955      4829fd         sub rbp, rdi
0x00002958      4889ea         mov rdx, rbp
0x0000295b      e830f3ffff     call sym.imp.fwrite_unlocked
0x00002960      4839c5         cmp rbp, rax
0x00002963      74c1           je 0x2926
0x00002965      e9a2fcffff     jmp 0x260c
0x0000296a      4c8b7c2440     mov r15, qword [rsp + 0x40]
0x0000296f      4c8b742448     mov r14, qword [rsp + 0x48]
0x00002974      bd01000000     mov ebp, 1
0x00002979      e9f6feffff     jmp 0x2874
0x0000297e      488d35207300.  lea rsi, [0x00009ca5]                   ; "r"
0x00002985      4889ef         mov rdi, rbp
0x00002988      e803090000     call sym.freopen_safer
0x0000298d      4885c0         test rax, rax
0x00002990      0f84b5000000   je 0x2a4b
0x00002996      488b3df3a620.  mov rdi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20d090:8]=0
0x0000299d      be02000000     mov esi, 2
0x000029a2      e869080000     call sym.fadvise
0x000029a7      807c241e00     cmp byte [rsp + 0x1e], 0
0x000029ac      0f8508fdffff   jne 0x26ba
0x000029b2      4983fcff       cmp r12, 0xffffffffffffffff
0x000029b6      0f859ffcffff   jne 0x265b
0x000029bc      e9f9fcffff     jmp 0x26ba
0x000029c1      488d35706d00.  lea rsi, str.cannot_combine__e_and__i_options ; 0x9738 ; "cannot combine -e and -i options"
0x000029c8      ba05000000     mov edx, 5
0x000029cd      31ff           xor edi, edi
0x000029cf      e8ccf0ffff     call sym.imp.dcgettext
0x000029d4      31f6           xor esi, esi
0x000029d6      4889c2         mov rdx, rax
0x000029d9      31ff           xor edi, edi
0x000029db      31c0           xor eax, eax
0x000029dd      e80ef3ffff     call sym.imp.error
0x000029e2      bf01000000     mov edi, 1
0x000029e7      e864030000     call sym.usage
0x000029ec      31ff           xor edi, edi
0x000029ee      e85d030000     call sym.usage
0x000029f3      e8d8f0ffff     call sym.imp.__stack_chk_fail
0x000029f8      4c89e5         mov rbp, r12
0x000029fb      e97cfeffff     jmp 0x287c
0x00002a00      e8cb430000     call sym.xalloc_die
0x00002a05      be01000000     mov esi, 1
0x00002a0a      e9d0f8ffff     jmp 0x22df
0x00002a0f      31c0           xor eax, eax
0x00002a11      488b3c03       mov rdi, qword [rbx + rax]
0x00002a15      e876280000     call sym.quote
0x00002a1a      488d35096800.  lea rsi, str.extra_operand__s           ; 0x922a ; "extra operand %s"
0x00002a21      4889c3         mov rbx, rax
0x00002a24      ba05000000     mov edx, 5
0x00002a29      31ff           xor edi, edi
0x00002a2b      e870f0ffff     call sym.imp.dcgettext
0x00002a30      31ff           xor edi, edi
0x00002a32      4889c2         mov rdx, rax
0x00002a35      4889d9         mov rcx, rbx
0x00002a38      31f6           xor esi, esi
0x00002a3a      31c0           xor eax, eax
0x00002a3c      e8aff2ffff     call sym.imp.error
0x00002a41      bf01000000     mov edi, 1
0x00002a46      e805030000     call sym.usage
0x00002a4b      488b13         mov rdx, qword [rbx]
0x00002a4e      be03000000     mov esi, 3
0x00002a53      31ff           xor edi, edi
0x00002a55      e866260000     call sym.quotearg_n_style_colon
0x00002a5a      4889c3         mov rbx, rax
0x00002a5d      e84eefffff     call sym.imp.__errno_location
0x00002a62      8b30           mov esi, dword [rax]
0x00002a64      488d158f6700.  lea rdx, [0x000091fa]                   ; "%s"
0x00002a6b      4889d9         mov rcx, rbx
0x00002a6e      bf01000000     mov edi, 1
0x00002a73      31c0           xor eax, eax
0x00002a75      e876f2ffff     call sym.imp.error
0x00002a7a      488d356f6c00.  lea rsi, str.multiple_output_files_specified ; 0x96f0 ; "multiple output files specified"
0x00002a81      ba05000000     mov edx, 5
0x00002a86      31ff           xor edi, edi
0x00002a88      e813f0ffff     call sym.imp.dcgettext
0x00002a8d      31f6           xor esi, esi
0x00002a8f      4889c2         mov rdx, rax
0x00002a92      bf01000000     mov edi, 1
0x00002a97      31c0           xor eax, eax
0x00002a99      e852f2ffff     call sym.imp.error
0x00002a9e      488b542430     mov rdx, qword [rsp + 0x30]
0x00002aa3      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00002aa8      4c89e6         mov rsi, r12
0x00002aab      884c2410       mov byte [rsp + 0x10], cl
0x00002aaf      e86c2a0000     call sym.randperm_new
0x00002ab4      4d85ff         test r15, r15
0x00002ab7      4989c5         mov r13, rax
0x00002aba      0fb64c2410     movzx ecx, byte [rsp + 0x10]
0x00002abf      0f85e8fdffff   jne 0x28ad
0x00002ac5      4531ff         xor r15d, r15d
0x00002ac8      84c9           test cl, cl
0x00002aca      0f841ff9ffff   je 0x23ef
0x00002ad0      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00002ad5      4c8b642438     mov r12, qword [rsp + 0x38]
0x00002ada      eb30           jmp 0x2b0c
0x00002adc      4b6b5cfd0018   imul rbx, qword [r13 + r15*8], 0x18
0x00002ae2      488b0d9fa520.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d088:8]=0
0x00002ae9      be01000000     mov esi, 1
0x00002aee      4c01e3         add rbx, r12
0x00002af1      488b5308       mov rdx, qword [rbx + 8]
0x00002af5      488b7b10       mov rdi, qword [rbx + 0x10]
0x00002af9      e892f1ffff     call sym.imp.fwrite_unlocked
0x00002afe      483b4308       cmp rax, qword [rbx + 8]
0x00002b02      0f8504fbffff   jne 0x260c
0x00002b08      4983c701       add r15, 1
0x00002b0c      4c39fd         cmp rbp, r15
0x00002b0f      75cb           jne 0x2adc
0x00002b11      e920f9ffff     jmp 0x2436
0x00002b16      488d357f7100.  lea rsi, [0x00009c9c]                   ; "read error"
0x00002b1d      ba05000000     mov edx, 5
0x00002b22      31ff           xor edi, edi
0x00002b24      e877efffff     call sym.imp.dcgettext
0x00002b29      4889c3         mov rbx, rax
0x00002b2c      e87feeffff     call sym.imp.__errno_location
0x00002b31      8b30           mov esi, dword [rax]
0x00002b33      4889da         mov rdx, rbx
0x00002b36      bf01000000     mov edi, 1
0x00002b3b      31c0           xor eax, eax
0x00002b3d      e8aef1ffff     call sym.imp.error
0x00002b42      be01000000     mov esi, 1
0x00002b47      e914fcffff     jmp 0x2760
0x00002b4c      488d35497100.  lea rsi, [0x00009c9c]                   ; "read error"
0x00002b53      ba05000000     mov edx, 5
0x00002b58      31ff           xor edi, edi
0x00002b5a      e841efffff     call sym.imp.dcgettext
0x00002b5f      4889c3         mov rbx, rax
0x00002b62      e849eeffff     call sym.imp.__errno_location
0x00002b67      8b30           mov esi, dword [rax]
0x00002b69      4889da         mov rdx, rbx
0x00002b6c      bf01000000     mov edi, 1
0x00002b71      31c0           xor eax, eax
0x00002b73      e878f1ffff     call sym.imp.error
0x00002b78      488d35d16600.  lea rsi, str.no_lines_to_repeat         ; 0x9250 ; "no lines to repeat"
0x00002b7f      ba05000000     mov edx, 5
0x00002b84      31ff           xor edi, edi
0x00002b86      e815efffff     call sym.imp.dcgettext
0x00002b8b      31f6           xor esi, esi
0x00002b8d      4889c2         mov rdx, rax
0x00002b90      bf01000000     mov edi, 1
0x00002b95      31c0           xor eax, eax
0x00002b97      e854f1ffff     call sym.imp.error
0x00002b9c      488d35f97000.  lea rsi, [0x00009c9c]                   ; "read error"
0x00002ba3      ba05000000     mov edx, 5
0x00002ba8      31ff           xor edi, edi
0x00002baa      e8f1eeffff     call sym.imp.dcgettext
0x00002baf      4889c3         mov rbx, rax
0x00002bb2      e8f9edffff     call sym.imp.__errno_location
0x00002bb7      8b30           mov esi, dword [rax]
0x00002bb9      4889da         mov rdx, rbx
0x00002bbc      bf01000000     mov edi, 1
0x00002bc1      31c0           xor eax, eax
0x00002bc3      e828f1ffff     call sym.imp.error
0x00002bc8      488d356c6600.  lea rsi, str.too_many_input_lines       ; 0x923b ; "too many input lines"
0x00002bcf      ba05000000     mov edx, 5
0x00002bd4      31ff           xor edi, edi
0x00002bd6      e8c5eeffff     call sym.imp.dcgettext
0x00002bdb      be4b000000     mov esi, 0x4b                           ; 'K'
0x00002be0      4889c2         mov rdx, rax
0x00002be3      bf01000000     mov edi, 1
0x00002be8      31c0           xor eax, eax
0x00002bea      e801f1ffff     call sym.imp.error
0x00002bef      488d351a6b00.  lea rsi, str.multiple_random_sources_specified ; 0x9710 ; "multiple random sources specified"
0x00002bf6      ba05000000     mov edx, 5
0x00002bfb      31ff           xor edi, edi
0x00002bfd      e89eeeffff     call sym.imp.dcgettext
0x00002c02      31f6           xor esi, esi
0x00002c04      4889c2         mov rdx, rax
0x00002c07      bf01000000     mov edi, 1
0x00002c0c      31c0           xor eax, eax
0x00002c0e      e8ddf0ffff     call sym.imp.error
0x00002c13      488d35aa6500.  lea rsi, str.multiple__i_options_specified ; 0x91c4 ; "multiple -i options specified"
0x00002c1a      ba05000000     mov edx, 5
0x00002c1f      31ff           xor edi, edi
0x00002c21      e87aeeffff     call sym.imp.dcgettext
0x00002c26      31f6           xor esi, esi
0x00002c28      4889c2         mov rdx, rax
0x00002c2b      bf01000000     mov edi, 1
0x00002c30      31c0           xor eax, eax
0x00002c32      e8b9f0ffff     call sym.imp.error
0x00002c37      660f1f840000.  nop word [rax + rax]
;-- entry0:
;-- _start:
;-- rip:
0x00002c40      31ed           xor ebp, ebp
0x00002c42      4989d1         mov r9, rdx
0x00002c45      5e             pop rsi
0x00002c46      4889e2         mov rdx, rsp
0x00002c49      4883e4f0       and rsp, 0xfffffffffffffff0
0x00002c4d      50             push rax
0x00002c4e      54             push rsp
0x00002c4f      4c8d057a6400.  lea r8, sym.__libc_csu_fini             ; 0x90d0
0x00002c56      488d0d036400.  lea rcx, sym.__libc_csu_init            ; 0x9060 ; "AWAVI\x89\xd7AUATL\x8d%~9 "
0x00002c5d      488d3d7cf1ff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1de0 ; "AWAVE1\xffAUATI\xc7\xc4\xff\xff\xff\xffUS\x89\xfdH\x89\xf3E1\xedM\x89\xe6H\x81\xec\x18\x01"
0x00002c64      ff1566a32000   call qword [reloc.__libc_start_main]    ; [0x20cfd0:8]=0
0x00002c6a      f4             hlt
0x00002c6b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00002c70      488d3d09a420.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20d080
0x00002c77      55             push rbp
0x00002c78      488d0501a420.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20d080
0x00002c7f      4839f8         cmp rax, rdi
0x00002c82      4889e5         mov rbp, rsp
0x00002c85      7419           je 0x2ca0
0x00002c87      488b053aa320.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x20cfc8:8]=0
0x00002c8e      4885c0         test rax, rax
0x00002c91      740d           je 0x2ca0
0x00002c93      5d             pop rbp
0x00002c94      ffe0           jmp rax
0x00002c96      662e0f1f8400.  nop word cs:[rax + rax]
0x00002ca0      5d             pop rbp
0x00002ca1      c3             ret
0x00002ca2      0f1f4000       nop dword [rax]
0x00002ca6      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00002cb0      488d3dc9a320.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20d080
0x00002cb7      488d35c2a320.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20d080
0x00002cbe      55             push rbp
0x00002cbf      4829fe         sub rsi, rdi
0x00002cc2      4889e5         mov rbp, rsp
0x00002cc5      48c1fe03       sar rsi, 3
0x00002cc9      4889f0         mov rax, rsi
0x00002ccc      48c1e83f       shr rax, 0x3f
0x00002cd0      4801c6         add rsi, rax
0x00002cd3      48d1fe         sar rsi, 1
0x00002cd6      7418           je 0x2cf0
0x00002cd8      488b0501a320.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x20cfe0:8]=0
0x00002cdf      4885c0         test rax, rax
0x00002ce2      740c           je 0x2cf0
0x00002ce4      5d             pop rbp
0x00002ce5      ffe0           jmp rax
0x00002ce7      660f1f840000.  nop word [rax + rax]
0x00002cf0      5d             pop rbp
0x00002cf1      c3             ret
0x00002cf2      0f1f4000       nop dword [rax]
0x00002cf6      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00002d00      803dc1a32000.  cmp byte [obj.completed.7697], 0        ; [0x20d0c8:1]=0
0x00002d07      752f           jne 0x2d38
0x00002d09      48833dd7a220.  cmp qword [reloc.__cxa_finalize], 0     ; [0x20cfe8:8]=0
0x00002d11      55             push rbp
0x00002d12      4889e5         mov rbp, rsp
0x00002d15      740c           je 0x2d23
0x00002d17      488b3deaa220.  mov rdi, qword [obj.__dso_handle]       ; [0x20d008:8]=0x20d008 obj.__dso_handle
0x00002d1e      e8b5f0ffff     call 0x1dd8
0x00002d23      e848ffffff     call sym.deregister_tm_clones
0x00002d28      c60599a32000.  mov byte [obj.completed.7697], 1        ; [0x20d0c8:1]=0
0x00002d2f      5d             pop rbp
0x00002d30      c3             ret
0x00002d31      0f1f80000000.  nop dword [rax]
0x00002d38      f3c3           ret
0x00002d3a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00002d40      55             push rbp
0x00002d41      4889e5         mov rbp, rsp
0x00002d44      5d             pop rbp
0x00002d45      e966ffffff     jmp sym.register_tm_clones
0x00002d4a      660f1f440000   nop word [rax + rax]
;-- usage:
0x00002d50      4155           push r13                                ; /src:57
0x00002d52      4154           push r12
0x00002d54      ba05000000     mov edx, 5                              ; /src:59
0x00002d59      55             push rbp                                ; /src:57
0x00002d5a      53             push rbx
0x00002d5b      89fd           mov ebp, edi
0x00002d5d      4881ec880000.  sub rsp, 0x88
0x00002d64      488b1d75a320.  mov rbx, qword [obj.program_name]       ; [0x20d0e0:8]=0
0x00002d6b      64488b042528.  mov rax, qword fs:[0x28]
0x00002d74      4889442478     mov qword [rsp + 0x78], rax
0x00002d79      31c0           xor eax, eax
0x00002d7b      85ff           test edi, edi                           ; /src:58
0x00002d7d      742e           je 0x2dad
0x00002d7f      488d35426500.  lea rsi, str.Try___s___help__for_more_information. ; /src:59 ; 0x92c8 ; "Try '%s --help' for more information.\n"
0x00002d86      31ff           xor edi, edi
0x00002d88      e813edffff     call sym.imp.dcgettext
0x00002d8d      488b3d2ca320.  mov rdi, qword [obj.stderr]             ; .//ib:97 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20d0c0:8]=0
0x00002d94      4889c2         mov rdx, rax
0x00002d97      4889d9         mov rcx, rbx
0x00002d9a      be01000000     mov esi, 1
0x00002d9f      31c0           xor eax, eax
0x00002da1      e8eaefffff     call sym.imp.__fprintf_chk
0x00002da6      89ef           mov edi, ebp                            ; /src:91
0x00002da8      e8c3efffff     call sym.imp.exit
0x00002dad      488d353c6500.  lea rsi, str.Usage:__s__OPTION_...__FILE_____or:___s__e__OPTION_...__ARG_...____or:___s__i_LO_HI__OPTION_... ; /src:62 ; 0x92f0 ; "Usage: %s [OPTION]... [FILE]\n  or:  %s -e [OPTION]... [ARG]...\n  or:  %s -i LO-HI [OPTION]...\n"
0x00002db4      31ff           xor edi, edi
0x00002db6      e8e5ecffff     call sym.imp.dcgettext
0x00002dbb      4889d9         mov rcx, rbx                            ; .//ib:104
0x00002dbe      4989d8         mov r8, rbx
0x00002dc1      4889da         mov rdx, rbx
0x00002dc4      4889c6         mov rsi, rax
0x00002dc7      bf01000000     mov edi, 1
0x00002dcc      31c0           xor eax, eax
0x00002dce      e8fdeeffff     call sym.imp.__printf_chk
0x00002dd3      488b1daea220.  mov rbx, qword [obj.stdout]             ; /src:68 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d088:8]=0
0x00002dda      488d356f6500.  lea rsi, str.Write_a_random_permutation_of_the_input_lines_to_standard_output. ; 0x9350 ; "Write a random permutation of the input lines to standard output.\n"
0x00002de1      ba05000000     mov edx, 5
0x00002de6      31ff           xor edi, edi
0x00002de8      e8b3ecffff     call sym.imp.dcgettext
0x00002ded      4889de         mov rsi, rbx
0x00002df0      4889c7         mov rdi, rax
0x00002df3      e8e8edffff     call sym.imp.fputs_unlocked
0x00002df8      488b1d89a220.  mov rbx, qword [obj.stdout]             ; ../coreutils-8.31/src/uf.c:580 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d088:8]=0
0x00002dff      488d35926500.  lea rsi, str.With_no_FILE__or_when_FILE_is____read_standard_input. ; 0x9398 ; "\nWith no FILE, or when FILE is -, read standard input.\n"
0x00002e06      ba05000000     mov edx, 5
0x00002e0b      31ff           xor edi, edi
0x00002e0d      e88eecffff     call sym.imp.dcgettext
0x00002e12      4889de         mov rsi, rbx
0x00002e15      4889c7         mov rdi, rax
0x00002e18      e8c3edffff     call sym.imp.fputs_unlocked
0x00002e1d      488b1d64a220.  mov rbx, qword [obj.stdout]             ; ../coreutils-8.31/src/uf.c:587 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d088:8]=0
0x00002e24      488d35a56500.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0x93d0 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x00002e2b      ba05000000     mov edx, 5
0x00002e30      31ff           xor edi, edi
0x00002e32      e869ecffff     call sym.imp.dcgettext
0x00002e37      4889de         mov rsi, rbx
0x00002e3a      4889c7         mov rdi, rax
0x00002e3d      e89eedffff     call sym.imp.fputs_unlocked
0x00002e42      488b1d3fa220.  mov rbx, qword [obj.stdout]             ; /src:75 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d088:8]=0
0x00002e49      488d35d06500.  lea rsi, str.e____echo________________treat_each_ARG_as_an_input_line_____i____input_range_LO_HI___treat_each_number_LO_through_HI_as_an_input_line_____n____head_count_COUNT____output_at_most_COUNT_lines_____o____output_FILE_________write_result_to_FILE_instead_of_standard_output__________random_source_FILE__get_random_bytes_from_FILE_____r____repeat______________output_lines_can_be_repeated ; 0x9420 ; "  -e, --echo                treat each ARG as an input line\n  -i, --input-range=LO-HI   treat each number LO through HI as an input line\n  -n, --head-count=COUNT    output at most COUNT lines\n  -o, --output=FILE         write result to FILE instead of standard output\n      --random-source=FILE  get random bytes from FILE\n  -r, --repeat              output lines can be repeated\n"
0x00002e50      ba05000000     mov edx, 5
0x00002e55      31ff           xor edi, edi
0x00002e57      e844ecffff     call sym.imp.dcgettext
0x00002e5c      4889de         mov rsi, rbx
0x00002e5f      4889c7         mov rdi, rax
0x00002e62      e879edffff     call sym.imp.fputs_unlocked
0x00002e67      488b1d1aa220.  mov rbx, qword [obj.stdout]             ; /src:83 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d088:8]=0
0x00002e6e      488d352b6700.  lea rsi, str.z____zero_terminated_____line_delimiter_is_NUL__not_newline ; 0x95a0 ; "  -z, --zero-terminated     line delimiter is NUL, not newline\n"
0x00002e75      ba05000000     mov edx, 5
0x00002e7a      31ff           xor edi, edi
0x00002e7c      e81fecffff     call sym.imp.dcgettext
0x00002e81      4889de         mov rsi, rbx
0x00002e84      4889c7         mov rdi, rax
0x00002e87      e854edffff     call sym.imp.fputs_unlocked
0x00002e8c      488b1df5a120.  mov rbx, qword [obj.stdout]             ; /src:86 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d088:8]=0
0x00002e93      488d35466700.  lea rsi, str.help_____display_this_help_and_exit ; 0x95e0 ; "      --help     display this help and exit\n"
0x00002e9a      ba05000000     mov edx, 5
0x00002e9f      31ff           xor edi, edi
0x00002ea1      e8faebffff     call sym.imp.dcgettext
0x00002ea6      4889de         mov rsi, rbx
0x00002ea9      4889c7         mov rdi, rax
0x00002eac      e82fedffff     call sym.imp.fputs_unlocked
0x00002eb1      488b1dd0a120.  mov rbx, qword [obj.stdout]             ; /src:87 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d088:8]=0
0x00002eb8      488d35516700.  lea rsi, str.version__output_version_information_and_exit ; 0x9610 ; "      --version  output version information and exit\n"
0x00002ebf      ba05000000     mov edx, 5
0x00002ec4      31ff           xor edi, edi
0x00002ec6      e8d5ebffff     call sym.imp.dcgettext
0x00002ecb      4889de         mov rsi, rbx
0x00002ece      4889c7         mov rdi, rax
0x00002ed1      488d1d2c6200.  lea rbx, str.shuf                       ; 0x9104 ; "shuf"
0x00002ed8      e803edffff     call sym.imp.fputs_unlocked
0x00002edd      488d05256200.  lea rax, [0x00009109]                   ; ../coreutils-8.31/src/uf.c:633 ; "["
0x00002ee4      488d0d5f6200.  lea rcx, str.sha256sum                  ; 0x914a ; "sha256sum"
0x00002eeb      48c744246000.  mov qword [rsp + 0x60], 0
0x00002ef4      48c744246800.  mov qword [rsp + 0x68], 0
0x00002efd      4889e2         mov rdx, rsp                            ; ../coreutils-8.31/src/uf.c:644
0x00002f00      48890424       mov qword [rsp], rax                    ; ../coreutils-8.31/src/uf.c:633
0x00002f04      488d05006200.  lea rax, str.test_invocation            ; 0x910b ; "test invocation"
0x00002f0b      48894c2430     mov qword [rsp + 0x30], rcx
0x00002f10      488d0d3d6200.  lea rcx, str.sha384sum                  ; 0x9154 ; "sha384sum"
0x00002f17      4889442408     mov qword [rsp + 8], rax
0x00002f1c      488d05606200.  lea rax, [0x00009183]                   ; "coreutils"
0x00002f23      48894c2440     mov qword [rsp + 0x40], rcx
0x00002f28      488d0d2f6200.  lea rcx, str.sha512sum                  ; 0x915e ; "sha512sum"
0x00002f2f      4889442410     mov qword [rsp + 0x10], rax
0x00002f34      488d05e06100.  lea rax, str.Multi_call_invocation      ; 0x911b ; "Multi-call invocation"
0x00002f3b      48894c2450     mov qword [rsp + 0x50], rcx
0x00002f40      4889442418     mov qword [rsp + 0x18], rax
0x00002f45      488d05e56100.  lea rax, str.sha224sum                  ; 0x9131 ; "sha224sum"
0x00002f4c      4889442420     mov qword [rsp + 0x20], rax
0x00002f51      488d05e36100.  lea rax, str.sha2_utilities             ; 0x913b ; "sha2 utilities"
0x00002f58      4889442428     mov qword [rsp + 0x28], rax
0x00002f5d      4889442438     mov qword [rsp + 0x38], rax
0x00002f62      4889442448     mov qword [rsp + 0x48], rax
0x00002f67      4889442458     mov qword [rsp + 0x58], rax
0x00002f6c      0f1f4000       nop dword [rax]
0x00002f70      4883c210       add rdx, 0x10                           ; ../coreutils-8.31/src/uf.c:647
0x00002f74      488b3a         mov rdi, qword [rdx]                    ; ../coreutils-8.31/src/uf.c:646
0x00002f77      4885ff         test rdi, rdi
0x00002f7a      7413           je 0x2f8f
0x00002f7c      b905000000     mov ecx, 5
0x00002f81      4889de         mov rsi, rbx
0x00002f84      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002f86      0f97c0         seta al
0x00002f89      1c00           sbb al, 0
0x00002f8b      84c0           test al, al
0x00002f8d      75e1           jne 0x2f70
0x00002f8f      4c8b6208       mov r12, qword [rdx + 8]                ; ../coreutils-8.31/src/uf.c:649
0x00002f93      31ff           xor edi, edi                            ; ../coreutils-8.31/src/uf.c:652
0x00002f95      ba05000000     mov edx, 5
0x00002f9a      488d35c76100.  lea rsi, str.s_online_help:___s         ; 0x9168 ; "\n%s online help: <%s>\n"
0x00002fa1      4d85e4         test r12, r12                           ; ../coreutils-8.31/src/uf.c:649
0x00002fa4      0f84c1000000   je 0x306b
0x00002faa      e8f1eaffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/src/uf.c:652
0x00002faf      488d0d926600.  lea rcx, str.https:__www.gnu.org_software_coreutils ; .//ib:104 ; 0x9648 ; "https://www.gnu.org/software/coreutils/"
0x00002fb6      488d15c26100.  lea rdx, str.GNU_coreutils              ; 0x917f ; "GNU coreutils"
0x00002fbd      4889c6         mov rsi, rax
0x00002fc0      bf01000000     mov edi, 1
0x00002fc5      31c0           xor eax, eax
0x00002fc7      e804edffff     call sym.imp.__printf_chk
0x00002fcc      31f6           xor esi, esi                            ; ../coreutils-8.31/src/uf.c:656
0x00002fce      bf05000000     mov edi, 5
0x00002fd3      e8e8ecffff     call sym.imp.setlocale
0x00002fd8      4885c0         test rax, rax                           ; ../coreutils-8.31/src/uf.c:657
0x00002fdb      741c           je 0x2ff9
0x00002fdd      488d35a96100.  lea rsi, [0x0000918d]                   ; "en_"
0x00002fe4      ba03000000     mov edx, 3
0x00002fe9      4889c7         mov rdi, rax
0x00002fec      e8cfe9ffff     call sym.imp.strncmp
0x00002ff1      85c0           test eax, eax
0x00002ff3      0f8507010000   jne 0x3100
0x00002ff9      488d35916100.  lea rsi, str.Full_documentation___s_s   ; ../coreutils-8.31/src/uf.c:666 ; 0x9191 ; "Full documentation <%s%s>\n"
0x00003000      31ff           xor edi, edi
0x00003002      ba05000000     mov edx, 5
0x00003007      e894eaffff     call sym.imp.dcgettext
0x0000300c      488d0df16000.  lea rcx, str.shuf                       ; .//ib:104 ; 0x9104 ; "shuf"
0x00003013      488d152e6600.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x9648 ; "https://www.gnu.org/software/coreutils/"
0x0000301a      4889c6         mov rsi, rax
0x0000301d      bf01000000     mov edi, 1
0x00003022      31c0           xor eax, eax
0x00003024      e8a7ecffff     call sym.imp.__printf_chk
0x00003029      4939dc         cmp r12, rbx                            ; ../coreutils-8.31/src/uf.c:668
0x0000302c      488d0df26000.  lea rcx, [0x00009125]                   ; " invocation"
0x00003033      488d1dd66c00.  lea rbx, [0x00009d10]
0x0000303a      480f44d9       cmove rbx, rcx
0x0000303e      488d35736600.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x96b8 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00003045      31ff           xor edi, edi
0x00003047      ba05000000     mov edx, 5
0x0000304c      e84feaffff     call sym.imp.dcgettext
0x00003051      4889d9         mov rcx, rbx                            ; .//ib:104
0x00003054      4889c6         mov rsi, rax
0x00003057      4c89e2         mov rdx, r12
0x0000305a      bf01000000     mov edi, 1
0x0000305f      31c0           xor eax, eax
0x00003061      e86aecffff     call sym.imp.__printf_chk
0x00003066      e93bfdffff     jmp 0x2da6
0x0000306b      e830eaffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/src/uf.c:652
0x00003070      488d0dd16500.  lea rcx, str.https:__www.gnu.org_software_coreutils ; .//ib:104 ; 0x9648 ; "https://www.gnu.org/software/coreutils/"
0x00003077      488d15016100.  lea rdx, str.GNU_coreutils              ; 0x917f ; "GNU coreutils"
0x0000307e      4889c6         mov rsi, rax
0x00003081      bf01000000     mov edi, 1
0x00003086      31c0           xor eax, eax
0x00003088      e843ecffff     call sym.imp.__printf_chk
0x0000308d      31f6           xor esi, esi                            ; ../coreutils-8.31/src/uf.c:656
0x0000308f      bf05000000     mov edi, 5
0x00003094      e827ecffff     call sym.imp.setlocale
0x00003099      4885c0         test rax, rax                           ; ../coreutils-8.31/src/uf.c:657
0x0000309c      7418           je 0x30b6
0x0000309e      488d35e86000.  lea rsi, [0x0000918d]                   ; "en_"
0x000030a5      ba03000000     mov edx, 3
0x000030aa      4889c7         mov rdi, rax
0x000030ad      e80ee9ffff     call sym.imp.strncmp
0x000030b2      85c0           test eax, eax
0x000030b4      7543           jne 0x30f9
0x000030b6      488d35d46000.  lea rsi, str.Full_documentation___s_s   ; ../coreutils-8.31/src/uf.c:666 ; 0x9191 ; "Full documentation <%s%s>\n"
0x000030bd      ba05000000     mov edx, 5
0x000030c2      31ff           xor edi, edi
0x000030c4      4c8d25396000.  lea r12, str.shuf                       ; ../coreutils-8.31/src/uf.c:643 ; 0x9104 ; "shuf"
0x000030cb      488d1d536000.  lea rbx, [0x00009125]                   ; ../coreutils-8.31/src/uf.c:668 ; " invocation"
0x000030d2      e8c9e9ffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/src/uf.c:666
0x000030d7      488d0d266000.  lea rcx, str.shuf                       ; .//ib:104 ; 0x9104 ; "shuf"
0x000030de      488d15636500.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x9648 ; "https://www.gnu.org/software/coreutils/"
0x000030e5      4889c6         mov rsi, rax
0x000030e8      bf01000000     mov edi, 1
0x000030ed      31c0           xor eax, eax
0x000030ef      e8dcebffff     call sym.imp.__printf_chk
0x000030f4      e945ffffff     jmp 0x303e
0x000030f9      4c8d25046000.  lea r12, str.shuf                       ; ../coreutils-8.31/src/uf.c:643 ; 0x9104 ; "shuf"
0x00003100      4c8b2d819f20.  mov r13, qword [obj.stdout]             ; ../coreutils-8.31/src/uf.c:663 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d088:8]=0
0x00003107      488d35626500.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x9670 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x0000310e      31ff           xor edi, edi
0x00003110      ba05000000     mov edx, 5
0x00003115      e886e9ffff     call sym.imp.dcgettext
0x0000311a      4c89ee         mov rsi, r13
0x0000311d      4889c7         mov rdi, rax
0x00003120      e8bbeaffff     call sym.imp.fputs_unlocked
0x00003125      e9cffeffff     jmp 0x2ff9
0x0000312a      660f1f440000   nop word [rax + rax]
;-- close_stdout_set_file_name:
0x00003130      48893da19f20.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x20d0d8:8]=0
0x00003137      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00003138      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00003140      40883d899f20.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x20d0d0:1]=0
0x00003147      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00003148      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00003150      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00003151      53             push rbx
0x00003152      4883ec08       sub rsp, 8
0x00003156      488b3d2b9f20.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d088:8]=0
0x0000315d      e8ce470000     call sym.close_stream
0x00003162      85c0           test eax, eax
0x00003164      7416           je 0x317c
0x00003166      e845e8ffff     call sym.imp.__errno_location
0x0000316b      803d5e9f2000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x20d0d0:1]=0
0x00003172      4889c3         mov rbx, rax
0x00003175      741c           je 0x3193
0x00003177      833820         cmp dword [rax], 0x20
0x0000317a      7517           jne 0x3193
0x0000317c      488b3d3d9f20.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20d0c0:8]=0
0x00003183      e8a8470000     call sym.close_stream
0x00003188      85c0           test eax, eax
0x0000318a      7546           jne 0x31d2
0x0000318c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00003190      5b             pop rbx
0x00003191      5d             pop rbp
0x00003192      c3             ret
0x00003193      488d35cf6000.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x9269 ; "write error"
0x0000319a      31ff           xor edi, edi
0x0000319c      ba05000000     mov edx, 5
0x000031a1      e8fae8ffff     call sym.imp.dcgettext
0x000031a6      488b3d2b9f20.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x20d0d8:8]=0
0x000031ad      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x000031b0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x000031b3      7428           je 0x31dd
0x000031b5      e8d61e0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x000031ba      8b33           mov esi, dword [rbx]
0x000031bc      488d15336000.  lea rdx, str.s:__s                      ; 0x91f6 ; "%s: %s"
0x000031c3      4889c1         mov rcx, rax
0x000031c6      4989e8         mov r8, rbp
0x000031c9      31ff           xor edi, edi
0x000031cb      31c0           xor eax, eax
0x000031cd      e81eebffff     call sym.imp.error
0x000031d2      8b3d409e2000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x20d018:4]=1
0x000031d8      e8f3e7ffff     call sym.imp._exit
0x000031dd      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x000031df      488d15146000.  lea rdx, [0x000091fa]                   ; "%s"
0x000031e6      4889c1         mov rcx, rax
0x000031e9      31ff           xor edi, edi
0x000031eb      31c0           xor eax, eax
0x000031ed      e8feeaffff     call sym.imp.error
0x000031f2      ebde           jmp 0x31d2
0x000031f4      662e0f1f8400.  nop word cs:[rax + rax]
0x000031fe      6690           nop
;-- fdadvise:
0x00003200      e9abe9ffff     jmp sym.imp.posix_fadvise               ; ../coreutils-8.31/lib/fadvise.c:32
0x00003205      90             nop
0x00003206      662e0f1f8400.  nop word cs:[rax + rax]
;-- fadvise:
0x00003210      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fadvise.c:40
0x00003213      741b           je 0x3230
0x00003215      53             push rbx
0x00003216      89f3           mov ebx, esi
0x00003218      e803eaffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fadvise.c:42
0x0000321d      89d9           mov ecx, ebx                            ; ../coreutils-8.31/lib/fadvise.c:34
0x0000321f      31d2           xor edx, edx
0x00003221      31f6           xor esi, esi
0x00003223      5b             pop rbx                                 ; ../coreutils-8.31/lib/fadvise.c:43
0x00003224      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fadvise.c:34
0x00003226      e985e9ffff     jmp sym.imp.posix_fadvise
0x0000322b      0f1f440000     nop dword [rax + rax]
0x00003230      f3c3           ret
0x00003232      662e0f1f8400.  nop word cs:[rax + rax]
0x0000323c      0f1f4000       nop dword [rax]
;-- protect_fd:
0x00003240      55             push rbp                                ; ../coreutils-8.31/lib/freopen-safer.c:41
0x00003241      53             push rbx
0x00003242      89fd           mov ebp, edi
0x00003244      488d3d136500.  lea rdi, str.dev_null                   ; fcntl2.h:53       return __open_alias (__path, __oflag, __va_arg_pack ()); ; 0x975e ; "/dev/null"
0x0000324b      31f6           xor esi, esi
0x0000324d      31c0           xor eax, eax
0x0000324f      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/freopen-safer.c:41
0x00003253      bb01000000     mov ebx, 1                              ; ../coreutils-8.31/lib/freopen-safer.c:52
0x00003258      e8b3eaffff     call sym.imp.open                       ; fcntl2.h:53       return __open_alias (__path, __oflag, __va_arg_pack ());
0x0000325d      39c5           cmp ebp, eax                            ; ../coreutils-8.31/lib/freopen-safer.c:43
0x0000325f      7418           je 0x3279
0x00003261      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/freopen-safer.c:50
0x00003263      85c0           test eax, eax                           ; ../coreutils-8.31/lib/freopen-safer.c:45
0x00003265      7812           js 0x3279
0x00003267      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/freopen-safer.c:47
0x00003269      e832e9ffff     call sym.imp.close
0x0000326e      e83de7ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/freopen-safer.c:48
0x00003273      c70009000000   mov dword [rax], 9
0x00003279      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/freopen-safer.c:53
0x0000327d      89d8           mov eax, ebx
0x0000327f      5b             pop rbx
0x00003280      5d             pop rbp
0x00003281      c3             ret
0x00003282      0f1f4000       nop dword [rax]
0x00003286      662e0f1f8400.  nop word cs:[rax + rax]
;-- freopen_safer:
0x00003290      4157           push r15                                ; ../coreutils-8.31/lib/freopen-safer.c:63
0x00003292      4156           push r14
0x00003294      4989f7         mov r15, rsi
0x00003297      4155           push r13
0x00003299      4154           push r12
0x0000329b      4989d4         mov r12, rdx
0x0000329e      55             push rbp
0x0000329f      53             push rbx
0x000032a0      4883ec18       sub rsp, 0x18
0x000032a4      48897c2408     mov qword [rsp + 8], rdi
0x000032a9      4889d7         mov rdi, rdx                            ; ../coreutils-8.31/lib/freopen-safer.c:75
0x000032ac      e86fe9ffff     call sym.imp.fileno
0x000032b1      89c3           mov ebx, eax
0x000032b3      e8f8e6ffff     call sym.imp.__errno_location
0x000032b8      83fb01         cmp ebx, 1
0x000032bb      4989c6         mov r14, rax
0x000032be      0f845c010000   je 0x3420
0x000032c4      83fb02         cmp ebx, 2
0x000032c7      0f8443010000   je 0x3410
0x000032cd      85db           test ebx, ebx
0x000032cf      0f84b3000000   je 0x3388
0x000032d5      be02000000     mov esi, 2                              ; ../coreutils-8.31/lib/freopen-safer.c:78
0x000032da      bf02000000     mov edi, 2
0x000032df      e82ce8ffff     call sym.imp.dup2
0x000032e4      83f802         cmp eax, 2
0x000032e7      0f95c3         setne bl
0x000032ea      be01000000     mov esi, 1                              ; ../coreutils-8.31/lib/freopen-safer.c:82
0x000032ef      bf01000000     mov edi, 1
0x000032f4      e817e8ffff     call sym.imp.dup2
0x000032f9      83f801         cmp eax, 1
0x000032fc      400f95c5       setne bpl
0x00003300      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/freopen-safer.c:86
0x00003302      31ff           xor edi, edi
0x00003304      e807e8ffff     call sym.imp.dup2
0x00003309      85c0           test eax, eax
0x0000330b      0f8487000000   je 0x3398
0x00003311      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/freopen-safer.c:93
0x00003313      e828ffffff     call sym.protect_fd
0x00003318      84c0           test al, al
0x0000331a      4189c5         mov r13d, eax
0x0000331d      0f840d010000   je 0x3430
0x00003323      4084ed         test bpl, bpl                           ; ../coreutils-8.31/lib/freopen-safer.c:95
0x00003326      7578           jne 0x33a0
0x00003328      84db           test bl, bl                             ; ../coreutils-8.31/lib/freopen-safer.c:97
0x0000332a      7414           je 0x3340
0x0000332c      bf02000000     mov edi, 2
0x00003331      e80affffff     call sym.protect_fd
0x00003336      84c0           test al, al
0x00003338      89c3           mov ebx, eax
0x0000333a      0f84b0000000   je 0x33f0
0x00003340      488b7c2408     mov rdi, qword [rsp + 8]                ; ../coreutils-8.31/lib/freopen-safer.c:100
0x00003345      4c89e2         mov rdx, r12
0x00003348      4c89fe         mov rsi, r15
0x0000334b      e840e8ffff     call sym.imp.freopen
0x00003350      4989c4         mov r12, rax
0x00003353      84db           test bl, bl                             ; ../coreutils-8.31/lib/freopen-safer.c:102
0x00003355      458b3e         mov r15d, dword [r14]                   ; ../coreutils-8.31/lib/freopen-safer.c:101
0x00003358      0f85a2000000   jne 0x3400                              ; ../coreutils-8.31/lib/freopen-safer.c:102
0x0000335e      4084ed         test bpl, bpl                           ; ../coreutils-8.31/lib/freopen-safer.c:104
0x00003361      756d           jne 0x33d0
0x00003363      4584ed         test r13b, r13b                         ; ../coreutils-8.31/lib/freopen-safer.c:106
0x00003366      7577           jne 0x33df
0x00003368      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/freopen-safer.c:108
0x0000336b      7503           jne 0x3370
0x0000336d      45893e         mov dword [r14], r15d                   ; ../coreutils-8.31/lib/freopen-safer.c:109
0x00003370      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/freopen-safer.c:111
0x00003374      4c89e0         mov rax, r12
0x00003377      5b             pop rbx
0x00003378      5d             pop rbp
0x00003379      415c           pop r12
0x0000337b      415d           pop r13
0x0000337d      415e           pop r14
0x0000337f      415f           pop r15
0x00003381      c3             ret
0x00003382      660f1f440000   nop word [rax + rax]
0x00003388      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/freopen-safer.c:72
0x0000338a      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/freopen-safer.c:71
0x0000338c      4531ed         xor r13d, r13d                          ; ../coreutils-8.31/lib/freopen-safer.c:70
0x0000338f      ebaf           jmp 0x3340
0x00003391      0f1f80000000.  nop dword [rax]
0x00003398      4531ed         xor r13d, r13d
0x0000339b      4084ed         test bpl, bpl                           ; ../coreutils-8.31/lib/freopen-safer.c:95
0x0000339e      7488           je 0x3328
0x000033a0      bf01000000     mov edi, 1
0x000033a5      e896feffff     call sym.protect_fd
0x000033aa      84c0           test al, al
0x000033ac      89c5           mov ebp, eax
0x000033ae      0f8574ffffff   jne 0x3328
0x000033b4      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/freopen-safer.c:96
0x000033b7      84db           test bl, bl                             ; ../coreutils-8.31/lib/freopen-safer.c:102
0x000033b9      458b3e         mov r15d, dword [r14]                   ; ../coreutils-8.31/lib/freopen-safer.c:101
0x000033bc      7412           je 0x33d0                               ; ../coreutils-8.31/lib/freopen-safer.c:102
0x000033be      bf02000000     mov edi, 2                              ; ../coreutils-8.31/lib/freopen-safer.c:103
0x000033c3      e8d8e7ffff     call sym.imp.close
0x000033c8      0f1f84000000.  nop dword [rax + rax]
0x000033d0      bf01000000     mov edi, 1                              ; ../coreutils-8.31/lib/freopen-safer.c:105
0x000033d5      e8c6e7ffff     call sym.imp.close
0x000033da      4584ed         test r13b, r13b                         ; ../coreutils-8.31/lib/freopen-safer.c:106
0x000033dd      7489           je 0x3368
0x000033df      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/freopen-safer.c:107
0x000033e1      e8bae7ffff     call sym.imp.close
0x000033e6      eb80           jmp 0x3368
0x000033e8      0f1f84000000.  nop dword [rax + rax]
0x000033f0      458b3e         mov r15d, dword [r14]                   ; ../coreutils-8.31/lib/freopen-safer.c:101
0x000033f3      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/freopen-safer.c:98
0x000033f6      662e0f1f8400.  nop word cs:[rax + rax]
0x00003400      bf02000000     mov edi, 2                              ; ../coreutils-8.31/lib/freopen-safer.c:103
0x00003405      e896e7ffff     call sym.imp.close
0x0000340a      e94fffffff     jmp 0x335e
0x0000340f      90             nop
0x00003410      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/freopen-safer.c:72
0x00003412      e9d3feffff     jmp 0x32ea
0x00003417      660f1f840000.  nop word [rax + rax]
0x00003420      31db           xor ebx, ebx
0x00003422      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/freopen-safer.c:71
0x00003424      e9d7feffff     jmp 0x3300
0x00003429      0f1f80000000.  nop dword [rax]
0x00003430      41bd01000000   mov r13d, 1                             ; ../coreutils-8.31/lib/freopen-safer.c:87
0x00003436      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/freopen-safer.c:94
0x00003439      e915ffffff     jmp 0x3353
0x0000343e      6690           nop
;-- initbuffer:
0x00003440      660fefc0       pxor xmm0, xmm0                         ; ../coreutils-8.31/lib/linebuffer.c:38
0x00003444      48c747100000.  mov qword [rdi + 0x10], 0
0x0000344c      0f1107         movups xmmword [rdi], xmm0
0x0000344f      c3             ret                                     ; ../coreutils-8.31/lib/linebuffer.c:40
;-- readlinebuffer_delim:
0x00003450      4157           push r15                                ; ../coreutils-8.31/lib/linebuffer.c:61
0x00003452      4156           push r14
0x00003454      4155           push r13
0x00003456      4154           push r12
0x00003458      55             push rbp
0x00003459      53             push rbx
0x0000345a      4883ec18       sub rsp, 0x18
0x0000345e      4c8b6f10       mov r13, qword [rdi + 0x10]             ; ../coreutils-8.31/lib/linebuffer.c:63
0x00003462      4c8b07         mov r8, qword [rdi]                     ; ../coreutils-8.31/lib/linebuffer.c:65
0x00003465      4d01e8         add r8, r13
0x00003468      f60610         test byte [rsi], 0x10                   ; ../coreutils-8.31/lib/linebuffer.c:67
0x0000346b      0f85cf000000   jne 0x3540
0x00003471      4989fe         mov r14, rdi
0x00003474      4889f5         mov rbp, rsi
0x00003477      4c89eb         mov rbx, r13
0x0000347a      440fbefa       movsx r15d, dl
0x0000347e      eb0b           jmp 0x348b
0x00003480      4539fc         cmp r12d, r15d                          ; ../coreutils-8.31/lib/linebuffer.c:91
0x00003483      488d5e01       lea rbx, [rsi + 1]                      ; ../coreutils-8.31/lib/linebuffer.c:89
0x00003487      880e           mov byte [rsi], cl
0x00003489      745b           je 0x34e6                               ; ../coreutils-8.31/lib/linebuffer.c:91
0x0000348b      488b4d08       mov rcx, qword [rbp + 8]                ; stdio.h:65   return _IO_getc_unlocked (__fp);
0x0000348f      483b4d10       cmp rcx, qword [rbp + 0x10]
0x00003493      736b           jae 0x3500
0x00003495      488d4101       lea rax, [rcx + 1]
0x00003499      48894508       mov qword [rbp + 8], rax
0x0000349d      440fb621       movzx r12d, byte [rcx]
0x000034a1      4489e1         mov ecx, r12d
0x000034a4      4c39c3         cmp rbx, r8                             ; ../coreutils-8.31/lib/linebuffer.c:81
0x000034a7      4889de         mov rsi, rbx
0x000034aa      75d4           jne 0x3480
0x000034ac      498b1e         mov rbx, qword [r14]                    ; ../coreutils-8.31/lib/linebuffer.c:83
0x000034af      4c89f6         mov rsi, r14                            ; ../coreutils-8.31/lib/linebuffer.c:84
0x000034b2      4c89ef         mov rdi, r13
0x000034b5      8854240f       mov byte [rsp + 0xf], dl
0x000034b9      880c24         mov byte [rsp], cl
0x000034bc      e81f380000     call sym.x2realloc
0x000034c1      4d8b06         mov r8, qword [r14]                     ; ../coreutils-8.31/lib/linebuffer.c:87
0x000034c4      0fb60c24       movzx ecx, byte [rsp]
0x000034c8      488d3418       lea rsi, [rax + rbx]                    ; ../coreutils-8.31/lib/linebuffer.c:85
0x000034cc      49894610       mov qword [r14 + 0x10], rax             ; ../coreutils-8.31/lib/linebuffer.c:86
0x000034d0      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/linebuffer.c:84
0x000034d3      0fb654240f     movzx edx, byte [rsp + 0xf]             ; ../coreutils-8.31/lib/linebuffer.c:87
0x000034d8      488d5e01       lea rbx, [rsi + 1]                      ; ../coreutils-8.31/lib/linebuffer.c:89
0x000034dc      4901c0         add r8, rax                             ; ../coreutils-8.31/lib/linebuffer.c:87
0x000034df      4539fc         cmp r12d, r15d                          ; ../coreutils-8.31/lib/linebuffer.c:91
0x000034e2      880e           mov byte [rsi], cl                      ; ../coreutils-8.31/lib/linebuffer.c:89
0x000034e4      75a5           jne 0x348b                              ; ../coreutils-8.31/lib/linebuffer.c:91
0x000034e6      4c29eb         sub rbx, r13                            ; ../coreutils-8.31/lib/linebuffer.c:93
0x000034e9      4c89f0         mov rax, r14                            ; ../coreutils-8.31/lib/linebuffer.c:94
0x000034ec      49895e08       mov qword [r14 + 8], rbx                ; ../coreutils-8.31/lib/linebuffer.c:93
0x000034f0      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/linebuffer.c:95
0x000034f4      5b             pop rbx
0x000034f5      5d             pop rbp
0x000034f6      415c           pop r12
0x000034f8      415d           pop r13
0x000034fa      415e           pop r14
0x000034fc      415f           pop r15
0x000034fe      c3             ret
0x000034ff      90             nop
0x00003500      4889ef         mov rdi, rbp                            ; stdio.h:65   return _IO_getc_unlocked (__fp);
0x00003503      8854240f       mov byte [rsp + 0xf], dl
0x00003507      4c890424       mov qword [rsp], r8
0x0000350b      e880e4ffff     call sym.imp.__uflow
0x00003510      83f8ff         cmp eax, 0xffffffff                     ; ../coreutils-8.31/lib/linebuffer.c:73
0x00003513      4189c4         mov r12d, eax                           ; stdio.h:65   return _IO_getc_unlocked (__fp);
0x00003516      4c8b0424       mov r8, qword [rsp]                     ; ../coreutils-8.31/lib/linebuffer.c:73
0x0000351a      0fb654240f     movzx edx, byte [rsp + 0xf]
0x0000351f      7530           jne 0x3551
0x00003521      4939dd         cmp r13, rbx                            ; ../coreutils-8.31/lib/linebuffer.c:75
0x00003524      741a           je 0x3540
0x00003526      f6450020       test byte [rbp], 0x20
0x0000352a      7514           jne 0x3540
0x0000352c      3853ff         cmp byte [rbx - 1], dl                  ; ../coreutils-8.31/lib/linebuffer.c:77
0x0000352f      74b5           je 0x34e6
0x00003531      4589fc         mov r12d, r15d                          ; ../coreutils-8.31/lib/linebuffer.c:79
0x00003534      89d1           mov ecx, edx
0x00003536      e969ffffff     jmp 0x34a4
0x0000353b      0f1f440000     nop dword [rax + rax]
0x00003540      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/linebuffer.c:95
0x00003544      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/linebuffer.c:68
0x00003546      5b             pop rbx                                 ; ../coreutils-8.31/lib/linebuffer.c:95
0x00003547      5d             pop rbp
0x00003548      415c           pop r12
0x0000354a      415d           pop r13
0x0000354c      415e           pop r14
0x0000354e      415f           pop r15
0x00003550      c3             ret
0x00003551      89c1           mov ecx, eax
0x00003553      e94cffffff     jmp 0x34a4
0x00003558      0f1f84000000.  nop dword [rax + rax]
;-- readlinebuffer:
0x00003560      ba0a000000     mov edx, 0xa                            ; ../coreutils-8.31/lib/linebuffer.c:44
0x00003565      e9e6feffff     jmp sym.readlinebuffer_delim
0x0000356a      660f1f440000   nop word [rax + rax]
;-- freebuffer:
0x00003570      488b7f10       mov rdi, qword [rdi + 0x10]             ; ../coreutils-8.31/lib/linebuffer.c:101
0x00003574      e957e8ffff     jmp sym..plt.got
0x00003579      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/linebuffer.c:102
;-- set_program_name:
0x00003580      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00003583      53             push rbx
0x00003584      7477           je 0x35fd                               ; ../coreutils-8.31/lib/progname.c:51
0x00003586      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x0000358b      4889fb         mov rbx, rdi
0x0000358e      e89de5ffff     call sym.imp.strrchr
0x00003593      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00003596      7455           je 0x35ed
0x00003598      4c8d4001       lea r8, [rax + 1]
0x0000359c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x0000359f      4829da         sub rdx, rbx
0x000035a2      4883fa06       cmp rdx, 6
0x000035a6      7e45           jle 0x35ed
0x000035a8      488d70fa       lea rsi, [rax - 6]
0x000035ac      488d3ded6100.  lea rdi, str..libs                      ; 0x97a0 ; "/.libs/"
0x000035b3      b907000000     mov ecx, 7
0x000035b8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000035ba      0f97c2         seta dl
0x000035bd      80da00         sbb dl, 0
0x000035c0      84d2           test dl, dl
0x000035c2      7529           jne 0x35ed
0x000035c4      488d3ddd6100.  lea rdi, [0x000097a8]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x000035cb      b903000000     mov ecx, 3
0x000035d0      4c89c6         mov rsi, r8
0x000035d3      4c89c3         mov rbx, r8
0x000035d6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000035d8      0f97c2         seta dl
0x000035db      80da00         sbb dl, 0
0x000035de      84d2           test dl, dl
0x000035e0      750b           jne 0x35ed
0x000035e2      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x000035e6      48891d939a20.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x20d080:8]=0
0x000035ed      48891dec9a20.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x20d0e0:8]=0
0x000035f4      48891dad9a20.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x20d0a8:8]=0
0x000035fb      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x000035fc      c3             ret
0x000035fd      488b0dbc9a20.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20d0c0:8]=0
0x00003604      488d3d5d6100.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x9768 ; "A NULL argv[0] was passed through an exec system call.\n"
0x0000360b      ba37000000     mov edx, 0x37                           ; '7'
0x00003610      be01000000     mov esi, 1
0x00003615      e866e7ffff     call sym.imp.fwrite
0x0000361a      e881e3ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x0000361f      90             nop
;-- gettext_quote.part.1:
0x00003620      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00003621      53             push rbx
0x00003622      4889fd         mov rbp, rdi
0x00003625      89f3           mov ebx, esi
0x00003627      4883ec08       sub rsp, 8
0x0000362b      e860570000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00003630      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00003633      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003636      80fa55         cmp dl, 0x55
0x00003639      7475           je 0x36b0
0x0000363b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x0000363e      7420           je 0x3660
0x00003640      488d05746100.  lea rax, str.l______l                   ; 0x97bb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003647      488d156f6100.  lea rdx, [0x000097bd]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000364e      83fb09         cmp ebx, 9
0x00003651      480f45c2       cmovne rax, rdx
0x00003655      4883c408       add rsp, 8
0x00003659      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x0000365a      5d             pop rbp
0x0000365b      c3             ret
0x0000365c      0f1f4000       nop dword [rax]
0x00003660      0fb65001       movzx edx, byte [rax + 1]
0x00003664      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003667      80fa42         cmp dl, 0x42
0x0000366a      75d4           jne 0x3640
0x0000366c      80780231       cmp byte [rax + 2], 0x31
0x00003670      75ce           jne 0x3640
0x00003672      80780338       cmp byte [rax + 3], 0x38
0x00003676      75c8           jne 0x3640
0x00003678      80780430       cmp byte [rax + 4], 0x30
0x0000367c      75c2           jne 0x3640
0x0000367e      80780533       cmp byte [rax + 5], 0x33
0x00003682      75bc           jne 0x3640
0x00003684      80780630       cmp byte [rax + 6], 0x30
0x00003688      75b6           jne 0x3640
0x0000368a      80780700       cmp byte [rax + 7], 0
0x0000368e      75b0           jne 0x3640
0x00003690      807d0060       cmp byte [rbp], 0x60
0x00003694      488d05196100.  lea rax, [0x000097b4]
0x0000369b      488d15166100.  lea rdx, [0x000097b8]
0x000036a2      480f45c2       cmovne rax, rdx
0x000036a6      4883c408       add rsp, 8
0x000036aa      5b             pop rbx
0x000036ab      5d             pop rbp
0x000036ac      c3             ret
0x000036ad      0f1f00         nop dword [rax]
0x000036b0      0fb65001       movzx edx, byte [rax + 1]
0x000036b4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000036b7      80fa54         cmp dl, 0x54
0x000036ba      7584           jne 0x3640
0x000036bc      0fb65002       movzx edx, byte [rax + 2]
0x000036c0      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000036c3      80fa46         cmp dl, 0x46
0x000036c6      0f8574ffffff   jne 0x3640
0x000036cc      8078032d       cmp byte [rax + 3], 0x2d
0x000036d0      0f856affffff   jne 0x3640
0x000036d6      80780438       cmp byte [rax + 4], 0x38
0x000036da      0f8560ffffff   jne 0x3640
0x000036e0      80780500       cmp byte [rax + 5], 0
0x000036e4      0f8556ffffff   jne 0x3640
0x000036ea      807d0060       cmp byte [rbp], 0x60
0x000036ee      488d05b76000.  lea rax, [0x000097ac]                   ; "\u2018"
0x000036f5      488d15b46000.  lea rdx, [0x000097b0]                   ; "\u2019"
0x000036fc      480f45c2       cmovne rax, rdx
0x00003700      4883c408       add rsp, 8
0x00003704      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00003705      5d             pop rbp
0x00003706      c3             ret
0x00003707      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00003710      4157           push r15
0x00003712      4156           push r14
0x00003714      4589c7         mov r15d, r8d
0x00003717      4155           push r13
0x00003719      4154           push r12
0x0000371b      4989fe         mov r14, rdi
0x0000371e      55             push rbp
0x0000371f      53             push rbx
0x00003720      4489cb         mov ebx, r9d
0x00003723      4989f5         mov r13, rsi
0x00003726      4889cd         mov rbp, rcx
0x00003729      83e302         and ebx, 2
0x0000372c      4881ecb80000.  sub rsp, 0xb8
0x00003733      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x0000373b      4889542410     mov qword [rsp + 0x10], rdx
0x00003740      4489442408     mov dword [rsp + 8], r8d
0x00003745      44894c2478     mov dword [rsp + 0x78], r9d
0x0000374a      4889442420     mov qword [rsp + 0x20], rax
0x0000374f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00003757      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x0000375c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00003764      4889442460     mov qword [rsp + 0x60], rax
0x00003769      64488b042528.  mov rax, qword fs:[0x28]
0x00003772      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000377a      31c0           xor eax, eax
0x0000377c      e82fe3ffff     call sym.imp.__ctype_get_mb_cur_max
0x00003781      4183ff0a       cmp r15d, 0xa
0x00003785      4889442458     mov qword [rsp + 0x58], rax
0x0000378a      0f87af110000   ja 0x493f
0x00003790      488d0d896000.  lea rcx, [0x00009820]
0x00003797      4489fa         mov edx, r15d
0x0000379a      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000379e      4801c8         add rax, rcx
0x000037a1      ffe0           jmp rax
0x000037a3      c644240e01     mov byte [rsp + 0xe], 1
0x000037a8      c644247c00     mov byte [rsp + 0x7c], 0
0x000037ad      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x000037b0      48c744245000.  mov qword [rsp + 0x50], 0
0x000037b9      c644240f01     mov byte [rsp + 0xf], 1
0x000037be      c644240d00     mov byte [rsp + 0xd], 0
0x000037c3      488d05f35f00.  lea rax, [0x000097bd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000037ca      48c744241801.  mov qword [rsp + 0x18], 1
0x000037d3      4531ff         xor r15d, r15d
0x000037d6      c74424080200.  mov dword [rsp + 8], 2
0x000037de      4889442448     mov qword [rsp + 0x48], rax
0x000037e3      4531db         xor r11d, r11d
0x000037e6      4889e8         mov rax, rbp
0x000037e9      4589e0         mov r8d, r12d
0x000037ec      4c89dd         mov rbp, r11
0x000037ef      4989c3         mov r11, rax
0x000037f2      660f1f440000   nop word [rax + rax]
0x000037f8      4939eb         cmp r11, rbp
0x000037fb      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x000037ff      4983fbff       cmp r11, 0xffffffffffffffff
0x00003803      750d           jne 0x3812
0x00003805      488b442410     mov rax, qword [rsp + 0x10]
0x0000380a      803c2800       cmp byte [rax + rbp], 0
0x0000380e      410f95c4       setne r12b
0x00003812      4584e4         test r12b, r12b
0x00003815      0f8455060000   je 0x3e70
0x0000381b      837c240802     cmp dword [rsp + 8], 2
0x00003820      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003825      4c8d0c2f       lea r9, [rdi + rbp]
0x00003829      0f95c0         setne al
0x0000382c      2244240d       and al, byte [rsp + 0xd]
0x00003830      4189c2         mov r10d, eax
0x00003833      0f84a7000000   je 0x38e0
0x00003839      488b442418     mov rax, qword [rsp + 0x18]
0x0000383e      4885c0         test rax, rax
0x00003841      0f8429040000   je 0x3c70
0x00003847      4983fbff       cmp r11, 0xffffffffffffffff
0x0000384b      488d5c0500     lea rbx, [rbp + rax]
0x00003850      752e           jne 0x3880
0x00003852      4883f801       cmp rax, 1
0x00003856      7628           jbe 0x3880
0x00003858      4488442438     mov byte [rsp + 0x38], r8b
0x0000385d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00003862      4c894c2428     mov qword [rsp + 0x28], r9
0x00003867      e854e2ffff     call sym.imp.strlen
0x0000386c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00003872      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00003878      4989c3         mov r11, rax
0x0000387b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00003880      4c39db         cmp rbx, r11
0x00003883      4488542428     mov byte [rsp + 0x28], r10b
0x00003888      0f87b2050000   ja 0x3e40
0x0000388e      488b542418     mov rdx, qword [rsp + 0x18]
0x00003893      488b742448     mov rsi, qword [rsp + 0x48]
0x00003898      4c89cf         mov rdi, r9
0x0000389b      4c895c2440     mov qword [rsp + 0x40], r11
0x000038a0      4488442438     mov byte [rsp + 0x38], r8b
0x000038a5      4c894c2430     mov qword [rsp + 0x30], r9
0x000038aa      e821e3ffff     call sym.imp.memcmp
0x000038af      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x000038b1      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000038b6      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x000038bc      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x000038c1      0f8579050000   jne 0x3e40
0x000038c7      807c240f00     cmp byte [rsp + 0xf], 0
0x000038cc      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x000038d2      0f857d0f0000   jne 0x4855
0x000038d8      0f1f84000000.  nop dword [rax + rax]
0x000038e0      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x000038e4      80fb7e         cmp bl, 0x7e
0x000038e7      0f871b030000   ja 0x3c08
0x000038ed      488d0d585f00.  lea rcx, [0x0000984c]
0x000038f4      0fb6d3         movzx edx, bl
0x000038f7      48630491       movsxd rax, dword [rcx + rdx*4]
0x000038fb      4801c8         add rax, rcx
0x000038fe      ffe0           jmp rax
0x00003900      4531d2         xor r10d, r10d
0x00003903      4983fb01       cmp r11, 1
0x00003907      0f95c0         setne al
0x0000390a      4983fbff       cmp r11, 0xffffffffffffffff
0x0000390e      750c           jne 0x391c
0x00003910      488b442410     mov rax, qword [rsp + 0x10]
0x00003915      80780100       cmp byte [rax + 1], 0
0x00003919      0f95c0         setne al
0x0000391c      837c240802     cmp dword [rsp + 8], 2
0x00003921      0f94c2         sete dl
0x00003924      84c0           test al, al
0x00003926      0f844c020000   je 0x3b78
0x0000392c      4531e4         xor r12d, r12d
0x0000392f      31c0           xor eax, eax
0x00003931      0f1f80000000.  nop dword [rax]
0x00003938      807c240d01     cmp byte [rsp + 0xd], 1
0x0000393d      0f850f010000   jne 0x3a52
0x00003943      84d2           test dl, dl
0x00003945      0f8507010000   jne 0x3a52
0x0000394b      488b742420     mov rsi, qword [rsp + 0x20]
0x00003950      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00003953      7414           je 0x3969
0x00003955      89da           mov edx, ebx
0x00003957      c0ea05         shr dl, 5
0x0000395a      0fb6d2         movzx edx, dl
0x0000395d      8b1496         mov edx, dword [rsi + rdx*4]
0x00003960      0fa3da         bt edx, ebx
0x00003963      0f824a010000   jb 0x3ab3
0x00003969      4584d2         test r10b, r10b
0x0000396c      0f8541010000   jne 0x3ab3
0x00003972      83f001         xor eax, 1
0x00003975      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00003979      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x0000397c      84c0           test al, al
0x0000397e      7420           je 0x39a0                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00003980      4d39fd         cmp r13, r15
0x00003983      7605           jbe 0x398a
0x00003985      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000398a      498d4701       lea rax, [r15 + 1]
0x0000398e      4939c5         cmp r13, rax
0x00003991      7606           jbe 0x3999
0x00003993      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003999      4983c702       add r15, 2
0x0000399d      4531c0         xor r8d, r8d
0x000039a0      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x000039a3      7304           jae 0x39a9                              ; ../coreutils-8.31/lib/quotearg.c:68
0x000039a5      43881c3e       mov byte [r14 + r15], bl
0x000039a9      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x000039ae      4983c701       add r15, 1
0x000039b2      b800000000     mov eax, 0
0x000039b7      4584e4         test r12b, r12b
0x000039ba      0f44f8         cmove edi, eax
0x000039bd      40887c240e     mov byte [rsp + 0xe], dil
0x000039c2      e931feffff     jmp 0x37f8
0x000039c7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x000039d0      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x000039d3      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x000039d7      83f802         cmp eax, 2
0x000039da      0f84b8050000   je 0x3f98
0x000039e0      83f805         cmp eax, 5
0x000039e3      0f846f050000   je 0x3f58
0x000039e9      83f802         cmp eax, 2
0x000039ec      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000039f1      0f94c2         sete dl
0x000039f4      4531e4         xor r12d, r12d
0x000039f7      31c0           xor eax, eax
0x000039f9      e93affffff     jmp 0x3938
0x000039fe      6690           nop
0x00003a00      4531d2         xor r10d, r10d
0x00003a03      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00003a08      0f8402050000   je 0x3f10
0x00003a0e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00003a13      31d2           xor edx, edx
0x00003a15      31c0           xor eax, eax
0x00003a17      bb27000000     mov ebx, 0x27                           ; '''
0x00003a1c      e917ffffff     jmp 0x3938
0x00003a21      0f1f80000000.  nop dword [rax]
0x00003a28      ba09000000     mov edx, 9
0x00003a2d      bb74000000     mov ebx, 0x74                           ; 't'
0x00003a32      837c240802     cmp dword [rsp + 8], 2
0x00003a37      0f94c0         sete al
0x00003a3a      2244240f       and al, byte [rsp + 0xf]
0x00003a3e      0f854a010000   jne 0x3b8e
0x00003a44      807c240d00     cmp byte [rsp + 0xd], 0
0x00003a49      7565           jne 0x3ab0
0x00003a4b      89d3           mov ebx, edx
0x00003a4d      4531e4         xor r12d, r12d
0x00003a50      31c0           xor eax, eax
0x00003a52      807c240f00     cmp byte [rsp + 0xf], 0
0x00003a57      0f85eefeffff   jne 0x394b
0x00003a5d      e907ffffff     jmp 0x3969                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00003a62      660f1f440000   nop word [rax + rax]
0x00003a68      ba08000000     mov edx, 8
0x00003a6d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003a72      ebd0           jmp 0x3a44
0x00003a74      0f1f4000       nop dword [rax]
0x00003a78      837c240802     cmp dword [rsp + 8], 2
0x00003a7d      0f84cd030000   je 0x3e50
0x00003a83      807c240d00     cmp byte [rsp + 0xd], 0
0x00003a88      0f8412020000   je 0x3ca0
0x00003a8e      807c240f00     cmp byte [rsp + 0xf], 0
0x00003a93      0f8407020000   je 0x3ca0
0x00003a99      48837c241800   cmp qword [rsp + 0x18], 0
0x00003a9f      0f85b6030000   jne 0x3e5b
0x00003aa5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00003aaa      660f1f440000   nop word [rax + rax]
0x00003ab0      4531e4         xor r12d, r12d
0x00003ab3      837c240802     cmp dword [rsp + 8], 2
0x00003ab8      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x00003abb      807c240f00     cmp byte [rsp + 0xf], 0
0x00003ac0      89d0           mov eax, edx
0x00003ac2      0f8550080000   jne 0x4318
0x00003ac8      4489c0         mov eax, r8d
0x00003acb      83f001         xor eax, 1
0x00003ace      20d0           and al, dl
0x00003ad0      742f           je 0x3b01
0x00003ad2      4d39fd         cmp r13, r15
0x00003ad5      7605           jbe 0x3adc
0x00003ad7      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003adc      498d5701       lea rdx, [r15 + 1]
0x00003ae0      4939d5         cmp r13, rdx
0x00003ae3      7606           jbe 0x3aeb
0x00003ae5      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00003aeb      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x00003aef      4939d5         cmp r13, rdx
0x00003af2      7606           jbe 0x3afa
0x00003af4      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003afa      4983c703       add r15, 3
0x00003afe      4189c0         mov r8d, eax
0x00003b01      4d39fd         cmp r13, r15
0x00003b04      7605           jbe 0x3b0b
0x00003b06      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003b0b      4983c701       add r15, 1
0x00003b0f      4883c501       add rbp, 1
0x00003b13      e988feffff     jmp 0x39a0
0x00003b18      0f1f84000000.  nop dword [rax + rax]
0x00003b20      807c240d00     cmp byte [rsp + 0xd], 0
0x00003b25      0f85c8010000   jne 0x3cf3
0x00003b2b      31d2           xor edx, edx
0x00003b2d      f644247801     test byte [rsp + 0x78], 1
0x00003b32      0f8413ffffff   je 0x3a4b
0x00003b38      4883c501       add rbp, 1
0x00003b3c      e9b7fcffff     jmp 0x37f8
0x00003b41      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00003b48      837c240802     cmp dword [rsp + 8], 2
0x00003b4d      0f94c2         sete dl
0x00003b50      31c0           xor eax, eax
0x00003b52      e9e1fdffff     jmp 0x3938
0x00003b57      660f1f840000.  nop word [rax + rax]
0x00003b60      ba07000000     mov edx, 7
0x00003b65      bb61000000     mov ebx, 0x61                           ; 'a'
0x00003b6a      e9d5feffff     jmp 0x3a44
0x00003b6f      90             nop
0x00003b70      837c240802     cmp dword [rsp + 8], 2
0x00003b75      0f94c2         sete dl
0x00003b78      4885ed         test rbp, rbp
0x00003b7b      0f85abfdffff   jne 0x392c
0x00003b81      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003b86      20d0           and al, dl
0x00003b88      0f84aafdffff   je 0x3938
0x00003b8e      4c89dd         mov rbp, r11
0x00003b91      c74424080200.  mov dword [rsp + 8], 2
0x00003b99      e9fb060000     jmp 0x4299
0x00003b9e      6690           nop
0x00003ba0      837c240802     cmp dword [rsp + 8], 2
0x00003ba5      0f94c2         sete dl
0x00003ba8      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x00003bab      ebd4           jmp 0x3b81
0x00003bad      0f1f00         nop dword [rax]
0x00003bb0      837c240802     cmp dword [rsp + 8], 2
0x00003bb5      bb20000000     mov ebx, 0x20                           ; "@"
0x00003bba      0f94c2         sete dl
0x00003bbd      ebc2           jmp 0x3b81
0x00003bbf      90             nop
0x00003bc0      ba0d000000     mov edx, 0xd
0x00003bc5      bb72000000     mov ebx, 0x72                           ; 'r'
0x00003bca      e963feffff     jmp 0x3a32
0x00003bcf      90             nop
0x00003bd0      ba0c000000     mov edx, 0xc
0x00003bd5      bb66000000     mov ebx, 0x66                           ; 'f'
0x00003bda      e965feffff     jmp 0x3a44
0x00003bdf      90             nop
0x00003be0      ba0b000000     mov edx, 0xb
0x00003be5      bb76000000     mov ebx, 0x76                           ; 'v'
0x00003bea      e955feffff     jmp 0x3a44
0x00003bef      90             nop
0x00003bf0      ba0a000000     mov edx, 0xa
0x00003bf5      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x00003bfa      e933feffff     jmp 0x3a32
0x00003bff      90             nop
0x00003c00      4531d2         xor r10d, r10d
0x00003c03      0f1f440000     nop dword [rax + rax]
0x00003c08      48837c245801   cmp qword [rsp + 0x58], 1
0x00003c0e      0f85a4030000   jne 0x3fb8
0x00003c14      4c895c2438     mov qword [rsp + 0x38], r11
0x00003c19      4488442430     mov byte [rsp + 0x30], r8b
0x00003c1e      4488542428     mov byte [rsp + 0x28], r10b
0x00003c23      e898e1ffff     call sym.imp.__ctype_b_loc
0x00003c28      488b08         mov rcx, qword [rax]
0x00003c2b      0fb6d3         movzx edx, bl
0x00003c2e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003c34      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x00003c3a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x00003c3f      bf01000000     mov edi, 1
0x00003c44      0fb70451       movzx eax, word [rcx + rdx*2]
0x00003c48      66250040       and ax, 0x4000
0x00003c4c      410f95c4       setne r12b
0x00003c50      0f94c0         sete al
0x00003c53      2244240d       and al, byte [rsp + 0xd]
0x00003c57      84c0           test al, al
0x00003c59      0f8592090000   jne 0x45f1
0x00003c5f      837c240802     cmp dword [rsp + 8], 2
0x00003c64      0f94c2         sete dl
0x00003c67      e9ccfcffff     jmp 0x3938
0x00003c6c      0f1f4000       nop dword [rax]
0x00003c70      410fb619       movzx ebx, byte [r9]
0x00003c74      80fb7e         cmp bl, 0x7e
0x00003c77      7787           ja 0x3c00
0x00003c79      488d0dc85d00.  lea rcx, [0x00009a48]
0x00003c80      0fb6d3         movzx edx, bl
0x00003c83      48630491       movsxd rax, dword [rcx + rdx*4]
0x00003c87      4801c8         add rax, rcx
0x00003c8a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x00003c8c      0f1f4000       nop dword [rax]
0x00003c90      4531d2         xor r10d, r10d
0x00003c93      807c240d00     cmp byte [rsp + 0xd], 0
0x00003c98      0f85f0fdffff   jne 0x3a8e
0x00003c9e      6690           nop
0x00003ca0      ba5c000000     mov edx, 0x5c                           ; '\'
0x00003ca5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00003caa      e995fdffff     jmp 0x3a44
0x00003caf      90             nop
0x00003cb0      ba0c000000     mov edx, 0xc
0x00003cb5      4531d2         xor r10d, r10d
0x00003cb8      bb66000000     mov ebx, 0x66                           ; 'f'
0x00003cbd      e982fdffff     jmp 0x3a44
0x00003cc2      660f1f440000   nop word [rax + rax]
0x00003cc8      ba0a000000     mov edx, 0xa
0x00003ccd      4531d2         xor r10d, r10d
0x00003cd0      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00003cd5      e958fdffff     jmp 0x3a32
0x00003cda      660f1f440000   nop word [rax + rax]
0x00003ce0      bb61000000     mov ebx, 0x61                           ; 'a'
0x00003ce5      e9c6fdffff     jmp 0x3ab0
0x00003cea      660f1f440000   nop word [rax + rax]
0x00003cf0      4531d2         xor r10d, r10d
0x00003cf3      837c240802     cmp dword [rsp + 8], 2
0x00003cf8      0f94c2         sete dl
0x00003cfb      807c240f00     cmp byte [rsp + 0xf], 0
0x00003d00      0f85940b0000   jne 0x489a
0x00003d06      4489c0         mov eax, r8d
0x00003d09      4c89f9         mov rcx, r15
0x00003d0c      83f001         xor eax, 1
0x00003d0f      20d0           and al, dl
0x00003d11      742d           je 0x3d40
0x00003d13      4d39fd         cmp r13, r15
0x00003d16      7605           jbe 0x3d1d
0x00003d18      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003d1d      498d4f01       lea rcx, [r15 + 1]
0x00003d21      4939cd         cmp r13, rcx
0x00003d24      7606           jbe 0x3d2c
0x00003d26      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00003d2c      498d4f02       lea rcx, [r15 + 2]
0x00003d30      4939cd         cmp r13, rcx
0x00003d33      0f8730060000   ja 0x4369
0x00003d39      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x00003d3d      4189c0         mov r8d, eax
0x00003d40      4939cd         cmp r13, rcx
0x00003d43      7605           jbe 0x3d4a
0x00003d45      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003d4a      837c240802     cmp dword [rsp + 8], 2
0x00003d4f      4c8d7901       lea r15, [rcx + 1]
0x00003d53      0f8400060000   je 0x4359
0x00003d59      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00003d5d      4c39d8         cmp rax, r11
0x00003d60      7319           jae 0x3d7b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00003d62      488b442410     mov rax, qword [rsp + 0x10]
0x00003d67      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x00003d6c      88442428       mov byte [rsp + 0x28], al
0x00003d70      83e830         sub eax, 0x30
0x00003d73      3c09           cmp al, 9
0x00003d75      0f862e080000   jbe 0x45a9
0x00003d7b      4489e0         mov eax, r12d
0x00003d7e      bb30000000     mov ebx, 0x30                           ; '0'
0x00003d83      4531e4         xor r12d, r12d
0x00003d86      e9adfbffff     jmp 0x3938                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x00003d8b      0f1f440000     nop dword [rax + rax]
0x00003d90      837c240802     cmp dword [rsp + 8], 2
0x00003d95      4589d4         mov r12d, r10d
0x00003d98      0f94c2         sete dl
0x00003d9b      4531d2         xor r10d, r10d
0x00003d9e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003da0      e993fbffff     jmp 0x3938                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00003da5      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003da8      837c240802     cmp dword [rsp + 8], 2
0x00003dad      0f94c2         sete dl
0x00003db0      4531d2         xor r10d, r10d
0x00003db3      e9c0fdffff     jmp 0x3b78
0x00003db8      0f1f84000000.  nop dword [rax + rax]
0x00003dc0      837c240802     cmp dword [rsp + 8], 2
0x00003dc5      0f94c2         sete dl
0x00003dc8      4531d2         xor r10d, r10d
0x00003dcb      4531e4         xor r12d, r12d
0x00003dce      e9aefdffff     jmp 0x3b81
0x00003dd3      0f1f440000     nop dword [rax + rax]
0x00003dd8      837c240802     cmp dword [rsp + 8], 2
0x00003ddd      4589d4         mov r12d, r10d
0x00003de0      bb20000000     mov ebx, 0x20                           ; "@"
0x00003de5      0f94c2         sete dl
0x00003de8      4531d2         xor r10d, r10d
0x00003deb      e991fdffff     jmp 0x3b81
0x00003df0      ba0d000000     mov edx, 0xd
0x00003df5      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00003df8      bb72000000     mov ebx, 0x72                           ; 'r'
0x00003dfd      e930fcffff     jmp 0x3a32
0x00003e02      660f1f440000   nop word [rax + rax]
0x00003e08      bb76000000     mov ebx, 0x76                           ; 'v'
0x00003e0d      e99efcffff     jmp 0x3ab0
0x00003e12      660f1f440000   nop word [rax + rax]
0x00003e18      ba09000000     mov edx, 9
0x00003e1d      4531d2         xor r10d, r10d
0x00003e20      bb74000000     mov ebx, 0x74                           ; 't'
0x00003e25      e908fcffff     jmp 0x3a32
0x00003e2a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00003e30      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003e35      e976fcffff     jmp 0x3ab0
0x00003e3a      660f1f440000   nop word [rax + rax]
0x00003e40      4531d2         xor r10d, r10d
0x00003e43      e998faffff     jmp 0x38e0
0x00003e48      0f1f84000000.  nop dword [rax + rax]
0x00003e50      807c240f00     cmp byte [rsp + 0xf], 0
0x00003e55      0f8565090000   jne 0x47c0
0x00003e5b      4883c501       add rbp, 1
0x00003e5f      4489c0         mov eax, r8d
0x00003e62      4531e4         xor r12d, r12d
0x00003e65      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00003e6a      e90dfbffff     jmp 0x397c
0x00003e6f      90             nop
0x00003e70      837c240802     cmp dword [rsp + 8], 2
0x00003e75      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003e7a      4589c4         mov r12d, r8d
0x00003e7d      4c89dd         mov rbp, r11
0x00003e80      0f94c2         sete dl
0x00003e83      89d8           mov eax, ebx
0x00003e85      4d85ff         test r15, r15
0x00003e88      0f94c1         sete cl
0x00003e8b      21d0           and eax, edx
0x00003e8d      20c8           and al, cl
0x00003e8f      0f85610a0000   jne 0x48f6                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00003e95      89d8           mov eax, ebx
0x00003e97      83f001         xor eax, 1
0x00003e9a      20c2           and dl, al
0x00003e9c      0f846a090000   je 0x480c
0x00003ea2      807c247c00     cmp byte [rsp + 0x7c], 0
0x00003ea7      0f845d090000   je 0x480a
0x00003ead      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00003eb2      0f85f5090000   jne 0x48ad
0x00003eb8      4d85ed         test r13, r13
0x00003ebb      0f94c0         sete al
0x00003ebe      48837c245000   cmp qword [rsp + 0x50], 0
0x00003ec4      0f95c2         setne dl
0x00003ec7      20d0           and al, dl
0x00003ec9      0f841d0a0000   je 0x48ec
0x00003ecf      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003ed4      488d1de25800.  lea rbx, [0x000097bd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003edb      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x00003edf      c74424080200.  mov dword [rsp + 8], 2
0x00003ee7      41bf01000000   mov r15d, 1
0x00003eed      48c744241801.  mov qword [rsp + 0x18], 1
0x00003ef6      c644240f00     mov byte [rsp + 0xf], 0
0x00003efb      48895c2448     mov qword [rsp + 0x48], rbx
0x00003f00      8844247c       mov byte [rsp + 0x7c], al
0x00003f04      e9daf8ffff     jmp 0x37e3
0x00003f09      0f1f80000000.  nop dword [rax]
0x00003f10      807c240f00     cmp byte [rsp + 0xf], 0
0x00003f15      0f85a5080000   jne 0x47c0
0x00003f1b      4d85ed         test r13, r13
0x00003f1e      0f84fc030000   je 0x4320                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00003f24      31d2           xor edx, edx
0x00003f26      48837c245000   cmp qword [rsp + 0x50], 0
0x00003f2c      0f85ee030000   jne 0x4320                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00003f32      4c896c2450     mov qword [rsp + 0x50], r13
0x00003f37      4983c703       add r15, 3
0x00003f3b      31c0           xor eax, eax
0x00003f3d      448864247c     mov byte [rsp + 0x7c], r12b
0x00003f42      4531c0         xor r8d, r8d
0x00003f45      4989d5         mov r13, rdx
0x00003f48      bb27000000     mov ebx, 0x27                           ; '''
0x00003f4d      e917faffff     jmp 0x3969
0x00003f52      660f1f440000   nop word [rax + rax]
0x00003f58      f644247804     test byte [rsp + 0x78], 4
0x00003f5d      7421           je 0x3f80
0x00003f5f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00003f63      4c39d9         cmp rcx, r11
0x00003f66      7318           jae 0x3f80
0x00003f68      488b442410     mov rax, qword [rsp + 0x10]
0x00003f6d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00003f72      0f848a070000   je 0x4702
0x00003f78      0f1f84000000.  nop dword [rax + rax]
0x00003f80      31d2           xor edx, edx
0x00003f82      4531e4         xor r12d, r12d
0x00003f85      31c0           xor eax, eax
0x00003f87      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003f8c      e9a7f9ffff     jmp 0x3938
0x00003f91      0f1f80000000.  nop dword [rax]
0x00003f98      807c240f00     cmp byte [rsp + 0xf], 0
0x00003f9d      0f851d080000   jne 0x47c0
0x00003fa3      4531e4         xor r12d, r12d
0x00003fa6      31c0           xor eax, eax
0x00003fa8      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003fad      e9b7f9ffff     jmp 0x3969                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00003fb2      660f1f440000   nop word [rax + rax]
0x00003fb8      488d8424a000.  lea rax, [rsp + 0xa0]
0x00003fc0      4983fbff       cmp r11, 0xffffffffffffffff
0x00003fc4      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00003fd0      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00003fd5      752d           jne 0x4004
0x00003fd7      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003fdc      4488442440     mov byte [rsp + 0x40], r8b
0x00003fe1      4488542438     mov byte [rsp + 0x38], r10b
0x00003fe6      4c894c2430     mov qword [rsp + 0x30], r9
0x00003feb      e8d0daffff     call sym.imp.strlen
0x00003ff0      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00003ff6      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x00003ffc      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x00003fff      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00004004      488d84249c00.  lea rax, [rsp + 0x9c]
0x0000400c      31c9           xor ecx, ecx
0x0000400e      885c247e       mov byte [rsp + 0x7e], bl
0x00004012      448844247d     mov byte [rsp + 0x7d], r8b
0x00004017      4889cb         mov rbx, rcx
0x0000401a      4c898c248800.  mov qword [rsp + 0x88], r9
0x00004022      4889442438     mov qword [rsp + 0x38], rax
0x00004027      448854247f     mov byte [rsp + 0x7f], r10b
0x0000402c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00004034      4c89742440     mov qword [rsp + 0x40], r14
0x00004039      4c896c2470     mov qword [rsp + 0x70], r13
0x0000403e      4c895c2430     mov qword [rsp + 0x30], r11
0x00004043      488b442410     mov rax, qword [rsp + 0x10]
0x00004048      4c8d741d00     lea r14, [rbp + rbx]
0x0000404d      488b542430     mov rdx, qword [rsp + 0x30]
0x00004052      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00004057      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000405c      4e8d2c30       lea r13, [rax + r14]
0x00004060      4c29f2         sub rdx, r14
0x00004063      4c89ee         mov rsi, r13
0x00004066      e835380000     call sym.rpl_mbrtowc
0x0000406b      4885c0         test rax, rax
0x0000406e      4989c7         mov r15, rax
0x00004071      744e           je 0x40c1
0x00004073      4883f8ff       cmp rax, 0xffffffffffffffff
0x00004077      0f8418060000   je 0x4695
0x0000407d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00004081      0f849a050000   je 0x4621
0x00004087      837c240802     cmp dword [rsp + 8], 2
0x0000408c      0f94c0         sete al
0x0000408f      2244240f       and al, byte [rsp + 0xf]
0x00004093      0f8597010000   jne 0x4230
0x00004099      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x000040a0      e80bddffff     call sym.imp.iswprint
0x000040a5      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000040aa      85c0           test eax, eax
0x000040ac      b800000000     mov eax, 0
0x000040b1      440f44e0       cmove r12d, eax
0x000040b5      4c01fb         add rbx, r15
0x000040b8      e8e3dcffff     call sym.imp.mbsinit
0x000040bd      85c0           test eax, eax
0x000040bf      7482           je 0x4043
0x000040c1      4489e2         mov edx, r12d
0x000040c4      4889df         mov rdi, rbx
0x000040c7      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000040cd      83f201         xor edx, 1
0x000040d0      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000040d5      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000040db      2254240d       and dl, byte [rsp + 0xd]
0x000040df      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000040e7      4c8b742440     mov r14, qword [rsp + 0x40]
0x000040ec      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000040f1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000040f6      4883ff01       cmp rdi, 1
0x000040fa      0f86fb050000   jbe 0x46fb
0x00004100      4889f9         mov rcx, rdi
0x00004103      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00004105      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x0000410b      4801e9         add rcx, rbp
0x0000410e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00004113      e9b6000000     jmp 0x41ce
0x00004118      0f1f84000000.  nop dword [rax + rax]
0x00004120      837c240802     cmp dword [rsp + 8], 2
0x00004125      0f94c0         sete al
0x00004128      4584c9         test r9b, r9b
0x0000412b      0f85af040000   jne 0x45e0
0x00004131      4489c6         mov esi, r8d
0x00004134      83f601         xor esi, 1
0x00004137      4020f0         and al, sil
0x0000413a      742f           je 0x416b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x0000413c      4d39fd         cmp r13, r15
0x0000413f      7605           jbe 0x4146
0x00004141      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00004146      498d7701       lea rsi, [r15 + 1]
0x0000414a      4939f5         cmp r13, rsi
0x0000414d      7606           jbe 0x4155                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x0000414f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00004155      498d7702       lea rsi, [r15 + 2]
0x00004159      4939f5         cmp r13, rsi
0x0000415c      7606           jbe 0x4164
0x0000415e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004164      4983c703       add r15, 3
0x00004168      4189c0         mov r8d, eax
0x0000416b      4d39fd         cmp r13, r15
0x0000416e      7605           jbe 0x4175
0x00004170      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00004175      498d4701       lea rax, [r15 + 1]
0x00004179      4939c5         cmp r13, rax
0x0000417c      760d           jbe 0x418b
0x0000417e      89d8           mov eax, ebx
0x00004180      c0e806         shr al, 6
0x00004183      83c030         add eax, 0x30
0x00004186      4388443e01     mov byte [r14 + r15 + 1], al
0x0000418b      498d4702       lea rax, [r15 + 2]
0x0000418f      4939c5         cmp r13, rax
0x00004192      7610           jbe 0x41a4
0x00004194      89d8           mov eax, ebx
0x00004196      c0e803         shr al, 3
0x00004199      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x0000419c      83c030         add eax, 0x30
0x0000419f      4388443e02     mov byte [r14 + r15 + 2], al
0x000041a4      83e307         and ebx, 7
0x000041a7      4883c501       add rbp, 1
0x000041ab      4983c703       add r15, 3
0x000041af      83c330         add ebx, 0x30
0x000041b2      4839cd         cmp rbp, rcx
0x000041b5      0f83e5f7ffff   jae 0x39a0
0x000041bb      89d6           mov esi, edx
0x000041bd      4d39fd         cmp r13, r15
0x000041c0      7604           jbe 0x41c6
0x000041c2      43881c3e       mov byte [r14 + r15], bl
0x000041c6      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x000041ca      4983c701       add r15, 1
0x000041ce      84d2           test dl, dl
0x000041d0      0f854affffff   jne 0x4120
0x000041d6      89f0           mov eax, esi
0x000041d8      83f001         xor eax, 1
0x000041db      4421c0         and eax, r8d
0x000041de      4584d2         test r10b, r10b
0x000041e1      740e           je 0x41f1
0x000041e3      4d39fd         cmp r13, r15
0x000041e6      7605           jbe 0x41ed
0x000041e8      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000041ed      4983c701       add r15, 1
0x000041f1      4883c501       add rbp, 1
0x000041f5      4839cd         cmp rbp, rcx
0x000041f8      0f837ef7ffff   jae 0x397c
0x000041fe      84c0           test al, al
0x00004200      0f84f8030000   je 0x45fe
0x00004206      4d39fd         cmp r13, r15
0x00004209      7605           jbe 0x4210
0x0000420b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00004210      498d4701       lea rax, [r15 + 1]
0x00004214      4939c5         cmp r13, rax
0x00004217      7606           jbe 0x421f
0x00004219      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000421f      4983c702       add r15, 2
0x00004223      4531d2         xor r10d, r10d
0x00004226      4531c0         xor r8d, r8d
0x00004229      eb92           jmp 0x41bd
0x0000422b      0f1f440000     nop dword [rax + rax]
0x00004230      4983ff01       cmp r15, 1
0x00004234      0f845ffeffff   je 0x4099
0x0000423a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000423f      4a8d0c3f       lea rcx, [rdi + r15]
0x00004243      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00004248      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000424c      eb0f           jmp 0x425d
0x0000424e      6690           nop
0x00004250      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00004254      4939d0         cmp r8, rdx
0x00004257      0f843cfeffff   je 0x4099
0x0000425d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00004260      83e95b         sub ecx, 0x5b
0x00004263      80f921         cmp cl, 0x21
0x00004266      77e8           ja 0x4250                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00004268      be01000000     mov esi, 1
0x0000426d      48d3e6         shl rsi, cl
0x00004270      4889f1         mov rcx, rsi
0x00004273      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x0000427d      4885f1         test rcx, rsi
0x00004280      74ce           je 0x4250
0x00004282      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004287      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000428c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00004291      c74424080200.  mov dword [rsp + 8], 2
0x00004299      807c240d00     cmp byte [rsp + 0xd], 0
0x0000429e      7410           je 0x42b0
0x000042a0      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x000042a2      b804000000     mov eax, 4
0x000042a7      0f44442408     cmove eax, dword [rsp + 8]
0x000042ac      89442408       mov dword [rsp + 8], eax
0x000042b0      4883ec08       sub rsp, 8
0x000042b4      4889e9         mov rcx, rbp
0x000042b7      4c89ee         mov rsi, r13
0x000042ba      ff742468       push qword [rsp + 0x68]
0x000042be      ff742478       push qword [rsp + 0x78]
0x000042c2      4c89f7         mov rdi, r14
0x000042c5      6a00           push 0
0x000042c7      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x000042cf      448b442428     mov r8d, dword [rsp + 0x28]
0x000042d4      488b542430     mov rdx, qword [rsp + 0x30]
0x000042d9      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x000042dd      e82ef4ffff     call sym.quotearg_buffer_restyled
0x000042e2      4883c420       add rsp, 0x20
0x000042e6      4989c7         mov r15, rax
0x000042e9      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x000042f1      6448331c2528.  xor rbx, qword fs:[0x28]
0x000042fa      4c89f8         mov rax, r15
0x000042fd      0f8500060000   jne 0x4903
0x00004303      4881c4b80000.  add rsp, 0xb8
0x0000430a      5b             pop rbx
0x0000430b      5d             pop rbp
0x0000430c      415c           pop r12
0x0000430e      415d           pop r13
0x00004310      415e           pop r14
0x00004312      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00004314      c3             ret
0x00004315      0f1f00         nop dword [rax]
0x00004318      4c89dd         mov rbp, r11
0x0000431b      e979ffffff     jmp 0x4299
0x00004320      4d39fd         cmp r13, r15
0x00004323      7605           jbe 0x432a
0x00004325      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000432a      498d4701       lea rax, [r15 + 1]
0x0000432e      4939c5         cmp r13, rax
0x00004331      7606           jbe 0x4339
0x00004333      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00004339      498d4702       lea rax, [r15 + 2]
0x0000433d      4939c5         cmp r13, rax
0x00004340      0f86ec050000   jbe 0x4932
0x00004346      4c89ea         mov rdx, r13
0x00004349      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000434f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00004354      e9d9fbffff     jmp 0x3f32
0x00004359      4489e0         mov eax, r12d
0x0000435c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00004361      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00004364      e900f6ffff     jmp 0x3969                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00004369      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000436f      e9c5f9ffff     jmp 0x3d39
0x00004374      85db           test ebx, ebx
0x00004376      0f8527f4ffff   jne 0x37a3
0x0000437c      c644240d01     mov byte [rsp + 0xd], 1
0x00004381      4d85ed         test r13, r13
0x00004384      0f8590050000   jne 0x491a
0x0000438a      488d052c5400.  lea rax, [0x000097bd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004391      48c744245000.  mov qword [rsp + 0x50], 0
0x0000439a      c644240e01     mov byte [rsp + 0xe], 1
0x0000439f      c644247c00     mov byte [rsp + 0x7c], 0
0x000043a4      4531e4         xor r12d, r12d
0x000043a7      c644240f00     mov byte [rsp + 0xf], 0
0x000043ac      48c744241801.  mov qword [rsp + 0x18], 1
0x000043b5      4889442448     mov qword [rsp + 0x48], rax
0x000043ba      41bf01000000   mov r15d, 1
0x000043c0      c74424080200.  mov dword [rsp + 8], 2
0x000043c8      e916f4ffff     jmp 0x37e3                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x000043cd      0f1f00         nop dword [rax]
0x000043d0      85db           test ebx, ebx
0x000043d2      0f85f5030000   jne 0x47cd
0x000043d8      4d85ed         test r13, r13
0x000043db      0f8425020000   je 0x4606
0x000043e1      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x000043e5      c644240e01     mov byte [rsp + 0xe], 1
0x000043ea      4531e4         xor r12d, r12d
0x000043ed      c644247c00     mov byte [rsp + 0x7c], 0
0x000043f2      48c744245000.  mov qword [rsp + 0x50], 0
0x000043fb      488d05b95300.  lea rax, str.l______l                   ; 0x97bb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004402      c644240f00     mov byte [rsp + 0xf], 0
0x00004407      c644240d01     mov byte [rsp + 0xd], 1
0x0000440c      48c744241801.  mov qword [rsp + 0x18], 1
0x00004415      41bf01000000   mov r15d, 1
0x0000441b      4889442448     mov qword [rsp + 0x48], rax
0x00004420      e9bef3ffff     jmp 0x37e3
0x00004425      488d058f5300.  lea rax, str.l______l                   ; 0x97bb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000442c      c644240e01     mov byte [rsp + 0xe], 1
0x00004431      c644247c00     mov byte [rsp + 0x7c], 0
0x00004436      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00004439      48c744245000.  mov qword [rsp + 0x50], 0
0x00004442      c644240f01     mov byte [rsp + 0xf], 1
0x00004447      c644240d01     mov byte [rsp + 0xd], 1
0x0000444c      48c744241801.  mov qword [rsp + 0x18], 1
0x00004455      4531ff         xor r15d, r15d
0x00004458      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x0000445d      c74424080500.  mov dword [rsp + 8], 5
0x00004465      e979f3ffff     jmp 0x37e3
0x0000446a      c644240e01     mov byte [rsp + 0xe], 1
0x0000446f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004474      4531e4         xor r12d, r12d
0x00004477      48c744245000.  mov qword [rsp + 0x50], 0
0x00004480      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00004485      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00004488      c644240d01     mov byte [rsp + 0xd], 1
0x0000448d      48c744241800.  mov qword [rsp + 0x18], 0
0x00004496      48c744244800.  mov qword [rsp + 0x48], 0
0x0000449f      e93ff3ffff     jmp 0x37e3
0x000044a4      837c24080a     cmp dword [rsp + 8], 0xa
0x000044a9      7456           je 0x4501
0x000044ab      488d350d5300.  lea rsi, [0x000097bf]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x000044b2      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x000044b4      ba05000000     mov edx, 5
0x000044b9      e8e2d5ffff     call sym.imp.dcgettext
0x000044be      4889c1         mov rcx, rax
0x000044c1      4889442468     mov qword [rsp + 0x68], rax
0x000044c6      488d05f25200.  lea rax, [0x000097bf]                   ; "`"
0x000044cd      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x000044d0      0f8498030000   je 0x486e
0x000044d6      488d35e05200.  lea rsi, [0x000097bd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000044dd      31ff           xor edi, edi
0x000044df      ba05000000     mov edx, 5
0x000044e4      e8b7d5ffff     call sym.imp.dcgettext
0x000044e9      4889c1         mov rcx, rax
0x000044ec      4889442460     mov qword [rsp + 0x60], rax
0x000044f1      488d05c55200.  lea rax, [0x000097bd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000044f8      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x000044fb      0f8483030000   je 0x4884
0x00004501      4531ff         xor r15d, r15d
0x00004504      85db           test ebx, ebx
0x00004506      0f84c1010000   je 0x46cd
0x0000450c      85db           test ebx, ebx
0x0000450e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00004513      0f9544240f     setne byte [rsp + 0xf]
0x00004518      4531e4         xor r12d, r12d
0x0000451b      4889df         mov rdi, rbx
0x0000451e      e89dd5ffff     call sym.imp.strlen
0x00004523      48895c2448     mov qword [rsp + 0x48], rbx
0x00004528      4889442418     mov qword [rsp + 0x18], rax
0x0000452d      c644240e01     mov byte [rsp + 0xe], 1
0x00004532      c644247c00     mov byte [rsp + 0x7c], 0
0x00004537      48c744245000.  mov qword [rsp + 0x50], 0
0x00004540      c644240d01     mov byte [rsp + 0xd], 1
0x00004545      e999f2ffff     jmp 0x37e3
0x0000454a      c644240e01     mov byte [rsp + 0xe], 1
0x0000454f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004554      4531e4         xor r12d, r12d
0x00004557      48c744245000.  mov qword [rsp + 0x50], 0
0x00004560      c644240f00     mov byte [rsp + 0xf], 0
0x00004565      4531ff         xor r15d, r15d
0x00004568      c644240d00     mov byte [rsp + 0xd], 0
0x0000456d      48c744241800.  mov qword [rsp + 0x18], 0
0x00004576      48c744244800.  mov qword [rsp + 0x48], 0
0x0000457f      e95ff2ffff     jmp 0x37e3
0x00004584      c644240e01     mov byte [rsp + 0xe], 1
0x00004589      c644247c00     mov byte [rsp + 0x7c], 0
0x0000458e      4531e4         xor r12d, r12d
0x00004591      48c744245000.  mov qword [rsp + 0x50], 0
0x0000459a      c644240f01     mov byte [rsp + 0xf], 1
0x0000459f      c644240d01     mov byte [rsp + 0xd], 1
0x000045a4      e91af2ffff     jmp 0x37c3
0x000045a9      4d39fd         cmp r13, r15
0x000045ac      7605           jbe 0x45b3
0x000045ae      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x000045b3      488d4102       lea rax, [rcx + 2]
0x000045b7      4939c5         cmp r13, rax
0x000045ba      7606           jbe 0x45c2
0x000045bc      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x000045c2      4489e0         mov eax, r12d
0x000045c5      4c8d7903       lea r15, [rcx + 3]
0x000045c9      4531e4         xor r12d, r12d
0x000045cc      bb30000000     mov ebx, 0x30                           ; '0'
0x000045d1      e962f3ffff     jmp 0x3938
0x000045d6      662e0f1f8400.  nop word cs:[rax + rax]
0x000045e0      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000045e5      4c89dd         mov rbp, r11
0x000045e8      885c240d       mov byte [rsp + 0xd], bl
0x000045ec      e9a8fcffff     jmp 0x4299
0x000045f1      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000045f6      4531e4         xor r12d, r12d
0x000045f9      e902fbffff     jmp 0x4100
0x000045fe      4531d2         xor r10d, r10d
0x00004601      e9b7fbffff     jmp 0x41bd
0x00004606      48c744245000.  mov qword [rsp + 0x50], 0
0x0000460f      c644240e01     mov byte [rsp + 0xe], 1
0x00004614      4531e4         xor r12d, r12d
0x00004617      c644247c00     mov byte [rsp + 0x7c], 0
0x0000461c      e9dafdffff     jmp 0x43fb
0x00004621      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00004626      4c89f6         mov rsi, r14
0x00004629      4c89e9         mov rcx, r13
0x0000462c      4889d8         mov rax, rbx
0x0000462f      4889df         mov rdi, rbx
0x00004632      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00004638      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000463d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00004645      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00004648      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000464e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004656      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000465b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00004660      7326           jae 0x4688
0x00004662      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00004665      7510           jne 0x4677
0x00004667      eb1f           jmp 0x4688
0x00004669      0f1f80000000.  nop dword [rax]
0x00004670      41803c0100     cmp byte [r9 + rax], 0
0x00004675      740e           je 0x4685
0x00004677      4883c001       add rax, 1
0x0000467b      488d540500     lea rdx, [rbp + rax]
0x00004680      4939d3         cmp r11, rdx
0x00004683      77eb           ja 0x4670
0x00004685      4889c7         mov rdi, rax
0x00004688      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000468d      4531e4         xor r12d, r12d
0x00004690      e961faffff     jmp 0x40f6
0x00004695      4889df         mov rdi, rbx
0x00004698      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000469e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000046a3      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000046a9      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000046b1      4531e4         xor r12d, r12d
0x000046b4      4c8b742440     mov r14, qword [rsp + 0x40]
0x000046b9      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000046be      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000046c3      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000046c8      e929faffff     jmp 0x40f6
0x000046cd      488b542468     mov rdx, qword [rsp + 0x68]
0x000046d2      0fb602         movzx eax, byte [rdx]
0x000046d5      84c0           test al, al
0x000046d7      0f842ffeffff   je 0x450c
0x000046dd      0f1f00         nop dword [rax]
0x000046e0      4d39fd         cmp r13, r15
0x000046e3      7604           jbe 0x46e9
0x000046e5      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x000046e9      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x000046ed      420fb6043a     movzx eax, byte [rdx + r15]
0x000046f2      84c0           test al, al
0x000046f4      75ea           jne 0x46e0
0x000046f6      e911feffff     jmp 0x450c
0x000046fb      89d0           mov eax, edx
0x000046fd      e955f5ffff     jmp 0x3c57
0x00004702      0fb61c08       movzx ebx, byte [rax + rcx]
0x00004706      80fb3e         cmp bl, 0x3e
0x00004709      0f8771f8ffff   ja 0x3f80
0x0000470f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00004719      480fa3d8       bt rax, rbx
0x0000471d      0f835df8ffff   jae 0x3f80
0x00004723      807c240f00     cmp byte [rsp + 0xf], 0
0x00004728      0f85e4010000   jne 0x4912                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x0000472e      4d39fd         cmp r13, r15
0x00004731      7605           jbe 0x4738
0x00004733      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00004738      498d4701       lea rax, [r15 + 1]
0x0000473c      4939c5         cmp r13, rax
0x0000473f      7606           jbe 0x4747
0x00004741      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00004747      498d4702       lea rax, [r15 + 2]
0x0000474b      4939c5         cmp r13, rax
0x0000474e      7606           jbe 0x4756
0x00004750      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00004756      498d4703       lea rax, [r15 + 3]
0x0000475a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x0000475d      7606           jbe 0x4765
0x0000475f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00004765      4983c704       add r15, 4
0x00004769      31d2           xor edx, edx
0x0000476b      4531e4         xor r12d, r12d
0x0000476e      31c0           xor eax, eax
0x00004770      4889cd         mov rbp, rcx
0x00004773      e9c0f1ffff     jmp 0x3938
0x00004778      85db           test ebx, ebx
0x0000477a      0f8488010000   je 0x4908
0x00004780      488d05365000.  lea rax, [0x000097bd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004787      c644240e01     mov byte [rsp + 0xe], 1
0x0000478c      c644247c00     mov byte [rsp + 0x7c], 0
0x00004791      4531e4         xor r12d, r12d
0x00004794      48c744245000.  mov qword [rsp + 0x50], 0
0x0000479d      c644240f01     mov byte [rsp + 0xf], 1
0x000047a2      c644240d00     mov byte [rsp + 0xd], 0
0x000047a7      48c744241801.  mov qword [rsp + 0x18], 1
0x000047b0      4531ff         xor r15d, r15d
0x000047b3      4889442448     mov qword [rsp + 0x48], rax
0x000047b8      e926f0ffff     jmp 0x37e3
0x000047bd      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x000047c0      4c89dd         mov rbp, r11
0x000047c3      0fb644240f     movzx eax, byte [rsp + 0xf]
0x000047c8      e9ccfaffff     jmp 0x4299
0x000047cd      488d05e74f00.  lea rax, str.l______l                   ; 0x97bb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000047d4      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x000047d9      c644247c00     mov byte [rsp + 0x7c], 0
0x000047de      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x000047e1      48c744245000.  mov qword [rsp + 0x50], 0
0x000047ea      c644240f01     mov byte [rsp + 0xf], 1
0x000047ef      c644240d01     mov byte [rsp + 0xd], 1
0x000047f4      48c744241801.  mov qword [rsp + 0x18], 1
0x000047fd      4531ff         xor r15d, r15d
0x00004800      4889442448     mov qword [rsp + 0x48], rax
0x00004805      e9d9efffff     jmp 0x37e3
0x0000480a      89d0           mov eax, edx
0x0000480c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00004811      4885db         test rbx, rbx
0x00004814      742c           je 0x4842
0x00004816      84c0           test al, al
0x00004818      7428           je 0x4842
0x0000481a      0fb60b         movzx ecx, byte [rbx]
0x0000481d      4889d8         mov rax, rbx
0x00004820      84c9           test cl, cl
0x00004822      741e           je 0x4842
0x00004824      4c89fa         mov rdx, r15
0x00004827      4c29f8         sub rax, r15
0x0000482a      4939d5         cmp r13, rdx
0x0000482d      7604           jbe 0x4833
0x0000482f      41880c16       mov byte [r14 + rdx], cl
0x00004833      4883c201       add rdx, 1
0x00004837      0fb60c10       movzx ecx, byte [rax + rdx]
0x0000483b      84c9           test cl, cl
0x0000483d      75eb           jne 0x482a
0x0000483f      4989d7         mov r15, rdx
0x00004842      4d39fd         cmp r13, r15
0x00004845      0f869efaffff   jbe 0x42e9
0x0000484b      43c6043e00     mov byte [r14 + r15], 0
0x00004850      e994faffff     jmp 0x42e9
0x00004855      837c240802     cmp dword [rsp + 8], 2
0x0000485a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000485f      4c89dd         mov rbp, r11
0x00004862      0f94c0         sete al
0x00004865      885c240d       mov byte [rsp + 0xd], bl
0x00004869      e92bfaffff     jmp 0x4299
0x0000486e      8b742408       mov esi, dword [rsp + 8]
0x00004872      4889cf         mov rdi, rcx
0x00004875      e8a6edffff     call sym.gettext_quote.part.1
0x0000487a      4889442468     mov qword [rsp + 0x68], rax
0x0000487f      e952fcffff     jmp 0x44d6
0x00004884      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00004888      4889cf         mov rdi, rcx
0x0000488b      e890edffff     call sym.gettext_quote.part.1
0x00004890      4889442460     mov qword [rsp + 0x60], rax
0x00004895      e967fcffff     jmp 0x4501
0x0000489a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000489f      4c89dd         mov rbp, r11
0x000048a2      89d0           mov eax, edx
0x000048a4      885c240d       mov byte [rsp + 0xd], bl
0x000048a8      e9ecf9ffff     jmp 0x4299
0x000048ad      4883ec08       sub rsp, 8
0x000048b1      41b805000000   mov r8d, 5
0x000048b7      4c89d9         mov rcx, r11
0x000048ba      ff742468       push qword [rsp + 0x68]
0x000048be      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x000048c2      4c89f7         mov rdi, r14
0x000048c5      ff742438       push qword [rsp + 0x38]
0x000048c9      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x000048d1      488b542430     mov rdx, qword [rsp + 0x30]
0x000048d6      488b742470     mov rsi, qword [rsp + 0x70]
0x000048db      e830eeffff     call sym.quotearg_buffer_restyled
0x000048e0      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x000048e4      4989c7         mov r15, rax
0x000048e7      e9fdf9ffff     jmp 0x42e9
0x000048ec      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x000048f1      e916ffffff     jmp 0x480c
0x000048f6      c74424080200.  mov dword [rsp + 8], 2
0x000048fe      e996f9ffff     jmp 0x4299
0x00004903      e8c8d1ffff     call sym.imp.__stack_chk_fail
0x00004908      c644240d00     mov byte [rsp + 0xd], 0
0x0000490d      e96ffaffff     jmp 0x4381
0x00004912      4c89dd         mov rbp, r11
0x00004915      e996f9ffff     jmp 0x42b0
0x0000491a      c644240e01     mov byte [rsp + 0xe], 1
0x0000491f      31c0           xor eax, eax
0x00004921      4531e4         xor r12d, r12d
0x00004924      48c744245000.  mov qword [rsp + 0x50], 0
0x0000492d      e9a2f5ffff     jmp 0x3ed4
0x00004932      4c89ea         mov rdx, r13
0x00004935      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000493a      e9f3f5ffff     jmp 0x3f32
0x0000493f      e85cd0ffff     call sym.imp.abort
0x00004944      6690           nop
0x00004946      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00004950      4157           push r15
0x00004952      4156           push r14
0x00004954      4c63ff         movsxd r15, edi
0x00004957      4155           push r13
0x00004959      4154           push r12
0x0000495b      4989d6         mov r14, rdx
0x0000495e      55             push rbp
0x0000495f      53             push rbx
0x00004960      4889cd         mov rbp, rcx
0x00004963      4883ec28       sub rsp, 0x28
0x00004967      4889742408     mov qword [rsp + 8], rsi
0x0000496c      e83fd0ffff     call sym.imp.__errno_location
0x00004971      4989c5         mov r13, rax
0x00004974      8b00           mov eax, dword [rax]
0x00004976      4585ff         test r15d, r15d
0x00004979      488b1de08620.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x20d060:8]=0x20d070 obj.slotvec0 ; "p\xd0 "
0x00004980      89442418       mov dword [rsp + 0x18], eax
0x00004984      0f8867010000   js 0x4af1
0x0000498a      44393dc78620.  cmp dword [obj.nslots], r15d            ; [0x20d058:4]=1
0x00004991      7f62           jg 0x49f5
0x00004993      4181ffffffff.  cmp r15d, 0x7fffffff
0x0000499a      0f8456010000   je 0x4af6
0x000049a0      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x000049a4      488d05c58620.  lea rax, obj.slotvec0                   ; 0x20d070
0x000049ab      4963f4         movsxd rsi, r12d
0x000049ae      48c1e604       shl rsi, 4
0x000049b2      4839c3         cmp rbx, rax
0x000049b5      0f8415010000   je 0x4ad0
0x000049bb      4889df         mov rdi, rbx
0x000049be      e81d220000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x000049c3      4889c3         mov rbx, rax
0x000049c6      488905938620.  mov qword [obj.slotvec], rax            ; [0x20d060:8]=0x20d070 obj.slotvec0 ; "p\xd0 "
0x000049cd      48633d848620.  movsxd rdi, dword [obj.nslots]          ; [0x20d058:4]=1
0x000049d4      4489e2         mov edx, r12d
0x000049d7      31f6           xor esi, esi
0x000049d9      29fa           sub edx, edi
0x000049db      48c1e704       shl rdi, 4
0x000049df      4863d2         movsxd rdx, edx
0x000049e2      4801df         add rdi, rbx
0x000049e5      48c1e204       shl rdx, 4
0x000049e9      e892d1ffff     call sym.imp.memset
0x000049ee      448925638620.  mov dword [obj.nslots], r12d            ; [0x20d058:4]=1
0x000049f5      8b4504         mov eax, dword [rbp + 4]
0x000049f8      49c1e704       shl r15, 4
0x000049fc      4883ec08       sub rsp, 8
0x00004a00      4c01fb         add rbx, r15
0x00004a03      4c8d7d08       lea r15, [rbp + 8]
0x00004a07      448b4500       mov r8d, dword [rbp]
0x00004a0b      4c8b1b         mov r11, qword [rbx]
0x00004a0e      4c8b6308       mov r12, qword [rbx + 8]
0x00004a12      4c89f1         mov rcx, r14
0x00004a15      83c801         or eax, 1
0x00004a18      89442424       mov dword [rsp + 0x24], eax
0x00004a1c      ff7530         push qword [rbp + 0x30]
0x00004a1f      4189c1         mov r9d, eax
0x00004a22      ff7528         push qword [rbp + 0x28]
0x00004a25      4157           push r15
0x00004a27      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00004a2a      488b542428     mov rdx, qword [rsp + 0x28]
0x00004a2f      4c89e7         mov rdi, r12
0x00004a32      4c895c2430     mov qword [rsp + 0x30], r11
0x00004a37      e8d4ecffff     call sym.quotearg_buffer_restyled
0x00004a3c      4883c420       add rsp, 0x20
0x00004a40      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00004a45      4939c3         cmp r11, rax
0x00004a48      7767           ja 0x4ab1
0x00004a4a      488d7001       lea rsi, [rax + 1]
0x00004a4e      488d05ab8620.  lea rax, obj.slot0                      ; 0x20d100
0x00004a55      4939c4         cmp r12, rax
0x00004a58      488933         mov qword [rbx], rsi
0x00004a5b      7412           je 0x4a6f
0x00004a5d      4c89e7         mov rdi, r12
0x00004a60      4889742410     mov qword [rsp + 0x10], rsi
0x00004a65      e866d3ffff     call sym..plt.got
0x00004a6a      488b742410     mov rsi, qword [rsp + 0x10]
0x00004a6f      4889f7         mov rdi, rsi
0x00004a72      4889742410     mov qword [rsp + 0x10], rsi
0x00004a77      e804210000     call sym.xmalloc
0x00004a7c      4883ec08       sub rsp, 8
0x00004a80      48894308       mov qword [rbx + 8], rax
0x00004a84      448b4500       mov r8d, dword [rbp]
0x00004a88      ff7530         push qword [rbp + 0x30]
0x00004a8b      ff7528         push qword [rbp + 0x28]
0x00004a8e      4c89f1         mov rcx, r14
0x00004a91      4157           push r15
0x00004a93      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00004a98      4889c7         mov rdi, rax
0x00004a9b      488b542428     mov rdx, qword [rsp + 0x28]
0x00004aa0      488b742430     mov rsi, qword [rsp + 0x30]
0x00004aa5      4989c4         mov r12, rax
0x00004aa8      e863ecffff     call sym.quotearg_buffer_restyled
0x00004aad      4883c420       add rsp, 0x20
0x00004ab1      8b442418       mov eax, dword [rsp + 0x18]
0x00004ab5      41894500       mov dword [r13], eax
0x00004ab9      4883c428       add rsp, 0x28
0x00004abd      4c89e0         mov rax, r12
0x00004ac0      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00004ac1      5d             pop rbp
0x00004ac2      415c           pop r12
0x00004ac4      415d           pop r13
0x00004ac6      415e           pop r14
0x00004ac8      415f           pop r15
0x00004aca      c3             ret
0x00004acb      0f1f440000     nop dword [rax + rax]
0x00004ad0      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00004ad2      e809210000     call sym.xrealloc
0x00004ad7      660f6f059185.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x00004adf      4889c3         mov rbx, rax
0x00004ae2      488905778520.  mov qword [obj.slotvec], rax            ; [0x20d060:8]=0x20d070 obj.slotvec0 ; "p\xd0 "
0x00004ae9      0f1100         movups xmmword [rax], xmm0
0x00004aec      e9dcfeffff     jmp 0x49cd
0x00004af1      e8aaceffff     call sym.imp.abort
0x00004af6      e8d5220000     call sym.xalloc_die
0x00004afb      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00004b00      4154           push r12
0x00004b02      55             push rbp
0x00004b03      53             push rbx
0x00004b04      4889fb         mov rbx, rdi
0x00004b07      e8a4ceffff     call sym.imp.__errno_location
0x00004b0c      448b20         mov r12d, dword [rax]
0x00004b0f      4889c5         mov rbp, rax
0x00004b12      488d05e78620.  lea rax, obj.default_quoting_options    ; 0x20d200
0x00004b19      4885db         test rbx, rbx
0x00004b1c      be38000000     mov esi, 0x38                           ; '8'
0x00004b21      480f44d8       cmove rbx, rax
0x00004b25      4889df         mov rdi, rbx
0x00004b28      e853220000     call sym.xmemdup
0x00004b2d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004b31      5b             pop rbx
0x00004b32      5d             pop rbp
0x00004b33      415c           pop r12
0x00004b35      c3             ret
0x00004b36      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00004b40      488d05b98620.  lea rax, obj.default_quoting_options    ; 0x20d200
0x00004b47      4885ff         test rdi, rdi
0x00004b4a      480f44f8       cmove rdi, rax
0x00004b4e      8b07           mov eax, dword [rdi]
0x00004b50      c3             ret
0x00004b51      0f1f440000     nop dword [rax + rax]
0x00004b56      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00004b60      488d05998620.  lea rax, obj.default_quoting_options    ; 0x20d200
0x00004b67      4885ff         test rdi, rdi
0x00004b6a      480f44f8       cmove rdi, rax
0x00004b6e      8937           mov dword [rdi], esi
0x00004b70      c3             ret
0x00004b71      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00004b76      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00004b80      488d05798620.  lea rax, obj.default_quoting_options    ; 0x20d200
0x00004b87      4885ff         test rdi, rdi
0x00004b8a      89f1           mov ecx, esi
0x00004b8c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00004b90      89f0           mov eax, esi
0x00004b92      83e11f         and ecx, 0x1f
0x00004b95      c0e805         shr al, 5
0x00004b98      0fb6c0         movzx eax, al
0x00004b9b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00004ba0      8b37           mov esi, dword [rdi]
0x00004ba2      89f0           mov eax, esi
0x00004ba4      d3e8           shr eax, cl
0x00004ba6      31c2           xor edx, eax
0x00004ba8      83e001         and eax, 1
0x00004bab      83e201         and edx, 1
0x00004bae      d3e2           shl edx, cl
0x00004bb0      31f2           xor edx, esi
0x00004bb2      8917           mov dword [rdi], edx
0x00004bb4      c3             ret
0x00004bb5      90             nop
0x00004bb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00004bc0      488d05398620.  lea rax, obj.default_quoting_options    ; 0x20d200
0x00004bc7      4885ff         test rdi, rdi
0x00004bca      480f44f8       cmove rdi, rax
0x00004bce      8b4704         mov eax, dword [rdi + 4]
0x00004bd1      897704         mov dword [rdi + 4], esi
0x00004bd4      c3             ret
0x00004bd5      90             nop
0x00004bd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00004be0      488d05198620.  lea rax, obj.default_quoting_options    ; 0x20d200
0x00004be7      4885ff         test rdi, rdi
0x00004bea      480f44f8       cmove rdi, rax
0x00004bee      4885f6         test rsi, rsi
0x00004bf1      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00004bf7      740e           je 0x4c07
0x00004bf9      4885d2         test rdx, rdx
0x00004bfc      7409           je 0x4c07
0x00004bfe      48897728       mov qword [rdi + 0x28], rsi
0x00004c02      48895730       mov qword [rdi + 0x30], rdx
0x00004c06      c3             ret
0x00004c07      4883ec08       sub rsp, 8
0x00004c0b      e890cdffff     call sym.imp.abort
;-- quotearg_buffer:
0x00004c10      4157           push r15
0x00004c12      4156           push r14
0x00004c14      488d05e58520.  lea rax, obj.default_quoting_options    ; 0x20d200
0x00004c1b      4155           push r13
0x00004c1d      4154           push r12
0x00004c1f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00004c22      55             push rbp
0x00004c23      53             push rbx
0x00004c24      4c89c3         mov rbx, r8
0x00004c27      4989f6         mov r14, rsi
0x00004c2a      4989d7         mov r15, rdx
0x00004c2d      4883ec18       sub rsp, 0x18
0x00004c31      4d85c0         test r8, r8
0x00004c34      480f44d8       cmove rbx, rax
0x00004c38      48894c2408     mov qword [rsp + 8], rcx
0x00004c3d      e86ecdffff     call sym.imp.__errno_location
0x00004c42      448b20         mov r12d, dword [rax]
0x00004c45      4889c5         mov rbp, rax
0x00004c48      488d4308       lea rax, [rbx + 8]
0x00004c4c      4883ec08       sub rsp, 8
0x00004c50      448b4b04       mov r9d, dword [rbx + 4]
0x00004c54      ff7330         push qword [rbx + 0x30]
0x00004c57      448b03         mov r8d, dword [rbx]
0x00004c5a      ff7328         push qword [rbx + 0x28]
0x00004c5d      4c89fa         mov rdx, r15
0x00004c60      50             push rax
0x00004c61      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00004c66      4c89f6         mov rsi, r14
0x00004c69      4c89ef         mov rdi, r13
0x00004c6c      e89feaffff     call sym.quotearg_buffer_restyled
0x00004c71      44896500       mov dword [rbp], r12d
0x00004c75      4883c438       add rsp, 0x38
0x00004c79      5b             pop rbx
0x00004c7a      5d             pop rbp
0x00004c7b      415c           pop r12
0x00004c7d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00004c7f      415e           pop r14
0x00004c81      415f           pop r15
0x00004c83      c3             ret
0x00004c84      6690           nop
0x00004c86      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00004c90      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00004c92      4156           push r14
0x00004c94      488d05658520.  lea rax, obj.default_quoting_options    ; 0x20d200
0x00004c9b      4155           push r13
0x00004c9d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x00004c9f      4989d4         mov r12, rdx
0x00004ca2      55             push rbp
0x00004ca3      53             push rbx
0x00004ca4      4889cb         mov rbx, rcx
0x00004ca7      4989fe         mov r14, rdi
0x00004caa      4989f7         mov r15, rsi
0x00004cad      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00004cb1      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00004cb4      480f44d8       cmove rbx, rax
0x00004cb8      31ed           xor ebp, ebp
0x00004cba      e8f1ccffff     call sym.imp.__errno_location
0x00004cbf      4d85e4         test r12, r12
0x00004cc2      4989c5         mov r13, rax
0x00004cc5      8b00           mov eax, dword [rax]
0x00004cc7      400f94c5       sete bpl
0x00004ccb      0b6b04         or ebp, dword [rbx + 4]
0x00004cce      4c8d5308       lea r10, [rbx + 8]
0x00004cd2      4883ec08       sub rsp, 8
0x00004cd6      448b03         mov r8d, dword [rbx]
0x00004cd9      4c89f9         mov rcx, r15
0x00004cdc      89442414       mov dword [rsp + 0x14], eax
0x00004ce0      ff7330         push qword [rbx + 0x30]
0x00004ce3      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00004ce6      ff7328         push qword [rbx + 0x28]
0x00004ce9      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x00004ceb      31f6           xor esi, esi
0x00004ced      4189e9         mov r9d, ebp
0x00004cf0      31ff           xor edi, edi
0x00004cf2      4c89542440     mov qword [rsp + 0x40], r10
0x00004cf7      e814eaffff     call sym.quotearg_buffer_restyled
0x00004cfc      488d7001       lea rsi, [rax + 1]
0x00004d00      4889442448     mov qword [rsp + 0x48], rax
0x00004d05      4883c420       add rsp, 0x20
0x00004d09      4889f7         mov rdi, rsi
0x00004d0c      4889742418     mov qword [rsp + 0x18], rsi
0x00004d11      e86a1e0000     call sym.xmalloc
0x00004d16      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x00004d1b      4883ec08       sub rsp, 8
0x00004d1f      ff7330         push qword [rbx + 0x30]
0x00004d22      ff7328         push qword [rbx + 0x28]
0x00004d25      4c8b542438     mov r10, qword [rsp + 0x38]
0x00004d2a      4189e9         mov r9d, ebp
0x00004d2d      448b03         mov r8d, dword [rbx]
0x00004d30      4c89f9         mov rcx, r15
0x00004d33      4c89f2         mov rdx, r14
0x00004d36      4889c7         mov rdi, rax
0x00004d39      4152           push r10
0x00004d3b      488b742438     mov rsi, qword [rsp + 0x38]
0x00004d40      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00004d45      8b44242c       mov eax, dword [rsp + 0x2c]
0x00004d49      4883c420       add rsp, 0x20
0x00004d4d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00004d50      41894500       mov dword [r13], eax
0x00004d54      7409           je 0x4d5f
0x00004d56      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x00004d5b      4d891c24       mov qword [r12], r11
0x00004d5f      488b442410     mov rax, qword [rsp + 0x10]
0x00004d64      4883c438       add rsp, 0x38
0x00004d68      5b             pop rbx
0x00004d69      5d             pop rbp
0x00004d6a      415c           pop r12
0x00004d6c      415d           pop r13
0x00004d6e      415e           pop r14
0x00004d70      415f           pop r15
0x00004d72      c3             ret
0x00004d73      0f1f00         nop dword [rax]
0x00004d76      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00004d80      4889d1         mov rcx, rdx
0x00004d83      31d2           xor edx, edx
0x00004d85      e906ffffff     jmp sym.quotearg_alloc_mem
0x00004d8a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00004d90      8b05c2822000   mov eax, dword [obj.nslots]             ; [0x20d058:4]=1
0x00004d96      4154           push r12
0x00004d98      4c8b25c18220.  mov r12, qword [obj.slotvec]            ; [0x20d060:8]=0x20d070 obj.slotvec0 ; "p\xd0 "
0x00004d9f      55             push rbp
0x00004da0      53             push rbx
0x00004da1      83f801         cmp eax, 1
0x00004da4      7e2b           jle 0x4dd1                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00004da6      83e802         sub eax, 2
0x00004da9      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00004dae      48c1e004       shl rax, 4
0x00004db2      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00004db7      660f1f840000.  nop word [rax + rax]
0x00004dc0      488b3b         mov rdi, qword [rbx]
0x00004dc3      4883c310       add rbx, 0x10
0x00004dc7      e804d0ffff     call sym..plt.got
0x00004dcc      4839eb         cmp rbx, rbp
0x00004dcf      75ef           jne 0x4dc0
0x00004dd1      498b7c2408     mov rdi, qword [r12 + 8]
0x00004dd6      488d1d238320.  lea rbx, obj.slot0                      ; 0x20d100
0x00004ddd      4839df         cmp rdi, rbx
0x00004de0      7417           je 0x4df9
0x00004de2      e8e9cfffff     call sym..plt.got
0x00004de7      48c7057e8220.  mov qword [obj.slotvec0], 0x100         ; [0x20d070:8]=256
0x00004df2      48891d7f8220.  mov qword [0x0020d078], rbx             ; [0x20d078:8]=0x20d100 obj.slot0
0x00004df9      488d1d708220.  lea rbx, obj.slotvec0                   ; 0x20d070
0x00004e00      4939dc         cmp r12, rbx
0x00004e03      740f           je 0x4e14
0x00004e05      4c89e7         mov rdi, r12
0x00004e08      e8c3cfffff     call sym..plt.got
0x00004e0d      48891d4c8220.  mov qword [obj.slotvec], rbx            ; [0x20d060:8]=0x20d070 obj.slotvec0 ; "p\xd0 "
0x00004e14      5b             pop rbx
0x00004e15      c70539822000.  mov dword [obj.nslots], 1               ; [0x20d058:4]=1
0x00004e1f      5d             pop rbp
0x00004e20      415c           pop r12
0x00004e22      c3             ret
0x00004e23      0f1f00         nop dword [rax]
0x00004e26      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00004e30      488d0dc98320.  lea rcx, obj.default_quoting_options    ; 0x20d200
0x00004e37      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004e3e      e90dfbffff     jmp sym.quotearg_n_options
0x00004e43      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00004e46      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00004e50      488d0da98320.  lea rcx, obj.default_quoting_options    ; 0x20d200
0x00004e57      e9f4faffff     jmp sym.quotearg_n_options
0x00004e5c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00004e60      488d0d998320.  lea rcx, obj.default_quoting_options    ; 0x20d200
0x00004e67      4889fe         mov rsi, rdi
0x00004e6a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004e71      31ff           xor edi, edi
0x00004e73      e9d8faffff     jmp sym.quotearg_n_options
0x00004e78      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00004e80      488d0d798320.  lea rcx, obj.default_quoting_options    ; 0x20d200
0x00004e87      4889f2         mov rdx, rsi
0x00004e8a      4889fe         mov rsi, rdi
0x00004e8d      31ff           xor edi, edi
0x00004e8f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00004e94      6690           nop
0x00004e96      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00004ea0      4883ec48       sub rsp, 0x48
0x00004ea4      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00004ea7      64488b142528.  mov rdx, qword fs:[0x28]
0x00004eb0      4889542438     mov qword [rsp + 0x38], rdx
0x00004eb5      31d2           xor edx, edx
0x00004eb7      83fe0a         cmp esi, 0xa
0x00004eba      7468           je 0x4f24
0x00004ebc      893424         mov dword [rsp], esi
0x00004ebf      4889e1         mov rcx, rsp
0x00004ec2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004ec9      4889c6         mov rsi, rax
0x00004ecc      48c744240400.  mov qword [rsp + 4], 0
0x00004ed5      48c744240c00.  mov qword [rsp + 0xc], 0
0x00004ede      48c744241400.  mov qword [rsp + 0x14], 0
0x00004ee7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004ef0      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00004ef9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004f02      c74424340000.  mov dword [rsp + 0x34], 0
0x00004f0a      e841faffff     call sym.quotearg_n_options
0x00004f0f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004f14      6448330c2528.  xor rcx, qword fs:[0x28]
0x00004f1d      750a           jne 0x4f29                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x00004f1f      4883c448       add rsp, 0x48
0x00004f23      c3             ret
0x00004f24      e877caffff     call sym.imp.abort
0x00004f29      e8a2cbffff     call sym.imp.__stack_chk_fail
0x00004f2e      6690           nop
;-- quotearg_n_style_mem:
0x00004f30      4883ec48       sub rsp, 0x48
0x00004f34      4889d0         mov rax, rdx
0x00004f37      4889ca         mov rdx, rcx
0x00004f3a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00004f43      48894c2438     mov qword [rsp + 0x38], rcx
0x00004f48      31c9           xor ecx, ecx
0x00004f4a      83fe0a         cmp esi, 0xa
0x00004f4d      7461           je 0x4fb0
0x00004f4f      893424         mov dword [rsp], esi
0x00004f52      4889e1         mov rcx, rsp
0x00004f55      4889c6         mov rsi, rax
0x00004f58      48c744240400.  mov qword [rsp + 4], 0
0x00004f61      48c744240c00.  mov qword [rsp + 0xc], 0
0x00004f6a      48c744241400.  mov qword [rsp + 0x14], 0
0x00004f73      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004f7c      48c744242400.  mov qword [rsp + 0x24], 0
0x00004f85      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004f8e      c74424340000.  mov dword [rsp + 0x34], 0
0x00004f96      e8b5f9ffff     call sym.quotearg_n_options
0x00004f9b      488b542438     mov rdx, qword [rsp + 0x38]
0x00004fa0      644833142528.  xor rdx, qword fs:[0x28]
0x00004fa9      750a           jne 0x4fb5
0x00004fab      4883c448       add rsp, 0x48
0x00004faf      c3             ret
0x00004fb0      e8ebc9ffff     call sym.imp.abort
0x00004fb5      e816cbffff     call sym.imp.__stack_chk_fail
0x00004fba      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00004fc0      4889f2         mov rdx, rsi
0x00004fc3      89fe           mov esi, edi
0x00004fc5      31ff           xor edi, edi
0x00004fc7      e9d4feffff     jmp sym.quotearg_n_style
0x00004fcc      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00004fd0      4889d1         mov rcx, rdx
0x00004fd3      4889f2         mov rdx, rsi
0x00004fd6      89fe           mov esi, edi
0x00004fd8      31ff           xor edi, edi
0x00004fda      e951ffffff     jmp sym.quotearg_n_style_mem
0x00004fdf      90             nop
;-- quotearg_char_mem:
0x00004fe0      4883ec48       sub rsp, 0x48
0x00004fe4      89d1           mov ecx, edx
0x00004fe6      64488b042528.  mov rax, qword fs:[0x28]
0x00004fef      4889442438     mov qword [rsp + 0x38], rax
0x00004ff4      31c0           xor eax, eax
0x00004ff6      488b05338220.  mov rax, qword [0x0020d230]             ; [0x20d230:8]=0
0x00004ffd      4989e0         mov r8, rsp
0x00005000      83e11f         and ecx, 0x1f
0x00005003      660f6f05f581.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x0000500b      4889442430     mov qword [rsp + 0x30], rax
0x00005010      89d0           mov eax, edx
0x00005012      0f290424       movaps xmmword [rsp], xmm0
0x00005016      c0e805         shr al, 5
0x00005019      0fb6c0         movzx eax, al
0x0000501c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00005021      660f6f05e781.  movdqa xmm0, xmmword [0x0020d210]
0x00005029      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000502e      660f6f05ea81.  movdqa xmm0, xmmword [0x0020d220]
0x00005036      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000503b      418b11         mov edx, dword [r9]
0x0000503e      89d0           mov eax, edx
0x00005040      d3e8           shr eax, cl
0x00005042      f7d0           not eax
0x00005044      83e001         and eax, 1
0x00005047      d3e0           shl eax, cl
0x00005049      4c89c1         mov rcx, r8
0x0000504c      31d0           xor eax, edx
0x0000504e      4889f2         mov rdx, rsi
0x00005051      4889fe         mov rsi, rdi
0x00005054      418901         mov dword [r9], eax
0x00005057      31ff           xor edi, edi
0x00005059      e8f2f8ffff     call sym.quotearg_n_options
0x0000505e      488b742438     mov rsi, qword [rsp + 0x38]
0x00005063      644833342528.  xor rsi, qword fs:[0x28]
0x0000506c      7505           jne 0x5073
0x0000506e      4883c448       add rsp, 0x48
0x00005072      c3             ret
0x00005073      e858caffff     call sym.imp.__stack_chk_fail
0x00005078      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00005080      400fbed6       movsx edx, sil
0x00005084      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000508b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00005090      ba3a000000     mov edx, 0x3a                           ; ':'
0x00005095      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000509c      e93fffffff     jmp sym.quotearg_char_mem
0x000050a1      0f1f440000     nop dword [rax + rax]
0x000050a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x000050b0      ba3a000000     mov edx, 0x3a                           ; ':'
0x000050b5      e926ffffff     jmp sym.quotearg_char_mem
0x000050ba      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x000050c0      4883ec48       sub rsp, 0x48
0x000050c4      4889d0         mov rax, rdx
0x000050c7      64488b142528.  mov rdx, qword fs:[0x28]
0x000050d0      4889542438     mov qword [rsp + 0x38], rdx
0x000050d5      31d2           xor edx, edx
0x000050d7      83fe0a         cmp esi, 0xa
0x000050da      7468           je 0x5144
0x000050dc      893424         mov dword [rsp], esi
0x000050df      4889e1         mov rcx, rsp
0x000050e2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000050e9      4889c6         mov rsi, rax
0x000050ec      48c744240400.  mov qword [rsp + 4], 0
0x000050f5      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x000050fe      48c744241400.  mov qword [rsp + 0x14], 0
0x00005107      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00005110      48c744242400.  mov qword [rsp + 0x24], 0
0x00005119      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00005122      c74424340000.  mov dword [rsp + 0x34], 0
0x0000512a      e821f8ffff     call sym.quotearg_n_options
0x0000512f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00005134      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000513d      750a           jne 0x5149
0x0000513f      4883c448       add rsp, 0x48
0x00005143      c3             ret
0x00005144      e857c8ffff     call sym.imp.abort
0x00005149      e882c9ffff     call sym.imp.__stack_chk_fail
0x0000514e      6690           nop
;-- quotearg_n_custom_mem:
0x00005150      4883ec48       sub rsp, 0x48
0x00005154      4989c9         mov r9, rcx
0x00005157      488b0dd28020.  mov rcx, qword [0x0020d230]             ; [0x20d230:8]=0
0x0000515e      660f6f059a80.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00005166      64488b042528.  mov rax, qword fs:[0x28]
0x0000516f      4889442438     mov qword [rsp + 0x38], rax
0x00005174      31c0           xor eax, eax
0x00005176      0f290424       movaps xmmword [rsp], xmm0
0x0000517a      4885f6         test rsi, rsi
0x0000517d      48894c2430     mov qword [rsp + 0x30], rcx
0x00005182      c704240a0000.  mov dword [rsp], 0xa
0x00005189      660f6f057f80.  movdqa xmm0, xmmword [0x0020d210]
0x00005191      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00005196      660f6f058280.  movdqa xmm0, xmmword [0x0020d220]
0x0000519e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x000051a3      7432           je 0x51d7
0x000051a5      4885d2         test rdx, rdx
0x000051a8      742d           je 0x51d7
0x000051aa      4889742428     mov qword [rsp + 0x28], rsi
0x000051af      4889542430     mov qword [rsp + 0x30], rdx
0x000051b4      4889e1         mov rcx, rsp
0x000051b7      4c89c2         mov rdx, r8
0x000051ba      4c89ce         mov rsi, r9
0x000051bd      e88ef7ffff     call sym.quotearg_n_options
0x000051c2      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000051c7      6448333c2528.  xor rdi, qword fs:[0x28]
0x000051d0      750a           jne 0x51dc
0x000051d2      4883c448       add rsp, 0x48
0x000051d6      c3             ret
0x000051d7      e8c4c7ffff     call sym.imp.abort
0x000051dc      e8efc8ffff     call sym.imp.__stack_chk_fail
0x000051e1      0f1f440000     nop dword [rax + rax]
0x000051e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x000051f0      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x000051f7      e954ffffff     jmp sym.quotearg_n_custom_mem
0x000051fc      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00005200      4889d1         mov rcx, rdx
0x00005203      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0000520a      4889f2         mov rdx, rsi
0x0000520d      4889fe         mov rsi, rdi
0x00005210      31ff           xor edi, edi
0x00005212      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00005217      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00005220      4989c8         mov r8, rcx
0x00005223      4889d1         mov rcx, rdx
0x00005226      4889f2         mov rdx, rsi
0x00005229      4889fe         mov rsi, rdi
0x0000522c      31ff           xor edi, edi
0x0000522e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00005233      0f1f00         nop dword [rax]
0x00005236      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00005240      488d0dd97d20.  lea rcx, obj.quote_quoting_options      ; 0x20d020
0x00005247      e904f7ffff     jmp sym.quotearg_n_options
0x0000524c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00005250      488d0dc97d20.  lea rcx, obj.quote_quoting_options      ; 0x20d020
0x00005257      4889f2         mov rdx, rsi
0x0000525a      4889fe         mov rsi, rdi
0x0000525d      31ff           xor edi, edi
0x0000525f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00005264      6690           nop
0x00005266      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00005270      488d0da97d20.  lea rcx, obj.quote_quoting_options      ; 0x20d020
0x00005277      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000527e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00005283      0f1f00         nop dword [rax]
0x00005286      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00005290      488d0d897d20.  lea rcx, obj.quote_quoting_options      ; 0x20d020
0x00005297      4889fe         mov rsi, rdi
0x0000529a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000052a1      31ff           xor edi, edi
0x000052a3      e9a8f6ffff     jmp sym.quotearg_n_options
0x000052a8      0f1f84000000.  nop dword [rax + rax]
;-- randint_new:
0x000052b0      53             push rbx
0x000052b1      4889fb         mov rbx, rdi
0x000052b4      bf18000000     mov edi, 0x18
0x000052b9      e8c2180000     call sym.xmalloc
0x000052be      488918         mov qword [rax], rbx
0x000052c1      48c740100000.  mov qword [rax + 0x10], 0
0x000052c9      48c740080000.  mov qword [rax + 8], 0
0x000052d1      5b             pop rbx
0x000052d2      c3             ret
0x000052d3      0f1f00         nop dword [rax]
0x000052d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- randint_all_new:
0x000052e0      53             push rbx
0x000052e1      e8ea050000     call sym.randread_new
0x000052e6      4885c0         test rax, rax
0x000052e9      7425           je 0x5310
0x000052eb      4889c3         mov rbx, rax
0x000052ee      bf18000000     mov edi, 0x18
0x000052f3      e888180000     call sym.xmalloc
0x000052f8      488918         mov qword [rax], rbx
0x000052fb      48c740100000.  mov qword [rax + 0x10], 0
0x00005303      48c740080000.  mov qword [rax + 8], 0
0x0000530b      5b             pop rbx
0x0000530c      c3             ret
0x0000530d      0f1f00         nop dword [rax]
0x00005310      31c0           xor eax, eax
0x00005312      5b             pop rbx
0x00005313      c3             ret
0x00005314      6690           nop
0x00005316      662e0f1f8400.  nop word cs:[rax + rax]
;-- randint_get_source:
0x00005320      488b07         mov rax, qword [rdi]
0x00005323      c3             ret
0x00005324      6690           nop
0x00005326      662e0f1f8400.  nop word cs:[rax + rax]
;-- randint_genmax:
0x00005330      4157           push r15
0x00005332      4156           push r14
0x00005334      4c8d7e01       lea r15, [rsi + 1]
0x00005338      4155           push r13
0x0000533a      4154           push r12
0x0000533c      4989fd         mov r13, rdi
0x0000533f      55             push rbp
0x00005340      53             push rbx
0x00005341      4989f6         mov r14, rsi
0x00005344      4883ec28       sub rsp, 0x28
0x00005348      488b6f08       mov rbp, qword [rdi + 8]
0x0000534c      488b5f10       mov rbx, qword [rdi + 0x10]
0x00005350      64488b042528.  mov rax, qword fs:[0x28]
0x00005359      4889442418     mov qword [rsp + 0x18], rax
0x0000535e      31c0           xor eax, eax
0x00005360      488b07         mov rax, qword [rdi]
0x00005363      4c8d642410     lea r12, [rsp + 0x10]
0x00005368      4889442408     mov qword [rsp + 8], rax
0x0000536d      eb36           jmp 0x53a5
0x0000536f      90             nop
0x00005370      4c39f3         cmp rbx, r14
0x00005373      0f8486000000   je 0x53ff
0x00005379      4889d8         mov rax, rbx
0x0000537c      31d2           xor edx, edx
0x0000537e      4c29f0         sub rax, r14
0x00005381      49f7f7         div r15
0x00005384      4829d3         sub rbx, rdx
0x00005387      4889d7         mov rdi, rdx
0x0000538a      4889c6         mov rsi, rax
0x0000538d      31d2           xor edx, edx
0x0000538f      4889e8         mov rax, rbp
0x00005392      49f7f7         div r15
0x00005395      4839dd         cmp rbp, rbx
0x00005398      0f869a000000   jbe 0x5438
0x0000539e      488d5fff       lea rbx, [rdi - 1]
0x000053a2      4889d5         mov rbp, rdx
0x000053a5      4c39f3         cmp rbx, r14
0x000053a8      73c6           jae 0x5370
0x000053aa      4889d8         mov rax, rbx
0x000053ad      31d2           xor edx, edx
0x000053af      90             nop
0x000053b0      48c1e008       shl rax, 8
0x000053b4      4883c201       add rdx, 1
0x000053b8      4805ff000000   add rax, 0xff
0x000053be      4939c6         cmp r14, rax
0x000053c1      77ed           ja 0x53b0
0x000053c3      488b7c2408     mov rdi, qword [rsp + 8]
0x000053c8      4c89e6         mov rsi, r12
0x000053cb      e850080000     call sym.randread
0x000053d0      4c89e0         mov rax, r12
0x000053d3      0f1f440000     nop dword [rax + rax]
0x000053d8      0fb610         movzx edx, byte [rax]
0x000053db      48c1e308       shl rbx, 8
0x000053df      48c1e508       shl rbp, 8
0x000053e3      4881c3ff0000.  add rbx, 0xff
0x000053ea      4883c001       add rax, 1
0x000053ee      4801d5         add rbp, rdx
0x000053f1      4939de         cmp r14, rbx
0x000053f4      77e2           ja 0x53d8
0x000053f6      4c39f3         cmp rbx, r14
0x000053f9      0f857affffff   jne 0x5379
0x000053ff      49c745100000.  mov qword [r13 + 0x10], 0
0x00005407      49c745080000.  mov qword [r13 + 8], 0
0x0000540f      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00005414      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000541d      4889e8         mov rax, rbp
0x00005420      7523           jne 0x5445
0x00005422      4883c428       add rsp, 0x28
0x00005426      5b             pop rbx
0x00005427      5d             pop rbp
0x00005428      415c           pop r12
0x0000542a      415d           pop r13
0x0000542c      415e           pop r14
0x0000542e      415f           pop r15
0x00005430      c3             ret
0x00005431      0f1f80000000.  nop dword [rax]
0x00005438      49894508       mov qword [r13 + 8], rax
0x0000543c      49897510       mov qword [r13 + 0x10], rsi
0x00005440      4889d5         mov rbp, rdx
0x00005443      ebca           jmp 0x540f
0x00005445      e886c6ffff     call sym.imp.__stack_chk_fail
0x0000544a      660f1f440000   nop word [rax + rax]
;-- randint_free:
0x00005450      53             push rbx
0x00005451      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005458      4889fb         mov rbx, rdi
0x0000545b      be18000000     mov esi, 0x18
0x00005460      e89bc8ffff     call sym.imp.__explicit_bzero_chk
0x00005465      4889df         mov rdi, rbx
0x00005468      5b             pop rbx
0x00005469      e962c9ffff     jmp sym..plt.got
0x0000546e      6690           nop
;-- randint_all_free:
0x00005470      4155           push r13
0x00005472      4154           push r12
0x00005474      55             push rbp
0x00005475      53             push rbx
0x00005476      4889fb         mov rbx, rdi
0x00005479      4883ec08       sub rsp, 8
0x0000547d      488b3f         mov rdi, qword [rdi]
0x00005480      e83b090000     call sym.randread_free
0x00005485      4189c4         mov r12d, eax
0x00005488      e823c5ffff     call sym.imp.__errno_location
0x0000548d      448b28         mov r13d, dword [rax]
0x00005490      4889df         mov rdi, rbx
0x00005493      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000549a      be18000000     mov esi, 0x18
0x0000549f      4889c5         mov rbp, rax
0x000054a2      e859c8ffff     call sym.imp.__explicit_bzero_chk
0x000054a7      4889df         mov rdi, rbx
0x000054aa      e821c9ffff     call sym..plt.got
0x000054af      44896d00       mov dword [rbp], r13d
0x000054b3      4883c408       add rsp, 8
0x000054b7      4489e0         mov eax, r12d
0x000054ba      5b             pop rbx
0x000054bb      5d             pop rbp
0x000054bc      415c           pop r12
0x000054be      415d           pop r13
0x000054c0      c3             ret
0x000054c1      662e0f1f8400.  nop word cs:[rax + rax]
0x000054cb      0f1f440000     nop dword [rax + rax]
;-- sparse_hash_:
0x000054d0      488b07         mov rax, qword [rdi]
0x000054d3      31d2           xor edx, edx
0x000054d5      48f7f6         div rsi
0x000054d8      4889d0         mov rax, rdx
0x000054db      c3             ret
0x000054dc      0f1f4000       nop dword [rax]
;-- sparse_cmp_:
0x000054e0      488b06         mov rax, qword [rsi]
0x000054e3      483907         cmp qword [rdi], rax
0x000054e6      0f94c0         sete al
0x000054e9      c3             ret
0x000054ea      660f1f440000   nop word [rax + rax]
;-- randperm_bound:
0x000054f0      4889f0         mov rax, rsi
0x000054f3      4883e801       sub rax, 1
0x000054f7      741c           je 0x5515
0x000054f9      31f6           xor esi, esi
0x000054fb      0f1f440000     nop dword [rax + rax]
0x00005500      4883c601       add rsi, 1
0x00005504      48d1e8         shr rax, 1
0x00005507      75f7           jne 0x5500
0x00005509      480faffe       imul rdi, rsi
0x0000550d      488d4707       lea rax, [rdi + 7]
0x00005511      48c1e803       shr rax, 3
0x00005515      f3c3           ret
0x00005517      660f1f840000.  nop word [rax + rax]
;-- randperm_new:
0x00005520      4157           push r15
0x00005522      4156           push r14
0x00005524      4155           push r13
0x00005526      4154           push r12
0x00005528      55             push rbp
0x00005529      53             push rbx
0x0000552a      4883ec68       sub rsp, 0x68
0x0000552e      64488b042528.  mov rax, qword fs:[0x28]
0x00005537      4889442458     mov qword [rsp + 0x58], rax
0x0000553c      31c0           xor eax, eax
0x0000553e      4885f6         test rsi, rsi
0x00005541      0f84a1020000   je 0x57e8
0x00005547      4883fe01       cmp rsi, 1
0x0000554b      4989fd         mov r13, rdi
0x0000554e      4989f4         mov r12, rsi
0x00005551      4889d5         mov rbp, rdx
0x00005554      754a           jne 0x55a0
0x00005556      bf08000000     mov edi, 8
0x0000555b      e820160000     call sym.xmalloc
0x00005560      488d75ff       lea rsi, [rbp - 1]
0x00005564      4889c3         mov rbx, rax
0x00005567      4c89ef         mov rdi, r13
0x0000556a      e8c1fdffff     call sym.randint_genmax
0x0000556f      488903         mov qword [rbx], rax
0x00005572      488b542458     mov rdx, qword [rsp + 0x58]
0x00005577      644833142528.  xor rdx, qword fs:[0x28]
0x00005580      4889d8         mov rax, rbx
0x00005583      0f85be020000   jne 0x5847
0x00005589      4883c468       add rsp, 0x68
0x0000558d      5b             pop rbx
0x0000558e      5d             pop rbp
0x0000558f      415c           pop r12
0x00005591      415d           pop r13
0x00005593      415e           pop r14
0x00005595      415f           pop r15
0x00005597      c3             ret
0x00005598      0f1f84000000.  nop dword [rax + rax]
0x000055a0      4881faffff01.  cmp rdx, 0x1ffff
0x000055a7      767f           jbe 0x5628
0x000055a9      4889d0         mov rax, rdx
0x000055ac      31d2           xor edx, edx
0x000055ae      48f7f6         div rsi
0x000055b1      4883f81f       cmp rax, 0x1f
0x000055b5      7671           jbe 0x5628
0x000055b7      4c8b05027a20.  mov r8, qword [reloc.free]              ; [0x20cfc0:8]=0
0x000055be      488d3c36       lea rdi, [rsi + rsi]
0x000055c2      488d0d17ffff.  lea rcx, sym.sparse_cmp                 ; 0x54e0 ; "H\x8b\x06H9\a\x0f\x94\xc0\xc3f\x0f\x1fD"
0x000055c9      488d1500ffff.  lea rdx, sym.sparse_hash                ; 0x54d0 ; "H\x8b\a1\xd2H\xf7\xf6H\x89\xd0\xc3\x0f\x1f@"
0x000055d0      31f6           xor esi, esi
0x000055d2      e8492d0000     call sym.hash_initialize
0x000055d7      4885c0         test rax, rax
0x000055da      4889442408     mov qword [rsp + 8], rax
0x000055df      0f8467020000   je 0x584c
0x000055e5      ba08000000     mov edx, 8
0x000055ea      31c9           xor ecx, ecx
0x000055ec      4889d0         mov rax, rdx
0x000055ef      49f7e4         mul r12
0x000055f2      0f8063020000   jo 0x585b
0x000055f8      4885c0         test rax, rax
0x000055fb      0f884b020000   js 0x584c
0x00005601      4885c9         test rcx, rcx
0x00005604      0f8542020000   jne 0x584c
0x0000560a      4a8d3ce50000.  lea rdi, [r12*8]
0x00005612      e869150000     call sym.xmalloc
0x00005617      c74424040100.  mov dword [rsp + 4], 1
0x0000561f      4889c3         mov rbx, rax
0x00005622      eb62           jmp 0x5686
0x00005624      0f1f4000       nop dword [rax]
0x00005628      ba08000000     mov edx, 8
0x0000562d      31c9           xor ecx, ecx
0x0000562f      4889d0         mov rax, rdx
0x00005632      48f7e5         mul rbp
0x00005635      0f802a020000   jo 0x5865
0x0000563b      4885c0         test rax, rax
0x0000563e      0f8808020000   js 0x584c
0x00005644      4885c9         test rcx, rcx
0x00005647      0f85ff010000   jne 0x584c
0x0000564d      488d3ced0000.  lea rdi, [rbp*8]
0x00005655      e826150000     call sym.xmalloc
0x0000565a      4885ed         test rbp, rbp
0x0000565d      4889c3         mov rbx, rax
0x00005660      7413           je 0x5675
0x00005662      31c0           xor eax, eax
0x00005664      0f1f4000       nop dword [rax]
0x00005668      488904c3       mov qword [rbx + rax*8], rax
0x0000566c      4883c001       add rax, 1
0x00005670      4839c5         cmp rbp, rax
0x00005673      75f3           jne 0x5668
0x00005675      c74424040000.  mov dword [rsp + 4], 0
0x0000567d      48c744240800.  mov qword [rsp + 8], 0
0x00005686      488d45ff       lea rax, [rbp - 1]
0x0000568a      31ed           xor ebp, ebp
0x0000568c      4889442410     mov qword [rsp + 0x10], rax
0x00005691      488d442440     lea rax, [rsp + 0x40]
0x00005696      4889442420     mov qword [rsp + 0x20], rax
0x0000569b      488d442430     lea rax, [rsp + 0x30]
0x000056a0      4889442428     mov qword [rsp + 0x28], rax
0x000056a5      eb28           jmp 0x56cf
0x000056a7      660f1f840000.  nop word [rax + rax]
0x000056b0      4a8d04f3       lea rax, [rbx + r14*8]
0x000056b4      488b34eb       mov rsi, qword [rbx + rbp*8]
0x000056b8      488b08         mov rcx, qword [rax]
0x000056bb      48890ceb       mov qword [rbx + rbp*8], rcx
0x000056bf      4883c501       add rbp, 1
0x000056c3      488930         mov qword [rax], rsi
0x000056c6      4939ec         cmp r12, rbp
0x000056c9      0f86ca000000   jbe 0x5799
0x000056cf      488b742410     mov rsi, qword [rsp + 0x10]
0x000056d4      4c89ef         mov rdi, r13
0x000056d7      4829ee         sub rsi, rbp
0x000056da      e851fcffff     call sym.randint_genmax
0x000056df      8b542404       mov edx, dword [rsp + 4]
0x000056e3      4c8d3428       lea r14, [rax + rbp]
0x000056e7      85d2           test edx, edx
0x000056e9      74c5           je 0x56b0
0x000056eb      488b742420     mov rsi, qword [rsp + 0x20]
0x000056f0      488b7c2408     mov rdi, qword [rsp + 8]
0x000056f5      48896c2440     mov qword [rsp + 0x40], rbp
0x000056fa      48c744244800.  mov qword [rsp + 0x48], 0
0x00005703      e878340000     call sym.hash_delete
0x00005708      488b742428     mov rsi, qword [rsp + 0x28]
0x0000570d      488b7c2408     mov rdi, qword [rsp + 8]
0x00005712      4989c7         mov r15, rax
0x00005715      4c89742430     mov qword [rsp + 0x30], r14
0x0000571a      48c744243800.  mov qword [rsp + 0x38], 0
0x00005723      e858340000     call sym.hash_delete
0x00005728      4d85ff         test r15, r15
0x0000572b      4989c1         mov r9, rax
0x0000572e      0f84dc000000   je 0x5810
0x00005734      4d85c9         test r9, r9
0x00005737      0f84b3000000   je 0x57f0
0x0000573d      4d8b7108       mov r14, qword [r9 + 8]
0x00005741      498b4708       mov rax, qword [r15 + 8]
0x00005745      4d897708       mov qword [r15 + 8], r14
0x00005749      4c89fe         mov rsi, r15
0x0000574c      4c8b742408     mov r14, qword [rsp + 8]
0x00005751      4c894c2418     mov qword [rsp + 0x18], r9
0x00005756      49894108       mov qword [r9 + 8], rax
0x0000575a      4c89f7         mov rdi, r14
0x0000575d      e8be330000     call sym.hash_insert
0x00005762      4885c0         test rax, rax
0x00005765      0f84e1000000   je 0x584c
0x0000576b      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00005770      4c89f7         mov rdi, r14
0x00005773      4c89ce         mov rsi, r9
0x00005776      e8a5330000     call sym.hash_insert
0x0000577b      4885c0         test rax, rax
0x0000577e      0f84c8000000   je 0x584c
0x00005784      498b4708       mov rax, qword [r15 + 8]
0x00005788      488904eb       mov qword [rbx + rbp*8], rax
0x0000578c      4883c501       add rbp, 1
0x00005790      4939ec         cmp r12, rbp
0x00005793      0f8736ffffff   ja 0x56cf
0x00005799      8b442404       mov eax, dword [rsp + 4]
0x0000579d      85c0           test eax, eax
0x0000579f      0f8593000000   jne 0x5838
0x000057a5      ba08000000     mov edx, 8
0x000057aa      31c9           xor ecx, ecx
0x000057ac      4889d0         mov rax, rdx
0x000057af      49f7e4         mul r12
0x000057b2      0f8099000000   jo 0x5851
0x000057b8      4885c0         test rax, rax
0x000057bb      0f888b000000   js 0x584c
0x000057c1      4885c9         test rcx, rcx
0x000057c4      0f8582000000   jne 0x584c
0x000057ca      4a8d34e50000.  lea rsi, [r12*8]
0x000057d2      4889df         mov rdi, rbx
0x000057d5      e806140000     call sym.xrealloc
0x000057da      4889c3         mov rbx, rax
0x000057dd      e990fdffff     jmp 0x5572
0x000057e2      660f1f440000   nop word [rax + rax]
0x000057e8      31db           xor ebx, ebx
0x000057ea      e983fdffff     jmp 0x5572
0x000057ef      90             nop
0x000057f0      bf10000000     mov edi, 0x10
0x000057f5      e886130000     call sym.xmalloc
0x000057fa      4989c1         mov r9, rax
0x000057fd      4c897008       mov qword [rax + 8], r14
0x00005801      4c8930         mov qword [rax], r14
0x00005804      e938ffffff     jmp 0x5741
0x00005809      0f1f80000000.  nop dword [rax]
0x00005810      bf10000000     mov edi, 0x10
0x00005815      4889442418     mov qword [rsp + 0x18], rax
0x0000581a      e861130000     call sym.xmalloc
0x0000581f      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00005824      4989c7         mov r15, rax
0x00005827      48896808       mov qword [rax + 8], rbp
0x0000582b      488928         mov qword [rax], rbp
0x0000582e      e901ffffff     jmp 0x5734
0x00005833      0f1f440000     nop dword [rax + rax]
0x00005838      488b7c2408     mov rdi, qword [rsp + 8]
0x0000583d      e82e2d0000     call sym.hash_free
0x00005842      e92bfdffff     jmp 0x5572
0x00005847      e884c2ffff     call sym.imp.__stack_chk_fail
0x0000584c      e87f150000     call sym.xalloc_die
0x00005851      b901000000     mov ecx, 1
0x00005856      e95dffffff     jmp 0x57b8
0x0000585b      b901000000     mov ecx, 1
0x00005860      e993fdffff     jmp 0x55f8
0x00005865      b901000000     mov ecx, 1
0x0000586a      e9ccfdffff     jmp 0x563b
0x0000586f      90             nop
;-- randread_error:
0x00005870      55             push rbp
0x00005871      53             push rbx
0x00005872      4883ec08       sub rsp, 8
0x00005876      4885ff         test rdi, rdi
0x00005879      743d           je 0x58b8
0x0000587b      e810faffff     call sym.quote
0x00005880      4889c5         mov rbp, rax
0x00005883      e828c1ffff     call sym.imp.__errno_location
0x00005888      833800         cmp dword [rax], 0
0x0000588b      4889c3         mov rbx, rax
0x0000588e      ba05000000     mov edx, 5
0x00005893      7428           je 0x58bd
0x00005895      488d35fc4300.  lea rsi, str.s:_read_error              ; 0x9c98 ; "%s: read error"
0x0000589c      31ff           xor edi, edi
0x0000589e      e8fdc1ffff     call sym.imp.dcgettext
0x000058a3      8b3d6f772000   mov edi, dword [obj.exit_failure]       ; [0x20d018:4]=1
0x000058a9      8b33           mov esi, dword [rbx]
0x000058ab      4889c2         mov rdx, rax
0x000058ae      4889e9         mov rcx, rbp
0x000058b1      31c0           xor eax, eax
0x000058b3      e838c4ffff     call sym.imp.error
0x000058b8      e8e3c0ffff     call sym.imp.abort
0x000058bd      488d35c44300.  lea rsi, [0x00009c88]                   ; "%s: end of file"
0x000058c4      31ff           xor edi, edi
0x000058c6      e8d5c1ffff     call sym.imp.dcgettext
0x000058cb      ebd6           jmp 0x58a3
0x000058cd      0f1f00         nop dword [rax]
;-- randread_new:
0x000058d0      4157           push r15
0x000058d2      4156           push r14
0x000058d4      4155           push r13
0x000058d6      4154           push r12
0x000058d8      55             push rbp
0x000058d9      53             push rbx
0x000058da      4883ec38       sub rsp, 0x38
0x000058de      64488b042528.  mov rax, qword fs:[0x28]
0x000058e7      4889442428     mov qword [rsp + 0x28], rax
0x000058ec      31c0           xor eax, eax
0x000058ee      4885f6         test rsi, rsi
0x000058f1      0f8421010000   je 0x5a18
0x000058f7      4885ff         test rdi, rdi
0x000058fa      4989fc         mov r12, rdi
0x000058fd      4889f5         mov rbp, rsi
0x00005900      747e           je 0x5980
0x00005902      488d35ab4300.  lea rsi, [0x00009cb4]                   ; "rb"
0x00005909      e8a2200000     call sym.fopen_safer
0x0000590e      4885c0         test rax, rax
0x00005911      4989c5         mov r13, rax
0x00005914      0f84fe010000   je 0x5b18
0x0000591a      bf38100000     mov edi, 0x1038
0x0000591f      e85c120000     call sym.xmalloc
0x00005924      4889c3         mov rbx, rax
0x00005927      4c8928         mov qword [rax], r13
0x0000592a      488d053fffff.  lea rax, sym.randread_error             ; 0x5870 ; "USH\x83\xec\bH\x85\xfft=\xe8\x10\xfa\xff\xffH\x89\xc5\xe8(\xc1\xff\xff\x838"
0x00005931      4881fd001000.  cmp rbp, 0x1000
0x00005938      b900100000     mov ecx, 0x1000
0x0000593d      488d7318       lea rsi, [rbx + 0x18]
0x00005941      480f46cd       cmovbe rcx, rbp
0x00005945      48894308       mov qword [rbx + 8], rax
0x00005949      4c896310       mov qword [rbx + 0x10], r12
0x0000594d      31d2           xor edx, edx
0x0000594f      4c89ef         mov rdi, r13
0x00005952      e889c3ffff     call sym.imp.setvbuf
0x00005957      488b542428     mov rdx, qword [rsp + 0x28]
0x0000595c      644833142528.  xor rdx, qword fs:[0x28]
0x00005965      4889d8         mov rax, rbx
0x00005968      0f85b1010000   jne 0x5b1f
0x0000596e      4883c438       add rsp, 0x38
0x00005972      5b             pop rbx
0x00005973      5d             pop rbp
0x00005974      415c           pop r12
0x00005976      415d           pop r13
0x00005978      415e           pop r14
0x0000597a      415f           pop r15
0x0000597c      c3             ret
0x0000597d      0f1f00         nop dword [rax]
0x00005980      bf38100000     mov edi, 0x1038
0x00005985      e8f6110000     call sym.xmalloc
0x0000598a      4889c3         mov rbx, rax
0x0000598d      48c700000000.  mov qword [rax], 0
0x00005994      488d05d5feff.  lea rax, sym.randread_error             ; 0x5870 ; "USH\x83\xec\bH\x85\xfft=\xe8\x10\xfa\xff\xffH\x89\xc5\xe8(\xc1\xff\xff\x838"
0x0000599b      488d3d054300.  lea rdi, str.dev_urandom                ; 0x9ca7 ; "/dev/urandom"
0x000059a2      31f6           xor esi, esi
0x000059a4      48c743100000.  mov qword [rbx + 0x10], 0
0x000059ac      48894308       mov qword [rbx + 8], rax
0x000059b0      48c743180000.  mov qword [rbx + 0x18], 0
0x000059b8      31c0           xor eax, eax
0x000059ba      e851c3ffff     call sym.imp.open
0x000059bf      85c0           test eax, eax
0x000059c1      4c8d6b20       lea r13, [rbx + 0x20]
0x000059c5      4189c7         mov r15d, eax
0x000059c8      787e           js 0x5a48
0x000059ca      4881fd000800.  cmp rbp, 0x800
0x000059d1      4889ea         mov rdx, rbp
0x000059d4      41be00080000   mov r14d, 0x800
0x000059da      490f47d6       cmova rdx, r14
0x000059de      b918100000     mov ecx, 0x1018
0x000059e3      4c89ee         mov rsi, r13
0x000059e6      89c7           mov edi, eax
0x000059e8      e813c0ffff     call sym.imp.__read_chk
0x000059ed      4489ff         mov edi, r15d
0x000059f0      4889c5         mov rbp, rax
0x000059f3      e8a8c1ffff     call sym.imp.close
0x000059f8      4881fdff0700.  cmp rbp, 0x7ff
0x000059ff      0f8e1f010000   jle 0x5b24
0x00005a05      4c89ef         mov rdi, r13
0x00005a08      e893060000     call sym.isaac_seed
0x00005a0d      e945ffffff     jmp 0x5957
0x00005a12      660f1f440000   nop word [rax + rax]
0x00005a18      bf38100000     mov edi, 0x1038
0x00005a1d      e85e110000     call sym.xmalloc
0x00005a22      4889c3         mov rbx, rax
0x00005a25      48c700000000.  mov qword [rax], 0
0x00005a2c      488d053dfeff.  lea rax, sym.randread_error             ; 0x5870 ; "USH\x83\xec\bH\x85\xfft=\xe8\x10\xfa\xff\xffH\x89\xc5\xe8(\xc1\xff\xff\x838"
0x00005a33      48c743100000.  mov qword [rbx + 0x10], 0
0x00005a3b      48894308       mov qword [rbx + 8], rax
0x00005a3f      e913ffffff     jmp 0x5957
0x00005a44      0f1f4000       nop dword [rax]
0x00005a48      4c8d642410     lea r12, [rsp + 0x10]
0x00005a4d      31f6           xor esi, esi
0x00005a4f      41be18000000   mov r14d, 0x18
0x00005a55      4c89e7         mov rdi, r12
0x00005a58      e8f3c0ffff     call sym.imp.gettimeofday
0x00005a5d      660f6f442410   movdqa xmm0, xmmword [rsp + 0x10]
0x00005a63      0f114320       movups xmmword [rbx + 0x20], xmm0
0x00005a67      e8d4bfffff     call sym.imp.getpid
0x00005a6c      894330         mov dword [rbx + 0x30], eax
0x00005a6f      89442410       mov dword [rsp + 0x10], eax
0x00005a73      e8e8c2ffff     call sym.imp.getppid
0x00005a78      89442410       mov dword [rsp + 0x10], eax
0x00005a7c      894334         mov dword [rbx + 0x34], eax
0x00005a7f      bd00080000     mov ebp, 0x800
0x00005a84      b804000000     mov eax, 4
0x00005a89      4c29f5         sub rbp, r14
0x00005a8c      4883fd04       cmp rbp, 4
0x00005a90      480f47e8       cmova rbp, rax
0x00005a94      e847c0ffff     call sym.imp.getuid
0x00005a99      85ed           test ebp, ebp
0x00005a9b      89442410       mov dword [rsp + 0x10], eax
0x00005a9f      4b8d4c3500     lea rcx, [r13 + r14]
0x00005aa4      89ee           mov esi, ebp
0x00005aa6      7414           je 0x5abc
0x00005aa8      31c0           xor eax, eax
0x00005aaa      89c2           mov edx, eax
0x00005aac      83c001         add eax, 1
0x00005aaf      410fb63c14     movzx edi, byte [r12 + rdx]
0x00005ab4      39f0           cmp eax, esi
0x00005ab6      40883c11       mov byte [rcx + rdx], dil
0x00005aba      72ee           jb 0x5aaa
0x00005abc      4c01f5         add rbp, r14
0x00005abf      4881fdff0700.  cmp rbp, 0x7ff
0x00005ac6      0f8739ffffff   ja 0x5a05
0x00005acc      e85fc1ffff     call sym.imp.getgid
0x00005ad1      89442410       mov dword [rsp + 0x10], eax
0x00005ad5      b800080000     mov eax, 0x800
0x00005ada      ba04000000     mov edx, 4
0x00005adf      4829e8         sub rax, rbp
0x00005ae2      498d4c2d00     lea rcx, [r13 + rbp]
0x00005ae7      4883f804       cmp rax, 4
0x00005aeb      480f47c2       cmova rax, rdx
0x00005aef      85c0           test eax, eax
0x00005af1      89c6           mov esi, eax
0x00005af3      0f840cffffff   je 0x5a05
0x00005af9      31c0           xor eax, eax
0x00005afb      89c2           mov edx, eax
0x00005afd      83c001         add eax, 1
0x00005b00      410fb63c14     movzx edi, byte [r12 + rdx]
0x00005b05      39f0           cmp eax, esi
0x00005b07      40883c11       mov byte [rcx + rdx], dil
0x00005b0b      72ee           jb 0x5afb
0x00005b0d      e9f3feffff     jmp 0x5a05
0x00005b12      660f1f440000   nop word [rax + rax]
0x00005b18      31db           xor ebx, ebx
0x00005b1a      e938feffff     jmp 0x5957
0x00005b1f      e8acbfffff     call sym.imp.__stack_chk_fail
0x00005b24      4885ed         test rbp, rbp
0x00005b27      4d89f7         mov r15, r14
0x00005b2a      b810000000     mov eax, 0x10
0x00005b2f      490f48ec       cmovs rbp, r12
0x00005b33      4c8d642410     lea r12, [rsp + 0x10]
0x00005b38      4929ef         sub r15, rbp
0x00005b3b      4983ff10       cmp r15, 0x10
0x00005b3f      4c89e7         mov rdi, r12
0x00005b42      4c0f47f8       cmova r15, rax
0x00005b46      31f6           xor esi, esi
0x00005b48      e803c0ffff     call sym.imp.gettimeofday
0x00005b4d      498d442d00     lea rax, [r13 + rbp]
0x00005b52      4c01fd         add rbp, r15
0x00005b55      4489f9         mov ecx, r15d
0x00005b58      4881fdff0700.  cmp rbp, 0x7ff
0x00005b5f      4c89e6         mov rsi, r12
0x00005b62      4889c7         mov rdi, rax
0x00005b65      f3a4           rep movsb byte [rdi], byte ptr [rsi]
0x00005b67      0f8798feffff   ja 0x5a05
0x00005b6d      4d89f7         mov r15, r14
0x00005b70      41b804000000   mov r8d, 4
0x00005b76      4929ef         sub r15, rbp
0x00005b79      4c89442408     mov qword [rsp + 8], r8
0x00005b7e      4983ff04       cmp r15, 4
0x00005b82      4d0f47f8       cmova r15, r8
0x00005b86      4a8d543d00     lea rdx, [rbp + r15]
0x00005b8b      4c01ed         add rbp, r13
0x00005b8e      48891424       mov qword [rsp], rdx
0x00005b92      e8a9beffff     call sym.imp.getpid
0x00005b97      488b1424       mov rdx, qword [rsp]
0x00005b9b      89442410       mov dword [rsp + 0x10], eax
0x00005b9f      4489f9         mov ecx, r15d
0x00005ba2      4889ef         mov rdi, rbp
0x00005ba5      4c89e6         mov rsi, r12
0x00005ba8      4c8b442408     mov r8, qword [rsp + 8]
0x00005bad      f3a4           rep movsb byte [rdi], byte ptr [rsi]
0x00005baf      4881faff0700.  cmp rdx, 0x7ff
0x00005bb6      0f8f49feffff   jg 0x5a05
0x00005bbc      4929d6         sub r14, rdx
0x00005bbf      4983fe04       cmp r14, 4
0x00005bc3      4d0f47f0       cmova r14, r8
0x00005bc7      e894c1ffff     call sym.imp.getppid
0x00005bcc      488b1424       mov rdx, qword [rsp]
0x00005bd0      89442410       mov dword [rsp + 0x10], eax
0x00005bd4      4489f1         mov ecx, r14d
0x00005bd7      4c89e6         mov rsi, r12
0x00005bda      498d441500     lea rax, [r13 + rdx]
0x00005bdf      4901d6         add r14, rdx
0x00005be2      4981feff0700.  cmp r14, 0x7ff
0x00005be9      4889c7         mov rdi, rax
0x00005bec      f3a4           rep movsb byte [rdi], byte ptr [rsi]
0x00005bee      0f8711feffff   ja 0x5a05
0x00005bf4      e986feffff     jmp 0x5a7f
0x00005bf9      0f1f80000000.  nop dword [rax]
;-- randread_set_handler:
0x00005c00      48897708       mov qword [rdi + 8], rsi
0x00005c04      c3             ret
0x00005c05      90             nop
0x00005c06      662e0f1f8400.  nop word cs:[rax + rax]
;-- randread_set_handler_arg:
0x00005c10      48897710       mov qword [rdi + 0x10], rsi
0x00005c14      c3             ret
0x00005c15      90             nop
0x00005c16      662e0f1f8400.  nop word cs:[rax + rax]
;-- randread:
0x00005c20      4157           push r15
0x00005c22      4156           push r14
0x00005c24      4155           push r13
0x00005c26      4154           push r12
0x00005c28      4989fc         mov r12, rdi
0x00005c2b      55             push rbp
0x00005c2c      53             push rbx
0x00005c2d      4889d5         mov rbp, rdx
0x00005c30      4889f3         mov rbx, rsi
0x00005c33      4883ec18       sub rsp, 0x18
0x00005c37      488b0f         mov rcx, qword [rdi]
0x00005c3a      4885c9         test rcx, rcx
0x00005c3d      48894c2408     mov qword [rsp + 8], rcx
0x00005c42      7464           je 0x5ca8
0x00005c44      e867bdffff     call sym.imp.__errno_location
0x00005c49      488b4c2408     mov rcx, qword [rsp + 8]
0x00005c4e      4989c5         mov r13, rax
0x00005c51      eb23           jmp 0x5c76
0x00005c53      0f1f440000     nop dword [rax + rax]
0x00005c58      498b0424       mov rax, qword [r12]
0x00005c5c      498b7c2410     mov rdi, qword [r12 + 0x10]
0x00005c61      8b00           mov eax, dword [rax]
0x00005c63      83e020         and eax, 0x20                           ; "@"
0x00005c66      0f45c2         cmovne eax, edx
0x00005c69      41894500       mov dword [r13], eax
0x00005c6d      41ff542408     call qword [r12 + 8]
0x00005c72      498b0c24       mov rcx, qword [r12]
0x00005c76      4889ea         mov rdx, rbp
0x00005c79      4889df         mov rdi, rbx
0x00005c7c      be01000000     mov esi, 1
0x00005c81      e8cabdffff     call sym.imp.fread_unlocked
0x00005c86      4801c3         add rbx, rax
0x00005c89      4829c5         sub rbp, rax
0x00005c8c      418b5500       mov edx, dword [r13]
0x00005c90      75c6           jne 0x5c58
0x00005c92      4883c418       add rsp, 0x18
0x00005c96      5b             pop rbx
0x00005c97      5d             pop rbp
0x00005c98      415c           pop r12
0x00005c9a      415d           pop r13
0x00005c9c      415e           pop r14
0x00005c9e      415f           pop r15
0x00005ca0      c3             ret
0x00005ca1      0f1f80000000.  nop dword [rax]
0x00005ca8      4c8b7718       mov r14, qword [rdi + 0x18]
0x00005cac      488d87380800.  lea rax, [rdi + 0x838]
0x00005cb3      4c8d6f20       lea r13, [rdi + 0x20]
0x00005cb7      4889442408     mov qword [rsp + 8], rax
0x00005cbc      4c39f2         cmp rdx, r14
0x00005cbf      0f86dd000000   jbe 0x5da2
0x00005cc5      be00080000     mov esi, 0x800
0x00005cca      4889df         mov rdi, rbx
0x00005ccd      4c89f2         mov rdx, r14
0x00005cd0      4c29f6         sub rsi, r14
0x00005cd3      4803742408     add rsi, qword [rsp + 8]
0x00005cd8      4c01f3         add rbx, r14
0x00005cdb      4c29f5         sub rbp, r14
0x00005cde      e82dbfffff     call sym.imp.memcpy
0x00005ce3      f6c307         test bl, 7
0x00005ce6      7568           jne 0x5d50
0x00005ce8      4881fdff0700.  cmp rbp, 0x7ff
0x00005cef      0f869e000000   jbe 0x5d93
0x00005cf5      4c8dbd00f8ff.  lea r15, [rbp - 0x800]
0x00005cfc      4d89fe         mov r14, r15
0x00005cff      4181e6ff0700.  and r14d, 0x7ff
0x00005d06      eb14           jmp 0x5d1c
0x00005d08      0f1f84000000.  nop dword [rax + rax]
0x00005d10      4d39f7         cmp r15, r14
0x00005d13      743b           je 0x5d50
0x00005d15      4981ef000800.  sub r15, 0x800
0x00005d1c      4889de         mov rsi, rbx
0x00005d1f      4c89ef         mov rdi, r13
0x00005d22      4881c3000800.  add rbx, 0x800
0x00005d29      e8e2000000     call sym.isaac_refill
0x00005d2e      4d85ff         test r15, r15
0x00005d31      4c89fd         mov rbp, r15
0x00005d34      75da           jne 0x5d10
0x00005d36      49c744241800.  mov qword [r12 + 0x18], 0
0x00005d3f      4883c418       add rsp, 0x18
0x00005d43      5b             pop rbx
0x00005d44      5d             pop rbp
0x00005d45      415c           pop r12
0x00005d47      415d           pop r13
0x00005d49      415e           pop r14
0x00005d4b      415f           pop r15
0x00005d4d      c3             ret
0x00005d4e      6690           nop
0x00005d50      488b742408     mov rsi, qword [rsp + 8]
0x00005d55      4c89ef         mov rdi, r13
0x00005d58      41be00080000   mov r14d, 0x800
0x00005d5e      e8ad000000     call sym.isaac_refill
0x00005d63      4881fd000800.  cmp rbp, 0x800
0x00005d6a      0f8755ffffff   ja 0x5cc5
0x00005d70      41be00080000   mov r14d, 0x800
0x00005d76      488b742408     mov rsi, qword [rsp + 8]
0x00005d7b      4889ea         mov rdx, rbp
0x00005d7e      4889df         mov rdi, rbx
0x00005d81      4929ee         sub r14, rbp
0x00005d84      e887beffff     call sym.imp.memcpy
0x00005d89      4d89742418     mov qword [r12 + 0x18], r14
0x00005d8e      e9fffeffff     jmp 0x5c92
0x00005d93      488b742408     mov rsi, qword [rsp + 8]
0x00005d98      4c89ef         mov rdi, r13
0x00005d9b      e870000000     call sym.isaac_refill
0x00005da0      ebce           jmp 0x5d70
0x00005da2      4989c7         mov r15, rax
0x00005da5      4d29f7         sub r15, r14
0x00005da8      498d87000800.  lea rax, [r15 + 0x800]
0x00005daf      4889442408     mov qword [rsp + 8], rax
0x00005db4      ebc0           jmp 0x5d76
0x00005db6      662e0f1f8400.  nop word cs:[rax + rax]
;-- randread_free:
0x00005dc0      55             push rbp
0x00005dc1      53             push rbx
0x00005dc2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005dc9      4889fb         mov rbx, rdi
0x00005dcc      be38100000     mov esi, 0x1038
0x00005dd1      4883ec08       sub rsp, 8
0x00005dd5      488b2f         mov rbp, qword [rdi]
0x00005dd8      e823bfffff     call sym.imp.__explicit_bzero_chk
0x00005ddd      4889df         mov rdi, rbx
0x00005de0      e8ebbfffff     call sym..plt.got
0x00005de5      4885ed         test rbp, rbp
0x00005de8      7416           je 0x5e00
0x00005dea      4883c408       add rsp, 8
0x00005dee      4889ef         mov rdi, rbp
0x00005df1      5b             pop rbx
0x00005df2      5d             pop rbp
0x00005df3      e988190000     jmp sym.rpl_fclose
0x00005df8      0f1f84000000.  nop dword [rax + rax]
0x00005e00      4883c408       add rsp, 8
0x00005e04      31c0           xor eax, eax
0x00005e06      5b             pop rbx
0x00005e07      5d             pop rbp
0x00005e08      c3             ret
0x00005e09      0f1f80000000.  nop dword [rax]
;-- isaac_refill:
0x00005e10      488b87100800.  mov rax, qword [rdi + 0x810]
0x00005e17      488b97000800.  mov rdx, qword [rdi + 0x800]
0x00005e1e      4c8d8f000400.  lea r9, [rdi + 0x400]
0x00005e25      488d4801       lea rcx, [rax + 1]
0x00005e29      4889f8         mov rax, rdi
0x00005e2c      48898f100800.  mov qword [rdi + 0x810], rcx
0x00005e33      48038f080800.  add rcx, qword [rdi + 0x808]
0x00005e3a      660f1f440000   nop word [rax + rax]
0x00005e40      4989d0         mov r8, rdx
0x00005e43      49c1e015       shl r8, 0x15
0x00005e47      4c31c2         xor rdx, r8
0x00005e4a      4c8b00         mov r8, qword [rax]
0x00005e4d      48f7d2         not rdx
0x00005e50      480390000400.  add rdx, qword [rax + 0x400]
0x00005e57      4d89c2         mov r10, r8
0x00005e5a      4181e2f80700.  and r10d, 0x7f8
0x00005e61      4e8b1c17       mov r11, qword [rdi + r10]
0x00005e65      4989d2         mov r10, rdx
0x00005e68      49c1ea05       shr r10, 5
0x00005e6c      4901d3         add r11, rdx
0x00005e6f      4c31d2         xor rdx, r10
0x00005e72      4c01d9         add rcx, r11
0x00005e75      488908         mov qword [rax], rcx
0x00005e78      48c1e908       shr rcx, 8
0x00005e7c      81e1f8070000   and ecx, 0x7f8
0x00005e82      4c8b1c0f       mov r11, qword [rdi + rcx]
0x00005e86      4d01c3         add r11, r8
0x00005e89      4c891e         mov qword [rsi], r11
0x00005e8c      480390080400.  add rdx, qword [rax + 0x408]
0x00005e93      488b4808       mov rcx, qword [rax + 8]
0x00005e97      4989d2         mov r10, rdx
0x00005e9a      4889ca         mov rdx, rcx
0x00005e9d      81e2f8070000   and edx, 0x7f8
0x00005ea3      4c8b0417       mov r8, qword [rdi + rdx]
0x00005ea7      4c89d2         mov rdx, r10
0x00005eaa      48c1e20c       shl rdx, 0xc
0x00005eae      4c31d2         xor rdx, r10
0x00005eb1      4d01d0         add r8, r10
0x00005eb4      4d01d8         add r8, r11
0x00005eb7      4c894008       mov qword [rax + 8], r8
0x00005ebb      49c1e808       shr r8, 8
0x00005ebf      4181e0f80700.  and r8d, 0x7f8
0x00005ec6      4a030c07       add rcx, qword [rdi + r8]
0x00005eca      48894e08       mov qword [rsi + 8], rcx
0x00005ece      4c8b4010       mov r8, qword [rax + 0x10]
0x00005ed2      4989cb         mov r11, rcx
0x00005ed5      480390100400.  add rdx, qword [rax + 0x410]
0x00005edc      4c89c1         mov rcx, r8
0x00005edf      81e1f8070000   and ecx, 0x7f8
0x00005ee5      4c8b140f       mov r10, qword [rdi + rcx]
0x00005ee9      4901d2         add r10, rdx
0x00005eec      4c89d1         mov rcx, r10
0x00005eef      4c01d9         add rcx, r11
0x00005ef2      48894810       mov qword [rax + 0x10], rcx
0x00005ef6      48c1e908       shr rcx, 8
0x00005efa      81e1f8070000   and ecx, 0x7f8
0x00005f00      4c8b140f       mov r10, qword [rdi + rcx]
0x00005f04      4889d1         mov rcx, rdx
0x00005f07      48c1e921       shr rcx, 0x21
0x00005f0b      4831ca         xor rdx, rcx
0x00005f0e      4d01c2         add r10, r8
0x00005f11      4c895610       mov qword [rsi + 0x10], r10
0x00005f15      488b4818       mov rcx, qword [rax + 0x18]
0x00005f19      480390180400.  add rdx, qword [rax + 0x418]
0x00005f20      4989c8         mov r8, rcx
0x00005f23      4181e0f80700.  and r8d, 0x7f8
0x00005f2a      4e8b1c07       mov r11, qword [rdi + r8]
0x00005f2e      4901d3         add r11, rdx
0x00005f31      4d89d8         mov r8, r11
0x00005f34      4d01d0         add r8, r10
0x00005f37      4883c020       add rax, 0x20                           ; "@"
0x00005f3b      4883c620       add rsi, 0x20                           ; "@"
0x00005f3f      4c8940f8       mov qword [rax - 8], r8
0x00005f43      49c1e808       shr r8, 8
0x00005f47      4181e0f80700.  and r8d, 0x7f8
0x00005f4e      4a030c07       add rcx, qword [rdi + r8]
0x00005f52      48894ef8       mov qword [rsi - 8], rcx
0x00005f56      4c39c8         cmp rax, r9
0x00005f59      0f82e1feffff   jb 0x5e40
0x00005f5f      4c8d8f000800.  lea r9, [rdi + 0x800]
0x00005f66      662e0f1f8400.  nop word cs:[rax + rax]
0x00005f70      4989d0         mov r8, rdx
0x00005f73      49c1e015       shl r8, 0x15
0x00005f77      4c31c2         xor rdx, r8
0x00005f7a      4c8b00         mov r8, qword [rax]
0x00005f7d      48f7d2         not rdx
0x00005f80      48039000fcff.  add rdx, qword [rax - 0x400]
0x00005f87      4d89c2         mov r10, r8
0x00005f8a      4181e2f80700.  and r10d, 0x7f8
0x00005f91      4e8b1c17       mov r11, qword [rdi + r10]
0x00005f95      4989d2         mov r10, rdx
0x00005f98      49c1ea05       shr r10, 5
0x00005f9c      4901d3         add r11, rdx
0x00005f9f      4c31d2         xor rdx, r10
0x00005fa2      4c01d9         add rcx, r11
0x00005fa5      488908         mov qword [rax], rcx
0x00005fa8      48c1e908       shr rcx, 8
0x00005fac      81e1f8070000   and ecx, 0x7f8
0x00005fb2      4c8b1c0f       mov r11, qword [rdi + rcx]
0x00005fb6      4d01c3         add r11, r8
0x00005fb9      4c891e         mov qword [rsi], r11
0x00005fbc      48039008fcff.  add rdx, qword [rax - 0x3f8]
0x00005fc3      488b4808       mov rcx, qword [rax + 8]
0x00005fc7      4989d2         mov r10, rdx
0x00005fca      4889ca         mov rdx, rcx
0x00005fcd      81e2f8070000   and edx, 0x7f8
0x00005fd3      4c8b0417       mov r8, qword [rdi + rdx]
0x00005fd7      4c89d2         mov rdx, r10
0x00005fda      48c1e20c       shl rdx, 0xc
0x00005fde      4c31d2         xor rdx, r10
0x00005fe1      4d01d0         add r8, r10
0x00005fe4      4d01d8         add r8, r11
0x00005fe7      4c894008       mov qword [rax + 8], r8
0x00005feb      49c1e808       shr r8, 8
0x00005fef      4181e0f80700.  and r8d, 0x7f8
0x00005ff6      4a030c07       add rcx, qword [rdi + r8]
0x00005ffa      48894e08       mov qword [rsi + 8], rcx
0x00005ffe      4c8b4010       mov r8, qword [rax + 0x10]
0x00006002      4989cb         mov r11, rcx
0x00006005      48039010fcff.  add rdx, qword [rax - 0x3f0]
0x0000600c      4c89c1         mov rcx, r8
0x0000600f      81e1f8070000   and ecx, 0x7f8
0x00006015      4c8b140f       mov r10, qword [rdi + rcx]
0x00006019      4901d2         add r10, rdx
0x0000601c      4c89d1         mov rcx, r10
0x0000601f      4c01d9         add rcx, r11
0x00006022      48894810       mov qword [rax + 0x10], rcx
0x00006026      48c1e908       shr rcx, 8
0x0000602a      81e1f8070000   and ecx, 0x7f8
0x00006030      4c8b140f       mov r10, qword [rdi + rcx]
0x00006034      4889d1         mov rcx, rdx
0x00006037      48c1e921       shr rcx, 0x21
0x0000603b      4831ca         xor rdx, rcx
0x0000603e      4d01c2         add r10, r8
0x00006041      4c895610       mov qword [rsi + 0x10], r10
0x00006045      488b4818       mov rcx, qword [rax + 0x18]
0x00006049      48039018fcff.  add rdx, qword [rax - 0x3e8]
0x00006050      4989c8         mov r8, rcx
0x00006053      4181e0f80700.  and r8d, 0x7f8
0x0000605a      4e8b1c07       mov r11, qword [rdi + r8]
0x0000605e      4901d3         add r11, rdx
0x00006061      4d89d8         mov r8, r11
0x00006064      4d01d0         add r8, r10
0x00006067      4883c020       add rax, 0x20                           ; "@"
0x0000606b      4883c620       add rsi, 0x20                           ; "@"
0x0000606f      4c8940f8       mov qword [rax - 8], r8
0x00006073      49c1e808       shr r8, 8
0x00006077      4181e0f80700.  and r8d, 0x7f8
0x0000607e      4a030c07       add rcx, qword [rdi + r8]
0x00006082      48894ef8       mov qword [rsi - 8], rcx
0x00006086      4c39c8         cmp rax, r9
0x00006089      0f82e1feffff   jb 0x5f70
0x0000608f      488997000800.  mov qword [rdi + 0x800], rdx
0x00006096      48898f080800.  mov qword [rdi + 0x808], rcx
0x0000609d      c3             ret
0x0000609e      6690           nop
;-- isaac_seed:
0x000060a0      4155           push r13
0x000060a2      4154           push r12
0x000060a4      4c8da7000800.  lea r12, [rdi + 0x800]
0x000060ab      55             push rbp
0x000060ac      4889fa         mov rdx, rdi
0x000060af      53             push rbx
0x000060b0      4889f8         mov rax, rdi
0x000060b3      48b9abc0446c.  movabs rcx, 0x98f5704f6c44c0ab
0x000060bd      49baed89fccb.  movabs r10, 0xae985bf2cbfc89ed
0x000060c7      48bd1593a0a5.  movabs rbp, 0x48fe4a0fa5a09315
0x000060d1      48becee05583.  movabs rsi, 0x82f053db8355e0ce
0x000060db      49b82455594a.  movabs r8, 0xb29b2e824a595524
0x000060e5      48bba012473d.  movabs rbx, 0x8c0ea5053d4712a0
0x000060ef      49bb62c83ac7.  movabs r11, 0xb9f8b322c73ac862
0x000060f9      49b97c4b88a2.  movabs r9, 0x647c4677a2884b7c
0x00006103      0f1f440000     nop dword [rax + rax]
0x00006108      48037020       add rsi, qword [rax + 0x20]
0x0000610c      48034838       add rcx, qword [rax + 0x38]
0x00006110      4c8b28         mov r13, qword [rax]
0x00006113      48036828       add rbp, qword [rax + 0x28]
0x00006117      4c035030       add r10, qword [rax + 0x30]
0x0000611b      4929f5         sub r13, rsi
0x0000611e      4d01e9         add r9, r13
0x00006121      4989cd         mov r13, rcx
0x00006124      49c1ed09       shr r13, 9
0x00006128      4c01c9         add rcx, r9
0x0000612b      4c31ed         xor rbp, r13
0x0000612e      4c8b6808       mov r13, qword [rax + 8]
0x00006132      4929ed         sub r13, rbp
0x00006135      4d01eb         add r11, r13
0x00006138      4d89cd         mov r13, r9
0x0000613b      49c1e509       shl r13, 9
0x0000613f      4d01d9         add r9, r11
0x00006142      4d31ea         xor r10, r13
0x00006145      4c8b6810       mov r13, qword [rax + 0x10]
0x00006149      4d29d5         sub r13, r10
0x0000614c      4c01eb         add rbx, r13
0x0000614f      4d89dd         mov r13, r11
0x00006152      49c1ed17       shr r13, 0x17
0x00006156      4901db         add r11, rbx
0x00006159      4c31e9         xor rcx, r13
0x0000615c      4c8b6818       mov r13, qword [rax + 0x18]
0x00006160      4929cd         sub r13, rcx
0x00006163      4d01e8         add r8, r13
0x00006166      4989dd         mov r13, rbx
0x00006169      49c1e50f       shl r13, 0xf
0x0000616d      4c01c3         add rbx, r8
0x00006170      4d31e9         xor r9, r13
0x00006173      4d89c5         mov r13, r8
0x00006176      4c29ce         sub rsi, r9
0x00006179      49c1ed0e       shr r13, 0xe
0x0000617d      4c8908         mov qword [rax], r9
0x00006180      4d31eb         xor r11, r13
0x00006183      4989f5         mov r13, rsi
0x00006186      4901f0         add r8, rsi
0x00006189      4c29dd         sub rbp, r11
0x0000618c      49c1e514       shl r13, 0x14
0x00006190      4c895808       mov qword [rax + 8], r11
0x00006194      4c31eb         xor rbx, r13
0x00006197      4c8d2c2e       lea r13, [rsi + rbp]
0x0000619b      4889ee         mov rsi, rbp
0x0000619e      4929da         sub r10, rbx
0x000061a1      48c1ee11       shr rsi, 0x11
0x000061a5      48895810       mov qword [rax + 0x10], rbx
0x000061a9      4931f0         xor r8, rsi
0x000061ac      4c89d6         mov rsi, r10
0x000061af      4c01d5         add rbp, r10
0x000061b2      4c29c1         sub rcx, r8
0x000061b5      48c1e60e       shl rsi, 0xe
0x000061b9      4c894018       mov qword [rax + 0x18], r8
0x000061bd      4c31ee         xor rsi, r13
0x000061c0      4901ca         add r10, rcx
0x000061c3      48896828       mov qword [rax + 0x28], rbp
0x000061c7      48897020       mov qword [rax + 0x20], rsi
0x000061cb      4c895030       mov qword [rax + 0x30], r10
0x000061cf      4883c040       add rax, 0x40                           ; segment.PHDR
0x000061d3      488948f8       mov qword [rax - 8], rcx
0x000061d7      4939c4         cmp r12, rax
0x000061da      0f8528ffffff   jne 0x6108
0x000061e0      48037220       add rsi, qword [rdx + 0x20]
0x000061e4      48034a38       add rcx, qword [rdx + 0x38]
0x000061e8      4c8b22         mov r12, qword [rdx]
0x000061eb      48036a28       add rbp, qword [rdx + 0x28]
0x000061ef      4c035230       add r10, qword [rdx + 0x30]
0x000061f3      4929f4         sub r12, rsi
0x000061f6      4d01e1         add r9, r12
0x000061f9      4989cc         mov r12, rcx
0x000061fc      49c1ec09       shr r12, 9
0x00006200      4c01c9         add rcx, r9
0x00006203      4c31e5         xor rbp, r12
0x00006206      4c8b6208       mov r12, qword [rdx + 8]
0x0000620a      4929ec         sub r12, rbp
0x0000620d      4d01e3         add r11, r12
0x00006210      4d89cc         mov r12, r9
0x00006213      49c1e409       shl r12, 9
0x00006217      4d01d9         add r9, r11
0x0000621a      4d31e2         xor r10, r12
0x0000621d      4c8b6210       mov r12, qword [rdx + 0x10]
0x00006221      4d29d4         sub r12, r10
0x00006224      4c01e3         add rbx, r12
0x00006227      4d89dc         mov r12, r11
0x0000622a      49c1ec17       shr r12, 0x17
0x0000622e      4901db         add r11, rbx
0x00006231      4c31e1         xor rcx, r12
0x00006234      4c8b6218       mov r12, qword [rdx + 0x18]
0x00006238      4929cc         sub r12, rcx
0x0000623b      4d01e0         add r8, r12
0x0000623e      4989dc         mov r12, rbx
0x00006241      49c1e40f       shl r12, 0xf
0x00006245      4c01c3         add rbx, r8
0x00006248      4d31e1         xor r9, r12
0x0000624b      4d89c4         mov r12, r8
0x0000624e      4c29ce         sub rsi, r9
0x00006251      49c1ec0e       shr r12, 0xe
0x00006255      4c890a         mov qword [rdx], r9
0x00006258      4d31e3         xor r11, r12
0x0000625b      4989f4         mov r12, rsi
0x0000625e      4901f0         add r8, rsi
0x00006261      4c29dd         sub rbp, r11
0x00006264      49c1e414       shl r12, 0x14
0x00006268      4c895a08       mov qword [rdx + 8], r11
0x0000626c      4c31e3         xor rbx, r12
0x0000626f      4c8d242e       lea r12, [rsi + rbp]
0x00006273      4889ee         mov rsi, rbp
0x00006276      4929da         sub r10, rbx
0x00006279      48c1ee11       shr rsi, 0x11
0x0000627d      48895a10       mov qword [rdx + 0x10], rbx
0x00006281      4931f0         xor r8, rsi
0x00006284      4c89d6         mov rsi, r10
0x00006287      4c01d5         add rbp, r10
0x0000628a      4c29c1         sub rcx, r8
0x0000628d      48c1e60e       shl rsi, 0xe
0x00006291      4c894218       mov qword [rdx + 0x18], r8
0x00006295      4c31e6         xor rsi, r12
0x00006298      4901ca         add r10, rcx
0x0000629b      48896a28       mov qword [rdx + 0x28], rbp
0x0000629f      48897220       mov qword [rdx + 0x20], rsi
0x000062a3      4c895230       mov qword [rdx + 0x30], r10
0x000062a7      4883c240       add rdx, 0x40                           ; segment.PHDR
0x000062ab      48894af8       mov qword [rdx - 8], rcx
0x000062af      4839d0         cmp rax, rdx
0x000062b2      0f8528ffffff   jne 0x61e0
0x000062b8      5b             pop rbx
0x000062b9      48c787100800.  mov qword [rdi + 0x810], 0
0x000062c4      48c787080800.  mov qword [rdi + 0x808], 0
0x000062cf      5d             pop rbp
0x000062d0      48c787000800.  mov qword [rdi + 0x800], 0
0x000062db      415c           pop r12
0x000062dd      415d           pop r13
0x000062df      c3             ret
;-- fread_file:
0x000062e0      4157           push r15                                ; ../coreutils-8.31/lib/read-file.c:44
0x000062e2      4156           push r14
0x000062e4      4155           push r13
0x000062e6      4154           push r12
0x000062e8      4989fd         mov r13, rdi
0x000062eb      55             push rbp
0x000062ec      53             push rbx
0x000062ed      4881ecb80000.  sub rsp, 0xb8
0x000062f4      4889742408     mov qword [rsp + 8], rsi
0x000062f9      64488b042528.  mov rax, qword fs:[0x28]
0x00006302      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000630a      31c0           xor eax, eax
0x0000630c      e80fb9ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/read-file.c:53
0x00006311      488d542410     lea rdx, [rsp + 0x10]                   ; stat.h:465   return __fxstat (_STAT_VER, __fd, __statbuf);
0x00006316      89c6           mov esi, eax
0x00006318      bf01000000     mov edi, 1
0x0000631d      e84eb9ffff     call sym.imp.__fxstat
0x00006322      85c0           test eax, eax                           ; ../coreutils-8.31/lib/read-file.c:53
0x00006324      7814           js 0x633a
0x00006326      8b442428       mov eax, dword [rsp + 0x28]
0x0000632a      2500f00000     and eax, 0xf000
0x0000632f      3d00800000     cmp eax, 0x8000
0x00006334      0f844e010000   je 0x6488
0x0000633a      bb00200000     mov ebx, 0x2000                         ; ../coreutils-8.31/lib/read-file.c:46
0x0000633f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/read-file.c:73
0x00006342      e8f9b8ffff     call sym.imp.malloc
0x00006347      4885c0         test rax, rax
0x0000634a      4989c4         mov r12, rax
0x0000634d      0f849d000000   je 0x63f0
0x00006353      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/read-file.c:77
0x00006355      49c7c7ffffff.  mov r15, 0xffffffffffffffff             ; ../coreutils-8.31/lib/read-file.c:117
0x0000635c      eb3c           jmp 0x639a
0x0000635e      6690           nop
0x00006360      4883fbff       cmp rbx, 0xffffffffffffffff             ; ../coreutils-8.31/lib/read-file.c:110
0x00006364      0f84d6000000   je 0x6440
0x0000636a      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/read-file.c:116
0x0000636d      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/read-file.c:121
0x00006370      48d1e8         shr rax, 1                              ; ../coreutils-8.31/lib/read-file.c:116
0x00006373      4889c2         mov rdx, rax
0x00006376      4801d8         add rax, rbx                            ; ../coreutils-8.31/lib/read-file.c:117
0x00006379      48f7d2         not rdx                                 ; ../coreutils-8.31/lib/read-file.c:116
0x0000637c      4839da         cmp rdx, rbx                            ; ../coreutils-8.31/lib/read-file.c:117
0x0000637f      490f46c7       cmovbe rax, r15
0x00006383      4889c6         mov rsi, rax                            ; ../coreutils-8.31/lib/read-file.c:121
0x00006386      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/read-file.c:117
0x00006389      e812b9ffff     call sym.imp.realloc                    ; ../coreutils-8.31/lib/read-file.c:121
0x0000638e      4885c0         test rax, rax
0x00006391      0f8489000000   je 0x6420
0x00006397      4989c4         mov r12, rax
0x0000639a      4989de         mov r14, rbx                            ; ../coreutils-8.31/lib/read-file.c:84
0x0000639d      498d3c2c       lea rdi, [r12 + rbp]                    ; ../coreutils-8.31/lib/read-file.c:85
0x000063a1      4c89e9         mov rcx, r13                            ; stdio2.h:294   return __fread_alias (__ptr, __size, __n, __stream);
0x000063a4      4929ee         sub r14, rbp                            ; ../coreutils-8.31/lib/read-file.c:84
0x000063a7      be01000000     mov esi, 1                              ; stdio2.h:294   return __fread_alias (__ptr, __size, __n, __stream);
0x000063ac      4c89f2         mov rdx, r14
0x000063af      e86cb6ffff     call sym.imp.fread
0x000063b4      4801c5         add rbp, rax                            ; ../coreutils-8.31/lib/read-file.c:86
0x000063b7      4939c6         cmp r14, rax                            ; ../coreutils-8.31/lib/read-file.c:88
0x000063ba      74a4           je 0x6360
0x000063bc      e8efb5ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/read-file.c:90
0x000063c1      4c89ef         mov rdi, r13                            ; ../coreutils-8.31/lib/read-file.c:91
0x000063c4      4989c6         mov r14, rax                            ; ../coreutils-8.31/lib/read-file.c:90
0x000063c7      448b38         mov r15d, dword [rax]
0x000063ca      e841b6ffff     call sym.imp.ferror                     ; ../coreutils-8.31/lib/read-file.c:91
0x000063cf      85c0           test eax, eax
0x000063d1      7558           jne 0x642b
0x000063d3      4883eb01       sub rbx, 1                              ; ../coreutils-8.31/lib/read-file.c:95
0x000063d7      4839eb         cmp rbx, rbp
0x000063da      0f8780000000   ja 0x6460
0x000063e0      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/read-file.c:103
0x000063e5      41c6042c00     mov byte [r12 + rbp], 0                 ; ../coreutils-8.31/lib/read-file.c:102
0x000063ea      488928         mov qword [rax], rbp                    ; ../coreutils-8.31/lib/read-file.c:103
0x000063ed      0f1f00         nop dword [rax]
0x000063f0      488b8c24a800.  mov rcx, qword [rsp + 0xa8]             ; ../coreutils-8.31/lib/read-file.c:135
0x000063f8      6448330c2528.  xor rcx, qword fs:[0x28]
0x00006401      4c89e0         mov rax, r12
0x00006404      0f85a9000000   jne 0x64b3
0x0000640a      4881c4b80000.  add rsp, 0xb8
0x00006411      5b             pop rbx
0x00006412      5d             pop rbp
0x00006413      415c           pop r12
0x00006415      415d           pop r13
0x00006417      415e           pop r14
0x00006419      415f           pop r15
0x0000641b      c3             ret
0x0000641c      0f1f4000       nop dword [rax]
0x00006420      e88bb5ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/read-file.c:123
0x00006425      448b38         mov r15d, dword [rax]
0x00006428      4989c6         mov r14, rax
0x0000642b      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/read-file.c:131
0x0000642e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/read-file.c:133
0x00006431      e89ab9ffff     call sym..plt.got                       ; ../coreutils-8.31/lib/read-file.c:131
0x00006436      45893e         mov dword [r14], r15d                   ; ../coreutils-8.31/lib/read-file.c:132
0x00006439      ebb5           jmp 0x63f0                              ; ../coreutils-8.31/lib/read-file.c:133
0x0000643b      0f1f440000     nop dword [rax + rax]
0x00006440      e86bb5ffff     call sym.imp.__errno_location
0x00006445      41bf0c000000   mov r15d, 0xc                           ; ../coreutils-8.31/lib/read-file.c:112
0x0000644b      4989c6         mov r14, rax
0x0000644e      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/read-file.c:131
0x00006451      e87ab9ffff     call sym..plt.got
0x00006456      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/read-file.c:133
0x00006459      45893e         mov dword [r14], r15d                   ; ../coreutils-8.31/lib/read-file.c:132
0x0000645c      eb92           jmp 0x63f0
0x0000645e      6690           nop
0x00006460      488d7501       lea rsi, [rbp + 1]                      ; ../coreutils-8.31/lib/read-file.c:97
0x00006464      4c89e7         mov rdi, r12
0x00006467      e834b8ffff     call sym.imp.realloc
0x0000646c      4885c0         test rax, rax
0x0000646f      4c0f45e0       cmovne r12, rax
0x00006473      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/read-file.c:103
0x00006478      41c6042c00     mov byte [r12 + rbp], 0                 ; ../coreutils-8.31/lib/read-file.c:102
0x0000647d      488928         mov qword [rax], rbp                    ; ../coreutils-8.31/lib/read-file.c:103
0x00006480      e96bffffff     jmp 0x63f0
0x00006485      0f1f00         nop dword [rax]
0x00006488      4c89ef         mov rdi, r13                            ; ../coreutils-8.31/lib/read-file.c:55
0x0000648b      e850b5ffff     call sym.imp.ftello
0x00006490      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/read-file.c:57
0x00006493      0f88a1feffff   js 0x633a
0x00006499      488b5c2440     mov rbx, qword [rsp + 0x40]
0x0000649e      4839c3         cmp rbx, rax
0x000064a1      0f8e93feffff   jle 0x633a
0x000064a7      4829c3         sub rbx, rax                            ; ../coreutils-8.31/lib/read-file.c:59
0x000064aa      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/read-file.c:68
0x000064ae      e98cfeffff     jmp 0x633f
0x000064b3      e818b6ffff     call sym.imp.__stack_chk_fail
0x000064b8      0f1f84000000.  nop dword [rax + rax]
;-- internal_read_file:
0x000064c0      4155           push r13
0x000064c2      4154           push r12
0x000064c4      55             push rbp
0x000064c5      53             push rbx                                ; ../coreutils-8.31/lib/read-file.c:16
0x000064c6      4889f5         mov rbp, rsi
0x000064c9      4889d6         mov rsi, rdx
0x000064cc      4883ec08       sub rsp, 8
0x000064d0      e85bb8ffff     call sym.imp.fopen
0x000064d5      4885c0         test rax, rax
0x000064d8      7456           je 0x6530
0x000064da      4889ee         mov rsi, rbp
0x000064dd      4889c7         mov rdi, rax
0x000064e0      4889c3         mov rbx, rax
0x000064e3      e8f8fdffff     call sym.fread_file
0x000064e8      4889c5         mov rbp, rax
0x000064eb      e8c0b4ffff     call sym.imp.__errno_location
0x000064f0      4889df         mov rdi, rbx
0x000064f3      4989c4         mov r12, rax
0x000064f6      448b28         mov r13d, dword [rax]                   ; ../coreutils-8.31/lib/read-file.c:23
0x000064f9      e882120000     call sym.rpl_fclose
0x000064fe      85c0           test eax, eax
0x00006500      750e           jne 0x6510
0x00006502      4883c408       add rsp, 8
0x00006506      4889e8         mov rax, rbp
0x00006509      5b             pop rbx
0x0000650a      5d             pop rbp                                 ; ../coreutils-8.31/lib/read-file.c:12
0x0000650b      415c           pop r12
0x0000650d      415d           pop r13
0x0000650f      c3             ret
0x00006510      4885ed         test rbp, rbp
0x00006513      740c           je 0x6521
0x00006515      4889ef         mov rdi, rbp
0x00006518      458b2c24       mov r13d, dword [r12]
0x0000651c      e8afb8ffff     call sym..plt.got
0x00006521      45892c24       mov dword [r12], r13d
0x00006525      31ed           xor ebp, ebp
0x00006527      ebd9           jmp 0x6502
0x00006529      0f1f80000000.  nop dword [rax]
0x00006530      31ed           xor ebp, ebp
0x00006532      ebce           jmp 0x6502
0x00006534      6690           nop
0x00006536      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/read-file.c:54
;-- read_file:
0x00006540      488d155e3700.  lea rdx, [0x00009ca5]                   ; "r"
0x00006547      e974ffffff     jmp sym.internal_read_file
0x0000654c      0f1f4000       nop dword [rax]
;-- read_binary_file:
0x00006550      488d155d3700.  lea rdx, [0x00009cb4]                   ; "rb"
0x00006557      e964ffffff     jmp sym.internal_read_file
0x0000655c      0f1f4000       nop dword [rax]
;-- version_etc_arn:
0x00006560      4157           push r15
0x00006562      4156           push r14
0x00006564      4155           push r13
0x00006566      4154           push r12
0x00006568      4d89cc         mov r12, r9
0x0000656b      55             push rbp
0x0000656c      53             push rbx
0x0000656d      4889fd         mov rbp, rdi
0x00006570      4c89c3         mov rbx, r8
0x00006573      4883ec28       sub rsp, 0x28
0x00006577      4885f6         test rsi, rsi
0x0000657a      0f8418010000   je 0x6698
0x00006580      4989d0         mov r8, rdx
0x00006583      488d152d3700.  lea rdx, str.s___s___s                  ; 0x9cb7 ; "%s (%s) %s\n"
0x0000658a      4989c9         mov r9, rcx
0x0000658d      31c0           xor eax, eax
0x0000658f      4889f1         mov rcx, rsi
0x00006592      be01000000     mov esi, 1
0x00006597      e8f4b7ffff     call sym.imp.__fprintf_chk
0x0000659c      488d35273700.  lea rsi, [0x00009cca]                   ; "(C)"
0x000065a3      31ff           xor edi, edi
0x000065a5      ba05000000     mov edx, 5
0x000065aa      e8f1b4ffff     call sym.imp.dcgettext
0x000065af      488d152a3a00.  lea rdx, obj.version_etc_copyright      ; 0x9fe0 ; "Copyright %s %d Free Software Foundation, Inc."
0x000065b6      4889c1         mov rcx, rax
0x000065b9      41b8e3070000   mov r8d, 0x7e3
0x000065bf      be01000000     mov esi, 1
0x000065c4      4889ef         mov rdi, rbp
0x000065c7      31c0           xor eax, eax
0x000065c9      e8c2b7ffff     call sym.imp.__fprintf_chk
0x000065ce      488d357b3700.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x9d50 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x000065d5      31ff           xor edi, edi
0x000065d7      ba05000000     mov edx, 5
0x000065dc      e8bfb4ffff     call sym.imp.dcgettext
0x000065e1      4889ee         mov rsi, rbp
0x000065e4      4889c7         mov rdi, rax
0x000065e7      e8f4b5ffff     call sym.imp.fputs_unlocked
0x000065ec      4983fc09       cmp r12, 9
0x000065f0      0f873a030000   ja 0x6930
0x000065f6      488d15af3900.  lea rdx, [0x00009fac]
0x000065fd      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00006601      4801d0         add rax, rdx
0x00006604      ffe0           jmp rax
0x00006606      662e0f1f8400.  nop word cs:[rax + rax]
0x00006610      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00006614      488b4310       mov rax, qword [rbx + 0x10]
0x00006618      488d35a13800.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x9ec0 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x0000661f      4c8b4308       mov r8, qword [rbx + 8]
0x00006623      ba05000000     mov edx, 5
0x00006628      31ff           xor edi, edi
0x0000662a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0000662e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006632      4c894c2410     mov qword [rsp + 0x10], r9
0x00006637      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000663b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000663f      48890424       mov qword [rsp], rax
0x00006643      4c89442408     mov qword [rsp + 8], r8
0x00006648      488b1b         mov rbx, qword [rbx]
0x0000664b      e850b4ffff     call sym.imp.dcgettext
0x00006650      4883ec08       sub rsp, 8
0x00006654      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00006659      4889c2         mov rdx, rax
0x0000665c      4889d9         mov rcx, rbx
0x0000665f      be01000000     mov esi, 1
0x00006664      4889ef         mov rdi, rbp
0x00006667      31c0           xor eax, eax
0x00006669      4151           push r9
0x0000666b      4155           push r13
0x0000666d      4154           push r12
0x0000666f      4157           push r15
0x00006671      4156           push r14
0x00006673      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00006678      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000667d      e80eb7ffff     call sym.imp.__fprintf_chk
0x00006682      4883c430       add rsp, 0x30
0x00006686      4883c428       add rsp, 0x28
0x0000668a      5b             pop rbx
0x0000668b      5d             pop rbp
0x0000668c      415c           pop r12
0x0000668e      415d           pop r13
0x00006690      415e           pop r14
0x00006692      415f           pop r15
0x00006694      c3             ret
0x00006695      0f1f00         nop dword [rax]
0x00006698      4989c8         mov r8, rcx
0x0000669b      4889d1         mov rcx, rdx
0x0000669e      488d151e3600.  lea rdx, str.s__s                       ; 0x9cc3 ; "%s %s\n"
0x000066a5      be01000000     mov esi, 1
0x000066aa      31c0           xor eax, eax
0x000066ac      e8dfb6ffff     call sym.imp.__fprintf_chk
0x000066b1      e9e6feffff     jmp 0x659c
0x000066b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000066c0      4c8b5340       mov r10, qword [rbx + 0x40]
0x000066c4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000066c8      488d35213800.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x9ef0 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x000066cf      488b4310       mov rax, qword [rbx + 0x10]
0x000066d3      4c8b4308       mov r8, qword [rbx + 8]
0x000066d7      ba05000000     mov edx, 5
0x000066dc      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000066e0      4c8b6328       mov r12, qword [rbx + 0x28]
0x000066e4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000066e8      4c8b7318       mov r14, qword [rbx + 0x18]
0x000066ec      488b1b         mov rbx, qword [rbx]
0x000066ef      4c89542418     mov qword [rsp + 0x18], r10
0x000066f4      4c894c2410     mov qword [rsp + 0x10], r9
0x000066f9      48890424       mov qword [rsp], rax
0x000066fd      4c89442408     mov qword [rsp + 8], r8
0x00006702      31ff           xor edi, edi
0x00006704      e897b3ffff     call sym.imp.dcgettext
0x00006709      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000670e      4152           push r10
0x00006710      e93fffffff     jmp 0x6654
0x00006715      0f1f00         nop dword [rax]
0x00006718      488b1b         mov rbx, qword [rbx]
0x0000671b      488d35ac3500.  lea rsi, str.Written_by__s.             ; 0x9cce ; "Written by %s.\n"
0x00006722      ba05000000     mov edx, 5
0x00006727      31ff           xor edi, edi
0x00006729      e872b3ffff     call sym.imp.dcgettext
0x0000672e      4883c428       add rsp, 0x28
0x00006732      4889d9         mov rcx, rbx
0x00006735      4889ef         mov rdi, rbp
0x00006738      5b             pop rbx
0x00006739      5d             pop rbp
0x0000673a      415c           pop r12
0x0000673c      415d           pop r13
0x0000673e      415e           pop r14
0x00006740      415f           pop r15
0x00006742      4889c2         mov rdx, rax
0x00006745      be01000000     mov esi, 1
0x0000674a      31c0           xor eax, eax
0x0000674c      e93fb6ffff     jmp sym.imp.__fprintf_chk
0x00006751      0f1f80000000.  nop dword [rax]
0x00006758      4c8b6308       mov r12, qword [rbx + 8]
0x0000675c      488d357b3500.  lea rsi, str.Written_by__s_and__s.      ; 0x9cde ; "Written by %s and %s.\n"
0x00006763      488b1b         mov rbx, qword [rbx]
0x00006766      ba05000000     mov edx, 5
0x0000676b      31ff           xor edi, edi
0x0000676d      e82eb3ffff     call sym.imp.dcgettext
0x00006772      4883c428       add rsp, 0x28
0x00006776      4d89e0         mov r8, r12
0x00006779      4889d9         mov rcx, rbx
0x0000677c      4889ef         mov rdi, rbp
0x0000677f      4889c2         mov rdx, rax
0x00006782      be01000000     mov esi, 1
0x00006787      5b             pop rbx
0x00006788      5d             pop rbp
0x00006789      415c           pop r12
0x0000678b      415d           pop r13
0x0000678d      415e           pop r14
0x0000678f      415f           pop r15
0x00006791      31c0           xor eax, eax
0x00006793      e9f8b5ffff     jmp sym.imp.__fprintf_chk
0x00006798      0f1f84000000.  nop dword [rax + rax]
0x000067a0      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000067a4      4c8b6308       mov r12, qword [rbx + 8]
0x000067a8      488d35463500.  lea rsi, str.Written_by__s___s__and__s. ; 0x9cf5 ; "Written by %s, %s, and %s.\n"
0x000067af      488b1b         mov rbx, qword [rbx]
0x000067b2      ba05000000     mov edx, 5
0x000067b7      31ff           xor edi, edi
0x000067b9      e8e2b2ffff     call sym.imp.dcgettext
0x000067be      4883c428       add rsp, 0x28
0x000067c2      4d89e9         mov r9, r13
0x000067c5      4d89e0         mov r8, r12
0x000067c8      4889d9         mov rcx, rbx
0x000067cb      4889ef         mov rdi, rbp
0x000067ce      4889c2         mov rdx, rax
0x000067d1      5b             pop rbx
0x000067d2      5d             pop rbp
0x000067d3      415c           pop r12
0x000067d5      415d           pop r13
0x000067d7      415e           pop r14
0x000067d9      415f           pop r15
0x000067db      be01000000     mov esi, 1
0x000067e0      31c0           xor eax, eax
0x000067e2      e9a9b5ffff     jmp sym.imp.__fprintf_chk
0x000067e7      660f1f840000.  nop word [rax + rax]
0x000067f0      488d35293600.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x9e20 ; "Written by %s, %s, %s,\nand %s.\n"
0x000067f7      ba05000000     mov edx, 5
0x000067fc      31ff           xor edi, edi
0x000067fe      4c8b7318       mov r14, qword [rbx + 0x18]
0x00006802      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00006806      4c8b6308       mov r12, qword [rbx + 8]
0x0000680a      488b1b         mov rbx, qword [rbx]
0x0000680d      e88eb2ffff     call sym.imp.dcgettext
0x00006812      4883ec08       sub rsp, 8
0x00006816      4156           push r14
0x00006818      4889c2         mov rdx, rax
0x0000681b      4d89e9         mov r9, r13
0x0000681e      4d89e0         mov r8, r12
0x00006821      4889d9         mov rcx, rbx
0x00006824      4889ef         mov rdi, rbp
0x00006827      be01000000     mov esi, 1
0x0000682c      31c0           xor eax, eax
0x0000682e      e85db5ffff     call sym.imp.__fprintf_chk
0x00006833      58             pop rax
0x00006834      5a             pop rdx
0x00006835      4883c428       add rsp, 0x28
0x00006839      5b             pop rbx
0x0000683a      5d             pop rbp
0x0000683b      415c           pop r12
0x0000683d      415d           pop r13
0x0000683f      415e           pop r14
0x00006841      415f           pop r15
0x00006843      c3             ret
0x00006844      0f1f4000       nop dword [rax]
0x00006848      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000684c      488d35ed3500.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x9e40 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00006853      ba05000000     mov edx, 5
0x00006858      31ff           xor edi, edi
0x0000685a      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000685e      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00006862      4c8b6308       mov r12, qword [rbx + 8]
0x00006866      488b1b         mov rbx, qword [rbx]
0x00006869      e832b2ffff     call sym.imp.dcgettext
0x0000686e      4157           push r15
0x00006870      eba4           jmp 0x6816
0x00006872      660f1f440000   nop word [rax + rax]
0x00006878      4c8b4308       mov r8, qword [rbx + 8]
0x0000687c      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006880      488d35e13500.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x9e68 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00006887      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000688b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000688f      ba05000000     mov edx, 5
0x00006894      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00006898      31ff           xor edi, edi
0x0000689a      488b1b         mov rbx, qword [rbx]
0x0000689d      4c890424       mov qword [rsp], r8
0x000068a1      e8fab1ffff     call sym.imp.dcgettext
0x000068a6      4883ec08       sub rsp, 8
0x000068aa      4d89e9         mov r9, r13
0x000068ad      4154           push r12
0x000068af      4157           push r15
0x000068b1      4156           push r14
0x000068b3      4c8b442420     mov r8, qword [rsp + 0x20]
0x000068b8      4889d9         mov rcx, rbx
0x000068bb      4889c2         mov rdx, rax
0x000068be      4889ef         mov rdi, rbp
0x000068c1      be01000000     mov esi, 1
0x000068c6      31c0           xor eax, eax
0x000068c8      e8c3b4ffff     call sym.imp.__fprintf_chk
0x000068cd      4883c420       add rsp, 0x20
0x000068d1      4883c428       add rsp, 0x28
0x000068d5      5b             pop rbx
0x000068d6      5d             pop rbp
0x000068d7      415c           pop r12
0x000068d9      415d           pop r13
0x000068db      415e           pop r14
0x000068dd      415f           pop r15
0x000068df      c3             ret
0x000068e0      4c8b4b10       mov r9, qword [rbx + 0x10]
0x000068e4      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000068e8      488d35a13500.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x9e90 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x000068ef      4c8b6328       mov r12, qword [rbx + 0x28]
0x000068f3      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000068f7      ba05000000     mov edx, 5
0x000068fc      4c8b7318       mov r14, qword [rbx + 0x18]
0x00006900      4c8b4308       mov r8, qword [rbx + 8]
0x00006904      31ff           xor edi, edi
0x00006906      4c894c2408     mov qword [rsp + 8], r9
0x0000690b      488b1b         mov rbx, qword [rbx]
0x0000690e      4c890424       mov qword [rsp], r8
0x00006912      e889b1ffff     call sym.imp.dcgettext
0x00006917      4155           push r13
0x00006919      4154           push r12
0x0000691b      4157           push r15
0x0000691d      4156           push r14
0x0000691f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00006924      eb8d           jmp 0x68b3
0x00006926      662e0f1f8400.  nop word cs:[rax + rax]
0x00006930      4c8b5340       mov r10, qword [rbx + 0x40]
0x00006934      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00006938      ba05000000     mov edx, 5
0x0000693d      488b4310       mov rax, qword [rbx + 0x10]
0x00006941      4c8b4308       mov r8, qword [rbx + 8]
0x00006945      488d35dc3500.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x9f28 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x0000694c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00006950      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006954      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00006958      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000695c      4c89542418     mov qword [rsp + 0x18], r10
0x00006961      4c894c2410     mov qword [rsp + 0x10], r9
0x00006966      48890424       mov qword [rsp], rax
0x0000696a      4c89442408     mov qword [rsp + 8], r8
0x0000696f      488b1b         mov rbx, qword [rbx]
0x00006972      e98bfdffff     jmp 0x6702
0x00006977      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00006980      4531c9         xor r9d, r9d
0x00006983      49833800       cmp qword [r8], 0
0x00006987      7412           je 0x699b
0x00006989      0f1f80000000.  nop dword [rax]
0x00006990      4983c101       add r9, 1
0x00006994      4b833cc800     cmp qword [r8 + r9*8], 0
0x00006999      75f5           jne 0x6990
0x0000699b      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x000069a0      4883ec68       sub rsp, 0x68
0x000069a4      4d89c2         mov r10, r8
0x000069a7      4531c9         xor r9d, r9d
0x000069aa      64488b042528.  mov rax, qword fs:[0x28]
0x000069b3      4889442458     mov qword [rsp + 0x58], rax
0x000069b8      31c0           xor eax, eax
0x000069ba      4989e0         mov r8, rsp
0x000069bd      0f1f00         nop dword [rax]
0x000069c0      418b02         mov eax, dword [r10]
0x000069c3      83f82f         cmp eax, 0x2f
0x000069c6      7742           ja 0x6a0a
0x000069c8      4189c3         mov r11d, eax
0x000069cb      4d035a10       add r11, qword [r10 + 0x10]
0x000069cf      83c008         add eax, 8
0x000069d2      418902         mov dword [r10], eax
0x000069d5      498b03         mov rax, qword [r11]
0x000069d8      4885c0         test rax, rax
0x000069db      4b8904c8       mov qword [r8 + r9*8], rax
0x000069df      740a           je 0x69eb
0x000069e1      4983c101       add r9, 1
0x000069e5      4983f90a       cmp r9, 0xa
0x000069e9      75d5           jne 0x69c0
0x000069eb      e870fbffff     call sym.version_etc_arn
0x000069f0      488b442458     mov rax, qword [rsp + 0x58]
0x000069f5      644833042528.  xor rax, qword fs:[0x28]
0x000069fe      7505           jne 0x6a05
0x00006a00      4883c468       add rsp, 0x68
0x00006a04      c3             ret
0x00006a05      e8c6b0ffff     call sym.imp.__stack_chk_fail
0x00006a0a      4d8b5a08       mov r11, qword [r10 + 8]
0x00006a0e      498d4308       lea rax, [r11 + 8]
0x00006a12      49894208       mov qword [r10 + 8], rax
0x00006a16      ebbd           jmp 0x69d5
0x00006a18      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00006a20      55             push rbp
0x00006a21      53             push rbx
0x00006a22      41ba20000000   mov r10d, 0x20                          ; "@"
0x00006a28      4531db         xor r11d, r11d
0x00006a2b      4881ecb80000.  sub rsp, 0xb8
0x00006a32      64488b042528.  mov rax, qword fs:[0x28]
0x00006a3b      4889442478     mov qword [rsp + 0x78], rax
0x00006a40      31c0           xor eax, eax
0x00006a42      488d8424d000.  lea rax, [rsp + 0xd0]
0x00006a4a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00006a52      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x00006a5a      4c8d442420     lea r8, [rsp + 0x20]
0x00006a5f      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00006a67      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x00006a6f      4889442410     mov qword [rsp + 0x10], rax
0x00006a74      488d84248000.  lea rax, [rsp + 0x80]
0x00006a7c      4531c9         xor r9d, r9d
0x00006a7f      4889442418     mov qword [rsp + 0x18], rax
0x00006a84      4889c5         mov rbp, rax
0x00006a87      660f1f840000.  nop word [rax + rax]
0x00006a90      4183fa2f       cmp r10d, 0x2f
0x00006a94      7756           ja 0x6aec
0x00006a96      4489d0         mov eax, r10d
0x00006a99      41bb01000000   mov r11d, 1
0x00006a9f      4183c208       add r10d, 8
0x00006aa3      4801e8         add rax, rbp
0x00006aa6      488b00         mov rax, qword [rax]
0x00006aa9      4885c0         test rax, rax
0x00006aac      4b8904c8       mov qword [r8 + r9*8], rax
0x00006ab0      740a           je 0x6abc
0x00006ab2      4983c101       add r9, 1
0x00006ab6      4983f90a       cmp r9, 0xa
0x00006aba      75d4           jne 0x6a90
0x00006abc      4584db         test r11b, r11b
0x00006abf      7524           jne 0x6ae5
0x00006ac1      e89afaffff     call sym.version_etc_arn
0x00006ac6      488b442478     mov rax, qword [rsp + 0x78]
0x00006acb      644833042528.  xor rax, qword fs:[0x28]
0x00006ad4      750a           jne 0x6ae0
0x00006ad6      4881c4b80000.  add rsp, 0xb8
0x00006add      5b             pop rbx
0x00006ade      5d             pop rbp
0x00006adf      c3             ret
0x00006ae0      e8ebafffff     call sym.imp.__stack_chk_fail
0x00006ae5      4489542408     mov dword [rsp + 8], r10d
0x00006aea      ebd5           jmp 0x6ac1
0x00006aec      4889d8         mov rax, rbx
0x00006aef      4883c308       add rbx, 8
0x00006af3      ebb1           jmp 0x6aa6
0x00006af5      90             nop
0x00006af6      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00006b00      53             push rbx
0x00006b01      488d35093200.  lea rsi, str.Report_bugs_to:__s         ; 0x9d11 ; "\nReport bugs to: %s\n"
0x00006b08      ba05000000     mov edx, 5
0x00006b0d      31ff           xor edi, edi
0x00006b0f      e88cafffff     call sym.imp.dcgettext
0x00006b14      488d150b3200.  lea rdx, str.bug_coreutils_gnu.org      ; 0x9d26 ; "bug-coreutils@gnu.org"
0x00006b1b      4889c6         mov rsi, rax
0x00006b1e      bf01000000     mov edi, 1
0x00006b23      31c0           xor eax, eax
0x00006b25      e8a6b1ffff     call sym.imp.__printf_chk
0x00006b2a      488d350b3200.  lea rsi, str.s_home_page:___s           ; 0x9d3c ; "%s home page: <%s>\n"
0x00006b31      ba05000000     mov edx, 5
0x00006b36      31ff           xor edi, edi
0x00006b38      e863afffff     call sym.imp.dcgettext
0x00006b3d      488d0d042b00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x9648 ; "https://www.gnu.org/software/coreutils/"
0x00006b44      488d15342600.  lea rdx, str.GNU_coreutils              ; 0x917f ; "GNU coreutils"
0x00006b4b      4889c6         mov rsi, rax
0x00006b4e      bf01000000     mov edi, 1
0x00006b53      31c0           xor eax, eax
0x00006b55      e876b1ffff     call sym.imp.__printf_chk
0x00006b5a      488b1d276520.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20d088:8]=0
0x00006b61      488d35003400.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x9f68 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00006b68      31ff           xor edi, edi
0x00006b6a      ba05000000     mov edx, 5
0x00006b6f      e82cafffff     call sym.imp.dcgettext
0x00006b74      4889de         mov rsi, rbx
0x00006b77      4889c7         mov rdi, rax
0x00006b7a      5b             pop rbx
0x00006b7b      e960b0ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00006b80      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00006b81      4889fb         mov rbx, rdi
0x00006b84      e8b7b0ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00006b89      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x00006b8c      7505           jne 0x6b93
0x00006b8e      4885db         test rbx, rbx
0x00006b91      7502           jne 0x6b95
0x00006b93      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00006b94      c3             ret
0x00006b95      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x00006b9a      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00006ba0      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00006ba3      48f7e6         mul rsi
0x00006ba6      4889c7         mov rdi, rax
0x00006ba9      0f90c0         seto al
0x00006bac      4885ff         test rdi, rdi
0x00006baf      780a           js 0x6bbb
0x00006bb1      0fb6c0         movzx eax, al
0x00006bb4      4885c0         test rax, rax
0x00006bb7      7502           jne 0x6bbb
0x00006bb9      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x00006bbb      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x00006bbf      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00006bc4      6690           nop
0x00006bc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00006bd0      ebae           jmp sym.xmalloc
0x00006bd2      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00006bd6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00006be0      4885f6         test rsi, rsi
0x00006be3      53             push rbx
0x00006be4      4889f3         mov rbx, rsi
0x00006be7      7505           jne 0x6bee
0x00006be9      4885ff         test rdi, rdi
0x00006bec      751a           jne 0x6c08
0x00006bee      4889de         mov rsi, rbx
0x00006bf1      e8aab0ffff     call sym.imp.realloc
0x00006bf6      4885c0         test rax, rax
0x00006bf9      7505           jne 0x6c00
0x00006bfb      4885db         test rbx, rbx
0x00006bfe      7511           jne 0x6c11                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00006c00      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00006c01      c3             ret
0x00006c02      660f1f440000   nop word [rax + rax]
0x00006c08      e8c3b1ffff     call sym..plt.got
0x00006c0d      31c0           xor eax, eax
0x00006c0f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00006c10      c3             ret
0x00006c11      e8ba010000     call sym.xalloc_die
0x00006c16      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00006c20      4889f0         mov rax, rsi
0x00006c23      48f7e2         mul rdx
0x00006c26      4889c6         mov rsi, rax
0x00006c29      0f90c0         seto al
0x00006c2c      4885f6         test rsi, rsi
0x00006c2f      780a           js 0x6c3b
0x00006c31      0fb6c0         movzx eax, al
0x00006c34      4885c0         test rax, rax
0x00006c37      7502           jne 0x6c3b
0x00006c39      eba5           jmp sym.xrealloc
0x00006c3b      4883ec08       sub rsp, 8
0x00006c3f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00006c44      6690           nop
0x00006c46      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00006c50      4885ff         test rdi, rdi
0x00006c53      4989d1         mov r9, rdx
0x00006c56      488b0e         mov rcx, qword [rsi]
0x00006c59      7435           je 0x6c90
0x00006c5b      31d2           xor edx, edx
0x00006c5d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00006c67      49f7f1         div r9
0x00006c6a      4839c8         cmp rax, rcx
0x00006c6d      763c           jbe 0x6cab
0x00006c6f      4889c8         mov rax, rcx
0x00006c72      48d1e8         shr rax, 1
0x00006c75      488d4c0801     lea rcx, [rax + rcx + 1]
0x00006c7a      48890e         mov qword [rsi], rcx
0x00006c7d      490fafc9       imul rcx, r9
0x00006c81      4889ce         mov rsi, rcx
0x00006c84      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00006c89      0f1f80000000.  nop dword [rax]
0x00006c90      4885c9         test rcx, rcx
0x00006c93      7423           je 0x6cb8
0x00006c95      4889c8         mov rax, rcx
0x00006c98      49f7e1         mul r9
0x00006c9b      0f90c2         seto dl
0x00006c9e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00006ca1      0fb6d2         movzx edx, dl
0x00006ca4      7805           js 0x6cab
0x00006ca6      4885d2         test rdx, rdx
0x00006ca9      74cf           je 0x6c7a
0x00006cab      4883ec08       sub rsp, 8
0x00006caf      e81c010000     call sym.xalloc_die
0x00006cb4      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00006cb8      31d2           xor edx, edx
0x00006cba      b880000000     mov eax, 0x80
0x00006cbf      4531c0         xor r8d, r8d
0x00006cc2      49f7f1         div r9
0x00006cc5      4885c0         test rax, rax
0x00006cc8      410f94c0       sete r8b
0x00006ccc      498d0c00       lea rcx, [r8 + rax]
0x00006cd0      ebc3           jmp 0x6c95
0x00006cd2      0f1f4000       nop dword [rax]
0x00006cd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00006ce0      4885ff         test rdi, rdi
0x00006ce3      488b06         mov rax, qword [rsi]
0x00006ce6      7428           je 0x6d10
0x00006ce8      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00006cf2      4839d0         cmp rax, rdx
0x00006cf5      772a           ja 0x6d21
0x00006cf7      4889c2         mov rdx, rax
0x00006cfa      48d1ea         shr rdx, 1
0x00006cfd      488d440201     lea rax, [rdx + rax + 1]
0x00006d02      488906         mov qword [rsi], rax
0x00006d05      4889c6         mov rsi, rax
0x00006d08      e9d3feffff     jmp sym.xrealloc
0x00006d0d      0f1f00         nop dword [rax]
0x00006d10      4885c0         test rax, rax
0x00006d13      ba80000000     mov edx, 0x80
0x00006d18      480f44c2       cmove rax, rdx
0x00006d1c      4885c0         test rax, rax
0x00006d1f      79e1           jns 0x6d02
0x00006d21      4883ec08       sub rsp, 8
0x00006d25      e8a6000000     call sym.xalloc_die
0x00006d2a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00006d30      53             push rbx
0x00006d31      4889fb         mov rbx, rdi
0x00006d34      e847feffff     call sym.xmalloc
0x00006d39      4889da         mov rdx, rbx
0x00006d3c      31f6           xor esi, esi
0x00006d3e      4889c7         mov rdi, rax
0x00006d41      5b             pop rbx
0x00006d42      e939aeffff     jmp sym.imp.memset
0x00006d47      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00006d50      4889f8         mov rax, rdi
0x00006d53      4883ec08       sub rsp, 8
0x00006d57      48f7e6         mul rsi
0x00006d5a      0f90c2         seto dl
0x00006d5d      4885c0         test rax, rax
0x00006d60      7817           js 0x6d79
0x00006d62      0fb6d2         movzx edx, dl
0x00006d65      4885d2         test rdx, rdx
0x00006d68      750f           jne 0x6d79
0x00006d6a      e881aeffff     call sym.imp.calloc
0x00006d6f      4885c0         test rax, rax
0x00006d72      7405           je 0x6d79
0x00006d74      4883c408       add rsp, 8
0x00006d78      c3             ret
0x00006d79      e852000000     call sym.xalloc_die
0x00006d7e      6690           nop
;-- xmemdup:
0x00006d80      55             push rbp
0x00006d81      53             push rbx
0x00006d82      4889fd         mov rbp, rdi
0x00006d85      4889f7         mov rdi, rsi
0x00006d88      4889f3         mov rbx, rsi
0x00006d8b      4883ec08       sub rsp, 8
0x00006d8f      e8ecfdffff     call sym.xmalloc
0x00006d94      4883c408       add rsp, 8
0x00006d98      4889da         mov rdx, rbx
0x00006d9b      4889ee         mov rsi, rbp
0x00006d9e      5b             pop rbx
0x00006d9f      5d             pop rbp
0x00006da0      4889c7         mov rdi, rax
0x00006da3      e968aeffff     jmp sym.imp.memcpy
0x00006da8      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00006db0      53             push rbx
0x00006db1      4889fb         mov rbx, rdi
0x00006db4      e807adffff     call sym.imp.strlen
0x00006db9      4889df         mov rdi, rbx
0x00006dbc      488d7001       lea rsi, [rax + 1]
0x00006dc0      5b             pop rbx
0x00006dc1      ebbd           jmp sym.xmemdup
0x00006dc3      662e0f1f8400.  nop word cs:[rax + rax]
0x00006dcd      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00006dd0      488d35383200.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0xa00f ; "memory exhausted"
0x00006dd7      4883ec08       sub rsp, 8
0x00006ddb      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00006de0      31ff           xor edi, edi
0x00006de2      e8b9acffff     call sym.imp.dcgettext
0x00006de7      8b3d2b622000   mov edi, dword [obj.exit_failure]       ; [0x20d018:4]=1
0x00006ded      488d15062400.  lea rdx, [0x000091fa]                   ; "%s"
0x00006df4      4889c1         mov rcx, rax
0x00006df7      31f6           xor esi, esi
0x00006df9      31c0           xor eax, eax
0x00006dfb      e8f0aeffff     call sym.imp.error
0x00006e00      e89babffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00006e05      662e0f1f8400.  nop word cs:[rax + rax]
0x00006e0f      90             nop
;-- xnumtoumax:
0x00006e10      4157           push r15                                ; ../coreutils-8.31/lib/xdectoint.c:38
0x00006e12      4156           push r14
0x00006e14      4989cf         mov r15, rcx
0x00006e17      4155           push r13
0x00006e19      4154           push r12
0x00006e1b      4989d6         mov r14, rdx
0x00006e1e      55             push rbp
0x00006e1f      53             push rbx
0x00006e20      89f2           mov edx, esi                            ; ../coreutils-8.31/lib/xdectoint.c:42
0x00006e22      31f6           xor esi, esi
0x00006e24      4989fc         mov r12, rdi                            ; ../coreutils-8.31/lib/xdectoint.c:38
0x00006e27      4d89cd         mov r13, r9
0x00006e2a      4883ec18       sub rsp, 0x18
0x00006e2e      4889e1         mov rcx, rsp                            ; ../coreutils-8.31/lib/xdectoint.c:42
0x00006e31      8b5c2450       mov ebx, dword [rsp + 0x50]             ; ../coreutils-8.31/lib/xdectoint.c:38
0x00006e35      64488b042528.  mov rax, qword fs:[0x28]
0x00006e3e      4889442408     mov qword [rsp + 8], rax
0x00006e43      31c0           xor eax, eax
0x00006e45      e816050000     call sym.xstrtoumax                     ; ../coreutils-8.31/lib/xdectoint.c:42
0x00006e4a      85c0           test eax, eax                           ; ../coreutils-8.31/lib/xdectoint.c:44
0x00006e4c      0f858e000000   jne 0x6ee0
0x00006e52      488b2c24       mov rbp, qword [rsp]                    ; ../coreutils-8.31/lib/xdectoint.c:46
0x00006e56      4c39f5         cmp rbp, r14
0x00006e59      7205           jb 0x6e60
0x00006e5b      4c39fd         cmp rbp, r15
0x00006e5e      7654           jbe 0x6eb4
0x00006e60      e84babffff     call sym.imp.__errno_location
0x00006e65      4881fd000000.  cmp rbp, 0x40000000                     ; ../coreutils-8.31/lib/xdectoint.c:52
0x00006e6c      4989c6         mov r14, rax
0x00006e6f      19c0           sbb eax, eax
0x00006e71      83e0d7         and eax, 0xffffffd7                     ; 4294967255
0x00006e74      83c04b         add eax, 0x4b
0x00006e77      418906         mov dword [r14], eax
0x00006e7a      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/xdectoint.c:69
0x00006e7d      e80ee4ffff     call sym.quote
0x00006e82      418b36         mov esi, dword [r14]
0x00006e85      4989c0         mov r8, rax
0x00006e88      b800000000     mov eax, 0
0x00006e8d      488d15622300.  lea rdx, str.s:__s                      ; 0x91f6 ; "%s: %s"
0x00006e94      4c89e9         mov rcx, r13
0x00006e97      83fe16         cmp esi, 0x16
0x00006e9a      0f44f0         cmove esi, eax
0x00006e9d      85db           test ebx, ebx
0x00006e9f      b801000000     mov eax, 1
0x00006ea4      0f44d8         cmove ebx, eax
0x00006ea7      31c0           xor eax, eax
0x00006ea9      89df           mov edi, ebx
0x00006eab      e840aeffff     call sym.imp.error
0x00006eb0      488b2c24       mov rbp, qword [rsp]
0x00006eb4      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/xdectoint.c:74
0x00006eb9      644833142528.  xor rdx, qword fs:[0x28]
0x00006ec2      4889e8         mov rax, rbp
0x00006ec5      7544           jne 0x6f0b
0x00006ec7      4883c418       add rsp, 0x18
0x00006ecb      5b             pop rbx
0x00006ecc      5d             pop rbp
0x00006ecd      415c           pop r12
0x00006ecf      415d           pop r13
0x00006ed1      415e           pop r14
0x00006ed3      415f           pop r15
0x00006ed5      c3             ret
0x00006ed6      662e0f1f8400.  nop word cs:[rax + rax]
0x00006ee0      89c5           mov ebp, eax
0x00006ee2      e8c9aaffff     call sym.imp.__errno_location
0x00006ee7      83fd01         cmp ebp, 1                              ; ../coreutils-8.31/lib/xdectoint.c:61
0x00006eea      4989c6         mov r14, rax
0x00006eed      7411           je 0x6f00
0x00006eef      83fd03         cmp ebp, 3                              ; ../coreutils-8.31/lib/xdectoint.c:63
0x00006ef2      7586           jne 0x6e7a
0x00006ef4      c70000000000   mov dword [rax], 0                      ; ../coreutils-8.31/lib/xdectoint.c:64
0x00006efa      e97bffffff     jmp 0x6e7a
0x00006eff      90             nop
0x00006f00      c7004b000000   mov dword [rax], 0x4b                   ; ../coreutils-8.31/lib/xdectoint.c:62 ; 'K'
                                                                       ; [0x4b:4]=0
0x00006f06      e96fffffff     jmp 0x6e7a
0x00006f0b      e8c0abffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/xdectoint.c:74
;-- xdectoumax:
0x00006f10      4883ec10       sub rsp, 0x10                           ; ../coreutils-8.31/lib/xdectoint.c:84
0x00006f14      4151           push r9                                 ; ../coreutils-8.31/lib/xdectoint.c:85
0x00006f16      4d89c1         mov r9, r8
0x00006f19      4989c8         mov r8, rcx
0x00006f1c      4889d1         mov rcx, rdx
0x00006f1f      4889f2         mov rdx, rsi
0x00006f22      be0a000000     mov esi, 0xa
0x00006f27      e8e4feffff     call sym.xnumtoumax
0x00006f2c      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/xdectoint.c:86
0x00006f30      c3             ret
0x00006f31      662e0f1f8400.  nop word cs:[rax + rax]
0x00006f3b      0f1f440000     nop dword [rax + rax]
;-- xstrtoul:
0x00006f40      4157           push r15
0x00006f42      4156           push r14
0x00006f44      4155           push r13
0x00006f46      4154           push r12
0x00006f48      55             push rbp
0x00006f49      53             push rbx
0x00006f4a      4883ec28       sub rsp, 0x28
0x00006f4e      64488b042528.  mov rax, qword fs:[0x28]
0x00006f57      4889442418     mov qword [rsp + 0x18], rax
0x00006f5c      31c0           xor eax, eax
0x00006f5e      83fa24         cmp edx, 0x24
0x00006f61      0f875e030000   ja 0x72c5
0x00006f67      488d442410     lea rax, [rsp + 0x10]
0x00006f6c      4989f7         mov r15, rsi
0x00006f6f      4885f6         test rsi, rsi
0x00006f72      4889fd         mov rbp, rdi
0x00006f75      89542408       mov dword [rsp + 8], edx
0x00006f79      4989ce         mov r14, rcx
0x00006f7c      4d89c5         mov r13, r8
0x00006f7f      4c0f44f8       cmove r15, rax
0x00006f83      e828aaffff     call sym.imp.__errno_location
0x00006f88      c70000000000   mov dword [rax], 0
0x00006f8e      4989c4         mov r12, rax
0x00006f91      0fb65d00       movzx ebx, byte [rbp]
0x00006f95      e826aeffff     call sym.imp.__ctype_b_loc
0x00006f9a      8b542408       mov edx, dword [rsp + 8]
0x00006f9e      488b30         mov rsi, qword [rax]
0x00006fa1      4889e8         mov rax, rbp
0x00006fa4      eb11           jmp 0x6fb7
0x00006fa6      662e0f1f8400.  nop word cs:[rax + rax]
0x00006fb0      4883c001       add rax, 1
0x00006fb4      0fb618         movzx ebx, byte [rax]
0x00006fb7      0fb6cb         movzx ecx, bl
0x00006fba      f6444e0120     test byte [rsi + rcx*2 + 1], 0x20
0x00006fbf      75ef           jne 0x6fb0
0x00006fc1      80fb2d         cmp bl, 0x2d
0x00006fc4      7452           je 0x7018
0x00006fc6      4c89fe         mov rsi, r15
0x00006fc9      4889ef         mov rdi, rbp
0x00006fcc      e86fadffff     call sym.imp.strtoul
0x00006fd1      498b0f         mov rcx, qword [r15]
0x00006fd4      4889c3         mov rbx, rax
0x00006fd7      4839e9         cmp rcx, rbp
0x00006fda      742c           je 0x7008
0x00006fdc      418b0424       mov eax, dword [r12]
0x00006fe0      85c0           test eax, eax
0x00006fe2      7464           je 0x7048
0x00006fe4      83f822         cmp eax, 0x22
0x00006fe7      bd01000000     mov ebp, 1
0x00006fec      752a           jne 0x7018
0x00006fee      4d85ed         test r13, r13
0x00006ff1      7409           je 0x6ffc
0x00006ff3      440fb621       movzx r12d, byte [rcx]
0x00006ff7      4584e4         test r12b, r12b
0x00006ffa      757b           jne 0x7077
0x00006ffc      49891e         mov qword [r14], rbx
0x00006fff      eb1c           jmp 0x701d
0x00007001      0f1f80000000.  nop dword [rax]
0x00007008      4d85ed         test r13, r13
0x0000700b      48894c2408     mov qword [rsp + 8], rcx
0x00007010      753e           jne 0x7050
0x00007012      660f1f440000   nop word [rax + rax]
0x00007018      bd04000000     mov ebp, 4
0x0000701d      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00007022      6448333c2528.  xor rdi, qword fs:[0x28]
0x0000702b      89e8           mov eax, ebp
0x0000702d      0f858d020000   jne 0x72c0
0x00007033      4883c428       add rsp, 0x28
0x00007037      5b             pop rbx
0x00007038      5d             pop rbp
0x00007039      415c           pop r12
0x0000703b      415d           pop r13
0x0000703d      415e           pop r14
0x0000703f      415f           pop r15
0x00007041      c3             ret
0x00007042      660f1f440000   nop word [rax + rax]
0x00007048      31ed           xor ebp, ebp
0x0000704a      eba2           jmp 0x6fee
0x0000704c      0f1f4000       nop dword [rax]
0x00007050      440fb66500     movzx r12d, byte [rbp]
0x00007055      4584e4         test r12b, r12b
0x00007058      74be           je 0x7018
0x0000705a      410fbef4       movsx esi, r12b
0x0000705e      4c89ef         mov rdi, r13
0x00007061      31ed           xor ebp, ebp
0x00007063      e8b8aaffff     call sym.imp.strchr
0x00007068      4885c0         test rax, rax
0x0000706b      bb01000000     mov ebx, 1
0x00007070      488b4c2408     mov rcx, qword [rsp + 8]
0x00007075      74a1           je 0x7018
0x00007077      410fbef4       movsx esi, r12b
0x0000707b      4c89ef         mov rdi, r13
0x0000707e      48894c2408     mov qword [rsp + 8], rcx
0x00007083      e898aaffff     call sym.imp.strchr
0x00007088      4885c0         test rax, rax
0x0000708b      488b4c2408     mov rcx, qword [rsp + 8]
0x00007090      0f84c6000000   je 0x715c
0x00007096      418d4424bb     lea eax, [r12 - 0x45]
0x0000709b      3c2f           cmp al, 0x2f
0x0000709d      7751           ja 0x70f0
0x0000709f      48ba45893000.  movabs rdx, 0x814400308945
0x000070a9      480fa3c2       bt rdx, rax
0x000070ad      7341           jae 0x70f0
0x000070af      be30000000     mov esi, 0x30                           ; '0'
0x000070b4      4c89ef         mov rdi, r13
0x000070b7      48894c2408     mov qword [rsp + 8], rcx
0x000070bc      e85faaffff     call sym.imp.strchr
0x000070c1      4885c0         test rax, rax
0x000070c4      488b4c2408     mov rcx, qword [rsp + 8]
0x000070c9      7425           je 0x70f0
0x000070cb      0fb64101       movzx eax, byte [rcx + 1]
0x000070cf      3c44           cmp al, 0x44
0x000070d1      740c           je 0x70df
0x000070d3      3c69           cmp al, 0x69
0x000070d5      0f84cd010000   je 0x72a8
0x000070db      3c42           cmp al, 0x42
0x000070dd      7511           jne 0x70f0
0x000070df      bf02000000     mov edi, 2
0x000070e4      bee8030000     mov esi, 0x3e8
0x000070e9      eb0f           jmp 0x70fa
0x000070eb      0f1f440000     nop dword [rax + rax]
0x000070f0      bf01000000     mov edi, 1
0x000070f5      be00040000     mov esi, 0x400
0x000070fa      4183ec42       sub r12d, 0x42
0x000070fe      4180fc35       cmp r12b, 0x35
0x00007102      7758           ja 0x715c
0x00007104      488d155d2f00.  lea rdx, [0x0000a068]
0x0000710b      450fb6e4       movzx r12d, r12b
0x0000710f      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00007113      4801d0         add rax, rdx
0x00007116      ffe0           jmp rax
0x00007118      4889d8         mov rax, rbx
0x0000711b      48f7e6         mul rsi
0x0000711e      0f80ed010000   jo 0x7311
0x00007124      4531c0         xor r8d, r8d
0x00007127      48f7e6         mul rsi
0x0000712a      0f80d2010000   jo 0x7302
0x00007130      4889c3         mov rbx, rax
0x00007133      4409c5         or ebp, r8d
0x00007136      662e0f1f8400.  nop word cs:[rax + rax]
0x00007140      4863ff         movsxd rdi, edi
0x00007143      89e8           mov eax, ebp
0x00007145      4801f9         add rcx, rdi
0x00007148      83c802         or eax, 2
0x0000714b      49890f         mov qword [r15], rcx
0x0000714e      803900         cmp byte [rcx], 0
0x00007151      49891e         mov qword [r14], rbx
0x00007154      0f45e8         cmovne ebp, eax
0x00007157      e9c1feffff     jmp 0x701d
0x0000715c      49891e         mov qword [r14], rbx
0x0000715f      83cd02         or ebp, 2
0x00007162      e9b6feffff     jmp 0x701d
0x00007167      ba02000000     mov edx, 2
0x0000716c      4889d0         mov rax, rdx
0x0000716f      48f7e3         mul rbx
0x00007172      0f8096000000   jo 0x720e
0x00007178      4801db         add rbx, rbx
0x0000717b      ebc3           jmp 0x7140
0x0000717d      ba00020000     mov edx, 0x200
0x00007182      4889d0         mov rax, rdx
0x00007185      48f7e3         mul rbx
0x00007188      0f8080000000   jo 0x720e
0x0000718e      48c1e309       shl rbx, 9
0x00007192      ebac           jmp 0x7140
0x00007194      41b807000000   mov r8d, 7
0x0000719a      4531c9         xor r9d, r9d
0x0000719d      0f1f00         nop dword [rax]
0x000071a0      4889d8         mov rax, rbx
0x000071a3      48f7e6         mul rsi
0x000071a6      4889c3         mov rbx, rax
0x000071a9      0f808f010000   jo 0x733e
0x000071af      4183e801       sub r8d, 1
0x000071b3      75eb           jne 0x71a0
0x000071b5      4409cd         or ebp, r9d
0x000071b8      eb86           jmp 0x7140
0x000071ba      41b808000000   mov r8d, 8
0x000071c0      4531c9         xor r9d, r9d
0x000071c3      0f1f440000     nop dword [rax + rax]
0x000071c8      4889d8         mov rax, rbx
0x000071cb      48f7e6         mul rsi
0x000071ce      4889c3         mov rbx, rax
0x000071d1      0f8049010000   jo 0x7320
0x000071d7      4183e801       sub r8d, 1
0x000071db      75eb           jne 0x71c8
0x000071dd      ebd6           jmp 0x71b5
0x000071df      41b804000000   mov r8d, 4
0x000071e5      4531c9         xor r9d, r9d
0x000071e8      4889d8         mov rax, rbx
0x000071eb      48f7e6         mul rsi
0x000071ee      4889c3         mov rbx, rax
0x000071f1      0f80fc000000   jo 0x72f3
0x000071f7      4183e801       sub r8d, 1
0x000071fb      75eb           jne 0x71e8
0x000071fd      ebb6           jmp 0x71b5
0x000071ff      4889d8         mov rax, rbx
0x00007202      48f7e6         mul rsi
0x00007205      4889c3         mov rbx, rax
0x00007208      0f8132ffffff   jno 0x7140
0x0000720e      bd01000000     mov ebp, 1
0x00007213      4883cbff       or rbx, 0xffffffffffffffff
0x00007217      e924ffffff     jmp 0x7140
0x0000721c      0f1f4000       nop dword [rax]
0x00007220      41b805000000   mov r8d, 5
0x00007226      4531c9         xor r9d, r9d
0x00007229      4889d8         mov rax, rbx
0x0000722c      48f7e6         mul rsi
0x0000722f      4889c3         mov rbx, rax
0x00007232      0f80f7000000   jo 0x732f
0x00007238      4183e801       sub r8d, 1
0x0000723c      75eb           jne 0x7229
0x0000723e      e972ffffff     jmp 0x71b5
0x00007243      41b806000000   mov r8d, 6
0x00007249      4531c9         xor r9d, r9d
0x0000724c      4889d8         mov rax, rbx
0x0000724f      48f7e6         mul rsi
0x00007252      4889c3         mov rbx, rax
0x00007255      0f8089000000   jo 0x72e4
0x0000725b      4183e801       sub r8d, 1
0x0000725f      75eb           jne 0x724c
0x00007261      e94fffffff     jmp 0x71b5
0x00007266      ba00040000     mov edx, 0x400
0x0000726b      4889d0         mov rax, rdx
0x0000726e      48f7e3         mul rbx
0x00007271      709b           jo 0x720e
0x00007273      48c1e30a       shl rbx, 0xa
0x00007277      e9c4feffff     jmp 0x7140
0x0000727c      4889d8         mov rax, rbx
0x0000727f      48f7e6         mul rsi
0x00007282      0f80c5000000   jo 0x734d
0x00007288      4531c0         xor r8d, r8d
0x0000728b      48f7e6         mul rsi
0x0000728e      0f8193feffff   jno 0x7127
0x00007294      41b801000000   mov r8d, 1
0x0000729a      4883c8ff       or rax, 0xffffffffffffffff
0x0000729e      e984feffff     jmp 0x7127
0x000072a3      0f1f440000     nop dword [rax + rax]
0x000072a8      31ff           xor edi, edi
0x000072aa      80790242       cmp byte [rcx + 2], 0x42
0x000072ae      be00040000     mov esi, 0x400
0x000072b3      400f94c7       sete dil
0x000072b7      8d7c3f01       lea edi, [rdi + rdi + 1]
0x000072bb      e93afeffff     jmp 0x70fa
0x000072c0      e80ba8ffff     call sym.imp.__stack_chk_fail
0x000072c5      488d0d742e00.  lea rcx, obj.__PRETTY_FUNCTION__.4162   ; 0xa140 ; "xstrtoul"
0x000072cc      488d354d2d00.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0xa020 ; "../coreutils-8.31/lib/xstrtol.c"
0x000072d3      488d3d662d00.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0xa040 ; "0 <= strtol_base && strtol_base <= 36"
0x000072da      ba54000000     mov edx, 0x54                           ; 'T'
0x000072df      e87ca8ffff     call sym.imp.__assert_fail
0x000072e4      41b901000000   mov r9d, 1
0x000072ea      4883cbff       or rbx, 0xffffffffffffffff
0x000072ee      e968ffffff     jmp 0x725b
0x000072f3      41b901000000   mov r9d, 1
0x000072f9      4883cbff       or rbx, 0xffffffffffffffff
0x000072fd      e9f5feffff     jmp 0x71f7
0x00007302      41b801000000   mov r8d, 1
0x00007308      4883cbff       or rbx, 0xffffffffffffffff
0x0000730c      e922feffff     jmp 0x7133
0x00007311      4883c8ff       or rax, 0xffffffffffffffff
0x00007315      41b801000000   mov r8d, 1
0x0000731b      e907feffff     jmp 0x7127
0x00007320      41b901000000   mov r9d, 1
0x00007326      4883cbff       or rbx, 0xffffffffffffffff
0x0000732a      e9a8feffff     jmp 0x71d7
0x0000732f      41b901000000   mov r9d, 1
0x00007335      4883cbff       or rbx, 0xffffffffffffffff
0x00007339      e9fafeffff     jmp 0x7238
0x0000733e      41b901000000   mov r9d, 1
0x00007344      4883cbff       or rbx, 0xffffffffffffffff
0x00007348      e962feffff     jmp 0x71af
0x0000734d      41b801000000   mov r8d, 1
0x00007353      4883c8ff       or rax, 0xffffffffffffffff
0x00007357      e92fffffff     jmp 0x728b
0x0000735c      0f1f4000       nop dword [rax]
;-- xstrtoumax:
0x00007360      4157           push r15
0x00007362      4156           push r14
0x00007364      4155           push r13
0x00007366      4154           push r12
0x00007368      55             push rbp
0x00007369      53             push rbx
0x0000736a      4883ec28       sub rsp, 0x28
0x0000736e      64488b042528.  mov rax, qword fs:[0x28]
0x00007377      4889442418     mov qword [rsp + 0x18], rax
0x0000737c      31c0           xor eax, eax
0x0000737e      83fa24         cmp edx, 0x24
0x00007381      0f875e030000   ja 0x76e5
0x00007387      488d442410     lea rax, [rsp + 0x10]
0x0000738c      4989f7         mov r15, rsi
0x0000738f      4885f6         test rsi, rsi
0x00007392      4889fd         mov rbp, rdi
0x00007395      89542408       mov dword [rsp + 8], edx
0x00007399      4989ce         mov r14, rcx
0x0000739c      4d89c5         mov r13, r8
0x0000739f      4c0f44f8       cmove r15, rax
0x000073a3      e808a6ffff     call sym.imp.__errno_location
0x000073a8      c70000000000   mov dword [rax], 0
0x000073ae      4989c4         mov r12, rax
0x000073b1      0fb65d00       movzx ebx, byte [rbp]
0x000073b5      e806aaffff     call sym.imp.__ctype_b_loc
0x000073ba      8b542408       mov edx, dword [rsp + 8]
0x000073be      488b30         mov rsi, qword [rax]
0x000073c1      4889e8         mov rax, rbp
0x000073c4      eb11           jmp 0x73d7
0x000073c6      662e0f1f8400.  nop word cs:[rax + rax]
0x000073d0      4883c001       add rax, 1
0x000073d4      0fb618         movzx ebx, byte [rax]
0x000073d7      0fb6cb         movzx ecx, bl
0x000073da      f6444e0120     test byte [rsi + rcx*2 + 1], 0x20
0x000073df      75ef           jne 0x73d0
0x000073e1      80fb2d         cmp bl, 0x2d
0x000073e4      7452           je 0x7438
0x000073e6      31c9           xor ecx, ecx
0x000073e8      4c89fe         mov rsi, r15
0x000073eb      4889ef         mov rdi, rbp
0x000073ee      e87da7ffff     call sym.imp.__strtoul_internal
0x000073f3      498b0f         mov rcx, qword [r15]
0x000073f6      4889c3         mov rbx, rax
0x000073f9      4839e9         cmp rcx, rbp
0x000073fc      742a           je 0x7428
0x000073fe      418b0424       mov eax, dword [r12]
0x00007402      85c0           test eax, eax
0x00007404      7462           je 0x7468
0x00007406      83f822         cmp eax, 0x22
0x00007409      bd01000000     mov ebp, 1
0x0000740e      7528           jne 0x7438
0x00007410      4d85ed         test r13, r13
0x00007413      7409           je 0x741e
0x00007415      440fb621       movzx r12d, byte [rcx]
0x00007419      4584e4         test r12b, r12b
0x0000741c      7579           jne 0x7497
0x0000741e      49891e         mov qword [r14], rbx
0x00007421      eb1a           jmp 0x743d
0x00007423      0f1f440000     nop dword [rax + rax]
0x00007428      4d85ed         test r13, r13
0x0000742b      48894c2408     mov qword [rsp + 8], rcx
0x00007430      753e           jne 0x7470
0x00007432      660f1f440000   nop word [rax + rax]
0x00007438      bd04000000     mov ebp, 4
0x0000743d      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00007442      6448333c2528.  xor rdi, qword fs:[0x28]
0x0000744b      89e8           mov eax, ebp
0x0000744d      0f858d020000   jne 0x76e0
0x00007453      4883c428       add rsp, 0x28
0x00007457      5b             pop rbx
0x00007458      5d             pop rbp
0x00007459      415c           pop r12
0x0000745b      415d           pop r13
0x0000745d      415e           pop r14
0x0000745f      415f           pop r15
0x00007461      c3             ret
0x00007462      660f1f440000   nop word [rax + rax]
0x00007468      31ed           xor ebp, ebp
0x0000746a      eba4           jmp 0x7410
0x0000746c      0f1f4000       nop dword [rax]
0x00007470      440fb66500     movzx r12d, byte [rbp]
0x00007475      4584e4         test r12b, r12b
0x00007478      74be           je 0x7438
0x0000747a      410fbef4       movsx esi, r12b
0x0000747e      4c89ef         mov rdi, r13
0x00007481      31ed           xor ebp, ebp
0x00007483      e898a6ffff     call sym.imp.strchr
0x00007488      4885c0         test rax, rax
0x0000748b      bb01000000     mov ebx, 1
0x00007490      488b4c2408     mov rcx, qword [rsp + 8]
0x00007495      74a1           je 0x7438
0x00007497      410fbef4       movsx esi, r12b
0x0000749b      4c89ef         mov rdi, r13
0x0000749e      48894c2408     mov qword [rsp + 8], rcx
0x000074a3      e878a6ffff     call sym.imp.strchr
0x000074a8      4885c0         test rax, rax
0x000074ab      488b4c2408     mov rcx, qword [rsp + 8]
0x000074b0      0f84c6000000   je 0x757c
0x000074b6      418d4424bb     lea eax, [r12 - 0x45]
0x000074bb      3c2f           cmp al, 0x2f
0x000074bd      7751           ja 0x7510
0x000074bf      48ba45893000.  movabs rdx, 0x814400308945
0x000074c9      480fa3c2       bt rdx, rax
0x000074cd      7341           jae 0x7510
0x000074cf      be30000000     mov esi, 0x30                           ; '0'
0x000074d4      4c89ef         mov rdi, r13
0x000074d7      48894c2408     mov qword [rsp + 8], rcx
0x000074dc      e83fa6ffff     call sym.imp.strchr
0x000074e1      4885c0         test rax, rax
0x000074e4      488b4c2408     mov rcx, qword [rsp + 8]
0x000074e9      7425           je 0x7510
0x000074eb      0fb64101       movzx eax, byte [rcx + 1]
0x000074ef      3c44           cmp al, 0x44
0x000074f1      740c           je 0x74ff
0x000074f3      3c69           cmp al, 0x69
0x000074f5      0f84cd010000   je 0x76c8
0x000074fb      3c42           cmp al, 0x42
0x000074fd      7511           jne 0x7510
0x000074ff      bf02000000     mov edi, 2
0x00007504      bee8030000     mov esi, 0x3e8
0x00007509      eb0f           jmp 0x751a
0x0000750b      0f1f440000     nop dword [rax + rax]
0x00007510      bf01000000     mov edi, 1
0x00007515      be00040000     mov esi, 0x400
0x0000751a      4183ec42       sub r12d, 0x42
0x0000751e      4180fc35       cmp r12b, 0x35
0x00007522      7758           ja 0x757c
0x00007524      488d15252c00.  lea rdx, [0x0000a150]
0x0000752b      450fb6e4       movzx r12d, r12b
0x0000752f      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00007533      4801d0         add rax, rdx
0x00007536      ffe0           jmp rax
0x00007538      4889d8         mov rax, rbx
0x0000753b      48f7e6         mul rsi
0x0000753e      0f80ed010000   jo 0x7731
0x00007544      4531c0         xor r8d, r8d
0x00007547      48f7e6         mul rsi
0x0000754a      0f80d2010000   jo 0x7722
0x00007550      4889c3         mov rbx, rax
0x00007553      4409c5         or ebp, r8d
0x00007556      662e0f1f8400.  nop word cs:[rax + rax]
0x00007560      4863ff         movsxd rdi, edi
0x00007563      89e8           mov eax, ebp
0x00007565      4801f9         add rcx, rdi
0x00007568      83c802         or eax, 2
0x0000756b      49890f         mov qword [r15], rcx
0x0000756e      803900         cmp byte [rcx], 0
0x00007571      49891e         mov qword [r14], rbx
0x00007574      0f45e8         cmovne ebp, eax
0x00007577      e9c1feffff     jmp 0x743d
0x0000757c      49891e         mov qword [r14], rbx
0x0000757f      83cd02         or ebp, 2
0x00007582      e9b6feffff     jmp 0x743d
0x00007587      ba02000000     mov edx, 2
0x0000758c      4889d0         mov rax, rdx
0x0000758f      48f7e3         mul rbx
0x00007592      0f8096000000   jo 0x762e
0x00007598      4801db         add rbx, rbx
0x0000759b      ebc3           jmp 0x7560
0x0000759d      ba00020000     mov edx, 0x200
0x000075a2      4889d0         mov rax, rdx
0x000075a5      48f7e3         mul rbx
0x000075a8      0f8080000000   jo 0x762e
0x000075ae      48c1e309       shl rbx, 9
0x000075b2      ebac           jmp 0x7560
0x000075b4      41b807000000   mov r8d, 7
0x000075ba      4531c9         xor r9d, r9d
0x000075bd      0f1f00         nop dword [rax]
0x000075c0      4889d8         mov rax, rbx
0x000075c3      48f7e6         mul rsi
0x000075c6      4889c3         mov rbx, rax
0x000075c9      0f808f010000   jo 0x775e
0x000075cf      4183e801       sub r8d, 1
0x000075d3      75eb           jne 0x75c0
0x000075d5      4409cd         or ebp, r9d
0x000075d8      eb86           jmp 0x7560
0x000075da      41b808000000   mov r8d, 8
0x000075e0      4531c9         xor r9d, r9d
0x000075e3      0f1f440000     nop dword [rax + rax]
0x000075e8      4889d8         mov rax, rbx
0x000075eb      48f7e6         mul rsi
0x000075ee      4889c3         mov rbx, rax
0x000075f1      0f8049010000   jo 0x7740
0x000075f7      4183e801       sub r8d, 1
0x000075fb      75eb           jne 0x75e8
0x000075fd      ebd6           jmp 0x75d5
0x000075ff      41b804000000   mov r8d, 4
0x00007605      4531c9         xor r9d, r9d
0x00007608      4889d8         mov rax, rbx
0x0000760b      48f7e6         mul rsi
0x0000760e      4889c3         mov rbx, rax
0x00007611      0f80fc000000   jo 0x7713
0x00007617      4183e801       sub r8d, 1
0x0000761b      75eb           jne 0x7608
0x0000761d      ebb6           jmp 0x75d5
0x0000761f      4889d8         mov rax, rbx
0x00007622      48f7e6         mul rsi
0x00007625      4889c3         mov rbx, rax
0x00007628      0f8132ffffff   jno 0x7560
0x0000762e      bd01000000     mov ebp, 1
0x00007633      4883cbff       or rbx, 0xffffffffffffffff
0x00007637      e924ffffff     jmp 0x7560
0x0000763c      0f1f4000       nop dword [rax]
0x00007640      41b805000000   mov r8d, 5
0x00007646      4531c9         xor r9d, r9d
0x00007649      4889d8         mov rax, rbx
0x0000764c      48f7e6         mul rsi
0x0000764f      4889c3         mov rbx, rax
0x00007652      0f80f7000000   jo 0x774f
0x00007658      4183e801       sub r8d, 1
0x0000765c      75eb           jne 0x7649
0x0000765e      e972ffffff     jmp 0x75d5
0x00007663      41b806000000   mov r8d, 6
0x00007669      4531c9         xor r9d, r9d
0x0000766c      4889d8         mov rax, rbx
0x0000766f      48f7e6         mul rsi
0x00007672      4889c3         mov rbx, rax
0x00007675      0f8089000000   jo 0x7704
0x0000767b      4183e801       sub r8d, 1
0x0000767f      75eb           jne 0x766c
0x00007681      e94fffffff     jmp 0x75d5
0x00007686      ba00040000     mov edx, 0x400
0x0000768b      4889d0         mov rax, rdx
0x0000768e      48f7e3         mul rbx
0x00007691      709b           jo 0x762e
0x00007693      48c1e30a       shl rbx, 0xa
0x00007697      e9c4feffff     jmp 0x7560
0x0000769c      4889d8         mov rax, rbx
0x0000769f      48f7e6         mul rsi
0x000076a2      0f80c5000000   jo 0x776d
0x000076a8      4531c0         xor r8d, r8d
0x000076ab      48f7e6         mul rsi
0x000076ae      0f8193feffff   jno 0x7547
0x000076b4      41b801000000   mov r8d, 1
0x000076ba      4883c8ff       or rax, 0xffffffffffffffff
0x000076be      e984feffff     jmp 0x7547
0x000076c3      0f1f440000     nop dword [rax + rax]
0x000076c8      31ff           xor edi, edi
0x000076ca      80790242       cmp byte [rcx + 2], 0x42
0x000076ce      be00040000     mov esi, 0x400
0x000076d3      400f94c7       sete dil
0x000076d7      8d7c3f01       lea edi, [rdi + rdi + 1]
0x000076db      e93afeffff     jmp 0x751a
0x000076e0      e8eba3ffff     call sym.imp.__stack_chk_fail
0x000076e5      488d0d3c2b00.  lea rcx, obj.__PRETTY_FUNCTION__.4162_1 ; 0xa228 ; "xstrtoumax"
0x000076ec      488d352d2900.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0xa020 ; "../coreutils-8.31/lib/xstrtol.c"
0x000076f3      488d3d462900.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0xa040 ; "0 <= strtol_base && strtol_base <= 36"
0x000076fa      ba54000000     mov edx, 0x54                           ; 'T'
0x000076ff      e85ca4ffff     call sym.imp.__assert_fail
0x00007704      41b901000000   mov r9d, 1
0x0000770a      4883cbff       or rbx, 0xffffffffffffffff
0x0000770e      e968ffffff     jmp 0x767b
0x00007713      41b901000000   mov r9d, 1
0x00007719      4883cbff       or rbx, 0xffffffffffffffff
0x0000771d      e9f5feffff     jmp 0x7617
0x00007722      41b801000000   mov r8d, 1
0x00007728      4883cbff       or rbx, 0xffffffffffffffff
0x0000772c      e922feffff     jmp 0x7553
0x00007731      4883c8ff       or rax, 0xffffffffffffffff
0x00007735      41b801000000   mov r8d, 1
0x0000773b      e907feffff     jmp 0x7547
0x00007740      41b901000000   mov r9d, 1
0x00007746      4883cbff       or rbx, 0xffffffffffffffff
0x0000774a      e9a8feffff     jmp 0x75f7
0x0000774f      41b901000000   mov r9d, 1
0x00007755      4883cbff       or rbx, 0xffffffffffffffff
0x00007759      e9fafeffff     jmp 0x7658
0x0000775e      41b901000000   mov r9d, 1
0x00007764      4883cbff       or rbx, 0xffffffffffffffff
0x00007768      e962feffff     jmp 0x75cf
0x0000776d      41b801000000   mov r8d, 1
0x00007773      4883c8ff       or rax, 0xffffffffffffffff
0x00007777      e92fffffff     jmp 0x76ab
0x0000777c      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x00007780      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00007782      55             push rbp
0x00007783      53             push rbx
0x00007784      4889fb         mov rbx, rdi
0x00007787      e894a4ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x0000778c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x0000778e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00007791      7854           js 0x77e7                               ; ../coreutils-8.31/lib/fclose.c:66
0x00007793      e8e8a4ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00007798      85c0           test eax, eax
0x0000779a      752c           jne 0x77c8
0x0000779c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x0000779f      e85c000000     call sym.rpl_fflush
0x000077a4      85c0           test eax, eax
0x000077a6      743c           je 0x77e4
0x000077a8      e803a2ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x000077ad      448b20         mov r12d, dword [rax]
0x000077b0      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x000077b3      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x000077b6      e8b5a2ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x000077bb      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x000077be      7530           jne 0x77f0
0x000077c0      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x000077c1      5d             pop rbp
0x000077c2      415c           pop r12
0x000077c4      c3             ret
0x000077c5      0f1f00         nop dword [rax]
0x000077c8      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x000077cb      e850a4ffff     call sym.imp.fileno
0x000077d0      31f6           xor esi, esi
0x000077d2      ba01000000     mov edx, 1
0x000077d7      89c7           mov edi, eax
0x000077d9      e862a3ffff     call sym.imp.lseek
0x000077de      4883f8ff       cmp rax, 0xffffffffffffffff
0x000077e2      75b8           jne 0x779c
0x000077e4      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x000077e7      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x000077e8      5d             pop rbp
0x000077e9      415c           pop r12
0x000077eb      e980a2ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x000077f0      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x000077f4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x000077f9      ebc5           jmp 0x77c0
0x000077fb      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x00007800      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00007803      53             push rbx
0x00007804      4889fb         mov rbx, rdi
0x00007807      7411           je 0x781a                               ; ../coreutils-8.31/lib/fflush.c:150
0x00007809      e872a4ffff     call sym.imp.__freading
0x0000780e      85c0           test eax, eax
0x00007810      7408           je 0x781a
0x00007812      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00007818      750e           jne 0x7828
0x0000781a      4889df         mov rdi, rbx
0x0000781d      5b             pop rbx
0x0000781e      e92da4ffff     jmp sym.imp.fflush
0x00007823      0f1f440000     nop dword [rax + rax]
0x00007828      4889df         mov rdi, rbx
0x0000782b      ba01000000     mov edx, 1
0x00007830      31f6           xor esi, esi
0x00007832      e809000000     call sym.rpl_fseeko
0x00007837      4889df         mov rdi, rbx
0x0000783a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x0000783b      e910a4ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00007840      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00007844      48394710       cmp qword [rdi + 0x10], rax
0x00007848      7406           je 0x7850                               ; ../coreutils-8.31/lib/fseeko.c:32
0x0000784a      e9d1a4ffff     jmp sym.imp.fseeko
0x0000784f      90             nop
0x00007850      488b4720       mov rax, qword [rdi + 0x20]
0x00007854      48394728       cmp qword [rdi + 0x28], rax
0x00007858      75f0           jne 0x784a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x0000785a      48837f4800     cmp qword [rdi + 0x48], 0
0x0000785f      75e9           jne 0x784a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00007861      4154           push r12
0x00007863      55             push rbp
0x00007864      4189d4         mov r12d, edx
0x00007867      53             push rbx
0x00007868      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x0000786b      4889fb         mov rbx, rdi
0x0000786e      e8ada3ffff     call sym.imp.fileno
0x00007873      4489e2         mov edx, r12d
0x00007876      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00007879      89c7           mov edi, eax
0x0000787b      e8c0a2ffff     call sym.imp.lseek
0x00007880      4883f8ff       cmp rax, 0xffffffffffffffff
0x00007884      740c           je 0x7892
0x00007886      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00007889      488983900000.  mov qword [rbx + 0x90], rax
0x00007890      31c0           xor eax, eax
0x00007892      5b             pop rbx
0x00007893      5d             pop rbp
0x00007894      415c           pop r12
0x00007896      c3             ret
0x00007897      660f1f840000.  nop word [rax + rax]
;-- rpl_mbrtowc:
0x000078a0      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x000078a2      4154           push r12
0x000078a4      4989f5         mov r13, rsi
0x000078a7      55             push rbp
0x000078a8      53             push rbx
0x000078a9      4889fb         mov rbx, rdi
0x000078ac      4989d4         mov r12, rdx
0x000078af      4883ec18       sub rsp, 0x18
0x000078b3      64488b042528.  mov rax, qword fs:[0x28]
0x000078bc      4889442408     mov qword [rsp + 8], rax
0x000078c1      31c0           xor eax, eax
0x000078c3      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x000078c8      4885ff         test rdi, rdi
0x000078cb      480f44d8       cmove rbx, rax
0x000078cf      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x000078d2      e829a2ffff     call sym.imp.mbrtowc
0x000078d7      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x000078db      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x000078de      7620           jbe 0x7900                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x000078e0      4d85e4         test r12, r12
0x000078e3      741b           je 0x7900
0x000078e5      31ff           xor edi, edi
0x000078e7      e864010000     call sym.hard_locale
0x000078ec      84c0           test al, al
0x000078ee      7510           jne 0x7900
0x000078f0      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x000078f5      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x000078fa      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x000078fc      0f1f4000       nop dword [rax]
0x00007900      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00007905      644833142528.  xor rdx, qword fs:[0x28]
0x0000790e      4889e8         mov rax, rbp
0x00007911      750b           jne 0x791e
0x00007913      4883c418       add rsp, 0x18
0x00007917      5b             pop rbx
0x00007918      5d             pop rbp
0x00007919      415c           pop r12
0x0000791b      415d           pop r13
0x0000791d      c3             ret
0x0000791e      e8ada1ffff     call sym.imp.__stack_chk_fail
0x00007923      662e0f1f8400.  nop word cs:[rax + rax]
0x0000792d      0f1f00         nop dword [rax]
;-- close_stream:
0x00007930      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00007932      55             push rbp
0x00007933      4889fd         mov rbp, rdi
0x00007936      53             push rbx
0x00007937      e8b4a0ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x0000793c      8b5d00         mov ebx, dword [rbp]
0x0000793f      4889ef         mov rdi, rbp
0x00007942      4989c4         mov r12, rax
0x00007945      e836feffff     call sym.rpl_fclose
0x0000794a      83e320         and ebx, 0x20                           ; "@"
0x0000794d      85db           test ebx, ebx
0x0000794f      7517           jne 0x7968
0x00007951      85c0           test eax, eax
0x00007953      740a           je 0x795f                               ; stdio.h:-186
0x00007955      4d85e4         test r12, r12                           ; stdio.h:-178
0x00007958      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000795d      7439           je 0x7998
0x0000795f      5b             pop rbx
0x00007960      5d             pop rbp
0x00007961      415c           pop r12
0x00007963      c3             ret
0x00007964      0f1f4000       nop dword [rax]
0x00007968      85c0           test eax, eax
0x0000796a      751c           jne 0x7988
0x0000796c      e83fa0ffff     call sym.imp.__errno_location
0x00007971      c70000000000   mov dword [rax], 0
0x00007977      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000797c      5b             pop rbx
0x0000797d      5d             pop rbp
0x0000797e      415c           pop r12
0x00007980      c3             ret
0x00007981      0f1f80000000.  nop dword [rax]
0x00007988      5b             pop rbx
0x00007989      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000798e      5d             pop rbp                                 ; stdio.h:-186
0x0000798f      415c           pop r12
0x00007991      c3             ret
0x00007992      660f1f440000   nop word [rax + rax]
0x00007998      e813a0ffff     call sym.imp.__errno_location
0x0000799d      833809         cmp dword [rax], 9
0x000079a0      5b             pop rbx
0x000079a1      5d             pop rbp
0x000079a2      415c           pop r12                                 ; stdio.h:-178
0x000079a4      0f95c0         setne al
0x000079a7      0fb6c0         movzx eax, al
0x000079aa      f7d8           neg eax
0x000079ac      c3             ret
0x000079ad      0f1f00         nop dword [rax]
;-- fopen_safer:
0x000079b0      4154           push r12                                ; ../coreutils-8.31/lib/fopen-safer.c:32
0x000079b2      55             push rbp
0x000079b3      4889f5         mov rbp, rsi
0x000079b6      53             push rbx
0x000079b7      e874a3ffff     call sym.imp.fopen                      ; ../coreutils-8.31/lib/fopen-safer.c:33
0x000079bc      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fopen-safer.c:35
0x000079bf      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/fopen-safer.c:33
0x000079c2      740d           je 0x79d1                               ; ../coreutils-8.31/lib/fopen-safer.c:35
0x000079c4      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/fopen-safer.c:37
0x000079c7      e854a2ffff     call sym.imp.fileno
0x000079cc      83f802         cmp eax, 2                              ; ../coreutils-8.31/lib/fopen-safer.c:39
0x000079cf      760f           jbe 0x79e0
0x000079d1      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:63
0x000079d4      5b             pop rbx
0x000079d5      5d             pop rbp
0x000079d6      415c           pop r12
0x000079d8      c3             ret
0x000079d9      0f1f80000000.  nop dword [rax]
0x000079e0      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fopen-safer.c:41
0x000079e2      e8e9130000     call sym.dup_safer
0x000079e7      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fopen-safer.c:43
0x000079e9      4189c4         mov r12d, eax                           ; ../coreutils-8.31/lib/fopen-safer.c:41
0x000079ec      783a           js 0x7a28                               ; ../coreutils-8.31/lib/fopen-safer.c:43
0x000079ee      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:51
0x000079f1      e88afdffff     call sym.rpl_fclose
0x000079f6      85c0           test eax, eax
0x000079f8      7513           jne 0x7a0d
0x000079fa      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fopen-safer.c:52
0x000079fd      4489e7         mov edi, r12d
0x00007a00      e8aba2ffff     call sym.imp.fdopen
0x00007a05      4885c0         test rax, rax
0x00007a08      4889c3         mov rbx, rax
0x00007a0b      75c4           jne 0x79d1
0x00007a0d      e89e9fffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fopen-safer.c:54
0x00007a12      8b28           mov ebp, dword [rax]
0x00007a14      4889c3         mov rbx, rax
0x00007a17      4489e7         mov edi, r12d                           ; ../coreutils-8.31/lib/fopen-safer.c:55
0x00007a1a      e881a1ffff     call sym.imp.close
0x00007a1f      892b           mov dword [rbx], ebp                    ; ../coreutils-8.31/lib/fopen-safer.c:56
0x00007a21      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fopen-safer.c:57
0x00007a23      ebac           jmp 0x79d1
0x00007a25      0f1f00         nop dword [rax]
0x00007a28      e8839fffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fopen-safer.c:45
0x00007a2d      448b20         mov r12d, dword [rax]
0x00007a30      4889c5         mov rbp, rax
0x00007a33      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:46
0x00007a36      e845fdffff     call sym.rpl_fclose
0x00007a3b      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fopen-safer.c:48
0x00007a3d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fopen-safer.c:47
0x00007a41      eb8e           jmp 0x79d1                              ; ../coreutils-8.31/lib/fopen-safer.c:48
0x00007a43      662e0f1f8400.  nop word cs:[rax + rax]
0x00007a4d      0f1f00         nop dword [rax]
;-- hard_locale:
0x00007a50      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00007a54      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00007a56      e865a2ffff     call sym.imp.setlocale
0x00007a5b      4889c2         mov rdx, rax
0x00007a5e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00007a63      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00007a66      741d           je 0x7a85
0x00007a68      488d3dc42700.  lea rdi, [0x0000a233]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x00007a6f      b902000000     mov ecx, 2
0x00007a74      4889d6         mov rsi, rdx
0x00007a77      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00007a79      0f97c1         seta cl
0x00007a7c      80d900         sbb cl, 0
0x00007a7f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00007a81      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00007a83      750b           jne 0x7a90
0x00007a85      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00007a89      c3             ret
0x00007a8a      660f1f440000   nop word [rax + rax]
0x00007a90      488d3d9e2700.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0xa235 ; "POSIX"
0x00007a97      b906000000     mov ecx, 6
0x00007a9c      4889d6         mov rsi, rdx
0x00007a9f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00007aa1      0f97c0         seta al
0x00007aa4      1c00           sbb al, 0
0x00007aa6      84c0           test al, al
0x00007aa8      0f95c0         setne al
0x00007aab      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00007aaf      c3             ret
;-- next_prime:
0x00007ab0      4883ff0a       cmp rdi, 0xa
0x00007ab4      b80a000000     mov eax, 0xa
0x00007ab9      49b9abaaaaaa.  movabs r9, 0xaaaaaaaaaaaaaaab
0x00007ac3      480f42f8       cmovb rdi, rax
0x00007ac7      4883cf01       or rdi, 1                               ; ../coreutils-8.31/lib/hash.c:470
0x00007acb      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/hash.c:472
0x00007acf      746e           je 0x7b3f
0x00007ad1      0f1f80000000.  nop dword [rax]
0x00007ad8      4889f8         mov rax, rdi
0x00007adb      4889f9         mov rcx, rdi
0x00007ade      49f7e1         mul r9
0x00007ae1      4889d0         mov rax, rdx
0x00007ae4      48d1e8         shr rax, 1
0x00007ae7      488d0440       lea rax, [rax + rax*2]
0x00007aeb      4829c1         sub rcx, rax
0x00007aee      4883ff09       cmp rdi, 9                              ; ../coreutils-8.31/lib/hash.c:449
0x00007af2      4889c8         mov rax, rcx
0x00007af5      7639           jbe 0x7b30
0x00007af7      4885c9         test rcx, rcx
0x00007afa      7439           je 0x7b35
0x00007afc      41b810000000   mov r8d, 0x10
0x00007b02      be09000000     mov esi, 9                              ; ../coreutils-8.31/lib/hash.c:447
0x00007b07      b903000000     mov ecx, 3                              ; ../coreutils-8.31/lib/hash.c:446
0x00007b0c      eb0b           jmp 0x7b19
0x00007b0e      6690           nop
0x00007b10      4983c008       add r8, 8
0x00007b14      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:449
0x00007b17      741c           je 0x7b35
0x00007b19      4883c102       add rcx, 2                              ; ../coreutils-8.31/lib/hash.c:453
0x00007b1d      31d2           xor edx, edx
0x00007b1f      4889f8         mov rax, rdi
0x00007b22      48f7f1         div rcx
0x00007b25      4c01c6         add rsi, r8                             ; ../coreutils-8.31/lib/hash.c:452
0x00007b28      4839fe         cmp rsi, rdi                            ; ../coreutils-8.31/lib/hash.c:449
0x00007b2b      4889d0         mov rax, rdx
0x00007b2e      72e0           jb 0x7b10
0x00007b30      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:472
0x00007b33      750a           jne 0x7b3f
0x00007b35      4883c702       add rdi, 2                              ; ../coreutils-8.31/lib/hash.c:473
0x00007b39      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/hash.c:472
0x00007b3d      7599           jne 0x7ad8
0x00007b3f      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/hash.c:476
0x00007b42      c3             ret
0x00007b43      0f1f00         nop dword [rax]
0x00007b46      662e0f1f8400.  nop word cs:[rax + rax]
;-- raw_hasher:
0x00007b50      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/hash.c:487
0x00007b53      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/hash.c:494
0x00007b55      48c1c803       ror rax, 3                              ; ../coreutils-8.31/lib/bitrotate.h:87
0x00007b59      48f7f6         div rsi                                 ; ../coreutils-8.31/lib/hash.c:494
0x00007b5c      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/hash.c:495
0x00007b5f      c3             ret
;-- raw_comparator:
0x00007b60      4839f7         cmp rdi, rsi                            ; ../coreutils-8.31/lib/hash.c:500
0x00007b63      0f94c0         sete al
0x00007b66      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:502
0x00007b67      660f1f840000.  nop word [rax + rax]
;-- safe_hasher:
0x00007b70      53             push rbx                                ; ../coreutils-8.31/lib/hash.c:250
0x00007b71      4889fb         mov rbx, rdi
0x00007b74      4889f7         mov rdi, rsi
0x00007b77      488b7310       mov rsi, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/hash.c:251
0x00007b7b      ff5330         call qword [rbx + 0x30]
0x00007b7e      48394310       cmp qword [rbx + 0x10], rax             ; ../coreutils-8.31/lib/hash.c:252
0x00007b82      7609           jbe 0x7b8d
0x00007b84      48c1e004       shl rax, 4                              ; ../coreutils-8.31/lib/hash.c:254
0x00007b88      480303         add rax, qword [rbx]
0x00007b8b      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash.c:255
0x00007b8c      c3             ret
0x00007b8d      e80e9effff     call sym.imp.abort                      ; ../coreutils-8.31/lib/hash.c:253
0x00007b92      0f1f4000       nop dword [rax]
0x00007b96      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_find_entry:
0x00007ba0      4156           push r14                                ; ../coreutils-8.31/lib/hash.c:792
0x00007ba2      4155           push r13
0x00007ba4      4989d6         mov r14, rdx
0x00007ba7      4154           push r12
0x00007ba9      55             push rbp
0x00007baa      4989fc         mov r12, rdi
0x00007bad      53             push rbx
0x00007bae      4889f5         mov rbp, rsi
0x00007bb1      4189cd         mov r13d, ecx
0x00007bb4      e8b7ffffff     call sym.safe_hasher                    ; ../coreutils-8.31/lib/hash.c:793
0x00007bb9      498906         mov qword [r14], rax                    ; ../coreutils-8.31/lib/hash.c:796
0x00007bbc      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:799
0x00007bbf      4885f6         test rsi, rsi
0x00007bc2      0f84e8000000   je 0x7cb0
0x00007bc8      4839ee         cmp rsi, rbp                            ; ../coreutils-8.31/lib/hash.c:803
0x00007bcb      4889c3         mov rbx, rax
0x00007bce      0f848f000000   je 0x7c63
0x00007bd4      4889ef         mov rdi, rbp
0x00007bd7      41ff542438     call qword [r12 + 0x38]
0x00007bdc      84c0           test al, al
0x00007bde      0f857c000000   jne 0x7c60
0x00007be4      488b4308       mov rax, qword [rbx + 8]                ; ../coreutils-8.31/lib/hash.c:828
0x00007be8      4885c0         test rax, rax
0x00007beb      0f84bf000000   je 0x7cb0
0x00007bf1      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:830
0x00007bf4      4839f5         cmp rbp, rsi
0x00007bf7      7520           jne 0x7c19
0x00007bf9      eb31           jmp 0x7c2c
0x00007bfb      0f1f440000     nop dword [rax + rax]
0x00007c00      488b5b08       mov rbx, qword [rbx + 8]                ; ../coreutils-8.31/lib/hash.c:828
0x00007c04      488b4308       mov rax, qword [rbx + 8]
0x00007c08      4885c0         test rax, rax
0x00007c0b      0f849f000000   je 0x7cb0
0x00007c11      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:830
0x00007c14      4839ee         cmp rsi, rbp
0x00007c17      7413           je 0x7c2c
0x00007c19      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/hash.c:831
0x00007c1c      41ff542438     call qword [r12 + 0x38]
0x00007c21      84c0           test al, al
0x00007c23      74db           je 0x7c00
0x00007c25      488b4308       mov rax, qword [rbx + 8]
0x00007c29      488b30         mov rsi, qword [rax]
0x00007c2c      4584ed         test r13b, r13b                         ; ../coreutils-8.31/lib/hash.c:835
0x00007c2f      741d           je 0x7c4e
0x00007c31      488b5008       mov rdx, qword [rax + 8]                ; ../coreutils-8.31/lib/hash.c:841
0x00007c35      48895308       mov qword [rbx + 8], rdx
0x00007c39      48c700000000.  mov qword [rax], 0                      ; ../coreutils-8.31/lib/hash.c:778
0x00007c40      498b542448     mov rdx, qword [r12 + 0x48]             ; ../coreutils-8.31/lib/hash.c:779
0x00007c45      48895008       mov qword [rax + 8], rdx
0x00007c49      4989442448     mov qword [r12 + 0x48], rax             ; ../coreutils-8.31/lib/hash.c:780
0x00007c4e      5b             pop rbx
0x00007c4f      4889f0         mov rax, rsi
0x00007c52      5d             pop rbp
0x00007c53      415c           pop r12
0x00007c55      415d           pop r13
0x00007c57      415e           pop r14
0x00007c59      c3             ret
0x00007c5a      660f1f440000   nop word [rax + rax]
0x00007c60      488b33         mov rsi, qword [rbx]
0x00007c63      4584ed         test r13b, r13b
0x00007c66      74e6           je 0x7c4e
0x00007c68      488b4308       mov rax, qword [rbx + 8]
0x00007c6c      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:672
0x00007c6f      742f           je 0x7ca0
0x00007c71      f30f6f00       movdqu xmm0, xmmword [rax]
0x00007c75      0f1103         movups xmmword [rbx], xmm0
0x00007c78      48c700000000.  mov qword [rax], 0
0x00007c7f      498b542448     mov rdx, qword [r12 + 0x48]             ; ../coreutils-8.31/lib/hash.c:388
0x00007c84      48895008       mov qword [rax + 8], rdx
0x00007c88      4989442448     mov qword [r12 + 0x48], rax
0x00007c8d      4889f0         mov rax, rsi
0x00007c90      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash.c:398
0x00007c91      5d             pop rbp
0x00007c92      415c           pop r12
0x00007c94      415d           pop r13
0x00007c96      415e           pop r14
0x00007c98      c3             ret
0x00007c99      0f1f80000000.  nop dword [rax]
0x00007ca0      48c703000000.  mov qword [rbx], 0
0x00007ca7      eba5           jmp 0x7c4e
0x00007ca9      0f1f80000000.  nop dword [rax]
0x00007cb0      31f6           xor esi, esi
0x00007cb2      5b             pop rbx
0x00007cb3      4889f0         mov rax, rsi
0x00007cb6      5d             pop rbp
0x00007cb7      415c           pop r12
0x00007cb9      415d           pop r13                                 ; ../coreutils-8.31/lib/hash.c:401
0x00007cbb      415e           pop r14
0x00007cbd      c3             ret
0x00007cbe      6690           nop
;-- check_tuning.isra.0:
0x00007cc0      488b17         mov rdx, qword [rdi]
0x00007cc3      488d0de62500.  lea rcx, obj.default_tuning             ; 0xa2b0
0x00007cca      b801000000     mov eax, 1
0x00007ccf      4839ca         cmp rdx, rcx
0x00007cd2      7461           je 0x7d35
0x00007cd4      f30f104208     movss xmm0, dword [rdx + 8]
0x00007cd9      0f2e05e42500.  ucomiss xmm0, dword [0x0000a2c4]
0x00007ce0      764e           jbe 0x7d30
0x00007ce2      f30f100dde25.  movss xmm1, dword [0x0000a2c8]          ; [0xa2c8:4]=0x3f666666
0x00007cea      0f2ec8         ucomiss xmm1, xmm0
0x00007ced      7641           jbe 0x7d30
0x00007cef      f30f104a0c     movss xmm1, dword [rdx + 0xc]           ; ../coreutils-8.31/lib/hash.c:408
0x00007cf4      0f2e0dd12500.  ucomiss xmm1, dword [0x0000a2cc]
0x00007cfb      7633           jbe 0x7d30
0x00007cfd      f30f100a       movss xmm1, dword [rdx]
0x00007d01      0f2e0dc82500.  ucomiss xmm1, dword [0x0000a2d0]
0x00007d08      7226           jb 0x7d30
0x00007d0a      f30f580db225.  addss xmm1, dword [0x0000a2c4]          ; ../coreutils-8.31/lib/hash.c:737
0x00007d12      f30f105204     movss xmm2, dword [rdx + 4]
0x00007d17      0f2ed1         ucomiss xmm2, xmm1
0x00007d1a      7614           jbe 0x7d30
0x00007d1c      f30f101db025.  movss xmm3, dword [0x0000a2d4]          ; [0xa2d4:4]=0x3f800000
0x00007d24      0f2eda         ucomiss xmm3, xmm2                      ; ../coreutils-8.31/lib/hash.c:738
0x00007d27      7207           jb 0x7d30
0x00007d29      0f2ec1         ucomiss xmm0, xmm1
0x00007d2c      7707           ja 0x7d35
0x00007d2e      6690           nop
0x00007d30      48890f         mov qword [rdi], rcx
0x00007d33      31c0           xor eax, eax
0x00007d35      f3c3           ret
0x00007d37      660f1f840000.  nop word [rax + rax]
;-- transfer_entries:
0x00007d40      4157           push r15
0x00007d42      4156           push r14
0x00007d44      4155           push r13                                ; ../coreutils-8.31/lib/hash.c:760
0x00007d46      4154           push r12
0x00007d48      55             push rbp                                ; ../coreutils-8.31/lib/hash.c:749
0x00007d49      53             push rbx
0x00007d4a      4883ec08       sub rsp, 8
0x00007d4e      4c8b26         mov r12, qword [rsi]
0x00007d51      4c3b6608       cmp r12, qword [rsi + 8]
0x00007d55      0f83dd000000   jae 0x7e38
0x00007d5b      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/hash.c:752
0x00007d5e      4989f5         mov r13, rsi
0x00007d61      4189d6         mov r14d, edx
0x00007d64      0f1f4000       nop dword [rax]
0x00007d68      4d8b3c24       mov r15, qword [r12]
0x00007d6c      4d85ff         test r15, r15
0x00007d6f      0f84b5000000   je 0x7e2a
0x00007d75      498b5c2408     mov rbx, qword [r12 + 8]
0x00007d7a      4885db         test rbx, rbx
0x00007d7d      751d           jne 0x7d9c
0x00007d7f      eb5a           jmp 0x7ddb
0x00007d81      0f1f80000000.  nop dword [rax]
0x00007d88      488b4808       mov rcx, qword [rax + 8]
0x00007d8c      4885d2         test rdx, rdx
0x00007d8f      48894b08       mov qword [rbx + 8], rcx                ; ../coreutils-8.31/lib/bitrotate.h:557
0x00007d93      48895808       mov qword [rax + 8], rbx
0x00007d97      4889d3         mov rbx, rdx
0x00007d9a      743b           je 0x7dd7
0x00007d9c      4c8b3b         mov r15, qword [rbx]
0x00007d9f      4889ef         mov rdi, rbp
0x00007da2      4c89fe         mov rsi, r15
0x00007da5      e8c6fdffff     call sym.safe_hasher
0x00007daa      48833800       cmp qword [rax], 0
0x00007dae      488b5308       mov rdx, qword [rbx + 8]                ; ../coreutils-8.31/lib/bitrotate.h:329
0x00007db2      75d4           jne 0x7d88
0x00007db4      4c8938         mov qword [rax], r15
0x00007db7      4883451801     add qword [rbp + 0x18], 1
0x00007dbc      4885d2         test rdx, rdx
0x00007dbf      48c703000000.  mov qword [rbx], 0
0x00007dc6      488b4548       mov rax, qword [rbp + 0x48]
0x00007dca      48894308       mov qword [rbx + 8], rax
0x00007dce      48895d48       mov qword [rbp + 0x48], rbx             ; ../coreutils-8.31/lib/bitrotate.h:-285
0x00007dd2      4889d3         mov rbx, rdx                            ; ../coreutils-8.31/lib/bitrotate.h:-283
0x00007dd5      75c5           jne 0x7d9c
0x00007dd7      4d8b3c24       mov r15, qword [r12]
0x00007ddb      4584f6         test r14b, r14b
0x00007dde      49c744240800.  mov qword [r12 + 8], 0                  ; ../coreutils-8.31/lib/bitrotate.h:-277
0x00007de7      7541           jne 0x7e2a
0x00007de9      4c89fe         mov rsi, r15
0x00007dec      4889ef         mov rdi, rbp
0x00007def      e87cfdffff     call sym.safe_hasher
0x00007df4      48833800       cmp qword [rax], 0
0x00007df8      4889c3         mov rbx, rax
0x00007dfb      7453           je 0x7e50
0x00007dfd      488b4548       mov rax, qword [rbp + 0x48]
0x00007e01      4885c0         test rax, rax
0x00007e04      745a           je 0x7e60
0x00007e06      488b5008       mov rdx, qword [rax + 8]
0x00007e0a      48895548       mov qword [rbp + 0x48], rdx
0x00007e0e      488b5308       mov rdx, qword [rbx + 8]                ; ../coreutils-8.31/lib/bitrotate.h:-255
0x00007e12      4c8938         mov qword [rax], r15
0x00007e15      48895008       mov qword [rax + 8], rdx
0x00007e19      48894308       mov qword [rbx + 8], rax
0x00007e1d      49c704240000.  mov qword [r12], 0                      ; ../coreutils-8.31/lib/bitrotate.h:-250
0x00007e25      49836d1801     sub qword [r13 + 0x18], 1
0x00007e2a      4983c410       add r12, 0x10                           ; ../coreutils-8.31/lib/bitrotate.h:-249
0x00007e2e      4d396508       cmp qword [r13 + 8], r12                ; ../coreutils-8.31/lib/bitrotate.h:-250
0x00007e32      0f8730ffffff   ja 0x7d68
0x00007e38      4883c408       add rsp, 8
0x00007e3c      b801000000     mov eax, 1
0x00007e41      5b             pop rbx
0x00007e42      5d             pop rbp
0x00007e43      415c           pop r12
0x00007e45      415d           pop r13                                 ; ../coreutils-8.31/lib/bitrotate.h:-241
0x00007e47      415e           pop r14
0x00007e49      415f           pop r15
0x00007e4b      c3             ret
0x00007e4c      0f1f4000       nop dword [rax]
0x00007e50      4c8938         mov qword [rax], r15
0x00007e53      4883451801     add qword [rbp + 0x18], 1
0x00007e58      ebc3           jmp 0x7e1d
0x00007e5a      660f1f440000   nop word [rax + rax]
0x00007e60      bf10000000     mov edi, 0x10
0x00007e65      e8d69dffff     call sym.imp.malloc
0x00007e6a      4885c0         test rax, rax
0x00007e6d      759f           jne 0x7e0e
0x00007e6f      4883c408       add rsp, 8
0x00007e73      31c0           xor eax, eax
0x00007e75      5b             pop rbx
0x00007e76      5d             pop rbp
0x00007e77      415c           pop r12
0x00007e79      415d           pop r13
0x00007e7b      415e           pop r14
0x00007e7d      415f           pop r15
0x00007e7f      c3             ret
;-- hash_get_n_buckets:
0x00007e80      488b4710       mov rax, qword [rdi + 0x10]
0x00007e84      c3             ret
0x00007e85      90             nop
0x00007e86      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/bitrotate.h:-218
;-- hash_get_n_buckets_used:
0x00007e90      488b4718       mov rax, qword [rdi + 0x18]
0x00007e94      c3             ret                                     ; ../coreutils-8.31/lib/bitrotate.h:-210
0x00007e95      90             nop
0x00007e96      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/bitrotate.h:-213
;-- hash_get_n_entries:
0x00007ea0      488b4720       mov rax, qword [rdi + 0x20]
0x00007ea4      c3             ret
0x00007ea5      90             nop                                     ; ../coreutils-8.31/lib/bitrotate.h:-209
0x00007ea6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_max_bucket_length:
0x00007eb0      488b37         mov rsi, qword [rdi]
0x00007eb3      488b7f08       mov rdi, qword [rdi + 8]
0x00007eb7      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/bitrotate.h:-259
0x00007eb9      4839fe         cmp rsi, rdi                            ; ../coreutils-8.31/lib/bitrotate.h:-205
0x00007ebc      7339           jae 0x7ef7
0x00007ebe      6690           nop
0x00007ec0      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/bitrotate.h:-268
0x00007ec4      7426           je 0x7eec                               ; ../coreutils-8.31/lib/bitrotate.h:-284
0x00007ec6      488b5608       mov rdx, qword [rsi + 8]
0x00007eca      b901000000     mov ecx, 1
0x00007ecf      4885d2         test rdx, rdx
0x00007ed2      7411           je 0x7ee5
0x00007ed4      0f1f4000       nop dword [rax]
0x00007ed8      488b5208       mov rdx, qword [rdx + 8]
0x00007edc      4883c101       add rcx, 1
0x00007ee0      4885d2         test rdx, rdx
0x00007ee3      75f3           jne 0x7ed8
0x00007ee5      4839c8         cmp rax, rcx
0x00007ee8      480f42c1       cmovb rax, rcx                          ; ../coreutils-8.31/lib/bitrotate.h:-252
0x00007eec      4883c610       add rsi, 0x10
0x00007ef0      4839fe         cmp rsi, rdi
0x00007ef3      72cb           jb 0x7ec0
0x00007ef5      f3c3           ret
0x00007ef7      f3c3           ret
0x00007ef9      0f1f80000000.  nop dword [rax]
;-- hash_table_ok:
0x00007f00      488b0f         mov rcx, qword [rdi]
0x00007f03      4c8b4708       mov r8, qword [rdi + 8]
0x00007f07      31d2           xor edx, edx
0x00007f09      31f6           xor esi, esi
0x00007f0b      4c39c1         cmp rcx, r8
0x00007f0e      7336           jae 0x7f46
0x00007f10      48833900       cmp qword [rcx], 0
0x00007f14      7427           je 0x7f3d
0x00007f16      488b4108       mov rax, qword [rcx + 8]
0x00007f1a      4883c601       add rsi, 1
0x00007f1e      4883c201       add rdx, 1
0x00007f22      4885c0         test rax, rax
0x00007f25      7416           je 0x7f3d
0x00007f27      660f1f840000.  nop word [rax + rax]
0x00007f30      488b4008       mov rax, qword [rax + 8]
0x00007f34      4883c201       add rdx, 1
0x00007f38      4885c0         test rax, rax
0x00007f3b      75f3           jne 0x7f30
0x00007f3d      4883c110       add rcx, 0x10
0x00007f41      4c39c1         cmp rcx, r8
0x00007f44      72ca           jb 0x7f10
0x00007f46      31c0           xor eax, eax
0x00007f48      48397718       cmp qword [rdi + 0x18], rsi
0x00007f4c      7402           je 0x7f50
0x00007f4e      f3c3           ret                                     ; ../coreutils-8.31/lib/hash.c:-195
0x00007f50      48395720       cmp qword [rdi + 0x20], rdx
0x00007f54      0f94c0         sete al
0x00007f57      c3             ret
0x00007f58      0f1f84000000.  nop dword [rax + rax]
;-- hash_print_statistics:
0x00007f60      4155           push r13
0x00007f62      4154           push r12
0x00007f64      4989f4         mov r12, rsi
0x00007f67      55             push rbp
0x00007f68      53             push rbx
0x00007f69      31db           xor ebx, ebx
0x00007f6b      4883ec08       sub rsp, 8
0x00007f6f      488b37         mov rsi, qword [rdi]
0x00007f72      488b4f20       mov rcx, qword [rdi + 0x20]
0x00007f76      488b6f10       mov rbp, qword [rdi + 0x10]
0x00007f7a      4c8b6f18       mov r13, qword [rdi + 0x18]
0x00007f7e      488b7f08       mov rdi, qword [rdi + 8]
0x00007f82      4839fe         cmp rsi, rdi
0x00007f85      733e           jae 0x7fc5
0x00007f87      660f1f840000.  nop word [rax + rax]
0x00007f90      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/hash.c:-192
0x00007f94      7426           je 0x7fbc
0x00007f96      488b4608       mov rax, qword [rsi + 8]                ; stdio2.h:-339
0x00007f9a      ba01000000     mov edx, 1
0x00007f9f      4885c0         test rax, rax
0x00007fa2      7411           je 0x7fb5
0x00007fa4      0f1f4000       nop dword [rax]
0x00007fa8      488b4008       mov rax, qword [rax + 8]
0x00007fac      4883c201       add rdx, 1
0x00007fb0      4885c0         test rax, rax
0x00007fb3      75f3           jne 0x7fa8
0x00007fb5      4839d3         cmp rbx, rdx
0x00007fb8      480f42da       cmovb rbx, rdx
0x00007fbc      4883c610       add rsi, 0x10
0x00007fc0      4839fe         cmp rsi, rdi
0x00007fc3      72cb           jb 0x7f90
0x00007fc5      488d156f2200.  lea rdx, str.entries:__________lu       ; 0xa23b ; "# entries:         %lu\n"
0x00007fcc      be01000000     mov esi, 1
0x00007fd1      4c89e7         mov rdi, r12
0x00007fd4      31c0           xor eax, eax
0x00007fd6      e8b59dffff     call sym.imp.__fprintf_chk
0x00007fdb      488d15712200.  lea rdx, str.buckets:__________lu       ; 0xa253 ; "# buckets:         %lu\n"
0x00007fe2      31c0           xor eax, eax
0x00007fe4      4889e9         mov rcx, rbp
0x00007fe7      be01000000     mov esi, 1
0x00007fec      4c89e7         mov rdi, r12
0x00007fef      e89c9dffff     call sym.imp.__fprintf_chk
0x00007ff4      4d85ed         test r13, r13
0x00007ff7      7867           js 0x8060
0x00007ff9      660fefc0       pxor xmm0, xmm0
0x00007ffd      4885ed         test rbp, rbp
0x00008000      f2490f2ac5     cvtsi2sd xmm0, r13
0x00008005      f20f5905db22.  mulsd xmm0, qword [0x0000a2e8]          ; ../coreutils-8.31/lib/hash.c:-174
0x0000800d      787a           js 0x8089                               ; ../coreutils-8.31/lib/hash.c:-170
0x0000800f      660fefc9       pxor xmm1, xmm1
0x00008013      f2480f2acd     cvtsi2sd xmm1, rbp
0x00008018      f20f5ec1       divsd xmm0, xmm1
0x0000801c      488d15652200.  lea rdx, str.buckets_used:_____lu___.2f ; 0xa288 ; "# buckets used:    %lu (%.2f%%)\n"
0x00008023      4c89e9         mov rcx, r13
0x00008026      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/hash.c:-166
0x00008029      be01000000     mov esi, 1
0x0000802e      b801000000     mov eax, 1
0x00008033      e8589dffff     call sym.imp.__fprintf_chk
0x00008038      4883c408       add rsp, 8
0x0000803c      4889d9         mov rcx, rbx
0x0000803f      4c89e7         mov rdi, r12
0x00008042      5b             pop rbx
0x00008043      5d             pop rbp
0x00008044      415c           pop r12
0x00008046      415d           pop r13
0x00008048      488d151c2200.  lea rdx, str.max_bucket_length:__lu     ; 0xa26b ; "max bucket length: %lu\n"
0x0000804f      be01000000     mov esi, 1
0x00008054      31c0           xor eax, eax
0x00008056      e9359dffff     jmp sym.imp.__fprintf_chk
0x0000805b      0f1f440000     nop dword [rax + rax]
0x00008060      4c89e8         mov rax, r13
0x00008063      4c89ea         mov rdx, r13
0x00008066      660fefc0       pxor xmm0, xmm0
0x0000806a      48d1e8         shr rax, 1
0x0000806d      83e201         and edx, 1
0x00008070      4809d0         or rax, rdx
0x00008073      4885ed         test rbp, rbp
0x00008076      f2480f2ac0     cvtsi2sd xmm0, rax
0x0000807b      f20f58c0       addsd xmm0, xmm0
0x0000807f      f20f59056122.  mulsd xmm0, qword [0x0000a2e8]
0x00008087      7986           jns 0x800f                              ; ../coreutils-8.31/lib/hash.c:-138
0x00008089      4889e8         mov rax, rbp
0x0000808c      660fefc9       pxor xmm1, xmm1
0x00008090      48d1e8         shr rax, 1
0x00008093      83e501         and ebp, 1                              ; ../coreutils-8.31/lib/hash.c:-136
0x00008096      4809e8         or rax, rbp                             ; ../coreutils-8.31/lib/hash.c:-147
0x00008099      f2480f2ac8     cvtsi2sd xmm1, rax
0x0000809e      f20f58c9       addsd xmm1, xmm1
0x000080a2      e971ffffff     jmp 0x8018
0x000080a7      660f1f840000.  nop word [rax + rax]
;-- hash_lookup:
0x000080b0      4154           push r12
0x000080b2      55             push rbp
0x000080b3      4989fc         mov r12, rdi
0x000080b6      53             push rbx
0x000080b7      4889f5         mov rbp, rsi
0x000080ba      e8b1faffff     call sym.safe_hasher                    ; ../coreutils-8.31/lib/hash.c:-127
0x000080bf      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:-123
0x000080c2      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/hash.c:-127
0x000080c5      7426           je 0x80ed                               ; ../coreutils-8.31/lib/hash.c:-120
0x000080c7      4889c3         mov rbx, rax
0x000080ca      eb07           jmp 0x80d3
0x000080cc      0f1f4000       nop dword [rax]
0x000080d0      488b33         mov rsi, qword [rbx]
0x000080d3      4839ee         cmp rsi, rbp
0x000080d6      7417           je 0x80ef                               ; ../coreutils-8.31/lib/hash.c:-116
0x000080d8      4889ef         mov rdi, rbp
0x000080db      41ff542438     call qword [r12 + 0x38]                 ; ../coreutils-8.31/lib/hash.c:-120
0x000080e0      84c0           test al, al
0x000080e2      751c           jne 0x8100
0x000080e4      488b5b08       mov rbx, qword [rbx + 8]
0x000080e8      4885db         test rbx, rbx
0x000080eb      75e3           jne 0x80d0
0x000080ed      31f6           xor esi, esi
0x000080ef      5b             pop rbx
0x000080f0      4889f0         mov rax, rsi
0x000080f3      5d             pop rbp
0x000080f4      415c           pop r12
0x000080f6      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:-112
0x000080f7      660f1f840000.  nop word [rax + rax]
0x00008100      488b33         mov rsi, qword [rbx]
0x00008103      5b             pop rbx
0x00008104      5d             pop rbp
0x00008105      4889f0         mov rax, rsi
0x00008108      415c           pop r12
0x0000810a      c3             ret
0x0000810b      0f1f440000     nop dword [rax + rax]
;-- hash_get_first:
0x00008110      48837f2000     cmp qword [rdi + 0x20], 0
0x00008115      742c           je 0x8143
0x00008117      488b17         mov rdx, qword [rdi]
0x0000811a      488b4f08       mov rcx, qword [rdi + 8]
0x0000811e      4839ca         cmp rdx, rcx
0x00008121      7325           jae 0x8148
0x00008123      488b02         mov rax, qword [rdx]
0x00008126      4885c0         test rax, rax
0x00008129      751b           jne 0x8146
0x0000812b      0f1f440000     nop dword [rax + rax]
0x00008130      4883c210       add rdx, 0x10
0x00008134      4839ca         cmp rdx, rcx
0x00008137      730f           jae 0x8148                              ; ../coreutils-8.31/lib/hash.c:-97
0x00008139      488b02         mov rax, qword [rdx]
0x0000813c      4885c0         test rax, rax
0x0000813f      74ef           je 0x8130
0x00008141      f3c3           ret
0x00008143      31c0           xor eax, eax
0x00008145      c3             ret
0x00008146      f3c3           ret
0x00008148      4883ec08       sub rsp, 8
0x0000814c      e84f98ffff     call sym.imp.abort
0x00008151      0f1f440000     nop dword [rax + rax]
0x00008156      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_next:
0x00008160      55             push rbp
0x00008161      53             push rbx
0x00008162      4889fd         mov rbp, rdi
0x00008165      4889f3         mov rbx, rsi
0x00008168      4883ec08       sub rsp, 8
0x0000816c      e8fff9ffff     call sym.safe_hasher
0x00008171      4889c2         mov rdx, rax
0x00008174      4889c1         mov rcx, rax
0x00008177      488b02         mov rax, qword [rdx]
0x0000817a      488b5208       mov rdx, qword [rdx + 8]
0x0000817e      4839d8         cmp rax, rbx
0x00008181      7416           je 0x8199
0x00008183      0f1f440000     nop dword [rax + rax]
0x00008188      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:-79
0x0000818b      7411           je 0x819e
0x0000818d      488b02         mov rax, qword [rdx]
0x00008190      488b5208       mov rdx, qword [rdx + 8]                ; ../coreutils-8.31/lib/hash.c:-97
0x00008194      4839d8         cmp rax, rbx
0x00008197      75ef           jne 0x8188
0x00008199      4885d2         test rdx, rdx
0x0000819c      752a           jne 0x81c8
0x0000819e      488b5508       mov rdx, qword [rbp + 8]                ; ../coreutils-8.31/lib/hash.c:-66
0x000081a2      eb0c           jmp 0x81b0
0x000081a4      0f1f4000       nop dword [rax]
0x000081a8      488b01         mov rax, qword [rcx]
0x000081ab      4885c0         test rax, rax
0x000081ae      750b           jne 0x81bb
0x000081b0      4883c110       add rcx, 0x10
0x000081b4      4839ca         cmp rdx, rcx
0x000081b7      77ef           ja 0x81a8
0x000081b9      31c0           xor eax, eax
0x000081bb      4883c408       add rsp, 8
0x000081bf      5b             pop rbx
0x000081c0      5d             pop rbp                                 ; ../coreutils-8.31/lib/hash.c:-59
0x000081c1      c3             ret
0x000081c2      660f1f440000   nop word [rax + rax]
0x000081c8      488b02         mov rax, qword [rdx]
0x000081cb      4883c408       add rsp, 8
0x000081cf      5b             pop rbx
0x000081d0      5d             pop rbp
0x000081d1      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:-55
0x000081d2      0f1f4000       nop dword [rax]
0x000081d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_entries:
0x000081e0      4c8b0f         mov r9, qword [rdi]
0x000081e3      4c394f08       cmp qword [rdi + 8], r9                 ; ../coreutils-8.31/lib/hash.c:-57
0x000081e7      7659           jbe 0x8242
0x000081e9      4531c0         xor r8d, r8d
0x000081ec      498b09         mov rcx, qword [r9]
0x000081ef      4885c9         test rcx, rcx
0x000081f2      7439           je 0x822d                               ; ../coreutils-8.31/lib/hash.c:-47
0x000081f4      4c39c2         cmp rdx, r8
0x000081f7      763e           jbe 0x8237
0x000081f9      4a890cc6       mov qword [rsi + r8*8], rcx
0x000081fd      498b4908       mov rcx, qword [r9 + 8]
0x00008201      498d4001       lea rax, [r8 + 1]
0x00008205      4885c9         test rcx, rcx
0x00008208      7420           je 0x822a
0x0000820a      660f1f440000   nop word [rax + rax]
0x00008210      4839c2         cmp rdx, rax
0x00008213      742b           je 0x8240                               ; ../coreutils-8.31/lib/hash.c:-3
0x00008215      4c8b01         mov r8, qword [rcx]
0x00008218      4883c001       add rax, 1
0x0000821c      4c8944c6f8     mov qword [rsi + rax*8 - 8], r8
0x00008221      488b4908       mov rcx, qword [rcx + 8]
0x00008225      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/hash.c:-2
0x00008228      75e6           jne 0x8210
0x0000822a      4989c0         mov r8, rax
0x0000822d      4983c110       add r9, 0x10
0x00008231      4c394f08       cmp qword [rdi + 8], r9                 ; ../coreutils-8.31/lib/hash.c:-3
0x00008235      77b5           ja 0x81ec
0x00008237      4c89c0         mov rax, r8
0x0000823a      c3             ret
0x0000823b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/hash.c:0
0x00008240      f3c3           ret
0x00008242      31c0           xor eax, eax
0x00008244      c3             ret
0x00008245      90             nop
0x00008246      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_do_for_each:
0x00008250      4157           push r15
0x00008252      4156           push r14
0x00008254      4155           push r13
0x00008256      4154           push r12
0x00008258      55             push rbp
0x00008259      53             push rbx
0x0000825a      4883ec08       sub rsp, 8
0x0000825e      4c8b37         mov r14, qword [rdi]
0x00008261      4c397708       cmp qword [rdi + 8], r14
0x00008265      764f           jbe 0x82b6
0x00008267      4989d5         mov r13, rdx
0x0000826a      4989f4         mov r12, rsi
0x0000826d      4989ff         mov r15, rdi                            ; ../coreutils-8.31/lib/hash.c:46
0x00008270      31ed           xor ebp, ebp
0x00008272      498b3e         mov rdi, qword [r14]
0x00008275      4885ff         test rdi, rdi
0x00008278      7420           je 0x829a
0x0000827a      4c89f3         mov rbx, r14
0x0000827d      eb04           jmp 0x8283
0x0000827f      90             nop
0x00008280      488b3b         mov rdi, qword [rbx]
0x00008283      4c89ee         mov rsi, r13                            ; ../coreutils-8.31/lib/hash.c:37
0x00008286      41ffd4         call r12
0x00008289      84c0           test al, al
0x0000828b      7417           je 0x82a4
0x0000828d      488b5b08       mov rbx, qword [rbx + 8]
0x00008291      4883c501       add rbp, 1
0x00008295      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/hash.c:33
0x00008298      75e6           jne 0x8280
0x0000829a      4983c610       add r14, 0x10
0x0000829e      4d397708       cmp qword [r15 + 8], r14
0x000082a2      77ce           ja 0x8272
0x000082a4      4883c408       add rsp, 8
0x000082a8      4889e8         mov rax, rbp
0x000082ab      5b             pop rbx
0x000082ac      5d             pop rbp                                 ; ../coreutils-8.31/lib/hash.c:38
0x000082ad      415c           pop r12
0x000082af      415d           pop r13                                 ; ../coreutils-8.31/lib/hash.c:37
0x000082b1      415e           pop r14
0x000082b3      415f           pop r15
0x000082b5      c3             ret
0x000082b6      31ed           xor ebp, ebp
0x000082b8      ebea           jmp 0x82a4                              ; ../coreutils-8.31/lib/hash.c:41
0x000082ba      660f1f440000   nop word [rax + rax]
;-- hash_string:
0x000082c0      0fb60f         movzx ecx, byte [rdi]
0x000082c3      31d2           xor edx, edx
0x000082c5      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hash.c:43
0x000082c7      7424           je 0x82ed
0x000082c9      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/hash.c:44
0x000082d0      4889d0         mov rax, rdx
0x000082d3      4883c701       add rdi, 1
0x000082d7      48c1e005       shl rax, 5
0x000082db      4829d0         sub rax, rdx
0x000082de      31d2           xor edx, edx
0x000082e0      4801c8         add rax, rcx
0x000082e3      0fb60f         movzx ecx, byte [rdi]
0x000082e6      48f7f6         div rsi
0x000082e9      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hash.c:-14
0x000082eb      75e3           jne 0x82d0
0x000082ed      4889d0         mov rax, rdx
0x000082f0      c3             ret
0x000082f1      0f1f440000     nop dword [rax + rax]
0x000082f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_reset_tuning:
0x00008300      48b800000000.  movabs rax, 0x3f80000000000000          ; 4575657221408423936
0x0000830a      c6471000       mov byte [rdi + 0x10], 0                ; ../coreutils-8.31/lib/hash.c:-70
0x0000830e      488907         mov qword [rdi], rax
0x00008311      48b8cdcc4c3f.  movabs rax, 0x3fb4fdf43f4ccccd
0x0000831b      48894708       mov qword [rdi + 8], rax                ; ../coreutils-8.31/lib/hash.c:-65
0x0000831f      c3             ret
;-- hash_initialize:
0x00008320      4157           push r15
0x00008322      4156           push r14
0x00008324      488d0525f8ff.  lea rax, sym.raw_hasher                 ; 0x7b50 ; "H\x89\xf81\xd2H\xc1\xc8\x03H\xf7\xf6H\x89\xd0\xc3H9\xf7\x0f\x94\xc0\xc3f\x0f\x1f\x84"
0x0000832b      4155           push r13
0x0000832d      4154           push r12
0x0000832f      4989d4         mov r12, rdx
0x00008332      55             push rbp                                ; ../coreutils-8.31/lib/hash.c:-61
0x00008333      53             push rbx
0x00008334      4989cd         mov r13, rcx
0x00008337      4889fd         mov rbp, rdi
0x0000833a      bf50000000     mov edi, 0x50                           ; 'P'
0x0000833f      4989f7         mov r15, rsi
0x00008342      4883ec08       sub rsp, 8
0x00008346      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:-52
0x00008349      4d89c6         mov r14, r8
0x0000834c      4c0f44e0       cmove r12, rax
0x00008350      488d0509f8ff.  lea rax, sym.raw_comparator             ; 0x7b60 ; "H9\xf7\x0f\x94\xc0\xc3f\x0f\x1f\x84"
0x00008357      4885c9         test rcx, rcx
0x0000835a      4c0f44e8       cmove r13, rax
0x0000835e      e8dd98ffff     call sym.imp.malloc
0x00008363      4885c0         test rax, rax
0x00008366      4889c3         mov rbx, rax
0x00008369      0f84ab000000   je 0x841a
0x0000836f      4d85ff         test r15, r15
0x00008372      488d7828       lea rdi, [rax + 0x28]
0x00008376      0f84b4000000   je 0x8430
0x0000837c      4c897828       mov qword [rax + 0x28], r15
0x00008380      e83bf9ffff     call sym.check_tuning.isra.0
0x00008385      84c0           test al, al
0x00008387      0f8483000000   je 0x8410
0x0000838d      41807f1000     cmp byte [r15 + 0x10], 0
0x00008392      0f84f8000000   je 0x8490
0x00008398      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/hash.c:-145
0x0000839b      e810f7ffff     call sym.next_prime
0x000083a0      ba08000000     mov edx, 8
0x000083a5      4889c5         mov rbp, rax
0x000083a8      31c9           xor ecx, ecx
0x000083aa      4889d0         mov rax, rdx
0x000083ad      48f7e5         mul rbp
0x000083b0      0f8014010000   jo 0x84ca
0x000083b6      4885c0         test rax, rax
0x000083b9      7855           js 0x8410
0x000083bb      4885c9         test rcx, rcx
0x000083be      7550           jne 0x8410
0x000083c0      4885ed         test rbp, rbp
0x000083c3      48896b10       mov qword [rbx + 0x10], rbp
0x000083c7      7447           je 0x8410
0x000083c9      be10000000     mov esi, 0x10
0x000083ce      4889ef         mov rdi, rbp
0x000083d1      e81a98ffff     call sym.imp.calloc
0x000083d6      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:-197
0x000083d9      488903         mov qword [rbx], rax
0x000083dc      7432           je 0x8410
0x000083de      48c1e504       shl rbp, 4
0x000083e2      48c743180000.  mov qword [rbx + 0x18], 0
0x000083ea      48c743200000.  mov qword [rbx + 0x20], 0
0x000083f2      4801c5         add rbp, rax
0x000083f5      4c896330       mov qword [rbx + 0x30], r12
0x000083f9      4c896b38       mov qword [rbx + 0x38], r13
0x000083fd      48896b08       mov qword [rbx + 8], rbp
0x00008401      4c897340       mov qword [rbx + 0x40], r14
0x00008405      48c743480000.  mov qword [rbx + 0x48], 0
0x0000840d      eb0b           jmp 0x841a
0x0000840f      90             nop
0x00008410      4889df         mov rdi, rbx
0x00008413      31db           xor ebx, ebx
0x00008415      e8b699ffff     call sym..plt.got
0x0000841a      4883c408       add rsp, 8
0x0000841e      4889d8         mov rax, rbx
0x00008421      5b             pop rbx
0x00008422      5d             pop rbp
0x00008423      415c           pop r12
0x00008425      415d           pop r13
0x00008427      415e           pop r14
0x00008429      415f           pop r15
0x0000842b      c3             ret
0x0000842c      0f1f4000       nop dword [rax]
0x00008430      488d05791e00.  lea rax, obj.default_tuning             ; 0xa2b0
0x00008437      48894328       mov qword [rbx + 0x28], rax             ; ../coreutils-8.31/lib/hash.c:-199
0x0000843b      e880f8ffff     call sym.check_tuning.isra.0
0x00008440      84c0           test al, al
0x00008442      f30f100d8e1e.  movss xmm1, dword [0x0000a2d8]          ; [0xa2d8:4]=0x3f4ccccd
0x0000844a      74c4           je 0x8410
0x0000844c      4885ed         test rbp, rbp
0x0000844f      784a           js 0x849b
0x00008451      660fefc0       pxor xmm0, xmm0                         ; ../coreutils-8.31/lib/hash.c:-168
0x00008455      f3480f2ac5     cvtsi2ss xmm0, rbp
0x0000845a      f30f5ec1       divss xmm0, xmm1
0x0000845e      0f2e05771e00.  ucomiss xmm0, dword [0x0000a2dc]
0x00008465      73a9           jae 0x8410
0x00008467      0f2e05721e00.  ucomiss xmm0, dword [0x0000a2e0]
0x0000846e      7250           jb 0x84c0
0x00008470      f30f5c05681e.  subss xmm0, dword [0x0000a2e0]
0x00008478      48b800000000.  movabs rax, 0x8000000000000000
0x00008482      f3480f2ce8     cvttss2si rbp, xmm0
0x00008487      4831c5         xor rbp, rax
0x0000848a      e909ffffff     jmp 0x8398
0x0000848f      90             nop
0x00008490      4885ed         test rbp, rbp
0x00008493      f3410f104f08   movss xmm1, dword [r15 + 8]
0x00008499      79b6           jns 0x8451                              ; ../coreutils-8.31/lib/hash.c:-146
0x0000849b      4889e8         mov rax, rbp
0x0000849e      660fefc0       pxor xmm0, xmm0                         ; ../coreutils-8.31/lib/hash.c:-147
0x000084a2      48d1e8         shr rax, 1
0x000084a5      83e501         and ebp, 1
0x000084a8      4809e8         or rax, rbp
0x000084ab      f3480f2ac0     cvtsi2ss xmm0, rax
0x000084b0      f30f58c0       addss xmm0, xmm0
0x000084b4      eba4           jmp 0x845a
0x000084b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000084c0      f3480f2ce8     cvttss2si rbp, xmm0
0x000084c5      e9cefeffff     jmp 0x8398
0x000084ca      b901000000     mov ecx, 1
0x000084cf      e9e2feffff     jmp 0x83b6
0x000084d4      6690           nop
0x000084d6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/hash.c:-130
;-- hash_clear:
0x000084e0      4154           push r12
0x000084e2      55             push rbp
0x000084e3      4889fd         mov rbp, rdi
0x000084e6      53             push rbx
0x000084e7      4c8b27         mov r12, qword [rdi]                    ; ../coreutils-8.31/lib/hash.c:-134
0x000084ea      4c3b6708       cmp r12, qword [rdi + 8]
0x000084ee      736b           jae 0x855b
0x000084f0      49833c2400     cmp qword [r12], 0
0x000084f5      745a           je 0x8551
0x000084f7      498b5c2408     mov rbx, qword [r12 + 8]
0x000084fc      488b4540       mov rax, qword [rbp + 0x40]
0x00008500      4885db         test rbx, rbx
0x00008503      7430           je 0x8535
0x00008505      0f1f00         nop dword [rax]
0x00008508      4885c0         test rax, rax
0x0000850b      7409           je 0x8516
0x0000850d      488b3b         mov rdi, qword [rbx]
0x00008510      ffd0           call rax
0x00008512      488b4540       mov rax, qword [rbp + 0x40]
0x00008516      488b5308       mov rdx, qword [rbx + 8]
0x0000851a      488b4d48       mov rcx, qword [rbp + 0x48]
0x0000851e      48c703000000.  mov qword [rbx], 0
0x00008525      4885d2         test rdx, rdx
0x00008528      48894b08       mov qword [rbx + 8], rcx
0x0000852c      48895d48       mov qword [rbp + 0x48], rbx
0x00008530      4889d3         mov rbx, rdx
0x00008533      75d3           jne 0x8508
0x00008535      4885c0         test rax, rax
0x00008538      7406           je 0x8540
0x0000853a      498b3c24       mov rdi, qword [r12]
0x0000853e      ffd0           call rax
0x00008540      49c704240000.  mov qword [r12], 0
0x00008548      49c744240800.  mov qword [r12 + 8], 0
0x00008551      4983c410       add r12, 0x10
0x00008555      4c396508       cmp qword [rbp + 8], r12                ; ../coreutils-8.31/lib/hash.c:-310
0x00008559      7795           ja 0x84f0
0x0000855b      48c745180000.  mov qword [rbp + 0x18], 0
0x00008563      48c745200000.  mov qword [rbp + 0x20], 0
0x0000856b      5b             pop rbx
0x0000856c      5d             pop rbp
0x0000856d      415c           pop r12
0x0000856f      c3             ret
;-- hash_free:
0x00008570      4154           push r12
0x00008572      55             push rbp
0x00008573      4989fc         mov r12, rdi
0x00008576      53             push rbx                                ; ../coreutils-8.31/lib/hash.c:-307
0x00008577      48837f4000     cmp qword [rdi + 0x40], 0
0x0000857c      488b2f         mov rbp, qword [rdi]
0x0000857f      488b4708       mov rax, qword [rdi + 8]
0x00008583      744e           je 0x85d3                               ; ../coreutils-8.31/lib/hash.c:-305
0x00008585      48837f2000     cmp qword [rdi + 0x20], 0
0x0000858a      7447           je 0x85d3
0x0000858c      4839c5         cmp rbp, rax
0x0000858f      737b           jae 0x860c
0x00008591      0f1f80000000.  nop dword [rax]
0x00008598      488b7d00       mov rdi, qword [rbp]
0x0000859c      4885ff         test rdi, rdi
0x0000859f      7425           je 0x85c6
0x000085a1      4889eb         mov rbx, rbp
0x000085a4      eb0d           jmp 0x85b3
0x000085a6      662e0f1f8400.  nop word cs:[rax + rax]
0x000085b0      488b3b         mov rdi, qword [rbx]
0x000085b3      41ff542440     call qword [r12 + 0x40]                 ; segment.PHDR
0x000085b8      488b5b08       mov rbx, qword [rbx + 8]
0x000085bc      4885db         test rbx, rbx
0x000085bf      75ef           jne 0x85b0
0x000085c1      498b442408     mov rax, qword [r12 + 8]
0x000085c6      4883c510       add rbp, 0x10
0x000085ca      4839e8         cmp rax, rbp
0x000085cd      77c9           ja 0x8598
0x000085cf      498b2c24       mov rbp, qword [r12]
0x000085d3      4839c5         cmp rbp, rax
0x000085d6      7334           jae 0x860c
0x000085d8      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/hash.c:93
0x000085e0      488b7d08       mov rdi, qword [rbp + 8]
0x000085e4      4885ff         test rdi, rdi
0x000085e7      7418           je 0x8601
0x000085e9      0f1f80000000.  nop dword [rax]
0x000085f0      488b5f08       mov rbx, qword [rdi + 8]
0x000085f4      e8d797ffff     call sym..plt.got                       ; ../coreutils-8.31/lib/hash.c:98
0x000085f9      4885db         test rbx, rbx
0x000085fc      4889df         mov rdi, rbx
0x000085ff      75ef           jne 0x85f0
0x00008601      4883c510       add rbp, 0x10                           ; ../coreutils-8.31/lib/hash.c:99
0x00008605      49396c2408     cmp qword [r12 + 8], rbp
0x0000860a      77d4           ja 0x85e0
0x0000860c      498b7c2448     mov rdi, qword [r12 + 0x48]
0x00008611      4885ff         test rdi, rdi
0x00008614      741b           je 0x8631
0x00008616      662e0f1f8400.  nop word cs:[rax + rax]
0x00008620      488b5f08       mov rbx, qword [rdi + 8]
0x00008624      e8a797ffff     call sym..plt.got
0x00008629      4885db         test rbx, rbx
0x0000862c      4889df         mov rdi, rbx
0x0000862f      75ef           jne 0x8620
0x00008631      498b3c24       mov rdi, qword [r12]
0x00008635      e89697ffff     call sym..plt.got
0x0000863a      5b             pop rbx
0x0000863b      4c89e7         mov rdi, r12
0x0000863e      5d             pop rbp
0x0000863f      415c           pop r12
0x00008641      e98a97ffff     jmp sym..plt.got                        ; ../coreutils-8.31/lib/hash.c:107
0x00008646      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_rehash:
0x00008650      4154           push r12
0x00008652      55             push rbp
0x00008653      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/hash.c:108
0x00008656      53             push rbx
0x00008657      4883ec60       sub rsp, 0x60
0x0000865b      4c8b6728       mov r12, qword [rdi + 0x28]
0x0000865f      64488b042528.  mov rax, qword fs:[0x28]
0x00008668      4889442458     mov qword [rsp + 0x58], rax
0x0000866d      31c0           xor eax, eax
0x0000866f      41807c241000   cmp byte [r12 + 0x10], 0
0x00008675      7551           jne 0x86c8
0x00008677      4885f6         test rsi, rsi
0x0000867a      0f8878010000   js 0x87f8
0x00008680      660fefc0       pxor xmm0, xmm0
0x00008684      f3480f2ac6     cvtsi2ss xmm0, rsi                      ; ../coreutils-8.31/lib/hash.c:156
0x00008689      f3410f5e4424.  divss xmm0, dword [r12 + 8]
0x00008690      0f2e05451c00.  ucomiss xmm0, dword [0x0000a2dc]
0x00008697      0f8333010000   jae 0x87d0
0x0000869d      0f2e053c1c00.  ucomiss xmm0, dword [0x0000a2e0]
0x000086a4      0f8276010000   jb 0x8820
0x000086aa      f30f5c052e1c.  subss xmm0, dword [0x0000a2e0]          ; ../coreutils-8.31/lib/hash.c:161
0x000086b2      48b800000000.  movabs rax, 0x8000000000000000
0x000086bc      f3480f2cf0     cvttss2si rsi, xmm0
0x000086c1      4831c6         xor rsi, rax                            ; ../coreutils-8.31/lib/bitrotate.h:35
0x000086c4      0f1f4000       nop dword [rax]
0x000086c8      4889f7         mov rdi, rsi
0x000086cb      e8e0f3ffff     call sym.next_prime
0x000086d0      ba08000000     mov edx, 8
0x000086d5      4889c3         mov rbx, rax
0x000086d8      31c9           xor ecx, ecx
0x000086da      4889d0         mov rax, rdx
0x000086dd      48f7e3         mul rbx
0x000086e0      0f8099010000   jo 0x887f
0x000086e6      4885c0         test rax, rax
0x000086e9      b801000000     mov eax, 1
0x000086ee      480f48c8       cmovs rcx, rax
0x000086f2      4885db         test rbx, rbx
0x000086f5      0f84d5000000   je 0x87d0
0x000086fb      83e101         and ecx, 1
0x000086fe      0f85cc000000   jne 0x87d0
0x00008704      48395d10       cmp qword [rbp + 0x10], rbx
0x00008708      0f8422010000   je 0x8830
0x0000870e      be10000000     mov esi, 0x10
0x00008713      4889df         mov rdi, rbx
0x00008716      e8d594ffff     call sym.imp.calloc
0x0000871b      4885c0         test rax, rax
0x0000871e      48890424       mov qword [rsp], rax                    ; ../coreutils-8.31/lib/bitrotate.h:-72
0x00008722      0f84a8000000   je 0x87d0
0x00008728      48895c2410     mov qword [rsp + 0x10], rbx
0x0000872d      48c1e304       shl rbx, 4
0x00008731      4c89642428     mov qword [rsp + 0x28], r12
0x00008736      4801c3         add rbx, rax
0x00008739      488b4530       mov rax, qword [rbp + 0x30]
0x0000873d      4989e4         mov r12, rsp
0x00008740      31d2           xor edx, edx
0x00008742      4889ee         mov rsi, rbp
0x00008745      4c89e7         mov rdi, r12
0x00008748      48895c2408     mov qword [rsp + 8], rbx
0x0000874d      48c744241800.  mov qword [rsp + 0x18], 0
0x00008756      4889442430     mov qword [rsp + 0x30], rax
0x0000875b      488b4538       mov rax, qword [rbp + 0x38]
0x0000875f      48c744242000.  mov qword [rsp + 0x20], 0
0x00008768      4889442438     mov qword [rsp + 0x38], rax
0x0000876d      488b4540       mov rax, qword [rbp + 0x40]
0x00008771      4889442440     mov qword [rsp + 0x40], rax
0x00008776      488b4548       mov rax, qword [rbp + 0x48]
0x0000877a      4889442448     mov qword [rsp + 0x48], rax
0x0000877f      e8bcf5ffff     call sym.transfer_entries
0x00008784      84c0           test al, al
0x00008786      89c3           mov ebx, eax
0x00008788      0f85b2000000   jne 0x8840
0x0000878e      488b442448     mov rax, qword [rsp + 0x48]
0x00008793      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/bitrotate.h:-53
0x00008798      4c89e6         mov rsi, r12
0x0000879b      4889ef         mov rdi, rbp
0x0000879e      48894548       mov qword [rbp + 0x48], rax
0x000087a2      e899f5ffff     call sym.transfer_entries
0x000087a7      84c0           test al, al
0x000087a9      0f84da000000   je 0x8889
0x000087af      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/bitrotate.h:-43
0x000087b1      4c89e6         mov rsi, r12
0x000087b4      4889ef         mov rdi, rbp
0x000087b7      e884f5ffff     call sym.transfer_entries
0x000087bc      84c0           test al, al
0x000087be      0f84c5000000   je 0x8889
0x000087c4      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/bitrotate.h:-38
0x000087c8      e80396ffff     call sym..plt.got
0x000087cd      eb03           jmp 0x87d2
0x000087cf      90             nop
0x000087d0      31db           xor ebx, ebx
0x000087d2      488b4c2458     mov rcx, qword [rsp + 0x58]
0x000087d7      6448330c2528.  xor rcx, qword fs:[0x28]
0x000087e0      89d8           mov eax, ebx
0x000087e2      0f8592000000   jne 0x887a
0x000087e8      4883c460       add rsp, 0x60
0x000087ec      5b             pop rbx
0x000087ed      5d             pop rbp
0x000087ee      415c           pop r12
0x000087f0      c3             ret
0x000087f1      0f1f80000000.  nop dword [rax]
0x000087f8      4889f0         mov rax, rsi                            ; ../coreutils-8.31/lib/bitrotate.h:-37
0x000087fb      660fefc0       pxor xmm0, xmm0
0x000087ff      48d1e8         shr rax, 1
0x00008802      83e601         and esi, 1
0x00008805      4809f0         or rax, rsi
0x00008808      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000880d      f30f58c0       addss xmm0, xmm0
0x00008811      e973feffff     jmp 0x8689
0x00008816      662e0f1f8400.  nop word cs:[rax + rax]
0x00008820      f3480f2cf0     cvttss2si rsi, xmm0
0x00008825      e99efeffff     jmp 0x86c8
0x0000882a      660f1f440000   nop word [rax + rax]
0x00008830      bb01000000     mov ebx, 1
0x00008835      eb9b           jmp 0x87d2
0x00008837      660f1f840000.  nop word [rax + rax]
0x00008840      488b7d00       mov rdi, qword [rbp]
0x00008844      e88795ffff     call sym..plt.got
0x00008849      488b0424       mov rax, qword [rsp]
0x0000884d      48894500       mov qword [rbp], rax
0x00008851      488b442408     mov rax, qword [rsp + 8]
0x00008856      48894508       mov qword [rbp + 8], rax
0x0000885a      488b442410     mov rax, qword [rsp + 0x10]
0x0000885f      48894510       mov qword [rbp + 0x10], rax
0x00008863      488b442418     mov rax, qword [rsp + 0x18]
0x00008868      48894518       mov qword [rbp + 0x18], rax
0x0000886c      488b442448     mov rax, qword [rsp + 0x48]             ; ../coreutils-8.31/lib/bitrotate.h:-12
0x00008871      48894548       mov qword [rbp + 0x48], rax
0x00008875      e958ffffff     jmp 0x87d2
0x0000887a      e85192ffff     call sym.imp.__stack_chk_fail
0x0000887f      b901000000     mov ecx, 1
0x00008884      e95dfeffff     jmp 0x86e6
0x00008889      e81291ffff     call sym.imp.abort
0x0000888e      6690           nop
;-- hash_insert_if_absent:
0x00008890      4155           push r13
0x00008892      4154           push r12
0x00008894      55             push rbp
0x00008895      53             push rbx
0x00008896      4883ec18       sub rsp, 0x18
0x0000889a      64488b042528.  mov rax, qword fs:[0x28]
0x000088a3      4889442408     mov qword [rsp + 8], rax
0x000088a8      31c0           xor eax, eax
0x000088aa      4885f6         test rsi, rsi
0x000088ad      0f84ba010000   je 0x8a6d
0x000088b3      4989e4         mov r12, rsp
0x000088b6      31c9           xor ecx, ecx
0x000088b8      4989d5         mov r13, rdx
0x000088bb      4c89e2         mov rdx, r12
0x000088be      4889fb         mov rbx, rdi
0x000088c1      4889f5         mov rbp, rsi
0x000088c4      e8d7f2ffff     call sym.hash_find_entry
0x000088c9      4885c0         test rax, rax
0x000088cc      4889c2         mov rdx, rax
0x000088cf      742f           je 0x8900
0x000088d1      31c0           xor eax, eax
0x000088d3      4d85ed         test r13, r13
0x000088d6      7404           je 0x88dc
0x000088d8      49895500       mov qword [r13], rdx
0x000088dc      488b4c2408     mov rcx, qword [rsp + 8]
0x000088e1      6448330c2528.  xor rcx, qword fs:[0x28]
0x000088ea      0f851f020000   jne 0x8b0f
0x000088f0      4883c418       add rsp, 0x18
0x000088f4      5b             pop rbx
0x000088f5      5d             pop rbp
0x000088f6      415c           pop r12
0x000088f8      415d           pop r13
0x000088fa      c3             ret
0x000088fb      0f1f440000     nop dword [rax + rax]
0x00008900      488b4318       mov rax, qword [rbx + 0x18]
0x00008904      4885c0         test rax, rax
0x00008907      7877           js 0x8980
0x00008909      660fefc9       pxor xmm1, xmm1
0x0000890d      488b5328       mov rdx, qword [rbx + 0x28]
0x00008911      f3480f2ac8     cvtsi2ss xmm1, rax
0x00008916      488b4310       mov rax, qword [rbx + 0x10]
0x0000891a      4885c0         test rax, rax
0x0000891d      0f8887000000   js 0x89aa
0x00008923      660fefc0       pxor xmm0, xmm0
0x00008927      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000892c      f30f594208     mulss xmm0, dword [rdx + 8]             ; ../coreutils-8.31/lib/bitrotate.h:15
0x00008931      0f2ec8         ucomiss xmm1, xmm0
0x00008934      0f8796000000   ja 0x89d0
0x0000893a      4c8b2424       mov r12, qword [rsp]
0x0000893e      49833c2400     cmp qword [r12], 0
0x00008943      0f842f010000   je 0x8a78
0x00008949      488b4348       mov rax, qword [rbx + 0x48]
0x0000894d      4885c0         test rax, rax
0x00008950      0f843a010000   je 0x8a90
0x00008956      488b5008       mov rdx, qword [rax + 8]
0x0000895a      48895348       mov qword [rbx + 0x48], rdx
0x0000895e      498b542408     mov rdx, qword [r12 + 8]
0x00008963      488928         mov qword [rax], rbp
0x00008966      48895008       mov qword [rax + 8], rdx
0x0000896a      4989442408     mov qword [r12 + 8], rax
0x0000896f      b801000000     mov eax, 1
0x00008974      4883432001     add qword [rbx + 0x20], 1
0x00008979      e95effffff     jmp 0x88dc
0x0000897e      6690           nop
0x00008980      4889c2         mov rdx, rax
0x00008983      660fefc9       pxor xmm1, xmm1
0x00008987      83e001         and eax, 1
0x0000898a      48d1ea         shr rdx, 1
0x0000898d      4809c2         or rdx, rax
0x00008990      488b4310       mov rax, qword [rbx + 0x10]
0x00008994      f3480f2aca     cvtsi2ss xmm1, rdx                      ; ../coreutils-8.31/lib/bitrotate.h:-3
0x00008999      488b5328       mov rdx, qword [rbx + 0x28]
0x0000899d      4885c0         test rax, rax
0x000089a0      f30f58c9       addss xmm1, xmm1
0x000089a4      0f8979ffffff   jns 0x8923
0x000089aa      4889c1         mov rcx, rax
0x000089ad      660fefc0       pxor xmm0, xmm0
0x000089b1      48d1e9         shr rcx, 1
0x000089b4      83e001         and eax, 1                              ; ../coreutils-8.31/lib/bitrotate.h:1
0x000089b7      4809c1         or rcx, rax
0x000089ba      f3480f2ac1     cvtsi2ss xmm0, rcx
0x000089bf      f30f58c0       addss xmm0, xmm0
0x000089c3      e964ffffff     jmp 0x892c
0x000089c8      0f1f84000000.  nop dword [rax + rax]
0x000089d0      488d7b28       lea rdi, [rbx + 0x28]
0x000089d4      e8e7f2ffff     call sym.check_tuning.isra.0
0x000089d9      488b4310       mov rax, qword [rbx + 0x10]
0x000089dd      488b5328       mov rdx, qword [rbx + 0x28]
0x000089e1      4885c0         test rax, rax
0x000089e4      f30f105208     movss xmm2, dword [rdx + 8]
0x000089e9      0f88c1000000   js 0x8ab0
0x000089ef      660fefc0       pxor xmm0, xmm0
0x000089f3      f3480f2ac0     cvtsi2ss xmm0, rax
0x000089f8      488b4318       mov rax, qword [rbx + 0x18]
0x000089fc      4885c0         test rax, rax
0x000089ff      0f88cb000000   js 0x8ad0
0x00008a05      660fefc9       pxor xmm1, xmm1
0x00008a09      f3480f2ac8     cvtsi2ss xmm1, rax
0x00008a0e      0f28da         movaps xmm3, xmm2
0x00008a11      f30f59d8       mulss xmm3, xmm0
0x00008a15      0f2ecb         ucomiss xmm1, xmm3
0x00008a18      0f861cffffff   jbe 0x893a
0x00008a1e      807a1000       cmp byte [rdx + 0x10], 0
0x00008a22      f30f59420c     mulss xmm0, dword [rdx + 0xc]
0x00008a27      7504           jne 0x8a2d
0x00008a29      f30f59c2       mulss xmm0, xmm2
0x00008a2d      0f2e05a81800.  ucomiss xmm0, dword [0x0000a2dc]
0x00008a34      736d           jae 0x8aa3
0x00008a36      0f2e05a31800.  ucomiss xmm0, dword [0x0000a2e0]
0x00008a3d      0f83ad000000   jae 0x8af0
0x00008a43      f3480f2cf0     cvttss2si rsi, xmm0
0x00008a48      4889df         mov rdi, rbx
0x00008a4b      e800fcffff     call sym.hash_rehash
0x00008a50      84c0           test al, al
0x00008a52      744f           je 0x8aa3
0x00008a54      31c9           xor ecx, ecx
0x00008a56      4c89e2         mov rdx, r12
0x00008a59      4889ee         mov rsi, rbp
0x00008a5c      4889df         mov rdi, rbx
0x00008a5f      e83cf1ffff     call sym.hash_find_entry
0x00008a64      4885c0         test rax, rax
0x00008a67      0f84cdfeffff   je 0x893a
0x00008a6d      e82e8fffff     call sym.imp.abort
0x00008a72      660f1f440000   nop word [rax + rax]
0x00008a78      49892c24       mov qword [r12], rbp
0x00008a7c      b801000000     mov eax, 1
0x00008a81      4883432001     add qword [rbx + 0x20], 1
0x00008a86      4883431801     add qword [rbx + 0x18], 1
0x00008a8b      e94cfeffff     jmp 0x88dc
0x00008a90      bf10000000     mov edi, 0x10
0x00008a95      e8a691ffff     call sym.imp.malloc
0x00008a9a      4885c0         test rax, rax
0x00008a9d      0f85bbfeffff   jne 0x895e
0x00008aa3      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00008aa8      e92ffeffff     jmp 0x88dc
0x00008aad      0f1f00         nop dword [rax]
0x00008ab0      4889c1         mov rcx, rax
0x00008ab3      660fefc0       pxor xmm0, xmm0
0x00008ab7      48d1e9         shr rcx, 1
0x00008aba      83e001         and eax, 1
0x00008abd      4809c1         or rcx, rax
0x00008ac0      f3480f2ac1     cvtsi2ss xmm0, rcx
0x00008ac5      f30f58c0       addss xmm0, xmm0
0x00008ac9      e92affffff     jmp 0x89f8
0x00008ace      6690           nop
0x00008ad0      4889c1         mov rcx, rax
0x00008ad3      660fefc9       pxor xmm1, xmm1
0x00008ad7      48d1e9         shr rcx, 1
0x00008ada      83e001         and eax, 1
0x00008add      4809c1         or rcx, rax
0x00008ae0      f3480f2ac9     cvtsi2ss xmm1, rcx
0x00008ae5      f30f58c9       addss xmm1, xmm1
0x00008ae9      e920ffffff     jmp 0x8a0e
0x00008aee      6690           nop
0x00008af0      f30f5c05e817.  subss xmm0, dword [0x0000a2e0]
0x00008af8      48b800000000.  movabs rax, 0x8000000000000000
0x00008b02      f3480f2cf0     cvttss2si rsi, xmm0
0x00008b07      4831c6         xor rsi, rax
0x00008b0a      e939ffffff     jmp 0x8a48
0x00008b0f      e8bc8fffff     call sym.imp.__stack_chk_fail
0x00008b14      6690           nop
0x00008b16      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_insert:
0x00008b20      53             push rbx
0x00008b21      4889f3         mov rbx, rsi
0x00008b24      4883ec10       sub rsp, 0x10
0x00008b28      4889e2         mov rdx, rsp
0x00008b2b      64488b042528.  mov rax, qword fs:[0x28]
0x00008b34      4889442408     mov qword [rsp + 8], rax
0x00008b39      31c0           xor eax, eax
0x00008b3b      e850fdffff     call sym.hash_insert_if_absent
0x00008b40      83f8ff         cmp eax, 0xffffffff
0x00008b43      742b           je 0x8b70
0x00008b45      85c0           test eax, eax
0x00008b47      7504           jne 0x8b4d
0x00008b49      488b1c24       mov rbx, qword [rsp]
0x00008b4d      488b4c2408     mov rcx, qword [rsp + 8]
0x00008b52      6448330c2528.  xor rcx, qword fs:[0x28]
0x00008b5b      4889d8         mov rax, rbx
0x00008b5e      7514           jne 0x8b74
0x00008b60      4883c410       add rsp, 0x10
0x00008b64      5b             pop rbx
0x00008b65      c3             ret
0x00008b66      662e0f1f8400.  nop word cs:[rax + rax]
0x00008b70      31db           xor ebx, ebx
0x00008b72      ebd9           jmp 0x8b4d
0x00008b74      e8578fffff     call sym.imp.__stack_chk_fail
0x00008b79      0f1f80000000.  nop dword [rax]
;-- hash_delete:
0x00008b80      4154           push r12
0x00008b82      55             push rbp
0x00008b83      b901000000     mov ecx, 1
0x00008b88      53             push rbx
0x00008b89      4889fb         mov rbx, rdi
0x00008b8c      4883ec10       sub rsp, 0x10
0x00008b90      4889e2         mov rdx, rsp
0x00008b93      64488b042528.  mov rax, qword fs:[0x28]
0x00008b9c      4889442408     mov qword [rsp + 8], rax
0x00008ba1      31c0           xor eax, eax
0x00008ba3      e8f8efffff     call sym.hash_find_entry
0x00008ba8      4885c0         test rax, rax
0x00008bab      4889c5         mov rbp, rax
0x00008bae      740f           je 0x8bbf
0x00008bb0      488b0424       mov rax, qword [rsp]
0x00008bb4      48836b2001     sub qword [rbx + 0x20], 1
0x00008bb9      48833800       cmp qword [rax], 0
0x00008bbd      7421           je 0x8be0
0x00008bbf      488b4c2408     mov rcx, qword [rsp + 8]
0x00008bc4      6448330c2528.  xor rcx, qword fs:[0x28]
0x00008bcd      4889e8         mov rax, rbp
0x00008bd0      0f85a8010000   jne 0x8d7e
0x00008bd6      4883c410       add rsp, 0x10
0x00008bda      5b             pop rbx
0x00008bdb      5d             pop rbp
0x00008bdc      415c           pop r12
0x00008bde      c3             ret
0x00008bdf      90             nop
0x00008be0      488b4318       mov rax, qword [rbx + 0x18]
0x00008be4      4883e801       sub rax, 1
0x00008be8      4885c0         test rax, rax
0x00008beb      48894318       mov qword [rbx + 0x18], rax
0x00008bef      0f88fb000000   js 0x8cf0
0x00008bf5      660fefc0       pxor xmm0, xmm0
0x00008bf9      f3480f2ac0     cvtsi2ss xmm0, rax
0x00008bfe      488b4310       mov rax, qword [rbx + 0x10]
0x00008c02      488b5328       mov rdx, qword [rbx + 0x28]
0x00008c06      4885c0         test rax, rax
0x00008c09      0f88c1000000   js 0x8cd0
0x00008c0f      660fefc9       pxor xmm1, xmm1
0x00008c13      f3480f2ac8     cvtsi2ss xmm1, rax
0x00008c18      f30f590a       mulss xmm1, dword [rdx]
0x00008c1c      0f2ec8         ucomiss xmm1, xmm0
0x00008c1f      769e           jbe 0x8bbf
0x00008c21      488d7b28       lea rdi, [rbx + 0x28]
0x00008c25      e896f0ffff     call sym.check_tuning.isra.0
0x00008c2a      488b4310       mov rax, qword [rbx + 0x10]
0x00008c2e      488b5328       mov rdx, qword [rbx + 0x28]
0x00008c32      4885c0         test rax, rax
0x00008c35      0f8825010000   js 0x8d60
0x00008c3b      660fefc0       pxor xmm0, xmm0
0x00008c3f      f3480f2ac0     cvtsi2ss xmm0, rax
0x00008c44      488b4318       mov rax, qword [rbx + 0x18]
0x00008c48      4885c0         test rax, rax
0x00008c4b      0f88ef000000   js 0x8d40
0x00008c51      660fefc9       pxor xmm1, xmm1
0x00008c55      f3480f2ac8     cvtsi2ss xmm1, rax
0x00008c5a      f30f1012       movss xmm2, dword [rdx]
0x00008c5e      f30f59d0       mulss xmm2, xmm0
0x00008c62      0f2ed1         ucomiss xmm2, xmm1
0x00008c65      0f8654ffffff   jbe 0x8bbf
0x00008c6b      807a1000       cmp byte [rdx + 0x10], 0
0x00008c6f      f30f594204     mulss xmm0, dword [rdx + 4]
0x00008c74      0f84b6000000   je 0x8d30
0x00008c7a      0f2e055f1600.  ucomiss xmm0, dword [0x0000a2e0]
0x00008c81      0f8389000000   jae 0x8d10
0x00008c87      f3480f2cf0     cvttss2si rsi, xmm0
0x00008c8c      4889df         mov rdi, rbx
0x00008c8f      e8bcf9ffff     call sym.hash_rehash
0x00008c94      84c0           test al, al
0x00008c96      0f8523ffffff   jne 0x8bbf
0x00008c9c      488b7b48       mov rdi, qword [rbx + 0x48]
0x00008ca0      4885ff         test rdi, rdi
0x00008ca3      7414           je 0x8cb9
0x00008ca5      0f1f00         nop dword [rax]
0x00008ca8      4c8b6708       mov r12, qword [rdi + 8]
0x00008cac      e81f91ffff     call sym..plt.got
0x00008cb1      4d85e4         test r12, r12
0x00008cb4      4c89e7         mov rdi, r12
0x00008cb7      75ef           jne 0x8ca8
0x00008cb9      48c743480000.  mov qword [rbx + 0x48], 0
0x00008cc1      e9f9feffff     jmp 0x8bbf
0x00008cc6      662e0f1f8400.  nop word cs:[rax + rax]
0x00008cd0      4889c1         mov rcx, rax
0x00008cd3      660fefc9       pxor xmm1, xmm1
0x00008cd7      48d1e9         shr rcx, 1
0x00008cda      83e001         and eax, 1
0x00008cdd      4809c1         or rcx, rax
0x00008ce0      f3480f2ac9     cvtsi2ss xmm1, rcx
0x00008ce5      f30f58c9       addss xmm1, xmm1
0x00008ce9      e92affffff     jmp 0x8c18
0x00008cee      6690           nop
0x00008cf0      4889c2         mov rdx, rax
0x00008cf3      660fefc0       pxor xmm0, xmm0
0x00008cf7      48d1ea         shr rdx, 1
0x00008cfa      83e001         and eax, 1
0x00008cfd      4809c2         or rdx, rax
0x00008d00      f3480f2ac2     cvtsi2ss xmm0, rdx
0x00008d05      f30f58c0       addss xmm0, xmm0
0x00008d09      e9f0feffff     jmp 0x8bfe
0x00008d0e      6690           nop
0x00008d10      f30f5c05c815.  subss xmm0, dword [0x0000a2e0]
0x00008d18      48b800000000.  movabs rax, 0x8000000000000000
0x00008d22      f3480f2cf0     cvttss2si rsi, xmm0
0x00008d27      4831c6         xor rsi, rax
0x00008d2a      e95dffffff     jmp 0x8c8c
0x00008d2f      90             nop
0x00008d30      f30f594208     mulss xmm0, dword [rdx + 8]
0x00008d35      e940ffffff     jmp 0x8c7a
0x00008d3a      660f1f440000   nop word [rax + rax]
0x00008d40      4889c1         mov rcx, rax
0x00008d43      660fefc9       pxor xmm1, xmm1
0x00008d47      48d1e9         shr rcx, 1
0x00008d4a      83e001         and eax, 1
0x00008d4d      4809c1         or rcx, rax
0x00008d50      f3480f2ac9     cvtsi2ss xmm1, rcx
0x00008d55      f30f58c9       addss xmm1, xmm1
0x00008d59      e9fcfeffff     jmp 0x8c5a
0x00008d5e      6690           nop
0x00008d60      4889c1         mov rcx, rax
0x00008d63      660fefc0       pxor xmm0, xmm0
0x00008d67      48d1e9         shr rcx, 1
0x00008d6a      83e001         and eax, 1
0x00008d6d      4809c1         or rcx, rax
0x00008d70      f3480f2ac1     cvtsi2ss xmm0, rcx
0x00008d75      f30f58c0       addss xmm0, xmm0
0x00008d79      e9c6feffff     jmp 0x8c44
0x00008d7e      e84d8dffff     call sym.imp.__stack_chk_fail
0x00008d83      662e0f1f8400.  nop word cs:[rax + rax]
0x00008d8d      0f1f00         nop dword [rax]
;-- locale_charset:
0x00008d90      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/localcharset.c:688
0x00008d94      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00008d99      e8c28effff     call sym.imp.nl_langinfo
0x00008d9e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00008da1      741d           je 0x8dc0
0x00008da3      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00008da6      488d15431500.  lea rdx, [0x0000a2f0]                   ; "ASCII"
0x00008dad      480f44c2       cmove rax, rdx
0x00008db1      4883c408       add rsp, 8
0x00008db5      c3             ret
0x00008db6      662e0f1f8400.  nop word cs:[rax + rax]
0x00008dc0      488d05291500.  lea rax, [0x0000a2f0]                   ; "ASCII"
0x00008dc7      4883c408       add rsp, 8
0x00008dcb      c3             ret
0x00008dcc      0f1f4000       nop dword [rax]
;-- dup_safer:
0x00008dd0      ba03000000     mov edx, 3                              ; ../coreutils-8.31/lib/dup-safer.c:32
0x00008dd5      31f6           xor esi, esi
0x00008dd7      31c0           xor eax, eax
0x00008dd9      e902000000     jmp sym.rpl_fcntl
0x00008dde      6690           nop                                     ; ../coreutils-8.31/lib/dup-safer.c:33
;-- rpl_fcntl:
0x00008de0      4154           push r12                                ; ../coreutils-8.31/lib/fcntl.c:206
0x00008de2      55             push rbp
0x00008de3      89fd           mov ebp, edi
0x00008de5      53             push rbx
0x00008de6      4883ec50       sub rsp, 0x50
0x00008dea      64488b042528.  mov rax, qword fs:[0x28]
0x00008df3      4889442418     mov qword [rsp + 0x18], rax
0x00008df8      31c0           xor eax, eax
0x00008dfa      488d442470     lea rax, [rsp + 0x70]                   ; ../coreutils-8.31/lib/fcntl.c:209
0x00008dff      85f6           test esi, esi                           ; ../coreutils-8.31/lib/fcntl.c:210
0x00008e01      4889542430     mov qword [rsp + 0x30], rdx             ; ../coreutils-8.31/lib/fcntl.c:206
0x00008e06      48894c2438     mov qword [rsp + 0x38], rcx
0x00008e0b      4c89442440     mov qword [rsp + 0x40], r8
0x00008e10      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/fcntl.c:209
0x00008e15      488d442420     lea rax, [rsp + 0x20]
0x00008e1a      4c894c2448     mov qword [rsp + 0x48], r9              ; ../coreutils-8.31/lib/fcntl.c:206
0x00008e1f      c70424100000.  mov dword [rsp], 0x10                   ; ../coreutils-8.31/lib/fcntl.c:209 ; [0x10:4]=0x3e0003
0x00008e26      4889442410     mov qword [rsp + 0x10], rax
0x00008e2b      0f8401020000   je 0x9032                               ; ../coreutils-8.31/lib/fcntl.c:210
0x00008e31      81fe06040000   cmp esi, 0x406
0x00008e37      7547           jne 0x8e80
0x00008e39      488b442410     mov rax, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/fcntl.c:221
0x00008e3e      833df3432000.  cmp dword [obj.have_dupfd_cloexec.3326], 0 ; ../coreutils-8.31/lib/fcntl.c:507 ; [0x20d238:4]=0
0x00008e45      c70424180000.  mov dword [rsp], 0x18                   ; ../coreutils-8.31/lib/fcntl.c:221 ; [0x18:4]=0x2c40 rip
0x00008e4c      448b6010       mov r12d, dword [rax + 0x10]
0x00008e50      4489e2         mov edx, r12d                           ; ../coreutils-8.31/lib/fcntl.c:509
0x00008e53      0f882a010000   js 0x8f83                               ; ../coreutils-8.31/lib/fcntl.c:507
0x00008e59      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x00008e5b      be06040000     mov esi, 0x406
0x00008e60      e8cb8bffff     call sym.imp.fcntl
0x00008e65      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fcntl.c:510
0x00008e67      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x00008e69      0f8889010000   js 0x8ff8                               ; ../coreutils-8.31/lib/fcntl.c:510
0x00008e6f      c705bf432000.  mov dword [obj.have_dupfd_cloexec.3326], 1 ; ../coreutils-8.31/lib/fcntl.c:512 ; [0x20d238:4]=0
0x00008e79      eb45           jmp 0x8ec0
0x00008e7b      0f1f440000     nop dword [rax + rax]
0x00008e80      83fe0b         cmp esi, 0xb                            ; ../coreutils-8.31/lib/fcntl.c:258
0x00008e83      742b           je 0x8eb0
0x00008e85      7f59           jg 0x8ee0
0x00008e87      83fe04         cmp esi, 4
0x00008e8a      0f84d0000000   je 0x8f60
0x00008e90      0f8fba000000   jg 0x8f50
0x00008e96      83fe02         cmp esi, 2
0x00008e99      0f84c1000000   je 0x8f60
0x00008e9f      7f0f           jg 0x8eb0
0x00008ea1      83fe01         cmp esi, 1
0x00008ea4      7562           jne 0x8f08
0x00008ea6      662e0f1f8400.  nop word cs:[rax + rax]
0x00008eb0      89ef           mov edi, ebp
0x00008eb2      31c0           xor eax, eax
0x00008eb4      e8778bffff     call sym.imp.fcntl
0x00008eb9      89c3           mov ebx, eax
0x00008ebb      0f1f440000     nop dword [rax + rax]
0x00008ec0      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00008ec5      6448330c2528.  xor rcx, qword fs:[0x28]
0x00008ece      89d8           mov eax, ebx
0x00008ed0      0f8557010000   jne 0x902d                              ; ../coreutils-8.31/lib/fcntl.c:355
0x00008ed6      4883c450       add rsp, 0x50
0x00008eda      5b             pop rbx
0x00008edb      5d             pop rbp
0x00008edc      415c           pop r12
0x00008ede      c3             ret
0x00008edf      90             nop
0x00008ee0      81fe07040000   cmp esi, 0x407
0x00008ee6      7f48           jg 0x8f30
0x00008ee8      81fe06040000   cmp esi, 0x406
0x00008eee      7d70           jge 0x8f60
0x00008ef0      81fe01040000   cmp esi, 0x401
0x00008ef6      74b8           je 0x8eb0
0x00008ef8      81fe02040000   cmp esi, 0x402                          ; ../coreutils-8.31/lib/fcntl.c:183
0x00008efe      7460           je 0x8f60
0x00008f00      81fe00040000   cmp esi, 0x400
0x00008f06      7458           je 0x8f60
0x00008f08      8b0424         mov eax, dword [rsp]
0x00008f0b      83f82f         cmp eax, 0x2f
0x00008f0e      0f8736010000   ja 0x904a
0x00008f14      4803442410     add rax, qword [rsp + 0x10]
0x00008f19      488b10         mov rdx, qword [rax]
0x00008f1c      89ef           mov edi, ebp
0x00008f1e      31c0           xor eax, eax
0x00008f20      e80b8bffff     call sym.imp.fcntl
0x00008f25      89c3           mov ebx, eax
0x00008f27      eb97           jmp 0x8ec0
0x00008f29      0f1f80000000.  nop dword [rax]
0x00008f30      81fe09040000   cmp esi, 0x409
0x00008f36      7428           je 0x8f60
0x00008f38      0f8c72ffffff   jl 0x8eb0
0x00008f3e      81fe0a040000   cmp esi, 0x40a
0x00008f44      75c2           jne 0x8f08
0x00008f46      e965ffffff     jmp 0x8eb0                              ; ../coreutils-8.31/lib/fcntl.c:350
0x00008f4b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fcntl.c:406
0x00008f50      83fe09         cmp esi, 9
0x00008f53      0f8457ffffff   je 0x8eb0
0x00008f59      7f05           jg 0x8f60
0x00008f5b      83fe08         cmp esi, 8
0x00008f5e      75a8           jne 0x8f08
0x00008f60      8b0424         mov eax, dword [rsp]
0x00008f63      83f82f         cmp eax, 0x2f
0x00008f66      0f87e8000000   ja 0x9054
0x00008f6c      4803442410     add rax, qword [rsp + 0x10]
0x00008f71      8b10           mov edx, dword [rax]
0x00008f73      89ef           mov edi, ebp
0x00008f75      31c0           xor eax, eax
0x00008f77      e8b48affff     call sym.imp.fcntl
0x00008f7c      89c3           mov ebx, eax
0x00008f7e      e93dffffff     jmp 0x8ec0
0x00008f83      31f6           xor esi, esi
0x00008f85      31c0           xor eax, eax
0x00008f87      e8a48affff     call sym.imp.fcntl
0x00008f8c      85c0           test eax, eax
0x00008f8e      89c3           mov ebx, eax
0x00008f90      0f882affffff   js 0x8ec0
0x00008f96      833d9b422000.  cmp dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x20d238:4]=0
0x00008f9d      0f851dffffff   jne 0x8ec0
0x00008fa3      31c0           xor eax, eax
0x00008fa5      be01000000     mov esi, 1
0x00008faa      89df           mov edi, ebx
0x00008fac      e87f8affff     call sym.imp.fcntl
0x00008fb1      85c0           test eax, eax
0x00008fb3      781c           js 0x8fd1
0x00008fb5      83c801         or eax, 1
0x00008fb8      be02000000     mov esi, 2
0x00008fbd      89df           mov edi, ebx
0x00008fbf      89c2           mov edx, eax
0x00008fc1      31c0           xor eax, eax
0x00008fc3      e8688affff     call sym.imp.fcntl
0x00008fc8      83f8ff         cmp eax, 0xffffffff
0x00008fcb      0f85effeffff   jne 0x8ec0
0x00008fd1      e8da89ffff     call sym.imp.__errno_location
0x00008fd6      448b20         mov r12d, dword [rax]
0x00008fd9      4889c5         mov rbp, rax
0x00008fdc      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fcntl.c:446
0x00008fde      e8bd8bffff     call sym.imp.close                      ; ../coreutils-8.31/lib/fcntl.c:406
0x00008fe3      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x00008fe8      44896500       mov dword [rbp], r12d
0x00008fec      e9cffeffff     jmp 0x8ec0
0x00008ff1      0f1f80000000.  nop dword [rax]
0x00008ff8      e8b389ffff     call sym.imp.__errno_location
0x00008ffd      833816         cmp dword [rax], 0x16
0x00009000      0f8569feffff   jne 0x8e6f
0x00009006      31f6           xor esi, esi
0x00009008      31c0           xor eax, eax
0x0000900a      4489e2         mov edx, r12d
0x0000900d      89ef           mov edi, ebp                            ; ../coreutils-8.31/lib/fcntl.c:141
0x0000900f      e81c8affff     call sym.imp.fcntl
0x00009014      85c0           test eax, eax
0x00009016      89c3           mov ebx, eax
0x00009018      0f88a2feffff   js 0x8ec0
0x0000901e      c70510422000.  mov dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x20d238:4]=0
0x00009028      e976ffffff     jmp 0x8fa3
0x0000902d      e89e8affff     call sym.imp.__stack_chk_fail
0x00009032      488b442410     mov rax, qword [rsp + 0x10]
0x00009037      31f6           xor esi, esi
0x00009039      8b5010         mov edx, dword [rax + 0x10]
0x0000903c      31c0           xor eax, eax
0x0000903e      e8ed89ffff     call sym.imp.fcntl
0x00009043      89c3           mov ebx, eax
0x00009045      e976feffff     jmp 0x8ec0
0x0000904a      488b442408     mov rax, qword [rsp + 8]
0x0000904f      e9c5feffff     jmp 0x8f19
0x00009054      488b442408     mov rax, qword [rsp + 8]
0x00009059      e913ffffff     jmp 0x8f71
0x0000905e      6690           nop
;-- __libc_csu_init:
0x00009060      4157           push r15
0x00009062      4156           push r14
0x00009064      4989d7         mov r15, rdx
0x00009067      4155           push r13
0x00009069      4154           push r12
0x0000906b      4c8d257e3920.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x20c9f0 ; "@-"
0x00009072      55             push rbp
0x00009073      488d2d7e3920.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x20c9f8
0x0000907a      53             push rbx
0x0000907b      4189fd         mov r13d, edi
0x0000907e      4989f6         mov r14, rsi
0x00009081      4c29e5         sub rbp, r12
0x00009084      4883ec08       sub rsp, 8
0x00009088      48c1fd03       sar rbp, 3
0x0000908c      e8cf88ffff     call sym._init
0x00009091      4885ed         test rbp, rbp
0x00009094      7420           je 0x90b6
0x00009096      31db           xor ebx, ebx
0x00009098      0f1f84000000.  nop dword [rax + rax]
0x000090a0      4c89fa         mov rdx, r15
0x000090a3      4c89f6         mov rsi, r14
0x000090a6      4489ef         mov edi, r13d
0x000090a9      41ff14dc       call qword [r12 + rbx*8]
0x000090ad      4883c301       add rbx, 1
0x000090b1      4839dd         cmp rbp, rbx
0x000090b4      75ea           jne 0x90a0
0x000090b6      4883c408       add rsp, 8
0x000090ba      5b             pop rbx
0x000090bb      5d             pop rbp
0x000090bc      415c           pop r12
0x000090be      415d           pop r13
0x000090c0      415e           pop r14
0x000090c2      415f           pop r15
0x000090c4      c3             ret
0x000090c5      90             nop
0x000090c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x000090d0      f3c3           ret
0x000090d2      662e0f1f8400.  nop word cs:[rax + rax]
0x000090dc      0f1f4000       nop dword [rax]
;-- atexit:
0x000090e0      488b15213f20.  mov rdx, qword [obj.__dso_handle]       ; [0x20d008:8]=0x20d008 obj.__dso_handle
0x000090e7      31f6           xor esi, esi
0x000090e9      e9628cffff     jmp sym.imp.__cxa_atexit
0x000090ee      0000           add byte [rax], al
