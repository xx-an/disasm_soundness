;-- section..plt:
;-- .plt:
0x000013b0      ff359a6a2000   push qword [0x00207e50]                 ; [12] -r-x section size 768 named .plt
0x000013b6      ff259c6a2000   jmp qword [0x00207e58]                  ; [0x207e58:8]=0
0x000013bc      0f1f4000       nop dword [rax]
;-- imp.free:
0x000013c0      ff259a6a2000   jmp qword [reloc.free]                  ; [0x207e60:8]=0x13c6
0x000013c6      6800000000     push 0
0x000013cb      e9e0ffffff     jmp sym..plt
;-- imp.abort:
0x000013d0      ff25926a2000   jmp qword [reloc.abort]                 ; [0x207e68:8]=0x13d6
0x000013d6      6801000000     push 1
0x000013db      e9d0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x000013e0      ff258a6a2000   jmp qword [reloc.__errno_location]      ; [0x207e70:8]=0x13e6
0x000013e6      6802000000     push 2
0x000013eb      e9c0ffffff     jmp sym..plt
;-- imp.strncmp:
0x000013f0      ff25826a2000   jmp qword [reloc.strncmp]               ; [0x207e78:8]=0x13f6
0x000013f6      6803000000     push 3
0x000013fb      e9b0ffffff     jmp sym..plt
;-- imp._exit:
0x00001400      ff257a6a2000   jmp qword [reloc._exit]                 ; [0x207e80:8]=0x1406
0x00001406      6804000000     push 4
0x0000140b      e9a0ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001410      ff25726a2000   jmp qword [reloc.__fpending]            ; [0x207e88:8]=0x1416
0x00001416      6805000000     push 5
0x0000141b      e990ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001420      ff256a6a2000   jmp qword [reloc.textdomain]            ; [0x207e90:8]=0x1426 ; "&\x14"
0x00001426      6806000000     push 6
0x0000142b      e980ffffff     jmp sym..plt
;-- imp.fclose:
0x00001430      ff25626a2000   jmp qword [reloc.fclose]                ; [0x207e98:8]=0x1436 ; "6\x14"
0x00001436      6807000000     push 7
0x0000143b      e970ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001440      ff255a6a2000   jmp qword [reloc.bindtextdomain]        ; [0x207ea0:8]=0x1446 ; "F\x14"
0x00001446      6808000000     push 8
0x0000144b      e960ffffff     jmp sym..plt
;-- imp.dcgettext:
0x00001450      ff25526a2000   jmp qword [reloc.dcgettext]             ; [0x207ea8:8]=0x1456 ; "V\x14"
0x00001456      6809000000     push 9
0x0000145b      e950ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001460      ff254a6a2000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x207eb0:8]=0x1466 ; "f\x14"
0x00001466      680a000000     push 0xa
0x0000146b      e940ffffff     jmp sym..plt
;-- imp.strlen:
0x00001470      ff25426a2000   jmp qword [reloc.strlen]                ; [0x207eb8:8]=0x1476 ; "v\x14"
0x00001476      680b000000     push 0xb
0x0000147b      e930ffffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001480      ff253a6a2000   jmp qword [reloc.__stack_chk_fail]      ; [0x207ec0:8]=0x1486
0x00001486      680c000000     push 0xc
0x0000148b      e920ffffff     jmp sym..plt
;-- imp.getopt_long:
0x00001490      ff25326a2000   jmp qword [reloc.getopt_long]           ; [0x207ec8:8]=0x1496
0x00001496      680d000000     push 0xd
0x0000149b      e910ffffff     jmp sym..plt
;-- imp.mbrtowc:
0x000014a0      ff252a6a2000   jmp qword [reloc.mbrtowc]               ; [0x207ed0:8]=0x14a6
0x000014a6      680e000000     push 0xe
0x000014ab      e900ffffff     jmp sym..plt
;-- imp.strchr:
0x000014b0      ff25226a2000   jmp qword [reloc.strchr]                ; [0x207ed8:8]=0x14b6
0x000014b6      680f000000     push 0xf
0x000014bb      e9f0feffff     jmp sym..plt
;-- imp.strrchr:
0x000014c0      ff251a6a2000   jmp qword [reloc.strrchr]               ; [0x207ee0:8]=0x14c6
0x000014c6      6810000000     push 0x10
0x000014cb      e9e0feffff     jmp sym..plt
;-- imp.lseek:
0x000014d0      ff25126a2000   jmp qword [reloc.lseek]                 ; [0x207ee8:8]=0x14d6
0x000014d6      6811000000     push 0x11
0x000014db      e9d0feffff     jmp sym..plt
;-- imp.__assert_fail:
0x000014e0      ff250a6a2000   jmp qword [reloc.__assert_fail]         ; [0x207ef0:8]=0x14e6
0x000014e6      6812000000     push 0x12
0x000014eb      e9c0feffff     jmp sym..plt
;-- imp.__strtoul_internal:
0x000014f0      ff25026a2000   jmp qword [reloc.__strtoul_internal]    ; [0x207ef8:8]=0x14f6
0x000014f6      6813000000     push 0x13
0x000014fb      e9b0feffff     jmp sym..plt
;-- imp.memset:
0x00001500      ff25fa692000   jmp qword [reloc.memset]                ; [0x207f00:8]=0x1506
0x00001506      6814000000     push 0x14
0x0000150b      e9a0feffff     jmp sym..plt
;-- imp.memcmp:
0x00001510      ff25f2692000   jmp qword [reloc.memcmp]                ; [0x207f08:8]=0x1516
0x00001516      6815000000     push 0x15
0x0000151b      e990feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001520      ff25ea692000   jmp qword [reloc.fputs_unlocked]        ; [0x207f10:8]=0x1526 ; "&\x15"
0x00001526      6816000000     push 0x16
0x0000152b      e980feffff     jmp sym..plt
;-- imp.calloc:
0x00001530      ff25e2692000   jmp qword [reloc.calloc]                ; [0x207f18:8]=0x1536 ; "6\x15"
0x00001536      6817000000     push 0x17
0x0000153b      e970feffff     jmp sym..plt
;-- imp.mkfifo:
0x00001540      ff25da692000   jmp qword [reloc.mkfifo]                ; [0x207f20:8]=0x1546 ; "F\x15"
0x00001546      6818000000     push 0x18                               ; "@\x1d"
0x0000154b      e960feffff     jmp sym..plt
;-- imp.umask:
0x00001550      ff25d2692000   jmp qword [reloc.umask]                 ; [0x207f28:8]=0x1556 ; "V\x15"
0x00001556      6819000000     push 0x19
0x0000155b      e950feffff     jmp sym..plt
;-- imp.memcpy:
0x00001560      ff25ca692000   jmp qword [reloc.memcpy]                ; [0x207f30:8]=0x1566 ; "f\x15"
0x00001566      681a000000     push 0x1a
0x0000156b      e940feffff     jmp sym..plt
;-- imp.__xmknod:
0x00001570      ff25c2692000   jmp qword [reloc.__xmknod]              ; [0x207f38:8]=0x1576 ; "v\x15"
0x00001576      681b000000     push 0x1b
0x0000157b      e930feffff     jmp sym..plt
;-- imp.fileno:
0x00001580      ff25ba692000   jmp qword [reloc.fileno]                ; [0x207f40:8]=0x1586
0x00001586      681c000000     push 0x1c
0x0000158b      e920feffff     jmp sym..plt
;-- imp.__xstat:
0x00001590      ff25b2692000   jmp qword [reloc.__xstat]               ; [0x207f48:8]=0x1596
0x00001596      681d000000     push 0x1d
0x0000159b      e910feffff     jmp sym..plt
;-- imp.malloc:
0x000015a0      ff25aa692000   jmp qword [reloc.malloc]                ; [0x207f50:8]=0x15a6
0x000015a6      681e000000     push 0x1e
0x000015ab      e900feffff     jmp sym..plt
;-- imp.fflush:
0x000015b0      ff25a2692000   jmp qword [reloc.fflush]                ; [0x207f58:8]=0x15b6
0x000015b6      681f000000     push 0x1f
0x000015bb      e9f0fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x000015c0      ff259a692000   jmp qword [reloc.nl_langinfo]           ; [0x207f60:8]=0x15c6
0x000015c6      6820000000     push 0x20                               ; "@"
0x000015cb      e9e0fdffff     jmp sym..plt
;-- imp.__freading:
0x000015d0      ff2592692000   jmp qword [reloc.__freading]            ; [0x207f68:8]=0x15d6
0x000015d6      6821000000     push 0x21                               ; '!'
0x000015db      e9d0fdffff     jmp sym..plt
;-- imp.realloc:
0x000015e0      ff258a692000   jmp qword [reloc.realloc]               ; [0x207f70:8]=0x15e6
0x000015e6      6822000000     push 0x22                               ; '"'
0x000015eb      e9c0fdffff     jmp sym..plt
;-- imp.setlocale:
0x000015f0      ff2582692000   jmp qword [reloc.setlocale]             ; [0x207f78:8]=0x15f6
0x000015f6      6823000000     push 0x23                               ; '#'
0x000015fb      e9b0fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001600      ff257a692000   jmp qword [reloc.__printf_chk]          ; [0x207f80:8]=0x1606
0x00001606      6824000000     push 0x24                               ; '$'
0x0000160b      e9a0fdffff     jmp sym..plt
;-- imp.chmod:
0x00001610      ff2572692000   jmp qword [reloc.chmod]                 ; [0x207f88:8]=0x1616
0x00001616      6825000000     push 0x25                               ; '%'
0x0000161b      e990fdffff     jmp sym..plt
;-- imp.error:
0x00001620      ff256a692000   jmp qword [reloc.error]                 ; [0x207f90:8]=0x1626 ; "&\x16"
0x00001626      6826000000     push 0x26                               ; '&'
0x0000162b      e980fdffff     jmp sym..plt
;-- imp.fseeko:
0x00001630      ff2562692000   jmp qword [reloc.fseeko]                ; [0x207f98:8]=0x1636 ; "6\x16"
0x00001636      6827000000     push 0x27                               ; '''
0x0000163b      e970fdffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001640      ff255a692000   jmp qword [reloc.__cxa_atexit]          ; [0x207fa0:8]=0x1646 ; "F\x16"
0x00001646      6828000000     push 0x28                               ; '('
0x0000164b      e960fdffff     jmp sym..plt
;-- imp.exit:
0x00001650      ff2552692000   jmp qword [reloc.exit]                  ; [0x207fa8:8]=0x1656 ; "V\x16"
0x00001656      6829000000     push 0x29                               ; ')'
0x0000165b      e950fdffff     jmp sym..plt
;-- imp.fwrite:
0x00001660      ff254a692000   jmp qword [reloc.fwrite]                ; [0x207fb0:8]=0x1666 ; "f\x16"
0x00001666      682a000000     push 0x2a                               ; '*'
0x0000166b      e940fdffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001670      ff2542692000   jmp qword [reloc.__fprintf_chk]         ; [0x207fb8:8]=0x1676 ; "v\x16"
0x00001676      682b000000     push 0x2b                               ; '+'
0x0000167b      e930fdffff     jmp sym..plt
;-- imp.mbsinit:
0x00001680      ff253a692000   jmp qword [reloc.mbsinit]               ; [0x207fc0:8]=0x1686
0x00001686      682c000000     push 0x2c                               ; ','
0x0000168b      e920fdffff     jmp sym..plt
;-- imp.iswprint:
0x00001690      ff2532692000   jmp qword [reloc.iswprint]              ; [0x207fc8:8]=0x1696
0x00001696      682d000000     push 0x2d                               ; '-'
0x0000169b      e910fdffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x000016a0      ff252a692000   jmp qword [reloc.__ctype_b_loc]         ; [0x207fd0:8]=0x16a6
0x000016a6      682e000000     push 0x2e                               ; '.'
0x000016ab      e900fdffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x000016b0      .qword 0x90660020694225ff                              ; [13] -r-x section size 8 named .plt.got
0x000016b8      0000           add byte [rax], al
0x000016ba      0000           add byte [rax], al
0x000016bc      0000           add byte [rax], al
0x000016be      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x000016c0      4157           push r15                                ; [14] -r-x section size 16286 named .text
0x000016c2      4156           push r14
0x000016c4      4155           push r13
0x000016c6      4154           push r12
0x000016c8      4c8d25916420.  lea r12, obj.longopts                   ; 0x207b60
0x000016cf      55             push rbp
0x000016d0      53             push rbx
0x000016d1      4863ef         movsxd rbp, edi
0x000016d4      4889f3         mov rbx, rsi
0x000016d7      4531ed         xor r13d, r13d
0x000016da      4883ec28       sub rsp, 0x28
0x000016de      488b3e         mov rdi, qword [rsi]
0x000016e1      64488b042528.  mov rax, qword fs:[0x28]
0x000016ea      4889442418     mov qword [rsp + 0x18], rax
0x000016ef      31c0           xor eax, eax
0x000016f1      e80a120000     call sym.set_program_name
0x000016f6      488d35a44d00.  lea rsi, [0x000064a1]
0x000016fd      bf06000000     mov edi, 6
0x00001702      e8e9feffff     call sym.imp.setlocale
0x00001707      488d351f4000.  lea rsi, str.usr_local_share_locale     ; 0x572d ; "/usr/local/share/locale"
0x0000170e      488d3def3f00.  lea rdi, [0x00005704]                   ; "coreutils"
0x00001715      e826fdffff     call sym.imp.bindtextdomain
0x0000171a      488d3de33f00.  lea rdi, [0x00005704]                   ; "coreutils"
0x00001721      e8fafcffff     call sym.imp.textdomain
0x00001726      488d3d730b00.  lea rdi, sym.close_stdout               ; 0x22a0 ; "USH\x83\xec\bH\x8b=\xdb] "
0x0000172d      e81e3f0000     call sym.atexit
0x00001732      488d151c4000.  lea rdx, [0x00005755]                   ; "m:Z"
0x00001739      4531c0         xor r8d, r8d
0x0000173c      4c89e1         mov rcx, r12
0x0000173f      4889de         mov rsi, rbx
0x00001742      89ef           mov edi, ebp
0x00001744      e847fdffff     call sym.imp.getopt_long
0x00001749      83f8ff         cmp eax, 0xffffffff
0x0000174c      0f84a2000000   je 0x17f4
0x00001752      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x00001757      0f84df030000   je 0x1b3c
0x0000175d      7e21           jle 0x1780
0x0000175f      83f85a         cmp eax, 0x5a
0x00001762      745c           je 0x17c0
0x00001764      83f86d         cmp eax, 0x6d
0x00001767      0f857c020000   jne 0x19e9
0x0000176d      4c8b2d246920.  mov r13, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x208098:8]=0
0x00001774      ebbc           jmp 0x1732
0x00001776      662e0f1f8400.  nop word cs:[rax + rax]
0x00001780      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x00001785      0f855e020000   jne 0x19e9
0x0000178b      488b3df66820.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00001792      488b0d776820.  mov rcx, qword [obj.Version]            ; [0x208010:8]=0x5e87 str.8.31
0x00001799      4c8d05a53f00.  lea r8, str.David_MacKenzie             ; 0x5745 ; "David MacKenzie"
0x000017a0      488d15593f00.  lea rdx, str.GNU_coreutils              ; 0x5700 ; "GNU coreutils"
0x000017a7      488d35d63e00.  lea rsi, str.mknod                      ; 0x5684 ; "mknod"
0x000017ae      4531c9         xor r9d, r9d
0x000017b1      31c0           xor eax, eax
0x000017b3      e838330000     call sym.version_etc
0x000017b8      31ff           xor edi, edi
0x000017ba      e891feffff     call sym.imp.exit
0x000017bf      90             nop
0x000017c0      48833dd06820.  cmp qword [obj.optarg], 0               ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x208098:8]=0
0x000017c8      0f8464ffffff   je 0x1732
0x000017ce      488d35834500.  lea rsi, str.warning:_ignoring___context__it_requires_an_SELinux_SMACK_enabled_kernel ; 0x5d58 ; "warning: ignoring --context; it requires an SELinux/SMACK-enabled kernel"
0x000017d5      31ff           xor edi, edi
0x000017d7      ba05000000     mov edx, 5
0x000017dc      e86ffcffff     call sym.imp.dcgettext
0x000017e1      31f6           xor esi, esi
0x000017e3      4889c2         mov rdx, rax
0x000017e6      31ff           xor edi, edi
0x000017e8      31c0           xor eax, eax
0x000017ea      e831feffff     call sym.imp.error
0x000017ef      e93effffff     jmp 0x1732
0x000017f4      4d85ed         test r13, r13
0x000017f7      0f840e030000   je 0x1b0b
0x000017fd      4c89ef         mov rdi, r13
0x00001800      e84b0b0000     call sym.mode_compile
0x00001805      4885c0         test rax, rax
0x00001808      4989c6         mov r14, rax
0x0000180b      0f8409050000   je 0x1d1a
0x00001811      31ff           xor edi, edi
0x00001813      e838fdffff     call sym.imp.umask
0x00001818      4189c4         mov r12d, eax
0x0000181b      89c7           mov edi, eax
0x0000181d      e82efdffff     call sym.imp.umask
0x00001822      4531c0         xor r8d, r8d
0x00001825      4489e2         mov edx, r12d
0x00001828      31f6           xor esi, esi
0x0000182a      4c89f1         mov rcx, r14
0x0000182d      bfb6010000     mov edi, 0x1b6
0x00001832      e8590f0000     call sym.mode_adjust
0x00001837      4c89f7         mov rdi, r14
0x0000183a      4189c4         mov r12d, eax
0x0000183d      e87efbffff     call sym.imp.free
0x00001842      41f7c400feff.  test r12d, 0xfffffe00                   ; 4294966784
0x00001849      0f85a7040000   jne 0x1cf6
0x0000184f      48630d3a6820.  movsxd rcx, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x208090:4]=0
0x00001856      89ea           mov edx, ebp
0x00001858      29ca           sub edx, ecx
0x0000185a      39e9           cmp ecx, ebp
0x0000185c      4863d2         movsxd rdx, edx
0x0000185f      0f8da5000000   jge 0x190a
0x00001865      8d4101         lea eax, [rcx + 1]
0x00001868      39e8           cmp eax, ebp
0x0000186a      0f8d34010000   jge 0x19a4
0x00001870      4863c1         movsxd rax, ecx
0x00001873      488b74c308     mov rsi, qword [rbx + rax*8 + 8]
0x00001878      803e70         cmp byte [rsi], 0x70
0x0000187b      0f8523010000   jne 0x19a4
0x00001881      4883fa01       cmp rdx, 1
0x00001885      0f8676030000   jbe 0x1c01
0x0000188b      4883fa02       cmp rdx, 2
0x0000188f      0f868c000000   jbe 0x1921
0x00001895      488b7cc310     mov rdi, qword [rbx + rax*8 + 0x10]
0x0000189a      e8712d0000     call sym.quote
0x0000189f      488d35193f00.  lea rsi, str.extra_operand__s           ; 0x57bf ; "extra operand %s"
0x000018a6      31ff           xor edi, edi
0x000018a8      4889c3         mov rbx, rax
0x000018ab      ba05000000     mov edx, 5
0x000018b0      e89bfbffff     call sym.imp.dcgettext
0x000018b5      31f6           xor esi, esi
0x000018b7      4889c2         mov rdx, rax
0x000018ba      31ff           xor edi, edi
0x000018bc      31c0           xor eax, eax
0x000018be      4889d9         mov rcx, rbx
0x000018c1      e85afdffff     call sym.imp.error
0x000018c6      2b2dc4672000   sub ebp, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x208090:4]=0
0x000018cc      ba05000000     mov edx, 5
0x000018d1      488d35384500.  lea rsi, str.Fifos_do_not_have_major_and_minor_device_numbers. ; 0x5e10 ; "Fifos do not have major and minor device numbers."
0x000018d8      83fd04         cmp ebp, 4
0x000018db      0f8508010000   jne 0x19e9
0x000018e1      31ff           xor edi, edi
0x000018e3      e868fbffff     call sym.imp.dcgettext
0x000018e8      488b3dd16720.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080c0:8]=0
0x000018ef      488d155a4b00.  lea rdx, [0x00006450]                   ; "%s\n"
0x000018f6      4889c1         mov rcx, rax
0x000018f9      be01000000     mov esi, 1
0x000018fe      31c0           xor eax, eax
0x00001900      e86bfdffff     call sym.imp.__fprintf_chk
0x00001905      e9df000000     jmp 0x19e9
0x0000190a      4883fa01       cmp rdx, 1
0x0000190e      0f8639020000   jbe 0x1b4d
0x00001914      4883fa02       cmp rdx, 2
0x00001918      0f8525020000   jne 0x1b43
0x0000191e      4863c1         movsxd rax, ecx
0x00001921      4883c001       add rax, 1
0x00001925      488b3cc3       mov rdi, qword [rbx + rax*8]
0x00001929      488d14c50000.  lea rdx, [rax*8]
0x00001931      0fb607         movzx eax, byte [rdi]
0x00001934      3c63           cmp al, 0x63
0x00001936      0f84bf000000   je 0x19fb
0x0000193c      0f8ed4010000   jle 0x1b16
0x00001942      3c70           cmp al, 0x70
0x00001944      0f85a9000000   jne 0x19f3
0x0000194a      488b7c13f8     mov rdi, qword [rbx + rdx - 8]
0x0000194f      4489e6         mov esi, r12d
0x00001952      e8e9fbffff     call sym.imp.mkfifo
0x00001957      85c0           test eax, eax
0x00001959      0f85c0020000   jne 0x1c1f
0x0000195f      4d85ed         test r13, r13
0x00001962      741b           je 0x197f
0x00001964      486305256720.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x208090:4]=0
0x0000196b      4489e6         mov esi, r12d
0x0000196e      488b3cc3       mov rdi, qword [rbx + rax*8]
0x00001972      e899fcffff     call sym.imp.chmod
0x00001977      85c0           test eax, eax
0x00001979      0f85d7020000   jne 0x1c56
0x0000197f      31c0           xor eax, eax
0x00001981      488b5c2418     mov rbx, qword [rsp + 0x18]
0x00001986      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000198f      0f855c030000   jne 0x1cf1
0x00001995      4883c428       add rsp, 0x28
0x00001999      5b             pop rbx
0x0000199a      5d             pop rbp
0x0000199b      415c           pop r12
0x0000199d      415d           pop r13
0x0000199f      415e           pop r14
0x000019a1      415f           pop r15
0x000019a3      c3             ret
0x000019a4      4883fa03       cmp rdx, 3
0x000019a8      0f86ef020000   jbe 0x1c9d
0x000019ae      4883fa04       cmp rdx, 4
0x000019b2      0f8666ffffff   jbe 0x191e
0x000019b8      488b7ccb20     mov rdi, qword [rbx + rcx*8 + 0x20]
0x000019bd      e84e2c0000     call sym.quote
0x000019c2      488d35f63d00.  lea rsi, str.extra_operand__s           ; 0x57bf ; "extra operand %s"
0x000019c9      4889c3         mov rbx, rax
0x000019cc      ba05000000     mov edx, 5
0x000019d1      31ff           xor edi, edi
0x000019d3      e878faffff     call sym.imp.dcgettext
0x000019d8      4889d9         mov rcx, rbx
0x000019db      4889c2         mov rdx, rax
0x000019de      31f6           xor esi, esi
0x000019e0      31ff           xor edi, edi
0x000019e2      31c0           xor eax, eax
0x000019e4      e837fcffff     call sym.imp.error
0x000019e9      bf01000000     mov edi, 1
0x000019ee      e85d040000     call sym.usage
0x000019f3      3c75           cmp al, 0x75
0x000019f5      0f8528010000   jne 0x1b23
0x000019fb      bd00200000     mov ebp, 0x2000                         ; ";"
0x00001a00      4c8b741308     mov r14, qword [rbx + rdx + 8]
0x00001a05      4c8b7c1310     mov r15, qword [rbx + rdx + 0x10]
0x00001a0a      4531c0         xor r8d, r8d
0x00001a0d      31d2           xor edx, edx
0x00001a0f      31f6           xor esi, esi
0x00001a11      4889e1         mov rcx, rsp
0x00001a14      4c89f7         mov rdi, r14
0x00001a17      e8c4340000     call sym.xstrtoumax
0x00001a1c      85c0           test eax, eax
0x00001a1e      0f8581010000   jne 0x1ba5
0x00001a24      488b0424       mov rax, qword [rsp]
0x00001a28      89c2           mov edx, eax
0x00001a2a      4839d0         cmp rax, rdx
0x00001a2d      0f8572010000   jne 0x1ba5
0x00001a33      488d4c2408     lea rcx, [rsp + 8]
0x00001a38      4531c0         xor r8d, r8d
0x00001a3b      31d2           xor edx, edx
0x00001a3d      31f6           xor esi, esi
0x00001a3f      4c89ff         mov rdi, r15
0x00001a42      e899340000     call sym.xstrtoumax
0x00001a47      85c0           test eax, eax
0x00001a49      0f8524010000   jne 0x1b73
0x00001a4f      488b442408     mov rax, qword [rsp + 8]
0x00001a54      89c2           mov edx, eax
0x00001a56      4839d0         cmp rax, rdx
0x00001a59      0f8514010000   jne 0x1b73
0x00001a5f      488b0c24       mov rcx, qword [rsp]
0x00001a63      48be00000000.  movabs rsi, 0xfffff00000000000
0x00001a6d      4889ca         mov rdx, rcx
0x00001a70      48c1e120       shl rcx, 0x20
0x00001a74      48c1e208       shl rdx, 8
0x00001a78      4821f1         and rcx, rsi
0x00001a7b      48be0000f0ff.  movabs rsi, 0xffffff00000
0x00001a85      81e200ff0f00   and edx, 0xfff00
0x00001a8b      4809ca         or rdx, rcx
0x00001a8e      4889c1         mov rcx, rax
0x00001a91      0fb6c0         movzx eax, al
0x00001a94      48c1e10c       shl rcx, 0xc
0x00001a98      4821f1         and rcx, rsi
0x00001a9b      4809ca         or rdx, rcx
0x00001a9e      4809d0         or rax, rdx
0x00001aa1      4883f8ff       cmp rax, 0xffffffffffffffff
0x00001aa5      0f842c010000   je 0x1bd7
0x00001aab      486315de6520.  movsxd rdx, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x208090:4]=0
0x00001ab2      488d4c2410     lea rcx, [rsp + 0x10]
0x00001ab7      31ff           xor edi, edi
0x00001ab9      4889442410     mov qword [rsp + 0x10], rax
0x00001abe      488b34d3       mov rsi, qword [rbx + rdx*8]
0x00001ac2      89ea           mov edx, ebp
0x00001ac4      4409e2         or edx, r12d
0x00001ac7      e8a4faffff     call sym.imp.__xmknod
0x00001acc      85c0           test eax, eax
0x00001ace      0f848bfeffff   je 0x195f
0x00001ad4      486305b56520.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x208090:4]=0
0x00001adb      be03000000     mov esi, 3
0x00001ae0      31ff           xor edi, edi
0x00001ae2      488b14c3       mov rdx, qword [rbx + rax*8]
0x00001ae6      e855290000     call sym.quotearg_n_style_colon
0x00001aeb      4889c3         mov rbx, rax
0x00001aee      e8edf8ffff     call sym.imp.__errno_location
0x00001af3      8b30           mov esi, dword [rax]
0x00001af5      488d15a04300.  lea rdx, [0x00005e9c]                   ; "%s"
0x00001afc      4889d9         mov rcx, rbx
0x00001aff      bf01000000     mov edi, 1
0x00001b04      31c0           xor eax, eax
0x00001b06      e815fbffff     call sym.imp.error
0x00001b0b      41bcb6010000   mov r12d, 0x1b6
0x00001b11      e939fdffff     jmp 0x184f
0x00001b16      3c62           cmp al, 0x62
0x00001b18      bd00600000     mov ebp, 0x6000                         ; "D\xd8\xff\xffD\xd8\xff\xffD\xd8\xff\xff\x94\xce\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff\xd4\xce\xff\xff\xdc\xcd\xff\xff\x9c\xcd\xff\xffd\xcf\xff\xffT\xcf\xff\xffD\xcf\xff\xff4\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff|\xcf\xff\xff$\xcf\xff\xff\x14\xcf\xff\xff\x14\xcf\xff\xff\xe4\xce\xff\xff\x14\xcf\xff\xff\xbc\xce\xff\xff\x14\xcf\xff\xffw\xcd\xff\xff\x14\xcf\xff\xff\x14\xcf\xff\xff\x14\xcf\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\x14\xcf\xff\xff\x14\xcf\xff\xff\x14\xcf\xff\xff\x14\xcf\xff\xffG\xcd\xff\xff|\xcf\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\x14\xcf\xff\xff\xec\xcd\xff\xff\xbc\xce\xff\xff\x14\xcf\xff\xff\xbc\xce\xff\xff\x14\xcf\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xff\xbc\xce\xff\xffw\xcc\xff\xff\x14\xcf\xff\xffw\xcc\xff\xff\xe4\xce\xff\xffh\xce\xff\xffx\xcd\xff\xffx\xcd\xff\xffx\xcd\xff\xffx\xcd\xff\xffx\xcd\xff\xffx\xcd\xff\xffX\xce\xff\xff\xa8\xcf\xff\xff\x90\xcf\xff\xff@\xce\xff\xff\x80\xcf\xff\xff(\xce\xff\xffh\xcf\xff\xffx\xcd\xff\xffx\xcd\xff\xffx\xcd\xff\xffx\xcd\xff\xffx\xcd\xff\xffx\xcd\xff\xffx\xcd\xff\xffx\xcd\xff\xffx\xcd\xff\xffx\xcd\xff\xffx\xcd\xff\xffx\xcd\xff\xffx\xcd\xff\xffx\xcd\xff\xffx\xcd\xff\xffx\xcd\xff\xffx\xcd\xff\xffx\xcd\xff\xffP\xcf\xff\xff8\xcf\xff\xff8\xcf\xff\xff \xcf\xff\xff8\xcf\xff\xff\b\xcf\xff\xff8\xcf\xff\xffx\xcb\xff\xff8\xcf\xff\xff8\xcf\xff\xff8\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff8\xcf\xff\xff8\xcf\xff\xff8\xcf\xff\xff8\xcf\xff\xffH\xcb\xff\xffx\xcd\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff8\xcf\xff\xff\b\xce\xff\xff\b\xcf\xff\xff8\xcf\xff\xff\b\xcf\xff\xff8\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xff\b\xcf\xff\xffx\xca\xff\xff8\xcf\xff\xffx\xca\xff\xff \xcf\xff\xff"
0x00001b1d      0f84ddfeffff   je 0x1a00
0x00001b23      e8e82a0000     call sym.quote
0x00001b28      ba05000000     mov edx, 5
0x00001b2d      4889c3         mov rbx, rax
0x00001b30      488d35543c00.  lea rsi, str.invalid_device_type__s     ; 0x578b ; "invalid device type %s"
0x00001b37      e995feffff     jmp 0x19d1
0x00001b3c      31ff           xor edi, edi
0x00001b3e      e80d030000     call sym.usage
0x00001b43      488b7ccb10     mov rdi, qword [rbx + rcx*8 + 0x10]
0x00001b48      e94dfdffff     jmp 0x189a
0x00001b4d      488d35123c00.  lea rsi, str.missing_operand            ; 0x5766 ; "missing operand"
0x00001b54      31ff           xor edi, edi
0x00001b56      ba05000000     mov edx, 5
0x00001b5b      e8f0f8ffff     call sym.imp.dcgettext
0x00001b60      31f6           xor esi, esi
0x00001b62      4889c2         mov rdx, rax
0x00001b65      31ff           xor edi, edi
0x00001b67      31c0           xor eax, eax
0x00001b69      e8b2faffff     call sym.imp.error
0x00001b6e      e976feffff     jmp 0x19e9
0x00001b73      4c89ff         mov rdi, r15
0x00001b76      e8952a0000     call sym.quote
0x00001b7b      488d35e64200.  lea rsi, str.invalid_minor_device_number__s ; 0x5e68 ; "invalid minor device number %s"
0x00001b82      4889c3         mov rbx, rax
0x00001b85      ba05000000     mov edx, 5
0x00001b8a      31ff           xor edi, edi
0x00001b8c      e8bff8ffff     call sym.imp.dcgettext
0x00001b91      4889d9         mov rcx, rbx
0x00001b94      4889c2         mov rdx, rax
0x00001b97      31f6           xor esi, esi
0x00001b99      bf01000000     mov edi, 1
0x00001b9e      31c0           xor eax, eax
0x00001ba0      e87bfaffff     call sym.imp.error
0x00001ba5      4c89f7         mov rdi, r14
0x00001ba8      e8632a0000     call sym.quote
0x00001bad      488d35944200.  lea rsi, str.invalid_major_device_number__s ; 0x5e48 ; "invalid major device number %s"
0x00001bb4      4889c3         mov rbx, rax
0x00001bb7      ba05000000     mov edx, 5
0x00001bbc      31ff           xor edi, edi
0x00001bbe      e88df8ffff     call sym.imp.dcgettext
0x00001bc3      4889d9         mov rcx, rbx
0x00001bc6      4889c2         mov rdx, rax
0x00001bc9      31f6           xor esi, esi
0x00001bcb      bf01000000     mov edi, 1
0x00001bd0      31c0           xor eax, eax
0x00001bd2      e849faffff     call sym.imp.error
0x00001bd7      488d35983b00.  lea rsi, str.invalid_device__s__s       ; 0x5776 ; "invalid device %s %s"
0x00001bde      ba05000000     mov edx, 5
0x00001be3      31ff           xor edi, edi
0x00001be5      e866f8ffff     call sym.imp.dcgettext
0x00001bea      4d89f8         mov r8, r15
0x00001bed      4889c2         mov rdx, rax
0x00001bf0      4c89f1         mov rcx, r14
0x00001bf3      31f6           xor esi, esi
0x00001bf5      bf01000000     mov edi, 1
0x00001bfa      31c0           xor eax, eax
0x00001bfc      e81ffaffff     call sym.imp.error
0x00001c01      488b7cebf8     mov rdi, qword [rbx + rbp*8 - 8]
0x00001c06      e8052a0000     call sym.quote
0x00001c0b      ba05000000     mov edx, 5
0x00001c10      4889c3         mov rbx, rax
0x00001c13      488d35b63b00.  lea rsi, str.missing_operand_after__s   ; 0x57d0 ; "missing operand after %s"
0x00001c1a      e9b2fdffff     jmp 0x19d1
0x00001c1f      4863056a6420.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x208090:4]=0
0x00001c26      be03000000     mov esi, 3
0x00001c2b      31ff           xor edi, edi
0x00001c2d      488b14c3       mov rdx, qword [rbx + rax*8]
0x00001c31      e80a280000     call sym.quotearg_n_style_colon
0x00001c36      4889c3         mov rbx, rax
0x00001c39      e8a2f7ffff     call sym.imp.__errno_location
0x00001c3e      8b30           mov esi, dword [rax]
0x00001c40      488d15554200.  lea rdx, [0x00005e9c]                   ; "%s"
0x00001c47      4889d9         mov rcx, rbx
0x00001c4a      bf01000000     mov edi, 1
0x00001c4f      31c0           xor eax, eax
0x00001c51      e8caf9ffff     call sym.imp.error
0x00001c56      486305336420.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x208090:4]=0
0x00001c5d      bf04000000     mov edi, 4
0x00001c62      488b34c3       mov rsi, qword [rbx + rax*8]
0x00001c66      e8d5260000     call sym.quotearg_style
0x00001c6b      488d35303b00.  lea rsi, str.cannot_set_permissions_of__s ; 0x57a2 ; "cannot set permissions of %s"
0x00001c72      ba05000000     mov edx, 5
0x00001c77      31ff           xor edi, edi
0x00001c79      4889c5         mov rbp, rax
0x00001c7c      e8cff7ffff     call sym.imp.dcgettext
0x00001c81      4889c3         mov rbx, rax
0x00001c84      e857f7ffff     call sym.imp.__errno_location
0x00001c89      8b30           mov esi, dword [rax]
0x00001c8b      4889e9         mov rcx, rbp
0x00001c8e      4889da         mov rdx, rbx
0x00001c91      bf01000000     mov edi, 1
0x00001c96      31c0           xor eax, eax
0x00001c98      e883f9ffff     call sym.imp.error
0x00001c9d      4863c5         movsxd rax, ebp
0x00001ca0      488b7cc3f8     mov rdi, qword [rbx + rax*8 - 8]
0x00001ca5      e866290000     call sym.quote
0x00001caa      488d351f3b00.  lea rsi, str.missing_operand_after__s   ; 0x57d0 ; "missing operand after %s"
0x00001cb1      31ff           xor edi, edi
0x00001cb3      4889c3         mov rbx, rax
0x00001cb6      ba05000000     mov edx, 5
0x00001cbb      e890f7ffff     call sym.imp.dcgettext
0x00001cc0      31f6           xor esi, esi
0x00001cc2      4889c2         mov rdx, rax
0x00001cc5      31ff           xor edi, edi
0x00001cc7      31c0           xor eax, eax
0x00001cc9      4889d9         mov rcx, rbx
0x00001ccc      e84ff9ffff     call sym.imp.error
0x00001cd1      2b2db9632000   sub ebp, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x208090:4]=0
0x00001cd7      83fd02         cmp ebp, 2
0x00001cda      0f8509fdffff   jne 0x19e9
0x00001ce0      ba05000000     mov edx, 5
0x00001ce5      488d35ec4000.  lea rsi, str.Special_files_require_major_and_minor_device_numbers. ; 0x5dd8 ; "Special files require major and minor device numbers."
0x00001cec      e9f0fbffff     jmp 0x18e1
0x00001cf1      e88af7ffff     call sym.imp.__stack_chk_fail
0x00001cf6      488d35ab4000.  lea rsi, str.mode_must_specify_only_file_permission_bits ; 0x5da8 ; "mode must specify only file permission bits"
0x00001cfd      ba05000000     mov edx, 5
0x00001d02      31ff           xor edi, edi
0x00001d04      e847f7ffff     call sym.imp.dcgettext
0x00001d09      31f6           xor esi, esi
0x00001d0b      4889c2         mov rdx, rax
0x00001d0e      bf01000000     mov edi, 1
0x00001d13      31c0           xor eax, eax
0x00001d15      e806f9ffff     call sym.imp.error
0x00001d1a      488d35383a00.  lea rsi, str.invalid_mode               ; 0x5759 ; "invalid mode"
0x00001d21      ba05000000     mov edx, 5
0x00001d26      31ff           xor edi, edi
0x00001d28      e823f7ffff     call sym.imp.dcgettext
0x00001d2d      31f6           xor esi, esi
0x00001d2f      4889c2         mov rdx, rax
0x00001d32      bf01000000     mov edi, 1
0x00001d37      31c0           xor eax, eax
0x00001d39      e8e2f8ffff     call sym.imp.error
0x00001d3e      6690           nop
;-- entry0:
;-- _start:
;-- rip:
0x00001d40      31ed           xor ebp, ebp
0x00001d42      4989d1         mov r9, rdx
0x00001d45      5e             pop rsi
0x00001d46      4889e2         mov rdx, rsp
0x00001d49      4883e4f0       and rsp, 0xfffffffffffffff0
0x00001d4d      50             push rax
0x00001d4e      54             push rsp
0x00001d4f      4c8d05ea3800.  lea r8, sym.__libc_csu_fini             ; 0x5640
0x00001d56      488d0d733800.  lea rcx, sym.__libc_csu_init            ; 0x55d0 ; "AWAVI\x89\xd7AUATL\x8d%n% "
0x00001d5d      488d3d5cf9ff.  lea rdi, main                           ; sym.main
                                                                       ; 0x16c0 ; "AWAVAUATL\x8d%\x91d "
0x00001d64      ff1576622000   call qword [reloc.__libc_start_main]    ; [0x207fe0:8]=0
0x00001d6a      f4             hlt
0x00001d6b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00001d70      488d3d096320.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x208080
0x00001d77      55             push rbp
0x00001d78      488d05016320.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x208080
0x00001d7f      4839f8         cmp rax, rdi
0x00001d82      4889e5         mov rbp, rsp
0x00001d85      7419           je 0x1da0
0x00001d87      488b054a6220.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x207fd8:8]=0
0x00001d8e      4885c0         test rax, rax
0x00001d91      740d           je 0x1da0
0x00001d93      5d             pop rbp
0x00001d94      ffe0           jmp rax
0x00001d96      662e0f1f8400.  nop word cs:[rax + rax]
0x00001da0      5d             pop rbp
0x00001da1      c3             ret
0x00001da2      0f1f4000       nop dword [rax]
0x00001da6      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00001db0      488d3dc96220.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x208080
0x00001db7      488d35c26220.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x208080
0x00001dbe      55             push rbp
0x00001dbf      4829fe         sub rsi, rdi
0x00001dc2      4889e5         mov rbp, rsp
0x00001dc5      48c1fe03       sar rsi, 3
0x00001dc9      4889f0         mov rax, rsi
0x00001dcc      48c1e83f       shr rax, 0x3f
0x00001dd0      4801c6         add rsi, rax
0x00001dd3      48d1fe         sar rsi, 1
0x00001dd6      7418           je 0x1df0
0x00001dd8      488b05116220.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x207ff0:8]=0
0x00001ddf      4885c0         test rax, rax
0x00001de2      740c           je 0x1df0
0x00001de4      5d             pop rbp
0x00001de5      ffe0           jmp rax
0x00001de7      660f1f840000.  nop word [rax + rax]
0x00001df0      5d             pop rbp
0x00001df1      c3             ret
0x00001df2      0f1f4000       nop dword [rax]
0x00001df6      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00001e00      803dc1622000.  cmp byte [obj.completed.7697], 0        ; [0x2080c8:1]=0
0x00001e07      752f           jne 0x1e38
0x00001e09      48833de76120.  cmp qword [reloc.__cxa_finalize], 0     ; [0x207ff8:8]=0
0x00001e11      55             push rbp
0x00001e12      4889e5         mov rbp, rsp
0x00001e15      740c           je 0x1e23
0x00001e17      488b3dea6120.  mov rdi, qword [obj.__dso_handle]       ; [0x208008:8]=0x208008 obj.__dso_handle
0x00001e1e      e88df8ffff     call sym..plt.got
0x00001e23      e848ffffff     call sym.deregister_tm_clones
0x00001e28      c60599622000.  mov byte [obj.completed.7697], 1        ; [0x2080c8:1]=0
0x00001e2f      5d             pop rbp
0x00001e30      c3             ret
0x00001e31      0f1f80000000.  nop dword [rax]
0x00001e38      f3c3           ret
0x00001e3a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00001e40      55             push rbp
0x00001e41      4889e5         mov rbp, rsp
0x00001e44      5d             pop rbp
0x00001e45      e966ffffff     jmp sym.register_tm_clones
0x00001e4a      660f1f440000   nop word [rax + rax]
;-- usage:
0x00001e50      4155           push r13                                ; /src:50
0x00001e52      4154           push r12
0x00001e54      ba05000000     mov edx, 5                              ; /src:52
0x00001e59      55             push rbp                                ; /src:50
0x00001e5a      53             push rbx
0x00001e5b      89fd           mov ebp, edi
0x00001e5d      4881ec880000.  sub rsp, 0x88
0x00001e64      488b1d756220.  mov rbx, qword [obj.program_name]       ; [0x2080e0:8]=0
0x00001e6b      64488b042528.  mov rax, qword fs:[0x28]
0x00001e74      4889442478     mov qword [rsp + 0x78], rax
0x00001e79      31c0           xor eax, eax
0x00001e7b      85ff           test edi, edi                           ; /src:51
0x00001e7d      742e           je 0x1ead
0x00001e7f      488d357a3900.  lea rsi, str.Try___s___help__for_more_information. ; /src:52 ; 0x5800 ; "Try '%s --help' for more information.\n"
0x00001e86      31ff           xor edi, edi
0x00001e88      e8c3f5ffff     call sym.imp.dcgettext
0x00001e8d      488b3d2c6220.  mov rdi, qword [obj.stderr]             ; .//coreutils-8.31/lib:97 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080c0:8]=0
0x00001e94      4889c2         mov rdx, rax
0x00001e97      4889d9         mov rcx, rbx
0x00001e9a      be01000000     mov esi, 1
0x00001e9f      31c0           xor eax, eax
0x00001ea1      e8caf7ffff     call sym.imp.__fprintf_chk
0x00001ea6      89ef           mov edi, ebp                            ; /src:89
0x00001ea8      e8a3f7ffff     call sym.imp.exit
0x00001ead      488d35743900.  lea rsi, str.Usage:__s__OPTION_..._NAME_TYPE__MAJOR_MINOR ; /src:55 ; 0x5828 ; "Usage: %s [OPTION]... NAME TYPE [MAJOR MINOR]\n"
0x00001eb4      31ff           xor edi, edi
0x00001eb6      e895f5ffff     call sym.imp.dcgettext
0x00001ebb      4889da         mov rdx, rbx                            ; .//coreutils-8.31/lib:104
0x00001ebe      4889c6         mov rsi, rax
0x00001ec1      bf01000000     mov edi, 1
0x00001ec6      31c0           xor eax, eax
0x00001ec8      e833f7ffff     call sym.imp.__printf_chk
0x00001ecd      488b1db46120.  mov rbx, qword [obj.stdout]             ; /src:57 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00001ed4      488d357d3900.  lea rsi, str.Create_the_special_file_NAME_of_the_given_TYPE. ; 0x5858 ; "Create the special file NAME of the given TYPE.\n"
0x00001edb      ba05000000     mov edx, 5
0x00001ee0      31ff           xor edi, edi
0x00001ee2      e869f5ffff     call sym.imp.dcgettext
0x00001ee7      4889de         mov rsi, rbx
0x00001eea      4889c7         mov rdi, rax
0x00001eed      e82ef6ffff     call sym.imp.fputs_unlocked
0x00001ef2      488b1d8f6120.  mov rbx, qword [obj.stdout]             ; ../coreutils-8.31/src/nod.c:587 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00001ef9      488d35903900.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0x5890 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x00001f00      ba05000000     mov edx, 5
0x00001f05      31ff           xor edi, edi
0x00001f07      e844f5ffff     call sym.imp.dcgettext
0x00001f0c      4889de         mov rsi, rbx
0x00001f0f      4889c7         mov rdi, rax
0x00001f12      e809f6ffff     call sym.imp.fputs_unlocked
0x00001f17      488b1d6a6120.  mov rbx, qword [obj.stdout]             ; /src:63 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00001f1e      488d35bb3900.  lea rsi, str.m____mode_MODE____set_file_permission_bits_to_MODE__not_a_rw___umask ; 0x58e0 ; "  -m, --mode=MODE    set file permission bits to MODE, not a=rw - umask\n"
0x00001f25      ba05000000     mov edx, 5
0x00001f2a      31ff           xor edi, edi
0x00001f2c      e81ff5ffff     call sym.imp.dcgettext
0x00001f31      4889de         mov rsi, rbx
0x00001f34      4889c7         mov rdi, rax
0x00001f37      e8e4f5ffff     call sym.imp.fputs_unlocked
0x00001f3c      488b1d456120.  mov rbx, qword [obj.stdout]             ; /src:66 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00001f43      488d35e63900.  lea rsi, str.Z___________________set_the_SELinux_security_context_to_default_type__________context__CTX___like__Z__or_if_CTX_is_specified_then_set_the_SELinux___________________________or_SMACK_security_context_to_CTX ; 0x5930 ; "  -Z                   set the SELinux security context to default type\n      --context[=CTX]  like -Z, or if CTX is specified then set the SELinux\n                         or SMACK security context to CTX\n"
0x00001f4a      ba05000000     mov edx, 5
0x00001f4f      31ff           xor edi, edi
0x00001f51      e8faf4ffff     call sym.imp.dcgettext
0x00001f56      4889de         mov rsi, rbx
0x00001f59      4889c7         mov rdi, rax
0x00001f5c      e8bff5ffff     call sym.imp.fputs_unlocked
0x00001f61      488b1d206120.  mov rbx, qword [obj.stdout]             ; /src:71 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00001f68      488d35913a00.  lea rsi, str.help_____display_this_help_and_exit ; 0x5a00 ; "      --help     display this help and exit\n"
0x00001f6f      ba05000000     mov edx, 5
0x00001f74      31ff           xor edi, edi
0x00001f76      e8d5f4ffff     call sym.imp.dcgettext
0x00001f7b      4889de         mov rsi, rbx
0x00001f7e      4889c7         mov rdi, rax
0x00001f81      e89af5ffff     call sym.imp.fputs_unlocked
0x00001f86      488b1dfb6020.  mov rbx, qword [obj.stdout]             ; /src:72 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00001f8d      488d359c3a00.  lea rsi, str.version__output_version_information_and_exit ; 0x5a30 ; "      --version  output version information and exit\n"
0x00001f94      ba05000000     mov edx, 5
0x00001f99      31ff           xor edi, edi
0x00001f9b      e8b0f4ffff     call sym.imp.dcgettext
0x00001fa0      4889de         mov rsi, rbx
0x00001fa3      4889c7         mov rdi, rax
0x00001fa6      e875f5ffff     call sym.imp.fputs_unlocked
0x00001fab      488b1dd66020.  mov rbx, qword [obj.stdout]             ; /src:73 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00001fb2      488d35af3a00.  lea rsi, str.Both_MAJOR_and_MINOR_must_be_specified_when_TYPE_is_b__c__or_u__and_they__must_be_omitted_when_TYPE_is_p.__If_MAJOR_or_MINOR_begins_with_0x_or_0X___it_is_interpreted_as_hexadecimal__otherwise__if_it_begins_with_0__as_octal___otherwise__as_decimal.__TYPE_may_be: ; 0x5a68 ; "\nBoth MAJOR and MINOR must be specified when TYPE is b, c, or u, and they\nmust be omitted when TYPE is p.  If MAJOR or MINOR begins with 0x or 0X,\nit is interpreted as hexadecimal; otherwise, if it begins with 0, as octal;\notherwise, as decimal.  TYPE may be:\n"
0x00001fb9      ba05000000     mov edx, 5
0x00001fbe      31ff           xor edi, edi
0x00001fc0      e88bf4ffff     call sym.imp.dcgettext
0x00001fc5      4889de         mov rsi, rbx
0x00001fc8      4889c7         mov rdi, rax
0x00001fcb      e850f5ffff     call sym.imp.fputs_unlocked
0x00001fd0      488b1db16020.  mov rbx, qword [obj.stdout]             ; /src:80 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00001fd7      488d35923b00.  lea rsi, str.b______create_a_block__buffered__special_file____c__u___create_a_character__unbuffered__special_file____p______create_a_FIFO ; 0x5b70 ; "\n  b      create a block (buffered) special file\n  c, u   create a character (unbuffered) special file\n  p      create a FIFO\n"
0x00001fde      ba05000000     mov edx, 5
0x00001fe3      31ff           xor edi, edi
0x00001fe5      e866f4ffff     call sym.imp.dcgettext
0x00001fea      4889de         mov rsi, rbx
0x00001fed      4889c7         mov rdi, rax
0x00001ff0      488d1d8d3600.  lea rbx, str.mknod                      ; 0x5684 ; "mknod"
0x00001ff7      e824f5ffff     call sym.imp.fputs_unlocked
0x00001ffc      488d35ed3b00.  lea rsi, str.NOTE:_your_shell_may_have_its_own_version_of__s__which_usually_supersedes__the_version_described_here.__Please_refer_to_your_shell_s_documentation__for_details_about_the_options_it_supports. ; /src:86 ; 0x5bf0 ; "\nNOTE: your shell may have its own version of %s, which usually supersedes\nthe version described here.  Please refer to your shell's documentation\nfor details about the options it supports.\n"
0x00002003      ba05000000     mov edx, 5
0x00002008      31ff           xor edi, edi
0x0000200a      e841f4ffff     call sym.imp.dcgettext
0x0000200f      488d156e3600.  lea rdx, str.mknod                      ; .//coreutils-8.31/lib:104 ; 0x5684 ; "mknod"
0x00002016      4889c6         mov rsi, rax
0x00002019      bf01000000     mov edi, 1
0x0000201e      31c0           xor eax, eax
0x00002020      e8dbf5ffff     call sym.imp.__printf_chk
0x00002025      488d055e3600.  lea rax, [0x0000568a]                   ; ../coreutils-8.31/src/nod.c:633 ; "["
0x0000202c      488d0d983600.  lea rcx, str.sha256sum                  ; 0x56cb ; "sha256sum"
0x00002033      48c744246000.  mov qword [rsp + 0x60], 0
0x0000203c      48c744246800.  mov qword [rsp + 0x68], 0
0x00002045      4889e2         mov rdx, rsp                            ; ../coreutils-8.31/src/nod.c:644
0x00002048      48890424       mov qword [rsp], rax                    ; ../coreutils-8.31/src/nod.c:633
0x0000204c      488d05393600.  lea rax, str.test_invocation            ; 0x568c ; "test invocation"
0x00002053      48894c2430     mov qword [rsp + 0x30], rcx
0x00002058      488d0d763600.  lea rcx, str.sha384sum                  ; 0x56d5 ; "sha384sum"
0x0000205f      4889442408     mov qword [rsp + 8], rax
0x00002064      488d05993600.  lea rax, [0x00005704]                   ; "coreutils"
0x0000206b      48894c2440     mov qword [rsp + 0x40], rcx
0x00002070      488d0d683600.  lea rcx, str.sha512sum                  ; 0x56df ; "sha512sum"
0x00002077      4889442410     mov qword [rsp + 0x10], rax
0x0000207c      488d05193600.  lea rax, str.Multi_call_invocation      ; 0x569c ; "Multi-call invocation"
0x00002083      48894c2450     mov qword [rsp + 0x50], rcx
0x00002088      4889442418     mov qword [rsp + 0x18], rax
0x0000208d      488d051e3600.  lea rax, str.sha224sum                  ; 0x56b2 ; "sha224sum"
0x00002094      4889442420     mov qword [rsp + 0x20], rax
0x00002099      488d051c3600.  lea rax, str.sha2_utilities             ; 0x56bc ; "sha2 utilities"
0x000020a0      4889442428     mov qword [rsp + 0x28], rax
0x000020a5      4889442438     mov qword [rsp + 0x38], rax
0x000020aa      4889442448     mov qword [rsp + 0x48], rax
0x000020af      4889442458     mov qword [rsp + 0x58], rax
0x000020b4      0f1f4000       nop dword [rax]
0x000020b8      4883c210       add rdx, 0x10                           ; ../coreutils-8.31/src/nod.c:647
0x000020bc      488b3a         mov rdi, qword [rdx]                    ; ../coreutils-8.31/src/nod.c:646
0x000020bf      4885ff         test rdi, rdi
0x000020c2      7413           je 0x20d7
0x000020c4      b906000000     mov ecx, 6
0x000020c9      4889de         mov rsi, rbx
0x000020cc      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000020ce      0f97c0         seta al
0x000020d1      1c00           sbb al, 0
0x000020d3      84c0           test al, al
0x000020d5      75e1           jne 0x20b8
0x000020d7      4c8b6208       mov r12, qword [rdx + 8]                ; ../coreutils-8.31/src/nod.c:649
0x000020db      31ff           xor edi, edi                            ; ../coreutils-8.31/src/nod.c:652
0x000020dd      ba05000000     mov edx, 5
0x000020e2      488d35003600.  lea rsi, str.s_online_help:___s         ; 0x56e9 ; "\n%s online help: <%s>\n"
0x000020e9      4d85e4         test r12, r12                           ; ../coreutils-8.31/src/nod.c:649
0x000020ec      0f84c1000000   je 0x21b3
0x000020f2      e859f3ffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/src/nod.c:652
0x000020f7      488d0db23b00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; .//coreutils-8.31/lib:104 ; 0x5cb0 ; "https://www.gnu.org/software/coreutils/"
0x000020fe      488d15fb3500.  lea rdx, str.GNU_coreutils              ; 0x5700 ; "GNU coreutils"
0x00002105      4889c6         mov rsi, rax
0x00002108      bf01000000     mov edi, 1
0x0000210d      31c0           xor eax, eax
0x0000210f      e8ecf4ffff     call sym.imp.__printf_chk
0x00002114      31f6           xor esi, esi                            ; ../coreutils-8.31/src/nod.c:656
0x00002116      bf05000000     mov edi, 5
0x0000211b      e8d0f4ffff     call sym.imp.setlocale
0x00002120      4885c0         test rax, rax                           ; ../coreutils-8.31/src/nod.c:657
0x00002123      741c           je 0x2141
0x00002125      488d35e23500.  lea rsi, [0x0000570e]                   ; "en_"
0x0000212c      ba03000000     mov edx, 3
0x00002131      4889c7         mov rdi, rax
0x00002134      e8b7f2ffff     call sym.imp.strncmp
0x00002139      85c0           test eax, eax
0x0000213b      0f8507010000   jne 0x2248
0x00002141      488d35ca3500.  lea rsi, str.Full_documentation___s_s   ; ../coreutils-8.31/src/nod.c:666 ; 0x5712 ; "Full documentation <%s%s>\n"
0x00002148      31ff           xor edi, edi
0x0000214a      ba05000000     mov edx, 5
0x0000214f      e8fcf2ffff     call sym.imp.dcgettext
0x00002154      488d0d293500.  lea rcx, str.mknod                      ; .//coreutils-8.31/lib:104 ; 0x5684 ; "mknod"
0x0000215b      488d154e3b00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x5cb0 ; "https://www.gnu.org/software/coreutils/"
0x00002162      4889c6         mov rsi, rax
0x00002165      bf01000000     mov edi, 1
0x0000216a      31c0           xor eax, eax
0x0000216c      e88ff4ffff     call sym.imp.__printf_chk
0x00002171      4939dc         cmp r12, rbx                            ; ../coreutils-8.31/src/nod.c:668
0x00002174      488d0d2b3500.  lea rcx, [0x000056a6]                   ; " invocation"
0x0000217b      488d1d1f4300.  lea rbx, [0x000064a1]
0x00002182      480f44d9       cmove rbx, rcx
0x00002186      488d35933b00.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x5d20 ; "or available locally via: info '(coreutils) %s%s'\n"
0x0000218d      31ff           xor edi, edi
0x0000218f      ba05000000     mov edx, 5
0x00002194      e8b7f2ffff     call sym.imp.dcgettext
0x00002199      4889d9         mov rcx, rbx                            ; .//coreutils-8.31/lib:104
0x0000219c      4889c6         mov rsi, rax
0x0000219f      4c89e2         mov rdx, r12
0x000021a2      bf01000000     mov edi, 1
0x000021a7      31c0           xor eax, eax
0x000021a9      e852f4ffff     call sym.imp.__printf_chk
0x000021ae      e9f3fcffff     jmp 0x1ea6
0x000021b3      e898f2ffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/src/nod.c:652
0x000021b8      488d0df13a00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; .//coreutils-8.31/lib:104 ; 0x5cb0 ; "https://www.gnu.org/software/coreutils/"
0x000021bf      488d153a3500.  lea rdx, str.GNU_coreutils              ; 0x5700 ; "GNU coreutils"
0x000021c6      4889c6         mov rsi, rax
0x000021c9      bf01000000     mov edi, 1
0x000021ce      31c0           xor eax, eax
0x000021d0      e82bf4ffff     call sym.imp.__printf_chk
0x000021d5      31f6           xor esi, esi                            ; ../coreutils-8.31/src/nod.c:656
0x000021d7      bf05000000     mov edi, 5
0x000021dc      e80ff4ffff     call sym.imp.setlocale
0x000021e1      4885c0         test rax, rax                           ; ../coreutils-8.31/src/nod.c:657
0x000021e4      7418           je 0x21fe
0x000021e6      488d35213500.  lea rsi, [0x0000570e]                   ; "en_"
0x000021ed      ba03000000     mov edx, 3
0x000021f2      4889c7         mov rdi, rax
0x000021f5      e8f6f1ffff     call sym.imp.strncmp
0x000021fa      85c0           test eax, eax
0x000021fc      7543           jne 0x2241
0x000021fe      488d350d3500.  lea rsi, str.Full_documentation___s_s   ; ../coreutils-8.31/src/nod.c:666 ; 0x5712 ; "Full documentation <%s%s>\n"
0x00002205      ba05000000     mov edx, 5
0x0000220a      31ff           xor edi, edi
0x0000220c      4c8d25713400.  lea r12, str.mknod                      ; ../coreutils-8.31/src/nod.c:643 ; 0x5684 ; "mknod"
0x00002213      488d1d8c3400.  lea rbx, [0x000056a6]                   ; ../coreutils-8.31/src/nod.c:668 ; " invocation"
0x0000221a      e831f2ffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/src/nod.c:666
0x0000221f      488d0d5e3400.  lea rcx, str.mknod                      ; .//coreutils-8.31/lib:104 ; 0x5684 ; "mknod"
0x00002226      488d15833a00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x5cb0 ; "https://www.gnu.org/software/coreutils/"
0x0000222d      4889c6         mov rsi, rax
0x00002230      bf01000000     mov edi, 1
0x00002235      31c0           xor eax, eax
0x00002237      e8c4f3ffff     call sym.imp.__printf_chk
0x0000223c      e945ffffff     jmp 0x2186
0x00002241      4c8d253c3400.  lea r12, str.mknod                      ; ../coreutils-8.31/src/nod.c:643 ; 0x5684 ; "mknod"
0x00002248      4c8b2d395e20.  mov r13, qword [obj.stdout]             ; ../coreutils-8.31/src/nod.c:663 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x0000224f      488d35823a00.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x5cd8 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x00002256      31ff           xor edi, edi
0x00002258      ba05000000     mov edx, 5
0x0000225d      e8eef1ffff     call sym.imp.dcgettext
0x00002262      4c89ee         mov rsi, r13
0x00002265      4889c7         mov rdi, rax
0x00002268      e8b3f2ffff     call sym.imp.fputs_unlocked
0x0000226d      e9cffeffff     jmp 0x2141
0x00002272      662e0f1f8400.  nop word cs:[rax + rax]
0x0000227c      0f1f4000       nop dword [rax]
;-- close_stdout_set_file_name:
0x00002280      48893d515e20.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x2080d8:8]=0
0x00002287      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00002288      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00002290      40883d395e20.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x2080d0:1]=0
0x00002297      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00002298      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x000022a0      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x000022a1      53             push rbx
0x000022a2      4883ec08       sub rsp, 8
0x000022a6      488b3ddb5d20.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x000022ad      e8de300000     call sym.close_stream
0x000022b2      85c0           test eax, eax
0x000022b4      7416           je 0x22cc
0x000022b6      e825f1ffff     call sym.imp.__errno_location
0x000022bb      803d0e5e2000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x2080d0:1]=0
0x000022c2      4889c3         mov rbx, rax
0x000022c5      741c           je 0x22e3
0x000022c7      833820         cmp dword [rax], 0x20
0x000022ca      7517           jne 0x22e3
0x000022cc      488b3ded5d20.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080c0:8]=0
0x000022d3      e8b8300000     call sym.close_stream
0x000022d8      85c0           test eax, eax
0x000022da      7546           jne 0x2322
0x000022dc      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x000022e0      5b             pop rbx
0x000022e1      5d             pop rbp
0x000022e2      c3             ret
0x000022e3      488d35a23b00.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x5e8c ; "write error"
0x000022ea      31ff           xor edi, edi
0x000022ec      ba05000000     mov edx, 5
0x000022f1      e85af1ffff     call sym.imp.dcgettext
0x000022f6      488b3ddb5d20.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x2080d8:8]=0
0x000022fd      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00002300      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00002303      7428           je 0x232d
0x00002305      e806210000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x0000230a      8b33           mov esi, dword [rbx]
0x0000230c      488d15853b00.  lea rdx, str.s:__s                      ; 0x5e98 ; "%s: %s"
0x00002313      4889c1         mov rcx, rax
0x00002316      4989e8         mov r8, rbp
0x00002319      31ff           xor edi, edi
0x0000231b      31c0           xor eax, eax
0x0000231d      e8fef2ffff     call sym.imp.error
0x00002322      8b3df05c2000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x208018:4]=1
0x00002328      e8d3f0ffff     call sym.imp._exit
0x0000232d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x0000232f      488d15663b00.  lea rdx, [0x00005e9c]                   ; "%s"
0x00002336      4889c1         mov rcx, rax
0x00002339      31ff           xor edi, edi
0x0000233b      31c0           xor eax, eax
0x0000233d      e8def2ffff     call sym.imp.error
0x00002342      ebde           jmp 0x2322
0x00002344      662e0f1f8400.  nop word cs:[rax + rax]
0x0000234e      6690           nop
;-- mode_compile:
0x00002350      55             push rbp                                ; ../coreutils-8.31/lib/modechange.c:135
0x00002351      53             push rbx
0x00002352      4889fb         mov rbx, rdi
0x00002355      4883ec08       sub rsp, 8
0x00002359      0fbe07         movsx eax, byte [rdi]                   ; ../coreutils-8.31/lib/modechange.c:141
0x0000235c      8d50d0         lea edx, [rax - 0x30]
0x0000235f      80fa07         cmp dl, 7
0x00002362      0f86b0000000   jbe 0x2418
0x00002368      84c0           test al, al                             ; ../coreutils-8.31/lib/modechange.c:169
0x0000236a      4889f9         mov rcx, rdi
0x0000236d      bf01000000     mov edi, 1                              ; ../coreutils-8.31/lib/modechange.c:168
0x00002372      7427           je 0x239b                               ; ../coreutils-8.31/lib/modechange.c:169
0x00002374      0f1f4000       nop dword [rax]
0x00002378      89c2           mov edx, eax                            ; ../coreutils-8.31/lib/modechange.c:170
0x0000237a      83e2ef         and edx, 0xffffffef                     ; 4294967279
0x0000237d      80fa2d         cmp dl, 0x2d
0x00002380      0f94c2         sete dl
0x00002383      3c2b           cmp al, 0x2b
0x00002385      0f94c0         sete al
0x00002388      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/modechange.c:169
0x0000238c      09d0           or eax, edx                             ; ../coreutils-8.31/lib/modechange.c:170
0x0000238e      0fb6c0         movzx eax, al
0x00002391      4801c7         add rdi, rax
0x00002394      0fb601         movzx eax, byte [rcx]                   ; ../coreutils-8.31/lib/modechange.c:169
0x00002397      84c0           test al, al
0x00002399      75dd           jne 0x2378
0x0000239b      ba10000000     mov edx, 0x10                           ; ../coreutils-8.31/lib/xalloc.h:101
0x000023a0      31c9           xor ecx, ecx
0x000023a2      4889d0         mov rax, rdx
0x000023a5      48f7e7         mul rdi
0x000023a8      0f8011030000   jo 0x26bf
0x000023ae      4885c0         test rax, rax
0x000023b1      0f8812030000   js 0x26c9
0x000023b7      4885c9         test rcx, rcx
0x000023ba      0f8509030000   jne 0x26c9
0x000023c0      48c1e704       shl rdi, 4                              ; ../coreutils-8.31/lib/xalloc.h:103
0x000023c4      488d2dd53a00.  lea rbp, [0x00005ea0]                   ; ../coreutils-8.31/lib/modechange.c:259
0x000023cb      e880280000     call sym.xmalloc                        ; ../coreutils-8.31/lib/xalloc.h:103
0x000023d0      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/modechange.c:138
0x000023d2      4531db         xor r11d, r11d                          ; ../coreutils-8.31/lib/modechange.c:179
0x000023d5      440fb60b       movzx r9d, byte [rbx]                   ; ../coreutils-8.31/lib/modechange.c:183
0x000023d9      4180f961       cmp r9b, 0x61
0x000023dd      0f844d020000   je 0x2630                               ; ../coreutils-8.31/lib/modechange.c:181
0x000023e3      7e6b           jle 0x2450
0x000023e5      4180f96f       cmp r9b, 0x6f
0x000023e9      0f8471020000   je 0x2660
0x000023ef      4180f975       cmp r9b, 0x75
0x000023f3      0f8457020000   je 0x2650
0x000023f9      4180f967       cmp r9b, 0x67
0x000023fd      0f843d020000   je 0x2640
0x00002403      4889c7         mov rdi, rax
0x00002406      e8b5efffff     call sym.imp.free
0x0000240b      31c0           xor eax, eax
0x0000240d      4883c408       add rsp, 8
0x00002411      5b             pop rbx                                 ; ../coreutils-8.31/lib/modechange.c:182
0x00002412      5d             pop rbp
0x00002413      c3             ret
0x00002414      0f1f4000       nop dword [rax]
0x00002418      4889fa         mov rdx, rdi
0x0000241b      31ed           xor ebp, ebp
0x0000241d      eb10           jmp 0x242f
0x0000241f      90             nop
0x00002420      0fbe02         movsx eax, byte [rdx]
0x00002423      8d48d0         lea ecx, [rax - 0x30]
0x00002426      80f907         cmp cl, 7
0x00002429      0f8741020000   ja 0x2670
0x0000242f      8d6ce8d0       lea ebp, [rax + rbp*8 - 0x30]
0x00002433      4883c201       add rdx, 1
0x00002437      81fdff0f0000   cmp ebp, 0xfff
0x0000243d      76e1           jbe 0x2420
0x0000243f      4883c408       add rsp, 8
0x00002443      31c0           xor eax, eax
0x00002445      5b             pop rbx                                 ; ../coreutils-8.31/lib/modechange.c:123
0x00002446      5d             pop rbp
0x00002447      c3             ret
0x00002448      0f1f84000000.  nop dword [rax + rax]
0x00002450      4180f92d       cmp r9b, 0x2d
0x00002454      740c           je 0x2462
0x00002456      4180f93d       cmp r9b, 0x3d
0x0000245a      7406           je 0x2462
0x0000245c      4180f92b       cmp r9b, 0x2b
0x00002460      75a1           jne 0x2403
0x00002462      488d7e01       lea rdi, [rsi + 1]
0x00002466      48c1e604       shl rsi, 4
0x0000246a      4801c6         add rsi, rax
0x0000246d      eb65           jmp 0x24d4
0x0000246f      90             nop
0x00002470      80fa6f         cmp dl, 0x6f
0x00002473      4c8d4302       lea r8, [rbx + 2]
0x00002477      0f8493010000   je 0x2610
0x0000247d      80fa75         cmp dl, 0x75
0x00002480      41bac0010000   mov r10d, 0x1c0
0x00002486      0f85d4000000   jne 0x2560
0x0000248c      44880e         mov byte [rsi], r9b
0x0000248f      c6460103       mov byte [rsi + 1], 3
0x00002493      440fb64b02     movzx r9d, byte [rbx + 2]
0x00002498      44895e04       mov dword [rsi + 4], r11d
0x0000249c      4c89c3         mov rbx, r8
0x0000249f      44895608       mov dword [rsi + 8], r10d
0x000024a3      4489d2         mov edx, r10d
0x000024a6      4421da         and edx, r11d
0x000024a9      4585db         test r11d, r11d
0x000024ac      440f45d2       cmovne r10d, edx
0x000024b0      4489ca         mov edx, r9d
0x000024b3      4489560c       mov dword [rsi + 0xc], r10d
0x000024b7      4883c610       add rsi, 0x10
0x000024bb      83e2ef         and edx, 0xffffffef                     ; 4294967279
0x000024be      488d4f01       lea rcx, [rdi + 1]
0x000024c2      80fa2d         cmp dl, 0x2d
0x000024c5      740a           je 0x24d1
0x000024c7      4180f92b       cmp r9b, 0x2b
0x000024cb      0f85ff010000   jne 0x26d0
0x000024d1      4889cf         mov rdi, rcx
0x000024d4      0fbe5301       movsx edx, byte [rbx + 1]
0x000024d8      488d4b01       lea rcx, [rbx + 1]
0x000024dc      80fa67         cmp dl, 0x67
0x000024df      0f843b010000   je 0x2620
0x000024e5      7f89           jg 0x2470
0x000024e7      448d42d0       lea r8d, [rdx - 0x30]
0x000024eb      4180f807       cmp r8b, 7
0x000024ef      776f           ja 0x2560
0x000024f1      4531c0         xor r8d, r8d
0x000024f4      0f1f4000       nop dword [rax]
0x000024f8      468d44c2d0     lea r8d, [rdx + r8*8 - 0x30]
0x000024fd      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/modechange.c:32
0x00002501      4181f8ff0f00.  cmp r8d, 0xfff                          ; ../coreutils-8.31/lib/modechange.c:-32
0x00002508      0f87f5feffff   ja 0x2403                               ; ../coreutils-8.31/lib/modechange.c:-157
0x0000250e      0fbe11         movsx edx, byte [rcx]
0x00002511      448d52d0       lea r10d, [rdx - 0x30]
0x00002515      4180fa07       cmp r10b, 7
0x00002519      76dd           jbe 0x24f8
0x0000251b      4585db         test r11d, r11d
0x0000251e      0f85dffeffff   jne 0x2403
0x00002524      84d2           test dl, dl
0x00002526      7409           je 0x2531                               ; ../coreutils-8.31/lib/modechange.c:-130
0x00002528      80fa2c         cmp dl, 0x2c
0x0000252b      0f85d2feffff   jne 0x2403                              ; ../coreutils-8.31/lib/modechange.c:-127
0x00002531      44880e         mov byte [rsi], r9b
0x00002534      c6460101       mov byte [rsi + 1], 1
0x00002538      4189d1         mov r9d, edx
0x0000253b      c74604ff0f00.  mov dword [rsi + 4], 0xfff              ; [0xfff:4]=0x207ea800
0x00002542      44894608       mov dword [rsi + 8], r8d
0x00002546      4889cb         mov rbx, rcx
0x00002549      41bbff0f0000   mov r11d, 0xfff
0x0000254f      41baff0f0000   mov r10d, 0xfff                         ; ../coreutils-8.31/lib/modechange.c:-115
0x00002555      e956ffffff     jmp 0x24b0
0x0000255a      660f1f440000   nop word [rax + rax]
0x00002560      448d42a8       lea r8d, [rdx - 0x58]
0x00002564      4531d2         xor r10d, r10d
0x00002567      bb01000000     mov ebx, 1
0x0000256c      4180f820       cmp r8b, 0x20                           ; "@"
0x00002570      7737           ja 0x25a9
0x00002572      660f1f440000   nop word [rax + rax]
0x00002578      450fb6c0       movzx r8d, r8b
0x0000257c      4e63448500     movsxd r8, dword [rbp + r8*4]
0x00002581      4901e8         add r8, rbp
0x00002584      41ffe0         jmp r8
0x00002587      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/modechange.c:-118
0x00002590      bb02000000     mov ebx, 2
0x00002595      0f1f00         nop dword [rax]
0x00002598      4883c101       add rcx, 1
0x0000259c      0fb611         movzx edx, byte [rcx]
0x0000259f      448d42a8       lea r8d, [rdx - 0x58]                   ; ../coreutils-8.31/lib/modechange.c:-107
0x000025a3      4180f820       cmp r8b, 0x20                           ; "@"
0x000025a7      76cf           jbe 0x2578
0x000025a9      44880e         mov byte [rsi], r9b
0x000025ac      885e01         mov byte [rsi + 1], bl
0x000025af      4189d1         mov r9d, edx                            ; ../coreutils-8.31/lib/modechange.c:-111
0x000025b2      44895e04       mov dword [rsi + 4], r11d
0x000025b6      44895608       mov dword [rsi + 8], r10d               ; ../coreutils-8.31/lib/modechange.c:-110
0x000025ba      4889cb         mov rbx, rcx
0x000025bd      e9e1feffff     jmp 0x24a3
0x000025c2      660f1f440000   nop word [rax + rax]
0x000025c8      4183ca49       or r10d, 0x49
0x000025cc      ebca           jmp 0x2598
0x000025ce      6690           nop
0x000025d0      4180ca92       or r10b, 0x92
0x000025d4      ebc2           jmp 0x2598
0x000025d6      662e0f1f8400.  nop word cs:[rax + rax]
0x000025e0      4181ca000200.  or r10d, 0x200
0x000025e7      ebaf           jmp 0x2598
0x000025e9      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/modechange.c:-140
0x000025f0      4181ca000c00.  or r10d, 0xc00
0x000025f7      eb9f           jmp 0x2598
0x000025f9      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/modechange.c:-203
0x00002600      4181ca240100.  or r10d, 0x124
0x00002607      eb8f           jmp 0x2598
0x00002609      0f1f80000000.  nop dword [rax]
0x00002610      41ba07000000   mov r10d, 7
0x00002616      e971feffff     jmp 0x248c                              ; ../coreutils-8.31/lib/modechange.c:-197
0x0000261b      0f1f440000     nop dword [rax + rax]
0x00002620      4c8d4302       lea r8, [rbx + 2]
0x00002624      41ba38000000   mov r10d, 0x38                          ; '8'
0x0000262a      e95dfeffff     jmp 0x248c
0x0000262f      90             nop                                     ; ../coreutils-8.31/lib/modechange.c:-230
0x00002630      41bbff0f0000   mov r11d, 0xfff
0x00002636      4883c301       add rbx, 1
0x0000263a      e996fdffff     jmp 0x23d5                              ; ../coreutils-8.31/lib/modechange.c:-224
0x0000263f      90             nop
0x00002640      4181cb380400.  or r11d, 0x438
0x00002647      ebed           jmp 0x2636                              ; ../coreutils-8.31/lib/modechange.c:-272
0x00002649      0f1f80000000.  nop dword [rax]
0x00002650      4181cbc00900.  or r11d, 0x9c0
0x00002657      ebdd           jmp 0x2636
0x00002659      0f1f80000000.  nop dword [rax]
0x00002660      4181cb070200.  or r11d, 0x207
0x00002667      ebcd           jmp 0x2636
0x00002669      0f1f80000000.  nop dword [rax]
0x00002670      84c0           test al, al                             ; ../coreutils-8.31/lib/modechange.c:-267
0x00002672      0f85c7fdffff   jne 0x243f
0x00002678      4829da         sub rdx, rbx
0x0000267b      89eb           mov ebx, ebp
0x0000267d      b8ff0f0000     mov eax, 0xfff
0x00002682      81e3000c0000   and ebx, 0xc00
0x00002688      bf20000000     mov edi, 0x20                           ; ../coreutils-8.31/lib/xalloc.h:-284 ; "@"
0x0000268d      81cbff030000   or ebx, 0x3ff
0x00002693      4883fa05       cmp rdx, 5
0x00002697      0f4dd8         cmovge ebx, eax
0x0000269a      e8b1250000     call sym.xmalloc
0x0000269f      ba3d010000     mov edx, 0x13d
0x000026a4      c74004ff0f00.  mov dword [rax + 4], 0xfff              ; [0xfff:4]=0x207ea800
0x000026ab      896808         mov dword [rax + 8], ebp
0x000026ae      668910         mov word [rax], dx
0x000026b1      89580c         mov dword [rax + 0xc], ebx              ; ../coreutils-8.31/lib/modechange.c:-199
0x000026b4      c6401100       mov byte [rax + 0x11], 0
0x000026b8      4883c408       add rsp, 8
0x000026bc      5b             pop rbx
0x000026bd      5d             pop rbp
0x000026be      c3             ret
0x000026bf      b901000000     mov ecx, 1
0x000026c4      e9e5fcffff     jmp 0x23ae
0x000026c9      e8d2270000     call sym.xalloc_die
0x000026ce      6690           nop
0x000026d0      4180f92c       cmp r9b, 0x2c
0x000026d4      750c           jne 0x26e2
0x000026d6      4883c301       add rbx, 1
0x000026da      4889fe         mov rsi, rdi
0x000026dd      e9f0fcffff     jmp 0x23d2
0x000026e2      4584c9         test r9b, r9b
0x000026e5      0f8518fdffff   jne 0x2403
0x000026eb      48c1e704       shl rdi, 4
0x000026ef      c644380100     mov byte [rax + rdi + 1], 0
0x000026f4      e914fdffff     jmp 0x240d
0x000026f9      0f1f80000000.  nop dword [rax]
;-- mode_create_from_ref:
0x00002700      53             push rbx
0x00002701      4889fe         mov rsi, rdi                            ; ../coreutils-8.31/lib/modechange.c:-401
0x00002704      bf01000000     mov edi, 1                              ; ../coreutils-8.31/lib/modechange.c:-398
0x00002709      4881eca00000.  sub rsp, 0xa0
0x00002710      4889e2         mov rdx, rsp
0x00002713      64488b042528.  mov rax, qword fs:[0x28]
0x0000271c      488984249800.  mov qword [rsp + 0x98], rax
0x00002724      31c0           xor eax, eax
0x00002726      e865eeffff     call sym.imp.__xstat
0x0000272b      85c0           test eax, eax
0x0000272d      7551           jne 0x2780
0x0000272f      8b5c2418       mov ebx, dword [rsp + 0x18]
0x00002733      bf20000000     mov edi, 0x20                           ; "@"
0x00002738      e813250000     call sym.xmalloc
0x0000273d      ba3d010000     mov edx, 0x13d
0x00002742      c74004ff0f00.  mov dword [rax + 4], 0xfff              ; [0xfff:4]=0x207ea800
0x00002749      c7400cff0f00.  mov dword [rax + 0xc], 0xfff            ; [0xfff:4]=0x207ea800
0x00002750      668910         mov word [rax], dx
0x00002753      895808         mov dword [rax + 8], ebx
0x00002756      c6401100       mov byte [rax + 0x11], 0
0x0000275a      488b8c249800.  mov rcx, qword [rsp + 0x98]             ; ../coreutils-8.31/lib/modechange.c:-175
0x00002762      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000276b      7517           jne 0x2784
0x0000276d      4881c4a00000.  add rsp, 0xa0
0x00002774      5b             pop rbx
0x00002775      c3             ret
0x00002776      662e0f1f8400.  nop word cs:[rax + rax]
0x00002780      31c0           xor eax, eax
0x00002782      ebd6           jmp 0x275a
0x00002784      e8f7ecffff     call sym.imp.__stack_chk_fail
0x00002789      0f1f80000000.  nop dword [rax]
;-- mode_adjust:
0x00002790      440fb65101     movzx r10d, byte [rcx + 1]
0x00002795      89f8           mov eax, edi
0x00002797      25ff0f0000     and eax, 0xfff                          ; ../coreutils-8.31/lib/modechange.c:-115
0x0000279c      4584d2         test r10b, r10b
0x0000279f      0f844b010000   je 0x28f0
0x000027a5      4080fe01       cmp sil, 1
0x000027a9      4154           push r12
0x000027ab      55             push rbp                                ; ../coreutils-8.31/lib/modechange.c:-164
0x000027ac      53             push rbx
0x000027ad      19db           sbb ebx, ebx
0x000027af      400fb6ee       movzx ebp, sil                          ; ../coreutils-8.31/lib/modechange.c:-166
0x000027b3      f7d3           not ebx
0x000027b5      4531db         xor r11d, r11d                          ; ../coreutils-8.31/lib/modechange.c:-164
0x000027b8      81e3000c0000   and ebx, 0xc00                          ; ../coreutils-8.31/lib/modechange.c:-165
0x000027be      eb3a           jmp 0x27fa
0x000027c0      4489cf         mov edi, r9d
0x000027c3      09d7           or edi, edx
0x000027c5      f7d7           not edi
0x000027c7      21fe           and esi, edi
0x000027c9      4180fc2d       cmp r12b, 0x2d
0x000027cd      0f840d010000   je 0x28e0                               ; ../coreutils-8.31/lib/modechange.c:-151
0x000027d3      4180fc3d       cmp r12b, 0x3d
0x000027d7      0f84ae000000   je 0x288b                               ; ../coreutils-8.31/lib/modechange.c:-150
0x000027dd      4180fc2b       cmp r12b, 0x2b
0x000027e1      7505           jne 0x27e8
0x000027e3      4109f3         or r11d, esi
0x000027e6      09f0           or eax, esi
0x000027e8      4883c110       add rcx, 0x10
0x000027ec      440fb65101     movzx r10d, byte [rcx + 1]
0x000027f1      4584d2         test r10b, r10b
0x000027f4      0f84b2000000   je 0x28ac
0x000027fa      448b490c       mov r9d, dword [rcx + 0xc]
0x000027fe      8b7904         mov edi, dword [rcx + 4]
0x00002801      8b7108         mov esi, dword [rcx + 8]
0x00002804      41f7d1         not r9d
0x00002807      4121d9         and r9d, ebx
0x0000280a      4180fa02       cmp r10b, 2
0x0000280e      0f84ac000000   je 0x28c0
0x00002814      4180fa03       cmp r10b, 3
0x00002818      753e           jne 0x2858
0x0000281a      21c6           and esi, eax
0x0000281c      4189f2         mov r10d, esi
0x0000281f      4181e2240100.  and r10d, 0x124
0x00002826      4183fa01       cmp r10d, 1
0x0000282a      4519d2         sbb r10d, r10d
0x0000282d      41f7d2         not r10d
0x00002830      4181e2240100.  and r10d, 0x124
0x00002837      4589d4         mov r12d, r10d
0x0000283a      4180cc92       or r12b, 0x92
0x0000283e      40f6c692       test sil, 0x92
0x00002842      450f45d4       cmovne r10d, r12d
0x00002846      4589d4         mov r12d, r10d
0x00002849      4183cc49       or r12d, 0x49
0x0000284d      40f6c649       test sil, 0x49                          ; ../coreutils-8.31/lib/modechange.c:-168
0x00002851      450f45d4       cmovne r10d, r12d
0x00002855      4409d6         or esi, r10d
0x00002858      4589ca         mov r10d, r9d
0x0000285b      85ff           test edi, edi
0x0000285d      440fb621       movzx r12d, byte [rcx]                  ; ../coreutils-8.31/lib/modechange.c:-105
0x00002861      41f7d2         not r10d
0x00002864      0f8456ffffff   je 0x27c0
0x0000286a      4121fa         and r10d, edi
0x0000286d      4421d6         and esi, r10d
0x00002870      4180fc2d       cmp r12b, 0x2d
0x00002874      746a           je 0x28e0                               ; ../coreutils-8.31/lib/modechange.c:-139
0x00002876      4180fc3d       cmp r12b, 0x3d
0x0000287a      0f855dffffff   jne 0x27dd
0x00002880      f7d7           not edi
0x00002882      4109f9         or r9d, edi
0x00002885      4589ca         mov r10d, r9d
0x00002888      41f7d2         not r10d
0x0000288b      4181e2ff0f00.  and r10d, 0xfff
0x00002892      4883c110       add rcx, 0x10
0x00002896      4421c8         and eax, r9d
0x00002899      4509d3         or r11d, r10d
0x0000289c      440fb65101     movzx r10d, byte [rcx + 1]
0x000028a1      09f0           or eax, esi                             ; ../coreutils-8.31/lib/modechange.c:-170
0x000028a3      4584d2         test r10b, r10b
0x000028a6      0f854effffff   jne 0x27fa                              ; ../coreutils-8.31/lib/modechange.c:-231
0x000028ac      4d85c0         test r8, r8
0x000028af      7403           je 0x28b4
0x000028b1      458918         mov dword [r8], r11d
0x000028b4      5b             pop rbx
0x000028b5      5d             pop rbp
0x000028b6      415c           pop r12
0x000028b8      c3             ret
0x000028b9      0f1f80000000.  nop dword [rax]
0x000028c0      4189c4         mov r12d, eax
0x000028c3      4189f2         mov r10d, esi
0x000028c6      4183e449       and r12d, 0x49
0x000028ca      4183ca49       or r10d, 0x49
0x000028ce      4109ec         or r12d, ebp
0x000028d1      410f45f2       cmovne esi, r10d
0x000028d5      eb81           jmp 0x2858
0x000028d7      660f1f840000.  nop word [rax + rax]
0x000028e0      4109f3         or r11d, esi
0x000028e3      f7d6           not esi
0x000028e5      21f0           and eax, esi
0x000028e7      e9fcfeffff     jmp 0x27e8
0x000028ec      0f1f4000       nop dword [rax]
0x000028f0      4531db         xor r11d, r11d
0x000028f3      4d85c0         test r8, r8
0x000028f6      7403           je 0x28fb
0x000028f8      458918         mov dword [r8], r11d
0x000028fb      f3c3           ret
0x000028fd      0f1f00         nop dword [rax]
;-- set_program_name:
0x00002900      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00002903      53             push rbx
0x00002904      7477           je 0x297d                               ; ../coreutils-8.31/lib/progname.c:51
0x00002906      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x0000290b      4889fb         mov rbx, rdi
0x0000290e      e8adebffff     call sym.imp.strrchr
0x00002913      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00002916      7455           je 0x296d
0x00002918      4c8d4001       lea r8, [rax + 1]
0x0000291c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x0000291f      4829da         sub rdx, rbx
0x00002922      4883fa06       cmp rdx, 6
0x00002926      7e45           jle 0x296d
0x00002928      488d70fa       lea rsi, [rax - 6]
0x0000292c      488d3d2d3600.  lea rdi, str..libs                      ; 0x5f60 ; "/.libs/"
0x00002933      b907000000     mov ecx, 7
0x00002938      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000293a      0f97c2         seta dl
0x0000293d      80da00         sbb dl, 0
0x00002940      84d2           test dl, dl
0x00002942      7529           jne 0x296d
0x00002944      488d3d1d3600.  lea rdi, [0x00005f68]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x0000294b      b903000000     mov ecx, 3
0x00002950      4c89c6         mov rsi, r8
0x00002953      4c89c3         mov rbx, r8
0x00002956      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002958      0f97c2         seta dl
0x0000295b      80da00         sbb dl, 0
0x0000295e      84d2           test dl, dl
0x00002960      750b           jne 0x296d
0x00002962      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00002966      48891d135720.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x208080:8]=0
0x0000296d      48891d6c5720.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x2080e0:8]=0
0x00002974      48891d255720.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x2080a0:8]=0
0x0000297b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x0000297c      c3             ret
0x0000297d      488b0d3c5720.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080c0:8]=0
0x00002984      488d3d9d3500.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x5f28 ; "A NULL argv[0] was passed through an exec system call.\n"
0x0000298b      ba37000000     mov edx, 0x37                           ; '7'
0x00002990      be01000000     mov esi, 1
0x00002995      e8c6ecffff     call sym.imp.fwrite
0x0000299a      e831eaffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x0000299f      90             nop
;-- gettext_quote.part.1:
0x000029a0      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x000029a1      53             push rbx
0x000029a2      4889fd         mov rbp, rdi
0x000029a5      89f3           mov ebx, esi
0x000029a7      4883ec08       sub rsp, 8
0x000029ab      e8c02a0000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x000029b0      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x000029b3      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000029b6      80fa55         cmp dl, 0x55
0x000029b9      7475           je 0x2a30
0x000029bb      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x000029be      7420           je 0x29e0
0x000029c0      488d05b43500.  lea rax, str.l______l                   ; 0x5f7b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000029c7      488d15af3500.  lea rdx, [0x00005f7d]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000029ce      83fb09         cmp ebx, 9
0x000029d1      480f45c2       cmovne rax, rdx
0x000029d5      4883c408       add rsp, 8
0x000029d9      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x000029da      5d             pop rbp
0x000029db      c3             ret
0x000029dc      0f1f4000       nop dword [rax]
0x000029e0      0fb65001       movzx edx, byte [rax + 1]
0x000029e4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000029e7      80fa42         cmp dl, 0x42
0x000029ea      75d4           jne 0x29c0
0x000029ec      80780231       cmp byte [rax + 2], 0x31
0x000029f0      75ce           jne 0x29c0
0x000029f2      80780338       cmp byte [rax + 3], 0x38
0x000029f6      75c8           jne 0x29c0
0x000029f8      80780430       cmp byte [rax + 4], 0x30
0x000029fc      75c2           jne 0x29c0
0x000029fe      80780533       cmp byte [rax + 5], 0x33
0x00002a02      75bc           jne 0x29c0
0x00002a04      80780630       cmp byte [rax + 6], 0x30
0x00002a08      75b6           jne 0x29c0
0x00002a0a      80780700       cmp byte [rax + 7], 0
0x00002a0e      75b0           jne 0x29c0
0x00002a10      807d0060       cmp byte [rbp], 0x60
0x00002a14      488d05593500.  lea rax, [0x00005f74]
0x00002a1b      488d15563500.  lea rdx, [0x00005f78]
0x00002a22      480f45c2       cmovne rax, rdx
0x00002a26      4883c408       add rsp, 8
0x00002a2a      5b             pop rbx
0x00002a2b      5d             pop rbp
0x00002a2c      c3             ret
0x00002a2d      0f1f00         nop dword [rax]
0x00002a30      0fb65001       movzx edx, byte [rax + 1]
0x00002a34      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002a37      80fa54         cmp dl, 0x54
0x00002a3a      7584           jne 0x29c0
0x00002a3c      0fb65002       movzx edx, byte [rax + 2]
0x00002a40      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002a43      80fa46         cmp dl, 0x46
0x00002a46      0f8574ffffff   jne 0x29c0
0x00002a4c      8078032d       cmp byte [rax + 3], 0x2d
0x00002a50      0f856affffff   jne 0x29c0
0x00002a56      80780438       cmp byte [rax + 4], 0x38
0x00002a5a      0f8560ffffff   jne 0x29c0
0x00002a60      80780500       cmp byte [rax + 5], 0
0x00002a64      0f8556ffffff   jne 0x29c0
0x00002a6a      807d0060       cmp byte [rbp], 0x60
0x00002a6e      488d05f73400.  lea rax, [0x00005f6c]                   ; "\u2018"
0x00002a75      488d15f43400.  lea rdx, [0x00005f70]                   ; "\u2019"
0x00002a7c      480f45c2       cmovne rax, rdx
0x00002a80      4883c408       add rsp, 8
0x00002a84      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00002a85      5d             pop rbp
0x00002a86      c3             ret
0x00002a87      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00002a90      4157           push r15
0x00002a92      4156           push r14
0x00002a94      4589c7         mov r15d, r8d
0x00002a97      4155           push r13
0x00002a99      4154           push r12
0x00002a9b      4989fe         mov r14, rdi
0x00002a9e      55             push rbp
0x00002a9f      53             push rbx
0x00002aa0      4489cb         mov ebx, r9d
0x00002aa3      4989f5         mov r13, rsi
0x00002aa6      4889cd         mov rbp, rcx
0x00002aa9      83e302         and ebx, 2
0x00002aac      4881ecb80000.  sub rsp, 0xb8
0x00002ab3      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x00002abb      4889542410     mov qword [rsp + 0x10], rdx
0x00002ac0      4489442408     mov dword [rsp + 8], r8d
0x00002ac5      44894c2478     mov dword [rsp + 0x78], r9d
0x00002aca      4889442420     mov qword [rsp + 0x20], rax
0x00002acf      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00002ad7      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x00002adc      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00002ae4      4889442460     mov qword [rsp + 0x60], rax
0x00002ae9      64488b042528.  mov rax, qword fs:[0x28]
0x00002af2      48898424a800.  mov qword [rsp + 0xa8], rax
0x00002afa      31c0           xor eax, eax
0x00002afc      e85fe9ffff     call sym.imp.__ctype_get_mb_cur_max
0x00002b01      4183ff0a       cmp r15d, 0xa
0x00002b05      4889442458     mov qword [rsp + 0x58], rax
0x00002b0a      0f87af110000   ja 0x3cbf
0x00002b10      488d0dc93400.  lea rcx, [0x00005fe0]
0x00002b17      4489fa         mov edx, r15d
0x00002b1a      48630491       movsxd rax, dword [rcx + rdx*4]
0x00002b1e      4801c8         add rax, rcx
0x00002b21      ffe0           jmp rax
0x00002b23      c644240e01     mov byte [rsp + 0xe], 1
0x00002b28      c644247c00     mov byte [rsp + 0x7c], 0
0x00002b2d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00002b30      48c744245000.  mov qword [rsp + 0x50], 0
0x00002b39      c644240f01     mov byte [rsp + 0xf], 1
0x00002b3e      c644240d00     mov byte [rsp + 0xd], 0
0x00002b43      488d05333400.  lea rax, [0x00005f7d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00002b4a      48c744241801.  mov qword [rsp + 0x18], 1
0x00002b53      4531ff         xor r15d, r15d
0x00002b56      c74424080200.  mov dword [rsp + 8], 2
0x00002b5e      4889442448     mov qword [rsp + 0x48], rax
0x00002b63      4531db         xor r11d, r11d
0x00002b66      4889e8         mov rax, rbp
0x00002b69      4589e0         mov r8d, r12d
0x00002b6c      4c89dd         mov rbp, r11
0x00002b6f      4989c3         mov r11, rax
0x00002b72      660f1f440000   nop word [rax + rax]
0x00002b78      4939eb         cmp r11, rbp
0x00002b7b      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x00002b7f      4983fbff       cmp r11, 0xffffffffffffffff
0x00002b83      750d           jne 0x2b92
0x00002b85      488b442410     mov rax, qword [rsp + 0x10]
0x00002b8a      803c2800       cmp byte [rax + rbp], 0
0x00002b8e      410f95c4       setne r12b
0x00002b92      4584e4         test r12b, r12b
0x00002b95      0f8455060000   je 0x31f0
0x00002b9b      837c240802     cmp dword [rsp + 8], 2
0x00002ba0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002ba5      4c8d0c2f       lea r9, [rdi + rbp]
0x00002ba9      0f95c0         setne al
0x00002bac      2244240d       and al, byte [rsp + 0xd]
0x00002bb0      4189c2         mov r10d, eax
0x00002bb3      0f84a7000000   je 0x2c60
0x00002bb9      488b442418     mov rax, qword [rsp + 0x18]
0x00002bbe      4885c0         test rax, rax
0x00002bc1      0f8429040000   je 0x2ff0
0x00002bc7      4983fbff       cmp r11, 0xffffffffffffffff
0x00002bcb      488d5c0500     lea rbx, [rbp + rax]
0x00002bd0      752e           jne 0x2c00
0x00002bd2      4883f801       cmp rax, 1
0x00002bd6      7628           jbe 0x2c00
0x00002bd8      4488442438     mov byte [rsp + 0x38], r8b
0x00002bdd      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00002be2      4c894c2428     mov qword [rsp + 0x28], r9
0x00002be7      e884e8ffff     call sym.imp.strlen
0x00002bec      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00002bf2      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00002bf8      4989c3         mov r11, rax
0x00002bfb      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00002c00      4c39db         cmp rbx, r11
0x00002c03      4488542428     mov byte [rsp + 0x28], r10b
0x00002c08      0f87b2050000   ja 0x31c0
0x00002c0e      488b542418     mov rdx, qword [rsp + 0x18]
0x00002c13      488b742448     mov rsi, qword [rsp + 0x48]
0x00002c18      4c89cf         mov rdi, r9
0x00002c1b      4c895c2440     mov qword [rsp + 0x40], r11
0x00002c20      4488442438     mov byte [rsp + 0x38], r8b
0x00002c25      4c894c2430     mov qword [rsp + 0x30], r9
0x00002c2a      e8e1e8ffff     call sym.imp.memcmp
0x00002c2f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00002c31      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00002c36      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00002c3c      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00002c41      0f8579050000   jne 0x31c0
0x00002c47      807c240f00     cmp byte [rsp + 0xf], 0
0x00002c4c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00002c52      0f857d0f0000   jne 0x3bd5
0x00002c58      0f1f84000000.  nop dword [rax + rax]
0x00002c60      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00002c64      80fb7e         cmp bl, 0x7e
0x00002c67      0f871b030000   ja 0x2f88
0x00002c6d      488d0d983300.  lea rcx, [0x0000600c]
0x00002c74      0fb6d3         movzx edx, bl
0x00002c77      48630491       movsxd rax, dword [rcx + rdx*4]
0x00002c7b      4801c8         add rax, rcx
0x00002c7e      ffe0           jmp rax
0x00002c80      4531d2         xor r10d, r10d
0x00002c83      4983fb01       cmp r11, 1
0x00002c87      0f95c0         setne al
0x00002c8a      4983fbff       cmp r11, 0xffffffffffffffff
0x00002c8e      750c           jne 0x2c9c
0x00002c90      488b442410     mov rax, qword [rsp + 0x10]
0x00002c95      80780100       cmp byte [rax + 1], 0
0x00002c99      0f95c0         setne al
0x00002c9c      837c240802     cmp dword [rsp + 8], 2
0x00002ca1      0f94c2         sete dl
0x00002ca4      84c0           test al, al
0x00002ca6      0f844c020000   je 0x2ef8
0x00002cac      4531e4         xor r12d, r12d
0x00002caf      31c0           xor eax, eax
0x00002cb1      0f1f80000000.  nop dword [rax]
0x00002cb8      807c240d01     cmp byte [rsp + 0xd], 1
0x00002cbd      0f850f010000   jne 0x2dd2
0x00002cc3      84d2           test dl, dl
0x00002cc5      0f8507010000   jne 0x2dd2
0x00002ccb      488b742420     mov rsi, qword [rsp + 0x20]
0x00002cd0      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00002cd3      7414           je 0x2ce9
0x00002cd5      89da           mov edx, ebx
0x00002cd7      c0ea05         shr dl, 5
0x00002cda      0fb6d2         movzx edx, dl
0x00002cdd      8b1496         mov edx, dword [rsi + rdx*4]
0x00002ce0      0fa3da         bt edx, ebx
0x00002ce3      0f824a010000   jb 0x2e33
0x00002ce9      4584d2         test r10b, r10b
0x00002cec      0f8541010000   jne 0x2e33
0x00002cf2      83f001         xor eax, 1
0x00002cf5      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00002cf9      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x00002cfc      84c0           test al, al
0x00002cfe      7420           je 0x2d20                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00002d00      4d39fd         cmp r13, r15
0x00002d03      7605           jbe 0x2d0a
0x00002d05      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00002d0a      498d4701       lea rax, [r15 + 1]
0x00002d0e      4939c5         cmp r13, rax
0x00002d11      7606           jbe 0x2d19
0x00002d13      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00002d19      4983c702       add r15, 2
0x00002d1d      4531c0         xor r8d, r8d
0x00002d20      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00002d23      7304           jae 0x2d29                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00002d25      43881c3e       mov byte [r14 + r15], bl
0x00002d29      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x00002d2e      4983c701       add r15, 1
0x00002d32      b800000000     mov eax, 0
0x00002d37      4584e4         test r12b, r12b
0x00002d3a      0f44f8         cmove edi, eax
0x00002d3d      40887c240e     mov byte [rsp + 0xe], dil
0x00002d42      e931feffff     jmp 0x2b78
0x00002d47      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00002d50      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00002d53      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00002d57      83f802         cmp eax, 2
0x00002d5a      0f84b8050000   je 0x3318
0x00002d60      83f805         cmp eax, 5
0x00002d63      0f846f050000   je 0x32d8
0x00002d69      83f802         cmp eax, 2
0x00002d6c      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00002d71      0f94c2         sete dl
0x00002d74      4531e4         xor r12d, r12d
0x00002d77      31c0           xor eax, eax
0x00002d79      e93affffff     jmp 0x2cb8
0x00002d7e      6690           nop
0x00002d80      4531d2         xor r10d, r10d
0x00002d83      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00002d88      0f8402050000   je 0x3290
0x00002d8e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00002d93      31d2           xor edx, edx
0x00002d95      31c0           xor eax, eax
0x00002d97      bb27000000     mov ebx, 0x27                           ; '''
0x00002d9c      e917ffffff     jmp 0x2cb8
0x00002da1      0f1f80000000.  nop dword [rax]
0x00002da8      ba09000000     mov edx, 9
0x00002dad      bb74000000     mov ebx, 0x74                           ; 't'
0x00002db2      837c240802     cmp dword [rsp + 8], 2
0x00002db7      0f94c0         sete al
0x00002dba      2244240f       and al, byte [rsp + 0xf]
0x00002dbe      0f854a010000   jne 0x2f0e
0x00002dc4      807c240d00     cmp byte [rsp + 0xd], 0
0x00002dc9      7565           jne 0x2e30
0x00002dcb      89d3           mov ebx, edx
0x00002dcd      4531e4         xor r12d, r12d
0x00002dd0      31c0           xor eax, eax
0x00002dd2      807c240f00     cmp byte [rsp + 0xf], 0
0x00002dd7      0f85eefeffff   jne 0x2ccb
0x00002ddd      e907ffffff     jmp 0x2ce9                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00002de2      660f1f440000   nop word [rax + rax]
0x00002de8      ba08000000     mov edx, 8
0x00002ded      bb62000000     mov ebx, 0x62                           ; 'b'
0x00002df2      ebd0           jmp 0x2dc4
0x00002df4      0f1f4000       nop dword [rax]
0x00002df8      837c240802     cmp dword [rsp + 8], 2
0x00002dfd      0f84cd030000   je 0x31d0
0x00002e03      807c240d00     cmp byte [rsp + 0xd], 0
0x00002e08      0f8412020000   je 0x3020
0x00002e0e      807c240f00     cmp byte [rsp + 0xf], 0
0x00002e13      0f8407020000   je 0x3020
0x00002e19      48837c241800   cmp qword [rsp + 0x18], 0
0x00002e1f      0f85b6030000   jne 0x31db
0x00002e25      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00002e2a      660f1f440000   nop word [rax + rax]
0x00002e30      4531e4         xor r12d, r12d
0x00002e33      837c240802     cmp dword [rsp + 8], 2
0x00002e38      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x00002e3b      807c240f00     cmp byte [rsp + 0xf], 0
0x00002e40      89d0           mov eax, edx
0x00002e42      0f8550080000   jne 0x3698
0x00002e48      4489c0         mov eax, r8d
0x00002e4b      83f001         xor eax, 1
0x00002e4e      20d0           and al, dl
0x00002e50      742f           je 0x2e81
0x00002e52      4d39fd         cmp r13, r15
0x00002e55      7605           jbe 0x2e5c
0x00002e57      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00002e5c      498d5701       lea rdx, [r15 + 1]
0x00002e60      4939d5         cmp r13, rdx
0x00002e63      7606           jbe 0x2e6b
0x00002e65      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00002e6b      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x00002e6f      4939d5         cmp r13, rdx
0x00002e72      7606           jbe 0x2e7a
0x00002e74      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00002e7a      4983c703       add r15, 3
0x00002e7e      4189c0         mov r8d, eax
0x00002e81      4d39fd         cmp r13, r15
0x00002e84      7605           jbe 0x2e8b
0x00002e86      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00002e8b      4983c701       add r15, 1
0x00002e8f      4883c501       add rbp, 1
0x00002e93      e988feffff     jmp 0x2d20
0x00002e98      0f1f84000000.  nop dword [rax + rax]
0x00002ea0      807c240d00     cmp byte [rsp + 0xd], 0
0x00002ea5      0f85c8010000   jne 0x3073
0x00002eab      31d2           xor edx, edx
0x00002ead      f644247801     test byte [rsp + 0x78], 1
0x00002eb2      0f8413ffffff   je 0x2dcb
0x00002eb8      4883c501       add rbp, 1
0x00002ebc      e9b7fcffff     jmp 0x2b78
0x00002ec1      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00002ec8      837c240802     cmp dword [rsp + 8], 2
0x00002ecd      0f94c2         sete dl
0x00002ed0      31c0           xor eax, eax
0x00002ed2      e9e1fdffff     jmp 0x2cb8
0x00002ed7      660f1f840000.  nop word [rax + rax]
0x00002ee0      ba07000000     mov edx, 7
0x00002ee5      bb61000000     mov ebx, 0x61                           ; 'a'
0x00002eea      e9d5feffff     jmp 0x2dc4
0x00002eef      90             nop
0x00002ef0      837c240802     cmp dword [rsp + 8], 2
0x00002ef5      0f94c2         sete dl
0x00002ef8      4885ed         test rbp, rbp
0x00002efb      0f85abfdffff   jne 0x2cac
0x00002f01      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00002f06      20d0           and al, dl
0x00002f08      0f84aafdffff   je 0x2cb8
0x00002f0e      4c89dd         mov rbp, r11
0x00002f11      c74424080200.  mov dword [rsp + 8], 2
0x00002f19      e9fb060000     jmp 0x3619
0x00002f1e      6690           nop
0x00002f20      837c240802     cmp dword [rsp + 8], 2
0x00002f25      0f94c2         sete dl
0x00002f28      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x00002f2b      ebd4           jmp 0x2f01
0x00002f2d      0f1f00         nop dword [rax]
0x00002f30      837c240802     cmp dword [rsp + 8], 2
0x00002f35      bb20000000     mov ebx, 0x20                           ; "@"
0x00002f3a      0f94c2         sete dl
0x00002f3d      ebc2           jmp 0x2f01
0x00002f3f      90             nop
0x00002f40      ba0d000000     mov edx, 0xd
0x00002f45      bb72000000     mov ebx, 0x72                           ; 'r'
0x00002f4a      e963feffff     jmp 0x2db2
0x00002f4f      90             nop
0x00002f50      ba0c000000     mov edx, 0xc
0x00002f55      bb66000000     mov ebx, 0x66                           ; 'f'
0x00002f5a      e965feffff     jmp 0x2dc4
0x00002f5f      90             nop
0x00002f60      ba0b000000     mov edx, 0xb
0x00002f65      bb76000000     mov ebx, 0x76                           ; 'v'
0x00002f6a      e955feffff     jmp 0x2dc4
0x00002f6f      90             nop
0x00002f70      ba0a000000     mov edx, 0xa
0x00002f75      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x00002f7a      e933feffff     jmp 0x2db2
0x00002f7f      90             nop
0x00002f80      4531d2         xor r10d, r10d
0x00002f83      0f1f440000     nop dword [rax + rax]
0x00002f88      48837c245801   cmp qword [rsp + 0x58], 1
0x00002f8e      0f85a4030000   jne 0x3338
0x00002f94      4c895c2438     mov qword [rsp + 0x38], r11
0x00002f99      4488442430     mov byte [rsp + 0x30], r8b
0x00002f9e      4488542428     mov byte [rsp + 0x28], r10b
0x00002fa3      e8f8e6ffff     call sym.imp.__ctype_b_loc
0x00002fa8      488b08         mov rcx, qword [rax]
0x00002fab      0fb6d3         movzx edx, bl
0x00002fae      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00002fb4      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x00002fba      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x00002fbf      bf01000000     mov edi, 1
0x00002fc4      0fb70451       movzx eax, word [rcx + rdx*2]
0x00002fc8      66250040       and ax, 0x4000                          ; "^A_\xc3f\x90f.\x0f\x1f\x84"
0x00002fcc      410f95c4       setne r12b
0x00002fd0      0f94c0         sete al
0x00002fd3      2244240d       and al, byte [rsp + 0xd]
0x00002fd7      84c0           test al, al
0x00002fd9      0f8592090000   jne 0x3971
0x00002fdf      837c240802     cmp dword [rsp + 8], 2
0x00002fe4      0f94c2         sete dl
0x00002fe7      e9ccfcffff     jmp 0x2cb8
0x00002fec      0f1f4000       nop dword [rax]
0x00002ff0      410fb619       movzx ebx, byte [r9]
0x00002ff4      80fb7e         cmp bl, 0x7e
0x00002ff7      7787           ja 0x2f80
0x00002ff9      488d0d083200.  lea rcx, [0x00006208]
0x00003000      0fb6d3         movzx edx, bl
0x00003003      48630491       movsxd rax, dword [rcx + rdx*4]
0x00003007      4801c8         add rax, rcx
0x0000300a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x0000300c      0f1f4000       nop dword [rax]
0x00003010      4531d2         xor r10d, r10d
0x00003013      807c240d00     cmp byte [rsp + 0xd], 0
0x00003018      0f85f0fdffff   jne 0x2e0e
0x0000301e      6690           nop
0x00003020      ba5c000000     mov edx, 0x5c                           ; '\'
0x00003025      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000302a      e995fdffff     jmp 0x2dc4
0x0000302f      90             nop
0x00003030      ba0c000000     mov edx, 0xc
0x00003035      4531d2         xor r10d, r10d
0x00003038      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000303d      e982fdffff     jmp 0x2dc4
0x00003042      660f1f440000   nop word [rax + rax]
0x00003048      ba0a000000     mov edx, 0xa
0x0000304d      4531d2         xor r10d, r10d
0x00003050      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00003055      e958fdffff     jmp 0x2db2
0x0000305a      660f1f440000   nop word [rax + rax]
0x00003060      bb61000000     mov ebx, 0x61                           ; 'a'
0x00003065      e9c6fdffff     jmp 0x2e30
0x0000306a      660f1f440000   nop word [rax + rax]
0x00003070      4531d2         xor r10d, r10d
0x00003073      837c240802     cmp dword [rsp + 8], 2
0x00003078      0f94c2         sete dl
0x0000307b      807c240f00     cmp byte [rsp + 0xf], 0
0x00003080      0f85940b0000   jne 0x3c1a
0x00003086      4489c0         mov eax, r8d
0x00003089      4c89f9         mov rcx, r15
0x0000308c      83f001         xor eax, 1
0x0000308f      20d0           and al, dl
0x00003091      742d           je 0x30c0
0x00003093      4d39fd         cmp r13, r15
0x00003096      7605           jbe 0x309d
0x00003098      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000309d      498d4f01       lea rcx, [r15 + 1]
0x000030a1      4939cd         cmp r13, rcx
0x000030a4      7606           jbe 0x30ac
0x000030a6      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000030ac      498d4f02       lea rcx, [r15 + 2]
0x000030b0      4939cd         cmp r13, rcx
0x000030b3      0f8730060000   ja 0x36e9
0x000030b9      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x000030bd      4189c0         mov r8d, eax
0x000030c0      4939cd         cmp r13, rcx
0x000030c3      7605           jbe 0x30ca
0x000030c5      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000030ca      837c240802     cmp dword [rsp + 8], 2
0x000030cf      4c8d7901       lea r15, [rcx + 1]
0x000030d3      0f8400060000   je 0x36d9
0x000030d9      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x000030dd      4c39d8         cmp rax, r11
0x000030e0      7319           jae 0x30fb                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x000030e2      488b442410     mov rax, qword [rsp + 0x10]
0x000030e7      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x000030ec      88442428       mov byte [rsp + 0x28], al
0x000030f0      83e830         sub eax, 0x30
0x000030f3      3c09           cmp al, 9
0x000030f5      0f862e080000   jbe 0x3929
0x000030fb      4489e0         mov eax, r12d
0x000030fe      bb30000000     mov ebx, 0x30                           ; '0'
0x00003103      4531e4         xor r12d, r12d
0x00003106      e9adfbffff     jmp 0x2cb8                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x0000310b      0f1f440000     nop dword [rax + rax]
0x00003110      837c240802     cmp dword [rsp + 8], 2
0x00003115      4589d4         mov r12d, r10d
0x00003118      0f94c2         sete dl
0x0000311b      4531d2         xor r10d, r10d
0x0000311e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003120      e993fbffff     jmp 0x2cb8                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00003125      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003128      837c240802     cmp dword [rsp + 8], 2
0x0000312d      0f94c2         sete dl
0x00003130      4531d2         xor r10d, r10d
0x00003133      e9c0fdffff     jmp 0x2ef8
0x00003138      0f1f84000000.  nop dword [rax + rax]
0x00003140      837c240802     cmp dword [rsp + 8], 2
0x00003145      0f94c2         sete dl
0x00003148      4531d2         xor r10d, r10d
0x0000314b      4531e4         xor r12d, r12d
0x0000314e      e9aefdffff     jmp 0x2f01
0x00003153      0f1f440000     nop dword [rax + rax]
0x00003158      837c240802     cmp dword [rsp + 8], 2
0x0000315d      4589d4         mov r12d, r10d
0x00003160      bb20000000     mov ebx, 0x20                           ; "@"
0x00003165      0f94c2         sete dl
0x00003168      4531d2         xor r10d, r10d
0x0000316b      e991fdffff     jmp 0x2f01
0x00003170      ba0d000000     mov edx, 0xd
0x00003175      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00003178      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000317d      e930fcffff     jmp 0x2db2
0x00003182      660f1f440000   nop word [rax + rax]
0x00003188      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000318d      e99efcffff     jmp 0x2e30
0x00003192      660f1f440000   nop word [rax + rax]
0x00003198      ba09000000     mov edx, 9
0x0000319d      4531d2         xor r10d, r10d
0x000031a0      bb74000000     mov ebx, 0x74                           ; 't'
0x000031a5      e908fcffff     jmp 0x2db2
0x000031aa      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x000031b0      bb62000000     mov ebx, 0x62                           ; 'b'
0x000031b5      e976fcffff     jmp 0x2e30
0x000031ba      660f1f440000   nop word [rax + rax]
0x000031c0      4531d2         xor r10d, r10d
0x000031c3      e998faffff     jmp 0x2c60
0x000031c8      0f1f84000000.  nop dword [rax + rax]
0x000031d0      807c240f00     cmp byte [rsp + 0xf], 0
0x000031d5      0f8565090000   jne 0x3b40
0x000031db      4883c501       add rbp, 1
0x000031df      4489c0         mov eax, r8d
0x000031e2      4531e4         xor r12d, r12d
0x000031e5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000031ea      e90dfbffff     jmp 0x2cfc
0x000031ef      90             nop
0x000031f0      837c240802     cmp dword [rsp + 8], 2
0x000031f5      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000031fa      4589c4         mov r12d, r8d
0x000031fd      4c89dd         mov rbp, r11
0x00003200      0f94c2         sete dl
0x00003203      89d8           mov eax, ebx
0x00003205      4d85ff         test r15, r15
0x00003208      0f94c1         sete cl
0x0000320b      21d0           and eax, edx
0x0000320d      20c8           and al, cl
0x0000320f      0f85610a0000   jne 0x3c76                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00003215      89d8           mov eax, ebx
0x00003217      83f001         xor eax, 1
0x0000321a      20c2           and dl, al
0x0000321c      0f846a090000   je 0x3b8c
0x00003222      807c247c00     cmp byte [rsp + 0x7c], 0
0x00003227      0f845d090000   je 0x3b8a
0x0000322d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00003232      0f85f5090000   jne 0x3c2d
0x00003238      4d85ed         test r13, r13
0x0000323b      0f94c0         sete al
0x0000323e      48837c245000   cmp qword [rsp + 0x50], 0
0x00003244      0f95c2         setne dl
0x00003247      20d0           and al, dl
0x00003249      0f841d0a0000   je 0x3c6c
0x0000324f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003254      488d1d222d00.  lea rbx, [0x00005f7d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000325b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x0000325f      c74424080200.  mov dword [rsp + 8], 2
0x00003267      41bf01000000   mov r15d, 1
0x0000326d      48c744241801.  mov qword [rsp + 0x18], 1
0x00003276      c644240f00     mov byte [rsp + 0xf], 0
0x0000327b      48895c2448     mov qword [rsp + 0x48], rbx
0x00003280      8844247c       mov byte [rsp + 0x7c], al
0x00003284      e9daf8ffff     jmp 0x2b63
0x00003289      0f1f80000000.  nop dword [rax]
0x00003290      807c240f00     cmp byte [rsp + 0xf], 0
0x00003295      0f85a5080000   jne 0x3b40
0x0000329b      4d85ed         test r13, r13
0x0000329e      0f84fc030000   je 0x36a0                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x000032a4      31d2           xor edx, edx
0x000032a6      48837c245000   cmp qword [rsp + 0x50], 0
0x000032ac      0f85ee030000   jne 0x36a0                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x000032b2      4c896c2450     mov qword [rsp + 0x50], r13
0x000032b7      4983c703       add r15, 3
0x000032bb      31c0           xor eax, eax
0x000032bd      448864247c     mov byte [rsp + 0x7c], r12b
0x000032c2      4531c0         xor r8d, r8d
0x000032c5      4989d5         mov r13, rdx
0x000032c8      bb27000000     mov ebx, 0x27                           ; '''
0x000032cd      e917faffff     jmp 0x2ce9
0x000032d2      660f1f440000   nop word [rax + rax]
0x000032d8      f644247804     test byte [rsp + 0x78], 4
0x000032dd      7421           je 0x3300
0x000032df      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x000032e3      4c39d9         cmp rcx, r11
0x000032e6      7318           jae 0x3300
0x000032e8      488b442410     mov rax, qword [rsp + 0x10]
0x000032ed      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x000032f2      0f848a070000   je 0x3a82
0x000032f8      0f1f84000000.  nop dword [rax + rax]
0x00003300      31d2           xor edx, edx
0x00003302      4531e4         xor r12d, r12d
0x00003305      31c0           xor eax, eax
0x00003307      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000330c      e9a7f9ffff     jmp 0x2cb8
0x00003311      0f1f80000000.  nop dword [rax]
0x00003318      807c240f00     cmp byte [rsp + 0xf], 0
0x0000331d      0f851d080000   jne 0x3b40
0x00003323      4531e4         xor r12d, r12d
0x00003326      31c0           xor eax, eax
0x00003328      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000332d      e9b7f9ffff     jmp 0x2ce9                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00003332      660f1f440000   nop word [rax + rax]
0x00003338      488d8424a000.  lea rax, [rsp + 0xa0]
0x00003340      4983fbff       cmp r11, 0xffffffffffffffff
0x00003344      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00003350      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00003355      752d           jne 0x3384
0x00003357      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000335c      4488442440     mov byte [rsp + 0x40], r8b
0x00003361      4488542438     mov byte [rsp + 0x38], r10b
0x00003366      4c894c2430     mov qword [rsp + 0x30], r9
0x0000336b      e800e1ffff     call sym.imp.strlen
0x00003370      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00003376      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x0000337c      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x0000337f      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003384      488d84249c00.  lea rax, [rsp + 0x9c]
0x0000338c      31c9           xor ecx, ecx
0x0000338e      885c247e       mov byte [rsp + 0x7e], bl
0x00003392      448844247d     mov byte [rsp + 0x7d], r8b
0x00003397      4889cb         mov rbx, rcx
0x0000339a      4c898c248800.  mov qword [rsp + 0x88], r9
0x000033a2      4889442438     mov qword [rsp + 0x38], rax
0x000033a7      448854247f     mov byte [rsp + 0x7f], r10b
0x000033ac      4c89bc248000.  mov qword [rsp + 0x80], r15
0x000033b4      4c89742440     mov qword [rsp + 0x40], r14
0x000033b9      4c896c2470     mov qword [rsp + 0x70], r13
0x000033be      4c895c2430     mov qword [rsp + 0x30], r11
0x000033c3      488b442410     mov rax, qword [rsp + 0x10]
0x000033c8      4c8d741d00     lea r14, [rbp + rbx]
0x000033cd      488b542430     mov rdx, qword [rsp + 0x30]
0x000033d2      488b4c2428     mov rcx, qword [rsp + 0x28]
0x000033d7      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000033dc      4e8d2c30       lea r13, [rax + r14]
0x000033e0      4c29f2         sub rdx, r14
0x000033e3      4c89ee         mov rsi, r13
0x000033e6      e8151f0000     call sym.rpl_mbrtowc
0x000033eb      4885c0         test rax, rax
0x000033ee      4989c7         mov r15, rax
0x000033f1      744e           je 0x3441
0x000033f3      4883f8ff       cmp rax, 0xffffffffffffffff
0x000033f7      0f8418060000   je 0x3a15
0x000033fd      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00003401      0f849a050000   je 0x39a1
0x00003407      837c240802     cmp dword [rsp + 8], 2
0x0000340c      0f94c0         sete al
0x0000340f      2244240f       and al, byte [rsp + 0xf]
0x00003413      0f8597010000   jne 0x35b0
0x00003419      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00003420      e86be2ffff     call sym.imp.iswprint
0x00003425      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000342a      85c0           test eax, eax
0x0000342c      b800000000     mov eax, 0
0x00003431      440f44e0       cmove r12d, eax
0x00003435      4c01fb         add rbx, r15
0x00003438      e843e2ffff     call sym.imp.mbsinit
0x0000343d      85c0           test eax, eax
0x0000343f      7482           je 0x33c3
0x00003441      4489e2         mov edx, r12d
0x00003444      4889df         mov rdi, rbx
0x00003447      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000344d      83f201         xor edx, 1
0x00003450      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003455      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000345b      2254240d       and dl, byte [rsp + 0xd]
0x0000345f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003467      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000346c      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003471      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003476      4883ff01       cmp rdi, 1
0x0000347a      0f86fb050000   jbe 0x3a7b
0x00003480      4889f9         mov rcx, rdi
0x00003483      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00003485      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x0000348b      4801e9         add rcx, rbp
0x0000348e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003493      e9b6000000     jmp 0x354e
0x00003498      0f1f84000000.  nop dword [rax + rax]
0x000034a0      837c240802     cmp dword [rsp + 8], 2
0x000034a5      0f94c0         sete al
0x000034a8      4584c9         test r9b, r9b
0x000034ab      0f85af040000   jne 0x3960
0x000034b1      4489c6         mov esi, r8d
0x000034b4      83f601         xor esi, 1
0x000034b7      4020f0         and al, sil
0x000034ba      742f           je 0x34eb                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x000034bc      4d39fd         cmp r13, r15
0x000034bf      7605           jbe 0x34c6
0x000034c1      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000034c6      498d7701       lea rsi, [r15 + 1]
0x000034ca      4939f5         cmp r13, rsi
0x000034cd      7606           jbe 0x34d5                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x000034cf      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000034d5      498d7702       lea rsi, [r15 + 2]
0x000034d9      4939f5         cmp r13, rsi
0x000034dc      7606           jbe 0x34e4
0x000034de      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000034e4      4983c703       add r15, 3
0x000034e8      4189c0         mov r8d, eax
0x000034eb      4d39fd         cmp r13, r15
0x000034ee      7605           jbe 0x34f5
0x000034f0      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000034f5      498d4701       lea rax, [r15 + 1]
0x000034f9      4939c5         cmp r13, rax
0x000034fc      760d           jbe 0x350b
0x000034fe      89d8           mov eax, ebx
0x00003500      c0e806         shr al, 6
0x00003503      83c030         add eax, 0x30
0x00003506      4388443e01     mov byte [r14 + r15 + 1], al
0x0000350b      498d4702       lea rax, [r15 + 2]
0x0000350f      4939c5         cmp r13, rax
0x00003512      7610           jbe 0x3524
0x00003514      89d8           mov eax, ebx
0x00003516      c0e803         shr al, 3
0x00003519      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x0000351c      83c030         add eax, 0x30
0x0000351f      4388443e02     mov byte [r14 + r15 + 2], al
0x00003524      83e307         and ebx, 7
0x00003527      4883c501       add rbp, 1
0x0000352b      4983c703       add r15, 3
0x0000352f      83c330         add ebx, 0x30
0x00003532      4839cd         cmp rbp, rcx
0x00003535      0f83e5f7ffff   jae 0x2d20
0x0000353b      89d6           mov esi, edx
0x0000353d      4d39fd         cmp r13, r15
0x00003540      7604           jbe 0x3546
0x00003542      43881c3e       mov byte [r14 + r15], bl
0x00003546      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000354a      4983c701       add r15, 1
0x0000354e      84d2           test dl, dl
0x00003550      0f854affffff   jne 0x34a0
0x00003556      89f0           mov eax, esi
0x00003558      83f001         xor eax, 1
0x0000355b      4421c0         and eax, r8d
0x0000355e      4584d2         test r10b, r10b
0x00003561      740e           je 0x3571
0x00003563      4d39fd         cmp r13, r15
0x00003566      7605           jbe 0x356d
0x00003568      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000356d      4983c701       add r15, 1
0x00003571      4883c501       add rbp, 1
0x00003575      4839cd         cmp rbp, rcx
0x00003578      0f837ef7ffff   jae 0x2cfc
0x0000357e      84c0           test al, al
0x00003580      0f84f8030000   je 0x397e
0x00003586      4d39fd         cmp r13, r15
0x00003589      7605           jbe 0x3590
0x0000358b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003590      498d4701       lea rax, [r15 + 1]
0x00003594      4939c5         cmp r13, rax
0x00003597      7606           jbe 0x359f
0x00003599      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000359f      4983c702       add r15, 2
0x000035a3      4531d2         xor r10d, r10d
0x000035a6      4531c0         xor r8d, r8d
0x000035a9      eb92           jmp 0x353d
0x000035ab      0f1f440000     nop dword [rax + rax]
0x000035b0      4983ff01       cmp r15, 1
0x000035b4      0f845ffeffff   je 0x3419
0x000035ba      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000035bf      4a8d0c3f       lea rcx, [rdi + r15]
0x000035c3      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x000035c8      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x000035cc      eb0f           jmp 0x35dd
0x000035ce      6690           nop
0x000035d0      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x000035d4      4939d0         cmp r8, rdx
0x000035d7      0f843cfeffff   je 0x3419
0x000035dd      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x000035e0      83e95b         sub ecx, 0x5b
0x000035e3      80f921         cmp cl, 0x21
0x000035e6      77e8           ja 0x35d0                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x000035e8      be01000000     mov esi, 1
0x000035ed      48d3e6         shl rsi, cl
0x000035f0      4889f1         mov rcx, rsi
0x000035f3      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x000035fd      4885f1         test rcx, rsi
0x00003600      74ce           je 0x35d0
0x00003602      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003607      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000360c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00003611      c74424080200.  mov dword [rsp + 8], 2
0x00003619      807c240d00     cmp byte [rsp + 0xd], 0
0x0000361e      7410           je 0x3630
0x00003620      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00003622      b804000000     mov eax, 4
0x00003627      0f44442408     cmove eax, dword [rsp + 8]
0x0000362c      89442408       mov dword [rsp + 8], eax
0x00003630      4883ec08       sub rsp, 8
0x00003634      4889e9         mov rcx, rbp
0x00003637      4c89ee         mov rsi, r13
0x0000363a      ff742468       push qword [rsp + 0x68]
0x0000363e      ff742478       push qword [rsp + 0x78]
0x00003642      4c89f7         mov rdi, r14
0x00003645      6a00           push 0
0x00003647      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x0000364f      448b442428     mov r8d, dword [rsp + 0x28]
0x00003654      488b542430     mov rdx, qword [rsp + 0x30]
0x00003659      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x0000365d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00003662      4883c420       add rsp, 0x20
0x00003666      4989c7         mov r15, rax
0x00003669      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00003671      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000367a      4c89f8         mov rax, r15
0x0000367d      0f8500060000   jne 0x3c83
0x00003683      4881c4b80000.  add rsp, 0xb8
0x0000368a      5b             pop rbx
0x0000368b      5d             pop rbp
0x0000368c      415c           pop r12
0x0000368e      415d           pop r13
0x00003690      415e           pop r14
0x00003692      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00003694      c3             ret
0x00003695      0f1f00         nop dword [rax]
0x00003698      4c89dd         mov rbp, r11
0x0000369b      e979ffffff     jmp 0x3619
0x000036a0      4d39fd         cmp r13, r15
0x000036a3      7605           jbe 0x36aa
0x000036a5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000036aa      498d4701       lea rax, [r15 + 1]
0x000036ae      4939c5         cmp r13, rax
0x000036b1      7606           jbe 0x36b9
0x000036b3      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x000036b9      498d4702       lea rax, [r15 + 2]
0x000036bd      4939c5         cmp r13, rax
0x000036c0      0f86ec050000   jbe 0x3cb2
0x000036c6      4c89ea         mov rdx, r13
0x000036c9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000036cf      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000036d4      e9d9fbffff     jmp 0x32b2
0x000036d9      4489e0         mov eax, r12d
0x000036dc      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x000036e1      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x000036e4      e900f6ffff     jmp 0x2ce9                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x000036e9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000036ef      e9c5f9ffff     jmp 0x30b9
0x000036f4      85db           test ebx, ebx
0x000036f6      0f8527f4ffff   jne 0x2b23
0x000036fc      c644240d01     mov byte [rsp + 0xd], 1
0x00003701      4d85ed         test r13, r13
0x00003704      0f8590050000   jne 0x3c9a
0x0000370a      488d056c2800.  lea rax, [0x00005f7d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003711      48c744245000.  mov qword [rsp + 0x50], 0
0x0000371a      c644240e01     mov byte [rsp + 0xe], 1
0x0000371f      c644247c00     mov byte [rsp + 0x7c], 0
0x00003724      4531e4         xor r12d, r12d
0x00003727      c644240f00     mov byte [rsp + 0xf], 0
0x0000372c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003735      4889442448     mov qword [rsp + 0x48], rax
0x0000373a      41bf01000000   mov r15d, 1
0x00003740      c74424080200.  mov dword [rsp + 8], 2
0x00003748      e916f4ffff     jmp 0x2b63                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x0000374d      0f1f00         nop dword [rax]
0x00003750      85db           test ebx, ebx
0x00003752      0f85f5030000   jne 0x3b4d
0x00003758      4d85ed         test r13, r13
0x0000375b      0f8425020000   je 0x3986
0x00003761      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00003765      c644240e01     mov byte [rsp + 0xe], 1
0x0000376a      4531e4         xor r12d, r12d
0x0000376d      c644247c00     mov byte [rsp + 0x7c], 0
0x00003772      48c744245000.  mov qword [rsp + 0x50], 0
0x0000377b      488d05f92700.  lea rax, str.l______l                   ; 0x5f7b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003782      c644240f00     mov byte [rsp + 0xf], 0
0x00003787      c644240d01     mov byte [rsp + 0xd], 1
0x0000378c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003795      41bf01000000   mov r15d, 1
0x0000379b      4889442448     mov qword [rsp + 0x48], rax
0x000037a0      e9bef3ffff     jmp 0x2b63
0x000037a5      488d05cf2700.  lea rax, str.l______l                   ; 0x5f7b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000037ac      c644240e01     mov byte [rsp + 0xe], 1
0x000037b1      c644247c00     mov byte [rsp + 0x7c], 0
0x000037b6      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x000037b9      48c744245000.  mov qword [rsp + 0x50], 0
0x000037c2      c644240f01     mov byte [rsp + 0xf], 1
0x000037c7      c644240d01     mov byte [rsp + 0xd], 1
0x000037cc      48c744241801.  mov qword [rsp + 0x18], 1
0x000037d5      4531ff         xor r15d, r15d
0x000037d8      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x000037dd      c74424080500.  mov dword [rsp + 8], 5
0x000037e5      e979f3ffff     jmp 0x2b63
0x000037ea      c644240e01     mov byte [rsp + 0xe], 1
0x000037ef      c644247c00     mov byte [rsp + 0x7c], 0
0x000037f4      4531e4         xor r12d, r12d
0x000037f7      48c744245000.  mov qword [rsp + 0x50], 0
0x00003800      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00003805      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00003808      c644240d01     mov byte [rsp + 0xd], 1
0x0000380d      48c744241800.  mov qword [rsp + 0x18], 0
0x00003816      48c744244800.  mov qword [rsp + 0x48], 0
0x0000381f      e93ff3ffff     jmp 0x2b63
0x00003824      837c24080a     cmp dword [rsp + 8], 0xa
0x00003829      7456           je 0x3881
0x0000382b      488d354d2700.  lea rsi, [0x00005f7f]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00003832      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00003834      ba05000000     mov edx, 5
0x00003839      e812dcffff     call sym.imp.dcgettext
0x0000383e      4889c1         mov rcx, rax
0x00003841      4889442468     mov qword [rsp + 0x68], rax
0x00003846      488d05322700.  lea rax, [0x00005f7f]                   ; "`"
0x0000384d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00003850      0f8498030000   je 0x3bee
0x00003856      488d35202700.  lea rsi, [0x00005f7d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000385d      31ff           xor edi, edi
0x0000385f      ba05000000     mov edx, 5
0x00003864      e8e7dbffff     call sym.imp.dcgettext
0x00003869      4889c1         mov rcx, rax
0x0000386c      4889442460     mov qword [rsp + 0x60], rax
0x00003871      488d05052700.  lea rax, [0x00005f7d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003878      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x0000387b      0f8483030000   je 0x3c04
0x00003881      4531ff         xor r15d, r15d
0x00003884      85db           test ebx, ebx
0x00003886      0f84c1010000   je 0x3a4d
0x0000388c      85db           test ebx, ebx
0x0000388e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00003893      0f9544240f     setne byte [rsp + 0xf]
0x00003898      4531e4         xor r12d, r12d
0x0000389b      4889df         mov rdi, rbx
0x0000389e      e8cddbffff     call sym.imp.strlen
0x000038a3      48895c2448     mov qword [rsp + 0x48], rbx
0x000038a8      4889442418     mov qword [rsp + 0x18], rax
0x000038ad      c644240e01     mov byte [rsp + 0xe], 1
0x000038b2      c644247c00     mov byte [rsp + 0x7c], 0
0x000038b7      48c744245000.  mov qword [rsp + 0x50], 0
0x000038c0      c644240d01     mov byte [rsp + 0xd], 1
0x000038c5      e999f2ffff     jmp 0x2b63
0x000038ca      c644240e01     mov byte [rsp + 0xe], 1
0x000038cf      c644247c00     mov byte [rsp + 0x7c], 0
0x000038d4      4531e4         xor r12d, r12d
0x000038d7      48c744245000.  mov qword [rsp + 0x50], 0
0x000038e0      c644240f00     mov byte [rsp + 0xf], 0
0x000038e5      4531ff         xor r15d, r15d
0x000038e8      c644240d00     mov byte [rsp + 0xd], 0
0x000038ed      48c744241800.  mov qword [rsp + 0x18], 0
0x000038f6      48c744244800.  mov qword [rsp + 0x48], 0
0x000038ff      e95ff2ffff     jmp 0x2b63
0x00003904      c644240e01     mov byte [rsp + 0xe], 1
0x00003909      c644247c00     mov byte [rsp + 0x7c], 0
0x0000390e      4531e4         xor r12d, r12d
0x00003911      48c744245000.  mov qword [rsp + 0x50], 0
0x0000391a      c644240f01     mov byte [rsp + 0xf], 1
0x0000391f      c644240d01     mov byte [rsp + 0xd], 1
0x00003924      e91af2ffff     jmp 0x2b43
0x00003929      4d39fd         cmp r13, r15
0x0000392c      7605           jbe 0x3933
0x0000392e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00003933      488d4102       lea rax, [rcx + 2]
0x00003937      4939c5         cmp r13, rax
0x0000393a      7606           jbe 0x3942
0x0000393c      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00003942      4489e0         mov eax, r12d
0x00003945      4c8d7903       lea r15, [rcx + 3]
0x00003949      4531e4         xor r12d, r12d
0x0000394c      bb30000000     mov ebx, 0x30                           ; '0'
0x00003951      e962f3ffff     jmp 0x2cb8
0x00003956      662e0f1f8400.  nop word cs:[rax + rax]
0x00003960      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003965      4c89dd         mov rbp, r11
0x00003968      885c240d       mov byte [rsp + 0xd], bl
0x0000396c      e9a8fcffff     jmp 0x3619
0x00003971      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003976      4531e4         xor r12d, r12d
0x00003979      e902fbffff     jmp 0x3480
0x0000397e      4531d2         xor r10d, r10d
0x00003981      e9b7fbffff     jmp 0x353d
0x00003986      48c744245000.  mov qword [rsp + 0x50], 0
0x0000398f      c644240e01     mov byte [rsp + 0xe], 1
0x00003994      4531e4         xor r12d, r12d
0x00003997      c644247c00     mov byte [rsp + 0x7c], 0
0x0000399c      e9dafdffff     jmp 0x377b
0x000039a1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000039a6      4c89f6         mov rsi, r14
0x000039a9      4c89e9         mov rcx, r13
0x000039ac      4889d8         mov rax, rbx
0x000039af      4889df         mov rdi, rbx
0x000039b2      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000039b8      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000039bd      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x000039c5      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x000039c8      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000039ce      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000039d6      4c8b742440     mov r14, qword [rsp + 0x40]
0x000039db      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000039e0      7326           jae 0x3a08
0x000039e2      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x000039e5      7510           jne 0x39f7
0x000039e7      eb1f           jmp 0x3a08
0x000039e9      0f1f80000000.  nop dword [rax]
0x000039f0      41803c0100     cmp byte [r9 + rax], 0
0x000039f5      740e           je 0x3a05
0x000039f7      4883c001       add rax, 1
0x000039fb      488d540500     lea rdx, [rbp + rax]
0x00003a00      4939d3         cmp r11, rdx
0x00003a03      77eb           ja 0x39f0
0x00003a05      4889c7         mov rdi, rax
0x00003a08      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003a0d      4531e4         xor r12d, r12d
0x00003a10      e961faffff     jmp 0x3476
0x00003a15      4889df         mov rdi, rbx
0x00003a18      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003a1e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003a23      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00003a29      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003a31      4531e4         xor r12d, r12d
0x00003a34      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003a39      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003a3e      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003a43      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003a48      e929faffff     jmp 0x3476
0x00003a4d      488b542468     mov rdx, qword [rsp + 0x68]
0x00003a52      0fb602         movzx eax, byte [rdx]
0x00003a55      84c0           test al, al
0x00003a57      0f842ffeffff   je 0x388c
0x00003a5d      0f1f00         nop dword [rax]
0x00003a60      4d39fd         cmp r13, r15
0x00003a63      7604           jbe 0x3a69
0x00003a65      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00003a69      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x00003a6d      420fb6043a     movzx eax, byte [rdx + r15]
0x00003a72      84c0           test al, al
0x00003a74      75ea           jne 0x3a60
0x00003a76      e911feffff     jmp 0x388c
0x00003a7b      89d0           mov eax, edx
0x00003a7d      e955f5ffff     jmp 0x2fd7
0x00003a82      0fb61c08       movzx ebx, byte [rax + rcx]
0x00003a86      80fb3e         cmp bl, 0x3e
0x00003a89      0f8771f8ffff   ja 0x3300
0x00003a8f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00003a99      480fa3d8       bt rax, rbx
0x00003a9d      0f835df8ffff   jae 0x3300
0x00003aa3      807c240f00     cmp byte [rsp + 0xf], 0
0x00003aa8      0f85e4010000   jne 0x3c92                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x00003aae      4d39fd         cmp r13, r15
0x00003ab1      7605           jbe 0x3ab8
0x00003ab3      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00003ab8      498d4701       lea rax, [r15 + 1]
0x00003abc      4939c5         cmp r13, rax
0x00003abf      7606           jbe 0x3ac7
0x00003ac1      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003ac7      498d4702       lea rax, [r15 + 2]
0x00003acb      4939c5         cmp r13, rax
0x00003ace      7606           jbe 0x3ad6
0x00003ad0      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003ad6      498d4703       lea rax, [r15 + 3]
0x00003ada      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x00003add      7606           jbe 0x3ae5
0x00003adf      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00003ae5      4983c704       add r15, 4
0x00003ae9      31d2           xor edx, edx
0x00003aeb      4531e4         xor r12d, r12d
0x00003aee      31c0           xor eax, eax
0x00003af0      4889cd         mov rbp, rcx
0x00003af3      e9c0f1ffff     jmp 0x2cb8
0x00003af8      85db           test ebx, ebx
0x00003afa      0f8488010000   je 0x3c88
0x00003b00      488d05762400.  lea rax, [0x00005f7d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003b07      c644240e01     mov byte [rsp + 0xe], 1
0x00003b0c      c644247c00     mov byte [rsp + 0x7c], 0
0x00003b11      4531e4         xor r12d, r12d
0x00003b14      48c744245000.  mov qword [rsp + 0x50], 0
0x00003b1d      c644240f01     mov byte [rsp + 0xf], 1
0x00003b22      c644240d00     mov byte [rsp + 0xd], 0
0x00003b27      48c744241801.  mov qword [rsp + 0x18], 1
0x00003b30      4531ff         xor r15d, r15d
0x00003b33      4889442448     mov qword [rsp + 0x48], rax
0x00003b38      e926f0ffff     jmp 0x2b63
0x00003b3d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00003b40      4c89dd         mov rbp, r11
0x00003b43      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003b48      e9ccfaffff     jmp 0x3619
0x00003b4d      488d05272400.  lea rax, str.l______l                   ; 0x5f7b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003b54      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00003b59      c644247c00     mov byte [rsp + 0x7c], 0
0x00003b5e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00003b61      48c744245000.  mov qword [rsp + 0x50], 0
0x00003b6a      c644240f01     mov byte [rsp + 0xf], 1
0x00003b6f      c644240d01     mov byte [rsp + 0xd], 1
0x00003b74      48c744241801.  mov qword [rsp + 0x18], 1
0x00003b7d      4531ff         xor r15d, r15d
0x00003b80      4889442448     mov qword [rsp + 0x48], rax
0x00003b85      e9d9efffff     jmp 0x2b63
0x00003b8a      89d0           mov eax, edx
0x00003b8c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00003b91      4885db         test rbx, rbx
0x00003b94      742c           je 0x3bc2
0x00003b96      84c0           test al, al
0x00003b98      7428           je 0x3bc2
0x00003b9a      0fb60b         movzx ecx, byte [rbx]
0x00003b9d      4889d8         mov rax, rbx
0x00003ba0      84c9           test cl, cl
0x00003ba2      741e           je 0x3bc2
0x00003ba4      4c89fa         mov rdx, r15
0x00003ba7      4c29f8         sub rax, r15
0x00003baa      4939d5         cmp r13, rdx
0x00003bad      7604           jbe 0x3bb3
0x00003baf      41880c16       mov byte [r14 + rdx], cl
0x00003bb3      4883c201       add rdx, 1
0x00003bb7      0fb60c10       movzx ecx, byte [rax + rdx]
0x00003bbb      84c9           test cl, cl
0x00003bbd      75eb           jne 0x3baa
0x00003bbf      4989d7         mov r15, rdx
0x00003bc2      4d39fd         cmp r13, r15
0x00003bc5      0f869efaffff   jbe 0x3669
0x00003bcb      43c6043e00     mov byte [r14 + r15], 0
0x00003bd0      e994faffff     jmp 0x3669
0x00003bd5      837c240802     cmp dword [rsp + 8], 2
0x00003bda      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003bdf      4c89dd         mov rbp, r11
0x00003be2      0f94c0         sete al
0x00003be5      885c240d       mov byte [rsp + 0xd], bl
0x00003be9      e92bfaffff     jmp 0x3619
0x00003bee      8b742408       mov esi, dword [rsp + 8]
0x00003bf2      4889cf         mov rdi, rcx
0x00003bf5      e8a6edffff     call sym.gettext_quote.part.1
0x00003bfa      4889442468     mov qword [rsp + 0x68], rax
0x00003bff      e952fcffff     jmp 0x3856
0x00003c04      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00003c08      4889cf         mov rdi, rcx
0x00003c0b      e890edffff     call sym.gettext_quote.part.1
0x00003c10      4889442460     mov qword [rsp + 0x60], rax
0x00003c15      e967fcffff     jmp 0x3881
0x00003c1a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003c1f      4c89dd         mov rbp, r11
0x00003c22      89d0           mov eax, edx
0x00003c24      885c240d       mov byte [rsp + 0xd], bl
0x00003c28      e9ecf9ffff     jmp 0x3619
0x00003c2d      4883ec08       sub rsp, 8
0x00003c31      41b805000000   mov r8d, 5
0x00003c37      4c89d9         mov rcx, r11
0x00003c3a      ff742468       push qword [rsp + 0x68]
0x00003c3e      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00003c42      4c89f7         mov rdi, r14
0x00003c45      ff742438       push qword [rsp + 0x38]
0x00003c49      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00003c51      488b542430     mov rdx, qword [rsp + 0x30]
0x00003c56      488b742470     mov rsi, qword [rsp + 0x70]
0x00003c5b      e830eeffff     call sym.quotearg_buffer_restyled
0x00003c60      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00003c64      4989c7         mov r15, rax
0x00003c67      e9fdf9ffff     jmp 0x3669
0x00003c6c      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00003c71      e916ffffff     jmp 0x3b8c
0x00003c76      c74424080200.  mov dword [rsp + 8], 2
0x00003c7e      e996f9ffff     jmp 0x3619
0x00003c83      e8f8d7ffff     call sym.imp.__stack_chk_fail
0x00003c88      c644240d00     mov byte [rsp + 0xd], 0
0x00003c8d      e96ffaffff     jmp 0x3701
0x00003c92      4c89dd         mov rbp, r11
0x00003c95      e996f9ffff     jmp 0x3630
0x00003c9a      c644240e01     mov byte [rsp + 0xe], 1
0x00003c9f      31c0           xor eax, eax
0x00003ca1      4531e4         xor r12d, r12d
0x00003ca4      48c744245000.  mov qword [rsp + 0x50], 0
0x00003cad      e9a2f5ffff     jmp 0x3254
0x00003cb2      4c89ea         mov rdx, r13
0x00003cb5      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003cba      e9f3f5ffff     jmp 0x32b2
0x00003cbf      e80cd7ffff     call sym.imp.abort
0x00003cc4      6690           nop
0x00003cc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00003cd0      4157           push r15
0x00003cd2      4156           push r14
0x00003cd4      4c63ff         movsxd r15, edi
0x00003cd7      4155           push r13
0x00003cd9      4154           push r12
0x00003cdb      4989d6         mov r14, rdx
0x00003cde      55             push rbp
0x00003cdf      53             push rbx
0x00003ce0      4889cd         mov rbp, rcx
0x00003ce3      4883ec28       sub rsp, 0x28
0x00003ce7      4889742408     mov qword [rsp + 8], rsi
0x00003cec      e8efd6ffff     call sym.imp.__errno_location
0x00003cf1      4989c5         mov r13, rax
0x00003cf4      8b00           mov eax, dword [rax]
0x00003cf6      4585ff         test r15d, r15d
0x00003cf9      488b1d604320.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x208060:8]=0x208070 obj.slotvec0 ; "p\x80 "
0x00003d00      89442418       mov dword [rsp + 0x18], eax
0x00003d04      0f8867010000   js 0x3e71
0x00003d0a      44393d474320.  cmp dword [obj.nslots], r15d            ; [0x208058:4]=1
0x00003d11      7f62           jg 0x3d75
0x00003d13      4181ffffffff.  cmp r15d, 0x7fffffff
0x00003d1a      0f8456010000   je 0x3e76
0x00003d20      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00003d24      488d05454320.  lea rax, obj.slotvec0                   ; 0x208070
0x00003d2b      4963f4         movsxd rsi, r12d
0x00003d2e      48c1e604       shl rsi, 4
0x00003d32      4839c3         cmp rbx, rax
0x00003d35      0f8415010000   je 0x3e50
0x00003d3b      4889df         mov rdi, rbx
0x00003d3e      e86d0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00003d43      4889c3         mov rbx, rax
0x00003d46      488905134320.  mov qword [obj.slotvec], rax            ; [0x208060:8]=0x208070 obj.slotvec0 ; "p\x80 "
0x00003d4d      48633d044320.  movsxd rdi, dword [obj.nslots]          ; [0x208058:4]=1
0x00003d54      4489e2         mov edx, r12d
0x00003d57      31f6           xor esi, esi
0x00003d59      29fa           sub edx, edi
0x00003d5b      48c1e704       shl rdi, 4
0x00003d5f      4863d2         movsxd rdx, edx
0x00003d62      4801df         add rdi, rbx
0x00003d65      48c1e204       shl rdx, 4
0x00003d69      e892d7ffff     call sym.imp.memset
0x00003d6e      448925e34220.  mov dword [obj.nslots], r12d            ; [0x208058:4]=1
0x00003d75      8b4504         mov eax, dword [rbp + 4]
0x00003d78      49c1e704       shl r15, 4
0x00003d7c      4883ec08       sub rsp, 8
0x00003d80      4c01fb         add rbx, r15
0x00003d83      4c8d7d08       lea r15, [rbp + 8]
0x00003d87      448b4500       mov r8d, dword [rbp]
0x00003d8b      4c8b1b         mov r11, qword [rbx]
0x00003d8e      4c8b6308       mov r12, qword [rbx + 8]
0x00003d92      4c89f1         mov rcx, r14
0x00003d95      83c801         or eax, 1
0x00003d98      89442424       mov dword [rsp + 0x24], eax
0x00003d9c      ff7530         push qword [rbp + 0x30]
0x00003d9f      4189c1         mov r9d, eax
0x00003da2      ff7528         push qword [rbp + 0x28]
0x00003da5      4157           push r15
0x00003da7      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00003daa      488b542428     mov rdx, qword [rsp + 0x28]
0x00003daf      4c89e7         mov rdi, r12
0x00003db2      4c895c2430     mov qword [rsp + 0x30], r11
0x00003db7      e8d4ecffff     call sym.quotearg_buffer_restyled
0x00003dbc      4883c420       add rsp, 0x20
0x00003dc0      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00003dc5      4939c3         cmp r11, rax
0x00003dc8      7767           ja 0x3e31
0x00003dca      488d7001       lea rsi, [rax + 1]
0x00003dce      488d052b4320.  lea rax, obj.slot0                      ; 0x208100
0x00003dd5      4939c4         cmp r12, rax
0x00003dd8      488933         mov qword [rbx], rsi
0x00003ddb      7412           je 0x3def
0x00003ddd      4c89e7         mov rdi, r12
0x00003de0      4889742410     mov qword [rsp + 0x10], rsi
0x00003de5      e8d6d5ffff     call sym.imp.free
0x00003dea      488b742410     mov rsi, qword [rsp + 0x10]
0x00003def      4889f7         mov rdi, rsi
0x00003df2      4889742410     mov qword [rsp + 0x10], rsi
0x00003df7      e8540e0000     call sym.xmalloc
0x00003dfc      4883ec08       sub rsp, 8
0x00003e00      48894308       mov qword [rbx + 8], rax
0x00003e04      448b4500       mov r8d, dword [rbp]
0x00003e08      ff7530         push qword [rbp + 0x30]
0x00003e0b      ff7528         push qword [rbp + 0x28]
0x00003e0e      4c89f1         mov rcx, r14
0x00003e11      4157           push r15
0x00003e13      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00003e18      4889c7         mov rdi, rax
0x00003e1b      488b542428     mov rdx, qword [rsp + 0x28]
0x00003e20      488b742430     mov rsi, qword [rsp + 0x30]
0x00003e25      4989c4         mov r12, rax
0x00003e28      e863ecffff     call sym.quotearg_buffer_restyled
0x00003e2d      4883c420       add rsp, 0x20
0x00003e31      8b442418       mov eax, dword [rsp + 0x18]
0x00003e35      41894500       mov dword [r13], eax
0x00003e39      4883c428       add rsp, 0x28
0x00003e3d      4c89e0         mov rax, r12
0x00003e40      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00003e41      5d             pop rbp
0x00003e42      415c           pop r12
0x00003e44      415d           pop r13
0x00003e46      415e           pop r14
0x00003e48      415f           pop r15
0x00003e4a      c3             ret
0x00003e4b      0f1f440000     nop dword [rax + rax]
0x00003e50      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00003e52      e8590e0000     call sym.xrealloc
0x00003e57      660f6f051142.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x00003e5f      4889c3         mov rbx, rax
0x00003e62      488905f74120.  mov qword [obj.slotvec], rax            ; [0x208060:8]=0x208070 obj.slotvec0 ; "p\x80 "
0x00003e69      0f1100         movups xmmword [rax], xmm0
0x00003e6c      e9dcfeffff     jmp 0x3d4d
0x00003e71      e85ad5ffff     call sym.imp.abort
0x00003e76      e825100000     call sym.xalloc_die
0x00003e7b      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00003e80      4154           push r12
0x00003e82      55             push rbp
0x00003e83      53             push rbx
0x00003e84      4889fb         mov rbx, rdi
0x00003e87      e854d5ffff     call sym.imp.__errno_location
0x00003e8c      448b20         mov r12d, dword [rax]
0x00003e8f      4889c5         mov rbp, rax
0x00003e92      488d05674320.  lea rax, obj.default_quoting_options    ; 0x208200
0x00003e99      4885db         test rbx, rbx
0x00003e9c      be38000000     mov esi, 0x38                           ; '8'
0x00003ea1      480f44d8       cmove rbx, rax
0x00003ea5      4889df         mov rdi, rbx
0x00003ea8      e8a30f0000     call sym.xmemdup
0x00003ead      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00003eb1      5b             pop rbx
0x00003eb2      5d             pop rbp
0x00003eb3      415c           pop r12
0x00003eb5      c3             ret
0x00003eb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00003ec0      488d05394320.  lea rax, obj.default_quoting_options    ; 0x208200
0x00003ec7      4885ff         test rdi, rdi
0x00003eca      480f44f8       cmove rdi, rax
0x00003ece      8b07           mov eax, dword [rdi]
0x00003ed0      c3             ret
0x00003ed1      0f1f440000     nop dword [rax + rax]
0x00003ed6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00003ee0      488d05194320.  lea rax, obj.default_quoting_options    ; 0x208200
0x00003ee7      4885ff         test rdi, rdi
0x00003eea      480f44f8       cmove rdi, rax
0x00003eee      8937           mov dword [rdi], esi
0x00003ef0      c3             ret
0x00003ef1      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00003ef6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00003f00      488d05f94220.  lea rax, obj.default_quoting_options    ; 0x208200
0x00003f07      4885ff         test rdi, rdi
0x00003f0a      89f1           mov ecx, esi
0x00003f0c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00003f10      89f0           mov eax, esi
0x00003f12      83e11f         and ecx, 0x1f
0x00003f15      c0e805         shr al, 5
0x00003f18      0fb6c0         movzx eax, al
0x00003f1b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00003f20      8b37           mov esi, dword [rdi]
0x00003f22      89f0           mov eax, esi
0x00003f24      d3e8           shr eax, cl
0x00003f26      31c2           xor edx, eax
0x00003f28      83e001         and eax, 1
0x00003f2b      83e201         and edx, 1
0x00003f2e      d3e2           shl edx, cl
0x00003f30      31f2           xor edx, esi
0x00003f32      8917           mov dword [rdi], edx
0x00003f34      c3             ret
0x00003f35      90             nop
0x00003f36      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00003f40      488d05b94220.  lea rax, obj.default_quoting_options    ; 0x208200
0x00003f47      4885ff         test rdi, rdi
0x00003f4a      480f44f8       cmove rdi, rax
0x00003f4e      8b4704         mov eax, dword [rdi + 4]
0x00003f51      897704         mov dword [rdi + 4], esi
0x00003f54      c3             ret
0x00003f55      90             nop
0x00003f56      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00003f60      488d05994220.  lea rax, obj.default_quoting_options    ; 0x208200
0x00003f67      4885ff         test rdi, rdi
0x00003f6a      480f44f8       cmove rdi, rax
0x00003f6e      4885f6         test rsi, rsi
0x00003f71      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00003f77      740e           je 0x3f87
0x00003f79      4885d2         test rdx, rdx
0x00003f7c      7409           je 0x3f87
0x00003f7e      48897728       mov qword [rdi + 0x28], rsi
0x00003f82      48895730       mov qword [rdi + 0x30], rdx
0x00003f86      c3             ret
0x00003f87      4883ec08       sub rsp, 8
0x00003f8b      e840d4ffff     call sym.imp.abort
;-- quotearg_buffer:
0x00003f90      4157           push r15
0x00003f92      4156           push r14
0x00003f94      488d05654220.  lea rax, obj.default_quoting_options    ; 0x208200
0x00003f9b      4155           push r13
0x00003f9d      4154           push r12
0x00003f9f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00003fa2      55             push rbp
0x00003fa3      53             push rbx
0x00003fa4      4c89c3         mov rbx, r8
0x00003fa7      4989f6         mov r14, rsi
0x00003faa      4989d7         mov r15, rdx
0x00003fad      4883ec18       sub rsp, 0x18
0x00003fb1      4d85c0         test r8, r8
0x00003fb4      480f44d8       cmove rbx, rax
0x00003fb8      48894c2408     mov qword [rsp + 8], rcx
0x00003fbd      e81ed4ffff     call sym.imp.__errno_location
0x00003fc2      448b20         mov r12d, dword [rax]
0x00003fc5      4889c5         mov rbp, rax
0x00003fc8      488d4308       lea rax, [rbx + 8]
0x00003fcc      4883ec08       sub rsp, 8
0x00003fd0      448b4b04       mov r9d, dword [rbx + 4]
0x00003fd4      ff7330         push qword [rbx + 0x30]
0x00003fd7      448b03         mov r8d, dword [rbx]
0x00003fda      ff7328         push qword [rbx + 0x28]
0x00003fdd      4c89fa         mov rdx, r15
0x00003fe0      50             push rax
0x00003fe1      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00003fe6      4c89f6         mov rsi, r14
0x00003fe9      4c89ef         mov rdi, r13
0x00003fec      e89feaffff     call sym.quotearg_buffer_restyled
0x00003ff1      44896500       mov dword [rbp], r12d
0x00003ff5      4883c438       add rsp, 0x38
0x00003ff9      5b             pop rbx
0x00003ffa      5d             pop rbp
0x00003ffb      415c           pop r12
0x00003ffd      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00003fff      415e           pop r14
0x00004001      415f           pop r15
0x00004003      c3             ret
0x00004004      6690           nop
0x00004006      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00004010      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00004012      4156           push r14
0x00004014      488d05e54120.  lea rax, obj.default_quoting_options    ; 0x208200
0x0000401b      4155           push r13
0x0000401d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x0000401f      4989d4         mov r12, rdx
0x00004022      55             push rbp
0x00004023      53             push rbx
0x00004024      4889cb         mov rbx, rcx
0x00004027      4989fe         mov r14, rdi
0x0000402a      4989f7         mov r15, rsi
0x0000402d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00004031      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00004034      480f44d8       cmove rbx, rax
0x00004038      31ed           xor ebp, ebp
0x0000403a      e8a1d3ffff     call sym.imp.__errno_location
0x0000403f      4d85e4         test r12, r12
0x00004042      4989c5         mov r13, rax
0x00004045      8b00           mov eax, dword [rax]
0x00004047      400f94c5       sete bpl
0x0000404b      0b6b04         or ebp, dword [rbx + 4]
0x0000404e      4c8d5308       lea r10, [rbx + 8]
0x00004052      4883ec08       sub rsp, 8
0x00004056      448b03         mov r8d, dword [rbx]
0x00004059      4c89f9         mov rcx, r15
0x0000405c      89442414       mov dword [rsp + 0x14], eax
0x00004060      ff7330         push qword [rbx + 0x30]
0x00004063      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00004066      ff7328         push qword [rbx + 0x28]
0x00004069      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x0000406b      31f6           xor esi, esi
0x0000406d      4189e9         mov r9d, ebp
0x00004070      31ff           xor edi, edi
0x00004072      4c89542440     mov qword [rsp + 0x40], r10
0x00004077      e814eaffff     call sym.quotearg_buffer_restyled
0x0000407c      488d7001       lea rsi, [rax + 1]
0x00004080      4889442448     mov qword [rsp + 0x48], rax
0x00004085      4883c420       add rsp, 0x20
0x00004089      4889f7         mov rdi, rsi
0x0000408c      4889742418     mov qword [rsp + 0x18], rsi
0x00004091      e8ba0b0000     call sym.xmalloc
0x00004096      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x0000409b      4883ec08       sub rsp, 8
0x0000409f      ff7330         push qword [rbx + 0x30]
0x000040a2      ff7328         push qword [rbx + 0x28]
0x000040a5      4c8b542438     mov r10, qword [rsp + 0x38]
0x000040aa      4189e9         mov r9d, ebp
0x000040ad      448b03         mov r8d, dword [rbx]
0x000040b0      4c89f9         mov rcx, r15
0x000040b3      4c89f2         mov rdx, r14
0x000040b6      4889c7         mov rdi, rax
0x000040b9      4152           push r10
0x000040bb      488b742438     mov rsi, qword [rsp + 0x38]
0x000040c0      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x000040c5      8b44242c       mov eax, dword [rsp + 0x2c]
0x000040c9      4883c420       add rsp, 0x20
0x000040cd      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x000040d0      41894500       mov dword [r13], eax
0x000040d4      7409           je 0x40df
0x000040d6      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x000040db      4d891c24       mov qword [r12], r11
0x000040df      488b442410     mov rax, qword [rsp + 0x10]
0x000040e4      4883c438       add rsp, 0x38
0x000040e8      5b             pop rbx
0x000040e9      5d             pop rbp
0x000040ea      415c           pop r12
0x000040ec      415d           pop r13
0x000040ee      415e           pop r14
0x000040f0      415f           pop r15
0x000040f2      c3             ret
0x000040f3      0f1f00         nop dword [rax]
0x000040f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00004100      4889d1         mov rcx, rdx
0x00004103      31d2           xor edx, edx
0x00004105      e906ffffff     jmp sym.quotearg_alloc_mem
0x0000410a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00004110      8b05423f2000   mov eax, dword [obj.nslots]             ; [0x208058:4]=1
0x00004116      4154           push r12
0x00004118      4c8b25413f20.  mov r12, qword [obj.slotvec]            ; [0x208060:8]=0x208070 obj.slotvec0 ; "p\x80 "
0x0000411f      55             push rbp
0x00004120      53             push rbx
0x00004121      83f801         cmp eax, 1
0x00004124      7e2b           jle 0x4151                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00004126      83e802         sub eax, 2
0x00004129      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x0000412e      48c1e004       shl rax, 4
0x00004132      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00004137      660f1f840000.  nop word [rax + rax]
0x00004140      488b3b         mov rdi, qword [rbx]
0x00004143      4883c310       add rbx, 0x10
0x00004147      e874d2ffff     call sym.imp.free
0x0000414c      4839eb         cmp rbx, rbp
0x0000414f      75ef           jne 0x4140
0x00004151      498b7c2408     mov rdi, qword [r12 + 8]
0x00004156      488d1da33f20.  lea rbx, obj.slot0                      ; 0x208100
0x0000415d      4839df         cmp rdi, rbx
0x00004160      7417           je 0x4179
0x00004162      e859d2ffff     call sym.imp.free
0x00004167      48c705fe3e20.  mov qword [obj.slotvec0], 0x100         ; [0x208070:8]=256
0x00004172      48891dff3e20.  mov qword [0x00208078], rbx             ; [0x208078:8]=0x208100 obj.slot0
0x00004179      488d1df03e20.  lea rbx, obj.slotvec0                   ; 0x208070
0x00004180      4939dc         cmp r12, rbx
0x00004183      740f           je 0x4194
0x00004185      4c89e7         mov rdi, r12
0x00004188      e833d2ffff     call sym.imp.free
0x0000418d      48891dcc3e20.  mov qword [obj.slotvec], rbx            ; [0x208060:8]=0x208070 obj.slotvec0 ; "p\x80 "
0x00004194      5b             pop rbx
0x00004195      c705b93e2000.  mov dword [obj.nslots], 1               ; [0x208058:4]=1
0x0000419f      5d             pop rbp
0x000041a0      415c           pop r12
0x000041a2      c3             ret
0x000041a3      0f1f00         nop dword [rax]
0x000041a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x000041b0      488d0d494020.  lea rcx, obj.default_quoting_options    ; 0x208200
0x000041b7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000041be      e90dfbffff     jmp sym.quotearg_n_options
0x000041c3      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x000041c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x000041d0      488d0d294020.  lea rcx, obj.default_quoting_options    ; 0x208200
0x000041d7      e9f4faffff     jmp sym.quotearg_n_options
0x000041dc      0f1f4000       nop dword [rax]
;-- quotearg:
0x000041e0      488d0d194020.  lea rcx, obj.default_quoting_options    ; 0x208200
0x000041e7      4889fe         mov rsi, rdi
0x000041ea      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000041f1      31ff           xor edi, edi
0x000041f3      e9d8faffff     jmp sym.quotearg_n_options
0x000041f8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00004200      488d0df93f20.  lea rcx, obj.default_quoting_options    ; 0x208200
0x00004207      4889f2         mov rdx, rsi
0x0000420a      4889fe         mov rsi, rdi
0x0000420d      31ff           xor edi, edi
0x0000420f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00004214      6690           nop
0x00004216      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00004220      4883ec48       sub rsp, 0x48
0x00004224      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00004227      64488b142528.  mov rdx, qword fs:[0x28]
0x00004230      4889542438     mov qword [rsp + 0x38], rdx
0x00004235      31d2           xor edx, edx
0x00004237      83fe0a         cmp esi, 0xa
0x0000423a      7468           je 0x42a4
0x0000423c      893424         mov dword [rsp], esi
0x0000423f      4889e1         mov rcx, rsp
0x00004242      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004249      4889c6         mov rsi, rax
0x0000424c      48c744240400.  mov qword [rsp + 4], 0
0x00004255      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000425e      48c744241400.  mov qword [rsp + 0x14], 0
0x00004267      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004270      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00004279      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004282      c74424340000.  mov dword [rsp + 0x34], 0
0x0000428a      e841faffff     call sym.quotearg_n_options
0x0000428f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004294      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000429d      750a           jne 0x42a9                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x0000429f      4883c448       add rsp, 0x48
0x000042a3      c3             ret
0x000042a4      e827d1ffff     call sym.imp.abort
0x000042a9      e8d2d1ffff     call sym.imp.__stack_chk_fail
0x000042ae      6690           nop
;-- quotearg_n_style_mem:
0x000042b0      4883ec48       sub rsp, 0x48
0x000042b4      4889d0         mov rax, rdx
0x000042b7      4889ca         mov rdx, rcx
0x000042ba      64488b0c2528.  mov rcx, qword fs:[0x28]
0x000042c3      48894c2438     mov qword [rsp + 0x38], rcx
0x000042c8      31c9           xor ecx, ecx
0x000042ca      83fe0a         cmp esi, 0xa
0x000042cd      7461           je 0x4330
0x000042cf      893424         mov dword [rsp], esi
0x000042d2      4889e1         mov rcx, rsp
0x000042d5      4889c6         mov rsi, rax
0x000042d8      48c744240400.  mov qword [rsp + 4], 0
0x000042e1      48c744240c00.  mov qword [rsp + 0xc], 0
0x000042ea      48c744241400.  mov qword [rsp + 0x14], 0
0x000042f3      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000042fc      48c744242400.  mov qword [rsp + 0x24], 0
0x00004305      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000430e      c74424340000.  mov dword [rsp + 0x34], 0
0x00004316      e8b5f9ffff     call sym.quotearg_n_options
0x0000431b      488b542438     mov rdx, qword [rsp + 0x38]
0x00004320      644833142528.  xor rdx, qword fs:[0x28]
0x00004329      750a           jne 0x4335
0x0000432b      4883c448       add rsp, 0x48
0x0000432f      c3             ret
0x00004330      e89bd0ffff     call sym.imp.abort
0x00004335      e846d1ffff     call sym.imp.__stack_chk_fail
0x0000433a      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00004340      4889f2         mov rdx, rsi
0x00004343      89fe           mov esi, edi
0x00004345      31ff           xor edi, edi
0x00004347      e9d4feffff     jmp sym.quotearg_n_style
0x0000434c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00004350      4889d1         mov rcx, rdx
0x00004353      4889f2         mov rdx, rsi
0x00004356      89fe           mov esi, edi
0x00004358      31ff           xor edi, edi
0x0000435a      e951ffffff     jmp sym.quotearg_n_style_mem
0x0000435f      90             nop
;-- quotearg_char_mem:
0x00004360      4883ec48       sub rsp, 0x48
0x00004364      89d1           mov ecx, edx
0x00004366      64488b042528.  mov rax, qword fs:[0x28]
0x0000436f      4889442438     mov qword [rsp + 0x38], rax
0x00004374      31c0           xor eax, eax
0x00004376      488b05b33e20.  mov rax, qword [0x00208230]             ; [0x208230:8]=0
0x0000437d      4989e0         mov r8, rsp
0x00004380      83e11f         and ecx, 0x1f
0x00004383      660f6f05753e.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x0000438b      4889442430     mov qword [rsp + 0x30], rax
0x00004390      89d0           mov eax, edx
0x00004392      0f290424       movaps xmmword [rsp], xmm0
0x00004396      c0e805         shr al, 5
0x00004399      0fb6c0         movzx eax, al
0x0000439c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x000043a1      660f6f05673e.  movdqa xmm0, xmmword [0x00208210]
0x000043a9      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x000043ae      660f6f056a3e.  movdqa xmm0, xmmword [0x00208220]
0x000043b6      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x000043bb      418b11         mov edx, dword [r9]
0x000043be      89d0           mov eax, edx
0x000043c0      d3e8           shr eax, cl
0x000043c2      f7d0           not eax
0x000043c4      83e001         and eax, 1
0x000043c7      d3e0           shl eax, cl
0x000043c9      4c89c1         mov rcx, r8
0x000043cc      31d0           xor eax, edx
0x000043ce      4889f2         mov rdx, rsi
0x000043d1      4889fe         mov rsi, rdi
0x000043d4      418901         mov dword [r9], eax
0x000043d7      31ff           xor edi, edi
0x000043d9      e8f2f8ffff     call sym.quotearg_n_options
0x000043de      488b742438     mov rsi, qword [rsp + 0x38]
0x000043e3      644833342528.  xor rsi, qword fs:[0x28]
0x000043ec      7505           jne 0x43f3
0x000043ee      4883c448       add rsp, 0x48
0x000043f2      c3             ret
0x000043f3      e888d0ffff     call sym.imp.__stack_chk_fail
0x000043f8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00004400      400fbed6       movsx edx, sil
0x00004404      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000440b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00004410      ba3a000000     mov edx, 0x3a                           ; ':'
0x00004415      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000441c      e93fffffff     jmp sym.quotearg_char_mem
0x00004421      0f1f440000     nop dword [rax + rax]
0x00004426      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00004430      ba3a000000     mov edx, 0x3a                           ; ':'
0x00004435      e926ffffff     jmp sym.quotearg_char_mem
0x0000443a      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00004440      4883ec48       sub rsp, 0x48
0x00004444      4889d0         mov rax, rdx
0x00004447      64488b142528.  mov rdx, qword fs:[0x28]
0x00004450      4889542438     mov qword [rsp + 0x38], rdx
0x00004455      31d2           xor edx, edx
0x00004457      83fe0a         cmp esi, 0xa
0x0000445a      7468           je 0x44c4
0x0000445c      893424         mov dword [rsp], esi
0x0000445f      4889e1         mov rcx, rsp
0x00004462      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004469      4889c6         mov rsi, rax
0x0000446c      48c744240400.  mov qword [rsp + 4], 0
0x00004475      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x0000447e      48c744241400.  mov qword [rsp + 0x14], 0
0x00004487      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004490      48c744242400.  mov qword [rsp + 0x24], 0
0x00004499      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000044a2      c74424340000.  mov dword [rsp + 0x34], 0
0x000044aa      e821f8ffff     call sym.quotearg_n_options
0x000044af      488b4c2438     mov rcx, qword [rsp + 0x38]
0x000044b4      6448330c2528.  xor rcx, qword fs:[0x28]
0x000044bd      750a           jne 0x44c9
0x000044bf      4883c448       add rsp, 0x48
0x000044c3      c3             ret
0x000044c4      e807cfffff     call sym.imp.abort
0x000044c9      e8b2cfffff     call sym.imp.__stack_chk_fail
0x000044ce      6690           nop
;-- quotearg_n_custom_mem:
0x000044d0      4883ec48       sub rsp, 0x48
0x000044d4      4989c9         mov r9, rcx
0x000044d7      488b0d523d20.  mov rcx, qword [0x00208230]             ; [0x208230:8]=0
0x000044de      660f6f051a3d.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x000044e6      64488b042528.  mov rax, qword fs:[0x28]
0x000044ef      4889442438     mov qword [rsp + 0x38], rax
0x000044f4      31c0           xor eax, eax
0x000044f6      0f290424       movaps xmmword [rsp], xmm0
0x000044fa      4885f6         test rsi, rsi
0x000044fd      48894c2430     mov qword [rsp + 0x30], rcx
0x00004502      c704240a0000.  mov dword [rsp], 0xa
0x00004509      660f6f05ff3c.  movdqa xmm0, xmmword [0x00208210]
0x00004511      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00004516      660f6f05023d.  movdqa xmm0, xmmword [0x00208220]
0x0000451e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00004523      7432           je 0x4557
0x00004525      4885d2         test rdx, rdx
0x00004528      742d           je 0x4557
0x0000452a      4889742428     mov qword [rsp + 0x28], rsi
0x0000452f      4889542430     mov qword [rsp + 0x30], rdx
0x00004534      4889e1         mov rcx, rsp
0x00004537      4c89c2         mov rdx, r8
0x0000453a      4c89ce         mov rsi, r9
0x0000453d      e88ef7ffff     call sym.quotearg_n_options
0x00004542      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00004547      6448333c2528.  xor rdi, qword fs:[0x28]
0x00004550      750a           jne 0x455c
0x00004552      4883c448       add rsp, 0x48
0x00004556      c3             ret
0x00004557      e874ceffff     call sym.imp.abort
0x0000455c      e81fcfffff     call sym.imp.__stack_chk_fail
0x00004561      0f1f440000     nop dword [rax + rax]
0x00004566      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00004570      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00004577      e954ffffff     jmp sym.quotearg_n_custom_mem
0x0000457c      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00004580      4889d1         mov rcx, rdx
0x00004583      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0000458a      4889f2         mov rdx, rsi
0x0000458d      4889fe         mov rsi, rdi
0x00004590      31ff           xor edi, edi
0x00004592      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00004597      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x000045a0      4989c8         mov r8, rcx
0x000045a3      4889d1         mov rcx, rdx
0x000045a6      4889f2         mov rdx, rsi
0x000045a9      4889fe         mov rsi, rdi
0x000045ac      31ff           xor edi, edi
0x000045ae      e91dffffff     jmp sym.quotearg_n_custom_mem
0x000045b3      0f1f00         nop dword [rax]
0x000045b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x000045c0      488d0d593a20.  lea rcx, obj.quote_quoting_options      ; 0x208020
0x000045c7      e904f7ffff     jmp sym.quotearg_n_options
0x000045cc      0f1f4000       nop dword [rax]
;-- quote_mem:
0x000045d0      488d0d493a20.  lea rcx, obj.quote_quoting_options      ; 0x208020
0x000045d7      4889f2         mov rdx, rsi
0x000045da      4889fe         mov rsi, rdi
0x000045dd      31ff           xor edi, edi
0x000045df      e9ecf6ffff     jmp sym.quotearg_n_options
0x000045e4      6690           nop
0x000045e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x000045f0      488d0d293a20.  lea rcx, obj.quote_quoting_options      ; 0x208020
0x000045f7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000045fe      e9cdf6ffff     jmp sym.quotearg_n_options
0x00004603      0f1f00         nop dword [rax]
0x00004606      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00004610      488d0d093a20.  lea rcx, obj.quote_quoting_options      ; 0x208020
0x00004617      4889fe         mov rsi, rdi
0x0000461a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004621      31ff           xor edi, edi
0x00004623      e9a8f6ffff     jmp sym.quotearg_n_options
0x00004628      0f1f84000000.  nop dword [rax + rax]
;-- version_etc_arn:
0x00004630      4157           push r15
0x00004632      4156           push r14
0x00004634      4155           push r13
0x00004636      4154           push r12
0x00004638      4d89cc         mov r12, r9
0x0000463b      55             push rbp
0x0000463c      53             push rbx
0x0000463d      4889fd         mov rbp, rdi
0x00004640      4c89c3         mov rbx, r8
0x00004643      4883ec28       sub rsp, 0x28
0x00004647      4885f6         test rsi, rsi
0x0000464a      0f8418010000   je 0x4768
0x00004650      4989d0         mov r8, rdx
0x00004653      488d15ee1d00.  lea rdx, [0x00006448]                   ; "%s (%s) %s\n"
0x0000465a      4989c9         mov r9, rcx
0x0000465d      31c0           xor eax, eax
0x0000465f      4889f1         mov rcx, rsi
0x00004662      be01000000     mov esi, 1
0x00004667      e804d0ffff     call sym.imp.__fprintf_chk
0x0000466c      488d35e81d00.  lea rsi, [0x0000645b]                   ; "(C)"
0x00004673      31ff           xor edi, edi
0x00004675      ba05000000     mov edx, 5
0x0000467a      e8d1cdffff     call sym.imp.dcgettext
0x0000467f      488d15fa2000.  lea rdx, obj.version_etc_copyright      ; 0x6780 ; "Copyright %s %d Free Software Foundation, Inc."
0x00004686      4889c1         mov rcx, rax
0x00004689      41b8e3070000   mov r8d, 0x7e3
0x0000468f      be01000000     mov esi, 1
0x00004694      4889ef         mov rdi, rbp
0x00004697      31c0           xor eax, eax
0x00004699      e8d2cfffff     call sym.imp.__fprintf_chk
0x0000469e      488d35431e00.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x64e8 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x000046a5      31ff           xor edi, edi
0x000046a7      ba05000000     mov edx, 5
0x000046ac      e89fcdffff     call sym.imp.dcgettext
0x000046b1      4889ee         mov rsi, rbp
0x000046b4      4889c7         mov rdi, rax
0x000046b7      e864ceffff     call sym.imp.fputs_unlocked
0x000046bc      4983fc09       cmp r12, 9
0x000046c0      0f873a030000   ja 0x4a00
0x000046c6      488d15772000.  lea rdx, [0x00006744]
0x000046cd      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x000046d1      4801d0         add rax, rdx
0x000046d4      ffe0           jmp rax
0x000046d6      662e0f1f8400.  nop word cs:[rax + rax]
0x000046e0      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000046e4      488b4310       mov rax, qword [rbx + 0x10]
0x000046e8      488d35691f00.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x6658 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x000046ef      4c8b4308       mov r8, qword [rbx + 8]
0x000046f3      ba05000000     mov edx, 5
0x000046f8      31ff           xor edi, edi
0x000046fa      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000046fe      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004702      4c894c2410     mov qword [rsp + 0x10], r9
0x00004707      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000470b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000470f      48890424       mov qword [rsp], rax
0x00004713      4c89442408     mov qword [rsp + 8], r8
0x00004718      488b1b         mov rbx, qword [rbx]
0x0000471b      e830cdffff     call sym.imp.dcgettext
0x00004720      4883ec08       sub rsp, 8
0x00004724      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00004729      4889c2         mov rdx, rax
0x0000472c      4889d9         mov rcx, rbx
0x0000472f      be01000000     mov esi, 1
0x00004734      4889ef         mov rdi, rbp
0x00004737      31c0           xor eax, eax
0x00004739      4151           push r9
0x0000473b      4155           push r13
0x0000473d      4154           push r12
0x0000473f      4157           push r15
0x00004741      4156           push r14
0x00004743      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00004748      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000474d      e81ecfffff     call sym.imp.__fprintf_chk
0x00004752      4883c430       add rsp, 0x30
0x00004756      4883c428       add rsp, 0x28
0x0000475a      5b             pop rbx
0x0000475b      5d             pop rbp
0x0000475c      415c           pop r12
0x0000475e      415d           pop r13
0x00004760      415e           pop r14
0x00004762      415f           pop r15
0x00004764      c3             ret
0x00004765      0f1f00         nop dword [rax]
0x00004768      4989c8         mov r8, rcx
0x0000476b      4889d1         mov rcx, rdx
0x0000476e      488d15df1c00.  lea rdx, str.s__s                       ; 0x6454 ; "%s %s\n"
0x00004775      be01000000     mov esi, 1
0x0000477a      31c0           xor eax, eax
0x0000477c      e8efceffff     call sym.imp.__fprintf_chk
0x00004781      e9e6feffff     jmp 0x466c
0x00004786      662e0f1f8400.  nop word cs:[rax + rax]
0x00004790      4c8b5340       mov r10, qword [rbx + 0x40]
0x00004794      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004798      488d35e91e00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x6688 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x0000479f      488b4310       mov rax, qword [rbx + 0x10]
0x000047a3      4c8b4308       mov r8, qword [rbx + 8]
0x000047a7      ba05000000     mov edx, 5
0x000047ac      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000047b0      4c8b6328       mov r12, qword [rbx + 0x28]
0x000047b4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000047b8      4c8b7318       mov r14, qword [rbx + 0x18]
0x000047bc      488b1b         mov rbx, qword [rbx]
0x000047bf      4c89542418     mov qword [rsp + 0x18], r10
0x000047c4      4c894c2410     mov qword [rsp + 0x10], r9
0x000047c9      48890424       mov qword [rsp], rax
0x000047cd      4c89442408     mov qword [rsp + 8], r8
0x000047d2      31ff           xor edi, edi
0x000047d4      e877ccffff     call sym.imp.dcgettext
0x000047d9      4c8b542418     mov r10, qword [rsp + 0x18]
0x000047de      4152           push r10
0x000047e0      e93fffffff     jmp 0x4724
0x000047e5      0f1f00         nop dword [rax]
0x000047e8      488b1b         mov rbx, qword [rbx]
0x000047eb      488d356d1c00.  lea rsi, str.Written_by__s.             ; 0x645f ; "Written by %s.\n"
0x000047f2      ba05000000     mov edx, 5
0x000047f7      31ff           xor edi, edi
0x000047f9      e852ccffff     call sym.imp.dcgettext
0x000047fe      4883c428       add rsp, 0x28
0x00004802      4889d9         mov rcx, rbx
0x00004805      4889ef         mov rdi, rbp
0x00004808      5b             pop rbx
0x00004809      5d             pop rbp
0x0000480a      415c           pop r12
0x0000480c      415d           pop r13
0x0000480e      415e           pop r14
0x00004810      415f           pop r15
0x00004812      4889c2         mov rdx, rax
0x00004815      be01000000     mov esi, 1
0x0000481a      31c0           xor eax, eax
0x0000481c      e94fceffff     jmp sym.imp.__fprintf_chk
0x00004821      0f1f80000000.  nop dword [rax]
0x00004828      4c8b6308       mov r12, qword [rbx + 8]
0x0000482c      488d353c1c00.  lea rsi, str.Written_by__s_and__s.      ; 0x646f ; "Written by %s and %s.\n"
0x00004833      488b1b         mov rbx, qword [rbx]
0x00004836      ba05000000     mov edx, 5
0x0000483b      31ff           xor edi, edi
0x0000483d      e80eccffff     call sym.imp.dcgettext
0x00004842      4883c428       add rsp, 0x28
0x00004846      4d89e0         mov r8, r12
0x00004849      4889d9         mov rcx, rbx
0x0000484c      4889ef         mov rdi, rbp
0x0000484f      4889c2         mov rdx, rax
0x00004852      be01000000     mov esi, 1
0x00004857      5b             pop rbx
0x00004858      5d             pop rbp
0x00004859      415c           pop r12
0x0000485b      415d           pop r13
0x0000485d      415e           pop r14
0x0000485f      415f           pop r15
0x00004861      31c0           xor eax, eax
0x00004863      e908ceffff     jmp sym.imp.__fprintf_chk
0x00004868      0f1f84000000.  nop dword [rax + rax]
0x00004870      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004874      4c8b6308       mov r12, qword [rbx + 8]
0x00004878      488d35071c00.  lea rsi, str.Written_by__s___s__and__s. ; 0x6486 ; "Written by %s, %s, and %s.\n"
0x0000487f      488b1b         mov rbx, qword [rbx]
0x00004882      ba05000000     mov edx, 5
0x00004887      31ff           xor edi, edi
0x00004889      e8c2cbffff     call sym.imp.dcgettext
0x0000488e      4883c428       add rsp, 0x28
0x00004892      4d89e9         mov r9, r13
0x00004895      4d89e0         mov r8, r12
0x00004898      4889d9         mov rcx, rbx
0x0000489b      4889ef         mov rdi, rbp
0x0000489e      4889c2         mov rdx, rax
0x000048a1      5b             pop rbx
0x000048a2      5d             pop rbp
0x000048a3      415c           pop r12
0x000048a5      415d           pop r13
0x000048a7      415e           pop r14
0x000048a9      415f           pop r15
0x000048ab      be01000000     mov esi, 1
0x000048b0      31c0           xor eax, eax
0x000048b2      e9b9cdffff     jmp sym.imp.__fprintf_chk
0x000048b7      660f1f840000.  nop word [rax + rax]
0x000048c0      488d35f11c00.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x65b8 ; "Written by %s, %s, %s,\nand %s.\n"
0x000048c7      ba05000000     mov edx, 5
0x000048cc      31ff           xor edi, edi
0x000048ce      4c8b7318       mov r14, qword [rbx + 0x18]
0x000048d2      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000048d6      4c8b6308       mov r12, qword [rbx + 8]
0x000048da      488b1b         mov rbx, qword [rbx]
0x000048dd      e86ecbffff     call sym.imp.dcgettext
0x000048e2      4883ec08       sub rsp, 8
0x000048e6      4156           push r14
0x000048e8      4889c2         mov rdx, rax
0x000048eb      4d89e9         mov r9, r13
0x000048ee      4d89e0         mov r8, r12
0x000048f1      4889d9         mov rcx, rbx
0x000048f4      4889ef         mov rdi, rbp
0x000048f7      be01000000     mov esi, 1
0x000048fc      31c0           xor eax, eax
0x000048fe      e86dcdffff     call sym.imp.__fprintf_chk
0x00004903      58             pop rax
0x00004904      5a             pop rdx
0x00004905      4883c428       add rsp, 0x28
0x00004909      5b             pop rbx
0x0000490a      5d             pop rbp
0x0000490b      415c           pop r12
0x0000490d      415d           pop r13
0x0000490f      415e           pop r14
0x00004911      415f           pop r15
0x00004913      c3             ret
0x00004914      0f1f4000       nop dword [rax]
0x00004918      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000491c      488d35b51c00.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x65d8 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00004923      ba05000000     mov edx, 5
0x00004928      31ff           xor edi, edi
0x0000492a      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000492e      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004932      4c8b6308       mov r12, qword [rbx + 8]
0x00004936      488b1b         mov rbx, qword [rbx]
0x00004939      e812cbffff     call sym.imp.dcgettext
0x0000493e      4157           push r15
0x00004940      eba4           jmp 0x48e6
0x00004942      660f1f440000   nop word [rax + rax]
0x00004948      4c8b4308       mov r8, qword [rbx + 8]
0x0000494c      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004950      488d35a91c00.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x6600 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00004957      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000495b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000495f      ba05000000     mov edx, 5
0x00004964      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004968      31ff           xor edi, edi
0x0000496a      488b1b         mov rbx, qword [rbx]
0x0000496d      4c890424       mov qword [rsp], r8
0x00004971      e8dacaffff     call sym.imp.dcgettext
0x00004976      4883ec08       sub rsp, 8
0x0000497a      4d89e9         mov r9, r13
0x0000497d      4154           push r12
0x0000497f      4157           push r15
0x00004981      4156           push r14
0x00004983      4c8b442420     mov r8, qword [rsp + 0x20]
0x00004988      4889d9         mov rcx, rbx
0x0000498b      4889c2         mov rdx, rax
0x0000498e      4889ef         mov rdi, rbp
0x00004991      be01000000     mov esi, 1
0x00004996      31c0           xor eax, eax
0x00004998      e8d3ccffff     call sym.imp.__fprintf_chk
0x0000499d      4883c420       add rsp, 0x20
0x000049a1      4883c428       add rsp, 0x28
0x000049a5      5b             pop rbx
0x000049a6      5d             pop rbp
0x000049a7      415c           pop r12
0x000049a9      415d           pop r13
0x000049ab      415e           pop r14
0x000049ad      415f           pop r15
0x000049af      c3             ret
0x000049b0      4c8b4b10       mov r9, qword [rbx + 0x10]
0x000049b4      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000049b8      488d35691c00.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x6628 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x000049bf      4c8b6328       mov r12, qword [rbx + 0x28]
0x000049c3      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000049c7      ba05000000     mov edx, 5
0x000049cc      4c8b7318       mov r14, qword [rbx + 0x18]
0x000049d0      4c8b4308       mov r8, qword [rbx + 8]
0x000049d4      31ff           xor edi, edi
0x000049d6      4c894c2408     mov qword [rsp + 8], r9
0x000049db      488b1b         mov rbx, qword [rbx]
0x000049de      4c890424       mov qword [rsp], r8
0x000049e2      e869caffff     call sym.imp.dcgettext
0x000049e7      4155           push r13
0x000049e9      4154           push r12
0x000049eb      4157           push r15
0x000049ed      4156           push r14
0x000049ef      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x000049f4      eb8d           jmp 0x4983
0x000049f6      662e0f1f8400.  nop word cs:[rax + rax]
0x00004a00      4c8b5340       mov r10, qword [rbx + 0x40]
0x00004a04      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004a08      ba05000000     mov edx, 5
0x00004a0d      488b4310       mov rax, qword [rbx + 0x10]
0x00004a11      4c8b4308       mov r8, qword [rbx + 8]
0x00004a15      488d35a41c00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x66c0 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x00004a1c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004a20      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004a24      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004a28      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004a2c      4c89542418     mov qword [rsp + 0x18], r10
0x00004a31      4c894c2410     mov qword [rsp + 0x10], r9
0x00004a36      48890424       mov qword [rsp], rax
0x00004a3a      4c89442408     mov qword [rsp + 8], r8
0x00004a3f      488b1b         mov rbx, qword [rbx]
0x00004a42      e98bfdffff     jmp 0x47d2
0x00004a47      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00004a50      4531c9         xor r9d, r9d
0x00004a53      49833800       cmp qword [r8], 0
0x00004a57      7412           je 0x4a6b
0x00004a59      0f1f80000000.  nop dword [rax]
0x00004a60      4983c101       add r9, 1
0x00004a64      4b833cc800     cmp qword [r8 + r9*8], 0
0x00004a69      75f5           jne 0x4a60
0x00004a6b      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00004a70      4883ec68       sub rsp, 0x68
0x00004a74      4d89c2         mov r10, r8
0x00004a77      4531c9         xor r9d, r9d
0x00004a7a      64488b042528.  mov rax, qword fs:[0x28]
0x00004a83      4889442458     mov qword [rsp + 0x58], rax
0x00004a88      31c0           xor eax, eax
0x00004a8a      4989e0         mov r8, rsp
0x00004a8d      0f1f00         nop dword [rax]
0x00004a90      418b02         mov eax, dword [r10]
0x00004a93      83f82f         cmp eax, 0x2f
0x00004a96      7742           ja 0x4ada
0x00004a98      4189c3         mov r11d, eax
0x00004a9b      4d035a10       add r11, qword [r10 + 0x10]
0x00004a9f      83c008         add eax, 8
0x00004aa2      418902         mov dword [r10], eax
0x00004aa5      498b03         mov rax, qword [r11]
0x00004aa8      4885c0         test rax, rax
0x00004aab      4b8904c8       mov qword [r8 + r9*8], rax
0x00004aaf      740a           je 0x4abb
0x00004ab1      4983c101       add r9, 1
0x00004ab5      4983f90a       cmp r9, 0xa
0x00004ab9      75d5           jne 0x4a90
0x00004abb      e870fbffff     call sym.version_etc_arn
0x00004ac0      488b442458     mov rax, qword [rsp + 0x58]
0x00004ac5      644833042528.  xor rax, qword fs:[0x28]
0x00004ace      7505           jne 0x4ad5
0x00004ad0      4883c468       add rsp, 0x68
0x00004ad4      c3             ret
0x00004ad5      e8a6c9ffff     call sym.imp.__stack_chk_fail
0x00004ada      4d8b5a08       mov r11, qword [r10 + 8]
0x00004ade      498d4308       lea rax, [r11 + 8]
0x00004ae2      49894208       mov qword [r10 + 8], rax
0x00004ae6      ebbd           jmp 0x4aa5
0x00004ae8      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00004af0      55             push rbp
0x00004af1      53             push rbx
0x00004af2      41ba20000000   mov r10d, 0x20                          ; "@"
0x00004af8      4531db         xor r11d, r11d
0x00004afb      4881ecb80000.  sub rsp, 0xb8
0x00004b02      64488b042528.  mov rax, qword fs:[0x28]
0x00004b0b      4889442478     mov qword [rsp + 0x78], rax
0x00004b10      31c0           xor eax, eax
0x00004b12      488d8424d000.  lea rax, [rsp + 0xd0]
0x00004b1a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00004b22      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x00004b2a      4c8d442420     lea r8, [rsp + 0x20]
0x00004b2f      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00004b37      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x00004b3f      4889442410     mov qword [rsp + 0x10], rax
0x00004b44      488d84248000.  lea rax, [rsp + 0x80]
0x00004b4c      4531c9         xor r9d, r9d
0x00004b4f      4889442418     mov qword [rsp + 0x18], rax
0x00004b54      4889c5         mov rbp, rax
0x00004b57      660f1f840000.  nop word [rax + rax]
0x00004b60      4183fa2f       cmp r10d, 0x2f
0x00004b64      7756           ja 0x4bbc
0x00004b66      4489d0         mov eax, r10d
0x00004b69      41bb01000000   mov r11d, 1
0x00004b6f      4183c208       add r10d, 8
0x00004b73      4801e8         add rax, rbp
0x00004b76      488b00         mov rax, qword [rax]
0x00004b79      4885c0         test rax, rax
0x00004b7c      4b8904c8       mov qword [r8 + r9*8], rax
0x00004b80      740a           je 0x4b8c
0x00004b82      4983c101       add r9, 1
0x00004b86      4983f90a       cmp r9, 0xa
0x00004b8a      75d4           jne 0x4b60
0x00004b8c      4584db         test r11b, r11b
0x00004b8f      7524           jne 0x4bb5
0x00004b91      e89afaffff     call sym.version_etc_arn
0x00004b96      488b442478     mov rax, qword [rsp + 0x78]
0x00004b9b      644833042528.  xor rax, qword fs:[0x28]
0x00004ba4      750a           jne 0x4bb0
0x00004ba6      4881c4b80000.  add rsp, 0xb8
0x00004bad      5b             pop rbx
0x00004bae      5d             pop rbp
0x00004baf      c3             ret
0x00004bb0      e8cbc8ffff     call sym.imp.__stack_chk_fail
0x00004bb5      4489542408     mov dword [rsp + 8], r10d
0x00004bba      ebd5           jmp 0x4b91
0x00004bbc      4889d8         mov rax, rbx
0x00004bbf      4883c308       add rbx, 8
0x00004bc3      ebb1           jmp 0x4b76
0x00004bc5      90             nop
0x00004bc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00004bd0      53             push rbx
0x00004bd1      488d35ca1800.  lea rsi, str.Report_bugs_to:__s         ; 0x64a2 ; "\nReport bugs to: %s\n"
0x00004bd8      ba05000000     mov edx, 5
0x00004bdd      31ff           xor edi, edi
0x00004bdf      e86cc8ffff     call sym.imp.dcgettext
0x00004be4      488d15cc1800.  lea rdx, str.bug_coreutils_gnu.org      ; 0x64b7 ; "bug-coreutils@gnu.org"
0x00004beb      4889c6         mov rsi, rax
0x00004bee      bf01000000     mov edi, 1
0x00004bf3      31c0           xor eax, eax
0x00004bf5      e806caffff     call sym.imp.__printf_chk
0x00004bfa      488d35cc1800.  lea rsi, str.s_home_page:___s           ; 0x64cd ; "%s home page: <%s>\n"
0x00004c01      ba05000000     mov edx, 5
0x00004c06      31ff           xor edi, edi
0x00004c08      e843c8ffff     call sym.imp.dcgettext
0x00004c0d      488d0d9c1000.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x5cb0 ; "https://www.gnu.org/software/coreutils/"
0x00004c14      488d15e50a00.  lea rdx, str.GNU_coreutils              ; 0x5700 ; "GNU coreutils"
0x00004c1b      4889c6         mov rsi, rax
0x00004c1e      bf01000000     mov edi, 1
0x00004c23      31c0           xor eax, eax
0x00004c25      e8d6c9ffff     call sym.imp.__printf_chk
0x00004c2a      488b1d573420.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00004c31      488d35c81a00.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x6700 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00004c38      31ff           xor edi, edi
0x00004c3a      ba05000000     mov edx, 5
0x00004c3f      e80cc8ffff     call sym.imp.dcgettext
0x00004c44      4889de         mov rsi, rbx
0x00004c47      4889c7         mov rdi, rax
0x00004c4a      5b             pop rbx
0x00004c4b      e9d0c8ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00004c50      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00004c51      4889fb         mov rbx, rdi
0x00004c54      e847c9ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00004c59      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x00004c5c      7505           jne 0x4c63
0x00004c5e      4885db         test rbx, rbx
0x00004c61      7502           jne 0x4c65
0x00004c63      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00004c64      c3             ret
0x00004c65      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x00004c6a      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00004c70      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00004c73      48f7e6         mul rsi
0x00004c76      4889c7         mov rdi, rax
0x00004c79      0f90c0         seto al
0x00004c7c      4885ff         test rdi, rdi
0x00004c7f      780a           js 0x4c8b
0x00004c81      0fb6c0         movzx eax, al
0x00004c84      4885c0         test rax, rax
0x00004c87      7502           jne 0x4c8b
0x00004c89      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x00004c8b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x00004c8f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00004c94      6690           nop
0x00004c96      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00004ca0      ebae           jmp sym.xmalloc
0x00004ca2      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00004ca6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00004cb0      4885f6         test rsi, rsi
0x00004cb3      53             push rbx
0x00004cb4      4889f3         mov rbx, rsi
0x00004cb7      7505           jne 0x4cbe
0x00004cb9      4885ff         test rdi, rdi
0x00004cbc      751a           jne 0x4cd8
0x00004cbe      4889de         mov rsi, rbx
0x00004cc1      e81ac9ffff     call sym.imp.realloc
0x00004cc6      4885c0         test rax, rax
0x00004cc9      7505           jne 0x4cd0
0x00004ccb      4885db         test rbx, rbx
0x00004cce      7511           jne 0x4ce1                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00004cd0      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00004cd1      c3             ret
0x00004cd2      660f1f440000   nop word [rax + rax]
0x00004cd8      e8e3c6ffff     call sym.imp.free
0x00004cdd      31c0           xor eax, eax
0x00004cdf      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00004ce0      c3             ret
0x00004ce1      e8ba010000     call sym.xalloc_die
0x00004ce6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00004cf0      4889f0         mov rax, rsi
0x00004cf3      48f7e2         mul rdx
0x00004cf6      4889c6         mov rsi, rax
0x00004cf9      0f90c0         seto al
0x00004cfc      4885f6         test rsi, rsi
0x00004cff      780a           js 0x4d0b
0x00004d01      0fb6c0         movzx eax, al
0x00004d04      4885c0         test rax, rax
0x00004d07      7502           jne 0x4d0b
0x00004d09      eba5           jmp sym.xrealloc
0x00004d0b      4883ec08       sub rsp, 8
0x00004d0f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00004d14      6690           nop
0x00004d16      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00004d20      4885ff         test rdi, rdi
0x00004d23      4989d1         mov r9, rdx
0x00004d26      488b0e         mov rcx, qword [rsi]
0x00004d29      7435           je 0x4d60
0x00004d2b      31d2           xor edx, edx
0x00004d2d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00004d37      49f7f1         div r9
0x00004d3a      4839c8         cmp rax, rcx
0x00004d3d      763c           jbe 0x4d7b
0x00004d3f      4889c8         mov rax, rcx
0x00004d42      48d1e8         shr rax, 1
0x00004d45      488d4c0801     lea rcx, [rax + rcx + 1]
0x00004d4a      48890e         mov qword [rsi], rcx
0x00004d4d      490fafc9       imul rcx, r9
0x00004d51      4889ce         mov rsi, rcx
0x00004d54      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00004d59      0f1f80000000.  nop dword [rax]
0x00004d60      4885c9         test rcx, rcx
0x00004d63      7423           je 0x4d88
0x00004d65      4889c8         mov rax, rcx
0x00004d68      49f7e1         mul r9
0x00004d6b      0f90c2         seto dl
0x00004d6e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00004d71      0fb6d2         movzx edx, dl
0x00004d74      7805           js 0x4d7b
0x00004d76      4885d2         test rdx, rdx
0x00004d79      74cf           je 0x4d4a
0x00004d7b      4883ec08       sub rsp, 8
0x00004d7f      e81c010000     call sym.xalloc_die
0x00004d84      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00004d88      31d2           xor edx, edx
0x00004d8a      b880000000     mov eax, 0x80
0x00004d8f      4531c0         xor r8d, r8d
0x00004d92      49f7f1         div r9
0x00004d95      4885c0         test rax, rax
0x00004d98      410f94c0       sete r8b
0x00004d9c      498d0c00       lea rcx, [r8 + rax]
0x00004da0      ebc3           jmp 0x4d65
0x00004da2      0f1f4000       nop dword [rax]
0x00004da6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00004db0      4885ff         test rdi, rdi
0x00004db3      488b06         mov rax, qword [rsi]
0x00004db6      7428           je 0x4de0
0x00004db8      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00004dc2      4839d0         cmp rax, rdx
0x00004dc5      772a           ja 0x4df1
0x00004dc7      4889c2         mov rdx, rax
0x00004dca      48d1ea         shr rdx, 1
0x00004dcd      488d440201     lea rax, [rdx + rax + 1]
0x00004dd2      488906         mov qword [rsi], rax
0x00004dd5      4889c6         mov rsi, rax
0x00004dd8      e9d3feffff     jmp sym.xrealloc
0x00004ddd      0f1f00         nop dword [rax]
0x00004de0      4885c0         test rax, rax
0x00004de3      ba80000000     mov edx, 0x80
0x00004de8      480f44c2       cmove rax, rdx
0x00004dec      4885c0         test rax, rax
0x00004def      79e1           jns 0x4dd2
0x00004df1      4883ec08       sub rsp, 8
0x00004df5      e8a6000000     call sym.xalloc_die
0x00004dfa      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00004e00      53             push rbx
0x00004e01      4889fb         mov rbx, rdi
0x00004e04      e847feffff     call sym.xmalloc
0x00004e09      4889da         mov rdx, rbx
0x00004e0c      31f6           xor esi, esi
0x00004e0e      4889c7         mov rdi, rax
0x00004e11      5b             pop rbx
0x00004e12      e9e9c6ffff     jmp sym.imp.memset
0x00004e17      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00004e20      4889f8         mov rax, rdi
0x00004e23      4883ec08       sub rsp, 8
0x00004e27      48f7e6         mul rsi
0x00004e2a      0f90c2         seto dl
0x00004e2d      4885c0         test rax, rax
0x00004e30      7817           js 0x4e49
0x00004e32      0fb6d2         movzx edx, dl
0x00004e35      4885d2         test rdx, rdx
0x00004e38      750f           jne 0x4e49
0x00004e3a      e8f1c6ffff     call sym.imp.calloc
0x00004e3f      4885c0         test rax, rax
0x00004e42      7405           je 0x4e49
0x00004e44      4883c408       add rsp, 8
0x00004e48      c3             ret
0x00004e49      e852000000     call sym.xalloc_die
0x00004e4e      6690           nop
;-- xmemdup:
0x00004e50      55             push rbp
0x00004e51      53             push rbx
0x00004e52      4889fd         mov rbp, rdi
0x00004e55      4889f7         mov rdi, rsi
0x00004e58      4889f3         mov rbx, rsi
0x00004e5b      4883ec08       sub rsp, 8
0x00004e5f      e8ecfdffff     call sym.xmalloc
0x00004e64      4883c408       add rsp, 8
0x00004e68      4889da         mov rdx, rbx
0x00004e6b      4889ee         mov rsi, rbp
0x00004e6e      5b             pop rbx
0x00004e6f      5d             pop rbp
0x00004e70      4889c7         mov rdi, rax
0x00004e73      e9e8c6ffff     jmp sym.imp.memcpy
0x00004e78      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00004e80      53             push rbx
0x00004e81      4889fb         mov rbx, rdi
0x00004e84      e8e7c5ffff     call sym.imp.strlen
0x00004e89      4889df         mov rdi, rbx
0x00004e8c      488d7001       lea rsi, [rax + 1]
0x00004e90      5b             pop rbx
0x00004e91      ebbd           jmp sym.xmemdup
0x00004e93      662e0f1f8400.  nop word cs:[rax + rax]
0x00004e9d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00004ea0      488d35081900.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x67af ; "memory exhausted"
0x00004ea7      4883ec08       sub rsp, 8
0x00004eab      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00004eb0      31ff           xor edi, edi
0x00004eb2      e899c5ffff     call sym.imp.dcgettext
0x00004eb7      8b3d5b312000   mov edi, dword [obj.exit_failure]       ; [0x208018:4]=1
0x00004ebd      488d15d80f00.  lea rdx, [0x00005e9c]                   ; "%s"
0x00004ec4      4889c1         mov rcx, rax
0x00004ec7      31f6           xor esi, esi
0x00004ec9      31c0           xor eax, eax
0x00004ecb      e850c7ffff     call sym.imp.error
0x00004ed0      e8fbc4ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00004ed5      662e0f1f8400.  nop word cs:[rax + rax]
0x00004edf      90             nop
;-- xstrtoumax:
0x00004ee0      4157           push r15
0x00004ee2      4156           push r14
0x00004ee4      4155           push r13
0x00004ee6      4154           push r12
0x00004ee8      55             push rbp
0x00004ee9      53             push rbx
0x00004eea      4883ec28       sub rsp, 0x28
0x00004eee      64488b042528.  mov rax, qword fs:[0x28]
0x00004ef7      4889442418     mov qword [rsp + 0x18], rax
0x00004efc      31c0           xor eax, eax
0x00004efe      83fa24         cmp edx, 0x24
0x00004f01      0f875e030000   ja 0x5265
0x00004f07      488d442410     lea rax, [rsp + 0x10]
0x00004f0c      4989f7         mov r15, rsi
0x00004f0f      4885f6         test rsi, rsi
0x00004f12      4889fd         mov rbp, rdi
0x00004f15      89542408       mov dword [rsp + 8], edx
0x00004f19      4989ce         mov r14, rcx
0x00004f1c      4d89c5         mov r13, r8
0x00004f1f      4c0f44f8       cmove r15, rax
0x00004f23      e8b8c4ffff     call sym.imp.__errno_location
0x00004f28      c70000000000   mov dword [rax], 0
0x00004f2e      4989c4         mov r12, rax
0x00004f31      0fb65d00       movzx ebx, byte [rbp]
0x00004f35      e866c7ffff     call sym.imp.__ctype_b_loc
0x00004f3a      8b542408       mov edx, dword [rsp + 8]
0x00004f3e      488b30         mov rsi, qword [rax]
0x00004f41      4889e8         mov rax, rbp
0x00004f44      eb11           jmp 0x4f57
0x00004f46      662e0f1f8400.  nop word cs:[rax + rax]
0x00004f50      4883c001       add rax, 1
0x00004f54      0fb618         movzx ebx, byte [rax]
0x00004f57      0fb6cb         movzx ecx, bl
0x00004f5a      f6444e0120     test byte [rsi + rcx*2 + 1], 0x20
0x00004f5f      75ef           jne 0x4f50
0x00004f61      80fb2d         cmp bl, 0x2d
0x00004f64      7452           je 0x4fb8
0x00004f66      31c9           xor ecx, ecx
0x00004f68      4c89fe         mov rsi, r15
0x00004f6b      4889ef         mov rdi, rbp
0x00004f6e      e87dc5ffff     call sym.imp.__strtoul_internal
0x00004f73      498b0f         mov rcx, qword [r15]
0x00004f76      4889c3         mov rbx, rax
0x00004f79      4839e9         cmp rcx, rbp
0x00004f7c      742a           je 0x4fa8
0x00004f7e      418b0424       mov eax, dword [r12]
0x00004f82      85c0           test eax, eax
0x00004f84      7462           je 0x4fe8
0x00004f86      83f822         cmp eax, 0x22
0x00004f89      bd01000000     mov ebp, 1
0x00004f8e      7528           jne 0x4fb8
0x00004f90      4d85ed         test r13, r13
0x00004f93      7409           je 0x4f9e
0x00004f95      440fb621       movzx r12d, byte [rcx]
0x00004f99      4584e4         test r12b, r12b
0x00004f9c      7579           jne 0x5017
0x00004f9e      49891e         mov qword [r14], rbx
0x00004fa1      eb1a           jmp 0x4fbd
0x00004fa3      0f1f440000     nop dword [rax + rax]
0x00004fa8      4d85ed         test r13, r13
0x00004fab      48894c2408     mov qword [rsp + 8], rcx
0x00004fb0      753e           jne 0x4ff0
0x00004fb2      660f1f440000   nop word [rax + rax]
0x00004fb8      bd04000000     mov ebp, 4
0x00004fbd      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00004fc2      6448333c2528.  xor rdi, qword fs:[0x28]
0x00004fcb      89e8           mov eax, ebp
0x00004fcd      0f858d020000   jne 0x5260
0x00004fd3      4883c428       add rsp, 0x28
0x00004fd7      5b             pop rbx
0x00004fd8      5d             pop rbp
0x00004fd9      415c           pop r12
0x00004fdb      415d           pop r13
0x00004fdd      415e           pop r14
0x00004fdf      415f           pop r15
0x00004fe1      c3             ret
0x00004fe2      660f1f440000   nop word [rax + rax]
0x00004fe8      31ed           xor ebp, ebp
0x00004fea      eba4           jmp 0x4f90
0x00004fec      0f1f4000       nop dword [rax]
0x00004ff0      440fb66500     movzx r12d, byte [rbp]
0x00004ff5      4584e4         test r12b, r12b
0x00004ff8      74be           je 0x4fb8
0x00004ffa      410fbef4       movsx esi, r12b
0x00004ffe      4c89ef         mov rdi, r13
0x00005001      31ed           xor ebp, ebp
0x00005003      e8a8c4ffff     call sym.imp.strchr
0x00005008      4885c0         test rax, rax
0x0000500b      bb01000000     mov ebx, 1
0x00005010      488b4c2408     mov rcx, qword [rsp + 8]
0x00005015      74a1           je 0x4fb8
0x00005017      410fbef4       movsx esi, r12b
0x0000501b      4c89ef         mov rdi, r13
0x0000501e      48894c2408     mov qword [rsp + 8], rcx
0x00005023      e888c4ffff     call sym.imp.strchr
0x00005028      4885c0         test rax, rax
0x0000502b      488b4c2408     mov rcx, qword [rsp + 8]
0x00005030      0f84c6000000   je 0x50fc
0x00005036      418d4424bb     lea eax, [r12 - 0x45]
0x0000503b      3c2f           cmp al, 0x2f
0x0000503d      7751           ja 0x5090
0x0000503f      48ba45893000.  movabs rdx, 0x814400308945
0x00005049      480fa3c2       bt rdx, rax
0x0000504d      7341           jae 0x5090
0x0000504f      be30000000     mov esi, 0x30                           ; '0'
0x00005054      4c89ef         mov rdi, r13
0x00005057      48894c2408     mov qword [rsp + 8], rcx
0x0000505c      e84fc4ffff     call sym.imp.strchr
0x00005061      4885c0         test rax, rax
0x00005064      488b4c2408     mov rcx, qword [rsp + 8]
0x00005069      7425           je 0x5090
0x0000506b      0fb64101       movzx eax, byte [rcx + 1]
0x0000506f      3c44           cmp al, 0x44
0x00005071      740c           je 0x507f
0x00005073      3c69           cmp al, 0x69
0x00005075      0f84cd010000   je 0x5248
0x0000507b      3c42           cmp al, 0x42
0x0000507d      7511           jne 0x5090
0x0000507f      bf02000000     mov edi, 2
0x00005084      bee8030000     mov esi, 0x3e8
0x00005089      eb0f           jmp 0x509a
0x0000508b      0f1f440000     nop dword [rax + rax]
0x00005090      bf01000000     mov edi, 1
0x00005095      be00040000     mov esi, 0x400
0x0000509a      4183ec42       sub r12d, 0x42
0x0000509e      4180fc35       cmp r12b, 0x35
0x000050a2      7758           ja 0x50fc
0x000050a4      488d155d1700.  lea rdx, [0x00006808]
0x000050ab      450fb6e4       movzx r12d, r12b
0x000050af      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x000050b3      4801d0         add rax, rdx
0x000050b6      ffe0           jmp rax
0x000050b8      4889d8         mov rax, rbx
0x000050bb      48f7e6         mul rsi
0x000050be      0f80ed010000   jo 0x52b1
0x000050c4      4531c0         xor r8d, r8d
0x000050c7      48f7e6         mul rsi
0x000050ca      0f80d2010000   jo 0x52a2
0x000050d0      4889c3         mov rbx, rax
0x000050d3      4409c5         or ebp, r8d
0x000050d6      662e0f1f8400.  nop word cs:[rax + rax]
0x000050e0      4863ff         movsxd rdi, edi
0x000050e3      89e8           mov eax, ebp
0x000050e5      4801f9         add rcx, rdi
0x000050e8      83c802         or eax, 2
0x000050eb      49890f         mov qword [r15], rcx
0x000050ee      803900         cmp byte [rcx], 0
0x000050f1      49891e         mov qword [r14], rbx
0x000050f4      0f45e8         cmovne ebp, eax
0x000050f7      e9c1feffff     jmp 0x4fbd
0x000050fc      49891e         mov qword [r14], rbx
0x000050ff      83cd02         or ebp, 2
0x00005102      e9b6feffff     jmp 0x4fbd
0x00005107      ba02000000     mov edx, 2
0x0000510c      4889d0         mov rax, rdx
0x0000510f      48f7e3         mul rbx
0x00005112      0f8096000000   jo 0x51ae
0x00005118      4801db         add rbx, rbx
0x0000511b      ebc3           jmp 0x50e0
0x0000511d      ba00020000     mov edx, 0x200
0x00005122      4889d0         mov rax, rdx
0x00005125      48f7e3         mul rbx
0x00005128      0f8080000000   jo 0x51ae
0x0000512e      48c1e309       shl rbx, 9
0x00005132      ebac           jmp 0x50e0
0x00005134      41b807000000   mov r8d, 7
0x0000513a      4531c9         xor r9d, r9d
0x0000513d      0f1f00         nop dword [rax]
0x00005140      4889d8         mov rax, rbx
0x00005143      48f7e6         mul rsi
0x00005146      4889c3         mov rbx, rax
0x00005149      0f808f010000   jo 0x52de
0x0000514f      4183e801       sub r8d, 1
0x00005153      75eb           jne 0x5140
0x00005155      4409cd         or ebp, r9d
0x00005158      eb86           jmp 0x50e0
0x0000515a      41b808000000   mov r8d, 8
0x00005160      4531c9         xor r9d, r9d
0x00005163      0f1f440000     nop dword [rax + rax]
0x00005168      4889d8         mov rax, rbx
0x0000516b      48f7e6         mul rsi
0x0000516e      4889c3         mov rbx, rax
0x00005171      0f8049010000   jo 0x52c0
0x00005177      4183e801       sub r8d, 1
0x0000517b      75eb           jne 0x5168
0x0000517d      ebd6           jmp 0x5155
0x0000517f      41b804000000   mov r8d, 4
0x00005185      4531c9         xor r9d, r9d
0x00005188      4889d8         mov rax, rbx
0x0000518b      48f7e6         mul rsi
0x0000518e      4889c3         mov rbx, rax
0x00005191      0f80fc000000   jo 0x5293
0x00005197      4183e801       sub r8d, 1
0x0000519b      75eb           jne 0x5188
0x0000519d      ebb6           jmp 0x5155
0x0000519f      4889d8         mov rax, rbx
0x000051a2      48f7e6         mul rsi
0x000051a5      4889c3         mov rbx, rax
0x000051a8      0f8132ffffff   jno 0x50e0
0x000051ae      bd01000000     mov ebp, 1
0x000051b3      4883cbff       or rbx, 0xffffffffffffffff
0x000051b7      e924ffffff     jmp 0x50e0
0x000051bc      0f1f4000       nop dword [rax]
0x000051c0      41b805000000   mov r8d, 5
0x000051c6      4531c9         xor r9d, r9d
0x000051c9      4889d8         mov rax, rbx
0x000051cc      48f7e6         mul rsi
0x000051cf      4889c3         mov rbx, rax
0x000051d2      0f80f7000000   jo 0x52cf
0x000051d8      4183e801       sub r8d, 1
0x000051dc      75eb           jne 0x51c9
0x000051de      e972ffffff     jmp 0x5155
0x000051e3      41b806000000   mov r8d, 6
0x000051e9      4531c9         xor r9d, r9d
0x000051ec      4889d8         mov rax, rbx
0x000051ef      48f7e6         mul rsi
0x000051f2      4889c3         mov rbx, rax
0x000051f5      0f8089000000   jo 0x5284
0x000051fb      4183e801       sub r8d, 1
0x000051ff      75eb           jne 0x51ec
0x00005201      e94fffffff     jmp 0x5155
0x00005206      ba00040000     mov edx, 0x400
0x0000520b      4889d0         mov rax, rdx
0x0000520e      48f7e3         mul rbx
0x00005211      709b           jo 0x51ae
0x00005213      48c1e30a       shl rbx, 0xa
0x00005217      e9c4feffff     jmp 0x50e0
0x0000521c      4889d8         mov rax, rbx
0x0000521f      48f7e6         mul rsi
0x00005222      0f80c5000000   jo 0x52ed
0x00005228      4531c0         xor r8d, r8d
0x0000522b      48f7e6         mul rsi
0x0000522e      0f8193feffff   jno 0x50c7
0x00005234      41b801000000   mov r8d, 1
0x0000523a      4883c8ff       or rax, 0xffffffffffffffff
0x0000523e      e984feffff     jmp 0x50c7
0x00005243      0f1f440000     nop dword [rax + rax]
0x00005248      31ff           xor edi, edi
0x0000524a      80790242       cmp byte [rcx + 2], 0x42
0x0000524e      be00040000     mov esi, 0x400
0x00005253      400f94c7       sete dil
0x00005257      8d7c3f01       lea edi, [rdi + rdi + 1]
0x0000525b      e93afeffff     jmp 0x509a
0x00005260      e81bc2ffff     call sym.imp.__stack_chk_fail
0x00005265      488d0d741600.  lea rcx, obj.__PRETTY_FUNCTION__.4162   ; 0x68e0 ; "xstrtoumax"
0x0000526c      488d354d1500.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0x67c0 ; "../coreutils-8.31/lib/xstrtol.c"
0x00005273      488d3d661500.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0x67e0 ; "0 <= strtol_base && strtol_base <= 36"
0x0000527a      ba54000000     mov edx, 0x54                           ; 'T'
0x0000527f      e85cc2ffff     call sym.imp.__assert_fail
0x00005284      41b901000000   mov r9d, 1
0x0000528a      4883cbff       or rbx, 0xffffffffffffffff
0x0000528e      e968ffffff     jmp 0x51fb
0x00005293      41b901000000   mov r9d, 1
0x00005299      4883cbff       or rbx, 0xffffffffffffffff
0x0000529d      e9f5feffff     jmp 0x5197
0x000052a2      41b801000000   mov r8d, 1
0x000052a8      4883cbff       or rbx, 0xffffffffffffffff
0x000052ac      e922feffff     jmp 0x50d3
0x000052b1      4883c8ff       or rax, 0xffffffffffffffff
0x000052b5      41b801000000   mov r8d, 1
0x000052bb      e907feffff     jmp 0x50c7
0x000052c0      41b901000000   mov r9d, 1
0x000052c6      4883cbff       or rbx, 0xffffffffffffffff
0x000052ca      e9a8feffff     jmp 0x5177
0x000052cf      41b901000000   mov r9d, 1
0x000052d5      4883cbff       or rbx, 0xffffffffffffffff
0x000052d9      e9fafeffff     jmp 0x51d8
0x000052de      41b901000000   mov r9d, 1
0x000052e4      4883cbff       or rbx, 0xffffffffffffffff
0x000052e8      e962feffff     jmp 0x514f
0x000052ed      41b801000000   mov r8d, 1
0x000052f3      4883c8ff       or rax, 0xffffffffffffffff
0x000052f7      e92fffffff     jmp 0x522b
0x000052fc      0f1f4000       nop dword [rax]
;-- rpl_mbrtowc:
0x00005300      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00005302      4154           push r12
0x00005304      4989f5         mov r13, rsi
0x00005307      55             push rbp
0x00005308      53             push rbx
0x00005309      4889fb         mov rbx, rdi
0x0000530c      4989d4         mov r12, rdx
0x0000530f      4883ec18       sub rsp, 0x18
0x00005313      64488b042528.  mov rax, qword fs:[0x28]
0x0000531c      4889442408     mov qword [rsp + 8], rax
0x00005321      31c0           xor eax, eax
0x00005323      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00005328      4885ff         test rdi, rdi
0x0000532b      480f44d8       cmove rbx, rax
0x0000532f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00005332      e869c1ffff     call sym.imp.mbrtowc
0x00005337      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x0000533b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x0000533e      7620           jbe 0x5360                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00005340      4d85e4         test r12, r12
0x00005343      741b           je 0x5360
0x00005345      31ff           xor edi, edi
0x00005347      e8c4000000     call sym.hard_locale
0x0000534c      84c0           test al, al
0x0000534e      7510           jne 0x5360
0x00005350      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00005355      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x0000535a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x0000535c      0f1f4000       nop dword [rax]
0x00005360      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00005365      644833142528.  xor rdx, qword fs:[0x28]
0x0000536e      4889e8         mov rax, rbp
0x00005371      750b           jne 0x537e
0x00005373      4883c418       add rsp, 0x18
0x00005377      5b             pop rbx
0x00005378      5d             pop rbp
0x00005379      415c           pop r12
0x0000537b      415d           pop r13
0x0000537d      c3             ret
0x0000537e      e8fdc0ffff     call sym.imp.__stack_chk_fail
0x00005383      662e0f1f8400.  nop word cs:[rax + rax]
0x0000538d      0f1f00         nop dword [rax]
;-- close_stream:
0x00005390      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00005392      55             push rbp
0x00005393      4889fd         mov rbp, rdi
0x00005396      53             push rbx
0x00005397      e874c0ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x0000539c      8b5d00         mov ebx, dword [rbp]
0x0000539f      4889ef         mov rdi, rbp
0x000053a2      4989c4         mov r12, rax
0x000053a5      e806010000     call sym.rpl_fclose
0x000053aa      83e320         and ebx, 0x20                           ; "@"
0x000053ad      85db           test ebx, ebx
0x000053af      7517           jne 0x53c8
0x000053b1      85c0           test eax, eax
0x000053b3      740a           je 0x53bf                               ; stdio.h:-186
0x000053b5      4d85e4         test r12, r12                           ; stdio.h:-178
0x000053b8      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000053bd      7439           je 0x53f8
0x000053bf      5b             pop rbx
0x000053c0      5d             pop rbp
0x000053c1      415c           pop r12
0x000053c3      c3             ret
0x000053c4      0f1f4000       nop dword [rax]
0x000053c8      85c0           test eax, eax
0x000053ca      751c           jne 0x53e8
0x000053cc      e80fc0ffff     call sym.imp.__errno_location
0x000053d1      c70000000000   mov dword [rax], 0
0x000053d7      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000053dc      5b             pop rbx
0x000053dd      5d             pop rbp
0x000053de      415c           pop r12
0x000053e0      c3             ret
0x000053e1      0f1f80000000.  nop dword [rax]
0x000053e8      5b             pop rbx
0x000053e9      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000053ee      5d             pop rbp                                 ; stdio.h:-186
0x000053ef      415c           pop r12
0x000053f1      c3             ret
0x000053f2      660f1f440000   nop word [rax + rax]
0x000053f8      e8e3bfffff     call sym.imp.__errno_location
0x000053fd      833809         cmp dword [rax], 9
0x00005400      5b             pop rbx
0x00005401      5d             pop rbp
0x00005402      415c           pop r12                                 ; stdio.h:-178
0x00005404      0f95c0         setne al
0x00005407      0fb6c0         movzx eax, al
0x0000540a      f7d8           neg eax
0x0000540c      c3             ret
0x0000540d      0f1f00         nop dword [rax]
;-- hard_locale:
0x00005410      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00005414      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00005416      e8d5c1ffff     call sym.imp.setlocale
0x0000541b      4889c2         mov rdx, rax
0x0000541e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00005423      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00005426      741d           je 0x5445
0x00005428      488d3dbc1400.  lea rdi, [0x000068eb]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x0000542f      b902000000     mov ecx, 2
0x00005434      4889d6         mov rsi, rdx
0x00005437      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005439      0f97c1         seta cl
0x0000543c      80d900         sbb cl, 0
0x0000543f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00005441      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00005443      750b           jne 0x5450
0x00005445      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00005449      c3             ret
0x0000544a      660f1f440000   nop word [rax + rax]
0x00005450      488d3d961400.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x68ed ; "POSIX"
0x00005457      b906000000     mov ecx, 6
0x0000545c      4889d6         mov rsi, rdx
0x0000545f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005461      0f97c0         seta al
0x00005464      1c00           sbb al, 0
0x00005466      84c0           test al, al
0x00005468      0f95c0         setne al
0x0000546b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0000546f      c3             ret
;-- locale_charset:
0x00005470      4883ec08       sub rsp, 8
0x00005474      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00005479      e842c1ffff     call sym.imp.nl_langinfo
0x0000547e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00005481      741d           je 0x54a0
0x00005483      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00005486      488d15661400.  lea rdx, str.ASCII                      ; 0x68f3 ; "ASCII"
0x0000548d      480f44c2       cmove rax, rdx
0x00005491      4883c408       add rsp, 8
0x00005495      c3             ret
0x00005496      662e0f1f8400.  nop word cs:[rax + rax]
0x000054a0      488d054c1400.  lea rax, str.ASCII                      ; 0x68f3 ; "ASCII"
0x000054a7      4883c408       add rsp, 8
0x000054ab      c3             ret
0x000054ac      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x000054b0      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x000054b2      55             push rbp
0x000054b3      53             push rbx
0x000054b4      4889fb         mov rbx, rdi
0x000054b7      e8c4c0ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x000054bc      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x000054be      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x000054c1      7854           js 0x5517                               ; ../coreutils-8.31/lib/fclose.c:66
0x000054c3      e808c1ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x000054c8      85c0           test eax, eax
0x000054ca      752c           jne 0x54f8
0x000054cc      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x000054cf      e85c000000     call sym.rpl_fflush
0x000054d4      85c0           test eax, eax
0x000054d6      743c           je 0x5514
0x000054d8      e803bfffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x000054dd      448b20         mov r12d, dword [rax]
0x000054e0      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x000054e3      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x000054e6      e845bfffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x000054eb      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x000054ee      7530           jne 0x5520
0x000054f0      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x000054f1      5d             pop rbp
0x000054f2      415c           pop r12
0x000054f4      c3             ret
0x000054f5      0f1f00         nop dword [rax]
0x000054f8      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x000054fb      e880c0ffff     call sym.imp.fileno
0x00005500      31f6           xor esi, esi
0x00005502      ba01000000     mov edx, 1
0x00005507      89c7           mov edi, eax
0x00005509      e8c2bfffff     call sym.imp.lseek
0x0000550e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005512      75b8           jne 0x54cc
0x00005514      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00005517      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00005518      5d             pop rbp
0x00005519      415c           pop r12
0x0000551b      e910bfffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00005520      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00005524      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00005529      ebc5           jmp 0x54f0
0x0000552b      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x00005530      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00005533      53             push rbx
0x00005534      4889fb         mov rbx, rdi
0x00005537      7411           je 0x554a                               ; ../coreutils-8.31/lib/fflush.c:150
0x00005539      e892c0ffff     call sym.imp.__freading
0x0000553e      85c0           test eax, eax
0x00005540      7408           je 0x554a
0x00005542      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00005548      750e           jne 0x5558
0x0000554a      4889df         mov rdi, rbx
0x0000554d      5b             pop rbx
0x0000554e      e95dc0ffff     jmp sym.imp.fflush
0x00005553      0f1f440000     nop dword [rax + rax]
0x00005558      4889df         mov rdi, rbx
0x0000555b      ba01000000     mov edx, 1
0x00005560      31f6           xor esi, esi
0x00005562      e809000000     call sym.rpl_fseeko
0x00005567      4889df         mov rdi, rbx
0x0000556a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x0000556b      e940c0ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00005570      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00005574      48394710       cmp qword [rdi + 0x10], rax
0x00005578      7406           je 0x5580                               ; ../coreutils-8.31/lib/fseeko.c:32
0x0000557a      e9b1c0ffff     jmp sym.imp.fseeko                      ; /sys_errlist.h:9
0x0000557f      90             nop
0x00005580      488b4720       mov rax, qword [rdi + 0x20]
0x00005584      48394728       cmp qword [rdi + 0x28], rax
0x00005588      75f0           jne 0x557a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x0000558a      48837f4800     cmp qword [rdi + 0x48], 0
0x0000558f      75e9           jne 0x557a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00005591      4154           push r12
0x00005593      55             push rbp
0x00005594      4189d4         mov r12d, edx
0x00005597      53             push rbx
0x00005598      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x0000559b      4889fb         mov rbx, rdi
0x0000559e      e8ddbfffff     call sym.imp.fileno
0x000055a3      4489e2         mov edx, r12d
0x000055a6      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x000055a9      89c7           mov edi, eax                            ; /sys_errlist.h:17
0x000055ab      e820bfffff     call sym.imp.lseek
0x000055b0      4883f8ff       cmp rax, 0xffffffffffffffff
0x000055b4      740c           je 0x55c2
0x000055b6      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x000055b9      488983900000.  mov qword [rbx + 0x90], rax
0x000055c0      31c0           xor eax, eax
0x000055c2      5b             pop rbx                                 ; /sys_errlist.h:19
0x000055c3      5d             pop rbp
0x000055c4      415c           pop r12
0x000055c6      c3             ret
0x000055c7      660f1f840000.  nop word [rax + rax]
;-- __libc_csu_init:
0x000055d0      4157           push r15
0x000055d2      4156           push r14
0x000055d4      4989d7         mov r15, rdx
0x000055d7      4155           push r13
0x000055d9      4154           push r12
0x000055db      4c8d256e2520.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x207b50 ; "@\x1e"
0x000055e2      55             push rbp
0x000055e3      488d2d6e2520.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x207b58
0x000055ea      53             push rbx
0x000055eb      4189fd         mov r13d, edi
0x000055ee      4989f6         mov r14, rsi
0x000055f1      4c29e5         sub rbp, r12
0x000055f4      4883ec08       sub rsp, 8
0x000055f8      48c1fd03       sar rbp, 3
0x000055fc      e88fbdffff     call sym._init
0x00005601      4885ed         test rbp, rbp
0x00005604      7420           je 0x5626
0x00005606      31db           xor ebx, ebx
0x00005608      0f1f84000000.  nop dword [rax + rax]
0x00005610      4c89fa         mov rdx, r15
0x00005613      4c89f6         mov rsi, r14
0x00005616      4489ef         mov edi, r13d
0x00005619      41ff14dc       call qword [r12 + rbx*8]
0x0000561d      4883c301       add rbx, 1
0x00005621      4839dd         cmp rbp, rbx
0x00005624      75ea           jne 0x5610
0x00005626      4883c408       add rsp, 8
0x0000562a      5b             pop rbx
0x0000562b      5d             pop rbp
0x0000562c      415c           pop r12
0x0000562e      415d           pop r13
0x00005630      415e           pop r14
0x00005632      415f           pop r15
0x00005634      c3             ret
0x00005635      90             nop
0x00005636      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00005640      f3c3           ret
0x00005642      662e0f1f8400.  nop word cs:[rax + rax]
0x0000564c      0f1f4000       nop dword [rax]
;-- atexit:
0x00005650      488b15b12920.  mov rdx, qword [obj.__dso_handle]       ; [0x208008:8]=0x208008 obj.__dso_handle
0x00005657      31f6           xor esi, esi
0x00005659      e9e2bfffff     jmp sym.imp.__cxa_atexit
0x0000565e      0000           add byte [rax], al
