;-- section..plt:
;-- .plt:
0x00001320      ff352a6b2000   push qword [0x00207e50]                 ; [12] -r-x section size 736 named .plt
0x00001326      ff252c6b2000   jmp qword [0x00207e58]                  ; [0x207e58:8]=0
0x0000132c      0f1f4000       nop dword [rax]
;-- imp.free:
0x00001330      ff252a6b2000   jmp qword [reloc.free]                  ; [0x207e60:8]=0x1336 ; "6\x13"
0x00001336      6800000000     push 0
0x0000133b      e9e0ffffff     jmp sym..plt
;-- imp.abort:
0x00001340      ff25226b2000   jmp qword [reloc.abort]                 ; [0x207e68:8]=0x1346 ; "F\x13"
0x00001346      6801000000     push 1
0x0000134b      e9d0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x00001350      ff251a6b2000   jmp qword [reloc.__errno_location]      ; [0x207e70:8]=0x1356 ; "V\x13"
0x00001356      6802000000     push 2
0x0000135b      e9c0ffffff     jmp sym..plt
;-- imp.getpriority:
0x00001360      ff25126b2000   jmp qword [reloc.getpriority]           ; [0x207e78:8]=0x1366 ; "f\x13"
0x00001366      6803000000     push 3
0x0000136b      e9b0ffffff     jmp sym..plt
;-- imp.strncmp:
0x00001370      ff250a6b2000   jmp qword [reloc.strncmp]               ; [0x207e80:8]=0x1376 ; "v\x13"
0x00001376      6804000000     push 4
0x0000137b      e9a0ffffff     jmp sym..plt
;-- imp._exit:
0x00001380      ff25026b2000   jmp qword [reloc._exit]                 ; [0x207e88:8]=0x1386
0x00001386      6805000000     push 5
0x0000138b      e990ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001390      ff25fa6a2000   jmp qword [reloc.__fpending]            ; [0x207e90:8]=0x1396
0x00001396      6806000000     push 6
0x0000139b      e980ffffff     jmp sym..plt
;-- imp.textdomain:
0x000013a0      ff25f26a2000   jmp qword [reloc.textdomain]            ; [0x207e98:8]=0x13a6
0x000013a6      6807000000     push 7
0x000013ab      e970ffffff     jmp sym..plt
;-- imp.fclose:
0x000013b0      ff25ea6a2000   jmp qword [reloc.fclose]                ; [0x207ea0:8]=0x13b6
0x000013b6      6808000000     push 8
0x000013bb      e960ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x000013c0      ff25e26a2000   jmp qword [reloc.bindtextdomain]        ; [0x207ea8:8]=0x13c6
0x000013c6      6809000000     push 9
0x000013cb      e950ffffff     jmp sym..plt
;-- imp.dcgettext:
0x000013d0      ff25da6a2000   jmp qword [reloc.dcgettext]             ; [0x207eb0:8]=0x13d6
0x000013d6      680a000000     push 0xa
0x000013db      e940ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x000013e0      ff25d26a2000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x207eb8:8]=0x13e6
0x000013e6      680b000000     push 0xb
0x000013eb      e930ffffff     jmp sym..plt
;-- imp.strlen:
0x000013f0      ff25ca6a2000   jmp qword [reloc.strlen]                ; [0x207ec0:8]=0x13f6
0x000013f6      680c000000     push 0xc
0x000013fb      e920ffffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001400      ff25c26a2000   jmp qword [reloc.__stack_chk_fail]      ; [0x207ec8:8]=0x1406
0x00001406      680d000000     push 0xd
0x0000140b      e910ffffff     jmp sym..plt
;-- imp.getopt_long:
0x00001410      ff25ba6a2000   jmp qword [reloc.getopt_long]           ; [0x207ed0:8]=0x1416
0x00001416      680e000000     push 0xe
0x0000141b      e900ffffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001420      ff25b26a2000   jmp qword [reloc.mbrtowc]               ; [0x207ed8:8]=0x1426 ; "&\x14"
0x00001426      680f000000     push 0xf
0x0000142b      e9f0feffff     jmp sym..plt
;-- imp.strchr:
0x00001430      ff25aa6a2000   jmp qword [reloc.strchr]                ; [0x207ee0:8]=0x1436 ; "6\x14"
0x00001436      6810000000     push 0x10
0x0000143b      e9e0feffff     jmp sym..plt
;-- imp.strrchr:
0x00001440      ff25a26a2000   jmp qword [reloc.strrchr]               ; [0x207ee8:8]=0x1446 ; "F\x14"
0x00001446      6811000000     push 0x11
0x0000144b      e9d0feffff     jmp sym..plt
;-- imp.lseek:
0x00001450      ff259a6a2000   jmp qword [reloc.lseek]                 ; [0x207ef0:8]=0x1456 ; "V\x14"
0x00001456      6812000000     push 0x12
0x0000145b      e9c0feffff     jmp sym..plt
;-- imp.__assert_fail:
0x00001460      ff25926a2000   jmp qword [reloc.__assert_fail]         ; [0x207ef8:8]=0x1466 ; "f\x14"
0x00001466      6813000000     push 0x13
0x0000146b      e9b0feffff     jmp sym..plt
;-- imp.setpriority:
0x00001470      ff258a6a2000   jmp qword [reloc.setpriority]           ; [0x207f00:8]=0x1476 ; "v\x14"
0x00001476      6814000000     push 0x14
0x0000147b      e9a0feffff     jmp sym..plt
;-- imp.memset:
0x00001480      ff25826a2000   jmp qword [reloc.memset]                ; [0x207f08:8]=0x1486
0x00001486      6815000000     push 0x15
0x0000148b      e990feffff     jmp sym..plt
;-- imp.memcmp:
0x00001490      ff257a6a2000   jmp qword [reloc.memcmp]                ; [0x207f10:8]=0x1496
0x00001496      6816000000     push 0x16
0x0000149b      e980feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x000014a0      ff25726a2000   jmp qword [reloc.fputs_unlocked]        ; [0x207f18:8]=0x14a6
0x000014a6      6817000000     push 0x17
0x000014ab      e970feffff     jmp sym..plt
;-- imp.calloc:
0x000014b0      ff256a6a2000   jmp qword [reloc.calloc]                ; [0x207f20:8]=0x14b6
0x000014b6      6818000000     push 0x18
0x000014bb      e960feffff     jmp sym..plt
;-- imp.strtol:
0x000014c0      ff25626a2000   jmp qword [reloc.strtol]                ; [0x207f28:8]=0x14c6
0x000014c6      6819000000     push 0x19
0x000014cb      e950feffff     jmp sym..plt
;-- imp.memcpy:
0x000014d0      ff255a6a2000   jmp qword [reloc.memcpy]                ; [0x207f30:8]=0x14d6
0x000014d6      681a000000     push 0x1a
0x000014db      e940feffff     jmp sym..plt
;-- imp.fileno:
0x000014e0      ff25526a2000   jmp qword [reloc.fileno]                ; [0x207f38:8]=0x14e6
0x000014e6      681b000000     push 0x1b
0x000014eb      e930feffff     jmp sym..plt
;-- imp.malloc:
0x000014f0      ff254a6a2000   jmp qword [reloc.malloc]                ; [0x207f40:8]=0x14f6
0x000014f6      681c000000     push 0x1c
0x000014fb      e920feffff     jmp sym..plt
;-- imp.fflush:
0x00001500      ff25426a2000   jmp qword [reloc.fflush]                ; [0x207f48:8]=0x1506
0x00001506      681d000000     push 0x1d
0x0000150b      e910feffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001510      ff253a6a2000   jmp qword [reloc.nl_langinfo]           ; [0x207f50:8]=0x1516
0x00001516      681e000000     push 0x1e
0x0000151b      e900feffff     jmp sym..plt
;-- imp.__freading:
0x00001520      ff25326a2000   jmp qword [reloc.__freading]            ; [0x207f58:8]=0x1526 ; "&\x15"
0x00001526      681f000000     push 0x1f
0x0000152b      e9f0fdffff     jmp sym..plt
;-- imp.realloc:
0x00001530      ff252a6a2000   jmp qword [reloc.realloc]               ; [0x207f60:8]=0x1536 ; "6\x15"
0x00001536      6820000000     push 0x20                               ; "@"
0x0000153b      e9e0fdffff     jmp sym..plt
;-- imp.setlocale:
0x00001540      ff25226a2000   jmp qword [reloc.setlocale]             ; [0x207f68:8]=0x1546 ; "F\x15"
0x00001546      6821000000     push 0x21                               ; '!'
0x0000154b      e9d0fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001550      ff251a6a2000   jmp qword [reloc.__printf_chk]          ; [0x207f70:8]=0x1556 ; "V\x15"
0x00001556      6822000000     push 0x22                               ; '"'
0x0000155b      e9c0fdffff     jmp sym..plt
;-- imp.error:
0x00001560      ff25126a2000   jmp qword [reloc.error]                 ; [0x207f78:8]=0x1566 ; "f\x15"
0x00001566      6823000000     push 0x23                               ; '#'
0x0000156b      e9b0fdffff     jmp sym..plt
;-- imp.fseeko:
0x00001570      ff250a6a2000   jmp qword [reloc.fseeko]                ; [0x207f80:8]=0x1576 ; "v\x15"
0x00001576      6824000000     push 0x24                               ; '$'
0x0000157b      e9a0fdffff     jmp sym..plt
;-- imp.execvp:
0x00001580      ff25026a2000   jmp qword [reloc.execvp]                ; [0x207f88:8]=0x1586
0x00001586      6825000000     push 0x25                               ; '%'
0x0000158b      e990fdffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001590      ff25fa692000   jmp qword [reloc.__cxa_atexit]          ; [0x207f90:8]=0x1596
0x00001596      6826000000     push 0x26                               ; '&'
0x0000159b      e980fdffff     jmp sym..plt
;-- imp.exit:
0x000015a0      ff25f2692000   jmp qword [reloc.exit]                  ; [0x207f98:8]=0x15a6
0x000015a6      6827000000     push 0x27                               ; '''
0x000015ab      e970fdffff     jmp sym..plt
;-- imp.fwrite:
0x000015b0      ff25ea692000   jmp qword [reloc.fwrite]                ; [0x207fa0:8]=0x15b6
0x000015b6      6828000000     push 0x28                               ; '('
0x000015bb      e960fdffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x000015c0      ff25e2692000   jmp qword [reloc.__fprintf_chk]         ; [0x207fa8:8]=0x15c6
0x000015c6      6829000000     push 0x29                               ; ')'
0x000015cb      e950fdffff     jmp sym..plt
;-- imp.mbsinit:
0x000015d0      ff25da692000   jmp qword [reloc.mbsinit]               ; [0x207fb0:8]=0x15d6
0x000015d6      682a000000     push 0x2a                               ; '*'
0x000015db      e940fdffff     jmp sym..plt
;-- imp.iswprint:
0x000015e0      ff25d2692000   jmp qword [reloc.iswprint]              ; [0x207fb8:8]=0x15e6
0x000015e6      682b000000     push 0x2b                               ; '+'
0x000015eb      e930fdffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x000015f0      ff25ca692000   jmp qword [reloc.__ctype_b_loc]         ; [0x207fc0:8]=0x15f6
0x000015f6      682c000000     push 0x2c                               ; ','
0x000015fb      e920fdffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001600      .qword 0x9066002069e225ff                              ; [13] -r-x section size 8 named .plt.got
0x00001608      0000           add byte [rax], al
0x0000160a      0000           add byte [rax], al
0x0000160c      0000           add byte [rax], al
0x0000160e      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x00001610      4156           push r14                                ; [14] -r-x section size 14686 named .text
0x00001612      4155           push r13
0x00001614      4154           push r12
0x00001616      55             push rbp
0x00001617      4189fc         mov r12d, edi
0x0000161a      53             push rbx
0x0000161b      4889f5         mov rbp, rsi
0x0000161e      bb01000000     mov ebx, 1
0x00001623      4883ec10       sub rsp, 0x10
0x00001627      488b3e         mov rdi, qword [rsi]
0x0000162a      64488b042528.  mov rax, qword fs:[0x28]
0x00001633      4889442408     mov qword [rsp + 8], rax
0x00001638      31c0           xor eax, eax
0x0000163a      e831090000     call sym.set_program_name
0x0000163f      488d35bb4300.  lea rsi, [0x00005a01]
0x00001646      bf06000000     mov edi, 6
0x0000164b      e8f0feffff     call sym.imp.setlocale
0x00001650      488d35d53900.  lea rsi, str.usr_local_share_locale     ; 0x502c ; "/usr/local/share/locale"
0x00001657      488d3da53900.  lea rdi, [0x00005003]                   ; "coreutils"
0x0000165e      e85dfdffff     call sym.imp.bindtextdomain
0x00001663      488d3d993900.  lea rdi, [0x00005003]                   ; "coreutils"
0x0000166a      e831fdffff     call sym.imp.textdomain
0x0000166f      488d3d4a0800.  lea rdi, sym.close_stdout               ; 0x1ec0 ; "USH\x83\xec\bH\x8b=\xbba "
0x00001676      c70598692000.  mov dword [obj.exit_failure], 0x7d      ; '}'
                                                                       ; [0x208018:4]=1
0x00001680      e8db380000     call sym.atexit
0x00001685      4183fc01       cmp r12d, 1
0x00001689      0f8e82010000   jle 0x1811
0x0000168f      4c8d2dea6420.  lea r13, obj.longopts                   ; 0x207b80
0x00001696      4531f6         xor r14d, r14d
0x00001699      4863c3         movsxd rax, ebx
0x0000169c      488d0cc50000.  lea rcx, [rax*8]
0x000016a4      488b44c500     mov rax, qword [rbp + rax*8]
0x000016a9      80382d         cmp byte [rax], 0x2d
0x000016ac      753a           jne 0x16e8
0x000016ae      0fb67001       movzx esi, byte [rax + 1]
0x000016b2      8d56d5         lea edx, [rsi - 0x2b]
0x000016b5      81e2fd000000   and edx, 0xfd
0x000016bb      0f94c2         sete dl
0x000016be      0fb6d2         movzx edx, dl
0x000016c1      83c201         add edx, 1
0x000016c4      4863d2         movsxd rdx, edx
0x000016c7      0fbe1410       movsx edx, byte [rax + rdx]
0x000016cb      83ea30         sub edx, 0x30
0x000016ce      83fa09         cmp edx, 9
0x000016d1      7715           ja 0x16e8
0x000016d3      4c8d7001       lea r14, [rax + 1]
0x000016d7      83c301         add ebx, 1
0x000016da      4439e3         cmp ebx, r12d
0x000016dd      7cba           jl 0x1699
0x000016df      eb5b           jmp 0x173c
0x000016e1      0f1f80000000.  nop dword [rax]
0x000016e8      488b4500       mov rax, qword [rbp]
0x000016ec      488d740df8     lea rsi, [rbp + rcx - 8]
0x000016f1      488d154c3900.  lea rdx, [0x00005044]                   ; "+n:"
0x000016f8      4489e7         mov edi, r12d
0x000016fb      4531c0         xor r8d, r8d
0x000016fe      4c89e9         mov rcx, r13
0x00001701      488906         mov qword [rsi], rax
0x00001704      8d43ff         lea eax, [rbx - 1]
0x00001707      c7057f692000.  mov dword [obj.optind], 0               ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x208090:4]=0
0x00001711      29c7           sub edi, eax
0x00001713      e8f8fcffff     call sym.imp.getopt_long
0x00001718      8b1572692000   mov edx, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x208090:4]=0
0x0000171e      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x00001723      8d5c13ff       lea ebx, [rbx + rdx - 1]
0x00001727      0f8463020000   je 0x1990
0x0000172d      0f8e8d000000   jle 0x17c0
0x00001733      83f8ff         cmp eax, 0xffffffff
0x00001736      0f85c4000000   jne 0x1800
0x0000173c      4d85f6         test r14, r14
0x0000173f      0f84cc000000   je 0x1811
0x00001745      4c8d05b54200.  lea r8, [0x00005a01]
0x0000174c      31f6           xor esi, esi
0x0000174e      4889e1         mov rcx, rsp
0x00001751      ba0a000000     mov edx, 0xa
0x00001756      4c89f7         mov rdi, r14
0x00001759      e8f22d0000     call sym.xstrtol
0x0000175e      83f801         cmp eax, 1
0x00001761      0f8735020000   ja 0x199c
0x00001767      488b0424       mov rax, qword [rsp]
0x0000176b      41bdd9ffffff   mov r13d, 0xffffffd9                    ; 4294967257
0x00001771      4883f8d9       cmp rax, 0xffffffffffffffd9
0x00001775      7c10           jl 0x1787
0x00001777      4883f827       cmp rax, 0x27
0x0000177b      ba27000000     mov edx, 0x27                           ; '''
0x00001780      480f4ed0       cmovle rdx, rax
0x00001784      4989d5         mov r13, rdx
0x00001787      4439e3         cmp ebx, r12d
0x0000178a      0f8598000000   jne 0x1828
0x00001790      488d35b93c00.  lea rsi, str.a_command_must_be_given_with_an_adjustment ; 0x5450 ; "a command must be given with an adjustment"
0x00001797      ba05000000     mov edx, 5
0x0000179c      31ff           xor edi, edi
0x0000179e      e82dfcffff     call sym.imp.dcgettext
0x000017a3      31f6           xor esi, esi
0x000017a5      4889c2         mov rdx, rax
0x000017a8      31ff           xor edi, edi
0x000017aa      31c0           xor eax, eax
0x000017ac      e8affdffff     call sym.imp.error
0x000017b1      bf7d000000     mov edi, 0x7d                           ; '}'
0x000017b6      e825030000     call sym.usage
0x000017bb      0f1f440000     nop dword [rax + rax]
0x000017c0      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x000017c5      75ea           jne 0x17b1
0x000017c7      488b3dba6820.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x000017ce      488b0d3b6820.  mov rcx, qword [obj.Version]            ; [0x208010:8]=0x547b str.8.31 ; "{T"
0x000017d5      4c8d056c3800.  lea r8, str.David_MacKenzie             ; 0x5048 ; "David MacKenzie"
0x000017dc      488d151c3800.  lea rdx, str.GNU_coreutils              ; 0x4fff ; "GNU coreutils"
0x000017e3      488d359a3700.  lea rsi, str.nice                       ; 0x4f84 ; "nice"
0x000017ea      4531c9         xor r9d, r9d
0x000017ed      31c0           xor eax, eax
0x000017ef      e86c290000     call sym.version_etc
0x000017f4      31ff           xor edi, edi
0x000017f6      e8a5fdffff     call sym.imp.exit
0x000017fb      0f1f440000     nop dword [rax + rax]
0x00001800      83f86e         cmp eax, 0x6e
0x00001803      75ac           jne 0x17b1
0x00001805      4c8b358c6820.  mov r14, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x208098:8]=0
0x0000180c      e9c9feffff     jmp 0x16da
0x00001811      e83afbffff     call sym.imp.__errno_location
0x00001816      4439e3         cmp ebx, r12d
0x00001819      4989c5         mov r13, rax
0x0000181c      0f840b010000   je 0x192d
0x00001822      41bd0a000000   mov r13d, 0xa
0x00001828      e823fbffff     call sym.imp.__errno_location
0x0000182d      31f6           xor esi, esi
0x0000182f      31ff           xor edi, edi
0x00001831      c70000000000   mov dword [rax], 0
0x00001837      4989c4         mov r12, rax
0x0000183a      e821fbffff     call sym.imp.getpriority
0x0000183f      83f8ff         cmp eax, 0xffffffff
0x00001842      752d           jne 0x1871
0x00001844      41833c2400     cmp dword [r12], 0
0x00001849      7426           je 0x1871
0x0000184b      488d351c3800.  lea rsi, str.cannot_get_niceness        ; 0x506e ; "cannot get niceness"
0x00001852      ba05000000     mov edx, 5
0x00001857      31ff           xor edi, edi
0x00001859      e872fbffff     call sym.imp.dcgettext
0x0000185e      418b3424       mov esi, dword [r12]
0x00001862      4889c2         mov rdx, rax
0x00001865      bf7d000000     mov edi, 0x7d                           ; '}'
0x0000186a      31c0           xor eax, eax
0x0000186c      e8effcffff     call sym.imp.error
0x00001871      428d1428       lea edx, [rax + r13]
0x00001875      31f6           xor esi, esi
0x00001877      31ff           xor edi, edi
0x00001879      e8f2fbffff     call sym.imp.setpriority
0x0000187e      85c0           test eax, eax
0x00001880      744b           je 0x18cd
0x00001882      488d35fd3700.  lea rsi, str.cannot_set_niceness        ; 0x5086 ; "cannot set niceness"
0x00001889      31ff           xor edi, edi
0x0000188b      ba05000000     mov edx, 5
0x00001890      e83bfbffff     call sym.imp.dcgettext
0x00001895      418b3424       mov esi, dword [r12]
0x00001899      83fe0d         cmp esi, 0xd
0x0000189c      0f84e7000000   je 0x1989
0x000018a2      83fe01         cmp esi, 1
0x000018a5      bf7d000000     mov edi, 0x7d                           ; '}'
0x000018aa      0f84d9000000   je 0x1989
0x000018b0      4889c2         mov rdx, rax
0x000018b3      31c0           xor eax, eax
0x000018b5      e8a6fcffff     call sym.imp.error
0x000018ba      488b05ff6720.  mov rax, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080c0:8]=0
0x000018c1      f60020         test byte [rax], 0x20
0x000018c4      7407           je 0x18cd
0x000018c6      bb7d000000     mov ebx, 0x7d                           ; '}'
0x000018cb      eb41           jmp 0x190e
0x000018cd      4863db         movsxd rbx, ebx
0x000018d0      488d6cdd00     lea rbp, [rbp + rbx*8]
0x000018d5      31db           xor ebx, ebx
0x000018d7      488b7d00       mov rdi, qword [rbp]
0x000018db      4889ee         mov rsi, rbp
0x000018de      e89dfcffff     call sym.imp.execvp
0x000018e3      41833c2402     cmp dword [r12], 2
0x000018e8      488b7d00       mov rdi, qword [rbp]
0x000018ec      0f94c3         sete bl
0x000018ef      e88c230000     call sym.quote
0x000018f4      418b3424       mov esi, dword [r12]
0x000018f8      488d15913b00.  lea rdx, [0x00005490]                   ; "%s"
0x000018ff      4889c1         mov rcx, rax
0x00001902      31ff           xor edi, edi
0x00001904      31c0           xor eax, eax
0x00001906      83c37e         add ebx, 0x7e
0x00001909      e852fcffff     call sym.imp.error
0x0000190e      488b4c2408     mov rcx, qword [rsp + 8]
0x00001913      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000191c      89d8           mov eax, ebx
0x0000191e      7577           jne 0x1997
0x00001920      4883c410       add rsp, 0x10
0x00001924      5b             pop rbx
0x00001925      5d             pop rbp
0x00001926      415c           pop r12
0x00001928      415d           pop r13
0x0000192a      415e           pop r14
0x0000192c      c3             ret
0x0000192d      31f6           xor esi, esi
0x0000192f      31ff           xor edi, edi
0x00001931      41c745000000.  mov dword [r13], 0
0x00001939      e822faffff     call sym.imp.getpriority
0x0000193e      83f8ff         cmp eax, 0xffffffff
0x00001941      752d           jne 0x1970
0x00001943      41837d0000     cmp dword [r13], 0
0x00001948      7426           je 0x1970
0x0000194a      488d351d3700.  lea rsi, str.cannot_get_niceness        ; 0x506e ; "cannot get niceness"
0x00001951      ba05000000     mov edx, 5
0x00001956      31ff           xor edi, edi
0x00001958      e873faffff     call sym.imp.dcgettext
0x0000195d      418b7500       mov esi, dword [r13]
0x00001961      4889c2         mov rdx, rax
0x00001964      bf7d000000     mov edi, 0x7d                           ; '}'
0x00001969      31c0           xor eax, eax
0x0000196b      e8f0fbffff     call sym.imp.error
0x00001970      488d350b3700.  lea rsi, [0x00005082]                   ; "%d\n"
0x00001977      89c2           mov edx, eax
0x00001979      bf01000000     mov edi, 1
0x0000197e      31c0           xor eax, eax
0x00001980      31db           xor ebx, ebx
0x00001982      e8c9fbffff     call sym.imp.__printf_chk
0x00001987      eb85           jmp 0x190e
0x00001989      31ff           xor edi, edi
0x0000198b      e920ffffff     jmp 0x18b0
0x00001990      31ff           xor edi, edi
0x00001992      e849010000     call sym.usage
0x00001997      e864faffff     call sym.imp.__stack_chk_fail
0x0000199c      4c89f7         mov rdi, r14
0x0000199f      e8dc220000     call sym.quote
0x000019a4      488d35ad3600.  lea rsi, str.invalid_adjustment__s      ; 0x5058 ; "invalid adjustment %s"
0x000019ab      4889c3         mov rbx, rax
0x000019ae      ba05000000     mov edx, 5
0x000019b3      31ff           xor edi, edi
0x000019b5      e816faffff     call sym.imp.dcgettext
0x000019ba      4889d9         mov rcx, rbx
0x000019bd      4889c2         mov rdx, rax
0x000019c0      31f6           xor esi, esi
0x000019c2      bf7d000000     mov edi, 0x7d                           ; '}'
0x000019c7      31c0           xor eax, eax
0x000019c9      e892fbffff     call sym.imp.error
0x000019ce      6690           nop
;-- entry0:
;-- _start:
;-- rip:
0x000019d0      31ed           xor ebp, ebp
0x000019d2      4989d1         mov r9, rdx
0x000019d5      5e             pop rsi
0x000019d6      4889e2         mov rdx, rsp
0x000019d9      4883e4f0       and rsp, 0xfffffffffffffff0
0x000019dd      50             push rax
0x000019de      54             push rsp
0x000019df      4c8d056a3500.  lea r8, sym.__libc_csu_fini             ; 0x4f50
0x000019e6      488d0df33400.  lea rcx, sym.__libc_csu_init            ; 0x4ee0 ; "AWAVI\x89\xd7AUATL\x8d%~, "
0x000019ed      488d3d1cfcff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1610 ; "AVAUATUA\x89\xfcSH\x89\xf5\xbb\x01"
0x000019f4      ff15d6652000   call qword [reloc.__libc_start_main]    ; [0x207fd0:8]=0
0x000019fa      f4             hlt
0x000019fb      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00001a00      488d3d796620.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x208080
0x00001a07      55             push rbp
0x00001a08      488d05716620.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x208080
0x00001a0f      4839f8         cmp rax, rdi
0x00001a12      4889e5         mov rbp, rsp
0x00001a15      7419           je 0x1a30
0x00001a17      488b05aa6520.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x207fc8:8]=0
0x00001a1e      4885c0         test rax, rax
0x00001a21      740d           je 0x1a30
0x00001a23      5d             pop rbp
0x00001a24      ffe0           jmp rax
0x00001a26      662e0f1f8400.  nop word cs:[rax + rax]
0x00001a30      5d             pop rbp
0x00001a31      c3             ret
0x00001a32      0f1f4000       nop dword [rax]
0x00001a36      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00001a40      488d3d396620.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x208080
0x00001a47      488d35326620.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x208080
0x00001a4e      55             push rbp
0x00001a4f      4829fe         sub rsi, rdi
0x00001a52      4889e5         mov rbp, rsp
0x00001a55      48c1fe03       sar rsi, 3
0x00001a59      4889f0         mov rax, rsi
0x00001a5c      48c1e83f       shr rax, 0x3f
0x00001a60      4801c6         add rsi, rax
0x00001a63      48d1fe         sar rsi, 1
0x00001a66      7418           je 0x1a80
0x00001a68      488b05716520.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x207fe0:8]=0
0x00001a6f      4885c0         test rax, rax
0x00001a72      740c           je 0x1a80
0x00001a74      5d             pop rbp
0x00001a75      ffe0           jmp rax
0x00001a77      660f1f840000.  nop word [rax + rax]
0x00001a80      5d             pop rbp
0x00001a81      c3             ret
0x00001a82      0f1f4000       nop dword [rax]
0x00001a86      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00001a90      803d31662000.  cmp byte [obj.completed.7697], 0        ; [0x2080c8:1]=0
0x00001a97      752f           jne 0x1ac8
0x00001a99      48833d476520.  cmp qword [reloc.__cxa_finalize], 0     ; [0x207fe8:8]=0
0x00001aa1      55             push rbp
0x00001aa2      4889e5         mov rbp, rsp
0x00001aa5      740c           je 0x1ab3
0x00001aa7      488b3d5a6520.  mov rdi, qword [obj.__dso_handle]       ; [0x208008:8]=0x208008 obj.__dso_handle
0x00001aae      e84dfbffff     call sym..plt.got
0x00001ab3      e848ffffff     call sym.deregister_tm_clones
0x00001ab8      c60509662000.  mov byte [obj.completed.7697], 1        ; [0x2080c8:1]=0
0x00001abf      5d             pop rbp
0x00001ac0      c3             ret
0x00001ac1      0f1f80000000.  nop dword [rax]
0x00001ac8      f3c3           ret
0x00001aca      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00001ad0      55             push rbp
0x00001ad1      4889e5         mov rbp, rsp
0x00001ad4      5d             pop rbp
0x00001ad5      e966ffffff     jmp sym.register_tm_clones
0x00001ada      660f1f440000   nop word [rax + rax]
;-- usage:
0x00001ae0      4155           push r13
0x00001ae2      4154           push r12
0x00001ae4      ba05000000     mov edx, 5
0x00001ae9      55             push rbp
0x00001aea      53             push rbx
0x00001aeb      89fd           mov ebp, edi
0x00001aed      4881ec880000.  sub rsp, 0x88
0x00001af4      488b1de56520.  mov rbx, qword [obj.program_name]       ; [0x2080e0:8]=0
0x00001afb      64488b042528.  mov rax, qword fs:[0x28]
0x00001b04      4889442478     mov qword [rsp + 0x78], rax
0x00001b09      31c0           xor eax, eax
0x00001b0b      85ff           test edi, edi
0x00001b0d      742e           je 0x1b3d
0x00001b0f      488d35a23500.  lea rsi, str.Try___s___help__for_more_information. ; 0x50b8 ; "Try '%s --help' for more information.\n"
0x00001b16      31ff           xor edi, edi
0x00001b18      e8b3f8ffff     call sym.imp.dcgettext
0x00001b1d      488b3d9c6520.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080c0:8]=0
0x00001b24      4889c2         mov rdx, rax
0x00001b27      4889d9         mov rcx, rbx
0x00001b2a      be01000000     mov esi, 1
0x00001b2f      31c0           xor eax, eax
0x00001b31      e88afaffff     call sym.imp.__fprintf_chk
0x00001b36      89ef           mov edi, ebp
0x00001b38      e863faffff     call sym.imp.exit
0x00001b3d      488d359c3500.  lea rsi, str.Usage:__s__OPTION___COMMAND__ARG_... ; 0x50e0 ; "Usage: %s [OPTION] [COMMAND [ARG]...]\n"
0x00001b44      31ff           xor edi, edi
0x00001b46      e885f8ffff     call sym.imp.dcgettext
0x00001b4b      4889da         mov rdx, rbx
0x00001b4e      4889c6         mov rsi, rax
0x00001b51      bf01000000     mov edi, 1
0x00001b56      31c0           xor eax, eax
0x00001b58      e8f3f9ffff     call sym.imp.__printf_chk
0x00001b5d      488d35a43500.  lea rsi, str.Run_COMMAND_with_an_adjusted_niceness__which_affects_process_scheduling.__With_no_COMMAND__print_the_current_niceness.__Niceness_values_range_from___d__most_favorable_to_the_process__to__d__least_favorable_to_the_process_. ; 0x5108 ; "Run COMMAND with an adjusted niceness, which affects process scheduling.\nWith no COMMAND, print the current niceness.  Niceness values range from\n%d (most favorable to the process) to %d (least favorable to the process).\n"
0x00001b64      ba05000000     mov edx, 5
0x00001b69      31ff           xor edi, edi
0x00001b6b      e860f8ffff     call sym.imp.dcgettext
0x00001b70      b913000000     mov ecx, 0x13
0x00001b75      4889c6         mov rsi, rax
0x00001b78      baecffffff     mov edx, 0xffffffec                     ; 4294967276
0x00001b7d      bf01000000     mov edi, 1
0x00001b82      31c0           xor eax, eax
0x00001b84      e8c7f9ffff     call sym.imp.__printf_chk
0x00001b89      488b1df86420.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00001b90      488d35513600.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0x51e8 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x00001b97      ba05000000     mov edx, 5
0x00001b9c      31ff           xor edi, edi
0x00001b9e      e82df8ffff     call sym.imp.dcgettext
0x00001ba3      4889de         mov rsi, rbx
0x00001ba6      4889c7         mov rdi, rax
0x00001ba9      e8f2f8ffff     call sym.imp.fputs_unlocked
0x00001bae      488b1dd36420.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00001bb5      488d357c3600.  lea rsi, str.n____adjustment_N___add_integer_N_to_the_niceness__default_10 ; 0x5238 ; "  -n, --adjustment=N   add integer N to the niceness (default 10)\n"
0x00001bbc      ba05000000     mov edx, 5
0x00001bc1      31ff           xor edi, edi
0x00001bc3      e808f8ffff     call sym.imp.dcgettext
0x00001bc8      4889de         mov rsi, rbx
0x00001bcb      4889c7         mov rdi, rax
0x00001bce      e8cdf8ffff     call sym.imp.fputs_unlocked
0x00001bd3      488b1dae6420.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00001bda      488d359f3600.  lea rsi, str.help_____display_this_help_and_exit ; 0x5280 ; "      --help     display this help and exit\n"
0x00001be1      ba05000000     mov edx, 5
0x00001be6      31ff           xor edi, edi
0x00001be8      e8e3f7ffff     call sym.imp.dcgettext
0x00001bed      4889de         mov rsi, rbx
0x00001bf0      4889c7         mov rdi, rax
0x00001bf3      e8a8f8ffff     call sym.imp.fputs_unlocked
0x00001bf8      488b1d896420.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00001bff      488d35aa3600.  lea rsi, str.version__output_version_information_and_exit ; 0x52b0 ; "      --version  output version information and exit\n"
0x00001c06      ba05000000     mov edx, 5
0x00001c0b      31ff           xor edi, edi
0x00001c0d      e8bef7ffff     call sym.imp.dcgettext
0x00001c12      4889de         mov rsi, rbx
0x00001c15      4889c7         mov rdi, rax
0x00001c18      488d1d653300.  lea rbx, str.nice                       ; 0x4f84 ; "nice"
0x00001c1f      e87cf8ffff     call sym.imp.fputs_unlocked
0x00001c24      488d35bd3600.  lea rsi, str.NOTE:_your_shell_may_have_its_own_version_of__s__which_usually_supersedes__the_version_described_here.__Please_refer_to_your_shell_s_documentation__for_details_about_the_options_it_supports. ; 0x52e8 ; "\nNOTE: your shell may have its own version of %s, which usually supersedes\nthe version described here.  Please refer to your shell's documentation\nfor details about the options it supports.\n"
0x00001c2b      ba05000000     mov edx, 5
0x00001c30      31ff           xor edi, edi
0x00001c32      e899f7ffff     call sym.imp.dcgettext
0x00001c37      488d15463300.  lea rdx, str.nice                       ; 0x4f84 ; "nice"
0x00001c3e      4889c6         mov rsi, rax
0x00001c41      bf01000000     mov edi, 1
0x00001c46      31c0           xor eax, eax
0x00001c48      e803f9ffff     call sym.imp.__printf_chk
0x00001c4d      488d05353300.  lea rax, [0x00004f89]                   ; "["
0x00001c54      488d0d6f3300.  lea rcx, str.sha256sum                  ; 0x4fca ; "sha256sum"
0x00001c5b      48c744246000.  mov qword [rsp + 0x60], 0
0x00001c64      48c744246800.  mov qword [rsp + 0x68], 0
0x00001c6d      4889e2         mov rdx, rsp
0x00001c70      48890424       mov qword [rsp], rax
0x00001c74      488d05103300.  lea rax, str.test_invocation            ; 0x4f8b ; "test invocation"
0x00001c7b      48894c2430     mov qword [rsp + 0x30], rcx
0x00001c80      488d0d4d3300.  lea rcx, str.sha384sum                  ; 0x4fd4 ; "sha384sum"
0x00001c87      4889442408     mov qword [rsp + 8], rax
0x00001c8c      488d05703300.  lea rax, [0x00005003]                   ; "coreutils"
0x00001c93      48894c2440     mov qword [rsp + 0x40], rcx
0x00001c98      488d0d3f3300.  lea rcx, str.sha512sum                  ; 0x4fde ; "sha512sum"
0x00001c9f      4889442410     mov qword [rsp + 0x10], rax
0x00001ca4      488d05f03200.  lea rax, str.Multi_call_invocation      ; 0x4f9b ; "Multi-call invocation"
0x00001cab      48894c2450     mov qword [rsp + 0x50], rcx
0x00001cb0      4889442418     mov qword [rsp + 0x18], rax
0x00001cb5      488d05f53200.  lea rax, str.sha224sum                  ; 0x4fb1 ; "sha224sum"
0x00001cbc      4889442420     mov qword [rsp + 0x20], rax
0x00001cc1      488d05f33200.  lea rax, str.sha2_utilities             ; 0x4fbb ; "sha2 utilities"
0x00001cc8      4889442428     mov qword [rsp + 0x28], rax
0x00001ccd      4889442438     mov qword [rsp + 0x38], rax
0x00001cd2      4889442448     mov qword [rsp + 0x48], rax
0x00001cd7      4889442458     mov qword [rsp + 0x58], rax
0x00001cdc      0f1f4000       nop dword [rax]
0x00001ce0      4883c210       add rdx, 0x10
0x00001ce4      488b3a         mov rdi, qword [rdx]
0x00001ce7      4885ff         test rdi, rdi
0x00001cea      7413           je 0x1cff
0x00001cec      b905000000     mov ecx, 5
0x00001cf1      4889de         mov rsi, rbx
0x00001cf4      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001cf6      0f97c0         seta al
0x00001cf9      1c00           sbb al, 0
0x00001cfb      84c0           test al, al
0x00001cfd      75e1           jne 0x1ce0
0x00001cff      4c8b6208       mov r12, qword [rdx + 8]
0x00001d03      31ff           xor edi, edi
0x00001d05      ba05000000     mov edx, 5
0x00001d0a      488d35d73200.  lea rsi, str.s_online_help:___s         ; 0x4fe8 ; "\n%s online help: <%s>\n"
0x00001d11      4d85e4         test r12, r12
0x00001d14      0f84c1000000   je 0x1ddb
0x00001d1a      e8b1f6ffff     call sym.imp.dcgettext
0x00001d1f      488d0d823600.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x53a8 ; "https://www.gnu.org/software/coreutils/"
0x00001d26      488d15d23200.  lea rdx, str.GNU_coreutils              ; 0x4fff ; "GNU coreutils"
0x00001d2d      4889c6         mov rsi, rax
0x00001d30      bf01000000     mov edi, 1
0x00001d35      31c0           xor eax, eax
0x00001d37      e814f8ffff     call sym.imp.__printf_chk
0x00001d3c      31f6           xor esi, esi
0x00001d3e      bf05000000     mov edi, 5
0x00001d43      e8f8f7ffff     call sym.imp.setlocale
0x00001d48      4885c0         test rax, rax
0x00001d4b      741c           je 0x1d69
0x00001d4d      488d35b93200.  lea rsi, [0x0000500d]                   ; "en_"
0x00001d54      ba03000000     mov edx, 3
0x00001d59      4889c7         mov rdi, rax
0x00001d5c      e80ff6ffff     call sym.imp.strncmp
0x00001d61      85c0           test eax, eax
0x00001d63      0f8507010000   jne 0x1e70
0x00001d69      488d35a13200.  lea rsi, str.Full_documentation___s_s   ; 0x5011 ; "Full documentation <%s%s>\n"
0x00001d70      31ff           xor edi, edi
0x00001d72      ba05000000     mov edx, 5
0x00001d77      e854f6ffff     call sym.imp.dcgettext
0x00001d7c      488d0d013200.  lea rcx, str.nice                       ; 0x4f84 ; "nice"
0x00001d83      488d151e3600.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x53a8 ; "https://www.gnu.org/software/coreutils/"
0x00001d8a      4889c6         mov rsi, rax
0x00001d8d      bf01000000     mov edi, 1
0x00001d92      31c0           xor eax, eax
0x00001d94      e8b7f7ffff     call sym.imp.__printf_chk
0x00001d99      4939dc         cmp r12, rbx
0x00001d9c      488d0d023200.  lea rcx, [0x00004fa5]                   ; " invocation"
0x00001da3      488d1d573c00.  lea rbx, [0x00005a01]
0x00001daa      480f44d9       cmove rbx, rcx
0x00001dae      488d35633600.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x5418 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00001db5      31ff           xor edi, edi
0x00001db7      ba05000000     mov edx, 5
0x00001dbc      e80ff6ffff     call sym.imp.dcgettext
0x00001dc1      4889d9         mov rcx, rbx
0x00001dc4      4889c6         mov rsi, rax
0x00001dc7      4c89e2         mov rdx, r12
0x00001dca      bf01000000     mov edi, 1
0x00001dcf      31c0           xor eax, eax
0x00001dd1      e87af7ffff     call sym.imp.__printf_chk
0x00001dd6      e95bfdffff     jmp 0x1b36
0x00001ddb      e8f0f5ffff     call sym.imp.dcgettext
0x00001de0      488d0dc13500.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x53a8 ; "https://www.gnu.org/software/coreutils/"
0x00001de7      488d15113200.  lea rdx, str.GNU_coreutils              ; 0x4fff ; "GNU coreutils"
0x00001dee      4889c6         mov rsi, rax
0x00001df1      bf01000000     mov edi, 1
0x00001df6      31c0           xor eax, eax
0x00001df8      e853f7ffff     call sym.imp.__printf_chk
0x00001dfd      31f6           xor esi, esi
0x00001dff      bf05000000     mov edi, 5
0x00001e04      e837f7ffff     call sym.imp.setlocale
0x00001e09      4885c0         test rax, rax
0x00001e0c      7418           je 0x1e26
0x00001e0e      488d35f83100.  lea rsi, [0x0000500d]                   ; "en_"
0x00001e15      ba03000000     mov edx, 3
0x00001e1a      4889c7         mov rdi, rax
0x00001e1d      e84ef5ffff     call sym.imp.strncmp
0x00001e22      85c0           test eax, eax
0x00001e24      7543           jne 0x1e69
0x00001e26      488d35e43100.  lea rsi, str.Full_documentation___s_s   ; 0x5011 ; "Full documentation <%s%s>\n"
0x00001e2d      ba05000000     mov edx, 5
0x00001e32      31ff           xor edi, edi
0x00001e34      4c8d25493100.  lea r12, str.nice                       ; 0x4f84 ; "nice"
0x00001e3b      488d1d633100.  lea rbx, [0x00004fa5]                   ; " invocation"
0x00001e42      e889f5ffff     call sym.imp.dcgettext
0x00001e47      488d0d363100.  lea rcx, str.nice                       ; 0x4f84 ; "nice"
0x00001e4e      488d15533500.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x53a8 ; "https://www.gnu.org/software/coreutils/"
0x00001e55      4889c6         mov rsi, rax
0x00001e58      bf01000000     mov edi, 1
0x00001e5d      31c0           xor eax, eax
0x00001e5f      e8ecf6ffff     call sym.imp.__printf_chk
0x00001e64      e945ffffff     jmp 0x1dae
0x00001e69      4c8d25143100.  lea r12, str.nice                       ; 0x4f84 ; "nice"
0x00001e70      4c8b2d116220.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00001e77      488d35523500.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x53d0 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x00001e7e      31ff           xor edi, edi
0x00001e80      ba05000000     mov edx, 5
0x00001e85      e846f5ffff     call sym.imp.dcgettext
0x00001e8a      4c89ee         mov rsi, r13
0x00001e8d      4889c7         mov rdi, rax
0x00001e90      e80bf6ffff     call sym.imp.fputs_unlocked
0x00001e95      e9cffeffff     jmp 0x1d69
0x00001e9a      660f1f440000   nop word [rax + rax]
;-- close_stdout_set_file_name:
0x00001ea0      48893d316220.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x2080d8:8]=0
0x00001ea7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00001ea8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00001eb0      40883d196220.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x2080d0:1]=0
0x00001eb7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00001eb8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00001ec0      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00001ec1      53             push rbx
0x00001ec2      4883ec08       sub rsp, 8
0x00001ec6      488b3dbb6120.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x00001ecd      e8ce2d0000     call sym.close_stream
0x00001ed2      85c0           test eax, eax
0x00001ed4      7416           je 0x1eec
0x00001ed6      e875f4ffff     call sym.imp.__errno_location
0x00001edb      803dee612000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x2080d0:1]=0
0x00001ee2      4889c3         mov rbx, rax
0x00001ee5      741c           je 0x1f03
0x00001ee7      833820         cmp dword [rax], 0x20
0x00001eea      7517           jne 0x1f03
0x00001eec      488b3dcd6120.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080c0:8]=0
0x00001ef3      e8a82d0000     call sym.close_stream
0x00001ef8      85c0           test eax, eax
0x00001efa      7546           jne 0x1f42
0x00001efc      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00001f00      5b             pop rbx
0x00001f01      5d             pop rbp
0x00001f02      c3             ret
0x00001f03      488d35763500.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x5480 ; "write error"
0x00001f0a      31ff           xor edi, edi
0x00001f0c      ba05000000     mov edx, 5
0x00001f11      e8baf4ffff     call sym.imp.dcgettext
0x00001f16      488b3dbb6120.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x2080d8:8]=0
0x00001f1d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00001f20      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00001f23      7428           je 0x1f4d
0x00001f25      e8561b0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x00001f2a      8b33           mov esi, dword [rbx]
0x00001f2c      488d15593500.  lea rdx, str.s:__s                      ; 0x548c ; "%s: %s"
0x00001f33      4889c1         mov rcx, rax
0x00001f36      4989e8         mov r8, rbp
0x00001f39      31ff           xor edi, edi
0x00001f3b      31c0           xor eax, eax
0x00001f3d      e81ef6ffff     call sym.imp.error
0x00001f42      8b3dd0602000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x208018:4]=1
0x00001f48      e833f4ffff     call sym.imp._exit
0x00001f4d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x00001f4f      488d153a3500.  lea rdx, [0x00005490]                   ; "%s"
0x00001f56      4889c1         mov rcx, rax
0x00001f59      31ff           xor edi, edi
0x00001f5b      31c0           xor eax, eax
0x00001f5d      e8fef5ffff     call sym.imp.error
0x00001f62      ebde           jmp 0x1f42
0x00001f64      662e0f1f8400.  nop word cs:[rax + rax]
0x00001f6e      6690           nop
;-- set_program_name:
0x00001f70      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00001f73      53             push rbx
0x00001f74      7477           je 0x1fed                               ; ../coreutils-8.31/lib/progname.c:51
0x00001f76      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x00001f7b      4889fb         mov rbx, rdi
0x00001f7e      e8bdf4ffff     call sym.imp.strrchr
0x00001f83      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00001f86      7455           je 0x1fdd
0x00001f88      4c8d4001       lea r8, [rax + 1]
0x00001f8c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x00001f8f      4829da         sub rdx, rbx
0x00001f92      4883fa06       cmp rdx, 6
0x00001f96      7e45           jle 0x1fdd
0x00001f98      488d70fa       lea rsi, [rax - 6]
0x00001f9c      488d3d2d3500.  lea rdi, str..libs                      ; 0x54d0 ; "/.libs/"
0x00001fa3      b907000000     mov ecx, 7
0x00001fa8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001faa      0f97c2         seta dl
0x00001fad      80da00         sbb dl, 0
0x00001fb0      84d2           test dl, dl
0x00001fb2      7529           jne 0x1fdd
0x00001fb4      488d3d1d3500.  lea rdi, [0x000054d8]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x00001fbb      b903000000     mov ecx, 3
0x00001fc0      4c89c6         mov rsi, r8
0x00001fc3      4c89c3         mov rbx, r8
0x00001fc6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001fc8      0f97c2         seta dl
0x00001fcb      80da00         sbb dl, 0
0x00001fce      84d2           test dl, dl
0x00001fd0      750b           jne 0x1fdd
0x00001fd2      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00001fd6      48891da36020.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x208080:8]=0
0x00001fdd      48891dfc6020.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x2080e0:8]=0
0x00001fe4      48891db56020.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x2080a0:8]=0
0x00001feb      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x00001fec      c3             ret
0x00001fed      488b0dcc6020.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080c0:8]=0
0x00001ff4      488d3d9d3400.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x5498 ; "A NULL argv[0] was passed through an exec system call.\n"
0x00001ffb      ba37000000     mov edx, 0x37                           ; '7'
0x00002000      be01000000     mov esi, 1
0x00002005      e8a6f5ffff     call sym.imp.fwrite
0x0000200a      e831f3ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x0000200f      90             nop
;-- gettext_quote.part.1:
0x00002010      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00002011      53             push rbx
0x00002012      4889fd         mov rbp, rdi
0x00002015      89f3           mov ebx, esi
0x00002017      4883ec08       sub rsp, 8
0x0000201b      e8602d0000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00002020      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00002023      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002026      80fa55         cmp dl, 0x55
0x00002029      7475           je 0x20a0
0x0000202b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x0000202e      7420           je 0x2050
0x00002030      488d05b43400.  lea rax, str.l______l                   ; 0x54eb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\U020103d9\u53ff\uffcc\u28ff\uffdc\u34ff\uffda\u24ff\uffd8\u80ff\uffd8\ud5ff\uffd8\u1aff\uffd9\u54ff\uffd9\u54ff\uffd9\u54ff\uffd9\ua4ff\uffcf\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\ue4ff\uffcf\uecff\uffce\uacff\uffce\u74ff\uffd0\u64ff\uffd0\u54ff\uffd0\u44ff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u34ff\uffd0\u24ff\uffd0\u24ff\uffd0\uf4ff\uffcf\u24ff\uffd0\uccff\uffcf\u24ff\uffd0\u87ff\uffce\u24ff\uffd0\u24ff\uffd0\u24ff\uffd0\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\u24ff\uffd0\u24ff\uffd0\u24ff\uffd0\u24ff\uffd0\u57ff\uffce\u8cff\uffd0\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\u24ff\uffd0\ufcff\uffce\uccff\uffcf\u24ff\uffd0\uccff\uffcf\u24ff\uffd0\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\u87ff\uffcd\u24ff\uffd0\u87ff\uffcd\uf4ff\uffcf\u78ff\uffcf\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u68ff\uffcf\ub8ff\uffd0\ua0ff\uffd0\u50ff\uffcf\u90ff\uffd0\u38ff\uffcf\u78ff\uffd0\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u60ff\uffd0\u48ff\uffd0\u48ff\uffd0\u30ff\uffd0\u48ff\uffd0\u18ff\uffd0\u48ff\uffd0\u88ff\uffcc\u48ff\uffd0\u48ff\uffd0\u48ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u48ff\uffd0\u48ff\uffd0\u48ff\uffd0\u48ff\uffd0\u58ff\uffcc\u88ff\uffce\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u48ff\uffd0\u18ff\uffcf\u18ff\uffd0\u48ff\uffd0\u18ff\uffd0\u48ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u88ff\uffcb\u48ff\uffd0\u88ff\uffcb\u30ff\uffd0\xff"
0x00002037      488d15af3400.  lea rdx, [0x000054ed]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\U020103d9\u53ff\uffcc\u28ff\uffdc\u34ff\uffda\u24ff\uffd8\u80ff\uffd8\ud5ff\uffd8\u1aff\uffd9\u54ff\uffd9\u54ff\uffd9\u54ff\uffd9"
0x0000203e      83fb09         cmp ebx, 9
0x00002041      480f45c2       cmovne rax, rdx
0x00002045      4883c408       add rsp, 8
0x00002049      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x0000204a      5d             pop rbp
0x0000204b      c3             ret
0x0000204c      0f1f4000       nop dword [rax]
0x00002050      0fb65001       movzx edx, byte [rax + 1]
0x00002054      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002057      80fa42         cmp dl, 0x42
0x0000205a      75d4           jne 0x2030
0x0000205c      80780231       cmp byte [rax + 2], 0x31
0x00002060      75ce           jne 0x2030
0x00002062      80780338       cmp byte [rax + 3], 0x38
0x00002066      75c8           jne 0x2030
0x00002068      80780430       cmp byte [rax + 4], 0x30
0x0000206c      75c2           jne 0x2030
0x0000206e      80780533       cmp byte [rax + 5], 0x33
0x00002072      75bc           jne 0x2030
0x00002074      80780630       cmp byte [rax + 6], 0x30
0x00002078      75b6           jne 0x2030
0x0000207a      80780700       cmp byte [rax + 7], 0
0x0000207e      75b0           jne 0x2030
0x00002080      807d0060       cmp byte [rbp], 0x60
0x00002084      488d05593400.  lea rax, [0x000054e4]
0x0000208b      488d15563400.  lea rdx, [0x000054e8]
0x00002092      480f45c2       cmovne rax, rdx
0x00002096      4883c408       add rsp, 8
0x0000209a      5b             pop rbx
0x0000209b      5d             pop rbp
0x0000209c      c3             ret
0x0000209d      0f1f00         nop dword [rax]
0x000020a0      0fb65001       movzx edx, byte [rax + 1]
0x000020a4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000020a7      80fa54         cmp dl, 0x54
0x000020aa      7584           jne 0x2030
0x000020ac      0fb65002       movzx edx, byte [rax + 2]
0x000020b0      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000020b3      80fa46         cmp dl, 0x46
0x000020b6      0f8574ffffff   jne 0x2030
0x000020bc      8078032d       cmp byte [rax + 3], 0x2d
0x000020c0      0f856affffff   jne 0x2030
0x000020c6      80780438       cmp byte [rax + 4], 0x38
0x000020ca      0f8560ffffff   jne 0x2030
0x000020d0      80780500       cmp byte [rax + 5], 0
0x000020d4      0f8556ffffff   jne 0x2030
0x000020da      807d0060       cmp byte [rbp], 0x60
0x000020de      488d05f73300.  lea rax, [0x000054dc]                   ; "\u2018"
0x000020e5      488d15f43300.  lea rdx, [0x000054e0]                   ; "\u2019"
0x000020ec      480f45c2       cmovne rax, rdx
0x000020f0      4883c408       add rsp, 8
0x000020f4      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x000020f5      5d             pop rbp
0x000020f6      c3             ret
0x000020f7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00002100      4157           push r15
0x00002102      4156           push r14
0x00002104      4589c7         mov r15d, r8d
0x00002107      4155           push r13
0x00002109      4154           push r12
0x0000210b      4989fe         mov r14, rdi
0x0000210e      55             push rbp
0x0000210f      53             push rbx
0x00002110      4489cb         mov ebx, r9d
0x00002113      4989f5         mov r13, rsi
0x00002116      4889cd         mov rbp, rcx
0x00002119      83e302         and ebx, 2
0x0000211c      4881ecb80000.  sub rsp, 0xb8
0x00002123      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x0000212b      4889542410     mov qword [rsp + 0x10], rdx
0x00002130      4489442408     mov dword [rsp + 8], r8d
0x00002135      44894c2478     mov dword [rsp + 0x78], r9d
0x0000213a      4889442420     mov qword [rsp + 0x20], rax
0x0000213f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00002147      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x0000214c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00002154      4889442460     mov qword [rsp + 0x60], rax
0x00002159      64488b042528.  mov rax, qword fs:[0x28]
0x00002162      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000216a      31c0           xor eax, eax
0x0000216c      e86ff2ffff     call sym.imp.__ctype_get_mb_cur_max
0x00002171      4183ff0a       cmp r15d, 0xa
0x00002175      4889442458     mov qword [rsp + 0x58], rax
0x0000217a      0f87af110000   ja 0x332f
0x00002180      488d0db93300.  lea rcx, [0x00005540]
0x00002187      4489fa         mov edx, r15d
0x0000218a      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000218e      4801c8         add rax, rcx
0x00002191      ffe0           jmp rax
0x00002193      c644240e01     mov byte [rsp + 0xe], 1
0x00002198      c644247c00     mov byte [rsp + 0x7c], 0
0x0000219d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x000021a0      48c744245000.  mov qword [rsp + 0x50], 0
0x000021a9      c644240f01     mov byte [rsp + 0xf], 1
0x000021ae      c644240d00     mov byte [rsp + 0xd], 0
0x000021b3      488d05333300.  lea rax, [0x000054ed]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\U020103d9\u53ff\uffcc\u28ff\uffdc\u34ff\uffda\u24ff\uffd8\u80ff\uffd8\ud5ff\uffd8\u1aff\uffd9\u54ff\uffd9\u54ff\uffd9\u54ff\uffd9"
0x000021ba      48c744241801.  mov qword [rsp + 0x18], 1
0x000021c3      4531ff         xor r15d, r15d
0x000021c6      c74424080200.  mov dword [rsp + 8], 2
0x000021ce      4889442448     mov qword [rsp + 0x48], rax
0x000021d3      4531db         xor r11d, r11d
0x000021d6      4889e8         mov rax, rbp
0x000021d9      4589e0         mov r8d, r12d
0x000021dc      4c89dd         mov rbp, r11
0x000021df      4989c3         mov r11, rax
0x000021e2      660f1f440000   nop word [rax + rax]
0x000021e8      4939eb         cmp r11, rbp
0x000021eb      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x000021ef      4983fbff       cmp r11, 0xffffffffffffffff
0x000021f3      750d           jne 0x2202
0x000021f5      488b442410     mov rax, qword [rsp + 0x10]
0x000021fa      803c2800       cmp byte [rax + rbp], 0
0x000021fe      410f95c4       setne r12b
0x00002202      4584e4         test r12b, r12b
0x00002205      0f8455060000   je 0x2860
0x0000220b      837c240802     cmp dword [rsp + 8], 2
0x00002210      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002215      4c8d0c2f       lea r9, [rdi + rbp]
0x00002219      0f95c0         setne al
0x0000221c      2244240d       and al, byte [rsp + 0xd]
0x00002220      4189c2         mov r10d, eax
0x00002223      0f84a7000000   je 0x22d0
0x00002229      488b442418     mov rax, qword [rsp + 0x18]
0x0000222e      4885c0         test rax, rax
0x00002231      0f8429040000   je 0x2660
0x00002237      4983fbff       cmp r11, 0xffffffffffffffff
0x0000223b      488d5c0500     lea rbx, [rbp + rax]
0x00002240      752e           jne 0x2270
0x00002242      4883f801       cmp rax, 1
0x00002246      7628           jbe 0x2270
0x00002248      4488442438     mov byte [rsp + 0x38], r8b
0x0000224d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00002252      4c894c2428     mov qword [rsp + 0x28], r9
0x00002257      e894f1ffff     call sym.imp.strlen
0x0000225c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00002262      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00002268      4989c3         mov r11, rax
0x0000226b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00002270      4c39db         cmp rbx, r11
0x00002273      4488542428     mov byte [rsp + 0x28], r10b
0x00002278      0f87b2050000   ja 0x2830
0x0000227e      488b542418     mov rdx, qword [rsp + 0x18]
0x00002283      488b742448     mov rsi, qword [rsp + 0x48]
0x00002288      4c89cf         mov rdi, r9
0x0000228b      4c895c2440     mov qword [rsp + 0x40], r11
0x00002290      4488442438     mov byte [rsp + 0x38], r8b
0x00002295      4c894c2430     mov qword [rsp + 0x30], r9
0x0000229a      e8f1f1ffff     call sym.imp.memcmp
0x0000229f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x000022a1      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000022a6      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x000022ac      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x000022b1      0f8579050000   jne 0x2830
0x000022b7      807c240f00     cmp byte [rsp + 0xf], 0
0x000022bc      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x000022c2      0f857d0f0000   jne 0x3245
0x000022c8      0f1f84000000.  nop dword [rax + rax]
0x000022d0      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x000022d4      80fb7e         cmp bl, 0x7e
0x000022d7      0f871b030000   ja 0x25f8
0x000022dd      488d0d883200.  lea rcx, [0x0000556c]
0x000022e4      0fb6d3         movzx edx, bl
0x000022e7      48630491       movsxd rax, dword [rcx + rdx*4]
0x000022eb      4801c8         add rax, rcx
0x000022ee      ffe0           jmp rax
0x000022f0      4531d2         xor r10d, r10d
0x000022f3      4983fb01       cmp r11, 1
0x000022f7      0f95c0         setne al
0x000022fa      4983fbff       cmp r11, 0xffffffffffffffff
0x000022fe      750c           jne 0x230c
0x00002300      488b442410     mov rax, qword [rsp + 0x10]
0x00002305      80780100       cmp byte [rax + 1], 0
0x00002309      0f95c0         setne al
0x0000230c      837c240802     cmp dword [rsp + 8], 2
0x00002311      0f94c2         sete dl
0x00002314      84c0           test al, al
0x00002316      0f844c020000   je 0x2568
0x0000231c      4531e4         xor r12d, r12d
0x0000231f      31c0           xor eax, eax
0x00002321      0f1f80000000.  nop dword [rax]
0x00002328      807c240d01     cmp byte [rsp + 0xd], 1
0x0000232d      0f850f010000   jne 0x2442
0x00002333      84d2           test dl, dl
0x00002335      0f8507010000   jne 0x2442
0x0000233b      488b742420     mov rsi, qword [rsp + 0x20]
0x00002340      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00002343      7414           je 0x2359
0x00002345      89da           mov edx, ebx
0x00002347      c0ea05         shr dl, 5
0x0000234a      0fb6d2         movzx edx, dl
0x0000234d      8b1496         mov edx, dword [rsi + rdx*4]
0x00002350      0fa3da         bt edx, ebx
0x00002353      0f824a010000   jb 0x24a3
0x00002359      4584d2         test r10b, r10b
0x0000235c      0f8541010000   jne 0x24a3
0x00002362      83f001         xor eax, 1
0x00002365      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00002369      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x0000236c      84c0           test al, al
0x0000236e      7420           je 0x2390                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00002370      4d39fd         cmp r13, r15
0x00002373      7605           jbe 0x237a
0x00002375      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000237a      498d4701       lea rax, [r15 + 1]
0x0000237e      4939c5         cmp r13, rax
0x00002381      7606           jbe 0x2389
0x00002383      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00002389      4983c702       add r15, 2
0x0000238d      4531c0         xor r8d, r8d
0x00002390      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00002393      7304           jae 0x2399                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00002395      43881c3e       mov byte [r14 + r15], bl
0x00002399      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x0000239e      4983c701       add r15, 1
0x000023a2      b800000000     mov eax, 0
0x000023a7      4584e4         test r12b, r12b
0x000023aa      0f44f8         cmove edi, eax
0x000023ad      40887c240e     mov byte [rsp + 0xe], dil
0x000023b2      e931feffff     jmp 0x21e8
0x000023b7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x000023c0      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x000023c3      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x000023c7      83f802         cmp eax, 2
0x000023ca      0f84b8050000   je 0x2988
0x000023d0      83f805         cmp eax, 5
0x000023d3      0f846f050000   je 0x2948
0x000023d9      83f802         cmp eax, 2
0x000023dc      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000023e1      0f94c2         sete dl
0x000023e4      4531e4         xor r12d, r12d
0x000023e7      31c0           xor eax, eax
0x000023e9      e93affffff     jmp 0x2328
0x000023ee      6690           nop
0x000023f0      4531d2         xor r10d, r10d
0x000023f3      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x000023f8      0f8402050000   je 0x2900
0x000023fe      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00002403      31d2           xor edx, edx
0x00002405      31c0           xor eax, eax
0x00002407      bb27000000     mov ebx, 0x27                           ; '''
0x0000240c      e917ffffff     jmp 0x2328
0x00002411      0f1f80000000.  nop dword [rax]
0x00002418      ba09000000     mov edx, 9
0x0000241d      bb74000000     mov ebx, 0x74                           ; 't'
0x00002422      837c240802     cmp dword [rsp + 8], 2
0x00002427      0f94c0         sete al
0x0000242a      2244240f       and al, byte [rsp + 0xf]
0x0000242e      0f854a010000   jne 0x257e
0x00002434      807c240d00     cmp byte [rsp + 0xd], 0
0x00002439      7565           jne 0x24a0
0x0000243b      89d3           mov ebx, edx
0x0000243d      4531e4         xor r12d, r12d
0x00002440      31c0           xor eax, eax
0x00002442      807c240f00     cmp byte [rsp + 0xf], 0
0x00002447      0f85eefeffff   jne 0x233b
0x0000244d      e907ffffff     jmp 0x2359                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00002452      660f1f440000   nop word [rax + rax]
0x00002458      ba08000000     mov edx, 8
0x0000245d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00002462      ebd0           jmp 0x2434
0x00002464      0f1f4000       nop dword [rax]
0x00002468      837c240802     cmp dword [rsp + 8], 2
0x0000246d      0f84cd030000   je 0x2840
0x00002473      807c240d00     cmp byte [rsp + 0xd], 0
0x00002478      0f8412020000   je 0x2690
0x0000247e      807c240f00     cmp byte [rsp + 0xf], 0
0x00002483      0f8407020000   je 0x2690
0x00002489      48837c241800   cmp qword [rsp + 0x18], 0
0x0000248f      0f85b6030000   jne 0x284b
0x00002495      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000249a      660f1f440000   nop word [rax + rax]
0x000024a0      4531e4         xor r12d, r12d
0x000024a3      837c240802     cmp dword [rsp + 8], 2
0x000024a8      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x000024ab      807c240f00     cmp byte [rsp + 0xf], 0
0x000024b0      89d0           mov eax, edx
0x000024b2      0f8550080000   jne 0x2d08
0x000024b8      4489c0         mov eax, r8d
0x000024bb      83f001         xor eax, 1
0x000024be      20d0           and al, dl
0x000024c0      742f           je 0x24f1
0x000024c2      4d39fd         cmp r13, r15
0x000024c5      7605           jbe 0x24cc
0x000024c7      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000024cc      498d5701       lea rdx, [r15 + 1]
0x000024d0      4939d5         cmp r13, rdx
0x000024d3      7606           jbe 0x24db
0x000024d5      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000024db      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x000024df      4939d5         cmp r13, rdx
0x000024e2      7606           jbe 0x24ea
0x000024e4      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000024ea      4983c703       add r15, 3
0x000024ee      4189c0         mov r8d, eax
0x000024f1      4d39fd         cmp r13, r15
0x000024f4      7605           jbe 0x24fb
0x000024f6      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000024fb      4983c701       add r15, 1
0x000024ff      4883c501       add rbp, 1
0x00002503      e988feffff     jmp 0x2390
0x00002508      0f1f84000000.  nop dword [rax + rax]
0x00002510      807c240d00     cmp byte [rsp + 0xd], 0
0x00002515      0f85c8010000   jne 0x26e3
0x0000251b      31d2           xor edx, edx
0x0000251d      f644247801     test byte [rsp + 0x78], 1
0x00002522      0f8413ffffff   je 0x243b
0x00002528      4883c501       add rbp, 1
0x0000252c      e9b7fcffff     jmp 0x21e8
0x00002531      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00002538      837c240802     cmp dword [rsp + 8], 2
0x0000253d      0f94c2         sete dl
0x00002540      31c0           xor eax, eax
0x00002542      e9e1fdffff     jmp 0x2328
0x00002547      660f1f840000.  nop word [rax + rax]
0x00002550      ba07000000     mov edx, 7
0x00002555      bb61000000     mov ebx, 0x61                           ; 'a'
0x0000255a      e9d5feffff     jmp 0x2434
0x0000255f      90             nop
0x00002560      837c240802     cmp dword [rsp + 8], 2
0x00002565      0f94c2         sete dl
0x00002568      4885ed         test rbp, rbp
0x0000256b      0f85abfdffff   jne 0x231c
0x00002571      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00002576      20d0           and al, dl
0x00002578      0f84aafdffff   je 0x2328
0x0000257e      4c89dd         mov rbp, r11
0x00002581      c74424080200.  mov dword [rsp + 8], 2
0x00002589      e9fb060000     jmp 0x2c89
0x0000258e      6690           nop
0x00002590      837c240802     cmp dword [rsp + 8], 2
0x00002595      0f94c2         sete dl
0x00002598      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x0000259b      ebd4           jmp 0x2571
0x0000259d      0f1f00         nop dword [rax]
0x000025a0      837c240802     cmp dword [rsp + 8], 2
0x000025a5      bb20000000     mov ebx, 0x20                           ; "@"
0x000025aa      0f94c2         sete dl
0x000025ad      ebc2           jmp 0x2571
0x000025af      90             nop
0x000025b0      ba0d000000     mov edx, 0xd
0x000025b5      bb72000000     mov ebx, 0x72                           ; 'r'
0x000025ba      e963feffff     jmp 0x2422
0x000025bf      90             nop
0x000025c0      ba0c000000     mov edx, 0xc
0x000025c5      bb66000000     mov ebx, 0x66                           ; 'f'
0x000025ca      e965feffff     jmp 0x2434
0x000025cf      90             nop
0x000025d0      ba0b000000     mov edx, 0xb
0x000025d5      bb76000000     mov ebx, 0x76                           ; 'v'
0x000025da      e955feffff     jmp 0x2434
0x000025df      90             nop
0x000025e0      ba0a000000     mov edx, 0xa
0x000025e5      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x000025ea      e933feffff     jmp 0x2422
0x000025ef      90             nop
0x000025f0      4531d2         xor r10d, r10d
0x000025f3      0f1f440000     nop dword [rax + rax]
0x000025f8      48837c245801   cmp qword [rsp + 0x58], 1
0x000025fe      0f85a4030000   jne 0x29a8
0x00002604      4c895c2438     mov qword [rsp + 0x38], r11
0x00002609      4488442430     mov byte [rsp + 0x30], r8b
0x0000260e      4488542428     mov byte [rsp + 0x28], r10b
0x00002613      e8d8efffff     call sym.imp.__ctype_b_loc
0x00002618      488b08         mov rcx, qword [rax]
0x0000261b      0fb6d3         movzx edx, bl
0x0000261e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00002624      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x0000262a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0000262f      bf01000000     mov edi, 1
0x00002634      0fb70451       movzx eax, word [rcx + rdx*2]
0x00002638      66250040       and ax, 0x4000
0x0000263c      410f95c4       setne r12b
0x00002640      0f94c0         sete al
0x00002643      2244240d       and al, byte [rsp + 0xd]
0x00002647      84c0           test al, al
0x00002649      0f8592090000   jne 0x2fe1
0x0000264f      837c240802     cmp dword [rsp + 8], 2
0x00002654      0f94c2         sete dl
0x00002657      e9ccfcffff     jmp 0x2328
0x0000265c      0f1f4000       nop dword [rax]
0x00002660      410fb619       movzx ebx, byte [r9]
0x00002664      80fb7e         cmp bl, 0x7e
0x00002667      7787           ja 0x25f0
0x00002669      488d0df83000.  lea rcx, [0x00005768]                   ; "x\xcf\xff\xff\x88\xce\xff\xff\x88\xce\xff\xff\x88\xce\xff\xff\x88\xce\xff\xff\x88\xce\xff\xff\x88\xce\xff\xffh\xcf\xff\xff\xb8\xd0\xff\xff\xa0\xd0\xff\xffP\xcf\xff\xff\x90\xd0\xff\xff8\xcf\xff\xffx\xd0\xff\xff\x88\xce\xff\xff\x88\xce\xff\xff\x88\xce\xff\xff\x88\xce\xff\xff\x88\xce\xff\xff\x88\xce\xff\xff\x88\xce\xff\xff\x88\xce\xff\xff\x88\xce\xff\xff\x88\xce\xff\xff\x88\xce\xff\xff\x88\xce\xff\xff\x88\xce\xff\xff\x88\xce\xff\xff\x88\xce\xff\xff\x88\xce\xff\xff\x88\xce\xff\xff\x88\xce\xff\xff`\xd0\xff\xffH\xd0\xff\xffH\xd0\xff\xff0\xd0\xff\xffH\xd0\xff\xff\x18\xd0\xff\xffH\xd0\xff\xff\x88\xcc\xff\xffH\xd0\xff\xffH\xd0\xff\xffH\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xffH\xd0\xff\xffH\xd0\xff\xffH\xd0\xff\xffH\xd0\xff\xffX\xcc\xff\xff\x88\xce\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xffH\xd0\xff\xff\x18\xcf\xff\xff\x18\xd0\xff\xffH\xd0\xff\xff\x18\xd0\xff\xffH\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff\x88\xcb\xff\xffH\xd0\xff\xff\x88\xcb\xff\xff0\xd0\xff\xff"
0x00002670      0fb6d3         movzx edx, bl
0x00002673      48630491       movsxd rax, dword [rcx + rdx*4]
0x00002677      4801c8         add rax, rcx
0x0000267a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x0000267c      0f1f4000       nop dword [rax]
0x00002680      4531d2         xor r10d, r10d
0x00002683      807c240d00     cmp byte [rsp + 0xd], 0
0x00002688      0f85f0fdffff   jne 0x247e
0x0000268e      6690           nop
0x00002690      ba5c000000     mov edx, 0x5c                           ; '\'
0x00002695      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000269a      e995fdffff     jmp 0x2434
0x0000269f      90             nop
0x000026a0      ba0c000000     mov edx, 0xc
0x000026a5      4531d2         xor r10d, r10d
0x000026a8      bb66000000     mov ebx, 0x66                           ; 'f'
0x000026ad      e982fdffff     jmp 0x2434
0x000026b2      660f1f440000   nop word [rax + rax]
0x000026b8      ba0a000000     mov edx, 0xa
0x000026bd      4531d2         xor r10d, r10d
0x000026c0      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x000026c5      e958fdffff     jmp 0x2422
0x000026ca      660f1f440000   nop word [rax + rax]
0x000026d0      bb61000000     mov ebx, 0x61                           ; 'a'
0x000026d5      e9c6fdffff     jmp 0x24a0
0x000026da      660f1f440000   nop word [rax + rax]
0x000026e0      4531d2         xor r10d, r10d
0x000026e3      837c240802     cmp dword [rsp + 8], 2
0x000026e8      0f94c2         sete dl
0x000026eb      807c240f00     cmp byte [rsp + 0xf], 0
0x000026f0      0f85940b0000   jne 0x328a
0x000026f6      4489c0         mov eax, r8d
0x000026f9      4c89f9         mov rcx, r15
0x000026fc      83f001         xor eax, 1
0x000026ff      20d0           and al, dl
0x00002701      742d           je 0x2730
0x00002703      4d39fd         cmp r13, r15
0x00002706      7605           jbe 0x270d
0x00002708      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000270d      498d4f01       lea rcx, [r15 + 1]
0x00002711      4939cd         cmp r13, rcx
0x00002714      7606           jbe 0x271c
0x00002716      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000271c      498d4f02       lea rcx, [r15 + 2]
0x00002720      4939cd         cmp r13, rcx
0x00002723      0f8730060000   ja 0x2d59
0x00002729      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x0000272d      4189c0         mov r8d, eax
0x00002730      4939cd         cmp r13, rcx
0x00002733      7605           jbe 0x273a
0x00002735      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000273a      837c240802     cmp dword [rsp + 8], 2
0x0000273f      4c8d7901       lea r15, [rcx + 1]
0x00002743      0f8400060000   je 0x2d49
0x00002749      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000274d      4c39d8         cmp rax, r11
0x00002750      7319           jae 0x276b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00002752      488b442410     mov rax, qword [rsp + 0x10]
0x00002757      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x0000275c      88442428       mov byte [rsp + 0x28], al
0x00002760      83e830         sub eax, 0x30
0x00002763      3c09           cmp al, 9
0x00002765      0f862e080000   jbe 0x2f99
0x0000276b      4489e0         mov eax, r12d
0x0000276e      bb30000000     mov ebx, 0x30                           ; '0'
0x00002773      4531e4         xor r12d, r12d
0x00002776      e9adfbffff     jmp 0x2328                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x0000277b      0f1f440000     nop dword [rax + rax]
0x00002780      837c240802     cmp dword [rsp + 8], 2
0x00002785      4589d4         mov r12d, r10d
0x00002788      0f94c2         sete dl
0x0000278b      4531d2         xor r10d, r10d
0x0000278e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00002790      e993fbffff     jmp 0x2328                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00002795      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00002798      837c240802     cmp dword [rsp + 8], 2
0x0000279d      0f94c2         sete dl
0x000027a0      4531d2         xor r10d, r10d
0x000027a3      e9c0fdffff     jmp 0x2568
0x000027a8      0f1f84000000.  nop dword [rax + rax]
0x000027b0      837c240802     cmp dword [rsp + 8], 2
0x000027b5      0f94c2         sete dl
0x000027b8      4531d2         xor r10d, r10d
0x000027bb      4531e4         xor r12d, r12d
0x000027be      e9aefdffff     jmp 0x2571
0x000027c3      0f1f440000     nop dword [rax + rax]
0x000027c8      837c240802     cmp dword [rsp + 8], 2
0x000027cd      4589d4         mov r12d, r10d
0x000027d0      bb20000000     mov ebx, 0x20                           ; "@"
0x000027d5      0f94c2         sete dl
0x000027d8      4531d2         xor r10d, r10d
0x000027db      e991fdffff     jmp 0x2571
0x000027e0      ba0d000000     mov edx, 0xd
0x000027e5      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x000027e8      bb72000000     mov ebx, 0x72                           ; 'r'
0x000027ed      e930fcffff     jmp 0x2422
0x000027f2      660f1f440000   nop word [rax + rax]
0x000027f8      bb76000000     mov ebx, 0x76                           ; 'v'
0x000027fd      e99efcffff     jmp 0x24a0
0x00002802      660f1f440000   nop word [rax + rax]
0x00002808      ba09000000     mov edx, 9
0x0000280d      4531d2         xor r10d, r10d
0x00002810      bb74000000     mov ebx, 0x74                           ; 't'
0x00002815      e908fcffff     jmp 0x2422
0x0000281a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00002820      bb62000000     mov ebx, 0x62                           ; 'b'
0x00002825      e976fcffff     jmp 0x24a0
0x0000282a      660f1f440000   nop word [rax + rax]
0x00002830      4531d2         xor r10d, r10d
0x00002833      e998faffff     jmp 0x22d0
0x00002838      0f1f84000000.  nop dword [rax + rax]
0x00002840      807c240f00     cmp byte [rsp + 0xf], 0
0x00002845      0f8565090000   jne 0x31b0
0x0000284b      4883c501       add rbp, 1
0x0000284f      4489c0         mov eax, r8d
0x00002852      4531e4         xor r12d, r12d
0x00002855      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000285a      e90dfbffff     jmp 0x236c
0x0000285f      90             nop
0x00002860      837c240802     cmp dword [rsp + 8], 2
0x00002865      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000286a      4589c4         mov r12d, r8d
0x0000286d      4c89dd         mov rbp, r11
0x00002870      0f94c2         sete dl
0x00002873      89d8           mov eax, ebx
0x00002875      4d85ff         test r15, r15
0x00002878      0f94c1         sete cl
0x0000287b      21d0           and eax, edx
0x0000287d      20c8           and al, cl
0x0000287f      0f85610a0000   jne 0x32e6                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00002885      89d8           mov eax, ebx
0x00002887      83f001         xor eax, 1
0x0000288a      20c2           and dl, al
0x0000288c      0f846a090000   je 0x31fc
0x00002892      807c247c00     cmp byte [rsp + 0x7c], 0
0x00002897      0f845d090000   je 0x31fa
0x0000289d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x000028a2      0f85f5090000   jne 0x329d
0x000028a8      4d85ed         test r13, r13
0x000028ab      0f94c0         sete al
0x000028ae      48837c245000   cmp qword [rsp + 0x50], 0
0x000028b4      0f95c2         setne dl
0x000028b7      20d0           and al, dl
0x000028b9      0f841d0a0000   je 0x32dc
0x000028bf      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000028c4      488d1d222c00.  lea rbx, [0x000054ed]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\U020103d9\u53ff\uffcc\u28ff\uffdc\u34ff\uffda\u24ff\uffd8\u80ff\uffd8\ud5ff\uffd8\u1aff\uffd9\u54ff\uffd9\u54ff\uffd9\u54ff\uffd9"
0x000028cb      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x000028cf      c74424080200.  mov dword [rsp + 8], 2
0x000028d7      41bf01000000   mov r15d, 1
0x000028dd      48c744241801.  mov qword [rsp + 0x18], 1
0x000028e6      c644240f00     mov byte [rsp + 0xf], 0
0x000028eb      48895c2448     mov qword [rsp + 0x48], rbx
0x000028f0      8844247c       mov byte [rsp + 0x7c], al
0x000028f4      e9daf8ffff     jmp 0x21d3
0x000028f9      0f1f80000000.  nop dword [rax]
0x00002900      807c240f00     cmp byte [rsp + 0xf], 0
0x00002905      0f85a5080000   jne 0x31b0
0x0000290b      4d85ed         test r13, r13
0x0000290e      0f84fc030000   je 0x2d10                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00002914      31d2           xor edx, edx
0x00002916      48837c245000   cmp qword [rsp + 0x50], 0
0x0000291c      0f85ee030000   jne 0x2d10                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00002922      4c896c2450     mov qword [rsp + 0x50], r13
0x00002927      4983c703       add r15, 3
0x0000292b      31c0           xor eax, eax
0x0000292d      448864247c     mov byte [rsp + 0x7c], r12b
0x00002932      4531c0         xor r8d, r8d
0x00002935      4989d5         mov r13, rdx
0x00002938      bb27000000     mov ebx, 0x27                           ; '''
0x0000293d      e917faffff     jmp 0x2359
0x00002942      660f1f440000   nop word [rax + rax]
0x00002948      f644247804     test byte [rsp + 0x78], 4
0x0000294d      7421           je 0x2970
0x0000294f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00002953      4c39d9         cmp rcx, r11
0x00002956      7318           jae 0x2970
0x00002958      488b442410     mov rax, qword [rsp + 0x10]
0x0000295d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00002962      0f848a070000   je 0x30f2
0x00002968      0f1f84000000.  nop dword [rax + rax]
0x00002970      31d2           xor edx, edx
0x00002972      4531e4         xor r12d, r12d
0x00002975      31c0           xor eax, eax
0x00002977      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000297c      e9a7f9ffff     jmp 0x2328
0x00002981      0f1f80000000.  nop dword [rax]
0x00002988      807c240f00     cmp byte [rsp + 0xf], 0
0x0000298d      0f851d080000   jne 0x31b0
0x00002993      4531e4         xor r12d, r12d
0x00002996      31c0           xor eax, eax
0x00002998      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000299d      e9b7f9ffff     jmp 0x2359                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x000029a2      660f1f440000   nop word [rax + rax]
0x000029a8      488d8424a000.  lea rax, [rsp + 0xa0]
0x000029b0      4983fbff       cmp r11, 0xffffffffffffffff
0x000029b4      48c78424a000.  mov qword [rsp + 0xa0], 0
0x000029c0      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x000029c5      752d           jne 0x29f4
0x000029c7      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000029cc      4488442440     mov byte [rsp + 0x40], r8b
0x000029d1      4488542438     mov byte [rsp + 0x38], r10b
0x000029d6      4c894c2430     mov qword [rsp + 0x30], r9
0x000029db      e810eaffff     call sym.imp.strlen
0x000029e0      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x000029e6      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x000029ec      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x000029ef      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000029f4      488d84249c00.  lea rax, [rsp + 0x9c]
0x000029fc      31c9           xor ecx, ecx
0x000029fe      885c247e       mov byte [rsp + 0x7e], bl
0x00002a02      448844247d     mov byte [rsp + 0x7d], r8b
0x00002a07      4889cb         mov rbx, rcx
0x00002a0a      4c898c248800.  mov qword [rsp + 0x88], r9
0x00002a12      4889442438     mov qword [rsp + 0x38], rax
0x00002a17      448854247f     mov byte [rsp + 0x7f], r10b
0x00002a1c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00002a24      4c89742440     mov qword [rsp + 0x40], r14
0x00002a29      4c896c2470     mov qword [rsp + 0x70], r13
0x00002a2e      4c895c2430     mov qword [rsp + 0x30], r11
0x00002a33      488b442410     mov rax, qword [rsp + 0x10]
0x00002a38      4c8d741d00     lea r14, [rbp + rbx]
0x00002a3d      488b542430     mov rdx, qword [rsp + 0x30]
0x00002a42      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00002a47      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00002a4c      4e8d2c30       lea r13, [rax + r14]
0x00002a50      4c29f2         sub rdx, r14
0x00002a53      4c89ee         mov rsi, r13
0x00002a56      e8b5210000     call sym.rpl_mbrtowc
0x00002a5b      4885c0         test rax, rax
0x00002a5e      4989c7         mov r15, rax
0x00002a61      744e           je 0x2ab1
0x00002a63      4883f8ff       cmp rax, 0xffffffffffffffff
0x00002a67      0f8418060000   je 0x3085
0x00002a6d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00002a71      0f849a050000   je 0x3011
0x00002a77      837c240802     cmp dword [rsp + 8], 2
0x00002a7c      0f94c0         sete al
0x00002a7f      2244240f       and al, byte [rsp + 0xf]
0x00002a83      0f8597010000   jne 0x2c20
0x00002a89      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00002a90      e84bebffff     call sym.imp.iswprint
0x00002a95      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00002a9a      85c0           test eax, eax
0x00002a9c      b800000000     mov eax, 0
0x00002aa1      440f44e0       cmove r12d, eax
0x00002aa5      4c01fb         add rbx, r15
0x00002aa8      e823ebffff     call sym.imp.mbsinit
0x00002aad      85c0           test eax, eax
0x00002aaf      7482           je 0x2a33
0x00002ab1      4489e2         mov edx, r12d
0x00002ab4      4889df         mov rdi, rbx
0x00002ab7      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00002abd      83f201         xor edx, 1
0x00002ac0      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00002ac5      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00002acb      2254240d       and dl, byte [rsp + 0xd]
0x00002acf      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00002ad7      4c8b742440     mov r14, qword [rsp + 0x40]
0x00002adc      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00002ae1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00002ae6      4883ff01       cmp rdi, 1
0x00002aea      0f86fb050000   jbe 0x30eb
0x00002af0      4889f9         mov rcx, rdi
0x00002af3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00002af5      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x00002afb      4801e9         add rcx, rbp
0x00002afe      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002b03      e9b6000000     jmp 0x2bbe
0x00002b08      0f1f84000000.  nop dword [rax + rax]
0x00002b10      837c240802     cmp dword [rsp + 8], 2
0x00002b15      0f94c0         sete al
0x00002b18      4584c9         test r9b, r9b
0x00002b1b      0f85af040000   jne 0x2fd0
0x00002b21      4489c6         mov esi, r8d
0x00002b24      83f601         xor esi, 1
0x00002b27      4020f0         and al, sil
0x00002b2a      742f           je 0x2b5b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x00002b2c      4d39fd         cmp r13, r15
0x00002b2f      7605           jbe 0x2b36
0x00002b31      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00002b36      498d7701       lea rsi, [r15 + 1]
0x00002b3a      4939f5         cmp r13, rsi
0x00002b3d      7606           jbe 0x2b45                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x00002b3f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00002b45      498d7702       lea rsi, [r15 + 2]
0x00002b49      4939f5         cmp r13, rsi
0x00002b4c      7606           jbe 0x2b54
0x00002b4e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00002b54      4983c703       add r15, 3
0x00002b58      4189c0         mov r8d, eax
0x00002b5b      4d39fd         cmp r13, r15
0x00002b5e      7605           jbe 0x2b65
0x00002b60      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00002b65      498d4701       lea rax, [r15 + 1]
0x00002b69      4939c5         cmp r13, rax
0x00002b6c      760d           jbe 0x2b7b
0x00002b6e      89d8           mov eax, ebx
0x00002b70      c0e806         shr al, 6
0x00002b73      83c030         add eax, 0x30
0x00002b76      4388443e01     mov byte [r14 + r15 + 1], al
0x00002b7b      498d4702       lea rax, [r15 + 2]
0x00002b7f      4939c5         cmp r13, rax
0x00002b82      7610           jbe 0x2b94
0x00002b84      89d8           mov eax, ebx
0x00002b86      c0e803         shr al, 3
0x00002b89      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x00002b8c      83c030         add eax, 0x30
0x00002b8f      4388443e02     mov byte [r14 + r15 + 2], al
0x00002b94      83e307         and ebx, 7
0x00002b97      4883c501       add rbp, 1
0x00002b9b      4983c703       add r15, 3
0x00002b9f      83c330         add ebx, 0x30
0x00002ba2      4839cd         cmp rbp, rcx
0x00002ba5      0f83e5f7ffff   jae 0x2390
0x00002bab      89d6           mov esi, edx
0x00002bad      4d39fd         cmp r13, r15
0x00002bb0      7604           jbe 0x2bb6
0x00002bb2      43881c3e       mov byte [r14 + r15], bl
0x00002bb6      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00002bba      4983c701       add r15, 1
0x00002bbe      84d2           test dl, dl
0x00002bc0      0f854affffff   jne 0x2b10
0x00002bc6      89f0           mov eax, esi
0x00002bc8      83f001         xor eax, 1
0x00002bcb      4421c0         and eax, r8d
0x00002bce      4584d2         test r10b, r10b
0x00002bd1      740e           je 0x2be1
0x00002bd3      4d39fd         cmp r13, r15
0x00002bd6      7605           jbe 0x2bdd
0x00002bd8      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00002bdd      4983c701       add r15, 1
0x00002be1      4883c501       add rbp, 1
0x00002be5      4839cd         cmp rbp, rcx
0x00002be8      0f837ef7ffff   jae 0x236c
0x00002bee      84c0           test al, al
0x00002bf0      0f84f8030000   je 0x2fee
0x00002bf6      4d39fd         cmp r13, r15
0x00002bf9      7605           jbe 0x2c00
0x00002bfb      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00002c00      498d4701       lea rax, [r15 + 1]
0x00002c04      4939c5         cmp r13, rax
0x00002c07      7606           jbe 0x2c0f
0x00002c09      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00002c0f      4983c702       add r15, 2
0x00002c13      4531d2         xor r10d, r10d
0x00002c16      4531c0         xor r8d, r8d
0x00002c19      eb92           jmp 0x2bad
0x00002c1b      0f1f440000     nop dword [rax + rax]
0x00002c20      4983ff01       cmp r15, 1
0x00002c24      0f845ffeffff   je 0x2a89
0x00002c2a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002c2f      4a8d0c3f       lea rcx, [rdi + r15]
0x00002c33      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00002c38      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00002c3c      eb0f           jmp 0x2c4d
0x00002c3e      6690           nop
0x00002c40      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00002c44      4939d0         cmp r8, rdx
0x00002c47      0f843cfeffff   je 0x2a89
0x00002c4d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00002c50      83e95b         sub ecx, 0x5b
0x00002c53      80f921         cmp cl, 0x21
0x00002c56      77e8           ja 0x2c40                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00002c58      be01000000     mov esi, 1
0x00002c5d      48d3e6         shl rsi, cl
0x00002c60      4889f1         mov rcx, rsi
0x00002c63      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x00002c6d      4885f1         test rcx, rsi
0x00002c70      74ce           je 0x2c40
0x00002c72      4c8b742440     mov r14, qword [rsp + 0x40]
0x00002c77      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00002c7c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00002c81      c74424080200.  mov dword [rsp + 8], 2
0x00002c89      807c240d00     cmp byte [rsp + 0xd], 0
0x00002c8e      7410           je 0x2ca0
0x00002c90      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00002c92      b804000000     mov eax, 4
0x00002c97      0f44442408     cmove eax, dword [rsp + 8]
0x00002c9c      89442408       mov dword [rsp + 8], eax
0x00002ca0      4883ec08       sub rsp, 8
0x00002ca4      4889e9         mov rcx, rbp
0x00002ca7      4c89ee         mov rsi, r13
0x00002caa      ff742468       push qword [rsp + 0x68]
0x00002cae      ff742478       push qword [rsp + 0x78]
0x00002cb2      4c89f7         mov rdi, r14
0x00002cb5      6a00           push 0
0x00002cb7      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00002cbf      448b442428     mov r8d, dword [rsp + 0x28]
0x00002cc4      488b542430     mov rdx, qword [rsp + 0x30]
0x00002cc9      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x00002ccd      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00002cd2      4883c420       add rsp, 0x20
0x00002cd6      4989c7         mov r15, rax
0x00002cd9      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00002ce1      6448331c2528.  xor rbx, qword fs:[0x28]
0x00002cea      4c89f8         mov rax, r15
0x00002ced      0f8500060000   jne 0x32f3
0x00002cf3      4881c4b80000.  add rsp, 0xb8
0x00002cfa      5b             pop rbx
0x00002cfb      5d             pop rbp
0x00002cfc      415c           pop r12
0x00002cfe      415d           pop r13
0x00002d00      415e           pop r14
0x00002d02      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00002d04      c3             ret
0x00002d05      0f1f00         nop dword [rax]
0x00002d08      4c89dd         mov rbp, r11
0x00002d0b      e979ffffff     jmp 0x2c89
0x00002d10      4d39fd         cmp r13, r15
0x00002d13      7605           jbe 0x2d1a
0x00002d15      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00002d1a      498d4701       lea rax, [r15 + 1]
0x00002d1e      4939c5         cmp r13, rax
0x00002d21      7606           jbe 0x2d29
0x00002d23      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00002d29      498d4702       lea rax, [r15 + 2]
0x00002d2d      4939c5         cmp r13, rax
0x00002d30      0f86ec050000   jbe 0x3322
0x00002d36      4c89ea         mov rdx, r13
0x00002d39      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00002d3f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00002d44      e9d9fbffff     jmp 0x2922
0x00002d49      4489e0         mov eax, r12d
0x00002d4c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00002d51      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00002d54      e900f6ffff     jmp 0x2359                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00002d59      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00002d5f      e9c5f9ffff     jmp 0x2729
0x00002d64      85db           test ebx, ebx
0x00002d66      0f8527f4ffff   jne 0x2193
0x00002d6c      c644240d01     mov byte [rsp + 0xd], 1
0x00002d71      4d85ed         test r13, r13
0x00002d74      0f8590050000   jne 0x330a
0x00002d7a      488d056c2700.  lea rax, [0x000054ed]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\U020103d9\u53ff\uffcc\u28ff\uffdc\u34ff\uffda\u24ff\uffd8\u80ff\uffd8\ud5ff\uffd8\u1aff\uffd9\u54ff\uffd9\u54ff\uffd9\u54ff\uffd9"
0x00002d81      48c744245000.  mov qword [rsp + 0x50], 0
0x00002d8a      c644240e01     mov byte [rsp + 0xe], 1
0x00002d8f      c644247c00     mov byte [rsp + 0x7c], 0
0x00002d94      4531e4         xor r12d, r12d
0x00002d97      c644240f00     mov byte [rsp + 0xf], 0
0x00002d9c      48c744241801.  mov qword [rsp + 0x18], 1
0x00002da5      4889442448     mov qword [rsp + 0x48], rax
0x00002daa      41bf01000000   mov r15d, 1
0x00002db0      c74424080200.  mov dword [rsp + 8], 2
0x00002db8      e916f4ffff     jmp 0x21d3                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x00002dbd      0f1f00         nop dword [rax]
0x00002dc0      85db           test ebx, ebx
0x00002dc2      0f85f5030000   jne 0x31bd
0x00002dc8      4d85ed         test r13, r13
0x00002dcb      0f8425020000   je 0x2ff6
0x00002dd1      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00002dd5      c644240e01     mov byte [rsp + 0xe], 1
0x00002dda      4531e4         xor r12d, r12d
0x00002ddd      c644247c00     mov byte [rsp + 0x7c], 0
0x00002de2      48c744245000.  mov qword [rsp + 0x50], 0
0x00002deb      488d05f92600.  lea rax, str.l______l                   ; 0x54eb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\U020103d9\u53ff\uffcc\u28ff\uffdc\u34ff\uffda\u24ff\uffd8\u80ff\uffd8\ud5ff\uffd8\u1aff\uffd9\u54ff\uffd9\u54ff\uffd9\u54ff\uffd9\ua4ff\uffcf\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\ue4ff\uffcf\uecff\uffce\uacff\uffce\u74ff\uffd0\u64ff\uffd0\u54ff\uffd0\u44ff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u34ff\uffd0\u24ff\uffd0\u24ff\uffd0\uf4ff\uffcf\u24ff\uffd0\uccff\uffcf\u24ff\uffd0\u87ff\uffce\u24ff\uffd0\u24ff\uffd0\u24ff\uffd0\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\u24ff\uffd0\u24ff\uffd0\u24ff\uffd0\u24ff\uffd0\u57ff\uffce\u8cff\uffd0\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\u24ff\uffd0\ufcff\uffce\uccff\uffcf\u24ff\uffd0\uccff\uffcf\u24ff\uffd0\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\u87ff\uffcd\u24ff\uffd0\u87ff\uffcd\uf4ff\uffcf\u78ff\uffcf\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u68ff\uffcf\ub8ff\uffd0\ua0ff\uffd0\u50ff\uffcf\u90ff\uffd0\u38ff\uffcf\u78ff\uffd0\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u60ff\uffd0\u48ff\uffd0\u48ff\uffd0\u30ff\uffd0\u48ff\uffd0\u18ff\uffd0\u48ff\uffd0\u88ff\uffcc\u48ff\uffd0\u48ff\uffd0\u48ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u48ff\uffd0\u48ff\uffd0\u48ff\uffd0\u48ff\uffd0\u58ff\uffcc\u88ff\uffce\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u48ff\uffd0\u18ff\uffcf\u18ff\uffd0\u48ff\uffd0\u18ff\uffd0\u48ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u88ff\uffcb\u48ff\uffd0\u88ff\uffcb\u30ff\uffd0\xff"
0x00002df2      c644240f00     mov byte [rsp + 0xf], 0
0x00002df7      c644240d01     mov byte [rsp + 0xd], 1
0x00002dfc      48c744241801.  mov qword [rsp + 0x18], 1
0x00002e05      41bf01000000   mov r15d, 1
0x00002e0b      4889442448     mov qword [rsp + 0x48], rax
0x00002e10      e9bef3ffff     jmp 0x21d3
0x00002e15      488d05cf2600.  lea rax, str.l______l                   ; 0x54eb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\U020103d9\u53ff\uffcc\u28ff\uffdc\u34ff\uffda\u24ff\uffd8\u80ff\uffd8\ud5ff\uffd8\u1aff\uffd9\u54ff\uffd9\u54ff\uffd9\u54ff\uffd9\ua4ff\uffcf\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\ue4ff\uffcf\uecff\uffce\uacff\uffce\u74ff\uffd0\u64ff\uffd0\u54ff\uffd0\u44ff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u34ff\uffd0\u24ff\uffd0\u24ff\uffd0\uf4ff\uffcf\u24ff\uffd0\uccff\uffcf\u24ff\uffd0\u87ff\uffce\u24ff\uffd0\u24ff\uffd0\u24ff\uffd0\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\u24ff\uffd0\u24ff\uffd0\u24ff\uffd0\u24ff\uffd0\u57ff\uffce\u8cff\uffd0\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\u24ff\uffd0\ufcff\uffce\uccff\uffcf\u24ff\uffd0\uccff\uffcf\u24ff\uffd0\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\u87ff\uffcd\u24ff\uffd0\u87ff\uffcd\uf4ff\uffcf\u78ff\uffcf\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u68ff\uffcf\ub8ff\uffd0\ua0ff\uffd0\u50ff\uffcf\u90ff\uffd0\u38ff\uffcf\u78ff\uffd0\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u60ff\uffd0\u48ff\uffd0\u48ff\uffd0\u30ff\uffd0\u48ff\uffd0\u18ff\uffd0\u48ff\uffd0\u88ff\uffcc\u48ff\uffd0\u48ff\uffd0\u48ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u48ff\uffd0\u48ff\uffd0\u48ff\uffd0\u48ff\uffd0\u58ff\uffcc\u88ff\uffce\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u48ff\uffd0\u18ff\uffcf\u18ff\uffd0\u48ff\uffd0\u18ff\uffd0\u48ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u88ff\uffcb\u48ff\uffd0\u88ff\uffcb\u30ff\uffd0\xff"
0x00002e1c      c644240e01     mov byte [rsp + 0xe], 1
0x00002e21      c644247c00     mov byte [rsp + 0x7c], 0
0x00002e26      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00002e29      48c744245000.  mov qword [rsp + 0x50], 0
0x00002e32      c644240f01     mov byte [rsp + 0xf], 1
0x00002e37      c644240d01     mov byte [rsp + 0xd], 1
0x00002e3c      48c744241801.  mov qword [rsp + 0x18], 1
0x00002e45      4531ff         xor r15d, r15d
0x00002e48      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x00002e4d      c74424080500.  mov dword [rsp + 8], 5
0x00002e55      e979f3ffff     jmp 0x21d3
0x00002e5a      c644240e01     mov byte [rsp + 0xe], 1
0x00002e5f      c644247c00     mov byte [rsp + 0x7c], 0
0x00002e64      4531e4         xor r12d, r12d
0x00002e67      48c744245000.  mov qword [rsp + 0x50], 0
0x00002e70      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00002e75      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00002e78      c644240d01     mov byte [rsp + 0xd], 1
0x00002e7d      48c744241800.  mov qword [rsp + 0x18], 0
0x00002e86      48c744244800.  mov qword [rsp + 0x48], 0
0x00002e8f      e93ff3ffff     jmp 0x21d3
0x00002e94      837c24080a     cmp dword [rsp + 8], 0xa
0x00002e99      7456           je 0x2ef1
0x00002e9b      488d354d2600.  lea rsi, [0x000054ef]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00002ea2      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00002ea4      ba05000000     mov edx, 5
0x00002ea9      e822e5ffff     call sym.imp.dcgettext
0x00002eae      4889c1         mov rcx, rax
0x00002eb1      4889442468     mov qword [rsp + 0x68], rax
0x00002eb6      488d05322600.  lea rax, [0x000054ef]                   ; "`"
0x00002ebd      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00002ec0      0f8498030000   je 0x325e
0x00002ec6      488d35202600.  lea rsi, [0x000054ed]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\U020103d9\u53ff\uffcc\u28ff\uffdc\u34ff\uffda\u24ff\uffd8\u80ff\uffd8\ud5ff\uffd8\u1aff\uffd9\u54ff\uffd9\u54ff\uffd9\u54ff\uffd9"
0x00002ecd      31ff           xor edi, edi
0x00002ecf      ba05000000     mov edx, 5
0x00002ed4      e8f7e4ffff     call sym.imp.dcgettext
0x00002ed9      4889c1         mov rcx, rax
0x00002edc      4889442460     mov qword [rsp + 0x60], rax
0x00002ee1      488d05052600.  lea rax, [0x000054ed]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\U020103d9\u53ff\uffcc\u28ff\uffdc\u34ff\uffda\u24ff\uffd8\u80ff\uffd8\ud5ff\uffd8\u1aff\uffd9\u54ff\uffd9\u54ff\uffd9\u54ff\uffd9"
0x00002ee8      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x00002eeb      0f8483030000   je 0x3274
0x00002ef1      4531ff         xor r15d, r15d
0x00002ef4      85db           test ebx, ebx
0x00002ef6      0f84c1010000   je 0x30bd
0x00002efc      85db           test ebx, ebx
0x00002efe      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00002f03      0f9544240f     setne byte [rsp + 0xf]
0x00002f08      4531e4         xor r12d, r12d
0x00002f0b      4889df         mov rdi, rbx
0x00002f0e      e8dde4ffff     call sym.imp.strlen
0x00002f13      48895c2448     mov qword [rsp + 0x48], rbx
0x00002f18      4889442418     mov qword [rsp + 0x18], rax
0x00002f1d      c644240e01     mov byte [rsp + 0xe], 1
0x00002f22      c644247c00     mov byte [rsp + 0x7c], 0
0x00002f27      48c744245000.  mov qword [rsp + 0x50], 0
0x00002f30      c644240d01     mov byte [rsp + 0xd], 1
0x00002f35      e999f2ffff     jmp 0x21d3
0x00002f3a      c644240e01     mov byte [rsp + 0xe], 1
0x00002f3f      c644247c00     mov byte [rsp + 0x7c], 0
0x00002f44      4531e4         xor r12d, r12d
0x00002f47      48c744245000.  mov qword [rsp + 0x50], 0
0x00002f50      c644240f00     mov byte [rsp + 0xf], 0
0x00002f55      4531ff         xor r15d, r15d
0x00002f58      c644240d00     mov byte [rsp + 0xd], 0
0x00002f5d      48c744241800.  mov qword [rsp + 0x18], 0
0x00002f66      48c744244800.  mov qword [rsp + 0x48], 0
0x00002f6f      e95ff2ffff     jmp 0x21d3
0x00002f74      c644240e01     mov byte [rsp + 0xe], 1
0x00002f79      c644247c00     mov byte [rsp + 0x7c], 0
0x00002f7e      4531e4         xor r12d, r12d
0x00002f81      48c744245000.  mov qword [rsp + 0x50], 0
0x00002f8a      c644240f01     mov byte [rsp + 0xf], 1
0x00002f8f      c644240d01     mov byte [rsp + 0xd], 1
0x00002f94      e91af2ffff     jmp 0x21b3
0x00002f99      4d39fd         cmp r13, r15
0x00002f9c      7605           jbe 0x2fa3
0x00002f9e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00002fa3      488d4102       lea rax, [rcx + 2]
0x00002fa7      4939c5         cmp r13, rax
0x00002faa      7606           jbe 0x2fb2
0x00002fac      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00002fb2      4489e0         mov eax, r12d
0x00002fb5      4c8d7903       lea r15, [rcx + 3]
0x00002fb9      4531e4         xor r12d, r12d
0x00002fbc      bb30000000     mov ebx, 0x30                           ; '0'
0x00002fc1      e962f3ffff     jmp 0x2328
0x00002fc6      662e0f1f8400.  nop word cs:[rax + rax]
0x00002fd0      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00002fd5      4c89dd         mov rbp, r11
0x00002fd8      885c240d       mov byte [rsp + 0xd], bl
0x00002fdc      e9a8fcffff     jmp 0x2c89
0x00002fe1      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00002fe6      4531e4         xor r12d, r12d
0x00002fe9      e902fbffff     jmp 0x2af0
0x00002fee      4531d2         xor r10d, r10d
0x00002ff1      e9b7fbffff     jmp 0x2bad
0x00002ff6      48c744245000.  mov qword [rsp + 0x50], 0
0x00002fff      c644240e01     mov byte [rsp + 0xe], 1
0x00003004      4531e4         xor r12d, r12d
0x00003007      c644247c00     mov byte [rsp + 0x7c], 0
0x0000300c      e9dafdffff     jmp 0x2deb
0x00003011      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003016      4c89f6         mov rsi, r14
0x00003019      4c89e9         mov rcx, r13
0x0000301c      4889d8         mov rax, rbx
0x0000301f      4889df         mov rdi, rbx
0x00003022      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003028      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000302d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00003035      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00003038      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000303e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003046      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000304b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003050      7326           jae 0x3078
0x00003052      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00003055      7510           jne 0x3067
0x00003057      eb1f           jmp 0x3078
0x00003059      0f1f80000000.  nop dword [rax]
0x00003060      41803c0100     cmp byte [r9 + rax], 0
0x00003065      740e           je 0x3075
0x00003067      4883c001       add rax, 1
0x0000306b      488d540500     lea rdx, [rbp + rax]
0x00003070      4939d3         cmp r11, rdx
0x00003073      77eb           ja 0x3060
0x00003075      4889c7         mov rdi, rax
0x00003078      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000307d      4531e4         xor r12d, r12d
0x00003080      e961faffff     jmp 0x2ae6
0x00003085      4889df         mov rdi, rbx
0x00003088      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000308e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003093      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00003099      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000030a1      4531e4         xor r12d, r12d
0x000030a4      4c8b742440     mov r14, qword [rsp + 0x40]
0x000030a9      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000030ae      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000030b3      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000030b8      e929faffff     jmp 0x2ae6
0x000030bd      488b542468     mov rdx, qword [rsp + 0x68]
0x000030c2      0fb602         movzx eax, byte [rdx]
0x000030c5      84c0           test al, al
0x000030c7      0f842ffeffff   je 0x2efc
0x000030cd      0f1f00         nop dword [rax]
0x000030d0      4d39fd         cmp r13, r15
0x000030d3      7604           jbe 0x30d9
0x000030d5      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x000030d9      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x000030dd      420fb6043a     movzx eax, byte [rdx + r15]
0x000030e2      84c0           test al, al
0x000030e4      75ea           jne 0x30d0
0x000030e6      e911feffff     jmp 0x2efc
0x000030eb      89d0           mov eax, edx
0x000030ed      e955f5ffff     jmp 0x2647
0x000030f2      0fb61c08       movzx ebx, byte [rax + rcx]
0x000030f6      80fb3e         cmp bl, 0x3e
0x000030f9      0f8771f8ffff   ja 0x2970
0x000030ff      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00003109      480fa3d8       bt rax, rbx
0x0000310d      0f835df8ffff   jae 0x2970
0x00003113      807c240f00     cmp byte [rsp + 0xf], 0
0x00003118      0f85e4010000   jne 0x3302                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x0000311e      4d39fd         cmp r13, r15
0x00003121      7605           jbe 0x3128
0x00003123      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00003128      498d4701       lea rax, [r15 + 1]
0x0000312c      4939c5         cmp r13, rax
0x0000312f      7606           jbe 0x3137
0x00003131      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003137      498d4702       lea rax, [r15 + 2]
0x0000313b      4939c5         cmp r13, rax
0x0000313e      7606           jbe 0x3146
0x00003140      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003146      498d4703       lea rax, [r15 + 3]
0x0000314a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x0000314d      7606           jbe 0x3155
0x0000314f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00003155      4983c704       add r15, 4
0x00003159      31d2           xor edx, edx
0x0000315b      4531e4         xor r12d, r12d
0x0000315e      31c0           xor eax, eax
0x00003160      4889cd         mov rbp, rcx
0x00003163      e9c0f1ffff     jmp 0x2328
0x00003168      85db           test ebx, ebx
0x0000316a      0f8488010000   je 0x32f8
0x00003170      488d05762300.  lea rax, [0x000054ed]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\U020103d9\u53ff\uffcc\u28ff\uffdc\u34ff\uffda\u24ff\uffd8\u80ff\uffd8\ud5ff\uffd8\u1aff\uffd9\u54ff\uffd9\u54ff\uffd9\u54ff\uffd9"
0x00003177      c644240e01     mov byte [rsp + 0xe], 1
0x0000317c      c644247c00     mov byte [rsp + 0x7c], 0
0x00003181      4531e4         xor r12d, r12d
0x00003184      48c744245000.  mov qword [rsp + 0x50], 0
0x0000318d      c644240f01     mov byte [rsp + 0xf], 1
0x00003192      c644240d00     mov byte [rsp + 0xd], 0
0x00003197      48c744241801.  mov qword [rsp + 0x18], 1
0x000031a0      4531ff         xor r15d, r15d
0x000031a3      4889442448     mov qword [rsp + 0x48], rax
0x000031a8      e926f0ffff     jmp 0x21d3
0x000031ad      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x000031b0      4c89dd         mov rbp, r11
0x000031b3      0fb644240f     movzx eax, byte [rsp + 0xf]
0x000031b8      e9ccfaffff     jmp 0x2c89
0x000031bd      488d05272300.  lea rax, str.l______l                   ; 0x54eb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\U020103d9\u53ff\uffcc\u28ff\uffdc\u34ff\uffda\u24ff\uffd8\u80ff\uffd8\ud5ff\uffd8\u1aff\uffd9\u54ff\uffd9\u54ff\uffd9\u54ff\uffd9\ua4ff\uffcf\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\ue4ff\uffcf\uecff\uffce\uacff\uffce\u74ff\uffd0\u64ff\uffd0\u54ff\uffd0\u44ff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u8cff\uffd0\u34ff\uffd0\u24ff\uffd0\u24ff\uffd0\uf4ff\uffcf\u24ff\uffd0\uccff\uffcf\u24ff\uffd0\u87ff\uffce\u24ff\uffd0\u24ff\uffd0\u24ff\uffd0\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\u24ff\uffd0\u24ff\uffd0\u24ff\uffd0\u24ff\uffd0\u57ff\uffce\u8cff\uffd0\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\u24ff\uffd0\ufcff\uffce\uccff\uffcf\u24ff\uffd0\uccff\uffcf\u24ff\uffd0\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\uccff\uffcf\u87ff\uffcd\u24ff\uffd0\u87ff\uffcd\uf4ff\uffcf\u78ff\uffcf\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u68ff\uffcf\ub8ff\uffd0\ua0ff\uffd0\u50ff\uffcf\u90ff\uffd0\u38ff\uffcf\u78ff\uffd0\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u88ff\uffce\u60ff\uffd0\u48ff\uffd0\u48ff\uffd0\u30ff\uffd0\u48ff\uffd0\u18ff\uffd0\u48ff\uffd0\u88ff\uffcc\u48ff\uffd0\u48ff\uffd0\u48ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u48ff\uffd0\u48ff\uffd0\u48ff\uffd0\u48ff\uffd0\u58ff\uffcc\u88ff\uffce\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u48ff\uffd0\u18ff\uffcf\u18ff\uffd0\u48ff\uffd0\u18ff\uffd0\u48ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u18ff\uffd0\u88ff\uffcb\u48ff\uffd0\u88ff\uffcb\u30ff\uffd0\xff"
0x000031c4      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x000031c9      c644247c00     mov byte [rsp + 0x7c], 0
0x000031ce      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x000031d1      48c744245000.  mov qword [rsp + 0x50], 0
0x000031da      c644240f01     mov byte [rsp + 0xf], 1
0x000031df      c644240d01     mov byte [rsp + 0xd], 1
0x000031e4      48c744241801.  mov qword [rsp + 0x18], 1
0x000031ed      4531ff         xor r15d, r15d
0x000031f0      4889442448     mov qword [rsp + 0x48], rax
0x000031f5      e9d9efffff     jmp 0x21d3
0x000031fa      89d0           mov eax, edx
0x000031fc      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00003201      4885db         test rbx, rbx
0x00003204      742c           je 0x3232
0x00003206      84c0           test al, al
0x00003208      7428           je 0x3232
0x0000320a      0fb60b         movzx ecx, byte [rbx]
0x0000320d      4889d8         mov rax, rbx
0x00003210      84c9           test cl, cl
0x00003212      741e           je 0x3232
0x00003214      4c89fa         mov rdx, r15
0x00003217      4c29f8         sub rax, r15
0x0000321a      4939d5         cmp r13, rdx
0x0000321d      7604           jbe 0x3223
0x0000321f      41880c16       mov byte [r14 + rdx], cl
0x00003223      4883c201       add rdx, 1
0x00003227      0fb60c10       movzx ecx, byte [rax + rdx]
0x0000322b      84c9           test cl, cl
0x0000322d      75eb           jne 0x321a
0x0000322f      4989d7         mov r15, rdx
0x00003232      4d39fd         cmp r13, r15
0x00003235      0f869efaffff   jbe 0x2cd9
0x0000323b      43c6043e00     mov byte [r14 + r15], 0
0x00003240      e994faffff     jmp 0x2cd9
0x00003245      837c240802     cmp dword [rsp + 8], 2
0x0000324a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000324f      4c89dd         mov rbp, r11
0x00003252      0f94c0         sete al
0x00003255      885c240d       mov byte [rsp + 0xd], bl
0x00003259      e92bfaffff     jmp 0x2c89
0x0000325e      8b742408       mov esi, dword [rsp + 8]
0x00003262      4889cf         mov rdi, rcx
0x00003265      e8a6edffff     call sym.gettext_quote.part.1
0x0000326a      4889442468     mov qword [rsp + 0x68], rax
0x0000326f      e952fcffff     jmp 0x2ec6
0x00003274      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00003278      4889cf         mov rdi, rcx
0x0000327b      e890edffff     call sym.gettext_quote.part.1
0x00003280      4889442460     mov qword [rsp + 0x60], rax
0x00003285      e967fcffff     jmp 0x2ef1
0x0000328a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000328f      4c89dd         mov rbp, r11
0x00003292      89d0           mov eax, edx
0x00003294      885c240d       mov byte [rsp + 0xd], bl
0x00003298      e9ecf9ffff     jmp 0x2c89
0x0000329d      4883ec08       sub rsp, 8
0x000032a1      41b805000000   mov r8d, 5
0x000032a7      4c89d9         mov rcx, r11
0x000032aa      ff742468       push qword [rsp + 0x68]
0x000032ae      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x000032b2      4c89f7         mov rdi, r14
0x000032b5      ff742438       push qword [rsp + 0x38]
0x000032b9      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x000032c1      488b542430     mov rdx, qword [rsp + 0x30]
0x000032c6      488b742470     mov rsi, qword [rsp + 0x70]
0x000032cb      e830eeffff     call sym.quotearg_buffer_restyled
0x000032d0      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x000032d4      4989c7         mov r15, rax
0x000032d7      e9fdf9ffff     jmp 0x2cd9
0x000032dc      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x000032e1      e916ffffff     jmp 0x31fc
0x000032e6      c74424080200.  mov dword [rsp + 8], 2
0x000032ee      e996f9ffff     jmp 0x2c89
0x000032f3      e808e1ffff     call sym.imp.__stack_chk_fail
0x000032f8      c644240d00     mov byte [rsp + 0xd], 0
0x000032fd      e96ffaffff     jmp 0x2d71
0x00003302      4c89dd         mov rbp, r11
0x00003305      e996f9ffff     jmp 0x2ca0
0x0000330a      c644240e01     mov byte [rsp + 0xe], 1
0x0000330f      31c0           xor eax, eax
0x00003311      4531e4         xor r12d, r12d
0x00003314      48c744245000.  mov qword [rsp + 0x50], 0
0x0000331d      e9a2f5ffff     jmp 0x28c4
0x00003322      4c89ea         mov rdx, r13
0x00003325      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000332a      e9f3f5ffff     jmp 0x2922
0x0000332f      e80ce0ffff     call sym.imp.abort
0x00003334      6690           nop
0x00003336      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00003340      4157           push r15
0x00003342      4156           push r14
0x00003344      4c63ff         movsxd r15, edi
0x00003347      4155           push r13
0x00003349      4154           push r12
0x0000334b      4989d6         mov r14, rdx
0x0000334e      55             push rbp
0x0000334f      53             push rbx
0x00003350      4889cd         mov rbp, rcx
0x00003353      4883ec28       sub rsp, 0x28
0x00003357      4889742408     mov qword [rsp + 8], rsi
0x0000335c      e8efdfffff     call sym.imp.__errno_location
0x00003361      4989c5         mov r13, rax
0x00003364      8b00           mov eax, dword [rax]
0x00003366      4585ff         test r15d, r15d
0x00003369      488b1df04c20.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x208060:8]=0x208070 obj.slotvec0 ; "p\x80 "
0x00003370      89442418       mov dword [rsp + 0x18], eax
0x00003374      0f8867010000   js 0x34e1
0x0000337a      44393dd74c20.  cmp dword [obj.nslots], r15d            ; [0x208058:4]=1
0x00003381      7f62           jg 0x33e5
0x00003383      4181ffffffff.  cmp r15d, 0x7fffffff
0x0000338a      0f8456010000   je 0x34e6
0x00003390      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00003394      488d05d54c20.  lea rax, obj.slotvec0                   ; 0x208070
0x0000339b      4963f4         movsxd rsi, r12d
0x0000339e      48c1e604       shl rsi, 4
0x000033a2      4839c3         cmp rbx, rax
0x000033a5      0f8415010000   je 0x34c0
0x000033ab      4889df         mov rdi, rbx
0x000033ae      e86d0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x000033b3      4889c3         mov rbx, rax
0x000033b6      488905a34c20.  mov qword [obj.slotvec], rax            ; [0x208060:8]=0x208070 obj.slotvec0 ; "p\x80 "
0x000033bd      48633d944c20.  movsxd rdi, dword [obj.nslots]          ; [0x208058:4]=1
0x000033c4      4489e2         mov edx, r12d
0x000033c7      31f6           xor esi, esi
0x000033c9      29fa           sub edx, edi
0x000033cb      48c1e704       shl rdi, 4
0x000033cf      4863d2         movsxd rdx, edx
0x000033d2      4801df         add rdi, rbx
0x000033d5      48c1e204       shl rdx, 4
0x000033d9      e8a2e0ffff     call sym.imp.memset
0x000033de      448925734c20.  mov dword [obj.nslots], r12d            ; [0x208058:4]=1
0x000033e5      8b4504         mov eax, dword [rbp + 4]
0x000033e8      49c1e704       shl r15, 4
0x000033ec      4883ec08       sub rsp, 8
0x000033f0      4c01fb         add rbx, r15
0x000033f3      4c8d7d08       lea r15, [rbp + 8]
0x000033f7      448b4500       mov r8d, dword [rbp]
0x000033fb      4c8b1b         mov r11, qword [rbx]
0x000033fe      4c8b6308       mov r12, qword [rbx + 8]
0x00003402      4c89f1         mov rcx, r14
0x00003405      83c801         or eax, 1
0x00003408      89442424       mov dword [rsp + 0x24], eax
0x0000340c      ff7530         push qword [rbp + 0x30]
0x0000340f      4189c1         mov r9d, eax
0x00003412      ff7528         push qword [rbp + 0x28]
0x00003415      4157           push r15
0x00003417      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x0000341a      488b542428     mov rdx, qword [rsp + 0x28]
0x0000341f      4c89e7         mov rdi, r12
0x00003422      4c895c2430     mov qword [rsp + 0x30], r11
0x00003427      e8d4ecffff     call sym.quotearg_buffer_restyled
0x0000342c      4883c420       add rsp, 0x20
0x00003430      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00003435      4939c3         cmp r11, rax
0x00003438      7767           ja 0x34a1
0x0000343a      488d7001       lea rsi, [rax + 1]
0x0000343e      488d05bb4c20.  lea rax, obj.slot0                      ; 0x208100
0x00003445      4939c4         cmp r12, rax
0x00003448      488933         mov qword [rbx], rsi
0x0000344b      7412           je 0x345f
0x0000344d      4c89e7         mov rdi, r12
0x00003450      4889742410     mov qword [rsp + 0x10], rsi
0x00003455      e8d6deffff     call sym.imp.free
0x0000345a      488b742410     mov rsi, qword [rsp + 0x10]
0x0000345f      4889f7         mov rdi, rsi
0x00003462      4889742410     mov qword [rsp + 0x10], rsi
0x00003467      e8540e0000     call sym.xmalloc
0x0000346c      4883ec08       sub rsp, 8
0x00003470      48894308       mov qword [rbx + 8], rax
0x00003474      448b4500       mov r8d, dword [rbp]
0x00003478      ff7530         push qword [rbp + 0x30]
0x0000347b      ff7528         push qword [rbp + 0x28]
0x0000347e      4c89f1         mov rcx, r14
0x00003481      4157           push r15
0x00003483      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00003488      4889c7         mov rdi, rax
0x0000348b      488b542428     mov rdx, qword [rsp + 0x28]
0x00003490      488b742430     mov rsi, qword [rsp + 0x30]
0x00003495      4989c4         mov r12, rax
0x00003498      e863ecffff     call sym.quotearg_buffer_restyled
0x0000349d      4883c420       add rsp, 0x20
0x000034a1      8b442418       mov eax, dword [rsp + 0x18]
0x000034a5      41894500       mov dword [r13], eax
0x000034a9      4883c428       add rsp, 0x28
0x000034ad      4c89e0         mov rax, r12
0x000034b0      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x000034b1      5d             pop rbp
0x000034b2      415c           pop r12
0x000034b4      415d           pop r13
0x000034b6      415e           pop r14
0x000034b8      415f           pop r15
0x000034ba      c3             ret
0x000034bb      0f1f440000     nop dword [rax + rax]
0x000034c0      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x000034c2      e8590e0000     call sym.xrealloc
0x000034c7      660f6f05a14b.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x000034cf      4889c3         mov rbx, rax
0x000034d2      488905874b20.  mov qword [obj.slotvec], rax            ; [0x208060:8]=0x208070 obj.slotvec0 ; "p\x80 "
0x000034d9      0f1100         movups xmmword [rax], xmm0
0x000034dc      e9dcfeffff     jmp 0x33bd
0x000034e1      e85adeffff     call sym.imp.abort
0x000034e6      e825100000     call sym.xalloc_die
0x000034eb      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x000034f0      4154           push r12
0x000034f2      55             push rbp
0x000034f3      53             push rbx
0x000034f4      4889fb         mov rbx, rdi
0x000034f7      e854deffff     call sym.imp.__errno_location
0x000034fc      448b20         mov r12d, dword [rax]
0x000034ff      4889c5         mov rbp, rax
0x00003502      488d05f74c20.  lea rax, obj.default_quoting_options    ; 0x208200
0x00003509      4885db         test rbx, rbx
0x0000350c      be38000000     mov esi, 0x38                           ; '8'
0x00003511      480f44d8       cmove rbx, rax
0x00003515      4889df         mov rdi, rbx
0x00003518      e8a30f0000     call sym.xmemdup
0x0000351d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00003521      5b             pop rbx
0x00003522      5d             pop rbp
0x00003523      415c           pop r12
0x00003525      c3             ret
0x00003526      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00003530      488d05c94c20.  lea rax, obj.default_quoting_options    ; 0x208200
0x00003537      4885ff         test rdi, rdi
0x0000353a      480f44f8       cmove rdi, rax
0x0000353e      8b07           mov eax, dword [rdi]
0x00003540      c3             ret
0x00003541      0f1f440000     nop dword [rax + rax]
0x00003546      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00003550      488d05a94c20.  lea rax, obj.default_quoting_options    ; 0x208200
0x00003557      4885ff         test rdi, rdi
0x0000355a      480f44f8       cmove rdi, rax
0x0000355e      8937           mov dword [rdi], esi
0x00003560      c3             ret
0x00003561      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00003566      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00003570      488d05894c20.  lea rax, obj.default_quoting_options    ; 0x208200
0x00003577      4885ff         test rdi, rdi
0x0000357a      89f1           mov ecx, esi
0x0000357c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00003580      89f0           mov eax, esi
0x00003582      83e11f         and ecx, 0x1f
0x00003585      c0e805         shr al, 5
0x00003588      0fb6c0         movzx eax, al
0x0000358b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00003590      8b37           mov esi, dword [rdi]
0x00003592      89f0           mov eax, esi
0x00003594      d3e8           shr eax, cl
0x00003596      31c2           xor edx, eax
0x00003598      83e001         and eax, 1
0x0000359b      83e201         and edx, 1
0x0000359e      d3e2           shl edx, cl
0x000035a0      31f2           xor edx, esi
0x000035a2      8917           mov dword [rdi], edx
0x000035a4      c3             ret
0x000035a5      90             nop
0x000035a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x000035b0      488d05494c20.  lea rax, obj.default_quoting_options    ; 0x208200
0x000035b7      4885ff         test rdi, rdi
0x000035ba      480f44f8       cmove rdi, rax
0x000035be      8b4704         mov eax, dword [rdi + 4]
0x000035c1      897704         mov dword [rdi + 4], esi
0x000035c4      c3             ret
0x000035c5      90             nop
0x000035c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x000035d0      488d05294c20.  lea rax, obj.default_quoting_options    ; 0x208200
0x000035d7      4885ff         test rdi, rdi
0x000035da      480f44f8       cmove rdi, rax
0x000035de      4885f6         test rsi, rsi
0x000035e1      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x000035e7      740e           je 0x35f7
0x000035e9      4885d2         test rdx, rdx
0x000035ec      7409           je 0x35f7
0x000035ee      48897728       mov qword [rdi + 0x28], rsi
0x000035f2      48895730       mov qword [rdi + 0x30], rdx
0x000035f6      c3             ret
0x000035f7      4883ec08       sub rsp, 8
0x000035fb      e840ddffff     call sym.imp.abort
;-- quotearg_buffer:
0x00003600      4157           push r15
0x00003602      4156           push r14
0x00003604      488d05f54b20.  lea rax, obj.default_quoting_options    ; 0x208200
0x0000360b      4155           push r13
0x0000360d      4154           push r12
0x0000360f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00003612      55             push rbp
0x00003613      53             push rbx
0x00003614      4c89c3         mov rbx, r8
0x00003617      4989f6         mov r14, rsi
0x0000361a      4989d7         mov r15, rdx
0x0000361d      4883ec18       sub rsp, 0x18
0x00003621      4d85c0         test r8, r8
0x00003624      480f44d8       cmove rbx, rax
0x00003628      48894c2408     mov qword [rsp + 8], rcx
0x0000362d      e81eddffff     call sym.imp.__errno_location
0x00003632      448b20         mov r12d, dword [rax]
0x00003635      4889c5         mov rbp, rax
0x00003638      488d4308       lea rax, [rbx + 8]
0x0000363c      4883ec08       sub rsp, 8
0x00003640      448b4b04       mov r9d, dword [rbx + 4]
0x00003644      ff7330         push qword [rbx + 0x30]
0x00003647      448b03         mov r8d, dword [rbx]
0x0000364a      ff7328         push qword [rbx + 0x28]
0x0000364d      4c89fa         mov rdx, r15
0x00003650      50             push rax
0x00003651      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00003656      4c89f6         mov rsi, r14
0x00003659      4c89ef         mov rdi, r13
0x0000365c      e89feaffff     call sym.quotearg_buffer_restyled
0x00003661      44896500       mov dword [rbp], r12d
0x00003665      4883c438       add rsp, 0x38
0x00003669      5b             pop rbx
0x0000366a      5d             pop rbp
0x0000366b      415c           pop r12
0x0000366d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000366f      415e           pop r14
0x00003671      415f           pop r15
0x00003673      c3             ret
0x00003674      6690           nop
0x00003676      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00003680      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00003682      4156           push r14
0x00003684      488d05754b20.  lea rax, obj.default_quoting_options    ; 0x208200
0x0000368b      4155           push r13
0x0000368d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x0000368f      4989d4         mov r12, rdx
0x00003692      55             push rbp
0x00003693      53             push rbx
0x00003694      4889cb         mov rbx, rcx
0x00003697      4989fe         mov r14, rdi
0x0000369a      4989f7         mov r15, rsi
0x0000369d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x000036a1      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x000036a4      480f44d8       cmove rbx, rax
0x000036a8      31ed           xor ebp, ebp
0x000036aa      e8a1dcffff     call sym.imp.__errno_location
0x000036af      4d85e4         test r12, r12
0x000036b2      4989c5         mov r13, rax
0x000036b5      8b00           mov eax, dword [rax]
0x000036b7      400f94c5       sete bpl
0x000036bb      0b6b04         or ebp, dword [rbx + 4]
0x000036be      4c8d5308       lea r10, [rbx + 8]
0x000036c2      4883ec08       sub rsp, 8
0x000036c6      448b03         mov r8d, dword [rbx]
0x000036c9      4c89f9         mov rcx, r15
0x000036cc      89442414       mov dword [rsp + 0x14], eax
0x000036d0      ff7330         push qword [rbx + 0x30]
0x000036d3      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x000036d6      ff7328         push qword [rbx + 0x28]
0x000036d9      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x000036db      31f6           xor esi, esi
0x000036dd      4189e9         mov r9d, ebp
0x000036e0      31ff           xor edi, edi
0x000036e2      4c89542440     mov qword [rsp + 0x40], r10
0x000036e7      e814eaffff     call sym.quotearg_buffer_restyled
0x000036ec      488d7001       lea rsi, [rax + 1]
0x000036f0      4889442448     mov qword [rsp + 0x48], rax
0x000036f5      4883c420       add rsp, 0x20
0x000036f9      4889f7         mov rdi, rsi
0x000036fc      4889742418     mov qword [rsp + 0x18], rsi
0x00003701      e8ba0b0000     call sym.xmalloc
0x00003706      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x0000370b      4883ec08       sub rsp, 8
0x0000370f      ff7330         push qword [rbx + 0x30]
0x00003712      ff7328         push qword [rbx + 0x28]
0x00003715      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000371a      4189e9         mov r9d, ebp
0x0000371d      448b03         mov r8d, dword [rbx]
0x00003720      4c89f9         mov rcx, r15
0x00003723      4c89f2         mov rdx, r14
0x00003726      4889c7         mov rdi, rax
0x00003729      4152           push r10
0x0000372b      488b742438     mov rsi, qword [rsp + 0x38]
0x00003730      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00003735      8b44242c       mov eax, dword [rsp + 0x2c]
0x00003739      4883c420       add rsp, 0x20
0x0000373d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00003740      41894500       mov dword [r13], eax
0x00003744      7409           je 0x374f
0x00003746      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000374b      4d891c24       mov qword [r12], r11
0x0000374f      488b442410     mov rax, qword [rsp + 0x10]
0x00003754      4883c438       add rsp, 0x38
0x00003758      5b             pop rbx
0x00003759      5d             pop rbp
0x0000375a      415c           pop r12
0x0000375c      415d           pop r13
0x0000375e      415e           pop r14
0x00003760      415f           pop r15
0x00003762      c3             ret
0x00003763      0f1f00         nop dword [rax]
0x00003766      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00003770      4889d1         mov rcx, rdx
0x00003773      31d2           xor edx, edx
0x00003775      e906ffffff     jmp sym.quotearg_alloc_mem
0x0000377a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00003780      8b05d2482000   mov eax, dword [obj.nslots]             ; [0x208058:4]=1
0x00003786      4154           push r12
0x00003788      4c8b25d14820.  mov r12, qword [obj.slotvec]            ; [0x208060:8]=0x208070 obj.slotvec0 ; "p\x80 "
0x0000378f      55             push rbp
0x00003790      53             push rbx
0x00003791      83f801         cmp eax, 1
0x00003794      7e2b           jle 0x37c1                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00003796      83e802         sub eax, 2
0x00003799      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x0000379e      48c1e004       shl rax, 4
0x000037a2      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x000037a7      660f1f840000.  nop word [rax + rax]
0x000037b0      488b3b         mov rdi, qword [rbx]
0x000037b3      4883c310       add rbx, 0x10
0x000037b7      e874dbffff     call sym.imp.free
0x000037bc      4839eb         cmp rbx, rbp
0x000037bf      75ef           jne 0x37b0
0x000037c1      498b7c2408     mov rdi, qword [r12 + 8]
0x000037c6      488d1d334920.  lea rbx, obj.slot0                      ; 0x208100
0x000037cd      4839df         cmp rdi, rbx
0x000037d0      7417           je 0x37e9
0x000037d2      e859dbffff     call sym.imp.free
0x000037d7      48c7058e4820.  mov qword [obj.slotvec0], 0x100         ; [0x208070:8]=256
0x000037e2      48891d8f4820.  mov qword [0x00208078], rbx             ; [0x208078:8]=0x208100 obj.slot0
0x000037e9      488d1d804820.  lea rbx, obj.slotvec0                   ; 0x208070
0x000037f0      4939dc         cmp r12, rbx
0x000037f3      740f           je 0x3804
0x000037f5      4c89e7         mov rdi, r12
0x000037f8      e833dbffff     call sym.imp.free
0x000037fd      48891d5c4820.  mov qword [obj.slotvec], rbx            ; [0x208060:8]=0x208070 obj.slotvec0 ; "p\x80 "
0x00003804      5b             pop rbx
0x00003805      c70549482000.  mov dword [obj.nslots], 1               ; [0x208058:4]=1
0x0000380f      5d             pop rbp
0x00003810      415c           pop r12
0x00003812      c3             ret
0x00003813      0f1f00         nop dword [rax]
0x00003816      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00003820      488d0dd94920.  lea rcx, obj.default_quoting_options    ; 0x208200
0x00003827      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000382e      e90dfbffff     jmp sym.quotearg_n_options
0x00003833      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00003836      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00003840      488d0db94920.  lea rcx, obj.default_quoting_options    ; 0x208200
0x00003847      e9f4faffff     jmp sym.quotearg_n_options
0x0000384c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00003850      488d0da94920.  lea rcx, obj.default_quoting_options    ; 0x208200
0x00003857      4889fe         mov rsi, rdi
0x0000385a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00003861      31ff           xor edi, edi
0x00003863      e9d8faffff     jmp sym.quotearg_n_options
0x00003868      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00003870      488d0d894920.  lea rcx, obj.default_quoting_options    ; 0x208200
0x00003877      4889f2         mov rdx, rsi
0x0000387a      4889fe         mov rsi, rdi
0x0000387d      31ff           xor edi, edi
0x0000387f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00003884      6690           nop
0x00003886      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00003890      4883ec48       sub rsp, 0x48
0x00003894      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00003897      64488b142528.  mov rdx, qword fs:[0x28]
0x000038a0      4889542438     mov qword [rsp + 0x38], rdx
0x000038a5      31d2           xor edx, edx
0x000038a7      83fe0a         cmp esi, 0xa
0x000038aa      7468           je 0x3914
0x000038ac      893424         mov dword [rsp], esi
0x000038af      4889e1         mov rcx, rsp
0x000038b2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000038b9      4889c6         mov rsi, rax
0x000038bc      48c744240400.  mov qword [rsp + 4], 0
0x000038c5      48c744240c00.  mov qword [rsp + 0xc], 0
0x000038ce      48c744241400.  mov qword [rsp + 0x14], 0
0x000038d7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000038e0      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x000038e9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000038f2      c74424340000.  mov dword [rsp + 0x34], 0
0x000038fa      e841faffff     call sym.quotearg_n_options
0x000038ff      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00003904      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000390d      750a           jne 0x3919                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x0000390f      4883c448       add rsp, 0x48
0x00003913      c3             ret
0x00003914      e827daffff     call sym.imp.abort
0x00003919      e8e2daffff     call sym.imp.__stack_chk_fail
0x0000391e      6690           nop
;-- quotearg_n_style_mem:
0x00003920      4883ec48       sub rsp, 0x48
0x00003924      4889d0         mov rax, rdx
0x00003927      4889ca         mov rdx, rcx
0x0000392a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00003933      48894c2438     mov qword [rsp + 0x38], rcx
0x00003938      31c9           xor ecx, ecx
0x0000393a      83fe0a         cmp esi, 0xa
0x0000393d      7461           je 0x39a0
0x0000393f      893424         mov dword [rsp], esi
0x00003942      4889e1         mov rcx, rsp
0x00003945      4889c6         mov rsi, rax
0x00003948      48c744240400.  mov qword [rsp + 4], 0
0x00003951      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000395a      48c744241400.  mov qword [rsp + 0x14], 0
0x00003963      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0000396c      48c744242400.  mov qword [rsp + 0x24], 0
0x00003975      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000397e      c74424340000.  mov dword [rsp + 0x34], 0
0x00003986      e8b5f9ffff     call sym.quotearg_n_options
0x0000398b      488b542438     mov rdx, qword [rsp + 0x38]
0x00003990      644833142528.  xor rdx, qword fs:[0x28]
0x00003999      750a           jne 0x39a5
0x0000399b      4883c448       add rsp, 0x48
0x0000399f      c3             ret
0x000039a0      e89bd9ffff     call sym.imp.abort
0x000039a5      e856daffff     call sym.imp.__stack_chk_fail
0x000039aa      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x000039b0      4889f2         mov rdx, rsi
0x000039b3      89fe           mov esi, edi
0x000039b5      31ff           xor edi, edi
0x000039b7      e9d4feffff     jmp sym.quotearg_n_style
0x000039bc      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x000039c0      4889d1         mov rcx, rdx
0x000039c3      4889f2         mov rdx, rsi
0x000039c6      89fe           mov esi, edi
0x000039c8      31ff           xor edi, edi
0x000039ca      e951ffffff     jmp sym.quotearg_n_style_mem
0x000039cf      90             nop
;-- quotearg_char_mem:
0x000039d0      4883ec48       sub rsp, 0x48
0x000039d4      89d1           mov ecx, edx
0x000039d6      64488b042528.  mov rax, qword fs:[0x28]
0x000039df      4889442438     mov qword [rsp + 0x38], rax
0x000039e4      31c0           xor eax, eax
0x000039e6      488b05434820.  mov rax, qword [0x00208230]             ; [0x208230:8]=0
0x000039ed      4989e0         mov r8, rsp
0x000039f0      83e11f         and ecx, 0x1f
0x000039f3      660f6f050548.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x000039fb      4889442430     mov qword [rsp + 0x30], rax
0x00003a00      89d0           mov eax, edx
0x00003a02      0f290424       movaps xmmword [rsp], xmm0
0x00003a06      c0e805         shr al, 5
0x00003a09      0fb6c0         movzx eax, al
0x00003a0c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00003a11      660f6f05f747.  movdqa xmm0, xmmword [0x00208210]
0x00003a19      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00003a1e      660f6f05fa47.  movdqa xmm0, xmmword [0x00208220]
0x00003a26      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00003a2b      418b11         mov edx, dword [r9]
0x00003a2e      89d0           mov eax, edx
0x00003a30      d3e8           shr eax, cl
0x00003a32      f7d0           not eax
0x00003a34      83e001         and eax, 1
0x00003a37      d3e0           shl eax, cl
0x00003a39      4c89c1         mov rcx, r8
0x00003a3c      31d0           xor eax, edx
0x00003a3e      4889f2         mov rdx, rsi
0x00003a41      4889fe         mov rsi, rdi
0x00003a44      418901         mov dword [r9], eax
0x00003a47      31ff           xor edi, edi
0x00003a49      e8f2f8ffff     call sym.quotearg_n_options
0x00003a4e      488b742438     mov rsi, qword [rsp + 0x38]
0x00003a53      644833342528.  xor rsi, qword fs:[0x28]
0x00003a5c      7505           jne 0x3a63
0x00003a5e      4883c448       add rsp, 0x48
0x00003a62      c3             ret
0x00003a63      e898d9ffff     call sym.imp.__stack_chk_fail
0x00003a68      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00003a70      400fbed6       movsx edx, sil
0x00003a74      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00003a7b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00003a80      ba3a000000     mov edx, 0x3a                           ; ':'
0x00003a85      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00003a8c      e93fffffff     jmp sym.quotearg_char_mem
0x00003a91      0f1f440000     nop dword [rax + rax]
0x00003a96      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00003aa0      ba3a000000     mov edx, 0x3a                           ; ':'
0x00003aa5      e926ffffff     jmp sym.quotearg_char_mem
0x00003aaa      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00003ab0      4883ec48       sub rsp, 0x48
0x00003ab4      4889d0         mov rax, rdx
0x00003ab7      64488b142528.  mov rdx, qword fs:[0x28]
0x00003ac0      4889542438     mov qword [rsp + 0x38], rdx
0x00003ac5      31d2           xor edx, edx
0x00003ac7      83fe0a         cmp esi, 0xa
0x00003aca      7468           je 0x3b34
0x00003acc      893424         mov dword [rsp], esi
0x00003acf      4889e1         mov rcx, rsp
0x00003ad2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00003ad9      4889c6         mov rsi, rax
0x00003adc      48c744240400.  mov qword [rsp + 4], 0
0x00003ae5      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x00003aee      48c744241400.  mov qword [rsp + 0x14], 0
0x00003af7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00003b00      48c744242400.  mov qword [rsp + 0x24], 0
0x00003b09      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00003b12      c74424340000.  mov dword [rsp + 0x34], 0
0x00003b1a      e821f8ffff     call sym.quotearg_n_options
0x00003b1f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00003b24      6448330c2528.  xor rcx, qword fs:[0x28]
0x00003b2d      750a           jne 0x3b39
0x00003b2f      4883c448       add rsp, 0x48
0x00003b33      c3             ret
0x00003b34      e807d8ffff     call sym.imp.abort
0x00003b39      e8c2d8ffff     call sym.imp.__stack_chk_fail
0x00003b3e      6690           nop
;-- quotearg_n_custom_mem:
0x00003b40      4883ec48       sub rsp, 0x48
0x00003b44      4989c9         mov r9, rcx
0x00003b47      488b0de24620.  mov rcx, qword [0x00208230]             ; [0x208230:8]=0
0x00003b4e      660f6f05aa46.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00003b56      64488b042528.  mov rax, qword fs:[0x28]
0x00003b5f      4889442438     mov qword [rsp + 0x38], rax
0x00003b64      31c0           xor eax, eax
0x00003b66      0f290424       movaps xmmword [rsp], xmm0
0x00003b6a      4885f6         test rsi, rsi
0x00003b6d      48894c2430     mov qword [rsp + 0x30], rcx
0x00003b72      c704240a0000.  mov dword [rsp], 0xa
0x00003b79      660f6f058f46.  movdqa xmm0, xmmword [0x00208210]
0x00003b81      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00003b86      660f6f059246.  movdqa xmm0, xmmword [0x00208220]
0x00003b8e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00003b93      7432           je 0x3bc7
0x00003b95      4885d2         test rdx, rdx
0x00003b98      742d           je 0x3bc7
0x00003b9a      4889742428     mov qword [rsp + 0x28], rsi
0x00003b9f      4889542430     mov qword [rsp + 0x30], rdx
0x00003ba4      4889e1         mov rcx, rsp
0x00003ba7      4c89c2         mov rdx, r8
0x00003baa      4c89ce         mov rsi, r9
0x00003bad      e88ef7ffff     call sym.quotearg_n_options
0x00003bb2      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00003bb7      6448333c2528.  xor rdi, qword fs:[0x28]
0x00003bc0      750a           jne 0x3bcc
0x00003bc2      4883c448       add rsp, 0x48
0x00003bc6      c3             ret
0x00003bc7      e874d7ffff     call sym.imp.abort
0x00003bcc      e82fd8ffff     call sym.imp.__stack_chk_fail
0x00003bd1      0f1f440000     nop dword [rax + rax]
0x00003bd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00003be0      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00003be7      e954ffffff     jmp sym.quotearg_n_custom_mem
0x00003bec      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00003bf0      4889d1         mov rcx, rdx
0x00003bf3      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00003bfa      4889f2         mov rdx, rsi
0x00003bfd      4889fe         mov rsi, rdi
0x00003c00      31ff           xor edi, edi
0x00003c02      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00003c07      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00003c10      4989c8         mov r8, rcx
0x00003c13      4889d1         mov rcx, rdx
0x00003c16      4889f2         mov rdx, rsi
0x00003c19      4889fe         mov rsi, rdi
0x00003c1c      31ff           xor edi, edi
0x00003c1e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00003c23      0f1f00         nop dword [rax]
0x00003c26      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00003c30      488d0de94320.  lea rcx, obj.quote_quoting_options      ; 0x208020
0x00003c37      e904f7ffff     jmp sym.quotearg_n_options
0x00003c3c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00003c40      488d0dd94320.  lea rcx, obj.quote_quoting_options      ; 0x208020
0x00003c47      4889f2         mov rdx, rsi
0x00003c4a      4889fe         mov rsi, rdi
0x00003c4d      31ff           xor edi, edi
0x00003c4f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00003c54      6690           nop
0x00003c56      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00003c60      488d0db94320.  lea rcx, obj.quote_quoting_options      ; 0x208020
0x00003c67      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00003c6e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00003c73      0f1f00         nop dword [rax]
0x00003c76      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00003c80      488d0d994320.  lea rcx, obj.quote_quoting_options      ; 0x208020
0x00003c87      4889fe         mov rsi, rdi
0x00003c8a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00003c91      31ff           xor edi, edi
0x00003c93      e9a8f6ffff     jmp sym.quotearg_n_options
0x00003c98      0f1f84000000.  nop dword [rax + rax]
;-- version_etc_arn:
0x00003ca0      4157           push r15
0x00003ca2      4156           push r14
0x00003ca4      4155           push r13
0x00003ca6      4154           push r12
0x00003ca8      4d89cc         mov r12, r9
0x00003cab      55             push rbp
0x00003cac      53             push rbx
0x00003cad      4889fd         mov rbp, rdi
0x00003cb0      4c89c3         mov rbx, r8
0x00003cb3      4883ec28       sub rsp, 0x28
0x00003cb7      4885f6         test rsi, rsi
0x00003cba      0f8418010000   je 0x3dd8
0x00003cc0      4989d0         mov r8, rdx
0x00003cc3      488d15de1c00.  lea rdx, [0x000059a8]                   ; "%s (%s) %s\n"
0x00003cca      4989c9         mov r9, rcx
0x00003ccd      31c0           xor eax, eax
0x00003ccf      4889f1         mov rcx, rsi
0x00003cd2      be01000000     mov esi, 1
0x00003cd7      e8e4d8ffff     call sym.imp.__fprintf_chk
0x00003cdc      488d35d81c00.  lea rsi, [0x000059bb]                   ; "(C)"
0x00003ce3      31ff           xor edi, edi
0x00003ce5      ba05000000     mov edx, 5
0x00003cea      e8e1d6ffff     call sym.imp.dcgettext
0x00003cef      488d15ea1f00.  lea rdx, obj.version_etc_copyright      ; 0x5ce0 ; "Copyright %s %d Free Software Foundation, Inc."
0x00003cf6      4889c1         mov rcx, rax
0x00003cf9      41b8e3070000   mov r8d, 0x7e3
0x00003cff      be01000000     mov esi, 1
0x00003d04      4889ef         mov rdi, rbp
0x00003d07      31c0           xor eax, eax
0x00003d09      e8b2d8ffff     call sym.imp.__fprintf_chk
0x00003d0e      488d35331d00.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x5a48 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00003d15      31ff           xor edi, edi
0x00003d17      ba05000000     mov edx, 5
0x00003d1c      e8afd6ffff     call sym.imp.dcgettext
0x00003d21      4889ee         mov rsi, rbp
0x00003d24      4889c7         mov rdi, rax
0x00003d27      e874d7ffff     call sym.imp.fputs_unlocked
0x00003d2c      4983fc09       cmp r12, 9
0x00003d30      0f873a030000   ja 0x4070
0x00003d36      488d15671f00.  lea rdx, [0x00005ca4]
0x00003d3d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00003d41      4801d0         add rax, rdx
0x00003d44      ffe0           jmp rax
0x00003d46      662e0f1f8400.  nop word cs:[rax + rax]
0x00003d50      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00003d54      488b4310       mov rax, qword [rbx + 0x10]
0x00003d58      488d35591e00.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x5bb8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x00003d5f      4c8b4308       mov r8, qword [rbx + 8]
0x00003d63      ba05000000     mov edx, 5
0x00003d68      31ff           xor edi, edi
0x00003d6a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00003d6e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00003d72      4c894c2410     mov qword [rsp + 0x10], r9
0x00003d77      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00003d7b      4c8b7318       mov r14, qword [rbx + 0x18]
0x00003d7f      48890424       mov qword [rsp], rax
0x00003d83      4c89442408     mov qword [rsp + 8], r8
0x00003d88      488b1b         mov rbx, qword [rbx]
0x00003d8b      e840d6ffff     call sym.imp.dcgettext
0x00003d90      4883ec08       sub rsp, 8
0x00003d94      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00003d99      4889c2         mov rdx, rax
0x00003d9c      4889d9         mov rcx, rbx
0x00003d9f      be01000000     mov esi, 1
0x00003da4      4889ef         mov rdi, rbp
0x00003da7      31c0           xor eax, eax
0x00003da9      4151           push r9
0x00003dab      4155           push r13
0x00003dad      4154           push r12
0x00003daf      4157           push r15
0x00003db1      4156           push r14
0x00003db3      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003db8      4c8b442438     mov r8, qword [rsp + 0x38]
0x00003dbd      e8fed7ffff     call sym.imp.__fprintf_chk
0x00003dc2      4883c430       add rsp, 0x30
0x00003dc6      4883c428       add rsp, 0x28
0x00003dca      5b             pop rbx
0x00003dcb      5d             pop rbp
0x00003dcc      415c           pop r12
0x00003dce      415d           pop r13
0x00003dd0      415e           pop r14
0x00003dd2      415f           pop r15
0x00003dd4      c3             ret
0x00003dd5      0f1f00         nop dword [rax]
0x00003dd8      4989c8         mov r8, rcx
0x00003ddb      4889d1         mov rcx, rdx
0x00003dde      488d15cf1b00.  lea rdx, str.s__s                       ; 0x59b4 ; "%s %s\n"
0x00003de5      be01000000     mov esi, 1
0x00003dea      31c0           xor eax, eax
0x00003dec      e8cfd7ffff     call sym.imp.__fprintf_chk
0x00003df1      e9e6feffff     jmp 0x3cdc
0x00003df6      662e0f1f8400.  nop word cs:[rax + rax]
0x00003e00      4c8b5340       mov r10, qword [rbx + 0x40]
0x00003e04      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00003e08      488d35d91d00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x5be8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x00003e0f      488b4310       mov rax, qword [rbx + 0x10]
0x00003e13      4c8b4308       mov r8, qword [rbx + 8]
0x00003e17      ba05000000     mov edx, 5
0x00003e1c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00003e20      4c8b6328       mov r12, qword [rbx + 0x28]
0x00003e24      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00003e28      4c8b7318       mov r14, qword [rbx + 0x18]
0x00003e2c      488b1b         mov rbx, qword [rbx]
0x00003e2f      4c89542418     mov qword [rsp + 0x18], r10
0x00003e34      4c894c2410     mov qword [rsp + 0x10], r9
0x00003e39      48890424       mov qword [rsp], rax
0x00003e3d      4c89442408     mov qword [rsp + 8], r8
0x00003e42      31ff           xor edi, edi
0x00003e44      e887d5ffff     call sym.imp.dcgettext
0x00003e49      4c8b542418     mov r10, qword [rsp + 0x18]
0x00003e4e      4152           push r10
0x00003e50      e93fffffff     jmp 0x3d94
0x00003e55      0f1f00         nop dword [rax]
0x00003e58      488b1b         mov rbx, qword [rbx]
0x00003e5b      488d355d1b00.  lea rsi, str.Written_by__s.             ; 0x59bf ; "Written by %s.\n"
0x00003e62      ba05000000     mov edx, 5
0x00003e67      31ff           xor edi, edi
0x00003e69      e862d5ffff     call sym.imp.dcgettext
0x00003e6e      4883c428       add rsp, 0x28
0x00003e72      4889d9         mov rcx, rbx
0x00003e75      4889ef         mov rdi, rbp
0x00003e78      5b             pop rbx
0x00003e79      5d             pop rbp
0x00003e7a      415c           pop r12
0x00003e7c      415d           pop r13
0x00003e7e      415e           pop r14
0x00003e80      415f           pop r15
0x00003e82      4889c2         mov rdx, rax
0x00003e85      be01000000     mov esi, 1
0x00003e8a      31c0           xor eax, eax
0x00003e8c      e92fd7ffff     jmp sym.imp.__fprintf_chk
0x00003e91      0f1f80000000.  nop dword [rax]
0x00003e98      4c8b6308       mov r12, qword [rbx + 8]
0x00003e9c      488d352c1b00.  lea rsi, str.Written_by__s_and__s.      ; 0x59cf ; "Written by %s and %s.\n"
0x00003ea3      488b1b         mov rbx, qword [rbx]
0x00003ea6      ba05000000     mov edx, 5
0x00003eab      31ff           xor edi, edi
0x00003ead      e81ed5ffff     call sym.imp.dcgettext
0x00003eb2      4883c428       add rsp, 0x28
0x00003eb6      4d89e0         mov r8, r12
0x00003eb9      4889d9         mov rcx, rbx
0x00003ebc      4889ef         mov rdi, rbp
0x00003ebf      4889c2         mov rdx, rax
0x00003ec2      be01000000     mov esi, 1
0x00003ec7      5b             pop rbx
0x00003ec8      5d             pop rbp
0x00003ec9      415c           pop r12
0x00003ecb      415d           pop r13
0x00003ecd      415e           pop r14
0x00003ecf      415f           pop r15
0x00003ed1      31c0           xor eax, eax
0x00003ed3      e9e8d6ffff     jmp sym.imp.__fprintf_chk
0x00003ed8      0f1f84000000.  nop dword [rax + rax]
0x00003ee0      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00003ee4      4c8b6308       mov r12, qword [rbx + 8]
0x00003ee8      488d35f71a00.  lea rsi, str.Written_by__s___s__and__s. ; 0x59e6 ; "Written by %s, %s, and %s.\n"
0x00003eef      488b1b         mov rbx, qword [rbx]
0x00003ef2      ba05000000     mov edx, 5
0x00003ef7      31ff           xor edi, edi
0x00003ef9      e8d2d4ffff     call sym.imp.dcgettext
0x00003efe      4883c428       add rsp, 0x28
0x00003f02      4d89e9         mov r9, r13
0x00003f05      4d89e0         mov r8, r12
0x00003f08      4889d9         mov rcx, rbx
0x00003f0b      4889ef         mov rdi, rbp
0x00003f0e      4889c2         mov rdx, rax
0x00003f11      5b             pop rbx
0x00003f12      5d             pop rbp
0x00003f13      415c           pop r12
0x00003f15      415d           pop r13
0x00003f17      415e           pop r14
0x00003f19      415f           pop r15
0x00003f1b      be01000000     mov esi, 1
0x00003f20      31c0           xor eax, eax
0x00003f22      e999d6ffff     jmp sym.imp.__fprintf_chk
0x00003f27      660f1f840000.  nop word [rax + rax]
0x00003f30      488d35e11b00.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x5b18 ; "Written by %s, %s, %s,\nand %s.\n"
0x00003f37      ba05000000     mov edx, 5
0x00003f3c      31ff           xor edi, edi
0x00003f3e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00003f42      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00003f46      4c8b6308       mov r12, qword [rbx + 8]
0x00003f4a      488b1b         mov rbx, qword [rbx]
0x00003f4d      e87ed4ffff     call sym.imp.dcgettext
0x00003f52      4883ec08       sub rsp, 8
0x00003f56      4156           push r14
0x00003f58      4889c2         mov rdx, rax
0x00003f5b      4d89e9         mov r9, r13
0x00003f5e      4d89e0         mov r8, r12
0x00003f61      4889d9         mov rcx, rbx
0x00003f64      4889ef         mov rdi, rbp
0x00003f67      be01000000     mov esi, 1
0x00003f6c      31c0           xor eax, eax
0x00003f6e      e84dd6ffff     call sym.imp.__fprintf_chk
0x00003f73      58             pop rax
0x00003f74      5a             pop rdx
0x00003f75      4883c428       add rsp, 0x28
0x00003f79      5b             pop rbx
0x00003f7a      5d             pop rbp
0x00003f7b      415c           pop r12
0x00003f7d      415d           pop r13
0x00003f7f      415e           pop r14
0x00003f81      415f           pop r15
0x00003f83      c3             ret
0x00003f84      0f1f4000       nop dword [rax]
0x00003f88      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00003f8c      488d35a51b00.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x5b38 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00003f93      ba05000000     mov edx, 5
0x00003f98      31ff           xor edi, edi
0x00003f9a      4c8b7318       mov r14, qword [rbx + 0x18]
0x00003f9e      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00003fa2      4c8b6308       mov r12, qword [rbx + 8]
0x00003fa6      488b1b         mov rbx, qword [rbx]
0x00003fa9      e822d4ffff     call sym.imp.dcgettext
0x00003fae      4157           push r15
0x00003fb0      eba4           jmp 0x3f56
0x00003fb2      660f1f440000   nop word [rax + rax]
0x00003fb8      4c8b4308       mov r8, qword [rbx + 8]
0x00003fbc      4c8b6328       mov r12, qword [rbx + 0x28]
0x00003fc0      488d35991b00.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x5b60 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00003fc7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00003fcb      4c8b7318       mov r14, qword [rbx + 0x18]
0x00003fcf      ba05000000     mov edx, 5
0x00003fd4      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00003fd8      31ff           xor edi, edi
0x00003fda      488b1b         mov rbx, qword [rbx]
0x00003fdd      4c890424       mov qword [rsp], r8
0x00003fe1      e8ead3ffff     call sym.imp.dcgettext
0x00003fe6      4883ec08       sub rsp, 8
0x00003fea      4d89e9         mov r9, r13
0x00003fed      4154           push r12
0x00003fef      4157           push r15
0x00003ff1      4156           push r14
0x00003ff3      4c8b442420     mov r8, qword [rsp + 0x20]
0x00003ff8      4889d9         mov rcx, rbx
0x00003ffb      4889c2         mov rdx, rax
0x00003ffe      4889ef         mov rdi, rbp
0x00004001      be01000000     mov esi, 1
0x00004006      31c0           xor eax, eax
0x00004008      e8b3d5ffff     call sym.imp.__fprintf_chk
0x0000400d      4883c420       add rsp, 0x20
0x00004011      4883c428       add rsp, 0x28
0x00004015      5b             pop rbx
0x00004016      5d             pop rbp
0x00004017      415c           pop r12
0x00004019      415d           pop r13
0x0000401b      415e           pop r14
0x0000401d      415f           pop r15
0x0000401f      c3             ret
0x00004020      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00004024      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004028      488d35591b00.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x5b88 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x0000402f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004033      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004037      ba05000000     mov edx, 5
0x0000403c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004040      4c8b4308       mov r8, qword [rbx + 8]
0x00004044      31ff           xor edi, edi
0x00004046      4c894c2408     mov qword [rsp + 8], r9
0x0000404b      488b1b         mov rbx, qword [rbx]
0x0000404e      4c890424       mov qword [rsp], r8
0x00004052      e879d3ffff     call sym.imp.dcgettext
0x00004057      4155           push r13
0x00004059      4154           push r12
0x0000405b      4157           push r15
0x0000405d      4156           push r14
0x0000405f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00004064      eb8d           jmp 0x3ff3
0x00004066      662e0f1f8400.  nop word cs:[rax + rax]
0x00004070      4c8b5340       mov r10, qword [rbx + 0x40]
0x00004074      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004078      ba05000000     mov edx, 5
0x0000407d      488b4310       mov rax, qword [rbx + 0x10]
0x00004081      4c8b4308       mov r8, qword [rbx + 8]
0x00004085      488d35941b00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x5c20 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x0000408c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004090      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004094      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004098      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000409c      4c89542418     mov qword [rsp + 0x18], r10
0x000040a1      4c894c2410     mov qword [rsp + 0x10], r9
0x000040a6      48890424       mov qword [rsp], rax
0x000040aa      4c89442408     mov qword [rsp + 8], r8
0x000040af      488b1b         mov rbx, qword [rbx]
0x000040b2      e98bfdffff     jmp 0x3e42
0x000040b7      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x000040c0      4531c9         xor r9d, r9d
0x000040c3      49833800       cmp qword [r8], 0
0x000040c7      7412           je 0x40db
0x000040c9      0f1f80000000.  nop dword [rax]
0x000040d0      4983c101       add r9, 1
0x000040d4      4b833cc800     cmp qword [r8 + r9*8], 0
0x000040d9      75f5           jne 0x40d0
0x000040db      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x000040e0      4883ec68       sub rsp, 0x68
0x000040e4      4d89c2         mov r10, r8
0x000040e7      4531c9         xor r9d, r9d
0x000040ea      64488b042528.  mov rax, qword fs:[0x28]
0x000040f3      4889442458     mov qword [rsp + 0x58], rax
0x000040f8      31c0           xor eax, eax
0x000040fa      4989e0         mov r8, rsp
0x000040fd      0f1f00         nop dword [rax]
0x00004100      418b02         mov eax, dword [r10]
0x00004103      83f82f         cmp eax, 0x2f
0x00004106      7742           ja 0x414a
0x00004108      4189c3         mov r11d, eax
0x0000410b      4d035a10       add r11, qword [r10 + 0x10]
0x0000410f      83c008         add eax, 8
0x00004112      418902         mov dword [r10], eax
0x00004115      498b03         mov rax, qword [r11]
0x00004118      4885c0         test rax, rax
0x0000411b      4b8904c8       mov qword [r8 + r9*8], rax
0x0000411f      740a           je 0x412b
0x00004121      4983c101       add r9, 1
0x00004125      4983f90a       cmp r9, 0xa
0x00004129      75d5           jne 0x4100
0x0000412b      e870fbffff     call sym.version_etc_arn
0x00004130      488b442458     mov rax, qword [rsp + 0x58]
0x00004135      644833042528.  xor rax, qword fs:[0x28]
0x0000413e      7505           jne 0x4145
0x00004140      4883c468       add rsp, 0x68
0x00004144      c3             ret
0x00004145      e8b6d2ffff     call sym.imp.__stack_chk_fail
0x0000414a      4d8b5a08       mov r11, qword [r10 + 8]
0x0000414e      498d4308       lea rax, [r11 + 8]
0x00004152      49894208       mov qword [r10 + 8], rax
0x00004156      ebbd           jmp 0x4115
0x00004158      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00004160      55             push rbp
0x00004161      53             push rbx
0x00004162      41ba20000000   mov r10d, 0x20                          ; "@"
0x00004168      4531db         xor r11d, r11d
0x0000416b      4881ecb80000.  sub rsp, 0xb8
0x00004172      64488b042528.  mov rax, qword fs:[0x28]
0x0000417b      4889442478     mov qword [rsp + 0x78], rax
0x00004180      31c0           xor eax, eax
0x00004182      488d8424d000.  lea rax, [rsp + 0xd0]
0x0000418a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00004192      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x0000419a      4c8d442420     lea r8, [rsp + 0x20]
0x0000419f      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x000041a7      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x000041af      4889442410     mov qword [rsp + 0x10], rax
0x000041b4      488d84248000.  lea rax, [rsp + 0x80]
0x000041bc      4531c9         xor r9d, r9d
0x000041bf      4889442418     mov qword [rsp + 0x18], rax
0x000041c4      4889c5         mov rbp, rax
0x000041c7      660f1f840000.  nop word [rax + rax]
0x000041d0      4183fa2f       cmp r10d, 0x2f
0x000041d4      7756           ja 0x422c
0x000041d6      4489d0         mov eax, r10d
0x000041d9      41bb01000000   mov r11d, 1
0x000041df      4183c208       add r10d, 8
0x000041e3      4801e8         add rax, rbp
0x000041e6      488b00         mov rax, qword [rax]
0x000041e9      4885c0         test rax, rax
0x000041ec      4b8904c8       mov qword [r8 + r9*8], rax
0x000041f0      740a           je 0x41fc
0x000041f2      4983c101       add r9, 1
0x000041f6      4983f90a       cmp r9, 0xa
0x000041fa      75d4           jne 0x41d0
0x000041fc      4584db         test r11b, r11b
0x000041ff      7524           jne 0x4225
0x00004201      e89afaffff     call sym.version_etc_arn
0x00004206      488b442478     mov rax, qword [rsp + 0x78]
0x0000420b      644833042528.  xor rax, qword fs:[0x28]
0x00004214      750a           jne 0x4220
0x00004216      4881c4b80000.  add rsp, 0xb8
0x0000421d      5b             pop rbx
0x0000421e      5d             pop rbp
0x0000421f      c3             ret
0x00004220      e8dbd1ffff     call sym.imp.__stack_chk_fail
0x00004225      4489542408     mov dword [rsp + 8], r10d
0x0000422a      ebd5           jmp 0x4201
0x0000422c      4889d8         mov rax, rbx
0x0000422f      4883c308       add rbx, 8
0x00004233      ebb1           jmp 0x41e6
0x00004235      90             nop
0x00004236      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00004240      53             push rbx
0x00004241      488d35ba1700.  lea rsi, str.Report_bugs_to:__s         ; 0x5a02 ; "\nReport bugs to: %s\n"
0x00004248      ba05000000     mov edx, 5
0x0000424d      31ff           xor edi, edi
0x0000424f      e87cd1ffff     call sym.imp.dcgettext
0x00004254      488d15bc1700.  lea rdx, str.bug_coreutils_gnu.org      ; 0x5a17 ; "bug-coreutils@gnu.org"
0x0000425b      4889c6         mov rsi, rax
0x0000425e      bf01000000     mov edi, 1
0x00004263      31c0           xor eax, eax
0x00004265      e8e6d2ffff     call sym.imp.__printf_chk
0x0000426a      488d35bc1700.  lea rsi, str.s_home_page:___s           ; 0x5a2d ; "%s home page: <%s>\n"
0x00004271      ba05000000     mov edx, 5
0x00004276      31ff           xor edi, edi
0x00004278      e853d1ffff     call sym.imp.dcgettext
0x0000427d      488d0d241100.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x53a8 ; "https://www.gnu.org/software/coreutils/"
0x00004284      488d15740d00.  lea rdx, str.GNU_coreutils              ; 0x4fff ; "GNU coreutils"
0x0000428b      4889c6         mov rsi, rax
0x0000428e      bf01000000     mov edi, 1
0x00004293      31c0           xor eax, eax
0x00004295      e8b6d2ffff     call sym.imp.__printf_chk
0x0000429a      488b1de73d20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208088:8]=0
0x000042a1      488d35b81900.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x5c60 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x000042a8      31ff           xor edi, edi
0x000042aa      ba05000000     mov edx, 5
0x000042af      e81cd1ffff     call sym.imp.dcgettext
0x000042b4      4889de         mov rsi, rbx
0x000042b7      4889c7         mov rdi, rax
0x000042ba      5b             pop rbx
0x000042bb      e9e0d1ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x000042c0      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x000042c1      4889fb         mov rbx, rdi
0x000042c4      e827d2ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x000042c9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x000042cc      7505           jne 0x42d3
0x000042ce      4885db         test rbx, rbx
0x000042d1      7502           jne 0x42d5
0x000042d3      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x000042d4      c3             ret
0x000042d5      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x000042da      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x000042e0      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x000042e3      48f7e6         mul rsi
0x000042e6      4889c7         mov rdi, rax
0x000042e9      0f90c0         seto al
0x000042ec      4885ff         test rdi, rdi
0x000042ef      780a           js 0x42fb
0x000042f1      0fb6c0         movzx eax, al
0x000042f4      4885c0         test rax, rax
0x000042f7      7502           jne 0x42fb
0x000042f9      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x000042fb      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x000042ff      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00004304      6690           nop
0x00004306      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00004310      ebae           jmp sym.xmalloc
0x00004312      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00004316      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00004320      4885f6         test rsi, rsi
0x00004323      53             push rbx
0x00004324      4889f3         mov rbx, rsi
0x00004327      7505           jne 0x432e
0x00004329      4885ff         test rdi, rdi
0x0000432c      751a           jne 0x4348
0x0000432e      4889de         mov rsi, rbx
0x00004331      e8fad1ffff     call sym.imp.realloc
0x00004336      4885c0         test rax, rax
0x00004339      7505           jne 0x4340
0x0000433b      4885db         test rbx, rbx
0x0000433e      7511           jne 0x4351                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00004340      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00004341      c3             ret
0x00004342      660f1f440000   nop word [rax + rax]
0x00004348      e8e3cfffff     call sym.imp.free
0x0000434d      31c0           xor eax, eax
0x0000434f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00004350      c3             ret
0x00004351      e8ba010000     call sym.xalloc_die
0x00004356      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00004360      4889f0         mov rax, rsi
0x00004363      48f7e2         mul rdx
0x00004366      4889c6         mov rsi, rax
0x00004369      0f90c0         seto al
0x0000436c      4885f6         test rsi, rsi
0x0000436f      780a           js 0x437b
0x00004371      0fb6c0         movzx eax, al
0x00004374      4885c0         test rax, rax
0x00004377      7502           jne 0x437b
0x00004379      eba5           jmp sym.xrealloc
0x0000437b      4883ec08       sub rsp, 8
0x0000437f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00004384      6690           nop
0x00004386      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00004390      4885ff         test rdi, rdi
0x00004393      4989d1         mov r9, rdx
0x00004396      488b0e         mov rcx, qword [rsi]
0x00004399      7435           je 0x43d0
0x0000439b      31d2           xor edx, edx
0x0000439d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x000043a7      49f7f1         div r9
0x000043aa      4839c8         cmp rax, rcx
0x000043ad      763c           jbe 0x43eb
0x000043af      4889c8         mov rax, rcx
0x000043b2      48d1e8         shr rax, 1
0x000043b5      488d4c0801     lea rcx, [rax + rcx + 1]
0x000043ba      48890e         mov qword [rsi], rcx
0x000043bd      490fafc9       imul rcx, r9
0x000043c1      4889ce         mov rsi, rcx
0x000043c4      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x000043c9      0f1f80000000.  nop dword [rax]
0x000043d0      4885c9         test rcx, rcx
0x000043d3      7423           je 0x43f8
0x000043d5      4889c8         mov rax, rcx
0x000043d8      49f7e1         mul r9
0x000043db      0f90c2         seto dl
0x000043de      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x000043e1      0fb6d2         movzx edx, dl
0x000043e4      7805           js 0x43eb
0x000043e6      4885d2         test rdx, rdx
0x000043e9      74cf           je 0x43ba
0x000043eb      4883ec08       sub rsp, 8
0x000043ef      e81c010000     call sym.xalloc_die
0x000043f4      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x000043f8      31d2           xor edx, edx
0x000043fa      b880000000     mov eax, 0x80
0x000043ff      4531c0         xor r8d, r8d
0x00004402      49f7f1         div r9
0x00004405      4885c0         test rax, rax
0x00004408      410f94c0       sete r8b
0x0000440c      498d0c00       lea rcx, [r8 + rax]
0x00004410      ebc3           jmp 0x43d5
0x00004412      0f1f4000       nop dword [rax]
0x00004416      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00004420      4885ff         test rdi, rdi
0x00004423      488b06         mov rax, qword [rsi]
0x00004426      7428           je 0x4450
0x00004428      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00004432      4839d0         cmp rax, rdx
0x00004435      772a           ja 0x4461
0x00004437      4889c2         mov rdx, rax
0x0000443a      48d1ea         shr rdx, 1
0x0000443d      488d440201     lea rax, [rdx + rax + 1]
0x00004442      488906         mov qword [rsi], rax
0x00004445      4889c6         mov rsi, rax
0x00004448      e9d3feffff     jmp sym.xrealloc
0x0000444d      0f1f00         nop dword [rax]
0x00004450      4885c0         test rax, rax
0x00004453      ba80000000     mov edx, 0x80
0x00004458      480f44c2       cmove rax, rdx
0x0000445c      4885c0         test rax, rax
0x0000445f      79e1           jns 0x4442
0x00004461      4883ec08       sub rsp, 8
0x00004465      e8a6000000     call sym.xalloc_die
0x0000446a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00004470      53             push rbx
0x00004471      4889fb         mov rbx, rdi
0x00004474      e847feffff     call sym.xmalloc
0x00004479      4889da         mov rdx, rbx
0x0000447c      31f6           xor esi, esi
0x0000447e      4889c7         mov rdi, rax
0x00004481      5b             pop rbx
0x00004482      e9f9cfffff     jmp sym.imp.memset
0x00004487      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00004490      4889f8         mov rax, rdi
0x00004493      4883ec08       sub rsp, 8
0x00004497      48f7e6         mul rsi
0x0000449a      0f90c2         seto dl
0x0000449d      4885c0         test rax, rax
0x000044a0      7817           js 0x44b9
0x000044a2      0fb6d2         movzx edx, dl
0x000044a5      4885d2         test rdx, rdx
0x000044a8      750f           jne 0x44b9
0x000044aa      e801d0ffff     call sym.imp.calloc
0x000044af      4885c0         test rax, rax
0x000044b2      7405           je 0x44b9
0x000044b4      4883c408       add rsp, 8
0x000044b8      c3             ret
0x000044b9      e852000000     call sym.xalloc_die
0x000044be      6690           nop
;-- xmemdup:
0x000044c0      55             push rbp
0x000044c1      53             push rbx
0x000044c2      4889fd         mov rbp, rdi
0x000044c5      4889f7         mov rdi, rsi
0x000044c8      4889f3         mov rbx, rsi
0x000044cb      4883ec08       sub rsp, 8
0x000044cf      e8ecfdffff     call sym.xmalloc
0x000044d4      4883c408       add rsp, 8
0x000044d8      4889da         mov rdx, rbx
0x000044db      4889ee         mov rsi, rbp
0x000044de      5b             pop rbx
0x000044df      5d             pop rbp
0x000044e0      4889c7         mov rdi, rax
0x000044e3      e9e8cfffff     jmp sym.imp.memcpy
0x000044e8      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x000044f0      53             push rbx
0x000044f1      4889fb         mov rbx, rdi
0x000044f4      e8f7ceffff     call sym.imp.strlen
0x000044f9      4889df         mov rdi, rbx
0x000044fc      488d7001       lea rsi, [rax + 1]
0x00004500      5b             pop rbx
0x00004501      ebbd           jmp sym.xmemdup
0x00004503      662e0f1f8400.  nop word cs:[rax + rax]
0x0000450d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00004510      488d35f81700.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x5d0f ; "memory exhausted"
0x00004517      4883ec08       sub rsp, 8
0x0000451b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00004520      31ff           xor edi, edi
0x00004522      e8a9ceffff     call sym.imp.dcgettext
0x00004527      8b3deb3a2000   mov edi, dword [obj.exit_failure]       ; [0x208018:4]=1
0x0000452d      488d155c0f00.  lea rdx, [0x00005490]                   ; "%s"
0x00004534      4889c1         mov rcx, rax
0x00004537      31f6           xor esi, esi
0x00004539      31c0           xor eax, eax
0x0000453b      e820d0ffff     call sym.imp.error
0x00004540      e8fbcdffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00004545      662e0f1f8400.  nop word cs:[rax + rax]
0x0000454f      90             nop
;-- xstrtol:
0x00004550      4157           push r15
0x00004552      4156           push r14
0x00004554      4155           push r13
0x00004556      4154           push r12
0x00004558      55             push rbp
0x00004559      53             push rbx
0x0000455a      4883ec28       sub rsp, 0x28
0x0000455e      64488b042528.  mov rax, qword fs:[0x28]
0x00004567      4889442418     mov qword [rsp + 0x18], rax
0x0000456c      31c0           xor eax, eax
0x0000456e      83fa24         cmp edx, 0x24
0x00004571      0f8768060000   ja 0x4bdf
0x00004577      488d442410     lea rax, [rsp + 0x10]
0x0000457c      4885f6         test rsi, rsi
0x0000457f      4889f3         mov rbx, rsi
0x00004582      4989fc         mov r12, rdi
0x00004585      89d5           mov ebp, edx
0x00004587      4989ce         mov r14, rcx
0x0000458a      480f44d8       cmove rbx, rax
0x0000458e      4d89c7         mov r15, r8
0x00004591      e8bacdffff     call sym.imp.__errno_location
0x00004596      89ea           mov edx, ebp
0x00004598      c70000000000   mov dword [rax], 0
0x0000459e      4889de         mov rsi, rbx
0x000045a1      4c89e7         mov rdi, r12
0x000045a4      4989c5         mov r13, rax
0x000045a7      e814cfffff     call sym.imp.strtol
0x000045ac      488b0b         mov rcx, qword [rbx]
0x000045af      4889c5         mov rbp, rax
0x000045b2      4c39e1         cmp rcx, r12
0x000045b5      7461           je 0x4618
0x000045b7      418b4500       mov eax, dword [r13]
0x000045bb      85c0           test eax, eax
0x000045bd      7541           jne 0x4600
0x000045bf      4531e4         xor r12d, r12d
0x000045c2      4d85ff         test r15, r15
0x000045c5      740d           je 0x45d4
0x000045c7      440fb629       movzx r13d, byte [rcx]
0x000045cb      4584ed         test r13b, r13b
0x000045ce      0f857f000000   jne 0x4653
0x000045d4      49892e         mov qword [r14], rbp
0x000045d7      488b7c2418     mov rdi, qword [rsp + 0x18]
0x000045dc      6448333c2528.  xor rdi, qword fs:[0x28]
0x000045e5      4489e0         mov eax, r12d
0x000045e8      0f8510060000   jne 0x4bfe
0x000045ee      4883c428       add rsp, 0x28
0x000045f2      5b             pop rbx
0x000045f3      5d             pop rbp
0x000045f4      415c           pop r12
0x000045f6      415d           pop r13
0x000045f8      415e           pop r14
0x000045fa      415f           pop r15
0x000045fc      c3             ret
0x000045fd      0f1f00         nop dword [rax]
0x00004600      83f822         cmp eax, 0x22
0x00004603      41bc04000000   mov r12d, 4
0x00004609      75cc           jne 0x45d7
0x0000460b      41bc01000000   mov r12d, 1
0x00004611      ebaf           jmp 0x45c2
0x00004613      0f1f440000     nop dword [rax + rax]
0x00004618      4d85ff         test r15, r15
0x0000461b      0f848f040000   je 0x4ab0
0x00004621      440fb629       movzx r13d, byte [rcx]
0x00004625      48894c2408     mov qword [rsp + 8], rcx
0x0000462a      41bc04000000   mov r12d, 4
0x00004630      4584ed         test r13b, r13b
0x00004633      74a2           je 0x45d7
0x00004635      410fbef5       movsx esi, r13b
0x00004639      4c89ff         mov rdi, r15
0x0000463c      e8efcdffff     call sym.imp.strchr
0x00004641      4885c0         test rax, rax
0x00004644      488b4c2408     mov rcx, qword [rsp + 8]
0x00004649      748c           je 0x45d7
0x0000464b      bd01000000     mov ebp, 1
0x00004650      4531e4         xor r12d, r12d
0x00004653      410fbef5       movsx esi, r13b
0x00004657      4c89ff         mov rdi, r15
0x0000465a      48894c2408     mov qword [rsp + 8], rcx
0x0000465f      e8cccdffff     call sym.imp.strchr
0x00004664      4885c0         test rax, rax
0x00004667      488b4c2408     mov rcx, qword [rsp + 8]
0x0000466c      745a           je 0x46c8
0x0000466e      418d45bb       lea eax, [r13 - 0x45]
0x00004672      3c2f           cmp al, 0x2f
0x00004674      7762           ja 0x46d8
0x00004676      48ba45893000.  movabs rdx, 0x814400308945
0x00004680      480fa3c2       bt rdx, rax
0x00004684      7352           jae 0x46d8
0x00004686      be30000000     mov esi, 0x30                           ; '0'
0x0000468b      4c89ff         mov rdi, r15
0x0000468e      48894c2408     mov qword [rsp + 8], rcx
0x00004693      e898cdffff     call sym.imp.strchr
0x00004698      4885c0         test rax, rax
0x0000469b      488b4c2408     mov rcx, qword [rsp + 8]
0x000046a0      7436           je 0x46d8
0x000046a2      0fb64101       movzx eax, byte [rcx + 1]
0x000046a6      3c44           cmp al, 0x44
0x000046a8      740c           je 0x46b6
0x000046aa      3c69           cmp al, 0x69
0x000046ac      0f84e6040000   je 0x4b98
0x000046b2      3c42           cmp al, 0x42
0x000046b4      7522           jne 0x46d8
0x000046b6      bf02000000     mov edi, 2
0x000046bb      b8e8030000     mov eax, 0x3e8
0x000046c0      eb20           jmp 0x46e2
0x000046c2      660f1f440000   nop word [rax + rax]
0x000046c8      49892e         mov qword [r14], rbp
0x000046cb      4183cc02       or r12d, 2
0x000046cf      e903ffffff     jmp 0x45d7
0x000046d4      0f1f4000       nop dword [rax]
0x000046d8      bf01000000     mov edi, 1
0x000046dd      b800040000     mov eax, 0x400
0x000046e2      4183ed42       sub r13d, 0x42
0x000046e6      4180fd35       cmp r13b, 0x35
0x000046ea      77dc           ja 0x46c8
0x000046ec      488d35751600.  lea rsi, [0x00005d68]
0x000046f3      450fb6ed       movzx r13d, r13b
0x000046f7      4a6314ae       movsxd rdx, dword [rsi + r13*4]
0x000046fb      4801f2         add rdx, rsi
0x000046fe      ffe2           jmp rdx
0x00004700      49b800000000.  movabs r8, 0x8000000000000000
0x0000470a      4863f0         movsxd rsi, eax
0x0000470d      4c89c0         mov rax, r8
0x00004710      4899           cqo
0x00004712      48f7fe         idiv rsi
0x00004715      4839c5         cmp rbp, rax
0x00004718      4989c1         mov r9, rax
0x0000471b      0f8ca4040000   jl 0x4bc5
0x00004721      49baffffffff.  movabs r10, 0x7fffffffffffffff          ; 9223372036854775807
0x0000472b      4c89d0         mov rax, r10
0x0000472e      4899           cqo
0x00004730      48f7fe         idiv rsi
0x00004733      4839c5         cmp rbp, rax
0x00004736      0f8f96040000   jg 0x4bd2
0x0000473c      480fafee       imul rbp, rsi
0x00004740      4939e9         cmp r9, rbp
0x00004743      0f8f7c040000   jg 0x4bc5
0x00004749      4839e8         cmp rax, rbp
0x0000474c      0f8c80040000   jl 0x4bd2
0x00004752      480fafee       imul rbp, rsi
0x00004756      31c0           xor eax, eax
0x00004758      4109c4         or r12d, eax
0x0000475b      0f1f440000     nop dword [rax + rax]
0x00004760      4863c7         movsxd rax, edi
0x00004763      4801c1         add rcx, rax
0x00004766      4489e0         mov eax, r12d
0x00004769      83c802         or eax, 2
0x0000476c      48890b         mov qword [rbx], rcx
0x0000476f      803900         cmp byte [rcx], 0
0x00004772      440f45e0       cmovne r12d, eax
0x00004776      e959feffff     jmp 0x45d4
0x0000477b      0f1f440000     nop dword [rax + rax]
0x00004780      48b800000000.  movabs rax, 0xc000000000000000
0x0000478a      4839c5         cmp rbp, rax
0x0000478d      0f8c2d030000   jl 0x4ac0
0x00004793      48b8ffffffff.  movabs rax, 0x3fffffffffffffff          ; 4611686018427387903
0x0000479d      4839c5         cmp rbp, rax
0x000047a0      0f8fda030000   jg 0x4b80
0x000047a6      4801ed         add rbp, rbp
0x000047a9      ebb5           jmp 0x4760
0x000047ab      0f1f440000     nop dword [rax + rax]
0x000047b0      48b800000000.  movabs rax, 0xffc0000000000000
0x000047ba      4839c5         cmp rbp, rax
0x000047bd      0f8cfd020000   jl 0x4ac0
0x000047c3      48b8ffffffff.  movabs rax, 0x3fffffffffffff            ; 18014398509481983
0x000047cd      4839c5         cmp rbp, rax
0x000047d0      0f8faa030000   jg 0x4b80
0x000047d6      48c1e509       shl rbp, 9
0x000047da      eb84           jmp 0x4760
0x000047dc      0f1f4000       nop dword [rax]
0x000047e0      4863f0         movsxd rsi, eax
0x000047e3      48b800000000.  movabs rax, 0x8000000000000000
0x000047ed      41b807000000   mov r8d, 7
0x000047f3      4899           cqo
0x000047f5      4531db         xor r11d, r11d
0x000047f8      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x00004802      48f7fe         idiv rsi
0x00004805      4989c2         mov r10, rax
0x00004808      eb25           jmp 0x482f
0x0000480a      660f1f440000   nop word [rax + rax]
0x00004810      4c89c8         mov rax, r9
0x00004813      4899           cqo
0x00004815      48f7fe         idiv rsi
0x00004818      4839e8         cmp rax, rbp
0x0000481b      0f8ce7020000   jl 0x4b08
0x00004821      480fafee       imul rbp, rsi
0x00004825      4183e801       sub r8d, 1
0x00004829      0f8421010000   je 0x4950
0x0000482f      4939ea         cmp r10, rbp
0x00004832      7edc           jle 0x4810
0x00004834      41bb01000000   mov r11d, 1
0x0000483a      48bd00000000.  movabs rbp, 0x8000000000000000
0x00004844      ebdf           jmp 0x4825
0x00004846      662e0f1f8400.  nop word cs:[rax + rax]
0x00004850      4863f0         movsxd rsi, eax
0x00004853      48b800000000.  movabs rax, 0x8000000000000000
0x0000485d      41b808000000   mov r8d, 8
0x00004863      4899           cqo
0x00004865      4531db         xor r11d, r11d
0x00004868      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x00004872      48f7fe         idiv rsi
0x00004875      4989c2         mov r10, rax
0x00004878      eb25           jmp 0x489f
0x0000487a      660f1f440000   nop word [rax + rax]
0x00004880      4c89c8         mov rax, r9
0x00004883      4899           cqo
0x00004885      48f7fe         idiv rsi
0x00004888      4839e8         cmp rax, rbp
0x0000488b      0f8c47020000   jl 0x4ad8
0x00004891      480fafee       imul rbp, rsi
0x00004895      4183e801       sub r8d, 1
0x00004899      0f84b1000000   je 0x4950
0x0000489f      4939ea         cmp r10, rbp
0x000048a2      7edc           jle 0x4880
0x000048a4      41bb01000000   mov r11d, 1
0x000048aa      48bd00000000.  movabs rbp, 0x8000000000000000
0x000048b4      ebdf           jmp 0x4895
0x000048b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000048c0      49b800000000.  movabs r8, 0x8000000000000000
0x000048ca      4863f0         movsxd rsi, eax
0x000048cd      4c89c0         mov rax, r8
0x000048d0      4899           cqo
0x000048d2      48f7fe         idiv rsi
0x000048d5      4839c5         cmp rbp, rax
0x000048d8      0f8ce2010000   jl 0x4ac0
0x000048de      4983e801       sub r8, 1
0x000048e2      4c89c0         mov rax, r8
0x000048e5      4899           cqo
0x000048e7      48f7fe         idiv rsi
0x000048ea      4839c5         cmp rbp, rax
0x000048ed      0f8f8d020000   jg 0x4b80
0x000048f3      480fafee       imul rbp, rsi
0x000048f7      e964feffff     jmp 0x4760
0x000048fc      0f1f4000       nop dword [rax]
0x00004900      4863f0         movsxd rsi, eax
0x00004903      48b800000000.  movabs rax, 0x8000000000000000
0x0000490d      41b803000000   mov r8d, 3
0x00004913      4899           cqo
0x00004915      4531db         xor r11d, r11d
0x00004918      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x00004922      48f7fe         idiv rsi
0x00004925      4989c2         mov r10, rax
0x00004928      4939ea         cmp r10, rbp
0x0000492b      0f8fef010000   jg 0x4b20
0x00004931      4c89c8         mov rax, r9
0x00004934      4899           cqo
0x00004936      48f7fe         idiv rsi
0x00004939      4839e8         cmp rax, rbp
0x0000493c      0f8c6e020000   jl 0x4bb0
0x00004942      480fafee       imul rbp, rsi
0x00004946      4183e801       sub r8d, 1
0x0000494a      75dc           jne 0x4928
0x0000494c      0f1f4000       nop dword [rax]
0x00004950      4509dc         or r12d, r11d
0x00004953      e908feffff     jmp 0x4760
0x00004958      0f1f84000000.  nop dword [rax + rax]
0x00004960      4863f0         movsxd rsi, eax
0x00004963      48b800000000.  movabs rax, 0x8000000000000000
0x0000496d      41b806000000   mov r8d, 6
0x00004973      4899           cqo
0x00004975      4531db         xor r11d, r11d
0x00004978      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x00004982      48f7fe         idiv rsi
0x00004985      4989c2         mov r10, rax
0x00004988      eb21           jmp 0x49ab
0x0000498a      660f1f440000   nop word [rax + rax]
0x00004990      4c89c8         mov rax, r9
0x00004993      4899           cqo
0x00004995      48f7fe         idiv rsi
0x00004998      4839e8         cmp rax, rbp
0x0000499b      0f8c97010000   jl 0x4b38
0x000049a1      480fafee       imul rbp, rsi
0x000049a5      4183e801       sub r8d, 1
0x000049a9      74a5           je 0x4950
0x000049ab      4939ea         cmp r10, rbp
0x000049ae      7ee0           jle 0x4990
0x000049b0      41bb01000000   mov r11d, 1
0x000049b6      48bd00000000.  movabs rbp, 0x8000000000000000
0x000049c0      ebe3           jmp 0x49a5
0x000049c2      660f1f440000   nop word [rax + rax]
0x000049c8      4863f0         movsxd rsi, eax
0x000049cb      48b800000000.  movabs rax, 0x8000000000000000
0x000049d5      41b805000000   mov r8d, 5
0x000049db      4899           cqo
0x000049dd      4531db         xor r11d, r11d
0x000049e0      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x000049ea      48f7fe         idiv rsi
0x000049ed      4989c2         mov r10, rax
0x000049f0      eb25           jmp 0x4a17
0x000049f2      660f1f440000   nop word [rax + rax]
0x000049f8      4c89c8         mov rax, r9
0x000049fb      4899           cqo
0x000049fd      48f7fe         idiv rsi
0x00004a00      4839e8         cmp rax, rbp
0x00004a03      0f8c47010000   jl 0x4b50
0x00004a09      480fafee       imul rbp, rsi
0x00004a0d      4183e801       sub r8d, 1
0x00004a11      0f8439ffffff   je 0x4950
0x00004a17      4939ea         cmp r10, rbp
0x00004a1a      7edc           jle 0x49f8
0x00004a1c      41bb01000000   mov r11d, 1
0x00004a22      48bd00000000.  movabs rbp, 0x8000000000000000
0x00004a2c      ebdf           jmp 0x4a0d
0x00004a2e      6690           nop
0x00004a30      48b800000000.  movabs rax, 0xffe0000000000000
0x00004a3a      4839c5         cmp rbp, rax
0x00004a3d      0f8c7d000000   jl 0x4ac0
0x00004a43      48b8ffffffff.  movabs rax, 0x1fffffffffffff            ; 9007199254740991
0x00004a4d      4839c5         cmp rbp, rax
0x00004a50      0f8f2a010000   jg 0x4b80
0x00004a56      48c1e50a       shl rbp, 0xa
0x00004a5a      e901fdffff     jmp 0x4760
0x00004a5f      90             nop
0x00004a60      4863f0         movsxd rsi, eax
0x00004a63      48b800000000.  movabs rax, 0x8000000000000000
0x00004a6d      41b804000000   mov r8d, 4
0x00004a73      4899           cqo
0x00004a75      4531db         xor r11d, r11d
0x00004a78      49b9ffffffff.  movabs r9, 0x7fffffffffffffff           ; 9223372036854775807
0x00004a82      48f7fe         idiv rsi
0x00004a85      4989c2         mov r10, rax
0x00004a88      4939ea         cmp r10, rbp
0x00004a8b      7f63           jg 0x4af0
0x00004a8d      4c89c8         mov rax, r9
0x00004a90      4899           cqo
0x00004a92      48f7fe         idiv rsi
0x00004a95      4839e8         cmp rax, rbp
0x00004a98      0f8cca000000   jl 0x4b68
0x00004a9e      480fafee       imul rbp, rsi
0x00004aa2      4183e801       sub r8d, 1
0x00004aa6      75e0           jne 0x4a88
0x00004aa8      e9a3feffff     jmp 0x4950
0x00004aad      0f1f00         nop dword [rax]
0x00004ab0      41bc04000000   mov r12d, 4
0x00004ab6      e91cfbffff     jmp 0x45d7
0x00004abb      0f1f440000     nop dword [rax + rax]
0x00004ac0      41bc01000000   mov r12d, 1
0x00004ac6      48bd00000000.  movabs rbp, 0x8000000000000000
0x00004ad0      e98bfcffff     jmp 0x4760
0x00004ad5      0f1f00         nop dword [rax]
0x00004ad8      41bb01000000   mov r11d, 1
0x00004ade      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x00004ae8      e9a8fdffff     jmp 0x4895
0x00004aed      0f1f00         nop dword [rax]
0x00004af0      41bb01000000   mov r11d, 1
0x00004af6      48bd00000000.  movabs rbp, 0x8000000000000000
0x00004b00      eba0           jmp 0x4aa2
0x00004b02      660f1f440000   nop word [rax + rax]
0x00004b08      41bb01000000   mov r11d, 1
0x00004b0e      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x00004b18      e908fdffff     jmp 0x4825
0x00004b1d      0f1f00         nop dword [rax]
0x00004b20      41bb01000000   mov r11d, 1
0x00004b26      48bd00000000.  movabs rbp, 0x8000000000000000
0x00004b30      e911feffff     jmp 0x4946
0x00004b35      0f1f00         nop dword [rax]
0x00004b38      41bb01000000   mov r11d, 1
0x00004b3e      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x00004b48      e958feffff     jmp 0x49a5
0x00004b4d      0f1f00         nop dword [rax]
0x00004b50      41bb01000000   mov r11d, 1
0x00004b56      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x00004b60      e9a8feffff     jmp 0x4a0d
0x00004b65      0f1f00         nop dword [rax]
0x00004b68      41bb01000000   mov r11d, 1
0x00004b6e      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x00004b78      e925ffffff     jmp 0x4aa2
0x00004b7d      0f1f00         nop dword [rax]
0x00004b80      41bc01000000   mov r12d, 1
0x00004b86      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x00004b90      e9cbfbffff     jmp 0x4760
0x00004b95      0f1f00         nop dword [rax]
0x00004b98      31ff           xor edi, edi
0x00004b9a      80790242       cmp byte [rcx + 2], 0x42
0x00004b9e      b800040000     mov eax, 0x400
0x00004ba3      400f94c7       sete dil
0x00004ba7      8d7c3f01       lea edi, [rdi + rdi + 1]
0x00004bab      e932fbffff     jmp 0x46e2
0x00004bb0      41bb01000000   mov r11d, 1
0x00004bb6      48bdffffffff.  movabs rbp, 0x7fffffffffffffff          ; 9223372036854775807
0x00004bc0      e981fdffff     jmp 0x4946
0x00004bc5      b801000000     mov eax, 1
0x00004bca      4c89c5         mov rbp, r8
0x00004bcd      e986fbffff     jmp 0x4758
0x00004bd2      b801000000     mov eax, 1
0x00004bd7      4c89d5         mov rbp, r10
0x00004bda      e979fbffff     jmp 0x4758
0x00004bdf      488d0d5a1200.  lea rcx, obj.__PRETTY_FUNCTION__.4162   ; 0x5e40 ; "xstrtol"
0x00004be6      488d35331100.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0x5d20 ; "../coreutils-8.31/lib/xstrtol.c"
0x00004bed      488d3d4c1100.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0x5d40 ; "0 <= strtol_base && strtol_base <= 36"
0x00004bf4      ba54000000     mov edx, 0x54                           ; 'T'
0x00004bf9      e862c8ffff     call sym.imp.__assert_fail
0x00004bfe      e8fdc7ffff     call sym.imp.__stack_chk_fail
0x00004c03      662e0f1f8400.  nop word cs:[rax + rax]
0x00004c0d      0f1f00         nop dword [rax]
;-- rpl_mbrtowc:
0x00004c10      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00004c12      4154           push r12
0x00004c14      4989f5         mov r13, rsi
0x00004c17      55             push rbp
0x00004c18      53             push rbx
0x00004c19      4889fb         mov rbx, rdi
0x00004c1c      4989d4         mov r12, rdx
0x00004c1f      4883ec18       sub rsp, 0x18
0x00004c23      64488b042528.  mov rax, qword fs:[0x28]
0x00004c2c      4889442408     mov qword [rsp + 8], rax
0x00004c31      31c0           xor eax, eax
0x00004c33      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00004c38      4885ff         test rdi, rdi
0x00004c3b      480f44d8       cmove rbx, rax
0x00004c3f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00004c42      e8d9c7ffff     call sym.imp.mbrtowc
0x00004c47      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00004c4b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00004c4e      7620           jbe 0x4c70                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00004c50      4d85e4         test r12, r12
0x00004c53      741b           je 0x4c70
0x00004c55      31ff           xor edi, edi
0x00004c57      e8c4000000     call sym.hard_locale
0x00004c5c      84c0           test al, al
0x00004c5e      7510           jne 0x4c70
0x00004c60      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00004c65      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x00004c6a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00004c6c      0f1f4000       nop dword [rax]
0x00004c70      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00004c75      644833142528.  xor rdx, qword fs:[0x28]
0x00004c7e      4889e8         mov rax, rbp
0x00004c81      750b           jne 0x4c8e
0x00004c83      4883c418       add rsp, 0x18
0x00004c87      5b             pop rbx
0x00004c88      5d             pop rbp
0x00004c89      415c           pop r12
0x00004c8b      415d           pop r13
0x00004c8d      c3             ret
0x00004c8e      e86dc7ffff     call sym.imp.__stack_chk_fail
0x00004c93      662e0f1f8400.  nop word cs:[rax + rax]
0x00004c9d      0f1f00         nop dword [rax]
;-- close_stream:
0x00004ca0      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00004ca2      55             push rbp
0x00004ca3      4889fd         mov rbp, rdi
0x00004ca6      53             push rbx
0x00004ca7      e8e4c6ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x00004cac      8b5d00         mov ebx, dword [rbp]
0x00004caf      4889ef         mov rdi, rbp
0x00004cb2      4989c4         mov r12, rax
0x00004cb5      e806010000     call sym.rpl_fclose
0x00004cba      83e320         and ebx, 0x20                           ; "@"
0x00004cbd      85db           test ebx, ebx
0x00004cbf      7517           jne 0x4cd8
0x00004cc1      85c0           test eax, eax
0x00004cc3      740a           je 0x4ccf                               ; stdio.h:-186
0x00004cc5      4d85e4         test r12, r12                           ; stdio.h:-178
0x00004cc8      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00004ccd      7439           je 0x4d08
0x00004ccf      5b             pop rbx
0x00004cd0      5d             pop rbp
0x00004cd1      415c           pop r12
0x00004cd3      c3             ret
0x00004cd4      0f1f4000       nop dword [rax]
0x00004cd8      85c0           test eax, eax
0x00004cda      751c           jne 0x4cf8
0x00004cdc      e86fc6ffff     call sym.imp.__errno_location
0x00004ce1      c70000000000   mov dword [rax], 0
0x00004ce7      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00004cec      5b             pop rbx
0x00004ced      5d             pop rbp
0x00004cee      415c           pop r12
0x00004cf0      c3             ret
0x00004cf1      0f1f80000000.  nop dword [rax]
0x00004cf8      5b             pop rbx
0x00004cf9      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00004cfe      5d             pop rbp                                 ; stdio.h:-186
0x00004cff      415c           pop r12
0x00004d01      c3             ret
0x00004d02      660f1f440000   nop word [rax + rax]
0x00004d08      e843c6ffff     call sym.imp.__errno_location
0x00004d0d      833809         cmp dword [rax], 9
0x00004d10      5b             pop rbx
0x00004d11      5d             pop rbp
0x00004d12      415c           pop r12                                 ; stdio.h:-178
0x00004d14      0f95c0         setne al
0x00004d17      0fb6c0         movzx eax, al
0x00004d1a      f7d8           neg eax
0x00004d1c      c3             ret
0x00004d1d      0f1f00         nop dword [rax]
;-- hard_locale:
0x00004d20      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00004d24      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00004d26      e815c8ffff     call sym.imp.setlocale
0x00004d2b      4889c2         mov rdx, rax
0x00004d2e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00004d33      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00004d36      741d           je 0x4d55
0x00004d38      488d3d091100.  lea rdi, [0x00005e48]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x00004d3f      b902000000     mov ecx, 2
0x00004d44      4889d6         mov rsi, rdx
0x00004d47      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00004d49      0f97c1         seta cl
0x00004d4c      80d900         sbb cl, 0
0x00004d4f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00004d51      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00004d53      750b           jne 0x4d60
0x00004d55      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00004d59      c3             ret
0x00004d5a      660f1f440000   nop word [rax + rax]
0x00004d60      488d3de31000.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x5e4a ; "POSIX"
0x00004d67      b906000000     mov ecx, 6
0x00004d6c      4889d6         mov rsi, rdx
0x00004d6f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00004d71      0f97c0         seta al
0x00004d74      1c00           sbb al, 0
0x00004d76      84c0           test al, al
0x00004d78      0f95c0         setne al
0x00004d7b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00004d7f      c3             ret
;-- locale_charset:
0x00004d80      4883ec08       sub rsp, 8
0x00004d84      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00004d89      e882c7ffff     call sym.imp.nl_langinfo
0x00004d8e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00004d91      741d           je 0x4db0
0x00004d93      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00004d96      488d15b31000.  lea rdx, str.ASCII                      ; 0x5e50 ; "ASCII"
0x00004d9d      480f44c2       cmove rax, rdx
0x00004da1      4883c408       add rsp, 8
0x00004da5      c3             ret
0x00004da6      662e0f1f8400.  nop word cs:[rax + rax]
0x00004db0      488d05991000.  lea rax, str.ASCII                      ; 0x5e50 ; "ASCII"
0x00004db7      4883c408       add rsp, 8
0x00004dbb      c3             ret
0x00004dbc      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x00004dc0      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00004dc2      55             push rbp
0x00004dc3      53             push rbx
0x00004dc4      4889fb         mov rbx, rdi
0x00004dc7      e814c7ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x00004dcc      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x00004dce      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00004dd1      7854           js 0x4e27                               ; ../coreutils-8.31/lib/fclose.c:66
0x00004dd3      e848c7ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00004dd8      85c0           test eax, eax
0x00004dda      752c           jne 0x4e08
0x00004ddc      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x00004ddf      e85c000000     call sym.rpl_fflush
0x00004de4      85c0           test eax, eax
0x00004de6      743c           je 0x4e24
0x00004de8      e863c5ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x00004ded      448b20         mov r12d, dword [rax]
0x00004df0      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00004df3      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00004df6      e8b5c5ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x00004dfb      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x00004dfe      7530           jne 0x4e30
0x00004e00      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00004e01      5d             pop rbp
0x00004e02      415c           pop r12
0x00004e04      c3             ret
0x00004e05      0f1f00         nop dword [rax]
0x00004e08      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x00004e0b      e8d0c6ffff     call sym.imp.fileno
0x00004e10      31f6           xor esi, esi
0x00004e12      ba01000000     mov edx, 1
0x00004e17      89c7           mov edi, eax
0x00004e19      e832c6ffff     call sym.imp.lseek
0x00004e1e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00004e22      75b8           jne 0x4ddc
0x00004e24      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00004e27      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00004e28      5d             pop rbp
0x00004e29      415c           pop r12
0x00004e2b      e980c5ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00004e30      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00004e34      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00004e39      ebc5           jmp 0x4e00
0x00004e3b      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x00004e40      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00004e43      53             push rbx
0x00004e44      4889fb         mov rbx, rdi
0x00004e47      7411           je 0x4e5a                               ; ../coreutils-8.31/lib/fflush.c:150
0x00004e49      e8d2c6ffff     call sym.imp.__freading
0x00004e4e      85c0           test eax, eax
0x00004e50      7408           je 0x4e5a
0x00004e52      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00004e58      750e           jne 0x4e68
0x00004e5a      4889df         mov rdi, rbx
0x00004e5d      5b             pop rbx
0x00004e5e      e99dc6ffff     jmp sym.imp.fflush
0x00004e63      0f1f440000     nop dword [rax + rax]
0x00004e68      4889df         mov rdi, rbx
0x00004e6b      ba01000000     mov edx, 1
0x00004e70      31f6           xor esi, esi
0x00004e72      e809000000     call sym.rpl_fseeko
0x00004e77      4889df         mov rdi, rbx
0x00004e7a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x00004e7b      e980c6ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00004e80      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00004e84      48394710       cmp qword [rdi + 0x10], rax
0x00004e88      7406           je 0x4e90                               ; ../coreutils-8.31/lib/fseeko.c:32
0x00004e8a      e9e1c6ffff     jmp sym.imp.fseeko                      ; /sys_errlist.h:9
0x00004e8f      90             nop
0x00004e90      488b4720       mov rax, qword [rdi + 0x20]
0x00004e94      48394728       cmp qword [rdi + 0x28], rax
0x00004e98      75f0           jne 0x4e8a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x00004e9a      48837f4800     cmp qword [rdi + 0x48], 0
0x00004e9f      75e9           jne 0x4e8a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00004ea1      4154           push r12
0x00004ea3      55             push rbp
0x00004ea4      4189d4         mov r12d, edx
0x00004ea7      53             push rbx
0x00004ea8      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x00004eab      4889fb         mov rbx, rdi
0x00004eae      e82dc6ffff     call sym.imp.fileno
0x00004eb3      4489e2         mov edx, r12d
0x00004eb6      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00004eb9      89c7           mov edi, eax                            ; /sys_errlist.h:17
0x00004ebb      e890c5ffff     call sym.imp.lseek
0x00004ec0      4883f8ff       cmp rax, 0xffffffffffffffff
0x00004ec4      740c           je 0x4ed2
0x00004ec6      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00004ec9      488983900000.  mov qword [rbx + 0x90], rax
0x00004ed0      31c0           xor eax, eax
0x00004ed2      5b             pop rbx                                 ; /sys_errlist.h:19
0x00004ed3      5d             pop rbp
0x00004ed4      415c           pop r12
0x00004ed6      c3             ret
0x00004ed7      660f1f840000.  nop word [rax + rax]
;-- __libc_csu_init:
0x00004ee0      4157           push r15
0x00004ee2      4156           push r14
0x00004ee4      4989d7         mov r15, rdx
0x00004ee7      4155           push r13
0x00004ee9      4154           push r12
0x00004eeb      4c8d257e2c20.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x207b70
0x00004ef2      55             push rbp
0x00004ef3      488d2d7e2c20.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x207b78
0x00004efa      53             push rbx
0x00004efb      4189fd         mov r13d, edi
0x00004efe      4989f6         mov r14, rsi
0x00004f01      4c29e5         sub rbp, r12
0x00004f04      4883ec08       sub rsp, 8
0x00004f08      48c1fd03       sar rbp, 3
0x00004f0c      e8efc3ffff     call sym._init
0x00004f11      4885ed         test rbp, rbp
0x00004f14      7420           je 0x4f36
0x00004f16      31db           xor ebx, ebx
0x00004f18      0f1f84000000.  nop dword [rax + rax]
0x00004f20      4c89fa         mov rdx, r15
0x00004f23      4c89f6         mov rsi, r14
0x00004f26      4489ef         mov edi, r13d
0x00004f29      41ff14dc       call qword [r12 + rbx*8]
0x00004f2d      4883c301       add rbx, 1
0x00004f31      4839dd         cmp rbp, rbx
0x00004f34      75ea           jne 0x4f20
0x00004f36      4883c408       add rsp, 8
0x00004f3a      5b             pop rbx
0x00004f3b      5d             pop rbp
0x00004f3c      415c           pop r12
0x00004f3e      415d           pop r13
0x00004f40      415e           pop r14
0x00004f42      415f           pop r15
0x00004f44      c3             ret
0x00004f45      90             nop
0x00004f46      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00004f50      f3c3           ret
0x00004f52      662e0f1f8400.  nop word cs:[rax + rax]
0x00004f5c      0f1f4000       nop dword [rax]
;-- atexit:
0x00004f60      488b15a13020.  mov rdx, qword [obj.__dso_handle]       ; [0x208008:8]=0x208008 obj.__dso_handle
0x00004f67      31f6           xor esi, esi
0x00004f69      e922c6ffff     jmp sym.imp.__cxa_atexit
0x00004f6e      0000           add byte [rax], al
