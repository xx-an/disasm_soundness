;-- section..plt:
;-- .plt:
0x000014c0      ff356a792000   push qword [0x00208e30]                 ; [12] -r-x section size 816 named .plt
0x000014c6      ff256c792000   jmp qword [0x00208e38]                  ; [0x208e38:8]=0
0x000014cc      0f1f4000       nop dword [rax]
;-- imp.free:
0x000014d0      ff256a792000   jmp qword [reloc.free]                  ; [0x208e40:8]=0x14d6
0x000014d6      6800000000     push 0
0x000014db      e9e0ffffff     jmp sym..plt
;-- imp.abort:
0x000014e0      ff2562792000   jmp qword [reloc.abort]                 ; [0x208e48:8]=0x14e6
0x000014e6      6801000000     push 1
0x000014eb      e9d0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x000014f0      ff255a792000   jmp qword [reloc.__errno_location]      ; [0x208e50:8]=0x14f6
0x000014f6      6802000000     push 2
0x000014fb      e9c0ffffff     jmp sym..plt
;-- imp.strncmp:
0x00001500      ff2552792000   jmp qword [reloc.strncmp]               ; [0x208e58:8]=0x1506
0x00001506      6803000000     push 3
0x0000150b      e9b0ffffff     jmp sym..plt
;-- imp._exit:
0x00001510      ff254a792000   jmp qword [reloc._exit]                 ; [0x208e60:8]=0x1516
0x00001516      6804000000     push 4
0x0000151b      e9a0ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001520      ff2542792000   jmp qword [reloc.__fpending]            ; [0x208e68:8]=0x1526 ; "&\x15"
0x00001526      6805000000     push 5
0x0000152b      e990ffffff     jmp sym..plt
;-- imp.fread_unlocked:
0x00001530      ff253a792000   jmp qword [reloc.fread_unlocked]        ; [0x208e70:8]=0x1536 ; "6\x15"
0x00001536      6806000000     push 6
0x0000153b      e980ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001540      ff2532792000   jmp qword [reloc.textdomain]            ; [0x208e78:8]=0x1546 ; "F\x15"
0x00001546      6807000000     push 7
0x0000154b      e970ffffff     jmp sym..plt
;-- imp.fclose:
0x00001550      ff252a792000   jmp qword [reloc.fclose]                ; [0x208e80:8]=0x1556 ; "V\x15"
0x00001556      6808000000     push 8
0x0000155b      e960ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001560      ff2522792000   jmp qword [reloc.bindtextdomain]        ; [0x208e88:8]=0x1566 ; "f\x15"
0x00001566      6809000000     push 9
0x0000156b      e950ffffff     jmp sym..plt
;-- imp.dcgettext:
0x00001570      ff251a792000   jmp qword [reloc.dcgettext]             ; [0x208e90:8]=0x1576 ; "v\x15"
0x00001576      680a000000     push 0xa
0x0000157b      e940ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001580      ff2512792000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x208e98:8]=0x1586
0x00001586      680b000000     push 0xb
0x0000158b      e930ffffff     jmp sym..plt
;-- imp.strlen:
0x00001590      ff250a792000   jmp qword [reloc.strlen]                ; [0x208ea0:8]=0x1596
0x00001596      680c000000     push 0xc
0x0000159b      e920ffffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x000015a0      ff2502792000   jmp qword [reloc.__stack_chk_fail]      ; [0x208ea8:8]=0x15a6
0x000015a6      680d000000     push 0xd
0x000015ab      e910ffffff     jmp sym..plt
;-- imp.getopt_long:
0x000015b0      ff25fa782000   jmp qword [reloc.getopt_long]           ; [0x208eb0:8]=0x15b6
0x000015b6      680e000000     push 0xe
0x000015bb      e900ffffff     jmp sym..plt
;-- imp.mbrtowc:
0x000015c0      ff25f2782000   jmp qword [reloc.mbrtowc]               ; [0x208eb8:8]=0x15c6
0x000015c6      680f000000     push 0xf
0x000015cb      e9f0feffff     jmp sym..plt
;-- imp.strchr:
0x000015d0      ff25ea782000   jmp qword [reloc.strchr]                ; [0x208ec0:8]=0x15d6
0x000015d6      6810000000     push 0x10
0x000015db      e9e0feffff     jmp sym..plt
;-- imp.__overflow:
0x000015e0      ff25e2782000   jmp qword [reloc.__overflow]            ; [0x208ec8:8]=0x15e6
0x000015e6      6811000000     push 0x11
0x000015eb      e9d0feffff     jmp sym..plt
;-- imp.strrchr:
0x000015f0      ff25da782000   jmp qword [reloc.strrchr]               ; [0x208ed0:8]=0x15f6
0x000015f6      6812000000     push 0x12
0x000015fb      e9c0feffff     jmp sym..plt
;-- imp.lseek:
0x00001600      ff25d2782000   jmp qword [reloc.lseek]                 ; [0x208ed8:8]=0x1606
0x00001606      6813000000     push 0x13
0x0000160b      e9b0feffff     jmp sym..plt
;-- imp.__assert_fail:
0x00001610      ff25ca782000   jmp qword [reloc.__assert_fail]         ; [0x208ee0:8]=0x1616
0x00001616      6814000000     push 0x14
0x0000161b      e9a0feffff     jmp sym..plt
;-- imp.__strtoul_internal:
0x00001620      ff25c2782000   jmp qword [reloc.__strtoul_internal]    ; [0x208ee8:8]=0x1626 ; "&\x16"
0x00001626      6815000000     push 0x15
0x0000162b      e990feffff     jmp sym..plt
;-- imp.memset:
0x00001630      ff25ba782000   jmp qword [reloc.memset]                ; [0x208ef0:8]=0x1636 ; "6\x16"
0x00001636      6816000000     push 0x16
0x0000163b      e980feffff     jmp sym..plt
;-- imp.posix_fadvise:
0x00001640      ff25b2782000   jmp qword [reloc.posix_fadvise]         ; [0x208ef8:8]=0x1646 ; "F\x16"
0x00001646      6817000000     push 0x17
0x0000164b      e970feffff     jmp sym..plt
;-- imp.memchr:
0x00001650      ff25aa782000   jmp qword [reloc.memchr]                ; [0x208f00:8]=0x1656 ; "V\x16"
0x00001656      6818000000     push 0x18
0x0000165b      e960feffff     jmp sym..plt
;-- imp.memcmp:
0x00001660      ff25a2782000   jmp qword [reloc.memcmp]                ; [0x208f08:8]=0x1666 ; "f\x16"
0x00001666      6819000000     push 0x19
0x0000166b      e950feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001670      ff259a782000   jmp qword [reloc.fputs_unlocked]        ; [0x208f10:8]=0x1676 ; "v\x16"
0x00001676      681a000000     push 0x1a
0x0000167b      e940feffff     jmp sym..plt
;-- imp.calloc:
0x00001680      ff2592782000   jmp qword [reloc.calloc]                ; [0x208f18:8]=0x1686
0x00001686      681b000000     push 0x1b
0x0000168b      e930feffff     jmp sym..plt
;-- imp.strcmp:
0x00001690      ff258a782000   jmp qword [reloc.strcmp]                ; [0x208f20:8]=0x1696
0x00001696      681c000000     push 0x1c
0x0000169b      e920feffff     jmp sym..plt
;-- imp.memcpy:
0x000016a0      ff2582782000   jmp qword [reloc.memcpy]                ; [0x208f28:8]=0x16a6
0x000016a6      681d000000     push 0x1d
0x000016ab      e910feffff     jmp sym..plt
;-- imp.fileno:
0x000016b0      ff257a782000   jmp qword [reloc.fileno]                ; [0x208f30:8]=0x16b6
0x000016b6      681e000000     push 0x1e
0x000016bb      e900feffff     jmp sym..plt
;-- imp.malloc:
0x000016c0      ff2572782000   jmp qword [reloc.malloc]                ; [0x208f38:8]=0x16c6
0x000016c6      681f000000     push 0x1f
0x000016cb      e9f0fdffff     jmp sym..plt
;-- imp.fflush:
0x000016d0      ff256a782000   jmp qword [reloc.fflush]                ; [0x208f40:8]=0x16d6
0x000016d6      6820000000     push 0x20                               ; "@"
0x000016db      e9e0fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x000016e0      ff2562782000   jmp qword [reloc.nl_langinfo]           ; [0x208f48:8]=0x16e6
0x000016e6      6821000000     push 0x21                               ; '!'
0x000016eb      e9d0fdffff     jmp sym..plt
;-- imp.__freading:
0x000016f0      ff255a782000   jmp qword [reloc.__freading]            ; [0x208f50:8]=0x16f6
0x000016f6      6822000000     push 0x22                               ; '"'
0x000016fb      e9c0fdffff     jmp sym..plt
;-- imp.fwrite_unlocked:
0x00001700      ff2552782000   jmp qword [reloc.fwrite_unlocked]       ; [0x208f58:8]=0x1706
0x00001706      6823000000     push 0x23                               ; '#'
0x0000170b      e9b0fdffff     jmp sym..plt
;-- imp.realloc:
0x00001710      ff254a782000   jmp qword [reloc.realloc]               ; [0x208f60:8]=0x1716
0x00001716      6824000000     push 0x24                               ; '$'
0x0000171b      e9a0fdffff     jmp sym..plt
;-- imp.setlocale:
0x00001720      ff2542782000   jmp qword [reloc.setlocale]             ; [0x208f68:8]=0x1726 ; "&\x17"
0x00001726      6825000000     push 0x25                               ; '%'
0x0000172b      e990fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001730      ff253a782000   jmp qword [reloc.__printf_chk]          ; [0x208f70:8]=0x1736 ; "6\x17"
0x00001736      6826000000     push 0x26                               ; '&'
0x0000173b      e980fdffff     jmp sym..plt
;-- imp.memmove:
0x00001740      ff2532782000   jmp qword [reloc.memmove]               ; [0x208f78:8]=0x1746 ; "F\x17"
0x00001746      6827000000     push 0x27                               ; '''
0x0000174b      e970fdffff     jmp sym..plt
;-- imp.error:
0x00001750      ff252a782000   jmp qword [reloc.error]                 ; [0x208f80:8]=0x1756 ; "V\x17"
0x00001756      6828000000     push 0x28                               ; '('
0x0000175b      e960fdffff     jmp sym..plt
;-- imp.fseeko:
0x00001760      ff2522782000   jmp qword [reloc.fseeko]                ; [0x208f88:8]=0x1766 ; "f\x17"
0x00001766      6829000000     push 0x29                               ; ')'
0x0000176b      e950fdffff     jmp sym..plt
;-- imp.fopen:
0x00001770      ff251a782000   jmp qword [reloc.fopen]                 ; [0x208f90:8]=0x1776 ; "v\x17"
0x00001776      682a000000     push 0x2a                               ; '*'
0x0000177b      e940fdffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001780      ff2512782000   jmp qword [reloc.__cxa_atexit]          ; [0x208f98:8]=0x1786
0x00001786      682b000000     push 0x2b                               ; '+'
0x0000178b      e930fdffff     jmp sym..plt
;-- imp.exit:
0x00001790      ff250a782000   jmp qword [reloc.exit]                  ; [0x208fa0:8]=0x1796
0x00001796      682c000000     push 0x2c                               ; ','
0x0000179b      e920fdffff     jmp sym..plt
;-- imp.fwrite:
0x000017a0      ff2502782000   jmp qword [reloc.fwrite]                ; [0x208fa8:8]=0x17a6
0x000017a6      682d000000     push 0x2d                               ; '-'
0x000017ab      e910fdffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x000017b0      ff25fa772000   jmp qword [reloc.__fprintf_chk]         ; [0x208fb0:8]=0x17b6
0x000017b6      682e000000     push 0x2e                               ; '.'
0x000017bb      e900fdffff     jmp sym..plt
;-- imp.mbsinit:
0x000017c0      ff25f2772000   jmp qword [reloc.mbsinit]               ; [0x208fb8:8]=0x17c6
0x000017c6      682f000000     push 0x2f                               ; '/'
0x000017cb      e9f0fcffff     jmp sym..plt
;-- imp.iswprint:
0x000017d0      ff25ea772000   jmp qword [reloc.iswprint]              ; [0x208fc0:8]=0x17d6
0x000017d6      6830000000     push 0x30                               ; '0'
0x000017db      e9e0fcffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x000017e0      ff25e2772000   jmp qword [reloc.__ctype_b_loc]         ; [0x208fc8:8]=0x17e6
0x000017e6      6831000000     push 0x31                               ; '1'
0x000017eb      e9d0fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x000017f0      .qword 0x9066002077fa25ff                              ; [13] -r-x section size 8 named .plt.got
0x000017f8      0000           add byte [rax], al
0x000017fa      0000           add byte [rax], al
0x000017fc      0000           add byte [rax], al
0x000017fe      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x00001800      4157           push r15                                ; [14] -r-x section size 17294 named .text
0x00001802      4156           push r14
0x00001804      4155           push r13
0x00001806      4154           push r12
0x00001808      4189fd         mov r13d, edi
0x0000180b      55             push rbp
0x0000180c      53             push rbx
0x0000180d      4989f4         mov r12, rsi
0x00001810      bd4c000000     mov ebp, 0x4c                           ; 'L'
0x00001815      31db           xor ebx, ebx
0x00001817      4883ec78       sub rsp, 0x78
0x0000181b      488b3e         mov rdi, qword [rsi]
0x0000181e      64488b042528.  mov rax, qword fs:[0x28]
0x00001827      4889442468     mov qword [rsp + 0x68], rax
0x0000182c      31c0           xor eax, eax
0x0000182e      e8cd140000     call sym.set_program_name
0x00001833      488d35c74f00.  lea rsi, [0x00006801]
0x0000183a      bf06000000     mov edi, 6
0x0000183f      e8dcfeffff     call sym.imp.setlocale
0x00001844      488d35214400.  lea rsi, str.usr_local_share_locale     ; 0x5c6c ; "/usr/local/share/locale"
0x0000184b      488d3df14300.  lea rdi, [0x00005c43]                   ; "coreutils"
0x00001852      e809fdffff     call sym.imp.bindtextdomain
0x00001857      488d3de54300.  lea rdi, [0x00005c43]                   ; "coreutils"
0x0000185e      e8ddfcffff     call sym.imp.textdomain
0x00001863      488d3da61300.  lea rdi, sym.close_stdout               ; 0x2c10 ; "USH\x83\xec\bH\x8b=kd "
0x0000186a      e811430000     call sym.atexit
0x0000186f      c644243000     mov byte [rsp + 0x30], 0
0x00001874      488d0da57220.  lea rcx, obj.long_options               ; 0x208b20
0x0000187b      488d15244400.  lea rdx, str.diw:                       ; 0x5ca6 ; "diw:"
0x00001882      4531c0         xor r8d, r8d
0x00001885      4c89e6         mov rsi, r12
0x00001888      4489ef         mov edi, r13d
0x0000188b      e820fdffff     call sym.imp.getopt_long
0x00001890      83f8ff         cmp eax, 0xffffffff
0x00001893      0f84b6000000   je 0x194f
0x00001899      83f864         cmp eax, 0x64
0x0000189c      7452           je 0x18f0
0x0000189e      7e70           jle 0x1910
0x000018a0      83f869         cmp eax, 0x69
0x000018a3      745b           je 0x1900
0x000018a5      83f877         cmp eax, 0x77
0x000018a8      0f85ff060000   jne 0x1fad
0x000018ae      488d35cf4300.  lea rsi, str.invalid_wrap_size          ; 0x5c84 ; "invalid wrap size"
0x000018b5      ba05000000     mov edx, 5
0x000018ba      31ff           xor edi, edi
0x000018bc      e8affcffff     call sym.imp.dcgettext
0x000018c1      488b3dd87720.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2090a0:8]=0
0x000018c8      488d0d324f00.  lea rcx, [0x00006801]
0x000018cf      4989c0         mov r8, rax
0x000018d2      4531c9         xor r9d, r9d
0x000018d5      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000018dc      31f6           xor esi, esi
0x000018de      e8fd3a0000     call sym.xdectoumax
0x000018e3      4889c5         mov rbp, rax
0x000018e6      eb8c           jmp 0x1874
0x000018e8      0f1f84000000.  nop dword [rax + rax]
0x000018f0      bb01000000     mov ebx, 1
0x000018f5      e97affffff     jmp 0x1874
0x000018fa      660f1f440000   nop word [rax + rax]
0x00001900      c644243001     mov byte [rsp + 0x30], 1
0x00001905      e96affffff     jmp 0x1874
0x0000190a      660f1f440000   nop word [rax + rax]
0x00001910      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x00001915      0f8553060000   jne 0x1f6e
0x0000191b      488b3d667720.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x00001922      488b0de77620.  mov rcx, qword [obj.Version]            ; [0x209010:8]=0x6133 str.8.31 ; "3a"
0x00001929      4c8d05664300.  lea r8, str.Simon_Josefsson             ; 0x5c96 ; "Simon Josefsson"
0x00001930      488d15084300.  lea rdx, str.GNU_coreutils              ; 0x5c3f ; "GNU coreutils"
0x00001937      488d35664200.  lea rsi, str.base64                     ; 0x5ba4 ; "base64"
0x0000193e      4531c9         xor r9d, r9d
0x00001941      31c0           xor eax, eax
0x00001943      e8a8350000     call sym.version_etc
0x00001948      31ff           xor edi, edi
0x0000194a      e841feffff     call sym.imp.exit
0x0000194f      486305427720.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x209098:4]=0
0x00001956      4489ea         mov edx, r13d
0x00001959      29c2           sub edx, eax
0x0000195b      83ea01         sub edx, 1
0x0000195e      0f8f18060000   jg 0x1f7c
0x00001964      4439e8         cmp eax, r13d
0x00001967      7d66           jge 0x19cf
0x00001969      498b04c4       mov rax, qword [r12 + rax*8]
0x0000196d      488d35564900.  lea rsi, [0x000062ca]                   ; "-"
0x00001974      4889c7         mov rdi, rax
0x00001977      4889442448     mov qword [rsp + 0x48], rax
0x0000197c      e80ffdffff     call sym.imp.strcmp
0x00001981      85c0           test eax, eax
0x00001983      7456           je 0x19db
0x00001985      488b7c2448     mov rdi, qword [rsp + 0x48]
0x0000198a      488d352b4300.  lea rsi, [0x00005cbc]                   ; "rb"
0x00001991      e8dafdffff     call sym.imp.fopen
0x00001996      4885c0         test rax, rax
0x00001999      4989c4         mov r12, rax
0x0000199c      7544           jne 0x19e2
0x0000199e      488b542448     mov rdx, qword [rsp + 0x48]
0x000019a3      be03000000     mov esi, 3
0x000019a8      31ff           xor edi, edi
0x000019aa      e8912e0000     call sym.quotearg_n_style_colon
0x000019af      4889c3         mov rbx, rax
0x000019b2      e839fbffff     call sym.imp.__errno_location
0x000019b7      8b30           mov esi, dword [rax]
0x000019b9      488d15c44800.  lea rdx, [0x00006284]                   ; "%s"
0x000019c0      4889d9         mov rcx, rbx
0x000019c3      bf01000000     mov edi, 1
0x000019c8      31c0           xor eax, eax
0x000019ca      e881fdffff     call sym.imp.error
0x000019cf      488d05f44800.  lea rax, [0x000062ca]                   ; "-"
0x000019d6      4889442448     mov qword [rsp + 0x48], rax
0x000019db      4c8b25ae7620.  mov r12, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x209090:8]=0
0x000019e2      be02000000     mov esi, 2
0x000019e7      4c89e7         mov rdi, r12
0x000019ea      e8e1120000     call sym.fadvise
0x000019ef      84db           test bl, bl
0x000019f1      488b05907620.  mov rax, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x000019f8      0f84fa010000   je 0x1bf8
0x000019fe      bf00100000     mov edi, 0x1000
0x00001a03      4889442438     mov qword [rsp + 0x38], rax
0x00001a08      e843360000     call sym.xmalloc
0x00001a0d      bf000c0000     mov edi, 0xc00
0x00001a12      4889c5         mov rbp, rax
0x00001a15      e836360000     call sym.xmalloc
0x00001a1a      4889442440     mov qword [rsp + 0x40], rax
0x00001a1f      488d442460     lea rax, [rsp + 0x60]
0x00001a24      4889c7         mov rdi, rax
0x00001a27      4889442418     mov qword [rsp + 0x18], rax
0x00001a2c      e83f0e0000     call sym.base64_decode_ctx_init
0x00001a31      488d442458     lea rax, [rsp + 0x58]
0x00001a36      4c89642410     mov qword [rsp + 0x10], r12
0x00001a3b      48896c2408     mov qword [rsp + 8], rbp
0x00001a40      4889442420     mov qword [rsp + 0x20], rax
0x00001a45      0f1f00         nop dword [rax]
0x00001a48      31db           xor ebx, ebx
0x00001a4a      eb30           jmp 0x1a7c
0x00001a4c      0f1f4000       nop dword [rax]
0x00001a50      488b442410     mov rax, qword [rsp + 0x10]
0x00001a55      4c01e3         add rbx, r12
0x00001a58      8b00           mov eax, dword [rax]
0x00001a5a      a820           test al, 0x20                           ; "@"
0x00001a5c      0f85af040000   jne 0x1f11
0x00001a62      89c2           mov edx, eax
0x00001a64      83e210         and edx, 0x10
0x00001a67      4881fbff0f00.  cmp rbx, 0xfff
0x00001a6e      0f87a4000000   ja 0x1b18
0x00001a74      85d2           test edx, edx
0x00001a76      0f859c000000   jne 0x1b18
0x00001a7c      488b442408     mov rax, qword [rsp + 8]
0x00001a81      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00001a86      ba00100000     mov edx, 0x1000
0x00001a8b      4829da         sub rdx, rbx
0x00001a8e      be01000000     mov esi, 1
0x00001a93      488d3c18       lea rdi, [rax + rbx]
0x00001a97      e894faffff     call sym.imp.fread_unlocked
0x00001a9c      807c243000     cmp byte [rsp + 0x30], 0
0x00001aa1      4989c4         mov r12, rax
0x00001aa4      4889442458     mov qword [rsp + 0x58], rax
0x00001aa9      74a5           je 0x1a50
0x00001aab      4531ed         xor r13d, r13d
0x00001aae      4d85e4         test r12, r12
0x00001ab1      749d           je 0x1a50
0x00001ab3      4d39e5         cmp r13, r12
0x00001ab6      7398           jae 0x1a50
0x00001ab8      488b442408     mov rax, qword [rsp + 8]
0x00001abd      4e8d3c2b       lea r15, [rbx + r13]
0x00001ac1      4e8d3438       lea r14, [rax + r15]
0x00001ac5      410fbe3e       movsx edi, byte [r14]
0x00001ac9      89fd           mov ebp, edi
0x00001acb      e8800d0000     call sym.isbase64
0x00001ad0      4080fd3d       cmp bpl, 0x3d
0x00001ad4      7404           je 0x1ada
0x00001ad6      84c0           test al, al
0x00001ad8      7416           je 0x1af0
0x00001ada      4983c501       add r13, 1
0x00001ade      4d85e4         test r12, r12
0x00001ae1      75d0           jne 0x1ab3
0x00001ae3      e968ffffff     jmp 0x1a50
0x00001ae8      0f1f84000000.  nop dword [rax + rax]
0x00001af0      488b442408     mov rax, qword [rsp + 8]
0x00001af5      4983ec01       sub r12, 1
0x00001af9      4c89f7         mov rdi, r14
0x00001afc      4c89e2         mov rdx, r12
0x00001aff      4c89642458     mov qword [rsp + 0x58], r12
0x00001b04      4c29ea         sub rdx, r13
0x00001b07      4a8d743801     lea rsi, [rax + r15 + 1]
0x00001b0c      e82ffcffff     call sym.imp.memmove
0x00001b11      eb9b           jmp 0x1aae
0x00001b13      0f1f440000     nop dword [rax + rax]
0x00001b18      4531ff         xor r15d, r15d
0x00001b1b      48895c2428     mov qword [rsp + 0x28], rbx
0x00001b20      488b6c2408     mov rbp, qword [rsp + 8]
0x00001b25      4589fe         mov r14d, r15d
0x00001b28      4c8b642440     mov r12, qword [rsp + 0x40]
0x00001b2d      488b5c2410     mov rbx, qword [rsp + 0x10]
0x00001b32      4c8b7c2438     mov r15, qword [rsp + 0x38]
0x00001b37      eb65           jmp 0x1b9e
0x00001b39      0f1f80000000.  nop dword [rax]
0x00001b40      4585f6         test r14d, r14d
0x00001b43      0f85fffeffff   jne 0x1a48
0x00001b49      488b542428     mov rdx, qword [rsp + 0x28]
0x00001b4e      48c744245800.  mov qword [rsp + 0x58], 0xc00           ; [0xc00:8]=0x2000000020002
0x00001b57      4c8b442420     mov r8, qword [rsp + 0x20]
0x00001b5c      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00001b61      4c89e1         mov rcx, r12
0x00001b64      4889ee         mov rsi, rbp
0x00001b67      e8140d0000     call sym.base64_decode_ctx
0x00001b6c      488b542458     mov rdx, qword [rsp + 0x58]
0x00001b71      4c89f9         mov rcx, r15
0x00001b74      be01000000     mov esi, 1
0x00001b79      4c89e7         mov rdi, r12
0x00001b7c      4189c5         mov r13d, eax
0x00001b7f      e87cfbffff     call sym.imp.fwrite_unlocked
0x00001b84      483b442458     cmp rax, qword [rsp + 0x58]
0x00001b89      0f8256030000   jb 0x1ee5
0x00001b8f      4584ed         test r13b, r13b
0x00001b92      0f8429030000   je 0x1ec1
0x00001b98      8b03           mov eax, dword [rbx]
0x00001b9a      4183c601       add r14d, 1
0x00001b9e      a810           test al, 0x10
0x00001ba0      749e           je 0x1b40
0x00001ba2      4183fe01       cmp r14d, 1
0x00001ba6      7717           ja 0x1bbf
0x00001ba8      759f           jne 0x1b49
0x00001baa      8b442460       mov eax, dword [rsp + 0x60]
0x00001bae      85c0           test eax, eax
0x00001bb0      740d           je 0x1bbf
0x00001bb2      48c744245800.  mov qword [rsp + 0x58], 0xc00           ; [0xc00:8]=0x2000000020002
0x00001bbb      31d2           xor edx, edx
0x00001bbd      eb98           jmp 0x1b57
0x00001bbf      4989dc         mov r12, rbx
0x00001bc2      4c89e7         mov rdi, r12
0x00001bc5      e8663c0000     call sym.rpl_fclose
0x00001bca      83c001         add eax, 1
0x00001bcd      0f8482020000   je 0x1e55
0x00001bd3      31c0           xor eax, eax
0x00001bd5      488b4c2468     mov rcx, qword [rsp + 0x68]
0x00001bda      6448330c2528.  xor rcx, qword fs:[0x28]
0x00001be3      0f8554030000   jne 0x1f3d
0x00001be9      4883c478       add rsp, 0x78
0x00001bed      5b             pop rbx
0x00001bee      5d             pop rbp
0x00001bef      415c           pop r12
0x00001bf1      415d           pop r13
0x00001bf3      415e           pop r14
0x00001bf5      415f           pop r15
0x00001bf7      c3             ret
0x00001bf8      bf00780000     mov edi, 0x7800
0x00001bfd      4889442418     mov qword [rsp + 0x18], rax
0x00001c02      31db           xor ebx, ebx
0x00001c04      e847340000     call sym.xmalloc
0x00001c09      bf00a00000     mov edi, 0xa000
0x00001c0e      4989c5         mov r13, rax
0x00001c11      41be00780000   mov r14d, 0x7800
0x00001c17      e834340000     call sym.xmalloc
0x00001c1c      48896c2408     mov qword [rsp + 8], rbp
0x00001c21      4889442410     mov qword [rsp + 0x10], rax
0x00001c26      31ed           xor ebp, ebp
0x00001c28      eb13           jmp 0x1c3d
0x00001c2a      660f1f440000   nop word [rax + rax]
0x00001c30      4881fdff7700.  cmp rbp, 0x77ff
0x00001c37      0f8792000000   ja 0x1ccf
0x00001c3d      498d7c2d00     lea rdi, [r13 + rbp]
0x00001c42      4c89f2         mov rdx, r14
0x00001c45      4c89e1         mov rcx, r12
0x00001c48      4829ea         sub rdx, rbp
0x00001c4b      be01000000     mov esi, 1
0x00001c50      e8dbf8ffff     call sym.imp.fread_unlocked
0x00001c55      4801c5         add rbp, rax
0x00001c58      418b0424       mov eax, dword [r12]
0x00001c5c      a830           test al, 0x30
0x00001c5e      74d0           je 0x1c30
0x00001c60      4885ed         test rbp, rbp
0x00001c63      756a           jne 0x1ccf
0x00001c65      4885db         test rbx, rbx
0x00001c68      488b6c2408     mov rbp, qword [rsp + 8]
0x00001c6d      742c           je 0x1c9b
0x00001c6f      4885ed         test rbp, rbp
0x00001c72      7427           je 0x1c9b
0x00001c74      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00001c79      488b4128       mov rax, qword [rcx + 0x28]
0x00001c7d      483b4130       cmp rax, qword [rcx + 0x30]
0x00001c81      0f8330030000   jae 0x1fb7
0x00001c87      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00001c8c      488d5001       lea rdx, [rax + 1]
0x00001c90      48895128       mov qword [rcx + 0x28], rdx
0x00001c94      c6000a         mov byte [rax], 0xa
0x00001c97      418b0424       mov eax, dword [r12]
0x00001c9b      a820           test al, 0x20                           ; "@"
0x00001c9d      0f841fffffff   je 0x1bc2
0x00001ca3      488d35154000.  lea rsi, str.read_error                 ; 0x5cbf ; "read error"
0x00001caa      ba05000000     mov edx, 5
0x00001caf      31ff           xor edi, edi
0x00001cb1      e8baf8ffff     call sym.imp.dcgettext
0x00001cb6      4889c3         mov rbx, rax
0x00001cb9      e832f8ffff     call sym.imp.__errno_location
0x00001cbe      8b30           mov esi, dword [rax]
0x00001cc0      4889da         mov rdx, rbx
0x00001cc3      bf01000000     mov edi, 1
0x00001cc8      31c0           xor eax, eax
0x00001cca      e881faffff     call sym.imp.error
0x00001ccf      488d4502       lea rax, [rbp + 2]
0x00001cd3      b903000000     mov ecx, 3
0x00001cd8      31d2           xor edx, edx
0x00001cda      4889ee         mov rsi, rbp
0x00001cdd      4c89ef         mov rdi, r13
0x00001ce0      48f7f1         div rcx
0x00001ce3      488b542410     mov rdx, qword [rsp + 0x10]
0x00001ce8      4c8d3c850000.  lea r15, [rax*4]
0x00001cf0      4c89f9         mov rcx, r15
0x00001cf3      e808090000     call sym.base64_encode
0x00001cf8      48837c240800   cmp qword [rsp + 8], 0
0x00001cfe      0f84c5000000   je 0x1dc9
0x00001d04      4531d2         xor r10d, r10d
0x00001d07      4d85ff         test r15, r15
0x00001d0a      0f849b000000   je 0x1dab
0x00001d10      4c896c2428     mov qword [rsp + 0x28], r13
0x00001d15      48896c2430     mov qword [rsp + 0x30], rbp
0x00001d1a      4989dd         mov r13, rbx
0x00001d1d      4c89fd         mov rbp, r15
0x00001d20      4c89642420     mov qword [rsp + 0x20], r12
0x00001d25      4c8b7c2418     mov r15, qword [rsp + 0x18]
0x00001d2a      4c89d3         mov rbx, r10
0x00001d2d      eb22           jmp 0x1d51
0x00001d2f      90             nop
0x00001d30      498b4728       mov rax, qword [r15 + 0x28]
0x00001d34      493b4730       cmp rax, qword [r15 + 0x30]
0x00001d38      0f83d5000000   jae 0x1e13
0x00001d3e      488d5001       lea rdx, [rax + 1]
0x00001d42      49895728       mov qword [r15 + 0x28], rdx
0x00001d46      c6000a         mov byte [rax], 0xa
0x00001d49      4531ed         xor r13d, r13d
0x00001d4c      4839dd         cmp rbp, rbx
0x00001d4f      7648           jbe 0x1d99
0x00001d51      4c8b642408     mov r12, qword [rsp + 8]
0x00001d56      4889e8         mov rax, rbp
0x00001d59      4829d8         sub rax, rbx
0x00001d5c      4d29ec         sub r12, r13
0x00001d5f      4939c4         cmp r12, rax
0x00001d62      4c0f47e0       cmova r12, rax
0x00001d66      4d85e4         test r12, r12
0x00001d69      74c5           je 0x1d30
0x00001d6b      488b442410     mov rax, qword [rsp + 0x10]
0x00001d70      488b0d117320.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x00001d77      4c89e2         mov rdx, r12
0x00001d7a      be01000000     mov esi, 1
0x00001d7f      488d3c18       lea rdi, [rax + rbx]
0x00001d83      e878f9ffff     call sym.imp.fwrite_unlocked
0x00001d88      4939c4         cmp r12, rax
0x00001d8b      0f87b1010000   ja 0x1f42
0x00001d91      4d01e5         add r13, r12
0x00001d94      4c01e3         add rbx, r12
0x00001d97      ebb3           jmp 0x1d4c
0x00001d99      4c89eb         mov rbx, r13
0x00001d9c      4c8b642420     mov r12, qword [rsp + 0x20]
0x00001da1      4c8b6c2428     mov r13, qword [rsp + 0x28]
0x00001da6      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00001dab      418b0424       mov eax, dword [r12]
0x00001daf      a830           test al, 0x30
0x00001db1      0f85aefeffff   jne 0x1c65
0x00001db7      4881fd007800.  cmp rbp, 0x7800
0x00001dbe      0f8462feffff   je 0x1c26
0x00001dc4      e99cfeffff     jmp 0x1c65
0x00001dc9      488b0db87220.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x00001dd0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00001dd5      4c89fa         mov rdx, r15
0x00001dd8      be01000000     mov esi, 1
0x00001ddd      e81ef9ffff     call sym.imp.fwrite_unlocked
0x00001de2      4939c7         cmp r15, rax
0x00001de5      76c4           jbe 0x1dab
0x00001de7      488d35dc3e00.  lea rsi, str.write_error                ; 0x5cca ; "write error"
0x00001dee      ba05000000     mov edx, 5
0x00001df3      31ff           xor edi, edi
0x00001df5      e876f7ffff     call sym.imp.dcgettext
0x00001dfa      4889c3         mov rbx, rax
0x00001dfd      e8eef6ffff     call sym.imp.__errno_location
0x00001e02      8b30           mov esi, dword [rax]
0x00001e04      4889da         mov rdx, rbx
0x00001e07      bf01000000     mov edi, 1
0x00001e0c      31c0           xor eax, eax
0x00001e0e      e83df9ffff     call sym.imp.error
0x00001e13      be0a000000     mov esi, 0xa
0x00001e18      4c89ff         mov rdi, r15
0x00001e1b      e8c0f7ffff     call sym.imp.__overflow
0x00001e20      83c001         add eax, 1
0x00001e23      0f8520ffffff   jne 0x1d49
0x00001e29      488d359a3e00.  lea rsi, str.write_error                ; 0x5cca ; "write error"
0x00001e30      ba05000000     mov edx, 5
0x00001e35      31ff           xor edi, edi
0x00001e37      e834f7ffff     call sym.imp.dcgettext
0x00001e3c      4889c3         mov rbx, rax
0x00001e3f      e8acf6ffff     call sym.imp.__errno_location
0x00001e44      8b30           mov esi, dword [rax]
0x00001e46      4889da         mov rdx, rbx
0x00001e49      bf01000000     mov edi, 1
0x00001e4e      31c0           xor eax, eax
0x00001e50      e8fbf8ffff     call sym.imp.error
0x00001e55      488b7c2448     mov rdi, qword [rsp + 0x48]
0x00001e5a      488d35694400.  lea rsi, [0x000062ca]                   ; "-"
0x00001e61      e82af8ffff     call sym.imp.strcmp
0x00001e66      89c5           mov ebp, eax
0x00001e68      e883f6ffff     call sym.imp.__errno_location
0x00001e6d      85ed           test ebp, ebp
0x00001e6f      4889c3         mov rbx, rax
0x00001e72      7524           jne 0x1e98
0x00001e74      488d35693e00.  lea rsi, str.closing_standard_input     ; 0x5ce4 ; "closing standard input"
0x00001e7b      ba05000000     mov edx, 5
0x00001e80      31ff           xor edi, edi
0x00001e82      e8e9f6ffff     call sym.imp.dcgettext
0x00001e87      8b33           mov esi, dword [rbx]
0x00001e89      4889c2         mov rdx, rax
0x00001e8c      bf01000000     mov edi, 1
0x00001e91      31c0           xor eax, eax
0x00001e93      e8b8f8ffff     call sym.imp.error
0x00001e98      488b542448     mov rdx, qword [rsp + 0x48]
0x00001e9d      be03000000     mov esi, 3
0x00001ea2      31ff           xor edi, edi
0x00001ea4      e897290000     call sym.quotearg_n_style_colon
0x00001ea9      8b33           mov esi, dword [rbx]
0x00001eab      488d15d24300.  lea rdx, [0x00006284]                   ; "%s"
0x00001eb2      4889c1         mov rcx, rax
0x00001eb5      bf01000000     mov edi, 1
0x00001eba      31c0           xor eax, eax
0x00001ebc      e88ff8ffff     call sym.imp.error
0x00001ec1      488d350e3e00.  lea rsi, str.invalid_input              ; 0x5cd6 ; "invalid input"
0x00001ec8      ba05000000     mov edx, 5
0x00001ecd      31ff           xor edi, edi
0x00001ecf      e89cf6ffff     call sym.imp.dcgettext
0x00001ed4      31f6           xor esi, esi
0x00001ed6      4889c2         mov rdx, rax
0x00001ed9      bf01000000     mov edi, 1
0x00001ede      31c0           xor eax, eax
0x00001ee0      e86bf8ffff     call sym.imp.error
0x00001ee5      488d35de3d00.  lea rsi, str.write_error                ; 0x5cca ; "write error"
0x00001eec      ba05000000     mov edx, 5
0x00001ef1      31ff           xor edi, edi
0x00001ef3      e878f6ffff     call sym.imp.dcgettext
0x00001ef8      4889c3         mov rbx, rax
0x00001efb      e8f0f5ffff     call sym.imp.__errno_location
0x00001f00      8b30           mov esi, dword [rax]
0x00001f02      4889da         mov rdx, rbx
0x00001f05      bf01000000     mov edi, 1
0x00001f0a      31c0           xor eax, eax
0x00001f0c      e83ff8ffff     call sym.imp.error
0x00001f11      488d35a73d00.  lea rsi, str.read_error                 ; 0x5cbf ; "read error"
0x00001f18      ba05000000     mov edx, 5
0x00001f1d      31ff           xor edi, edi
0x00001f1f      e84cf6ffff     call sym.imp.dcgettext
0x00001f24      4889c3         mov rbx, rax
0x00001f27      e8c4f5ffff     call sym.imp.__errno_location
0x00001f2c      8b30           mov esi, dword [rax]
0x00001f2e      4889da         mov rdx, rbx
0x00001f31      bf01000000     mov edi, 1
0x00001f36      31c0           xor eax, eax
0x00001f38      e813f8ffff     call sym.imp.error
0x00001f3d      e85ef6ffff     call sym.imp.__stack_chk_fail
0x00001f42      488d35813d00.  lea rsi, str.write_error                ; 0x5cca ; "write error"
0x00001f49      ba05000000     mov edx, 5
0x00001f4e      31ff           xor edi, edi
0x00001f50      e81bf6ffff     call sym.imp.dcgettext
0x00001f55      4889c3         mov rbx, rax
0x00001f58      e893f5ffff     call sym.imp.__errno_location
0x00001f5d      8b30           mov esi, dword [rax]
0x00001f5f      4889da         mov rdx, rbx
0x00001f62      bf01000000     mov edi, 1
0x00001f67      31c0           xor eax, eax
0x00001f69      e8e2f7ffff     call sym.imp.error
0x00001f6e      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x00001f73      7538           jne 0x1fad
0x00001f75      31ff           xor edi, edi
0x00001f77      e894010000     call sym.usage
0x00001f7c      498b7cc408     mov rdi, qword [r12 + rax*8 + 8]
0x00001f81      e88a2a0000     call sym.quote
0x00001f86      488d351e3d00.  lea rsi, str.extra_operand__s           ; 0x5cab ; "extra operand %s"
0x00001f8d      4889c3         mov rbx, rax
0x00001f90      ba05000000     mov edx, 5
0x00001f95      31ff           xor edi, edi
0x00001f97      e8d4f5ffff     call sym.imp.dcgettext
0x00001f9c      4889d9         mov rcx, rbx
0x00001f9f      4889c2         mov rdx, rax
0x00001fa2      31f6           xor esi, esi
0x00001fa4      31ff           xor edi, edi
0x00001fa6      31c0           xor eax, eax
0x00001fa8      e8a3f7ffff     call sym.imp.error
0x00001fad      bf01000000     mov edi, 1
0x00001fb2      e859010000     call sym.usage
0x00001fb7      be0a000000     mov esi, 0xa
0x00001fbc      4889cf         mov rdi, rcx
0x00001fbf      e81cf6ffff     call sym.imp.__overflow
0x00001fc4      83c001         add eax, 1
0x00001fc7      0f85cafcffff   jne 0x1c97
0x00001fcd      488d35f63c00.  lea rsi, str.write_error                ; 0x5cca ; "write error"
0x00001fd4      ba05000000     mov edx, 5
0x00001fd9      31ff           xor edi, edi
0x00001fdb      e890f5ffff     call sym.imp.dcgettext
0x00001fe0      4889c3         mov rbx, rax
0x00001fe3      e808f5ffff     call sym.imp.__errno_location
0x00001fe8      8b30           mov esi, dword [rax]
0x00001fea      4889da         mov rdx, rbx
0x00001fed      bf01000000     mov edi, 1
0x00001ff2      31c0           xor eax, eax
0x00001ff4      e857f7ffff     call sym.imp.error
0x00001ff9      0f1f80000000.  nop dword [rax]
;-- entry0:
;-- _start:
;-- rip:
0x00002000      31ed           xor ebp, ebp
0x00002002      4989d1         mov r9, rdx
0x00002005      5e             pop rsi
0x00002006      4889e2         mov rdx, rsp
0x00002009      4883e4f0       and rsp, 0xfffffffffffffff0
0x0000200d      50             push rax
0x0000200e      54             push rsp
0x0000200f      4c8d055a3b00.  lea r8, sym.__libc_csu_fini             ; 0x5b70
0x00002016      488d0de33a00.  lea rcx, sym.__libc_csu_init            ; 0x5b00 ; "AWAVI\x89\xd7AUATL\x8d%\xfe/ "
0x0000201d      488d3ddcf7ff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1800 ; "AWAVAUATA\x89\xfdUSI\x89\xf4\xbdL"
0x00002024      ff15ae6f2000   call qword [reloc.__libc_start_main]    ; [0x208fd8:8]=0
0x0000202a      f4             hlt
0x0000202b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00002030      488d3d497020.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x209080
0x00002037      55             push rbp
0x00002038      488d05417020.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x209080
0x0000203f      4839f8         cmp rax, rdi
0x00002042      4889e5         mov rbp, rsp
0x00002045      7419           je 0x2060
0x00002047      488b05826f20.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x208fd0:8]=0
0x0000204e      4885c0         test rax, rax
0x00002051      740d           je 0x2060
0x00002053      5d             pop rbp
0x00002054      ffe0           jmp rax
0x00002056      662e0f1f8400.  nop word cs:[rax + rax]
0x00002060      5d             pop rbp
0x00002061      c3             ret
0x00002062      0f1f4000       nop dword [rax]
0x00002066      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00002070      488d3d097020.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x209080
0x00002077      488d35027020.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x209080
0x0000207e      55             push rbp
0x0000207f      4829fe         sub rsi, rdi
0x00002082      4889e5         mov rbp, rsp
0x00002085      48c1fe03       sar rsi, 3
0x00002089      4889f0         mov rax, rsi
0x0000208c      48c1e83f       shr rax, 0x3f
0x00002090      4801c6         add rsi, rax
0x00002093      48d1fe         sar rsi, 1
0x00002096      7418           je 0x20b0
0x00002098      488b05496f20.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x208fe8:8]=0
0x0000209f      4885c0         test rax, rax
0x000020a2      740c           je 0x20b0
0x000020a4      5d             pop rbp
0x000020a5      ffe0           jmp rax
0x000020a7      660f1f840000.  nop word [rax + rax]
0x000020b0      5d             pop rbp
0x000020b1      c3             ret
0x000020b2      0f1f4000       nop dword [rax]
0x000020b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x000020c0      803d01702000.  cmp byte [obj.completed.7697], 0        ; [0x2090c8:1]=0
0x000020c7      752f           jne 0x20f8
0x000020c9      48833d1f6f20.  cmp qword [reloc.__cxa_finalize], 0     ; [0x208ff0:8]=0
0x000020d1      55             push rbp
0x000020d2      4889e5         mov rbp, rsp
0x000020d5      740c           je 0x20e3
0x000020d7      488b3d2a6f20.  mov rdi, qword [obj.__dso_handle]       ; [0x209008:8]=0x209008 obj.__dso_handle
0x000020de      e80df7ffff     call sym..plt.got
0x000020e3      e848ffffff     call sym.deregister_tm_clones
0x000020e8      c605d96f2000.  mov byte [obj.completed.7697], 1        ; [0x2090c8:1]=0
0x000020ef      5d             pop rbp
0x000020f0      c3             ret
0x000020f1      0f1f80000000.  nop dword [rax]
0x000020f8      f3c3           ret
0x000020fa      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00002100      55             push rbp
0x00002101      4889e5         mov rbp, rsp
0x00002104      5d             pop rbp
0x00002105      e966ffffff     jmp sym.register_tm_clones
0x0000210a      660f1f440000   nop word [rax + rax]
;-- usage:
0x00002110      4155           push r13
0x00002112      4154           push r12
0x00002114      ba05000000     mov edx, 5
0x00002119      55             push rbp
0x0000211a      53             push rbx
0x0000211b      89fd           mov ebp, edi
0x0000211d      4881ec880000.  sub rsp, 0x88
0x00002124      488b1db56f20.  mov rbx, qword [obj.program_name]       ; [0x2090e0:8]=0
0x0000212b      64488b042528.  mov rax, qword fs:[0x28]
0x00002134      4889442478     mov qword [rsp + 0x78], rax
0x00002139      31c0           xor eax, eax
0x0000213b      85ff           test edi, edi
0x0000213d      742e           je 0x216d
0x0000213f      488d35e23b00.  lea rsi, str.Try___s___help__for_more_information. ; 0x5d28 ; "Try '%s --help' for more information.\n"
0x00002146      31ff           xor edi, edi
0x00002148      e823f4ffff     call sym.imp.dcgettext
0x0000214d      488b3d6c6f20.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2090c0:8]=0
0x00002154      4889c2         mov rdx, rax
0x00002157      4889d9         mov rcx, rbx
0x0000215a      be01000000     mov esi, 1
0x0000215f      31c0           xor eax, eax
0x00002161      e84af6ffff     call sym.imp.__fprintf_chk
0x00002166      89ef           mov edi, ebp
0x00002168      e823f6ffff     call sym.imp.exit
0x0000216d      488d35373a00.  lea rsi, str.Usage:__s__OPTION_...__FILE ; 0x5bab ; "Usage: %s [OPTION]... [FILE]\n"
0x00002174      31ff           xor edi, edi
0x00002176      e8f5f3ffff     call sym.imp.dcgettext
0x0000217b      4889da         mov rdx, rbx
0x0000217e      4889c6         mov rsi, rax
0x00002181      bf01000000     mov edi, 1
0x00002186      31c0           xor eax, eax
0x00002188      e8a3f5ffff     call sym.imp.__printf_chk
0x0000218d      488d35bc3b00.  lea rsi, str.Base_d_encode_or_decode_FILE__or_standard_input__to_standard_output. ; 0x5d50 ; "Base%d encode or decode FILE, or standard input, to standard output.\n"
0x00002194      ba05000000     mov edx, 5
0x00002199      31ff           xor edi, edi
0x0000219b      e8d0f3ffff     call sym.imp.dcgettext
0x000021a0      ba40000000     mov edx, 0x40                           ; segment.PHDR
0x000021a5      4889c6         mov rsi, rax
0x000021a8      bf01000000     mov edi, 1
0x000021ad      31c0           xor eax, eax
0x000021af      e87cf5ffff     call sym.imp.__printf_chk
0x000021b4      488b1dcd6e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x000021bb      488d35d63b00.  lea rsi, str.With_no_FILE__or_when_FILE_is____read_standard_input. ; 0x5d98 ; "\nWith no FILE, or when FILE is -, read standard input.\n"
0x000021c2      ba05000000     mov edx, 5
0x000021c7      31ff           xor edi, edi
0x000021c9      e8a2f3ffff     call sym.imp.dcgettext
0x000021ce      4889de         mov rsi, rbx
0x000021d1      4889c7         mov rdi, rax
0x000021d4      e897f4ffff     call sym.imp.fputs_unlocked
0x000021d9      488b1da86e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x000021e0      488d35e93b00.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0x5dd0 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x000021e7      ba05000000     mov edx, 5
0x000021ec      31ff           xor edi, edi
0x000021ee      e87df3ffff     call sym.imp.dcgettext
0x000021f3      4889de         mov rsi, rbx
0x000021f6      4889c7         mov rdi, rax
0x000021f9      e872f4ffff     call sym.imp.fputs_unlocked
0x000021fe      488b1d836e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x00002205      488d35143c00.  lea rsi, str.d____decode__________decode_data_____i____ignore_garbage__when_decoding__ignore_non_alphabet_characters_____w____wrap_COLS_______wrap_encoded_lines_after_COLS_character__default_76_.____________________________Use_0_to_disable_line_wrapping ; 0x5e20 ; "  -d, --decode          decode data\n  -i, --ignore-garbage  when decoding, ignore non-alphabet characters\n  -w, --wrap=COLS       wrap encoded lines after COLS character (default 76).\n                          Use 0 to disable line wrapping\n\n"
0x0000220c      ba05000000     mov edx, 5
0x00002211      31ff           xor edi, edi
0x00002213      e858f3ffff     call sym.imp.dcgettext
0x00002218      4889de         mov rsi, rbx
0x0000221b      4889c7         mov rdi, rax
0x0000221e      e84df4ffff     call sym.imp.fputs_unlocked
0x00002223      488b1d5e6e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x0000222a      488d35e73c00.  lea rsi, str.help_____display_this_help_and_exit ; 0x5f18 ; "      --help     display this help and exit\n"
0x00002231      ba05000000     mov edx, 5
0x00002236      31ff           xor edi, edi
0x00002238      e833f3ffff     call sym.imp.dcgettext
0x0000223d      4889de         mov rsi, rbx
0x00002240      4889c7         mov rdi, rax
0x00002243      e828f4ffff     call sym.imp.fputs_unlocked
0x00002248      488b1d396e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x0000224f      488d35f23c00.  lea rsi, str.version__output_version_information_and_exit ; 0x5f48 ; "      --version  output version information and exit\n"
0x00002256      ba05000000     mov edx, 5
0x0000225b      31ff           xor edi, edi
0x0000225d      e80ef3ffff     call sym.imp.dcgettext
0x00002262      4889de         mov rsi, rbx
0x00002265      4889c7         mov rdi, rax
0x00002268      488d1d353900.  lea rbx, str.base64                     ; 0x5ba4 ; "base64"
0x0000226f      e8fcf3ffff     call sym.imp.fputs_unlocked
0x00002274      488d35053d00.  lea rsi, str.The_data_are_encoded_as_described_for_the__s_alphabet_in_RFC_4648.__When_decoding__the_input_may_contain_newlines_in_addition_to_the_bytes_of__the_formal__s_alphabet.__Use___ignore_garbage_to_attempt_to_recover__from_any_other_non_alphabet_bytes_in_the_encoded_stream. ; 0x5f80 ; "\nThe data are encoded as described for the %s alphabet in RFC 4648.\nWhen decoding, the input may contain newlines in addition to the bytes of\nthe formal %s alphabet.  Use --ignore-garbage to attempt to recover\nfrom any other non-alphabet bytes in the encoded stream.\n"
0x0000227b      ba05000000     mov edx, 5
0x00002280      31ff           xor edi, edi
0x00002282      e8e9f2ffff     call sym.imp.dcgettext
0x00002287      488d0d163900.  lea rcx, str.base64                     ; 0x5ba4 ; "base64"
0x0000228e      4889c6         mov rsi, rax
0x00002291      bf01000000     mov edi, 1
0x00002296      31c0           xor eax, eax
0x00002298      4889ca         mov rdx, rcx
0x0000229b      e890f4ffff     call sym.imp.__printf_chk
0x000022a0      488d05223900.  lea rax, [0x00005bc9]                   ; "["
0x000022a7      488d0d5c3900.  lea rcx, str.sha256sum                  ; 0x5c0a ; "sha256sum"
0x000022ae      48c744246000.  mov qword [rsp + 0x60], 0
0x000022b7      48c744246800.  mov qword [rsp + 0x68], 0
0x000022c0      4889e2         mov rdx, rsp
0x000022c3      48890424       mov qword [rsp], rax
0x000022c7      488d05fd3800.  lea rax, str.test_invocation            ; 0x5bcb ; "test invocation"
0x000022ce      48894c2430     mov qword [rsp + 0x30], rcx
0x000022d3      488d0d3a3900.  lea rcx, str.sha384sum                  ; 0x5c14 ; "sha384sum"
0x000022da      4889442408     mov qword [rsp + 8], rax
0x000022df      488d055d3900.  lea rax, [0x00005c43]                   ; "coreutils"
0x000022e6      48894c2440     mov qword [rsp + 0x40], rcx
0x000022eb      488d0d2c3900.  lea rcx, str.sha512sum                  ; 0x5c1e ; "sha512sum"
0x000022f2      4889442410     mov qword [rsp + 0x10], rax
0x000022f7      488d05dd3800.  lea rax, str.Multi_call_invocation      ; 0x5bdb ; "Multi-call invocation"
0x000022fe      48894c2450     mov qword [rsp + 0x50], rcx
0x00002303      4889442418     mov qword [rsp + 0x18], rax
0x00002308      488d05e23800.  lea rax, str.sha224sum                  ; 0x5bf1 ; "sha224sum"
0x0000230f      4889442420     mov qword [rsp + 0x20], rax
0x00002314      488d05e03800.  lea rax, str.sha2_utilities             ; 0x5bfb ; "sha2 utilities"
0x0000231b      4889442428     mov qword [rsp + 0x28], rax
0x00002320      4889442438     mov qword [rsp + 0x38], rax
0x00002325      4889442448     mov qword [rsp + 0x48], rax
0x0000232a      4889442458     mov qword [rsp + 0x58], rax
0x0000232f      90             nop
0x00002330      4883c210       add rdx, 0x10
0x00002334      488b3a         mov rdi, qword [rdx]
0x00002337      4885ff         test rdi, rdi
0x0000233a      7413           je 0x234f
0x0000233c      b907000000     mov ecx, 7
0x00002341      4889de         mov rsi, rbx
0x00002344      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002346      0f97c0         seta al
0x00002349      1c00           sbb al, 0
0x0000234b      84c0           test al, al
0x0000234d      75e1           jne 0x2330
0x0000234f      4c8b6208       mov r12, qword [rdx + 8]
0x00002353      31ff           xor edi, edi
0x00002355      ba05000000     mov edx, 5
0x0000235a      488d35c73800.  lea rsi, str.s_online_help:___s         ; 0x5c28 ; "\n%s online help: <%s>\n"
0x00002361      4d85e4         test r12, r12
0x00002364      0f84c1000000   je 0x242b
0x0000236a      e801f2ffff     call sym.imp.dcgettext
0x0000236f      488d0d1a3d00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x6090 ; "https://www.gnu.org/software/coreutils/"
0x00002376      488d15c23800.  lea rdx, str.GNU_coreutils              ; 0x5c3f ; "GNU coreutils"
0x0000237d      4889c6         mov rsi, rax
0x00002380      bf01000000     mov edi, 1
0x00002385      31c0           xor eax, eax
0x00002387      e8a4f3ffff     call sym.imp.__printf_chk
0x0000238c      31f6           xor esi, esi
0x0000238e      bf05000000     mov edi, 5
0x00002393      e888f3ffff     call sym.imp.setlocale
0x00002398      4885c0         test rax, rax
0x0000239b      741c           je 0x23b9
0x0000239d      488d35a93800.  lea rsi, [0x00005c4d]                   ; "en_"
0x000023a4      ba03000000     mov edx, 3
0x000023a9      4889c7         mov rdi, rax
0x000023ac      e84ff1ffff     call sym.imp.strncmp
0x000023b1      85c0           test eax, eax
0x000023b3      0f8507010000   jne 0x24c0
0x000023b9      488d35913800.  lea rsi, str.Full_documentation___s_s   ; 0x5c51 ; "Full documentation <%s%s>\n"
0x000023c0      31ff           xor edi, edi
0x000023c2      ba05000000     mov edx, 5
0x000023c7      e8a4f1ffff     call sym.imp.dcgettext
0x000023cc      488d0dd13700.  lea rcx, str.base64                     ; 0x5ba4 ; "base64"
0x000023d3      488d15b63c00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x6090 ; "https://www.gnu.org/software/coreutils/"
0x000023da      4889c6         mov rsi, rax
0x000023dd      bf01000000     mov edi, 1
0x000023e2      31c0           xor eax, eax
0x000023e4      e847f3ffff     call sym.imp.__printf_chk
0x000023e9      4939dc         cmp r12, rbx
0x000023ec      488d0df23700.  lea rcx, [0x00005be5]                   ; " invocation"
0x000023f3      488d1d074400.  lea rbx, [0x00006801]
0x000023fa      480f44d9       cmove rbx, rcx
0x000023fe      488d35fb3c00.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x6100 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00002405      31ff           xor edi, edi
0x00002407      ba05000000     mov edx, 5
0x0000240c      e85ff1ffff     call sym.imp.dcgettext
0x00002411      4889d9         mov rcx, rbx
0x00002414      4889c6         mov rsi, rax
0x00002417      4c89e2         mov rdx, r12
0x0000241a      bf01000000     mov edi, 1
0x0000241f      31c0           xor eax, eax
0x00002421      e80af3ffff     call sym.imp.__printf_chk
0x00002426      e93bfdffff     jmp 0x2166
0x0000242b      e840f1ffff     call sym.imp.dcgettext
0x00002430      488d0d593c00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x6090 ; "https://www.gnu.org/software/coreutils/"
0x00002437      488d15013800.  lea rdx, str.GNU_coreutils              ; 0x5c3f ; "GNU coreutils"
0x0000243e      4889c6         mov rsi, rax
0x00002441      bf01000000     mov edi, 1
0x00002446      31c0           xor eax, eax
0x00002448      e8e3f2ffff     call sym.imp.__printf_chk
0x0000244d      31f6           xor esi, esi
0x0000244f      bf05000000     mov edi, 5
0x00002454      e8c7f2ffff     call sym.imp.setlocale
0x00002459      4885c0         test rax, rax
0x0000245c      7418           je 0x2476
0x0000245e      488d35e83700.  lea rsi, [0x00005c4d]                   ; "en_"
0x00002465      ba03000000     mov edx, 3
0x0000246a      4889c7         mov rdi, rax
0x0000246d      e88ef0ffff     call sym.imp.strncmp
0x00002472      85c0           test eax, eax
0x00002474      7543           jne 0x24b9
0x00002476      488d35d43700.  lea rsi, str.Full_documentation___s_s   ; 0x5c51 ; "Full documentation <%s%s>\n"
0x0000247d      ba05000000     mov edx, 5
0x00002482      31ff           xor edi, edi
0x00002484      4c8d25193700.  lea r12, str.base64                     ; 0x5ba4 ; "base64"
0x0000248b      488d1d533700.  lea rbx, [0x00005be5]                   ; " invocation"
0x00002492      e8d9f0ffff     call sym.imp.dcgettext
0x00002497      488d0d063700.  lea rcx, str.base64                     ; 0x5ba4 ; "base64"
0x0000249e      488d15eb3b00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x6090 ; "https://www.gnu.org/software/coreutils/"
0x000024a5      4889c6         mov rsi, rax
0x000024a8      bf01000000     mov edi, 1
0x000024ad      31c0           xor eax, eax
0x000024af      e87cf2ffff     call sym.imp.__printf_chk
0x000024b4      e945ffffff     jmp 0x23fe
0x000024b9      4c8d25e43600.  lea r12, str.base64                     ; 0x5ba4 ; "base64"
0x000024c0      4c8b2dc16b20.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x000024c7      488d35ea3b00.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x60b8 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x000024ce      31ff           xor edi, edi
0x000024d0      ba05000000     mov edx, 5
0x000024d5      e896f0ffff     call sym.imp.dcgettext
0x000024da      4c89ee         mov rsi, r13
0x000024dd      4889c7         mov rdi, rax
0x000024e0      e88bf1ffff     call sym.imp.fputs_unlocked
0x000024e5      e9cffeffff     jmp 0x23b9
0x000024ea      660f1f440000   nop word [rax + rax]
;-- decode_4:
0x000024f0      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/base64.c:405
0x000024f2      4883fe01       cmp rsi, 1                              ; ../coreutils-8.31/lib/base64.c:407
0x000024f6      0f868d000000   jbe 0x2589
0x000024fc      440fb607       movzx r8d, byte [rdi]                   ; ../coreutils-8.31/lib/base64.c:331
0x00002500      4c8d0d393c00.  lea r9, obj.b64                         ; ../coreutils-8.31/lib/base64.c:282 ; 0x6140
0x00002507      470fb60401     movzx r8d, byte [r9 + r8]
0x0000250c      4584c0         test r8b, r8b
0x0000250f      7878           js 0x2589
0x00002511      440fb65701     movzx r10d, byte [rdi + 1]
0x00002516      470fb61411     movzx r10d, byte [r9 + r10]             ; ../coreutils-8.31/lib/base64.c:167
0x0000251b      4584d2         test r10b, r10b
0x0000251e      7869           js 0x2589
0x00002520      48833900       cmp qword [rcx], 0
0x00002524      488b02         mov rax, qword [rdx]                    ; ../coreutils-8.31/lib/base64.c:52
0x00002527      7577           jne 0x25a0
0x00002529      4883fe02       cmp rsi, 2
0x0000252d      7467           je 0x2596
0x0000252f      440fb64702     movzx r8d, byte [rdi + 2]
0x00002534      4180f83d       cmp r8b, 0x3d
0x00002538      7456           je 0x2590
0x0000253a      470fb60401     movzx r8d, byte [r9 + r8]
0x0000253f      4584c0         test r8b, r8b
0x00002542      7852           js 0x2596
0x00002544      48833900       cmp qword [rcx], 0
0x00002548      7576           jne 0x25c0
0x0000254a      4883fe03       cmp rsi, 3
0x0000254e      7446           je 0x2596
0x00002550      0fb67f03       movzx edi, byte [rdi + 3]
0x00002554      4080ff3d       cmp dil, 0x3d
0x00002558      0f8492000000   je 0x25f0
0x0000255e      410fb63439     movzx esi, byte [r9 + rdi]
0x00002563      4084f6         test sil, sil
0x00002566      782e           js 0x2596
0x00002568      48833900       cmp qword [rcx], 0
0x0000256c      7413           je 0x2581
0x0000256e      41c1e006       shl r8d, 6
0x00002572      4883c001       add rax, 1                              ; ../coreutils-8.31/lib/base64.c:7
0x00002576      4109f0         or r8d, esi
0x00002579      448840ff       mov byte [rax - 1], r8b
0x0000257d      48832901       sub qword [rcx], 1
0x00002581      488902         mov qword [rdx], rax
0x00002584      b801000000     mov eax, 1
0x00002589      f3c3           ret
0x0000258b      0f1f440000     nop dword [rax + rax]
0x00002590      4883fe04       cmp rsi, 4
0x00002594      744a           je 0x25e0
0x00002596      488902         mov qword [rdx], rax
0x00002599      31c0           xor eax, eax
0x0000259b      c3             ret
0x0000259c      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/base64.c:18
0x000025a0      4589d3         mov r11d, r10d
0x000025a3      41c1e002       shl r8d, 2
0x000025a7      4883c001       add rax, 1
0x000025ab      41c0fb04       sar r11b, 4
0x000025af      4509d8         or r8d, r11d
0x000025b2      448840ff       mov byte [rax - 1], r8b
0x000025b6      48832901       sub qword [rcx], 1
0x000025ba      e96affffff     jmp 0x2529
0x000025bf      90             nop
0x000025c0      4589c3         mov r11d, r8d
0x000025c3      41c1e204       shl r10d, 4
0x000025c7      4883c001       add rax, 1
0x000025cb      41c0fb02       sar r11b, 2
0x000025cf      4509da         or r10d, r11d
0x000025d2      448850ff       mov byte [rax - 1], r10b
0x000025d6      48832901       sub qword [rcx], 1
0x000025da      e96bffffff     jmp 0x254a
0x000025df      90             nop
0x000025e0      807f033d       cmp byte [rdi + 3], 0x3d
0x000025e4      75b0           jne 0x2596                              ; ../coreutils-8.31/lib/base64.c:-351
0x000025e6      eb99           jmp 0x2581
0x000025e8      0f1f84000000.  nop dword [rax + rax]
0x000025f0      4883fe04       cmp rsi, 4
0x000025f4      75a0           jne 0x2596
0x000025f6      eb89           jmp 0x2581                              ; ../coreutils-8.31/lib/base64.c:-298
0x000025f8      0f1f84000000.  nop dword [rax + rax]
;-- base64_encode:
0x00002600      f6c103         test cl, 3
0x00002603      7514           jne 0x2619
0x00002605      4889c8         mov rax, rcx
0x00002608      48c1e802       shr rax, 2                              ; ../coreutils-8.31/lib/base64.c:-294
0x0000260c      488d0440       lea rax, [rax + rax*2]                  ; ../coreutils-8.31/lib/base64.c:-293
0x00002610      4839f0         cmp rax, rsi
0x00002613      0f840f010000   je 0x2728
0x00002619      4c8d0d203c00.  lea r9, obj.b64c                        ; 0x6240 ; "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/%s: %s"
0x00002620      e981000000     jmp 0x26a6
0x00002625      0f1f00         nop dword [rax]
0x00002628      440fb64701     movzx r8d, byte [rdi + 1]               ; ../coreutils-8.31/lib/base64.c:-290
0x0000262d      4589c2         mov r10d, r8d
0x00002630      41c0ea04       shr r10b, 4
0x00002634      4401d0         add eax, r10d
0x00002637      83e03f         and eax, 0x3f
0x0000263a      4883f902       cmp rcx, 2
0x0000263e      410fb60401     movzx eax, byte [r9 + rax]              ; ../coreutils-8.31/lib/base64.c:-287
0x00002643      884201         mov byte [rdx + 1], al
0x00002646      0f84d6000000   je 0x2722
0x0000264c      41c1e002       shl r8d, 2
0x00002650      4883fe02       cmp rsi, 2                              ; ../coreutils-8.31/lib/base64.c:-283
0x00002654      0f84b6000000   je 0x2710
0x0000265a      0fb64702       movzx eax, byte [rdi + 2]
0x0000265e      4189c2         mov r10d, eax
0x00002661      41c0ea06       shr r10b, 6
0x00002665      4501d0         add r8d, r10d
0x00002668      4183e03f       and r8d, 0x3f
0x0000266c      4883f903       cmp rcx, 3
0x00002670      470fb60401     movzx r8d, byte [r9 + r8]
0x00002675      44884202       mov byte [rdx + 2], r8b
0x00002679      0f84a3000000   je 0x2722
0x0000267f      83e03f         and eax, 0x3f
0x00002682      4883f904       cmp rcx, 4                              ; ../coreutils-8.31/lib/base64.c:-303
0x00002686      410fb60401     movzx eax, byte [r9 + rax]              ; ../coreutils-8.31/lib/base64.c:-304
0x0000268b      884203         mov byte [rdx + 3], al
0x0000268e      0f848e000000   je 0x2722                               ; ../coreutils-8.31/lib/base64.c:-303
0x00002694      4883ee03       sub rsi, 3
0x00002698      7404           je 0x269e
0x0000269a      4883c703       add rdi, 3
0x0000269e      4883c204       add rdx, 4
0x000026a2      4883e904       sub rcx, 4
0x000026a6      4885f6         test rsi, rsi
0x000026a9      0f84f9000000   je 0x27a8
0x000026af      4885c9         test rcx, rcx
0x000026b2      0f84f0000000   je 0x27a8                               ; ../coreutils-8.31/lib/base64.c:-296
0x000026b8      0fb607         movzx eax, byte [rdi]                   ; ../coreutils-8.31/lib/base64.c:-287
0x000026bb      4189c0         mov r8d, eax
0x000026be      41c0e802       shr r8b, 2
0x000026c2      4183e03f       and r8d, 0x3f
0x000026c6      4883f901       cmp rcx, 1
0x000026ca      470fb60401     movzx r8d, byte [r9 + r8]
0x000026cf      448802         mov byte [rdx], r8b
0x000026d2      744e           je 0x2722
0x000026d4      c1e004         shl eax, 4                              ; ../coreutils-8.31/lib/base64.c:-296
0x000026d7      4883fe01       cmp rsi, 1
0x000026db      0f8547ffffff   jne 0x2628
0x000026e1      83e030         and eax, 0x30
0x000026e4      4883f902       cmp rcx, 2                              ; ../coreutils-8.31/lib/base64.c:-339
0x000026e8      410fb60401     movzx eax, byte [r9 + rax]
0x000026ed      884201         mov byte [rdx + 1], al
0x000026f0      7430           je 0x2722
0x000026f2      4883f903       cmp rcx, 3
0x000026f6      c642023d       mov byte [rdx + 2], 0x3d                ; '='
                                                                       ; [0x3d:1]=0
0x000026fa      7426           je 0x2722
0x000026fc      4883f904       cmp rcx, 4                              ; ../coreutils-8.31/lib/base64.c:-351
0x00002700      c642033d       mov byte [rdx + 3], 0x3d                ; '='
                                                                       ; [0x3d:1]=0
0x00002704      741c           je 0x2722
0x00002706      31f6           xor esi, esi
0x00002708      eb94           jmp 0x269e
0x0000270a      660f1f440000   nop word [rax + rax]
0x00002710      4183e03c       and r8d, 0x3c
0x00002714      4883f903       cmp rcx, 3
0x00002718      430fb60401     movzx eax, byte [r9 + r8]
0x0000271d      884202         mov byte [rdx + 2], al
0x00002720      75da           jne 0x26fc
0x00002722      f3c3           ret
0x00002724      0f1f4000       nop dword [rax]
0x00002728      4885c0         test rax, rax
0x0000272b      4c8d0407       lea r8, [rdi + rax]
0x0000272f      488d0d0a3b00.  lea rcx, obj.b64c                       ; 0x6240 ; "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/%s: %s"
0x00002736      74ea           je 0x2722
0x00002738      0f1f84000000.  nop dword [rax + rax]
0x00002740      0fb607         movzx eax, byte [rdi]
0x00002743      4883c703       add rdi, 3
0x00002747      4883c204       add rdx, 4
0x0000274b      89c6           mov esi, eax
0x0000274d      c1e004         shl eax, 4
0x00002750      40c0ee02       shr sil, 2
0x00002754      83e63f         and esi, 0x3f                           ; ../coreutils-8.31/lib/base64.c:-339
0x00002757      0fb63431       movzx esi, byte [rcx + rsi]             ; ../coreutils-8.31/lib/base64.c:-334
0x0000275b      408872fc       mov byte [rdx - 4], sil
0x0000275f      0fb677fe       movzx esi, byte [rdi - 2]
0x00002763      4189f1         mov r9d, esi
0x00002766      41c0e904       shr r9b, 4
0x0000276a      4401c8         add eax, r9d
0x0000276d      83e03f         and eax, 0x3f                           ; ../coreutils-8.31/lib/base64.c:-278
0x00002770      0fb60401       movzx eax, byte [rcx + rax]
0x00002774      8842fd         mov byte [rdx - 3], al
0x00002777      0fb647ff       movzx eax, byte [rdi - 1]
0x0000277b      4189c1         mov r9d, eax
0x0000277e      83e03f         and eax, 0x3f
0x00002781      41c0e906       shr r9b, 6
0x00002785      0fb60401       movzx eax, byte [rcx + rax]
0x00002789      418d34b1       lea esi, [r9 + rsi*4]
0x0000278d      83e63f         and esi, 0x3f
0x00002790      0fb63431       movzx esi, byte [rcx + rsi]
0x00002794      408872fe       mov byte [rdx - 2], sil
0x00002798      4939f8         cmp r8, rdi
0x0000279b      8842ff         mov byte [rdx - 1], al
0x0000279e      75a0           jne 0x2740
0x000027a0      f3c3           ret
0x000027a2      660f1f440000   nop word [rax + rax]
0x000027a8      4885c9         test rcx, rcx
0x000027ab      0f8471ffffff   je 0x2722
0x000027b1      c60200         mov byte [rdx], 0
0x000027b4      c3             ret
0x000027b5      90             nop
0x000027b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- base64_encode_alloc:
0x000027c0      4156           push r14
0x000027c2      4155           push r13
0x000027c4      4989d5         mov r13, rdx
0x000027c7      488d5602       lea rdx, [rsi + 2]
0x000027cb      4154           push r12
0x000027cd      55             push rbp
0x000027ce      53             push rbx
0x000027cf      48bbabaaaaaa.  movabs rbx, 0xaaaaaaaaaaaaaaab          ; ../coreutils-8.31/lib/base64.c:-243
0x000027d9      4889d0         mov rax, rdx
0x000027dc      48f7e3         mul rbx
0x000027df      48d1ea         shr rdx, 1
0x000027e2      488d1c950000.  lea rbx, [rdx*4]
0x000027ea      488d6b01       lea rbp, [rbx + 1]
0x000027ee      4839ee         cmp rsi, rbp
0x000027f1      761d           jbe 0x2810
0x000027f3      49c745000000.  mov qword [r13], 0
0x000027fb      31ed           xor ebp, ebp
0x000027fd      5b             pop rbx
0x000027fe      4889e8         mov rax, rbp
0x00002801      5d             pop rbp
0x00002802      415c           pop r12
0x00002804      415d           pop r13
0x00002806      415e           pop r14
0x00002808      c3             ret
0x00002809      0f1f80000000.  nop dword [rax]
0x00002810      4989fe         mov r14, rdi
0x00002813      4889ef         mov rdi, rbp
0x00002816      4989f4         mov r12, rsi
0x00002819      e8a2eeffff     call sym.imp.malloc
0x0000281e      4885c0         test rax, rax
0x00002821      49894500       mov qword [r13], rax
0x00002825      74d6           je 0x27fd
0x00002827      4889e9         mov rcx, rbp
0x0000282a      4889c2         mov rdx, rax
0x0000282d      4889dd         mov rbp, rbx
0x00002830      4c89e6         mov rsi, r12
0x00002833      4c89f7         mov rdi, r14
0x00002836      e8c5fdffff     call sym.base64_encode
0x0000283b      5b             pop rbx
0x0000283c      4889e8         mov rax, rbp                            ; ../coreutils-8.31/lib/base64.c:81
0x0000283f      5d             pop rbp
0x00002840      415c           pop r12
0x00002842      415d           pop r13
0x00002844      415e           pop r14
0x00002846      c3             ret
0x00002847      660f1f840000.  nop word [rax + rax]
;-- isbase64:
0x00002850      488d05e93800.  lea rax, obj.b64                        ; 0x6140
0x00002857      400fb6ff       movzx edi, dil
0x0000285b      0fb60438       movzx eax, byte [rax + rdi]
0x0000285f      f7d0           not eax
0x00002861      c0e807         shr al, 7
0x00002864      c3             ret
0x00002865      90             nop
0x00002866      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/base64.c:83
;-- base64_decode_ctx_init:
0x00002870      c70700000000   mov dword [rdi], 0
0x00002876      c3             ret
0x00002877      660f1f840000.  nop word [rax + rax]
;-- base64_decode_ctx:
0x00002880      4157           push r15
0x00002882      4156           push r14
0x00002884      4989fe         mov r14, rdi
0x00002887      4155           push r13
0x00002889      4154           push r12
0x0000288b      4989d5         mov r13, rdx
0x0000288e      55             push rbp
0x0000288f      53             push rbx
0x00002890      4989f4         mov r12, rsi
0x00002893      4883ec38       sub rsp, 0x38
0x00002897      4d8b38         mov r15, qword [r8]
0x0000289a      64488b1c2528.  mov rbx, qword fs:[0x28]
0x000028a3      48895c2428     mov qword [rsp + 0x28], rbx
0x000028a8      31db           xor ebx, ebx
0x000028aa      4885ff         test rdi, rdi
0x000028ad      48894c2418     mov qword [rsp + 0x18], rcx
0x000028b2      4c89442410     mov qword [rsp + 0x10], r8
0x000028b7      4c897c2420     mov qword [rsp + 0x20], r15
0x000028bc      0f95442407     setne byte [rsp + 7]
0x000028c1      0f8429020000   je 0x2af0
0x000028c7      4885d2         test rdx, rdx
0x000028ca      8b07           mov eax, dword [rdi]
0x000028cc      0f95442405     setne byte [rsp + 5]
0x000028d1      0fb65c2405     movzx ebx, byte [rsp + 5]
0x000028d6      85c0           test eax, eax
0x000028d8      0f94c0         sete al
0x000028db      21d8           and eax, ebx
0x000028dd      88442406       mov byte [rsp + 6], al
0x000028e1      498d4604       lea rax, [r14 + 4]
0x000028e5      488d6c2420     lea rbp, [rsp + 0x20]
0x000028ea      488d5c2418     lea rbx, [rsp + 0x18]
0x000028ef      4889442408     mov qword [rsp + 8], rax
0x000028f4      807c240600     cmp byte [rsp + 6], 0
0x000028f9      4c89fa         mov rdx, r15
0x000028fc      0f85d3000000   jne 0x29d5
0x00002902      4d85ed         test r13, r13
0x00002905      0f94c0         sete al
0x00002908      22442405       and al, byte [rsp + 5]
0x0000290c      0f8586000000   jne 0x2998
0x00002912      4d85ed         test r13, r13
0x00002915      0f84dd000000   je 0x29f8
0x0000291b      41803c240a     cmp byte [r12], 0xa
0x00002920      0f849a010000   je 0x2ac0
0x00002926      4c29fa         sub rdx, r15
0x00002929      4801542418     add qword [rsp + 0x18], rdx
0x0000292e      4d85f6         test r14, r14
0x00002931      4c897c2420     mov qword [rsp + 0x20], r15
0x00002936      4f8d3c2c       lea r15, [r12 + r13]
0x0000293a      0f85d1000000   jne 0x2a11
0x00002940      4c89e7         mov rdi, r12
0x00002943      4983fd03       cmp r13, 3
0x00002947      7712           ja 0x295b
0x00002949      807c240700     cmp byte [rsp + 7], 0                   ; ../coreutils-8.31/lib/base64.c:27
0x0000294e      740b           je 0x295b
0x00002950      807c240500     cmp byte [rsp + 5], 0
0x00002955      0f8504010000   jne 0x2a5f
0x0000295b      4889e9         mov rcx, rbp
0x0000295e      4889da         mov rdx, rbx
0x00002961      4c89ee         mov rsi, r13
0x00002964      e887fbffff     call sym.decode_4
0x00002969      84c0           test al, al
0x0000296b      0f84ad010000   je 0x2b1e
0x00002971      4d29e7         sub r15, r12
0x00002974      807c240600     cmp byte [rsp + 6], 0
0x00002979      4d89fd         mov r13, r15
0x0000297c      4c8b7c2420     mov r15, qword [rsp + 0x20]
0x00002981      4c89fa         mov rdx, r15
0x00002984      754f           jne 0x29d5
0x00002986      4d85ed         test r13, r13
0x00002989      0f94c0         sete al
0x0000298c      22442405       and al, byte [rsp + 5]
0x00002990      7480           je 0x2912
0x00002992      660f1f440000   nop word [rax + rax]
0x00002998      488b5c2410     mov rbx, qword [rsp + 0x10]
0x0000299d      482913         sub qword [rbx], rdx
0x000029a0      488b5c2428     mov rbx, qword [rsp + 0x28]
0x000029a5      6448331c2528.  xor rbx, qword fs:[0x28]
0x000029ae      0f8574010000   jne 0x2b28
0x000029b4      4883c438       add rsp, 0x38
0x000029b8      5b             pop rbx
0x000029b9      5d             pop rbp
0x000029ba      415c           pop r12                                 ; ../coreutils-8.31/lib/base64.c:-185
0x000029bc      415d           pop r13
0x000029be      415e           pop r14
0x000029c0      415f           pop r15
0x000029c2      c3             ret                                     ; ../coreutils-8.31/lib/base64.c:-182
0x000029c3      0f1f440000     nop dword [rax + rax]
0x000029c8      4c8b7c2420     mov r15, qword [rsp + 0x20]
0x000029cd      4983c404       add r12, 4
0x000029d1      4983ed04       sub r13, 4                              ; ../coreutils-8.31/lib/base64.c:-165
0x000029d5      4889e9         mov rcx, rbp
0x000029d8      4889da         mov rdx, rbx
0x000029db      4c89ee         mov rsi, r13                            ; ../coreutils-8.31/lib/base64.c:-164
0x000029de      4c89e7         mov rdi, r12
0x000029e1      e80afbffff     call sym.decode_4
0x000029e6      84c0           test al, al                             ; ../coreutils-8.31/lib/base64.c:-162
0x000029e8      75de           jne 0x29c8
0x000029ea      488b542420     mov rdx, qword [rsp + 0x20]
0x000029ef      e90effffff     jmp 0x2902
0x000029f4      0f1f4000       nop dword [rax]
0x000029f8      4c29fa         sub rdx, r15
0x000029fb      4801542418     add qword [rsp + 0x18], rdx
0x00002a00      4d85f6         test r14, r14
0x00002a03      4c897c2420     mov qword [rsp + 0x20], r15
0x00002a08      0f84f1000000   je 0x2aff
0x00002a0e      4d89e7         mov r15, r12
0x00002a11      418b06         mov eax, dword [r14]
0x00002a14      83f804         cmp eax, 4
0x00002a17      7457           je 0x2a70
0x00002a19      85c0           test eax, eax                           ; ../coreutils-8.31/lib/base64.c:-184
0x00002a1b      745a           je 0x2a77
0x00002a1d      4d39fc         cmp r12, r15
0x00002a20      732c           jae 0x2a4e                              ; ../coreutils-8.31/lib/base64.c:-179
0x00002a22      660f1f440000   nop word [rax + rax]
0x00002a28      4983c401       add r12, 1
0x00002a2c      410fb65424ff   movzx edx, byte [r12 - 1]
0x00002a32      80fa0a         cmp dl, 0xa
0x00002a35      7412           je 0x2a49
0x00002a37      8d4801         lea ecx, [rax + 1]
0x00002a3a      83f904         cmp ecx, 4
0x00002a3d      41890e         mov dword [r14], ecx
0x00002a40      4188540604     mov byte [r14 + rax + 4], dl
0x00002a45      7459           je 0x2aa0
0x00002a47      89c8           mov eax, ecx
0x00002a49      4d39fc         cmp r12, r15                            ; ../coreutils-8.31/lib/base64.c:-161
0x00002a4c      75da           jne 0x2a28
0x00002a4e      4189c5         mov r13d, eax                           ; ../coreutils-8.31/lib/base64.c:-154
0x00002a51      488b7c2408     mov rdi, qword [rsp + 8]
0x00002a56      4d85ed         test r13, r13                           ; ../coreutils-8.31/lib/base64.c:12
0x00002a59      0f85e4feffff   jne 0x2943
0x00002a5f      488b542420     mov rdx, qword [rsp + 0x20]
0x00002a64      b801000000     mov eax, 1
0x00002a69      e92affffff     jmp 0x2998                              ; ../coreutils-8.31/lib/base64.c:-11
0x00002a6e      6690           nop                                     ; ../coreutils-8.31/lib/base64.c:-9
0x00002a70      41c706000000.  mov dword [r14], 0
0x00002a77      4983fd03       cmp r13, 3
0x00002a7b      7e17           jle 0x2a94
0x00002a7d      ba04000000     mov edx, 4
0x00002a82      be0a000000     mov esi, 0xa
0x00002a87      4c89e7         mov rdi, r12
0x00002a8a      e8c1ebffff     call sym.imp.memchr
0x00002a8f      4885c0         test rax, rax
0x00002a92      7478           je 0x2b0c
0x00002a94      418b06         mov eax, dword [r14]
0x00002a97      e981ffffff     jmp 0x2a1d
0x00002a9c      0f1f4000       nop dword [rax]
0x00002aa0      b804000000     mov eax, 4
0x00002aa5      488b7c2408     mov rdi, qword [rsp + 8]
0x00002aaa      4189c5         mov r13d, eax
0x00002aad      4d85ed         test r13, r13
0x00002ab0      0f858dfeffff   jne 0x2943
0x00002ab6      eba7           jmp 0x2a5f
0x00002ab8      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/base64.c:-175
0x00002ac0      4d85f6         test r14, r14
0x00002ac3      7413           je 0x2ad8
0x00002ac5      4983c401       add r12, 1
0x00002ac9      4983ed01       sub r13, 1
0x00002acd      4989d7         mov r15, rdx
0x00002ad0      e91ffeffff     jmp 0x28f4
0x00002ad5      0f1f00         nop dword [rax]
0x00002ad8      4c29fa         sub rdx, r15
0x00002adb      4c897c2420     mov qword [rsp + 0x20], r15
0x00002ae0      4801542418     add qword [rsp + 0x18], rdx
0x00002ae5      4f8d3c2c       lea r15, [r12 + r13]
0x00002ae9      e952feffff     jmp 0x2940
0x00002aee      6690           nop
0x00002af0      c644240601     mov byte [rsp + 6], 1
0x00002af5      c644240501     mov byte [rsp + 5], 1
0x00002afa      e9e2fdffff     jmp 0x28e1
0x00002aff      4c89fa         mov rdx, r15
0x00002b02      b801000000     mov eax, 1
0x00002b07      e98cfeffff     jmp 0x2998
0x00002b0c      4c89e7         mov rdi, r12
0x00002b0f      41bd04000000   mov r13d, 4
0x00002b15      4983c404       add r12, 4                              ; ../coreutils-8.31/lib/base64.c:52
0x00002b19      e93dfeffff     jmp 0x295b
0x00002b1e      488b542420     mov rdx, qword [rsp + 0x20]
0x00002b23      e970feffff     jmp 0x2998
0x00002b28      e873eaffff     call sym.imp.__stack_chk_fail
0x00002b2d      0f1f00         nop dword [rax]
;-- base64_decode_alloc_ctx:
0x00002b30      4156           push r14
0x00002b32      4155           push r13
0x00002b34      4989d6         mov r14, rdx
0x00002b37      4154           push r12
0x00002b39      55             push rbp
0x00002b3a      4989fc         mov r12, rdi
0x00002b3d      53             push rbx
0x00002b3e      4989f5         mov r13, rsi
0x00002b41      4889cb         mov rbx, rcx                            ; ../coreutils-8.31/lib/base64.c:64
0x00002b44      4c89c5         mov rbp, r8
0x00002b47      4883ec20       sub rsp, 0x20
0x00002b4b      64488b042528.  mov rax, qword fs:[0x28]
0x00002b54      4889442418     mov qword [rsp + 0x18], rax
0x00002b59      31c0           xor eax, eax
0x00002b5b      4889d0         mov rax, rdx
0x00002b5e      48c1e802       shr rax, 2
0x00002b62      488d7c4003     lea rdi, [rax + rax*2 + 3]
0x00002b67      48897c2410     mov qword [rsp + 0x10], rdi
0x00002b6c      e84febffff     call sym.imp.malloc
0x00002b71      4885c0         test rax, rax
0x00002b74      488903         mov qword [rbx], rax
0x00002b77      742f           je 0x2ba8
0x00002b79      4c8d442410     lea r8, [rsp + 0x10]                    ; ../coreutils-8.31/lib/base64.c:58
0x00002b7e      4889c1         mov rcx, rax
0x00002b81      4c89f2         mov rdx, r14
0x00002b84      4c89ee         mov rsi, r13
0x00002b87      4c89e7         mov rdi, r12
0x00002b8a      e8f1fcffff     call sym.base64_decode_ctx
0x00002b8f      84c0           test al, al
0x00002b91      743d           je 0x2bd0
0x00002b93      4885ed         test rbp, rbp                           ; ../coreutils-8.31/lib/base64.c:67
0x00002b96      7410           je 0x2ba8
0x00002b98      488b542410     mov rdx, qword [rsp + 0x10]
0x00002b9d      48895500       mov qword [rbp], rdx
0x00002ba1      eb0a           jmp 0x2bad
0x00002ba3      0f1f440000     nop dword [rax + rax]
0x00002ba8      b801000000     mov eax, 1
0x00002bad      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00002bb2      6448330c2528.  xor rcx, qword fs:[0x28]
0x00002bbb      752d           jne 0x2bea
0x00002bbd      4883c420       add rsp, 0x20
0x00002bc1      5b             pop rbx
0x00002bc2      5d             pop rbp
0x00002bc3      415c           pop r12
0x00002bc5      415d           pop r13
0x00002bc7      415e           pop r14
0x00002bc9      c3             ret
0x00002bca      660f1f440000   nop word [rax + rax]
0x00002bd0      488b3b         mov rdi, qword [rbx]
0x00002bd3      8844240f       mov byte [rsp + 0xf], al
0x00002bd7      e8f4e8ffff     call sym.imp.free
0x00002bdc      48c703000000.  mov qword [rbx], 0
0x00002be3      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00002be8      ebc3           jmp 0x2bad
0x00002bea      e8b1e9ffff     call sym.imp.__stack_chk_fail
0x00002bef      90             nop
;-- close_stdout_set_file_name:
0x00002bf0      48893de16420.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x2090d8:8]=0
0x00002bf7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00002bf8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00002c00      40883dc96420.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x2090d0:1]=0
0x00002c07      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00002c08      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00002c10      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00002c11      53             push rbx
0x00002c12      4883ec08       sub rsp, 8
0x00002c16      488b3d6b6420.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x00002c1d      e8be2d0000     call sym.close_stream
0x00002c22      85c0           test eax, eax
0x00002c24      7416           je 0x2c3c
0x00002c26      e8c5e8ffff     call sym.imp.__errno_location
0x00002c2b      803d9e642000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x2090d0:1]=0
0x00002c32      4889c3         mov rbx, rax
0x00002c35      741c           je 0x2c53
0x00002c37      833820         cmp dword [rax], 0x20
0x00002c3a      7517           jne 0x2c53
0x00002c3c      488b3d7d6420.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2090c0:8]=0
0x00002c43      e8982d0000     call sym.close_stream
0x00002c48      85c0           test eax, eax
0x00002c4a      7546           jne 0x2c92
0x00002c4c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00002c50      5b             pop rbx
0x00002c51      5d             pop rbp
0x00002c52      c3             ret
0x00002c53      488d35703000.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x5cca ; "write error"
0x00002c5a      31ff           xor edi, edi
0x00002c5c      ba05000000     mov edx, 5
0x00002c61      e80ae9ffff     call sym.imp.dcgettext
0x00002c66      488b3d6b6420.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x2090d8:8]=0
0x00002c6d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00002c70      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00002c73      7428           je 0x2c9d
0x00002c75      e8961b0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x00002c7a      8b33           mov esi, dword [rbx]
0x00002c7c      488d15fd3500.  lea rdx, [0x00006280]                   ; "%s: %s"
0x00002c83      4889c1         mov rcx, rax
0x00002c86      4989e8         mov r8, rbp
0x00002c89      31ff           xor edi, edi
0x00002c8b      31c0           xor eax, eax
0x00002c8d      e8beeaffff     call sym.imp.error
0x00002c92      8b3d80632000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x209018:4]=1
0x00002c98      e873e8ffff     call sym.imp._exit
0x00002c9d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x00002c9f      488d15de3500.  lea rdx, [0x00006284]                   ; "%s"
0x00002ca6      4889c1         mov rcx, rax
0x00002ca9      31ff           xor edi, edi
0x00002cab      31c0           xor eax, eax
0x00002cad      e89eeaffff     call sym.imp.error
0x00002cb2      ebde           jmp 0x2c92
0x00002cb4      662e0f1f8400.  nop word cs:[rax + rax]
0x00002cbe      6690           nop
;-- fdadvise:
0x00002cc0      e97be9ffff     jmp sym.imp.posix_fadvise               ; ../coreutils-8.31/lib/fadvise.c:32
0x00002cc5      90             nop
0x00002cc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- fadvise:
0x00002cd0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fadvise.c:40
0x00002cd3      741b           je 0x2cf0
0x00002cd5      53             push rbx
0x00002cd6      89f3           mov ebx, esi
0x00002cd8      e8d3e9ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fadvise.c:42
0x00002cdd      89d9           mov ecx, ebx                            ; ../coreutils-8.31/lib/fadvise.c:34
0x00002cdf      31d2           xor edx, edx
0x00002ce1      31f6           xor esi, esi
0x00002ce3      5b             pop rbx                                 ; ../coreutils-8.31/lib/fadvise.c:43
0x00002ce4      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fadvise.c:34
0x00002ce6      e955e9ffff     jmp sym.imp.posix_fadvise
0x00002ceb      0f1f440000     nop dword [rax + rax]
0x00002cf0      f3c3           ret
0x00002cf2      662e0f1f8400.  nop word cs:[rax + rax]
0x00002cfc      0f1f4000       nop dword [rax]
;-- set_program_name:
0x00002d00      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00002d03      53             push rbx
0x00002d04      7477           je 0x2d7d                               ; ../coreutils-8.31/lib/progname.c:51
0x00002d06      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x00002d0b      4889fb         mov rbx, rdi
0x00002d0e      e8dde8ffff     call sym.imp.strrchr
0x00002d13      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00002d16      7455           je 0x2d6d
0x00002d18      4c8d4001       lea r8, [rax + 1]
0x00002d1c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x00002d1f      4829da         sub rdx, rbx
0x00002d22      4883fa06       cmp rdx, 6
0x00002d26      7e45           jle 0x2d6d
0x00002d28      488d70fa       lea rsi, [rax - 6]
0x00002d2c      488d3d8d3500.  lea rdi, str..libs                      ; 0x62c0 ; "/.libs/"
0x00002d33      b907000000     mov ecx, 7
0x00002d38      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002d3a      0f97c2         seta dl
0x00002d3d      80da00         sbb dl, 0
0x00002d40      84d2           test dl, dl
0x00002d42      7529           jne 0x2d6d
0x00002d44      488d3d7d3500.  lea rdi, [0x000062c8]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x00002d4b      b903000000     mov ecx, 3
0x00002d50      4c89c6         mov rsi, r8
0x00002d53      4c89c3         mov rbx, r8
0x00002d56      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002d58      0f97c2         seta dl
0x00002d5b      80da00         sbb dl, 0
0x00002d5e      84d2           test dl, dl
0x00002d60      750b           jne 0x2d6d
0x00002d62      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00002d66      48891d136320.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x209080:8]=0
0x00002d6d      48891d6c6320.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x2090e0:8]=0
0x00002d74      48891d2d6320.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x00002d7b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x00002d7c      c3             ret
0x00002d7d      488b0d3c6320.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2090c0:8]=0
0x00002d84      488d3dfd3400.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x6288 ; "A NULL argv[0] was passed through an exec system call.\n"
0x00002d8b      ba37000000     mov edx, 0x37                           ; '7'
0x00002d90      be01000000     mov esi, 1
0x00002d95      e806eaffff     call sym.imp.fwrite
0x00002d9a      e841e7ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x00002d9f      90             nop
;-- gettext_quote.part.1:
0x00002da0      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00002da1      53             push rbx
0x00002da2      4889fd         mov rbp, rdi
0x00002da5      89f3           mov ebx, esi
0x00002da7      4883ec08       sub rsp, 8
0x00002dab      e8102d0000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00002db0      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00002db3      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002db6      80fa55         cmp dl, 0x55
0x00002db9      7475           je 0x2e30
0x00002dbb      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x00002dbe      7420           je 0x2de0
0x00002dc0      488d05143500.  lea rax, str.l______l                   ; 0x62db ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00002dc7      488d150f3500.  lea rdx, [0x000062dd]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00002dce      83fb09         cmp ebx, 9
0x00002dd1      480f45c2       cmovne rax, rdx
0x00002dd5      4883c408       add rsp, 8
0x00002dd9      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x00002dda      5d             pop rbp
0x00002ddb      c3             ret
0x00002ddc      0f1f4000       nop dword [rax]
0x00002de0      0fb65001       movzx edx, byte [rax + 1]
0x00002de4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002de7      80fa42         cmp dl, 0x42
0x00002dea      75d4           jne 0x2dc0
0x00002dec      80780231       cmp byte [rax + 2], 0x31
0x00002df0      75ce           jne 0x2dc0
0x00002df2      80780338       cmp byte [rax + 3], 0x38
0x00002df6      75c8           jne 0x2dc0
0x00002df8      80780430       cmp byte [rax + 4], 0x30
0x00002dfc      75c2           jne 0x2dc0
0x00002dfe      80780533       cmp byte [rax + 5], 0x33
0x00002e02      75bc           jne 0x2dc0
0x00002e04      80780630       cmp byte [rax + 6], 0x30
0x00002e08      75b6           jne 0x2dc0
0x00002e0a      80780700       cmp byte [rax + 7], 0
0x00002e0e      75b0           jne 0x2dc0
0x00002e10      807d0060       cmp byte [rbp], 0x60
0x00002e14      488d05b93400.  lea rax, [0x000062d4]
0x00002e1b      488d15b63400.  lea rdx, [0x000062d8]
0x00002e22      480f45c2       cmovne rax, rdx
0x00002e26      4883c408       add rsp, 8
0x00002e2a      5b             pop rbx
0x00002e2b      5d             pop rbp
0x00002e2c      c3             ret
0x00002e2d      0f1f00         nop dword [rax]
0x00002e30      0fb65001       movzx edx, byte [rax + 1]
0x00002e34      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002e37      80fa54         cmp dl, 0x54
0x00002e3a      7584           jne 0x2dc0
0x00002e3c      0fb65002       movzx edx, byte [rax + 2]
0x00002e40      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002e43      80fa46         cmp dl, 0x46
0x00002e46      0f8574ffffff   jne 0x2dc0
0x00002e4c      8078032d       cmp byte [rax + 3], 0x2d
0x00002e50      0f856affffff   jne 0x2dc0
0x00002e56      80780438       cmp byte [rax + 4], 0x38
0x00002e5a      0f8560ffffff   jne 0x2dc0
0x00002e60      80780500       cmp byte [rax + 5], 0
0x00002e64      0f8556ffffff   jne 0x2dc0
0x00002e6a      807d0060       cmp byte [rbp], 0x60
0x00002e6e      488d05573400.  lea rax, [0x000062cc]                   ; "\u2018"
0x00002e75      488d15543400.  lea rdx, [0x000062d0]                   ; "\u2019"
0x00002e7c      480f45c2       cmovne rax, rdx
0x00002e80      4883c408       add rsp, 8
0x00002e84      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00002e85      5d             pop rbp
0x00002e86      c3             ret
0x00002e87      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00002e90      4157           push r15
0x00002e92      4156           push r14
0x00002e94      4589c7         mov r15d, r8d
0x00002e97      4155           push r13
0x00002e99      4154           push r12
0x00002e9b      4989fe         mov r14, rdi
0x00002e9e      55             push rbp
0x00002e9f      53             push rbx
0x00002ea0      4489cb         mov ebx, r9d
0x00002ea3      4989f5         mov r13, rsi
0x00002ea6      4889cd         mov rbp, rcx
0x00002ea9      83e302         and ebx, 2
0x00002eac      4881ecb80000.  sub rsp, 0xb8
0x00002eb3      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x00002ebb      4889542410     mov qword [rsp + 0x10], rdx
0x00002ec0      4489442408     mov dword [rsp + 8], r8d
0x00002ec5      44894c2478     mov dword [rsp + 0x78], r9d
0x00002eca      4889442420     mov qword [rsp + 0x20], rax
0x00002ecf      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00002ed7      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x00002edc      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00002ee4      4889442460     mov qword [rsp + 0x60], rax
0x00002ee9      64488b042528.  mov rax, qword fs:[0x28]
0x00002ef2      48898424a800.  mov qword [rsp + 0xa8], rax
0x00002efa      31c0           xor eax, eax
0x00002efc      e87fe6ffff     call sym.imp.__ctype_get_mb_cur_max
0x00002f01      4183ff0a       cmp r15d, 0xa
0x00002f05      4889442458     mov qword [rsp + 0x58], rax
0x00002f0a      0f87af110000   ja 0x40bf
0x00002f10      488d0d293400.  lea rcx, [0x00006340]
0x00002f17      4489fa         mov edx, r15d
0x00002f1a      48630491       movsxd rax, dword [rcx + rdx*4]
0x00002f1e      4801c8         add rax, rcx
0x00002f21      ffe0           jmp rax
0x00002f23      c644240e01     mov byte [rsp + 0xe], 1
0x00002f28      c644247c00     mov byte [rsp + 0x7c], 0
0x00002f2d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00002f30      48c744245000.  mov qword [rsp + 0x50], 0
0x00002f39      c644240f01     mov byte [rsp + 0xf], 1
0x00002f3e      c644240d00     mov byte [rsp + 0xd], 0
0x00002f43      488d05933300.  lea rax, [0x000062dd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00002f4a      48c744241801.  mov qword [rsp + 0x18], 1
0x00002f53      4531ff         xor r15d, r15d
0x00002f56      c74424080200.  mov dword [rsp + 8], 2
0x00002f5e      4889442448     mov qword [rsp + 0x48], rax
0x00002f63      4531db         xor r11d, r11d
0x00002f66      4889e8         mov rax, rbp
0x00002f69      4589e0         mov r8d, r12d
0x00002f6c      4c89dd         mov rbp, r11
0x00002f6f      4989c3         mov r11, rax
0x00002f72      660f1f440000   nop word [rax + rax]
0x00002f78      4939eb         cmp r11, rbp
0x00002f7b      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x00002f7f      4983fbff       cmp r11, 0xffffffffffffffff
0x00002f83      750d           jne 0x2f92
0x00002f85      488b442410     mov rax, qword [rsp + 0x10]
0x00002f8a      803c2800       cmp byte [rax + rbp], 0
0x00002f8e      410f95c4       setne r12b
0x00002f92      4584e4         test r12b, r12b
0x00002f95      0f8455060000   je 0x35f0
0x00002f9b      837c240802     cmp dword [rsp + 8], 2
0x00002fa0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002fa5      4c8d0c2f       lea r9, [rdi + rbp]
0x00002fa9      0f95c0         setne al
0x00002fac      2244240d       and al, byte [rsp + 0xd]
0x00002fb0      4189c2         mov r10d, eax
0x00002fb3      0f84a7000000   je 0x3060
0x00002fb9      488b442418     mov rax, qword [rsp + 0x18]
0x00002fbe      4885c0         test rax, rax
0x00002fc1      0f8429040000   je 0x33f0
0x00002fc7      4983fbff       cmp r11, 0xffffffffffffffff
0x00002fcb      488d5c0500     lea rbx, [rbp + rax]
0x00002fd0      752e           jne 0x3000
0x00002fd2      4883f801       cmp rax, 1
0x00002fd6      7628           jbe 0x3000
0x00002fd8      4488442438     mov byte [rsp + 0x38], r8b
0x00002fdd      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00002fe2      4c894c2428     mov qword [rsp + 0x28], r9
0x00002fe7      e8a4e5ffff     call sym.imp.strlen
0x00002fec      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00002ff2      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00002ff8      4989c3         mov r11, rax
0x00002ffb      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00003000      4c39db         cmp rbx, r11
0x00003003      4488542428     mov byte [rsp + 0x28], r10b
0x00003008      0f87b2050000   ja 0x35c0
0x0000300e      488b542418     mov rdx, qword [rsp + 0x18]
0x00003013      488b742448     mov rsi, qword [rsp + 0x48]
0x00003018      4c89cf         mov rdi, r9
0x0000301b      4c895c2440     mov qword [rsp + 0x40], r11
0x00003020      4488442438     mov byte [rsp + 0x38], r8b
0x00003025      4c894c2430     mov qword [rsp + 0x30], r9
0x0000302a      e831e6ffff     call sym.imp.memcmp
0x0000302f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00003031      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003036      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x0000303c      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00003041      0f8579050000   jne 0x35c0
0x00003047      807c240f00     cmp byte [rsp + 0xf], 0
0x0000304c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003052      0f857d0f0000   jne 0x3fd5
0x00003058      0f1f84000000.  nop dword [rax + rax]
0x00003060      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00003064      80fb7e         cmp bl, 0x7e
0x00003067      0f871b030000   ja 0x3388
0x0000306d      488d0df83200.  lea rcx, [0x0000636c]                   ; "4\xcf\xff\xff\x1c\xd0\xff\xff\x1c\xd0\xff\xff\x1c\xd0\xff\xff\x1c\xd0\xff\xff\x1c\xd0\xff\xff\x1c\xd0\xff\xfft\xcf\xff\xff|\xce\xff\xff<\xce\xff\xff\x04\xd0\xff\xff\xf4\xcf\xff\xff\xe4\xcf\xff\xff\xd4\xcf\xff\xff\x1c\xd0\xff\xff\x1c\xd0\xff\xff\x1c\xd0\xff\xff\x1c\xd0\xff\xff\x1c\xd0\xff\xff\x1c\xd0\xff\xff\x1c\xd0\xff\xff\x1c\xd0\xff\xff\x1c\xd0\xff\xff\x1c\xd0\xff\xff\x1c\xd0\xff\xff\x1c\xd0\xff\xff\x1c\xd0\xff\xff\x1c\xd0\xff\xff\x1c\xd0\xff\xff\x1c\xd0\xff\xff\x1c\xd0\xff\xff\x1c\xd0\xff\xff\xc4\xcf\xff\xff\xb4\xcf\xff\xff\xb4\xcf\xff\xff\x84\xcf\xff\xff\xb4\xcf\xff\xff\\xcf\xff\xff\xb4\xcf\xff\xff\x17\xce\xff\xff\xb4\xcf\xff\xff\xb4\xcf\xff\xff\xb4\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\xb4\xcf\xff\xff\xb4\xcf\xff\xff\xb4\xcf\xff\xff\xb4\xcf\xff\xff\xe7\xcd\xff\xff\x1c\xd0\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\xb4\xcf\xff\xff\x8c\xce\xff\xff\\xcf\xff\xff\xb4\xcf\xff\xff\\xcf\xff\xff\xb4\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\\xcf\xff\xff\x17\xcd\xff\xff\xb4\xcf\xff\xff\x17\xcd\xff\xff\x84\xcf\xff\xff\b\xcf\xff\xff\x18\xce\xff\xff\x18\xce\xff\xff\x18\xce\xff\xff\x18\xce\xff\xff\x18\xce\xff\xff\x18\xce\xff\xff\xf8\xce\xff\xffH\xd0\xff\xff0\xd0\xff\xff\xe0\xce\xff\xff \xd0\xff\xff\xc8\xce\xff\xff\b\xd0\xff\xff\x18\xce\xff\xff\x18\xce\xff\xff\x18\xce\xff\xff\x18\xce\xff\xff\x18\xce\xff\xff\x18\xce\xff\xff\x18\xce\xff\xff\x18\xce\xff\xff\x18\xce\xff\xff\x18\xce\xff\xff\x18\xce\xff\xff\x18\xce\xff\xff\x18\xce\xff\xff\x18\xce\xff\xff\x18\xce\xff\xff\x18\xce\xff\xff\x18\xce\xff\xff\x18\xce\xff\xff\xf0\xcf\xff\xff\xd8\xcf\xff\xff\xd8\xcf\xff\xff\xc0\xcf\xff\xff\xd8\xcf\xff\xff\xa8\xcf\xff\xff\xd8\xcf\xff\xff\x18\xcc\xff\xff\xd8\xcf\xff\xff\xd8\xcf\xff\xff\xd8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xd8\xcf\xff\xff\xd8\xcf\xff\xff\xd8\xcf\xff\xff\xd8\xcf\xff\xff\xe8\xcb\xff\xff\x18\xce\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xd8\xcf\xff\xff\xa8\xce\xff\xff\xa8\xcf\xff\xff\xd8\xcf\xff\xff\xa8\xcf\xff\xff\xd8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\xa8\xcf\xff\xff\x18\xcb\xff\xff\xd8\xcf\xff\xff\x18\xcb\xff\xff\xc0\xcf\xff\xff"
0x00003074      0fb6d3         movzx edx, bl
0x00003077      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000307b      4801c8         add rax, rcx
0x0000307e      ffe0           jmp rax
0x00003080      4531d2         xor r10d, r10d
0x00003083      4983fb01       cmp r11, 1
0x00003087      0f95c0         setne al
0x0000308a      4983fbff       cmp r11, 0xffffffffffffffff
0x0000308e      750c           jne 0x309c
0x00003090      488b442410     mov rax, qword [rsp + 0x10]
0x00003095      80780100       cmp byte [rax + 1], 0
0x00003099      0f95c0         setne al
0x0000309c      837c240802     cmp dword [rsp + 8], 2
0x000030a1      0f94c2         sete dl
0x000030a4      84c0           test al, al
0x000030a6      0f844c020000   je 0x32f8
0x000030ac      4531e4         xor r12d, r12d
0x000030af      31c0           xor eax, eax
0x000030b1      0f1f80000000.  nop dword [rax]
0x000030b8      807c240d01     cmp byte [rsp + 0xd], 1
0x000030bd      0f850f010000   jne 0x31d2
0x000030c3      84d2           test dl, dl
0x000030c5      0f8507010000   jne 0x31d2
0x000030cb      488b742420     mov rsi, qword [rsp + 0x20]
0x000030d0      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x000030d3      7414           je 0x30e9
0x000030d5      89da           mov edx, ebx
0x000030d7      c0ea05         shr dl, 5
0x000030da      0fb6d2         movzx edx, dl
0x000030dd      8b1496         mov edx, dword [rsi + rdx*4]
0x000030e0      0fa3da         bt edx, ebx
0x000030e3      0f824a010000   jb 0x3233
0x000030e9      4584d2         test r10b, r10b
0x000030ec      0f8541010000   jne 0x3233
0x000030f2      83f001         xor eax, 1
0x000030f5      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x000030f9      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x000030fc      84c0           test al, al
0x000030fe      7420           je 0x3120                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00003100      4d39fd         cmp r13, r15
0x00003103      7605           jbe 0x310a
0x00003105      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000310a      498d4701       lea rax, [r15 + 1]
0x0000310e      4939c5         cmp r13, rax
0x00003111      7606           jbe 0x3119
0x00003113      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003119      4983c702       add r15, 2
0x0000311d      4531c0         xor r8d, r8d
0x00003120      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00003123      7304           jae 0x3129                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00003125      43881c3e       mov byte [r14 + r15], bl
0x00003129      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x0000312e      4983c701       add r15, 1
0x00003132      b800000000     mov eax, 0
0x00003137      4584e4         test r12b, r12b
0x0000313a      0f44f8         cmove edi, eax
0x0000313d      40887c240e     mov byte [rsp + 0xe], dil
0x00003142      e931feffff     jmp 0x2f78
0x00003147      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00003150      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00003153      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00003157      83f802         cmp eax, 2
0x0000315a      0f84b8050000   je 0x3718
0x00003160      83f805         cmp eax, 5
0x00003163      0f846f050000   je 0x36d8
0x00003169      83f802         cmp eax, 2
0x0000316c      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003171      0f94c2         sete dl
0x00003174      4531e4         xor r12d, r12d
0x00003177      31c0           xor eax, eax
0x00003179      e93affffff     jmp 0x30b8
0x0000317e      6690           nop
0x00003180      4531d2         xor r10d, r10d
0x00003183      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00003188      0f8402050000   je 0x3690
0x0000318e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00003193      31d2           xor edx, edx
0x00003195      31c0           xor eax, eax
0x00003197      bb27000000     mov ebx, 0x27                           ; '''
0x0000319c      e917ffffff     jmp 0x30b8
0x000031a1      0f1f80000000.  nop dword [rax]
0x000031a8      ba09000000     mov edx, 9
0x000031ad      bb74000000     mov ebx, 0x74                           ; 't'
0x000031b2      837c240802     cmp dword [rsp + 8], 2
0x000031b7      0f94c0         sete al
0x000031ba      2244240f       and al, byte [rsp + 0xf]
0x000031be      0f854a010000   jne 0x330e
0x000031c4      807c240d00     cmp byte [rsp + 0xd], 0
0x000031c9      7565           jne 0x3230
0x000031cb      89d3           mov ebx, edx
0x000031cd      4531e4         xor r12d, r12d
0x000031d0      31c0           xor eax, eax
0x000031d2      807c240f00     cmp byte [rsp + 0xf], 0
0x000031d7      0f85eefeffff   jne 0x30cb
0x000031dd      e907ffffff     jmp 0x30e9                              ; ../coreutils-8.31/lib/quotearg.c:210
0x000031e2      660f1f440000   nop word [rax + rax]
0x000031e8      ba08000000     mov edx, 8
0x000031ed      bb62000000     mov ebx, 0x62                           ; 'b'
0x000031f2      ebd0           jmp 0x31c4
0x000031f4      0f1f4000       nop dword [rax]
0x000031f8      837c240802     cmp dword [rsp + 8], 2
0x000031fd      0f84cd030000   je 0x35d0
0x00003203      807c240d00     cmp byte [rsp + 0xd], 0
0x00003208      0f8412020000   je 0x3420
0x0000320e      807c240f00     cmp byte [rsp + 0xf], 0
0x00003213      0f8407020000   je 0x3420
0x00003219      48837c241800   cmp qword [rsp + 0x18], 0
0x0000321f      0f85b6030000   jne 0x35db
0x00003225      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000322a      660f1f440000   nop word [rax + rax]
0x00003230      4531e4         xor r12d, r12d
0x00003233      837c240802     cmp dword [rsp + 8], 2
0x00003238      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x0000323b      807c240f00     cmp byte [rsp + 0xf], 0
0x00003240      89d0           mov eax, edx
0x00003242      0f8550080000   jne 0x3a98
0x00003248      4489c0         mov eax, r8d
0x0000324b      83f001         xor eax, 1
0x0000324e      20d0           and al, dl
0x00003250      742f           je 0x3281
0x00003252      4d39fd         cmp r13, r15
0x00003255      7605           jbe 0x325c
0x00003257      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000325c      498d5701       lea rdx, [r15 + 1]
0x00003260      4939d5         cmp r13, rdx
0x00003263      7606           jbe 0x326b
0x00003265      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000326b      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x0000326f      4939d5         cmp r13, rdx
0x00003272      7606           jbe 0x327a
0x00003274      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000327a      4983c703       add r15, 3
0x0000327e      4189c0         mov r8d, eax
0x00003281      4d39fd         cmp r13, r15
0x00003284      7605           jbe 0x328b
0x00003286      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000328b      4983c701       add r15, 1
0x0000328f      4883c501       add rbp, 1
0x00003293      e988feffff     jmp 0x3120
0x00003298      0f1f84000000.  nop dword [rax + rax]
0x000032a0      807c240d00     cmp byte [rsp + 0xd], 0
0x000032a5      0f85c8010000   jne 0x3473
0x000032ab      31d2           xor edx, edx
0x000032ad      f644247801     test byte [rsp + 0x78], 1
0x000032b2      0f8413ffffff   je 0x31cb
0x000032b8      4883c501       add rbp, 1
0x000032bc      e9b7fcffff     jmp 0x2f78
0x000032c1      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x000032c8      837c240802     cmp dword [rsp + 8], 2
0x000032cd      0f94c2         sete dl
0x000032d0      31c0           xor eax, eax
0x000032d2      e9e1fdffff     jmp 0x30b8
0x000032d7      660f1f840000.  nop word [rax + rax]
0x000032e0      ba07000000     mov edx, 7
0x000032e5      bb61000000     mov ebx, 0x61                           ; 'a'
0x000032ea      e9d5feffff     jmp 0x31c4
0x000032ef      90             nop
0x000032f0      837c240802     cmp dword [rsp + 8], 2
0x000032f5      0f94c2         sete dl
0x000032f8      4885ed         test rbp, rbp
0x000032fb      0f85abfdffff   jne 0x30ac
0x00003301      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003306      20d0           and al, dl
0x00003308      0f84aafdffff   je 0x30b8
0x0000330e      4c89dd         mov rbp, r11
0x00003311      c74424080200.  mov dword [rsp + 8], 2
0x00003319      e9fb060000     jmp 0x3a19
0x0000331e      6690           nop
0x00003320      837c240802     cmp dword [rsp + 8], 2
0x00003325      0f94c2         sete dl
0x00003328      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x0000332b      ebd4           jmp 0x3301
0x0000332d      0f1f00         nop dword [rax]
0x00003330      837c240802     cmp dword [rsp + 8], 2
0x00003335      bb20000000     mov ebx, 0x20                           ; "@"
0x0000333a      0f94c2         sete dl
0x0000333d      ebc2           jmp 0x3301
0x0000333f      90             nop
0x00003340      ba0d000000     mov edx, 0xd
0x00003345      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000334a      e963feffff     jmp 0x31b2
0x0000334f      90             nop
0x00003350      ba0c000000     mov edx, 0xc
0x00003355      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000335a      e965feffff     jmp 0x31c4
0x0000335f      90             nop
0x00003360      ba0b000000     mov edx, 0xb
0x00003365      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000336a      e955feffff     jmp 0x31c4
0x0000336f      90             nop
0x00003370      ba0a000000     mov edx, 0xa
0x00003375      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x0000337a      e933feffff     jmp 0x31b2
0x0000337f      90             nop
0x00003380      4531d2         xor r10d, r10d
0x00003383      0f1f440000     nop dword [rax + rax]
0x00003388      48837c245801   cmp qword [rsp + 0x58], 1
0x0000338e      0f85a4030000   jne 0x3738
0x00003394      4c895c2438     mov qword [rsp + 0x38], r11
0x00003399      4488442430     mov byte [rsp + 0x30], r8b
0x0000339e      4488542428     mov byte [rsp + 0x28], r10b
0x000033a3      e838e4ffff     call sym.imp.__ctype_b_loc
0x000033a8      488b08         mov rcx, qword [rax]
0x000033ab      0fb6d3         movzx edx, bl
0x000033ae      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x000033b4      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x000033ba      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x000033bf      bf01000000     mov edi, 1
0x000033c4      0fb70451       movzx eax, word [rcx + rdx*2]
0x000033c8      66250040       and ax, 0x4000                          ; "R\xfc\xff\xff\x8bt$\bH\x89\xcf\xe8\x90\xed\xff\xffH\x89D$`\xe9g\xfc\xff\xff\x0f\xb6\$\x0fL\x89\u0749\u0408\$\r\xe9\xec\xf9\xff\xffH\x83\xec\bA\xb8\x05"
0x000033cc      410f95c4       setne r12b
0x000033d0      0f94c0         sete al
0x000033d3      2244240d       and al, byte [rsp + 0xd]
0x000033d7      84c0           test al, al
0x000033d9      0f8592090000   jne 0x3d71
0x000033df      837c240802     cmp dword [rsp + 8], 2
0x000033e4      0f94c2         sete dl
0x000033e7      e9ccfcffff     jmp 0x30b8
0x000033ec      0f1f4000       nop dword [rax]
0x000033f0      410fb619       movzx ebx, byte [r9]
0x000033f4      80fb7e         cmp bl, 0x7e
0x000033f7      7787           ja 0x3380
0x000033f9      488d0d683100.  lea rcx, [0x00006568]
0x00003400      0fb6d3         movzx edx, bl
0x00003403      48630491       movsxd rax, dword [rcx + rdx*4]
0x00003407      4801c8         add rax, rcx
0x0000340a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x0000340c      0f1f4000       nop dword [rax]
0x00003410      4531d2         xor r10d, r10d
0x00003413      807c240d00     cmp byte [rsp + 0xd], 0
0x00003418      0f85f0fdffff   jne 0x320e
0x0000341e      6690           nop
0x00003420      ba5c000000     mov edx, 0x5c                           ; '\'
0x00003425      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000342a      e995fdffff     jmp 0x31c4
0x0000342f      90             nop
0x00003430      ba0c000000     mov edx, 0xc
0x00003435      4531d2         xor r10d, r10d
0x00003438      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000343d      e982fdffff     jmp 0x31c4
0x00003442      660f1f440000   nop word [rax + rax]
0x00003448      ba0a000000     mov edx, 0xa
0x0000344d      4531d2         xor r10d, r10d
0x00003450      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00003455      e958fdffff     jmp 0x31b2
0x0000345a      660f1f440000   nop word [rax + rax]
0x00003460      bb61000000     mov ebx, 0x61                           ; 'a'
0x00003465      e9c6fdffff     jmp 0x3230
0x0000346a      660f1f440000   nop word [rax + rax]
0x00003470      4531d2         xor r10d, r10d
0x00003473      837c240802     cmp dword [rsp + 8], 2
0x00003478      0f94c2         sete dl
0x0000347b      807c240f00     cmp byte [rsp + 0xf], 0
0x00003480      0f85940b0000   jne 0x401a
0x00003486      4489c0         mov eax, r8d
0x00003489      4c89f9         mov rcx, r15
0x0000348c      83f001         xor eax, 1
0x0000348f      20d0           and al, dl
0x00003491      742d           je 0x34c0
0x00003493      4d39fd         cmp r13, r15
0x00003496      7605           jbe 0x349d
0x00003498      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000349d      498d4f01       lea rcx, [r15 + 1]
0x000034a1      4939cd         cmp r13, rcx
0x000034a4      7606           jbe 0x34ac
0x000034a6      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000034ac      498d4f02       lea rcx, [r15 + 2]
0x000034b0      4939cd         cmp r13, rcx
0x000034b3      0f8730060000   ja 0x3ae9
0x000034b9      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x000034bd      4189c0         mov r8d, eax
0x000034c0      4939cd         cmp r13, rcx
0x000034c3      7605           jbe 0x34ca
0x000034c5      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000034ca      837c240802     cmp dword [rsp + 8], 2
0x000034cf      4c8d7901       lea r15, [rcx + 1]
0x000034d3      0f8400060000   je 0x3ad9
0x000034d9      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x000034dd      4c39d8         cmp rax, r11
0x000034e0      7319           jae 0x34fb                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x000034e2      488b442410     mov rax, qword [rsp + 0x10]
0x000034e7      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x000034ec      88442428       mov byte [rsp + 0x28], al
0x000034f0      83e830         sub eax, 0x30
0x000034f3      3c09           cmp al, 9
0x000034f5      0f862e080000   jbe 0x3d29
0x000034fb      4489e0         mov eax, r12d
0x000034fe      bb30000000     mov ebx, 0x30                           ; '0'
0x00003503      4531e4         xor r12d, r12d
0x00003506      e9adfbffff     jmp 0x30b8                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x0000350b      0f1f440000     nop dword [rax + rax]
0x00003510      837c240802     cmp dword [rsp + 8], 2
0x00003515      4589d4         mov r12d, r10d
0x00003518      0f94c2         sete dl
0x0000351b      4531d2         xor r10d, r10d
0x0000351e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003520      e993fbffff     jmp 0x30b8                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00003525      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003528      837c240802     cmp dword [rsp + 8], 2
0x0000352d      0f94c2         sete dl
0x00003530      4531d2         xor r10d, r10d
0x00003533      e9c0fdffff     jmp 0x32f8
0x00003538      0f1f84000000.  nop dword [rax + rax]
0x00003540      837c240802     cmp dword [rsp + 8], 2
0x00003545      0f94c2         sete dl
0x00003548      4531d2         xor r10d, r10d
0x0000354b      4531e4         xor r12d, r12d
0x0000354e      e9aefdffff     jmp 0x3301
0x00003553      0f1f440000     nop dword [rax + rax]
0x00003558      837c240802     cmp dword [rsp + 8], 2
0x0000355d      4589d4         mov r12d, r10d
0x00003560      bb20000000     mov ebx, 0x20                           ; "@"
0x00003565      0f94c2         sete dl
0x00003568      4531d2         xor r10d, r10d
0x0000356b      e991fdffff     jmp 0x3301
0x00003570      ba0d000000     mov edx, 0xd
0x00003575      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00003578      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000357d      e930fcffff     jmp 0x31b2
0x00003582      660f1f440000   nop word [rax + rax]
0x00003588      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000358d      e99efcffff     jmp 0x3230
0x00003592      660f1f440000   nop word [rax + rax]
0x00003598      ba09000000     mov edx, 9
0x0000359d      4531d2         xor r10d, r10d
0x000035a0      bb74000000     mov ebx, 0x74                           ; 't'
0x000035a5      e908fcffff     jmp 0x31b2
0x000035aa      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x000035b0      bb62000000     mov ebx, 0x62                           ; 'b'
0x000035b5      e976fcffff     jmp 0x3230
0x000035ba      660f1f440000   nop word [rax + rax]
0x000035c0      4531d2         xor r10d, r10d
0x000035c3      e998faffff     jmp 0x3060
0x000035c8      0f1f84000000.  nop dword [rax + rax]
0x000035d0      807c240f00     cmp byte [rsp + 0xf], 0
0x000035d5      0f8565090000   jne 0x3f40
0x000035db      4883c501       add rbp, 1
0x000035df      4489c0         mov eax, r8d
0x000035e2      4531e4         xor r12d, r12d
0x000035e5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000035ea      e90dfbffff     jmp 0x30fc
0x000035ef      90             nop
0x000035f0      837c240802     cmp dword [rsp + 8], 2
0x000035f5      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000035fa      4589c4         mov r12d, r8d
0x000035fd      4c89dd         mov rbp, r11
0x00003600      0f94c2         sete dl
0x00003603      89d8           mov eax, ebx
0x00003605      4d85ff         test r15, r15
0x00003608      0f94c1         sete cl
0x0000360b      21d0           and eax, edx
0x0000360d      20c8           and al, cl
0x0000360f      0f85610a0000   jne 0x4076                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00003615      89d8           mov eax, ebx
0x00003617      83f001         xor eax, 1
0x0000361a      20c2           and dl, al
0x0000361c      0f846a090000   je 0x3f8c
0x00003622      807c247c00     cmp byte [rsp + 0x7c], 0
0x00003627      0f845d090000   je 0x3f8a
0x0000362d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00003632      0f85f5090000   jne 0x402d
0x00003638      4d85ed         test r13, r13
0x0000363b      0f94c0         sete al
0x0000363e      48837c245000   cmp qword [rsp + 0x50], 0
0x00003644      0f95c2         setne dl
0x00003647      20d0           and al, dl
0x00003649      0f841d0a0000   je 0x406c
0x0000364f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003654      488d1d822c00.  lea rbx, [0x000062dd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000365b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x0000365f      c74424080200.  mov dword [rsp + 8], 2
0x00003667      41bf01000000   mov r15d, 1
0x0000366d      48c744241801.  mov qword [rsp + 0x18], 1
0x00003676      c644240f00     mov byte [rsp + 0xf], 0
0x0000367b      48895c2448     mov qword [rsp + 0x48], rbx
0x00003680      8844247c       mov byte [rsp + 0x7c], al
0x00003684      e9daf8ffff     jmp 0x2f63
0x00003689      0f1f80000000.  nop dword [rax]
0x00003690      807c240f00     cmp byte [rsp + 0xf], 0
0x00003695      0f85a5080000   jne 0x3f40
0x0000369b      4d85ed         test r13, r13
0x0000369e      0f84fc030000   je 0x3aa0                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x000036a4      31d2           xor edx, edx
0x000036a6      48837c245000   cmp qword [rsp + 0x50], 0
0x000036ac      0f85ee030000   jne 0x3aa0                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x000036b2      4c896c2450     mov qword [rsp + 0x50], r13
0x000036b7      4983c703       add r15, 3
0x000036bb      31c0           xor eax, eax
0x000036bd      448864247c     mov byte [rsp + 0x7c], r12b
0x000036c2      4531c0         xor r8d, r8d
0x000036c5      4989d5         mov r13, rdx
0x000036c8      bb27000000     mov ebx, 0x27                           ; '''
0x000036cd      e917faffff     jmp 0x30e9
0x000036d2      660f1f440000   nop word [rax + rax]
0x000036d8      f644247804     test byte [rsp + 0x78], 4
0x000036dd      7421           je 0x3700
0x000036df      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x000036e3      4c39d9         cmp rcx, r11
0x000036e6      7318           jae 0x3700
0x000036e8      488b442410     mov rax, qword [rsp + 0x10]
0x000036ed      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x000036f2      0f848a070000   je 0x3e82
0x000036f8      0f1f84000000.  nop dword [rax + rax]
0x00003700      31d2           xor edx, edx
0x00003702      4531e4         xor r12d, r12d
0x00003705      31c0           xor eax, eax
0x00003707      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000370c      e9a7f9ffff     jmp 0x30b8
0x00003711      0f1f80000000.  nop dword [rax]
0x00003718      807c240f00     cmp byte [rsp + 0xf], 0
0x0000371d      0f851d080000   jne 0x3f40
0x00003723      4531e4         xor r12d, r12d
0x00003726      31c0           xor eax, eax
0x00003728      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000372d      e9b7f9ffff     jmp 0x30e9                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00003732      660f1f440000   nop word [rax + rax]
0x00003738      488d8424a000.  lea rax, [rsp + 0xa0]
0x00003740      4983fbff       cmp r11, 0xffffffffffffffff
0x00003744      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00003750      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00003755      752d           jne 0x3784
0x00003757      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000375c      4488442440     mov byte [rsp + 0x40], r8b
0x00003761      4488542438     mov byte [rsp + 0x38], r10b
0x00003766      4c894c2430     mov qword [rsp + 0x30], r9
0x0000376b      e820deffff     call sym.imp.strlen
0x00003770      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00003776      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x0000377c      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x0000377f      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003784      488d84249c00.  lea rax, [rsp + 0x9c]
0x0000378c      31c9           xor ecx, ecx
0x0000378e      885c247e       mov byte [rsp + 0x7e], bl
0x00003792      448844247d     mov byte [rsp + 0x7d], r8b
0x00003797      4889cb         mov rbx, rcx
0x0000379a      4c898c248800.  mov qword [rsp + 0x88], r9
0x000037a2      4889442438     mov qword [rsp + 0x38], rax
0x000037a7      448854247f     mov byte [rsp + 0x7f], r10b
0x000037ac      4c89bc248000.  mov qword [rsp + 0x80], r15
0x000037b4      4c89742440     mov qword [rsp + 0x40], r14
0x000037b9      4c896c2470     mov qword [rsp + 0x70], r13
0x000037be      4c895c2430     mov qword [rsp + 0x30], r11
0x000037c3      488b442410     mov rax, qword [rsp + 0x10]
0x000037c8      4c8d741d00     lea r14, [rbp + rbx]
0x000037cd      488b542430     mov rdx, qword [rsp + 0x30]
0x000037d2      488b4c2428     mov rcx, qword [rsp + 0x28]
0x000037d7      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000037dc      4e8d2c30       lea r13, [rax + r14]
0x000037e0      4c29f2         sub rdx, r14
0x000037e3      4c89ee         mov rsi, r13
0x000037e6      e865210000     call sym.rpl_mbrtowc
0x000037eb      4885c0         test rax, rax
0x000037ee      4989c7         mov r15, rax
0x000037f1      744e           je 0x3841
0x000037f3      4883f8ff       cmp rax, 0xffffffffffffffff
0x000037f7      0f8418060000   je 0x3e15
0x000037fd      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00003801      0f849a050000   je 0x3da1
0x00003807      837c240802     cmp dword [rsp + 8], 2
0x0000380c      0f94c0         sete al
0x0000380f      2244240f       and al, byte [rsp + 0xf]
0x00003813      0f8597010000   jne 0x39b0
0x00003819      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00003820      e8abdfffff     call sym.imp.iswprint
0x00003825      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000382a      85c0           test eax, eax
0x0000382c      b800000000     mov eax, 0
0x00003831      440f44e0       cmove r12d, eax
0x00003835      4c01fb         add rbx, r15
0x00003838      e883dfffff     call sym.imp.mbsinit
0x0000383d      85c0           test eax, eax
0x0000383f      7482           je 0x37c3
0x00003841      4489e2         mov edx, r12d
0x00003844      4889df         mov rdi, rbx
0x00003847      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000384d      83f201         xor edx, 1
0x00003850      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003855      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000385b      2254240d       and dl, byte [rsp + 0xd]
0x0000385f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003867      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000386c      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003871      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003876      4883ff01       cmp rdi, 1
0x0000387a      0f86fb050000   jbe 0x3e7b
0x00003880      4889f9         mov rcx, rdi
0x00003883      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00003885      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x0000388b      4801e9         add rcx, rbp
0x0000388e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003893      e9b6000000     jmp 0x394e
0x00003898      0f1f84000000.  nop dword [rax + rax]
0x000038a0      837c240802     cmp dword [rsp + 8], 2
0x000038a5      0f94c0         sete al
0x000038a8      4584c9         test r9b, r9b
0x000038ab      0f85af040000   jne 0x3d60
0x000038b1      4489c6         mov esi, r8d
0x000038b4      83f601         xor esi, 1
0x000038b7      4020f0         and al, sil
0x000038ba      742f           je 0x38eb                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x000038bc      4d39fd         cmp r13, r15
0x000038bf      7605           jbe 0x38c6
0x000038c1      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000038c6      498d7701       lea rsi, [r15 + 1]
0x000038ca      4939f5         cmp r13, rsi
0x000038cd      7606           jbe 0x38d5                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x000038cf      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000038d5      498d7702       lea rsi, [r15 + 2]
0x000038d9      4939f5         cmp r13, rsi
0x000038dc      7606           jbe 0x38e4
0x000038de      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000038e4      4983c703       add r15, 3
0x000038e8      4189c0         mov r8d, eax
0x000038eb      4d39fd         cmp r13, r15
0x000038ee      7605           jbe 0x38f5
0x000038f0      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000038f5      498d4701       lea rax, [r15 + 1]
0x000038f9      4939c5         cmp r13, rax
0x000038fc      760d           jbe 0x390b
0x000038fe      89d8           mov eax, ebx
0x00003900      c0e806         shr al, 6
0x00003903      83c030         add eax, 0x30
0x00003906      4388443e01     mov byte [r14 + r15 + 1], al
0x0000390b      498d4702       lea rax, [r15 + 2]
0x0000390f      4939c5         cmp r13, rax
0x00003912      7610           jbe 0x3924
0x00003914      89d8           mov eax, ebx
0x00003916      c0e803         shr al, 3
0x00003919      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x0000391c      83c030         add eax, 0x30
0x0000391f      4388443e02     mov byte [r14 + r15 + 2], al
0x00003924      83e307         and ebx, 7
0x00003927      4883c501       add rbp, 1
0x0000392b      4983c703       add r15, 3
0x0000392f      83c330         add ebx, 0x30
0x00003932      4839cd         cmp rbp, rcx
0x00003935      0f83e5f7ffff   jae 0x3120
0x0000393b      89d6           mov esi, edx
0x0000393d      4d39fd         cmp r13, r15
0x00003940      7604           jbe 0x3946
0x00003942      43881c3e       mov byte [r14 + r15], bl
0x00003946      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000394a      4983c701       add r15, 1
0x0000394e      84d2           test dl, dl
0x00003950      0f854affffff   jne 0x38a0
0x00003956      89f0           mov eax, esi
0x00003958      83f001         xor eax, 1
0x0000395b      4421c0         and eax, r8d
0x0000395e      4584d2         test r10b, r10b
0x00003961      740e           je 0x3971
0x00003963      4d39fd         cmp r13, r15
0x00003966      7605           jbe 0x396d
0x00003968      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000396d      4983c701       add r15, 1
0x00003971      4883c501       add rbp, 1
0x00003975      4839cd         cmp rbp, rcx
0x00003978      0f837ef7ffff   jae 0x30fc
0x0000397e      84c0           test al, al
0x00003980      0f84f8030000   je 0x3d7e
0x00003986      4d39fd         cmp r13, r15
0x00003989      7605           jbe 0x3990
0x0000398b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003990      498d4701       lea rax, [r15 + 1]
0x00003994      4939c5         cmp r13, rax
0x00003997      7606           jbe 0x399f
0x00003999      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000399f      4983c702       add r15, 2
0x000039a3      4531d2         xor r10d, r10d
0x000039a6      4531c0         xor r8d, r8d
0x000039a9      eb92           jmp 0x393d
0x000039ab      0f1f440000     nop dword [rax + rax]
0x000039b0      4983ff01       cmp r15, 1
0x000039b4      0f845ffeffff   je 0x3819
0x000039ba      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000039bf      4a8d0c3f       lea rcx, [rdi + r15]
0x000039c3      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x000039c8      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x000039cc      eb0f           jmp 0x39dd
0x000039ce      6690           nop
0x000039d0      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x000039d4      4939d0         cmp r8, rdx
0x000039d7      0f843cfeffff   je 0x3819
0x000039dd      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x000039e0      83e95b         sub ecx, 0x5b
0x000039e3      80f921         cmp cl, 0x21
0x000039e6      77e8           ja 0x39d0                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x000039e8      be01000000     mov esi, 1
0x000039ed      48d3e6         shl rsi, cl
0x000039f0      4889f1         mov rcx, rsi
0x000039f3      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x000039fd      4885f1         test rcx, rsi
0x00003a00      74ce           je 0x39d0
0x00003a02      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003a07      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003a0c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00003a11      c74424080200.  mov dword [rsp + 8], 2
0x00003a19      807c240d00     cmp byte [rsp + 0xd], 0
0x00003a1e      7410           je 0x3a30
0x00003a20      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00003a22      b804000000     mov eax, 4
0x00003a27      0f44442408     cmove eax, dword [rsp + 8]
0x00003a2c      89442408       mov dword [rsp + 8], eax
0x00003a30      4883ec08       sub rsp, 8
0x00003a34      4889e9         mov rcx, rbp
0x00003a37      4c89ee         mov rsi, r13
0x00003a3a      ff742468       push qword [rsp + 0x68]
0x00003a3e      ff742478       push qword [rsp + 0x78]
0x00003a42      4c89f7         mov rdi, r14
0x00003a45      6a00           push 0
0x00003a47      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00003a4f      448b442428     mov r8d, dword [rsp + 0x28]
0x00003a54      488b542430     mov rdx, qword [rsp + 0x30]
0x00003a59      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x00003a5d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00003a62      4883c420       add rsp, 0x20
0x00003a66      4989c7         mov r15, rax
0x00003a69      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00003a71      6448331c2528.  xor rbx, qword fs:[0x28]
0x00003a7a      4c89f8         mov rax, r15
0x00003a7d      0f8500060000   jne 0x4083
0x00003a83      4881c4b80000.  add rsp, 0xb8
0x00003a8a      5b             pop rbx
0x00003a8b      5d             pop rbp
0x00003a8c      415c           pop r12
0x00003a8e      415d           pop r13
0x00003a90      415e           pop r14
0x00003a92      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00003a94      c3             ret
0x00003a95      0f1f00         nop dword [rax]
0x00003a98      4c89dd         mov rbp, r11
0x00003a9b      e979ffffff     jmp 0x3a19
0x00003aa0      4d39fd         cmp r13, r15
0x00003aa3      7605           jbe 0x3aaa
0x00003aa5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003aaa      498d4701       lea rax, [r15 + 1]
0x00003aae      4939c5         cmp r13, rax
0x00003ab1      7606           jbe 0x3ab9
0x00003ab3      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00003ab9      498d4702       lea rax, [r15 + 2]
0x00003abd      4939c5         cmp r13, rax
0x00003ac0      0f86ec050000   jbe 0x40b2
0x00003ac6      4c89ea         mov rdx, r13
0x00003ac9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003acf      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003ad4      e9d9fbffff     jmp 0x36b2
0x00003ad9      4489e0         mov eax, r12d
0x00003adc      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00003ae1      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00003ae4      e900f6ffff     jmp 0x30e9                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00003ae9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003aef      e9c5f9ffff     jmp 0x34b9
0x00003af4      85db           test ebx, ebx
0x00003af6      0f8527f4ffff   jne 0x2f23
0x00003afc      c644240d01     mov byte [rsp + 0xd], 1
0x00003b01      4d85ed         test r13, r13
0x00003b04      0f8590050000   jne 0x409a
0x00003b0a      488d05cc2700.  lea rax, [0x000062dd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003b11      48c744245000.  mov qword [rsp + 0x50], 0
0x00003b1a      c644240e01     mov byte [rsp + 0xe], 1
0x00003b1f      c644247c00     mov byte [rsp + 0x7c], 0
0x00003b24      4531e4         xor r12d, r12d
0x00003b27      c644240f00     mov byte [rsp + 0xf], 0
0x00003b2c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003b35      4889442448     mov qword [rsp + 0x48], rax
0x00003b3a      41bf01000000   mov r15d, 1
0x00003b40      c74424080200.  mov dword [rsp + 8], 2
0x00003b48      e916f4ffff     jmp 0x2f63                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x00003b4d      0f1f00         nop dword [rax]
0x00003b50      85db           test ebx, ebx
0x00003b52      0f85f5030000   jne 0x3f4d
0x00003b58      4d85ed         test r13, r13
0x00003b5b      0f8425020000   je 0x3d86
0x00003b61      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00003b65      c644240e01     mov byte [rsp + 0xe], 1
0x00003b6a      4531e4         xor r12d, r12d
0x00003b6d      c644247c00     mov byte [rsp + 0x7c], 0
0x00003b72      48c744245000.  mov qword [rsp + 0x50], 0
0x00003b7b      488d05592700.  lea rax, str.l______l                   ; 0x62db ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003b82      c644240f00     mov byte [rsp + 0xf], 0
0x00003b87      c644240d01     mov byte [rsp + 0xd], 1
0x00003b8c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003b95      41bf01000000   mov r15d, 1
0x00003b9b      4889442448     mov qword [rsp + 0x48], rax
0x00003ba0      e9bef3ffff     jmp 0x2f63
0x00003ba5      488d052f2700.  lea rax, str.l______l                   ; 0x62db ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003bac      c644240e01     mov byte [rsp + 0xe], 1
0x00003bb1      c644247c00     mov byte [rsp + 0x7c], 0
0x00003bb6      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00003bb9      48c744245000.  mov qword [rsp + 0x50], 0
0x00003bc2      c644240f01     mov byte [rsp + 0xf], 1
0x00003bc7      c644240d01     mov byte [rsp + 0xd], 1
0x00003bcc      48c744241801.  mov qword [rsp + 0x18], 1
0x00003bd5      4531ff         xor r15d, r15d
0x00003bd8      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x00003bdd      c74424080500.  mov dword [rsp + 8], 5
0x00003be5      e979f3ffff     jmp 0x2f63
0x00003bea      c644240e01     mov byte [rsp + 0xe], 1
0x00003bef      c644247c00     mov byte [rsp + 0x7c], 0
0x00003bf4      4531e4         xor r12d, r12d
0x00003bf7      48c744245000.  mov qword [rsp + 0x50], 0
0x00003c00      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00003c05      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00003c08      c644240d01     mov byte [rsp + 0xd], 1
0x00003c0d      48c744241800.  mov qword [rsp + 0x18], 0
0x00003c16      48c744244800.  mov qword [rsp + 0x48], 0
0x00003c1f      e93ff3ffff     jmp 0x2f63
0x00003c24      837c24080a     cmp dword [rsp + 8], 0xa
0x00003c29      7456           je 0x3c81
0x00003c2b      488d35ad2600.  lea rsi, [0x000062df]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00003c32      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00003c34      ba05000000     mov edx, 5
0x00003c39      e832d9ffff     call sym.imp.dcgettext
0x00003c3e      4889c1         mov rcx, rax
0x00003c41      4889442468     mov qword [rsp + 0x68], rax
0x00003c46      488d05922600.  lea rax, [0x000062df]                   ; "`"
0x00003c4d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00003c50      0f8498030000   je 0x3fee
0x00003c56      488d35802600.  lea rsi, [0x000062dd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003c5d      31ff           xor edi, edi
0x00003c5f      ba05000000     mov edx, 5
0x00003c64      e807d9ffff     call sym.imp.dcgettext
0x00003c69      4889c1         mov rcx, rax
0x00003c6c      4889442460     mov qword [rsp + 0x60], rax
0x00003c71      488d05652600.  lea rax, [0x000062dd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003c78      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x00003c7b      0f8483030000   je 0x4004
0x00003c81      4531ff         xor r15d, r15d
0x00003c84      85db           test ebx, ebx
0x00003c86      0f84c1010000   je 0x3e4d
0x00003c8c      85db           test ebx, ebx
0x00003c8e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00003c93      0f9544240f     setne byte [rsp + 0xf]
0x00003c98      4531e4         xor r12d, r12d
0x00003c9b      4889df         mov rdi, rbx
0x00003c9e      e8edd8ffff     call sym.imp.strlen
0x00003ca3      48895c2448     mov qword [rsp + 0x48], rbx
0x00003ca8      4889442418     mov qword [rsp + 0x18], rax
0x00003cad      c644240e01     mov byte [rsp + 0xe], 1
0x00003cb2      c644247c00     mov byte [rsp + 0x7c], 0
0x00003cb7      48c744245000.  mov qword [rsp + 0x50], 0
0x00003cc0      c644240d01     mov byte [rsp + 0xd], 1
0x00003cc5      e999f2ffff     jmp 0x2f63
0x00003cca      c644240e01     mov byte [rsp + 0xe], 1
0x00003ccf      c644247c00     mov byte [rsp + 0x7c], 0
0x00003cd4      4531e4         xor r12d, r12d
0x00003cd7      48c744245000.  mov qword [rsp + 0x50], 0
0x00003ce0      c644240f00     mov byte [rsp + 0xf], 0
0x00003ce5      4531ff         xor r15d, r15d
0x00003ce8      c644240d00     mov byte [rsp + 0xd], 0
0x00003ced      48c744241800.  mov qword [rsp + 0x18], 0
0x00003cf6      48c744244800.  mov qword [rsp + 0x48], 0
0x00003cff      e95ff2ffff     jmp 0x2f63
0x00003d04      c644240e01     mov byte [rsp + 0xe], 1
0x00003d09      c644247c00     mov byte [rsp + 0x7c], 0
0x00003d0e      4531e4         xor r12d, r12d
0x00003d11      48c744245000.  mov qword [rsp + 0x50], 0
0x00003d1a      c644240f01     mov byte [rsp + 0xf], 1
0x00003d1f      c644240d01     mov byte [rsp + 0xd], 1
0x00003d24      e91af2ffff     jmp 0x2f43
0x00003d29      4d39fd         cmp r13, r15
0x00003d2c      7605           jbe 0x3d33
0x00003d2e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00003d33      488d4102       lea rax, [rcx + 2]
0x00003d37      4939c5         cmp r13, rax
0x00003d3a      7606           jbe 0x3d42
0x00003d3c      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00003d42      4489e0         mov eax, r12d
0x00003d45      4c8d7903       lea r15, [rcx + 3]
0x00003d49      4531e4         xor r12d, r12d
0x00003d4c      bb30000000     mov ebx, 0x30                           ; '0'
0x00003d51      e962f3ffff     jmp 0x30b8
0x00003d56      662e0f1f8400.  nop word cs:[rax + rax]
0x00003d60      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003d65      4c89dd         mov rbp, r11
0x00003d68      885c240d       mov byte [rsp + 0xd], bl
0x00003d6c      e9a8fcffff     jmp 0x3a19
0x00003d71      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003d76      4531e4         xor r12d, r12d
0x00003d79      e902fbffff     jmp 0x3880
0x00003d7e      4531d2         xor r10d, r10d
0x00003d81      e9b7fbffff     jmp 0x393d
0x00003d86      48c744245000.  mov qword [rsp + 0x50], 0
0x00003d8f      c644240e01     mov byte [rsp + 0xe], 1
0x00003d94      4531e4         xor r12d, r12d
0x00003d97      c644247c00     mov byte [rsp + 0x7c], 0
0x00003d9c      e9dafdffff     jmp 0x3b7b
0x00003da1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003da6      4c89f6         mov rsi, r14
0x00003da9      4c89e9         mov rcx, r13
0x00003dac      4889d8         mov rax, rbx
0x00003daf      4889df         mov rdi, rbx
0x00003db2      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003db8      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003dbd      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00003dc5      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00003dc8      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00003dce      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003dd6      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003ddb      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003de0      7326           jae 0x3e08
0x00003de2      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00003de5      7510           jne 0x3df7
0x00003de7      eb1f           jmp 0x3e08
0x00003de9      0f1f80000000.  nop dword [rax]
0x00003df0      41803c0100     cmp byte [r9 + rax], 0
0x00003df5      740e           je 0x3e05
0x00003df7      4883c001       add rax, 1
0x00003dfb      488d540500     lea rdx, [rbp + rax]
0x00003e00      4939d3         cmp r11, rdx
0x00003e03      77eb           ja 0x3df0
0x00003e05      4889c7         mov rdi, rax
0x00003e08      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003e0d      4531e4         xor r12d, r12d
0x00003e10      e961faffff     jmp 0x3876
0x00003e15      4889df         mov rdi, rbx
0x00003e18      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003e1e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003e23      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00003e29      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003e31      4531e4         xor r12d, r12d
0x00003e34      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003e39      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003e3e      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003e43      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003e48      e929faffff     jmp 0x3876
0x00003e4d      488b542468     mov rdx, qword [rsp + 0x68]
0x00003e52      0fb602         movzx eax, byte [rdx]
0x00003e55      84c0           test al, al
0x00003e57      0f842ffeffff   je 0x3c8c
0x00003e5d      0f1f00         nop dword [rax]
0x00003e60      4d39fd         cmp r13, r15
0x00003e63      7604           jbe 0x3e69
0x00003e65      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00003e69      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x00003e6d      420fb6043a     movzx eax, byte [rdx + r15]
0x00003e72      84c0           test al, al
0x00003e74      75ea           jne 0x3e60
0x00003e76      e911feffff     jmp 0x3c8c
0x00003e7b      89d0           mov eax, edx
0x00003e7d      e955f5ffff     jmp 0x33d7
0x00003e82      0fb61c08       movzx ebx, byte [rax + rcx]
0x00003e86      80fb3e         cmp bl, 0x3e
0x00003e89      0f8771f8ffff   ja 0x3700
0x00003e8f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00003e99      480fa3d8       bt rax, rbx
0x00003e9d      0f835df8ffff   jae 0x3700
0x00003ea3      807c240f00     cmp byte [rsp + 0xf], 0
0x00003ea8      0f85e4010000   jne 0x4092                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x00003eae      4d39fd         cmp r13, r15
0x00003eb1      7605           jbe 0x3eb8
0x00003eb3      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00003eb8      498d4701       lea rax, [r15 + 1]
0x00003ebc      4939c5         cmp r13, rax
0x00003ebf      7606           jbe 0x3ec7
0x00003ec1      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003ec7      498d4702       lea rax, [r15 + 2]
0x00003ecb      4939c5         cmp r13, rax
0x00003ece      7606           jbe 0x3ed6
0x00003ed0      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003ed6      498d4703       lea rax, [r15 + 3]
0x00003eda      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x00003edd      7606           jbe 0x3ee5
0x00003edf      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00003ee5      4983c704       add r15, 4
0x00003ee9      31d2           xor edx, edx
0x00003eeb      4531e4         xor r12d, r12d
0x00003eee      31c0           xor eax, eax
0x00003ef0      4889cd         mov rbp, rcx
0x00003ef3      e9c0f1ffff     jmp 0x30b8
0x00003ef8      85db           test ebx, ebx
0x00003efa      0f8488010000   je 0x4088
0x00003f00      488d05d62300.  lea rax, [0x000062dd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003f07      c644240e01     mov byte [rsp + 0xe], 1
0x00003f0c      c644247c00     mov byte [rsp + 0x7c], 0
0x00003f11      4531e4         xor r12d, r12d
0x00003f14      48c744245000.  mov qword [rsp + 0x50], 0
0x00003f1d      c644240f01     mov byte [rsp + 0xf], 1
0x00003f22      c644240d00     mov byte [rsp + 0xd], 0
0x00003f27      48c744241801.  mov qword [rsp + 0x18], 1
0x00003f30      4531ff         xor r15d, r15d
0x00003f33      4889442448     mov qword [rsp + 0x48], rax
0x00003f38      e926f0ffff     jmp 0x2f63
0x00003f3d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00003f40      4c89dd         mov rbp, r11
0x00003f43      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003f48      e9ccfaffff     jmp 0x3a19
0x00003f4d      488d05872300.  lea rax, str.l______l                   ; 0x62db ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003f54      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00003f59      c644247c00     mov byte [rsp + 0x7c], 0
0x00003f5e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00003f61      48c744245000.  mov qword [rsp + 0x50], 0
0x00003f6a      c644240f01     mov byte [rsp + 0xf], 1
0x00003f6f      c644240d01     mov byte [rsp + 0xd], 1
0x00003f74      48c744241801.  mov qword [rsp + 0x18], 1
0x00003f7d      4531ff         xor r15d, r15d
0x00003f80      4889442448     mov qword [rsp + 0x48], rax
0x00003f85      e9d9efffff     jmp 0x2f63
0x00003f8a      89d0           mov eax, edx
0x00003f8c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00003f91      4885db         test rbx, rbx
0x00003f94      742c           je 0x3fc2
0x00003f96      84c0           test al, al
0x00003f98      7428           je 0x3fc2
0x00003f9a      0fb60b         movzx ecx, byte [rbx]
0x00003f9d      4889d8         mov rax, rbx
0x00003fa0      84c9           test cl, cl
0x00003fa2      741e           je 0x3fc2
0x00003fa4      4c89fa         mov rdx, r15
0x00003fa7      4c29f8         sub rax, r15
0x00003faa      4939d5         cmp r13, rdx
0x00003fad      7604           jbe 0x3fb3
0x00003faf      41880c16       mov byte [r14 + rdx], cl
0x00003fb3      4883c201       add rdx, 1
0x00003fb7      0fb60c10       movzx ecx, byte [rax + rdx]
0x00003fbb      84c9           test cl, cl
0x00003fbd      75eb           jne 0x3faa
0x00003fbf      4989d7         mov r15, rdx
0x00003fc2      4d39fd         cmp r13, r15
0x00003fc5      0f869efaffff   jbe 0x3a69
0x00003fcb      43c6043e00     mov byte [r14 + r15], 0
0x00003fd0      e994faffff     jmp 0x3a69
0x00003fd5      837c240802     cmp dword [rsp + 8], 2
0x00003fda      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003fdf      4c89dd         mov rbp, r11
0x00003fe2      0f94c0         sete al
0x00003fe5      885c240d       mov byte [rsp + 0xd], bl
0x00003fe9      e92bfaffff     jmp 0x3a19
0x00003fee      8b742408       mov esi, dword [rsp + 8]
0x00003ff2      4889cf         mov rdi, rcx
0x00003ff5      e8a6edffff     call sym.gettext_quote.part.1
0x00003ffa      4889442468     mov qword [rsp + 0x68], rax
0x00003fff      e952fcffff     jmp 0x3c56
0x00004004      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00004008      4889cf         mov rdi, rcx
0x0000400b      e890edffff     call sym.gettext_quote.part.1
0x00004010      4889442460     mov qword [rsp + 0x60], rax
0x00004015      e967fcffff     jmp 0x3c81
0x0000401a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000401f      4c89dd         mov rbp, r11
0x00004022      89d0           mov eax, edx
0x00004024      885c240d       mov byte [rsp + 0xd], bl
0x00004028      e9ecf9ffff     jmp 0x3a19
0x0000402d      4883ec08       sub rsp, 8
0x00004031      41b805000000   mov r8d, 5
0x00004037      4c89d9         mov rcx, r11
0x0000403a      ff742468       push qword [rsp + 0x68]
0x0000403e      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00004042      4c89f7         mov rdi, r14
0x00004045      ff742438       push qword [rsp + 0x38]
0x00004049      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00004051      488b542430     mov rdx, qword [rsp + 0x30]
0x00004056      488b742470     mov rsi, qword [rsp + 0x70]
0x0000405b      e830eeffff     call sym.quotearg_buffer_restyled
0x00004060      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00004064      4989c7         mov r15, rax
0x00004067      e9fdf9ffff     jmp 0x3a69
0x0000406c      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00004071      e916ffffff     jmp 0x3f8c
0x00004076      c74424080200.  mov dword [rsp + 8], 2
0x0000407e      e996f9ffff     jmp 0x3a19
0x00004083      e818d5ffff     call sym.imp.__stack_chk_fail
0x00004088      c644240d00     mov byte [rsp + 0xd], 0
0x0000408d      e96ffaffff     jmp 0x3b01
0x00004092      4c89dd         mov rbp, r11
0x00004095      e996f9ffff     jmp 0x3a30
0x0000409a      c644240e01     mov byte [rsp + 0xe], 1
0x0000409f      31c0           xor eax, eax
0x000040a1      4531e4         xor r12d, r12d
0x000040a4      48c744245000.  mov qword [rsp + 0x50], 0
0x000040ad      e9a2f5ffff     jmp 0x3654
0x000040b2      4c89ea         mov rdx, r13
0x000040b5      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000040ba      e9f3f5ffff     jmp 0x36b2
0x000040bf      e81cd4ffff     call sym.imp.abort
0x000040c4      6690           nop
0x000040c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x000040d0      4157           push r15
0x000040d2      4156           push r14
0x000040d4      4c63ff         movsxd r15, edi
0x000040d7      4155           push r13
0x000040d9      4154           push r12
0x000040db      4989d6         mov r14, rdx
0x000040de      55             push rbp
0x000040df      53             push rbx
0x000040e0      4889cd         mov rbp, rcx
0x000040e3      4883ec28       sub rsp, 0x28
0x000040e7      4889742408     mov qword [rsp + 8], rsi
0x000040ec      e8ffd3ffff     call sym.imp.__errno_location
0x000040f1      4989c5         mov r13, rax
0x000040f4      8b00           mov eax, dword [rax]
0x000040f6      4585ff         test r15d, r15d
0x000040f9      488b1d604f20.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x209060:8]=0x209070 obj.slotvec0 ; "p\x90 "
0x00004100      89442418       mov dword [rsp + 0x18], eax
0x00004104      0f8867010000   js 0x4271
0x0000410a      44393d474f20.  cmp dword [obj.nslots], r15d            ; [0x209058:4]=1
0x00004111      7f62           jg 0x4175
0x00004113      4181ffffffff.  cmp r15d, 0x7fffffff
0x0000411a      0f8456010000   je 0x4276
0x00004120      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004124      488d05454f20.  lea rax, obj.slotvec0                   ; 0x209070
0x0000412b      4963f4         movsxd rsi, r12d
0x0000412e      48c1e604       shl rsi, 4
0x00004132      4839c3         cmp rbx, rax
0x00004135      0f8415010000   je 0x4250
0x0000413b      4889df         mov rdi, rbx
0x0000413e      e86d0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00004143      4889c3         mov rbx, rax
0x00004146      488905134f20.  mov qword [obj.slotvec], rax            ; [0x209060:8]=0x209070 obj.slotvec0 ; "p\x90 "
0x0000414d      48633d044f20.  movsxd rdi, dword [obj.nslots]          ; [0x209058:4]=1
0x00004154      4489e2         mov edx, r12d
0x00004157      31f6           xor esi, esi
0x00004159      29fa           sub edx, edi
0x0000415b      48c1e704       shl rdi, 4
0x0000415f      4863d2         movsxd rdx, edx
0x00004162      4801df         add rdi, rbx
0x00004165      48c1e204       shl rdx, 4
0x00004169      e8c2d4ffff     call sym.imp.memset
0x0000416e      448925e34e20.  mov dword [obj.nslots], r12d            ; [0x209058:4]=1
0x00004175      8b4504         mov eax, dword [rbp + 4]
0x00004178      49c1e704       shl r15, 4
0x0000417c      4883ec08       sub rsp, 8
0x00004180      4c01fb         add rbx, r15
0x00004183      4c8d7d08       lea r15, [rbp + 8]
0x00004187      448b4500       mov r8d, dword [rbp]
0x0000418b      4c8b1b         mov r11, qword [rbx]
0x0000418e      4c8b6308       mov r12, qword [rbx + 8]
0x00004192      4c89f1         mov rcx, r14
0x00004195      83c801         or eax, 1
0x00004198      89442424       mov dword [rsp + 0x24], eax
0x0000419c      ff7530         push qword [rbp + 0x30]
0x0000419f      4189c1         mov r9d, eax
0x000041a2      ff7528         push qword [rbp + 0x28]
0x000041a5      4157           push r15
0x000041a7      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x000041aa      488b542428     mov rdx, qword [rsp + 0x28]
0x000041af      4c89e7         mov rdi, r12
0x000041b2      4c895c2430     mov qword [rsp + 0x30], r11
0x000041b7      e8d4ecffff     call sym.quotearg_buffer_restyled
0x000041bc      4883c420       add rsp, 0x20
0x000041c0      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x000041c5      4939c3         cmp r11, rax
0x000041c8      7767           ja 0x4231
0x000041ca      488d7001       lea rsi, [rax + 1]
0x000041ce      488d052b4f20.  lea rax, obj.slot0                      ; 0x209100
0x000041d5      4939c4         cmp r12, rax
0x000041d8      488933         mov qword [rbx], rsi
0x000041db      7412           je 0x41ef
0x000041dd      4c89e7         mov rdi, r12
0x000041e0      4889742410     mov qword [rsp + 0x10], rsi
0x000041e5      e8e6d2ffff     call sym.imp.free
0x000041ea      488b742410     mov rsi, qword [rsp + 0x10]
0x000041ef      4889f7         mov rdi, rsi
0x000041f2      4889742410     mov qword [rsp + 0x10], rsi
0x000041f7      e8540e0000     call sym.xmalloc
0x000041fc      4883ec08       sub rsp, 8
0x00004200      48894308       mov qword [rbx + 8], rax
0x00004204      448b4500       mov r8d, dword [rbp]
0x00004208      ff7530         push qword [rbp + 0x30]
0x0000420b      ff7528         push qword [rbp + 0x28]
0x0000420e      4c89f1         mov rcx, r14
0x00004211      4157           push r15
0x00004213      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00004218      4889c7         mov rdi, rax
0x0000421b      488b542428     mov rdx, qword [rsp + 0x28]
0x00004220      488b742430     mov rsi, qword [rsp + 0x30]
0x00004225      4989c4         mov r12, rax
0x00004228      e863ecffff     call sym.quotearg_buffer_restyled
0x0000422d      4883c420       add rsp, 0x20
0x00004231      8b442418       mov eax, dword [rsp + 0x18]
0x00004235      41894500       mov dword [r13], eax
0x00004239      4883c428       add rsp, 0x28
0x0000423d      4c89e0         mov rax, r12
0x00004240      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00004241      5d             pop rbp
0x00004242      415c           pop r12
0x00004244      415d           pop r13
0x00004246      415e           pop r14
0x00004248      415f           pop r15
0x0000424a      c3             ret
0x0000424b      0f1f440000     nop dword [rax + rax]
0x00004250      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00004252      e8590e0000     call sym.xrealloc
0x00004257      660f6f05114e.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x0000425f      4889c3         mov rbx, rax
0x00004262      488905f74d20.  mov qword [obj.slotvec], rax            ; [0x209060:8]=0x209070 obj.slotvec0 ; "p\x90 "
0x00004269      0f1100         movups xmmword [rax], xmm0
0x0000426c      e9dcfeffff     jmp 0x414d
0x00004271      e86ad2ffff     call sym.imp.abort
0x00004276      e825100000     call sym.xalloc_die
0x0000427b      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00004280      4154           push r12
0x00004282      55             push rbp
0x00004283      53             push rbx
0x00004284      4889fb         mov rbx, rdi
0x00004287      e864d2ffff     call sym.imp.__errno_location
0x0000428c      448b20         mov r12d, dword [rax]
0x0000428f      4889c5         mov rbp, rax
0x00004292      488d05674f20.  lea rax, obj.default_quoting_options    ; 0x209200
0x00004299      4885db         test rbx, rbx
0x0000429c      be38000000     mov esi, 0x38                           ; '8'
0x000042a1      480f44d8       cmove rbx, rax
0x000042a5      4889df         mov rdi, rbx
0x000042a8      e8a30f0000     call sym.xmemdup
0x000042ad      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x000042b1      5b             pop rbx
0x000042b2      5d             pop rbp
0x000042b3      415c           pop r12
0x000042b5      c3             ret
0x000042b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x000042c0      488d05394f20.  lea rax, obj.default_quoting_options    ; 0x209200
0x000042c7      4885ff         test rdi, rdi
0x000042ca      480f44f8       cmove rdi, rax
0x000042ce      8b07           mov eax, dword [rdi]
0x000042d0      c3             ret
0x000042d1      0f1f440000     nop dword [rax + rax]
0x000042d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x000042e0      488d05194f20.  lea rax, obj.default_quoting_options    ; 0x209200
0x000042e7      4885ff         test rdi, rdi
0x000042ea      480f44f8       cmove rdi, rax
0x000042ee      8937           mov dword [rdi], esi
0x000042f0      c3             ret
0x000042f1      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x000042f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00004300      488d05f94e20.  lea rax, obj.default_quoting_options    ; 0x209200
0x00004307      4885ff         test rdi, rdi
0x0000430a      89f1           mov ecx, esi
0x0000430c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00004310      89f0           mov eax, esi
0x00004312      83e11f         and ecx, 0x1f
0x00004315      c0e805         shr al, 5
0x00004318      0fb6c0         movzx eax, al
0x0000431b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00004320      8b37           mov esi, dword [rdi]
0x00004322      89f0           mov eax, esi
0x00004324      d3e8           shr eax, cl
0x00004326      31c2           xor edx, eax
0x00004328      83e001         and eax, 1
0x0000432b      83e201         and edx, 1
0x0000432e      d3e2           shl edx, cl
0x00004330      31f2           xor edx, esi
0x00004332      8917           mov dword [rdi], edx
0x00004334      c3             ret
0x00004335      90             nop
0x00004336      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00004340      488d05b94e20.  lea rax, obj.default_quoting_options    ; 0x209200
0x00004347      4885ff         test rdi, rdi
0x0000434a      480f44f8       cmove rdi, rax
0x0000434e      8b4704         mov eax, dword [rdi + 4]
0x00004351      897704         mov dword [rdi + 4], esi
0x00004354      c3             ret
0x00004355      90             nop
0x00004356      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00004360      488d05994e20.  lea rax, obj.default_quoting_options    ; 0x209200
0x00004367      4885ff         test rdi, rdi
0x0000436a      480f44f8       cmove rdi, rax
0x0000436e      4885f6         test rsi, rsi
0x00004371      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00004377      740e           je 0x4387
0x00004379      4885d2         test rdx, rdx
0x0000437c      7409           je 0x4387
0x0000437e      48897728       mov qword [rdi + 0x28], rsi
0x00004382      48895730       mov qword [rdi + 0x30], rdx
0x00004386      c3             ret
0x00004387      4883ec08       sub rsp, 8
0x0000438b      e850d1ffff     call sym.imp.abort
;-- quotearg_buffer:
0x00004390      4157           push r15
0x00004392      4156           push r14
0x00004394      488d05654e20.  lea rax, obj.default_quoting_options    ; 0x209200
0x0000439b      4155           push r13
0x0000439d      4154           push r12
0x0000439f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x000043a2      55             push rbp
0x000043a3      53             push rbx
0x000043a4      4c89c3         mov rbx, r8
0x000043a7      4989f6         mov r14, rsi
0x000043aa      4989d7         mov r15, rdx
0x000043ad      4883ec18       sub rsp, 0x18
0x000043b1      4d85c0         test r8, r8
0x000043b4      480f44d8       cmove rbx, rax
0x000043b8      48894c2408     mov qword [rsp + 8], rcx
0x000043bd      e82ed1ffff     call sym.imp.__errno_location
0x000043c2      448b20         mov r12d, dword [rax]
0x000043c5      4889c5         mov rbp, rax
0x000043c8      488d4308       lea rax, [rbx + 8]
0x000043cc      4883ec08       sub rsp, 8
0x000043d0      448b4b04       mov r9d, dword [rbx + 4]
0x000043d4      ff7330         push qword [rbx + 0x30]
0x000043d7      448b03         mov r8d, dword [rbx]
0x000043da      ff7328         push qword [rbx + 0x28]
0x000043dd      4c89fa         mov rdx, r15
0x000043e0      50             push rax
0x000043e1      488b4c2428     mov rcx, qword [rsp + 0x28]
0x000043e6      4c89f6         mov rsi, r14
0x000043e9      4c89ef         mov rdi, r13
0x000043ec      e89feaffff     call sym.quotearg_buffer_restyled
0x000043f1      44896500       mov dword [rbp], r12d
0x000043f5      4883c438       add rsp, 0x38
0x000043f9      5b             pop rbx
0x000043fa      5d             pop rbp
0x000043fb      415c           pop r12
0x000043fd      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x000043ff      415e           pop r14
0x00004401      415f           pop r15
0x00004403      c3             ret
0x00004404      6690           nop
0x00004406      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00004410      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00004412      4156           push r14
0x00004414      488d05e54d20.  lea rax, obj.default_quoting_options    ; 0x209200
0x0000441b      4155           push r13
0x0000441d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x0000441f      4989d4         mov r12, rdx
0x00004422      55             push rbp
0x00004423      53             push rbx
0x00004424      4889cb         mov rbx, rcx
0x00004427      4989fe         mov r14, rdi
0x0000442a      4989f7         mov r15, rsi
0x0000442d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00004431      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00004434      480f44d8       cmove rbx, rax
0x00004438      31ed           xor ebp, ebp
0x0000443a      e8b1d0ffff     call sym.imp.__errno_location
0x0000443f      4d85e4         test r12, r12
0x00004442      4989c5         mov r13, rax
0x00004445      8b00           mov eax, dword [rax]
0x00004447      400f94c5       sete bpl
0x0000444b      0b6b04         or ebp, dword [rbx + 4]
0x0000444e      4c8d5308       lea r10, [rbx + 8]
0x00004452      4883ec08       sub rsp, 8
0x00004456      448b03         mov r8d, dword [rbx]
0x00004459      4c89f9         mov rcx, r15
0x0000445c      89442414       mov dword [rsp + 0x14], eax
0x00004460      ff7330         push qword [rbx + 0x30]
0x00004463      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00004466      ff7328         push qword [rbx + 0x28]
0x00004469      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x0000446b      31f6           xor esi, esi
0x0000446d      4189e9         mov r9d, ebp
0x00004470      31ff           xor edi, edi
0x00004472      4c89542440     mov qword [rsp + 0x40], r10
0x00004477      e814eaffff     call sym.quotearg_buffer_restyled
0x0000447c      488d7001       lea rsi, [rax + 1]
0x00004480      4889442448     mov qword [rsp + 0x48], rax
0x00004485      4883c420       add rsp, 0x20
0x00004489      4889f7         mov rdi, rsi
0x0000448c      4889742418     mov qword [rsp + 0x18], rsi
0x00004491      e8ba0b0000     call sym.xmalloc
0x00004496      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x0000449b      4883ec08       sub rsp, 8
0x0000449f      ff7330         push qword [rbx + 0x30]
0x000044a2      ff7328         push qword [rbx + 0x28]
0x000044a5      4c8b542438     mov r10, qword [rsp + 0x38]
0x000044aa      4189e9         mov r9d, ebp
0x000044ad      448b03         mov r8d, dword [rbx]
0x000044b0      4c89f9         mov rcx, r15
0x000044b3      4c89f2         mov rdx, r14
0x000044b6      4889c7         mov rdi, rax
0x000044b9      4152           push r10
0x000044bb      488b742438     mov rsi, qword [rsp + 0x38]
0x000044c0      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x000044c5      8b44242c       mov eax, dword [rsp + 0x2c]
0x000044c9      4883c420       add rsp, 0x20
0x000044cd      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x000044d0      41894500       mov dword [r13], eax
0x000044d4      7409           je 0x44df
0x000044d6      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x000044db      4d891c24       mov qword [r12], r11
0x000044df      488b442410     mov rax, qword [rsp + 0x10]
0x000044e4      4883c438       add rsp, 0x38
0x000044e8      5b             pop rbx
0x000044e9      5d             pop rbp
0x000044ea      415c           pop r12
0x000044ec      415d           pop r13
0x000044ee      415e           pop r14
0x000044f0      415f           pop r15
0x000044f2      c3             ret
0x000044f3      0f1f00         nop dword [rax]
0x000044f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00004500      4889d1         mov rcx, rdx
0x00004503      31d2           xor edx, edx
0x00004505      e906ffffff     jmp sym.quotearg_alloc_mem
0x0000450a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00004510      8b05424b2000   mov eax, dword [obj.nslots]             ; [0x209058:4]=1
0x00004516      4154           push r12
0x00004518      4c8b25414b20.  mov r12, qword [obj.slotvec]            ; [0x209060:8]=0x209070 obj.slotvec0 ; "p\x90 "
0x0000451f      55             push rbp
0x00004520      53             push rbx
0x00004521      83f801         cmp eax, 1
0x00004524      7e2b           jle 0x4551                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00004526      83e802         sub eax, 2
0x00004529      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x0000452e      48c1e004       shl rax, 4
0x00004532      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00004537      660f1f840000.  nop word [rax + rax]
0x00004540      488b3b         mov rdi, qword [rbx]
0x00004543      4883c310       add rbx, 0x10
0x00004547      e884cfffff     call sym.imp.free
0x0000454c      4839eb         cmp rbx, rbp
0x0000454f      75ef           jne 0x4540
0x00004551      498b7c2408     mov rdi, qword [r12 + 8]
0x00004556      488d1da34b20.  lea rbx, obj.slot0                      ; 0x209100
0x0000455d      4839df         cmp rdi, rbx
0x00004560      7417           je 0x4579
0x00004562      e869cfffff     call sym.imp.free
0x00004567      48c705fe4a20.  mov qword [obj.slotvec0], 0x100         ; [0x209070:8]=256
0x00004572      48891dff4a20.  mov qword [0x00209078], rbx             ; [0x209078:8]=0x209100 obj.slot0
0x00004579      488d1df04a20.  lea rbx, obj.slotvec0                   ; 0x209070
0x00004580      4939dc         cmp r12, rbx
0x00004583      740f           je 0x4594
0x00004585      4c89e7         mov rdi, r12
0x00004588      e843cfffff     call sym.imp.free
0x0000458d      48891dcc4a20.  mov qword [obj.slotvec], rbx            ; [0x209060:8]=0x209070 obj.slotvec0 ; "p\x90 "
0x00004594      5b             pop rbx
0x00004595      c705b94a2000.  mov dword [obj.nslots], 1               ; [0x209058:4]=1
0x0000459f      5d             pop rbp
0x000045a0      415c           pop r12
0x000045a2      c3             ret
0x000045a3      0f1f00         nop dword [rax]
0x000045a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x000045b0      488d0d494c20.  lea rcx, obj.default_quoting_options    ; 0x209200
0x000045b7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000045be      e90dfbffff     jmp sym.quotearg_n_options
0x000045c3      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x000045c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x000045d0      488d0d294c20.  lea rcx, obj.default_quoting_options    ; 0x209200
0x000045d7      e9f4faffff     jmp sym.quotearg_n_options
0x000045dc      0f1f4000       nop dword [rax]
;-- quotearg:
0x000045e0      488d0d194c20.  lea rcx, obj.default_quoting_options    ; 0x209200
0x000045e7      4889fe         mov rsi, rdi
0x000045ea      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000045f1      31ff           xor edi, edi
0x000045f3      e9d8faffff     jmp sym.quotearg_n_options
0x000045f8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00004600      488d0df94b20.  lea rcx, obj.default_quoting_options    ; 0x209200
0x00004607      4889f2         mov rdx, rsi
0x0000460a      4889fe         mov rsi, rdi
0x0000460d      31ff           xor edi, edi
0x0000460f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00004614      6690           nop
0x00004616      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00004620      4883ec48       sub rsp, 0x48
0x00004624      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00004627      64488b142528.  mov rdx, qword fs:[0x28]
0x00004630      4889542438     mov qword [rsp + 0x38], rdx
0x00004635      31d2           xor edx, edx
0x00004637      83fe0a         cmp esi, 0xa
0x0000463a      7468           je 0x46a4
0x0000463c      893424         mov dword [rsp], esi
0x0000463f      4889e1         mov rcx, rsp
0x00004642      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004649      4889c6         mov rsi, rax
0x0000464c      48c744240400.  mov qword [rsp + 4], 0
0x00004655      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000465e      48c744241400.  mov qword [rsp + 0x14], 0
0x00004667      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004670      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00004679      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004682      c74424340000.  mov dword [rsp + 0x34], 0
0x0000468a      e841faffff     call sym.quotearg_n_options
0x0000468f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004694      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000469d      750a           jne 0x46a9                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x0000469f      4883c448       add rsp, 0x48
0x000046a3      c3             ret
0x000046a4      e837ceffff     call sym.imp.abort
0x000046a9      e8f2ceffff     call sym.imp.__stack_chk_fail
0x000046ae      6690           nop
;-- quotearg_n_style_mem:
0x000046b0      4883ec48       sub rsp, 0x48
0x000046b4      4889d0         mov rax, rdx
0x000046b7      4889ca         mov rdx, rcx
0x000046ba      64488b0c2528.  mov rcx, qword fs:[0x28]
0x000046c3      48894c2438     mov qword [rsp + 0x38], rcx
0x000046c8      31c9           xor ecx, ecx
0x000046ca      83fe0a         cmp esi, 0xa
0x000046cd      7461           je 0x4730
0x000046cf      893424         mov dword [rsp], esi
0x000046d2      4889e1         mov rcx, rsp
0x000046d5      4889c6         mov rsi, rax
0x000046d8      48c744240400.  mov qword [rsp + 4], 0
0x000046e1      48c744240c00.  mov qword [rsp + 0xc], 0
0x000046ea      48c744241400.  mov qword [rsp + 0x14], 0
0x000046f3      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000046fc      48c744242400.  mov qword [rsp + 0x24], 0
0x00004705      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000470e      c74424340000.  mov dword [rsp + 0x34], 0
0x00004716      e8b5f9ffff     call sym.quotearg_n_options
0x0000471b      488b542438     mov rdx, qword [rsp + 0x38]
0x00004720      644833142528.  xor rdx, qword fs:[0x28]
0x00004729      750a           jne 0x4735
0x0000472b      4883c448       add rsp, 0x48
0x0000472f      c3             ret
0x00004730      e8abcdffff     call sym.imp.abort
0x00004735      e866ceffff     call sym.imp.__stack_chk_fail
0x0000473a      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00004740      4889f2         mov rdx, rsi
0x00004743      89fe           mov esi, edi
0x00004745      31ff           xor edi, edi
0x00004747      e9d4feffff     jmp sym.quotearg_n_style
0x0000474c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00004750      4889d1         mov rcx, rdx
0x00004753      4889f2         mov rdx, rsi
0x00004756      89fe           mov esi, edi
0x00004758      31ff           xor edi, edi
0x0000475a      e951ffffff     jmp sym.quotearg_n_style_mem
0x0000475f      90             nop
;-- quotearg_char_mem:
0x00004760      4883ec48       sub rsp, 0x48
0x00004764      89d1           mov ecx, edx
0x00004766      64488b042528.  mov rax, qword fs:[0x28]
0x0000476f      4889442438     mov qword [rsp + 0x38], rax
0x00004774      31c0           xor eax, eax
0x00004776      488b05b34a20.  mov rax, qword [0x00209230]             ; [0x209230:8]=0
0x0000477d      4989e0         mov r8, rsp
0x00004780      83e11f         and ecx, 0x1f
0x00004783      660f6f05754a.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x0000478b      4889442430     mov qword [rsp + 0x30], rax
0x00004790      89d0           mov eax, edx
0x00004792      0f290424       movaps xmmword [rsp], xmm0
0x00004796      c0e805         shr al, 5
0x00004799      0fb6c0         movzx eax, al
0x0000479c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x000047a1      660f6f05674a.  movdqa xmm0, xmmword [0x00209210]
0x000047a9      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x000047ae      660f6f056a4a.  movdqa xmm0, xmmword [0x00209220]
0x000047b6      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x000047bb      418b11         mov edx, dword [r9]
0x000047be      89d0           mov eax, edx
0x000047c0      d3e8           shr eax, cl
0x000047c2      f7d0           not eax
0x000047c4      83e001         and eax, 1
0x000047c7      d3e0           shl eax, cl
0x000047c9      4c89c1         mov rcx, r8
0x000047cc      31d0           xor eax, edx
0x000047ce      4889f2         mov rdx, rsi
0x000047d1      4889fe         mov rsi, rdi
0x000047d4      418901         mov dword [r9], eax
0x000047d7      31ff           xor edi, edi
0x000047d9      e8f2f8ffff     call sym.quotearg_n_options
0x000047de      488b742438     mov rsi, qword [rsp + 0x38]
0x000047e3      644833342528.  xor rsi, qword fs:[0x28]
0x000047ec      7505           jne 0x47f3
0x000047ee      4883c448       add rsp, 0x48
0x000047f2      c3             ret
0x000047f3      e8a8cdffff     call sym.imp.__stack_chk_fail
0x000047f8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00004800      400fbed6       movsx edx, sil
0x00004804      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000480b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00004810      ba3a000000     mov edx, 0x3a                           ; ':'
0x00004815      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000481c      e93fffffff     jmp sym.quotearg_char_mem
0x00004821      0f1f440000     nop dword [rax + rax]
0x00004826      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00004830      ba3a000000     mov edx, 0x3a                           ; ':'
0x00004835      e926ffffff     jmp sym.quotearg_char_mem
0x0000483a      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00004840      4883ec48       sub rsp, 0x48
0x00004844      4889d0         mov rax, rdx
0x00004847      64488b142528.  mov rdx, qword fs:[0x28]
0x00004850      4889542438     mov qword [rsp + 0x38], rdx
0x00004855      31d2           xor edx, edx
0x00004857      83fe0a         cmp esi, 0xa
0x0000485a      7468           je 0x48c4
0x0000485c      893424         mov dword [rsp], esi
0x0000485f      4889e1         mov rcx, rsp
0x00004862      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004869      4889c6         mov rsi, rax
0x0000486c      48c744240400.  mov qword [rsp + 4], 0
0x00004875      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x0000487e      48c744241400.  mov qword [rsp + 0x14], 0
0x00004887      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004890      48c744242400.  mov qword [rsp + 0x24], 0
0x00004899      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000048a2      c74424340000.  mov dword [rsp + 0x34], 0
0x000048aa      e821f8ffff     call sym.quotearg_n_options
0x000048af      488b4c2438     mov rcx, qword [rsp + 0x38]
0x000048b4      6448330c2528.  xor rcx, qword fs:[0x28]
0x000048bd      750a           jne 0x48c9
0x000048bf      4883c448       add rsp, 0x48
0x000048c3      c3             ret
0x000048c4      e817ccffff     call sym.imp.abort
0x000048c9      e8d2ccffff     call sym.imp.__stack_chk_fail
0x000048ce      6690           nop
;-- quotearg_n_custom_mem:
0x000048d0      4883ec48       sub rsp, 0x48
0x000048d4      4989c9         mov r9, rcx
0x000048d7      488b0d524920.  mov rcx, qword [0x00209230]             ; [0x209230:8]=0
0x000048de      660f6f051a49.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x000048e6      64488b042528.  mov rax, qword fs:[0x28]
0x000048ef      4889442438     mov qword [rsp + 0x38], rax
0x000048f4      31c0           xor eax, eax
0x000048f6      0f290424       movaps xmmword [rsp], xmm0
0x000048fa      4885f6         test rsi, rsi
0x000048fd      48894c2430     mov qword [rsp + 0x30], rcx
0x00004902      c704240a0000.  mov dword [rsp], 0xa
0x00004909      660f6f05ff48.  movdqa xmm0, xmmword [0x00209210]
0x00004911      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00004916      660f6f050249.  movdqa xmm0, xmmword [0x00209220]
0x0000491e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00004923      7432           je 0x4957
0x00004925      4885d2         test rdx, rdx
0x00004928      742d           je 0x4957
0x0000492a      4889742428     mov qword [rsp + 0x28], rsi
0x0000492f      4889542430     mov qword [rsp + 0x30], rdx
0x00004934      4889e1         mov rcx, rsp
0x00004937      4c89c2         mov rdx, r8
0x0000493a      4c89ce         mov rsi, r9
0x0000493d      e88ef7ffff     call sym.quotearg_n_options
0x00004942      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00004947      6448333c2528.  xor rdi, qword fs:[0x28]
0x00004950      750a           jne 0x495c
0x00004952      4883c448       add rsp, 0x48
0x00004956      c3             ret
0x00004957      e884cbffff     call sym.imp.abort
0x0000495c      e83fccffff     call sym.imp.__stack_chk_fail
0x00004961      0f1f440000     nop dword [rax + rax]
0x00004966      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00004970      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00004977      e954ffffff     jmp sym.quotearg_n_custom_mem
0x0000497c      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00004980      4889d1         mov rcx, rdx
0x00004983      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0000498a      4889f2         mov rdx, rsi
0x0000498d      4889fe         mov rsi, rdi
0x00004990      31ff           xor edi, edi
0x00004992      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00004997      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x000049a0      4989c8         mov r8, rcx
0x000049a3      4889d1         mov rcx, rdx
0x000049a6      4889f2         mov rdx, rsi
0x000049a9      4889fe         mov rsi, rdi
0x000049ac      31ff           xor edi, edi
0x000049ae      e91dffffff     jmp sym.quotearg_n_custom_mem
0x000049b3      0f1f00         nop dword [rax]
0x000049b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x000049c0      488d0d594620.  lea rcx, obj.quote_quoting_options      ; 0x209020
0x000049c7      e904f7ffff     jmp sym.quotearg_n_options
0x000049cc      0f1f4000       nop dword [rax]
;-- quote_mem:
0x000049d0      488d0d494620.  lea rcx, obj.quote_quoting_options      ; 0x209020
0x000049d7      4889f2         mov rdx, rsi
0x000049da      4889fe         mov rsi, rdi
0x000049dd      31ff           xor edi, edi
0x000049df      e9ecf6ffff     jmp sym.quotearg_n_options
0x000049e4      6690           nop
0x000049e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x000049f0      488d0d294620.  lea rcx, obj.quote_quoting_options      ; 0x209020
0x000049f7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000049fe      e9cdf6ffff     jmp sym.quotearg_n_options
0x00004a03      0f1f00         nop dword [rax]
0x00004a06      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00004a10      488d0d094620.  lea rcx, obj.quote_quoting_options      ; 0x209020
0x00004a17      4889fe         mov rsi, rdi
0x00004a1a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004a21      31ff           xor edi, edi
0x00004a23      e9a8f6ffff     jmp sym.quotearg_n_options
0x00004a28      0f1f84000000.  nop dword [rax + rax]
;-- version_etc_arn:
0x00004a30      4157           push r15
0x00004a32      4156           push r14
0x00004a34      4155           push r13
0x00004a36      4154           push r12
0x00004a38      4d89cc         mov r12, r9
0x00004a3b      55             push rbp
0x00004a3c      53             push rbx
0x00004a3d      4889fd         mov rbp, rdi
0x00004a40      4c89c3         mov rbx, r8
0x00004a43      4883ec28       sub rsp, 0x28
0x00004a47      4885f6         test rsi, rsi
0x00004a4a      0f8418010000   je 0x4b68
0x00004a50      4989d0         mov r8, rdx
0x00004a53      488d154e1d00.  lea rdx, [0x000067a8]                   ; "%s (%s) %s\n"
0x00004a5a      4989c9         mov r9, rcx
0x00004a5d      31c0           xor eax, eax
0x00004a5f      4889f1         mov rcx, rsi
0x00004a62      be01000000     mov esi, 1
0x00004a67      e844cdffff     call sym.imp.__fprintf_chk
0x00004a6c      488d35481d00.  lea rsi, [0x000067bb]                   ; "(C)"
0x00004a73      31ff           xor edi, edi
0x00004a75      ba05000000     mov edx, 5
0x00004a7a      e8f1caffff     call sym.imp.dcgettext
0x00004a7f      488d155a2000.  lea rdx, obj.version_etc_copyright      ; 0x6ae0 ; "Copyright %s %d Free Software Foundation, Inc."
0x00004a86      4889c1         mov rcx, rax
0x00004a89      41b8e3070000   mov r8d, 0x7e3
0x00004a8f      be01000000     mov esi, 1
0x00004a94      4889ef         mov rdi, rbp
0x00004a97      31c0           xor eax, eax
0x00004a99      e812cdffff     call sym.imp.__fprintf_chk
0x00004a9e      488d35a31d00.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x6848 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00004aa5      31ff           xor edi, edi
0x00004aa7      ba05000000     mov edx, 5
0x00004aac      e8bfcaffff     call sym.imp.dcgettext
0x00004ab1      4889ee         mov rsi, rbp
0x00004ab4      4889c7         mov rdi, rax
0x00004ab7      e8b4cbffff     call sym.imp.fputs_unlocked
0x00004abc      4983fc09       cmp r12, 9
0x00004ac0      0f873a030000   ja 0x4e00
0x00004ac6      488d15d71f00.  lea rdx, [0x00006aa4]
0x00004acd      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00004ad1      4801d0         add rax, rdx
0x00004ad4      ffe0           jmp rax
0x00004ad6      662e0f1f8400.  nop word cs:[rax + rax]
0x00004ae0      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004ae4      488b4310       mov rax, qword [rbx + 0x10]
0x00004ae8      488d35c91e00.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x69b8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x00004aef      4c8b4308       mov r8, qword [rbx + 8]
0x00004af3      ba05000000     mov edx, 5
0x00004af8      31ff           xor edi, edi
0x00004afa      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004afe      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004b02      4c894c2410     mov qword [rsp + 0x10], r9
0x00004b07      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004b0b      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004b0f      48890424       mov qword [rsp], rax
0x00004b13      4c89442408     mov qword [rsp + 8], r8
0x00004b18      488b1b         mov rbx, qword [rbx]
0x00004b1b      e850caffff     call sym.imp.dcgettext
0x00004b20      4883ec08       sub rsp, 8
0x00004b24      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00004b29      4889c2         mov rdx, rax
0x00004b2c      4889d9         mov rcx, rbx
0x00004b2f      be01000000     mov esi, 1
0x00004b34      4889ef         mov rdi, rbp
0x00004b37      31c0           xor eax, eax
0x00004b39      4151           push r9
0x00004b3b      4155           push r13
0x00004b3d      4154           push r12
0x00004b3f      4157           push r15
0x00004b41      4156           push r14
0x00004b43      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00004b48      4c8b442438     mov r8, qword [rsp + 0x38]
0x00004b4d      e85eccffff     call sym.imp.__fprintf_chk
0x00004b52      4883c430       add rsp, 0x30
0x00004b56      4883c428       add rsp, 0x28
0x00004b5a      5b             pop rbx
0x00004b5b      5d             pop rbp
0x00004b5c      415c           pop r12
0x00004b5e      415d           pop r13
0x00004b60      415e           pop r14
0x00004b62      415f           pop r15
0x00004b64      c3             ret
0x00004b65      0f1f00         nop dword [rax]
0x00004b68      4989c8         mov r8, rcx
0x00004b6b      4889d1         mov rcx, rdx
0x00004b6e      488d153f1c00.  lea rdx, str.s__s                       ; 0x67b4 ; "%s %s\n"
0x00004b75      be01000000     mov esi, 1
0x00004b7a      31c0           xor eax, eax
0x00004b7c      e82fccffff     call sym.imp.__fprintf_chk
0x00004b81      e9e6feffff     jmp 0x4a6c
0x00004b86      662e0f1f8400.  nop word cs:[rax + rax]
0x00004b90      4c8b5340       mov r10, qword [rbx + 0x40]
0x00004b94      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004b98      488d35491e00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x69e8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x00004b9f      488b4310       mov rax, qword [rbx + 0x10]
0x00004ba3      4c8b4308       mov r8, qword [rbx + 8]
0x00004ba7      ba05000000     mov edx, 5
0x00004bac      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004bb0      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004bb4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004bb8      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004bbc      488b1b         mov rbx, qword [rbx]
0x00004bbf      4c89542418     mov qword [rsp + 0x18], r10
0x00004bc4      4c894c2410     mov qword [rsp + 0x10], r9
0x00004bc9      48890424       mov qword [rsp], rax
0x00004bcd      4c89442408     mov qword [rsp + 8], r8
0x00004bd2      31ff           xor edi, edi
0x00004bd4      e897c9ffff     call sym.imp.dcgettext
0x00004bd9      4c8b542418     mov r10, qword [rsp + 0x18]
0x00004bde      4152           push r10
0x00004be0      e93fffffff     jmp 0x4b24
0x00004be5      0f1f00         nop dword [rax]
0x00004be8      488b1b         mov rbx, qword [rbx]
0x00004beb      488d35cd1b00.  lea rsi, str.Written_by__s.             ; 0x67bf ; "Written by %s.\n"
0x00004bf2      ba05000000     mov edx, 5
0x00004bf7      31ff           xor edi, edi
0x00004bf9      e872c9ffff     call sym.imp.dcgettext
0x00004bfe      4883c428       add rsp, 0x28
0x00004c02      4889d9         mov rcx, rbx
0x00004c05      4889ef         mov rdi, rbp
0x00004c08      5b             pop rbx
0x00004c09      5d             pop rbp
0x00004c0a      415c           pop r12
0x00004c0c      415d           pop r13
0x00004c0e      415e           pop r14
0x00004c10      415f           pop r15
0x00004c12      4889c2         mov rdx, rax
0x00004c15      be01000000     mov esi, 1
0x00004c1a      31c0           xor eax, eax
0x00004c1c      e98fcbffff     jmp sym.imp.__fprintf_chk
0x00004c21      0f1f80000000.  nop dword [rax]
0x00004c28      4c8b6308       mov r12, qword [rbx + 8]
0x00004c2c      488d359c1b00.  lea rsi, str.Written_by__s_and__s.      ; 0x67cf ; "Written by %s and %s.\n"
0x00004c33      488b1b         mov rbx, qword [rbx]
0x00004c36      ba05000000     mov edx, 5
0x00004c3b      31ff           xor edi, edi
0x00004c3d      e82ec9ffff     call sym.imp.dcgettext
0x00004c42      4883c428       add rsp, 0x28
0x00004c46      4d89e0         mov r8, r12
0x00004c49      4889d9         mov rcx, rbx
0x00004c4c      4889ef         mov rdi, rbp
0x00004c4f      4889c2         mov rdx, rax
0x00004c52      be01000000     mov esi, 1
0x00004c57      5b             pop rbx
0x00004c58      5d             pop rbp
0x00004c59      415c           pop r12
0x00004c5b      415d           pop r13
0x00004c5d      415e           pop r14
0x00004c5f      415f           pop r15
0x00004c61      31c0           xor eax, eax
0x00004c63      e948cbffff     jmp sym.imp.__fprintf_chk
0x00004c68      0f1f84000000.  nop dword [rax + rax]
0x00004c70      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004c74      4c8b6308       mov r12, qword [rbx + 8]
0x00004c78      488d35671b00.  lea rsi, str.Written_by__s___s__and__s. ; 0x67e6 ; "Written by %s, %s, and %s.\n"
0x00004c7f      488b1b         mov rbx, qword [rbx]
0x00004c82      ba05000000     mov edx, 5
0x00004c87      31ff           xor edi, edi
0x00004c89      e8e2c8ffff     call sym.imp.dcgettext
0x00004c8e      4883c428       add rsp, 0x28
0x00004c92      4d89e9         mov r9, r13
0x00004c95      4d89e0         mov r8, r12
0x00004c98      4889d9         mov rcx, rbx
0x00004c9b      4889ef         mov rdi, rbp
0x00004c9e      4889c2         mov rdx, rax
0x00004ca1      5b             pop rbx
0x00004ca2      5d             pop rbp
0x00004ca3      415c           pop r12
0x00004ca5      415d           pop r13
0x00004ca7      415e           pop r14
0x00004ca9      415f           pop r15
0x00004cab      be01000000     mov esi, 1
0x00004cb0      31c0           xor eax, eax
0x00004cb2      e9f9caffff     jmp sym.imp.__fprintf_chk
0x00004cb7      660f1f840000.  nop word [rax + rax]
0x00004cc0      488d35511c00.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x6918 ; "Written by %s, %s, %s,\nand %s.\n"
0x00004cc7      ba05000000     mov edx, 5
0x00004ccc      31ff           xor edi, edi
0x00004cce      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004cd2      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004cd6      4c8b6308       mov r12, qword [rbx + 8]
0x00004cda      488b1b         mov rbx, qword [rbx]
0x00004cdd      e88ec8ffff     call sym.imp.dcgettext
0x00004ce2      4883ec08       sub rsp, 8
0x00004ce6      4156           push r14
0x00004ce8      4889c2         mov rdx, rax
0x00004ceb      4d89e9         mov r9, r13
0x00004cee      4d89e0         mov r8, r12
0x00004cf1      4889d9         mov rcx, rbx
0x00004cf4      4889ef         mov rdi, rbp
0x00004cf7      be01000000     mov esi, 1
0x00004cfc      31c0           xor eax, eax
0x00004cfe      e8adcaffff     call sym.imp.__fprintf_chk
0x00004d03      58             pop rax
0x00004d04      5a             pop rdx
0x00004d05      4883c428       add rsp, 0x28
0x00004d09      5b             pop rbx
0x00004d0a      5d             pop rbp
0x00004d0b      415c           pop r12
0x00004d0d      415d           pop r13
0x00004d0f      415e           pop r14
0x00004d11      415f           pop r15
0x00004d13      c3             ret
0x00004d14      0f1f4000       nop dword [rax]
0x00004d18      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004d1c      488d35151c00.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x6938 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00004d23      ba05000000     mov edx, 5
0x00004d28      31ff           xor edi, edi
0x00004d2a      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004d2e      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004d32      4c8b6308       mov r12, qword [rbx + 8]
0x00004d36      488b1b         mov rbx, qword [rbx]
0x00004d39      e832c8ffff     call sym.imp.dcgettext
0x00004d3e      4157           push r15
0x00004d40      eba4           jmp 0x4ce6
0x00004d42      660f1f440000   nop word [rax + rax]
0x00004d48      4c8b4308       mov r8, qword [rbx + 8]
0x00004d4c      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004d50      488d35091c00.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x6960 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00004d57      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004d5b      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004d5f      ba05000000     mov edx, 5
0x00004d64      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004d68      31ff           xor edi, edi
0x00004d6a      488b1b         mov rbx, qword [rbx]
0x00004d6d      4c890424       mov qword [rsp], r8
0x00004d71      e8fac7ffff     call sym.imp.dcgettext
0x00004d76      4883ec08       sub rsp, 8
0x00004d7a      4d89e9         mov r9, r13
0x00004d7d      4154           push r12
0x00004d7f      4157           push r15
0x00004d81      4156           push r14
0x00004d83      4c8b442420     mov r8, qword [rsp + 0x20]
0x00004d88      4889d9         mov rcx, rbx
0x00004d8b      4889c2         mov rdx, rax
0x00004d8e      4889ef         mov rdi, rbp
0x00004d91      be01000000     mov esi, 1
0x00004d96      31c0           xor eax, eax
0x00004d98      e813caffff     call sym.imp.__fprintf_chk
0x00004d9d      4883c420       add rsp, 0x20
0x00004da1      4883c428       add rsp, 0x28
0x00004da5      5b             pop rbx
0x00004da6      5d             pop rbp
0x00004da7      415c           pop r12
0x00004da9      415d           pop r13
0x00004dab      415e           pop r14
0x00004dad      415f           pop r15
0x00004daf      c3             ret
0x00004db0      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00004db4      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004db8      488d35c91b00.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x6988 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x00004dbf      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004dc3      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004dc7      ba05000000     mov edx, 5
0x00004dcc      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004dd0      4c8b4308       mov r8, qword [rbx + 8]
0x00004dd4      31ff           xor edi, edi
0x00004dd6      4c894c2408     mov qword [rsp + 8], r9
0x00004ddb      488b1b         mov rbx, qword [rbx]
0x00004dde      4c890424       mov qword [rsp], r8
0x00004de2      e889c7ffff     call sym.imp.dcgettext
0x00004de7      4155           push r13
0x00004de9      4154           push r12
0x00004deb      4157           push r15
0x00004ded      4156           push r14
0x00004def      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00004df4      eb8d           jmp 0x4d83
0x00004df6      662e0f1f8400.  nop word cs:[rax + rax]
0x00004e00      4c8b5340       mov r10, qword [rbx + 0x40]
0x00004e04      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004e08      ba05000000     mov edx, 5
0x00004e0d      488b4310       mov rax, qword [rbx + 0x10]
0x00004e11      4c8b4308       mov r8, qword [rbx + 8]
0x00004e15      488d35041c00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x6a20 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x00004e1c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004e20      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004e24      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004e28      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004e2c      4c89542418     mov qword [rsp + 0x18], r10
0x00004e31      4c894c2410     mov qword [rsp + 0x10], r9
0x00004e36      48890424       mov qword [rsp], rax
0x00004e3a      4c89442408     mov qword [rsp + 8], r8
0x00004e3f      488b1b         mov rbx, qword [rbx]
0x00004e42      e98bfdffff     jmp 0x4bd2
0x00004e47      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00004e50      4531c9         xor r9d, r9d
0x00004e53      49833800       cmp qword [r8], 0
0x00004e57      7412           je 0x4e6b
0x00004e59      0f1f80000000.  nop dword [rax]
0x00004e60      4983c101       add r9, 1
0x00004e64      4b833cc800     cmp qword [r8 + r9*8], 0
0x00004e69      75f5           jne 0x4e60
0x00004e6b      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00004e70      4883ec68       sub rsp, 0x68
0x00004e74      4d89c2         mov r10, r8
0x00004e77      4531c9         xor r9d, r9d
0x00004e7a      64488b042528.  mov rax, qword fs:[0x28]
0x00004e83      4889442458     mov qword [rsp + 0x58], rax
0x00004e88      31c0           xor eax, eax
0x00004e8a      4989e0         mov r8, rsp
0x00004e8d      0f1f00         nop dword [rax]
0x00004e90      418b02         mov eax, dword [r10]
0x00004e93      83f82f         cmp eax, 0x2f
0x00004e96      7742           ja 0x4eda
0x00004e98      4189c3         mov r11d, eax
0x00004e9b      4d035a10       add r11, qword [r10 + 0x10]
0x00004e9f      83c008         add eax, 8
0x00004ea2      418902         mov dword [r10], eax
0x00004ea5      498b03         mov rax, qword [r11]
0x00004ea8      4885c0         test rax, rax
0x00004eab      4b8904c8       mov qword [r8 + r9*8], rax
0x00004eaf      740a           je 0x4ebb
0x00004eb1      4983c101       add r9, 1
0x00004eb5      4983f90a       cmp r9, 0xa
0x00004eb9      75d5           jne 0x4e90
0x00004ebb      e870fbffff     call sym.version_etc_arn
0x00004ec0      488b442458     mov rax, qword [rsp + 0x58]
0x00004ec5      644833042528.  xor rax, qword fs:[0x28]
0x00004ece      7505           jne 0x4ed5
0x00004ed0      4883c468       add rsp, 0x68
0x00004ed4      c3             ret
0x00004ed5      e8c6c6ffff     call sym.imp.__stack_chk_fail
0x00004eda      4d8b5a08       mov r11, qword [r10 + 8]
0x00004ede      498d4308       lea rax, [r11 + 8]
0x00004ee2      49894208       mov qword [r10 + 8], rax
0x00004ee6      ebbd           jmp 0x4ea5
0x00004ee8      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00004ef0      55             push rbp
0x00004ef1      53             push rbx
0x00004ef2      41ba20000000   mov r10d, 0x20                          ; "@"
0x00004ef8      4531db         xor r11d, r11d
0x00004efb      4881ecb80000.  sub rsp, 0xb8
0x00004f02      64488b042528.  mov rax, qword fs:[0x28]
0x00004f0b      4889442478     mov qword [rsp + 0x78], rax
0x00004f10      31c0           xor eax, eax
0x00004f12      488d8424d000.  lea rax, [rsp + 0xd0]
0x00004f1a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00004f22      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x00004f2a      4c8d442420     lea r8, [rsp + 0x20]
0x00004f2f      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00004f37      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x00004f3f      4889442410     mov qword [rsp + 0x10], rax
0x00004f44      488d84248000.  lea rax, [rsp + 0x80]
0x00004f4c      4531c9         xor r9d, r9d
0x00004f4f      4889442418     mov qword [rsp + 0x18], rax
0x00004f54      4889c5         mov rbp, rax
0x00004f57      660f1f840000.  nop word [rax + rax]
0x00004f60      4183fa2f       cmp r10d, 0x2f
0x00004f64      7756           ja 0x4fbc
0x00004f66      4489d0         mov eax, r10d
0x00004f69      41bb01000000   mov r11d, 1
0x00004f6f      4183c208       add r10d, 8
0x00004f73      4801e8         add rax, rbp
0x00004f76      488b00         mov rax, qword [rax]
0x00004f79      4885c0         test rax, rax
0x00004f7c      4b8904c8       mov qword [r8 + r9*8], rax
0x00004f80      740a           je 0x4f8c
0x00004f82      4983c101       add r9, 1
0x00004f86      4983f90a       cmp r9, 0xa
0x00004f8a      75d4           jne 0x4f60
0x00004f8c      4584db         test r11b, r11b
0x00004f8f      7524           jne 0x4fb5
0x00004f91      e89afaffff     call sym.version_etc_arn
0x00004f96      488b442478     mov rax, qword [rsp + 0x78]
0x00004f9b      644833042528.  xor rax, qword fs:[0x28]
0x00004fa4      750a           jne 0x4fb0
0x00004fa6      4881c4b80000.  add rsp, 0xb8
0x00004fad      5b             pop rbx
0x00004fae      5d             pop rbp
0x00004faf      c3             ret
0x00004fb0      e8ebc5ffff     call sym.imp.__stack_chk_fail
0x00004fb5      4489542408     mov dword [rsp + 8], r10d
0x00004fba      ebd5           jmp 0x4f91
0x00004fbc      4889d8         mov rax, rbx
0x00004fbf      4883c308       add rbx, 8
0x00004fc3      ebb1           jmp 0x4f76
0x00004fc5      90             nop
0x00004fc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00004fd0      53             push rbx
0x00004fd1      488d352a1800.  lea rsi, str.Report_bugs_to:__s         ; 0x6802 ; "\nReport bugs to: %s\n"
0x00004fd8      ba05000000     mov edx, 5
0x00004fdd      31ff           xor edi, edi
0x00004fdf      e88cc5ffff     call sym.imp.dcgettext
0x00004fe4      488d152c1800.  lea rdx, str.bug_coreutils_gnu.org      ; 0x6817 ; "bug-coreutils@gnu.org"
0x00004feb      4889c6         mov rsi, rax
0x00004fee      bf01000000     mov edi, 1
0x00004ff3      31c0           xor eax, eax
0x00004ff5      e836c7ffff     call sym.imp.__printf_chk
0x00004ffa      488d352c1800.  lea rsi, str.s_home_page:___s           ; 0x682d ; "%s home page: <%s>\n"
0x00005001      ba05000000     mov edx, 5
0x00005006      31ff           xor edi, edi
0x00005008      e863c5ffff     call sym.imp.dcgettext
0x0000500d      488d0d7c1000.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x6090 ; "https://www.gnu.org/software/coreutils/"
0x00005014      488d15240c00.  lea rdx, str.GNU_coreutils              ; 0x5c3f ; "GNU coreutils"
0x0000501b      4889c6         mov rsi, rax
0x0000501e      bf01000000     mov edi, 1
0x00005023      31c0           xor eax, eax
0x00005025      e806c7ffff     call sym.imp.__printf_chk
0x0000502a      488b1d574020.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x209088:8]=0
0x00005031      488d35281a00.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x6a60 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00005038      31ff           xor edi, edi
0x0000503a      ba05000000     mov edx, 5
0x0000503f      e82cc5ffff     call sym.imp.dcgettext
0x00005044      4889de         mov rsi, rbx
0x00005047      4889c7         mov rdi, rax
0x0000504a      5b             pop rbx
0x0000504b      e920c6ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00005050      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00005051      4889fb         mov rbx, rdi
0x00005054      e867c6ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00005059      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x0000505c      7505           jne 0x5063
0x0000505e      4885db         test rbx, rbx
0x00005061      7502           jne 0x5065
0x00005063      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00005064      c3             ret
0x00005065      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x0000506a      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00005070      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00005073      48f7e6         mul rsi
0x00005076      4889c7         mov rdi, rax
0x00005079      0f90c0         seto al
0x0000507c      4885ff         test rdi, rdi
0x0000507f      780a           js 0x508b
0x00005081      0fb6c0         movzx eax, al
0x00005084      4885c0         test rax, rax
0x00005087      7502           jne 0x508b
0x00005089      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x0000508b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x0000508f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00005094      6690           nop
0x00005096      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x000050a0      ebae           jmp sym.xmalloc
0x000050a2      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x000050a6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x000050b0      4885f6         test rsi, rsi
0x000050b3      53             push rbx
0x000050b4      4889f3         mov rbx, rsi
0x000050b7      7505           jne 0x50be
0x000050b9      4885ff         test rdi, rdi
0x000050bc      751a           jne 0x50d8
0x000050be      4889de         mov rsi, rbx
0x000050c1      e84ac6ffff     call sym.imp.realloc
0x000050c6      4885c0         test rax, rax
0x000050c9      7505           jne 0x50d0
0x000050cb      4885db         test rbx, rbx
0x000050ce      7511           jne 0x50e1                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x000050d0      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x000050d1      c3             ret
0x000050d2      660f1f440000   nop word [rax + rax]
0x000050d8      e8f3c3ffff     call sym.imp.free
0x000050dd      31c0           xor eax, eax
0x000050df      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x000050e0      c3             ret
0x000050e1      e8ba010000     call sym.xalloc_die
0x000050e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x000050f0      4889f0         mov rax, rsi
0x000050f3      48f7e2         mul rdx
0x000050f6      4889c6         mov rsi, rax
0x000050f9      0f90c0         seto al
0x000050fc      4885f6         test rsi, rsi
0x000050ff      780a           js 0x510b
0x00005101      0fb6c0         movzx eax, al
0x00005104      4885c0         test rax, rax
0x00005107      7502           jne 0x510b
0x00005109      eba5           jmp sym.xrealloc
0x0000510b      4883ec08       sub rsp, 8
0x0000510f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00005114      6690           nop
0x00005116      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00005120      4885ff         test rdi, rdi
0x00005123      4989d1         mov r9, rdx
0x00005126      488b0e         mov rcx, qword [rsi]
0x00005129      7435           je 0x5160
0x0000512b      31d2           xor edx, edx
0x0000512d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00005137      49f7f1         div r9
0x0000513a      4839c8         cmp rax, rcx
0x0000513d      763c           jbe 0x517b
0x0000513f      4889c8         mov rax, rcx
0x00005142      48d1e8         shr rax, 1
0x00005145      488d4c0801     lea rcx, [rax + rcx + 1]
0x0000514a      48890e         mov qword [rsi], rcx
0x0000514d      490fafc9       imul rcx, r9
0x00005151      4889ce         mov rsi, rcx
0x00005154      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00005159      0f1f80000000.  nop dword [rax]
0x00005160      4885c9         test rcx, rcx
0x00005163      7423           je 0x5188
0x00005165      4889c8         mov rax, rcx
0x00005168      49f7e1         mul r9
0x0000516b      0f90c2         seto dl
0x0000516e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00005171      0fb6d2         movzx edx, dl
0x00005174      7805           js 0x517b
0x00005176      4885d2         test rdx, rdx
0x00005179      74cf           je 0x514a
0x0000517b      4883ec08       sub rsp, 8
0x0000517f      e81c010000     call sym.xalloc_die
0x00005184      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00005188      31d2           xor edx, edx
0x0000518a      b880000000     mov eax, 0x80
0x0000518f      4531c0         xor r8d, r8d
0x00005192      49f7f1         div r9
0x00005195      4885c0         test rax, rax
0x00005198      410f94c0       sete r8b
0x0000519c      498d0c00       lea rcx, [r8 + rax]
0x000051a0      ebc3           jmp 0x5165
0x000051a2      0f1f4000       nop dword [rax]
0x000051a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x000051b0      4885ff         test rdi, rdi
0x000051b3      488b06         mov rax, qword [rsi]
0x000051b6      7428           je 0x51e0
0x000051b8      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x000051c2      4839d0         cmp rax, rdx
0x000051c5      772a           ja 0x51f1
0x000051c7      4889c2         mov rdx, rax
0x000051ca      48d1ea         shr rdx, 1
0x000051cd      488d440201     lea rax, [rdx + rax + 1]
0x000051d2      488906         mov qword [rsi], rax
0x000051d5      4889c6         mov rsi, rax
0x000051d8      e9d3feffff     jmp sym.xrealloc
0x000051dd      0f1f00         nop dword [rax]
0x000051e0      4885c0         test rax, rax
0x000051e3      ba80000000     mov edx, 0x80
0x000051e8      480f44c2       cmove rax, rdx
0x000051ec      4885c0         test rax, rax
0x000051ef      79e1           jns 0x51d2
0x000051f1      4883ec08       sub rsp, 8
0x000051f5      e8a6000000     call sym.xalloc_die
0x000051fa      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00005200      53             push rbx
0x00005201      4889fb         mov rbx, rdi
0x00005204      e847feffff     call sym.xmalloc
0x00005209      4889da         mov rdx, rbx
0x0000520c      31f6           xor esi, esi
0x0000520e      4889c7         mov rdi, rax
0x00005211      5b             pop rbx
0x00005212      e919c4ffff     jmp sym.imp.memset
0x00005217      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00005220      4889f8         mov rax, rdi
0x00005223      4883ec08       sub rsp, 8
0x00005227      48f7e6         mul rsi
0x0000522a      0f90c2         seto dl
0x0000522d      4885c0         test rax, rax
0x00005230      7817           js 0x5249
0x00005232      0fb6d2         movzx edx, dl
0x00005235      4885d2         test rdx, rdx
0x00005238      750f           jne 0x5249
0x0000523a      e841c4ffff     call sym.imp.calloc
0x0000523f      4885c0         test rax, rax
0x00005242      7405           je 0x5249
0x00005244      4883c408       add rsp, 8
0x00005248      c3             ret
0x00005249      e852000000     call sym.xalloc_die
0x0000524e      6690           nop
;-- xmemdup:
0x00005250      55             push rbp
0x00005251      53             push rbx
0x00005252      4889fd         mov rbp, rdi
0x00005255      4889f7         mov rdi, rsi
0x00005258      4889f3         mov rbx, rsi
0x0000525b      4883ec08       sub rsp, 8
0x0000525f      e8ecfdffff     call sym.xmalloc
0x00005264      4883c408       add rsp, 8
0x00005268      4889da         mov rdx, rbx
0x0000526b      4889ee         mov rsi, rbp
0x0000526e      5b             pop rbx
0x0000526f      5d             pop rbp
0x00005270      4889c7         mov rdi, rax
0x00005273      e928c4ffff     jmp sym.imp.memcpy
0x00005278      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00005280      53             push rbx
0x00005281      4889fb         mov rbx, rdi
0x00005284      e807c3ffff     call sym.imp.strlen
0x00005289      4889df         mov rdi, rbx
0x0000528c      488d7001       lea rsi, [rax + 1]
0x00005290      5b             pop rbx
0x00005291      ebbd           jmp sym.xmemdup
0x00005293      662e0f1f8400.  nop word cs:[rax + rax]
0x0000529d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x000052a0      488d35681800.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x6b0f ; "memory exhausted"
0x000052a7      4883ec08       sub rsp, 8
0x000052ab      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x000052b0      31ff           xor edi, edi
0x000052b2      e8b9c2ffff     call sym.imp.dcgettext
0x000052b7      8b3d5b3d2000   mov edi, dword [obj.exit_failure]       ; [0x209018:4]=1
0x000052bd      488d15c00f00.  lea rdx, [0x00006284]                   ; "%s"
0x000052c4      4889c1         mov rcx, rax
0x000052c7      31f6           xor esi, esi
0x000052c9      31c0           xor eax, eax
0x000052cb      e880c4ffff     call sym.imp.error
0x000052d0      e80bc2ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x000052d5      662e0f1f8400.  nop word cs:[rax + rax]
0x000052df      90             nop
;-- xnumtoumax:
0x000052e0      4157           push r15                                ; ../coreutils-8.31/lib/xdectoint.c:38
0x000052e2      4156           push r14
0x000052e4      4989cf         mov r15, rcx
0x000052e7      4155           push r13
0x000052e9      4154           push r12
0x000052eb      4989d6         mov r14, rdx
0x000052ee      55             push rbp
0x000052ef      53             push rbx
0x000052f0      89f2           mov edx, esi                            ; ../coreutils-8.31/lib/xdectoint.c:42
0x000052f2      31f6           xor esi, esi
0x000052f4      4989fc         mov r12, rdi                            ; ../coreutils-8.31/lib/xdectoint.c:38
0x000052f7      4d89cd         mov r13, r9
0x000052fa      4883ec18       sub rsp, 0x18
0x000052fe      4889e1         mov rcx, rsp                            ; ../coreutils-8.31/lib/xdectoint.c:42
0x00005301      8b5c2450       mov ebx, dword [rsp + 0x50]             ; ../coreutils-8.31/lib/xdectoint.c:38
0x00005305      64488b042528.  mov rax, qword fs:[0x28]
0x0000530e      4889442408     mov qword [rsp + 8], rax
0x00005313      31c0           xor eax, eax
0x00005315      e8f6000000     call sym.xstrtoumax                     ; ../coreutils-8.31/lib/xdectoint.c:42
0x0000531a      85c0           test eax, eax                           ; ../coreutils-8.31/lib/xdectoint.c:44
0x0000531c      0f858e000000   jne 0x53b0
0x00005322      488b2c24       mov rbp, qword [rsp]                    ; ../coreutils-8.31/lib/xdectoint.c:46
0x00005326      4c39f5         cmp rbp, r14
0x00005329      7205           jb 0x5330
0x0000532b      4c39fd         cmp rbp, r15
0x0000532e      7654           jbe 0x5384
0x00005330      e8bbc1ffff     call sym.imp.__errno_location
0x00005335      4881fd000000.  cmp rbp, 0x40000000                     ; ../coreutils-8.31/lib/xdectoint.c:52
0x0000533c      4989c6         mov r14, rax
0x0000533f      19c0           sbb eax, eax
0x00005341      83e0d7         and eax, 0xffffffd7                     ; 4294967255
0x00005344      83c04b         add eax, 0x4b
0x00005347      418906         mov dword [r14], eax
0x0000534a      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/xdectoint.c:69
0x0000534d      e8bef6ffff     call sym.quote
0x00005352      418b36         mov esi, dword [r14]
0x00005355      4989c0         mov r8, rax
0x00005358      b800000000     mov eax, 0
0x0000535d      488d151c0f00.  lea rdx, [0x00006280]                   ; "%s: %s"
0x00005364      4c89e9         mov rcx, r13
0x00005367      83fe16         cmp esi, 0x16
0x0000536a      0f44f0         cmove esi, eax
0x0000536d      85db           test ebx, ebx
0x0000536f      b801000000     mov eax, 1
0x00005374      0f44d8         cmove ebx, eax
0x00005377      31c0           xor eax, eax
0x00005379      89df           mov edi, ebx
0x0000537b      e8d0c3ffff     call sym.imp.error
0x00005380      488b2c24       mov rbp, qword [rsp]
0x00005384      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/xdectoint.c:74
0x00005389      644833142528.  xor rdx, qword fs:[0x28]
0x00005392      4889e8         mov rax, rbp
0x00005395      7544           jne 0x53db
0x00005397      4883c418       add rsp, 0x18
0x0000539b      5b             pop rbx
0x0000539c      5d             pop rbp
0x0000539d      415c           pop r12
0x0000539f      415d           pop r13
0x000053a1      415e           pop r14
0x000053a3      415f           pop r15
0x000053a5      c3             ret
0x000053a6      662e0f1f8400.  nop word cs:[rax + rax]
0x000053b0      89c5           mov ebp, eax
0x000053b2      e839c1ffff     call sym.imp.__errno_location
0x000053b7      83fd01         cmp ebp, 1                              ; ../coreutils-8.31/lib/xdectoint.c:61
0x000053ba      4989c6         mov r14, rax
0x000053bd      7411           je 0x53d0
0x000053bf      83fd03         cmp ebp, 3                              ; ../coreutils-8.31/lib/xdectoint.c:63
0x000053c2      7586           jne 0x534a
0x000053c4      c70000000000   mov dword [rax], 0                      ; ../coreutils-8.31/lib/xdectoint.c:64
0x000053ca      e97bffffff     jmp 0x534a
0x000053cf      90             nop
0x000053d0      c7004b000000   mov dword [rax], 0x4b                   ; ../coreutils-8.31/lib/xdectoint.c:62 ; 'K'
                                                                       ; [0x4b:4]=0
0x000053d6      e96fffffff     jmp 0x534a
0x000053db      e8c0c1ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/xdectoint.c:74
;-- xdectoumax:
0x000053e0      4883ec10       sub rsp, 0x10                           ; ../coreutils-8.31/lib/xdectoint.c:84
0x000053e4      4151           push r9                                 ; ../coreutils-8.31/lib/xdectoint.c:85
0x000053e6      4d89c1         mov r9, r8
0x000053e9      4989c8         mov r8, rcx
0x000053ec      4889d1         mov rcx, rdx
0x000053ef      4889f2         mov rdx, rsi
0x000053f2      be0a000000     mov esi, 0xa
0x000053f7      e8e4feffff     call sym.xnumtoumax
0x000053fc      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/xdectoint.c:86
0x00005400      c3             ret
0x00005401      662e0f1f8400.  nop word cs:[rax + rax]
0x0000540b      0f1f440000     nop dword [rax + rax]
;-- xstrtoumax:
0x00005410      4157           push r15
0x00005412      4156           push r14
0x00005414      4155           push r13
0x00005416      4154           push r12
0x00005418      55             push rbp
0x00005419      53             push rbx
0x0000541a      4883ec28       sub rsp, 0x28
0x0000541e      64488b042528.  mov rax, qword fs:[0x28]
0x00005427      4889442418     mov qword [rsp + 0x18], rax
0x0000542c      31c0           xor eax, eax
0x0000542e      83fa24         cmp edx, 0x24
0x00005431      0f875e030000   ja 0x5795
0x00005437      488d442410     lea rax, [rsp + 0x10]
0x0000543c      4989f7         mov r15, rsi
0x0000543f      4885f6         test rsi, rsi
0x00005442      4889fd         mov rbp, rdi
0x00005445      89542408       mov dword [rsp + 8], edx
0x00005449      4989ce         mov r14, rcx
0x0000544c      4d89c5         mov r13, r8
0x0000544f      4c0f44f8       cmove r15, rax
0x00005453      e898c0ffff     call sym.imp.__errno_location
0x00005458      c70000000000   mov dword [rax], 0
0x0000545e      4989c4         mov r12, rax
0x00005461      0fb65d00       movzx ebx, byte [rbp]
0x00005465      e876c3ffff     call sym.imp.__ctype_b_loc
0x0000546a      8b542408       mov edx, dword [rsp + 8]
0x0000546e      488b30         mov rsi, qword [rax]
0x00005471      4889e8         mov rax, rbp
0x00005474      eb11           jmp 0x5487
0x00005476      662e0f1f8400.  nop word cs:[rax + rax]
0x00005480      4883c001       add rax, 1
0x00005484      0fb618         movzx ebx, byte [rax]
0x00005487      0fb6cb         movzx ecx, bl
0x0000548a      f6444e0120     test byte [rsi + rcx*2 + 1], 0x20
0x0000548f      75ef           jne 0x5480
0x00005491      80fb2d         cmp bl, 0x2d
0x00005494      7452           je 0x54e8
0x00005496      31c9           xor ecx, ecx
0x00005498      4c89fe         mov rsi, r15
0x0000549b      4889ef         mov rdi, rbp
0x0000549e      e87dc1ffff     call sym.imp.__strtoul_internal
0x000054a3      498b0f         mov rcx, qword [r15]
0x000054a6      4889c3         mov rbx, rax
0x000054a9      4839e9         cmp rcx, rbp
0x000054ac      742a           je 0x54d8
0x000054ae      418b0424       mov eax, dword [r12]
0x000054b2      85c0           test eax, eax
0x000054b4      7462           je 0x5518
0x000054b6      83f822         cmp eax, 0x22
0x000054b9      bd01000000     mov ebp, 1
0x000054be      7528           jne 0x54e8
0x000054c0      4d85ed         test r13, r13
0x000054c3      7409           je 0x54ce
0x000054c5      440fb621       movzx r12d, byte [rcx]
0x000054c9      4584e4         test r12b, r12b
0x000054cc      7579           jne 0x5547
0x000054ce      49891e         mov qword [r14], rbx
0x000054d1      eb1a           jmp 0x54ed
0x000054d3      0f1f440000     nop dword [rax + rax]
0x000054d8      4d85ed         test r13, r13
0x000054db      48894c2408     mov qword [rsp + 8], rcx
0x000054e0      753e           jne 0x5520
0x000054e2      660f1f440000   nop word [rax + rax]
0x000054e8      bd04000000     mov ebp, 4
0x000054ed      488b7c2418     mov rdi, qword [rsp + 0x18]
0x000054f2      6448333c2528.  xor rdi, qword fs:[0x28]
0x000054fb      89e8           mov eax, ebp
0x000054fd      0f858d020000   jne 0x5790
0x00005503      4883c428       add rsp, 0x28
0x00005507      5b             pop rbx
0x00005508      5d             pop rbp
0x00005509      415c           pop r12
0x0000550b      415d           pop r13
0x0000550d      415e           pop r14
0x0000550f      415f           pop r15
0x00005511      c3             ret
0x00005512      660f1f440000   nop word [rax + rax]
0x00005518      31ed           xor ebp, ebp
0x0000551a      eba4           jmp 0x54c0
0x0000551c      0f1f4000       nop dword [rax]
0x00005520      440fb66500     movzx r12d, byte [rbp]
0x00005525      4584e4         test r12b, r12b
0x00005528      74be           je 0x54e8
0x0000552a      410fbef4       movsx esi, r12b
0x0000552e      4c89ef         mov rdi, r13
0x00005531      31ed           xor ebp, ebp
0x00005533      e898c0ffff     call sym.imp.strchr
0x00005538      4885c0         test rax, rax
0x0000553b      bb01000000     mov ebx, 1
0x00005540      488b4c2408     mov rcx, qword [rsp + 8]
0x00005545      74a1           je 0x54e8
0x00005547      410fbef4       movsx esi, r12b
0x0000554b      4c89ef         mov rdi, r13
0x0000554e      48894c2408     mov qword [rsp + 8], rcx
0x00005553      e878c0ffff     call sym.imp.strchr
0x00005558      4885c0         test rax, rax
0x0000555b      488b4c2408     mov rcx, qword [rsp + 8]
0x00005560      0f84c6000000   je 0x562c
0x00005566      418d4424bb     lea eax, [r12 - 0x45]
0x0000556b      3c2f           cmp al, 0x2f
0x0000556d      7751           ja 0x55c0
0x0000556f      48ba45893000.  movabs rdx, 0x814400308945
0x00005579      480fa3c2       bt rdx, rax
0x0000557d      7341           jae 0x55c0
0x0000557f      be30000000     mov esi, 0x30                           ; '0'
0x00005584      4c89ef         mov rdi, r13
0x00005587      48894c2408     mov qword [rsp + 8], rcx
0x0000558c      e83fc0ffff     call sym.imp.strchr
0x00005591      4885c0         test rax, rax
0x00005594      488b4c2408     mov rcx, qword [rsp + 8]
0x00005599      7425           je 0x55c0
0x0000559b      0fb64101       movzx eax, byte [rcx + 1]
0x0000559f      3c44           cmp al, 0x44
0x000055a1      740c           je 0x55af
0x000055a3      3c69           cmp al, 0x69
0x000055a5      0f84cd010000   je 0x5778
0x000055ab      3c42           cmp al, 0x42
0x000055ad      7511           jne 0x55c0
0x000055af      bf02000000     mov edi, 2
0x000055b4      bee8030000     mov esi, 0x3e8
0x000055b9      eb0f           jmp 0x55ca
0x000055bb      0f1f440000     nop dword [rax + rax]
0x000055c0      bf01000000     mov edi, 1
0x000055c5      be00040000     mov esi, 0x400
0x000055ca      4183ec42       sub r12d, 0x42
0x000055ce      4180fc35       cmp r12b, 0x35
0x000055d2      7758           ja 0x562c
0x000055d4      488d158d1500.  lea rdx, [0x00006b68]
0x000055db      450fb6e4       movzx r12d, r12b
0x000055df      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x000055e3      4801d0         add rax, rdx
0x000055e6      ffe0           jmp rax
0x000055e8      4889d8         mov rax, rbx
0x000055eb      48f7e6         mul rsi
0x000055ee      0f80ed010000   jo 0x57e1
0x000055f4      4531c0         xor r8d, r8d
0x000055f7      48f7e6         mul rsi
0x000055fa      0f80d2010000   jo 0x57d2
0x00005600      4889c3         mov rbx, rax
0x00005603      4409c5         or ebp, r8d
0x00005606      662e0f1f8400.  nop word cs:[rax + rax]
0x00005610      4863ff         movsxd rdi, edi
0x00005613      89e8           mov eax, ebp
0x00005615      4801f9         add rcx, rdi
0x00005618      83c802         or eax, 2
0x0000561b      49890f         mov qword [r15], rcx
0x0000561e      803900         cmp byte [rcx], 0
0x00005621      49891e         mov qword [r14], rbx
0x00005624      0f45e8         cmovne ebp, eax
0x00005627      e9c1feffff     jmp 0x54ed
0x0000562c      49891e         mov qword [r14], rbx
0x0000562f      83cd02         or ebp, 2
0x00005632      e9b6feffff     jmp 0x54ed
0x00005637      ba02000000     mov edx, 2
0x0000563c      4889d0         mov rax, rdx
0x0000563f      48f7e3         mul rbx
0x00005642      0f8096000000   jo 0x56de
0x00005648      4801db         add rbx, rbx
0x0000564b      ebc3           jmp 0x5610
0x0000564d      ba00020000     mov edx, 0x200
0x00005652      4889d0         mov rax, rdx
0x00005655      48f7e3         mul rbx
0x00005658      0f8080000000   jo 0x56de
0x0000565e      48c1e309       shl rbx, 9
0x00005662      ebac           jmp 0x5610
0x00005664      41b807000000   mov r8d, 7
0x0000566a      4531c9         xor r9d, r9d
0x0000566d      0f1f00         nop dword [rax]
0x00005670      4889d8         mov rax, rbx
0x00005673      48f7e6         mul rsi
0x00005676      4889c3         mov rbx, rax
0x00005679      0f808f010000   jo 0x580e
0x0000567f      4183e801       sub r8d, 1
0x00005683      75eb           jne 0x5670
0x00005685      4409cd         or ebp, r9d
0x00005688      eb86           jmp 0x5610
0x0000568a      41b808000000   mov r8d, 8
0x00005690      4531c9         xor r9d, r9d
0x00005693      0f1f440000     nop dword [rax + rax]
0x00005698      4889d8         mov rax, rbx
0x0000569b      48f7e6         mul rsi
0x0000569e      4889c3         mov rbx, rax
0x000056a1      0f8049010000   jo 0x57f0
0x000056a7      4183e801       sub r8d, 1
0x000056ab      75eb           jne 0x5698
0x000056ad      ebd6           jmp 0x5685
0x000056af      41b804000000   mov r8d, 4
0x000056b5      4531c9         xor r9d, r9d
0x000056b8      4889d8         mov rax, rbx
0x000056bb      48f7e6         mul rsi
0x000056be      4889c3         mov rbx, rax
0x000056c1      0f80fc000000   jo 0x57c3
0x000056c7      4183e801       sub r8d, 1
0x000056cb      75eb           jne 0x56b8
0x000056cd      ebb6           jmp 0x5685
0x000056cf      4889d8         mov rax, rbx
0x000056d2      48f7e6         mul rsi
0x000056d5      4889c3         mov rbx, rax
0x000056d8      0f8132ffffff   jno 0x5610
0x000056de      bd01000000     mov ebp, 1
0x000056e3      4883cbff       or rbx, 0xffffffffffffffff
0x000056e7      e924ffffff     jmp 0x5610
0x000056ec      0f1f4000       nop dword [rax]
0x000056f0      41b805000000   mov r8d, 5
0x000056f6      4531c9         xor r9d, r9d
0x000056f9      4889d8         mov rax, rbx
0x000056fc      48f7e6         mul rsi
0x000056ff      4889c3         mov rbx, rax
0x00005702      0f80f7000000   jo 0x57ff
0x00005708      4183e801       sub r8d, 1
0x0000570c      75eb           jne 0x56f9
0x0000570e      e972ffffff     jmp 0x5685
0x00005713      41b806000000   mov r8d, 6
0x00005719      4531c9         xor r9d, r9d
0x0000571c      4889d8         mov rax, rbx
0x0000571f      48f7e6         mul rsi
0x00005722      4889c3         mov rbx, rax
0x00005725      0f8089000000   jo 0x57b4
0x0000572b      4183e801       sub r8d, 1
0x0000572f      75eb           jne 0x571c
0x00005731      e94fffffff     jmp 0x5685
0x00005736      ba00040000     mov edx, 0x400
0x0000573b      4889d0         mov rax, rdx
0x0000573e      48f7e3         mul rbx
0x00005741      709b           jo 0x56de
0x00005743      48c1e30a       shl rbx, 0xa
0x00005747      e9c4feffff     jmp 0x5610
0x0000574c      4889d8         mov rax, rbx
0x0000574f      48f7e6         mul rsi
0x00005752      0f80c5000000   jo 0x581d
0x00005758      4531c0         xor r8d, r8d
0x0000575b      48f7e6         mul rsi
0x0000575e      0f8193feffff   jno 0x55f7
0x00005764      41b801000000   mov r8d, 1
0x0000576a      4883c8ff       or rax, 0xffffffffffffffff
0x0000576e      e984feffff     jmp 0x55f7
0x00005773      0f1f440000     nop dword [rax + rax]
0x00005778      31ff           xor edi, edi
0x0000577a      80790242       cmp byte [rcx + 2], 0x42
0x0000577e      be00040000     mov esi, 0x400
0x00005783      400f94c7       sete dil
0x00005787      8d7c3f01       lea edi, [rdi + rdi + 1]
0x0000578b      e93afeffff     jmp 0x55ca
0x00005790      e80bbeffff     call sym.imp.__stack_chk_fail
0x00005795      488d0da41400.  lea rcx, obj.__PRETTY_FUNCTION__.4162   ; 0x6c40 ; "xstrtoumax"
0x0000579c      488d357d1300.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0x6b20 ; "../coreutils-8.31/lib/xstrtol.c"
0x000057a3      488d3d961300.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0x6b40 ; "0 <= strtol_base && strtol_base <= 36"
0x000057aa      ba54000000     mov edx, 0x54                           ; 'T'
0x000057af      e85cbeffff     call sym.imp.__assert_fail
0x000057b4      41b901000000   mov r9d, 1
0x000057ba      4883cbff       or rbx, 0xffffffffffffffff
0x000057be      e968ffffff     jmp 0x572b
0x000057c3      41b901000000   mov r9d, 1
0x000057c9      4883cbff       or rbx, 0xffffffffffffffff
0x000057cd      e9f5feffff     jmp 0x56c7
0x000057d2      41b801000000   mov r8d, 1
0x000057d8      4883cbff       or rbx, 0xffffffffffffffff
0x000057dc      e922feffff     jmp 0x5603
0x000057e1      4883c8ff       or rax, 0xffffffffffffffff
0x000057e5      41b801000000   mov r8d, 1
0x000057eb      e907feffff     jmp 0x55f7
0x000057f0      41b901000000   mov r9d, 1
0x000057f6      4883cbff       or rbx, 0xffffffffffffffff
0x000057fa      e9a8feffff     jmp 0x56a7
0x000057ff      41b901000000   mov r9d, 1
0x00005805      4883cbff       or rbx, 0xffffffffffffffff
0x00005809      e9fafeffff     jmp 0x5708
0x0000580e      41b901000000   mov r9d, 1
0x00005814      4883cbff       or rbx, 0xffffffffffffffff
0x00005818      e962feffff     jmp 0x567f
0x0000581d      41b801000000   mov r8d, 1
0x00005823      4883c8ff       or rax, 0xffffffffffffffff
0x00005827      e92fffffff     jmp 0x575b
0x0000582c      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x00005830      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00005832      55             push rbp
0x00005833      53             push rbx
0x00005834      4889fb         mov rbx, rdi
0x00005837      e874beffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x0000583c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x0000583e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00005841      7854           js 0x5897                               ; ../coreutils-8.31/lib/fclose.c:66
0x00005843      e8a8beffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00005848      85c0           test eax, eax
0x0000584a      752c           jne 0x5878
0x0000584c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x0000584f      e85c000000     call sym.rpl_fflush
0x00005854      85c0           test eax, eax
0x00005856      743c           je 0x5894
0x00005858      e893bcffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x0000585d      448b20         mov r12d, dword [rax]
0x00005860      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00005863      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00005866      e8e5bcffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x0000586b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x0000586e      7530           jne 0x58a0
0x00005870      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00005871      5d             pop rbp
0x00005872      415c           pop r12
0x00005874      c3             ret
0x00005875      0f1f00         nop dword [rax]
0x00005878      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x0000587b      e830beffff     call sym.imp.fileno
0x00005880      31f6           xor esi, esi
0x00005882      ba01000000     mov edx, 1
0x00005887      89c7           mov edi, eax
0x00005889      e872bdffff     call sym.imp.lseek
0x0000588e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005892      75b8           jne 0x584c
0x00005894      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00005897      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00005898      5d             pop rbp
0x00005899      415c           pop r12
0x0000589b      e9b0bcffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x000058a0      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x000058a4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x000058a9      ebc5           jmp 0x5870
0x000058ab      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x000058b0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x000058b3      53             push rbx
0x000058b4      4889fb         mov rbx, rdi
0x000058b7      7411           je 0x58ca                               ; ../coreutils-8.31/lib/fflush.c:150
0x000058b9      e832beffff     call sym.imp.__freading
0x000058be      85c0           test eax, eax
0x000058c0      7408           je 0x58ca
0x000058c2      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x000058c8      750e           jne 0x58d8
0x000058ca      4889df         mov rdi, rbx
0x000058cd      5b             pop rbx
0x000058ce      e9fdbdffff     jmp sym.imp.fflush
0x000058d3      0f1f440000     nop dword [rax + rax]
0x000058d8      4889df         mov rdi, rbx
0x000058db      ba01000000     mov edx, 1
0x000058e0      31f6           xor esi, esi
0x000058e2      e809000000     call sym.rpl_fseeko
0x000058e7      4889df         mov rdi, rbx
0x000058ea      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x000058eb      e9e0bdffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x000058f0      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x000058f4      48394710       cmp qword [rdi + 0x10], rax
0x000058f8      7406           je 0x5900                               ; ../coreutils-8.31/lib/fseeko.c:32
0x000058fa      e961beffff     jmp sym.imp.fseeko
0x000058ff      90             nop
0x00005900      488b4720       mov rax, qword [rdi + 0x20]
0x00005904      48394728       cmp qword [rdi + 0x28], rax
0x00005908      75f0           jne 0x58fa                              ; ../coreutils-8.31/lib/fseeko.c:33
0x0000590a      48837f4800     cmp qword [rdi + 0x48], 0
0x0000590f      75e9           jne 0x58fa                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00005911      4154           push r12
0x00005913      55             push rbp
0x00005914      4189d4         mov r12d, edx
0x00005917      53             push rbx
0x00005918      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x0000591b      4889fb         mov rbx, rdi
0x0000591e      e88dbdffff     call sym.imp.fileno
0x00005923      4489e2         mov edx, r12d
0x00005926      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00005929      89c7           mov edi, eax
0x0000592b      e8d0bcffff     call sym.imp.lseek
0x00005930      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005934      740c           je 0x5942
0x00005936      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00005939      488983900000.  mov qword [rbx + 0x90], rax
0x00005940      31c0           xor eax, eax
0x00005942      5b             pop rbx
0x00005943      5d             pop rbp
0x00005944      415c           pop r12
0x00005946      c3             ret
0x00005947      660f1f840000.  nop word [rax + rax]
;-- rpl_mbrtowc:
0x00005950      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00005952      4154           push r12
0x00005954      4989f5         mov r13, rsi
0x00005957      55             push rbp
0x00005958      53             push rbx
0x00005959      4889fb         mov rbx, rdi
0x0000595c      4989d4         mov r12, rdx
0x0000595f      4883ec18       sub rsp, 0x18
0x00005963      64488b042528.  mov rax, qword fs:[0x28]
0x0000596c      4889442408     mov qword [rsp + 8], rax
0x00005971      31c0           xor eax, eax
0x00005973      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00005978      4885ff         test rdi, rdi
0x0000597b      480f44d8       cmove rbx, rax
0x0000597f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00005982      e839bcffff     call sym.imp.mbrtowc
0x00005987      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x0000598b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x0000598e      7620           jbe 0x59b0                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00005990      4d85e4         test r12, r12
0x00005993      741b           je 0x59b0
0x00005995      31ff           xor edi, edi
0x00005997      e8c4000000     call sym.hard_locale
0x0000599c      84c0           test al, al
0x0000599e      7510           jne 0x59b0
0x000059a0      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x000059a5      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x000059aa      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x000059ac      0f1f4000       nop dword [rax]
0x000059b0      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x000059b5      644833142528.  xor rdx, qword fs:[0x28]
0x000059be      4889e8         mov rax, rbp
0x000059c1      750b           jne 0x59ce
0x000059c3      4883c418       add rsp, 0x18
0x000059c7      5b             pop rbx
0x000059c8      5d             pop rbp
0x000059c9      415c           pop r12
0x000059cb      415d           pop r13
0x000059cd      c3             ret
0x000059ce      e8cdbbffff     call sym.imp.__stack_chk_fail
0x000059d3      662e0f1f8400.  nop word cs:[rax + rax]
0x000059dd      0f1f00         nop dword [rax]
;-- close_stream:
0x000059e0      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x000059e2      55             push rbp
0x000059e3      4889fd         mov rbp, rdi
0x000059e6      53             push rbx
0x000059e7      e834bbffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x000059ec      8b5d00         mov ebx, dword [rbp]
0x000059ef      4889ef         mov rdi, rbp
0x000059f2      4989c4         mov r12, rax
0x000059f5      e836feffff     call sym.rpl_fclose
0x000059fa      83e320         and ebx, 0x20                           ; "@"
0x000059fd      85db           test ebx, ebx
0x000059ff      7517           jne 0x5a18
0x00005a01      85c0           test eax, eax
0x00005a03      740a           je 0x5a0f                               ; stdio.h:-186
0x00005a05      4d85e4         test r12, r12                           ; stdio.h:-178
0x00005a08      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00005a0d      7439           je 0x5a48
0x00005a0f      5b             pop rbx
0x00005a10      5d             pop rbp
0x00005a11      415c           pop r12
0x00005a13      c3             ret
0x00005a14      0f1f4000       nop dword [rax]
0x00005a18      85c0           test eax, eax
0x00005a1a      751c           jne 0x5a38
0x00005a1c      e8cfbaffff     call sym.imp.__errno_location
0x00005a21      c70000000000   mov dword [rax], 0
0x00005a27      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00005a2c      5b             pop rbx
0x00005a2d      5d             pop rbp
0x00005a2e      415c           pop r12
0x00005a30      c3             ret
0x00005a31      0f1f80000000.  nop dword [rax]
0x00005a38      5b             pop rbx
0x00005a39      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00005a3e      5d             pop rbp                                 ; stdio.h:-186
0x00005a3f      415c           pop r12
0x00005a41      c3             ret
0x00005a42      660f1f440000   nop word [rax + rax]
0x00005a48      e8a3baffff     call sym.imp.__errno_location
0x00005a4d      833809         cmp dword [rax], 9
0x00005a50      5b             pop rbx
0x00005a51      5d             pop rbp
0x00005a52      415c           pop r12                                 ; stdio.h:-178
0x00005a54      0f95c0         setne al
0x00005a57      0fb6c0         movzx eax, al
0x00005a5a      f7d8           neg eax
0x00005a5c      c3             ret
0x00005a5d      0f1f00         nop dword [rax]
;-- hard_locale:
0x00005a60      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00005a64      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00005a66      e8b5bcffff     call sym.imp.setlocale
0x00005a6b      4889c2         mov rdx, rax
0x00005a6e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00005a73      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00005a76      741d           je 0x5a95
0x00005a78      488d3dcc1100.  lea rdi, [0x00006c4b]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x00005a7f      b902000000     mov ecx, 2
0x00005a84      4889d6         mov rsi, rdx
0x00005a87      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005a89      0f97c1         seta cl
0x00005a8c      80d900         sbb cl, 0
0x00005a8f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00005a91      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00005a93      750b           jne 0x5aa0
0x00005a95      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00005a99      c3             ret
0x00005a9a      660f1f440000   nop word [rax + rax]
0x00005aa0      488d3da61100.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x6c4d ; "POSIX"
0x00005aa7      b906000000     mov ecx, 6
0x00005aac      4889d6         mov rsi, rdx
0x00005aaf      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005ab1      0f97c0         seta al
0x00005ab4      1c00           sbb al, 0
0x00005ab6      84c0           test al, al
0x00005ab8      0f95c0         setne al
0x00005abb      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00005abf      c3             ret
;-- locale_charset:
0x00005ac0      4883ec08       sub rsp, 8
0x00005ac4      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00005ac9      e812bcffff     call sym.imp.nl_langinfo
0x00005ace      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00005ad1      741d           je 0x5af0
0x00005ad3      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00005ad6      488d15761100.  lea rdx, str.ASCII                      ; 0x6c53 ; "ASCII"
0x00005add      480f44c2       cmove rax, rdx
0x00005ae1      4883c408       add rsp, 8
0x00005ae5      c3             ret
0x00005ae6      662e0f1f8400.  nop word cs:[rax + rax]
0x00005af0      488d055c1100.  lea rax, str.ASCII                      ; 0x6c53 ; "ASCII"
0x00005af7      4883c408       add rsp, 8
0x00005afb      c3             ret
0x00005afc      0f1f4000       nop dword [rax]
;-- __libc_csu_init:
0x00005b00      4157           push r15
0x00005b02      4156           push r14
0x00005b04      4989d7         mov r15, rdx
0x00005b07      4155           push r13
0x00005b09      4154           push r12
0x00005b0b      4c8d25fe2f20.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x208b10
0x00005b12      55             push rbp
0x00005b13      488d2dfe2f20.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x208b18
0x00005b1a      53             push rbx
0x00005b1b      4189fd         mov r13d, edi
0x00005b1e      4989f6         mov r14, rsi
0x00005b21      4c29e5         sub rbp, r12
0x00005b24      4883ec08       sub rsp, 8
0x00005b28      48c1fd03       sar rbp, 3
0x00005b2c      e877b9ffff     call sym._init
0x00005b31      4885ed         test rbp, rbp
0x00005b34      7420           je 0x5b56
0x00005b36      31db           xor ebx, ebx
0x00005b38      0f1f84000000.  nop dword [rax + rax]
0x00005b40      4c89fa         mov rdx, r15
0x00005b43      4c89f6         mov rsi, r14
0x00005b46      4489ef         mov edi, r13d
0x00005b49      41ff14dc       call qword [r12 + rbx*8]
0x00005b4d      4883c301       add rbx, 1
0x00005b51      4839dd         cmp rbp, rbx
0x00005b54      75ea           jne 0x5b40
0x00005b56      4883c408       add rsp, 8
0x00005b5a      5b             pop rbx
0x00005b5b      5d             pop rbp
0x00005b5c      415c           pop r12
0x00005b5e      415d           pop r13
0x00005b60      415e           pop r14
0x00005b62      415f           pop r15
0x00005b64      c3             ret
0x00005b65      90             nop
0x00005b66      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00005b70      f3c3           ret
0x00005b72      662e0f1f8400.  nop word cs:[rax + rax]
0x00005b7c      0f1f4000       nop dword [rax]
;-- atexit:
0x00005b80      488b15813420.  mov rdx, qword [obj.__dso_handle]       ; [0x209008:8]=0x209008 obj.__dso_handle
0x00005b87      31f6           xor esi, esi
0x00005b89      e9f2bbffff     jmp sym.imp.__cxa_atexit
0x00005b8e      0000           add byte [rax], al
