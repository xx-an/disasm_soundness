;-- section..plt:
;-- .plt:
0x000028e0      ff35eaa22100   push qword [0x0021cbd0]                 ; [12] -r-x section size 2032 named .plt
0x000028e6      ff25eca22100   jmp qword [0x0021cbd8]                  ; [0x21cbd8:8]=0
0x000028ec      0f1f4000       nop dword [rax]
;-- imp.endgrent:
0x000028f0      ff25eaa22100   jmp qword [reloc.endgrent]              ; [0x21cbe0:8]=0x28f6
0x000028f6      6800000000     push 0
0x000028fb      e9e0ffffff     jmp sym..plt
;-- imp.getenv:
0x00002900      ff25e2a22100   jmp qword [reloc.getenv]                ; [0x21cbe8:8]=0x2906
0x00002906      6801000000     push 1                                  ; "ELF\x02\x01\x01"
0x0000290b      e9d0ffffff     jmp sym..plt
;-- imp.__snprintf_chk:
0x00002910      ff25daa22100   jmp qword [reloc.__snprintf_chk]        ; [0x21cbf0:8]=0x2916
0x00002916      6802000000     push 2                                  ; "LF\x02\x01\x01"
0x0000291b      e9c0ffffff     jmp sym..plt
;-- imp.raise:
0x00002920      ff25d2a22100   jmp qword [reloc.raise]                 ; [0x21cbf8:8]=0x2926 ; "&)"
0x00002926      6803000000     push 3                                  ; "F\x02\x01\x01"
0x0000292b      e9b0ffffff     jmp sym..plt
;-- imp.utimensat:
0x00002930      ff25caa22100   jmp qword [reloc.utimensat]             ; [0x21cc00:8]=0x2936 ; "6)"
0x00002936      6804000000     push 4
0x0000293b      e9a0ffffff     jmp sym..plt
;-- imp.abort:
0x00002940      ff25c2a22100   jmp qword [reloc.abort]                 ; [0x21cc08:8]=0x2946 ; "F)"
0x00002946      6805000000     push 5
0x0000294b      e990ffffff     jmp sym..plt
;-- imp.__errno_location:
0x00002950      ff25baa22100   jmp qword [reloc.__errno_location]      ; [0x21cc10:8]=0x2956 ; "V)"
0x00002956      6806000000     push 6
0x0000295b      e980ffffff     jmp sym..plt
;-- imp.unlink:
0x00002960      ff25b2a22100   jmp qword [reloc.unlink]                ; [0x21cc18:8]=0x2966 ; "f)"
0x00002966      6807000000     push 7
0x0000296b      e970ffffff     jmp sym..plt
;-- imp.strncmp:
0x00002970      ff25aaa22100   jmp qword [reloc.strncmp]               ; [0x21cc20:8]=0x2976 ; "v)"
0x00002976      6808000000     push 8
0x0000297b      e960ffffff     jmp sym..plt
;-- imp._exit:
0x00002980      ff25a2a22100   jmp qword [reloc._exit]                 ; [0x21cc28:8]=0x2986
0x00002986      6809000000     push 9
0x0000298b      e950ffffff     jmp sym..plt
;-- imp.strcpy:
0x00002990      ff259aa22100   jmp qword [reloc.strcpy]                ; [0x21cc30:8]=0x2996
0x00002996      680a000000     push 0xa
0x0000299b      e940ffffff     jmp sym..plt
;-- imp.__fpending:
0x000029a0      ff2592a22100   jmp qword [reloc.__fpending]            ; [0x21cc38:8]=0x29a6
0x000029a6      680b000000     push 0xb
0x000029ab      e930ffffff     jmp sym..plt
;-- imp.__read_chk:
0x000029b0      ff258aa22100   jmp qword [reloc.__read_chk]            ; [0x21cc40:8]=0x29b6
0x000029b6      680c000000     push 0xc
0x000029bb      e920ffffff     jmp sym..plt
;-- imp.mkdir:
0x000029c0      ff2582a22100   jmp qword [reloc.mkdir]                 ; [0x21cc48:8]=0x29c6
0x000029c6      680d000000     push 0xd
0x000029cb      e910ffffff     jmp sym..plt
;-- imp.unlinkat:
0x000029d0      ff257aa22100   jmp qword [reloc.unlinkat]              ; [0x21cc50:8]=0x29d6
0x000029d6      680e000000     push 0xe
0x000029db      e900ffffff     jmp sym..plt
;-- imp.qsort:
0x000029e0      ff2572a22100   jmp qword [reloc.qsort]                 ; [0x21cc58:8]=0x29e6
0x000029e6      680f000000     push 0xf
0x000029eb      e9f0feffff     jmp sym..plt
;-- imp.readlink:
0x000029f0      ff256aa22100   jmp qword [reloc.readlink]              ; [0x21cc60:8]=0x29f6
0x000029f6      6810000000     push 0x10
0x000029fb      e9e0feffff     jmp sym..plt
;-- imp.fcntl:
0x00002a00      ff2562a22100   jmp qword [reloc.fcntl]                 ; [0x21cc68:8]=0x2a06
0x00002a06      6811000000     push 0x11
0x00002a0b      e9d0feffff     jmp sym..plt
;-- imp.clock_gettime:
0x00002a10      ff255aa22100   jmp qword [reloc.clock_gettime]         ; [0x21cc70:8]=0x2a16
0x00002a16      6812000000     push 0x12                               ; u">\x01"
0x00002a1b      e9c0feffff     jmp sym..plt
;-- imp.write:
0x00002a20      ff2552a22100   jmp qword [reloc.write]                 ; [0x21cc78:8]=0x2a26 ; "&*"
0x00002a26      6813000000     push 0x13
0x00002a2b      e9b0feffff     jmp sym..plt
;-- imp.getpid:
0x00002a30      ff254aa22100   jmp qword [reloc.getpid]                ; [0x21cc80:8]=0x2a36 ; "6*"
0x00002a36      6814000000     push 0x14
0x00002a3b      e9a0feffff     jmp sym..plt
;-- imp.fread_unlocked:
0x00002a40      ff2542a22100   jmp qword [reloc.fread_unlocked]        ; [0x21cc88:8]=0x2a46 ; "F*"
0x00002a46      6815000000     push 0x15
0x00002a4b      e990feffff     jmp sym..plt
;-- imp.textdomain:
0x00002a50      ff253aa22100   jmp qword [reloc.textdomain]            ; [0x21cc90:8]=0x2a56 ; "V*"
0x00002a56      6816000000     push 0x16
0x00002a5b      e980feffff     jmp sym..plt
;-- imp.pathconf:
0x00002a60      ff2532a22100   jmp qword [reloc.pathconf]              ; [0x21cc98:8]=0x2a66 ; "f*"
0x00002a66      6817000000     push 0x17
0x00002a6b      e970feffff     jmp sym..plt
;-- imp.__open_2:
0x00002a70      ff252aa22100   jmp qword [reloc.__open_2]              ; [0x21cca0:8]=0x2a76 ; "v*"
0x00002a76      6818000000     push 0x18                               ; "0>"
0x00002a7b      e960feffff     jmp sym..plt
;-- imp.fclose:
0x00002a80      ff2522a22100   jmp qword [reloc.fclose]                ; [0x21cca8:8]=0x2a86
0x00002a86      6819000000     push 0x19                               ; ">"
0x00002a8b      e950feffff     jmp sym..plt
;-- imp.opendir:
0x00002a90      ff251aa22100   jmp qword [reloc.opendir]               ; [0x21ccb0:8]=0x2a96
0x00002a96      681a000000     push 0x1a
0x00002a9b      e940feffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00002aa0      ff2512a22100   jmp qword [reloc.bindtextdomain]        ; [0x21ccb8:8]=0x2aa6
0x00002aa6      681b000000     push 0x1b
0x00002aab      e930feffff     jmp sym..plt
;-- imp.stpcpy:
0x00002ab0      ff250aa22100   jmp qword [reloc.stpcpy]                ; [0x21ccc0:8]=0x2ab6
0x00002ab6      681c000000     push 0x1c
0x00002abb      e920feffff     jmp sym..plt
;-- imp.rmdir:
0x00002ac0      ff2502a22100   jmp qword [reloc.rmdir]                 ; [0x21ccc8:8]=0x2ac6
0x00002ac6      681d000000     push 0x1d
0x00002acb      e910feffff     jmp sym..plt
;-- imp.dcgettext:
0x00002ad0      ff25faa12100   jmp qword [reloc.dcgettext]             ; [0x21ccd0:8]=0x2ad6
0x00002ad6      681e000000     push 0x1e
0x00002adb      e900feffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00002ae0      ff25f2a12100   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x21ccd8:8]=0x2ae6
0x00002ae6      681f000000     push 0x1f
0x00002aeb      e9f0fdffff     jmp sym..plt
;-- imp.strlen:
0x00002af0      ff25eaa12100   jmp qword [reloc.strlen]                ; [0x21cce0:8]=0x2af6
0x00002af6      6820000000     push 0x20                               ; "@"
0x00002afb      e9e0fdffff     jmp sym..plt
;-- imp.__lxstat:
0x00002b00      ff25e2a12100   jmp qword [reloc.__lxstat]              ; [0x21cce8:8]=0x2b06
0x00002b06      6821000000     push 0x21                               ; '!'
0x00002b0b      e9d0fdffff     jmp sym..plt
;-- imp.openat:
0x00002b10      ff25daa12100   jmp qword [reloc.openat]                ; [0x21ccf0:8]=0x2b16
0x00002b16      6822000000     push 0x22                               ; '"'
0x00002b1b      e9c0fdffff     jmp sym..plt
;-- imp.chdir:
0x00002b20      ff25d2a12100   jmp qword [reloc.chdir]                 ; [0x21ccf8:8]=0x2b26 ; "&+"
0x00002b26      6823000000     push 0x23                               ; '#'
0x00002b2b      e9b0fdffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00002b30      ff25caa12100   jmp qword [reloc.__stack_chk_fail]      ; [0x21cd00:8]=0x2b36 ; "6+"
0x00002b36      6824000000     push 0x24                               ; '$'
0x00002b3b      e9a0fdffff     jmp sym..plt
;-- imp.getuid:
0x00002b40      ff25c2a12100   jmp qword [reloc.getuid]                ; [0x21cd08:8]=0x2b46 ; "F+"
0x00002b46      6825000000     push 0x25                               ; '%'
0x00002b4b      e990fdffff     jmp sym..plt
;-- imp.getopt_long:
0x00002b50      ff25baa12100   jmp qword [reloc.getopt_long]           ; [0x21cd10:8]=0x2b56 ; "V+"
0x00002b56      6826000000     push 0x26                               ; '&'
0x00002b5b      e980fdffff     jmp sym..plt
;-- imp.mbrtowc:
0x00002b60      ff25b2a12100   jmp qword [reloc.mbrtowc]               ; [0x21cd18:8]=0x2b66 ; "f+"
0x00002b66      6827000000     push 0x27                               ; '''
0x00002b6b      e970fdffff     jmp sym..plt
;-- imp.strchr:
0x00002b70      ff25aaa12100   jmp qword [reloc.strchr]                ; [0x21cd20:8]=0x2b76 ; "v+"
0x00002b76      6828000000     push 0x28                               ; '('
0x00002b7b      e960fdffff     jmp sym..plt
;-- imp.__fxstatat:
0x00002b80      ff25a2a12100   jmp qword [reloc.__fxstatat]            ; [0x21cd28:8]=0x2b86
0x00002b86      6829000000     push 0x29                               ; ')'
0x00002b8b      e950fdffff     jmp sym..plt
;-- imp.__overflow:
0x00002b90      ff259aa12100   jmp qword [reloc.__overflow]            ; [0x21cd30:8]=0x2b96
0x00002b96      682a000000     push 0x2a                               ; '*' ; "\t"
0x00002b9b      e940fdffff     jmp sym..plt
;-- imp.strrchr:
0x00002ba0      ff2592a12100   jmp qword [reloc.strrchr]               ; [0x21cd38:8]=0x2ba6
0x00002ba6      682b000000     push 0x2b                               ; '+'
0x00002bab      e930fdffff     jmp sym..plt
;-- imp.ftruncate:
0x00002bb0      ff258aa12100   jmp qword [reloc.ftruncate]             ; [0x21cd40:8]=0x2bb6
0x00002bb6      682c000000     push 0x2c                               ; ','
0x00002bbb      e920fdffff     jmp sym..plt
;-- imp.lseek:
0x00002bc0      ff2582a12100   jmp qword [reloc.lseek]                 ; [0x21cd48:8]=0x2bc6
0x00002bc6      682d000000     push 0x2d                               ; '-'
0x00002bcb      e910fdffff     jmp sym..plt
;-- imp.gettimeofday:
0x00002bd0      ff257aa12100   jmp qword [reloc.gettimeofday]          ; [0x21cd50:8]=0x2bd6
0x00002bd6      682e000000     push 0x2e                               ; '.'
0x00002bdb      e900fdffff     jmp sym..plt
;-- imp.__assert_fail:
0x00002be0      ff2572a12100   jmp qword [reloc.__assert_fail]         ; [0x21cd58:8]=0x2be6
0x00002be6      682f000000     push 0x2f                               ; '/'
0x00002beb      e9f0fcffff     jmp sym..plt
;-- imp.memset:
0x00002bf0      ff256aa12100   jmp qword [reloc.memset]                ; [0x21cd60:8]=0x2bf6
0x00002bf6      6830000000     push 0x30                               ; '0'
0x00002bfb      e9e0fcffff     jmp sym..plt
;-- imp.geteuid:
0x00002c00      ff2562a12100   jmp qword [reloc.geteuid]               ; [0x21cd68:8]=0x2c06
0x00002c06      6831000000     push 0x31                               ; '1'
0x00002c0b      e9d0fcffff     jmp sym..plt
;-- imp.ioctl:
0x00002c10      ff255aa12100   jmp qword [reloc.ioctl]                 ; [0x21cd70:8]=0x2c16
0x00002c16      6832000000     push 0x32                               ; '2'
0x00002c1b      e9c0fcffff     jmp sym..plt
;-- imp.canonicalize_file_name:
0x00002c20      ff2552a12100   jmp qword [reloc.canonicalize_file_name] ; [0x21cd78:8]=0x2c26 ; "&,"
0x00002c26      6833000000     push 0x33                               ; '3'
0x00002c2b      e9b0fcffff     jmp sym..plt
;-- imp.close:
0x00002c30      ff254aa12100   jmp qword [reloc.close]                 ; [0x21cd80:8]=0x2c36 ; "6,"
0x00002c36      6834000000     push 0x34                               ; '4' ; u"@8\t@%$\x06"
0x00002c3b      e9a0fcffff     jmp sym..plt
;-- imp.rewinddir:
0x00002c40      ff2542a12100   jmp qword [reloc.rewinddir]             ; [0x21cd88:8]=0x2c46 ; "F,"
0x00002c46      6835000000     push 0x35                               ; '5'
0x00002c4b      e990fcffff     jmp sym..plt
;-- imp.strspn:
0x00002c50      ff253aa12100   jmp qword [reloc.strspn]                ; [0x21cd90:8]=0x2c56 ; "V,"
0x00002c56      6836000000     push 0x36                               ; '6' ; u"8\t@%$\x06"
0x00002c5b      e980fcffff     jmp sym..plt
;-- imp.closedir:
0x00002c60      ff2532a12100   jmp qword [reloc.closedir]              ; [0x21cd98:8]=0x2c66 ; "f,"
0x00002c66      6837000000     push 0x37                               ; '7'
0x00002c6b      e970fcffff     jmp sym..plt
;-- imp.posix_fadvise:
0x00002c70      ff252aa12100   jmp qword [reloc.posix_fadvise]         ; [0x21cda0:8]=0x2c76 ; "v,"
0x00002c76      6838000000     push 0x38                               ; '8' ; u"\t@%$\x06"
0x00002c7b      e960fcffff     jmp sym..plt
;-- imp.read:
0x00002c80      ff2522a12100   jmp qword [reloc.read]                  ; [0x21cda8:8]=0x2c86
0x00002c86      6839000000     push 0x39                               ; '9'
0x00002c8b      e950fcffff     jmp sym..plt
;-- imp.memcmp:
0x00002c90      ff251aa12100   jmp qword [reloc.memcmp]                ; [0x21cdb0:8]=0x2c96
0x00002c96      683a000000     push 0x3a                               ; ':' ; u"@%$\x06"
0x00002c9b      e940fcffff     jmp sym..plt
;-- imp.fallocate:
0x00002ca0      ff2512a12100   jmp qword [reloc.fallocate]             ; [0x21cdb8:8]=0x2ca6
0x00002ca6      683b000000     push 0x3b                               ; ';'
0x00002cab      e930fcffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00002cb0      ff250aa12100   jmp qword [reloc.fputs_unlocked]        ; [0x21cdc0:8]=0x2cb6
0x00002cb6      683c000000     push 0x3c                               ; '<' ; u"%$\x06"
0x00002cbb      e920fcffff     jmp sym..plt
;-- imp.utimes:
0x00002cc0      ff2502a12100   jmp qword [reloc.utimes]                ; [0x21cdc8:8]=0x2cc6
0x00002cc6      683d000000     push 0x3d                               ; '='
0x00002ccb      e910fcffff     jmp sym..plt
;-- imp.calloc:
0x00002cd0      ff25faa02100   jmp qword [reloc.calloc]                ; [0x21cdd0:8]=0x2cd6
0x00002cd6      683e000000     push 0x3e                               ; '>' ; u"$\x06"
0x00002cdb      e900fcffff     jmp sym..plt
;-- imp.__getdelim:
0x00002ce0      ff25f2a02100   jmp qword [reloc.__getdelim]            ; [0x21cdd8:8]=0x2ce6
0x00002ce6      683f000000     push 0x3f                               ; '?'
0x00002ceb      e9f0fbffff     jmp sym..plt
;-- imp.strcmp:
0x00002cf0      ff25eaa02100   jmp qword [reloc.strcmp]                ; [0x21cde0:8]=0x2cf6
0x00002cf6      6840000000     push 0x40                               ; segment.PHDR
0x00002cfb      e9e0fbffff     jmp sym..plt
;-- imp.signal:
0x00002d00      ff25e2a02100   jmp qword [reloc.signal]                ; [0x21cde8:8]=0x2d06
0x00002d06      6841000000     push 0x41                               ; 'A'
0x00002d0b      e9d0fbffff     jmp sym..plt
;-- imp.dirfd:
0x00002d10      ff25daa02100   jmp qword [reloc.dirfd]                 ; [0x21cdf0:8]=0x2d16
0x00002d16      6842000000     push 0x42                               ; 'B'
0x00002d1b      e9c0fbffff     jmp sym..plt
;-- imp.getpwnam:
0x00002d20      ff25d2a02100   jmp qword [reloc.getpwnam]              ; [0x21cdf8:8]=0x2d26 ; "&-"
0x00002d26      6843000000     push 0x43                               ; 'C'
0x00002d2b      e9b0fbffff     jmp sym..plt
;-- imp.fpathconf:
0x00002d30      ff25caa02100   jmp qword [reloc.fpathconf]             ; [0x21ce00:8]=0x2d36 ; "6-"
0x00002d36      6844000000     push 0x44                               ; 'D'
0x00002d3b      e9a0fbffff     jmp sym..plt
;-- imp.rpmatch:
0x00002d40      ff25c2a02100   jmp qword [reloc.rpmatch]               ; [0x21ce08:8]=0x2d46 ; "F-"
0x00002d46      6845000000     push 0x45                               ; 'E'
0x00002d4b      e990fbffff     jmp sym..plt
;-- imp.syscall:
0x00002d50      ff25baa02100   jmp qword [reloc.syscall]               ; [0x21ce10:8]=0x2d56 ; "V-"
0x00002d56      6846000000     push 0x46                               ; 'F'
0x00002d5b      e980fbffff     jmp sym..plt
;-- imp.mkfifo:
0x00002d60      ff25b2a02100   jmp qword [reloc.mkfifo]                ; [0x21ce18:8]=0x2d66 ; "f-"
0x00002d66      6847000000     push 0x47                               ; 'G'
0x00002d6b      e970fbffff     jmp sym..plt
;-- imp.umask:
0x00002d70      ff25aaa02100   jmp qword [reloc.umask]                 ; [0x21ce20:8]=0x2d76 ; "v-"
0x00002d76      6848000000     push 0x48                               ; 'H' ; "@"
0x00002d7b      e960fbffff     jmp sym..plt
;-- imp.memcpy:
0x00002d80      ff25a2a02100   jmp qword [reloc.memcpy]                ; [0x21ce28:8]=0x2d86
0x00002d86      6849000000     push 0x49                               ; 'I'
0x00002d8b      e950fbffff     jmp sym..plt
;-- imp.getgrnam:
0x00002d90      ff259aa02100   jmp qword [reloc.getgrnam]              ; [0x21ce30:8]=0x2d96
0x00002d96      684a000000     push 0x4a                               ; 'J'
0x00002d9b      e940fbffff     jmp sym..plt
;-- imp.__xmknod:
0x00002da0      ff2592a02100   jmp qword [reloc.__xmknod]              ; [0x21ce38:8]=0x2da6
0x00002da6      684b000000     push 0x4b                               ; 'K'
0x00002dab      e930fbffff     jmp sym..plt
;-- imp.fileno:
0x00002db0      ff258aa02100   jmp qword [reloc.fileno]                ; [0x21ce40:8]=0x2db6
0x00002db6      684c000000     push 0x4c                               ; 'L'
0x00002dbb      e920fbffff     jmp sym..plt
;-- imp.getgid:
0x00002dc0      ff2582a02100   jmp qword [reloc.getgid]                ; [0x21ce48:8]=0x2dc6
0x00002dc6      684d000000     push 0x4d                               ; 'M'
0x00002dcb      e910fbffff     jmp sym..plt
;-- imp.__xstat:
0x00002dd0      ff257aa02100   jmp qword [reloc.__xstat]               ; [0x21ce50:8]=0x2dd6
0x00002dd6      684e000000     push 0x4e                               ; 'N'
0x00002ddb      e900fbffff     jmp sym..plt
;-- imp.readdir:
0x00002de0      ff2572a02100   jmp qword [reloc.readdir]               ; [0x21ce58:8]=0x2de6
0x00002de6      684f000000     push 0x4f                               ; 'O'
0x00002deb      e9f0faffff     jmp sym..plt
;-- imp.malloc:
0x00002df0      ff256aa02100   jmp qword [reloc.malloc]                ; [0x21ce60:8]=0x2df6
0x00002df6      6850000000     push 0x50                               ; 'P' ; "@"
0x00002dfb      e9e0faffff     jmp sym..plt
;-- imp.fflush:
0x00002e00      ff2562a02100   jmp qword [reloc.fflush]                ; [0x21ce68:8]=0x2e06
0x00002e06      6851000000     push 0x51                               ; 'Q'
0x00002e0b      e9d0faffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00002e10      ff255aa02100   jmp qword [reloc.nl_langinfo]           ; [0x21ce70:8]=0x2e16
0x00002e16      6852000000     push 0x52                               ; 'R'
0x00002e1b      e9c0faffff     jmp sym..plt
;-- imp.__fxstat:
0x00002e20      ff2552a02100   jmp qword [reloc.__fxstat]              ; [0x21ce78:8]=0x2e26 ; "&."
0x00002e26      6853000000     push 0x53                               ; 'S'
0x00002e2b      e9b0faffff     jmp sym..plt
;-- imp.endpwent:
0x00002e30      ff254aa02100   jmp qword [reloc.endpwent]              ; [0x21ce80:8]=0x2e36 ; "6."
0x00002e36      6854000000     push 0x54                               ; 'T'
0x00002e3b      e9a0faffff     jmp sym..plt
;-- imp.lchown:
0x00002e40      ff2542a02100   jmp qword [reloc.lchown]                ; [0x21ce88:8]=0x2e46 ; "F."
0x00002e46      6855000000     push 0x55                               ; 'U'
0x00002e4b      e990faffff     jmp sym..plt
;-- imp.__freading:
0x00002e50      ff253aa02100   jmp qword [reloc.__freading]            ; [0x21ce90:8]=0x2e56 ; "V."
0x00002e56      6856000000     push 0x56                               ; 'V'
0x00002e5b      e980faffff     jmp sym..plt
;-- imp.fchdir:
0x00002e60      ff2532a02100   jmp qword [reloc.fchdir]                ; [0x21ce98:8]=0x2e66 ; "f."
0x00002e66      6857000000     push 0x57                               ; 'W'
0x00002e6b      e970faffff     jmp sym..plt
;-- imp.fwrite_unlocked:
0x00002e70      ff252aa02100   jmp qword [reloc.fwrite_unlocked]       ; [0x21cea0:8]=0x2e76 ; "v."
0x00002e76      6858000000     push 0x58                               ; 'X' ; "@"
0x00002e7b      e960faffff     jmp sym..plt
;-- imp.chown:
0x00002e80      ff2522a02100   jmp qword [reloc.chown]                 ; [0x21cea8:8]=0x2e86
0x00002e86      6859000000     push 0x59                               ; 'Y'
0x00002e8b      e950faffff     jmp sym..plt
;-- imp.realloc:
0x00002e90      ff251aa02100   jmp qword [reloc.realloc]               ; [0x21ceb0:8]=0x2e96
0x00002e96      685a000000     push 0x5a                               ; 'Z'
0x00002e9b      e940faffff     jmp sym..plt
;-- imp.stpncpy:
0x00002ea0      ff2512a02100   jmp qword [reloc.stpncpy]               ; [0x21ceb8:8]=0x2ea6
0x00002ea6      685b000000     push 0x5b                               ; '['
0x00002eab      e930faffff     jmp sym..plt
;-- imp.fdopen:
0x00002eb0      ff250aa02100   jmp qword [reloc.fdopen]                ; [0x21cec0:8]=0x2eb6
0x00002eb6      685c000000     push 0x5c                               ; '\'
0x00002ebb      e920faffff     jmp sym..plt
;-- imp.linkat:
0x00002ec0      ff2502a02100   jmp qword [reloc.linkat]                ; [0x21cec8:8]=0x2ec6
0x00002ec6      685d000000     push 0x5d                               ; ']'
0x00002ecb      e910faffff     jmp sym..plt
;-- imp.setlocale:
0x00002ed0      ff25fa9f2100   jmp qword [reloc.setlocale]             ; [0x21ced0:8]=0x2ed6
0x00002ed6      685e000000     push 0x5e                               ; '^'
0x00002edb      e900faffff     jmp sym..plt
;-- imp.__printf_chk:
0x00002ee0      ff25f29f2100   jmp qword [reloc.__printf_chk]          ; [0x21ced8:8]=0x2ee6
0x00002ee6      685f000000     push 0x5f                               ; '_'
0x00002eeb      e9f0f9ffff     jmp sym..plt
;-- imp.fchmod:
0x00002ef0      ff25ea9f2100   jmp qword [reloc.fchmod]                ; [0x21cee0:8]=0x2ef6
0x00002ef6      6860000000     push 0x60                               ; '`'
0x00002efb      e9e0f9ffff     jmp sym..plt
;-- imp.setvbuf:
0x00002f00      ff25e29f2100   jmp qword [reloc.setvbuf]               ; [0x21cee8:8]=0x2f06
0x00002f06      6861000000     push 0x61                               ; 'a'
0x00002f0b      e9d0f9ffff     jmp sym..plt
;-- imp.chmod:
0x00002f10      ff25da9f2100   jmp qword [reloc.chmod]                 ; [0x21cef0:8]=0x2f16
0x00002f16      6862000000     push 0x62                               ; 'b'
0x00002f1b      e9c0f9ffff     jmp sym..plt
;-- imp.mempcpy:
0x00002f20      ff25d29f2100   jmp qword [reloc.mempcpy]               ; [0x21cef8:8]=0x2f26 ; "&/"
0x00002f26      6863000000     push 0x63                               ; 'c'
0x00002f2b      e9b0f9ffff     jmp sym..plt
;-- imp.error:
0x00002f30      ff25ca9f2100   jmp qword [reloc.error]                 ; [0x21cf00:8]=0x2f36 ; "6/"
0x00002f36      6864000000     push 0x64                               ; 'd'
0x00002f3b      e9a0f9ffff     jmp sym..plt
;-- imp.waitpid:
0x00002f40      ff25c29f2100   jmp qword [reloc.waitpid]               ; [0x21cf08:8]=0x2f46 ; "F/"
0x00002f46      6865000000     push 0x65                               ; 'e'
0x00002f4b      e990f9ffff     jmp sym..plt
;-- imp.__explicit_bzero_chk:
0x00002f50      ff25ba9f2100   jmp qword [reloc.__explicit_bzero_chk]  ; [0x21cf10:8]=0x2f56 ; "V/"
0x00002f56      6866000000     push 0x66                               ; 'f'
0x00002f5b      e980f9ffff     jmp sym..plt
;-- imp.open:
0x00002f60      ff25b29f2100   jmp qword [reloc.open]                  ; [0x21cf18:8]=0x2f66 ; "f/"
0x00002f66      6867000000     push 0x67                               ; 'g'
0x00002f6b      e970f9ffff     jmp sym..plt
;-- imp.fseeko:
0x00002f70      ff25aa9f2100   jmp qword [reloc.fseeko]                ; [0x21cf20:8]=0x2f76 ; "v/"
0x00002f76      6868000000     push 0x68                               ; 'h'
0x00002f7b      e960f9ffff     jmp sym..plt
;-- imp.fchown:
0x00002f80      ff25a29f2100   jmp qword [reloc.fchown]                ; [0x21cf28:8]=0x2f86
0x00002f86      6869000000     push 0x69                               ; 'i'
0x00002f8b      e950f9ffff     jmp sym..plt
;-- imp.fopen:
0x00002f90      ff259a9f2100   jmp qword [reloc.fopen]                 ; [0x21cf30:8]=0x2f96
0x00002f96      686a000000     push 0x6a                               ; 'j'
0x00002f9b      e940f9ffff     jmp sym..plt
;-- imp.rename:
0x00002fa0      ff25929f2100   jmp qword [reloc.rename]                ; [0x21cf38:8]=0x2fa6
0x00002fa6      686b000000     push 0x6b                               ; 'k'
0x00002fab      e930f9ffff     jmp sym..plt
;-- imp.fdopendir:
0x00002fb0      ff258a9f2100   jmp qword [reloc.fdopendir]             ; [0x21cf40:8]=0x2fb6
0x00002fb6      686c000000     push 0x6c                               ; 'l'
0x00002fbb      e920f9ffff     jmp sym..plt
;-- imp.futimens:
0x00002fc0      ff25829f2100   jmp qword [reloc.futimens]              ; [0x21cf48:8]=0x2fc6
0x00002fc6      686d000000     push 0x6d                               ; 'm'
0x00002fcb      e910f9ffff     jmp sym..plt
;-- imp.euidaccess:
0x00002fd0      ff257a9f2100   jmp qword [reloc.euidaccess]            ; [0x21cf50:8]=0x2fd6
0x00002fd6      686e000000     push 0x6e                               ; 'n'
0x00002fdb      e900f9ffff     jmp sym..plt
;-- imp.strtoul:
0x00002fe0      ff25729f2100   jmp qword [reloc.strtoul]               ; [0x21cf58:8]=0x2fe6
0x00002fe6      686f000000     push 0x6f                               ; 'o'
0x00002feb      e9f0f8ffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00002ff0      ff256a9f2100   jmp qword [reloc.__cxa_atexit]          ; [0x21cf60:8]=0x2ff6
0x00002ff6      6870000000     push 0x70                               ; 'p'
0x00002ffb      e9e0f8ffff     jmp sym..plt
;-- imp.renameat:
0x00003000      ff25629f2100   jmp qword [reloc.renameat]              ; [0x21cf68:8]=0x3006
0x00003006      6871000000     push 0x71                               ; 'q'
0x0000300b      e9d0f8ffff     jmp sym..plt
;-- imp.getpagesize:
0x00003010      ff255a9f2100   jmp qword [reloc.getpagesize]           ; [0x21cf70:8]=0x3016
0x00003016      6872000000     push 0x72                               ; 'r'
0x0000301b      e9c0f8ffff     jmp sym..plt
;-- imp.getppid:
0x00003020      ff25529f2100   jmp qword [reloc.getppid]               ; [0x21cf78:8]=0x3026 ; "&0"
0x00003026      6873000000     push 0x73                               ; 's'
0x0000302b      e9b0f8ffff     jmp sym..plt
;-- imp.exit:
0x00003030      ff254a9f2100   jmp qword [reloc.exit]                  ; [0x21cf80:8]=0x3036 ; "60"
0x00003036      6874000000     push 0x74                               ; 't'
0x0000303b      e9a0f8ffff     jmp sym..plt
;-- imp.fwrite:
0x00003040      ff25429f2100   jmp qword [reloc.fwrite]                ; [0x21cf88:8]=0x3046 ; "F0"
0x00003046      6875000000     push 0x75                               ; 'u'
0x0000304b      e990f8ffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00003050      ff253a9f2100   jmp qword [reloc.__fprintf_chk]         ; [0x21cf90:8]=0x3056 ; "V0"
0x00003056      6876000000     push 0x76                               ; 'v'
0x0000305b      e980f8ffff     jmp sym..plt
;-- imp.mbsinit:
0x00003060      ff25329f2100   jmp qword [reloc.mbsinit]               ; [0x21cf98:8]=0x3066 ; "f0"
0x00003066      6877000000     push 0x77                               ; 'w'
0x0000306b      e970f8ffff     jmp sym..plt
;-- imp.symlinkat:
0x00003070      ff252a9f2100   jmp qword [reloc.symlinkat]             ; [0x21cfa0:8]=0x3076 ; "v0"
0x00003076      6878000000     push 0x78                               ; 'x'
0x0000307b      e960f8ffff     jmp sym..plt
;-- imp.execlp:
0x00003080      ff25229f2100   jmp qword [reloc.execlp]                ; [0x21cfa8:8]=0x3086
0x00003086      6879000000     push 0x79                               ; 'y'
0x0000308b      e950f8ffff     jmp sym..plt
;-- imp.iswprint:
0x00003090      ff251a9f2100   jmp qword [reloc.iswprint]              ; [0x21cfb0:8]=0x3096
0x00003096      687a000000     push 0x7a                               ; 'z'
0x0000309b      e940f8ffff     jmp sym..plt
;-- imp.fork:
0x000030a0      ff25129f2100   jmp qword [reloc.fork]                  ; [0x21cfb8:8]=0x30a6
0x000030a6      687b000000     push 0x7b                               ; '{'
0x000030ab      e930f8ffff     jmp sym..plt
;-- imp.futimesat:
0x000030b0      ff250a9f2100   jmp qword [reloc.futimesat]             ; [0x21cfc0:8]=0x30b6
0x000030b6      687c000000     push 0x7c                               ; '|'
0x000030bb      e920f8ffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x000030c0      ff25029f2100   jmp qword [reloc.__ctype_b_loc]         ; [0x21cfc8:8]=0x30c6
0x000030c6      687d000000     push 0x7d                               ; '}'
0x000030cb      e910f8ffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x000030d0      .qword 0x906600219efa25ff                              ; [13] -r-x section size 16 named .plt.got
0x000030d8      .qword 0x906600219f1a25ff
;-- section..text:
;-- .text:
;-- fchmod_or_lchmod:
0x000030e0      85ff           test edi, edi                           ; [14] -r-x section size 78526 named .text
0x000030e2      4889f0         mov rax, rsi
0x000030e5      89d6           mov esi, edx
0x000030e7      7805           js 0x30ee
0x000030e9      e902feffff     jmp sym.imp.fchmod
0x000030ee      4889c7         mov rdi, rax
0x000030f1      e91afeffff     jmp sym.imp.chmod
;-- restore_default_fscreatecon_or_die:
0x000030f6      53             push rbx
0x000030f7      e854f8ffff     call sym.imp.__errno_location
0x000030fc      488d35ad4501.  lea rsi, str.failed_to_restore_the_default_file_creation_context ; 0x176b0 ; "failed to restore the default file creation context"
0x00003103      4889c3         mov rbx, rax
0x00003106      ba05000000     mov edx, 5
0x0000310b      31ff           xor edi, edi
0x0000310d      c7005f000000   mov dword [rax], 0x5f                   ; '_'
                                                                       ; [0x5f:4]=0x1f800
0x00003113      e8b8f9ffff     call sym.imp.dcgettext
0x00003118      8b33           mov esi, dword [rbx]
0x0000311a      4889c2         mov rdx, rax
0x0000311d      bf01000000     mov edi, 1
0x00003122      31c0           xor eax, eax
0x00003124      e807feffff     call sym.imp.error
0x00003129      0f1f80000000.  nop dword [rax]
;-- main:
0x00003130      4157           push r15
0x00003132      4156           push r14
0x00003134      4531ff         xor r15d, r15d
0x00003137      4155           push r13
0x00003139      4154           push r12
0x0000313b      4c8d257e9521.  lea r12, obj.long_options               ; 0x21c6c0
0x00003142      55             push rbp
0x00003143      53             push rbx
0x00003144      89fb           mov ebx, edi
0x00003146      4889f5         mov rbp, rsi
0x00003149      4531f6         xor r14d, r14d
0x0000314c      4531ed         xor r13d, r13d
0x0000314f      4881ec380100.  sub rsp, 0x138
0x00003156      488b3e         mov rdi, qword [rsi]
0x00003159      c705fdbf2100.  mov dword [obj.selinux_enabled], 0      ; [0x21f160:4]=0
0x00003163      64488b042528.  mov rax, qword fs:[0x28]
0x0000316c      488984242801.  mov qword [rsp + 0x128], rax
0x00003174      31c0           xor eax, eax
0x00003176      e855a70000     call sym.set_program_name
0x0000317b      488d35474e01.  lea rsi, [0x00017fc9]
0x00003182      bf06000000     mov edi, 6
0x00003187      e844fdffff     call sym.imp.setlocale
0x0000318c      488d35a03301.  lea rsi, str.usr_local_share_locale     ; 0x16533 ; "/usr/local/share/locale"
0x00003193      488d3d703301.  lea rdi, [0x0001650a]                   ; "coreutils"
0x0000319a      e801f9ffff     call sym.imp.bindtextdomain
0x0000319f      488d3d643301.  lea rdi, [0x0001650a]                   ; "coreutils"
0x000031a6      e8a5f8ffff     call sym.imp.textdomain
0x000031ab      488d3d2e7f00.  lea rdi, sym.close_stdin                ; 0xb0e0 ; "ATUSH\x8b\x1d\x05 !"
0x000031b2      e8d9310100     call sym.atexit
0x000031b7      488d442440     lea rax, [rsp + 0x40]
0x000031bc      4889c7         mov rdi, rax
0x000031bf      4889442408     mov qword [rsp + 8], rax
0x000031c4      e8a7270000     call sym.cp_options_default
0x000031c9      31ff           xor edi, edi
0x000031cb      c644245401     mov byte [rsp + 0x54], 1
0x000031d0      c74424780000.  mov dword [rsp + 0x78], 0
0x000031d8      c74424440400.  mov dword [rsp + 0x44], 4
0x000031e0      c644245501     mov byte [rsp + 0x55], 1
0x000031e5      c644245600     mov byte [rsp + 0x56], 0
0x000031ea      c644245700     mov byte [rsp + 0x57], 0
0x000031ef      c74424480400.  mov dword [rsp + 0x48], 4
0x000031f7      c644245800     mov byte [rsp + 0x58], 0
0x000031fc      c644245901     mov byte [rsp + 0x59], 1
0x00003201      c644245c00     mov byte [rsp + 0x5c], 0
0x00003206      c644245d00     mov byte [rsp + 0x5d], 0
0x0000320b      c644246200     mov byte [rsp + 0x62], 0
0x00003210      c644245e00     mov byte [rsp + 0x5e], 0
0x00003215      c644245f00     mov byte [rsp + 0x5f], 0
0x0000321a      c644246000     mov byte [rsp + 0x60], 0
0x0000321f      c644246900     mov byte [rsp + 0x69], 0
0x00003224      c644246301     mov byte [rsp + 0x63], 1
0x00003229      c644246400     mov byte [rsp + 0x64], 0
0x0000322e      c644246800     mov byte [rsp + 0x68], 0
0x00003233      c644246a00     mov byte [rsp + 0x6a], 0
0x00003238      c744244c0200.  mov dword [rsp + 0x4c], 2
0x00003240      c644246c00     mov byte [rsp + 0x6c], 0
0x00003245      c74424400000.  mov dword [rsp + 0x40], 0
0x0000324d      c644246b01     mov byte [rsp + 0x6b], 1
0x00003252      c74424508001.  mov dword [rsp + 0x50], 0x180           ; [0x180:4]=68
0x0000325a      c644246f00     mov byte [rsp + 0x6f], 0
0x0000325f      c644247000     mov byte [rsp + 0x70], 0
0x00003264      c644246d00     mov byte [rsp + 0x6d], 0
0x00003269      c644246600     mov byte [rsp + 0x66], 0
0x0000326e      c644246500     mov byte [rsp + 0x65], 0
0x00003273      c644246100     mov byte [rsp + 0x61], 0
0x00003278      c644246700     mov byte [rsp + 0x67], 0
0x0000327d      c644246e00     mov byte [rsp + 0x6e], 0
0x00003282      48c784248000.  mov qword [rsp + 0x80], 0
0x0000328e      48c784248800.  mov qword [rsp + 0x88], 0
0x0000329a      48c705b3be21.  mov qword [obj.owner_name], 0           ; [0x21f158:8]=0
0x000032a5      48c70598be21.  mov qword [obj.group_name], 0           ; [0x21f148:8]=0
0x000032b0      c6058abe2100.  mov byte [obj.strip_files], 0           ; [0x21f141:1]=0
0x000032b7      c60582be2100.  mov byte [obj.dir_arg], 0               ; [0x21f140:1]=0
0x000032be      e8adfaffff     call sym.imp.umask
0x000032c3      48c744242800.  mov qword [rsp + 0x28], 0
0x000032cc      c644242700     mov byte [rsp + 0x27], 0
0x000032d1      c644242600     mov byte [rsp + 0x26], 0
0x000032d6      c644242500     mov byte [rsp + 0x25], 0
0x000032db      48c744241000.  mov qword [rsp + 0x10], 0
0x000032e4      48c744241800.  mov qword [rsp + 0x18], 0
0x000032ed      0f1f00         nop dword [rax]
0x000032f0      488d15643201.  lea rdx, str.bcCsDdg:m:o:pt:TvS:Z       ; 0x1655b ; "bcCsDdg:m:o:pt:TvS:Z"
0x000032f7      4531c0         xor r8d, r8d
0x000032fa      4c89e1         mov rcx, r12
0x000032fd      4889ee         mov rsi, rbp
0x00003300      89df           mov edi, ebx
0x00003302      e849f8ffff     call sym.imp.getopt_long
0x00003307      83f8ff         cmp eax, 0xffffffff
0x0000330a      0f8484020000   je 0x3594
0x00003310      83f864         cmp eax, 0x64
0x00003313      0f84dc000000   je 0x33f5
0x00003319      7e35           jle 0x3350
0x0000331b      83f873         cmp eax, 0x73
0x0000331e      0f84a9010000   je 0x34cd
0x00003324      7f6a           jg 0x3390
0x00003326      83f86d         cmp eax, 0x6d
0x00003329      0f848d010000   je 0x34bc
0x0000332f      0f8e6b010000   jle 0x34a0
0x00003335      83f86f         cmp eax, 0x6f
0x00003338      0f84c3000000   je 0x3401
0x0000333e      83f870         cmp eax, 0x70
0x00003341      7539           jne 0x337c
0x00003343      c644245f01     mov byte [rsp + 0x5f], 1
0x00003348      eba6           jmp 0x32f0
0x0000334a      660f1f440000   nop word [rax + rax]
0x00003350      83f853         cmp eax, 0x53
0x00003353      0f84a5010000   je 0x34fe
0x00003359      7e75           jle 0x33d0
0x0000335b      83f85a         cmp eax, 0x5a
0x0000335e      0f84c3000000   je 0x3427
0x00003364      0f8eaa000000   jle 0x3414
0x0000336a      83f862         cmp eax, 0x62
0x0000336d      0f8472010000   je 0x34e5
0x00003373      83f863         cmp eax, 0x63
0x00003376      0f8474ffffff   je 0x32f0
0x0000337c      bf01000000     mov edi, 1
0x00003381      e89a150000     call sym.usage
0x00003386      662e0f1f8400.  nop word cs:[rax + rax]
0x00003390      83f876         cmp eax, 0x76
0x00003393      0f84b4010000   je 0x354d
0x00003399      0f8e90010000   jle 0x352f
0x0000339f      3d80000000     cmp eax, 0x80
0x000033a4      0f846b010000   je 0x3515
0x000033aa      3d81000000     cmp eax, 0x81
0x000033af      75cb           jne 0x337c
0x000033b1      488b3d489d21.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21d100:8]=0
0x000033b8      e883ee0000     call sym.xstrdup
0x000033bd      c644242701     mov byte [rsp + 0x27], 1
0x000033c2      4889055f9c21.  mov qword [obj.strip_program], rax      ; [0x21d028:8]=0x16436 ; "6d\x01"
0x000033c9      e922ffffff     jmp 0x32f0
0x000033ce      6690           nop
0x000033d0      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x000033d5      0f84fa070000   je 0x3bd5
0x000033db      0f8e80000000   jle 0x3461
0x000033e1      83f843         cmp eax, 0x43
0x000033e4      746f           je 0x3455
0x000033e6      83f844         cmp eax, 0x44
0x000033e9      7591           jne 0x337c
0x000033eb      c644242501     mov byte [rsp + 0x25], 1
0x000033f0      e9fbfeffff     jmp 0x32f0
0x000033f5      c60544bd2100.  mov byte [obj.dir_arg], 1               ; [0x21f140:1]=0
0x000033fc      e9effeffff     jmp 0x32f0
0x00003401      488b05f89c21.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21d100:8]=0
0x00003408      48890549bd21.  mov qword [obj.owner_name], rax         ; [0x21f158:8]=0
0x0000340f      e9dcfeffff     jmp 0x32f0
0x00003414      83f854         cmp eax, 0x54
0x00003417      0f855fffffff   jne 0x337c
0x0000341d      c644242601     mov byte [rsp + 0x26], 1
0x00003422      e9c9feffff     jmp 0x32f0
0x00003427      833d32bd2100.  cmp dword [obj.selinux_enabled], 0      ; [0x21f160:4]=0
0x0000342e      488b05cb9c21.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21d100:8]=0
0x00003435      0f841c010000   je 0x3557
0x0000343b      4885c0         test rax, rax
0x0000343e      c605db9b2100.  mov byte [obj.use_default_selinux_context], 0 ; [0x21d020:1]=1
0x00003445      0f84ff050000   je 0x3a4a
0x0000344b      4889442428     mov qword [rsp + 0x28], rax
0x00003450      e99bfeffff     jmp 0x32f0
0x00003455      c605e6bc2100.  mov byte [obj.copy_only_if_needed], 1   ; [0x21f142:1]=0
0x0000345c      e98ffeffff     jmp 0x32f0
0x00003461      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x00003466      0f8510ffffff   jne 0x337c
0x0000346c      488b3d759c21.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21d0e8:8]=0
0x00003473      488b0dc69b21.  mov rcx, qword [obj.Version]            ; [0x21d040:8]=0x180c1 str.8.31
0x0000347a      4c8d05ca3001.  lea r8, str.David_MacKenzie             ; 0x1654b ; "David MacKenzie"
0x00003481      488d157e3001.  lea rdx, str.GNU_coreutils              ; 0x16506 ; "GNU coreutils"
0x00003488      488d35f92f01.  lea rsi, str.install                    ; 0x16488 ; "install"
0x0000348f      4531c9         xor r9d, r9d
0x00003492      31c0           xor eax, eax
0x00003494      e8d7e90000     call sym.version_etc
0x00003499      31ff           xor edi, edi
0x0000349b      e890fbffff     call sym.imp.exit
0x000034a0      83f867         cmp eax, 0x67
0x000034a3      0f85d3feffff   jne 0x337c
0x000034a9      488b05509c21.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21d100:8]=0
0x000034b0      48890591bc21.  mov qword [obj.group_name], rax         ; [0x21f148:8]=0
0x000034b7      e934feffff     jmp 0x32f0
0x000034bc      488b053d9c21.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21d100:8]=0
0x000034c3      4889442418     mov qword [rsp + 0x18], rax
0x000034c8      e923feffff     jmp 0x32f0
0x000034cd      31f6           xor esi, esi
0x000034cf      bf11000000     mov edi, 0x11
0x000034d4      c60566bc2100.  mov byte [obj.strip_files], 1           ; [0x21f141:1]=0
0x000034db      e820f8ffff     call sym.imp.signal
0x000034e0      e90bfeffff     jmp 0x32f0
0x000034e5      488b05149c21.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21d100:8]=0
0x000034ec      41bd01000000   mov r13d, 1
0x000034f2      4885c0         test rax, rax
0x000034f5      4c0f45f0       cmovne r14, rax
0x000034f9      e9f2fdffff     jmp 0x32f0
0x000034fe      488b05fb9b21.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21d100:8]=0
0x00003505      41bd01000000   mov r13d, 1
0x0000350b      4889442410     mov qword [rsp + 0x10], rax
0x00003510      e9dbfdffff     jmp 0x32f0
0x00003515      833d44bc2100.  cmp dword [obj.selinux_enabled], 0      ; [0x21f160:4]=0
0x0000351c      7450           je 0x356e
0x0000351e      c644246501     mov byte [rsp + 0x65], 1
0x00003523      c605f69a2100.  mov byte [obj.use_default_selinux_context], 0 ; [0x21d020:1]=1
0x0000352a      e9c1fdffff     jmp 0x32f0
0x0000352f      83f874         cmp eax, 0x74
0x00003532      0f8544feffff   jne 0x337c
0x00003538      4d85ff         test r15, r15
0x0000353b      0f854a070000   jne 0x3c8b
0x00003541      4c8b3db89b21.  mov r15, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21d100:8]=0
0x00003548      e9a3fdffff     jmp 0x32f0
0x0000354d      c644246e01     mov byte [rsp + 0x6e], 1
0x00003552      e999fdffff     jmp 0x32f0
0x00003557      4885c0         test rax, rax
0x0000355a      0f8490fdffff   je 0x32f0
0x00003560      ba05000000     mov edx, 5
0x00003565      488d356c3e01.  lea rsi, str.warning:_ignoring___context__it_requires_an_SELinux_enabled_kernel ; 0x173d8 ; "warning: ignoring --context; it requires an SELinux-enabled kernel"
0x0000356c      eb0c           jmp 0x357a
0x0000356e      488d35133e01.  lea rsi, str.WARNING:_ignoring___preserve_context__this_kernel_is_not_SELinux_enabled ; 0x17388 ; "WARNING: ignoring --preserve-context; this kernel is not SELinux-enabled"
0x00003575      ba05000000     mov edx, 5
0x0000357a      31ff           xor edi, edi
0x0000357c      e84ff5ffff     call sym.imp.dcgettext
0x00003581      31f6           xor esi, esi
0x00003583      4889c2         mov rdx, rax
0x00003586      31ff           xor edi, edi
0x00003588      31c0           xor eax, eax
0x0000358a      e8a1f9ffff     call sym.imp.error
0x0000358f      e95cfdffff     jmp 0x32f0
0x00003594      803da5bb2100.  cmp byte [obj.dir_arg], 0               ; [0x21f140:1]=0
0x0000359b      0f8585020000   jne 0x3826
0x000035a1      4d85ff         test r15, r15
0x000035a4      743f           je 0x35e5
0x000035a6      488d94249000.  lea rdx, [rsp + 0x90]
0x000035ae      4c89fe         mov rsi, r15
0x000035b1      bf01000000     mov edi, 1
0x000035b6      e815f8ffff     call sym.imp.__xstat
0x000035bb      807c242500     cmp byte [rsp + 0x25], 0
0x000035c0      7508           jne 0x35ca
0x000035c2      85c0           test eax, eax
0x000035c4      0f8582060000   jne 0x3c4c
0x000035ca      85c0           test eax, eax
0x000035cc      7517           jne 0x35e5
0x000035ce      8b8424a80000.  mov eax, dword [rsp + 0xa8]
0x000035d5      2500f00000     and eax, 0xf000
0x000035da      3d00400000     cmp eax, 0x4000                         ; "([]A\A]\xc3\x0f\x1f\x84"
0x000035df      0f8559070000   jne 0x3d3e
0x000035e5      31c0           xor eax, eax
0x000035e7      4584ed         test r13b, r13b
0x000035ea      0f8537040000   jne 0x3a27
0x000035f0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000035f5      89442440       mov dword [rsp + 0x40], eax
0x000035f9      e812730000     call sym.set_simple_backup_suffix
0x000035fe      807c246500     cmp byte [rsp + 0x65], 0
0x00003603      0f84b1020000   je 0x38ba
0x00003609      807c246100     cmp byte [rsp + 0x61], 0
0x0000360e      0f8506070000   jne 0x3d1a
0x00003614      48837c242800   cmp qword [rsp + 0x28], 0
0x0000361a      0f85fa060000   jne 0x3d1a
0x00003620      486305d19a21.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x21d0f8:4]=0
0x00003627      29c3           sub ebx, eax
0x00003629      488d44c500     lea rax, [rbp + rax*8]
0x0000362e      4889442410     mov qword [rsp + 0x10], rax
0x00003633      0fb60506bb21.  movzx eax, byte [obj.dir_arg]           ; [0x21f140:1]=0
0x0000363a      83f001         xor eax, 1
0x0000363d      4d85ff         test r15, r15
0x00003640      0f94c2         sete dl
0x00003643      21d0           and eax, edx
0x00003645      0fb6d0         movzx edx, al
0x00003648      39da           cmp edx, ebx
0x0000364a      0f8d83060000   jge 0x3cd3
0x00003650      807c242600     cmp byte [rsp + 0x26], 0
0x00003655      0f84ad020000   je 0x3908
0x0000365b      4d85ff         test r15, r15
0x0000365e      0f854b060000   jne 0x3caf
0x00003664      83fb02         cmp ebx, 2
0x00003667      0f8f70070000   jg 0x3ddd
0x0000366d      488b442418     mov rax, qword [rsp + 0x18]
0x00003672      4885c0         test rax, rax
0x00003675      7451           je 0x36c8
0x00003677      4889c7         mov rdi, rax
0x0000367a      e8219c0000     call sym.mode_compile
0x0000367f      4885c0         test rax, rax
0x00003682      4889c5         mov rbp, rax
0x00003685      0f841e070000   je 0x3da9
0x0000368b      4531c0         xor r8d, r8d
0x0000368e      4889c1         mov rcx, rax
0x00003691      31d2           xor edx, edx
0x00003693      31f6           xor esi, esi
0x00003695      31ff           xor edi, edi
0x00003697      e844a00000     call sym.mode_adjust
0x0000369c      4c8d05719921.  lea r8, obj.dir_mode_bits               ; 0x21d014
0x000036a3      31ff           xor edi, edi
0x000036a5      4889e9         mov rcx, rbp
0x000036a8      31d2           xor edx, edx
0x000036aa      be01000000     mov esi, 1
0x000036af      890567992100   mov dword [obj.mode], eax               ; [0x21d01c:4]=493
0x000036b5      e826a00000     call sym.mode_adjust
0x000036ba      4889ef         mov rdi, rbp
0x000036bd      890555992100   mov dword [obj.dir_mode], eax           ; [0x21d018:4]=493
0x000036c3      e808faffff     call sym..plt.got
0x000036c8      807c242700     cmp byte [rsp + 0x27], 0
0x000036cd      740d           je 0x36dc
0x000036cf      803d6bba2100.  cmp byte [obj.strip_files], 0           ; [0x21f141:1]=0
0x000036d6      0f8478030000   je 0x3a54
0x000036dc      803d5fba2100.  cmp byte [obj.copy_only_if_needed], 0   ; [0x21f142:1]=0
0x000036e3      7434           je 0x3719
0x000036e5      807c245f00     cmp byte [rsp + 0x5f], 0
0x000036ea      0f85ab060000   jne 0x3d9b
0x000036f0      803d4aba2100.  cmp byte [obj.strip_files], 0           ; [0x21f141:1]=0
0x000036f7      ba05000000     mov edx, 5
0x000036fc      488d350d3f01.  lea rsi, str.options___compare___C__and___strip_are_mutually_exclusive ; 0x17610 ; "options --compare (-C) and --strip are mutually exclusive"
0x00003703      0f8578060000   jne 0x3d81
0x00003709      f70509992100.  test dword [obj.mode], 0xffff0e00       ; [0x21d01c:4]=493
0x00003713      0f8561030000   jne 0x3a7a
0x00003719      488b3d38ba21.  mov rdi, qword [obj.owner_name]         ; [0x21f158:8]=0
0x00003720      4885ff         test rdi, rdi
0x00003723      0f84cf020000   je 0x39f8
0x00003729      e8f2f5ffff     call sym.imp.getpwnam
0x0000372e      4885c0         test rax, rax
0x00003731      0f840a040000   je 0x3b41
0x00003737      8b4010         mov eax, dword [rax + 0x10]
0x0000373a      890510ba2100   mov dword [obj.owner_id], eax           ; [0x21f150:4]=0
0x00003740      e8ebf6ffff     call sym.imp.endpwent
0x00003745      488b3dfcb921.  mov rdi, qword [obj.group_name]         ; [0x21f148:8]=0
0x0000374c      4885ff         test rdi, rdi
0x0000374f      0f8494020000   je 0x39e9
0x00003755      e836f6ffff     call sym.imp.getgrnam
0x0000375a      4885c0         test rax, rax
0x0000375d      0f8479030000   je 0x3adc
0x00003763      8b4010         mov eax, dword [rax + 0x10]
0x00003766      8905d8b92100   mov dword [obj.group_id], eax           ; [0x21f144:4]=0
0x0000376c      e87ff1ffff     call sym.imp.endgrent
0x00003771      803dc8b92100.  cmp byte [obj.dir_arg], 0               ; [0x21f140:1]=0
0x00003778      0f8589020000   jne 0x3a07
0x0000377e      e8bd680000     call sym.hash_init
0x00003783      4d85ff         test r15, r15
0x00003786      0f84d4000000   je 0x3860
0x0000378c      488b7c2408     mov rdi, qword [rsp + 8]
0x00003791      31ed           xor ebp, ebp
0x00003793      4531ed         xor r13d, r13d
0x00003796      e875210000     call sym.dest_info_init
0x0000379b      4c897c2418     mov qword [rsp + 0x18], r15
0x000037a0      eb1a           jmp 0x37bc
0x000037a2      4c89ff         mov rdi, r15
0x000037a5      41bd01000000   mov r13d, 1
0x000037ab      e820f9ffff     call sym..plt.got
0x000037b0      4883c501       add rbp, 1
0x000037b4      39eb           cmp ebx, ebp
0x000037b6      0f8ed2000000   jle 0x388e
0x000037bc      488b442410     mov rax, qword [rsp + 0x10]
0x000037c1      85ed           test ebp, ebp
0x000037c3      410f94c4       sete r12b
0x000037c7      4422642425     and r12b, byte [rsp + 0x25]
0x000037cc      4c8b34e8       mov r14, qword [rax + rbp*8]
0x000037d0      4c89f7         mov rdi, r14
0x000037d3      e8c87b0000     call sym.last_component
0x000037d8      488b7c2418     mov rdi, qword [rsp + 0x18]
0x000037dd      31d2           xor edx, edx
0x000037df      4889c6         mov rsi, rax
0x000037e2      e8a97f0000     call sym.file_name_concat
0x000037e7      4584e4         test r12b, r12b
0x000037ea      4989c7         mov r15, rax
0x000037ed      7419           je 0x3808
0x000037ef      488b542408     mov rdx, qword [rsp + 8]
0x000037f4      b901000000     mov ecx, 1
0x000037f9      4889c6         mov rsi, rax
0x000037fc      4c89f7         mov rdi, r14
0x000037ff      e83c070000     call sym.mkancesdirs_safe_wd
0x00003804      84c0           test al, al
0x00003806      749a           je 0x37a2
0x00003808      488b542408     mov rdx, qword [rsp + 8]
0x0000380d      4c89fe         mov rsi, r15
0x00003810      4c89f7         mov rdi, r14
0x00003813      e8480a0000     call sym.install_file_in_file
0x00003818      84c0           test al, al
0x0000381a      7486           je 0x37a2
0x0000381c      4c89ff         mov rdi, r15
0x0000381f      e8acf8ffff     call sym..plt.got
0x00003824      eb8a           jmp 0x37b0
0x00003826      803d14b92100.  cmp byte [obj.strip_files], 0           ; [0x21f141:1]=0
0x0000382d      0f85d6050000   jne 0x3e09
0x00003833      4d85ff         test r15, r15
0x00003836      0f84a9fdffff   je 0x35e5
0x0000383c      488d351d3c01.  lea rsi, str.target_directory_not_allowed_when_installing_a_directory ; 0x17460 ; "target directory not allowed when installing a directory"
0x00003843      ba05000000     mov edx, 5
0x00003848      31ff           xor edi, edi
0x0000384a      e881f2ffff     call sym.imp.dcgettext
0x0000384f      31f6           xor esi, esi
0x00003851      4889c2         mov rdx, rax
0x00003854      bf01000000     mov edi, 1
0x00003859      31c0           xor eax, eax
0x0000385b      e8d0f6ffff     call sym.imp.error
0x00003860      807c242500     cmp byte [rsp + 0x25], 0
0x00003865      488b442410     mov rax, qword [rsp + 0x10]
0x0000386a      488b6808       mov rbp, qword [rax + 8]
0x0000386e      488b18         mov rbx, qword [rax]
0x00003871      0f8529020000   jne 0x3aa0
0x00003877      488b542408     mov rdx, qword [rsp + 8]
0x0000387c      4889ee         mov rsi, rbp
0x0000387f      4889df         mov rdi, rbx
0x00003882      e8d9090000     call sym.install_file_in_file
0x00003887      83f001         xor eax, 1
0x0000388a      440fb6e8       movzx r13d, al
0x0000388e      488b8c242801.  mov rcx, qword [rsp + 0x128]
0x00003896      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000389f      4489e8         mov eax, r13d
0x000038a2      0f855c050000   jne 0x3e04
0x000038a8      4881c4380100.  add rsp, 0x138
0x000038af      5b             pop rbx
0x000038b0      5d             pop rbp
0x000038b1      415c           pop r12
0x000038b3      415d           pop r13
0x000038b5      415e           pop r14
0x000038b7      415f           pop r15
0x000038b9      c3             ret
0x000038ba      48837c242800   cmp qword [rsp + 0x28], 0
0x000038c0      0f845afdffff   je 0x3620
0x000038c6      e885f0ffff     call sym.imp.__errno_location
0x000038cb      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000038d0      c7005f000000   mov dword [rax], 0x5f                   ; '_'
                                                                       ; [0x5f:4]=0x1f800
0x000038d6      4889c3         mov rbx, rax
0x000038d9      e8e2bd0000     call sym.quote
0x000038de      488d35eb3b01.  lea rsi, str.failed_to_set_default_file_creation_context_to__s ; 0x174d0 ; "failed to set default file creation context to %s"
0x000038e5      ba05000000     mov edx, 5
0x000038ea      31ff           xor edi, edi
0x000038ec      4889c5         mov rbp, rax
0x000038ef      e8dcf1ffff     call sym.imp.dcgettext
0x000038f4      8b33           mov esi, dword [rbx]
0x000038f6      4889c2         mov rdx, rax
0x000038f9      4889e9         mov rcx, rbp
0x000038fc      bf01000000     mov edi, 1
0x00003901      31c0           xor eax, eax
0x00003903      e828f6ffff     call sym.imp.error
0x00003908      84c0           test al, al
0x0000390a      0f845dfdffff   je 0x366d
0x00003910      4531ff         xor r15d, r15d
0x00003913      83fb01         cmp ebx, 1
0x00003916      0f8451fdffff   je 0x366d
0x0000391c      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00003921      4863c3         movsxd rax, ebx
0x00003924      41bc01000000   mov r12d, 1
0x0000392a      4c8d6cc1f8     lea r13, [rcx + rax*8 - 8]
0x0000392f      498b6d00       mov rbp, qword [r13]
0x00003933      4889ef         mov rdi, rbp
0x00003936      e8657a0000     call sym.last_component
0x0000393b      4889c7         mov rdi, rax
0x0000393e      4889c2         mov rdx, rax
0x00003941      0fb6442426     movzx eax, byte [rsp + 0x26]
0x00003946      4883c9ff       or rcx, 0xffffffffffffffff
0x0000394a      f2ae           repne scasb al, byte [rdi]
0x0000394c      4889c8         mov rax, rcx
0x0000394f      48f7d0         not rax
0x00003952      4883e801       sub rax, 1
0x00003956      740c           je 0x3964
0x00003958      4531e4         xor r12d, r12d
0x0000395b      807c02ff2f     cmp byte [rdx + rax - 1], 0x2f
0x00003960      410f94c4       sete r12b
0x00003964      488d94249000.  lea rdx, [rsp + 0x90]
0x0000396c      4889ee         mov rsi, rbp
0x0000396f      bf01000000     mov edi, 1
0x00003974      e857f4ffff     call sym.imp.__xstat
0x00003979      85c0           test eax, eax
0x0000397b      0f8425020000   je 0x3ba6
0x00003981      e8caefffff     call sym.imp.__errno_location
0x00003986      448b30         mov r14d, dword [rax]
0x00003989      4585f6         test r14d, r14d
0x0000398c      0f8414020000   je 0x3ba6
0x00003992      4183fe02       cmp r14d, 2
0x00003996      0f8578020000   jne 0x3c14
0x0000399c      4585e4         test r12d, r12d
0x0000399f      0f8537020000   jne 0x3bdc
0x000039a5      4531ff         xor r15d, r15d
0x000039a8      83fb02         cmp ebx, 2
0x000039ab      0f84bcfcffff   je 0x366d
0x000039b1      498b7500       mov rsi, qword [r13]
0x000039b5      bf04000000     mov edi, 4
0x000039ba      e831ba0000     call sym.quotearg_style
0x000039bf      488d35be2b01.  lea rsi, str.target__s_is_not_a_directory ; 0x16584 ; "target %s is not a directory"
0x000039c6      4889c3         mov rbx, rax
0x000039c9      ba05000000     mov edx, 5
0x000039ce      31ff           xor edi, edi
0x000039d0      e8fbf0ffff     call sym.imp.dcgettext
0x000039d5      4889d9         mov rcx, rbx
0x000039d8      4889c2         mov rdx, rax
0x000039db      31f6           xor esi, esi
0x000039dd      bf01000000     mov edi, 1
0x000039e2      31c0           xor eax, eax
0x000039e4      e847f5ffff     call sym.imp.error
0x000039e9      c70551b72100.  mov dword [obj.group_id], 0xffffffff    ; [0x21f144:4]=0
0x000039f3      e979fdffff     jmp 0x3771
0x000039f8      c7054eb72100.  mov dword [obj.owner_id], 0xffffffff    ; [0x21f150:4]=0
0x00003a02      e93efdffff     jmp 0x3745
0x00003a07      488b4c2408     mov rcx, qword [rsp + 8]
0x00003a0c      488b742410     mov rsi, qword [rsp + 0x10]
0x00003a11      488d15080700.  lea rdx, sym.process_dir                ; 0x4120 ; "USH\x89\xd1H\x89\xd3L\x8d\r\xa1"
0x00003a18      89df           mov edi, ebx
0x00003a1a      e8b1ca0000     call sym.savewd_process_files
0x00003a1f      4189c5         mov r13d, eax
0x00003a22      e967feffff     jmp 0x388e
0x00003a27      488d35732b01.  lea rsi, str.backup_type                ; 0x165a1 ; "backup type"
0x00003a2e      31ff           xor edi, edi
0x00003a30      ba05000000     mov edx, 5
0x00003a35      e896f0ffff     call sym.imp.dcgettext
0x00003a3a      4c89f6         mov rsi, r14
0x00003a3d      4889c7         mov rdi, rax
0x00003a40      e8cb750000     call sym.xget_version
0x00003a45      e9a6fbffff     jmp 0x35f0
0x00003a4a      c644246101     mov byte [rsp + 0x61], 1
0x00003a4f      e99cf8ffff     jmp 0x32f0
0x00003a54      488d35253b01.  lea rsi, str.WARNING:_ignoring___strip_program_option_as__s_option_was_not_specified ; 0x17580 ; "WARNING: ignoring --strip-program option as -s option was not specified"
0x00003a5b      31ff           xor edi, edi
0x00003a5d      ba05000000     mov edx, 5
0x00003a62      e869f0ffff     call sym.imp.dcgettext
0x00003a67      31f6           xor esi, esi
0x00003a69      4889c2         mov rdx, rax
0x00003a6c      31ff           xor edi, edi
0x00003a6e      31c0           xor eax, eax
0x00003a70      e8bbf4ffff     call sym.imp.error
0x00003a75      e962fcffff     jmp 0x36dc
0x00003a7a      488d35cf3b01.  lea rsi, str.the___compare___C__option_is_ignored_when_you_specify_a_mode_with_non_permission_bits ; 0x17650 ; "the --compare (-C) option is ignored when you specify a mode with non-permission bits"
0x00003a81      31ff           xor edi, edi
0x00003a83      ba05000000     mov edx, 5
0x00003a88      e843f0ffff     call sym.imp.dcgettext
0x00003a8d      31f6           xor esi, esi
0x00003a8f      4889c2         mov rdx, rax
0x00003a92      31ff           xor edi, edi
0x00003a94      31c0           xor eax, eax
0x00003a96      e895f4ffff     call sym.imp.error
0x00003a9b      e979fcffff     jmp 0x3719
0x00003aa0      488b542408     mov rdx, qword [rsp + 8]
0x00003aa5      31c9           xor ecx, ecx
0x00003aa7      4889ee         mov rsi, rbp
0x00003aaa      4889df         mov rdi, rbx
0x00003aad      4531ed         xor r13d, r13d
0x00003ab0      e88b040000     call sym.mkancesdirs_safe_wd
0x00003ab5      84c0           test al, al
0x00003ab7      7414           je 0x3acd
0x00003ab9      488b542408     mov rdx, qword [rsp + 8]
0x00003abe      4889ee         mov rsi, rbp
0x00003ac1      4889df         mov rdi, rbx
0x00003ac4      e897070000     call sym.install_file_in_file
0x00003ac9      440fb6e8       movzx r13d, al
0x00003acd      4183e501       and r13d, 1
0x00003ad1      4489e8         mov eax, r13d
0x00003ad4      83f001         xor eax, 1
0x00003ad7      e9aefdffff     jmp 0x388a
0x00003adc      488b3d65b621.  mov rdi, qword [obj.group_name]         ; [0x21f148:8]=0
0x00003ae3      488d4c2438     lea rcx, [rsp + 0x38]
0x00003ae8      4531c0         xor r8d, r8d
0x00003aeb      31d2           xor edx, edx
0x00003aed      31f6           xor esi, esi
0x00003aef      e8ace70000     call sym.xstrtoul
0x00003af4      85c0           test eax, eax
0x00003af6      7513           jne 0x3b0b
0x00003af8      488b442438     mov rax, qword [rsp + 0x38]
0x00003afd      baffffffff     mov edx, 0xffffffff                     ; -1
0x00003b02      4839d0         cmp rax, rdx
0x00003b05      0f865bfcffff   jbe 0x3766
0x00003b0b      488b3d36b621.  mov rdi, qword [obj.group_name]         ; [0x21f148:8]=0
0x00003b12      e8a9bb0000     call sym.quote
0x00003b17      488d35d52a01.  lea rsi, str.invalid_group__s           ; 0x165f3 ; "invalid group %s"
0x00003b1e      4889c3         mov rbx, rax
0x00003b21      ba05000000     mov edx, 5
0x00003b26      31ff           xor edi, edi
0x00003b28      e8a3efffff     call sym.imp.dcgettext
0x00003b2d      4889d9         mov rcx, rbx
0x00003b30      4889c2         mov rdx, rax
0x00003b33      31f6           xor esi, esi
0x00003b35      bf01000000     mov edi, 1
0x00003b3a      31c0           xor eax, eax
0x00003b3c      e8eff3ffff     call sym.imp.error
0x00003b41      488b3d10b621.  mov rdi, qword [obj.owner_name]         ; [0x21f158:8]=0
0x00003b48      488d4c2438     lea rcx, [rsp + 0x38]
0x00003b4d      4531c0         xor r8d, r8d
0x00003b50      31d2           xor edx, edx
0x00003b52      31f6           xor esi, esi
0x00003b54      e847e70000     call sym.xstrtoul
0x00003b59      85c0           test eax, eax
0x00003b5b      7513           jne 0x3b70
0x00003b5d      488b442438     mov rax, qword [rsp + 0x38]
0x00003b62      baffffffff     mov edx, 0xffffffff                     ; -1
0x00003b67      4839d0         cmp rax, rdx
0x00003b6a      0f86cafbffff   jbe 0x373a
0x00003b70      488b3de1b521.  mov rdi, qword [obj.owner_name]         ; [0x21f158:8]=0
0x00003b77      e844bb0000     call sym.quote
0x00003b7c      488d35602a01.  lea rsi, str.invalid_user__s            ; 0x165e3 ; "invalid user %s"
0x00003b83      4889c3         mov rbx, rax
0x00003b86      ba05000000     mov edx, 5
0x00003b8b      31ff           xor edi, edi
0x00003b8d      e83eefffff     call sym.imp.dcgettext
0x00003b92      4889d9         mov rcx, rbx
0x00003b95      4889c2         mov rdx, rax
0x00003b98      31f6           xor esi, esi
0x00003b9a      bf01000000     mov edi, 1
0x00003b9f      31c0           xor eax, eax
0x00003ba1      e88af3ffff     call sym.imp.error
0x00003ba6      8b8424a80000.  mov eax, dword [rsp + 0xa8]
0x00003bad      2500f00000     and eax, 0xf000
0x00003bb2      3d00400000     cmp eax, 0x4000                         ; "([]A\A]\xc3\x0f\x1f\x84"
0x00003bb7      7408           je 0x3bc1
0x00003bb9      4531f6         xor r14d, r14d
0x00003bbc      e9dbfdffff     jmp 0x399c
0x00003bc1      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00003bc6      83eb01         sub ebx, 1
0x00003bc9      4863c3         movsxd rax, ebx
0x00003bcc      4c8b3cc1       mov r15, qword [rcx + rax*8]
0x00003bd0      e998faffff     jmp 0x366d
0x00003bd5      31ff           xor edi, edi
0x00003bd7      e8440d0000     call sym.usage
0x00003bdc      4889ee         mov rsi, rbp
0x00003bdf      bf04000000     mov edi, 4
0x00003be4      e807b80000     call sym.quotearg_style
0x00003be9      488d35942901.  lea rsi, str.target__s_is_not_a_directory ; 0x16584 ; "target %s is not a directory"
0x00003bf0      4889c3         mov rbx, rax
0x00003bf3      ba05000000     mov edx, 5
0x00003bf8      31ff           xor edi, edi
0x00003bfa      e8d1eeffff     call sym.imp.dcgettext
0x00003bff      4889d9         mov rcx, rbx
0x00003c02      4889c2         mov rdx, rax
0x00003c05      4489f6         mov esi, r14d
0x00003c08      bf01000000     mov edi, 1
0x00003c0d      31c0           xor eax, eax
0x00003c0f      e81cf3ffff     call sym.imp.error
0x00003c14      4889ee         mov rsi, rbp
0x00003c17      bf04000000     mov edi, 4
0x00003c1c      e8cfb70000     call sym.quotearg_style
0x00003c21      488d35482901.  lea rsi, str.failed_to_access__s        ; 0x16570 ; "failed to access %s"
0x00003c28      4889c3         mov rbx, rax
0x00003c2b      ba05000000     mov edx, 5
0x00003c30      31ff           xor edi, edi
0x00003c32      e899eeffff     call sym.imp.dcgettext
0x00003c37      4889d9         mov rcx, rbx
0x00003c3a      4889c2         mov rdx, rax
0x00003c3d      4489f6         mov esi, r14d
0x00003c40      bf01000000     mov edi, 1
0x00003c45      31c0           xor eax, eax
0x00003c47      e8e4f2ffff     call sym.imp.error
0x00003c4c      4c89fe         mov rsi, r15
0x00003c4f      bf04000000     mov edi, 4
0x00003c54      e897b70000     call sym.quotearg_style
0x00003c59      488d35102901.  lea rsi, str.failed_to_access__s        ; 0x16570 ; "failed to access %s"
0x00003c60      ba05000000     mov edx, 5
0x00003c65      31ff           xor edi, edi
0x00003c67      4889c5         mov rbp, rax
0x00003c6a      e861eeffff     call sym.imp.dcgettext
0x00003c6f      4889c3         mov rbx, rax
0x00003c72      e8d9ecffff     call sym.imp.__errno_location
0x00003c77      8b30           mov esi, dword [rax]
0x00003c79      4889e9         mov rcx, rbp
0x00003c7c      4889da         mov rdx, rbx
0x00003c7f      bf01000000     mov edi, 1
0x00003c84      31c0           xor eax, eax
0x00003c86      e8a5f2ffff     call sym.imp.error
0x00003c8b      488d35ce3601.  lea rsi, str.multiple_target_directories_specified ; 0x17360 ; "multiple target directories specified"
0x00003c92      ba05000000     mov edx, 5
0x00003c97      31ff           xor edi, edi
0x00003c99      e832eeffff     call sym.imp.dcgettext
0x00003c9e      31f6           xor esi, esi
0x00003ca0      4889c2         mov rdx, rax
0x00003ca3      bf01000000     mov edi, 1
0x00003ca8      31c0           xor eax, eax
0x00003caa      e881f2ffff     call sym.imp.error
0x00003caf      488d35823801.  lea rsi, str.cannot_combine___target_directory___t__and___no_target_directory___T ; 0x17538 ; "cannot combine --target-directory (-t) and --no-target-directory (-T)"
0x00003cb6      ba05000000     mov edx, 5
0x00003cbb      31ff           xor edi, edi
0x00003cbd      e80eeeffff     call sym.imp.dcgettext
0x00003cc2      31f6           xor esi, esi
0x00003cc4      4889c2         mov rdx, rax
0x00003cc7      bf01000000     mov edi, 1
0x00003ccc      31c0           xor eax, eax
0x00003cce      e85df2ffff     call sym.imp.error
0x00003cd3      83eb01         sub ebx, 1
0x00003cd6      0f8599000000   jne 0x3d75
0x00003cdc      488b442410     mov rax, qword [rsp + 0x10]
0x00003ce1      bf04000000     mov edi, 4
0x00003ce6      488b30         mov rsi, qword [rax]
0x00003ce9      e802b70000     call sym.quotearg_style
0x00003cee      488d35133801.  lea rsi, str.missing_destination_file_operand_after__s ; 0x17508 ; "missing destination file operand after %s"
0x00003cf5      4889c3         mov rbx, rax
0x00003cf8      ba05000000     mov edx, 5
0x00003cfd      31ff           xor edi, edi
0x00003cff      e8ccedffff     call sym.imp.dcgettext
0x00003d04      4889d9         mov rcx, rbx
0x00003d07      4889c2         mov rdx, rax
0x00003d0a      31f6           xor esi, esi
0x00003d0c      31ff           xor edi, edi
0x00003d0e      31c0           xor eax, eax
0x00003d10      e81bf2ffff     call sym.imp.error
0x00003d15      e962f6ffff     jmp 0x337c
0x00003d1a      488d357f3701.  lea rsi, str.cannot_set_target_context_and_preserve_it ; 0x174a0 ; "cannot set target context and preserve it"
0x00003d21      ba05000000     mov edx, 5
0x00003d26      31ff           xor edi, edi
0x00003d28      e8a3edffff     call sym.imp.dcgettext
0x00003d2d      31f6           xor esi, esi
0x00003d2f      4889c2         mov rdx, rax
0x00003d32      bf01000000     mov edi, 1
0x00003d37      31c0           xor eax, eax
0x00003d39      e8f2f1ffff     call sym.imp.error
0x00003d3e      4c89fe         mov rsi, r15
0x00003d41      bf04000000     mov edi, 4
0x00003d46      e8a5b60000     call sym.quotearg_style
0x00003d4b      488d35322801.  lea rsi, str.target__s_is_not_a_directory ; 0x16584 ; "target %s is not a directory"
0x00003d52      4889c3         mov rbx, rax
0x00003d55      ba05000000     mov edx, 5
0x00003d5a      31ff           xor edi, edi
0x00003d5c      e86fedffff     call sym.imp.dcgettext
0x00003d61      4889d9         mov rcx, rbx
0x00003d64      4889c2         mov rdx, rax
0x00003d67      31f6           xor esi, esi
0x00003d69      bf01000000     mov edi, 1
0x00003d6e      31c0           xor eax, eax
0x00003d70      e8bbf1ffff     call sym.imp.error
0x00003d75      488d35312801.  lea rsi, str.missing_file_operand       ; 0x165ad ; "missing file operand"
0x00003d7c      ba05000000     mov edx, 5
0x00003d81      31ff           xor edi, edi
0x00003d83      e848edffff     call sym.imp.dcgettext
0x00003d88      31f6           xor esi, esi
0x00003d8a      4889c2         mov rdx, rax
0x00003d8d      31ff           xor edi, edi
0x00003d8f      31c0           xor eax, eax
0x00003d91      e89af1ffff     call sym.imp.error
0x00003d96      e9e1f5ffff     jmp 0x337c
0x00003d9b      ba05000000     mov edx, 5
0x00003da0      488d35213801.  lea rsi, str.options___compare___C__and___preserve_timestamps_are_mutually_exclusive ; 0x175c8 ; "options --compare (-C) and --preserve-timestamps are mutually exclusive"
0x00003da7      ebd8           jmp 0x3d81
0x00003da9      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00003dae      e80db90000     call sym.quote
0x00003db3      488d35192801.  lea rsi, str.invalid_mode__s            ; 0x165d3 ; "invalid mode %s"
0x00003dba      4889c3         mov rbx, rax
0x00003dbd      ba05000000     mov edx, 5
0x00003dc2      31ff           xor edi, edi
0x00003dc4      e807edffff     call sym.imp.dcgettext
0x00003dc9      4889d9         mov rcx, rbx
0x00003dcc      4889c2         mov rdx, rax
0x00003dcf      31f6           xor esi, esi
0x00003dd1      bf01000000     mov edi, 1
0x00003dd6      31c0           xor eax, eax
0x00003dd8      e853f1ffff     call sym.imp.error
0x00003ddd      488b442410     mov rax, qword [rsp + 0x10]
0x00003de2      bf04000000     mov edi, 4
0x00003de7      488b7010       mov rsi, qword [rax + 0x10]
0x00003deb      e800b60000     call sym.quotearg_style
0x00003df0      ba05000000     mov edx, 5
0x00003df5      4889c3         mov rbx, rax
0x00003df8      488d35c32701.  lea rsi, str.extra_operand__s           ; 0x165c2 ; "extra operand %s"
0x00003dff      e9f9feffff     jmp 0x3cfd
0x00003e04      e827edffff     call sym.imp.__stack_chk_fail
0x00003e09      488d35103601.  lea rsi, str.the_strip_option_may_not_be_used_when_installing_a_directory ; 0x17420 ; "the strip option may not be used when installing a directory"
0x00003e10      ba05000000     mov edx, 5
0x00003e15      31ff           xor edi, edi
0x00003e17      e8b4ecffff     call sym.imp.dcgettext
0x00003e1c      31f6           xor esi, esi
0x00003e1e      4889c2         mov rdx, rax
0x00003e21      bf01000000     mov edi, 1
0x00003e26      31c0           xor eax, eax
0x00003e28      e803f1ffff     call sym.imp.error
0x00003e2d      0f1f00         nop dword [rax]
;-- entry0:
;-- _start:
;-- rip:
0x00003e30      31ed           xor ebp, ebp
0x00003e32      4989d1         mov r9, rdx
0x00003e35      5e             pop rsi
0x00003e36      4889e2         mov rdx, rsp
0x00003e39      4883e4f0       and rsp, 0xfffffffffffffff0
0x00003e3d      50             push rax
0x00003e3e      54             push rsp
0x00003e3f      4c8d053a2501.  lea r8, sym.__libc_csu_fini             ; 0x16380
0x00003e46      488d0dc32401.  lea rcx, sym.__libc_csu_init            ; 0x16310 ; "AWAVI\x89\xd7AUATL\x8d%\x8ec "
0x00003e4d      488d3ddcf2ff.  lea rdi, main                           ; sym.main
                                                                       ; 0x3130 ; "AWAVE1\xffAUATL\x8d%~\x95!"
0x00003e54      ff1586912100   call qword [reloc.__libc_start_main]    ; [0x21cfe0:8]=0
0x00003e5a      f4             hlt
0x00003e5b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00003e60      488d3d619221.  lea rdi, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x21d0c8
0x00003e67      55             push rbp
0x00003e68      488d05599221.  lea rax, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x21d0c8
0x00003e6f      4839f8         cmp rax, rdi
0x00003e72      4889e5         mov rbp, rsp
0x00003e75      7419           je 0x3e90
0x00003e77      488b055a9121.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x21cfd8:8]=0
0x00003e7e      4885c0         test rax, rax
0x00003e81      740d           je 0x3e90
0x00003e83      5d             pop rbp
0x00003e84      ffe0           jmp rax
0x00003e86      662e0f1f8400.  nop word cs:[rax + rax]
0x00003e90      5d             pop rbp
0x00003e91      c3             ret
0x00003e92      0f1f4000       nop dword [rax]
0x00003e96      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00003ea0      488d3d219221.  lea rdi, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x21d0c8
0x00003ea7      488d351a9221.  lea rsi, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x21d0c8
0x00003eae      55             push rbp
0x00003eaf      4829fe         sub rsi, rdi
0x00003eb2      4889e5         mov rbp, rsp
0x00003eb5      48c1fe03       sar rsi, 3
0x00003eb9      4889f0         mov rax, rsi
0x00003ebc      48c1e83f       shr rax, 0x3f
0x00003ec0      4801c6         add rsi, rax
0x00003ec3      48d1fe         sar rsi, 1
0x00003ec6      7418           je 0x3ee0
0x00003ec8      488b05219121.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x21cff0:8]=0
0x00003ecf      4885c0         test rax, rax
0x00003ed2      740c           je 0x3ee0
0x00003ed4      5d             pop rbp
0x00003ed5      ffe0           jmp rax
0x00003ed7      660f1f840000.  nop word [rax + rax]
0x00003ee0      5d             pop rbp
0x00003ee1      c3             ret
0x00003ee2      0f1f4000       nop dword [rax]
0x00003ee6      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00003ef0      803d31922100.  cmp byte [obj.completed.7697], 0        ; [0x21d128:1]=0
0x00003ef7      752f           jne 0x3f28
0x00003ef9      48833df79021.  cmp qword [reloc.__cxa_finalize], 0     ; [0x21cff8:8]=0
0x00003f01      55             push rbp
0x00003f02      4889e5         mov rbp, rsp
0x00003f05      740c           je 0x3f13
0x00003f07      488b3dfa9021.  mov rdi, qword [obj.__dso_handle]       ; [0x21d008:8]=0x21d008 obj.__dso_handle
0x00003f0e      e8c5f1ffff     call 0x30d8
0x00003f13      e848ffffff     call sym.deregister_tm_clones
0x00003f18      c60509922100.  mov byte [obj.completed.7697], 1        ; [0x21d128:1]=0
0x00003f1f      5d             pop rbp
0x00003f20      c3             ret
0x00003f21      0f1f80000000.  nop dword [rax]
0x00003f28      f3c3           ret
0x00003f2a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00003f30      55             push rbp
0x00003f31      4889e5         mov rbp, rsp
0x00003f34      5d             pop rbp
0x00003f35      e966ffffff     jmp sym.register_tm_clones
0x00003f3a      660f1f440000   nop word [rax + rax]
;-- mkancesdirs_safe_wd:
0x00003f40      4155           push r13                                ; .//src:727
0x00003f42      4154           push r12
0x00003f44      55             push rbp
0x00003f45      53             push rbx
0x00003f46      4889f3         mov rbx, rsi
0x00003f49      4883ec28       sub rsp, 0x28
0x00003f4d      64488b042528.  mov rax, qword fs:[0x28]
0x00003f56      4889442418     mov qword [rsp + 0x18], rax
0x00003f5b      31c0           xor eax, eax
0x00003f5d      84c9           test cl, cl                             ; .//src:730
0x00003f5f      7509           jne 0x3f6a
0x00003f61      803f2f         cmp byte [rdi], 0x2f
0x00003f64      0f84a6000000   je 0x4010
0x00003f6a      488d6c2410     lea rbp, [rsp + 0x10]                   ; .//src:738
0x00003f6f      4889d1         mov rcx, rdx
0x00003f72      488d15770200.  lea rdx, sym.make_ancestor              ; 0x41f0 ; "ATUI\x89\xfcSH\x89\xf5H\x89\xd3H\x83\xec\x10\x80z!"
0x00003f79      4889df         mov rdi, rbx
0x00003f7c      c74424100000.  mov dword [rsp + 0x10], 0               ; ../coreutils-8.31/src/stall.c:81
0x00003f84      4889ee         mov rsi, rbp                            ; .//src:738
0x00003f87      e8d48d0000     call sym.mkancesdirs
0x00003f8c      4883f8ff       cmp rax, 0xffffffffffffffff
0x00003f90      0f85c4000000   jne 0x405a
0x00003f96      4889de         mov rsi, rbx                            ; .//src:740
0x00003f99      bf04000000     mov edi, 4
0x00003f9e      e84db40000     call sym.quotearg_style
0x00003fa3      488d351a2401.  lea rsi, str.cannot_create_directory__s ; 0x163c4 ; "cannot create directory %s"
0x00003faa      ba05000000     mov edx, 5
0x00003faf      31ff           xor edi, edi
0x00003fb1      4989c4         mov r12, rax
0x00003fb4      e817ebffff     call sym.imp.dcgettext
0x00003fb9      4889c3         mov rbx, rax
0x00003fbc      e88fe9ffff     call sym.imp.__errno_location
0x00003fc1      8b30           mov esi, dword [rax]
0x00003fc3      4c89e1         mov rcx, r12
0x00003fc6      4889da         mov rdx, rbx
0x00003fc9      31ff           xor edi, edi
0x00003fcb      31c0           xor eax, eax
0x00003fcd      e85eefffff     call sym.imp.error
0x00003fd2      be01000000     mov esi, 1                              ; .//src:746
0x00003fd7      4889ef         mov rdi, rbp
0x00003fda      e811c30000     call sym.savewd_restore
0x00003fdf      4889ef         mov rdi, rbp                            ; .//src:748
0x00003fe2      e869c40000     call sym.savewd_finish
0x00003fe7      31c0           xor eax, eax                            ; .//src:750
0x00003fe9      488b5c2418     mov rbx, qword [rsp + 0x18]             ; .//src:759
0x00003fee      6448331c2528.  xor rbx, qword fs:[0x28]
0x00003ff7      0f85cd000000   jne 0x40ca
0x00003ffd      4883c428       add rsp, 0x28
0x00004001      5b             pop rbx
0x00004002      5d             pop rbp
0x00004003      415c           pop r12
0x00004005      415d           pop r13
0x00004007      c3             ret
0x00004008      0f1f84000000.  nop dword [rax + rax]
0x00004010      803e2f         cmp byte [rsi], 0x2f                    ; .//src:730
0x00004013      0f8551ffffff   jne 0x3f6a
0x00004019      488d6c2410     lea rbp, [rsp + 0x10]                   ; .//src:736
0x0000401e      4889542408     mov qword [rsp + 8], rdx
0x00004023      c74424100000.  mov dword [rsp + 0x10], 0               ; ../coreutils-8.31/src/stall.c:81
0x0000402b      4889ef         mov rdi, rbp                            ; .//src:736
0x0000402e      e81dc40000     call sym.savewd_finish
0x00004033      488b542408     mov rdx, qword [rsp + 8]                ; .//src:738
0x00004038      4889ee         mov rsi, rbp
0x0000403b      4889df         mov rdi, rbx
0x0000403e      4889d1         mov rcx, rdx
0x00004041      488d15a80100.  lea rdx, sym.make_ancestor              ; 0x41f0 ; "ATUI\x89\xfcSH\x89\xf5H\x89\xd3H\x83\xec\x10\x80z!"
0x00004048      e8138d0000     call sym.mkancesdirs
0x0000404d      4883f8ff       cmp rax, 0xffffffffffffffff
0x00004051      747c           je 0x40cf
0x00004053      b801000000     mov eax, 1
0x00004058      eb8f           jmp 0x3fe9
0x0000405a      31f6           xor esi, esi                            ; .//src:746
0x0000405c      4889ef         mov rdi, rbp
0x0000405f      e88cc20000     call sym.savewd_restore
0x00004064      4189c5         mov r13d, eax
0x00004067      e8e4e8ffff     call sym.imp.__errno_location           ; .//src:747
0x0000406c      4889ef         mov rdi, rbp                            ; .//src:748
0x0000406f      448b20         mov r12d, dword [rax]                   ; .//src:747
0x00004072      e8d9c30000     call sym.savewd_finish                  ; .//src:748
0x00004077      31c0           xor eax, eax                            ; .//src:750
0x00004079      4183fd00       cmp r13d, 0                             ; .//src:749
0x0000407d      0f8f66ffffff   jg 0x3fe9
0x00004083      b801000000     mov eax, 1                              ; .//src:751
0x00004088      0f8d5bffffff   jge 0x3fe9
0x0000408e      4889de         mov rsi, rbx                            ; .//src:753
0x00004091      bf04000000     mov edi, 4
0x00004096      e855b30000     call sym.quotearg_style
0x0000409b      488d35222301.  lea rsi, str.cannot_create_directory__s ; 0x163c4 ; "cannot create directory %s"
0x000040a2      4889c3         mov rbx, rax
0x000040a5      ba05000000     mov edx, 5
0x000040aa      31ff           xor edi, edi
0x000040ac      e81feaffff     call sym.imp.dcgettext
0x000040b1      4889d9         mov rcx, rbx
0x000040b4      4889c2         mov rdx, rax
0x000040b7      4489e6         mov esi, r12d
0x000040ba      31c0           xor eax, eax
0x000040bc      31ff           xor edi, edi
0x000040be      e86deeffff     call sym.imp.error
0x000040c3      31c0           xor eax, eax                            ; .//src:755
0x000040c5      e91fffffff     jmp 0x3fe9
0x000040ca      e861eaffff     call sym.imp.__stack_chk_fail           ; .//src:759
0x000040cf      4889de         mov rsi, rbx                            ; .//src:740
0x000040d2      bf04000000     mov edi, 4
0x000040d7      e814b30000     call sym.quotearg_style
0x000040dc      488d35e12201.  lea rsi, str.cannot_create_directory__s ; 0x163c4 ; "cannot create directory %s"
0x000040e3      ba05000000     mov edx, 5
0x000040e8      31ff           xor edi, edi
0x000040ea      4889c5         mov rbp, rax
0x000040ed      e8dee9ffff     call sym.imp.dcgettext
0x000040f2      4889c3         mov rbx, rax
0x000040f5      e856e8ffff     call sym.imp.__errno_location
0x000040fa      8b30           mov esi, dword [rax]
0x000040fc      4889e9         mov rcx, rbp
0x000040ff      31c0           xor eax, eax
0x00004101      4889da         mov rdx, rbx
0x00004104      31ff           xor edi, edi
0x00004106      e825eeffff     call sym.imp.error
0x0000410b      31c0           xor eax, eax
0x0000410d      e9d7feffff     jmp 0x3fe9
0x00004112      0f1f4000       nop dword [rax]
0x00004116      662e0f1f8400.  nop word cs:[rax + rax]
;-- process_dir:
0x00004120      55             push rbp                                ; .//src:444
0x00004121      53             push rbx
0x00004122      4889d1         mov rcx, rdx                            ; .//src:447
0x00004125      4889d3         mov rbx, rdx                            ; .//src:444
0x00004128      4c8d0da10000.  lea r9, sym.announce_mkdir              ; .//src:447 ; 0x41d0
0x0000412f      488d15ba0000.  lea rdx, sym.make_ancestor              ; 0x41f0 ; "ATUI\x89\xfcSH\x89\xf5H\x89\xd3H\x83\xec\x10\x80z!"
0x00004136      4883ec08       sub rsp, 8                              ; .//src:444
0x0000413a      8b0504b02100   mov eax, dword [obj.group_id]           ; .//src:447 ; [0x21f144:4]=0
0x00004140      448b05d18e21.  mov r8d, dword [obj.dir_mode]           ; [0x21d018:4]=493
0x00004147      6a00           push 0
0x00004149      50             push rax
0x0000414a      8b0500b02100   mov eax, dword [obj.owner_id]           ; [0x21f150:4]=0
0x00004150      50             push rax
0x00004151      8b05bd8e2100   mov eax, dword [obj.dir_mode_bits]      ; [0x21d014:4]=0xfff
0x00004157      50             push rax
0x00004158      e8738d0000     call sym.make_dir_parents
0x0000415d      83f001         xor eax, 1                              ; .//src:451
0x00004160      4883c420       add rsp, 0x20                           ; .//src:458
0x00004164      84c0           test al, al
0x00004166      0fb6e8         movzx ebp, al                           ; .//src:447
0x00004169      7511           jne 0x417c                              ; .//src:458
0x0000416b      807b2100       cmp byte [rbx + 0x21], 0
0x0000416f      740b           je 0x417c
0x00004171      e8dae7ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/savewd.h:41
0x00004176      c7005f000000   mov dword [rax], 0x5f                   ; '_'
                                                                       ; [0x5f:4]=0x1f800
0x0000417c      4883c408       add rsp, 8                              ; .//src:467
0x00004180      89e8           mov eax, ebp
0x00004182      5b             pop rbx
0x00004183      5d             pop rbp
0x00004184      c3             ret
0x00004185      90             nop
0x00004186      662e0f1f8400.  nop word cs:[rax + rax]
;-- announce_mkdir.part.9:
0x00004190      53             push rbx                                ; .//src:416
0x00004191      4889fe         mov rsi, rdi
0x00004194      bf04000000     mov edi, 4                              ; .//src:420
0x00004199      e852b20000     call sym.quotearg_style
0x0000419e      488d353a2201.  lea rsi, str.creating_directory__s      ; 0x163df ; "creating directory %s"
0x000041a5      4889c3         mov rbx, rax
0x000041a8      ba05000000     mov edx, 5
0x000041ad      31ff           xor edi, edi
0x000041af      e81ce9ffff     call sym.imp.dcgettext
0x000041b4      4889da         mov rdx, rbx
0x000041b7      488b3d2a8f21.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21d0e8:8]=0
0x000041be      4889c6         mov rsi, rax
0x000041c1      5b             pop rbx                                 ; .//src:421
0x000041c2      31c0           xor eax, eax                            ; .//src:420
0x000041c4      e9a70b0000     jmp sym.prog_fprintf
0x000041c9      0f1f80000000.  nop dword [rax]
;-- announce_mkdir:
0x000041d0      807e2e00       cmp byte [rsi + 0x2e], 0                ; .//src:417
0x000041d4      750a           jne 0x41e0
0x000041d6      f3c3           ret                                     ; .//src:421
0x000041d8      0f1f84000000.  nop dword [rax + rax]
0x000041e0      ebae           jmp sym.announce_mkdir.part.9
0x000041e2      0f1f4000       nop dword [rax]
0x000041e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- make_ancestor:
0x000041f0      4154           push r12                                ; .//src:428
0x000041f2      55             push rbp
0x000041f3      4989fc         mov r12, rdi
0x000041f6      53             push rbx
0x000041f7      4889f5         mov rbp, rsi
0x000041fa      4889d3         mov rbx, rdx
0x000041fd      4883ec10       sub rsp, 0x10
0x00004201      807a2100       cmp byte [rdx + 0x21], 0                ; .//src:430
0x00004205      740b           je 0x4212
0x00004207      e844e7ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/savewd.h:45
0x0000420c      c7005f000000   mov dword [rax], 0x5f                   ; '_'
                                                                       ; [0x5f:4]=0x1f800
0x00004212      beed010000     mov esi, 0x1ed                          ; .//src:435
0x00004217      4889ef         mov rdi, rbp
0x0000421a      e8a1e7ffff     call sym.imp.mkdir
0x0000421f      85c0           test eax, eax                           ; .//src:436
0x00004221      7506           jne 0x4229
0x00004223      807b2e00       cmp byte [rbx + 0x2e], 0                ; .//src:419
0x00004227      750f           jne 0x4238
0x00004229      4883c410       add rsp, 0x10                           ; .//src:439
0x0000422d      5b             pop rbx
0x0000422e      5d             pop rbp
0x0000422f      415c           pop r12
0x00004231      c3             ret
0x00004232      660f1f440000   nop word [rax + rax]
0x00004238      4c89e7         mov rdi, r12
0x0000423b      8944240c       mov dword [rsp + 0xc], eax
0x0000423f      e84cffffff     call sym.announce_mkdir.part.9
0x00004244      8b44240c       mov eax, dword [rsp + 0xc]
0x00004248      4883c410       add rsp, 0x10
0x0000424c      5b             pop rbx
0x0000424d      5d             pop rbp
0x0000424e      415c           pop r12
0x00004250      c3             ret
0x00004251      0f1f440000     nop dword [rax + rax]
0x00004256      662e0f1f8400.  nop word cs:[rax + rax]
;-- install_file_in_file:
0x00004260      4157           push r15                                ; .//src:698
0x00004262      4156           push r14
0x00004264      4155           push r13
0x00004266      4154           push r12
0x00004268      4989fc         mov r12, rdi
0x0000426b      55             push rbp
0x0000426c      53             push rbx
0x0000426d      4889f5         mov rbp, rsi
0x00004270      4889d3         mov rbx, rdx
0x00004273      4881ece80100.  sub rsp, 0x1e8
0x0000427a      64488b042528.  mov rax, qword fs:[0x28]
0x00004283      48898424d801.  mov qword [rsp + 0x1d8], rax
0x0000428b      31c0           xor eax, eax
0x0000428d      807a1f00       cmp byte [rdx + 0x1f], 0                ; .//src:700
0x00004291      741a           je 0x42ad
0x00004293      488d542420     lea rdx, [rsp + 0x20]                   ; ../coreutils-8.31/src/selinux.h:451
0x00004298      4889fe         mov rsi, rdi
0x0000429b      bf01000000     mov edi, 1
0x000042a0      e82bebffff     call sym.imp.__xstat
0x000042a5      85c0           test eax, eax                           ; .//src:700
0x000042a7      0f8573030000   jne 0x4620
0x000042ad      803d8eae2100.  cmp byte [obj.copy_only_if_needed], 0   ; .//src:477 ; [0x21f142:1]=0
0x000042b4      7414           je 0x42ca
0x000042b6      448b2d5f8d21.  mov r13d, dword [obj.mode]              ; .//src:181 ; [0x21d01c:4]=493
0x000042bd      41f7c5000eff.  test r13d, 0xffff0e00
0x000042c4      0f84be010000   je 0x4488
0x000042ca      4c8d44241c     lea r8, [rsp + 0x1c]                    ; .//src:486
0x000042cf      4531c9         xor r9d, r9d
0x000042d2      31d2           xor edx, edx
0x000042d4      4889d9         mov rcx, rbx
0x000042d7      4889ee         mov rsi, rbp
0x000042da      4c89e7         mov rdi, r12
0x000042dd      e84e5a0000     call sym.copy
0x000042e2      84c0           test al, al                             ; .//src:705
0x000042e4      753d           jne 0x4323
0x000042e6      31db           xor ebx, ebx                            ; .//src:716
0x000042e8      488b8c24d801.  mov rcx, qword [rsp + 0x1d8]            ; .//src:718
0x000042f0      6448330c2528.  xor rcx, qword fs:[0x28]
0x000042f9      89d8           mov eax, ebx
0x000042fb      0f8547050000   jne 0x4848
0x00004301      4881c4e80100.  add rsp, 0x1e8
0x00004308      5b             pop rbx
0x00004309      5d             pop rbp
0x0000430a      415c           pop r12
0x0000430c      415d           pop r13
0x0000430e      415e           pop r14
0x00004310      415f           pop r15
0x00004312      c3             ret
0x00004313      4489ef         mov edi, r13d                           ; .//src:257
0x00004316      e815e9ffff     call sym.imp.close
0x0000431b      4489f7         mov edi, r14d                           ; .//src:258
0x0000431e      e80de9ffff     call sym.imp.close
0x00004323      803d17ae2100.  cmp byte [obj.strip_files], 0           ; .//src:707 ; [0x21f141:1]=0
0x0000432a      0f8590030000   jne 0x46c0
0x00004330      807b1f00       cmp byte [rbx + 0x1f], 0                ; .//src:714
0x00004334      0f84a6000000   je 0x43e0
0x0000433a      8b442438       mov eax, dword [rsp + 0x38]
0x0000433e      2500f00000     and eax, 0xf000
0x00004343      3d00800000     cmp eax, 0x8000
0x00004348      0f8492000000   je 0x43e0
0x0000434e      488b442468     mov rax, qword [rsp + 0x68]             ; .//src:529
0x00004353      488db4244001.  lea rsi, [rsp + 0x140]                  ; .//src:532
0x0000435b      4889ef         mov rdi, rbp
0x0000435e      488984244001.  mov qword [rsp + 0x140], rax            ; .//src:529
0x00004366      488b442470     mov rax, qword [rsp + 0x70]
0x0000436b      488984244801.  mov qword [rsp + 0x148], rax
0x00004373      488b442478     mov rax, qword [rsp + 0x78]             ; .//src:530
0x00004378      488984245001.  mov qword [rsp + 0x150], rax
0x00004380      488b84248000.  mov rax, qword [rsp + 0x80]
0x00004388      488984245801.  mov qword [rsp + 0x158], rax
0x00004390      e8abd30000     call sym.utimens                        ; .//src:532
0x00004395      85c0           test eax, eax
0x00004397      7447           je 0x43e0
0x00004399      4889ee         mov rsi, rbp                            ; .//src:534
0x0000439c      bf04000000     mov edi, 4
0x000043a1      e84ab00000     call sym.quotearg_style
0x000043a6      488d35a02001.  lea rsi, str.cannot_set_timestamps_for__s ; 0x1644d ; "cannot set timestamps for %s"
0x000043ad      4889c5         mov rbp, rax
0x000043b0      ba05000000     mov edx, 5
0x000043b5      31ff           xor edi, edi
0x000043b7      e814e7ffff     call sym.imp.dcgettext
0x000043bc      4889c3         mov rbx, rax
0x000043bf      e88ce5ffff     call sym.imp.__errno_location
0x000043c4      8b30           mov esi, dword [rax]
0x000043c6      4889e9         mov rcx, rbp
0x000043c9      4889da         mov rdx, rbx
0x000043cc      31ff           xor edi, edi
0x000043ce      31c0           xor eax, eax
0x000043d0      e85bebffff     call sym.imp.error
0x000043d5      e90cffffff     jmp 0x42e6
0x000043da      660f1f440000   nop word [rax + rax]
0x000043e0      8b356aad2100   mov esi, dword [obj.owner_id]           ; .//src:508 ; [0x21f150:4]=0
0x000043e6      8b1558ad2100   mov edx, dword [obj.group_id]           ; [0x21f144:4]=0
0x000043ec      83feff         cmp esi, 0xffffffff
0x000043ef      7505           jne 0x43f6
0x000043f1      83faff         cmp edx, 0xffffffff
0x000043f4      7410           je 0x4406
0x000043f6      4889ef         mov rdi, rbp                            ; .//src:509
0x000043f9      e842eaffff     call sym.imp.lchown
0x000043fe      85c0           test eax, eax
0x00004400      0f8542020000   jne 0x4648
0x00004406      8b35108c2100   mov esi, dword [obj.mode]               ; .//src:511 ; [0x21d01c:4]=493
0x0000440c      4889ef         mov rdi, rbp
0x0000440f      bb01000000     mov ebx, 1                              ; .//src:514
0x00004414      e8f7eaffff     call sym.imp.chmod                      ; .//src:511
0x00004419      85c0           test eax, eax
0x0000441b      0f857f020000   jne 0x46a0
0x00004421      803df88b2100.  cmp byte [obj.use_default_selinux_context], 0 ; .//src:516 ; [0x21d020:1]=1
0x00004428      0f84bafeffff   je 0x42e8
0x0000442e      833d2bad2100.  cmp dword [obj.selinux_enabled], 1      ; .//src:320 ; [0x21f160:4]=0
0x00004435      0f85adfeffff   jne 0x42e8
0x0000443b      488d94244001.  lea rdx, [rsp + 0x140]                  ; ../coreutils-8.31/src/selinux.h:458
0x00004443      4889ee         mov rsi, rbp
0x00004446      bf01000000     mov edi, 1
0x0000444b      e8b0e6ffff     call sym.imp.__lxstat
0x00004450      85c0           test eax, eax                           ; .//src:325
0x00004452      0f8590feffff   jne 0x42e8
0x00004458      803db18b2100.  cmp byte [obj.first_call.7488], 0       ; .//src:328 ; [0x21d010:1]=1
0x0000445f      740a           je 0x446b
0x00004461      807d002f       cmp byte [rbp], 0x2f
0x00004465      0f8466030000   je 0x47d1
0x0000446b      c6059e8b2100.  mov byte [obj.first_call.7488], 0       ; .//src:363 ; [0x21d010:1]=1
0x00004472      e8d9e4ffff     call sym.imp.__errno_location           ; stat.h:102
0x00004477      c7005f000000   mov dword [rax], 0x5f                   ; '_'
                                                                       ; [0x5f:4]=0x1f800
0x0000447d      e966feffff     jmp 0x42e8
0x00004482      660f1f440000   nop word [rax + rax]
0x00004488      488d9424b000.  lea rdx, [rsp + 0xb0]                   ; ../coreutils-8.31/src/selinux.h:458
0x00004490      4c89e6         mov rsi, r12
0x00004493      bf01000000     mov edi, 1
0x00004498      e863e6ffff     call sym.imp.__lxstat
0x0000449d      85c0           test eax, eax                           ; .//src:185
0x0000449f      0f8525feffff   jne 0x42ca
0x000044a5      488d94244001.  lea rdx, [rsp + 0x140]                  ; ../coreutils-8.31/src/selinux.h:458
0x000044ad      4889ee         mov rsi, rbp
0x000044b0      bf01000000     mov edi, 1
0x000044b5      e846e6ffff     call sym.imp.__lxstat
0x000044ba      85c0           test eax, eax                           ; .//src:188
0x000044bc      0f8508feffff   jne 0x42ca
0x000044c2      8b8424c80000.  mov eax, dword [rsp + 0xc8]             ; .//src:191
0x000044c9      89c2           mov edx, eax
0x000044cb      81e200f00000   and edx, 0xf000
0x000044d1      81fa00800000   cmp edx, 0x8000
0x000044d7      0f85edfdffff   jne 0x42ca
0x000044dd      8b9424580100.  mov edx, dword [rsp + 0x158]
0x000044e4      89d1           mov ecx, edx
0x000044e6      81e100f00000   and ecx, 0xf000
0x000044ec      81f900800000   cmp ecx, 0x8000
0x000044f2      0f85d2fdffff   jne 0x42ca
0x000044f8      a9000effff     test eax, 0xffff0e00                    ; .//src:192
0x000044fd      0f85c7fdffff   jne 0x42ca
0x00004503      f7c2000effff   test edx, 0xffff0e00
0x00004509      0f85bbfdffff   jne 0x42ca
0x0000450f      488b84247001.  mov rax, qword [rsp + 0x170]            ; .//src:195
0x00004517      48398424e000.  cmp qword [rsp + 0xe0], rax
0x0000451f      0f85a5fdffff   jne 0x42ca
0x00004525      81e2ff0f0000   and edx, 0xfff                          ; .//src:196
0x0000452b      4139d5         cmp r13d, edx
0x0000452e      0f8596fdffff   jne 0x42ca
0x00004534      8b0516ac2100   mov eax, dword [obj.owner_id]           ; .//src:199 ; [0x21f150:4]=0
0x0000453a      83f8ff         cmp eax, 0xffffffff
0x0000453d      0f849b030000   je 0x48de
0x00004543      3b84245c0100.  cmp eax, dword [rsp + 0x15c]            ; .//src:206
0x0000454a      0f857afdffff   jne 0x42ca
0x00004550      8b05eeab2100   mov eax, dword [obj.group_id]           ; .//src:209 ; [0x21f144:4]=0
0x00004556      83f8ff         cmp eax, 0xffffffff
0x00004559      0f8446030000   je 0x48a5
0x0000455f      3b8424600100.  cmp eax, dword [rsp + 0x160]            ; .//src:216
0x00004566      0f855efdffff   jne 0x42ca
0x0000456c      833dedab2100.  cmp dword [obj.selinux_enabled], 0      ; .//src:220 ; [0x21f160:4]=0
0x00004573      740a           je 0x457f
0x00004575      807b2500       cmp byte [rbx + 0x25], 0
0x00004579      0f858b030000   jne 0x490a
0x0000457f      31f6           xor esi, esi                            ; ./lib/selinux/selinux.h:53
0x00004581      31c0           xor eax, eax
0x00004583      4c89e7         mov rdi, r12
0x00004586      e8d5e9ffff     call sym.imp.open
0x0000458b      85c0           test eax, eax                           ; .//src:245
0x0000458d      4189c5         mov r13d, eax                           ; ./lib/selinux/selinux.h:53
0x00004590      0f8834fdffff   js 0x42ca                               ; .//src:245
0x00004596      31f6           xor esi, esi                            ; ./lib/selinux/selinux.h:53
0x00004598      31c0           xor eax, eax
0x0000459a      4889ef         mov rdi, rbp
0x0000459d      e8bee9ffff     call sym.imp.open
0x000045a2      85c0           test eax, eax                           ; .//src:249
0x000045a4      4189c6         mov r14d, eax                           ; ./lib/selinux/selinux.h:53
0x000045a7      4c8d3d928b21.  lea r15, obj.a_buff.7455                ; 0x21d140
0x000045ae      0f881d030000   js 0x48d1
0x000045b4      ba00100000     mov edx, 0x1000
0x000045b9      4c89fe         mov rsi, r15
0x000045bc      4489ef         mov edi, r13d
0x000045bf      e8ec720000     call sym.full_read
0x000045c4      4885c0         test rax, rax
0x000045c7      4889c1         mov rcx, rax
0x000045ca      0f8443fdffff   je 0x4313
0x000045d0      488d35699b21.  lea rsi, obj.b_buff.7456                ; 0x21e140
0x000045d7      ba00100000     mov edx, 0x1000
0x000045dc      4489f7         mov edi, r14d
0x000045df      48894c2408     mov qword [rsp + 8], rcx
0x000045e4      e8c7720000     call sym.full_read
0x000045e9      488b4c2408     mov rcx, qword [rsp + 8]                ; .//src:-67
0x000045ee      4839c8         cmp rax, rcx
0x000045f1      7516           jne 0x4609                              ; .//src:-94
0x000045f3      488d35469b21.  lea rsi, obj.b_buff.7456                ; 0x21e140
0x000045fa      4889c2         mov rdx, rax
0x000045fd      4c89ff         mov rdi, r15
0x00004600      e88be6ffff     call sym.imp.memcmp                     ; .//src:350
0x00004605      85c0           test eax, eax
0x00004607      74ab           je 0x45b4
0x00004609      4489ef         mov edi, r13d
0x0000460c      e81fe6ffff     call sym.imp.close
0x00004611      4489f7         mov edi, r14d
0x00004614      e817e6ffff     call sym.imp.close
0x00004619      e9acfcffff     jmp 0x42ca
0x0000461e      6690           nop
0x00004620      4c89e6         mov rsi, r12
0x00004623      bf04000000     mov edi, 4
0x00004628      e8c3ad0000     call sym.quotearg_style                 ; .//src:158
0x0000462d      ba05000000     mov edx, 5
0x00004632      4889c5         mov rbp, rax
0x00004635      488d35b91d01.  lea rsi, str.cannot_stat__s             ; 0x163f5 ; "cannot stat %s"
0x0000463c      e974fdffff     jmp 0x43b5
0x00004641      0f1f80000000.  nop dword [rax]
0x00004648      4889ee         mov rsi, rbp
0x0000464b      bf04000000     mov edi, 4
0x00004650      e89bad0000     call sym.quotearg_style
0x00004655      488d350e1e01.  lea rsi, str.cannot_change_ownership_of__s ; 0x1646a ; "cannot change ownership of %s"
0x0000465c      4989c4         mov r12, rax
0x0000465f      ba05000000     mov edx, 5                              ; .//src:143
0x00004664      31ff           xor edi, edi
0x00004666      e865e4ffff     call sym.imp.dcgettext                  ; .//src:164
0x0000466b      4889c3         mov rbx, rax
0x0000466e      e8dde2ffff     call sym.imp.__errno_location
0x00004673      8b30           mov esi, dword [rax]
0x00004675      4889da         mov rdx, rbx
0x00004678      31ff           xor edi, edi
0x0000467a      31c0           xor eax, eax
0x0000467c      4c89e1         mov rcx, r12
0x0000467f      31db           xor ebx, ebx
0x00004681      e8aae8ffff     call sym.imp.error
0x00004686      803d93892100.  cmp byte [obj.use_default_selinux_context], 0 ; [0x21d020:1]=1
0x0000468d      0f8455fcffff   je 0x42e8
0x00004693      e996fdffff     jmp 0x442e
0x00004698      0f1f84000000.  nop dword [rax + rax]
0x000046a0      4889ee         mov rsi, rbp                            ; .//src:199
0x000046a3      bf04000000     mov edi, 4
0x000046a8      e843ad0000     call sym.quotearg_style
0x000046ad      ba05000000     mov edx, 5
0x000046b2      4989c4         mov r12, rax                            ; .//src:210
0x000046b5      488d35f41f01.  lea rsi, str.cannot_change_permissions_of__s ; 0x166b0 ; "cannot change permissions of %s"
0x000046bc      eba6           jmp 0x4664
0x000046be      6690           nop
0x000046c0      e8dbe9ffff     call sym.imp.fork
0x000046c5      83f8ff         cmp eax, 0xffffffff
0x000046c8      7456           je 0x4720                               ; .//src:212
0x000046ca      85c0           test eax, eax
0x000046cc      0f847b010000   je 0x484d
0x000046d2      488d74241c     lea rsi, [rsp + 0x1c]
0x000046d7      31d2           xor edx, edx
0x000046d9      89c7           mov edi, eax                            ; .//src:213
0x000046db      e860e8ffff     call sym.imp.waitpid
0x000046e0      85c0           test eax, eax
0x000046e2      0f88d8000000   js 0x47c0
0x000046e8      8b44241c       mov eax, dword [rsp + 0x1c]
0x000046ec      a87f           test al, 0x7f
0x000046ee      7509           jne 0x46f9
0x000046f0      f6c4ff         test ah, 0xff
0x000046f3      0f84a7000000   je 0x47a0
0x000046f9      488d35881f01.  lea rsi, str.strip_process_terminated_abnormally ; 0x16688 ; "strip process terminated abnormally"
0x00004700      31ff           xor edi, edi                            ; .//src:204
0x00004702      ba05000000     mov edx, 5
0x00004707      e8c4e3ffff     call sym.imp.dcgettext
0x0000470c      31f6           xor esi, esi                            ; .//src:211
0x0000470e      4889c2         mov rdx, rax
0x00004711      31ff           xor edi, edi
0x00004713      31c0           xor eax, eax
0x00004715      e816e8ffff     call sym.imp.error
0x0000471a      eb2d           jmp 0x4749
0x0000471c      0f1f4000       nop dword [rax]
0x00004720      488d35dd1c01.  lea rsi, str.fork_system_call_failed    ; 0x16404 ; "fork system call failed"
0x00004727      ba05000000     mov edx, 5
0x0000472c      31ff           xor edi, edi
0x0000472e      e89de3ffff     call sym.imp.dcgettext
0x00004733      4889c3         mov rbx, rax
0x00004736      e815e2ffff     call sym.imp.__errno_location
0x0000473b      8b30           mov esi, dword [rax]
0x0000473d      4889da         mov rdx, rbx
0x00004740      31ff           xor edi, edi
0x00004742      31c0           xor eax, eax
0x00004744      e8e7e7ffff     call sym.imp.error
0x00004749      4889ef         mov rdi, rbp
0x0000474c      e80fe2ffff     call sym.imp.unlink
0x00004751      85c0           test eax, eax
0x00004753      0f848dfbffff   je 0x42e6
0x00004759      4889ee         mov rsi, rbp
0x0000475c      bf04000000     mov edi, 4
0x00004761      e88aac0000     call sym.quotearg_style
0x00004766      488d35cf1c01.  lea rsi, str.cannot_unlink__s           ; 0x1643c ; "cannot unlink %s"
0x0000476d      ba05000000     mov edx, 5
0x00004772      31ff           xor edi, edi
0x00004774      4889c5         mov rbp, rax
0x00004777      e854e3ffff     call sym.imp.dcgettext
0x0000477c      4889c3         mov rbx, rax
0x0000477f      e8cce1ffff     call sym.imp.__errno_location
0x00004784      8b30           mov esi, dword [rax]
0x00004786      4889e9         mov rcx, rbp
0x00004789      4889da         mov rdx, rbx
0x0000478c      bf01000000     mov edi, 1
0x00004791      31c0           xor eax, eax
0x00004793      e898e7ffff     call sym.imp.error
0x00004798      0f1f84000000.  nop dword [rax + rax]
0x000047a0      807b1f00       cmp byte [rbx + 0x1f], 0
0x000047a4      0f8436fcffff   je 0x43e0
0x000047aa      803d90a92100.  cmp byte [obj.strip_files], 0           ; [0x21f141:1]=0
0x000047b1      0f8597fbffff   jne 0x434e                              ; .//src:-13
0x000047b7      e97efbffff     jmp 0x433a
0x000047bc      0f1f4000       nop dword [rax]
0x000047c0      ba05000000     mov edx, 5                              ; .//src:-12
0x000047c5      488d355e1c01.  lea rsi, str.waiting_for_strip          ; 0x1642a ; "waiting for strip"
0x000047cc      e95bffffff     jmp 0x472c                              ; .//src:-7
0x000047d1      0fb65501       movzx edx, byte [rbp + 1]
0x000047d5      488d4501       lea rax, [rbp + 1]
0x000047d9      80fa2f         cmp dl, 0x2f                            ; .//src:0
0x000047dc      750e           jne 0x47ec
0x000047de      6690           nop                                     ; .//src:-2
0x000047e0      4883c001       add rax, 1
0x000047e4      0fb610         movzx edx, byte [rax]
0x000047e7      80fa2f         cmp dl, 0x2f
0x000047ea      74f4           je 0x47e0
0x000047ec      84d2           test dl, dl
0x000047ee      0f8477fcffff   je 0x446b
0x000047f4      4889c2         mov rdx, rax
0x000047f7      eb05           jmp 0x47fe
0x000047f9      80f92f         cmp cl, 0x2f
0x000047fc      740b           je 0x4809                               ; .//src:3
0x000047fe      4883c201       add rdx, 1
0x00004802      0fb60a         movzx ecx, byte [rdx]
0x00004805      84c9           test cl, cl
0x00004807      75f0           jne 0x47f9
0x00004809      488d68ff       lea rbp, [rax - 1]
0x0000480d      4829ea         sub rdx, rbp
0x00004810      488d7a02       lea rdi, [rdx + 2]
0x00004814      4989d4         mov r12, rdx
0x00004817      e8d4e5ffff     call sym.imp.malloc
0x0000481c      4885c0         test rax, rax
0x0000481f      4989c5         mov r13, rax
0x00004822      0f8443fcffff   je 0x446b
0x00004828      4c89e2         mov rdx, r12                            ; .//src:366
0x0000482b      4889ee         mov rsi, rbp
0x0000482e      4889c7         mov rdi, rax
0x00004831      e86ae6ffff     call sym.imp.stpncpy
0x00004836      4c89ef         mov rdi, r13
0x00004839      66c7002f00     mov word [rax], 0x2f                    ; '/'
                                                                       ; [0x2f:2]=0
0x0000483e      e88de8ffff     call sym..plt.got
0x00004843      e923fcffff     jmp 0x446b
0x00004848      e8e3e2ffff     call sym.imp.__stack_chk_fail
0x0000484d      488b1dd48721.  mov rbx, qword [obj.strip_program]      ; [0x21d028:8]=0x16436 ; "6d\x01"
0x00004854      31c9           xor ecx, ecx
0x00004856      4889ea         mov rdx, rbp
0x00004859      31c0           xor eax, eax
0x0000485b      4889de         mov rsi, rbx
0x0000485e      4889df         mov rdi, rbx
0x00004861      e81ae8ffff     call sym.imp.execlp
0x00004866      4889de         mov rsi, rbx
0x00004869      bf04000000     mov edi, 4
0x0000486e      e87dab0000     call sym.quotearg_style
0x00004873      488d35a21b01.  lea rsi, str.cannot_run__s              ; 0x1641c ; "cannot run %s"
0x0000487a      ba05000000     mov edx, 5
0x0000487f      31ff           xor edi, edi
0x00004881      4889c5         mov rbp, rax
0x00004884      e847e2ffff     call sym.imp.dcgettext
0x00004889      4889c3         mov rbx, rax
0x0000488c      e8bfe0ffff     call sym.imp.__errno_location
0x00004891      8b30           mov esi, dword [rax]
0x00004893      4889e9         mov rcx, rbp                            ; .//src:-140
0x00004896      4889da         mov rdx, rbx
0x00004899      bf01000000     mov edi, 1
0x0000489e      31c0           xor eax, eax
0x000048a0      e88be6ffff     call sym.imp.error
0x000048a5      e8a6e0ffff     call sym.imp.__errno_location
0x000048aa      c70000000000   mov dword [rax], 0
0x000048b0      4989c5         mov r13, rax
0x000048b3      e808e5ffff     call sym.imp.getgid
0x000048b8      83f8ff         cmp eax, 0xffffffff
0x000048bb      0f859efcffff   jne 0x455f
0x000048c1      41837d0000     cmp dword [r13], 0
0x000048c6      0f8493fcffff   je 0x455f
0x000048cc      e9f9f9ffff     jmp 0x42ca                              ; .//src:-150
0x000048d1      4489ef         mov edi, r13d                           ; .//src:-149
0x000048d4      e857e3ffff     call sym.imp.close
0x000048d9      e9ecf9ffff     jmp 0x42ca
0x000048de      e86de0ffff     call sym.imp.__errno_location
0x000048e3      c70000000000   mov dword [rax], 0
0x000048e9      4989c5         mov r13, rax
0x000048ec      e84fe2ffff     call sym.imp.getuid
0x000048f1      83f8ff         cmp eax, 0xffffffff
0x000048f4      0f8549fcffff   jne 0x4543
0x000048fa      41837d0000     cmp dword [r13], 0
0x000048ff      0f843efcffff   je 0x4543
0x00004905      e9c0f9ffff     jmp 0x42ca
0x0000490a      e841e0ffff     call sym.imp.__errno_location
0x0000490f      c7005f000000   mov dword [rax], 0x5f                   ; '_'
                                                                       ; [0x5f:4]=0x1f800
0x00004915      e9b0f9ffff     jmp 0x42ca
0x0000491a      660f1f440000   nop word [rax + rax]
;-- usage:
0x00004920      4155           push r13
0x00004922      4154           push r12
0x00004924      ba05000000     mov edx, 5
0x00004929      55             push rbp
0x0000492a      53             push rbx
0x0000492b      89fd           mov ebp, edi                            ; .//src:271
0x0000492d      4881ec880000.  sub rsp, 0x88
0x00004934      488b1d85ac21.  mov rbx, qword [obj.program_name]       ; [0x21f5c0:8]=0
0x0000493b      64488b042528.  mov rax, qword fs:[0x28]
0x00004944      4889442478     mov qword [rsp + 0x78], rax
0x00004949      31c0           xor eax, eax
0x0000494b      85ff           test edi, edi
0x0000494d      742e           je 0x497d
0x0000494f      488d357a1d01.  lea rsi, str.Try___s___help__for_more_information. ; 0x166d0 ; "Try '%s --help' for more information.\n"
0x00004956      31ff           xor edi, edi                            ; .//src:336
0x00004958      e873e1ffff     call sym.imp.dcgettext
0x0000495d      488b3dbc8721.  mov rdi, qword [obj.stderr]             ; .//src:275 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21d120:8]=0
0x00004964      4889c2         mov rdx, rax
0x00004967      4889d9         mov rcx, rbx
0x0000496a      be01000000     mov esi, 1
0x0000496f      31c0           xor eax, eax
0x00004971      e8dae6ffff     call sym.imp.__fprintf_chk
0x00004976      89ef           mov edi, ebp
0x00004978      e8b3e6ffff     call sym.imp.exit
0x0000497d      488d35741d01.  lea rsi, str.Usage:__s__OPTION_...___T__SOURCE_DEST____or:___s__OPTION_..._SOURCE..._DIRECTORY____or:___s__OPTION_...__t_DIRECTORY_SOURCE...____or:___s__OPTION_...__d_DIRECTORY... ; 0x166f8 ; "Usage: %s [OPTION]... [-T] SOURCE DEST\n  or:  %s [OPTION]... SOURCE... DIRECTORY\n  or:  %s [OPTION]... -t DIRECTORY SOURCE...\n  or:  %s [OPTION]... -d DIRECTORY...\n"
0x00004984      31ff           xor edi, edi
0x00004986      e845e1ffff     call sym.imp.dcgettext                  ; .//src:282
0x0000498b      4889d9         mov rcx, rbx
0x0000498e      4989d9         mov r9, rbx
0x00004991      4989d8         mov r8, rbx
0x00004994      4889da         mov rdx, rbx
0x00004997      4889c6         mov rsi, rax
0x0000499a      bf01000000     mov edi, 1
0x0000499f      31c0           xor eax, eax
0x000049a1      e83ae5ffff     call sym.imp.__printf_chk
0x000049a6      488b1d3b8721.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21d0e8:8]=0
0x000049ad      488d35ec1d01.  lea rsi, str.This_install_program_copies_files__often_just_compiled__into_destination__locations_you_choose.__If_you_want_to_download_and_install_a_ready_to_use__package_on_a_GNU_Linux_system__you_should_instead_be_using_a_package_manager__like_yum_1__or_apt_get_1_.____In_the_first_three_forms__copy_SOURCE_to_DEST_or_multiple_SOURCE_s__to__the_existing_DIRECTORY__while_setting_permission_modes_and_owner_group.__In_the_4th_form__create_all_components_of_the_given_DIRECTORY_ies_. ; 0x167a0 ; "\nThis install program copies files (often just compiled) into destination\nlocations you choose.  If you want to download and install a ready-to-use\npackage on a GNU/Linux system, you should instead be using a package manager\nlike yum(1) or apt-get(1).\n\nIn the first three forms, copy SOURCE to DEST or multiple SOURCE(s) to\nthe existing DIRECTORY, while setting permission modes and owner/group.\nIn the 4th form, create all components of the given DIRECTORY(ies).\n"
0x000049b4      ba05000000     mov edx, 5
0x000049b9      31ff           xor edi, edi
0x000049bb      e810e1ffff     call sym.imp.dcgettext
0x000049c0      4889de         mov rsi, rbx
0x000049c3      4889c7         mov rdi, rax
0x000049c6      e8e5e2ffff     call sym.imp.fputs_unlocked
0x000049cb      488b1d168721.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21d0e8:8]=0
0x000049d2      488d359f1f01.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0x16978 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x000049d9      ba05000000     mov edx, 5
0x000049de      31ff           xor edi, edi
0x000049e0      e8ebe0ffff     call sym.imp.dcgettext
0x000049e5      4889de         mov rsi, rbx
0x000049e8      4889c7         mov rdi, rax
0x000049eb      e8c0e2ffff     call sym.imp.fputs_unlocked
0x000049f0      488b1df18621.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21d0e8:8]=0
0x000049f7      488d35ca1f01.  lea rsi, str.backup__CONTROL___make_a_backup_of_each_existing_destination_file_____b__________________like___backup_but_does_not_accept_an_argument_____c___________________ignored______C____compare_______compare_each_pair_of_source_and_destination_files__and__________________________in_some_cases__do_not_modify_the_destination_at_all_____d____directory_____treat_all_arguments_as_directory_names__create_all__________________________components_of_the_specified_directories ; 0x169c8 ; "      --backup[=CONTROL]  make a backup of each existing destination file\n  -b                  like --backup but does not accept an argument\n  -c                  (ignored)\n  -C, --compare       compare each pair of source and destination files, and\n                        in some cases, do not modify the destination at all\n  -d, --directory     treat all arguments as directory names; create all\n                        components of the specified directories\n"
0x000049fe      ba05000000     mov edx, 5
0x00004a03      31ff           xor edi, edi
0x00004a05      e8c6e0ffff     call sym.imp.dcgettext
0x00004a0a      4889de         mov rsi, rbx
0x00004a0d      4889c7         mov rdi, rax
0x00004a10      e89be2ffff     call sym.imp.fputs_unlocked
0x00004a15      488b1dcc8621.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21d0e8:8]=0
0x00004a1c      488d357d2101.  lea rsi, str.D__________________create_all_leading_components_of_DEST_except_the_last___________________________or_all_components_of___target_directory___________________________then_copy_SOURCE_to_DEST_____g____group_GROUP___set_group_ownership__instead_of_process__current_group_____m____mode_MODE_____set_permission_mode__as_in_chmod___instead_of_rwxr_xr_x_____o____owner_OWNER___set_ownership__super_user_only ; 0x16ba0 ; "  -D                  create all leading components of DEST except the last,\n                        or all components of --target-directory,\n                        then copy SOURCE to DEST\n  -g, --group=GROUP   set group ownership, instead of process' current group\n  -m, --mode=MODE     set permission mode (as in chmod), instead of rwxr-xr-x\n  -o, --owner=OWNER   set ownership (super-user only)\n"
0x00004a23      ba05000000     mov edx, 5
0x00004a28      31ff           xor edi, edi
0x00004a2a      e8a1e0ffff     call sym.imp.dcgettext
0x00004a2f      4889de         mov rsi, rbx
0x00004a32      4889c7         mov rdi, rax
0x00004a35      e876e2ffff     call sym.imp.fputs_unlocked
0x00004a3a      488b1da78621.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21d0e8:8]=0
0x00004a41      488d35f02201.  lea rsi, str.p____preserve_timestamps___apply_access_modification_times_of_SOURCE_files__________________________to_corresponding_destination_files_____s____strip_________strip_symbol_tables__________strip_program_PROGRAM__program_used_to_strip_binaries_____S____suffix_SUFFIX__override_the_usual_backup_suffix_____t____target_directory_DIRECTORY__copy_all_SOURCE_arguments_into_DIRECTORY_____T____no_target_directory__treat_DEST_as_a_normal_file_____v____verbose_______print_the_name_of_each_directory_as_it_is_created ; 0x16d38 ; "  -p, --preserve-timestamps   apply access/modification times of SOURCE files\n                        to corresponding destination files\n  -s, --strip         strip symbol tables\n      --strip-program=PROGRAM  program used to strip binaries\n  -S, --suffix=SUFFIX  override the usual backup suffix\n  -t, --target-directory=DIRECTORY  copy all SOURCE arguments into DIRECTORY\n  -T, --no-target-directory  treat DEST as a normal file\n  -v, --verbose       print the name of each directory as it is created\n"
0x00004a48      ba05000000     mov edx, 5
0x00004a4d      31ff           xor edi, edi
0x00004a4f      e87ce0ffff     call sym.imp.dcgettext
0x00004a54      4889de         mov rsi, rbx
0x00004a57      4889c7         mov rdi, rax
0x00004a5a      e851e2ffff     call sym.imp.fputs_unlocked
0x00004a5f      488b1d828621.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21d0e8:8]=0
0x00004a66      488d35c32401.  lea rsi, str.preserve_context__preserve_SELinux_security_context_____Z______________________set_SELinux_security_context_of_destination______________________________file_and_each_created_directory_to_default_type__________context__CTX______like__Z__or_if_CTX_is_specified_then_set_the______________________________SELinux_or_SMACK_security_context_to_CTX ; 0x16f30 ; "      --preserve-context  preserve SELinux security context\n  -Z                      set SELinux security context of destination\n                            file and each created directory to default type\n      --context[=CTX]     like -Z, or if CTX is specified then set the\n                            SELinux or SMACK security context to CTX\n"
0x00004a6d      ba05000000     mov edx, 5
0x00004a72      31ff           xor edi, edi
0x00004a74      e857e0ffff     call sym.imp.dcgettext
0x00004a79      4889de         mov rsi, rbx
0x00004a7c      4889c7         mov rdi, rax
0x00004a7f      e82ce2ffff     call sym.imp.fputs_unlocked
0x00004a84      488b1d5d8621.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21d0e8:8]=0
0x00004a8b      488d35fe2501.  lea rsi, str.help_____display_this_help_and_exit ; 0x17090 ; "      --help     display this help and exit\n"
0x00004a92      ba05000000     mov edx, 5
0x00004a97      31ff           xor edi, edi
0x00004a99      e832e0ffff     call sym.imp.dcgettext
0x00004a9e      4889de         mov rsi, rbx
0x00004aa1      4889c7         mov rdi, rax
0x00004aa4      e807e2ffff     call sym.imp.fputs_unlocked
0x00004aa9      488b1d388621.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21d0e8:8]=0
0x00004ab0      488d35092601.  lea rsi, str.version__output_version_information_and_exit ; 0x170c0 ; "      --version  output version information and exit\n"
0x00004ab7      ba05000000     mov edx, 5
0x00004abc      31ff           xor edi, edi
0x00004abe      e80de0ffff     call sym.imp.dcgettext
0x00004ac3      4889de         mov rsi, rbx
0x00004ac6      4889c7         mov rdi, rax
0x00004ac9      e8e2e1ffff     call sym.imp.fputs_unlocked
0x00004ace      488b1d138621.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21d0e8:8]=0
0x00004ad5      488d351c2601.  lea rsi, str.The_backup_suffix_is______unless_set_with___suffix_or_SIMPLE_BACKUP_SUFFIX.__The_version_control_method_may_be_selected_via_the___backup_option_or_through__the_VERSION_CONTROL_environment_variable.__Here_are_the_values: ; 0x170f8 ; "\nThe backup suffix is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.\nThe version control method may be selected via the --backup option or through\nthe VERSION_CONTROL environment variable.  Here are the values:\n\n"
0x00004adc      ba05000000     mov edx, 5
0x00004ae1      31ff           xor edi, edi
0x00004ae3      e8e8dfffff     call sym.imp.dcgettext
0x00004ae8      4889de         mov rsi, rbx
0x00004aeb      4889c7         mov rdi, rax
0x00004aee      e8bde1ffff     call sym.imp.fputs_unlocked
0x00004af3      488b1dee8521.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21d0e8:8]=0
0x00004afa      488d35d72601.  lea rsi, str.none__off_______never_make_backups__even_if___backup_is_given_____numbered__t_____make_numbered_backups____existing__nil___numbered_if_numbered_backups_exist__simple_otherwise____simple__never___always_make_simple_backups ; 0x171d8 ; "  none, off       never make backups (even if --backup is given)\n  numbered, t     make numbered backups\n  existing, nil   numbered if numbered backups exist, simple otherwise\n  simple, never   always make simple backups\n"
0x00004b01      ba05000000     mov edx, 5
0x00004b06      31ff           xor edi, edi
0x00004b08      e8c3dfffff     call sym.imp.dcgettext
0x00004b0d      4889de         mov rsi, rbx
0x00004b10      4889c7         mov rdi, rax
0x00004b13      488d1d6e1901.  lea rbx, str.install                    ; 0x16488 ; "install"
0x00004b1a      e891e1ffff     call sym.imp.fputs_unlocked
0x00004b1f      488d056a1901.  lea rax, [0x00016490]                   ; stdio2.h:292  return __fread_chk_warn (__ptr, __bos0 (__ptr), __size, __n, __stream); ; "["
0x00004b26      488d0da41901.  lea rcx, str.sha256sum                  ; 0x164d1 ; "sha256sum"
0x00004b2d      48c744246000.  mov qword [rsp + 0x60], 0
0x00004b36      48c744246800.  mov qword [rsp + 0x68], 0
0x00004b3f      4889e2         mov rdx, rsp
0x00004b42      48890424       mov qword [rsp], rax
0x00004b46      488d05451901.  lea rax, str.test_invocation            ; 0x16492 ; "test invocation"
0x00004b4d      48894c2430     mov qword [rsp + 0x30], rcx
0x00004b52      488d0d821901.  lea rcx, str.sha384sum                  ; 0x164db ; "sha384sum"
0x00004b59      4889442408     mov qword [rsp + 8], rax
0x00004b5e      488d05a51901.  lea rax, [0x0001650a]                   ; "coreutils"
0x00004b65      48894c2440     mov qword [rsp + 0x40], rcx
0x00004b6a      488d0d741901.  lea rcx, str.sha512sum                  ; 0x164e5 ; "sha512sum"
0x00004b71      4889442410     mov qword [rsp + 0x10], rax
0x00004b76      488d05251901.  lea rax, str.Multi_call_invocation      ; 0x164a2 ; "Multi-call invocation"
0x00004b7d      48894c2450     mov qword [rsp + 0x50], rcx
0x00004b82      4889442418     mov qword [rsp + 0x18], rax
0x00004b87      488d052a1901.  lea rax, str.sha224sum                  ; 0x164b8 ; "sha224sum"
0x00004b8e      4889442420     mov qword [rsp + 0x20], rax
0x00004b93      488d05281901.  lea rax, str.sha2_utilities             ; 0x164c2 ; "sha2 utilities"
0x00004b9a      4889442428     mov qword [rsp + 0x28], rax
0x00004b9f      4889442438     mov qword [rsp + 0x38], rax
0x00004ba4      4889442448     mov qword [rsp + 0x48], rax
0x00004ba9      4889442458     mov qword [rsp + 0x58], rax
0x00004bae      6690           nop
0x00004bb0      4883c210       add rdx, 0x10
0x00004bb4      488b3a         mov rdi, qword [rdx]
0x00004bb7      4885ff         test rdi, rdi
0x00004bba      7413           je 0x4bcf
0x00004bbc      b908000000     mov ecx, 8
0x00004bc1      4889de         mov rsi, rbx                            ; stdio2.h:297 #ifdef __USE_GNU
0x00004bc4      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00004bc6      0f97c0         seta al
0x00004bc9      1c00           sbb al, 0
0x00004bcb      84c0           test al, al
0x00004bcd      75e1           jne 0x4bb0
0x00004bcf      4c8b6208       mov r12, qword [rdx + 8]                ; string_fortified.h:-248
0x00004bd3      31ff           xor edi, edi
0x00004bd5      ba05000000     mov edx, 5
0x00004bda      488d350e1901.  lea rsi, str.s_online_help:___s         ; 0x164ef ; "\n%s online help: <%s>\n"
0x00004be1      4d85e4         test r12, r12
0x00004be4      0f84c1000000   je 0x4cab
0x00004bea      e8e1deffff     call sym.imp.dcgettext
0x00004bef      488d0dc22601.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x172b8 ; "https://www.gnu.org/software/coreutils/"
0x00004bf6      488d15091901.  lea rdx, str.GNU_coreutils              ; 0x16506 ; "GNU coreutils"
0x00004bfd      4889c6         mov rsi, rax
0x00004c00      bf01000000     mov edi, 1
0x00004c05      31c0           xor eax, eax
0x00004c07      e8d4e2ffff     call sym.imp.__printf_chk
0x00004c0c      31f6           xor esi, esi
0x00004c0e      bf05000000     mov edi, 5
0x00004c13      e8b8e2ffff     call sym.imp.setlocale
0x00004c18      4885c0         test rax, rax
0x00004c1b      741c           je 0x4c39
0x00004c1d      488d35f01801.  lea rsi, [0x00016514]                   ; "en_"
0x00004c24      ba03000000     mov edx, 3
0x00004c29      4889c7         mov rdi, rax
0x00004c2c      e83fddffff     call sym.imp.strncmp
0x00004c31      85c0           test eax, eax
0x00004c33      0f8507010000   jne 0x4d40
0x00004c39      488d35d81801.  lea rsi, str.Full_documentation___s_s   ; 0x16518 ; "Full documentation <%s%s>\n"
0x00004c40      31ff           xor edi, edi
0x00004c42      ba05000000     mov edx, 5
0x00004c47      e884deffff     call sym.imp.dcgettext
0x00004c4c      488d0d351801.  lea rcx, str.install                    ; 0x16488 ; "install"
0x00004c53      488d155e2601.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x172b8 ; "https://www.gnu.org/software/coreutils/"
0x00004c5a      4889c6         mov rsi, rax
0x00004c5d      bf01000000     mov edi, 1
0x00004c62      31c0           xor eax, eax
0x00004c64      e877e2ffff     call sym.imp.__printf_chk
0x00004c69      4939dc         cmp r12, rbx
0x00004c6c      488d0d391801.  lea rcx, [0x000164ac]                   ; " invocation"
0x00004c73      488d1d4f3301.  lea rbx, [0x00017fc9]
0x00004c7a      480f44d9       cmove rbx, rcx
0x00004c7e      488d35a32601.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x17328 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00004c85      31ff           xor edi, edi
0x00004c87      ba05000000     mov edx, 5
0x00004c8c      e83fdeffff     call sym.imp.dcgettext
0x00004c91      4889d9         mov rcx, rbx
0x00004c94      4889c6         mov rsi, rax
0x00004c97      4c89e2         mov rdx, r12
0x00004c9a      bf01000000     mov edi, 1
0x00004c9f      31c0           xor eax, eax
0x00004ca1      e83ae2ffff     call sym.imp.__printf_chk
0x00004ca6      e9cbfcffff     jmp 0x4976
0x00004cab      e820deffff     call sym.imp.dcgettext
0x00004cb0      488d0d012601.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x172b8 ; "https://www.gnu.org/software/coreutils/"
0x00004cb7      488d15481801.  lea rdx, str.GNU_coreutils              ; 0x16506 ; "GNU coreutils"
0x00004cbe      4889c6         mov rsi, rax
0x00004cc1      bf01000000     mov edi, 1
0x00004cc6      31c0           xor eax, eax
0x00004cc8      e813e2ffff     call sym.imp.__printf_chk
0x00004ccd      31f6           xor esi, esi
0x00004ccf      bf05000000     mov edi, 5
0x00004cd4      e8f7e1ffff     call sym.imp.setlocale
0x00004cd9      4885c0         test rax, rax
0x00004cdc      7418           je 0x4cf6
0x00004cde      488d352f1801.  lea rsi, [0x00016514]                   ; "en_"
0x00004ce5      ba03000000     mov edx, 3
0x00004cea      4889c7         mov rdi, rax
0x00004ced      e87edcffff     call sym.imp.strncmp
0x00004cf2      85c0           test eax, eax                           ; stdio2.h:314       if (!__builtin_constant_p (__n) || __n <= 0)
0x00004cf4      7543           jne 0x4d39
0x00004cf6      488d351b1801.  lea rsi, str.Full_documentation___s_s   ; 0x16518 ; "Full documentation <%s%s>\n"
0x00004cfd      ba05000000     mov edx, 5
0x00004d02      31ff           xor edi, edi
0x00004d04      4c8d257d1701.  lea r12, str.install                    ; 0x16488 ; "install"
0x00004d0b      488d1d9a1701.  lea rbx, [0x000164ac]                   ; " invocation"
0x00004d12      e8b9ddffff     call sym.imp.dcgettext
0x00004d17      488d0d6a1701.  lea rcx, str.install                    ; 0x16488 ; "install"
0x00004d1e      488d15932501.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x172b8 ; "https://www.gnu.org/software/coreutils/"
0x00004d25      4889c6         mov rsi, rax
0x00004d28      bf01000000     mov edi, 1
0x00004d2d      31c0           xor eax, eax
0x00004d2f      e8ace1ffff     call sym.imp.__printf_chk
0x00004d34      e945ffffff     jmp 0x4c7e
0x00004d39      4c8d25481701.  lea r12, str.install                    ; 0x16488 ; "install"
0x00004d40      4c8b2da18321.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21d0e8:8]=0
0x00004d47      488d35922501.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x172e0 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x00004d4e      31ff           xor edi, edi
0x00004d50      ba05000000     mov edx, 5
0x00004d55      e876ddffff     call sym.imp.dcgettext
0x00004d5a      4c89ee         mov rsi, r13
0x00004d5d      4889c7         mov rdi, rax
0x00004d60      e84bdfffff     call sym.imp.fputs_unlocked
0x00004d65      e9cffeffff     jmp 0x4c39
0x00004d6a      660f1f440000   nop word [rax + rax]
;-- prog_fprintf:
0x00004d70      55             push rbp                                ; /src:29
0x00004d71      53             push rbx
0x00004d72      4889f5         mov rbp, rsi
0x00004d75      4889fb         mov rbx, rdi
0x00004d78      4881ecd80000.  sub rsp, 0xd8
0x00004d7f      84c0           test al, al
0x00004d81      4889542430     mov qword [rsp + 0x30], rdx
0x00004d86      48894c2438     mov qword [rsp + 0x38], rcx
0x00004d8b      4c89442440     mov qword [rsp + 0x40], r8
0x00004d90      4c894c2448     mov qword [rsp + 0x48], r9
0x00004d95      7437           je 0x4dce
0x00004d97      0f29442450     movaps xmmword [rsp + 0x50], xmm0
0x00004d9c      0f294c2460     movaps xmmword [rsp + 0x60], xmm1
0x00004da1      0f29542470     movaps xmmword [rsp + 0x70], xmm2
0x00004da6      0f299c248000.  movaps xmmword [rsp + 0x80], xmm3
0x00004dae      0f29a4249000.  movaps xmmword [rsp + 0x90], xmm4
0x00004db6      0f29ac24a000.  movaps xmmword [rsp + 0xa0], xmm5
0x00004dbe      0f29b424b000.  movaps xmmword [rsp + 0xb0], xmm6
0x00004dc6      0f29bc24c000.  movaps xmmword [rsp + 0xc0], xmm7
0x00004dce      4889de         mov rsi, rbx                            ; /src:31
0x00004dd1      64488b042528.  mov rax, qword fs:[0x28]                ; /src:29
0x00004dda      4889442418     mov qword [rsp + 0x18], rax
0x00004ddf      31c0           xor eax, eax
0x00004de1      488b3dd8a721.  mov rdi, qword [obj.program_name]       ; /src:31 ; [0x21f5c0:8]=0
0x00004de8      e8c3deffff     call sym.imp.fputs_unlocked
0x00004ded      488d3db22801.  lea rdi, [0x000176a6]                   ; /src:32 ; ": "
0x00004df4      4889d9         mov rcx, rbx
0x00004df7      ba02000000     mov edx, 2
0x00004dfc      be01000000     mov esi, 1
0x00004e01      e86ae0ffff     call sym.imp.fwrite_unlocked
0x00004e06      488d8424f000.  lea rax, [rsp + 0xf0]                   ; /src:33
0x00004e0e      4889e2         mov rdx, rsp                            ; /src:34
0x00004e11      4889ee         mov rsi, rbp
0x00004e14      4889df         mov rdi, rbx
0x00004e17      c70424100000.  mov dword [rsp], 0x10                   ; /src:33 ; [0x10:4]=0x3e0003
0x00004e1e      c74424043000.  mov dword [rsp + 4], 0x30               ; '0'
                                                                       ; [0x30:4]=0
0x00004e26      4889442408     mov qword [rsp + 8], rax
0x00004e2b      488d442420     lea rax, [rsp + 0x20]
0x00004e30      4889442410     mov qword [rsp + 0x10], rax
0x00004e35      e886da0000     call sym.rpl_vfprintf                   ; /src:34
0x00004e3a      488b4328       mov rax, qword [rbx + 0x28]             ; /coreutils-8.31/lib:90
0x00004e3e      483b4330       cmp rax, qword [rbx + 0x30]
0x00004e42      732c           jae 0x4e70
0x00004e44      488d5001       lea rdx, [rax + 1]
0x00004e48      48895328       mov qword [rbx + 0x28], rdx
0x00004e4c      c6000a         mov byte [rax], 0xa
0x00004e4f      488b442418     mov rax, qword [rsp + 0x18]             ; /src:37
0x00004e54      644833042528.  xor rax, qword fs:[0x28]
0x00004e5d      7520           jne 0x4e7f
0x00004e5f      4881c4d80000.  add rsp, 0xd8
0x00004e66      5b             pop rbx
0x00004e67      5d             pop rbp
0x00004e68      c3             ret
0x00004e69      0f1f80000000.  nop dword [rax]
0x00004e70      be0a000000     mov esi, 0xa                            ; /coreutils-8.31/lib:90
0x00004e75      4889df         mov rdi, rbx
0x00004e78      e813ddffff     call sym.imp.__overflow
0x00004e7d      ebd0           jmp 0x4e4f
0x00004e7f      e8acdcffff     call sym.imp.__stack_chk_fail           ; /src:37
0x00004e84      662e0f1f8400.  nop word cs:[rax + rax]
0x00004e8e      6690           nop
;-- writable_destination:
0x00004e90      81e600f00000   and esi, 0xf000                         ; /src:1667
0x00004e96      81fe00a00000   cmp esi, 0xa000                         ; /src:1670
0x00004e9c      741a           je 0x4eb8
0x00004e9e      53             push rbx                                ; /src:1667
0x00004e9f      4889fb         mov rbx, rdi
0x00004ea2      e829d10000     call sym.can_write_any_file             ; /src:1669
0x00004ea7      84c0           test al, al
0x00004ea9      7415           je 0x4ec0
0x00004eab      b801000000     mov eax, 1                              ; /src:1667
0x00004eb0      5b             pop rbx                                 ; /src:1671
0x00004eb1      c3             ret
0x00004eb2      660f1f440000   nop word [rax + rax]
0x00004eb8      b801000000     mov eax, 1                              ; /src:1667
0x00004ebd      c3             ret                                     ; /src:1671
0x00004ebe      6690           nop
0x00004ec0      4889df         mov rdi, rbx                            ; /src:1670
0x00004ec3      be02000000     mov esi, 2
0x00004ec8      e803e1ffff     call sym.imp.euidaccess
0x00004ecd      85c0           test eax, eax
0x00004ecf      0f94c0         sete al
0x00004ed2      5b             pop rbx                                 ; /src:1671
0x00004ed3      c3             ret
0x00004ed4      6690           nop
0x00004ed6      662e0f1f8400.  nop word cs:[rax + rax]
;-- write_zeros:
0x00004ee0      48833d98a621.  cmp qword [obj.zeros.7570], 0           ; /src:350 ; [0x21f580:8]=0
0x00004ee8      4154           push r12
0x00004eea      4189fc         mov r12d, edi
0x00004eed      55             push rbp
0x00004eee      53             push rbx
0x00004eef      4889f3         mov rbx, rsi
0x00004ef2      7454           je 0x4f48                               ; /src:357
0x00004ef4      4885db         test rbx, rbx                           ; /src:368
0x00004ef7      750c           jne 0x4f05
0x00004ef9      eb3d           jmp 0x4f38
0x00004efb      0f1f440000     nop dword [rax + rax]
0x00004f00      4829c3         sub rbx, rax
0x00004f03      7433           je 0x4f38
0x00004f05      48391d2c8121.  cmp qword [obj.nz.7571], rbx            ; /src:370 ; [0x21d038:8]=0x20000
0x00004f0c      4889dd         mov rbp, rbx
0x00004f0f      488b356aa621.  mov rsi, qword [obj.zeros.7570]         ; /src:371 ; [0x21f580:8]=0
0x00004f16      480f462d1a81.  cmovbe rbp, qword [obj.nz.7571]         ; /src:370
0x00004f1e      4489e7         mov edi, r12d                           ; /src:371
0x00004f21      4889ea         mov rdx, rbp
0x00004f24      e8076a0000     call sym.full_write
0x00004f29      4839e8         cmp rax, rbp
0x00004f2c      74d2           je 0x4f00
0x00004f2e      5b             pop rbx                                 ; /src:377
0x00004f2f      31c0           xor eax, eax                            ; /src:372
0x00004f31      5d             pop rbp                                 ; /src:377
0x00004f32      415c           pop r12
0x00004f34      c3             ret
0x00004f35      0f1f00         nop dword [rax]
0x00004f38      5b             pop rbx
0x00004f39      b801000000     mov eax, 1                              ; /src:376
0x00004f3e      5d             pop rbp                                 ; /src:377
0x00004f3f      415c           pop r12
0x00004f41      c3             ret
0x00004f42      660f1f440000   nop word [rax + rax]
0x00004f48      488b3de98021.  mov rdi, qword [obj.nz.7571]            ; /src:360 ; [0x21d038:8]=0x20000
0x00004f4f      be01000000     mov esi, 1
0x00004f54      e877ddffff     call sym.imp.calloc
0x00004f59      4885c0         test rax, rax                           ; /src:361
0x00004f5c      7409           je 0x4f67
0x00004f5e      4889051ba621.  mov qword [obj.zeros.7570], rax         ; /src:360 ; [0x21f580:8]=0
0x00004f65      eb8d           jmp 0x4ef4
0x00004f67      488d0512a221.  lea rax, obj.fallback.7572              ; /src:363 ; 0x21f180
0x00004f6e      48c705bf8021.  mov qword [obj.nz.7571], 0x400          ; /src:364 ; [0x21d038:8]=0x20000
0x00004f79      48890500a621.  mov qword [obj.zeros.7570], rax         ; /src:363 ; [0x21f580:8]=0
0x00004f80      e96fffffff     jmp 0x4ef4
0x00004f85      90             nop
0x00004f86      662e0f1f8400.  nop word cs:[rax + rax]
;-- punch_hole:
0x00004f90      53             push rbx                                ; /src:170
0x00004f91      4889d1         mov rcx, rdx                            ; /src:175
0x00004f94      4889f2         mov rdx, rsi
0x00004f97      be03000000     mov esi, 3
0x00004f9c      e8ffdcffff     call sym.imp.fallocate
0x00004fa1      85c0           test eax, eax                           ; /src:177
0x00004fa3      89c3           mov ebx, eax                            ; /src:175
0x00004fa5      7809           js 0x4fb0                               ; /src:177
0x00004fa7      89d8           mov eax, ebx                            ; /src:182
0x00004fa9      5b             pop rbx
0x00004faa      c3             ret
0x00004fab      0f1f440000     nop dword [rax + rax]
0x00004fb0      e89bd9ffff     call sym.imp.__errno_location           ; /src:177
0x00004fb5      8b00           mov eax, dword [rax]
0x00004fb7      83f826         cmp eax, 0x26
0x00004fba      7405           je 0x4fc1
0x00004fbc      83f85f         cmp eax, 0x5f
0x00004fbf      75e6           jne 0x4fa7
0x00004fc1      31db           xor ebx, ebx                            ; /src:178
0x00004fc3      89d8           mov eax, ebx                            ; /src:182
0x00004fc5      5b             pop rbx
0x00004fc6      c3             ret
0x00004fc7      660f1f840000.  nop word [rax + rax]
;-- emit_verbose:
0x00004fd0      4154           push r12                                ; /src:1760
0x00004fd2      55             push rbp
0x00004fd3      4989fc         mov r12, rdi
0x00004fd6      53             push rbx
0x00004fd7      bf01000000     mov edi, 1                              ; /src:1761
0x00004fdc      4889d3         mov rbx, rdx                            ; /src:1760
0x00004fdf      4889f2         mov rdx, rsi                            ; /src:1761
0x00004fe2      be04000000     mov esi, 4
0x00004fe7      e8e4a20000     call sym.quotearg_n_style
0x00004fec      31ff           xor edi, edi
0x00004fee      4c89e2         mov rdx, r12
0x00004ff1      be04000000     mov esi, 4
0x00004ff6      4889c5         mov rbp, rax
0x00004ff9      e8d2a20000     call sym.quotearg_n_style
0x00004ffe      488d35f42c01.  lea rsi, str.s_____s                    ; ../coreutils-8.31/src/py.c:104 ; 0x17cf9 ; "%s -> %s"
0x00005005      4889c2         mov rdx, rax
0x00005008      4889e9         mov rcx, rbp
0x0000500b      31c0           xor eax, eax
0x0000500d      bf01000000     mov edi, 1
0x00005012      e8c9deffff     call sym.imp.__printf_chk
0x00005017      4885db         test rbx, rbx                           ; /src:1762
0x0000501a      7435           je 0x5051
0x0000501c      4889de         mov rsi, rbx                            ; /src:1763
0x0000501f      bf04000000     mov edi, 4
0x00005024      e8c7a30000     call sym.quotearg_style
0x00005029      488d35d22c01.  lea rsi, str.backup:__s                 ; 0x17d02 ; " (backup: %s)"
0x00005030      4889c3         mov rbx, rax
0x00005033      ba05000000     mov edx, 5
0x00005038      31ff           xor edi, edi
0x0000503a      e891daffff     call sym.imp.dcgettext
0x0000503f      4889da         mov rdx, rbx                            ; ../coreutils-8.31/src/py.c:104
0x00005042      4889c6         mov rsi, rax
0x00005045      bf01000000     mov edi, 1
0x0000504a      31c0           xor eax, eax
0x0000504c      e88fdeffff     call sym.imp.__printf_chk
0x00005051      488b3d908021.  mov rdi, qword [obj.stdout]             ; ./lib/selinux/selinux.h:107 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21d0e8:8]=0
0x00005058      488b4728       mov rax, qword [rdi + 0x28]
0x0000505c      483b4730       cmp rax, qword [rdi + 0x30]
0x00005060      7316           jae 0x5078
0x00005062      488d5001       lea rdx, [rax + 1]
0x00005066      48895728       mov qword [rdi + 0x28], rdx
0x0000506a      c6000a         mov byte [rax], 0xa
0x0000506d      5b             pop rbx                                 ; /src:1765
0x0000506e      5d             pop rbp
0x0000506f      415c           pop r12
0x00005071      c3             ret
0x00005072      660f1f440000   nop word [rax + rax]
0x00005078      5b             pop rbx
0x00005079      5d             pop rbp
0x0000507a      415c           pop r12
0x0000507c      be0a000000     mov esi, 0xa                            ; ./lib/selinux/selinux.h:107
0x00005081      e90adbffff     jmp sym.imp.__overflow
0x00005086      662e0f1f8400.  nop word cs:[rax + rax]
;-- create_hard_link:
0x00005090      4155           push r13                                ; /src:1785
0x00005092      4154           push r12
0x00005094      440fb6ca       movzx r9d, dl                           ; /src:1786
0x00005098      55             push rbp                                ; /src:1785
0x00005099      53             push rbx
0x0000509a      ba9cffffff     mov edx, 0xffffff9c                     ; /src:1786 ; 4294967196
0x0000509f      4989fd         mov r13, rdi                            ; /src:1785
0x000050a2      4989f4         mov r12, rsi
0x000050a5      89cd           mov ebp, ecx
0x000050a7      4883ec10       sub rsp, 0x10
0x000050ab      4584c0         test r8b, r8b                           ; /src:1786
0x000050ae      4889f1         mov rcx, rsi
0x000050b1      410f95c0       setne r8b
0x000050b5      6aff           push 0xffffffffffffffff
0x000050b7      4889fe         mov rsi, rdi
0x000050ba      450fb6c0       movzx r8d, r8b
0x000050be      89d7           mov edi, edx
0x000050c0      41c1e00a       shl r8d, 0xa
0x000050c4      e8a7530000     call sym.force_linkat
0x000050c9      85c0           test eax, eax                           ; /src:1789
0x000050cb      89c3           mov ebx, eax                            ; /src:1786
0x000050cd      5a             pop rdx                                 ; /src:1789
0x000050ce      59             pop rcx
0x000050cf      7f67           jg 0x5138
0x000050d1      c1eb1f         shr ebx, 0x1f                           ; /src:1795
0x000050d4      4020eb         and bl, bpl
0x000050d7      7517           jne 0x50f0
0x000050d9      4883c408       add rsp, 8                              ; /src:1798
0x000050dd      bb01000000     mov ebx, 1                              ; /src:1797
0x000050e2      89d8           mov eax, ebx                            ; /src:1798
0x000050e4      5b             pop rbx
0x000050e5      5d             pop rbp
0x000050e6      415c           pop r12
0x000050e8      415d           pop r13
0x000050ea      c3             ret
0x000050eb      0f1f440000     nop dword [rax + rax]
0x000050f0      4c89e6         mov rsi, r12                            ; /src:1796
0x000050f3      bf04000000     mov edi, 4
0x000050f8      e8f3a20000     call sym.quotearg_style
0x000050fd      488d350c2c01.  lea rsi, str.removed__s                 ; 0x17d10 ; "removed %s\n"
0x00005104      4889c5         mov rbp, rax
0x00005107      ba05000000     mov edx, 5
0x0000510c      31ff           xor edi, edi
0x0000510e      e8bdd9ffff     call sym.imp.dcgettext
0x00005113      4889ea         mov rdx, rbp                            ; ../coreutils-8.31/src/py.c:104
0x00005116      4889c6         mov rsi, rax
0x00005119      bf01000000     mov edi, 1
0x0000511e      31c0           xor eax, eax
0x00005120      e8bbddffff     call sym.imp.__printf_chk
0x00005125      4883c408       add rsp, 8                              ; /src:1798
0x00005129      89d8           mov eax, ebx
0x0000512b      5b             pop rbx
0x0000512c      5d             pop rbp
0x0000512d      415c           pop r12
0x0000512f      415d           pop r13
0x00005131      c3             ret
0x00005132      660f1f440000   nop word [rax + rax]
0x00005138      4c89ea         mov rdx, r13                            ; /src:1791
0x0000513b      be04000000     mov esi, 4
0x00005140      bf01000000     mov edi, 1
0x00005145      e886a10000     call sym.quotearg_n_style
0x0000514a      4c89e2         mov rdx, r12
0x0000514d      be04000000     mov esi, 4
0x00005152      31ff           xor edi, edi
0x00005154      4989c5         mov r13, rax
0x00005157      e874a10000     call sym.quotearg_n_style
0x0000515c      488d35852501.  lea rsi, str.cannot_create_hard_link__s_to__s ; 0x176e8 ; "cannot create hard link %s to %s"
0x00005163      4889c5         mov rbp, rax
0x00005166      ba05000000     mov edx, 5
0x0000516b      31ff           xor edi, edi
0x0000516d      e85ed9ffff     call sym.imp.dcgettext
0x00005172      4d89e8         mov r8, r13
0x00005175      4889e9         mov rcx, rbp
0x00005178      4889c2         mov rdx, rax
0x0000517b      89de           mov esi, ebx
0x0000517d      31c0           xor eax, eax
0x0000517f      31ff           xor edi, edi
0x00005181      e8aaddffff     call sym.imp.error
0x00005186      31db           xor ebx, ebx                            ; /src:1793
0x00005188      4883c408       add rsp, 8                              ; /src:1798
0x0000518c      89d8           mov eax, ebx
0x0000518e      5b             pop rbx
0x0000518f      5d             pop rbp
0x00005190      415c           pop r12
0x00005192      415d           pop r13
0x00005194      c3             ret
0x00005195      90             nop
0x00005196      662e0f1f8400.  nop word cs:[rax + rax]
;-- overwrite_ok.isra.12:
0x000051a0      4156           push r14                                ; /src:1674
0x000051a2      4155           push r13
0x000051a4      4989fd         mov r13, rdi
0x000051a7      4154           push r12
0x000051a9      55             push rbp
0x000051aa      4889d5         mov rbp, rdx
0x000051ad      53             push rbx
0x000051ae      4889f3         mov rbx, rsi
0x000051b1      4889df         mov rdi, rbx                            ; /src:1677
0x000051b4      4883ec20       sub rsp, 0x20                           ; /src:1674
0x000051b8      8b32           mov esi, dword [rdx]                    ; /src:1677
0x000051ba      64488b042528.  mov rax, qword fs:[0x28]                ; /src:1674
0x000051c3      4889442418     mov qword [rsp + 0x18], rax
0x000051c8      31c0           xor eax, eax
0x000051ca      e8c1fcffff     call sym.writable_destination           ; /src:1677
0x000051cf      84c0           test al, al
0x000051d1      0f8591000000   jne 0x5268
0x000051d7      8b7d00         mov edi, dword [rbp]                    ; /src:1680
0x000051da      4c8d64240c     lea r12, [rsp + 0xc]
0x000051df      4c89e6         mov rsi, r12
0x000051e2      e809640000     call sym.strmode
0x000051e7      8b6d00         mov ebp, dword [rbp]                    ; /src:1682
0x000051ea      4889de         mov rsi, rbx
0x000051ed      bf04000000     mov edi, 4
0x000051f2      c644241600     mov byte [rsp + 0x16], 0                ; /src:1681
0x000051f7      e8f4a10000     call sym.quotearg_style                 ; /src:1682
0x000051fc      81e5ff0f0000   and ebp, 0xfff
0x00005202      41807d1800     cmp byte [r13 + 0x18], 0
0x00005207      4989c6         mov r14, rax
0x0000520a      488b1dafa321.  mov rbx, qword [obj.program_name]       ; [0x21f5c0:8]=0
0x00005211      ba05000000     mov edx, 5
0x00005216      750e           jne 0x5226
0x00005218      41f7451400ff.  test dword [r13 + 0x14], 0xffff00       ; /src:1684
0x00005220      0f84aa000000   je 0x52d0
0x00005226      488d35e32401.  lea rsi, str.s:_replace__s__overriding_mode__04lo___s ; /src:1682 ; 0x17710 ; "%s: replace %s, overriding mode %04lo (%s)? "
0x0000522d      31ff           xor edi, edi
0x0000522f      e89cd8ffff     call sym.imp.dcgettext
0x00005234      4889c2         mov rdx, rax
0x00005237      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/src/py.c:97
0x0000523b      4983c401       add r12, 1
0x0000523f      488b3dda7e21.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21d120:8]=0
0x00005246      4154           push r12
0x00005248      4989e9         mov r9, rbp
0x0000524b      4d89f0         mov r8, r14
0x0000524e      4889d9         mov rcx, rbx
0x00005251      be01000000     mov esi, 1
0x00005256      31c0           xor eax, eax
0x00005258      e8f3ddffff     call sym.imp.__fprintf_chk
0x0000525d      58             pop rax
0x0000525e      5a             pop rdx
0x0000525f      eb4d           jmp 0x52ae
0x00005261      0f1f80000000.  nop dword [rax]
0x00005268      4889de         mov rsi, rbx                            ; /src:1693
0x0000526b      bf04000000     mov edi, 4
0x00005270      e87ba10000     call sym.quotearg_style
0x00005275      488d35a02a01.  lea rsi, str.s:_overwrite__s            ; 0x17d1c ; "%s: overwrite %s? "
0x0000527c      488b1d3da321.  mov rbx, qword [obj.program_name]       ; [0x21f5c0:8]=0
0x00005283      ba05000000     mov edx, 5
0x00005288      31ff           xor edi, edi
0x0000528a      4889c5         mov rbp, rax
0x0000528d      e83ed8ffff     call sym.imp.dcgettext
0x00005292      488b3d877e21.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/src/py.c:97 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21d120:8]=0
0x00005299      4889c2         mov rdx, rax
0x0000529c      4989e8         mov r8, rbp
0x0000529f      4889d9         mov rcx, rbx
0x000052a2      be01000000     mov esi, 1
0x000052a7      31c0           xor eax, eax
0x000052a9      e8a2ddffff     call sym.imp.__fprintf_chk
0x000052ae      e80dd40000     call sym.yesno                          ; /src:1697
0x000052b3      488b4c2418     mov rcx, qword [rsp + 0x18]             ; /src:1698
0x000052b8      6448330c2528.  xor rcx, qword fs:[0x28]
0x000052c1      7523           jne 0x52e6
0x000052c3      4883c420       add rsp, 0x20
0x000052c7      5b             pop rbx
0x000052c8      5d             pop rbp
0x000052c9      415c           pop r12
0x000052cb      415d           pop r13
0x000052cd      415e           pop r14
0x000052cf      c3             ret
0x000052d0      488d35692401.  lea rsi, str.s:_unwritable__s__mode__04lo___s___try_anyway ; /src:1682 ; 0x17740 ; "%s: unwritable %s (mode %04lo, %s); try anyway? "
0x000052d7      31ff           xor edi, edi
0x000052d9      e8f2d7ffff     call sym.imp.dcgettext
0x000052de      4889c2         mov rdx, rax
0x000052e1      e951ffffff     jmp 0x5237
0x000052e6      e845d8ffff     call sym.imp.__stack_chk_fail           ; /src:1698
0x000052eb      0f1f440000     nop dword [rax + rax]
;-- create_hole:
0x000052f0      4155           push r13                                ; /src:189
0x000052f2      4154           push r12
0x000052f4      4989f5         mov r13, rsi
0x000052f7      55             push rbp
0x000052f8      53             push rbx
0x000052f9      4189d4         mov r12d, edx
0x000052fc      4889ce         mov rsi, rcx                            ; /src:190
0x000052ff      ba01000000     mov edx, 1
0x00005304      89fd           mov ebp, edi                            ; /src:189
0x00005306      4883ec08       sub rsp, 8
0x0000530a      4889cb         mov rbx, rcx
0x0000530d      e8aed8ffff     call sym.imp.lseek                      ; /src:190
0x00005312      4885c0         test rax, rax                           ; /src:192
0x00005315      7879           js 0x5390
0x00005317      4584e4         test r12b, r12b                         ; /src:202
0x0000531a      7514           jne 0x5330
0x0000531c      4883c408       add rsp, 8                              ; /src:209
0x00005320      b801000000     mov eax, 1                              ; /src:208
0x00005325      5b             pop rbx                                 ; /src:209
0x00005326      5d             pop rbp
0x00005327      415c           pop r12
0x00005329      415d           pop r13
0x0000532b      c3             ret
0x0000532c      0f1f4000       nop dword [rax]
0x00005330      4829d8         sub rax, rbx                            ; /src:202
0x00005333      4889da         mov rdx, rbx
0x00005336      89ef           mov edi, ebp
0x00005338      4889c6         mov rsi, rax
0x0000533b      e850fcffff     call sym.punch_hole
0x00005340      85c0           test eax, eax
0x00005342      79d8           jns 0x531c
0x00005344      4c89ee         mov rsi, r13                            ; /src:204
0x00005347      bf04000000     mov edi, 4
0x0000534c      e89fa00000     call sym.quotearg_style
0x00005351      488d35e72901.  lea rsi, str.error_deallocating__s      ; 0x17d3f ; "error deallocating %s"
0x00005358      4889c5         mov rbp, rax
0x0000535b      ba05000000     mov edx, 5
0x00005360      31ff           xor edi, edi
0x00005362      e869d7ffff     call sym.imp.dcgettext
0x00005367      4889c3         mov rbx, rax
0x0000536a      e8e1d5ffff     call sym.imp.__errno_location
0x0000536f      8b30           mov esi, dword [rax]
0x00005371      4889e9         mov rcx, rbp
0x00005374      4889da         mov rdx, rbx
0x00005377      31c0           xor eax, eax
0x00005379      31ff           xor edi, edi
0x0000537b      e8b0dbffff     call sym.imp.error
0x00005380      4883c408       add rsp, 8                              ; /src:209
0x00005384      31c0           xor eax, eax                            ; /src:204
0x00005386      5b             pop rbx                                 ; /src:209
0x00005387      5d             pop rbp
0x00005388      415c           pop r12
0x0000538a      415d           pop r13
0x0000538c      c3             ret
0x0000538d      0f1f00         nop dword [rax]
0x00005390      4c89ee         mov rsi, r13                            ; /src:194
0x00005393      bf04000000     mov edi, 4
0x00005398      e853a00000     call sym.quotearg_style
0x0000539d      ba05000000     mov edx, 5
0x000053a2      4889c5         mov rbp, rax
0x000053a5      488d35832901.  lea rsi, str.cannot_lseek__s            ; 0x17d2f ; "cannot lseek %s"
0x000053ac      ebb2           jmp 0x5360
0x000053ae      6690           nop
;-- sparse_copy:
0x000053b0      4157           push r15                                ; /src:229
0x000053b2      4156           push r14
0x000053b4      4155           push r13
0x000053b6      4154           push r12
0x000053b8      55             push rbp
0x000053b9      53             push rbx
0x000053ba      4883ec78       sub rsp, 0x78
0x000053be      488b8424b000.  mov rax, qword [rsp + 0xb0]
0x000053c6      488b9c24c800.  mov rbx, qword [rsp + 0xc8]
0x000053ce      4c8b9424d000.  mov r10, qword [rsp + 0xd0]
0x000053d6      44884c241f     mov byte [rsp + 0x1f], r9b
0x000053db      4889442458     mov qword [rsp + 0x58], rax
0x000053e0      488b8424b800.  mov rax, qword [rsp + 0xb8]
0x000053e8      41c60200       mov byte [r10], 0                       ; /src:230
0x000053ec      48895c2440     mov qword [rsp + 0x40], rbx             ; /src:229
0x000053f1      4c89542460     mov qword [rsp + 0x60], r10
0x000053f6      48c703000000.  mov qword [rbx], 0                      ; /src:231
0x000053fd      4889442410     mov qword [rsp + 0x10], rax             ; /src:229
0x00005402      488b8424c000.  mov rax, qword [rsp + 0xc0]
0x0000540a      4885c0         test rax, rax                           ; /src:235
0x0000540d      4889442428     mov qword [rsp + 0x28], rax             ; /src:229
0x00005412      0f849b030000   je 0x57b3                               ; /src:235
0x00005418      4d85c0         test r8, r8
0x0000541b      4c89442450     mov qword [rsp + 0x50], r8
0x00005420      44894c246c     mov dword [rsp + 0x6c], r9d
0x00005425      4c0f44c1       cmove r8, rcx
0x00005429      48894c2438     mov qword [rsp + 0x38], rcx
0x0000542e      4889542420     mov qword [rsp + 0x20], rdx
0x00005433      89742418       mov dword [rsp + 0x18], esi
0x00005437      897c2468       mov dword [rsp + 0x68], edi
0x0000543b      4531ed         xor r13d, r13d                          ; /src:233
0x0000543e      4c89442448     mov qword [rsp + 0x48], r8
0x00005443      4531ff         xor r15d, r15d                          ; /src:232
0x00005446      488b442438     mov rax, qword [rsp + 0x38]             ; /src:237
0x0000544b      488b542428     mov rdx, qword [rsp + 0x28]
0x00005450      488b742420     mov rsi, qword [rsp + 0x20]             ; stdio2.h:44    _G_va_list __ap))
0x00005455      8b7c2468       mov edi, dword [rsp + 0x68]
0x00005459      4839d0         cmp rax, rdx                            ; /src:237
0x0000545c      480f46d0       cmovbe rdx, rax
0x00005460      e81bd8ffff     call sym.imp.read                       ; stdio2.h:44    _G_va_list __ap))
0x00005465      4885c0         test rax, rax                           ; /src:238
0x00005468      4889442430     mov qword [rsp + 0x30], rax             ; stdio2.h:44    _G_va_list __ap))
0x0000546d      7961           jns 0x54d0                              ; /src:238
0x0000546f      e8dcd4ffff     call sym.imp.__errno_location           ; /src:240
0x00005474      833804         cmp dword [rax], 4
0x00005477      74cd           je 0x5446
0x00005479      488b742458     mov rsi, qword [rsp + 0x58]             ; /src:242
0x0000547e      bf04000000     mov edi, 4
0x00005483      4889c3         mov rbx, rax
0x00005486      4531ff         xor r15d, r15d                          ; /src:243
0x00005489      e8629f0000     call sym.quotearg_style                 ; /src:242
0x0000548e      488d35c02801.  lea rsi, str.error_reading__s           ; 0x17d55 ; "error reading %s"
0x00005495      ba05000000     mov edx, 5
0x0000549a      31ff           xor edi, edi
0x0000549c      4889c5         mov rbp, rax
0x0000549f      e82cd6ffff     call sym.imp.dcgettext
0x000054a4      8b33           mov esi, dword [rbx]                    ; /src:117
0x000054a6      4889c2         mov rdx, rax
0x000054a9      4889e9         mov rcx, rbp
0x000054ac      31ff           xor edi, edi
0x000054ae      31c0           xor eax, eax
0x000054b0      e87bdaffff     call sym.imp.error
0x000054b5      4883c478       add rsp, 0x78
0x000054b9      4489f8         mov eax, r15d
0x000054bc      5b             pop rbx
0x000054bd      5d             pop rbp
0x000054be      415c           pop r12
0x000054c0      415d           pop r13
0x000054c2      415e           pop r14
0x000054c4      415f           pop r15
0x000054c6      c3             ret
0x000054c7      660f1f840000.  nop word [rax + rax]
0x000054d0      0f8429010000   je 0x55ff
0x000054d6      488b442440     mov rax, qword [rsp + 0x40]
0x000054db      488b6c2430     mov rbp, qword [rsp + 0x30]
0x000054e0      4489f9         mov ecx, r15d
0x000054e3      4c8b742420     mov r14, qword [rsp + 0x20]
0x000054e8      4c8b542448     mov r10, qword [rsp + 0x48]
0x000054ed      480128         add qword [rax], rbp
0x000054f0      48837c245000   cmp qword [rsp + 0x50], 0
0x000054f6      4d89f3         mov r11, r14
0x000054f9      4d89d7         mov r15, r10
0x000054fc      0f9544241d     setne byte [rsp + 0x1d]
0x00005501      0f1f80000000.  nop dword [rax]
0x00005508      4c39fd         cmp rbp, r15
0x0000550b      4c89fb         mov rbx, r15                            ; /usr/include/x86_64-linux-gnu/bits/stdio.h:418
0x0000550e      480f46dd       cmovbe rbx, rbp
0x00005512      4885db         test rbx, rbx
0x00005515      410f95c4       setne r12b                              ; /usr/include/x86_64-linux-gnu/bits/stdio.h:420
0x00005519      442264241d     and r12b, byte [rsp + 0x1d]
0x0000551e      0f840c010000   je 0x5630
0x00005524      4c89f6         mov rsi, r14
0x00005527      4889da         mov rdx, rbx
0x0000552a      803e00         cmp byte [rsi], 0
0x0000552d      0f852d020000   jne 0x5760
0x00005533      4883c601       add rsi, 1
0x00005537      4883ea01       sub rdx, 1
0x0000553b      0f8487010000   je 0x56c8
0x00005541      f6c20f         test dl, 0xf
0x00005544      75e4           jne 0x552a
0x00005546      4c89f7         mov rdi, r14
0x00005549      4c895c2408     mov qword [rsp + 8], r11
0x0000554e      884c241e       mov byte [rsp + 0x1e], cl
0x00005552      e839d7ffff     call sym.imp.memcmp
0x00005557      0fb64c241e     movzx ecx, byte [rsp + 0x1e]
0x0000555c      85c0           test eax, eax
0x0000555e      4c8b5c2408     mov r11, qword [rsp + 8]
0x00005563      410f94c4       sete r12b
0x00005567      4489e2         mov edx, r12d
0x0000556a      31ca           xor edx, ecx
0x0000556c      85c0           test eax, eax
0x0000556e      0f95c0         setne al
0x00005571      4d85ed         test r13, r13
0x00005574      410f95c1       setne r9b
0x00005578      4121d1         and r9d, edx
0x0000557b      4c39fd         cmp rbp, r15                            ; /src:145
0x0000557e      0f8754010000   ja 0x56d8
0x00005584      84c0           test al, al
0x00005586      0f844c010000   je 0x56d8
0x0000558c      4584c9         test r9b, r9b
0x0000558f      0f84a5000000   je 0x563a
0x00005595      41bf01000000   mov r15d, 1
0x0000559b      84c9           test cl, cl
0x0000559d      884c241e       mov byte [rsp + 0x1e], cl
0x000055a1      0f85ab000000   jne 0x5652
0x000055a7      8b7c2418       mov edi, dword [rsp + 0x18]
0x000055ab      4c89ea         mov rdx, r13
0x000055ae      4c89de         mov rsi, r11
0x000055b1      44884c2408     mov byte [rsp + 8], r9b
0x000055b6      e875630000     call sym.full_write
0x000055bb      4939c5         cmp r13, rax
0x000055be      440fb64c2408   movzx r9d, byte [rsp + 8]
0x000055c4      0fb64c241e     movzx ecx, byte [rsp + 0x1e]
0x000055c9      0f859e010000   jne 0x576d
0x000055cf      4585ff         test r15d, r15d
0x000055d2      4989dd         mov r13, rbx
0x000055d5      0f840d010000   je 0x56e8                               ; /src:18
0x000055db      4885db         test rbx, rbx
0x000055de      0f851c010000   jne 0x5700
0x000055e4      488b7c2430     mov rdi, qword [rsp + 0x30]
0x000055e9      48297c2428     sub qword [rsp + 0x28], rdi
0x000055ee      4589e7         mov r15d, r12d
0x000055f1      488b442460     mov rax, qword [rsp + 0x60]
0x000055f6      448820         mov byte [rax], r12b
0x000055f9      0f8547feffff   jne 0x5446
0x000055ff      4584ff         test r15b, r15b
0x00005602      0f84ab010000   je 0x57b3
0x00005608      0fb654246c     movzx edx, byte [rsp + 0x6c]
0x0000560d      488b742410     mov rsi, qword [rsp + 0x10]             ; /src:-36
0x00005612      4c89e9         mov rcx, r13
0x00005615      8b7c2418       mov edi, dword [rsp + 0x18]
0x00005619      4883c478       add rsp, 0x78
0x0000561d      5b             pop rbx
0x0000561e      5d             pop rbp
0x0000561f      415c           pop r12                                 ; /src:-25
0x00005621      415d           pop r13
0x00005623      415e           pop r14
0x00005625      415f           pop r15
0x00005627      e9c4fcffff     jmp sym.create_hole
0x0000562c      0f1f4000       nop dword [rax]
0x00005630      80f901         cmp cl, 1
0x00005633      7453           je 0x5688
0x00005635      4c39fd         cmp rbp, r15
0x00005638      774e           ja 0x5688
0x0000563a      4901dd         add r13, rbx
0x0000563d      4531c9         xor r9d, r9d
0x00005640      84c9           test cl, cl
0x00005642      41bf01000000   mov r15d, 1
0x00005648      884c241e       mov byte [rsp + 0x1e], cl
0x0000564c      0f8455ffffff   je 0x55a7
0x00005652      0fb654241f     movzx edx, byte [rsp + 0x1f]
0x00005657      488b742410     mov rsi, qword [rsp + 0x10]
0x0000565c      4c89e9         mov rcx, r13
0x0000565f      8b7c2418       mov edi, dword [rsp + 0x18]
0x00005663      44884c241e     mov byte [rsp + 0x1e], r9b
0x00005668      e883fcffff     call sym.create_hole
0x0000566d      84c0           test al, al
0x0000566f      440fb64c241e   movzx r9d, byte [rsp + 0x1e]
0x00005675      0f8554ffffff   jne 0x55cf
0x0000567b      4189c7         mov r15d, eax
0x0000567e      e932feffff     jmp 0x54b5
0x00005683      0f1f440000     nop dword [rax + rax]
0x00005688      4885db         test rbx, rbx
0x0000568b      750b           jne 0x5698
0x0000568d      4189cc         mov r12d, ecx
0x00005690      eba8           jmp 0x563a
0x00005692      4489e1         mov ecx, r12d
0x00005695      0f1f00         nop dword [rax]                         ; /src:-44
0x00005698      48b8ffffffff.  movabs rax, 0x7fffffffffffffff          ; 9223372036854775807
0x000056a2      4829d8         sub rax, rbx
0x000056a5      4c39e8         cmp rax, r13                            ; /src:-41
0x000056a8      7276           jb 0x5720
0x000056aa      4901dd         add r13, rbx                            ; /src:-43
0x000056ad      4901de         add r14, rbx
0x000056b0      4989df         mov r15, rbx
0x000056b3      4c29fd         sub rbp, r15
0x000056b6      0f854cfeffff   jne 0x5508
0x000056bc      4189cc         mov r12d, ecx
0x000056bf      e920ffffff     jmp 0x55e4
0x000056c4      0f1f4000       nop dword [rax]
0x000056c8      4189c9         mov r9d, ecx
0x000056cb      4183f101       xor r9d, 1
0x000056cf      4d85ed         test r13, r13
0x000056d2      0f95c0         setne al
0x000056d5      4121c1         and r9d, eax
0x000056d8      4584c9         test r9b, r9b
0x000056db      74b5           je 0x5692
0x000056dd      4531ff         xor r15d, r15d
0x000056e0      e9b6feffff     jmp 0x559b
0x000056e5      0f1f00         nop dword [rax]
0x000056e8      4d89f3         mov r11, r14
0x000056eb      4489e1         mov ecx, r12d
0x000056ee      4901de         add r14, rbx
0x000056f1      4989df         mov r15, rbx
0x000056f4      ebbd           jmp 0x56b3
0x000056f6      662e0f1f8400.  nop word cs:[rax + rax]
0x00005700      4531ff         xor r15d, r15d
0x00005703      4584c9         test r9b, r9b
0x00005706      4489e1         mov ecx, r12d
0x00005709      4d89f3         mov r11, r14
0x0000570c      75a5           jne 0x56b3
0x0000570e      4901de         add r14, rbx
0x00005711      4989df         mov r15, rbx
0x00005714      4531ed         xor r13d, r13d
0x00005717      eb9a           jmp 0x56b3
0x00005719      0f1f80000000.  nop dword [rax]
0x00005720      488b742458     mov rsi, qword [rsp + 0x58]
0x00005725      bf04000000     mov edi, 4
0x0000572a      4531ff         xor r15d, r15d
0x0000572d      e8be9c0000     call sym.quotearg_style                 ; /usr/include/x86_64-linux-gnu/bits/stdio.h:235
0x00005732      488d353e2601.  lea rsi, str.overflow_reading__s        ; /usr/include/x86_64-linux-gnu/bits/stdio.h:236 ; 0x17d77 ; "overflow reading %s"
0x00005739      4889c3         mov rbx, rax
0x0000573c      ba05000000     mov edx, 5
0x00005741      31ff           xor edi, edi
0x00005743      e888d3ffff     call sym.imp.dcgettext
0x00005748      4889d9         mov rcx, rbx
0x0000574b      4889c2         mov rdx, rax
0x0000574e      31f6           xor esi, esi
0x00005750      31ff           xor edi, edi
0x00005752      31c0           xor eax, eax
0x00005754      e8d7d7ffff     call sym.imp.error
0x00005759      e957fdffff     jmp 0x54b5
0x0000575e      6690           nop
0x00005760      4489e0         mov eax, r12d
0x00005763      89ca           mov edx, ecx
0x00005765      4531e4         xor r12d, r12d
0x00005768      e904feffff     jmp 0x5571
0x0000576d      488b742410     mov rsi, qword [rsp + 0x10]
0x00005772      bf04000000     mov edi, 4
0x00005777      4189cf         mov r15d, ecx
0x0000577a      e8719c0000     call sym.quotearg_style
0x0000577f      488d35e02501.  lea rsi, str.error_writing__s           ; 0x17d66 ; "error writing %s"
0x00005786      31ff           xor edi, edi
0x00005788      ba05000000     mov edx, 5
0x0000578d      4889c5         mov rbp, rax                            ; /src:588
0x00005790      e83bd3ffff     call sym.imp.dcgettext
0x00005795      4889c3         mov rbx, rax
0x00005798      e8b3d1ffff     call sym.imp.__errno_location
0x0000579d      8b30           mov esi, dword [rax]
0x0000579f      4889e9         mov rcx, rbp
0x000057a2      4889da         mov rdx, rbx
0x000057a5      31ff           xor edi, edi
0x000057a7      31c0           xor eax, eax
0x000057a9      e882d7ffff     call sym.imp.error                      ; /src:592
0x000057ae      e902fdffff     jmp 0x54b5
0x000057b3      41bf01000000   mov r15d, 1
0x000057b9      e9f7fcffff     jmp 0x54b5
0x000057be      6690           nop
;-- set_process_security_ctx:
0x000057c0      4155           push r13
0x000057c2      4154           push r12                                ; /src:616
0x000057c4      55             push rbp
0x000057c5      53             push rbx
0x000057c6      4c89c5         mov rbp, r8
0x000057c9      4883ec08       sub rsp, 8
0x000057cd      4180782500     cmp byte [r8 + 0x25], 0
0x000057d2      746c           je 0x5840
0x000057d4      4989fd         mov r13, rdi
0x000057d7      e874d1ffff     call sym.imp.__errno_location
0x000057dc      807d2300       cmp byte [rbp + 0x23], 0
0x000057e0      4989c4         mov r12, rax
0x000057e3      757b           jne 0x5860
0x000057e5      4c89ee         mov rsi, r13
0x000057e8      bf04000000     mov edi, 4
0x000057ed      41c704245f00.  mov dword [r12], 0x5f                   ; '_'
                                                                       ; [0x5f:4]=0x1f800
0x000057f5      e8f69b0000     call sym.quotearg_style
0x000057fa      488d35771f01.  lea rsi, str.failed_to_get_security_context_of__s ; 0x17778 ; "failed to get security context of %s"
0x00005801      ba05000000     mov edx, 5
0x00005806      31ff           xor edi, edi
0x00005808      4889c3         mov rbx, rax
0x0000580b      e8c0d2ffff     call sym.imp.dcgettext
0x00005810      418b3424       mov esi, dword [r12]
0x00005814      4889d9         mov rcx, rbx
0x00005817      4889c2         mov rdx, rax
0x0000581a      31ff           xor edi, edi
0x0000581c      31c0           xor eax, eax
0x0000581e      e80dd7ffff     call sym.imp.error                      ; /src:638
0x00005823      0fb65d26       movzx ebx, byte [rbp + 0x26]
0x00005827      4883c408       add rsp, 8
0x0000582b      83f301         xor ebx, 1
0x0000582e      89d8           mov eax, ebx
0x00005830      5b             pop rbx
0x00005831      5d             pop rbp
0x00005832      415c           pop r12
0x00005834      415d           pop r13
0x00005836      c3             ret
0x00005837      660f1f840000.  nop word [rax + rax]
0x00005840      89cb           mov ebx, ecx
0x00005842      41225821       and bl, byte [r8 + 0x21]
0x00005846      7530           jne 0x5878
0x00005848      4883c408       add rsp, 8
0x0000584c      bb01000000     mov ebx, 1
0x00005851      89d8           mov eax, ebx
0x00005853      5b             pop rbx
0x00005854      5d             pop rbp
0x00005855      415c           pop r12
0x00005857      415d           pop r13
0x00005859      c3             ret
0x0000585a      660f1f440000   nop word [rax + rax]
0x00005860      0fb65d26       movzx ebx, byte [rbp + 0x26]
0x00005864      84db           test bl, bl                             ; /src:650
0x00005866      0f8579ffffff   jne 0x57e5
0x0000586c      c7005f000000   mov dword [rax], 0x5f                   ; /src:652 ; '_'
                                                                       ; [0x5f:4]=0x1f800
0x00005872      ebb3           jmp 0x5827
0x00005874      0f1f4000       nop dword [rax]
0x00005878      e8d3d0ffff     call sym.imp.__errno_location
0x0000587d      c7005f000000   mov dword [rax], 0x5f                   ; '_'
                                                                       ; [0x5f:4]=0x1f800
0x00005883      4883c408       add rsp, 8
0x00005887      89d8           mov eax, ebx
0x00005889      5b             pop rbx
0x0000588a      5d             pop rbp
0x0000588b      415c           pop r12
0x0000588d      415d           pop r13
0x0000588f      c3             ret
;-- set_file_security_ctx:
0x00005890      4154           push r12
0x00005892      55             push rbp
0x00005893      4889cd         mov rbp, rcx
0x00005896      53             push rbx
0x00005897      4989fc         mov r12, rdi
0x0000589a      e8b1d0ffff     call sym.imp.__errno_location
0x0000589f      807d2300       cmp byte [rbp + 0x23], 0
0x000058a3      4889c3         mov rbx, rax
0x000058a6      7406           je 0x58ae
0x000058a8      807d2600       cmp byte [rbp + 0x26], 0
0x000058ac      744a           je 0x58f8
0x000058ae      4c89e2         mov rdx, r12
0x000058b1      c7035f000000   mov dword [rbx], 0x5f                   ; '_'
                                                                       ; [0x5f:4]=0x1f800
0x000058b7      be04000000     mov esi, 4                              ; /src:664
0x000058bc      31ff           xor edi, edi
0x000058be      e80d9a0000     call sym.quotearg_n_style
0x000058c3      488d35d61e01.  lea rsi, str.failed_to_set_the_security_context_of__s ; 0x177a0 ; "failed to set the security context of %s"
0x000058ca      ba05000000     mov edx, 5
0x000058cf      31ff           xor edi, edi
0x000058d1      4889c5         mov rbp, rax
0x000058d4      e8f7d1ffff     call sym.imp.dcgettext
0x000058d9      8b33           mov esi, dword [rbx]
0x000058db      4889e9         mov rcx, rbp
0x000058de      4889c2         mov rdx, rax
0x000058e1      31ff           xor edi, edi
0x000058e3      31c0           xor eax, eax
0x000058e5      e846d6ffff     call sym.imp.error
0x000058ea      5b             pop rbx
0x000058eb      31c0           xor eax, eax
0x000058ed      5d             pop rbp
0x000058ee      415c           pop r12
0x000058f0      c3             ret
0x000058f1      0f1f80000000.  nop dword [rax]
0x000058f8      c7005f000000   mov dword [rax], 0x5f                   ; /src:1399 ; '_'
                                                                       ; [0x5f:4]=0x1f800
0x000058fe      31c0           xor eax, eax
0x00005900      5b             pop rbx
0x00005901      5d             pop rbp
0x00005902      415c           pop r12
0x00005904      c3             ret
0x00005905      90             nop
0x00005906      662e0f1f8400.  nop word cs:[rax + rax]                 ; /src:1404
;-- dest_info_init:
0x00005910      4c8d05297400.  lea r8, sym.triple_free                 ; 0xcd40 ; "SH\x89\xfbH\x8b?\xe8\x84c\xff\xffH\x89\xdf[\xe9{c\xff\xfff.\x0f\x1f\x84"
0x00005917      488d0db27300.  lea rcx, sym.triple_compare             ; 0xccd0 ; "1\xc0H\x8bV\bH9W\bt\x04\xf3\xc3f\x90H\x8bN\x10H9O\x10u\xf2H\x83\xec\bH\x8b6H\x8b?\xe8\xe7."
0x0000591e      31f6           xor esi, esi
0x00005920      488d15697300.  lea rdx, sym.triple_hash                ; 0xcc90 ; "USH\x89\xfdH\x89\xf3H\x83\xec\bH\x8b?\xe8\xfcb"
0x00005927      53             push rbx
0x00005928      4889fb         mov rbx, rdi                            ; /src:1421
0x0000592b      bf3d000000     mov edi, 0x3d                           ; '='
0x00005930      e8eb680000     call sym.hash_initialize
0x00005935      48894340       mov qword [rbx + 0x40], rax
0x00005939      5b             pop rbx
0x0000593a      c3             ret
0x0000593b      0f1f440000     nop dword [rax + rax]
;-- src_info_init:
0x00005940      4c8d05f97300.  lea r8, sym.triple_free                 ; 0xcd40 ; "SH\x89\xfbH\x8b?\xe8\x84c\xff\xffH\x89\xdf[\xe9{c\xff\xfff.\x0f\x1f\x84"
0x00005947      488d0d827300.  lea rcx, sym.triple_compare             ; 0xccd0 ; "1\xc0H\x8bV\bH9W\bt\x04\xf3\xc3f\x90H\x8bN\x10H9O\x10u\xf2H\x83\xec\bH\x8b6H\x8b?\xe8\xe7."
0x0000594e      31f6           xor esi, esi
0x00005950      488d15697300.  lea rdx, sym.triple_hash_no_name        ; 0xccc0 ; "H\x8bG\b1\xd2H\xf7\xf6H\x89\xd0\xc3\x0f\x1f"
0x00005957      53             push rbx
0x00005958      4889fb         mov rbx, rdi                            ; /src:2706
0x0000595b      bf3d000000     mov edi, 0x3d                           ; '='
0x00005960      e8bb680000     call sym.hash_initialize
0x00005965      48894348       mov qword [rbx + 0x48], rax
0x00005969      5b             pop rbx
0x0000596a      c3             ret
0x0000596b      0f1f440000     nop dword [rax + rax]
;-- cp_options_default:
0x00005970      660fefc0       pxor xmm0, xmm0
0x00005974      53             push rbx
0x00005975      4889fb         mov rbx, rdi
0x00005978      0f1107         movups xmmword [rdi], xmm0
0x0000597b      0f114710       movups xmmword [rdi + 0x10], xmm0
0x0000597f      0f114720       movups xmmword [rdi + 0x20], xmm0
0x00005983      0f114730       movups xmmword [rdi + 0x30], xmm0
0x00005987      0f114740       movups xmmword [rdi + 0x40], xmm0
0x0000598b      e870d2ffff     call sym.imp.geteuid
0x00005990      85c0           test eax, eax
0x00005992      c74334ffffff.  mov dword [rbx + 0x34], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x00005999      0f94c0         sete al
0x0000599c      88431b         mov byte [rbx + 0x1b], al
0x0000599f      88431a         mov byte [rbx + 0x1a], al               ; /src:2723
0x000059a2      5b             pop rbx
0x000059a3      c3             ret
0x000059a4      6690           nop
0x000059a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- chown_failure_ok:
0x000059b0      53             push rbx
0x000059b1      4889fb         mov rbx, rdi
0x000059b4      e897cfffff     call sym.imp.__errno_location
0x000059b9      8b10           mov edx, dword [rax]
0x000059bb      83fa01         cmp edx, 1
0x000059be      0f94c0         sete al
0x000059c1      83fa16         cmp edx, 0x16
0x000059c4      0f94c2         sete dl
0x000059c7      08d0           or al, dl
0x000059c9      7407           je 0x59d2
0x000059cb      0fb6431a       movzx eax, byte [rbx + 0x1a]
0x000059cf      83f001         xor eax, 1
0x000059d2      5b             pop rbx
0x000059d3      c3             ret
0x000059d4      6690           nop
0x000059d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_owner:
0x000059e0      4157           push r15
0x000059e2      4156           push r14
0x000059e4      4155           push r13                                ; /src:488
0x000059e6      4154           push r12
0x000059e8      4989f5         mov r13, rsi                            ; /src:490
0x000059eb      55             push rbp                                ; /src:495
0x000059ec      53             push rbx
0x000059ed      4889fd         mov rbp, rdi
0x000059f0      89d3           mov ebx, edx
0x000059f2      4883ec08       sub rsp, 8
0x000059f6      4584c0         test r8b, r8b
0x000059f9      448b711c       mov r14d, dword [rcx + 0x1c]
0x000059fd      448b6120       mov r12d, dword [rcx + 0x20]
0x00005a01      7532           jne 0x5a35
0x00005a03      48b8ff000000.  movabs rax, 0xff0000000000ff            ; 71776119061217535
0x00005a0d      48854718       test qword [rdi + 0x18], rax            ; /src:507
0x00005a11      0f8499000000   je 0x5ab0
0x00005a17      418b7118       mov esi, dword [r9 + 0x18]
0x00005a1b      8b5118         mov edx, dword [rcx + 0x18]
0x00005a1e      89d0           mov eax, edx
0x00005a20      89f1           mov ecx, esi
0x00005a22      f7d0           not eax
0x00005a24      81e1ff0f0000   and ecx, 0xfff
0x00005a2a      80cc0e         or ah, 0xe
0x00005a2d      85c8           test eax, ecx
0x00005a2f      0f85cb000000   jne 0x5b00
0x00005a35      83fbff         cmp ebx, 0xffffffff
0x00005a38      4489e2         mov edx, r12d
0x00005a3b      4489f6         mov esi, r14d
0x00005a3e      7450           je 0x5a90
0x00005a40      89df           mov edi, ebx
0x00005a42      e839d5ffff     call sym.imp.fchown
0x00005a47      85c0           test eax, eax
0x00005a49      7451           je 0x5a9c
0x00005a4b      e800cfffff     call sym.imp.__errno_location           ; /src:541
0x00005a50      448b30         mov r14d, dword [rax]
0x00005a53      4989c7         mov r15, rax
0x00005a56      4183fe01       cmp r14d, 1
0x00005a5a      0f8468010000   je 0x5bc8
0x00005a60      4183fe16       cmp r14d, 0x16
0x00005a64      0f845e010000   je 0x5bc8
0x00005a6a      4889ef         mov rdi, rbp
0x00005a6d      e83effffff     call sym.chown_failure_ok               ; /src:508
0x00005a72      89c2           mov edx, eax                            ; /src:541
0x00005a74      31c0           xor eax, eax
0x00005a76      84d2           test dl, dl
0x00005a78      0f84f2000000   je 0x5b70
0x00005a7e      4883c408       add rsp, 8
0x00005a82      5b             pop rbx
0x00005a83      5d             pop rbp
0x00005a84      415c           pop r12
0x00005a86      415d           pop r13
0x00005a88      415e           pop r14
0x00005a8a      415f           pop r15
0x00005a8c      c3             ret
0x00005a8d      0f1f00         nop dword [rax]
0x00005a90      4c89ef         mov rdi, r13
0x00005a93      e8a8d3ffff     call sym.imp.lchown
0x00005a98      85c0           test eax, eax
0x00005a9a      7534           jne 0x5ad0
0x00005a9c      4883c408       add rsp, 8
0x00005aa0      b801000000     mov eax, 1
0x00005aa5      5b             pop rbx
0x00005aa6      5d             pop rbp
0x00005aa7      415c           pop r12
0x00005aa9      415d           pop r13
0x00005aab      415e           pop r14
0x00005aad      415f           pop r15
0x00005aaf      c3             ret
0x00005ab0      807f2b00       cmp byte [rdi + 0x2b], 0
0x00005ab4      0f847bffffff   je 0x5a35
0x00005aba      418b7118       mov esi, dword [r9 + 0x18]
0x00005abe      8b5710         mov edx, dword [rdi + 0x10]
0x00005ac1      e958ffffff     jmp 0x5a1e
0x00005ac6      662e0f1f8400.  nop word cs:[rax + rax]
0x00005ad0      e87bceffff     call sym.imp.__errno_location
0x00005ad5      8b18           mov ebx, dword [rax]
0x00005ad7      4989c6         mov r14, rax
0x00005ada      83fb01         cmp ebx, 1                              ; /src:496
0x00005add      7409           je 0x5ae8
0x00005adf      83fb16         cmp ebx, 0x16
0x00005ae2      0f8582ffffff   jne 0x5a6a
0x00005ae8      4489e2         mov edx, r12d
0x00005aeb      beffffffff     mov esi, 0xffffffff                     ; -1
0x00005af0      4c89ef         mov rdi, r13
0x00005af3      e848d3ffff     call sym.imp.lchown
0x00005af8      41891e         mov dword [r14], ebx
0x00005afb      e96affffff     jmp 0x5a6a
0x00005b00      21f2           and edx, esi
0x00005b02      4c89ef         mov rdi, r13
0x00005b05      89de           mov esi, ebx
0x00005b07      81e2c0010000   and edx, 0x1c0
0x00005b0d      e8de7e0000     call sym.qset_acl
0x00005b12      85c0           test eax, eax
0x00005b14      0f841bffffff   je 0x5a35
0x00005b1a      e831ceffff     call sym.imp.__errno_location
0x00005b1f      4889c3         mov rbx, rax
0x00005b22      8b00           mov eax, dword [rax]
0x00005b24      83f801         cmp eax, 1
0x00005b27      0f84b3000000   je 0x5be0
0x00005b2d      83f816         cmp eax, 0x16
0x00005b30      0f84aa000000   je 0x5be0
0x00005b36      4c89ee         mov rsi, r13
0x00005b39      bf04000000     mov edi, 4
0x00005b3e      e8ad980000     call sym.quotearg_style
0x00005b43      488d35412201.  lea rsi, str.clearing_permissions_for__s ; 0x17d8b ; "clearing permissions for %s"
0x00005b4a      31ff           xor edi, edi
0x00005b4c      ba05000000     mov edx, 5
0x00005b51      4989c4         mov r12, rax
0x00005b54      e877cfffff     call sym.imp.dcgettext
0x00005b59      8b33           mov esi, dword [rbx]
0x00005b5b      4889c2         mov rdx, rax
0x00005b5e      4c89e1         mov rcx, r12
0x00005b61      31ff           xor edi, edi
0x00005b63      31c0           xor eax, eax
0x00005b65      e8c6d3ffff     call sym.imp.error
0x00005b6a      eb40           jmp 0x5bac
0x00005b6c      0f1f4000       nop dword [rax]
0x00005b70      4c89ee         mov rsi, r13
0x00005b73      bf04000000     mov edi, 4
0x00005b78      e873980000     call sym.quotearg_style
0x00005b7d      488d354c1c01.  lea rsi, str.failed_to_preserve_ownership_for__s ; /src:541 ; 0x177d0 ; "failed to preserve ownership for %s"
0x00005b84      ba05000000     mov edx, 5
0x00005b89      31ff           xor edi, edi
0x00005b8b      4989c4         mov r12, rax
0x00005b8e      e83dcfffff     call sym.imp.dcgettext
0x00005b93      4889c3         mov rbx, rax
0x00005b96      e8b5cdffff     call sym.imp.__errno_location
0x00005b9b      8b30           mov esi, dword [rax]
0x00005b9d      4c89e1         mov rcx, r12
0x00005ba0      4889da         mov rdx, rbx
0x00005ba3      31ff           xor edi, edi
0x00005ba5      31c0           xor eax, eax
0x00005ba7      e884d3ffff     call sym.imp.error
0x00005bac      0fb64524       movzx eax, byte [rbp + 0x24]
0x00005bb0      4883c408       add rsp, 8
0x00005bb4      5b             pop rbx
0x00005bb5      5d             pop rbp
0x00005bb6      415c           pop r12
0x00005bb8      f7d8           neg eax
0x00005bba      415d           pop r13
0x00005bbc      415e           pop r14
0x00005bbe      415f           pop r15                                 ; /src:2745
0x00005bc0      c3             ret
0x00005bc1      0f1f80000000.  nop dword [rax]
0x00005bc8      4489e2         mov edx, r12d
0x00005bcb      beffffffff     mov esi, 0xffffffff                     ; -1
0x00005bd0      89df           mov edi, ebx
0x00005bd2      e8a9d3ffff     call sym.imp.fchown
0x00005bd7      458937         mov dword [r15], r14d
0x00005bda      e98bfeffff     jmp 0x5a6a
0x00005bdf      90             nop
0x00005be0      807d1b00       cmp byte [rbp + 0x1b], 0
0x00005be4      0f854cffffff   jne 0x5b36
0x00005bea      ebc0           jmp 0x5bac
0x00005bec      0f1f4000       nop dword [rax]
;-- cached_umask:
0x00005bf0      53             push rbx
0x00005bf1      8b1d39742100   mov ebx, dword [obj.mask.7898]          ; [0x21d030:4]=-1
0x00005bf7      83fbff         cmp ebx, 0xffffffff
0x00005bfa      7404           je 0x5c00
0x00005bfc      89d8           mov eax, ebx
0x00005bfe      5b             pop rbx
0x00005bff      c3             ret
0x00005c00      31ff           xor edi, edi
0x00005c02      e869d1ffff     call sym.imp.umask
0x00005c07      89c3           mov ebx, eax                            ; /src:1548
0x00005c09      89c7           mov edi, eax
0x00005c0b      89051f742100   mov dword [obj.mask.7898], eax          ; [0x21d030:4]=-1
0x00005c11      e85ad1ffff     call sym.imp.umask
0x00005c16      89d8           mov eax, ebx
0x00005c18      5b             pop rbx
0x00005c19      c3             ret
0x00005c1a      660f1f440000   nop word [rax + rax]
;-- copy_internal:
0x00005c20      55             push rbp
0x00005c21      4889e5         mov rbp, rsp
0x00005c24      4157           push r15
0x00005c26      4156           push r14
0x00005c28      4155           push r13
0x00005c2a      4154           push r12
0x00005c2c      4189d6         mov r14d, edx
0x00005c2f      53             push rbx
0x00005c30      4c89cb         mov rbx, r9
0x00005c33      4881ec980300.  sub rsp, 0x398
0x00005c3a      488b4518       mov rax, qword [rbp + 0x18]
0x00005c3e      448b6d10       mov r13d, dword [rbp + 0x10]
0x00005c42      48898db8fcff.  mov qword [rbp - 0x348], rcx
0x00005c49      488b4d28       mov rcx, qword [rbp + 0x28]
0x00005c4d      4889bdf0fcff.  mov qword [rbp - 0x310], rdi
0x00005c54      4889b5f8fcff.  mov qword [rbp - 0x308], rsi
0x00005c5b      488985c8fcff.  mov qword [rbp - 0x338], rax
0x00005c62      488b4520       mov rax, qword [rbp + 0x20]
0x00005c66      48898de0fcff.  mov qword [rbp - 0x320], rcx            ; /src:1565
0x00005c6d      4c8985d0fcff.  mov qword [rbp - 0x330], r8
0x00005c74      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00005c7d      48894dc8       mov qword [rbp - 0x38], rcx
0x00005c81      31c9           xor ecx, ecx
0x00005c83      c60000         mov byte [rax], 0
0x00005c86      450fb66118     movzx r12d, byte [r9 + 0x18]            ; /src:1573
0x00005c8b      488985c0fcff.  mov qword [rbp - 0x340], rax            ; /src:1574
0x00005c92      4488adebfcff.  mov byte [rbp - 0x315], r13b
0x00005c99      458b7934       mov r15d, dword [r9 + 0x34]
0x00005c9d      4584e4         test r12b, r12b
0x00005ca0      741f           je 0x5cc1
0x00005ca2      4585ff         test r15d, r15d
0x00005ca5      0f8895020000   js 0x5f40
0x00005cab      488b85e0fcff.  mov rax, qword [rbp - 0x320]
0x00005cb2      4585ff         test r15d, r15d
0x00005cb5      410f94c6       sete r14b
0x00005cb9      4885c0         test rax, rax
0x00005cbc      7403           je 0x5cc1
0x00005cbe      448830         mov byte [rax], r14b                    ; /src:1582
0x00005cc1      4585ff         test r15d, r15d
0x00005cc4      0f84ae020000   je 0x5f78                               ; ../coreutils-8.31/src/selinux.h:144
0x00005cca      4183ff11       cmp r15d, 0x11
0x00005cce      4c8ba5f0fcff.  mov r12, qword [rbp - 0x310]            ; /src:1582
0x00005cd5      0f84fd070000   je 0x64d8
0x00005cdb      837b0402       cmp dword [rbx + 4], 2
0x00005cdf      4c8d9580fdff.  lea r10, [rbp - 0x280]
0x00005ce6      4c89e6         mov rsi, r12
0x00005ce9      bf01000000     mov edi, 1
0x00005cee      4c89d2         mov rdx, r10
0x00005cf1      0f84f9070000   je 0x64f0
0x00005cf7      e8d4d0ffff     call sym.imp.__xstat
0x00005cfc      85c0           test eax, eax
0x00005cfe      4c89e6         mov rsi, r12
0x00005d01      0f95c0         setne al
0x00005d04      84c0           test al, al
0x00005d06      0f85f9070000   jne 0x6505
0x00005d0c      8b8598fdffff   mov eax, dword [rbp - 0x268]
0x00005d12      8985ecfcffff   mov dword [rbp - 0x314], eax
0x00005d18      2500f00000     and eax, 0xf000
0x00005d1d      3d00400000     cmp eax, 0x4000                         ; "([]A\A]\xc3\x0f\x1f\x84"
0x00005d22      0f84c00a0000   je 0x67e8
0x00005d28      4584ed         test r13b, r13b                         ; /src:1622
0x00005d2b      743d           je 0x5d6a
0x00005d2d      488b7b48       mov rdi, qword [rbx + 0x48]
0x00005d31      4885ff         test rdi, rdi
0x00005d34      7434           je 0x5d6a
0x00005d36      8b85ecfcffff   mov eax, dword [rbp - 0x314]
0x00005d3c      4c8d9580fdff.  lea r10, [rbp - 0x280]
0x00005d43      2500f00000     and eax, 0xf000
0x00005d48      3d00400000     cmp eax, 0x4000                         ; "([]A\A]\xc3\x0f\x1f\x84"
0x00005d4d      740c           je 0x5d5b
0x00005d4f      448b1b         mov r11d, dword [rbx]
0x00005d52      4585db         test r11d, r11d                         ; /src:1500
0x00005d55      0f840d090000   je 0x6668
0x00005d5b      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x00005d62      4c89d2         mov rdx, r10
0x00005d65      e896570000     call sym.record_file
0x00005d6a      8b4304         mov eax, dword [rbx + 4]
0x00005d6d      c785d8fcffff.  mov dword [rbp - 0x328], 1
0x00005d77      83f804         cmp eax, 4                              ; /src:1505
0x00005d7a      7412           je 0x5d8e
0x00005d7c      83f803         cmp eax, 3
0x00005d7f      0f94c0         sete al
0x00005d82      0fb6c0         movzx eax, al
0x00005d85      4421e8         and eax, r13d
0x00005d88      8985d8fcffff   mov dword [rbp - 0x328], eax
0x00005d8e      4584f6         test r14b, r14b
0x00005d91      0f8509020000   jne 0x5fa0
0x00005d97      4183ff11       cmp r15d, 0x11
0x00005d9b      0f845f090000   je 0x6700
0x00005da1      8b85ecfcffff   mov eax, dword [rbp - 0x314]
0x00005da7      2500f00000     and eax, 0xf000
0x00005dac      3d00800000     cmp eax, 0x8000
0x00005db1      0f84e9080000   je 0x66a0
0x00005db7      3d00a00000     cmp eax, 0xa000
0x00005dbc      41b800010000   mov r8d, 0x100
0x00005dc2      410f94c1       sete r9b
0x00005dc6      3d00400000     cmp eax, 0x4000                         ; "([]A\A]\xc3\x0f\x1f\x84"
0x00005dcb      0f94c0         sete al
0x00005dce      4109c1         or r9d, eax
0x00005dd1      0fb64314       movzx eax, byte [rbx + 0x14]
0x00005dd5      83f001         xor eax, 1
0x00005dd8      4108c1         or r9b, al
0x00005ddb      0f84bf080000   je 0x66a0
0x00005de1      4c8da510feff.  lea r12, [rbp - 0x1f0]
0x00005de8      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x00005def      be9cffffff     mov esi, 0xffffff9c                     ; 4294967196
0x00005df4      bf01000000     mov edi, 1
0x00005df9      44888db0fcff.  mov byte [rbp - 0x350], r9b
0x00005e00      4c89e1         mov rcx, r12
0x00005e03      e878cdffff     call sym.imp.__fxstatat
0x00005e08      85c0           test eax, eax
0x00005e0a      440fb68db0fc.  movzx r9d, byte [rbp - 0x350]
0x00005e12      0f8578060000   jne 0x6490
0x00005e18      4531c0         xor r8d, r8d
0x00005e1b      837b0802       cmp dword [rbx + 8], 2
0x00005e1f      741e           je 0x5e3f
0x00005e21      488b8518feff.  mov rax, qword [rbp - 0x1e8]
0x00005e28      48398588fdff.  cmp qword [rbp - 0x278], rax
0x00005e2f      0f84c3110000   je 0x6ff8
0x00005e35      837b0402       cmp dword [rbx + 4], 2
0x00005e39      0f8471130000   je 0x71b0
0x00005e3f      807b2d00       cmp byte [rbx + 0x2d], 0
0x00005e43      0f84f7090000   je 0x6840
0x00005e49      8b85ecfcffff   mov eax, dword [rbp - 0x314]
0x00005e4f      2500f00000     and eax, 0xf000
0x00005e54      3d00400000     cmp eax, 0x4000                         ; "([]A\A]\xc3\x0f\x1f\x84"
0x00005e59      0f8421140000   je 0x7280
0x00005e5f      31c9           xor ecx, ecx
0x00005e61      807b1f00       cmp byte [rbx + 0x1f], 0
0x00005e65      741e           je 0x5e85
0x00005e67      807b1800       cmp byte [rbx + 0x18], 0
0x00005e6b      b901000000     mov ecx, 1
0x00005e70      7413           je 0x5e85
0x00005e72      31c9           xor ecx, ecx
0x00005e74      488b8580fdff.  mov rax, qword [rbp - 0x280]
0x00005e7b      48398510feff.  cmp qword [rbp - 0x1f0], rax
0x00005e82      0f95c1         setne cl
0x00005e85      4c8d9580fdff.  lea r10, [rbp - 0x280]
0x00005e8c      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00005e93      488db510feff.  lea rsi, [rbp - 0x1f0]
0x00005e9a      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x00005ea1      448885b0fcff.  mov byte [rbp - 0x350], r8b
0x00005ea8      4c89d2         mov rdx, r10
0x00005eab      e870b20000     call sym.utimecmp
0x00005eb0      85c0           test eax, eax
0x00005eb2      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x00005eba      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x00005ec2      0f88480f0000   js 0x6e10
0x00005ec8      488b85e0fcff.  mov rax, qword [rbp - 0x320]
0x00005ecf      4885c0         test rax, rax
0x00005ed2      7403           je 0x5ed7
0x00005ed4      c60001         mov byte [rax], 1
0x00005ed7      488b9580fdff.  mov rdx, qword [rbp - 0x280]
0x00005ede      488bb588fdff.  mov rsi, qword [rbp - 0x278]
0x00005ee5      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00005eec      e8cf400000     call sym.remember_copied
0x00005ef1      4885c0         test rax, rax
0x00005ef4      0f8466050000   je 0x6460
0x00005efa      0fb64b2e       movzx ecx, byte [rbx + 0x2e]
0x00005efe      448b85d8fcff.  mov r8d, dword [rbp - 0x328]
0x00005f05      ba01000000     mov edx, 1
0x00005f0a      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00005f11      4889c7         mov rdi, rax
0x00005f14      e877f1ffff     call sym.create_hard_link
0x00005f19      84c0           test al, al
0x00005f1b      0f853f050000   jne 0x6460                              ; /src:1434
0x00005f21      807b2500       cmp byte [rbx + 0x25], 0
0x00005f25      0f85050e0000   jne 0x6d30
0x00005f2b      0f1f440000     nop dword [rax + rax]
0x00005f30      4531e4         xor r12d, r12d
0x00005f33      e92e050000     jmp 0x6466                              ; /src:1438
0x00005f38      0f1f84000000.  nop dword [rax + rax]
0x00005f40      ba9cffffff     mov edx, 0xffffff9c                     ; 4294967196
0x00005f45      4889f1         mov rcx, rsi
0x00005f48      41b801000000   mov r8d, 1
0x00005f4e      4889fe         mov rsi, rdi
0x00005f51      89d7           mov edi, edx
0x00005f53      e888970000     call sym.renameatu
0x00005f58      85c0           test eax, eax
0x00005f5a      0f85700b0000   jne 0x6ad0
0x00005f60      488b85e0fcff.  mov rax, qword [rbp - 0x320]
0x00005f67      4589e6         mov r14d, r12d
0x00005f6a      4885c0         test rax, rax
0x00005f6d      7409           je 0x5f78
0x00005f6f      c60001         mov byte [rax], 1
0x00005f72      660f1f440000   nop word [rax + rax]                    ; /src:1752
0x00005f78      807b3100       cmp byte [rbx + 0x31], 0
0x00005f7c      7512           jne 0x5f90
0x00005f7e      4c8ba5f8fcff.  mov r12, qword [rbp - 0x308]
0x00005f85      4531ff         xor r15d, r15d
0x00005f88      e94efdffff     jmp 0x5cdb
0x00005f8d      0f1f00         nop dword [rax]
0x00005f90      4531ff         xor r15d, r15d
0x00005f93      e990fdffff     jmp 0x5d28
0x00005f98      0f1f84000000.  nop dword [rax + rax]                   ; /src:1763
0x00005fa0      4531c9         xor r9d, r9d
0x00005fa3      48c785b0fcff.  mov qword [rbp - 0x350], 0
0x00005fae      4584ed         test r13b, r13b
0x00005fb1      0f84b9000000   je 0x6070
0x00005fb7      48837b4000     cmp qword [rbx + 0x40], 0
0x00005fbc      0f84ae000000   je 0x6070
0x00005fc2      440fb66318     movzx r12d, byte [rbx + 0x18]
0x00005fc7      4584e4         test r12b, r12b
0x00005fca      0f85a0000000   jne 0x6070
0x00005fd0      8b13           mov edx, dword [rbx]
0x00005fd2      85d2           test edx, edx
0x00005fd4      0f857e0c0000   jne 0x6c58
0x00005fda      4584c9         test r9b, r9b
0x00005fdd      488d9510feff.  lea rdx, [rbp - 0x1f0]
0x00005fe4      0f8476180000   je 0x7860
0x00005fea      8b4218         mov eax, dword [rdx + 0x18]
0x00005fed      2500f00000     and eax, 0xf000
0x00005ff2      3d00a00000     cmp eax, 0xa000
0x00005ff7      7577           jne 0x6070
0x00005ff9      488b7b40       mov rdi, qword [rbx + 0x40]
0x00005ffd      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00006004      e887550000     call sym.seen_file
0x00006009      84c0           test al, al
0x0000600b      7463           je 0x6070
0x0000600d      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x00006014      be04000000     mov esi, 4
0x00006019      bf01000000     mov edi, 1
0x0000601e      e8ad920000     call sym.quotearg_n_style
0x00006023      488b95f0fcff.  mov rdx, qword [rbp - 0x310]
0x0000602a      31ff           xor edi, edi
0x0000602c      be04000000     mov esi, 4
0x00006031      4989c5         mov r13, rax                            ; /src:1788
0x00006034      e897920000     call sym.quotearg_n_style
0x00006039      488d35601901.  lea rsi, str.will_not_copy__s_through_just_created_symlink__s ; 0x179a0 ; "will not copy %s through just-created symlink %s"
0x00006040      4889c3         mov rbx, rax
0x00006043      31ff           xor edi, edi
0x00006045      ba05000000     mov edx, 5
0x0000604a      e881caffff     call sym.imp.dcgettext                  ; /src:1823
0x0000604f      4d89e8         mov r8, r13
0x00006052      4889c2         mov rdx, rax
0x00006055      4889d9         mov rcx, rbx
0x00006058      31f6           xor esi, esi
0x0000605a      31ff           xor edi, edi
0x0000605c      31c0           xor eax, eax
0x0000605e      e8cdceffff     call sym.imp.error
0x00006063      e9fe030000     jmp 0x6466
0x00006068      0f1f84000000.  nop dword [rax + rax]
0x00006070      807b2e00       cmp byte [rbx + 0x2e], 0
0x00006074      740a           je 0x6080
0x00006076      807b1800       cmp byte [rbx + 0x18], 0
0x0000607a      0f84b0050000   je 0x6630                               ; /src:1822
0x00006080      4585ff         test r15d, r15d
0x00006083      0f8497030000   je 0x6420
0x00006089      807b2a00       cmp byte [rbx + 0x2a], 0
0x0000608d      7416           je 0x60a5
0x0000608f      8b85ecfcffff   mov eax, dword [rbp - 0x314]
0x00006095      2500f00000     and eax, 0xf000
0x0000609a      3d00400000     cmp eax, 0x4000                         ; "([]A\A]\xc3\x0f\x1f\x84"
0x0000609f      0f84cb0b0000   je 0x6c70                               ; /src:2031
0x000060a5      0fb64318       movzx eax, byte [rbx + 0x18]
0x000060a9      84c0           test al, al
0x000060ab      0f859f040000   jne 0x6550
0x000060b1      807b2200       cmp byte [rbx + 0x22], 0
0x000060b5      0f85d51b0000   jne 0x7c90
0x000060bb      410fb6c6       movzx eax, r14b
0x000060bf      48c785a8fcff.  mov qword [rbp - 0x358], 0
0x000060ca      8985e0fcffff   mov dword [rbp - 0x320], eax
0x000060d0      448ba5ecfcff.  mov r12d, dword [rbp - 0x314]
0x000060d7      4181e4ff0f00.  and r12d, 0xfff
0x000060de      807b2b00       cmp byte [rbx + 0x2b], 0
0x000060e2      740b           je 0x60ef
0x000060e4      448b6310       mov r12d, dword [rbx + 0x10]
0x000060e8      4181e4ff0f00.  and r12d, 0xfff
0x000060ef      807b1d00       cmp byte [rbx + 0x1d], 0
0x000060f3      0f851f060000   jne 0x6718                              ; /src:2032
0x000060f9      448bbdecfcff.  mov r15d, dword [rbp - 0x314]
0x00006100      4181e700f000.  and r15d, 0xf000
0x00006107      4181ff004000.  cmp r15d, 0x4000                        ; "([]A\A]\xc3\x0f\x1f\x84"
0x0000610e      0f843c0e0000   je 0x6f50
0x00006114      8b8de0fcffff   mov ecx, dword [rbp - 0x320]
0x0000611a      8b95ecfcffff   mov edx, dword [rbp - 0x314]
0x00006120      4989d8         mov r8, rbx
0x00006123      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x0000612a      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x00006131      e88af6ffff     call sym.set_process_security_ctx
0x00006136      84c0           test al, al
0x00006138      c785a4fcffff.  mov dword [rbp - 0x35c], 0
0x00006142      0f84e8fdffff   je 0x5f30
0x00006148      0fb6432c       movzx eax, byte [rbx + 0x2c]            ; .//coreutils-8.31/lib:2144
0x0000614c      84c0           test al, al
0x0000614e      8885e0fcffff   mov byte [rbp - 0x320], al
0x00006154      0f8586090000   jne 0x6ae0
0x0000615a      807b1700       cmp byte [rbx + 0x17], 0
0x0000615e      0f8444130000   je 0x74a8
0x00006164      807b1600       cmp byte [rbx + 0x16], 0
0x00006168      ba01000000     mov edx, 1
0x0000616d      7509           jne 0x6178                              ; .//coreutils-8.31/lib:2155
0x0000616f      31d2           xor edx, edx
0x00006171      837b0803       cmp dword [rbx + 8], 3
0x00006175      0f94c2         sete dl
0x00006178      448b85d8fcff.  mov r8d, dword [rbp - 0x328]
0x0000617f      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00006186      31c9           xor ecx, ecx
0x00006188      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x0000618f      e8fceeffff     call sym.create_hard_link
0x00006194      84c0           test al, al
0x00006196      0f84140a0000   je 0x6bb0                               ; /src:2160
0x0000619c      4531c0         xor r8d, r8d
0x0000619f      4181ff004000.  cmp r15d, 0x4000                        ; "([]A\A]\xc3\x0f\x1f\x84"
0x000061a6      410f95c7       setne r15b
0x000061aa      4584f6         test r14b, r14b
0x000061ad      7513           jne 0x61c2
0x000061af      0fb64314       movzx eax, byte [rbx + 0x14]
0x000061b3      83f001         xor eax, 1
0x000061b6      4420f8         and al, r15b
0x000061b9      4189c4         mov r12d, eax
0x000061bc      0f852e1d0000   jne 0x7ef0
0x000061c2      4584ed         test r13b, r13b
0x000061c5      41bc01000000   mov r12d, 1
0x000061cb      7455           je 0x6222
0x000061cd      c685d0fcffff.  mov byte [rbp - 0x330], 0
0x000061d4      48837b4000     cmp qword [rbx + 0x40], 0
0x000061d9      7432           je 0x620d
0x000061db      4c8da530ffff.  lea r12, [rbp - 0xd0]
0x000061e2      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000061e9      bf01000000     mov edi, 1
0x000061ee      448885d8fcff.  mov byte [rbp - 0x328], r8b
0x000061f5      4c89e2         mov rdx, r12
0x000061f8      e803c9ffff     call sym.imp.__lxstat
0x000061fd      85c0           test eax, eax
0x000061ff      440fb685d8fc.  movzx r8d, byte [rbp - 0x328]
0x00006207      0f8445200000   je 0x8252
0x0000620d      0fb685d0fcff.  movzx eax, byte [rbp - 0x330]
0x00006214      440fb6a5ebfc.  movzx r12d, byte [rbp - 0x315]
0x0000621c      8885ebfcffff   mov byte [rbp - 0x315], al
0x00006222      807b1700       cmp byte [rbx + 0x17], 0
0x00006226      7409           je 0x6231
0x00006228      4584ff         test r15b, r15b
0x0000622b      0f8535020000   jne 0x6466
0x00006231      4584c0         test r8b, r8b
0x00006234      0f852c020000   jne 0x6466
0x0000623a      807b1f00       cmp byte [rbx + 0x1f], 0
0x0000623e      0f84b4000000   je 0x62f8
0x00006244      488b85c8fdff.  mov rax, qword [rbp - sym..interp]
0x0000624b      80bde0fcffff.  cmp byte [rbp - 0x320], 0
0x00006252      488db530ffff.  lea rsi, [rbp - 0xd0]
0x00006259      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00006260      48898530ffff.  mov qword [rbp - 0xd0], rax
0x00006267      488b85d0fdff.  mov rax, qword [rbp - 0x230]
0x0000626e      48898538ffff.  mov qword [rbp - 0xc8], rax
0x00006275      488b85d8fdff.  mov rax, qword [rbp - 0x228]
0x0000627c      48898540ffff.  mov qword [rbp - 0xc0], rax
0x00006283      488b85e0fdff.  mov rax, qword [rbp - 0x220]            ; /src:2198
0x0000628a      48898548ffff.  mov qword [rbp - 0xb8], rax
0x00006291      0f84a91f0000   je 0x8240                               ; /src:2204
0x00006297      e8b4b40000     call sym.lutimens
0x0000629c      85c0           test eax, eax
0x0000629e      7458           je 0x62f8
0x000062a0      e8abc6ffff     call sym.imp.__errno_location
0x000062a5      833826         cmp dword [rax], 0x26
0x000062a8      744e           je 0x62f8
0x000062aa      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000062b1      bf04000000     mov edi, 4
0x000062b6      e835910000     call sym.quotearg_style
0x000062bb      488d352c1c01.  lea rsi, str.preserving_times_for__s    ; /src:2207 ; 0x17eee ; "preserving times for %s"
0x000062c2      31ff           xor edi, edi
0x000062c4      ba05000000     mov edx, 5
0x000062c9      4989c5         mov r13, rax
0x000062cc      e8ffc7ffff     call sym.imp.dcgettext
0x000062d1      4989c7         mov r15, rax
0x000062d4      e877c6ffff     call sym.imp.__errno_location
0x000062d9      8b30           mov esi, dword [rax]
0x000062db      31ff           xor edi, edi
0x000062dd      31c0           xor eax, eax
0x000062df      4c89e9         mov rcx, r13
0x000062e2      4c89fa         mov rdx, r15
0x000062e5      e846ccffff     call sym.imp.error
0x000062ea      807b2400       cmp byte [rbx + 0x24], 0                ; /src:2213
0x000062ee      0f853cfcffff   jne 0x5f30
0x000062f4      0f1f4000       nop dword [rax]
0x000062f8      80bde0fcffff.  cmp byte [rbp - 0x320], 0
0x000062ff      0f8561010000   jne 0x6466
0x00006305      807b1d00       cmp byte [rbx + 0x1d], 0
0x00006309      745c           je 0x6367
0x0000630b      4584f6         test r14b, r14b
0x0000630e      7512           jne 0x6322
0x00006310      8b852cfeffff   mov eax, dword [rbp - 0x1d4]
0x00006316      39859cfdffff   cmp dword [rbp - 0x264], eax
0x0000631c      0f84a8260000   je 0x89ca
0x00006322      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00006329      488d8d80fdff.  lea rcx, [rbp - 0x280]
0x00006330      4c8d8d10feff.  lea r9, [rbp - 0x1f0]
0x00006337      450fb6c6       movzx r8d, r14b
0x0000633b      baffffffff     mov edx, 0xffffffff                     ; -1
0x00006340      4889df         mov rdi, rbx
0x00006343      e898f6ffff     call sym.set_owner                      ; /src:2274
0x00006348      83f8ff         cmp eax, 0xffffffff
0x0000634b      0f84dffbffff   je 0x5f30
0x00006351      8b8decfcffff   mov ecx, dword [rbp - 0x314]
0x00006357      89ca           mov edx, ecx
0x00006359      80e6f1         and dh, 0xf1
0x0000635c      85c0           test eax, eax
0x0000635e      0f45d1         cmovne edx, ecx
0x00006361      8995ecfcffff   mov dword [rbp - 0x314], edx
0x00006367      48b8ff000000.  movabs rax, 0xff0000000000ff            ; 71776119061217535
0x00006371      48854318       test qword [rbx + 0x18], rax
0x00006375      0f8595200000   jne 0x8410
0x0000637b      807b2b00       cmp byte [rbx + 0x2b], 0
0x0000637f      0f85f0230000   jne 0x8775
0x00006385      44847320       test byte [rbx + 0x20], r14b
0x00006389      0f859a260000   jne 0x8a29
0x0000638f      8b85a4fcffff   mov eax, dword [rbp - 0x35c]
0x00006395      85c0           test eax, eax
0x00006397      0f8544260000   jne 0x89e1
0x0000639d      80bdebfcffff.  cmp byte [rbp - 0x315], 0
0x000063a4      0f84bc000000   je 0x6466
0x000063aa      8bb574fcffff   mov esi, dword [rbp - 0x38c]
0x000063b0      0bb5a4fcffff   or esi, dword [rbp - 0x35c]
0x000063b6      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x000063bd      e84ecbffff     call sym.imp.chmod
0x000063c2      85c0           test eax, eax
0x000063c4      0f849c000000   je 0x6466
0x000063ca      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000063d1      bf04000000     mov edi, 4
0x000063d6      e815900000     call sym.quotearg_style
0x000063db      488d35241b01.  lea rsi, str.preserving_permissions_for__s ; 0x17f06 ; "preserving permissions for %s"
0x000063e2      ba05000000     mov edx, 5
0x000063e7      31ff           xor edi, edi
0x000063e9      4989c6         mov r14, rax
0x000063ec      e8dfc6ffff     call sym.imp.dcgettext
0x000063f1      4989c5         mov r13, rax
0x000063f4      e857c5ffff     call sym.imp.__errno_location
0x000063f9      8b30           mov esi, dword [rax]                    ; /src:1409
0x000063fb      4c89f1         mov rcx, r14
0x000063fe      4c89ea         mov rdx, r13
0x00006401      31ff           xor edi, edi
0x00006403      31c0           xor eax, eax
0x00006405      e826cbffff     call sym.imp.error
0x0000640a      807b2400       cmp byte [rbx + 0x24], 0
0x0000640e      0f851cfbffff   jne 0x5f30
0x00006414      eb50           jmp 0x6466
0x00006416      662e0f1f8400.  nop word cs:[rax + rax]
0x00006420      807b1800       cmp byte [rbx + 0x18], 0
0x00006424      0f8491fcffff   je 0x60bb
0x0000642a      807b2e00       cmp byte [rbx + 0x2e], 0
0x0000642e      0f857c0b0000   jne 0x6fb0
0x00006434      807b2100       cmp byte [rbx + 0x21], 0
0x00006438      0f85520b0000   jne 0x6f90
0x0000643e      488b85e0fcff.  mov rax, qword [rbp - 0x320]
0x00006445      4885c0         test rax, rax                           ; /src:1328
0x00006448      7403           je 0x644d
0x0000644a      c60001         mov byte [rax], 1
0x0000644d      4584ed         test r13b, r13b
0x00006450      740e           je 0x6460
0x00006452      807b3100       cmp byte [rbx + 0x31], 0
0x00006456      0f846c0a0000   je 0x6ec8
0x0000645c      0f1f4000       nop dword [rax]
0x00006460      41bc01000000   mov r12d, 1
0x00006466      488b75c8       mov rsi, qword [rbp - 0x38]
0x0000646a      644833342528.  xor rsi, qword fs:[0x28]
0x00006473      4489e0         mov eax, r12d
0x00006476      0f85c82c0000   jne 0x9144
0x0000647c      488d65d8       lea rsp, [rbp - 0x28]
0x00006480      5b             pop rbx
0x00006481      415c           pop r12
0x00006483      415d           pop r13
0x00006485      415e           pop r14
0x00006487      415f           pop r15
0x00006489      5d             pop rbp                                 ; ../coreutils-8.31/src/selinux.h:-175
0x0000648a      c3             ret
0x0000648b      0f1f440000     nop dword [rax + rax]
0x00006490      e8bbc4ffff     call sym.imp.__errno_location           ; /src:1258
0x00006495      4989c1         mov r9, rax
0x00006498      8b00           mov eax, dword [rax]
0x0000649a      83f828         cmp eax, 0x28
0x0000649d      0f84cd050000   je 0x6a70
0x000064a3      83f802         cmp eax, 2
0x000064a6      41b801000000   mov r8d, 1
0x000064ac      0f85c8050000   jne 0x6a7a
0x000064b2      4531c9         xor r9d, r9d
0x000064b5      4183ff11       cmp r15d, 0x11
0x000064b9      0f845cf9ffff   je 0x5e1b
0x000064bf      4589c6         mov r14d, r8d
0x000064c2      48c785b0fcff.  mov qword [rbp - 0x350], 0
0x000064cd      e9dcfaffff     jmp 0x5fae
0x000064d2      660f1f440000   nop word [rax + rax]                    ; /src:1829
0x000064d8      837b0802       cmp dword [rbx + 8], 2
0x000064dc      0f8446f8ffff   je 0x5d28
0x000064e2      e9f4f7ffff     jmp 0x5cdb
0x000064e7      660f1f840000.  nop word [rax + rax]
0x000064f0      e80bc6ffff     call sym.imp.__lxstat
0x000064f5      85c0           test eax, eax
0x000064f7      4c89e6         mov rsi, r12                            ; /src:1647
0x000064fa      0f95c0         setne al
0x000064fd      84c0           test al, al
0x000064ff      0f8407f8ffff   je 0x5d0c
0x00006505      bf04000000     mov edi, 4
0x0000650a      e8e18e0000     call sym.quotearg_style
0x0000650f      488d35dffe00.  lea rsi, str.cannot_stat__s             ; 0x163f5 ; "cannot stat %s"
0x00006516      4989c4         mov r12, rax
0x00006519      ba05000000     mov edx, 5
0x0000651e      31ff           xor edi, edi
0x00006520      e8abc5ffff     call sym.imp.dcgettext
0x00006525      4889c3         mov rbx, rax
0x00006528      e823c4ffff     call sym.imp.__errno_location
0x0000652d      8b30           mov esi, dword [rax]
0x0000652f      4c89e1         mov rcx, r12                            ; /src:1596
0x00006532      4889da         mov rdx, rbx
0x00006535      31ff           xor edi, edi
0x00006537      31c0           xor eax, eax
0x00006539      4531e4         xor r12d, r12d
0x0000653c      e8efc9ffff     call sym.imp.error
0x00006541      e920ffffff     jmp 0x6466
0x00006546      662e0f1f8400.  nop word cs:[rax + rax]
0x00006550      4883bd90fdff.  cmp qword [rbp - 0x270], 1
0x00006558      0f842a100000   je 0x7588
0x0000655e      807b2200       cmp byte [rbx + 0x22], 0
0x00006562      48c785a8fcff.  mov qword [rbp - 0x358], 0
0x0000656d      740a           je 0x6579
0x0000656f      807b1700       cmp byte [rbx + 0x17], 0
0x00006573      0f84bf070000   je 0x6d38
0x00006579      4183ff11       cmp r15d, 0x11
0x0000657d      752c           jne 0x65ab
0x0000657f      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00006586      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x0000658d      e80ecaffff     call sym.imp.rename
0x00006592      85c0           test eax, eax
0x00006594      0f8490feffff   je 0x642a
0x0000659a      e8b1c3ffff     call sym.imp.__errno_location
0x0000659f      448b38         mov r15d, dword [rax]
0x000065a2      4585ff         test r15d, r15d
0x000065a5      0f847ffeffff   je 0x642a
0x000065ab      4183ff16       cmp r15d, 0x16
0x000065af      0f841b100000   je 0x75d0
0x000065b5      4183ff12       cmp r15d, 0x12
0x000065b9      0f85c9070000   jne 0x6d88
0x000065bf      448ba5ecfcff.  mov r12d, dword [rbp - 0x314]
0x000065c6      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x000065cd      4181e400f000.  and r12d, 0xf000
0x000065d4      4181fc004000.  cmp r12d, 0x4000                        ; "([]A\A]\xc3\x0f\x1f\x84"
0x000065db      0f845f100000   je 0x7640
0x000065e1      e87ac3ffff     call sym.imp.unlink
0x000065e6      85c0           test eax, eax
0x000065e8      7411           je 0x65fb
0x000065ea      e861c3ffff     call sym.imp.__errno_location
0x000065ef      833802         cmp dword [rax], 2
0x000065f2      4989c6         mov r14, rax
0x000065f5      0f8563100000   jne 0x765e                              ; /src:1160
0x000065fb      4181fc004000.  cmp r12d, 0x4000                        ; "([]A\A]\xc3\x0f\x1f\x84"
0x00006602      0f95c2         setne dl
0x00006605      22532e         and dl, byte [rbx + 0x2e]
0x00006608      4189d6         mov r14d, edx
0x0000660b      0f853f190000   jne 0x7f50
0x00006611      c785e0fcffff.  mov dword [rbp - 0x320], 1
0x0000661b      41be01000000   mov r14d, 1
0x00006621      e9aafaffff     jmp 0x60d0
0x00006626      662e0f1f8400.  nop word cs:[rax + rax]
0x00006630      8b85ecfcffff   mov eax, dword [rbp - 0x314]
0x00006636      2500f00000     and eax, 0xf000
0x0000663b      3d00400000     cmp eax, 0x4000                         ; "([]A\A]\xc3\x0f\x1f\x84"
0x00006640      0f843afaffff   je 0x6080
0x00006646      488b95b0fcff.  mov rdx, qword [rbp - 0x350]
0x0000664d      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00006654      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x0000665b      e870e9ffff     call sym.emit_verbose
0x00006660      e91bfaffff     jmp 0x6080                              ; /src:1182
0x00006665      0f1f00         nop dword [rax]
0x00006668      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x0000666f      4c89d2         mov rdx, r10                            ; /src:1188
0x00006672      4c8995d8fcff.  mov qword [rbp - 0x328], r10
0x00006679      e8124f0000     call sym.seen_file
0x0000667e      84c0           test al, al
0x00006680      4189c4         mov r12d, eax
0x00006683      0f85bf0e0000   jne 0x7548
0x00006689      488b7b48       mov rdi, qword [rbx + 0x48]
0x0000668d      4c8b95d8fcff.  mov r10, qword [rbp - 0x328]            ; /src:1174
0x00006694      e9c2f6ffff     jmp 0x5d5b
0x00006699      0f1f80000000.  nop dword [rax]
0x000066a0      440fb64b18     movzx r9d, byte [rbx + 0x18]
0x000066a5      41b800010000   mov r8d, 0x100                          ; /src:1728
0x000066ab      4584c9         test r9b, r9b
0x000066ae      0f852df7ffff   jne 0x5de1
0x000066b4      440fb64b2c     movzx r9d, byte [rbx + 0x2c]
0x000066b9      4584c9         test r9b, r9b
0x000066bc      0f851ff7ffff   jne 0x5de1
0x000066c2      440fb64b17     movzx r9d, byte [rbx + 0x17]
0x000066c7      4584c9         test r9b, r9b
0x000066ca      0f8511f7ffff   jne 0x5de1
0x000066d0      448b13         mov r10d, dword [rbx]
0x000066d3      41b901000000   mov r9d, 1
0x000066d9      4585d2         test r10d, r10d
0x000066dc      0f85fff6ffff   jne 0x5de1
0x000066e2      440fb64b15     movzx r9d, byte [rbx + 0x15]            ; /src:1731
0x000066e7      4531c0         xor r8d, r8d
0x000066ea      4584c9         test r9b, r9b
0x000066ed      410f95c0       setne r8b
0x000066f1      41c1e008       shl r8d, 8
0x000066f5      e9e7f6ffff     jmp 0x5de1
0x000066fa      660f1f440000   nop word [rax + rax]
0x00006700      837b0802       cmp dword [rbx + 8], 2
0x00006704      0f8597f6ffff   jne 0x5da1
0x0000670a      4531c0         xor r8d, r8d
0x0000670d      4531c9         xor r9d, r9d
0x00006710      e92af7ffff     jmp 0x5e3f
0x00006715      0f1f00         nop dword [rax]
0x00006718      8b8de0fcffff   mov ecx, dword [rbp - 0x320]
0x0000671e      8b95ecfcffff   mov edx, dword [rbp - 0x314]
0x00006724      4989d8         mov r8, rbx
0x00006727      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x0000672e      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x00006735      e886f0ffff     call sym.set_process_security_ctx       ; /src:1742
0x0000673a      84c0           test al, al
0x0000673c      0f84eef7ffff   je 0x5f30
0x00006742      448bbdecfcff.  mov r15d, dword [rbp - 0x314]
0x00006749      4489e0         mov eax, r12d
0x0000674c      83e03f         and eax, 0x3f
0x0000674f      8985a4fcffff   mov dword [rbp - 0x35c], eax
0x00006755      4181e700f000.  and r15d, 0xf000
0x0000675c      4181ff004000.  cmp r15d, 0x4000                        ; "([]A\A]\xc3\x0f\x1f\x84"
0x00006763      0f85dff9ffff   jne 0x6148
0x00006769      488b85d0fcff.  mov rax, qword [rbp - 0x330]
0x00006770      488b9588fdff.  mov rdx, qword [rbp - 0x278]
0x00006777      488b8d80fdff.  mov rcx, qword [rbp - 0x280]
0x0000677e      4885c0         test rax, rax
0x00006781      7519           jne 0x679c
0x00006783      e9f8080000     jmp 0x7080                              ; /src:1137
0x00006788      0f1f84000000.  nop dword [rax + rax]
0x00006790      488b00         mov rax, qword [rax]
0x00006793      4885c0         test rax, rax
0x00006796      0f84e4080000   je 0x7080
0x0000679c      48395008       cmp qword [rax + 8], rdx
0x000067a0      75ee           jne 0x6790
0x000067a2      48394810       cmp qword [rax + 0x10], rcx
0x000067a6      75e8           jne 0x6790
0x000067a8      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x000067af      bf04000000     mov edi, 4
0x000067b4      e8378c0000     call sym.quotearg_style
0x000067b9      488d35c81301.  lea rsi, str.cannot_copy_cyclic_symbolic_link__s ; 0x17b88 ; "cannot copy cyclic symbolic link %s"
0x000067c0      4989c4         mov r12, rax
0x000067c3      ba05000000     mov edx, 5
0x000067c8      31ff           xor edi, edi
0x000067ca      e801c3ffff     call sym.imp.dcgettext
0x000067cf      4c89e1         mov rcx, r12
0x000067d2      4889c2         mov rdx, rax
0x000067d5      31f6           xor esi, esi
0x000067d7      31ff           xor edi, edi                            ; /src:1285
0x000067d9      31c0           xor eax, eax
0x000067db      e850c7ffff     call sym.imp.error
0x000067e0      e9cb030000     jmp 0x6bb0
0x000067e5      0f1f00         nop dword [rax]
0x000067e8      440fb6632a     movzx r12d, byte [rbx + 0x2a]
0x000067ed      4584e4         test r12b, r12b
0x000067f0      0f8532f5ffff   jne 0x5d28
0x000067f6      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x000067fd      bf04000000     mov edi, 4
0x00006802      e8e98b0000     call sym.quotearg_style
0x00006807      807b1900       cmp byte [rbx + 0x19], 0
0x0000680b      4989c5         mov r13, rax
0x0000680e      ba05000000     mov edx, 5
0x00006813      0f85970d0000   jne 0x75b0
0x00006819      488d35d80f01.  lea rsi, str.r_not_specified__omitting_directory__s ; 0x177f8 ; "-r not specified; omitting directory %s"
0x00006820      31ff           xor edi, edi
0x00006822      e8a9c2ffff     call sym.imp.dcgettext
0x00006827      4889c2         mov rdx, rax
0x0000682a      4c89e9         mov rcx, r13
0x0000682d      31f6           xor esi, esi
0x0000682f      31ff           xor edi, edi
0x00006831      31c0           xor eax, eax
0x00006833      e8f8c6ffff     call sym.imp.error
0x00006838      e929fcffff     jmp 0x6466
0x0000683d      0f1f00         nop dword [rax]                         ; /src:1292
0x00006840      807b1800       cmp byte [rbx + 0x18], 0
0x00006844      0f85d6050000   jne 0x6e20
0x0000684a      8b85ecfcffff   mov eax, dword [rbp - 0x314]
0x00006850      2500f00000     and eax, 0xf000
0x00006855      3d00400000     cmp eax, 0x4000                         ; "([]A\A]\xc3\x0f\x1f\x84"
0x0000685a      7454           je 0x68b0
0x0000685c      8b4308         mov eax, dword [rbx + 8]
0x0000685f      83f802         cmp eax, 2
0x00006862      0f84f8fbffff   je 0x6460
0x00006868      83f803         cmp eax, 3
0x0000686b      7543           jne 0x68b0
0x0000686d      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00006874      488d9528feff.  lea rdx, [rbp - 0x1d8]
0x0000687b      4889df         mov rdi, rbx                            ; /src:1320
0x0000687e      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x00006885      448885b0fcff.  mov byte [rbp - 0x350], r8b
0x0000688c      e80fe9ffff     call sym.overwrite_ok.isra.12
0x00006891      84c0           test al, al                             ; /src:1350
0x00006893      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x0000689b      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]           ; /src:1367
0x000068a3      0f84b7fbffff   je 0x6460
0x000068a9      0f1f80000000.  nop dword [rax]
0x000068b0      4584f6         test r14b, r14b
0x000068b3      0f85a7fbffff   jne 0x6460
0x000068b9      8b8528feffff   mov eax, dword [rbp - 0x1d8]
0x000068bf      448ba5ecfcff.  mov r12d, dword [rbp - 0x314]
0x000068c6      89c2           mov edx, eax
0x000068c8      4181e400f000.  and r12d, 0xf000
0x000068cf      81e200f00000   and edx, 0xf000                         ; stdio.h:-493
0x000068d5      81fa00400000   cmp edx, 0x4000                         ; "([]A\A]\xc3\x0f\x1f\x84"
0x000068db      0f840f060000   je 0x6ef0
0x000068e1      4181fc004000.  cmp r12d, 0x4000                        ; "([]A\A]\xc3\x0f\x1f\x84"
0x000068e8      0f849a120000   je 0x7b88
0x000068ee      4584ed         test r13b, r13b
0x000068f1      448b3b         mov r15d, dword [rbx]
0x000068f4      0f84190b0000   je 0x7413                               ; /src:1373
0x000068fa      4183ff03       cmp r15d, 3
0x000068fe      0f85ac0a0000   jne 0x73b0
0x00006904      807b1800       cmp byte [rbx + 0x18], 0
0x00006908      0f8599120000   jne 0x7ba7
0x0000690e      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x00006915      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x0000691c      448885b0fcff.  mov byte [rbp - 0x350], r8b
0x00006923      e8784a0000     call sym.last_component
0x00006928      80382e         cmp byte [rax], 0x2e
0x0000692b      4989c6         mov r14, rax
0x0000692e      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x00006936      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x0000693e      7527           jne 0x6967
0x00006940      31c0           xor eax, eax
0x00006942      31d2           xor edx, edx
0x00006944      41807e012e     cmp byte [r14 + 1], 0x2e
0x00006949      0f94c2         sete dl
0x0000694c      410fb6541601   movzx edx, byte [r14 + rdx + 1]
0x00006952      84d2           test dl, dl
0x00006954      0f84ce0a0000   je 0x7428
0x0000695a      80fa2f         cmp dl, 0x2f
0x0000695d      0f84c50a0000   je 0x7428
0x00006963      84c0           test al, al
0x00006965      7516           jne 0x697d
0x00006967      8b8528feffff   mov eax, dword [rbp - 0x1d8]
0x0000696d      2500f00000     and eax, 0xf000
0x00006972      3d00400000     cmp eax, 0x4000                         ; "([]A\A]\xc3\x0f\x1f\x84"
0x00006977      0f84ca0a0000   je 0x7447
0x0000697d      4183ff03       cmp r15d, 3
0x00006981      7466           je 0x69e9
0x00006983      4c89f7         mov rdi, r14
0x00006986      44888da4fcff.  mov byte [rbp - 0x35c], r9b
0x0000698d      e85ec1ffff     call sym.imp.strlen
0x00006992      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00006999      488985b0fcff.  mov qword [rbp - 0x350], rax
0x000069a0      e8fb490000     call sym.last_component
0x000069a5      4889c7         mov rdi, rax
0x000069a8      488985a8fcff.  mov qword [rbp - 0x358], rax
0x000069af      e83cc1ffff     call sym.imp.strlen
0x000069b4      4c8b3de58b21.  mov r15, qword [obj.simple_backup_suffix] ; /src:1402 ; [0x21f5a0:8]=0
0x000069bb      4989c4         mov r12, rax
0x000069be      4c89ff         mov rdi, r15
0x000069c1      e82ac1ffff     call sym.imp.strlen                     ; ../coreutils-8.31/src/system.h:-728
0x000069c6      4989c0         mov r8, rax
0x000069c9      498d0404       lea rax, [r12 + rax]
0x000069cd      483985b0fcff.  cmp qword [rbp - 0x350], rax
0x000069d4      488bb5a8fcff.  mov rsi, qword [rbp - 0x358]
0x000069db      440fb68da4fc.  movzx r9d, byte [rbp - 0x35c]
0x000069e3      0f84551a0000   je 0x843e
0x000069e9      8b13           mov edx, dword [rbx]                    ; /src:1403
0x000069eb      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000069f2      bf9cffffff     mov edi, 0xffffff9c                     ; 4294967196
0x000069f7      44888db0fcff.  mov byte [rbp - 0x350], r9b
0x000069fe      e87d450000     call sym.backup_file_rename
0x00006a03      4885c0         test rax, rax
0x00006a06      4989c4         mov r12, rax
0x00006a09      440fb68db0fc.  movzx r9d, byte [rbp - 0x350]
0x00006a11      0f841a190000   je 0x8331
0x00006a17      4889c7         mov rdi, rax
0x00006a1a      44888da8fcff.  mov byte [rbp - 0x358], r9b             ; /src:1202
0x00006a21      41be01000000   mov r14d, 1
0x00006a27      e8c4c0ffff     call sym.imp.strlen
0x00006a2c      488d5001       lea rdx, [rax + 1]
0x00006a30      4883c01f       add rax, 0x1f
0x00006a34      4c89e6         mov rsi, r12
0x00006a37      4883e0f0       and rax, 0xfffffffffffffff0
0x00006a3b      41bf11000000   mov r15d, 0x11
0x00006a41      4829c4         sub rsp, rax
0x00006a44      488d7c240f     lea rdi, [rsp + 0xf]
0x00006a49      4883e7f0       and rdi, 0xfffffffffffffff0
0x00006a4d      e82ec3ffff     call sym.imp.memcpy
0x00006a52      4c89e7         mov rdi, r12
0x00006a55      488985b0fcff.  mov qword [rbp - 0x350], rax
0x00006a5c      e86fc6ffff     call sym..plt.got
0x00006a61      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x00006a69      e940f5ffff     jmp 0x5fae
0x00006a6e      6690           nop
0x00006a70      807b1600       cmp byte [rbx + 0x16], 0
0x00006a74      0f8586030000   jne 0x6e00
0x00006a7a      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00006a81      bf04000000     mov edi, 4
0x00006a86      4c898df0fcff.  mov qword [rbp - 0x310], r9
0x00006a8d      4531e4         xor r12d, r12d
0x00006a90      e85b890000     call sym.quotearg_style
0x00006a95      488d3559f900.  lea rsi, str.cannot_stat__s             ; 0x163f5 ; "cannot stat %s"
0x00006a9c      ba05000000     mov edx, 5
0x00006aa1      31ff           xor edi, edi                            ; /src:1861
0x00006aa3      4889c3         mov rbx, rax
0x00006aa6      e825c0ffff     call sym.imp.dcgettext
0x00006aab      4c8b8df0fcff.  mov r9, qword [rbp - 0x310]
0x00006ab2      4889c2         mov rdx, rax
0x00006ab5      4889d9         mov rcx, rbx
0x00006ab8      31ff           xor edi, edi
0x00006aba      31c0           xor eax, eax
0x00006abc      418b31         mov esi, dword [r9]
0x00006abf      e86cc4ffff     call sym.imp.error
0x00006ac4      e99df9ffff     jmp 0x6466
0x00006ac9      0f1f80000000.  nop dword [rax]
0x00006ad0      e87bbeffff     call sym.imp.__errno_location
0x00006ad5      448b38         mov r15d, dword [rax]
0x00006ad8      e9cef1ffff     jmp 0x5cab                              ; /src:1873
0x00006add      0f1f00         nop dword [rax]
0x00006ae0      488b85f0fcff.  mov rax, qword [rbp - 0x310]
0x00006ae7      80382f         cmp byte [rax], 0x2f
0x00006aea      7438           je 0x6b24
0x00006aec      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00006af3      e8c8470000     call sym.dir_name
0x00006af8      4c8d05641301.  lea r8, [0x00017e63]                    ; "."
0x00006aff      4889c7         mov rdi, rax
0x00006b02      b902000000     mov ecx, 2
0x00006b07      4989c4         mov r12, rax
0x00006b0a      4c89c6         mov rsi, r8
0x00006b0d      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00006b0f      0f97c0         seta al
0x00006b12      1c00           sbb al, 0
0x00006b14      84c0           test al, al
0x00006b16      0f85dc120000   jne 0x7df8
0x00006b1c      4c89e7         mov rdi, r12
0x00006b1f      e8acc5ffff     call sym..plt.got
0x00006b24      0fb64b16       movzx ecx, byte [rbx + 0x16]
0x00006b28      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x00006b2f      41b8ffffffff   mov r8d, 0xffffffff                     ; -1
0x00006b35      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x00006b3c      be9cffffff     mov esi, 0xffffff9c                     ; 4294967196
0x00006b41      e89a3a0000     call sym.force_symlinkat
0x00006b46      4531c0         xor r8d, r8d
0x00006b49      85c0           test eax, eax
0x00006b4b      4189c4         mov r12d, eax
0x00006b4e      0f8e4bf6ffff   jle 0x619f
0x00006b54      488b95f0fcff.  mov rdx, qword [rbp - 0x310]
0x00006b5b      be04000000     mov esi, 4
0x00006b60      bf01000000     mov edi, 1
0x00006b65      e866870000     call sym.quotearg_n_style               ; /src:2173
0x00006b6a      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x00006b71      be04000000     mov esi, 4
0x00006b76      31ff           xor edi, edi
0x00006b78      4989c5         mov r13, rax
0x00006b7b      e850870000     call sym.quotearg_n_style
0x00006b80      488d35590f01.  lea rsi, str.cannot_create_symbolic_link__s_to__s ; 0x17ae0 ; "cannot create symbolic link %s to %s"
0x00006b87      4989c6         mov r14, rax
0x00006b8a      ba05000000     mov edx, 5
0x00006b8f      31ff           xor edi, edi
0x00006b91      e83abfffff     call sym.imp.dcgettext
0x00006b96      4d89e8         mov r8, r13
0x00006b99      4889c2         mov rdx, rax
0x00006b9c      4c89f1         mov rcx, r14
0x00006b9f      4489e6         mov esi, r12d
0x00006ba2      31ff           xor edi, edi
0x00006ba4      31c0           xor eax, eax
0x00006ba6      e885c3ffff     call sym.imp.error
0x00006bab      0f1f440000     nop dword [rax + rax]
0x00006bb0      807b2500       cmp byte [rbx + 0x25], 0
0x00006bb4      0f8576010000   jne 0x6d30
0x00006bba      4883bda8fcff.  cmp qword [rbp - 0x358], 0
0x00006bc2      0f8498080000   je 0x7460
0x00006bc8      488b85b0fcff.  mov rax, qword [rbp - 0x350]            ; ../coreutils-8.31/src/py.c:-658
0x00006bcf      4885c0         test rax, rax
0x00006bd2      0f8458f3ffff   je 0x5f30
0x00006bd8      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00006bdf      4889c7         mov rdi, rax
0x00006be2      e8b9c3ffff     call sym.imp.rename
0x00006be7      85c0           test eax, eax
0x00006be9      0f8591080000   jne 0x7480
0x00006bef      807b2e00       cmp byte [rbx + 0x2e], 0                ; /src:1505
0x00006bf3      0f8437f3ffff   je 0x5f30
0x00006bf9      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x00006c00      be04000000     mov esi, 4
0x00006c05      bf01000000     mov edi, 1
0x00006c0a      e8c1860000     call sym.quotearg_n_style
0x00006c0f      488b95b0fcff.  mov rdx, qword [rbp - 0x350]
0x00006c16      31ff           xor edi, edi
0x00006c18      be04000000     mov esi, 4
0x00006c1d      4989c4         mov r12, rax
0x00006c20      e8ab860000     call sym.quotearg_n_style
0x00006c25      488d35891301.  lea rsi, str.s_____s__unbackup          ; 0x17fb5 ; "%s -> %s (unbackup)\n"
0x00006c2c      4889c3         mov rbx, rax
0x00006c2f      31ff           xor edi, edi
0x00006c31      ba05000000     mov edx, 5
0x00006c36      e895beffff     call sym.imp.dcgettext
0x00006c3b      4c89e1         mov rcx, r12
0x00006c3e      4889c6         mov rsi, rax
0x00006c41      4889da         mov rdx, rbx
0x00006c44      bf01000000     mov edi, 1
0x00006c49      31c0           xor eax, eax
0x00006c4b      e890c2ffff     call sym.imp.__printf_chk
0x00006c50      e9dbf2ffff     jmp 0x5f30
0x00006c55      0f1f00         nop dword [rax]
0x00006c58      807b2e00       cmp byte [rbx + 0x2e], 0
0x00006c5c      0f85cef9ffff   jne 0x6630
0x00006c62      4585ff         test r15d, r15d
0x00006c65      0f8450f4ffff   je 0x60bb
0x00006c6b      e919f4ffff     jmp 0x6089
0x00006c70      4584ed         test r13b, r13b
0x00006c73      488b9580fdff.  mov rdx, qword [rbp - 0x280]
0x00006c7a      488bbd88fdff.  mov rdi, qword [rbp - 0x278]
0x00006c81      0f84a9080000   je 0x7530
0x00006c87      4889fe         mov rsi, rdi
0x00006c8a      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00006c91      e82a330000     call sym.remember_copied
0x00006c96      488985a8fcff.  mov qword [rbp - 0x358], rax
0x00006c9d      4883bda8fcff.  cmp qword [rbp - 0x358], 0
0x00006ca5      0f84f5040000   je 0x71a0
0x00006cab      488bb5a8fcff.  mov rsi, qword [rbp - 0x358]
0x00006cb2      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x00006cb9      e8228f0000     call sym.same_name
0x00006cbe      84c0           test al, al
0x00006cc0      0f843a0f0000   je 0x7c00
0x00006cc6      488b15bb8821.  mov rdx, qword [obj.top_level_dst_name] ; [0x21f588:8]=0
0x00006ccd      be04000000     mov esi, 4
0x00006cd2      bf01000000     mov edi, 1
0x00006cd7      e8f4850000     call sym.quotearg_n_style
0x00006cdc      488b15ad8821.  mov rdx, qword [obj.top_level_src_name] ; [0x21f590:8]=0
0x00006ce3      be04000000     mov esi, 4
0x00006ce8      31ff           xor edi, edi
0x00006cea      4989c5         mov r13, rax
0x00006ced      e8de850000     call sym.quotearg_n_style
0x00006cf2      488d35df0c01.  lea rsi, str.cannot_copy_a_directory___s__into_itself___s ; /src:1523 ; 0x179d8 ; "cannot copy a directory, %s, into itself, %s"
0x00006cf9      4989c4         mov r12, rax
0x00006cfc      ba05000000     mov edx, 5
0x00006d01      31ff           xor edi, edi
0x00006d03      e8c8bdffff     call sym.imp.dcgettext
0x00006d08      4d89e8         mov r8, r13
0x00006d0b      4889c2         mov rdx, rax
0x00006d0e      4c89e1         mov rcx, r12
0x00006d11      31c0           xor eax, eax
0x00006d13      31f6           xor esi, esi
0x00006d15      31ff           xor edi, edi
0x00006d17      e814c2ffff     call sym.imp.error
0x00006d1c      488b85c0fcff.  mov rax, qword [rbp - 0x340]
0x00006d23      c60001         mov byte [rax], 1
0x00006d26      807b2500       cmp byte [rbx + 0x25], 0
0x00006d2a      0f8498feffff   je 0x6bc8                               ; /src:1464
0x00006d30      e8c1c3ffff     call sym.restore_default_fscreatecon_or_die
0x00006d35      0f1f00         nop dword [rax]
0x00006d38      4883bd90fdff.  cmp qword [rbp - 0x270], 1
0x00006d40      0f87e2030000   ja 0x7128                               ; /src:1463
0x00006d46      4584ed         test r13b, r13b
0x00006d49      8b5304         mov edx, dword [rbx + 4]
0x00006d4c      7409           je 0x6d57                               ; /src:1479
0x00006d4e      83fa03         cmp edx, 3
0x00006d51      0f84d1030000   je 0x7128
0x00006d57      83fa04         cmp edx, 4
0x00006d5a      48c785a8fcff.  mov qword [rbp - 0x358], 0
0x00006d65      0f84bd030000   je 0x7128
0x00006d6b      84c0           test al, al
0x00006d6d      0f8506f8ffff   jne 0x6579
0x00006d73      410fb6c6       movzx eax, r14b
0x00006d77      8985e0fcffff   mov dword [rbp - 0x320], eax
0x00006d7d      e94ef3ffff     jmp 0x60d0
0x00006d82      660f1f440000   nop word [rax + rax]
0x00006d88      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x00006d8f      be04000000     mov esi, 4
0x00006d94      bf01000000     mov edi, 1
0x00006d99      e832850000     call sym.quotearg_n_style               ; /src:769
0x00006d9e      488b95f0fcff.  mov rdx, qword [rbp - 0x310]
0x00006da5      be04000000     mov esi, 4
0x00006daa      31ff           xor edi, edi
0x00006dac      4989c4         mov r12, rax                            ; /src:771
0x00006daf      e81c850000     call sym.quotearg_n_style
0x00006db4      488d35491001.  lea rsi, str.cannot_move__s_to__s       ; 0x17e04 ; "cannot move %s to %s"
0x00006dbb      4889c3         mov rbx, rax
0x00006dbe      ba05000000     mov edx, 5
0x00006dc3      31ff           xor edi, edi
0x00006dc5      e806bdffff     call sym.imp.dcgettext
0x00006dca      4d89e0         mov r8, r12
0x00006dcd      4889d9         mov rcx, rbx
0x00006dd0      4889c2         mov rdx, rax
0x00006dd3      4489fe         mov esi, r15d
0x00006dd6      31ff           xor edi, edi
0x00006dd8      31c0           xor eax, eax
0x00006dda      e851c1ffff     call sym.imp.error
0x00006ddf      488bb580fdff.  mov rsi, qword [rbp - 0x280]
0x00006de6      488bbd88fdff.  mov rdi, qword [rbp - 0x278]
0x00006ded      e8fe300000     call sym.forget_created
0x00006df2      e939f1ffff     jmp 0x5f30
0x00006df7      660f1f840000.  nop word [rax + rax]
0x00006e00      4531c0         xor r8d, r8d
0x00006e03      e9aaf6ffff     jmp 0x64b2
0x00006e08      0f1f84000000.  nop dword [rax + rax]
0x00006e10      807b1800       cmp byte [rbx + 0x18], 0
0x00006e14      0f8442faffff   je 0x685c
0x00006e1a      660f1f440000   nop word [rax + rax]                    ; /src:1061
0x00006e20      8b4308         mov eax, dword [rbx + 8]
0x00006e23      83f802         cmp eax, 2
0x00006e26      747c           je 0x6ea4
0x00006e28      83f803         cmp eax, 3                              ; /src:1062
0x00006e2b      744b           je 0x6e78
0x00006e2d      83f804         cmp eax, 4
0x00006e30      0f857afaffff   jne 0x68b0
0x00006e36      807b2f00       cmp byte [rbx + 0x2f], 0
0x00006e3a      0f8470faffff   je 0x68b0
0x00006e40      8bb528feffff   mov esi, dword [rbp - 0x1d8]
0x00006e46      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00006e4d      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x00006e54      448885b0fcff.  mov byte [rbp - 0x350], r8b
0x00006e5b      e830e0ffff     call sym.writable_destination
0x00006e60      84c0           test al, al
0x00006e62      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x00006e6a      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x00006e72      0f8538faffff   jne 0x68b0
0x00006e78      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00006e7f      488d9528feff.  lea rdx, [rbp - 0x1d8]
0x00006e86      4889df         mov rdi, rbx
0x00006e89      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x00006e90      448885b0fcff.  mov byte [rbp - 0x350], r8b
0x00006e97      e804e3ffff     call sym.overwrite_ok.isra.12
0x00006e9c      84c0           test al, al
0x00006e9e      0f850c140000   jne 0x82b0
0x00006ea4      4883bde0fcff.  cmp qword [rbp - 0x320], 0
0x00006eac      0f84aef5ffff   je 0x6460
0x00006eb2      488b85e0fcff.  mov rax, qword [rbp - 0x320]
0x00006eb9      c60001         mov byte [rax], 1
0x00006ebc      e99ff5ffff     jmp 0x6460
0x00006ec1      0f1f80000000.  nop dword [rax]
0x00006ec8      488b7b40       mov rdi, qword [rbx + 0x40]
0x00006ecc      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00006ed3      488d9580fdff.  lea rdx, [rbp - 0x280]
0x00006eda      4589ec         mov r12d, r13d
0x00006edd      e81e460000     call sym.record_file
0x00006ee2      e97ff5ffff     jmp 0x6466
0x00006ee7      660f1f840000.  nop word [rax + rax]
0x00006ef0      4181fc004000.  cmp r12d, 0x4000                        ; /src:1499 ; "([]A\A]\xc3\x0f\x1f\x84"
0x00006ef7      0f8413050000   je 0x7410
0x00006efd      807b1800       cmp byte [rbx + 0x18], 0
0x00006f01      740c           je 0x6f0f
0x00006f03      448b3b         mov r15d, dword [rbx]
0x00006f06      4585ff         test r15d, r15d                         ; /src:1390
0x00006f09      0f85980c0000   jne 0x7ba7
0x00006f0f      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00006f16      bf04000000     mov edi, 4
0x00006f1b      4531e4         xor r12d, r12d
0x00006f1e      e8cd840000     call sym.quotearg_style
0x00006f23      488d35960901.  lea rsi, str.cannot_overwrite_directory__s_with_non_directory ; 0x178c0 ; "cannot overwrite directory %s with non-directory"
0x00006f2a      4889c3         mov rbx, rax
0x00006f2d      ba05000000     mov edx, 5
0x00006f32      31ff           xor edi, edi
0x00006f34      e897bbffff     call sym.imp.dcgettext
0x00006f39      4889d9         mov rcx, rbx                            ; ../coreutils-8.31/src/py.c:-875
0x00006f3c      4889c2         mov rdx, rax
0x00006f3f      31f6           xor esi, esi
0x00006f41      31ff           xor edi, edi
0x00006f43      31c0           xor eax, eax
0x00006f45      e8e6bfffff     call sym.imp.error
0x00006f4a      e917f5ffff     jmp 0x6466
0x00006f4f      90             nop
0x00006f50      8b8de0fcffff   mov ecx, dword [rbp - 0x320]
0x00006f56      8b95ecfcffff   mov edx, dword [rbp - 0x314]
0x00006f5c      4989d8         mov r8, rbx
0x00006f5f      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00006f66      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x00006f6d      e84ee8ffff     call sym.set_process_security_ctx
0x00006f72      84c0           test al, al
0x00006f74      0f84b6efffff   je 0x5f30
0x00006f7a      4489e0         mov eax, r12d
0x00006f7d      83e012         and eax, 0x12
0x00006f80      8985a4fcffff   mov dword [rbp - 0x35c], eax
0x00006f86      e9def7ffff     jmp 0x6769
0x00006f8b      0f1f440000     nop dword [rax + rax]
0x00006f90      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00006f97      4889d9         mov rcx, rbx
0x00006f9a      ba01000000     mov edx, 1
0x00006f9f      31f6           xor esi, esi
0x00006fa1      e8eae8ffff     call sym.set_file_security_ctx
0x00006fa6      e993f4ffff     jmp 0x643e
0x00006fab      0f1f440000     nop dword [rax + rax]
0x00006fb0      488d35440e01.  lea rsi, str.renamed                    ; 0x17dfb ; "renamed "
0x00006fb7      ba05000000     mov edx, 5
0x00006fbc      31ff           xor edi, edi
0x00006fbe      e80dbbffff     call sym.imp.dcgettext
0x00006fc3      bf01000000     mov edi, 1
0x00006fc8      4889c6         mov rsi, rax
0x00006fcb      31c0           xor eax, eax
0x00006fcd      e80ebfffff     call sym.imp.__printf_chk
0x00006fd2      488b95b0fcff.  mov rdx, qword [rbp - 0x350]
0x00006fd9      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00006fe0      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x00006fe7      e8e4dfffff     call sym.emit_verbose
0x00006fec      e943f4ffff     jmp 0x6434
0x00006ff1      0f1f80000000.  nop dword [rax]
0x00006ff8      488b8510feff.  mov rax, qword [rbp - 0x1f0]
0x00006fff      48398580fdff.  cmp qword [rbp - 0x280], rax
0x00007006      0f8529eeffff   jne 0x5e35
0x0000700c      0fb64317       movzx eax, byte [rbx + 0x17]
0x00007010      84c0           test al, al
0x00007012      0f8590030000   jne 0x73a8
0x00007018      837b0402       cmp dword [rbx + 4], 2
0x0000701c      b901000000     mov ecx, 1
0x00007021      41bf01000000   mov r15d, 1                             ; /src:1537
0x00007027      0f8488010000   je 0x71b5
0x0000702d      4c8da5a0feff.  lea r12, [rbp - 0x160]
0x00007034      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x0000703b      bf01000000     mov edi, 1
0x00007040      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x00007047      448885b0fcff.  mov byte [rbp - 0x350], r8b
0x0000704e      4c89e2         mov rdx, r12
0x00007051      e8aabaffff     call sym.imp.__lxstat
0x00007056      85c0           test eax, eax
0x00007058      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x00007060      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x00007068      0f8404100000   je 0x8072
0x0000706e      4531f6         xor r14d, r14d
0x00007071      e9c9edffff     jmp 0x5e3f
0x00007076      662e0f1f8400.  nop word cs:[rax + rax]
0x00007080      4883ec30       sub rsp, 0x30
0x00007084      488bb5d0fcff.  mov rsi, qword [rbp - 0x330]
0x0000708b      488d44240f     lea rax, [rsp + 0xf]
0x00007090      4883e0f0       and rax, 0xfffffffffffffff0
0x00007094      4584f6         test r14b, r14b
0x00007097      488985d8fcff.  mov qword [rbp - 0x328], rax
0x0000709e      488930         mov qword [rax], rsi                    ; /src:1308
0x000070a1      48895008       mov qword [rax + 8], rdx
0x000070a5      48894810       mov qword [rax + 0x10], rcx
0x000070a9      7516           jne 0x70c1
0x000070ab      8b8528feffff   mov eax, dword [rbp - 0x1d8]
0x000070b1      2500f00000     and eax, 0xf000
0x000070b6      3d00400000     cmp eax, 0x4000                         ; "([]A\A]\xc3\x0f\x1f\x84"
0x000070bb      0f8457100000   je 0x8118
0x000070c1      8bb5a4fcffff   mov esi, dword [rbp - 0x35c]
0x000070c7      4c8bbdf8fcff.  mov r15, qword [rbp - 0x308]
0x000070ce      f7d6           not esi
0x000070d0      4c89ff         mov rdi, r15
0x000070d3      4421e6         and esi, r12d
0x000070d6      e8e5b8ffff     call sym.imp.mkdir
0x000070db      85c0           test eax, eax
0x000070dd      0f84bd070000   je 0x78a0
0x000070e3      4c89fe         mov rsi, r15
0x000070e6      bf04000000     mov edi, 4
0x000070eb      e800830000     call sym.quotearg_style
0x000070f0      488d35cdf200.  lea rsi, str.cannot_create_directory__s ; 0x163c4 ; "cannot create directory %s"
0x000070f7      4989c5         mov r13, rax
0x000070fa      ba05000000     mov edx, 5
0x000070ff      31ff           xor edi, edi
0x00007101      e8cab9ffff     call sym.imp.dcgettext
0x00007106      4989c4         mov r12, rax
0x00007109      e842b8ffff     call sym.imp.__errno_location
0x0000710e      8b30           mov esi, dword [rax]
0x00007110      4c89e9         mov rcx, r13
0x00007113      4c89e2         mov rdx, r12
0x00007116      31ff           xor edi, edi
0x00007118      31c0           xor eax, eax
0x0000711a      e811beffff     call sym.imp.error
0x0000711f      e98cfaffff     jmp 0x6bb0
0x00007124      0f1f4000       nop dword [rax]
0x00007128      488b9580fdff.  mov rdx, qword [rbp - 0x280]            ; /src:474
0x0000712f      488bb588fdff.  mov rsi, qword [rbp - 0x278]
0x00007136      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x0000713d      e87e2e0000     call sym.remember_copied
0x00007142      488985a8fcff.  mov qword [rbp - 0x358], rax
0x00007149      4883bda8fcff.  cmp qword [rbp - 0x358], 0
0x00007151      744d           je 0x71a0
0x00007153      8b85ecfcffff   mov eax, dword [rbp - 0x314]
0x00007159      2500f00000     and eax, 0xf000
0x0000715e      3d00400000     cmp eax, 0x4000                         ; "([]A\A]\xc3\x0f\x1f\x84"
0x00007163      0f8442fbffff   je 0x6cab
0x00007169      0fb64b2e       movzx ecx, byte [rbx + 0x2e]
0x0000716d      448b85d8fcff.  mov r8d, dword [rbp - 0x328]
0x00007174      ba01000000     mov edx, 1
0x00007179      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00007180      488bbda8fcff.  mov rdi, qword [rbp - 0x358]
0x00007187      e804dfffff     call sym.create_hard_link
0x0000718c      84c0           test al, al
0x0000718e      0f8492fbffff   je 0x6d26
0x00007194      e9c7f2ffff     jmp 0x6460
0x00007199      0f1f80000000.  nop dword [rax]
0x000071a0      0fb64318       movzx eax, byte [rbx + 0x18]
0x000071a4      e9c2fbffff     jmp 0x6d6b
0x000071a9      0f1f80000000.  nop dword [rax]
0x000071b0      31c9           xor ecx, ecx
0x000071b2      4531ff         xor r15d, r15d
0x000071b5      8b8598fdffff   mov eax, dword [rbp - 0x268]
0x000071bb      488d9580fdff.  lea rdx, [rbp - 0x280]                  ; /src:927
0x000071c2      2500f00000     and eax, 0xf000
0x000071c7      3d00a00000     cmp eax, 0xa000
0x000071cc      0f84a10c0000   je 0x7e73
0x000071d2      8b33           mov esi, dword [rbx]
0x000071d4      85f6           test esi, esi
0x000071d6      0f84dc040000   je 0x76b8
0x000071dc      84c9           test cl, cl
0x000071de      0f858e100000   jne 0x8272
0x000071e4      807b1800       cmp byte [rbx + 0x18], 0                ; /src:470
0x000071e8      0f8580feffff   jne 0x706e
0x000071ee      837b0402       cmp dword [rbx + 4], 2
0x000071f2      0f8476feffff   je 0x706e
0x000071f8      8b4218         mov eax, dword [rdx + 0x18]
0x000071fb      2500f00000     and eax, 0xf000
0x00007200      3d00a00000     cmp eax, 0xa000
0x00007205      0f8563feffff   jne 0x706e
0x0000720b      418b442418     mov eax, dword [r12 + 0x18]
0x00007210      2500f00000     and eax, 0xf000
0x00007215      3d00a00000     cmp eax, 0xa000
0x0000721a      0f844efeffff   je 0x706e
0x00007220      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x00007227      be04000000     mov esi, 4
0x0000722c      bf01000000     mov edi, 1
0x00007231      e89a800000     call sym.quotearg_n_style
0x00007236      488b95f0fcff.  mov rdx, qword [rbp - 0x310]
0x0000723d      be04000000     mov esi, 4
0x00007242      31ff           xor edi, edi
0x00007244      4989c4         mov r12, rax
0x00007247      e884800000     call sym.quotearg_n_style
0x0000724c      488d356a0b01.  lea rsi, str.s_and__s_are_the_same_file ; 0x17dbd ; "%s and %s are the same file"
0x00007253      4889c3         mov rbx, rax
0x00007256      ba05000000     mov edx, 5                              ; /src:514
0x0000725b      31ff           xor edi, edi
0x0000725d      e86eb8ffff     call sym.imp.dcgettext
0x00007262      4d89e0         mov r8, r12
0x00007265      4889c2         mov rdx, rax
0x00007268      4889d9         mov rcx, rbx
0x0000726b      31f6           xor esi, esi
0x0000726d      31ff           xor edi, edi
0x0000726f      31c0           xor eax, eax
0x00007271      e8babcffff     call sym.imp.error
0x00007276      e9b5ecffff     jmp 0x5f30
0x0000727b      0f1f440000     nop dword [rax + rax]
0x00007280      807b1800       cmp byte [rbx + 0x18], 0
0x00007284      0f8426f6ffff   je 0x68b0
0x0000728a      e991fbffff     jmp 0x6e20
0x0000728f      90             nop
0x00007290      418b442418     mov eax, dword [r12 + 0x18]
0x00007295      2500f00000     and eax, 0xf000
0x0000729a      3d00a00000     cmp eax, 0xa000                         ; /src:517
0x0000729f      0f849aebffff   je 0x5e3f
0x000072a5      84c9           test cl, cl
0x000072a7      740c           je 0x72b5
0x000072a9      49837c241001   cmp qword [r12 + 0x10], 1
0x000072af      0f87b6130000   ja 0x866b
0x000072b5      8b4218         mov eax, dword [rdx + 0x18]
0x000072b8      2500f00000     and eax, 0xf000
0x000072bd      3d00a00000     cmp eax, 0xa000
0x000072c2      742c           je 0x72f0
0x000072c4      498b442408     mov rax, qword [r12 + 8]
0x000072c9      48394208       cmp qword [rdx + 8], rax
0x000072cd      0f856cebffff   jne 0x5e3f
0x000072d3      498b0424       mov rax, qword [r12]
0x000072d7      483902         cmp qword [rdx], rax                    ; /src:869
0x000072da      0f855febffff   jne 0x5e3f
0x000072e0      0fb64317       movzx eax, byte [rbx + 0x17]
0x000072e4      84c0           test al, al
0x000072e6      0f85bc000000   jne 0x73a8
0x000072ec      0fb67318       movzx esi, byte [rbx + 0x18]
0x000072f0      4084f6         test sil, sil
0x000072f3      0f84e9030000   je 0x76e2
0x000072f9      8b8598fdffff   mov eax, dword [rbp - 0x268]
0x000072ff      2500f00000     and eax, 0xf000
0x00007304      3d00a00000     cmp eax, 0xa000
0x00007309      0f85d3030000   jne 0x76e2
0x0000730f      49837c241001   cmp qword [r12 + 0x10], 1
0x00007315      0f86c7030000   jbe 0x76e2
0x0000731b      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x00007322      44888da4fcff.  mov byte [rbp - 0x35c], r9b
0x00007329      448885a8fcff.  mov byte [rbp - 0x358], r8b
0x00007330      488995b0fcff.  mov qword [rbp - 0x350], rdx
0x00007337      e8e4b8ffff     call sym.imp.canonicalize_file_name
0x0000733c      4885c0         test rax, rax
0x0000733f      4989c7         mov r15, rax
0x00007342      488b95b0fcff.  mov rdx, qword [rbp - 0x350]
0x00007349      440fb685a8fc.  movzx r8d, byte [rbp - 0x358]
0x00007351      440fb68da4fc.  movzx r9d, byte [rbp - 0x35c]
0x00007359      0f8483030000   je 0x76e2
0x0000735f      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00007366      4889c7         mov rdi, rax
0x00007369      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x00007370      448885b0fcff.  mov byte [rbp - 0x350], r8b
0x00007377      e864880000     call sym.same_name                      ; /src:629
0x0000737c      4c89ff         mov rdi, r15
0x0000737f      83f001         xor eax, 1
0x00007382      4189c4         mov r12d, eax
0x00007385      e846bdffff     call sym..plt.got
0x0000738a      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x00007392      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x0000739a      31c0           xor eax, eax
0x0000739c      4584e4         test r12b, r12b
0x0000739f      0f847bfeffff   je 0x7220
0x000073a5      0f1f00         nop dword [rax]
0x000073a8      4189c6         mov r14d, eax
0x000073ab      e98feaffff     jmp 0x5e3f
0x000073b0      488b7b40       mov rdi, qword [rbx + 0x40]
0x000073b4      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000073bb      488d9510feff.  lea rdx, [rbp - 0x1f0]
0x000073c2      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x000073c9      448885b0fcff.  mov byte [rbp - 0x350], r8b
0x000073d0      e8bb410000     call sym.seen_file
0x000073d5      84c0           test al, al
0x000073d7      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x000073df      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x000073e7      0f8548130000   jne 0x8735
0x000073ed      4181fc004000.  cmp r12d, 0x4000                        ; "([]A\A]\xc3\x0f\x1f\x84"
0x000073f4      741a           je 0x7410
0x000073f6      8b8528feffff   mov eax, dword [rbp - 0x1d8]
0x000073fc      89c2           mov edx, eax
0x000073fe      81e200f00000   and edx, 0xf000                         ; /src:1462
0x00007404      81fa00400000   cmp edx, 0x4000                         ; "([]A\A]\xc3\x0f\x1f\x84"
0x0000740a      0f84edfaffff   je 0x6efd
0x00007410      448b3b         mov r15d, dword [rbx]
0x00007413      0fb64318       movzx eax, byte [rbx + 0x18]
0x00007417      84c0           test al, al
0x00007419      0f85b1090000   jne 0x7dd0
0x0000741f      4585ff         test r15d, r15d
0x00007422      0f85e6f4ffff   jne 0x690e
0x00007428      8b9528feffff   mov edx, dword [rbp - 0x1d8]
0x0000742e      81e200f00000   and edx, 0xf000
0x00007434      81fa00400000   cmp edx, 0x4000                         ; "([]A\A]\xc3\x0f\x1f\x84"
0x0000743a      410f94c4       sete r12b
0x0000743e      4108c4         or r12b, al
0x00007441      0f84940b0000   je 0x7fdb
0x00007447      4589c6         mov r14d, r8d
0x0000744a      41bf11000000   mov r15d, 0x11
0x00007450      48c785b0fcff.  mov qword [rbp - 0x350], 0
0x0000745b      e94eebffff     jmp 0x5fae
0x00007460      488bb580fdff.  mov rsi, qword [rbp - 0x280]
0x00007467      488bbd88fdff.  mov rdi, qword [rbp - 0x278]
0x0000746e      e87d2a0000     call sym.forget_created
0x00007473      e950f7ffff     jmp 0x6bc8
0x00007478      0f1f84000000.  nop dword [rax + rax]
0x00007480      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00007487      bf04000000     mov edi, 4
0x0000748c      e85f7f0000     call sym.quotearg_style
0x00007491      ba05000000     mov edx, 5
0x00007496      4989c4         mov r12, rax
0x00007499      488d35010b01.  lea rsi, str.cannot_un_backup__s        ; 0x17fa1 ; "cannot un-backup %s"
0x000074a0      e979f0ffff     jmp 0x651e
0x000074a5      0f1f00         nop dword [rax]
0x000074a8      4181ff008000.  cmp r15d, 0x8000
0x000074af      0f84fb070000   je 0x7cb0
0x000074b5      4181ff00a000.  cmp r15d, 0xa000
0x000074bc      410f95c0       setne r8b
0x000074c0      44224314       and r8b, byte [rbx + 0x14]
0x000074c4      0f85e6070000   jne 0x7cb0
0x000074ca      4181ff001000.  cmp r15d, 0x1000
0x000074d1      0f84bb100000   je 0x8592                               ; /src:1041
0x000074d7      4489f8         mov eax, r15d
0x000074da      80e4bf         and ah, 0xbf
0x000074dd      3d00200000     cmp eax, 0x2000
0x000074e2      0f84e40c0000   je 0x81cc
0x000074e8      4181ff00c000.  cmp r15d, 0xc000
0x000074ef      0f84d70c0000   je 0x81cc
0x000074f5      4181ff00a000.  cmp r15d, 0xa000
0x000074fc      0f847e130000   je 0x8880
0x00007502      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x00007509      bf04000000     mov edi, 4
0x0000750e      e8dd7e0000     call sym.quotearg_style
0x00007513      ba05000000     mov edx, 5
0x00007518      4989c4         mov r12, rax
0x0000751b      488d35660a01.  lea rsi, str.s_has_unknown_file_type    ; 0x17f88 ; "%s has unknown file type"
0x00007522      e9a1f2ffff     jmp 0x67c8
0x00007527      660f1f840000.  nop word [rax + rax]
0x00007530      4889d6         mov rsi, rdx
0x00007533      e8282a0000     call sym.src_to_dest_lookup
0x00007538      488985a8fcff.  mov qword [rbp - 0x358], rax
0x0000753f      e959f7ffff     jmp 0x6c9d
0x00007544      0f1f4000       nop dword [rax]
0x00007548      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x0000754f      bf04000000     mov edi, 4
0x00007554      e8977e0000     call sym.quotearg_style                 ; /src:1550
0x00007559      488d35c00201.  lea rsi, str.warning:_source_file__s_specified_more_than_once ; 0x17820 ; "warning: source file %s specified more than once"
0x00007560      4889c3         mov rbx, rax
0x00007563      31ff           xor edi, edi
0x00007565      ba05000000     mov edx, 5
0x0000756a      e861b5ffff     call sym.imp.dcgettext
0x0000756f      4889d9         mov rcx, rbx
0x00007572      4889c2         mov rdx, rax
0x00007575      31f6           xor esi, esi
0x00007577      31ff           xor edi, edi
0x00007579      31c0           xor eax, eax
0x0000757b      e8b0b9ffff     call sym.imp.error
0x00007580      e9e1eeffff     jmp 0x6466
0x00007585      0f1f00         nop dword [rax]
0x00007588      488bb580fdff.  mov rsi, qword [rbp - 0x280]
0x0000758f      488bbd88fdff.  mov rdi, qword [rbp - 0x278]
0x00007596      e8c5290000     call sym.src_to_dest_lookup
0x0000759b      488985a8fcff.  mov qword [rbp - 0x358], rax
0x000075a2      e9a2fbffff     jmp 0x7149
0x000075a7      660f1f840000.  nop word [rax + rax]
0x000075b0      488d35f00701.  lea rsi, str.omitting_directory__s      ; 0x17da7 ; "omitting directory %s"
0x000075b7      31ff           xor edi, edi
0x000075b9      e812b5ffff     call sym.imp.dcgettext
0x000075be      4889c2         mov rdx, rax
0x000075c1      e964f2ffff     jmp 0x682a                              ; /src:1600
0x000075c6      662e0f1f8400.  nop word cs:[rax + rax]
0x000075d0      488b15b17f21.  mov rdx, qword [obj.top_level_dst_name] ; [0x21f588:8]=0
0x000075d7      be04000000     mov esi, 4
0x000075dc      bf01000000     mov edi, 1
0x000075e1      e8ea7c0000     call sym.quotearg_n_style
0x000075e6      488b15a37f21.  mov rdx, qword [obj.top_level_src_name] ; [0x21f590:8]=0
0x000075ed      be04000000     mov esi, 4
0x000075f2      31ff           xor edi, edi
0x000075f4      4989c4         mov r12, rax
0x000075f7      e8d47c0000     call sym.quotearg_n_style
0x000075fc      488d356d0401.  lea rsi, str.cannot_move__s_to_a_subdirectory_of_itself___s ; 0x17a70 ; "cannot move %s to a subdirectory of itself, %s"
0x00007603      4889c3         mov rbx, rax                            ; /src:773
0x00007606      ba05000000     mov edx, 5
0x0000760b      31ff           xor edi, edi
0x0000760d      e8beb4ffff     call sym.imp.dcgettext
0x00007612      4d89e0         mov r8, r12
0x00007615      4889c2         mov rdx, rax
0x00007618      4889d9         mov rcx, rbx
0x0000761b      31c0           xor eax, eax
0x0000761d      31f6           xor esi, esi
0x0000761f      31ff           xor edi, edi
0x00007621      e80ab9ffff     call sym.imp.error
0x00007626      488b85c0fcff.  mov rax, qword [rbp - 0x340]
0x0000762d      41bc01000000   mov r12d, 1
0x00007633      c60001         mov byte [rax], 1
0x00007636      e92beeffff     jmp 0x6466
0x0000763b      0f1f440000     nop dword [rax + rax]                   ; /src:779
0x00007640      e87bb4ffff     call sym.imp.rmdir
0x00007645      85c0           test eax, eax
0x00007647      0f84c4efffff   je 0x6611
0x0000764d      e8feb2ffff     call sym.imp.__errno_location
0x00007652      833802         cmp dword [rax], 2
0x00007655      4989c6         mov r14, rax
0x00007658      0f84b3efffff   je 0x6611
0x0000765e      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x00007665      be04000000     mov esi, 4
0x0000766a      bf01000000     mov edi, 1
0x0000766f      e85c7c0000     call sym.quotearg_n_style
0x00007674      488b95f0fcff.  mov rdx, qword [rbp - 0x310]
0x0000767b      be04000000     mov esi, 4
0x00007680      31ff           xor edi, edi
0x00007682      4989c4         mov r12, rax
0x00007685      e8467c0000     call sym.quotearg_n_style
0x0000768a      488d350f0401.  lea rsi, str.inter_device_move_failed:__s_to__s__unable_to_remove_target ; 0x17aa0 ; "inter-device move failed: %s to %s; unable to remove target"
0x00007691      4889c3         mov rbx, rax
0x00007694      ba05000000     mov edx, 5
0x00007699      31ff           xor edi, edi
0x0000769b      e830b4ffff     call sym.imp.dcgettext
0x000076a0      4d89e0         mov r8, r12
0x000076a3      4889d9         mov rcx, rbx
0x000076a6      4889c2         mov rdx, rax
0x000076a9      418b36         mov esi, dword [r14]
0x000076ac      e925f7ffff     jmp 0x6dd6
0x000076b1      0f1f80000000.  nop dword [rax]
0x000076b8      0fb67318       movzx esi, byte [rbx + 0x18]
0x000076bc      4084f6         test sil, sil
0x000076bf      0f85cbfbffff   jne 0x7290
0x000076c5      807b1500       cmp byte [rbx + 0x15], 0
0x000076c9      0f85c1fbffff   jne 0x7290
0x000076cf      8b4218         mov eax, dword [rdx + 0x18]
0x000076d2      2500f00000     and eax, 0xf000
0x000076d7      3d00a00000     cmp eax, 0xa000
0x000076dc      0f85e30f0000   jne 0x86c5
0x000076e2      807b2c00       cmp byte [rbx + 0x2c], 0
0x000076e6      7415           je 0x76fd
0x000076e8      418b442418     mov eax, dword [r12 + 0x18]
0x000076ed      2500f00000     and eax, 0xf000
0x000076f2      3d00a00000     cmp eax, 0xa000
0x000076f7      0f8442e7ffff   je 0x5e3f
0x000076fd      837b0402       cmp dword [rbx + 4], 2
0x00007701      0f8519fbffff   jne 0x7220
0x00007707      8b4218         mov eax, dword [rdx + 0x18]
0x0000770a      2500f00000     and eax, 0xf000
0x0000770f      3d00a00000     cmp eax, 0xa000
0x00007714      0f84721a0000   je 0x918c
0x0000771a      660f6f02       movdqa xmm0, xmmword [rdx]
0x0000771e      0f298530ffff.  movaps xmmword [rbp - 0xd0], xmm0
0x00007725      660f6f4210     movdqa xmm0, xmmword [rdx + 0x10]
0x0000772a      0f298540ffff.  movaps xmmword [rbp - 0xc0], xmm0
0x00007731      660f6f4220     movdqa xmm0, xmmword [rdx + 0x20]
0x00007736      0f298550ffff.  movaps xmmword [rbp - 0xb0], xmm0
0x0000773d      660f6f4230     movdqa xmm0, xmmword [rdx + 0x30]
0x00007742      0f298560ffff.  movaps xmmword [rbp - 0xa0], xmm0
0x00007749      660f6f4240     movdqa xmm0, xmmword [rdx + 0x40]
0x0000774e      0f298570ffff.  movaps xmmword [rbp - 0x90], xmm0
0x00007755      660f6f4250     movdqa xmm0, xmmword [rdx + 0x50]
0x0000775a      0f294580       movaps xmmword [rbp - 0x80], xmm0       ; /src:791
0x0000775e      660f6f4260     movdqa xmm0, xmmword [rdx + 0x60]
0x00007763      0f294590       movaps xmmword [rbp - 0x70], xmm0
0x00007767      660f6f4270     movdqa xmm0, xmmword [rdx + 0x70]
0x0000776c      0f2945a0       movaps xmmword [rbp - 0x60], xmm0
0x00007770      660f6f828000.  movdqa xmm0, xmmword [rdx + 0x80]
0x00007778      0f2945b0       movaps xmmword [rbp - 0x50], xmm0
0x0000777c      418b442418     mov eax, dword [r12 + 0x18]
0x00007781      2500f00000     and eax, 0xf000                         ; ../coreutils-8.31/src/selinux.h:-400
0x00007786      3d00a00000     cmp eax, 0xa000
0x0000778b      0f84b8190000   je 0x9149
0x00007791      66410f6f0424   movdqa xmm0, xmmword [r12]
0x00007797      0f2985a0feff.  movaps xmmword [rbp - 0x160], xmm0
0x0000779e      66410f6f4424.  movdqa xmm0, xmmword [r12 + 0x10]
0x000077a5      0f2985b0feff.  movaps xmmword [rbp - 0x150], xmm0
0x000077ac      66410f6f4424.  movdqa xmm0, xmmword [r12 + 0x20]
0x000077b3      0f2985c0feff.  movaps xmmword [rbp - 0x140], xmm0
0x000077ba      66410f6f4424.  movdqa xmm0, xmmword [r12 + 0x30]
0x000077c1      0f2985d0feff.  movaps xmmword [rbp - 0x130], xmm0
0x000077c8      66410f6f4424.  movdqa xmm0, xmmword [r12 + 0x40]
0x000077cf      0f2985e0feff.  movaps xmmword [rbp - 0x120], xmm0
0x000077d6      66410f6f4424.  movdqa xmm0, xmmword [r12 + 0x50]
0x000077dd      0f2985f0feff.  movaps xmmword [rbp - 0x110], xmm0
0x000077e4      66410f6f4424.  movdqa xmm0, xmmword [r12 + 0x60]
0x000077eb      0f298500ffff.  movaps xmmword [rbp - 0x100], xmm0
0x000077f2      66410f6f4424.  movdqa xmm0, xmmword [r12 + 0x70]
0x000077f9      0f298510ffff.  movaps xmmword [rbp - 0xf0], xmm0
0x00007800      66410f6f8424.  movdqa xmm0, xmmword [r12 + 0x80]
0x0000780a      0f298520ffff.  movaps xmmword [rbp - 0xe0], xmm0
0x00007811      488b85a8feff.  mov rax, qword [rbp - 0x158]
0x00007818      48398538ffff.  cmp qword [rbp - 0xc8], rax
0x0000781f      0f851ae6ffff   jne 0x5e3f
0x00007825      488b85a0feff.  mov rax, qword [rbp - 0x160]
0x0000782c      48398530ffff.  cmp qword [rbp - 0xd0], rax
0x00007833      0f8506e6ffff   jne 0x5e3f
0x00007839      807b1700       cmp byte [rbx + 0x17], 0                ; /src:1705
0x0000783d      0f84ddf9ffff   je 0x7220
0x00007843      418b442418     mov eax, dword [r12 + 0x18]
0x00007848      2500f00000     and eax, 0xf000
0x0000784d      3d00a00000     cmp eax, 0xa000
0x00007852      410f95c6       setne r14b
0x00007856      e9e4e5ffff     jmp 0x5e3f
0x0000785b      0f1f440000     nop dword [rax + rax]
0x00007860      488d8d30ffff.  lea rcx, [rbp - 0xd0]
0x00007867      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x0000786e      bf01000000     mov edi, 1
0x00007873      4889ca         mov rdx, rcx
0x00007876      48898da8fcff.  mov qword [rbp - 0x358], rcx
0x0000787d      e87eb2ffff     call sym.imp.__lxstat
0x00007882      85c0           test eax, eax
0x00007884      0f85e6e7ffff   jne 0x6070
0x0000788a      488b8da8fcff.  mov rcx, qword [rbp - 0x358]
0x00007891      4889ca         mov rdx, rcx
0x00007894      e951e7ffff     jmp 0x5fea
0x00007899      0f1f80000000.  nop dword [rax]
0x000078a0      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000078a7      488d9510feff.  lea rdx, [rbp - 0x1f0]
0x000078ae      bf01000000     mov edi, 1
0x000078b3      e848b2ffff     call sym.imp.__lxstat
0x000078b8      85c0           test eax, eax
0x000078ba      0f85050a0000   jne 0x82c5
0x000078c0      448ba528feff.  mov r12d, dword [rbp - 0x1d8]
0x000078c7      c685d0fcffff.  mov byte [rbp - 0x330], 0
0x000078ce      4489e0         mov eax, r12d
0x000078d1      25c0010000     and eax, 0x1c0
0x000078d6      3dc0010000     cmp eax, 0x1c0
0x000078db      742b           je 0x7908
0x000078dd      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x000078e4      4489e6         mov esi, r12d
0x000078e7      81cec0010000   or esi, 0x1c0
0x000078ed      e81eb6ffff     call sym.imp.chmod                      ; /src:-137
0x000078f2      85c0           test eax, eax
0x000078f4      4489a574fcff.  mov dword [rbp - 0x38c], r12d
0x000078fb      c685d0fcffff.  mov byte [rbp - 0x330], 1
0x00007902      0f851b100000   jne 0x8923
0x00007908      488b85c8fcff.  mov rax, qword [rbp - 0x338]
0x0000790f      803800         cmp byte [rax], 0
0x00007912      0f84f40d0000   je 0x870c
0x00007918      807b2e00       cmp byte [rbx + 0x2e], 0
0x0000791c      744a           je 0x7968
0x0000791e      807b1800       cmp byte [rbx + 0x18], 0
0x00007922      0f84a50e0000   je 0x87cd
0x00007928      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x0000792f      bf04000000     mov edi, 4
0x00007934      e8b77a0000     call sym.quotearg_style
0x00007939      488d35fc0401.  lea rsi, str.created_directory__s       ; 0x17e3c ; "created directory %s\n"
0x00007940      4989c4         mov r12, rax
0x00007943      ba05000000     mov edx, 5
0x00007948      31ff           xor edi, edi
0x0000794a      e881b1ffff     call sym.imp.dcgettext
0x0000794f      4c89e2         mov rdx, r12
0x00007952      4889c6         mov rsi, rax
0x00007955      bf01000000     mov edi, 1
0x0000795a      31c0           xor eax, eax
0x0000795c      e87fb5ffff     call sym.imp.__printf_chk
0x00007961      0f1f80000000.  nop dword [rax]
0x00007968      488b85b8fcff.  mov rax, qword [rbp - 0x348]
0x0000796f      4885c0         test rax, rax
0x00007972      410f95c4       setne r12b
0x00007976      4422631c       and r12b, byte [rbx + 0x1c]
0x0000797a      0f85db070000   jne 0x815b
0x00007980      f30f6f03       movdqu xmm0, xmmword [rbx]
0x00007984      be02000000     mov esi, 2
0x00007989      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x00007990      0f298510fdff.  movaps xmmword [rbp - 0x2f0], xmm0
0x00007997      f30f6f4310     movdqu xmm0, xmmword [rbx + 0x10]
0x0000799c      0f298520fdff.  movaps xmmword [rbp - sym..dynsym], xmm0
0x000079a3      f30f6f4320     movdqu xmm0, xmmword [rbx + 0x20]
0x000079a8      0f298530fdff.  movaps xmmword [rbp - 0x2d0], xmm0
0x000079af      f30f6f4330     movdqu xmm0, xmmword [rbx + 0x30]
0x000079b4      0f298540fdff.  movaps xmmword [rbp - 0x2c0], xmm0
0x000079bb      f30f6f4340     movdqu xmm0, xmmword [rbx + 0x40]
0x000079c0      0f298550fdff.  movaps xmmword [rbp - 0x2b0], xmm0
0x000079c7      e8e4850000     call sym.savedir
0x000079cc      4885c0         test rax, rax
0x000079cf      48898598fcff.  mov qword [rbp - 0x368], rax
0x000079d6      0f845c0e0000   je 0x8838
0x000079dc      837b0403       cmp dword [rbx + 4], 3
0x000079e0      750a           jne 0x79ec
0x000079e2      c78514fdffff.  mov dword [rbp - 0x2ec], 2
0x000079ec      488b8598fcff.  mov rax, qword [rbp - 0x368]
0x000079f3      803800         cmp byte [rax], 0
0x000079f6      0f8439150000   je 0x8f35
0x000079fc      488d8510fdff.  lea rax, [rbp - 0x2f0]
0x00007a03      4c8d9580fdff.  lea r10, [rbp - 0x280]
0x00007a0a      4489ad80fcff.  mov dword [rbp - 0x380], r13d
0x00007a11      4c8bbd98fcff.  mov r15, qword [rbp - 0x368]
0x00007a18      4c8badc0fcff.  mov r13, qword [rbp - 0x340]            ; /src:-117
0x00007a1f      41bc01000000   mov r12d, 1
0x00007a25      488985b8fcff.  mov qword [rbp - 0x348], rax
0x00007a2c      488d8507fdff.  lea rax, [rbp - 0x2f9]
0x00007a33      c685ebfcffff.  mov byte [rbp - 0x315], 0
0x00007a3a      4488b590fcff.  mov byte [rbp - 0x370], r14b
0x00007a41      48899d88fcff.  mov qword [rbp - 0x378], rbx
0x00007a48      488985b0fcff.  mov qword [rbp - 0x350], rax
0x00007a4f      488d8508fdff.  lea rax, [rbp - 0x2f8]
0x00007a56      4c8995c0fcff.  mov qword [rbp - 0x340], r10
0x00007a5d      488985a8fcff.  mov qword [rbp - 0x358], rax
0x00007a64      eb2e           jmp 0x7a94
0x00007a66      662e0f1f8400.  nop word cs:[rax + rax]
0x00007a70      0fb68508fdff.  movzx eax, byte [rbp - 0x2f8]
0x00007a77      4c89ff         mov rdi, r15
0x00007a7a      0885ebfcffff   or byte [rbp - 0x315], al
0x00007a80      e86bb0ffff     call sym.imp.strlen
0x00007a85      4d8d7c0701     lea r15, [r15 + rax + 1]
0x00007a8a      41803f00       cmp byte [r15], 0
0x00007a8e      0f849d000000   je 0x7b31
0x00007a94      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x00007a9b      31d2           xor edx, edx
0x00007a9d      4c89fe         mov rsi, r15
0x00007aa0      e8eb3c0000     call sym.file_name_concat
0x00007aa5      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00007aac      31d2           xor edx, edx
0x00007aae      4c89fe         mov rsi, r15
0x00007ab1      4889c3         mov rbx, rax
0x00007ab4      e8d73c0000     call sym.file_name_concat
0x00007ab9      4989c6         mov r14, rax
0x00007abc      488b85c8fcff.  mov rax, qword [rbp - 0x338]
0x00007ac3      4c8b8db8fcff.  mov r9, qword [rbp - 0x348]
0x00007aca      4c8b85d8fcff.  mov r8, qword [rbp - 0x328]
0x00007ad1      488b8dc0fcff.  mov rcx, qword [rbp - 0x340]
0x00007ad8      4c89f6         mov rsi, r14
0x00007adb      8b95e0fcffff   mov edx, dword [rbp - 0x320]
0x00007ae1      4889df         mov rdi, rbx
0x00007ae4      0fb600         movzx eax, byte [rax]
0x00007ae7      6a00           push 0
0x00007ae9      ffb5b0fcffff   push qword [rbp - 0x350]
0x00007aef      ffb5a8fcffff   push qword [rbp - 0x358]
0x00007af5      6a00           push 0
0x00007af7      888508fdffff   mov byte [rbp - 0x2f8], al
0x00007afd      e81ee1ffff     call sym.copy_internal                  ; /src:1271
0x00007b02      4121c4         and r12d, eax
0x00007b05      0fb68507fdff.  movzx eax, byte [rbp - 0x2f9]
0x00007b0c      4883c420       add rsp, 0x20
0x00007b10      41084500       or byte [r13], al
0x00007b14      4c89f7         mov rdi, r14
0x00007b17      e8b4b5ffff     call sym..plt.got
0x00007b1c      4889df         mov rdi, rbx
0x00007b1f      e8acb5ffff     call sym..plt.got
0x00007b24      80bd07fdffff.  cmp byte [rbp - 0x2f9], 0
0x00007b2b      0f843fffffff   je 0x7a70
0x00007b31      440fb6b590fc.  movzx r14d, byte [rbp - 0x370]
0x00007b39      488b9d88fcff.  mov rbx, qword [rbp - 0x378]
0x00007b40      448bad80fcff.  mov r13d, dword [rbp - 0x380]
0x00007b47      488bbd98fcff.  mov rdi, qword [rbp - 0x368]
0x00007b4e      e87db5ffff     call sym..plt.got
0x00007b53      0fb68debfcff.  movzx ecx, byte [rbp - 0x315]
0x00007b5a      488b85c8fcff.  mov rax, qword [rbp - 0x338]
0x00007b61      8808           mov byte [rax], cl
0x00007b63      4584ed         test r13b, r13b
0x00007b66      0f85d6050000   jne 0x8142
0x00007b6c      0fb685d0fcff.  movzx eax, byte [rbp - 0x330]
0x00007b73      c685e0fcffff.  mov byte [rbp - 0x320], 0
0x00007b7a      8885ebfcffff   mov byte [rbp - 0x315], al
0x00007b80      e9b5e6ffff     jmp 0x623a
0x00007b85      0f1f00         nop dword [rax]
0x00007b88      807b1800       cmp byte [rbx + 0x18], 0
0x00007b8c      0f8409040000   je 0x7f9b
0x00007b92      448b3b         mov r15d, dword [rbx]
0x00007b95      4585ff         test r15d, r15d
0x00007b98      0f84fd030000   je 0x7f9b
0x00007b9e      4584ed         test r13b, r13b
0x00007ba1      0f8553edffff   jne 0x68fa
0x00007ba7      8b9598fdffff   mov edx, dword [rbp - 0x268]
0x00007bad      81e200f00000   and edx, 0xf000
0x00007bb3      81fa00400000   cmp edx, 0x4000                         ; "([]A\A]\xc3\x0f\x1f\x84"
0x00007bb9      0f84b7050000   je 0x8176
0x00007bbf      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x00007bc6      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x00007bcd      448885b0fcff.  mov byte [rbp - 0x350], r8b
0x00007bd4      e8c7370000     call sym.last_component
0x00007bd9      80382e         cmp byte [rax], 0x2e
0x00007bdc      4989c6         mov r14, rax
0x00007bdf      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x00007be7      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x00007bef      0f8588edffff   jne 0x697d
0x00007bf5      b801000000     mov eax, 1                              ; /src:173
0x00007bfa      e943edffff     jmp 0x6942
0x00007bff      90             nop
0x00007c00      488bb5a8fcff.  mov rsi, qword [rbp - 0x358]
0x00007c07      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00007c0e      e8cd7f0000     call sym.same_name
0x00007c13      84c0           test al, al
0x00007c15      0f85cf060000   jne 0x82ea
0x00007c1b      8b4304         mov eax, dword [rbx + 4]
0x00007c1e      83f804         cmp eax, 4
0x00007c21      0f8479f5ffff   je 0x71a0
0x00007c27      83f803         cmp eax, 3                              ; /src:184
0x00007c2a      7509           jne 0x7c35
0x00007c2c      4584ed         test r13b, r13b
0x00007c2f      0f856bf5ffff   jne 0x71a0                              ; /src:193
0x00007c35      488b95a8fcff.  mov rdx, qword [rbp - 0x358]
0x00007c3c      be04000000     mov esi, 4
0x00007c41      bf01000000     mov edi, 1
0x00007c46      e885760000     call sym.quotearg_n_style
0x00007c4b      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x00007c52      31ff           xor edi, edi
0x00007c54      be04000000     mov esi, 4
0x00007c59      4989c5         mov r13, rax
0x00007c5c      e86f760000     call sym.quotearg_n_style
0x00007c61      488d35d8fd00.  lea rsi, str.will_not_create_hard_link__s_to_directory__s ; 0x17a40 ; "will not create hard link %s to directory %s"
0x00007c68      4989c4         mov r12, rax
0x00007c6b      31ff           xor edi, edi                            ; /src:195
0x00007c6d      ba05000000     mov edx, 5
0x00007c72      e859aeffff     call sym.imp.dcgettext
0x00007c77      4d89e8         mov r8, r13
0x00007c7a      4889c2         mov rdx, rax
0x00007c7d      4c89e1         mov rcx, r12
0x00007c80      31f6           xor esi, esi
0x00007c82      31ff           xor edi, edi
0x00007c84      31c0           xor eax, eax
0x00007c86      e8a5b2ffff     call sym.imp.error
0x00007c8b      e996f0ffff     jmp 0x6d26                              ; /src:198
0x00007c90      807b1700       cmp byte [rbx + 0x17], 0
0x00007c94      0f849ef0ffff   je 0x6d38
0x00007c9a      48c785a8fcff.  mov qword [rbp - 0x358], 0
0x00007ca5      e9c9f0ffff     jmp 0x6d73
0x00007caa      660f1f440000   nop word [rax + rax]
0x00007cb0      8b8598fdffff   mov eax, dword [rbp - 0x268]
0x00007cb6      31f6           xor esi, esi
0x00007cb8      837b0402       cmp dword [rbx + 4], 2
0x00007cbc      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x00007cc3      8985c0fcffff   mov dword [rbp - 0x340], eax
0x00007cc9      0fb64323       movzx eax, byte [rbx + 0x23]
0x00007ccd      400f94c6       sete sil
0x00007cd1      c1e611         shl esi, 0x11
0x00007cd4      8885c8fcffff   mov byte [rbp - 0x338], al
0x00007cda      31c0           xor eax, eax
0x00007cdc      e8af370000     call sym.open_safer
0x00007ce1      85c0           test eax, eax
0x00007ce3      8985e0fcffff   mov dword [rbp - 0x320], eax
0x00007ce9      0f88fc060000   js 0x83eb
0x00007cef      8bb5e0fcffff   mov esi, dword [rbp - 0x320]
0x00007cf5      488d95a0feff.  lea rdx, [rbp - 0x160]
0x00007cfc      bf01000000     mov edi, 1
0x00007d01      e81ab1ffff     call sym.imp.__fxstat
0x00007d06      85c0           test eax, eax
0x00007d08      0f8519090000   jne 0x8627
0x00007d0e      488b85a8feff.  mov rax, qword [rbp - 0x158]
0x00007d15      48398588fdff.  cmp qword [rbp - 0x278], rax
0x00007d1c      7514           jne 0x7d32
0x00007d1e      488b85a0feff.  mov rax, qword [rbp - 0x160]
0x00007d25      48398580fdff.  cmp qword [rbp - 0x280], rax
0x00007d2c      0f84240d0000   je 0x8a56
0x00007d32      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x00007d39      bf04000000     mov edi, 4
0x00007d3e      e8ad760000     call sym.quotearg_style
0x00007d43      488d35befd00.  lea rsi, str.skipping_file__s__as_it_was_replaced_while_being_copied ; 0x17b08 ; "skipping file %s, as it was replaced while being copied"
0x00007d4a      4989c4         mov r12, rax
0x00007d4d      ba05000000     mov edx, 5
0x00007d52      31ff           xor edi, edi
0x00007d54      e877adffff     call sym.imp.dcgettext
0x00007d59      4c89e1         mov rcx, r12
0x00007d5c      4889c2         mov rdx, rax
0x00007d5f      31f6           xor esi, esi
0x00007d61      31ff           xor edi, edi
0x00007d63      31c0           xor eax, eax
0x00007d65      e8c6b1ffff     call sym.imp.error                      ; /src:1766
0x00007d6a      4531c0         xor r8d, r8d
0x00007d6d      48c785d0fcff.  mov qword [rbp - 0x330], 0              ; /src:1770
0x00007d78      8bbde0fcffff   mov edi, dword [rbp - 0x320]
0x00007d7e      448885d8fcff.  mov byte [rbp - 0x328], r8b
0x00007d85      e8a6aeffff     call sym.imp.close
0x00007d8a      85c0           test eax, eax
0x00007d8c      440fb685d8fc.  movzx r8d, byte [rbp - 0x328]
0x00007d94      0f884d0a0000   js 0x87e7                               ; /src:602
0x00007d9a      488bbdd0fcff.  mov rdi, qword [rbp - 0x330]            ; /src:625
0x00007da1      448885d8fcff.  mov byte [rbp - 0x328], r8b             ; /src:602
0x00007da8      e823b3ffff     call sym..plt.got
0x00007dad      440fb685d8fc.  movzx r8d, byte [rbp - 0x328]
0x00007db5      c685e0fcffff.  mov byte [rbp - 0x320], 0
0x00007dbc      4584c0         test r8b, r8b
0x00007dbf      0f85dae3ffff   jne 0x619f
0x00007dc5      e9e6edffff     jmp 0x6bb0
0x00007dca      660f1f440000   nop word [rax + rax]
0x00007dd0      8b8598fdffff   mov eax, dword [rbp - 0x268]
0x00007dd6      2500f00000     and eax, 0xf000
0x00007ddb      3d00400000     cmp eax, 0x4000                         ; "([]A\A]\xc3\x0f\x1f\x84"
0x00007de0      0f848a030000   je 0x8170
0x00007de6      4585ff         test r15d, r15d
0x00007de9      0f8458f6ffff   je 0x7447
0x00007def      e9cbfdffff     jmp 0x7bbf
0x00007df4      0f1f4000       nop dword [rax]                         ; /src:615
0x00007df8      488d95a0feff.  lea rdx, [rbp - 0x160]
0x00007dff      4c89c6         mov rsi, r8
0x00007e02      bf01000000     mov edi, 1                              ; /src:617
0x00007e07      e8c4afffff     call sym.imp.__xstat                    ; /src:618
0x00007e0c      85c0           test eax, eax
0x00007e0e      0f8508edffff   jne 0x6b1c
0x00007e14      488d9530ffff.  lea rdx, [rbp - 0xd0]                   ; /src:1920
0x00007e1b      4c89e6         mov rsi, r12
0x00007e1e      bf01000000     mov edi, 1
0x00007e23      e8a8afffff     call sym.imp.__xstat
0x00007e28      85c0           test eax, eax                           ; /src:1922
0x00007e2a      0f85ececffff   jne 0x6b1c
0x00007e30      488b8538ffff.  mov rax, qword [rbp - 0xc8]
0x00007e37      483985a8feff.  cmp qword [rbp - 0x158], rax
0x00007e3e      0f8403110000   je 0x8f47
0x00007e44      4c89e7         mov rdi, r12
0x00007e47      e884b2ffff     call sym..plt.got
0x00007e4c      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x00007e53      be03000000     mov esi, 3
0x00007e58      31ff           xor edi, edi
0x00007e5a      e891760000     call sym.quotearg_n_style_colon
0x00007e5f      ba05000000     mov edx, 5
0x00007e64      4989c4         mov r12, rax
0x00007e67      488d3542fd00.  lea rsi, str.s:_can_make_relative_symbolic_links_only_in_current_directory ; 0x17bb0 ; "%s: can make relative symbolic links only in current directory"
0x00007e6e      e955e9ffff     jmp 0x67c8
0x00007e73      8b8528feffff   mov eax, dword [rbp - 0x1d8]
0x00007e79      488d9580fdff.  lea rdx, [rbp - 0x280]
0x00007e80      2500f00000     and eax, 0xf000
0x00007e85      3d00a00000     cmp eax, 0xa000
0x00007e8a      0f8542f3ffff   jne 0x71d2
0x00007e90      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00007e97      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x00007e9e      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x00007ea5      448885b0fcff.  mov byte [rbp - 0x350], r8b
0x00007eac      e82f7d0000     call sym.same_name
0x00007eb1      84c0           test al, al
0x00007eb3      0f8567f3ffff   jne 0x7220
0x00007eb9      8b3b           mov edi, dword [rbx]
0x00007ebb      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x00007ec3      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x00007ecb      85ff           test edi, edi
0x00007ecd      0f859bf1ffff   jne 0x706e
0x00007ed3      4585ff         test r15d, r15d
0x00007ed6      0f8492f1ffff   je 0x706e
0x00007edc      440fb66318     movzx r12d, byte [rbx + 0x18]
0x00007ee1      b801000000     mov eax, 1
0x00007ee6      4183f401       xor r12d, 1
0x00007eea      e9adf4ffff     jmp 0x739c
0x00007eef      90             nop
0x00007ef0      4189c7         mov r15d, eax                           ; /src:1211
0x00007ef3      48b800ff0000.  movabs rax, 0xff000000ff00
0x00007efd      48854320       test qword [rbx + 0x20], rax
0x00007f01      0f84bbe2ffff   je 0x61c2
0x00007f07      0fb67325       movzx esi, byte [rbx + 0x25]
0x00007f0b      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00007f12      31d2           xor edx, edx
0x00007f14      4889d9         mov rcx, rbx
0x00007f17      448885d8fcff.  mov byte [rbp - 0x328], r8b
0x00007f1e      e86dd9ffff     call sym.set_file_security_ctx
0x00007f23      84c0           test al, al
0x00007f25      4189c7         mov r15d, eax
0x00007f28      440fb685d8fc.  movzx r8d, byte [rbp - 0x328]
0x00007f30      0f858ce2ffff   jne 0x61c2
0x00007f36      440fb67326     movzx r14d, byte [rbx + 0x26]
0x00007f3b      4584f6         test r14b, r14b
0x00007f3e      0f856cecffff   jne 0x6bb0
0x00007f44      4589e7         mov r15d, r12d
0x00007f47      e976e2ffff     jmp 0x61c2
0x00007f4c      0f1f4000       nop dword [rax]
0x00007f50      488d35c2fe00.  lea rsi, str.copied                     ; 0x17e19 ; "copied "
0x00007f57      ba05000000     mov edx, 5
0x00007f5c      31ff           xor edi, edi
0x00007f5e      e86dabffff     call sym.imp.dcgettext
0x00007f63      bf01000000     mov edi, 1
0x00007f68      4889c6         mov rsi, rax
0x00007f6b      31c0           xor eax, eax
0x00007f6d      e86eafffff     call sym.imp.__printf_chk
0x00007f72      488b95b0fcff.  mov rdx, qword [rbp - 0x350]
0x00007f79      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00007f80      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]            ; /src:1199
0x00007f87      e844d0ffff     call sym.emit_verbose
0x00007f8c      c785e0fcffff.  mov dword [rbp - 0x320], 1
0x00007f96      e935e1ffff     jmp 0x60d0
0x00007f9b      488b95f0fcff.  mov rdx, qword [rbp - 0x310]
0x00007fa2      be04000000     mov esi, 4
0x00007fa7      bf01000000     mov edi, 1                              ; /src:505
0x00007fac      e81f730000     call sym.quotearg_n_style
0x00007fb1      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x00007fb8      be04000000     mov esi, 4
0x00007fbd      31ff           xor edi, edi
0x00007fbf      4989c4         mov r12, rax                            ; /src:511
0x00007fc2      e809730000     call sym.quotearg_n_style
0x00007fc7      ba05000000     mov edx, 5
0x00007fcc      4889c3         mov rbx, rax
0x00007fcf      488d3582f800.  lea rsi, str.cannot_overwrite_non_directory__s_with_directory__s ; 0x17858 ; "cannot overwrite non-directory %s with directory %s"
0x00007fd6      e980f2ffff     jmp 0x725b
0x00007fdb      807b1500       cmp byte [rbx + 0x15], 0
0x00007fdf      7518           jne 0x7ff9
0x00007fe1      807b2200       cmp byte [rbx + 0x22], 0
0x00007fe5      0f84db030000   je 0x83c6
0x00007feb      4883bd20feff.  cmp qword [rbp - 0x1e0], 1
0x00007ff3      0f86cd030000   jbe 0x83c6
0x00007ff9      4c8bb5f8fcff.  mov r14, qword [rbp - 0x308]
0x00008000      44888db0fcff.  mov byte [rbp - 0x350], r9b
0x00008007      4c89f7         mov rdi, r14
0x0000800a      e851a9ffff     call sym.imp.unlink
0x0000800f      85c0           test eax, eax
0x00008011      440fb68db0fc.  movzx r9d, byte [rbp - 0x350]
0x00008019      0f8474030000   je 0x8393
0x0000801f      e82ca9ffff     call sym.imp.__errno_location
0x00008024      833802         cmp dword [rax], 2
0x00008027      4989c7         mov r15, rax
0x0000802a      440fb68db0fc.  movzx r9d, byte [rbp - 0x350]
0x00008032      0f845b030000   je 0x8393
0x00008038      4c89f6         mov rsi, r14
0x0000803b      bf04000000     mov edi, 4
0x00008040      e8ab730000     call sym.quotearg_style
0x00008045      488d359efd00.  lea rsi, str.cannot_remove__s           ; 0x17dea ; "cannot remove %s"
0x0000804c      31ff           xor edi, edi
0x0000804e      ba05000000     mov edx, 5
0x00008053      4889c3         mov rbx, rax
0x00008056      e875aaffff     call sym.imp.dcgettext
0x0000805b      418b37         mov esi, dword [r15]
0x0000805e      4889c2         mov rdx, rax
0x00008061      4889d9         mov rcx, rbx
0x00008064      31ff           xor edi, edi
0x00008066      31c0           xor eax, eax
0x00008068      e8c3aeffff     call sym.imp.error
0x0000806d      e9f4e3ffff     jmp 0x6466
0x00008072      488d8530ffff.  lea rax, [rbp - 0xd0]
0x00008079      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x00008080      bf01000000     mov edi, 1
0x00008085      4889c2         mov rdx, rax
0x00008088      48898598fcff.  mov qword [rbp - 0x368], rax
0x0000808f      e86caaffff     call sym.imp.__lxstat
0x00008094      85c0           test eax, eax
0x00008096      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x0000809e      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x000080a6      0f85c2efffff   jne 0x706e
0x000080ac      31c9           xor ecx, ecx
0x000080ae      488b85a8feff.  mov rax, qword [rbp - 0x158]
0x000080b5      48398538ffff.  cmp qword [rbp - 0xc8], rax
0x000080bc      7511           jne 0x80cf
0x000080be      488b85a0feff.  mov rax, qword [rbp - 0x160]
0x000080c5      48398530ffff.  cmp qword [rbp - 0xd0], rax
0x000080cc      0f94c1         sete cl
0x000080cf      8b8548ffffff   mov eax, dword [rbp - 0xb8]
0x000080d5      488b9598fcff.  mov rdx, qword [rbp - 0x368]
0x000080dc      2500f00000     and eax, 0xf000
0x000080e1      3d00a00000     cmp eax, 0xa000
0x000080e6      0f85e6f0ffff   jne 0x71d2
0x000080ec      8b85b8feffff   mov eax, dword [rbp - 0x148]            ; ../coreutils-8.31/src/selinux.h:-506
0x000080f2      2500f00000     and eax, 0xf000
0x000080f7      3d00a00000     cmp eax, 0xa000
0x000080fc      0f85d0f0ffff   jne 0x71d2
0x00008102      807b1500       cmp byte [rbx + 0x15], 0
0x00008106      0f84c6f0ffff   je 0x71d2
0x0000810c      e95defffff     jmp 0x706e
0x00008111      0f1f80000000.  nop dword [rax]
0x00008118      48b800ff0000.  movabs rax, 0xff000000ff00
0x00008122      48854320       test qword [rbx + 0x20], rax
0x00008126      0f85b4050000   jne 0x86e0
0x0000812c      c685d0fcffff.  mov byte [rbp - 0x330], 0
0x00008133      c785a4fcffff.  mov dword [rbp - 0x35c], 0              ; /src:1710
0x0000813d      e926f8ffff     jmp 0x7968
0x00008142      4488a5ebfcff.  mov byte [rbp - 0x315], r12b
0x00008149      4531ff         xor r15d, r15d
0x0000814c      4531c0         xor r8d, r8d
0x0000814f      c685e0fcffff.  mov byte [rbp - 0x320], 0
0x00008156      e979e0ffff     jmp 0x61d4
0x0000815b      488b8d80fdff.  mov rcx, qword [rbp - 0x280]
0x00008162      483908         cmp qword [rax], rcx
0x00008165      0f85f8f9ffff   jne 0x7b63
0x0000816b      e910f8ffff     jmp 0x7980
0x00008170      8b8528feffff   mov eax, dword [rbp - 0x1d8]
0x00008176      2500f00000     and eax, 0xf000
0x0000817b      3d00400000     cmp eax, 0x4000                         ; "([]A\A]\xc3\x0f\x1f\x84"
0x00008180      0f8460fcffff   je 0x7de6
0x00008186      4585ff         test r15d, r15d
0x00008189      0f8530faffff   jne 0x7bbf
0x0000818f      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x00008196      be03000000     mov esi, 3
0x0000819b      31ff           xor edi, edi
0x0000819d      e84e730000     call sym.quotearg_n_style_colon
0x000081a2      488b95f0fcff.  mov rdx, qword [rbp - 0x310]
0x000081a9      be03000000     mov esi, 3
0x000081ae      31ff           xor edi, edi
0x000081b0      4989c4         mov r12, rax
0x000081b3      e838730000     call sym.quotearg_n_style_colon         ; /src:1420
0x000081b8      ba05000000     mov edx, 5
0x000081bd      4889c3         mov rbx, rax
0x000081c0      488d3531f700.  lea rsi, str.cannot_move_directory_onto_non_directory:__s_____s ; 0x178f8 ; "cannot move directory onto non-directory: %s -> %s"
0x000081c7      e98ff0ffff     jmp 0x725b
0x000081cc      8b95a4fcffff   mov edx, dword [rbp - 0x35c]
0x000081d2      488b85a8fdff.  mov rax, qword [rbp - 0x258]
0x000081d9      488d8d10fdff.  lea rcx, [rbp - 0x2f0]
0x000081e0      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000081e7      31ff           xor edi, edi
0x000081e9      448885d8fcff.  mov byte [rbp - 0x328], r8b
0x000081f0      f7d2           not edx
0x000081f2      2395ecfcffff   and edx, dword [rbp - 0x314]
0x000081f8      48898510fdff.  mov qword [rbp - 0x2f0], rax
0x000081ff      e89cabffff     call sym.imp.__xmknod
0x00008204      85c0           test eax, eax
0x00008206      c685e0fcffff.  mov byte [rbp - 0x320], 0
0x0000820d      440fb685d8fc.  movzx r8d, byte [rbp - 0x328]
0x00008215      0f8484dfffff   je 0x619f
0x0000821b      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00008222      bf04000000     mov edi, 4
0x00008227      e8c4710000     call sym.quotearg_style
0x0000822c      ba05000000     mov edx, 5
0x00008231      4989c5         mov r13, rax
0x00008234      488d3512fd00.  lea rsi, str.cannot_create_special_file__s ; 0x17f4d ; "cannot create special file %s"
0x0000823b      e9bfeeffff     jmp 0x70ff
0x00008240      e8fb940000     call sym.utimens
0x00008245      85c0           test eax, eax
0x00008247      0f84b8e0ffff   je 0x6305
0x0000824d      e958e0ffff     jmp 0x62aa
0x00008252      488b7b40       mov rdi, qword [rbx + 0x40]
0x00008256      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x0000825d      4c89e2         mov rdx, r12
0x00008260      e89b320000     call sym.record_file
0x00008265      440fb685d8fc.  movzx r8d, byte [rbp - 0x328]
0x0000826d      e99bdfffff     jmp 0x620d
0x00008272      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00008279      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x00008280      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x00008287      448885b0fcff.  mov byte [rbp - 0x350], r8b
0x0000828e      e84d790000     call sym.same_name
0x00008293      83f001         xor eax, 1
0x00008296      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x0000829e      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x000082a6      4189c4         mov r12d, eax
0x000082a9      31c0           xor eax, eax                            ; /src:1082
0x000082ab      e9ecf0ffff     jmp 0x739c
0x000082b0      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x000082b8      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x000082c0      e9ebe5ffff     jmp 0x68b0
0x000082c5      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000082cc      bf04000000     mov edi, 4
0x000082d1      e81a710000     call sym.quotearg_style
0x000082d6      ba05000000     mov edx, 5
0x000082db      4989c5         mov r13, rax
0x000082de      488d3510e100.  lea rsi, str.cannot_stat__s             ; 0x163f5 ; "cannot stat %s"
0x000082e5      e915eeffff     jmp 0x70ff
0x000082ea      488b359f7221.  mov rsi, qword [obj.top_level_src_name] ; [0x21f590:8]=0
0x000082f1      bf04000000     mov edi, 4
0x000082f6      e8f5700000     call sym.quotearg_style
0x000082fb      488d3506f700.  lea rsi, str.warning:_source_directory__s_specified_more_than_once ; 0x17a08 ; "warning: source directory %s specified more than once"
0x00008302      31ff           xor edi, edi
0x00008304      4989c4         mov r12, rax
0x00008307      ba05000000     mov edx, 5
0x0000830c      e8bfa7ffff     call sym.imp.dcgettext
0x00008311      31f6           xor esi, esi
0x00008313      4889c2         mov rdx, rax
0x00008316      31ff           xor edi, edi
0x00008318      31c0           xor eax, eax
0x0000831a      4c89e1         mov rcx, r12
0x0000831d      e80eacffff     call sym.imp.error
0x00008322      807b1800       cmp byte [rbx + 0x18], 0
0x00008326      0f8578ebffff   jne 0x6ea4
0x0000832c      e92fe1ffff     jmp 0x6460                              ; /src:707
0x00008331      44888db0fcff.  mov byte [rbp - 0x350], r9b
0x00008338      e813a6ffff     call sym.imp.__errno_location
0x0000833d      833802         cmp dword [rax], 2
0x00008340      4989c4         mov r12, rax
0x00008343      440fb68db0fc.  movzx r9d, byte [rbp - 0x350]
0x0000834b      0f8460040000   je 0x87b1
0x00008351      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00008358      bf04000000     mov edi, 4
0x0000835d      e88e700000     call sym.quotearg_style
0x00008362      488d3570fa00.  lea rsi, str.cannot_backup__s           ; 0x17dd9 ; "cannot backup %s"
0x00008369      ba05000000     mov edx, 5
0x0000836e      31ff           xor edi, edi
0x00008370      4889c3         mov rbx, rax
0x00008373      e858a7ffff     call sym.imp.dcgettext
0x00008378      418b3424       mov esi, dword [r12]                    ; /src:710
0x0000837c      4889c2         mov rdx, rax
0x0000837f      4889d9         mov rcx, rbx
0x00008382      31ff           xor edi, edi
0x00008384      31c0           xor eax, eax
0x00008386      4531e4         xor r12d, r12d
0x00008389      e8a2abffff     call sym.imp.error
0x0000838e      e9d3e0ffff     jmp 0x6466
0x00008393      440fb6732e     movzx r14d, byte [rbx + 0x2e]
0x00008398      4584f6         test r14b, r14b
0x0000839b      0f85cb050000   jne 0x896c
0x000083a1      4584ed         test r13b, r13b
0x000083a4      0f859e050000   jne 0x8948
0x000083aa      48c785b0fcff.  mov qword [rbp - 0x350], 0
0x000083b5      41be01000000   mov r14d, 1                             ; ../coreutils-8.31/src/system.h:-1025
0x000083bb      41bf11000000   mov r15d, 0x11
0x000083c1      e9c3dcffff     jmp 0x6089
0x000083c6      837b0402       cmp dword [rbx + 4], 2
0x000083ca      0f8577f0ffff   jne 0x7447
0x000083d0      8b8598fdffff   mov eax, dword [rbp - 0x268]
0x000083d6      2500f00000     and eax, 0xf000
0x000083db      3d00800000     cmp eax, 0x8000
0x000083e0      0f8513fcffff   jne 0x7ff9
0x000083e6      e95cf0ffff     jmp 0x7447
0x000083eb      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x000083f2      bf04000000     mov edi, 4
0x000083f7      e8f46f0000     call sym.quotearg_style
0x000083fc      ba05000000     mov edx, 5
0x00008401      4989c5         mov r13, rax
0x00008404      488d355afa00.  lea rsi, str.cannot_open__s_for_reading ; 0x17e65 ; "cannot open %s for reading"
0x0000840b      e9efecffff     jmp 0x70ff
0x00008410      448b85ecfcff.  mov r8d, dword [rbp - 0x314]
0x00008417      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x0000841e      b9ffffffff     mov ecx, 0xffffffff                     ; -1
0x00008423      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x0000842a      89ce           mov esi, ecx
0x0000842c      e80f230000     call sym.copy_acl
0x00008431      85c0           test eax, eax
0x00008433      0f85d1dfffff   jne 0x640a
0x00008439      e928e0ffff     jmp 0x6466
0x0000843e      4c89e2         mov rdx, r12
0x00008441      4c89f7         mov rdi, r14
0x00008444      44888db0fcff.  mov byte [rbp - 0x350], r9b
0x0000844b      4c8985a8fcff.  mov qword [rbp - 0x358], r8
0x00008452      e839a8ffff     call sym.imp.memcmp
0x00008457      85c0           test eax, eax
0x00008459      440fb68db0fc.  movzx r9d, byte [rbp - 0x350]
0x00008461      0f8582e5ffff   jne 0x69e9
0x00008467      4b8d3c26       lea rdi, [r14 + r12]
0x0000846b      4c89fe         mov rsi, r15
0x0000846e      e87da8ffff     call sym.imp.strcmp
0x00008473      85c0           test eax, eax
0x00008475      440fb68db0fc.  movzx r9d, byte [rbp - 0x350]
0x0000847d      4c8b85a8fcff.  mov r8, qword [rbp - 0x358]
0x00008484      0f855fe5ffff   jne 0x69e9
0x0000848a      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00008491      4883c9ff       or rcx, 0xffffffffffffffff
0x00008495      f2ae           repne scasb al, byte [rdi]
0x00008497      4889c8         mov rax, rcx
0x0000849a      48f7d0         not rax
0x0000849d      4c8d70ff       lea r14, [rax - 1]
0x000084a1      4b8d7c0601     lea rdi, [r14 + r8 + 1]
0x000084a6      e8659b0000     call sym.xmalloc
0x000084ab      4c8b3dee7021.  mov r15, qword [obj.simple_backup_suffix] ; [0x21f5a0:8]=0
0x000084b2      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000084b9      4c89f2         mov rdx, r14
0x000084bc      4889c7         mov rdi, rax
0x000084bf      4989c4         mov r12, rax
0x000084c2      e859aaffff     call sym.imp.mempcpy
0x000084c7      4c89fe         mov rsi, r15
0x000084ca      4889c7         mov rdi, rax
0x000084cd      e8bea4ffff     call sym.imp.strcpy
0x000084d2      488d9530ffff.  lea rdx, [rbp - 0xd0]
0x000084d9      4c89e6         mov rsi, r12
0x000084dc      bf01000000     mov edi, 1
0x000084e1      e8eaa8ffff     call sym.imp.__xstat
0x000084e6      4c89e7         mov rdi, r12
0x000084e9      4189c7         mov r15d, eax
0x000084ec      e8dfabffff     call sym..plt.got
0x000084f1      4585ff         test r15d, r15d
0x000084f4      440fb68db0fc.  movzx r9d, byte [rbp - 0x350]
0x000084fc      0f85e7e4ffff   jne 0x69e9
0x00008502      488b8538ffff.  mov rax, qword [rbp - 0xc8]
0x00008509      48398588fdff.  cmp qword [rbp - 0x278], rax
0x00008510      0f85d3e4ffff   jne 0x69e9
0x00008516      488b8530ffff.  mov rax, qword [rbp - 0xd0]
0x0000851d      48398580fdff.  cmp qword [rbp - 0x280], rax
0x00008524      0f85bfe4ffff   jne 0x69e9
0x0000852a      807b1800       cmp byte [rbx + 0x18], 0
0x0000852e      0f8462020000   je 0x8796
0x00008534      488d35f5f300.  lea rsi, str.backing_up__s_might_destroy_source____s_not_moved ; 0x17930 ; "backing up %s might destroy source;  %s not moved"
0x0000853b      ba05000000     mov edx, 5
0x00008540      31ff           xor edi, edi
0x00008542      e889a5ffff     call sym.imp.dcgettext
0x00008547      4889c3         mov rbx, rax
0x0000854a      488b95f0fcff.  mov rdx, qword [rbp - 0x310]
0x00008551      be04000000     mov esi, 4
0x00008556      bf01000000     mov edi, 1
0x0000855b      e8706d0000     call sym.quotearg_n_style
0x00008560      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x00008567      4989c4         mov r12, rax
0x0000856a      be04000000     mov esi, 4
0x0000856f      31ff           xor edi, edi
0x00008571      e85a6d0000     call sym.quotearg_n_style
0x00008576      4d89e0         mov r8, r12
0x00008579      4889c1         mov rcx, rax
0x0000857c      4889da         mov rdx, rbx
0x0000857f      31f6           xor esi, esi
0x00008581      31ff           xor edi, edi
0x00008583      31c0           xor eax, eax
0x00008585      e8a6a9ffff     call sym.imp.error
0x0000858a      4531e4         xor r12d, r12d
0x0000858d      e9d4deffff     jmp 0x6466
0x00008592      448ba5a4fcff.  mov r12d, dword [rbp - 0x35c]
0x00008599      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000085a0      488d8d08fdff.  lea rcx, [rbp - 0x2f8]                  ; /src:469
0x000085a7      31ff           xor edi, edi
0x000085a9      448885e0fcff.  mov byte [rbp - 0x320], r8b
0x000085b0      48c78508fdff.  mov qword [rbp - 0x2f8], 0
0x000085bb      41f7d4         not r12d
0x000085be      4423a5ecfcff.  and r12d, dword [rbp - 0x314]
0x000085c5      4489e2         mov edx, r12d
0x000085c8      e8d3a7ffff     call sym.imp.__xmknod
0x000085cd      85c0           test eax, eax
0x000085cf      440fb685e0fc.  movzx r8d, byte [rbp - 0x320]
0x000085d7      0f84c2dbffff   je 0x619f
0x000085dd      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x000085e4      4489e6         mov esi, r12d
0x000085e7      81e6ffefffff   and esi, 0xffffefff
0x000085ed      e86ea7ffff     call sym.imp.mkfifo
0x000085f2      85c0           test eax, eax
0x000085f4      440fb685e0fc.  movzx r8d, byte [rbp - 0x320]
0x000085fc      0f849ddbffff   je 0x619f
0x00008602      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00008609      bf04000000     mov edi, 4
0x0000860e      e8dd6d0000     call sym.quotearg_style
0x00008613      ba05000000     mov edx, 5
0x00008618      4989c5         mov r13, rax
0x0000861b      488d3515f900.  lea rsi, str.cannot_create_fifo__s      ; 0x17f37 ; "cannot create fifo %s"
0x00008622      e9d8eaffff     jmp 0x70ff
0x00008627      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x0000862e      bf04000000     mov edi, 4
0x00008633      e8b86d0000     call sym.quotearg_style
0x00008638      488d3541f800.  lea rsi, str.cannot_fstat__s            ; 0x17e80 ; "cannot fstat %s"
0x0000863f      ba05000000     mov edx, 5
0x00008644      4989c4         mov r12, rax
0x00008647      31ff           xor edi, edi
0x00008649      e882a4ffff     call sym.imp.dcgettext
0x0000864e      488985d8fcff.  mov qword [rbp - 0x328], rax
0x00008655      e8f6a2ffff     call sym.imp.__errno_location
0x0000865a      4c89e1         mov rcx, r12
0x0000865d      488b95d8fcff.  mov rdx, qword [rbp - 0x328]
0x00008664      8b30           mov esi, dword [rax]
0x00008666      e9f6f6ffff     jmp 0x7d61                              ; /src:1762
0x0000866b      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00008672      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x00008679      44888da4fcff.  mov byte [rbp - 0x35c], r9b
0x00008680      448885a8fcff.  mov byte [rbp - 0x358], r8b
0x00008687      488995b0fcff.  mov qword [rbp - 0x350], rdx
0x0000868e      e84d750000     call sym.same_name
0x00008693      84c0           test al, al
0x00008695      488b95b0fcff.  mov rdx, qword [rbp - 0x350]
0x0000869c      440fb685a8fc.  movzx r8d, byte [rbp - 0x358]
0x000086a4      440fb68da4fc.  movzx r9d, byte [rbp - 0x35c]
0x000086ac      0f8475080000   je 0x8f27
0x000086b2      8b4218         mov eax, dword [rdx + 0x18]
0x000086b5      2500f00000     and eax, 0xf000
0x000086ba      3d00a00000     cmp eax, 0xa000
0x000086bf      0f8427ecffff   je 0x72ec
0x000086c5      418b442418     mov eax, dword [r12 + 0x18]
0x000086ca      2500f00000     and eax, 0xf000
0x000086cf      3d00a00000     cmp eax, 0xa000
0x000086d4      0f8412ecffff   je 0x72ec
0x000086da      e9e5ebffff     jmp 0x72c4
0x000086df      90             nop
0x000086e0      0fb67325       movzx esi, byte [rbx + 0x25]
0x000086e4      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x000086eb      31d2           xor edx, edx
0x000086ed      4889d9         mov rcx, rbx
0x000086f0      e89bd1ffff     call sym.set_file_security_ctx
0x000086f5      84c0           test al, al
0x000086f7      0f852ffaffff   jne 0x812c
0x000086fd      807b2600       cmp byte [rbx + 0x26], 0
0x00008701      0f85a9e4ffff   jne 0x6bb0
0x00008707      e920faffff     jmp 0x812c
0x0000870c      488b9510feff.  mov rdx, qword [rbp - 0x1f0]
0x00008713      488bb518feff.  mov rsi, qword [rbp - 0x1e8]
0x0000871a      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00008721      e89a180000     call sym.remember_copied
0x00008726      488b85c8fcff.  mov rax, qword [rbp - 0x338]            ; /src:-390
0x0000872d      c60001         mov byte [rax], 1
0x00008730      e9e3f1ffff     jmp 0x7918
0x00008735      488b95f0fcff.  mov rdx, qword [rbp - 0x310]
0x0000873c      be04000000     mov esi, 4
0x00008741      bf01000000     mov edi, 1
0x00008746      e8856b0000     call sym.quotearg_n_style
0x0000874b      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x00008752      be04000000     mov esi, 4
0x00008757      31ff           xor edi, edi
0x00008759      4989c4         mov r12, rax
0x0000875c      e86f6b0000     call sym.quotearg_n_style
0x00008761      ba05000000     mov edx, 5                              ; /src:-389
0x00008766      4889c3         mov rbx, rax
0x00008769      488d3520f100.  lea rsi, str.will_not_overwrite_just_created__s_with__s ; 0x17890 ; "will not overwrite just-created %s with %s"
0x00008770      e9e6eaffff     jmp 0x725b
0x00008775      8b5310         mov edx, dword [rbx + 0x10]
0x00008778      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x0000877f      beffffffff     mov esi, 0xffffffff                     ; -1
0x00008784      e847200000     call sym.set_acl                        ; /src:1594
0x00008789      85c0           test eax, eax
0x0000878b      0f859fd7ffff   jne 0x5f30
0x00008791      e9d0dcffff     jmp 0x6466
0x00008796      488d35cbf100.  lea rsi, str.backing_up__s_might_destroy_source____s_not_copied ; 0x17968 ; "backing up %s might destroy source;  %s not copied"
0x0000879d      ba05000000     mov edx, 5
0x000087a2      31ff           xor edi, edi
0x000087a4      e827a3ffff     call sym.imp.dcgettext
0x000087a9      4889c3         mov rbx, rax
0x000087ac      e999fdffff     jmp 0x854a
0x000087b1      48c785b0fcff.  mov qword [rbp - 0x350], 0
0x000087bc      41be01000000   mov r14d, 1
0x000087c2      41bf11000000   mov r15d, 0x11
0x000087c8      e9e1d7ffff     jmp 0x5fae                              ; /src:1621
0x000087cd      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000087d4      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x000087db      31d2           xor edx, edx
0x000087dd      e8eec7ffff     call sym.emit_verbose
0x000087e2      e981f1ffff     jmp 0x7968
0x000087e7      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x000087ee      bf04000000     mov edi, 4
0x000087f3      e8f86b0000     call sym.quotearg_style
0x000087f8      488d3525f700.  lea rsi, str.failed_to_close__s         ; 0x17f24 ; "failed to close %s"
0x000087ff      31ff           xor edi, edi
0x00008801      ba05000000     mov edx, 5
0x00008806      4989c4         mov r12, rax
0x00008809      e8c2a2ffff     call sym.imp.dcgettext
0x0000880e      4989c5         mov r13, rax
0x00008811      e83aa1ffff     call sym.imp.__errno_location           ; /src:1432
0x00008816      8b30           mov esi, dword [rax]
0x00008818      31ff           xor edi, edi
0x0000881a      4c89e1         mov rcx, r12
0x0000881d      4c89ea         mov rdx, r13
0x00008820      31c0           xor eax, eax
0x00008822      e809a7ffff     call sym.imp.error
0x00008827      488bbdd0fcff.  mov rdi, qword [rbp - 0x330]
0x0000882e      e89da8ffff     call sym..plt.got
0x00008833      e978e3ffff     jmp 0x6bb0
0x00008838      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x0000883f      bf04000000     mov edi, 4
0x00008844      e8a76b0000     call sym.quotearg_style
0x00008849      488d3502f600.  lea rsi, str.cannot_access__s           ; /src:1083 ; 0x17e52 ; "cannot access %s"
0x00008850      ba05000000     mov edx, 5
0x00008855      31ff           xor edi, edi
0x00008857      4989c4         mov r12, rax
0x0000885a      e871a2ffff     call sym.imp.dcgettext                  ; /src:1075
0x0000885f      4989c7         mov r15, rax
0x00008862      e8e9a0ffff     call sym.imp.__errno_location
0x00008867      8b30           mov esi, dword [rax]
0x00008869      4c89e1         mov rcx, r12
0x0000886c      4c89fa         mov rdx, r15
0x0000886f      31ff           xor edi, edi
0x00008871      31c0           xor eax, eax
0x00008873      4531e4         xor r12d, r12d
0x00008876      e8b5a6ffff     call sym.imp.error
0x0000887b      e9e3f2ffff     jmp 0x7b63
0x00008880      488bb5b0fdff.  mov rsi, qword [rbp - 0x250]
0x00008887      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x0000888e      e88d1f0000     call sym.areadlink_with_size            ; ../coreutils-8.31/src/py.c:-1011
0x00008893      4885c0         test rax, rax
0x00008896      4989c4         mov r12, rax
0x00008899      0f8444080000   je 0x90e3
0x0000889f      0fb64b16       movzx ecx, byte [rbx + 0x16]
0x000088a3      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x000088aa      41b8ffffffff   mov r8d, 0xffffffff                     ; -1
0x000088b0      be9cffffff     mov esi, 0xffffff9c                     ; 4294967196
0x000088b5      4889c7         mov rdi, rax
0x000088b8      e8231d0000     call sym.force_symlinkat                ; /src:1723
0x000088bd      85c0           test eax, eax
0x000088bf      8985e0fcffff   mov dword [rbp - 0x320], eax
0x000088c5      0f8e3d080000   jle 0x9108
0x000088cb      807b2d01       cmp byte [rbx + 0x2d], 1
0x000088cf      7509           jne 0x88da                              ; /src:1769
0x000088d1      4584f6         test r14b, r14b
0x000088d4      0f84df0b0000   je 0x94b9
0x000088da      4c89e7         mov rdi, r12
0x000088dd      e8eea7ffff     call sym..plt.got
0x000088e2      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000088e9      bf04000000     mov edi, 4
0x000088ee      e8fd6a0000     call sym.quotearg_style
0x000088f3      488d35f6f200.  lea rsi, str.cannot_create_symbolic_link__s ; 0x17bf0 ; "cannot create symbolic link %s"
0x000088fa      31ff           xor edi, edi
0x000088fc      ba05000000     mov edx, 5
0x00008901      4989c4         mov r12, rax
0x00008904      e8c7a1ffff     call sym.imp.dcgettext                  ; /src:1785
0x00008909      8bb5e0fcffff   mov esi, dword [rbp - 0x320]
0x0000890f      4889c2         mov rdx, rax
0x00008912      4c89e1         mov rcx, r12
0x00008915      31ff           xor edi, edi
0x00008917      31c0           xor eax, eax                            ; /src:1760
0x00008919      e812a6ffff     call sym.imp.error
0x0000891e      e98de2ffff     jmp 0x6bb0
0x00008923      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x0000892a      bf04000000     mov edi, 4
0x0000892f      e8bc6a0000     call sym.quotearg_style
0x00008934      ba05000000     mov edx, 5                              ; /src:1762
0x00008939      4989c5         mov r13, rax
0x0000893c      488d35def400.  lea rsi, str.setting_permissions_for__s ; 0x17e21 ; "setting permissions for %s"
0x00008943      e9b7e7ffff     jmp 0x70ff
0x00008948      48837b4000     cmp qword [rbx + 0x40], 0
0x0000894d      4589ee         mov r14d, r13d
0x00008950      48c785b0fcff.  mov qword [rbp - 0x350], 0
0x0000895b      41bf11000000   mov r15d, 0x11                          ; /src:-50
0x00008961      0f855bd6ffff   jne 0x5fc2
0x00008967      e91dd7ffff     jmp 0x6089
0x0000896c      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00008973      bf04000000     mov edi, 4
0x00008978      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x0000897f      41bf11000000   mov r15d, 0x11
0x00008985      e8666a0000     call sym.quotearg_style
0x0000898a      488d357ff300.  lea rsi, str.removed__s                 ; 0x17d10 ; "removed %s\n"
0x00008991      4989c4         mov r12, rax
0x00008994      ba05000000     mov edx, 5
0x00008999      31ff           xor edi, edi
0x0000899b      e830a1ffff     call sym.imp.dcgettext
0x000089a0      4c89e2         mov rdx, r12
0x000089a3      4889c6         mov rsi, rax
0x000089a6      bf01000000     mov edi, 1
0x000089ab      31c0           xor eax, eax
0x000089ad      e82ea5ffff     call sym.imp.__printf_chk
0x000089b2      48c785b0fcff.  mov qword [rbp - 0x350], 0
0x000089bd      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x000089c5      e9e4d5ffff     jmp 0x5fae
0x000089ca      8b8530feffff   mov eax, dword [rbp - 0x1d0]            ; ../coreutils-8.31/src/selinux.h:-778
0x000089d0      3985a0fdffff   cmp dword [rbp - 0x260], eax            ; /src:-48
0x000089d6      0f8546d9ffff   jne 0x6322                              ; /src:-40
0x000089dc      e986d9ffff     jmp 0x6367
0x000089e1      e80ad2ffff     call sym.cached_umask
0x000089e6      f7d0           not eax
0x000089e8      2185a4fcffff   and dword [rbp - 0x35c], eax
0x000089ee      0f84a9d9ffff   je 0x639d
0x000089f4      80bdebfcffff.  cmp byte [rbp - 0x315], 1
0x000089fb      0f84a9d9ffff   je 0x63aa
0x00008a01      4584f6         test r14b, r14b
0x00008a04      0f856d090000   jne 0x9377
0x00008a0a      8b8528feffff   mov eax, dword [rbp - 0x1d8]
0x00008a10      898574fcffff   mov dword [rbp - 0x38c], eax
0x00008a16      f7d0           not eax
0x00008a18      8585a4fcffff   test dword [rbp - 0x35c], eax
0x00008a1e      0f8586d9ffff   jne 0x63aa
0x00008a24      e93ddaffff     jmp 0x6466
0x00008a29      8b85ecfcffff   mov eax, dword [rbp - 0x314]
0x00008a2f      bab6010000     mov edx, 0x1b6
0x00008a34      bbff010000     mov ebx, 0x1ff
0x00008a39      2500700000     and eax, 0x7000                         ; "9\x85\x80\xfd\xff\xff\x0f\x85)\xee\xff\xff\x0f\xb6C\x17\x84\xc0\x0f\x85\x90\x03"
0x00008a3e      3d00400000     cmp eax, 0x4000                         ; "([]A\A]\xc3\x0f\x1f\x84"
0x00008a43      0f45da         cmovne ebx, edx
0x00008a46      e8a5d1ffff     call sym.cached_umask
0x00008a4b      f7d0           not eax
0x00008a4d      89c2           mov edx, eax
0x00008a4f      21da           and edx, ebx
0x00008a51      e922fdffff     jmp 0x8778
0x00008a56      4181e4ff0100.  and r12d, 0x1ff
0x00008a5d      4584f6         test r14b, r14b                         ; /src:-245
0x00008a60      4489a55cfcff.  mov dword [rbp - 0x3a4], r12d
0x00008a67      0f8593050000   jne 0x9000
0x00008a6d      807b2301       cmp byte [rbx + 0x23], 1
0x00008a71      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00008a78      19f6           sbb esi, esi
0x00008a7a      31c0           xor eax, eax
0x00008a7c      81e600feffff   and esi, 0xfffffe00                     ; 4294966784
0x00008a82      81c601020000   add esi, 0x201
0x00008a88      e8032a0000     call sym.open_safer
0x00008a8d      8985d8fcffff   mov dword [rbp - 0x328], eax
0x00008a93      e8b89effff     call sym.imp.__errno_location
0x00008a98      4989c4         mov r12, rax
0x00008a9b      48b800ff0000.  movabs rax, 0xff000000ff00
0x00008aa5      48854320       test qword [rbx + 0x20], rax
0x00008aa9      0f8586080000   jne 0x9335
0x00008aaf      83bdd8fcffff.  cmp dword [rbp - 0x328], 0
0x00008ab6      0f8886080000   js 0x9342
0x00008abc      c78588fcffff.  mov dword [rbp - 0x378], 0
0x00008ac6      488d8530ffff.  lea rax, [rbp - 0xd0]
0x00008acd      8bb5d8fcffff   mov esi, dword [rbp - 0x328]
0x00008ad3      bf01000000     mov edi, 1
0x00008ad8      4889c2         mov rdx, rax
0x00008adb      48898598fcff.  mov qword [rbp - 0x368], rax
0x00008ae2      e839a3ffff     call sym.imp.__fxstat
0x00008ae7      85c0           test eax, eax
0x00008ae9      8985b8fcffff   mov dword [rbp - 0x348], eax
0x00008aef      0f85a10b0000   jne 0x9696
0x00008af5      80bdc8fcffff.  cmp byte [rbp - 0x338], 0
0x00008afc      0f84cd060000   je 0x91cf
0x00008b02      837b3800       cmp dword [rbx + 0x38], 0
0x00008b06      0f85580e0000   jne 0x9964
0x00008b0c      e8ffa4ffff     call sym.imp.getpagesize
0x00008b11      488b8d68ffff.  mov rcx, qword [rbp - 0x98]
0x00008b18      4c63e0         movsxd r12, eax                         ; /src:24
0x00008b1b      48b80000feff.  movabs rax, 0x1ffffffffffe0000
0x00008b25      41b800020000   mov r8d, 0x200
0x00008b2b      8bbde0fcffff   mov edi, dword [rbp - 0x320]
0x00008b31      4c8985d0fcff.  mov qword [rbp - 0x330], r8             ; /src:28
0x00008b38      488d910000fe.  lea rdx, [rcx - 0x20000]
0x00008b3f      4839c2         cmp rdx, rax
0x00008b42      b800000200     mov eax, 0x20000
0x00008b47      488d51ff       lea rdx, [rcx - 1]
0x00008b4b      480f46c1       cmovbe rax, rcx
0x00008b4f      48898590fcff.  mov qword [rbp - 0x370], rax            ; stdio.h:-741
0x00008b56      48b8ffffffff.  movabs rax, 0x1fffffffffffffff          ; 2305843009213693951
0x00008b60      4839c2         cmp rdx, rax
0x00008b63      490f47c8       cmova rcx, r8
0x00008b67      31d2           xor edx, edx
0x00008b69      31f6           xor esi, esi
0x00008b6b      48898d68fcff.  mov qword [rbp - 0x398], rcx
0x00008b72      b902000000     mov ecx, 2
0x00008b77      e8d4280000     call sym.fdadvise
0x00008b7c      448b8db8feff.  mov r9d, dword [rbp - 0x148]
0x00008b83      4c8b85d0fcff.  mov r8, qword [rbp - 0x330]
0x00008b8a      4181e100f000.  and r9d, 0xf000                         ; /src:-849
0x00008b91      4181f9008000.  cmp r9d, 0x8000
0x00008b98      0f84dc0e0000   je 0x9a7a
0x00008b9e      8b8548ffffff   mov eax, dword [rbp - 0xb8]
0x00008ba4      2500f00000     and eax, 0xf000                         ; /src:-980
0x00008ba9      3d00800000     cmp eax, 0x8000
0x00008bae      0f845b0e0000   je 0x9a0f
0x00008bb4      488bbdd8feff.  mov rdi, qword [rbp - 0x128]
0x00008bbb      48b8ffffffff.  movabs rax, 0x7fffffffffffffff          ; 9223372036854775807
0x00008bc5      488bb590fcff.  mov rsi, qword [rbp - 0x370]
0x00008bcc      4c29e0         sub rax, r12
0x00008bcf      44898d80fcff.  mov dword [rbp - 0x380], r9d
0x00008bd6      4989c0         mov r8, rax
0x00008bd9      48b80000feff.  movabs rax, 0x1ffffffffffe0000
0x00008be3      488d970000fe.  lea rdx, [rdi - 0x20000]
0x00008bea      4c8985d0fcff.  mov qword [rbp - 0x330], r8
0x00008bf1      4839c2         cmp rdx, rax
0x00008bf4      b800000200     mov eax, 0x20000
0x00008bf9      4c89c2         mov rdx, r8
0x00008bfc      480f47f8       cmova rdi, rax
0x00008c00      e85b240000     call sym.buffer_lcm
0x00008c05      448b8d80fcff.  mov r9d, dword [rbp - 0x380]
0x00008c0c      4889c1         mov rcx, rax
0x00008c0f      4c8b85d0fcff.  mov r8, qword [rbp - 0x330]
0x00008c16      4181f9008000.  cmp r9d, 0x8000
0x00008c1d      0f84ca0c0000   je 0x98ed
0x00008c23      488b8590fcff.  mov rax, qword [rbp - 0x370]
0x00008c2a      31d2           xor edx, edx
0x00008c2c      488d7401ff     lea rsi, [rcx + rax - 1]
0x00008c31      4889f0         mov rax, rsi
0x00008c34      48f7f1         div rcx
0x00008c37      4829d6         sub rsi, rdx
0x00008c3a      4889b590fcff.  mov qword [rbp - 0x370], rsi
0x00008c41      0f84aa0a0000   je 0x96f1
0x00008c47      4c39c6         cmp rsi, r8
0x00008c4a      0f87a10a0000   ja 0x96f1
0x00008c50      488b8590fcff.  mov rax, qword [rbp - 0x370]            ; /src:-990
0x00008c57      498d3c04       lea rdi, [r12 + rax]                    ; /src:-989
0x00008c5b      e8b0930000     call sym.xmalloc
0x00008c60      4a8d4c20ff     lea rcx, [rax + r12 - 1]
0x00008c65      31d2           xor edx, edx
0x00008c67      488985d0fcff.  mov qword [rbp - 0x330], rax
0x00008c6e      4889c8         mov rax, rcx
0x00008c71      49f7f4         div r12
0x00008c74      4829d1         sub rcx, rdx
0x00008c77      83bdb8fcffff.  cmp dword [rbp - 0x348], 0
0x00008c7e      48898d50fcff.  mov qword [rbp - 0x3b0], rcx
0x00008c85      0f84720a0000   je 0x96fd
0x00008c8b      c6855bfcffff.  mov byte [rbp - 0x3a5], 0
0x00008c92      c78570fcffff.  mov dword [rbp - 0x390], 1
0x00008c9c      488b85d0feff.  mov rax, qword [rbp - 0x130]
0x00008ca3      8bbde0fcffff   mov edi, dword [rbp - 0x320]            ; /src:-1068
0x00008ca9      4531e4         xor r12d, r12d
0x00008cac      48898580fcff.  mov qword [rbp - 0x380], rax
0x00008cb3      488d8510fdff.  lea rax, [rbp - 0x2f0]
0x00008cba      4889c6         mov rsi, rax
0x00008cbd      488985b8fcff.  mov qword [rbp - 0x348], rax
0x00008cc4      e8c7130000     call sym.extent_scan_init
0x00008cc9      488d8507fdff.  lea rax, [rbp - 0x2f9]
0x00008cd0      31c9           xor ecx, ecx
0x00008cd2      48899d78fcff.  mov qword [rbp - 0x388], rbx
0x00008cd9      48c78560fcff.  mov qword [rbp - 0x3a0], 0
0x00008ce4      4889cb         mov rbx, rcx
0x00008ce7      4489ada0fcff.  mov dword [rbp - 0x360], r13d
0x00008cee      48898548fcff.  mov qword [rbp - 0x3b8], rax
0x00008cf5      488d8508fdff.  lea rax, [rbp - 0x2f8]
0x00008cfc      48898540fcff.  mov qword [rbp - 0x3c0], rax
0x00008d03      488bbdb8fcff.  mov rdi, qword [rbp - 0x348]
0x00008d0a      e8b1130000     call sym.extent_scan_read
0x00008d0f      84c0           test al, al
0x00008d11      0f84fa0b0000   je 0x9911
0x00008d17      4883bd28fdff.  cmp qword [rbp - 0x2d8], 0
0x00008d1f      0f84c90a0000   je 0x97ee
0x00008d25      4889da         mov rdx, rbx
0x00008d28      4c89e1         mov rcx, r12
0x00008d2b      4531ed         xor r13d, r13d
0x00008d2e      31c0           xor eax, eax
0x00008d30      e9b8000000     jmp 0x8ded
0x00008d35      0f1f00         nop dword [rax]
0x00008d38      83bd70fcffff.  cmp dword [rbp - 0x390], 3
0x00008d3f      41b800000000   mov r8d, 0
0x00008d45      4c0f448568fc.  cmove r8, qword [rbp - 0x398]
0x00008d4d      4883ec08       sub rsp, 8                              ; stat.h:-1450
0x00008d51      488b8d90fcff.  mov rcx, qword [rbp - 0x370]
0x00008d58      488b9550fcff.  mov rdx, qword [rbp - 0x3b0]
0x00008d5f      8bb5d8fcffff   mov esi, dword [rbp - 0x328]
0x00008d65      8bbde0fcffff   mov edi, dword [rbp - 0x320]
0x00008d6b      41b901000000   mov r9d, 1
0x00008d71      ffb548fcffff   push qword [rbp - 0x3b8]
0x00008d77      ffb540fcffff   push qword [rbp - 0x3c0]
0x00008d7d      53             push rbx
0x00008d7e      ffb5f8fcffff   push qword [rbp - 0x308]                ; /src:-115
0x00008d84      ffb5f0fcffff   push qword [rbp - 0x310]
0x00008d8a      e821c6ffff     call sym.sparse_copy
0x00008d8f      4883c430       add rsp, 0x30
0x00008d93      84c0           test al, al
0x00008d95      0f84fd000000   je 0x8e98
0x00008d9b      488b8508fdff.  mov rax, qword [rbp - 0x2f8]
0x00008da2      498d0c04       lea rcx, [r12 + rax]
0x00008da6      4885c0         test rax, rax
0x00008da9      48898d60fcff.  mov qword [rbp - 0x3a0], rcx
0x00008db0      740d           je 0x8dbf
0x00008db2      0fb68507fdff.  movzx eax, byte [rbp - 0x2f9]
0x00008db9      8885c8fcffff   mov byte [rbp - 0x338], al
0x00008dbf      488b8d60fcff.  mov rcx, qword [rbp - 0x3a0]
0x00008dc6      48398d80fcff.  cmp qword [rbp - 0x380], rcx            ; /src:-114
0x00008dcd      0f84140a0000   je 0x97e7
0x00008dd3      418d4501       lea eax, [r13 + 1]
0x00008dd7      483b8528fdff.  cmp rax, qword [rbp - 0x2d8]
0x00008dde      4c89e1         mov rcx, r12
0x00008de1      4889da         mov rdx, rbx
0x00008de4      4989c5         mov r13, rax
0x00008de7      0f83010a0000   jae 0x97ee
0x00008ded      488d3440       lea rsi, [rax + rax*2]
0x00008df1      488b8538fdff.  mov rax, qword [rbp - 0x2c8]
0x00008df8      488d04f0       lea rax, [rax + rsi*8]
0x00008dfc      488bb580fcff.  mov rsi, qword [rbp - 0x380]
0x00008e03      4c8b20         mov r12, qword [rax]
0x00008e06      488b5808       mov rbx, qword [rax + 8]
0x00008e0a      498d041c       lea rax, [r12 + rbx]
0x00008e0e      4839c6         cmp rsi, rax
0x00008e11      7d0d           jge 0x8e20
0x00008e13      4939f4         cmp r12, rsi
0x00008e16      4c0f4fe6       cmovg r12, rsi
0x00008e1a      4c29e6         sub rsi, r12
0x00008e1d      4889f3         mov rbx, rsi
0x00008e20      4c89e0         mov rax, r12
0x00008e23      c685c8fcffff.  mov byte [rbp - 0x338], 0
0x00008e2a      4829c8         sub rax, rcx
0x00008e2d      4889c1         mov rcx, rax
0x00008e30      4829d1         sub rcx, rdx
0x00008e33      0f84fffeffff   je 0x8d38
0x00008e39      8bbde0fcffff   mov edi, dword [rbp - 0x320]
0x00008e3f      31d2           xor edx, edx
0x00008e41      4c89e6         mov rsi, r12
0x00008e44      48898d60fcff.  mov qword [rbp - 0x3a0], rcx
0x00008e4b      e8709dffff     call sym.imp.lseek
0x00008e50      4885c0         test rax, rax
0x00008e53      488b8d60fcff.  mov rcx, qword [rbp - 0x3a0]
0x00008e5a      0f886f0e0000   js 0x9ccf                               ; /src:-412
0x00008e60      8b8570fcffff   mov eax, dword [rbp - 0x390]
0x00008e66      83f803         cmp eax, 3
0x00008e69      0f94c2         sete dl
0x00008e6c      83e801         sub eax, 1
0x00008e6f      0f8453070000   je 0x95c8
0x00008e75      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00008e7c      8bbdd8fcffff   mov edi, dword [rbp - 0x328]
0x00008e82      0fb6d2         movzx edx, dl
0x00008e85      e866c4ffff     call sym.create_hole
0x00008e8a      84c0           test al, al
0x00008e8c      8885c8fcffff   mov byte [rbp - 0x338], al
0x00008e92      0f85a0feffff   jne 0x8d38
0x00008e98      488b9d78fcff.  mov rbx, qword [rbp - 0x388]
0x00008e9f      448bada0fcff.  mov r13d, dword [rbp - 0x360]
0x00008ea6      488bbd38fdff.  mov rdi, qword [rbp - 0x2c8]
0x00008ead      e81ea2ffff     call sym..plt.got
0x00008eb2      4531c0         xor r8d, r8d
0x00008eb5      8bbdd8fcffff   mov edi, dword [rbp - 0x328]
0x00008ebb      448885c8fcff.  mov byte [rbp - 0x338], r8b
0x00008ec2      e8699dffff     call sym.imp.close
0x00008ec7      85c0           test eax, eax
0x00008ec9      440fb685c8fc.  movzx r8d, byte [rbp - 0x338]
0x00008ed1      0f89a1eeffff   jns 0x7d78
0x00008ed7      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00008ede      bf04000000     mov edi, 4
0x00008ee3      e808650000     call sym.quotearg_style
0x00008ee8      488d3535f000.  lea rsi, str.failed_to_close__s         ; 0x17f24 ; "failed to close %s"
0x00008eef      ba05000000     mov edx, 5
0x00008ef4      31ff           xor edi, edi
0x00008ef6      4989c4         mov r12, rax
0x00008ef9      e8d29bffff     call sym.imp.dcgettext
0x00008efe      488985d8fcff.  mov qword [rbp - 0x328], rax
0x00008f05      e8469affff     call sym.imp.__errno_location
0x00008f0a      488b95d8fcff.  mov rdx, qword [rbp - 0x328]
0x00008f11      8b30           mov esi, dword [rax]
0x00008f13      4c89e1         mov rcx, r12                            ; /src:-411
0x00008f16      31ff           xor edi, edi
0x00008f18      31c0           xor eax, eax
0x00008f1a      e811a0ffff     call sym.imp.error
0x00008f1f      4531c0         xor r8d, r8d
0x00008f22      e951eeffff     jmp 0x7d78
0x00008f27      440fb66318     movzx r12d, byte [rbx + 0x18]
0x00008f2c      4183f401       xor r12d, 1
0x00008f30      e967e4ffff     jmp 0x739c
0x00008f35      c685ebfcffff.  mov byte [rbp - 0x315], 0
0x00008f3c      41bc01000000   mov r12d, 1
0x00008f42      e900ecffff     jmp 0x7b47
0x00008f47      488b8530ffff.  mov rax, qword [rbp - 0xd0]
0x00008f4e      483985a0feff.  cmp qword [rbp - 0x160], rax
0x00008f55      0f85e9eeffff   jne 0x7e44
0x00008f5b      e9bcdbffff     jmp 0x6b1c
0x00008f60      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00008f67      e8f499ffff     call sym.imp.unlink
0x00008f6c      85c0           test eax, eax                           ; /src:-578
0x00008f6e      0f85320c0000   jne 0x9ba6
0x00008f74      807b2e00       cmp byte [rbx + 0x2e], 0
0x00008f78      7439           je 0x8fb3
0x00008f7a      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00008f81      bf04000000     mov edi, 4
0x00008f86      e865640000     call sym.quotearg_style
0x00008f8b      488d357eed00.  lea rsi, str.removed__s                 ; 0x17d10 ; "removed %s\n"
0x00008f92      4989c4         mov r12, rax
0x00008f95      ba05000000     mov edx, 5
0x00008f9a      31ff           xor edi, edi
0x00008f9c      e82f9bffff     call sym.imp.dcgettext
0x00008fa1      4c89e2         mov rdx, r12
0x00008fa4      4889c6         mov rsi, rax                            ; /src:1136
0x00008fa7      bf01000000     mov edi, 1
0x00008fac      31c0           xor eax, eax                            ; /src:1144
0x00008fae      e82d9fffff     call sym.imp.__printf_chk
0x00008fb3      440fb67321     movzx r14d, byte [rbx + 0x21]
0x00008fb8      8b85a4fcffff   mov eax, dword [rbp - 0x35c]
0x00008fbe      898588fcffff   mov dword [rbp - 0x378], eax
0x00008fc4      4584f6         test r14b, r14b
0x00008fc7      7443           je 0x900c
0x00008fc9      8b955cfcffff   mov edx, dword [rbp - 0x3a4]
0x00008fcf      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00008fd6      4989d8         mov r8, rbx
0x00008fd9      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x00008fe0      b901000000     mov ecx, 1                              ; /src:1345
0x00008fe5      e8d6c7ffff     call sym.set_process_security_ctx       ; ../coreutils-8.31/src/selinux.h:-1149
0x00008fea      84c0           test al, al
0x00008fec      4189c0         mov r8d, eax
0x00008fef      48c785d0fcff.  mov qword [rbp - 0x330], 0
0x00008ffa      0f8478edffff   je 0x7d78
0x00009000      8b85a4fcffff   mov eax, dword [rbp - 0x35c]
0x00009006      898588fcffff   mov dword [rbp - 0x378], eax
0x0000900c      8b8588fcffff   mov eax, dword [rbp - 0x378]
0x00009012      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00009019      bec1000000     mov esi, 0xc1
0x0000901e      f7d0           not eax
0x00009020      23855cfcffff   and eax, dword [rbp - 0x3a4]
0x00009026      89c2           mov edx, eax
0x00009028      8985d0fcffff   mov dword [rbp - 0x330], eax
0x0000902e      31c0           xor eax, eax
0x00009030      e85b240000     call sym.open_safer
0x00009035      4189c6         mov r14d, eax
0x00009038      8985d8fcffff   mov dword [rbp - 0x328], eax
0x0000903e      e80d99ffff     call sym.imp.__errno_location
0x00009043      448b00         mov r8d, dword [rax]
0x00009046      4989c4         mov r12, rax
0x00009049      4489f0         mov eax, r14d
0x0000904c      c1e81f         shr eax, 0x1f
0x0000904f      4183f811       cmp r8d, 0x11
0x00009053      0f94c2         sete dl
0x00009056      20c2           and dl, al
0x00009058      4189d6         mov r14d, edx
0x0000905b      0f8401040000   je 0x9462
0x00009061      807b1800       cmp byte [rbx + 0x18], 0
0x00009065      41b811000000   mov r8d, 0x11
0x0000906b      0f8484030000   je 0x93f5                               ; /src:-578
0x00009071      41b901000000   mov r9d, 1
0x00009077      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x0000907e      bf04000000     mov edi, 4
0x00009083      44888dd0fcff.  mov byte [rbp - 0x330], r9b
0x0000908a      448985d8fcff.  mov dword [rbp - 0x328], r8d
0x00009091      e85a630000     call sym.quotearg_style
0x00009096      488d35f3ed00.  lea rsi, str.cannot_create_regular_file__s ; 0x17e90 ; "cannot create regular file %s"
0x0000909d      ba05000000     mov edx, 5
0x000090a2      31ff           xor edi, edi                            ; /src:-264
0x000090a4      4989c4         mov r12, rax
0x000090a7      e8249affff     call sym.imp.dcgettext
0x000090ac      448b85d8fcff.  mov r8d, dword [rbp - 0x328]
0x000090b3      4889c2         mov rdx, rax
0x000090b6      4c89e1         mov rcx, r12
0x000090b9      31ff           xor edi, edi
0x000090bb      31c0           xor eax, eax
0x000090bd      4489c6         mov esi, r8d
0x000090c0      e86b9effff     call sym.imp.error
0x000090c5      440fb68dd0fc.  movzx r9d, byte [rbp - 0x330]
0x000090cd      4531c0         xor r8d, r8d
0x000090d0      48c785d0fcff.  mov qword [rbp - 0x330], 0
0x000090db      4589ce         mov r14d, r9d
0x000090de      e995ecffff     jmp 0x7d78
0x000090e3      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x000090ea      bf04000000     mov edi, 4
0x000090ef      e8fc620000     call sym.quotearg_style
0x000090f4      ba05000000     mov edx, 5
0x000090f9      4989c5         mov r13, rax
0x000090fc      488d3568ee00.  lea rsi, str.cannot_read_symbolic_link__s ; 0x17f6b ; "cannot read symbolic link %s"
0x00009103      e9f7dfffff     jmp 0x70ff
0x00009108      4c89e7         mov rdi, r12
0x0000910b      e8c09fffff     call sym..plt.got
0x00009110      440fb64325     movzx r8d, byte [rbx + 0x25]
0x00009115      4584c0         test r8b, r8b
0x00009118      0f8512dcffff   jne 0x6d30
0x0000911e      0fb6431d       movzx eax, byte [rbx + 0x1d]            ; /src:-213
0x00009122      84c0           test al, al
0x00009124      8885e0fcffff   mov byte [rbp - 0x320], al
0x0000912a      0f8573020000   jne 0x93a3
0x00009130      440fb685e0fc.  movzx r8d, byte [rbp - 0x320]
0x00009138      c685e0fcffff.  mov byte [rbp - 0x320], 1               ; /src:-211
0x0000913f      e95bd0ffff     jmp 0x619f                              ; /src:-210
0x00009144      e8e799ffff     call sym.imp.__stack_chk_fail
0x00009149      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00009150      488d95a0feff.  lea rdx, [rbp - 0x160]
0x00009157      bf01000000     mov edi, 1
0x0000915c      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x00009163      448885b0fcff.  mov byte [rbp - 0x350], r8b
0x0000916a      e8619cffff     call sym.imp.__xstat
0x0000916f      85c0           test eax, eax
0x00009171      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x00009179      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x00009181      0f848ae6ffff   je 0x7811
0x00009187      e9b3ccffff     jmp 0x5e3f
0x0000918c      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x00009193      488d9530ffff.  lea rdx, [rbp - 0xd0]
0x0000919a      bf01000000     mov edi, 1
0x0000919f      44888da8fcff.  mov byte [rbp - 0x358], r9b
0x000091a6      448885b0fcff.  mov byte [rbp - 0x350], r8b
0x000091ad      e81e9cffff     call sym.imp.__xstat
0x000091b2      85c0           test eax, eax
0x000091b4      440fb685b0fc.  movzx r8d, byte [rbp - 0x350]
0x000091bc      440fb68da8fc.  movzx r9d, byte [rbp - 0x358]
0x000091c4      0f84b2e5ffff   je 0x777c
0x000091ca      e970ccffff     jmp 0x5e3f
0x000091cf      48c785d0fcff.  mov qword [rbp - 0x330], 0
0x000091da      807b1f00       cmp byte [rbx + 0x1f], 0
0x000091de      0f8502040000   jne 0x95e6                              ; /src:-510
0x000091e4      807b1d00       cmp byte [rbx + 0x1d], 0
0x000091e8      745a           je 0x9244
0x000091ea      8b854cffffff   mov eax, dword [rbp - 0xb4]
0x000091f0      39859cfdffff   cmp dword [rbp - 0x264], eax
0x000091f6      750e           jne 0x9206
0x000091f8      8b8550ffffff   mov eax, dword [rbp - 0xb0]
0x000091fe      3985a0fdffff   cmp dword [rbp - 0x260], eax            ; ../coreutils-8.31/src/py.c:1011
0x00009204      743e           je 0x9244
0x00009206      4c8b8d98fcff.  mov r9, qword [rbp - 0x368]
0x0000920d      8b95d8fcffff   mov edx, dword [rbp - 0x328]
0x00009213      488d8d80fdff.  lea rcx, [rbp - 0x280]
0x0000921a      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00009221      450fb6c6       movzx r8d, r14b
0x00009225      4889df         mov rdi, rbx
0x00009228      e8b3c7ffff     call sym.set_owner
0x0000922d      83f8ff         cmp eax, 0xffffffff
0x00009230      0f847cfcffff   je 0x8eb2
0x00009236      85c0           test eax, eax
0x00009238      750a           jne 0x9244
0x0000923a      81a5c0fcffff.  and dword [rbp - 0x340], 0xfffff1ff     ; [0xfffff1ff:4]=-1 ; 4294963711
0x00009244      807b2700       cmp byte [rbx + 0x27], 0
0x00009248      740d           je 0x9257
0x0000924a      f68548ffffff.  test byte [rbp - 0xb8], 0x80
0x00009251      0f84270a0000   je 0x9c7e
0x00009257      48b8ff000000.  movabs rax, 0xff0000000000ff            ; 71776119061217535
0x00009261      48854318       test qword [rbx + 0x18], rax
0x00009265      0f85d2020000   jne 0x953d
0x0000926b      807b2b00       cmp byte [rbx + 0x2b], 0
0x0000926f      0f858d0a0000   jne 0x9d02
0x00009275      4589f4         mov r12d, r14d                          ; ../coreutils-8.31/src/py.c:1027
0x00009278      44226320       and r12b, byte [rbx + 0x20]
0x0000927c      0f85f5080000   jne 0x9b77
0x00009282      83bd88fcffff.  cmp dword [rbp - 0x378], 0              ; ../coreutils-8.31/src/py.c:-336
0x00009289      41b801000000   mov r8d, 1
0x0000928f      0f8420fcffff   je 0x8eb5
0x00009295      448885c8fcff.  mov byte [rbp - 0x338], r8b
0x0000929c      e84fc9ffff     call sym.cached_umask
0x000092a1      f7d0           not eax
0x000092a3      858588fcffff   test dword [rbp - 0x378], eax
0x000092a9      440fb685c8fc.  movzx r8d, byte [rbp - 0x338]
0x000092b1      0f84fefbffff   je 0x8eb5
0x000092b7      8b955cfcffff   mov edx, dword [rbp - 0x3a4]
0x000092bd      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000092c4      8bbdd8fcffff   mov edi, dword [rbp - 0x328]
0x000092ca      e8119effff     call sym.fchmod_or_lchmod
0x000092cf      85c0           test eax, eax
0x000092d1      440fb685c8fc.  movzx r8d, byte [rbp - 0x338]
0x000092d9      0f84d6fbffff   je 0x8eb5
0x000092df      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000092e6      bf04000000     mov edi, 4
0x000092eb      e800610000     call sym.quotearg_style
0x000092f0      488d350fec00.  lea rsi, str.preserving_permissions_for__s ; 0x17f06 ; "preserving permissions for %s"
0x000092f7      ba05000000     mov edx, 5                              ; ../coreutils-8.31/src/py.c:-687
0x000092fc      31ff           xor edi, edi
0x000092fe      4989c4         mov r12, rax
0x00009301      e8ca97ffff     call sym.imp.dcgettext
0x00009306      488985c8fcff.  mov qword [rbp - 0x338], rax
0x0000930d      e83e96ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/src/py.c:-1220
0x00009312      488b95c8fcff.  mov rdx, qword [rbp - 0x338]
0x00009319      8b30           mov esi, dword [rax]
0x0000931b      4c89e1         mov rcx, r12
0x0000931e      31ff           xor edi, edi
0x00009320      31c0           xor eax, eax
0x00009322      e8099cffff     call sym.imp.error
0x00009327      440fb64324     movzx r8d, byte [rbx + 0x24]
0x0000932c      4183f001       xor r8d, 1
0x00009330      e980fbffff     jmp 0x8eb5
0x00009335      83bdd8fcffff.  cmp dword [rbp - 0x328], 0
0x0000933c      0f894c020000   jns 0x958e
0x00009342      440fb64b16     movzx r9d, byte [rbx + 0x16]
0x00009347      4584c9         test r9b, r9b
0x0000934a      0f8510fcffff   jne 0x8f60
0x00009350      458b0424       mov r8d, dword [r12]
0x00009354      4183f802       cmp r8d, 2
0x00009358      0f8519fdffff   jne 0x9077
0x0000935e      807b1800       cmp byte [rbx + 0x18], 0
0x00009362      0f850ffdffff   jne 0x9077
0x00009368      c78588fcffff.  mov dword [rbp - 0x378], 0
0x00009372      e995fcffff     jmp 0x900c
0x00009377      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]            ; ../coreutils-8.31/src/py.c:-388
0x0000937e      488d9510feff.  lea rdx, [rbp - 0x1f0]
0x00009385      bf01000000     mov edi, 1
0x0000938a      e87197ffff     call sym.imp.__lxstat
0x0000938f      85c0           test eax, eax
0x00009391      0f8473f6ffff   je 0x8a0a
0x00009397      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x0000939e      e962d1ffff     jmp 0x6505
0x000093a3      8b95a0fdffff   mov edx, dword [rbp - 0x260]
0x000093a9      8bb59cfdffff   mov esi, dword [rbp - 0x264]
0x000093af      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x000093b6      448885d8fcff.  mov byte [rbp - 0x328], r8b
0x000093bd      e87e9affff     call sym.imp.lchown
0x000093c2      85c0           test eax, eax
0x000093c4      440fb685d8fc.  movzx r8d, byte [rbp - 0x328]
0x000093cc      0f84cdcdffff   je 0x619f                               ; ../coreutils-8.31/src/py.c:-385
0x000093d2      4889df         mov rdi, rbx
0x000093d5      e8d6c5ffff     call sym.chown_failure_ok
0x000093da      84c0           test al, al
0x000093dc      440fb685d8fc.  movzx r8d, byte [rbp - 0x328]
0x000093e4      0f84fa070000   je 0x9be4
0x000093ea      8885e0fcffff   mov byte [rbp - 0x320], al
0x000093f0      e9aacdffff     jmp 0x619f
0x000093f5      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000093fc      488d9530ffff.  lea rdx, [rbp - 0xd0]
0x00009403      bf01000000     mov edi, 1
0x00009408      448985b8fcff.  mov dword [rbp - 0x348], r8d
0x0000940f      e8ec96ffff     call sym.imp.__lxstat
0x00009414      85c0           test eax, eax
0x00009416      448b85b8fcff.  mov r8d, dword [rbp - 0x348]
0x0000941d      7543           jne 0x9462
0x0000941f      8b8548ffffff   mov eax, dword [rbp - 0xb8]
0x00009425      2500f00000     and eax, 0xf000
0x0000942a      3d00a00000     cmp eax, 0xa000
0x0000942f      7531           jne 0x9462
0x00009431      440fb64330     movzx r8d, byte [rbx + 0x30]
0x00009436      4584c0         test r8b, r8b                           ; ../coreutils-8.31/src/py.c:-441
0x00009439      0f84e8070000   je 0x9c27
0x0000943f      8b95d0fcffff   mov edx, dword [rbp - 0x330]
0x00009445      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x0000944c      be41000000     mov esi, 0x41                           ; 'A'
0x00009451      31c0           xor eax, eax
0x00009453      e838200000     call sym.open_safer
0x00009458      458b0424       mov r8d, dword [r12]
0x0000945c      8985d8fcffff   mov dword [rbp - 0x328], eax
0x00009462      8b85d8fcffff   mov eax, dword [rbp - 0x328]
0x00009468      c1e81f         shr eax, 0x1f
0x0000946b      4183f815       cmp r8d, 0x15
0x0000946f      0f94c2         sete dl
0x00009472      20c2           and dl, al
0x00009474      4189d1         mov r9d, edx
0x00009477      0f84f9000000   je 0x9576
0x0000947d      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00009484      41b815000000   mov r8d, 0x15
0x0000948a      803e00         cmp byte [rsi], 0
0x0000948d      4889f7         mov rdi, rsi
0x00009490      0f84e1fbffff   je 0x9077
0x00009496      31c0           xor eax, eax
0x00009498      4883c9ff       or rcx, 0xffffffffffffffff
0x0000949c      4531c0         xor r8d, r8d
0x0000949f      f2ae           repne scasb al, byte [rdi]
0x000094a1      4889c8         mov rax, rcx
0x000094a4      48f7d0         not rax
0x000094a7      807c06fe2f     cmp byte [rsi + rax - 2], 0x2f
0x000094ac      410f95c0       setne r8b
0x000094b0      4183c014       add r8d, 0x14
0x000094b4      e9befbffff     jmp 0x9077
0x000094b9      8b8528feffff   mov eax, dword [rbp - 0x1d8]
0x000094bf      2500f00000     and eax, 0xf000
0x000094c4      3d00a00000     cmp eax, 0xa000
0x000094c9      0f850bf4ffff   jne 0x88da
0x000094cf      4883c9ff       or rcx, 0xffffffffffffffff
0x000094d3      4489f0         mov eax, r14d
0x000094d6      4c89e7         mov rdi, r12
0x000094d9      f2ae           repne scasb al, byte [rdi]
0x000094db      488bb540feff.  mov rsi, qword [rbp - 0x1c0]
0x000094e2      48f7d1         not rcx
0x000094e5      488d41ff       lea rax, [rcx - 1]
0x000094e9      4839c6         cmp rsi, rax
0x000094ec      0f85e8f3ffff   jne 0x88da
0x000094f2      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x000094f9      e822130000     call sym.areadlink_with_size
0x000094fe      4885c0         test rax, rax
0x00009501      0f84d3f3ffff   je 0x88da
0x00009507      4889c7         mov rdi, rax
0x0000950a      4c89e6         mov rsi, r12
0x0000950d      488985d8fcff.  mov qword [rbp - 0x328], rax
0x00009514      e8d797ffff     call sym.imp.strcmp
0x00009519      488b95d8fcff.  mov rdx, qword [rbp - 0x328]
0x00009520      85c0           test eax, eax
0x00009522      4889d7         mov rdi, rdx
0x00009525      0f85f7070000   jne 0x9d22
0x0000952b      e8a09bffff     call sym..plt.got
0x00009530      4c89e7         mov rdi, r12
0x00009533      e8989bffff     call sym..plt.got                       ; stat.h:-1641
0x00009538      e9d3fbffff     jmp 0x9110
0x0000953d      448b85c0fcff.  mov r8d, dword [rbp - 0x340]
0x00009544      8b8dd8fcffff   mov ecx, dword [rbp - 0x328]
0x0000954a      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x00009551      8bb5e0fcffff   mov esi, dword [rbp - 0x320]            ; stat.h:-1639
0x00009557      488bbdf0fcff.  mov rdi, qword [rbp - 0x310]
0x0000955e      e8dd110000     call sym.copy_acl
0x00009563      85c0           test eax, eax
0x00009565      41b801000000   mov r8d, 1
0x0000956b      0f8444f9ffff   je 0x8eb5
0x00009571      e9b1fdffff     jmp 0x9327
0x00009576      83bdd8fcffff.  cmp dword [rbp - 0x328], 0
0x0000957d      41be01000000   mov r14d, 1
0x00009583      0f893df5ffff   jns 0x8ac6
0x00009589      e9e3faffff     jmp 0x9071
0x0000958e      0fb67325       movzx esi, byte [rbx + 0x25]
0x00009592      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00009599      31d2           xor edx, edx
0x0000959b      4889d9         mov rcx, rbx
0x0000959e      e8edc2ffff     call sym.set_file_security_ctx
0x000095a3      84c0           test al, al
0x000095a5      4189c0         mov r8d, eax
0x000095a8      0f850ef5ffff   jne 0x8abc
0x000095ae      807b2600       cmp byte [rbx + 0x26], 0
0x000095b2      48c785d0fcff.  mov qword [rbp - 0x330], 0
0x000095bd      0f85f2f8ffff   jne 0x8eb5
0x000095c3      e9f4f4ffff     jmp 0x8abc
0x000095c8      8bbdd8fcffff   mov edi, dword [rbp - 0x328]
0x000095ce      4889ce         mov rsi, rcx
0x000095d1      e80ab9ffff     call sym.write_zeros
0x000095d6      84c0           test al, al
0x000095d8      0f8415050000   je 0x9af3
0x000095de      4531c0         xor r8d, r8d
0x000095e1      e967f7ffff     jmp 0x8d4d
0x000095e6      488b85c8fdff.  mov rax, qword [rbp - sym..interp]
0x000095ed      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000095f4      488d9560fdff.  lea rdx, [rbp - 0x2a0]
0x000095fb      8bbdd8fcffff   mov edi, dword [rbp - 0x328]
0x00009601      48898560fdff.  mov qword [rbp - 0x2a0], rax
0x00009608      488b85d0fdff.  mov rax, qword [rbp - 0x230]
0x0000960f      48898568fdff.  mov qword [rbp - sym..gnu.hash], rax
0x00009616      488b85d8fdff.  mov rax, qword [rbp - 0x228]
0x0000961d      48898570fdff.  mov qword [rbp - 0x290], rax
0x00009624      488b85e0fdff.  mov rax, qword [rbp - 0x220]
0x0000962b      48898578fdff.  mov qword [rbp - 0x288], rax
0x00009632      e8a97c0000     call sym.fdutimens                      ; /src:-450
0x00009637      85c0           test eax, eax
0x00009639      0f84a5fbffff   je 0x91e4
0x0000963f      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00009646      bf04000000     mov edi, 4                              ; /src:-449
0x0000964b      e8a05d0000     call sym.quotearg_style
0x00009650      488d3597e800.  lea rsi, str.preserving_times_for__s    ; 0x17eee ; "preserving times for %s"
0x00009657      31ff           xor edi, edi
0x00009659      ba05000000     mov edx, 5
0x0000965e      4989c4         mov r12, rax
0x00009661      e86a94ffff     call sym.imp.dcgettext
0x00009666      488985c8fcff.  mov qword [rbp - 0x338], rax
0x0000966d      e8de92ffff     call sym.imp.__errno_location
0x00009672      488b95c8fcff.  mov rdx, qword [rbp - 0x338]
0x00009679      8b30           mov esi, dword [rax]
0x0000967b      31ff           xor edi, edi
0x0000967d      31c0           xor eax, eax
0x0000967f      4c89e1         mov rcx, r12
0x00009682      e8a998ffff     call sym.imp.error
0x00009687      807b2400       cmp byte [rbx + 0x24], 0
0x0000968b      0f8453fbffff   je 0x91e4
0x00009691      e91cf8ffff     jmp 0x8eb2
0x00009696      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x0000969d      bf04000000     mov edi, 4
0x000096a2      e8495d0000     call sym.quotearg_style
0x000096a7      488d35d2e700.  lea rsi, str.cannot_fstat__s            ; 0x17e80 ; "cannot fstat %s"
0x000096ae      ba05000000     mov edx, 5
0x000096b3      31ff           xor edi, edi
0x000096b5      4989c4         mov r12, rax
0x000096b8      e81394ffff     call sym.imp.dcgettext
0x000096bd      488985d0fcff.  mov qword [rbp - 0x330], rax
0x000096c4      e88792ffff     call sym.imp.__errno_location
0x000096c9      488b95d0fcff.  mov rdx, qword [rbp - 0x330]
0x000096d0      8b30           mov esi, dword [rax]
0x000096d2      4c89e1         mov rcx, r12
0x000096d5      31ff           xor edi, edi
0x000096d7      31c0           xor eax, eax
0x000096d9      e85298ffff     call sym.imp.error
0x000096de      4531c0         xor r8d, r8d
0x000096e1      48c785d0fcff.  mov qword [rbp - 0x330], 0
0x000096ec      e9c4f7ffff     jmp 0x8eb5
0x000096f1      48898d90fcff.  mov qword [rbp - 0x370], rcx
0x000096f8      e953f5ffff     jmp 0x8c50
0x000096fd      4531c9         xor r9d, r9d
0x00009700      837b0c03       cmp dword [rbx + 0xc], 3
0x00009704      488d8510fdff.  lea rax, [rbp - 0x2f0]
0x0000970b      48c78568fcff.  mov qword [rbp - 0x398], 0
0x00009716      488985b8fcff.  mov qword [rbp - 0x348], rax
0x0000971d      410f94c1       sete r9b
0x00009721      488d8508fdff.  lea rax, [rbp - 0x2f8]
0x00009728      4883ec08       sub rsp, 8
0x0000972c      4c8b8568fcff.  mov r8, qword [rbp - 0x398]
0x00009733      488b8d90fcff.  mov rcx, qword [rbp - 0x370]
0x0000973a      488b9550fcff.  mov rdx, qword [rbp - 0x3b0]
0x00009741      8bb5d8fcffff   mov esi, dword [rbp - 0x328]            ; /src:-497
0x00009747      8bbde0fcffff   mov edi, dword [rbp - 0x320]
0x0000974d      50             push rax
0x0000974e      ffb5b8fcffff   push qword [rbp - 0x348]
0x00009754      6aff           push 0xffffffffffffffff                 ; /src:-473
0x00009756      ffb5f8fcffff   push qword [rbp - 0x308]
0x0000975c      ffb5f0fcffff   push qword [rbp - 0x310]
0x00009762      e849bcffff     call sym.sparse_copy
0x00009767      4883c430       add rsp, 0x30
0x0000976b      84c0           test al, al
0x0000976d      0f843ff7ffff   je 0x8eb2
0x00009773      80bd08fdffff.  cmp byte [rbp - 0x2f8], 0
0x0000977a      0f845afaffff   je 0x91da
0x00009780      488bb510fdff.  mov rsi, qword [rbp - 0x2f0]
0x00009787      8bbdd8fcffff   mov edi, dword [rbp - 0x328]
0x0000978d      e81e94ffff     call sym.imp.ftruncate
0x00009792      85c0           test eax, eax                           ; stdio.h:-1207
0x00009794      0f8940faffff   jns 0x91da
0x0000979a      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000097a1      bf04000000     mov edi, 4
0x000097a6      e8455c0000     call sym.quotearg_style
0x000097ab      488d3528e700.  lea rsi, str.failed_to_extend__s        ; 0x17eda ; "failed to extend %s"
0x000097b2      4989c4         mov r12, rax
0x000097b5      ba05000000     mov edx, 5
0x000097ba      31ff           xor edi, edi
0x000097bc      e80f93ffff     call sym.imp.dcgettext
0x000097c1      488985c8fcff.  mov qword [rbp - 0x338], rax
0x000097c8      e88391ffff     call sym.imp.__errno_location
0x000097cd      488b95c8fcff.  mov rdx, qword [rbp - 0x338]
0x000097d4      8b30           mov esi, dword [rax]
0x000097d6      4c89e1         mov rcx, r12
0x000097d9      31ff           xor edi, edi
0x000097db      31c0           xor eax, eax
0x000097dd      e84e97ffff     call sym.imp.error
0x000097e2      e9cbf6ffff     jmp 0x8eb2
0x000097e7      c68531fdffff.  mov byte [rbp - 0x2cf], 1
0x000097ee      488bbd38fdff.  mov rdi, qword [rbp - 0x2c8]
0x000097f5      e8d698ffff     call sym..plt.got
0x000097fa      80bd31fdffff.  cmp byte [rbp - 0x2cf], 0               ; /src:-438
0x00009801      48c78538fdff.  mov qword [rbp - 0x2c8], 0              ; stdio.h:-1207
0x0000980c      48c78528fdff.  mov qword [rbp - 0x2d8], 0
0x00009817      0f84e6f4ffff   je 0x8d03
0x0000981d      488b9d78fcff.  mov rbx, qword [rbp - 0x388]
0x00009824      448bada0fcff.  mov r13d, dword [rbp - 0x360]
0x0000982b      488b8d60fcff.  mov rcx, qword [rbp - 0x3a0]
0x00009832      48398d80fcff.  cmp qword [rbp - 0x380], rcx
0x00009839      410f9fc4       setg r12b
0x0000983d      7f0d           jg 0x984c
0x0000983f      80bdc8fcffff.  cmp byte [rbp - 0x338], 0
0x00009846      0f848ef9ffff   je 0x91da
0x0000984c      83bd70fcffff.  cmp dword [rbp - 0x390], 1
0x00009853      488bb580fcff.  mov rsi, qword [rbp - 0x380]
0x0000985a      7472           je 0x98ce
0x0000985c      8bbdd8fcffff   mov edi, dword [rbp - 0x328]
0x00009862      e84993ffff     call sym.imp.ftruncate
0x00009867      85c0           test eax, eax
0x00009869      0f852bffffff   jne 0x979a
0x0000986f      83bd70fcffff.  cmp dword [rbp - 0x390], 3
0x00009876      0f855ef9ffff   jne 0x91da
0x0000987c      4584e4         test r12b, r12b
0x0000987f      0f8455f9ffff   je 0x91da
0x00009885      488b9580fcff.  mov rdx, qword [rbp - 0x380]
0x0000988c      488bb560fcff.  mov rsi, qword [rbp - 0x3a0]
0x00009893      8bbdd8fcffff   mov edi, dword [rbp - 0x328]
0x00009899      4829f2         sub rdx, rsi
0x0000989c      e8efb6ffff     call sym.punch_hole
0x000098a1      85c0           test eax, eax
0x000098a3      0f8931f9ffff   jns 0x91da
0x000098a9      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x000098b0      bf04000000     mov edi, 4
0x000098b5      e8365b0000     call sym.quotearg_style
0x000098ba      ba05000000     mov edx, 5
0x000098bf      4989c4         mov r12, rax
0x000098c2      488d3576e400.  lea rsi, str.error_deallocating__s      ; 0x17d3f ; "error deallocating %s"
0x000098c9      e9ecfeffff     jmp 0x97ba
0x000098ce      482bb560fcff.  sub rsi, qword [rbp - 0x3a0]
0x000098d5      8bbdd8fcffff   mov edi, dword [rbp - 0x328]
0x000098db      e800b6ffff     call sym.write_zeros
0x000098e0      84c0           test al, al
0x000098e2      0f85f2f8ffff   jne 0x91da
0x000098e8      e9adfeffff     jmp 0x979a
0x000098ed      488b85d0feff.  mov rax, qword [rbp - 0x130]
0x000098f4      48398590fcff.  cmp qword [rbp - 0x370], rax
0x000098fb      0f8622f3ffff   jbe 0x8c23
0x00009901      4883c001       add rax, 1
0x00009905      48898590fcff.  mov qword [rbp - 0x370], rax
0x0000990c      e912f3ffff     jmp 0x8c23
0x00009911      80bd31fdffff.  cmp byte [rbp - 0x2cf], 0
0x00009918      488b9d78fcff.  mov rbx, qword [rbp - 0x388]
0x0000991f      448bada0fcff.  mov r13d, dword [rbp - 0x360]
0x00009926      0f85fffeffff   jne 0x982b
0x0000992c      80bd30fdffff.  cmp byte [rbp - 0x2d0], 0
0x00009933      0f8417020000   je 0x9b50
0x00009939      4531c9         xor r9d, r9d
0x0000993c      837b0c03       cmp dword [rbx + 0xc], 3
0x00009940      b800000000     mov eax, 0
0x00009945      410f94c1       sete r9b
0x00009949      80bd5bfcffff.  cmp byte [rbp - 0x3a5], 0
0x00009950      480f458568fc.  cmovne rax, qword [rbp - 0x398]
0x00009958      48898568fcff.  mov qword [rbp - 0x398], rax
0x0000995f      e9bdfdffff     jmp 0x9721
0x00009964      8b95e0fcffff   mov edx, dword [rbp - 0x320]
0x0000996a      8bbdd8fcffff   mov edi, dword [rbp - 0x328]
0x00009970      31c0           xor eax, eax
0x00009972      be09940440     mov esi, 0x40049409
0x00009977      e89492ffff     call sym.imp.ioctl
0x0000997c      85c0           test eax, eax
0x0000997e      0f844bf8ffff   je 0x91cf
0x00009984      837b3802       cmp dword [rbx + 0x38], 2
0x00009988      0f857ef1ffff   jne 0x8b0c
0x0000998e      488b95f0fcff.  mov rdx, qword [rbp - 0x310]
0x00009995      be04000000     mov esi, 4
0x0000999a      bf01000000     mov edi, 1
0x0000999f      e82c590000     call sym.quotearg_n_style
0x000099a4      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x000099ab      be04000000     mov esi, 4                              ; /src:-687
0x000099b0      31ff           xor edi, edi
0x000099b2      4989c4         mov r12, rax
0x000099b5      e816590000     call sym.quotearg_n_style
0x000099ba      488d35ede400.  lea rsi, str.failed_to_clone__s_from__s ; 0x17eae ; "failed to clone %s from %s"
0x000099c1      ba05000000     mov edx, 5
0x000099c6      31ff           xor edi, edi
0x000099c8      488985c8fcff.  mov qword [rbp - 0x338], rax
0x000099cf      e8fc90ffff     call sym.imp.dcgettext
0x000099d4      488985d0fcff.  mov qword [rbp - 0x330], rax
0x000099db      e8708fffff     call sym.imp.__errno_location
0x000099e0      488b8dc8fcff.  mov rcx, qword [rbp - 0x338]
0x000099e7      8b30           mov esi, dword [rax]                    ; /src:-344
0x000099e9      4d89e0         mov r8, r12
0x000099ec      488b95d0fcff.  mov rdx, qword [rbp - 0x330]
0x000099f3      31ff           xor edi, edi
0x000099f5      31c0           xor eax, eax
0x000099f7      e83495ffff     call sym.imp.error
0x000099fc      4531c0         xor r8d, r8d
0x000099ff      48c785d0fcff.  mov qword [rbp - 0x330], 0
0x00009a0a      e9a6f4ffff     jmp 0x8eb5
0x00009a0f      8b430c         mov eax, dword [rbx + 0xc]
0x00009a12      83f803         cmp eax, 3
0x00009a15      0f8483000000   je 0x9a9e
0x00009a1b      83f802         cmp eax, 2
0x00009a1e      0f8590f1ffff   jne 0x8bb4
0x00009a24      f685b8fcffff.  test byte [rbp - 0x348], 1
0x00009a2b      0f8483f1ffff   je 0x8bb4
0x00009a31      488b8590fcff.  mov rax, qword [rbp - 0x370]
0x00009a38      498d3c04       lea rdi, [r12 + rax]
0x00009a3c      e8cf850000     call sym.xmalloc
0x00009a41      4a8d4c20ff     lea rcx, [rax + r12 - 1]
0x00009a46      488985d0fcff.  mov qword [rbp - 0x330], rax
0x00009a4d      31d2           xor edx, edx
0x00009a4f      4889c8         mov rax, rcx
0x00009a52      49f7f4         div r12
0x00009a55      4829d1         sub rcx, rdx
0x00009a58      48898d50fcff.  mov qword [rbp - 0x3b0], rcx
0x00009a5f      8b430c         mov eax, dword [rbx + 0xc]
0x00009a62      898570fcffff   mov dword [rbp - 0x390], eax
0x00009a68      0fb685c8fcff.  movzx eax, byte [rbp - 0x338]
0x00009a6f      88855bfcffff   mov byte [rbp - 0x3a5], al
0x00009a75      e922f2ffff     jmp 0x8c9c                              ; /src:1265
0x00009a7a      488b85d0feff.  mov rax, qword [rbp - 0x130]
0x00009a81      4899           cqo
0x00009a83      49f7f8         idiv r8
0x00009a86      483985e0feff.  cmp qword [rbp - 0x120], rax
0x00009a8d      0f9cc0         setl al
0x00009a90      0fb6c0         movzx eax, al
0x00009a93      8985b8fcffff   mov dword [rbp - 0x348], eax
0x00009a99      e900f1ffff     jmp 0x8b9e
0x00009a9e      488b8590fcff.  mov rax, qword [rbp - 0x370]
0x00009aa5      498d3c04       lea rdi, [r12 + rax]
0x00009aa9      e862850000     call sym.xmalloc
0x00009aae      4a8d4c20ff     lea rcx, [rax + r12 - 1]
0x00009ab3      31d2           xor edx, edx
0x00009ab5      488985d0fcff.  mov qword [rbp - 0x330], rax
0x00009abc      4889c8         mov rax, rcx
0x00009abf      49f7f4         div r12
0x00009ac2      4829d1         sub rcx, rdx
0x00009ac5      83bdb8fcffff.  cmp dword [rbp - 0x348], 0
0x00009acc      48898d50fcff.  mov qword [rbp - 0x3b0], rcx
0x00009ad3      758a           jne 0x9a5f
0x00009ad5      4531c9         xor r9d, r9d
0x00009ad8      837b0c03       cmp dword [rbx + 0xc], 3
0x00009adc      488d8510fdff.  lea rax, [rbp - 0x2f0]
0x00009ae3      488985b8fcff.  mov qword [rbp - 0x348], rax
0x00009aea      410f94c1       sete r9b
0x00009aee      e92efcffff     jmp 0x9721
0x00009af3      488b95f8fcff.  mov rdx, qword [rbp - 0x308]
0x00009afa      be03000000     mov esi, 3
0x00009aff      31ff           xor edi, edi
0x00009b01      488b9d78fcff.  mov rbx, qword [rbp - 0x388]
0x00009b08      448bada0fcff.  mov r13d, dword [rbp - 0x360]
0x00009b0f      e8dc590000     call sym.quotearg_n_style_colon
0x00009b14      488d35aee300.  lea rsi, str.s:_write_failed            ; 0x17ec9 ; "%s: write failed"
0x00009b1b      4989c4         mov r12, rax
0x00009b1e      ba05000000     mov edx, 5
0x00009b23      31ff           xor edi, edi
0x00009b25      e8a68fffff     call sym.imp.dcgettext
0x00009b2a      488985c8fcff.  mov qword [rbp - 0x338], rax
0x00009b31      e81a8effff     call sym.imp.__errno_location
0x00009b36      488b95c8fcff.  mov rdx, qword [rbp - 0x338]
0x00009b3d      8b30           mov esi, dword [rax]
0x00009b3f      4c89e1         mov rcx, r12
0x00009b42      31ff           xor edi, edi
0x00009b44      31c0           xor eax, eax
0x00009b46      e8e593ffff     call sym.imp.error
0x00009b4b      e956f3ffff     jmp 0x8ea6
0x00009b50      488b95f0fcff.  mov rdx, qword [rbp - 0x310]
0x00009b57      be03000000     mov esi, 3
0x00009b5c      31ff           xor edi, edi
0x00009b5e      e88d590000     call sym.quotearg_n_style_colon         ; /src:1244
0x00009b63      ba05000000     mov edx, 5
0x00009b68      4989c4         mov r12, rax
0x00009b6b      488d35f6df00.  lea rsi, str.s:_failed_to_get_extents_info ; 0x17b68 ; "%s: failed to get extents info"
0x00009b72      e943fcffff     jmp 0x97ba
0x00009b77      e874c0ffff     call sym.cached_umask
0x00009b7c      8bb5d8fcffff   mov esi, dword [rbp - 0x328]
0x00009b82      f7d0           not eax
0x00009b84      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00009b8b      89c2           mov edx, eax
0x00009b8d      4589e6         mov r14d, r12d
0x00009b90      81e2b6010000   and edx, 0x1b6
0x00009b96      e8350c0000     call sym.set_acl
0x00009b9b      85c0           test eax, eax
0x00009b9d      410f94c0       sete r8b
0x00009ba1      e90ff3ffff     jmp 0x8eb5
0x00009ba6      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00009bad      bf04000000     mov edi, 4
0x00009bb2      e839580000     call sym.quotearg_style
0x00009bb7      488d352ce200.  lea rsi, str.cannot_remove__s           ; 0x17dea ; "cannot remove %s"
0x00009bbe      ba05000000     mov edx, 5
0x00009bc3      31ff           xor edi, edi
0x00009bc5      488985d8fcff.  mov qword [rbp - 0x328], rax
0x00009bcc      e8ff8effff     call sym.imp.dcgettext
0x00009bd1      488b8dd8fcff.  mov rcx, qword [rbp - 0x328]
0x00009bd8      4889c2         mov rdx, rax
0x00009bdb      418b3424       mov esi, dword [r12]
0x00009bdf      e97de1ffff     jmp 0x7d61
0x00009be4      488d35e5db00.  lea rsi, str.failed_to_preserve_ownership_for__s ; 0x177d0 ; "failed to preserve ownership for %s"
0x00009beb      31ff           xor edi, edi
0x00009bed      ba05000000     mov edx, 5
0x00009bf2      e8d98effff     call sym.imp.dcgettext
0x00009bf7      4989c4         mov r12, rax
0x00009bfa      e8518dffff     call sym.imp.__errno_location
0x00009bff      488b8df8fcff.  mov rcx, qword [rbp - 0x308]
0x00009c06      8b30           mov esi, dword [rax]
0x00009c08      31ff           xor edi, edi
0x00009c0a      31c0           xor eax, eax
0x00009c0c      4c89e2         mov rdx, r12
0x00009c0f      e81c93ffff     call sym.imp.error
0x00009c14      440fb64324     movzx r8d, byte [rbx + 0x24]
0x00009c19      4584c0         test r8b, r8b
0x00009c1c      0f858ecfffff   jne 0x6bb0
0x00009c22      e978c5ffff     jmp 0x619f
0x00009c27      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00009c2e      bf04000000     mov edi, 4
0x00009c33      448885d8fcff.  mov byte [rbp - 0x328], r8b
0x00009c3a      e8b1570000     call sym.quotearg_style
0x00009c3f      488d35fade00.  lea rsi, str.not_writing_through_dangling_symlink__s ; 0x17b40 ; "not writing through dangling symlink %s"
0x00009c46      4989c4         mov r12, rax
0x00009c49      ba05000000     mov edx, 5
0x00009c4e      31ff           xor edi, edi
0x00009c50      e87b8effff     call sym.imp.dcgettext
0x00009c55      4c89e1         mov rcx, r12
0x00009c58      4889c2         mov rdx, rax
0x00009c5b      31f6           xor esi, esi
0x00009c5d      31ff           xor edi, edi
0x00009c5f      31c0           xor eax, eax
0x00009c61      e8ca92ffff     call sym.imp.error
0x00009c66      48c785d0fcff.  mov qword [rbp - 0x330], 0
0x00009c71      440fb685d8fc.  movzx r8d, byte [rbp - 0x328]
0x00009c79      e9fae0ffff     jmp 0x7d78
0x00009c7e      e87d8fffff     call sym.imp.geteuid
0x00009c83      85c0           test eax, eax
0x00009c85      0f84ccf5ffff   je 0x9257
0x00009c8b      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00009c92      8bbdd8fcffff   mov edi, dword [rbp - 0x328]
0x00009c98      ba80010000     mov edx, 0x180
0x00009c9d      e83e94ffff     call sym.fchmod_or_lchmod
0x00009ca2      85c0           test eax, eax
0x00009ca4      0f85adf5ffff   jne 0x9257
0x00009caa      8b9588fcffff   mov edx, dword [rbp - 0x378]
0x00009cb0      488bb5f8fcff.  mov rsi, qword [rbp - 0x308]
0x00009cb7      8bbdd8fcffff   mov edi, dword [rbp - 0x328]
0x00009cbd      f7d2           not edx
0x00009cbf      23955cfcffff   and edx, dword [rbp - 0x3a4]
0x00009cc5      e81694ffff     call sym.fchmod_or_lchmod
0x00009cca      e988f5ffff     jmp 0x9257
0x00009ccf      488bb5f0fcff.  mov rsi, qword [rbp - 0x310]
0x00009cd6      bf04000000     mov edi, 4
0x00009cdb      488b9d78fcff.  mov rbx, qword [rbp - 0x388]
0x00009ce2      448bada0fcff.  mov r13d, dword [rbp - 0x360]
0x00009ce9      e802570000     call sym.quotearg_style
0x00009cee      ba05000000     mov edx, 5
0x00009cf3      4989c4         mov r12, rax
0x00009cf6      488d3532e000.  lea rsi, str.cannot_lseek__s            ; 0x17d2f ; "cannot lseek %s"
0x00009cfd      e921feffff     jmp 0x9b23
0x00009d02      8b5310         mov edx, dword [rbx + 0x10]
0x00009d05      8bb5d8fcffff   mov esi, dword [rbp - 0x328]
0x00009d0b      488bbdf8fcff.  mov rdi, qword [rbp - 0x308]
0x00009d12      e8b90a0000     call sym.set_acl
0x00009d17      85c0           test eax, eax
0x00009d19      410f94c0       sete r8b
0x00009d1d      e993f1ffff     jmp 0x8eb5
0x00009d22      e8a993ffff     call sym..plt.got
0x00009d27      e9aeebffff     jmp 0x88da
0x00009d2c      0f1f4000       nop dword [rax]
;-- copy:
0x00009d30      4883ec18       sub rsp, 0x18
0x00009d34      64488b042528.  mov rax, qword fs:[0x28]
0x00009d3d      4889442408     mov qword [rsp + 8], rax
0x00009d42      31c0           xor eax, eax
0x00009d44      4885c9         test rcx, rcx
0x00009d47      0f8429010000   je 0x9e76
0x00009d4d      833903         cmp dword [rcx], 3
0x00009d50      0f8701010000   ja 0x9e57
0x00009d56      8b410c         mov eax, dword [rcx + 0xc]
0x00009d59      448d50ff       lea r10d, [rax - 1]
0x00009d5d      4183fa02       cmp r10d, 2
0x00009d61      0f87d1000000   ja 0x9e38
0x00009d67      448b5138       mov r10d, dword [rcx + 0x38]
0x00009d6b      4183fa02       cmp r10d, 2
0x00009d6f      0f87a4000000   ja 0x9e19
0x00009d75      80791700       cmp byte [rcx + 0x17], 0
0x00009d79      7555           jne 0x9dd0
0x00009d7b      83f802         cmp eax, 2
0x00009d7e      7406           je 0x9d86
0x00009d80      4183fa02       cmp r10d, 2
0x00009d84      746f           je 0x9df5
0x00009d86      c644240700     mov byte [rsp + 7], 0
0x00009d8b      4151           push r9
0x00009d8d      0fb6d2         movzx edx, dl
0x00009d90      4150           push r8
0x00009d92      4989c9         mov r9, rcx
0x00009d95      4531c0         xor r8d, r8d
0x00009d98      31c9           xor ecx, ecx
0x00009d9a      488935e75721.  mov qword [obj.top_level_dst_name], rsi ; [0x21f588:8]=0
0x00009da1      48893de85721.  mov qword [obj.top_level_src_name], rdi ; [0x21f590:8]=0
0x00009da8      488d442417     lea rax, [rsp + 0x17]
0x00009dad      50             push rax
0x00009dae      6a01           push 1
0x00009db0      e86bbeffff     call sym.copy_internal
0x00009db5      4883c420       add rsp, 0x20
0x00009db9      488b742408     mov rsi, qword [rsp + 8]
0x00009dbe      644833342528.  xor rsi, qword fs:[0x28]
0x00009dc7      754b           jne 0x9e14
0x00009dc9      4883c418       add rsp, 0x18
0x00009dcd      c3             ret
0x00009dce      6690           nop
0x00009dd0      80792c00       cmp byte [rcx + 0x2c], 0
0x00009dd4      74a5           je 0x9d7b
0x00009dd6      488d0d1be200.  lea rcx, obj.__PRETTY_FUNCTION__.7875   ; 0x17ff8 ; "valid_options"
0x00009ddd      488d35e6e100.  lea rsi, str..._coreutils_8.31_src_copy.c ; 0x17fca ; "../coreutils-8.31/src/copy.c"
0x00009de4      488d3d9dde00.  lea rdi, str.co__hard_link____co__symbolic_link ; 0x17c88 ; "!(co->hard_link && co->symbolic_link)"
0x00009deb      ba8a0b0000     mov edx, 0xb8a
0x00009df0      e8eb8dffff     call sym.imp.__assert_fail
0x00009df5      488d0dfce100.  lea rcx, obj.__PRETTY_FUNCTION__.7875   ; 0x17ff8 ; "valid_options"
0x00009dfc      488d35c7e100.  lea rsi, str..._coreutils_8.31_src_copy.c ; 0x17fca ; "../coreutils-8.31/src/copy.c"
0x00009e03      488d3da6de00.  lea rdi, str.co__reflink_mode____REFLINK_ALWAYS____co__sparse_mode____SPARSE_AUTO ; 0x17cb0 ; "! (co->reflink_mode == REFLINK_ALWAYS && co->sparse_mode != SPARSE_AUTO)"
0x00009e0a      ba8d0b0000     mov edx, 0xb8d
0x00009e0f      e8cc8dffff     call sym.imp.__assert_fail
0x00009e14      e8178dffff     call sym.imp.__stack_chk_fail
0x00009e19      488d0dd8e100.  lea rcx, obj.__PRETTY_FUNCTION__.7875   ; 0x17ff8 ; "valid_options"
0x00009e20      488d35a3e100.  lea rsi, str..._coreutils_8.31_src_copy.c ; 0x17fca ; "../coreutils-8.31/src/copy.c"
0x00009e27      488d3d32de00.  lea rdi, str.VALID_REFLINK_MODE__co__reflink_mode ; 0x17c60 ; "VALID_REFLINK_MODE (co->reflink_mode)"
0x00009e2e      ba890b0000     mov edx, 0xb89
0x00009e33      e8a88dffff     call sym.imp.__assert_fail
0x00009e38      488d0db9e100.  lea rcx, obj.__PRETTY_FUNCTION__.7875   ; 0x17ff8 ; "valid_options"
0x00009e3f      488d3584e100.  lea rsi, str..._coreutils_8.31_src_copy.c ; 0x17fca ; "../coreutils-8.31/src/copy.c"
0x00009e46      488d3debdd00.  lea rdi, str.VALID_SPARSE_MODE__co__sparse_mode ; 0x17c38 ; "VALID_SPARSE_MODE (co->sparse_mode)"
0x00009e4d      ba880b0000     mov edx, 0xb88
0x00009e52      e8898dffff     call sym.imp.__assert_fail
0x00009e57      488d0d9ae100.  lea rcx, obj.__PRETTY_FUNCTION__.7875   ; 0x17ff8 ; "valid_options"
0x00009e5e      488d3565e100.  lea rsi, str..._coreutils_8.31_src_copy.c ; 0x17fca ; "../coreutils-8.31/src/copy.c"
0x00009e65      488d3da4dd00.  lea rdi, str.VALID_BACKUP_TYPE__co__backup_type ; 0x17c10 ; "VALID_BACKUP_TYPE (co->backup_type)"
0x00009e6c      ba870b0000     mov edx, 0xb87
0x00009e71      e86a8dffff     call sym.imp.__assert_fail
0x00009e76      488d0d7be100.  lea rcx, obj.__PRETTY_FUNCTION__.7875   ; 0x17ff8 ; "valid_options"
0x00009e7d      488d3546e100.  lea rsi, str..._coreutils_8.31_src_copy.c ; 0x17fca ; "../coreutils-8.31/src/copy.c"
0x00009e84      488d3d5ce100.  lea rdi, str.co____NULL                 ; 0x17fe7 ; "co != NULL"
0x00009e8b      ba860b0000     mov edx, 0xb86
0x00009e90      e84b8dffff     call sym.imp.__assert_fail
0x00009e95      662e0f1f8400.  nop word cs:[rax + rax]
0x00009e9f      90             nop
;-- src_to_dest_hash:
0x00009ea0      488b07         mov rax, qword [rdi]                    ; /src:52
0x00009ea3      31d2           xor edx, edx
0x00009ea5      48f7f6         div rsi
0x00009ea8      4889d0         mov rax, rdx                            ; /src:59
0x00009eab      c3             ret
0x00009eac      0f1f4000       nop dword [rax]
;-- src_to_dest_compare:
0x00009eb0      31c0           xor eax, eax                            ; /src:65
0x00009eb2      488b16         mov rdx, qword [rsi]                    ; /src:68
0x00009eb5      483917         cmp qword [rdi], rdx
0x00009eb8      7406           je 0x9ec0
0x00009eba      f3c3           ret                                     ; /src:69
0x00009ebc      0f1f4000       nop dword [rax]
0x00009ec0      488b4608       mov rax, qword [rsi + 8]                ; /src:68
0x00009ec4      48394708       cmp qword [rdi + 8], rax
0x00009ec8      0f94c0         sete al
0x00009ecb      c3             ret                                     ; /src:69
0x00009ecc      0f1f4000       nop dword [rax]
;-- src_to_dest_free:
0x00009ed0      53             push rbx                                ; /src:73
0x00009ed1      4889fb         mov rbx, rdi
0x00009ed4      488b7f10       mov rdi, qword [rdi + 0x10]             ; /src:75
0x00009ed8      e8f391ffff     call sym..plt.got
0x00009edd      4889df         mov rdi, rbx                            ; /src:76
0x00009ee0      5b             pop rbx                                 ; /src:77
0x00009ee1      e9ea91ffff     jmp sym..plt.got                        ; /src:76
0x00009ee6      662e0f1f8400.  nop word cs:[rax + rax]
;-- forget_created:
0x00009ef0      53             push rbx                                ; /src:83
0x00009ef1      4883ec20       sub rsp, 0x20
0x00009ef5      48893c24       mov qword [rsp], rdi                    ; /src:87
0x00009ef9      488b3d985621.  mov rdi, qword [obj.src_to_dest]        ; /src:91 ; [0x21f598:8]=0
0x00009f00      4889742408     mov qword [rsp + 8], rsi                ; /src:88
0x00009f05      4889e6         mov rsi, rsp                            ; /src:91
0x00009f08      48c744241000.  mov qword [rsp + 0x10], 0               ; /src:89
0x00009f11      64488b042528.  mov rax, qword fs:[0x28]                ; /src:83
0x00009f1a      4889442418     mov qword [rsp + 0x18], rax
0x00009f1f      31c0           xor eax, eax
0x00009f21      e85a2b0000     call sym.hash_delete                    ; /src:91
0x00009f26      4885c0         test rax, rax                           ; /src:92
0x00009f29      7414           je 0x9f3f
0x00009f2b      488b7810       mov rdi, qword [rax + 0x10]             ; /src:75
0x00009f2f      4889c3         mov rbx, rax
0x00009f32      e89991ffff     call sym..plt.got
0x00009f37      4889df         mov rdi, rbx                            ; /src:76
0x00009f3a      e89191ffff     call sym..plt.got
0x00009f3f      488b442418     mov rax, qword [rsp + 0x18]             ; /src:94
0x00009f44      644833042528.  xor rax, qword fs:[0x28]
0x00009f4d      7506           jne 0x9f55
0x00009f4f      4883c420       add rsp, 0x20
0x00009f53      5b             pop rbx
0x00009f54      c3             ret
0x00009f55      e8d68bffff     call sym.imp.__stack_chk_fail
0x00009f5a      660f1f440000   nop word [rax + rax]
;-- src_to_dest_lookup:
0x00009f60      4883ec28       sub rsp, 0x28                           ; /src:101
0x00009f64      48893c24       mov qword [rsp], rdi                    ; /src:104
0x00009f68      488b3d295621.  mov rdi, qword [obj.src_to_dest]        ; /src:106 ; [0x21f598:8]=0
0x00009f6f      4889742408     mov qword [rsp + 8], rsi                ; /src:105
0x00009f74      4889e6         mov rsi, rsp                            ; /src:106
0x00009f77      64488b042528.  mov rax, qword fs:[0x28]                ; /src:101
0x00009f80      4889442418     mov qword [rsp + 0x18], rax
0x00009f85      31c0           xor eax, eax
0x00009f87      e824200000     call sym.hash_lookup                    ; /src:106
0x00009f8c      4885c0         test rax, rax                           ; /src:107
0x00009f8f      741f           je 0x9fb0
0x00009f91      488b4010       mov rax, qword [rax + 0x10]
0x00009f95      488b542418     mov rdx, qword [rsp + 0x18]             ; /src:108
0x00009f9a      644833142528.  xor rdx, qword fs:[0x28]
0x00009fa3      750f           jne 0x9fb4
0x00009fa5      4883c428       add rsp, 0x28
0x00009fa9      c3             ret
0x00009faa      660f1f440000   nop word [rax + rax]
0x00009fb0      31c0           xor eax, eax                            ; /src:107
0x00009fb2      ebe1           jmp 0x9f95
0x00009fb4      e8778bffff     call sym.imp.__stack_chk_fail           ; /src:108
0x00009fb9      0f1f80000000.  nop dword [rax]
;-- remember_copied:
0x00009fc0      4155           push r13                                ; /src:116
0x00009fc2      4154           push r12
0x00009fc4      4989fd         mov r13, rdi
0x00009fc7      55             push rbp
0x00009fc8      53             push rbx
0x00009fc9      bf18000000     mov edi, 0x18                           ; /src:120
0x00009fce      4989f4         mov r12, rsi                            ; /src:116
0x00009fd1      4889d5         mov rbp, rdx
0x00009fd4      4883ec08       sub rsp, 8
0x00009fd8      e833800000     call sym.xmalloc                        ; /src:120
0x00009fdd      4c89ef         mov rdi, r13                            ; /src:121
0x00009fe0      4889c3         mov rbx, rax                            ; /src:120
0x00009fe3      e858820000     call sym.xstrdup                        ; /src:121
0x00009fe8      488b3da95521.  mov rdi, qword [obj.src_to_dest]        ; /src:125 ; [0x21f598:8]=0
0x00009fef      4889de         mov rsi, rbx
0x00009ff2      48894310       mov qword [rbx + 0x10], rax             ; /src:121
0x00009ff6      4c8923         mov qword [rbx], r12                    ; /src:122
0x00009ff9      48896b08       mov qword [rbx + 8], rbp                ; /src:123
0x00009ffd      e81e2a0000     call sym.hash_insert                    ; /src:125
0x0000a002      4885c0         test rax, rax                           ; /src:126
0x0000a005      742d           je 0xa034
0x0000a007      4839c3         cmp rbx, rax                            ; /src:135
0x0000a00a      4889c5         mov rbp, rax
0x0000a00d      7421           je 0xa030
0x0000a00f      488b7b10       mov rdi, qword [rbx + 0x10]             ; /src:75
0x0000a013      e8b890ffff     call sym..plt.got
0x0000a018      4889df         mov rdi, rbx                            ; /src:76
0x0000a01b      e8b090ffff     call sym..plt.got
0x0000a020      488b4510       mov rax, qword [rbp + 0x10]             ; /src:138
0x0000a024      4883c408       add rsp, 8                              ; /src:143
0x0000a028      5b             pop rbx
0x0000a029      5d             pop rbp
0x0000a02a      415c           pop r12
0x0000a02c      415d           pop r13
0x0000a02e      c3             ret
0x0000a02f      90             nop
0x0000a030      31c0           xor eax, eax                            ; /src:142
0x0000a032      ebf0           jmp 0xa024
0x0000a034      e827820000     call sym.xalloc_die                     ; /src:129
0x0000a039      0f1f80000000.  nop dword [rax]
;-- hash_init:
0x0000a040      4c8d0589feff.  lea r8, sym.src_to_dest_free            ; /src:148 ; 0x9ed0 ; "SH\x89\xfbH\x8b\x7f\x10\xe8\xf3\x91\xff\xffH\x89\xdf[\xe9\xea\x91\xff\xfff.\x0f\x1f\x84"
0x0000a047      488d0d62feff.  lea rcx, sym.src_to_dest_compare        ; 0x9eb0 ; "1\xc0H\x8b\x16H9\x17t\x06\xf3\xc3\x0f\x1f@"
0x0000a04e      488d154bfeff.  lea rdx, sym.src_to_dest_hash           ; 0x9ea0 ; "H\x8b\a1\xd2H\xf7\xf6H\x89\xd0\xc3\x0f\x1f@"
0x0000a055      4883ec08       sub rsp, 8
0x0000a059      31f6           xor esi, esi                            ; /src:149
0x0000a05b      bf67000000     mov edi, 0x67                           ; 'g'
0x0000a060      e8bb210000     call sym.hash_initialize
0x0000a065      4885c0         test rax, rax                           ; /src:153
0x0000a068      488905295521.  mov qword [obj.src_to_dest], rax        ; /src:149 ; [0x21f598:8]=0
0x0000a06f      7405           je 0xa076                               ; /src:153
0x0000a071      4883c408       add rsp, 8                              ; /src:155
0x0000a075      c3             ret
0x0000a076      e8e5810000     call sym.xalloc_die                     ; /src:154
0x0000a07b      0f1f440000     nop dword [rax + rax]
;-- forget_all:
0x0000a080      488b3d115521.  mov rdi, qword [obj.src_to_dest]        ; /src:162 ; [0x21f598:8]=0
0x0000a087      e9e4230000     jmp sym.hash_free
0x0000a08c      0f1f4000       nop dword [rax]                         ; /src:163
;-- extent_scan_init:
0x0000a090      893e           mov dword [rsi], edi
0x0000a092      48c746180000.  mov qword [rsi + 0x18], 0
0x0000a09a      48c746280000.  mov qword [rsi + 0x28], 0
0x0000a0a2      48c746080000.  mov qword [rsi + 8], 0
0x0000a0aa      c6462000       mov byte [rsi + 0x20], 0
0x0000a0ae      c6462100       mov byte [rsi + 0x21], 0
0x0000a0b2      c74610010000.  mov dword [rsi + 0x10], 1
0x0000a0b9      c3             ret
0x0000a0ba      660f1f440000   nop word [rax + rax]
;-- extent_scan_read:
0x0000a0c0      4157           push r15
0x0000a0c2      4156           push r14
0x0000a0c4      4531ff         xor r15d, r15d
0x0000a0c7      4155           push r13
0x0000a0c9      4154           push r12
0x0000a0cb      4989fe         mov r14, rdi
0x0000a0ce      55             push rbp
0x0000a0cf      53             push rbx
0x0000a0d0      49bdffffffff.  movabs r13, 0x7fffffffffffffff          ; 9223372036854775807
0x0000a0da      4881ec181000.  sub rsp, 0x1018
0x0000a0e1      488b5f28       mov rbx, qword [rdi + 0x28]
0x0000a0e5      488b5708       mov rdx, qword [rdi + 8]
0x0000a0e9      4889e5         mov rbp, rsp
0x0000a0ec      64488b042528.  mov rax, qword fs:[0x28]
0x0000a0f5      488984240810.  mov qword [rsp + 0x1008], rax
0x0000a0fd      31c0           xor eax, eax
0x0000a0ff      4c8d6520       lea r12, [rbp + 0x20]
0x0000a103      31c0           xor eax, eax
0x0000a105      b900020000     mov ecx, 0x200
0x0000a10a      4889ef         mov rdi, rbp
0x0000a10d      f348ab         rep stosq qword [rdi], rax
0x0000a110      418b4610       mov eax, dword [r14 + 0x10]
0x0000a114      418b3e         mov edi, dword [r14]
0x0000a117      be0b6620c0     mov esi, 0xc020660b
0x0000a11c      48891424       mov qword [rsp], rdx
0x0000a120      48f7d2         not rdx
0x0000a123      c74424184800.  mov dword [rsp + 0x18], 0x48            ; 'H'
                                                                       ; [0x48:4]=64
0x0000a12b      4889542408     mov qword [rsp + 8], rdx
0x0000a130      4889ea         mov rdx, rbp
0x0000a133      89442410       mov dword [rsp + 0x10], eax
0x0000a137      31c0           xor eax, eax
0x0000a139      e8d28affff     call sym.imp.ioctl
0x0000a13e      85c0           test eax, eax
0x0000a140      0f88ca000000   js 0xa210
0x0000a146      8b442414       mov eax, dword [rsp + 0x14]
0x0000a14a      85c0           test eax, eax
0x0000a14c      0f8436020000   je 0xa388
0x0000a152      498b4e18       mov rcx, qword [r14 + 0x18]
0x0000a156      4889c2         mov rdx, rax
0x0000a159      48f7d2         not rdx
0x0000a15c      4839d1         cmp rcx, rdx
0x0000a15f      0f8735020000   ja 0xa39a
0x0000a165      498b7e28       mov rdi, qword [r14 + 0x28]
0x0000a169      ba18000000     mov edx, 0x18
0x0000a16e      4801c1         add rcx, rax
0x0000a171      4889d0         mov rax, rdx
0x0000a174      31f6           xor esi, esi
0x0000a176      49894e18       mov qword [r14 + 0x18], rcx
0x0000a17a      4829fb         sub rbx, rdi
0x0000a17d      48f7e1         mul rcx
0x0000a180      0f8033020000   jo 0xa3b9
0x0000a186      4885c0         test rax, rax
0x0000a189      0f8834020000   js 0xa3c3
0x0000a18f      4885f6         test rsi, rsi
0x0000a192      0f852b020000   jne 0xa3c3
0x0000a198      488d3449       lea rsi, [rcx + rcx*2]
0x0000a19c      48c1e603       shl rsi, 3
0x0000a1a0      e8cb7e0000     call sym.xrealloc
0x0000a1a5      448b442414     mov r8d, dword [rsp + 0x14]
0x0000a1aa      4801c3         add rbx, rax
0x0000a1ad      49894628       mov qword [r14 + 0x28], rax
0x0000a1b1      4585c0         test r8d, r8d
0x0000a1b4      0f8436010000   je 0xa2f0
0x0000a1ba      488b442430     mov rax, qword [rsp + 0x30]
0x0000a1bf      488b542420     mov rdx, qword [rsp + 0x20]
0x0000a1c4      4c89e9         mov rcx, r13
0x0000a1c7      4829c1         sub rcx, rax
0x0000a1ca      4839ca         cmp rdx, rcx
0x0000a1cd      0f87d7000000   ja 0xa2aa
0x0000a1d3      31c9           xor ecx, ecx
0x0000a1d5      4c89e6         mov rsi, r12
0x0000a1d8      4585ff         test r15d, r15d
0x0000a1db      7473           je 0xa250
0x0000a1dd      448b4e28       mov r9d, dword [rsi + 0x28]
0x0000a1e1      4c8b5308       mov r10, qword [rbx + 8]
0x0000a1e5      488b3b         mov rdi, qword [rbx]
0x0000a1e8      4589cb         mov r11d, r9d
0x0000a1eb      4c01d7         add rdi, r10
0x0000a1ee      4183e3fe       and r11d, 0xfffffffe                    ; 4294967294
0x0000a1f2      44395b10       cmp dword [rbx + 0x10], r11d
0x0000a1f6      0f84d4000000   je 0xa2d0
0x0000a1fc      4839d7         cmp rdi, rdx
0x0000a1ff      765c           jbe 0xa25d
0x0000a201      4989fa         mov r10, rdi
0x0000a204      4929d2         sub r10, rdx
0x0000a207      4939c2         cmp r10, rax
0x0000a20a      0f8318010000   jae 0xa328
0x0000a210      31c0           xor eax, eax
0x0000a212      49837e0800     cmp qword [r14 + 8], 0
0x0000a217      7507           jne 0xa220
0x0000a219      41c6462001     mov byte [r14 + 0x20], 1
0x0000a21e      31c0           xor eax, eax
0x0000a220      488b9c240810.  mov rbx, qword [rsp + 0x1008]
0x0000a228      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000a231      0f8591010000   jne 0xa3c8
0x0000a237      4881c4181000.  add rsp, 0x1018
0x0000a23e      5b             pop rbx
0x0000a23f      5d             pop rbp
0x0000a240      415c           pop r12
0x0000a242      415d           pop r13
0x0000a244      415e           pop r14
0x0000a246      415f           pop r15
0x0000a248      c3             ret
0x0000a249      0f1f80000000.  nop dword [rax]
0x0000a250      498b7e08       mov rdi, qword [r14 + 8]
0x0000a254      4839d7         cmp rdi, rdx
0x0000a257      77a8           ja 0xa201
0x0000a259      448b4e28       mov r9d, dword [rsi + 0x28]
0x0000a25d      4489fe         mov esi, r15d
0x0000a260      4183c701       add r15d, 1
0x0000a264      488d3c76       lea rdi, [rsi + rsi*2]
0x0000a268      498b7628       mov rsi, qword [r14 + 0x28]
0x0000a26c      488d1cfe       lea rbx, [rsi + rdi*8]
0x0000a270      488913         mov qword [rbx], rdx
0x0000a273      48894308       mov qword [rbx + 8], rax
0x0000a277      44894b10       mov dword [rbx + 0x10], r9d
0x0000a27b      83c101         add ecx, 1
0x0000a27e      4439c1         cmp ecx, r8d
0x0000a281      736d           jae 0xa2f0
0x0000a283      89ca           mov edx, ecx
0x0000a285      4c89ef         mov rdi, r13
0x0000a288      488d04d50000.  lea rax, [rdx*8]
0x0000a290      4829d0         sub rax, rdx
0x0000a293      498d34c4       lea rsi, [r12 + rax*8]
0x0000a297      488b4610       mov rax, qword [rsi + 0x10]
0x0000a29b      488b16         mov rdx, qword [rsi]
0x0000a29e      4829c7         sub rdi, rax
0x0000a2a1      4839fa         cmp rdx, rdi
0x0000a2a4      0f862effffff   jbe 0xa1d8
0x0000a2aa      488d0dffdd00.  lea rcx, obj.__PRETTY_FUNCTION__.6956   ; 0x180b0 ; "extent_scan_read"
0x0000a2b1      488d3550dd00.  lea rsi, str..._coreutils_8.31_src_extent_scan.c ; 0x18008 ; "../coreutils-8.31/src/extent-scan.c"
0x0000a2b8      488d3da9dd00.  lea rdi, str.fm_extents_i_.fe_logical____OFF_T_MAX___fm_extents_i_.fe_length ; 0x18068 ; "fm_extents[i].fe_logical <= OFF_T_MAX - fm_extents[i].fe_length"
0x0000a2bf      ba8d000000     mov edx, 0x8d
0x0000a2c4      e81789ffff     call sym.imp.__assert_fail
0x0000a2c9      0f1f80000000.  nop dword [rax]
0x0000a2d0      4839d7         cmp rdi, rdx
0x0000a2d3      0f8523ffffff   jne 0xa1fc
0x0000a2d9      83c101         add ecx, 1
0x0000a2dc      4c01d0         add rax, r10
0x0000a2df      44894b10       mov dword [rbx + 0x10], r9d
0x0000a2e3      4439c1         cmp ecx, r8d
0x0000a2e6      48894308       mov qword [rbx + 8], rax
0x0000a2ea      7297           jb 0xa283
0x0000a2ec      0f1f4000       nop dword [rax]
0x0000a2f0      f6431001       test byte [rbx + 0x10], 1
0x0000a2f4      754a           jne 0xa340
0x0000a2f6      4183ff48       cmp r15d, 0x48
0x0000a2fa      410fb64621     movzx eax, byte [r14 + 0x21]
0x0000a2ff      765f           jbe 0xa360
0x0000a301      84c0           test al, al
0x0000a303      7540           jne 0xa345
0x0000a305      418d47ff       lea eax, [r15 - 1]
0x0000a309      498b5628       mov rdx, qword [r14 + 0x28]
0x0000a30d      488d0c40       lea rcx, [rax + rax*2]
0x0000a311      49894618       mov qword [r14 + 0x18], rax
0x0000a315      488b44cae8     mov rax, qword [rdx + rcx*8 - 0x18]
0x0000a31a      480344caf0     add rax, qword [rdx + rcx*8 - 0x10]
0x0000a31f      49894608       mov qword [r14 + 8], rax
0x0000a323      eb27           jmp 0xa34c
0x0000a325      0f1f00         nop dword [rax]
0x0000a328      4c29d0         sub rax, r10
0x0000a32b      48893e         mov qword [rsi], rdi
0x0000a32e      83e901         sub ecx, 1
0x0000a331      48894610       mov qword [rsi + 0x10], rax
0x0000a335      e941ffffff     jmp 0xa27b
0x0000a33a      660f1f440000   nop word [rax + rax]
0x0000a340      41c6462101     mov byte [r14 + 0x21], 1
0x0000a345      4489f8         mov eax, r15d
0x0000a348      49894618       mov qword [r14 + 0x18], rax
0x0000a34c      b801000000     mov eax, 1
0x0000a351      e9cafeffff     jmp 0xa220
0x0000a356      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a360      4489f9         mov ecx, r15d
0x0000a363      84c0           test al, al
0x0000a365      49894e18       mov qword [r14 + 0x18], rcx
0x0000a369      75e1           jne 0xa34c
0x0000a36b      488b5308       mov rdx, qword [rbx + 8]
0x0000a36f      480313         add rdx, qword [rbx]
0x0000a372      4183ff47       cmp r15d, 0x47
0x0000a376      49895608       mov qword [r14 + 8], rdx
0x0000a37a      0f8683fdffff   jbe 0xa103
0x0000a380      ebca           jmp 0xa34c
0x0000a382      660f1f440000   nop word [rax + rax]
0x0000a388      49837e0800     cmp qword [r14 + 8], 0
0x0000a38d      41c6462101     mov byte [r14 + 0x21], 1
0x0000a392      0f95c0         setne al
0x0000a395      e986feffff     jmp 0xa220
0x0000a39a      488d0d0fdd00.  lea rcx, obj.__PRETTY_FUNCTION__.6956   ; 0x180b0 ; "extent_scan_read"
0x0000a3a1      488d3560dc00.  lea rsi, str..._coreutils_8.31_src_extent_scan.c ; 0x18008 ; "../coreutils-8.31/src/extent-scan.c"
0x0000a3a8      488d3d81dc00.  lea rdi, str.scan__ei_count____SIZE_MAX___fiemap__fm_mapped_extents ; 0x18030 ; "scan->ei_count <= SIZE_MAX - fiemap->fm_mapped_extents"
0x0000a3af      ba7e000000     mov edx, 0x7e                           ; '~'
0x0000a3b4      e82788ffff     call sym.imp.__assert_fail
0x0000a3b9      be01000000     mov esi, 1
0x0000a3be      e9c3fdffff     jmp 0xa186
0x0000a3c3      e8987e0000     call sym.xalloc_die
0x0000a3c8      e86387ffff     call sym.imp.__stack_chk_fail
0x0000a3cd      0f1f00         nop dword [rax]
;-- try_link:
0x0000a3d0      4889f0         mov rax, rsi                            ; /src:-47
0x0000a3d3      4889f9         mov rcx, rdi
0x0000a3d6      8b5610         mov edx, dword [rsi + 0x10]
0x0000a3d9      448b4014       mov r8d, dword [rax + 0x14]
0x0000a3dd      488b7608       mov rsi, qword [rsi + 8]
0x0000a3e1      8b38           mov edi, dword [rax]
0x0000a3e3      e9d88affff     jmp sym.imp.linkat
0x0000a3e8      0f1f84000000.  nop dword [rax + rax]
;-- samedir_template:
0x0000a3f0      4154           push r12
0x0000a3f2      55             push rbp
0x0000a3f3      4889fd         mov rbp, rdi
0x0000a3f6      53             push rbx
0x0000a3f7      4989f4         mov r12, rsi
0x0000a3fa      e8a10f0000     call sym.last_component
0x0000a3ff      4829e8         sub rax, rbp
0x0000a402      488d7809       lea rdi, [rax + 9]
0x0000a406      4889c3         mov rbx, rax
0x0000a409      4881ff000100.  cmp rdi, 0x100
0x0000a410      760f           jbe 0xa421
0x0000a412      e8d989ffff     call sym.imp.malloc
0x0000a417      4989c4         mov r12, rax
0x0000a41a      31c0           xor eax, eax
0x0000a41c      4d85e4         test r12, r12
0x0000a41f      7422           je 0xa443
0x0000a421      4889da         mov rdx, rbx
0x0000a424      4889ee         mov rsi, rbp
0x0000a427      4c89e7         mov rdi, r12
0x0000a42a      e8f18affff     call sym.imp.mempcpy
0x0000a42f      48b943755858.  movabs rcx, 0x5858585858587543          ; 'CuXXXXXX'
0x0000a439      c6400800       mov byte [rax + 8], 0
0x0000a43d      488908         mov qword [rax], rcx
0x0000a440      4c89e0         mov rax, r12
0x0000a443      5b             pop rbx
0x0000a444      5d             pop rbp
0x0000a445      415c           pop r12
0x0000a447      c3             ret
0x0000a448      0f1f84000000.  nop dword [rax + rax]
;-- try_symlink:
0x0000a450      4889f0         mov rax, rsi
0x0000a453      4889fa         mov rdx, rdi
0x0000a456      8b7608         mov esi, dword [rsi + 8]
0x0000a459      488b38         mov rdi, qword [rax]
0x0000a45c      e90f8cffff     jmp sym.imp.symlinkat
0x0000a461      0f1f440000     nop dword [rax + rax]
0x0000a466      662e0f1f8400.  nop word cs:[rax + rax]
;-- force_linkat:
0x0000a470      4157           push r15
0x0000a472      4156           push r14
0x0000a474      4189fe         mov r14d, edi
0x0000a477      4155           push r13
0x0000a479      4154           push r12
0x0000a47b      4989f5         mov r13, rsi
0x0000a47e      55             push rbp
0x0000a47f      53             push rbx
0x0000a480      4889cb         mov rbx, rcx
0x0000a483      89d5           mov ebp, edx
0x0000a485      4589c4         mov r12d, r8d
0x0000a488      4881ec480100.  sub rsp, 0x148
0x0000a48f      8b8c24800100.  mov ecx, dword [rsp + 0x180]
0x0000a496      64488b042528.  mov rax, qword fs:[0x28]
0x0000a49f      488984243801.  mov qword [rsp + 0x138], rax
0x0000a4a7      31c0           xor eax, eax
0x0000a4a9      85c9           test ecx, ecx
0x0000a4ab      0f88af000000   js 0xa560
0x0000a4b1      4180f901       cmp r9b, 1
0x0000a4b5      7579           jne 0xa530
0x0000a4b7      83f911         cmp ecx, 0x11
0x0000a4ba      7574           jne 0xa530
0x0000a4bc      488d442430     lea rax, [rsp + 0x30]
0x0000a4c1      4889df         mov rdi, rbx
0x0000a4c4      4889c6         mov rsi, rax
0x0000a4c7      48890424       mov qword [rsp], rax
0x0000a4cb      e820ffffff     call sym.samedir_template
0x0000a4d0      4885c0         test rax, rax
0x0000a4d3      4989c7         mov r15, rax
0x0000a4d6      0f84e4000000   je 0xa5c0
0x0000a4dc      488d542410     lea rdx, [rsp + 0x10]
0x0000a4e1      488d0de8feff.  lea rcx, sym.try_link                   ; 0xa3d0 ; "H\x89\xf0H\x89\xf9\x8bV\x10D\x8b@\x14H\x8bv\b\x8b8\xe9\u060a\xff\xff\x0f\x1f\x84"
0x0000a4e8      31f6           xor esi, esi
0x0000a4ea      41b806000000   mov r8d, 6
0x0000a4f0      4889c7         mov rdi, rax
0x0000a4f3      4489742410     mov dword [rsp + 0x10], r14d
0x0000a4f8      4c896c2418     mov qword [rsp + 0x18], r13
0x0000a4fd      896c2420       mov dword [rsp + 0x20], ebp
0x0000a501      4489642424     mov dword [rsp + 0x24], r12d
0x0000a506      e805620000     call sym.try_tempname_len
0x0000a50b      85c0           test eax, eax
0x0000a50d      7479           je 0xa588
0x0000a50f      e83c84ffff     call sym.imp.__errno_location
0x0000a514      8b08           mov ecx, dword [rax]
0x0000a516      4c3b3c24       cmp r15, qword [rsp]
0x0000a51a      7414           je 0xa530
0x0000a51c      4c89ff         mov rdi, r15
0x0000a51f      890c24         mov dword [rsp], ecx
0x0000a522      e8a98bffff     call sym..plt.got
0x0000a527      8b0c24         mov ecx, dword [rsp]
0x0000a52a      660f1f440000   nop word [rax + rax]
0x0000a530      488b9c243801.  mov rbx, qword [rsp + 0x138]
0x0000a538      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000a541      89c8           mov eax, ecx
0x0000a543      0f8583000000   jne 0xa5cc
0x0000a549      4881c4480100.  add rsp, 0x148
0x0000a550      5b             pop rbx
0x0000a551      5d             pop rbp
0x0000a552      415c           pop r12
0x0000a554      415d           pop r13
0x0000a556      415e           pop r14
0x0000a558      415f           pop r15
0x0000a55a      c3             ret
0x0000a55b      0f1f440000     nop dword [rax + rax]
0x0000a560      4889d9         mov rcx, rbx
0x0000a563      44890c24       mov dword [rsp], r9d
0x0000a567      e85489ffff     call sym.imp.linkat
0x0000a56c      85c0           test eax, eax
0x0000a56e      89c1           mov ecx, eax
0x0000a570      74be           je 0xa530
0x0000a572      e8d983ffff     call sym.imp.__errno_location
0x0000a577      448b0c24       mov r9d, dword [rsp]
0x0000a57b      8b08           mov ecx, dword [rax]
0x0000a57d      e92fffffff     jmp 0xa4b1
0x0000a582      660f1f440000   nop word [rax + rax]
0x0000a588      4889d9         mov rcx, rbx
0x0000a58b      89ea           mov edx, ebp
0x0000a58d      4c89fe         mov rsi, r15
0x0000a590      89ef           mov edi, ebp
0x0000a592      e8698affff     call sym.imp.renameat
0x0000a597      85c0           test eax, eax
0x0000a599      b9ffffffff     mov ecx, 0xffffffff                     ; -1
0x0000a59e      7407           je 0xa5a7
0x0000a5a0      e8ab83ffff     call sym.imp.__errno_location
0x0000a5a5      8b08           mov ecx, dword [rax]
0x0000a5a7      31d2           xor edx, edx
0x0000a5a9      4c89fe         mov rsi, r15
0x0000a5ac      89ef           mov edi, ebp
0x0000a5ae      894c240c       mov dword [rsp + 0xc], ecx
0x0000a5b2      e81984ffff     call sym.imp.unlinkat
0x0000a5b7      8b4c240c       mov ecx, dword [rsp + 0xc]
0x0000a5bb      e956ffffff     jmp 0xa516
0x0000a5c0      e88b83ffff     call sym.imp.__errno_location
0x0000a5c5      8b08           mov ecx, dword [rax]
0x0000a5c7      e964ffffff     jmp 0xa530
0x0000a5cc      e85f85ffff     call sym.imp.__stack_chk_fail
0x0000a5d1      0f1f440000     nop dword [rax + rax]
0x0000a5d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- force_symlinkat:
0x0000a5e0      4156           push r14
0x0000a5e2      4155           push r13
0x0000a5e4      4154           push r12
0x0000a5e6      55             push rbp
0x0000a5e7      4989fc         mov r12, rdi
0x0000a5ea      53             push rbx
0x0000a5eb      89f5           mov ebp, esi
0x0000a5ed      4889d3         mov rbx, rdx
0x0000a5f0      4881ec300100.  sub rsp, 0x130
0x0000a5f7      64488b042528.  mov rax, qword fs:[0x28]
0x0000a600      488984242801.  mov qword [rsp + 0x128], rax
0x0000a608      31c0           xor eax, eax
0x0000a60a      4585c0         test r8d, r8d
0x0000a60d      0f88a5000000   js 0xa6b8
0x0000a613      80f901         cmp cl, 1
0x0000a616      7570           jne 0xa688
0x0000a618      4183f811       cmp r8d, 0x11
0x0000a61c      756a           jne 0xa688
0x0000a61e      4c8d742420     lea r14, [rsp + 0x20]
0x0000a623      4889df         mov rdi, rbx
0x0000a626      4c89f6         mov rsi, r14
0x0000a629      e8c2fdffff     call sym.samedir_template
0x0000a62e      4885c0         test rax, rax
0x0000a631      4989c5         mov r13, rax
0x0000a634      0f84e6000000   je 0xa720
0x0000a63a      488d542410     lea rdx, [rsp + 0x10]
0x0000a63f      488d0d0afeff.  lea rcx, sym.try_symlink                ; 0xa450 ; "H\x89\xf0H\x89\xfa\x8bv\bH\x8b8\xe9\x0f\x8c\xff\xff\x0f\x1fD"
0x0000a646      31f6           xor esi, esi
0x0000a648      41b806000000   mov r8d, 6
0x0000a64e      4889c7         mov rdi, rax
0x0000a651      4c89642410     mov qword [rsp + 0x10], r12
0x0000a656      896c2418       mov dword [rsp + 0x18], ebp
0x0000a65a      e8b1600000     call sym.try_tempname_len
0x0000a65f      85c0           test eax, eax
0x0000a661      747d           je 0xa6e0
0x0000a663      e8e882ffff     call sym.imp.__errno_location
0x0000a668      448b00         mov r8d, dword [rax]
0x0000a66b      4d39f5         cmp r13, r14
0x0000a66e      7418           je 0xa688
0x0000a670      4c89ef         mov rdi, r13
0x0000a673      448944240c     mov dword [rsp + 0xc], r8d
0x0000a678      e8538affff     call sym..plt.got
0x0000a67d      448b44240c     mov r8d, dword [rsp + 0xc]
0x0000a682      660f1f440000   nop word [rax + rax]
0x0000a688      488b9c242801.  mov rbx, qword [rsp + 0x128]
0x0000a690      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000a699      4489c0         mov eax, r8d
0x0000a69c      0f858b000000   jne 0xa72d
0x0000a6a2      4881c4300100.  add rsp, 0x130
0x0000a6a9      5b             pop rbx
0x0000a6aa      5d             pop rbp
0x0000a6ab      415c           pop r12
0x0000a6ad      415d           pop r13
0x0000a6af      415e           pop r14
0x0000a6b1      c3             ret
0x0000a6b2      660f1f440000   nop word [rax + rax]
0x0000a6b8      894c240c       mov dword [rsp + 0xc], ecx
0x0000a6bc      e8af89ffff     call sym.imp.symlinkat
0x0000a6c1      85c0           test eax, eax
0x0000a6c3      4189c0         mov r8d, eax
0x0000a6c6      74c0           je 0xa688
0x0000a6c8      e88382ffff     call sym.imp.__errno_location
0x0000a6cd      8b4c240c       mov ecx, dword [rsp + 0xc]
0x0000a6d1      448b00         mov r8d, dword [rax]
0x0000a6d4      e93affffff     jmp 0xa613
0x0000a6d9      0f1f80000000.  nop dword [rax]
0x0000a6e0      4889d9         mov rcx, rbx
0x0000a6e3      89ea           mov edx, ebp
0x0000a6e5      4c89ee         mov rsi, r13
0x0000a6e8      89ef           mov edi, ebp
0x0000a6ea      e81189ffff     call sym.imp.renameat
0x0000a6ef      85c0           test eax, eax
0x0000a6f1      41b8ffffffff   mov r8d, 0xffffffff                     ; -1
0x0000a6f7      0f846effffff   je 0xa66b
0x0000a6fd      e84e82ffff     call sym.imp.__errno_location
0x0000a702      448b00         mov r8d, dword [rax]
0x0000a705      31d2           xor edx, edx
0x0000a707      4c89ee         mov rsi, r13
0x0000a70a      89ef           mov edi, ebp
0x0000a70c      448944240c     mov dword [rsp + 0xc], r8d
0x0000a711      e8ba82ffff     call sym.imp.unlinkat
0x0000a716      448b44240c     mov r8d, dword [rsp + 0xc]
0x0000a71b      e94bffffff     jmp 0xa66b
0x0000a720      e82b82ffff     call sym.imp.__errno_location
0x0000a725      448b00         mov r8d, dword [rax]
0x0000a728      e95bffffff     jmp 0xa688
0x0000a72d      e8fe83ffff     call sym.imp.__stack_chk_fail
0x0000a732      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a73c      0f1f4000       nop dword [rax]
;-- copy_acl:
0x0000a740      4154           push r12                                ; ../coreutils-8.31/lib/copy-acl.c:45
0x0000a742      55             push rbp
0x0000a743      4989fc         mov r12, rdi
0x0000a746      53             push rbx
0x0000a747      4889d5         mov rbp, rdx
0x0000a74a      e821320000     call sym.qcopy_acl                      ; ../coreutils-8.31/lib/copy-acl.c:46
0x0000a74f      83f8fe         cmp eax, 0xfffffffe                     ; ../coreutils-8.31/lib/copy-acl.c:47
0x0000a752      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/copy-acl.c:46
0x0000a754      744a           je 0xa7a0                               ; ../coreutils-8.31/lib/copy-acl.c:47
0x0000a756      83f8ff         cmp eax, 0xffffffff
0x0000a759      7537           jne 0xa792
0x0000a75b      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/copy-acl.c:54
0x0000a75e      e85d4f0000     call sym.quote
0x0000a763      488d359cd700.  lea rsi, str.preserving_permissions_for__s ; 0x17f06 ; "preserving permissions for %s"
0x0000a76a      ba05000000     mov edx, 5
0x0000a76f      31ff           xor edi, edi
0x0000a771      4989c4         mov r12, rax
0x0000a774      e85783ffff     call sym.imp.dcgettext
0x0000a779      4889c5         mov rbp, rax
0x0000a77c      e8cf81ffff     call sym.imp.__errno_location
0x0000a781      8b30           mov esi, dword [rax]
0x0000a783      4c89e1         mov rcx, r12
0x0000a786      4889ea         mov rdx, rbp
0x0000a789      31ff           xor edi, edi
0x0000a78b      31c0           xor eax, eax
0x0000a78d      e89e87ffff     call sym.imp.error
0x0000a792      89d8           mov eax, ebx                            ; ../coreutils-8.31/lib/copy-acl.c:61
0x0000a794      5b             pop rbx
0x0000a795      5d             pop rbp
0x0000a796      415c           pop r12
0x0000a798      c3             ret
0x0000a799      0f1f80000000.  nop dword [rax]
0x0000a7a0      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/copy-acl.c:50
0x0000a7a3      e8184f0000     call sym.quote
0x0000a7a8      4889c5         mov rbp, rax
0x0000a7ab      e8a081ffff     call sym.imp.__errno_location
0x0000a7b0      8b30           mov esi, dword [rax]
0x0000a7b2      488d15a7e600.  lea rdx, [0x00018e60]                   ; "%s"
0x0000a7b9      4889e9         mov rcx, rbp
0x0000a7bc      31c0           xor eax, eax
0x0000a7be      31ff           xor edi, edi
0x0000a7c0      e86b87ffff     call sym.imp.error
0x0000a7c5      89d8           mov eax, ebx                            ; ../coreutils-8.31/lib/copy-acl.c:61
0x0000a7c7      5b             pop rbx
0x0000a7c8      5d             pop rbp
0x0000a7c9      415c           pop r12
0x0000a7cb      c3             ret
0x0000a7cc      0f1f4000       nop dword [rax]
;-- set_acl:
0x0000a7d0      4154           push r12                                ; ../coreutils-8.31/lib/set-acl.c:43
0x0000a7d2      55             push rbp
0x0000a7d3      4889fd         mov rbp, rdi
0x0000a7d6      53             push rbx
0x0000a7d7      e814320000     call sym.qset_acl                       ; ../coreutils-8.31/lib/set-acl.c:44
0x0000a7dc      85c0           test eax, eax                           ; ../coreutils-8.31/lib/set-acl.c:45
0x0000a7de      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/set-acl.c:44
0x0000a7e0      7437           je 0xa819                               ; ../coreutils-8.31/lib/set-acl.c:45
0x0000a7e2      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/set-acl.c:46
0x0000a7e5      e8d64e0000     call sym.quote
0x0000a7ea      488d3530d600.  lea rsi, str.setting_permissions_for__s ; 0x17e21 ; "setting permissions for %s"
0x0000a7f1      ba05000000     mov edx, 5
0x0000a7f6      31ff           xor edi, edi
0x0000a7f8      4989c4         mov r12, rax
0x0000a7fb      e8d082ffff     call sym.imp.dcgettext
0x0000a800      4889c5         mov rbp, rax
0x0000a803      e84881ffff     call sym.imp.__errno_location
0x0000a808      8b30           mov esi, dword [rax]
0x0000a80a      4c89e1         mov rcx, r12
0x0000a80d      4889ea         mov rdx, rbp
0x0000a810      31ff           xor edi, edi
0x0000a812      31c0           xor eax, eax
0x0000a814      e81787ffff     call sym.imp.error
0x0000a819      89d8           mov eax, ebx                            ; ../coreutils-8.31/lib/set-acl.c:48
0x0000a81b      5b             pop rbx
0x0000a81c      5d             pop rbp
0x0000a81d      415c           pop r12
0x0000a81f      c3             ret
;-- areadlink_with_size:
0x0000a820      4157           push r15
0x0000a822      4156           push r14
0x0000a824      b801040000     mov eax, 0x401                          ; ../coreutils-8.31/lib/areadlink-with-size.c:64
0x0000a829      4155           push r13                                ; ../coreutils-8.31/lib/areadlink-with-size.c:53
0x0000a82b      4154           push r12
0x0000a82d      4989fd         mov r13, rdi
0x0000a830      55             push rbp
0x0000a831      53             push rbx
0x0000a832      488d5e01       lea rbx, [rsi + 1]                      ; ../coreutils-8.31/lib/areadlink-with-size.c:64
0x0000a836      49beffffffff.  movabs r14, 0x3fffffffffffffff          ; ../coreutils-8.31/lib/areadlink-with-size.c:94 ; 4611686018427387903
0x0000a840      49bffeffffff.  movabs r15, 0x7ffffffffffffffe          ; ../coreutils-8.31/lib/areadlink-with-size.c:96 ; 9223372036854775806
0x0000a84a      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/areadlink-with-size.c:53
0x0000a84e      4881fe010400.  cmp rsi, 0x401                          ; ../coreutils-8.31/lib/areadlink-with-size.c:64
0x0000a855      480f43d8       cmovae rbx, rax
0x0000a859      0f1f80000000.  nop dword [rax]
0x0000a860      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/areadlink-with-size.c:70
0x0000a863      e88885ffff     call sym.imp.malloc
0x0000a868      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/areadlink-with-size.c:72
0x0000a86b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/areadlink-with-size.c:70
0x0000a86e      743b           je 0xa8ab                               ; ../coreutils-8.31/lib/areadlink-with-size.c:72
0x0000a870      4889da         mov rdx, rbx
0x0000a873      4889c6         mov rsi, rax
0x0000a876      4c89ef         mov rdi, r13
0x0000a879      e87281ffff     call sym.imp.readlink
0x0000a87e      4885c0         test rax, rax
0x0000a881      4989c4         mov r12, rax                            ; unistd.h:-169
0x0000a884      7852           js 0xa8d8
0x0000a886      4c39e3         cmp rbx, r12                            ; unistd.h:-163
0x0000a889      7765           ja 0xa8f0
0x0000a88b      4889ef         mov rdi, rbp
0x0000a88e      e83d88ffff     call sym..plt.got                       ; unistd.h:-162
0x0000a893      4c39f3         cmp rbx, r14                            ; unistd.h:-161
0x0000a896      7728           ja 0xa8c0                               ; unistd.h:-186
0x0000a898      4801db         add rbx, rbx
0x0000a89b      4889df         mov rdi, rbx
0x0000a89e      e84d85ffff     call sym.imp.malloc                     ; unistd.h:-184
0x0000a8a3      4885c0         test rax, rax
0x0000a8a6      4889c5         mov rbp, rax                            ; unistd.h:-152
0x0000a8a9      75c5           jne 0xa870
0x0000a8ab      4883c408       add rsp, 8
0x0000a8af      4889e8         mov rax, rbp
0x0000a8b2      5b             pop rbx
0x0000a8b3      5d             pop rbp
0x0000a8b4      415c           pop r12
0x0000a8b6      415d           pop r13
0x0000a8b8      415e           pop r14
0x0000a8ba      415f           pop r15
0x0000a8bc      c3             ret
0x0000a8bd      0f1f00         nop dword [rax]
0x0000a8c0      4c39fb         cmp rbx, r15                            ; unistd.h:-159
0x0000a8c3      773b           ja 0xa900
0x0000a8c5      48bbffffffff.  movabs rbx, 0x7fffffffffffffff          ; 9223372036854775807
0x0000a8cf      eb8f           jmp 0xa860
0x0000a8d1      0f1f80000000.  nop dword [rax]
0x0000a8d8      e87380ffff     call sym.imp.__errno_location
0x0000a8dd      833822         cmp dword [rax], 0x22                   ; unistd.h:-174
0x0000a8e0      74a4           je 0xa886                               ; unistd.h:-172
0x0000a8e2      4889ef         mov rdi, rbp                            ; unistd.h:-174
0x0000a8e5      31ed           xor ebp, ebp
0x0000a8e7      e8e487ffff     call sym..plt.got                       ; unistd.h:-172
0x0000a8ec      ebbd           jmp 0xa8ab
0x0000a8ee      6690           nop
0x0000a8f0      42c644250000   mov byte [rbp + r12], 0
0x0000a8f6      ebb3           jmp 0xa8ab
0x0000a8f8      0f1f84000000.  nop dword [rax + rax]
0x0000a900      e84b80ffff     call sym.imp.__errno_location           ; unistd.h:-155
0x0000a905      31ed           xor ebp, ebp
0x0000a907      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0000a90d      eb9c           jmp 0xa8ab
0x0000a90f      90             nop
;-- set_simple_backup_suffix:
0x0000a910      4885ff         test rdi, rdi
0x0000a913      53             push rbx
0x0000a914      4889fb         mov rbx, rdi
0x0000a917      7427           je 0xa940
0x0000a919      803b00         cmp byte [rbx], 0
0x0000a91c      7512           jne 0xa930
0x0000a91e      488d1da1d700.  lea rbx, [0x000180c6]                   ; "~"
0x0000a925      48891d744c21.  mov qword [obj.simple_backup_suffix], rbx ; [0x21f5a0:8]=0
0x0000a92c      5b             pop rbx
0x0000a92d      c3             ret
0x0000a92e      6690           nop
0x0000a930      4889df         mov rdi, rbx
0x0000a933      e8680a0000     call sym.last_component
0x0000a938      4839d8         cmp rax, rbx
0x0000a93b      75e1           jne 0xa91e
0x0000a93d      ebe6           jmp 0xa925
0x0000a93f      90             nop
0x0000a940      488d3d81d700.  lea rdi, str.SIMPLE_BACKUP_SUFFIX       ; 0x180c8 ; "SIMPLE_BACKUP_SUFFIX"
0x0000a947      e8b47fffff     call sym.imp.getenv
0x0000a94c      4885c0         test rax, rax
0x0000a94f      4889c3         mov rbx, rax
0x0000a952      74ca           je 0xa91e
0x0000a954      ebc3           jmp 0xa919
0x0000a956      662e0f1f8400.  nop word cs:[rax + rax]
;-- backupfile_internal:
0x0000a960      4157           push r15
0x0000a962      4156           push r14
0x0000a964      4155           push r13
0x0000a966      4154           push r12
0x0000a968      55             push rbp
0x0000a969      53             push rbx
0x0000a96a      4889f3         mov rbx, rsi
0x0000a96d      4881ec880000.  sub rsp, 0x88
0x0000a974      897c2464       mov dword [rsp + 0x64], edi
0x0000a978      4889f7         mov rdi, rsi
0x0000a97b      4889742410     mov qword [rsp + 0x10], rsi
0x0000a980      89542420       mov dword [rsp + 0x20], edx
0x0000a984      884c2463       mov byte [rsp + 0x63], cl
0x0000a988      64488b042528.  mov rax, qword fs:[0x28]
0x0000a991      4889442478     mov qword [rsp + 0x78], rax
0x0000a996      31c0           xor eax, eax
0x0000a998      e8030a0000     call sym.last_component
0x0000a99d      4889c7         mov rdi, rax
0x0000a9a0      4989c6         mov r14, rax
0x0000a9a3      e84881ffff     call sym.imp.strlen
0x0000a9a8      488b3df14b21.  mov rdi, qword [obj.simple_backup_suffix] ; [0x21f5a0:8]=0
0x0000a9af      4929de         sub r14, rbx
0x0000a9b2      4c01f0         add rax, r14
0x0000a9b5      4889442418     mov qword [rsp + 0x18], rax
0x0000a9ba      4885ff         test rdi, rdi
0x0000a9bd      0f8481050000   je 0xaf44
0x0000a9c3      e82881ffff     call sym.imp.strlen
0x0000a9c8      488b742418     mov rsi, qword [rsp + 0x18]
0x0000a9cd      4883c001       add rax, 1
0x0000a9d1      4883f809       cmp rax, 9
0x0000a9d5      4889442450     mov qword [rsp + 0x50], rax
0x0000a9da      488d5601       lea rdx, [rsi + 1]
0x0000a9de      4889c6         mov rsi, rax
0x0000a9e1      b809000000     mov eax, 9
0x0000a9e6      480f43c6       cmovae rax, rsi
0x0000a9ea      4801d0         add rax, rdx
0x0000a9ed      4889542438     mov qword [rsp + 0x38], rdx
0x0000a9f2      4889c7         mov rdi, rax
0x0000a9f5      4889442440     mov qword [rsp + 0x40], rax
0x0000a9fa      e8f183ffff     call sym.imp.malloc
0x0000a9ff      4885c0         test rax, rax
0x0000aa02      4989c7         mov r15, rax
0x0000aa05      0f84e5020000   je 0xacf0
0x0000aa0b      488d442474     lea rax, [rsp + 0x74]
0x0000aa10      c7442474ffff.  mov dword [rsp + 0x74], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x0000aa18      48c744244800.  mov qword [rsp + 0x48], 0
0x0000aa21      4531ed         xor r13d, r13d
0x0000aa24      4889442468     mov qword [rsp + 0x68], rax
0x0000aa29      488b542438     mov rdx, qword [rsp + 0x38]
0x0000aa2e      488b742410     mov rsi, qword [rsp + 0x10]
0x0000aa33      4c89ff         mov rdi, r15
0x0000aa36      e84583ffff     call sym.imp.memcpy
0x0000aa3b      837c242001     cmp dword [rsp + 0x20], 1
0x0000aa40      0f84da020000   je 0xad20
0x0000aa46      4b8d2c37       lea rbp, [r15 + r14]
0x0000aa4a      4889ef         mov rdi, rbp
0x0000aa4d      e8ae090000     call sym.base_len
0x0000aa52      4d85ed         test r13, r13
0x0000aa55      4989c4         mov r12, rax
0x0000aa58      0f84a2030000   je 0xae00
0x0000aa5e      4c89ef         mov rdi, r13
0x0000aa61      e8da81ffff     call sym.imp.rewinddir
0x0000aa66      488b442440     mov rax, qword [rsp + 0x40]
0x0000aa6b      48c744242801.  mov qword [rsp + 0x28], 1
0x0000aa74      c74424240200.  mov dword [rsp + 0x24], 2
0x0000aa7c      4889442430     mov qword [rsp + 0x30], rax
0x0000aa81      498d442404     lea rax, [r12 + 4]
0x0000aa86      4889442408     mov qword [rsp + 8], rax
0x0000aa8b      0f1f440000     nop dword [rax + rax]
0x0000aa90      4c89ef         mov rdi, r13
0x0000aa93      e84883ffff     call sym.imp.readdir
0x0000aa98      4885c0         test rax, rax
0x0000aa9b      0f84af010000   je 0xac50
0x0000aaa1      488d5813       lea rbx, [rax + 0x13]
0x0000aaa5      4889df         mov rdi, rbx
0x0000aaa8      e84380ffff     call sym.imp.strlen
0x0000aaad      483b442408     cmp rax, qword [rsp + 8]
0x0000aab2      72dc           jb 0xaa90
0x0000aab4      498d6c2402     lea rbp, [r12 + 2]
0x0000aab9      4b8d3c37       lea rdi, [r15 + r14]
0x0000aabd      4889de         mov rsi, rbx
0x0000aac0      4889ea         mov rdx, rbp
0x0000aac3      e8c881ffff     call sym.imp.memcmp
0x0000aac8      85c0           test eax, eax
0x0000aaca      75c4           jne 0xaa90
0x0000aacc      4801eb         add rbx, rbp
0x0000aacf      0fb603         movzx eax, byte [rbx]
0x0000aad2      8d50cf         lea edx, [rax - 0x31]
0x0000aad5      80fa08         cmp dl, 8
0x0000aad8      77b6           ja 0xaa90
0x0000aada      3c39           cmp al, 0x39
0x0000aadc      0fbe4301       movsx eax, byte [rbx + 1]
0x0000aae0      bd01000000     mov ebp, 1
0x0000aae5      410f94c0       sete r8b
0x0000aae9      89c1           mov ecx, eax
0x0000aaeb      83e830         sub eax, 0x30
0x0000aaee      83f809         cmp eax, 9
0x0000aaf1      7720           ja 0xab13
0x0000aaf3      0f1f440000     nop dword [rax + rax]
0x0000aaf8      80f939         cmp cl, 0x39
0x0000aafb      0f94c0         sete al
0x0000aafe      4883c501       add rbp, 1
0x0000ab02      4121c0         and r8d, eax
0x0000ab05      0fbe042b       movsx eax, byte [rbx + rbp]
0x0000ab09      89c1           mov ecx, eax
0x0000ab0b      83e830         sub eax, 0x30
0x0000ab0e      83f809         cmp eax, 9
0x0000ab11      76e5           jbe 0xaaf8
0x0000ab13      80f97e         cmp cl, 0x7e
0x0000ab16      0f8574ffffff   jne 0xaa90
0x0000ab1c      807c2b0100     cmp byte [rbx + rbp + 1], 0
0x0000ab21      0f8569ffffff   jne 0xaa90
0x0000ab27      488b542428     mov rdx, qword [rsp + 0x28]
0x0000ab2c      4839ea         cmp rdx, rbp
0x0000ab2f      722b           jb 0xab5c
0x0000ab31      4488442458     mov byte [rsp + 0x58], r8b
0x0000ab36      0f8554ffffff   jne 0xaa90
0x0000ab3c      488b442418     mov rax, qword [rsp + 0x18]
0x0000ab41      4889de         mov rsi, rbx
0x0000ab44      498d7c0702     lea rdi, [r15 + rax + 2]
0x0000ab49      e84281ffff     call sym.imp.memcmp
0x0000ab4e      85c0           test eax, eax
0x0000ab50      440fb6442458   movzx r8d, byte [rsp + 0x58]
0x0000ab56      0f8f34ffffff   jg 0xaa90
0x0000ab5c      410fb6f0       movzx esi, r8b
0x0000ab60      450fb6c8       movzx r9d, r8b
0x0000ab64      89742424       mov dword [rsp + 0x24], esi
0x0000ab68      488b742418     mov rsi, qword [rsp + 0x18]
0x0000ab6d      498d0429       lea rax, [r9 + rbp]
0x0000ab71      4889442428     mov qword [rsp + 0x28], rax
0x0000ab76      488d4c0604     lea rcx, [rsi + rax + 4]
0x0000ab7b      483b4c2430     cmp rcx, qword [rsp + 0x30]
0x0000ab80      0f8632030000   jbe 0xaeb8
0x0000ab86      ba02000000     mov edx, 2
0x0000ab8b      31f6           xor esi, esi
0x0000ab8d      4889d0         mov rax, rdx
0x0000ab90      48f7e1         mul rcx
0x0000ab93      0f80ca030000   jo 0xaf63
0x0000ab99      4885c0         test rax, rax
0x0000ab9c      0f88ae020000   js 0xae50
0x0000aba2      4885f6         test rsi, rsi
0x0000aba5      0f85a5020000   jne 0xae50
0x0000abab      488d0409       lea rax, [rcx + rcx]
0x0000abaf      4889442430     mov qword [rsp + 0x30], rax
0x0000abb4      488b742430     mov rsi, qword [rsp + 0x30]
0x0000abb9      4c89ff         mov rdi, r15
0x0000abbc      4c894c2458     mov qword [rsp + 0x58], r9
0x0000abc1      e8ca82ffff     call sym.imp.realloc
0x0000abc6      4885c0         test rax, rax
0x0000abc9      4989c0         mov r8, rax
0x0000abcc      4c8b4c2458     mov r9, qword [rsp + 0x58]
0x0000abd1      0f8489020000   je 0xae60
0x0000abd7      488b442418     mov rax, qword [rsp + 0x18]
0x0000abdc      488d5502       lea rdx, [rbp + 2]
0x0000abe0      4c89442458     mov qword [rsp + 0x58], r8
0x0000abe5      4889de         mov rsi, rbx
0x0000abe8      4c01c0         add rax, r8
0x0000abeb      41b82e7e0000   mov r8d, 0x7e2e                         ; '.~'
0x0000abf1      4a8d4c0802     lea rcx, [rax + r9 + 2]
0x0000abf6      66448900       mov word [rax], r8w
0x0000abfa      c6400230       mov byte [rax + 2], 0x30                ; '0'
                                                                       ; [0x30:1]=0
0x0000abfe      4889cf         mov rdi, rcx
0x0000ac01      e87a81ffff     call sym.imp.memcpy
0x0000ac06      4801c5         add rbp, rax
0x0000ac09      4c8b442458     mov r8, qword [rsp + 0x58]
0x0000ac0e      0fb655ff       movzx edx, byte [rbp - 1]
0x0000ac12      488d45ff       lea rax, [rbp - 1]
0x0000ac16      80fa39         cmp dl, 0x39
0x0000ac19      7514           jne 0xac2f
0x0000ac1b      0f1f440000     nop dword [rax + rax]
0x0000ac20      c60030         mov byte [rax], 0x30                    ; '0'
                                                                       ; [0x30:1]=0
0x0000ac23      4883e801       sub rax, 1
0x0000ac27      0fb610         movzx edx, byte [rax]
0x0000ac2a      80fa39         cmp dl, 0x39
0x0000ac2d      74f1           je 0xac20
0x0000ac2f      83c201         add edx, 1
0x0000ac32      4c89ef         mov rdi, r13
0x0000ac35      4d89c7         mov r15, r8
0x0000ac38      8810           mov byte [rax], dl
0x0000ac3a      e8a181ffff     call sym.imp.readdir
0x0000ac3f      4885c0         test rax, rax
0x0000ac42      0f8559feffff   jne 0xaaa1
0x0000ac48      0f1f84000000.  nop dword [rax + rax]
0x0000ac50      8b442424       mov eax, dword [rsp + 0x24]
0x0000ac54      83f802         cmp eax, 2
0x0000ac57      0f84e3000000   je 0xad40
0x0000ac5d      83f803         cmp eax, 3
0x0000ac60      0f84fa010000   je 0xae60
0x0000ac66      83f801         cmp eax, 1
0x0000ac69      0f8401010000   je 0xad70
0x0000ac6f      807c246300     cmp byte [rsp + 0x63], 0
0x0000ac74      0f84b4020000   je 0xaf2e
0x0000ac7a      8b542474       mov edx, dword [rsp + 0x74]
0x0000ac7e      4b8d0c37       lea rcx, [r15 + r14]
0x0000ac82      85d2           test edx, edx
0x0000ac84      7913           jns 0xac99
0x0000ac86      c74424749cff.  mov dword [rsp + 0x74], 0xffffff9c      ; [0xffffff9c:4]=-1 ; 4294967196
0x0000ac8e      4c89f9         mov rcx, r15
0x0000ac91      ba9cffffff     mov edx, 0xffffff9c                     ; 4294967196
0x0000ac96      4531f6         xor r14d, r14d
0x0000ac99      4531c0         xor r8d, r8d
0x0000ac9c      837c242001     cmp dword [rsp + 0x20], 1
0x0000aca1      488b742410     mov rsi, qword [rsp + 0x10]
0x0000aca6      bf9cffffff     mov edi, 0xffffff9c                     ; 4294967196
0x0000acab      410f95c0       setne r8b
0x0000acaf      e82c4a0000     call sym.renameatu
0x0000acb4      85c0           test eax, eax
0x0000acb6      0f8472020000   je 0xaf2e
0x0000acbc      e88f7cffff     call sym.imp.__errno_location
0x0000acc1      8b28           mov ebp, dword [rax]
0x0000acc3      83fd11         cmp ebp, 0x11
0x0000acc6      0f845dfdffff   je 0xaa29
0x0000accc      4d85ed         test r13, r13
0x0000accf      4889c3         mov rbx, rax
0x0000acd2      7408           je 0xacdc
0x0000acd4      4c89ef         mov rdi, r13
0x0000acd7      e8847fffff     call sym.imp.closedir
0x0000acdc      4c89ff         mov rdi, r15
0x0000acdf      4531ff         xor r15d, r15d
0x0000ace2      e8e983ffff     call sym..plt.got
0x0000ace7      892b           mov dword [rbx], ebp
0x0000ace9      0f1f80000000.  nop dword [rax]
0x0000acf0      488b742478     mov rsi, qword [rsp + 0x78]
0x0000acf5      644833342528.  xor rsi, qword fs:[0x28]
0x0000acfe      4c89f8         mov rax, r15
0x0000ad01      0f8566020000   jne 0xaf6d
0x0000ad07      4881c4880000.  add rsp, 0x88
0x0000ad0e      5b             pop rbx
0x0000ad0f      5d             pop rbp
0x0000ad10      415c           pop r12
0x0000ad12      415d           pop r13
0x0000ad14      415e           pop r14
0x0000ad16      415f           pop r15
0x0000ad18      c3             ret
0x0000ad19      0f1f80000000.  nop dword [rax]
0x0000ad20      488b442418     mov rax, qword [rsp + 0x18]
0x0000ad25      488b542450     mov rdx, qword [rsp + 0x50]
0x0000ad2a      488b356f4821.  mov rsi, qword [obj.simple_backup_suffix] ; [0x21f5a0:8]=0
0x0000ad31      498d3c07       lea rdi, [r15 + rax]
0x0000ad35      e84680ffff     call sym.imp.memcpy
0x0000ad3a      e930ffffff     jmp 0xac6f
0x0000ad3f      90             nop
0x0000ad40      837c242002     cmp dword [rsp + 0x20], 2
0x0000ad45      7529           jne 0xad70
0x0000ad47      488b442418     mov rax, qword [rsp + 0x18]
0x0000ad4c      488b542450     mov rdx, qword [rsp + 0x50]
0x0000ad51      488b35484821.  mov rsi, qword [obj.simple_backup_suffix] ; [0x21f5a0:8]=0
0x0000ad58      498d3c07       lea rdi, [r15 + rax]
0x0000ad5c      e81f80ffff     call sym.imp.memcpy
0x0000ad61      c74424200100.  mov dword [rsp + 0x20], 1
0x0000ad69      0f1f80000000.  nop dword [rax]
0x0000ad70      4c89ff         mov rdi, r15
0x0000ad73      e828060000     call sym.last_component
0x0000ad78      4889c7         mov rdi, rax
0x0000ad7b      4889c3         mov rbx, rax
0x0000ad7e      e87d060000     call sym.base_len
0x0000ad83      4883f80e       cmp rax, 0xe
0x0000ad87      4889c5         mov rbp, rax
0x0000ad8a      0f86dffeffff   jbe 0xac6f
0x0000ad90      48837c244800   cmp qword [rsp + 0x48], 0
0x0000ad96      0f85e4000000   jne 0xae80
0x0000ad9c      8b7c2474       mov edi, dword [rsp + 0x74]
0x0000ada0      897c2408       mov dword [rsp + 8], edi
0x0000ada4      e8a77bffff     call sym.imp.__errno_location
0x0000ada9      8b7c2408       mov edi, dword [rsp + 8]
0x0000adad      4989c4         mov r12, rax
0x0000adb0      85ff           test edi, edi
0x0000adb2      0f883a010000   js 0xaef2
0x0000adb8      c70000000000   mov dword [rax], 0
0x0000adbe      be03000000     mov esi, 3
0x0000adc3      e8687fffff     call sym.imp.fpathconf
0x0000adc8      418b0c24       mov ecx, dword [r12]
0x0000adcc      31d2           xor edx, edx
0x0000adce      85c9           test ecx, ecx
0x0000add0      0f94c2         sete dl
0x0000add3      4829d0         sub rax, rdx
0x0000add6      4885c0         test rax, rax
0x0000add9      4889442448     mov qword [rsp + 0x48], rax
0x0000adde      0f899c000000   jns 0xae80
0x0000ade4      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000ade8      0f8567010000   jne 0xaf55
0x0000adee      48c7442448ff.  mov qword [rsp + 0x48], 0xffffffffffffffff
0x0000adf7      e973feffff     jmp 0xac6f
0x0000adfc      0f1f4000       nop dword [rax]
0x0000ae00      488b4c2468     mov rcx, qword [rsp + 0x68]
0x0000ae05      8b7c2464       mov edi, dword [rsp + 0x64]
0x0000ae09      41b92e000000   mov r9d, 0x2e                           ; '.'
0x0000ae0f      31d2           xor edx, edx
0x0000ae11      0fb75d00       movzx ebx, word [rbp]
0x0000ae15      4c89fe         mov rsi, r15
0x0000ae18      6644894d00     mov word [rbp], r9w
0x0000ae1d      e82e2a0000     call sym.opendirat
0x0000ae22      4885c0         test rax, rax
0x0000ae25      4989c5         mov r13, rax
0x0000ae28      4a8d542500     lea rdx, [rbp + r12]
0x0000ae2d      0f848d000000   je 0xaec0
0x0000ae33      66895d00       mov word [rbp], bx
0x0000ae37      c7022e7e317e   mov dword [rdx], 0x7e317e2e             ; '.~1~'
                                                                       ; [0x7e317e2e:4]=-1
0x0000ae3d      c6420400       mov byte [rdx + 4], 0
0x0000ae41      e920fcffff     jmp 0xaa66
0x0000ae46      662e0f1f8400.  nop word cs:[rax + rax]
0x0000ae50      48894c2430     mov qword [rsp + 0x30], rcx
0x0000ae55      e95afdffff     jmp 0xabb4
0x0000ae5a      660f1f440000   nop word [rax + rax]
0x0000ae60      4c89ff         mov rdi, r15
0x0000ae63      4531ff         xor r15d, r15d
0x0000ae66      e86582ffff     call sym..plt.got
0x0000ae6b      e8e07affff     call sym.imp.__errno_location
0x0000ae70      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0000ae76      e975feffff     jmp 0xacf0
0x0000ae7b      0f1f440000     nop dword [rax + rax]
0x0000ae80      483b6c2448     cmp rbp, qword [rsp + 0x48]
0x0000ae85      0f86e4fdffff   jbe 0xac6f
0x0000ae8b      488b442418     mov rax, qword [rsp + 0x18]
0x0000ae90      488b742448     mov rsi, qword [rsp + 0x48]
0x0000ae95      4c01f8         add rax, r15
0x0000ae98      488d56ff       lea rdx, [rsi - 1]
0x0000ae9c      4829d8         sub rax, rbx
0x0000ae9f      4839f0         cmp rax, rsi
0x0000aea2      480f43c2       cmovae rax, rdx
0x0000aea6      c604037e       mov byte [rbx + rax], 0x7e              ; '~'
                                                                       ; [0x7e:1]=0
0x0000aeaa      c644030100     mov byte [rbx + rax + 1], 0
0x0000aeaf      e9bbfdffff     jmp 0xac6f
0x0000aeb4      0f1f4000       nop dword [rax]
0x0000aeb8      4d89f8         mov r8, r15
0x0000aebb      e917fdffff     jmp 0xabd7
0x0000aec0      4889542408     mov qword [rsp + 8], rdx
0x0000aec5      e8867affff     call sym.imp.__errno_location
0x0000aeca      83380c         cmp dword [rax], 0xc
0x0000aecd      488b542408     mov rdx, qword [rsp + 8]
0x0000aed2      66895d00       mov word [rbp], bx
0x0000aed6      c7022e7e317e   mov dword [rdx], 0x7e317e2e             ; '.~1~'
                                                                       ; [0x7e317e2e:4]=-1
0x0000aedc      c6420400       mov byte [rdx + 4], 0
0x0000aee0      0f94c0         sete al
0x0000aee3      0fb6c0         movzx eax, al
0x0000aee6      83c002         add eax, 2
0x0000aee9      89442424       mov dword [rsp + 0x24], eax
0x0000aeed      e95efdffff     jmp 0xac50
0x0000aef2      0fb713         movzx edx, word [rbx]
0x0000aef5      be2e000000     mov esi, 0x2e                           ; '.'
0x0000aefa      4c89ff         mov rdi, r15
0x0000aefd      668933         mov word [rbx], si
0x0000af00      c70000000000   mov dword [rax], 0
0x0000af06      be03000000     mov esi, 3
0x0000af0b      89542408       mov dword [rsp + 8], edx
0x0000af0f      e84c7bffff     call sym.imp.pathconf
0x0000af14      418b3c24       mov edi, dword [r12]
0x0000af18      8b542408       mov edx, dword [rsp + 8]
0x0000af1c      31c9           xor ecx, ecx
0x0000af1e      85ff           test edi, edi
0x0000af20      668913         mov word [rbx], dx
0x0000af23      0f94c1         sete cl
0x0000af26      4829c8         sub rax, rcx
0x0000af29      e9a8feffff     jmp 0xadd6
0x0000af2e      4d85ed         test r13, r13
0x0000af31      0f84b9fdffff   je 0xacf0
0x0000af37      4c89ef         mov rdi, r13
0x0000af3a      e8217dffff     call sym.imp.closedir
0x0000af3f      e9acfdffff     jmp 0xacf0
0x0000af44      e8c7f9ffff     call sym.set_simple_backup_suffix
0x0000af49      488b3d504621.  mov rdi, qword [obj.simple_backup_suffix] ; [0x21f5a0:8]=0
0x0000af50      e96efaffff     jmp 0xa9c3
0x0000af55      48c74424480e.  mov qword [rsp + 0x48], 0xe             ; [0xe:8]=0x1003e00030000
0x0000af5e      e928ffffff     jmp 0xae8b
0x0000af63      be01000000     mov esi, 1
0x0000af68      e92cfcffff     jmp 0xab99
0x0000af6d      e8be7bffff     call sym.imp.__stack_chk_fail
0x0000af72      662e0f1f8400.  nop word cs:[rax + rax]
0x0000af7c      0f1f4000       nop dword [rax]
;-- backup_file_rename:
0x0000af80      b901000000     mov ecx, 1                              ; ../coreutils-8.31/lib/backup-rename.c:29
0x0000af85      e9d6f9ffff     jmp sym.backupfile_internal
0x0000af8a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/backup-rename.c:30
;-- get_version.part.0:
0x0000af90      4883ec08       sub rsp, 8
0x0000af94      4c8b0d252121.  mov r9, qword [obj.argmatch_die]        ; [0x21d0c0:8]=0x12a30 sym.__argmatch_die ; "0*\x01"
0x0000af9b      488d155e1921.  lea rdx, obj.backup_args                ; 0x21c900
0x0000afa2      488d0d77d100.  lea rcx, obj.backup_types               ; 0x18120
0x0000afa9      41b804000000   mov r8d, 4
0x0000afaf      e84c7d0000     call sym.__xargmatch_internal
0x0000afb4      488d1565d100.  lea rdx, obj.backup_types               ; 0x18120
0x0000afbb      8b0482         mov eax, dword [rdx + rax*4]
0x0000afbe      4883c408       add rsp, 8
0x0000afc2      c3             ret
0x0000afc3      0f1f00         nop dword [rax]
0x0000afc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- find_backup_file_name:
0x0000afd0      4883ec08       sub rsp, 8
0x0000afd4      31c9           xor ecx, ecx
0x0000afd6      e885f9ffff     call sym.backupfile_internal
0x0000afdb      4885c0         test rax, rax
0x0000afde      7405           je 0xafe5
0x0000afe0      4883c408       add rsp, 8
0x0000afe4      c3             ret
0x0000afe5      e876720000     call sym.xalloc_die
0x0000afea      660f1f440000   nop word [rax + rax]
;-- get_version:
0x0000aff0      4885f6         test rsi, rsi
0x0000aff3      740b           je 0xb000
0x0000aff5      803e00         cmp byte [rsi], 0
0x0000aff8      7406           je 0xb000
0x0000affa      eb94           jmp sym.get_version.part.0
0x0000affc      0f1f4000       nop dword [rax]
0x0000b000      b802000000     mov eax, 2
0x0000b005      c3             ret
0x0000b006      662e0f1f8400.  nop word cs:[rax + rax]
;-- xget_version:
0x0000b010      4885f6         test rsi, rsi
0x0000b013      7405           je 0xb01a
0x0000b015      803e00         cmp byte [rsi], 0
0x0000b018      7528           jne 0xb042
0x0000b01a      488d3dbdd000.  lea rdi, [0x000180de]                   ; "VERSION_CONTROL"
0x0000b021      4883ec08       sub rsp, 8
0x0000b025      e8d678ffff     call sym.imp.getenv
0x0000b02a      4885c0         test rax, rax
0x0000b02d      7421           je 0xb050
0x0000b02f      803800         cmp byte [rax], 0
0x0000b032      741c           je 0xb050
0x0000b034      488d3da2d000.  lea rdi, str.VERSION_CONTROL            ; 0x180dd ; "$VERSION_CONTROL"
0x0000b03b      4889c6         mov rsi, rax
0x0000b03e      4883c408       add rsp, 8
0x0000b042      e949ffffff     jmp sym.get_version.part.0
0x0000b047      660f1f840000.  nop word [rax + rax]
0x0000b050      b802000000     mov eax, 2
0x0000b055      4883c408       add rsp, 8
0x0000b059      c3             ret
0x0000b05a      660f1f440000   nop word [rax + rax]
;-- buffer_lcm:
0x0000b060      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/buffer-lcm.c:29
0x0000b063      4889d1         mov rcx, rdx
0x0000b066      7520           jne 0xb088                              ; ../coreutils-8.31/lib/buffer-lcm.c:33
0x0000b068      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/buffer-lcm.c:34
0x0000b06b      bf00200000     mov edi, 0x2000
0x0000b070      480f45fe       cmovne rdi, rsi
0x0000b074      4839cf         cmp rdi, rcx                            ; ../coreutils-8.31/lib/buffer-lcm.c:58
0x0000b077      480f46cf       cmovbe rcx, rdi
0x0000b07b      4989c8         mov r8, rcx
0x0000b07e      4c89c0         mov rax, r8                             ; ../coreutils-8.31/lib/buffer-lcm.c:59
0x0000b081      c3             ret
0x0000b082      660f1f440000   nop word [rax + rax]
0x0000b088      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/buffer-lcm.c:37
0x0000b08b      74e7           je 0xb074
0x0000b08d      4989f0         mov r8, rsi
0x0000b090      4889f8         mov rax, rdi
0x0000b093      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/buffer-lcm.c:45
0x0000b095      49f7f0         div r8
0x0000b098      4885d2         test rdx, rdx
0x0000b09b      752b           jne 0xb0c8
0x0000b09d      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/buffer-lcm.c:49
0x0000b09f      4889f8         mov rax, rdi
0x0000b0a2      49f7f0         div r8
0x0000b0a5      4989f0         mov r8, rsi                             ; ../coreutils-8.31/lib/buffer-lcm.c:50
0x0000b0a8      4c0fafc0       imul r8, rax
0x0000b0ac      4989c1         mov r9, rax                             ; ../coreutils-8.31/lib/buffer-lcm.c:49
0x0000b0af      4939c8         cmp r8, rcx                             ; ../coreutils-8.31/lib/buffer-lcm.c:51
0x0000b0b2      77c0           ja 0xb074
0x0000b0b4      31d2           xor edx, edx
0x0000b0b6      4c89c0         mov rax, r8
0x0000b0b9      48f7f6         div rsi
0x0000b0bc      4c39c8         cmp rax, r9
0x0000b0bf      75b3           jne 0xb074
0x0000b0c1      ebbb           jmp 0xb07e
0x0000b0c3      0f1f440000     nop dword [rax + rax]
0x0000b0c8      4c89c0         mov rax, r8
0x0000b0cb      4989d0         mov r8, rdx
0x0000b0ce      ebc3           jmp 0xb093
;-- close_stdin_set_file_name:
0x0000b0d0      48893dd14421.  mov qword [obj.file_name], rdi          ; [0x21f5a8:8]=0
0x0000b0d7      c3             ret                                     ; ../coreutils-8.31/lib/closein.c:46
0x0000b0d8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdin:
0x0000b0e0      4154           push r12                                ; ../coreutils-8.31/lib/closein.c:80
0x0000b0e2      55             push rbp
0x0000b0e3      53             push rbx
0x0000b0e4      488b1d052021.  mov rbx, qword [obj.stdin]              ; ../coreutils-8.31/lib/closein.c:87 ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x21d0f0:8]=0
0x0000b0eb      4889df         mov rdi, rbx
0x0000b0ee      e8ad760000     call sym.freadahead
0x0000b0f3      4885c0         test rax, rax
0x0000b0f6      0f859c000000   jne 0xb198
0x0000b0fc      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/closein.c:94
0x0000b0ff      e8bc7c0000     call sym.close_stream
0x0000b104      85c0           test eax, eax
0x0000b106      7530           jne 0xb138
0x0000b108      5b             pop rbx                                 ; ../coreutils-8.31/lib/closein.c:112
0x0000b109      5d             pop rbp
0x0000b10a      415c           pop r12
0x0000b10c      e9ff000000     jmp sym.close_stdout                    ; ../coreutils-8.31/lib/closein.c:108
0x0000b111      0f1f80000000.  nop dword [rax]
0x0000b118      e843760000     call sym.rpl_fflush                     ; ../coreutils-8.31/lib/closein.c:91
0x0000b11d      85c0           test eax, eax
0x0000b11f      488b3dca1f21.  mov rdi, qword [obj.stdin]              ; ../coreutils-8.31/lib/closein.c:94 ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x21d0f0:8]=0
0x0000b126      0f848a000000   je 0xb1b6                               ; ../coreutils-8.31/lib/closein.c:91
0x0000b12c      e88f7c0000     call sym.close_stream                   ; ../coreutils-8.31/lib/closein.c:94
0x0000b131      0f1f80000000.  nop dword [rax]
0x0000b138      488d3501d000.  lea rsi, str.error_closing_file         ; ../coreutils-8.31/lib/closein.c:100 ; 0x18140 ; "error closing file"
0x0000b13f      31ff           xor edi, edi
0x0000b141      ba05000000     mov edx, 5
0x0000b146      e88579ffff     call sym.imp.dcgettext
0x0000b14b      488b1d564421.  mov rbx, qword [obj.file_name]          ; ../coreutils-8.31/lib/closein.c:101 ; [0x21f5a8:8]=0
0x0000b152      4989c4         mov r12, rax                            ; ../coreutils-8.31/lib/closein.c:100
0x0000b155      e8f677ffff     call sym.imp.__errno_location
0x0000b15a      4889c5         mov rbp, rax
0x0000b15d      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/closein.c:101
0x0000b160      746e           je 0xb1d0
0x0000b162      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/closein.c:102
0x0000b165      e856430000     call sym.quotearg_colon
0x0000b16a      8b7500         mov esi, dword [rbp]
0x0000b16d      488d15dfcf00.  lea rdx, str.s:__s                      ; 0x18153 ; "%s: %s"
0x0000b174      4889c1         mov rcx, rax
0x0000b177      4d89e0         mov r8, r12
0x0000b17a      31ff           xor edi, edi
0x0000b17c      31c0           xor eax, eax
0x0000b17e      e8ad7dffff     call sym.imp.error
0x0000b183      e888000000     call sym.close_stdout                   ; ../coreutils-8.31/lib/closein.c:108
0x0000b188      8b3dba1e2100   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closein.c:111 ; [0x21d048:4]=1
0x0000b18e      e8ed77ffff     call sym.imp._exit
0x0000b193      0f1f440000     nop dword [rax + rax]
0x0000b198      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/closein.c:91
0x0000b19a      4889df         mov rdi, rbx
0x0000b19d      ba01000000     mov edx, 1
0x0000b1a2      e829760000     call sym.rpl_fseeko
0x0000b1a7      85c0           test eax, eax
0x0000b1a9      488b3d401f21.  mov rdi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x21d0f0:8]=0
0x0000b1b0      0f8462ffffff   je 0xb118
0x0000b1b6      e8057c0000     call sym.close_stream                   ; ../coreutils-8.31/lib/closein.c:94
0x0000b1bb      85c0           test eax, eax
0x0000b1bd      0f8575ffffff   jne 0xb138
0x0000b1c3      5b             pop rbx                                 ; ../coreutils-8.31/lib/closein.c:112
0x0000b1c4      5d             pop rbp
0x0000b1c5      415c           pop r12
0x0000b1c7      e944000000     jmp sym.close_stdout                    ; ../coreutils-8.31/lib/closein.c:108
0x0000b1cc      0f1f4000       nop dword [rax]
0x0000b1d0      8b30           mov esi, dword [rax]                    ; ../coreutils-8.31/lib/closein.c:105
0x0000b1d2      488d1587dc00.  lea rdx, [0x00018e60]                   ; "%s"
0x0000b1d9      4c89e1         mov rcx, r12
0x0000b1dc      31ff           xor edi, edi
0x0000b1de      31c0           xor eax, eax
0x0000b1e0      e84b7dffff     call sym.imp.error
0x0000b1e5      eb9c           jmp 0xb183
0x0000b1e7      660f1f840000.  nop word [rax + rax]
;-- close_stdout_set_file_name:
0x0000b1f0      48893dc14321.  mov qword [obj.file_name_1], rdi        ; ../coreutils-8.31/lib/closeout.c:52 ; [0x21f5b8:8]=0
0x0000b1f7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x0000b1f8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x0000b200      40883da94321.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x21f5b0:1]=0
0x0000b207      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x0000b208      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x0000b210      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x0000b211      53             push rbx
0x0000b212      4883ec08       sub rsp, 8
0x0000b216      488b3dcb1e21.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21d0e8:8]=0
0x0000b21d      e89e7b0000     call sym.close_stream
0x0000b222      85c0           test eax, eax
0x0000b224      7416           je 0xb23c
0x0000b226      e82577ffff     call sym.imp.__errno_location
0x0000b22b      803d7e432100.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x21f5b0:1]=0
0x0000b232      4889c3         mov rbx, rax
0x0000b235      741c           je 0xb253
0x0000b237      833820         cmp dword [rax], 0x20
0x0000b23a      7517           jne 0xb253
0x0000b23c      488b3ddd1e21.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21d120:8]=0
0x0000b243      e8787b0000     call sym.close_stream
0x0000b248      85c0           test eax, eax
0x0000b24a      7546           jne 0xb292
0x0000b24c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x0000b250      5b             pop rbx
0x0000b251      5d             pop rbp
0x0000b252      c3             ret
0x0000b253      488d3500cf00.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x1815a ; "write error"
0x0000b25a      31ff           xor edi, edi
0x0000b25c      ba05000000     mov edx, 5
0x0000b261      e86a78ffff     call sym.imp.dcgettext
0x0000b266      488b3d4b4321.  mov rdi, qword [obj.file_name_1]        ; ../coreutils-8.31/lib/closeout.c:123 ; [0x21f5b8:8]=0
0x0000b26d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x0000b270      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x0000b273      7428           je 0xb29d
0x0000b275      e846420000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x0000b27a      8b33           mov esi, dword [rbx]
0x0000b27c      488d15d0ce00.  lea rdx, str.s:__s                      ; 0x18153 ; "%s: %s"
0x0000b283      4889c1         mov rcx, rax
0x0000b286      4989e8         mov r8, rbp
0x0000b289      31ff           xor edi, edi
0x0000b28b      31c0           xor eax, eax
0x0000b28d      e89e7cffff     call sym.imp.error
0x0000b292      8b3db01d2100   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x21d048:4]=1
0x0000b298      e8e376ffff     call sym.imp._exit
0x0000b29d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x0000b29f      488d15badb00.  lea rdx, [0x00018e60]                   ; "%s"
0x0000b2a6      4889c1         mov rcx, rax
0x0000b2a9      31ff           xor edi, edi
0x0000b2ab      31c0           xor eax, eax
0x0000b2ad      e87e7cffff     call sym.imp.error
0x0000b2b2      ebde           jmp 0xb292
0x0000b2b4      662e0f1f8400.  nop word cs:[rax + rax]
0x0000b2be      6690           nop
;-- dir_name:
0x0000b2c0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/dirname.c:33
0x0000b2c4      e877000000     call sym.mdir_name                      ; ../coreutils-8.31/lib/dirname.c:34
0x0000b2c9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/dirname.c:35
0x0000b2cc      7405           je 0xb2d3
0x0000b2ce      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/dirname.c:38
0x0000b2d2      c3             ret
0x0000b2d3      e8886f0000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/dirname.c:36
0x0000b2d8      0f1f84000000.  nop dword [rax + rax]
;-- dir_len:
0x0000b2e0      55             push rbp                                ; ../coreutils-8.31/lib/dirname-lgpl.c:33
0x0000b2e1      53             push rbx
0x0000b2e2      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/dirname-lgpl.c:41
0x0000b2e4      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/dirname-lgpl.c:33
0x0000b2e7      4883ec08       sub rsp, 8
0x0000b2eb      803f2f         cmp byte [rdi], 0x2f                    ; ../coreutils-8.31/lib/dirname-lgpl.c:41
0x0000b2ee      400f94c5       sete bpl
0x0000b2f2      e8a9000000     call sym.last_component                 ; ../coreutils-8.31/lib/dirname-lgpl.c:48
0x0000b2f7      4889c1         mov rcx, rax
0x0000b2fa      4829d9         sub rcx, rbx
0x0000b2fd      4839e9         cmp rcx, rbp
0x0000b300      762e           jbe 0xb330
0x0000b302      8078ff2f       cmp byte [rax - 1], 0x2f                ; ../coreutils-8.31/lib/dirname-lgpl.c:50
0x0000b306      488d51ff       lea rdx, [rcx - 1]
0x0000b30a      7412           je 0xb31e
0x0000b30c      eb22           jmp 0xb330
0x0000b30e      6690           nop
0x0000b310      807c13ff2f     cmp byte [rbx + rdx - 1], 0x2f
0x0000b315      488d42ff       lea rax, [rdx - 1]
0x0000b319      7508           jne 0xb323
0x0000b31b      4889c2         mov rdx, rax
0x0000b31e      4839d5         cmp rbp, rdx                            ; ../coreutils-8.31/lib/dirname-lgpl.c:48
0x0000b321      75ed           jne 0xb310
0x0000b323      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/dirname-lgpl.c:53
0x0000b327      4889d0         mov rax, rdx
0x0000b32a      5b             pop rbx
0x0000b32b      5d             pop rbp
0x0000b32c      c3             ret
0x0000b32d      0f1f00         nop dword [rax]
0x0000b330      4883c408       add rsp, 8
0x0000b334      4889ca         mov rdx, rcx                            ; ../coreutils-8.31/lib/dirname-lgpl.c:50
0x0000b337      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/dirname-lgpl.c:53
0x0000b33a      5b             pop rbx
0x0000b33b      5d             pop rbp
0x0000b33c      c3             ret
0x0000b33d      0f1f00         nop dword [rax]
;-- mdir_name:
0x0000b340      55             push rbp                                ; ../coreutils-8.31/lib/dirname-lgpl.c:72
0x0000b341      53             push rbx
0x0000b342      4889fd         mov rbp, rdi
0x0000b345      4883ec08       sub rsp, 8
0x0000b349      e892ffffff     call sym.dir_len                        ; ../coreutils-8.31/lib/dirname-lgpl.c:73
0x0000b34e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/dirname-lgpl.c:74
0x0000b351      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/dirname-lgpl.c:73
0x0000b354      0f94c0         sete al                                 ; ../coreutils-8.31/lib/dirname-lgpl.c:74
0x0000b357      0fb6c0         movzx eax, al
0x0000b35a      488d7c0301     lea rdi, [rbx + rax + 1]                ; ../coreutils-8.31/lib/dirname-lgpl.c:78
0x0000b35f      e88c7affff     call sym.imp.malloc
0x0000b364      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/dirname-lgpl.c:79
0x0000b367      4889c1         mov rcx, rax                            ; ../coreutils-8.31/lib/dirname-lgpl.c:78
0x0000b36a      741a           je 0xb386                               ; ../coreutils-8.31/lib/dirname-lgpl.c:79
0x0000b36c      4889da         mov rdx, rbx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000b36f      4889ee         mov rsi, rbp
0x0000b372      4889c7         mov rdi, rax
0x0000b375      e8067affff     call sym.imp.memcpy
0x0000b37a      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/dirname-lgpl.c:82
0x0000b37d      4889c1         mov rcx, rax                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000b380      740e           je 0xb390                               ; ../coreutils-8.31/lib/dirname-lgpl.c:82
0x0000b382      c6041900       mov byte [rcx + rbx], 0                 ; ../coreutils-8.31/lib/dirname-lgpl.c:84
0x0000b386      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/dirname-lgpl.c:86
0x0000b38a      4889c8         mov rax, rcx
0x0000b38d      5b             pop rbx
0x0000b38e      5d             pop rbp
0x0000b38f      c3             ret
0x0000b390      c6002e         mov byte [rax], 0x2e                    ; ../coreutils-8.31/lib/dirname-lgpl.c:83 ; '.'
                                                                       ; [0x2e:1]=0
0x0000b393      bb01000000     mov ebx, 1
0x0000b398      ebe8           jmp 0xb382
0x0000b39a      660f1f440000   nop word [rax + rax]
;-- last_component:
0x0000b3a0      0fb617         movzx edx, byte [rdi]                   ; ../coreutils-8.31/lib/basename-lgpl.c:31
0x0000b3a3      4889f8         mov rax, rdi
0x0000b3a6      80fa2f         cmp dl, 0x2f                            ; ../coreutils-8.31/lib/basename-lgpl.c:36
0x0000b3a9      7511           jne 0xb3bc
0x0000b3ab      0f1f440000     nop dword [rax + rax]
0x0000b3b0      4883c001       add rax, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:37
0x0000b3b4      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/basename-lgpl.c:36
0x0000b3b7      80fa2f         cmp dl, 0x2f
0x0000b3ba      74f4           je 0xb3b0
0x0000b3bc      84d2           test dl, dl                             ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x0000b3be      743a           je 0xb3fa
0x0000b3c0      4889c1         mov rcx, rax
0x0000b3c3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/basename-lgpl.c:34
0x0000b3c5      eb1e           jmp 0xb3e5
0x0000b3c7      660f1f840000.  nop word [rax + rax]
0x0000b3d0      4084f6         test sil, sil                           ; ../coreutils-8.31/lib/basename-lgpl.c:43
0x0000b3d3      7405           je 0xb3da
0x0000b3d5      4889c8         mov rax, rcx
0x0000b3d8      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/basename-lgpl.c:46
0x0000b3da      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x0000b3de      0fb611         movzx edx, byte [rcx]
0x0000b3e1      84d2           test dl, dl
0x0000b3e3      7415           je 0xb3fa
0x0000b3e5      80fa2f         cmp dl, 0x2f                            ; ../coreutils-8.31/lib/basename-lgpl.c:41
0x0000b3e8      75e6           jne 0xb3d0
0x0000b3ea      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x0000b3ee      0fb611         movzx edx, byte [rcx]
0x0000b3f1      be01000000     mov esi, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:42
0x0000b3f6      84d2           test dl, dl                             ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x0000b3f8      75eb           jne 0xb3e5
0x0000b3fa      f3c3           ret                                     ; ../coreutils-8.31/lib/basename-lgpl.c:51
0x0000b3fc      0f1f4000       nop dword [rax]
;-- base_len:
0x0000b400      53             push rbx                                ; ../coreutils-8.31/lib/basename-lgpl.c:59
0x0000b401      4889fb         mov rbx, rdi
0x0000b404      e8e776ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/basename-lgpl.c:63
0x0000b409      4883f801       cmp rax, 1
0x0000b40d      760b           jbe 0xb41a
0x0000b40f      807c03ff2f     cmp byte [rbx + rax - 1], 0x2f
0x0000b414      488d50ff       lea rdx, [rax - 1]
0x0000b418      740e           je 0xb428
0x0000b41a      5b             pop rbx                                 ; ../coreutils-8.31/lib/basename-lgpl.c:75
0x0000b41b      c3             ret
0x0000b41c      0f1f4000       nop dword [rax]
0x0000b420      4889c2         mov rdx, rax                            ; ../coreutils-8.31/lib/basename-lgpl.c:63
0x0000b423      0f1f440000     nop dword [rax + rax]
0x0000b428      4883fa01       cmp rdx, 1
0x0000b42c      7412           je 0xb440
0x0000b42e      807c13ff2f     cmp byte [rbx + rdx - 1], 0x2f
0x0000b433      488d42ff       lea rax, [rdx - 1]
0x0000b437      74e7           je 0xb420
0x0000b439      4889d0         mov rax, rdx
0x0000b43c      5b             pop rbx                                 ; ../coreutils-8.31/lib/basename-lgpl.c:75
0x0000b43d      c3             ret
0x0000b43e      6690           nop
0x0000b440      b801000000     mov eax, 1
0x0000b445      5b             pop rbx
0x0000b446      c3             ret
0x0000b447      660f1f840000.  nop word [rax + rax]
;-- fdadvise:
0x0000b450      e91b78ffff     jmp sym.imp.posix_fadvise               ; ../coreutils-8.31/lib/fadvise.c:32
0x0000b455      90             nop
0x0000b456      662e0f1f8400.  nop word cs:[rax + rax]
;-- fadvise:
0x0000b460      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fadvise.c:40
0x0000b463      741b           je 0xb480
0x0000b465      53             push rbx
0x0000b466      89f3           mov ebx, esi
0x0000b468      e84379ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fadvise.c:42
0x0000b46d      89d9           mov ecx, ebx                            ; ../coreutils-8.31/lib/fadvise.c:34
0x0000b46f      31d2           xor edx, edx
0x0000b471      31f6           xor esi, esi
0x0000b473      5b             pop rbx                                 ; ../coreutils-8.31/lib/fadvise.c:43
0x0000b474      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fadvise.c:34
0x0000b476      e9f577ffff     jmp sym.imp.posix_fadvise
0x0000b47b      0f1f440000     nop dword [rax + rax]
0x0000b480      f3c3           ret
0x0000b482      662e0f1f8400.  nop word cs:[rax + rax]
0x0000b48c      0f1f4000       nop dword [rax]
;-- open_safer:
0x0000b490      4883ec58       sub rsp, 0x58                           ; ../coreutils-8.31/lib/open-safer.c:30
0x0000b494      4889542430     mov qword [rsp + 0x30], rdx
0x0000b499      31d2           xor edx, edx
0x0000b49b      64488b042528.  mov rax, qword fs:[0x28]
0x0000b4a4      4889442418     mov qword [rsp + 0x18], rax
0x0000b4a9      31c0           xor eax, eax
0x0000b4ab      40f6c640       test sil, 0x40                          ; ../coreutils-8.31/lib/open-safer.c:33 ; segment.PHDR
0x0000b4af      7527           jne 0xb4d8
0x0000b4b1      31c0           xor eax, eax                            ; fcntl2.h:59   return __open_alias (__path, __oflag, __va_arg_pack ());
0x0000b4b3      e8a87affff     call sym.imp.open
0x0000b4b8      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/open-safer.c:45
0x0000b4ba      e881540000     call sym.fd_safer
0x0000b4bf      488b4c2418     mov rcx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/open-safer.c:46
0x0000b4c4      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000b4cd      752a           jne 0xb4f9
0x0000b4cf      4883c458       add rsp, 0x58
0x0000b4d3      c3             ret
0x0000b4d4      0f1f4000       nop dword [rax]
0x0000b4d8      488d442460     lea rax, [rsp + 0x60]                   ; ../coreutils-8.31/lib/open-safer.c:36
0x0000b4dd      c70424100000.  mov dword [rsp], 0x10                   ; [0x10:4]=0x3e0003
0x0000b4e4      8b542430       mov edx, dword [rsp + 0x30]             ; ../coreutils-8.31/lib/open-safer.c:40
0x0000b4e8      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/open-safer.c:36
0x0000b4ed      488d442420     lea rax, [rsp + 0x20]
0x0000b4f2      4889442410     mov qword [rsp + 0x10], rax
0x0000b4f7      ebb8           jmp 0xb4b1
0x0000b4f9      e83276ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/open-safer.c:46
0x0000b4fe      6690           nop
;-- record_file:
0x0000b500      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/file-set.c:30
0x0000b503      747b           je 0xb580
0x0000b505      4155           push r13
0x0000b507      4154           push r12
0x0000b509      4989fd         mov r13, rdi
0x0000b50c      55             push rbp
0x0000b50d      53             push rbx
0x0000b50e      4989f4         mov r12, rsi
0x0000b511      bf18000000     mov edi, 0x18                           ; ../coreutils-8.31/lib/file-set.c:36
0x0000b516      4889d5         mov rbp, rdx
0x0000b519      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/file-set.c:30
0x0000b51d      e8ee6a0000     call sym.xmalloc                        ; ../coreutils-8.31/lib/file-set.c:36
0x0000b522      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/file-set.c:37
0x0000b525      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/file-set.c:36
0x0000b528      e8136d0000     call sym.xstrdup                        ; ../coreutils-8.31/lib/file-set.c:37
0x0000b52d      488903         mov qword [rbx], rax
0x0000b530      488b4508       mov rax, qword [rbp + 8]                ; ../coreutils-8.31/lib/file-set.c:38
0x0000b534      4889de         mov rsi, rbx                            ; ../coreutils-8.31/lib/file-set.c:42
0x0000b537      4c89ef         mov rdi, r13
0x0000b53a      48894308       mov qword [rbx + 8], rax                ; ../coreutils-8.31/lib/file-set.c:38
0x0000b53e      488b4500       mov rax, qword [rbp]                    ; ../coreutils-8.31/lib/file-set.c:39
0x0000b542      48894310       mov qword [rbx + 0x10], rax
0x0000b546      e8d5140000     call sym.hash_insert                    ; ../coreutils-8.31/lib/file-set.c:42
0x0000b54b      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/file-set.c:43
0x0000b54e      7432           je 0xb582
0x0000b550      4839c3         cmp rbx, rax                            ; ../coreutils-8.31/lib/file-set.c:49
0x0000b553      741b           je 0xb570
0x0000b555      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/file-set.c:56
0x0000b559      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/file-set.c:53
0x0000b55c      5b             pop rbx                                 ; ../coreutils-8.31/lib/file-set.c:56
0x0000b55d      5d             pop rbp
0x0000b55e      415c           pop r12
0x0000b560      415d           pop r13
0x0000b562      e9d9170000     jmp sym.triple_free                     ; ../coreutils-8.31/lib/file-set.c:53
0x0000b567      660f1f840000.  nop word [rax + rax]
0x0000b570      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/file-set.c:56
0x0000b574      5b             pop rbx
0x0000b575      5d             pop rbp
0x0000b576      415c           pop r12
0x0000b578      415d           pop r13
0x0000b57a      c3             ret
0x0000b57b      0f1f440000     nop dword [rax + rax]
0x0000b580      f3c3           ret
0x0000b582      e8d96c0000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/file-set.c:46
0x0000b587      660f1f840000.  nop word [rax + rax]
;-- seen_file:
0x0000b590      4883ec28       sub rsp, 0x28                           ; ../coreutils-8.31/lib/file-set.c:63
0x0000b594      64488b042528.  mov rax, qword fs:[0x28]
0x0000b59d      4889442418     mov qword [rsp + 0x18], rax
0x0000b5a2      31c0           xor eax, eax
0x0000b5a4      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/file-set.c:66
0x0000b5a7      7423           je 0xb5cc
0x0000b5a9      488b4208       mov rax, qword [rdx + 8]                ; ../coreutils-8.31/lib/file-set.c:70
0x0000b5ad      48893424       mov qword [rsp], rsi                    ; ../coreutils-8.31/lib/file-set.c:69
0x0000b5b1      4889e6         mov rsi, rsp                            ; ../coreutils-8.31/lib/file-set.c:73
0x0000b5b4      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/file-set.c:70
0x0000b5b9      488b02         mov rax, qword [rdx]                    ; ../coreutils-8.31/lib/file-set.c:71
0x0000b5bc      4889442410     mov qword [rsp + 0x10], rax
0x0000b5c1      e8ea090000     call sym.hash_lookup                    ; ../coreutils-8.31/lib/file-set.c:73
0x0000b5c6      4885c0         test rax, rax
0x0000b5c9      0f95c0         setne al
0x0000b5cc      488b4c2418     mov rcx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/file-set.c:74
0x0000b5d1      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000b5da      7505           jne 0xb5e1
0x0000b5dc      4883c428       add rsp, 0x28
0x0000b5e0      c3             ret
0x0000b5e1      e84a75ffff     call sym.imp.__stack_chk_fail
0x0000b5e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- strmode:
0x0000b5f0      89fa           mov edx, edi
0x0000b5f2      b82d000000     mov eax, 0x2d                           ; '-'
0x0000b5f7      81e200f00000   and edx, 0xf000
0x0000b5fd      81fa00800000   cmp edx, 0x8000
0x0000b603      745b           je 0xb660
0x0000b605      81fa00400000   cmp edx, 0x4000                         ; "([]A\A]\xc3\x0f\x1f\x84"
0x0000b60b      b864000000     mov eax, 0x64                           ; 'd'
0x0000b610      744e           je 0xb660
0x0000b612      81fa00600000   cmp edx, 0x6000
0x0000b618      b862000000     mov eax, 0x62                           ; 'b'
0x0000b61d      7441           je 0xb660
0x0000b61f      81fa00200000   cmp edx, 0x2000
0x0000b625      b863000000     mov eax, 0x63                           ; 'c'
0x0000b62a      7434           je 0xb660
0x0000b62c      81fa00a00000   cmp edx, 0xa000
0x0000b632      b86c000000     mov eax, 0x6c                           ; 'l'
0x0000b637      7427           je 0xb660
0x0000b639      81fa00100000   cmp edx, 0x1000
0x0000b63f      b870000000     mov eax, 0x70                           ; 'p'
0x0000b644      741a           je 0xb660
0x0000b646      81fa00c00000   cmp edx, 0xc000
0x0000b64c      b873000000     mov eax, 0x73                           ; 's'
0x0000b651      ba3f000000     mov edx, 0x3f                           ; '?'
0x0000b656      0f45c2         cmovne eax, edx
0x0000b659      0f1f80000000.  nop dword [rax]
0x0000b660      8806           mov byte [rsi], al
0x0000b662      89f8           mov eax, edi
0x0000b664      2500010000     and eax, 0x100
0x0000b669      83f801         cmp eax, 1
0x0000b66c      19c0           sbb eax, eax
0x0000b66e      83e0bb         and eax, 0xffffffbb                     ; 4294967227
0x0000b671      83c072         add eax, 0x72
0x0000b674      884601         mov byte [rsi + 1], al
0x0000b677      89f8           mov eax, edi
0x0000b679      2580000000     and eax, 0x80
0x0000b67e      83f801         cmp eax, 1
0x0000b681      19c0           sbb eax, eax
0x0000b683      83e0b6         and eax, 0xffffffb6                     ; 4294967222
0x0000b686      83c077         add eax, 0x77
0x0000b689      884602         mov byte [rsi + 2], al
0x0000b68c      89f8           mov eax, edi
0x0000b68e      83e040         and eax, 0x40                           ; segment.PHDR
0x0000b691      83f801         cmp eax, 1
0x0000b694      19c0           sbb eax, eax
0x0000b696      f7c700080000   test edi, 0x800
0x0000b69c      0f849e000000   je 0xb740
0x0000b6a2      83e0e0         and eax, 0xffffffe0                     ; 4294967264
0x0000b6a5      83c073         add eax, 0x73
0x0000b6a8      884603         mov byte [rsi + 3], al
0x0000b6ab      89f8           mov eax, edi
0x0000b6ad      83e020         and eax, 0x20                           ; "@"
0x0000b6b0      83f801         cmp eax, 1
0x0000b6b3      19c0           sbb eax, eax
0x0000b6b5      83e0bb         and eax, 0xffffffbb                     ; 4294967227
0x0000b6b8      83c072         add eax, 0x72
0x0000b6bb      884604         mov byte [rsi + 4], al
0x0000b6be      89f8           mov eax, edi
0x0000b6c0      83e010         and eax, 0x10
0x0000b6c3      83f801         cmp eax, 1
0x0000b6c6      19c0           sbb eax, eax
0x0000b6c8      83e0b6         and eax, 0xffffffb6                     ; 4294967222
0x0000b6cb      83c077         add eax, 0x77
0x0000b6ce      884605         mov byte [rsi + 5], al
0x0000b6d1      89f8           mov eax, edi
0x0000b6d3      83e008         and eax, 8
0x0000b6d6      83f801         cmp eax, 1
0x0000b6d9      19c0           sbb eax, eax
0x0000b6db      f7c700040000   test edi, 0x400
0x0000b6e1      0f8481000000   je 0xb768
0x0000b6e7      83e0e0         and eax, 0xffffffe0                     ; 4294967264
0x0000b6ea      83c073         add eax, 0x73
0x0000b6ed      884606         mov byte [rsi + 6], al
0x0000b6f0      89f8           mov eax, edi
0x0000b6f2      83e004         and eax, 4
0x0000b6f5      83f801         cmp eax, 1
0x0000b6f8      19c0           sbb eax, eax
0x0000b6fa      83e0bb         and eax, 0xffffffbb                     ; 4294967227
0x0000b6fd      83c072         add eax, 0x72
0x0000b700      884607         mov byte [rsi + 7], al
0x0000b703      89f8           mov eax, edi
0x0000b705      83e002         and eax, 2
0x0000b708      83f801         cmp eax, 1
0x0000b70b      19c0           sbb eax, eax
0x0000b70d      83e0b6         and eax, 0xffffffb6                     ; 4294967222
0x0000b710      83c077         add eax, 0x77
0x0000b713      884608         mov byte [rsi + 8], al
0x0000b716      89f8           mov eax, edi
0x0000b718      83e001         and eax, 1
0x0000b71b      83f801         cmp eax, 1
0x0000b71e      19c0           sbb eax, eax
0x0000b720      81e700020000   and edi, 0x200
0x0000b726      7428           je 0xb750
0x0000b728      83e0e0         and eax, 0xffffffe0                     ; 4294967264
0x0000b72b      83c074         add eax, 0x74
0x0000b72e      884609         mov byte [rsi + 9], al
0x0000b731      b820000000     mov eax, 0x20                           ; "@"
0x0000b736      6689460a       mov word [rsi + 0xa], ax
0x0000b73a      c3             ret
0x0000b73b      0f1f440000     nop dword [rax + rax]
0x0000b740      83e0b5         and eax, 0xffffffb5                     ; 4294967221
0x0000b743      83c078         add eax, 0x78
0x0000b746      e95dffffff     jmp 0xb6a8
0x0000b74b      0f1f440000     nop dword [rax + rax]
0x0000b750      83e0b5         and eax, 0xffffffb5                     ; 4294967221
0x0000b753      83c078         add eax, 0x78
0x0000b756      884609         mov byte [rsi + 9], al
0x0000b759      b820000000     mov eax, 0x20                           ; "@"
0x0000b75e      6689460a       mov word [rsi + 0xa], ax
0x0000b762      c3             ret
0x0000b763      0f1f440000     nop dword [rax + rax]
0x0000b768      83e0b5         and eax, 0xffffffb5                     ; 4294967221
0x0000b76b      83c078         add eax, 0x78
0x0000b76e      e97affffff     jmp 0xb6ed
0x0000b773      0f1f00         nop dword [rax]
0x0000b776      662e0f1f8400.  nop word cs:[rax + rax]
;-- filemodestring:
0x0000b780      8b7f18         mov edi, dword [rdi + 0x18]
0x0000b783      e968feffff     jmp sym.strmode
0x0000b788      0f1f84000000.  nop dword [rax + rax]
;-- file_name_concat:
0x0000b790      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/filenamecat.c:36
0x0000b794      e817000000     call sym.mfile_name_concat              ; ../coreutils-8.31/lib/filenamecat.c:37
0x0000b799      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/filenamecat.c:38
0x0000b79c      7405           je 0xb7a3
0x0000b79e      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/filenamecat.c:41
0x0000b7a2      c3             ret
0x0000b7a3      e8b86a0000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/filenamecat.c:39
0x0000b7a8      0f1f84000000.  nop dword [rax + rax]
;-- mfile_name_concat:
0x0000b7b0      4157           push r15                                ; ../coreutils-8.31/lib/filenamecat-lgpl.c:48
0x0000b7b2      4156           push r14
0x0000b7b4      4989d7         mov r15, rdx
0x0000b7b7      4155           push r13
0x0000b7b9      4154           push r12
0x0000b7bb      4989fc         mov r12, rdi
0x0000b7be      55             push rbp
0x0000b7bf      53             push rbx
0x0000b7c0      4889f5         mov rbp, rsi
0x0000b7c3      4883ec18       sub rsp, 0x18
0x0000b7c7      e8d4fbffff     call sym.last_component                 ; ../coreutils-8.31/lib/filenamecat-lgpl.c:49
0x0000b7cc      4889c3         mov rbx, rax
0x0000b7cf      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:50
0x0000b7d2      e829fcffff     call sym.base_len
0x0000b7d7      4c29e3         sub rbx, r12                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:51
0x0000b7da      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:50
0x0000b7dd      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:52
0x0000b7e0      4801c3         add rbx, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:51
0x0000b7e3      e80873ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/filenamecat-lgpl.c:52
0x0000b7e8      4d85ed         test r13, r13                           ; ../coreutils-8.31/lib/filenamecat-lgpl.c:54
0x0000b7eb      4989c6         mov r14, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:52
0x0000b7ee      7430           je 0xb820                               ; ../coreutils-8.31/lib/filenamecat-lgpl.c:54
0x0000b7f0      41807c1cff2f   cmp byte [r12 + rbx - 1], 0x2f          ; ../coreutils-8.31/lib/filenamecat-lgpl.c:57
0x0000b7f6      0f84a4000000   je 0xb8a0
0x0000b7fc      31c0           xor eax, eax
0x0000b7fe      807d002f       cmp byte [rbp], 0x2f
0x0000b802      ba00000000     mov edx, 0
0x0000b807      0f95c0         setne al
0x0000b80a      48890424       mov qword [rsp], rax
0x0000b80e      b82f000000     mov eax, 0x2f                           ; '/'
0x0000b813      0f44c2         cmove eax, edx
0x0000b816      8844240f       mov byte [rsp + 0xf], al
0x0000b81a      eb22           jmp 0xb83e
0x0000b81c      0f1f4000       nop dword [rax]
0x0000b820      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:60
0x0000b822      807d002f       cmp byte [rbp], 0x2f
0x0000b826      ba00000000     mov edx, 0
0x0000b82b      0f94c0         sete al
0x0000b82e      48890424       mov qword [rsp], rax
0x0000b832      b82e000000     mov eax, 0x2e                           ; '.'
0x0000b837      0f45c2         cmovne eax, edx
0x0000b83a      8844240f       mov byte [rsp + 0xf], al
0x0000b83e      4a8d7c3301     lea rdi, [rbx + r14 + 1]                ; ../coreutils-8.31/lib/filenamecat-lgpl.c:70
0x0000b843      48033c24       add rdi, qword [rsp]
0x0000b847      e8a475ffff     call sym.imp.malloc
0x0000b84c      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/filenamecat-lgpl.c:73
0x0000b84f      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:70
0x0000b852      7432           je 0xb886                               ; ../coreutils-8.31/lib/filenamecat-lgpl.c:73
0x0000b854      4889c7         mov rdi, rax                            ; string_fortified.h:48   return __builtin___mempcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000b857      4889da         mov rdx, rbx
0x0000b85a      4c89e6         mov rsi, r12
0x0000b85d      e8be76ffff     call sym.imp.mempcpy
0x0000b862      0fb64c240f     movzx ecx, byte [rsp + 0xf]             ; ../coreutils-8.31/lib/filenamecat-lgpl.c:77
0x0000b867      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/filenamecat-lgpl.c:78
0x0000b86b      4801c7         add rdi, rax
0x0000b86e      4d85ff         test r15, r15                           ; ../coreutils-8.31/lib/filenamecat-lgpl.c:80
0x0000b871      8808           mov byte [rax], cl                      ; ../coreutils-8.31/lib/filenamecat-lgpl.c:77
0x0000b873      7403           je 0xb878                               ; ../coreutils-8.31/lib/filenamecat-lgpl.c:80
0x0000b875      49893f         mov qword [r15], rdi                    ; ../coreutils-8.31/lib/filenamecat-lgpl.c:81
0x0000b878      4c89f2         mov rdx, r14                            ; string_fortified.h:48   return __builtin___mempcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000b87b      4889ee         mov rsi, rbp
0x0000b87e      e89d76ffff     call sym.imp.mempcpy
0x0000b883      c60000         mov byte [rax], 0                       ; ../coreutils-8.31/lib/filenamecat-lgpl.c:84
0x0000b886      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/filenamecat-lgpl.c:87
0x0000b88a      4c89e8         mov rax, r13
0x0000b88d      5b             pop rbx
0x0000b88e      5d             pop rbp
0x0000b88f      415c           pop r12
0x0000b891      415d           pop r13
0x0000b893      415e           pop r14
0x0000b895      415f           pop r15
0x0000b897      c3             ret
0x0000b898      0f1f84000000.  nop dword [rax + rax]
0x0000b8a0      48c704240000.  mov qword [rsp], 0
0x0000b8a8      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/filenamecat-lgpl.c:53
0x0000b8ad      eb8f           jmp 0xb83e
0x0000b8af      90             nop
;-- full_read:
0x0000b8b0      4155           push r13                                ; ../coreutils-8.31/lib/full-write.c:59
0x0000b8b2      4154           push r12
0x0000b8b4      55             push rbp
0x0000b8b5      53             push rbx
0x0000b8b6      4883ec08       sub rsp, 8
0x0000b8ba      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/full-write.c:63
0x0000b8bd      7462           je 0xb921
0x0000b8bf      4189fd         mov r13d, edi
0x0000b8c2      4889f5         mov rbp, rsi
0x0000b8c5      4889d3         mov rbx, rdx
0x0000b8c8      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/full-write.c:60
0x0000b8cb      eb13           jmp 0xb8e0
0x0000b8cd      0f1f00         nop dword [rax]
0x0000b8d0      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/full-write.c:68
0x0000b8d3      7433           je 0xb908
0x0000b8d5      4901c4         add r12, rax                            ; ../coreutils-8.31/lib/full-write.c:73
0x0000b8d8      4801c5         add rbp, rax                            ; ../coreutils-8.31/lib/full-write.c:74
0x0000b8db      4829c3         sub rbx, rax                            ; ../coreutils-8.31/lib/full-write.c:63
0x0000b8de      7414           je 0xb8f4
0x0000b8e0      4889da         mov rdx, rbx                            ; ../coreutils-8.31/lib/full-write.c:65
0x0000b8e3      4889ee         mov rsi, rbp
0x0000b8e6      4489ef         mov edi, r13d
0x0000b8e9      e862400000     call sym.safe_read
0x0000b8ee      4883f8ff       cmp rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/full-write.c:66
0x0000b8f2      75dc           jne 0xb8d0
0x0000b8f4      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/full-write.c:79
0x0000b8f8      4c89e0         mov rax, r12
0x0000b8fb      5b             pop rbx
0x0000b8fc      5d             pop rbp
0x0000b8fd      415c           pop r12
0x0000b8ff      415d           pop r13
0x0000b901      c3             ret
0x0000b902      660f1f440000   nop word [rax + rax]
0x0000b908      e84370ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/full-write.c:70
0x0000b90d      c70000000000   mov dword [rax], 0
0x0000b913      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/full-write.c:79
0x0000b917      4c89e0         mov rax, r12
0x0000b91a      5b             pop rbx
0x0000b91b      5d             pop rbp
0x0000b91c      415c           pop r12
0x0000b91e      415d           pop r13
0x0000b920      c3             ret
0x0000b921      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/full-write.c:60
0x0000b924      ebce           jmp 0xb8f4                              ; ../coreutils-8.31/lib/full-write.c:78
0x0000b926      662e0f1f8400.  nop word cs:[rax + rax]
;-- full_write:
0x0000b930      4155           push r13                                ; ../coreutils-8.31/lib/full-write.c:59
0x0000b932      4154           push r12
0x0000b934      55             push rbp
0x0000b935      53             push rbx
0x0000b936      4883ec08       sub rsp, 8
0x0000b93a      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/full-write.c:63
0x0000b93d      7462           je 0xb9a1
0x0000b93f      4189fd         mov r13d, edi
0x0000b942      4889f5         mov rbp, rsi
0x0000b945      4889d3         mov rbx, rdx
0x0000b948      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/full-write.c:60
0x0000b94b      eb13           jmp 0xb960
0x0000b94d      0f1f00         nop dword [rax]
0x0000b950      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/full-write.c:68
0x0000b953      7433           je 0xb988
0x0000b955      4901c4         add r12, rax                            ; ../coreutils-8.31/lib/full-write.c:73
0x0000b958      4801c5         add rbp, rax                            ; ../coreutils-8.31/lib/full-write.c:74
0x0000b95b      4829c3         sub rbx, rax                            ; ../coreutils-8.31/lib/full-write.c:63
0x0000b95e      7414           je 0xb974
0x0000b960      4889da         mov rdx, rbx                            ; ../coreutils-8.31/lib/full-write.c:65
0x0000b963      4889ee         mov rsi, rbp
0x0000b966      4489ef         mov edi, r13d
0x0000b969      e842400000     call sym.safe_write
0x0000b96e      4883f8ff       cmp rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/full-write.c:66
0x0000b972      75dc           jne 0xb950
0x0000b974      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/full-write.c:79
0x0000b978      4c89e0         mov rax, r12
0x0000b97b      5b             pop rbx
0x0000b97c      5d             pop rbp
0x0000b97d      415c           pop r12
0x0000b97f      415d           pop r13
0x0000b981      c3             ret
0x0000b982      660f1f440000   nop word [rax + rax]
0x0000b988      e8c36fffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/full-write.c:70
0x0000b98d      c7001c000000   mov dword [rax], 0x1c                   ; [0x1c:4]=0
0x0000b993      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/full-write.c:79
0x0000b997      4c89e0         mov rax, r12
0x0000b99a      5b             pop rbx
0x0000b99b      5d             pop rbp
0x0000b99c      415c           pop r12
0x0000b99e      415d           pop r13
0x0000b9a0      c3             ret
0x0000b9a1      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/full-write.c:60
0x0000b9a4      ebce           jmp 0xb974                              ; ../coreutils-8.31/lib/full-write.c:78
0x0000b9a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- next_prime:
0x0000b9b0      4883ff0a       cmp rdi, 0xa                            ; ../coreutils-8.31/lib/hash.c:464
0x0000b9b4      b80a000000     mov eax, 0xa
0x0000b9b9      49b9abaaaaaa.  movabs r9, 0xaaaaaaaaaaaaaaab
0x0000b9c3      480f42f8       cmovb rdi, rax
0x0000b9c7      4883cf01       or rdi, 1                               ; ../coreutils-8.31/lib/hash.c:470
0x0000b9cb      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/hash.c:472
0x0000b9cf      746e           je 0xba3f
0x0000b9d1      0f1f80000000.  nop dword [rax]
0x0000b9d8      4889f8         mov rax, rdi
0x0000b9db      4889f9         mov rcx, rdi
0x0000b9de      49f7e1         mul r9
0x0000b9e1      4889d0         mov rax, rdx
0x0000b9e4      48d1e8         shr rax, 1
0x0000b9e7      488d0440       lea rax, [rax + rax*2]
0x0000b9eb      4829c1         sub rcx, rax
0x0000b9ee      4883ff09       cmp rdi, 9                              ; ../coreutils-8.31/lib/hash.c:449
0x0000b9f2      4889c8         mov rax, rcx
0x0000b9f5      7639           jbe 0xba30
0x0000b9f7      4885c9         test rcx, rcx
0x0000b9fa      7439           je 0xba35
0x0000b9fc      41b810000000   mov r8d, 0x10
0x0000ba02      be09000000     mov esi, 9                              ; ../coreutils-8.31/lib/hash.c:447
0x0000ba07      b903000000     mov ecx, 3                              ; ../coreutils-8.31/lib/hash.c:446
0x0000ba0c      eb0b           jmp 0xba19
0x0000ba0e      6690           nop
0x0000ba10      4983c008       add r8, 8
0x0000ba14      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:449
0x0000ba17      741c           je 0xba35
0x0000ba19      4883c102       add rcx, 2                              ; ../coreutils-8.31/lib/hash.c:453
0x0000ba1d      31d2           xor edx, edx
0x0000ba1f      4889f8         mov rax, rdi
0x0000ba22      48f7f1         div rcx
0x0000ba25      4c01c6         add rsi, r8                             ; ../coreutils-8.31/lib/hash.c:452
0x0000ba28      4839fe         cmp rsi, rdi                            ; ../coreutils-8.31/lib/hash.c:449
0x0000ba2b      4889d0         mov rax, rdx
0x0000ba2e      72e0           jb 0xba10
0x0000ba30      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:472
0x0000ba33      750a           jne 0xba3f
0x0000ba35      4883c702       add rdi, 2                              ; ../coreutils-8.31/lib/hash.c:473
0x0000ba39      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/hash.c:472
0x0000ba3d      7599           jne 0xb9d8
0x0000ba3f      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/hash.c:476
0x0000ba42      c3             ret
0x0000ba43      0f1f00         nop dword [rax]
0x0000ba46      662e0f1f8400.  nop word cs:[rax + rax]
;-- raw_hasher:
0x0000ba50      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/hash.c:487
0x0000ba53      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/hash.c:494
0x0000ba55      48c1c803       ror rax, 3                              ; ../coreutils-8.31/lib/bitrotate.h:87
0x0000ba59      48f7f6         div rsi                                 ; ../coreutils-8.31/lib/hash.c:494
0x0000ba5c      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/hash.c:495
0x0000ba5f      c3             ret
;-- raw_comparator:
0x0000ba60      4839f7         cmp rdi, rsi                            ; ../coreutils-8.31/lib/hash.c:500
0x0000ba63      0f94c0         sete al
0x0000ba66      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:502
0x0000ba67      660f1f840000.  nop word [rax + rax]
;-- safe_hasher:
0x0000ba70      53             push rbx                                ; ../coreutils-8.31/lib/hash.c:250
0x0000ba71      4889fb         mov rbx, rdi
0x0000ba74      4889f7         mov rdi, rsi
0x0000ba77      488b7310       mov rsi, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/hash.c:251
0x0000ba7b      ff5330         call qword [rbx + 0x30]
0x0000ba7e      48394310       cmp qword [rbx + 0x10], rax             ; ../coreutils-8.31/lib/hash.c:252
0x0000ba82      7609           jbe 0xba8d
0x0000ba84      48c1e004       shl rax, 4                              ; ../coreutils-8.31/lib/hash.c:254
0x0000ba88      480303         add rax, qword [rbx]
0x0000ba8b      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash.c:255
0x0000ba8c      c3             ret
0x0000ba8d      e8ae6effff     call sym.imp.abort                      ; ../coreutils-8.31/lib/hash.c:253
0x0000ba92      0f1f4000       nop dword [rax]
0x0000ba96      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_find_entry:
0x0000baa0      4156           push r14                                ; ../coreutils-8.31/lib/hash.c:792
0x0000baa2      4155           push r13
0x0000baa4      4989d6         mov r14, rdx
0x0000baa7      4154           push r12
0x0000baa9      55             push rbp
0x0000baaa      4989fc         mov r12, rdi
0x0000baad      53             push rbx
0x0000baae      4889f5         mov rbp, rsi
0x0000bab1      4189cd         mov r13d, ecx
0x0000bab4      e8b7ffffff     call sym.safe_hasher                    ; ../coreutils-8.31/lib/hash.c:793
0x0000bab9      498906         mov qword [r14], rax                    ; ../coreutils-8.31/lib/hash.c:796
0x0000babc      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:799
0x0000babf      4885f6         test rsi, rsi
0x0000bac2      0f84e8000000   je 0xbbb0
0x0000bac8      4839ee         cmp rsi, rbp                            ; ../coreutils-8.31/lib/hash.c:803
0x0000bacb      4889c3         mov rbx, rax
0x0000bace      0f848f000000   je 0xbb63
0x0000bad4      4889ef         mov rdi, rbp
0x0000bad7      41ff542438     call qword [r12 + 0x38]
0x0000badc      84c0           test al, al
0x0000bade      0f857c000000   jne 0xbb60
0x0000bae4      488b4308       mov rax, qword [rbx + 8]                ; ../coreutils-8.31/lib/hash.c:828
0x0000bae8      4885c0         test rax, rax
0x0000baeb      0f84bf000000   je 0xbbb0
0x0000baf1      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:830
0x0000baf4      4839f5         cmp rbp, rsi
0x0000baf7      7520           jne 0xbb19
0x0000baf9      eb31           jmp 0xbb2c
0x0000bafb      0f1f440000     nop dword [rax + rax]
0x0000bb00      488b5b08       mov rbx, qword [rbx + 8]                ; ../coreutils-8.31/lib/hash.c:828
0x0000bb04      488b4308       mov rax, qword [rbx + 8]
0x0000bb08      4885c0         test rax, rax
0x0000bb0b      0f849f000000   je 0xbbb0
0x0000bb11      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:830
0x0000bb14      4839ee         cmp rsi, rbp
0x0000bb17      7413           je 0xbb2c
0x0000bb19      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/hash.c:831
0x0000bb1c      41ff542438     call qword [r12 + 0x38]
0x0000bb21      84c0           test al, al
0x0000bb23      74db           je 0xbb00
0x0000bb25      488b4308       mov rax, qword [rbx + 8]
0x0000bb29      488b30         mov rsi, qword [rax]
0x0000bb2c      4584ed         test r13b, r13b                         ; ../coreutils-8.31/lib/hash.c:835
0x0000bb2f      741d           je 0xbb4e
0x0000bb31      488b5008       mov rdx, qword [rax + 8]                ; ../coreutils-8.31/lib/hash.c:841
0x0000bb35      48895308       mov qword [rbx + 8], rdx
0x0000bb39      48c700000000.  mov qword [rax], 0                      ; ../coreutils-8.31/lib/hash.c:778
0x0000bb40      498b542448     mov rdx, qword [r12 + 0x48]             ; ../coreutils-8.31/lib/hash.c:779
0x0000bb45      48895008       mov qword [rax + 8], rdx
0x0000bb49      4989442448     mov qword [r12 + 0x48], rax             ; ../coreutils-8.31/lib/hash.c:780
0x0000bb4e      5b             pop rbx
0x0000bb4f      4889f0         mov rax, rsi
0x0000bb52      5d             pop rbp
0x0000bb53      415c           pop r12
0x0000bb55      415d           pop r13
0x0000bb57      415e           pop r14
0x0000bb59      c3             ret
0x0000bb5a      660f1f440000   nop word [rax + rax]
0x0000bb60      488b33         mov rsi, qword [rbx]
0x0000bb63      4584ed         test r13b, r13b
0x0000bb66      74e6           je 0xbb4e
0x0000bb68      488b4308       mov rax, qword [rbx + 8]
0x0000bb6c      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:672
0x0000bb6f      742f           je 0xbba0
0x0000bb71      f30f6f00       movdqu xmm0, xmmword [rax]
0x0000bb75      0f1103         movups xmmword [rbx], xmm0
0x0000bb78      48c700000000.  mov qword [rax], 0
0x0000bb7f      498b542448     mov rdx, qword [r12 + 0x48]             ; ../coreutils-8.31/lib/hash.c:388
0x0000bb84      48895008       mov qword [rax + 8], rdx
0x0000bb88      4989442448     mov qword [r12 + 0x48], rax
0x0000bb8d      4889f0         mov rax, rsi
0x0000bb90      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash.c:398
0x0000bb91      5d             pop rbp
0x0000bb92      415c           pop r12
0x0000bb94      415d           pop r13
0x0000bb96      415e           pop r14
0x0000bb98      c3             ret
0x0000bb99      0f1f80000000.  nop dword [rax]
0x0000bba0      48c703000000.  mov qword [rbx], 0
0x0000bba7      eba5           jmp 0xbb4e
0x0000bba9      0f1f80000000.  nop dword [rax]
0x0000bbb0      31f6           xor esi, esi
0x0000bbb2      5b             pop rbx
0x0000bbb3      4889f0         mov rax, rsi
0x0000bbb6      5d             pop rbp
0x0000bbb7      415c           pop r12
0x0000bbb9      415d           pop r13                                 ; ../coreutils-8.31/lib/hash.c:401
0x0000bbbb      415e           pop r14
0x0000bbbd      c3             ret
0x0000bbbe      6690           nop
;-- check_tuning.isra.0:
0x0000bbc0      488b17         mov rdx, qword [rdi]
0x0000bbc3      488d0d16c600.  lea rcx, obj.default_tuning             ; 0x181e0
0x0000bbca      b801000000     mov eax, 1
0x0000bbcf      4839ca         cmp rdx, rcx
0x0000bbd2      7461           je 0xbc35
0x0000bbd4      f30f104208     movss xmm0, dword [rdx + 8]
0x0000bbd9      0f2e0514c600.  ucomiss xmm0, dword [0x000181f4]
0x0000bbe0      764e           jbe 0xbc30
0x0000bbe2      f30f100d0ec6.  movss xmm1, dword [0x000181f8]          ; [0x181f8:4]=0x3f666666
0x0000bbea      0f2ec8         ucomiss xmm1, xmm0
0x0000bbed      7641           jbe 0xbc30
0x0000bbef      f30f104a0c     movss xmm1, dword [rdx + 0xc]           ; ../coreutils-8.31/lib/hash.c:408
0x0000bbf4      0f2e0d01c600.  ucomiss xmm1, dword [0x000181fc]
0x0000bbfb      7633           jbe 0xbc30
0x0000bbfd      f30f100a       movss xmm1, dword [rdx]
0x0000bc01      0f2e0df8c500.  ucomiss xmm1, dword [0x00018200]
0x0000bc08      7226           jb 0xbc30
0x0000bc0a      f30f580de2c5.  addss xmm1, dword [0x000181f4]          ; ../coreutils-8.31/lib/hash.c:737
0x0000bc12      f30f105204     movss xmm2, dword [rdx + 4]
0x0000bc17      0f2ed1         ucomiss xmm2, xmm1
0x0000bc1a      7614           jbe 0xbc30
0x0000bc1c      f30f101de0c5.  movss xmm3, dword [0x00018204]          ; [0x18204:4]=0x3f800000
0x0000bc24      0f2eda         ucomiss xmm3, xmm2                      ; ../coreutils-8.31/lib/hash.c:738
0x0000bc27      7207           jb 0xbc30
0x0000bc29      0f2ec1         ucomiss xmm0, xmm1
0x0000bc2c      7707           ja 0xbc35
0x0000bc2e      6690           nop
0x0000bc30      48890f         mov qword [rdi], rcx
0x0000bc33      31c0           xor eax, eax
0x0000bc35      f3c3           ret
0x0000bc37      660f1f840000.  nop word [rax + rax]
;-- transfer_entries:
0x0000bc40      4157           push r15
0x0000bc42      4156           push r14
0x0000bc44      4155           push r13                                ; ../coreutils-8.31/lib/hash.c:760
0x0000bc46      4154           push r12
0x0000bc48      55             push rbp                                ; ../coreutils-8.31/lib/hash.c:749
0x0000bc49      53             push rbx
0x0000bc4a      4883ec08       sub rsp, 8
0x0000bc4e      4c8b26         mov r12, qword [rsi]
0x0000bc51      4c3b6608       cmp r12, qword [rsi + 8]
0x0000bc55      0f83dd000000   jae 0xbd38
0x0000bc5b      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/hash.c:752
0x0000bc5e      4989f5         mov r13, rsi
0x0000bc61      4189d6         mov r14d, edx
0x0000bc64      0f1f4000       nop dword [rax]
0x0000bc68      4d8b3c24       mov r15, qword [r12]
0x0000bc6c      4d85ff         test r15, r15
0x0000bc6f      0f84b5000000   je 0xbd2a
0x0000bc75      498b5c2408     mov rbx, qword [r12 + 8]
0x0000bc7a      4885db         test rbx, rbx
0x0000bc7d      751d           jne 0xbc9c
0x0000bc7f      eb5a           jmp 0xbcdb
0x0000bc81      0f1f80000000.  nop dword [rax]
0x0000bc88      488b4808       mov rcx, qword [rax + 8]
0x0000bc8c      4885d2         test rdx, rdx
0x0000bc8f      48894b08       mov qword [rbx + 8], rcx                ; ../coreutils-8.31/lib/bitrotate.h:557
0x0000bc93      48895808       mov qword [rax + 8], rbx
0x0000bc97      4889d3         mov rbx, rdx
0x0000bc9a      743b           je 0xbcd7
0x0000bc9c      4c8b3b         mov r15, qword [rbx]
0x0000bc9f      4889ef         mov rdi, rbp
0x0000bca2      4c89fe         mov rsi, r15
0x0000bca5      e8c6fdffff     call sym.safe_hasher
0x0000bcaa      48833800       cmp qword [rax], 0
0x0000bcae      488b5308       mov rdx, qword [rbx + 8]                ; ../coreutils-8.31/lib/bitrotate.h:329
0x0000bcb2      75d4           jne 0xbc88
0x0000bcb4      4c8938         mov qword [rax], r15
0x0000bcb7      4883451801     add qword [rbp + 0x18], 1
0x0000bcbc      4885d2         test rdx, rdx
0x0000bcbf      48c703000000.  mov qword [rbx], 0
0x0000bcc6      488b4548       mov rax, qword [rbp + 0x48]
0x0000bcca      48894308       mov qword [rbx + 8], rax
0x0000bcce      48895d48       mov qword [rbp + 0x48], rbx             ; ../coreutils-8.31/lib/bitrotate.h:-285
0x0000bcd2      4889d3         mov rbx, rdx                            ; ../coreutils-8.31/lib/bitrotate.h:-283
0x0000bcd5      75c5           jne 0xbc9c
0x0000bcd7      4d8b3c24       mov r15, qword [r12]
0x0000bcdb      4584f6         test r14b, r14b
0x0000bcde      49c744240800.  mov qword [r12 + 8], 0                  ; ../coreutils-8.31/lib/bitrotate.h:-277
0x0000bce7      7541           jne 0xbd2a
0x0000bce9      4c89fe         mov rsi, r15
0x0000bcec      4889ef         mov rdi, rbp
0x0000bcef      e87cfdffff     call sym.safe_hasher
0x0000bcf4      48833800       cmp qword [rax], 0
0x0000bcf8      4889c3         mov rbx, rax
0x0000bcfb      7453           je 0xbd50
0x0000bcfd      488b4548       mov rax, qword [rbp + 0x48]
0x0000bd01      4885c0         test rax, rax
0x0000bd04      745a           je 0xbd60
0x0000bd06      488b5008       mov rdx, qword [rax + 8]
0x0000bd0a      48895548       mov qword [rbp + 0x48], rdx
0x0000bd0e      488b5308       mov rdx, qword [rbx + 8]                ; ../coreutils-8.31/lib/bitrotate.h:-255
0x0000bd12      4c8938         mov qword [rax], r15
0x0000bd15      48895008       mov qword [rax + 8], rdx
0x0000bd19      48894308       mov qword [rbx + 8], rax
0x0000bd1d      49c704240000.  mov qword [r12], 0                      ; ../coreutils-8.31/lib/bitrotate.h:-250
0x0000bd25      49836d1801     sub qword [r13 + 0x18], 1
0x0000bd2a      4983c410       add r12, 0x10                           ; ../coreutils-8.31/lib/bitrotate.h:-249
0x0000bd2e      4d396508       cmp qword [r13 + 8], r12                ; ../coreutils-8.31/lib/bitrotate.h:-250
0x0000bd32      0f8730ffffff   ja 0xbc68
0x0000bd38      4883c408       add rsp, 8
0x0000bd3c      b801000000     mov eax, 1
0x0000bd41      5b             pop rbx
0x0000bd42      5d             pop rbp
0x0000bd43      415c           pop r12
0x0000bd45      415d           pop r13                                 ; ../coreutils-8.31/lib/bitrotate.h:-241
0x0000bd47      415e           pop r14
0x0000bd49      415f           pop r15
0x0000bd4b      c3             ret
0x0000bd4c      0f1f4000       nop dword [rax]
0x0000bd50      4c8938         mov qword [rax], r15
0x0000bd53      4883451801     add qword [rbp + 0x18], 1
0x0000bd58      ebc3           jmp 0xbd1d
0x0000bd5a      660f1f440000   nop word [rax + rax]
0x0000bd60      bf10000000     mov edi, 0x10
0x0000bd65      e88670ffff     call sym.imp.malloc
0x0000bd6a      4885c0         test rax, rax
0x0000bd6d      759f           jne 0xbd0e
0x0000bd6f      4883c408       add rsp, 8
0x0000bd73      31c0           xor eax, eax
0x0000bd75      5b             pop rbx
0x0000bd76      5d             pop rbp
0x0000bd77      415c           pop r12
0x0000bd79      415d           pop r13
0x0000bd7b      415e           pop r14
0x0000bd7d      415f           pop r15
0x0000bd7f      c3             ret
;-- hash_get_n_buckets:
0x0000bd80      488b4710       mov rax, qword [rdi + 0x10]
0x0000bd84      c3             ret
0x0000bd85      90             nop
0x0000bd86      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/bitrotate.h:-218
;-- hash_get_n_buckets_used:
0x0000bd90      488b4718       mov rax, qword [rdi + 0x18]
0x0000bd94      c3             ret                                     ; ../coreutils-8.31/lib/bitrotate.h:-210
0x0000bd95      90             nop
0x0000bd96      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/bitrotate.h:-213
;-- hash_get_n_entries:
0x0000bda0      488b4720       mov rax, qword [rdi + 0x20]
0x0000bda4      c3             ret
0x0000bda5      90             nop                                     ; ../coreutils-8.31/lib/bitrotate.h:-209
0x0000bda6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_max_bucket_length:
0x0000bdb0      488b37         mov rsi, qword [rdi]
0x0000bdb3      488b7f08       mov rdi, qword [rdi + 8]
0x0000bdb7      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/bitrotate.h:-259
0x0000bdb9      4839fe         cmp rsi, rdi                            ; ../coreutils-8.31/lib/bitrotate.h:-205
0x0000bdbc      7339           jae 0xbdf7
0x0000bdbe      6690           nop
0x0000bdc0      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/bitrotate.h:-268
0x0000bdc4      7426           je 0xbdec                               ; ../coreutils-8.31/lib/bitrotate.h:-284
0x0000bdc6      488b5608       mov rdx, qword [rsi + 8]
0x0000bdca      b901000000     mov ecx, 1
0x0000bdcf      4885d2         test rdx, rdx
0x0000bdd2      7411           je 0xbde5
0x0000bdd4      0f1f4000       nop dword [rax]
0x0000bdd8      488b5208       mov rdx, qword [rdx + 8]
0x0000bddc      4883c101       add rcx, 1
0x0000bde0      4885d2         test rdx, rdx
0x0000bde3      75f3           jne 0xbdd8
0x0000bde5      4839c8         cmp rax, rcx
0x0000bde8      480f42c1       cmovb rax, rcx                          ; ../coreutils-8.31/lib/bitrotate.h:-252
0x0000bdec      4883c610       add rsi, 0x10
0x0000bdf0      4839fe         cmp rsi, rdi
0x0000bdf3      72cb           jb 0xbdc0
0x0000bdf5      f3c3           ret
0x0000bdf7      f3c3           ret
0x0000bdf9      0f1f80000000.  nop dword [rax]
;-- hash_table_ok:
0x0000be00      488b0f         mov rcx, qword [rdi]
0x0000be03      4c8b4708       mov r8, qword [rdi + 8]
0x0000be07      31d2           xor edx, edx
0x0000be09      31f6           xor esi, esi
0x0000be0b      4c39c1         cmp rcx, r8
0x0000be0e      7336           jae 0xbe46
0x0000be10      48833900       cmp qword [rcx], 0
0x0000be14      7427           je 0xbe3d
0x0000be16      488b4108       mov rax, qword [rcx + 8]
0x0000be1a      4883c601       add rsi, 1
0x0000be1e      4883c201       add rdx, 1
0x0000be22      4885c0         test rax, rax
0x0000be25      7416           je 0xbe3d
0x0000be27      660f1f840000.  nop word [rax + rax]
0x0000be30      488b4008       mov rax, qword [rax + 8]
0x0000be34      4883c201       add rdx, 1
0x0000be38      4885c0         test rax, rax
0x0000be3b      75f3           jne 0xbe30
0x0000be3d      4883c110       add rcx, 0x10
0x0000be41      4c39c1         cmp rcx, r8
0x0000be44      72ca           jb 0xbe10
0x0000be46      31c0           xor eax, eax
0x0000be48      48397718       cmp qword [rdi + 0x18], rsi
0x0000be4c      7402           je 0xbe50
0x0000be4e      f3c3           ret                                     ; ../coreutils-8.31/lib/hash.c:-195
0x0000be50      48395720       cmp qword [rdi + 0x20], rdx
0x0000be54      0f94c0         sete al
0x0000be57      c3             ret
0x0000be58      0f1f84000000.  nop dword [rax + rax]
;-- hash_print_statistics:
0x0000be60      4155           push r13
0x0000be62      4154           push r12
0x0000be64      4989f4         mov r12, rsi
0x0000be67      55             push rbp
0x0000be68      53             push rbx
0x0000be69      31db           xor ebx, ebx
0x0000be6b      4883ec08       sub rsp, 8
0x0000be6f      488b37         mov rsi, qword [rdi]
0x0000be72      488b4f20       mov rcx, qword [rdi + 0x20]
0x0000be76      488b6f10       mov rbp, qword [rdi + 0x10]
0x0000be7a      4c8b6f18       mov r13, qword [rdi + 0x18]
0x0000be7e      488b7f08       mov rdi, qword [rdi + 8]
0x0000be82      4839fe         cmp rsi, rdi
0x0000be85      733e           jae 0xbec5
0x0000be87      660f1f840000.  nop word [rax + rax]
0x0000be90      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/hash.c:-192
0x0000be94      7426           je 0xbebc
0x0000be96      488b4608       mov rax, qword [rsi + 8]                ; stdio2.h:-339
0x0000be9a      ba01000000     mov edx, 1
0x0000be9f      4885c0         test rax, rax
0x0000bea2      7411           je 0xbeb5
0x0000bea4      0f1f4000       nop dword [rax]
0x0000bea8      488b4008       mov rax, qword [rax + 8]
0x0000beac      4883c201       add rdx, 1
0x0000beb0      4885c0         test rax, rax
0x0000beb3      75f3           jne 0xbea8
0x0000beb5      4839d3         cmp rbx, rdx
0x0000beb8      480f42da       cmovb rbx, rdx
0x0000bebc      4883c610       add rsi, 0x10
0x0000bec0      4839fe         cmp rsi, rdi
0x0000bec3      72cb           jb 0xbe90
0x0000bec5      488d159ac200.  lea rdx, str.entries:__________lu       ; 0x18166 ; "# entries:         %lu\n"
0x0000becc      be01000000     mov esi, 1
0x0000bed1      4c89e7         mov rdi, r12
0x0000bed4      31c0           xor eax, eax
0x0000bed6      e87571ffff     call sym.imp.__fprintf_chk
0x0000bedb      488d159cc200.  lea rdx, str.buckets:__________lu       ; 0x1817e ; "# buckets:         %lu\n"
0x0000bee2      31c0           xor eax, eax
0x0000bee4      4889e9         mov rcx, rbp
0x0000bee7      be01000000     mov esi, 1
0x0000beec      4c89e7         mov rdi, r12
0x0000beef      e85c71ffff     call sym.imp.__fprintf_chk
0x0000bef4      4d85ed         test r13, r13
0x0000bef7      7867           js 0xbf60
0x0000bef9      660fefc0       pxor xmm0, xmm0
0x0000befd      4885ed         test rbp, rbp
0x0000bf00      f2490f2ac5     cvtsi2sd xmm0, r13
0x0000bf05      f20f59050bc3.  mulsd xmm0, qword [0x00018218]          ; ../coreutils-8.31/lib/hash.c:-174
0x0000bf0d      787a           js 0xbf89                               ; ../coreutils-8.31/lib/hash.c:-170
0x0000bf0f      660fefc9       pxor xmm1, xmm1
0x0000bf13      f2480f2acd     cvtsi2sd xmm1, rbp
0x0000bf18      f20f5ec1       divsd xmm0, xmm1
0x0000bf1c      488d158dc200.  lea rdx, str.buckets_used:_____lu___.2f ; 0x181b0 ; "# buckets used:    %lu (%.2f%%)\n"
0x0000bf23      4c89e9         mov rcx, r13
0x0000bf26      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/hash.c:-166
0x0000bf29      be01000000     mov esi, 1
0x0000bf2e      b801000000     mov eax, 1
0x0000bf33      e81871ffff     call sym.imp.__fprintf_chk
0x0000bf38      4883c408       add rsp, 8
0x0000bf3c      4889d9         mov rcx, rbx
0x0000bf3f      4c89e7         mov rdi, r12
0x0000bf42      5b             pop rbx
0x0000bf43      5d             pop rbp
0x0000bf44      415c           pop r12
0x0000bf46      415d           pop r13
0x0000bf48      488d1547c200.  lea rdx, str.max_bucket_length:__lu     ; 0x18196 ; "max bucket length: %lu\n"
0x0000bf4f      be01000000     mov esi, 1
0x0000bf54      31c0           xor eax, eax
0x0000bf56      e9f570ffff     jmp sym.imp.__fprintf_chk
0x0000bf5b      0f1f440000     nop dword [rax + rax]
0x0000bf60      4c89e8         mov rax, r13
0x0000bf63      4c89ea         mov rdx, r13
0x0000bf66      660fefc0       pxor xmm0, xmm0
0x0000bf6a      48d1e8         shr rax, 1
0x0000bf6d      83e201         and edx, 1
0x0000bf70      4809d0         or rax, rdx
0x0000bf73      4885ed         test rbp, rbp
0x0000bf76      f2480f2ac0     cvtsi2sd xmm0, rax
0x0000bf7b      f20f58c0       addsd xmm0, xmm0
0x0000bf7f      f20f590591c2.  mulsd xmm0, qword [0x00018218]
0x0000bf87      7986           jns 0xbf0f                              ; ../coreutils-8.31/lib/hash.c:-138
0x0000bf89      4889e8         mov rax, rbp
0x0000bf8c      660fefc9       pxor xmm1, xmm1
0x0000bf90      48d1e8         shr rax, 1
0x0000bf93      83e501         and ebp, 1                              ; ../coreutils-8.31/lib/hash.c:-136
0x0000bf96      4809e8         or rax, rbp                             ; ../coreutils-8.31/lib/hash.c:-147
0x0000bf99      f2480f2ac8     cvtsi2sd xmm1, rax
0x0000bf9e      f20f58c9       addsd xmm1, xmm1
0x0000bfa2      e971ffffff     jmp 0xbf18
0x0000bfa7      660f1f840000.  nop word [rax + rax]
;-- hash_lookup:
0x0000bfb0      4154           push r12
0x0000bfb2      55             push rbp
0x0000bfb3      4989fc         mov r12, rdi
0x0000bfb6      53             push rbx
0x0000bfb7      4889f5         mov rbp, rsi
0x0000bfba      e8b1faffff     call sym.safe_hasher                    ; ../coreutils-8.31/lib/hash.c:-127
0x0000bfbf      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:-123
0x0000bfc2      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/hash.c:-127
0x0000bfc5      7426           je 0xbfed                               ; ../coreutils-8.31/lib/hash.c:-120
0x0000bfc7      4889c3         mov rbx, rax
0x0000bfca      eb07           jmp 0xbfd3
0x0000bfcc      0f1f4000       nop dword [rax]
0x0000bfd0      488b33         mov rsi, qword [rbx]
0x0000bfd3      4839ee         cmp rsi, rbp
0x0000bfd6      7417           je 0xbfef                               ; ../coreutils-8.31/lib/hash.c:-116
0x0000bfd8      4889ef         mov rdi, rbp
0x0000bfdb      41ff542438     call qword [r12 + 0x38]                 ; ../coreutils-8.31/lib/hash.c:-120
0x0000bfe0      84c0           test al, al
0x0000bfe2      751c           jne 0xc000
0x0000bfe4      488b5b08       mov rbx, qword [rbx + 8]
0x0000bfe8      4885db         test rbx, rbx
0x0000bfeb      75e3           jne 0xbfd0
0x0000bfed      31f6           xor esi, esi
0x0000bfef      5b             pop rbx
0x0000bff0      4889f0         mov rax, rsi
0x0000bff3      5d             pop rbp
0x0000bff4      415c           pop r12
0x0000bff6      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:-112
0x0000bff7      660f1f840000.  nop word [rax + rax]
0x0000c000      488b33         mov rsi, qword [rbx]
0x0000c003      5b             pop rbx
0x0000c004      5d             pop rbp
0x0000c005      4889f0         mov rax, rsi
0x0000c008      415c           pop r12
0x0000c00a      c3             ret
0x0000c00b      0f1f440000     nop dword [rax + rax]
;-- hash_get_first:
0x0000c010      48837f2000     cmp qword [rdi + 0x20], 0
0x0000c015      742c           je 0xc043
0x0000c017      488b17         mov rdx, qword [rdi]
0x0000c01a      488b4f08       mov rcx, qword [rdi + 8]
0x0000c01e      4839ca         cmp rdx, rcx
0x0000c021      7325           jae 0xc048
0x0000c023      488b02         mov rax, qword [rdx]
0x0000c026      4885c0         test rax, rax
0x0000c029      751b           jne 0xc046
0x0000c02b      0f1f440000     nop dword [rax + rax]
0x0000c030      4883c210       add rdx, 0x10
0x0000c034      4839ca         cmp rdx, rcx
0x0000c037      730f           jae 0xc048                              ; ../coreutils-8.31/lib/hash.c:-97
0x0000c039      488b02         mov rax, qword [rdx]
0x0000c03c      4885c0         test rax, rax
0x0000c03f      74ef           je 0xc030
0x0000c041      f3c3           ret
0x0000c043      31c0           xor eax, eax
0x0000c045      c3             ret
0x0000c046      f3c3           ret
0x0000c048      4883ec08       sub rsp, 8
0x0000c04c      e8ef68ffff     call sym.imp.abort
0x0000c051      0f1f440000     nop dword [rax + rax]
0x0000c056      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_next:
0x0000c060      55             push rbp
0x0000c061      53             push rbx
0x0000c062      4889fd         mov rbp, rdi
0x0000c065      4889f3         mov rbx, rsi
0x0000c068      4883ec08       sub rsp, 8
0x0000c06c      e8fff9ffff     call sym.safe_hasher
0x0000c071      4889c2         mov rdx, rax
0x0000c074      4889c1         mov rcx, rax
0x0000c077      488b02         mov rax, qword [rdx]
0x0000c07a      488b5208       mov rdx, qword [rdx + 8]
0x0000c07e      4839d8         cmp rax, rbx
0x0000c081      7416           je 0xc099
0x0000c083      0f1f440000     nop dword [rax + rax]
0x0000c088      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:-79
0x0000c08b      7411           je 0xc09e
0x0000c08d      488b02         mov rax, qword [rdx]
0x0000c090      488b5208       mov rdx, qword [rdx + 8]                ; ../coreutils-8.31/lib/hash.c:-97
0x0000c094      4839d8         cmp rax, rbx
0x0000c097      75ef           jne 0xc088
0x0000c099      4885d2         test rdx, rdx
0x0000c09c      752a           jne 0xc0c8
0x0000c09e      488b5508       mov rdx, qword [rbp + 8]                ; ../coreutils-8.31/lib/hash.c:-66
0x0000c0a2      eb0c           jmp 0xc0b0
0x0000c0a4      0f1f4000       nop dword [rax]
0x0000c0a8      488b01         mov rax, qword [rcx]
0x0000c0ab      4885c0         test rax, rax
0x0000c0ae      750b           jne 0xc0bb
0x0000c0b0      4883c110       add rcx, 0x10
0x0000c0b4      4839ca         cmp rdx, rcx
0x0000c0b7      77ef           ja 0xc0a8
0x0000c0b9      31c0           xor eax, eax
0x0000c0bb      4883c408       add rsp, 8
0x0000c0bf      5b             pop rbx
0x0000c0c0      5d             pop rbp                                 ; ../coreutils-8.31/lib/hash.c:-59
0x0000c0c1      c3             ret
0x0000c0c2      660f1f440000   nop word [rax + rax]
0x0000c0c8      488b02         mov rax, qword [rdx]
0x0000c0cb      4883c408       add rsp, 8
0x0000c0cf      5b             pop rbx
0x0000c0d0      5d             pop rbp
0x0000c0d1      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:-55
0x0000c0d2      0f1f4000       nop dword [rax]
0x0000c0d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_entries:
0x0000c0e0      4c8b0f         mov r9, qword [rdi]
0x0000c0e3      4c394f08       cmp qword [rdi + 8], r9                 ; ../coreutils-8.31/lib/hash.c:-57
0x0000c0e7      7659           jbe 0xc142
0x0000c0e9      4531c0         xor r8d, r8d
0x0000c0ec      498b09         mov rcx, qword [r9]
0x0000c0ef      4885c9         test rcx, rcx
0x0000c0f2      7439           je 0xc12d                               ; ../coreutils-8.31/lib/hash.c:-47
0x0000c0f4      4c39c2         cmp rdx, r8
0x0000c0f7      763e           jbe 0xc137
0x0000c0f9      4a890cc6       mov qword [rsi + r8*8], rcx
0x0000c0fd      498b4908       mov rcx, qword [r9 + 8]
0x0000c101      498d4001       lea rax, [r8 + 1]
0x0000c105      4885c9         test rcx, rcx
0x0000c108      7420           je 0xc12a
0x0000c10a      660f1f440000   nop word [rax + rax]
0x0000c110      4839c2         cmp rdx, rax
0x0000c113      742b           je 0xc140                               ; ../coreutils-8.31/lib/hash.c:-3
0x0000c115      4c8b01         mov r8, qword [rcx]
0x0000c118      4883c001       add rax, 1
0x0000c11c      4c8944c6f8     mov qword [rsi + rax*8 - 8], r8
0x0000c121      488b4908       mov rcx, qword [rcx + 8]
0x0000c125      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/hash.c:-2
0x0000c128      75e6           jne 0xc110
0x0000c12a      4989c0         mov r8, rax
0x0000c12d      4983c110       add r9, 0x10
0x0000c131      4c394f08       cmp qword [rdi + 8], r9                 ; ../coreutils-8.31/lib/hash.c:-3
0x0000c135      77b5           ja 0xc0ec
0x0000c137      4c89c0         mov rax, r8
0x0000c13a      c3             ret
0x0000c13b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/hash.c:0
0x0000c140      f3c3           ret
0x0000c142      31c0           xor eax, eax
0x0000c144      c3             ret
0x0000c145      90             nop
0x0000c146      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_do_for_each:
0x0000c150      4157           push r15
0x0000c152      4156           push r14
0x0000c154      4155           push r13
0x0000c156      4154           push r12
0x0000c158      55             push rbp
0x0000c159      53             push rbx
0x0000c15a      4883ec08       sub rsp, 8
0x0000c15e      4c8b37         mov r14, qword [rdi]
0x0000c161      4c397708       cmp qword [rdi + 8], r14
0x0000c165      764f           jbe 0xc1b6
0x0000c167      4989d5         mov r13, rdx
0x0000c16a      4989f4         mov r12, rsi
0x0000c16d      4989ff         mov r15, rdi                            ; ../coreutils-8.31/lib/hash.c:46
0x0000c170      31ed           xor ebp, ebp
0x0000c172      498b3e         mov rdi, qword [r14]
0x0000c175      4885ff         test rdi, rdi
0x0000c178      7420           je 0xc19a
0x0000c17a      4c89f3         mov rbx, r14
0x0000c17d      eb04           jmp 0xc183
0x0000c17f      90             nop
0x0000c180      488b3b         mov rdi, qword [rbx]
0x0000c183      4c89ee         mov rsi, r13                            ; ../coreutils-8.31/lib/hash.c:37
0x0000c186      41ffd4         call r12
0x0000c189      84c0           test al, al
0x0000c18b      7417           je 0xc1a4
0x0000c18d      488b5b08       mov rbx, qword [rbx + 8]
0x0000c191      4883c501       add rbp, 1
0x0000c195      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/hash.c:33
0x0000c198      75e6           jne 0xc180
0x0000c19a      4983c610       add r14, 0x10
0x0000c19e      4d397708       cmp qword [r15 + 8], r14
0x0000c1a2      77ce           ja 0xc172
0x0000c1a4      4883c408       add rsp, 8
0x0000c1a8      4889e8         mov rax, rbp
0x0000c1ab      5b             pop rbx
0x0000c1ac      5d             pop rbp                                 ; ../coreutils-8.31/lib/hash.c:38
0x0000c1ad      415c           pop r12
0x0000c1af      415d           pop r13                                 ; ../coreutils-8.31/lib/hash.c:37
0x0000c1b1      415e           pop r14
0x0000c1b3      415f           pop r15
0x0000c1b5      c3             ret
0x0000c1b6      31ed           xor ebp, ebp
0x0000c1b8      ebea           jmp 0xc1a4                              ; ../coreutils-8.31/lib/hash.c:41
0x0000c1ba      660f1f440000   nop word [rax + rax]
;-- hash_string:
0x0000c1c0      0fb60f         movzx ecx, byte [rdi]
0x0000c1c3      31d2           xor edx, edx
0x0000c1c5      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hash.c:43
0x0000c1c7      7424           je 0xc1ed
0x0000c1c9      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/hash.c:44
0x0000c1d0      4889d0         mov rax, rdx
0x0000c1d3      4883c701       add rdi, 1
0x0000c1d7      48c1e005       shl rax, 5
0x0000c1db      4829d0         sub rax, rdx
0x0000c1de      31d2           xor edx, edx
0x0000c1e0      4801c8         add rax, rcx
0x0000c1e3      0fb60f         movzx ecx, byte [rdi]
0x0000c1e6      48f7f6         div rsi
0x0000c1e9      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hash.c:-14
0x0000c1eb      75e3           jne 0xc1d0
0x0000c1ed      4889d0         mov rax, rdx
0x0000c1f0      c3             ret
0x0000c1f1      0f1f440000     nop dword [rax + rax]
0x0000c1f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_reset_tuning:
0x0000c200      48b800000000.  movabs rax, 0x3f80000000000000          ; 4575657221408423936
0x0000c20a      c6471000       mov byte [rdi + 0x10], 0                ; ../coreutils-8.31/lib/hash.c:-70
0x0000c20e      488907         mov qword [rdi], rax
0x0000c211      48b8cdcc4c3f.  movabs rax, 0x3fb4fdf43f4ccccd
0x0000c21b      48894708       mov qword [rdi + 8], rax                ; ../coreutils-8.31/lib/hash.c:-65
0x0000c21f      c3             ret
;-- hash_initialize:
0x0000c220      4157           push r15
0x0000c222      4156           push r14
0x0000c224      488d0525f8ff.  lea rax, sym.raw_hasher                 ; 0xba50 ; "H\x89\xf81\xd2H\xc1\xc8\x03H\xf7\xf6H\x89\xd0\xc3H9\xf7\x0f\x94\xc0\xc3f\x0f\x1f\x84"
0x0000c22b      4155           push r13
0x0000c22d      4154           push r12
0x0000c22f      4989d4         mov r12, rdx
0x0000c232      55             push rbp                                ; ../coreutils-8.31/lib/hash.c:-61
0x0000c233      53             push rbx
0x0000c234      4989cd         mov r13, rcx
0x0000c237      4889fd         mov rbp, rdi
0x0000c23a      bf50000000     mov edi, 0x50                           ; 'P'
0x0000c23f      4989f7         mov r15, rsi
0x0000c242      4883ec08       sub rsp, 8
0x0000c246      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:-52
0x0000c249      4d89c6         mov r14, r8
0x0000c24c      4c0f44e0       cmove r12, rax
0x0000c250      488d0509f8ff.  lea rax, sym.raw_comparator             ; 0xba60 ; "H9\xf7\x0f\x94\xc0\xc3f\x0f\x1f\x84"
0x0000c257      4885c9         test rcx, rcx
0x0000c25a      4c0f44e8       cmove r13, rax
0x0000c25e      e88d6bffff     call sym.imp.malloc
0x0000c263      4885c0         test rax, rax
0x0000c266      4889c3         mov rbx, rax
0x0000c269      0f84ab000000   je 0xc31a
0x0000c26f      4d85ff         test r15, r15
0x0000c272      488d7828       lea rdi, [rax + 0x28]
0x0000c276      0f84b4000000   je 0xc330
0x0000c27c      4c897828       mov qword [rax + 0x28], r15
0x0000c280      e83bf9ffff     call sym.check_tuning.isra.0
0x0000c285      84c0           test al, al
0x0000c287      0f8483000000   je 0xc310
0x0000c28d      41807f1000     cmp byte [r15 + 0x10], 0
0x0000c292      0f84f8000000   je 0xc390
0x0000c298      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/hash.c:-145
0x0000c29b      e810f7ffff     call sym.next_prime
0x0000c2a0      ba08000000     mov edx, 8
0x0000c2a5      4889c5         mov rbp, rax
0x0000c2a8      31c9           xor ecx, ecx
0x0000c2aa      4889d0         mov rax, rdx
0x0000c2ad      48f7e5         mul rbp
0x0000c2b0      0f8014010000   jo 0xc3ca
0x0000c2b6      4885c0         test rax, rax
0x0000c2b9      7855           js 0xc310
0x0000c2bb      4885c9         test rcx, rcx
0x0000c2be      7550           jne 0xc310
0x0000c2c0      4885ed         test rbp, rbp
0x0000c2c3      48896b10       mov qword [rbx + 0x10], rbp
0x0000c2c7      7447           je 0xc310
0x0000c2c9      be10000000     mov esi, 0x10
0x0000c2ce      4889ef         mov rdi, rbp
0x0000c2d1      e8fa69ffff     call sym.imp.calloc
0x0000c2d6      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:-197
0x0000c2d9      488903         mov qword [rbx], rax
0x0000c2dc      7432           je 0xc310
0x0000c2de      48c1e504       shl rbp, 4
0x0000c2e2      48c743180000.  mov qword [rbx + 0x18], 0
0x0000c2ea      48c743200000.  mov qword [rbx + 0x20], 0
0x0000c2f2      4801c5         add rbp, rax
0x0000c2f5      4c896330       mov qword [rbx + 0x30], r12
0x0000c2f9      4c896b38       mov qword [rbx + 0x38], r13
0x0000c2fd      48896b08       mov qword [rbx + 8], rbp
0x0000c301      4c897340       mov qword [rbx + 0x40], r14
0x0000c305      48c743480000.  mov qword [rbx + 0x48], 0
0x0000c30d      eb0b           jmp 0xc31a
0x0000c30f      90             nop
0x0000c310      4889df         mov rdi, rbx
0x0000c313      31db           xor ebx, ebx
0x0000c315      e8b66dffff     call sym..plt.got
0x0000c31a      4883c408       add rsp, 8
0x0000c31e      4889d8         mov rax, rbx
0x0000c321      5b             pop rbx
0x0000c322      5d             pop rbp
0x0000c323      415c           pop r12
0x0000c325      415d           pop r13
0x0000c327      415e           pop r14
0x0000c329      415f           pop r15
0x0000c32b      c3             ret
0x0000c32c      0f1f4000       nop dword [rax]
0x0000c330      488d05a9be00.  lea rax, obj.default_tuning             ; 0x181e0
0x0000c337      48894328       mov qword [rbx + 0x28], rax             ; ../coreutils-8.31/lib/hash.c:-199
0x0000c33b      e880f8ffff     call sym.check_tuning.isra.0
0x0000c340      84c0           test al, al
0x0000c342      f30f100dbebe.  movss xmm1, dword [0x00018208]          ; [0x18208:4]=0x3f4ccccd
0x0000c34a      74c4           je 0xc310
0x0000c34c      4885ed         test rbp, rbp
0x0000c34f      784a           js 0xc39b
0x0000c351      660fefc0       pxor xmm0, xmm0                         ; ../coreutils-8.31/lib/hash.c:-168
0x0000c355      f3480f2ac5     cvtsi2ss xmm0, rbp
0x0000c35a      f30f5ec1       divss xmm0, xmm1
0x0000c35e      0f2e05a7be00.  ucomiss xmm0, dword [0x0001820c]
0x0000c365      73a9           jae 0xc310
0x0000c367      0f2e05a2be00.  ucomiss xmm0, dword [0x00018210]
0x0000c36e      7250           jb 0xc3c0
0x0000c370      f30f5c0598be.  subss xmm0, dword [0x00018210]
0x0000c378      48b800000000.  movabs rax, 0x8000000000000000
0x0000c382      f3480f2ce8     cvttss2si rbp, xmm0
0x0000c387      4831c5         xor rbp, rax
0x0000c38a      e909ffffff     jmp 0xc298
0x0000c38f      90             nop
0x0000c390      4885ed         test rbp, rbp
0x0000c393      f3410f104f08   movss xmm1, dword [r15 + 8]
0x0000c399      79b6           jns 0xc351                              ; ../coreutils-8.31/lib/hash.c:-146
0x0000c39b      4889e8         mov rax, rbp
0x0000c39e      660fefc0       pxor xmm0, xmm0                         ; ../coreutils-8.31/lib/hash.c:-147
0x0000c3a2      48d1e8         shr rax, 1
0x0000c3a5      83e501         and ebp, 1
0x0000c3a8      4809e8         or rax, rbp
0x0000c3ab      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000c3b0      f30f58c0       addss xmm0, xmm0
0x0000c3b4      eba4           jmp 0xc35a
0x0000c3b6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000c3c0      f3480f2ce8     cvttss2si rbp, xmm0
0x0000c3c5      e9cefeffff     jmp 0xc298
0x0000c3ca      b901000000     mov ecx, 1
0x0000c3cf      e9e2feffff     jmp 0xc2b6
0x0000c3d4      6690           nop
0x0000c3d6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/hash.c:-130
;-- hash_clear:
0x0000c3e0      4154           push r12
0x0000c3e2      55             push rbp
0x0000c3e3      4889fd         mov rbp, rdi
0x0000c3e6      53             push rbx
0x0000c3e7      4c8b27         mov r12, qword [rdi]                    ; ../coreutils-8.31/lib/hash.c:-134
0x0000c3ea      4c3b6708       cmp r12, qword [rdi + 8]
0x0000c3ee      736b           jae 0xc45b
0x0000c3f0      49833c2400     cmp qword [r12], 0
0x0000c3f5      745a           je 0xc451
0x0000c3f7      498b5c2408     mov rbx, qword [r12 + 8]
0x0000c3fc      488b4540       mov rax, qword [rbp + 0x40]
0x0000c400      4885db         test rbx, rbx
0x0000c403      7430           je 0xc435
0x0000c405      0f1f00         nop dword [rax]
0x0000c408      4885c0         test rax, rax
0x0000c40b      7409           je 0xc416
0x0000c40d      488b3b         mov rdi, qword [rbx]
0x0000c410      ffd0           call rax
0x0000c412      488b4540       mov rax, qword [rbp + 0x40]
0x0000c416      488b5308       mov rdx, qword [rbx + 8]
0x0000c41a      488b4d48       mov rcx, qword [rbp + 0x48]
0x0000c41e      48c703000000.  mov qword [rbx], 0
0x0000c425      4885d2         test rdx, rdx
0x0000c428      48894b08       mov qword [rbx + 8], rcx
0x0000c42c      48895d48       mov qword [rbp + 0x48], rbx
0x0000c430      4889d3         mov rbx, rdx
0x0000c433      75d3           jne 0xc408
0x0000c435      4885c0         test rax, rax
0x0000c438      7406           je 0xc440
0x0000c43a      498b3c24       mov rdi, qword [r12]
0x0000c43e      ffd0           call rax
0x0000c440      49c704240000.  mov qword [r12], 0
0x0000c448      49c744240800.  mov qword [r12 + 8], 0
0x0000c451      4983c410       add r12, 0x10
0x0000c455      4c396508       cmp qword [rbp + 8], r12                ; ../coreutils-8.31/lib/hash.c:-310
0x0000c459      7795           ja 0xc3f0
0x0000c45b      48c745180000.  mov qword [rbp + 0x18], 0
0x0000c463      48c745200000.  mov qword [rbp + 0x20], 0
0x0000c46b      5b             pop rbx
0x0000c46c      5d             pop rbp
0x0000c46d      415c           pop r12
0x0000c46f      c3             ret
;-- hash_free:
0x0000c470      4154           push r12
0x0000c472      55             push rbp
0x0000c473      4989fc         mov r12, rdi
0x0000c476      53             push rbx                                ; ../coreutils-8.31/lib/hash.c:-307
0x0000c477      48837f4000     cmp qword [rdi + 0x40], 0
0x0000c47c      488b2f         mov rbp, qword [rdi]
0x0000c47f      488b4708       mov rax, qword [rdi + 8]
0x0000c483      744e           je 0xc4d3                               ; ../coreutils-8.31/lib/hash.c:-305
0x0000c485      48837f2000     cmp qword [rdi + 0x20], 0
0x0000c48a      7447           je 0xc4d3
0x0000c48c      4839c5         cmp rbp, rax
0x0000c48f      737b           jae 0xc50c
0x0000c491      0f1f80000000.  nop dword [rax]
0x0000c498      488b7d00       mov rdi, qword [rbp]
0x0000c49c      4885ff         test rdi, rdi
0x0000c49f      7425           je 0xc4c6
0x0000c4a1      4889eb         mov rbx, rbp
0x0000c4a4      eb0d           jmp 0xc4b3
0x0000c4a6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000c4b0      488b3b         mov rdi, qword [rbx]
0x0000c4b3      41ff542440     call qword [r12 + 0x40]                 ; segment.PHDR
0x0000c4b8      488b5b08       mov rbx, qword [rbx + 8]
0x0000c4bc      4885db         test rbx, rbx
0x0000c4bf      75ef           jne 0xc4b0
0x0000c4c1      498b442408     mov rax, qword [r12 + 8]
0x0000c4c6      4883c510       add rbp, 0x10
0x0000c4ca      4839e8         cmp rax, rbp
0x0000c4cd      77c9           ja 0xc498
0x0000c4cf      498b2c24       mov rbp, qword [r12]
0x0000c4d3      4839c5         cmp rbp, rax
0x0000c4d6      7334           jae 0xc50c
0x0000c4d8      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/hash.c:93
0x0000c4e0      488b7d08       mov rdi, qword [rbp + 8]
0x0000c4e4      4885ff         test rdi, rdi
0x0000c4e7      7418           je 0xc501
0x0000c4e9      0f1f80000000.  nop dword [rax]
0x0000c4f0      488b5f08       mov rbx, qword [rdi + 8]
0x0000c4f4      e8d76bffff     call sym..plt.got                       ; ../coreutils-8.31/lib/hash.c:98
0x0000c4f9      4885db         test rbx, rbx
0x0000c4fc      4889df         mov rdi, rbx
0x0000c4ff      75ef           jne 0xc4f0
0x0000c501      4883c510       add rbp, 0x10                           ; ../coreutils-8.31/lib/hash.c:99
0x0000c505      49396c2408     cmp qword [r12 + 8], rbp
0x0000c50a      77d4           ja 0xc4e0
0x0000c50c      498b7c2448     mov rdi, qword [r12 + 0x48]
0x0000c511      4885ff         test rdi, rdi
0x0000c514      741b           je 0xc531
0x0000c516      662e0f1f8400.  nop word cs:[rax + rax]
0x0000c520      488b5f08       mov rbx, qword [rdi + 8]
0x0000c524      e8a76bffff     call sym..plt.got
0x0000c529      4885db         test rbx, rbx
0x0000c52c      4889df         mov rdi, rbx
0x0000c52f      75ef           jne 0xc520
0x0000c531      498b3c24       mov rdi, qword [r12]
0x0000c535      e8966bffff     call sym..plt.got
0x0000c53a      5b             pop rbx
0x0000c53b      4c89e7         mov rdi, r12
0x0000c53e      5d             pop rbp
0x0000c53f      415c           pop r12
0x0000c541      e98a6bffff     jmp sym..plt.got                        ; ../coreutils-8.31/lib/hash.c:107
0x0000c546      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_rehash:
0x0000c550      4154           push r12
0x0000c552      55             push rbp
0x0000c553      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/hash.c:108
0x0000c556      53             push rbx
0x0000c557      4883ec60       sub rsp, 0x60
0x0000c55b      4c8b6728       mov r12, qword [rdi + 0x28]
0x0000c55f      64488b042528.  mov rax, qword fs:[0x28]
0x0000c568      4889442458     mov qword [rsp + 0x58], rax
0x0000c56d      31c0           xor eax, eax
0x0000c56f      41807c241000   cmp byte [r12 + 0x10], 0
0x0000c575      7551           jne 0xc5c8
0x0000c577      4885f6         test rsi, rsi
0x0000c57a      0f8878010000   js 0xc6f8
0x0000c580      660fefc0       pxor xmm0, xmm0
0x0000c584      f3480f2ac6     cvtsi2ss xmm0, rsi                      ; ../coreutils-8.31/lib/hash.c:156
0x0000c589      f3410f5e4424.  divss xmm0, dword [r12 + 8]
0x0000c590      0f2e0575bc00.  ucomiss xmm0, dword [0x0001820c]
0x0000c597      0f8333010000   jae 0xc6d0
0x0000c59d      0f2e056cbc00.  ucomiss xmm0, dword [0x00018210]
0x0000c5a4      0f8276010000   jb 0xc720
0x0000c5aa      f30f5c055ebc.  subss xmm0, dword [0x00018210]          ; ../coreutils-8.31/lib/hash.c:161
0x0000c5b2      48b800000000.  movabs rax, 0x8000000000000000
0x0000c5bc      f3480f2cf0     cvttss2si rsi, xmm0
0x0000c5c1      4831c6         xor rsi, rax                            ; ../coreutils-8.31/lib/bitrotate.h:35
0x0000c5c4      0f1f4000       nop dword [rax]
0x0000c5c8      4889f7         mov rdi, rsi
0x0000c5cb      e8e0f3ffff     call sym.next_prime
0x0000c5d0      ba08000000     mov edx, 8
0x0000c5d5      4889c3         mov rbx, rax
0x0000c5d8      31c9           xor ecx, ecx
0x0000c5da      4889d0         mov rax, rdx
0x0000c5dd      48f7e3         mul rbx
0x0000c5e0      0f8099010000   jo 0xc77f
0x0000c5e6      4885c0         test rax, rax
0x0000c5e9      b801000000     mov eax, 1
0x0000c5ee      480f48c8       cmovs rcx, rax
0x0000c5f2      4885db         test rbx, rbx
0x0000c5f5      0f84d5000000   je 0xc6d0
0x0000c5fb      83e101         and ecx, 1
0x0000c5fe      0f85cc000000   jne 0xc6d0
0x0000c604      48395d10       cmp qword [rbp + 0x10], rbx
0x0000c608      0f8422010000   je 0xc730
0x0000c60e      be10000000     mov esi, 0x10
0x0000c613      4889df         mov rdi, rbx
0x0000c616      e8b566ffff     call sym.imp.calloc
0x0000c61b      4885c0         test rax, rax
0x0000c61e      48890424       mov qword [rsp], rax                    ; ../coreutils-8.31/lib/bitrotate.h:-72
0x0000c622      0f84a8000000   je 0xc6d0
0x0000c628      48895c2410     mov qword [rsp + 0x10], rbx
0x0000c62d      48c1e304       shl rbx, 4
0x0000c631      4c89642428     mov qword [rsp + 0x28], r12
0x0000c636      4801c3         add rbx, rax
0x0000c639      488b4530       mov rax, qword [rbp + 0x30]
0x0000c63d      4989e4         mov r12, rsp
0x0000c640      31d2           xor edx, edx
0x0000c642      4889ee         mov rsi, rbp
0x0000c645      4c89e7         mov rdi, r12
0x0000c648      48895c2408     mov qword [rsp + 8], rbx
0x0000c64d      48c744241800.  mov qword [rsp + 0x18], 0
0x0000c656      4889442430     mov qword [rsp + 0x30], rax
0x0000c65b      488b4538       mov rax, qword [rbp + 0x38]
0x0000c65f      48c744242000.  mov qword [rsp + 0x20], 0
0x0000c668      4889442438     mov qword [rsp + 0x38], rax
0x0000c66d      488b4540       mov rax, qword [rbp + 0x40]
0x0000c671      4889442440     mov qword [rsp + 0x40], rax
0x0000c676      488b4548       mov rax, qword [rbp + 0x48]
0x0000c67a      4889442448     mov qword [rsp + 0x48], rax
0x0000c67f      e8bcf5ffff     call sym.transfer_entries
0x0000c684      84c0           test al, al
0x0000c686      89c3           mov ebx, eax
0x0000c688      0f85b2000000   jne 0xc740
0x0000c68e      488b442448     mov rax, qword [rsp + 0x48]
0x0000c693      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/bitrotate.h:-53
0x0000c698      4c89e6         mov rsi, r12
0x0000c69b      4889ef         mov rdi, rbp
0x0000c69e      48894548       mov qword [rbp + 0x48], rax
0x0000c6a2      e899f5ffff     call sym.transfer_entries
0x0000c6a7      84c0           test al, al
0x0000c6a9      0f84da000000   je 0xc789
0x0000c6af      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/bitrotate.h:-43
0x0000c6b1      4c89e6         mov rsi, r12
0x0000c6b4      4889ef         mov rdi, rbp
0x0000c6b7      e884f5ffff     call sym.transfer_entries
0x0000c6bc      84c0           test al, al
0x0000c6be      0f84c5000000   je 0xc789
0x0000c6c4      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/bitrotate.h:-38
0x0000c6c8      e8036affff     call sym..plt.got
0x0000c6cd      eb03           jmp 0xc6d2
0x0000c6cf      90             nop
0x0000c6d0      31db           xor ebx, ebx
0x0000c6d2      488b4c2458     mov rcx, qword [rsp + 0x58]
0x0000c6d7      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000c6e0      89d8           mov eax, ebx
0x0000c6e2      0f8592000000   jne 0xc77a
0x0000c6e8      4883c460       add rsp, 0x60
0x0000c6ec      5b             pop rbx
0x0000c6ed      5d             pop rbp
0x0000c6ee      415c           pop r12
0x0000c6f0      c3             ret
0x0000c6f1      0f1f80000000.  nop dword [rax]
0x0000c6f8      4889f0         mov rax, rsi                            ; ../coreutils-8.31/lib/bitrotate.h:-37
0x0000c6fb      660fefc0       pxor xmm0, xmm0
0x0000c6ff      48d1e8         shr rax, 1
0x0000c702      83e601         and esi, 1
0x0000c705      4809f0         or rax, rsi
0x0000c708      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000c70d      f30f58c0       addss xmm0, xmm0
0x0000c711      e973feffff     jmp 0xc589
0x0000c716      662e0f1f8400.  nop word cs:[rax + rax]
0x0000c720      f3480f2cf0     cvttss2si rsi, xmm0
0x0000c725      e99efeffff     jmp 0xc5c8
0x0000c72a      660f1f440000   nop word [rax + rax]
0x0000c730      bb01000000     mov ebx, 1
0x0000c735      eb9b           jmp 0xc6d2
0x0000c737      660f1f840000.  nop word [rax + rax]
0x0000c740      488b7d00       mov rdi, qword [rbp]
0x0000c744      e88769ffff     call sym..plt.got
0x0000c749      488b0424       mov rax, qword [rsp]
0x0000c74d      48894500       mov qword [rbp], rax
0x0000c751      488b442408     mov rax, qword [rsp + 8]
0x0000c756      48894508       mov qword [rbp + 8], rax
0x0000c75a      488b442410     mov rax, qword [rsp + 0x10]
0x0000c75f      48894510       mov qword [rbp + 0x10], rax
0x0000c763      488b442418     mov rax, qword [rsp + 0x18]
0x0000c768      48894518       mov qword [rbp + 0x18], rax
0x0000c76c      488b442448     mov rax, qword [rsp + 0x48]             ; ../coreutils-8.31/lib/bitrotate.h:-12
0x0000c771      48894548       mov qword [rbp + 0x48], rax
0x0000c775      e958ffffff     jmp 0xc6d2
0x0000c77a      e8b163ffff     call sym.imp.__stack_chk_fail
0x0000c77f      b901000000     mov ecx, 1
0x0000c784      e95dfeffff     jmp 0xc5e6
0x0000c789      e8b261ffff     call sym.imp.abort
0x0000c78e      6690           nop
;-- hash_insert_if_absent:
0x0000c790      4155           push r13
0x0000c792      4154           push r12
0x0000c794      55             push rbp
0x0000c795      53             push rbx
0x0000c796      4883ec18       sub rsp, 0x18
0x0000c79a      64488b042528.  mov rax, qword fs:[0x28]
0x0000c7a3      4889442408     mov qword [rsp + 8], rax
0x0000c7a8      31c0           xor eax, eax
0x0000c7aa      4885f6         test rsi, rsi
0x0000c7ad      0f84ba010000   je 0xc96d
0x0000c7b3      4989e4         mov r12, rsp
0x0000c7b6      31c9           xor ecx, ecx
0x0000c7b8      4989d5         mov r13, rdx
0x0000c7bb      4c89e2         mov rdx, r12
0x0000c7be      4889fb         mov rbx, rdi
0x0000c7c1      4889f5         mov rbp, rsi
0x0000c7c4      e8d7f2ffff     call sym.hash_find_entry
0x0000c7c9      4885c0         test rax, rax
0x0000c7cc      4889c2         mov rdx, rax
0x0000c7cf      742f           je 0xc800
0x0000c7d1      31c0           xor eax, eax
0x0000c7d3      4d85ed         test r13, r13
0x0000c7d6      7404           je 0xc7dc
0x0000c7d8      49895500       mov qword [r13], rdx
0x0000c7dc      488b4c2408     mov rcx, qword [rsp + 8]
0x0000c7e1      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000c7ea      0f851f020000   jne 0xca0f
0x0000c7f0      4883c418       add rsp, 0x18
0x0000c7f4      5b             pop rbx
0x0000c7f5      5d             pop rbp
0x0000c7f6      415c           pop r12
0x0000c7f8      415d           pop r13
0x0000c7fa      c3             ret
0x0000c7fb      0f1f440000     nop dword [rax + rax]
0x0000c800      488b4318       mov rax, qword [rbx + 0x18]
0x0000c804      4885c0         test rax, rax
0x0000c807      7877           js 0xc880
0x0000c809      660fefc9       pxor xmm1, xmm1
0x0000c80d      488b5328       mov rdx, qword [rbx + 0x28]
0x0000c811      f3480f2ac8     cvtsi2ss xmm1, rax
0x0000c816      488b4310       mov rax, qword [rbx + 0x10]
0x0000c81a      4885c0         test rax, rax
0x0000c81d      0f8887000000   js 0xc8aa
0x0000c823      660fefc0       pxor xmm0, xmm0
0x0000c827      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000c82c      f30f594208     mulss xmm0, dword [rdx + 8]             ; ../coreutils-8.31/lib/bitrotate.h:15
0x0000c831      0f2ec8         ucomiss xmm1, xmm0
0x0000c834      0f8796000000   ja 0xc8d0
0x0000c83a      4c8b2424       mov r12, qword [rsp]
0x0000c83e      49833c2400     cmp qword [r12], 0
0x0000c843      0f842f010000   je 0xc978
0x0000c849      488b4348       mov rax, qword [rbx + 0x48]
0x0000c84d      4885c0         test rax, rax
0x0000c850      0f843a010000   je 0xc990
0x0000c856      488b5008       mov rdx, qword [rax + 8]
0x0000c85a      48895348       mov qword [rbx + 0x48], rdx
0x0000c85e      498b542408     mov rdx, qword [r12 + 8]
0x0000c863      488928         mov qword [rax], rbp
0x0000c866      48895008       mov qword [rax + 8], rdx
0x0000c86a      4989442408     mov qword [r12 + 8], rax
0x0000c86f      b801000000     mov eax, 1
0x0000c874      4883432001     add qword [rbx + 0x20], 1
0x0000c879      e95effffff     jmp 0xc7dc
0x0000c87e      6690           nop
0x0000c880      4889c2         mov rdx, rax
0x0000c883      660fefc9       pxor xmm1, xmm1
0x0000c887      83e001         and eax, 1
0x0000c88a      48d1ea         shr rdx, 1
0x0000c88d      4809c2         or rdx, rax
0x0000c890      488b4310       mov rax, qword [rbx + 0x10]
0x0000c894      f3480f2aca     cvtsi2ss xmm1, rdx                      ; ../coreutils-8.31/lib/bitrotate.h:-3
0x0000c899      488b5328       mov rdx, qword [rbx + 0x28]
0x0000c89d      4885c0         test rax, rax
0x0000c8a0      f30f58c9       addss xmm1, xmm1
0x0000c8a4      0f8979ffffff   jns 0xc823
0x0000c8aa      4889c1         mov rcx, rax
0x0000c8ad      660fefc0       pxor xmm0, xmm0
0x0000c8b1      48d1e9         shr rcx, 1
0x0000c8b4      83e001         and eax, 1                              ; ../coreutils-8.31/lib/bitrotate.h:1
0x0000c8b7      4809c1         or rcx, rax
0x0000c8ba      f3480f2ac1     cvtsi2ss xmm0, rcx
0x0000c8bf      f30f58c0       addss xmm0, xmm0
0x0000c8c3      e964ffffff     jmp 0xc82c
0x0000c8c8      0f1f84000000.  nop dword [rax + rax]
0x0000c8d0      488d7b28       lea rdi, [rbx + 0x28]
0x0000c8d4      e8e7f2ffff     call sym.check_tuning.isra.0
0x0000c8d9      488b4310       mov rax, qword [rbx + 0x10]
0x0000c8dd      488b5328       mov rdx, qword [rbx + 0x28]
0x0000c8e1      4885c0         test rax, rax
0x0000c8e4      f30f105208     movss xmm2, dword [rdx + 8]
0x0000c8e9      0f88c1000000   js 0xc9b0
0x0000c8ef      660fefc0       pxor xmm0, xmm0
0x0000c8f3      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000c8f8      488b4318       mov rax, qword [rbx + 0x18]
0x0000c8fc      4885c0         test rax, rax
0x0000c8ff      0f88cb000000   js 0xc9d0
0x0000c905      660fefc9       pxor xmm1, xmm1
0x0000c909      f3480f2ac8     cvtsi2ss xmm1, rax
0x0000c90e      0f28da         movaps xmm3, xmm2
0x0000c911      f30f59d8       mulss xmm3, xmm0
0x0000c915      0f2ecb         ucomiss xmm1, xmm3
0x0000c918      0f861cffffff   jbe 0xc83a
0x0000c91e      807a1000       cmp byte [rdx + 0x10], 0
0x0000c922      f30f59420c     mulss xmm0, dword [rdx + 0xc]
0x0000c927      7504           jne 0xc92d
0x0000c929      f30f59c2       mulss xmm0, xmm2
0x0000c92d      0f2e05d8b800.  ucomiss xmm0, dword [0x0001820c]
0x0000c934      736d           jae 0xc9a3
0x0000c936      0f2e05d3b800.  ucomiss xmm0, dword [0x00018210]
0x0000c93d      0f83ad000000   jae 0xc9f0
0x0000c943      f3480f2cf0     cvttss2si rsi, xmm0
0x0000c948      4889df         mov rdi, rbx
0x0000c94b      e800fcffff     call sym.hash_rehash
0x0000c950      84c0           test al, al
0x0000c952      744f           je 0xc9a3
0x0000c954      31c9           xor ecx, ecx
0x0000c956      4c89e2         mov rdx, r12
0x0000c959      4889ee         mov rsi, rbp
0x0000c95c      4889df         mov rdi, rbx
0x0000c95f      e83cf1ffff     call sym.hash_find_entry
0x0000c964      4885c0         test rax, rax
0x0000c967      0f84cdfeffff   je 0xc83a
0x0000c96d      e8ce5fffff     call sym.imp.abort
0x0000c972      660f1f440000   nop word [rax + rax]
0x0000c978      49892c24       mov qword [r12], rbp
0x0000c97c      b801000000     mov eax, 1
0x0000c981      4883432001     add qword [rbx + 0x20], 1
0x0000c986      4883431801     add qword [rbx + 0x18], 1
0x0000c98b      e94cfeffff     jmp 0xc7dc
0x0000c990      bf10000000     mov edi, 0x10
0x0000c995      e85664ffff     call sym.imp.malloc
0x0000c99a      4885c0         test rax, rax
0x0000c99d      0f85bbfeffff   jne 0xc85e
0x0000c9a3      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000c9a8      e92ffeffff     jmp 0xc7dc
0x0000c9ad      0f1f00         nop dword [rax]
0x0000c9b0      4889c1         mov rcx, rax
0x0000c9b3      660fefc0       pxor xmm0, xmm0
0x0000c9b7      48d1e9         shr rcx, 1
0x0000c9ba      83e001         and eax, 1
0x0000c9bd      4809c1         or rcx, rax
0x0000c9c0      f3480f2ac1     cvtsi2ss xmm0, rcx
0x0000c9c5      f30f58c0       addss xmm0, xmm0
0x0000c9c9      e92affffff     jmp 0xc8f8
0x0000c9ce      6690           nop
0x0000c9d0      4889c1         mov rcx, rax
0x0000c9d3      660fefc9       pxor xmm1, xmm1
0x0000c9d7      48d1e9         shr rcx, 1
0x0000c9da      83e001         and eax, 1
0x0000c9dd      4809c1         or rcx, rax
0x0000c9e0      f3480f2ac9     cvtsi2ss xmm1, rcx
0x0000c9e5      f30f58c9       addss xmm1, xmm1
0x0000c9e9      e920ffffff     jmp 0xc90e
0x0000c9ee      6690           nop
0x0000c9f0      f30f5c0518b8.  subss xmm0, dword [0x00018210]
0x0000c9f8      48b800000000.  movabs rax, 0x8000000000000000
0x0000ca02      f3480f2cf0     cvttss2si rsi, xmm0
0x0000ca07      4831c6         xor rsi, rax
0x0000ca0a      e939ffffff     jmp 0xc948
0x0000ca0f      e81c61ffff     call sym.imp.__stack_chk_fail
0x0000ca14      6690           nop
0x0000ca16      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_insert:
0x0000ca20      53             push rbx
0x0000ca21      4889f3         mov rbx, rsi
0x0000ca24      4883ec10       sub rsp, 0x10
0x0000ca28      4889e2         mov rdx, rsp
0x0000ca2b      64488b042528.  mov rax, qword fs:[0x28]
0x0000ca34      4889442408     mov qword [rsp + 8], rax
0x0000ca39      31c0           xor eax, eax
0x0000ca3b      e850fdffff     call sym.hash_insert_if_absent
0x0000ca40      83f8ff         cmp eax, 0xffffffff
0x0000ca43      742b           je 0xca70
0x0000ca45      85c0           test eax, eax
0x0000ca47      7504           jne 0xca4d
0x0000ca49      488b1c24       mov rbx, qword [rsp]
0x0000ca4d      488b4c2408     mov rcx, qword [rsp + 8]
0x0000ca52      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000ca5b      4889d8         mov rax, rbx
0x0000ca5e      7514           jne 0xca74
0x0000ca60      4883c410       add rsp, 0x10
0x0000ca64      5b             pop rbx
0x0000ca65      c3             ret
0x0000ca66      662e0f1f8400.  nop word cs:[rax + rax]
0x0000ca70      31db           xor ebx, ebx
0x0000ca72      ebd9           jmp 0xca4d
0x0000ca74      e8b760ffff     call sym.imp.__stack_chk_fail
0x0000ca79      0f1f80000000.  nop dword [rax]
;-- hash_delete:
0x0000ca80      4154           push r12
0x0000ca82      55             push rbp
0x0000ca83      b901000000     mov ecx, 1
0x0000ca88      53             push rbx
0x0000ca89      4889fb         mov rbx, rdi
0x0000ca8c      4883ec10       sub rsp, 0x10
0x0000ca90      4889e2         mov rdx, rsp
0x0000ca93      64488b042528.  mov rax, qword fs:[0x28]
0x0000ca9c      4889442408     mov qword [rsp + 8], rax
0x0000caa1      31c0           xor eax, eax
0x0000caa3      e8f8efffff     call sym.hash_find_entry
0x0000caa8      4885c0         test rax, rax
0x0000caab      4889c5         mov rbp, rax
0x0000caae      740f           je 0xcabf
0x0000cab0      488b0424       mov rax, qword [rsp]
0x0000cab4      48836b2001     sub qword [rbx + 0x20], 1
0x0000cab9      48833800       cmp qword [rax], 0
0x0000cabd      7421           je 0xcae0
0x0000cabf      488b4c2408     mov rcx, qword [rsp + 8]
0x0000cac4      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000cacd      4889e8         mov rax, rbp
0x0000cad0      0f85a8010000   jne 0xcc7e
0x0000cad6      4883c410       add rsp, 0x10
0x0000cada      5b             pop rbx
0x0000cadb      5d             pop rbp
0x0000cadc      415c           pop r12
0x0000cade      c3             ret
0x0000cadf      90             nop
0x0000cae0      488b4318       mov rax, qword [rbx + 0x18]
0x0000cae4      4883e801       sub rax, 1
0x0000cae8      4885c0         test rax, rax
0x0000caeb      48894318       mov qword [rbx + 0x18], rax
0x0000caef      0f88fb000000   js 0xcbf0
0x0000caf5      660fefc0       pxor xmm0, xmm0
0x0000caf9      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000cafe      488b4310       mov rax, qword [rbx + 0x10]
0x0000cb02      488b5328       mov rdx, qword [rbx + 0x28]
0x0000cb06      4885c0         test rax, rax
0x0000cb09      0f88c1000000   js 0xcbd0
0x0000cb0f      660fefc9       pxor xmm1, xmm1
0x0000cb13      f3480f2ac8     cvtsi2ss xmm1, rax
0x0000cb18      f30f590a       mulss xmm1, dword [rdx]
0x0000cb1c      0f2ec8         ucomiss xmm1, xmm0
0x0000cb1f      769e           jbe 0xcabf
0x0000cb21      488d7b28       lea rdi, [rbx + 0x28]
0x0000cb25      e896f0ffff     call sym.check_tuning.isra.0
0x0000cb2a      488b4310       mov rax, qword [rbx + 0x10]
0x0000cb2e      488b5328       mov rdx, qword [rbx + 0x28]
0x0000cb32      4885c0         test rax, rax
0x0000cb35      0f8825010000   js 0xcc60
0x0000cb3b      660fefc0       pxor xmm0, xmm0
0x0000cb3f      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000cb44      488b4318       mov rax, qword [rbx + 0x18]
0x0000cb48      4885c0         test rax, rax
0x0000cb4b      0f88ef000000   js 0xcc40
0x0000cb51      660fefc9       pxor xmm1, xmm1
0x0000cb55      f3480f2ac8     cvtsi2ss xmm1, rax
0x0000cb5a      f30f1012       movss xmm2, dword [rdx]
0x0000cb5e      f30f59d0       mulss xmm2, xmm0
0x0000cb62      0f2ed1         ucomiss xmm2, xmm1
0x0000cb65      0f8654ffffff   jbe 0xcabf
0x0000cb6b      807a1000       cmp byte [rdx + 0x10], 0
0x0000cb6f      f30f594204     mulss xmm0, dword [rdx + 4]
0x0000cb74      0f84b6000000   je 0xcc30
0x0000cb7a      0f2e058fb600.  ucomiss xmm0, dword [0x00018210]
0x0000cb81      0f8389000000   jae 0xcc10
0x0000cb87      f3480f2cf0     cvttss2si rsi, xmm0
0x0000cb8c      4889df         mov rdi, rbx
0x0000cb8f      e8bcf9ffff     call sym.hash_rehash
0x0000cb94      84c0           test al, al
0x0000cb96      0f8523ffffff   jne 0xcabf
0x0000cb9c      488b7b48       mov rdi, qword [rbx + 0x48]
0x0000cba0      4885ff         test rdi, rdi
0x0000cba3      7414           je 0xcbb9
0x0000cba5      0f1f00         nop dword [rax]
0x0000cba8      4c8b6708       mov r12, qword [rdi + 8]
0x0000cbac      e81f65ffff     call sym..plt.got
0x0000cbb1      4d85e4         test r12, r12
0x0000cbb4      4c89e7         mov rdi, r12
0x0000cbb7      75ef           jne 0xcba8
0x0000cbb9      48c743480000.  mov qword [rbx + 0x48], 0
0x0000cbc1      e9f9feffff     jmp 0xcabf
0x0000cbc6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000cbd0      4889c1         mov rcx, rax
0x0000cbd3      660fefc9       pxor xmm1, xmm1
0x0000cbd7      48d1e9         shr rcx, 1
0x0000cbda      83e001         and eax, 1
0x0000cbdd      4809c1         or rcx, rax
0x0000cbe0      f3480f2ac9     cvtsi2ss xmm1, rcx
0x0000cbe5      f30f58c9       addss xmm1, xmm1
0x0000cbe9      e92affffff     jmp 0xcb18
0x0000cbee      6690           nop
0x0000cbf0      4889c2         mov rdx, rax
0x0000cbf3      660fefc0       pxor xmm0, xmm0
0x0000cbf7      48d1ea         shr rdx, 1
0x0000cbfa      83e001         and eax, 1
0x0000cbfd      4809c2         or rdx, rax
0x0000cc00      f3480f2ac2     cvtsi2ss xmm0, rdx
0x0000cc05      f30f58c0       addss xmm0, xmm0
0x0000cc09      e9f0feffff     jmp 0xcafe
0x0000cc0e      6690           nop
0x0000cc10      f30f5c05f8b5.  subss xmm0, dword [0x00018210]
0x0000cc18      48b800000000.  movabs rax, 0x8000000000000000
0x0000cc22      f3480f2cf0     cvttss2si rsi, xmm0
0x0000cc27      4831c6         xor rsi, rax
0x0000cc2a      e95dffffff     jmp 0xcb8c
0x0000cc2f      90             nop
0x0000cc30      f30f594208     mulss xmm0, dword [rdx + 8]
0x0000cc35      e940ffffff     jmp 0xcb7a
0x0000cc3a      660f1f440000   nop word [rax + rax]
0x0000cc40      4889c1         mov rcx, rax
0x0000cc43      660fefc9       pxor xmm1, xmm1
0x0000cc47      48d1e9         shr rcx, 1
0x0000cc4a      83e001         and eax, 1
0x0000cc4d      4809c1         or rcx, rax
0x0000cc50      f3480f2ac9     cvtsi2ss xmm1, rcx
0x0000cc55      f30f58c9       addss xmm1, xmm1
0x0000cc59      e9fcfeffff     jmp 0xcb5a
0x0000cc5e      6690           nop
0x0000cc60      4889c1         mov rcx, rax
0x0000cc63      660fefc0       pxor xmm0, xmm0
0x0000cc67      48d1e9         shr rcx, 1
0x0000cc6a      83e001         and eax, 1
0x0000cc6d      4809c1         or rcx, rax
0x0000cc70      f3480f2ac1     cvtsi2ss xmm0, rcx
0x0000cc75      f30f58c0       addss xmm0, xmm0
0x0000cc79      e9c6feffff     jmp 0xcb44
0x0000cc7e      e8ad5effff     call sym.imp.__stack_chk_fail
0x0000cc83      662e0f1f8400.  nop word cs:[rax + rax]
0x0000cc8d      0f1f00         nop dword [rax]
;-- triple_hash:
0x0000cc90      55             push rbp                                ; ../coreutils-8.31/lib/hash-triple.c:35
0x0000cc91      53             push rbx
0x0000cc92      4889fd         mov rbp, rdi
0x0000cc95      4889f3         mov rbx, rsi
0x0000cc98      4883ec08       sub rsp, 8
0x0000cc9c      488b3f         mov rdi, qword [rdi]                    ; ../coreutils-8.31/lib/hash-triple.c:37
0x0000cc9f      e8fc620000     call sym.hash_pjw
0x0000cca4      48334508       xor rax, qword [rbp + 8]                ; ../coreutils-8.31/lib/hash-triple.c:40
0x0000cca8      31d2           xor edx, edx
0x0000ccaa      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hash-triple.c:41
0x0000ccae      48f7f3         div rbx                                 ; ../coreutils-8.31/lib/hash-triple.c:40
0x0000ccb1      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash-triple.c:41
0x0000ccb2      5d             pop rbp
0x0000ccb3      4889d0         mov rax, rdx
0x0000ccb6      c3             ret
0x0000ccb7      660f1f840000.  nop word [rax + rax]
;-- triple_hash_no_name:
0x0000ccc0      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/hash-triple.c:46
0x0000ccc4      31d2           xor edx, edx
0x0000ccc6      48f7f6         div rsi
0x0000ccc9      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/hash-triple.c:51
0x0000cccc      c3             ret
0x0000cccd      0f1f00         nop dword [rax]
;-- triple_compare:
0x0000ccd0      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hash-triple.c:56
0x0000ccd2      488b5608       mov rdx, qword [rsi + 8]                ; ../coreutils-8.31/lib/hash-triple.c:59
0x0000ccd6      48395708       cmp qword [rdi + 8], rdx
0x0000ccda      7404           je 0xcce0
0x0000ccdc      f3c3           ret                                     ; ../coreutils-8.31/lib/hash-triple.c:60
0x0000ccde      6690           nop
0x0000cce0      488b4e10       mov rcx, qword [rsi + 0x10]             ; ../coreutils-8.31/lib/hash-triple.c:59
0x0000cce4      48394f10       cmp qword [rdi + 0x10], rcx
0x0000cce8      75f2           jne 0xccdc
0x0000ccea      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hash-triple.c:56
0x0000ccee      488b36         mov rsi, qword [rsi]                    ; ../coreutils-8.31/lib/hash-triple.c:59
0x0000ccf1      488b3f         mov rdi, qword [rdi]
0x0000ccf4      e8e72e0000     call sym.same_name
0x0000ccf9      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hash-triple.c:60
0x0000ccfd      c3             ret
0x0000ccfe      6690           nop
;-- triple_compare_ino_str:
0x0000cd00      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hash-triple.c:64
0x0000cd02      488b5608       mov rdx, qword [rsi + 8]                ; ../coreutils-8.31/lib/hash-triple.c:67
0x0000cd06      48395708       cmp qword [rdi + 8], rdx
0x0000cd0a      7404           je 0xcd10
0x0000cd0c      f3c3           ret                                     ; ../coreutils-8.31/lib/hash-triple.c:68
0x0000cd0e      6690           nop
0x0000cd10      488b4e10       mov rcx, qword [rsi + 0x10]             ; ../coreutils-8.31/lib/hash-triple.c:67
0x0000cd14      48394f10       cmp qword [rdi + 0x10], rcx
0x0000cd18      75f2           jne 0xcd0c
0x0000cd1a      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hash-triple.c:64
0x0000cd1e      488b36         mov rsi, qword [rsi]                    ; ../coreutils-8.31/lib/hash-triple.c:67
0x0000cd21      488b3f         mov rdi, qword [rdi]
0x0000cd24      e8c75fffff     call sym.imp.strcmp
0x0000cd29      85c0           test eax, eax
0x0000cd2b      0f94c0         sete al
0x0000cd2e      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hash-triple.c:68
0x0000cd32      c3             ret
0x0000cd33      0f1f00         nop dword [rax]
0x0000cd36      662e0f1f8400.  nop word cs:[rax + rax]
;-- triple_free:
0x0000cd40      53             push rbx                                ; ../coreutils-8.31/lib/hash-triple.c:73
0x0000cd41      4889fb         mov rbx, rdi
0x0000cd44      488b3f         mov rdi, qword [rdi]                    ; ../coreutils-8.31/lib/hash-triple.c:75
0x0000cd47      e88463ffff     call sym..plt.got
0x0000cd4c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/hash-triple.c:76
0x0000cd4f      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash-triple.c:77
0x0000cd50      e97b63ffff     jmp sym..plt.got                        ; ../coreutils-8.31/lib/hash-triple.c:76
0x0000cd55      662e0f1f8400.  nop word cs:[rax + rax]
0x0000cd5f      90             nop
;-- mkancesdirs:
0x0000cd60      4157           push r15
0x0000cd62      4156           push r14
0x0000cd64      4989d6         mov r14, rdx
0x0000cd67      4155           push r13
0x0000cd69      4154           push r12
0x0000cd6b      4989fd         mov r13, rdi
0x0000cd6e      55             push rbp
0x0000cd6f      53             push rbx
0x0000cd70      4889fd         mov rbp, rdi
0x0000cd73      4889fb         mov rbx, rdi
0x0000cd76      4531e4         xor r12d, r12d
0x0000cd79      4883ec28       sub rsp, 0x28
0x0000cd7d      4889742408     mov qword [rsp + 8], rsi
0x0000cd82      48894c2418     mov qword [rsp + 0x18], rcx
0x0000cd87      c644241400     mov byte [rsp + 0x14], 0
0x0000cd8c      0f1f4000       nop dword [rax]
0x0000cd90      4883c301       add rbx, 1
0x0000cd94      0fb653ff       movzx edx, byte [rbx - 1]
0x0000cd98      84d2           test dl, dl
0x0000cd9a      0f8498000000   je 0xce38
0x0000cda0      0fb603         movzx eax, byte [rbx]
0x0000cda3      3c2f           cmp al, 0x2f
0x0000cda5      0f84a5000000   je 0xce50
0x0000cdab      84c0           test al, al
0x0000cdad      0f95c0         setne al
0x0000cdb0      80fa2f         cmp dl, 0x2f
0x0000cdb3      410f94c7       sete r15b
0x0000cdb7      4120c7         and r15b, al
0x0000cdba      74d4           je 0xcd90
0x0000cdbc      4d85e4         test r12, r12
0x0000cdbf      74cf           je 0xcd90
0x0000cdc1      4c89e0         mov rax, r12
0x0000cdc4      4829e8         sub rax, rbp
0x0000cdc7      4883f801       cmp rax, 1
0x0000cdcb      0f848f000000   je 0xce60
0x0000cdd1      4883f802       cmp rax, 2
0x0000cdd5      41c6042400     mov byte [r12], 0
0x0000cdda      0f84c5000000   je 0xcea5
0x0000cde0      488b542418     mov rdx, qword [rsp + 0x18]
0x0000cde5      4889ee         mov rsi, rbp
0x0000cde8      4c89ef         mov rdi, r13
0x0000cdeb      41ffd6         call r14
0x0000cdee      85c0           test eax, eax
0x0000cdf0      787e           js 0xce70
0x0000cdf2      44887c2414     mov byte [rsp + 0x14], r15b
0x0000cdf7      ba01000000     mov edx, 1
0x0000cdfc      4531ff         xor r15d, r15d
0x0000cdff      488b7c2408     mov rdi, qword [rsp + 8]
0x0000ce04      31c9           xor ecx, ecx
0x0000ce06      4889ee         mov rsi, rbp
0x0000ce09      e832320000     call sym.savewd_chdir
0x0000ce0e      83f8ff         cmp eax, 0xffffffff
0x0000ce11      89c5           mov ebp, eax
0x0000ce13      7473           je 0xce88
0x0000ce15      85c0           test eax, eax
0x0000ce17      41c604242f     mov byte [r12], 0x2f                    ; '/'
                                                                       ; [0x2f:1]=0
0x0000ce1c      756a           jne 0xce88
0x0000ce1e      4889dd         mov rbp, rbx
0x0000ce21      4883c301       add rbx, 1
0x0000ce25      0fb653ff       movzx edx, byte [rbx - 1]
0x0000ce29      84d2           test dl, dl
0x0000ce2b      0f856fffffff   jne 0xcda0
0x0000ce31      0f1f80000000.  nop dword [rax]
0x0000ce38      4889e8         mov rax, rbp
0x0000ce3b      4c29e8         sub rax, r13
0x0000ce3e      4883c428       add rsp, 0x28
0x0000ce42      5b             pop rbx
0x0000ce43      5d             pop rbp
0x0000ce44      415c           pop r12
0x0000ce46      415d           pop r13
0x0000ce48      415e           pop r14
0x0000ce4a      415f           pop r15
0x0000ce4c      c3             ret
0x0000ce4d      0f1f00         nop dword [rax]
0x0000ce50      80fa2f         cmp dl, 0x2f
0x0000ce53      4c0f45e3       cmovne r12, rbx
0x0000ce57      e934ffffff     jmp 0xcd90
0x0000ce5c      0f1f4000       nop dword [rax]
0x0000ce60      807d002e       cmp byte [rbp], 0x2e
0x0000ce64      74b8           je 0xce1e
0x0000ce66      41c6042400     mov byte [r12], 0
0x0000ce6b      e970ffffff     jmp 0xcde0
0x0000ce70      e8db5affff     call sym.imp.__errno_location
0x0000ce75      8b542414       mov edx, dword [rsp + 0x14]
0x0000ce79      448b38         mov r15d, dword [rax]
0x0000ce7c      83e201         and edx, 1
0x0000ce7f      e97bffffff     jmp 0xcdff
0x0000ce84      0f1f4000       nop dword [rax]
0x0000ce88      4585ff         test r15d, r15d
0x0000ce8b      7413           je 0xcea0
0x0000ce8d      e8be5affff     call sym.imp.__errno_location
0x0000ce92      833802         cmp dword [rax], 2
0x0000ce95      7509           jne 0xcea0
0x0000ce97      448938         mov dword [rax], r15d
0x0000ce9a      660f1f440000   nop word [rax + rax]
0x0000cea0      4863c5         movsxd rax, ebp
0x0000cea3      eb99           jmp 0xce3e
0x0000cea5      807d002e       cmp byte [rbp], 0x2e
0x0000cea9      0f8531ffffff   jne 0xcde0
0x0000ceaf      807d012e       cmp byte [rbp + 1], 0x2e
0x0000ceb3      0f8527ffffff   jne 0xcde0
0x0000ceb9      4531ff         xor r15d, r15d
0x0000cebc      c644241400     mov byte [rsp + 0x14], 0
0x0000cec1      31d2           xor edx, edx
0x0000cec3      e937ffffff     jmp 0xcdff
0x0000cec8      0f1f84000000.  nop dword [rax + rax]
;-- make_dir_parents:
0x0000ced0      4157           push r15
0x0000ced2      4156           push r14
0x0000ced4      4989cf         mov r15, rcx
0x0000ced7      4155           push r13
0x0000ced9      4154           push r12
0x0000cedb      4989f6         mov r14, rsi
0x0000cede      55             push rbp
0x0000cedf      53             push rbx
0x0000cee0      4989d5         mov r13, rdx
0x0000cee3      4889fb         mov rbx, rdi
0x0000cee6      4589c4         mov r12d, r8d
0x0000cee9      4881ecc80000.  sub rsp, 0xc8
0x0000cef0      8b8424180100.  mov eax, dword [rsp + 0x118]
0x0000cef7      89442418       mov dword [rsp + 0x18], eax
0x0000cefb      64488b042528.  mov rax, qword fs:[0x28]
0x0000cf04      48898424b800.  mov qword [rsp + 0xb8], rax
0x0000cf0c      31c0           xor eax, eax
0x0000cf0e      803f2f         cmp byte [rdi], 0x2f
0x0000cf11      7409           je 0xcf1c
0x0000cf13      833e04         cmp dword [rsi], 4
0x0000cf16      0f8444010000   je 0xd060
0x0000cf1c      4d85ed         test r13, r13
0x0000cf1f      0f842b010000   je 0xd050
0x0000cf25      4c89f9         mov rcx, r15
0x0000cf28      4c89ea         mov rdx, r13
0x0000cf2b      4c89f6         mov rsi, r14
0x0000cf2e      4889df         mov rdi, rbx
0x0000cf31      4c894c2408     mov qword [rsp + 8], r9
0x0000cf36      e825feffff     call sym.mkancesdirs
0x0000cf3b      4885c0         test rax, rax
0x0000cf3e      0f88dc020000   js 0xd220
0x0000cf44      4c8b4c2408     mov r9, qword [rsp + 8]
0x0000cf49      4801d8         add rax, rbx
0x0000cf4c      48890424       mov qword [rsp], rax
0x0000cf50      83bc24080100.  cmp dword [rsp + 0x108], 0xffffffff
0x0000cf58      8b8424000100.  mov eax, dword [rsp + 0x100]
0x0000cf5f      4489e6         mov esi, r12d
0x0000cf62      0f94c1         sete cl
0x0000cf65      83bc24100100.  cmp dword [rsp + 0x110], 0xffffffff
0x0000cf6d      0f94c2         sete dl
0x0000cf70      25000c0000     and eax, 0xc00
0x0000cf75      81e600020000   and esi, 0x200
0x0000cf7b      09f0           or eax, esi
0x0000cf7d      20d1           and cl, dl
0x0000cf7f      884c241f       mov byte [rsp + 0x1f], cl
0x0000cf83      0f8547010000   jne 0xd0d0
0x0000cf89      4489e0         mov eax, r12d
0x0000cf8c      83e0c0         and eax, 0xffffffc0                     ; 4294967232
0x0000cf8f      89442408       mov dword [rsp + 8], eax
0x0000cf93      8b742408       mov esi, dword [rsp + 8]
0x0000cf97      488b3c24       mov rdi, qword [rsp]
0x0000cf9b      4c894c2410     mov qword [rsp + 0x10], r9
0x0000cfa0      e81b5affff     call sym.imp.mkdir
0x0000cfa5      85c0           test eax, eax
0x0000cfa7      89c5           mov ebp, eax
0x0000cfa9      4c8b4c2410     mov r9, qword [rsp + 0x10]
0x0000cfae      0f848c010000   je 0xd140
0x0000cfb4      e89759ffff     call sym.imp.__errno_location
0x0000cfb9      807c241800     cmp byte [rsp + 0x18], 0
0x0000cfbe      4989c7         mov r15, rax
0x0000cfc1      8b28           mov ebp, dword [rax]
0x0000cfc3      0f8497020000   je 0xd260
0x0000cfc9      85ed           test ebp, ebp
0x0000cfcb      0f844b010000   je 0xd11c
0x0000cfd1      83fd02         cmp ebp, 2
0x0000cfd4      410f95c4       setne r12b
0x0000cfd8      4d85ed         test r13, r13
0x0000cfdb      0f95c0         setne al
0x0000cfde      4120c4         and r12b, al
0x0000cfe1      0f8484000000   je 0xd06b
0x0000cfe7      488b3424       mov rsi, qword [rsp]
0x0000cfeb      488d542420     lea rdx, [rsp + 0x20]
0x0000cff0      bf01000000     mov edi, 1
0x0000cff5      e8d65dffff     call sym.imp.__xstat
0x0000cffa      85c0           test eax, eax
0x0000cffc      0f843e020000   je 0xd240
0x0000d002      83fd11         cmp ebp, 0x11
0x0000d005      7564           jne 0xd06b
0x0000d007      418b07         mov eax, dword [r15]
0x0000d00a      83f814         cmp eax, 0x14
0x0000d00d      745c           je 0xd06b
0x0000d00f      83f802         cmp eax, 2
0x0000d012      7457           je 0xd06b
0x0000d014      4889df         mov rdi, rbx
0x0000d017      4531e4         xor r12d, r12d
0x0000d01a      e8a1260000     call sym.quote
0x0000d01f      488d35cf9300.  lea rsi, str.cannot_stat__s             ; 0x163f5 ; "cannot stat %s"
0x0000d026      ba05000000     mov edx, 5
0x0000d02b      31ff           xor edi, edi
0x0000d02d      4889c3         mov rbx, rax
0x0000d030      e89b5affff     call sym.imp.dcgettext
0x0000d035      418b37         mov esi, dword [r15]
0x0000d038      4889c2         mov rdx, rax
0x0000d03b      4889d9         mov rcx, rbx
0x0000d03e      31ff           xor edi, edi
0x0000d040      31c0           xor eax, eax
0x0000d042      e8e95effff     call sym.imp.error
0x0000d047      eb54           jmp 0xd09d
0x0000d049      0f1f80000000.  nop dword [rax]
0x0000d050      48891c24       mov qword [rsp], rbx
0x0000d054      e9f7feffff     jmp 0xcf50
0x0000d059      0f1f80000000.  nop dword [rax]
0x0000d060      8b6e04         mov ebp, dword [rsi + 4]
0x0000d063      85ed           test ebp, ebp
0x0000d065      0f84b1feffff   je 0xcf1c
0x0000d06b      4889df         mov rdi, rbx
0x0000d06e      4531e4         xor r12d, r12d
0x0000d071      e84a260000     call sym.quote
0x0000d076      488d35479300.  lea rsi, str.cannot_create_directory__s ; 0x163c4 ; "cannot create directory %s"
0x0000d07d      4889c3         mov rbx, rax
0x0000d080      ba05000000     mov edx, 5
0x0000d085      31ff           xor edi, edi
0x0000d087      e8445affff     call sym.imp.dcgettext
0x0000d08c      4889d9         mov rcx, rbx
0x0000d08f      4889c2         mov rdx, rax
0x0000d092      89ee           mov esi, ebp
0x0000d094      31ff           xor edi, edi
0x0000d096      31c0           xor eax, eax
0x0000d098      e8935effff     call sym.imp.error
0x0000d09d      488bbc24b800.  mov rdi, qword [rsp + 0xb8]
0x0000d0a5      6448333c2528.  xor rdi, qword fs:[0x28]
0x0000d0ae      4489e0         mov eax, r12d
0x0000d0b1      0f85ce010000   jne 0xd285
0x0000d0b7      4881c4c80000.  add rsp, 0xc8
0x0000d0be      5b             pop rbx
0x0000d0bf      5d             pop rbp
0x0000d0c0      415c           pop r12
0x0000d0c2      415d           pop r13
0x0000d0c4      415e           pop r14
0x0000d0c6      415f           pop r15
0x0000d0c8      c3             ret
0x0000d0c9      0f1f80000000.  nop dword [rax]
0x0000d0d0      85c0           test eax, eax
0x0000d0d2      755c           jne 0xd130
0x0000d0d4      488b3c24       mov rdi, qword [rsp]
0x0000d0d8      4489e6         mov esi, r12d
0x0000d0db      4c894c2410     mov qword [rsp + 0x10], r9
0x0000d0e0      e8db58ffff     call sym.imp.mkdir
0x0000d0e5      85c0           test eax, eax
0x0000d0e7      89c5           mov ebp, eax
0x0000d0e9      0f85c5feffff   jne 0xcfb4
0x0000d0ef      4489e0         mov eax, r12d
0x0000d0f2      4c89fe         mov rsi, r15
0x0000d0f5      4889df         mov rdi, rbx
0x0000d0f8      25ff010000     and eax, 0x1ff
0x0000d0fd      238424000100.  and eax, dword [rsp + 0x100]
0x0000d104      4c8b4c2410     mov r9, qword [rsp + 0x10]
0x0000d109      89442408       mov dword [rsp + 8], eax
0x0000d10d      41ffd1         call r9
0x0000d110      8b742408       mov esi, dword [rsp + 8]
0x0000d114      85f6           test esi, esi
0x0000d116      0f856e010000   jne 0xd28a
0x0000d11c      41bc01000000   mov r12d, 1
0x0000d122      e976ffffff     jmp 0xd09d
0x0000d127      660f1f840000.  nop word [rax + rax]
0x0000d130      4489e0         mov eax, r12d
0x0000d133      83e0ed         and eax, 0xffffffed                     ; 4294967277
0x0000d136      89442408       mov dword [rsp + 8], eax
0x0000d13a      e954feffff     jmp 0xcf93
0x0000d13f      90             nop
0x0000d140      4c89fe         mov rsi, r15
0x0000d143      4889df         mov rdi, rbx
0x0000d146      41ffd1         call r9
0x0000d149      ba03000000     mov edx, 3
0x0000d14e      4c8b3c24       mov r15, qword [rsp]
0x0000d152      488d4c2420     lea rcx, [rsp + 0x20]
0x0000d157      4c89f7         mov rdi, r14
0x0000d15a      4c89fe         mov rsi, r15
0x0000d15d      e8de2e0000     call sym.savewd_chdir
0x0000d162      83f8ff         cmp eax, 0xffffffff
0x0000d165      7cb5           jl 0xd11c
0x0000d167      85c0           test eax, eax
0x0000d169      488d05f3ac00.  lea rax, [0x00017e63]                   ; "."
0x0000d170      4589e1         mov r9d, r12d
0x0000d173      490f45c7       cmovne rax, r15
0x0000d177      4883ec08       sub rsp, 8
0x0000d17b      8b9424080100.  mov edx, dword [rsp + 0x108]
0x0000d182      4889c6         mov rsi, rax
0x0000d185      52             push rdx
0x0000d186      448b84242001.  mov r8d, dword [rsp + 0x120]
0x0000d18e      8b8c24180100.  mov ecx, dword [rsp + 0x118]
0x0000d195      8b542418       mov edx, dword [rsp + 0x18]
0x0000d199      8b7c2430       mov edi, dword [rsp + 0x30]
0x0000d19d      e87e5e0000     call sym.dirchownmod
0x0000d1a2      85c0           test eax, eax
0x0000d1a4      5a             pop rdx
0x0000d1a5      59             pop rcx
0x0000d1a6      0f8470ffffff   je 0xd11c
0x0000d1ac      85ed           test ebp, ebp
0x0000d1ae      0f84c4000000   je 0xd278
0x0000d1b4      83fd02         cmp ebp, 2
0x0000d1b7      0f84aefeffff   je 0xd06b
0x0000d1bd      4d85ed         test r13, r13
0x0000d1c0      0f84a5feffff   je 0xd06b
0x0000d1c6      e88557ffff     call sym.imp.__errno_location
0x0000d1cb      833814         cmp dword [rax], 0x14
0x0000d1ce      4989c4         mov r12, rax
0x0000d1d1      0f8494feffff   je 0xd06b
0x0000d1d7      4889df         mov rdi, rbx
0x0000d1da      e8e1240000     call sym.quote
0x0000d1df      807c241f00     cmp byte [rsp + 0x1f], 0
0x0000d1e4      4889c3         mov rbx, rax
0x0000d1e7      488d3532b000.  lea rsi, [0x00018220]                   ; "cannot change owner and permissions of %s"
0x0000d1ee      488d05bb9400.  lea rax, str.cannot_change_permissions_of__s ; 0x166b0 ; "cannot change permissions of %s"
0x0000d1f5      ba05000000     mov edx, 5
0x0000d1fa      480f45f0       cmovne rsi, rax
0x0000d1fe      31ff           xor edi, edi
0x0000d200      e8cb58ffff     call sym.imp.dcgettext
0x0000d205      418b3424       mov esi, dword [r12]
0x0000d209      4889c2         mov rdx, rax
0x0000d20c      4889d9         mov rcx, rbx
0x0000d20f      31ff           xor edi, edi
0x0000d211      31c0           xor eax, eax
0x0000d213      4531e4         xor r12d, r12d
0x0000d216      e8155dffff     call sym.imp.error
0x0000d21b      e97dfeffff     jmp 0xd09d
0x0000d220      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000d224      0f85f2feffff   jne 0xd11c
0x0000d22a      e82157ffff     call sym.imp.__errno_location
0x0000d22f      8b28           mov ebp, dword [rax]
0x0000d231      e935feffff     jmp 0xd06b
0x0000d236      662e0f1f8400.  nop word cs:[rax + rax]
0x0000d240      8b442438       mov eax, dword [rsp + 0x38]
0x0000d244      2500f00000     and eax, 0xf000
0x0000d249      3d00400000     cmp eax, 0x4000                         ; "([]A\A]\xc3\x0f\x1f\x84"
0x0000d24e      0f8517feffff   jne 0xd06b
0x0000d254      e944feffff     jmp 0xd09d
0x0000d259      0f1f80000000.  nop dword [rax]
0x0000d260      c7442408ffff.  mov dword [rsp + 8], 0xffffffff         ; [0xffffffff:4]=-1 ; -1
0x0000d268      ba02000000     mov edx, 2
0x0000d26d      e9dcfeffff     jmp 0xd14e
0x0000d272      660f1f440000   nop word [rax + rax]
0x0000d278      e8d356ffff     call sym.imp.__errno_location
0x0000d27d      4989c4         mov r12, rax
0x0000d280      e952ffffff     jmp 0xd1d7
0x0000d285      e8a658ffff     call sym.imp.__stack_chk_fail
0x0000d28a      4489642408     mov dword [rsp + 8], r12d
0x0000d28f      ba03000000     mov edx, 3
0x0000d294      e9b5feffff     jmp 0xd14e
0x0000d299      0f1f80000000.  nop dword [rax]
;-- mode_compile:
0x0000d2a0      55             push rbp                                ; ../coreutils-8.31/lib/modechange.c:135
0x0000d2a1      53             push rbx
0x0000d2a2      4889fb         mov rbx, rdi
0x0000d2a5      4883ec08       sub rsp, 8
0x0000d2a9      0fbe07         movsx eax, byte [rdi]                   ; ../coreutils-8.31/lib/modechange.c:141
0x0000d2ac      8d50d0         lea edx, [rax - 0x30]
0x0000d2af      80fa07         cmp dl, 7
0x0000d2b2      0f86b0000000   jbe 0xd368
0x0000d2b8      84c0           test al, al                             ; ../coreutils-8.31/lib/modechange.c:169
0x0000d2ba      4889f9         mov rcx, rdi
0x0000d2bd      bf01000000     mov edi, 1                              ; ../coreutils-8.31/lib/modechange.c:168
0x0000d2c2      7427           je 0xd2eb                               ; ../coreutils-8.31/lib/modechange.c:169
0x0000d2c4      0f1f4000       nop dword [rax]
0x0000d2c8      89c2           mov edx, eax                            ; ../coreutils-8.31/lib/modechange.c:170
0x0000d2ca      83e2ef         and edx, 0xffffffef                     ; 4294967279
0x0000d2cd      80fa2d         cmp dl, 0x2d
0x0000d2d0      0f94c2         sete dl
0x0000d2d3      3c2b           cmp al, 0x2b
0x0000d2d5      0f94c0         sete al
0x0000d2d8      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/modechange.c:169
0x0000d2dc      09d0           or eax, edx                             ; ../coreutils-8.31/lib/modechange.c:170
0x0000d2de      0fb6c0         movzx eax, al
0x0000d2e1      4801c7         add rdi, rax
0x0000d2e4      0fb601         movzx eax, byte [rcx]                   ; ../coreutils-8.31/lib/modechange.c:169
0x0000d2e7      84c0           test al, al
0x0000d2e9      75dd           jne 0xd2c8
0x0000d2eb      ba10000000     mov edx, 0x10                           ; ../coreutils-8.31/lib/xalloc.h:101
0x0000d2f0      31c9           xor ecx, ecx
0x0000d2f2      4889d0         mov rax, rdx
0x0000d2f5      48f7e7         mul rdi
0x0000d2f8      0f8011030000   jo 0xd60f
0x0000d2fe      4885c0         test rax, rax
0x0000d301      0f8812030000   js 0xd619
0x0000d307      4885c9         test rcx, rcx
0x0000d30a      0f8509030000   jne 0xd619
0x0000d310      48c1e704       shl rdi, 4                              ; ../coreutils-8.31/lib/xalloc.h:103
0x0000d314      488d2d31af00.  lea rbp, [0x0001824c]                   ; ../coreutils-8.31/lib/modechange.c:259
0x0000d31b      e8f04c0000     call sym.xmalloc                        ; ../coreutils-8.31/lib/xalloc.h:103
0x0000d320      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/modechange.c:138
0x0000d322      4531db         xor r11d, r11d                          ; ../coreutils-8.31/lib/modechange.c:179
0x0000d325      440fb60b       movzx r9d, byte [rbx]                   ; ../coreutils-8.31/lib/modechange.c:183
0x0000d329      4180f961       cmp r9b, 0x61
0x0000d32d      0f844d020000   je 0xd580                               ; ../coreutils-8.31/lib/modechange.c:181
0x0000d333      7e6b           jle 0xd3a0
0x0000d335      4180f96f       cmp r9b, 0x6f
0x0000d339      0f8471020000   je 0xd5b0
0x0000d33f      4180f975       cmp r9b, 0x75
0x0000d343      0f8457020000   je 0xd5a0
0x0000d349      4180f967       cmp r9b, 0x67
0x0000d34d      0f843d020000   je 0xd590
0x0000d353      4889c7         mov rdi, rax
0x0000d356      e8755dffff     call sym..plt.got
0x0000d35b      31c0           xor eax, eax
0x0000d35d      4883c408       add rsp, 8
0x0000d361      5b             pop rbx                                 ; ../coreutils-8.31/lib/modechange.c:182
0x0000d362      5d             pop rbp
0x0000d363      c3             ret
0x0000d364      0f1f4000       nop dword [rax]
0x0000d368      4889fa         mov rdx, rdi
0x0000d36b      31ed           xor ebp, ebp
0x0000d36d      eb10           jmp 0xd37f
0x0000d36f      90             nop
0x0000d370      0fbe02         movsx eax, byte [rdx]
0x0000d373      8d48d0         lea ecx, [rax - 0x30]
0x0000d376      80f907         cmp cl, 7
0x0000d379      0f8741020000   ja 0xd5c0
0x0000d37f      8d6ce8d0       lea ebp, [rax + rbp*8 - 0x30]
0x0000d383      4883c201       add rdx, 1
0x0000d387      81fdff0f0000   cmp ebp, 0xfff
0x0000d38d      76e1           jbe 0xd370
0x0000d38f      4883c408       add rsp, 8
0x0000d393      31c0           xor eax, eax
0x0000d395      5b             pop rbx                                 ; ../coreutils-8.31/lib/modechange.c:123
0x0000d396      5d             pop rbp
0x0000d397      c3             ret
0x0000d398      0f1f84000000.  nop dword [rax + rax]
0x0000d3a0      4180f92d       cmp r9b, 0x2d
0x0000d3a4      740c           je 0xd3b2
0x0000d3a6      4180f93d       cmp r9b, 0x3d
0x0000d3aa      7406           je 0xd3b2
0x0000d3ac      4180f92b       cmp r9b, 0x2b
0x0000d3b0      75a1           jne 0xd353
0x0000d3b2      488d7e01       lea rdi, [rsi + 1]
0x0000d3b6      48c1e604       shl rsi, 4
0x0000d3ba      4801c6         add rsi, rax
0x0000d3bd      eb65           jmp 0xd424
0x0000d3bf      90             nop
0x0000d3c0      80fa6f         cmp dl, 0x6f
0x0000d3c3      4c8d4302       lea r8, [rbx + 2]
0x0000d3c7      0f8493010000   je 0xd560
0x0000d3cd      80fa75         cmp dl, 0x75
0x0000d3d0      41bac0010000   mov r10d, 0x1c0
0x0000d3d6      0f85d4000000   jne 0xd4b0
0x0000d3dc      44880e         mov byte [rsi], r9b
0x0000d3df      c6460103       mov byte [rsi + 1], 3
0x0000d3e3      440fb64b02     movzx r9d, byte [rbx + 2]
0x0000d3e8      44895e04       mov dword [rsi + 4], r11d
0x0000d3ec      4c89c3         mov rbx, r8
0x0000d3ef      44895608       mov dword [rsi + 8], r10d
0x0000d3f3      4489d2         mov edx, r10d
0x0000d3f6      4421da         and edx, r11d
0x0000d3f9      4585db         test r11d, r11d
0x0000d3fc      440f45d2       cmovne r10d, edx
0x0000d400      4489ca         mov edx, r9d
0x0000d403      4489560c       mov dword [rsi + 0xc], r10d
0x0000d407      4883c610       add rsi, 0x10
0x0000d40b      83e2ef         and edx, 0xffffffef                     ; 4294967279
0x0000d40e      488d4f01       lea rcx, [rdi + 1]
0x0000d412      80fa2d         cmp dl, 0x2d
0x0000d415      740a           je 0xd421
0x0000d417      4180f92b       cmp r9b, 0x2b
0x0000d41b      0f85ff010000   jne 0xd620
0x0000d421      4889cf         mov rdi, rcx
0x0000d424      0fbe5301       movsx edx, byte [rbx + 1]
0x0000d428      488d4b01       lea rcx, [rbx + 1]
0x0000d42c      80fa67         cmp dl, 0x67
0x0000d42f      0f843b010000   je 0xd570
0x0000d435      7f89           jg 0xd3c0
0x0000d437      448d42d0       lea r8d, [rdx - 0x30]
0x0000d43b      4180f807       cmp r8b, 7
0x0000d43f      776f           ja 0xd4b0
0x0000d441      4531c0         xor r8d, r8d
0x0000d444      0f1f4000       nop dword [rax]
0x0000d448      468d44c2d0     lea r8d, [rdx + r8*8 - 0x30]
0x0000d44d      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/modechange.c:32
0x0000d451      4181f8ff0f00.  cmp r8d, 0xfff                          ; ../coreutils-8.31/lib/modechange.c:-32
0x0000d458      0f87f5feffff   ja 0xd353                               ; ../coreutils-8.31/lib/modechange.c:-157
0x0000d45e      0fbe11         movsx edx, byte [rcx]
0x0000d461      448d52d0       lea r10d, [rdx - 0x30]
0x0000d465      4180fa07       cmp r10b, 7
0x0000d469      76dd           jbe 0xd448
0x0000d46b      4585db         test r11d, r11d
0x0000d46e      0f85dffeffff   jne 0xd353
0x0000d474      84d2           test dl, dl
0x0000d476      7409           je 0xd481                               ; ../coreutils-8.31/lib/modechange.c:-130
0x0000d478      80fa2c         cmp dl, 0x2c
0x0000d47b      0f85d2feffff   jne 0xd353                              ; ../coreutils-8.31/lib/modechange.c:-127
0x0000d481      44880e         mov byte [rsi], r9b
0x0000d484      c6460101       mov byte [rsi + 1], 1
0x0000d488      4189d1         mov r9d, edx
0x0000d48b      c74604ff0f00.  mov dword [rsi + 4], 0xfff              ; [0xfff:4]=0x5f00
0x0000d492      44894608       mov dword [rsi + 8], r8d
0x0000d496      4889cb         mov rbx, rcx
0x0000d499      41bbff0f0000   mov r11d, 0xfff
0x0000d49f      41baff0f0000   mov r10d, 0xfff                         ; ../coreutils-8.31/lib/modechange.c:-115
0x0000d4a5      e956ffffff     jmp 0xd400
0x0000d4aa      660f1f440000   nop word [rax + rax]
0x0000d4b0      448d42a8       lea r8d, [rdx - 0x58]
0x0000d4b4      4531d2         xor r10d, r10d
0x0000d4b7      bb01000000     mov ebx, 1
0x0000d4bc      4180f820       cmp r8b, 0x20                           ; "@"
0x0000d4c0      7737           ja 0xd4f9
0x0000d4c2      660f1f440000   nop word [rax + rax]
0x0000d4c8      450fb6c0       movzx r8d, r8b
0x0000d4cc      4e63448500     movsxd r8, dword [rbp + r8*4]
0x0000d4d1      4901e8         add r8, rbp
0x0000d4d4      41ffe0         jmp r8
0x0000d4d7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/modechange.c:-118
0x0000d4e0      bb02000000     mov ebx, 2
0x0000d4e5      0f1f00         nop dword [rax]
0x0000d4e8      4883c101       add rcx, 1
0x0000d4ec      0fb611         movzx edx, byte [rcx]
0x0000d4ef      448d42a8       lea r8d, [rdx - 0x58]                   ; ../coreutils-8.31/lib/modechange.c:-107
0x0000d4f3      4180f820       cmp r8b, 0x20                           ; "@"
0x0000d4f7      76cf           jbe 0xd4c8
0x0000d4f9      44880e         mov byte [rsi], r9b
0x0000d4fc      885e01         mov byte [rsi + 1], bl
0x0000d4ff      4189d1         mov r9d, edx                            ; ../coreutils-8.31/lib/modechange.c:-111
0x0000d502      44895e04       mov dword [rsi + 4], r11d
0x0000d506      44895608       mov dword [rsi + 8], r10d               ; ../coreutils-8.31/lib/modechange.c:-110
0x0000d50a      4889cb         mov rbx, rcx
0x0000d50d      e9e1feffff     jmp 0xd3f3
0x0000d512      660f1f440000   nop word [rax + rax]
0x0000d518      4183ca49       or r10d, 0x49
0x0000d51c      ebca           jmp 0xd4e8
0x0000d51e      6690           nop
0x0000d520      4180ca92       or r10b, 0x92
0x0000d524      ebc2           jmp 0xd4e8
0x0000d526      662e0f1f8400.  nop word cs:[rax + rax]
0x0000d530      4181ca000200.  or r10d, 0x200
0x0000d537      ebaf           jmp 0xd4e8
0x0000d539      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/modechange.c:-140
0x0000d540      4181ca000c00.  or r10d, 0xc00
0x0000d547      eb9f           jmp 0xd4e8
0x0000d549      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/modechange.c:-203
0x0000d550      4181ca240100.  or r10d, 0x124
0x0000d557      eb8f           jmp 0xd4e8
0x0000d559      0f1f80000000.  nop dword [rax]
0x0000d560      41ba07000000   mov r10d, 7
0x0000d566      e971feffff     jmp 0xd3dc                              ; ../coreutils-8.31/lib/modechange.c:-197
0x0000d56b      0f1f440000     nop dword [rax + rax]
0x0000d570      4c8d4302       lea r8, [rbx + 2]
0x0000d574      41ba38000000   mov r10d, 0x38                          ; '8'
0x0000d57a      e95dfeffff     jmp 0xd3dc
0x0000d57f      90             nop                                     ; ../coreutils-8.31/lib/modechange.c:-230
0x0000d580      41bbff0f0000   mov r11d, 0xfff
0x0000d586      4883c301       add rbx, 1
0x0000d58a      e996fdffff     jmp 0xd325                              ; ../coreutils-8.31/lib/modechange.c:-224
0x0000d58f      90             nop
0x0000d590      4181cb380400.  or r11d, 0x438
0x0000d597      ebed           jmp 0xd586                              ; ../coreutils-8.31/lib/modechange.c:-272
0x0000d599      0f1f80000000.  nop dword [rax]
0x0000d5a0      4181cbc00900.  or r11d, 0x9c0
0x0000d5a7      ebdd           jmp 0xd586
0x0000d5a9      0f1f80000000.  nop dword [rax]
0x0000d5b0      4181cb070200.  or r11d, 0x207
0x0000d5b7      ebcd           jmp 0xd586
0x0000d5b9      0f1f80000000.  nop dword [rax]
0x0000d5c0      84c0           test al, al                             ; ../coreutils-8.31/lib/modechange.c:-267
0x0000d5c2      0f85c7fdffff   jne 0xd38f
0x0000d5c8      4829da         sub rdx, rbx
0x0000d5cb      89eb           mov ebx, ebp
0x0000d5cd      b8ff0f0000     mov eax, 0xfff
0x0000d5d2      81e3000c0000   and ebx, 0xc00
0x0000d5d8      bf20000000     mov edi, 0x20                           ; ../coreutils-8.31/lib/xalloc.h:-284 ; "@"
0x0000d5dd      81cbff030000   or ebx, 0x3ff
0x0000d5e3      4883fa05       cmp rdx, 5
0x0000d5e7      0f4dd8         cmovge ebx, eax
0x0000d5ea      e8214a0000     call sym.xmalloc
0x0000d5ef      ba3d010000     mov edx, 0x13d
0x0000d5f4      c74004ff0f00.  mov dword [rax + 4], 0xfff              ; [0xfff:4]=0x5f00
0x0000d5fb      896808         mov dword [rax + 8], ebp
0x0000d5fe      668910         mov word [rax], dx
0x0000d601      89580c         mov dword [rax + 0xc], ebx              ; ../coreutils-8.31/lib/modechange.c:-199
0x0000d604      c6401100       mov byte [rax + 0x11], 0
0x0000d608      4883c408       add rsp, 8
0x0000d60c      5b             pop rbx
0x0000d60d      5d             pop rbp
0x0000d60e      c3             ret
0x0000d60f      b901000000     mov ecx, 1
0x0000d614      e9e5fcffff     jmp 0xd2fe
0x0000d619      e8424c0000     call sym.xalloc_die
0x0000d61e      6690           nop
0x0000d620      4180f92c       cmp r9b, 0x2c
0x0000d624      750c           jne 0xd632
0x0000d626      4883c301       add rbx, 1
0x0000d62a      4889fe         mov rsi, rdi
0x0000d62d      e9f0fcffff     jmp 0xd322
0x0000d632      4584c9         test r9b, r9b
0x0000d635      0f8518fdffff   jne 0xd353
0x0000d63b      48c1e704       shl rdi, 4
0x0000d63f      c644380100     mov byte [rax + rdi + 1], 0
0x0000d644      e914fdffff     jmp 0xd35d
0x0000d649      0f1f80000000.  nop dword [rax]
;-- mode_create_from_ref:
0x0000d650      53             push rbx
0x0000d651      4889fe         mov rsi, rdi                            ; ../coreutils-8.31/lib/modechange.c:-401
0x0000d654      bf01000000     mov edi, 1                              ; ../coreutils-8.31/lib/modechange.c:-398
0x0000d659      4881eca00000.  sub rsp, 0xa0
0x0000d660      4889e2         mov rdx, rsp
0x0000d663      64488b042528.  mov rax, qword fs:[0x28]
0x0000d66c      488984249800.  mov qword [rsp + 0x98], rax
0x0000d674      31c0           xor eax, eax
0x0000d676      e85557ffff     call sym.imp.__xstat
0x0000d67b      85c0           test eax, eax
0x0000d67d      7551           jne 0xd6d0
0x0000d67f      8b5c2418       mov ebx, dword [rsp + 0x18]
0x0000d683      bf20000000     mov edi, 0x20                           ; "@"
0x0000d688      e883490000     call sym.xmalloc
0x0000d68d      ba3d010000     mov edx, 0x13d
0x0000d692      c74004ff0f00.  mov dword [rax + 4], 0xfff              ; [0xfff:4]=0x5f00
0x0000d699      c7400cff0f00.  mov dword [rax + 0xc], 0xfff            ; [0xfff:4]=0x5f00
0x0000d6a0      668910         mov word [rax], dx
0x0000d6a3      895808         mov dword [rax + 8], ebx
0x0000d6a6      c6401100       mov byte [rax + 0x11], 0
0x0000d6aa      488b8c249800.  mov rcx, qword [rsp + 0x98]             ; ../coreutils-8.31/lib/modechange.c:-175
0x0000d6b2      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000d6bb      7517           jne 0xd6d4
0x0000d6bd      4881c4a00000.  add rsp, 0xa0
0x0000d6c4      5b             pop rbx
0x0000d6c5      c3             ret
0x0000d6c6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000d6d0      31c0           xor eax, eax
0x0000d6d2      ebd6           jmp 0xd6aa
0x0000d6d4      e85754ffff     call sym.imp.__stack_chk_fail
0x0000d6d9      0f1f80000000.  nop dword [rax]
;-- mode_adjust:
0x0000d6e0      440fb65101     movzx r10d, byte [rcx + 1]
0x0000d6e5      89f8           mov eax, edi
0x0000d6e7      25ff0f0000     and eax, 0xfff                          ; ../coreutils-8.31/lib/modechange.c:-115
0x0000d6ec      4584d2         test r10b, r10b
0x0000d6ef      0f844b010000   je 0xd840
0x0000d6f5      4080fe01       cmp sil, 1
0x0000d6f9      4154           push r12
0x0000d6fb      55             push rbp                                ; ../coreutils-8.31/lib/modechange.c:-164
0x0000d6fc      53             push rbx
0x0000d6fd      19db           sbb ebx, ebx
0x0000d6ff      400fb6ee       movzx ebp, sil                          ; ../coreutils-8.31/lib/modechange.c:-166
0x0000d703      f7d3           not ebx
0x0000d705      4531db         xor r11d, r11d                          ; ../coreutils-8.31/lib/modechange.c:-164
0x0000d708      81e3000c0000   and ebx, 0xc00                          ; ../coreutils-8.31/lib/modechange.c:-165
0x0000d70e      eb3a           jmp 0xd74a
0x0000d710      4489cf         mov edi, r9d
0x0000d713      09d7           or edi, edx
0x0000d715      f7d7           not edi
0x0000d717      21fe           and esi, edi
0x0000d719      4180fc2d       cmp r12b, 0x2d
0x0000d71d      0f840d010000   je 0xd830                               ; ../coreutils-8.31/lib/modechange.c:-151
0x0000d723      4180fc3d       cmp r12b, 0x3d
0x0000d727      0f84ae000000   je 0xd7db                               ; ../coreutils-8.31/lib/modechange.c:-150
0x0000d72d      4180fc2b       cmp r12b, 0x2b
0x0000d731      7505           jne 0xd738
0x0000d733      4109f3         or r11d, esi
0x0000d736      09f0           or eax, esi
0x0000d738      4883c110       add rcx, 0x10
0x0000d73c      440fb65101     movzx r10d, byte [rcx + 1]
0x0000d741      4584d2         test r10b, r10b
0x0000d744      0f84b2000000   je 0xd7fc
0x0000d74a      448b490c       mov r9d, dword [rcx + 0xc]
0x0000d74e      8b7904         mov edi, dword [rcx + 4]
0x0000d751      8b7108         mov esi, dword [rcx + 8]
0x0000d754      41f7d1         not r9d
0x0000d757      4121d9         and r9d, ebx
0x0000d75a      4180fa02       cmp r10b, 2
0x0000d75e      0f84ac000000   je 0xd810
0x0000d764      4180fa03       cmp r10b, 3
0x0000d768      753e           jne 0xd7a8
0x0000d76a      21c6           and esi, eax
0x0000d76c      4189f2         mov r10d, esi
0x0000d76f      4181e2240100.  and r10d, 0x124
0x0000d776      4183fa01       cmp r10d, 1
0x0000d77a      4519d2         sbb r10d, r10d
0x0000d77d      41f7d2         not r10d
0x0000d780      4181e2240100.  and r10d, 0x124
0x0000d787      4589d4         mov r12d, r10d
0x0000d78a      4180cc92       or r12b, 0x92
0x0000d78e      40f6c692       test sil, 0x92
0x0000d792      450f45d4       cmovne r10d, r12d
0x0000d796      4589d4         mov r12d, r10d
0x0000d799      4183cc49       or r12d, 0x49
0x0000d79d      40f6c649       test sil, 0x49                          ; ../coreutils-8.31/lib/modechange.c:-168
0x0000d7a1      450f45d4       cmovne r10d, r12d
0x0000d7a5      4409d6         or esi, r10d
0x0000d7a8      4589ca         mov r10d, r9d
0x0000d7ab      85ff           test edi, edi
0x0000d7ad      440fb621       movzx r12d, byte [rcx]                  ; ../coreutils-8.31/lib/modechange.c:-105
0x0000d7b1      41f7d2         not r10d
0x0000d7b4      0f8456ffffff   je 0xd710
0x0000d7ba      4121fa         and r10d, edi
0x0000d7bd      4421d6         and esi, r10d
0x0000d7c0      4180fc2d       cmp r12b, 0x2d
0x0000d7c4      746a           je 0xd830                               ; ../coreutils-8.31/lib/modechange.c:-139
0x0000d7c6      4180fc3d       cmp r12b, 0x3d
0x0000d7ca      0f855dffffff   jne 0xd72d
0x0000d7d0      f7d7           not edi
0x0000d7d2      4109f9         or r9d, edi
0x0000d7d5      4589ca         mov r10d, r9d
0x0000d7d8      41f7d2         not r10d
0x0000d7db      4181e2ff0f00.  and r10d, 0xfff
0x0000d7e2      4883c110       add rcx, 0x10
0x0000d7e6      4421c8         and eax, r9d
0x0000d7e9      4509d3         or r11d, r10d
0x0000d7ec      440fb65101     movzx r10d, byte [rcx + 1]
0x0000d7f1      09f0           or eax, esi                             ; ../coreutils-8.31/lib/modechange.c:-170
0x0000d7f3      4584d2         test r10b, r10b
0x0000d7f6      0f854effffff   jne 0xd74a                              ; ../coreutils-8.31/lib/modechange.c:-231
0x0000d7fc      4d85c0         test r8, r8
0x0000d7ff      7403           je 0xd804
0x0000d801      458918         mov dword [r8], r11d
0x0000d804      5b             pop rbx
0x0000d805      5d             pop rbp
0x0000d806      415c           pop r12
0x0000d808      c3             ret
0x0000d809      0f1f80000000.  nop dword [rax]
0x0000d810      4189c4         mov r12d, eax
0x0000d813      4189f2         mov r10d, esi
0x0000d816      4183e449       and r12d, 0x49
0x0000d81a      4183ca49       or r10d, 0x49
0x0000d81e      4109ec         or r12d, ebp
0x0000d821      410f45f2       cmovne esi, r10d
0x0000d825      eb81           jmp 0xd7a8
0x0000d827      660f1f840000.  nop word [rax + rax]
0x0000d830      4109f3         or r11d, esi
0x0000d833      f7d6           not esi
0x0000d835      21f0           and eax, esi
0x0000d837      e9fcfeffff     jmp 0xd738
0x0000d83c      0f1f4000       nop dword [rax]
0x0000d840      4531db         xor r11d, r11d
0x0000d843      4d85c0         test r8, r8
0x0000d846      7403           je 0xd84b
0x0000d848      458918         mov dword [r8], r11d
0x0000d84b      f3c3           ret
0x0000d84d      0f1f00         nop dword [rax]
;-- opendirat:
0x0000d850      4155           push r13                                ; ../coreutils-8.31/lib/opendirat.c:37
0x0000d852      4154           push r12
0x0000d854      81ca00090900   or edx, 0x90900                         ; ../coreutils-8.31/lib/opendirat.c:38
0x0000d85a      55             push rbp                                ; ../coreutils-8.31/lib/opendirat.c:37
0x0000d85b      53             push rbx
0x0000d85c      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/opendirat.c:40
0x0000d85e      4989cc         mov r12, rcx                            ; ../coreutils-8.31/lib/opendirat.c:37
0x0000d861      4883ec08       sub rsp, 8
0x0000d865      e8d6590000     call sym.openat_safer                   ; ../coreutils-8.31/lib/opendirat.c:40
0x0000d86a      85c0           test eax, eax                           ; ../coreutils-8.31/lib/opendirat.c:42
0x0000d86c      7852           js 0xd8c0
0x0000d86e      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/opendirat.c:44
0x0000d870      89c3           mov ebx, eax
0x0000d872      e83957ffff     call sym.imp.fdopendir
0x0000d877      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/opendirat.c:45
0x0000d87a      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/opendirat.c:44
0x0000d87d      7419           je 0xd898                               ; ../coreutils-8.31/lib/opendirat.c:45
0x0000d87f      41891c24       mov dword [r12], ebx                    ; ../coreutils-8.31/lib/opendirat.c:46
0x0000d883      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/opendirat.c:54
0x0000d887      4889e8         mov rax, rbp
0x0000d88a      5b             pop rbx
0x0000d88b      5d             pop rbp
0x0000d88c      415c           pop r12
0x0000d88e      415d           pop r13
0x0000d890      c3             ret
0x0000d891      0f1f80000000.  nop dword [rax]
0x0000d898      e8b350ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/opendirat.c:49
0x0000d89d      448b28         mov r13d, dword [rax]
0x0000d8a0      4989c4         mov r12, rax
0x0000d8a3      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/opendirat.c:50
0x0000d8a5      e88653ffff     call sym.imp.close
0x0000d8aa      4889e8         mov rax, rbp                            ; ../coreutils-8.31/lib/opendirat.c:54
0x0000d8ad      45892c24       mov dword [r12], r13d                   ; ../coreutils-8.31/lib/opendirat.c:51
0x0000d8b1      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/opendirat.c:54
0x0000d8b5      5b             pop rbx
0x0000d8b6      5d             pop rbp
0x0000d8b7      415c           pop r12
0x0000d8b9      415d           pop r13
0x0000d8bb      c3             ret
0x0000d8bc      0f1f4000       nop dword [rax]
0x0000d8c0      4883c408       add rsp, 8
0x0000d8c4      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/opendirat.c:43
0x0000d8c6      5b             pop rbx                                 ; ../coreutils-8.31/lib/opendirat.c:54
0x0000d8c7      4889e8         mov rax, rbp
0x0000d8ca      5d             pop rbp
0x0000d8cb      415c           pop r12
0x0000d8cd      415d           pop r13
0x0000d8cf      c3             ret
;-- set_program_name:
0x0000d8d0      4885ff         test rdi, rdi
0x0000d8d3      53             push rbx                                ; ../coreutils-8.31/lib/progname.c:40
0x0000d8d4      7477           je 0xd94d                               ; ../coreutils-8.31/lib/progname.c:51
0x0000d8d6      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x0000d8db      4889fb         mov rbx, rdi
0x0000d8de      e8bd52ffff     call sym.imp.strrchr
0x0000d8e3      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x0000d8e6      7455           je 0xd93d
0x0000d8e8      4c8d4001       lea r8, [rax + 1]
0x0000d8ec      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x0000d8ef      4829da         sub rdx, rbx
0x0000d8f2      4883fa06       cmp rdx, 6
0x0000d8f6      7e45           jle 0xd93d
0x0000d8f8      488d70fa       lea rsi, [rax - 6]
0x0000d8fc      488d3d05aa00.  lea rdi, str..libs                      ; 0x18308 ; "/.libs/"
0x0000d903      b907000000     mov ecx, 7
0x0000d908      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000d90a      0f97c2         seta dl
0x0000d90d      80da00         sbb dl, 0
0x0000d910      84d2           test dl, dl
0x0000d912      7529           jne 0xd93d
0x0000d914      488d3df5a900.  lea rdi, [0x00018310]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x0000d91b      b903000000     mov ecx, 3
0x0000d920      4c89c6         mov rsi, r8
0x0000d923      4c89c3         mov rbx, r8
0x0000d926      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000d928      0f97c2         seta dl
0x0000d92b      80da00         sbb dl, 0
0x0000d92e      84d2           test dl, dl
0x0000d930      750b           jne 0xd93d
0x0000d932      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x0000d936      48891da3f720.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x21d0e0:8]=0
0x0000d93d      48891d7c1c21.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x21f5c0:8]=0
0x0000d944      48891dbdf720.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x21d108:8]=0
0x0000d94b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x0000d94c      c3             ret
0x0000d94d      488b0dccf720.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21d120:8]=0
0x0000d954      488d3d75a900.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x182d0 ; "A NULL argv[0] was passed through an exec system call.\n"
0x0000d95b      ba37000000     mov edx, 0x37                           ; '7'
0x0000d960      be01000000     mov esi, 1
0x0000d965      e8d656ffff     call sym.imp.fwrite
0x0000d96a      e8d14fffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x0000d96f      90             nop
;-- qcopy_acl:
0x0000d970      4154           push r12                                ; ../coreutils-8.31/lib/qcopy-acl.c:41
0x0000d972      55             push rbp
0x0000d973      4189cc         mov r12d, ecx
0x0000d976      53             push rbx
0x0000d977      4889d5         mov rbp, rdx
0x0000d97a      4489c2         mov edx, r8d                            ; ../coreutils-8.31/lib/qcopy-acl.c:45
0x0000d97d      4883ec10       sub rsp, 0x10                           ; ../coreutils-8.31/lib/qcopy-acl.c:41
0x0000d981      488d5c2404     lea rbx, [rsp + 4]                      ; ../coreutils-8.31/lib/qcopy-acl.c:45
0x0000d986      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/qcopy-acl.c:41
0x0000d98f      4889442408     mov qword [rsp + 8], rax
0x0000d994      31c0           xor eax, eax
0x0000d996      4889d9         mov rcx, rbx                            ; ../coreutils-8.31/lib/qcopy-acl.c:45
0x0000d999      e832500000     call sym.get_permissions
0x0000d99e      85c0           test eax, eax                           ; ../coreutils-8.31/lib/qcopy-acl.c:46
0x0000d9a0      7536           jne 0xd9d8
0x0000d9a2      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/qcopy-acl.c:48
0x0000d9a5      4889df         mov rdi, rbx
0x0000d9a8      4489e2         mov edx, r12d
0x0000d9ab      e850500000     call sym.set_permissions
0x0000d9b0      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/qcopy-acl.c:49
0x0000d9b3      89c5           mov ebp, eax                            ; ../coreutils-8.31/lib/qcopy-acl.c:48
0x0000d9b5      e806500000     call sym.free_permission_context        ; ../coreutils-8.31/lib/qcopy-acl.c:49
0x0000d9ba      488b4c2408     mov rcx, qword [rsp + 8]                ; ../coreutils-8.31/lib/qcopy-acl.c:51
0x0000d9bf      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000d9c8      89e8           mov eax, ebp
0x0000d9ca      7513           jne 0xd9df
0x0000d9cc      4883c410       add rsp, 0x10
0x0000d9d0      5b             pop rbx
0x0000d9d1      5d             pop rbp
0x0000d9d2      415c           pop r12
0x0000d9d4      c3             ret
0x0000d9d5      0f1f00         nop dword [rax]
0x0000d9d8      bdfeffffff     mov ebp, 0xfffffffe                     ; ../coreutils-8.31/lib/qcopy-acl.c:47 ; 4294967294
0x0000d9dd      ebdb           jmp 0xd9ba
0x0000d9df      e84c51ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/qcopy-acl.c:51
0x0000d9e4      662e0f1f8400.  nop word cs:[rax + rax]
0x0000d9ee      6690           nop
;-- qset_acl:
0x0000d9f0      55             push rbp                                ; ../coreutils-8.31/lib/qset-acl.c:40
0x0000d9f1      53             push rbx
0x0000d9f2      4883ec18       sub rsp, 0x18
0x0000d9f6      488d5c2404     lea rbx, [rsp + 4]                      ; ../coreutils-8.31/lib/qset-acl.c:46
0x0000d9fb      89542404       mov dword [rsp + 4], edx                ; ../coreutils-8.31/lib/qset-acl.c:45
0x0000d9ff      89f2           mov edx, esi                            ; ../coreutils-8.31/lib/qset-acl.c:46
0x0000da01      4889fe         mov rsi, rdi
0x0000da04      4889df         mov rdi, rbx
0x0000da07      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/qset-acl.c:40
0x0000da10      4889442408     mov qword [rsp + 8], rax
0x0000da15      31c0           xor eax, eax
0x0000da17      e8e44f0000     call sym.set_permissions                ; ../coreutils-8.31/lib/qset-acl.c:46
0x0000da1c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/qset-acl.c:47
0x0000da1f      89c5           mov ebp, eax                            ; ../coreutils-8.31/lib/qset-acl.c:46
0x0000da21      e89a4f0000     call sym.free_permission_context        ; ../coreutils-8.31/lib/qset-acl.c:47
0x0000da26      488b4c2408     mov rcx, qword [rsp + 8]                ; ../coreutils-8.31/lib/qset-acl.c:49
0x0000da2b      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000da34      7509           jne 0xda3f
0x0000da36      4883c418       add rsp, 0x18
0x0000da3a      89e8           mov eax, ebp
0x0000da3c      5b             pop rbx
0x0000da3d      5d             pop rbp
0x0000da3e      c3             ret
0x0000da3f      e8ec50ffff     call sym.imp.__stack_chk_fail
0x0000da44      662e0f1f8400.  nop word cs:[rax + rax]
0x0000da4e      6690           nop
;-- gettext_quote.part.1:
0x0000da50      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x0000da51      53             push rbx
0x0000da52      4889fd         mov rbp, rdi
0x0000da55      89f3           mov ebx, esi
0x0000da57      4883ec08       sub rsp, 8
0x0000da5b      e880550000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x0000da60      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x0000da63      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x0000da66      80fa55         cmp dl, 0x55
0x0000da69      7475           je 0xdae0
0x0000da6b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x0000da6e      7420           je 0xda90
0x0000da70      488d05aca800.  lea rax, str.l______l                   ; 0x18323 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000da77      488d15a7a800.  lea rdx, [0x00018325]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000da7e      83fb09         cmp ebx, 9
0x0000da81      480f45c2       cmovne rax, rdx
0x0000da85      4883c408       add rsp, 8
0x0000da89      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x0000da8a      5d             pop rbp
0x0000da8b      c3             ret
0x0000da8c      0f1f4000       nop dword [rax]
0x0000da90      0fb65001       movzx edx, byte [rax + 1]
0x0000da94      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x0000da97      80fa42         cmp dl, 0x42
0x0000da9a      75d4           jne 0xda70
0x0000da9c      80780231       cmp byte [rax + 2], 0x31
0x0000daa0      75ce           jne 0xda70
0x0000daa2      80780338       cmp byte [rax + 3], 0x38
0x0000daa6      75c8           jne 0xda70
0x0000daa8      80780430       cmp byte [rax + 4], 0x30
0x0000daac      75c2           jne 0xda70
0x0000daae      80780533       cmp byte [rax + 5], 0x33
0x0000dab2      75bc           jne 0xda70
0x0000dab4      80780630       cmp byte [rax + 6], 0x30
0x0000dab8      75b6           jne 0xda70
0x0000daba      80780700       cmp byte [rax + 7], 0
0x0000dabe      75b0           jne 0xda70
0x0000dac0      807d0060       cmp byte [rbp], 0x60
0x0000dac4      488d0551a800.  lea rax, [0x0001831c]
0x0000dacb      488d154ea800.  lea rdx, [0x00018320]
0x0000dad2      480f45c2       cmovne rax, rdx
0x0000dad6      4883c408       add rsp, 8
0x0000dada      5b             pop rbx
0x0000dadb      5d             pop rbp
0x0000dadc      c3             ret
0x0000dadd      0f1f00         nop dword [rax]
0x0000dae0      0fb65001       movzx edx, byte [rax + 1]
0x0000dae4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x0000dae7      80fa54         cmp dl, 0x54
0x0000daea      7584           jne 0xda70
0x0000daec      0fb65002       movzx edx, byte [rax + 2]
0x0000daf0      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x0000daf3      80fa46         cmp dl, 0x46
0x0000daf6      0f8574ffffff   jne 0xda70
0x0000dafc      8078032d       cmp byte [rax + 3], 0x2d
0x0000db00      0f856affffff   jne 0xda70
0x0000db06      80780438       cmp byte [rax + 4], 0x38
0x0000db0a      0f8560ffffff   jne 0xda70
0x0000db10      80780500       cmp byte [rax + 5], 0
0x0000db14      0f8556ffffff   jne 0xda70
0x0000db1a      807d0060       cmp byte [rbp], 0x60
0x0000db1e      488d05efa700.  lea rax, [0x00018314]                   ; "\u2018"
0x0000db25      488d15eca700.  lea rdx, [0x00018318]                   ; "\u2019"
0x0000db2c      480f45c2       cmovne rax, rdx
0x0000db30      4883c408       add rsp, 8
0x0000db34      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x0000db35      5d             pop rbp
0x0000db36      c3             ret
0x0000db37      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x0000db40      4157           push r15
0x0000db42      4156           push r14
0x0000db44      4589c7         mov r15d, r8d
0x0000db47      4155           push r13
0x0000db49      4154           push r12
0x0000db4b      4989fe         mov r14, rdi
0x0000db4e      55             push rbp
0x0000db4f      53             push rbx
0x0000db50      4489cb         mov ebx, r9d
0x0000db53      4989f5         mov r13, rsi
0x0000db56      4889cd         mov rbp, rcx
0x0000db59      83e302         and ebx, 2
0x0000db5c      4881ecb80000.  sub rsp, 0xb8
0x0000db63      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x0000db6b      4889542410     mov qword [rsp + 0x10], rdx
0x0000db70      4489442408     mov dword [rsp + 8], r8d
0x0000db75      44894c2478     mov dword [rsp + 0x78], r9d
0x0000db7a      4889442420     mov qword [rsp + 0x20], rax
0x0000db7f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x0000db87      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x0000db8c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x0000db94      4889442460     mov qword [rsp + 0x60], rax
0x0000db99      64488b042528.  mov rax, qword fs:[0x28]
0x0000dba2      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000dbaa      31c0           xor eax, eax
0x0000dbac      e82f4fffff     call sym.imp.__ctype_get_mb_cur_max
0x0000dbb1      4183ff0a       cmp r15d, 0xa
0x0000dbb5      4889442458     mov qword [rsp + 0x58], rax
0x0000dbba      0f87af110000   ja 0xed6f
0x0000dbc0      488d0db9a700.  lea rcx, [0x00018380]
0x0000dbc7      4489fa         mov edx, r15d
0x0000dbca      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000dbce      4801c8         add rax, rcx
0x0000dbd1      ffe0           jmp rax
0x0000dbd3      c644240e01     mov byte [rsp + 0xe], 1
0x0000dbd8      c644247c00     mov byte [rsp + 0x7c], 0
0x0000dbdd      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x0000dbe0      48c744245000.  mov qword [rsp + 0x50], 0
0x0000dbe9      c644240f01     mov byte [rsp + 0xf], 1
0x0000dbee      c644240d00     mov byte [rsp + 0xd], 0
0x0000dbf3      488d052ba700.  lea rax, [0x00018325]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000dbfa      48c744241801.  mov qword [rsp + 0x18], 1
0x0000dc03      4531ff         xor r15d, r15d
0x0000dc06      c74424080200.  mov dword [rsp + 8], 2
0x0000dc0e      4889442448     mov qword [rsp + 0x48], rax
0x0000dc13      4531db         xor r11d, r11d
0x0000dc16      4889e8         mov rax, rbp
0x0000dc19      4589e0         mov r8d, r12d
0x0000dc1c      4c89dd         mov rbp, r11
0x0000dc1f      4989c3         mov r11, rax
0x0000dc22      660f1f440000   nop word [rax + rax]
0x0000dc28      4939eb         cmp r11, rbp
0x0000dc2b      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x0000dc2f      4983fbff       cmp r11, 0xffffffffffffffff
0x0000dc33      750d           jne 0xdc42
0x0000dc35      488b442410     mov rax, qword [rsp + 0x10]
0x0000dc3a      803c2800       cmp byte [rax + rbp], 0
0x0000dc3e      410f95c4       setne r12b
0x0000dc42      4584e4         test r12b, r12b
0x0000dc45      0f8455060000   je 0xe2a0
0x0000dc4b      837c240802     cmp dword [rsp + 8], 2
0x0000dc50      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000dc55      4c8d0c2f       lea r9, [rdi + rbp]
0x0000dc59      0f95c0         setne al
0x0000dc5c      2244240d       and al, byte [rsp + 0xd]
0x0000dc60      4189c2         mov r10d, eax
0x0000dc63      0f84a7000000   je 0xdd10
0x0000dc69      488b442418     mov rax, qword [rsp + 0x18]
0x0000dc6e      4885c0         test rax, rax
0x0000dc71      0f8429040000   je 0xe0a0
0x0000dc77      4983fbff       cmp r11, 0xffffffffffffffff
0x0000dc7b      488d5c0500     lea rbx, [rbp + rax]
0x0000dc80      752e           jne 0xdcb0
0x0000dc82      4883f801       cmp rax, 1
0x0000dc86      7628           jbe 0xdcb0
0x0000dc88      4488442438     mov byte [rsp + 0x38], r8b
0x0000dc8d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x0000dc92      4c894c2428     mov qword [rsp + 0x28], r9
0x0000dc97      e8544effff     call sym.imp.strlen
0x0000dc9c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x0000dca2      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x0000dca8      4989c3         mov r11, rax
0x0000dcab      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x0000dcb0      4c39db         cmp rbx, r11
0x0000dcb3      4488542428     mov byte [rsp + 0x28], r10b
0x0000dcb8      0f87b2050000   ja 0xe270
0x0000dcbe      488b542418     mov rdx, qword [rsp + 0x18]
0x0000dcc3      488b742448     mov rsi, qword [rsp + 0x48]
0x0000dcc8      4c89cf         mov rdi, r9
0x0000dccb      4c895c2440     mov qword [rsp + 0x40], r11
0x0000dcd0      4488442438     mov byte [rsp + 0x38], r8b
0x0000dcd5      4c894c2430     mov qword [rsp + 0x30], r9
0x0000dcda      e8b14fffff     call sym.imp.memcmp
0x0000dcdf      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x0000dce1      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x0000dce6      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x0000dcec      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x0000dcf1      0f8579050000   jne 0xe270
0x0000dcf7      807c240f00     cmp byte [rsp + 0xf], 0
0x0000dcfc      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x0000dd02      0f857d0f0000   jne 0xec85
0x0000dd08      0f1f84000000.  nop dword [rax + rax]
0x0000dd10      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x0000dd14      80fb7e         cmp bl, 0x7e
0x0000dd17      0f871b030000   ja 0xe038
0x0000dd1d      488d0d88a600.  lea rcx, [0x000183ac]
0x0000dd24      0fb6d3         movzx edx, bl
0x0000dd27      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000dd2b      4801c8         add rax, rcx
0x0000dd2e      ffe0           jmp rax
0x0000dd30      4531d2         xor r10d, r10d
0x0000dd33      4983fb01       cmp r11, 1
0x0000dd37      0f95c0         setne al
0x0000dd3a      4983fbff       cmp r11, 0xffffffffffffffff
0x0000dd3e      750c           jne 0xdd4c
0x0000dd40      488b442410     mov rax, qword [rsp + 0x10]
0x0000dd45      80780100       cmp byte [rax + 1], 0
0x0000dd49      0f95c0         setne al
0x0000dd4c      837c240802     cmp dword [rsp + 8], 2
0x0000dd51      0f94c2         sete dl
0x0000dd54      84c0           test al, al
0x0000dd56      0f844c020000   je 0xdfa8
0x0000dd5c      4531e4         xor r12d, r12d
0x0000dd5f      31c0           xor eax, eax
0x0000dd61      0f1f80000000.  nop dword [rax]
0x0000dd68      807c240d01     cmp byte [rsp + 0xd], 1
0x0000dd6d      0f850f010000   jne 0xde82
0x0000dd73      84d2           test dl, dl
0x0000dd75      0f8507010000   jne 0xde82
0x0000dd7b      488b742420     mov rsi, qword [rsp + 0x20]
0x0000dd80      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x0000dd83      7414           je 0xdd99
0x0000dd85      89da           mov edx, ebx
0x0000dd87      c0ea05         shr dl, 5
0x0000dd8a      0fb6d2         movzx edx, dl
0x0000dd8d      8b1496         mov edx, dword [rsi + rdx*4]
0x0000dd90      0fa3da         bt edx, ebx
0x0000dd93      0f824a010000   jb 0xdee3
0x0000dd99      4584d2         test r10b, r10b
0x0000dd9c      0f8541010000   jne 0xdee3
0x0000dda2      83f001         xor eax, 1
0x0000dda5      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x0000dda9      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x0000ddac      84c0           test al, al
0x0000ddae      7420           je 0xddd0                               ; ../coreutils-8.31/lib/quotearg.c:338
0x0000ddb0      4d39fd         cmp r13, r15
0x0000ddb3      7605           jbe 0xddba
0x0000ddb5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000ddba      498d4701       lea rax, [r15 + 1]
0x0000ddbe      4939c5         cmp r13, rax
0x0000ddc1      7606           jbe 0xddc9
0x0000ddc3      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000ddc9      4983c702       add r15, 2
0x0000ddcd      4531c0         xor r8d, r8d
0x0000ddd0      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x0000ddd3      7304           jae 0xddd9                              ; ../coreutils-8.31/lib/quotearg.c:68
0x0000ddd5      43881c3e       mov byte [r14 + r15], bl
0x0000ddd9      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x0000ddde      4983c701       add r15, 1
0x0000dde2      b800000000     mov eax, 0
0x0000dde7      4584e4         test r12b, r12b
0x0000ddea      0f44f8         cmove edi, eax
0x0000dded      40887c240e     mov byte [rsp + 0xe], dil
0x0000ddf2      e931feffff     jmp 0xdc28
0x0000ddf7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x0000de00      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x0000de03      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x0000de07      83f802         cmp eax, 2
0x0000de0a      0f84b8050000   je 0xe3c8
0x0000de10      83f805         cmp eax, 5
0x0000de13      0f846f050000   je 0xe388
0x0000de19      83f802         cmp eax, 2
0x0000de1c      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000de21      0f94c2         sete dl
0x0000de24      4531e4         xor r12d, r12d
0x0000de27      31c0           xor eax, eax
0x0000de29      e93affffff     jmp 0xdd68
0x0000de2e      6690           nop
0x0000de30      4531d2         xor r10d, r10d
0x0000de33      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x0000de38      0f8402050000   je 0xe340
0x0000de3e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x0000de43      31d2           xor edx, edx
0x0000de45      31c0           xor eax, eax
0x0000de47      bb27000000     mov ebx, 0x27                           ; '''
0x0000de4c      e917ffffff     jmp 0xdd68
0x0000de51      0f1f80000000.  nop dword [rax]
0x0000de58      ba09000000     mov edx, 9
0x0000de5d      bb74000000     mov ebx, 0x74                           ; 't'
0x0000de62      837c240802     cmp dword [rsp + 8], 2
0x0000de67      0f94c0         sete al
0x0000de6a      2244240f       and al, byte [rsp + 0xf]
0x0000de6e      0f854a010000   jne 0xdfbe
0x0000de74      807c240d00     cmp byte [rsp + 0xd], 0
0x0000de79      7565           jne 0xdee0
0x0000de7b      89d3           mov ebx, edx
0x0000de7d      4531e4         xor r12d, r12d
0x0000de80      31c0           xor eax, eax
0x0000de82      807c240f00     cmp byte [rsp + 0xf], 0
0x0000de87      0f85eefeffff   jne 0xdd7b
0x0000de8d      e907ffffff     jmp 0xdd99                              ; ../coreutils-8.31/lib/quotearg.c:210
0x0000de92      660f1f440000   nop word [rax + rax]
0x0000de98      ba08000000     mov edx, 8
0x0000de9d      bb62000000     mov ebx, 0x62                           ; 'b'
0x0000dea2      ebd0           jmp 0xde74
0x0000dea4      0f1f4000       nop dword [rax]
0x0000dea8      837c240802     cmp dword [rsp + 8], 2
0x0000dead      0f84cd030000   je 0xe280
0x0000deb3      807c240d00     cmp byte [rsp + 0xd], 0
0x0000deb8      0f8412020000   je 0xe0d0
0x0000debe      807c240f00     cmp byte [rsp + 0xf], 0
0x0000dec3      0f8407020000   je 0xe0d0
0x0000dec9      48837c241800   cmp qword [rsp + 0x18], 0
0x0000decf      0f85b6030000   jne 0xe28b
0x0000ded5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000deda      660f1f440000   nop word [rax + rax]
0x0000dee0      4531e4         xor r12d, r12d
0x0000dee3      837c240802     cmp dword [rsp + 8], 2
0x0000dee8      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x0000deeb      807c240f00     cmp byte [rsp + 0xf], 0
0x0000def0      89d0           mov eax, edx
0x0000def2      0f8550080000   jne 0xe748
0x0000def8      4489c0         mov eax, r8d
0x0000defb      83f001         xor eax, 1
0x0000defe      20d0           and al, dl
0x0000df00      742f           je 0xdf31
0x0000df02      4d39fd         cmp r13, r15
0x0000df05      7605           jbe 0xdf0c
0x0000df07      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000df0c      498d5701       lea rdx, [r15 + 1]
0x0000df10      4939d5         cmp r13, rdx
0x0000df13      7606           jbe 0xdf1b
0x0000df15      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000df1b      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x0000df1f      4939d5         cmp r13, rdx
0x0000df22      7606           jbe 0xdf2a
0x0000df24      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000df2a      4983c703       add r15, 3
0x0000df2e      4189c0         mov r8d, eax
0x0000df31      4d39fd         cmp r13, r15
0x0000df34      7605           jbe 0xdf3b
0x0000df36      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000df3b      4983c701       add r15, 1
0x0000df3f      4883c501       add rbp, 1
0x0000df43      e988feffff     jmp 0xddd0
0x0000df48      0f1f84000000.  nop dword [rax + rax]
0x0000df50      807c240d00     cmp byte [rsp + 0xd], 0
0x0000df55      0f85c8010000   jne 0xe123
0x0000df5b      31d2           xor edx, edx
0x0000df5d      f644247801     test byte [rsp + 0x78], 1
0x0000df62      0f8413ffffff   je 0xde7b
0x0000df68      4883c501       add rbp, 1
0x0000df6c      e9b7fcffff     jmp 0xdc28
0x0000df71      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x0000df78      837c240802     cmp dword [rsp + 8], 2
0x0000df7d      0f94c2         sete dl
0x0000df80      31c0           xor eax, eax
0x0000df82      e9e1fdffff     jmp 0xdd68
0x0000df87      660f1f840000.  nop word [rax + rax]
0x0000df90      ba07000000     mov edx, 7
0x0000df95      bb61000000     mov ebx, 0x61                           ; 'a'
0x0000df9a      e9d5feffff     jmp 0xde74
0x0000df9f      90             nop
0x0000dfa0      837c240802     cmp dword [rsp + 8], 2
0x0000dfa5      0f94c2         sete dl
0x0000dfa8      4885ed         test rbp, rbp
0x0000dfab      0f85abfdffff   jne 0xdd5c
0x0000dfb1      0fb644240f     movzx eax, byte [rsp + 0xf]
0x0000dfb6      20d0           and al, dl
0x0000dfb8      0f84aafdffff   je 0xdd68
0x0000dfbe      4c89dd         mov rbp, r11
0x0000dfc1      c74424080200.  mov dword [rsp + 8], 2
0x0000dfc9      e9fb060000     jmp 0xe6c9
0x0000dfce      6690           nop
0x0000dfd0      837c240802     cmp dword [rsp + 8], 2
0x0000dfd5      0f94c2         sete dl
0x0000dfd8      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x0000dfdb      ebd4           jmp 0xdfb1
0x0000dfdd      0f1f00         nop dword [rax]
0x0000dfe0      837c240802     cmp dword [rsp + 8], 2
0x0000dfe5      bb20000000     mov ebx, 0x20                           ; "@"
0x0000dfea      0f94c2         sete dl
0x0000dfed      ebc2           jmp 0xdfb1
0x0000dfef      90             nop
0x0000dff0      ba0d000000     mov edx, 0xd
0x0000dff5      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000dffa      e963feffff     jmp 0xde62
0x0000dfff      90             nop
0x0000e000      ba0c000000     mov edx, 0xc
0x0000e005      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000e00a      e965feffff     jmp 0xde74
0x0000e00f      90             nop
0x0000e010      ba0b000000     mov edx, 0xb
0x0000e015      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000e01a      e955feffff     jmp 0xde74
0x0000e01f      90             nop
0x0000e020      ba0a000000     mov edx, 0xa
0x0000e025      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x0000e02a      e933feffff     jmp 0xde62
0x0000e02f      90             nop
0x0000e030      4531d2         xor r10d, r10d
0x0000e033      0f1f440000     nop dword [rax + rax]
0x0000e038      48837c245801   cmp qword [rsp + 0x58], 1
0x0000e03e      0f85a4030000   jne 0xe3e8
0x0000e044      4c895c2438     mov qword [rsp + 0x38], r11
0x0000e049      4488442430     mov byte [rsp + 0x30], r8b
0x0000e04e      4488542428     mov byte [rsp + 0x28], r10b
0x0000e053      e86850ffff     call sym.imp.__ctype_b_loc
0x0000e058      488b08         mov rcx, qword [rax]
0x0000e05b      0fb6d3         movzx edx, bl
0x0000e05e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x0000e064      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x0000e06a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0000e06f      bf01000000     mov edi, 1
0x0000e074      0fb70451       movzx eax, word [rcx + rdx*2]
0x0000e078      66250040       and ax, 0x4000                          ; "([]A\A]\xc3\x0f\x1f\x84"
0x0000e07c      410f95c4       setne r12b
0x0000e080      0f94c0         sete al
0x0000e083      2244240d       and al, byte [rsp + 0xd]
0x0000e087      84c0           test al, al
0x0000e089      0f8592090000   jne 0xea21
0x0000e08f      837c240802     cmp dword [rsp + 8], 2
0x0000e094      0f94c2         sete dl
0x0000e097      e9ccfcffff     jmp 0xdd68
0x0000e09c      0f1f4000       nop dword [rax]
0x0000e0a0      410fb619       movzx ebx, byte [r9]
0x0000e0a4      80fb7e         cmp bl, 0x7e
0x0000e0a7      7787           ja 0xe030
0x0000e0a9      488d0df8a400.  lea rcx, [0x000185a8]
0x0000e0b0      0fb6d3         movzx edx, bl
0x0000e0b3      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000e0b7      4801c8         add rax, rcx
0x0000e0ba      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x0000e0bc      0f1f4000       nop dword [rax]
0x0000e0c0      4531d2         xor r10d, r10d
0x0000e0c3      807c240d00     cmp byte [rsp + 0xd], 0
0x0000e0c8      0f85f0fdffff   jne 0xdebe
0x0000e0ce      6690           nop
0x0000e0d0      ba5c000000     mov edx, 0x5c                           ; '\'
0x0000e0d5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000e0da      e995fdffff     jmp 0xde74
0x0000e0df      90             nop
0x0000e0e0      ba0c000000     mov edx, 0xc
0x0000e0e5      4531d2         xor r10d, r10d
0x0000e0e8      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000e0ed      e982fdffff     jmp 0xde74
0x0000e0f2      660f1f440000   nop word [rax + rax]
0x0000e0f8      ba0a000000     mov edx, 0xa
0x0000e0fd      4531d2         xor r10d, r10d
0x0000e100      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x0000e105      e958fdffff     jmp 0xde62
0x0000e10a      660f1f440000   nop word [rax + rax]
0x0000e110      bb61000000     mov ebx, 0x61                           ; 'a'
0x0000e115      e9c6fdffff     jmp 0xdee0
0x0000e11a      660f1f440000   nop word [rax + rax]
0x0000e120      4531d2         xor r10d, r10d
0x0000e123      837c240802     cmp dword [rsp + 8], 2
0x0000e128      0f94c2         sete dl
0x0000e12b      807c240f00     cmp byte [rsp + 0xf], 0
0x0000e130      0f85940b0000   jne 0xecca
0x0000e136      4489c0         mov eax, r8d
0x0000e139      4c89f9         mov rcx, r15
0x0000e13c      83f001         xor eax, 1
0x0000e13f      20d0           and al, dl
0x0000e141      742d           je 0xe170
0x0000e143      4d39fd         cmp r13, r15
0x0000e146      7605           jbe 0xe14d
0x0000e148      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000e14d      498d4f01       lea rcx, [r15 + 1]
0x0000e151      4939cd         cmp r13, rcx
0x0000e154      7606           jbe 0xe15c
0x0000e156      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000e15c      498d4f02       lea rcx, [r15 + 2]
0x0000e160      4939cd         cmp r13, rcx
0x0000e163      0f8730060000   ja 0xe799
0x0000e169      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x0000e16d      4189c0         mov r8d, eax
0x0000e170      4939cd         cmp r13, rcx
0x0000e173      7605           jbe 0xe17a
0x0000e175      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000e17a      837c240802     cmp dword [rsp + 8], 2
0x0000e17f      4c8d7901       lea r15, [rcx + 1]
0x0000e183      0f8400060000   je 0xe789
0x0000e189      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000e18d      4c39d8         cmp rax, r11
0x0000e190      7319           jae 0xe1ab                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x0000e192      488b442410     mov rax, qword [rsp + 0x10]
0x0000e197      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x0000e19c      88442428       mov byte [rsp + 0x28], al
0x0000e1a0      83e830         sub eax, 0x30
0x0000e1a3      3c09           cmp al, 9
0x0000e1a5      0f862e080000   jbe 0xe9d9
0x0000e1ab      4489e0         mov eax, r12d
0x0000e1ae      bb30000000     mov ebx, 0x30                           ; '0'
0x0000e1b3      4531e4         xor r12d, r12d
0x0000e1b6      e9adfbffff     jmp 0xdd68                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x0000e1bb      0f1f440000     nop dword [rax + rax]
0x0000e1c0      837c240802     cmp dword [rsp + 8], 2
0x0000e1c5      4589d4         mov r12d, r10d
0x0000e1c8      0f94c2         sete dl
0x0000e1cb      4531d2         xor r10d, r10d
0x0000e1ce      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x0000e1d0      e993fbffff     jmp 0xdd68                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x0000e1d5      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x0000e1d8      837c240802     cmp dword [rsp + 8], 2
0x0000e1dd      0f94c2         sete dl
0x0000e1e0      4531d2         xor r10d, r10d
0x0000e1e3      e9c0fdffff     jmp 0xdfa8
0x0000e1e8      0f1f84000000.  nop dword [rax + rax]
0x0000e1f0      837c240802     cmp dword [rsp + 8], 2
0x0000e1f5      0f94c2         sete dl
0x0000e1f8      4531d2         xor r10d, r10d
0x0000e1fb      4531e4         xor r12d, r12d
0x0000e1fe      e9aefdffff     jmp 0xdfb1
0x0000e203      0f1f440000     nop dword [rax + rax]
0x0000e208      837c240802     cmp dword [rsp + 8], 2
0x0000e20d      4589d4         mov r12d, r10d
0x0000e210      bb20000000     mov ebx, 0x20                           ; "@"
0x0000e215      0f94c2         sete dl
0x0000e218      4531d2         xor r10d, r10d
0x0000e21b      e991fdffff     jmp 0xdfb1
0x0000e220      ba0d000000     mov edx, 0xd
0x0000e225      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x0000e228      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000e22d      e930fcffff     jmp 0xde62
0x0000e232      660f1f440000   nop word [rax + rax]
0x0000e238      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000e23d      e99efcffff     jmp 0xdee0
0x0000e242      660f1f440000   nop word [rax + rax]
0x0000e248      ba09000000     mov edx, 9
0x0000e24d      4531d2         xor r10d, r10d
0x0000e250      bb74000000     mov ebx, 0x74                           ; 't'
0x0000e255      e908fcffff     jmp 0xde62
0x0000e25a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x0000e260      bb62000000     mov ebx, 0x62                           ; 'b'
0x0000e265      e976fcffff     jmp 0xdee0
0x0000e26a      660f1f440000   nop word [rax + rax]
0x0000e270      4531d2         xor r10d, r10d
0x0000e273      e998faffff     jmp 0xdd10
0x0000e278      0f1f84000000.  nop dword [rax + rax]
0x0000e280      807c240f00     cmp byte [rsp + 0xf], 0
0x0000e285      0f8565090000   jne 0xebf0
0x0000e28b      4883c501       add rbp, 1
0x0000e28f      4489c0         mov eax, r8d
0x0000e292      4531e4         xor r12d, r12d
0x0000e295      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000e29a      e90dfbffff     jmp 0xddac
0x0000e29f      90             nop
0x0000e2a0      837c240802     cmp dword [rsp + 8], 2
0x0000e2a5      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000e2aa      4589c4         mov r12d, r8d
0x0000e2ad      4c89dd         mov rbp, r11
0x0000e2b0      0f94c2         sete dl
0x0000e2b3      89d8           mov eax, ebx
0x0000e2b5      4d85ff         test r15, r15
0x0000e2b8      0f94c1         sete cl
0x0000e2bb      21d0           and eax, edx
0x0000e2bd      20c8           and al, cl
0x0000e2bf      0f85610a0000   jne 0xed26                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x0000e2c5      89d8           mov eax, ebx
0x0000e2c7      83f001         xor eax, 1
0x0000e2ca      20c2           and dl, al
0x0000e2cc      0f846a090000   je 0xec3c
0x0000e2d2      807c247c00     cmp byte [rsp + 0x7c], 0
0x0000e2d7      0f845d090000   je 0xec3a
0x0000e2dd      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x0000e2e2      0f85f5090000   jne 0xecdd
0x0000e2e8      4d85ed         test r13, r13
0x0000e2eb      0f94c0         sete al
0x0000e2ee      48837c245000   cmp qword [rsp + 0x50], 0
0x0000e2f4      0f95c2         setne dl
0x0000e2f7      20d0           and al, dl
0x0000e2f9      0f841d0a0000   je 0xed1c
0x0000e2ff      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000e304      488d1d1aa000.  lea rbx, [0x00018325]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000e30b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x0000e30f      c74424080200.  mov dword [rsp + 8], 2
0x0000e317      41bf01000000   mov r15d, 1
0x0000e31d      48c744241801.  mov qword [rsp + 0x18], 1
0x0000e326      c644240f00     mov byte [rsp + 0xf], 0
0x0000e32b      48895c2448     mov qword [rsp + 0x48], rbx
0x0000e330      8844247c       mov byte [rsp + 0x7c], al
0x0000e334      e9daf8ffff     jmp 0xdc13
0x0000e339      0f1f80000000.  nop dword [rax]
0x0000e340      807c240f00     cmp byte [rsp + 0xf], 0
0x0000e345      0f85a5080000   jne 0xebf0
0x0000e34b      4d85ed         test r13, r13
0x0000e34e      0f84fc030000   je 0xe750                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x0000e354      31d2           xor edx, edx
0x0000e356      48837c245000   cmp qword [rsp + 0x50], 0
0x0000e35c      0f85ee030000   jne 0xe750                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000e362      4c896c2450     mov qword [rsp + 0x50], r13
0x0000e367      4983c703       add r15, 3
0x0000e36b      31c0           xor eax, eax
0x0000e36d      448864247c     mov byte [rsp + 0x7c], r12b
0x0000e372      4531c0         xor r8d, r8d
0x0000e375      4989d5         mov r13, rdx
0x0000e378      bb27000000     mov ebx, 0x27                           ; '''
0x0000e37d      e917faffff     jmp 0xdd99
0x0000e382      660f1f440000   nop word [rax + rax]
0x0000e388      f644247804     test byte [rsp + 0x78], 4
0x0000e38d      7421           je 0xe3b0
0x0000e38f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x0000e393      4c39d9         cmp rcx, r11
0x0000e396      7318           jae 0xe3b0
0x0000e398      488b442410     mov rax, qword [rsp + 0x10]
0x0000e39d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x0000e3a2      0f848a070000   je 0xeb32
0x0000e3a8      0f1f84000000.  nop dword [rax + rax]
0x0000e3b0      31d2           xor edx, edx
0x0000e3b2      4531e4         xor r12d, r12d
0x0000e3b5      31c0           xor eax, eax
0x0000e3b7      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000e3bc      e9a7f9ffff     jmp 0xdd68
0x0000e3c1      0f1f80000000.  nop dword [rax]
0x0000e3c8      807c240f00     cmp byte [rsp + 0xf], 0
0x0000e3cd      0f851d080000   jne 0xebf0
0x0000e3d3      4531e4         xor r12d, r12d
0x0000e3d6      31c0           xor eax, eax
0x0000e3d8      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000e3dd      e9b7f9ffff     jmp 0xdd99                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x0000e3e2      660f1f440000   nop word [rax + rax]
0x0000e3e8      488d8424a000.  lea rax, [rsp + 0xa0]
0x0000e3f0      4983fbff       cmp r11, 0xffffffffffffffff
0x0000e3f4      48c78424a000.  mov qword [rsp + 0xa0], 0
0x0000e400      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x0000e405      752d           jne 0xe434
0x0000e407      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000e40c      4488442440     mov byte [rsp + 0x40], r8b
0x0000e411      4488542438     mov byte [rsp + 0x38], r10b
0x0000e416      4c894c2430     mov qword [rsp + 0x30], r9
0x0000e41b      e8d046ffff     call sym.imp.strlen
0x0000e420      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x0000e426      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x0000e42c      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x0000e42f      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x0000e434      488d84249c00.  lea rax, [rsp + 0x9c]
0x0000e43c      31c9           xor ecx, ecx
0x0000e43e      885c247e       mov byte [rsp + 0x7e], bl
0x0000e442      448844247d     mov byte [rsp + 0x7d], r8b
0x0000e447      4889cb         mov rbx, rcx
0x0000e44a      4c898c248800.  mov qword [rsp + 0x88], r9
0x0000e452      4889442438     mov qword [rsp + 0x38], rax
0x0000e457      448854247f     mov byte [rsp + 0x7f], r10b
0x0000e45c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x0000e464      4c89742440     mov qword [rsp + 0x40], r14
0x0000e469      4c896c2470     mov qword [rsp + 0x70], r13
0x0000e46e      4c895c2430     mov qword [rsp + 0x30], r11
0x0000e473      488b442410     mov rax, qword [rsp + 0x10]
0x0000e478      4c8d741d00     lea r14, [rbp + rbx]
0x0000e47d      488b542430     mov rdx, qword [rsp + 0x30]
0x0000e482      488b4c2428     mov rcx, qword [rsp + 0x28]
0x0000e487      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000e48c      4e8d2c30       lea r13, [rax + r14]
0x0000e490      4c29f2         sub rdx, r14
0x0000e493      4c89ee         mov rsi, r13
0x0000e496      e895430000     call sym.rpl_mbrtowc
0x0000e49b      4885c0         test rax, rax
0x0000e49e      4989c7         mov r15, rax
0x0000e4a1      744e           je 0xe4f1
0x0000e4a3      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000e4a7      0f8418060000   je 0xeac5
0x0000e4ad      4883f8fe       cmp rax, 0xfffffffffffffffe
0x0000e4b1      0f849a050000   je 0xea51
0x0000e4b7      837c240802     cmp dword [rsp + 8], 2
0x0000e4bc      0f94c0         sete al
0x0000e4bf      2244240f       and al, byte [rsp + 0xf]
0x0000e4c3      0f8597010000   jne 0xe660
0x0000e4c9      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x0000e4d0      e8bb4bffff     call sym.imp.iswprint
0x0000e4d5      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000e4da      85c0           test eax, eax
0x0000e4dc      b800000000     mov eax, 0
0x0000e4e1      440f44e0       cmove r12d, eax
0x0000e4e5      4c01fb         add rbx, r15
0x0000e4e8      e8734bffff     call sym.imp.mbsinit
0x0000e4ed      85c0           test eax, eax
0x0000e4ef      7482           je 0xe473
0x0000e4f1      4489e2         mov edx, r12d
0x0000e4f4      4889df         mov rdi, rbx
0x0000e4f7      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000e4fd      83f201         xor edx, 1
0x0000e500      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000e505      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000e50b      2254240d       and dl, byte [rsp + 0xd]
0x0000e50f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x0000e517      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000e51c      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000e521      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x0000e526      4883ff01       cmp rdi, 1
0x0000e52a      0f86fb050000   jbe 0xeb2b
0x0000e530      4889f9         mov rcx, rdi
0x0000e533      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x0000e535      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x0000e53b      4801e9         add rcx, rbp
0x0000e53e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000e543      e9b6000000     jmp 0xe5fe
0x0000e548      0f1f84000000.  nop dword [rax + rax]
0x0000e550      837c240802     cmp dword [rsp + 8], 2
0x0000e555      0f94c0         sete al
0x0000e558      4584c9         test r9b, r9b
0x0000e55b      0f85af040000   jne 0xea10
0x0000e561      4489c6         mov esi, r8d
0x0000e564      83f601         xor esi, 1
0x0000e567      4020f0         and al, sil
0x0000e56a      742f           je 0xe59b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x0000e56c      4d39fd         cmp r13, r15
0x0000e56f      7605           jbe 0xe576
0x0000e571      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000e576      498d7701       lea rsi, [r15 + 1]
0x0000e57a      4939f5         cmp r13, rsi
0x0000e57d      7606           jbe 0xe585                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x0000e57f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000e585      498d7702       lea rsi, [r15 + 2]
0x0000e589      4939f5         cmp r13, rsi
0x0000e58c      7606           jbe 0xe594
0x0000e58e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000e594      4983c703       add r15, 3
0x0000e598      4189c0         mov r8d, eax
0x0000e59b      4d39fd         cmp r13, r15
0x0000e59e      7605           jbe 0xe5a5
0x0000e5a0      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000e5a5      498d4701       lea rax, [r15 + 1]
0x0000e5a9      4939c5         cmp r13, rax
0x0000e5ac      760d           jbe 0xe5bb
0x0000e5ae      89d8           mov eax, ebx
0x0000e5b0      c0e806         shr al, 6
0x0000e5b3      83c030         add eax, 0x30
0x0000e5b6      4388443e01     mov byte [r14 + r15 + 1], al
0x0000e5bb      498d4702       lea rax, [r15 + 2]
0x0000e5bf      4939c5         cmp r13, rax
0x0000e5c2      7610           jbe 0xe5d4
0x0000e5c4      89d8           mov eax, ebx
0x0000e5c6      c0e803         shr al, 3
0x0000e5c9      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x0000e5cc      83c030         add eax, 0x30
0x0000e5cf      4388443e02     mov byte [r14 + r15 + 2], al
0x0000e5d4      83e307         and ebx, 7
0x0000e5d7      4883c501       add rbp, 1
0x0000e5db      4983c703       add r15, 3
0x0000e5df      83c330         add ebx, 0x30
0x0000e5e2      4839cd         cmp rbp, rcx
0x0000e5e5      0f83e5f7ffff   jae 0xddd0
0x0000e5eb      89d6           mov esi, edx
0x0000e5ed      4d39fd         cmp r13, r15
0x0000e5f0      7604           jbe 0xe5f6
0x0000e5f2      43881c3e       mov byte [r14 + r15], bl
0x0000e5f6      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000e5fa      4983c701       add r15, 1
0x0000e5fe      84d2           test dl, dl
0x0000e600      0f854affffff   jne 0xe550
0x0000e606      89f0           mov eax, esi
0x0000e608      83f001         xor eax, 1
0x0000e60b      4421c0         and eax, r8d
0x0000e60e      4584d2         test r10b, r10b
0x0000e611      740e           je 0xe621
0x0000e613      4d39fd         cmp r13, r15
0x0000e616      7605           jbe 0xe61d
0x0000e618      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000e61d      4983c701       add r15, 1
0x0000e621      4883c501       add rbp, 1
0x0000e625      4839cd         cmp rbp, rcx
0x0000e628      0f837ef7ffff   jae 0xddac
0x0000e62e      84c0           test al, al
0x0000e630      0f84f8030000   je 0xea2e
0x0000e636      4d39fd         cmp r13, r15
0x0000e639      7605           jbe 0xe640
0x0000e63b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000e640      498d4701       lea rax, [r15 + 1]
0x0000e644      4939c5         cmp r13, rax
0x0000e647      7606           jbe 0xe64f
0x0000e649      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000e64f      4983c702       add r15, 2
0x0000e653      4531d2         xor r10d, r10d
0x0000e656      4531c0         xor r8d, r8d
0x0000e659      eb92           jmp 0xe5ed
0x0000e65b      0f1f440000     nop dword [rax + rax]
0x0000e660      4983ff01       cmp r15, 1
0x0000e664      0f845ffeffff   je 0xe4c9
0x0000e66a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000e66f      4a8d0c3f       lea rcx, [rdi + r15]
0x0000e673      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x0000e678      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000e67c      eb0f           jmp 0xe68d
0x0000e67e      6690           nop
0x0000e680      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x0000e684      4939d0         cmp r8, rdx
0x0000e687      0f843cfeffff   je 0xe4c9
0x0000e68d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x0000e690      83e95b         sub ecx, 0x5b
0x0000e693      80f921         cmp cl, 0x21
0x0000e696      77e8           ja 0xe680                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x0000e698      be01000000     mov esi, 1
0x0000e69d      48d3e6         shl rsi, cl
0x0000e6a0      4889f1         mov rcx, rsi
0x0000e6a3      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x0000e6ad      4885f1         test rcx, rsi
0x0000e6b0      74ce           je 0xe680
0x0000e6b2      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000e6b7      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000e6bc      488b6c2430     mov rbp, qword [rsp + 0x30]
0x0000e6c1      c74424080200.  mov dword [rsp + 8], 2
0x0000e6c9      807c240d00     cmp byte [rsp + 0xd], 0
0x0000e6ce      7410           je 0xe6e0
0x0000e6d0      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x0000e6d2      b804000000     mov eax, 4
0x0000e6d7      0f44442408     cmove eax, dword [rsp + 8]
0x0000e6dc      89442408       mov dword [rsp + 8], eax
0x0000e6e0      4883ec08       sub rsp, 8
0x0000e6e4      4889e9         mov rcx, rbp
0x0000e6e7      4c89ee         mov rsi, r13
0x0000e6ea      ff742468       push qword [rsp + 0x68]
0x0000e6ee      ff742478       push qword [rsp + 0x78]
0x0000e6f2      4c89f7         mov rdi, r14
0x0000e6f5      6a00           push 0
0x0000e6f7      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x0000e6ff      448b442428     mov r8d, dword [rsp + 0x28]
0x0000e704      488b542430     mov rdx, qword [rsp + 0x30]
0x0000e709      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x0000e70d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x0000e712      4883c420       add rsp, 0x20
0x0000e716      4989c7         mov r15, rax
0x0000e719      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x0000e721      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000e72a      4c89f8         mov rax, r15
0x0000e72d      0f8500060000   jne 0xed33
0x0000e733      4881c4b80000.  add rsp, 0xb8
0x0000e73a      5b             pop rbx
0x0000e73b      5d             pop rbp
0x0000e73c      415c           pop r12
0x0000e73e      415d           pop r13
0x0000e740      415e           pop r14
0x0000e742      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x0000e744      c3             ret
0x0000e745      0f1f00         nop dword [rax]
0x0000e748      4c89dd         mov rbp, r11
0x0000e74b      e979ffffff     jmp 0xe6c9
0x0000e750      4d39fd         cmp r13, r15
0x0000e753      7605           jbe 0xe75a
0x0000e755      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000e75a      498d4701       lea rax, [r15 + 1]
0x0000e75e      4939c5         cmp r13, rax
0x0000e761      7606           jbe 0xe769
0x0000e763      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x0000e769      498d4702       lea rax, [r15 + 2]
0x0000e76d      4939c5         cmp r13, rax
0x0000e770      0f86ec050000   jbe 0xed62
0x0000e776      4c89ea         mov rdx, r13
0x0000e779      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000e77f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000e784      e9d9fbffff     jmp 0xe362
0x0000e789      4489e0         mov eax, r12d
0x0000e78c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x0000e791      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x0000e794      e900f6ffff     jmp 0xdd99                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x0000e799      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000e79f      e9c5f9ffff     jmp 0xe169
0x0000e7a4      85db           test ebx, ebx
0x0000e7a6      0f8527f4ffff   jne 0xdbd3
0x0000e7ac      c644240d01     mov byte [rsp + 0xd], 1
0x0000e7b1      4d85ed         test r13, r13
0x0000e7b4      0f8590050000   jne 0xed4a
0x0000e7ba      488d05649b00.  lea rax, [0x00018325]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000e7c1      48c744245000.  mov qword [rsp + 0x50], 0
0x0000e7ca      c644240e01     mov byte [rsp + 0xe], 1
0x0000e7cf      c644247c00     mov byte [rsp + 0x7c], 0
0x0000e7d4      4531e4         xor r12d, r12d
0x0000e7d7      c644240f00     mov byte [rsp + 0xf], 0
0x0000e7dc      48c744241801.  mov qword [rsp + 0x18], 1
0x0000e7e5      4889442448     mov qword [rsp + 0x48], rax
0x0000e7ea      41bf01000000   mov r15d, 1
0x0000e7f0      c74424080200.  mov dword [rsp + 8], 2
0x0000e7f8      e916f4ffff     jmp 0xdc13                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x0000e7fd      0f1f00         nop dword [rax]
0x0000e800      85db           test ebx, ebx
0x0000e802      0f85f5030000   jne 0xebfd
0x0000e808      4d85ed         test r13, r13
0x0000e80b      0f8425020000   je 0xea36
0x0000e811      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x0000e815      c644240e01     mov byte [rsp + 0xe], 1
0x0000e81a      4531e4         xor r12d, r12d
0x0000e81d      c644247c00     mov byte [rsp + 0x7c], 0
0x0000e822      48c744245000.  mov qword [rsp + 0x50], 0
0x0000e82b      488d05f19a00.  lea rax, str.l______l                   ; 0x18323 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000e832      c644240f00     mov byte [rsp + 0xf], 0
0x0000e837      c644240d01     mov byte [rsp + 0xd], 1
0x0000e83c      48c744241801.  mov qword [rsp + 0x18], 1
0x0000e845      41bf01000000   mov r15d, 1
0x0000e84b      4889442448     mov qword [rsp + 0x48], rax
0x0000e850      e9bef3ffff     jmp 0xdc13
0x0000e855      488d05c79a00.  lea rax, str.l______l                   ; 0x18323 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000e85c      c644240e01     mov byte [rsp + 0xe], 1
0x0000e861      c644247c00     mov byte [rsp + 0x7c], 0
0x0000e866      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x0000e869      48c744245000.  mov qword [rsp + 0x50], 0
0x0000e872      c644240f01     mov byte [rsp + 0xf], 1
0x0000e877      c644240d01     mov byte [rsp + 0xd], 1
0x0000e87c      48c744241801.  mov qword [rsp + 0x18], 1
0x0000e885      4531ff         xor r15d, r15d
0x0000e888      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x0000e88d      c74424080500.  mov dword [rsp + 8], 5
0x0000e895      e979f3ffff     jmp 0xdc13
0x0000e89a      c644240e01     mov byte [rsp + 0xe], 1
0x0000e89f      c644247c00     mov byte [rsp + 0x7c], 0
0x0000e8a4      4531e4         xor r12d, r12d
0x0000e8a7      48c744245000.  mov qword [rsp + 0x50], 0
0x0000e8b0      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x0000e8b5      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x0000e8b8      c644240d01     mov byte [rsp + 0xd], 1
0x0000e8bd      48c744241800.  mov qword [rsp + 0x18], 0
0x0000e8c6      48c744244800.  mov qword [rsp + 0x48], 0
0x0000e8cf      e93ff3ffff     jmp 0xdc13
0x0000e8d4      837c24080a     cmp dword [rsp + 8], 0xa
0x0000e8d9      7456           je 0xe931
0x0000e8db      488d35459a00.  lea rsi, [0x00018327]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x0000e8e2      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x0000e8e4      ba05000000     mov edx, 5
0x0000e8e9      e8e241ffff     call sym.imp.dcgettext
0x0000e8ee      4889c1         mov rcx, rax
0x0000e8f1      4889442468     mov qword [rsp + 0x68], rax
0x0000e8f6      488d052a9a00.  lea rax, [0x00018327]                   ; "`"
0x0000e8fd      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x0000e900      0f8498030000   je 0xec9e
0x0000e906      488d35189a00.  lea rsi, [0x00018325]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000e90d      31ff           xor edi, edi
0x0000e90f      ba05000000     mov edx, 5
0x0000e914      e8b741ffff     call sym.imp.dcgettext
0x0000e919      4889c1         mov rcx, rax
0x0000e91c      4889442460     mov qword [rsp + 0x60], rax
0x0000e921      488d05fd9900.  lea rax, [0x00018325]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000e928      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x0000e92b      0f8483030000   je 0xecb4
0x0000e931      4531ff         xor r15d, r15d
0x0000e934      85db           test ebx, ebx
0x0000e936      0f84c1010000   je 0xeafd
0x0000e93c      85db           test ebx, ebx
0x0000e93e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x0000e943      0f9544240f     setne byte [rsp + 0xf]
0x0000e948      4531e4         xor r12d, r12d
0x0000e94b      4889df         mov rdi, rbx
0x0000e94e      e89d41ffff     call sym.imp.strlen
0x0000e953      48895c2448     mov qword [rsp + 0x48], rbx
0x0000e958      4889442418     mov qword [rsp + 0x18], rax
0x0000e95d      c644240e01     mov byte [rsp + 0xe], 1
0x0000e962      c644247c00     mov byte [rsp + 0x7c], 0
0x0000e967      48c744245000.  mov qword [rsp + 0x50], 0
0x0000e970      c644240d01     mov byte [rsp + 0xd], 1
0x0000e975      e999f2ffff     jmp 0xdc13
0x0000e97a      c644240e01     mov byte [rsp + 0xe], 1
0x0000e97f      c644247c00     mov byte [rsp + 0x7c], 0
0x0000e984      4531e4         xor r12d, r12d
0x0000e987      48c744245000.  mov qword [rsp + 0x50], 0
0x0000e990      c644240f00     mov byte [rsp + 0xf], 0
0x0000e995      4531ff         xor r15d, r15d
0x0000e998      c644240d00     mov byte [rsp + 0xd], 0
0x0000e99d      48c744241800.  mov qword [rsp + 0x18], 0
0x0000e9a6      48c744244800.  mov qword [rsp + 0x48], 0
0x0000e9af      e95ff2ffff     jmp 0xdc13
0x0000e9b4      c644240e01     mov byte [rsp + 0xe], 1
0x0000e9b9      c644247c00     mov byte [rsp + 0x7c], 0
0x0000e9be      4531e4         xor r12d, r12d
0x0000e9c1      48c744245000.  mov qword [rsp + 0x50], 0
0x0000e9ca      c644240f01     mov byte [rsp + 0xf], 1
0x0000e9cf      c644240d01     mov byte [rsp + 0xd], 1
0x0000e9d4      e91af2ffff     jmp 0xdbf3
0x0000e9d9      4d39fd         cmp r13, r15
0x0000e9dc      7605           jbe 0xe9e3
0x0000e9de      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x0000e9e3      488d4102       lea rax, [rcx + 2]
0x0000e9e7      4939c5         cmp r13, rax
0x0000e9ea      7606           jbe 0xe9f2
0x0000e9ec      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x0000e9f2      4489e0         mov eax, r12d
0x0000e9f5      4c8d7903       lea r15, [rcx + 3]
0x0000e9f9      4531e4         xor r12d, r12d
0x0000e9fc      bb30000000     mov ebx, 0x30                           ; '0'
0x0000ea01      e962f3ffff     jmp 0xdd68
0x0000ea06      662e0f1f8400.  nop word cs:[rax + rax]
0x0000ea10      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000ea15      4c89dd         mov rbp, r11
0x0000ea18      885c240d       mov byte [rsp + 0xd], bl
0x0000ea1c      e9a8fcffff     jmp 0xe6c9
0x0000ea21      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000ea26      4531e4         xor r12d, r12d
0x0000ea29      e902fbffff     jmp 0xe530
0x0000ea2e      4531d2         xor r10d, r10d
0x0000ea31      e9b7fbffff     jmp 0xe5ed
0x0000ea36      48c744245000.  mov qword [rsp + 0x50], 0
0x0000ea3f      c644240e01     mov byte [rsp + 0xe], 1
0x0000ea44      4531e4         xor r12d, r12d
0x0000ea47      c644247c00     mov byte [rsp + 0x7c], 0
0x0000ea4c      e9dafdffff     jmp 0xe82b
0x0000ea51      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x0000ea56      4c89f6         mov rsi, r14
0x0000ea59      4c89e9         mov rcx, r13
0x0000ea5c      4889d8         mov rax, rbx
0x0000ea5f      4889df         mov rdi, rbx
0x0000ea62      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000ea68      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000ea6d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x0000ea75      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x0000ea78      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000ea7e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x0000ea86      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000ea8b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000ea90      7326           jae 0xeab8
0x0000ea92      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x0000ea95      7510           jne 0xeaa7
0x0000ea97      eb1f           jmp 0xeab8
0x0000ea99      0f1f80000000.  nop dword [rax]
0x0000eaa0      41803c0100     cmp byte [r9 + rax], 0
0x0000eaa5      740e           je 0xeab5
0x0000eaa7      4883c001       add rax, 1
0x0000eaab      488d540500     lea rdx, [rbp + rax]
0x0000eab0      4939d3         cmp r11, rdx
0x0000eab3      77eb           ja 0xeaa0
0x0000eab5      4889c7         mov rdi, rax
0x0000eab8      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000eabd      4531e4         xor r12d, r12d
0x0000eac0      e961faffff     jmp 0xe526
0x0000eac5      4889df         mov rdi, rbx
0x0000eac8      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000eace      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000ead3      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000ead9      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x0000eae1      4531e4         xor r12d, r12d
0x0000eae4      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000eae9      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000eaee      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x0000eaf3      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000eaf8      e929faffff     jmp 0xe526
0x0000eafd      488b542468     mov rdx, qword [rsp + 0x68]
0x0000eb02      0fb602         movzx eax, byte [rdx]
0x0000eb05      84c0           test al, al
0x0000eb07      0f842ffeffff   je 0xe93c
0x0000eb0d      0f1f00         nop dword [rax]
0x0000eb10      4d39fd         cmp r13, r15
0x0000eb13      7604           jbe 0xeb19
0x0000eb15      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x0000eb19      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x0000eb1d      420fb6043a     movzx eax, byte [rdx + r15]
0x0000eb22      84c0           test al, al
0x0000eb24      75ea           jne 0xeb10
0x0000eb26      e911feffff     jmp 0xe93c
0x0000eb2b      89d0           mov eax, edx
0x0000eb2d      e955f5ffff     jmp 0xe087
0x0000eb32      0fb61c08       movzx ebx, byte [rax + rcx]
0x0000eb36      80fb3e         cmp bl, 0x3e
0x0000eb39      0f8771f8ffff   ja 0xe3b0
0x0000eb3f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x0000eb49      480fa3d8       bt rax, rbx
0x0000eb4d      0f835df8ffff   jae 0xe3b0
0x0000eb53      807c240f00     cmp byte [rsp + 0xf], 0
0x0000eb58      0f85e4010000   jne 0xed42                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x0000eb5e      4d39fd         cmp r13, r15
0x0000eb61      7605           jbe 0xeb68
0x0000eb63      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x0000eb68      498d4701       lea rax, [r15 + 1]
0x0000eb6c      4939c5         cmp r13, rax
0x0000eb6f      7606           jbe 0xeb77
0x0000eb71      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x0000eb77      498d4702       lea rax, [r15 + 2]
0x0000eb7b      4939c5         cmp r13, rax
0x0000eb7e      7606           jbe 0xeb86
0x0000eb80      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x0000eb86      498d4703       lea rax, [r15 + 3]
0x0000eb8a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x0000eb8d      7606           jbe 0xeb95
0x0000eb8f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x0000eb95      4983c704       add r15, 4
0x0000eb99      31d2           xor edx, edx
0x0000eb9b      4531e4         xor r12d, r12d
0x0000eb9e      31c0           xor eax, eax
0x0000eba0      4889cd         mov rbp, rcx
0x0000eba3      e9c0f1ffff     jmp 0xdd68
0x0000eba8      85db           test ebx, ebx
0x0000ebaa      0f8488010000   je 0xed38
0x0000ebb0      488d056e9700.  lea rax, [0x00018325]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000ebb7      c644240e01     mov byte [rsp + 0xe], 1
0x0000ebbc      c644247c00     mov byte [rsp + 0x7c], 0
0x0000ebc1      4531e4         xor r12d, r12d
0x0000ebc4      48c744245000.  mov qword [rsp + 0x50], 0
0x0000ebcd      c644240f01     mov byte [rsp + 0xf], 1
0x0000ebd2      c644240d00     mov byte [rsp + 0xd], 0
0x0000ebd7      48c744241801.  mov qword [rsp + 0x18], 1
0x0000ebe0      4531ff         xor r15d, r15d
0x0000ebe3      4889442448     mov qword [rsp + 0x48], rax
0x0000ebe8      e926f0ffff     jmp 0xdc13
0x0000ebed      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x0000ebf0      4c89dd         mov rbp, r11
0x0000ebf3      0fb644240f     movzx eax, byte [rsp + 0xf]
0x0000ebf8      e9ccfaffff     jmp 0xe6c9
0x0000ebfd      488d051f9700.  lea rax, str.l______l                   ; 0x18323 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000ec04      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x0000ec09      c644247c00     mov byte [rsp + 0x7c], 0
0x0000ec0e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x0000ec11      48c744245000.  mov qword [rsp + 0x50], 0
0x0000ec1a      c644240f01     mov byte [rsp + 0xf], 1
0x0000ec1f      c644240d01     mov byte [rsp + 0xd], 1
0x0000ec24      48c744241801.  mov qword [rsp + 0x18], 1
0x0000ec2d      4531ff         xor r15d, r15d
0x0000ec30      4889442448     mov qword [rsp + 0x48], rax
0x0000ec35      e9d9efffff     jmp 0xdc13
0x0000ec3a      89d0           mov eax, edx
0x0000ec3c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x0000ec41      4885db         test rbx, rbx
0x0000ec44      742c           je 0xec72
0x0000ec46      84c0           test al, al
0x0000ec48      7428           je 0xec72
0x0000ec4a      0fb60b         movzx ecx, byte [rbx]
0x0000ec4d      4889d8         mov rax, rbx
0x0000ec50      84c9           test cl, cl
0x0000ec52      741e           je 0xec72
0x0000ec54      4c89fa         mov rdx, r15
0x0000ec57      4c29f8         sub rax, r15
0x0000ec5a      4939d5         cmp r13, rdx
0x0000ec5d      7604           jbe 0xec63
0x0000ec5f      41880c16       mov byte [r14 + rdx], cl
0x0000ec63      4883c201       add rdx, 1
0x0000ec67      0fb60c10       movzx ecx, byte [rax + rdx]
0x0000ec6b      84c9           test cl, cl
0x0000ec6d      75eb           jne 0xec5a
0x0000ec6f      4989d7         mov r15, rdx
0x0000ec72      4d39fd         cmp r13, r15
0x0000ec75      0f869efaffff   jbe 0xe719
0x0000ec7b      43c6043e00     mov byte [r14 + r15], 0
0x0000ec80      e994faffff     jmp 0xe719
0x0000ec85      837c240802     cmp dword [rsp + 8], 2
0x0000ec8a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000ec8f      4c89dd         mov rbp, r11
0x0000ec92      0f94c0         sete al
0x0000ec95      885c240d       mov byte [rsp + 0xd], bl
0x0000ec99      e92bfaffff     jmp 0xe6c9
0x0000ec9e      8b742408       mov esi, dword [rsp + 8]
0x0000eca2      4889cf         mov rdi, rcx
0x0000eca5      e8a6edffff     call sym.gettext_quote.part.1
0x0000ecaa      4889442468     mov qword [rsp + 0x68], rax
0x0000ecaf      e952fcffff     jmp 0xe906
0x0000ecb4      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x0000ecb8      4889cf         mov rdi, rcx
0x0000ecbb      e890edffff     call sym.gettext_quote.part.1
0x0000ecc0      4889442460     mov qword [rsp + 0x60], rax
0x0000ecc5      e967fcffff     jmp 0xe931
0x0000ecca      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000eccf      4c89dd         mov rbp, r11
0x0000ecd2      89d0           mov eax, edx
0x0000ecd4      885c240d       mov byte [rsp + 0xd], bl
0x0000ecd8      e9ecf9ffff     jmp 0xe6c9
0x0000ecdd      4883ec08       sub rsp, 8
0x0000ece1      41b805000000   mov r8d, 5
0x0000ece7      4c89d9         mov rcx, r11
0x0000ecea      ff742468       push qword [rsp + 0x68]
0x0000ecee      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x0000ecf2      4c89f7         mov rdi, r14
0x0000ecf5      ff742438       push qword [rsp + 0x38]
0x0000ecf9      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x0000ed01      488b542430     mov rdx, qword [rsp + 0x30]
0x0000ed06      488b742470     mov rsi, qword [rsp + 0x70]
0x0000ed0b      e830eeffff     call sym.quotearg_buffer_restyled
0x0000ed10      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x0000ed14      4989c7         mov r15, rax
0x0000ed17      e9fdf9ffff     jmp 0xe719
0x0000ed1c      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x0000ed21      e916ffffff     jmp 0xec3c
0x0000ed26      c74424080200.  mov dword [rsp + 8], 2
0x0000ed2e      e996f9ffff     jmp 0xe6c9
0x0000ed33      e8f83dffff     call sym.imp.__stack_chk_fail
0x0000ed38      c644240d00     mov byte [rsp + 0xd], 0
0x0000ed3d      e96ffaffff     jmp 0xe7b1
0x0000ed42      4c89dd         mov rbp, r11
0x0000ed45      e996f9ffff     jmp 0xe6e0
0x0000ed4a      c644240e01     mov byte [rsp + 0xe], 1
0x0000ed4f      31c0           xor eax, eax
0x0000ed51      4531e4         xor r12d, r12d
0x0000ed54      48c744245000.  mov qword [rsp + 0x50], 0
0x0000ed5d      e9a2f5ffff     jmp 0xe304
0x0000ed62      4c89ea         mov rdx, r13
0x0000ed65      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000ed6a      e9f3f5ffff     jmp 0xe362
0x0000ed6f      e8cc3bffff     call sym.imp.abort
0x0000ed74      6690           nop
0x0000ed76      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x0000ed80      4157           push r15
0x0000ed82      4156           push r14
0x0000ed84      4c63ff         movsxd r15, edi
0x0000ed87      4155           push r13
0x0000ed89      4154           push r12
0x0000ed8b      4989d6         mov r14, rdx
0x0000ed8e      55             push rbp
0x0000ed8f      53             push rbx
0x0000ed90      4889cd         mov rbp, rcx
0x0000ed93      4883ec28       sub rsp, 0x28
0x0000ed97      4889742408     mov qword [rsp + 8], rsi
0x0000ed9c      e8af3bffff     call sym.imp.__errno_location
0x0000eda1      4989c5         mov r13, rax
0x0000eda4      8b00           mov eax, dword [rax]
0x0000eda6      4585ff         test r15d, r15d
0x0000eda9      488b1df0e220.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x21d0a0:8]=0x21d0b0 obj.slotvec0
0x0000edb0      89442418       mov dword [rsp + 0x18], eax
0x0000edb4      0f8867010000   js 0xef21
0x0000edba      44393dd7e220.  cmp dword [obj.nslots], r15d            ; [0x21d098:4]=1
0x0000edc1      7f62           jg 0xee25
0x0000edc3      4181ffffffff.  cmp r15d, 0x7fffffff
0x0000edca      0f8456010000   je 0xef26
0x0000edd0      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x0000edd4      488d05d5e220.  lea rax, obj.slotvec0                   ; 0x21d0b0
0x0000eddb      4963f4         movsxd rsi, r12d
0x0000edde      48c1e604       shl rsi, 4
0x0000ede2      4839c3         cmp rbx, rax
0x0000ede5      0f8415010000   je 0xef00
0x0000edeb      4889df         mov rdi, rbx
0x0000edee      e87d320000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x0000edf3      4889c3         mov rbx, rax
0x0000edf6      488905a3e220.  mov qword [obj.slotvec], rax            ; [0x21d0a0:8]=0x21d0b0 obj.slotvec0
0x0000edfd      48633d94e220.  movsxd rdi, dword [obj.nslots]          ; [0x21d098:4]=1
0x0000ee04      4489e2         mov edx, r12d
0x0000ee07      31f6           xor esi, esi
0x0000ee09      29fa           sub edx, edi
0x0000ee0b      48c1e704       shl rdi, 4
0x0000ee0f      4863d2         movsxd rdx, edx
0x0000ee12      4801df         add rdi, rbx
0x0000ee15      48c1e204       shl rdx, 4
0x0000ee19      e8d23dffff     call sym.imp.memset
0x0000ee1e      44892573e220.  mov dword [obj.nslots], r12d            ; [0x21d098:4]=1
0x0000ee25      8b4504         mov eax, dword [rbp + 4]
0x0000ee28      49c1e704       shl r15, 4
0x0000ee2c      4883ec08       sub rsp, 8
0x0000ee30      4c01fb         add rbx, r15
0x0000ee33      4c8d7d08       lea r15, [rbp + 8]
0x0000ee37      448b4500       mov r8d, dword [rbp]
0x0000ee3b      4c8b1b         mov r11, qword [rbx]
0x0000ee3e      4c8b6308       mov r12, qword [rbx + 8]
0x0000ee42      4c89f1         mov rcx, r14
0x0000ee45      83c801         or eax, 1
0x0000ee48      89442424       mov dword [rsp + 0x24], eax
0x0000ee4c      ff7530         push qword [rbp + 0x30]
0x0000ee4f      4189c1         mov r9d, eax
0x0000ee52      ff7528         push qword [rbp + 0x28]
0x0000ee55      4157           push r15
0x0000ee57      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x0000ee5a      488b542428     mov rdx, qword [rsp + 0x28]
0x0000ee5f      4c89e7         mov rdi, r12
0x0000ee62      4c895c2430     mov qword [rsp + 0x30], r11
0x0000ee67      e8d4ecffff     call sym.quotearg_buffer_restyled
0x0000ee6c      4883c420       add rsp, 0x20
0x0000ee70      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x0000ee75      4939c3         cmp r11, rax
0x0000ee78      7767           ja 0xeee1
0x0000ee7a      488d7001       lea rsi, [rax + 1]
0x0000ee7e      488d055b0721.  lea rax, obj.slot0                      ; 0x21f5e0
0x0000ee85      4939c4         cmp r12, rax
0x0000ee88      488933         mov qword [rbx], rsi
0x0000ee8b      7412           je 0xee9f
0x0000ee8d      4c89e7         mov rdi, r12
0x0000ee90      4889742410     mov qword [rsp + 0x10], rsi
0x0000ee95      e83642ffff     call sym..plt.got
0x0000ee9a      488b742410     mov rsi, qword [rsp + 0x10]
0x0000ee9f      4889f7         mov rdi, rsi
0x0000eea2      4889742410     mov qword [rsp + 0x10], rsi
0x0000eea7      e864310000     call sym.xmalloc
0x0000eeac      4883ec08       sub rsp, 8
0x0000eeb0      48894308       mov qword [rbx + 8], rax
0x0000eeb4      448b4500       mov r8d, dword [rbp]
0x0000eeb8      ff7530         push qword [rbp + 0x30]
0x0000eebb      ff7528         push qword [rbp + 0x28]
0x0000eebe      4c89f1         mov rcx, r14
0x0000eec1      4157           push r15
0x0000eec3      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x0000eec8      4889c7         mov rdi, rax
0x0000eecb      488b542428     mov rdx, qword [rsp + 0x28]
0x0000eed0      488b742430     mov rsi, qword [rsp + 0x30]
0x0000eed5      4989c4         mov r12, rax
0x0000eed8      e863ecffff     call sym.quotearg_buffer_restyled
0x0000eedd      4883c420       add rsp, 0x20
0x0000eee1      8b442418       mov eax, dword [rsp + 0x18]
0x0000eee5      41894500       mov dword [r13], eax
0x0000eee9      4883c428       add rsp, 0x28
0x0000eeed      4c89e0         mov rax, r12
0x0000eef0      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x0000eef1      5d             pop rbp
0x0000eef2      415c           pop r12
0x0000eef4      415d           pop r13
0x0000eef6      415e           pop r14
0x0000eef8      415f           pop r15
0x0000eefa      c3             ret
0x0000eefb      0f1f440000     nop dword [rax + rax]
0x0000ef00      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x0000ef02      e869310000     call sym.xrealloc
0x0000ef07      660f6f05a1e1.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x0000ef0f      4889c3         mov rbx, rax
0x0000ef12      48890587e120.  mov qword [obj.slotvec], rax            ; [0x21d0a0:8]=0x21d0b0 obj.slotvec0
0x0000ef19      0f1100         movups xmmword [rax], xmm0
0x0000ef1c      e9dcfeffff     jmp 0xedfd
0x0000ef21      e81a3affff     call sym.imp.abort
0x0000ef26      e835330000     call sym.xalloc_die
0x0000ef2b      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x0000ef30      4154           push r12
0x0000ef32      55             push rbp
0x0000ef33      53             push rbx
0x0000ef34      4889fb         mov rbx, rdi
0x0000ef37      e8143affff     call sym.imp.__errno_location
0x0000ef3c      448b20         mov r12d, dword [rax]
0x0000ef3f      4889c5         mov rbp, rax
0x0000ef42      488d05970721.  lea rax, obj.default_quoting_options    ; 0x21f6e0
0x0000ef49      4885db         test rbx, rbx
0x0000ef4c      be38000000     mov esi, 0x38                           ; '8'
0x0000ef51      480f44d8       cmove rbx, rax
0x0000ef55      4889df         mov rdi, rbx
0x0000ef58      e8b3320000     call sym.xmemdup
0x0000ef5d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x0000ef61      5b             pop rbx
0x0000ef62      5d             pop rbp
0x0000ef63      415c           pop r12
0x0000ef65      c3             ret
0x0000ef66      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x0000ef70      488d05690721.  lea rax, obj.default_quoting_options    ; 0x21f6e0
0x0000ef77      4885ff         test rdi, rdi
0x0000ef7a      480f44f8       cmove rdi, rax
0x0000ef7e      8b07           mov eax, dword [rdi]
0x0000ef80      c3             ret
0x0000ef81      0f1f440000     nop dword [rax + rax]
0x0000ef86      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x0000ef90      488d05490721.  lea rax, obj.default_quoting_options    ; 0x21f6e0
0x0000ef97      4885ff         test rdi, rdi
0x0000ef9a      480f44f8       cmove rdi, rax
0x0000ef9e      8937           mov dword [rdi], esi
0x0000efa0      c3             ret
0x0000efa1      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x0000efa6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x0000efb0      488d05290721.  lea rax, obj.default_quoting_options    ; 0x21f6e0
0x0000efb7      4885ff         test rdi, rdi
0x0000efba      89f1           mov ecx, esi
0x0000efbc      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x0000efc0      89f0           mov eax, esi
0x0000efc2      83e11f         and ecx, 0x1f
0x0000efc5      c0e805         shr al, 5
0x0000efc8      0fb6c0         movzx eax, al
0x0000efcb      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x0000efd0      8b37           mov esi, dword [rdi]
0x0000efd2      89f0           mov eax, esi
0x0000efd4      d3e8           shr eax, cl
0x0000efd6      31c2           xor edx, eax
0x0000efd8      83e001         and eax, 1
0x0000efdb      83e201         and edx, 1
0x0000efde      d3e2           shl edx, cl
0x0000efe0      31f2           xor edx, esi
0x0000efe2      8917           mov dword [rdi], edx
0x0000efe4      c3             ret
0x0000efe5      90             nop
0x0000efe6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x0000eff0      488d05e90621.  lea rax, obj.default_quoting_options    ; 0x21f6e0
0x0000eff7      4885ff         test rdi, rdi
0x0000effa      480f44f8       cmove rdi, rax
0x0000effe      8b4704         mov eax, dword [rdi + 4]
0x0000f001      897704         mov dword [rdi + 4], esi
0x0000f004      c3             ret
0x0000f005      90             nop
0x0000f006      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x0000f010      488d05c90621.  lea rax, obj.default_quoting_options    ; 0x21f6e0
0x0000f017      4885ff         test rdi, rdi
0x0000f01a      480f44f8       cmove rdi, rax
0x0000f01e      4885f6         test rsi, rsi
0x0000f021      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000f027      740e           je 0xf037
0x0000f029      4885d2         test rdx, rdx
0x0000f02c      7409           je 0xf037
0x0000f02e      48897728       mov qword [rdi + 0x28], rsi
0x0000f032      48895730       mov qword [rdi + 0x30], rdx
0x0000f036      c3             ret
0x0000f037      4883ec08       sub rsp, 8
0x0000f03b      e80039ffff     call sym.imp.abort
;-- quotearg_buffer:
0x0000f040      4157           push r15
0x0000f042      4156           push r14
0x0000f044      488d05950621.  lea rax, obj.default_quoting_options    ; 0x21f6e0
0x0000f04b      4155           push r13
0x0000f04d      4154           push r12
0x0000f04f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x0000f052      55             push rbp
0x0000f053      53             push rbx
0x0000f054      4c89c3         mov rbx, r8
0x0000f057      4989f6         mov r14, rsi
0x0000f05a      4989d7         mov r15, rdx
0x0000f05d      4883ec18       sub rsp, 0x18
0x0000f061      4d85c0         test r8, r8
0x0000f064      480f44d8       cmove rbx, rax
0x0000f068      48894c2408     mov qword [rsp + 8], rcx
0x0000f06d      e8de38ffff     call sym.imp.__errno_location
0x0000f072      448b20         mov r12d, dword [rax]
0x0000f075      4889c5         mov rbp, rax
0x0000f078      488d4308       lea rax, [rbx + 8]
0x0000f07c      4883ec08       sub rsp, 8
0x0000f080      448b4b04       mov r9d, dword [rbx + 4]
0x0000f084      ff7330         push qword [rbx + 0x30]
0x0000f087      448b03         mov r8d, dword [rbx]
0x0000f08a      ff7328         push qword [rbx + 0x28]
0x0000f08d      4c89fa         mov rdx, r15
0x0000f090      50             push rax
0x0000f091      488b4c2428     mov rcx, qword [rsp + 0x28]
0x0000f096      4c89f6         mov rsi, r14
0x0000f099      4c89ef         mov rdi, r13
0x0000f09c      e89feaffff     call sym.quotearg_buffer_restyled
0x0000f0a1      44896500       mov dword [rbp], r12d
0x0000f0a5      4883c438       add rsp, 0x38
0x0000f0a9      5b             pop rbx
0x0000f0aa      5d             pop rbp
0x0000f0ab      415c           pop r12
0x0000f0ad      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000f0af      415e           pop r14
0x0000f0b1      415f           pop r15
0x0000f0b3      c3             ret
0x0000f0b4      6690           nop
0x0000f0b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x0000f0c0      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x0000f0c2      4156           push r14
0x0000f0c4      488d05150621.  lea rax, obj.default_quoting_options    ; 0x21f6e0
0x0000f0cb      4155           push r13
0x0000f0cd      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x0000f0cf      4989d4         mov r12, rdx
0x0000f0d2      55             push rbp
0x0000f0d3      53             push rbx
0x0000f0d4      4889cb         mov rbx, rcx
0x0000f0d7      4989fe         mov r14, rdi
0x0000f0da      4989f7         mov r15, rsi
0x0000f0dd      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x0000f0e1      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x0000f0e4      480f44d8       cmove rbx, rax
0x0000f0e8      31ed           xor ebp, ebp
0x0000f0ea      e86138ffff     call sym.imp.__errno_location
0x0000f0ef      4d85e4         test r12, r12
0x0000f0f2      4989c5         mov r13, rax
0x0000f0f5      8b00           mov eax, dword [rax]
0x0000f0f7      400f94c5       sete bpl
0x0000f0fb      0b6b04         or ebp, dword [rbx + 4]
0x0000f0fe      4c8d5308       lea r10, [rbx + 8]
0x0000f102      4883ec08       sub rsp, 8
0x0000f106      448b03         mov r8d, dword [rbx]
0x0000f109      4c89f9         mov rcx, r15
0x0000f10c      89442414       mov dword [rsp + 0x14], eax
0x0000f110      ff7330         push qword [rbx + 0x30]
0x0000f113      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x0000f116      ff7328         push qword [rbx + 0x28]
0x0000f119      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x0000f11b      31f6           xor esi, esi
0x0000f11d      4189e9         mov r9d, ebp
0x0000f120      31ff           xor edi, edi
0x0000f122      4c89542440     mov qword [rsp + 0x40], r10
0x0000f127      e814eaffff     call sym.quotearg_buffer_restyled
0x0000f12c      488d7001       lea rsi, [rax + 1]
0x0000f130      4889442448     mov qword [rsp + 0x48], rax
0x0000f135      4883c420       add rsp, 0x20
0x0000f139      4889f7         mov rdi, rsi
0x0000f13c      4889742418     mov qword [rsp + 0x18], rsi
0x0000f141      e8ca2e0000     call sym.xmalloc
0x0000f146      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x0000f14b      4883ec08       sub rsp, 8
0x0000f14f      ff7330         push qword [rbx + 0x30]
0x0000f152      ff7328         push qword [rbx + 0x28]
0x0000f155      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000f15a      4189e9         mov r9d, ebp
0x0000f15d      448b03         mov r8d, dword [rbx]
0x0000f160      4c89f9         mov rcx, r15
0x0000f163      4c89f2         mov rdx, r14
0x0000f166      4889c7         mov rdi, rax
0x0000f169      4152           push r10
0x0000f16b      488b742438     mov rsi, qword [rsp + 0x38]
0x0000f170      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x0000f175      8b44242c       mov eax, dword [rsp + 0x2c]
0x0000f179      4883c420       add rsp, 0x20
0x0000f17d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x0000f180      41894500       mov dword [r13], eax
0x0000f184      7409           je 0xf18f
0x0000f186      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000f18b      4d891c24       mov qword [r12], r11
0x0000f18f      488b442410     mov rax, qword [rsp + 0x10]
0x0000f194      4883c438       add rsp, 0x38
0x0000f198      5b             pop rbx
0x0000f199      5d             pop rbp
0x0000f19a      415c           pop r12
0x0000f19c      415d           pop r13
0x0000f19e      415e           pop r14
0x0000f1a0      415f           pop r15
0x0000f1a2      c3             ret
0x0000f1a3      0f1f00         nop dword [rax]
0x0000f1a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x0000f1b0      4889d1         mov rcx, rdx
0x0000f1b3      31d2           xor edx, edx
0x0000f1b5      e906ffffff     jmp sym.quotearg_alloc_mem
0x0000f1ba      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x0000f1c0      8b05d2de2000   mov eax, dword [obj.nslots]             ; [0x21d098:4]=1
0x0000f1c6      4154           push r12
0x0000f1c8      4c8b25d1de20.  mov r12, qword [obj.slotvec]            ; [0x21d0a0:8]=0x21d0b0 obj.slotvec0
0x0000f1cf      55             push rbp
0x0000f1d0      53             push rbx
0x0000f1d1      83f801         cmp eax, 1
0x0000f1d4      7e2b           jle 0xf201                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x0000f1d6      83e802         sub eax, 2
0x0000f1d9      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x0000f1de      48c1e004       shl rax, 4
0x0000f1e2      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x0000f1e7      660f1f840000.  nop word [rax + rax]
0x0000f1f0      488b3b         mov rdi, qword [rbx]
0x0000f1f3      4883c310       add rbx, 0x10
0x0000f1f7      e8d43effff     call sym..plt.got
0x0000f1fc      4839eb         cmp rbx, rbp
0x0000f1ff      75ef           jne 0xf1f0
0x0000f201      498b7c2408     mov rdi, qword [r12 + 8]
0x0000f206      488d1dd30321.  lea rbx, obj.slot0                      ; 0x21f5e0
0x0000f20d      4839df         cmp rdi, rbx
0x0000f210      7417           je 0xf229
0x0000f212      e8b93effff     call sym..plt.got
0x0000f217      48c7058ede20.  mov qword [obj.slotvec0], 0x100         ; [0x21d0b0:8]=256
0x0000f222      48891d8fde20.  mov qword [0x0021d0b8], rbx             ; [0x21d0b8:8]=0x21f5e0 obj.slot0
0x0000f229      488d1d80de20.  lea rbx, obj.slotvec0                   ; 0x21d0b0
0x0000f230      4939dc         cmp r12, rbx
0x0000f233      740f           je 0xf244
0x0000f235      4c89e7         mov rdi, r12
0x0000f238      e8933effff     call sym..plt.got
0x0000f23d      48891d5cde20.  mov qword [obj.slotvec], rbx            ; [0x21d0a0:8]=0x21d0b0 obj.slotvec0
0x0000f244      5b             pop rbx
0x0000f245      c70549de2000.  mov dword [obj.nslots], 1               ; [0x21d098:4]=1
0x0000f24f      5d             pop rbp
0x0000f250      415c           pop r12
0x0000f252      c3             ret
0x0000f253      0f1f00         nop dword [rax]
0x0000f256      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x0000f260      488d0d790421.  lea rcx, obj.default_quoting_options    ; 0x21f6e0
0x0000f267      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000f26e      e90dfbffff     jmp sym.quotearg_n_options
0x0000f273      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x0000f276      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x0000f280      488d0d590421.  lea rcx, obj.default_quoting_options    ; 0x21f6e0
0x0000f287      e9f4faffff     jmp sym.quotearg_n_options
0x0000f28c      0f1f4000       nop dword [rax]
;-- quotearg:
0x0000f290      488d0d490421.  lea rcx, obj.default_quoting_options    ; 0x21f6e0
0x0000f297      4889fe         mov rsi, rdi
0x0000f29a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000f2a1      31ff           xor edi, edi
0x0000f2a3      e9d8faffff     jmp sym.quotearg_n_options
0x0000f2a8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x0000f2b0      488d0d290421.  lea rcx, obj.default_quoting_options    ; 0x21f6e0
0x0000f2b7      4889f2         mov rdx, rsi
0x0000f2ba      4889fe         mov rsi, rdi
0x0000f2bd      31ff           xor edi, edi
0x0000f2bf      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x0000f2c4      6690           nop
0x0000f2c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x0000f2d0      4883ec48       sub rsp, 0x48
0x0000f2d4      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x0000f2d7      64488b142528.  mov rdx, qword fs:[0x28]
0x0000f2e0      4889542438     mov qword [rsp + 0x38], rdx
0x0000f2e5      31d2           xor edx, edx
0x0000f2e7      83fe0a         cmp esi, 0xa
0x0000f2ea      7468           je 0xf354
0x0000f2ec      893424         mov dword [rsp], esi
0x0000f2ef      4889e1         mov rcx, rsp
0x0000f2f2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000f2f9      4889c6         mov rsi, rax
0x0000f2fc      48c744240400.  mov qword [rsp + 4], 0
0x0000f305      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000f30e      48c744241400.  mov qword [rsp + 0x14], 0
0x0000f317      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0000f320      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x0000f329      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000f332      c74424340000.  mov dword [rsp + 0x34], 0
0x0000f33a      e841faffff     call sym.quotearg_n_options
0x0000f33f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x0000f344      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000f34d      750a           jne 0xf359                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x0000f34f      4883c448       add rsp, 0x48
0x0000f353      c3             ret
0x0000f354      e8e735ffff     call sym.imp.abort
0x0000f359      e8d237ffff     call sym.imp.__stack_chk_fail
0x0000f35e      6690           nop
;-- quotearg_n_style_mem:
0x0000f360      4883ec48       sub rsp, 0x48
0x0000f364      4889d0         mov rax, rdx
0x0000f367      4889ca         mov rdx, rcx
0x0000f36a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x0000f373      48894c2438     mov qword [rsp + 0x38], rcx
0x0000f378      31c9           xor ecx, ecx
0x0000f37a      83fe0a         cmp esi, 0xa
0x0000f37d      7461           je 0xf3e0
0x0000f37f      893424         mov dword [rsp], esi
0x0000f382      4889e1         mov rcx, rsp
0x0000f385      4889c6         mov rsi, rax
0x0000f388      48c744240400.  mov qword [rsp + 4], 0
0x0000f391      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000f39a      48c744241400.  mov qword [rsp + 0x14], 0
0x0000f3a3      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0000f3ac      48c744242400.  mov qword [rsp + 0x24], 0
0x0000f3b5      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000f3be      c74424340000.  mov dword [rsp + 0x34], 0
0x0000f3c6      e8b5f9ffff     call sym.quotearg_n_options
0x0000f3cb      488b542438     mov rdx, qword [rsp + 0x38]
0x0000f3d0      644833142528.  xor rdx, qword fs:[0x28]
0x0000f3d9      750a           jne 0xf3e5
0x0000f3db      4883c448       add rsp, 0x48
0x0000f3df      c3             ret
0x0000f3e0      e85b35ffff     call sym.imp.abort
0x0000f3e5      e84637ffff     call sym.imp.__stack_chk_fail
0x0000f3ea      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x0000f3f0      4889f2         mov rdx, rsi
0x0000f3f3      89fe           mov esi, edi
0x0000f3f5      31ff           xor edi, edi
0x0000f3f7      e9d4feffff     jmp sym.quotearg_n_style
0x0000f3fc      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x0000f400      4889d1         mov rcx, rdx
0x0000f403      4889f2         mov rdx, rsi
0x0000f406      89fe           mov esi, edi
0x0000f408      31ff           xor edi, edi
0x0000f40a      e951ffffff     jmp sym.quotearg_n_style_mem
0x0000f40f      90             nop
;-- quotearg_char_mem:
0x0000f410      4883ec48       sub rsp, 0x48
0x0000f414      89d1           mov ecx, edx
0x0000f416      64488b042528.  mov rax, qword fs:[0x28]
0x0000f41f      4889442438     mov qword [rsp + 0x38], rax
0x0000f424      31c0           xor eax, eax
0x0000f426      488b05e30221.  mov rax, qword [0x0021f710]             ; [0x21f710:8]=0
0x0000f42d      4989e0         mov r8, rsp
0x0000f430      83e11f         and ecx, 0x1f
0x0000f433      660f6f05a502.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x0000f43b      4889442430     mov qword [rsp + 0x30], rax
0x0000f440      89d0           mov eax, edx
0x0000f442      0f290424       movaps xmmword [rsp], xmm0
0x0000f446      c0e805         shr al, 5
0x0000f449      0fb6c0         movzx eax, al
0x0000f44c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x0000f451      660f6f059702.  movdqa xmm0, xmmword [0x0021f6f0]
0x0000f459      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000f45e      660f6f059a02.  movdqa xmm0, xmmword [0x0021f700]
0x0000f466      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000f46b      418b11         mov edx, dword [r9]
0x0000f46e      89d0           mov eax, edx
0x0000f470      d3e8           shr eax, cl
0x0000f472      f7d0           not eax
0x0000f474      83e001         and eax, 1
0x0000f477      d3e0           shl eax, cl
0x0000f479      4c89c1         mov rcx, r8
0x0000f47c      31d0           xor eax, edx
0x0000f47e      4889f2         mov rdx, rsi
0x0000f481      4889fe         mov rsi, rdi
0x0000f484      418901         mov dword [r9], eax
0x0000f487      31ff           xor edi, edi
0x0000f489      e8f2f8ffff     call sym.quotearg_n_options
0x0000f48e      488b742438     mov rsi, qword [rsp + 0x38]
0x0000f493      644833342528.  xor rsi, qword fs:[0x28]
0x0000f49c      7505           jne 0xf4a3
0x0000f49e      4883c448       add rsp, 0x48
0x0000f4a2      c3             ret
0x0000f4a3      e88836ffff     call sym.imp.__stack_chk_fail
0x0000f4a8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x0000f4b0      400fbed6       movsx edx, sil
0x0000f4b4      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000f4bb      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x0000f4c0      ba3a000000     mov edx, 0x3a                           ; ':'
0x0000f4c5      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000f4cc      e93fffffff     jmp sym.quotearg_char_mem
0x0000f4d1      0f1f440000     nop dword [rax + rax]
0x0000f4d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x0000f4e0      ba3a000000     mov edx, 0x3a                           ; ':'
0x0000f4e5      e926ffffff     jmp sym.quotearg_char_mem
0x0000f4ea      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x0000f4f0      4883ec48       sub rsp, 0x48
0x0000f4f4      4889d0         mov rax, rdx
0x0000f4f7      64488b142528.  mov rdx, qword fs:[0x28]
0x0000f500      4889542438     mov qword [rsp + 0x38], rdx
0x0000f505      31d2           xor edx, edx
0x0000f507      83fe0a         cmp esi, 0xa
0x0000f50a      7468           je 0xf574
0x0000f50c      893424         mov dword [rsp], esi
0x0000f50f      4889e1         mov rcx, rsp
0x0000f512      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000f519      4889c6         mov rsi, rax
0x0000f51c      48c744240400.  mov qword [rsp + 4], 0
0x0000f525      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x0000f52e      48c744241400.  mov qword [rsp + 0x14], 0
0x0000f537      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0000f540      48c744242400.  mov qword [rsp + 0x24], 0
0x0000f549      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000f552      c74424340000.  mov dword [rsp + 0x34], 0
0x0000f55a      e821f8ffff     call sym.quotearg_n_options
0x0000f55f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x0000f564      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000f56d      750a           jne 0xf579
0x0000f56f      4883c448       add rsp, 0x48
0x0000f573      c3             ret
0x0000f574      e8c733ffff     call sym.imp.abort
0x0000f579      e8b235ffff     call sym.imp.__stack_chk_fail
0x0000f57e      6690           nop
;-- quotearg_n_custom_mem:
0x0000f580      4883ec48       sub rsp, 0x48
0x0000f584      4989c9         mov r9, rcx
0x0000f587      488b0d820121.  mov rcx, qword [0x0021f710]             ; [0x21f710:8]=0
0x0000f58e      660f6f054a01.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x0000f596      64488b042528.  mov rax, qword fs:[0x28]
0x0000f59f      4889442438     mov qword [rsp + 0x38], rax
0x0000f5a4      31c0           xor eax, eax
0x0000f5a6      0f290424       movaps xmmword [rsp], xmm0
0x0000f5aa      4885f6         test rsi, rsi
0x0000f5ad      48894c2430     mov qword [rsp + 0x30], rcx
0x0000f5b2      c704240a0000.  mov dword [rsp], 0xa
0x0000f5b9      660f6f052f01.  movdqa xmm0, xmmword [0x0021f6f0]
0x0000f5c1      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000f5c6      660f6f053201.  movdqa xmm0, xmmword [0x0021f700]
0x0000f5ce      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000f5d3      7432           je 0xf607
0x0000f5d5      4885d2         test rdx, rdx
0x0000f5d8      742d           je 0xf607
0x0000f5da      4889742428     mov qword [rsp + 0x28], rsi
0x0000f5df      4889542430     mov qword [rsp + 0x30], rdx
0x0000f5e4      4889e1         mov rcx, rsp
0x0000f5e7      4c89c2         mov rdx, r8
0x0000f5ea      4c89ce         mov rsi, r9
0x0000f5ed      e88ef7ffff     call sym.quotearg_n_options
0x0000f5f2      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000f5f7      6448333c2528.  xor rdi, qword fs:[0x28]
0x0000f600      750a           jne 0xf60c
0x0000f602      4883c448       add rsp, 0x48
0x0000f606      c3             ret
0x0000f607      e83433ffff     call sym.imp.abort
0x0000f60c      e81f35ffff     call sym.imp.__stack_chk_fail
0x0000f611      0f1f440000     nop dword [rax + rax]
0x0000f616      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x0000f620      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0000f627      e954ffffff     jmp sym.quotearg_n_custom_mem
0x0000f62c      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x0000f630      4889d1         mov rcx, rdx
0x0000f633      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0000f63a      4889f2         mov rdx, rsi
0x0000f63d      4889fe         mov rsi, rdi
0x0000f640      31ff           xor edi, edi
0x0000f642      e939ffffff     jmp sym.quotearg_n_custom_mem
0x0000f647      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x0000f650      4989c8         mov r8, rcx
0x0000f653      4889d1         mov rcx, rdx
0x0000f656      4889f2         mov rdx, rsi
0x0000f659      4889fe         mov rsi, rdi
0x0000f65c      31ff           xor edi, edi
0x0000f65e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x0000f663      0f1f00         nop dword [rax]
0x0000f666      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x0000f670      488d0de9d920.  lea rcx, obj.quote_quoting_options      ; 0x21d060
0x0000f677      e904f7ffff     jmp sym.quotearg_n_options
0x0000f67c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x0000f680      488d0dd9d920.  lea rcx, obj.quote_quoting_options      ; 0x21d060
0x0000f687      4889f2         mov rdx, rsi
0x0000f68a      4889fe         mov rsi, rdi
0x0000f68d      31ff           xor edi, edi
0x0000f68f      e9ecf6ffff     jmp sym.quotearg_n_options
0x0000f694      6690           nop
0x0000f696      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x0000f6a0      488d0db9d920.  lea rcx, obj.quote_quoting_options      ; 0x21d060
0x0000f6a7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000f6ae      e9cdf6ffff     jmp sym.quotearg_n_options
0x0000f6b3      0f1f00         nop dword [rax]
0x0000f6b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x0000f6c0      488d0d99d920.  lea rcx, obj.quote_quoting_options      ; 0x21d060
0x0000f6c7      4889fe         mov rsi, rdi
0x0000f6ca      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000f6d1      31ff           xor edi, edi
0x0000f6d3      e9a8f6ffff     jmp sym.quotearg_n_options
0x0000f6d8      0f1f84000000.  nop dword [rax + rax]
;-- renameatu:
0x0000f6e0      4157           push r15
0x0000f6e2      4156           push r14
0x0000f6e4      4589c1         mov r9d, r8d
0x0000f6e7      4155           push r13
0x0000f6e9      4154           push r12
0x0000f6eb      4189d6         mov r14d, edx
0x0000f6ee      55             push rbp
0x0000f6ef      53             push rbx
0x0000f6f0      4989f4         mov r12, rsi
0x0000f6f3      4989cd         mov r13, rcx
0x0000f6f6      4489c5         mov ebp, r8d
0x0000f6f9      4989c8         mov r8, rcx
0x0000f6fc      4881ec480100.  sub rsp, 0x148
0x0000f703      89d1           mov ecx, edx
0x0000f705      4889f2         mov rdx, rsi
0x0000f708      64488b042528.  mov rax, qword fs:[0x28]
0x0000f711      488984243801.  mov qword [rsp + 0x138], rax
0x0000f719      31c0           xor eax, eax
0x0000f71b      89fe           mov esi, edi
0x0000f71d      897c2404       mov dword [rsp + 4], edi
0x0000f721      bf3c010000     mov edi, 0x13c
0x0000f726      e82536ffff     call sym.imp.syscall
0x0000f72b      4889c3         mov rbx, rax
0x0000f72e      4189c7         mov r15d, eax
0x0000f731      e81a32ffff     call sym.imp.__errno_location
0x0000f736      85db           test ebx, ebx
0x0000f738      7836           js 0xf770
0x0000f73a      488b94243801.  mov rdx, qword [rsp + 0x138]
0x0000f742      644833142528.  xor rdx, qword fs:[0x28]
0x0000f74b      4489f8         mov eax, r15d
0x0000f74e      0f85f1010000   jne 0xf945
0x0000f754      4881c4480100.  add rsp, 0x148
0x0000f75b      5b             pop rbx
0x0000f75c      5d             pop rbp
0x0000f75d      415c           pop r12
0x0000f75f      415d           pop r13
0x0000f761      415e           pop r14
0x0000f763      415f           pop r15
0x0000f765      c3             ret
0x0000f766      662e0f1f8400.  nop word cs:[rax + rax]
0x0000f770      4989c1         mov r9, rax
0x0000f773      8b00           mov eax, dword [rax]
0x0000f775      8d48ea         lea ecx, [rax - 0x16]
0x0000f778      83e1ef         and ecx, 0xffffffef                     ; 4294967279
0x0000f77b      0f95c3         setne bl
0x0000f77e      83f85f         cmp eax, 0x5f
0x0000f781      0f95c0         setne al
0x0000f784      20c3           and bl, al
0x0000f786      75b2           jne 0xf73a
0x0000f788      85ed           test ebp, ebp
0x0000f78a      7554           jne 0xf7e0
0x0000f78c      4c89e7         mov rdi, r12
0x0000f78f      4c894c2408     mov qword [rsp + 8], r9
0x0000f794      e85733ffff     call sym.imp.strlen
0x0000f799      4c89ef         mov rdi, r13
0x0000f79c      4889c5         mov rbp, rax
0x0000f79f      e84c33ffff     call sym.imp.strlen
0x0000f7a4      4885ed         test rbp, rbp
0x0000f7a7      741a           je 0xf7c3
0x0000f7a9      4885c0         test rax, rax
0x0000f7ac      4c8b4c2408     mov r9, qword [rsp + 8]
0x0000f7b1      7410           je 0xf7c3
0x0000f7b3      41807c2cff2f   cmp byte [r12 + rbp - 1], 0x2f
0x0000f7b9      7445           je 0xf800
0x0000f7bb      41807c05ff2f   cmp byte [r13 + rax - 1], 0x2f
0x0000f7c1      743d           je 0xf800
0x0000f7c3      8b7c2404       mov edi, dword [rsp + 4]
0x0000f7c7      4c89e9         mov rcx, r13
0x0000f7ca      4489f2         mov edx, r14d
0x0000f7cd      4c89e6         mov rsi, r12
0x0000f7d0      e82b38ffff     call sym.imp.renameat
0x0000f7d5      4189c7         mov r15d, eax
0x0000f7d8      e95dffffff     jmp 0xf73a
0x0000f7dd      0f1f00         nop dword [rax]
0x0000f7e0      83e5fe         and ebp, 0xfffffffe                     ; 4294967294
0x0000f7e3      746b           je 0xf850
0x0000f7e5      41c7015f0000.  mov dword [r9], 0x5f                    ; '_'
                                                                       ; [0x5f:4]=0x1f800
0x0000f7ec      41bfffffffff   mov r15d, 0xffffffff                    ; -1
0x0000f7f2      e943ffffff     jmp 0xf73a
0x0000f7f7      660f1f840000.  nop word [rax + rax]
0x0000f800      8b742404       mov esi, dword [rsp + 4]
0x0000f804      488d4c2410     lea rcx, [rsp + 0x10]
0x0000f809      41b800010000   mov r8d, 0x100
0x0000f80f      4c89e2         mov rdx, r12
0x0000f812      bf01000000     mov edi, 1
0x0000f817      4c894c2408     mov qword [rsp + 8], r9
0x0000f81c      e85f33ffff     call sym.imp.__fxstatat
0x0000f821      85c0           test eax, eax
0x0000f823      7564           jne 0xf889
0x0000f825      84db           test bl, bl
0x0000f827      4c8b4c2408     mov r9, qword [rsp + 8]
0x0000f82c      747c           je 0xf8aa
0x0000f82e      8b442428       mov eax, dword [rsp + 0x28]
0x0000f832      2500f00000     and eax, 0xf000
0x0000f837      3d00400000     cmp eax, 0x4000                         ; "([]A\A]\xc3\x0f\x1f\x84"
0x0000f83c      7485           je 0xf7c3
0x0000f83e      41c701020000.  mov dword [r9], 2
0x0000f845      41bfffffffff   mov r15d, 0xffffffff                    ; -1
0x0000f84b      e9eafeffff     jmp 0xf73a
0x0000f850      488d8c24a000.  lea rcx, [rsp + 0xa0]
0x0000f858      41b800010000   mov r8d, 0x100
0x0000f85e      4c89ea         mov rdx, r13
0x0000f861      4489f6         mov esi, r14d
0x0000f864      bf01000000     mov edi, 1
0x0000f869      4c894c2408     mov qword [rsp + 8], r9
0x0000f86e      e80d33ffff     call sym.imp.__fxstatat
0x0000f873      85c0           test eax, eax
0x0000f875      4c8b4c2408     mov r9, qword [rsp + 8]
0x0000f87a      741c           je 0xf898
0x0000f87c      418b01         mov eax, dword [r9]
0x0000f87f      83f84b         cmp eax, 0x4b
0x0000f882      7414           je 0xf898
0x0000f884      83f802         cmp eax, 2
0x0000f887      746f           je 0xf8f8
0x0000f889      41bfffffffff   mov r15d, 0xffffffff                    ; -1
0x0000f88f      e9a6feffff     jmp 0xf73a
0x0000f894      0f1f4000       nop dword [rax]
0x0000f898      41c701110000.  mov dword [r9], 0x11                    ; [0x11:4]=0x1003e00
0x0000f89f      41bfffffffff   mov r15d, 0xffffffff                    ; -1
0x0000f8a5      e990feffff     jmp 0xf73a
0x0000f8aa      488d8c24a000.  lea rcx, [rsp + 0xa0]
0x0000f8b2      41b800010000   mov r8d, 0x100
0x0000f8b8      4c89ea         mov rdx, r13
0x0000f8bb      4489f6         mov esi, r14d
0x0000f8be      bf01000000     mov edi, 1
0x0000f8c3      4c894c2408     mov qword [rsp + 8], r9
0x0000f8c8      e8b332ffff     call sym.imp.__fxstatat
0x0000f8cd      85c0           test eax, eax
0x0000f8cf      4c8b4c2408     mov r9, qword [rsp + 8]
0x0000f8d4      742c           je 0xf902
0x0000f8d6      41833902       cmp dword [r9], 2
0x0000f8da      75ad           jne 0xf889
0x0000f8dc      8b442428       mov eax, dword [rsp + 0x28]
0x0000f8e0      2500f00000     and eax, 0xf000
0x0000f8e5      3d00400000     cmp eax, 0x4000                         ; "([]A\A]\xc3\x0f\x1f\x84"
0x0000f8ea      759d           jne 0xf889
0x0000f8ec      e9d2feffff     jmp 0xf7c3
0x0000f8f1      0f1f80000000.  nop dword [rax]
0x0000f8f8      bb01000000     mov ebx, 1
0x0000f8fd      e98afeffff     jmp 0xf78c
0x0000f902      8b8424b80000.  mov eax, dword [rsp + 0xb8]
0x0000f909      2500f00000     and eax, 0xf000
0x0000f90e      3d00400000     cmp eax, 0x4000                         ; "([]A\A]\xc3\x0f\x1f\x84"
0x0000f913      740c           je 0xf921
0x0000f915      41c701140000.  mov dword [r9], 0x14                    ; [0x14:4]=1
0x0000f91c      e968ffffff     jmp 0xf889
0x0000f921      8b442428       mov eax, dword [rsp + 0x28]
0x0000f925      2500f00000     and eax, 0xf000
0x0000f92a      3d00400000     cmp eax, 0x4000                         ; "([]A\A]\xc3\x0f\x1f\x84"
0x0000f92f      0f848efeffff   je 0xf7c3
0x0000f935      41c701150000.  mov dword [r9], 0x15                    ; [0x15:4]=0x30000000
0x0000f93c      4183cfff       or r15d, 0xffffffff                     ; -1
0x0000f940      e9f5fdffff     jmp 0xf73a
0x0000f945      e8e631ffff     call sym.imp.__stack_chk_fail
0x0000f94a      660f1f440000   nop word [rax + rax]
;-- safe_read:
0x0000f950      4155           push r13                                ; ../coreutils-8.31/lib/safe-read.c:57
0x0000f952      4154           push r12
0x0000f954      4189fd         mov r13d, edi
0x0000f957      55             push rbp
0x0000f958      53             push rbx
0x0000f959      4989f4         mov r12, rsi
0x0000f95c      4889d3         mov rbx, rdx
0x0000f95f      4883ec08       sub rsp, 8
0x0000f963      0f1f440000     nop dword [rax + rax]
0x0000f968      4889da         mov rdx, rbx                            ; unistd.h:44   return __read_alias (__fd, __buf, __nbytes);
0x0000f96b      4c89e6         mov rsi, r12
0x0000f96e      4489ef         mov edi, r13d
0x0000f971      e80a33ffff     call sym.imp.read
0x0000f976      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/safe-read.c:62
0x0000f979      4889c5         mov rbp, rax                            ; unistd.h:44   return __read_alias (__fd, __buf, __nbytes);
0x0000f97c      7922           jns 0xf9a0                              ; ../coreutils-8.31/lib/safe-read.c:62
0x0000f97e      e8cd2fffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/safe-read.c:64
0x0000f983      8b00           mov eax, dword [rax]
0x0000f985      83f804         cmp eax, 4
0x0000f988      74de           je 0xf968
0x0000f98a      4881fb0000f0.  cmp rbx, 0x7ff00000                     ; ../coreutils-8.31/lib/safe-read.c:66
0x0000f991      760d           jbe 0xf9a0
0x0000f993      83f816         cmp eax, 0x16
0x0000f996      7508           jne 0xf9a0
0x0000f998      bb0000f07f     mov ebx, 0x7ff00000                     ; ../coreutils-8.31/lib/safe-read.c:67
0x0000f99d      ebc9           jmp 0xf968
0x0000f99f      90             nop
0x0000f9a0      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/safe-read.c:71
0x0000f9a4      4889e8         mov rax, rbp
0x0000f9a7      5b             pop rbx
0x0000f9a8      5d             pop rbp
0x0000f9a9      415c           pop r12
0x0000f9ab      415d           pop r13
0x0000f9ad      c3             ret
0x0000f9ae      6690           nop
;-- safe_write:
0x0000f9b0      4155           push r13                                ; ../coreutils-8.31/lib/safe-read.c:57
0x0000f9b2      4154           push r12
0x0000f9b4      4189fd         mov r13d, edi
0x0000f9b7      55             push rbp
0x0000f9b8      53             push rbx
0x0000f9b9      4989f4         mov r12, rsi
0x0000f9bc      4889d3         mov rbx, rdx
0x0000f9bf      4883ec08       sub rsp, 8
0x0000f9c3      0f1f440000     nop dword [rax + rax]
0x0000f9c8      4889da         mov rdx, rbx                            ; ../coreutils-8.31/lib/safe-read.c:60
0x0000f9cb      4c89e6         mov rsi, r12
0x0000f9ce      4489ef         mov edi, r13d
0x0000f9d1      e84a30ffff     call sym.imp.write
0x0000f9d6      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/safe-read.c:62
0x0000f9d9      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/safe-read.c:60
0x0000f9dc      7922           jns 0xfa00                              ; ../coreutils-8.31/lib/safe-read.c:62
0x0000f9de      e86d2fffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/safe-read.c:64
0x0000f9e3      8b00           mov eax, dword [rax]
0x0000f9e5      83f804         cmp eax, 4
0x0000f9e8      74de           je 0xf9c8
0x0000f9ea      83f816         cmp eax, 0x16                           ; ../coreutils-8.31/lib/safe-read.c:66
0x0000f9ed      7511           jne 0xfa00
0x0000f9ef      4881fb0000f0.  cmp rbx, 0x7ff00000
0x0000f9f6      7608           jbe 0xfa00
0x0000f9f8      bb0000f07f     mov ebx, 0x7ff00000                     ; ../coreutils-8.31/lib/safe-read.c:67
0x0000f9fd      ebc9           jmp 0xf9c8
0x0000f9ff      90             nop
0x0000fa00      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/safe-read.c:71
0x0000fa04      4889e8         mov rax, rbp
0x0000fa07      5b             pop rbx
0x0000fa08      5d             pop rbp
0x0000fa09      415c           pop r12
0x0000fa0b      415d           pop r13
0x0000fa0d      c3             ret
0x0000fa0e      6690           nop
;-- same_nameat.part.0:
0x0000fa10      4155           push r13
0x0000fa12      4154           push r12
0x0000fa14      4189fd         mov r13d, edi
0x0000fa17      55             push rbp
0x0000fa18      53             push rbx
0x0000fa19      4889f7         mov rdi, rsi
0x0000fa1c      89d5           mov ebp, edx
0x0000fa1e      4989cc         mov r12, rcx
0x0000fa21      4881ec380100.  sub rsp, 0x138
0x0000fa28      64488b042528.  mov rax, qword fs:[0x28]
0x0000fa31      488984242801.  mov qword [rsp + 0x128], rax
0x0000fa39      31c0           xor eax, eax
0x0000fa3b      e880b8ffff     call sym.dir_name
0x0000fa40      4889e1         mov rcx, rsp
0x0000fa43      41b800010000   mov r8d, 0x100
0x0000fa49      4889c2         mov rdx, rax
0x0000fa4c      4489ee         mov esi, r13d
0x0000fa4f      bf01000000     mov edi, 1
0x0000fa54      4889c3         mov rbx, rax
0x0000fa57      e82431ffff     call sym.imp.__fxstatat
0x0000fa5c      85c0           test eax, eax
0x0000fa5e      0f85ac000000   jne 0xfb10
0x0000fa64      4889df         mov rdi, rbx
0x0000fa67      e86436ffff     call sym..plt.got
0x0000fa6c      4c89e7         mov rdi, r12
0x0000fa6f      e84cb8ffff     call sym.dir_name
0x0000fa74      488d8c249000.  lea rcx, [rsp + 0x90]
0x0000fa7c      41b800010000   mov r8d, 0x100
0x0000fa82      4889c2         mov rdx, rax
0x0000fa85      89ee           mov esi, ebp
0x0000fa87      bf01000000     mov edi, 1
0x0000fa8c      4889c3         mov rbx, rax
0x0000fa8f      e8ec30ffff     call sym.imp.__fxstatat
0x0000fa94      85c0           test eax, eax
0x0000fa96      7550           jne 0xfae8
0x0000fa98      31ed           xor ebp, ebp
0x0000fa9a      488b84249800.  mov rax, qword [rsp + 0x98]
0x0000faa2      4839442408     cmp qword [rsp + 8], rax
0x0000faa7      7510           jne 0xfab9
0x0000faa9      488b84249000.  mov rax, qword [rsp + 0x90]
0x0000fab1      48390424       cmp qword [rsp], rax
0x0000fab5      400f94c5       sete bpl
0x0000fab9      4889df         mov rdi, rbx
0x0000fabc      e80f36ffff     call sym..plt.got
0x0000fac1      488b94242801.  mov rdx, qword [rsp + 0x128]
0x0000fac9      644833142528.  xor rdx, qword fs:[0x28]
0x0000fad2      89e8           mov eax, ebp
0x0000fad4      755c           jne 0xfb32
0x0000fad6      4881c4380100.  add rsp, 0x138
0x0000fadd      5b             pop rbx
0x0000fade      5d             pop rbp
0x0000fadf      415c           pop r12
0x0000fae1      415d           pop r13
0x0000fae3      c3             ret
0x0000fae4      0f1f4000       nop dword [rax]
0x0000fae8      e8632effff     call sym.imp.__errno_location
0x0000faed      8b30           mov esi, dword [rax]
0x0000faef      488d156a9300.  lea rdx, [0x00018e60]                   ; "%s"
0x0000faf6      4889d9         mov rcx, rbx
0x0000faf9      bf01000000     mov edi, 1
0x0000fafe      31c0           xor eax, eax
0x0000fb00      e82b34ffff     call sym.imp.error
0x0000fb05      eb91           jmp 0xfa98
0x0000fb07      660f1f840000.  nop word [rax + rax]
0x0000fb10      e83b2effff     call sym.imp.__errno_location
0x0000fb15      8b30           mov esi, dword [rax]
0x0000fb17      488d15429300.  lea rdx, [0x00018e60]                   ; "%s"
0x0000fb1e      4889d9         mov rcx, rbx
0x0000fb21      bf01000000     mov edi, 1
0x0000fb26      31c0           xor eax, eax
0x0000fb28      e80334ffff     call sym.imp.error
0x0000fb2d      e932ffffff     jmp 0xfa64
0x0000fb32      e8f92fffff     call sym.imp.__stack_chk_fail
0x0000fb37      660f1f840000.  nop word [rax + rax]
;-- same_nameat:
0x0000fb40      4157           push r15
0x0000fb42      4156           push r14
0x0000fb44      4189d7         mov r15d, edx
0x0000fb47      4155           push r13
0x0000fb49      4154           push r12
0x0000fb4b      55             push rbp
0x0000fb4c      53             push rbx
0x0000fb4d      4889cd         mov rbp, rcx
0x0000fb50      4889f3         mov rbx, rsi
0x0000fb53      4883ec18       sub rsp, 0x18
0x0000fb57      897c240c       mov dword [rsp + 0xc], edi
0x0000fb5b      4889f7         mov rdi, rsi
0x0000fb5e      e83db8ffff     call sym.last_component
0x0000fb63      4889ef         mov rdi, rbp
0x0000fb66      4989c4         mov r12, rax
0x0000fb69      e832b8ffff     call sym.last_component
0x0000fb6e      4c89e7         mov rdi, r12
0x0000fb71      4989c5         mov r13, rax
0x0000fb74      e887b8ffff     call sym.base_len
0x0000fb79      4c89ef         mov rdi, r13
0x0000fb7c      4989c6         mov r14, rax
0x0000fb7f      e87cb8ffff     call sym.base_len
0x0000fb84      4939c6         cmp r14, rax
0x0000fb87      7417           je 0xfba0
0x0000fb89      4883c418       add rsp, 0x18
0x0000fb8d      31c0           xor eax, eax
0x0000fb8f      5b             pop rbx
0x0000fb90      5d             pop rbp
0x0000fb91      415c           pop r12
0x0000fb93      415d           pop r13
0x0000fb95      415e           pop r14
0x0000fb97      415f           pop r15
0x0000fb99      c3             ret
0x0000fb9a      660f1f440000   nop word [rax + rax]
0x0000fba0      4c89f2         mov rdx, r14
0x0000fba3      4c89ee         mov rsi, r13
0x0000fba6      4c89e7         mov rdi, r12
0x0000fba9      e8e230ffff     call sym.imp.memcmp
0x0000fbae      85c0           test eax, eax
0x0000fbb0      75d7           jne 0xfb89
0x0000fbb2      8b7c240c       mov edi, dword [rsp + 0xc]
0x0000fbb6      4883c418       add rsp, 0x18
0x0000fbba      4889e9         mov rcx, rbp
0x0000fbbd      4489fa         mov edx, r15d
0x0000fbc0      4889de         mov rsi, rbx
0x0000fbc3      5b             pop rbx
0x0000fbc4      5d             pop rbp
0x0000fbc5      415c           pop r12
0x0000fbc7      415d           pop r13
0x0000fbc9      415e           pop r14
0x0000fbcb      415f           pop r15
0x0000fbcd      e93efeffff     jmp sym.same_nameat.part.0
0x0000fbd2      0f1f4000       nop dword [rax]
0x0000fbd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- same_name:
0x0000fbe0      ba9cffffff     mov edx, 0xffffff9c                     ; 4294967196
0x0000fbe5      4889f1         mov rcx, rsi
0x0000fbe8      4889fe         mov rsi, rdi
0x0000fbeb      89d7           mov edi, edx
0x0000fbed      e94effffff     jmp sym.same_nameat
0x0000fbf2      662e0f1f8400.  nop word cs:[rax + rax]
0x0000fbfc      0f1f4000       nop dword [rax]
;-- direntry_cmp_inode:
0x0000fc00      488b4608       mov rax, qword [rsi + 8]                ; ../coreutils-8.31/lib/savedir.c:64
0x0000fc04      48394708       cmp qword [rdi + 8], rax
0x0000fc08      720e           jb 0xfc18
0x0000fc0a      0f97c0         seta al                                 ; ../coreutils-8.31/lib/savedir.c:68
0x0000fc0d      0fb6c0         movzx eax, al
0x0000fc10      c3             ret
0x0000fc11      0f1f80000000.  nop dword [rax]
0x0000fc18      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000fc1d      c3             ret                                     ; ../coreutils-8.31/lib/savedir.c:69
0x0000fc1e      6690           nop
;-- direntry_cmp_name:
0x0000fc20      488b36         mov rsi, qword [rsi]                    ; ../coreutils-8.31/lib/savedir.c:52
0x0000fc23      488b3f         mov rdi, qword [rdi]
0x0000fc26      e9c530ffff     jmp sym.imp.strcmp
0x0000fc2b      0f1f440000     nop dword [rax + rax]
;-- streamsavedir:
0x0000fc30      4157           push r15                                ; ../coreutils-8.31/lib/savedir.c:92
0x0000fc32      488d0587cd20.  lea rax, obj.comparison_function_table  ; ../coreutils-8.31/lib/savedir.c:100 ; 0x21c9c0
0x0000fc39      4156           push r14                                ; ../coreutils-8.31/lib/savedir.c:92
0x0000fc3b      4155           push r13
0x0000fc3d      4154           push r12
0x0000fc3f      89f6           mov esi, esi                            ; ../coreutils-8.31/lib/savedir.c:100
0x0000fc41      55             push rbp                                ; ../coreutils-8.31/lib/savedir.c:92
0x0000fc42      53             push rbx
0x0000fc43      4883ec48       sub rsp, 0x48
0x0000fc47      488b04f0       mov rax, qword [rax + rsi*8]            ; ../coreutils-8.31/lib/savedir.c:100
0x0000fc4b      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/savedir.c:102
0x0000fc4e      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/savedir.c:100
0x0000fc53      0f8404030000   je 0xff5d                               ; ../coreutils-8.31/lib/savedir.c:102
0x0000fc59      4889fb         mov rbx, rdi
0x0000fc5c      4531f6         xor r14d, r14d                          ; ../coreutils-8.31/lib/savedir.c:98
0x0000fc5f      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/savedir.c:97
0x0000fc62      e8e92cffff     call sym.imp.__errno_location
0x0000fc67      4531ed         xor r13d, r13d                          ; ../coreutils-8.31/lib/savedir.c:93
0x0000fc6a      4889c5         mov rbp, rax
0x0000fc6d      48c744242800.  mov qword [rsp + 0x28], 0               ; ../coreutils-8.31/lib/savedir.c:96
0x0000fc76      48c744241000.  mov qword [rsp + 0x10], 0               ; ../coreutils-8.31/lib/savedir.c:95
0x0000fc7f      48c744242000.  mov qword [rsp + 0x20], 0               ; ../coreutils-8.31/lib/savedir.c:94
0x0000fc88      eb0a           jmp 0xfc94
0x0000fc8a      660f1f440000   nop word [rax + rax]
0x0000fc90      84c0           test al, al                             ; ../coreutils-8.31/lib/savedir.c:118
0x0000fc92      7535           jne 0xfcc9
0x0000fc94      c74500000000.  mov dword [rbp], 0                      ; ../coreutils-8.31/lib/savedir.c:110
0x0000fc9b      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/savedir.c:111
0x0000fc9e      e83d31ffff     call sym.imp.readdir
0x0000fca3      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/savedir.c:112
0x0000fca6      4889c1         mov rcx, rax                            ; ../coreutils-8.31/lib/savedir.c:111
0x0000fca9      0f84a1000000   je 0xfd50                               ; ../coreutils-8.31/lib/savedir.c:112
0x0000fcaf      4c8d7813       lea r15, [rax + 0x13]                   ; ../coreutils-8.31/lib/savedir.c:117
0x0000fcb3      0fb64013       movzx eax, byte [rax + 0x13]            ; ../coreutils-8.31/lib/savedir.c:118
0x0000fcb7      3c2e           cmp al, 0x2e
0x0000fcb9      75d5           jne 0xfc90
0x0000fcbb      8079142e       cmp byte [rcx + 0x14], 0x2e
0x0000fcbf      747f           je 0xfd40
0x0000fcc1      0fb64114       movzx eax, byte [rcx + 0x14]
0x0000fcc5      84c0           test al, al
0x0000fcc7      74cb           je 0xfc94
0x0000fcc9      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/savedir.c:120
0x0000fccc      48894c2430     mov qword [rsp + 0x30], rcx
0x0000fcd1      e81a2effff     call sym.imp.strlen
0x0000fcd6      4883c001       add rax, 1
0x0000fcda      48837c240800   cmp qword [rsp + 8], 0                  ; ../coreutils-8.31/lib/savedir.c:121
0x0000fce0      4889442418     mov qword [rsp + 0x18], rax             ; ../coreutils-8.31/lib/savedir.c:120
0x0000fce5      0f843d010000   je 0xfe28                               ; ../coreutils-8.31/lib/savedir.c:121
0x0000fceb      4c3b642428     cmp r12, qword [rsp + 0x28]             ; ../coreutils-8.31/lib/savedir.c:123
0x0000fcf0      498d442401     lea rax, [r12 + 1]
0x0000fcf5      488b4c2430     mov rcx, qword [rsp + 0x30]
0x0000fcfa      4889442438     mov qword [rsp + 0x38], rax
0x0000fcff      0f84ac010000   je 0xfeb1
0x0000fd05      49c1e404       shl r12, 4                              ; ../coreutils-8.31/lib/savedir.c:129
0x0000fd09      4c89ff         mov rdi, r15
0x0000fd0c      4c03642410     add r12, qword [rsp + 0x10]
0x0000fd11      48894c2430     mov qword [rsp + 0x30], rcx
0x0000fd16      e825250000     call sym.xstrdup
0x0000fd1b      488b4c2430     mov rcx, qword [rsp + 0x30]             ; ../coreutils-8.31/lib/savedir.c:131
0x0000fd20      4c03742418     add r14, qword [rsp + 0x18]
0x0000fd25      49890424       mov qword [r12], rax                    ; ../coreutils-8.31/lib/savedir.c:129
0x0000fd29      488b01         mov rax, qword [rcx]                    ; ../coreutils-8.31/lib/savedir.c:131
0x0000fd2c      4989442408     mov qword [r12 + 8], rax
0x0000fd31      4c8b642438     mov r12, qword [rsp + 0x38]             ; ../coreutils-8.31/lib/savedir.c:133
0x0000fd36      e959ffffff     jmp 0xfc94
0x0000fd3b      0f1f440000     nop dword [rax + rax]
0x0000fd40      0fb64115       movzx eax, byte [rcx + 0x15]
0x0000fd44      e947ffffff     jmp 0xfc90
0x0000fd49      0f1f80000000.  nop dword [rax]
0x0000fd50      8b5d00         mov ebx, dword [rbp]                    ; ../coreutils-8.31/lib/savedir.c:151
0x0000fd53      85db           test ebx, ebx                           ; ../coreutils-8.31/lib/savedir.c:152
0x0000fd55      0f85e5010000   jne 0xff40
0x0000fd5b      48837c240800   cmp qword [rsp + 8], 0                  ; ../coreutils-8.31/lib/savedir.c:160
0x0000fd61      0f84a9000000   je 0xfe10
0x0000fd67      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/savedir.c:164
0x0000fd6a      498d5e01       lea rbx, [r14 + 1]
0x0000fd6e      7530           jne 0xfda0
0x0000fd70      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/savedir.c:166
0x0000fd73      e898220000     call sym.xmalloc
0x0000fd78      4989c5         mov r13, rax
0x0000fd7b      4889c3         mov rbx, rax
0x0000fd7e      488b7c2410     mov rdi, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/savedir.c:174
0x0000fd83      e84833ffff     call sym..plt.got
0x0000fd88      c60300         mov byte [rbx], 0                       ; ../coreutils-8.31/lib/savedir.c:179
0x0000fd8b      4883c448       add rsp, 0x48                           ; ../coreutils-8.31/lib/savedir.c:181
0x0000fd8f      4c89e8         mov rax, r13
0x0000fd92      5b             pop rbx
0x0000fd93      5d             pop rbp
0x0000fd94      415c           pop r12
0x0000fd96      415d           pop r13
0x0000fd98      415e           pop r14
0x0000fd9a      415f           pop r15
0x0000fd9c      c3             ret
0x0000fd9d      0f1f00         nop dword [rax]
0x0000fda0      4c8b7c2410     mov r15, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/savedir.c:165
0x0000fda5      488b4c2408     mov rcx, qword [rsp + 8]
0x0000fdaa      4c89e6         mov rsi, r12
0x0000fdad      ba10000000     mov edx, 0x10
0x0000fdb2      49c1e404       shl r12, 4
0x0000fdb6      4c89ff         mov rdi, r15
0x0000fdb9      4c89fd         mov rbp, r15
0x0000fdbc      4d01fc         add r12, r15
0x0000fdbf      e81c2cffff     call sym.imp.qsort
0x0000fdc4      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/savedir.c:166
0x0000fdc7      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/savedir.c:167
0x0000fdc9      e842220000     call sym.xmalloc                        ; ../coreutils-8.31/lib/savedir.c:166
0x0000fdce      4989c5         mov r13, rax
0x0000fdd1      0f1f80000000.  nop dword [rax]
0x0000fdd8      488b7500       mov rsi, qword [rbp]                    ; string_fortified.h:97   return __builtin___stpcpy_chk (__dest, __src, __bos (__dest));
0x0000fddc      4d8d741d00     lea r14, [r13 + rbx]
0x0000fde1      4883c510       add rbp, 0x10                           ; ../coreutils-8.31/lib/savedir.c:-31
0x0000fde5      4c89f7         mov rdi, r14
0x0000fde8      e8c32cffff     call sym.imp.stpcpy
0x0000fded      488b7df0       mov rdi, qword [rbp - 0x10]             ; ../coreutils-8.31/lib/savedir.c:-138
0x0000fdf1      4c29f0         sub rax, r14
0x0000fdf4      488d5c0301     lea rbx, [rbx + rax + 1]
0x0000fdf9      e8d232ffff     call sym..plt.got
0x0000fdfe      4939ec         cmp r12, rbp
0x0000fe01      75d5           jne 0xfdd8
0x0000fe03      4c01eb         add rbx, r13
0x0000fe06      e973ffffff     jmp 0xfd7e
0x0000fe0b      0f1f440000     nop dword [rax + rax]
0x0000fe10      4c39742420     cmp qword [rsp + 0x20], r14
0x0000fe15      0f84e8000000   je 0xff03
0x0000fe1b      4b8d5c3500     lea rbx, [r13 + r14]
0x0000fe20      e963ffffff     jmp 0xfd88
0x0000fe25      0f1f00         nop dword [rax]
0x0000fe28      488b742418     mov rsi, qword [rsp + 0x18]
0x0000fe2d      488b442420     mov rax, qword [rsp + 0x20]
0x0000fe32      4889f2         mov rdx, rsi
0x0000fe35      4c29f0         sub rax, r14
0x0000fe38      4c01f2         add rdx, r14
0x0000fe3b      4889542430     mov qword [rsp + 0x30], rdx
0x0000fe40      0f92c2         setb dl
0x0000fe43      4839f0         cmp rax, rsi
0x0000fe46      0fb6d2         movzx edx, dl
0x0000fe49      774a           ja 0xfe95
0x0000fe4b      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/xalloc.h:-130
0x0000fe4e      0f85e5000000   jne 0xff39
0x0000fe54      4d85ed         test r13, r13
0x0000fe57      488b542430     mov rdx, qword [rsp + 0x30]
0x0000fe5c      0f84bd000000   je 0xff1f
0x0000fe62      48b853555555.  movabs rax, 0x5555555555555553          ; 'SUUUUUUU'
0x0000fe6c      4839c2         cmp rdx, rax
0x0000fe6f      0f87c4000000   ja 0xff39
0x0000fe75      4889d0         mov rax, rdx
0x0000fe78      48d1e8         shr rax, 1
0x0000fe7b      488d440201     lea rax, [rdx + rax + 1]
0x0000fe80      4889442420     mov qword [rsp + 0x20], rax
0x0000fe85      488b742420     mov rsi, qword [rsp + 0x20]
0x0000fe8a      4c89ef         mov rdi, r13
0x0000fe8d      e8de210000     call sym.xrealloc
0x0000fe92      4989c5         mov r13, rax
0x0000fe95      488b542418     mov rdx, qword [rsp + 0x18]
0x0000fe9a      4b8d7c3500     lea rdi, [r13 + r14]
0x0000fe9f      4c89fe         mov rsi, r15
0x0000fea2      e8d92effff     call sym.imp.memcpy
0x0000fea7      4c8b742430     mov r14, qword [rsp + 0x30]
0x0000feac      e9e3fdffff     jmp 0xfc94                              ; ../coreutils-8.31/lib/xalloc.h:-238
0x0000feb1      48837c241000   cmp qword [rsp + 0x10], 0
0x0000feb7      0f84a8000000   je 0xff65
0x0000febd      48b854555555.  movabs rax, 0x555555555555554
0x0000fec7      4939c4         cmp r12, rax
0x0000feca      776d           ja 0xff39
0x0000fecc      4c89e0         mov rax, r12
0x0000fecf      48d1e8         shr rax, 1
0x0000fed2      4803442438     add rax, qword [rsp + 0x38]
0x0000fed7      4889442428     mov qword [rsp + 0x28], rax
0x0000fedc      488b742428     mov rsi, qword [rsp + 0x28]
0x0000fee1      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000fee6      48894c2430     mov qword [rsp + 0x30], rcx
0x0000feeb      48c1e604       shl rsi, 4
0x0000feef      e87c210000     call sym.xrealloc
0x0000fef4      488b4c2430     mov rcx, qword [rsp + 0x30]
0x0000fef9      4889442410     mov qword [rsp + 0x10], rax
0x0000fefe      e902feffff     jmp 0xfd05
0x0000ff03      488b5c2420     mov rbx, qword [rsp + 0x20]
0x0000ff08      4c89ef         mov rdi, r13
0x0000ff0b      488d7301       lea rsi, [rbx + 1]
0x0000ff0f      e85c210000     call sym.xrealloc
0x0000ff14      4989c5         mov r13, rax
0x0000ff17      4801c3         add rbx, rax
0x0000ff1a      e969feffff     jmp 0xfd88                              ; ../coreutils-8.31/lib/xalloc.h:-247
0x0000ff1f      4885d2         test rdx, rdx
0x0000ff22      b880000000     mov eax, 0x80
0x0000ff27      480f45c2       cmovne rax, rdx
0x0000ff2b      4885c0         test rax, rax
0x0000ff2e      4889442420     mov qword [rsp + 0x20], rax
0x0000ff33      0f894cffffff   jns 0xfe85
0x0000ff39      e822230000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/savedir.c:-283
0x0000ff3e      6690           nop
0x0000ff40      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000ff45      e88631ffff     call sym..plt.got
0x0000ff4a      4c89ef         mov rdi, r13
0x0000ff4d      4531ed         xor r13d, r13d
0x0000ff50      e87b31ffff     call sym..plt.got
0x0000ff55      895d00         mov dword [rbp], ebx
0x0000ff58      e92efeffff     jmp 0xfd8b
0x0000ff5d      4531ed         xor r13d, r13d
0x0000ff60      e926feffff     jmp 0xfd8b
0x0000ff65      4d85e4         test r12, r12
0x0000ff68      b808000000     mov eax, 8
0x0000ff6d      ba10000000     mov edx, 0x10
0x0000ff72      490f45c4       cmovne rax, r12
0x0000ff76      31f6           xor esi, esi
0x0000ff78      4889c7         mov rdi, rax
0x0000ff7b      4889442428     mov qword [rsp + 0x28], rax
0x0000ff80      4889d0         mov rax, rdx
0x0000ff83      48f7e7         mul rdi
0x0000ff86      7019           jo 0xffa1                               ; ../coreutils-8.31/lib/savedir.c:-378
0x0000ff88      4885c0         test rax, rax
0x0000ff8b      78ac           js 0xff39
0x0000ff8d      4885f6         test rsi, rsi
0x0000ff90      75a7           jne 0xff39
0x0000ff92      498d442401     lea rax, [r12 + 1]
0x0000ff97      4889442438     mov qword [rsp + 0x38], rax
0x0000ff9c      e93bffffff     jmp 0xfedc
0x0000ffa1      be01000000     mov esi, 1
0x0000ffa6      ebe0           jmp 0xff88                              ; ../coreutils-8.31/lib/savedir.c:-372
0x0000ffa8      0f1f84000000.  nop dword [rax + rax]
;-- savedir:
0x0000ffb0      4154           push r12
0x0000ffb2      55             push rbp                                ; ../coreutils-8.31/lib/savedir.c:-362
0x0000ffb3      89f5           mov ebp, esi
0x0000ffb5      53             push rbx
0x0000ffb6      e8852e0000     call sym.opendir_safer
0x0000ffbb      4885c0         test rax, rax
0x0000ffbe      7428           je 0xffe8                               ; ../coreutils-8.31/lib/savedir.c:-375
0x0000ffc0      89ee           mov esi, ebp
0x0000ffc2      4889c3         mov rbx, rax
0x0000ffc5      4889c7         mov rdi, rax
0x0000ffc8      e863fcffff     call sym.streamsavedir
0x0000ffcd      4889df         mov rdi, rbx
0x0000ffd0      4889c5         mov rbp, rax
0x0000ffd3      e8882cffff     call sym.imp.closedir
0x0000ffd8      85c0           test eax, eax
0x0000ffda      7514           jne 0xfff0
0x0000ffdc      4889e8         mov rax, rbp
0x0000ffdf      5b             pop rbx
0x0000ffe0      5d             pop rbp                                 ; ../coreutils-8.31/lib/savedir.c:-366
0x0000ffe1      415c           pop r12
0x0000ffe3      c3             ret
0x0000ffe4      0f1f4000       nop dword [rax]
0x0000ffe8      31ed           xor ebp, ebp
0x0000ffea      ebf0           jmp 0xffdc
0x0000ffec      0f1f4000       nop dword [rax]
0x0000fff0      e85b29ffff     call sym.imp.__errno_location
0x0000fff5      448b20         mov r12d, dword [rax]
0x0000fff8      4889c3         mov rbx, rax
0x0000fffb      4889ef         mov rdi, rbp
0x0000fffe      e8cd30ffff     call sym..plt.got
0x00010003      31ed           xor ebp, ebp
0x00010005      448923         mov dword [rbx], r12d
0x00010008      ebd2           jmp 0xffdc
0x0001000a      660f1f440000   nop word [rax + rax]
;-- savewd_init:
0x00010010      c70700000000   mov dword [rdi], 0
0x00010016      c3             ret
0x00010017      660f1f840000.  nop word [rax + rax]
;-- savewd_errno:
0x00010020      31c0           xor eax, eax
0x00010022      833f04         cmp dword [rdi], 4
0x00010025      7409           je 0x10030
0x00010027      f3c3           ret
0x00010029      0f1f80000000.  nop dword [rax]
0x00010030      8b4704         mov eax, dword [rdi + 4]
0x00010033      c3             ret
0x00010034      6690           nop
0x00010036      662e0f1f8400.  nop word cs:[rax + rax]
;-- savewd_chdir:
0x00010040      4885c9         test rcx, rcx
0x00010043      4156           push r14
0x00010045      4189d6         mov r14d, edx
0x00010048      4155           push r13
0x0001004a      4989f5         mov r13, rsi
0x0001004d      4154           push r12
0x0001004f      4989fc         mov r12, rdi
0x00010052      55             push rbp
0x00010053      4889cd         mov rbp, rcx
0x00010056      53             push rbx
0x00010057      0f841b010000   je 0x10178
0x0001005d      89d6           mov esi, edx
0x0001005f      4c89ef         mov rdi, r13
0x00010062      c1e611         shl esi, 0x11
0x00010065      81e600000200   and esi, 0x20000
0x0001006b      81ce00090100   or esi, 0x10900
0x00010071      e8fa29ffff     call sym.imp.__open_2
0x00010076      894500         mov dword [rbp], eax
0x00010079      89c3           mov ebx, eax
0x0001007b      e8d028ffff     call sym.imp.__errno_location
0x00010080      8b00           mov eax, dword [rax]
0x00010082      894504         mov dword [rbp + 4], eax
0x00010085      85db           test ebx, ebx
0x00010087      783f           js 0x100c8
0x00010089      4183e602       and r14d, 2
0x0001008d      7447           je 0x100d6
0x0001008f      4885ed         test rbp, rbp
0x00010092      0f94c0         sete al
0x00010095      4531f6         xor r14d, r14d
0x00010098      85db           test ebx, ebx
0x0001009a      781a           js 0x100b6
0x0001009c      84c0           test al, al
0x0001009e      7416           je 0x100b6
0x000100a0      e8ab28ffff     call sym.imp.__errno_location
0x000100a5      448b20         mov r12d, dword [rax]
0x000100a8      4889c5         mov rbp, rax
0x000100ab      89df           mov edi, ebx
0x000100ad      e87e2bffff     call sym.imp.close
0x000100b2      44896500       mov dword [rbp], r12d
0x000100b6      5b             pop rbx
0x000100b7      4489f0         mov eax, r14d
0x000100ba      5d             pop rbp
0x000100bb      415c           pop r12
0x000100bd      415d           pop r13
0x000100bf      415e           pop r14
0x000100c1      c3             ret
0x000100c2      660f1f440000   nop word [rax + rax]
0x000100c8      e88328ffff     call sym.imp.__errno_location
0x000100cd      83380d         cmp dword [rax], 0xd
0x000100d0      0f85ca010000   jne 0x102a0
0x000100d6      418b0c24       mov ecx, dword [r12]
0x000100da      83f905         cmp ecx, 5
0x000100dd      0f87e7010000   ja 0x102ca
0x000100e3      b801000000     mov eax, 1
0x000100e8      48d3e0         shl rax, cl
0x000100eb      a836           test al, 0x36
0x000100ed      7535           jne 0x10124
0x000100ef      a808           test al, 8
0x000100f1      0f85c9000000   jne 0x101c0
0x000100f7      85c9           test ecx, ecx
0x000100f9      0f85cb010000   jne 0x102ca
0x000100ff      488d3d5d7d00.  lea rdi, [0x00017e63]                   ; "."
0x00010106      31f6           xor esi, esi
0x00010108      31c0           xor eax, eax
0x0001010a      e881b3ffff     call sym.open_safer
0x0001010f      85c0           test eax, eax
0x00010111      0f8809010000   js 0x10220
0x00010117      41c704240100.  mov dword [r12], 1
0x0001011f      4189442404     mov dword [r12 + 4], eax
0x00010124      85db           test ebx, ebx
0x00010126      7830           js 0x10158
0x00010128      89df           mov edi, ebx
0x0001012a      e8312dffff     call sym.imp.fchdir
0x0001012f      85c0           test eax, eax
0x00010131      4189c6         mov r14d, eax
0x00010134      757a           jne 0x101b0
0x00010136      41833c2405     cmp dword [r12], 5
0x0001013b      0f876a010000   ja 0x102ab
0x00010141      418b0424       mov eax, dword [r12]
0x00010145      488d15048700.  lea rdx, [0x00018850]
0x0001014c      48630482       movsxd rax, dword [rdx + rax*4]
0x00010150      4801d0         add rax, rdx
0x00010153      ffe0           jmp rax
0x00010155      0f1f00         nop dword [rax]
0x00010158      4c89ef         mov rdi, r13
0x0001015b      e8c029ffff     call sym.imp.chdir
0x00010160      85c0           test eax, eax
0x00010162      4189c6         mov r14d, eax
0x00010165      74cf           je 0x10136
0x00010167      5b             pop rbx
0x00010168      4489f0         mov eax, r14d
0x0001016b      5d             pop rbp
0x0001016c      415c           pop r12
0x0001016e      415d           pop r13
0x00010170      415e           pop r14
0x00010172      c3             ret
0x00010173      0f1f440000     nop dword [rax + rax]
0x00010178      f6c201         test dl, 1
0x0001017b      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x00010180      0f8450ffffff   je 0x100d6
0x00010186      89d6           mov esi, edx
0x00010188      4c89ef         mov rdi, r13
0x0001018b      c1e611         shl esi, 0x11
0x0001018e      81e600000200   and esi, 0x20000
0x00010194      81ce00090100   or esi, 0x10900
0x0001019a      e8d128ffff     call sym.imp.__open_2
0x0001019f      89c3           mov ebx, eax
0x000101a1      e9dffeffff     jmp 0x10085
0x000101a6      662e0f1f8400.  nop word cs:[rax + rax]
0x000101b0      4885ed         test rbp, rbp
0x000101b3      0f94c0         sete al
0x000101b6      e9ddfeffff     jmp 0x10098
0x000101bb      0f1f440000     nop dword [rax + rax]
0x000101c0      418b542404     mov edx, dword [r12 + 4]
0x000101c5      85d2           test edx, edx
0x000101c7      0f888c000000   js 0x10259
0x000101cd      85db           test ebx, ebx
0x000101cf      0f8953ffffff   jns 0x10128
0x000101d5      eb81           jmp 0x10158
0x000101d7      660f1f840000.  nop word [rax + rax]
0x000101e0      41c704240200.  mov dword [r12], 2
0x000101e8      e9a2feffff     jmp 0x1008f
0x000101ed      0f1f00         nop dword [rax]
0x000101f0      418b442404     mov eax, dword [r12 + 4]
0x000101f5      85c0           test eax, eax
0x000101f7      0f8492feffff   je 0x1008f
0x000101fd      488d0dbc8600.  lea rcx, obj.__PRETTY_FUNCTION__.4461   ; 0x188c0 ; "savewd_chdir"
0x00010204      488d35258600.  lea rsi, str..._coreutils_8.31_lib_savewd.c ; 0x18830 ; "../coreutils-8.31/lib/savewd.c"
0x0001020b      488d3dd68500.  lea rdi, [0x000187e8]                   ; "wd->val.child == 0"
0x00010212      ba9b000000     mov edx, 0x9b
0x00010217      e8c429ffff     call sym.imp.__assert_fail
0x0001021c      0f1f4000       nop dword [rax]
0x00010220      e82b27ffff     call sym.imp.__errno_location
0x00010225      8b00           mov eax, dword [rax]
0x00010227      83f80d         cmp eax, 0xd
0x0001022a      741c           je 0x10248
0x0001022c      83f874         cmp eax, 0x74
0x0001022f      7417           je 0x10248
0x00010231      41c704240400.  mov dword [r12], 4
0x00010239      4189442404     mov dword [r12 + 4], eax
0x0001023e      e9e1feffff     jmp 0x10124
0x00010243      0f1f440000     nop dword [rax + rax]
0x00010248      41c704240300.  mov dword [r12], 3
0x00010250      41c7442404ff.  mov dword [r12 + 4], 0xffffffff         ; [0xffffffff:4]=-1 ; -1
0x00010259      e8422effff     call sym.imp.fork
0x0001025e      83f800         cmp eax, 0
0x00010261      4189442404     mov dword [r12 + 4], eax
0x00010266      0f84b8feffff   je 0x10124
0x0001026c      b801000000     mov eax, 1
0x00010271      41befeffffff   mov r14d, 0xfffffffe                    ; 4294967294
0x00010277      0f8f1bfeffff   jg 0x10098
0x0001027d      41c704240400.  mov dword [r12], 4
0x00010285      e8c626ffff     call sym.imp.__errno_location
0x0001028a      8b00           mov eax, dword [rax]
0x0001028c      4189442404     mov dword [r12 + 4], eax
0x00010291      e98efeffff     jmp 0x10124
0x00010296      662e0f1f8400.  nop word cs:[rax + rax]
0x000102a0      41beffffffff   mov r14d, 0xffffffff                    ; -1
0x000102a6      e90bfeffff     jmp 0x100b6
0x000102ab      488d0d0e8600.  lea rcx, obj.__PRETTY_FUNCTION__.4461   ; 0x188c0 ; "savewd_chdir"
0x000102b2      488d35778500.  lea rsi, str..._coreutils_8.31_lib_savewd.c ; 0x18830 ; "../coreutils-8.31/lib/savewd.c"
0x000102b9      488d3d678500.  lea rdi, [0x00018827]                   ; "0"
0x000102c0      ba9f000000     mov edx, 0x9f
0x000102c5      e81629ffff     call sym.imp.__assert_fail
0x000102ca      488d0ddf8500.  lea rcx, obj.__PRETTY_FUNCTION__.4446   ; 0x188b0 ; "savewd_save"
0x000102d1      488d35588500.  lea rsi, str..._coreutils_8.31_lib_savewd.c ; 0x18830 ; "../coreutils-8.31/lib/savewd.c"
0x000102d8      488d3d488500.  lea rdi, [0x00018827]                   ; "0"
0x000102df      ba63000000     mov edx, 0x63                           ; 'c'
0x000102e4      e8f728ffff     call sym.imp.__assert_fail
0x000102e9      0f1f80000000.  nop dword [rax]
;-- savewd_restore:
0x000102f0      4154           push r12
0x000102f2      55             push rbp
0x000102f3      53             push rbx
0x000102f4      4883ec10       sub rsp, 0x10
0x000102f8      64488b042528.  mov rax, qword fs:[0x28]
0x00010301      4889442408     mov qword [rsp + 8], rax
0x00010306      31c0           xor eax, eax
0x00010308      833f04         cmp dword [rdi], 4
0x0001030b      0f870c010000   ja 0x1041d
0x00010311      8b07           mov eax, dword [rdi]
0x00010313      488d154e8500.  lea rdx, [0x00018868]
0x0001031a      4889fb         mov rbx, rdi
0x0001031d      48630482       movsxd rax, dword [rdx + rax*4]
0x00010321      4801d0         add rax, rdx
0x00010324      ffe0           jmp rax
0x00010326      662e0f1f8400.  nop word cs:[rax + rax]
0x00010330      8b6f04         mov ebp, dword [rdi + 4]
0x00010333      83fd00         cmp ebp, 0
0x00010336      0f8400010000   je 0x1043c
0x0001033c      4c8d642404     lea r12, [rsp + 4]
0x00010341      7f47           jg 0x1038a
0x00010343      31c0           xor eax, eax
0x00010345      488b4c2408     mov rcx, qword [rsp + 8]
0x0001034a      6448330c2528.  xor rcx, qword fs:[0x28]
0x00010353      0f85bf000000   jne 0x10418
0x00010359      4883c410       add rsp, 0x10
0x0001035d      5b             pop rbx
0x0001035e      5d             pop rbp
0x0001035f      415c           pop r12
0x00010361      c3             ret
0x00010362      660f1f440000   nop word [rax + rax]
0x00010368      448b6704       mov r12d, dword [rdi + 4]
0x0001036c      e8df25ffff     call sym.imp.__errno_location
0x00010371      4889c5         mov rbp, rax
0x00010374      44896500       mov dword [rbp], r12d
0x00010378      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0001037d      ebc6           jmp 0x10345
0x0001037f      90             nop
0x00010380      e8cb25ffff     call sym.imp.__errno_location
0x00010385      833804         cmp dword [rax], 4
0x00010388      756f           jne 0x103f9
0x0001038a      31d2           xor edx, edx
0x0001038c      4c89e6         mov rsi, r12
0x0001038f      89ef           mov edi, ebp
0x00010391      e8aa2bffff     call sym.imp.waitpid
0x00010396      85c0           test eax, eax
0x00010398      78e6           js 0x10380
0x0001039a      8b442404       mov eax, dword [rsp + 4]
0x0001039e      c74304ffffff.  mov dword [rbx + 4], 0xffffffff         ; [0xffffffff:4]=-1 ; -1
0x000103a5      89c7           mov edi, eax
0x000103a7      83e77f         and edi, 0x7f
0x000103aa      7409           je 0x103b5
0x000103ac      e86f25ffff     call sym.imp.raise
0x000103b1      8b442404       mov eax, dword [rsp + 4]
0x000103b5      0fb6c4         movzx eax, ah
0x000103b8      eb8b           jmp 0x10345
0x000103ba      660f1f440000   nop word [rax + rax]
0x000103c0      8b7f04         mov edi, dword [rdi + 4]
0x000103c3      e8982affff     call sym.imp.fchdir
0x000103c8      85c0           test eax, eax
0x000103ca      750b           jne 0x103d7
0x000103cc      c70301000000   mov dword [rbx], 1
0x000103d2      e96effffff     jmp 0x10345
0x000103d7      e87425ffff     call sym.imp.__errno_location
0x000103dc      8b7b04         mov edi, dword [rbx + 4]
0x000103df      448b20         mov r12d, dword [rax]
0x000103e2      4889c5         mov rbp, rax
0x000103e5      e84628ffff     call sym.imp.close
0x000103ea      c70304000000   mov dword [rbx], 4
0x000103f0      44896304       mov dword [rbx + 4], r12d
0x000103f4      e97bffffff     jmp 0x10374
0x000103f9      488d0da08400.  lea rcx, obj.__PRETTY_FUNCTION__.4477   ; 0x188a0 ; "savewd_restore"
0x00010400      488d35298400.  lea rsi, str..._coreutils_8.31_lib_savewd.c ; 0x18830 ; "../coreutils-8.31/lib/savewd.c"
0x00010407      488d3ded8300.  lea rdi, str.errno_location________4    ; 0x187fb ; "(*__errno_location ()) == 4"
0x0001040e      bad8000000     mov edx, 0xd8
0x00010413      e8c827ffff     call sym.imp.__assert_fail
0x00010418      e81327ffff     call sym.imp.__stack_chk_fail
0x0001041d      488d0d7c8400.  lea rcx, obj.__PRETTY_FUNCTION__.4477   ; 0x188a0 ; "savewd_restore"
0x00010424      488d35058400.  lea rsi, str..._coreutils_8.31_lib_savewd.c ; 0x18830 ; "../coreutils-8.31/lib/savewd.c"
0x0001042b      488d3df58300.  lea rdi, [0x00018827]                   ; "0"
0x00010432      bae2000000     mov edx, 0xe2
0x00010437      e8a427ffff     call sym.imp.__assert_fail
0x0001043c      89f7           mov edi, esi
0x0001043e      e83d25ffff     call sym.imp._exit
0x00010443      0f1f00         nop dword [rax]
0x00010446      662e0f1f8400.  nop word cs:[rax + rax]
;-- savewd_finish:
0x00010450      53             push rbx
0x00010451      833f04         cmp dword [rdi], 4
0x00010454      7750           ja 0x104a6
0x00010456      8b07           mov eax, dword [rdi]
0x00010458      488d151d8400.  lea rdx, [0x0001887c]
0x0001045f      4889fb         mov rbx, rdi
0x00010462      48630482       movsxd rax, dword [rdx + rax*4]
0x00010466      4801d0         add rax, rdx
0x00010469      ffe0           jmp rax
0x0001046b      0f1f440000     nop dword [rax + rax]
0x00010470      8b7f04         mov edi, dword [rdi + 4]
0x00010473      e8b827ffff     call sym.imp.close
0x00010478      c70305000000   mov dword [rbx], 5
0x0001047e      5b             pop rbx
0x0001047f      c3             ret
0x00010480      8b4704         mov eax, dword [rdi + 4]
0x00010483      85c0           test eax, eax
0x00010485      78f1           js 0x10478
0x00010487      488d0d028400.  lea rcx, obj.__PRETTY_FUNCTION__.4491   ; 0x18890 ; "savewd_finish"
0x0001048e      488d359b8300.  lea rsi, str..._coreutils_8.31_lib_savewd.c ; 0x18830 ; "../coreutils-8.31/lib/savewd.c"
0x00010495      488d3d7b8300.  lea rdi, str.wd__val.child___0          ; 0x18817 ; "wd->val.child < 0"
0x0001049c      baf7000000     mov edx, 0xf7
0x000104a1      e83a27ffff     call sym.imp.__assert_fail
0x000104a6      488d0de38300.  lea rcx, obj.__PRETTY_FUNCTION__.4491   ; 0x18890 ; "savewd_finish"
0x000104ad      488d357c8300.  lea rsi, str..._coreutils_8.31_lib_savewd.c ; 0x18830 ; "../coreutils-8.31/lib/savewd.c"
0x000104b4      488d3d6c8300.  lea rdi, [0x00018827]                   ; "0"
0x000104bb      bafb000000     mov edx, 0xfb
0x000104c0      e81b27ffff     call sym.imp.__assert_fail
0x000104c5      90             nop
0x000104c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- savewd_process_files:
0x000104d0      4157           push r15
0x000104d2      4156           push r14
0x000104d4      89f8           mov eax, edi
0x000104d6      4155           push r13
0x000104d8      4154           push r12
0x000104da      83e801         sub eax, 1
0x000104dd      55             push rbp
0x000104de      53             push rbx
0x000104df      4989cc         mov r12, rcx
0x000104e2      4889d5         mov rbp, rdx
0x000104e5      4883ec38       sub rsp, 0x38
0x000104e9      64488b0c2528.  mov rcx, qword fs:[0x28]
0x000104f2      48894c2428     mov qword [rsp + 0x28], rcx
0x000104f7      31c9           xor ecx, ecx
0x000104f9      85c0           test eax, eax
0x000104fb      897c2418       mov dword [rsp + 0x18], edi
0x000104ff      4889742410     mov qword [rsp + 0x10], rsi
0x00010504      c74424200000.  mov dword [rsp + 0x20], 0
0x0001050c      8944241c       mov dword [rsp + 0x1c], eax
0x00010510      7840           js 0x10552
0x00010512      4189c5         mov r13d, eax
0x00010515      4898           cdqe
0x00010517      488d14c50000.  lea rdx, [rax*8]
0x0001051f      488b04c6       mov rax, qword [rsi + rax*8]
0x00010523      80382f         cmp byte [rax], 0x2f
0x00010526      0f85ac000000   jne 0x105d8
0x0001052c      488d4416f8     lea rax, [rsi + rdx - 8]
0x00010531      eb15           jmp 0x10548
0x00010533      0f1f440000     nop dword [rax + rax]
0x00010538      488b10         mov rdx, qword [rax]
0x0001053b      4883e808       sub rax, 8
0x0001053f      803a2f         cmp byte [rdx], 0x2f
0x00010542      0f8590000000   jne 0x105d8
0x00010548      4183ed01       sub r13d, 1
0x0001054c      4183fdff       cmp r13d, 0xffffffff
0x00010550      75e6           jne 0x10538
0x00010552      488d5c2420     lea rbx, [rsp + 0x20]
0x00010557      4531ff         xor r15d, r15d
0x0001055a      4531ed         xor r13d, r13d
0x0001055d      4889df         mov rdi, rbx
0x00010560      e8ebfeffff     call sym.savewd_finish
0x00010565      44396c2418     cmp dword [rsp + 0x18], r13d
0x0001056a      7e3f           jle 0x105ab
0x0001056c      8b4c241c       mov ecx, dword [rsp + 0x1c]
0x00010570      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00010575      4963c5         movsxd rax, r13d
0x00010578      4429e9         sub ecx, r13d
0x0001057b      4c8d34c7       lea r14, [rdi + rax*8]
0x0001057f      4989cd         mov r13, rcx
0x00010582      4901c5         add r13, rax
0x00010585      4e8d6cef08     lea r13, [rdi + r13*8 + 8]
0x0001058a      660f1f440000   nop word [rax + rax]
0x00010590      498b3e         mov rdi, qword [r14]
0x00010593      4c89e2         mov rdx, r12
0x00010596      4889de         mov rsi, rbx
0x00010599      ffd5           call rbp
0x0001059b      4139c7         cmp r15d, eax
0x0001059e      440f4cf8       cmovl r15d, eax
0x000105a2      4983c608       add r14, 8
0x000105a6      4d39ee         cmp r14, r13
0x000105a9      75e5           jne 0x10590
0x000105ab      488b4c2428     mov rcx, qword [rsp + 0x28]
0x000105b0      6448330c2528.  xor rcx, qword fs:[0x28]
0x000105b9      4489f8         mov eax, r15d
0x000105bc      0f8595000000   jne 0x10657
0x000105c2      4883c438       add rsp, 0x38
0x000105c6      5b             pop rbx
0x000105c7      5d             pop rbp
0x000105c8      415c           pop r12
0x000105ca      415d           pop r13
0x000105cc      415e           pop r14
0x000105ce      415f           pop r15
0x000105d0      c3             ret
0x000105d1      0f1f80000000.  nop dword [rax]
0x000105d8      4585ed         test r13d, r13d
0x000105db      0f8e71ffffff   jle 0x10552
0x000105e1      488b4c2410     mov rcx, qword [rsp + 0x10]
0x000105e6      418d45ff       lea eax, [r13 - 1]
0x000105ea      4531ff         xor r15d, r15d
0x000105ed      488d5c2420     lea rbx, [rsp + 0x20]
0x000105f2      488d44c108     lea rax, [rcx + rax*8 + 8]
0x000105f7      4989ce         mov r14, rcx
0x000105fa      4889442408     mov qword [rsp + 8], rax
0x000105ff      31c0           xor eax, eax
0x00010601      eb45           jmp 0x10648
0x00010603      0f1f440000     nop dword [rax + rax]
0x00010608      4c89e2         mov rdx, r12
0x0001060b      4889de         mov rsi, rbx
0x0001060e      498b3e         mov rdi, qword [r14]
0x00010611      ffd5           call rbp
0x00010613      4139c7         cmp r15d, eax
0x00010616      440f4cf8       cmovl r15d, eax
0x0001061a      498b4608       mov rax, qword [r14 + 8]
0x0001061e      80382f         cmp byte [rax], 0x2f
0x00010621      7412           je 0x10635
0x00010623      4489fe         mov esi, r15d
0x00010626      4889df         mov rdi, rbx
0x00010629      e8c2fcffff     call sym.savewd_restore
0x0001062e      4139c7         cmp r15d, eax
0x00010631      440f4cf8       cmovl r15d, eax
0x00010635      4983c608       add r14, 8
0x00010639      4c3b742408     cmp r14, qword [rsp + 8]
0x0001063e      0f8419ffffff   je 0x1055d
0x00010644      8b442420       mov eax, dword [rsp + 0x20]
0x00010648      83f803         cmp eax, 3
0x0001064b      75bb           jne 0x10608
0x0001064d      8b442424       mov eax, dword [rsp + 0x24]
0x00010651      85c0           test eax, eax
0x00010653      7fc5           jg 0x1061a
0x00010655      ebb1           jmp 0x10608
0x00010657      e8d424ffff     call sym.imp.__stack_chk_fail
0x0001065c      0f1f4000       nop dword [rax]
;-- try_nocreate:
0x00010660      53             push rbx                                ; ../coreutils-8.31/lib/tempname.c:284
0x00010661      4889fe         mov rsi, rdi
0x00010664      bf01000000     mov edi, 1                              ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x00010669      4881eca00000.  sub rsp, 0xa0                           ; ../coreutils-8.31/lib/tempname.c:284
0x00010670      4889e2         mov rdx, rsp                            ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x00010673      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/tempname.c:284
0x0001067c      488984249800.  mov qword [rsp + 0x98], rax
0x00010684      31c0           xor eax, eax
0x00010686      e87524ffff     call sym.imp.__lxstat                   ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x0001068b      89c3           mov ebx, eax
0x0001068d      e8be22ffff     call sym.imp.__errno_location
0x00010692      85db           test ebx, ebx                           ; ../coreutils-8.31/lib/tempname.c:287
0x00010694      741a           je 0x106b0
0x00010696      8b10           mov edx, dword [rax]
0x00010698      83fa4b         cmp edx, 0x4b
0x0001069b      7413           je 0x106b0
0x0001069d      31c0           xor eax, eax
0x0001069f      83fa02         cmp edx, 2
0x000106a2      0f95c0         setne al
0x000106a5      f7d8           neg eax
0x000106a7      eb12           jmp 0x106bb
0x000106a9      0f1f80000000.  nop dword [rax]
0x000106b0      c70011000000   mov dword [rax], 0x11                   ; ../coreutils-8.31/lib/tempname.c:288 ; [0x11:4]=0x1003e00
0x000106b6      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000106bb      488b8c249800.  mov rcx, qword [rsp + 0x98]             ; ../coreutils-8.31/lib/tempname.c:290
0x000106c3      6448330c2528.  xor rcx, qword fs:[0x28]
0x000106cc      7509           jne 0x106d7
0x000106ce      4881c4a00000.  add rsp, 0xa0
0x000106d5      5b             pop rbx
0x000106d6      c3             ret
0x000106d7      e85424ffff     call sym.imp.__stack_chk_fail
0x000106dc      0f1f4000       nop dword [rax]
;-- try_dir:
0x000106e0      bec0010000     mov esi, 0x1c0                          ; ../coreutils-8.31/lib/tempname.c:278
0x000106e5      e9d622ffff     jmp sym.imp.mkdir
0x000106ea      660f1f440000   nop word [rax + rax]
;-- try_file:
0x000106f0      8b36           mov esi, dword [rsi]                    ; ../coreutils-8.31/lib/tempname.c:269
0x000106f2      ba80010000     mov edx, 0x180                          ; fcntl2.h:59   return __open_alias (__path, __oflag, __va_arg_pack ());
0x000106f7      31c0           xor eax, eax
0x000106f9      4080e63c       and sil, 0x3c                           ; ../coreutils-8.31/lib/tempname.c:273
0x000106fd      4080cec2       or sil, 0xc2                            ; ../coreutils-8.31/lib/tempname.c:271
0x00010701      e95a28ffff     jmp sym.imp.open                        ; fcntl2.h:59   return __open_alias (__path, __oflag, __va_arg_pack ());
0x00010706      662e0f1f8400.  nop word cs:[rax + rax]
;-- try_tempname_len:
0x00010710      4157           push r15                                ; ../coreutils-8.31/lib/tempname.c:190
0x00010712      4156           push r14
0x00010714      4989ff         mov r15, rdi
0x00010717      4155           push r13
0x00010719      4154           push r12
0x0001071b      4d89c6         mov r14, r8
0x0001071e      55             push rbp
0x0001071f      53             push rbx
0x00010720      89f5           mov ebp, esi
0x00010722      4883ec38       sub rsp, 0x38
0x00010726      4889542418     mov qword [rsp + 0x18], rdx
0x0001072b      48893c24       mov qword [rsp], rdi
0x0001072f      48894c2420     mov qword [rsp + 0x20], rcx
0x00010734      e81722ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/tempname.c:195
0x00010739      4889442408     mov qword [rsp + 8], rax
0x0001073e      8b00           mov eax, dword [rax]
0x00010740      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/tempname.c:215
0x00010743      8944242c       mov dword [rsp + 0x2c], eax             ; ../coreutils-8.31/lib/tempname.c:195
0x00010747      e8a423ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/tempname.c:215
0x0001074c      4863f5         movsxd rsi, ebp                         ; ../coreutils-8.31/lib/tempname.c:216
0x0001074f      4a8d1436       lea rdx, [rsi + r14]
0x00010753      4839c2         cmp rdx, rax
0x00010756      0f870f010000   ja 0x1086b
0x0001075c      4c29f0         sub rax, r14                            ; ../coreutils-8.31/lib/tempname.c:217
0x0001075f      4889c3         mov rbx, rax
0x00010762      4829f3         sub rbx, rsi
0x00010765      488d356f7900.  lea rsi, [0x000180db]                   ; ../coreutils-8.31/lib/tempname.c:180 ; "X"
0x0001076c      498d041f       lea rax, [r15 + rbx]                    ; ../coreutils-8.31/lib/tempname.c:217
0x00010770      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/tempname.c:180
0x00010773      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/tempname.c:217
0x00010778      e8d324ffff     call sym.imp.strspn                     ; ../coreutils-8.31/lib/tempname.c:180
0x0001077d      4939c6         cmp r14, rax                            ; ../coreutils-8.31/lib/tempname.c:217
0x00010780      0f87e5000000   ja 0x1086b
0x00010786      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/tempname.c:228
0x00010788      4c89f6         mov rsi, r14
0x0001078b      e8502b0000     call sym.randint_all_new
0x00010790      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/tempname.c:229
0x00010793      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/tempname.c:228
0x00010796      0f84e1000000   je 0x1087d                              ; ../coreutils-8.31/lib/tempname.c:229
0x0001079c      488b0424       mov rax, qword [rsp]
0x000107a0      4c8d25998100.  lea r12, obj.letters                    ; 0x18940 ; "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
0x000107a7      41bdf8a20300   mov r13d, 0x3a2f8
0x000107ad      4c01f0         add rax, r14
0x000107b0      4801c3         add rbx, rax
0x000107b3      0f1f440000     nop dword [rax + rax]
0x000107b8      4d85f6         test r14, r14                           ; ../coreutils-8.31/lib/tempname.c:236
0x000107bb      4c8b7c2410     mov r15, qword [rsp + 0x10]
0x000107c0      7425           je 0x107e7
0x000107c2      660f1f440000   nop word [rax + rax]
0x000107c8      be3d000000     mov esi, 0x3d                           ; ../coreutils-8.31/lib/tempname.c:237 ; '='
0x000107cd      4889ef         mov rdi, rbp
0x000107d0      4983c701       add r15, 1
0x000107d4      e8572b0000     call sym.randint_genmax
0x000107d9      410fb60404     movzx eax, byte [r12 + rax]
0x000107de      418847ff       mov byte [r15 - 1], al
0x000107e2      4939df         cmp r15, rbx                            ; ../coreutils-8.31/lib/tempname.c:236
0x000107e5      75e1           jne 0x107c8
0x000107e7      488b742418     mov rsi, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/tempname.c:239
0x000107ec      488b3c24       mov rdi, qword [rsp]
0x000107f0      488b442420     mov rax, qword [rsp + 0x20]
0x000107f5      ffd0           call rax
0x000107f7      85c0           test eax, eax                           ; ../coreutils-8.31/lib/tempname.c:240
0x000107f9      89c2           mov edx, eax                            ; ../coreutils-8.31/lib/tempname.c:239
0x000107fb      792c           jns 0x10829                             ; ../coreutils-8.31/lib/tempname.c:240
0x000107fd      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/tempname.c:245
0x00010802      8b08           mov ecx, dword [rax]
0x00010804      83f911         cmp ecx, 0x11
0x00010807      755b           jne 0x10864
0x00010809      4183ed01       sub r13d, 1                             ; ../coreutils-8.31/lib/tempname.c:232
0x0001080d      75a9           jne 0x107b8
0x0001080f      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/tempname.c:252
0x00010812      e8592c0000     call sym.randint_all_free
0x00010817      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/tempname.c:255
0x0001081c      baffffffff     mov edx, 0xffffffff                     ; ../coreutils-8.31/lib/tempname.c:256 ; -1
0x00010821      c70011000000   mov dword [rax], 0x11                   ; ../coreutils-8.31/lib/tempname.c:255 ; [0x11:4]=0x1003e00
0x00010827      eb2a           jmp 0x10853                             ; ../coreutils-8.31/lib/tempname.c:256
0x00010829      488b4c2408     mov rcx, qword [rsp + 8]                ; ../coreutils-8.31/lib/tempname.c:242
0x0001082e      8b44242c       mov eax, dword [rsp + 0x2c]
0x00010832      8901           mov dword [rcx], eax
0x00010834      89c1           mov ecx, eax                            ; ../coreutils-8.31/lib/tempname.c:243
0x00010836      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/tempname.c:261
0x00010839      89542410       mov dword [rsp + 0x10], edx
0x0001083d      890c24         mov dword [rsp], ecx
0x00010840      e82b2c0000     call sym.randint_all_free
0x00010845      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/tempname.c:262
0x0001084a      8b0c24         mov ecx, dword [rsp]
0x0001084d      8b542410       mov edx, dword [rsp + 0x10]             ; ../coreutils-8.31/lib/tempname.c:264
0x00010851      8908           mov dword [rax], ecx                    ; ../coreutils-8.31/lib/tempname.c:262
0x00010853      4883c438       add rsp, 0x38                           ; ../coreutils-8.31/lib/tempname.c:265
0x00010857      89d0           mov eax, edx
0x00010859      5b             pop rbx
0x0001085a      5d             pop rbp
0x0001085b      415c           pop r12
0x0001085d      415d           pop r13
0x0001085f      415e           pop r14
0x00010861      415f           pop r15
0x00010863      c3             ret
0x00010864      baffffffff     mov edx, 0xffffffff                     ; ../coreutils-8.31/lib/tempname.c:247 ; -1
0x00010869      ebcb           jmp 0x10836
0x0001086b      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/tempname.c:220
0x00010870      baffffffff     mov edx, 0xffffffff                     ; ../coreutils-8.31/lib/tempname.c:221 ; -1
0x00010875      c70016000000   mov dword [rax], 0x16                   ; ../coreutils-8.31/lib/tempname.c:220 ; [0x16:4]=0x3e300000
0x0001087b      ebd6           jmp 0x10853                             ; ../coreutils-8.31/lib/tempname.c:221
0x0001087d      baffffffff     mov edx, 0xffffffff                     ; ../coreutils-8.31/lib/tempname.c:230 ; -1
0x00010882      ebcf           jmp 0x10853
0x00010884      6690           nop                                     ; ../coreutils-8.31/lib/tempname.c:181
0x00010886      662e0f1f8400.  nop word cs:[rax + rax]
;-- gen_tempname_len:
0x00010890      4883ec18       sub rsp, 0x18
0x00010894      83f901         cmp ecx, 1
0x00010897      8954240c       mov dword [rsp + 0xc], edx
0x0001089b      7463           je 0x10900
0x0001089d      83f902         cmp ecx, 2
0x000108a0      7426           je 0x108c8
0x000108a2      85c9           test ecx, ecx
0x000108a4      743a           je 0x108e0
0x000108a6      488d0d738000.  lea rcx, obj.__PRETTY_FUNCTION__.5642   ; 0x18920 ; "gen_tempname_len"
0x000108ad      488d351c8000.  lea rsi, str..._coreutils_8.31_lib_tempname.c ; 0x188d0 ; "../coreutils-8.31/lib/tempname.c"
0x000108b4      488d3d3d8000.  lea rdi, str.invalid_KIND_in___gen_tempname ; 0x188f8 ; "! \"invalid KIND in __gen_tempname\""
0x000108bb      ba47010000     mov edx, 0x147
0x000108c0      e81b23ffff     call sym.imp.__assert_fail
0x000108c5      0f1f00         nop dword [rax]
0x000108c8      488d54240c     lea rdx, [rsp + 0xc]
0x000108cd      488d0d8cfdff.  lea rcx, sym.try_nocreate               ; ../coreutils-8.31/lib/tempname.c:202 ; 0x10660 ; "SH\x89\xfe\xbf\x01"
0x000108d4      e837feffff     call sym.try_tempname_len
0x000108d9      4883c418       add rsp, 0x18
0x000108dd      c3             ret
0x000108de      6690           nop                                     ; ../coreutils-8.31/lib/tempname.c:203
0x000108e0      488d54240c     lea rdx, [rsp + 0xc]
0x000108e5      488d0d04feff.  lea rcx, sym.try_file                   ; 0x106f0
0x000108ec      e81ffeffff     call sym.try_tempname_len
0x000108f1      4883c418       add rsp, 0x18
0x000108f5      c3             ret
0x000108f6      662e0f1f8400.  nop word cs:[rax + rax]
0x00010900      488d54240c     lea rdx, [rsp + 0xc]
0x00010905      488d0dd4fdff.  lea rcx, sym.try_dir                    ; 0x106e0
0x0001090c      e8fffdffff     call sym.try_tempname_len
0x00010911      4883c418       add rsp, 0x18
0x00010915      c3             ret
0x00010916      662e0f1f8400.  nop word cs:[rax + rax]
;-- gen_tempname:
0x00010920      41b806000000   mov r8d, 6
0x00010926      e965ffffff     jmp sym.gen_tempname_len
0x0001092b      0f1f440000     nop dword [rax + rax]
;-- try_tempname:
0x00010930      41b806000000   mov r8d, 6
0x00010936      e9d5fdffff     jmp sym.try_tempname_len
0x0001093b      0f1f440000     nop dword [rax + rax]
;-- fd_safer:
0x00010940      4155           push r13                                ; ../coreutils-8.31/lib/fd-safer.c:38
0x00010942      4154           push r12
0x00010944      55             push rbp
0x00010945      53             push rbx
0x00010946      89fb           mov ebx, edi
0x00010948      4883ec08       sub rsp, 8
0x0001094c      83ff02         cmp edi, 2                              ; ../coreutils-8.31/lib/fd-safer.c:39
0x0001094f      7721           ja 0x10972
0x00010951      e8ea350000     call sym.dup_safer                      ; ../coreutils-8.31/lib/fd-safer.c:41
0x00010956      4189c4         mov r12d, eax
0x00010959      e8f21fffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fd-safer.c:42
0x0001095e      448b28         mov r13d, dword [rax]
0x00010961      4889c5         mov rbp, rax
0x00010964      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fd-safer.c:43
0x00010966      e8c522ffff     call sym.imp.close
0x0001096b      4489e3         mov ebx, r12d                           ; ../coreutils-8.31/lib/fd-safer.c:45
0x0001096e      44896d00       mov dword [rbp], r13d                   ; ../coreutils-8.31/lib/fd-safer.c:44
0x00010972      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fd-safer.c:49
0x00010976      89d8           mov eax, ebx
0x00010978      5b             pop rbx
0x00010979      5d             pop rbp
0x0001097a      415c           pop r12
0x0001097c      415d           pop r13
0x0001097e      c3             ret
0x0001097f      90             nop
;-- dev_info_hash:
0x00010980      488b07         mov rax, qword [rdi]
0x00010983      31d2           xor edx, edx
0x00010985      48f7f6         div rsi
0x00010988      4889d0         mov rax, rdx
0x0001098b      c3             ret
0x0001098c      0f1f4000       nop dword [rax]
;-- dev_info_compare:
0x00010990      488b06         mov rax, qword [rsi]
0x00010993      483907         cmp qword [rdi], rax
0x00010996      0f94c0         sete al
0x00010999      c3             ret
0x0001099a      660f1f440000   nop word [rax + rax]
;-- utimecmpat:
0x000109a0      4157           push r15
0x000109a2      4156           push r14
0x000109a4      4155           push r13
0x000109a6      4154           push r12
0x000109a8      55             push rbp
0x000109a9      53             push rbx
0x000109aa      4489c3         mov ebx, r8d
0x000109ad      83e301         and ebx, 1
0x000109b0      4881ec280100.  sub rsp, 0x128
0x000109b7      4c8b6960       mov r13, qword [rcx + 0x60]
0x000109bb      4c8b7258       mov r14, qword [rdx + 0x58]
0x000109bf      64488b042528.  mov rax, qword fs:[0x28]
0x000109c8      488984241801.  mov qword [rsp + 0x118], rax
0x000109d0      31c0           xor eax, eax
0x000109d2      85db           test ebx, ebx
0x000109d4      4c8b6158       mov r12, qword [rcx + 0x58]
0x000109d8      4c8b7a60       mov r15, qword [rdx + 0x60]
0x000109dc      4589e9         mov r9d, r13d
0x000109df      0f84e3000000   je 0x10ac8
0x000109e5      4d39e6         cmp r14, r12
0x000109e8      4189fa         mov r10d, edi
0x000109eb      0f94442438     sete byte [rsp + 0x38]
0x000109f0      0fb67c2438     movzx edi, byte [rsp + 0x38]
0x000109f5      4539ef         cmp r15d, r13d
0x000109f8      0f94c0         sete al
0x000109fb      4020f8         and al, dil
0x000109fe      88442408       mov byte [rsp + 8], al
0x00010a02      0f8508010000   jne 0x10b10
0x00010a08      498d4424ff     lea rax, [r12 - 1]
0x00010a0d      4c39f0         cmp rax, r14
0x00010a10      0f8f02010000   jg 0x10b18
0x00010a16      498d46ff       lea rax, [r14 - 1]
0x00010a1a      4c39e0         cmp rax, r12
0x00010a1d      0f8fbc000000   jg 0x10adf
0x00010a23      4889d5         mov rbp, rdx
0x00010a26      488b15f3ec20.  mov rdx, qword [obj.ht.5307]            ; [0x21f720:8]=0
0x00010a2d      4989f3         mov r11, rsi
0x00010a30      4885d2         test rdx, rdx
0x00010a33      0f8497050000   je 0x10fd0
0x00010a39      488b35d8ec20.  mov rsi, qword [obj.new_dst_res.5308]   ; [0x21f718:8]=0
0x00010a40      4885f6         test rsi, rsi
0x00010a43      0f84d7000000   je 0x10b20
0x00010a49      488b4500       mov rax, qword [rbp]
0x00010a4d      4889d7         mov rdi, rdx
0x00010a50      4c895c2428     mov qword [rsp + 0x28], r11
0x00010a55      4489542420     mov dword [rsp + 0x20], r10d
0x00010a5a      44894c2418     mov dword [rsp + 0x18], r9d
0x00010a5f      488906         mov qword [rsi], rax
0x00010a62      e8b9bfffff     call sym.hash_insert
0x00010a67      4885c0         test rax, rax
0x00010a6a      4889442410     mov qword [rsp + 0x10], rax
0x00010a6f      448b4c2418     mov r9d, dword [rsp + 0x18]
0x00010a74      448b542420     mov r10d, dword [rsp + 0x20]
0x00010a79      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x00010a7e      0f84f4000000   je 0x10b78
0x00010a84      4839058dec20.  cmp qword [obj.new_dst_res.5308], rax   ; [0x21f718:8]=0
0x00010a8b      0f849f050000   je 0x11030
0x00010a91      488b442410     mov rax, qword [rsp + 0x10]
0x00010a96      80780c00       cmp byte [rax + 0xc], 0
0x00010a9a      8b7008         mov esi, dword [rax + 8]
0x00010a9d      89742418       mov dword [rsp + 0x18], esi
0x00010aa1      0f8453010000   je 0x10bfa
0x00010aa7      31c0           xor eax, eax
0x00010aa9      81fe00943577   cmp esi, 0x77359400
0x00010aaf      0f94c0         sete al
0x00010ab2      f7d0           not eax
0x00010ab4      4898           cdqe
0x00010ab6      4921c4         and r12, rax
0x00010ab9      4489c8         mov eax, r9d
0x00010abc      4589e9         mov r9d, r13d
0x00010abf      99             cdq
0x00010ac0      f7fe           idiv esi
0x00010ac2      4129d1         sub r9d, edx
0x00010ac5      0f1f00         nop dword [rax]
0x00010ac8      4d39f4         cmp r12, r14
0x00010acb      7f4b           jg 0x10b18
0x00010acd      bb01000000     mov ebx, 1
0x00010ad2      7c0b           jl 0x10adf
0x00010ad4      4539f9         cmp r9d, r15d
0x00010ad7      7f3f           jg 0x10b18
0x00010ad9      0f9cc3         setl bl
0x00010adc      0fb6db         movzx ebx, bl
0x00010adf      488bb4241801.  mov rsi, qword [rsp + 0x118]
0x00010ae7      644833342528.  xor rsi, qword fs:[0x28]
0x00010af0      89d8           mov eax, ebx
0x00010af2      0f85d0050000   jne 0x110c8
0x00010af8      4881c4280100.  add rsp, 0x128
0x00010aff      5b             pop rbx
0x00010b00      5d             pop rbp
0x00010b01      415c           pop r12
0x00010b03      415d           pop r13
0x00010b05      415e           pop r14
0x00010b07      415f           pop r15
0x00010b09      c3             ret
0x00010b0a      660f1f440000   nop word [rax + rax]
0x00010b10      31db           xor ebx, ebx
0x00010b12      ebcb           jmp 0x10adf
0x00010b14      0f1f4000       nop dword [rax]
0x00010b18      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x00010b1d      ebc0           jmp 0x10adf
0x00010b1f      90             nop
0x00010b20      bf10000000     mov edi, 0x10
0x00010b25      4c895c2428     mov qword [rsp + 0x28], r11
0x00010b2a      4489542420     mov dword [rsp + 0x20], r10d
0x00010b2f      44894c2418     mov dword [rsp + 0x18], r9d
0x00010b34      4889542410     mov qword [rsp + 0x10], rdx
0x00010b39      e8b222ffff     call sym.imp.malloc
0x00010b3e      4885c0         test rax, rax
0x00010b41      4889c6         mov rsi, rax
0x00010b44      488905cdeb20.  mov qword [obj.new_dst_res.5308], rax   ; [0x21f718:8]=0
0x00010b4b      488b542410     mov rdx, qword [rsp + 0x10]
0x00010b50      448b4c2418     mov r9d, dword [rsp + 0x18]
0x00010b55      448b542420     mov r10d, dword [rsp + 0x20]
0x00010b5a      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x00010b5f      7427           je 0x10b88
0x00010b61      c74008009435.  mov dword [rax + 8], 0x77359400         ; [0x77359400:4]=-1
0x00010b68      c6400c00       mov byte [rax + 0xc], 0
0x00010b6c      e9d8feffff     jmp 0x10a49
0x00010b71      0f1f80000000.  nop dword [rax]
0x00010b78      488b15a1eb20.  mov rdx, qword [obj.ht.5307]            ; [0x21f720:8]=0
0x00010b7f      4885d2         test rdx, rdx
0x00010b82      0f849a040000   je 0x11022
0x00010b88      488d4c2450     lea rcx, [rsp + 0x50]
0x00010b8d      488b4500       mov rax, qword [rbp]
0x00010b91      4889d7         mov rdi, rdx
0x00010b94      4c895c2430     mov qword [rsp + 0x30], r11
0x00010b99      4489542428     mov dword [rsp + 0x28], r10d
0x00010b9e      4889ce         mov rsi, rcx
0x00010ba1      44894c2420     mov dword [rsp + 0x20], r9d
0x00010ba6      48894c2418     mov qword [rsp + 0x18], rcx
0x00010bab      4889442450     mov qword [rsp + 0x50], rax
0x00010bb0      e8fbb3ffff     call sym.hash_lookup
0x00010bb5      4885c0         test rax, rax
0x00010bb8      4889442410     mov qword [rsp + 0x10], rax
0x00010bbd      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00010bc2      448b4c2420     mov r9d, dword [rsp + 0x20]
0x00010bc7      448b542428     mov r10d, dword [rsp + 0x28]
0x00010bcc      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00010bd1      0f85bafeffff   jne 0x10a91
0x00010bd7      660f1f840000.  nop word [rax + rax]
0x00010be0      c74424580094.  mov dword [rsp + 0x58], 0x77359400      ; [0x77359400:4]=-1
0x00010be8      c644245c00     mov byte [rsp + 0x5c], 0
0x00010bed      c74424180094.  mov dword [rsp + 0x18], 0x77359400      ; [0x77359400:4]=-1
0x00010bf5      48894c2410     mov qword [rsp + 0x10], rcx
0x00010bfa      488b4d50       mov rcx, qword [rbp + 0x50]
0x00010bfe      b867666666     mov eax, 0x66666667                     ; 'gfff'
0x00010c03      488b7570       mov rsi, qword [rbp + 0x70]
0x00010c07      f7e9           imul ecx
0x00010c09      89c8           mov eax, ecx
0x00010c0b      48894c2428     mov qword [rsp + 0x28], rcx
0x00010c10      c1f81f         sar eax, 0x1f
0x00010c13      c1fa02         sar edx, 2
0x00010c16      29c2           sub edx, eax
0x00010c18      8d0492         lea eax, [rdx + rdx*4]
0x00010c1b      89542420       mov dword [rsp + 0x20], edx
0x00010c1f      01c0           add eax, eax
0x00010c21      29c1           sub ecx, eax
0x00010c23      b867666666     mov eax, 0x66666667                     ; 'gfff'
0x00010c28      f7ee           imul esi
0x00010c2a      89f0           mov eax, esi
0x00010c2c      c1f81f         sar eax, 0x1f
0x00010c2f      c1fa02         sar edx, 2
0x00010c32      89d7           mov edi, edx
0x00010c34      29c7           sub edi, eax
0x00010c36      8d04bf         lea eax, [rdi + rdi*4]
0x00010c39      01c0           add eax, eax
0x00010c3b      29c6           sub esi, eax
0x00010c3d      b867666666     mov eax, 0x66666667                     ; 'gfff'
0x00010c42      41f7ef         imul r15d
0x00010c45      4489f8         mov eax, r15d
0x00010c48      09f1           or ecx, esi
0x00010c4a      c1f81f         sar eax, 0x1f
0x00010c4d      4489fe         mov esi, r15d
0x00010c50      c1fa02         sar edx, 2
0x00010c53      4189d0         mov r8d, edx
0x00010c56      4129c0         sub r8d, eax
0x00010c59      438d0480       lea eax, [r8 + r8*4]
0x00010c5d      01c0           add eax, eax
0x00010c5f      29c6           sub esi, eax
0x00010c61      09f1           or ecx, esi
0x00010c63      0f854f030000   jne 0x10fb8
0x00010c69      837c24180a     cmp dword [rsp + 0x18], 0xa
0x00010c6e      488b4548       mov rax, qword [rbp + 0x48]
0x00010c72      89f9           mov ecx, edi
0x00010c74      8b542420       mov edx, dword [rsp + 0x20]
0x00010c78      4489c6         mov esi, r8d
0x00010c7b      4889442448     mov qword [rsp + 0x48], rax
0x00010c80      89542430       mov dword [rsp + 0x30], edx
0x00010c84      0f8e0e040000   jle 0x11098
0x00010c8a      b867666666     mov eax, 0x66666667                     ; 'gfff'
0x00010c8f      f7ef           imul edi
0x00010c91      89f8           mov eax, edi
0x00010c93      c1f81f         sar eax, 0x1f
0x00010c96      c1fa02         sar edx, 2
0x00010c99      29c2           sub edx, eax
0x00010c9b      8d0492         lea eax, [rdx + rdx*4]
0x00010c9e      01c0           add eax, eax
0x00010ca0      29c7           sub edi, eax
0x00010ca2      b867666666     mov eax, 0x66666667                     ; 'gfff'
0x00010ca7      f76c2420       imul dword [rsp + 0x20]
0x00010cab      8b442420       mov eax, dword [rsp + 0x20]
0x00010caf      c1f81f         sar eax, 0x1f
0x00010cb2      c1fa02         sar edx, 2
0x00010cb5      29c2           sub edx, eax
0x00010cb7      8d0492         lea eax, [rdx + rdx*4]
0x00010cba      8b542420       mov edx, dword [rsp + 0x20]
0x00010cbe      c74424200a00.  mov dword [rsp + 0x20], 0xa
0x00010cc6      01c0           add eax, eax
0x00010cc8      29c2           sub edx, eax
0x00010cca      b867666666     mov eax, 0x66666667                     ; 'gfff'
0x00010ccf      09d7           or edi, edx
0x00010cd1      41f7e8         imul r8d
0x00010cd4      4489c0         mov eax, r8d
0x00010cd7      897c243c       mov dword [rsp + 0x3c], edi
0x00010cdb      c1f81f         sar eax, 0x1f
0x00010cde      bf67666666     mov edi, 0x66666667                     ; 'gfff'
0x00010ce3      c1fa02         sar edx, 2
0x00010ce6      29c2           sub edx, eax
0x00010ce8      8d0492         lea eax, [rdx + rdx*4]
0x00010ceb      ba08000000     mov edx, 8
0x00010cf0      01c0           add eax, eax
0x00010cf2      4129c0         sub r8d, eax
0x00010cf5      8b44243c       mov eax, dword [rsp + 0x3c]
0x00010cf9      4409c0         or eax, r8d
0x00010cfc      0f85b2030000   jne 0x110b4
0x00010d02      44894c243c     mov dword [rsp + 0x3c], r9d
0x00010d07      4c89742440     mov qword [rsp + 0x40], r14
0x00010d0c      41b90a000000   mov r9d, 0xa
0x00010d12      448b442430     mov r8d, dword [rsp + 0x30]
0x00010d17      4c89642420     mov qword [rsp + 0x20], r12
0x00010d1c      4189d6         mov r14d, edx
0x00010d1f      48896c2430     mov qword [rsp + 0x30], rbp
0x00010d24      4489c0         mov eax, r8d
0x00010d27      41c1f81f       sar r8d, 0x1f
0x00010d2b      438d2c89       lea ebp, [r9 + r9*4]
0x00010d2f      f7ef           imul edi
0x00010d31      89c8           mov eax, ecx
0x00010d33      c1f91f         sar ecx, 0x1f
0x00010d36      01ed           add ebp, ebp
0x00010d38      4189e9         mov r9d, ebp
0x00010d3b      c1fa02         sar edx, 2
0x00010d3e      4429c2         sub edx, r8d
0x00010d41      4189d0         mov r8d, edx
0x00010d44      f7ef           imul edi
0x00010d46      89f0           mov eax, esi
0x00010d48      c1fe1f         sar esi, 0x1f
0x00010d4b      c1fa02         sar edx, 2
0x00010d4e      29ca           sub edx, ecx
0x00010d50      89d1           mov ecx, edx
0x00010d52      f7ef           imul edi
0x00010d54      c1fa02         sar edx, 2
0x00010d57      29f2           sub edx, esi
0x00010d59      3b6c2418       cmp ebp, dword [rsp + 0x18]
0x00010d5d      89d6           mov esi, edx
0x00010d5f      0f8ddb020000   jge 0x11040
0x00010d65      4489c0         mov eax, r8d
0x00010d68      4589c4         mov r12d, r8d
0x00010d6b      f7ef           imul edi
0x00010d6d      4489c0         mov eax, r8d
0x00010d70      c1f81f         sar eax, 0x1f
0x00010d73      c1fa02         sar edx, 2
0x00010d76      29c2           sub edx, eax
0x00010d78      8d0492         lea eax, [rdx + rdx*4]
0x00010d7b      01c0           add eax, eax
0x00010d7d      4129c4         sub r12d, eax
0x00010d80      89c8           mov eax, ecx
0x00010d82      f7ef           imul edi
0x00010d84      89c8           mov eax, ecx
0x00010d86      c1f81f         sar eax, 0x1f
0x00010d89      c1fa02         sar edx, 2
0x00010d8c      29c2           sub edx, eax
0x00010d8e      8d0492         lea eax, [rdx + rdx*4]
0x00010d91      89ca           mov edx, ecx
0x00010d93      01c0           add eax, eax
0x00010d95      29c2           sub edx, eax
0x00010d97      89f0           mov eax, esi
0x00010d99      4109d4         or r12d, edx
0x00010d9c      f7ef           imul edi
0x00010d9e      89f0           mov eax, esi
0x00010da0      c1f81f         sar eax, 0x1f
0x00010da3      c1fa02         sar edx, 2
0x00010da6      29c2           sub edx, eax
0x00010da8      8d0492         lea eax, [rdx + rdx*4]
0x00010dab      89f2           mov edx, esi
0x00010dad      01c0           add eax, eax
0x00010daf      29c2           sub edx, eax
0x00010db1      4109d4         or r12d, edx
0x00010db4      0f8586020000   jne 0x11040
0x00010dba      4183ee01       sub r14d, 1
0x00010dbe      0f8560ffffff   jne 0x10d24
0x00010dc4      4c8b742440     mov r14, qword [rsp + 0x40]
0x00010dc9      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00010dce      488b442448     mov rax, qword [rsp + 0x48]
0x00010dd3      4c8b642420     mov r12, qword [rsp + 0x20]
0x00010dd8      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00010ddd      4c09f0         or rax, r14
0x00010de0      480b4568       or rax, qword [rbp + 0x68]
0x00010de4      a801           test al, 1
0x00010de6      488b442410     mov rax, qword [rsp + 0x10]
0x00010deb      0f8487020000   je 0x11078
0x00010df1      c7400800ca9a.  mov dword [rax + 8], 0x3b9aca00         ; [0x3b9aca00:4]=-1
0x00010df8      c744242000ca.  mov dword [rsp + 0x20], 0x3b9aca00      ; [0x3b9aca00:4]=-1
0x00010e00      4c89e0         mov rax, r12
0x00010e03      4d39e6         cmp r14, r12
0x00010e06      0f8fd3fcffff   jg 0x10adf
0x00010e0c      4539ef         cmp r15d, r13d
0x00010e0f      7c0b           jl 0x10e1c
0x00010e11      807c243800     cmp byte [rsp + 0x38], 0
0x00010e16      0f85c3fcffff   jne 0x10adf
0x00010e1c      4939c6         cmp r14, rax
0x00010e1f      0f8cf3fcffff   jl 0x10b18
0x00010e25      7516           jne 0x10e3d
0x00010e27      4489c8         mov eax, r9d
0x00010e2a      99             cdq
0x00010e2b      f77c2420       idiv dword [rsp + 0x20]
0x00010e2f      4489e8         mov eax, r13d
0x00010e32      29d0           sub eax, edx
0x00010e34      4439f8         cmp eax, r15d
0x00010e37      0f8fdbfcffff   jg 0x10b18
0x00010e3d      488b442448     mov rax, qword [rsp + 0x48]
0x00010e42      ba398ee338     mov edx, 0x38e38e39
0x00010e47      488d6c2460     lea rbp, [rsp + 0x60]
0x00010e4c      4c89de         mov rsi, r11
0x00010e4f      4489d7         mov edi, r10d
0x00010e52      b900010000     mov ecx, 0x100
0x00010e57      44894c2418     mov dword [rsp + 0x18], r9d
0x00010e5c      4489542438     mov dword [rsp + 0x38], r10d
0x00010e61      4889442460     mov qword [rsp + 0x60], rax
0x00010e66      4863442428     movsxd rax, dword [rsp + 0x28]
0x00010e6b      4889442468     mov qword [rsp + 0x68], rax
0x00010e70      0fb6442408     movzx eax, byte [rsp + 8]
0x00010e75      4c895c2408     mov qword [rsp + 8], r11
0x00010e7a      4c09f0         or rax, r14
0x00010e7d      4889442470     mov qword [rsp + 0x70], rax
0x00010e82      8b442420       mov eax, dword [rsp + 0x20]
0x00010e86      f7e2           mul edx
0x00010e88      89d0           mov eax, edx
0x00010e8a      4889ea         mov rdx, rbp
0x00010e8d      d1e8           shr eax, 1
0x00010e8f      4401f8         add eax, r15d
0x00010e92      4898           cdqe
0x00010e94      4889442478     mov qword [rsp + 0x78], rax
0x00010e99      e8921affff     call sym.imp.utimensat
0x00010e9e      85c0           test eax, eax
0x00010ea0      448b542438     mov r10d, dword [rsp + 0x38]
0x00010ea5      4c8b5c2408     mov r11, qword [rsp + 8]
0x00010eaa      448b4c2418     mov r9d, dword [rsp + 0x18]
0x00010eaf      740a           je 0x10ebb
0x00010eb1      bbfeffffff     mov ebx, 0xfffffffe                     ; 4294967294
0x00010eb6      e924fcffff     jmp 0x10adf
0x00010ebb      488d8c248000.  lea rcx, [rsp + 0x80]
0x00010ec3      4c89da         mov rdx, r11
0x00010ec6      41b800010000   mov r8d, 0x100
0x00010ecc      4489d6         mov esi, r10d
0x00010ecf      bf01000000     mov edi, 1
0x00010ed4      44894c2418     mov dword [rsp + 0x18], r9d
0x00010ed9      4c895c2408     mov qword [rsp + 8], r11
0x00010ede      4489542438     mov dword [rsp + 0x38], r10d
0x00010ee3      e8981cffff     call sym.imp.__fxstatat
0x00010ee8      488b8c24e000.  mov rcx, qword [rsp + 0xe0]
0x00010ef0      4189c0         mov r8d, eax
0x00010ef3      488b8424d800.  mov rax, qword [rsp + 0xd8]
0x00010efb      4963d7         movsxd rdx, r15d
0x00010efe      448b542438     mov r10d, dword [rsp + 0x38]
0x00010f03      4c8b5c2408     mov r11, qword [rsp + 8]
0x00010f08      448b4c2418     mov r9d, dword [rsp + 0x18]
0x00010f0d      4831d1         xor rcx, rdx
0x00010f10      4c31f0         xor rax, r14
0x00010f13      4809c8         or rax, rcx
0x00010f16      4963c8         movsxd rcx, r8d
0x00010f19      4809c8         or rax, rcx
0x00010f1c      0f85ab010000   jne 0x110cd
0x00010f22      8b8c24d80000.  mov ecx, dword [rsp + 0xd8]
0x00010f29      be0a000000     mov esi, 0xa
0x00010f2e      83e101         and ecx, 1
0x00010f31      69c900ca9a3b   imul ecx, ecx, 0x3b9aca00
0x00010f37      038c24e00000.  add ecx, dword [rsp + 0xe0]
0x00010f3e      89c8           mov eax, ecx
0x00010f40      99             cdq
0x00010f41      f7fe           idiv esi
0x00010f43      85d2           test edx, edx
0x00010f45      0f85ca010000   jne 0x11115
0x00010f4b      837c24200a     cmp dword [rsp + 0x20], 0xa
0x00010f50      743b           je 0x10f8d
0x00010f52      41b809000000   mov r8d, 9
0x00010f58      be0a000000     mov esi, 0xa
0x00010f5d      bf0a000000     mov edi, 0xa
0x00010f62      eb09           jmp 0x10f6d
0x00010f64      6bf60a         imul esi, esi, 0xa
0x00010f67      3b742420       cmp esi, dword [rsp + 0x20]
0x00010f6b      7420           je 0x10f8d
0x00010f6d      89c8           mov eax, ecx
0x00010f6f      99             cdq
0x00010f70      f7ff           idiv edi
0x00010f72      99             cdq
0x00010f73      89c1           mov ecx, eax
0x00010f75      f7ff           idiv edi
0x00010f77      85d2           test edx, edx
0x00010f79      0f858d010000   jne 0x1110c
0x00010f7f      4183e801       sub r8d, 1
0x00010f83      75df           jne 0x10f64
0x00010f85      c74424200094.  mov dword [rsp + 0x20], 0x77359400      ; [0x77359400:4]=-1
0x00010f8d      8b742420       mov esi, dword [rsp + 0x20]
0x00010f91      31c0           xor eax, eax
0x00010f93      81fe00943577   cmp esi, 0x77359400
0x00010f99      89f3           mov ebx, esi
0x00010f9b      0f94c0         sete al
0x00010f9e      f7d0           not eax
0x00010fa0      4898           cdqe
0x00010fa2      4921c4         and r12, rax
0x00010fa5      4489c8         mov eax, r9d
0x00010fa8      4589e9         mov r9d, r13d
0x00010fab      99             cdq
0x00010fac      f7fe           idiv esi
0x00010fae      4129d1         sub r9d, edx
0x00010fb1      0f1f80000000.  nop dword [rax]
0x00010fb8      488b442410     mov rax, qword [rsp + 0x10]
0x00010fbd      895808         mov dword [rax + 8], ebx
0x00010fc0      c6400c01       mov byte [rax + 0xc], 1
0x00010fc4      e9fffaffff     jmp 0x10ac8
0x00010fc9      0f1f80000000.  nop dword [rax]
0x00010fd0      4c8b05f9bf20.  mov r8, qword [reloc.free]              ; [0x21cfd0:8]=0
0x00010fd7      488d15a2f9ff.  lea rdx, sym.dev_info_hash              ; 0x10980 ; "H\x8b\a1\xd2H\xf7\xf6H\x89\xd0\xc3\x0f\x1f@"
0x00010fde      488d0dabf9ff.  lea rcx, sym.dev_info_compare           ; 0x10990 ; "H\x8b\x06H9\a\x0f\x94\xc0\xc3f\x0f\x1fD"
0x00010fe5      4889742420     mov qword [rsp + 0x20], rsi
0x00010fea      bf10000000     mov edi, 0x10
0x00010fef      31f6           xor esi, esi
0x00010ff1      4489542418     mov dword [rsp + 0x18], r10d
0x00010ff6      44896c2410     mov dword [rsp + 0x10], r13d
0x00010ffb      e820b2ffff     call sym.hash_initialize
0x00011000      4885c0         test rax, rax
0x00011003      4889c2         mov rdx, rax
0x00011006      48890513e720.  mov qword [obj.ht.5307], rax            ; [0x21f720:8]=0
0x0001100d      448b4c2410     mov r9d, dword [rsp + 0x10]
0x00011012      448b542418     mov r10d, dword [rsp + 0x18]
0x00011017      4c8b5c2420     mov r11, qword [rsp + 0x20]
0x0001101c      0f8517faffff   jne 0x10a39
0x00011022      488d4c2450     lea rcx, [rsp + 0x50]
0x00011027      e9b4fbffff     jmp 0x10be0
0x0001102c      0f1f4000       nop dword [rax]
0x00011030      48c705dde620.  mov qword [obj.new_dst_res.5308], 0     ; [0x21f718:8]=0
0x0001103b      e951faffff     jmp 0x10a91
0x00011040      81fd00943577   cmp ebp, 0x77359400
0x00011046      4c8b642420     mov r12, qword [rsp + 0x20]
0x0001104b      488b742410     mov rsi, qword [rsp + 0x10]
0x00011050      0f94442408     sete byte [rsp + 8]
0x00011055      0fb6442408     movzx eax, byte [rsp + 8]
0x0001105a      44894c2420     mov dword [rsp + 0x20], r9d
0x0001105f      4c8b742440     mov r14, qword [rsp + 0x40]
0x00011064      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00011069      896e08         mov dword [rsi + 8], ebp
0x0001106c      f7d0           not eax
0x0001106e      4898           cdqe
0x00011070      4c21e0         and rax, r12
0x00011073      e98bfdffff     jmp 0x10e03
0x00011078      c74008009435.  mov dword [rax + 8], 0x77359400         ; [0x77359400:4]=-1
0x0001107f      4c89e0         mov rax, r12
0x00011082      c644240801     mov byte [rsp + 8], 1
0x00011087      4883e0fe       and rax, 0xfffffffffffffffe
0x0001108b      c74424200094.  mov dword [rsp + 0x20], 0x77359400      ; [0x77359400:4]=-1
0x00011093      e96bfdffff     jmp 0x10e03
0x00011098      488b442410     mov rax, qword [rsp + 0x10]
0x0001109d      c74424200a00.  mov dword [rsp + 0x20], 0xa
0x000110a5      c740080a0000.  mov dword [rax + 8], 0xa
0x000110ac      4c89e0         mov rax, r12
0x000110af      e94ffdffff     jmp 0x10e03
0x000110b4      488b442410     mov rax, qword [rsp + 0x10]
0x000110b9      c740080a0000.  mov dword [rax + 8], 0xa
0x000110c0      4c89e0         mov rax, r12
0x000110c3      e93bfdffff     jmp 0x10e03
0x000110c8      e8631affff     call sym.imp.__stack_chk_fail
0x000110cd      4889542478     mov qword [rsp + 0x78], rdx
0x000110d2      b900010000     mov ecx, 0x100
0x000110d7      4889ea         mov rdx, rbp
0x000110da      4c89de         mov rsi, r11
0x000110dd      4489d7         mov edi, r10d
0x000110e0      4489442408     mov dword [rsp + 8], r8d
0x000110e5      44894c2438     mov dword [rsp + 0x38], r9d
0x000110ea      4c89742470     mov qword [rsp + 0x70], r14
0x000110ef      e83c18ffff     call sym.imp.utimensat
0x000110f4      448b442408     mov r8d, dword [rsp + 8]
0x000110f9      448b4c2438     mov r9d, dword [rsp + 0x38]
0x000110fe      4585c0         test r8d, r8d
0x00011101      0f85aafdffff   jne 0x10eb1
0x00011107      e916feffff     jmp 0x10f22
0x0001110c      89742420       mov dword [rsp + 0x20], esi
0x00011110      e978feffff     jmp 0x10f8d
0x00011115      895c2420       mov dword [rsp + 0x20], ebx
0x00011119      e96ffeffff     jmp 0x10f8d
0x0001111e      6690           nop
;-- utimecmp:
0x00011120      4189c8         mov r8d, ecx
0x00011123      4889d1         mov rcx, rdx
0x00011126      4889f2         mov rdx, rsi
0x00011129      4889fe         mov rsi, rdi
0x0001112c      bf9cffffff     mov edi, 0xffffff9c                     ; 4294967196
0x00011131      e96af8ffff     jmp sym.utimecmpat
0x00011136      662e0f1f8400.  nop word cs:[rax + rax]
;-- update_timespec:
0x00011140      55             push rbp                                ; ../coreutils-8.31/lib/utimens.c:134
0x00011141      53             push rbx
0x00011142      4889fd         mov rbp, rdi
0x00011145      4883ec18       sub rsp, 0x18
0x00011149      488b1e         mov rbx, qword [rsi]                    ; ../coreutils-8.31/lib/utimens.c:135
0x0001114c      488b4308       mov rax, qword [rbx + 8]                ; ../coreutils-8.31/lib/utimens.c:136
0x00011150      488b5318       mov rdx, qword [rbx + 0x18]
0x00011154      483dfeffff3f   cmp rax, 0x3ffffffe
0x0001115a      7464           je 0x111c0
0x0001115c      483dffffff3f   cmp rax, 0x3fffffff                     ; ../coreutils-8.31/lib/utimens.c:139
0x00011162      741c           je 0x11180
0x00011164      4881fafeffff.  cmp rdx, 0x3ffffffe                     ; ../coreutils-8.31/lib/utimens.c:151
0x0001116b      7431           je 0x1119e
0x0001116d      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/utimens.c:156
0x0001116f      4881faffffff.  cmp rdx, 0x3fffffff                     ; ../coreutils-8.31/lib/utimens.c:153
0x00011176      7470           je 0x111e8
0x00011178      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/utimens.c:157
0x0001117c      5b             pop rbx
0x0001117d      5d             pop rbp
0x0001117e      c3             ret
0x0001117f      90             nop
0x00011180      4881faffffff.  cmp rdx, 0x3fffffff                     ; ../coreutils-8.31/lib/utimens.c:140
0x00011187      747f           je 0x11208
0x00011189      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/utimens.c:149
0x0001118c      e84f1d0000     call sym.gettime
0x00011191      488b5318       mov rdx, qword [rbx + 0x18]
0x00011195      4881fafeffff.  cmp rdx, 0x3ffffffe                     ; ../coreutils-8.31/lib/utimens.c:151
0x0001119c      75cf           jne 0x1116d
0x0001119e      488b4560       mov rax, qword [rbp + 0x60]
0x000111a2      488b5558       mov rdx, qword [rbp + 0x58]
0x000111a6      48894318       mov qword [rbx + 0x18], rax             ; ../coreutils-8.31/lib/utimens.c:152
0x000111aa      48895310       mov qword [rbx + 0x10], rdx
0x000111ae      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/utimens.c:157
0x000111b2      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/utimens.c:156
0x000111b4      5b             pop rbx                                 ; ../coreutils-8.31/lib/utimens.c:157
0x000111b5      5d             pop rbp
0x000111b6      c3             ret
0x000111b7      660f1f840000.  nop word [rax + rax]
0x000111c0      4881fafeffff.  cmp rdx, 0x3ffffffe                     ; ../coreutils-8.31/lib/utimens.c:137
0x000111c7      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/utimens.c:138
0x000111cc      74aa           je 0x11178                              ; ../coreutils-8.31/lib/utimens.c:137
0x000111ce      488b4750       mov rax, qword [rdi + 0x50]
0x000111d2      488b4f48       mov rcx, qword [rdi + 0x48]
0x000111d6      48894308       mov qword [rbx + 8], rax                ; ../coreutils-8.31/lib/utimens.c:147
0x000111da      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/utimens.c:156
0x000111dc      4881faffffff.  cmp rdx, 0x3fffffff                     ; ../coreutils-8.31/lib/utimens.c:153
0x000111e3      48890b         mov qword [rbx], rcx                    ; ../coreutils-8.31/lib/utimens.c:147
0x000111e6      7590           jne 0x11178                             ; ../coreutils-8.31/lib/utimens.c:153
0x000111e8      488d7b10       lea rdi, [rbx + 0x10]                   ; ../coreutils-8.31/lib/utimens.c:154
0x000111ec      8844240f       mov byte [rsp + 0xf], al
0x000111f0      e8eb1c0000     call sym.gettime
0x000111f5      0fb644240f     movzx eax, byte [rsp + 0xf]
0x000111fa      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/utimens.c:157
0x000111fe      5b             pop rbx
0x000111ff      5d             pop rbp
0x00011200      c3             ret
0x00011201      0f1f80000000.  nop dword [rax]
0x00011208      48c706000000.  mov qword [rsi], 0                      ; ../coreutils-8.31/lib/utimens.c:142
0x0001120f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/utimens.c:143
0x00011211      e962ffffff     jmp 0x11178
0x00011216      662e0f1f8400.  nop word cs:[rax + rax]
;-- validate_timespec:
0x00011220      4c8b4f08       mov r9, qword [rdi + 8]                 ; ../coreutils-8.31/lib/utimens.c:88
0x00011224      498d89020000.  lea rcx, [r9 - 0x3ffffffe]              ; ../coreutils-8.31/lib/utimens.c:93
0x0001122b      4883f901       cmp rcx, 1                              ; ../coreutils-8.31/lib/utimens.c:91
0x0001122f      7609           jbe 0x1123a
0x00011231      4981f9ffc99a.  cmp r9, 0x3b9ac9ff
0x00011238      7776           ja 0x112b0
0x0001123a      488b5718       mov rdx, qword [rdi + 0x18]             ; ../coreutils-8.31/lib/utimens.c:95
0x0001123e      4c8d82020000.  lea r8, [rdx - 0x3ffffffe]              ; ../coreutils-8.31/lib/utimens.c:97
0x00011245      4983f801       cmp r8, 1                               ; ../coreutils-8.31/lib/utimens.c:95
0x00011249      7609           jbe 0x11254
0x0001124b      4881faffc99a.  cmp rdx, 0x3b9ac9ff
0x00011252      775c           ja 0x112b0
0x00011254      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/utimens.c:90
0x00011256      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/utimens.c:89
0x00011259      4883f901       cmp rcx, 1                              ; ../coreutils-8.31/lib/utimens.c:107
0x0001125d      771a           ja 0x11279
0x0001125f      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/utimens.c:112
0x00011261      4981f9feffff.  cmp r9, 0x3ffffffe
0x00011268      48c707000000.  mov qword [rdi], 0                      ; ../coreutils-8.31/lib/utimens.c:110
0x0001126f      400f94c6       sete sil                                ; ../coreutils-8.31/lib/utimens.c:112
0x00011273      41ba01000000   mov r10d, 1                             ; ../coreutils-8.31/lib/utimens.c:111
0x00011279      4983f801       cmp r8, 1                               ; ../coreutils-8.31/lib/utimens.c:115
0x0001127d      771c           ja 0x1129b
0x0001127f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/utimens.c:121
0x00011281      4881fafeffff.  cmp rdx, 0x3ffffffe
0x00011288      48c747100000.  mov qword [rdi + 0x10], 0               ; ../coreutils-8.31/lib/utimens.c:118
0x00011290      0f94c0         sete al                                 ; ../coreutils-8.31/lib/utimens.c:121
0x00011293      41ba01000000   mov r10d, 1                             ; ../coreutils-8.31/lib/utimens.c:119
0x00011299      01c6           add esi, eax                            ; ../coreutils-8.31/lib/utimens.c:121
0x0001129b      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/utimens.c:123
0x0001129d      83fe01         cmp esi, 1
0x000112a0      0f94c0         sete al
0x000112a3      4401d0         add eax, r10d
0x000112a6      c3             ret                                     ; ../coreutils-8.31/lib/utimens.c:124
0x000112a7      660f1f840000.  nop word [rax + rax]
0x000112b0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/utimens.c:88
0x000112b4      e89716ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/utimens.c:100
0x000112b9      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x3e300000
0x000112bf      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000112c4      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/utimens.c:124
0x000112c8      c3             ret
0x000112c9      0f1f80000000.  nop dword [rax]
;-- lutimensat:
0x000112d0      b900010000     mov ecx, 0x100                          ; ../coreutils-8.31/lib/utimens.h:43
0x000112d5      e95616ffff     jmp sym.imp.utimensat
0x000112da      660f1f440000   nop word [rax + rax]
;-- fdutimens:
0x000112e0      4156           push r14
0x000112e2      4155           push r13
0x000112e4      4154           push r12
0x000112e6      55             push rbp
0x000112e7      4989f4         mov r12, rsi
0x000112ea      53             push rbx
0x000112eb      89fb           mov ebx, edi
0x000112ed      4881ec100100.  sub rsp, 0x110
0x000112f4      64488b042528.  mov rax, qword fs:[0x28]
0x000112fd      488984240801.  mov qword [rsp + 0x108], rax
0x00011305      31c0           xor eax, eax
0x00011307      4885d2         test rdx, rdx
0x0001130a      0f84c0020000   je 0x115d0
0x00011310      f30f6f02       movdqu xmm0, xmmword [rdx]              ; ../coreutils-8.31/lib/utimens.c:53
0x00011314      488d7c2410     lea rdi, [rsp + 0x10]
0x00011319      0f29442410     movaps xmmword [rsp + 0x10], xmm0       ; ../coreutils-8.31/lib/utimens.c:61
0x0001131e      48897c2408     mov qword [rsp + 8], rdi
0x00011323      f30f6f4210     movdqu xmm0, xmmword [rdx + 0x10]
0x00011328      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0001132d      e8eefeffff     call sym.validate_timespec
0x00011332      85c0           test eax, eax
0x00011334      4189c5         mov r13d, eax
0x00011337      0f88b6030000   js 0x116f3
0x0001133d      85db           test ebx, ebx
0x0001133f      7909           jns 0x1134a                             ; ../coreutils-8.31/lib/utimens.c:119
0x00011341      4d85e4         test r12, r12
0x00011344      0f849e030000   je 0x116e8
0x0001134a      8b05dce32000   mov eax, dword [obj.utimensat_works_really] ; [0x21f72c:4]=0
0x00011350      85c0           test eax, eax
0x00011352      7834           js 0x11388
0x00011354      4183fd02       cmp r13d, 2
0x00011358      0f8402020000   je 0x11560
0x0001135e      488b742408     mov rsi, qword [rsp + 8]
0x00011363      85db           test ebx, ebx
0x00011365      0f8825030000   js 0x11690
0x0001136b      89df           mov edi, ebx
0x0001136d      e84e1cffff     call sym.imp.futimens
0x00011372      83f800         cmp eax, 0
0x00011375      89c5           mov ebp, eax
0x00011377      0f8e30030000   jle 0x116ad
0x0001137d      e8ce15ffff     call sym.imp.__errno_location
0x00011382      c70026000000   mov dword [rax], 0x26                   ; ../coreutils-8.31/lib/utimens.c:84 ; '&'
                                                                       ; [0x26:4]=0xec900000
0x00011388      4585ed         test r13d, r13d
0x0001138b      c70597e32000.  mov dword [obj.utimensat_works_really], 0xffffffff ; [0x21f72c:4]=0
0x00011395      c70589e32000.  mov dword [obj.lutimensat_works_really], 0xffffffff ; [0x21f728:4]=0
0x0001139f      0f855b010000   jne 0x11500
0x000113a5      488b742408     mov rsi, qword [rsp + 8]
0x000113aa      4885f6         test rsi, rsi
0x000113ad      0f848d020000   je 0x11640
0x000113b3      488b06         mov rax, qword [rsi]
0x000113b6      488b7e08       mov rdi, qword [rsi + 8]
0x000113ba      48b9cff753e3.  movabs rcx, 0x20c49ba5e353f7cf
0x000113c4      4c8d6c2430     lea r13, [rsp + 0x30]
0x000113c9      4889442430     mov qword [rsp + 0x30], rax
0x000113ce      4889f8         mov rax, rdi
0x000113d1      48c1ff3f       sar rdi, 0x3f
0x000113d5      48f7e9         imul rcx
0x000113d8      488b4610       mov rax, qword [rsi + 0x10]
0x000113dc      488b7618       mov rsi, qword [rsi + 0x18]
0x000113e0      4889442440     mov qword [rsp + 0x40], rax
0x000113e5      4889f0         mov rax, rsi
0x000113e8      48c1fe3f       sar rsi, 0x3f
0x000113ec      48c1fa07       sar rdx, 7
0x000113f0      4829fa         sub rdx, rdi
0x000113f3      4889542438     mov qword [rsp + 0x38], rdx
0x000113f8      48f7e9         imul rcx
0x000113fb      4889d1         mov rcx, rdx
0x000113fe      48c1f907       sar rcx, 7
0x00011402      4829f1         sub rcx, rsi
0x00011405      48894c2448     mov qword [rsp + 0x48], rcx
0x0001140a      85db           test ebx, ebx
0x0001140c      4c89ea         mov rdx, r13                            ; ../coreutils-8.31/lib/utimens.c:128
0x0001140f      0f88d3010000   js 0x115e8
0x00011415      31f6           xor esi, esi
0x00011417      89df           mov edi, ebx
0x00011419      e8921cffff     call sym.imp.futimesat
0x0001141e      85c0           test eax, eax
0x00011420      89c5           mov ebp, eax
0x00011422      0f85f8010000   jne 0x11620
0x00011428      4d85ed         test r13, r13
0x0001142b      0f84c6010000   je 0x115f7
0x00011431      49817d081fa1.  cmp qword [r13 + 8], 0x7a11f
0x00011439      410f9fc4       setg r12b
0x0001143d      49817d181fa1.  cmp qword [r13 + 0x18], 0x7a11f
0x00011445      410f9fc6       setg r14b
0x00011449      4584e4         test r12b, r12b
0x0001144c      7509           jne 0x11457
0x0001144e      4584f6         test r14b, r14b
0x00011451      0f84a0010000   je 0x115f7
0x00011457      488d542470     lea rdx, [rsp + 0x70]                   ; ../coreutils-8.31/lib/utimens.c:138
0x0001145c      89de           mov esi, ebx
0x0001145e      bf01000000     mov edi, 1
0x00011463      e8b819ffff     call sym.imp.__fxstat
0x00011468      85c0           test eax, eax
0x0001146a      0f8587010000   jne 0x115f7
0x00011470      488b9424c800.  mov rdx, qword [rsp + 0xc8]             ; ../coreutils-8.31/lib/utimens.c:139
0x00011478      492b5510       sub rdx, qword [r13 + 0x10]
0x0001147c      488b8424b800.  mov rax, qword [rsp + 0xb8]
0x00011484      492b4500       sub rax, qword [r13]
0x00011488      66410f6f4500   movdqa xmm0, xmmword [r13]
0x0001148e      4883fa01       cmp rdx, 1
0x00011492      0f94c2         sete dl
0x00011495      0f29442450     movaps xmmword [rsp + 0x50], xmm0
0x0001149a      4121d6         and r14d, edx
0x0001149d      4883f801       cmp rax, 1
0x000114a1      66410f6f4510   movdqa xmm0, xmmword [r13 + 0x10]
0x000114a7      0f29442460     movaps xmmword [rsp + 0x60], xmm0
0x000114ac      0f854e020000   jne 0x11700
0x000114b2      4584e4         test r12b, r12b
0x000114b5      0f8445020000   je 0x11700
0x000114bb      4883bc24c000.  cmp qword [rsp + 0xc0], 0
0x000114c4      0f8536020000   jne 0x11700                             ; ../coreutils-8.31/lib/utimens.c:156
0x000114ca      4584f6         test r14b, r14b
0x000114cd      48c744245800.  mov qword [rsp + 0x58], 0
0x000114d6      740f           je 0x114e7
0x000114d8      4883bc24d000.  cmp qword [rsp + 0xd0], 0
0x000114e1      0f8431020000   je 0x11718
0x000114e7      488d542450     lea rdx, [rsp + 0x50]
0x000114ec      31f6           xor esi, esi
0x000114ee      89df           mov edi, ebx
0x000114f0      e8bb1bffff     call sym.imp.futimesat
0x000114f5      31ed           xor ebp, ebp
0x000114f7      e9fb000000     jmp 0x115f7
0x000114fc      0f1f4000       nop dword [rax]
0x00011500      4183fd03       cmp r13d, 3
0x00011504      7426           je 0x1152c
0x00011506      85db           test ebx, ebx
0x00011508      488d542470     lea rdx, [rsp + 0x70]
0x0001150d      0f883d010000   js 0x11650
0x00011513      89de           mov esi, ebx
0x00011515      bf01000000     mov edi, 1
0x0001151a      e80119ffff     call sym.imp.__fxstat
0x0001151f      85c0           test eax, eax
0x00011521      0f95c0         setne al
0x00011524      84c0           test al, al
0x00011526      0f85c7010000   jne 0x116f3
0x0001152c      48837c240800   cmp qword [rsp + 8], 0
0x00011532      0f8408010000   je 0x11640
0x00011538      488d742408     lea rsi, [rsp + 8]
0x0001153d      488d7c2470     lea rdi, [rsp + 0x70]
0x00011542      31ed           xor ebp, ebp
0x00011544      e8f7fbffff     call sym.update_timespec
0x00011549      84c0           test al, al
0x0001154b      0f8454feffff   je 0x113a5
0x00011551      e9a1000000     jmp 0x115f7
0x00011556      662e0f1f8400.  nop word cs:[rax + rax]
0x00011560      85db           test ebx, ebx                           ; ../coreutils-8.31/lib/utimens.c:-324
0x00011562      488d542470     lea rdx, [rsp + 0x70]
0x00011567      0f8803010000   js 0x11670
0x0001156d      89de           mov esi, ebx
0x0001156f      bf01000000     mov edi, 1
0x00011574      e8a718ffff     call sym.imp.__fxstat
0x00011579      85c0           test eax, eax
0x0001157b      0f95c0         setne al
0x0001157e      84c0           test al, al
0x00011580      0f856d010000   jne 0x116f3
0x00011586      488b742408     mov rsi, qword [rsp + 8]
0x0001158b      48817e08feff.  cmp qword [rsi + 8], 0x3ffffffe
0x00011593      0f8427010000   je 0x116c0
0x00011599      48817e18feff.  cmp qword [rsi + 0x18], 0x3ffffffe
0x000115a1      41bd03000000   mov r13d, 3
0x000115a7      0f85b6fdffff   jne 0x11363
0x000115ad      488b8424d000.  mov rax, qword [rsp + 0xd0]
0x000115b5      488b9424c800.  mov rdx, qword [rsp + 0xc8]
0x000115bd      48894618       mov qword [rsi + 0x18], rax
0x000115c1      48895610       mov qword [rsi + 0x10], rdx
0x000115c5      e999fdffff     jmp 0x11363
0x000115ca      660f1f440000   nop word [rax + rax]
0x000115d0      48c744240800.  mov qword [rsp + 8], 0
0x000115d9      4531ed         xor r13d, r13d
0x000115dc      e95cfdffff     jmp 0x1133d
0x000115e1      0f1f80000000.  nop dword [rax]
0x000115e8      4c89e6         mov rsi, r12
0x000115eb      bf9cffffff     mov edi, 0xffffff9c                     ; 4294967196
0x000115f0      e8bb1affff     call sym.imp.futimesat
0x000115f5      89c5           mov ebp, eax
0x000115f7      488b8c240801.  mov rcx, qword [rsp + 0x108]
0x000115ff      6448330c2528.  xor rcx, qword fs:[0x28]
0x00011608      89e8           mov eax, ebp                            ; stat.h:-211
0x0001160a      0f8516010000   jne 0x11726
0x00011610      4881c4100100.  add rsp, 0x110
0x00011617      5b             pop rbx
0x00011618      5d             pop rbp
0x00011619      415c           pop r12
0x0001161b      415d           pop r13
0x0001161d      415e           pop r14
0x0001161f      c3             ret
0x00011620      4d85e4         test r12, r12
0x00011623      bdffffffff     mov ebp, 0xffffffff                     ; -1
0x00011628      74cd           je 0x115f7
0x0001162a      4c89ee         mov rsi, r13
0x0001162d      4c89e7         mov rdi, r12
0x00011630      e88b16ffff     call sym.imp.utimes
0x00011635      89c5           mov ebp, eax                            ; ../coreutils-8.31/lib/utimens.c:-541
0x00011637      ebbe           jmp 0x115f7
0x00011639      0f1f80000000.  nop dword [rax]
0x00011640      4531ed         xor r13d, r13d
0x00011643      e9c2fdffff     jmp 0x1140a
0x00011648      0f1f84000000.  nop dword [rax + rax]
0x00011650      4c89e6         mov rsi, r12
0x00011653      bf01000000     mov edi, 1
0x00011658      e87317ffff     call sym.imp.__xstat
0x0001165d      85c0           test eax, eax
0x0001165f      0f95c0         setne al
0x00011662      e9bdfeffff     jmp 0x11524
0x00011667      660f1f840000.  nop word [rax + rax]
0x00011670      4c89e6         mov rsi, r12
0x00011673      bf01000000     mov edi, 1
0x00011678      e85317ffff     call sym.imp.__xstat
0x0001167d      85c0           test eax, eax
0x0001167f      0f95c0         setne al
0x00011682      e9f7feffff     jmp 0x1157e
0x00011687      660f1f840000.  nop word [rax + rax]
0x00011690      31c9           xor ecx, ecx
0x00011692      4889f2         mov rdx, rsi
0x00011695      bf9cffffff     mov edi, 0xffffff9c                     ; 4294967196
0x0001169a      4c89e6         mov rsi, r12
0x0001169d      e88e12ffff     call sym.imp.utimensat
0x000116a2      83f800         cmp eax, 0
0x000116a5      89c5           mov ebp, eax                            ; ../coreutils-8.31/lib/utimens.c:-337
0x000116a7      0f8fd0fcffff   jg 0x1137d
0x000116ad      757c           jne 0x1172b
0x000116af      c70573e02000.  mov dword [obj.utimensat_works_really], 1 ; [0x21f72c:4]=0
0x000116b9      e939ffffff     jmp 0x115f7
0x000116be      6690           nop
0x000116c0      488b8424c000.  mov rax, qword [rsp + 0xc0]
0x000116c8      488b9424b800.  mov rdx, qword [rsp + 0xb8]
0x000116d0      41bd03000000   mov r13d, 3
0x000116d6      488916         mov qword [rsi], rdx
0x000116d9      48894608       mov qword [rsi + 8], rax
0x000116dd      e981fcffff     jmp 0x11363
0x000116e2      660f1f440000   nop word [rax + rax]
0x000116e8      e86312ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/utimens.c:-283
0x000116ed      c70009000000   mov dword [rax], 9
0x000116f3      bdffffffff     mov ebp, 0xffffffff                     ; -1
0x000116f8      e9fafeffff     jmp 0x115f7
0x000116fd      0f1f00         nop dword [rax]
0x00011700      4584f6         test r14b, r14b
0x00011703      0f84ecfdffff   je 0x114f5                              ; ../coreutils-8.31/lib/utimens.c:-274
0x00011709      4883bc24d000.  cmp qword [rsp + 0xd0], 0
0x00011712      0f85ddfdffff   jne 0x114f5
0x00011718      48c744246800.  mov qword [rsp + 0x68], 0
0x00011721      e9c1fdffff     jmp 0x114e7
0x00011726      e80514ffff     call sym.imp.__stack_chk_fail
0x0001172b      e82012ffff     call sym.imp.__errno_location
0x00011730      833826         cmp dword [rax], 0x26
0x00011733      0f8576ffffff   jne 0x116af
0x00011739      e94afcffff     jmp 0x11388
0x0001173e      6690           nop
;-- utimens:
0x00011740      4889f2         mov rdx, rsi
0x00011743      4889fe         mov rsi, rdi                            ; ../coreutils-8.31/lib/utimens.c:-264
0x00011746      bfffffffff     mov edi, 0xffffffff                     ; -1
0x0001174b      e990fbffff     jmp sym.fdutimens                       ; ../coreutils-8.31/lib/utimens.c:-253
;-- lutimens:
0x00011750      4154           push r12
0x00011752      55             push rbp
0x00011753      4989fc         mov r12, rdi
0x00011756      53             push rbx
0x00011757      4881ecd00000.  sub rsp, 0xd0
0x0001175e      64488b042528.  mov rax, qword fs:[0x28]
0x00011767      48898424c800.  mov qword [rsp + 0xc8], rax
0x0001176f      31c0           xor eax, eax
0x00011771      4885f6         test rsi, rsi
0x00011774      0f84f6000000   je 0x11870
0x0001177a      f30f6f06       movdqu xmm0, xmmword [rsi]              ; ../coreutils-8.31/lib/utimens.c:-216
0x0001177e      488d7c2410     lea rdi, [rsp + 0x10]
0x00011783      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00011788      48897c2408     mov qword [rsp + 8], rdi
0x0001178d      f30f6f4610     movdqu xmm0, xmmword [rsi + 0x10]       ; ../coreutils-8.31/lib/utimens.c:-206
0x00011792      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00011797      e884faffff     call sym.validate_timespec              ; ../coreutils-8.31/lib/utimens.c:-199
0x0001179c      85c0           test eax, eax
0x0001179e      89c3           mov ebx, eax
0x000117a0      0f880a010000   js 0x118b0
0x000117a6      8b057cdf2000   mov eax, dword [obj.lutimensat_works_really] ; ../coreutils-8.31/lib/utimens.c:-195 ; [0x21f728:4]=0
0x000117ac      85c0           test eax, eax
0x000117ae      7836           js 0x117e6
0x000117b0      83fb02         cmp ebx, 2
0x000117b3      0f8427010000   je 0x118e0
0x000117b9      488b542408     mov rdx, qword [rsp + 8]
0x000117be      b900010000     mov ecx, 0x100
0x000117c3      4c89e6         mov rsi, r12
0x000117c6      bf9cffffff     mov edi, 0xffffff9c                     ; 4294967196
0x000117cb      e86011ffff     call sym.imp.utimensat
0x000117d0      83f800         cmp eax, 0
0x000117d3      89c5           mov ebp, eax
0x000117d5      0f8ee5000000   jle 0x118c0
0x000117db      e87011ffff     call sym.imp.__errno_location
0x000117e0      c70026000000   mov dword [rax], 0x26                   ; '&'
                                                                       ; [0x26:4]=0xec900000
0x000117e6      85db           test ebx, ebx
0x000117e8      c70536df2000.  mov dword [obj.lutimensat_works_really], 0xffffffff ; [0x21f728:4]=0
0x000117f2      0f849d000000   je 0x11895
0x000117f8      83fb03         cmp ebx, 3
0x000117fb      0f8537010000   jne 0x11938
0x00011801      48837c240800   cmp qword [rsp + 8], 0
0x00011807      7417           je 0x11820
0x00011809      488d742408     lea rsi, [rsp + 8]
0x0001180e      488d7c2430     lea rdi, [rsp + 0x30]
0x00011813      31ed           xor ebp, ebp
0x00011815      e826f9ffff     call sym.update_timespec                ; ../coreutils-8.31/lib/utimens.c:-253
0x0001181a      84c0           test al, al
0x0001181c      752a           jne 0x11848
0x0001181e      6690           nop
0x00011820      8b442448       mov eax, dword [rsp + 0x48]
0x00011824      2500f00000     and eax, 0xf000
0x00011829      3d00a00000     cmp eax, 0xa000
0x0001182e      0f8452010000   je 0x11986
0x00011834      488b542408     mov rdx, qword [rsp + 8]
0x00011839      4c89e6         mov rsi, r12
0x0001183c      bfffffffff     mov edi, 0xffffffff                     ; -1
0x00011841      e89afaffff     call sym.fdutimens
0x00011846      89c5           mov ebp, eax
0x00011848      488b8c24c800.  mov rcx, qword [rsp + 0xc8]
0x00011850      6448330c2528.  xor rcx, qword fs:[0x28]
0x00011859      89e8           mov eax, ebp
0x0001185b      0f8535010000   jne 0x11996
0x00011861      4881c4d00000.  add rsp, 0xd0
0x00011868      5b             pop rbx
0x00011869      5d             pop rbp
0x0001186a      415c           pop r12
0x0001186c      c3             ret
0x0001186d      0f1f00         nop dword [rax]
0x00011870      8b0db2de2000   mov ecx, dword [obj.lutimensat_works_really] ; [0x21f728:4]=0
0x00011876      31d2           xor edx, edx
0x00011878      31db           xor ebx, ebx
0x0001187a      48c744240800.  mov qword [rsp + 8], 0
0x00011883      85c9           test ecx, ecx
0x00011885      0f8933ffffff   jns 0x117be                             ; stat.h:-332
0x0001188b      c70593de2000.  mov dword [obj.lutimensat_works_really], 0xffffffff ; [0x21f728:4]=0
0x00011895      488d542430     lea rdx, [rsp + 0x30]
0x0001189a      4c89e6         mov rsi, r12
0x0001189d      bf01000000     mov edi, 1
0x000118a2      e85912ffff     call sym.imp.__lxstat
0x000118a7      85c0           test eax, eax
0x000118a9      0f8471ffffff   je 0x11820
0x000118af      90             nop
0x000118b0      bdffffffff     mov ebp, 0xffffffff                     ; -1
0x000118b5      eb91           jmp 0x11848
0x000118b7      660f1f840000.  nop word [rax + rax]
0x000118c0      0f85d5000000   jne 0x1199b
0x000118c6      c7055cde2000.  mov dword [obj.utimensat_works_really], 1 ; [0x21f72c:4]=0
0x000118d0      c7054ede2000.  mov dword [obj.lutimensat_works_really], 1 ; [0x21f728:4]=0
0x000118da      e969ffffff     jmp 0x11848
0x000118df      90             nop
0x000118e0      488d542430     lea rdx, [rsp + 0x30]
0x000118e5      4c89e6         mov rsi, r12                            ; ../coreutils-8.31/lib/utimens.c:-323
0x000118e8      bf01000000     mov edi, 1
0x000118ed      e80e12ffff     call sym.imp.__lxstat
0x000118f2      85c0           test eax, eax
0x000118f4      75ba           jne 0x118b0
0x000118f6      488b542408     mov rdx, qword [rsp + 8]
0x000118fb      48817a08feff.  cmp qword [rdx + 8], 0x3ffffffe
0x00011903      7463           je 0x11968                              ; ../coreutils-8.31/lib/utimens.c:-360
0x00011905      48817a18feff.  cmp qword [rdx + 0x18], 0x3ffffffe
0x0001190d      bb03000000     mov ebx, 3
0x00011912      0f85a6feffff   jne 0x117be
0x00011918      488b84249000.  mov rax, qword [rsp + 0x90]
0x00011920      488b8c248800.  mov rcx, qword [rsp + 0x88]
0x00011928      48894218       mov qword [rdx + 0x18], rax
0x0001192c      48894a10       mov qword [rdx + 0x10], rcx
0x00011930      e989feffff     jmp 0x117be
0x00011935      0f1f00         nop dword [rax]
0x00011938      488d542430     lea rdx, [rsp + 0x30]
0x0001193d      4c89e6         mov rsi, r12
0x00011940      bf01000000     mov edi, 1
0x00011945      e8b611ffff     call sym.imp.__lxstat
0x0001194a      85c0           test eax, eax
0x0001194c      0f855effffff   jne 0x118b0
0x00011952      48837c240800   cmp qword [rsp + 8], 0
0x00011958      0f85abfeffff   jne 0x11809
0x0001195e      e9bdfeffff     jmp 0x11820
0x00011963      0f1f440000     nop dword [rax + rax]
0x00011968      488b84248000.  mov rax, qword [rsp + 0x80]
0x00011970      488b4c2478     mov rcx, qword [rsp + 0x78]
0x00011975      bb03000000     mov ebx, 3
0x0001197a      48890a         mov qword [rdx], rcx
0x0001197d      48894208       mov qword [rdx + 8], rax
0x00011981      e938feffff     jmp 0x117be
0x00011986      e8c50fffff     call sym.imp.__errno_location
0x0001198b      c70026000000   mov dword [rax], 0x26                   ; '&'
                                                                       ; [0x26:4]=0xec900000
0x00011991      e91affffff     jmp 0x118b0
0x00011996      e89511ffff     call sym.imp.__stack_chk_fail
0x0001199b      e8b00fffff     call sym.imp.__errno_location
0x000119a0      833826         cmp dword [rax], 0x26
0x000119a3      0f851dffffff   jne 0x118c6
0x000119a9      e938feffff     jmp 0x117e6
0x000119ae      6690           nop
;-- version_etc_arn:
0x000119b0      4157           push r15
0x000119b2      4156           push r14
0x000119b4      4155           push r13
0x000119b6      4154           push r12
0x000119b8      4d89cc         mov r12, r9
0x000119bb      55             push rbp
0x000119bc      53             push rbx
0x000119bd      4889fd         mov rbp, rdi
0x000119c0      4c89c3         mov rbx, r8
0x000119c3      4883ec28       sub rsp, 0x28
0x000119c7      4885f6         test rsi, rsi
0x000119ca      0f8418010000   je 0x11ae8
0x000119d0      4989d0         mov r8, rdx
0x000119d3      488d15a56f00.  lea rdx, str.s___s___s                  ; 0x1897f ; "%s (%s) %s\n"
0x000119da      4989c9         mov r9, rcx
0x000119dd      31c0           xor eax, eax
0x000119df      4889f1         mov rcx, rsi
0x000119e2      be01000000     mov esi, 1
0x000119e7      e86416ffff     call sym.imp.__fprintf_chk
0x000119ec      488d359f6f00.  lea rsi, [0x00018992]                   ; "(C)"
0x000119f3      31ff           xor edi, edi
0x000119f5      ba05000000     mov edx, 5
0x000119fa      e8d110ffff     call sym.imp.dcgettext
0x000119ff      488d159a7200.  lea rdx, obj.version_etc_copyright      ; 0x18ca0 ; "Copyright %s %d Free Software Foundation, Inc."
0x00011a06      4889c1         mov rcx, rax
0x00011a09      41b8e3070000   mov r8d, 0x7e3
0x00011a0f      be01000000     mov esi, 1
0x00011a14      4889ef         mov rdi, rbp
0x00011a17      31c0           xor eax, eax
0x00011a19      e83216ffff     call sym.imp.__fprintf_chk
0x00011a1e      488d35f36f00.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x18a18 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00011a25      31ff           xor edi, edi
0x00011a27      ba05000000     mov edx, 5
0x00011a2c      e89f10ffff     call sym.imp.dcgettext
0x00011a31      4889ee         mov rsi, rbp
0x00011a34      4889c7         mov rdi, rax
0x00011a37      e87412ffff     call sym.imp.fputs_unlocked
0x00011a3c      4983fc09       cmp r12, 9
0x00011a40      0f873a030000   ja 0x11d80
0x00011a46      488d15277200.  lea rdx, [0x00018c74]
0x00011a4d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00011a51      4801d0         add rax, rdx
0x00011a54      ffe0           jmp rax
0x00011a56      662e0f1f8400.  nop word cs:[rax + rax]
0x00011a60      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00011a64      488b4310       mov rax, qword [rbx + 0x10]
0x00011a68      488d35197100.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x18b88 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x00011a6f      4c8b4308       mov r8, qword [rbx + 8]
0x00011a73      ba05000000     mov edx, 5
0x00011a78      31ff           xor edi, edi
0x00011a7a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00011a7e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00011a82      4c894c2410     mov qword [rsp + 0x10], r9
0x00011a87      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00011a8b      4c8b7318       mov r14, qword [rbx + 0x18]
0x00011a8f      48890424       mov qword [rsp], rax
0x00011a93      4c89442408     mov qword [rsp + 8], r8
0x00011a98      488b1b         mov rbx, qword [rbx]
0x00011a9b      e83010ffff     call sym.imp.dcgettext
0x00011aa0      4883ec08       sub rsp, 8
0x00011aa4      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00011aa9      4889c2         mov rdx, rax
0x00011aac      4889d9         mov rcx, rbx
0x00011aaf      be01000000     mov esi, 1
0x00011ab4      4889ef         mov rdi, rbp
0x00011ab7      31c0           xor eax, eax
0x00011ab9      4151           push r9
0x00011abb      4155           push r13
0x00011abd      4154           push r12
0x00011abf      4157           push r15
0x00011ac1      4156           push r14
0x00011ac3      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00011ac8      4c8b442438     mov r8, qword [rsp + 0x38]
0x00011acd      e87e15ffff     call sym.imp.__fprintf_chk
0x00011ad2      4883c430       add rsp, 0x30
0x00011ad6      4883c428       add rsp, 0x28
0x00011ada      5b             pop rbx
0x00011adb      5d             pop rbp
0x00011adc      415c           pop r12
0x00011ade      415d           pop r13
0x00011ae0      415e           pop r14
0x00011ae2      415f           pop r15
0x00011ae4      c3             ret
0x00011ae5      0f1f00         nop dword [rax]
0x00011ae8      4989c8         mov r8, rcx
0x00011aeb      4889d1         mov rcx, rdx
0x00011aee      488d15966e00.  lea rdx, str.s__s                       ; 0x1898b ; "%s %s\n"
0x00011af5      be01000000     mov esi, 1
0x00011afa      31c0           xor eax, eax
0x00011afc      e84f15ffff     call sym.imp.__fprintf_chk
0x00011b01      e9e6feffff     jmp 0x119ec
0x00011b06      662e0f1f8400.  nop word cs:[rax + rax]
0x00011b10      4c8b5340       mov r10, qword [rbx + 0x40]
0x00011b14      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00011b18      488d35997000.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x18bb8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x00011b1f      488b4310       mov rax, qword [rbx + 0x10]
0x00011b23      4c8b4308       mov r8, qword [rbx + 8]
0x00011b27      ba05000000     mov edx, 5
0x00011b2c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00011b30      4c8b6328       mov r12, qword [rbx + 0x28]
0x00011b34      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00011b38      4c8b7318       mov r14, qword [rbx + 0x18]
0x00011b3c      488b1b         mov rbx, qword [rbx]
0x00011b3f      4c89542418     mov qword [rsp + 0x18], r10
0x00011b44      4c894c2410     mov qword [rsp + 0x10], r9
0x00011b49      48890424       mov qword [rsp], rax
0x00011b4d      4c89442408     mov qword [rsp + 8], r8
0x00011b52      31ff           xor edi, edi
0x00011b54      e8770fffff     call sym.imp.dcgettext
0x00011b59      4c8b542418     mov r10, qword [rsp + 0x18]
0x00011b5e      4152           push r10
0x00011b60      e93fffffff     jmp 0x11aa4
0x00011b65      0f1f00         nop dword [rax]
0x00011b68      488b1b         mov rbx, qword [rbx]
0x00011b6b      488d35246e00.  lea rsi, str.Written_by__s.             ; 0x18996 ; "Written by %s.\n"
0x00011b72      ba05000000     mov edx, 5
0x00011b77      31ff           xor edi, edi
0x00011b79      e8520fffff     call sym.imp.dcgettext
0x00011b7e      4883c428       add rsp, 0x28
0x00011b82      4889d9         mov rcx, rbx
0x00011b85      4889ef         mov rdi, rbp
0x00011b88      5b             pop rbx
0x00011b89      5d             pop rbp
0x00011b8a      415c           pop r12
0x00011b8c      415d           pop r13
0x00011b8e      415e           pop r14
0x00011b90      415f           pop r15
0x00011b92      4889c2         mov rdx, rax
0x00011b95      be01000000     mov esi, 1
0x00011b9a      31c0           xor eax, eax
0x00011b9c      e9af14ffff     jmp sym.imp.__fprintf_chk
0x00011ba1      0f1f80000000.  nop dword [rax]
0x00011ba8      4c8b6308       mov r12, qword [rbx + 8]
0x00011bac      488d35f36d00.  lea rsi, str.Written_by__s_and__s.      ; 0x189a6 ; "Written by %s and %s.\n"
0x00011bb3      488b1b         mov rbx, qword [rbx]
0x00011bb6      ba05000000     mov edx, 5
0x00011bbb      31ff           xor edi, edi
0x00011bbd      e80e0fffff     call sym.imp.dcgettext
0x00011bc2      4883c428       add rsp, 0x28
0x00011bc6      4d89e0         mov r8, r12
0x00011bc9      4889d9         mov rcx, rbx
0x00011bcc      4889ef         mov rdi, rbp
0x00011bcf      4889c2         mov rdx, rax
0x00011bd2      be01000000     mov esi, 1
0x00011bd7      5b             pop rbx
0x00011bd8      5d             pop rbp
0x00011bd9      415c           pop r12
0x00011bdb      415d           pop r13
0x00011bdd      415e           pop r14
0x00011bdf      415f           pop r15
0x00011be1      31c0           xor eax, eax
0x00011be3      e96814ffff     jmp sym.imp.__fprintf_chk
0x00011be8      0f1f84000000.  nop dword [rax + rax]
0x00011bf0      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00011bf4      4c8b6308       mov r12, qword [rbx + 8]
0x00011bf8      488d35be6d00.  lea rsi, str.Written_by__s___s__and__s. ; 0x189bd ; "Written by %s, %s, and %s.\n"
0x00011bff      488b1b         mov rbx, qword [rbx]
0x00011c02      ba05000000     mov edx, 5
0x00011c07      31ff           xor edi, edi
0x00011c09      e8c20effff     call sym.imp.dcgettext
0x00011c0e      4883c428       add rsp, 0x28
0x00011c12      4d89e9         mov r9, r13
0x00011c15      4d89e0         mov r8, r12
0x00011c18      4889d9         mov rcx, rbx
0x00011c1b      4889ef         mov rdi, rbp
0x00011c1e      4889c2         mov rdx, rax
0x00011c21      5b             pop rbx
0x00011c22      5d             pop rbp
0x00011c23      415c           pop r12
0x00011c25      415d           pop r13
0x00011c27      415e           pop r14
0x00011c29      415f           pop r15
0x00011c2b      be01000000     mov esi, 1
0x00011c30      31c0           xor eax, eax
0x00011c32      e91914ffff     jmp sym.imp.__fprintf_chk
0x00011c37      660f1f840000.  nop word [rax + rax]
0x00011c40      488d35a16e00.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x18ae8 ; "Written by %s, %s, %s,\nand %s.\n"
0x00011c47      ba05000000     mov edx, 5
0x00011c4c      31ff           xor edi, edi
0x00011c4e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00011c52      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00011c56      4c8b6308       mov r12, qword [rbx + 8]
0x00011c5a      488b1b         mov rbx, qword [rbx]
0x00011c5d      e86e0effff     call sym.imp.dcgettext
0x00011c62      4883ec08       sub rsp, 8
0x00011c66      4156           push r14
0x00011c68      4889c2         mov rdx, rax
0x00011c6b      4d89e9         mov r9, r13
0x00011c6e      4d89e0         mov r8, r12
0x00011c71      4889d9         mov rcx, rbx
0x00011c74      4889ef         mov rdi, rbp
0x00011c77      be01000000     mov esi, 1
0x00011c7c      31c0           xor eax, eax
0x00011c7e      e8cd13ffff     call sym.imp.__fprintf_chk
0x00011c83      58             pop rax
0x00011c84      5a             pop rdx
0x00011c85      4883c428       add rsp, 0x28
0x00011c89      5b             pop rbx
0x00011c8a      5d             pop rbp
0x00011c8b      415c           pop r12
0x00011c8d      415d           pop r13
0x00011c8f      415e           pop r14
0x00011c91      415f           pop r15
0x00011c93      c3             ret
0x00011c94      0f1f4000       nop dword [rax]
0x00011c98      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00011c9c      488d35656e00.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x18b08 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00011ca3      ba05000000     mov edx, 5
0x00011ca8      31ff           xor edi, edi
0x00011caa      4c8b7318       mov r14, qword [rbx + 0x18]
0x00011cae      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00011cb2      4c8b6308       mov r12, qword [rbx + 8]
0x00011cb6      488b1b         mov rbx, qword [rbx]
0x00011cb9      e8120effff     call sym.imp.dcgettext
0x00011cbe      4157           push r15
0x00011cc0      eba4           jmp 0x11c66
0x00011cc2      660f1f440000   nop word [rax + rax]
0x00011cc8      4c8b4308       mov r8, qword [rbx + 8]
0x00011ccc      4c8b6328       mov r12, qword [rbx + 0x28]
0x00011cd0      488d35596e00.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x18b30 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00011cd7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00011cdb      4c8b7318       mov r14, qword [rbx + 0x18]
0x00011cdf      ba05000000     mov edx, 5
0x00011ce4      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00011ce8      31ff           xor edi, edi
0x00011cea      488b1b         mov rbx, qword [rbx]
0x00011ced      4c890424       mov qword [rsp], r8
0x00011cf1      e8da0dffff     call sym.imp.dcgettext
0x00011cf6      4883ec08       sub rsp, 8
0x00011cfa      4d89e9         mov r9, r13
0x00011cfd      4154           push r12
0x00011cff      4157           push r15
0x00011d01      4156           push r14
0x00011d03      4c8b442420     mov r8, qword [rsp + 0x20]
0x00011d08      4889d9         mov rcx, rbx
0x00011d0b      4889c2         mov rdx, rax
0x00011d0e      4889ef         mov rdi, rbp
0x00011d11      be01000000     mov esi, 1
0x00011d16      31c0           xor eax, eax
0x00011d18      e83313ffff     call sym.imp.__fprintf_chk
0x00011d1d      4883c420       add rsp, 0x20
0x00011d21      4883c428       add rsp, 0x28
0x00011d25      5b             pop rbx
0x00011d26      5d             pop rbp
0x00011d27      415c           pop r12
0x00011d29      415d           pop r13
0x00011d2b      415e           pop r14
0x00011d2d      415f           pop r15
0x00011d2f      c3             ret
0x00011d30      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00011d34      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00011d38      488d35196e00.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x18b58 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x00011d3f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00011d43      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00011d47      ba05000000     mov edx, 5
0x00011d4c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00011d50      4c8b4308       mov r8, qword [rbx + 8]
0x00011d54      31ff           xor edi, edi
0x00011d56      4c894c2408     mov qword [rsp + 8], r9
0x00011d5b      488b1b         mov rbx, qword [rbx]
0x00011d5e      4c890424       mov qword [rsp], r8
0x00011d62      e8690dffff     call sym.imp.dcgettext
0x00011d67      4155           push r13
0x00011d69      4154           push r12
0x00011d6b      4157           push r15
0x00011d6d      4156           push r14
0x00011d6f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00011d74      eb8d           jmp 0x11d03
0x00011d76      662e0f1f8400.  nop word cs:[rax + rax]
0x00011d80      4c8b5340       mov r10, qword [rbx + 0x40]
0x00011d84      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00011d88      ba05000000     mov edx, 5
0x00011d8d      488b4310       mov rax, qword [rbx + 0x10]
0x00011d91      4c8b4308       mov r8, qword [rbx + 8]
0x00011d95      488d35546e00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x18bf0 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x00011d9c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00011da0      4c8b6328       mov r12, qword [rbx + 0x28]
0x00011da4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00011da8      4c8b7318       mov r14, qword [rbx + 0x18]
0x00011dac      4c89542418     mov qword [rsp + 0x18], r10
0x00011db1      4c894c2410     mov qword [rsp + 0x10], r9
0x00011db6      48890424       mov qword [rsp], rax
0x00011dba      4c89442408     mov qword [rsp + 8], r8
0x00011dbf      488b1b         mov rbx, qword [rbx]
0x00011dc2      e98bfdffff     jmp 0x11b52
0x00011dc7      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00011dd0      4531c9         xor r9d, r9d
0x00011dd3      49833800       cmp qword [r8], 0
0x00011dd7      7412           je 0x11deb
0x00011dd9      0f1f80000000.  nop dword [rax]
0x00011de0      4983c101       add r9, 1
0x00011de4      4b833cc800     cmp qword [r8 + r9*8], 0
0x00011de9      75f5           jne 0x11de0
0x00011deb      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00011df0      4883ec68       sub rsp, 0x68
0x00011df4      4d89c2         mov r10, r8
0x00011df7      4531c9         xor r9d, r9d
0x00011dfa      64488b042528.  mov rax, qword fs:[0x28]
0x00011e03      4889442458     mov qword [rsp + 0x58], rax
0x00011e08      31c0           xor eax, eax
0x00011e0a      4989e0         mov r8, rsp
0x00011e0d      0f1f00         nop dword [rax]
0x00011e10      418b02         mov eax, dword [r10]
0x00011e13      83f82f         cmp eax, 0x2f
0x00011e16      7742           ja 0x11e5a
0x00011e18      4189c3         mov r11d, eax
0x00011e1b      4d035a10       add r11, qword [r10 + 0x10]
0x00011e1f      83c008         add eax, 8
0x00011e22      418902         mov dword [r10], eax
0x00011e25      498b03         mov rax, qword [r11]
0x00011e28      4885c0         test rax, rax
0x00011e2b      4b8904c8       mov qword [r8 + r9*8], rax
0x00011e2f      740a           je 0x11e3b
0x00011e31      4983c101       add r9, 1
0x00011e35      4983f90a       cmp r9, 0xa
0x00011e39      75d5           jne 0x11e10
0x00011e3b      e870fbffff     call sym.version_etc_arn
0x00011e40      488b442458     mov rax, qword [rsp + 0x58]
0x00011e45      644833042528.  xor rax, qword fs:[0x28]
0x00011e4e      7505           jne 0x11e55
0x00011e50      4883c468       add rsp, 0x68
0x00011e54      c3             ret
0x00011e55      e8d60cffff     call sym.imp.__stack_chk_fail
0x00011e5a      4d8b5a08       mov r11, qword [r10 + 8]
0x00011e5e      498d4308       lea rax, [r11 + 8]
0x00011e62      49894208       mov qword [r10 + 8], rax
0x00011e66      ebbd           jmp 0x11e25
0x00011e68      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00011e70      55             push rbp
0x00011e71      53             push rbx
0x00011e72      41ba20000000   mov r10d, 0x20                          ; "@"
0x00011e78      4531db         xor r11d, r11d
0x00011e7b      4881ecb80000.  sub rsp, 0xb8
0x00011e82      64488b042528.  mov rax, qword fs:[0x28]
0x00011e8b      4889442478     mov qword [rsp + 0x78], rax
0x00011e90      31c0           xor eax, eax
0x00011e92      488d8424d000.  lea rax, [rsp + 0xd0]
0x00011e9a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00011ea2      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x00011eaa      4c8d442420     lea r8, [rsp + 0x20]
0x00011eaf      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00011eb7      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x00011ebf      4889442410     mov qword [rsp + 0x10], rax
0x00011ec4      488d84248000.  lea rax, [rsp + 0x80]
0x00011ecc      4531c9         xor r9d, r9d
0x00011ecf      4889442418     mov qword [rsp + 0x18], rax
0x00011ed4      4889c5         mov rbp, rax
0x00011ed7      660f1f840000.  nop word [rax + rax]
0x00011ee0      4183fa2f       cmp r10d, 0x2f
0x00011ee4      7756           ja 0x11f3c
0x00011ee6      4489d0         mov eax, r10d
0x00011ee9      41bb01000000   mov r11d, 1
0x00011eef      4183c208       add r10d, 8
0x00011ef3      4801e8         add rax, rbp
0x00011ef6      488b00         mov rax, qword [rax]
0x00011ef9      4885c0         test rax, rax
0x00011efc      4b8904c8       mov qword [r8 + r9*8], rax
0x00011f00      740a           je 0x11f0c
0x00011f02      4983c101       add r9, 1
0x00011f06      4983f90a       cmp r9, 0xa
0x00011f0a      75d4           jne 0x11ee0
0x00011f0c      4584db         test r11b, r11b
0x00011f0f      7524           jne 0x11f35
0x00011f11      e89afaffff     call sym.version_etc_arn
0x00011f16      488b442478     mov rax, qword [rsp + 0x78]
0x00011f1b      644833042528.  xor rax, qword fs:[0x28]
0x00011f24      750a           jne 0x11f30
0x00011f26      4881c4b80000.  add rsp, 0xb8
0x00011f2d      5b             pop rbx
0x00011f2e      5d             pop rbp
0x00011f2f      c3             ret
0x00011f30      e8fb0bffff     call sym.imp.__stack_chk_fail
0x00011f35      4489542408     mov dword [rsp + 8], r10d
0x00011f3a      ebd5           jmp 0x11f11
0x00011f3c      4889d8         mov rax, rbx
0x00011f3f      4883c308       add rbx, 8
0x00011f43      ebb1           jmp 0x11ef6
0x00011f45      90             nop
0x00011f46      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00011f50      53             push rbx
0x00011f51      488d35816a00.  lea rsi, str.Report_bugs_to:__s         ; 0x189d9 ; "\nReport bugs to: %s\n"
0x00011f58      ba05000000     mov edx, 5
0x00011f5d      31ff           xor edi, edi
0x00011f5f      e86c0bffff     call sym.imp.dcgettext
0x00011f64      488d15836a00.  lea rdx, str.bug_coreutils_gnu.org      ; 0x189ee ; "bug-coreutils@gnu.org"
0x00011f6b      4889c6         mov rsi, rax
0x00011f6e      bf01000000     mov edi, 1
0x00011f73      31c0           xor eax, eax
0x00011f75      e8660fffff     call sym.imp.__printf_chk
0x00011f7a      488d35836a00.  lea rsi, str.s_home_page:___s           ; 0x18a04 ; "%s home page: <%s>\n"
0x00011f81      ba05000000     mov edx, 5
0x00011f86      31ff           xor edi, edi
0x00011f88      e8430bffff     call sym.imp.dcgettext
0x00011f8d      488d0d245300.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x172b8 ; "https://www.gnu.org/software/coreutils/"
0x00011f94      488d156b4500.  lea rdx, str.GNU_coreutils              ; 0x16506 ; "GNU coreutils"
0x00011f9b      4889c6         mov rsi, rax
0x00011f9e      bf01000000     mov edi, 1
0x00011fa3      31c0           xor eax, eax
0x00011fa5      e8360fffff     call sym.imp.__printf_chk
0x00011faa      488b1d37b120.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21d0e8:8]=0
0x00011fb1      488d35786c00.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x18c30 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00011fb8      31ff           xor edi, edi
0x00011fba      ba05000000     mov edx, 5
0x00011fbf      e80c0bffff     call sym.imp.dcgettext
0x00011fc4      4889de         mov rsi, rbx
0x00011fc7      4889c7         mov rdi, rax
0x00011fca      5b             pop rbx
0x00011fcb      e9e00cffff     jmp sym.imp.fputs_unlocked
;-- can_write_any_file:
0x00011fd0      803d5ad72000.  cmp byte [obj.initialized.3064], 0      ; ../coreutils-8.31/lib/write-any-file.c:33 ; [0x21f731:1]=0
0x00011fd7      740f           je 0x11fe8
0x00011fd9      0fb60550d720.  movzx eax, byte [obj.can_write.3065]    ; [0x21f730:1]=0
0x00011fe0      c3             ret                                     ; ../coreutils-8.31/lib/write-any-file.c:51
0x00011fe1      0f1f80000000.  nop dword [rax]
0x00011fe8      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/write-any-file.c:33
0x00011fec      e80f0cffff     call sym.imp.geteuid                    ; ../coreutils-8.31/lib/write-any-file.c:44
0x00011ff1      85c0           test eax, eax
0x00011ff3      c60537d72000.  mov byte [obj.initialized.3064], 1      ; ../coreutils-8.31/lib/write-any-file.c:47 ; [0x21f731:1]=0
0x00011ffa      0f94c0         sete al                                 ; ../coreutils-8.31/lib/write-any-file.c:44
0x00011ffd      88052dd72000   mov byte [obj.can_write.3065], al       ; ../coreutils-8.31/lib/write-any-file.c:46 ; [0x21f730:1]=0
0x00012003      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/write-any-file.c:51
0x00012007      c3             ret
0x00012008      0f1f84000000.  nop dword [rax + rax]
;-- xmalloc:
0x00012010      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00012011      4889fb         mov rbx, rdi
0x00012014      e8d70dffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00012019      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x0001201c      7505           jne 0x12023
0x0001201e      4885db         test rbx, rbx
0x00012021      7502           jne 0x12025
0x00012023      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00012024      c3             ret
0x00012025      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x0001202a      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00012030      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00012033      48f7e6         mul rsi
0x00012036      4889c7         mov rdi, rax
0x00012039      0f90c0         seto al
0x0001203c      4885ff         test rdi, rdi
0x0001203f      780a           js 0x1204b
0x00012041      0fb6c0         movzx eax, al
0x00012044      4885c0         test rax, rax
0x00012047      7502           jne 0x1204b
0x00012049      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x0001204b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x0001204f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00012054      6690           nop
0x00012056      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00012060      ebae           jmp sym.xmalloc
0x00012062      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00012066      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00012070      4885f6         test rsi, rsi
0x00012073      53             push rbx
0x00012074      4889f3         mov rbx, rsi
0x00012077      7505           jne 0x1207e
0x00012079      4885ff         test rdi, rdi
0x0001207c      751a           jne 0x12098
0x0001207e      4889de         mov rsi, rbx
0x00012081      e80a0effff     call sym.imp.realloc
0x00012086      4885c0         test rax, rax
0x00012089      7505           jne 0x12090
0x0001208b      4885db         test rbx, rbx
0x0001208e      7511           jne 0x120a1                             ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00012090      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00012091      c3             ret
0x00012092      660f1f440000   nop word [rax + rax]
0x00012098      e83310ffff     call sym..plt.got
0x0001209d      31c0           xor eax, eax
0x0001209f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x000120a0      c3             ret
0x000120a1      e8ba010000     call sym.xalloc_die
0x000120a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x000120b0      4889f0         mov rax, rsi
0x000120b3      48f7e2         mul rdx
0x000120b6      4889c6         mov rsi, rax
0x000120b9      0f90c0         seto al
0x000120bc      4885f6         test rsi, rsi
0x000120bf      780a           js 0x120cb
0x000120c1      0fb6c0         movzx eax, al
0x000120c4      4885c0         test rax, rax
0x000120c7      7502           jne 0x120cb
0x000120c9      eba5           jmp sym.xrealloc
0x000120cb      4883ec08       sub rsp, 8
0x000120cf      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x000120d4      6690           nop
0x000120d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x000120e0      4885ff         test rdi, rdi
0x000120e3      4989d1         mov r9, rdx
0x000120e6      488b0e         mov rcx, qword [rsi]
0x000120e9      7435           je 0x12120
0x000120eb      31d2           xor edx, edx
0x000120ed      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x000120f7      49f7f1         div r9
0x000120fa      4839c8         cmp rax, rcx
0x000120fd      763c           jbe 0x1213b
0x000120ff      4889c8         mov rax, rcx
0x00012102      48d1e8         shr rax, 1
0x00012105      488d4c0801     lea rcx, [rax + rcx + 1]
0x0001210a      48890e         mov qword [rsi], rcx
0x0001210d      490fafc9       imul rcx, r9
0x00012111      4889ce         mov rsi, rcx
0x00012114      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00012119      0f1f80000000.  nop dword [rax]
0x00012120      4885c9         test rcx, rcx
0x00012123      7423           je 0x12148
0x00012125      4889c8         mov rax, rcx
0x00012128      49f7e1         mul r9
0x0001212b      0f90c2         seto dl
0x0001212e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00012131      0fb6d2         movzx edx, dl
0x00012134      7805           js 0x1213b
0x00012136      4885d2         test rdx, rdx
0x00012139      74cf           je 0x1210a
0x0001213b      4883ec08       sub rsp, 8
0x0001213f      e81c010000     call sym.xalloc_die
0x00012144      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00012148      31d2           xor edx, edx
0x0001214a      b880000000     mov eax, 0x80
0x0001214f      4531c0         xor r8d, r8d
0x00012152      49f7f1         div r9
0x00012155      4885c0         test rax, rax
0x00012158      410f94c0       sete r8b
0x0001215c      498d0c00       lea rcx, [r8 + rax]
0x00012160      ebc3           jmp 0x12125
0x00012162      0f1f4000       nop dword [rax]
0x00012166      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00012170      4885ff         test rdi, rdi
0x00012173      488b06         mov rax, qword [rsi]
0x00012176      7428           je 0x121a0
0x00012178      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00012182      4839d0         cmp rax, rdx
0x00012185      772a           ja 0x121b1
0x00012187      4889c2         mov rdx, rax
0x0001218a      48d1ea         shr rdx, 1
0x0001218d      488d440201     lea rax, [rdx + rax + 1]
0x00012192      488906         mov qword [rsi], rax
0x00012195      4889c6         mov rsi, rax
0x00012198      e9d3feffff     jmp sym.xrealloc
0x0001219d      0f1f00         nop dword [rax]
0x000121a0      4885c0         test rax, rax
0x000121a3      ba80000000     mov edx, 0x80
0x000121a8      480f44c2       cmove rax, rdx
0x000121ac      4885c0         test rax, rax
0x000121af      79e1           jns 0x12192
0x000121b1      4883ec08       sub rsp, 8
0x000121b5      e8a6000000     call sym.xalloc_die
0x000121ba      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x000121c0      53             push rbx
0x000121c1      4889fb         mov rbx, rdi
0x000121c4      e847feffff     call sym.xmalloc
0x000121c9      4889da         mov rdx, rbx
0x000121cc      31f6           xor esi, esi
0x000121ce      4889c7         mov rdi, rax
0x000121d1      5b             pop rbx
0x000121d2      e9190affff     jmp sym.imp.memset
0x000121d7      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x000121e0      4889f8         mov rax, rdi
0x000121e3      4883ec08       sub rsp, 8
0x000121e7      48f7e6         mul rsi
0x000121ea      0f90c2         seto dl
0x000121ed      4885c0         test rax, rax
0x000121f0      7817           js 0x12209
0x000121f2      0fb6d2         movzx edx, dl
0x000121f5      4885d2         test rdx, rdx
0x000121f8      750f           jne 0x12209
0x000121fa      e8d10affff     call sym.imp.calloc
0x000121ff      4885c0         test rax, rax
0x00012202      7405           je 0x12209
0x00012204      4883c408       add rsp, 8
0x00012208      c3             ret
0x00012209      e852000000     call sym.xalloc_die
0x0001220e      6690           nop
;-- xmemdup:
0x00012210      55             push rbp
0x00012211      53             push rbx
0x00012212      4889fd         mov rbp, rdi
0x00012215      4889f7         mov rdi, rsi
0x00012218      4889f3         mov rbx, rsi
0x0001221b      4883ec08       sub rsp, 8
0x0001221f      e8ecfdffff     call sym.xmalloc
0x00012224      4883c408       add rsp, 8
0x00012228      4889da         mov rdx, rbx
0x0001222b      4889ee         mov rsi, rbp
0x0001222e      5b             pop rbx
0x0001222f      5d             pop rbp
0x00012230      4889c7         mov rdi, rax
0x00012233      e9480bffff     jmp sym.imp.memcpy
0x00012238      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00012240      53             push rbx
0x00012241      4889fb         mov rbx, rdi
0x00012244      e8a708ffff     call sym.imp.strlen
0x00012249      4889df         mov rdi, rbx
0x0001224c      488d7001       lea rsi, [rax + 1]
0x00012250      5b             pop rbx
0x00012251      ebbd           jmp sym.xmemdup
0x00012253      662e0f1f8400.  nop word cs:[rax + rax]
0x0001225d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00012260      488d35686a00.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x18ccf ; "memory exhausted"
0x00012267      4883ec08       sub rsp, 8
0x0001226b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00012270      31ff           xor edi, edi
0x00012272      e85908ffff     call sym.imp.dcgettext
0x00012277      8b3dcbad2000   mov edi, dword [obj.exit_failure]       ; [0x21d048:4]=1
0x0001227d      488d15dc6b00.  lea rdx, [0x00018e60]                   ; "%s"
0x00012284      4889c1         mov rcx, rax
0x00012287      31f6           xor esi, esi
0x00012289      31c0           xor eax, eax
0x0001228b      e8a00cffff     call sym.imp.error
0x00012290      e8ab06ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00012295      662e0f1f8400.  nop word cs:[rax + rax]
0x0001229f      90             nop
;-- xstrtoul:
0x000122a0      4157           push r15
0x000122a2      4156           push r14
0x000122a4      4155           push r13
0x000122a6      4154           push r12
0x000122a8      55             push rbp
0x000122a9      53             push rbx
0x000122aa      4883ec28       sub rsp, 0x28
0x000122ae      64488b042528.  mov rax, qword fs:[0x28]
0x000122b7      4889442418     mov qword [rsp + 0x18], rax
0x000122bc      31c0           xor eax, eax
0x000122be      83fa24         cmp edx, 0x24
0x000122c1      0f875e030000   ja 0x12625
0x000122c7      488d442410     lea rax, [rsp + 0x10]
0x000122cc      4989f7         mov r15, rsi
0x000122cf      4885f6         test rsi, rsi
0x000122d2      4889fd         mov rbp, rdi
0x000122d5      89542408       mov dword [rsp + 8], edx
0x000122d9      4989ce         mov r14, rcx
0x000122dc      4d89c5         mov r13, r8
0x000122df      4c0f44f8       cmove r15, rax
0x000122e3      e86806ffff     call sym.imp.__errno_location
0x000122e8      c70000000000   mov dword [rax], 0
0x000122ee      4989c4         mov r12, rax
0x000122f1      0fb65d00       movzx ebx, byte [rbp]
0x000122f5      e8c60dffff     call sym.imp.__ctype_b_loc
0x000122fa      8b542408       mov edx, dword [rsp + 8]
0x000122fe      488b30         mov rsi, qword [rax]
0x00012301      4889e8         mov rax, rbp
0x00012304      eb11           jmp 0x12317
0x00012306      662e0f1f8400.  nop word cs:[rax + rax]
0x00012310      4883c001       add rax, 1
0x00012314      0fb618         movzx ebx, byte [rax]
0x00012317      0fb6cb         movzx ecx, bl
0x0001231a      f6444e0120     test byte [rsi + rcx*2 + 1], 0x20
0x0001231f      75ef           jne 0x12310
0x00012321      80fb2d         cmp bl, 0x2d
0x00012324      7452           je 0x12378
0x00012326      4c89fe         mov rsi, r15
0x00012329      4889ef         mov rdi, rbp
0x0001232c      e8af0cffff     call sym.imp.strtoul
0x00012331      498b0f         mov rcx, qword [r15]
0x00012334      4889c3         mov rbx, rax
0x00012337      4839e9         cmp rcx, rbp
0x0001233a      742c           je 0x12368
0x0001233c      418b0424       mov eax, dword [r12]
0x00012340      85c0           test eax, eax
0x00012342      7464           je 0x123a8
0x00012344      83f822         cmp eax, 0x22
0x00012347      bd01000000     mov ebp, 1
0x0001234c      752a           jne 0x12378
0x0001234e      4d85ed         test r13, r13
0x00012351      7409           je 0x1235c
0x00012353      440fb621       movzx r12d, byte [rcx]
0x00012357      4584e4         test r12b, r12b
0x0001235a      757b           jne 0x123d7
0x0001235c      49891e         mov qword [r14], rbx
0x0001235f      eb1c           jmp 0x1237d
0x00012361      0f1f80000000.  nop dword [rax]
0x00012368      4d85ed         test r13, r13
0x0001236b      48894c2408     mov qword [rsp + 8], rcx
0x00012370      753e           jne 0x123b0
0x00012372      660f1f440000   nop word [rax + rax]
0x00012378      bd04000000     mov ebp, 4
0x0001237d      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00012382      6448333c2528.  xor rdi, qword fs:[0x28]
0x0001238b      89e8           mov eax, ebp
0x0001238d      0f858d020000   jne 0x12620
0x00012393      4883c428       add rsp, 0x28
0x00012397      5b             pop rbx
0x00012398      5d             pop rbp
0x00012399      415c           pop r12
0x0001239b      415d           pop r13
0x0001239d      415e           pop r14
0x0001239f      415f           pop r15
0x000123a1      c3             ret
0x000123a2      660f1f440000   nop word [rax + rax]
0x000123a8      31ed           xor ebp, ebp
0x000123aa      eba2           jmp 0x1234e
0x000123ac      0f1f4000       nop dword [rax]
0x000123b0      440fb66500     movzx r12d, byte [rbp]
0x000123b5      4584e4         test r12b, r12b
0x000123b8      74be           je 0x12378
0x000123ba      410fbef4       movsx esi, r12b
0x000123be      4c89ef         mov rdi, r13
0x000123c1      31ed           xor ebp, ebp
0x000123c3      e8a807ffff     call sym.imp.strchr
0x000123c8      4885c0         test rax, rax
0x000123cb      bb01000000     mov ebx, 1
0x000123d0      488b4c2408     mov rcx, qword [rsp + 8]
0x000123d5      74a1           je 0x12378
0x000123d7      410fbef4       movsx esi, r12b
0x000123db      4c89ef         mov rdi, r13
0x000123de      48894c2408     mov qword [rsp + 8], rcx
0x000123e3      e88807ffff     call sym.imp.strchr
0x000123e8      4885c0         test rax, rax
0x000123eb      488b4c2408     mov rcx, qword [rsp + 8]
0x000123f0      0f84c6000000   je 0x124bc
0x000123f6      418d4424bb     lea eax, [r12 - 0x45]
0x000123fb      3c2f           cmp al, 0x2f
0x000123fd      7751           ja 0x12450
0x000123ff      48ba45893000.  movabs rdx, 0x814400308945
0x00012409      480fa3c2       bt rdx, rax
0x0001240d      7341           jae 0x12450
0x0001240f      be30000000     mov esi, 0x30                           ; '0'
0x00012414      4c89ef         mov rdi, r13
0x00012417      48894c2408     mov qword [rsp + 8], rcx
0x0001241c      e84f07ffff     call sym.imp.strchr
0x00012421      4885c0         test rax, rax
0x00012424      488b4c2408     mov rcx, qword [rsp + 8]
0x00012429      7425           je 0x12450
0x0001242b      0fb64101       movzx eax, byte [rcx + 1]
0x0001242f      3c44           cmp al, 0x44
0x00012431      740c           je 0x1243f
0x00012433      3c69           cmp al, 0x69
0x00012435      0f84cd010000   je 0x12608
0x0001243b      3c42           cmp al, 0x42
0x0001243d      7511           jne 0x12450
0x0001243f      bf02000000     mov edi, 2
0x00012444      bee8030000     mov esi, 0x3e8
0x00012449      eb0f           jmp 0x1245a
0x0001244b      0f1f440000     nop dword [rax + rax]
0x00012450      bf01000000     mov edi, 1
0x00012455      be00040000     mov esi, 0x400
0x0001245a      4183ec42       sub r12d, 0x42
0x0001245e      4180fc35       cmp r12b, 0x35
0x00012462      7758           ja 0x124bc
0x00012464      488d15bd6800.  lea rdx, [0x00018d28]
0x0001246b      450fb6e4       movzx r12d, r12b
0x0001246f      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00012473      4801d0         add rax, rdx
0x00012476      ffe0           jmp rax
0x00012478      4889d8         mov rax, rbx
0x0001247b      48f7e6         mul rsi
0x0001247e      0f80ed010000   jo 0x12671
0x00012484      4531c0         xor r8d, r8d
0x00012487      48f7e6         mul rsi
0x0001248a      0f80d2010000   jo 0x12662
0x00012490      4889c3         mov rbx, rax
0x00012493      4409c5         or ebp, r8d
0x00012496      662e0f1f8400.  nop word cs:[rax + rax]
0x000124a0      4863ff         movsxd rdi, edi
0x000124a3      89e8           mov eax, ebp
0x000124a5      4801f9         add rcx, rdi
0x000124a8      83c802         or eax, 2
0x000124ab      49890f         mov qword [r15], rcx
0x000124ae      803900         cmp byte [rcx], 0
0x000124b1      49891e         mov qword [r14], rbx
0x000124b4      0f45e8         cmovne ebp, eax
0x000124b7      e9c1feffff     jmp 0x1237d
0x000124bc      49891e         mov qword [r14], rbx
0x000124bf      83cd02         or ebp, 2
0x000124c2      e9b6feffff     jmp 0x1237d
0x000124c7      ba02000000     mov edx, 2
0x000124cc      4889d0         mov rax, rdx
0x000124cf      48f7e3         mul rbx
0x000124d2      0f8096000000   jo 0x1256e
0x000124d8      4801db         add rbx, rbx
0x000124db      ebc3           jmp 0x124a0
0x000124dd      ba00020000     mov edx, 0x200
0x000124e2      4889d0         mov rax, rdx
0x000124e5      48f7e3         mul rbx
0x000124e8      0f8080000000   jo 0x1256e
0x000124ee      48c1e309       shl rbx, 9
0x000124f2      ebac           jmp 0x124a0
0x000124f4      41b807000000   mov r8d, 7
0x000124fa      4531c9         xor r9d, r9d
0x000124fd      0f1f00         nop dword [rax]
0x00012500      4889d8         mov rax, rbx
0x00012503      48f7e6         mul rsi
0x00012506      4889c3         mov rbx, rax
0x00012509      0f808f010000   jo 0x1269e
0x0001250f      4183e801       sub r8d, 1
0x00012513      75eb           jne 0x12500
0x00012515      4409cd         or ebp, r9d
0x00012518      eb86           jmp 0x124a0
0x0001251a      41b808000000   mov r8d, 8
0x00012520      4531c9         xor r9d, r9d
0x00012523      0f1f440000     nop dword [rax + rax]
0x00012528      4889d8         mov rax, rbx
0x0001252b      48f7e6         mul rsi
0x0001252e      4889c3         mov rbx, rax
0x00012531      0f8049010000   jo 0x12680
0x00012537      4183e801       sub r8d, 1
0x0001253b      75eb           jne 0x12528
0x0001253d      ebd6           jmp 0x12515
0x0001253f      41b804000000   mov r8d, 4
0x00012545      4531c9         xor r9d, r9d
0x00012548      4889d8         mov rax, rbx
0x0001254b      48f7e6         mul rsi
0x0001254e      4889c3         mov rbx, rax
0x00012551      0f80fc000000   jo 0x12653
0x00012557      4183e801       sub r8d, 1
0x0001255b      75eb           jne 0x12548
0x0001255d      ebb6           jmp 0x12515
0x0001255f      4889d8         mov rax, rbx
0x00012562      48f7e6         mul rsi
0x00012565      4889c3         mov rbx, rax
0x00012568      0f8132ffffff   jno 0x124a0
0x0001256e      bd01000000     mov ebp, 1
0x00012573      4883cbff       or rbx, 0xffffffffffffffff
0x00012577      e924ffffff     jmp 0x124a0
0x0001257c      0f1f4000       nop dword [rax]
0x00012580      41b805000000   mov r8d, 5
0x00012586      4531c9         xor r9d, r9d
0x00012589      4889d8         mov rax, rbx
0x0001258c      48f7e6         mul rsi
0x0001258f      4889c3         mov rbx, rax
0x00012592      0f80f7000000   jo 0x1268f
0x00012598      4183e801       sub r8d, 1
0x0001259c      75eb           jne 0x12589
0x0001259e      e972ffffff     jmp 0x12515
0x000125a3      41b806000000   mov r8d, 6
0x000125a9      4531c9         xor r9d, r9d
0x000125ac      4889d8         mov rax, rbx
0x000125af      48f7e6         mul rsi
0x000125b2      4889c3         mov rbx, rax
0x000125b5      0f8089000000   jo 0x12644
0x000125bb      4183e801       sub r8d, 1
0x000125bf      75eb           jne 0x125ac
0x000125c1      e94fffffff     jmp 0x12515
0x000125c6      ba00040000     mov edx, 0x400
0x000125cb      4889d0         mov rax, rdx
0x000125ce      48f7e3         mul rbx
0x000125d1      709b           jo 0x1256e
0x000125d3      48c1e30a       shl rbx, 0xa
0x000125d7      e9c4feffff     jmp 0x124a0
0x000125dc      4889d8         mov rax, rbx
0x000125df      48f7e6         mul rsi
0x000125e2      0f80c5000000   jo 0x126ad
0x000125e8      4531c0         xor r8d, r8d
0x000125eb      48f7e6         mul rsi
0x000125ee      0f8193feffff   jno 0x12487
0x000125f4      41b801000000   mov r8d, 1
0x000125fa      4883c8ff       or rax, 0xffffffffffffffff
0x000125fe      e984feffff     jmp 0x12487
0x00012603      0f1f440000     nop dword [rax + rax]
0x00012608      31ff           xor edi, edi
0x0001260a      80790242       cmp byte [rcx + 2], 0x42
0x0001260e      be00040000     mov esi, 0x400
0x00012613      400f94c7       sete dil
0x00012617      8d7c3f01       lea edi, [rdi + rdi + 1]
0x0001261b      e93afeffff     jmp 0x1245a
0x00012620      e80b05ffff     call sym.imp.__stack_chk_fail
0x00012625      488d0dd46700.  lea rcx, obj.__PRETTY_FUNCTION__.4162   ; 0x18e00 ; "xstrtoul"
0x0001262c      488d35ad6600.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0x18ce0 ; "../coreutils-8.31/lib/xstrtol.c"
0x00012633      488d3dc66600.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0x18d00 ; "0 <= strtol_base && strtol_base <= 36"
0x0001263a      ba54000000     mov edx, 0x54                           ; 'T'
0x0001263f      e89c05ffff     call sym.imp.__assert_fail
0x00012644      41b901000000   mov r9d, 1
0x0001264a      4883cbff       or rbx, 0xffffffffffffffff
0x0001264e      e968ffffff     jmp 0x125bb
0x00012653      41b901000000   mov r9d, 1
0x00012659      4883cbff       or rbx, 0xffffffffffffffff
0x0001265d      e9f5feffff     jmp 0x12557
0x00012662      41b801000000   mov r8d, 1
0x00012668      4883cbff       or rbx, 0xffffffffffffffff
0x0001266c      e922feffff     jmp 0x12493
0x00012671      4883c8ff       or rax, 0xffffffffffffffff
0x00012675      41b801000000   mov r8d, 1
0x0001267b      e907feffff     jmp 0x12487
0x00012680      41b901000000   mov r9d, 1
0x00012686      4883cbff       or rbx, 0xffffffffffffffff
0x0001268a      e9a8feffff     jmp 0x12537
0x0001268f      41b901000000   mov r9d, 1
0x00012695      4883cbff       or rbx, 0xffffffffffffffff
0x00012699      e9fafeffff     jmp 0x12598
0x0001269e      41b901000000   mov r9d, 1
0x000126a4      4883cbff       or rbx, 0xffffffffffffffff
0x000126a8      e962feffff     jmp 0x1250f
0x000126ad      41b801000000   mov r8d, 1
0x000126b3      4883c8ff       or rax, 0xffffffffffffffff
0x000126b7      e92fffffff     jmp 0x125eb
0x000126bc      0f1f4000       nop dword [rax]
;-- yesno:
0x000126c0      53             push rbx                                ; ../coreutils-8.31/lib/yesno.c:33
0x000126c1      ba0a000000     mov edx, 0xa
0x000126c6      31db           xor ebx, ebx
0x000126c8      4883ec20       sub rsp, 0x20
0x000126cc      488b0d1daa20.  mov rcx, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x21d0f0:8]=0
0x000126d3      488d742410     lea rsi, [rsp + 0x10]
0x000126d8      488d7c2408     lea rdi, [rsp + 8]                      ; stdio.h:-219
0x000126dd      48c744240800.  mov qword [rsp + 8], 0
0x000126e6      64488b042528.  mov rax, qword fs:[0x28]
0x000126ef      4889442418     mov qword [rsp + 0x18], rax
0x000126f4      31c0           xor eax, eax
0x000126f6      48c744241000.  mov qword [rsp + 0x10], 0               ; stdio.h:-343
0x000126ff      e8dc05ffff     call sym.imp.__getdelim
0x00012704      4885c0         test rax, rax
0x00012707      7e19           jle 0x12722
0x00012709      488b7c2408     mov rdi, qword [rsp + 8]
0x0001270e      488d4407ff     lea rax, [rdi + rax - 1]
0x00012713      80380a         cmp byte [rax], 0xa
0x00012716      7430           je 0x12748
0x00012718      e82306ffff     call sym.imp.rpmatch
0x0001271d      85c0           test eax, eax
0x0001271f      0f9fc3         setg bl
0x00012722      488b7c2408     mov rdi, qword [rsp + 8]
0x00012727      e8a409ffff     call sym..plt.got
0x0001272c      488b542418     mov rdx, qword [rsp + 0x18]
0x00012731      644833142528.  xor rdx, qword fs:[0x28]
0x0001273a      89d8           mov eax, ebx                            ; stdio.h:-336
0x0001273c      7514           jne 0x12752
0x0001273e      4883c420       add rsp, 0x20
0x00012742      5b             pop rbx
0x00012743      c3             ret
0x00012744      0f1f4000       nop dword [rax]                         ; stdio.h:-321
0x00012748      c60000         mov byte [rax], 0
0x0001274b      488b7c2408     mov rdi, qword [rsp + 8]
0x00012750      ebc6           jmp 0x12718
0x00012752      e8d903ffff     call sym.imp.__stack_chk_fail
0x00012757      660f1f840000.  nop word [rax + rax]
;-- rpl_fflush:
0x00012760      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00012763      53             push rbx
0x00012764      4889fb         mov rbx, rdi
0x00012767      7411           je 0x1277a                              ; ../coreutils-8.31/lib/fflush.c:150
0x00012769      e8e206ffff     call sym.imp.__freading
0x0001276e      85c0           test eax, eax
0x00012770      7408           je 0x1277a
0x00012772      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00012778      750e           jne 0x12788
0x0001277a      4889df         mov rdi, rbx
0x0001277d      5b             pop rbx
0x0001277e      e97d06ffff     jmp sym.imp.fflush
0x00012783      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fflush.c:32
0x00012788      4889df         mov rdi, rbx
0x0001278b      ba01000000     mov edx, 1
0x00012790      31f6           xor esi, esi
0x00012792      e839000000     call sym.rpl_fseeko
0x00012797      4889df         mov rdi, rbx
0x0001279a      5b             pop rbx
0x0001279b      e96006ffff     jmp sym.imp.fflush
;-- freadahead:
0x000127a0      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/freadahead.c:35
0x000127a2      488b4f20       mov rcx, qword [rdi + 0x20]             ; ../coreutils-8.31/lib/freadahead.c:38
0x000127a6      48394f28       cmp qword [rdi + 0x28], rcx
0x000127aa      771b           ja 0x127c7
0x000127ac      488b4710       mov rax, qword [rdi + 0x10]             ; ../coreutils-8.31/lib/freadahead.c:40
0x000127b0      482b4708       sub rax, qword [rdi + 8]
0x000127b4      f70700010000   test dword [rdi], 0x100                 ; ../coreutils-8.31/lib/freadahead.c:41
0x000127ba      740b           je 0x127c7
0x000127bc      488b5758       mov rdx, qword [rdi + 0x58]
0x000127c0      482b5748       sub rdx, qword [rdi + 0x48]
0x000127c4      4801d0         add rax, rdx
0x000127c7      f3c3           ret                                     ; ../coreutils-8.31/lib/freadahead.c:103
0x000127c9      0f1f80000000.  nop dword [rax]
;-- rpl_fseeko:
0x000127d0      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x000127d4      48394710       cmp qword [rdi + 0x10], rax
0x000127d8      7406           je 0x127e0                              ; ../coreutils-8.31/lib/fseeko.c:32
0x000127da      e99107ffff     jmp sym.imp.fseeko
0x000127df      90             nop
0x000127e0      488b4720       mov rax, qword [rdi + 0x20]
0x000127e4      48394728       cmp qword [rdi + 0x28], rax
0x000127e8      75f0           jne 0x127da                             ; ../coreutils-8.31/lib/fseeko.c:33
0x000127ea      48837f4800     cmp qword [rdi + 0x48], 0
0x000127ef      75e9           jne 0x127da                             ; ../coreutils-8.31/lib/fseeko.c:21
0x000127f1      4154           push r12
0x000127f3      55             push rbp
0x000127f4      4189d4         mov r12d, edx
0x000127f7      53             push rbx
0x000127f8      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x000127fb      4889fb         mov rbx, rdi
0x000127fe      e8ad05ffff     call sym.imp.fileno
0x00012803      4489e2         mov edx, r12d
0x00012806      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00012809      89c7           mov edi, eax
0x0001280b      e8b003ffff     call sym.imp.lseek
0x00012810      4883f8ff       cmp rax, 0xffffffffffffffff
0x00012814      740c           je 0x12822
0x00012816      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00012819      488983900000.  mov qword [rbx + 0x90], rax
0x00012820      31c0           xor eax, eax
0x00012822      5b             pop rbx
0x00012823      5d             pop rbp
0x00012824      415c           pop r12
0x00012826      c3             ret
0x00012827      660f1f840000.  nop word [rax + rax]
;-- rpl_mbrtowc:
0x00012830      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00012832      4154           push r12
0x00012834      4989f5         mov r13, rsi
0x00012837      55             push rbp
0x00012838      53             push rbx
0x00012839      4889fb         mov rbx, rdi
0x0001283c      4989d4         mov r12, rdx
0x0001283f      4883ec18       sub rsp, 0x18
0x00012843      64488b042528.  mov rax, qword fs:[0x28]
0x0001284c      4889442408     mov qword [rsp + 8], rax
0x00012851      31c0           xor eax, eax
0x00012853      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00012858      4885ff         test rdi, rdi
0x0001285b      480f44d8       cmove rbx, rax
0x0001285f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00012862      e8f902ffff     call sym.imp.mbrtowc
0x00012867      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x0001286b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x0001286e      7620           jbe 0x12890                             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00012870      4d85e4         test r12, r12
0x00012873      741b           je 0x12890
0x00012875      31ff           xor edi, edi
0x00012877      e8c4060000     call sym.hard_locale
0x0001287c      84c0           test al, al
0x0001287e      7510           jne 0x12890
0x00012880      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00012885      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x0001288a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x0001288c      0f1f4000       nop dword [rax]
0x00012890      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00012895      644833142528.  xor rdx, qword fs:[0x28]
0x0001289e      4889e8         mov rax, rbp
0x000128a1      750b           jne 0x128ae
0x000128a3      4883c418       add rsp, 0x18
0x000128a7      5b             pop rbx
0x000128a8      5d             pop rbp
0x000128a9      415c           pop r12
0x000128ab      415d           pop r13
0x000128ad      c3             ret
0x000128ae      e87d02ffff     call sym.imp.__stack_chk_fail
0x000128b3      662e0f1f8400.  nop word cs:[rax + rax]
0x000128bd      0f1f00         nop dword [rax]
;-- rpl_vfprintf:
0x000128c0      4155           push r13                                ; ../coreutils-8.31/lib/vfprintf.c:37
0x000128c2      4154           push r12
0x000128c4      4889f0         mov rax, rsi
0x000128c7      55             push rbp
0x000128c8      53             push rbx
0x000128c9      4989fd         mov r13, rdi
0x000128cc      4881ecf80700.  sub rsp, 0x7f8
0x000128d3      4c8d642410     lea r12, [rsp + 0x10]                   ; ../coreutils-8.31/lib/vfprintf.c:43
0x000128d8      488d742408     lea rsi, [rsp + 8]
0x000128dd      48c7442408d0.  mov qword [rsp + 8], 0x7d0              ; ../coreutils-8.31/lib/vfprintf.c:41 ; [0x7d0:8]=0
0x000128e6      64488b0c2528.  mov rcx, qword fs:[0x28]                ; ../coreutils-8.31/lib/vfprintf.c:37
0x000128ef      48898c24e807.  mov qword [rsp + 0x7e8], rcx
0x000128f7      31c9           xor ecx, ecx
0x000128f9      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/vfprintf.c:43
0x000128fc      4889d1         mov rcx, rdx
0x000128ff      4889c2         mov rdx, rax
0x00012902      e859190000     call sym.vasnprintf
0x00012907      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vfprintf.c:46
0x0001290a      488b5c2408     mov rbx, qword [rsp + 8]                ; ../coreutils-8.31/lib/vfprintf.c:44
0x0001290f      0f8489000000   je 0x1299e                              ; ../coreutils-8.31/lib/vfprintf.c:46
0x00012915      4c89e9         mov rcx, r13                            ; ../coreutils-8.31/lib/vfprintf.c:52
0x00012918      4889da         mov rdx, rbx
0x0001291b      be01000000     mov esi, 1
0x00012920      4889c7         mov rdi, rax
0x00012923      4889c5         mov rbp, rax
0x00012926      e81507ffff     call sym.imp.fwrite
0x0001292b      4839d8         cmp rax, rbx
0x0001292e      7240           jb 0x12970
0x00012930      4c39e5         cmp rbp, r12                            ; ../coreutils-8.31/lib/vfprintf.c:63
0x00012933      7408           je 0x1293d
0x00012935      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/vfprintf.c:64
0x00012938      e89307ffff     call sym..plt.got
0x0001293d      4881fbffffff.  cmp rbx, 0x7fffffff                     ; ../coreutils-8.31/lib/vfprintf.c:66
0x00012944      774d           ja 0x12993
0x00012946      488b8c24e807.  mov rcx, qword [rsp + 0x7e8]            ; ../coreutils-8.31/lib/vfprintf.c:74
0x0001294e      6448330c2528.  xor rcx, qword fs:[0x28]
0x00012957      89d8           mov eax, ebx
0x00012959      7552           jne 0x129ad
0x0001295b      4881c4f80700.  add rsp, 0x7f8
0x00012962      5b             pop rbx
0x00012963      5d             pop rbp
0x00012964      415c           pop r12
0x00012966      415d           pop r13
0x00012968      c3             ret
0x00012969      0f1f80000000.  nop dword [rax]
0x00012970      4c39e5         cmp rbp, r12                            ; ../coreutils-8.31/lib/vfprintf.c:54
0x00012973      bbffffffff     mov ebx, 0xffffffff                     ; ../coreutils-8.31/lib/vfprintf.c:60 ; -1
0x00012978      74cc           je 0x12946                              ; ../coreutils-8.31/lib/vfprintf.c:54
0x0001297a      e8d1fffeff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/vfprintf.c:56
0x0001297f      448b28         mov r13d, dword [rax]
0x00012982      4989c4         mov r12, rax
0x00012985      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/vfprintf.c:57
0x00012988      e84307ffff     call sym..plt.got
0x0001298d      45892c24       mov dword [r12], r13d                   ; ../coreutils-8.31/lib/vfprintf.c:58
0x00012991      ebb3           jmp 0x12946
0x00012993      e8b8fffeff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/vfprintf.c:68
0x00012998      c7004b000000   mov dword [rax], 0x4b                   ; 'K'
                                                                       ; [0x4b:4]=0
0x0001299e      4c89ef         mov rdi, r13                            ; ../coreutils-8.31/lib/vfprintf.c:69
0x000129a1      bbffffffff     mov ebx, 0xffffffff                     ; ../coreutils-8.31/lib/vfprintf.c:70 ; -1
0x000129a6      e8a5180000     call sym.fseterr                        ; ../coreutils-8.31/lib/vfprintf.c:69
0x000129ab      eb99           jmp 0x12946                             ; ../coreutils-8.31/lib/vfprintf.c:70
0x000129ad      e87e01ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/vfprintf.c:74
0x000129b2      662e0f1f8400.  nop word cs:[rax + rax]
0x000129bc      0f1f4000       nop dword [rax]
;-- free_permission_context:
0x000129c0      f3c3           ret                                     ; ../coreutils-8.31/lib/acl-internal.c:480
0x000129c2      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/acl-internal.c:507
0x000129cc      0f1f4000       nop dword [rax]
;-- get_permissions:
0x000129d0      8911           mov dword [rcx], edx                    ; ../coreutils-8.31/lib/get-permissions.c:35
0x000129d2      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/get-permissions.c:291
0x000129d4      c3             ret
0x000129d5      662e0f1f8400.  nop word cs:[rax + rax]
0x000129df      90             nop
;-- chmod_or_fchmod:
0x000129e0      89f0           mov eax, esi                            ; ../coreutils-8.31/lib/set-permissions.c:761
0x000129e2      89d6           mov esi, edx                            ; ../coreutils-8.31/lib/set-permissions.c:763
0x000129e4      83f8ff         cmp eax, 0xffffffff                     ; ../coreutils-8.31/lib/set-permissions.c:762
0x000129e7      7407           je 0x129f0
0x000129e9      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/set-permissions.c:763
0x000129eb      e90005ffff     jmp sym.imp.fchmod
0x000129f0      e91b05ffff     jmp sym.imp.chmod                       ; ../coreutils-8.31/lib/set-permissions.c:765
0x000129f5      90             nop
0x000129f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_permissions:
0x00012a00      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/set-permissions.c:777
0x00012a04      4889f0         mov rax, rsi
0x00012a07      89d6           mov esi, edx
0x00012a09      8b17           mov edx, dword [rdi]                    ; ../coreutils-8.31/lib/set-permissions.c:806
0x00012a0b      4889c7         mov rdi, rax
0x00012a0e      e8cdffffff     call sym.chmod_or_fchmod
0x00012a13      85c0           test eax, eax                           ; ../coreutils-8.31/lib/set-permissions.c:807
0x00012a15      0f95c0         setne al
0x00012a18      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/set-permissions.c:847
0x00012a1c      0fb6c0         movzx eax, al                           ; ../coreutils-8.31/lib/set-permissions.c:807
0x00012a1f      f7d8           neg eax
0x00012a21      c3             ret                                     ; ../coreutils-8.31/lib/set-permissions.c:847
0x00012a22      662e0f1f8400.  nop word cs:[rax + rax]
0x00012a2c      0f1f4000       nop dword [rax]
;-- __argmatch_die:
0x00012a30      bf01000000     mov edi, 1                              ; ../coreutils-8.31/lib/argmatch.c:63
0x00012a35      e9e61effff     jmp sym.usage
0x00012a3a      660f1f440000   nop word [rax + rax]
;-- argmatch:
0x00012a40      4157           push r15                                ; ../coreutils-8.31/lib/argmatch.c:86
0x00012a42      4156           push r14
0x00012a44      4989f7         mov r15, rsi
0x00012a47      4155           push r13
0x00012a49      4154           push r12
0x00012a4b      4989cd         mov r13, rcx
0x00012a4e      55             push rbp
0x00012a4f      53             push rbx
0x00012a50      4889d5         mov rbp, rdx
0x00012a53      4883ec28       sub rsp, 0x28
0x00012a57      48897c2408     mov qword [rsp + 8], rdi
0x00012a5c      4889542418     mov qword [rsp + 0x18], rdx
0x00012a61      e88a00ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/argmatch.c:92
0x00012a66      4d8b37         mov r14, qword [r15]                    ; ../coreutils-8.31/lib/argmatch.c:95
0x00012a69      48c70424ffff.  mov qword [rsp], 0xffffffffffffffff     ; ../coreutils-8.31/lib/argmatch.c:89
0x00012a71      4d85f6         test r14, r14                           ; ../coreutils-8.31/lib/argmatch.c:95
0x00012a74      0f84b3000000   je 0x12b2d
0x00012a7a      4989c4         mov r12, rax
0x00012a7d      c644241700     mov byte [rsp + 0x17], 0                ; ../coreutils-8.31/lib/argmatch.c:90
0x00012a82      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/argmatch.c:95
0x00012a84      eb51           jmp 0x12ad7
0x00012a86      662e0f1f8400.  nop word cs:[rax + rax]
0x00012a90      488b442418     mov rax, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/argmatch.c:108
0x00012a95      4885c0         test rax, rax
0x00012a98      0f84a2000000   je 0x12b40
0x00012a9e      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/argmatch.c:109
0x00012aa2      4c89ea         mov rdx, r13
0x00012aa5      4889ee         mov rsi, rbp
0x00012aa8      490faffd       imul rdi, r13
0x00012aac      4801c7         add rdi, rax
0x00012aaf      e8dc01ffff     call sym.imp.memcmp
0x00012ab4      85c0           test eax, eax                           ; ../coreutils-8.31/lib/argmatch.c:114
0x00012ab6      0fb6442417     movzx eax, byte [rsp + 0x17]
0x00012abb      b901000000     mov ecx, 1
0x00012ac0      0f45c1         cmovne eax, ecx
0x00012ac3      88442417       mov byte [rsp + 0x17], al
0x00012ac7      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:95
0x00012acb      4c01ed         add rbp, r13
0x00012ace      4d8b34df       mov r14, qword [r15 + rbx*8]
0x00012ad2      4d85f6         test r14, r14
0x00012ad5      7441           je 0x12b18
0x00012ad7      488b742408     mov rsi, qword [rsp + 8]                ; ../coreutils-8.31/lib/argmatch.c:97
0x00012adc      4c89e2         mov rdx, r12
0x00012adf      4c89f7         mov rdi, r14
0x00012ae2      e889fefeff     call sym.imp.strncmp
0x00012ae7      85c0           test eax, eax
0x00012ae9      75dc           jne 0x12ac7
0x00012aeb      4c89f7         mov rdi, r14                            ; ../coreutils-8.31/lib/argmatch.c:99
0x00012aee      e8fdfffeff     call sym.imp.strlen
0x00012af3      4c39e0         cmp rax, r12
0x00012af6      7458           je 0x12b50
0x00012af8      48833c24ff     cmp qword [rsp], 0xffffffffffffffff     ; ../coreutils-8.31/lib/argmatch.c:102
0x00012afd      7591           jne 0x12a90
0x00012aff      48891c24       mov qword [rsp], rbx                    ; ../coreutils-8.31/lib/argmatch.c:104
0x00012b03      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:95
0x00012b07      4c01ed         add rbp, r13
0x00012b0a      4d8b34df       mov r14, qword [r15 + rbx*8]
0x00012b0e      4d85f6         test r14, r14
0x00012b11      75c4           jne 0x12ad7
0x00012b13      0f1f440000     nop dword [rax + rax]
0x00012b18      807c241700     cmp byte [rsp + 0x17], 0                ; ../coreutils-8.31/lib/argmatch.c:120
0x00012b1d      48c7c0feffff.  mov rax, 0xfffffffffffffffe
0x00012b24      480f440424     cmove rax, qword [rsp]
0x00012b29      48890424       mov qword [rsp], rax
0x00012b2d      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/argmatch.c:123
0x00012b31      4883c428       add rsp, 0x28
0x00012b35      5b             pop rbx
0x00012b36      5d             pop rbp
0x00012b37      415c           pop r12
0x00012b39      415d           pop r13
0x00012b3b      415e           pop r14
0x00012b3d      415f           pop r15
0x00012b3f      c3             ret
0x00012b40      c644241701     mov byte [rsp + 0x17], 1                ; ../coreutils-8.31/lib/argmatch.c:114
0x00012b45      eb80           jmp 0x12ac7
0x00012b47      660f1f840000.  nop word [rax + rax]
0x00012b50      48891c24       mov qword [rsp], rbx                    ; ../coreutils-8.31/lib/argmatch.c:101
0x00012b54      ebd7           jmp 0x12b2d
0x00012b56      662e0f1f8400.  nop word cs:[rax + rax]
;-- argmatch_invalid:
0x00012b60      4883faff       cmp rdx, 0xffffffffffffffff             ; ../coreutils-8.31/lib/argmatch.c:132
0x00012b64      4154           push r12
0x00012b66      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/argmatch.c:133
0x00012b6b      55             push rbp                                ; ../coreutils-8.31/lib/argmatch.c:132
0x00012b6c      4989f4         mov r12, rsi
0x00012b6f      53             push rbx
0x00012b70      4889fd         mov rbp, rdi
0x00012b73      744b           je 0x12bc0                              ; ../coreutils-8.31/lib/argmatch.c:133
0x00012b75      488d35a86200.  lea rsi, str.ambiguous_argument__s_for__s ; 0x18e24 ; "ambiguous argument %s for %s"
0x00012b7c      31ff           xor edi, edi
0x00012b7e      e84dfffeff     call sym.imp.dcgettext
0x00012b83      4889c3         mov rbx, rax
0x00012b86      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/argmatch.c:137
0x00012b89      bf01000000     mov edi, 1
0x00012b8e      e80dcbffff     call sym.quote_n
0x00012b93      4c89e2         mov rdx, r12
0x00012b96      4889c5         mov rbp, rax
0x00012b99      be08000000     mov esi, 8
0x00012b9e      31ff           xor edi, edi
0x00012ba0      e82bc7ffff     call sym.quotearg_n_style
0x00012ba5      4989e8         mov r8, rbp
0x00012ba8      4889da         mov rdx, rbx
0x00012bab      4889c1         mov rcx, rax
0x00012bae      5b             pop rbx                                 ; ../coreutils-8.31/lib/argmatch.c:139
0x00012baf      5d             pop rbp
0x00012bb0      415c           pop r12
0x00012bb2      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/argmatch.c:137
0x00012bb4      31ff           xor edi, edi
0x00012bb6      31c0           xor eax, eax
0x00012bb8      e97303ffff     jmp sym.imp.error
0x00012bbd      0f1f00         nop dword [rax]
0x00012bc0      488d35426200.  lea rsi, str.invalid_argument__s_for__s ; ../coreutils-8.31/lib/argmatch.c:133 ; 0x18e09 ; "invalid argument %s for %s"
0x00012bc7      31ff           xor edi, edi
0x00012bc9      e802fffeff     call sym.imp.dcgettext
0x00012bce      4889c3         mov rbx, rax
0x00012bd1      ebb3           jmp 0x12b86
0x00012bd3      0f1f00         nop dword [rax]
0x00012bd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- argmatch_valid:
0x00012be0      4157           push r15                                ; ../coreutils-8.31/lib/argmatch.c:148
0x00012be2      4156           push r14
0x00012be4      4989fe         mov r14, rdi
0x00012be7      4155           push r13
0x00012be9      4154           push r12
0x00012beb      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/argmatch.c:154
0x00012bed      55             push rbp                                ; ../coreutils-8.31/lib/argmatch.c:148
0x00012bee      53             push rbx
0x00012bef      4889f5         mov rbp, rsi
0x00012bf2      488d35486200.  lea rsi, str.Valid_arguments_are:       ; ../coreutils-8.31/lib/argmatch.c:154 ; 0x18e41 ; "Valid arguments are:"
0x00012bf9      4989d4         mov r12, rdx                            ; ../coreutils-8.31/lib/argmatch.c:148
0x00012bfc      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/argmatch.c:154
0x00012c01      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/argmatch.c:148
0x00012c05      488b1d14a520.  mov rbx, qword [obj.stderr]             ; ../coreutils-8.31/lib/argmatch.c:154 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21d120:8]=0
0x00012c0c      e8bffefeff     call sym.imp.dcgettext
0x00012c11      4889c7         mov rdi, rax
0x00012c14      4889de         mov rsi, rbx
0x00012c17      e89400ffff     call sym.imp.fputs_unlocked
0x00012c1c      4d8b3e         mov r15, qword [r14]                    ; ../coreutils-8.31/lib/argmatch.c:155
0x00012c1f      4d85ff         test r15, r15
0x00012c22      0f8490000000   je 0x12cb8
0x00012c28      4531ed         xor r13d, r13d                          ; ../coreutils-8.31/lib/argmatch.c:150
0x00012c2b      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/argmatch.c:155
0x00012c2d      eb39           jmp 0x12c68
0x00012c2f      90             nop
0x00012c30      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/argmatch.c:159
0x00012c33      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:155
0x00012c37      4989ed         mov r13, rbp                            ; ../coreutils-8.31/lib/argmatch.c:160
0x00012c3a      e881caffff     call sym.quote                          ; ../coreutils-8.31/lib/argmatch.c:159
0x00012c3f      488b3ddaa420.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21d120:8]=0
0x00012c46      488d15096200.  lea rdx, [0x00018e56]                   ; "\n  - %s"
0x00012c4d      4889c1         mov rcx, rax
0x00012c50      be01000000     mov esi, 1
0x00012c55      31c0           xor eax, eax
0x00012c57      4c01e5         add rbp, r12
0x00012c5a      e8f103ffff     call sym.imp.__fprintf_chk
0x00012c5f      4d8b3cde       mov r15, qword [r14 + rbx*8]            ; ../coreutils-8.31/lib/argmatch.c:155
0x00012c63      4d85ff         test r15, r15
0x00012c66      7450           je 0x12cb8
0x00012c68      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/argmatch.c:156
0x00012c6b      74c3           je 0x12c30
0x00012c6d      4c89e2         mov rdx, r12                            ; ../coreutils-8.31/lib/argmatch.c:157
0x00012c70      4889ee         mov rsi, rbp
0x00012c73      4c89ef         mov rdi, r13
0x00012c76      e81500ffff     call sym.imp.memcmp
0x00012c7b      85c0           test eax, eax
0x00012c7d      75b1           jne 0x12c30
0x00012c7f      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/argmatch.c:164
0x00012c82      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:155
0x00012c86      4c01e5         add rbp, r12
0x00012c89      e832caffff     call sym.quote                          ; ../coreutils-8.31/lib/argmatch.c:164
0x00012c8e      488b3d8ba420.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21d120:8]=0
0x00012c95      488d15c26100.  lea rdx, str.s                          ; 0x18e5e ; ", %s"
0x00012c9c      4889c1         mov rcx, rax
0x00012c9f      be01000000     mov esi, 1
0x00012ca4      31c0           xor eax, eax
0x00012ca6      e8a503ffff     call sym.imp.__fprintf_chk
0x00012cab      4d8b3cde       mov r15, qword [r14 + rbx*8]            ; ../coreutils-8.31/lib/argmatch.c:155
0x00012caf      4d85ff         test r15, r15
0x00012cb2      75b4           jne 0x12c68
0x00012cb4      0f1f4000       nop dword [rax]
0x00012cb8      488b3d61a420.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/argmatch.c:166 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21d120:8]=0
0x00012cbf      488b4728       mov rax, qword [rdi + 0x28]             ; stdio.h:100   return _IO_putc_unlocked (__c, __stream);
0x00012cc3      483b4730       cmp rax, qword [rdi + 0x30]
0x00012cc7      731f           jae 0x12ce8
0x00012cc9      488d5001       lea rdx, [rax + 1]
0x00012ccd      48895728       mov qword [rdi + 0x28], rdx
0x00012cd1      c6000a         mov byte [rax], 0xa
0x00012cd4      4883c408       add rsp, 8
0x00012cd8      5b             pop rbx
0x00012cd9      5d             pop rbp
0x00012cda      415c           pop r12
0x00012cdc      415d           pop r13
0x00012cde      415e           pop r14
0x00012ce0      415f           pop r15
0x00012ce2      c3             ret
0x00012ce3      0f1f440000     nop dword [rax + rax]
0x00012ce8      4883c408       add rsp, 8
0x00012cec      be0a000000     mov esi, 0xa                            ; ../coreutils-8.31/lib/argmatch.c:-204
0x00012cf1      5b             pop rbx
0x00012cf2      5d             pop rbp
0x00012cf3      415c           pop r12
0x00012cf5      415d           pop r13
0x00012cf7      415e           pop r14
0x00012cf9      415f           pop r15
0x00012cfb      e990fefeff     jmp sym.imp.__overflow
;-- __xargmatch_internal:
0x00012d00      4157           push r15
0x00012d02      4156           push r14
0x00012d04      4989fe         mov r14, rdi
0x00012d07      4155           push r13
0x00012d09      4154           push r12
0x00012d0b      4989f4         mov r12, rsi
0x00012d0e      55             push rbp
0x00012d0f      53             push rbx
0x00012d10      4889cd         mov rbp, rcx
0x00012d13      4889d3         mov rbx, rdx
0x00012d16      4c89c1         mov rcx, r8
0x00012d19      4889ea         mov rdx, rbp
0x00012d1c      4883ec08       sub rsp, 8
0x00012d20      4889de         mov rsi, rbx
0x00012d23      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/argmatch.c:-196
0x00012d26      4d89c7         mov r15, r8
0x00012d29      4d89cd         mov r13, r9
0x00012d2c      e80ffdffff     call sym.argmatch
0x00012d31      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/argmatch.c:-195
0x00012d34      780f           js 0x12d45                              ; ../coreutils-8.31/lib/argmatch.c:-193
0x00012d36      4883c408       add rsp, 8
0x00012d3a      5b             pop rbx
0x00012d3b      5d             pop rbp
0x00012d3c      415c           pop r12
0x00012d3e      415d           pop r13
0x00012d40      415e           pop r14                                 ; ../coreutils-8.31/lib/argmatch.c:-184
0x00012d42      415f           pop r15
0x00012d44      c3             ret
0x00012d45      4889c2         mov rdx, rax
0x00012d48      4c89e6         mov rsi, r12                            ; ../coreutils-8.31/lib/argmatch.c:-181
0x00012d4b      4c89f7         mov rdi, r14
0x00012d4e      e80dfeffff     call sym.argmatch_invalid
0x00012d53      4c89fa         mov rdx, r15
0x00012d56      4889ee         mov rsi, rbp
0x00012d59      4889df         mov rdi, rbx
0x00012d5c      e87ffeffff     call sym.argmatch_valid
0x00012d61      41ffd5         call r13
0x00012d64      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00012d6b      ebc9           jmp 0x12d36
0x00012d6d      0f1f00         nop dword [rax]
;-- argmatch_to_argument:
0x00012d70      4156           push r14
0x00012d72      4155           push r13
0x00012d74      4154           push r12
0x00012d76      55             push rbp
0x00012d77      53             push rbx
0x00012d78      4c8b36         mov r14, qword [rsi]
0x00012d7b      4d85f6         test r14, r14
0x00012d7e      7431           je 0x12db1
0x00012d80      4989cc         mov r12, rcx
0x00012d83      4989fd         mov r13, rdi
0x00012d86      4889d5         mov rbp, rdx
0x00012d89      488d5e08       lea rbx, [rsi + 8]
0x00012d8d      eb10           jmp 0x12d9f                             ; ../coreutils-8.31/lib/argmatch.c:-177
0x00012d8f      90             nop
0x00012d90      4c8b33         mov r14, qword [rbx]
0x00012d93      4c01e5         add rbp, r12
0x00012d96      4883c308       add rbx, 8
0x00012d9a      4d85f6         test r14, r14
0x00012d9d      7412           je 0x12db1
0x00012d9f      4c89e2         mov rdx, r12
0x00012da2      4889ee         mov rsi, rbp
0x00012da5      4c89ef         mov rdi, r13
0x00012da8      e8e3fefeff     call sym.imp.memcmp
0x00012dad      85c0           test eax, eax
0x00012daf      75df           jne 0x12d90
0x00012db1      5b             pop rbx
0x00012db2      4c89f0         mov rax, r14
0x00012db5      5d             pop rbp
0x00012db6      415c           pop r12
0x00012db8      415d           pop r13
0x00012dba      415e           pop r14
0x00012dbc      c3             ret
0x00012dbd      0f1f00         nop dword [rax]
;-- close_stream:
0x00012dc0      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00012dc2      55             push rbp
0x00012dc3      4889fd         mov rbp, rdi
0x00012dc6      53             push rbx
0x00012dc7      e8d4fbfeff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x00012dcc      8b5d00         mov ebx, dword [rbp]
0x00012dcf      4889ef         mov rdi, rbp
0x00012dd2      4989c4         mov r12, rax
0x00012dd5      e876110000     call sym.rpl_fclose
0x00012dda      83e320         and ebx, 0x20                           ; "@"
0x00012ddd      85db           test ebx, ebx
0x00012ddf      7517           jne 0x12df8
0x00012de1      85c0           test eax, eax
0x00012de3      740a           je 0x12def                              ; stdio.h:-186
0x00012de5      4d85e4         test r12, r12                           ; stdio.h:-178
0x00012de8      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00012ded      7439           je 0x12e28
0x00012def      5b             pop rbx
0x00012df0      5d             pop rbp
0x00012df1      415c           pop r12
0x00012df3      c3             ret
0x00012df4      0f1f4000       nop dword [rax]
0x00012df8      85c0           test eax, eax
0x00012dfa      751c           jne 0x12e18
0x00012dfc      e84ffbfeff     call sym.imp.__errno_location
0x00012e01      c70000000000   mov dword [rax], 0
0x00012e07      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00012e0c      5b             pop rbx
0x00012e0d      5d             pop rbp
0x00012e0e      415c           pop r12
0x00012e10      c3             ret
0x00012e11      0f1f80000000.  nop dword [rax]
0x00012e18      5b             pop rbx
0x00012e19      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00012e1e      5d             pop rbp                                 ; stdio.h:-186
0x00012e1f      415c           pop r12
0x00012e21      c3             ret
0x00012e22      660f1f440000   nop word [rax + rax]
0x00012e28      e823fbfeff     call sym.imp.__errno_location
0x00012e2d      833809         cmp dword [rax], 9
0x00012e30      5b             pop rbx
0x00012e31      5d             pop rbp
0x00012e32      415c           pop r12                                 ; stdio.h:-178
0x00012e34      0f95c0         setne al
0x00012e37      0fb6c0         movzx eax, al
0x00012e3a      f7d8           neg eax
0x00012e3c      c3             ret
0x00012e3d      0f1f00         nop dword [rax]
;-- opendir_safer:
0x00012e40      4156           push r14                                ; ../coreutils-8.31/lib/opendir-safer.c:32
0x00012e42      4155           push r13
0x00012e44      4154           push r12
0x00012e46      55             push rbp
0x00012e47      53             push rbx
0x00012e48      e843fcfeff     call sym.imp.opendir                    ; ../coreutils-8.31/lib/opendir-safer.c:33
0x00012e4d      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/opendir-safer.c:35
0x00012e50      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/opendir-safer.c:33
0x00012e53      740d           je 0x12e62                              ; ../coreutils-8.31/lib/opendir-safer.c:35
0x00012e55      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/opendir-safer.c:37
0x00012e58      e8b3fefeff     call sym.imp.dirfd
0x00012e5d      83f802         cmp eax, 2                              ; ../coreutils-8.31/lib/opendir-safer.c:39
0x00012e60      760e           jbe 0x12e70
0x00012e62      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/opendir-safer.c:76
0x00012e65      5b             pop rbx
0x00012e66      5d             pop rbp
0x00012e67      415c           pop r12
0x00012e69      415d           pop r13
0x00012e6b      415e           pop r14
0x00012e6d      c3             ret
0x00012e6e      6690           nop
0x00012e70      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/opendir-safer.c:52
0x00012e72      ba03000000     mov edx, 3
0x00012e77      be06040000     mov esi, 0x406
0x00012e7c      31c0           xor eax, eax
0x00012e7e      e84d110000     call sym.rpl_fcntl
0x00012e83      4189c4         mov r12d, eax
0x00012e86      e8c5fafeff     call sym.imp.__errno_location
0x00012e8b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/opendir-safer.c:53
0x00012e8e      4889c5         mov rbp, rax
0x00012e91      7925           jns 0x12eb8
0x00012e93      448b30         mov r14d, dword [rax]                   ; ../coreutils-8.31/lib/opendir-safer.c:55
0x00012e96      4531ed         xor r13d, r13d                          ; ../coreutils-8.31/lib/opendir-safer.c:56
0x00012e99      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/opendir-safer.c:69
0x00012e9c      4c89eb         mov rbx, r13                            ; ../coreutils-8.31/lib/opendir-safer.c:71
0x00012e9f      e8bcfdfeff     call sym.imp.closedir                   ; ../coreutils-8.31/lib/opendir-safer.c:69
0x00012ea4      44897500       mov dword [rbp], r14d                   ; ../coreutils-8.31/lib/opendir-safer.c:70
0x00012ea8      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/opendir-safer.c:76
0x00012eab      5b             pop rbx
0x00012eac      5d             pop rbp
0x00012ead      415c           pop r12
0x00012eaf      415d           pop r13
0x00012eb1      415e           pop r14
0x00012eb3      c3             ret
0x00012eb4      0f1f4000       nop dword [rax]
0x00012eb8      4489e7         mov edi, r12d                           ; ../coreutils-8.31/lib/opendir-safer.c:60
0x00012ebb      e8f000ffff     call sym.imp.fdopendir
0x00012ec0      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/opendir-safer.c:62
0x00012ec3      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/opendir-safer.c:60
0x00012ec6      448b7500       mov r14d, dword [rbp]                   ; ../coreutils-8.31/lib/opendir-safer.c:61
0x00012eca      75cd           jne 0x12e99                             ; ../coreutils-8.31/lib/opendir-safer.c:62
0x00012ecc      4489e7         mov edi, r12d                           ; ../coreutils-8.31/lib/opendir-safer.c:63
0x00012ecf      e85cfdfeff     call sym.imp.close
0x00012ed4      ebc3           jmp 0x12e99
0x00012ed6      662e0f1f8400.  nop word cs:[rax + rax]
;-- gettime:
0x00012ee0      4889fe         mov rsi, rdi                            ; ../coreutils-8.31/lib/gettime.c:30
0x00012ee3      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/gettime.c:32
0x00012ee5      e926fbfeff     jmp sym.imp.clock_gettime
0x00012eea      660f1f440000   nop word [rax + rax]
;-- current_timespec:
0x00012ef0      4883ec28       sub rsp, 0x28                           ; ../coreutils-8.31/lib/gettime.c:45
0x00012ef4      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/gettime.c:32
0x00012ef6      4889e6         mov rsi, rsp
0x00012ef9      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/gettime.c:45
0x00012f02      4889442418     mov qword [rsp + 0x18], rax
0x00012f07      31c0           xor eax, eax
0x00012f09      e802fbfeff     call sym.imp.clock_gettime              ; ../coreutils-8.31/lib/gettime.c:32
0x00012f0e      488b4c2418     mov rcx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/gettime.c:49
0x00012f13      6448330c2528.  xor rcx, qword fs:[0x28]
0x00012f1c      488b0424       mov rax, qword [rsp]
0x00012f20      488b542408     mov rdx, qword [rsp + 8]
0x00012f25      7505           jne 0x12f2c
0x00012f27      4883c428       add rsp, 0x28
0x00012f2b      c3             ret
0x00012f2c      e8fffbfeff     call sym.imp.__stack_chk_fail
0x00012f31      662e0f1f8400.  nop word cs:[rax + rax]
0x00012f3b      0f1f440000     nop dword [rax + rax]
;-- hard_locale:
0x00012f40      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00012f44      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00012f46      e885fffeff     call sym.imp.setlocale
0x00012f4b      4889c2         mov rdx, rax
0x00012f4e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00012f53      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00012f56      741d           je 0x12f75
0x00012f58      488d3d045f00.  lea rdi, [0x00018e63]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x00012f5f      b902000000     mov ecx, 2
0x00012f64      4889d6         mov rsi, rdx
0x00012f67      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00012f69      0f97c1         seta cl
0x00012f6c      80d900         sbb cl, 0
0x00012f6f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00012f71      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00012f73      750b           jne 0x12f80
0x00012f75      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00012f79      c3             ret
0x00012f7a      660f1f440000   nop word [rax + rax]
0x00012f80      488d3dde5e00.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x18e65 ; "POSIX"
0x00012f87      b906000000     mov ecx, 6
0x00012f8c      4889d6         mov rsi, rdx
0x00012f8f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00012f91      0f97c0         seta al
0x00012f94      1c00           sbb al, 0
0x00012f96      84c0           test al, al
0x00012f98      0f95c0         setne al
0x00012f9b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00012f9f      c3             ret
;-- hash_pjw:
0x00012fa0      480fbe0f       movsx rcx, byte [rdi]
0x00012fa4      84c9           test cl, cl
0x00012fa6      7428           je 0x12fd0
0x00012fa8      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hash-pjw.c:34
0x00012faa      660f1f440000   nop word [rax + rax]
0x00012fb0      48c1c009       rol rax, 9                              ; ../coreutils-8.31/lib/hash-pjw.c:37
0x00012fb4      4883c701       add rdi, 1                              ; ../coreutils-8.31/lib/hash-pjw.c:36
0x00012fb8      4801c8         add rax, rcx                            ; ../coreutils-8.31/lib/hash-pjw.c:37
0x00012fbb      480fbe0f       movsx rcx, byte [rdi]                   ; ../coreutils-8.31/lib/hash-pjw.c:36
0x00012fbf      84c9           test cl, cl
0x00012fc1      75ed           jne 0x12fb0
0x00012fc3      31d2           xor edx, edx
0x00012fc5      48f7f6         div rsi
0x00012fc8      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/hash-pjw.c:40
0x00012fcb      c3             ret
0x00012fcc      0f1f4000       nop dword [rax]
0x00012fd0      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/hash-pjw.c:36
0x00012fd2      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/hash-pjw.c:40
0x00012fd5      c3             ret
0x00012fd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- locale_charset:
0x00012fe0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/localcharset.c:688
0x00012fe4      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00012fe9      e822fefeff     call sym.imp.nl_langinfo
0x00012fee      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00012ff1      741d           je 0x13010
0x00012ff3      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00012ff6      488d156e5e00.  lea rdx, str.ASCII                      ; 0x18e6b ; "ASCII"
0x00012ffd      480f44c2       cmove rax, rdx
0x00013001      4883c408       add rsp, 8
0x00013005      c3             ret
0x00013006      662e0f1f8400.  nop word cs:[rax + rax]
0x00013010      488d05545e00.  lea rax, str.ASCII                      ; 0x18e6b ; "ASCII"
0x00013017      4883c408       add rsp, 8
0x0001301b      c3             ret
0x0001301c      0f1f4000       nop dword [rax]
;-- dirchownmod:
0x00013020      4157           push r15                                ; ../coreutils-8.31/lib/dirchownmod.c:64
0x00013022      4156           push r14
0x00013024      4189d7         mov r15d, edx
0x00013027      4155           push r13
0x00013029      4154           push r12
0x0001302b      4189cd         mov r13d, ecx
0x0001302e      55             push rbp
0x0001302f      53             push rbx
0x00013030      89fd           mov ebp, edi
0x00013032      4989f4         mov r12, rsi
0x00013035      4589ce         mov r14d, r9d
0x00013038      4881ecb80000.  sub rsp, 0xb8
0x0001303f      64488b042528.  mov rax, qword fs:[0x28]
0x00013048      48898424a800.  mov qword [rsp + 0xa8], rax
0x00013050      31c0           xor eax, eax
0x00013052      85ff           test edi, edi                           ; ../coreutils-8.31/lib/dirchownmod.c:66
0x00013054      448944240c     mov dword [rsp + 0xc], r8d
0x00013059      488d542410     lea rdx, [rsp + 0x10]                   ; stat.h:451   return __xstat (_STAT_VER, __path, __statbuf);
0x0001305e      0f88cc000000   js 0x13130                              ; ../coreutils-8.31/lib/dirchownmod.c:66
0x00013064      89fe           mov esi, edi                            ; stat.h:465   return __fxstat (_STAT_VER, __fd, __statbuf);
0x00013066      bf01000000     mov edi, 1
0x0001306b      e8b0fdfeff     call sym.imp.__fxstat
0x00013070      85c0           test eax, eax                           ; ../coreutils-8.31/lib/dirchownmod.c:68
0x00013072      89c3           mov ebx, eax                            ; stat.h:465   return __fxstat (_STAT_VER, __fd, __statbuf);
0x00013074      448b44240c     mov r8d, dword [rsp + 0xc]              ; ../coreutils-8.31/lib/dirchownmod.c:68
0x00013079      0f85a1010000   jne 0x13220
0x0001307f      8b4c2428       mov ecx, dword [rsp + 0x28]             ; ../coreutils-8.31/lib/dirchownmod.c:70
0x00013083      89c8           mov eax, ecx                            ; ../coreutils-8.31/lib/dirchownmod.c:76
0x00013085      2500f00000     and eax, 0xf000
0x0001308a      3d00400000     cmp eax, 0x4000                         ; "([]A\A]\xc3\x0f\x1f\x84"
0x0001308f      754f           jne 0x130e0
0x00013091      4183fdff       cmp r13d, 0xffffffff                    ; ../coreutils-8.31/lib/dirchownmod.c:94
0x00013095      0f84d5000000   je 0x13170
0x0001309b      44396c242c     cmp dword [rsp + 0x2c], r13d
0x000130a0      0f84ca000000   je 0x13170
0x000130a6      85ed           test ebp, ebp                           ; ../coreutils-8.31/lib/dirchownmod.c:99
0x000130a8      894c240c       mov dword [rsp + 0xc], ecx
0x000130ac      4489c2         mov edx, r8d
0x000130af      4489ee         mov esi, r13d
0x000130b2      0f8908010000   jns 0x131c0
0x000130b8      4183ffff       cmp r15d, 0xffffffff                    ; ../coreutils-8.31/lib/dirchownmod.c:101
0x000130bc      4c89e7         mov rdi, r12
0x000130bf      0f843b010000   je 0x13200
0x000130c5      e876fdfeff     call sym.imp.lchown
0x000130ca      8b4c240c       mov ecx, dword [rsp + 0xc]
0x000130ce      89c3           mov ebx, eax
0x000130d0      85db           test ebx, ebx                           ; ../coreutils-8.31/lib/dirchownmod.c:108
0x000130d2      7530           jne 0x13104
0x000130d4      e9f8000000     jmp 0x131d1
0x000130d9      0f1f80000000.  nop dword [rax]
0x000130e0      e86bf8feff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/dirchownmod.c:78
0x000130e5      41bd14000000   mov r13d, 0x14
0x000130eb      4989c4         mov r12, rax
0x000130ee      c70014000000   mov dword [rax], 0x14                   ; [0x14:4]=1
0x000130f4      bbffffffff     mov ebx, 0xffffffff                     ; ../coreutils-8.31/lib/dirchownmod.c:79 ; -1
0x000130f9      89ef           mov edi, ebp                            ; ../coreutils-8.31/lib/dirchownmod.c:135
0x000130fb      e830fbfeff     call sym.imp.close
0x00013100      45892c24       mov dword [r12], r13d                   ; ../coreutils-8.31/lib/dirchownmod.c:136
0x00013104      488b8c24a800.  mov rcx, qword [rsp + 0xa8]             ; ../coreutils-8.31/lib/dirchownmod.c:141
0x0001310c      6448330c2528.  xor rcx, qword fs:[0x28]
0x00013115      89d8           mov eax, ebx
0x00013117      0f8513010000   jne 0x13230
0x0001311d      4881c4b80000.  add rsp, 0xb8
0x00013124      5b             pop rbx
0x00013125      5d             pop rbp
0x00013126      415c           pop r12
0x00013128      415d           pop r13
0x0001312a      415e           pop r14
0x0001312c      415f           pop r15
0x0001312e      c3             ret
0x0001312f      90             nop
0x00013130      bf01000000     mov edi, 1                              ; stat.h:451   return __xstat (_STAT_VER, __path, __statbuf);
0x00013135      e896fcfeff     call sym.imp.__xstat
0x0001313a      85c0           test eax, eax                           ; ../coreutils-8.31/lib/dirchownmod.c:68
0x0001313c      89c3           mov ebx, eax                            ; stat.h:451   return __xstat (_STAT_VER, __path, __statbuf);
0x0001313e      448b44240c     mov r8d, dword [rsp + 0xc]              ; ../coreutils-8.31/lib/dirchownmod.c:68
0x00013143      75bf           jne 0x13104
0x00013145      8b4c2428       mov ecx, dword [rsp + 0x28]             ; ../coreutils-8.31/lib/dirchownmod.c:70
0x00013149      89c8           mov eax, ecx                            ; ../coreutils-8.31/lib/dirchownmod.c:76
0x0001314b      2500f00000     and eax, 0xf000
0x00013150      3d00400000     cmp eax, 0x4000                         ; "([]A\A]\xc3\x0f\x1f\x84"
0x00013155      0f8436ffffff   je 0x13091
0x0001315b      e8f0f7feff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/dirchownmod.c:78
0x00013160      83cbff         or ebx, 0xffffffff                      ; ../coreutils-8.31/lib/dirchownmod.c:79 ; -1
0x00013163      c70014000000   mov dword [rax], 0x14                   ; ../coreutils-8.31/lib/dirchownmod.c:78 ; [0x14:4]=1
0x00013169      eb99           jmp 0x13104
0x0001316b      0f1f440000     nop dword [rax + rax]
0x00013170      4183f8ff       cmp r8d, 0xffffffff                     ; ../coreutils-8.31/lib/dirchownmod.c:95
0x00013174      740b           je 0x13181
0x00013176      4439442430     cmp dword [rsp + 0x30], r8d
0x0001317b      0f8525ffffff   jne 0x130a6
0x00013181      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/dirchownmod.c:87
0x00013183      89c8           mov eax, ecx                            ; ../coreutils-8.31/lib/dirchownmod.c:115
0x00013185      4431f0         xor eax, r14d
0x00013188      09d0           or eax, edx
0x0001318a      858424f00000.  test dword [rsp + 0xf0], eax
0x00013191      744d           je 0x131e0
0x00013193      8bb424f00000.  mov esi, dword [rsp + 0xf0]             ; ../coreutils-8.31/lib/dirchownmod.c:118
0x0001319a      81e1ff0f0000   and ecx, 0xfff
0x000131a0      f7d6           not esi
0x000131a2      21ce           and esi, ecx
0x000131a4      4409f6         or esi, r14d                            ; ../coreutils-8.31/lib/dirchownmod.c:117
0x000131a7      85ed           test ebp, ebp                           ; ../coreutils-8.31/lib/dirchownmod.c:121
0x000131a9      7965           jns 0x13210
0x000131ab      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/dirchownmod.c:123
0x000131ae      e85dfdfeff     call sym.imp.chmod
0x000131b3      89c3           mov ebx, eax
0x000131b5      e94affffff     jmp 0x13104
0x000131ba      660f1f440000   nop word [rax + rax]
0x000131c0      89ef           mov edi, ebp                            ; ../coreutils-8.31/lib/dirchownmod.c:99
0x000131c2      e8b9fdfeff     call sym.imp.fchown
0x000131c7      85c0           test eax, eax                           ; ../coreutils-8.31/lib/dirchownmod.c:108
0x000131c9      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/dirchownmod.c:99
0x000131cb      8b4c240c       mov ecx, dword [rsp + 0xc]              ; ../coreutils-8.31/lib/dirchownmod.c:108
0x000131cf      754f           jne 0x13220
0x000131d1      f6c149         test cl, 0x49
0x000131d4      74ab           je 0x13181
0x000131d6      89ca           mov edx, ecx                            ; ../coreutils-8.31/lib/dirchownmod.c:109
0x000131d8      81e2000c0000   and edx, 0xc00
0x000131de      eba3           jmp 0x13183
0x000131e0      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/dirchownmod.c:128
0x000131e2      85ed           test ebp, ebp
0x000131e4      0f881affffff   js 0x13104
0x000131ea      660f1f440000   nop word [rax + rax]
0x000131f0      89ef           mov edi, ebp                            ; ../coreutils-8.31/lib/dirchownmod.c:131
0x000131f2      e839fafeff     call sym.imp.close
0x000131f7      89c3           mov ebx, eax
0x000131f9      e906ffffff     jmp 0x13104
0x000131fe      6690           nop
0x00013200      e87bfcfeff     call sym.imp.chown                      ; ../coreutils-8.31/lib/dirchownmod.c:101
0x00013205      8b4c240c       mov ecx, dword [rsp + 0xc]
0x00013209      89c3           mov ebx, eax
0x0001320b      e9c0feffff     jmp 0x130d0
0x00013210      89ef           mov edi, ebp                            ; ../coreutils-8.31/lib/dirchownmod.c:121
0x00013212      e8d9fcfeff     call sym.imp.fchmod
0x00013217      85c0           test eax, eax                           ; ../coreutils-8.31/lib/dirchownmod.c:130
0x00013219      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/dirchownmod.c:121
0x0001321b      74d3           je 0x131f0                              ; ../coreutils-8.31/lib/dirchownmod.c:130
0x0001321d      0f1f00         nop dword [rax]
0x00013220      e82bf7feff     call sym.imp.__errno_location
0x00013225      4989c4         mov r12, rax
0x00013228      448b28         mov r13d, dword [rax]
0x0001322b      e9c9feffff     jmp 0x130f9
0x00013230      e8fbf8feff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/dirchownmod.c:141
0x00013235      662e0f1f8400.  nop word cs:[rax + rax]
0x0001323f      90             nop
;-- openat_safer:
0x00013240      4883ec58       sub rsp, 0x58                           ; ../coreutils-8.31/lib/openat-safer.c:30
0x00013244      48894c2438     mov qword [rsp + 0x38], rcx
0x00013249      31c9           xor ecx, ecx
0x0001324b      64488b042528.  mov rax, qword fs:[0x28]
0x00013254      4889442418     mov qword [rsp + 0x18], rax
0x00013259      31c0           xor eax, eax
0x0001325b      f6c240         test dl, 0x40                           ; ../coreutils-8.31/lib/openat-safer.c:33 ; segment.PHDR
0x0001325e      7528           jne 0x13288
0x00013260      31c0           xor eax, eax
0x00013262      e8a9f8feff     call sym.imp.openat                     ; fcntl2.h:-83
0x00013267      89c7           mov edi, eax
0x00013269      e8d2d6ffff     call sym.fd_safer                       ; fcntl2.h:-82
0x0001326e      488b742418     mov rsi, qword [rsp + 0x18]
0x00013273      644833342528.  xor rsi, qword fs:[0x28]
0x0001327c      752b           jne 0x132a9
0x0001327e      4883c458       add rsp, 0x58
0x00013282      c3             ret
0x00013283      0f1f440000     nop dword [rax + rax]                   ; fcntl2.h:-92
0x00013288      488d442460     lea rax, [rsp + 0x60]
0x0001328d      c70424180000.  mov dword [rsp], 0x18                   ; [0x18:4]=0x3e30 rip
0x00013294      8b4c2438       mov ecx, dword [rsp + 0x38]
0x00013298      4889442408     mov qword [rsp + 8], rax
0x0001329d      488d442420     lea rax, [rsp + 0x20]
0x000132a2      4889442410     mov qword [rsp + 0x10], rax
0x000132a7      ebb7           jmp 0x13260
0x000132a9      e882f8feff     call sym.imp.__stack_chk_fail           ; fcntl2.h:-82
0x000132ae      6690           nop
;-- randint_new:
0x000132b0      53             push rbx
0x000132b1      4889fb         mov rbx, rdi
0x000132b4      bf18000000     mov edi, 0x18
0x000132b9      e852edffff     call sym.xmalloc
0x000132be      488918         mov qword [rax], rbx
0x000132c1      48c740100000.  mov qword [rax + 0x10], 0
0x000132c9      48c740080000.  mov qword [rax + 8], 0
0x000132d1      5b             pop rbx
0x000132d2      c3             ret
0x000132d3      0f1f00         nop dword [rax]
0x000132d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- randint_all_new:
0x000132e0      53             push rbx
0x000132e1      e84a020000     call sym.randread_new
0x000132e6      4885c0         test rax, rax
0x000132e9      7425           je 0x13310
0x000132eb      4889c3         mov rbx, rax
0x000132ee      bf18000000     mov edi, 0x18
0x000132f3      e818edffff     call sym.xmalloc
0x000132f8      488918         mov qword [rax], rbx
0x000132fb      48c740100000.  mov qword [rax + 0x10], 0
0x00013303      48c740080000.  mov qword [rax + 8], 0
0x0001330b      5b             pop rbx
0x0001330c      c3             ret
0x0001330d      0f1f00         nop dword [rax]
0x00013310      31c0           xor eax, eax
0x00013312      5b             pop rbx
0x00013313      c3             ret
0x00013314      6690           nop
0x00013316      662e0f1f8400.  nop word cs:[rax + rax]
;-- randint_get_source:
0x00013320      488b07         mov rax, qword [rdi]
0x00013323      c3             ret
0x00013324      6690           nop
0x00013326      662e0f1f8400.  nop word cs:[rax + rax]
;-- randint_genmax:
0x00013330      4157           push r15
0x00013332      4156           push r14
0x00013334      4c8d7e01       lea r15, [rsi + 1]
0x00013338      4155           push r13
0x0001333a      4154           push r12
0x0001333c      4989fd         mov r13, rdi
0x0001333f      55             push rbp
0x00013340      53             push rbx
0x00013341      4989f6         mov r14, rsi
0x00013344      4883ec28       sub rsp, 0x28
0x00013348      488b6f08       mov rbp, qword [rdi + 8]
0x0001334c      488b5f10       mov rbx, qword [rdi + 0x10]
0x00013350      64488b042528.  mov rax, qword fs:[0x28]
0x00013359      4889442418     mov qword [rsp + 0x18], rax
0x0001335e      31c0           xor eax, eax
0x00013360      488b07         mov rax, qword [rdi]
0x00013363      4c8d642410     lea r12, [rsp + 0x10]
0x00013368      4889442408     mov qword [rsp + 8], rax
0x0001336d      eb36           jmp 0x133a5
0x0001336f      90             nop
0x00013370      4c39f3         cmp rbx, r14
0x00013373      0f8486000000   je 0x133ff
0x00013379      4889d8         mov rax, rbx
0x0001337c      31d2           xor edx, edx
0x0001337e      4c29f0         sub rax, r14
0x00013381      49f7f7         div r15
0x00013384      4829d3         sub rbx, rdx
0x00013387      4889d7         mov rdi, rdx
0x0001338a      4889c6         mov rsi, rax
0x0001338d      31d2           xor edx, edx
0x0001338f      4889e8         mov rax, rbp
0x00013392      49f7f7         div r15
0x00013395      4839dd         cmp rbp, rbx
0x00013398      0f869a000000   jbe 0x13438
0x0001339e      488d5fff       lea rbx, [rdi - 1]
0x000133a2      4889d5         mov rbp, rdx
0x000133a5      4c39f3         cmp rbx, r14
0x000133a8      73c6           jae 0x13370
0x000133aa      4889d8         mov rax, rbx
0x000133ad      31d2           xor edx, edx
0x000133af      90             nop
0x000133b0      48c1e008       shl rax, 8
0x000133b4      4883c201       add rdx, 1
0x000133b8      4805ff000000   add rax, 0xff
0x000133be      4939c6         cmp r14, rax
0x000133c1      77ed           ja 0x133b0
0x000133c3      488b7c2408     mov rdi, qword [rsp + 8]
0x000133c8      4c89e6         mov rsi, r12
0x000133cb      e8b0040000     call sym.randread
0x000133d0      4c89e0         mov rax, r12
0x000133d3      0f1f440000     nop dword [rax + rax]
0x000133d8      0fb610         movzx edx, byte [rax]
0x000133db      48c1e308       shl rbx, 8
0x000133df      48c1e508       shl rbp, 8
0x000133e3      4881c3ff0000.  add rbx, 0xff
0x000133ea      4883c001       add rax, 1
0x000133ee      4801d5         add rbp, rdx
0x000133f1      4939de         cmp r14, rbx
0x000133f4      77e2           ja 0x133d8
0x000133f6      4c39f3         cmp rbx, r14
0x000133f9      0f857affffff   jne 0x13379
0x000133ff      49c745100000.  mov qword [r13 + 0x10], 0
0x00013407      49c745080000.  mov qword [r13 + 8], 0
0x0001340f      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00013414      6448330c2528.  xor rcx, qword fs:[0x28]
0x0001341d      4889e8         mov rax, rbp
0x00013420      7523           jne 0x13445
0x00013422      4883c428       add rsp, 0x28
0x00013426      5b             pop rbx
0x00013427      5d             pop rbp
0x00013428      415c           pop r12
0x0001342a      415d           pop r13
0x0001342c      415e           pop r14
0x0001342e      415f           pop r15
0x00013430      c3             ret
0x00013431      0f1f80000000.  nop dword [rax]
0x00013438      49894508       mov qword [r13 + 8], rax
0x0001343c      49897510       mov qword [r13 + 0x10], rsi
0x00013440      4889d5         mov rbp, rdx
0x00013443      ebca           jmp 0x1340f
0x00013445      e8e6f6feff     call sym.imp.__stack_chk_fail
0x0001344a      660f1f440000   nop word [rax + rax]
;-- randint_free:
0x00013450      53             push rbx
0x00013451      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00013458      4889fb         mov rbx, rdi
0x0001345b      be18000000     mov esi, 0x18
0x00013460      e8ebfafeff     call sym.imp.__explicit_bzero_chk
0x00013465      4889df         mov rdi, rbx
0x00013468      5b             pop rbx
0x00013469      e962fcfeff     jmp sym..plt.got
0x0001346e      6690           nop
;-- randint_all_free:
0x00013470      4155           push r13
0x00013472      4154           push r12
0x00013474      55             push rbp
0x00013475      53             push rbx
0x00013476      4889fb         mov rbx, rdi
0x00013479      4883ec08       sub rsp, 8
0x0001347d      488b3f         mov rdi, qword [rdi]
0x00013480      e89b050000     call sym.randread_free
0x00013485      4189c4         mov r12d, eax
0x00013488      e8c3f4feff     call sym.imp.__errno_location
0x0001348d      448b28         mov r13d, dword [rax]
0x00013490      4889df         mov rdi, rbx
0x00013493      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0001349a      be18000000     mov esi, 0x18
0x0001349f      4889c5         mov rbp, rax
0x000134a2      e8a9fafeff     call sym.imp.__explicit_bzero_chk
0x000134a7      4889df         mov rdi, rbx
0x000134aa      e821fcfeff     call sym..plt.got
0x000134af      44896d00       mov dword [rbp], r13d
0x000134b3      4883c408       add rsp, 8
0x000134b7      4489e0         mov eax, r12d
0x000134ba      5b             pop rbx
0x000134bb      5d             pop rbp
0x000134bc      415c           pop r12
0x000134be      415d           pop r13
0x000134c0      c3             ret
0x000134c1      662e0f1f8400.  nop word cs:[rax + rax]
0x000134cb      0f1f440000     nop dword [rax + rax]
;-- randread_error:
0x000134d0      55             push rbp
0x000134d1      53             push rbx
0x000134d2      4883ec08       sub rsp, 8
0x000134d6      4885ff         test rdi, rdi
0x000134d9      743d           je 0x13518
0x000134db      e8e0c1ffff     call sym.quote
0x000134e0      4889c5         mov rbp, rax
0x000134e3      e868f4feff     call sym.imp.__errno_location
0x000134e8      833800         cmp dword [rax], 0
0x000134eb      4889c3         mov rbx, rax
0x000134ee      ba05000000     mov edx, 5
0x000134f3      7428           je 0x1351d
0x000134f5      488d35855900.  lea rsi, str.s:_read_error              ; 0x18e81 ; "%s: read error"
0x000134fc      31ff           xor edi, edi
0x000134fe      e8cdf5feff     call sym.imp.dcgettext
0x00013503      8b3d3f9b2000   mov edi, dword [obj.exit_failure]       ; [0x21d048:4]=1
0x00013509      8b33           mov esi, dword [rbx]
0x0001350b      4889c2         mov rdx, rax
0x0001350e      4889e9         mov rcx, rbp
0x00013511      31c0           xor eax, eax
0x00013513      e818fafeff     call sym.imp.error
0x00013518      e823f4feff     call sym.imp.abort
0x0001351d      488d354d5900.  lea rsi, str.s:_end_of_file             ; 0x18e71 ; "%s: end of file"
0x00013524      31ff           xor edi, edi
0x00013526      e8a5f5feff     call sym.imp.dcgettext
0x0001352b      ebd6           jmp 0x13503
0x0001352d      0f1f00         nop dword [rax]
;-- randread_new:
0x00013530      4157           push r15
0x00013532      4156           push r14
0x00013534      4155           push r13
0x00013536      4154           push r12
0x00013538      55             push rbp
0x00013539      53             push rbx
0x0001353a      4883ec38       sub rsp, 0x38
0x0001353e      64488b042528.  mov rax, qword fs:[0x28]
0x00013547      4889442428     mov qword [rsp + 0x28], rax
0x0001354c      31c0           xor eax, eax
0x0001354e      4885f6         test rsi, rsi
0x00013551      0f8421010000   je 0x13678
0x00013557      4885ff         test rdi, rdi
0x0001355a      4989fc         mov r12, rdi
0x0001355d      4889f5         mov rbp, rsi
0x00013560      747e           je 0x135e0
0x00013562      488d35345900.  lea rsi, [0x00018e9d]                   ; "rb"
0x00013569      e8121e0000     call sym.fopen_safer
0x0001356e      4885c0         test rax, rax
0x00013571      4989c5         mov r13, rax
0x00013574      0f84fe010000   je 0x13778
0x0001357a      bf38100000     mov edi, 0x1038
0x0001357f      e88ceaffff     call sym.xmalloc
0x00013584      4889c3         mov rbx, rax
0x00013587      4c8928         mov qword [rax], r13
0x0001358a      488d053fffff.  lea rax, sym.randread_error             ; 0x134d0 ; "USH\x83\xec\bH\x85\xfft=\xe8\xe0\xc1\xff\xffH\x89\xc5\xe8h\xf4\xfe\xff\x838"
0x00013591      4881fd001000.  cmp rbp, 0x1000
0x00013598      b900100000     mov ecx, 0x1000
0x0001359d      488d7318       lea rsi, [rbx + 0x18]
0x000135a1      480f46cd       cmovbe rcx, rbp
0x000135a5      48894308       mov qword [rbx + 8], rax
0x000135a9      4c896310       mov qword [rbx + 0x10], r12
0x000135ad      31d2           xor edx, edx
0x000135af      4c89ef         mov rdi, r13
0x000135b2      e849f9feff     call sym.imp.setvbuf
0x000135b7      488b542428     mov rdx, qword [rsp + 0x28]
0x000135bc      644833142528.  xor rdx, qword fs:[0x28]
0x000135c5      4889d8         mov rax, rbx
0x000135c8      0f85b1010000   jne 0x1377f
0x000135ce      4883c438       add rsp, 0x38
0x000135d2      5b             pop rbx
0x000135d3      5d             pop rbp
0x000135d4      415c           pop r12
0x000135d6      415d           pop r13
0x000135d8      415e           pop r14
0x000135da      415f           pop r15
0x000135dc      c3             ret
0x000135dd      0f1f00         nop dword [rax]
0x000135e0      bf38100000     mov edi, 0x1038
0x000135e5      e826eaffff     call sym.xmalloc
0x000135ea      4889c3         mov rbx, rax
0x000135ed      48c700000000.  mov qword [rax], 0
0x000135f4      488d05d5feff.  lea rax, sym.randread_error             ; 0x134d0 ; "USH\x83\xec\bH\x85\xfft=\xe8\xe0\xc1\xff\xffH\x89\xc5\xe8h\xf4\xfe\xff\x838"
0x000135fb      488d3d8e5800.  lea rdi, str.dev_urandom                ; 0x18e90 ; "/dev/urandom"
0x00013602      31f6           xor esi, esi
0x00013604      48c743100000.  mov qword [rbx + 0x10], 0
0x0001360c      48894308       mov qword [rbx + 8], rax
0x00013610      48c743180000.  mov qword [rbx + 0x18], 0
0x00013618      31c0           xor eax, eax
0x0001361a      e841f9feff     call sym.imp.open
0x0001361f      85c0           test eax, eax
0x00013621      4c8d6b20       lea r13, [rbx + 0x20]
0x00013625      4189c7         mov r15d, eax
0x00013628      787e           js 0x136a8
0x0001362a      4881fd000800.  cmp rbp, 0x800
0x00013631      4889ea         mov rdx, rbp
0x00013634      41be00080000   mov r14d, 0x800
0x0001363a      490f47d6       cmova rdx, r14
0x0001363e      b918100000     mov ecx, 0x1018
0x00013643      4c89ee         mov rsi, r13
0x00013646      89c7           mov edi, eax
0x00013648      e863f3feff     call sym.imp.__read_chk
0x0001364d      4489ff         mov edi, r15d
0x00013650      4889c5         mov rbp, rax
0x00013653      e8d8f5feff     call sym.imp.close
0x00013658      4881fdff0700.  cmp rbp, 0x7ff
0x0001365f      0f8e1f010000   jle 0x13784
0x00013665      4c89ef         mov rdi, r13
0x00013668      e893060000     call sym.isaac_seed
0x0001366d      e945ffffff     jmp 0x135b7
0x00013672      660f1f440000   nop word [rax + rax]
0x00013678      bf38100000     mov edi, 0x1038
0x0001367d      e88ee9ffff     call sym.xmalloc
0x00013682      4889c3         mov rbx, rax
0x00013685      48c700000000.  mov qword [rax], 0
0x0001368c      488d053dfeff.  lea rax, sym.randread_error             ; 0x134d0 ; "USH\x83\xec\bH\x85\xfft=\xe8\xe0\xc1\xff\xffH\x89\xc5\xe8h\xf4\xfe\xff\x838"
0x00013693      48c743100000.  mov qword [rbx + 0x10], 0
0x0001369b      48894308       mov qword [rbx + 8], rax
0x0001369f      e913ffffff     jmp 0x135b7
0x000136a4      0f1f4000       nop dword [rax]
0x000136a8      4c8d642410     lea r12, [rsp + 0x10]
0x000136ad      31f6           xor esi, esi
0x000136af      41be18000000   mov r14d, 0x18
0x000136b5      4c89e7         mov rdi, r12
0x000136b8      e813f5feff     call sym.imp.gettimeofday
0x000136bd      660f6f442410   movdqa xmm0, xmmword [rsp + 0x10]
0x000136c3      0f114320       movups xmmword [rbx + 0x20], xmm0
0x000136c7      e864f3feff     call sym.imp.getpid
0x000136cc      894330         mov dword [rbx + 0x30], eax
0x000136cf      89442410       mov dword [rsp + 0x10], eax
0x000136d3      e848f9feff     call sym.imp.getppid
0x000136d8      89442410       mov dword [rsp + 0x10], eax
0x000136dc      894334         mov dword [rbx + 0x34], eax
0x000136df      bd00080000     mov ebp, 0x800
0x000136e4      b804000000     mov eax, 4
0x000136e9      4c29f5         sub rbp, r14
0x000136ec      4883fd04       cmp rbp, 4
0x000136f0      480f47e8       cmova rbp, rax
0x000136f4      e847f4feff     call sym.imp.getuid
0x000136f9      85ed           test ebp, ebp
0x000136fb      89442410       mov dword [rsp + 0x10], eax
0x000136ff      4b8d4c3500     lea rcx, [r13 + r14]
0x00013704      89ee           mov esi, ebp
0x00013706      7414           je 0x1371c
0x00013708      31c0           xor eax, eax
0x0001370a      89c2           mov edx, eax
0x0001370c      83c001         add eax, 1
0x0001370f      410fb63c14     movzx edi, byte [r12 + rdx]
0x00013714      39f0           cmp eax, esi
0x00013716      40883c11       mov byte [rcx + rdx], dil
0x0001371a      72ee           jb 0x1370a
0x0001371c      4c01f5         add rbp, r14
0x0001371f      4881fdff0700.  cmp rbp, 0x7ff
0x00013726      0f8739ffffff   ja 0x13665
0x0001372c      e88ff6feff     call sym.imp.getgid
0x00013731      89442410       mov dword [rsp + 0x10], eax
0x00013735      b800080000     mov eax, 0x800
0x0001373a      ba04000000     mov edx, 4
0x0001373f      4829e8         sub rax, rbp
0x00013742      498d4c2d00     lea rcx, [r13 + rbp]
0x00013747      4883f804       cmp rax, 4
0x0001374b      480f47c2       cmova rax, rdx
0x0001374f      85c0           test eax, eax
0x00013751      89c6           mov esi, eax
0x00013753      0f840cffffff   je 0x13665
0x00013759      31c0           xor eax, eax
0x0001375b      89c2           mov edx, eax
0x0001375d      83c001         add eax, 1
0x00013760      410fb63c14     movzx edi, byte [r12 + rdx]
0x00013765      39f0           cmp eax, esi
0x00013767      40883c11       mov byte [rcx + rdx], dil
0x0001376b      72ee           jb 0x1375b
0x0001376d      e9f3feffff     jmp 0x13665
0x00013772      660f1f440000   nop word [rax + rax]
0x00013778      31db           xor ebx, ebx
0x0001377a      e938feffff     jmp 0x135b7
0x0001377f      e8acf3feff     call sym.imp.__stack_chk_fail
0x00013784      4885ed         test rbp, rbp
0x00013787      4d89f7         mov r15, r14
0x0001378a      b810000000     mov eax, 0x10
0x0001378f      490f48ec       cmovs rbp, r12
0x00013793      4c8d642410     lea r12, [rsp + 0x10]
0x00013798      4929ef         sub r15, rbp
0x0001379b      4983ff10       cmp r15, 0x10
0x0001379f      4c89e7         mov rdi, r12
0x000137a2      4c0f47f8       cmova r15, rax
0x000137a6      31f6           xor esi, esi
0x000137a8      e823f4feff     call sym.imp.gettimeofday
0x000137ad      498d442d00     lea rax, [r13 + rbp]
0x000137b2      4c01fd         add rbp, r15
0x000137b5      4489f9         mov ecx, r15d
0x000137b8      4881fdff0700.  cmp rbp, 0x7ff
0x000137bf      4c89e6         mov rsi, r12
0x000137c2      4889c7         mov rdi, rax
0x000137c5      f3a4           rep movsb byte [rdi], byte ptr [rsi]
0x000137c7      0f8798feffff   ja 0x13665
0x000137cd      4d89f7         mov r15, r14
0x000137d0      41b804000000   mov r8d, 4
0x000137d6      4929ef         sub r15, rbp
0x000137d9      4c89442408     mov qword [rsp + 8], r8
0x000137de      4983ff04       cmp r15, 4
0x000137e2      4d0f47f8       cmova r15, r8
0x000137e6      4a8d543d00     lea rdx, [rbp + r15]
0x000137eb      4c01ed         add rbp, r13
0x000137ee      48891424       mov qword [rsp], rdx
0x000137f2      e839f2feff     call sym.imp.getpid
0x000137f7      488b1424       mov rdx, qword [rsp]
0x000137fb      89442410       mov dword [rsp + 0x10], eax
0x000137ff      4489f9         mov ecx, r15d
0x00013802      4889ef         mov rdi, rbp
0x00013805      4c89e6         mov rsi, r12
0x00013808      4c8b442408     mov r8, qword [rsp + 8]
0x0001380d      f3a4           rep movsb byte [rdi], byte ptr [rsi]
0x0001380f      4881faff0700.  cmp rdx, 0x7ff
0x00013816      0f8f49feffff   jg 0x13665
0x0001381c      4929d6         sub r14, rdx
0x0001381f      4983fe04       cmp r14, 4
0x00013823      4d0f47f0       cmova r14, r8
0x00013827      e8f4f7feff     call sym.imp.getppid
0x0001382c      488b1424       mov rdx, qword [rsp]
0x00013830      89442410       mov dword [rsp + 0x10], eax
0x00013834      4489f1         mov ecx, r14d
0x00013837      4c89e6         mov rsi, r12
0x0001383a      498d441500     lea rax, [r13 + rdx]
0x0001383f      4901d6         add r14, rdx
0x00013842      4981feff0700.  cmp r14, 0x7ff
0x00013849      4889c7         mov rdi, rax
0x0001384c      f3a4           rep movsb byte [rdi], byte ptr [rsi]
0x0001384e      0f8711feffff   ja 0x13665
0x00013854      e986feffff     jmp 0x136df
0x00013859      0f1f80000000.  nop dword [rax]
;-- randread_set_handler:
0x00013860      48897708       mov qword [rdi + 8], rsi
0x00013864      c3             ret
0x00013865      90             nop
0x00013866      662e0f1f8400.  nop word cs:[rax + rax]
;-- randread_set_handler_arg:
0x00013870      48897710       mov qword [rdi + 0x10], rsi
0x00013874      c3             ret
0x00013875      90             nop
0x00013876      662e0f1f8400.  nop word cs:[rax + rax]
;-- randread:
0x00013880      4157           push r15
0x00013882      4156           push r14
0x00013884      4155           push r13
0x00013886      4154           push r12
0x00013888      4989fc         mov r12, rdi
0x0001388b      55             push rbp
0x0001388c      53             push rbx
0x0001388d      4889d5         mov rbp, rdx
0x00013890      4889f3         mov rbx, rsi
0x00013893      4883ec18       sub rsp, 0x18
0x00013897      488b0f         mov rcx, qword [rdi]
0x0001389a      4885c9         test rcx, rcx
0x0001389d      48894c2408     mov qword [rsp + 8], rcx
0x000138a2      7464           je 0x13908
0x000138a4      e8a7f0feff     call sym.imp.__errno_location
0x000138a9      488b4c2408     mov rcx, qword [rsp + 8]
0x000138ae      4989c5         mov r13, rax
0x000138b1      eb23           jmp 0x138d6
0x000138b3      0f1f440000     nop dword [rax + rax]
0x000138b8      498b0424       mov rax, qword [r12]
0x000138bc      498b7c2410     mov rdi, qword [r12 + 0x10]
0x000138c1      8b00           mov eax, dword [rax]
0x000138c3      83e020         and eax, 0x20                           ; "@"
0x000138c6      0f45c2         cmovne eax, edx
0x000138c9      41894500       mov dword [r13], eax
0x000138cd      41ff542408     call qword [r12 + 8]
0x000138d2      498b0c24       mov rcx, qword [r12]
0x000138d6      4889ea         mov rdx, rbp
0x000138d9      4889df         mov rdi, rbx
0x000138dc      be01000000     mov esi, 1
0x000138e1      e85af1feff     call sym.imp.fread_unlocked
0x000138e6      4801c3         add rbx, rax
0x000138e9      4829c5         sub rbp, rax
0x000138ec      418b5500       mov edx, dword [r13]
0x000138f0      75c6           jne 0x138b8
0x000138f2      4883c418       add rsp, 0x18
0x000138f6      5b             pop rbx
0x000138f7      5d             pop rbp
0x000138f8      415c           pop r12
0x000138fa      415d           pop r13
0x000138fc      415e           pop r14
0x000138fe      415f           pop r15
0x00013900      c3             ret
0x00013901      0f1f80000000.  nop dword [rax]
0x00013908      4c8b7718       mov r14, qword [rdi + 0x18]
0x0001390c      488d87380800.  lea rax, [rdi + 0x838]
0x00013913      4c8d6f20       lea r13, [rdi + 0x20]
0x00013917      4889442408     mov qword [rsp + 8], rax
0x0001391c      4c39f2         cmp rdx, r14
0x0001391f      0f86dd000000   jbe 0x13a02
0x00013925      be00080000     mov esi, 0x800
0x0001392a      4889df         mov rdi, rbx
0x0001392d      4c89f2         mov rdx, r14
0x00013930      4c29f6         sub rsi, r14
0x00013933      4803742408     add rsi, qword [rsp + 8]
0x00013938      4c01f3         add rbx, r14
0x0001393b      4c29f5         sub rbp, r14
0x0001393e      e83df4feff     call sym.imp.memcpy
0x00013943      f6c307         test bl, 7
0x00013946      7568           jne 0x139b0
0x00013948      4881fdff0700.  cmp rbp, 0x7ff
0x0001394f      0f869e000000   jbe 0x139f3
0x00013955      4c8dbd00f8ff.  lea r15, [rbp - 0x800]
0x0001395c      4d89fe         mov r14, r15
0x0001395f      4181e6ff0700.  and r14d, 0x7ff
0x00013966      eb14           jmp 0x1397c
0x00013968      0f1f84000000.  nop dword [rax + rax]
0x00013970      4d39f7         cmp r15, r14
0x00013973      743b           je 0x139b0
0x00013975      4981ef000800.  sub r15, 0x800
0x0001397c      4889de         mov rsi, rbx
0x0001397f      4c89ef         mov rdi, r13
0x00013982      4881c3000800.  add rbx, 0x800
0x00013989      e8e2000000     call sym.isaac_refill
0x0001398e      4d85ff         test r15, r15
0x00013991      4c89fd         mov rbp, r15
0x00013994      75da           jne 0x13970
0x00013996      49c744241800.  mov qword [r12 + 0x18], 0
0x0001399f      4883c418       add rsp, 0x18
0x000139a3      5b             pop rbx
0x000139a4      5d             pop rbp
0x000139a5      415c           pop r12
0x000139a7      415d           pop r13
0x000139a9      415e           pop r14
0x000139ab      415f           pop r15
0x000139ad      c3             ret
0x000139ae      6690           nop
0x000139b0      488b742408     mov rsi, qword [rsp + 8]
0x000139b5      4c89ef         mov rdi, r13
0x000139b8      41be00080000   mov r14d, 0x800
0x000139be      e8ad000000     call sym.isaac_refill
0x000139c3      4881fd000800.  cmp rbp, 0x800
0x000139ca      0f8755ffffff   ja 0x13925
0x000139d0      41be00080000   mov r14d, 0x800
0x000139d6      488b742408     mov rsi, qword [rsp + 8]
0x000139db      4889ea         mov rdx, rbp
0x000139de      4889df         mov rdi, rbx
0x000139e1      4929ee         sub r14, rbp
0x000139e4      e897f3feff     call sym.imp.memcpy
0x000139e9      4d89742418     mov qword [r12 + 0x18], r14
0x000139ee      e9fffeffff     jmp 0x138f2
0x000139f3      488b742408     mov rsi, qword [rsp + 8]
0x000139f8      4c89ef         mov rdi, r13
0x000139fb      e870000000     call sym.isaac_refill
0x00013a00      ebce           jmp 0x139d0
0x00013a02      4989c7         mov r15, rax
0x00013a05      4d29f7         sub r15, r14
0x00013a08      498d87000800.  lea rax, [r15 + 0x800]
0x00013a0f      4889442408     mov qword [rsp + 8], rax
0x00013a14      ebc0           jmp 0x139d6
0x00013a16      662e0f1f8400.  nop word cs:[rax + rax]
;-- randread_free:
0x00013a20      55             push rbp
0x00013a21      53             push rbx
0x00013a22      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00013a29      4889fb         mov rbx, rdi
0x00013a2c      be38100000     mov esi, 0x1038
0x00013a31      4883ec08       sub rsp, 8
0x00013a35      488b2f         mov rbp, qword [rdi]
0x00013a38      e813f5feff     call sym.imp.__explicit_bzero_chk
0x00013a3d      4889df         mov rdi, rbx
0x00013a40      e88bf6feff     call sym..plt.got
0x00013a45      4885ed         test rbp, rbp
0x00013a48      7416           je 0x13a60
0x00013a4a      4883c408       add rsp, 8
0x00013a4e      4889ef         mov rdi, rbp
0x00013a51      5b             pop rbx
0x00013a52      5d             pop rbp
0x00013a53      e9f8040000     jmp sym.rpl_fclose
0x00013a58      0f1f84000000.  nop dword [rax + rax]
0x00013a60      4883c408       add rsp, 8
0x00013a64      31c0           xor eax, eax
0x00013a66      5b             pop rbx
0x00013a67      5d             pop rbp
0x00013a68      c3             ret
0x00013a69      0f1f80000000.  nop dword [rax]
;-- isaac_refill:
0x00013a70      488b87100800.  mov rax, qword [rdi + 0x810]
0x00013a77      488b97000800.  mov rdx, qword [rdi + 0x800]
0x00013a7e      4c8d8f000400.  lea r9, [rdi + 0x400]
0x00013a85      488d4801       lea rcx, [rax + 1]
0x00013a89      4889f8         mov rax, rdi
0x00013a8c      48898f100800.  mov qword [rdi + 0x810], rcx
0x00013a93      48038f080800.  add rcx, qword [rdi + 0x808]
0x00013a9a      660f1f440000   nop word [rax + rax]
0x00013aa0      4989d0         mov r8, rdx
0x00013aa3      49c1e015       shl r8, 0x15
0x00013aa7      4c31c2         xor rdx, r8
0x00013aaa      4c8b00         mov r8, qword [rax]
0x00013aad      48f7d2         not rdx
0x00013ab0      480390000400.  add rdx, qword [rax + 0x400]
0x00013ab7      4d89c2         mov r10, r8
0x00013aba      4181e2f80700.  and r10d, 0x7f8
0x00013ac1      4e8b1c17       mov r11, qword [rdi + r10]
0x00013ac5      4989d2         mov r10, rdx
0x00013ac8      49c1ea05       shr r10, 5
0x00013acc      4901d3         add r11, rdx
0x00013acf      4c31d2         xor rdx, r10
0x00013ad2      4c01d9         add rcx, r11
0x00013ad5      488908         mov qword [rax], rcx
0x00013ad8      48c1e908       shr rcx, 8
0x00013adc      81e1f8070000   and ecx, 0x7f8
0x00013ae2      4c8b1c0f       mov r11, qword [rdi + rcx]
0x00013ae6      4d01c3         add r11, r8
0x00013ae9      4c891e         mov qword [rsi], r11
0x00013aec      480390080400.  add rdx, qword [rax + 0x408]
0x00013af3      488b4808       mov rcx, qword [rax + 8]
0x00013af7      4989d2         mov r10, rdx
0x00013afa      4889ca         mov rdx, rcx
0x00013afd      81e2f8070000   and edx, 0x7f8
0x00013b03      4c8b0417       mov r8, qword [rdi + rdx]
0x00013b07      4c89d2         mov rdx, r10
0x00013b0a      48c1e20c       shl rdx, 0xc
0x00013b0e      4c31d2         xor rdx, r10
0x00013b11      4d01d0         add r8, r10
0x00013b14      4d01d8         add r8, r11
0x00013b17      4c894008       mov qword [rax + 8], r8
0x00013b1b      49c1e808       shr r8, 8
0x00013b1f      4181e0f80700.  and r8d, 0x7f8
0x00013b26      4a030c07       add rcx, qword [rdi + r8]
0x00013b2a      48894e08       mov qword [rsi + 8], rcx
0x00013b2e      4c8b4010       mov r8, qword [rax + 0x10]
0x00013b32      4989cb         mov r11, rcx
0x00013b35      480390100400.  add rdx, qword [rax + 0x410]
0x00013b3c      4c89c1         mov rcx, r8
0x00013b3f      81e1f8070000   and ecx, 0x7f8
0x00013b45      4c8b140f       mov r10, qword [rdi + rcx]
0x00013b49      4901d2         add r10, rdx
0x00013b4c      4c89d1         mov rcx, r10
0x00013b4f      4c01d9         add rcx, r11
0x00013b52      48894810       mov qword [rax + 0x10], rcx
0x00013b56      48c1e908       shr rcx, 8
0x00013b5a      81e1f8070000   and ecx, 0x7f8
0x00013b60      4c8b140f       mov r10, qword [rdi + rcx]
0x00013b64      4889d1         mov rcx, rdx
0x00013b67      48c1e921       shr rcx, 0x21
0x00013b6b      4831ca         xor rdx, rcx
0x00013b6e      4d01c2         add r10, r8
0x00013b71      4c895610       mov qword [rsi + 0x10], r10
0x00013b75      488b4818       mov rcx, qword [rax + 0x18]
0x00013b79      480390180400.  add rdx, qword [rax + 0x418]
0x00013b80      4989c8         mov r8, rcx
0x00013b83      4181e0f80700.  and r8d, 0x7f8
0x00013b8a      4e8b1c07       mov r11, qword [rdi + r8]
0x00013b8e      4901d3         add r11, rdx
0x00013b91      4d89d8         mov r8, r11
0x00013b94      4d01d0         add r8, r10
0x00013b97      4883c020       add rax, 0x20                           ; "@"
0x00013b9b      4883c620       add rsi, 0x20                           ; "@"
0x00013b9f      4c8940f8       mov qword [rax - 8], r8
0x00013ba3      49c1e808       shr r8, 8
0x00013ba7      4181e0f80700.  and r8d, 0x7f8
0x00013bae      4a030c07       add rcx, qword [rdi + r8]
0x00013bb2      48894ef8       mov qword [rsi - 8], rcx
0x00013bb6      4c39c8         cmp rax, r9
0x00013bb9      0f82e1feffff   jb 0x13aa0
0x00013bbf      4c8d8f000800.  lea r9, [rdi + 0x800]
0x00013bc6      662e0f1f8400.  nop word cs:[rax + rax]
0x00013bd0      4989d0         mov r8, rdx
0x00013bd3      49c1e015       shl r8, 0x15
0x00013bd7      4c31c2         xor rdx, r8
0x00013bda      4c8b00         mov r8, qword [rax]
0x00013bdd      48f7d2         not rdx
0x00013be0      48039000fcff.  add rdx, qword [rax - 0x400]
0x00013be7      4d89c2         mov r10, r8
0x00013bea      4181e2f80700.  and r10d, 0x7f8
0x00013bf1      4e8b1c17       mov r11, qword [rdi + r10]
0x00013bf5      4989d2         mov r10, rdx
0x00013bf8      49c1ea05       shr r10, 5
0x00013bfc      4901d3         add r11, rdx
0x00013bff      4c31d2         xor rdx, r10
0x00013c02      4c01d9         add rcx, r11
0x00013c05      488908         mov qword [rax], rcx
0x00013c08      48c1e908       shr rcx, 8
0x00013c0c      81e1f8070000   and ecx, 0x7f8
0x00013c12      4c8b1c0f       mov r11, qword [rdi + rcx]
0x00013c16      4d01c3         add r11, r8
0x00013c19      4c891e         mov qword [rsi], r11
0x00013c1c      48039008fcff.  add rdx, qword [rax - 0x3f8]
0x00013c23      488b4808       mov rcx, qword [rax + 8]
0x00013c27      4989d2         mov r10, rdx
0x00013c2a      4889ca         mov rdx, rcx
0x00013c2d      81e2f8070000   and edx, 0x7f8
0x00013c33      4c8b0417       mov r8, qword [rdi + rdx]
0x00013c37      4c89d2         mov rdx, r10
0x00013c3a      48c1e20c       shl rdx, 0xc
0x00013c3e      4c31d2         xor rdx, r10
0x00013c41      4d01d0         add r8, r10
0x00013c44      4d01d8         add r8, r11
0x00013c47      4c894008       mov qword [rax + 8], r8
0x00013c4b      49c1e808       shr r8, 8
0x00013c4f      4181e0f80700.  and r8d, 0x7f8
0x00013c56      4a030c07       add rcx, qword [rdi + r8]
0x00013c5a      48894e08       mov qword [rsi + 8], rcx
0x00013c5e      4c8b4010       mov r8, qword [rax + 0x10]
0x00013c62      4989cb         mov r11, rcx
0x00013c65      48039010fcff.  add rdx, qword [rax - 0x3f0]
0x00013c6c      4c89c1         mov rcx, r8
0x00013c6f      81e1f8070000   and ecx, 0x7f8
0x00013c75      4c8b140f       mov r10, qword [rdi + rcx]
0x00013c79      4901d2         add r10, rdx
0x00013c7c      4c89d1         mov rcx, r10
0x00013c7f      4c01d9         add rcx, r11
0x00013c82      48894810       mov qword [rax + 0x10], rcx
0x00013c86      48c1e908       shr rcx, 8
0x00013c8a      81e1f8070000   and ecx, 0x7f8
0x00013c90      4c8b140f       mov r10, qword [rdi + rcx]
0x00013c94      4889d1         mov rcx, rdx
0x00013c97      48c1e921       shr rcx, 0x21
0x00013c9b      4831ca         xor rdx, rcx
0x00013c9e      4d01c2         add r10, r8
0x00013ca1      4c895610       mov qword [rsi + 0x10], r10
0x00013ca5      488b4818       mov rcx, qword [rax + 0x18]
0x00013ca9      48039018fcff.  add rdx, qword [rax - 0x3e8]
0x00013cb0      4989c8         mov r8, rcx
0x00013cb3      4181e0f80700.  and r8d, 0x7f8
0x00013cba      4e8b1c07       mov r11, qword [rdi + r8]
0x00013cbe      4901d3         add r11, rdx
0x00013cc1      4d89d8         mov r8, r11
0x00013cc4      4d01d0         add r8, r10
0x00013cc7      4883c020       add rax, 0x20                           ; "@"
0x00013ccb      4883c620       add rsi, 0x20                           ; "@"
0x00013ccf      4c8940f8       mov qword [rax - 8], r8
0x00013cd3      49c1e808       shr r8, 8
0x00013cd7      4181e0f80700.  and r8d, 0x7f8
0x00013cde      4a030c07       add rcx, qword [rdi + r8]
0x00013ce2      48894ef8       mov qword [rsi - 8], rcx
0x00013ce6      4c39c8         cmp rax, r9
0x00013ce9      0f82e1feffff   jb 0x13bd0
0x00013cef      488997000800.  mov qword [rdi + 0x800], rdx
0x00013cf6      48898f080800.  mov qword [rdi + 0x808], rcx
0x00013cfd      c3             ret
0x00013cfe      6690           nop
;-- isaac_seed:
0x00013d00      4155           push r13
0x00013d02      4154           push r12
0x00013d04      4c8da7000800.  lea r12, [rdi + 0x800]
0x00013d0b      55             push rbp
0x00013d0c      4889fa         mov rdx, rdi
0x00013d0f      53             push rbx
0x00013d10      4889f8         mov rax, rdi
0x00013d13      48b9abc0446c.  movabs rcx, 0x98f5704f6c44c0ab
0x00013d1d      49baed89fccb.  movabs r10, 0xae985bf2cbfc89ed
0x00013d27      48bd1593a0a5.  movabs rbp, 0x48fe4a0fa5a09315
0x00013d31      48becee05583.  movabs rsi, 0x82f053db8355e0ce
0x00013d3b      49b82455594a.  movabs r8, 0xb29b2e824a595524
0x00013d45      48bba012473d.  movabs rbx, 0x8c0ea5053d4712a0
0x00013d4f      49bb62c83ac7.  movabs r11, 0xb9f8b322c73ac862
0x00013d59      49b97c4b88a2.  movabs r9, 0x647c4677a2884b7c
0x00013d63      0f1f440000     nop dword [rax + rax]
0x00013d68      48037020       add rsi, qword [rax + 0x20]
0x00013d6c      48034838       add rcx, qword [rax + 0x38]
0x00013d70      4c8b28         mov r13, qword [rax]
0x00013d73      48036828       add rbp, qword [rax + 0x28]
0x00013d77      4c035030       add r10, qword [rax + 0x30]
0x00013d7b      4929f5         sub r13, rsi
0x00013d7e      4d01e9         add r9, r13
0x00013d81      4989cd         mov r13, rcx
0x00013d84      49c1ed09       shr r13, 9
0x00013d88      4c01c9         add rcx, r9
0x00013d8b      4c31ed         xor rbp, r13
0x00013d8e      4c8b6808       mov r13, qword [rax + 8]
0x00013d92      4929ed         sub r13, rbp
0x00013d95      4d01eb         add r11, r13
0x00013d98      4d89cd         mov r13, r9
0x00013d9b      49c1e509       shl r13, 9
0x00013d9f      4d01d9         add r9, r11
0x00013da2      4d31ea         xor r10, r13
0x00013da5      4c8b6810       mov r13, qword [rax + 0x10]
0x00013da9      4d29d5         sub r13, r10
0x00013dac      4c01eb         add rbx, r13
0x00013daf      4d89dd         mov r13, r11
0x00013db2      49c1ed17       shr r13, 0x17
0x00013db6      4901db         add r11, rbx
0x00013db9      4c31e9         xor rcx, r13
0x00013dbc      4c8b6818       mov r13, qword [rax + 0x18]
0x00013dc0      4929cd         sub r13, rcx
0x00013dc3      4d01e8         add r8, r13
0x00013dc6      4989dd         mov r13, rbx
0x00013dc9      49c1e50f       shl r13, 0xf
0x00013dcd      4c01c3         add rbx, r8
0x00013dd0      4d31e9         xor r9, r13
0x00013dd3      4d89c5         mov r13, r8
0x00013dd6      4c29ce         sub rsi, r9
0x00013dd9      49c1ed0e       shr r13, 0xe
0x00013ddd      4c8908         mov qword [rax], r9
0x00013de0      4d31eb         xor r11, r13
0x00013de3      4989f5         mov r13, rsi
0x00013de6      4901f0         add r8, rsi
0x00013de9      4c29dd         sub rbp, r11
0x00013dec      49c1e514       shl r13, 0x14
0x00013df0      4c895808       mov qword [rax + 8], r11
0x00013df4      4c31eb         xor rbx, r13
0x00013df7      4c8d2c2e       lea r13, [rsi + rbp]
0x00013dfb      4889ee         mov rsi, rbp
0x00013dfe      4929da         sub r10, rbx
0x00013e01      48c1ee11       shr rsi, 0x11
0x00013e05      48895810       mov qword [rax + 0x10], rbx
0x00013e09      4931f0         xor r8, rsi
0x00013e0c      4c89d6         mov rsi, r10
0x00013e0f      4c01d5         add rbp, r10
0x00013e12      4c29c1         sub rcx, r8
0x00013e15      48c1e60e       shl rsi, 0xe
0x00013e19      4c894018       mov qword [rax + 0x18], r8
0x00013e1d      4c31ee         xor rsi, r13
0x00013e20      4901ca         add r10, rcx
0x00013e23      48896828       mov qword [rax + 0x28], rbp
0x00013e27      48897020       mov qword [rax + 0x20], rsi
0x00013e2b      4c895030       mov qword [rax + 0x30], r10
0x00013e2f      4883c040       add rax, 0x40                           ; segment.PHDR
0x00013e33      488948f8       mov qword [rax - 8], rcx
0x00013e37      4939c4         cmp r12, rax
0x00013e3a      0f8528ffffff   jne 0x13d68
0x00013e40      48037220       add rsi, qword [rdx + 0x20]
0x00013e44      48034a38       add rcx, qword [rdx + 0x38]
0x00013e48      4c8b22         mov r12, qword [rdx]
0x00013e4b      48036a28       add rbp, qword [rdx + 0x28]
0x00013e4f      4c035230       add r10, qword [rdx + 0x30]
0x00013e53      4929f4         sub r12, rsi
0x00013e56      4d01e1         add r9, r12
0x00013e59      4989cc         mov r12, rcx
0x00013e5c      49c1ec09       shr r12, 9
0x00013e60      4c01c9         add rcx, r9
0x00013e63      4c31e5         xor rbp, r12
0x00013e66      4c8b6208       mov r12, qword [rdx + 8]
0x00013e6a      4929ec         sub r12, rbp
0x00013e6d      4d01e3         add r11, r12
0x00013e70      4d89cc         mov r12, r9
0x00013e73      49c1e409       shl r12, 9
0x00013e77      4d01d9         add r9, r11
0x00013e7a      4d31e2         xor r10, r12
0x00013e7d      4c8b6210       mov r12, qword [rdx + 0x10]
0x00013e81      4d29d4         sub r12, r10
0x00013e84      4c01e3         add rbx, r12
0x00013e87      4d89dc         mov r12, r11
0x00013e8a      49c1ec17       shr r12, 0x17
0x00013e8e      4901db         add r11, rbx
0x00013e91      4c31e1         xor rcx, r12
0x00013e94      4c8b6218       mov r12, qword [rdx + 0x18]
0x00013e98      4929cc         sub r12, rcx
0x00013e9b      4d01e0         add r8, r12
0x00013e9e      4989dc         mov r12, rbx
0x00013ea1      49c1e40f       shl r12, 0xf
0x00013ea5      4c01c3         add rbx, r8
0x00013ea8      4d31e1         xor r9, r12
0x00013eab      4d89c4         mov r12, r8
0x00013eae      4c29ce         sub rsi, r9
0x00013eb1      49c1ec0e       shr r12, 0xe
0x00013eb5      4c890a         mov qword [rdx], r9
0x00013eb8      4d31e3         xor r11, r12
0x00013ebb      4989f4         mov r12, rsi
0x00013ebe      4901f0         add r8, rsi
0x00013ec1      4c29dd         sub rbp, r11
0x00013ec4      49c1e414       shl r12, 0x14
0x00013ec8      4c895a08       mov qword [rdx + 8], r11
0x00013ecc      4c31e3         xor rbx, r12
0x00013ecf      4c8d242e       lea r12, [rsi + rbp]
0x00013ed3      4889ee         mov rsi, rbp
0x00013ed6      4929da         sub r10, rbx
0x00013ed9      48c1ee11       shr rsi, 0x11
0x00013edd      48895a10       mov qword [rdx + 0x10], rbx
0x00013ee1      4931f0         xor r8, rsi
0x00013ee4      4c89d6         mov rsi, r10
0x00013ee7      4c01d5         add rbp, r10
0x00013eea      4c29c1         sub rcx, r8
0x00013eed      48c1e60e       shl rsi, 0xe
0x00013ef1      4c894218       mov qword [rdx + 0x18], r8
0x00013ef5      4c31e6         xor rsi, r12
0x00013ef8      4901ca         add r10, rcx
0x00013efb      48896a28       mov qword [rdx + 0x28], rbp
0x00013eff      48897220       mov qword [rdx + 0x20], rsi
0x00013f03      4c895230       mov qword [rdx + 0x30], r10
0x00013f07      4883c240       add rdx, 0x40                           ; segment.PHDR
0x00013f0b      48894af8       mov qword [rdx - 8], rcx
0x00013f0f      4839d0         cmp rax, rdx
0x00013f12      0f8528ffffff   jne 0x13e40
0x00013f18      5b             pop rbx
0x00013f19      48c787100800.  mov qword [rdi + 0x810], 0
0x00013f24      48c787080800.  mov qword [rdi + 0x808], 0
0x00013f2f      5d             pop rbp
0x00013f30      48c787000800.  mov qword [rdi + 0x800], 0
0x00013f3b      415c           pop r12
0x00013f3d      415d           pop r13
0x00013f3f      c3             ret
;-- dup_safer:
0x00013f40      ba03000000     mov edx, 3                              ; ../coreutils-8.31/lib/dup-safer.c:32
0x00013f45      31f6           xor esi, esi
0x00013f47      31c0           xor eax, eax
0x00013f49      e982000000     jmp sym.rpl_fcntl
0x00013f4e      6690           nop                                     ; ../coreutils-8.31/lib/dup-safer.c:33
;-- rpl_fclose:
0x00013f50      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00013f52      55             push rbp
0x00013f53      53             push rbx
0x00013f54      4889fb         mov rbx, rdi
0x00013f57      e854eefeff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x00013f5c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x00013f5e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00013f61      7854           js 0x13fb7                              ; ../coreutils-8.31/lib/fclose.c:66
0x00013f63      e8e8eefeff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00013f68      85c0           test eax, eax
0x00013f6a      752c           jne 0x13f98
0x00013f6c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x00013f6f      e8ece7ffff     call sym.rpl_fflush
0x00013f74      85c0           test eax, eax
0x00013f76      743c           je 0x13fb4
0x00013f78      e8d3e9feff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x00013f7d      448b20         mov r12d, dword [rax]
0x00013f80      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00013f83      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00013f86      e8f5eafeff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x00013f8b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x00013f8e      7530           jne 0x13fc0
0x00013f90      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00013f91      5d             pop rbp
0x00013f92      415c           pop r12
0x00013f94      c3             ret
0x00013f95      0f1f00         nop dword [rax]
0x00013f98      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x00013f9b      e810eefeff     call sym.imp.fileno
0x00013fa0      31f6           xor esi, esi
0x00013fa2      ba01000000     mov edx, 1
0x00013fa7      89c7           mov edi, eax
0x00013fa9      e812ecfeff     call sym.imp.lseek
0x00013fae      4883f8ff       cmp rax, 0xffffffffffffffff
0x00013fb2      75b8           jne 0x13f6c
0x00013fb4      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00013fb7      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00013fb8      5d             pop rbp
0x00013fb9      415c           pop r12
0x00013fbb      e9c0eafeff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00013fc0      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00013fc4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00013fc9      ebc5           jmp 0x13f90
0x00013fcb      0f1f440000     nop dword [rax + rax]
;-- rpl_fcntl:
0x00013fd0      4154           push r12                                ; ../coreutils-8.31/lib/fcntl.c:206
0x00013fd2      55             push rbp
0x00013fd3      89fd           mov ebp, edi
0x00013fd5      53             push rbx
0x00013fd6      4883ec50       sub rsp, 0x50
0x00013fda      64488b042528.  mov rax, qword fs:[0x28]
0x00013fe3      4889442418     mov qword [rsp + 0x18], rax
0x00013fe8      31c0           xor eax, eax
0x00013fea      488d442470     lea rax, [rsp + 0x70]                   ; ../coreutils-8.31/lib/fcntl.c:209
0x00013fef      85f6           test esi, esi                           ; ../coreutils-8.31/lib/fcntl.c:210
0x00013ff1      4889542430     mov qword [rsp + 0x30], rdx             ; ../coreutils-8.31/lib/fcntl.c:206
0x00013ff6      48894c2438     mov qword [rsp + 0x38], rcx
0x00013ffb      4c89442440     mov qword [rsp + 0x40], r8
0x00014000      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/fcntl.c:209
0x00014005      488d442420     lea rax, [rsp + 0x20]
0x0001400a      4c894c2448     mov qword [rsp + 0x48], r9              ; ../coreutils-8.31/lib/fcntl.c:206
0x0001400f      c70424100000.  mov dword [rsp], 0x10                   ; ../coreutils-8.31/lib/fcntl.c:209 ; [0x10:4]=0x3e0003
0x00014016      4889442410     mov qword [rsp + 0x10], rax
0x0001401b      0f8401020000   je 0x14222                              ; ../coreutils-8.31/lib/fcntl.c:210
0x00014021      81fe06040000   cmp esi, 0x406
0x00014027      7547           jne 0x14070
0x00014029      488b442410     mov rax, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/fcntl.c:221
0x0001402e      833dffb62000.  cmp dword [obj.have_dupfd_cloexec.3326], 0 ; ../coreutils-8.31/lib/fcntl.c:507 ; [0x21f734:4]=0
0x00014035      c70424180000.  mov dword [rsp], 0x18                   ; ../coreutils-8.31/lib/fcntl.c:221 ; [0x18:4]=0x3e30 rip
0x0001403c      448b6010       mov r12d, dword [rax + 0x10]
0x00014040      4489e2         mov edx, r12d                           ; ../coreutils-8.31/lib/fcntl.c:509
0x00014043      0f882a010000   js 0x14173                              ; ../coreutils-8.31/lib/fcntl.c:507
0x00014049      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x0001404b      be06040000     mov esi, 0x406
0x00014050      e8abe9feff     call sym.imp.fcntl
0x00014055      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fcntl.c:510
0x00014057      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x00014059      0f8889010000   js 0x141e8                              ; ../coreutils-8.31/lib/fcntl.c:510
0x0001405f      c705cbb62000.  mov dword [obj.have_dupfd_cloexec.3326], 1 ; ../coreutils-8.31/lib/fcntl.c:512 ; [0x21f734:4]=0
0x00014069      eb45           jmp 0x140b0
0x0001406b      0f1f440000     nop dword [rax + rax]
0x00014070      83fe0b         cmp esi, 0xb                            ; ../coreutils-8.31/lib/fcntl.c:258
0x00014073      742b           je 0x140a0
0x00014075      7f59           jg 0x140d0
0x00014077      83fe04         cmp esi, 4
0x0001407a      0f84d0000000   je 0x14150
0x00014080      0f8fba000000   jg 0x14140
0x00014086      83fe02         cmp esi, 2
0x00014089      0f84c1000000   je 0x14150
0x0001408f      7f0f           jg 0x140a0
0x00014091      83fe01         cmp esi, 1
0x00014094      7562           jne 0x140f8
0x00014096      662e0f1f8400.  nop word cs:[rax + rax]
0x000140a0      89ef           mov edi, ebp
0x000140a2      31c0           xor eax, eax
0x000140a4      e857e9feff     call sym.imp.fcntl
0x000140a9      89c3           mov ebx, eax
0x000140ab      0f1f440000     nop dword [rax + rax]
0x000140b0      488b4c2418     mov rcx, qword [rsp + 0x18]
0x000140b5      6448330c2528.  xor rcx, qword fs:[0x28]
0x000140be      89d8           mov eax, ebx
0x000140c0      0f8557010000   jne 0x1421d                             ; ../coreutils-8.31/lib/fcntl.c:355
0x000140c6      4883c450       add rsp, 0x50
0x000140ca      5b             pop rbx
0x000140cb      5d             pop rbp
0x000140cc      415c           pop r12
0x000140ce      c3             ret
0x000140cf      90             nop
0x000140d0      81fe07040000   cmp esi, 0x407
0x000140d6      7f48           jg 0x14120
0x000140d8      81fe06040000   cmp esi, 0x406
0x000140de      7d70           jge 0x14150
0x000140e0      81fe01040000   cmp esi, 0x401
0x000140e6      74b8           je 0x140a0
0x000140e8      81fe02040000   cmp esi, 0x402                          ; ../coreutils-8.31/lib/fcntl.c:183
0x000140ee      7460           je 0x14150
0x000140f0      81fe00040000   cmp esi, 0x400
0x000140f6      7458           je 0x14150
0x000140f8      8b0424         mov eax, dword [rsp]
0x000140fb      83f82f         cmp eax, 0x2f
0x000140fe      0f8736010000   ja 0x1423a
0x00014104      4803442410     add rax, qword [rsp + 0x10]
0x00014109      488b10         mov rdx, qword [rax]
0x0001410c      89ef           mov edi, ebp
0x0001410e      31c0           xor eax, eax
0x00014110      e8ebe8feff     call sym.imp.fcntl
0x00014115      89c3           mov ebx, eax
0x00014117      eb97           jmp 0x140b0
0x00014119      0f1f80000000.  nop dword [rax]
0x00014120      81fe09040000   cmp esi, 0x409
0x00014126      7428           je 0x14150
0x00014128      0f8c72ffffff   jl 0x140a0
0x0001412e      81fe0a040000   cmp esi, 0x40a
0x00014134      75c2           jne 0x140f8
0x00014136      e965ffffff     jmp 0x140a0                             ; ../coreutils-8.31/lib/fcntl.c:350
0x0001413b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fcntl.c:406
0x00014140      83fe09         cmp esi, 9
0x00014143      0f8457ffffff   je 0x140a0
0x00014149      7f05           jg 0x14150
0x0001414b      83fe08         cmp esi, 8
0x0001414e      75a8           jne 0x140f8
0x00014150      8b0424         mov eax, dword [rsp]
0x00014153      83f82f         cmp eax, 0x2f
0x00014156      0f87e8000000   ja 0x14244
0x0001415c      4803442410     add rax, qword [rsp + 0x10]
0x00014161      8b10           mov edx, dword [rax]
0x00014163      89ef           mov edi, ebp
0x00014165      31c0           xor eax, eax
0x00014167      e894e8feff     call sym.imp.fcntl
0x0001416c      89c3           mov ebx, eax
0x0001416e      e93dffffff     jmp 0x140b0
0x00014173      31f6           xor esi, esi
0x00014175      31c0           xor eax, eax
0x00014177      e884e8feff     call sym.imp.fcntl
0x0001417c      85c0           test eax, eax
0x0001417e      89c3           mov ebx, eax
0x00014180      0f882affffff   js 0x140b0
0x00014186      833da7b52000.  cmp dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x21f734:4]=0
0x0001418d      0f851dffffff   jne 0x140b0
0x00014193      31c0           xor eax, eax
0x00014195      be01000000     mov esi, 1
0x0001419a      89df           mov edi, ebx
0x0001419c      e85fe8feff     call sym.imp.fcntl
0x000141a1      85c0           test eax, eax
0x000141a3      781c           js 0x141c1
0x000141a5      83c801         or eax, 1
0x000141a8      be02000000     mov esi, 2
0x000141ad      89df           mov edi, ebx
0x000141af      89c2           mov edx, eax
0x000141b1      31c0           xor eax, eax
0x000141b3      e848e8feff     call sym.imp.fcntl
0x000141b8      83f8ff         cmp eax, 0xffffffff
0x000141bb      0f85effeffff   jne 0x140b0
0x000141c1      e88ae7feff     call sym.imp.__errno_location
0x000141c6      448b20         mov r12d, dword [rax]
0x000141c9      4889c5         mov rbp, rax
0x000141cc      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fcntl.c:446
0x000141ce      e85deafeff     call sym.imp.close                      ; ../coreutils-8.31/lib/fcntl.c:406
0x000141d3      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x000141d8      44896500       mov dword [rbp], r12d
0x000141dc      e9cffeffff     jmp 0x140b0
0x000141e1      0f1f80000000.  nop dword [rax]
0x000141e8      e863e7feff     call sym.imp.__errno_location
0x000141ed      833816         cmp dword [rax], 0x16
0x000141f0      0f8569feffff   jne 0x1405f
0x000141f6      31f6           xor esi, esi
0x000141f8      31c0           xor eax, eax
0x000141fa      4489e2         mov edx, r12d
0x000141fd      89ef           mov edi, ebp                            ; ../coreutils-8.31/lib/fcntl.c:141
0x000141ff      e8fce7feff     call sym.imp.fcntl
0x00014204      85c0           test eax, eax
0x00014206      89c3           mov ebx, eax
0x00014208      0f88a2feffff   js 0x140b0
0x0001420e      c7051cb52000.  mov dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x21f734:4]=0
0x00014218      e976ffffff     jmp 0x14193
0x0001421d      e80ee9feff     call sym.imp.__stack_chk_fail
0x00014222      488b442410     mov rax, qword [rsp + 0x10]
0x00014227      31f6           xor esi, esi
0x00014229      8b5010         mov edx, dword [rax + 0x10]
0x0001422c      31c0           xor eax, eax
0x0001422e      e8cde7feff     call sym.imp.fcntl
0x00014233      89c3           mov ebx, eax
0x00014235      e976feffff     jmp 0x140b0
0x0001423a      488b442408     mov rax, qword [rsp + 8]
0x0001423f      e9c5feffff     jmp 0x14109
0x00014244      488b442408     mov rax, qword [rsp + 8]
0x00014249      e913ffffff     jmp 0x14161
0x0001424e      6690           nop
;-- fseterr:
0x00014250      830f20         or dword [rdi], 0x20                    ; ../coreutils-8.31/lib/fseterr.c:31 ; [0x20:4]=64 ; "@"
0x00014253      c3             ret                                     ; ../coreutils-8.31/lib/fseterr.c:84
0x00014254      662e0f1f8400.  nop word cs:[rax + rax]
0x0001425e      6690           nop
;-- vasnprintf:
0x00014260      55             push rbp                                ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x00014261      4889e5         mov rbp, rsp
0x00014264      4157           push r15
0x00014266      4156           push r14
0x00014268      4155           push r13
0x0001426a      4154           push r12
0x0001426c      4c8db550fcff.  lea r14, [rbp - 0x3b0]                  ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x00014273      53             push rbx                                ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x00014274      4889d3         mov rbx, rdx
0x00014277      4989cc         mov r12, rcx
0x0001427a      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x0001427d      4881ec080400.  sub rsp, 0x408                          ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x00014284      4889b5e8fbff.  mov qword [rbp - 0x418], rsi
0x0001428b      488db540fdff.  lea rsi, [rbp - 0x2c0]                  ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x00014292      4889bd18fcff.  mov qword [rbp - 0x3e8], rdi            ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x00014299      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x0001429c      4c89b5f0fbff.  mov qword [rbp - 0x410], r14
0x000142a3      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x000142ac      488945c8       mov qword [rbp - 0x38], rax
0x000142b0      31c0           xor eax, eax
0x000142b2      4889b5f8fbff.  mov qword [rbp - 0x408], rsi            ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x000142b9      e862130000     call sym.printf_parse
0x000142be      85c0           test eax, eax
0x000142c0      0f88620e0000   js 0x15128
0x000142c6      4c89f6         mov rsi, r14                            ; ../coreutils-8.31/lib/vasnprintf.c:1802
0x000142c9      4c89e7         mov rdi, r12
0x000142cc      e84f110000     call sym.printf_fetchargs
0x000142d1      85c0           test eax, eax
0x000142d3      0f88b70e0000   js 0x15190
0x000142d9      488b8550fdff.  mov rax, qword [rbp - 0x2b0]            ; ../coreutils-8.31/lib/xsize.h:65
0x000142e0      48c7c2ffffff.  mov rdx, 0xffffffffffffffff             ; ../coreutils-8.31/lib/xsize.h:66
0x000142e7      4883c007       add rax, 7                              ; ../coreutils-8.31/lib/xsize.h:65
0x000142eb      4883f806       cmp rax, 6                              ; ../coreutils-8.31/lib/xsize.h:66
0x000142ef      480f46c2       cmovbe rax, rdx
0x000142f3      48038558fdff.  add rax, qword [rbp - 0x2a8]
0x000142fa      0f82280a0000   jb 0x14d28
0x00014300      4889c7         mov rdi, rax
0x00014303      4531c0         xor r8d, r8d
0x00014306      4883c706       add rdi, 6
0x0001430a      410f92c0       setb r8b
0x0001430e      0f82140a0000   jb 0x14d28
0x00014314      4881ff9f0f00.  cmp rdi, 0xf9f                          ; ../coreutils-8.31/lib/vasnprintf.c:1826
0x0001431b      0f8647010000   jbe 0x14468
0x00014321      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/vasnprintf.c:1835
0x00014325      4c898538fcff.  mov qword [rbp - 0x3c8], r8
0x0001432c      0f84f6090000   je 0x14d28
0x00014332      e8b9eafeff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/vasnprintf.c:1837
0x00014337      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasnprintf.c:1838
0x0001433a      48898528fcff.  mov qword [rbp - 0x3d8], rax            ; ../coreutils-8.31/lib/vasnprintf.c:1837
0x00014341      0f84e1090000   je 0x14d28                              ; ../coreutils-8.31/lib/vasnprintf.c:1838
0x00014347      4c8b8538fcff.  mov r8, qword [rbp - 0x3c8]
0x0001434e      488985e0fbff.  mov qword [rbp - 0x420], rax
0x00014355      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/vasnprintf.c:1851
0x00014358      4883bd18fcff.  cmp qword [rbp - 0x3e8], 0              ; ../coreutils-8.31/lib/vasnprintf.c:1843
0x00014360      740a           je 0x1436c
0x00014362      488b85e8fbff.  mov rax, qword [rbp - 0x418]            ; ../coreutils-8.31/lib/vasnprintf.c:1846
0x00014369      4c8b20         mov r12, qword [rax]
0x0001436c      4c8bad48fdff.  mov r13, qword [rbp - 0x2b8]            ; ../coreutils-8.31/lib/vasnprintf.c:1883
0x00014373      488d8544fcff.  lea rax, [rbp - 0x3bc]                  ; stdio2.h:64   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
0x0001437a      4c8bbd18fcff.  mov r15, qword [rbp - 0x3e8]            ; ../coreutils-8.31/lib/vasnprintf.c:1883
0x00014381      48c78500fcff.  mov qword [rbp - 0x400], 0
0x0001438c      48898510fcff.  mov qword [rbp - 0x3f0], rax            ; stdio2.h:64   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
0x00014393      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/vasnprintf.c:1928
0x00014396      4c89c3         mov rbx, r8
0x00014399      498b4d00       mov rcx, qword [r13]                    ; ../coreutils-8.31/lib/vasnprintf.c:1885
0x0001439d      4989c0         mov r8, rax                             ; ../coreutils-8.31/lib/vasnprintf.c:1928
0x000143a0      4c39c1         cmp rcx, r8                             ; ../coreutils-8.31/lib/vasnprintf.c:1885
0x000143a3      0f8468090000   je 0x14d11
0x000143a9      4c29c1         sub rcx, r8                             ; ../coreutils-8.31/lib/vasnprintf.c:1887
0x000143ac      4889d8         mov rax, rbx
0x000143af      4801c8         add rax, rcx
0x000143b2      4989c6         mov r14, rax                            ; ../coreutils-8.31/lib/xsize.h:65
0x000143b5      0f83dd000000   jae 0x14498                             ; ../coreutils-8.31/lib/xsize.h:66
0x000143bb      4983fcff       cmp r12, 0xffffffffffffffff             ; ../coreutils-8.31/lib/vasnprintf.c:1890
0x000143bf      0f84cb0a0000   je 0x14e90
0x000143c5      e886e5feff     call sym.imp.__errno_location
0x000143ca      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x000143d1      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]            ; ../coreutils-8.31/lib/vasnprintf.c:5606
0x000143d8      7409           je 0x143e3
0x000143da      4d85ff         test r15, r15
0x000143dd      0f85dd0a0000   jne 0x14ec0
0x000143e3      488b85e0fbff.  mov rax, qword [rbp - 0x420]            ; ../coreutils-8.31/lib/vasnprintf.c:5608
0x000143ea      4885c0         test rax, rax
0x000143ed      7408           je 0x143f7
0x000143ef      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:5609
0x000143f2      e8d9ecfeff     call sym..plt.got
0x000143f7      488b85f8fbff.  mov rax, qword [rbp - 0x408]            ; ../coreutils-8.31/lib/vasnprintf.c:5611
0x000143fe      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x00014405      4883c020       add rax, 0x20                           ; "@"
0x00014409      4839c7         cmp rdi, rax
0x0001440c      7405           je 0x14413
0x0001440e      e8bdecfeff     call sym..plt.got
0x00014413      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x0001441a      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x00014421      4883c010       add rax, 0x10
0x00014425      4839c7         cmp rdi, rax
0x00014428      7405           je 0x1442f
0x0001442a      e8a1ecfeff     call sym..plt.got
0x0001442f      488b8538fcff.  mov rax, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:5612
0x00014436      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/vasnprintf.c:5613
0x00014439      c7000c000000   mov dword [rax], 0xc                    ; ../coreutils-8.31/lib/vasnprintf.c:5612 ; [0xc:4]=0
0x0001443f      488b7dc8       mov rdi, qword [rbp - 0x38]             ; ../coreutils-8.31/lib/vasnprintf.c:5615
0x00014443      6448333c2528.  xor rdi, qword fs:[0x28]
0x0001444c      4c89f8         mov rax, r15
0x0001444f      0f85020f0000   jne 0x15357
0x00014455      488d65d8       lea rsp, [rbp - 0x28]
0x00014459      5b             pop rbx
0x0001445a      415c           pop r12
0x0001445c      415d           pop r13
0x0001445e      415e           pop r14
0x00014460      415f           pop r15
0x00014462      5d             pop rbp
0x00014463      c3             ret
0x00014464      0f1f4000       nop dword [rax]
0x00014468      4883c024       add rax, 0x24                           ; ../coreutils-8.31/lib/vasnprintf.c:1828
0x0001446c      48c785e0fbff.  mov qword [rbp - 0x420], 0              ; ../coreutils-8.31/lib/vasnprintf.c:1829
0x00014477      4883e0f0       and rax, 0xfffffffffffffff0             ; ../coreutils-8.31/lib/vasnprintf.c:1828
0x0001447b      4829c4         sub rsp, rax
0x0001447e      488d44240f     lea rax, [rsp + 0xf]
0x00014483      4883e0f0       and rax, 0xfffffffffffffff0
0x00014487      48898528fcff.  mov qword [rbp - 0x3d8], rax
0x0001448e      e9c2feffff     jmp 0x14355
0x00014493      0f1f440000     nop dword [rax + rax]
0x00014498      4939c4         cmp r12, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:1890
0x0001449b      7367           jae 0x14504
0x0001449d      4d85e4         test r12, r12
0x000144a0      0f852a090000   jne 0x14dd0
0x000144a6      4883f80c       cmp rax, 0xc
0x000144aa      0f8732090000   ja 0x14de2
0x000144b0      41bc0c000000   mov r12d, 0xc
0x000144b6      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x000144bd      0f94c2         sete dl
0x000144c0      4d85ff         test r15, r15
0x000144c3      0f843f090000   je 0x14e08
0x000144c9      84d2           test dl, dl
0x000144cb      0f8537090000   jne 0x14e08
0x000144d1      4c89e6         mov rsi, r12
0x000144d4      4c89ff         mov rdi, r15
0x000144d7      4c898530fcff.  mov qword [rbp - 0x3d0], r8
0x000144de      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x000144e5      e8a6e9feff     call sym.imp.realloc
0x000144ea      4885c0         test rax, rax
0x000144ed      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]
0x000144f4      4c8b8530fcff.  mov r8, qword [rbp - 0x3d0]
0x000144fb      0f84aa090000   je 0x14eab
0x00014501      4989c7         mov r15, rax
0x00014504      498d3c1f       lea rdi, [r15 + rbx]                    ; ../coreutils-8.31/lib/vasnprintf.c:1896
0x00014508      4889ca         mov rdx, rcx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0001450b      4c89c6         mov rsi, r8
0x0001450e      e86de8feff     call sym.imp.memcpy
0x00014513      488b8500fcff.  mov rax, qword [rbp - 0x400]            ; ../coreutils-8.31/lib/vasnprintf.c:1906
0x0001451a      48398540fdff.  cmp qword [rbp - 0x2c0], rax
0x00014521      0f84b40c0000   je 0x151db
0x00014527      410fb65548     movzx edx, byte [r13 + 0x48]            ; ../coreutils-8.31/lib/vasnprintf.c:1910
0x0001452c      498b4550       mov rax, qword [r13 + 0x50]
0x00014530      80fa25         cmp dl, 0x25
0x00014533      0f848f070000   je 0x14cc8
0x00014539      4883f8ff       cmp rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/vasnprintf.c:1923
0x0001453d      0f84430c0000   je 0x15186
0x00014543      4c8b8558fcff.  mov r8, qword [rbp - 0x3a8]
0x0001454a      48c1e005       shl rax, 5
0x0001454e      4c01c0         add rax, r8
0x00014551      80fa6e         cmp dl, 0x6e                            ; ../coreutils-8.31/lib/vasnprintf.c:1926
0x00014554      8b38           mov edi, dword [rax]
0x00014556      89bd30fcffff   mov dword [rbp - 0x3d0], edi
0x0001455c      0f84de070000   je 0x14d40
0x00014562      418b4510       mov eax, dword [r13 + 0x10]             ; ../coreutils-8.31/lib/vasnprintf.c:4603
0x00014566      488bbd28fcff.  mov rdi, qword [rbp - 0x3d8]            ; ../coreutils-8.31/lib/vasnprintf.c:4770
0x0001456d      a801           test al, 1                              ; ../coreutils-8.31/lib/vasnprintf.c:4776
0x0001456f      c60725         mov byte [rdi], 0x25                    ; ../coreutils-8.31/lib/vasnprintf.c:4770 ; '%'
                                                                       ; [0x25:1]=0
0x00014572      488d5f01       lea rbx, [rdi + 1]
0x00014576      740f           je 0x14587                              ; ../coreutils-8.31/lib/vasnprintf.c:4776
0x00014578      488bbd28fcff.  mov rdi, qword [rbp - 0x3d8]            ; ../coreutils-8.31/lib/vasnprintf.c:4777
0x0001457f      488d5f02       lea rbx, [rdi + 2]
0x00014583      c6470127       mov byte [rdi + 1], 0x27                ; '''
                                                                       ; [0x27:1]=0
0x00014587      a802           test al, 2                              ; ../coreutils-8.31/lib/vasnprintf.c:4779
0x00014589      7407           je 0x14592
0x0001458b      c6032d         mov byte [rbx], 0x2d                    ; ../coreutils-8.31/lib/vasnprintf.c:4780 ; '-'
                                                                       ; [0x2d:1]=0
0x0001458e      4883c301       add rbx, 1
0x00014592      a804           test al, 4                              ; ../coreutils-8.31/lib/vasnprintf.c:4781
0x00014594      7407           je 0x1459d
0x00014596      c6032b         mov byte [rbx], 0x2b                    ; ../coreutils-8.31/lib/vasnprintf.c:4782 ; '+'
                                                                       ; [0x2b:1]=0
0x00014599      4883c301       add rbx, 1
0x0001459d      a808           test al, 8                              ; ../coreutils-8.31/lib/vasnprintf.c:4783
0x0001459f      7407           je 0x145a8
0x000145a1      c60320         mov byte [rbx], 0x20                    ; ../coreutils-8.31/lib/vasnprintf.c:4784 ; [0x20:1]=64 ; "@"
0x000145a4      4883c301       add rbx, 1
0x000145a8      a810           test al, 0x10                           ; ../coreutils-8.31/lib/vasnprintf.c:4785
0x000145aa      7407           je 0x145b3
0x000145ac      c60323         mov byte [rbx], 0x23                    ; ../coreutils-8.31/lib/vasnprintf.c:4786 ; '#'
                                                                       ; [0x23:1]=0
0x000145af      4883c301       add rbx, 1
0x000145b3      a840           test al, 0x40                           ; ../coreutils-8.31/lib/vasnprintf.c:4788 ; segment.PHDR
0x000145b5      7407           je 0x145be
0x000145b7      c60349         mov byte [rbx], 0x49                    ; ../coreutils-8.31/lib/vasnprintf.c:4789 ; 'I'
                                                                       ; [0x49:1]=0
0x000145ba      4883c301       add rbx, 1
0x000145be      a820           test al, 0x20                           ; ../coreutils-8.31/lib/vasnprintf.c:4793 ; "@"
0x000145c0      7407           je 0x145c9
0x000145c2      c60330         mov byte [rbx], 0x30                    ; ../coreutils-8.31/lib/vasnprintf.c:4794 ; '0'
                                                                       ; [0x30:1]=0
0x000145c5      4883c301       add rbx, 1
0x000145c9      498b7518       mov rsi, qword [r13 + 0x18]             ; ../coreutils-8.31/lib/vasnprintf.c:4795
0x000145cd      498b5520       mov rdx, qword [r13 + 0x20]
0x000145d1      4839d6         cmp rsi, rdx
0x000145d4      7430           je 0x14606
0x000145d6      4889d1         mov rcx, rdx                            ; ../coreutils-8.31/lib/vasnprintf.c:4797
0x000145d9      4889df         mov rdi, rbx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x000145dc      4c898520fcff.  mov qword [rbp - 0x3e0], r8
0x000145e3      4829f1         sub rcx, rsi                            ; ../coreutils-8.31/lib/vasnprintf.c:4797
0x000145e6      4889ca         mov rdx, rcx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x000145e9      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x000145f0      e88be7feff     call sym.imp.memcpy
0x000145f5      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:4803
0x000145fc      4c8b8520fcff.  mov r8, qword [rbp - 0x3e0]
0x00014603      4801cb         add rbx, rcx
0x00014606      498b7530       mov rsi, qword [r13 + 0x30]             ; ../coreutils-8.31/lib/vasnprintf.c:4816
0x0001460a      498b5538       mov rdx, qword [r13 + 0x38]
0x0001460e      4839d6         cmp rsi, rdx
0x00014611      7430           je 0x14643
0x00014613      4889d1         mov rcx, rdx                            ; ../coreutils-8.31/lib/vasnprintf.c:4818
0x00014616      4889df         mov rdi, rbx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00014619      4c898520fcff.  mov qword [rbp - 0x3e0], r8
0x00014620      4829f1         sub rcx, rsi                            ; ../coreutils-8.31/lib/vasnprintf.c:4818
0x00014623      4889ca         mov rdx, rcx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00014626      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x0001462d      e84ee7feff     call sym.imp.memcpy
0x00014632      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:4824
0x00014639      4c8b8520fcff.  mov r8, qword [rbp - 0x3e0]
0x00014640      4801cb         add rbx, rcx
0x00014643      8bbd30fcffff   mov edi, dword [rbp - 0x3d0]
0x00014649      83ff10         cmp edi, 0x10
0x0001464c      772d           ja 0x1467b
0x0001464e      b801000000     mov eax, 1
0x00014653      89f9           mov ecx, edi
0x00014655      48d3e0         shl rax, cl
0x00014658      a980410100     test eax, 0x14180
0x0001465d      7515           jne 0x14674
0x0001465f      f6c410         test ah, 0x10
0x00014662      0f8558090000   jne 0x14fc0
0x00014668      f6c406         test ah, 6
0x0001466b      740e           je 0x1467b
0x0001466d      c6036c         mov byte [rbx], 0x6c                    ; ../coreutils-8.31/lib/vasnprintf.c:4847 ; 'l'
                                                                       ; [0x6c:1]=0
0x00014670      4883c301       add rbx, 1
0x00014674      c6036c         mov byte [rbx], 0x6c                    ; ../coreutils-8.31/lib/vasnprintf.c:4859 ; 'l'
                                                                       ; [0x6c:1]=0
0x00014677      4883c301       add rbx, 1
0x0001467b      410fb64548     movzx eax, byte [r13 + 0x48]            ; ../coreutils-8.31/lib/vasnprintf.c:4872
0x00014680      c6430100       mov byte [rbx + 1], 0                   ; ../coreutils-8.31/lib/vasnprintf.c:4922
0x00014684      8803           mov byte [rbx], al                      ; ../coreutils-8.31/lib/vasnprintf.c:4872
0x00014686      498b4528       mov rax, qword [r13 + 0x28]             ; ../coreutils-8.31/lib/vasnprintf.c:4930
0x0001468a      4883f8ff       cmp rax, 0xffffffffffffffff
0x0001468e      0f842c070000   je 0x14dc0
0x00014694      48c1e005       shl rax, 5                              ; ../coreutils-8.31/lib/vasnprintf.c:4932
0x00014698      4c01c0         add rax, r8
0x0001469b      833805         cmp dword [rax], 5
0x0001469e      0f85e20a0000   jne 0x15186
0x000146a4      8b4010         mov eax, dword [rax + 0x10]             ; ../coreutils-8.31/lib/vasnprintf.c:4934
0x000146a7      c78520fcffff.  mov dword [rbp - 0x3e0], 1
0x000146b1      898548fcffff   mov dword [rbp - 0x3b8], eax
0x000146b7      498b4540       mov rax, qword [r13 + 0x40]             ; ../coreutils-8.31/lib/vasnprintf.c:4936
0x000146bb      4883f8ff       cmp rax, 0xffffffffffffffff
0x000146bf      742b           je 0x146ec
0x000146c1      48c1e005       shl rax, 5                              ; ../coreutils-8.31/lib/vasnprintf.c:4938
0x000146c5      4901c0         add r8, rax
0x000146c8      41833805       cmp dword [r8], 5
0x000146cc      0f85b40a0000   jne 0x15186
0x000146d2      8b8520fcffff   mov eax, dword [rbp - 0x3e0]            ; ../coreutils-8.31/lib/vasnprintf.c:4940
0x000146d8      418b5010       mov edx, dword [r8 + 0x10]
0x000146dc      89948548fcff.  mov dword [rbp + rax*4 - 0x3b8], edx
0x000146e3      8d4001         lea eax, [rax + 1]
0x000146e6      898520fcffff   mov dword [rbp - 0x3e0], eax
0x000146ec      4c89f0         mov rax, r14
0x000146ef      31d2           xor edx, edx
0x000146f1      4883c002       add rax, 2
0x000146f5      0f82610c0000   jb 0x1535c
0x000146fb      4939c4         cmp r12, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:4952
0x000146fe      734b           jae 0x1474b
0x00014700      4d85e4         test r12, r12
0x00014703      0f851f080000   jne 0x14f28
0x00014709      4883f80c       cmp rax, 0xc
0x0001470d      0f872d080000   ja 0x14f40
0x00014713      41bc0c000000   mov r12d, 0xc
0x00014719      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00014720      0f94c2         sete dl
0x00014723      4d85ff         test r15, r15
0x00014726      0f8444080000   je 0x14f70
0x0001472c      84d2           test dl, dl
0x0001472e      0f853c080000   jne 0x14f70
0x00014734      4c89e6         mov rsi, r12
0x00014737      4c89ff         mov rdi, r15
0x0001473a      e851e7feff     call sym.imp.realloc
0x0001473f      4885c0         test rax, rax
0x00014742      0f847dfcffff   je 0x143c5
0x00014748      4989c7         mov r15, rax
0x0001474b      43c6043700     mov byte [r15 + r14], 0                 ; ../coreutils-8.31/lib/vasnprintf.c:4957
0x00014750      e8fbe1feff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/vasnprintf.c:4960
0x00014755      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x0001475c      8b00           mov eax, dword [rax]
0x0001475e      48899d08fcff.  mov qword [rbp - 0x3f8], rbx
0x00014765      8985dcfbffff   mov dword [rbp - 0x424], eax
0x0001476b      0f1f440000     nop dword [rax + rax]
0x00014770      488b8538fcff.  mov rax, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:5015
0x00014777      4c89e3         mov rbx, r12                            ; ../coreutils-8.31/lib/vasnprintf.c:4968
0x0001477a      41baffffff7f   mov r10d, 0x7fffffff
0x00014780      4c29f3         sub rbx, r14
0x00014783      c78544fcffff.  mov dword [rbp - 0x3bc], 0xffffffff     ; ../coreutils-8.31/lib/vasnprintf.c:4964 ; -1
0x0001478d      4881fbffffff.  cmp rbx, 0x7fffffff
0x00014794      c70000000000   mov dword [rax], 0                      ; ../coreutils-8.31/lib/vasnprintf.c:5015
0x0001479a      8b8530fcffff   mov eax, dword [rbp - 0x3d0]            ; ../coreutils-8.31/lib/vasnprintf.c:5016
0x000147a0      4c0f46d3       cmovbe r10, rbx
0x000147a4      83f811         cmp eax, 0x11
0x000147a7      0f87d9090000   ja 0x15186
0x000147ad      488d35ec4600.  lea rsi, [0x00018ea0]
0x000147b4      48630486       movsxd rax, dword [rsi + rax*4]
0x000147b8      4801f0         add rax, rsi
0x000147bb      ffe0           jmp rax
0x000147bd      0f1f00         nop dword [rax]
0x000147c0      498b4550       mov rax, qword [r13 + 0x50]
0x000147c4      4b8d3c37       lea rdi, [r15 + r14]
0x000147c8      48c1e005       shl rax, 5
0x000147cc      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x000147d3      4c8b4810       mov r9, qword [rax + 0x10]
0x000147d7      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x000147dd      83f801         cmp eax, 1
0x000147e0      0f84c2040000   je 0x14ca8
0x000147e6      83f802         cmp eax, 2
0x000147e9      0f84a1040000   je 0x14c90
0x000147ef      4883ec08       sub rsp, 8
0x000147f3      ffb510fcffff   push qword [rbp - 0x3f0]
0x000147f9      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x00014800      4c89d6         mov rsi, r10                            ; ../coreutils-8.31/lib/vasnprintf.c:5007
0x00014803      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x0001480a      ba01000000     mov edx, 1
0x0001480f      31c0           xor eax, eax
0x00014811      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x00014818      e8f3e0feff     call sym.imp.__snprintf_chk
0x0001481d      5e             pop rsi
0x0001481e      5f             pop rdi
0x0001481f      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x00014826      8b8d44fcffff   mov ecx, dword [rbp - 0x3bc]
0x0001482c      85c9           test ecx, ecx
0x0001482e      0f8838010000   js 0x1496c
0x00014834      4863d1         movsxd rdx, ecx
0x00014837      4c39d2         cmp rdx, r10
0x0001483a      730e           jae 0x1484a
0x0001483c      4c01fa         add rdx, r15
0x0001483f      42803c3200     cmp byte [rdx + r14], 0
0x00014844      0f853c090000   jne 0x15186
0x0001484a      39c1           cmp ecx, eax
0x0001484c      7d08           jge 0x14856
0x0001484e      898544fcffff   mov dword [rbp - 0x3bc], eax
0x00014854      89c1           mov ecx, eax
0x00014856      8d4101         lea eax, [rcx + 1]
0x00014859      4c39d0         cmp rax, r10
0x0001485c      0f822e080000   jb 0x15090
0x00014862      4881fbfeffff.  cmp rbx, 0x7ffffffe
0x00014869      0f8741080000   ja 0x150b0
0x0001486f      4b8d3424       lea rsi, [r12 + r12]
0x00014873      8d5102         lea edx, [rcx + 2]
0x00014876      4d85e4         test r12, r12
0x00014879      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00014880      480f49c6       cmovns rax, rsi
0x00014884      4c01f2         add rdx, r14
0x00014887      0f82bb0a0000   jb 0x15348
0x0001488d      4839d0         cmp rax, rdx
0x00014890      480f42c2       cmovb rax, rdx
0x00014894      4939c4         cmp r12, rax
0x00014897      0f83d3feffff   jae 0x14770
0x0001489d      4d85e4         test r12, r12
0x000148a0      0f882bfbffff   js 0x143d1
0x000148a6      4839c6         cmp rsi, rax
0x000148a9      4989f4         mov r12, rsi
0x000148ac      730d           jae 0x148bb
0x000148ae      4883f8ff       cmp rax, 0xffffffffffffffff
0x000148b2      0f8419fbffff   je 0x143d1
0x000148b8      4989c4         mov r12, rax
0x000148bb      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x000148c2      0f94c3         sete bl
0x000148c5      4d85ff         test r15, r15
0x000148c8      0f8482030000   je 0x14c50
0x000148ce      84db           test bl, bl
0x000148d0      0f857a030000   jne 0x14c50
0x000148d6      4c89e6         mov rsi, r12
0x000148d9      4c89ff         mov rdi, r15
0x000148dc      e8afe5feff     call sym.imp.realloc
0x000148e1      4885c0         test rax, rax
0x000148e4      0f84e7faffff   je 0x143d1
0x000148ea      4989c7         mov r15, rax
0x000148ed      e97efeffff     jmp 0x14770                             ; stdio2.h:-211
0x000148f2      660f1f440000   nop word [rax + rax]
0x000148f8      498b4550       mov rax, qword [r13 + 0x50]
0x000148fc      4b8d3c37       lea rdi, [r15 + r14]
0x00014900      48c1e005       shl rax, 5
0x00014904      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x0001490b      448b4810       mov r9d, dword [rax + 0x10]
0x0001490f      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00014915      83f801         cmp eax, 1
0x00014918      0f8432020000   je 0x14b50
0x0001491e      83f802         cmp eax, 2
0x00014921      0f8471020000   je 0x14b98
0x00014927      4883ec08       sub rsp, 8
0x0001492b      ffb510fcffff   push qword [rbp - 0x3f0]
0x00014931      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x00014938      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x0001493f      ba01000000     mov edx, 1
0x00014944      4c89d6         mov rsi, r10
0x00014947      31c0           xor eax, eax
0x00014949      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x00014950      e8bbdffeff     call sym.imp.__snprintf_chk
0x00014955      5a             pop rdx
0x00014956      59             pop rcx
0x00014957      8b8d44fcffff   mov ecx, dword [rbp - 0x3bc]
0x0001495d      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]            ; ../coreutils-8.31/lib/vasnprintf.c:4942
0x00014964      85c9           test ecx, ecx
0x00014966      0f89c8feffff   jns 0x14834
0x0001496c      488bbd08fcff.  mov rdi, qword [rbp - 0x3f8]
0x00014973      807f0100       cmp byte [rdi + 1], 0
0x00014977      0f853b030000   jne 0x14cb8
0x0001497d      85c0           test eax, eax
0x0001497f      0f89c9feffff   jns 0x1484e
0x00014985      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x0001498c      8b18           mov ebx, dword [rax]
0x0001498e      85db           test ebx, ebx
0x00014990      751e           jne 0x149b0
0x00014992      410fb64548     movzx eax, byte [r13 + 0x48]
0x00014997      bb16000000     mov ebx, 0x16
0x0001499c      83e0ef         and eax, 0xffffffef                     ; ../coreutils-8.31/lib/vasnprintf.c:4951 ; 4294967279
0x0001499f      3c63           cmp al, 0x63
0x000149a1      b854000000     mov eax, 0x54                           ; 'T'
0x000149a6      0f44d8         cmove ebx, eax
0x000149a9      0f1f80000000.  nop dword [rax]
0x000149b0      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x000149b7      7409           je 0x149c2
0x000149b9      4d85ff         test r15, r15
0x000149bc      0f85aa070000   jne 0x1516c
0x000149c2      488b85e0fbff.  mov rax, qword [rbp - 0x420]
0x000149c9      4885c0         test rax, rax
0x000149cc      7408           je 0x149d6
0x000149ce      4889c7         mov rdi, rax
0x000149d1      e8fae6feff     call sym..plt.got
0x000149d6      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x000149dd      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x000149e4      4883c020       add rax, 0x20                           ; "@"
0x000149e8      4839c7         cmp rdi, rax
0x000149eb      7405           je 0x149f2
0x000149ed      e8dee6feff     call sym..plt.got
0x000149f2      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x000149f9      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x00014a00      4883c010       add rax, 0x10
0x00014a04      4839c7         cmp rdi, rax
0x00014a07      7405           je 0x14a0e
0x00014a09      e8c2e6feff     call sym..plt.got
0x00014a0e      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x00014a15      4531ff         xor r15d, r15d
0x00014a18      8918           mov dword [rax], ebx
0x00014a1a      e920faffff     jmp 0x1443f
0x00014a1f      90             nop
0x00014a20      498b4550       mov rax, qword [r13 + 0x50]
0x00014a24      4b8d3c37       lea rdi, [r15 + r14]
0x00014a28      48c1e005       shl rax, 5
0x00014a2c      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00014a33      db6810         fld xword [rax + 0x10]
0x00014a36      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00014a3c      83f801         cmp eax, 1
0x00014a3f      0f842b060000   je 0x15070
0x00014a45      83f802         cmp eax, 2
0x00014a48      0f85c2040000   jne 0x14f10
0x00014a4e      8b854cfcffff   mov eax, dword [rbp - 0x3b4]
0x00014a54      4883ec08       sub rsp, 8
0x00014a58      ffb510fcffff   push qword [rbp - 0x3f0]                ; ../coreutils-8.31/lib/vasnprintf.c:4814
0x00014a5e      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]
0x00014a65      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x00014a6c      4c89d6         mov rsi, r10
0x00014a6f      4883ec18       sub rsp, 0x18
0x00014a73      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x00014a7a      ba01000000     mov edx, 1
0x00014a7f      db7c2408       fstp xword [rsp + 8]
0x00014a83      50             push rax
0x00014a84      31c0           xor eax, eax
0x00014a86      4c8995d0fbff.  mov qword [rbp - 0x430], r10            ; ../coreutils-8.31/lib/vasnprintf.c:4808
0x00014a8d      e87edefeff     call sym.imp.__snprintf_chk
0x00014a92      4883c430       add rsp, 0x30
0x00014a96      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x00014a9d      e984fdffff     jmp 0x14826
0x00014aa2      660f1f440000   nop word [rax + rax]
0x00014aa8      498b4550       mov rax, qword [r13 + 0x50]
0x00014aac      4b8d3c37       lea rdi, [r15 + r14]
0x00014ab0      48c1e005       shl rax, 5
0x00014ab4      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00014abb      f20f104010     movsd xmm0, qword [rax + 0x10]
0x00014ac0      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00014ac6      83f801         cmp eax, 1
0x00014ac9      0f8491050000   je 0x15060
0x00014acf      83f802         cmp eax, 2
0x00014ad2      0f85f8030000   jne 0x14ed0
0x00014ad8      8b854cfcffff   mov eax, dword [rbp - 0x3b4]
0x00014ade      ffb510fcffff   push qword [rbp - 0x3f0]
0x00014ae4      50             push rax
0x00014ae5      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]
0x00014aec      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x00014af3      4c89d6         mov rsi, r10
0x00014af6      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x00014afd      ba01000000     mov edx, 1
0x00014b02      b801000000     mov eax, 1
0x00014b07      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x00014b0e      e8fdddfeff     call sym.imp.__snprintf_chk
0x00014b13      4158           pop r8
0x00014b15      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x00014b1c      4159           pop r9
0x00014b1e      e903fdffff     jmp 0x14826
0x00014b23      0f1f440000     nop dword [rax + rax]
0x00014b28      498b4550       mov rax, qword [r13 + 0x50]
0x00014b2c      4b8d3c37       lea rdi, [r15 + r14]
0x00014b30      48c1e005       shl rax, 5
0x00014b34      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00014b3b      440fb74810     movzx r9d, word [rax + 0x10]
0x00014b40      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00014b46      83f801         cmp eax, 1                              ; ../coreutils-8.31/lib/vasnprintf.c:4758
0x00014b49      0f85cffdffff   jne 0x1491e
0x00014b4f      90             nop
0x00014b50      ffb510fcffff   push qword [rbp - 0x3f0]
0x00014b56      4151           push r9
0x00014b58      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]
0x00014b5f      e9cdfdffff     jmp 0x14931
0x00014b64      0f1f4000       nop dword [rax]
0x00014b68      498b4550       mov rax, qword [r13 + 0x50]
0x00014b6c      4b8d3c37       lea rdi, [r15 + r14]
0x00014b70      48c1e005       shl rax, 5
0x00014b74      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00014b7b      440fbf4810     movsx r9d, word [rax + 0x10]
0x00014b80      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00014b86      83f801         cmp eax, 1
0x00014b89      74c5           je 0x14b50
0x00014b8b      83f802         cmp eax, 2
0x00014b8e      0f8593fdffff   jne 0x14927
0x00014b94      0f1f4000       nop dword [rax]
0x00014b98      4883ec08       sub rsp, 8
0x00014b9c      ffb510fcffff   push qword [rbp - 0x3f0]
0x00014ba2      4151           push r9
0x00014ba4      8b854cfcffff   mov eax, dword [rbp - 0x3b4]
0x00014baa      50             push rax
0x00014bab      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]            ; ../coreutils-8.31/lib/vasnprintf.c:4623
0x00014bb2      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x00014bb9      4c89d6         mov rsi, r10
0x00014bbc      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x00014bc3      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/vasnprintf.c:4624
0x00014bc8      31c0           xor eax, eax
0x00014bca      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x00014bd1      e83addfeff     call sym.imp.__snprintf_chk
0x00014bd6      4883c420       add rsp, 0x20
0x00014bda      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x00014be1      e940fcffff     jmp 0x14826
0x00014be6      662e0f1f8400.  nop word cs:[rax + rax]
0x00014bf0      498b4550       mov rax, qword [r13 + 0x50]
0x00014bf4      4b8d3c37       lea rdi, [r15 + r14]
0x00014bf8      48c1e005       shl rax, 5
0x00014bfc      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00014c03      440fb64810     movzx r9d, byte [rax + 0x10]
0x00014c08      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00014c0e      83f801         cmp eax, 1
0x00014c11      0f8507fdffff   jne 0x1491e
0x00014c17      e934ffffff     jmp 0x14b50
0x00014c1c      0f1f4000       nop dword [rax]
0x00014c20      498b4550       mov rax, qword [r13 + 0x50]
0x00014c24      4b8d3c37       lea rdi, [r15 + r14]
0x00014c28      48c1e005       shl rax, 5
0x00014c2c      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00014c33      440fbe4810     movsx r9d, byte [rax + 0x10]
0x00014c38      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00014c3e      83f801         cmp eax, 1
0x00014c41      0f85d7fcffff   jne 0x1491e
0x00014c47      e904ffffff     jmp 0x14b50
0x00014c4c      0f1f4000       nop dword [rax]
0x00014c50      4c89e7         mov rdi, r12
0x00014c53      e898e1feff     call sym.imp.malloc
0x00014c58      4885c0         test rax, rax
0x00014c5b      4889c1         mov rcx, rax
0x00014c5e      0f846df7ffff   je 0x143d1
0x00014c64      4d85f6         test r14, r14
0x00014c67      0f84b3000000   je 0x14d20
0x00014c6d      84db           test bl, bl
0x00014c6f      0f84ab000000   je 0x14d20
0x00014c75      4c89fe         mov rsi, r15
0x00014c78      4c89f2         mov rdx, r14
0x00014c7b      4889c7         mov rdi, rax
0x00014c7e      e8fde0feff     call sym.imp.memcpy
0x00014c83      4989c7         mov r15, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:1511
0x00014c86      e9e5faffff     jmp 0x14770
0x00014c8b      0f1f440000     nop dword [rax + rax]
0x00014c90      4883ec08       sub rsp, 8
0x00014c94      ffb510fcffff   push qword [rbp - 0x3f0]                ; ../coreutils-8.31/lib/xsize.h:-338
0x00014c9a      4151           push r9
0x00014c9c      e903ffffff     jmp 0x14ba4
0x00014ca1      0f1f80000000.  nop dword [rax]
0x00014ca8      ffb510fcffff   push qword [rbp - 0x3f0]
0x00014cae      4151           push r9
0x00014cb0      e9a3feffff     jmp 0x14b58
0x00014cb5      0f1f00         nop dword [rax]
0x00014cb8      c6470100       mov byte [rdi + 1], 0
0x00014cbc      e9affaffff     jmp 0x14770
0x00014cc1      0f1f80000000.  nop dword [rax]
0x00014cc8      4883f8ff       cmp rax, 0xffffffffffffffff
0x00014ccc      0f85b4040000   jne 0x15186
0x00014cd2      4c89f0         mov rax, r14
0x00014cd5      4883c001       add rax, 1
0x00014cd9      4889c3         mov rbx, rax
0x00014cdc      0f8386000000   jae 0x14d68
0x00014ce2      4983fcff       cmp r12, 0xffffffffffffffff
0x00014ce6      0f85d9f6ffff   jne 0x143c5
0x00014cec      4c89e3         mov rbx, r12
0x00014cef      43c6043725     mov byte [r15 + r14], 0x25              ; '%'
                                                                       ; [0x25:1]=0
0x00014cf4      4d8b4508       mov r8, qword [r13 + 8]
0x00014cf8      4983c558       add r13, 0x58
0x00014cfc      498b4d00       mov rcx, qword [r13]
0x00014d00      48838500fcff.  add qword [rbp - 0x400], 1
0x00014d08      4c39c1         cmp rcx, r8
0x00014d0b      0f8598f6ffff   jne 0x143a9
0x00014d11      4989de         mov r14, rbx
0x00014d14      e9faf7ffff     jmp 0x14513                             ; ../coreutils-8.31/lib/vasnprintf.c:1525
0x00014d19      0f1f80000000.  nop dword [rax]
0x00014d20      4989cf         mov r15, rcx
0x00014d23      e948faffff     jmp 0x14770                             ; ../coreutils-8.31/lib/vasnprintf.c:1514
0x00014d28      e823dcfeff     call sym.imp.__errno_location
0x00014d2d      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x00014d34      e9bef6ffff     jmp 0x143f7
0x00014d39      0f1f80000000.  nop dword [rax]
0x00014d40      89fa           mov edx, edi
0x00014d42      83ea12         sub edx, 0x12
0x00014d45      83fa04         cmp edx, 4
0x00014d48      0f8738040000   ja 0x15186
0x00014d4e      488d3d934100.  lea rdi, [0x00018ee8]
0x00014d55      488b4010       mov rax, qword [rax + 0x10]
0x00014d59      48631497       movsxd rdx, dword [rdi + rdx*4]
0x00014d5d      4801fa         add rdx, rdi
0x00014d60      ffe2           jmp rdx
0x00014d62      660f1f440000   nop word [rax + rax]
0x00014d68      4939c4         cmp r12, rax
0x00014d6b      7382           jae 0x14cef
0x00014d6d      4d85e4         test r12, r12
0x00014d70      0f85ca030000   jne 0x15140
0x00014d76      4883f80c       cmp rax, 0xc
0x00014d7a      0f87d2030000   ja 0x15152
0x00014d80      41bc0c000000   mov r12d, 0xc
0x00014d86      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00014d8d      0f94c2         sete dl
0x00014d90      4d85ff         test r15, r15
0x00014d93      0f8467020000   je 0x15000
0x00014d99      84d2           test dl, dl
0x00014d9b      0f855f020000   jne 0x15000
0x00014da1      4c89e6         mov rsi, r12
0x00014da4      4c89ff         mov rdi, r15
0x00014da7      e8e4e0feff     call sym.imp.realloc                    ; ../coreutils-8.31/lib/vasnprintf.c:1487
0x00014dac      4885c0         test rax, rax
0x00014daf      0f84f6000000   je 0x14eab
0x00014db5      4989c7         mov r15, rax
0x00014db8      e932ffffff     jmp 0x14cef
0x00014dbd      0f1f00         nop dword [rax]
0x00014dc0      c78520fcffff.  mov dword [rbp - 0x3e0], 0
0x00014dca      e9e8f8ffff     jmp 0x146b7
0x00014dcf      90             nop
0x00014dd0      0f88eff5ffff   js 0x143c5
0x00014dd6      4d01e4         add r12, r12
0x00014dd9      4939c4         cmp r12, rax
0x00014ddc      0f83d4f6ffff   jae 0x144b6
0x00014de2      4883f8ff       cmp rax, 0xffffffffffffffff
0x00014de6      0f84d9f5ffff   je 0x143c5
0x00014dec      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00014df3      4989c4         mov r12, rax
0x00014df6      0f94c2         sete dl
0x00014df9      4d85ff         test r15, r15
0x00014dfc      0f85c7f6ffff   jne 0x144c9
0x00014e02      660f1f440000   nop word [rax + rax]
0x00014e08      4c89e7         mov rdi, r12
0x00014e0b      4c898520fcff.  mov qword [rbp - 0x3e0], r8
0x00014e12      889530fcffff   mov byte [rbp - 0x3d0], dl
0x00014e18      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x00014e1f      e8ccdffeff     call sym.imp.malloc
0x00014e24      4885c0         test rax, rax
0x00014e27      4989c1         mov r9, rax
0x00014e2a      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]
0x00014e31      0fb69530fcff.  movzx edx, byte [rbp - 0x3d0]
0x00014e38      4c8b8520fcff.  mov r8, qword [rbp - 0x3e0]
0x00014e3f      0f8480f5ffff   je 0x143c5
0x00014e45      4885db         test rbx, rbx
0x00014e48      0f8402020000   je 0x15050
0x00014e4e      84d2           test dl, dl
0x00014e50      0f84fa010000   je 0x15050
0x00014e56      4c89fe         mov rsi, r15
0x00014e59      4889da         mov rdx, rbx
0x00014e5c      4889c7         mov rdi, rax
0x00014e5f      4c898530fcff.  mov qword [rbp - 0x3d0], r8
0x00014e66      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x00014e6d      e80edffeff     call sym.imp.memcpy
0x00014e72      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]
0x00014e79      4989c7         mov r15, rax
0x00014e7c      4c8b8530fcff.  mov r8, qword [rbp - 0x3d0]
0x00014e83      e97cf6ffff     jmp 0x14504
0x00014e88      0f1f84000000.  nop dword [rax + rax]
0x00014e90      4d89e6         mov r14, r12
0x00014e93      e96cf6ffff     jmp 0x14504
0x00014e98      0f1f84000000.  nop dword [rax + rax]
0x00014ea0      4c8930         mov qword [rax], r14
0x00014ea3      4c89f3         mov rbx, r14
0x00014ea6      e949feffff     jmp 0x14cf4
0x00014eab      e8a0dafeff     call sym.imp.__errno_location
0x00014eb0      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x00014eb7      660f1f840000.  nop word [rax + rax]
0x00014ec0      4c89ff         mov rdi, r15
0x00014ec3      e808e2feff     call sym..plt.got
0x00014ec8      e916f5ffff     jmp 0x143e3
0x00014ecd      0f1f00         nop dword [rax]
0x00014ed0      4c8b8d10fcff.  mov r9, qword [rbp - 0x3f0]
0x00014ed7      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x00014ede      4c89d6         mov rsi, r10
0x00014ee1      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x00014ee8      ba01000000     mov edx, 1
0x00014eed      b801000000     mov eax, 1
0x00014ef2      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x00014ef9      e812dafeff     call sym.imp.__snprintf_chk
0x00014efe      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x00014f05      e91cf9ffff     jmp 0x14826
0x00014f0a      660f1f440000   nop word [rax + rax]
0x00014f10      4883ec10       sub rsp, 0x10
0x00014f14      4c8b8d10fcff.  mov r9, qword [rbp - 0x3f0]
0x00014f1b      db3c24         fstp xword [rsp]
0x00014f1e      e9d6f8ffff     jmp 0x147f9
0x00014f23      0f1f440000     nop dword [rax + rax]
0x00014f28      0f8897f4ffff   js 0x143c5
0x00014f2e      4d01e4         add r12, r12
0x00014f31      4939c4         cmp r12, rax
0x00014f34      0f83dff7ffff   jae 0x14719
0x00014f3a      660f1f440000   nop word [rax + rax]
0x00014f40      4885d2         test rdx, rdx
0x00014f43      0f857cf4ffff   jne 0x143c5
0x00014f49      4883f8ff       cmp rax, 0xffffffffffffffff
0x00014f4d      0f8472f4ffff   je 0x143c5
0x00014f53      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00014f5a      4989c4         mov r12, rax
0x00014f5d      0f94c2         sete dl                                 ; string_fortified.h:-369
0x00014f60      4d85ff         test r15, r15
0x00014f63      0f85c3f7ffff   jne 0x1472c
0x00014f69      0f1f80000000.  nop dword [rax]
0x00014f70      4c89e7         mov rdi, r12
0x00014f73      889538fcffff   mov byte [rbp - 0x3c8], dl
0x00014f79      e872defeff     call sym.imp.malloc
0x00014f7e      4885c0         test rax, rax
0x00014f81      4889c1         mov rcx, rax
0x00014f84      0fb69538fcff.  movzx edx, byte [rbp - 0x3c8]
0x00014f8b      0f8434f4ffff   je 0x143c5                              ; ../coreutils-8.31/lib/vasnprintf.c:1528
0x00014f91      4d85f6         test r14, r14
0x00014f94      0f8496010000   je 0x15130
0x00014f9a      84d2           test dl, dl
0x00014f9c      0f848e010000   je 0x15130
0x00014fa2      4c89fe         mov rsi, r15
0x00014fa5      4c89f2         mov rdx, r14
0x00014fa8      4889c7         mov rdi, rax
0x00014fab      e8d0ddfeff     call sym.imp.memcpy                     ; ../coreutils-8.31/lib/vasnprintf.c:1531
0x00014fb0      4989c7         mov r15, rax
0x00014fb3      e993f7ffff     jmp 0x1474b
0x00014fb8      0f1f84000000.  nop dword [rax + rax]
0x00014fc0      c6034c         mov byte [rbx], 0x4c                    ; 'L'
                                                                       ; [0x4c:1]=0
0x00014fc3      4883c301       add rbx, 1
0x00014fc7      e9aff6ffff     jmp 0x1467b
0x00014fcc      0f1f4000       nop dword [rax]
0x00014fd0      448830         mov byte [rax], r14b
0x00014fd3      4c89f3         mov rbx, r14
0x00014fd6      e919fdffff     jmp 0x14cf4
0x00014fdb      0f1f440000     nop dword [rax + rax]
0x00014fe0      448930         mov dword [rax], r14d
0x00014fe3      4c89f3         mov rbx, r14
0x00014fe6      e909fdffff     jmp 0x14cf4
0x00014feb      0f1f440000     nop dword [rax + rax]
0x00014ff0      66448930       mov word [rax], r14w
0x00014ff4      4c89f3         mov rbx, r14
0x00014ff7      e9f8fcffff     jmp 0x14cf4
0x00014ffc      0f1f4000       nop dword [rax]
0x00015000      4c89e7         mov rdi, r12
0x00015003      889538fcffff   mov byte [rbp - 0x3c8], dl
0x00015009      e8e2ddfeff     call sym.imp.malloc
0x0001500e      4885c0         test rax, rax
0x00015011      4889c1         mov rcx, rax
0x00015014      0fb69538fcff.  movzx edx, byte [rbp - 0x3c8]
0x0001501b      0f84a4f3ffff   je 0x143c5                              ; stdio2.h:-339
0x00015021      4d85f6         test r14, r14
0x00015024      0f843a010000   je 0x15164
0x0001502a      84d2           test dl, dl
0x0001502c      0f8432010000   je 0x15164
0x00015032      4c89fe         mov rsi, r15
0x00015035      4c89f2         mov rdx, r14
0x00015038      4889c7         mov rdi, rax
0x0001503b      e840ddfeff     call sym.imp.memcpy
0x00015040      4989c7         mov r15, rax
0x00015043      e9a7fcffff     jmp 0x14cef
0x00015048      0f1f84000000.  nop dword [rax + rax]
0x00015050      4d89cf         mov r15, r9
0x00015053      e9acf4ffff     jmp 0x14504
0x00015058      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/vasnprintf.c:5157
0x00015060      4883ec08       sub rsp, 8
0x00015064      ffb510fcffff   push qword [rbp - 0x3f0]
0x0001506a      e976faffff     jmp 0x14ae5
0x0001506f      90             nop
0x00015070      4883ec08       sub rsp, 8
0x00015074      ffb510fcffff   push qword [rbp - 0x3f0]
0x0001507a      4883ec10       sub rsp, 0x10
0x0001507e      db3c24         fstp xword [rsp]
0x00015081      e925fbffff     jmp 0x14bab
0x00015086      662e0f1f8400.  nop word cs:[rax + rax]
0x00015090      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x00015097      8bbddcfbffff   mov edi, dword [rbp - 0x424]
0x0001509d      4863d9         movsxd rbx, ecx
0x000150a0      4c01f3         add rbx, r14
0x000150a3      8938           mov dword [rax], edi
0x000150a5      e94afcffff     jmp 0x14cf4
0x000150aa      660f1f440000   nop word [rax + rax]
0x000150b0      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x000150b7      7409           je 0x150c2
0x000150b9      4d85ff         test r15, r15
0x000150bc      0f85b7000000   jne 0x15179
0x000150c2      488b85e0fbff.  mov rax, qword [rbp - 0x420]
0x000150c9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasnprintf.c:5198
0x000150cc      7408           je 0x150d6
0x000150ce      4889c7         mov rdi, rax
0x000150d1      e8fadffeff     call sym..plt.got
0x000150d6      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x000150dd      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x000150e4      4883c020       add rax, 0x20                           ; "@"
0x000150e8      4839c7         cmp rdi, rax
0x000150eb      7405           je 0x150f2
0x000150ed      e8dedffeff     call sym..plt.got
0x000150f2      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x000150f9      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x00015100      4883c010       add rax, 0x10
0x00015104      4839c7         cmp rdi, rax
0x00015107      7405           je 0x1510e
0x00015109      e8c2dffeff     call sym..plt.got
0x0001510e      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x00015115      4531ff         xor r15d, r15d
0x00015118      c7004b000000   mov dword [rax], 0x4b                   ; 'K'
                                                                       ; [0x4b:4]=0
0x0001511e      e91cf3ffff     jmp 0x1443f
0x00015123      0f1f440000     nop dword [rax + rax]
0x00015128      4531ff         xor r15d, r15d
0x0001512b      e90ff3ffff     jmp 0x1443f
0x00015130      4989cf         mov r15, rcx
0x00015133      e913f6ffff     jmp 0x1474b                             ; ../coreutils-8.31/lib/vasnprintf.c:1273
0x00015138      0f1f84000000.  nop dword [rax + rax]
0x00015140      0f887ff2ffff   js 0x143c5
0x00015146      4d01e4         add r12, r12
0x00015149      4939c4         cmp r12, rax
0x0001514c      0f8334fcffff   jae 0x14d86
0x00015152      4883f8ff       cmp rax, 0xffffffffffffffff
0x00015156      0f8469f2ffff   je 0x143c5
0x0001515c      4989c4         mov r12, rax
0x0001515f      e922fcffff     jmp 0x14d86
0x00015164      4989cf         mov r15, rcx
0x00015167      e983fbffff     jmp 0x14cef
0x0001516c      4c89ff         mov rdi, r15
0x0001516f      e85cdffeff     call sym..plt.got
0x00015174      e949f8ffff     jmp 0x149c2
0x00015179      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/vasnprintf.c:1275
0x0001517c      e84fdffeff     call sym..plt.got
0x00015181      e93cffffff     jmp 0x150c2
0x00015186      e8b5d7feff     call sym.imp.abort
0x0001518b      0f1f440000     nop dword [rax + rax]
0x00015190      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x00015197      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x0001519e      4883c020       add rax, 0x20                           ; "@"
0x000151a2      4839c7         cmp rdi, rax
0x000151a5      7405           je 0x151ac
0x000151a7      e824dffeff     call sym..plt.got
0x000151ac      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x000151b3      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x000151ba      4883c010       add rax, 0x10
0x000151be      4839c7         cmp rdi, rax
0x000151c1      7405           je 0x151c8
0x000151c3      e808dffeff     call sym..plt.got
0x000151c8      e883d7feff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/vasnprintf.c:5040
0x000151cd      4531ff         xor r15d, r15d
0x000151d0      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x3e300000
0x000151d6      e964f2ffff     jmp 0x1443f
0x000151db      4c89f3         mov rbx, r14
0x000151de      31c0           xor eax, eax
0x000151e0      4883c301       add rbx, 1
0x000151e4      0f8206010000   jb 0x152f0
0x000151ea      4939dc         cmp r12, rbx
0x000151ed      734d           jae 0x1523c
0x000151ef      4d85e4         test r12, r12
0x000151f2      0f8531010000   jne 0x15329                             ; ../coreutils-8.31/lib/vasnprintf.c:5048
0x000151f8      4883fb0c       cmp rbx, 0xc
0x000151fc      0f870c010000   ja 0x1530e
0x00015202      41bc0c000000   mov r12d, 0xc
0x00015208      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x0001520f      410f94c5       sete r13b
0x00015213      4d85ff         test r15, r15
0x00015216      0f84a0000000   je 0x152bc
0x0001521c      4584ed         test r13b, r13b
0x0001521f      0f8597000000   jne 0x152bc
0x00015225      4c89e6         mov rsi, r12
0x00015228      4c89ff         mov rdi, r15
0x0001522b      e860dcfeff     call sym.imp.realloc
0x00015230      4885c0         test rax, rax
0x00015233      0f8472fcffff   je 0x14eab
0x00015239      4989c7         mov r15, rax
0x0001523c      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00015243      43c6043700     mov byte [r15 + r14], 0
0x00015248      7417           je 0x15261
0x0001524a      4939dc         cmp r12, rbx
0x0001524d      7612           jbe 0x15261
0x0001524f      4c89ff         mov rdi, r15
0x00015252      4889de         mov rsi, rbx
0x00015255      e836dcfeff     call sym.imp.realloc
0x0001525a      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasnprintf.c:5061
0x0001525d      4c0f45f8       cmovne r15, rax
0x00015261      488b85e0fbff.  mov rax, qword [rbp - 0x420]
0x00015268      4885c0         test rax, rax
0x0001526b      7408           je 0x15275
0x0001526d      4889c7         mov rdi, rax
0x00015270      e85bdefeff     call sym..plt.got
0x00015275      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x0001527c      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x00015283      4883c020       add rax, 0x20                           ; "@"
0x00015287      4839c7         cmp rdi, rax
0x0001528a      7405           je 0x15291
0x0001528c      e83fdefeff     call sym..plt.got
0x00015291      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x00015298      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x0001529f      4883c010       add rax, 0x10
0x000152a3      4839c7         cmp rdi, rax
0x000152a6      7405           je 0x152ad
0x000152a8      e823defeff     call sym..plt.got
0x000152ad      488b85e8fbff.  mov rax, qword [rbp - 0x418]
0x000152b4      4c8930         mov qword [rax], r14
0x000152b7      e983f1ffff     jmp 0x1443f
0x000152bc      4c89e7         mov rdi, r12
0x000152bf      e82cdbfeff     call sym.imp.malloc
0x000152c4      4885c0         test rax, rax
0x000152c7      4889c1         mov rcx, rax
0x000152ca      0f84f5f0ffff   je 0x143c5
0x000152d0      4d85f6         test r14, r14
0x000152d3      746b           je 0x15340
0x000152d5      4584ed         test r13b, r13b
0x000152d8      7466           je 0x15340
0x000152da      4c89fe         mov rsi, r15
0x000152dd      4c89f2         mov rdx, r14
0x000152e0      4889c7         mov rdi, rax
0x000152e3      e898dafeff     call sym.imp.memcpy
0x000152e8      4989c7         mov r15, rax
0x000152eb      e94cffffff     jmp 0x1523c                             ; ../coreutils-8.31/lib/vasnprintf.c:4732
0x000152f0      4983fcff       cmp r12, 0xffffffffffffffff
0x000152f4      b801000000     mov eax, 1
0x000152f9      0f843dffffff   je 0x1523c
0x000152ff      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/vasnprintf.c:4421
0x00015302      0f84bdf0ffff   je 0x143c5
0x00015308      0f88b7f0ffff   js 0x143c5
0x0001530e      4885c0         test rax, rax
0x00015311      0f85aef0ffff   jne 0x143c5
0x00015317      4883fbff       cmp rbx, 0xffffffffffffffff
0x0001531b      0f84a4f0ffff   je 0x143c5
0x00015321      4989dc         mov r12, rbx
0x00015324      e9dffeffff     jmp 0x15208
0x00015329      0f8896f0ffff   js 0x143c5
0x0001532f      4d01e4         add r12, r12
0x00015332      4939dc         cmp r12, rbx
0x00015335      0f83cdfeffff   jae 0x15208
0x0001533b      ebd1           jmp 0x1530e
0x0001533d      0f1f00         nop dword [rax]
0x00015340      4989cf         mov r15, rcx
0x00015343      e9f4feffff     jmp 0x1523c
0x00015348      4983fcff       cmp r12, 0xffffffffffffffff
0x0001534c      0f841ef4ffff   je 0x14770
0x00015352      e97af0ffff     jmp 0x143d1
0x00015357      e8d4d7feff     call sym.imp.__stack_chk_fail
0x0001535c      4983fcff       cmp r12, 0xffffffffffffffff
0x00015360      ba01000000     mov edx, 1
0x00015365      0f84e0f3ffff   je 0x1474b
0x0001536b      4d85e4         test r12, r12
0x0001536e      0f8451f0ffff   je 0x143c5
0x00015374      0f89c6fbffff   jns 0x14f40
0x0001537a      e946f0ffff     jmp 0x143c5
0x0001537f      90             nop
;-- fopen_safer:
0x00015380      4154           push r12                                ; ../coreutils-8.31/lib/fopen-safer.c:32
0x00015382      55             push rbp
0x00015383      4889f5         mov rbp, rsi
0x00015386      53             push rbx
0x00015387      e804dcfeff     call sym.imp.fopen                      ; ../coreutils-8.31/lib/fopen-safer.c:33
0x0001538c      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fopen-safer.c:35
0x0001538f      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/fopen-safer.c:33
0x00015392      740d           je 0x153a1                              ; ../coreutils-8.31/lib/fopen-safer.c:35
0x00015394      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/fopen-safer.c:37
0x00015397      e814dafeff     call sym.imp.fileno
0x0001539c      83f802         cmp eax, 2                              ; ../coreutils-8.31/lib/fopen-safer.c:39
0x0001539f      760f           jbe 0x153b0
0x000153a1      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:63
0x000153a4      5b             pop rbx
0x000153a5      5d             pop rbp
0x000153a6      415c           pop r12
0x000153a8      c3             ret
0x000153a9      0f1f80000000.  nop dword [rax]
0x000153b0      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fopen-safer.c:41
0x000153b2      e889ebffff     call sym.dup_safer
0x000153b7      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fopen-safer.c:43
0x000153b9      4189c4         mov r12d, eax                           ; ../coreutils-8.31/lib/fopen-safer.c:41
0x000153bc      783a           js 0x153f8                              ; ../coreutils-8.31/lib/fopen-safer.c:43
0x000153be      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:51
0x000153c1      e88aebffff     call sym.rpl_fclose
0x000153c6      85c0           test eax, eax
0x000153c8      7513           jne 0x153dd
0x000153ca      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fopen-safer.c:52
0x000153cd      4489e7         mov edi, r12d
0x000153d0      e8dbdafeff     call sym.imp.fdopen
0x000153d5      4885c0         test rax, rax
0x000153d8      4889c3         mov rbx, rax
0x000153db      75c4           jne 0x153a1
0x000153dd      e86ed5feff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fopen-safer.c:54
0x000153e2      8b28           mov ebp, dword [rax]
0x000153e4      4889c3         mov rbx, rax
0x000153e7      4489e7         mov edi, r12d                           ; ../coreutils-8.31/lib/fopen-safer.c:55
0x000153ea      e841d8feff     call sym.imp.close
0x000153ef      892b           mov dword [rbx], ebp                    ; ../coreutils-8.31/lib/fopen-safer.c:56
0x000153f1      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fopen-safer.c:57
0x000153f3      ebac           jmp 0x153a1
0x000153f5      0f1f00         nop dword [rax]
0x000153f8      e853d5feff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fopen-safer.c:45
0x000153fd      448b20         mov r12d, dword [rax]
0x00015400      4889c5         mov rbp, rax
0x00015403      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:46
0x00015406      e845ebffff     call sym.rpl_fclose
0x0001540b      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fopen-safer.c:48
0x0001540d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fopen-safer.c:47
0x00015411      eb8e           jmp 0x153a1                             ; ../coreutils-8.31/lib/fopen-safer.c:48
0x00015413      662e0f1f8400.  nop word cs:[rax + rax]
0x0001541d      0f1f00         nop dword [rax]
;-- printf_fetchargs:
0x00015420      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/printf-args.c:37
0x00015424      488b4608       mov rax, qword [rsi + 8]
0x00015428      7463           je 0x1548d
0x0001542a      4c8d05df3a00.  lea r8, [0x00018f10]                    ; ../coreutils-8.31/lib/printf-args.c:42
0x00015431      4c8d15383b00.  lea r10, obj.wide_null_string.2696      ; 0x18f70 ; U"(NULL)"
0x00015438      4c8d0dbd3a00.  lea r9, [0x00018efc]                    ; "(NULL)"
0x0001543f      31c9           xor ecx, ecx
0x00015441      0f1f80000000.  nop dword [rax]
0x00015448      833816         cmp dword [rax], 0x16
0x0001544b      7743           ja 0x15490
0x0001544d      8b10           mov edx, dword [rax]
0x0001544f      49631490       movsxd rdx, dword [r8 + rdx*4]
0x00015453      4c01c2         add rdx, r8
0x00015456      ffe2           jmp rdx
0x00015458      0f1f84000000.  nop dword [rax + rax]
0x00015460      488b5708       mov rdx, qword [rdi + 8]                ; stddef.h:38      && !defined(__need_wint_t))
0x00015464      4883c20f       add rdx, 0xf
0x00015468      4883e2f0       and rdx, 0xfffffffffffffff0
0x0001546c      4c8d5a10       lea r11, [rdx + 0x10]
0x00015470      4c895f08       mov qword [rdi + 8], r11
0x00015474      db2a           fld xword [rdx]
0x00015476      db7810         fstp xword [rax + 0x10]
0x00015479      0f1f80000000.  nop dword [rax]
0x00015480      4883c101       add rcx, 1
0x00015484      4883c020       add rax, 0x20                           ; stddef.h:-9 ; "@"
0x00015488      48390e         cmp qword [rsi], rcx
0x0001548b      77bb           ja 0x15448
0x0001548d      31c0           xor eax, eax
0x0001548f      c3             ret
0x00015490      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00015495      c3             ret
0x00015496      448b1f         mov r11d, dword [rdi]
0x00015499      4183fb2f       cmp r11d, 0x2f
0x0001549d      0f8737010000   ja 0x155da
0x000154a3      4489da         mov edx, r11d
0x000154a6      48035710       add rdx, qword [rdi + 0x10]             ; stddef.h:-54
0x000154aa      4183c308       add r11d, 8
0x000154ae      44891f         mov dword [rdi], r11d
0x000154b1      488b12         mov rdx, qword [rdx]
0x000154b4      48895010       mov qword [rax + 0x10], rdx
0x000154b8      ebc6           jmp 0x15480
0x000154ba      448b1f         mov r11d, dword [rdi]
0x000154bd      4183fb2f       cmp r11d, 0x2f
0x000154c1      0f8735010000   ja 0x155fc
0x000154c7      4489da         mov edx, r11d
0x000154ca      48035710       add rdx, qword [rdi + 0x10]
0x000154ce      4183c308       add r11d, 8
0x000154d2      44891f         mov dword [rdi], r11d
0x000154d5      8b12           mov edx, dword [rdx]
0x000154d7      895010         mov dword [rax + 0x10], edx
0x000154da      eba4           jmp 0x15480
0x000154dc      448b1f         mov r11d, dword [rdi]
0x000154df      4183fb2f       cmp r11d, 0x2f
0x000154e3      0f8702010000   ja 0x155eb
0x000154e9      4489da         mov edx, r11d                           ; stddef.h:-47
0x000154ec      48035710       add rdx, qword [rdi + 0x10]
0x000154f0      4183c308       add r11d, 8
0x000154f4      44891f         mov dword [rdi], r11d
0x000154f7      8b12           mov edx, dword [rdx]
0x000154f9      885010         mov byte [rax + 0x10], dl
0x000154fc      eb82           jmp 0x15480
0x000154fe      448b1f         mov r11d, dword [rdi]
0x00015501      4183fb2f       cmp r11d, 0x2f
0x00015505      0f879f000000   ja 0x155aa
0x0001550b      4489da         mov edx, r11d
0x0001550e      48035710       add rdx, qword [rdi + 0x10]
0x00015512      4183c308       add r11d, 8
0x00015516      44891f         mov dword [rdi], r11d
0x00015519      8b12           mov edx, dword [rdx]
0x0001551b      66895010       mov word [rax + 0x10], dx
0x0001551f      e95cffffff     jmp 0x15480
0x00015524      448b1f         mov r11d, dword [rdi]
0x00015527      4183fb2f       cmp r11d, 0x2f
0x0001552b      0f878a000000   ja 0x155bb
0x00015531      4489da         mov edx, r11d
0x00015534      48035710       add rdx, qword [rdi + 0x10]
0x00015538      4183c308       add r11d, 8
0x0001553c      44891f         mov dword [rdi], r11d
0x0001553f      488b12         mov rdx, qword [rdx]
0x00015542      4885d2         test rdx, rdx
0x00015545      490f44d1       cmove rdx, r9                           ; stddef.h:-24
0x00015549      48895010       mov qword [rax + 0x10], rdx
0x0001554d      e92effffff     jmp 0x15480
0x00015552      448b5f04       mov r11d, dword [rdi + 4]
0x00015556      4181fbaf0000.  cmp r11d, 0xaf
0x0001555d      0f87aa000000   ja 0x1560d
0x00015563      4489da         mov edx, r11d
0x00015566      48035710       add rdx, qword [rdi + 0x10]
0x0001556a      4183c310       add r11d, 0x10
0x0001556e      44895f04       mov dword [rdi + 4], r11d
0x00015572      f20f1002       movsd xmm0, qword [rdx]
0x00015576      f20f114010     movsd qword [rax + 0x10], xmm0
0x0001557b      e900ffffff     jmp 0x15480
0x00015580      448b1f         mov r11d, dword [rdi]
0x00015583      4183fb2f       cmp r11d, 0x2f
0x00015587      7743           ja 0x155cc
0x00015589      4489da         mov edx, r11d
0x0001558c      48035710       add rdx, qword [rdi + 0x10]
0x00015590      4183c308       add r11d, 8
0x00015594      44891f         mov dword [rdi], r11d
0x00015597      488b12         mov rdx, qword [rdx]
0x0001559a      4885d2         test rdx, rdx
0x0001559d      490f44d2       cmove rdx, r10
0x000155a1      48895010       mov qword [rax + 0x10], rdx
0x000155a5      e9d6feffff     jmp 0x15480
0x000155aa      488b5708       mov rdx, qword [rdi + 8]
0x000155ae      4c8d5a08       lea r11, [rdx + 8]
0x000155b2      4c895f08       mov qword [rdi + 8], r11
0x000155b6      e95effffff     jmp 0x15519
0x000155bb      488b5708       mov rdx, qword [rdi + 8]
0x000155bf      4c8d5a08       lea r11, [rdx + 8]
0x000155c3      4c895f08       mov qword [rdi + 8], r11
0x000155c7      e973ffffff     jmp 0x1553f
0x000155cc      488b5708       mov rdx, qword [rdi + 8]
0x000155d0      4c8d5a08       lea r11, [rdx + 8]
0x000155d4      4c895f08       mov qword [rdi + 8], r11
0x000155d8      ebbd           jmp 0x15597
0x000155da      488b5708       mov rdx, qword [rdi + 8]
0x000155de      4c8d5a08       lea r11, [rdx + 8]
0x000155e2      4c895f08       mov qword [rdi + 8], r11
0x000155e6      e9c6feffff     jmp 0x154b1
0x000155eb      488b5708       mov rdx, qword [rdi + 8]
0x000155ef      4c8d5a08       lea r11, [rdx + 8]
0x000155f3      4c895f08       mov qword [rdi + 8], r11
0x000155f7      e9fbfeffff     jmp 0x154f7
0x000155fc      488b5708       mov rdx, qword [rdi + 8]
0x00015600      4c8d5a08       lea r11, [rdx + 8]
0x00015604      4c895f08       mov qword [rdi + 8], r11
0x00015608      e9c8feffff     jmp 0x154d5
0x0001560d      488b5708       mov rdx, qword [rdi + 8]
0x00015611      4c8d5a08       lea r11, [rdx + 8]
0x00015615      4c895f08       mov qword [rdi + 8], r11
0x00015619      e954ffffff     jmp 0x15572
0x0001561e      6690           nop
;-- printf_parse:
0x00015620      4157           push r15
0x00015622      4156           push r14
0x00015624      488d4e20       lea rcx, [rsi + 0x20]
0x00015628      4155           push r13
0x0001562a      4154           push r12
0x0001562c      488d4210       lea rax, [rdx + 0x10]
0x00015630      55             push rbp
0x00015631      53             push rbx
0x00015632      4989f6         mov r14, rsi
0x00015635      4989d7         mov r15, rdx
0x00015638      31db           xor ebx, ebx
0x0001563a      41b907000000   mov r9d, 7
0x00015640      4883ec58       sub rsp, 0x58
0x00015644      41ba07000000   mov r10d, 7
0x0001564a      48c706000000.  mov qword [rsi], 0
0x00015651      48894e08       mov qword [rsi + 8], rcx
0x00015655      48894c2428     mov qword [rsp + 0x28], rcx
0x0001565a      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00015661      48c702000000.  mov qword [rdx], 0
0x00015668      4889442408     mov qword [rsp + 8], rax
0x0001566d      48894208       mov qword [rdx + 8], rax
0x00015671      48c744241800.  mov qword [rsp + 0x18], 0
0x0001567a      48c744241000.  mov qword [rsp + 0x10], 0
0x00015683      48c744242000.  mov qword [rsp + 0x20], 0
0x0001568c      eb0d           jmp 0x1569b
0x0001568e      6690           nop
0x00015690      3c25           cmp al, 0x25
0x00015692      488d6f01       lea rbp, [rdi + 1]
0x00015696      7440           je 0x156d8
0x00015698      4889ef         mov rdi, rbp
0x0001569b      0fb607         movzx eax, byte [rdi]
0x0001569e      84c0           test al, al
0x000156a0      75ee           jne 0x15690
0x000156a2      488d049b       lea rax, [rbx + rbx*4]
0x000156a6      488d0443       lea rax, [rbx + rax*2]
0x000156aa      48893cc1       mov qword [rcx + rax*8], rdi
0x000156ae      488b442410     mov rax, qword [rsp + 0x10]
0x000156b3      49894610       mov qword [r14 + 0x10], rax
0x000156b7      488b442418     mov rax, qword [rsp + 0x18]
0x000156bc      49894618       mov qword [r14 + 0x18], rax
0x000156c0      31c0           xor eax, eax
0x000156c2      4883c458       add rsp, 0x58
0x000156c6      5b             pop rbx
0x000156c7      5d             pop rbp
0x000156c8      415c           pop r12
0x000156ca      415d           pop r13
0x000156cc      415e           pop r14
0x000156ce      415f           pop r15
0x000156d0      c3             ret
0x000156d1      0f1f80000000.  nop dword [rax]
0x000156d8      488d049b       lea rax, [rbx + rbx*4]
0x000156dc      4d89c5         mov r13, r8
0x000156df      488d0443       lea rax, [rbx + rax*2]
0x000156e3      4c8d24c1       lea r12, [rcx + rax*8]
0x000156e7      49893c24       mov qword [r12], rdi
0x000156eb      41c744241000.  mov dword [r12 + 0x10], 0
0x000156f4      49c744241800.  mov qword [r12 + 0x18], 0
0x000156fd      49c744242000.  mov qword [r12 + 0x20], 0
0x00015706      4d89442428     mov qword [r12 + 0x28], r8
0x0001570b      49c744243000.  mov qword [r12 + 0x30], 0
0x00015714      49c744243800.  mov qword [r12 + 0x38], 0
0x0001571d      4d89442440     mov qword [r12 + 0x40], r8
0x00015722      4d89442450     mov qword [r12 + 0x50], r8
0x00015727      0fb65f01       movzx ebx, byte [rdi + 1]
0x0001572b      8d43d0         lea eax, [rbx - 0x30]
0x0001572e      3c09           cmp al, 9
0x00015730      773c           ja 0x1576e
0x00015732      e933040000     jmp 0x15b6a
0x00015737      660f1f840000.  nop word [rax + rax]
0x00015740      80fb2d         cmp bl, 0x2d
0x00015743      7443           je 0x15788
0x00015745      80fb2b         cmp bl, 0x2b
0x00015748      7446           je 0x15790
0x0001574a      80fb20         cmp bl, 0x20                            ; "@"
0x0001574d      7451           je 0x157a0
0x0001574f      80fb23         cmp bl, 0x23
0x00015752      745c           je 0x157b0
0x00015754      80fb30         cmp bl, 0x30
0x00015757      7467           je 0x157c0
0x00015759      80fb49         cmp bl, 0x49
0x0001575c      7572           jne 0x157d0
0x0001575e      41834c241040   or dword [r12 + 0x10], 0x40             ; segment.PHDR
                                                                       ; [0x40:4]=6
0x00015764      0f1f4000       nop dword [rax]
0x00015768      0fb618         movzx ebx, byte [rax]
0x0001576b      4889c5         mov rbp, rax
0x0001576e      488d4501       lea rax, [rbp + 1]
0x00015772      80fb27         cmp bl, 0x27
0x00015775      4889c2         mov rdx, rax
0x00015778      75c6           jne 0x15740
0x0001577a      41834c241001   or dword [r12 + 0x10], 1
0x00015780      ebe6           jmp 0x15768
0x00015782      660f1f440000   nop word [rax + rax]
0x00015788      41834c241002   or dword [r12 + 0x10], 2
0x0001578e      ebd8           jmp 0x15768
0x00015790      41834c241004   or dword [r12 + 0x10], 4
0x00015796      ebd0           jmp 0x15768
0x00015798      0f1f84000000.  nop dword [rax + rax]
0x000157a0      41834c241008   or dword [r12 + 0x10], 8
0x000157a6      ebc0           jmp 0x15768
0x000157a8      0f1f84000000.  nop dword [rax + rax]
0x000157b0      41834c241010   or dword [r12 + 0x10], 0x10             ; [0x10:4]=0x3e0003
0x000157b6      ebb0           jmp 0x15768
0x000157b8      0f1f84000000.  nop dword [rax + rax]
0x000157c0      41834c241020   or dword [r12 + 0x10], 0x20             ; [0x20:4]=64 ; "@"
0x000157c6      eba0           jmp 0x15768
0x000157c8      0f1f84000000.  nop dword [rax + rax]
0x000157d0      80fb2a         cmp bl, 0x2a
0x000157d3      0f84b0010000   je 0x15989
0x000157d9      8d4bd0         lea ecx, [rbx - 0x30]
0x000157dc      80f909         cmp cl, 9
0x000157df      0f8612040000   jbe 0x15bf7
0x000157e5      80fb2e         cmp bl, 0x2e
0x000157e8      0f84d1020000   je 0x15abf
0x000157ee      31c0           xor eax, eax
0x000157f0      be01000000     mov esi, 1
0x000157f5      eb30           jmp 0x15827
0x000157f7      660f1f840000.  nop word [rax + rax]
0x00015800      80fb4c         cmp bl, 0x4c
0x00015803      743b           je 0x15840
0x00015805      80fb6c         cmp bl, 0x6c
0x00015808      7416           je 0x15820
0x0001580a      80fb6a         cmp bl, 0x6a
0x0001580d      7411           je 0x15820
0x0001580f      89da           mov edx, ebx
0x00015811      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00015814      80fa5a         cmp dl, 0x5a
0x00015817      7407           je 0x15820
0x00015819      80fb74         cmp bl, 0x74
0x0001581c      752a           jne 0x15848
0x0001581e      6690           nop
0x00015820      83c008         add eax, 8
0x00015823      0fb65d00       movzx ebx, byte [rbp]
0x00015827      4883c501       add rbp, 1
0x0001582b      80fb68         cmp bl, 0x68
0x0001582e      75d0           jne 0x15800
0x00015830      89c1           mov ecx, eax
0x00015832      89f2           mov edx, esi
0x00015834      83e101         and ecx, 1
0x00015837      d3e2           shl edx, cl
0x00015839      09d0           or eax, edx
0x0001583b      ebe6           jmp 0x15823
0x0001583d      0f1f00         nop dword [rax]
0x00015840      83c804         or eax, 4
0x00015843      ebde           jmp 0x15823
0x00015845      0f1f00         nop dword [rax]
0x00015848      8d53db         lea edx, [rbx - 0x25]
0x0001584b      80fa53         cmp dl, 0x53
0x0001584e      0f8717060000   ja 0x15e6b
0x00015854      488d0d313700.  lea rcx, [0x00018f8c]
0x0001585b      0fb6d2         movzx edx, dl
0x0001585e      48631491       movsxd rdx, dword [rcx + rdx*4]
0x00015862      4801ca         add rdx, rcx
0x00015865      ffe2           jmp rdx
0x00015867      41bb10000000   mov r11d, 0x10
0x0001586d      bb73000000     mov ebx, 0x73                           ; 's'
0x00015872      660f1f440000   nop word [rax + rax]
0x00015878      4983fdff       cmp r13, 0xffffffffffffffff
0x0001587c      0f84b5060000   je 0x15f37
0x00015882      4d896c2450     mov qword [r12 + 0x50], r13
0x00015887      4d39e9         cmp r9, r13
0x0001588a      498b4f08       mov rcx, qword [r15 + 8]
0x0001588e      0f861c060000   jbe 0x15eb0
0x00015894      498b07         mov rax, qword [r15]
0x00015897      4889c2         mov rdx, rax
0x0001589a      48c1e205       shl rdx, 5
0x0001589e      4801ca         add rdx, rcx
0x000158a1      4c39e8         cmp rax, r13
0x000158a4      7720           ja 0x158c6
0x000158a6      662e0f1f8400.  nop word cs:[rax + rax]
0x000158b0      4883c001       add rax, 1
0x000158b4      c70200000000   mov dword [rdx], 0
0x000158ba      4883c220       add rdx, 0x20                           ; "@"
0x000158be      4c39e8         cmp rax, r13
0x000158c1      76ed           jbe 0x158b0
0x000158c3      498907         mov qword [r15], rax
0x000158c6      49c1e505       shl r13, 5
0x000158ca      4a8d0429       lea rax, [rcx + r13]
0x000158ce      8b10           mov edx, dword [rax]
0x000158d0      85d2           test edx, edx
0x000158d2      0f85cb050000   jne 0x15ea3
0x000158d8      448918         mov dword [rax], r11d
0x000158db      41885c2448     mov byte [r12 + 0x48], bl
0x000158e0      498b06         mov rax, qword [r14]
0x000158e3      49896c2408     mov qword [r12 + 8], rbp
0x000158e8      488d5801       lea rbx, [rax + 1]
0x000158ec      4939da         cmp r10, rbx
0x000158ef      49891e         mov qword [r14], rbx
0x000158f2      0f8788000000   ja 0x15980
0x000158f8      4d85d2         test r10, r10
0x000158fb      0f88a6090000   js 0x162a7
0x00015901      4d01d2         add r10, r10
0x00015904      48b8bae8a28b.  movabs rax, 0x2e8ba2e8ba2e8ba
0x0001590e      4939c2         cmp r10, rax
0x00015911      0f8790090000   ja 0x162a7
0x00015917      4b8d0492       lea rax, [r10 + r10*4]
0x0001591b      498b7e08       mov rdi, qword [r14 + 8]
0x0001591f      48397c2428     cmp qword [rsp + 0x28], rdi
0x00015924      4c894c2440     mov qword [rsp + 0x40], r9
0x00015929      4c89542438     mov qword [rsp + 0x38], r10
0x0001592e      498d0442       lea rax, [r10 + rax*2]
0x00015932      4c89442430     mov qword [rsp + 0x30], r8
0x00015937      488d34c50000.  lea rsi, [rax*8]
0x0001593f      0f84b8060000   je 0x15ffd
0x00015945      e846d5feff     call sym.imp.realloc
0x0001594a      4885c0         test rax, rax
0x0001594d      4889c1         mov rcx, rax
0x00015950      4c8b442430     mov r8, qword [rsp + 0x30]
0x00015955      4c8b542438     mov r10, qword [rsp + 0x38]
0x0001595a      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x0001595f      0f8442090000   je 0x162a7
0x00015965      488b442428     mov rax, qword [rsp + 0x28]
0x0001596a      493b4608       cmp rax, qword [r14 + 8]
0x0001596e      498b1e         mov rbx, qword [r14]
0x00015971      0f84a9060000   je 0x16020
0x00015977      49894e08       mov qword [r14 + 8], rcx
0x0001597b      e918fdffff     jmp 0x15698
0x00015980      498b4e08       mov rcx, qword [r14 + 8]
0x00015984      e90ffdffff     jmp 0x15698
0x00015989      488b742410     mov rsi, qword [rsp + 0x10]
0x0001598e      b901000000     mov ecx, 1
0x00015993      49896c2418     mov qword [r12 + 0x18], rbp
0x00015998      4989442420     mov qword [r12 + 0x20], rax
0x0001599d      4885f6         test rsi, rsi
0x000159a0      480f45ce       cmovne rcx, rsi
0x000159a4      48894c2410     mov qword [rsp + 0x10], rcx
0x000159a9      0fb64d01       movzx ecx, byte [rbp + 1]
0x000159ad      8d71d0         lea esi, [rcx - 0x30]
0x000159b0      4080fe09       cmp sil, 9
0x000159b4      0f86db020000   jbe 0x15c95
0x000159ba      488b742420     mov rsi, qword [rsp + 0x20]
0x000159bf      4883feff       cmp rsi, 0xffffffffffffffff
0x000159c3      488d5601       lea rdx, [rsi + 1]
0x000159c7      4989742428     mov qword [r12 + 0x28], rsi
0x000159cc      0f8499040000   je 0x15e6b
0x000159d2      488b5c2420     mov rbx, qword [rsp + 0x20]
0x000159d7      4889c5         mov rbp, rax
0x000159da      4889542420     mov qword [rsp + 0x20], rdx
0x000159df      4939d9         cmp r9, rbx
0x000159e2      498b4f08       mov rcx, qword [r15 + 8]
0x000159e6      0f8776060000   ja 0x16062
0x000159ec      4d01c9         add r9, r9
0x000159ef      488d4301       lea rax, [rbx + 1]
0x000159f3      4939d9         cmp r9, rbx
0x000159f6      4c0f46c8       cmovbe r9, rax
0x000159fa      48b8ffffffff.  movabs rax, 0x7ffffffffffffff           ; 576460752303423487
0x00015a04      4939c1         cmp r9, rax
0x00015a07      0f879e080000   ja 0x162ab
0x00015a0d      4c89ce         mov rsi, r9
0x00015a10      4c894c2440     mov qword [rsp + 0x40], r9
0x00015a15      4c89542438     mov qword [rsp + 0x38], r10
0x00015a1a      48c1e605       shl rsi, 5
0x00015a1e      48394c2408     cmp qword [rsp + 8], rcx
0x00015a23      4c89442430     mov qword [rsp + 0x30], r8
0x00015a28      0f8413070000   je 0x16141
0x00015a2e      4889cf         mov rdi, rcx
0x00015a31      e85ad4feff     call sym.imp.realloc
0x00015a36      498b5708       mov rdx, qword [r15 + 8]
0x00015a3a      4c8b442430     mov r8, qword [rsp + 0x30]
0x00015a3f      4889c1         mov rcx, rax
0x00015a42      4c8b542438     mov r10, qword [rsp + 0x38]
0x00015a47      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x00015a4c      4885c9         test rcx, rcx
0x00015a4f      0f84b2080000   je 0x16307
0x00015a55      4839542408     cmp qword [rsp + 8], rdx
0x00015a5a      498b07         mov rax, qword [r15]
0x00015a5d      0f84b8070000   je 0x1621b
0x00015a63      49894f08       mov qword [r15 + 8], rcx
0x00015a67      4889c2         mov rdx, rax
0x00015a6a      48c1e205       shl rdx, 5
0x00015a6e      4801ca         add rdx, rcx
0x00015a71      4839d8         cmp rax, rbx
0x00015a74      7720           ja 0x15a96
0x00015a76      662e0f1f8400.  nop word cs:[rax + rax]
0x00015a80      4883c001       add rax, 1
0x00015a84      c70200000000   mov dword [rdx], 0
0x00015a8a      4883c220       add rdx, 0x20                           ; "@"
0x00015a8e      4839d8         cmp rax, rbx
0x00015a91      76ed           jbe 0x15a80
0x00015a93      498907         mov qword [r15], rax
0x00015a96      48c1e305       shl rbx, 5
0x00015a9a      488d0419       lea rax, [rcx + rbx]
0x00015a9e      8b10           mov edx, dword [rax]
0x00015aa0      85d2           test edx, edx
0x00015aa2      0f85d3040000   jne 0x15f7b
0x00015aa8      c70005000000   mov dword [rax], 5
0x00015aae      0fb65d00       movzx ebx, byte [rbp]
0x00015ab2      488d5501       lea rdx, [rbp + 1]
0x00015ab6      80fb2e         cmp bl, 0x2e
0x00015ab9      0f852ffdffff   jne 0x157ee
0x00015abf      807d012a       cmp byte [rbp + 1], 0x2a
0x00015ac3      49896c2430     mov qword [r12 + 0x30], rbp
0x00015ac8      0f8580010000   jne 0x15c4e
0x00015ace      488b742418     mov rsi, qword [rsp + 0x18]
0x00015ad3      4c8d5d02       lea r11, [rbp + 2]
0x00015ad7      b802000000     mov eax, 2
0x00015adc      4d895c2438     mov qword [r12 + 0x38], r11
0x00015ae1      4883fe02       cmp rsi, 2
0x00015ae5      480f43c6       cmovae rax, rsi
0x00015ae9      4889442418     mov qword [rsp + 0x18], rax
0x00015aee      0fbe4502       movsx eax, byte [rbp + 2]
0x00015af2      8d50d0         lea edx, [rax - 0x30]
0x00015af5      80fa09         cmp dl, 9
0x00015af8      0f868e060000   jbe 0x1618c
0x00015afe      498b5c2440     mov rbx, qword [r12 + 0x40]
0x00015b03      4883fbff       cmp rbx, 0xffffffffffffffff
0x00015b07      0f8458060000   je 0x16165
0x00015b0d      4939d9         cmp r9, rbx
0x00015b10      498b4f08       mov rcx, qword [r15 + 8]
0x00015b14      0f8665050000   jbe 0x1607f
0x00015b1a      498b07         mov rax, qword [r15]
0x00015b1d      4889c2         mov rdx, rax
0x00015b20      48c1e205       shl rdx, 5
0x00015b24      4801ca         add rdx, rcx
0x00015b27      4839d8         cmp rax, rbx
0x00015b2a      771a           ja 0x15b46
0x00015b2c      0f1f4000       nop dword [rax]
0x00015b30      4883c001       add rax, 1
0x00015b34      c70200000000   mov dword [rdx], 0
0x00015b3a      4883c220       add rdx, 0x20                           ; "@"
0x00015b3e      4839d8         cmp rax, rbx
0x00015b41      76ed           jbe 0x15b30
0x00015b43      498907         mov qword [r15], rax
0x00015b46      48c1e305       shl rbx, 5
0x00015b4a      488d0419       lea rax, [rcx + rbx]
0x00015b4e      8b10           mov edx, dword [rax]
0x00015b50      85d2           test edx, edx
0x00015b52      0f8512050000   jne 0x1606a
0x00015b58      c70005000000   mov dword [rax], 5
0x00015b5e      4c89dd         mov rbp, r11
0x00015b61      410fb61b       movzx ebx, byte [r11]
0x00015b65      e984fcffff     jmp 0x157ee
0x00015b6a      4889e8         mov rax, rbp
0x00015b6d      0f1f00         nop dword [rax]
0x00015b70      4883c001       add rax, 1
0x00015b74      0fb610         movzx edx, byte [rax]
0x00015b77      8d4ad0         lea ecx, [rdx - 0x30]
0x00015b7a      80f909         cmp cl, 9
0x00015b7d      76f1           jbe 0x15b70
0x00015b7f      80fa24         cmp dl, 0x24
0x00015b82      4d89c5         mov r13, r8
0x00015b85      0f85e3fbffff   jne 0x1576e
0x00015b8b      31d2           xor edx, edx
0x00015b8d      0fbec3         movsx eax, bl
0x00015b90      48bf99999999.  movabs rdi, 0x1999999999999999
0x00015b9a      4c89c6         mov rsi, r8
0x00015b9d      83e830         sub eax, 0x30
0x00015ba0      4839fa         cmp rdx, rdi
0x00015ba3      4898           cdqe
0x00015ba5      7707           ja 0x15bae
0x00015ba7      488d3492       lea rsi, [rdx + rdx*4]
0x00015bab      4801f6         add rsi, rsi
0x00015bae      4889e9         mov rcx, rbp
0x00015bb1      4801f0         add rax, rsi
0x00015bb4      0fb65d01       movzx ebx, byte [rbp + 1]
0x00015bb8      400f92c6       setb sil
0x00015bbc      4883c501       add rbp, 1
0x00015bc0      4889c2         mov rdx, rax
0x00015bc3      400fb6f6       movzx esi, sil
0x00015bc7      4885f6         test rsi, rsi
0x00015bca      8d7bd0         lea edi, [rbx - 0x30]
0x00015bcd      0f858b030000   jne 0x15f5e
0x00015bd3      4080ff09       cmp dil, 9
0x00015bd7      76b4           jbe 0x15b8d
0x00015bd9      4989c5         mov r13, rax
0x00015bdc      4983ed01       sub r13, 1
0x00015be0      4983fdfd       cmp r13, 0xfffffffffffffffd
0x00015be4      0f8781020000   ja 0x15e6b
0x00015bea      488d6902       lea rbp, [rcx + 2]
0x00015bee      0fb65902       movzx ebx, byte [rcx + 2]
0x00015bf2      e977fbffff     jmp 0x1576e
0x00015bf7      49896c2418     mov qword [r12 + 0x18], rbp
0x00015bfc      0fb67d00       movzx edi, byte [rbp]
0x00015c00      4889ee         mov rsi, rbp
0x00015c03      8d4fd0         lea ecx, [rdi - 0x30]
0x00015c06      80f909         cmp cl, 9
0x00015c09      760c           jbe 0x15c17
0x00015c0b      eb33           jmp 0x15c40
0x00015c0d      0f1f00         nop dword [rax]
0x00015c10      4889c5         mov rbp, rax
0x00015c13      4883c001       add rax, 1
0x00015c17      0fb638         movzx edi, byte [rax]
0x00015c1a      8d57d0         lea edx, [rdi - 0x30]
0x00015c1d      80fa09         cmp dl, 9
0x00015c20      76ee           jbe 0x15c10
0x00015c22      4889c1         mov rcx, rax
0x00015c25      488d5502       lea rdx, [rbp + 2]
0x00015c29      4889c5         mov rbp, rax
0x00015c2c      4829f1         sub rcx, rsi
0x00015c2f      488b742410     mov rsi, qword [rsp + 0x10]
0x00015c34      4839ce         cmp rsi, rcx
0x00015c37      480f43ce       cmovae rcx, rsi
0x00015c3b      48894c2410     mov qword [rsp + 0x10], rcx
0x00015c40      49896c2420     mov qword [r12 + 0x20], rbp
0x00015c45      0fb65d00       movzx ebx, byte [rbp]
0x00015c49      e997fbffff     jmp 0x157e5
0x00015c4e      0fb64501       movzx eax, byte [rbp + 1]
0x00015c52      83e830         sub eax, 0x30
0x00015c55      3c09           cmp al, 9
0x00015c57      7715           ja 0x15c6e
0x00015c59      0f1f80000000.  nop dword [rax]
0x00015c60      4883c201       add rdx, 1
0x00015c64      0fb602         movzx eax, byte [rdx]
0x00015c67      83e830         sub eax, 0x30
0x00015c6a      3c09           cmp al, 9
0x00015c6c      76f2           jbe 0x15c60
0x00015c6e      488b742418     mov rsi, qword [rsp + 0x18]
0x00015c73      4889d0         mov rax, rdx
0x00015c76      4989542438     mov qword [r12 + 0x38], rdx
0x00015c7b      4829e8         sub rax, rbp
0x00015c7e      0fb61a         movzx ebx, byte [rdx]
0x00015c81      4889d5         mov rbp, rdx
0x00015c84      4839c6         cmp rsi, rax
0x00015c87      480f43c6       cmovae rax, rsi
0x00015c8b      4889442418     mov qword [rsp + 0x18], rax
0x00015c90      e959fbffff     jmp 0x157ee
0x00015c95      4889c6         mov rsi, rax
0x00015c98      4883c601       add rsi, 1
0x00015c9c      0fb63e         movzx edi, byte [rsi]
0x00015c9f      448d5fd0       lea r11d, [rdi - 0x30]
0x00015ca3      4180fb09       cmp r11b, 9
0x00015ca7      76ef           jbe 0x15c98
0x00015ca9      4080ff24       cmp dil, 0x24
0x00015cad      0f8507fdffff   jne 0x159ba
0x00015cb3      31f6           xor esi, esi
0x00015cb5      0fbec1         movsx eax, cl
0x00015cb8      48bf99999999.  movabs rdi, 0x1999999999999999
0x00015cc2      4c89c1         mov rcx, r8
0x00015cc5      83e830         sub eax, 0x30
0x00015cc8      4839fe         cmp rsi, rdi
0x00015ccb      4898           cdqe
0x00015ccd      7707           ja 0x15cd6
0x00015ccf      488d0cb6       lea rcx, [rsi + rsi*4]
0x00015cd3      4801c9         add rcx, rcx
0x00015cd6      4889d5         mov rbp, rdx
0x00015cd9      4531db         xor r11d, r11d
0x00015cdc      4801c8         add rax, rcx
0x00015cdf      0fb64a01       movzx ecx, byte [rdx + 1]
0x00015ce3      410f92c3       setb r11b
0x00015ce7      4883c201       add rdx, 1
0x00015ceb      4889c6         mov rsi, rax
0x00015cee      4d85db         test r11, r11
0x00015cf1      8d79d0         lea edi, [rcx - 0x30]
0x00015cf4      0f8504050000   jne 0x161fe
0x00015cfa      4080ff09       cmp dil, 9
0x00015cfe      76b5           jbe 0x15cb5
0x00015d00      488d58ff       lea rbx, [rax - 1]
0x00015d04      4883fbfd       cmp rbx, 0xfffffffffffffffd
0x00015d08      0f875d010000   ja 0x15e6b
0x00015d0e      49895c2428     mov qword [r12 + 0x28], rbx
0x00015d13      4883c502       add rbp, 2
0x00015d17      e9c3fcffff     jmp 0x159df
0x00015d1c      83f80f         cmp eax, 0xf
0x00015d1f      41bb16000000   mov r11d, 0x16
0x00015d25      0f8f4dfbffff   jg 0x15878
0x00015d2b      a804           test al, 4
0x00015d2d      0f8545fbffff   jne 0x15878
0x00015d33      83f807         cmp eax, 7
0x00015d36      41bb15000000   mov r11d, 0x15
0x00015d3c      0f8f36fbffff   jg 0x15878
0x00015d42      a802           test al, 2
0x00015d44      41bb12000000   mov r11d, 0x12
0x00015d4a      0f8528fbffff   jne 0x15878
0x00015d50      4531db         xor r11d, r11d
0x00015d53      a801           test al, 1
0x00015d55      410f94c3       sete r11b
0x00015d59      4183c313       add r11d, 0x13
0x00015d5d      e916fbffff     jmp 0x15878
0x00015d62      660f1f440000   nop word [rax + rax]
0x00015d68      4531db         xor r11d, r11d
0x00015d6b      83f807         cmp eax, 7
0x00015d6e      410f9fc3       setg r11b
0x00015d72      4183c30d       add r11d, 0xd
0x00015d76      e9fdfaffff     jmp 0x15878
0x00015d7b      83f80f         cmp eax, 0xf
0x00015d7e      41bb09000000   mov r11d, 9
0x00015d84      0f8feefaffff   jg 0x15878
0x00015d8a      a804           test al, 4
0x00015d8c      0f85e6faffff   jne 0x15878
0x00015d92      83f807         cmp eax, 7
0x00015d95      41bb07000000   mov r11d, 7
0x00015d9b      0f8fd7faffff   jg 0x15878
0x00015da1      a802           test al, 2
0x00015da3      41bb01000000   mov r11d, 1
0x00015da9      0f85c9faffff   jne 0x15878
0x00015daf      83e001         and eax, 1
0x00015db2      83f801         cmp eax, 1
0x00015db5      4519db         sbb r11d, r11d
0x00015db8      4183e302       and r11d, 2
0x00015dbc      4183c303       add r11d, 3
0x00015dc0      e9b3faffff     jmp 0x15878
0x00015dc5      0f1f00         nop dword [rax]
0x00015dc8      4531db         xor r11d, r11d
0x00015dcb      83f807         cmp eax, 7
0x00015dce      410f9fc3       setg r11b
0x00015dd2      4183c30f       add r11d, 0xf
0x00015dd6      e99dfaffff     jmp 0x15878
0x00015ddb      83f80f         cmp eax, 0xf
0x00015dde      41bb0c000000   mov r11d, 0xc
0x00015de4      0f8f8efaffff   jg 0x15878
0x00015dea      4531db         xor r11d, r11d
0x00015ded      a804           test al, 4
0x00015def      410f95c3       setne r11b
0x00015df3      4183c30b       add r11d, 0xb
0x00015df7      e97cfaffff     jmp 0x15878
0x00015dfc      41bb0e000000   mov r11d, 0xe
0x00015e02      bb63000000     mov ebx, 0x63                           ; 'c'
0x00015e07      e96cfaffff     jmp 0x15878
0x00015e0c      83f80f         cmp eax, 0xf
0x00015e0f      41bb0a000000   mov r11d, 0xa
0x00015e15      0f8f5dfaffff   jg 0x15878
0x00015e1b      a804           test al, 4
0x00015e1d      0f8555faffff   jne 0x15878
0x00015e23      83f807         cmp eax, 7
0x00015e26      41bb08000000   mov r11d, 8
0x00015e2c      0f8f46faffff   jg 0x15878
0x00015e32      a802           test al, 2
0x00015e34      41bb02000000   mov r11d, 2
0x00015e3a      0f8538faffff   jne 0x15878
0x00015e40      83e001         and eax, 1
0x00015e43      83f801         cmp eax, 1
0x00015e46      4519db         sbb r11d, r11d
0x00015e49      4183e302       and r11d, 2
0x00015e4d      4183c304       add r11d, 4
0x00015e51      e922faffff     jmp 0x15878
0x00015e56      662e0f1f8400.  nop word cs:[rax + rax]
0x00015e60      41bb11000000   mov r11d, 0x11
0x00015e66      e90dfaffff     jmp 0x15878
0x00015e6b      498b4f08       mov rcx, qword [r15 + 8]
0x00015e6f      48394c2408     cmp qword [rsp + 8], rcx
0x00015e74      7408           je 0x15e7e
0x00015e76      4889cf         mov rdi, rcx
0x00015e79      e852d2feff     call sym..plt.got
0x00015e7e      498b7e08       mov rdi, qword [r14 + 8]
0x00015e82      48397c2428     cmp qword [rsp + 0x28], rdi
0x00015e87      7405           je 0x15e8e
0x00015e89      e842d2feff     call sym..plt.got
0x00015e8e      e8bdcafeff     call sym.imp.__errno_location
0x00015e93      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x3e300000
0x00015e99      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00015e9e      e91ff8ffff     jmp 0x156c2
0x00015ea3      4439da         cmp edx, r11d
0x00015ea6      0f842ffaffff   je 0x158db
0x00015eac      ebc1           jmp 0x15e6f
0x00015eae      6690           nop
0x00015eb0      4d01c9         add r9, r9
0x00015eb3      498d4501       lea rax, [r13 + 1]
0x00015eb7      4d39e9         cmp r9, r13
0x00015eba      4c0f46c8       cmovbe r9, rax
0x00015ebe      48b8ffffffff.  movabs rax, 0x7ffffffffffffff           ; 576460752303423487
0x00015ec8      4939c1         cmp r9, rax
0x00015ecb      0f87da030000   ja 0x162ab
0x00015ed1      4c89ce         mov rsi, r9
0x00015ed4      4c894c2448     mov qword [rsp + 0x48], r9
0x00015ed9      4c89542440     mov qword [rsp + 0x40], r10
0x00015ede      48c1e605       shl rsi, 5
0x00015ee2      48394c2408     cmp qword [rsp + 8], rcx
0x00015ee7      4c89442438     mov qword [rsp + 0x38], r8
0x00015eec      44895c2430     mov dword [rsp + 0x30], r11d
0x00015ef1      0f849a000000   je 0x15f91
0x00015ef7      4889cf         mov rdi, rcx
0x00015efa      e891cffeff     call sym.imp.realloc
0x00015eff      4885c0         test rax, rax
0x00015f02      4889c1         mov rcx, rax
0x00015f05      448b5c2430     mov r11d, dword [rsp + 0x30]
0x00015f0a      4c8b442438     mov r8, qword [rsp + 0x38]
0x00015f0f      4c8b542440     mov r10, qword [rsp + 0x40]
0x00015f14      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x00015f19      0f8488030000   je 0x162a7
0x00015f1f      488b442408     mov rax, qword [rsp + 8]
0x00015f24      493b4708       cmp rax, qword [r15 + 8]
0x00015f28      0f848b000000   je 0x15fb9
0x00015f2e      49894f08       mov qword [r15 + 8], rcx
0x00015f32      e95df9ffff     jmp 0x15894
0x00015f37      488b742420     mov rsi, qword [rsp + 0x20]
0x00015f3c      4883feff       cmp rsi, 0xffffffffffffffff
0x00015f40      488d4601       lea rax, [rsi + 1]
0x00015f44      4989742450     mov qword [r12 + 0x50], rsi
0x00015f49      0f841cffffff   je 0x15e6b
0x00015f4f      4c8b6c2420     mov r13, qword [rsp + 0x20]
0x00015f54      4889442420     mov qword [rsp + 0x20], rax
0x00015f59      e929f9ffff     jmp 0x15887
0x00015f5e      4080ff09       cmp dil, 9
0x00015f62      0f8703ffffff   ja 0x15e6b
0x00015f68      0fbec3         movsx eax, bl
0x00015f6b      4c89c6         mov rsi, r8
0x00015f6e      4889e9         mov rcx, rbp
0x00015f71      83e830         sub eax, 0x30
0x00015f74      4898           cdqe
0x00015f76      e936fcffff     jmp 0x15bb1
0x00015f7b      83fa05         cmp edx, 5
0x00015f7e      0f85ebfeffff   jne 0x15e6f
0x00015f84      0fb65d00       movzx ebx, byte [rbp]
0x00015f88      488d5501       lea rdx, [rbp + 1]
0x00015f8c      e954f8ffff     jmp 0x157e5
0x00015f91      4889f7         mov rdi, rsi
0x00015f94      e857cefeff     call sym.imp.malloc
0x00015f99      4885c0         test rax, rax
0x00015f9c      4889c1         mov rcx, rax
0x00015f9f      448b5c2430     mov r11d, dword [rsp + 0x30]
0x00015fa4      4c8b442438     mov r8, qword [rsp + 0x38]
0x00015fa9      4c8b542440     mov r10, qword [rsp + 0x40]
0x00015fae      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x00015fb3      0f8463010000   je 0x1611c
0x00015fb9      498b17         mov rdx, qword [r15]
0x00015fbc      488b742408     mov rsi, qword [rsp + 8]
0x00015fc1      4889cf         mov rdi, rcx
0x00015fc4      4c894c2448     mov qword [rsp + 0x48], r9
0x00015fc9      4c89542440     mov qword [rsp + 0x40], r10
0x00015fce      4c89442438     mov qword [rsp + 0x38], r8
0x00015fd3      44895c2430     mov dword [rsp + 0x30], r11d
0x00015fd8      48c1e205       shl rdx, 5
0x00015fdc      e89fcdfeff     call sym.imp.memcpy
0x00015fe1      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x00015fe6      4c8b542440     mov r10, qword [rsp + 0x40]
0x00015feb      4889c1         mov rcx, rax
0x00015fee      4c8b442438     mov r8, qword [rsp + 0x38]
0x00015ff3      448b5c2430     mov r11d, dword [rsp + 0x30]
0x00015ff8      e931ffffff     jmp 0x15f2e
0x00015ffd      4889f7         mov rdi, rsi
0x00016000      e8ebcdfeff     call sym.imp.malloc
0x00016005      4885c0         test rax, rax
0x00016008      4889c1         mov rcx, rax
0x0001600b      4c8b442430     mov r8, qword [rsp + 0x30]
0x00016010      4c8b542438     mov r10, qword [rsp + 0x38]
0x00016015      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x0001601a      0f84e9000000   je 0x16109
0x00016020      488d049b       lea rax, [rbx + rbx*4]
0x00016024      488b742428     mov rsi, qword [rsp + 0x28]
0x00016029      4889cf         mov rdi, rcx
0x0001602c      4c894c2440     mov qword [rsp + 0x40], r9
0x00016031      4c89542438     mov qword [rsp + 0x38], r10
0x00016036      488d1443       lea rdx, [rbx + rax*2]
0x0001603a      4c89442430     mov qword [rsp + 0x30], r8
0x0001603f      48c1e203       shl rdx, 3
0x00016043      e838cdfeff     call sym.imp.memcpy
0x00016048      498b1e         mov rbx, qword [r14]
0x0001604b      4889c1         mov rcx, rax
0x0001604e      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x00016053      4c8b542438     mov r10, qword [rsp + 0x38]
0x00016058      4c8b442430     mov r8, qword [rsp + 0x30]
0x0001605d      e915f9ffff     jmp 0x15977
0x00016062      498b07         mov rax, qword [r15]
0x00016065      e9fdf9ffff     jmp 0x15a67
0x0001606a      83fa05         cmp edx, 5
0x0001606d      0f85fcfdffff   jne 0x15e6f
0x00016073      410fb61b       movzx ebx, byte [r11]
0x00016077      4c89dd         mov rbp, r11
0x0001607a      e96ff7ffff     jmp 0x157ee
0x0001607f      4d01c9         add r9, r9
0x00016082      488d4301       lea rax, [rbx + 1]
0x00016086      4939d9         cmp r9, rbx
0x00016089      4c0f46c8       cmovbe r9, rax
0x0001608d      48b8ffffffff.  movabs rax, 0x7ffffffffffffff           ; 576460752303423487
0x00016097      4939c1         cmp r9, rax
0x0001609a      0f870b020000   ja 0x162ab
0x000160a0      4c89ce         mov rsi, r9
0x000160a3      4c894c2448     mov qword [rsp + 0x48], r9
0x000160a8      4c89542440     mov qword [rsp + 0x40], r10
0x000160ad      48c1e605       shl rsi, 5
0x000160b1      48394c2408     cmp qword [rsp + 8], rcx
0x000160b6      4c89442438     mov qword [rsp + 0x38], r8
0x000160bb      4c895c2430     mov qword [rsp + 0x30], r11
0x000160c0      0f84b8010000   je 0x1627e
0x000160c6      4889cf         mov rdi, rcx
0x000160c9      e8c2cdfeff     call sym.imp.realloc
0x000160ce      498b5708       mov rdx, qword [r15 + 8]
0x000160d2      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000160d7      4889c1         mov rcx, rax
0x000160da      4c8b442438     mov r8, qword [rsp + 0x38]
0x000160df      4c8b542440     mov r10, qword [rsp + 0x40]
0x000160e4      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x000160e9      4885c9         test rcx, rcx
0x000160ec      0f8415020000   je 0x16307
0x000160f2      4839542408     cmp qword [rsp + 8], rdx
0x000160f7      498b07         mov rax, qword [r15]
0x000160fa      0f84c0010000   je 0x162c0
0x00016100      49894f08       mov qword [r15 + 8], rcx
0x00016104      e914faffff     jmp 0x15b1d
0x00016109      498b4f08       mov rcx, qword [r15 + 8]
0x0001610d      48394c2408     cmp qword [rsp + 8], rcx
0x00016112      7418           je 0x1612c
0x00016114      4889cf         mov rdi, rcx
0x00016117      e8b4cffeff     call sym..plt.got
0x0001611c      498b7e08       mov rdi, qword [r14 + 8]
0x00016120      48397c2428     cmp qword [rsp + 0x28], rdi
0x00016125      7405           je 0x1612c
0x00016127      e8a4cffeff     call sym..plt.got
0x0001612c      e81fc8feff     call sym.imp.__errno_location
0x00016131      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x00016137      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0001613c      e981f5ffff     jmp 0x156c2
0x00016141      4889f7         mov rdi, rsi
0x00016144      e8a7ccfeff     call sym.imp.malloc
0x00016149      488b542408     mov rdx, qword [rsp + 8]
0x0001614e      4889c1         mov rcx, rax
0x00016151      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x00016156      4c8b542438     mov r10, qword [rsp + 0x38]
0x0001615b      4c8b442430     mov r8, qword [rsp + 0x30]
0x00016160      e9e7f8ffff     jmp 0x15a4c
0x00016165      488b742420     mov rsi, qword [rsp + 0x20]
0x0001616a      4883feff       cmp rsi, 0xffffffffffffffff
0x0001616e      488d4601       lea rax, [rsi + 1]
0x00016172      4989742440     mov qword [r12 + 0x40], rsi
0x00016177      0f84eefcffff   je 0x15e6b
0x0001617d      488b5c2420     mov rbx, qword [rsp + 0x20]
0x00016182      4889442420     mov qword [rsp + 0x20], rax
0x00016187      e981f9ffff     jmp 0x15b0d
0x0001618c      4c89da         mov rdx, r11
0x0001618f      4883c201       add rdx, 1
0x00016193      0fb60a         movzx ecx, byte [rdx]
0x00016196      8d71d0         lea esi, [rcx - 0x30]
0x00016199      4080fe09       cmp sil, 9
0x0001619d      76f0           jbe 0x1618f
0x0001619f      80f924         cmp cl, 0x24
0x000161a2      0f8556f9ffff   jne 0x15afe
0x000161a8      31c9           xor ecx, ecx
0x000161aa      48be99999999.  movabs rsi, 0x1999999999999999
0x000161b4      83e830         sub eax, 0x30
0x000161b7      4c89c2         mov rdx, r8
0x000161ba      4839f1         cmp rcx, rsi
0x000161bd      4898           cdqe
0x000161bf      7707           ja 0x161c8
0x000161c1      488d1489       lea rdx, [rcx + rcx*4]
0x000161c5      4801d2         add rdx, rdx
0x000161c8      4c89de         mov rsi, r11
0x000161cb      31db           xor ebx, ebx
0x000161cd      4801c2         add rdx, rax
0x000161d0      410fbe4301     movsx eax, byte [r11 + 1]
0x000161d5      0f92c3         setb bl
0x000161d8      4983c301       add r11, 1
0x000161dc      4889d1         mov rcx, rdx
0x000161df      4885db         test rbx, rbx
0x000161e2      8d78d0         lea edi, [rax - 0x30]
0x000161e5      7471           je 0x16258
0x000161e7      4080ff09       cmp dil, 9
0x000161eb      0f877afcffff   ja 0x15e6b
0x000161f1      83e830         sub eax, 0x30
0x000161f4      4c89c2         mov rdx, r8
0x000161f7      4c89de         mov rsi, r11
0x000161fa      4898           cdqe
0x000161fc      ebcd           jmp 0x161cb
0x000161fe      4080ff09       cmp dil, 9
0x00016202      0f8763fcffff   ja 0x15e6b
0x00016208      0fbec1         movsx eax, cl
0x0001620b      4889d5         mov rbp, rdx
0x0001620e      4c89c1         mov rcx, r8
0x00016211      83e830         sub eax, 0x30
0x00016214      4898           cdqe
0x00016216      e9befaffff     jmp 0x15cd9
0x0001621b      488b742408     mov rsi, qword [rsp + 8]
0x00016220      48c1e005       shl rax, 5
0x00016224      4889cf         mov rdi, rcx
0x00016227      4889c2         mov rdx, rax
0x0001622a      4c894c2440     mov qword [rsp + 0x40], r9
0x0001622f      4c89542438     mov qword [rsp + 0x38], r10
0x00016234      4c89442430     mov qword [rsp + 0x30], r8
0x00016239      e842cbfeff     call sym.imp.memcpy
0x0001623e      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x00016243      4889c1         mov rcx, rax
0x00016246      4c8b542438     mov r10, qword [rsp + 0x38]
0x0001624b      498b07         mov rax, qword [r15]
0x0001624e      4c8b442430     mov r8, qword [rsp + 0x30]
0x00016253      e90bf8ffff     jmp 0x15a63
0x00016258      4080ff09       cmp dil, 9
0x0001625c      0f8648ffffff   jbe 0x161aa
0x00016262      488d5aff       lea rbx, [rdx - 1]
0x00016266      4883fbfd       cmp rbx, 0xfffffffffffffffd
0x0001626a      0f87fbfbffff   ja 0x15e6b
0x00016270      49895c2440     mov qword [r12 + 0x40], rbx
0x00016275      4c8d5e02       lea r11, [rsi + 2]
0x00016279      e98ff8ffff     jmp 0x15b0d
0x0001627e      4889f7         mov rdi, rsi
0x00016281      e86acbfeff     call sym.imp.malloc
0x00016286      488b542408     mov rdx, qword [rsp + 8]
0x0001628b      4889c1         mov rcx, rax
0x0001628e      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x00016293      4c8b542440     mov r10, qword [rsp + 0x40]
0x00016298      4c8b442438     mov r8, qword [rsp + 0x38]
0x0001629d      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000162a2      e942feffff     jmp 0x160e9
0x000162a7      498b4f08       mov rcx, qword [r15 + 8]
0x000162ab      48394c2408     cmp qword [rsp + 8], rcx
0x000162b0      0f855efeffff   jne 0x16114
0x000162b6      e961feffff     jmp 0x1611c
0x000162bb      0f1f440000     nop dword [rax + rax]
0x000162c0      488b742408     mov rsi, qword [rsp + 8]
0x000162c5      48c1e005       shl rax, 5
0x000162c9      4889cf         mov rdi, rcx
0x000162cc      4889c2         mov rdx, rax
0x000162cf      4c894c2448     mov qword [rsp + 0x48], r9
0x000162d4      4c89542440     mov qword [rsp + 0x40], r10
0x000162d9      4c89442438     mov qword [rsp + 0x38], r8
0x000162de      4c895c2430     mov qword [rsp + 0x30], r11
0x000162e3      e898cafeff     call sym.imp.memcpy
0x000162e8      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x000162ed      4889c1         mov rcx, rax
0x000162f0      4c8b542440     mov r10, qword [rsp + 0x40]
0x000162f5      498b07         mov rax, qword [r15]
0x000162f8      4c8b442438     mov r8, qword [rsp + 0x38]
0x000162fd      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00016302      e9f9fdffff     jmp 0x16100
0x00016307      4889d1         mov rcx, rdx
0x0001630a      eb9f           jmp 0x162ab
0x0001630c      0f1f4000       nop dword [rax]
;-- __libc_csu_init:
0x00016310      4157           push r15
0x00016312      4156           push r14
0x00016314      4989d7         mov r15, rdx
0x00016317      4155           push r13
0x00016319      4154           push r12
0x0001631b      4c8d258e6320.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x21c6b0 ; "0?"
0x00016322      55             push rbp
0x00016323      488d2d8e6320.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x21c6b8
0x0001632a      53             push rbx
0x0001632b      4189fd         mov r13d, edi
0x0001632e      4989f6         mov r14, rsi
0x00016331      4c29e5         sub rbp, r12
0x00016334      4883ec08       sub rsp, 8
0x00016338      48c1fd03       sar rbp, 3
0x0001633c      e87fc5feff     call sym._init
0x00016341      4885ed         test rbp, rbp
0x00016344      7420           je 0x16366
0x00016346      31db           xor ebx, ebx
0x00016348      0f1f84000000.  nop dword [rax + rax]
0x00016350      4c89fa         mov rdx, r15
0x00016353      4c89f6         mov rsi, r14
0x00016356      4489ef         mov edi, r13d
0x00016359      41ff14dc       call qword [r12 + rbx*8]
0x0001635d      4883c301       add rbx, 1
0x00016361      4839dd         cmp rbp, rbx
0x00016364      75ea           jne 0x16350
0x00016366      4883c408       add rsp, 8
0x0001636a      5b             pop rbx
0x0001636b      5d             pop rbp
0x0001636c      415c           pop r12
0x0001636e      415d           pop r13
0x00016370      415e           pop r14
0x00016372      415f           pop r15
0x00016374      c3             ret
0x00016375      90             nop
0x00016376      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00016380      f3c3           ret
0x00016382      662e0f1f8400.  nop word cs:[rax + rax]
0x0001638c      0f1f4000       nop dword [rax]
;-- atexit:
0x00016390      488b15716c20.  mov rdx, qword [obj.__dso_handle]       ; [0x21d008:8]=0x21d008 obj.__dso_handle
0x00016397      31f6           xor esi, esi
0x00016399      e952ccfeff     jmp sym.imp.__cxa_atexit
0x0001639e      0000           add byte [rax], al
