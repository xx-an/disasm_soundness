;-- section..plt:
;-- .plt:
0x000015d0      ff355a982000   push qword [0x0020ae30]                 ; [12] -r-x section size 816 named .plt
0x000015d6      ff255c982000   jmp qword [0x0020ae38]                  ; [0x20ae38:8]=0
0x000015dc      0f1f4000       nop dword [rax]
;-- imp.__ctype_toupper_loc:
0x000015e0      ff255a982000   jmp qword [reloc.__ctype_toupper_loc]   ; [0x20ae40:8]=0x15e6
0x000015e6      6800000000     push 0
0x000015eb      e9e0ffffff     jmp sym..plt
;-- imp.free:
0x000015f0      ff2552982000   jmp qword [reloc.free]                  ; [0x20ae48:8]=0x15f6
0x000015f6      6801000000     push 1
0x000015fb      e9d0ffffff     jmp sym..plt
;-- imp.abort:
0x00001600      ff254a982000   jmp qword [reloc.abort]                 ; [0x20ae50:8]=0x1606
0x00001606      6802000000     push 2
0x0000160b      e9c0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x00001610      ff2542982000   jmp qword [reloc.__errno_location]      ; [0x20ae58:8]=0x1616
0x00001616      6803000000     push 3
0x0000161b      e9b0ffffff     jmp sym..plt
;-- imp.strncmp:
0x00001620      ff253a982000   jmp qword [reloc.strncmp]               ; [0x20ae60:8]=0x1626 ; "&\x16"
0x00001626      6804000000     push 4
0x0000162b      e9a0ffffff     jmp sym..plt
;-- imp._exit:
0x00001630      ff2532982000   jmp qword [reloc._exit]                 ; [0x20ae68:8]=0x1636 ; "6\x16"
0x00001636      6805000000     push 5
0x0000163b      e990ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001640      ff252a982000   jmp qword [reloc.__fpending]            ; [0x20ae70:8]=0x1646 ; "F\x16"
0x00001646      6806000000     push 6
0x0000164b      e980ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001650      ff2522982000   jmp qword [reloc.textdomain]            ; [0x20ae78:8]=0x1656 ; "V\x16"
0x00001656      6807000000     push 7
0x0000165b      e970ffffff     jmp sym..plt
;-- imp.fclose:
0x00001660      ff251a982000   jmp qword [reloc.fclose]                ; [0x20ae80:8]=0x1666 ; "f\x16"
0x00001666      6808000000     push 8
0x0000166b      e960ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001670      ff2512982000   jmp qword [reloc.bindtextdomain]        ; [0x20ae88:8]=0x1676 ; "v\x16"
0x00001676      6809000000     push 9
0x0000167b      e950ffffff     jmp sym..plt
;-- imp.stpcpy:
0x00001680      ff250a982000   jmp qword [reloc.stpcpy]                ; [0x20ae90:8]=0x1686
0x00001686      680a000000     push 0xa
0x0000168b      e940ffffff     jmp sym..plt
;-- imp.dcgettext:
0x00001690      ff2502982000   jmp qword [reloc.dcgettext]             ; [0x20ae98:8]=0x1696
0x00001696      680b000000     push 0xb
0x0000169b      e930ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x000016a0      ff25fa972000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x20aea0:8]=0x16a6
0x000016a6      680c000000     push 0xc
0x000016ab      e920ffffff     jmp sym..plt
;-- imp.strlen:
0x000016b0      ff25f2972000   jmp qword [reloc.strlen]                ; [0x20aea8:8]=0x16b6
0x000016b6      680d000000     push 0xd
0x000016bb      e910ffffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x000016c0      ff25ea972000   jmp qword [reloc.__stack_chk_fail]      ; [0x20aeb0:8]=0x16c6
0x000016c6      680e000000     push 0xe
0x000016cb      e900ffffff     jmp sym..plt
;-- imp.getopt_long:
0x000016d0      ff25e2972000   jmp qword [reloc.getopt_long]           ; [0x20aeb8:8]=0x16d6
0x000016d6      680f000000     push 0xf
0x000016db      e9f0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x000016e0      ff25da972000   jmp qword [reloc.mbrtowc]               ; [0x20aec0:8]=0x16e6
0x000016e6      6810000000     push 0x10
0x000016eb      e9e0feffff     jmp sym..plt
;-- imp.strchr:
0x000016f0      ff25d2972000   jmp qword [reloc.strchr]                ; [0x20aec8:8]=0x16f6
0x000016f6      6811000000     push 0x11
0x000016fb      e9d0feffff     jmp sym..plt
;-- imp.strrchr:
0x00001700      ff25ca972000   jmp qword [reloc.strrchr]               ; [0x20aed0:8]=0x1706
0x00001706      6812000000     push 0x12
0x0000170b      e9c0feffff     jmp sym..plt
;-- imp.lseek:
0x00001710      ff25c2972000   jmp qword [reloc.lseek]                 ; [0x20aed8:8]=0x1716
0x00001716      6813000000     push 0x13
0x0000171b      e9b0feffff     jmp sym..plt
;-- imp.__assert_fail:
0x00001720      ff25ba972000   jmp qword [reloc.__assert_fail]         ; [0x20aee0:8]=0x1726 ; "&\x17"
0x00001726      6814000000     push 0x14
0x0000172b      e9a0feffff     jmp sym..plt
;-- imp.__strtoul_internal:
0x00001730      ff25b2972000   jmp qword [reloc.__strtoul_internal]    ; [0x20aee8:8]=0x1736 ; "6\x17"
0x00001736      6815000000     push 0x15
0x0000173b      e990feffff     jmp sym..plt
;-- imp.memset:
0x00001740      ff25aa972000   jmp qword [reloc.memset]                ; [0x20aef0:8]=0x1746 ; "F\x17"
0x00001746      6816000000     push 0x16
0x0000174b      e980feffff     jmp sym..plt
;-- imp.close:
0x00001750      ff25a2972000   jmp qword [reloc.close]                 ; [0x20aef8:8]=0x1756 ; "V\x17"
0x00001756      6817000000     push 0x17
0x0000175b      e970feffff     jmp sym..plt
;-- imp.posix_fadvise:
0x00001760      ff259a972000   jmp qword [reloc.posix_fadvise]         ; [0x20af00:8]=0x1766 ; "f\x17"
0x00001766      6818000000     push 0x18
0x0000176b      e960feffff     jmp sym..plt
;-- imp.read:
0x00001770      ff2592972000   jmp qword [reloc.read]                  ; [0x20af08:8]=0x1776 ; "v\x17"
0x00001776      6819000000     push 0x19
0x0000177b      e950feffff     jmp sym..plt
;-- imp.memcmp:
0x00001780      ff258a972000   jmp qword [reloc.memcmp]                ; [0x20af10:8]=0x1786
0x00001786      681a000000     push 0x1a
0x0000178b      e940feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001790      ff2582972000   jmp qword [reloc.fputs_unlocked]        ; [0x20af18:8]=0x1796
0x00001796      681b000000     push 0x1b
0x0000179b      e930feffff     jmp sym..plt
;-- imp.calloc:
0x000017a0      ff257a972000   jmp qword [reloc.calloc]                ; [0x20af20:8]=0x17a6
0x000017a6      681c000000     push 0x1c
0x000017ab      e920feffff     jmp sym..plt
;-- imp.memcpy:
0x000017b0      ff2572972000   jmp qword [reloc.memcpy]                ; [0x20af28:8]=0x17b6
0x000017b6      681d000000     push 0x1d
0x000017bb      e910feffff     jmp sym..plt
;-- imp.fileno:
0x000017c0      ff256a972000   jmp qword [reloc.fileno]                ; [0x20af30:8]=0x17c6
0x000017c6      681e000000     push 0x1e
0x000017cb      e900feffff     jmp sym..plt
;-- imp.malloc:
0x000017d0      ff2562972000   jmp qword [reloc.malloc]                ; [0x20af38:8]=0x17d6
0x000017d6      681f000000     push 0x1f
0x000017db      e9f0fdffff     jmp sym..plt
;-- imp.fflush:
0x000017e0      ff255a972000   jmp qword [reloc.fflush]                ; [0x20af40:8]=0x17e6
0x000017e6      6820000000     push 0x20                               ; "@"
0x000017eb      e9e0fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x000017f0      ff2552972000   jmp qword [reloc.nl_langinfo]           ; [0x20af48:8]=0x17f6
0x000017f6      6821000000     push 0x21                               ; '!'
0x000017fb      e9d0fdffff     jmp sym..plt
;-- imp.__freading:
0x00001800      ff254a972000   jmp qword [reloc.__freading]            ; [0x20af50:8]=0x1806
0x00001806      6822000000     push 0x22                               ; '"'
0x0000180b      e9c0fdffff     jmp sym..plt
;-- imp.fwrite_unlocked:
0x00001810      ff2542972000   jmp qword [reloc.fwrite_unlocked]       ; [0x20af58:8]=0x1816
0x00001816      6823000000     push 0x23                               ; '#'
0x0000181b      e9b0fdffff     jmp sym..plt
;-- imp.realloc:
0x00001820      ff253a972000   jmp qword [reloc.realloc]               ; [0x20af60:8]=0x1826 ; "&\x18"
0x00001826      6824000000     push 0x24                               ; '$'
0x0000182b      e9a0fdffff     jmp sym..plt
;-- imp.setlocale:
0x00001830      ff2532972000   jmp qword [reloc.setlocale]             ; [0x20af68:8]=0x1836 ; "6\x18"
0x00001836      6825000000     push 0x25                               ; '%'
0x0000183b      e990fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001840      ff252a972000   jmp qword [reloc.__printf_chk]          ; [0x20af70:8]=0x1846 ; "F\x18"
0x00001846      6826000000     push 0x26                               ; '&'
0x0000184b      e980fdffff     jmp sym..plt
;-- imp.error:
0x00001850      ff2522972000   jmp qword [reloc.error]                 ; [0x20af78:8]=0x1856 ; "V\x18"
0x00001856      6827000000     push 0x27                               ; '''
0x0000185b      e970fdffff     jmp sym..plt
;-- imp.fseeko:
0x00001860      ff251a972000   jmp qword [reloc.fseeko]                ; [0x20af80:8]=0x1866 ; "f\x18"
0x00001866      6828000000     push 0x28                               ; '('
0x0000186b      e960fdffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001870      ff2512972000   jmp qword [reloc.__cxa_atexit]          ; [0x20af88:8]=0x1876 ; "v\x18"
0x00001876      6829000000     push 0x29                               ; ')'
0x0000187b      e950fdffff     jmp sym..plt
;-- imp.exit:
0x00001880      ff250a972000   jmp qword [reloc.exit]                  ; [0x20af90:8]=0x1886
0x00001886      682a000000     push 0x2a                               ; '*'
0x0000188b      e940fdffff     jmp sym..plt
;-- imp.fwrite:
0x00001890      ff2502972000   jmp qword [reloc.fwrite]                ; [0x20af98:8]=0x1896
0x00001896      682b000000     push 0x2b                               ; '+'
0x0000189b      e930fdffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x000018a0      ff25fa962000   jmp qword [reloc.__fprintf_chk]         ; [0x20afa0:8]=0x18a6
0x000018a6      682c000000     push 0x2c                               ; ','
0x000018ab      e920fdffff     jmp sym..plt
;-- imp.mbsinit:
0x000018b0      ff25f2962000   jmp qword [reloc.mbsinit]               ; [0x20afa8:8]=0x18b6
0x000018b6      682d000000     push 0x2d                               ; '-'
0x000018bb      e910fdffff     jmp sym..plt
;-- imp.iswprint:
0x000018c0      ff25ea962000   jmp qword [reloc.iswprint]              ; [0x20afb0:8]=0x18c6
0x000018c6      682e000000     push 0x2e                               ; '.'
0x000018cb      e900fdffff     jmp sym..plt
;-- imp.__ctype_tolower_loc:
0x000018d0      ff25e2962000   jmp qword [reloc.__ctype_tolower_loc]   ; [0x20afb8:8]=0x18d6
0x000018d6      682f000000     push 0x2f                               ; '/'
0x000018db      e9f0fcffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x000018e0      ff25da962000   jmp qword [reloc.__ctype_b_loc]         ; [0x20afc0:8]=0x18e6
0x000018e6      6830000000     push 0x30                               ; '0'
0x000018eb      e9e0fcffff     jmp sym..plt
;-- imp.__sprintf_chk:
0x000018f0      ff25d2962000   jmp qword [reloc.__sprintf_chk]         ; [0x20afc8:8]=0x18f6
0x000018f6      6831000000     push 0x31                               ; '1'
0x000018fb      e9d0fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001900      .qword 0x9066002096ea25ff                              ; [13] -r-x section size 8 named .plt.got
0x00001908      0000           add byte [rax], al
0x0000190a      0000           add byte [rax], al
0x0000190c      0000           add byte [rax], al
0x0000190e      0000           add byte [rax], al
;-- section..text:
;-- .text:
;-- append_repeated_char.part.8:
0x00001910      488d0d395a00.  lea rcx, obj.__PRETTY_FUNCTION__.7143   ; 0x7350 ; "append_repeated_char" ; [14] -r-x section size 22238 named .text
0x00001917      488d35035700.  lea rsi, str..._coreutils_8.31_src_tr.c ; 0x7021 ; "../coreutils-8.31/src/tr.c"
0x0000191e      488d3d495700.  lea rdi, str.list__tail                 ; 0x706e ; "list->tail"
0x00001925      4883ec08       sub rsp, 8
0x00001929      bacf020000     mov edx, 0x2cf
0x0000192e      e8edfdffff     call sym.imp.__assert_fail
0x00001933      662e0f1f8400.  nop word cs:[rax + rax]
0x0000193d      0f1f00         nop dword [rax]
;-- main:
0x00001940      4157           push r15
0x00001942      4156           push r14
0x00001944      4155           push r13
0x00001946      4154           push r12
0x00001948      4989f5         mov r13, rsi
0x0000194b      55             push rbp
0x0000194c      53             push rbx
0x0000194d      4863df         movsxd rbx, edi
0x00001950      488d2d499120.  lea rbp, obj.long_options               ; 0x20aaa0
0x00001957      4881ece80100.  sub rsp, 0x1e8
0x0000195e      488b3e         mov rdi, qword [rsi]
0x00001961      64488b042528.  mov rax, qword fs:[0x28]
0x0000196a      48898424d801.  mov qword [rsp + 0x1d8], rax
0x00001972      31c0           xor eax, eax
0x00001974      e8b7280000     call sym.set_program_name
0x00001979      488d35616f00.  lea rsi, [0x000088e1]
0x00001980      bf06000000     mov edi, 6
0x00001985      e8a6feffff     call sym.imp.setlocale
0x0000198a      488d35b55700.  lea rsi, str.usr_local_share_locale     ; 0x7146 ; "/usr/local/share/locale"
0x00001991      488d3d855700.  lea rdi, [0x0000711d]                   ; "coreutils"
0x00001998      e8d3fcffff     call sym.imp.bindtextdomain
0x0000199d      488d3d795700.  lea rdi, [0x0000711d]                   ; "coreutils"
0x000019a4      e8a7fcffff     call sym.imp.textdomain
0x000019a9      488d3d902700.  lea rdi, sym.close_stdout               ; 0x4140 ; "USH\x83\xec\bH\x8b=;o "
0x000019b0      e82b560000     call sym.atexit
0x000019b5      0f1f00         nop dword [rax]
0x000019b8      488d15ae5700.  lea rdx, str.AcCdst                     ; 0x716d ; "+AcCdst"
0x000019bf      4531c0         xor r8d, r8d
0x000019c2      4889e9         mov rcx, rbp
0x000019c5      4c89ee         mov rsi, r13
0x000019c8      89df           mov edi, ebx
0x000019ca      e801fdffff     call sym.imp.getopt_long
0x000019cf      83f8ff         cmp eax, 0xffffffff
0x000019d2      0f84ec000000   je 0x1ac4
0x000019d8      83f843         cmp eax, 0x43
0x000019db      0f84b8000000   je 0x1a99
0x000019e1      7e2d           jle 0x1a10
0x000019e3      83f864         cmp eax, 0x64
0x000019e6      0f84cc000000   je 0x1ab8
0x000019ec      0f8ea2000000   jle 0x1a94
0x000019f2      83f873         cmp eax, 0x73
0x000019f5      0f84ad000000   je 0x1aa8
0x000019fb      83f874         cmp eax, 0x74
0x000019fe      7527           jne 0x1a27
0x00001a00      c605dab92000.  mov byte [obj.truncate_set1], 1         ; [0x20d3e1:1]=0
0x00001a07      ebaf           jmp 0x19b8
0x00001a09      0f1f80000000.  nop dword [rax]
0x00001a10      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x00001a15      0f843f0a0000   je 0x245a
0x00001a1b      83f841         cmp eax, 0x41
0x00001a1e      7450           je 0x1a70
0x00001a20      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x00001a25      7411           je 0x1a38
0x00001a27      bf01000000     mov edi, 1
0x00001a2c      e80f230000     call sym.usage
0x00001a31      0f1f80000000.  nop dword [rax]
0x00001a38      488b3d499620.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00001a3f      488b0dca9520.  mov rcx, qword [obj.Version]            ; [0x20b010:8]=0x834f str.8.31 ; "O\x83"
0x00001a46      4c8d05135700.  lea r8, str.Jim_Meyering                ; 0x7160 ; "Jim Meyering"
0x00001a4d      488d15c55600.  lea rdx, str.GNU_coreutils              ; 0x7119 ; "GNU coreutils"
0x00001a54      488d35455600.  lea rsi, [0x000070a0]                   ; "tr"
0x00001a5b      4531c9         xor r9d, r9d
0x00001a5e      31c0           xor eax, eax
0x00001a60      e81b4a0000     call sym.version_etc
0x00001a65      31ff           xor edi, edi
0x00001a67      e814feffff     call sym.imp.exit
0x00001a6c      0f1f4000       nop dword [rax]
0x00001a70      488d35e75600.  lea rsi, [0x0000715e]                   ; "C"
0x00001a77      bf03000000     mov edi, 3
0x00001a7c      e8affdffff     call sym.imp.setlocale
0x00001a81      488d35d65600.  lea rsi, [0x0000715e]                   ; "C"
0x00001a88      31ff           xor edi, edi
0x00001a8a      e8a1fdffff     call sym.imp.setlocale
0x00001a8f      e924ffffff     jmp 0x19b8
0x00001a94      83f863         cmp eax, 0x63
0x00001a97      758e           jne 0x1a27
0x00001a99      c60542b92000.  mov byte [obj.complement], 1            ; [0x20d3e2:1]=0
0x00001aa0      e913ffffff     jmp 0x19b8
0x00001aa5      0f1f00         nop dword [rax]
0x00001aa8      c60535b92000.  mov byte [obj.squeeze_repeats], 1       ; [0x20d3e4:1]=0
0x00001aaf      e904ffffff     jmp 0x19b8
0x00001ab4      0f1f4000       nop dword [rax]
0x00001ab8      c60524b92000.  mov byte [obj.delete], 1                ; [0x20d3e3:1]=0
0x00001abf      e9f4feffff     jmp 0x19b8
0x00001ac4      8b0dce952000   mov ecx, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20b098:4]=0
0x00001aca      4189dc         mov r12d, ebx
0x00001acd      0fb6050fb920.  movzx eax, byte [obj.delete]            ; [0x20d3e3:1]=0
0x00001ad4      0fb61509b920.  movzx edx, byte [obj.squeeze_repeats]   ; [0x20d3e4:1]=0
0x00001adb      4129cc         sub r12d, ecx
0x00001ade      4183fc02       cmp r12d, 2
0x00001ae2      0f847e020000   je 0x1d66
0x00001ae8      38c2           cmp dl, al
0x00001aea      c605efb82000.  mov byte [obj.translating], 0           ; [0x20d3e0:1]=0
0x00001af1      0f8413060000   je 0x210a
0x00001af7      38c2           cmp dl, al
0x00001af9      be01000000     mov esi, 1
0x00001afe      19c0           sbb eax, eax
0x00001b00      83c002         add eax, 2
0x00001b03      4139f4         cmp r12d, esi
0x00001b06      0f8c4c0a0000   jl 0x2558
0x00001b0c      4439e0         cmp eax, r12d
0x00001b0f      0f8ce60a0000   jl 0x25fb
0x00001b15      bf20000000     mov edi, 0x20                           ; "@"
0x00001b1a      488d6c2450     lea rbp, [rsp + 0x50]
0x00001b1f      e8bc4a0000     call sym.xmalloc
0x00001b24      4889442458     mov qword [rsp + 0x58], rax
0x00001b29      4889442450     mov qword [rsp + 0x50], rax
0x00001b2e      4889ee         mov rsi, rbp
0x00001b31      48c740080000.  mov qword [rax + 8], 0
0x00001b39      486305589520.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20b098:4]=0
0x00001b40      498b7cc500     mov rdi, qword [r13 + rax*8]
0x00001b45      e886160000     call sym.parse_str
0x00001b4a      84c0           test al, al
0x00001b4c      0f84af020000   je 0x1e01
0x00001b52      31db           xor ebx, ebx
0x00001b54      4183fc02       cmp r12d, 2
0x00001b58      0f845d020000   je 0x1dbb
0x00001b5e      4889ef         mov rdi, rbp
0x00001b61      e88a100000     call sym.get_spec_stats
0x00001b66      803d75b82000.  cmp byte [obj.complement], 0            ; [0x20d3e2:1]=0
0x00001b6d      0f85df050000   jne 0x2152
0x00001b73      4c8b742470     mov r14, qword [rsp + 0x70]
0x00001b78      4d85f6         test r14, r14
0x00001b7b      0f8528090000   jne 0x24a9
0x00001b81      4885db         test rbx, rbx
0x00001b84      0f8447030000   je 0x1ed1
0x00001b8a      4889df         mov rdi, rbx
0x00001b8d      4c8b6c2468     mov r13, qword [rsp + 0x68]
0x00001b92      e859100000     call sym.get_spec_stats
0x00001b97      488b4318       mov rax, qword [rbx + 0x18]
0x00001b9b      4939c5         cmp r13, rax
0x00001b9e      0f82cd040000   jb 0x2071
0x00001ba4      48837b2001     cmp qword [rbx + 0x20], 1
0x00001ba9      0f85c2040000   jne 0x2071
0x00001baf      4c89e9         mov rcx, r13
0x00001bb2      488b5328       mov rdx, qword [rbx + 0x28]
0x00001bb6      4829c1         sub rcx, rax
0x00001bb9      803d20b82000.  cmp byte [obj.translating], 0           ; [0x20d3e0:1]=0
0x00001bc0      48894a18       mov qword [rdx + 0x18], rcx
0x00001bc4      4c896b18       mov qword [rbx + 0x18], r13
0x00001bc8      0f84c7040000   je 0x2095
0x00001bce      807b3000       cmp byte [rbx + 0x30], 0
0x00001bd2      0f8519090000   jne 0x24f1
0x00001bd8      807b3200       cmp byte [rbx + 0x32], 0
0x00001bdc      0f85eb080000   jne 0x24cd
0x00001be2      440fb66b31     movzx r13d, byte [rbx + 0x31]
0x00001be7      4584ed         test r13b, r13b
0x00001bea      0f84fb050000   je 0x21eb
0x00001bf0      e8ebfcffff     call sym.imp.__ctype_b_loc
0x00001bf5      488b10         mov rdx, qword [rax]
0x00001bf8      31c9           xor ecx, ecx
0x00001bfa      488dba000200.  lea rdi, [rdx + 0x200]
0x00001c01      0f1f80000000.  nop dword [rax]
0x00001c08      0fb702         movzx eax, word [rdx]
0x00001c0b      89c6           mov esi, eax
0x00001c0d      6681e60001     and si, 0x100
0x00001c12      6683fe01       cmp si, 1
0x00001c16      4983deff       sbb r14, 0xffffffffffffffff
0x00001c1a      66250002       and ax, 0x200
0x00001c1e      6683f801       cmp ax, 1
0x00001c22      4883d9ff       sbb rcx, 0xffffffffffffffff
0x00001c26      4883c202       add rdx, 2
0x00001c2a      4839fa         cmp rdx, rdi
0x00001c2d      75d9           jne 0x1c08
0x00001c2f      488b442468     mov rax, qword [rsp + 0x68]
0x00001c34      48896c2410     mov qword [rsp + 0x10], rbp
0x00001c39      4c8d79ff       lea r15, [rcx - 1]
0x00001c3d      4889dd         mov rbp, rbx
0x00001c40      448964243c     mov dword [rsp + 0x3c], r12d
0x00001c45      4889442418     mov qword [rsp + 0x18], rax
0x00001c4a      488b4318       mov rax, qword [rbx + 0x18]
0x00001c4e      4889442420     mov qword [rsp + 0x20], rax
0x00001c53      488b442458     mov rax, qword [rsp + 0x58]
0x00001c58      4889442428     mov qword [rsp + 0x28], rax
0x00001c5d      488b4308       mov rax, qword [rbx + 8]
0x00001c61      4889442430     mov qword [rsp + 0x30], rax
0x00001c66      48c7c0feffff.  mov rax, 0xfffffffffffffffe
0x00001c6d      48894310       mov qword [rbx + 0x10], rax
0x00001c71      4889442460     mov qword [rsp + 0x60], rax
0x00001c76      488d442448     lea rax, [rsp + 0x48]
0x00001c7b      48890424       mov qword [rsp], rax
0x00001c7f      488d44244c     lea rax, [rsp + 0x4c]
0x00001c84      4889442408     mov qword [rsp + 8], rax
0x00001c89      498d46ff       lea rax, [r14 - 1]
0x00001c8d      4589ee         mov r14d, r13d
0x00001c90      4889c3         mov rbx, rax
0x00001c93      e998000000     jmp 0x1d30
0x00001c98      83f902         cmp ecx, 2
0x00001c9b      746d           je 0x1d0a
0x00001c9d      4584f6         test r14b, r14b
0x00001ca0      0f848e080000   je 0x2534
0x00001ca6      837c244802     cmp dword [rsp + 0x48], 2
0x00001cab      0f8483080000   je 0x2534
0x00001cb1      488b742458     mov rsi, qword [rsp + 0x58]
0x00001cb6      837c244801     cmp dword [rsp + 0x48], 1
0x00001cbb      488b542468     mov rdx, qword [rsp + 0x68]
0x00001cc0      488b7608       mov rsi, qword [rsi + 8]
0x00001cc4      48c7442460ff.  mov qword [rsp + 0x60], 0xffffffffffffffff
0x00001ccd      4889742458     mov qword [rsp + 0x58], rsi
0x00001cd2      488b7508       mov rsi, qword [rbp + 8]
0x00001cd6      488b7608       mov rsi, qword [rsi + 8]
0x00001cda      48c74510ffff.  mov qword [rbp + 0x10], 0xffffffffffffffff
0x00001ce2      48897508       mov qword [rbp + 8], rsi
0x00001ce6      4c89fe         mov rsi, r15
0x00001ce9      480f44f3       cmove rsi, rbx
0x00001ced      4829f2         sub rdx, rsi
0x00001cf0      83e901         sub ecx, 1
0x00001cf3      488b4d18       mov rcx, qword [rbp + 0x18]
0x00001cf7      4889de         mov rsi, rbx
0x00001cfa      4889542468     mov qword [rsp + 0x68], rdx
0x00001cff      490f45f7       cmovne rsi, r15
0x00001d03      4829f1         sub rcx, rsi
0x00001d06      48894d18       mov qword [rbp + 0x18], rcx
0x00001d0a      48837c2460ff   cmp qword [rsp + 0x60], 0xffffffffffffffff
0x00001d10      410f94c6       sete r14b
0x00001d14      48837d10ff     cmp qword [rbp + 0x10], 0xffffffffffffffff
0x00001d19      410f94c5       sete r13b
0x00001d1d      4183c401       add r12d, 1
0x00001d21      0f8485040000   je 0x21ac
0x00001d27      83c001         add eax, 1
0x00001d2a      0f847c040000   je 0x21ac
0x00001d30      488b3424       mov rsi, qword [rsp]
0x00001d34      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00001d39      e872100000     call sym.get_next
0x00001d3e      488b742408     mov rsi, qword [rsp + 8]
0x00001d43      4889ef         mov rdi, rbp
0x00001d46      4189c4         mov r12d, eax
0x00001d49      e862100000     call sym.get_next
0x00001d4e      4584ed         test r13b, r13b
0x00001d51      8b4c244c       mov ecx, dword [rsp + 0x4c]
0x00001d55      0f853dffffff   jne 0x1c98
0x00001d5b      83f902         cmp ecx, 2
0x00001d5e      0f854dffffff   jne 0x1cb1
0x00001d64      eba4           jmp 0x1d0a
0x00001d66      84c0           test al, al
0x00001d68      0f85ef020000   jne 0x205d
0x00001d6e      84d2           test dl, dl
0x00001d70      c60569b62000.  mov byte [obj.translating], 1           ; [0x20d3e0:1]=0
0x00001d77      b802000000     mov eax, 2
0x00001d7c      0f858afdffff   jne 0x1b0c
0x00001d82      bf20000000     mov edi, 0x20                           ; "@"
0x00001d87      488d6c2450     lea rbp, [rsp + 0x50]
0x00001d8c      e84f480000     call sym.xmalloc
0x00001d91      4889442458     mov qword [rsp + 0x58], rax
0x00001d96      4889442450     mov qword [rsp + 0x50], rax
0x00001d9b      4889ee         mov rsi, rbp
0x00001d9e      48c740080000.  mov qword [rax + 8], 0
0x00001da6      486305eb9220.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20b098:4]=0
0x00001dad      498b7cc500     mov rdi, qword [r13 + rax*8]
0x00001db2      e819140000     call sym.parse_str
0x00001db7      84c0           test al, al
0x00001db9      7446           je 0x1e01
0x00001dbb      bf20000000     mov edi, 0x20                           ; "@"
0x00001dc0      488d9c249000.  lea rbx, [rsp + 0x90]
0x00001dc8      e813480000     call sym.xmalloc
0x00001dcd      488984249800.  mov qword [rsp + 0x98], rax
0x00001dd5      488984249000.  mov qword [rsp + 0x90], rax
0x00001ddd      4889de         mov rsi, rbx
0x00001de0      48c740080000.  mov qword [rax + 8], 0
0x00001de8      486305a99220.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20b098:4]=0
0x00001def      498b7cc508     mov rdi, qword [r13 + rax*8 + 8]
0x00001df4      e8d7130000     call sym.parse_str
0x00001df9      84c0           test al, al
0x00001dfb      0f855dfdffff   jne 0x1b5e
0x00001e01      b801000000     mov eax, 1
0x00001e06      488b8c24d801.  mov rcx, qword [rsp + 0x1d8]
0x00001e0e      6448330c2528.  xor rcx, qword fs:[0x28]
0x00001e17      0f8544060000   jne 0x2461
0x00001e1d      4881c4e80100.  add rsp, 0x1e8
0x00001e24      5b             pop rbx
0x00001e25      5d             pop rbp
0x00001e26      415c           pop r12
0x00001e28      415d           pop r13
0x00001e2a      415e           pop r14
0x00001e2c      415f           pop r15
0x00001e2e      c3             ret
0x00001e2f      440fb67110     movzx r14d, byte [rcx + 0x10]
0x00001e34      4829d0         sub rax, rdx
0x00001e37      bf20000000     mov edi, 0x20                           ; "@"
0x00001e3c      4989c5         mov r13, rax
0x00001e3f      e89c470000     call sym.xmalloc
0x00001e44      488b5308       mov rdx, qword [rbx + 8]
0x00001e48      48c740080000.  mov qword [rax + 8], 0
0x00001e50      c70004000000   mov dword [rax], 4
0x00001e56      44887010       mov byte [rax + 0x10], r14b
0x00001e5a      4c896818       mov qword [rax + 0x18], r13
0x00001e5e      4885d2         test rdx, rdx
0x00001e61      0f8429080000   je 0x2690
0x00001e67      48894208       mov qword [rdx + 8], rax
0x00001e6b      48894308       mov qword [rbx + 8], rax
0x00001e6f      488b442468     mov rax, qword [rsp + 0x68]
0x00001e74      48894318       mov qword [rbx + 0x18], rax
0x00001e78      803d63b52000.  cmp byte [obj.complement], 0            ; [0x20d3e2:1]=0
0x00001e7f      7450           je 0x1ed1
0x00001e81      80bc24810000.  cmp byte [rsp + 0x81], 0
0x00001e89      7446           je 0x1ed1
0x00001e8b      488b442468     mov rax, qword [rsp + 0x68]
0x00001e90      48394318       cmp qword [rbx + 0x18], rax
0x00001e94      0f8592050000   jne 0x242c
0x00001e9a      31f6           xor esi, esi
0x00001e9c      48c74310feff.  mov qword [rbx + 0x10], 0xfffffffffffffffe
0x00001ea4      4889df         mov rdi, rbx
0x00001ea7      e8040f0000     call sym.get_next
0x00001eac      83f8ff         cmp eax, 0xffffffff
0x00001eaf      4189c5         mov r13d, eax
0x00001eb2      750e           jne 0x1ec2
0x00001eb4      e973050000     jmp 0x242c
0x00001eb9      4139c5         cmp r13d, eax
0x00001ebc      0f856a050000   jne 0x242c
0x00001ec2      31f6           xor esi, esi
0x00001ec4      4889df         mov rdi, rbx
0x00001ec7      e8e40e0000     call sym.get_next
0x00001ecc      83f8ff         cmp eax, 0xffffffff
0x00001ecf      75e8           jne 0x1eb9
0x00001ed1      488b3db89120.  mov rdi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20b090:8]=0
0x00001ed8      be02000000     mov esi, 2
0x00001edd      e81e230000     call sym.fadvise
0x00001ee2      803dfbb42000.  cmp byte [obj.squeeze_repeats], 0       ; [0x20d3e4:1]=0
0x00001ee9      0f848f000000   je 0x1f7e
0x00001eef      4183fc01       cmp r12d, 1
0x00001ef3      0f848e040000   je 0x2387
0x00001ef9      803de3b42000.  cmp byte [obj.delete], 0                ; [0x20d3e3:1]=0
0x00001f00      0f848b000000   je 0x1f91
0x00001f06      4183fc02       cmp r12d, 2
0x00001f0a      0f8581000000   jne 0x1f91
0x00001f10      0fb635cbb420.  movzx esi, byte [obj.complement]        ; [0x20d3e2:1]=0
0x00001f17      488d15c29220.  lea rdx, obj.in_delete_set              ; 0x20b1e0
0x00001f1e      4889ef         mov rdi, rbp
0x00001f21      e8ba1b0000     call sym.set_initialize
0x00001f26      488d15b39320.  lea rdx, obj.in_squeeze_set             ; 0x20b2e0
0x00001f2d      4889df         mov rdi, rbx
0x00001f30      31f6           xor esi, esi
0x00001f32      e8a91b0000     call sym.set_initialize
0x00001f37      488d3d321100.  lea rdi, sym.read_and_delete            ; 0x3070 ; "ATUH\x8d-f\x81 "
0x00001f3e      e8fd1b0000     call sym.squeeze_filter.constprop.14
0x00001f43      31ff           xor edi, edi
0x00001f45      e806f8ffff     call sym.imp.close
0x00001f4a      85c0           test eax, eax
0x00001f4c      0f84b4feffff   je 0x1e06
0x00001f52      488d358a5200.  lea rsi, str.standard_input             ; 0x71e3 ; "standard input"
0x00001f59      ba05000000     mov edx, 5
0x00001f5e      31ff           xor edi, edi
0x00001f60      e82bf7ffff     call sym.imp.dcgettext
0x00001f65      4889c3         mov rbx, rax
0x00001f68      e8a3f6ffff     call sym.imp.__errno_location
0x00001f6d      8b30           mov esi, dword [rax]
0x00001f6f      4889da         mov rdx, rbx
0x00001f72      bf01000000     mov edi, 1
0x00001f77      31c0           xor eax, eax
0x00001f79      e8d2f8ffff     call sym.imp.error
0x00001f7e      803d5eb42000.  cmp byte [obj.delete], 0                ; [0x20d3e3:1]=0
0x00001f85      740a           je 0x1f91
0x00001f87      4183ec01       sub r12d, 1
0x00001f8b      0f841d040000   je 0x23ae
0x00001f91      803d48b42000.  cmp byte [obj.translating], 0           ; [0x20d3e0:1]=0
0x00001f98      74a9           je 0x1f43
0x00001f9a      803d41b42000.  cmp byte [obj.complement], 0            ; [0x20d3e2:1]=0
0x00001fa1      0f8520030000   jne 0x22c7
0x00001fa7      4c8d25329120.  lea r12, obj.xlate                      ; 0x20b0e0
0x00001fae      31c0           xor eax, eax
0x00001fb0      41880404       mov byte [r12 + rax], al
0x00001fb4      4883c001       add rax, 1
0x00001fb8      483d00010000   cmp rax, 0x100
0x00001fbe      75f0           jne 0x1fb0
0x00001fc0      48c7c0feffff.  mov rax, 0xfffffffffffffffe
0x00001fc7      4983cdff       or r13, 0xffffffffffffffff
0x00001fcb      4889442460     mov qword [rsp + 0x60], rax
0x00001fd0      48894310       mov qword [rbx + 0x10], rax
0x00001fd4      488d442448     lea rax, [rsp + 0x48]
0x00001fd9      48890424       mov qword [rsp], rax
0x00001fdd      488d44244c     lea rax, [rsp + 0x4c]
0x00001fe2      4889442408     mov qword [rsp + 8], rax
0x00001fe7      488b3424       mov rsi, qword [rsp]
0x00001feb      4889ef         mov rdi, rbp
0x00001fee      e8bd0d0000     call sym.get_next
0x00001ff3      488b742408     mov rsi, qword [rsp + 8]
0x00001ff8      4889df         mov rdi, rbx
0x00001ffb      4c63f0         movsxd r14, eax
0x00001ffe      e8ad0d0000     call sym.get_next
0x00002003      8b542448       mov edx, dword [rsp + 0x48]
0x00002007      85d2           test edx, edx
0x00002009      0f85aa000000   jne 0x20b9
0x0000200f      837c244c01     cmp dword [rsp + 0x4c], 1
0x00002014      0f84ff000000   je 0x2119
0x0000201a      4183feff       cmp r14d, 0xffffffff
0x0000201e      0f841b020000   je 0x223f
0x00002024      83f8ff         cmp eax, 0xffffffff
0x00002027      0f8412020000   je 0x223f
0x0000202d      837c244c02     cmp dword [rsp + 0x4c], 2
0x00002032      43880434       mov byte [r12 + r14], al
0x00002036      74af           je 0x1fe7
0x00002038      488b442458     mov rax, qword [rsp + 0x58]
0x0000203d      488b4008       mov rax, qword [rax + 8]
0x00002041      4c896c2460     mov qword [rsp + 0x60], r13
0x00002046      4889442458     mov qword [rsp + 0x58], rax
0x0000204b      488b4308       mov rax, qword [rbx + 8]
0x0000204f      488b4008       mov rax, qword [rax + 8]
0x00002053      4c896b10       mov qword [rbx + 0x10], r13
0x00002057      48894308       mov qword [rbx + 8], rax
0x0000205b      eb8a           jmp 0x1fe7
0x0000205d      84d2           test dl, dl
0x0000205f      c6057ab32000.  mov byte [obj.translating], 0           ; [0x20d3e0:1]=0
0x00002066      0f848bfaffff   je 0x1af7
0x0000206c      e911fdffff     jmp 0x1d82
0x00002071      488b4320       mov rax, qword [rbx + 0x20]
0x00002075      4883f801       cmp rax, 1
0x00002079      0f8706040000   ja 0x2485
0x0000207f      803d5ab32000.  cmp byte [obj.translating], 0           ; [0x20d3e0:1]=0
0x00002086      0f8542fbffff   jne 0x1bce
0x0000208c      4885c0         test rax, rax
0x0000208f      0f843cfeffff   je 0x1ed1
0x00002095      488d35746200.  lea rsi, str.the__c___construct_may_appear_in_string2_only_when_translating ; 0x8310 ; "the [c*] construct may appear in string2 only when translating"
0x0000209c      ba05000000     mov edx, 5
0x000020a1      31ff           xor edi, edi
0x000020a3      e8e8f5ffff     call sym.imp.dcgettext
0x000020a8      31f6           xor esi, esi
0x000020aa      4889c2         mov rdx, rax
0x000020ad      bf01000000     mov edi, 1
0x000020b2      31c0           xor eax, eax
0x000020b4      e897f7ffff     call sym.imp.error
0x000020b9      83ea01         sub edx, 1
0x000020bc      0f8558ffffff   jne 0x201a
0x000020c2      837c244c00     cmp dword [rsp + 0x4c], 0
0x000020c7      0f854dffffff   jne 0x201a
0x000020cd      e80ef8ffff     call sym.imp.__ctype_b_loc
0x000020d2      4c8b38         mov r15, qword [rax]
0x000020d5      4531f6         xor r14d, r14d
0x000020d8      0f1f84000000.  nop dword [rax + rax]
0x000020e0      43f644770101   test byte [r15 + r14*2 + 1], 1
0x000020e6      7410           je 0x20f8
0x000020e8      e8e3f7ffff     call sym.imp.__ctype_tolower_loc
0x000020ed      488b00         mov rax, qword [rax]
0x000020f0      428b04b0       mov eax, dword [rax + r14*4]
0x000020f4      43880434       mov byte [r12 + r14], al
0x000020f8      4983c601       add r14, 1
0x000020fc      4981fe000100.  cmp r14, 0x100
0x00002103      75db           jne 0x20e0
0x00002105      e92effffff     jmp 0x2038
0x0000210a      be02000000     mov esi, 2
0x0000210f      b802000000     mov eax, 2
0x00002114      e9eaf9ffff     jmp 0x1b03
0x00002119      e8c2f7ffff     call sym.imp.__ctype_b_loc
0x0000211e      4c8b38         mov r15, qword [rax]
0x00002121      4531f6         xor r14d, r14d
0x00002124      0f1f4000       nop dword [rax]
0x00002128      43f644770102   test byte [r15 + r14*2 + 1], 2
0x0000212e      7410           je 0x2140
0x00002130      e8abf4ffff     call sym.imp.__ctype_toupper_loc
0x00002135      488b00         mov rax, qword [rax]
0x00002138      428b04b0       mov eax, dword [rax + r14*4]
0x0000213c      43880434       mov byte [r12 + r14], al
0x00002140      4983c601       add r14, 1
0x00002144      4981fe000100.  cmp r14, 0x100
0x0000214b      75db           jne 0x2128
0x0000214d      e9e6feffff     jmp 0x2038
0x00002152      488dbc24d000.  lea rdi, [rsp + 0xd0]
0x0000215a      b920000000     mov ecx, 0x20                           ; "@"
0x0000215f      31c0           xor eax, eax
0x00002161      48c7442460fe.  mov qword [rsp + 0x60], 0xfffffffffffffffe
0x0000216a      41bd00010000   mov r13d, 0x100
0x00002170      f348ab         rep stosq qword [rdi], rax
0x00002173      eb1b           jmp 0x2190
0x00002175      4898           cdqe
0x00002177      0fb69404d000.  movzx edx, byte [rsp + rax + 0xd0]
0x0000217f      c68404d00000.  mov byte [rsp + rax + 0xd0], 1
0x00002187      83f201         xor edx, 1
0x0000218a      0fb6d2         movzx edx, dl
0x0000218d      4129d5         sub r13d, edx
0x00002190      31f6           xor esi, esi
0x00002192      4889ef         mov rdi, rbp
0x00002195      e8160c0000     call sym.get_next
0x0000219a      83f8ff         cmp eax, 0xffffffff
0x0000219d      75d6           jne 0x2175
0x0000219f      4d63ed         movsxd r13, r13d
0x000021a2      4c896c2468     mov qword [rsp + 0x68], r13
0x000021a7      e9c7f9ffff     jmp 0x1b73
0x000021ac      488b442418     mov rax, qword [rsp + 0x18]
0x000021b1      483b442468     cmp rax, qword [rsp + 0x68]
0x000021b6      4889eb         mov rbx, rbp
0x000021b9      448b64243c     mov r12d, dword [rsp + 0x3c]
0x000021be      488b6c2410     mov rbp, qword [rsp + 0x10]
0x000021c3      0f829d020000   jb 0x2466
0x000021c9      488b442420     mov rax, qword [rsp + 0x20]
0x000021ce      483b4318       cmp rax, qword [rbx + 0x18]
0x000021d2      0f828e020000   jb 0x2466
0x000021d8      488b442428     mov rax, qword [rsp + 0x28]
0x000021dd      4889442458     mov qword [rsp + 0x58], rax
0x000021e2      488b442430     mov rax, qword [rsp + 0x30]
0x000021e7      48894308       mov qword [rbx + 8], rax
0x000021eb      488b442468     mov rax, qword [rsp + 0x68]
0x000021f0      488b5318       mov rdx, qword [rbx + 0x18]
0x000021f4      4839d0         cmp rax, rdx
0x000021f7      0f867bfcffff   jbe 0x1e78
0x000021fd      803dddb12000.  cmp byte [obj.truncate_set1], 0         ; [0x20d3e1:1]=0
0x00002204      0f856efcffff   jne 0x1e78
0x0000220a      4885d2         test rdx, rdx
0x0000220d      0f8459040000   je 0x266c
0x00002213      488b4b08       mov rcx, qword [rbx + 8]
0x00002217      8b31           mov esi, dword [rcx]
0x00002219      83fe01         cmp esi, 1
0x0000221c      0f842e020000   je 0x2450
0x00002222      0f8207fcffff   jb 0x1e2f
0x00002228      83fe02         cmp esi, 2
0x0000222b      0f8417040000   je 0x2648
0x00002231      83fe04         cmp esi, 4
0x00002234      0f84f5fbffff   je 0x1e2f
0x0000223a      e8c1f3ffff     call sym.imp.abort
0x0000223f      4183c601       add r14d, 1
0x00002243      740d           je 0x2252
0x00002245      803d95b12000.  cmp byte [obj.truncate_set1], 0         ; [0x20d3e1:1]=0
0x0000224c      0f84c3020000   je 0x2515
0x00002252      803d8bb12000.  cmp byte [obj.squeeze_repeats], 0       ; [0x20d3e4:1]=0
0x00002259      488d2d809120.  lea rbp, obj.io_buf                     ; 0x20b3e0
0x00002260      0f85ff000000   jne 0x2365
0x00002266      be00200000     mov esi, 0x2000                         ; "\r"
0x0000226b      4889ef         mov rdi, rbp
0x0000226e      e8ad0e0000     call sym.read_and_xlate
0x00002273      4885c0         test rax, rax
0x00002276      4889c3         mov rbx, rax
0x00002279      0f84c4fcffff   je 0x1f43
0x0000227f      488b0d028e20.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00002286      4889c2         mov rdx, rax
0x00002289      be01000000     mov esi, 1
0x0000228e      4889ef         mov rdi, rbp
0x00002291      e87af5ffff     call sym.imp.fwrite_unlocked
0x00002296      4839c3         cmp rbx, rax
0x00002299      74cb           je 0x2266
0x0000229b      488d35f24d00.  lea rsi, str.write_error                ; 0x7094 ; "write error"
0x000022a2      ba05000000     mov edx, 5
0x000022a7      31ff           xor edi, edi
0x000022a9      e8e2f3ffff     call sym.imp.dcgettext
0x000022ae      4889c3         mov rbx, rax
0x000022b1      e85af3ffff     call sym.imp.__errno_location
0x000022b6      8b30           mov esi, dword [rax]
0x000022b8      4889da         mov rdx, rbx
0x000022bb      bf01000000     mov edi, 1
0x000022c0      31c0           xor eax, eax
0x000022c2      e889f5ffff     call sym.imp.error
0x000022c7      488d15128f20.  lea rdx, obj.in_delete_set              ; 0x20b1e0
0x000022ce      31f6           xor esi, esi
0x000022d0      4889ef         mov rdi, rbp
0x000022d3      4c8d25068e20.  lea r12, obj.xlate                      ; 0x20b0e0
0x000022da      e801180000     call sym.set_initialize
0x000022df      48c74310feff.  mov qword [rbx + 0x10], 0xfffffffffffffffe
0x000022e7      31c0           xor eax, eax
0x000022e9      0f1f80000000.  nop dword [rax]
0x000022f0      41880404       mov byte [r12 + rax], al
0x000022f4      4883c001       add rax, 1
0x000022f8      483d00010000   cmp rax, 0x100
0x000022fe      75f0           jne 0x22f0
0x00002300      31ed           xor ebp, ebp
0x00002302      4c8d2dd78e20.  lea r13, obj.in_delete_set              ; 0x20b1e0
0x00002309      eb11           jmp 0x231c
0x0000230b      4883c501       add rbp, 1
0x0000230f      4881fd000100.  cmp rbp, 0x100
0x00002316      0f8436ffffff   je 0x2252
0x0000231c      41807c2d0000   cmp byte [r13 + rbp], 0
0x00002322      75e7           jne 0x230b
0x00002324      31f6           xor esi, esi
0x00002326      4889df         mov rdi, rbx
0x00002329      e8820a0000     call sym.get_next
0x0000232e      83f8ff         cmp eax, 0xffffffff
0x00002331      7406           je 0x2339
0x00002333      4188042c       mov byte [r12 + rbp], al
0x00002337      ebd2           jmp 0x230b
0x00002339      803da1b02000.  cmp byte [obj.truncate_set1], 0         ; [0x20d3e1:1]=0
0x00002340      0f850cffffff   jne 0x2252
0x00002346      488d0d555000.  lea rcx, obj.__PRETTY_FUNCTION__.7483   ; 0x73a2 ; "main"
0x0000234d      488d35cd4c00.  lea rsi, str..._coreutils_8.31_src_tr.c ; 0x7021 ; "../coreutils-8.31/src/tr.c"
0x00002354      488d3d544e00.  lea rdi, str.ch_____1____truncate_set1  ; 0x71af ; "ch != -1 || truncate_set1"
0x0000235b      ba2d070000     mov edx, 0x72d
0x00002360      e8bbf3ffff     call sym.imp.__assert_fail
0x00002365      488d15748f20.  lea rdx, obj.in_squeeze_set             ; 0x20b2e0
0x0000236c      4889df         mov rdi, rbx
0x0000236f      31f6           xor esi, esi
0x00002371      e86a170000     call sym.set_initialize
0x00002376      488d3da30d00.  lea rdi, sym.read_and_xlate             ; 0x3120 ; "SH\x89\xf2H\x89\xfbH\x89\xfe1\xff\xe8/."
0x0000237d      e8be170000     call sym.squeeze_filter.constprop.14
0x00002382      e9bcfbffff     jmp 0x1f43
0x00002387      0fb63554b020.  movzx esi, byte [obj.complement]        ; [0x20d3e2:1]=0
0x0000238e      488d154b8f20.  lea rdx, obj.in_squeeze_set             ; 0x20b2e0
0x00002395      4889ef         mov rdi, rbp
0x00002398      e843170000     call sym.set_initialize
0x0000239d      488d3d9c0c00.  lea rdi, sym.plain_read                 ; 0x3040 ; "H\x83\xec\bH\x89\xf2H\x89\xfe1\xff\xe8\x0f/"
0x000023a4      e897170000     call sym.squeeze_filter.constprop.14
0x000023a9      e995fbffff     jmp 0x1f43
0x000023ae      0fb6352db020.  movzx esi, byte [obj.complement]        ; [0x20d3e2:1]=0
0x000023b5      4889ef         mov rdi, rbp
0x000023b8      488d15218e20.  lea rdx, obj.in_delete_set              ; 0x20b1e0
0x000023bf      488d2d1a9020.  lea rbp, obj.io_buf                     ; 0x20b3e0
0x000023c6      e815170000     call sym.set_initialize
0x000023cb      be00200000     mov esi, 0x2000                         ; "\r"
0x000023d0      4889ef         mov rdi, rbp
0x000023d3      e8980c0000     call sym.read_and_delete
0x000023d8      4885c0         test rax, rax
0x000023db      4889c3         mov rbx, rax
0x000023de      0f845ffbffff   je 0x1f43
0x000023e4      488b0d9d8c20.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x000023eb      4889c2         mov rdx, rax
0x000023ee      be01000000     mov esi, 1
0x000023f3      4889ef         mov rdi, rbp
0x000023f6      e815f4ffff     call sym.imp.fwrite_unlocked
0x000023fb      4839c3         cmp rbx, rax
0x000023fe      74cb           je 0x23cb
0x00002400      488d358d4c00.  lea rsi, str.write_error                ; 0x7094 ; "write error"
0x00002407      ba05000000     mov edx, 5
0x0000240c      31ff           xor edi, edi
0x0000240e      e87df2ffff     call sym.imp.dcgettext
0x00002413      4889c3         mov rbx, rax
0x00002416      e8f5f1ffff     call sym.imp.__errno_location
0x0000241b      8b30           mov esi, dword [rax]
0x0000241d      4889da         mov rdx, rbx
0x00002420      bf01000000     mov edi, 1
0x00002425      31c0           xor eax, eax
0x00002427      e824f4ffff     call sym.imp.error
0x0000242c      488d356d5e00.  lea rsi, str.when_translating_with_complemented_character_classes___string2_must_map_all_characters_in_the_domain_to_one ; 0x82a0 ; "when translating with complemented character classes,\nstring2 must map all characters in the domain to one"
0x00002433      ba05000000     mov edx, 5
0x00002438      31ff           xor edi, edi
0x0000243a      e851f2ffff     call sym.imp.dcgettext
0x0000243f      31f6           xor esi, esi
0x00002441      4889c2         mov rdx, rax
0x00002444      bf01000000     mov edi, 1
0x00002449      31c0           xor eax, eax
0x0000244b      e800f4ffff     call sym.imp.error
0x00002450      440fb67111     movzx r14d, byte [rcx + 0x11]
0x00002455      e9daf9ffff     jmp 0x1e34
0x0000245a      31ff           xor edi, edi
0x0000245c      e8df180000     call sym.usage
0x00002461      e85af2ffff     call sym.imp.__stack_chk_fail
0x00002466      488d0d834e00.  lea rcx, obj.__PRETTY_FUNCTION__.7270   ; 0x72f0 ; "validate_case_classes"
0x0000246d      488d35ad4b00.  lea rsi, str..._coreutils_8.31_src_tr.c ; 0x7021 ; "../coreutils-8.31/src/tr.c"
0x00002474      488d3d455d00.  lea rdi, str.old_s1_len____s1__length____old_s2_len____s2__length ; 0x81c0 ; "old_s1_len >= s1->length && old_s2_len >= s2->length"
0x0000247b      bac5040000     mov edx, 0x4c5
0x00002480      e89bf2ffff     call sym.imp.__assert_fail
0x00002485      488d352c5c00.  lea rsi, str.only_one__c___repeat_construct_may_appear_in_string2 ; 0x80b8 ; "only one [c*] repeat construct may appear in string2"
0x0000248c      ba05000000     mov edx, 5
0x00002491      31ff           xor edi, edi
0x00002493      e8f8f1ffff     call sym.imp.dcgettext
0x00002498      31f6           xor esi, esi
0x0000249a      4889c2         mov rdx, rax
0x0000249d      bf01000000     mov edi, 1
0x000024a2      31c0           xor eax, eax
0x000024a4      e8a7f3ffff     call sym.imp.error
0x000024a9      488d35d05b00.  lea rsi, str.the__c___repeat_construct_may_not_appear_in_string1 ; 0x8080 ; "the [c*] repeat construct may not appear in string1"
0x000024b0      ba05000000     mov edx, 5
0x000024b5      31ff           xor edi, edi
0x000024b7      e8d4f1ffff     call sym.imp.dcgettext
0x000024bc      31f6           xor esi, esi
0x000024be      4889c2         mov rdx, rax
0x000024c1      bf01000000     mov edi, 1
0x000024c6      31c0           xor eax, eax
0x000024c8      e883f3ffff     call sym.imp.error
0x000024cd      488d355c5c00.  lea rsi, str.when_translating__the_only_character_classes_that_may_appear_in__string2_are__upper__and__lower ; 0x8130 ; "when translating, the only character classes that may appear in\nstring2 are 'upper' and 'lower'"
0x000024d4      ba05000000     mov edx, 5
0x000024d9      31ff           xor edi, edi
0x000024db      e8b0f1ffff     call sym.imp.dcgettext
0x000024e0      31f6           xor esi, esi
0x000024e2      4889c2         mov rdx, rax
0x000024e5      bf01000000     mov edi, 1
0x000024ea      31c0           xor eax, eax
0x000024ec      e85ff3ffff     call sym.imp.error
0x000024f1      488d35f85b00.  lea rsi, str.c___expressions_may_not_appear_in_string2_when_translating ; 0x80f0 ; "[=c=] expressions may not appear in string2 when translating"
0x000024f8      ba05000000     mov edx, 5
0x000024fd      31ff           xor edi, edi
0x000024ff      e88cf1ffff     call sym.imp.dcgettext
0x00002504      31f6           xor esi, esi
0x00002506      4889c2         mov rdx, rax
0x00002509      bf01000000     mov edi, 1
0x0000250e      31c0           xor eax, eax
0x00002510      e83bf3ffff     call sym.imp.error
0x00002515      488d0d864e00.  lea rcx, obj.__PRETTY_FUNCTION__.7483   ; 0x73a2 ; "main"
0x0000251c      488d35fe4a00.  lea rsi, str..._coreutils_8.31_src_tr.c ; 0x7021 ; "../coreutils-8.31/src/tr.c"
0x00002523      488d3d9f4c00.  lea rdi, str.c1_____1____truncate_set1  ; 0x71c9 ; "c1 == -1 || truncate_set1"
0x0000252a      ba62070000     mov edx, 0x762
0x0000252f      e8ecf1ffff     call sym.imp.__assert_fail
0x00002534      488d35555c00.  lea rsi, str.misaligned__:upper:__and_or__:lower:__construct ; 0x8190 ; "misaligned [:upper:] and/or [:lower:] construct"
0x0000253b      ba05000000     mov edx, 5
0x00002540      31ff           xor edi, edi
0x00002542      e849f1ffff     call sym.imp.dcgettext
0x00002547      31f6           xor esi, esi
0x00002549      4889c2         mov rdx, rax
0x0000254c      bf01000000     mov edi, 1
0x00002551      31c0           xor eax, eax
0x00002553      e8f8f2ffff     call sym.imp.error
0x00002558      4585e4         test r12d, r12d
0x0000255b      7526           jne 0x2583
0x0000255d      488d35114c00.  lea rsi, str.missing_operand            ; 0x7175 ; "missing operand"
0x00002564      31ff           xor edi, edi
0x00002566      ba05000000     mov edx, 5
0x0000256b      e820f1ffff     call sym.imp.dcgettext
0x00002570      31f6           xor esi, esi
0x00002572      4889c2         mov rdx, rax
0x00002575      31ff           xor edi, edi
0x00002577      31c0           xor eax, eax
0x00002579      e8d2f2ffff     call sym.imp.error
0x0000257e      e9a4f4ffff     jmp 0x1a27
0x00002583      498b7cddf8     mov rdi, qword [r13 + rbx*8 - 8]
0x00002588      e8b3390000     call sym.quote
0x0000258d      488d35f14b00.  lea rsi, str.missing_operand_after__s   ; 0x7185 ; "missing operand after %s"
0x00002594      31ff           xor edi, edi
0x00002596      4889c3         mov rbx, rax
0x00002599      ba05000000     mov edx, 5
0x0000259e      e8edf0ffff     call sym.imp.dcgettext
0x000025a3      31f6           xor esi, esi
0x000025a5      4889c2         mov rdx, rax
0x000025a8      31ff           xor edi, edi
0x000025aa      31c0           xor eax, eax
0x000025ac      4889d9         mov rcx, rbx
0x000025af      e89cf2ffff     call sym.imp.error
0x000025b4      803d29ae2000.  cmp byte [obj.squeeze_repeats], 0       ; [0x20d3e4:1]=0
0x000025bb      488d35465a00.  lea rsi, str.Two_strings_must_be_given_when_translating. ; 0x8008 ; "Two strings must be given when translating."
0x000025c2      488d05f75900.  lea rax, str.Two_strings_must_be_given_when_both_deleting_and_squeezing_repeats. ; 0x7fc0 ; "Two strings must be given when both deleting and squeezing repeats."
0x000025c9      ba05000000     mov edx, 5
0x000025ce      480f45f0       cmovne rsi, rax
0x000025d2      31ff           xor edi, edi
0x000025d4      e8b7f0ffff     call sym.imp.dcgettext
0x000025d9      488b3de08a20.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20b0c0:8]=0
0x000025e0      488d15a96200.  lea rdx, [0x00008890]                   ; "%s\n"
0x000025e7      4889c1         mov rcx, rax
0x000025ea      be01000000     mov esi, 1
0x000025ef      31c0           xor eax, eax
0x000025f1      e8aaf2ffff     call sym.imp.__fprintf_chk
0x000025f6      e92cf4ffff     jmp 0x1a27
0x000025fb      01c8           add eax, ecx
0x000025fd      4898           cdqe
0x000025ff      498b7cc500     mov rdi, qword [r13 + rax*8]
0x00002604      e837390000     call sym.quote
0x00002609      488d358e4b00.  lea rsi, str.extra_operand__s           ; 0x719e ; "extra operand %s"
0x00002610      31ff           xor edi, edi
0x00002612      4889c3         mov rbx, rax
0x00002615      ba05000000     mov edx, 5
0x0000261a      e871f0ffff     call sym.imp.dcgettext
0x0000261f      31f6           xor esi, esi
0x00002621      4889c2         mov rdx, rax
0x00002624      31ff           xor edi, edi
0x00002626      31c0           xor eax, eax
0x00002628      4889d9         mov rcx, rbx
0x0000262b      e820f2ffff     call sym.imp.error
0x00002630      4183fc02       cmp r12d, 2
0x00002634      ba05000000     mov edx, 5
0x00002639      488d35f85900.  lea rsi, str.Only_one_string_may_be_given_when_deleting_without_squeezing_repeats. ; 0x8038 ; "Only one string may be given when deleting without squeezing repeats."
0x00002640      0f85e1f3ffff   jne 0x1a27
0x00002646      eb8a           jmp 0x25d2
0x00002648      488d35e15b00.  lea rsi, str.when_translating_with_string1_longer_than_string2___the_latter_string_must_not_end_with_a_character_class ; 0x8230 ; "when translating with string1 longer than string2,\nthe latter string must not end with a character class"
0x0000264f      ba05000000     mov edx, 5
0x00002654      31ff           xor edi, edi
0x00002656      e835f0ffff     call sym.imp.dcgettext
0x0000265b      31f6           xor esi, esi
0x0000265d      4889c2         mov rdx, rax
0x00002660      bf01000000     mov edi, 1
0x00002665      31c0           xor eax, eax
0x00002667      e8e4f1ffff     call sym.imp.error
0x0000266c      488d35855b00.  lea rsi, str.when_not_truncating_set1__string2_must_be_non_empty ; 0x81f8 ; "when not truncating set1, string2 must be non-empty"
0x00002673      ba05000000     mov edx, 5
0x00002678      31ff           xor edi, edi
0x0000267a      e811f0ffff     call sym.imp.dcgettext
0x0000267f      31f6           xor esi, esi
0x00002681      4889c2         mov rdx, rax
0x00002684      bf01000000     mov edi, 1
0x00002689      31c0           xor eax, eax
0x0000268b      e8c0f1ffff     call sym.imp.error
0x00002690      e87bf2ffff     call sym.append_repeated_char.part.8
0x00002695      662e0f1f8400.  nop word cs:[rax + rax]
0x0000269f      90             nop
;-- entry0:
;-- _start:
;-- rip:
0x000026a0      31ed           xor ebp, ebp
0x000026a2      4989d1         mov r9, rdx
0x000026a5      5e             pop rsi
0x000026a6      4889e2         mov rdx, rsp
0x000026a9      4883e4f0       and rsp, 0xfffffffffffffff0
0x000026ad      50             push rax
0x000026ae      54             push rsp
0x000026af      4c8d051a4900.  lea r8, sym.__libc_csu_fini             ; 0x6fd0
0x000026b6      488d0da34800.  lea rcx, sym.__libc_csu_init            ; 0x6f60 ; "AWAVI\x89\xd7AUATL\x8d%\x1e; "
0x000026bd      488d3d7cf2ff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1940 ; "AWAVAUATI\x89\xf5USHc\xdfH\x8d-I\x91 "
0x000026c4      ff150e892000   call qword [reloc.__libc_start_main]    ; [0x20afd8:8]=0
0x000026ca      f4             hlt
0x000026cb      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x000026d0      488d3da98920.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20b080
0x000026d7      55             push rbp
0x000026d8      488d05a18920.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20b080
0x000026df      4839f8         cmp rax, rdi
0x000026e2      4889e5         mov rbp, rsp
0x000026e5      7419           je 0x2700
0x000026e7      488b05e28820.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x20afd0:8]=0
0x000026ee      4885c0         test rax, rax
0x000026f1      740d           je 0x2700
0x000026f3      5d             pop rbp
0x000026f4      ffe0           jmp rax
0x000026f6      662e0f1f8400.  nop word cs:[rax + rax]
0x00002700      5d             pop rbp
0x00002701      c3             ret
0x00002702      0f1f4000       nop dword [rax]
0x00002706      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00002710      488d3d698920.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20b080
0x00002717      488d35628920.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20b080
0x0000271e      55             push rbp
0x0000271f      4829fe         sub rsi, rdi
0x00002722      4889e5         mov rbp, rsp
0x00002725      48c1fe03       sar rsi, 3
0x00002729      4889f0         mov rax, rsi
0x0000272c      48c1e83f       shr rax, 0x3f
0x00002730      4801c6         add rsi, rax
0x00002733      48d1fe         sar rsi, 1
0x00002736      7418           je 0x2750
0x00002738      488b05a98820.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x20afe8:8]=0
0x0000273f      4885c0         test rax, rax
0x00002742      740c           je 0x2750
0x00002744      5d             pop rbp
0x00002745      ffe0           jmp rax
0x00002747      660f1f840000.  nop word [rax + rax]
0x00002750      5d             pop rbp
0x00002751      c3             ret
0x00002752      0f1f4000       nop dword [rax]
0x00002756      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00002760      803d61892000.  cmp byte [obj.completed.7697], 0        ; [0x20b0c8:1]=0
0x00002767      752f           jne 0x2798
0x00002769      48833d7f8820.  cmp qword [reloc.__cxa_finalize], 0     ; [0x20aff0:8]=0
0x00002771      55             push rbp
0x00002772      4889e5         mov rbp, rsp
0x00002775      740c           je 0x2783
0x00002777      488b3d8a8820.  mov rdi, qword [obj.__dso_handle]       ; [0x20b008:8]=0x20b008 obj.__dso_handle
0x0000277e      e87df1ffff     call sym..plt.got
0x00002783      e848ffffff     call sym.deregister_tm_clones
0x00002788      c60539892000.  mov byte [obj.completed.7697], 1        ; [0x20b0c8:1]=0
0x0000278f      5d             pop rbp
0x00002790      c3             ret
0x00002791      0f1f80000000.  nop dword [rax]
0x00002798      f3c3           ret
0x0000279a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x000027a0      55             push rbp
0x000027a1      4889e5         mov rbp, rsp
0x000027a4      5d             pop rbp
0x000027a5      e966ffffff     jmp sym.register_tm_clones
0x000027aa      660f1f440000   nop word [rax + rax]
;-- star_digits_closebracket:
0x000027b0      4c8b07         mov r8, qword [rdi]                     ; .//src:831
0x000027b3      31c0           xor eax, eax                            ; .//src:833
0x000027b5      41803c302a     cmp byte [r8 + rsi], 0x2a               ; .//src:196
0x000027ba      7404           je 0x27c0
0x000027bc      f3c3           ret                                     ; .//src:839
0x000027be      6690           nop
0x000027c0      4c8b5708       mov r10, qword [rdi + 8]                ; .//src:196
0x000027c4      41803c3200     cmp byte [r10 + rsi], 0
0x000027c9      75f1           jne 0x27bc
0x000027cb      4c8b4f10       mov r9, qword [rdi + 0x10]              ; .//src:835
0x000027cf      488d5601       lea rdx, [rsi + 1]
0x000027d3      4c39ca         cmp rdx, r9
0x000027d6      73e4           jae 0x27bc
0x000027d8      410fb6443001   movzx eax, byte [r8 + rsi + 1]          ; .//src:836
0x000027de      89c7           mov edi, eax
0x000027e0      83e830         sub eax, 0x30
0x000027e3      83f809         cmp eax, 9
0x000027e6      7738           ja 0x2820
0x000027e8      410fb6443201   movzx eax, byte [r10 + rsi + 1]
0x000027ee      84c0           test al, al
0x000027f0      741c           je 0x280e
0x000027f2      eb46           jmp 0x283a
0x000027f4      0f1f4000       nop dword [rax]
0x000027f8      410fb60c10     movzx ecx, byte [r8 + rdx]
0x000027fd      89cf           mov edi, ecx
0x000027ff      83e930         sub ecx, 0x30
0x00002802      83f909         cmp ecx, 9
0x00002805      7719           ja 0x2820
0x00002807      41803c1200     cmp byte [r10 + rdx], 0
0x0000280c      752a           jne 0x2838
0x0000280e      4883c201       add rdx, 1                              ; .//src:835
0x00002812      4c39ca         cmp rdx, r9
0x00002815      72e1           jb 0x27f8
0x00002817      f3c3           ret
0x00002819      0f1f80000000.  nop dword [rax]
0x00002820      31c0           xor eax, eax                            ; .//src:196
0x00002822      4080ff5d       cmp dil, 0x5d
0x00002826      7594           jne 0x27bc
0x00002828      410fb60412     movzx eax, byte [r10 + rdx]
0x0000282d      83f001         xor eax, 1
0x00002830      c3             ret
0x00002831      0f1f80000000.  nop dword [rax]
0x00002838      f3c3           ret
0x0000283a      31c0           xor eax, eax                            ; .//src:836
0x0000283c      c3             ret                                     ; .//src:837
0x0000283d      0f1f00         nop dword [rax]
;-- make_printable_char:
0x00002840      4154           push r12                                ; .//src:559
0x00002842      55             push rbp
0x00002843      4189fc         mov r12d, edi
0x00002846      53             push rbx
0x00002847      400fb6df       movzx ebx, dil
0x0000284b      bf05000000     mov edi, 5                              ; .//src:560
0x00002850      e88b3d0000     call sym.xmalloc
0x00002855      4889c5         mov rbp, rax
0x00002858      e883f0ffff     call sym.imp.__ctype_b_loc              ; .//src:562
0x0000285d      488b00         mov rax, qword [rax]
0x00002860      f644580140     test byte [rax + rbx*2 + 1], 0x40
0x00002865      7419           je 0x2880
0x00002867      44886500       mov byte [rbp], r12b                    ; .//src:564
0x0000286b      c6450100       mov byte [rbp + 1], 0                   ; .//src:565
0x0000286f      4889e8         mov rax, rbp                            ; .//src:572
0x00002872      5b             pop rbx
0x00002873      5d             pop rbp
0x00002874      415c           pop r12
0x00002876      c3             ret
0x00002877      660f1f840000.  nop word [rax + rax]
0x00002880      488d0d7d4700.  lea rcx, str.03o                        ; ../coreutils-8.31/src/.c:33 ; 0x7004 ; "\%03o"
0x00002887      450fb6c4       movzx r8d, r12b
0x0000288b      4889ef         mov rdi, rbp
0x0000288e      ba05000000     mov edx, 5
0x00002893      be01000000     mov esi, 1
0x00002898      31c0           xor eax, eax
0x0000289a      e851f0ffff     call sym.imp.__sprintf_chk
0x0000289f      4889e8         mov rax, rbp                            ; .//src:572
0x000028a2      5b             pop rbx
0x000028a3      5d             pop rbp
0x000028a4      415c           pop r12
0x000028a6      c3             ret
0x000028a7      660f1f840000.  nop word [rax + rax]
;-- make_printable_str:
0x000028b0      4157           push r15                                ; .//src:583
0x000028b2      4156           push r14
0x000028b4      ba04000000     mov edx, 4                              ; stdio2.h:101 __fortify_function int
0x000028b9      4155           push r13                                ; .//src:583
0x000028bb      4154           push r12
0x000028bd      4989fe         mov r14, rdi
0x000028c0      55             push rbp
0x000028c1      53             push rbx
0x000028c2      488d7e01       lea rdi, [rsi + 1]                      ; .//src:586
0x000028c6      4889f3         mov rbx, rsi                            ; .//src:583
0x000028c9      4883ec28       sub rsp, 0x28
0x000028cd      64488b042528.  mov rax, qword fs:[0x28]
0x000028d6      4889442418     mov qword [rsp + 0x18], rax
0x000028db      31c0           xor eax, eax
0x000028dd      4889d0         mov rax, rdx                            ; stdio2.h:101 __fortify_function int
0x000028e0      48f7e7         mul rdi
0x000028e3      0f805b010000   jo 0x2a44
0x000028e9      31c9           xor ecx, ecx
0x000028eb      4885c0         test rax, rax
0x000028ee      0f884b010000   js 0x2a3f
0x000028f4      4885c9         test rcx, rcx
0x000028f7      0f8542010000   jne 0x2a3f
0x000028fd      48c1e702       shl rdi, 2                              ; stdio2.h:103 {
0x00002901      e8da3c0000     call sym.xmalloc
0x00002906      4885db         test rbx, rbx                           ; .//src:589
0x00002909      4989c5         mov r13, rax                            ; stdio2.h:103 {
0x0000290c      0f84be000000   je 0x29d0                               ; .//src:589
0x00002912      4c01f3         add rbx, r14
0x00002915      4989c7         mov r15, rax                            ; .//src:587
0x00002918      488d2df34600.  lea rbp, [0x00007012]                   ; .//src:607 ; "\f"
0x0000291f      4c8d25f84600.  lea r12, [0x0000701e]                   ; .//src:619 ; "\v"
0x00002926      eb4c           jmp 0x2974
0x00002928      0f1f84000000.  nop dword [rax + rax]
0x00002930      4180f80c       cmp r8b, 0xc                            ; .//src:595
0x00002934      4889ee         mov rsi, rbp                            ; .//src:607
0x00002937      7427           je 0x2960                               ; .//src:595
0x00002939      4c89e6         mov rsi, r12                            ; .//src:619
0x0000293c      7c22           jl 0x2960                               ; .//src:595
0x0000293e      4180f80d       cmp r8b, 0xd
0x00002942      488d35cf4600.  lea rsi, [0x00007018]                   ; .//src:613 ; "\r"
0x00002949      7415           je 0x2960                               ; .//src:595
0x0000294b      4180f85c       cmp r8b, 0x5c
0x0000294f      488d35b44600.  lea rsi, [0x0000700a]                   ; .//src:598 ; "\"
0x00002956      754b           jne 0x29a3                              ; .//src:595
0x00002958      0f1f84000000.  nop dword [rax + rax]
0x00002960      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/xalloc.h:97
0x00002963      4983c601       add r14, 1
0x00002967      e814edffff     call sym.imp.stpcpy
0x0000296c      4c39f3         cmp rbx, r14                            ; .//src:589
0x0000296f      4989c7         mov r15, rax                            ; ../coreutils-8.31/lib/xalloc.h:97
0x00002972      745c           je 0x29d0                               ; .//src:589
0x00002974      450fb606       movzx r8d, byte [r14]                   ; .//src:593
0x00002978      4180f80a       cmp r8b, 0xa                            ; .//src:595
0x0000297c      747a           je 0x29f8
0x0000297e      7fb0           jg 0x2930
0x00002980      4180f808       cmp r8b, 8
0x00002984      488d35844600.  lea rsi, [0x0000700f]                   ; .//src:604 ; "\b"
0x0000298b      74d3           je 0x2960                               ; .//src:595
0x0000298d      488d35874600.  lea rsi, [0x0000701b]                   ; .//src:616 ; "\t"
0x00002994      7fca           jg 0x2960                               ; .//src:595
0x00002996      4180f807       cmp r8b, 7
0x0000299a      488d356b4600.  lea rsi, [0x0000700c]                   ; .//src:601 ; "\a"
0x000029a1      74bd           je 0x2960                               ; .//src:595
0x000029a3      4488442408     mov byte [rsp + 8], r8b
0x000029a8      e833efffff     call sym.imp.__ctype_b_loc              ; .//src:622
0x000029ad      0fb6542408     movzx edx, byte [rsp + 8]
0x000029b2      488b08         mov rcx, qword [rax]
0x000029b5      f644510140     test byte [rcx + rdx*2 + 1], 0x40
0x000029ba      4989d0         mov r8, rdx
0x000029bd      7449           je 0x2a08
0x000029bf      88542413       mov byte [rsp + 0x13], dl               ; .//src:624
0x000029c3      c644241400     mov byte [rsp + 0x14], 0                ; .//src:625
0x000029c8      488d742413     lea rsi, [rsp + 0x13]                   ; .//src:629
0x000029cd      eb91           jmp 0x2960
0x000029cf      90             nop
0x000029d0      488b4c2418     mov rcx, qword [rsp + 0x18]             ; .//src:635
0x000029d5      6448330c2528.  xor rcx, qword fs:[0x28]
0x000029de      4c89e8         mov rax, r13
0x000029e1      7557           jne 0x2a3a
0x000029e3      4883c428       add rsp, 0x28
0x000029e7      5b             pop rbx
0x000029e8      5d             pop rbp
0x000029e9      415c           pop r12
0x000029eb      415d           pop r13
0x000029ed      415e           pop r14
0x000029ef      415f           pop r15
0x000029f1      c3             ret
0x000029f2      660f1f440000   nop word [rax + rax]
0x000029f8      488d35164600.  lea rsi, [0x00007015]                   ; .//src:610 ; "\n"
0x000029ff      e95cffffff     jmp 0x2960                              ; .//src:611
0x00002a04      0f1f4000       nop dword [rax]
0x00002a08      4c8d542413     lea r10, [rsp + 0x13]                   ; ../coreutils-8.31/src/.c:33
0x00002a0d      488d0df04500.  lea rcx, str.03o                        ; 0x7004 ; "\%03o"
0x00002a14      be01000000     mov esi, 1
0x00002a19      ba05000000     mov edx, 5
0x00002a1e      31c0           xor eax, eax
0x00002a20      4c89d7         mov rdi, r10
0x00002a23      4c89542408     mov qword [rsp + 8], r10
0x00002a28      e8c3eeffff     call sym.imp.__sprintf_chk
0x00002a2d      4c8b542408     mov r10, qword [rsp + 8]                ; .//src:629
0x00002a32      4c89d6         mov rsi, r10
0x00002a35      e926ffffff     jmp 0x2960
0x00002a3a      e881ecffff     call sym.imp.__stack_chk_fail           ; .//src:635
0x00002a3f      e8ec3d0000     call sym.xalloc_die                     ; stdio2.h:102 printf (const char *__restrict __fmt, ...)
0x00002a44      b901000000     mov ecx, 1                              ; stdio2.h:101 __fortify_function int
0x00002a49      e99dfeffff     jmp 0x28eb
0x00002a4e      6690           nop
;-- is_char_class_member:
0x00002a50      83ff0b         cmp edi, 0xb                            ; .//src:368
0x00002a53      53             push rbx
0x00002a54      0f8789010000   ja 0x2be3                               ; .//src:371
0x00002a5a      488d151f4800.  lea rdx, [0x00007280]
0x00002a61      89ff           mov edi, edi
0x00002a63      89f3           mov ebx, esi
0x00002a65      486304ba       movsxd rax, dword [rdx + rdi*4]
0x00002a69      4801d0         add rax, rdx
0x00002a6c      ffe0           jmp rax
0x00002a6e      6690           nop
0x00002a70      e86beeffff     call sym.imp.__ctype_b_loc              ; .//src:404
0x00002a75      488b00         mov rax, qword [rax]
0x00002a78      0fb6f3         movzx esi, bl
0x00002a7b      0fb70470       movzx eax, word [rax + rsi*2]
0x00002a7f      66250001       and ax, 0x100
0x00002a83      0fb7c0         movzx eax, ax
0x00002a86      85c0           test eax, eax                           ; .//src:413
0x00002a88      0f95c0         setne al
0x00002a8b      5b             pop rbx                                 ; .//src:414
0x00002a8c      c3             ret
0x00002a8d      0f1f00         nop dword [rax]
0x00002a90      e84beeffff     call sym.imp.__ctype_b_loc              ; .//src:407
0x00002a95      488b00         mov rax, qword [rax]
0x00002a98      0fb6f3         movzx esi, bl
0x00002a9b      0fb70470       movzx eax, word [rax + rsi*2]
0x00002a9f      66250010       and ax, 0x1000
0x00002aa3      0fb7c0         movzx eax, ax
0x00002aa6      ebde           jmp 0x2a86                              ; .//src:408
0x00002aa8      0f1f84000000.  nop dword [rax + rax]
0x00002ab0      e82beeffff     call sym.imp.__ctype_b_loc              ; .//src:374
0x00002ab5      488b00         mov rax, qword [rax]
0x00002ab8      0fb6f3         movzx esi, bl
0x00002abb      0fb70470       movzx eax, word [rax + rsi*2]
0x00002abf      83e008         and eax, 8
0x00002ac2      0fb7c0         movzx eax, ax
0x00002ac5      ebbf           jmp 0x2a86                              ; .//src:375
0x00002ac7      660f1f840000.  nop word [rax + rax]
0x00002ad0      e80beeffff     call sym.imp.__ctype_b_loc              ; .//src:377
0x00002ad5      488b00         mov rax, qword [rax]
0x00002ad8      0fb6f3         movzx esi, bl
0x00002adb      0fb70470       movzx eax, word [rax + rsi*2]
0x00002adf      66250004       and ax, 0x400
0x00002ae3      0fb7c0         movzx eax, ax
0x00002ae6      eb9e           jmp 0x2a86                              ; .//src:378
0x00002ae8      0f1f84000000.  nop dword [rax + rax]
0x00002af0      e8ebedffff     call sym.imp.__ctype_b_loc              ; .//src:380
0x00002af5      488b00         mov rax, qword [rax]
0x00002af8      0fb6f3         movzx esi, bl
0x00002afb      0fb70470       movzx eax, word [rax + rsi*2]
0x00002aff      83e001         and eax, 1
0x00002b02      eb82           jmp 0x2a86                              ; .//src:381
0x00002b04      0f1f4000       nop dword [rax]
0x00002b08      e8d3edffff     call sym.imp.__ctype_b_loc              ; .//src:383
0x00002b0d      488b00         mov rax, qword [rax]
0x00002b10      0fb6f3         movzx esi, bl
0x00002b13      0fb70470       movzx eax, word [rax + rsi*2]
0x00002b17      83e002         and eax, 2
0x00002b1a      0fb7c0         movzx eax, ax
0x00002b1d      e964ffffff     jmp 0x2a86                              ; .//src:384
0x00002b22      660f1f440000   nop word [rax + rax]
0x00002b28      e8b3edffff     call sym.imp.__ctype_b_loc              ; .//src:386
0x00002b2d      488b00         mov rax, qword [rax]
0x00002b30      0fb6f3         movzx esi, bl
0x00002b33      0fb70470       movzx eax, word [rax + rsi*2]
0x00002b37      66250008       and ax, 0x800
0x00002b3b      0fb7c0         movzx eax, ax
0x00002b3e      e943ffffff     jmp 0x2a86                              ; .//src:387
0x00002b43      0f1f440000     nop dword [rax + rax]
0x00002b48      e893edffff     call sym.imp.__ctype_b_loc              ; .//src:389
0x00002b4d      488b00         mov rax, qword [rax]
0x00002b50      0fb6f3         movzx esi, bl
0x00002b53      0fb70470       movzx eax, word [rax + rsi*2]
0x00002b57      66250080       and ax, 0x8000
0x00002b5b      0fb7c0         movzx eax, ax
0x00002b5e      e923ffffff     jmp 0x2a86                              ; .//src:390
0x00002b63      0f1f440000     nop dword [rax + rax]
0x00002b68      e873edffff     call sym.imp.__ctype_b_loc              ; .//src:392
0x00002b6d      488b00         mov rax, qword [rax]
0x00002b70      0fb6f3         movzx esi, bl
0x00002b73      0fb70470       movzx eax, word [rax + rsi*2]
0x00002b77      66250002       and ax, 0x200
0x00002b7b      0fb7c0         movzx eax, ax
0x00002b7e      e903ffffff     jmp 0x2a86                              ; .//src:393
0x00002b83      0f1f440000     nop dword [rax + rax]
0x00002b88      e853edffff     call sym.imp.__ctype_b_loc              ; .//src:395
0x00002b8d      488b00         mov rax, qword [rax]
0x00002b90      0fb6f3         movzx esi, bl
0x00002b93      0fb70470       movzx eax, word [rax + rsi*2]
0x00002b97      66250040       and ax, 0x4000                          ; "0"
0x00002b9b      0fb7c0         movzx eax, ax
0x00002b9e      e9e3feffff     jmp 0x2a86                              ; .//src:396
0x00002ba3      0f1f440000     nop dword [rax + rax]
0x00002ba8      e833edffff     call sym.imp.__ctype_b_loc              ; .//src:398
0x00002bad      488b00         mov rax, qword [rax]
0x00002bb0      0fb6f3         movzx esi, bl
0x00002bb3      0fb70470       movzx eax, word [rax + rsi*2]
0x00002bb7      83e004         and eax, 4
0x00002bba      0fb7c0         movzx eax, ax
0x00002bbd      e9c4feffff     jmp 0x2a86                              ; .//src:399
0x00002bc2      660f1f440000   nop word [rax + rax]
0x00002bc8      e813edffff     call sym.imp.__ctype_b_loc              ; .//src:401
0x00002bcd      488b00         mov rax, qword [rax]
0x00002bd0      0fb6f3         movzx esi, bl
0x00002bd3      0fb70470       movzx eax, word [rax + rsi*2]
0x00002bd7      66250020       and ax, 0x2000                          ; "\r"
0x00002bdb      0fb7c0         movzx eax, ax
0x00002bde      e9a3feffff     jmp 0x2a86                              ; .//src:402
0x00002be3      e818eaffff     call sym.imp.abort                      ; .//src:410
0x00002be8      0f1f84000000.  nop dword [rax + rax]
;-- get_spec_stats:
0x00002bf0      4157           push r15                                ; .//src:1242
0x00002bf2      4156           push r14
0x00002bf4      4531f6         xor r14d, r14d                          ; .//src:1244
0x00002bf7      4155           push r13                                ; .//src:1242
0x00002bf9      4154           push r12
0x00002bfb      55             push rbp
0x00002bfc      53             push rbx
0x00002bfd      4883ec18       sub rsp, 0x18
0x00002c01      488b07         mov rax, qword [rdi]                    ; .//src:1250
0x00002c04      48c747200000.  mov qword [rdi + 0x20], 0               ; .//src:1246
0x00002c0c      48897c2408     mov qword [rsp + 8], rdi                ; .//src:1242
0x00002c11      c6473000       mov byte [rdi + 0x30], 0                ; .//src:1247
0x00002c15      c6473200       mov byte [rdi + 0x32], 0                ; .//src:1248
0x00002c19      c6473100       mov byte [rdi + 0x31], 0                ; .//src:1249
0x00002c1d      488b6808       mov rbp, qword [rax + 8]                ; .//src:1250
0x00002c21      4885ed         test rbp, rbp
0x00002c24      7476           je 0x2c9c
0x00002c26      4c8d25834600.  lea r12, [0x000072b0]                   ; .//src:1255
0x00002c2d      0f1f00         nop dword [rax]
0x00002c30      837d0004       cmp dword [rbp], 4
0x00002c34      0f8726010000   ja 0x2d60
0x00002c3a      8b4500         mov eax, dword [rbp]
0x00002c3d      49630484       movsxd rax, dword [r12 + rax*4]
0x00002c41      4c01e0         add rax, r12
0x00002c44      ffe0           jmp rax
0x00002c46      662e0f1f8400.  nop word cs:[rax + rax]
0x00002c50      0fb64d10       movzx ecx, byte [rbp + 0x10]            ; .//src:1284
0x00002c54      31c0           xor eax, eax                            ; .//src:1283
0x00002c56      31db           xor ebx, ebx                            ; .//src:1252
0x00002c58      0f1f84000000.  nop dword [rax + rax]
0x00002c60      31d2           xor edx, edx                            ; .//src:1285
0x00002c62      38c1           cmp cl, al
0x00002c64      0f94c2         sete dl
0x00002c67      83c001         add eax, 1                              ; .//src:1283
0x00002c6a      4801d3         add rbx, rdx                            ; .//src:1285
0x00002c6d      3d00010000     cmp eax, 0x100                          ; .//src:1283
0x00002c72      75ec           jne 0x2c60
0x00002c74      488b442408     mov rax, qword [rsp + 8]                ; .//src:1286
0x00002c79      c6403001       mov byte [rax + 0x30], 1
0x00002c7d      4c01f3         add rbx, r14
0x00002c80      4989de         mov r14, rbx                            ; .//src:1307
0x00002c83      0f82fb000000   jb 0x2d84                               ; .//src:1308
0x00002c89      4883fbff       cmp rbx, 0xffffffffffffffff
0x00002c8d      0f84f1000000   je 0x2d84
0x00002c93      488b6d08       mov rbp, qword [rbp + 8]                ; .//src:1250
0x00002c97      4885ed         test rbp, rbp
0x00002c9a      7594           jne 0x2c30
0x00002c9c      488b442408     mov rax, qword [rsp + 8]                ; .//src:1313
0x00002ca1      4c897018       mov qword [rax + 0x18], r14
0x00002ca5      4883c418       add rsp, 0x18                           ; .//src:1314
0x00002ca9      5b             pop rbx
0x00002caa      5d             pop rbp
0x00002cab      415c           pop r12
0x00002cad      415d           pop r13
0x00002caf      415e           pop r14
0x00002cb1      415f           pop r15
0x00002cb3      c3             ret
0x00002cb4      0f1f4000       nop dword [rax]
0x00002cb8      488b442408     mov rax, qword [rsp + 8]                ; .//src:1267
0x00002cbd      448b7d10       mov r15d, dword [rbp + 0x10]            ; .//src:1269
0x00002cc1      4531ed         xor r13d, r13d                          ; .//src:1268
0x00002cc4      31db           xor ebx, ebx                            ; .//src:1252
0x00002cc6      c6403101       mov byte [rax + 0x31], 1                ; .//src:1267
0x00002cca      660f1f440000   nop word [rax + rax]
0x00002cd0      4489ee         mov esi, r13d                           ; .//src:1269
0x00002cd3      4489ff         mov edi, r15d
0x00002cd6      e875fdffff     call sym.is_char_class_member
0x00002cdb      3c01           cmp al, 1                               ; .//src:1270
0x00002cdd      4883dbff       sbb rbx, 0xffffffffffffffff
0x00002ce1      4183c501       add r13d, 1                             ; .//src:1268
0x00002ce5      4181fd000100.  cmp r13d, 0x100
0x00002cec      75e2           jne 0x2cd0
0x00002cee      4183ff06       cmp r15d, 6                             ; .//src:1271
0x00002cf2      7489           je 0x2c7d
0x00002cf4      4183ff0a       cmp r15d, 0xa
0x00002cf8      7483           je 0x2c7d
0x00002cfa      488b442408     mov rax, qword [rsp + 8]                ; .//src:1277
0x00002cff      c6403201       mov byte [rax + 0x32], 1
0x00002d03      e975ffffff     jmp 0x2c7d                              ; .//src:1278
0x00002d08      0f1f84000000.  nop dword [rax + rax]
0x00002d10      0fb64511       movzx eax, byte [rbp + 0x11]            ; .//src:1262
0x00002d14      0fb65510       movzx edx, byte [rbp + 0x10]
0x00002d18      38d0           cmp al, dl
0x00002d1a      7249           jb 0x2d65
0x00002d1c      0fb6d8         movzx ebx, al                           ; .//src:1263
0x00002d1f      89d8           mov eax, ebx
0x00002d21      29d0           sub eax, edx
0x00002d23      8d5801         lea ebx, [rax + 1]
0x00002d26      4863db         movsxd rbx, ebx
0x00002d29      e94fffffff     jmp 0x2c7d                              ; .//src:1264
0x00002d2e      6690           nop
0x00002d30      bb01000000     mov ebx, 1                              ; .//src:1258
0x00002d35      e943ffffff     jmp 0x2c7d
0x00002d3a      660f1f440000   nop word [rax + rax]
0x00002d40      488b5d18       mov rbx, qword [rbp + 0x18]             ; .//src:1290
0x00002d44      4885db         test rbx, rbx
0x00002d47      0f8530ffffff   jne 0x2c7d
0x00002d4d      488b442408     mov rax, qword [rsp + 8]                ; .//src:1294
0x00002d52      48896828       mov qword [rax + 0x28], rbp
0x00002d56      4883402001     add qword [rax + 0x20], 1               ; .//src:1295
0x00002d5b      e933ffffff     jmp 0x2c93
0x00002d60      e89be8ffff     call sym.imp.abort                      ; .//src:1300
0x00002d65      488d0d9c4500.  lea rcx, obj.__PRETTY_FUNCTION__.7281   ; .//src:1262 ; 0x7308 ; "get_spec_stats"
0x00002d6c      488d35ae4200.  lea rsi, str..._coreutils_8.31_src_tr.c ; 0x7021 ; "../coreutils-8.31/src/tr.c"
0x00002d73      488d3d2e4600.  lea rdi, str.p__u.range.last_char____p__u.range.first_char ; 0x73a8 ; "p->u.range.last_char >= p->u.range.first_char"
0x00002d7a      baee040000     mov edx, 0x4ee
0x00002d7f      e89ce9ffff     call sym.imp.__assert_fail
0x00002d84      488d35b14200.  lea rsi, str.too_many_characters_in_set ; .//src:1309 ; 0x703c ; "too many characters in set"
0x00002d8b      ba05000000     mov edx, 5
0x00002d90      31ff           xor edi, edi
0x00002d92      e8f9e8ffff     call sym.imp.dcgettext
0x00002d97      31f6           xor esi, esi
0x00002d99      4889c2         mov rdx, rax
0x00002d9c      bf01000000     mov edi, 1
0x00002da1      31c0           xor eax, eax
0x00002da3      e8a8eaffff     call sym.imp.error
0x00002da8      0f1f84000000.  nop dword [rax + rax]
;-- get_next:
0x00002db0      4156           push r14                                ; .//src:1016
0x00002db2      4155           push r13
0x00002db4      488d15094500.  lea rdx, [0x000072c4]                   ; .//src:1034
0x00002dbb      4154           push r12                                ; .//src:1016
0x00002dbd      55             push rbp
0x00002dbe      4989fe         mov r14, rdi
0x00002dc1      53             push rbx
0x00002dc2      488b4710       mov rax, qword [rdi + 0x10]
0x00002dc6      48c7c1ffffff.  mov rcx, 0xffffffffffffffff             ; .//src:1027
0x00002dcd      4885f6         test rsi, rsi                           ; .//src:1021
0x00002dd0      7406           je 0x2dd8
0x00002dd2      c70602000000   mov dword [rsi], 2                      ; .//src:1022
0x00002dd8      4883f8fe       cmp rax, 0xfffffffffffffffe             ; .//src:1024
0x00002ddc      0f843e010000   je 0x2f20
0x00002de2      498b6e08       mov rbp, qword [r14 + 8]
0x00002de6      4885ed         test rbp, rbp                           ; .//src:1031
0x00002de9      0f8499010000   je 0x2f88
0x00002def      837d0004       cmp dword [rbp], 4                      ; .//src:1034
0x00002df3      0f87e5010000   ja 0x2fde                               ; .//src:971
0x00002df9      8b4500         mov eax, dword [rbp]
0x00002dfc      48630482       movsxd rax, dword [rdx + rax*4]
0x00002e00      4801d0         add rax, rdx                            ; .//src:973
0x00002e03      ffe0           jmp rax
0x00002e05      0f1f00         nop dword [rax]
0x00002e08      488b4508       mov rax, qword [rbp + 8]
0x00002e0c      440fb66d10     movzx r13d, byte [rbp + 0x10]
0x00002e11      49c74610ffff.  mov qword [r14 + 0x10], 0xffffffffffffffff
0x00002e19      49894608       mov qword [r14 + 8], rax
0x00002e1d      5b             pop rbx
0x00002e1e      4489e8         mov eax, r13d
0x00002e21      5d             pop rbp
0x00002e22      415c           pop r12
0x00002e24      415d           pop r13                                 ; .//src:980
0x00002e26      415e           pop r14
0x00002e28      c3             ret                                     ; .//src:981
0x00002e29      0f1f80000000.  nop dword [rax]
0x00002e30      488b4518       mov rax, qword [rbp + 0x18]
0x00002e34      4885c0         test rax, rax
0x00002e37      0f8575010000   jne 0x2fb2
0x00002e3d      488b4508       mov rax, qword [rbp + 8]
0x00002e41      49894e10       mov qword [r14 + 0x10], rcx
0x00002e45      49894608       mov qword [r14 + 8], rax
0x00002e49      4889c8         mov rax, rcx
0x00002e4c      e97cffffff     jmp 0x2dcd
0x00002e51      0f1f80000000.  nop dword [rax]
0x00002e58      4885f6         test rsi, rsi                           ; .//src:936
0x00002e5b      448b6510       mov r12d, dword [rbp + 0x10]
0x00002e5f      7416           je 0x2e77
0x00002e61      4183fc06       cmp r12d, 6
0x00002e65      0f840d010000   je 0x2f78
0x00002e6b      4183fc0a       cmp r12d, 0xa
0x00002e6f      7506           jne 0x2e77
0x00002e71      c70601000000   mov dword [rsi], 1
0x00002e77      498b5e10       mov rbx, qword [r14 + 0x10]
0x00002e7b      4883fbff       cmp rbx, 0xffffffffffffffff
0x00002e7f      0f84b3000000   je 0x2f38                               ; .//src:952
0x00002e85      0fb6f3         movzx esi, bl
0x00002e88      4489e7         mov edi, r12d
0x00002e8b      e8c0fbffff     call sym.is_char_class_member
0x00002e90      84c0           test al, al
0x00002e92      0f844b010000   je 0x2fe3
0x00002e98      4189dd         mov r13d, ebx
0x00002e9b      83c301         add ebx, 1
0x00002e9e      81fbff000000   cmp ebx, 0xff
0x00002ea4      7e15           jle 0x2ebb
0x00002ea6      eb5a           jmp 0x2f02
0x00002ea8      0f1f84000000.  nop dword [rax + rax]
0x00002eb0      83c301         add ebx, 1
0x00002eb3      81fb00010000   cmp ebx, 0x100
0x00002eb9      7447           je 0x2f02
0x00002ebb      0fb6f3         movzx esi, bl                           ; .//src:1005
0x00002ebe      4489e7         mov edi, r12d
0x00002ec1      e88afbffff     call sym.is_char_class_member
0x00002ec6      84c0           test al, al
0x00002ec8      74e6           je 0x2eb0
0x00002eca      4863db         movsxd rbx, ebx
0x00002ecd      4489e8         mov eax, r13d
0x00002ed0      49895e10       mov qword [r14 + 0x10], rbx
0x00002ed4      5b             pop rbx
0x00002ed5      5d             pop rbp
0x00002ed6      415c           pop r12
0x00002ed8      415d           pop r13
0x00002eda      415e           pop r14
0x00002edc      c3             ret
0x00002edd      0f1f00         nop dword [rax]                         ; .//src:919
0x00002ee0      498b4610       mov rax, qword [r14 + 0x10]             ; .//src:920
0x00002ee4      4883f8ff       cmp rax, 0xffffffffffffffff
0x00002ee8      747e           je 0x2f68
0x00002eea      4883c001       add rax, 1
0x00002eee      49894610       mov qword [r14 + 0x10], rax
0x00002ef2      0fb65511       movzx edx, byte [rbp + 0x11]
0x00002ef6      4189c5         mov r13d, eax
0x00002ef9      4839c2         cmp rdx, rax
0x00002efc      0f851bffffff   jne 0x2e1d
0x00002f02      488b4508       mov rax, qword [rbp + 8]
0x00002f06      49c74610ffff.  mov qword [r14 + 0x10], 0xffffffffffffffff
0x00002f0e      5b             pop rbx                                 ; .//src:899
0x00002f0f      5d             pop rbp
0x00002f10      49894608       mov qword [r14 + 8], rax
0x00002f14      4489e8         mov eax, r13d
0x00002f17      415c           pop r12
0x00002f19      415d           pop r13
0x00002f1b      415e           pop r14
0x00002f1d      c3             ret
0x00002f1e      6690           nop
0x00002f20      498b06         mov rax, qword [r14]
0x00002f23      488b6808       mov rbp, qword [rax + 8]
0x00002f27      49894e10       mov qword [r14 + 0x10], rcx             ; .//src:945
0x00002f2b      49896e08       mov qword [r14 + 8], rbp
0x00002f2f      e9b2feffff     jmp 0x2de6
0x00002f34      0f1f4000       nop dword [rax]
0x00002f38      31db           xor ebx, ebx
0x00002f3a      eb0f           jmp 0x2f4b
0x00002f3c      0f1f4000       nop dword [rax]
0x00002f40      83c301         add ebx, 1                              ; .//src:949
0x00002f43      81fb00010000   cmp ebx, 0x100
0x00002f49      7448           je 0x2f93
0x00002f4b      89de           mov esi, ebx
0x00002f4d      4489e7         mov edi, r12d
0x00002f50      e8fbfaffff     call sym.is_char_class_member
0x00002f55      84c0           test al, al
0x00002f57      74e7           je 0x2f40
0x00002f59      4863db         movsxd rbx, ebx
0x00002f5c      49895e10       mov qword [r14 + 0x10], rbx
0x00002f60      e920ffffff     jmp 0x2e85
0x00002f65      0f1f00         nop dword [rax]                         ; .//src:934
0x00002f68      0fb64510       movzx eax, byte [rbp + 0x10]
0x00002f6c      49894610       mov qword [r14 + 0x10], rax
0x00002f70      e97dffffff     jmp 0x2ef2
0x00002f75      0f1f00         nop dword [rax]
0x00002f78      c70600000000   mov dword [rsi], 0
0x00002f7e      e9f4feffff     jmp 0x2e77
0x00002f83      0f1f440000     nop dword [rax + rax]
0x00002f88      41bdffffffff   mov r13d, 0xffffffff                    ; -1
0x00002f8e      e98afeffff     jmp 0x2e1d
0x00002f93      488d0d3e4300.  lea rcx, obj.__PRETTY_FUNCTION__.7229   ; 0x72d8 ; "get_next"
0x00002f9a      488d35804000.  lea rsi, str..._coreutils_8.31_src_tr.c ; 0x7021 ; "../coreutils-8.31/src/tr.c"
0x00002fa1      488d3daf4000.  lea rdi, str.i___N_CHARS                ; 0x7057 ; "i < N_CHARS"
0x00002fa8      ba34040000     mov edx, 0x434
0x00002fad      e86ee7ffff     call sym.imp.__assert_fail
0x00002fb2      498b4e10       mov rcx, qword [r14 + 0x10]
0x00002fb6      440fb66d10     movzx r13d, byte [rbp + 0x10]           ; .//src:990
0x00002fbb      488d5101       lea rdx, [rcx + 1]
0x00002fbf      4883f9ff       cmp rcx, 0xffffffffffffffff
0x00002fc3      b901000000     mov ecx, 1
0x00002fc8      480f44d1       cmove rdx, rcx
0x00002fcc      4839d0         cmp rax, rdx
0x00002fcf      49895610       mov qword [r14 + 0x10], rdx
0x00002fd3      0f8544feffff   jne 0x2e1d
0x00002fd9      e924ffffff     jmp 0x2f02
0x00002fde      e81de6ffff     call sym.imp.abort
0x00002fe3      488d0dee4200.  lea rcx, obj.__PRETTY_FUNCTION__.7229   ; 0x72d8 ; "get_next"
0x00002fea      488d35304000.  lea rsi, str..._coreutils_8.31_src_tr.c ; 0x7021 ; "../coreutils-8.31/src/tr.c"
0x00002ff1      488d3de04300.  lea rdi, str.is_char_class_member__p__u.char_class__s__state ; 0x73d8 ; "is_char_class_member (p->u.char_class, s->state)"
0x00002ff8      ba37040000     mov edx, 0x437                          ; .//src:1483
0x00002ffd      e81ee7ffff     call sym.imp.__assert_fail
0x00003002      0f1f4000       nop dword [rax]
0x00003006      662e0f1f8400.  nop word cs:[rax + rax]
;-- plain_read.part.5:
0x00003010      53             push rbx
0x00003011      488d354b4000.  lea rsi, str.read_error                 ; 0x7063 ; "read error"
0x00003018      ba05000000     mov edx, 5
0x0000301d      31ff           xor edi, edi
0x0000301f      e86ce6ffff     call sym.imp.dcgettext
0x00003024      4889c3         mov rbx, rax
0x00003027      e8e4e5ffff     call sym.imp.__errno_location           ; .//src:1480
0x0000302c      8b30           mov esi, dword [rax]
0x0000302e      4889da         mov rdx, rbx                            ; .//src:1481
0x00003031      bf01000000     mov edi, 1
0x00003036      31c0           xor eax, eax
0x00003038      e813e8ffff     call sym.imp.error                      ; .//src:1482
0x0000303d      0f1f00         nop dword [rax]
;-- plain_read:
0x00003040      4883ec08       sub rsp, 8
0x00003044      4889f2         mov rdx, rsi
0x00003047      4889fe         mov rsi, rdi
0x0000304a      31ff           xor edi, edi
0x0000304c      e80f2f0000     call sym.safe_read
0x00003051      4883f8ff       cmp rax, 0xffffffffffffffff
0x00003055      7405           je 0x305c
0x00003057      4883c408       add rsp, 8                              ; .//src:1495
0x0000305b      c3             ret
0x0000305c      e8afffffff     call sym.plain_read.part.5
0x00003061      0f1f440000     nop dword [rax + rax]
0x00003066      662e0f1f8400.  nop word cs:[rax + rax]
;-- read_and_delete:
0x00003070      4154           push r12
0x00003072      55             push rbp
0x00003073      488d2d668120.  lea rbp, obj.in_delete_set              ; 0x20b1e0
0x0000307a      53             push rbx
0x0000307b      4989fc         mov r12, rdi
0x0000307e      4889f3         mov rbx, rsi
0x00003081      0f1f80000000.  nop dword [rax]
0x00003088      31ff           xor edi, edi
0x0000308a      4889da         mov rdx, rbx
0x0000308d      4c89e6         mov rsi, r12
0x00003090      e8cb2e0000     call sym.safe_read
0x00003095      4883f8ff       cmp rax, 0xffffffffffffffff
0x00003099      7476           je 0x3111                               ; .//src:1518
0x0000309b      4885c0         test rax, rax
0x0000309e      7443           je 0x30e3
0x000030a0      31f6           xor esi, esi
0x000030a2      410fb60c34     movzx ecx, byte [r12 + rsi]
0x000030a7      488d5601       lea rdx, [rsi + 1]                      ; .//src:1519
0x000030ab      807c0d0000     cmp byte [rbp + rcx], 0
0x000030b0      743e           je 0x30f0
0x000030b2      4839d0         cmp rax, rdx
0x000030b5      7624           jbe 0x30db
0x000030b7      4c01e2         add rdx, r12
0x000030ba      4c01e0         add rax, r12
0x000030bd      0f1f00         nop dword [rax]                         ; .//src:1518
0x000030c0      0fb63a         movzx edi, byte [rdx]
0x000030c3      807c3d0000     cmp byte [rbp + rdi], 0
0x000030c8      7508           jne 0x30d2
0x000030ca      41883c34       mov byte [r12 + rsi], dil               ; .//src:1525
0x000030ce      4883c601       add rsi, 1
0x000030d2      4883c201       add rdx, 1
0x000030d6      4839d0         cmp rax, rdx
0x000030d9      75e5           jne 0x30c0
0x000030db      4885f6         test rsi, rsi
0x000030de      74a8           je 0x3088
0x000030e0      4889f0         mov rax, rsi
0x000030e3      5b             pop rbx
0x000030e4      5d             pop rbp
0x000030e5      415c           pop r12
0x000030e7      c3             ret
0x000030e8      0f1f84000000.  nop dword [rax + rax]
0x000030f0      4839d0         cmp rax, rdx
0x000030f3      740b           je 0x3100
0x000030f5      4889d6         mov rsi, rdx
0x000030f8      eba8           jmp 0x30a2
0x000030fa      660f1f440000   nop word [rax + rax]
0x00003100      488d5602       lea rdx, [rsi + 2]
0x00003104      4889c6         mov rsi, rax
0x00003107      4839d0         cmp rax, rdx                            ; .//src:1533
0x0000310a      77ab           ja 0x30b7
0x0000310c      4889f0         mov rax, rsi
0x0000310f      ebd2           jmp 0x30e3
0x00003111      e8fafeffff     call sym.plain_read.part.5
0x00003116      662e0f1f8400.  nop word cs:[rax + rax]
;-- read_and_xlate:
0x00003120      53             push rbx
0x00003121      4889f2         mov rdx, rsi
0x00003124      4889fb         mov rbx, rdi
0x00003127      4889fe         mov rsi, rdi
0x0000312a      31ff           xor edi, edi
0x0000312c      e82f2e0000     call sym.safe_read
0x00003131      4883f8ff       cmp rax, 0xffffffffffffffff
0x00003135      742e           je 0x3165
0x00003137      4885c0         test rax, rax                           ; .//src:1537
0x0000313a      4889df         mov rdi, rbx
0x0000313d      488d3403       lea rsi, [rbx + rax]
0x00003141      488d0d987f20.  lea rcx, obj.xlate                      ; 0x20b0e0
0x00003148      7419           je 0x3163
0x0000314a      660f1f440000   nop word [rax + rax]                    ; .//src:1540
0x00003150      0fb617         movzx edx, byte [rdi]
0x00003153      4883c701       add rdi, 1
0x00003157      0fb61411       movzx edx, byte [rcx + rdx]             ; .//src:514
0x0000315b      8857ff         mov byte [rdi - 1], dl
0x0000315e      4839fe         cmp rsi, rdi
0x00003161      75ed           jne 0x3150
0x00003163      5b             pop rbx
0x00003164      c3             ret
0x00003165      e8a6feffff     call sym.plain_read.part.5
0x0000316a      660f1f440000   nop word [rax + rax]
;-- append_normal_char:
0x00003170      55             push rbp                                ; .//src:516
0x00003171      53             push rbx
0x00003172      4889fb         mov rbx, rdi
0x00003175      bf20000000     mov edi, 0x20                           ; "@"
0x0000317a      89f5           mov ebp, esi
0x0000317c      4883ec08       sub rsp, 8
0x00003180      e85b340000     call sym.xmalloc
0x00003185      488b5308       mov rdx, qword [rbx + 8]
0x00003189      48c740080000.  mov qword [rax + 8], 0
0x00003191      c70000000000   mov dword [rax], 0
0x00003197      40886810       mov byte [rax + 0x10], bpl
0x0000319b      4885d2         test rdx, rdx
0x0000319e      740f           je 0x31af
0x000031a0      48894208       mov qword [rdx + 8], rax
0x000031a4      48894308       mov qword [rbx + 8], rax
0x000031a8      4883c408       add rsp, 8
0x000031ac      5b             pop rbx
0x000031ad      5d             pop rbp
0x000031ae      c3             ret
0x000031af      488d0d6a4100.  lea rcx, obj.__PRETTY_FUNCTION__.7119   ; 0x7320 ; "append_normal_char"
0x000031b6      488d35643e00.  lea rsi, str..._coreutils_8.31_src_tr.c ; 0x7021 ; "../coreutils-8.31/src/tr.c"
0x000031bd      488d3daa3e00.  lea rdi, str.list__tail                 ; 0x706e ; "list->tail"
0x000031c4      ba87020000     mov edx, 0x287
0x000031c9      e852e5ffff     call sym.imp.__assert_fail
0x000031ce      6690           nop
;-- parse_str:
0x000031d0      4157           push r15
0x000031d2      4156           push r14
0x000031d4      4155           push r13
0x000031d6      4154           push r12
0x000031d8      55             push rbp
0x000031d9      53             push rbx
0x000031da      4889fd         mov rbp, rdi
0x000031dd      4881eca80000.  sub rsp, 0xa8
0x000031e4      4889742410     mov qword [rsp + 0x10], rsi
0x000031e9      64488b042528.  mov rax, qword fs:[0x28]
0x000031f2      488984249800.  mov qword [rsp + 0x98], rax
0x000031fa      31c0           xor eax, eax
0x000031fc      e8afe4ffff     call sym.imp.strlen
0x00003201      4889c3         mov rbx, rax
0x00003204      4889c7         mov rdi, rax
0x00003207      e8d4330000     call sym.xmalloc
0x0000320c      be01000000     mov esi, 1
0x00003211      4889df         mov rdi, rbx
0x00003214      4989c5         mov r13, rax
0x00003217      4889442408     mov qword [rsp + 8], rax
0x0000321c      488984248000.  mov qword [rsp + 0x80], rax
0x00003224      e887350000     call sym.xcalloc
0x00003229      4989c6         mov r14, rax                            ; .//src:311
0x0000322c      488984248800.  mov qword [rsp + 0x88], rax
0x00003234      0fb64500       movzx eax, byte [rbp]
0x00003238      84c0           test al, al
0x0000323a      0f84a7070000   je 0x39e7
0x00003240      31db           xor ebx, ebx
0x00003242      4531ff         xor r15d, r15d
0x00003245      4d89ea         mov r10, r13
0x00003248      0f1f84000000.  nop dword [rax + rax]
0x00003250      8d4b01         lea ecx, [rbx + 1]
0x00003253      4489fa         mov edx, r15d
0x00003256      4183c701       add r15d, 1
0x0000325a      3c5c           cmp al, 0x5c
0x0000325c      4d8d2c12       lea r13, [r10 + rdx]
0x00003260      4889ce         mov rsi, rcx
0x00003263      0fb64c0d00     movzx ecx, byte [rbp + rcx]
0x00003268      754e           jne 0x32b8
0x0000326a      4d8d2416       lea r12, [r14 + rdx]
0x0000326e      80f962         cmp cl, 0x62
0x00003271      41c6042401     mov byte [r12], 1
0x00003276      0f84ac060000   je 0x3928
0x0000327c      0f8ef6030000   jle 0x3678
0x00003282      80f972         cmp cl, 0x72
0x00003285      0f84ab060000   je 0x3936
0x0000328b      0f8f52040000   jg 0x36e3
0x00003291      80f966         cmp cl, 0x66
0x00003294      0f843b050000   je 0x37d5
0x0000329a      80f96e         cmp cl, 0x6e
0x0000329d      0f857a060000   jne 0x391d
0x000032a3      41bc0a000000   mov r12d, 0xa
0x000032a9      8d4302         lea eax, [rbx + 2]
0x000032ac      e91f040000     jmp 0x36d0
0x000032b1      0f1f80000000.  nop dword [rax]
0x000032b8      41884500       mov byte [r13], al
0x000032bc      89f3           mov ebx, esi
0x000032be      89c8           mov eax, ecx
0x000032c0      84c0           test al, al
0x000032c2      758c           jne 0x3250
0x000032c4      488d442470     lea rax, [rsp + 0x70]
0x000032c9      4c8b642408     mov r12, qword [rsp + 8]
0x000032ce      4c89bc249000.  mov qword [rsp + 0x90], r15
0x000032d6      4531ed         xor r13d, r13d
0x000032d9      4889442430     mov qword [rsp + 0x30], rax
0x000032de      488d442478     lea rax, [rsp + 0x78]
0x000032e3      4889442438     mov qword [rsp + 0x38], rax
0x000032e8      498d4d02       lea rcx, [r13 + 2]
0x000032ec      4c39f9         cmp rcx, r15
0x000032ef      733d           jae 0x332e                              ; .//src:724
0x000032f1      43803c2c5b     cmp byte [r12 + r13], 0x5b
0x000032f6      498d6d01       lea rbp, [r13 + 1]
0x000032fa      470fb64c2c01   movzx r9d, byte [r12 + r13 + 1]
0x00003300      746e           je 0x3370
0x00003302      488b442408     mov rax, qword [rsp + 8]
0x00003307      4180f92d       cmp r9b, 0x2d
0x0000330b      420fb63428     movzx esi, byte [rax + r13]
0x00003310      89f3           mov ebx, esi
0x00003312      0f8468010000   je 0x3480
0x00003318      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000331d      4989ed         mov r13, rbp
0x00003320      e84bfeffff     call sym.append_normal_char
0x00003325      498d4d02       lea rcx, [r13 + 2]
0x00003329      4c39f9         cmp rcx, r15
0x0000332c      72c3           jb 0x32f1
0x0000332e      4d39fd         cmp r13, r15
0x00003331      732b           jae 0x335e
0x00003333      488b442408     mov rax, qword [rsp + 8]
0x00003338      488b6c2410     mov rbp, qword [rsp + 0x10]
0x0000333d      4a8d1c38       lea rbx, [rax + r15]
0x00003341      4901c5         add r13, rax
0x00003344      0f1f4000       nop dword [rax]
0x00003348      410fb67500     movzx esi, byte [r13]
0x0000334d      4889ef         mov rdi, rbp
0x00003350      4983c501       add r13, 1
0x00003354      e817feffff     call sym.append_normal_char
0x00003359      4c39eb         cmp rbx, r13
0x0000335c      75ea           jne 0x3348
0x0000335e      c644241801     mov byte [rsp + 0x18], 1
0x00003363      e9cd020000     jmp 0x3635
0x00003368      0f1f84000000.  nop dword [rax + rax]
0x00003370      430fb6042e     movzx eax, byte [r14 + r13]
0x00003375      84c0           test al, al
0x00003377      88442418       mov byte [rsp + 0x18], al
0x0000337b      7585           jne 0x3302
0x0000337d      4180f93a       cmp r9b, 0x3a
0x00003381      0f8469010000   je 0x34f0
0x00003387      4180f93d       cmp r9b, 0x3d
0x0000338b      0f845f010000   je 0x34f0
0x00003391      41803c0c2a     cmp byte [r12 + rcx], 0x2a
0x00003396      0f8566ffffff   jne 0x3302
0x0000339c      41803c0e00     cmp byte [r14 + rcx], 0
0x000033a1      0f855bffffff   jne 0x3302
0x000033a7      498d4503       lea rax, [r13 + 3]
0x000033ab      4c39f8         cmp rax, r15
0x000033ae      0f834effffff   jae 0x3302
0x000033b4      43807c2e0300   cmp byte [r14 + r13 + 3], 0
0x000033ba      0f8542ffffff   jne 0x3302
0x000033c0      4d8d1c04       lea r11, [r12 + rax]
0x000033c4      410fb613       movzx edx, byte [r11]
0x000033c8      80fa5d         cmp dl, 0x5d
0x000033cb      750e           jne 0x33db
0x000033cd      e91d060000     jmp 0x39ef
0x000033d2      660f1f440000   nop word [rax + rax]
0x000033d8      4889d8         mov rax, rbx                            ; .//src:332
0x000033db      488d5801       lea rbx, [rax + 1]
0x000033df      4c39fb         cmp rbx, r15
0x000033e2      0f831affffff   jae 0x3302
0x000033e8      41807c060100   cmp byte [r14 + rax + 1], 0
0x000033ee      0f850effffff   jne 0x3302
0x000033f4      41803c1c5d     cmp byte [r12 + rbx], 0x5d
0x000033f9      75dd           jne 0x33d8
0x000033fb      48f7d5         not rbp
0x000033fe      4801c5         add rbp, rax
0x00003401      0f8516030000   jne 0x371d                              ; .//src:336
0x00003407      48c744247000.  mov qword [rsp + 0x70], 0
0x00003410      bf20000000     mov edi, 0x20                           ; "@"
0x00003415      44884c2418     mov byte [rsp + 0x18], r9b
0x0000341a      488b6c2470     mov rbp, qword [rsp + 0x70]
0x0000341f      e8bc310000     call sym.xmalloc
0x00003424      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003429      440fb64c2418   movzx r9d, byte [rsp + 0x18]
0x0000342f      48c740080000.  mov qword [rax + 8], 0                  ; .//src:-189
0x00003437      c70004000000   mov dword [rax], 4
0x0000343d      48896818       mov qword [rax + 0x18], rbp
0x00003441      488b5708       mov rdx, qword [rdi + 8]
0x00003445      44884810       mov byte [rax + 0x10], r9b
0x00003449      4885d2         test rdx, rdx                           ; .//src:275
0x0000344c      0f847a060000   je 0x3acc
0x00003452      488b7c2410     mov rdi, qword [rsp + 0x10]             ; .//src:287
0x00003457      4c8d6b01       lea r13, [rbx + 1]
0x0000345b      48894208       mov qword [rdx + 8], rax
0x0000345f      48894708       mov qword [rdi + 8], rax
0x00003463      4c8ba4248000.  mov r12, qword [rsp + 0x80]
0x0000346b      4c8bb4248800.  mov r14, qword [rsp + 0x88]
0x00003473      4c8bbc249000.  mov r15, qword [rsp + 0x90]
0x0000347b      e968feffff     jmp 0x32e8
0x00003480      410fb6042e     movzx eax, byte [r14 + rbp]
0x00003485      84c0           test al, al
0x00003487      88442418       mov byte [rsp + 0x18], al
0x0000348b      0f8587feffff   jne 0x3318
0x00003491      488b442408     mov rax, qword [rsp + 8]
0x00003496      0fb62c08       movzx ebp, byte [rax + rcx]
0x0000349a      4038f5         cmp bpl, sil
0x0000349d      0f8245010000   jb 0x35e8
0x000034a3      bf20000000     mov edi, 0x20                           ; "@"
0x000034a8      e833310000     call sym.xmalloc
0x000034ad      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000034b2      48c740080000.  mov qword [rax + 8], 0
0x000034ba      c70001000000   mov dword [rax], 1
0x000034c0      885810         mov byte [rax + 0x10], bl
0x000034c3      40886811       mov byte [rax + 0x11], bpl
0x000034c7      488b5708       mov rdx, qword [rdi + 8]
0x000034cb      4885d2         test rdx, rdx
0x000034ce      0f84b5050000   je 0x3a89
0x000034d4      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000034d9      48894208       mov qword [rdx + 8], rax                ; .//src:219
0x000034dd      4983c503       add r13, 3
0x000034e1      48894708       mov qword [rdi + 8], rax
0x000034e5      e9fefdffff     jmp 0x32e8                              ; .//src:403
0x000034ea      660f1f440000   nop word [rax + rax]
0x000034f0      41803c2e00     cmp byte [r14 + rbp], 0
0x000034f5      0f8596feffff   jne 0x3391
0x000034fb      488b442408     mov rax, qword [rsp + 8]
0x00003500      498d57ff       lea rdx, [r15 - 1]
0x00003504      4839d1         cmp rcx, rdx
0x00003507      0fb63428       movzx esi, byte [rax + rbp]
0x0000350b      0f8380feffff   jae 0x3391
0x00003511      4889cb         mov rbx, rcx
0x00003514      eb16           jmp 0x352c
0x00003516      662e0f1f8400.  nop word cs:[rax + rax]
0x00003520      4839c2         cmp rdx, rax
0x00003523      4889c3         mov rbx, rax
0x00003526      0f8665feffff   jbe 0x3391
0x0000352c      413a341c       cmp sil, byte [r12 + rbx]
0x00003530      488d4301       lea rax, [rbx + 1]
0x00003534      75ea           jne 0x3520
0x00003536      41807c1c015d   cmp byte [r12 + rbx + 1], 0x5d
0x0000353c      75e2           jne 0x3520
0x0000353e      41807c06ff00   cmp byte [r14 + rax - 1], 0
0x00003544      75da           jne 0x3520
0x00003546      41803c0600     cmp byte [r14 + rax], 0
0x0000354b      75d3           jne 0x3520
0x0000354d      488b7c2408     mov rdi, qword [rsp + 8]
0x00003552      48c7c0feffff.  mov rax, 0xfffffffffffffffe
0x00003559      4c29e8         sub rax, r13
0x0000355c      4801cf         add rdi, rcx
0x0000355f      4801d8         add rax, rbx                            ; .//src:148
0x00003562      48897c2428     mov qword [rsp + 0x28], rdi             ; .//src:151
0x00003567      4889442420     mov qword [rsp + 0x20], rax
0x0000356c      0f84e2040000   je 0x3a54
0x00003572      4080fe3a       cmp sil, 0x3a
0x00003576      0f84bf020000   je 0x383b
0x0000357c      48837c242001   cmp qword [rsp + 0x20], 1
0x00003582      0f840f040000   je 0x3997                               ; .//src:153
0x00003588      488dbc248000.  lea rdi, [rsp + 0x80]
0x00003590      4889ce         mov rsi, rcx
0x00003593      44884c2448     mov byte [rsp + 0x48], r9b
0x00003598      48894c2440     mov qword [rsp + 0x40], rcx
0x0000359d      e80ef2ffff     call sym.star_digits_closebracket
0x000035a2      84c0           test al, al                             ; .//src:842
0x000035a4      488b4c2440     mov rcx, qword [rsp + 0x40]
0x000035a9      440fb64c2448   movzx r9d, byte [rsp + 0x48]
0x000035af      0f85dcfdffff   jne 0x3391
0x000035b5      488b742420     mov rsi, qword [rsp + 0x20]
0x000035ba      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000035bf      e8ecf2ffff     call sym.make_printable_str
0x000035c4      488d354d3f00.  lea rsi, str.s:_equivalence_class_operand_must_be_a_single_character ; 0x7518 ; "%s: equivalence class operand must be a single character"
0x000035cb      4889c3         mov rbx, rax
0x000035ce      ba05000000     mov edx, 5
0x000035d3      31ff           xor edi, edi
0x000035d5      e8b6e0ffff     call sym.imp.dcgettext                  ; .//src:-66
0x000035da      4889d9         mov rcx, rbx
0x000035dd      e9bc010000     jmp 0x379e
0x000035e2      660f1f440000   nop word [rax + rax]
0x000035e8      89f7           mov edi, esi
0x000035ea      e851f2ffff     call sym.make_printable_char
0x000035ef      400fb6fd       movzx edi, bpl
0x000035f3      4989c5         mov r13, rax
0x000035f6      e845f2ffff     call sym.make_printable_char
0x000035fb      488d35863f00.  lea rsi, str.range_endpoints_of___s__s__are_in_reverse_collating_sequence_order ; 0x7588 ; "range-endpoints of '%s-%s' are in reverse collating sequence order"
0x00003602      4889c3         mov rbx, rax
0x00003605      ba05000000     mov edx, 5
0x0000360a      31ff           xor edi, edi
0x0000360c      e87fe0ffff     call sym.imp.dcgettext
0x00003611      4989d8         mov r8, rbx
0x00003614      4889c2         mov rdx, rax
0x00003617      4c89e9         mov rcx, r13
0x0000361a      31f6           xor esi, esi
0x0000361c      31ff           xor edi, edi
0x0000361e      31c0           xor eax, eax
0x00003620      e82be2ffff     call sym.imp.error
0x00003625      4c89ef         mov rdi, r13
0x00003628      e8c3dfffff     call sym.imp.free
0x0000362d      4889df         mov rdi, rbx
0x00003630      e8bbdfffff     call sym.imp.free
0x00003635      4c89e7         mov rdi, r12
0x00003638      e8b3dfffff     call sym.imp.free                       ; .//src:-170
0x0000363d      4c89f7         mov rdi, r14
0x00003640      e8abdfffff     call sym.imp.free
0x00003645      488bbc249800.  mov rdi, qword [rsp + 0x98]
0x0000364d      6448333c2528.  xor rdi, qword fs:[0x28]
0x00003656      0fb6442418     movzx eax, byte [rsp + 0x18]
0x0000365b      0f8547040000   jne 0x3aa8
0x00003661      4881c4a80000.  add rsp, 0xa8
0x00003668      5b             pop rbx
0x00003669      5d             pop rbp
0x0000366a      415c           pop r12
0x0000366c      415d           pop r13
0x0000366e      415e           pop r14
0x00003670      415f           pop r15
0x00003672      c3             ret
0x00003673      0f1f440000     nop dword [rax + rax]
0x00003678      80f937         cmp cl, 0x37
0x0000367b      0f8f7f000000   jg 0x3700
0x00003681      80f930         cmp cl, 0x30
0x00003684      0f8d59010000   jge 0x37e3
0x0000368a      84c9           test cl, cl
0x0000368c      0f858b020000   jne 0x391d
0x00003692      488d35df3d00.  lea rsi, str.warning:_an_unescaped_backslash_at_end_of_string_is_not_portable ; 0x7478 ; "warning: an unescaped backslash at end of string is not portable"
0x00003699      ba05000000     mov edx, 5
0x0000369e      31ff           xor edi, edi
0x000036a0      4c89542418     mov qword [rsp + 0x18], r10
0x000036a5      e8e6dfffff     call sym.imp.dcgettext
0x000036aa      31f6           xor esi, esi
0x000036ac      4889c2         mov rdx, rax
0x000036af      31ff           xor edi, edi
0x000036b1      31c0           xor eax, eax
0x000036b3      e898e1ffff     call sym.imp.error
0x000036b8      4c8b542418     mov r10, qword [rsp + 0x18]
0x000036bd      8d4301         lea eax, [rbx + 1]                      ; .//src:168
0x000036c0      41c6042400     mov byte [r12], 0                       ; .//src:167
0x000036c5      41bc5c000000   mov r12d, 0x5c                          ; '\'
0x000036cb      0f1f440000     nop dword [rax + rax]
0x000036d0      89c0           mov eax, eax
0x000036d2      45886500       mov byte [r13], r12b                    ; .//src:169
0x000036d6      4889c3         mov rbx, rax
0x000036d9      0fb6440500     movzx eax, byte [rbp + rax]
0x000036de      e9ddfbffff     jmp 0x32c0                              ; .//src:168
0x000036e3      80f974         cmp cl, 0x74
0x000036e6      0f84db000000   je 0x37c7
0x000036ec      80f976         cmp cl, 0x76
0x000036ef      0f8528020000   jne 0x391d                              ; .//src:171
0x000036f5      41bc0b000000   mov r12d, 0xb
0x000036fb      8d4302         lea eax, [rbx + 2]
0x000036fe      ebd0           jmp 0x36d0
0x00003700      80f95c         cmp cl, 0x5c
0x00003703      0f84b0000000   je 0x37b9
0x00003709      80f961         cmp cl, 0x61
0x0000370c      0f850b020000   jne 0x391d
0x00003712      41bc07000000   mov r12d, 7
0x00003718      8d4302         lea eax, [rbx + 2]                      ; .//src:-182
0x0000371b      ebb3           jmp 0x36d0
0x0000371d      80fa30         cmp dl, 0x30
0x00003720      488b4c2430     mov rcx, qword [rsp + 0x30]
0x00003725      488b742438     mov rsi, qword [rsp + 0x38]
0x0000372a      0f95c2         setne dl
0x0000372d      4c89df         mov rdi, r11                            ; .//src:-159
0x00003730      4531c0         xor r8d, r8d
0x00003733      0fb6d2         movzx edx, dl
0x00003736      4c895c2428     mov qword [rsp + 0x28], r11
0x0000373b      44884c2420     mov byte [rsp + 0x20], r9b
0x00003740      8d541208       lea edx, [rdx + rdx + 8]
0x00003744      e827310000     call sym.xstrtoumax
0x00003749      85c0           test eax, eax
0x0000374b      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x00003750      751d           jne 0x376f
0x00003752      48837c2470ff   cmp qword [rsp + 0x70], 0xffffffffffffffff
0x00003758      7415           je 0x376f
0x0000375a      498d042b       lea rax, [r11 + rbp]
0x0000375e      4839442478     cmp qword [rsp + 0x78], rax
0x00003763      440fb64c2420   movzx r9d, byte [rsp + 0x20]
0x00003769      0f84a1fcffff   je 0x3410
0x0000376f      4889ee         mov rsi, rbp
0x00003772      4c89df         mov rdi, r11                            ; .//src:-149
0x00003775      e836f1ffff     call sym.make_printable_str
0x0000377a      4889c7         mov rdi, rax
0x0000377d      4889c3         mov rbx, rax
0x00003780      e8bb270000     call sym.quote
0x00003785      488d35cc3d00.  lea rsi, str.invalid_repeat_count__s_in__c_n__construct ; 0x7558 ; "invalid repeat count %s in [c*n] construct"
0x0000378c      4889c5         mov rbp, rax
0x0000378f      ba05000000     mov edx, 5
0x00003794      31ff           xor edi, edi
0x00003796      e8f5deffff     call sym.imp.dcgettext
0x0000379b      4889e9         mov rcx, rbp
0x0000379e      4889c2         mov rdx, rax
0x000037a1      31ff           xor edi, edi
0x000037a3      31f6           xor esi, esi
0x000037a5      31c0           xor eax, eax
0x000037a7      e8a4e0ffff     call sym.imp.error
0x000037ac      4889df         mov rdi, rbx
0x000037af      e83cdeffff     call sym.imp.free
0x000037b4      e97cfeffff     jmp 0x3635
0x000037b9      41bc5c000000   mov r12d, 0x5c                          ; '\'
0x000037bf      8d4302         lea eax, [rbx + 2]
0x000037c2      e909ffffff     jmp 0x36d0
0x000037c7      41bc09000000   mov r12d, 9
0x000037cd      8d4302         lea eax, [rbx + 2]
0x000037d0      e9fbfeffff     jmp 0x36d0                              ; .//src:-94
0x000037d5      41bc0c000000   mov r12d, 0xc
0x000037db      8d4302         lea eax, [rbx + 2]
0x000037de      e9edfeffff     jmp 0x36d0
0x000037e3      8d5302         lea edx, [rbx + 2]
0x000037e6      448d61d0       lea r12d, [rcx - 0x30]
0x000037ea      440fbe441500   movsx r8d, byte [rbp + rdx]
0x000037f0      4889d0         mov rax, rdx
0x000037f3      418d50d0       lea edx, [r8 - 0x30]
0x000037f7      83fa07         cmp edx, 7
0x000037fa      0f87d0feffff   ja 0x36d0
0x00003800      8d4303         lea eax, [rbx + 3]
0x00003803      468d24e2       lea r12d, [rdx + r12*8]
0x00003807      440fbe4c0500   movsx r9d, byte [rbp + rax]
0x0000380d      8d4303         lea eax, [rbx + 3]
0x00003810      418d51d0       lea edx, [r9 - 0x30]
0x00003814      83fa07         cmp edx, 7
0x00003817      0f87b3feffff   ja 0x36d0
0x0000381d      410fb6c4       movzx eax, r12b
0x00003821      8d04c2         lea eax, [rdx + rax*8]
0x00003824      3dff000000     cmp eax, 0xff
0x00003829      0f8fc8010000   jg 0x39f7
0x0000382f      468d24e2       lea r12d, [rdx + r12*8]
0x00003833      8d4304         lea eax, [rbx + 4]
0x00003836      e995feffff     jmp 0x36d0
0x0000383b      48895c2468     mov qword [rsp + 0x68], rbx
0x00003840      48896c2460     mov qword [rsp + 0x60], rbp
0x00003845      4531c0         xor r8d, r8d
0x00003848      488b5c2420     mov rbx, qword [rsp + 0x20]
0x0000384d      488b6c2428     mov rbp, qword [rsp + 0x28]
0x00003852      4c89642450     mov qword [rsp + 0x50], r12
0x00003857      4c896c2440     mov qword [rsp + 0x40], r13
0x0000385c      4d89c4         mov r12, r8
0x0000385f      48894c2448     mov qword [rsp + 0x48], rcx
0x00003864      44884c245f     mov byte [rsp + 0x5f], r9b
0x00003869      0f1f80000000.  nop dword [rax]
0x00003870      488d05097320.  lea rax, obj.char_class_name            ; 0x20ab80 ; "/r"
0x00003877      4889da         mov rdx, rbx
0x0000387a      4889ef         mov rdi, rbp
0x0000387d      4e8b2ce0       mov r13, qword [rax + r12*8]
0x00003881      4c89ee         mov rsi, r13
0x00003884      e897ddffff     call sym.imp.strncmp
0x00003889      85c0           test eax, eax
0x0000388b      7511           jne 0x389e
0x0000388d      4c89ef         mov rdi, r13
0x00003890      e81bdeffff     call sym.imp.strlen
0x00003895      4839c3         cmp rbx, rax
0x00003898      0f84a6000000   je 0x3944
0x0000389e      4983c401       add r12, 1
0x000038a2      4983fc0c       cmp r12, 0xc
0x000038a6      75c8           jne 0x3870
0x000038a8      488b4c2448     mov rcx, qword [rsp + 0x48]
0x000038ad      440fb64c245f   movzx r9d, byte [rsp + 0x5f]            ; .//src:54
0x000038b3      488dbc248000.  lea rdi, [rsp + 0x80]                   ; .//src:56
0x000038bb      4c8b6c2440     mov r13, qword [rsp + 0x40]
0x000038c0      4c8b642450     mov r12, qword [rsp + 0x50]
0x000038c5      488b6c2460     mov rbp, qword [rsp + 0x60]
0x000038ca      4889ce         mov rsi, rcx
0x000038cd      48894c2440     mov qword [rsp + 0x40], rcx             ; .//src:290
0x000038d2      44884c2448     mov byte [rsp + 0x48], r9b
0x000038d7      e8d4eeffff     call sym.star_digits_closebracket
0x000038dc      84c0           test al, al
0x000038de      488b4c2440     mov rcx, qword [rsp + 0x40]
0x000038e3      440fb64c2448   movzx r9d, byte [rsp + 0x48]
0x000038e9      0f85a2faffff   jne 0x3391                              ; .//src:95
0x000038ef      488b742420     mov rsi, qword [rsp + 0x20]
0x000038f4      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000038f9      e8b2efffff     call sym.make_printable_str
0x000038fe      4889c7         mov rdi, rax
0x00003901      4889c3         mov rbx, rax
0x00003904      e837260000     call sym.quote
0x00003909      ba05000000     mov edx, 5
0x0000390e      4889c5         mov rbp, rax
0x00003911      488d35613700.  lea rsi, str.invalid_character_class__s ; 0x7079 ; "invalid character class %s"
0x00003918      e977feffff     jmp 0x3794
0x0000391d      4189cc         mov r12d, ecx
0x00003920      8d4302         lea eax, [rbx + 2]
0x00003923      e9a8fdffff     jmp 0x36d0
0x00003928      41bc08000000   mov r12d, 8
0x0000392e      8d4302         lea eax, [rbx + 2]
0x00003931      e99afdffff     jmp 0x36d0
0x00003936      41bc0d000000   mov r12d, 0xd
0x0000393c      8d4302         lea eax, [rbx + 2]
0x0000393f      e98cfdffff     jmp 0x36d0
0x00003944      bf20000000     mov edi, 0x20                           ; "@"
0x00003949      488b5c2468     mov rbx, qword [rsp + 0x68]
0x0000394e      4c89642418     mov qword [rsp + 0x18], r12
0x00003953      e8882c0000     call sym.xmalloc
0x00003958      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000395d      4c8b442418     mov r8, qword [rsp + 0x18]
0x00003962      48c740080000.  mov qword [rax + 8], 0
0x0000396a      c70002000000   mov dword [rax], 2
0x00003970      488b5708       mov rdx, qword [rdi + 8]
0x00003974      44894010       mov dword [rax + 0x10], r8d
0x00003978      4885d2         test rdx, rdx
0x0000397b      0f842c010000   je 0x3aad
0x00003981      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003986      48894208       mov qword [rdx + 8], rax
0x0000398a      4c8d6b02       lea r13, [rbx + 2]
0x0000398e      48894708       mov qword [rdi + 8], rax
0x00003992      e9ccfaffff     jmp 0x3463
0x00003997      bf20000000     mov edi, 0x20                           ; .//src:244 ; "@"
0x0000399c      e83f2c0000     call sym.xmalloc
0x000039a1      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000039a6      48c740080000.  mov qword [rax + 8], 0
0x000039ae      c70003000000   mov dword [rax], 3
0x000039b4      0fb617         movzx edx, byte [rdi]
0x000039b7      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000039bc      885010         mov byte [rax + 0x10], dl
0x000039bf      488b5708       mov rdx, qword [rdi + 8]
0x000039c3      4885d2         test rdx, rdx                           ; .//src:245
0x000039c6      75b9           jne 0x3981
0x000039c8      488d0da13900.  lea rcx, obj.__PRETTY_FUNCTION__.7150   ; 0x7370 ; "append_equiv_class"
0x000039cf      488d354b3600.  lea rsi, str..._coreutils_8.31_src_tr.c ; 0x7021 ; "../coreutils-8.31/src/tr.c"
0x000039d6      488d3d913600.  lea rdi, str.list__tail                 ; 0x706e ; "list->tail"
0x000039dd      bae5020000     mov edx, 0x2e5
0x000039e2      e839ddffff     call sym.imp.__assert_fail
0x000039e7      4531ff         xor r15d, r15d
0x000039ea      e9d5f8ffff     jmp 0x32c4
0x000039ef      4889c3         mov rbx, rax
0x000039f2      e910faffff     jmp 0x3407
0x000039f7      488d35123a00.  lea rsi, str.warning:_the_ambiguous_octal_escape____c_c_c_is_being____interpreted_as_the_2_byte_sequence___0_c_c___c ; 0x7410 ; "warning: the ambiguous octal escape \%c%c%c is being\n\tinterpreted as the 2-byte sequence \0%c%c, %c"
0x000039fe      ba05000000     mov edx, 5
0x00003a03      31ff           xor edi, edi
0x00003a05      884c2428       mov byte [rsp + 0x28], cl
0x00003a09      4c89542430     mov qword [rsp + 0x30], r10
0x00003a0e      44894c2420     mov dword [rsp + 0x20], r9d
0x00003a13      4489442418     mov dword [rsp + 0x18], r8d
0x00003a18      e873dcffff     call sym.imp.dcgettext
0x00003a1d      0fbe4c2428     movsx ecx, byte [rsp + 0x28]
0x00003a22      4883ec08       sub rsp, 8
0x00003a26      4889c2         mov rdx, rax
0x00003a29      448b4c2428     mov r9d, dword [rsp + 0x28]
0x00003a2e      31c0           xor eax, eax
0x00003a30      31f6           xor esi, esi                            ; .//src:1038
0x00003a32      31ff           xor edi, edi
0x00003a34      4151           push r9
0x00003a36      448b442428     mov r8d, dword [rsp + 0x28]
0x00003a3b      4150           push r8
0x00003a3d      51             push rcx
0x00003a3e      e80ddeffff     call sym.imp.error
0x00003a43      4883c420       add rsp, 0x20                           ; .//src:1040
0x00003a47      8d4303         lea eax, [rbx + 3]
0x00003a4a      4c8b542430     mov r10, qword [rsp + 0x30]
0x00003a4f      e97cfcffff     jmp 0x36d0
0x00003a54      4080fe3a       cmp sil, 0x3a
0x00003a58      ba05000000     mov edx, 5                              ; .//src:1041
0x00003a5d      7421           je 0x3a80
0x00003a5f      488d35823a00.  lea rsi, str.missing_equivalence_class_character ; 0x74e8 ; "missing equivalence class character '[==]'"
0x00003a66      31ff           xor edi, edi
0x00003a68      e823dcffff     call sym.imp.dcgettext
0x00003a6d      31f6           xor esi, esi
0x00003a6f      4889c2         mov rdx, rax
0x00003a72      31ff           xor edi, edi                            ; .//src:1042
0x00003a74      31c0           xor eax, eax
0x00003a76      e8d5ddffff     call sym.imp.error
0x00003a7b      e9b5fbffff     jmp 0x3635
0x00003a80      488d35393a00.  lea rsi, str.missing_character_class_name___:: ; 0x74c0 ; "missing character class name '[::]'"
0x00003a87      ebdd           jmp 0x3a66
0x00003a89      488d0da83800.  lea rcx, obj.__PRETTY_FUNCTION__.7128   ; 0x7338 ; "append_range"
0x00003a90      488d358a3500.  lea rsi, str..._coreutils_8.31_src_tr.c ; 0x7021 ; "../coreutils-8.31/src/tr.c"
0x00003a97      488d3dd03500.  lea rdi, str.list__tail                 ; 0x706e ; "list->tail"
0x00003a9e      baa5020000     mov edx, 0x2a5                          ; .//src:887
0x00003aa3      e878dcffff     call sym.imp.__assert_fail              ; .//src:885
0x00003aa8      e813dcffff     call sym.imp.__stack_chk_fail
0x00003aad      488d0ddc3800.  lea rcx, obj.__PRETTY_FUNCTION__.7136   ; .//src:891 ; 0x7390 ; "append_char_class"
0x00003ab4      488d35663500.  lea rsi, str..._coreutils_8.31_src_tr.c ; 0x7021 ; "../coreutils-8.31/src/tr.c"
0x00003abb      488d3dac3500.  lea rdi, str.list__tail                 ; 0x706e ; "list->tail"
0x00003ac2      babb020000     mov edx, 0x2bb
0x00003ac7      e854dcffff     call sym.imp.__assert_fail              ; .//src:894
0x00003acc      e83fdeffff     call sym.append_repeated_char.part.8
0x00003ad1      0f1f440000     nop dword [rax + rax]
0x00003ad6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_initialize:
0x00003ae0      4154           push r12
0x00003ae2      4189f4         mov r12d, esi
0x00003ae5      55             push rbp
0x00003ae6      4889fd         mov rbp, rdi
0x00003ae9      53             push rbx
0x00003aea      4889d3         mov rbx, rdx
0x00003aed      48c74710feff.  mov qword [rdi + 0x10], 0xfffffffffffffffe
0x00003af5      eb0f           jmp 0x3b06
0x00003af7      660f1f840000.  nop word [rax + rax]
0x00003b00      4898           cdqe
0x00003b02      c6040301       mov byte [rbx + rax], 1
0x00003b06      31f6           xor esi, esi
0x00003b08      4889ef         mov rdi, rbp                            ; .//src:942
0x00003b0b      e8a0f2ffff     call sym.get_next
0x00003b10      83f8ff         cmp eax, 0xffffffff                     ; .//src:943
0x00003b13      75eb           jne 0x3b00
0x00003b15      4584e4         test r12b, r12b
0x00003b18      741a           je 0x3b34
0x00003b1a      488d83000100.  lea rax, [rbx + 0x100]
0x00003b21      4889da         mov rdx, rbx
0x00003b24      0f1f4000       nop dword [rax]
0x00003b28      803201         xor byte [rdx], 1
0x00003b2b      4883c201       add rdx, 1
0x00003b2f      4839c2         cmp rdx, rax
0x00003b32      75f4           jne 0x3b28
0x00003b34      5b             pop rbx
0x00003b35      5d             pop rbp
0x00003b36      415c           pop r12
0x00003b38      c3             ret
0x00003b39      0f1f80000000.  nop dword [rax]
;-- squeeze_filter.constprop.14:
0x00003b40      4157           push r15
0x00003b42      4156           push r14
0x00003b44      4c8d35957720.  lea r14, obj.in_squeeze_set             ; 0x20b2e0
0x00003b4b      4155           push r13
0x00003b4d      4154           push r12
0x00003b4f      4989fd         mov r13, rdi
0x00003b52      55             push rbp
0x00003b53      53             push rbx
0x00003b54      488d2d857820.  lea rbp, obj.io_buf                     ; 0x20b3e0
0x00003b5b      4531ff         xor r15d, r15d
0x00003b5e      31db           xor ebx, ebx
0x00003b60      41bcffffff7f   mov r12d, 0x7fffffff
0x00003b66      4883ec18       sub rsp, 0x18
0x00003b6a      4c39fb         cmp rbx, r15
0x00003b6d      0f828d010000   jb 0x3d00
0x00003b73      be00200000     mov esi, 0x2000                         ; "\r"
0x00003b78      4889ef         mov rdi, rbp
0x00003b7b      41ffd5         call r13
0x00003b7e      4885c0         test rax, rax
0x00003b81      4989c7         mov r15, rax
0x00003b84      0f845e010000   je 0x3ce8
0x00003b8a      31db           xor ebx, ebx
0x00003b8c      4181fcffffff.  cmp r12d, 0x7fffffff                    ; .//src:934
0x00003b93      746b           je 0x3c00
0x00003b95      4c39fb         cmp rbx, r15
0x00003b98      73d0           jae 0x3b6a
0x00003b9a      0fbe441d00     movsx eax, byte [rbp + rbx]
0x00003b9f      4139c4         cmp r12d, eax
0x00003ba2      0f8418010000   je 0x3cc0
0x00003ba8      488d441d00     lea rax, [rbp + rbx]
0x00003bad      4889df         mov rdi, rbx
0x00003bb0      4889fb         mov rbx, rdi
0x00003bb3      0fb600         movzx eax, byte [rax]
0x00003bb6      41803c0600     cmp byte [r14 + rax], 0
0x00003bbb      7459           je 0x3c16
0x00003bbd      0f1f00         nop dword [rax]
0x00003bc0      4c39fb         cmp rbx, r15
0x00003bc3      7271           jb 0x3c36
0x00003bc5      4d89fc         mov r12, r15
0x00003bc8      4929fc         sub r12, rdi
0x00003bcb      7420           je 0x3bed
0x00003bcd      488b0db47420.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00003bd4      4801ef         add rdi, rbp                            ; .//src:944
0x00003bd7      4c89e2         mov rdx, r12
0x00003bda      be01000000     mov esi, 1
0x00003bdf      e82cdcffff     call sym.imp.fwrite_unlocked
0x00003be4      4939c4         cmp r12, rax
0x00003be7      0f85a4000000   jne 0x3c91
0x00003bed      4939df         cmp r15, rbx
0x00003bf0      41bcffffff7f   mov r12d, 0x7fffffff
0x00003bf6      0f8677ffffff   jbe 0x3b73
0x00003bfc      ebaa           jmp 0x3ba8
0x00003bfe      6690           nop
0x00003c00      488d05d97720.  lea rax, obj.io_buf                     ; 0x20b3e0
0x00003c07      31ff           xor edi, edi
0x00003c09      4889fb         mov rbx, rdi
0x00003c0c      0fb600         movzx eax, byte [rax]
0x00003c0f      41803c0600     cmp byte [r14 + rax], 0
0x00003c14      75aa           jne 0x3bc0
0x00003c16      4889f8         mov rax, rdi
0x00003c19      488d5802       lea rbx, [rax + 2]
0x00003c1d      4c39fb         cmp rbx, r15
0x00003c20      0f83f4000000   jae 0x3d1a
0x00003c26      0fb6440502     movzx eax, byte [rbp + rax + 2]
0x00003c2b      41803c0600     cmp byte [r14 + rax], 0                 ; .//src:961
0x00003c30      0f84dc000000   je 0x3d12
0x00003c36      4889d8         mov rax, rbx
0x00003c39      440fbe641d00   movsx r12d, byte [rbp + rbx]
0x00003c3f      4829f8         sub rax, rdi
0x00003c42      4885db         test rbx, rbx
0x00003c45      4c8d4801       lea r9, [rax + 1]
0x00003c49      740f           je 0x3c5a
0x00003c4b      488d0d8d7720.  lea rcx, [0x0020b3df]
0x00003c52      443a240b       cmp r12b, byte [rbx + rcx]
0x00003c56      4c0f44c8       cmove r9, rax
0x00003c5a      4883c301       add rbx, 1
0x00003c5e      4d85c9         test r9, r9
0x00003c61      0f842effffff   je 0x3b95
0x00003c67      488b0d1a7420.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00003c6e      4801ef         add rdi, rbp
0x00003c71      4c89ca         mov rdx, r9
0x00003c74      be01000000     mov esi, 1
0x00003c79      4c894c2408     mov qword [rsp + 8], r9
0x00003c7e      e88ddbffff     call sym.imp.fwrite_unlocked
0x00003c83      4c8b4c2408     mov r9, qword [rsp + 8]                 ; .//src:-361
0x00003c88      4c39c8         cmp rax, r9
0x00003c8b      0f8404ffffff   je 0x3b95
0x00003c91      488d35fc3300.  lea rsi, str.write_error                ; 0x7094 ; "write error"
0x00003c98      ba05000000     mov edx, 5
0x00003c9d      31ff           xor edi, edi
0x00003c9f      e8ecd9ffff     call sym.imp.dcgettext
0x00003ca4      4889c3         mov rbx, rax
0x00003ca7      e864d9ffff     call sym.imp.__errno_location
0x00003cac      8b30           mov esi, dword [rax]
0x00003cae      4889da         mov rdx, rbx                            ; .//src:-360
0x00003cb1      bf01000000     mov edi, 1
0x00003cb6      31c0           xor eax, eax
0x00003cb8      e893dbffff     call sym.imp.error
0x00003cbd      0f1f00         nop dword [rax]
0x00003cc0      4883c301       add rbx, 1                              ; ../coreutils-8.31/src/.c:-546
0x00003cc4      4c39fb         cmp rbx, r15
0x00003cc7      0f849dfeffff   je 0x3b6a
0x00003ccd      0fbe441d00     movsx eax, byte [rbp + rbx]
0x00003cd2      4439e0         cmp eax, r12d
0x00003cd5      74e9           je 0x3cc0
0x00003cd7      41bcffffff7f   mov r12d, 0x7fffffff
0x00003cdd      e988feffff     jmp 0x3b6a
0x00003ce2      660f1f440000   nop word [rax + rax]
0x00003ce8      4883c418       add rsp, 0x18
0x00003cec      5b             pop rbx
0x00003ced      5d             pop rbp
0x00003cee      415c           pop r12                                 ; ../coreutils-8.31/src/.c:-539
0x00003cf0      415d           pop r13
0x00003cf2      415e           pop r14
0x00003cf4      415f           pop r15
0x00003cf6      c3             ret
0x00003cf7      660f1f840000.  nop word [rax + rax]
0x00003d00      4181fcffffff.  cmp r12d, 0x7fffffff                    ; .//src:-352
0x00003d07      0f858dfeffff   jne 0x3b9a
0x00003d0d      e996feffff     jmp 0x3ba8
0x00003d12      4889d8         mov rax, rbx
0x00003d15      e9fffeffff     jmp 0x3c19
0x00003d1a      0f85a5feffff   jne 0x3bc5
0x00003d20      488d5001       lea rdx, [rax + 1]
0x00003d24      0fb6440501     movzx eax, byte [rbp + rax + 1]
0x00003d29      41803c0600     cmp byte [r14 + rax], 0
0x00003d2e      0f8491feffff   je 0x3bc5
0x00003d34      4889d3         mov rbx, rdx
0x00003d37      e984feffff     jmp 0x3bc0
0x00003d3c      0f1f4000       nop dword [rax]
;-- usage:
0x00003d40      4155           push r13
0x00003d42      4154           push r12
0x00003d44      ba05000000     mov edx, 5
0x00003d49      55             push rbp
0x00003d4a      53             push rbx                                ; .//src:-340
0x00003d4b      89fd           mov ebp, edi
0x00003d4d      4881ec880000.  sub rsp, 0x88
0x00003d54      488b1d9d9620.  mov rbx, qword [obj.program_name]       ; [0x20d3f8:8]=0
0x00003d5b      64488b042528.  mov rax, qword fs:[0x28]
0x00003d64      4889442478     mov qword [rsp + 0x78], rax
0x00003d69      31c0           xor eax, eax
0x00003d6b      85ff           test edi, edi
0x00003d6d      742e           je 0x3d9d
0x00003d6f      488d355a3800.  lea rsi, str.Try___s___help__for_more_information. ; .//src:-339 ; 0x75d0 ; "Try '%s --help' for more information.\n"
0x00003d76      31ff           xor edi, edi
0x00003d78      e813d9ffff     call sym.imp.dcgettext
0x00003d7d      488b3d3c7320.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20b0c0:8]=0
0x00003d84      4889c2         mov rdx, rax
0x00003d87      4889d9         mov rcx, rbx
0x00003d8a      be01000000     mov esi, 1
0x00003d8f      31c0           xor eax, eax
0x00003d91      e80adbffff     call sym.imp.__fprintf_chk
0x00003d96      89ef           mov edi, ebp
0x00003d98      e8e3daffff     call sym.imp.exit
0x00003d9d      488d35543800.  lea rsi, str.Usage:__s__OPTION_..._SET1__SET2 ; 0x75f8 ; "Usage: %s [OPTION]... SET1 [SET2]\n"
0x00003da4      31ff           xor edi, edi
0x00003da6      e8e5d8ffff     call sym.imp.dcgettext
0x00003dab      4889da         mov rdx, rbx
0x00003dae      4889c6         mov rsi, rax
0x00003db1      bf01000000     mov edi, 1
0x00003db6      31c0           xor eax, eax
0x00003db8      e883daffff     call sym.imp.__printf_chk
0x00003dbd      488b1dc47220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00003dc4      488d35553800.  lea rsi, str.Translate__squeeze__and_or_delete_characters_from_standard_input___writing_to_standard_output._______c___C____complement____use_the_complement_of_SET1_____d____delete____________delete_characters_in_SET1__do_not_translate_____s____squeeze_repeats___replace_each_sequence_of_a_repeated_character______________________________that_is_listed_in_the_last_specified_SET_______________________________with_a_single_occurrence_of_that_character_____t____truncate_set1_____first_truncate_SET1_to_length_of_SET2 ; 0x7620 ; "Translate, squeeze, and/or delete characters from standard input,\nwriting to standard output.\n\n  -c, -C, --complement    use the complement of SET1\n  -d, --delete            delete characters in SET1, do not translate\n  -s, --squeeze-repeats   replace each sequence of a repeated character\n                            that is listed in the last specified SET,\n                            with a single occurrence of that character\n  -t, --truncate-set1     first truncate SET1 to length of SET2\n"
0x00003dcb      ba05000000     mov edx, 5
0x00003dd0      31ff           xor edi, edi
0x00003dd2      e8b9d8ffff     call sym.imp.dcgettext
0x00003dd7      4889de         mov rsi, rbx
0x00003dda      4889c7         mov rdi, rax
0x00003ddd      e8aed9ffff     call sym.imp.fputs_unlocked
0x00003de2      488b1d9f7220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00003de9      488d35203a00.  lea rsi, str.help_____display_this_help_and_exit ; 0x7810 ; "      --help     display this help and exit\n"
0x00003df0      ba05000000     mov edx, 5
0x00003df5      31ff           xor edi, edi
0x00003df7      e894d8ffff     call sym.imp.dcgettext
0x00003dfc      4889de         mov rsi, rbx
0x00003dff      4889c7         mov rdi, rax
0x00003e02      e889d9ffff     call sym.imp.fputs_unlocked
0x00003e07      488b1d7a7220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00003e0e      488d352b3a00.  lea rsi, str.version__output_version_information_and_exit ; 0x7840 ; "      --version  output version information and exit\n"
0x00003e15      ba05000000     mov edx, 5
0x00003e1a      31ff           xor edi, edi
0x00003e1c      e86fd8ffff     call sym.imp.dcgettext
0x00003e21      4889de         mov rsi, rbx
0x00003e24      4889c7         mov rdi, rax
0x00003e27      e864d9ffff     call sym.imp.fputs_unlocked
0x00003e2c      488b1d557220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00003e33      488d353e3a00.  lea rsi, str.SETs_are_specified_as_strings_of_characters.__Most_represent_themselves.__Interpreted_sequences_are:________NNN____________character_with_octal_value_NNN__1_to_3_octal_digits_______________________backslash_____________________audible_BEL_____________________backspace_____________________form_feed_____________________new_line_____________________return_____________________horizontal_tab ; 0x7878 ; "\nSETs are specified as strings of characters.  Most represent themselves.\nInterpreted sequences are:\n\n  \NNN            character with octal value NNN (1 to 3 octal digits)\n  \\              backslash\n  \a              audible BEL\n  \b              backspace\n  \f              form feed\n  \n              new line\n  \r              return\n  \t              horizontal tab\n"
0x00003e3a      ba05000000     mov edx, 5
0x00003e3f      31ff           xor edi, edi
0x00003e41      e84ad8ffff     call sym.imp.dcgettext
0x00003e46      4889de         mov rsi, rbx
0x00003e49      4889c7         mov rdi, rax
0x00003e4c      e83fd9ffff     call sym.imp.fputs_unlocked
0x00003e51      488b1d307220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00003e58      488d35913b00.  lea rsi, str.vertical_tab____CHAR1_CHAR2_____all_characters_from_CHAR1_to_CHAR2_in_ascending_order_____CHAR___________in_SET2__copies_of_CHAR_until_length_of_SET1_____CHAR_REPEAT____REPEAT_copies_of_CHAR__REPEAT_octal_if_starting_with_0_____:alnum:________all_letters_and_digits_____:alpha:________all_letters_____:blank:________all_horizontal_whitespace_____:cntrl:________all_control_characters_____:digit:________all_digits ; 0x79f0 ; "  \v              vertical tab\n  CHAR1-CHAR2     all characters from CHAR1 to CHAR2 in ascending order\n  [CHAR*]         in SET2, copies of CHAR until length of SET1\n  [CHAR*REPEAT]   REPEAT copies of CHAR, REPEAT octal if starting with 0\n  [:alnum:]       all letters and digits\n  [:alpha:]       all letters\n  [:blank:]       all horizontal whitespace\n  [:cntrl:]       all control characters\n  [:digit:]       all digits\n"
0x00003e5f      ba05000000     mov edx, 5
0x00003e64      31ff           xor edi, edi
0x00003e66      e825d8ffff     call sym.imp.dcgettext
0x00003e6b      4889de         mov rsi, rbx
0x00003e6e      4889c7         mov rdi, rax
0x00003e71      e81ad9ffff     call sym.imp.fputs_unlocked
0x00003e76      488b1d0b7220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00003e7d      488d351c3d00.  lea rsi, str.:graph:________all_printable_characters__not_including_space_____:lower:________all_lower_case_letters_____:print:________all_printable_characters__including_space_____:punct:________all_punctuation_characters_____:space:________all_horizontal_or_vertical_whitespace_____:upper:________all_upper_case_letters_____:xdigit:_______all_hexadecimal_digits______CHAR__________all_characters_which_are_equivalent_to_CHAR ; 0x7ba0 ; "  [:graph:]       all printable characters, not including space\n  [:lower:]       all lower case letters\n  [:print:]       all printable characters, including space\n  [:punct:]       all punctuation characters\n  [:space:]       all horizontal or vertical whitespace\n  [:upper:]       all upper case letters\n  [:xdigit:]      all hexadecimal digits\n  [=CHAR=]        all characters which are equivalent to CHAR\n"
0x00003e84      ba05000000     mov edx, 5
0x00003e89      31ff           xor edi, edi
0x00003e8b      e800d8ffff     call sym.imp.dcgettext
0x00003e90      4889de         mov rsi, rbx
0x00003e93      4889c7         mov rdi, rax
0x00003e96      e8f5d8ffff     call sym.imp.fputs_unlocked
0x00003e9b      488b1de67120.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00003ea2      488d35973e00.  lea rsi, str.Translation_occurs_if__d_is_not_given_and_both_SET1_and_SET2_appear.___t_may_be_used_only_when_translating.__SET2_is_extended_to_length_of__SET1_by_repeating_its_last_character_as_necessary.__Excess_characters__of_SET2_are_ignored.__Only__:lower:__and__:upper:__are_guaranteed_to__expand_in_ascending_order__used_in_SET2_while_translating__they_may__only_be_used_in_pairs_to_specify_case_conversion.___s_uses_the_last__specified_SET__and_occurs_after_translation_or_deletion. ; 0x7d40 ; "\nTranslation occurs if -d is not given and both SET1 and SET2 appear.\n-t may be used only when translating.  SET2 is extended to length of\nSET1 by repeating its last character as necessary.  Excess characters\nof SET2 are ignored.  Only [:lower:] and [:upper:] are guaranteed to\nexpand in ascending order; used in SET2 while translating, they may\nonly be used in pairs to specify case conversion.  -s uses the last\nspecified SET, and occurs after translation or deletion.\n"
0x00003ea9      ba05000000     mov edx, 5
0x00003eae      31ff           xor edi, edi
0x00003eb0      e8dbd7ffff     call sym.imp.dcgettext
0x00003eb5      4889de         mov rsi, rbx
0x00003eb8      4889c7         mov rdi, rax
0x00003ebb      488d1dde3100.  lea rbx, [0x000070a0]                   ; "tr"
0x00003ec2      e8c9d8ffff     call sym.imp.fputs_unlocked             ; string_fortified.h:6    License as published by the Free Software Foundation; either
0x00003ec7      488d05d53100.  lea rax, [0x000070a3]                   ; "["
0x00003ece      488d0d0f3200.  lea rcx, str.sha256sum                  ; 0x70e4 ; "sha256sum"
0x00003ed5      48c744246000.  mov qword [rsp + 0x60], 0
0x00003ede      48c744246800.  mov qword [rsp + 0x68], 0
0x00003ee7      4889e2         mov rdx, rsp
0x00003eea      48890424       mov qword [rsp], rax
0x00003eee      488d05b03100.  lea rax, [0x000070a5]                   ; "test invocation"
0x00003ef5      48894c2430     mov qword [rsp + 0x30], rcx
0x00003efa      488d0ded3100.  lea rcx, str.sha384sum                  ; 0x70ee ; "sha384sum"
0x00003f01      4889442408     mov qword [rsp + 8], rax
0x00003f06      488d05103200.  lea rax, [0x0000711d]                   ; "coreutils"
0x00003f0d      48894c2440     mov qword [rsp + 0x40], rcx
0x00003f12      488d0ddf3100.  lea rcx, str.sha512sum                  ; 0x70f8 ; "sha512sum"
0x00003f19      4889442410     mov qword [rsp + 0x10], rax
0x00003f1e      488d05903100.  lea rax, [0x000070b5]                   ; "Multi-call invocation"
0x00003f25      48894c2450     mov qword [rsp + 0x50], rcx
0x00003f2a      4889442418     mov qword [rsp + 0x18], rax
0x00003f2f      488d05953100.  lea rax, str.sha224sum                  ; 0x70cb ; "sha224sum"
0x00003f36      4889442420     mov qword [rsp + 0x20], rax
0x00003f3b      488d05933100.  lea rax, str.sha2_utilities             ; 0x70d5 ; "sha2 utilities"
0x00003f42      4889442428     mov qword [rsp + 0x28], rax
0x00003f47      4889442438     mov qword [rsp + 0x38], rax
0x00003f4c      4889442448     mov qword [rsp + 0x48], rax
0x00003f51      4889442458     mov qword [rsp + 0x58], rax
0x00003f56      662e0f1f8400.  nop word cs:[rax + rax]
0x00003f60      4883c210       add rdx, 0x10
0x00003f64      488b3a         mov rdi, qword [rdx]
0x00003f67      4885ff         test rdi, rdi
0x00003f6a      7413           je 0x3f7f
0x00003f6c      b903000000     mov ecx, 3
0x00003f71      4889de         mov rsi, rbx
0x00003f74      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00003f76      0f97c0         seta al
0x00003f79      1c00           sbb al, 0
0x00003f7b      84c0           test al, al
0x00003f7d      75e1           jne 0x3f60
0x00003f7f      4c8b6208       mov r12, qword [rdx + 8]
0x00003f83      31ff           xor edi, edi
0x00003f85      ba05000000     mov edx, 5
0x00003f8a      488d35713100.  lea rsi, str.s_online_help:___s         ; 0x7102 ; "\n%s online help: <%s>\n"
0x00003f91      4d85e4         test r12, r12
0x00003f94      0f84c1000000   je 0x405b
0x00003f9a      e8f1d6ffff     call sym.imp.dcgettext
0x00003f9f      488d0d723f00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x7f18 ; "https://www.gnu.org/software/coreutils/"
0x00003fa6      488d156c3100.  lea rdx, str.GNU_coreutils              ; 0x7119 ; "GNU coreutils"
0x00003fad      4889c6         mov rsi, rax
0x00003fb0      bf01000000     mov edi, 1
0x00003fb5      31c0           xor eax, eax
0x00003fb7      e884d8ffff     call sym.imp.__printf_chk
0x00003fbc      31f6           xor esi, esi
0x00003fbe      bf05000000     mov edi, 5
0x00003fc3      e868d8ffff     call sym.imp.setlocale
0x00003fc8      4885c0         test rax, rax
0x00003fcb      741c           je 0x3fe9
0x00003fcd      488d35533100.  lea rsi, [0x00007127]                   ; "en_"
0x00003fd4      ba03000000     mov edx, 3
0x00003fd9      4889c7         mov rdi, rax
0x00003fdc      e83fd6ffff     call sym.imp.strncmp
0x00003fe1      85c0           test eax, eax
0x00003fe3      0f8507010000   jne 0x40f0
0x00003fe9      488d353b3100.  lea rsi, str.Full_documentation___s_s   ; string_fortified.h:23 #endif ; 0x712b ; "Full documentation <%s%s>\n"
0x00003ff0      31ff           xor edi, edi
0x00003ff2      ba05000000     mov edx, 5
0x00003ff7      e894d6ffff     call sym.imp.dcgettext                  ; string_fortified.h:0
0x00003ffc      488d0d9d3000.  lea rcx, [0x000070a0]                   ; "tr"
0x00004003      488d150e3f00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x7f18 ; "https://www.gnu.org/software/coreutils/"
0x0000400a      4889c6         mov rsi, rax                            ; ../coreutils-8.31/src/.c:-539
0x0000400d      bf01000000     mov edi, 1
0x00004012      31c0           xor eax, eax
0x00004014      e827d8ffff     call sym.imp.__printf_chk
0x00004019      4939dc         cmp r12, rbx
0x0000401c      488d0d9c3000.  lea rcx, [0x000070bf]                   ; " invocation"
0x00004023      488d1db74800.  lea rbx, [0x000088e1]
0x0000402a      480f44d9       cmove rbx, rcx
0x0000402e      488d35533f00.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x7f88 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00004035      31ff           xor edi, edi
0x00004037      ba05000000     mov edx, 5
0x0000403c      e84fd6ffff     call sym.imp.dcgettext
0x00004041      4889d9         mov rcx, rbx
0x00004044      4889c6         mov rsi, rax
0x00004047      4c89e2         mov rdx, r12
0x0000404a      bf01000000     mov edi, 1
0x0000404f      31c0           xor eax, eax
0x00004051      e8ead7ffff     call sym.imp.__printf_chk
0x00004056      e93bfdffff     jmp 0x3d96
0x0000405b      e830d6ffff     call sym.imp.dcgettext
0x00004060      488d0db13e00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x7f18 ; "https://www.gnu.org/software/coreutils/"
0x00004067      488d15ab3000.  lea rdx, str.GNU_coreutils              ; 0x7119 ; "GNU coreutils"
0x0000406e      4889c6         mov rsi, rax
0x00004071      bf01000000     mov edi, 1
0x00004076      31c0           xor eax, eax
0x00004078      e8c3d7ffff     call sym.imp.__printf_chk
0x0000407d      31f6           xor esi, esi
0x0000407f      bf05000000     mov edi, 5
0x00004084      e8a7d7ffff     call sym.imp.setlocale
0x00004089      4885c0         test rax, rax
0x0000408c      7418           je 0x40a6
0x0000408e      488d35923000.  lea rsi, [0x00007127]                   ; "en_"
0x00004095      ba03000000     mov edx, 3
0x0000409a      4889c7         mov rdi, rax
0x0000409d      e87ed5ffff     call sym.imp.strncmp
0x000040a2      85c0           test eax, eax
0x000040a4      7543           jne 0x40e9
0x000040a6      488d357e3000.  lea rsi, str.Full_documentation___s_s   ; 0x712b ; "Full documentation <%s%s>\n"
0x000040ad      ba05000000     mov edx, 5
0x000040b2      31ff           xor edi, edi
0x000040b4      4c8d25e52f00.  lea r12, [0x000070a0]                   ; "tr"
0x000040bb      488d1dfd2f00.  lea rbx, [0x000070bf]                   ; " invocation"
0x000040c2      e8c9d5ffff     call sym.imp.dcgettext
0x000040c7      488d0dd22f00.  lea rcx, [0x000070a0]                   ; "tr"
0x000040ce      488d15433e00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x7f18 ; "https://www.gnu.org/software/coreutils/"
0x000040d5      4889c6         mov rsi, rax
0x000040d8      bf01000000     mov edi, 1
0x000040dd      31c0           xor eax, eax
0x000040df      e85cd7ffff     call sym.imp.__printf_chk
0x000040e4      e945ffffff     jmp 0x402e
0x000040e9      4c8d25b02f00.  lea r12, [0x000070a0]                   ; "tr"
0x000040f0      4c8b2d916f20.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x000040f7      488d35423e00.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x7f40 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x000040fe      31ff           xor edi, edi
0x00004100      ba05000000     mov edx, 5
0x00004105      e886d5ffff     call sym.imp.dcgettext
0x0000410a      4c89ee         mov rsi, r13
0x0000410d      4889c7         mov rdi, rax
0x00004110      e87bd6ffff     call sym.imp.fputs_unlocked
0x00004115      e9cffeffff     jmp 0x3fe9
0x0000411a      660f1f440000   nop word [rax + rax]
;-- close_stdout_set_file_name:
0x00004120      48893dc99220.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x20d3f0:8]=0
0x00004127      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00004128      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00004130      40883db19220.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x20d3e8:1]=0
0x00004137      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00004138      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00004140      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00004141      53             push rbx
0x00004142      4883ec08       sub rsp, 8
0x00004146      488b3d3b6f20.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x0000414d      e8ce2b0000     call sym.close_stream
0x00004152      85c0           test eax, eax
0x00004154      7416           je 0x416c
0x00004156      e8b5d4ffff     call sym.imp.__errno_location
0x0000415b      803d86922000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x20d3e8:1]=0
0x00004162      4889c3         mov rbx, rax
0x00004165      741c           je 0x4183
0x00004167      833820         cmp dword [rax], 0x20
0x0000416a      7517           jne 0x4183
0x0000416c      488b3d4d6f20.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20b0c0:8]=0
0x00004173      e8a82b0000     call sym.close_stream
0x00004178      85c0           test eax, eax
0x0000417a      7546           jne 0x41c2
0x0000417c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00004180      5b             pop rbx
0x00004181      5d             pop rbp
0x00004182      c3             ret
0x00004183      488d350a2f00.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x7094 ; "write error"
0x0000418a      31ff           xor edi, edi
0x0000418c      ba05000000     mov edx, 5
0x00004191      e8fad4ffff     call sym.imp.dcgettext
0x00004196      488b3d539220.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x20d3f0:8]=0
0x0000419d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x000041a0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x000041a3      7428           je 0x41cd
0x000041a5      e8961b0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x000041aa      8b33           mov esi, dword [rbx]
0x000041ac      488d15a14100.  lea rdx, str.s:__s                      ; 0x8354 ; "%s: %s"
0x000041b3      4889c1         mov rcx, rax
0x000041b6      4989e8         mov r8, rbp
0x000041b9      31ff           xor edi, edi
0x000041bb      31c0           xor eax, eax
0x000041bd      e88ed6ffff     call sym.imp.error
0x000041c2      8b3d506e2000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x20b018:4]=1
0x000041c8      e863d4ffff     call sym.imp._exit
0x000041cd      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x000041cf      488d15824100.  lea rdx, [0x00008358]                   ; "%s"
0x000041d6      4889c1         mov rcx, rax
0x000041d9      31ff           xor edi, edi
0x000041db      31c0           xor eax, eax
0x000041dd      e86ed6ffff     call sym.imp.error
0x000041e2      ebde           jmp 0x41c2
0x000041e4      662e0f1f8400.  nop word cs:[rax + rax]
0x000041ee      6690           nop
;-- fdadvise:
0x000041f0      e96bd5ffff     jmp sym.imp.posix_fadvise               ; ../coreutils-8.31/lib/fadvise.c:32
0x000041f5      90             nop
0x000041f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- fadvise:
0x00004200      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fadvise.c:40
0x00004203      741b           je 0x4220
0x00004205      53             push rbx
0x00004206      89f3           mov ebx, esi
0x00004208      e8b3d5ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fadvise.c:42
0x0000420d      89d9           mov ecx, ebx                            ; ../coreutils-8.31/lib/fadvise.c:34
0x0000420f      31d2           xor edx, edx
0x00004211      31f6           xor esi, esi
0x00004213      5b             pop rbx                                 ; ../coreutils-8.31/lib/fadvise.c:43
0x00004214      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fadvise.c:34
0x00004216      e945d5ffff     jmp sym.imp.posix_fadvise
0x0000421b      0f1f440000     nop dword [rax + rax]
0x00004220      f3c3           ret
0x00004222      662e0f1f8400.  nop word cs:[rax + rax]
0x0000422c      0f1f4000       nop dword [rax]
;-- set_program_name:
0x00004230      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00004233      53             push rbx
0x00004234      7477           je 0x42ad                               ; ../coreutils-8.31/lib/progname.c:51
0x00004236      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x0000423b      4889fb         mov rbx, rdi
0x0000423e      e8bdd4ffff     call sym.imp.strrchr
0x00004243      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00004246      7455           je 0x429d
0x00004248      4c8d4001       lea r8, [rax + 1]
0x0000424c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x0000424f      4829da         sub rdx, rbx
0x00004252      4883fa06       cmp rdx, 6
0x00004256      7e45           jle 0x429d
0x00004258      488d70fa       lea rsi, [rax - 6]
0x0000425c      488d3d354100.  lea rdi, str..libs                      ; 0x8398 ; "/.libs/"
0x00004263      b907000000     mov ecx, 7
0x00004268      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000426a      0f97c2         seta dl
0x0000426d      80da00         sbb dl, 0
0x00004270      84d2           test dl, dl
0x00004272      7529           jne 0x429d
0x00004274      488d3d254100.  lea rdi, [0x000083a0]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x0000427b      b903000000     mov ecx, 3
0x00004280      4c89c6         mov rsi, r8
0x00004283      4c89c3         mov rbx, r8
0x00004286      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00004288      0f97c2         seta dl
0x0000428b      80da00         sbb dl, 0
0x0000428e      84d2           test dl, dl
0x00004290      750b           jne 0x429d
0x00004292      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00004296      48891de36d20.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x20b080:8]=0
0x0000429d      48891d549120.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x20d3f8:8]=0
0x000042a4      48891df56d20.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x20b0a0:8]=0
0x000042ab      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x000042ac      c3             ret
0x000042ad      488b0d0c6e20.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20b0c0:8]=0
0x000042b4      488d3da54000.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x8360 ; "A NULL argv[0] was passed through an exec system call.\n"
0x000042bb      ba37000000     mov edx, 0x37                           ; '7'
0x000042c0      be01000000     mov esi, 1
0x000042c5      e8c6d5ffff     call sym.imp.fwrite
0x000042ca      e831d3ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x000042cf      90             nop
;-- gettext_quote.part.1:
0x000042d0      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x000042d1      53             push rbx
0x000042d2      4889fd         mov rbp, rdi
0x000042d5      89f3           mov ebx, esi
0x000042d7      4883ec08       sub rsp, 8
0x000042db      e8202b0000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x000042e0      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x000042e3      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000042e6      80fa55         cmp dl, 0x55
0x000042e9      7475           je 0x4360
0x000042eb      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x000042ee      7420           je 0x4310
0x000042f0      488d05bc4000.  lea rax, str.l______l                   ; 0x83b3 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000042f7      488d15b74000.  lea rdx, [0x000083b5]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000042fe      83fb09         cmp ebx, 9
0x00004301      480f45c2       cmovne rax, rdx
0x00004305      4883c408       add rsp, 8
0x00004309      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x0000430a      5d             pop rbp
0x0000430b      c3             ret
0x0000430c      0f1f4000       nop dword [rax]
0x00004310      0fb65001       movzx edx, byte [rax + 1]
0x00004314      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00004317      80fa42         cmp dl, 0x42
0x0000431a      75d4           jne 0x42f0
0x0000431c      80780231       cmp byte [rax + 2], 0x31
0x00004320      75ce           jne 0x42f0
0x00004322      80780338       cmp byte [rax + 3], 0x38
0x00004326      75c8           jne 0x42f0
0x00004328      80780430       cmp byte [rax + 4], 0x30
0x0000432c      75c2           jne 0x42f0
0x0000432e      80780533       cmp byte [rax + 5], 0x33
0x00004332      75bc           jne 0x42f0
0x00004334      80780630       cmp byte [rax + 6], 0x30
0x00004338      75b6           jne 0x42f0
0x0000433a      80780700       cmp byte [rax + 7], 0
0x0000433e      75b0           jne 0x42f0
0x00004340      807d0060       cmp byte [rbp], 0x60
0x00004344      488d05614000.  lea rax, [0x000083ac]
0x0000434b      488d155e4000.  lea rdx, [0x000083b0]
0x00004352      480f45c2       cmovne rax, rdx
0x00004356      4883c408       add rsp, 8
0x0000435a      5b             pop rbx
0x0000435b      5d             pop rbp
0x0000435c      c3             ret
0x0000435d      0f1f00         nop dword [rax]
0x00004360      0fb65001       movzx edx, byte [rax + 1]
0x00004364      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00004367      80fa54         cmp dl, 0x54
0x0000436a      7584           jne 0x42f0
0x0000436c      0fb65002       movzx edx, byte [rax + 2]
0x00004370      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00004373      80fa46         cmp dl, 0x46
0x00004376      0f8574ffffff   jne 0x42f0
0x0000437c      8078032d       cmp byte [rax + 3], 0x2d
0x00004380      0f856affffff   jne 0x42f0
0x00004386      80780438       cmp byte [rax + 4], 0x38
0x0000438a      0f8560ffffff   jne 0x42f0
0x00004390      80780500       cmp byte [rax + 5], 0
0x00004394      0f8556ffffff   jne 0x42f0
0x0000439a      807d0060       cmp byte [rbp], 0x60
0x0000439e      488d05ff3f00.  lea rax, [0x000083a4]                   ; "\u2018"
0x000043a5      488d15fc3f00.  lea rdx, [0x000083a8]                   ; "\u2019"
0x000043ac      480f45c2       cmovne rax, rdx
0x000043b0      4883c408       add rsp, 8
0x000043b4      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x000043b5      5d             pop rbp
0x000043b6      c3             ret
0x000043b7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x000043c0      4157           push r15
0x000043c2      4156           push r14
0x000043c4      4589c7         mov r15d, r8d
0x000043c7      4155           push r13
0x000043c9      4154           push r12
0x000043cb      4989fe         mov r14, rdi
0x000043ce      55             push rbp
0x000043cf      53             push rbx
0x000043d0      4489cb         mov ebx, r9d
0x000043d3      4989f5         mov r13, rsi
0x000043d6      4889cd         mov rbp, rcx
0x000043d9      83e302         and ebx, 2
0x000043dc      4881ecb80000.  sub rsp, 0xb8
0x000043e3      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x000043eb      4889542410     mov qword [rsp + 0x10], rdx
0x000043f0      4489442408     mov dword [rsp + 8], r8d
0x000043f5      44894c2478     mov dword [rsp + 0x78], r9d
0x000043fa      4889442420     mov qword [rsp + 0x20], rax
0x000043ff      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00004407      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x0000440c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00004414      4889442460     mov qword [rsp + 0x60], rax
0x00004419      64488b042528.  mov rax, qword fs:[0x28]
0x00004422      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000442a      31c0           xor eax, eax
0x0000442c      e86fd2ffff     call sym.imp.__ctype_get_mb_cur_max
0x00004431      4183ff0a       cmp r15d, 0xa
0x00004435      4889442458     mov qword [rsp + 0x58], rax
0x0000443a      0f87af110000   ja 0x55ef
0x00004440      488d0dd93f00.  lea rcx, [0x00008420]
0x00004447      4489fa         mov edx, r15d
0x0000444a      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000444e      4801c8         add rax, rcx
0x00004451      ffe0           jmp rax
0x00004453      c644240e01     mov byte [rsp + 0xe], 1
0x00004458      c644247c00     mov byte [rsp + 0x7c], 0
0x0000445d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00004460      48c744245000.  mov qword [rsp + 0x50], 0
0x00004469      c644240f01     mov byte [rsp + 0xf], 1
0x0000446e      c644240d00     mov byte [rsp + 0xd], 0
0x00004473      488d053b3f00.  lea rax, [0x000083b5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000447a      48c744241801.  mov qword [rsp + 0x18], 1
0x00004483      4531ff         xor r15d, r15d
0x00004486      c74424080200.  mov dword [rsp + 8], 2
0x0000448e      4889442448     mov qword [rsp + 0x48], rax
0x00004493      4531db         xor r11d, r11d
0x00004496      4889e8         mov rax, rbp
0x00004499      4589e0         mov r8d, r12d
0x0000449c      4c89dd         mov rbp, r11
0x0000449f      4989c3         mov r11, rax
0x000044a2      660f1f440000   nop word [rax + rax]
0x000044a8      4939eb         cmp r11, rbp
0x000044ab      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x000044af      4983fbff       cmp r11, 0xffffffffffffffff
0x000044b3      750d           jne 0x44c2
0x000044b5      488b442410     mov rax, qword [rsp + 0x10]
0x000044ba      803c2800       cmp byte [rax + rbp], 0
0x000044be      410f95c4       setne r12b
0x000044c2      4584e4         test r12b, r12b
0x000044c5      0f8455060000   je 0x4b20
0x000044cb      837c240802     cmp dword [rsp + 8], 2
0x000044d0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000044d5      4c8d0c2f       lea r9, [rdi + rbp]
0x000044d9      0f95c0         setne al
0x000044dc      2244240d       and al, byte [rsp + 0xd]
0x000044e0      4189c2         mov r10d, eax
0x000044e3      0f84a7000000   je 0x4590
0x000044e9      488b442418     mov rax, qword [rsp + 0x18]
0x000044ee      4885c0         test rax, rax
0x000044f1      0f8429040000   je 0x4920
0x000044f7      4983fbff       cmp r11, 0xffffffffffffffff
0x000044fb      488d5c0500     lea rbx, [rbp + rax]
0x00004500      752e           jne 0x4530
0x00004502      4883f801       cmp rax, 1
0x00004506      7628           jbe 0x4530
0x00004508      4488442438     mov byte [rsp + 0x38], r8b
0x0000450d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00004512      4c894c2428     mov qword [rsp + 0x28], r9
0x00004517      e894d1ffff     call sym.imp.strlen
0x0000451c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00004522      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00004528      4989c3         mov r11, rax
0x0000452b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00004530      4c39db         cmp rbx, r11
0x00004533      4488542428     mov byte [rsp + 0x28], r10b
0x00004538      0f87b2050000   ja 0x4af0
0x0000453e      488b542418     mov rdx, qword [rsp + 0x18]
0x00004543      488b742448     mov rsi, qword [rsp + 0x48]
0x00004548      4c89cf         mov rdi, r9
0x0000454b      4c895c2440     mov qword [rsp + 0x40], r11
0x00004550      4488442438     mov byte [rsp + 0x38], r8b
0x00004555      4c894c2430     mov qword [rsp + 0x30], r9
0x0000455a      e821d2ffff     call sym.imp.memcmp
0x0000455f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00004561      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00004566      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x0000456c      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00004571      0f8579050000   jne 0x4af0
0x00004577      807c240f00     cmp byte [rsp + 0xf], 0
0x0000457c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00004582      0f857d0f0000   jne 0x5505
0x00004588      0f1f84000000.  nop dword [rax + rax]
0x00004590      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00004594      80fb7e         cmp bl, 0x7e
0x00004597      0f871b030000   ja 0x48b8
0x0000459d      488d0da83e00.  lea rcx, [0x0000844c]
0x000045a4      0fb6d3         movzx edx, bl
0x000045a7      48630491       movsxd rax, dword [rcx + rdx*4]
0x000045ab      4801c8         add rax, rcx
0x000045ae      ffe0           jmp rax
0x000045b0      4531d2         xor r10d, r10d
0x000045b3      4983fb01       cmp r11, 1
0x000045b7      0f95c0         setne al
0x000045ba      4983fbff       cmp r11, 0xffffffffffffffff
0x000045be      750c           jne 0x45cc
0x000045c0      488b442410     mov rax, qword [rsp + 0x10]
0x000045c5      80780100       cmp byte [rax + 1], 0
0x000045c9      0f95c0         setne al
0x000045cc      837c240802     cmp dword [rsp + 8], 2
0x000045d1      0f94c2         sete dl
0x000045d4      84c0           test al, al
0x000045d6      0f844c020000   je 0x4828
0x000045dc      4531e4         xor r12d, r12d
0x000045df      31c0           xor eax, eax
0x000045e1      0f1f80000000.  nop dword [rax]
0x000045e8      807c240d01     cmp byte [rsp + 0xd], 1
0x000045ed      0f850f010000   jne 0x4702
0x000045f3      84d2           test dl, dl
0x000045f5      0f8507010000   jne 0x4702
0x000045fb      488b742420     mov rsi, qword [rsp + 0x20]
0x00004600      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00004603      7414           je 0x4619
0x00004605      89da           mov edx, ebx
0x00004607      c0ea05         shr dl, 5
0x0000460a      0fb6d2         movzx edx, dl
0x0000460d      8b1496         mov edx, dword [rsi + rdx*4]
0x00004610      0fa3da         bt edx, ebx
0x00004613      0f824a010000   jb 0x4763
0x00004619      4584d2         test r10b, r10b
0x0000461c      0f8541010000   jne 0x4763
0x00004622      83f001         xor eax, 1
0x00004625      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00004629      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x0000462c      84c0           test al, al
0x0000462e      7420           je 0x4650                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00004630      4d39fd         cmp r13, r15
0x00004633      7605           jbe 0x463a
0x00004635      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000463a      498d4701       lea rax, [r15 + 1]
0x0000463e      4939c5         cmp r13, rax
0x00004641      7606           jbe 0x4649
0x00004643      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004649      4983c702       add r15, 2
0x0000464d      4531c0         xor r8d, r8d
0x00004650      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00004653      7304           jae 0x4659                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00004655      43881c3e       mov byte [r14 + r15], bl
0x00004659      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x0000465e      4983c701       add r15, 1
0x00004662      b800000000     mov eax, 0
0x00004667      4584e4         test r12b, r12b
0x0000466a      0f44f8         cmove edi, eax
0x0000466d      40887c240e     mov byte [rsp + 0xe], dil
0x00004672      e931feffff     jmp 0x44a8
0x00004677      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00004680      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00004683      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00004687      83f802         cmp eax, 2
0x0000468a      0f84b8050000   je 0x4c48
0x00004690      83f805         cmp eax, 5
0x00004693      0f846f050000   je 0x4c08
0x00004699      83f802         cmp eax, 2
0x0000469c      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000046a1      0f94c2         sete dl
0x000046a4      4531e4         xor r12d, r12d
0x000046a7      31c0           xor eax, eax
0x000046a9      e93affffff     jmp 0x45e8
0x000046ae      6690           nop
0x000046b0      4531d2         xor r10d, r10d
0x000046b3      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x000046b8      0f8402050000   je 0x4bc0
0x000046be      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x000046c3      31d2           xor edx, edx
0x000046c5      31c0           xor eax, eax
0x000046c7      bb27000000     mov ebx, 0x27                           ; '''
0x000046cc      e917ffffff     jmp 0x45e8
0x000046d1      0f1f80000000.  nop dword [rax]
0x000046d8      ba09000000     mov edx, 9
0x000046dd      bb74000000     mov ebx, 0x74                           ; 't'
0x000046e2      837c240802     cmp dword [rsp + 8], 2
0x000046e7      0f94c0         sete al
0x000046ea      2244240f       and al, byte [rsp + 0xf]
0x000046ee      0f854a010000   jne 0x483e
0x000046f4      807c240d00     cmp byte [rsp + 0xd], 0
0x000046f9      7565           jne 0x4760
0x000046fb      89d3           mov ebx, edx
0x000046fd      4531e4         xor r12d, r12d
0x00004700      31c0           xor eax, eax
0x00004702      807c240f00     cmp byte [rsp + 0xf], 0
0x00004707      0f85eefeffff   jne 0x45fb
0x0000470d      e907ffffff     jmp 0x4619                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00004712      660f1f440000   nop word [rax + rax]
0x00004718      ba08000000     mov edx, 8
0x0000471d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00004722      ebd0           jmp 0x46f4
0x00004724      0f1f4000       nop dword [rax]
0x00004728      837c240802     cmp dword [rsp + 8], 2
0x0000472d      0f84cd030000   je 0x4b00
0x00004733      807c240d00     cmp byte [rsp + 0xd], 0
0x00004738      0f8412020000   je 0x4950
0x0000473e      807c240f00     cmp byte [rsp + 0xf], 0
0x00004743      0f8407020000   je 0x4950
0x00004749      48837c241800   cmp qword [rsp + 0x18], 0
0x0000474f      0f85b6030000   jne 0x4b0b
0x00004755      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000475a      660f1f440000   nop word [rax + rax]
0x00004760      4531e4         xor r12d, r12d
0x00004763      837c240802     cmp dword [rsp + 8], 2
0x00004768      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x0000476b      807c240f00     cmp byte [rsp + 0xf], 0
0x00004770      89d0           mov eax, edx
0x00004772      0f8550080000   jne 0x4fc8
0x00004778      4489c0         mov eax, r8d
0x0000477b      83f001         xor eax, 1
0x0000477e      20d0           and al, dl
0x00004780      742f           je 0x47b1
0x00004782      4d39fd         cmp r13, r15
0x00004785      7605           jbe 0x478c
0x00004787      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000478c      498d5701       lea rdx, [r15 + 1]
0x00004790      4939d5         cmp r13, rdx
0x00004793      7606           jbe 0x479b
0x00004795      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000479b      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x0000479f      4939d5         cmp r13, rdx
0x000047a2      7606           jbe 0x47aa
0x000047a4      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000047aa      4983c703       add r15, 3
0x000047ae      4189c0         mov r8d, eax
0x000047b1      4d39fd         cmp r13, r15
0x000047b4      7605           jbe 0x47bb
0x000047b6      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000047bb      4983c701       add r15, 1
0x000047bf      4883c501       add rbp, 1
0x000047c3      e988feffff     jmp 0x4650
0x000047c8      0f1f84000000.  nop dword [rax + rax]
0x000047d0      807c240d00     cmp byte [rsp + 0xd], 0
0x000047d5      0f85c8010000   jne 0x49a3
0x000047db      31d2           xor edx, edx
0x000047dd      f644247801     test byte [rsp + 0x78], 1
0x000047e2      0f8413ffffff   je 0x46fb
0x000047e8      4883c501       add rbp, 1
0x000047ec      e9b7fcffff     jmp 0x44a8
0x000047f1      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x000047f8      837c240802     cmp dword [rsp + 8], 2
0x000047fd      0f94c2         sete dl
0x00004800      31c0           xor eax, eax
0x00004802      e9e1fdffff     jmp 0x45e8
0x00004807      660f1f840000.  nop word [rax + rax]
0x00004810      ba07000000     mov edx, 7
0x00004815      bb61000000     mov ebx, 0x61                           ; 'a'
0x0000481a      e9d5feffff     jmp 0x46f4
0x0000481f      90             nop
0x00004820      837c240802     cmp dword [rsp + 8], 2
0x00004825      0f94c2         sete dl
0x00004828      4885ed         test rbp, rbp
0x0000482b      0f85abfdffff   jne 0x45dc
0x00004831      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00004836      20d0           and al, dl
0x00004838      0f84aafdffff   je 0x45e8
0x0000483e      4c89dd         mov rbp, r11
0x00004841      c74424080200.  mov dword [rsp + 8], 2
0x00004849      e9fb060000     jmp 0x4f49
0x0000484e      6690           nop
0x00004850      837c240802     cmp dword [rsp + 8], 2
0x00004855      0f94c2         sete dl
0x00004858      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x0000485b      ebd4           jmp 0x4831
0x0000485d      0f1f00         nop dword [rax]
0x00004860      837c240802     cmp dword [rsp + 8], 2
0x00004865      bb20000000     mov ebx, 0x20                           ; "@"
0x0000486a      0f94c2         sete dl
0x0000486d      ebc2           jmp 0x4831
0x0000486f      90             nop
0x00004870      ba0d000000     mov edx, 0xd
0x00004875      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000487a      e963feffff     jmp 0x46e2
0x0000487f      90             nop
0x00004880      ba0c000000     mov edx, 0xc
0x00004885      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000488a      e965feffff     jmp 0x46f4
0x0000488f      90             nop
0x00004890      ba0b000000     mov edx, 0xb
0x00004895      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000489a      e955feffff     jmp 0x46f4
0x0000489f      90             nop
0x000048a0      ba0a000000     mov edx, 0xa
0x000048a5      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x000048aa      e933feffff     jmp 0x46e2
0x000048af      90             nop
0x000048b0      4531d2         xor r10d, r10d
0x000048b3      0f1f440000     nop dword [rax + rax]
0x000048b8      48837c245801   cmp qword [rsp + 0x58], 1
0x000048be      0f85a4030000   jne 0x4c68
0x000048c4      4c895c2438     mov qword [rsp + 0x38], r11
0x000048c9      4488442430     mov byte [rsp + 0x30], r8b
0x000048ce      4488542428     mov byte [rsp + 0x28], r10b
0x000048d3      e808d0ffff     call sym.imp.__ctype_b_loc
0x000048d8      488b08         mov rcx, qword [rax]
0x000048db      0fb6d3         movzx edx, bl
0x000048de      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x000048e4      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x000048ea      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x000048ef      bf01000000     mov edi, 1
0x000048f4      0fb70451       movzx eax, word [rcx + rdx*2]
0x000048f8      66250040       and ax, 0x4000                          ; "0"
0x000048fc      410f95c4       setne r12b
0x00004900      0f94c0         sete al
0x00004903      2244240d       and al, byte [rsp + 0xd]
0x00004907      84c0           test al, al
0x00004909      0f8592090000   jne 0x52a1
0x0000490f      837c240802     cmp dword [rsp + 8], 2
0x00004914      0f94c2         sete dl
0x00004917      e9ccfcffff     jmp 0x45e8
0x0000491c      0f1f4000       nop dword [rax]
0x00004920      410fb619       movzx ebx, byte [r9]
0x00004924      80fb7e         cmp bl, 0x7e
0x00004927      7787           ja 0x48b0
0x00004929      488d0d183d00.  lea rcx, [0x00008648]
0x00004930      0fb6d3         movzx edx, bl
0x00004933      48630491       movsxd rax, dword [rcx + rdx*4]
0x00004937      4801c8         add rax, rcx
0x0000493a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x0000493c      0f1f4000       nop dword [rax]
0x00004940      4531d2         xor r10d, r10d
0x00004943      807c240d00     cmp byte [rsp + 0xd], 0
0x00004948      0f85f0fdffff   jne 0x473e
0x0000494e      6690           nop
0x00004950      ba5c000000     mov edx, 0x5c                           ; '\'
0x00004955      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000495a      e995fdffff     jmp 0x46f4
0x0000495f      90             nop
0x00004960      ba0c000000     mov edx, 0xc
0x00004965      4531d2         xor r10d, r10d
0x00004968      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000496d      e982fdffff     jmp 0x46f4
0x00004972      660f1f440000   nop word [rax + rax]
0x00004978      ba0a000000     mov edx, 0xa
0x0000497d      4531d2         xor r10d, r10d
0x00004980      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00004985      e958fdffff     jmp 0x46e2
0x0000498a      660f1f440000   nop word [rax + rax]
0x00004990      bb61000000     mov ebx, 0x61                           ; 'a'
0x00004995      e9c6fdffff     jmp 0x4760
0x0000499a      660f1f440000   nop word [rax + rax]
0x000049a0      4531d2         xor r10d, r10d
0x000049a3      837c240802     cmp dword [rsp + 8], 2
0x000049a8      0f94c2         sete dl
0x000049ab      807c240f00     cmp byte [rsp + 0xf], 0
0x000049b0      0f85940b0000   jne 0x554a
0x000049b6      4489c0         mov eax, r8d
0x000049b9      4c89f9         mov rcx, r15
0x000049bc      83f001         xor eax, 1
0x000049bf      20d0           and al, dl
0x000049c1      742d           je 0x49f0
0x000049c3      4d39fd         cmp r13, r15
0x000049c6      7605           jbe 0x49cd
0x000049c8      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000049cd      498d4f01       lea rcx, [r15 + 1]
0x000049d1      4939cd         cmp r13, rcx
0x000049d4      7606           jbe 0x49dc
0x000049d6      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000049dc      498d4f02       lea rcx, [r15 + 2]
0x000049e0      4939cd         cmp r13, rcx
0x000049e3      0f8730060000   ja 0x5019
0x000049e9      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x000049ed      4189c0         mov r8d, eax
0x000049f0      4939cd         cmp r13, rcx
0x000049f3      7605           jbe 0x49fa
0x000049f5      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000049fa      837c240802     cmp dword [rsp + 8], 2
0x000049ff      4c8d7901       lea r15, [rcx + 1]
0x00004a03      0f8400060000   je 0x5009
0x00004a09      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00004a0d      4c39d8         cmp rax, r11
0x00004a10      7319           jae 0x4a2b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00004a12      488b442410     mov rax, qword [rsp + 0x10]
0x00004a17      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x00004a1c      88442428       mov byte [rsp + 0x28], al
0x00004a20      83e830         sub eax, 0x30
0x00004a23      3c09           cmp al, 9
0x00004a25      0f862e080000   jbe 0x5259
0x00004a2b      4489e0         mov eax, r12d
0x00004a2e      bb30000000     mov ebx, 0x30                           ; '0'
0x00004a33      4531e4         xor r12d, r12d
0x00004a36      e9adfbffff     jmp 0x45e8                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x00004a3b      0f1f440000     nop dword [rax + rax]
0x00004a40      837c240802     cmp dword [rsp + 8], 2
0x00004a45      4589d4         mov r12d, r10d
0x00004a48      0f94c2         sete dl
0x00004a4b      4531d2         xor r10d, r10d
0x00004a4e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00004a50      e993fbffff     jmp 0x45e8                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00004a55      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00004a58      837c240802     cmp dword [rsp + 8], 2
0x00004a5d      0f94c2         sete dl
0x00004a60      4531d2         xor r10d, r10d
0x00004a63      e9c0fdffff     jmp 0x4828
0x00004a68      0f1f84000000.  nop dword [rax + rax]
0x00004a70      837c240802     cmp dword [rsp + 8], 2
0x00004a75      0f94c2         sete dl
0x00004a78      4531d2         xor r10d, r10d
0x00004a7b      4531e4         xor r12d, r12d
0x00004a7e      e9aefdffff     jmp 0x4831
0x00004a83      0f1f440000     nop dword [rax + rax]
0x00004a88      837c240802     cmp dword [rsp + 8], 2
0x00004a8d      4589d4         mov r12d, r10d
0x00004a90      bb20000000     mov ebx, 0x20                           ; "@"
0x00004a95      0f94c2         sete dl
0x00004a98      4531d2         xor r10d, r10d
0x00004a9b      e991fdffff     jmp 0x4831
0x00004aa0      ba0d000000     mov edx, 0xd
0x00004aa5      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00004aa8      bb72000000     mov ebx, 0x72                           ; 'r'
0x00004aad      e930fcffff     jmp 0x46e2
0x00004ab2      660f1f440000   nop word [rax + rax]
0x00004ab8      bb76000000     mov ebx, 0x76                           ; 'v'
0x00004abd      e99efcffff     jmp 0x4760
0x00004ac2      660f1f440000   nop word [rax + rax]
0x00004ac8      ba09000000     mov edx, 9
0x00004acd      4531d2         xor r10d, r10d
0x00004ad0      bb74000000     mov ebx, 0x74                           ; 't'
0x00004ad5      e908fcffff     jmp 0x46e2
0x00004ada      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00004ae0      bb62000000     mov ebx, 0x62                           ; 'b'
0x00004ae5      e976fcffff     jmp 0x4760
0x00004aea      660f1f440000   nop word [rax + rax]
0x00004af0      4531d2         xor r10d, r10d
0x00004af3      e998faffff     jmp 0x4590
0x00004af8      0f1f84000000.  nop dword [rax + rax]
0x00004b00      807c240f00     cmp byte [rsp + 0xf], 0
0x00004b05      0f8565090000   jne 0x5470
0x00004b0b      4883c501       add rbp, 1
0x00004b0f      4489c0         mov eax, r8d
0x00004b12      4531e4         xor r12d, r12d
0x00004b15      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00004b1a      e90dfbffff     jmp 0x462c
0x00004b1f      90             nop
0x00004b20      837c240802     cmp dword [rsp + 8], 2
0x00004b25      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00004b2a      4589c4         mov r12d, r8d
0x00004b2d      4c89dd         mov rbp, r11
0x00004b30      0f94c2         sete dl
0x00004b33      89d8           mov eax, ebx
0x00004b35      4d85ff         test r15, r15
0x00004b38      0f94c1         sete cl
0x00004b3b      21d0           and eax, edx
0x00004b3d      20c8           and al, cl
0x00004b3f      0f85610a0000   jne 0x55a6                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00004b45      89d8           mov eax, ebx
0x00004b47      83f001         xor eax, 1
0x00004b4a      20c2           and dl, al
0x00004b4c      0f846a090000   je 0x54bc
0x00004b52      807c247c00     cmp byte [rsp + 0x7c], 0
0x00004b57      0f845d090000   je 0x54ba
0x00004b5d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00004b62      0f85f5090000   jne 0x555d
0x00004b68      4d85ed         test r13, r13
0x00004b6b      0f94c0         sete al
0x00004b6e      48837c245000   cmp qword [rsp + 0x50], 0
0x00004b74      0f95c2         setne dl
0x00004b77      20d0           and al, dl
0x00004b79      0f841d0a0000   je 0x559c
0x00004b7f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00004b84      488d1d2a3800.  lea rbx, [0x000083b5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004b8b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x00004b8f      c74424080200.  mov dword [rsp + 8], 2
0x00004b97      41bf01000000   mov r15d, 1
0x00004b9d      48c744241801.  mov qword [rsp + 0x18], 1
0x00004ba6      c644240f00     mov byte [rsp + 0xf], 0
0x00004bab      48895c2448     mov qword [rsp + 0x48], rbx
0x00004bb0      8844247c       mov byte [rsp + 0x7c], al
0x00004bb4      e9daf8ffff     jmp 0x4493
0x00004bb9      0f1f80000000.  nop dword [rax]
0x00004bc0      807c240f00     cmp byte [rsp + 0xf], 0
0x00004bc5      0f85a5080000   jne 0x5470
0x00004bcb      4d85ed         test r13, r13
0x00004bce      0f84fc030000   je 0x4fd0                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00004bd4      31d2           xor edx, edx
0x00004bd6      48837c245000   cmp qword [rsp + 0x50], 0
0x00004bdc      0f85ee030000   jne 0x4fd0                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00004be2      4c896c2450     mov qword [rsp + 0x50], r13
0x00004be7      4983c703       add r15, 3
0x00004beb      31c0           xor eax, eax
0x00004bed      448864247c     mov byte [rsp + 0x7c], r12b
0x00004bf2      4531c0         xor r8d, r8d
0x00004bf5      4989d5         mov r13, rdx
0x00004bf8      bb27000000     mov ebx, 0x27                           ; '''
0x00004bfd      e917faffff     jmp 0x4619
0x00004c02      660f1f440000   nop word [rax + rax]
0x00004c08      f644247804     test byte [rsp + 0x78], 4
0x00004c0d      7421           je 0x4c30
0x00004c0f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00004c13      4c39d9         cmp rcx, r11
0x00004c16      7318           jae 0x4c30
0x00004c18      488b442410     mov rax, qword [rsp + 0x10]
0x00004c1d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00004c22      0f848a070000   je 0x53b2
0x00004c28      0f1f84000000.  nop dword [rax + rax]
0x00004c30      31d2           xor edx, edx
0x00004c32      4531e4         xor r12d, r12d
0x00004c35      31c0           xor eax, eax
0x00004c37      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00004c3c      e9a7f9ffff     jmp 0x45e8
0x00004c41      0f1f80000000.  nop dword [rax]
0x00004c48      807c240f00     cmp byte [rsp + 0xf], 0
0x00004c4d      0f851d080000   jne 0x5470
0x00004c53      4531e4         xor r12d, r12d
0x00004c56      31c0           xor eax, eax
0x00004c58      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00004c5d      e9b7f9ffff     jmp 0x4619                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00004c62      660f1f440000   nop word [rax + rax]
0x00004c68      488d8424a000.  lea rax, [rsp + 0xa0]
0x00004c70      4983fbff       cmp r11, 0xffffffffffffffff
0x00004c74      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00004c80      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00004c85      752d           jne 0x4cb4
0x00004c87      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00004c8c      4488442440     mov byte [rsp + 0x40], r8b
0x00004c91      4488542438     mov byte [rsp + 0x38], r10b
0x00004c96      4c894c2430     mov qword [rsp + 0x30], r9
0x00004c9b      e810caffff     call sym.imp.strlen
0x00004ca0      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00004ca6      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x00004cac      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x00004caf      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00004cb4      488d84249c00.  lea rax, [rsp + 0x9c]
0x00004cbc      31c9           xor ecx, ecx
0x00004cbe      885c247e       mov byte [rsp + 0x7e], bl
0x00004cc2      448844247d     mov byte [rsp + 0x7d], r8b
0x00004cc7      4889cb         mov rbx, rcx
0x00004cca      4c898c248800.  mov qword [rsp + 0x88], r9
0x00004cd2      4889442438     mov qword [rsp + 0x38], rax
0x00004cd7      448854247f     mov byte [rsp + 0x7f], r10b
0x00004cdc      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00004ce4      4c89742440     mov qword [rsp + 0x40], r14
0x00004ce9      4c896c2470     mov qword [rsp + 0x70], r13
0x00004cee      4c895c2430     mov qword [rsp + 0x30], r11
0x00004cf3      488b442410     mov rax, qword [rsp + 0x10]
0x00004cf8      4c8d741d00     lea r14, [rbp + rbx]
0x00004cfd      488b542430     mov rdx, qword [rsp + 0x30]
0x00004d02      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00004d07      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00004d0c      4e8d2c30       lea r13, [rax + r14]
0x00004d10      4c29f2         sub rdx, r14
0x00004d13      4c89ee         mov rsi, r13
0x00004d16      e8751f0000     call sym.rpl_mbrtowc
0x00004d1b      4885c0         test rax, rax
0x00004d1e      4989c7         mov r15, rax
0x00004d21      744e           je 0x4d71
0x00004d23      4883f8ff       cmp rax, 0xffffffffffffffff
0x00004d27      0f8418060000   je 0x5345
0x00004d2d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00004d31      0f849a050000   je 0x52d1
0x00004d37      837c240802     cmp dword [rsp + 8], 2
0x00004d3c      0f94c0         sete al
0x00004d3f      2244240f       and al, byte [rsp + 0xf]
0x00004d43      0f8597010000   jne 0x4ee0
0x00004d49      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00004d50      e86bcbffff     call sym.imp.iswprint
0x00004d55      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00004d5a      85c0           test eax, eax
0x00004d5c      b800000000     mov eax, 0
0x00004d61      440f44e0       cmove r12d, eax
0x00004d65      4c01fb         add rbx, r15
0x00004d68      e843cbffff     call sym.imp.mbsinit
0x00004d6d      85c0           test eax, eax
0x00004d6f      7482           je 0x4cf3
0x00004d71      4489e2         mov edx, r12d
0x00004d74      4889df         mov rdi, rbx
0x00004d77      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00004d7d      83f201         xor edx, 1
0x00004d80      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00004d85      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00004d8b      2254240d       and dl, byte [rsp + 0xd]
0x00004d8f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004d97      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004d9c      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00004da1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00004da6      4883ff01       cmp rdi, 1
0x00004daa      0f86fb050000   jbe 0x53ab
0x00004db0      4889f9         mov rcx, rdi
0x00004db3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00004db5      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x00004dbb      4801e9         add rcx, rbp
0x00004dbe      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00004dc3      e9b6000000     jmp 0x4e7e
0x00004dc8      0f1f84000000.  nop dword [rax + rax]
0x00004dd0      837c240802     cmp dword [rsp + 8], 2
0x00004dd5      0f94c0         sete al
0x00004dd8      4584c9         test r9b, r9b
0x00004ddb      0f85af040000   jne 0x5290
0x00004de1      4489c6         mov esi, r8d
0x00004de4      83f601         xor esi, 1
0x00004de7      4020f0         and al, sil
0x00004dea      742f           je 0x4e1b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x00004dec      4d39fd         cmp r13, r15
0x00004def      7605           jbe 0x4df6
0x00004df1      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00004df6      498d7701       lea rsi, [r15 + 1]
0x00004dfa      4939f5         cmp r13, rsi
0x00004dfd      7606           jbe 0x4e05                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x00004dff      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00004e05      498d7702       lea rsi, [r15 + 2]
0x00004e09      4939f5         cmp r13, rsi
0x00004e0c      7606           jbe 0x4e14
0x00004e0e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004e14      4983c703       add r15, 3
0x00004e18      4189c0         mov r8d, eax
0x00004e1b      4d39fd         cmp r13, r15
0x00004e1e      7605           jbe 0x4e25
0x00004e20      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00004e25      498d4701       lea rax, [r15 + 1]
0x00004e29      4939c5         cmp r13, rax
0x00004e2c      760d           jbe 0x4e3b
0x00004e2e      89d8           mov eax, ebx
0x00004e30      c0e806         shr al, 6
0x00004e33      83c030         add eax, 0x30
0x00004e36      4388443e01     mov byte [r14 + r15 + 1], al
0x00004e3b      498d4702       lea rax, [r15 + 2]
0x00004e3f      4939c5         cmp r13, rax
0x00004e42      7610           jbe 0x4e54
0x00004e44      89d8           mov eax, ebx
0x00004e46      c0e803         shr al, 3
0x00004e49      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x00004e4c      83c030         add eax, 0x30
0x00004e4f      4388443e02     mov byte [r14 + r15 + 2], al
0x00004e54      83e307         and ebx, 7
0x00004e57      4883c501       add rbp, 1
0x00004e5b      4983c703       add r15, 3
0x00004e5f      83c330         add ebx, 0x30
0x00004e62      4839cd         cmp rbp, rcx
0x00004e65      0f83e5f7ffff   jae 0x4650
0x00004e6b      89d6           mov esi, edx
0x00004e6d      4d39fd         cmp r13, r15
0x00004e70      7604           jbe 0x4e76
0x00004e72      43881c3e       mov byte [r14 + r15], bl
0x00004e76      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00004e7a      4983c701       add r15, 1
0x00004e7e      84d2           test dl, dl
0x00004e80      0f854affffff   jne 0x4dd0
0x00004e86      89f0           mov eax, esi
0x00004e88      83f001         xor eax, 1
0x00004e8b      4421c0         and eax, r8d
0x00004e8e      4584d2         test r10b, r10b
0x00004e91      740e           je 0x4ea1
0x00004e93      4d39fd         cmp r13, r15
0x00004e96      7605           jbe 0x4e9d
0x00004e98      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00004e9d      4983c701       add r15, 1
0x00004ea1      4883c501       add rbp, 1
0x00004ea5      4839cd         cmp rbp, rcx
0x00004ea8      0f837ef7ffff   jae 0x462c
0x00004eae      84c0           test al, al
0x00004eb0      0f84f8030000   je 0x52ae
0x00004eb6      4d39fd         cmp r13, r15
0x00004eb9      7605           jbe 0x4ec0
0x00004ebb      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00004ec0      498d4701       lea rax, [r15 + 1]
0x00004ec4      4939c5         cmp r13, rax
0x00004ec7      7606           jbe 0x4ecf
0x00004ec9      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004ecf      4983c702       add r15, 2
0x00004ed3      4531d2         xor r10d, r10d
0x00004ed6      4531c0         xor r8d, r8d
0x00004ed9      eb92           jmp 0x4e6d
0x00004edb      0f1f440000     nop dword [rax + rax]
0x00004ee0      4983ff01       cmp r15, 1
0x00004ee4      0f845ffeffff   je 0x4d49
0x00004eea      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00004eef      4a8d0c3f       lea rcx, [rdi + r15]
0x00004ef3      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00004ef8      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00004efc      eb0f           jmp 0x4f0d
0x00004efe      6690           nop
0x00004f00      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00004f04      4939d0         cmp r8, rdx
0x00004f07      0f843cfeffff   je 0x4d49
0x00004f0d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00004f10      83e95b         sub ecx, 0x5b
0x00004f13      80f921         cmp cl, 0x21
0x00004f16      77e8           ja 0x4f00                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00004f18      be01000000     mov esi, 1
0x00004f1d      48d3e6         shl rsi, cl
0x00004f20      4889f1         mov rcx, rsi
0x00004f23      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x00004f2d      4885f1         test rcx, rsi
0x00004f30      74ce           je 0x4f00
0x00004f32      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004f37      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00004f3c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00004f41      c74424080200.  mov dword [rsp + 8], 2
0x00004f49      807c240d00     cmp byte [rsp + 0xd], 0
0x00004f4e      7410           je 0x4f60
0x00004f50      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00004f52      b804000000     mov eax, 4
0x00004f57      0f44442408     cmove eax, dword [rsp + 8]
0x00004f5c      89442408       mov dword [rsp + 8], eax
0x00004f60      4883ec08       sub rsp, 8
0x00004f64      4889e9         mov rcx, rbp
0x00004f67      4c89ee         mov rsi, r13
0x00004f6a      ff742468       push qword [rsp + 0x68]
0x00004f6e      ff742478       push qword [rsp + 0x78]
0x00004f72      4c89f7         mov rdi, r14
0x00004f75      6a00           push 0
0x00004f77      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00004f7f      448b442428     mov r8d, dword [rsp + 0x28]
0x00004f84      488b542430     mov rdx, qword [rsp + 0x30]
0x00004f89      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x00004f8d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00004f92      4883c420       add rsp, 0x20
0x00004f96      4989c7         mov r15, rax
0x00004f99      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00004fa1      6448331c2528.  xor rbx, qword fs:[0x28]
0x00004faa      4c89f8         mov rax, r15
0x00004fad      0f8500060000   jne 0x55b3
0x00004fb3      4881c4b80000.  add rsp, 0xb8
0x00004fba      5b             pop rbx
0x00004fbb      5d             pop rbp
0x00004fbc      415c           pop r12
0x00004fbe      415d           pop r13
0x00004fc0      415e           pop r14
0x00004fc2      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00004fc4      c3             ret
0x00004fc5      0f1f00         nop dword [rax]
0x00004fc8      4c89dd         mov rbp, r11
0x00004fcb      e979ffffff     jmp 0x4f49
0x00004fd0      4d39fd         cmp r13, r15
0x00004fd3      7605           jbe 0x4fda
0x00004fd5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00004fda      498d4701       lea rax, [r15 + 1]
0x00004fde      4939c5         cmp r13, rax
0x00004fe1      7606           jbe 0x4fe9
0x00004fe3      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00004fe9      498d4702       lea rax, [r15 + 2]
0x00004fed      4939c5         cmp r13, rax
0x00004ff0      0f86ec050000   jbe 0x55e2
0x00004ff6      4c89ea         mov rdx, r13
0x00004ff9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004fff      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00005004      e9d9fbffff     jmp 0x4be2
0x00005009      4489e0         mov eax, r12d
0x0000500c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00005011      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00005014      e900f6ffff     jmp 0x4619                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00005019      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000501f      e9c5f9ffff     jmp 0x49e9
0x00005024      85db           test ebx, ebx
0x00005026      0f8527f4ffff   jne 0x4453
0x0000502c      c644240d01     mov byte [rsp + 0xd], 1
0x00005031      4d85ed         test r13, r13
0x00005034      0f8590050000   jne 0x55ca
0x0000503a      488d05743300.  lea rax, [0x000083b5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00005041      48c744245000.  mov qword [rsp + 0x50], 0
0x0000504a      c644240e01     mov byte [rsp + 0xe], 1
0x0000504f      c644247c00     mov byte [rsp + 0x7c], 0
0x00005054      4531e4         xor r12d, r12d
0x00005057      c644240f00     mov byte [rsp + 0xf], 0
0x0000505c      48c744241801.  mov qword [rsp + 0x18], 1
0x00005065      4889442448     mov qword [rsp + 0x48], rax
0x0000506a      41bf01000000   mov r15d, 1
0x00005070      c74424080200.  mov dword [rsp + 8], 2
0x00005078      e916f4ffff     jmp 0x4493                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x0000507d      0f1f00         nop dword [rax]
0x00005080      85db           test ebx, ebx
0x00005082      0f85f5030000   jne 0x547d
0x00005088      4d85ed         test r13, r13
0x0000508b      0f8425020000   je 0x52b6
0x00005091      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00005095      c644240e01     mov byte [rsp + 0xe], 1
0x0000509a      4531e4         xor r12d, r12d
0x0000509d      c644247c00     mov byte [rsp + 0x7c], 0
0x000050a2      48c744245000.  mov qword [rsp + 0x50], 0
0x000050ab      488d05013300.  lea rax, str.l______l                   ; 0x83b3 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000050b2      c644240f00     mov byte [rsp + 0xf], 0
0x000050b7      c644240d01     mov byte [rsp + 0xd], 1
0x000050bc      48c744241801.  mov qword [rsp + 0x18], 1
0x000050c5      41bf01000000   mov r15d, 1
0x000050cb      4889442448     mov qword [rsp + 0x48], rax
0x000050d0      e9bef3ffff     jmp 0x4493
0x000050d5      488d05d73200.  lea rax, str.l______l                   ; 0x83b3 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000050dc      c644240e01     mov byte [rsp + 0xe], 1
0x000050e1      c644247c00     mov byte [rsp + 0x7c], 0
0x000050e6      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x000050e9      48c744245000.  mov qword [rsp + 0x50], 0
0x000050f2      c644240f01     mov byte [rsp + 0xf], 1
0x000050f7      c644240d01     mov byte [rsp + 0xd], 1
0x000050fc      48c744241801.  mov qword [rsp + 0x18], 1
0x00005105      4531ff         xor r15d, r15d
0x00005108      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x0000510d      c74424080500.  mov dword [rsp + 8], 5
0x00005115      e979f3ffff     jmp 0x4493
0x0000511a      c644240e01     mov byte [rsp + 0xe], 1
0x0000511f      c644247c00     mov byte [rsp + 0x7c], 0
0x00005124      4531e4         xor r12d, r12d
0x00005127      48c744245000.  mov qword [rsp + 0x50], 0
0x00005130      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00005135      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00005138      c644240d01     mov byte [rsp + 0xd], 1
0x0000513d      48c744241800.  mov qword [rsp + 0x18], 0
0x00005146      48c744244800.  mov qword [rsp + 0x48], 0
0x0000514f      e93ff3ffff     jmp 0x4493
0x00005154      837c24080a     cmp dword [rsp + 8], 0xa
0x00005159      7456           je 0x51b1
0x0000515b      488d35553200.  lea rsi, [0x000083b7]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00005162      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00005164      ba05000000     mov edx, 5
0x00005169      e822c5ffff     call sym.imp.dcgettext
0x0000516e      4889c1         mov rcx, rax
0x00005171      4889442468     mov qword [rsp + 0x68], rax
0x00005176      488d053a3200.  lea rax, [0x000083b7]                   ; "`"
0x0000517d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00005180      0f8498030000   je 0x551e
0x00005186      488d35283200.  lea rsi, [0x000083b5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000518d      31ff           xor edi, edi
0x0000518f      ba05000000     mov edx, 5
0x00005194      e8f7c4ffff     call sym.imp.dcgettext
0x00005199      4889c1         mov rcx, rax
0x0000519c      4889442460     mov qword [rsp + 0x60], rax
0x000051a1      488d050d3200.  lea rax, [0x000083b5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000051a8      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x000051ab      0f8483030000   je 0x5534
0x000051b1      4531ff         xor r15d, r15d
0x000051b4      85db           test ebx, ebx
0x000051b6      0f84c1010000   je 0x537d
0x000051bc      85db           test ebx, ebx
0x000051be      488b5c2460     mov rbx, qword [rsp + 0x60]
0x000051c3      0f9544240f     setne byte [rsp + 0xf]
0x000051c8      4531e4         xor r12d, r12d
0x000051cb      4889df         mov rdi, rbx
0x000051ce      e8ddc4ffff     call sym.imp.strlen
0x000051d3      48895c2448     mov qword [rsp + 0x48], rbx
0x000051d8      4889442418     mov qword [rsp + 0x18], rax
0x000051dd      c644240e01     mov byte [rsp + 0xe], 1
0x000051e2      c644247c00     mov byte [rsp + 0x7c], 0
0x000051e7      48c744245000.  mov qword [rsp + 0x50], 0
0x000051f0      c644240d01     mov byte [rsp + 0xd], 1
0x000051f5      e999f2ffff     jmp 0x4493
0x000051fa      c644240e01     mov byte [rsp + 0xe], 1
0x000051ff      c644247c00     mov byte [rsp + 0x7c], 0
0x00005204      4531e4         xor r12d, r12d
0x00005207      48c744245000.  mov qword [rsp + 0x50], 0
0x00005210      c644240f00     mov byte [rsp + 0xf], 0
0x00005215      4531ff         xor r15d, r15d
0x00005218      c644240d00     mov byte [rsp + 0xd], 0
0x0000521d      48c744241800.  mov qword [rsp + 0x18], 0
0x00005226      48c744244800.  mov qword [rsp + 0x48], 0
0x0000522f      e95ff2ffff     jmp 0x4493
0x00005234      c644240e01     mov byte [rsp + 0xe], 1
0x00005239      c644247c00     mov byte [rsp + 0x7c], 0
0x0000523e      4531e4         xor r12d, r12d
0x00005241      48c744245000.  mov qword [rsp + 0x50], 0
0x0000524a      c644240f01     mov byte [rsp + 0xf], 1
0x0000524f      c644240d01     mov byte [rsp + 0xd], 1
0x00005254      e91af2ffff     jmp 0x4473
0x00005259      4d39fd         cmp r13, r15
0x0000525c      7605           jbe 0x5263
0x0000525e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00005263      488d4102       lea rax, [rcx + 2]
0x00005267      4939c5         cmp r13, rax
0x0000526a      7606           jbe 0x5272
0x0000526c      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00005272      4489e0         mov eax, r12d
0x00005275      4c8d7903       lea r15, [rcx + 3]
0x00005279      4531e4         xor r12d, r12d
0x0000527c      bb30000000     mov ebx, 0x30                           ; '0'
0x00005281      e962f3ffff     jmp 0x45e8
0x00005286      662e0f1f8400.  nop word cs:[rax + rax]
0x00005290      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00005295      4c89dd         mov rbp, r11
0x00005298      885c240d       mov byte [rsp + 0xd], bl
0x0000529c      e9a8fcffff     jmp 0x4f49
0x000052a1      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000052a6      4531e4         xor r12d, r12d
0x000052a9      e902fbffff     jmp 0x4db0
0x000052ae      4531d2         xor r10d, r10d
0x000052b1      e9b7fbffff     jmp 0x4e6d
0x000052b6      48c744245000.  mov qword [rsp + 0x50], 0
0x000052bf      c644240e01     mov byte [rsp + 0xe], 1
0x000052c4      4531e4         xor r12d, r12d
0x000052c7      c644247c00     mov byte [rsp + 0x7c], 0
0x000052cc      e9dafdffff     jmp 0x50ab
0x000052d1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000052d6      4c89f6         mov rsi, r14
0x000052d9      4c89e9         mov rcx, r13
0x000052dc      4889d8         mov rax, rbx
0x000052df      4889df         mov rdi, rbx
0x000052e2      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000052e8      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000052ed      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x000052f5      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x000052f8      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000052fe      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00005306      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000530b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00005310      7326           jae 0x5338
0x00005312      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00005315      7510           jne 0x5327
0x00005317      eb1f           jmp 0x5338
0x00005319      0f1f80000000.  nop dword [rax]
0x00005320      41803c0100     cmp byte [r9 + rax], 0
0x00005325      740e           je 0x5335
0x00005327      4883c001       add rax, 1
0x0000532b      488d540500     lea rdx, [rbp + rax]
0x00005330      4939d3         cmp r11, rdx
0x00005333      77eb           ja 0x5320
0x00005335      4889c7         mov rdi, rax
0x00005338      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000533d      4531e4         xor r12d, r12d
0x00005340      e961faffff     jmp 0x4da6
0x00005345      4889df         mov rdi, rbx
0x00005348      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000534e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00005353      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00005359      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00005361      4531e4         xor r12d, r12d
0x00005364      4c8b742440     mov r14, qword [rsp + 0x40]
0x00005369      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000536e      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00005373      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00005378      e929faffff     jmp 0x4da6
0x0000537d      488b542468     mov rdx, qword [rsp + 0x68]
0x00005382      0fb602         movzx eax, byte [rdx]
0x00005385      84c0           test al, al
0x00005387      0f842ffeffff   je 0x51bc
0x0000538d      0f1f00         nop dword [rax]
0x00005390      4d39fd         cmp r13, r15
0x00005393      7604           jbe 0x5399
0x00005395      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00005399      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x0000539d      420fb6043a     movzx eax, byte [rdx + r15]
0x000053a2      84c0           test al, al
0x000053a4      75ea           jne 0x5390
0x000053a6      e911feffff     jmp 0x51bc
0x000053ab      89d0           mov eax, edx
0x000053ad      e955f5ffff     jmp 0x4907
0x000053b2      0fb61c08       movzx ebx, byte [rax + rcx]
0x000053b6      80fb3e         cmp bl, 0x3e
0x000053b9      0f8771f8ffff   ja 0x4c30
0x000053bf      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x000053c9      480fa3d8       bt rax, rbx
0x000053cd      0f835df8ffff   jae 0x4c30
0x000053d3      807c240f00     cmp byte [rsp + 0xf], 0
0x000053d8      0f85e4010000   jne 0x55c2                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x000053de      4d39fd         cmp r13, r15
0x000053e1      7605           jbe 0x53e8
0x000053e3      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x000053e8      498d4701       lea rax, [r15 + 1]
0x000053ec      4939c5         cmp r13, rax
0x000053ef      7606           jbe 0x53f7
0x000053f1      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x000053f7      498d4702       lea rax, [r15 + 2]
0x000053fb      4939c5         cmp r13, rax
0x000053fe      7606           jbe 0x5406
0x00005400      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00005406      498d4703       lea rax, [r15 + 3]
0x0000540a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x0000540d      7606           jbe 0x5415
0x0000540f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00005415      4983c704       add r15, 4
0x00005419      31d2           xor edx, edx
0x0000541b      4531e4         xor r12d, r12d
0x0000541e      31c0           xor eax, eax
0x00005420      4889cd         mov rbp, rcx
0x00005423      e9c0f1ffff     jmp 0x45e8
0x00005428      85db           test ebx, ebx
0x0000542a      0f8488010000   je 0x55b8
0x00005430      488d057e2f00.  lea rax, [0x000083b5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00005437      c644240e01     mov byte [rsp + 0xe], 1
0x0000543c      c644247c00     mov byte [rsp + 0x7c], 0
0x00005441      4531e4         xor r12d, r12d
0x00005444      48c744245000.  mov qword [rsp + 0x50], 0
0x0000544d      c644240f01     mov byte [rsp + 0xf], 1
0x00005452      c644240d00     mov byte [rsp + 0xd], 0
0x00005457      48c744241801.  mov qword [rsp + 0x18], 1
0x00005460      4531ff         xor r15d, r15d
0x00005463      4889442448     mov qword [rsp + 0x48], rax
0x00005468      e926f0ffff     jmp 0x4493
0x0000546d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00005470      4c89dd         mov rbp, r11
0x00005473      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00005478      e9ccfaffff     jmp 0x4f49
0x0000547d      488d052f2f00.  lea rax, str.l______l                   ; 0x83b3 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00005484      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00005489      c644247c00     mov byte [rsp + 0x7c], 0
0x0000548e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00005491      48c744245000.  mov qword [rsp + 0x50], 0
0x0000549a      c644240f01     mov byte [rsp + 0xf], 1
0x0000549f      c644240d01     mov byte [rsp + 0xd], 1
0x000054a4      48c744241801.  mov qword [rsp + 0x18], 1
0x000054ad      4531ff         xor r15d, r15d
0x000054b0      4889442448     mov qword [rsp + 0x48], rax
0x000054b5      e9d9efffff     jmp 0x4493
0x000054ba      89d0           mov eax, edx
0x000054bc      488b5c2448     mov rbx, qword [rsp + 0x48]
0x000054c1      4885db         test rbx, rbx
0x000054c4      742c           je 0x54f2
0x000054c6      84c0           test al, al
0x000054c8      7428           je 0x54f2
0x000054ca      0fb60b         movzx ecx, byte [rbx]
0x000054cd      4889d8         mov rax, rbx
0x000054d0      84c9           test cl, cl
0x000054d2      741e           je 0x54f2
0x000054d4      4c89fa         mov rdx, r15
0x000054d7      4c29f8         sub rax, r15
0x000054da      4939d5         cmp r13, rdx
0x000054dd      7604           jbe 0x54e3
0x000054df      41880c16       mov byte [r14 + rdx], cl
0x000054e3      4883c201       add rdx, 1
0x000054e7      0fb60c10       movzx ecx, byte [rax + rdx]
0x000054eb      84c9           test cl, cl
0x000054ed      75eb           jne 0x54da
0x000054ef      4989d7         mov r15, rdx
0x000054f2      4d39fd         cmp r13, r15
0x000054f5      0f869efaffff   jbe 0x4f99
0x000054fb      43c6043e00     mov byte [r14 + r15], 0
0x00005500      e994faffff     jmp 0x4f99
0x00005505      837c240802     cmp dword [rsp + 8], 2
0x0000550a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000550f      4c89dd         mov rbp, r11
0x00005512      0f94c0         sete al
0x00005515      885c240d       mov byte [rsp + 0xd], bl
0x00005519      e92bfaffff     jmp 0x4f49
0x0000551e      8b742408       mov esi, dword [rsp + 8]
0x00005522      4889cf         mov rdi, rcx
0x00005525      e8a6edffff     call sym.gettext_quote.part.1
0x0000552a      4889442468     mov qword [rsp + 0x68], rax
0x0000552f      e952fcffff     jmp 0x5186
0x00005534      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00005538      4889cf         mov rdi, rcx
0x0000553b      e890edffff     call sym.gettext_quote.part.1
0x00005540      4889442460     mov qword [rsp + 0x60], rax
0x00005545      e967fcffff     jmp 0x51b1
0x0000554a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000554f      4c89dd         mov rbp, r11
0x00005552      89d0           mov eax, edx
0x00005554      885c240d       mov byte [rsp + 0xd], bl
0x00005558      e9ecf9ffff     jmp 0x4f49
0x0000555d      4883ec08       sub rsp, 8
0x00005561      41b805000000   mov r8d, 5
0x00005567      4c89d9         mov rcx, r11
0x0000556a      ff742468       push qword [rsp + 0x68]
0x0000556e      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00005572      4c89f7         mov rdi, r14
0x00005575      ff742438       push qword [rsp + 0x38]
0x00005579      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00005581      488b542430     mov rdx, qword [rsp + 0x30]
0x00005586      488b742470     mov rsi, qword [rsp + 0x70]
0x0000558b      e830eeffff     call sym.quotearg_buffer_restyled
0x00005590      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00005594      4989c7         mov r15, rax
0x00005597      e9fdf9ffff     jmp 0x4f99
0x0000559c      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x000055a1      e916ffffff     jmp 0x54bc
0x000055a6      c74424080200.  mov dword [rsp + 8], 2
0x000055ae      e996f9ffff     jmp 0x4f49
0x000055b3      e808c1ffff     call sym.imp.__stack_chk_fail
0x000055b8      c644240d00     mov byte [rsp + 0xd], 0
0x000055bd      e96ffaffff     jmp 0x5031
0x000055c2      4c89dd         mov rbp, r11
0x000055c5      e996f9ffff     jmp 0x4f60
0x000055ca      c644240e01     mov byte [rsp + 0xe], 1
0x000055cf      31c0           xor eax, eax
0x000055d1      4531e4         xor r12d, r12d
0x000055d4      48c744245000.  mov qword [rsp + 0x50], 0
0x000055dd      e9a2f5ffff     jmp 0x4b84
0x000055e2      4c89ea         mov rdx, r13
0x000055e5      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000055ea      e9f3f5ffff     jmp 0x4be2
0x000055ef      e80cc0ffff     call sym.imp.abort
0x000055f4      6690           nop
0x000055f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00005600      4157           push r15
0x00005602      4156           push r14
0x00005604      4c63ff         movsxd r15, edi
0x00005607      4155           push r13
0x00005609      4154           push r12
0x0000560b      4989d6         mov r14, rdx
0x0000560e      55             push rbp
0x0000560f      53             push rbx
0x00005610      4889cd         mov rbp, rcx
0x00005613      4883ec28       sub rsp, 0x28
0x00005617      4889742408     mov qword [rsp + 8], rsi
0x0000561c      e8efbfffff     call sym.imp.__errno_location
0x00005621      4989c5         mov r13, rax
0x00005624      8b00           mov eax, dword [rax]
0x00005626      4585ff         test r15d, r15d
0x00005629      488b1d305a20.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x20b060:8]=0x20b070 obj.slotvec0 ; "p\xb0 "
0x00005630      89442418       mov dword [rsp + 0x18], eax
0x00005634      0f8867010000   js 0x57a1
0x0000563a      44393d175a20.  cmp dword [obj.nslots], r15d            ; [0x20b058:4]=1
0x00005641      7f62           jg 0x56a5
0x00005643      4181ffffffff.  cmp r15d, 0x7fffffff
0x0000564a      0f8456010000   je 0x57a6
0x00005650      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00005654      488d05155a20.  lea rax, obj.slotvec0                   ; 0x20b070
0x0000565b      4963f4         movsxd rsi, r12d
0x0000565e      48c1e604       shl rsi, 4
0x00005662      4839c3         cmp rbx, rax
0x00005665      0f8415010000   je 0x5780
0x0000566b      4889df         mov rdi, rbx
0x0000566e      e8cd0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00005673      4889c3         mov rbx, rax
0x00005676      488905e35920.  mov qword [obj.slotvec], rax            ; [0x20b060:8]=0x20b070 obj.slotvec0 ; "p\xb0 "
0x0000567d      48633dd45920.  movsxd rdi, dword [obj.nslots]          ; [0x20b058:4]=1
0x00005684      4489e2         mov edx, r12d
0x00005687      31f6           xor esi, esi
0x00005689      29fa           sub edx, edi
0x0000568b      48c1e704       shl rdi, 4
0x0000568f      4863d2         movsxd rdx, edx
0x00005692      4801df         add rdi, rbx
0x00005695      48c1e204       shl rdx, 4
0x00005699      e8a2c0ffff     call sym.imp.memset
0x0000569e      448925b35920.  mov dword [obj.nslots], r12d            ; [0x20b058:4]=1
0x000056a5      8b4504         mov eax, dword [rbp + 4]
0x000056a8      49c1e704       shl r15, 4
0x000056ac      4883ec08       sub rsp, 8
0x000056b0      4c01fb         add rbx, r15
0x000056b3      4c8d7d08       lea r15, [rbp + 8]
0x000056b7      448b4500       mov r8d, dword [rbp]
0x000056bb      4c8b1b         mov r11, qword [rbx]
0x000056be      4c8b6308       mov r12, qword [rbx + 8]
0x000056c2      4c89f1         mov rcx, r14
0x000056c5      83c801         or eax, 1
0x000056c8      89442424       mov dword [rsp + 0x24], eax
0x000056cc      ff7530         push qword [rbp + 0x30]
0x000056cf      4189c1         mov r9d, eax
0x000056d2      ff7528         push qword [rbp + 0x28]
0x000056d5      4157           push r15
0x000056d7      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x000056da      488b542428     mov rdx, qword [rsp + 0x28]
0x000056df      4c89e7         mov rdi, r12
0x000056e2      4c895c2430     mov qword [rsp + 0x30], r11
0x000056e7      e8d4ecffff     call sym.quotearg_buffer_restyled
0x000056ec      4883c420       add rsp, 0x20
0x000056f0      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x000056f5      4939c3         cmp r11, rax
0x000056f8      7767           ja 0x5761
0x000056fa      488d7001       lea rsi, [rax + 1]
0x000056fe      488d05fb7c20.  lea rax, obj.slot0                      ; 0x20d400
0x00005705      4939c4         cmp r12, rax
0x00005708      488933         mov qword [rbx], rsi
0x0000570b      7412           je 0x571f
0x0000570d      4c89e7         mov rdi, r12
0x00005710      4889742410     mov qword [rsp + 0x10], rsi
0x00005715      e8d6beffff     call sym.imp.free
0x0000571a      488b742410     mov rsi, qword [rsp + 0x10]
0x0000571f      4889f7         mov rdi, rsi
0x00005722      4889742410     mov qword [rsp + 0x10], rsi
0x00005727      e8b40e0000     call sym.xmalloc
0x0000572c      4883ec08       sub rsp, 8
0x00005730      48894308       mov qword [rbx + 8], rax
0x00005734      448b4500       mov r8d, dword [rbp]
0x00005738      ff7530         push qword [rbp + 0x30]
0x0000573b      ff7528         push qword [rbp + 0x28]
0x0000573e      4c89f1         mov rcx, r14
0x00005741      4157           push r15
0x00005743      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00005748      4889c7         mov rdi, rax
0x0000574b      488b542428     mov rdx, qword [rsp + 0x28]
0x00005750      488b742430     mov rsi, qword [rsp + 0x30]
0x00005755      4989c4         mov r12, rax
0x00005758      e863ecffff     call sym.quotearg_buffer_restyled
0x0000575d      4883c420       add rsp, 0x20
0x00005761      8b442418       mov eax, dword [rsp + 0x18]
0x00005765      41894500       mov dword [r13], eax
0x00005769      4883c428       add rsp, 0x28
0x0000576d      4c89e0         mov rax, r12
0x00005770      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00005771      5d             pop rbp
0x00005772      415c           pop r12
0x00005774      415d           pop r13
0x00005776      415e           pop r14
0x00005778      415f           pop r15
0x0000577a      c3             ret
0x0000577b      0f1f440000     nop dword [rax + rax]
0x00005780      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00005782      e8b90e0000     call sym.xrealloc
0x00005787      660f6f05e158.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x0000578f      4889c3         mov rbx, rax
0x00005792      488905c75820.  mov qword [obj.slotvec], rax            ; [0x20b060:8]=0x20b070 obj.slotvec0 ; "p\xb0 "
0x00005799      0f1100         movups xmmword [rax], xmm0
0x0000579c      e9dcfeffff     jmp 0x567d
0x000057a1      e85abeffff     call sym.imp.abort
0x000057a6      e885100000     call sym.xalloc_die
0x000057ab      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x000057b0      4154           push r12
0x000057b2      55             push rbp
0x000057b3      53             push rbx
0x000057b4      4889fb         mov rbx, rdi
0x000057b7      e854beffff     call sym.imp.__errno_location
0x000057bc      448b20         mov r12d, dword [rax]
0x000057bf      4889c5         mov rbp, rax
0x000057c2      488d05377d20.  lea rax, obj.default_quoting_options    ; 0x20d500
0x000057c9      4885db         test rbx, rbx
0x000057cc      be38000000     mov esi, 0x38                           ; '8'
0x000057d1      480f44d8       cmove rbx, rax
0x000057d5      4889df         mov rdi, rbx
0x000057d8      e803100000     call sym.xmemdup
0x000057dd      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x000057e1      5b             pop rbx
0x000057e2      5d             pop rbp
0x000057e3      415c           pop r12
0x000057e5      c3             ret
0x000057e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x000057f0      488d05097d20.  lea rax, obj.default_quoting_options    ; 0x20d500
0x000057f7      4885ff         test rdi, rdi
0x000057fa      480f44f8       cmove rdi, rax
0x000057fe      8b07           mov eax, dword [rdi]
0x00005800      c3             ret
0x00005801      0f1f440000     nop dword [rax + rax]
0x00005806      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00005810      488d05e97c20.  lea rax, obj.default_quoting_options    ; 0x20d500
0x00005817      4885ff         test rdi, rdi
0x0000581a      480f44f8       cmove rdi, rax
0x0000581e      8937           mov dword [rdi], esi
0x00005820      c3             ret
0x00005821      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00005826      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00005830      488d05c97c20.  lea rax, obj.default_quoting_options    ; 0x20d500
0x00005837      4885ff         test rdi, rdi
0x0000583a      89f1           mov ecx, esi
0x0000583c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00005840      89f0           mov eax, esi
0x00005842      83e11f         and ecx, 0x1f
0x00005845      c0e805         shr al, 5
0x00005848      0fb6c0         movzx eax, al
0x0000584b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00005850      8b37           mov esi, dword [rdi]
0x00005852      89f0           mov eax, esi
0x00005854      d3e8           shr eax, cl
0x00005856      31c2           xor edx, eax
0x00005858      83e001         and eax, 1
0x0000585b      83e201         and edx, 1
0x0000585e      d3e2           shl edx, cl
0x00005860      31f2           xor edx, esi
0x00005862      8917           mov dword [rdi], edx
0x00005864      c3             ret
0x00005865      90             nop
0x00005866      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00005870      488d05897c20.  lea rax, obj.default_quoting_options    ; 0x20d500
0x00005877      4885ff         test rdi, rdi
0x0000587a      480f44f8       cmove rdi, rax
0x0000587e      8b4704         mov eax, dword [rdi + 4]
0x00005881      897704         mov dword [rdi + 4], esi
0x00005884      c3             ret
0x00005885      90             nop
0x00005886      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00005890      488d05697c20.  lea rax, obj.default_quoting_options    ; 0x20d500
0x00005897      4885ff         test rdi, rdi
0x0000589a      480f44f8       cmove rdi, rax
0x0000589e      4885f6         test rsi, rsi
0x000058a1      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x000058a7      740e           je 0x58b7
0x000058a9      4885d2         test rdx, rdx
0x000058ac      7409           je 0x58b7
0x000058ae      48897728       mov qword [rdi + 0x28], rsi
0x000058b2      48895730       mov qword [rdi + 0x30], rdx
0x000058b6      c3             ret
0x000058b7      4883ec08       sub rsp, 8
0x000058bb      e840bdffff     call sym.imp.abort
;-- quotearg_buffer:
0x000058c0      4157           push r15
0x000058c2      4156           push r14
0x000058c4      488d05357c20.  lea rax, obj.default_quoting_options    ; 0x20d500
0x000058cb      4155           push r13
0x000058cd      4154           push r12
0x000058cf      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x000058d2      55             push rbp
0x000058d3      53             push rbx
0x000058d4      4c89c3         mov rbx, r8
0x000058d7      4989f6         mov r14, rsi
0x000058da      4989d7         mov r15, rdx
0x000058dd      4883ec18       sub rsp, 0x18
0x000058e1      4d85c0         test r8, r8
0x000058e4      480f44d8       cmove rbx, rax
0x000058e8      48894c2408     mov qword [rsp + 8], rcx
0x000058ed      e81ebdffff     call sym.imp.__errno_location
0x000058f2      448b20         mov r12d, dword [rax]
0x000058f5      4889c5         mov rbp, rax
0x000058f8      488d4308       lea rax, [rbx + 8]
0x000058fc      4883ec08       sub rsp, 8
0x00005900      448b4b04       mov r9d, dword [rbx + 4]
0x00005904      ff7330         push qword [rbx + 0x30]
0x00005907      448b03         mov r8d, dword [rbx]
0x0000590a      ff7328         push qword [rbx + 0x28]
0x0000590d      4c89fa         mov rdx, r15
0x00005910      50             push rax
0x00005911      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00005916      4c89f6         mov rsi, r14
0x00005919      4c89ef         mov rdi, r13
0x0000591c      e89feaffff     call sym.quotearg_buffer_restyled
0x00005921      44896500       mov dword [rbp], r12d
0x00005925      4883c438       add rsp, 0x38
0x00005929      5b             pop rbx
0x0000592a      5d             pop rbp
0x0000592b      415c           pop r12
0x0000592d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000592f      415e           pop r14
0x00005931      415f           pop r15
0x00005933      c3             ret
0x00005934      6690           nop
0x00005936      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00005940      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00005942      4156           push r14
0x00005944      488d05b57b20.  lea rax, obj.default_quoting_options    ; 0x20d500
0x0000594b      4155           push r13
0x0000594d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x0000594f      4989d4         mov r12, rdx
0x00005952      55             push rbp
0x00005953      53             push rbx
0x00005954      4889cb         mov rbx, rcx
0x00005957      4989fe         mov r14, rdi
0x0000595a      4989f7         mov r15, rsi
0x0000595d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00005961      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00005964      480f44d8       cmove rbx, rax
0x00005968      31ed           xor ebp, ebp
0x0000596a      e8a1bcffff     call sym.imp.__errno_location
0x0000596f      4d85e4         test r12, r12
0x00005972      4989c5         mov r13, rax
0x00005975      8b00           mov eax, dword [rax]
0x00005977      400f94c5       sete bpl
0x0000597b      0b6b04         or ebp, dword [rbx + 4]
0x0000597e      4c8d5308       lea r10, [rbx + 8]
0x00005982      4883ec08       sub rsp, 8
0x00005986      448b03         mov r8d, dword [rbx]
0x00005989      4c89f9         mov rcx, r15
0x0000598c      89442414       mov dword [rsp + 0x14], eax
0x00005990      ff7330         push qword [rbx + 0x30]
0x00005993      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00005996      ff7328         push qword [rbx + 0x28]
0x00005999      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x0000599b      31f6           xor esi, esi
0x0000599d      4189e9         mov r9d, ebp
0x000059a0      31ff           xor edi, edi
0x000059a2      4c89542440     mov qword [rsp + 0x40], r10
0x000059a7      e814eaffff     call sym.quotearg_buffer_restyled
0x000059ac      488d7001       lea rsi, [rax + 1]
0x000059b0      4889442448     mov qword [rsp + 0x48], rax
0x000059b5      4883c420       add rsp, 0x20
0x000059b9      4889f7         mov rdi, rsi
0x000059bc      4889742418     mov qword [rsp + 0x18], rsi
0x000059c1      e81a0c0000     call sym.xmalloc
0x000059c6      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x000059cb      4883ec08       sub rsp, 8
0x000059cf      ff7330         push qword [rbx + 0x30]
0x000059d2      ff7328         push qword [rbx + 0x28]
0x000059d5      4c8b542438     mov r10, qword [rsp + 0x38]
0x000059da      4189e9         mov r9d, ebp
0x000059dd      448b03         mov r8d, dword [rbx]
0x000059e0      4c89f9         mov rcx, r15
0x000059e3      4c89f2         mov rdx, r14
0x000059e6      4889c7         mov rdi, rax
0x000059e9      4152           push r10
0x000059eb      488b742438     mov rsi, qword [rsp + 0x38]
0x000059f0      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x000059f5      8b44242c       mov eax, dword [rsp + 0x2c]
0x000059f9      4883c420       add rsp, 0x20
0x000059fd      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00005a00      41894500       mov dword [r13], eax
0x00005a04      7409           je 0x5a0f
0x00005a06      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x00005a0b      4d891c24       mov qword [r12], r11
0x00005a0f      488b442410     mov rax, qword [rsp + 0x10]
0x00005a14      4883c438       add rsp, 0x38
0x00005a18      5b             pop rbx
0x00005a19      5d             pop rbp
0x00005a1a      415c           pop r12
0x00005a1c      415d           pop r13
0x00005a1e      415e           pop r14
0x00005a20      415f           pop r15
0x00005a22      c3             ret
0x00005a23      0f1f00         nop dword [rax]
0x00005a26      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00005a30      4889d1         mov rcx, rdx
0x00005a33      31d2           xor edx, edx
0x00005a35      e906ffffff     jmp sym.quotearg_alloc_mem
0x00005a3a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00005a40      8b0512562000   mov eax, dword [obj.nslots]             ; [0x20b058:4]=1
0x00005a46      4154           push r12
0x00005a48      4c8b25115620.  mov r12, qword [obj.slotvec]            ; [0x20b060:8]=0x20b070 obj.slotvec0 ; "p\xb0 "
0x00005a4f      55             push rbp
0x00005a50      53             push rbx
0x00005a51      83f801         cmp eax, 1
0x00005a54      7e2b           jle 0x5a81                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00005a56      83e802         sub eax, 2
0x00005a59      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00005a5e      48c1e004       shl rax, 4
0x00005a62      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00005a67      660f1f840000.  nop word [rax + rax]
0x00005a70      488b3b         mov rdi, qword [rbx]
0x00005a73      4883c310       add rbx, 0x10
0x00005a77      e874bbffff     call sym.imp.free
0x00005a7c      4839eb         cmp rbx, rbp
0x00005a7f      75ef           jne 0x5a70
0x00005a81      498b7c2408     mov rdi, qword [r12 + 8]
0x00005a86      488d1d737920.  lea rbx, obj.slot0                      ; 0x20d400
0x00005a8d      4839df         cmp rdi, rbx
0x00005a90      7417           je 0x5aa9
0x00005a92      e859bbffff     call sym.imp.free
0x00005a97      48c705ce5520.  mov qword [obj.slotvec0], 0x100         ; [0x20b070:8]=256
0x00005aa2      48891dcf5520.  mov qword [0x0020b078], rbx             ; [0x20b078:8]=0x20d400 obj.slot0
0x00005aa9      488d1dc05520.  lea rbx, obj.slotvec0                   ; 0x20b070
0x00005ab0      4939dc         cmp r12, rbx
0x00005ab3      740f           je 0x5ac4
0x00005ab5      4c89e7         mov rdi, r12
0x00005ab8      e833bbffff     call sym.imp.free
0x00005abd      48891d9c5520.  mov qword [obj.slotvec], rbx            ; [0x20b060:8]=0x20b070 obj.slotvec0 ; "p\xb0 "
0x00005ac4      5b             pop rbx
0x00005ac5      c70589552000.  mov dword [obj.nslots], 1               ; [0x20b058:4]=1
0x00005acf      5d             pop rbp
0x00005ad0      415c           pop r12
0x00005ad2      c3             ret
0x00005ad3      0f1f00         nop dword [rax]
0x00005ad6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00005ae0      488d0d197a20.  lea rcx, obj.default_quoting_options    ; 0x20d500
0x00005ae7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005aee      e90dfbffff     jmp sym.quotearg_n_options
0x00005af3      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00005af6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00005b00      488d0df97920.  lea rcx, obj.default_quoting_options    ; 0x20d500
0x00005b07      e9f4faffff     jmp sym.quotearg_n_options
0x00005b0c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00005b10      488d0de97920.  lea rcx, obj.default_quoting_options    ; 0x20d500
0x00005b17      4889fe         mov rsi, rdi
0x00005b1a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005b21      31ff           xor edi, edi
0x00005b23      e9d8faffff     jmp sym.quotearg_n_options
0x00005b28      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00005b30      488d0dc97920.  lea rcx, obj.default_quoting_options    ; 0x20d500
0x00005b37      4889f2         mov rdx, rsi
0x00005b3a      4889fe         mov rsi, rdi
0x00005b3d      31ff           xor edi, edi
0x00005b3f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00005b44      6690           nop
0x00005b46      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00005b50      4883ec48       sub rsp, 0x48
0x00005b54      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00005b57      64488b142528.  mov rdx, qword fs:[0x28]
0x00005b60      4889542438     mov qword [rsp + 0x38], rdx
0x00005b65      31d2           xor edx, edx
0x00005b67      83fe0a         cmp esi, 0xa
0x00005b6a      7468           je 0x5bd4
0x00005b6c      893424         mov dword [rsp], esi
0x00005b6f      4889e1         mov rcx, rsp
0x00005b72      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005b79      4889c6         mov rsi, rax
0x00005b7c      48c744240400.  mov qword [rsp + 4], 0
0x00005b85      48c744240c00.  mov qword [rsp + 0xc], 0
0x00005b8e      48c744241400.  mov qword [rsp + 0x14], 0
0x00005b97      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00005ba0      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00005ba9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00005bb2      c74424340000.  mov dword [rsp + 0x34], 0
0x00005bba      e841faffff     call sym.quotearg_n_options
0x00005bbf      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00005bc4      6448330c2528.  xor rcx, qword fs:[0x28]
0x00005bcd      750a           jne 0x5bd9                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x00005bcf      4883c448       add rsp, 0x48
0x00005bd3      c3             ret
0x00005bd4      e827baffff     call sym.imp.abort
0x00005bd9      e8e2baffff     call sym.imp.__stack_chk_fail
0x00005bde      6690           nop
;-- quotearg_n_style_mem:
0x00005be0      4883ec48       sub rsp, 0x48
0x00005be4      4889d0         mov rax, rdx
0x00005be7      4889ca         mov rdx, rcx
0x00005bea      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00005bf3      48894c2438     mov qword [rsp + 0x38], rcx
0x00005bf8      31c9           xor ecx, ecx
0x00005bfa      83fe0a         cmp esi, 0xa
0x00005bfd      7461           je 0x5c60
0x00005bff      893424         mov dword [rsp], esi
0x00005c02      4889e1         mov rcx, rsp
0x00005c05      4889c6         mov rsi, rax
0x00005c08      48c744240400.  mov qword [rsp + 4], 0
0x00005c11      48c744240c00.  mov qword [rsp + 0xc], 0
0x00005c1a      48c744241400.  mov qword [rsp + 0x14], 0
0x00005c23      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00005c2c      48c744242400.  mov qword [rsp + 0x24], 0
0x00005c35      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00005c3e      c74424340000.  mov dword [rsp + 0x34], 0
0x00005c46      e8b5f9ffff     call sym.quotearg_n_options
0x00005c4b      488b542438     mov rdx, qword [rsp + 0x38]
0x00005c50      644833142528.  xor rdx, qword fs:[0x28]
0x00005c59      750a           jne 0x5c65
0x00005c5b      4883c448       add rsp, 0x48
0x00005c5f      c3             ret
0x00005c60      e89bb9ffff     call sym.imp.abort
0x00005c65      e856baffff     call sym.imp.__stack_chk_fail
0x00005c6a      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00005c70      4889f2         mov rdx, rsi
0x00005c73      89fe           mov esi, edi
0x00005c75      31ff           xor edi, edi
0x00005c77      e9d4feffff     jmp sym.quotearg_n_style
0x00005c7c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00005c80      4889d1         mov rcx, rdx
0x00005c83      4889f2         mov rdx, rsi
0x00005c86      89fe           mov esi, edi
0x00005c88      31ff           xor edi, edi
0x00005c8a      e951ffffff     jmp sym.quotearg_n_style_mem
0x00005c8f      90             nop
;-- quotearg_char_mem:
0x00005c90      4883ec48       sub rsp, 0x48
0x00005c94      89d1           mov ecx, edx
0x00005c96      64488b042528.  mov rax, qword fs:[0x28]
0x00005c9f      4889442438     mov qword [rsp + 0x38], rax
0x00005ca4      31c0           xor eax, eax
0x00005ca6      488b05837820.  mov rax, qword [0x0020d530]             ; [0x20d530:8]=0
0x00005cad      4989e0         mov r8, rsp
0x00005cb0      83e11f         and ecx, 0x1f
0x00005cb3      660f6f054578.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00005cbb      4889442430     mov qword [rsp + 0x30], rax
0x00005cc0      89d0           mov eax, edx
0x00005cc2      0f290424       movaps xmmword [rsp], xmm0
0x00005cc6      c0e805         shr al, 5
0x00005cc9      0fb6c0         movzx eax, al
0x00005ccc      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00005cd1      660f6f053778.  movdqa xmm0, xmmword [0x0020d510]
0x00005cd9      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00005cde      660f6f053a78.  movdqa xmm0, xmmword [0x0020d520]
0x00005ce6      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00005ceb      418b11         mov edx, dword [r9]
0x00005cee      89d0           mov eax, edx
0x00005cf0      d3e8           shr eax, cl
0x00005cf2      f7d0           not eax
0x00005cf4      83e001         and eax, 1
0x00005cf7      d3e0           shl eax, cl
0x00005cf9      4c89c1         mov rcx, r8
0x00005cfc      31d0           xor eax, edx
0x00005cfe      4889f2         mov rdx, rsi
0x00005d01      4889fe         mov rsi, rdi
0x00005d04      418901         mov dword [r9], eax
0x00005d07      31ff           xor edi, edi
0x00005d09      e8f2f8ffff     call sym.quotearg_n_options
0x00005d0e      488b742438     mov rsi, qword [rsp + 0x38]
0x00005d13      644833342528.  xor rsi, qword fs:[0x28]
0x00005d1c      7505           jne 0x5d23
0x00005d1e      4883c448       add rsp, 0x48
0x00005d22      c3             ret
0x00005d23      e898b9ffff     call sym.imp.__stack_chk_fail
0x00005d28      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00005d30      400fbed6       movsx edx, sil
0x00005d34      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00005d3b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00005d40      ba3a000000     mov edx, 0x3a                           ; ':'
0x00005d45      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00005d4c      e93fffffff     jmp sym.quotearg_char_mem
0x00005d51      0f1f440000     nop dword [rax + rax]
0x00005d56      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00005d60      ba3a000000     mov edx, 0x3a                           ; ':'
0x00005d65      e926ffffff     jmp sym.quotearg_char_mem
0x00005d6a      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00005d70      4883ec48       sub rsp, 0x48
0x00005d74      4889d0         mov rax, rdx
0x00005d77      64488b142528.  mov rdx, qword fs:[0x28]
0x00005d80      4889542438     mov qword [rsp + 0x38], rdx
0x00005d85      31d2           xor edx, edx
0x00005d87      83fe0a         cmp esi, 0xa
0x00005d8a      7468           je 0x5df4
0x00005d8c      893424         mov dword [rsp], esi
0x00005d8f      4889e1         mov rcx, rsp
0x00005d92      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005d99      4889c6         mov rsi, rax
0x00005d9c      48c744240400.  mov qword [rsp + 4], 0
0x00005da5      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x00005dae      48c744241400.  mov qword [rsp + 0x14], 0
0x00005db7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00005dc0      48c744242400.  mov qword [rsp + 0x24], 0
0x00005dc9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00005dd2      c74424340000.  mov dword [rsp + 0x34], 0
0x00005dda      e821f8ffff     call sym.quotearg_n_options
0x00005ddf      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00005de4      6448330c2528.  xor rcx, qword fs:[0x28]
0x00005ded      750a           jne 0x5df9
0x00005def      4883c448       add rsp, 0x48
0x00005df3      c3             ret
0x00005df4      e807b8ffff     call sym.imp.abort
0x00005df9      e8c2b8ffff     call sym.imp.__stack_chk_fail
0x00005dfe      6690           nop
;-- quotearg_n_custom_mem:
0x00005e00      4883ec48       sub rsp, 0x48
0x00005e04      4989c9         mov r9, rcx
0x00005e07      488b0d227720.  mov rcx, qword [0x0020d530]             ; [0x20d530:8]=0
0x00005e0e      660f6f05ea76.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00005e16      64488b042528.  mov rax, qword fs:[0x28]
0x00005e1f      4889442438     mov qword [rsp + 0x38], rax
0x00005e24      31c0           xor eax, eax
0x00005e26      0f290424       movaps xmmword [rsp], xmm0
0x00005e2a      4885f6         test rsi, rsi
0x00005e2d      48894c2430     mov qword [rsp + 0x30], rcx
0x00005e32      c704240a0000.  mov dword [rsp], 0xa
0x00005e39      660f6f05cf76.  movdqa xmm0, xmmword [0x0020d510]
0x00005e41      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00005e46      660f6f05d276.  movdqa xmm0, xmmword [0x0020d520]
0x00005e4e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00005e53      7432           je 0x5e87
0x00005e55      4885d2         test rdx, rdx
0x00005e58      742d           je 0x5e87
0x00005e5a      4889742428     mov qword [rsp + 0x28], rsi
0x00005e5f      4889542430     mov qword [rsp + 0x30], rdx
0x00005e64      4889e1         mov rcx, rsp
0x00005e67      4c89c2         mov rdx, r8
0x00005e6a      4c89ce         mov rsi, r9
0x00005e6d      e88ef7ffff     call sym.quotearg_n_options
0x00005e72      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00005e77      6448333c2528.  xor rdi, qword fs:[0x28]
0x00005e80      750a           jne 0x5e8c
0x00005e82      4883c448       add rsp, 0x48
0x00005e86      c3             ret
0x00005e87      e874b7ffff     call sym.imp.abort
0x00005e8c      e82fb8ffff     call sym.imp.__stack_chk_fail
0x00005e91      0f1f440000     nop dword [rax + rax]
0x00005e96      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00005ea0      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00005ea7      e954ffffff     jmp sym.quotearg_n_custom_mem
0x00005eac      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00005eb0      4889d1         mov rcx, rdx
0x00005eb3      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00005eba      4889f2         mov rdx, rsi
0x00005ebd      4889fe         mov rsi, rdi
0x00005ec0      31ff           xor edi, edi
0x00005ec2      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00005ec7      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00005ed0      4989c8         mov r8, rcx
0x00005ed3      4889d1         mov rcx, rdx
0x00005ed6      4889f2         mov rdx, rsi
0x00005ed9      4889fe         mov rsi, rdi
0x00005edc      31ff           xor edi, edi
0x00005ede      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00005ee3      0f1f00         nop dword [rax]
0x00005ee6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00005ef0      488d0d295120.  lea rcx, obj.quote_quoting_options      ; 0x20b020
0x00005ef7      e904f7ffff     jmp sym.quotearg_n_options
0x00005efc      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00005f00      488d0d195120.  lea rcx, obj.quote_quoting_options      ; 0x20b020
0x00005f07      4889f2         mov rdx, rsi
0x00005f0a      4889fe         mov rsi, rdi
0x00005f0d      31ff           xor edi, edi
0x00005f0f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00005f14      6690           nop
0x00005f16      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00005f20      488d0df95020.  lea rcx, obj.quote_quoting_options      ; 0x20b020
0x00005f27      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005f2e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00005f33      0f1f00         nop dword [rax]
0x00005f36      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00005f40      488d0dd95020.  lea rcx, obj.quote_quoting_options      ; 0x20b020
0x00005f47      4889fe         mov rsi, rdi
0x00005f4a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005f51      31ff           xor edi, edi
0x00005f53      e9a8f6ffff     jmp sym.quotearg_n_options
0x00005f58      0f1f84000000.  nop dword [rax + rax]
;-- safe_read:
0x00005f60      4155           push r13                                ; ../coreutils-8.31/lib/safe-read.c:57
0x00005f62      4154           push r12
0x00005f64      4189fd         mov r13d, edi
0x00005f67      55             push rbp
0x00005f68      53             push rbx
0x00005f69      4989f4         mov r12, rsi
0x00005f6c      4889d3         mov rbx, rdx
0x00005f6f      4883ec08       sub rsp, 8
0x00005f73      0f1f440000     nop dword [rax + rax]
0x00005f78      4889da         mov rdx, rbx                            ; unistd.h:44   return __read_alias (__fd, __buf, __nbytes);
0x00005f7b      4c89e6         mov rsi, r12
0x00005f7e      4489ef         mov edi, r13d
0x00005f81      e8eab7ffff     call sym.imp.read
0x00005f86      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/safe-read.c:62
0x00005f89      4889c5         mov rbp, rax                            ; unistd.h:44   return __read_alias (__fd, __buf, __nbytes);
0x00005f8c      7922           jns 0x5fb0                              ; ../coreutils-8.31/lib/safe-read.c:62
0x00005f8e      e87db6ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/safe-read.c:64
0x00005f93      8b00           mov eax, dword [rax]
0x00005f95      83f804         cmp eax, 4
0x00005f98      74de           je 0x5f78
0x00005f9a      4881fb0000f0.  cmp rbx, 0x7ff00000                     ; ../coreutils-8.31/lib/safe-read.c:66
0x00005fa1      760d           jbe 0x5fb0
0x00005fa3      83f816         cmp eax, 0x16
0x00005fa6      7508           jne 0x5fb0
0x00005fa8      bb0000f07f     mov ebx, 0x7ff00000                     ; ../coreutils-8.31/lib/safe-read.c:67
0x00005fad      ebc9           jmp 0x5f78
0x00005faf      90             nop
0x00005fb0      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/safe-read.c:71
0x00005fb4      4889e8         mov rax, rbp
0x00005fb7      5b             pop rbx
0x00005fb8      5d             pop rbp
0x00005fb9      415c           pop r12
0x00005fbb      415d           pop r13
0x00005fbd      c3             ret
0x00005fbe      6690           nop
;-- version_etc_arn:
0x00005fc0      4157           push r15
0x00005fc2      4156           push r14
0x00005fc4      4155           push r13
0x00005fc6      4154           push r12
0x00005fc8      4d89cc         mov r12, r9
0x00005fcb      55             push rbp
0x00005fcc      53             push rbx
0x00005fcd      4889fd         mov rbp, rdi
0x00005fd0      4c89c3         mov rbx, r8
0x00005fd3      4883ec28       sub rsp, 0x28
0x00005fd7      4885f6         test rsi, rsi
0x00005fda      0f8418010000   je 0x60f8
0x00005fe0      4989d0         mov r8, rdx
0x00005fe3      488d159e2800.  lea rdx, [0x00008888]                   ; "%s (%s) %s\n"
0x00005fea      4989c9         mov r9, rcx
0x00005fed      31c0           xor eax, eax
0x00005fef      4889f1         mov rcx, rsi
0x00005ff2      be01000000     mov esi, 1
0x00005ff7      e8a4b8ffff     call sym.imp.__fprintf_chk
0x00005ffc      488d35982800.  lea rsi, [0x0000889b]                   ; "(C)"
0x00006003      31ff           xor edi, edi
0x00006005      ba05000000     mov edx, 5
0x0000600a      e881b6ffff     call sym.imp.dcgettext
0x0000600f      488d15aa2b00.  lea rdx, obj.version_etc_copyright      ; 0x8bc0 ; "Copyright %s %d Free Software Foundation, Inc."
0x00006016      4889c1         mov rcx, rax
0x00006019      41b8e3070000   mov r8d, 0x7e3
0x0000601f      be01000000     mov esi, 1
0x00006024      4889ef         mov rdi, rbp
0x00006027      31c0           xor eax, eax
0x00006029      e872b8ffff     call sym.imp.__fprintf_chk
0x0000602e      488d35f32800.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x8928 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00006035      31ff           xor edi, edi
0x00006037      ba05000000     mov edx, 5
0x0000603c      e84fb6ffff     call sym.imp.dcgettext
0x00006041      4889ee         mov rsi, rbp
0x00006044      4889c7         mov rdi, rax
0x00006047      e844b7ffff     call sym.imp.fputs_unlocked
0x0000604c      4983fc09       cmp r12, 9
0x00006050      0f873a030000   ja 0x6390
0x00006056      488d15272b00.  lea rdx, [0x00008b84]
0x0000605d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00006061      4801d0         add rax, rdx
0x00006064      ffe0           jmp rax
0x00006066      662e0f1f8400.  nop word cs:[rax + rax]
0x00006070      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00006074      488b4310       mov rax, qword [rbx + 0x10]
0x00006078      488d35192a00.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x8a98 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x0000607f      4c8b4308       mov r8, qword [rbx + 8]
0x00006083      ba05000000     mov edx, 5
0x00006088      31ff           xor edi, edi
0x0000608a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0000608e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006092      4c894c2410     mov qword [rsp + 0x10], r9
0x00006097      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000609b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000609f      48890424       mov qword [rsp], rax
0x000060a3      4c89442408     mov qword [rsp + 8], r8
0x000060a8      488b1b         mov rbx, qword [rbx]
0x000060ab      e8e0b5ffff     call sym.imp.dcgettext
0x000060b0      4883ec08       sub rsp, 8
0x000060b4      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x000060b9      4889c2         mov rdx, rax
0x000060bc      4889d9         mov rcx, rbx
0x000060bf      be01000000     mov esi, 1
0x000060c4      4889ef         mov rdi, rbp
0x000060c7      31c0           xor eax, eax
0x000060c9      4151           push r9
0x000060cb      4155           push r13
0x000060cd      4154           push r12
0x000060cf      4157           push r15
0x000060d1      4156           push r14
0x000060d3      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000060d8      4c8b442438     mov r8, qword [rsp + 0x38]
0x000060dd      e8beb7ffff     call sym.imp.__fprintf_chk
0x000060e2      4883c430       add rsp, 0x30
0x000060e6      4883c428       add rsp, 0x28
0x000060ea      5b             pop rbx
0x000060eb      5d             pop rbp
0x000060ec      415c           pop r12
0x000060ee      415d           pop r13
0x000060f0      415e           pop r14
0x000060f2      415f           pop r15
0x000060f4      c3             ret
0x000060f5      0f1f00         nop dword [rax]
0x000060f8      4989c8         mov r8, rcx
0x000060fb      4889d1         mov rcx, rdx
0x000060fe      488d158f2700.  lea rdx, str.s__s                       ; 0x8894 ; "%s %s\n"
0x00006105      be01000000     mov esi, 1
0x0000610a      31c0           xor eax, eax
0x0000610c      e88fb7ffff     call sym.imp.__fprintf_chk
0x00006111      e9e6feffff     jmp 0x5ffc
0x00006116      662e0f1f8400.  nop word cs:[rax + rax]
0x00006120      4c8b5340       mov r10, qword [rbx + 0x40]
0x00006124      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00006128      488d35992900.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x8ac8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x0000612f      488b4310       mov rax, qword [rbx + 0x10]
0x00006133      4c8b4308       mov r8, qword [rbx + 8]
0x00006137      ba05000000     mov edx, 5
0x0000613c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00006140      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006144      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00006148      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000614c      488b1b         mov rbx, qword [rbx]
0x0000614f      4c89542418     mov qword [rsp + 0x18], r10
0x00006154      4c894c2410     mov qword [rsp + 0x10], r9
0x00006159      48890424       mov qword [rsp], rax
0x0000615d      4c89442408     mov qword [rsp + 8], r8
0x00006162      31ff           xor edi, edi
0x00006164      e827b5ffff     call sym.imp.dcgettext
0x00006169      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000616e      4152           push r10
0x00006170      e93fffffff     jmp 0x60b4
0x00006175      0f1f00         nop dword [rax]
0x00006178      488b1b         mov rbx, qword [rbx]
0x0000617b      488d351d2700.  lea rsi, str.Written_by__s.             ; 0x889f ; "Written by %s.\n"
0x00006182      ba05000000     mov edx, 5
0x00006187      31ff           xor edi, edi
0x00006189      e802b5ffff     call sym.imp.dcgettext
0x0000618e      4883c428       add rsp, 0x28
0x00006192      4889d9         mov rcx, rbx
0x00006195      4889ef         mov rdi, rbp
0x00006198      5b             pop rbx
0x00006199      5d             pop rbp
0x0000619a      415c           pop r12
0x0000619c      415d           pop r13
0x0000619e      415e           pop r14
0x000061a0      415f           pop r15
0x000061a2      4889c2         mov rdx, rax
0x000061a5      be01000000     mov esi, 1
0x000061aa      31c0           xor eax, eax
0x000061ac      e9efb6ffff     jmp sym.imp.__fprintf_chk
0x000061b1      0f1f80000000.  nop dword [rax]
0x000061b8      4c8b6308       mov r12, qword [rbx + 8]
0x000061bc      488d35ec2600.  lea rsi, str.Written_by__s_and__s.      ; 0x88af ; "Written by %s and %s.\n"
0x000061c3      488b1b         mov rbx, qword [rbx]
0x000061c6      ba05000000     mov edx, 5
0x000061cb      31ff           xor edi, edi
0x000061cd      e8beb4ffff     call sym.imp.dcgettext
0x000061d2      4883c428       add rsp, 0x28
0x000061d6      4d89e0         mov r8, r12
0x000061d9      4889d9         mov rcx, rbx
0x000061dc      4889ef         mov rdi, rbp
0x000061df      4889c2         mov rdx, rax
0x000061e2      be01000000     mov esi, 1
0x000061e7      5b             pop rbx
0x000061e8      5d             pop rbp
0x000061e9      415c           pop r12
0x000061eb      415d           pop r13
0x000061ed      415e           pop r14
0x000061ef      415f           pop r15
0x000061f1      31c0           xor eax, eax
0x000061f3      e9a8b6ffff     jmp sym.imp.__fprintf_chk
0x000061f8      0f1f84000000.  nop dword [rax + rax]
0x00006200      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00006204      4c8b6308       mov r12, qword [rbx + 8]
0x00006208      488d35b72600.  lea rsi, str.Written_by__s___s__and__s. ; 0x88c6 ; "Written by %s, %s, and %s.\n"
0x0000620f      488b1b         mov rbx, qword [rbx]
0x00006212      ba05000000     mov edx, 5
0x00006217      31ff           xor edi, edi
0x00006219      e872b4ffff     call sym.imp.dcgettext
0x0000621e      4883c428       add rsp, 0x28
0x00006222      4d89e9         mov r9, r13
0x00006225      4d89e0         mov r8, r12
0x00006228      4889d9         mov rcx, rbx
0x0000622b      4889ef         mov rdi, rbp
0x0000622e      4889c2         mov rdx, rax
0x00006231      5b             pop rbx
0x00006232      5d             pop rbp
0x00006233      415c           pop r12
0x00006235      415d           pop r13
0x00006237      415e           pop r14
0x00006239      415f           pop r15
0x0000623b      be01000000     mov esi, 1
0x00006240      31c0           xor eax, eax
0x00006242      e959b6ffff     jmp sym.imp.__fprintf_chk
0x00006247      660f1f840000.  nop word [rax + rax]
0x00006250      488d35a12700.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x89f8 ; "Written by %s, %s, %s,\nand %s.\n"
0x00006257      ba05000000     mov edx, 5
0x0000625c      31ff           xor edi, edi
0x0000625e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00006262      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00006266      4c8b6308       mov r12, qword [rbx + 8]
0x0000626a      488b1b         mov rbx, qword [rbx]
0x0000626d      e81eb4ffff     call sym.imp.dcgettext
0x00006272      4883ec08       sub rsp, 8
0x00006276      4156           push r14
0x00006278      4889c2         mov rdx, rax
0x0000627b      4d89e9         mov r9, r13
0x0000627e      4d89e0         mov r8, r12
0x00006281      4889d9         mov rcx, rbx
0x00006284      4889ef         mov rdi, rbp
0x00006287      be01000000     mov esi, 1
0x0000628c      31c0           xor eax, eax
0x0000628e      e80db6ffff     call sym.imp.__fprintf_chk
0x00006293      58             pop rax
0x00006294      5a             pop rdx
0x00006295      4883c428       add rsp, 0x28
0x00006299      5b             pop rbx
0x0000629a      5d             pop rbp
0x0000629b      415c           pop r12
0x0000629d      415d           pop r13
0x0000629f      415e           pop r14
0x000062a1      415f           pop r15
0x000062a3      c3             ret
0x000062a4      0f1f4000       nop dword [rax]
0x000062a8      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000062ac      488d35652700.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x8a18 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x000062b3      ba05000000     mov edx, 5
0x000062b8      31ff           xor edi, edi
0x000062ba      4c8b7318       mov r14, qword [rbx + 0x18]
0x000062be      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000062c2      4c8b6308       mov r12, qword [rbx + 8]
0x000062c6      488b1b         mov rbx, qword [rbx]
0x000062c9      e8c2b3ffff     call sym.imp.dcgettext
0x000062ce      4157           push r15
0x000062d0      eba4           jmp 0x6276
0x000062d2      660f1f440000   nop word [rax + rax]
0x000062d8      4c8b4308       mov r8, qword [rbx + 8]
0x000062dc      4c8b6328       mov r12, qword [rbx + 0x28]
0x000062e0      488d35592700.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x8a40 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x000062e7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000062eb      4c8b7318       mov r14, qword [rbx + 0x18]
0x000062ef      ba05000000     mov edx, 5
0x000062f4      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000062f8      31ff           xor edi, edi
0x000062fa      488b1b         mov rbx, qword [rbx]
0x000062fd      4c890424       mov qword [rsp], r8
0x00006301      e88ab3ffff     call sym.imp.dcgettext
0x00006306      4883ec08       sub rsp, 8
0x0000630a      4d89e9         mov r9, r13
0x0000630d      4154           push r12
0x0000630f      4157           push r15
0x00006311      4156           push r14
0x00006313      4c8b442420     mov r8, qword [rsp + 0x20]
0x00006318      4889d9         mov rcx, rbx
0x0000631b      4889c2         mov rdx, rax
0x0000631e      4889ef         mov rdi, rbp
0x00006321      be01000000     mov esi, 1
0x00006326      31c0           xor eax, eax
0x00006328      e873b5ffff     call sym.imp.__fprintf_chk
0x0000632d      4883c420       add rsp, 0x20
0x00006331      4883c428       add rsp, 0x28
0x00006335      5b             pop rbx
0x00006336      5d             pop rbp
0x00006337      415c           pop r12
0x00006339      415d           pop r13
0x0000633b      415e           pop r14
0x0000633d      415f           pop r15
0x0000633f      c3             ret
0x00006340      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00006344      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00006348      488d35192700.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x8a68 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x0000634f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006353      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00006357      ba05000000     mov edx, 5
0x0000635c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00006360      4c8b4308       mov r8, qword [rbx + 8]
0x00006364      31ff           xor edi, edi
0x00006366      4c894c2408     mov qword [rsp + 8], r9
0x0000636b      488b1b         mov rbx, qword [rbx]
0x0000636e      4c890424       mov qword [rsp], r8
0x00006372      e819b3ffff     call sym.imp.dcgettext
0x00006377      4155           push r13
0x00006379      4154           push r12
0x0000637b      4157           push r15
0x0000637d      4156           push r14
0x0000637f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00006384      eb8d           jmp 0x6313
0x00006386      662e0f1f8400.  nop word cs:[rax + rax]
0x00006390      4c8b5340       mov r10, qword [rbx + 0x40]
0x00006394      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00006398      ba05000000     mov edx, 5
0x0000639d      488b4310       mov rax, qword [rbx + 0x10]
0x000063a1      4c8b4308       mov r8, qword [rbx + 8]
0x000063a5      488d35542700.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x8b00 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x000063ac      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000063b0      4c8b6328       mov r12, qword [rbx + 0x28]
0x000063b4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000063b8      4c8b7318       mov r14, qword [rbx + 0x18]
0x000063bc      4c89542418     mov qword [rsp + 0x18], r10
0x000063c1      4c894c2410     mov qword [rsp + 0x10], r9
0x000063c6      48890424       mov qword [rsp], rax
0x000063ca      4c89442408     mov qword [rsp + 8], r8
0x000063cf      488b1b         mov rbx, qword [rbx]
0x000063d2      e98bfdffff     jmp 0x6162
0x000063d7      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x000063e0      4531c9         xor r9d, r9d
0x000063e3      49833800       cmp qword [r8], 0
0x000063e7      7412           je 0x63fb
0x000063e9      0f1f80000000.  nop dword [rax]
0x000063f0      4983c101       add r9, 1
0x000063f4      4b833cc800     cmp qword [r8 + r9*8], 0
0x000063f9      75f5           jne 0x63f0
0x000063fb      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00006400      4883ec68       sub rsp, 0x68
0x00006404      4d89c2         mov r10, r8
0x00006407      4531c9         xor r9d, r9d
0x0000640a      64488b042528.  mov rax, qword fs:[0x28]
0x00006413      4889442458     mov qword [rsp + 0x58], rax
0x00006418      31c0           xor eax, eax
0x0000641a      4989e0         mov r8, rsp
0x0000641d      0f1f00         nop dword [rax]
0x00006420      418b02         mov eax, dword [r10]
0x00006423      83f82f         cmp eax, 0x2f
0x00006426      7742           ja 0x646a
0x00006428      4189c3         mov r11d, eax
0x0000642b      4d035a10       add r11, qword [r10 + 0x10]
0x0000642f      83c008         add eax, 8
0x00006432      418902         mov dword [r10], eax
0x00006435      498b03         mov rax, qword [r11]
0x00006438      4885c0         test rax, rax
0x0000643b      4b8904c8       mov qword [r8 + r9*8], rax
0x0000643f      740a           je 0x644b
0x00006441      4983c101       add r9, 1
0x00006445      4983f90a       cmp r9, 0xa
0x00006449      75d5           jne 0x6420
0x0000644b      e870fbffff     call sym.version_etc_arn
0x00006450      488b442458     mov rax, qword [rsp + 0x58]
0x00006455      644833042528.  xor rax, qword fs:[0x28]
0x0000645e      7505           jne 0x6465
0x00006460      4883c468       add rsp, 0x68
0x00006464      c3             ret
0x00006465      e856b2ffff     call sym.imp.__stack_chk_fail
0x0000646a      4d8b5a08       mov r11, qword [r10 + 8]
0x0000646e      498d4308       lea rax, [r11 + 8]
0x00006472      49894208       mov qword [r10 + 8], rax
0x00006476      ebbd           jmp 0x6435
0x00006478      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00006480      55             push rbp
0x00006481      53             push rbx
0x00006482      41ba20000000   mov r10d, 0x20                          ; "@"
0x00006488      4531db         xor r11d, r11d
0x0000648b      4881ecb80000.  sub rsp, 0xb8
0x00006492      64488b042528.  mov rax, qword fs:[0x28]
0x0000649b      4889442478     mov qword [rsp + 0x78], rax
0x000064a0      31c0           xor eax, eax
0x000064a2      488d8424d000.  lea rax, [rsp + 0xd0]
0x000064aa      4c898424a000.  mov qword [rsp + 0xa0], r8
0x000064b2      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x000064ba      4c8d442420     lea r8, [rsp + 0x20]
0x000064bf      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x000064c7      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x000064cf      4889442410     mov qword [rsp + 0x10], rax
0x000064d4      488d84248000.  lea rax, [rsp + 0x80]
0x000064dc      4531c9         xor r9d, r9d
0x000064df      4889442418     mov qword [rsp + 0x18], rax
0x000064e4      4889c5         mov rbp, rax
0x000064e7      660f1f840000.  nop word [rax + rax]
0x000064f0      4183fa2f       cmp r10d, 0x2f
0x000064f4      7756           ja 0x654c
0x000064f6      4489d0         mov eax, r10d
0x000064f9      41bb01000000   mov r11d, 1
0x000064ff      4183c208       add r10d, 8
0x00006503      4801e8         add rax, rbp
0x00006506      488b00         mov rax, qword [rax]
0x00006509      4885c0         test rax, rax
0x0000650c      4b8904c8       mov qword [r8 + r9*8], rax
0x00006510      740a           je 0x651c
0x00006512      4983c101       add r9, 1
0x00006516      4983f90a       cmp r9, 0xa
0x0000651a      75d4           jne 0x64f0
0x0000651c      4584db         test r11b, r11b
0x0000651f      7524           jne 0x6545
0x00006521      e89afaffff     call sym.version_etc_arn
0x00006526      488b442478     mov rax, qword [rsp + 0x78]
0x0000652b      644833042528.  xor rax, qword fs:[0x28]
0x00006534      750a           jne 0x6540
0x00006536      4881c4b80000.  add rsp, 0xb8
0x0000653d      5b             pop rbx
0x0000653e      5d             pop rbp
0x0000653f      c3             ret
0x00006540      e87bb1ffff     call sym.imp.__stack_chk_fail
0x00006545      4489542408     mov dword [rsp + 8], r10d
0x0000654a      ebd5           jmp 0x6521
0x0000654c      4889d8         mov rax, rbx
0x0000654f      4883c308       add rbx, 8
0x00006553      ebb1           jmp 0x6506
0x00006555      90             nop
0x00006556      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00006560      53             push rbx
0x00006561      488d357a2300.  lea rsi, str.Report_bugs_to:__s         ; 0x88e2 ; "\nReport bugs to: %s\n"
0x00006568      ba05000000     mov edx, 5
0x0000656d      31ff           xor edi, edi
0x0000656f      e81cb1ffff     call sym.imp.dcgettext
0x00006574      488d157c2300.  lea rdx, str.bug_coreutils_gnu.org      ; 0x88f7 ; "bug-coreutils@gnu.org"
0x0000657b      4889c6         mov rsi, rax
0x0000657e      bf01000000     mov edi, 1
0x00006583      31c0           xor eax, eax
0x00006585      e8b6b2ffff     call sym.imp.__printf_chk
0x0000658a      488d357c2300.  lea rsi, str.s_home_page:___s           ; 0x890d ; "%s home page: <%s>\n"
0x00006591      ba05000000     mov edx, 5
0x00006596      31ff           xor edi, edi
0x00006598      e8f3b0ffff     call sym.imp.dcgettext
0x0000659d      488d0d741900.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x7f18 ; "https://www.gnu.org/software/coreutils/"
0x000065a4      488d156e0b00.  lea rdx, str.GNU_coreutils              ; 0x7119 ; "GNU coreutils"
0x000065ab      4889c6         mov rsi, rax
0x000065ae      bf01000000     mov edi, 1
0x000065b3      31c0           xor eax, eax
0x000065b5      e886b2ffff     call sym.imp.__printf_chk
0x000065ba      488b1dc74a20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x000065c1      488d35782500.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x8b40 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x000065c8      31ff           xor edi, edi
0x000065ca      ba05000000     mov edx, 5
0x000065cf      e8bcb0ffff     call sym.imp.dcgettext
0x000065d4      4889de         mov rsi, rbx
0x000065d7      4889c7         mov rdi, rax
0x000065da      5b             pop rbx
0x000065db      e9b0b1ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x000065e0      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x000065e1      4889fb         mov rbx, rdi
0x000065e4      e8e7b1ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x000065e9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x000065ec      7505           jne 0x65f3
0x000065ee      4885db         test rbx, rbx
0x000065f1      7502           jne 0x65f5
0x000065f3      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x000065f4      c3             ret
0x000065f5      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x000065fa      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00006600      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00006603      48f7e6         mul rsi
0x00006606      4889c7         mov rdi, rax
0x00006609      0f90c0         seto al
0x0000660c      4885ff         test rdi, rdi
0x0000660f      780a           js 0x661b
0x00006611      0fb6c0         movzx eax, al
0x00006614      4885c0         test rax, rax
0x00006617      7502           jne 0x661b
0x00006619      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x0000661b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x0000661f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00006624      6690           nop
0x00006626      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00006630      ebae           jmp sym.xmalloc
0x00006632      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00006636      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00006640      4885f6         test rsi, rsi
0x00006643      53             push rbx
0x00006644      4889f3         mov rbx, rsi
0x00006647      7505           jne 0x664e
0x00006649      4885ff         test rdi, rdi
0x0000664c      751a           jne 0x6668
0x0000664e      4889de         mov rsi, rbx
0x00006651      e8cab1ffff     call sym.imp.realloc
0x00006656      4885c0         test rax, rax
0x00006659      7505           jne 0x6660
0x0000665b      4885db         test rbx, rbx
0x0000665e      7511           jne 0x6671                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00006660      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00006661      c3             ret
0x00006662      660f1f440000   nop word [rax + rax]
0x00006668      e883afffff     call sym.imp.free
0x0000666d      31c0           xor eax, eax
0x0000666f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00006670      c3             ret
0x00006671      e8ba010000     call sym.xalloc_die
0x00006676      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00006680      4889f0         mov rax, rsi
0x00006683      48f7e2         mul rdx
0x00006686      4889c6         mov rsi, rax
0x00006689      0f90c0         seto al
0x0000668c      4885f6         test rsi, rsi
0x0000668f      780a           js 0x669b
0x00006691      0fb6c0         movzx eax, al
0x00006694      4885c0         test rax, rax
0x00006697      7502           jne 0x669b
0x00006699      eba5           jmp sym.xrealloc
0x0000669b      4883ec08       sub rsp, 8
0x0000669f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x000066a4      6690           nop
0x000066a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x000066b0      4885ff         test rdi, rdi
0x000066b3      4989d1         mov r9, rdx
0x000066b6      488b0e         mov rcx, qword [rsi]
0x000066b9      7435           je 0x66f0
0x000066bb      31d2           xor edx, edx
0x000066bd      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x000066c7      49f7f1         div r9
0x000066ca      4839c8         cmp rax, rcx
0x000066cd      763c           jbe 0x670b
0x000066cf      4889c8         mov rax, rcx
0x000066d2      48d1e8         shr rax, 1
0x000066d5      488d4c0801     lea rcx, [rax + rcx + 1]
0x000066da      48890e         mov qword [rsi], rcx
0x000066dd      490fafc9       imul rcx, r9
0x000066e1      4889ce         mov rsi, rcx
0x000066e4      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x000066e9      0f1f80000000.  nop dword [rax]
0x000066f0      4885c9         test rcx, rcx
0x000066f3      7423           je 0x6718
0x000066f5      4889c8         mov rax, rcx
0x000066f8      49f7e1         mul r9
0x000066fb      0f90c2         seto dl
0x000066fe      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00006701      0fb6d2         movzx edx, dl
0x00006704      7805           js 0x670b
0x00006706      4885d2         test rdx, rdx
0x00006709      74cf           je 0x66da
0x0000670b      4883ec08       sub rsp, 8
0x0000670f      e81c010000     call sym.xalloc_die
0x00006714      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00006718      31d2           xor edx, edx
0x0000671a      b880000000     mov eax, 0x80
0x0000671f      4531c0         xor r8d, r8d
0x00006722      49f7f1         div r9
0x00006725      4885c0         test rax, rax
0x00006728      410f94c0       sete r8b
0x0000672c      498d0c00       lea rcx, [r8 + rax]
0x00006730      ebc3           jmp 0x66f5
0x00006732      0f1f4000       nop dword [rax]
0x00006736      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00006740      4885ff         test rdi, rdi
0x00006743      488b06         mov rax, qword [rsi]
0x00006746      7428           je 0x6770
0x00006748      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00006752      4839d0         cmp rax, rdx
0x00006755      772a           ja 0x6781
0x00006757      4889c2         mov rdx, rax
0x0000675a      48d1ea         shr rdx, 1
0x0000675d      488d440201     lea rax, [rdx + rax + 1]
0x00006762      488906         mov qword [rsi], rax
0x00006765      4889c6         mov rsi, rax
0x00006768      e9d3feffff     jmp sym.xrealloc
0x0000676d      0f1f00         nop dword [rax]
0x00006770      4885c0         test rax, rax
0x00006773      ba80000000     mov edx, 0x80
0x00006778      480f44c2       cmove rax, rdx
0x0000677c      4885c0         test rax, rax
0x0000677f      79e1           jns 0x6762
0x00006781      4883ec08       sub rsp, 8
0x00006785      e8a6000000     call sym.xalloc_die
0x0000678a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00006790      53             push rbx
0x00006791      4889fb         mov rbx, rdi
0x00006794      e847feffff     call sym.xmalloc
0x00006799      4889da         mov rdx, rbx
0x0000679c      31f6           xor esi, esi
0x0000679e      4889c7         mov rdi, rax
0x000067a1      5b             pop rbx
0x000067a2      e999afffff     jmp sym.imp.memset
0x000067a7      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x000067b0      4889f8         mov rax, rdi
0x000067b3      4883ec08       sub rsp, 8
0x000067b7      48f7e6         mul rsi
0x000067ba      0f90c2         seto dl
0x000067bd      4885c0         test rax, rax
0x000067c0      7817           js 0x67d9
0x000067c2      0fb6d2         movzx edx, dl
0x000067c5      4885d2         test rdx, rdx
0x000067c8      750f           jne 0x67d9
0x000067ca      e8d1afffff     call sym.imp.calloc
0x000067cf      4885c0         test rax, rax
0x000067d2      7405           je 0x67d9
0x000067d4      4883c408       add rsp, 8
0x000067d8      c3             ret
0x000067d9      e852000000     call sym.xalloc_die
0x000067de      6690           nop
;-- xmemdup:
0x000067e0      55             push rbp
0x000067e1      53             push rbx
0x000067e2      4889fd         mov rbp, rdi
0x000067e5      4889f7         mov rdi, rsi
0x000067e8      4889f3         mov rbx, rsi
0x000067eb      4883ec08       sub rsp, 8
0x000067ef      e8ecfdffff     call sym.xmalloc
0x000067f4      4883c408       add rsp, 8
0x000067f8      4889da         mov rdx, rbx
0x000067fb      4889ee         mov rsi, rbp
0x000067fe      5b             pop rbx
0x000067ff      5d             pop rbp
0x00006800      4889c7         mov rdi, rax
0x00006803      e9a8afffff     jmp sym.imp.memcpy
0x00006808      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00006810      53             push rbx
0x00006811      4889fb         mov rbx, rdi
0x00006814      e897aeffff     call sym.imp.strlen
0x00006819      4889df         mov rdi, rbx
0x0000681c      488d7001       lea rsi, [rax + 1]
0x00006820      5b             pop rbx
0x00006821      ebbd           jmp sym.xmemdup
0x00006823      662e0f1f8400.  nop word cs:[rax + rax]
0x0000682d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00006830      488d35b82300.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x8bef ; "memory exhausted"
0x00006837      4883ec08       sub rsp, 8
0x0000683b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00006840      31ff           xor edi, edi
0x00006842      e849aeffff     call sym.imp.dcgettext
0x00006847      8b3dcb472000   mov edi, dword [obj.exit_failure]       ; [0x20b018:4]=1
0x0000684d      488d15041b00.  lea rdx, [0x00008358]                   ; "%s"
0x00006854      4889c1         mov rcx, rax
0x00006857      31f6           xor esi, esi
0x00006859      31c0           xor eax, eax
0x0000685b      e8f0afffff     call sym.imp.error
0x00006860      e89badffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00006865      662e0f1f8400.  nop word cs:[rax + rax]
0x0000686f      90             nop
;-- xstrtoumax:
0x00006870      4157           push r15
0x00006872      4156           push r14
0x00006874      4155           push r13
0x00006876      4154           push r12
0x00006878      55             push rbp
0x00006879      53             push rbx
0x0000687a      4883ec28       sub rsp, 0x28
0x0000687e      64488b042528.  mov rax, qword fs:[0x28]
0x00006887      4889442418     mov qword [rsp + 0x18], rax
0x0000688c      31c0           xor eax, eax
0x0000688e      83fa24         cmp edx, 0x24
0x00006891      0f875e030000   ja 0x6bf5
0x00006897      488d442410     lea rax, [rsp + 0x10]
0x0000689c      4989f7         mov r15, rsi
0x0000689f      4885f6         test rsi, rsi
0x000068a2      4889fd         mov rbp, rdi
0x000068a5      89542408       mov dword [rsp + 8], edx
0x000068a9      4989ce         mov r14, rcx
0x000068ac      4d89c5         mov r13, r8
0x000068af      4c0f44f8       cmove r15, rax
0x000068b3      e858adffff     call sym.imp.__errno_location
0x000068b8      c70000000000   mov dword [rax], 0
0x000068be      4989c4         mov r12, rax
0x000068c1      0fb65d00       movzx ebx, byte [rbp]
0x000068c5      e816b0ffff     call sym.imp.__ctype_b_loc
0x000068ca      8b542408       mov edx, dword [rsp + 8]
0x000068ce      488b30         mov rsi, qword [rax]
0x000068d1      4889e8         mov rax, rbp
0x000068d4      eb11           jmp 0x68e7
0x000068d6      662e0f1f8400.  nop word cs:[rax + rax]
0x000068e0      4883c001       add rax, 1
0x000068e4      0fb618         movzx ebx, byte [rax]
0x000068e7      0fb6cb         movzx ecx, bl
0x000068ea      f6444e0120     test byte [rsi + rcx*2 + 1], 0x20
0x000068ef      75ef           jne 0x68e0
0x000068f1      80fb2d         cmp bl, 0x2d
0x000068f4      7452           je 0x6948
0x000068f6      31c9           xor ecx, ecx
0x000068f8      4c89fe         mov rsi, r15
0x000068fb      4889ef         mov rdi, rbp
0x000068fe      e82daeffff     call sym.imp.__strtoul_internal
0x00006903      498b0f         mov rcx, qword [r15]
0x00006906      4889c3         mov rbx, rax
0x00006909      4839e9         cmp rcx, rbp
0x0000690c      742a           je 0x6938
0x0000690e      418b0424       mov eax, dword [r12]
0x00006912      85c0           test eax, eax
0x00006914      7462           je 0x6978
0x00006916      83f822         cmp eax, 0x22
0x00006919      bd01000000     mov ebp, 1
0x0000691e      7528           jne 0x6948
0x00006920      4d85ed         test r13, r13
0x00006923      7409           je 0x692e
0x00006925      440fb621       movzx r12d, byte [rcx]
0x00006929      4584e4         test r12b, r12b
0x0000692c      7579           jne 0x69a7
0x0000692e      49891e         mov qword [r14], rbx
0x00006931      eb1a           jmp 0x694d
0x00006933      0f1f440000     nop dword [rax + rax]
0x00006938      4d85ed         test r13, r13
0x0000693b      48894c2408     mov qword [rsp + 8], rcx
0x00006940      753e           jne 0x6980
0x00006942      660f1f440000   nop word [rax + rax]
0x00006948      bd04000000     mov ebp, 4
0x0000694d      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00006952      6448333c2528.  xor rdi, qword fs:[0x28]
0x0000695b      89e8           mov eax, ebp
0x0000695d      0f858d020000   jne 0x6bf0
0x00006963      4883c428       add rsp, 0x28
0x00006967      5b             pop rbx
0x00006968      5d             pop rbp
0x00006969      415c           pop r12
0x0000696b      415d           pop r13
0x0000696d      415e           pop r14
0x0000696f      415f           pop r15
0x00006971      c3             ret
0x00006972      660f1f440000   nop word [rax + rax]
0x00006978      31ed           xor ebp, ebp
0x0000697a      eba4           jmp 0x6920
0x0000697c      0f1f4000       nop dword [rax]
0x00006980      440fb66500     movzx r12d, byte [rbp]
0x00006985      4584e4         test r12b, r12b
0x00006988      74be           je 0x6948
0x0000698a      410fbef4       movsx esi, r12b
0x0000698e      4c89ef         mov rdi, r13
0x00006991      31ed           xor ebp, ebp
0x00006993      e858adffff     call sym.imp.strchr
0x00006998      4885c0         test rax, rax
0x0000699b      bb01000000     mov ebx, 1
0x000069a0      488b4c2408     mov rcx, qword [rsp + 8]
0x000069a5      74a1           je 0x6948
0x000069a7      410fbef4       movsx esi, r12b
0x000069ab      4c89ef         mov rdi, r13
0x000069ae      48894c2408     mov qword [rsp + 8], rcx
0x000069b3      e838adffff     call sym.imp.strchr
0x000069b8      4885c0         test rax, rax
0x000069bb      488b4c2408     mov rcx, qword [rsp + 8]
0x000069c0      0f84c6000000   je 0x6a8c
0x000069c6      418d4424bb     lea eax, [r12 - 0x45]
0x000069cb      3c2f           cmp al, 0x2f
0x000069cd      7751           ja 0x6a20
0x000069cf      48ba45893000.  movabs rdx, 0x814400308945
0x000069d9      480fa3c2       bt rdx, rax
0x000069dd      7341           jae 0x6a20
0x000069df      be30000000     mov esi, 0x30                           ; '0'
0x000069e4      4c89ef         mov rdi, r13
0x000069e7      48894c2408     mov qword [rsp + 8], rcx
0x000069ec      e8ffacffff     call sym.imp.strchr
0x000069f1      4885c0         test rax, rax
0x000069f4      488b4c2408     mov rcx, qword [rsp + 8]
0x000069f9      7425           je 0x6a20
0x000069fb      0fb64101       movzx eax, byte [rcx + 1]
0x000069ff      3c44           cmp al, 0x44
0x00006a01      740c           je 0x6a0f
0x00006a03      3c69           cmp al, 0x69
0x00006a05      0f84cd010000   je 0x6bd8
0x00006a0b      3c42           cmp al, 0x42
0x00006a0d      7511           jne 0x6a20
0x00006a0f      bf02000000     mov edi, 2
0x00006a14      bee8030000     mov esi, 0x3e8
0x00006a19      eb0f           jmp 0x6a2a
0x00006a1b      0f1f440000     nop dword [rax + rax]
0x00006a20      bf01000000     mov edi, 1
0x00006a25      be00040000     mov esi, 0x400
0x00006a2a      4183ec42       sub r12d, 0x42
0x00006a2e      4180fc35       cmp r12b, 0x35
0x00006a32      7758           ja 0x6a8c
0x00006a34      488d150d2200.  lea rdx, [0x00008c48]
0x00006a3b      450fb6e4       movzx r12d, r12b
0x00006a3f      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00006a43      4801d0         add rax, rdx
0x00006a46      ffe0           jmp rax
0x00006a48      4889d8         mov rax, rbx
0x00006a4b      48f7e6         mul rsi
0x00006a4e      0f80ed010000   jo 0x6c41
0x00006a54      4531c0         xor r8d, r8d
0x00006a57      48f7e6         mul rsi
0x00006a5a      0f80d2010000   jo 0x6c32
0x00006a60      4889c3         mov rbx, rax
0x00006a63      4409c5         or ebp, r8d
0x00006a66      662e0f1f8400.  nop word cs:[rax + rax]
0x00006a70      4863ff         movsxd rdi, edi
0x00006a73      89e8           mov eax, ebp
0x00006a75      4801f9         add rcx, rdi
0x00006a78      83c802         or eax, 2
0x00006a7b      49890f         mov qword [r15], rcx
0x00006a7e      803900         cmp byte [rcx], 0
0x00006a81      49891e         mov qword [r14], rbx
0x00006a84      0f45e8         cmovne ebp, eax
0x00006a87      e9c1feffff     jmp 0x694d
0x00006a8c      49891e         mov qword [r14], rbx
0x00006a8f      83cd02         or ebp, 2
0x00006a92      e9b6feffff     jmp 0x694d
0x00006a97      ba02000000     mov edx, 2
0x00006a9c      4889d0         mov rax, rdx
0x00006a9f      48f7e3         mul rbx
0x00006aa2      0f8096000000   jo 0x6b3e
0x00006aa8      4801db         add rbx, rbx
0x00006aab      ebc3           jmp 0x6a70
0x00006aad      ba00020000     mov edx, 0x200
0x00006ab2      4889d0         mov rax, rdx
0x00006ab5      48f7e3         mul rbx
0x00006ab8      0f8080000000   jo 0x6b3e
0x00006abe      48c1e309       shl rbx, 9
0x00006ac2      ebac           jmp 0x6a70
0x00006ac4      41b807000000   mov r8d, 7
0x00006aca      4531c9         xor r9d, r9d
0x00006acd      0f1f00         nop dword [rax]
0x00006ad0      4889d8         mov rax, rbx
0x00006ad3      48f7e6         mul rsi
0x00006ad6      4889c3         mov rbx, rax
0x00006ad9      0f808f010000   jo 0x6c6e
0x00006adf      4183e801       sub r8d, 1
0x00006ae3      75eb           jne 0x6ad0
0x00006ae5      4409cd         or ebp, r9d
0x00006ae8      eb86           jmp 0x6a70
0x00006aea      41b808000000   mov r8d, 8
0x00006af0      4531c9         xor r9d, r9d
0x00006af3      0f1f440000     nop dword [rax + rax]
0x00006af8      4889d8         mov rax, rbx
0x00006afb      48f7e6         mul rsi
0x00006afe      4889c3         mov rbx, rax
0x00006b01      0f8049010000   jo 0x6c50
0x00006b07      4183e801       sub r8d, 1
0x00006b0b      75eb           jne 0x6af8
0x00006b0d      ebd6           jmp 0x6ae5
0x00006b0f      41b804000000   mov r8d, 4
0x00006b15      4531c9         xor r9d, r9d
0x00006b18      4889d8         mov rax, rbx
0x00006b1b      48f7e6         mul rsi
0x00006b1e      4889c3         mov rbx, rax
0x00006b21      0f80fc000000   jo 0x6c23
0x00006b27      4183e801       sub r8d, 1
0x00006b2b      75eb           jne 0x6b18
0x00006b2d      ebb6           jmp 0x6ae5
0x00006b2f      4889d8         mov rax, rbx
0x00006b32      48f7e6         mul rsi
0x00006b35      4889c3         mov rbx, rax
0x00006b38      0f8132ffffff   jno 0x6a70
0x00006b3e      bd01000000     mov ebp, 1
0x00006b43      4883cbff       or rbx, 0xffffffffffffffff
0x00006b47      e924ffffff     jmp 0x6a70
0x00006b4c      0f1f4000       nop dword [rax]
0x00006b50      41b805000000   mov r8d, 5
0x00006b56      4531c9         xor r9d, r9d
0x00006b59      4889d8         mov rax, rbx
0x00006b5c      48f7e6         mul rsi
0x00006b5f      4889c3         mov rbx, rax
0x00006b62      0f80f7000000   jo 0x6c5f
0x00006b68      4183e801       sub r8d, 1
0x00006b6c      75eb           jne 0x6b59
0x00006b6e      e972ffffff     jmp 0x6ae5
0x00006b73      41b806000000   mov r8d, 6
0x00006b79      4531c9         xor r9d, r9d
0x00006b7c      4889d8         mov rax, rbx
0x00006b7f      48f7e6         mul rsi
0x00006b82      4889c3         mov rbx, rax
0x00006b85      0f8089000000   jo 0x6c14
0x00006b8b      4183e801       sub r8d, 1
0x00006b8f      75eb           jne 0x6b7c
0x00006b91      e94fffffff     jmp 0x6ae5
0x00006b96      ba00040000     mov edx, 0x400
0x00006b9b      4889d0         mov rax, rdx
0x00006b9e      48f7e3         mul rbx
0x00006ba1      709b           jo 0x6b3e
0x00006ba3      48c1e30a       shl rbx, 0xa
0x00006ba7      e9c4feffff     jmp 0x6a70
0x00006bac      4889d8         mov rax, rbx
0x00006baf      48f7e6         mul rsi
0x00006bb2      0f80c5000000   jo 0x6c7d
0x00006bb8      4531c0         xor r8d, r8d
0x00006bbb      48f7e6         mul rsi
0x00006bbe      0f8193feffff   jno 0x6a57
0x00006bc4      41b801000000   mov r8d, 1
0x00006bca      4883c8ff       or rax, 0xffffffffffffffff
0x00006bce      e984feffff     jmp 0x6a57
0x00006bd3      0f1f440000     nop dword [rax + rax]
0x00006bd8      31ff           xor edi, edi
0x00006bda      80790242       cmp byte [rcx + 2], 0x42
0x00006bde      be00040000     mov esi, 0x400
0x00006be3      400f94c7       sete dil
0x00006be7      8d7c3f01       lea edi, [rdi + rdi + 1]
0x00006beb      e93afeffff     jmp 0x6a2a
0x00006bf0      e8cbaaffff     call sym.imp.__stack_chk_fail
0x00006bf5      488d0d242100.  lea rcx, obj.__PRETTY_FUNCTION__.4162   ; 0x8d20 ; "xstrtoumax"
0x00006bfc      488d35fd1f00.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0x8c00 ; "../coreutils-8.31/lib/xstrtol.c"
0x00006c03      488d3d162000.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0x8c20 ; "0 <= strtol_base && strtol_base <= 36"
0x00006c0a      ba54000000     mov edx, 0x54                           ; 'T'
0x00006c0f      e80cabffff     call sym.imp.__assert_fail
0x00006c14      41b901000000   mov r9d, 1
0x00006c1a      4883cbff       or rbx, 0xffffffffffffffff
0x00006c1e      e968ffffff     jmp 0x6b8b
0x00006c23      41b901000000   mov r9d, 1
0x00006c29      4883cbff       or rbx, 0xffffffffffffffff
0x00006c2d      e9f5feffff     jmp 0x6b27
0x00006c32      41b801000000   mov r8d, 1
0x00006c38      4883cbff       or rbx, 0xffffffffffffffff
0x00006c3c      e922feffff     jmp 0x6a63
0x00006c41      4883c8ff       or rax, 0xffffffffffffffff
0x00006c45      41b801000000   mov r8d, 1
0x00006c4b      e907feffff     jmp 0x6a57
0x00006c50      41b901000000   mov r9d, 1
0x00006c56      4883cbff       or rbx, 0xffffffffffffffff
0x00006c5a      e9a8feffff     jmp 0x6b07
0x00006c5f      41b901000000   mov r9d, 1
0x00006c65      4883cbff       or rbx, 0xffffffffffffffff
0x00006c69      e9fafeffff     jmp 0x6b68
0x00006c6e      41b901000000   mov r9d, 1
0x00006c74      4883cbff       or rbx, 0xffffffffffffffff
0x00006c78      e962feffff     jmp 0x6adf
0x00006c7d      41b801000000   mov r8d, 1
0x00006c83      4883c8ff       or rax, 0xffffffffffffffff
0x00006c87      e92fffffff     jmp 0x6bbb
0x00006c8c      0f1f4000       nop dword [rax]
;-- rpl_mbrtowc:
0x00006c90      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00006c92      4154           push r12
0x00006c94      4989f5         mov r13, rsi
0x00006c97      55             push rbp
0x00006c98      53             push rbx
0x00006c99      4889fb         mov rbx, rdi
0x00006c9c      4989d4         mov r12, rdx
0x00006c9f      4883ec18       sub rsp, 0x18
0x00006ca3      64488b042528.  mov rax, qword fs:[0x28]
0x00006cac      4889442408     mov qword [rsp + 8], rax
0x00006cb1      31c0           xor eax, eax
0x00006cb3      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00006cb8      4885ff         test rdi, rdi
0x00006cbb      480f44d8       cmove rbx, rax
0x00006cbf      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00006cc2      e819aaffff     call sym.imp.mbrtowc
0x00006cc7      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00006ccb      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00006cce      7620           jbe 0x6cf0                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00006cd0      4d85e4         test r12, r12
0x00006cd3      741b           je 0x6cf0
0x00006cd5      31ff           xor edi, edi
0x00006cd7      e8c4000000     call sym.hard_locale
0x00006cdc      84c0           test al, al
0x00006cde      7510           jne 0x6cf0
0x00006ce0      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00006ce5      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x00006cea      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00006cec      0f1f4000       nop dword [rax]
0x00006cf0      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00006cf5      644833142528.  xor rdx, qword fs:[0x28]
0x00006cfe      4889e8         mov rax, rbp
0x00006d01      750b           jne 0x6d0e
0x00006d03      4883c418       add rsp, 0x18
0x00006d07      5b             pop rbx
0x00006d08      5d             pop rbp
0x00006d09      415c           pop r12
0x00006d0b      415d           pop r13
0x00006d0d      c3             ret
0x00006d0e      e8ada9ffff     call sym.imp.__stack_chk_fail
0x00006d13      662e0f1f8400.  nop word cs:[rax + rax]
0x00006d1d      0f1f00         nop dword [rax]
;-- close_stream:
0x00006d20      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00006d22      55             push rbp
0x00006d23      4889fd         mov rbp, rdi
0x00006d26      53             push rbx
0x00006d27      e814a9ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x00006d2c      8b5d00         mov ebx, dword [rbp]
0x00006d2f      4889ef         mov rdi, rbp
0x00006d32      4989c4         mov r12, rax
0x00006d35      e806010000     call sym.rpl_fclose
0x00006d3a      83e320         and ebx, 0x20                           ; "@"
0x00006d3d      85db           test ebx, ebx
0x00006d3f      7517           jne 0x6d58
0x00006d41      85c0           test eax, eax
0x00006d43      740a           je 0x6d4f                               ; stdio.h:-186
0x00006d45      4d85e4         test r12, r12                           ; stdio.h:-178
0x00006d48      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00006d4d      7439           je 0x6d88
0x00006d4f      5b             pop rbx
0x00006d50      5d             pop rbp
0x00006d51      415c           pop r12
0x00006d53      c3             ret
0x00006d54      0f1f4000       nop dword [rax]
0x00006d58      85c0           test eax, eax
0x00006d5a      751c           jne 0x6d78
0x00006d5c      e8afa8ffff     call sym.imp.__errno_location
0x00006d61      c70000000000   mov dword [rax], 0
0x00006d67      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00006d6c      5b             pop rbx
0x00006d6d      5d             pop rbp
0x00006d6e      415c           pop r12
0x00006d70      c3             ret
0x00006d71      0f1f80000000.  nop dword [rax]
0x00006d78      5b             pop rbx
0x00006d79      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00006d7e      5d             pop rbp                                 ; stdio.h:-186
0x00006d7f      415c           pop r12
0x00006d81      c3             ret
0x00006d82      660f1f440000   nop word [rax + rax]
0x00006d88      e883a8ffff     call sym.imp.__errno_location
0x00006d8d      833809         cmp dword [rax], 9
0x00006d90      5b             pop rbx
0x00006d91      5d             pop rbp
0x00006d92      415c           pop r12                                 ; stdio.h:-178
0x00006d94      0f95c0         setne al
0x00006d97      0fb6c0         movzx eax, al
0x00006d9a      f7d8           neg eax
0x00006d9c      c3             ret
0x00006d9d      0f1f00         nop dword [rax]
;-- hard_locale:
0x00006da0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00006da4      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00006da6      e885aaffff     call sym.imp.setlocale
0x00006dab      4889c2         mov rdx, rax
0x00006dae      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00006db3      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00006db6      741d           je 0x6dd5
0x00006db8      488d3d9f0300.  lea rdi, [0x0000715e]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x00006dbf      b902000000     mov ecx, 2
0x00006dc4      4889d6         mov rsi, rdx
0x00006dc7      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00006dc9      0f97c1         seta cl
0x00006dcc      80d900         sbb cl, 0
0x00006dcf      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00006dd1      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00006dd3      750b           jne 0x6de0
0x00006dd5      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00006dd9      c3             ret
0x00006dda      660f1f440000   nop word [rax + rax]
0x00006de0      488d3d441f00.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x8d2b ; "POSIX"
0x00006de7      b906000000     mov ecx, 6
0x00006dec      4889d6         mov rsi, rdx
0x00006def      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00006df1      0f97c0         seta al
0x00006df4      1c00           sbb al, 0
0x00006df6      84c0           test al, al
0x00006df8      0f95c0         setne al
0x00006dfb      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00006dff      c3             ret
;-- locale_charset:
0x00006e00      4883ec08       sub rsp, 8
0x00006e04      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00006e09      e8e2a9ffff     call sym.imp.nl_langinfo
0x00006e0e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00006e11      741d           je 0x6e30
0x00006e13      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00006e16      488d15141f00.  lea rdx, str.ASCII                      ; 0x8d31 ; "ASCII"
0x00006e1d      480f44c2       cmove rax, rdx
0x00006e21      4883c408       add rsp, 8
0x00006e25      c3             ret
0x00006e26      662e0f1f8400.  nop word cs:[rax + rax]
0x00006e30      488d05fa1e00.  lea rax, str.ASCII                      ; 0x8d31 ; "ASCII"
0x00006e37      4883c408       add rsp, 8
0x00006e3b      c3             ret
0x00006e3c      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x00006e40      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00006e42      55             push rbp
0x00006e43      53             push rbx
0x00006e44      4889fb         mov rbx, rdi
0x00006e47      e874a9ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x00006e4c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x00006e4e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00006e51      7854           js 0x6ea7                               ; ../coreutils-8.31/lib/fclose.c:66
0x00006e53      e8a8a9ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00006e58      85c0           test eax, eax
0x00006e5a      752c           jne 0x6e88
0x00006e5c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x00006e5f      e85c000000     call sym.rpl_fflush
0x00006e64      85c0           test eax, eax
0x00006e66      743c           je 0x6ea4
0x00006e68      e8a3a7ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x00006e6d      448b20         mov r12d, dword [rax]
0x00006e70      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00006e73      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00006e76      e8e5a7ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x00006e7b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x00006e7e      7530           jne 0x6eb0
0x00006e80      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00006e81      5d             pop rbp
0x00006e82      415c           pop r12
0x00006e84      c3             ret
0x00006e85      0f1f00         nop dword [rax]
0x00006e88      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x00006e8b      e830a9ffff     call sym.imp.fileno
0x00006e90      31f6           xor esi, esi
0x00006e92      ba01000000     mov edx, 1
0x00006e97      89c7           mov edi, eax
0x00006e99      e872a8ffff     call sym.imp.lseek
0x00006e9e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006ea2      75b8           jne 0x6e5c
0x00006ea4      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00006ea7      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00006ea8      5d             pop rbp
0x00006ea9      415c           pop r12
0x00006eab      e9b0a7ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00006eb0      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00006eb4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00006eb9      ebc5           jmp 0x6e80
0x00006ebb      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x00006ec0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00006ec3      53             push rbx
0x00006ec4      4889fb         mov rbx, rdi
0x00006ec7      7411           je 0x6eda                               ; ../coreutils-8.31/lib/fflush.c:150
0x00006ec9      e832a9ffff     call sym.imp.__freading
0x00006ece      85c0           test eax, eax
0x00006ed0      7408           je 0x6eda
0x00006ed2      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00006ed8      750e           jne 0x6ee8
0x00006eda      4889df         mov rdi, rbx
0x00006edd      5b             pop rbx
0x00006ede      e9fda8ffff     jmp sym.imp.fflush
0x00006ee3      0f1f440000     nop dword [rax + rax]
0x00006ee8      4889df         mov rdi, rbx
0x00006eeb      ba01000000     mov edx, 1
0x00006ef0      31f6           xor esi, esi
0x00006ef2      e809000000     call sym.rpl_fseeko
0x00006ef7      4889df         mov rdi, rbx
0x00006efa      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x00006efb      e9e0a8ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00006f00      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00006f04      48394710       cmp qword [rdi + 0x10], rax
0x00006f08      7406           je 0x6f10                               ; ../coreutils-8.31/lib/fseeko.c:32
0x00006f0a      e951a9ffff     jmp sym.imp.fseeko                      ; /sys_errlist.h:9
0x00006f0f      90             nop
0x00006f10      488b4720       mov rax, qword [rdi + 0x20]
0x00006f14      48394728       cmp qword [rdi + 0x28], rax
0x00006f18      75f0           jne 0x6f0a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x00006f1a      48837f4800     cmp qword [rdi + 0x48], 0
0x00006f1f      75e9           jne 0x6f0a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00006f21      4154           push r12
0x00006f23      55             push rbp
0x00006f24      4189d4         mov r12d, edx
0x00006f27      53             push rbx
0x00006f28      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x00006f2b      4889fb         mov rbx, rdi
0x00006f2e      e88da8ffff     call sym.imp.fileno
0x00006f33      4489e2         mov edx, r12d
0x00006f36      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00006f39      89c7           mov edi, eax                            ; /sys_errlist.h:17
0x00006f3b      e8d0a7ffff     call sym.imp.lseek
0x00006f40      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006f44      740c           je 0x6f52
0x00006f46      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00006f49      488983900000.  mov qword [rbx + 0x90], rax
0x00006f50      31c0           xor eax, eax
0x00006f52      5b             pop rbx                                 ; /sys_errlist.h:19
0x00006f53      5d             pop rbp
0x00006f54      415c           pop r12
0x00006f56      c3             ret
0x00006f57      660f1f840000.  nop word [rax + rax]
;-- __libc_csu_init:
0x00006f60      4157           push r15
0x00006f62      4156           push r14
0x00006f64      4989d7         mov r15, rdx
0x00006f67      4155           push r13
0x00006f69      4154           push r12
0x00006f6b      4c8d251e3b20.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x20aa90
0x00006f72      55             push rbp
0x00006f73      488d2d1e3b20.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x20aa98 ; "`'"
0x00006f7a      53             push rbx
0x00006f7b      4189fd         mov r13d, edi
0x00006f7e      4989f6         mov r14, rsi
0x00006f81      4c29e5         sub rbp, r12
0x00006f84      4883ec08       sub rsp, 8
0x00006f88      48c1fd03       sar rbp, 3
0x00006f8c      e81fa6ffff     call sym._init
0x00006f91      4885ed         test rbp, rbp
0x00006f94      7420           je 0x6fb6
0x00006f96      31db           xor ebx, ebx
0x00006f98      0f1f84000000.  nop dword [rax + rax]
0x00006fa0      4c89fa         mov rdx, r15
0x00006fa3      4c89f6         mov rsi, r14
0x00006fa6      4489ef         mov edi, r13d
0x00006fa9      41ff14dc       call qword [r12 + rbx*8]
0x00006fad      4883c301       add rbx, 1
0x00006fb1      4839dd         cmp rbp, rbx
0x00006fb4      75ea           jne 0x6fa0
0x00006fb6      4883c408       add rsp, 8
0x00006fba      5b             pop rbx
0x00006fbb      5d             pop rbp
0x00006fbc      415c           pop r12
0x00006fbe      415d           pop r13
0x00006fc0      415e           pop r14
0x00006fc2      415f           pop r15
0x00006fc4      c3             ret
0x00006fc5      90             nop
0x00006fc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00006fd0      f3c3           ret
0x00006fd2      662e0f1f8400.  nop word cs:[rax + rax]
0x00006fdc      0f1f4000       nop dword [rax]
;-- atexit:
0x00006fe0      488b15214020.  mov rdx, qword [obj.__dso_handle]       ; [0x20b008:8]=0x20b008 obj.__dso_handle
0x00006fe7      31f6           xor esi, esi
0x00006fe9      e982a8ffff     jmp sym.imp.__cxa_atexit
0x00006fee      0000           add byte [rax], al
